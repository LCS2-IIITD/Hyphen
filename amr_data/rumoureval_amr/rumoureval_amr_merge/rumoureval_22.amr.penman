# ::subgraphs [["c1-5", "c1-11", "c1-13", "c1-0", "c1-2", "c1-15", "c1-4", "c1-8", "c1-14", "c1-9", "c1-3", "c1-1", "c1-10", "c1-6", "c1-7", "c1-12"], ["c2-0", "c2-4", "c2-3", "c2-5", "c2-2", "c2-1"], ["c3-7", "c3-2", "c3-3", "c3-8", "c3-5", "c3-0", "c3-4", "c3-6", "c3-1"], ["c4-3", "c4-2", "c4-0", "c4-1"]]
(d / dummy
   :COMMENT (c1-5 / multi
                  :snt1 (c1-11 / recommend
                               :ARG1 (c1-13 / send
                                            :ARG0 (c1-0 / you)
                                            :ARG1 (c1-2 / set
                                                        :consist-of (c1-15 / ball
                                                                           :mod (c1-4 / tennis)))
                                            :ARG2 (c1-8 / person
                                                        :name (c1-14 / name
                                                                     :op1 "Prince")
                                                        :part (c1-9 / leg))
                                            :purpose c1-9))
                  :snt2 (c1-3 / have-degree
                              :ARG1 (c1-1 / slide
                                          :ARG2 (c1-10 / across
                                                       :op1 (c1-6 / stage)))
                              :ARG2 (c1-7 / easy)
                              :ARG3 (c1-12 / more))
                  :SAME c2-0)
   :COMMENT (c2-0 / multi
                  :snt1 (c2-4 / mean
                              :ARG0 (c2-3 / girl)
                              :polarity -
                              :mode imperative)
                  :snt2 (c2-5 / number
                              :domain (c2-2 / age)
                              :mod (c2-1 / nothing)
                              :polarity -))
   :COMMENT (c3-7 / excuse
                  :ARG1 (c3-2 / i
                              :SAME c4-2
                              :COREF c4-2)
                  :ARG2 (c3-3 / and
                              :op1 (c3-8 / be-located-at
                                         :ARG1 c3-2
                                         :ARG2 (c3-5 / amr
                                                     :SAME c3-6))
                              :op2 (c3-0 / invite
                                         :ARG0 c3-2
                                         :ARG1 (c3-4 / latter)
                                         :ARG2 (c3-6 / amr)
                                         :mod (c3-1 / duh
                                                    :mode expressive))))
   :COMMENT (c4-3 / try
                  :ARG0 (c4-2 / i)
                  :ARG1 (c4-0 / make-it
                              :ARG0 c4-2
                              :ARG1 (c4-1 / both))))
