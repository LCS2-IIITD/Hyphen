# ::subgraphs [["c1-3", "c1-0", "c1-4", "c1-2", "c1-5", "c1-1"], ["c2-2", "c2-0", "c2-5", "c2-7", "c2-8", "c2-11", "c2-6", "c2-10", "c2-3", "c2-9", "c2-1", "c2-4"], ["c3-2", "c3-1", "c3-0"], ["c4-3", "c4-2", "c4-0", "c4-1", "c4-4"], ["c5-3", "c5-9", "c5-0", "c5-2", "c5-1", "c5-8", "c5-6", "c5-4", "c5-10", "c5-5", "c5-7", "c5-11"], ["c6-3", "c6-1", "c6-2", "c6-0"], ["c7-1", "c7-0"], ["c8-3", "c8-1", "c8-6", "c8-8", "c8-5", "c8-0", "c8-2", "c8-4", "c8-9", "c8-7"], ["c9-31", "c9-23", "c9-34", "c9-1", "c9-10", "c9-15", "c9-6", "c9-26", "c9-8", "c9-24", "c9-13", "c9-25", "c9-28", "c9-16", "c9-17", "c9-7", "c9-29", "c9-30", "c9-2", "c9-32", "c9-20", "c9-19", "c9-21", "c9-3", "c9-27", "c9-12", "c9-35", "c9-11", "c9-9", "c9-33", "c9-5", "c9-0", "c9-4", "c9-14", "c9-18", "c9-22"], ["c10-5", "c10-0", "c10-2", "c10-1", "c10-3", "c10-4"], ["c11-6", "c11-2", "c11-1", "c11-5", "c11-4", "c11-0", "c11-7", "c11-8", "c11-3", "c11-9"], ["c12-3", "c12-1", "c12-4", "c12-2", "c12-0"], ["c13-1", "c13-0"]]
(d / dummy
   :COMMENT (c1-3 / read
                  :ARG0 (c1-0 / you
                              :SAME c9-0
                              :SAME c9-28
                              :SAME c9-10
                              :SAME c8-0
                              :SAME c5-0
                              :SAME c2-10
                              :SAME c2-0
                              :COREF c12-1
                              :COREF c9-25
                              :COREF c5-0
                              :COREF c2-10)
                  :ARG1 (c1-4 / sentence
                              :mod (c1-2 / this
                                         :SAME c5-2
                                         :SAME c2-1))
                  :time (c1-5 / now
                              :mod (c1-1 / right
                                         :SAME c9-7)
                              :SAME c9-17)
                  :SAME c5-9)
   :COMMENT (c2-2 / multi
                  :snt1 (c2-0 / you
                              :polarity (c2-5 / amr
                                              :SAME c8-7
                                              :SAME c8-6
                                              :SAME c2-7))
                  :snt2 (c2-7 / amr
                              :condition (c2-8 / and
                                               :op1 (c2-11 / be-located-at
                                                           :ARG1 (c2-6 / brain
                                                                       :part-of (c2-10 / you)
                                                                       :SAME c3-1)
                                                           :ARG2 (c2-3 / vat))
                                               :op2 (c2-9 / simulate
                                                          :ARG1 (c2-1 / this
                                                                      :mod (c2-4 / all))
                                                          :SAME c9-19)
                                               :SAME c9-8))
                  :SAME c9-31
                  :SAME c8-3
                  :SAME c5-3)
   :COMMENT (c3-2 / theory
                  :mod (c3-1 / brain
                             :location (c3-0 / jar)))
   :COMMENT (c4-3 / resemble
                  :ARG1 (c4-2 / it
                              :SAME c11-4)
                  :ARG2 (c4-0 / cat
                              :poss (c4-1 / person
                                          :name (c4-4 / name
                                                      :op1 "Schrodinger"
                                                      :SAME c13-0)
                                          :SAME c13-1)))
   :COMMENT (c5-3 / multi
                  :snt1 (c5-9 / read
                              :ARG0 (c5-0 / you)
                              :ARG1 (c5-2 / this)
                              :location (c5-1 / here)
                              :mod (c5-8 / as))
                  :snt2 (c5-6 / infer
                              :ARG1 (c5-4 / thing
                                          :ARG1-of (c5-10 / state
                                                          :SAME c8-9)
                                          :ARG1-of (c5-5 / true
                                                         :mod (c5-7 / potential))
                                          :quant (c5-11 / ton)
                                          :SAME c11-3
                                          :SAME c11-1
                                          :SAME c8-2)))
   :COMMENT (c6-3 / disagree
                  :ARG0 (c6-1 / someone
                              :location (c6-2 / somewhere))
                  :time (c6-0 / always
                              :SAME c12-2))
   :COMMENT (c7-1 / wet
                  :ARG1 (c7-0 / water
                              :SAME c8-8
                              :COREF c8-8)
                  :SAME c8-1)
   :COMMENT (c8-3 / multi
                  :snt1 (c8-1 / wet
                              :polarity (c8-6 / amr)
                              :ARG1 (c8-8 / water))
                  :snt2 (c8-5 / prove
                              :ARG0 (c8-0 / you)
                              :ARG1 (c8-2 / thing
                                          :mod (c8-4 / that)
                                          :ARG1-of (c8-9 / state))
                              :manner (c8-7 / amr)))
   :COMMENT (c9-31 / multi
                   :snt1 (c9-23 / depend
                                :ARG1 (c9-34 / much
                                             :quant-of (c9-1 / will
                                                             :ARG0 (c9-10 / you)
                                                             :ARG1 (c9-15 / sacrifice
                                                                          :ARG0 c9-10
                                                                          :ARG1 (c9-6 / logic
                                                                                      :SAME c9-18)
                                                                          :ARG2 (c9-26 / argue)))))
                   :snt2 (c9-8 / and
                               :op1 (c9-24 / possible
                                           :ARG1 (c9-13 / convince
                                                        :ARG0 (c9-25 / i
                                                                     :SAME c12-1)
                                                        :ARG1 (c9-28 / you)
                                                        :ARG2 (c9-16 / live
                                                                     :ARG0 c9-28
                                                                     :time (c9-17 / now
                                                                                  :mod (c9-7 / right)))
                                                        :mod (c9-29 / even))
                                           :condition (c9-30 / believe
                                                             :ARG0 c9-28
                                                             :ARG1 (c9-2 / have-polarity
                                                                         :ARG1 c9-16
                                                                         :ARG2 -))
                                           :polarity -
                                           :SAME c9-32)
                               :op2 (c9-32 / possible
                                           :ARG1 (c9-20 / slash
                                                        :op1 (c9-19 / simulate
                                                                    :ARG1 (c9-21 / slash
                                                                                 :op1 (c9-3 / dream
                                                                                            :ARG0 (c9-27 / anyone))
                                                                                 :op2 (c9-12 / induce
                                                                                             :ARG1 c9-27
                                                                                             :ARG2 (c9-35 / drug))))
                                                        :op2 (c9-11 / react
                                                                    :ARG0 c9-27
                                                                    :ARG1 c9-21
                                                                    :mod (c9-9 / chemical))
                                                        :time (c9-33 / before
                                                                     :op1 (c9-5 / die
                                                                                :ARG1 (c9-0 / you)))
                                                        :SAME c9-21)
                                           :polarity -)
                               :condition (c9-4 / include
                                                :ARG0 (c9-14 / we)
                                                :ARG1 (c9-18 / logic
                                                             :ARG0-of (c9-22 / function)))))
   :COMMENT (c10-5 / equal
                   :ARG1 (c10-0 / plus
                                :op1 2)
                   :condition (c10-2 / use
                                     :ARG1 (c10-1 / value
                                                  :mod (c10-3 / large
                                                              :degree (c10-4 / substantial)
                                                              :SAME c11-7)
                                                  :SAME c11-5))
                   :ARG2 5
                   :SAME c12-4)
   :COMMENT (c11-6 / answer
                   :ARG2 (c11-2 / mean
                                :ARG1 (c11-1 / thing)
                                :ARG2 (c11-5 / value
                                             :ARG1 (c11-4 / it)
                                             :ARG1-of (c11-0 / have-degree
                                                             :ARG2 (c11-7 / large)
                                                             :ARG3 (c11-8 / more)
                                                             :ARG4 (c11-3 / thing
                                                                          :ARG1-of (c11-9 / show)))
                                             :polarity -)))
   :COMMENT (c12-3 / say
                   :ARG0 (c12-1 / i)
                   :ARG1 (c12-4 / equal
                                :polarity -
                                :ARG1 +2)
                   :time (c12-2 / always)
                   :ARG1-of (c12-0 / simple))
   :COMMENT (c13-1 / person
                   :name (c13-0 / name
                                :op1 "Valar"
                                :op2 "Morghulis")))
