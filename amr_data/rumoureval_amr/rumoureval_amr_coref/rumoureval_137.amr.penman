# ::snt these mother fucker do not represent Muslims
# ::tokens ["these", "mother", "fucker", "do", "not", "represent", "Muslims"]
# ::lemmas ["these", "mother", "fucker", "do", "not", "represent", "Muslims"]
(c1-6 / represent-01
      :ARG0 (c1-5 / person
                  :ARG0-of (c1-2 / fuck-01
                                 :ARG1 (c1-3 / mother))
                  :mod (c1-1 / this))
      :ARG1 (c1-4 / person
                  :mod (c1-0 / religious-group
                             :name (c1-7 / name
                                         :op1 "Muslim")))
      :polarity -)

# ::snt Don't they have those machines that shoot loud focused waves at people to get them to submit?
# ::tokens ["Do", "n't", "they", "have", "those", "machines", "that", "shoot", "loud", "focused", "waves", "at", "people", "to", "get", "them", "to", "submit", "?"]
# ::lemmas ["do", "not", "they", "have", "those", "machine", "that", "shoot", "loud", "focused", "wave", "at", "people", "to", "get", "they", "to", "submit", "?"]
(c2-1 / have-03
      :ARG0 (c2-5 / they)
      :ARG1 (c2-4 / machine
                  :mod (c2-3 / that)
                  :ARG0-of (c2-11 / shoot-01
                                  :ARG1 (c2-0 / wave
                                              :ARG1-of (c2-6 / focus-01
                                                             :mod (c2-8 / loud)))
                                  :ARG2 (c2-7 / person)
                                  :purpose (c2-9 / get-04
                                                 :ARG0 c2-4
                                                 :ARG1 (c2-2 / submit-01
                                                             :ARG0 c2-7))))
      :ARG1-of (c2-10 / request-confirmation-91)
      :polarity -)

# ::snt just the Japanese whalers to keep paul Watson away
# ::tokens ["just", "the", "Japanese", "whalers", "to", "keep", "paul", "Watson", "away"]
# ::lemmas ["just", "the", "Japanese", "whaler", "to", "keep", "paul", "Watson", "away"]
(c3-7 / person
      :ARG0-of (c3-1 / whine-01)
      :mod (c3-6 / country
                 :name (c3-9 / name
                             :op1 "Japan"))
      :mod (c3-3 / just)
      :ARG0-of (c3-0 / keep-04
                     :ARG1 (c3-4 / paul-01
                                 :ARG0 c3-7
                                 :ARG1 (c3-2 / person
                                             :name (c3-5 / name
                                                         :op1 "Watson"))
                                 :direction (c3-8 / away))))

# ::snt Use an LRAD on the hostage taker, &amp; if the hostages feel the affect too, they won't die like the murderer. Bring him in
# ::tokens ["Use", "an", "LRAD", "on", "the", "hostage", "taker", ",", "&", "amp", ";", "if", "the", "hostages", "feel", "the", "affect", "too", ",", "they", "wo", "n't", "die", "like", "the", "murderer", ".", "Bring", "him", "in"]
# ::lemmas ["use", "an", "lrad", "on", "the", "hostage", "taker", ",", "&", "amp", ";", "if", "the", "hostage", "feel", "the", "affect", "too", ",", "they", "will", "not", "die", "like", "the", "murderer", ".", "bring", "he", "in"]
(c4-19 / multi-sentence
       :snt1 (c4-1 / use-01
                   :ARG0 (c4-4 / you)
                   :ARG1 (c4-13 / product
                                :name (c4-9 / name
                                            :op1 "LRAD"))
                   :ARG2 (c4-14 / and
                                :op1 (c4-20 / person
                                            :ARG0-of (c4-5 / taker-01
                                                           :ARG1 (c4-0 / hostage)))
                                :op2 (c4-10 / person
                                            :name c4-9
                                            :op1 "&amp"))
                   :mode imperative)
       :snt2 (c4-6 / have-condition-91
                   :ARG1 (c4-12 / die-01
                                :ARG1 (c4-8 / hostage)
                                :ARG1-of (c4-2 / resemble-01
                                               :ARG2 (c4-7 / person
                                                           :ARG0-of (c4-21 / murder-01)))
                                :polarity -)
                   :ARG2 (c4-11 / feel-01
                                :ARG0 c4-8
                                :ARG1 (c4-3 / affect-01)
                                :mod (c4-18 / too)))
       :snt3 (c4-17 / bring-01
                    :ARG0 (c4-16 / you)
                    :ARG1 (c4-15 / he)
                    :mode imperative))

# ::snt You know, a non-violent way to end this situation...
# ::tokens ["You", "know", ",", "a", "non", "-", "violent", "way", "to", "end", "this", "situation", "..."]
# ::lemmas ["you", "know", ",", "a", "non", "-", "violent", "way", "to", "end", "this", "situation", "..."]
(c5-2 / way
      :mod (c5-4 / violent
                 :polarity -)
      :manner-of (c5-6 / end-01
                       :ARG1 (c5-5 / situation
                                   :mod (c5-3 / this)))
      :mod (c5-0 / know-06
                 :ARG0 (c5-1 / you)))

# ::snt I don't think he understands, kidnappers surrender or get shot, murderers surrender or get shot. It's quite simple !
# ::tokens ["I", "do", "n't", "think", "he", "understands", ",", "kidnappers", "surrender", "or", "get", "shot", ",", "murderers", "surrender", "or", "get", "shot", ".", "It", "'s", "quite", "simple", "!"]
# ::lemmas ["i", "do", "not", "think", "he", "understand", ",", "kidnapper", "surrender", "or", "get", "shoot", ",", "murderer", "surrender", "or", "get", "shoot", ".", "it", "be", "quite", "simple", "!"]
(c6-6 / multi-sentence
      :snt1 (c6-5 / think-01
                  :ARG0 (c6-11 / i)
                  :ARG1 (c6-13 / understand-01
                               :ARG0 (c6-3 / he)
                               :ARG1 (c6-15 / or
                                            :op1 (c6-17 / surrender-01
                                                        :ARG0 (c6-12 / person
                                                                     :ARG0-of (c6-0 / kidnap-01)))
                                            :op2 (c6-4 / shoot-02
                                                       :ARG1 c6-12)))
                  :polarity -)
      :snt2 (c6-9 / or
                  :op1 (c6-1 / surrender-01
                             :ARG0 (c6-10 / person
                                          :ARG0-of (c6-16 / murder-01)))
                  :op2 (c6-7 / shoot-02
                             :ARG1 c6-10))
      :snt3 (c6-14 / simple-02
                   :ARG1 (c6-8 / it)
                   :degree (c6-2 / quite)))

# ::snt hope France has sharpshooters
# ::tokens ["hope", "France", "has", "sharpshooters"]
# ::lemmas ["hope", "France", "have", "sharpshooter"]
(c7-0 / hope-01
      :ARG0 (c7-3 / i)
      :ARG1 (c7-1 / have-03
                  :ARG0 (c7-2 / country
                              :name (c7-5 / name
                                          :op1 "France"))
                  :ARG1 (c7-4 / sharpshooter)))

# ::snt Those are Dead people already thats part of there standoff more media to show up.So the World to see.
# ::tokens ["Those", "are", "Dead", "people", "already", "that", "s", "part", "of", "there", "standoff", "more", "media", "to", "show", "up", ".", "So", "the", "World", "to", "see", "."]
# ::lemmas ["those", "be", "Dead", "people", "already", "that", "s", "part", "of", "there", "standoff", "more", "medium", "to", "show", "up", ".", "so", "the", "World", "to", "see", "."]
(c8-4 / multi-sentence
      :snt1 (c8-7 / person
                  :ARG1-of (c8-6 / die-01)
                  :domain (c8-3 / that)
                  :part-of (c8-12 / standoff
                                  :poss (c8-5 / they))
                  :time (c8-9 / already))
      :snt2 (c8-2 / show-up-02
                  :ARG1 (c8-11 / media
                               :quant (c8-10 / more))
                  :ARG0-of (c8-8 / cause-01
                                 :ARG1 (c8-0 / see-01
                                             :ARG0 (c8-1 / world)))))

# ::snt ask this coverage reminds me of the song "villain" by the verve pipe.
# ::tokens ["ask", "this", "coverage", "reminds", "me", "of", "the", "song", "\"", "villain", "\"", "by", "the", "verve", "pipe", "."]
# ::lemmas ["ask", "this", "coverage", "remind", "i", "of", "the", "song", "\"", "villain", "\"", "by", "the", "verve", "pipe", "."]
(c9-5 / ask-01
      :ARG1 (c9-6 / remind-01
                  :ARG0 (c9-1 / cover-03
                              :mod (c9-0 / this))
                  :ARG1 (c9-7 / song
                              :name (c9-8 / name
                                          :op1 "Villain")
                              :source (c9-2 / pipe
                                            :mod (c9-3 / verve)))
                  :ARG2 (c9-4 / i)))

# ::snt . ITS A KOSHER JEWISH SUPERMARKET. THEY CHOSE IT FOR A REASON. YOU CONVENIENTLY LEFT THAT OUT
# ::tokens [".", "ITS", "A", "KOSHER", "JEWISH", "SUPERMARKET", ".", "THEY", "CHOSE", "IT", "FOR", "A", "REASON", ".", "YOU", "CONVENIENTLY", "LEFT", "THAT", "OUT"]
# ::lemmas [".", "its", "A", "KOSHER", "jewish", "supermarket", ".", "they", "chose", "it", "for", "a", "reason", ".", "you", "CONVENIENTLY", "leave", "that", "out"]
(c10-4 / multi-sentence
       :snt1 (c10-12 / superpower
                     :domain (c10-6 / it)
                     :mod (c10-10 / religious-group
                                  :name (c10-13 / name
                                                :op1 "KosHER")))
       :snt2 (c10-7 / choose-01
                    :ARG0 (c10-3 / they)
                    :ARG1 (c10-2 / it)
                    :ARG1-of (c10-11 / cause-01
                                     :ARG0 (c10-1 / reason)))
       :snt3 (c10-9 / lie-08
                    :ARG0 (c10-0 / you)
                    :ARG1 (c10-5 / that)
                    :manner (c10-8 / constant)))

# ::snt Yup, they buried its kosher deliberately
# ::tokens ["Yup", ",", "they", "buried", "its", "kosher", "deliberately"]
# ::lemmas ["yup", ",", "they", "bury", "its", "kosher", "deliberately"]
(c11-5 / bury-01
       :ARG0 (c11-2 / they)
       :ARG1 (c11-4 / it)
       :ARG2 (c11-0 / kosher)
       :manner (c11-3 / deliberate)
       :mod (c11-1 / yup))

# ::snt relax.... Every other work out of and mouth was
# ::tokens ["relax", "....", "Every", "other", "work", "out", "of", "and", "mouth", "was"]
# ::lemmas ["relax", "....", "every", "other", "work", "out", "of", "and", "mouth", "be"]
(c13-3 / and
       :op1 (c13-4 / relax-01)
       :op2 (c13-1 / thing
                   :ARG1-of (c13-0 / work-out-02
                                   :source (c13-6 / and
                                                  :op1 (c13-2 / mouth)
                                                  :op2 c13-1)))
       :mod (c13-5 / other
                   :mod (c13-7 / every)))

# ::snt . AND YET ITS NOT ON/IN THE TWEET/HEADLINE. AS USUAL. &amp; DONT FUCKING TELL ME TO RELAX.THIS IS THE SAME NETWORK THAT REPORTED THE-
# ::tokens [".", "AND", "YET", "ITS", "NOT", "ON", "/", "IN", "THE", "TWEET", "/", "HEADLINE", ".", "AS", "USUAL", ".", "&", "amp", ";", "DONT", "FUCKING", "TELL", "ME", "TO", "RELAX.THIS", "IS", "THE", "SAME", "NETWORK", "THAT", "REPORTED", "THE-"]
# ::lemmas [".", "and", "yet", "its", "not", "on", "/", "in", "the", "TWEET", "/", "HEADLINE", ".", "AS", "USUAL", ".", "&", "amp", ";", "dont", "fucking", "tell", "i", "to", "relax.this", "be", "the", "same", "network", "that", "report", "the-"]
(c14-21 / multi-sentence
        :snt1 (c14-17 / and
                      :op2 (c14-4 / and
                                  :op1 (c14-19 / be-located-at-91
                                               :ARG1 (c14-16 / it)
                                               :ARG2 (c14-11 / slash
                                                             :op1 (c14-9 / t-shirt)
                                                             :op2 (c14-2 / line
                                                                         :mod (c14-0 / head)))
                                               :op2-of c14-4
                                               :polarity -)
                                  :ARG1 c14-16
                                  :ARG2 c14-11
                                  :polarity -))
        :snt2 (c14-18 / and
                      :op1 (c14-1 / accurate)
                      :op2 (c14-5 / and
                                  :op1 c14-1
                                  :op2 (c14-20 / tell-01
                                               :ARG0 (c14-6 / you)
                                               :ARG1 (c14-3 / RELAX-01
                                                            :ARG0 (c14-8 / i
                                                                         :ARG2-of c14-20))
                                               :mod (c14-15 / fuck)
                                               :polarity -
                                               :mode imperative)))
        :snt4 (c14-14 / same-01
                      :ARG1 (c14-10 / this)
                      :ARG2 (c14-13 / network
                                    :ARG0-of (c14-7 / report-01
                                                    :ARG1 (c14-12 / thing)))))

# ::snt agreed, its convenient they forgot to mention that detail.
# ::tokens ["agreed", ",", "its", "convenient", "they", "forgot", "to", "mention", "that", "detail", "."]
# ::lemmas ["agree", ",", "its", "convenient", "they", "forget", "to", "mention", "that", "detail", "."]
(c15-6 / agree-01
       :ARG1 (c15-7 / and
                    :op1 (c15-5 / convenient
                                :domain (c15-1 / forget-01
                                               :ARG0 (c15-0 / they)
                                               :ARG1 (c15-2 / mention-01
                                                            :ARG0 c15-0
                                                            :ARG1 (c15-4 / detail
                                                                         :mod (c15-3 / that))))
                                :op2-of c15-7)))

# ::snt . - SYNAGOGUE MASSACRE AS "ISRAELI FORCES SHOOT ARABS IN MOSQUE".I'VE GOT A GOOD MEMORY &amp; IT WASNT LONG AGO-
# ::tokens [".", "-", "SYNAGOGUE", "MASSACRE", "AS", "\"", "ISRAELI", "FORCES", "SHOOT", "ARABS", "IN", "MOSQUE\"", ".", "I'VE", "GOT", "A", "GOOD", "MEMORY", "&", "amp", ";", "IT", "WASNT", "LONG", "AGO-"]
# ::lemmas [".", "-", "synagogue", "massacre", "as", "\"", "ISRAELI", "FORCES", "SHOOT", "ARABS", "in", "MOSQUE\"", ".", "I'VE", "get", "a", "GOOD", "MEMORY", "&", "amp", ";", "IT", "WASNT", "long", "ago-"]
(c16-1 / multi-sentence
       :snt1 (c16-5 / publication
                    :name (c16-17 / name
                                  :op1 "SynaGogue"
                                  :op2 "MASSACRE")
                    :ARG1-of (c16-14 / mean-01
                                     :ARG2 (c16-4 / cover-01
                                                  :ARG0 (c16-16 / country
                                                                :name (c16-3 / name
                                                                             :op1 "Israel"))
                                                  :ARG1 (c16-6 / camel)
                                                  :location c16-16
                                                  :name (c16-8 / name
                                                               :op1 "MosesQUE"))))
       :snt2 (c16-9 / and
                    :op1 (c16-10 / get-02
                                 :ARG0 (c16-7 / i)
                                 :ARG1 (c16-12 / memory
                                               :ARG1-of (c16-0 / good-02)))
                    :op2 (c16-2 / miss-01
                                :ARG0 c16-7))
       :snt3 (c16-11 / pass-03
                     :ARG1 (c16-13 / now)
                     :ARG1-of (c16-15 / long-03)
                     :polarity -))

# ::snt . -SO SAVE ME THE FUCKING LECTURE, AND WHEN MY FELLOW TRIBE MEMBERS ARE BEING HELD HOSTAGE, DONT DARE TELL ME TO CALM DOWN.
# ::tokens [".", "-SO", "SAVE", "ME", "THE", "FUCKING", "LECTURE", ",", "AND", "WHEN", "MY", "FELLOW", "TRIBE", "MEMBERS", "ARE", "BEING", "HELD", "HOSTAGE", ",", "DONT", "DARE", "TELL", "ME", "TO", "CALM", "DOWN", "."]
# ::lemmas [".", "-so", "save", "i", "the", "FUCKING", "LECTURE", ",", "and", "when", "my", "fellow", "tribe", "member", "be", "be", "hold", "HOSTAGE", ",", "DONT", "DARE", "TELL", "i", "to", "calm", "down", "."]
(c17-12 / and
        :op1 (c17-8 / prove-01
                    :ARG0 (c17-0 / you)
                    :ARG1 (c17-2 / thing
                                 :ARG2-of (c17-11 / gauge-01)
                                 :mod (c17-3 / fucking
                                             :mode expressive))
                    :ARG2 (c17-9 / i)
                    :mode imperative)
        :op2 (c17-4 / tell-01
                    :ARG0 c17-0
                    :ARG1 (c17-10 / CALM-down-00
                                  :ARG0 c17-9)
                    :ARG2 c17-9
                    :time (c17-1 / hold-13
                                 :ARG1 (c17-6 / hear-01
                                              :ARG0 (c17-7 / person
                                                           :ARG1-of (c17-13 / follow-01
                                                                            :ARG2 (c17-5 / try-01)))))
                    :mode imperative
                    :polarity -))

# ::snt Too late. The Charlie Hebdo terrorists are dead.
# ::tokens ["Too", "late", ".", "The", "Charlie", "Hebdo", "terrorists", "are", "dead", "."]
# ::lemmas ["too", "late", ".", "the", "Charlie", "Hebdo", "terrorist", "be", "dead", "."]
(c18-2 / multi-sentence
       :snt1 (c18-0 / have-degree-91
                    :ARG2 (c18-6 / late)
                    :ARG3 (c18-1 / too))
       :snt2 (c18-4 / die-01
                    :ARG1 (c18-3 / terrorist
                                 :mod (c18-5 / publication
                                             :name (c18-7 / name
                                                          :op1 "Charlie"
                                                          :op2 "Ch Hebdo")))))

# ::snt And the hostages at the kosher market have been freed. Happy for you David.
# ::tokens ["And", "the", "hostages", "at", "the", "kosher", "market", "have", "been", "freed", ".", "Happy", "for", "you", "David", "."]
# ::lemmas ["and", "the", "hostage", "at", "the", "kosher", "market", "have", "be", "free", ".", "happy", "for", "you", "David", "."]
(c19-2 / multi-sentence
       :snt1 (c19-6 / and
                    :op2 (c19-3 / free-01
                                :ARG1 (c19-1 / hostage
                                             :location (c19-7 / market
                                                              :mod (c19-0 / kosher)))))
       :snt2 (c19-8 / say-01
                    :ARG1 (c19-4 / happy-01
                                 :ARG1 (c19-5 / person
                                              :name (c19-9 / name
                                                           :op1 "David")
                                              :ARG2-of c19-8))))

# ::snt : . ITS A KOSHER JEWISH SUPERMARKET. THEY CHOSE IT FOR A REASON. YOU CONVENIENTLY LEFT THAT OUT &lt;too true!
# ::tokens [":", ".", "ITS", "A", "KOSHER", "JEWISH", "SUPERMARKET", ".", "THEY", "CHOSE", "IT", "FOR", "A", "REASON", ".", "YOU", "CONVENIENTLY", "LEFT", "THAT", "OUT", "&", "lt;too", "true", "!"]
# ::lemmas [":", ".", "its", "A", "KOSHER", "jewish", "supermarket", ".", "they", "chose", "it", "for", "a", "reason", ".", "you", "CONVENIENTLY", "leave", "that", "out", "&", "lt;too", "true", "!"]
(c20-4 / multi-sentence
       :snt2 (c20-8 / choose-01
                    :ARG0 (c20-3 / they)
                    :ARG1 (c20-7 / it)
                    :ARG1-of (c20-12 / cause-01
                                     :ARG0 (c20-11 / reason)))
       :snt3 (c20-10 / lie-08
                     :ARG0 (c20-0 / you)
                     :ARG1 (c20-5 / that)
                     :manner (c20-9 / constant)
                     :ARG0-of c20-12
                     :ARG1 (c20-6 / true-01
                                  :ARG1 c20-5
                                  :ARG2-of (c20-2 / have-degree-91
                                                  :ARG1 c20-5
                                                  :ARG3 (c20-13 / too))))
       :ARG1-of (c20-1 / complete-02))

# ::snt Coward News Network
# ::tokens ["Coward", "News", "Network"]
# ::lemmas ["Coward", "News", "Network"]
(c21-1 / network
       :name (c21-0 / name
                    :op1 "Coward"
                    :op2 "News"
                    :op3 "Network"))

# ::snt YOU LEFT OUT INTERNATIONAL!
# ::tokens ["YOU", "LEFT", "OUT", "INTERNATIONAL", "!"]
# ::lemmas ["you", "leave", "OUT", "INTERNATIONAL", "!"]
(c22-1 / leave-out-03
       :ARG0 (c22-0 / you)
       :ARG1 (c22-2 / international))

# ::snt say thank's
# ::tokens ["say", "thank", "'s"]
# ::lemmas ["say", "thank", "'s"]
(c23-1 / thank-01
       :ARG0 (c23-0 / you)
       :mode imperative)

# ::snt Hostage-taker at Paris store demands release of police union spoke says. via
# ::tokens ["Hostage", "-", "taker", "at", "Paris", "store", "demands", "release", "of", "police", "union", "spoke", "says", ".", "via"]
# ::lemmas ["hostage", "-", "taker", "at", "Paris", "store", "demand", "release", "of", "police", "union", "speak", "say", ".", "via"]
(c24-10 / say-01
        :ARG0 (c24-5 / person
                     :ARG0-of (c24-2 / take-01
                                     :ARG1 (c24-1 / hostage)
                                     :location (c24-0 / store
                                                      :location (c24-6 / city
                                                                       :name (c24-11 / name
                                                                                     :op1 "Paris"))))
                     :ARG0-of (c24-4 / demand-01
                                     :ARG1 (c24-9 / release-01
                                                  :ARG1 (c24-7 / union
                                                               :mod (c24-3 / police)))))
        :medium (c24-8 / language
                       :name c24-11
                       :op1 "medium"))
