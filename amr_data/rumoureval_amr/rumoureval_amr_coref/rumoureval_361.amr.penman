# ::snt Yep. I still cringe at Hillary Clinton's remarks when Reagan died. It isn't exactly unique.
# ::tokens ["Yep", ".", "I", "still", "cringe", "at", "Hillary", "Clinton", "'s", "remarks", "when", "Reagan", "died", ".", "It", "is", "n't", "exactly", "unique", "."]
# ::lemmas ["yep", ".", "i", "still", "cringe", "at", "Hillary", "Clinton", "'s", "remark", "when", "Reagan", "die", ".", "it", "be", "not", "exactly", "unique", "."]
(c1-3 / multi-sentence
      :snt1 (c1-0 / yep)
      :snt2 (c1-7 / cringe-01
                  :ARG0 (c1-6 / i)
                  :ARG1 (c1-11 / remark-01
                               :ARG0 (c1-8 / person
                                           :name (c1-13 / name
                                                        :op1 "Hillary"
                                                        :op2 "Clinton"))
                               :time (c1-5 / die-01
                                           :ARG1 (c1-4 / person
                                                       :name (c1-9 / name
                                                                   :op1 "Reagan"))))
                  :mod (c1-12 / still))
      :snt3 (c1-10 / unique-01
                   :ARG1 (c1-1 / it)
                   :mod (c1-2 / exact)
                   :polarity -))

# ::snt It's a strange unification when someone dies. It's almost as if their life becomes unmentionable because they died.
# ::tokens ["It", "'s", "a", "strange", "unification", "when", "someone", "dies", ".", "It", "'s", "almost", "as", "if", "their", "life", "becomes", "unmentionable", "because", "they", "died", "."]
# ::lemmas ["it", "be", "a", "strange", "unification", "when", "someone", "die", ".", "it", "be", "almost", "as", "if", "their", "life", "become", "unmentionable", "because", "they", "die", "."]
(c2-2 / multi-sentence
      :snt1 (c2-6 / unify-01
                  :mod (c2-11 / strange)
                  :time (c2-3 / die-01
                              :ARG1 (c2-0 / someone)))
      :snt2 (c2-9 / resemble-01
                  :ARG1 (c2-1 / die-01
                              :ARG1 c2-0)
                  :ARG2 (c2-12 / become-01
                               :ARG1 (c2-7 / life
                                           :poss c2-0)
                               :ARG2 (c2-4 / possible-01
                                           :ARG1 (c2-5 / conceive-01
                                                       :ARG1 c2-7)
                                           :polarity -)
                               :ARG1-of (c2-10 / cause-01
                                               :ARG0 c2-1))
                  :mod (c2-8 / almost)))

# ::snt I am not going to go on and on about what an over-privileged, entitled woman she was so that is all I have to say on the matter.
# ::tokens ["I", "am", "not", "going", "to", "go", "on", "and", "on", "about", "what", "an", "over", "-", "privileged", ",", "entitled", "woman", "she", "was", "so", "that", "is", "all", "I", "have", "to", "say", "on", "the", "matter", "."]
# ::lemmas ["i", "be", "not", "go", "to", "go", "on", "and", "on", "about", "what", "an", "over", "-", "privileged", ",", "entitle", "woman", "she", "be", "so", "that", "be", "all", "i", "have", "to", "say", "on", "the", "matter", "."]
(c3-7 / go-on-15
      :ARG1 (c3-2 / thing
                  :ARG1-of (c3-9 / say-01
                                 :ARG0 (c3-4 / i)
                                 :ARG3 (c3-3 / matter))
                  :domain (c3-0 / woman
                                :ARG1-of (c3-5 / privilege-01
                                               :degree (c3-8 / over))
                                :ARG1-of (c3-10 / entitle-01)
                                :domain (c3-1 / she)))
      :ARG0-of (c3-6 / cause-01
                     :ARG1 c3-2)
      :ARG1-of c3-6
      :polarity -)

# ::snt Oh, I know. I didn't think you were.
# ::tokens ["Oh", ",", "I", "know", ".", "I", "did", "n't", "think", "you", "were", "."]
# ::lemmas ["oh", ",", "i", "know", ".", "i", "do", "not", "think", "you", "be", "."]
(c4-4 / multi-sentence
      :snt1 (c4-0 / know-01
                  :ARG0 (c4-5 / i)
                  :mod (c4-6 / oh
                             :mode expressive))
      :snt2 (c4-3 / think-01
                  :ARG0 (c4-2 / i)
                  :ARG1 (c4-1 / you)
                  :polarity -))

# ::snt Oh, I'm not praising her. Quite the opposite.
# ::tokens ["Oh", ",", "I", "'m", "not", "praising", "her", ".", "Quite", "the", "opposite", "."]
# ::lemmas ["oh", ",", "i", "be", "not", "praise", "she", ".", "quite", "the", "opposite", "."]
(c5-1 / multi-sentence
      :snt1 (c5-4 / praise-01
                  :ARG0 (c5-3 / i)
                  :ARG1 (c5-6 / she)
                  :mod (c5-5 / oh
                             :mode expressive)
                  :polarity -)
      :snt2 (c5-2 / opposite-01
                  :degree (c5-0 / quite)))

# ::snt I'm waiting for the hagiography when Kissinger dies. So much crap will spew.
# ::tokens ["I", "'m", "waiting", "for", "the", "hagiography", "when", "Kissinger", "dies", ".", "So", "much", "crap", "will", "spew", "."]
# ::lemmas ["i", "be", "wait", "for", "the", "hagiography", "when", "Kissinger", "die", ".", "so", "much", "crap", "will", "spew", "."]
(c6-3 / multi-sentence
      :snt1 (c6-0 / wait-01
                  :ARG1 (c6-6 / i)
                  :ARG2 (c6-1 / hagiography)
                  :time (c6-5 / die-01
                              :ARG1 (c6-7 / person
                                          :name (c6-11 / name
                                                       :op1 "Kissinger"))))
      :snt2 (c6-10 / spew-01
                   :ARG1 (c6-8 / crap
                               :ARG1-of (c6-4 / have-quant-91
                                              :ARG2 (c6-9 / much)
                                              :ARG3 (c6-2 / so)))))
