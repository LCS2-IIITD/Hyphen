# ::snt And why don't we have military support there to enforce the law I would run the son of bitches over BASTARDS.
# ::tokens ["And", "why", "do", "n't", "we", "have", "military", "support", "there", "to", "enforce", "the", "law", "I", "would", "run", "the", "son", "of", "bitches", "over", "BASTARDS", "."]
# ::lemmas ["and", "why", "do", "not", "we", "have", "military", "support", "there", "to", "enforce", "the", "law", "i", "would", "run", "the", "son", "of", "bitch", "over", "bastard", "."]
(c1-11 / and
       :op2 (c1-8 / cause-01
                  :ARG0 (c1-14 / amr-unknown)
                  :ARG1 (c1-1 / have-03
                              :ARG0 (c1-0 / we)
                              :ARG1 (c1-15 / support-01
                                           :ARG0 (c1-4 / military)
                                           :location (c1-3 / there)
                                           :purpose (c1-16 / enforce-01
                                                           :ARG0 c1-0
                                                           :ARG1 (c1-12 / law)))
                              :polarity -))
       :op3 (c1-13 / run-02
                   :ARG0 (c1-9 / i)
                   :ARG1 (c1-10 / person
                                :ARG0-of (c1-6 / have-rel-role-91
                                               :ARG1 c1-9
                                               :ARG2 (c1-2 / son-of-a-bitch)))
                   :ARG1-of (c1-5 / instead-of-91
                                  :ARG2 (c1-7 / person
                                              :ARG0-of (c1-17 / bitch-01)))))

# ::snt When thugs block emergency vehicles vehicles should run over the thugs if safe to do so. El
# ::tokens ["When", "thugs", "block", "emergency", "vehicles", "vehicles", "should", "run", "over", "the", "thugs", "if", "safe", "to", "do", "so", ".", "El"]
# ::lemmas ["when", "thug", "block", "emergency", "vehicle", "vehicle", "should", "run", "over", "the", "thug", "if", "safe", "to", "do", "so", ".", "El"]
(c2-2 / multi-sentence
      :snt1 (c2-7 / recommend-01
                  :ARG1 (c2-0 / run-over-12
                              :ARG0 (c2-3 / thug)
                              :ARG1 (c2-1 / thug)
                              :condition (c2-8 / safe-01
                                               :ARG1 c2-3
                                               :ARG2 c2-0))
                  :time (c2-11 / block-01
                               :ARG0 (c2-4 / thug)
                               :ARG1 (c2-6 / vehicle
                                           :mod (c2-10 / emergency))))
      :snt2 (c2-5 / person
                  :name (c2-9 / name
                              :op1 "El")))

# ::snt I'm as as anyone but there is no way that this is true ..... jus sayin
# ::tokens ["I", "'m", "as", "as", "anyone", "but", "there", "is", "no", "way", "that", "this", "is", "true", ".....", "jus", "sayin"]
# ::lemmas ["i", "be", "as", "as", "anyone", "but", "there", "be", "no", "way", "that", "this", "be", "true", ".....", "jus", "sayin"]
(c3-1 / multi-sentence
      :snt1 (c3-6 / contrast-01
                  :ARG1 (c3-4 / i)
                  :ARG2 (c3-7 / anyone))
      :snt2 (c3-5 / possible-01
                  :ARG1 (c3-0 / true-01
                              :ARG1 (c3-2 / this))
                  :polarity -)
      :snt3 (c3-8 / say-01
                  :ARG0 (c3-3 / person
                              :name (c3-9 / name
                                          :op1 "Jus"))))

# ::snt Time to allow cars to go through protesters during emergencies.
# ::tokens ["Time", "to", "allow", "cars", "to", "go", "through", "protesters", "during", "emergencies", "."]
# ::lemmas ["time", "to", "allow", "car", "to", "go", "through", "protester", "during", "emergency", "."]
(c4-0 / time
      :time-of (c4-5 / allow-01
                     :ARG1 (c4-4 / go-through-20
                                 :ARG0 (c4-3 / car)
                                 :ARG1 (c4-2 / person
                                             :ARG0-of (c4-1 / protest-01))
                                 :time (c4-6 / emergency))))

# ::snt Thank you and
# ::tokens ["Thank", "you", "and"]
# ::lemmas ["thank", "you", "and"]
(c5-1 / and
      :op1 (c5-3 / thank-01
                 :ARG1 (c5-0 / you))
      :op2 (c5-2 / amr-unknown))

# ::snt This photo is from . Stop spreading lies.
# ::tokens ["This", "photo", "is", "from", ".", "Stop", "spreading", "lies", "."]
# ::lemmas ["this", "photo", "be", "from", ".", "stop", "spread", "lie", "."]
(c6-3 / multi-sentence
      :snt1 (c6-7 / be-from-91
                  :ARG1 (c6-4 / photo
                              :mod (c6-2 / this)))
      :snt2 (c6-6 / stop-01
                  :ARG0 (c6-0 / you)
                  :ARG1 (c6-1 / spread-03
                              :ARG0 c6-0
                              :ARG1 (c6-5 / lie-08))
                  :mode imperative))

# ::snt I live in Texas and have friends and relatives in flooded areas. Have not hea
# ::tokens ["I", "live", "in", "Texas", "and", "have", "friends", "and", "relatives", "in", "flooded", "areas", ".", "Have", "not", "hea"]
# ::lemmas ["i", "live", "in", "Texas", "and", "have", "friend", "and", "relative", "in", "flood", "area", ".", "have", "not", "hea"]
(c7-2 / multi-sentence
      :snt1 (c7-8 / and
                  :op1 (c7-9 / live-01
                             :ARG0 (c7-6 / i)
                             :location (c7-15 / state
                                              :name (c7-17 / name
                                                           :op1 "Texas")))
                  :op2 (c7-0 / have-03
                             :ARG0 c7-6
                             :ARG1 (c7-13 / and
                                          :op1 (c7-7 / person
                                                     :ARG0-of (c7-4 / have-rel-role-91
                                                                    :ARG1 c7-6
                                                                    :ARG2 (c7-3 / friend)))
                                          :op2 (c7-5 / person
                                                     :ARG0-of (c7-16 / have-rel-role-91
                                                                     :ARG1 c7-6
                                                                     :ARG2 (c7-10 / relative))))
                             :location (c7-14 / area
                                              :ARG1-of (c7-12 / flood-01))
                             :snt2-of c7-2))
      :ARG0 (c7-1 / i)
      :ARG1 (c7-11 / hea)
      :polarity -)

# ::snt That's a no no arrest them
# ::tokens ["That", "'s", "a", "no", "no", "arrest", "them"]
# ::lemmas ["that", "be", "a", "no", "no", "arrest", "they"]
(c8-0 / arrest-01
      :ARG1 (c8-2 / they)
      :domain (c8-1 / that)
      :polarity -)

# ::snt I am sorry for saying this but start shooting their sorry asses. To do something like this
# ::tokens ["I", "am", "sorry", "for", "saying", "this", "but", "start", "shooting", "their", "sorry", "asses", ".", "To", "do", "something", "like", "this"]
# ::lemmas ["i", "be", "sorry", "for", "say", "this", "but", "start", "shoot", "their", "sorry", "ass", ".", "to", "do", "something", "like", "this"]
(c9-4 / multi-sentence
      :snt1 (c9-9 / contrast-01
                  :ARG1 (c9-14 / sorry-01
                               :ARG1 (c9-8 / i)
                               :ARG2 (c9-1 / say-01
                                           :ARG0 c9-8
                                           :ARG1 (c9-3 / this)))
                  :ARG2 (c9-0 / start-01
                              :ARG0 c9-8
                              :ARG1 (c9-2 / shoot-02
                                          :ARG0 c9-8
                                          :ARG1 (c9-11 / ass
                                                       :ARG1-of (c9-10 / sorry-01)
                                                       :part-of (c9-5 / they)))))
      :snt2 (c9-7 / do-02
                  :ARG1 (c9-13 / something
                               :ARG1-of (c9-12 / resemble-01
                                               :ARG2 (c9-6 / this)))))

# ::snt Time for some water cannon to make a hole.. . . .
# ::tokens ["Time", "for", "some", "water", "cannon", "to", "make", "a", "hole", "..", ".", ".", "."]
# ::lemmas ["time", "for", "some", "water", "cannon", "to", "make", "a", "hole", "..", ".", ".", "."]
(c10-2 / time
       :time-of (c10-3 / make-01
                       :ARG0 (c10-4 / cannon
                                    :mod (c10-0 / water)
                                    :mod (c10-5 / some))
                       :ARG1 (c10-1 / hole)))

# ::snt Fake news, dummy.
# ::tokens ["Fake", "news", ",", "dummy", "."]
# ::lemmas ["fake", "news", ",", "dummy", "."]
(c11-3 / say-01
       :ARG0 (c11-2 / i)
       :ARG1 (c11-0 / fake-02
                    :ARG1 (c11-4 / news))
       :ARG2 (c11-1 / dummy))

# ::snt Where and when? Other links to?
# ::tokens ["Where", "and", "when", "?", "Other", "links", "to", "?"]
# ::lemmas ["where", "and", "when", "?", "other", "link", "to", "?"]
(c12-0 / multi-sentence
       :snt1 (c12-2 / and
                    :op1 (c12-8 / be-located-at-91
                                :ARG2 (c12-6 / amr-unknown))
                    :op2 (c12-3 / be-located-at-91
                                :ARG2 (c12-7 / amr-unknown)))
       :snt2 (c12-4 / link-01
                    :ARG2 (c12-5 / other)
                    :polarity (c12-1 / amr-unknown)))

# ::snt Lol. This is typical GOP nonsense. What a joke of a party. I can't believe you pe
# ::tokens ["Lol", ".", "This", "is", "typical", "GOP", "nonsense", ".", "What", "a", "joke", "of", "a", "party", ".", "I", "ca", "n't", "believe", "you", "pe"]
# ::lemmas ["Lol", ".", "this", "be", "typical", "GOP", "nonsense", ".", "what", "a", "joke", "of", "a", "party", ".", "i", "can", "not", "believe", "you", "pe"]
(c13-5 / multi-sentence
       :snt1 (c13-11 / laugh-01
                     :ARG0 (c13-9 / i)
                     :manner (c13-13 / loud)
                     :mode expressive)
       :snt2 (c13-4 / typical-02
                    :ARG1 (c13-12 / sense-02
                                  :ARG1 (c13-6 / this)
                                  :polarity -)
                    :ARG2 (c13-10 / political-party
                                  :name (c13-14 / name
                                                :op1 "GOP")))
       :snt3 (c13-7 / joke-01
                    :ARG2 (c13-8 / party)
                    :degree (c13-2 / so))
       :snt4 (c13-1 / possible-01
                    :ARG1 (c13-15 / believe-01
                                  :ARG0 (c13-3 / i)
                                  :ARG1 (c13-0 / you))
                    :polarity -))

# ::snt Yah...this is fake...this picture was taken in atlanta in July of last year. Please stop po
# ::tokens ["Yah", "...", "this", "is", "fake", "...", "this", "picture", "was", "taken", "in", "atlanta", "in", "July", "of", "last", "year", ".", "Please", "stop", "po"]
# ::lemmas ["yah", "...", "this", "be", "fake", "...", "this", "picture", "be", "take", "in", "atlanta", "in", "July", "of", "last", "year", ".", "please", "stop", "po"]
(c14-3 / multi-sentence
       :snt1 (c14-11 / and
                     :op1 (c14-0 / yah
                                 :mode expressive)
                     :op2 (c14-4 / fake-02
                                 :ARG1 (c14-2 / this))
                     :op3 (c14-5 / take-01
                                 :ARG1 (c14-9 / picture
                                              :mod (c14-6 / this))
                                 :ARG3 (c14-10 / company
                                               :name (c14-15 / name
                                                             :op1 "Atlanta"))
                                 :time (c14-8 / date-entity
                                              :mod (c14-14 / year
                                                           :mod (c14-12 / last))
                                              :month 7)))
       :snt2 (c14-13 / stop-01
                     :ARG0 (c14-1 / you)
                     :ARG1 (c14-7 / po)
                     :mode imperative
                     :polite +))

# ::snt Liar
# ::tokens ["Liar"]
# ::lemmas ["liar"]
(c15-1 / person
       :ARG0-of (c15-0 / lie-08))

# ::snt President Trump needs to take ACTION this racist shot has to stop and Obama, Hillary,Walter
# ::tokens ["President", "Trump", "needs", "to", "take", "ACTION", "this", "racist", "shot", "has", "to", "stop", "and", "Obama", ",", "Hillary", ",", "Walter"]
# ::lemmas ["President", "Trump", "need", "to", "take", "ACTION", "this", "racist", "shot", "have", "to", "stop", "and", "Obama", ",", "Hillary", ",", "Walter"]
(c16-7 / say-01
       :ARG0 (c16-14 / person
                     :name (c16-8 / name
                                  :op1 "Walter"))
       :ARG1 (c16-15 / and
                     :op1 (c16-1 / need-01
                                 :ARG0 (c16-18 / person
                                               :name (c16-2 / name
                                                            :op1 "Trump")
                                               :ARG0-of (c16-0 / have-org-role-91
                                                               :ARG2 (c16-11 / president)))
                                 :ARG1 (c16-4 / act-02
                                              :ARG0 c16-18))
                     :op2 (c16-16 / obligate-01
                                  :ARG2 (c16-17 / and
                                                :op1 (c16-12 / stop-01
                                                             :ARG1 (c16-10 / shoot-01
                                                                           :mod (c16-3 / racist)
                                                                           :mod (c16-5 / this)))
                                                :op2 (c16-6 / person
                                                            :name (c16-19 / name
                                                                          :op1 "Obama"))
                                                :op3 (c16-13 / person
                                                             :name (c16-9 / name
                                                                          :op1 "Hillary"))))))

# ::snt Run over their asses.
# ::tokens ["Run", "over", "their", "asses", "."]
# ::lemmas ["run", "over", "their", "ass", "."]
(c17-1 / run-08
       :ARG1 (c17-0 / ass
                    :part-of (c17-3 / they))
       :path (c17-2 / over))

# ::snt If the police does not arrest them I see a lawsuit if anyone dies because if this. Mayor be
# ::tokens ["If", "the", "police", "does", "not", "arrest", "them", "I", "see", "a", "lawsuit", "if", "anyone", "dies", "because", "if", "this", ".", "Mayor", "be"]
# ::lemmas ["if", "the", "police", "do", "not", "arrest", "they", "i", "see", "a", "lawsuit", "if", "anyone", "die", "because", "if", "this", ".", "Mayor", "be"]
(c18-3 / multi-sentence
       :snt1 (c18-1 / have-condition-91
                    :ARG1 (c18-11 / see-01
                                  :ARG0 (c18-6 / i)
                                  :ARG1 (c18-0 / sue-02))
                    :ARG2 (c18-9 / arrest-01
                                 :ARG0 (c18-7 / police)
                                 :ARG1 (c18-2 / they)
                                 :polarity -))
       :snt2 (c18-8 / cause-01
                    :ARG0 (c18-4 / this)
                    :ARG1 (c18-10 / mayor
                                  :mod (c18-12 / be-temporally-at-91
                                               :ARG2-of (c18-5 / have-condition-91)))))

# ::snt Then they should have been run over
# ::tokens ["Then", "they", "should", "have", "been", "run", "over"]
# ::lemmas ["then", "they", "should", "have", "be", "run", "over"]
(c19-2 / recommend-01
       :ARG1 (c19-0 / run-over-12
                    :ARG1 (c19-3 / they))
       :mod (c19-1 / then))

# ::snt Call in military if National Guard tied up in rescue!
# ::tokens ["Call", "in", "military", "if", "National", "Guard", "tied", "up", "in", "rescue", "!"]
# ::lemmas ["call", "in", "military", "if", "National", "Guard", "tie", "up", "in", "rescue", "!"]
(c20-3 / call-02
       :ARG0 (c20-0 / you)
       :ARG1 (c20-2 / military)
       :condition (c20-1 / tie-up-05
                         :ARG1 c20-2
                         :name (c20-5 / name
                                      :op1 "National"
                                      :op2 "Guard"))
       :purpose (c20-4 / rescue-01
                       :ARG0 c20-2)
       :mode imperative)

# ::snt drop that transmission into low and hit the gas
# ::tokens ["drop", "that", "transmission", "into", "low", "and", "hit", "the", "gas"]
# ::lemmas ["drop", "that", "transmission", "into", "low", "and", "hit", "the", "gas"]
(c21-6 / and
       :op1 (c21-5 / drop-01
                   :ARG0 (c21-0 / you)
                   :ARG1 (c21-3 / thing
                                :ARG1-of (c21-2 / transmit-01)
                                :mod (c21-4 / that))
                   :ARG4 (c21-7 / low-04)
                   :mode imperative)
       :op2 (c21-1 / hit-01
                   :ARG0 c21-0
                   :ARG1 (c21-8 / gas)
                   :mode imperative))

# ::snt This is fake.
# ::tokens ["This", "is", "fake", "."]
# ::lemmas ["this", "be", "fake", "."]
(c22-0 / fake-02
       :ARG1 (c22-1 / this))

# ::snt This is not true.
# ::tokens ["This", "is", "not", "true", "."]
# ::lemmas ["this", "be", "not", "true", "."]
(c23-1 / true-01
       :ARG1 (c23-0 / this)
       :polarity -)

# ::snt I guess if the crews aren't saving blacks they have to be stopped. Terriorists
# ::tokens ["I", "guess", "if", "the", "crews", "are", "n't", "saving", "blacks", "they", "have", "to", "be", "stopped", ".", "Terriorists"]
# ::lemmas ["i", "guess", "if", "the", "crew", "be", "not", "save", "black", "they", "have", "to", "be", "stop", ".", "terriorist"]
(c24-2 / multi-sentence
       :snt1 (c24-7 / guess-01
                    :ARG0 (c24-4 / i)
                    :ARG1 (c24-8 / obligate-01
                                 :ARG2 (c24-9 / stop-01
                                              :ARG1 (c24-5 / person
                                                           :ARG1-of (c24-10 / black-05)))
                                 :condition (c24-1 / save-02
                                                   :ARG0 (c24-6 / crew)
                                                   :ARG1 c24-5
                                                   :polarity -)))
       :snt2 (c24-3 / person
                    :ARG0-of (c24-0 / specialize-01)))
