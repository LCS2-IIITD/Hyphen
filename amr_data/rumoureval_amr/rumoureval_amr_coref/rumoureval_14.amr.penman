# ::snt At least they are thorough.
# ::tokens ["At", "least", "they", "are", "thorough", "."]
# ::lemmas ["at", "least", "they", "be", "thorough", "."]
(c1-2 / thorough
      :domain (c1-1 / they)
      :mod (c1-0 / at-least))

# ::snt How? They are giving info that the media asked for.
# ::tokens ["How", "?", "They", "are", "giving", "info", "that", "the", "media", "asked", "for", "."]
# ::lemmas ["how", "?", "they", "be", "give", "info", "that", "the", "medium", "ask", "for", "."]
(c2-2 / multi-sentence
      :snt1 (c2-0 / have-manner-91
                  :ARG2 (c2-6 / amr-unknown))
      :snt2 (c2-5 / give-01
                  :ARG0 (c2-1 / they)
                  :ARG1 (c2-3 / information
                              :ARG1-of (c2-7 / ask-02
                                             :ARG0 (c2-4 / media)))))

# ::snt They are releasing irrelevant info that doesn't affect the case of Michael Brown's shooting
# ::tokens ["They", "are", "releasing", "irrelevant", "info", "that", "does", "n't", "affect", "the", "case", "of", "Michael", "Brown", "'s", "shooting"]
# ::lemmas ["they", "be", "release", "irrelevant", "info", "that", "do", "not", "affect", "the", "case", "of", "Michael", "Brown", "'s", "shooting"]
(c3-6 / release-01
      :ARG0 (c3-1 / they)
      :ARG1 (c3-2 / information
                  :ARG1-of (c3-0 / relevant-01
                                 :polarity -)
                  :ARG0-of (c3-5 / affect-01
                                 :ARG1 (c3-3 / case-04
                                             :ARG1 (c3-7 / shoot-02
                                                         :ARG1 (c3-4 / person
                                                                     :name (c3-8 / name
                                                                                 :op1 "Michael"
                                                                                 :op2 "Brown"))))
                                 :polarity -)))

# ::snt also wrong venues and in wrong order. After his summary execution in the street, they are trying him through the media.
# ::tokens ["also", "wrong", "venues", "and", "in", "wrong", "order", ".", "After", "his", "summary", "execution", "in", "the", "street", ",", "they", "are", "trying", "him", "through", "the", "media", "."]
# ::lemmas ["also", "wrong", "venue", "and", "in", "wrong", "order", ".", "after", "his", "summary", "execution", "in", "the", "street", ",", "they", "be", "try", "he", "through", "the", "medium", "."]
(c4-4 / multi-sentence
      :snt1 (c4-9 / and
                  :op1 (c4-7 / venue
                             :ARG1-of (c4-0 / wrong-04
                                            :mod (c4-11 / also)))
                  :op2 (c4-10 / order-01
                              :ARG1 c4-7
                              :ARG1-of (c4-12 / wrong-04)))
      :snt2 (c4-3 / try-02
                  :ARG0 (c4-5 / they)
                  :ARG1 (c4-1 / he)
                  :medium (c4-8 / media)
                  :time (c4-2 / after
                              :op1 (c4-14 / execute-01
                                          :ARG1 c4-1
                                          :manner (c4-13 / summary)
                                          :location (c4-6 / street)))))

# ::snt Are you saying they start at the end and don't explain why he was approached by cops?
# ::tokens ["Are", "you", "saying", "they", "start", "at", "the", "end", "and", "do", "n't", "explain", "why", "he", "was", "approached", "by", "cops", "?"]
# ::lemmas ["be", "you", "say", "they", "start", "at", "the", "end", "and", "do", "not", "explain", "why", "he", "be", "approach", "by", "cop", "?"]
(c5-11 / say-01
       :ARG0 (c5-0 / you)
       :ARG1 (c5-7 / and
                   :op1 (c5-1 / start-01
                              :ARG0 (c5-3 / they)
                              :time (c5-12 / end-01))
                   :op2 (c5-5 / explain-01
                              :ARG0 c5-3
                              :ARG1 (c5-4 / thing
                                          :ARG0-of (c5-6 / cause-01
                                                         :ARG1 (c5-9 / approach-02
                                                                     :ARG0 (c5-8 / cop)
                                                                     :ARG1 (c5-2 / he))))
                              :polarity -))
       :polarity (c5-10 / amr-unknown))

# ::snt What case? It's totally cool to shoot unarmed people suspected of a crime!
# ::tokens ["What", "case", "?", "It", "'s", "totally", "cool", "to", "shoot", "unarmed", "people", "suspected", "of", "a", "crime", "!"]
# ::lemmas ["what", "case", "?", "it", "be", "totally", "cool", "to", "shoot", "unarmed", "people", "suspect", "of", "a", "crime", "!"]
(c6-2 / multi-sentence
      :snt1 (c6-3 / case-04
                  :mod (c6-6 / amr-unknown))
      :snt2 (c6-7 / cool-04
                  :ARG1 (c6-9 / shoot-02
                              :ARG1 (c6-4 / person
                                          :ARG1-of (c6-8 / arm-01
                                                         :polarity -)
                                          :ARG2-of (c6-0 / suspect-01
                                                         :ARG1 (c6-5 / crime-02))))
                  :degree (c6-1 / total)))

# ::snt and that is part of what's distressing. Police screw up and make bad decisions in any system.
# ::tokens ["and", "that", "is", "part", "of", "what", "'s", "distressing", ".", "Police", "screw", "up", "and", "make", "bad", "decisions", "in", "any", "system", "."]
# ::lemmas ["and", "that", "be", "part", "of", "what", "be", "distressing", ".", "police", "screw", "up", "and", "make", "bad", "decision", "in", "any", "system", "."]
(c7-3 / multi-sentence
      :snt1 (c7-7 / and
                  :op2 (c7-4 / that
                             :part-of (c7-2 / thing
                                            :ARG0-of (c7-5 / distress-01))))
      :snt2 (c7-8 / and
                  :op1 (c7-10 / screw-up-01
                              :ARG0 (c7-6 / police))
                  :op2 (c7-1 / decide-01
                             :ARG0 c7-6
                             :ARG1-of (c7-11 / bad-07))
                  :location (c7-0 / system
                                  :mod (c7-9 / any))))

# ::snt to have the Supreme Court declare open season for cops on the population is a deliberate decision.
# ::tokens ["to", "have", "the", "Supreme", "Court", "declare", "open", "season", "for", "cops", "on", "the", "population", "is", "a", "deliberate", "decision", "."]
# ::lemmas ["to", "have", "the", "Supreme", "Court", "declare", "open", "season", "for", "cop", "on", "the", "population", "be", "a", "deliberate", "decision", "."]
(c8-2 / decide-01
      :ARG1 (c8-0 / have-04
                  :ARG1 (c8-1 / declare-01
                              :ARG0 (c8-5 / government-organization
                                          :name (c8-9 / name
                                                      :op1 "Supreme"
                                                      :op2 "Court"))
                              :ARG1 (c8-7 / season
                                          :ARG1-of (c8-6 / open-04)
                                          :beneficiary (c8-3 / cop
                                                             :prep-on (c8-4 / population)))))
      :ARG1-of (c8-8 / deliberate-01))

# ::snt For you to declare he was executed without any facts is also as absurd.
# ::tokens ["For", "you", "to", "declare", "he", "was", "executed", "without", "any", "facts", "is", "also", "as", "absurd", "."]
# ::lemmas ["for", "you", "to", "declare", "he", "be", "execute", "without", "any", "fact", "be", "also", "as", "absurd", "."]
(c9-1 / have-degree-91
      :ARG1 (c9-4 / declare-02
                  :ARG0 (c9-0 / you)
                  :ARG1 (c9-9 / execute-01
                              :ARG1 (c9-3 / he)
                              :manner (c9-2 / fact
                                            :mod (c9-6 / any)
                                            :polarity -)))
      :ARG2 (c9-7 / absurd)
      :ARG3 (c9-5 / equal)
      :mod (c9-8 / also))

# ::snt I don't think i did say that. I did criticize a Supreme Court decision I've read many times.
# ::tokens ["I", "do", "n't", "think", "i", "did", "say", "that", ".", "I", "did", "criticize", "a", "Supreme", "Court", "decision", "I", "'ve", "read", "many", "times", "."]
# ::lemmas ["i", "do", "not", "think", "i", "do", "say", "that", ".", "i", "do", "criticize", "a", "Supreme", "Court", "decision", "i", "'ve", "read", "many", "time", "."]
(c10-2 / multi-sentence
       :snt1 (c10-3 / think-01
                    :ARG0 (c10-6 / i)
                    :ARG1 (c10-11 / say-01
                                  :ARG0 c10-6
                                  :ARG1 (c10-1 / that))
                    :polarity -)
       :snt2 (c10-7 / criticize-01
                    :ARG0 (c10-0 / i)
                    :ARG1 (c10-4 / thing
                                 :ARG1-of (c10-5 / decide-01
                                                 :ARG0 (c10-8 / government-organization
                                                              :name (c10-12 / name
                                                                            :op1 "Supreme"
                                                                            :op2 "Court")))
                                 :ARG1-of (c10-9 / read-01
                                                 :ARG0 c10-0
                                                 :frequency (c10-10 / many)))))

# ::snt That's two different arguments.
# ::tokens ["That", "'s", "two", "different", "arguments", "."]
# ::lemmas ["that", "be", "two", "different", "argument", "."]
(c11-0 / argue-01
       :ARG1 (c11-2 / that)
       :ARG1-of (c11-1 / differ-02)
       :quant 2)

# ::snt it is! I both argued that the Supreme Court was wrong . . .
# ::tokens ["it", "is", "!", "I", "both", "argued", "that", "the", "Supreme", "Court", "was", "wrong", ".", ".", "."]
# ::lemmas ["it", "be", "!", "i", "both", "argue", "that", "the", "Supreme", "Court", "be", "wrong", ".", ".", "."]
(c12-2 / multi-sentence
       :snt1 (c12-3 / it
                    :mode expressive)
       :snt2 (c12-4 / argue-01
                    :ARG0 (c12-1 / i)
                    :ARG1 (c12-0 / wrong-04
                                 :ARG1 (c12-5 / government-organization
                                              :name (c12-6 / name
                                                           :op1 "Supreme"
                                                           :op2 "Court")))
                    :mod (c12-7 / both)))

# ::snt and that suppressing or selectively releasing info led to people deciding for themselves.
# ::tokens ["and", "that", "suppressing", "or", "selectively", "releasing", "info", "led", "to", "people", "deciding", "for", "themselves", "."]
# ::lemmas ["and", "that", "suppress", "or", "selectively", "release", "info", "lead", "to", "people", "decide", "for", "themselves", "."]
(c13-4 / and
       :op2 (c13-5 / lead-03
                   :ARG0 (c13-7 / or
                                :op1 (c13-8 / suppress-01
                                            :ARG1 (c13-2 / information))
                                :op2 (c13-6 / release-01
                                            :ARG1 c13-2
                                            :ARG1-of (c13-0 / selective-02)))
                   :ARG1 (c13-3 / person)
                   :ARG2 (c13-1 / decide-01
                                :ARG0 c13-3
                                :mod (c13-9 / by-oneself))))

# ::snt and not releasing any facts is a real good way to make sure people pass judgment on the facts they have
# ::tokens ["and", "not", "releasing", "any", "facts", "is", "a", "real", "good", "way", "to", "make", "sure", "people", "pass", "judgment", "on", "the", "facts", "they", "have"]
# ::lemmas ["and", "not", "release", "any", "fact", "be", "a", "real", "good", "way", "to", "make", "sure", "people", "pass", "judgment", "on", "the", "fact", "they", "have"]
(c14-8 / and
       :op2 (c14-1 / way
                   :ARG1-of (c14-7 / good-02
                                   :ARG1-of (c14-9 / real-04))
                   :domain (c14-0 / release-01
                                  :ARG1 (c14-3 / fact
                                               :mod (c14-11 / any))
                                  :polarity -)
                   :purpose (c14-12 / ensure-01
                                    :ARG1 (c14-6 / pass-07
                                                 :ARG0 (c14-5 / person)
                                                 :ARG1 (c14-4 / judge-01
                                                              :ARG0 c14-5
                                                              :ARG1 (c14-10 / fact
                                                                            :ARG1-of (c14-2 / have-03
                                                                                            :ARG0 c14-5)))))))

# ::snt Not releasing facts about that shooting is also a way to make sure they get good info from witnesses.
# ::tokens ["Not", "releasing", "facts", "about", "that", "shooting", "is", "also", "a", "way", "to", "make", "sure", "they", "get", "good", "info", "from", "witnesses", "."]
# ::lemmas ["not", "release", "fact", "about", "that", "shooting", "be", "also", "a", "way", "to", "make", "sure", "they", "get", "good", "info", "from", "witness", "."]
(c15-1 / have-manner-91
       :ARG1 (c15-10 / release-01
                     :ARG1 (c15-4 / fact
                                  :topic (c15-11 / shoot-02
                                                 :mod (c15-3 / that)))
                     :polarity -)
       :ARG2 (c15-12 / ensure-01
                     :ARG1 (c15-8 / get-01
                                  :ARG0 (c15-5 / they)
                                  :ARG1 (c15-6 / information
                                               :ARG1-of (c15-2 / good-02))
                                  :ARG2 (c15-7 / person
                                               :ARG0-of (c15-0 / witness-01))))
       :mod (c15-9 / also))

# ::snt What they did today was also a good way to taint the jury pool.
# ::tokens ["What", "they", "did", "today", "was", "also", "a", "good", "way", "to", "taint", "the", "jury", "pool", "."]
# ::lemmas ["what", "they", "do", "today", "be", "also", "a", "good", "way", "to", "taint", "the", "jury", "pool", "."]
(c16-0 / way
       :ARG1-of (c16-7 / good-02)
       :domain (c16-2 / thing
                      :ARG1-of (c16-5 / do-02
                                      :ARG0 (c16-1 / they)
                                      :time (c16-3 / today)))
       :mod (c16-8 / also)
       :manner-of (c16-9 / taint-01
                         :ARG1 (c16-6 / pool
                                      :mod (c16-4 / jury))))

# ::snt P MUCH
# ::tokens ["P", "MUCH"]
# ::lemmas ["p", "much"]
(c17-0 / amr-unintelligible
       :value "P MUCH")

# ::snt I don't understand the double standard of wanting all the info about the cop but Brown's past is safe.
# ::tokens ["I", "do", "n't", "understand", "the", "double", "standard", "of", "wanting", "all", "the", "info", "about", "the", "cop", "but", "Brown", "'s", "past", "is", "safe", "."]
# ::lemmas ["i", "do", "not", "understand", "the", "double", "standard", "of", "want", "all", "the", "info", "about", "the", "cop", "but", "Brown", "'s", "past", "be", "safe", "."]
(c18-8 / understand-01
       :ARG0 (c18-5 / i)
       :ARG1 (c18-10 / standard
                     :mod (c18-4 / double)
                     :domain (c18-0 / want-01
                                    :ARG1 (c18-1 / information
                                                 :mod (c18-9 / all)
                                                 :topic (c18-6 / cop))
                                    :concession-of (c18-2 / safe-01
                                                          :ARG1 (c18-7 / past
                                                                       :poss (c18-3 / person
                                                                                    :name (c18-11 / name
                                                                                                  :op1 "Brown"))))))
       :polarity -)

# ::snt What they also did was chose to not ignore facts that call in to question the witness' credibility.
# ::tokens ["What", "they", "also", "did", "was", "chose", "to", "not", "ignore", "facts", "that", "call", "in", "to", "question", "the", "witness", "'", "credibility", "."]
# ::lemmas ["what", "they", "also", "do", "be", "choose", "to", "not", "ignore", "fact", "that", "call", "in", "to", "question", "the", "witness", "'", "credibility", "."]
(c19-5 / choose-01
       :ARG0 (c19-2 / they)
       :ARG1 (c19-4 / ignore-01
                    :ARG0 c19-2
                    :ARG1 (c19-3 / fact
                                 :ARG0-of (c19-9 / call-in-04
                                                 :ARG1 (c19-0 / question-03
                                                              :ARG1 (c19-6 / credibility
                                                                           :poss (c19-7 / person
                                                                                        :ARG0-of (c19-1 / witness-01))))))
                    :polarity -)
       :mod (c19-8 / also))

# ::snt He admitted they stole cigars to DOJ &amp; StL County PD. He wasn't charged b/c he didn't commit a crime.
# ::tokens ["He", "admitted", "they", "stole", "cigars", "to", "DOJ", "&", "amp", ";", "StL", "County", "PD", ".", "He", "was", "n't", "charged", "b", "/", "c", "he", "did", "n't", "commit", "a", "crime", "."]
# ::lemmas ["he", "admit", "they", "steal", "cigar", "to", "DOJ", "&", "amp", ";", "StL", "County", "PD", ".", "he", "be", "not", "charge", "b", "/", "c", "he", "do", "not", "commit", "a", "crime", "."]
(c20-4 / multi-sentence
       :snt1 (c20-10 / admit-01
                     :ARG0 (c20-1 / he)
                     :ARG1 (c20-14 / steal-01
                                   :ARG0 (c20-3 / they)
                                   :ARG1 (c20-8 / cigar)
                                   :ARG2 (c20-13 / and
                                                 :op1 (c20-11 / government-organization
                                                              :name (c20-15 / name
                                                                            :op1 "DOJ"))
                                                 :op2 (c20-2 / government-organization
                                                             :name (c20-7 / name
                                                                          :op1 "StL"
                                                                          :op2 "County"
                                                                          :op3 "PD")))))
       :snt2 (c20-12 / charge-05
                     :ARG1 (c20-6 / he)
                     :ARG1-of (c20-9 / cause-01
                                     :ARG0 (c20-0 / commit-02
                                                  :ARG0 c20-6
                                                  :ARG1 (c20-5 / crime-02)
                                                  :polarity -))
                     :polarity -))

# ::snt There are several witnesses. They don't all know each other and they're all saying the same things.
# ::tokens ["There", "are", "several", "witnesses", ".", "They", "do", "n't", "all", "know", "each", "other", "and", "they", "'re", "all", "saying", "the", "same", "things", "."]
# ::lemmas ["there", "be", "several", "witness", ".", "they", "do", "not", "all", "know", "each", "other", "and", "they", "be", "all", "say", "the", "same", "thing", "."]
(c21-5 / multi-sentence
       :snt1 (c21-7 / person
                    :ARG0-of (c21-2 / witness-01)
                    :quant (c21-10 / several))
       :snt2 (c21-8 / and
                    :op1 (c21-0 / know-02
                                :ARG0 (c21-4 / they
                                             :mod (c21-9 / all)
                                             :ARG1-of c21-0)
                                :polarity -)
                    :op2 (c21-3 / say-01
                                :ARG0 c21-4
                                :ARG1 (c21-6 / thing
                                             :ARG1-of (c21-1 / same-01)))))

# ::snt Ok, so you get accounts from the community he lives in where people already have a distrust in police
# ::tokens ["Ok", ",", "so", "you", "get", "accounts", "from", "the", "community", "he", "lives", "in", "where", "people", "already", "have", "a", "distrust", "in", "police"]
# ::lemmas ["ok", ",", "so", "you", "get", "account", "from", "the", "community", "he", "live", "in", "where", "people", "already", "have", "a", "distrust", "in", "police"]
(c22-4 / infer-01
       :ARG1 (c22-8 / get-01
                    :ARG0 (c22-0 / you)
                    :ARG1 (c22-7 / account)
                    :ARG2 (c22-5 / community
                                 :location-of (c22-2 / fear-01
                                                     :ARG0 (c22-6 / person)
                                                     :ARG1 (c22-3 / police)
                                                     :time (c22-11 / already))
                                 :ARG1-of (c22-9 / live-01
                                                 :ARG0 (c22-1 / he))))
       :ARG1-of (c22-10 / okay-04))

# ::snt why don't you check out the racial profiling statistics of the Ferguson PD? some real, hard facts.
# ::tokens ["why", "do", "n't", "you", "check", "out", "the", "racial", "profiling", "statistics", "of", "the", "Ferguson", "PD", "?", "some", "real", ",", "hard", "facts", "."]
# ::lemmas ["why", "do", "not", "you", "check", "out", "the", "racial", "profiling", "statistic", "of", "the", "Ferguson", "PD", "?", "some", "real", ",", "hard", "fact", "."]
(c23-4 / multi-sentence
       :snt1 (c23-8 / cause-01
                    :ARG0 (c23-12 / amr-unknown)
                    :ARG1 (c23-14 / check-out-05
                                  :ARG0 (c23-0 / you)
                                  :ARG1 (c23-10 / statistic
                                                :topic (c23-9 / profile-01
                                                              :mod (c23-13 / race))
                                                :poss (c23-7 / department
                                                             :mod (c23-6 / police)
                                                             :location (c23-11 / city
                                                                               :name (c23-15 / name
                                                                                             :op1 "Ferguson"))))
                                  :polarity -))
       :snt2 (c23-5 / fact
                    :ARG1-of (c23-1 / real-04)
                    :quant (c23-2 / some)
                    :ARG1-of (c23-3 / hard-04)))

# ::snt That right there tells me you are going into this with an agenda.
# ::tokens ["That", "right", "there", "tells", "me", "you", "are", "going", "into", "this", "with", "an", "agenda", "."]
# ::lemmas ["that", "right", "there", "tell", "i", "you", "be", "go", "into", "this", "with", "an", "agenda", "."]
(c24-3 / tell-01
       :ARG0 (c24-2 / that
                    :location (c24-1 / there
                                     :mod (c24-7 / right)))
       :ARG1 (c24-5 / go-06
                    :ARG0 (c24-0 / you)
                    :ARG1 (c24-8 / this)
                    :accompanier (c24-6 / agenda))
       :ARG2 (c24-4 / i))

# ::snt that I don't like racial profiling and think police should obey the law? That is definitely my agenda.
# ::tokens ["that", "I", "do", "n't", "like", "racial", "profiling", "and", "think", "police", "should", "obey", "the", "law", "?", "That", "is", "definitely", "my", "agenda", "."]
# ::lemmas ["that", "i", "do", "not", "like", "racial", "profiling", "and", "think", "police", "should", "obey", "the", "law", "?", "that", "be", "definitely", "my", "agenda", "."]
(c25-4 / multi-sentence
       :snt1 (c25-10 / and
                     :op1 (c25-7 / dislike-01
                                 :ARG0 (c25-9 / i)
                                 :ARG1 (c25-8 / profile-01
                                              :mod (c25-12 / race)))
                     :op2 (c25-3 / think-01
                                 :ARG0 c25-9
                                 :ARG1 (c25-0 / recommend-01
                                              :ARG1 (c25-13 / obey-01
                                                            :ARG0 (c25-6 / police)
                                                            :ARG1 (c25-11 / law))))
                     :polarity (c25-14 / amr-unknown))
       :snt2 (c25-15 / agenda
                     :poss (c25-1 / i)
                     :mod (c25-2 / definite)
                     :domain (c25-5 / that)))

# ::snt LOL
# ::tokens ["LOL"]
# ::lemmas ["LOL"]
(c26-0 / laugh-01
       :ARG0 (c26-2 / i)
       :manner (c26-1 / loud))

# ::snt No that you see this as a racial situation before you know anything.
# ::tokens ["No", "that", "you", "see", "this", "as", "a", "racial", "situation", "before", "you", "know", "anything", "."]
# ::lemmas ["no", "that", "you", "see", "this", "as", "a", "racial", "situation", "before", "you", "know", "anything", "."]
(c27-6 / see-01
       :ARG0 (c27-0 / you)
       :ARG1 (c27-3 / this)
       :ARG2 (c27-2 / situation
                    :mod (c27-5 / race))
       :time (c27-8 / before
                    :op1 (c27-1 / know-01
                                :ARG0 c27-0
                                :ARG1 (c27-4 / anything)))
       :mod (c27-7 / no))

# ::snt Rand Paul, yesterday: "Anyone who thinks race does not skew the application of criminal justice in this
# ::tokens ["Rand", "Paul", ",", "yesterday", ":", "\"", "Anyone", "who", "thinks", "race", "does", "not", "skew", "the", "application", "of", "criminal", "justice", "in", "this"]
# ::lemmas ["Rand", "Paul", ",", "yesterday", ":", "\"", "anyone", "who", "think", "race", "do", "not", "skew", "the", "application", "of", "criminal", "justice", "in", "this"]
(c28-8 / say-01
       :ARG0 (c28-4 / person
                    :name (c28-9 / name
                                 :op1 "Rand"
                                 :op2 "Paul"))
       :ARG1 (c28-1 / skew-01
                    :ARG0 (c28-7 / race)
                    :ARG1 (c28-6 / apply-02
                                 :ARG1 (c28-3 / justice
                                              :ARG2-of (c28-5 / criminal-03))
                                 :ARG2 (c28-2 / this))
                    :polarity -)
       :time (c28-0 / yesterday))

# ::snt country is just not paying close enough attention."
# ::tokens ["country", "is", "just", "not", "paying", "close", "enough", "attention", ".", "\""]
# ::lemmas ["country", "be", "just", "not", "pay", "close", "enough", "attention", ".", "\""]
(c29-3 / attend-02
       :ARG0 (c29-2 / country)
       :mod (c29-1 / just)
       :ARG1-of (c29-0 / have-degree-91
                       :ARG2 (c29-4 / close-10
                                    :ARG1 c29-3)
                       :ARG3 (c29-5 / enough))
       :polarity -)

# ::snt Anybody who uses it at every opportunity falsely weakens the message.
# ::tokens ["Anybody", "who", "uses", "it", "at", "every", "opportunity", "falsely", "weakens", "the", "message", "."]
# ::lemmas ["anybody", "who", "use", "it", "at", "every", "opportunity", "falsely", "weaken", "the", "message", "."]
(c30-0 / weaken-01
       :ARG0 (c30-5 / anybody
                    :ARG0-of (c30-4 / use-01
                                    :ARG1 (c30-3 / it)
                                    :ARG2 (c30-6 / opportunity
                                                 :mod (c30-7 / every))))
       :ARG1 (c30-1 / message)
       :manner (c30-2 / false))

# ::snt who says it's false? There's a large &amp; documented history of this PD arresting too many blacks.
# ::tokens ["who", "says", "it", "'s", "false", "?", "There", "'s", "a", "large", "&", "amp", ";", "documented", "history", "of", "this", "PD", "arresting", "too", "many", "blacks", "."]
# ::lemmas ["who", "say", "it", "be", "false", "?", "there", "be", "a", "large", "&", "amp", ";", "document", "history", "of", "this", "PD", "arrest", "too", "many", "black", "."]
(c31-3 / multi-sentence
       :snt1 (c31-15 / say-01
                     :ARG0 (c31-12 / amr-unknown)
                     :ARG1 (c31-4 / false
                                  :domain (c31-9 / it)))
       :snt2 (c31-0 / history
                    :mod (c31-13 / large)
                    :mod (c31-8 / document-01)
                    :topic (c31-14 / arrest-01
                                   :ARG0 (c31-1 / department
                                                :mod (c31-10 / police)
                                                :mod (c31-2 / this))
                                   :ARG1 (c31-7 / person
                                                :ARG1-of (c31-16 / black-05)
                                                :ARG1-of (c31-6 / have-quant-91
                                                                :ARG2 (c31-11 / many)
                                                                :ARG3 (c31-5 / too))))))

# ::snt Rand Paul used those words BECAUSE of this incident. Just fuck off dude. Fuck off so hard.
# ::tokens ["Rand", "Paul", "used", "those", "words", "BECAUSE", "of", "this", "incident", ".", "Just", "fuck", "off", "dude", ".", "Fuck", "off", "so", "hard", "."]
# ::lemmas ["Rand", "Paul", "use", "those", "word", "because", "of", "this", "incident", ".", "just", "fuck", "off", "dude", ".", "fuck", "off", "so", "hard", "."]
(c32-3 / multi-sentence
       :snt1 (c32-11 / use-01
                     :ARG0 (c32-8 / person
                                  :name (c32-14 / name
                                                :op1 "Rand"
                                                :op2 "Paul"))
                     :ARG1 (c32-0 / word
                                  :mod (c32-2 / that))
                     :ARG1-of (c32-9 / cause-01
                                     :ARG0 (c32-10 / incident
                                                   :mod (c32-4 / this))))
       :snt2 (c32-5 / fuck-off-03
                    :ARG0 (c32-7 / dude)
                    :mod (c32-6 / just)
                    :mode imperative)
       :snt3 (c32-12 / fuck-off-03
                     :ARG1-of (c32-1 / hard-02
                                     :degree (c32-13 / so))))

# ::snt You're making an assumption about something based on other peoples actions, that's my point.
# ::tokens ["You", "'re", "making", "an", "assumption", "about", "something", "based", "on", "other", "peoples", "actions", ",", "that", "'s", "my", "point", "."]
# ::lemmas ["you", "be", "make", "an", "assumption", "about", "something", "base", "on", "other", "people", "action", ",", "that", "be", "my", "point", "."]
(c33-3 / point-04
       :ARG0 (c33-2 / i)
       :ARG1 (c33-4 / assume-02
                    :ARG0 (c33-0 / you)
                    :ARG1 (c33-7 / something
                                 :ARG1-of (c33-8 / base-02
                                                 :ARG2 (c33-6 / act-02
                                                              :ARG0 (c33-1 / person
                                                                           :mod (c33-5 / other)))))))

# ::snt then tell me the people of Ferguson haven't EARNED some distrust.
# ::tokens ["then", "tell", "me", "the", "people", "of", "Ferguson", "have", "n't", "EARNED", "some", "distrust", "."]
# ::lemmas ["then", "tell", "i", "the", "people", "of", "Ferguson", "have", "not", "earned", "some", "distrust", "."]
(c34-1 / tell-01
       :ARG0 (c34-0 / you)
       :ARG1 (c34-9 / EARN-01
                    :ARG0 (c34-5 / person
                                 :mod (c34-4 / city
                                             :name (c34-8 / name
                                                          :op1 "Ferguson")))
                    :ARG1 (c34-2 / trust-02
                                 :quant (c34-7 / some))
                    :polarity -)
       :ARG2 (c34-6 / i)
       :time (c34-3 / then)
       :mode imperative)

# ::snt Right there you just admired they are all bad witnesses if they have distrusts in cops.
# ::tokens ["Right", "there", "you", "just", "admired", "they", "are", "all", "bad", "witnesses", "if", "they", "have", "distrusts", "in", "cops", "."]
# ::lemmas ["right", "there", "you", "just", "admire", "they", "be", "all", "bad", "witness", "if", "they", "have", "distrust", "in", "cop", "."]
(c35-8 / admire-01
       :ARG0 (c35-0 / you)
       :ARG1 (c35-1 / witness-01
                    :ARG0 (c35-3 / they
                                 :mod (c35-10 / all))
                    :ARG1-of (c35-11 / bad-07)
                    :condition (c35-2 / have-03
                                      :ARG0 c35-3
                                      :ARG1 (c35-4 / trust-02
                                                   :ARG0 c35-3
                                                   :ARG1 (c35-7 / cop)
                                                   :polarity -)))
       :location (c35-5 / there
                        :mod (c35-9 / right))
       :mod (c35-6 / just))

# ::snt and you want to make a decision without any hard facts.
# ::tokens ["and", "you", "want", "to", "make", "a", "decision", "without", "any", "hard", "facts", "."]
# ::lemmas ["and", "you", "want", "to", "make", "a", "decision", "without", "any", "hard", "fact", "."]
(c36-5 / and
       :op2 (c36-1 / want-01
                   :ARG0 (c36-0 / you)
                   :ARG1 (c36-4 / decide-01
                                :ARG0 c36-0)
                   :manner (c36-3 / fact
                                  :ARG1-of (c36-2 / hard-02)
                                  :mod (c36-6 / any)
                                  :polarity -)))

# ::snt You don't want to see what's happening? Fine. Keep being naive. Good day.
# ::tokens ["You", "do", "n't", "want", "to", "see", "what", "'s", "happening", "?", "Fine", ".", "Keep", "being", "naive", ".", "Good", "day", "."]
# ::lemmas ["you", "do", "not", "want", "to", "see", "what", "be", "happen", "?", "fine", ".", "keep", "be", "naive", ".", "Good", "day", "."]
(c37-3 / multi-sentence
       :snt1 (c37-2 / want-01
                    :ARG0 (c37-0 / you)
                    :ARG1 (c37-8 / see-01
                                 :ARG0 c37-0
                                 :ARG1 (c37-11 / event))
                    :ARG1-of (c37-7 / request-confirmation-91)
                    :polarity -)
       :snt2 (c37-4 / fine-04
                    :ARG1 (c37-1 / keep-02
                                 :ARG0 (c37-10 / you)
                                 :ARG1 (c37-9 / naive
                                              :domain c37-10)))
       :snt3 (c37-5 / day
                    :ARG1-of (c37-6 / good-02)))

# ::snt I see a lot of people making assumptions with limited facts. We haven't even seen an autopsy report.
# ::tokens ["I", "see", "a", "lot", "of", "people", "making", "assumptions", "with", "limited", "facts", ".", "We", "have", "n't", "even", "seen", "an", "autopsy", "report", "."]
# ::lemmas ["i", "see", "a", "lot", "of", "people", "make", "assumption", "with", "limited", "fact", ".", "we", "have", "not", "even", "see", "an", "autopsy", "report", "."]
(c38-2 / multi-sentence
       :snt1 (c38-10 / see-01
                     :ARG0 (c38-5 / i)
                     :ARG1 (c38-6 / assume-02
                                  :ARG0 (c38-4 / person
                                               :quant (c38-7 / lot))
                                  :instrument (c38-3 / fact
                                                     :ARG1-of (c38-11 / limit-01))))
       :snt2 (c38-1 / see-01
                    :ARG0 (c38-0 / we)
                    :ARG1 (c38-8 / report-01
                                 :ARG1 (c38-9 / autopsy))
                    :mod (c38-12 / even)
                    :polarity -))

# ::snt autopsy report SPOILER alert: died from multiple gunshot wounds
# ::tokens ["autopsy", "report", "SPOILER", "alert", ":", "died", "from", "multiple", "gunshot", "wounds"]
# ::lemmas ["autopsy", "report", "SPOILER", "alert", ":", "die", "from", "multiple", "gunshot", "wound"]
(c39-1 / multi-sentence
       :snt1 (c39-7 / report-01
                    :ARG1 (c39-5 / autopsy-01))
       :snt2 (c39-8 / alert-01
                    :ARG2 (c39-2 / die-01
                                 :ARG1-of (c39-3 / cause-01
                                                 :ARG0 (c39-0 / wound-01
                                                              :ARG0 (c39-9 / shoot-01
                                                                           :ARG2 (c39-6 / gun))
                                                              :quant (c39-4 / multiple))))))

# ::snt Was he shot in the chest or back? From ' away or ' away? Which wounds came first?
# ::tokens ["Was", "he", "shot", "in", "the", "chest", "or", "back", "?", "From", "'", "away", "or", "'", "away", "?", "Which", "wounds", "came", "first", "?"]
# ::lemmas ["be", "he", "shoot", "in", "the", "chest", "or", "back", "?", "from", "'", "away", "or", "'", "away", "?", "which", "wound", "come", "first", "?"]
(c40-4 / multi-sentence
       :snt1 (c40-14 / shoot-02
                     :ARG1 (c40-1 / he)
                     :ARG2 (c40-11 / or
                                   :op1 (c40-8 / chest)
                                   :op2 (c40-16 / back))
                     :polarity (c40-10 / amr-unknown))
       :snt2 (c40-7 / or
                    :op1 (c40-5 / from
                                :op1 (c40-12 / away))
                    :op2 (c40-2 / from
                                :op1 (c40-13 / away))
                    :polarity (c40-9 / amr-unknown))
       :snt3 (c40-6 / come-04
                    :ARG1 (c40-0 / wound
                                 :mod (c40-15 / amr-unknown))
                    :ARG2 (c40-3 / ordinal-entity
                                 :value 1)))

# ::snt everyone agrees he was shot once at close range and multiple times at + feet.
# ::tokens ["everyone", "agrees", "he", "was", "shot", "once", "at", "close", "range", "and", "multiple", "times", "at", "+", "feet", "."]
# ::lemmas ["everyone", "agree", "he", "be", "shoot", "once", "at", "close", "range", "and", "multiple", "time", "at", "+", "foot", "."]
(c41-6 / agree-01
       :ARG0 (c41-10 / everyone)
       :ARG1 (c41-8 / and
                    :op1 (c41-9 / shoot-01
                                :ARG1 (c41-0 / he)
                                :ARG2 (c41-7 / range-01
                                             :ARG1-of (c41-5 / close-10))
                                :frequency 1)
                    :op2 (c41-1 / shoot-01
                                :frequency (c41-2 / multiple)
                                :op1 (c41-4 / distance-quantity
                                            :unit (c41-3 / foot)
                                            :quant 1)
                                :ARG2 +)))

# ::snt They've already said he shot him once from the car. Christ.
# ::tokens ["They", "'ve", "already", "said", "he", "shot", "him", "once", "from", "the", "car", ".", "Christ", "."]
# ::lemmas ["they", "'ve", "already", "say", "he", "shoot", "he", "once", "from", "the", "car", ".", "Christ", "."]
(c42-3 / multi-sentence
       :snt1 (c42-8 / say-01
                    :ARG0 (c42-2 / they)
                    :ARG1 (c42-1 / shoot-02
                                 :ARG0 (c42-0 / he)
                                 :ARG2 (c42-4 / he)
                                 :source (c42-5 / car)
                                 :frequency 1)
                    :time (c42-7 / already))
       :snt2 (c42-6 / person
                    :name (c42-9 / name
                                 :op1 "Christ")))

# ::snt If he was shot in the chest or back is the biggest factor in who is right.
# ::tokens ["If", "he", "was", "shot", "in", "the", "chest", "or", "back", "is", "the", "biggest", "factor", "in", "who", "is", "right", "."]
# ::lemmas ["if", "he", "be", "shoot", "in", "the", "chest", "or", "back", "be", "the", "big", "factor", "in", "who", "be", "right", "."]
(c43-1 / factor-01
       :ARG2 (c43-4 / person
                    :ARG1-of (c43-7 / right-06))
       :condition (c43-9 / shoot-02
                         :ARG1 (c43-0 / he
                                      :part (c43-8 / or
                                                   :op1 (c43-5 / chest)
                                                   :op2 (c43-10 / back)
                                                   :ARG2-of c43-9)))
       :ARG1-of (c43-3 / have-degree-91
                       :ARG2 (c43-6 / big)
                       :ARG3 (c43-2 / most)))

# ::snt What? No it isn't. There is definitely no justification for deadly force once he was running.
# ::tokens ["What", "?", "No", "it", "is", "n't", ".", "There", "is", "definitely", "no", "justification", "for", "deadly", "force", "once", "he", "was", "running", "."]
# ::lemmas ["what", "?", "no", "it", "be", "not", ".", "there", "be", "definitely", "no", "justification", "for", "deadly", "force", "once", "he", "be", "run", "."]
(c44-2 / multi-sentence
       :snt1 (c44-6 / and
                    :op1 (c44-8 / amr-unknown)
                    :op2 (c44-9 / amr-unknown
                                :polarity -))
       :snt2 (c44-3 / justify-01
                    :ARG1 (c44-4 / force
                                 :ARG0-of (c44-0 / kill-01))
                    :mod (c44-5 / definite)
                    :time (c44-7 / run-02
                                 :ARG0 (c44-1 / he))
                    :polarity -))

# ::snt If he was shot in the chest how was he running away?
# ::tokens ["If", "he", "was", "shot", "in", "the", "chest", "how", "was", "he", "running", "away", "?"]
# ::lemmas ["if", "he", "be", "shoot", "in", "the", "chest", "how", "be", "he", "run", "away", "?"]
(c45-3 / run-02
       :ARG0 (c45-0 / he
                    :part (c45-1 / chest))
       :direction (c45-2 / away)
       :manner (c45-4 / amr-unknown)
       :condition (c45-5 / shoot-02
                         :ARG1 c45-0
                         :location c45-1))

# ::snt in your world, it's cool to shoot unarmed people in the chest, but not the back? Or vice versa?
# ::tokens ["in", "your", "world", ",", "it", "'s", "cool", "to", "shoot", "unarmed", "people", "in", "the", "chest", ",", "but", "not", "the", "back", "?", "Or", "vice", "versa", "?"]
# ::lemmas ["in", "your", "world", ",", "it", "be", "cool", "to", "shoot", "unarmed", "people", "in", "the", "chest", ",", "but", "not", "the", "back", "?", "or", "vice", "versa", "?"]
(c46-3 / multi-sentence
       :snt1 (c46-6 / cool-04
                    :ARG1 (c46-10 / contrast-01
                                  :ARG1 (c46-12 / shoot-01
                                                :ARG1 (c46-5 / person
                                                             :ARG1-of (c46-9 / arm-01
                                                                             :polarity -)
                                                             :part (c46-7 / chest
                                                                          :ARG2-of c46-12)))
                                  :ARG2 (c46-2 / shoot-01
                                               :ARG1 c46-5
                                               :ARG2 (c46-13 / back)
                                               :polarity -))
                    :location (c46-1 / world
                                     :poss (c46-0 / you)))
       :snt2 (c46-4 / or
                    :op2 (c46-8 / vicevert
                                :domain c46-10)
                    :polarity (c46-11 / amr-unknown)))

# ::snt If he was shot in the back he was running away but shot in the chest he could have been charging.
# ::tokens ["If", "he", "was", "shot", "in", "the", "back", "he", "was", "running", "away", "but", "shot", "in", "the", "chest", "he", "could", "have", "been", "charging", "."]
# ::lemmas ["if", "he", "be", "shoot", "in", "the", "back", "he", "be", "run", "away", "but", "shoot", "in", "the", "chest", "he", "could", "have", "be", "charge", "."]
(c47-2 / contrast-01
       :ARG1 (c47-7 / run-02
                    :ARG0 (c47-0 / he
                                 :part (c47-9 / back))
                    :direction (c47-6 / away))
       :ARG2 (c47-3 / possible-01
                    :ARG1 (c47-8 / charge-02
                                 :ARG0 c47-0)
                    :condition (c47-4 / shoot-02
                                      :ARG1 c47-0
                                      :ARG2 (c47-5 / chest)))
       :condition (c47-1 / shoot-02
                         :ARG1 c47-0
                         :ARG2 c47-5))

# ::snt Yeah, I would totally expect a kid that's been shot to run away, get shot again, and decide to charge.
# ::tokens ["Yeah", ",", "I", "would", "totally", "expect", "a", "kid", "that", "'s", "been", "shot", "to", "run", "away", ",", "get", "shot", "again", ",", "and", "decide", "to", "charge", "."]
# ::lemmas ["yeah", ",", "i", "would", "totally", "expect", "a", "kid", "that", "be", "be", "shoot", "to", "run", "away", ",", "get", "shoot", "again", ",", "and", "decide", "to", "charge", "."]
(c48-12 / expect-01
        :ARG0 (c48-5 / i)
        :ARG1 (c48-7 / and
                     :op1 (c48-8 / run-02
                                 :ARG0 (c48-0 / kid
                                              :ARG1-of (c48-11 / shoot-02))
                                 :direction (c48-9 / away))
                     :op2 (c48-2 / shoot-02
                                 :ARG1 c48-0
                                 :mod (c48-10 / again))
                     :op3 (c48-4 / decide-01
                                 :ARG0 c48-0
                                 :ARG1 (c48-6 / charge-05
                                              :ARG0 c48-0)))
        :degree (c48-3 / total)
        :mod (c48-1 / yeah
                    :mode expressive))

# ::snt Has that info came out yet?
# ::tokens ["Has", "that", "info", "came", "out", "yet", "?"]
# ::lemmas ["have", "that", "info", "come", "out", "yet", "?"]
(c49-3 / come-out-09
       :polarity (c49-4 / amr-unknown)
       :ARG1 (c49-2 / information
                    :mod (c49-1 / that))
       :time (c49-0 / yet))

# ::snt confused how an unarmed person, charging, retreating, or standing still, is a threat to a cop ' away
# ::tokens ["confused", "how", "an", "unarmed", "person", ",", "charging", ",", "retreating", ",", "or", "standing", "still", ",", "is", "a", "threat", "to", "a", "cop", "'", "away"]
# ::lemmas ["confuse", "how", "an", "unarmed", "person", ",", "charge", ",", "retreat", ",", "or", "stand", "still", ",", "be", "a", "threat", "to", "a", "cop", "'", "away"]
(c50-4 / confuse-01
       :ARG2 (c50-2 / thing
                    :manner-of (c50-1 / threaten-01
                                      :ARG0 (c50-9 / or
                                                   :op1 (c50-3 / person
                                                               :ARG1-of (c50-7 / arm-01
                                                                               :polarity -))
                                                   :op2 (c50-11 / charge-05
                                                                :ARG0 c50-3)
                                                   :op3 (c50-8 / retreat-01
                                                               :ARG0 c50-3)
                                                   :op4 (c50-5 / stand-01
                                                               :ARG1 c50-3
                                                               :ARG2 (c50-0 / still)))
                                      :ARG2 (c50-6 / cop)
                                      :direction (c50-10 / away))))
