# ::snt It depends on the laws of the state usually.
# ::tokens ["It", "depends", "on", "the", "laws", "of", "the", "state", "usually", "."]
# ::lemmas ["it", "depend", "on", "the", "law", "of", "the", "state", "usually", "."]
(c1-0 / depend-01
      :ARG0 (c1-1 / it)
      :ARG1 (c1-3 / law
                  :poss (c1-4 / state))
      :mod (c1-2 / usual))

# ::snt How else would you measure a cop's job performance?
# ::tokens ["How", "else", "would", "you", "measure", "a", "cop", "'s", "job", "performance", "?"]
# ::lemmas ["how", "else", "would", "you", "measure", "a", "cop", "'s", "job", "performance", "?"]
(c2-1 / measure-01
      :ARG0 (c2-0 / you)
      :ARG1 (c2-3 / perform-02
                  :ARG0 (c2-4 / cop)
                  :ARG1 (c2-2 / job))
      :ARG2 (c2-5 / amr-unknown
                  :mod (c2-6 / else)))

# ::snt Fair, respectful, reflective performance assessments which are employee-driven and based on best-practices derived from evidence-based evaluation criteria that focus on not just a single metric (like arrests, which are mutually exclusive from the officer and therefore aren't a fair measurement) and....shit, where was I going with that? I was typing away and this loud ad for Space Force started autoplaying and forgot what I was yammering on about. You know what we need? Space prison.
# ::tokens ["Fair", ",", "respectful", ",", "reflective", "performance", "assessments", "which", "are", "employee", "-", "driven", "and", "based", "on", "best", "-", "practices", "derived", "from", "evidence", "-", "based", "evaluation", "criteria", "that", "focus", "on", "not", "just", "a", "single", "metric", "(", "like", "arrests", ",", "which", "are", "mutually", "exclusive", "from", "the", "officer", "and", "therefore", "are", "n't", "a", "fair", "measurement", ")", "and", "....", "shit", ",", "where", "was", "I", "going", "with", "that", "?", "I", "was", "typing", "away", "and", "this", "loud", "ad", "for", "Space", "Force", "started", "autoplaying", "and", "forgot", "what", "I", "was", "yammering", "on", "about", ".", "You", "know", "what", "we", "need", "?", "Space", "prison", "."]
# ::lemmas ["fair", ",", "respectful", ",", "reflective", "performance", "assessment", "which", "be", "employee", "-", "drive", "and", "base", "on", "good", "-", "practice", "derive", "from", "evidence", "-", "base", "evaluation", "criterion", "that", "focus", "on", "not", "just", "a", "single", "metric", "(", "like", "arrest", ",", "which", "be", "mutually", "exclusive", "from", "the", "officer", "and", "therefore", "be", "not", "a", "fair", "measurement", ")", "and", "....", "shit", ",", "where", "be", "i", "go", "with", "that", "?", "i", "be", "type", "away", "and", "this", "loud", "ad", "for", "Space", "Force", "start", "autoplaye", "and", "forget", "what", "i", "be", "yammer", "on", "about", ".", "you", "know", "what", "we", "need", "?", "space", "prison", "."]
(c3-34 / multi-sentence
       :snt1 (c3-25 / and
                    :op1 (c3-7 / assess-01
                               :ARG1 (c3-22 / perform-02)
                               :ARG1-of (c3-21 / fair-01)
                               :ARG0-of (c3-5 / respect-01)
                               :ARG1-of (c3-10 / reflect-01)
                               :ARG1-of (c3-31 / base-02
                                               :ARG2 (c3-39 / method
                                                            :ARG1-of (c3-37 / base-02
                                                                            :ARG2 (c3-30 / evidence))
                                                            :ARG0-of (c3-36 / evaluate-01)
                                                            :ARG0-of (c3-27 / focus-01
                                                                            :ARG2 (c3-6 / metric
                                                                                        :ARG1-of (c3-16 / single-02
                                                                                                        :polarity -)
                                                                                        :example (c3-28 / arrest-01
                                                                                                        :ARG1-of (c3-40 / exclusive-02
                                                                                                                        :ARG0 (c3-26 / officer)
                                                                                                                        :manner (c3-13 / mutual))
                                                                                                        :ARG0-of (c3-15 / cause-01
                                                                                                                        :ARG1 (c3-3 / measure-01
                                                                                                                                    :ARG1-of (c3-8 / fair-01
                                                                                                                                                   :polarity -)))))))))
                    :op2 (c3-2 / and
                               :op1 (c3-11 / type-01
                                           :ARG0 (c3-23 / i)
                                           :manner (c3-9 / away))
                               :op2 (c3-20 / start-01
                                           :ARG0 (c3-38 / advertise-01
                                                        :mod (c3-4 / loud)
                                                        :mod (c3-33 / this)
                                                        :beneficiary (c3-14 / military
                                                                            :name (c3-18 / name
                                                                                         :op1 "Space"
                                                                                         :op2 "Force")))
                                           :ARG1 (c3-29 / autoplay-00
                                                        :ARG0 c3-38))
                               :op3 (c3-24 / forget-01
                                           :ARG0 c3-23
                                           :ARG1 (c3-12 / thing
                                                        :ARG1-of (c3-17 / think-01
                                                                        :ARG0 c3-23))))
                    :snt2 (c3-32 / know-01
                                 :ARG0 c3-23
                                 :ARG1 (c3-1 / need-01
                                             :ARG0 (c3-0 / we)
                                             :ARG1 (c3-35 / prison
                                                          :mod (c3-19 / space))))))

# ::snt Thanos bro
# ::tokens ["Thanos", "bro"]
# ::lemmas ["Thanos", "bro"]
(c4-2 / person
      :name (c4-0 / name
                  :op1 "Thanos")
      :ARG0-of (c4-1 / have-rel-role-91
                     :ARG2 (c4-3 / bro)))

# ::snt Most departments don't have a true quota, but officers are expected to generate revenue through ticketing.
# ::tokens ["Most", "departments", "do", "n't", "have", "a", "true", "quota", ",", "but", "officers", "are", "expected", "to", "generate", "revenue", "through", "ticketing", "."]
# ::lemmas ["most", "department", "do", "not", "have", "a", "true", "quota", ",", "but", "officer", "be", "expect", "to", "generate", "revenue", "through", "ticket", "."]
(c5-5 / contrast-01
      :ARG1 (c5-0 / have-03
                  :ARG0 (c5-4 / department
                              :quant (c5-2 / most))
                  :ARG1 (c5-9 / quota
                              :ARG1-of (c5-1 / true-01))
                  :polarity -)
      :ARG2 (c5-10 / expect-01
                   :ARG1 (c5-6 / generate-01
                               :ARG0 (c5-8 / officer)
                               :ARG1 (c5-7 / revenue)
                               :manner (c5-3 / ticket-02))))

# ::snt Yes in a city where I live, they occasionally post a man on every corner of an intersection for -5 blocks to ticket jay walkers once a month.
# ::tokens ["Yes", "in", "a", "city", "where", "I", "live", ",", "they", "occasionally", "post", "a", "man", "on", "every", "corner", "of", "an", "intersection", "for", "-5", "blocks", "to", "ticket", "jay", "walkers", "once", "a", "month", "."]
# ::lemmas ["yes", "in", "a", "city", "where", "i", "live", ",", "they", "occasionally", "post", "a", "man", "on", "every", "corner", "of", "an", "intersection", "for", "-5", "block", "to", "ticket", "jay", "walker", "once", "a", "month", "."]
(c6-10 / post-01
       :ARG0 (c6-3 / they)
       :ARG1 (c6-4 / man)
       :ARG2 (c6-9 / corner
                   :mod (c6-16 / every)
                   :part-of (c6-11 / intersect-01))
       :purpose (c6-5 / ticket-01
                      :ARG0 c6-3
                      :ARG1 (c6-8 / person
                                  :ARG0-of (c6-1 / walk-01
                                                 :mod (c6-6 / jay))))
       :frequency (c6-13 / rate-entity-91
                         :ARG2 (c6-7 / temporal-quantity
                                     :unit (c6-14 / month)
                                     :quant 1)
                         :ARG1 1)
       :location (c6-15 / city
                        :location-of (c6-12 / live-01
                                            :ARG0 (c6-2 / i)))
       :mod (c6-0 / yes))

# ::snt Cop here:No. I've made maybe traffic stops this month.
# ::tokens ["Cop", "here", ":", "No", ".", "I", "'ve", "made", "maybe", "traffic", "stops", "this", "month", "."]
# ::lemmas ["Cop", "here", ":", "no", ".", "i", "'ve", "make", "maybe", "traffic", "stop", "this", "month", "."]
(c7-2 / multi-sentence
      :snt1 (c7-5 / cop
                  :location (c7-0 / here))
      :snt2 (c7-8 / stop-01
                  :ARG0 (c7-4 / i)
                  :ARG1 (c7-1 / traffic)
                  :ARG1-of (c7-6 / possible-01)
                  :time (c7-7 / month
                              :mod (c7-3 / this))))

# ::snt How is this possible
# ::tokens ["How", "is", "this", "possible"]
# ::lemmas ["how", "be", "this", "possible"]
(c8-1 / possible-01
      :ARG1 (c8-2 / this)
      :manner (c8-0 / amr-unknown))

# ::snt Contrary to what people think, our job isn't to go out and pull people over.90% of my day is answering calls.
# ::tokens ["Contrary", "to", "what", "people", "think", ",", "our", "job", "is", "n't", "to", "go", "out", "and", "pull", "people", "over.90", "%", "of", "my", "day", "is", "answering", "calls", "."]
# ::lemmas ["contrary", "to", "what", "people", "think", ",", "our", "job", "be", "not", "to", "go", "out", "and", "pull", "people", "over.90", "%", "of", "my", "day", "be", "answer", "call", "."]
(c9-4 / multi-sentence
      :snt1 (c9-9 / contrary-01
                  :ARG1 (c9-3 / think-01
                              :ARG0 (c9-8 / person))
                  :ARG2 (c9-5 / job
                              :poss (c9-0 / we)
                              :domain (c9-11 / and
                                             :op1 (c9-12 / go-out-17
                                                         :ARG0 c9-0)
                                             :op2 (c9-6 / pull-over-05
                                                        :ARG0 c9-0
                                                        :ARG1 (c9-1 / person)))
                              :polarity -))
      :snt2 (c9-14 / answer-01
                   :ARG0 (c9-10 / i)
                   :ARG1 (c9-15 / call-02)
                   :ARG1-of (c9-2 / include-91
                                  :ARG2 (c9-7 / day
                                              :poss c9-10)
                                  :ARG3 (c9-13 / percentage-entity
                                               :value 90))))
