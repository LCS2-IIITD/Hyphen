# ::snt I was shocked to read such a thing from our VP of US. Oh my Goodness, doesn't anyone read their bibles. I
# ::tokens ["I", "was", "shocked", "to", "read", "such", "a", "thing", "from", "our", "VP", "of", "US", ".", "Oh", "my", "Goodness", ",", "does", "n't", "anyone", "read", "their", "bibles", ".", "I"]
# ::lemmas ["i", "be", "shocked", "to", "read", "such", "a", "thing", "from", "our", "VP", "of", "US", ".", "oh", "my", "goodness", ",", "do", "not", "anyone", "read", "their", "bible", ".", "i"]
(c1-18 / multi-sentence
       :snt1 (c1-8 / shock-01
                   :ARG0 (c1-3 / read-01
                               :ARG0 (c1-11 / i)
                               :ARG1 (c1-6 / thing
                                           :mod (c1-10 / such))
                               :ARG2 (c1-12 / person
                                            :ARG0-of (c1-1 / have-org-role-91
                                                           :ARG1 (c1-7 / country
                                                                       :name (c1-9 / name
                                                                                   :op1 "US"))
                                                           :ARG2 (c1-19 / president
                                                                        :mod (c1-2 / vice)))
                                            :poss (c1-0 / we)))
                   :ARG1 c1-11)
       :snt2 (c1-4 / read-01
                   :ARG0 (c1-13 / anyone)
                   :ARG1 (c1-16 / book
                                :poss (c1-17 / they))
                   :mod (c1-14 / goodness
                               :poss (c1-5 / i)
                               :mode expressive)
                   :mod (c1-15 / oh)
                   :polarity -))

# ::snt This is not funny.
# ::tokens ["This", "is", "not", "funny", "."]
# ::lemmas ["this", "be", "not", "funny", "."]
(c2-0 / funny
      :domain (c2-1 / this)
      :polarity -)

# ::snt For a little more Pence reading... this is real though
# ::tokens ["For", "a", "little", "more", "Pence", "reading", "...", "this", "is", "real", "though"]
# ::lemmas ["for", "a", "little", "more", "Pence", "reading", "...", "this", "be", "real", "though"]
(c3-3 / multi-sentence
      :snt1 (c3-6 / read-01
                  :ARG0 (c3-4 / person
                              :name (c3-8 / name
                                          :op1 "Pervez"))
                  :mod (c3-7 / more
                             :quant (c3-5 / little)))
      :snt2 (c3-0 / real-04
                  :ARG1 (c3-2 / this)
                  :ARG1-of (c3-1 / have-concession-91)))

# ::snt What!
# ::tokens ["What", "!"]
# ::lemmas ["what", "!"]
(c4-0 / amr-unknown
      :mode expressive)

# ::snt LMAO!!! Most believable story yet
# ::tokens ["LMAO", "!", "!", "!", "Most", "believable", "story", "yet"]
# ::lemmas ["lmao", "!", "!", "!", "most", "believable", "story", "yet"]
(c5-2 / multi-sentence
      :snt1 (c5-5 / laugh-01
                  :ARG1 (c5-4 / ass
                              :part-of (c5-3 / i))
                  :mod (c5-6 / off)
                  :mode expressive)
      :snt2 (c5-8 / story
                  :ARG1-of (c5-1 / have-degree-91
                                 :ARG2 (c5-9 / believable)
                                 :ARG3 (c5-7 / most)
                                 :ARG5 (c5-0 / yet))))

# ::snt ...or Pence believes he has been asked so he is trying to kill thousands of other peoples children instead to appease him.
# ::tokens ["...", "or", "Pence", "believes", "he", "has", "been", "asked", "so", "he", "is", "trying", "to", "kill", "thousands", "of", "other", "peoples", "children", "instead", "to", "appease", "him", "."]
# ::lemmas ["...", "or", "Pence", "believe", "he", "have", "be", "ask", "so", "he", "be", "try", "to", "kill", "thousands", "of", "other", "people", "child", "instead", "to", "appease", "he", "."]
(c6-11 / or
       :op2 (c6-15 / believe-01
                   :ARG0 (c6-7 / person
                               :name (c6-14 / name
                                            :op1 "Pervez"))
                   :ARG1 (c6-10 / ask-02
                                :ARG2 c6-7
                                :ARG0-of (c6-8 / cause-01
                                               :ARG1 (c6-3 / try-01
                                                           :ARG0 c6-7
                                                           :ARG1 (c6-0 / kill-01
                                                                       :ARG0 c6-7
                                                                       :ARG1 (c6-5 / person
                                                                                   :ARG0-of (c6-2 / have-rel-role-91
                                                                                                  :ARG1 (c6-1 / person
                                                                                                              :mod (c6-6 / other))
                                                                                                  :ARG2 (c6-13 / child))
                                                                                   :quant (c6-4 / multiple
                                                                                                :op1 1000))
                                                                       :ARG1-of (c6-9 / instead-of-91
                                                                                      :ARG2 (c6-12 / appease-01
                                                                                                   :ARG0 c6-7
                                                                                                   :ARG1 c6-7))))))))

# ::snt What? Sick
# ::tokens ["What", "?", "Sick"]
# ::lemmas ["what", "?", "sick"]
(c7-1 / sick-05
      :ARG1 (c7-0 / amr-unknown))

# ::snt Abraham-ism and circumcision-worship are SATANIC.
# ::tokens ["Abraham", "-", "ism", "and", "circumcision", "-", "worship", "are", "SATANIC", "."]
# ::lemmas ["Abraham", "-", "ism", "and", "circumcision", "-", "worship", "be", "SATANIC", "."]
(c8-4 / SATANIC
      :domain (c8-2 / and
                    :op1 (c8-3 / religious-group
                               :name (c8-5 / name
                                           :op1 "Abraham"))
                    :op2 (c8-0 / worship-01
                               :ARG1 (c8-1 / circumcise-01))))

# ::snt This nut think hes Abraham, His sacrifice unto God is foolishness from the White House
# ::tokens ["This", "nut", "think", "he", "s", "Abraham", ",", "His", "sacrifice", "unto", "God", "is", "foolishness", "from", "the", "White", "House"]
# ::lemmas ["this", "nut", "think", "he", "s", "Abraham", ",", "his", "sacrifice", "unto", "God", "be", "foolishness", "from", "the", "White", "House"]
(c9-2 / think-01
      :ARG0 (c9-12 / nut
                   :mod (c9-1 / this))
      :ARG1 (c9-8 / and
                  :op1 (c9-6 / person
                             :name (c9-5 / name
                                         :op1 "Abraham")
                             :domain (c9-0 / he))
                  :op2 (c9-3 / foolishness
                             :domain (c9-11 / sacrifice-01
                                            :ARG0 c9-0
                                            :ARG2 (c9-4 / person
                                                        :name (c9-9 / name
                                                                    :op1 "God")))
                             :source (c9-10 / government-organization
                                            :name (c9-7 / name
                                                        :op1 "White"
                                                        :op2 "House")))))

# ::snt Reading other texts I figure this must be satire ?
# ::tokens ["Reading", "other", "texts", "I", "figure", "this", "must", "be", "satire", "?"]
# ::lemmas ["read", "other", "text", "i", "figure", "this", "must", "be", "satire", "?"]
(c10-1 / figure-01
       :polarity (c10-6 / amr-unknown)
       :ARG0 (c10-4 / i)
       :ARG1 (c10-8 / obligate-01
                    :ARG1 (c10-9 / satire
                                 :domain (c10-0 / this)))
       :ARG1-of (c10-5 / cause-01
                       :ARG0 (c10-7 / read-01
                                    :ARG0 c10-4
                                    :ARG1 (c10-2 / text
                                                 :mod (c10-3 / other)))))

# ::snt "Hurr durr I bet this actually happens. Twitter please verify me, I said something anti-Trump."
# ::tokens ["\"", "Hurr", "durr", "I", "bet", "this", "actually", "happens", ".", "Twitter", "please", "verify", "me", ",", "I", "said", "something", "anti", "-", "Trump", ".", "\""]
# ::lemmas ["\"", "hurr", "durr", "i", "bet", "this", "actually", "happen", ".", "twitter", "please", "verify", "i", ",", "i", "say", "something", "anti", "-", "Trump", ".", "\""]
(c11-4 / multi-sentence
       :snt1 (c11-14 / say-01
                     :ARG0 (c11-8 / i)
                     :ARG1 (c11-17 / bet-01
                                   :ARG0 c11-8
                                   :ARG2 (c11-16 / event
                                                 :mod (c11-3 / this)
                                                 :ARG1-of (c11-12 / actual-02))
                                   :mod (c11-1 / hard)))
       :snt2 (c11-10 / verify-01
                     :ARG0 (c11-9 / publication
                                  :name (c11-15 / name
                                                :op1 "Twitter"))
                     :ARG1 (c11-2 / i)
                     :ARG1-of (c11-11 / cause-01
                                      :ARG0 (c11-5 / say-01
                                                   :ARG0 c11-2
                                                   :ARG1 (c11-0 / something
                                                                :ARG0-of (c11-13 / oppose-01
                                                                                 :ARG1 (c11-6 / person
                                                                                              :name (c11-7 / name
                                                                                                           :op1 "Trump"))))))
                     :mode imperative
                     :polite +))

# ::snt why is this plausible
# ::tokens ["why", "is", "this", "plausible"]
# ::lemmas ["why", "be", "this", "plausible"]
(c12-2 / plausible
       :domain (c12-3 / this)
       :ARG1-of (c12-0 / cause-01
                       :ARG0 (c12-1 / amr-unknown)))

# ::snt If one of them were gay, he'd know God's will.
# ::tokens ["If", "one", "of", "them", "were", "gay", ",", "he", "'d", "know", "God", "'s", "will", "."]
# ::lemmas ["if", "one", "of", "they", "be", "gay", ",", "he", "would", "know", "God", "'s", "will", "."]
(c13-0 / know-01
       :ARG0 (c13-2 / he)
       :ARG1 (c13-1 / will-02
                    :ARG0 (c13-5 / person
                                 :name (c13-8 / name
                                              :op1 "God")))
       :condition (c13-7 / gay-01
                         :ARG1 (c13-4 / person
                                      :ARG1-of (c13-6 / include-91
                                                      :ARG2 (c13-3 / they))
                                      :quant 1)))

# ::snt H e is killing plenty of American children where he is now
# ::tokens ["H", "e", "is", "killing", "plenty", "of", "American", "children", "where", "he", "is", "now"]
# ::lemmas ["h", "e", "be", "kill", "plenty", "of", "American", "child", "where", "he", "be", "now"]
(c14-0 / kill-01
       :ARG0 (c14-5 / person
                    :name (c14-9 / name
                                 :op1 "H e"))
       :ARG1 (c14-6 / child
                    :mod (c14-8 / country
                                :name (c14-4 / name
                                             :op1 "America"))
                    :quant (c14-3 / plenty)
                    :location (c14-2 / thing
                                     :location-of (c14-1 / he)
                                     :time (c14-7 / now))))

# ::snt Sad that The Onion stories dont sound so far fetched with this crazy bunch in the WH!
# ::tokens ["Sad", "that", "The", "Onion", "stories", "do", "nt", "sound", "so", "far", "fetched", "with", "this", "crazy", "bunch", "in", "the", "WH", "!"]
# ::lemmas ["sad", "that", "the", "onion", "story", "do", "not", "sound", "so", "far", "fetched", "with", "this", "crazy", "bunch", "in", "the", "WH", "!"]
(c15-10 / sad-02
        :ARG0 (c15-1 / sound-01
                     :ARG1 (c15-0 / story
                                  :source (c15-6 / publication
                                                 :name (c15-11 / name
                                                               :op1 "The"
                                                               :op2 "Onion")))
                     :ARG2 (c15-3 / fetch-01
                                  :ARG1 c15-0
                                  :degree (c15-9 / far))
                     :ARG1-of (c15-7 / cause-01
                                     :ARG0 (c15-12 / bunch
                                                   :ARG1-of (c15-4 / crazy-03)
                                                   :mod (c15-2 / this)
                                                   :location (c15-8 / government-organization
                                                                    :name (c15-5 / name
                                                                                 :op1 "White"
                                                                                 :op2 "House"))))
                     :polarity -))

# ::snt RALPH!!!!!!!
# ::tokens ["RALPH", "!", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["RALPH", "!", "!", "!", "!", "!", "!", "!"]
(c16-0 / royal
       :mode expressive)

# ::snt Onion Sources say trump is refusing to take off gold paper crown after Christmas dinner.
# ::tokens ["Onion", "Sources", "say", "trump", "is", "refusing", "to", "take", "off", "gold", "paper", "crown", "after", "Christmas", "dinner", "."]
# ::lemmas ["Onion", "Sources", "say", "trump", "be", "refuse", "to", "take", "off", "gold", "paper", "crown", "after", "Christmas", "dinner", "."]
(c17-12 / say-01
        :ARG0 (c17-0 / source
                     :mod (c17-11 / onion))
        :ARG1 (c17-10 / refuse-01
                      :ARG0 (c17-5 / person
                                   :name (c17-13 / name
                                                 :op1 " trump"))
                      :ARG1 (c17-1 / take-off-07
                                   :ARG0 c17-5
                                   :ARG1 (c17-6 / crown
                                                :consist-of (c17-3 / paper
                                                                   :mod (c17-8 / gold)))
                                   :time (c17-9 / after
                                                :op1 (c17-4 / dinner
                                                            :mod (c17-2 / festival
                                                                        :name (c17-7 / name
                                                                                     :op1 "Christmas")))))))

# ::snt Laughed too loud out lou!d
# ::tokens ["Laughed", "too", "loud", "out", "lou!d"]
# ::lemmas ["laugh", "too", "loud", "out", "lou!d"]
(c18-4 / laugh-01
       :ARG0 (c18-2 / i)
       :manner (c18-6 / loud
                      :ARG2-of (c18-0 / have-degree-91
                                      :ARG1 c18-4
                                      :ARG3 (c18-1 / too)))
       :ARG1-of (c18-5 / say-01
                       :ARG2 (c18-3 / person
                                    :name (c18-7 / name
                                                 :op1 "loud"
                                                 :op2 "out"
                                                 :op3 "loud"))))

# ::snt More frightening than a man with dementia in the white house is a self-righteous man waiting to impose his will and God on others.
# ::tokens ["More", "frightening", "than", "a", "man", "with", "dementia", "in", "the", "white", "house", "is", "a", "self", "-", "righteous", "man", "waiting", "to", "impose", "his", "will", "and", "God", "on", "others", "."]
# ::lemmas ["more", "frightening", "than", "a", "man", "with", "dementia", "in", "the", "white", "house", "be", "a", "self", "-", "righteous", "man", "wait", "to", "impose", "his", "will", "and", "God", "on", "other", "."]
(c19-1 / have-degree-91
       :ARG1 (c19-16 / man
                     :mod (c19-6 / self-righteous)
                     :ARG1-of (c19-0 / wait-01
                                     :ARG2 (c19-12 / impose-01
                                                   :ARG0 c19-16
                                                   :ARG1 (c19-14 / and
                                                                 :op1 (c19-5 / will-02
                                                                             :ARG0 c19-16)
                                                                 :op2 (c19-13 / person
                                                                              :name (c19-9 / name
                                                                                           :op1 "God")))
                                                   :ARG2 (c19-17 / person
                                                                 :mod (c19-15 / other)))))
       :ARG2 (c19-10 / frighten-01
                     :ARG0 c19-16)
       :ARG3 (c19-18 / more)
       :ARG4 (c19-3 / man
                    :ARG1-of (c19-4 / have-03
                                    :ARG0 (c19-11 / disease
                                                  :name (c19-2 / name
                                                               :op1 "Dementia")))
                    :location (c19-7 / house
                                     :ARG1-of (c19-8 / white-03))))

# ::snt Disgusting
# ::tokens ["Disgusting"]
# ::lemmas ["disgusting"]
(c20-0 / disgust-01)

# ::snt Youre disappointing and no longer funny.
# ::tokens ["You", "re", "disappointing", "and", "no", "longer", "funny", "."]
# ::lemmas ["you", "re", "disappointing", "and", "no", "long", "funny", "."]
(c21-3 / and
       :op1 (c21-2 / disappoint-01
                   :ARG0 (c21-0 / you))
       :op2 (c21-1 / funny
                   :domain c21-0
                   :time (c21-4 / no-longer)))

# ::snt ABSOLUTE PURITY, LIKE ABOLUTE DEBAUCHERY, GARNERS NO RESPECT IN THE REAL WORLD.
# ::tokens ["ABSOLUTE", "PURITY", ",", "LIKE", "ABOLUTE", "DEBAUCHERY", ",", "GARNERS", "NO", "RESPECT", "IN", "THE", "REAL", "WORLD", "."]
# ::lemmas ["ABSOLUTE", "PURITY", ",", "like", "ABOLUTE", "DEBAUCHERY", ",", "garner", "no", "respect", "in", "the", "real", "world", "."]
(c22-6 / refuse-01
       :ARG0 (c22-2 / mentality
                    :mod (c22-5 / absolute)
                    :ARG1-of (c22-0 / resemble-01
                                    :mod (c22-7 / absolute)
                                    :ARG2 c22-2))
       :ARG1 (c22-4 / respect-01
                    :polarity -)
       :location (c22-1 / world
                        :ARG1-of (c22-3 / real-04)))

# ::snt You guys are super pathetic.
# ::tokens ["You", "guys", "are", "super", "pathetic", "."]
# ::lemmas ["you", "guy", "be", "super", "pathetic", "."]
(c23-3 / pathetic
       :degree (c23-2 / super)
       :domain (c23-1 / guy
                      :mod (c23-0 / you)))

# ::snt This is almost the emotional climax of TS Eliot's "Murder in the Cathedral"
# ::tokens ["This", "is", "almost", "the", "emotional", "climax", "of", "TS", "Eliot", "'s", "\"", "Murder", "in", "the", "Cathedral", "\""]
# ::lemmas ["this", "be", "almost", "the", "emotional", "climax", "of", "TS", "Eliot", "'s", "\"", "murder", "in", "the", "Cathedral", "\""]
(c24-5 / climax-01
       :ARG1 (c24-0 / work-of-art
                    :name (c24-8 / name
                                 :op1 "Murder"
                                 :op2 "in"
                                 :op3 "the"
                                 :op4 " Cathedral")
                    :ARG1-of (c24-6 / author-01
                                    :ARG0 (c24-4 / person
                                                 :name (c24-3 / name
                                                              :op1 "TS"
                                                              :op2 " Eliot"))))
       :ARG2 (c24-2 / this)
       :mod (c24-1 / emotional)
       :mod (c24-7 / almost))

# ::snt I am all for satire but this is offensive and downright stupid. Grow up.
# ::tokens ["I", "am", "all", "for", "satire", "but", "this", "is", "offensive", "and", "downright", "stupid", ".", "Grow", "up", "."]
# ::lemmas ["i", "be", "all", "for", "satire", "but", "this", "be", "offensive", "and", "downright", "stupid", ".", "grow", "up", "."]
(c25-4 / multi-sentence
       :snt1 (c25-7 / contrast-01
                    :ARG1 (c25-12 / support-01
                                  :ARG0 (c25-6 / i)
                                  :ARG1 (c25-2 / satire)
                                  :degree (c25-8 / all))
                    :ARG2 (c25-11 / and
                                  :op1 (c25-10 / offend-01
                                               :ARG0 (c25-3 / this))
                                  :op2 (c25-1 / stupid
                                              :domain c25-3
                                              :degree (c25-5 / downright))))
       :snt2 (c25-9 / grow-up-04
                    :ARG1 (c25-0 / you)
                    :mode imperative))

# ::snt Oh My God, that is awful, and funny as hell.
# ::tokens ["Oh", "My", "God", ",", "that", "is", "awful", ",", "and", "funny", "as", "hell", "."]
# ::lemmas ["oh", "my", "God", ",", "that", "be", "awful", ",", "and", "funny", "as", "hell", "."]
(c26-4 / and
       :op1 (c26-6 / awful
                   :domain (c26-0 / that))
       :op2 (c26-1 / funny
                   :domain c26-0)
       :degree (c26-7 / as-hell)
       :mod (c26-5 / oh
                   :op1 (c26-2 / person
                               :name (c26-8 / name
                                            :op1 "God")
                               :poss (c26-3 / i))
                   :mode expressive))

# ::snt Americans disappointed God never told his children to kill Mike.
# ::tokens ["Americans", "disappointed", "God", "never", "told", "his", "children", "to", "kill", "Mike", "."]
# ::lemmas ["Americans", "disappoint", "God", "never", "tell", "his", "child", "to", "kill", "Mike", "."]
(c27-6 / disappoint-01
       :ARG0 (c27-4 / tell-01
                    :ARG0 (c27-7 / person
                                 :name (c27-13 / name
                                               :op1 "God"))
                    :ARG1 (c27-0 / kill-01
                                 :ARG0 (c27-5 / person
                                              :ARG0-of (c27-2 / have-rel-role-91
                                                              :ARG1 c27-7
                                                              :ARG2 (c27-8 / child)))
                                 :ARG1 (c27-1 / person
                                              :name (c27-9 / name
                                                           :op1 "Mike")))
                    :ARG2 c27-5
                    :time (c27-3 / ever)
                    :polarity -)
       :ARG1 (c27-10 / person
                     :mod (c27-12 / country
                                  :name (c27-11 / name
                                                :op1 "America"))))

# ::snt dude thinks of Abraham's biggest challenge, and gets jelly? TIL
# ::tokens ["dude", "thinks", "of", "Abraham", "'s", "biggest", "challenge", ",", "and", "gets", "jelly", "?", "TIL"]
# ::lemmas ["dude", "think", "of", "Abraham", "'s", "big", "challenge", ",", "and", "get", "jelly", "?", "TIL"]
(c28-2 / multi-sentence
       :snt1 (c28-10 / and
                     :op1 (c28-1 / think-01
                                 :ARG0 (c28-6 / dude)
                                 :ARG1 (c28-7 / challenge-01
                                              :ARG0 (c28-8 / person
                                                           :name (c28-15 / name
                                                                         :op1 "Abraham"))
                                              :ARG1-of (c28-0 / have-degree-91
                                                              :ARG2 (c28-16 / big)
                                                              :ARG3 (c28-13 / most))))
                     :op2 (c28-11 / get-01
                                  :ARG0 c28-6
                                  :ARG1 (c28-3 / jelly))
                     :polarity (c28-12 / amr-unknown))
       :snt2 (c28-4 / try-01
                    :ARG0 (c28-9 / i)
                    :ARG1 (c28-5 / this)
                    :polarity (c28-14 / amr-unknown)
                    :mode expressive))

# ::snt I think hes saving the deed for Mother.
# ::tokens ["I", "think", "he", "s", "saving", "the", "deed", "for", "Mother", "."]
# ::lemmas ["i", "think", "he", "s", "save", "the", "deed", "for", "Mother", "."]
(c29-1 / think-01
       :ARG0 (c29-5 / i)
       :ARG1 (c29-7 / save-02
                    :ARG0 (c29-0 / he)
                    :ARG1 (c29-4 / deed)
                    :beneficiary (c29-6 / person
                                        :ARG0-of (c29-3 / have-rel-role-91
                                                        :ARG2 (c29-2 / mother)))))

# ::snt He is not Abraham who started to offer his son up for a sacrifice
# ::tokens ["He", "is", "not", "Abraham", "who", "started", "to", "offer", "his", "son", "up", "for", "a", "sacrifice"]
# ::lemmas ["he", "be", "not", "Abraham", "who", "start", "to", "offer", "his", "son", "up", "for", "a", "sacrifice"]
(c30-4 / person
       :name (c30-7 / name
                    :op1 "Abraham")
       :ARG0-of (c30-6 / start-01
                       :ARG1 (c30-5 / offer-01
                                    :ARG0 c30-4
                                    :ARG1 (c30-3 / person
                                                 :ARG0-of (c30-1 / have-rel-role-91
                                                                 :ARG1 c30-4
                                                                 :ARG2 (c30-2 / son)))
                                    :ARG3 (c30-0 / sacrifice-01
                                                 :ARG0 c30-3)))
       :polarity -)

# ::snt Mike Pences lips look like a teens vagina.
# ::tokens ["Mike", "Pences", "lips", "look", "like", "a", "teens", "vagina", "."]
# ::lemmas ["Mike", "Pences", "lip", "look", "like", "a", "teen", "vagina", "."]
(c31-3 / look-02
       :ARG0 (c31-4 / lip
                    :part-of (c31-1 / person
                                    :name (c31-5 / name
                                                 :op1 "Mike"
                                                 :op2 "Pences")))
       :ARG1 (c31-2 / vagina
                    :part-of (c31-0 / teen)))

# ::snt This guy's even more disturbing than tRump
# ::tokens ["This", "guy", "'s", "even", "more", "disturbing", "than", "tRump"]
# ::lemmas ["this", "guy", "'s", "even", "more", "disturbing", "than", "tRump"]
(c32-0 / have-degree-91
       :ARG1 (c32-5 / guy
                    :mod (c32-2 / this))
       :ARG2 (c32-4 / disturb-01
                    :ARG0 c32-5)
       :ARG3 (c32-3 / more
                    :mod (c32-7 / even))
       :ARG4 (c32-1 / guy
                    :name (c32-6 / name
                                 :op1 "tRump")))

# ::snt Hahahahaha
# ::tokens ["Hahahahaha"]
# ::lemmas ["Hahahahaha"]
(c33-0 / haha
       :mode expressive)

# ::snt God wont ask anyone to do that today unless he is the Messiah
# ::tokens ["God", "wo", "nt", "ask", "anyone", "to", "do", "that", "today", "unless", "he", "is", "the", "Messiah"]
# ::lemmas ["God", "will", "not", "ask", "anyone", "to", "do", "that", "today", "unless", "he", "be", "the", "Messiah"]
(c34-5 / ask-02
       :ARG0 (c34-4 / person
                    :name (c34-7 / name
                                 :op1 "God"))
       :ARG1 (c34-3 / do-02
                    :ARG0 (c34-6 / anyone)
                    :ARG1 (c34-0 / that)
                    :time (c34-1 / today))
       :ARG2 c34-6
       :condition (c34-2 / messiah
                         :domain c34-4)
       :polarity -)

# ::snt Shame on Onion
# ::tokens ["Shame", "on", "Onion"]
# ::lemmas ["shame", "on", "onion"]
(c35-0 / shame-01
       :ARG1 (c35-2 / publication
                    :name (c35-1 / name
                                 :op1 "Onion")))

# ::snt Is this supposed to be funny?
# ::tokens ["Is", "this", "supposed", "to", "be", "funny", "?"]
# ::lemmas ["be", "this", "suppose", "to", "be", "funny", "?"]
(c36-2 / suppose-02
       :polarity (c36-1 / amr-unknown)
       :ARG1 (c36-3 / this)
       :ARG2 (c36-0 / funny-02
                    :ARG1 c36-3))

# ::snt Sounds right, Mike Pence reminds me of Silas in the Da Vinci Code. I can see him beating himself after t
# ::tokens ["Sounds", "right", ",", "Mike", "Pence", "reminds", "me", "of", "Silas", "in", "the", "Da", "Vinci", "Code", ".", "I", "can", "see", "him", "beating", "himself", "after", "t"]
# ::lemmas ["sound", "right", ",", "Mike", "Pence", "remind", "i", "of", "Silas", "in", "the", "Da", "Vinci", "Code", ".", "i", "can", "see", "he", "beat", "himself", "after", "t"]
(c37-5 / multi-sentence
       :snt1 (c37-15 / sound-01
                     :ARG1 (c37-14 / remind-01
                                   :ARG0 (c37-9 / person
                                                :name (c37-16 / name
                                                              :op1 "Mike"
                                                              :op2 "Pence"))
                                   :ARG1 (c37-7 / person
                                                :name (c37-8 / name
                                                             :op1 "Silas")
                                                :location (c37-17 / book
                                                                  :name (c37-11 / name
                                                                                :op1 "Da"
                                                                                :op2 "Vinci"
                                                                                :op3 "Code")))
                                   :ARG2 (c37-10 / i))
                     :ARG2-of (c37-0 / right-06))
       :snt2 (c37-1 / possible-01
                    :ARG1 (c37-2 / see-01
                                 :ARG0 (c37-3 / i)
                                 :ARG1 (c37-12 / beat-01
                                               :ARG0 (c37-4 / he
                                                            :ARG1-of c37-12)
                                               :time (c37-13 / after
                                                             :op1 (c37-6 / t))))))

# ::snt And this is what passes for funny to the liberal left.
# ::tokens ["And", "this", "is", "what", "passes", "for", "funny", "to", "the", "liberal", "left", "."]
# ::lemmas ["and", "this", "be", "what", "pass", "for", "funny", "to", "the", "liberal", "left", "."]
(c38-3 / and
       :op2 (c38-2 / pass-03
                   :ARG1 (c38-0 / this)
                   :ARG2 (c38-1 / funny-02)
                   :ARG3 (c38-4 / left-19
                                :ARG1-of (c38-5 / liberal-02))))

# ::snt and he would have to do the killing out on Highway .
# ::tokens ["and", "he", "would", "have", "to", "do", "the", "killing", "out", "on", "Highway", "."]
# ::lemmas ["and", "he", "would", "have", "to", "do", "the", "killing", "out", "on", "Highway", "."]
(c39-3 / and
       :op2 (c39-4 / obligate-01
                   :ARG2 (c39-0 / kill-01
                                :ARG0 (c39-1 / he)
                                :location (c39-2 / highway))))

# ::snt this isnt even satire
# ::tokens ["this", "is", "nt", "even", "satire"]
# ::lemmas ["this", "be", "not", "even", "satire"]
(c40-0 / satire
       :mod (c40-1 / even)
       :domain (c40-2 / this)
       :polarity -)

# ::snt Were it to happen hed claim God, as a sign of strong faith, asked him to.
# ::tokens ["Were", "it", "to", "happen", "he", "d", "claim", "God", ",", "as", "a", "sign", "of", "strong", "faith", ",", "asked", "him", "to", "."]
# ::lemmas ["be", "it", "to", "happen", "he", "d", "claim", "God", ",", "as", "a", "sign", "of", "strong", "faith", ",", "ask", "he", "to", "."]
(c41-5 / claim-01
       :ARG0 (c41-0 / he)
       :ARG1 (c41-7 / ask-02
                    :ARG0 (c41-4 / person
                                 :name (c41-9 / name
                                              :op1 "God"))
                    :ARG1 (c41-3 / do-02
                                 :ARG0 c41-4)
                    :ARG2 c41-4
                    :ARG0-of (c41-8 / signal-07
                                    :ARG1 (c41-2 / faith
                                                 :ARG1-of (c41-1 / strong-02))))
       :condition (c41-6 / it))

# ::snt Disappointed Onion, this is laziness not humor.
# ::tokens ["Disappointed", "Onion", ",", "this", "is", "laziness", "not", "humor", "."]
# ::lemmas ["Disappointed", "Onion", ",", "this", "be", "laziness", "not", "humor", "."]
(c42-6 / say-01
       :ARG1 (c42-2 / disappoint-01
                    :ARG0 (c42-4 / and
                                 :op1 (c42-5 / lazy
                                             :domain (c42-1 / this))
                                 :op2 (c42-0 / humor
                                             :domain c42-1
                                             :polarity -))
                    :ARG1 (c42-3 / person
                                 :name (c42-7 / name
                                              :op1 "The"
                                              :op2 "Onion")
                                 :ARG2-of c42-6)))

# ::snt He can always volunteer tho
# ::tokens ["He", "can", "always", "volunteer", "tho"]
# ::lemmas ["he", "can", "always", "volunteer", "tho"]
(c43-0 / have-concession-91
       :ARG1 (c43-2 / possible-01
                    :ARG1 (c43-3 / volunteer-01
                                 :ARG0 (c43-1 / he))
                    :time (c43-4 / always)))

# ::snt He reminds me of the killer known as The Albino....
# ::tokens ["He", "reminds", "me", "of", "the", "killer", "known", "as", "The", "Albino", "...."]
# ::lemmas ["he", "remind", "i", "of", "the", "killer", "know", "as", "the", "Albino", "...."]
(c44-5 / remind-01
       :ARG0 (c44-2 / he)
       :ARG1 (c44-3 / person
                    :ARG0-of (c44-0 / kill-01)
                    :ARG1-of (c44-1 / know-02
                                    :ARG2 (c44-6 / name
                                                 :op1 "The"
                                                 :op2 "Albino")))
       :ARG2 (c44-4 / i))

# ::snt Sad thing is that this is believable.
# ::tokens ["Sad", "thing", "is", "that", "this", "is", "believable", "."]
# ::lemmas ["sad", "thing", "be", "that", "this", "be", "believable", "."]
(c45-0 / sad-02
       :ARG0 (c45-2 / possible-01
                    :ARG1 (c45-3 / believe-01
                                 :ARG1 (c45-1 / this))))

# ::snt omg lol so perfect
# ::tokens ["omg", "lol", "so", "perfect"]
# ::lemmas ["omg", "lol", "so", "perfect"]
(c46-1 / perfect-02
       :degree (c46-0 / so)
       :mod (c46-2 / oh-my-god
                   :mode expressive))

# ::snt 'Struth! Where do they find these jerks?
# ::tokens ["'", "Struth", "!", "Where", "do", "they", "find", "these", "jerks", "?"]
# ::lemmas ["'", "Struth", "!", "where", "do", "they", "find", "these", "jerk", "?"]
(c47-1 / multi-sentence
       :snt1 (c47-8 / say-01
                    :ARG0 (c47-6 / i)
                    :ARG2 (c47-5 / person
                                 :name (c47-9 / name
                                              :op1 "Struth")))
       :snt2 (c47-2 / find-01
                    :ARG0 (c47-0 / they)
                    :ARG1 (c47-3 / jerk
                                 :mod (c47-4 / this))
                    :location (c47-7 / amr-unknown)))

# ::snt Hes transporting these two kids and their dog (along with his buddy) to be eliminated...
# ::tokens ["He", "s", "transporting", "these", "two", "kids", "and", "their", "dog", "(", "along", "with", "his", "buddy", ")", "to", "be", "eliminated", "..."]
# ::lemmas ["he", "s", "transport", "these", "two", "kid", "and", "their", "dog", "(", "along", "with", "his", "buddy", ")", "to", "be", "eliminate", "..."]
(c48-3 / transport-01
       :ARG0 (c48-1 / he)
       :ARG1 (c48-7 / and
                    :op1 (c48-0 / kid
                                :mod (c48-2 / this)
                                :quant 2)
                    :op2 (c48-5 / dog
                                :poss c48-0)
                    :accompanier (c48-6 / person
                                        :ARG0-of (c48-4 / have-rel-role-91
                                                        :ARG1 c48-0
                                                        :ARG2 (c48-9 / buddy))))
       :ARG3 (c48-8 / eliminate-01
                    :ARG1 c48-7))

# ::snt This is plausible
# ::tokens ["This", "is", "plausible"]
# ::lemmas ["this", "be", "plausible"]
(c49-0 / plausible
       :domain (c49-1 / this))

# ::snt Trumps life insurance policy.
# ::tokens ["Trumps", "life", "insurance", "policy", "."]
# ::lemmas ["Trumps", "life", "insurance", "policy", "."]
(c50-3 / trump-01
       :ARG1 (c50-2 / policy-01
                    :ARG2 (c50-0 / insure-02
                                 :ARG1 (c50-1 / life))))
