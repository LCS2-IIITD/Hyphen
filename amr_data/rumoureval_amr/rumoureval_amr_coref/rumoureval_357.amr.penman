# ::snt more evidence only the wealthy have a chance! it cost $8300
# ::tokens ["more", "evidence", "only", "the", "wealthy", "have", "a", "chance", "!", "it", "cost", "$", "8300"]
# ::lemmas ["more", "evidence", "only", "the", "wealthy", "have", "a", "chance", "!", "it", "cost", "$", "8300"]
(c1-2 / multi-sentence
      :snt1 (c1-11 / evidence
                   :quant (c1-9 / more)
                   :topic (c1-4 / chance-02
                                :ARG0 (c1-5 / person
                                            :mod (c1-0 / wealth)
                                            :mod (c1-8 / only))
                                :ARG1 (c1-6 / it)))
      :snt2 (c1-10 / cost-01
                   :ARG1 (c1-1 / it)
                   :ARG2 (c1-7 / monetary-quantity
                               :unit (c1-3 / dollar)
                               :quant 8300)))

# ::snt I get gassed trying to air up my kid's floaties. This dude must have lungs the size of Hefty lawn bags.
# ::tokens ["I", "get", "gassed", "trying", "to", "air", "up", "my", "kid", "'s", "floaties", ".", "This", "dude", "must", "have", "lungs", "the", "size", "of", "Hefty", "lawn", "bags", "."]
# ::lemmas ["i", "get", "gassed", "try", "to", "air", "up", "my", "kid", "'s", "floatie", ".", "this", "dude", "must", "have", "lung", "the", "size", "of", "Hefty", "lawn", "bag", "."]
(c2-4 / multi-sentence
      :snt1 (c2-12 / gas-03
                   :ARG1 (c2-9 / i)
                   :manner (c2-3 / try-01
                                 :ARG0 c2-9
                                 :ARG1 (c2-11 / air-01
                                              :ARG0 c2-9
                                              :ARG1 (c2-5 / float-01
                                                          :ARG1 (c2-10 / person
                                                                       :ARG0-of (c2-1 / have-rel-role-91
                                                                                      :ARG1 c2-9
                                                                                      :ARG2 (c2-0 / kid)))))))
      :snt2 (c2-2 / infer-01
                  :ARG1 (c2-7 / have-03
                              :ARG0 (c2-8 / dude
                                          :mod (c2-6 / this))
                              :ARG1 (c2-13 / lung
                                           :ARG1-of (c2-14 / size-01
                                                           :ARG2 (c2-17 / bag
                                                                        :mod (c2-16 / lawn)
                                                                        :mod (c2-15 / huge)))))))

# ::snt That Man said by any means necessary!
# ::tokens ["That", "Man", "said", "by", "any", "means", "necessary", "!"]
# ::lemmas ["that", "Man", "say", "by", "any", "mean", "necessary", "!"]
(c3-2 / say-01
      :ARG0 (c3-1 / man
                  :mod (c3-0 / that))
      :ARG1-of (c3-3 / need-01
                     :mod (c3-4 / by-no-means)))

# ::snt I imagine he did this on his own initiative, not relying on oth
# ::tokens ["I", "imagine", "he", "did", "this", "on", "his", "own", "initiative", ",", "not", "relying", "on", "oth"]
# ::lemmas ["i", "imagine", "he", "do", "this", "on", "his", "own", "initiative", ",", "not", "rely", "on", "oth"]
(c4-6 / imagine-01
      :ARG0 (c4-1 / i)
      :ARG1 (c4-5 / do-02
                  :ARG0 (c4-0 / he)
                  :ARG1 (c4-2 / this)
                  :ARG1-of (c4-7 / cause-01
                                 :ARG0 (c4-3 / initiative
                                             :poss c4-0)
                                 :ARG1-of (c4-4 / instead-of-91
                                                :ARG2 (c4-9 / rely-01
                                                            :ARG0 c4-0
                                                            :ARG1 (c4-8 / person
                                                                        :name (c4-10 / name
                                                                                     :op1 "th")))))))

# ::snt Thinking about this. It's a Great Idea. However, The Biggest Problem may be Sewer Systems. Meaning? Flood
# ::tokens ["Thinking", "about", "this", ".", "It", "'s", "a", "Great", "Idea", ".", "However", ",", "The", "Biggest", "Problem", "may", "be", "Sewer", "Systems", ".", "Meaning", "?", "Flood"]
# ::lemmas ["think", "about", "this", ".", "it", "be", "a", "Great", "Idea", ".", "however", ",", "The", "Biggest", "Problem", "may", "be", "Sewer", "Systems", ".", "mean", "?", "flood"]
(c5-3 / multi-sentence
      :snt1 (c5-4 / think-01
                  :ARG1 (c5-2 / this))
      :snt2 (c5-8 / idea
                  :mod (c5-11 / great)
                  :domain (c5-0 / it))
      :snt3 (c5-9 / contrast-01
                  :ARG2 (c5-10 / possible-01
                               :ARG1 (c5-7 / problem
                                           :domain (c5-15 / system
                                                          :mod (c5-1 / sewer))
                                           :ARG1-of (c5-5 / have-degree-91
                                                          :ARG2 (c5-16 / big)
                                                          :ARG3 (c5-14 / most)))))
      :snt4 (c5-13 / mean-01
                   :ARG2 (c5-6 / flood-01)
                   :polarity (c5-12 / amr-unknown)))

# ::snt If and actually donated money everyone would be able to invest in inflatable dam
# ::tokens ["If", "and", "actually", "donated", "money", "everyone", "would", "be", "able", "to", "invest", "in", "inflatable", "dam"]
# ::lemmas ["if", "and", "actually", "donate", "money", "everyone", "would", "be", "able", "to", "invest", "in", "inflatable", "dam"]
(c6-5 / possible-01
      :ARG1 (c6-4 / invest-01
                  :ARG0 (c6-9 / everyone)
                  :ARG2 (c6-3 / dam
                              :ARG1-of (c6-0 / inflate-01
                                             :ARG1-of c6-5)))
      :condition (c6-6 / and
                       :op1 (c6-1 / donate-01
                                  :ARG0 c6-9
                                  :ARG1 (c6-2 / money))
                       :op2 (c6-8 / donate-01
                                  :ARG0 c6-9
                                  :ARG1 c6-2
                                  :ARG1-of (c6-7 / actual-02))))

# ::snt However, For Rural Homes and Farms? It's a No Brainer...City Planners? Never thought of Major Flooding E
# ::tokens ["However", ",", "For", "Rural", "Homes", "and", "Farms", "?", "It", "'s", "a", "No", "Brainer", "...", "City", "Planners", "?", "Never", "thought", "of", "Major", "Flooding", "E"]
# ::lemmas ["however", ",", "for", "Rural", "Homes", "and", "Farms", "?", "it", "be", "a", "No", "brainer", "...", "City", "Planners", "?", "never", "think", "of", "Major", "Flooding", "e"]
(c7-15 / multi-sentence
       :snt1 (c7-6 / contrast-01
                   :ARG2 (c7-3 / concern-02
                               :ARG0 (c7-9 / it)
                               :ARG1 (c7-11 / and
                                            :op1 (c7-0 / home
                                                       :mod (c7-1 / rural))
                                            :op2 (c7-8 / farm))
                               :polarity -))
       :snt2 (c7-10 / person
                    :ARG0-of (c7-16 / plan-01
                                    :ARG1 (c7-17 / city))
                    :polarity (c7-2 / amr-unknown))
       :snt3 (c7-5 / think-01
                   :ARG0 (c7-4 / i)
                   :ARG1 (c7-14 / thing
                                :name (c7-7 / name
                                            :op1 "E")
                                :ARG0-of (c7-12 / flood-01)
                                :ARG1-of (c7-18 / major-02))
                   :time (c7-13 / ever)
                   :polarity -))

# ::snt Thank you, Frederick. That racked my brain...sitting here, imagining them passing it around
# ::tokens ["Thank", "you", ",", "Frederick", ".", "That", "racked", "my", "brain", "...", "sitting", "here", ",", "imagining", "them", "passing", "it", "around"]
# ::lemmas ["thank", "you", ",", "Frederick", ".", "that", "rack", "my", "brain", "...", "sit", "here", ",", "imagine", "they", "pass", "it", "around"]
(c8-4 / multi-sentence
      :snt1 (c8-3 / thank-01
                  :ARG0 (c8-11 / i)
                  :ARG1 (c8-10 / person
                               :name (c8-15 / name
                                            :op1 "Frederick")))
      :snt2 (c8-0 / wrack-01
                  :ARG0 (c8-5 / that)
                  :ARG1 (c8-16 / brain
                               :part-of (c8-1 / i))
                  :manner (c8-12 / and
                                 :op1 (c8-14 / sit-01
                                             :ARG1 c8-1
                                             :ARG2 (c8-2 / here))
                                 :op2 (c8-6 / imagine-01
                                            :ARG0 c8-1
                                            :ARG1 (c8-8 / pass-05
                                                        :ARG0 (c8-7 / they)
                                                        :ARG1 (c8-9 / it)
                                                        :direction (c8-13 / around))))))

# ::snt Just Thinking...CITIES, INSURANCE COMPANIES, AND INDIVIDUALS CAN SAVE MILLIONS, IF NOT BILLIONS OF DOLLA
# ::tokens ["Just", "Thinking", "...", "CITIES", ",", "INSURANCE", "COMPANIES", ",", "AND", "INDIVIDUALS", "CAN", "SAVE", "MILLIONS", ",", "IF", "NOT", "BILLIONS", "OF", "DOLLA"]
# ::lemmas ["just", "Thinking", "...", "CITIES", ",", "insurance", "company", ",", "and", "individual", "can", "save", "million", ",", "if", "not", "billion", "of", "dolla"]
(c9-2 / think-01
      :ARG0 (c9-9 / i)
      :ARG1 (c9-8 / possible-01
                  :ARG1 (c9-16 / SAVE-01
                               :ARG0 (c9-12 / and
                                            :op1 (c9-10 / city)
                                            :op2 (c9-14 / company
                                                        :ARG0-of (c9-0 / insure-02))
                                            :op3 (c9-11 / company
                                                        :ARG0-of c9-0))
                               :op4 (c9-6 / person
                                          :ARG0-of (c9-1 / speculate-01)))
                  :ARG1 (c9-3 / multiple
                              :op1 (c9-15 / monetary-quantity
                                          :unit (c9-7 / dollar)
                                          :quant 1000000))
                  :condition (c9-17 / bill-01
                                    :ARG3 c9-3
                                    :op1 (c9-13 / monetary-quantity
                                                :unit (c9-4 / dollar)
                                                :quant 1000000)
                                    :polarity -))
      :mod (c9-5 / just))

# ::snt Fire Departments and or City Workers can SET THESE BAGS UP IN BASICALLY NO TIME AT ALL. SAVING ENTIRE NEI
# ::tokens ["Fire", "Departments", "and", "or", "City", "Workers", "can", "SET", "THESE", "BAGS", "UP", "IN", "BASICALLY", "NO", "TIME", "AT", "ALL", ".", "SAVING", "ENTIRE", "NEI"]
# ::lemmas ["Fire", "Departments", "and", "or", "City", "Workers", "can", "set", "these", "BAGS", "up", "in", "BASICALLY", "no", "TIME", "AT", "all", ".", "SAVING", "ENTIRE", "NEI"]
(c10-3 / multi-sentence
       :snt1 (c10-8 / possible-01
                    :ARG1 (c10-13 / set-up-03
                                  :ARG0 (c10-12 / or
                                                :op1 (c10-7 / department
                                                            :topic (c10-4 / fire))
                                                :op2 (c10-6 / person
                                                            :ARG0-of (c10-0 / work-01
                                                                            :ARG1 (c10-9 / city))))
                                  :ARG1 (c10-15 / bogus
                                                :mod (c10-2 / this))
                                  :duration (c10-5 / time
                                                   :mod (c10-10 / at-all)
                                                   :mod (c10-11 / basic)
                                                   :polarity -)))
       :snt2 (c10-1 / save-02
                    :extent (c10-14 / entire)))

# ::snt Common Sense. They're Basic, Quick to Install/Assemble, and can be easily Stored by Home Owners OR CITY G
# ::tokens ["Common", "Sense", ".", "They", "'re", "Basic", ",", "Quick", "to", "Install", "/", "Assemble", ",", "and", "can", "be", "easily", "Stored", "by", "Home", "Owners", "OR", "CITY", "G"]
# ::lemmas ["Common", "Sense", ".", "they", "be", "basic", ",", "Quick", "to", "Install", "/", "Assemble", ",", "and", "can", "be", "easily", "store", "by", "Home", "Owners", "OR", "CITY", "G"]
(c11-4 / multi-sentence
       :snt1 (c11-14 / sense-02
                     :mod (c11-8 / common))
       :snt2 (c11-11 / and
                     :op1 (c11-16 / basic
                                  :domain (c11-3 / they))
                     :op2 (c11-0 / quick-02
                                 :ARG1 (c11-9 / install-01
                                              :ARG1 c11-3))
                     :op3 (c11-13 / assemble-01
                                  :ARG1 c11-3))
       :snt3 (c11-10 / possible-01
                     :ARG1 (c11-1 / stored-01
                                  :ARG0 (c11-12 / or
                                                :op1 (c11-6 / person
                                                            :ARG0-of (c11-7 / own-01
                                                                            :ARG1 (c11-2 / home))
                                                            :op2-of c11-12)
                                                :name (c11-15 / name
                                                              :op1 "City"
                                                              :op2 "G")))
                     :ARG1 c11-3
                     :ARG1-of (c11-5 / easy-05)))

# ::snt WE NEED TO GET ON THIS. AND?They can stay up Until Flood Waters Recede Naturally..And? Properly Manufac
# ::tokens ["WE", "NEED", "TO", "GET", "ON", "THIS", ".", "AND?They", "can", "stay", "up", "Until", "Flood", "Waters", "Recede", "Naturally", "..", "And", "?", "Properly", "Manufac"]
# ::lemmas ["we", "need", "to", "get", "ON", "THIS", ".", "and?they", "can", "stay", "up", "Until", "Flood", "Waters", "Recede", "Naturally", "..", "and", "?", "properly", "Manufac"]
(c12-2 / multi-sentence
       :snt1 (c12-17 / need-01
                     :ARG0 (c12-0 / we)
                     :ARG1 (c12-10 / get-05
                                   :ARG1 c12-0
                                   :ARG2 (c12-13 / on
                                                 :op1 (c12-1 / this))))
       :snt2 (c12-11 / and
                     :op2 (c12-7 / possible-01
                                 :ARG1 (c12-16 / stay-01
                                               :ARG1 (c12-3 / they)
                                               :duration (c12-9 / until
                                                                :op1 (c12-12 / recede-01
                                                                             :ARG1 (c12-15 / water
                                                                                           :mod (c12-4 / flood-01))
                                                                             :manner (c12-6 / natural-03))))
                                 :polarity (c12-14 / amr-unknown))
                     :snt3 c12-11
                     :op2 (c12-5 / proper)
                     :snt4 (c12-8 / manufac
                                  :manner c12-5
                                  :mode expressive)))

# ::snt Well I'll be damned
# ::tokens ["Well", "I", "'ll", "be", "damned"]
# ::lemmas ["well", "i", "'ll", "be", "damn"]
(c13-1 / damn-01
       :ARG1 (c13-2 / i)
       :mod (c13-0 / well))

# ::snt Problem Solved?I Think So...Yep...
# ::tokens ["Problem", "Solved?I", "Think", "So", "...", "Yep", "..."]
# ::lemmas ["problem", "solved?i", "think", "so", "...", "yep", "..."]
(c14-0 / think-01
       :polarity (c14-3 / amr-unknown)
       :ARG0 (c14-2 / i)
       :ARG1 (c14-4 / solve-01
                    :ARG1 (c14-1 / problem)))

# ::snt LOL! It's Filled With Water. It based on Simple Physics..The Water WILL NOT MOVE WATER S
# ::tokens ["LOL", "!", "It", "'s", "Filled", "With", "Water", ".", "It", "based", "on", "Simple", "Physics", "..", "The", "Water", "WILL", "NOT", "MOVE", "WATER", "S"]
# ::lemmas ["LOL", "!", "it", "be", "Filled", "With", "Water", ".", "it", "base", "on", "Simple", "Physics", "..", "The", "Water", "WILL", "NOT", "MOVE", "WATER", "S"]
(c15-2 / multi-sentence
       :snt1 (c15-3 / fill-01
                    :ARG1 (c15-4 / it)
                    :ARG2 (c15-0 / water)
                    :mod (c15-6 / laugh-01
                                :manner (c15-10 / loud)
                                :mode expressive))
       :snt2 (c15-12 / base-02
                     :ARG1 (c15-1 / it)
                     :ARG2 (c15-5 / physics
                                  :mod (c15-9 / simple)))
       :snt3 (c15-7 / move-01
                    :ARG0 (c15-8 / water)
                    :ARG1 (c15-11 / water)
                    :polarity -))

# ::snt However? THIS ONE MAY BE THE ANSWER... Sayin...Yep...
# ::tokens ["However", "?", "THIS", "ONE", "MAY", "BE", "THE", "ANSWER", "...", "Sayin", "...", "Yep", "..."]
# ::lemmas ["however", "?", "this", "one", "may", "be", "the", "answer", "...", "Sayin", "...", "yep", "..."]
(c16-2 / multi-sentence
       :snt1 (c16-4 / contrast-01
                    :polarity (c16-6 / amr-unknown))
       :snt2 (c16-3 / possible-01
                    :ARG1 (c16-0 / have-degree-91
                                 :ARG1 (c16-7 / one
                                              :mod (c16-1 / this))
                                 :ARG2 (c16-8 / accurate)
                                 :ARG3 (c16-5 / more)))
       :snt3 (c16-9 / say-01))

# ::snt That Product has been around for about Years Now. Need To Know about it.
# ::tokens ["That", "Product", "has", "been", "around", "for", "about", "Years", "Now", ".", "Need", "To", "Know", "about", "it", "."]
# ::lemmas ["that", "product", "have", "be", "around", "for", "about", "year", "now", ".", "need", "to", "know", "about", "it", "."]
(c17-3 / multi-sentence
       :snt1 (c17-10 / exist-01
                     :ARG1 (c17-6 / product
                                  :mod (c17-2 / that))
                     :time (c17-11 / before
                                   :op1 (c17-9 / now)
                                   :duration (c17-8 / about
                                                    :op1 (c17-4 / temporal-quantity
                                                                :unit (c17-0 / year)
                                                                :quant 1))))
       :snt2 (c17-5 / need-01
                    :ARG1 (c17-1 / know-01
                                 :ARG1 (c17-7 / it))))

# ::snt that was awesome, but found this particularly interesting. not saying the didnt have flood insurance, but
# ::tokens ["that", "was", "awesome", ",", "but", "found", "this", "particularly", "interesting", ".", "not", "saying", "the", "did", "nt", "have", "flood", "insurance", ",", "but"]
# ::lemmas ["that", "be", "awesome", ",", "but", "find", "this", "particularly", "interesting", ".", "not", "say", "the", "do", "nt", "have", "flood", "insurance", ",", "but"]
(c18-3 / multi-sentence
       :snt1 (c18-8 / contrast-01
                    :ARG1 (c18-12 / awe-01
                                  :ARG0 (c18-2 / that))
                    :ARG2 (c18-4 / find-02
                                 :ARG0 (c18-9 / i)
                                 :ARG1 (c18-0 / interest-01
                                              :ARG1 c18-9
                                              :ARG2 (c18-5 / this)
                                              :mod (c18-10 / particular))))
       :snt2 (c18-14 / contrast-01
                     :ARG2 (c18-11 / say-01
                                   :ARG1 (c18-1 / have-03
                                                :ARG0 (c18-7 / person)
                                                :ARG1 (c18-6 / insurance
                                                             :mod (c18-13 / flood-01))
                                                :polarity -)
                                   :polarity -)))

# ::snt And everyone laughed at him. Confirms that you shouldn't give a sh-t what other people think.
# ::tokens ["And", "everyone", "laughed", "at", "him", ".", "Confirms", "that", "you", "should", "n't", "give", "a", "sh", "-", "t", "what", "other", "people", "think", "."]
# ::lemmas ["and", "everyone", "laugh", "at", "he", ".", "confirm", "that", "you", "should", "not", "give", "a", "sh", "-", "t", "what", "other", "people", "think", "."]
(c19-3 / multi-sentence
       :snt1 (c19-7 / and
                    :op2 (c19-8 / laugh-01
                                :ARG0 (c19-13 / everyone)
                                :ARG2 (c19-1 / he)))
       :snt2 (c19-5 / confirm-01
                    :ARG1 (c19-10 / recommend-01
                                  :ARG1 (c19-9 / give-16
                                               :ARG0 (c19-0 / you)
                                               :ARG1 (c19-12 / shit)
                                               :ARG2 (c19-2 / thing
                                                            :ARG1-of (c19-4 / think-01
                                                                            :ARG0 (c19-6 / person
                                                                                         :mod (c19-11 / other))))
                                               :polarity -))))

# ::snt Stopping The Flood Waters BEFORE THEY'RE ALLOWED TO ENTER CITY INFRASTRUCTURE...Just A Thought...Yep...
# ::tokens ["Stopping", "The", "Flood", "Waters", "BEFORE", "THEY'RE", "ALLOWED", "TO", "ENTER", "CITY", "INFRASTRUCTURE", "...", "Just", "A", "Thought", "...", "Yep", "..."]
# ::lemmas ["stop", "the", "Flood", "Waters", "before", "THEY'RE", "ALLOWED", "to", "enter", "CITY", "INFRASTRUCTURE", "...", "just", "a", "Thought", "...", "yep", "..."]
(c20-7 / stop-01
       :ARG1 (c20-0 / water
                    :ARG1-of (c20-2 / flood-01))
       :time (c20-9 / before
                    :op1 (c20-6 / agree-01
                                :ARG0 c20-0
                                :ARG1 (c20-8 / enter-01
                                             :ARG0 c20-0
                                             :ARG1 (c20-4 / city)
                                             :ARG2 (c20-5 / environment))))
       :ARG1-of (c20-1 / think-01
                       :mod (c20-3 / just)))

# ::snt POP UP ON THE DRY SIDE. OR INTO HOMES. This Infrastructures in Cities aren't built to prevent Backups of
# ::tokens ["POP", "UP", "ON", "THE", "DRY", "SIDE", ".", "OR", "INTO", "HOMES", ".", "This", "Infrastructures", "in", "Cities", "are", "n't", "built", "to", "prevent", "Backups", "of"]
# ::lemmas ["pop", "up", "on", "the", "DRY", "SIDE", ".", "or", "INTO", "HOMES", ".", "this", "Infrastructures", "in", "Cities", "be", "not", "build", "to", "prevent", "Backups", "of"]
(c21-4 / multi-sentence
       :snt1 (c21-11 / or
                     :op1 (c21-7 / put-up-12
                                 :ARG0 (c21-0 / you)
                                 :location (c21-12 / side
                                                   :ARG1-of (c21-6 / dry-08))
                                 :mode imperative)
                     :op2 (c21-5 / put-up-12
                                 :ARG0 c21-0
                                 :location (c21-2 / home)
                                 :mode imperative))
       :snt2 (c21-13 / build-01
                     :ARG1 (c21-8 / infrastructure
                                  :mod (c21-3 / this)
                                  :location (c21-9 / city))
                     :purpose (c21-1 / prevent-01
                                     :ARG0 c21-8
                                     :ARG1 (c21-10 / back-up-09))
                     :polarity -))

# ::snt I wonder what his prep cave looks like.
# ::tokens ["I", "wonder", "what", "his", "prep", "cave", "looks", "like", "."]
# ::lemmas ["i", "wonder", "what", "his", "prep", "cave", "look", "like", "."]
(c22-0 / wonder-01
       :ARG0 (c22-4 / i)
       :ARG1 (c22-2 / thing
                    :ARG2-of (c22-6 / look-02
                                    :ARG0 (c22-3 / cave
                                                 :mod (c22-5 / prep-02)
                                                 :poss (c22-1 / he)))))

# ::snt BRILLIANT!!!AMERICA!!! WE MAY HAVE FOUND OUR ANSWER TOWHAT IS TO COME AS FAR AS FUTURE FLOODING.BRILLI
# ::tokens ["BRILLIANT!!!AMERICA", "!", "!", "!", "WE", "MAY", "HAVE", "FOUND", "OUR", "ANSWER", "TOWHAT", "IS", "TO", "COME", "AS", "FAR", "AS", "FUTURE", "FLOODING.BRILLI"]
# ::lemmas ["brilliant!!!america", "!", "!", "!", "we", "may", "have", "find", "OUR", "answer", "TOWHAT", "be", "to", "come", "as", "far", "as", "future", "flooding.brilli"]
(c23-2 / multi-sentence
       :snt1 (c23-0 / wonderful-03
                    :mode expressive
                    :mode expressive)
       :snt2 (c23-12 / say-01
                     :ARG0 (c23-6 / i)
                     :ARG1 (c23-5 / possible-01
                                  :ARG1 (c23-3 / find-01
                                               :ARG0 (c23-11 / we)
                                               :ARG1 (c23-1 / towhat
                                                            :poss c23-11
                                                            :mod (c23-8 / ANSWER)
                                                            :ARG0-of (c23-7 / come-01
                                                                            :ARG4 (c23-9 / flood-01
                                                                                         :extent (c23-10 / far))))))
                     :ARG2 (c23-4 / person
                                  :name (c23-13 / name
                                                :op1 "Amelia"))))

# ::snt Great investment!!!
# ::tokens ["Great", "investment", "!", "!", "!"]
# ::lemmas ["great", "investment", "!", "!", "!"]
(c24-1 / invest-01
       :mod (c24-0 / great))

# ::snt chuck that' picture from or years ago But still it is very Brilliant - I think someone posted this -for
# ::tokens ["chuck", "that", "'", "picture", "from", "or", "years", "ago", "But", "still", "it", "is", "very", "Brilliant", "-", "I", "think", "someone", "posted", "this", "-for"]
# ::lemmas ["chuck", "that", "'", "picture", "from", "or", "years", "ago", "but", "still", "it", "be", "very", "brilliant", "-", "i", "think", "someone", "post", "this", "-for"]
(c25-19 / multi-sentence
        :snt1 (c25-8 / contrast-01
                     :ARG1 (c25-4 / chuck-01
                                  :ARG0 (c25-5 / you)
                                  :ARG1 (c25-13 / picture)
                                  :time (c25-15 / or
                                                :op1 (c25-17 / before
                                                             :op1 (c25-11 / now)
                                                             :quant c25-15
                                                             :op1 (c25-6 / temporal-quantity
                                                                         :unit (c25-16 / year)
                                                                         :quant 1)
                                                             :op2 (c25-21 / before
                                                                          :op1 (c25-2 / now)
                                                                          :quant (c25-22 / multiple
                                                                                         :op1 (c25-18 / temporal-quantity
                                                                                                      :unit (c25-0 / year)
                                                                                                      :quant 1)))))
                                  :mode imperative))
        :ARG2 (c25-1 / brilliant-01
                     :ARG1 c25-13
                     :mod (c25-9 / still)
                     :degree (c25-3 / very))
        :snt2 (c25-7 / think-01
                     :ARG0 (c25-14 / i)
                     :ARG1 (c25-20 / post-01
                                   :ARG0 (c25-12 / someone)
                                   :ARG1 (c25-10 / this))))

# ::snt These look like they're built along the coast. It'll stop flooding from torrential rain, bu
# ::tokens ["These", "look", "like", "they", "'re", "built", "along", "the", "coast", ".", "It", "'ll", "stop", "flooding", "from", "torrential", "rain", ",", "bu"]
# ::lemmas ["these", "look", "like", "they", "be", "build", "along", "the", "coast", ".", "it", "'ll", "stop", "flood", "from", "torrential", "rain", ",", "bu"]
(c26-1 / multi-sentence
       :snt1 (c26-6 / look-02
                    :ARG0 (c26-0 / this)
                    :ARG1 (c26-10 / build-01
                                  :ARG1 c26-0
                                  :location (c26-5 / along
                                                   :op1 (c26-4 / coast))))
       :snt2 (c26-9 / stop-01
                    :ARG0 (c26-8 / rain-01
                                 :mod (c26-2 / torrent))
                    :ARG1 (c26-3 / flood-01))
       :mod (c26-7 / bu))
