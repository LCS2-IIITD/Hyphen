# ::snt Want some chocolate? Of course you do..
# ::tokens ["Want", "some", "chocolate", "?", "Of", "course", "you", "do", ".."]
# ::lemmas ["want", "some", "chocolate", "?", "of", "course", "you", "do", ".."]
(c1-2 / multi-sentence
      :snt1 (c1-1 / want-01
                  :polarity (c1-4 / amr-unknown)
                  :ARG0 (c1-0 / you)
                  :ARG1 (c1-3 / chocolate
                              :quant (c1-7 / some)))
      :snt2 (c1-6 / want-01
                  :ARG0 (c1-8 / you)
                  :mod (c1-5 / of-course)))

# ::snt She is as active as a baboon with bad hemorrhoids, yet mentally as retarded as!!
# ::tokens ["She", "is", "as", "active", "as", "a", "baboon", "with", "bad", "hemorrhoids", ",", "yet", "mentally", "as", "retarded", "as", "!", "!"]
# ::lemmas ["she", "be", "as", "active", "as", "a", "baboon", "with", "bad", "hemorrhoid", ",", "yet", "mentally", "as", "retarded", "as", "!", "!"]
(c2-0 / have-concession-91
      :ARG1 (c2-5 / retard-01
                  :ARG1 (c2-7 / she)
                  :manner (c2-1 / mental)
                  :ARG2-of (c2-2 / have-degree-91
                                 :ARG1 c2-7
                                 :ARG3 (c2-9 / equal)
                                 :ARG4 (c2-10 / baboon
                                              :ARG0-of (c2-8 / have-03
                                                             :ARG1 (c2-6 / hemorrhoid
                                                                         :ARG1-of (c2-3 / bad-07))))))
      :ARG2 (c2-4 / activity-06
                  :ARG0 c2-7
                  :ARG2-of c2-2
                  :ARG1 c2-7
                  :ARG3 c2-9)
      :ARG4 c2-10)

# ::snt she can't avoid the debates
# ::tokens ["she", "ca", "n't", "avoid", "the", "debates"]
# ::lemmas ["she", "can", "not", "avoid", "the", "debate"]
(c3-3 / possible-01
      :ARG1 (c3-1 / avoid-01
                  :ARG0 (c3-0 / she)
                  :ARG1 (c3-2 / debate-01
                              :ARG0 c3-0))
      :polarity -)

# ::snt says who?
# ::tokens ["says", "who", "?"]
# ::lemmas ["say", "who", "?"]
(c4-1 / say-01
      :ARG0 (c4-0 / amr-unknown)
      :ARG1 (c4-2 / person))

# ::snt maybe she will just FaceTime in or assassinate trump
# ::tokens ["maybe", "she", "will", "just", "FaceTime", "in", "or", "assassinate", "trump"]
# ::lemmas ["maybe", "she", "will", "just", "FaceTime", "in", "or", "assassinate", "trump"]
(c5-3 / possible-01
      :ARG1 (c5-5 / or
                  :op1 (c5-0 / Face-in-00
                             :ARG0 (c5-6 / she)
                             :mod (c5-1 / just))
                  :op2 (c5-4 / assassinate-01
                             :ARG0 c5-6
                             :ARG1 (c5-2 / person
                                         :name (c5-7 / name
                                                     :op1 " trump")))))

# ::snt Trump should require no stools, pillows, bathroom breaks, and a drug test prior and after. Whattaya say Paul??
# ::tokens ["Trump", "should", "require", "no", "stools", ",", "pillows", ",", "bathroom", "breaks", ",", "and", "a", "drug", "test", "prior", "and", "after", ".", "Whattaya", "say", "Paul", "?", "?"]
# ::lemmas ["Trump", "should", "require", "no", "stool", ",", "pillow", ",", "bathroom", "break", ",", "and", "a", "drug", "test", "prior", "and", "after", ".", "whattaya", "say", "Paul", "?", "?"]
(c6-18 / multi-sentence
       :snt1 (c6-3 / recommend-01
                   :ARG1 (c6-5 / require-01
                               :ARG0 (c6-14 / person
                                            :name (c6-9 / name
                                                        :op1 "Trump"))
                               :ARG1 (c6-15 / and
                                            :op1 (c6-8 / stools)
                                            :op2 (c6-19 / pillow)
                                            :op3 (c6-17 / break-01
                                                        :ARG1 (c6-20 / bathroom))
                                            :op4 (c6-6 / test-01
                                                       :ARG1 c6-14
                                                       :ARG2 (c6-13 / drug)
                                                       :time (c6-4 / and
                                                                   :op1 (c6-10 / prior)
                                                                   :op2 (c6-16 / after))))
                               :polarity -))
       :snt2 (c6-11 / say-01
                    :ARG0 (c6-7 / person
                                :name (c6-0 / name
                                            :op1 "Whattaya"))
                    :ARG1 (c6-12 / person
                                 :name (c6-2 / name
                                             :op1 "Paul"))
                    :polarity (c6-1 / amr-unknown)))

# ::snt agreed.
# ::tokens ["agreed", "."]
# ::lemmas ["agree", "."]
(c7-0 / agree-01)

# ::snt but tbh she just say sexism thanks Vladimir putin, Alex Jones and Dr drew
# ::tokens ["but", "tbh", "she", "just", "say", "sexism", "thanks", "Vladimir", "putin", ",", "Alex", "Jones", "and", "Dr", "drew"]
# ::lemmas ["but", "tbh", "she", "just", "say", "sexism", "thank", "Vladimir", "putin", ",", "Alex", "Jones", "and", "Dr", "draw"]
(c8-8 / contrast-01
      :ARG2 (c8-12 / say-01
                   :ARG0 (c8-2 / she)
                   :ARG1 (c8-0 / sexism)
                   :mod (c8-5 / just)
                   :ARG2-of (c8-4 / thank-01
                                  :ARG1 (c8-10 / and
                                               :op1 (c8-9 / person
                                                          :name (c8-13 / name
                                                                       :op1 "Vladimir"
                                                                       :op2 "Putin"))
                                               :op2 (c8-6 / person
                                                          :name (c8-7 / name
                                                                      :op1 "Alex"
                                                                      :op2 "Jones"))
                                               :op3 (c8-1 / person
                                                          :name (c8-11 / name
                                                                       :op1 "Dr"
                                                                       :op2 " drew"))))
                   :ARG1-of (c8-3 / honest-01)))

# ::snt wha do you mean she had one with Anderson cooper over the telephone
# ::tokens ["wha", "do", "you", "mean", "she", "had", "one", "with", "Anderson", "cooper", "over", "the", "telephone"]
# ::lemmas ["wha", "do", "you", "mean", "she", "have", "one", "with", "Anderson", "cooper", "over", "the", "telephone"]
(c9-3 / mean-01
      :ARG0 (c9-0 / you)
      :ARG2 (c9-1 / have-03
                  :ARG0 (c9-7 / she)
                  :ARG1 (c9-6 / one)
                  :instrument (c9-2 / telephone)
                  :accompanier (c9-4 / person
                                     :name (c9-8 / name
                                                 :op1 "Anderson"
                                                 :op2 "Cooper")))
      :polarity (c9-5 / amr-unknown))

# ::snt Ever think of calling her ILLery Clinton?
# ::tokens ["Ever", "think", "of", "calling", "her", "ILLery", "Clinton", "?"]
# ::lemmas ["ever", "think", "of", "call", "she", "illery", "Clinton", "?"]
(c10-2 / think-01
       :ARG0 (c10-0 / you)
       :ARG1 (c10-4 / call-01
                    :ARG0 c10-0
                    :ARG1 (c10-6 / she)
                    :ARG2 (c10-3 / person
                                 :name (c10-7 / name
                                              :op1 "ILLery"
                                              :op2 "Clinton")))
       :polarity (c10-5 / amr-unknown)
       :time (c10-1 / ever))

# ::snt that's brilliant
# ::tokens ["that", "'s", "brilliant"]
# ::lemmas ["that", "be", "brilliant"]
(c11-1 / brilliant-01
       :ARG1 (c11-0 / that))

# ::snt Probably another "fallacious" claim.....
# ::tokens ["Probably", "another", "\"", "fallacious", "\"", "claim", "....."]
# ::lemmas ["probably", "another", "\"", "fallacious", "\"", "claim", "....."]
(c12-3 / claim-01
       :mod (c12-1 / another)
       :mod (c12-0 / fallacious)
       :mod (c12-2 / probable))

# ::snt And only days or so until we send her into permanent retirement.
# ::tokens ["And", "only", "days", "or", "so", "until", "we", "send", "her", "into", "permanent", "retirement", "."]
# ::lemmas ["and", "only", "day", "or", "so", "until", "we", "send", "she", "into", "permanent", "retirement", "."]
(c13-10 / and
        :op2 (c13-9 / until
                    :op1 (c13-14 / send-03
                                 :ARG0 (c13-1 / we)
                                 :ARG1 (c13-2 / she)
                                 :ARG4 (c13-11 / retire-01
                                               :ARG0 c13-2
                                               :mod (c13-8 / permanent)))
                    :quant (c13-12 / or
                                   :op1 (c13-4 / multiple
                                               :op1 (c13-3 / temporal-quantity
                                                           :unit (c13-7 / day)
                                                           :quant 1))
                                   :op2 (c13-13 / multiple
                                                :op1 (c13-5 / temporal-quantity
                                                            :unit (c13-0 / so)
                                                            :quant 1))
                                   :mod (c13-6 / only))))

# ::snt How many hours/days before I last tweeted to Pretty Paul?
# ::tokens ["How", "many", "hours", "/", "days", "before", "I", "last", "tweeted", "to", "Pretty", "Paul", "?"]
# ::lemmas ["How", "many", "hours", "/", "days", "before", "i", "last", "tweet", "to", "Pretty", "Paul", "?"]
(c14-9 / rate-entity-91
       :ARG1 (c14-2 / multiple
                    :op1 (c14-3 / temporal-quantity
                                :unit (c14-0 / hour)
                                :quant 1)
                    :ARG2-of c14-9)
       :op1 (c14-1 / temporal-quantity
                   :unit (c14-5 / day)
                   :quant 1)
       :ARG3 (c14-11 / before
                     :op1 (c14-4 / tweet-02
                                 :ARG0 (c14-6 / i)
                                 :ARG2 (c14-7 / person
                                              :name (c14-10 / name
                                                            :op1 "Pretty"
                                                            :op2 "Paul"))
                                 :mod (c14-8 / last))))

# ::snt she says that fake pickle stunt proves she didnt have trans siniai thrombosis. Girl ... u trippin'
# ::tokens ["she", "says", "that", "fake", "pickle", "stunt", "proves", "she", "did", "nt", "have", "trans", "siniai", "thrombosis", ".", "Girl", "...", "u", "trippin", "'"]
# ::lemmas ["she", "say", "that", "fake", "pickle", "stunt", "prove", "she", "do", "not", "have", "trans", "siniai", "thrombosis", ".", "girl", "...", "u", "trippin", "'"]
(c15-5 / multi-sentence
       :snt1 (c15-12 / say-01
                     :ARG0 (c15-2 / she)
                     :ARG1 (c15-10 / prove-01
                                   :ARG0 (c15-4 / thing
                                                :ARG1-of (c15-1 / stunt-02
                                                                :mod (c15-8 / pickle)
                                                                :ARG1-of (c15-6 / fake-02)))
                                   :ARG1 (c15-3 / have-03
                                                :ARG0 c15-2
                                                :ARG1 (c15-9 / disease
                                                             :name (c15-13 / name
                                                                           :op1 "trans"
                                                                           :op2 "Siniai"
                                                                           :op3 "thrombosis")
                                                             :domain c15-2)
                                                :polarity -)))
       :snt2 (c15-11 / girl
                     :mode expressive)
       :snt3 (c15-7 / trippin-00
                    :ARG0 (c15-0 / you)))

# ::snt complications from being a totally mental tyrant.
# ::tokens ["complications", "from", "being", "a", "totally", "mental", "tyrant", "."]
# ::lemmas ["complication", "from", "be", "a", "totally", "mental", "tyrant", "."]
(c16-4 / complicate-01
       :ARG0 (c16-3 / tyrant
                    :mod (c16-2 / mind
                                :mod (c16-1 / total))
                    :domain (c16-0 / you)))

# ::snt I would love to enjoy a pint with you mate
# ::tokens ["I", "would", "love", "to", "enjoy", "a", "pint", "with", "you", "mate"]
# ::lemmas ["i", "would", "love", "to", "enjoy", "a", "pint", "with", "you", "mate"]
(c17-4 / say-01
       :ARG1 (c17-3 / love-02
                    :ARG0 (c17-2 / i)
                    :ARG1 (c17-5 / enjoy-01
                                 :ARG0 c17-2
                                 :ARG1 (c17-1 / pint)
                                 :accompanier (c17-0 / mate
                                                     :ARG2-of c17-4))))

# ::snt Can't wait for the debates.If she does any.Trump will destroy her. She speaks from a teleprompter.Trump speaks from the heart
# ::tokens ["Ca", "n't", "wait", "for", "the", "debates", ".", "If", "she", "does", "any", ".", "Trump", "will", "destroy", "her", ".", "She", "speaks", "from", "a", "teleprompter", ".", "Trump", "speaks", "from", "the", "heart"]
# ::lemmas ["can", "not", "wait", "for", "the", "debate", ".", "if", "she", "do", "any", ".", "Trump", "will", "destroy", "she", ".", "she", "speak", "from", "a", "teleprompter", ".", "Trump", "speak", "from", "the", "heart"]
(c18-5 / multi-sentence
       :snt1 (c18-1 / wait-01
                    :ARG1 (c18-10 / i)
                    :ARG2 (c18-9 / debate-01
                                 :ARG0 c18-10))
       :snt2 (c18-3 / destroy-01
                    :ARG0 (c18-11 / person
                                  :name (c18-16 / name
                                                :op1 "Trump"))
                    :ARG1 (c18-14 / she)
                    :condition (c18-15 / do-02
                                       :ARG0 (c18-2 / she)
                                       :ARG1 (c18-13 / any)))
       :snt3 (c18-0 / speak-01
                    :ARG0 (c18-4 / she)
                    :medium (c18-6 / teleprompter))
       :snt4 (c18-12 / speak-01
                     :ARG0 c18-11
                     :name c18-16
                     :op1 "Trump")
       :part (c18-7 / heart)
       :manner (c18-8 / from
                      :op1 c18-7))

# ::snt no teleprompter at debates, don't know what the questions will be.
# ::tokens ["no", "teleprompter", "at", "debates", ",", "do", "n't", "know", "what", "the", "questions", "will", "be", "."]
# ::lemmas ["no", "teleprompter", "at", "debate", ",", "do", "not", "know", "what", "the", "question", "will", "be", "."]
(c19-1 / teleprompter
       :location (c19-3 / debate-01)
       :ARG0-of (c19-5 / cause-01
                       :ARG1 (c19-0 / know-01
                                    :ARG0 (c19-4 / i)
                                    :ARG1 (c19-2 / thing
                                                 :ARG1-of (c19-6 / question-01))
                                    :polarity -))
       :polarity -)

# ::snt She will have selected questions &amp; practiced answers over&ampver on her sick days.
# ::tokens ["She", "will", "have", "selected", "questions", "&", "amp", ";", "practiced", "answers", "over&ampver", "on", "her", "sick", "days", "."]
# ::lemmas ["she", "will", "have", "select", "question", "&", "amp", ";", "practice", "answer", "over&ampver", "on", "her", "sick", "days", "."]
(c20-5 / and
       :op1 (c20-8 / select-01
                   :ARG0 (c20-2 / she)
                   :ARG1 (c20-6 / and
                                :op1 (c20-0 / question-01)
                                :op2 (c20-7 / answer-01)))
       :op2 (c20-4 / practice-01
                   :ARG0 c20-2
                   :ARG1 c20-6
                   :time (c20-3 / day
                                :ARG1-of (c20-1 / sick-05)
                                :poss c20-2)))

# ::snt I still think she may have some difficulties. Hope so!
# ::tokens ["I", "still", "think", "she", "may", "have", "some", "difficulties", ".", "Hope", "so", "!"]
# ::lemmas ["i", "still", "think", "she", "may", "have", "some", "difficulty", ".", "hope", "so", "!"]
(c21-4 / multi-sentence
       :snt1 (c21-3 / think-01
                    :ARG0 (c21-8 / i)
                    :ARG1 (c21-7 / possible-01
                                 :ARG1 (c21-6 / difficult
                                              :mod (c21-9 / some)
                                              :domain (c21-1 / she)))
                    :mod (c21-0 / still))
       :snt2 (c21-2 / hope-01
                    :ARG1 (c21-5 / so)
                    :mode expressive))

# ::snt . Surely that's a rhetorical question.
# ::tokens [".", "Surely", "that", "'s", "a", "rhetorical", "question", "."]
# ::lemmas [".", "surely", "that", "be", "a", "rhetorical", "question", "."]
(c22-1 / question-01
       :mod (c22-2 / rhetoric)
       :domain (c22-3 / that)
       :ARG1-of (c22-0 / sure-02))

# ::snt was the "alt right" speech the seeds of Hillary trying to escape the debates ..Fake moral outrage for no-show?? Very slippery
# ::tokens ["was", "the", "\"", "alt", "right", "\"", "speech", "the", "seeds", "of", "Hillary", "trying", "to", "escape", "the", "debates", "..", "Fake", "moral", "outrage", "for", "no", "-", "show", "?", "?", "Very", "slippery"]
# ::lemmas ["be", "the", "\"", "alt", "right", "\"", "speech", "the", "seed", "of", "Hillary", "try", "to", "escape", "the", "debate", "..", "fake", "moral", "outrage", "for", "no", "-", "show", "?", "?", "very", "slippery"]
(c23-4 / multi-sentence
       :snt1 (c23-14 / seed
                     :poss (c23-3 / try-01
                                  :ARG0 (c23-7 / person
                                               :name (c23-15 / name
                                                             :op1 "Hillary"))
                                  :ARG1 (c23-1 / escape-01
                                               :ARG0 c23-7
                                               :ARG1 (c23-6 / debate-01)))
                     :polarity (c23-10 / amr-unknown))
       :snt2 (c23-12 / outrage-01
                     :ARG1-of (c23-5 / fake-02)
                     :ARG1-of (c23-13 / moral-02)
                     :ARG1-of (c23-8 / cause-01
                                     :ARG0 (c23-2 / show-01
                                                  :polarity -))
                     :polarity (c23-11 / amr-unknown))
       :snt3 (c23-0 / slippery
                    :degree (c23-9 / very)))

# ::snt She's bought off the press why bother?
# ::tokens ["She", "'s", "bought", "off", "the", "press", "why", "bother", "?"]
# ::lemmas ["she", "be", "buy", "off", "the", "press", "why", "bother", "?"]
(c24-4 / buy-off-06
       :ARG0 (c24-3 / she)
       :ARG1 (c24-1 / press)
       :ARG1-of (c24-0 / cause-01
                       :ARG0 (c24-2 / amr-unknown)))

# ::snt days since Hillary has had to tell lies without a teleprompter.
# ::tokens ["days", "since", "Hillary", "has", "had", "to", "tell", "lies", "without", "a", "teleprompter", "."]
# ::lemmas ["day", "since", "Hillary", "have", "have", "to", "tell", "lie", "without", "a", "teleprompter", "."]
(c25-2 / multiple
       :op1 (c25-1 / temporal-quantity
                   :unit (c25-5 / day)
                   :quant 1)
       :time-of (c25-8 / obligate-01
                       :ARG1 (c25-6 / person
                                    :name (c25-9 / name
                                                 :op1 "Hillary"))
                       :ARG2 (c25-3 / tell-01
                                    :ARG0 c25-6
                                    :ARG1 (c25-7 / lie-08
                                                 :ARG0 c25-6)
                                    :manner (c25-0 / have-03
                                                   :ARG0 c25-6
                                                   :ARG1 (c25-4 / teleprompter)
                                                   :polarity -))))

# ::snt Proven fact that she can lie and insult half of America without such a distraction to her drinking time
# ::tokens ["Proven", "fact", "that", "she", "can", "lie", "and", "insult", "half", "of", "America", "without", "such", "a", "distraction", "to", "her", "drinking", "time"]
# ::lemmas ["Proven", "fact", "that", "she", "can", "lie", "and", "insult", "half", "of", "America", "without", "such", "a", "distraction", "to", "her", "drinking", "time"]
(c26-5 / possible-01
       :ARG1 (c26-8 / and
                    :op1 (c26-9 / lie-08
                                :ARG0 (c26-10 / she)
                                :ARG2 (c26-6 / country
                                             :name (c26-11 / name
                                                           :op1 "America")
                                             :quant "1/2"))
                    :op2 (c26-7 / insult-01
                                :ARG0 c26-10
                                :ARG1 c26-6)
                    :ARG0-of (c26-4 / distract-01
                                    :ARG2 (c26-2 / time
                                                 :duration-of (c26-1 / drink-01
                                                                     :ARG0 c26-10))
                                    :mod (c26-0 / such)
                                    :polarity -))
       :ARG1-of (c26-3 / prove-01))

# ::snt can she make a whole year?
# ::tokens ["can", "she", "make", "a", "whole", "year", "?"]
# ::lemmas ["can", "she", "make", "a", "whole", "year", "?"]
(c27-4 / possible-01
       :polarity (c27-5 / amr-unknown)
       :ARG1 (c27-3 / make-05
                    :ARG0 (c27-6 / she)
                    :ARG1 (c27-2 / temporal-quantity
                                 :unit (c27-0 / year)
                                 :mod (c27-1 / whole)
                                 :quant 1)))

# ::snt Shhhh... you didnt see annnything.
# ::tokens ["Shhhh", "...", "you", "did", "nt", "see", "annnything", "."]
# ::lemmas ["Shhhh", "...", "you", "do", "not", "see", "annnythe", "."]
(c28-2 / see-01
       :ARG0 (c28-0 / you)
       :ARG1 (c28-1 / anything)
       :mod (c28-3 / shhhh
                   :mode expressive)
       :polarity -)

# ::snt Hillary? moar liek ILLary.
# ::tokens ["Hillary", "?", "moar", "liek", "ILLary", "."]
# ::lemmas ["Hillary", "?", "moar", "liek", "illary", "."]
(c29-1 / person
       :polarity (c29-2 / amr-unknown)
       :name (c29-4 / name
                    :op1 "Hillary")
       :ARG1-of (c29-3 / lie-08)
       :mod (c29-0 / fucking
                   :mode expressive))

# ::snt days until her next one
# ::tokens ["days", "until", "her", "next", "one"]
# ::lemmas ["day", "until", "her", "next", "one"]
(c30-2 / until
       :op1 (c30-1 / day
                   :mod (c30-4 / next))
       :time-of (c30-0 / work-of-art
                       :poss (c30-3 / she)))

# ::snt if a woman got pregnant the day of Hillarys last presser, she'd be -1/2 months along now.
# ::tokens ["if", "a", "woman", "got", "pregnant", "the", "day", "of", "Hillarys", "last", "presser", ",", "she", "'d", "be", "-1/2", "months", "along", "now", "."]
# ::lemmas ["if", "a", "woman", "get", "pregnant", "the", "day", "of", "Hillarys", "last", "presser", ",", "she", "would", "be", "-1/2", "months", "along", "now", "."]
(c31-1 / have-condition-91
       :ARG1 (c31-8 / impregnate-01
                    :ARG1 (c31-0 / woman)
                    :time (c31-6 / day
                                 :time-of (c31-7 / presser
                                                 :mod (c31-10 / last)
                                                 :poss (c31-5 / person
                                                              :name (c31-11 / name
                                                                            :op1 "Hillary")))))
       :ARG2 (c31-2 / pass-03
                    :ARG1 (c31-3 / temporal-quantity
                                 :unit (c31-4 / month)
                                 :quant "-1/2")
                    :time (c31-9 / now)))

# ::snt she's taking sick days
# ::tokens ["she", "'s", "taking", "sick", "days"]
# ::lemmas ["she", "be", "take", "sick", "day"]
(c32-3 / take-01
       :ARG0 (c32-0 / she)
       :ARG1 (c32-2 / day
                    :ARG1-of (c32-1 / sick-05)))

# ::snt I believe they will rig this election to get killary in. Then turn it over to her VP. They know she is sick.
# ::tokens ["I", "believe", "they", "will", "rig", "this", "election", "to", "get", "killary", "in", ".", "Then", "turn", "it", "over", "to", "her", "VP", ".", "They", "know", "she", "is", "sick", "."]
# ::lemmas ["i", "believe", "they", "will", "rig", "this", "election", "to", "get", "killary", "in", ".", "then", "turn", "it", "over", "to", "her", "VP", ".", "they", "know", "she", "be", "sick", "."]
(c33-20 / multi-sentence
        :snt1 (c33-17 / believe-01
                      :ARG0 (c33-13 / i)
                      :ARG1 (c33-4 / rig-01
                                   :ARG0 (c33-6 / they)
                                   :ARG1 (c33-16 / elect-01
                                                 :mod (c33-19 / this))
                                   :purpose (c33-15 / get-04
                                                    :ARG0 c33-6
                                                    :ARG1 (c33-18 / kill-in-02
                                                                  :ARG0 c33-6))))
        :snt2 (c33-7 / turn-over-12
                     :ARG0 (c33-10 / they)
                     :ARG1 (c33-5 / it)
                     :ARG2 (c33-14 / person
                                   :ARG0-of (c33-1 / have-org-role-91
                                                   :ARG2 (c33-21 / president
                                                                 :mod (c33-3 / vice)))
                                   :poss (c33-8 / she))
                     :time (c33-2 / then))
        :snt3 (c33-0 / know-01
                     :ARG0 (c33-9 / they)
                     :ARG1 (c33-12 / sick-05
                                   :ARG1 (c33-11 / she))))

# ::snt Why hold a press conference when you're to ill and all you do is lie anyway!
# ::tokens ["Why", "hold", "a", "press", "conference", "when", "you", "'re", "to", "ill", "and", "all", "you", "do", "is", "lie", "anyway", "!"]
# ::lemmas ["why", "hold", "a", "press", "conference", "when", "you", "be", "to", "ill", "and", "all", "you", "do", "be", "lie", "anyway", "!"]
(c34-1 / hold-04
       :ARG0 (c34-0 / you)
       :ARG1 (c34-3 / conference
                    :mod (c34-2 / press))
       :ARG1-of (c34-10 / cause-01
                        :ARG0 (c34-6 / amr-unknown))
       :time (c34-8 / and
                    :op1 (c34-4 / ill-01
                                :ARG1 c34-0)
                    :op2 (c34-7 / lie-08
                                :ARG0 c34-0
                                :mod (c34-9 / anyway)
                                :mod (c34-5 / all))))

# ::snt "Hurr sure but she opened a jar of pickles, HUE HUE GOT YOU PUNK XD"
# ::tokens ["\"", "Hurr", "sure", "but", "she", "opened", "a", "jar", "of", "pickles", ",", "HUE", "HUE", "GOT", "YOU", "PUNK", "XD", "\""]
# ::lemmas ["\"", "Hurr", "sure", "but", "she", "open", "a", "jar", "of", "pickle", ",", "HUE", "HUE", "get", "you", "PUNK", "XD", "\""]
(c35-11 / sure-02
        :ARG0 (c35-7 / i)
        :ARG1-of (c35-6 / cause-01
                        :ARG0 (c35-10 / open-01
                                      :ARG0 (c35-1 / she)
                                      :ARG1 (c35-3 / jar
                                                   :consist-of (c35-8 / pickle))
                                      :ARG0-of (c35-4 / cause-01
                                                      :ARG1 (c35-9 / get-01
                                                                   :ARG0 c35-1
                                                                   :ARG1 (c35-5 / punk)
                                                                   :ARG2 (c35-0 / you)
                                                                   :polarity -))))
        :mod (c35-2 / hmm
                    :mode expressive)
        :polarity -)

# ::snt ironically the same number of women Bill has slept with since then as well.
# ::tokens ["ironically", "the", "same", "number", "of", "women", "Bill", "has", "slept", "with", "since", "then", "as", "well", "."]
# ::lemmas ["ironically", "the", "same", "number", "of", "woman", "Bill", "have", "sleep", "with", "since", "then", "as", "well", "."]
(c36-9 / number
       :ARG1-of (c36-8 / same-01)
       :quant-of (c36-1 / woman
                        :ARG2-of (c36-2 / sleep-02
                                        :ARG0 (c36-5 / person
                                                     :name (c36-4 / name
                                                                  :op1 "Bill"))
                                        :time (c36-0 / since
                                                     :op1 (c36-3 / then))))
       :mod (c36-6 / ironically)
       :mod (c36-7 / as-well))

# ::snt Play ! &gt;&gt;&gt;
# ::tokens ["Play", "!", "&", "gt;&gt;&gt", ";"]
# ::lemmas ["play", "!", "&", "gt;&gt;&gt", ";"]
(c37-0 / play-01
       :mode expressive)

# ::snt please excuse Hillary from pressers as she has a case of delusions, subject to angry rants &amp; can't control herself!
# ::tokens ["please", "excuse", "Hillary", "from", "pressers", "as", "she", "has", "a", "case", "of", "delusions", ",", "subject", "to", "angry", "rants", "&", "amp", ";", "ca", "n't", "control", "herself", "!"]
# ::lemmas ["please", "excuse", "Hillary", "from", "presser", "as", "she", "have", "a", "case", "of", "delusion", ",", "subject", "to", "angry", "rant", "&", "amp", ";", "can", "not", "control", "herself", "!"]
(c38-2 / excuse-01
       :ARG0 (c38-0 / you)
       :ARG1 (c38-6 / person
                    :name (c38-17 / name
                                  :op1 "Hillary"))
       :ARG2 (c38-4 / person
                    :ARG0-of (c38-1 / press-01))
       :ARG1-of (c38-7 / cause-01
                       :ARG0 (c38-10 / and
                                     :op1 (c38-3 / have-03
                                                 :ARG0 c38-6
                                                 :ARG1 (c38-16 / case-03
                                                               :ARG1 (c38-5 / delude-01
                                                                            :ARG1 c38-6)))
                                     :op2 (c38-8 / subject-01
                                                 :ARG1 c38-6
                                                 :ARG2 (c38-14 / and
                                                               :op1 (c38-13 / rant-01
                                                                            :ARG0 c38-6
                                                                            :ARG1-of (c38-15 / anger-01))
                                                               :op2 (c38-9 / amp)))
                                     :op3 (c38-11 / possible-01
                                                  :ARG1 (c38-12 / control-01
                                                                :ARG0 c38-6
                                                                :ARG1 c38-6)
                                                  :polarity -)))
       :mode imperative
       :polite +)

# ::snt Devil in a pantsuit.
# ::tokens ["Devil", "in", "a", "pantsuit", "."]
# ::lemmas ["devil", "in", "a", "pantsuit", "."]
(c39-1 / devil
       :ARG0-of (c39-0 / wear-01
                       :ARG1 (c39-2 / pantsuit)))

# ::snt She constipated.
# ::tokens ["She", "constipated", "."]
# ::lemmas ["she", "constipate", "."]
(c40-1 / constipate-01
       :ARG1 (c40-0 / she))

# ::snt wait.. Wasn't Kimmel enough?
# ::tokens ["wait", "..", "Was", "n't", "Kimmel", "enough", "?"]
# ::lemmas ["wait", "..", "be", "not", "Kimmel", "enough", "?"]
(c41-4 / multi-sentence
       :snt1 (c41-1 / wait-01
                    :ARG1 (c41-0 / you))
       :snt2 (c41-2 / have-quant-91
                    :ARG1 (c41-5 / person
                                 :name (c41-7 / name
                                              :op1 "Kimmelman"))
                    :ARG3 (c41-3 / enough)
                    :polarity (c41-6 / amr-unknown)))

# ::snt she is a hider ..I think we all humiliated her. Image what she's doing to her staffers yelling struggling ect
# ::tokens ["she", "is", "a", "hider", "..", "I", "think", "we", "all", "humiliated", "her", ".", "Image", "what", "she", "'s", "doing", "to", "her", "staffers", "yelling", "struggling", "ect"]
# ::lemmas ["she", "be", "a", "hider", "..", "i", "think", "we", "all", "humiliate", "she", ".", "image", "what", "she", "be", "do", "to", "her", "staffer", "yell", "struggle", "ect"]
(c43-18 / multi-sentence
        :snt1 (c43-1 / have-degree-91
                     :ARG1 (c43-7 / she)
                     :ARG2 (c43-2 / low-04
                                  :ARG1 c43-7)
                     :ARG3 (c43-19 / more))
        :snt2 (c43-5 / think-01
                     :ARG0 (c43-12 / i)
                     :ARG1 (c43-6 / humiliate-01
                                  :ARG0 (c43-0 / we
                                               :mod (c43-14 / all))
                                  :ARG1 c43-7))
        :snt3 (c43-4 / image-01
                     :ARG0 (c43-3 / you)
                     :ARG1 (c43-17 / thing
                                   :ARG1-of (c43-11 / do-02
                                                    :ARG0 (c43-9 / she)
                                                    :ARG2 (c43-13 / person
                                                                  :ARG2-of (c43-8 / staff-01
                                                                                  :ARG0 c43-9)
                                                                  :ARG0-of (c43-15 / yell-01
                                                                                   :ARG1 (c43-10 / struggle-02)))))
                     :mode imperative)
        :snt4 (c43-16 / et-cetera))

# ::snt strangling** throwing books at them ..punching her husband she's a monster Behind The Politics
# ::tokens ["strangling", "*", "*", "throwing", "books", "at", "them", "..", "punching", "her", "husband", "she", "'s", "a", "monster", "Behind", "The", "Politics"]
# ::lemmas ["strangle", "*", "*", "throw", "book", "at", "they", "..", "punch", "her", "husband", "she", "be", "a", "monster", "behind", "the", "politic"]
(c44-9 / and
       :op1 (c44-11 / strangle-01
                    :ARG0 (c44-0 / she)
                    :ARG1 (c44-13 / book))
       :op2 (c44-2 / throw-01
                   :ARG0 c44-0
                   :ARG1 c44-13
                   :ARG2 (c44-3 / they))
       :op3 (c44-8 / punch-01
                   :ARG0 c44-0
                   :ARG1 (c44-6 / person
                                :ARG0-of (c44-1 / have-rel-role-91
                                                :ARG1 c44-0
                                                :ARG2 (c44-5 / husband))))
       :domain (c44-4 / monster
                      :location (c44-10 / behind
                                        :op1 (c44-7 / documentary
                                                    :name (c44-12 / name
                                                                  :op1 "Behind"
                                                                  :op2 "the"
                                                                  :op3 "Politics")))
                      :domain c44-0))

# ::snt Bill knows
# ::tokens ["Bill", "knows"]
# ::lemmas ["Bill", "know"]
(c45-0 / know-01
       :ARG0 (c45-2 / person
                    :name (c45-1 / name
                                 :op1 "Bill")))

# ::snt lol haha!!
# ::tokens ["lol", "haha", "!", "!"]
# ::lemmas ["lol", "haha", "!", "!"]
(c46-0 / laugh-01
       :manner (c46-1 / loud)
       :mode expressive)

# ::snt lol
# ::tokens ["lol"]
# ::lemmas ["lol"]
(c47-0 / laugh-01
       :manner (c47-1 / loud)
       :mode expressive)

# ::snt she has the T-Virus she's a zombie. She's a scary world conquering monster that wants to eat the American ppl
# ::tokens ["she", "has", "the", "T", "-", "Virus", "she", "'s", "a", "zombie", ".", "She", "'s", "a", "scary", "world", "conquering", "monster", "that", "wants", "to", "eat", "the", "American", "ppl"]
# ::lemmas ["she", "have", "the", "T", "-", "Virus", "she", "be", "a", "zombie", ".", "she", "be", "a", "scary", "world", "conquering", "monster", "that", "want", "to", "eat", "the", "American", "ppl"]
(c48-5 / multi-sentence
       :snt1 (c48-2 / have-03
                    :ARG0 (c48-15 / she)
                    :ARG1 (c48-11 / virus
                                  :name (c48-16 / name
                                                :op1 "T-Virus")))
       :snt2 (c48-6 / zombie
                    :domain (c48-3 / she))
       :snt3 (c48-13 / monster
                     :ARG0-of (c48-9 / conquer-01
                                     :ARG1 (c48-1 / world))
                     :ARG0-of (c48-14 / want-01
                                      :ARG1 (c48-4 / eat-01
                                                   :ARG0 c48-13
                                                   :ARG1 (c48-10 / ppl
                                                                 :mod (c48-12 / country
                                                                              :name (c48-8 / name
                                                                                           :op1 "America")))))
                     :ARG0-of (c48-0 / scary-03)
                     :domain (c48-7 / she)))

# ::snt she's busy talking to herself , counting dirty money , pandering to " the little people " , lying to everyone
# ::tokens ["she", "'s", "busy", "talking", "to", "herself", ",", "counting", "dirty", "money", ",", "pandering", "to", "\"", "the", "little", "people", "\"", ",", "lying", "to", "everyone"]
# ::lemmas ["she", "be", "busy", "talk", "to", "herself", ",", "count", "dirty", "money", ",", "pander", "to", "\"", "the", "little", "people", "\"", ",", "lie", "to", "everyone"]
(c49-11 / busy-01
        :ARG1 (c49-8 / she)
        :ARG2 (c49-6 / and
                     :op1 (c49-0 / talk-01
                                 :ARG0 c49-8
                                 :ARG2 c49-8)
                     :op2 (c49-4 / count-01
                                 :ARG0 c49-8
                                 :ARG1 (c49-1 / money
                                              :ARG1-of (c49-3 / dirty-02)))
                     :op3 (c49-5 / pander-01
                                 :ARG0 c49-8
                                 :ARG1 (c49-2 / person
                                              :mod (c49-7 / little)))
                     :op4 (c49-9 / lie-08
                                 :ARG0 c49-8
                                 :ARG2 (c49-10 / everyone))))

# ::snt blood donors for sick Hillary ...that monster killed Seth Green
# ::tokens ["blood", "donors", "for", "sick", "Hillary", "...", "that", "monster", "killed", "Seth", "Green"]
# ::lemmas ["blood", "donor", "for", "sick", "Hillary", "...", "that", "monster", "kill", "Seth", "Green"]
(c50-0 / kill-01
       :ARG0 (c50-3 / monster
                    :mod (c50-2 / that))
       :ARG1 (c50-6 / person
                    :name (c50-9 / name
                                 :op1 "Seth"
                                 :op2 "Green"))
       :ARG2 (c50-4 / person
                    :ARG0-of (c50-5 / donate-01
                                    :ARG2 (c50-1 / person
                                                 :name (c50-7 / name
                                                              :op1 "Hillary")
                                                 :ARG1-of (c50-8 / sick-05))
                                    :ARG1-of (c50-10 / blood-02))))
