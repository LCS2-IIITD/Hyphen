# ::snt One in which you've already decided to let them get away with it. He's on paid vaca.
# ::tokens ["One", "in", "which", "you", "'ve", "already", "decided", "to", "let", "them", "get", "away", "with", "it", ".", "He", "'s", "on", "paid", "vaca", "."]
# ::lemmas ["One", "in", "which", "you", "'ve", "already", "decide", "to", "let", "they", "get", "away", "with", "it", ".", "he", "be", "on", "pay", "vaca", "."]
(c1-3 / multi-sentence
      :snt1 (c1-4 / decide-01
                  :ARG0 (c1-0 / you)
                  :ARG1 (c1-9 / let-01
                              :ARG0 c1-0
                              :ARG1 (c1-8 / get-away-08
                                          :ARG0 (c1-2 / they)
                                          :ARG1 (c1-5 / it)))
                  :time (c1-10 / already))
      :snt2 (c1-7 / vacate-01
                  :ARG0 (c1-1 / he)
                  :ARG1-of (c1-6 / pay-01)))

# ::snt I said the exact same thing! Lady told me officer was prob. checking in. HAHAHAHAHAHAHAHAHA!
# ::tokens ["I", "said", "the", "exact", "same", "thing", "!", "Lady", "told", "me", "officer", "was", "prob", ".", "checking", "in", ".", "HAHAHAHAHAHAHAHAHA", "!"]
# ::lemmas ["i", "say", "the", "exact", "same", "thing", "!", "Lady", "tell", "i", "officer", "be", "prob", ".", "check", "in", ".", "HAHAHAHAHAHAHAHAHA", "!"]
(c2-3 / multi-sentence
      :snt1 (c2-12 / say-01
                   :ARG0 (c2-8 / i)
                   :ARG1 (c2-2 / thing
                               :ARG1-of (c2-0 / same-01
                                              :mod (c2-14 / exact))))
      :snt2 (c2-4 / tell-01
                  :ARG0 (c2-9 / person
                              :name (c2-13 / name
                                           :op1 "Lady"))
                  :ARG1 (c2-10 / check-in-02
                               :ARG0 (c2-7 / person
                                           :ARG0-of (c2-1 / have-org-role-91
                                                          :ARG2 (c2-11 / officer)))
                               :ARG1 c2-8)
                  :ARG2 (c2-5 / i))
      :snt3 (c2-6 / ha
                  :mode expressive))

# ::snt : New Hashtag
# ::tokens [":", "New", "Hashtag"]
# ::lemmas [":", "New", "Hashtag"]
(c3-0 / hashtag
      :ARG1-of (c3-1 / new-01))

# ::snt Brilliant! Lets arrest the entire police force for aiding and abetting.
# ::tokens ["Brilliant", "!", "Lets", "arrest", "the", "entire", "police", "force", "for", "aiding", "and", "abetting", "."]
# ::lemmas ["brilliant", "!", "let", "arrest", "the", "entire", "police", "force", "for", "aid", "and", "abet", "."]
(c4-1 / multi-sentence
      :snt1 (c4-10 / brilliant-01)
      :snt2 (c4-6 / let-01
                  :ARG0 (c4-0 / we)
                  :ARG1 (c4-5 / arrest-01
                              :ARG0 c4-0
                              :ARG1 (c4-2 / force
                                          :mod (c4-3 / police)
                                          :mod (c4-9 / entire))
                              :ARG2 (c4-7 / and
                                          :op1 (c4-8 / aid-01
                                                     :ARG0 c4-2)
                                          :op2 (c4-4 / abet-01
                                                     :ARG0 c4-2)))
                  :mode imperative))

# ::snt She has a valid concern. You offer a grossly exaggerated red herring in order too...?
# ::tokens ["She", "has", "a", "valid", "concern", ".", "You", "offer", "a", "grossly", "exaggerated", "red", "herring", "in", "order", "too", "...", "?"]
# ::lemmas ["she", "have", "a", "valid", "concern", ".", "you", "offer", "a", "grossly", "exaggerated", "red", "herring", "in", "order", "too", "...", "?"]
(c5-3 / multi-sentence
      :snt1 (c5-5 / concern-01
                  :ARG1 (c5-11 / she)
                  :ARG1-of (c5-6 / valid-02))
      :snt2 (c5-10 / offer-01
                   :ARG0 (c5-0 / you)
                   :ARG1 (c5-1 / herring
                               :ARG1-of (c5-9 / red-02)
                               :ARG1-of (c5-12 / exaggerate-01
                                               :ARG1-of (c5-7 / gross-06)))
                   :polarity (c5-8 / amr-unknown)
                   :purpose (c5-4 / order-03
                                  :ARG0 c5-0
                                  :ARG1 c5-1)
                   :mod (c5-2 / too)))

# ::snt Vacationing on the Bundy Ranch, Id imagine.
# ::tokens ["Vacationing", "on", "the", "Bundy", "Ranch", ",", "I", "d", "imagine", "."]
# ::lemmas ["vacation", "on", "the", "Bundy", "Ranch", ",", "I", "d", "imagine", "."]
(c6-1 / imagine-01
      :ARG0 (c6-0 / i)
      :ARG1 (c6-2 / vacation-01
                  :ARG0 c6-0
                  :ARG1 (c6-3 / ranch
                              :name (c6-4 / name
                                          :op1 "Bundy"
                                          :op2 "Ranch"))))

# ::snt A. In a white privilege world
# ::tokens ["A.", "In", "a", "white", "privilege", "world"]
# ::lemmas ["A.", "in", "a", "white", "privilege", "world"]
(c7-4 / be-located-at-91
      :ARG2 (c7-0 / world
                  :ARG2-of (c7-2 / privilege-01
                                 :ARG1 (c7-1 / person
                                             :ARG1-of (c7-3 / white-02))))
      :li "A")

# ::snt in a valid world like ours. Where criminals are victims...
# ::tokens ["in", "a", "valid", "world", "like", "ours", ".", "Where", "criminals", "are", "victims", "..."]
# ::lemmas ["in", "a", "valid", "world", "like", "ours", ".", "where", "criminal", "be", "victim", "..."]
(c8-2 / multi-sentence
      :snt1 (c8-9 / be-located-at-91
                  :ARG2 (c8-1 / world
                              :ARG1-of (c8-5 / valid-02)
                              :ARG1-of (c8-6 / resemble-01
                                             :ARG2 (c8-7 / world
                                                         :poss (c8-8 / we)))))
      :snt2 (c8-0 / victim
                  :domain (c8-3 / person
                                :ARG2-of (c8-4 / criminal-03))))

# ::snt Ferguson Missouri, obvs.
# ::tokens ["Ferguson", "Missouri", ",", "obvs", "."]
# ::lemmas ["Ferguson", "Missouri", ",", "obvs", "."]
(c9-3 / say-01
      :ARG0 (c9-1 / i)
      :ARG1 (c9-0 / incident
                  :name (c9-4 / name
                              :op1 "Ferguson"
                              :op2 "Missouri"))
      :ARG2 (c9-2 / obvs))

# ::snt When is the police chief being relieved? He allowed the alleged cop who killed leave town!
# ::tokens ["When", "is", "the", "police", "chief", "being", "relieved", "?", "He", "allowed", "the", "alleged", "cop", "who", "killed", "leave", "town", "!"]
# ::lemmas ["when", "be", "the", "police", "chief", "be", "relieve", "?", "he", "allow", "the", "alleged", "cop", "who", "kill", "leave", "town", "!"]
(c10-3 / multi-sentence
       :snt1 (c10-10 / relieve-01
                     :ARG1 (c10-6 / person
                                  :ARG0-of (c10-1 / have-org-role-91
                                                  :ARG1 (c10-5 / police)
                                                  :ARG2 (c10-7 / chief)))
                     :time (c10-8 / amr-unknown))
       :snt2 (c10-11 / allow-01
                     :ARG0 (c10-4 / he)
                     :ARG1 (c10-9 / leave-11
                                  :ARG0 (c10-13 / cop
                                                :ARG1-of (c10-12 / allege-01)
                                                :ARG0-of (c10-0 / kill-01))
                                  :ARG1 (c10-2 / town))))

# ::snt Well maybe a world where you know where he lives &amp;works. Same world where ppl RIOT over a man who was shot after a robbery
# ::tokens ["Well", "maybe", "a", "world", "where", "you", "know", "where", "he", "lives", "&", "amp;works", ".", "Same", "world", "where", "ppl", "RIOT", "over", "a", "man", "who", "was", "shot", "after", "a", "robbery"]
# ::lemmas ["well", "maybe", "a", "world", "where", "you", "know", "where", "he", "live", "&", "amp;work", ".", "same", "world", "where", "ppl", "RIOT", "over", "a", "man", "who", "be", "shoot", "after", "a", "robbery"]
(c11-5 / multi-sentence
       :snt1 (c11-8 / possible-01
                    :ARG1 (c11-2 / world
                                 :location-of (c11-0 / know-01
                                                     :ARG0 (c11-1 / you)
                                                     :ARG1 (c11-9 / and
                                                                  :op1 (c11-10 / live-01
                                                                               :ARG0 (c11-3 / he))
                                                                  :op2 (c11-14 / work-01
                                                                               :ARG0 c11-3))))
                    :mod (c11-17 / well))
       :snt2 (c11-15 / same-01
                     :ARG1 (c11-16 / world
                                   :location-of (c11-4 / shoot-02
                                                       :ARG0 (c11-6 / person
                                                                    :name (c11-7 / name
                                                                                 :op1 "Pat"
                                                                                 :op2 "Riot"))
                                                       :ARG1 (c11-13 / man
                                                                     :time (c11-11 / after
                                                                                   :op1 (c11-12 / rob-01
                                                                                                :ARG0 c11-6)))
                                                       :ARG1 c11-13))))

# ::snt same one where ppl r Rioting and that are making death threats to him
# ::tokens ["same", "one", "where", "ppl", "r", "Rioting", "and", "that", "are", "making", "death", "threats", "to", "him"]
# ::lemmas ["same", "one", "where", "ppl", "r", "Rioting", "and", "that", "be", "make", "death", "threat", "to", "he"]
(c12-5 / one
       :ARG1-of (c12-6 / same-01)
       :location-of (c12-3 / and
                           :op1 (c12-4 / riot-01
                                       :ARG0 (c12-2 / person))
                           :op2 (c12-0 / threaten-01
                                       :ARG0 c12-2
                                       :ARG1 (c12-1 / die-01)
                                       :ARG2 c12-2)))

# ::snt . this goes against everything i have seen on law and order!!!! MY FAITH IN THE WHOLE SYSTEM IS SHAKEN NOW!
# ::tokens [".", "this", "goes", "against", "everything", "i", "have", "seen", "on", "law", "and", "order", "!", "!", "!", "!", "MY", "FAITH", "IN", "THE", "WHOLE", "SYSTEM", "IS", "SHAKEN", "NOW", "!"]
# ::lemmas [".", "this", "go", "against", "everything", "i", "have", "see", "on", "law", "and", "order", "!", "!", "!", "!", "my", "faith", "in", "the", "whole", "system", "be", "SHAKEN", "now", "!"]
(c13-4 / multi-sentence
       :snt1 (c13-8 / go-06
                    :ARG0 (c13-3 / this)
                    :ARG1 (c13-7 / against
                                 :op1 (c13-15 / everything
                                              :ARG1-of (c13-12 / see-01
                                                               :ARG0 (c13-6 / i)
                                                               :topic (c13-11 / and
                                                                              :op1 (c13-9 / law)
                                                                              :op2 (c13-10 / order))))))
       :snt2 (c13-14 / lock-01
                     :ARG1 (c13-5 / truth
                                  :poss (c13-1 / i)
                                  :location (c13-2 / system
                                                   :mod (c13-0 / whole)))
                     :time (c13-13 / now)))

# ::snt My column: FERGUSON: OBAMA KICKS NIXON IN THE ASS
# ::tokens ["My", "column", ":", "FERGUSON", ":", "OBAMA", "KICKS", "NIXON", "IN", "THE", "ASS"]
# ::lemmas ["my", "column", ":", "FERGUSON", ":", "OBAMA", "KICKS", "NIXON", "in", "the", "ASS"]
(c14-6 / and
       :op1 (c14-5 / column
                   :poss (c14-3 / i)
                   :mod (c14-4 / person
                               :name (c14-9 / name
                                            :op1 "Ferguson")))
       :op2 (c14-0 / kick-01
                   :ARG0 (c14-1 / person
                                :name (c14-2 / name
                                             :op1 "Obama"))
                   :ARG1 (c14-7 / nickel)
                   :location (c14-8 / ass)))

# ::snt :in Egypt, they killed 's and still free
# ::tokens [":", "in", "Egypt", ",", "they", "killed", "'s", "and", "still", "free"]
# ::lemmas [":", "in", "Egypt", ",", "they", "kill", "'s", "and", "still", "free"]
(c15-5 / and
       :op1 (c15-0 / kill-01
                   :ARG0 (c15-1 / they)
                   :ARG1 (c15-3 / person
                                :ARG1-of (c15-2 / free-04
                                                :mod (c15-6 / still)))
                   :location (c15-4 / country
                                    :name (c15-7 / name
                                                 :op1 "Egypt")))
       :op2 c15-2)

# ::snt When you place him in the Whiteness Protection Program.
# ::tokens ["When", "you", "place", "him", "in", "the", "Whiteness", "Protection", "Program", "."]
# ::lemmas ["when", "you", "place", "he", "in", "the", "Whiteness", "Protection", "Program", "."]
(c16-5 / be-temporally-at-91
       :ARG2 (c16-3 / place-01
                    :ARG0 (c16-0 / you)
                    :ARG1 (c16-1 / he)
                    :ARG2 (c16-2 / program
                                 :name (c16-4 / name
                                              :op1 "Whiteness"
                                              :op2 "Protection"
                                              :op3 "Program"))))

# ::snt I think you know the answer to that one.
# ::tokens ["I", "think", "you", "know", "the", "answer", "to", "that", "one", "."]
# ::lemmas ["i", "think", "you", "know", "the", "answer", "to", "that", "one", "."]
(c17-2 / think-01
       :ARG0 (c17-4 / i)
       :ARG1 (c17-0 / know-01
                    :ARG0 (c17-1 / you)
                    :ARG1 (c17-5 / answer-01
                                 :ARG1 (c17-6 / one
                                              :mod (c17-3 / that)))))

# ::snt . In a world where white cops who murder shoplifting kids are free of responsibility for their actions.
# ::tokens [".", "In", "a", "world", "where", "white", "cops", "who", "murder", "shoplifting", "kids", "are", "free", "of", "responsibility", "for", "their", "actions", "."]
# ::lemmas [".", "in", "a", "world", "where", "white", "cop", "who", "murder", "shoplifting", "kid", "be", "free", "of", "responsibility", "for", "their", "action", "."]
(c18-9 / be-located-at-91
       :ARG2 (c18-1 / world
                    :location-of (c18-2 / free-04
                                        :ARG1 (c18-4 / cop
                                                     :ARG1-of (c18-7 / white-02)
                                                     :ARG0-of (c18-3 / murder-01
                                                                     :ARG1 (c18-8 / shoplift-01
                                                                                  :ARG0 c18-4
                                                                                  :ARG1 (c18-0 / kid))))
                                        :ARG2 (c18-6 / responsible-01
                                                     :ARG0 c18-4
                                                     :ARG1 (c18-5 / act-02
                                                                  :ARG0 c18-4)))))

# ::snt In the U.S.A. world.
# ::tokens ["In", "the", "U.S.A.", "world", "."]
# ::lemmas ["in", "the", "U.S.A.", "world", "."]
(c19-3 / be-located-at-91
       :ARG2 (c19-0 / world
                    :poss (c19-2 / country
                                 :name (c19-1 / name
                                              :op1 "U.S.A."))))

# ::snt In a world where you have to convince everyone where the community is comprised of crazed animals and unsafe.
# ::tokens ["In", "a", "world", "where", "you", "have", "to", "convince", "everyone", "where", "the", "community", "is", "comprised", "of", "crazed", "animals", "and", "unsafe", "."]
# ::lemmas ["in", "a", "world", "where", "you", "have", "to", "convince", "everyone", "where", "the", "community", "be", "comprise", "of", "craze", "animal", "and", "unsafe", "."]
(c20-12 / be-located-at-91
        :ARG2 (c20-2 / world
                     :location-of (c20-8 / obligate-01
                                         :ARG1 (c20-0 / you)
                                         :ARG2 (c20-3 / convince-01
                                                      :ARG0 c20-0
                                                      :ARG1 (c20-11 / everyone)
                                                      :ARG2 (c20-6 / location
                                                                   :location-of (c20-10 / comprise-01
                                                                                        :ARG1 (c20-4 / community)
                                                                                        :ARG2 (c20-7 / and
                                                                                                     :op1 (c20-9 / animal
                                                                                                                 :ARG1-of (c20-1 / crazy-03))
                                                                                                     :op2 (c20-5 / safe-01
                                                                                                                 :polarity -))))))))
