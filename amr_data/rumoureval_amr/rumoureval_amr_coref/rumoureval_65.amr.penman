# ::snt : : Police have confirmed that the is over. thank God
# ::tokens [":", ":", "Police", "have", "confirmed", "that", "the", "is", "over", ".", "thank", "God"]
# ::lemmas [":", ":", "police", "have", "confirm", "that", "the", "be", "over", ".", "thank", "God"]
(c1-1 / multi-sentence
      :snt1 (c1-5 / confirm-01
                  :ARG0 (c1-4 / police)
                  :ARG1 (c1-6 / over-01
                              :ARG1 (c1-3 / it)))
      :snt2 (c1-0 / thank-01
                  :ARG1 (c1-2 / person
                              :name (c1-7 / name
                                          :op1 "God"))))

# ::snt good
# ::tokens ["good"]
# ::lemmas ["good"]
(c2-0 / good-02)

# ::snt : : Police have confirmed that the is over. Thank god... Shoutout to all the police that saved us
# ::tokens [":", ":", "Police", "have", "confirmed", "that", "the", "is", "over", ".", "Thank", "god", "...", "Shoutout", "to", "all", "the", "police", "that", "saved", "us"]
# ::lemmas [":", ":", "police", "have", "confirm", "that", "the", "be", "over", ".", "thank", "god", "...", "shoutout", "to", "all", "the", "police", "that", "save", "we"]
(c3-4 / multi-sentence
      :snt1 (c3-7 / confirm-01
                  :ARG0 (c3-6 / police)
                  :ARG1 (c3-10 / over-01
                               :ARG1 (c3-5 / police)))
      :snt2 (c3-3 / thank-01
                  :ARG1 (c3-8 / god))
      :snt3 (c3-11 / shout-01
                   :ARG2 (c3-0 / police
                               :mod (c3-9 / all)
                               :ARG0-of (c3-1 / save-02
                                              :ARG1 (c3-2 / we)))))

# ::snt : : Police have confirmed that the is over. GOD
# ::tokens [":", ":", "Police", "have", "confirmed", "that", "the", "is", "over", ".", "GOD"]
# ::lemmas [":", ":", "police", "have", "confirm", "that", "the", "be", "over", ".", "GOD"]
(c4-0 / multi-sentence
      :snt1 (c4-3 / confirm-01
                  :ARG0 (c4-2 / police)
                  :ARG1 (c4-4 / over-01
                              :ARG1 (c4-6 / event)))
      :snt2 (c4-1 / person
                  :name (c4-5 / name
                              :op1 "God")))

# ::snt What a relief! Glad everyone is mostly ok!
# ::tokens ["What", "a", "relief", "!", "Glad", "everyone", "is", "mostly", "ok", "!"]
# ::lemmas ["what", "a", "relief", "!", "glad", "everyone", "be", "mostly", "ok", "!"]
(c5-0 / multi-sentence
      :snt1 (c5-2 / relieve-01
                  :degree (c5-5 / so))
      :snt2 (c5-1 / glad-02
                  :ARG0 (c5-3 / okay-04
                              :ARG1 (c5-6 / everyone)
                              :mod (c5-4 / most))))

# ::snt : : Police have confirmed that the is over. so glad to hear, this was unreal!
# ::tokens [":", ":", "Police", "have", "confirmed", "that", "the", "is", "over", ".", "so", "glad", "to", "hear", ",", "this", "was", "unreal", "!"]
# ::lemmas [":", ":", "police", "have", "confirm", "that", "the", "be", "over", ".", "so", "glad", "to", "hear", ",", "this", "be", "unreal", "!"]
(c6-2 / multi-sentence
      :snt1 (c6-5 / confirm-01
                  :ARG0 (c6-4 / police)
                  :ARG1 (c6-8 / over-01
                              :ARG1 (c6-3 / facility)))
      :snt2 (c6-6 / glad-02
                  :ARG0 (c6-0 / hear-01
                              :ARG1 (c6-1 / this
                                          :ARG1-of (c6-7 / realistic-03
                                                         :polarity -)))
                  :degree (c6-9 / so)))

# ::snt : : Police have confirmed that the is over. best news
# ::tokens [":", ":", "Police", "have", "confirmed", "that", "the", "is", "over", ".", "best", "news"]
# ::lemmas [":", ":", "police", "have", "confirm", "that", "the", "be", "over", ".", "good", "news"]
(c7-1 / multi-sentence
      :snt1 (c7-4 / confirm-01
                  :ARG0 (c7-3 / police)
                  :ARG1 (c7-6 / over-01
                              :ARG1 (c7-2 / it)))
      :snt2 (c7-8 / news
                  :ARG1-of (c7-0 / have-degree-91
                                 :ARG2 (c7-5 / good-02
                                             :ARG1 c7-8)
                                 :ARG3 (c7-7 / most))))

# ::snt YES
# ::tokens ["YES"]
# ::lemmas ["yes"]
(c8-0 / yes)

# ::snt : : Police have confirmed that the is over. good job australia, hope they all are okay
# ::tokens [":", ":", "Police", "have", "confirmed", "that", "the", "is", "over", ".", "good", "job", "australia", ",", "hope", "they", "all", "are", "okay"]
# ::lemmas [":", ":", "police", "have", "confirm", "that", "the", "be", "over", ".", "good", "job", "australia", ",", "hope", "you", "all", "be", "okay"]
(c9-2 / multi-sentence
      :snt1 (c9-7 / confirm-01
                  :ARG0 (c9-6 / police)
                  :ARG1 (c9-10 / over-01
                               :ARG1 c9-6))
      :snt2 (c9-11 / say-01
                   :ARG1 (c9-3 / job
                               :ARG1-of (c9-8 / good-02)
                               :mod (c9-4 / country
                                          :name (c9-12 / name
                                                       :op1 "Australia")))
                   :ARG2 c9-6)
      :snt3 (c9-0 / hope-01
                  :ARG1 (c9-5 / okay-04
                              :ARG1 (c9-1 / they
                                          :mod (c9-9 / all)))))

# ::snt : : Police have confirmed that the is over. I would not only like to thank God, but those policemen
# ::tokens [":", ":", "Police", "have", "confirmed", "that", "the", "is", "over", ".", "I", "would", "not", "only", "like", "to", "thank", "God", ",", "but", "those", "policemen"]
# ::lemmas [":", ":", "police", "have", "confirm", "that", "the", "be", "over", ".", "i", "would", "not", "only", "like", "to", "thank", "God", ",", "but", "those", "policeman"]
(c10-3 / multi-sentence
       :snt1 (c10-9 / confirm-01
                    :ARG0 (c10-8 / police)
                    :ARG1 (c10-12 / over-01
                                  :ARG1 (c10-7 / it)))
       :snt2 (c10-10 / like-02
                     :ARG0 (c10-1 / i)
                     :ARG1 (c10-2 / thank-01
                                  :ARG0 c10-1
                                  :ARG1 (c10-11 / and
                                                :op1 (c10-5 / person
                                                            :name (c10-13 / name
                                                                          :op1 "God"))
                                                :op2 (c10-0 / policeman
                                                            :mod (c10-4 / that))))
                     :mod (c10-6 / only
                                 :polarity -)))

# ::snt : : Police have confirmed that the is over. thank god thank god thank you thank you thank you
# ::tokens [":", ":", "Police", "have", "confirmed", "that", "the", "is", "over", ".", "thank", "god", "thank", "god", "thank", "you", "thank", "you", "thank", "you"]
# ::lemmas [":", ":", "police", "have", "confirm", "that", "the", "be", "over", ".", "thank", "god", "thank", "god", "thank", "you", "thank", "you", "thank", "you"]
(c11-3 / multi-sentence
       :snt1 (c11-9 / confirm-01
                    :ARG0 (c11-8 / police)
                    :ARG1 (c11-10 / over-01
                                  :ARG1 (c11-7 / it)))
       :snt2 (c11-2 / thank-01
                    :ARG0 (c11-1 / i)
                    :ARG1 (c11-6 / person
                                 :name (c11-11 / name
                                               :op1 "God")))
       :snt3 (c11-4 / thank-01
                    :ARG0 c11-1
                    :ARG1 (c11-0 / you))
       :snt4 (c11-5 / thank-01
                    :ARG0 c11-1
                    :ARG1 c11-0))

# ::snt THANKS GOD
# ::tokens ["THANKS", "GOD"]
# ::lemmas ["thank", "GOD"]
(c12-2 / thank-01
       :ARG1 (c12-1 / person
                    :name (c12-0 / name
                                 :op1 "God")))

# ::snt THANK GOODNESS
# ::tokens ["THANK", "GOODNESS"]
# ::lemmas ["thank", "goodness"]
(c13-1 / thank-01
       :ARG1 (c13-0 / goodness))
