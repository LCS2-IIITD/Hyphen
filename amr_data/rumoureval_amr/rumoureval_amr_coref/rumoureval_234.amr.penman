# ::snt good
# ::tokens ["good"]
# ::lemmas ["good"]
(c1-0 / good-02)

# ::snt Great job!!
# ::tokens ["Great", "job", "!", "!"]
# ::lemmas ["great", "job", "!", "!"]
(c2-0 / job
      :mod (c2-1 / great)
      :mode expressive)

# ::snt : : Both Charlie Hebdo suspects killed as police storm building (police sources) http
# ::tokens [":", ":", "Both", "Charlie", "Hebdo", "suspects", "killed", "as", "police", "storm", "building", "(", "police", "sources", ")", "http"]
# ::lemmas [":", ":", "both", "Charlie", "Hebdo", "suspect", "kill", "as", "police", "storm", "build", "(", "police", "source", ")", "http"]
(c3-0 / kill-01
      :ARG1 (c3-5 / person
                  :ARG2-of (c3-7 / suspect-01
                                 :ARG1 (c3-4 / publication
                                             :name (c3-8 / name
                                                         :op1 "Charlie"
                                                         :op2 "Ch Hebdo")))
                  :mod (c3-9 / both))
      :time (c3-3 / storm-01
                  :ARG0 (c3-2 / police)
                  :ARG1 (c3-6 / building))
      :ARG1-of (c3-1 / source-01
                     :ARG2 c3-2))

# ::snt For the record this pic. is the other hostage site, the CharlieHebdo murderers were taken outside Paris: Dammartin
# ::tokens ["For", "the", "record", "this", "pic", ".", "is", "the", "other", "hostage", "site", ",", "the", "CharlieHebdo", "murderers", "were", "taken", "outside", "Paris", ":", "Dammartin"]
# ::lemmas ["for", "the", "record", "this", "pic", ".", "be", "the", "other", "hostage", "site", ",", "the", "CharlieHebdo", "murderer", "be", "take", "outside", "Paris", ":", "Dammartin"]
(c4-3 / multi-sentence
      :snt1 (c4-15 / site
                   :mod (c4-1 / hostage)
                   :mod (c4-13 / other)
                   :domain (c4-7 / pic
                                 :mod (c4-2 / this))
                   :purpose (c4-12 / record-01))
      :snt2 (c4-4 / take-01
                  :ARG1 (c4-5 / person
                              :ARG0-of (c4-14 / murder-01
                                              :ARG1 (c4-0 / person
                                                          :name (c4-16 / name
                                                                       :op1 "CharlieHebdo"))))
                  :location (c4-6 / outside
                                  :op1 (c4-8 / city
                                             :name (c4-9 / name
                                                         :op1 "Paris"))))
      :snt3 (c4-10 / person
                   :name (c4-11 / name
                                :op1 "Dammartin")))

# ::snt : Both Charlie Hebdo suspects killed as police storm building (police sources)
# ::tokens [":", "Both", "Charlie", "Hebdo", "suspects", "killed", "as", "police", "storm", "building", "(", "police", "sources", ")"]
# ::lemmas [":", "both", "Charlie", "Hebdo", "suspect", "kill", "as", "police", "storm", "build", "(", "police", "source", ")"]
(c5-0 / kill-01
      :ARG1 (c5-5 / person
                  :ARG2-of (c5-7 / suspect-01
                                 :ARG1 (c5-3 / magazine
                                             :name (c5-8 / name
                                                         :op1 "Charlie"
                                                         :op2 "Charity"
                                                         :op3 "Journal")))
                  :mod (c5-9 / both))
      :time (c5-2 / storm-01
                  :ARG0 (c5-4 / police)
                  :ARG1 (c5-6 / building))
      :ARG1-of (c5-1 / source-01
                     :ARG2 c5-4))

# ::snt . Did they get those" BOYS "who lashed oUt against the C.H. artist?
# ::tokens [".", "Did", "they", "get", "those", "\"", "BOYS", "\"", "who", "lashed", "oUt", "against", "the", "C.H.", "artist", "?"]
# ::lemmas [".", "do", "they", "get", "those", "\"", "boy", "\"", "who", "lash", "out", "against", "the", "C.H.", "artist", "?"]
(c6-5 / get-01
      :ARG0 (c6-2 / they)
      :ARG1 (c6-9 / boy
                  :mod (c6-1 / that)
                  :ARG0-of (c6-4 / lash-01
                                 :ARG1 (c6-3 / person
                                             :ARG0-of (c6-0 / work-of-art
                                                            :name (c6-8 / name
                                                                        :op1 "C.H.")))
                                 :ARG2 (c6-7 / ounter)))
      :polarity (c6-6 / amr-unknown))

# ::snt Great News!!! Take no prisoners. These bastards need to be exterminated on sight
# ::tokens ["Great", "News", "!", "!", "!", "Take", "no", "prisoners", ".", "These", "bastards", "need", "to", "be", "exterminated", "on", "sight"]
# ::lemmas ["Great", "News", "!", "!", "!", "take", "no", "prisoner", ".", "these", "bastard", "need", "to", "be", "exterminate", "on", "sight"]
(c7-3 / multi-sentence
      :snt1 (c7-10 / news
                   :mod (c7-8 / great))
      :snt2 (c7-2 / take-01
                  :ARG0 (c7-0 / you)
                  :ARG1 (c7-6 / person
                              :ARG1-of (c7-7 / imprison-01))
                  :polarity -
                  :mode imperative)
      :snt3 (c7-5 / need-01
                  :ARG0 (c7-11 / bastard
                               :mod (c7-4 / this))
                  :ARG1 (c7-1 / exterminate-01
                              :ARG1 c7-11
                              :location (c7-9 / sight-01))))

# ::snt sweet they are finally with Allah
# ::tokens ["sweet", "they", "are", "finally", "with", "Allah"]
# ::lemmas ["sweet", "they", "be", "finally", "with", "Allah"]
(c8-3 / sweet-02
      :ARG1 (c8-5 / be-with-10
                  :ARG0 (c8-0 / they)
                  :ARG1 (c8-2 / person
                              :name (c8-4 / name
                                          :op1 "Allah"))
                  :time (c8-1 / final)))

# ::snt bad. They should have been captured alive for a proper trial.
# ::tokens ["bad", ".", "They", "should", "have", "been", "captured", "alive", "for", "a", "proper", "trial", "."]
# ::lemmas ["bad", ".", "they", "should", "have", "be", "capture", "alive", "for", "a", "proper", "trial", "."]
(c9-1 / multi-sentence
      :snt1 (c9-7 / bad-07)
      :snt2 (c9-6 / recommend-01
                  :ARG1 (c9-3 / capture-01
                              :ARG1 (c9-0 / they)
                              :manner (c9-5 / live-01
                                            :ARG0 c9-0)
                              :purpose (c9-2 / try-02
                                             :ARG1 c9-0
                                             :mod (c9-4 / proper)))))

# ::snt Yes, but think it was too dangerous.
# ::tokens ["Yes", ",", "but", "think", "it", "was", "too", "dangerous", "."]
# ::lemmas ["yes", ",", "but", "think", "it", "be", "too", "dangerous", "."]
(c10-5 / contrast-01
       :ARG2 (c10-1 / think-01
                    :ARG1 (c10-0 / have-degree-91
                                 :ARG1 (c10-4 / it)
                                 :ARG2 (c10-3 / dangerous)
                                 :ARG3 (c10-2 / too))))
