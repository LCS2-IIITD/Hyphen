# ::snt . I can also confirm he will not be playing in Rankin Inlet, NU either
# ::tokens [".", "I", "can", "also", "confirm", "he", "will", "not", "be", "playing", "in", "Rankin", "Inlet", ",", "NU", "either"]
# ::lemmas [".", "i", "can", "also", "confirm", "he", "will", "not", "be", "play", "in", "Rankin", "Inlet", ",", "NU", "either"]
(c1-5 / possible-01
      :ARG1 (c1-3 / confirm-01
                  :ARG0 (c1-4 / i)
                  :ARG1 (c1-2 / play-01
                              :ARG0 (c1-0 / he)
                              :location (c1-6 / local-region
                                              :name (c1-8 / name
                                                          :op1 "Rinein"
                                                          :op2 "Inlet")
                                              :mod (c1-1 / either))
                              :polarity -)
                  :mod (c1-7 / also)))

# ::snt athenaph what tease!!! RT : Prince not playing Massey Hall tonight, promoter says
# ::tokens ["athenaph", "what", "tease", "!", "!", "!", "RT", ":", "Prince", "not", "playing", "Massey", "Hall", "tonight", ",", "promoter", "says"]
# ::lemmas ["athenaph", "what", "tease", "!", "!", "!", "RT", ":", "Prince", "not", "play", "Massey", "Hall", "tonight", ",", "promoter", "say"]
(c2-2 / multi-sentence
      :snt1 (c2-3 / tease-01
                  :mod (c2-1 / thing))
      :snt2 (c2-14 / say-01
                   :ARG0 (c2-7 / person
                               :ARG0-of (c2-5 / promote-02))
                   :ARG1 (c2-0 / play-01
                               :ARG0 (c2-11 / person
                                            :name (c2-15 / name
                                                         :op1 "Prince"))
                               :ARG1 (c2-16 / building
                                            :name (c2-6 / name
                                                        :op1 "Massey"
                                                        :op2 "Hall"))
                               :time (c2-8 / date-entity
                                           :dayperiod (c2-12 / night)
                                           :mod (c2-4 / today))
                               :polarity -)
                   :ARG1-of (c2-9 / publication-91
                                  :ARG4 (c2-13 / publication
                                               :name (c2-10 / name
                                                            :op1 "RT")))))

# ::snt Of course not. I can't make it tonight. But Saturday.....
# ::tokens ["Of", "course", "not", ".", "I", "ca", "n't", "make", "it", "tonight", ".", "But", "Saturday", "....."]
# ::lemmas ["of", "course", "not", ".", "i", "can", "not", "make", "it", "tonight", ".", "but", "Saturday", "....."]
(c3-2 / multi-sentence
      :snt1 (c3-7 / of-course
                  :polarity -)
      :snt2 (c3-5 / possible-01
                  :ARG1 (c3-8 / make-it-14
                              :ARG0 (c3-4 / i)
                              :ARG1 (c3-3 / date-entity
                                          :dayperiod (c3-10 / night)
                                          :mod (c3-1 / today)))
                  :polarity -)
      :snt3 (c3-6 / contrast-01
                  :ARG2 (c3-0 / date-entity
                              :weekday (c3-9 / saturday))))

# ::snt lol.
# ::tokens ["lol", "."]
# ::lemmas ["lol", "."]
(c4-0 / laugh-01
      :manner (c4-1 / loud)
      :mode expressive)

# ::snt good
# ::tokens ["good"]
# ::lemmas ["good"]
(c5-0 / good-02)

# ::snt WTW?! : Prince not playing Massey Hall tonight, promoter says
# ::tokens ["WTW", "?", "!", ":", "Prince", "not", "playing", "Massey", "Hall", "tonight", ",", "promoter", "says"]
# ::lemmas ["WTW", "?", "!", ":", "Prince", "not", "play", "Massey", "Hall", "tonight", ",", "promoter", "say"]
(c6-9 / say-01
      :ARG0 (c6-5 / person
                  :ARG0-of (c6-3 / promote-02))
      :ARG1 (c6-0 / play-01
                  :ARG0 (c6-7 / person
                              :name (c6-10 / name
                                           :op1 "Prince"))
                  :ARG1 (c6-11 / building
                               :name (c6-4 / name
                                           :op1 "Massey"
                                           :op2 "Hall"))
                  :time (c6-6 / date-entity
                              :dayperiod (c6-8 / night)
                              :mod (c6-2 / today))
                  :polarity -)
      :mod (c6-1 / wow
                 :mode expressive))

# ::snt : Prince not playing Massey Hall tonight, promoter says good. I was feeling bitter.
# ::tokens [":", "Prince", "not", "playing", "Massey", "Hall", "tonight", ",", "promoter", "says", "good", ".", "I", "was", "feeling", "bitter", "."]
# ::lemmas [":", "Prince", "not", "play", "Massey", "Hall", "tonight", ",", "promoter", "say", "good", ".", "i", "be", "feel", "bitter", "."]
(c7-2 / multi-sentence
      :snt1 (c7-12 / say-01
                   :ARG0 (c7-6 / person
                               :ARG0-of (c7-4 / promote-02))
                   :ARG1 (c7-0 / play-11
                               :ARG0 c7-6
                               :name (c7-13 / name
                                            :op1 "Prince")
                               :polarity -)
                   :ARG1 (c7-14 / building
                                :name (c7-5 / name
                                            :op1 "Massey"
                                            :op2 "Hall"))
                   :time (c7-7 / date-entity
                               :dayperiod (c7-9 / night)
                               :mod (c7-1 / today)))
      :ARG1-of (c7-10 / good-02)
      :snt2 (c7-3 / feel-01
                  :ARG0 (c7-8 / i)
                  :ARG1 (c7-11 / bitter)))

# ::snt And, ... ?When asked Live Nation why no one made this clarification or hours earlier?
# ::tokens ["And", ",", "...", "?", "When", "asked", "Live", "Nation", "why", "no", "one", "made", "this", "clarification", "or", "hours", "earlier", "?"]
# ::lemmas ["and", ",", "...", "?", "when", "ask", "Live", "Nation", "why", "no", "one", "make", "this", "clarification", "or", "hours", "earlier", "?"]
(c8-7 / and
      :op2 (c8-10 / ask-01
                  :ARG1 (c8-1 / thing
                              :ARG0-of (c8-6 / cause-01
                                             :ARG1 (c8-11 / clarify-10
                                                          :ARG0 (c8-12 / no-one)
                                                          :ARG1 (c8-2 / this)
                                                          :time (c8-9 / or
                                                                      :op1 (c8-13 / before
                                                                                  :op1 c8-10
                                                                                  :ARG1 c8-11
                                                                                  :ARG2 (c8-8 / broadcast-program
                                                                                              :name (c8-5 / name
                                                                                                          :op1 "Live"
                                                                                                          :op2 "Nation")))
                                                                      :quant (c8-3 / multiple
                                                                                   :op1 (c8-4 / temporal-quantity
                                                                                              :unit (c8-0 / hour)
                                                                                              :quant 1)))))))
      :ARG2 c8-8)

# ::snt O(+&gt;
# ::tokens ["O(+&gt", ";"]
# ::lemmas ["O(+&gt", ";"]
(c9-0 / string-entity
      :value "O(+&gt")
