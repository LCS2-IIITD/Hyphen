# ::snt Sickening ": confirmed dead, Francois Hollande to visit scene of attack
# ::tokens ["Sickening", "\"", ":", "confirmed", "dead", ",", "Francois", "Hollande", "to", "visit", "scene", "of", "attack"]
# ::lemmas ["sicken", "\"", ":", "confirm", "dead", ",", "Francois", "Hollande", "to", "visit", "scene", "of", "attack"]
(c1-5 / and
      :op1 (c1-7 / sicken-01)
      :op2 (c1-3 / confirm-01
                 :ARG1 (c1-1 / die-01
                             :ARG1 (c1-2 / person
                                         :name (c1-8 / name
                                                     :op1 "Francois"
                                                     :op2 "Holland"))))
      :op3 (c1-4 / visit-01
                 :ARG0 c1-2
                 :ARG1 (c1-0 / scene
                             :location-of (c1-6 / attack-01))))

# ::snt :Hi this is the photo of our journalist please credit him at least.
# ::tokens [":", "Hi", "this", "is", "the", "photo", "of", "our", "journalist", "please", "credit", "him", "at", "least", "."]
# ::lemmas [":", "hi", "this", "be", "the", "photo", "of", "our", "journalist", "please", "credit", "he", "at", "least", "."]
(c2-4 / multi-sentence
      :snt1 (c2-2 / hi)
      :snt2 (c2-9 / and
                  :op1 (c2-7 / photo
                             :domain (c2-3 / this)
                             :poss (c2-5 / journalist
                                         :poss (c2-1 / we)))
                  :op2 (c2-8 / credit-01
                             :ARG0 (c2-0 / you)
                             :ARG1 (c2-6 / he)
                             :mod (c2-10 / at-least)
                             :mode imperative
                             :polite +)))

# ::snt indeed, this is called "courtesy" (thing often unknown by british papers)
# ::tokens ["indeed", ",", "this", "is", "called", "\"", "courtesy", "\"", "(", "thing", "often", "unknown", "by", "british", "papers", ")"]
# ::lemmas ["indeed", ",", "this", "be", "call", "\"", "courtesy", "\"", "(", "thing", "often", "unknown", "by", "british", "paper", ")"]
(c3-4 / call-01
      :ARG1 (c3-3 / this)
      :ARG2 (c3-9 / courtesy)
      :ARG1-of (c3-2 / mean-01
                     :ARG2 (c3-1 / thing
                                 :ARG1-of (c3-0 / know-01
                                                :ARG0 (c3-5 / paper
                                                            :mod (c3-6 / country
                                                                       :name (c3-10 / name
                                                                                    :op1 "Britain")))
                                                :frequency (c3-8 / often)
                                                :polarity -)))
      :mod (c3-7 / indeed))

# ::snt Je disais quoi ? Smh.. RT ": Hi this is the photo of our journalist please credit him at least."
# ::tokens ["Je", "disais", "quoi", "?", "Smh", "..", "RT", "\"", ":", "Hi", "this", "is", "the", "photo", "of", "our", "journalist", "please", "credit", "him", "at", "least", ".", "\""]
# ::lemmas ["Je", "disais", "quoi", "?", "Smh", "..", "RT", "\"", ":", "hi", "this", "be", "the", "photo", "of", "our", "journalist", "please", "credit", "he", "at", "least", ".", "\""]
(c4-3 / multi-sentence
      :snt1 (c4-13 / et-cetera
                   :polarity (c4-8 / amr-unknown)
                   :mod (c4-7 / voila))
      :snt2 (c4-11 / say-01
                   :ARG0 (c4-5 / publication
                               :name (c4-12 / name
                                            :op1 "RT"))
                   :ARG1 c4-11
                   :ARG0 c4-5
                   :ARG1 (c4-9 / and
                               :op1 (c4-2 / hi)
                               :op2 (c4-6 / credit-01
                                          :ARG0 (c4-0 / you)
                                          :ARG1 (c4-4 / journalist
                                                      :poss (c4-1 / we))
                                          :mod (c4-10 / at-least)
                                          :mode imperative
                                          :polite +)))
      :ARG2 c4-4)

# ::snt : Hi this is the photo of our journalist please credit him at least. lol business .. Encore et encore
# ::tokens [":", "Hi", "this", "is", "the", "photo", "of", "our", "journalist", "please", "credit", "him", "at", "least", ".", "lol", "business", "..", "Encore", "et", "encore"]
# ::lemmas [":", "hi", "this", "be", "the", "photo", "of", "our", "journalist", "please", "credit", "he", "at", "least", ".", "lol", "business", "..", "encore", "et", "encore"]
(c5-4 / multi-sentence
      :snt1 (c5-12 / say-01
                   :ARG1 (c5-8 / and
                               :op1 (c5-2 / hi)
                               :op2 (c5-6 / photo
                                          :domain (c5-5 / journalist
                                                        :poss (c5-1 / we))))
                   :snt2 (c5-7 / credit-01
                               :ARG0 (c5-0 / you)
                               :ARG1 c5-5
                               :mod (c5-10 / at-least)
                               :mode imperative
                               :polite +))
      :snt3 (c5-11 / and
                   :op1 (c5-14 / business)
                   :op2 (c5-9 / organization
                              :name (c5-13 / name
                                           :op1 "Encore"))
                   :op3 (c5-3 / encore-01)))

# ::snt Photo shows attackers are at least trained &amp; possibly experienced with combat weapons. More tracking needed of overseas fighters.
# ::tokens ["Photo", "shows", "attackers", "are", "at", "least", "trained", "&", "amp", ";", "possibly", "experienced", "with", "combat", "weapons", ".", "More", "tracking", "needed", "of", "overseas", "fighters", "."]
# ::lemmas ["photo", "show", "attacker", "be", "at", "least", "train", "&", "amp", ";", "possibly", "experience", "with", "combat", "weapon", ".", "more", "tracking", "need", "of", "overseas", "fighter", "."]
(c6-3 / multi-sentence
      :snt1 (c6-15 / show-01
                   :ARG0 (c6-7 / photo)
                   :ARG1 (c6-10 / and
                                :op1 (c6-2 / train-01
                                           :ARG2 (c6-6 / person
                                                       :ARG0-of (c6-13 / attack-01))
                                           :mod (c6-14 / at-least))
                                :op2 (c6-17 / experience-01
                                            :ARG0 c6-6
                                            :ARG1 (c6-0 / weapon
                                                        :instrument-of (c6-8 / combat-01))
                                            :ARG1-of (c6-1 / possible-01))))
      :snt2 (c6-16 / need-01
                   :ARG0 (c6-4 / track-01
                               :ARG1 (c6-11 / person
                                            :ARG0-of (c6-5 / fight-01)
                                            :location (c6-12 / overseas))
                               :mod (c6-9 / more))))

# ::snt . Won't happen. Dover checks are focused mainly on de-worming treatments for dogs.
# ::tokens [".", "Wo", "n't", "happen", ".", "Dover", "checks", "are", "focused", "mainly", "on", "de", "-", "worming", "treatments", "for", "dogs", "."]
# ::lemmas [".", "will", "not", "happen", ".", "dover", "check", "be", "focus", "mainly", "on", "de", "-", "worming", "treatment", "for", "dog", "."]
(c7-2 / multi-sentence
      :snt1 (c7-9 / event
                  :polarity -)
      :snt2 (c7-3 / focus-01
                  :ARG1 (c7-5 / check
                              :location (c7-6 / facility
                                              :name (c7-8 / name
                                                          :op1 "Dover")))
                  :ARG2 (c7-1 / treat-03
                              :ARG1 (c7-4 / dog)
                              :ARG2 (c7-0 / deworm-00))
                  :mod (c7-7 / main)))

# ::snt . Well, are noting that whoever fired those bullets knew how to fire the gun properly. PN office dead?
# ::tokens [".", "Well", ",", "are", "noting", "that", "whoever", "fired", "those", "bullets", "knew", "how", "to", "fire", "the", "gun", "properly", ".", "PN", "office", "dead", "?"]
# ::lemmas [".", "well", ",", "be", "note", "that", "whoever", "fire", "those", "bullet", "know", "how", "to", "fire", "the", "gun", "properly", ".", "PN", "office", "dead", "?"]
(c8-4 / multi-sentence
      :snt1 (c8-14 / note-01
                   :ARG1 (c8-0 / know-03
                               :ARG0 (c8-9 / person
                                           :ARG0-of (c8-5 / fire-01
                                                          :ARG1 (c8-15 / bullet
                                                                       :mod (c8-3 / that))))
                               :ARG1 (c8-13 / fire-01
                                            :ARG0 c8-9
                                            :ARG1 (c8-11 / gun)
                                            :manner (c8-7 / proper)))
                   :mod (c8-1 / well))
      :snt2 (c8-8 / die-01
                  :ARG1 (c8-6 / office
                              :poss (c8-2 / political-party
                                          :name (c8-10 / name
                                                       :op1 "PN")))
                  :polarity (c8-12 / amr-unknown)))

# ::snt Wild West Politics: Western Europe is suffering from its internal contradictions; welcome to the tribal politics of the future.
# ::tokens ["Wild", "West", "Politics", ":", "Western", "Europe", "is", "suffering", "from", "its", "internal", "contradictions", ";", "welcome", "to", "the", "tribal", "politics", "of", "the", "future", "."]
# ::lemmas ["Wild", "West", "Politics", ":", "Western", "Europe", "be", "suffer", "from", "its", "internal", "contradiction", ";", "welcome", "to", "the", "tribal", "politic", "of", "the", "future", "."]
(c9-3 / multi-sentence
      :snt1 (c9-11 / suffer-01
                   :ARG0 (c9-1 / world-region
                               :name (c9-12 / name
                                            :op1 "West"))
                   :ARG1 (c9-7 / contradiction
                               :ARG1-of (c9-8 / internal-02)
                               :poss c9-1))
      :snt2 (c9-10 / welcome-01
                   :ARG2 (c9-9 / politics
                               :mod (c9-2 / tribe)
                               :time (c9-4 / future)))
      :snt3 (c9-5 / politics
                  :mod (c9-0 / world-region
                             :name (c9-6 / name
                                         :op1 "West"))))

# ::snt lol nd u lot wanted to go paris to get our headgears ripped off
# ::tokens ["lol", "nd", "u", "lot", "wanted", "to", "go", "paris", "to", "get", "our", "headgears", "ripped", "off"]
# ::lemmas ["lol", "nd", "u", "lot", "want", "to", "go", "paris", "to", "get", "our", "headgear", "rip", "off"]
(c10-6 / and
       :op1 (c10-7 / laugh-01
                   :ARG0 (c10-4 / i)
                   :manner (c10-12 / loud)
                   :mode expressive)
       :op2 (c10-1 / want-01
                   :ARG0 (c10-0 / you)
                   :ARG1 (c10-8 / go-01
                                :ARG1 c10-0
                                :ARG4 (c10-5 / paris)
                                :purpose (c10-2 / get-04
                                                :ARG0 c10-0
                                                :ARG1 (c10-9 / rip-off-04
                                                             :ARG1 (c10-3 / headgang
                                                                          :part-of (c10-10 / we)))))
                   :quant (c10-11 / lot)))

# ::snt nah not even on that man, habibi marseille
# ::tokens ["nah", "not", "even", "on", "that", "man", ",", "habibi", "marseille"]
# ::lemmas ["nah", "not", "even", "on", "that", "man", ",", "habibi", "marseille"]
(c11-5 / say-01
       :ARG0 (c11-2 / i)
       :ARG1 (c11-4 / on-ones-mind-07
                    :ARG1 (c11-1 / man
                                 :mod (c11-0 / that))
                    :mod (c11-7 / even)
                    :polarity -)
       :ARG2 (c11-3 / person
                    :name (c11-6 / name
                                 :op1 "Habibi"
                                 :op2 "Marseille")))
