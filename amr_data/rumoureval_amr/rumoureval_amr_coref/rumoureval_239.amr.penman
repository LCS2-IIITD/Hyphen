# ::snt he just admitted on national TV that Michael Brown was racially profiled
# ::tokens ["he", "just", "admitted", "on", "national", "TV", "that", "Michael", "Brown", "was", "racially", "profiled"]
# ::lemmas ["he", "just", "admit", "on", "national", "tv", "that", "Michael", "Brown", "be", "racially", "profile"]
(c1-6 / admit-01
      :ARG0 (c1-0 / he)
      :ARG1 (c1-5 / profile-01
                  :ARG1 (c1-3 / person
                              :name (c1-8 / name
                                          :op1 "Michael"
                                          :op2 "Brown"))
                  :manner (c1-7 / race))
      :time (c1-2 / just)
      :medium (c1-1 / television
                    :mod (c1-4 / nation)))

# ::snt he was racially profiled because he fit the description of a strong arm robber?
# ::tokens ["he", "was", "racially", "profiled", "because", "he", "fit", "the", "description", "of", "a", "strong", "arm", "robber", "?"]
# ::lemmas ["he", "be", "racially", "profile", "because", "he", "fit", "the", "description", "of", "a", "strong", "arm", "robber", "?"]
(c2-6 / profil-01
      :polarity (c2-7 / amr-unknown)
      :ARG1 (c2-1 / he)
      :manner (c2-8 / race)
      :ARG1-of (c2-5 / cause-01
                     :ARG0 (c2-2 / fit-06
                                 :ARG1 c2-1
                                 :ARG2 (c2-4 / describe-01
                                             :ARG1 c2-1
                                             :ARG2 (c2-3 / person
                                                         :ARG0-of (c2-0 / rob-01
                                                                        :manner (c2-9 / arm
                                                                                      :ARG1-of (c2-10 / strong-02))))))))

# ::snt he knew what he was doing. Smh!
# ::tokens ["he", "knew", "what", "he", "was", "doing", ".", "Smh", "!"]
# ::lemmas ["he", "know", "what", "he", "be", "do", ".", "Smh", "!"]
(c3-3 / multi-sentence
      :snt1 (c3-0 / know-01
                  :ARG0 (c3-1 / he)
                  :ARG1 (c3-2 / thing
                              :ARG1-of (c3-5 / do-02
                                             :ARG0 (c3-4 / he))))
      :snt2 (c3-6 / smh
                  :mode expressive))

# ::snt CRAZY
# ::tokens ["CRAZY"]
# ::lemmas ["crazy"]
(c4-0 / routine)

# ::snt I thought Mike Brown was "struggling" for the cops gun? Total lies by police chief
# ::tokens ["I", "thought", "Mike", "Brown", "was", "\"", "struggling", "\"", "for", "the", "cops", "gun", "?", "Total", "lies", "by", "police", "chief"]
# ::lemmas ["i", "think", "Mike", "Brown", "be", "\"", "struggle", "\"", "for", "the", "cop", "gun", "?", "total", "lie", "by", "police", "chief"]
(c5-3 / multi-sentence
      :snt1 (c5-2 / think-01
                  :ARG0 (c5-8 / i)
                  :ARG1 (c5-13 / struggle-02
                               :ARG0 (c5-7 / person
                                           :name (c5-14 / name
                                                        :op1 "Mike"
                                                        :op2 "Brown"))
                               :ARG2 (c5-10 / gun
                                            :poss (c5-9 / cop))))
      :snt2 (c5-4 / thing
                  :ARG1-of (c5-11 / lie-08
                                  :ARG0 (c5-6 / person
                                              :ARG0-of (c5-1 / have-org-role-91
                                                             :ARG1 (c5-0 / police
                                                                         :ARG2 (c5-12 / chief)))
                                              :mod (c5-5 / total)))))

# ::snt key word: create...if that were true, that could've been released Sunday...smh
# ::tokens ["key", "word", ":", "create", "...", "if", "that", "were", "true", ",", "that", "could", "'ve", "been", "released", "Sunday", "...", "smh"]
# ::lemmas ["key", "word", ":", "create", "...", "if", "that", "be", "true", ",", "that", "could", "'ve", "be", "release", "Sunday", "...", "smh"]
(c6-1 / word
      :ARG1-of (c6-0 / key-02)
      :domain (c6-7 / create-01)
      :ARG1-of (c6-4 / mean-01
                     :ARG2 (c6-6 / possible-01
                                 :ARG1 (c6-8 / release-01
                                             :ARG1 c6-7
                                             :time (c6-5 / date-entity
                                                         :weekday (c6-9 / sunday)))
                                 :condition (c6-3 / true-01
                                                  :ARG1 c6-7)))
      :mod (c6-2 / smh
                 :mode expressive))

# ::snt Yeah...I caught that too. "VERY SLICK" Seeing the framing of the lie starting now!
# ::tokens ["Yeah", "...", "I", "caught", "that", "too", ".", "\"", "VERY", "SLICK", "\"", "Seeing", "the", "framing", "of", "the", "lie", "starting", "now", "!"]
# ::lemmas ["yeah", "...", "i", "catch", "that", "too", ".", "\"", "very", "slick", "\"", "see", "the", "framing", "of", "the", "lie", "start", "now", "!"]
(c7-4 / multi-sentence
      :snt1 (c7-8 / catch-02
                  :ARG0 (c7-7 / i)
                  :ARG1 (c7-5 / that)
                  :mod (c7-3 / too))
      :snt2 (c7-10 / slap-01
                   :degree (c7-1 / hardly))
      :snt3 (c7-2 / see-01
                  :ARG1 (c7-6 / frame-06
                              :ARG1 (c7-9 / lie-08))
                  :ARG1-of (c7-0 / start-01
                                 :time (c7-11 / now))))

# ::snt We need b careful of jumping conclusions. Waiting to see this videotape.
# ::tokens ["We", "need", "b", "careful", "of", "jumping", "conclusions", ".", "Waiting", "to", "see", "this", "videotape", "."]
# ::lemmas ["we", "need", "b", "careful", "of", "jump", "conclusion", ".", "wait", "to", "see", "this", "videotape", "."]
(c8-2 / multi-sentence
      :snt1 (c8-10 / need-01
                   :ARG0 (c8-0 / we)
                   :ARG1 (c8-4 / care-04
                               :ARG0 c8-0
                               :ARG1 (c8-9 / conclude-01
                                           :ARG0 c8-0
                                           :ARG1-of (c8-3 / jump-03
                                                          :ARG0 c8-0))))
      :snt2 (c8-8 / wait-01
                  :ARG1 (c8-5 / i)
                  :ARG2 (c8-6 / see-01
                              :ARG0 c8-5
                              :ARG1 (c8-7 / videotape
                                          :mod (c8-1 / this)))))

# ::snt Chief should go to Hollywood &amp; write suspense thrillers!
# ::tokens ["Chief", "should", "go", "to", "Hollywood", "&", "amp", ";", "write", "suspense", "thrillers", "!"]
# ::lemmas ["chief", "should", "go", "to", "Hollywood", "&", "amp", ";", "write", "suspense", "thriller", "!"]
(c9-3 / multi-sentence
      :snt1 (c9-9 / recommend-01
                  :ARG1 (c9-8 / go-01
                              :ARG1 (c9-5 / chief)
                              :ARG4 (c9-7 / and
                                          :op1 (c9-10 / market-sector
                                                      :name (c9-12 / name
                                                                   :op1 "Hollywood"))
                                          :op2 (c9-11 / company
                                                      :name (c9-4 / name
                                                                  :op1 "&amp")))))
      :snt2 (c9-1 / write-01
                  :ARG0 (c9-0 / you)
                  :ARG1 (c9-2 / thriller
                              :mod (c9-6 / suspense))
                  :mode imperative))

# ::snt VERY SLICK PASTOR!
# ::tokens ["VERY", "SLICK", "PASTOR", "!"]
# ::lemmas ["very", "slick", "PASTOR", "!"]
(c10-2 / champion
       :ARG1-of (c10-0 / slick-03)
       :mod (c10-1 / every))

# ::snt Come on now.......
# ::tokens ["Come", "on", "now", "......."]
# ::lemmas ["come", "on", "now", "......."]
(c11-2 / come-on-25
       :ARG1 (c11-0 / you)
       :time (c11-1 / now)
       :mode imperative)

# ::snt of course because they want to try and make black people look as bad as possible and worth them killing.
# ::tokens ["of", "course", "because", "they", "want", "to", "try", "and", "make", "black", "people", "look", "as", "bad", "as", "possible", "and", "worth", "them", "killing", "."]
# ::lemmas ["of", "course", "because", "they", "want", "to", "try", "and", "make", "black", "people", "look", "as", "bad", "as", "possible", "and", "worth", "they", "kill", "."]
(c12-7 / cause-01
       :ARG0 (c12-1 / want-01
                    :ARG0 (c12-4 / they)
                    :ARG1 (c12-9 / and
                                 :op1 (c12-3 / try-01
                                             :ARG0 c12-4
                                             :ARG1 (c12-5 / make-02
                                                          :ARG0 c12-4
                                                          :ARG1 (c12-10 / look-02
                                                                        :ARG0 (c12-8 / person
                                                                                     :ARG1-of (c12-15 / black-05))
                                                                        :ARG1 (c12-11 / bad-07
                                                                                      :ARG2-of (c12-2 / have-degree-91
                                                                                                      :ARG1 c12-8
                                                                                                      :ARG3 (c12-14 / equal)
                                                                                                      :ARG4 (c12-6 / possible-01
                                                                                                                   :ARG1 c12-10)))))
                                             :op2 (c12-13 / worth-02
                                                          :ARG1 c12-8
                                                          :ARG2 (c12-0 / kill-01
                                                                       :ARG1 c12-8))))
                    :mod (c12-12 / of-course)))

# ::snt So they shot him times because he was a "suspect"? Still doesn't make any sense.
# ::tokens ["So", "they", "shot", "him", "times", "because", "he", "was", "a", "\"", "suspect", "\"", "?", "Still", "does", "n't", "make", "any", "sense", "."]
# ::lemmas ["so", "they", "shoot", "he", "time", "because", "he", "be", "a", "\"", "suspect", "\"", "?", "still", "do", "not", "make", "any", "sense", "."]
(c13-4 / multi-sentence
       :snt1 (c13-9 / shoot-02
                    :ARG0 (c13-5 / they)
                    :ARG1 (c13-1 / he)
                    :frequency (c13-3 / time)
                    :ARG1-of (c13-6 / cause-01
                                    :ARG0 (c13-7 / police
                                                 :domain c13-1)))
       :snt2 (c13-2 / sense-02
                    :ARG1 (c13-8 / it)
                    :mod (c13-0 / still)
                    :polarity -))
