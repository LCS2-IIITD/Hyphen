# ::snt THIS IS MY FUCKING QUESTION!!!
# ::tokens ["THIS", "IS", "MY", "FUCKING", "QUESTION", "!", "!", "!"]
# ::lemmas ["this", "be", "my", "FUCKING", "QUESTION", "!", "!", "!"]
(c1-1 / question-01
      :ARG0 (c1-2 / i)
      :ARG1 (c1-3 / this)
      :mod (c1-0 / fucking
                 :mode expressive)
      :mode expressive)

# ::snt I could not agree more, it just plain sounds preposterous. And why did he NOT get OUT of the car. It has to be a huge LIE.
# ::tokens ["I", "could", "not", "agree", "more", ",", "it", "just", "plain", "sounds", "preposterous", ".", "And", "why", "did", "he", "NOT", "get", "OUT", "of", "the", "car", ".", "It", "has", "to", "be", "a", "huge", "LIE", "."]
# ::lemmas ["i", "could", "not", "agree", "more", ",", "it", "just", "plain", "sound", "preposterous", ".", "and", "why", "do", "he", "not", "get", "out", "of", "the", "car", ".", "it", "have", "to", "be", "a", "huge", "lie", "."]
(c2-19 / multi-sentence
       :snt1 (c2-14 / possible-01
                    :ARG1 (c2-15 / agree-01
                                 :ARG0 (c2-13 / i)
                                 :ARG1-of (c2-0 / have-quant-91
                                                :ARG3 (c2-22 / more)))
                    :ARG1-of (c2-9 / cause-01
                                   :ARG0 (c2-10 / sound-01
                                                :ARG1 (c2-5 / it)
                                                :ARG2 (c2-20 / preposterous)
                                                :mod (c2-12 / plain
                                                            :mod (c2-7 / just))))
                    :polarity -)
       :snt2 (c2-3 / and
                   :op2 (c2-16 / get-05
                               :ARG1 (c2-8 / he)
                               :ARG2 (c2-17 / out-06
                                            :ARG1 c2-8
                                            :ARG2 (c2-4 / car))
                               :ARG1-of (c2-21 / cause-01
                                               :ARG0 (c2-18 / amr-unknown))
                               :polarity -)
                   :snt3 (c2-1 / infer-01
                               :ARG1 (c2-6 / thing
                                           :ARG1-of (c2-2 / lie-08)
                                           :mod (c2-11 / huge)))))

# ::snt More like why was trying to pull into police car thru the window?
# ::tokens ["More", "like", "why", "was", "trying", "to", "pull", "into", "police", "car", "thru", "the", "window", "?"]
# ::lemmas ["more", "like", "why", "be", "try", "to", "pull", "into", "police", "car", "thru", "the", "window", "?"]
(c3-8 / resemble-01
      :ARG2 (c3-1 / try-01
                  :ARG1 (c3-6 / pull-01
                              :ARG1 (c3-5 / car
                                          :mod (c3-4 / police))
                              :ARG2 (c3-2 / through
                                          :op1 (c3-0 / window)))
                  :ARG1-of (c3-9 / cause-01
                                 :ARG0 (c3-7 / amr-unknown)))
      :mod (c3-3 / more))

# ::snt . - Barney Fife would have tried to pull through a window too. Shades of Ernest T. Bass
# ::tokens [".", "-", "Barney", "Fife", "would", "have", "tried", "to", "pull", "through", "a", "window", "too", ".", "Shades", "of", "Ernest", "T.", "Bass"]
# ::lemmas [".", "-", "Barney", "Fife", "would", "have", "try", "to", "pull", "through", "a", "window", "too", ".", "shade", "of", "Ernest", "T.", "Bass"]
(c4-3 / multi-sentence
      :snt1 (c4-2 / try-01
                  :ARG0 (c4-7 / person
                              :name (c4-9 / name
                                          :op1 "Barney"
                                          :op2 "Fife"))
                  :ARG1 (c4-5 / pull-01
                              :ARG0 c4-7
                              :ARG2 (c4-0 / window))
                  :mod (c4-4 / too))
      :snt2 (c4-8 / Shades
                  :topic (c4-1 / person
                               :name (c4-6 / name
                                           :op1 "Ernest"
                                           :op2 "T."
                                           :op3 "Bass"))))

# ::snt Agreed, Dante!
# ::tokens ["Agreed", ",", "Dante", "!"]
# ::lemmas ["Agreed", ",", "Dante", "!"]
(c5-3 / say-01
      :ARG0 (c5-1 / i)
      :ARG1 (c5-2 / agree-01
                  :ARG0 c5-1)
      :ARG2 (c5-0 / person
                  :name (c5-4 / name
                              :op1 "Dante"))
      :mode expressive)

# ::snt . - The Barney Fife fear is real in , total excessive force is common practice. This was a murder!
# ::tokens [".", "-", "The", "Barney", "Fife", "fear", "is", "real", "in", ",", "total", "excessive", "force", "is", "common", "practice", ".", "This", "was", "a", "murder", "!"]
# ::lemmas [".", "-", "the", "Barney", "Fife", "fear", "be", "real", "in", ",", "total", "excessive", "force", "be", "common", "practice", ".", "this", "be", "a", "murder", "!"]
(c6-2 / multi-sentence
      :snt1 (c6-8 / real-04
                  :ARG1 (c6-3 / fear-01
                              :ARG0 (c6-6 / person
                                          :name (c6-11 / name
                                                       :op1 "Barney"
                                                       :op2 "Fife"))))
      :snt2 (c6-5 / practice-01
                  :ARG1 (c6-9 / force-04
                              :ARG1-of (c6-0 / excessive-02
                                             :degree (c6-1 / total)))
                  :mod (c6-7 / common))
      :snt3 (c6-10 / murder-01
                   :domain (c6-4 / this)))

# ::snt Agree those Cops in are filled with so they hide behind military equipment, outrageous tactics
# ::tokens ["Agree", "those", "Cops", "in", "are", "filled", "with", "so", "they", "hide", "behind", "military", "equipment", ",", "outrageous", "tactics"]
# ::lemmas ["agree", "those", "cop", "in", "be", "fill", "with", "so", "they", "hide", "behind", "military", "equipment", ",", "outrageous", "tactic"]
(c7-8 / agree-01
      :ARG0 (c7-6 / i)
      :ARG1 (c7-2 / fill-01
                  :ARG1 (c7-7 / cop
                              :mod (c7-1 / that))
                  :ARG2 (c7-3 / thing
                              :ARG2-of (c7-0 / hide-01
                                             :ARG1 c7-7
                                             :location (c7-12 / behind
                                                              :op1 (c7-10 / and
                                                                          :op1 (c7-11 / equipment
                                                                                      :mod (c7-4 / military))
                                                                          :op2 (c7-5 / tactic
                                                                                     :ARG0-of (c7-9 / outrageous-02))))))))

# ::snt Thank goodness the cops in aren't very bright. Makes it easier to sue their sorry asses!
# ::tokens ["Thank", "goodness", "the", "cops", "in", "are", "n't", "very", "bright", ".", "Makes", "it", "easier", "to", "sue", "their", "sorry", "asses", "!"]
# ::lemmas ["thank", "goodness", "the", "cop", "in", "be", "not", "very", "bright", ".", "make", "it", "easy", "to", "sue", "their", "sorry", "ass", "!"]
(c8-3 / multi-sentence
      :snt1 (c8-2 / thank-01
                  :ARG0 (c8-6 / i)
                  :ARG1 (c8-9 / goodness)
                  :ARG2 (c8-15 / bright-03
                               :ARG1 (c8-7 / cop
                                           :location (c8-0 / inside))
                               :degree (c8-8 / very)
                               :polarity -))
      :snt2 (c8-12 / make-02
                   :ARG1 (c8-14 / easy-05
                                :ARG1 (c8-13 / sue-02
                                             :ARG1 (c8-10 / ass
                                                          :part-of (c8-4 / they)
                                                          :ARG1-of (c8-1 / sorry-01)))
                                :ARG2-of (c8-5 / have-degree-91
                                               :ARG1 c8-13
                                               :ARG3 (c8-11 / more)))))

# ::snt It's not about smarts, it's that they never had to justify their actions "Rubber Stamped"
# ::tokens ["It", "'s", "not", "about", "smarts", ",", "it", "'s", "that", "they", "never", "had", "to", "justify", "their", "actions", "\"", "Rubber", "Stamped", "\""]
# ::lemmas ["it", "be", "not", "about", "smart", ",", "it", "be", "that", "they", "never", "have", "to", "justify", "their", "action", "\"", "Rubber", "Stamped", "\""]
(c9-6 / contrast-01
      :ARG1 (c9-10 / concern-02
                   :ARG0 (c9-5 / it)
                   :ARG1 (c9-11 / smart-06)
                   :polarity -)
      :ARG2 (c9-7 / concern-02
                  :ARG0 c9-5
                  :ARG1 (c9-4 / obligate-01
                              :ARG1 (c9-2 / they)
                              :ARG2 (c9-3 / justify-01
                                          :ARG0 c9-2
                                          :ARG1 (c9-9 / act-02
                                                      :ARG0 c9-2)
                                          :ARG2 (c9-0 / stamp-01
                                                      :ARG0 (c9-8 / person
                                                                  :name (c9-12 / name
                                                                               :op1 "Rubber"))
                                                      :ARG1 c9-2))
                              :time (c9-1 / ever)
                              :polarity -)))

# ::snt To think after all this time a lame-assed story about stolen cigars is going to fly is beyond stupid!
# ::tokens ["To", "think", "after", "all", "this", "time", "a", "lame", "-", "assed", "story", "about", "stolen", "cigars", "is", "going", "to", "fly", "is", "beyond", "stupid", "!"]
# ::lemmas ["to", "think", "after", "all", "this", "time", "a", "lame", "-", "asse", "story", "about", "steal", "cigar", "be", "go", "to", "fly", "be", "beyond", "stupid", "!"]
(c10-11 / stupid
        :degree (c10-12 / beyond)
        :domain (c10-2 / think-01
                       :ARG1 (c10-3 / fly-01
                                    :ARG1 (c10-1 / story
                                                 :topic (c10-6 / cigar
                                                               :ARG1-of (c10-0 / steal-01))
                                                 :mod (c10-7 / ass
                                                             :mod (c10-8 / lame)))
                                    :time (c10-9 / after
                                                 :op1 (c10-4 / time
                                                             :mod (c10-5 / this)
                                                             :mod (c10-10 / all))))))

# ::snt Affluent people and those in authority take it as an affront to be questioned, especially by lesser people
# ::tokens ["Affluent", "people", "and", "those", "in", "authority", "take", "it", "as", "an", "affront", "to", "be", "questioned", ",", "especially", "by", "lesser", "people"]
# ::lemmas ["affluent", "people", "and", "those", "in", "authority", "take", "it", "as", "an", "affront", "to", "be", "question", ",", "especially", "by", "less", "people"]
(c11-2 / take-04
       :ARG0 (c11-7 / and
                    :op1 (c11-4 / person
                                :mod (c11-9 / affluence))
                    :op2 (c11-3 / person
                                :mod (c11-10 / authority)))
       :ARG1 (c11-5 / it)
       :ARG2 (c11-6 / affront-01
                    :ARG0 (c11-11 / question-01
                                  :ARG0 (c11-0 / person
                                               :mod (c11-12 / especially)
                                               :ARG1-of (c11-1 / have-quant-91
                                                               :ARG3 (c11-8 / less)))
                                  :ARG1 c11-7)
                    :ARG1 c11-7))

# ::snt AND that attitude will be their downfall too. Bet on it.
# ::tokens ["AND", "that", "attitude", "will", "be", "their", "downfall", "too", ".", "Bet", "on", "it", "."]
# ::lemmas ["and", "that", "attitude", "will", "be", "their", "downfall", "too", ".", "bet", "on", "it", "."]
(c12-2 / multi-sentence
       :snt1 (c12-7 / and
                    :op2 (c12-5 / downfall
                                :poss (c12-1 / they)
                                :domain (c12-8 / attitude
                                               :mod (c12-3 / that))
                                :mod (c12-4 / too)))
       :snt2 (c12-9 / bet-01
                    :ARG0 (c12-0 / you)
                    :ARG2 (c12-6 / it)
                    :mode imperative))

# ::snt Apparently they don't think people can think for themselves. How WRONG they are. Will live to regret it
# ::tokens ["Apparently", "they", "do", "n't", "think", "people", "can", "think", "for", "themselves", ".", "How", "WRONG", "they", "are", ".", "Will", "live", "to", "regret", "it"]
# ::lemmas ["apparently", "they", "do", "not", "think", "people", "can", "think", "for", "themselves", ".", "how", "wrong", "they", "be", ".", "will", "live", "to", "regret", "it"]
(c13-3 / multi-sentence
       :snt1 (c13-5 / think-01
                    :ARG0 (c13-4 / they)
                    :ARG1 (c13-7 / possible-01
                                 :ARG1 (c13-2 / think-01
                                              :ARG0 (c13-6 / person)
                                              :mod (c13-14 / by-oneself)))
                    :manner (c13-9 / apparent)
                    :polarity -)
       :snt2 (c13-0 / wrong-04
                    :ARG1 (c13-13 / they)
                    :degree (c13-12 / so))
       :snt3 (c13-10 / live-02
                     :ARG0 (c13-8 / i)
                     :ARG1-of (c13-11 / regret-01
                                      :ARG0 c13-8
                                      :ARG1 (c13-1 / it))))

# ::snt Yes!
# ::tokens ["Yes", "!"]
# ::lemmas ["yes", "!"]
(c14-0 / yes)

# ::snt TYPICAL OF COWARDS AND BULLIES
# ::tokens ["TYPICAL", "OF", "COWARDS", "AND", "BULLIES"]
# ::lemmas ["TYPICAL", "OF", "COWARDS", "and", "bully"]
(c15-1 / technical
       :domain (c15-4 / and
                      :op1 (c15-3 / person
                                  :ARG0-of (c15-0 / have-org-role-91
                                                  :ARG2 (c15-2 / president)))
                      :op2 (c15-5 / bull)))

# ::snt And at least Barney Fife would have been HONEST from the first hour.
# ::tokens ["And", "at", "least", "Barney", "Fife", "would", "have", "been", "HONEST", "from", "the", "first", "hour", "."]
# ::lemmas ["and", "at", "least", "Barney", "Fife", "would", "have", "be", "honest", "from", "the", "first", "hour", "."]
(c16-4 / and
       :op2 (c16-0 / have-degree-91
                   :ARG1 (c16-3 / person
                                :name (c16-7 / name
                                             :op1 "Barney"
                                             :op2 "Fife"))
                   :ARG2 (c16-8 / bad-07
                                :ARG1 c16-3)
                   :ARG3 (c16-1 / most)
                   :time (c16-2 / hour
                                :ord (c16-5 / ordinal-entity
                                            :value 1))
                   :mod (c16-6 / at-least)))

# ::snt and his bullet would have been harmlessly in his pocket.
# ::tokens ["and", "his", "bullet", "would", "have", "been", "harmlessly", "in", "his", "pocket", "."]
# ::lemmas ["and", "his", "bullet", "would", "have", "be", "harmlessly", "in", "his", "pocket", "."]
(c17-3 / and
       :op2 (c17-5 / be-located-at-91
                   :ARG1 (c17-4 / bullet
                                :poss (c17-0 / he))
                   :ARG2 (c17-2 / pocket
                                :poss c17-0)
                   :ARG1-of (c17-1 / harm-01
                                   :polarity -)))

# ::snt YES!!
# ::tokens ["YES", "!", "!"]
# ::lemmas ["yes", "!", "!"]
(c18-0 / yes)

# ::snt That makes no sense at all.
# ::tokens ["That", "makes", "no", "sense", "at", "all", "."]
# ::lemmas ["that", "make", "no", "sense", "at", "all", "."]
(c19-1 / sense-02
       :ARG1 (c19-2 / that)
       :mod (c19-0 / at-all)
       :polarity -)

# ::snt A good question. I still think the cop was on drugs and hallucinating.
# ::tokens ["A", "good", "question", ".", "I", "still", "think", "the", "cop", "was", "on", "drugs", "and", "hallucinating", "."]
# ::lemmas ["a", "good", "question", ".", "i", "still", "think", "the", "cop", "be", "on", "drug", "and", "hallucinating", "."]
(c20-2 / multi-sentence
       :snt1 (c20-9 / question-01
                    :ARG1-of (c20-7 / good-02))
       :snt2 (c20-1 / think-01
                    :ARG0 (c20-4 / i)
                    :ARG1 (c20-8 / and
                                 :op1 (c20-3 / drug-01
                                             :ARG1 (c20-5 / cop))
                                 :op2 (c20-0 / hallucinate-01
                                             :ARG0 c20-5))
                    :mod (c20-6 / still)))

# ::snt are they calling Mike Brown a suspect? If so, why didn't he stop them and check them?
# ::tokens ["are", "they", "calling", "Mike", "Brown", "a", "suspect", "?", "If", "so", ",", "why", "did", "n't", "he", "stop", "them", "and", "check", "them", "?"]
# ::lemmas ["be", "they", "call", "Mike", "Brown", "a", "suspect", "?", "if", "so", ",", "why", "do", "not", "he", "stop", "they", "and", "check", "they", "?"]
(c21-3 / multi-sentence
       :snt1 (c21-8 / call-01
                    :ARG0 (c21-2 / they)
                    :ARG1 (c21-7 / person
                                 :name (c21-15 / name
                                               :op1 "Mike"
                                               :op2 "Brown"))
                    :ARG2 (c21-6 / person
                                 :ARG2-of (c21-14 / suspect-01))
                    :polarity (c21-10 / amr-unknown))
       :snt2 (c21-0 / have-condition-91
                    :ARG1 (c21-11 / cause-01
                                  :ARG0 (c21-12 / amr-unknown)
                                  :ARG1 (c21-13 / and
                                                :op1 (c21-1 / stop-01
                                                            :ARG0 (c21-5 / he)
                                                            :ARG1 (c21-4 / they)
                                                            :polarity -)
                                                :op2 (c21-9 / check-01
                                                            :ARG0 c21-5
                                                            :ARG1 c21-4
                                                            :polarity -)))
                    :ARG2 c21-8))

# ::snt I'm all types of confused.
# ::tokens ["I", "'m", "all", "types", "of", "confused", "."]
# ::lemmas ["i", "be", "all", "type", "of", "confused", "."]
(c22-2 / confuse-01
       :ARG1 (c22-0 / i)
       :mod (c22-3 / type
                   :mod (c22-1 / all)))

# ::snt shits not adding up. What convenient store was robbed? Who are the witnesses that called it in?
# ::tokens ["shits", "not", "adding", "up", ".", "What", "convenient", "store", "was", "robbed", "?", "Who", "are", "the", "witnesses", "that", "called", "it", "in", "?"]
# ::lemmas ["shit", "not", "add", "up", ".", "what", "convenient", "store", "be", "rob", "?", "who", "be", "the", "witness", "that", "call", "it", "in", "?"]
(c23-1 / multi-sentence
       :snt1 (c23-5 / add-up-04
                    :ARG1 (c23-2 / it)
                    :polarity -)
       :snt2 (c23-6 / rob-01
                    :ARG1 (c23-10 / store
                                  :mod (c23-3 / convenient)
                                  :mod (c23-8 / amr-unknown)))
       :snt3 (c23-4 / person
                    :ARG0-of (c23-0 / witness-01)
                    :ARG0-of (c23-7 / call-in-04
                                    :ARG1 c23-2)
                    :ARG2 (c23-9 / amr-unknown)))

# ::snt that's what they took days to concort ?...those situations don't seem related at all
# ::tokens ["that", "'s", "what", "they", "took", "days", "to", "concort", "?", "...", "those", "situations", "do", "n't", "seem", "related", "at", "all"]
# ::lemmas ["that", "be", "what", "they", "take", "days", "to", "concort", "?", "...", "those", "situation", "do", "not", "seem", "relate", "at", "all"]
(c24-2 / multi-sentence
       :snt1 (c24-3 / take-10
                    :polarity (c24-7 / amr-unknown)
                    :ARG0 (c24-6 / concort-01
                                 :ARG0 (c24-1 / they))
                    :ARG1 (c24-10 / multiple
                                  :op1 (c24-4 / temporal-quantity
                                              :unit (c24-5 / day)
                                              :quant 1)))
       :snt2 (c24-11 / seem-01
                     :ARG1 (c24-8 / relate-01
                                  :ARG1 (c24-0 / situation
                                               :mod (c24-12 / that))
                                  :ARG2 (c24-9 / at-all))
                     :polarity -))

# ::snt They had splice some tapes together.
# ::tokens ["They", "had", "splice", "some", "tapes", "together", "."]
# ::lemmas ["they", "have", "splice", "some", "tape", "together", "."]
(c25-4 / splice-01
       :ARG0 (c25-3 / they)
       :ARG1 (c25-2 / tape
                    :quant (c25-0 / some))
       :manner (c25-1 / together))

# ::snt how convenient for this police chief....he needs to just go
# ::tokens ["how", "convenient", "for", "this", "police", "chief", "....", "he", "needs", "to", "just", "go"]
# ::lemmas ["how", "convenient", "for", "this", "police", "chief", "....", "he", "need", "to", "just", "go"]
(c26-5 / convenient
       :degree (c26-9 / so)
       :beneficiary (c26-4 / person
                           :ARG0-of (c26-0 / have-org-role-91
                                           :ARG1 (c26-3 / police)
                                           :ARG2 (c26-8 / chief))
                           :mod (c26-1 / this))
       :ARG0-of (c26-6 / cause-01
                       :ARG1 (c26-10 / need-01
                                     :ARG0 c26-4
                                     :ARG1 (c26-7 / go-02
                                                  :ARG0 c26-4
                                                  :mod (c26-2 / just)))))

# ::snt Agreed-also,if was suspect,why not just question him? Why tell him &amp; friend get off road,not stop them?
# ::tokens ["Agreed", "-", "also", ",", "if", "was", "suspect", ",", "why", "not", "just", "question", "him", "?", "Why", "tell", "him", "&", "amp", ";", "friend", "get", "off", "road", ",", "not", "stop", "them", "?"]
# ::lemmas ["Agreed", "-", "also", ",", "if", "be", "suspect", ",", "why", "not", "just", "question", "he", "?", "why", "tell", "he", "&", "amp", ";", "friend", "get", "off", "road", ",", "not", "stop", "they", "?"]
(c27-16 / agree-01
        :ARG1 (c27-3 / and
                     :op1 (c27-0 / have-condition-91
                                 :ARG1 (c27-9 / cause-01
                                              :ARG0 (c27-19 / amr-unknown)
                                              :ARG1 (c27-22 / question-01
                                                            :ARG1 (c27-10 / suspect-01)
                                                            :mod (c27-7 / just)
                                                            :polarity -))
                                 :ARG2 c27-10)
                     :op2 (c27-4 / cause-01
                                 :ARG0 (c27-1 / amr-unknown)
                                 :ARG1 (c27-5 / and
                                              :op1 (c27-6 / tell-01
                                                          :ARG1 (c27-17 / get-05
                                                                        :ARG1 (c27-21 / and
                                                                                      :op1 (c27-8 / he)
                                                                                      :op2 (c27-15 / person
                                                                                                   :name (c27-12 / name
                                                                                                                 :op1 "amp")))
                                                                        :ARG2 (c27-18 / off
                                                                                      :op1 (c27-2 / road)))
                                                          :ARG2 (c27-20 / person
                                                                        :ARG0-of (c27-11 / have-rel-role-91
                                                                                         :ARG1 c27-21
                                                                                         :ARG2 (c27-14 / friend))))
                                              :op2 (c27-13 / stop-01
                                                           :ARG1 c27-21
                                                           :polarity -))
                                 :condition c27-10))
        :mod (c27-23 / also))

# ::snt The cops can't spin this unlawful shooting try as they may. Police Dept. credibility ruined with Ferguson community.
# ::tokens ["The", "cops", "ca", "n't", "spin", "this", "unlawful", "shooting", "try", "as", "they", "may", ".", "Police", "Dept", ".", "credibility", "ruined", "with", "Ferguson", "community", "."]
# ::lemmas ["the", "cop", "can", "not", "spin", "this", "unlawful", "shooting", "try", "as", "they", "may", ".", "Police", "Dept", ".", "credibility", "ruin", "with", "Ferguson", "community", "."]
(c28-4 / multi-sentence
       :snt1 (c28-8 / possible-01
                    :ARG1 (c28-14 / spin-03
                                  :ARG0 (c28-9 / cop)
                                  :ARG1 (c28-3 / try-01
                                               :ARG1 (c28-2 / shoot-02
                                                            :mod (c28-11 / law
                                                                         :polarity -))
                                               :mod (c28-5 / this))
                                  :ARG1-of (c28-6 / possible-01))
                    :polarity -)
       :snt2 (c28-12 / ruin-01
                     :ARG1 (c28-13 / credibility
                                   :poss (c28-7 / department
                                                :mod (c28-1 / police)))
                     :prep-with (c28-10 / community
                                        :mod (c28-0 / city
                                                    :name (c28-15 / name
                                                                  :op1 "Ferguson")))))

# ::snt . - Spin still doesn't justify the murder versus the arrest. Why did the officer not call for backup?
# ::tokens [".", "-", "Spin", "still", "does", "n't", "justify", "the", "murder", "versus", "the", "arrest", ".", "Why", "did", "the", "officer", "not", "call", "for", "backup", "?"]
# ::lemmas [".", "-", "Spin", "still", "do", "not", "justify", "the", "murder", "versus", "the", "arrest", ".", "why", "do", "the", "officer", "not", "call", "for", "backup", "?"]
(c29-1 / multi-sentence
       :snt1 (c29-2 / justify-01
                    :ARG0 (c29-10 / spin-03)
                    :ARG1 (c29-5 / versus
                                 :op1 (c29-9 / murder-01)
                                 :op2 (c29-6 / arrest-01))
                    :mod (c29-0 / still)
                    :polarity -)
       :snt2 (c29-4 / cause-01
                    :ARG0 (c29-7 / amr-unknown)
                    :ARG1 (c29-8 / call-03
                                 :ARG0 (c29-3 / officer)
                                 :ARG1 (c29-11 / backup)
                                 :polarity -)))

# ::snt There's no spin, cops blew it from day one by not releasing shooter's name! Trying to control the narrative w/lies.
# ::tokens ["There", "'s", "no", "spin", ",", "cops", "blew", "it", "from", "day", "one", "by", "not", "releasing", "shooter", "'s", "name", "!", "Trying", "to", "control", "the", "narrative", "w", "/", "lies", "."]
# ::lemmas ["there", "be", "no", "spin", ",", "cop", "blow", "it", "from", "day", "one", "by", "not", "release", "shooter", "'s", "name", "!", "try", "to", "control", "the", "narrative", "w", "/", "lie", "."]
(c30-3 / multi-sentence
       :snt1 (c30-15 / spin-03
                     :ARG1-of (c30-7 / cause-01
                                     :ARG0 (c30-17 / blow-10
                                                   :ARG0 (c30-14 / cop)
                                                   :ARG1 (c30-8 / it)
                                                   :ARG2 (c30-13 / release-01
                                                                 :ARG0 c30-14
                                                                 :ARG1 (c30-16 / name
                                                                               :poss (c30-9 / person
                                                                                            :ARG0-of (c30-1 / shoot-02)))
                                                                 :polarity -)
                                                   :time (c30-4 / from
                                                                :op1 (c30-6 / day
                                                                            :ord (c30-5 / ordinal-entity
                                                                                        :value 1)))))
                     :snt2 (c30-2 / try-01
                                  :ARG0 (c30-0 / you)
                                  :ARG1 (c30-10 / control-01
                                                :ARG0 c30-0
                                                :ARG1 (c30-11 / narrate-01)
                                                :manner (c30-12 / lie-08)))
                     :polarity -))

# ::snt . - PD tried to justify probable cause, even st &amp; d shot, everything after = premeditated murder.
# ::tokens [".", "-", "PD", "tried", "to", "justify", "probable", "cause", ",", "even", "st", "&", "amp", ";", "d", "shot", ",", "everything", "after", "=", "premeditated", "murder", "."]
# ::lemmas [".", "-", "PD", "try", "to", "justify", "probable", "cause", ",", "even", "st", "&", "amp", ";", "d", "shot", ",", "everything", "after", "=", "premeditate", "murder", "."]
(c31-3 / multi-sentence
       :snt1 (c31-2 / try-01
                    :ARG0 (c31-10 / government-organization
                                  :name (c31-14 / name
                                                :op1 "PD"))
                    :ARG1 (c31-4 / justify-01
                                 :ARG0 c31-10
                                 :ARG1 (c31-6 / cause
                                              :mod (c31-7 / probable)
                                              :example (c31-11 / and
                                                               :op1 (c31-13 / st-and-amp)
                                                               :op2 (c31-0 / shoot-02)
                                                               :mod (c31-1 / even)))))
       :snt2 (c31-8 / equal-01
                    :ARG1 (c31-15 / everything
                                  :time (c31-12 / after
                                                :op1 c31-0)))
       :ARG2 (c31-9 / murder-01
                    :ARG1-of (c31-5 / precede-01)))

# ::snt Probable cause for what? The alleged robbery that cop wasn't aware of (so it appears) or alleged assault of cop?
# ::tokens ["Probable", "cause", "for", "what", "?", "The", "alleged", "robbery", "that", "cop", "was", "n't", "aware", "of", "(", "so", "it", "appears", ")", "or", "alleged", "assault", "of", "cop", "?"]
# ::lemmas ["probable", "cause", "for", "what", "?", "the", "allege", "robbery", "that", "cop", "be", "not", "aware", "of", "(", "so", "it", "appear", ")", "or", "alleged", "assault", "of", "cop", "?"]
(c32-1 / multi-sentence
       :snt1 (c32-3 / cause-01
                    :ARG1 (c32-6 / amr-unknown)
                    :ARG1-of (c32-2 / possible-01))
       :snt2 (c32-9 / or
                    :op1 (c32-8 / rob-01
                                :ARG0 (c32-12 / cop)
                                :ARG1-of (c32-10 / allege-01)
                                :ARG1-of (c32-0 / realize-01
                                                :ARG0 c32-12
                                                :ARG1-of (c32-11 / appear-02)
                                                :polarity -))
                    :op2 (c32-4 / assault-01
                                :ARG1 (c32-5 / cop)
                                :ARG1-of (c32-13 / allege-01))
                    :polarity (c32-7 / amr-unknown)))

# ::snt . - PD new story is trying to establish: probable cause, justify st &amp; d shot, but can't justify extras.
# ::tokens [".", "-", "PD", "new", "story", "is", "trying", "to", "establish", ":", "probable", "cause", ",", "justify", "st", "&", "amp", ";", "d", "shot", ",", "but", "ca", "n't", "justify", "extras", "."]
# ::lemmas [".", "-", "PD", "new", "story", "be", "try", "to", "establish", ":", "probable", "cause", ",", "justify", "st", "&", "amp", ";", "d", "shot", ",", "but", "can", "not", "justify", "extra", "."]
(c33-3 / try-01
       :ARG0 (c33-15 / story
                     :ARG1-of (c33-16 / new-01)
                     :ARG1-of (c33-1 / have-org-role-91
                                     :ARG0 (c33-12 / government-organization
                                                   :name (c33-8 / name
                                                                :op1 "PD"))))
       :ARG1 (c33-2 / establish-01
                    :ARG0 c33-15
                    :ARG1 (c33-9 / contrast-01
                                 :ARG1 (c33-13 / and
                                               :op1 (c33-14 / cause
                                                            :mod (c33-10 / probable))
                                               :op2 (c33-4 / justify-01
                                                           :op1 (c33-5 / st-and-amp)
                                                           :op2 (c33-0 / shoot-02)
                                                           :ARG1 c33-13)))
                    :ARG2 (c33-7 / possible-01
                                 :ARG1 (c33-6 / justify-01
                                              :ARG1 (c33-11 / extra))
                                 :polarity -)))

# ::snt There is a very fishy fishing expedition going on in looking for excuses for murder.
# ::tokens ["There", "is", "a", "very", "fishy", "fishing", "expedition", "going", "on", "in", "looking", "for", "excuses", "for", "murder", "."]
# ::lemmas ["there", "be", "a", "very", "fishy", "fishing", "expedition", "go", "on", "in", "look", "for", "excuse", "for", "murder", "."]
(c34-5 / go-on-15
       :ARG1 (c34-8 / expedition
                    :purpose (c34-1 / fish-01)
                    :mod (c34-7 / fishy
                                :degree (c34-4 / very))
                    :purpose (c34-6 / look-01
                                    :ARG1 (c34-0 / thing
                                                 :ARG2-of (c34-3 / excuse-02
                                                                 :ARG1 (c34-2 / murder-01))))))

# ::snt Another question, how would the police engage a suspect from INSIDE his vehicle? And, why not question nd suspect?
# ::tokens ["Another", "question", ",", "how", "would", "the", "police", "engage", "a", "suspect", "from", "INSIDE", "his", "vehicle", "?", "And", ",", "why", "not", "question", "nd", "suspect", "?"]
# ::lemmas ["another", "question", ",", "how", "would", "the", "police", "engage", "a", "suspect", "from", "INSIDE", "his", "vehicle", "?", "and", ",", "why", "not", "question", "nd", "suspect", "?"]
(c35-1 / multi-sentence
       :snt1 (c35-13 / question-01
                     :ARG1 (c35-14 / engage-01
                                   :ARG0 (c35-3 / police)
                                   :ARG1 (c35-2 / person
                                                :ARG2-of (c35-5 / suspect-01))
                                   :ARG2 (c35-4 / inside
                                                :op1 (c35-6 / vehicle
                                                            :poss c35-2))
                                   :manner (c35-7 / amr-unknown))
                     :mod (c35-11 / another))
       :snt2 (c35-12 / and
                     :op2 (c35-8 / cause-01
                                 :ARG0 (c35-9 / amr-unknown)
                                 :ARG1 (c35-10 / question-01
                                               :ARG1 c35-2
                                               :ARG2-of (c35-0 / suspect-01)
                                               :polarity -))))

# ::snt Racist LIE to make it seem like innocent black child was a criminal. It will not work!! Police LIE may start more riots
# ::tokens ["Racist", "LIE", "to", "make", "it", "seem", "like", "innocent", "black", "child", "was", "a", "criminal", ".", "It", "will", "not", "work", "!", "!", "Police", "LIE", "may", "start", "more", "riots"]
# ::lemmas ["racist", "LIE", "to", "make", "it", "seem", "like", "innocent", "black", "child", "be", "a", "criminal", ".", "it", "will", "not", "work", "!", "!", "police", "LIE", "may", "start", "more", "riot"]
(c36-4 / multi-sentence
       :snt1 (c36-9 / lie-08
                    :ARG0 (c36-10 / racist)
                    :purpose (c36-13 / make-02
                                     :ARG0 c36-10
                                     :ARG1 (c36-14 / seem-01
                                                   :ARG1 (c36-6 / criminal-03
                                                                :ARG2 (c36-12 / child
                                                                              :ARG1-of (c36-16 / black-05)
                                                                              :ARG1-of (c36-7 / innocent-01))))))
       :snt2 (c36-1 / work-09
                    :ARG1 (c36-2 / it)
                    :polarity -)
       :snt3 (c36-8 / possible-01
                    :ARG1 (c36-3 / start-01
                                 :ARG0 (c36-15 / lie-08
                                               :ARG0 (c36-5 / police))
                                 :ARG1 (c36-0 / riot-01
                                              :quant (c36-11 / more)))))

# ::snt IF Brown committed strong arm robbery is one thing,but cop response is still another entirely. No riots. Justice
# ::tokens ["IF", "Brown", "committed", "strong", "arm", "robbery", "is", "one", "thing", ",", "but", "cop", "response", "is", "still", "another", "entirely", ".", "No", "riots", ".", "Justice"]
# ::lemmas ["if", "Brown", "commit", "strong", "arm", "robbery", "be", "one", "thing", ",", "but", "cop", "response", "be", "still", "another", "entirely", ".", "no", "riot", ".", "Justice"]
(c37-4 / multi-sentence
       :snt1 (c37-8 / contrast-01
                    :ARG1 (c37-3 / thing
                                 :domain (c37-13 / respond-01
                                                 :ARG0 (c37-15 / cop)
                                                 :ARG2 (c37-0 / rob-01
                                                              :ARG0 (c37-9 / person
                                                                           :name (c37-16 / name
                                                                                         :op1 "Brown"))
                                                              :manner (c37-12 / arm
                                                                              :ARG1-of (c37-10 / strong-02))))
                                 :condition (c37-11 / commit-02
                                                    :ARG0 c37-9
                                                    :ARG1 c37-0)
                                 :quant 1)
                    :ARG2 (c37-5 / thing
                                 :mod (c37-14 / another)
                                 :mod (c37-1 / still)
                                 :mod (c37-2 / entire)))
       :snt2 (c37-6 / riot-01
                    :polarity -)
       :snt3 (c37-7 / justice))

# ::snt It's a LIE. Police originally said confrontation started b/c cop told Michael to get out of street &amp; walk on sidewalk.
# ::tokens ["It", "'s", "a", "LIE", ".", "Police", "originally", "said", "confrontation", "started", "b", "/", "c", "cop", "told", "Michael", "to", "get", "out", "of", "street", "&", "amp", ";", "walk", "on", "sidewalk", "."]
# ::lemmas ["it", "be", "a", "lie", ".", "police", "originally", "say", "confrontation", "start", "b", "/", "c", "cop", "tell", "Michael", "to", "get", "out", "of", "street", "&", "amp", ";", "walk", "on", "sidewalk", "."]
(c38-17 / multi-sentence
        :snt1 (c38-1 / lie-08
                     :ARG1 (c38-13 / it))
        :snt2 (c38-6 / say-01
                     :ARG0 (c38-12 / police)
                     :ARG1 (c38-9 / start-01
                                  :ARG1 (c38-5 / confront-01)
                                  :ARG1-of (c38-2 / cause-01
                                                  :ARG0 (c38-4 / tell-01
                                                               :ARG0 (c38-19 / cop
                                                                             :ARG0-of (c38-3 / counsel-01))
                                                               :ARG1 (c38-14 / and
                                                                             :op1 (c38-15 / get-05
                                                                                          :ARG1 (c38-18 / person
                                                                                                        :name (c38-7 / name
                                                                                                                     :op1 "Michael"))
                                                                                          :ARG2 (c38-16 / out-06
                                                                                                        :ARG1 c38-18
                                                                                                        :ARG2 (c38-8 / street)))
                                                                             :op2 (c38-0 / walk-01
                                                                                         :ARG0 c38-18
                                                                                         :ARG2 (c38-10 / sidewalk)))
                                                               :ARG2 c38-18))
                                  :mod (c38-11 / original))))

# ::snt There are pics of "strong arm robbery" clothing description/size of assailant similar BUT cop deadly force? No!
# ::tokens ["There", "are", "pics", "of", "\"", "strong", "arm", "robbery", "\"", "clothing", "description", "/", "size", "of", "assailant", "similar", "BUT", "cop", "deadly", "force", "?", "No", "!"]
# ::lemmas ["there", "be", "pic", "of", "\"", "strong", "arm", "robbery", "\"", "clothing", "description", "/", "size", "of", "assailant", "similar", "but", "cop", "deadly", "force", "?", "no", "!"]
(c39-8 / contrast-01
       :ARG1 (c39-7 / pic
                    :topic (c39-15 / slash
                                   :op1 (c39-6 / describe-01
                                               :ARG1 (c39-11 / rob-01
                                                             :mod (c39-10 / arm
                                                                          :ARG1-of (c39-3 / strong-02)))
                                               :ARG2 (c39-12 / clothing))
                                   :op2 (c39-2 / size
                                               :poss (c39-5 / person
                                                            :ARG0-of (c39-13 / assail-01)))
                                   :ARG1-of (c39-1 / resemble-01)))
       :ARG2 (c39-4 / force-04
                    :ARG0 (c39-9 / cop)
                    :ARG2 (c39-0 / kill-01)
                    :polarity (c39-14 / amr-unknown)))

# ::snt Alasscan it's a lie. Pics are fake. No robbery was reported! If true, police would have said it last week to stop riots
# ::tokens ["Alasscan", "it", "'s", "a", "lie", ".", "Pics", "are", "fake", ".", "No", "robbery", "was", "reported", "!", "If", "true", ",", "police", "would", "have", "said", "it", "last", "week", "to", "stop", "riots"]
# ::lemmas ["Alasscan", "it", "be", "a", "lie", ".", "pic", "be", "fake", ".", "no", "robbery", "be", "report", "!", "if", "true", ",", "police", "would", "have", "say", "it", "last", "week", "to", "stop", "riot"]
(c40-5 / multi-sentence
       :snt1 (c40-12 / possible-01
                     :ARG1 (c40-13 / claim-01
                                   :ARG1 (c40-14 / lie-08
                                                 :ARG1 (c40-11 / it)))
                     :polarity -)
       :snt2 (c40-6 / fake-02
                    :ARG1 (c40-9 / pic))
       :snt3 (c40-15 / report-01
                     :ARG1 (c40-0 / rob-01)
                     :polarity -)
       :snt4 (c40-16 / say-01
                     :ARG0 (c40-1 / police)
                     :ARG1 (c40-2 / it)
                     :time (c40-3 / week
                                  :mod (c40-17 / last))
                     :purpose (c40-4 / stop-01
                                     :ARG0 c40-1
                                     :ARG1 (c40-7 / riot-01))
                     :condition (c40-8 / true-01
                                       :ARG1 (c40-10 / it))))

# ::snt . - Even if robbery took place &amp; stop legal, actions after st &amp; d shot &amp; after put = MURDER
# ::tokens [".", "-", "Even", "if", "robbery", "took", "place", "&", "amp", ";", "stop", "legal", ",", "actions", "after", "st", "&", "amp", ";", "d", "shot", "&", "amp", ";", "after", "put", "=", "MURDER"]
# ::lemmas [".", "-", "even", "if", "robbery", "take", "place", "&", "amp", ";", "stop", "legal", ",", "action", "after", "st", "&", "amp", ";", "d", "shot", "&", "amp", ";", "after", "put", "=", "murder"]
(c41-0 / have-concession-91
       :ARG1 (c41-12 / and
                     :op1 (c41-8 / stop-01
                                 :ARG0 (c41-6 / you)
                                 :ARG1 (c41-4 / act-02
                                              :ARG0 c41-6
                                              :ARG1-of (c41-2 / legal-02))
                                 :time (c41-13 / after
                                               :op1 (c41-1 / and
                                                           :op1 (c41-3 / rape-01)
                                                           :op2 (c41-9 / law)))
                                 :mode imperative)
                     :op2 (c41-10 / shoot-02
                                  :ARG0 c41-6
                                  :time (c41-5 / after
                                               :op1 (c41-11 / put-03))
                                  :mode imperative)
                     :op3 (c41-14 / equal-01
                                  :ARG1 c41-1
                                  :ARG2 (c41-15 / murder-01)))
       :ARG2 (c41-16 / even-if
                     :op1 (c41-17 / and
                                  :op1 (c41-7 / rob-01
                                              :op2 (c41-18 / amp)))))

# ::snt IMO no shot should've happened. Call was unarmed suspect, cop had full description, easy to find where he lived
# ::tokens ["IMO", "no", "shot", "should", "'ve", "happened", ".", "Call", "was", "unarmed", "suspect", ",", "cop", "had", "full", "description", ",", "easy", "to", "find", "where", "he", "lived"]
# ::lemmas ["imo", "no", "shot", "should", "'ve", "happen", ".", "call", "be", "unarmed", "suspect", ",", "cop", "have", "full", "description", ",", "easy", "to", "find", "where", "he", "live"]
(c42-3 / multi-sentence
       :snt1 (c42-14 / opine-01
                     :ARG0 (c42-9 / i)
                     :ARG1 (c42-13 / recommend-01
                                   :ARG1 (c42-16 / shoot-02)
                                   :polarity -))
       :snt2 (c42-11 / and
                     :op1 (c42-0 / suspect-01
                                 :ARG1 (c42-10 / call-02)
                                 :ARG1-of (c42-15 / arm-01
                                                  :polarity -))
                     :op2 (c42-1 / have-03
                                 :ARG0 (c42-6 / cop)
                                 :ARG1 (c42-8 / describe-01
                                              :ARG0 c42-6
                                              :ARG1-of (c42-4 / full-09)))
                     :op3 (c42-17 / easy-05
                                  :ARG1 (c42-2 / find-01
                                               :ARG1 (c42-5 / thing
                                                            :location-of (c42-12 / live-01
                                                                                 :ARG0 (c42-7 / he)))))))

# ::snt Besides a person who committed a robbery wouldn't call attention to himself by walking in the middle of the street. It's a lie.
# ::tokens ["Besides", "a", "person", "who", "committed", "a", "robbery", "would", "n't", "call", "attention", "to", "himself", "by", "walking", "in", "the", "middle", "of", "the", "street", ".", "It", "'s", "a", "lie", "."]
# ::lemmas ["besides", "a", "person", "who", "commit", "a", "robbery", "would", "not", "call", "attention", "to", "himself", "by", "walk", "in", "the", "middle", "of", "the", "street", ".", "it", "be", "a", "lie", "."]
(c43-1 / multi-sentence
       :snt1 (c43-3 / call-01
                    :ARG0 (c43-2 / person
                                 :ARG0-of (c43-7 / rob-01)
                                 :mod (c43-10 / besides)
                                 :ARG1-of c43-3)
                    :ARG2 (c43-5 / attend-02
                                 :ARG0 c43-2
                                 :ARG1 c43-2)
                    :manner (c43-0 / walk-01
                                   :ARG0 c43-2
                                   :ARG2 (c43-8 / middle
                                                :part-of (c43-9 / street)))
                    :polarity -)
       :snt2 (c43-6 / lie-08
                    :ARG1 (c43-4 / it)))

# ::snt Sadly friend of was in store also &amp; has admitted to it
# ::tokens ["Sadly", "friend", "of", "was", "in", "store", "also", "&", "amp", ";", "has", "admitted", "to", "it"]
# ::lemmas ["sadly", "friend", "of", "be", "in", "store", "also", "&", "amp", ";", "have", "admit", "to", "it"]
(c44-6 / and
       :op1 (c44-9 / sad-02
                   :ARG1 (c44-4 / person
                                :ARG0-of (c44-0 / have-rel-role-91
                                                :ARG1 (c44-3 / person
                                                             :name (c44-10 / name
                                                                           :op1 "&amp"))
                                                :ARG2 (c44-2 / friend))
                                :location (c44-1 / store)
                                :mod (c44-7 / also)))
       :op2 (c44-8 / admit-01
                   :ARG0 c44-3
                   :ARG1 (c44-5 / it)))

# ::snt Police lied! Chief now says Michaels's friend was NOT involved in any robbery.
# ::tokens ["Police", "lied", "!", "Chief", "now", "says", "Michaels", "'s", "friend", "was", "NOT", "involved", "in", "any", "robbery", "."]
# ::lemmas ["police", "lie", "!", "chief", "now", "say", "Michaels", "'s", "friend", "be", "not", "involve", "in", "any", "robbery", "."]
(c45-2 / multi-sentence
       :snt1 (c45-10 / lie-08
                     :ARG0 (c45-7 / police))
       :snt2 (c45-14 / say-01
                     :ARG0 (c45-5 / person
                                  :ARG0-of (c45-1 / have-org-role-91
                                                  :ARG2 (c45-8 / chief)))
                     :ARG1 (c45-9 / involve-01
                                  :ARG1 (c45-0 / person
                                               :ARG0-of (c45-4 / have-rel-role-91
                                                               :ARG1 (c45-11 / person
                                                                             :name (c45-15 / name
                                                                                           :op1 "Michaels"))
                                                               :ARG2 (c45-3 / friend)))
                                  :ARG2 (c45-13 / rob-01
                                                :mod (c45-12 / any))
                                  :polarity -)
                     :time (c45-6 / now)))

# ::snt Heard that friend was not going to be "charged" in any robbery since video shows it was other person
# ::tokens ["Heard", "that", "friend", "was", "not", "going", "to", "be", "\"", "charged", "\"", "in", "any", "robbery", "since", "video", "shows", "it", "was", "other", "person"]
# ::lemmas ["hear", "that", "friend", "be", "not", "go", "to", "be", "\"", "charge", "\"", "in", "any", "robbery", "since", "video", "show", "it", "be", "other", "person"]
(c46-0 / hear-01
       :ARG0 (c46-3 / heard-01
                    :ARG1 (c46-6 / charge-05
                                 :ARG1 (c46-5 / person
                                              :mod (c46-1 / that)
                                              :ARG0-of (c46-13 / have-rel-role-91
                                                               :ARG2 (c46-2 / friend)))
                                 :ARG2 (c46-10 / rob-01
                                               :mod (c46-9 / any))
                                 :ARG1-of (c46-12 / cause-01
                                                  :ARG0 (c46-7 / show-01
                                                               :ARG0 (c46-8 / video)
                                                               :ARG1 (c46-4 / person
                                                                            :mod (c46-11 / other)
                                                                            :domain c46-10)))
                                 :polarity -)))

# ::snt Who is 'other person?' st police LIE saying friend confessed. Under pressure, they now say he was not involved
# ::tokens ["Who", "is", "'", "other", "person", "?", "'", "st", "police", "LIE", "saying", "friend", "confessed", ".", "Under", "pressure", ",", "they", "now", "say", "he", "was", "not", "involved"]
# ::lemmas ["who", "be", "'", "other", "person", "?", "'", "st", "police", "LIE", "say", "friend", "confess", ".", "under", "pressure", ",", "they", "now", "say", "he", "be", "not", "involve"]
(c47-4 / multi-sentence
       :snt1 (c47-8 / person
                    :mod (c47-14 / other)
                    :domain (c47-11 / amr-unknown)
                    :ARG1-of (c47-12 / lie-08
                                     :ARG0 (c47-7 / police))
                    :ARG0-of (c47-15 / say-01
                                     :ARG1 (c47-9 / confess-01
                                                  :ARG0 (c47-0 / person
                                                               :ARG0-of (c47-1 / have-rel-role-91
                                                                               :ARG2 (c47-5 / friend))))))
       :snt2 (c47-2 / say-01
                    :ARG0 (c47-3 / they)
                    :ARG1 (c47-10 / involve-01
                                  :ARG1 (c47-6 / he)
                                  :polarity -)
                    :time (c47-16 / now)
                    :manner (c47-13 / pressure-01
                                    :ARG1 c47-3)))

# ::snt st interview mentions cigarillos &amp; told lawyer. Video shows he gave back, not Mike
# ::tokens ["st", "interview", "mentions", "cigarillos", "&", "amp", ";", "told", "lawyer", ".", "Video", "shows", "he", "gave", "back", ",", "not", "Mike"]
# ::lemmas ["st", "interview", "mentions", "cigarillos", "&", "amp", ";", "tell", "lawyer", ".", "video", "show", "he", "give", "back", ",", "not", "Mike"]
(c48-3 / multi-sentence
       :snt1 (c48-14 / mention-01
                     :ARG0 (c48-8 / interview-01
                                  :mod (c48-15 / st))
                     :ARG1 (c48-7 / company
                                  :name (c48-16 / name
                                                :op1 " cigarillos"
                                                :op2 "&amp")))
       :snt2 (c48-2 / tell-01
                    :ARG0 (c48-11 / lawyer)
                    :ARG2 (c48-9 / person))
       :snt3 (c48-0 / show-01
                    :ARG0 (c48-10 / video)
                    :ARG1 (c48-13 / contrast-01
                                  :ARG1 (c48-12 / give-back-03
                                                :ARG0 (c48-1 / he))
                                  :ARG2 (c48-4 / give-back-03
                                               :ARG0 (c48-5 / person
                                                            :name (c48-6 / name
                                                                         :op1 "Mike"))
                                               :polarity -))))

# ::snt Max are you listening to what the Chief of Police said or do you just want to believe lies? Listen carefully
# ::tokens ["Max", "are", "you", "listening", "to", "what", "the", "Chief", "of", "Police", "said", "or", "do", "you", "just", "want", "to", "believe", "lies", "?", "Listen", "carefully"]
# ::lemmas ["Max", "be", "you", "listen", "to", "what", "the", "Chief", "of", "Police", "say", "or", "do", "you", "just", "want", "to", "believe", "lie", "?", "listen", "carefully"]
(c49-18 / multi-sentence
        :snt1 (c49-14 / ask-01
                      :ARG1 (c49-6 / truth-value
                                   :polarity-of (c49-3 / listen-01
                                                       :ARG0 (c49-5 / you)
                                                       :ARG1 (c49-17 / thing
                                                                     :ARG1-of (c49-9 / say-01
                                                                                     :ARG0 (c49-13 / person
                                                                                                   :ARG0-of (c49-2 / have-org-role-91
                                                                                                                   :ARG1 (c49-19 / police)
                                                                                                                   :ARG2 (c49-8 / chief))
                                                                                                   :ARG2-of c49-14)))))
                      :name (c49-12 / name
                                    :op1 "Max"))
        :snt2 (c49-1 / want-01
                     :ARG0 (c49-15 / you)
                     :ARG1 (c49-16 / believe-01
                                   :ARG0 c49-15
                                   :ARG1 c49-17
                                   :ARG1-of (c49-11 / lie-08)))
        :mod (c49-7 / just)
        :snt3 (c49-10 / listen-01
                      :ARG0 (c49-0 / you)
                      :manner (c49-4 / careful)
                      :mode imperative))

# ::snt Don't understand your argument - we're both on same side. Was repeating what Dorian said. Also Chief walked stmt back later
# ::tokens ["Do", "n't", "understand", "your", "argument", "-", "we", "'re", "both", "on", "same", "side", ".", "Was", "repeating", "what", "Dorian", "said", ".", "Also", "Chief", "walked", "stmt", "back", "later"]
# ::lemmas ["do", "not", "understand", "your", "argument", "-", "we", "be", "both", "on", "same", "side", ".", "be", "repeat", "what", "Dorian", "say", ".", "also", "Chief", "walk", "stmt", "back", "later"]
(c50-20 / multi-sentence
        :snt1 (c50-2 / understand-01
                     :ARG0 (c50-15 / i)
                     :ARG1 (c50-17 / argue-01
                                   :ARG0 (c50-5 / you))
                     :ARG1-of (c50-8 / cause-01
                                     :ARG0 (c50-10 / side-01
                                                   :ARG0 (c50-0 / we
                                                                :mod (c50-19 / both))
                                                   :ARG1-of (c50-13 / same-01)))
                     :polarity -)
        :snt2 (c50-3 / repeat-01
                     :ARG0 (c50-6 / i)
                     :ARG1 (c50-7 / thing
                                  :ARG1-of (c50-12 / say-01
                                                   :ARG0 (c50-16 / person
                                                                 :name (c50-11 / name
                                                                               :op1 "Doran")))))
        :snt3 (c50-9 / walk-01
                     :ARG0 (c50-21 / person
                                   :name c50-11
                                   :op1 "Chief"))
        :direction (c50-22 / back)
        :mod (c50-4 / also)
        :time (c50-18 / after)
        :time (c50-14 / date-entity
                      :dayperiod (c50-1 / night)))
