# ::snt Yes indeed !
# ::tokens ["Yes", "indeed", "!"]
# ::lemmas ["yes", "indeed", "!"]
(c1-0 / yes
      :mod (c1-1 / indeed))

# ::snt I saw Prince in concert years ago in halifax and honestly, was the most boring concert ever! Was so disappointed
# ::tokens ["I", "saw", "Prince", "in", "concert", "years", "ago", "in", "halifax", "and", "honestly", ",", "was", "the", "most", "boring", "concert", "ever", "!", "Was", "so", "disappointed"]
# ::lemmas ["i", "see", "Prince", "in", "concert", "years", "ago", "in", "halifax", "and", "honestly", ",", "be", "the", "most", "boring", "concert", "ever", "!", "be", "so", "disappointed"]
(c2-18 / multi-sentence
       :snt1 (c2-15 / and
                    :op1 (c2-9 / see-01
                               :ARG0 (c2-14 / i)
                               :ARG1 (c2-13 / person
                                            :name (c2-10 / name
                                                         :op1 "Prince"))
                               :time (c2-17 / before
                                            :op1 (c2-1 / now)
                                            :quant (c2-21 / multiple
                                                          :op1 (c2-6 / temporal-quantity
                                                                     :unit (c2-5 / year)
                                                                     :quant 1)))
                               :location (c2-8 / city
                                               :name (c2-2 / name
                                                           :op1 "Halifax")))
                    :op2 (c2-0 / have-degree-91
                               :ARG1 (c2-4 / concert)
                               :ARG2 (c2-20 / bore-02
                                            :ARG0 c2-4)
                               :ARG3 (c2-3 / most)
                               :ARG5 (c2-19 / concert
                                            :time (c2-16 / ever))
                               :ARG1-of (c2-7 / honest-01)))
       :snt2 (c2-12 / disappoint-01
                    :ARG0 c2-14)
       :degree (c2-11 / so))

# ::snt Love Prince, he was my first concert!!
# ::tokens ["Love", "Prince", ",", "he", "was", "my", "first", "concert", "!", "!"]
# ::lemmas ["Love", "Prince", ",", "he", "be", "my", "first", "concert", "!", "!"]
(c3-3 / love-01
      :ARG0 (c3-2 / i)
      :ARG1 (c3-1 / person
                  :name (c3-6 / name
                              :op1 "Prince"))
      :ARG1-of (c3-0 / cause-01
                     :ARG0 (c3-5 / concert
                                 :ord (c3-4 / ordinal-entity
                                            :value 1)
                                 :poss c3-2
                                 :domain c3-1)))

# ::snt it's my Birthday ohhhh I would love to see my all time fav please get me in!
# ::tokens ["it", "'s", "my", "Birthday", "ohhhh", "I", "would", "love", "to", "see", "my", "all", "time", "fav", "please", "get", "me", "in", "!"]
# ::lemmas ["it", "be", "my", "Birthday", "ohhhh", "i", "would", "love", "to", "see", "you", "all", "time", "fav", "please", "get", "i", "in", "!"]
(c4-3 / multi-sentence
      :snt1 (c4-12 / birthday
                   :poss (c4-6 / i)
                   :domain (c4-1 / it))
      :snt2 (c4-8 / love-02
                  :ARG0 (c4-4 / i)
                  :ARG1 (c4-11 / see-01
                               :ARG0 c4-4
                               :ARG1 (c4-7 / person
                                           :ARG0-of (c4-5 / favor-01
                                                          :ARG1 c4-4)
                                           :time (c4-2 / time
                                                       :mod (c4-9 / all))))
                  :mode expressive)
      :snt3 (c4-10 / get-05
                   :ARG0 (c4-0 / you)
                   :ARG1 c4-4
                   :mode imperative
                   :polite +))

# ::snt Where???
# ::tokens ["Where", "?", "?", "?"]
# ::lemmas ["where", "?", "?", "?"]
(c5-1 / be-from-91
      :ARG2 (c5-0 / amr-unknown))

# ::snt Massey Hall tix $?
# ::tokens ["Massey", "Hall", "tix", "$", "?"]
# ::lemmas ["Massey", "Hall", "tix", "$", "?"]
(c6-3 / pay-01
      :ARG0 (c6-2 / company
                  :name (c6-5 / name
                              :op1 "Massey"
                              :op2 "Hall"))
      :ARG3 (c6-0 / monetary-quantity
                  :unit (c6-1 / dollar)
                  :quant 1000000)
      :polarity (c6-4 / amr-unknown))

# ::snt That's insane! I love Prince but there's no way I can get babysitting so last minute
# ::tokens ["That", "'s", "insane", "!", "I", "love", "Prince", "but", "there", "'s", "no", "way", "I", "can", "get", "babysitting", "so", "last", "minute"]
# ::lemmas ["that", "be", "insane", "!", "i", "love", "Prince", "but", "there", "be", "no", "way", "i", "can", "get", "babysitte", "so", "last", "minute"]
(c7-2 / multi-sentence
      :snt1 (c7-5 / insane
                  :domain (c7-1 / that))
      :snt2 (c7-4 / contrast-01
                  :ARG1 (c7-7 / love-01
                              :ARG0 (c7-0 / i)
                              :ARG1 (c7-6 / prince))
                  :ARG2 (c7-3 / possible-01
                              :ARG1 (c7-10 / babysit-01
                                           :ARG0 c7-0
                                           :time (c7-8 / minute
                                                       :mod (c7-9 / last)))
                              :polarity -)))

# ::snt I want tickets so bad!
# ::tokens ["I", "want", "tickets", "so", "bad", "!"]
# ::lemmas ["i", "want", "ticket", "so", "bad", "!"]
(c8-0 / want-01
      :ARG0 (c8-2 / i)
      :ARG1 (c8-1 / ticket)
      :ARG1-of (c8-4 / bad-05
                     :degree (c8-3 / so)))
