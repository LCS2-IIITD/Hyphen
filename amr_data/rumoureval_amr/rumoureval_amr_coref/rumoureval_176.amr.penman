# ::snt Evacuate the city, asap! We do not know if he acts on his own yet he threatens he has devices all over Sydney.
# ::tokens ["Evacuate", "the", "city", ",", "asap", "!", "We", "do", "not", "know", "if", "he", "acts", "on", "his", "own", "yet", "he", "threatens", "he", "has", "devices", "all", "over", "Sydney", "."]
# ::lemmas ["evacuate", "the", "city", ",", "asap", "!", "we", "do", "not", "know", "if", "he", "act", "on", "his", "own", "yet", "he", "threaten", "he", "have", "device", "all", "over", "Sydney", "."]
(c1-5 / multi-sentence
      :snt1 (c1-16 / evacuate-01
                   :ARG0 (c1-0 / you)
                   :ARG1 (c1-8 / city)
                   :manner (c1-10 / as-ap)
                   :mode imperative)
      :snt2 (c1-3 / have-concession-91
                  :ARG1 (c1-4 / threaten-01
                              :ARG0 (c1-6 / he)
                              :ARG1 (c1-15 / have-03
                                           :ARG0 c1-6
                                           :ARG1 (c1-7 / device)
                                           :location (c1-12 / all-over
                                                            :op1 (c1-14 / city
                                                                        :name (c1-9 / name
                                                                                    :op1 "Sydney")))))
                  :ARG2 (c1-1 / know-01
                              :ARG0 (c1-2 / we)
                              :ARG1 (c1-13 / act-02
                                           :ARG0 (c1-11 / he)
                                           :mod (c1-17 / by-oneself))
                              :polarity -)))

# ::snt well...you're just a silly paranoid fuck now aren't you
# ::tokens ["well", "...", "you're", "just", "a", "silly", "paranoid", "fuck", "now", "are", "n't", "you"]
# ::lemmas ["well", "...", "you're", "just", "a", "silly", "paranoid", "fuck", "now", "be", "not", "you"]
(c2-1 / fuck
      :domain (c2-0 / you)
      :mod (c2-3 / paranoid)
      :mod (c2-5 / silly)
      :mod (c2-2 / just)
      :time (c2-6 / now)
      :ARG1-of (c2-4 / request-confirmation-91))

# ::snt I hate terrorism and I am worried about the people of our western civilisation.
# ::tokens ["I", "hate", "terrorism", "and", "I", "am", "worried", "about", "the", "people", "of", "our", "western", "civilisation", "."]
# ::lemmas ["i", "hate", "terrorism", "and", "i", "be", "worried", "about", "the", "people", "of", "our", "western", "civilisation", "."]
(c3-6 / and
      :op1 (c3-1 / hate-01
                 :ARG0 (c3-3 / i)
                 :ARG1 (c3-2 / terrorism))
      :op2 (c3-0 / worry-01
                 :ARG0 c3-3
                 :ARG1 (c3-4 / person
                             :poss (c3-5 / civilize-01
                                         :ARG1 (c3-7 / we)
                                         :mod (c3-9 / world-region
                                                    :name (c3-8 / name
                                                                :op1 "West"))))))

# ::snt western countries have killed more innocent children than hitler assmunch. But you prob don't consider that terror??
# ::tokens ["western", "countries", "have", "killed", "more", "innocent", "children", "than", "hitler", "assmunch", ".", "But", "you", "prob", "do", "n't", "consider", "that", "terror", "?", "?"]
# ::lemmas ["western", "country", "have", "kill", "more", "innocent", "child", "than", "hitler", "assmunch", ".", "but", "you", "prob", "do", "not", "consider", "that", "terror", "?", "?"]
(c4-16 / multi-sentence
       :snt1 (c4-14 / kill-01
                    :ARG0 (c4-8 / country
                                :location (c4-0 / world-region
                                                :name (c4-9 / name
                                                            :op1 "West")))
                    :ARG1 (c4-4 / child
                                :ARG1-of (c4-11 / innocent-01)
                                :ARG1-of (c4-1 / have-quant-91
                                               :ARG3 (c4-18 / more)
                                               :ARG4 (c4-17 / child
                                                            :ARG1-of c4-14
                                                            :ARG0 (c4-13 / assmunch
                                                                         :mod (c4-12 / person
                                                                                     :name (c4-2 / name
                                                                                                 :op1 "Hitler")))))))
       :snt2 (c4-5 / contrast-01
                   :ARG2 (c4-10 / consider-02
                                :ARG0 (c4-6 / you)
                                :ARG1 (c4-7 / terror
                                            :mod (c4-15 / that))
                                :polarity (c4-3 / amr-unknown)
                                :polarity -)))

# ::snt isis love choclate... Who knew.. Lol. They gotta make sure its alcohol free ofcourse
# ::tokens ["isis", "love", "choclate", "...", "Who", "knew", "..", "Lol", ".", "They", "got", "ta", "make", "sure", "its", "alcohol", "free", "ofcourse"]
# ::lemmas ["isis", "love", "choclate", "...", "who", "know", "..", "Lol", ".", "they", "got", "to", "make", "sure", "its", "alcohol", "free", "ofcourse"]
(c5-3 / multi-sentence
      :snt1 (c5-10 / love-01
                   :ARG0 (c5-8 / i)
                   :ARG1 (c5-9 / choclate))
      :snt2 (c5-0 / know-01
                  :ARG0 (c5-1 / i))
      :snt3 (c5-14 / laugh-01
                   :ARG0 (c5-4 / i)
                   :manner (c5-13 / loud)
                   :mode expressive)
      :snt4 (c5-12 / obligate-01
                   :ARG1 (c5-2 / they)
                   :ARG2 (c5-15 / ensure-01
                                :ARG0 c5-2
                                :ARG1 (c5-5 / free-04
                                            :ARG1 (c5-6 / it)
                                            :ARG2 (c5-11 / alcohol))
                                :mod (c5-7 / of-course))))

# ::snt this is exactly why Feinstein can shove that up her ass
# ::tokens ["this", "is", "exactly", "why", "Feinstein", "can", "shove", "that", "up", "her", "ass"]
# ::lemmas ["this", "be", "exactly", "why", "Feinstein", "can", "shove", "that", "up", "her", "ass"]
(c6-5 / cause-01
      :ARG0 (c6-1 / this)
      :ARG1 (c6-4 / possible-01
                  :ARG1 (c6-8 / shove-01
                              :ARG0 (c6-3 / person
                                          :name (c6-9 / name
                                                      :op1 "Feinstein")
                                          :part (c6-7 / ass))
                              :ARG1 (c6-2 / that)
                              :ARG2 c6-7
                              :direction (c6-6 / up)))
      :mod (c6-0 / exact))

# ::snt . Yeah it's the same Johnny F'cknuts who was going to kidnap and kill police in Birmingham, UK last Tuesday.
# ::tokens [".", "Yeah", "it", "'s", "the", "same", "Johnny", "F'cknuts", "who", "was", "going", "to", "kidnap", "and", "kill", "police", "in", "Birmingham", ",", "UK", "last", "Tuesday", "."]
# ::lemmas [".", "yeah", "it", "be", "the", "same", "Johnny", "F'cknuts", "who", "be", "go", "to", "kidnap", "and", "kill", "police", "in", "Birmingham", ",", "UK", "last", "Tuesday", "."]
(c7-13 / same-01
       :ARG1 (c7-7 / it)
       :ARG2 (c7-6 / person
                   :name (c7-14 / name
                                :op1 "Johnny"
                                :op2 "Fcknuts")
                   :ARG0-of (c7-0 / kidnap-01
                                  :ARG1 (c7-4 / police))
                   :ARG0-of (c7-1 / kill-01
                                  :ARG1 c7-4)
                   :location (c7-8 / city
                                   :name (c7-5 / name
                                               :op1 "Birmingham")
                                   :location (c7-12 / country
                                                    :name (c7-10 / name
                                                                 :op1 "UK")))
                   :time (c7-9 / date-entity
                               :weekday (c7-3 / tuesday)
                               :mod (c7-11 / last)))
       :mod (c7-2 / yeah))

# ::snt Another fine example of , the peaceful religion, right? Where are the speaking out against this?
# ::tokens ["Another", "fine", "example", "of", ",", "the", "peaceful", "religion", ",", "right", "?", "Where", "are", "the", "speaking", "out", "against", "this", "?"]
# ::lemmas ["another", "fine", "example", "of", ",", "the", "peaceful", "religion", ",", "right", "?", "where", "be", "the", "speak", "out", "against", "this", "?"]
(c8-2 / multi-sentence
      :snt1 (c8-10 / exemplify-01
                   :ARG0 (c8-6 / religion
                               :mod (c8-4 / peaceful))
                   :mod (c8-5 / another)
                   :ARG1-of (c8-3 / fine-03)
                   :ARG1-of (c8-0 / request-confirmation-91))
      :snt2 (c8-9 / speak-out-03
                  :location (c8-8 / amr-unknown)
                  :ARG0-of (c8-7 / oppose-01
                                 :ARG1 (c8-1 / this))))

# ::snt get on that one
# ::tokens ["get", "on", "that", "one"]
# ::lemmas ["get", "on", "that", "one"]
(c9-3 / get-05
      :ARG0 (c9-0 / you
                  :ARG1-of c9-3)
      :ARG2 (c9-4 / on
                  :op1 (c9-2 / one
                             :mod (c9-1 / that)))
      :mode imperative)

# ::snt A breakdown of what we know and what we dont: People Hostage at Caf in
# ::tokens ["A", "breakdown", "of", "what", "we", "know", "and", "what", "we", "do", "nt", ":", "People", "Hostage", "at", "Caf", "in"]
# ::lemmas ["a", "breakdown", "of", "what", "we", "know", "and", "what", "we", "do", "not", ":", "People", "Hostage", "at", "Caf", "in"]
(c10-10 / break-down-27
        :ARG1 (c10-8 / and
                     :op1 (c10-3 / thing
                                 :ARG1-of (c10-0 / know-01
                                                 :ARG0 (c10-1 / we)))
                     :op2 (c10-4 / thing
                                 :ARG1-of c10-0
                                 :ARG0 c10-1
                                 :polarity -))
        :ARG0-of (c10-5 / mean-01
                        :ARG1 (c10-2 / host-01
                                     :ARG1 (c10-7 / person)
                                     :location (c10-6 / facility
                                                      :name (c10-9 / name
                                                                   :op1 "Caf"
                                                                   :op2 "in")))))
