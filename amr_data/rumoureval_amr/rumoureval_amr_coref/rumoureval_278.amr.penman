# ::snt Gentle giant.
# ::tokens ["Gentle", "giant", "."]
# ::lemmas ["gentle", "giant", "."]
(c1-0 / giant
      :ARG1-of (c1-1 / gentle-01))

# ::snt I didn't head you
# ::tokens ["I", "did", "n't", "head", "you"]
# ::lemmas ["i", "do", "not", "head", "you"]
(c2-1 / head-01
      :ARG0 (c2-2 / i)
      :ARG1 (c2-0 / you)
      :polarity -)

# ::snt is that Mike Brown? the guy in these pics looks a lot bigger than the pics of Mike Brown in prior still photos released?
# ::tokens ["is", "that", "Mike", "Brown", "?", "the", "guy", "in", "these", "pics", "looks", "a", "lot", "bigger", "than", "the", "pics", "of", "Mike", "Brown", "in", "prior", "still", "photos", "released", "?"]
# ::lemmas ["be", "that", "Mike", "Brown", "?", "the", "guy", "in", "these", "pic", "look", "a", "lot", "big", "than", "the", "pic", "of", "Mike", "Brown", "in", "prior", "still", "photo", "release", "?"]
(c3-16 / multi-sentence
       :snt1 (c3-11 / person
                    :name (c3-8 / name
                                :op1 "Mike"
                                :op2 "Brown")
                    :domain (c3-4 / that)
                    :polarity (c3-12 / amr-unknown))
       :snt2 (c3-1 / look-02
                   :ARG0 (c3-13 / guy
                                :location (c3-17 / pic
                                                 :mod (c3-15 / this)))
                   :ARG1 (c3-14 / big
                                :ARG2-of (c3-0 / have-degree-91
                                               :ARG1 c3-13
                                               :ARG3 (c3-18 / more
                                                            :quant (c3-7 / lot))
                                               :ARG4 (c3-9 / picture
                                                           :topic c3-11
                                                           :time (c3-5 / prior
                                                                       :op1 (c3-2 / release-01
                                                                                  :ARG1 (c3-10 / photo
                                                                                               :mod (c3-6 / still)))))))
                   :polarity (c3-3 / amr-unknown)))

# ::snt He is large. In the store photos you have some prospective unlike the still photos.
# ::tokens ["He", "is", "large", ".", "In", "the", "store", "photos", "you", "have", "some", "prospective", "unlike", "the", "still", "photos", "."]
# ::lemmas ["he", "be", "large", ".", "in", "the", "store", "photo", "you", "have", "some", "prospective", "unlike", "the", "still", "photo", "."]
(c4-5 / multi-sentence
      :snt1 (c4-9 / large
                  :domain (c4-3 / he))
      :snt2 (c4-6 / have-03
                  :ARG0 (c4-0 / you)
                  :ARG1 (c4-8 / prospective
                              :mod (c4-11 / some))
                  :location (c4-7 / photo
                                  :mod (c4-4 / store))
                  :ARG1-of (c4-10 / resemble-01
                                  :ARG2 (c4-2 / photo
                                              :mod (c4-1 / still))
                                  :polarity -)))

# ::snt i'd be a bad witness
# ::tokens ["i", "'d", "be", "a", "bad", "witness"]
# ::lemmas ["i", "would", "be", "a", "bad", "witness"]
(c5-0 / witness-01
      :ARG0 (c5-1 / i)
      :ARG1-of (c5-2 / bad-07))

# ::snt oh well that just justifies everything doesn't it.
# ::tokens ["oh", "well", "that", "just", "justifies", "everything", "does", "n't", "it", "."]
# ::lemmas ["oh", "well", "that", "just", "justify", "everything", "do", "not", "it", "."]
(c6-1 / justify-01
      :ARG0 (c6-0 / that)
      :ARG1 (c6-4 / everything)
      :mod (c6-2 / just)
      :ARG1-of (c6-3 / request-confirmation-91))

# ::snt no I'm sure the violent felon put his hands right up and the evil policeman after yrs of service decided to kill fun!
# ::tokens ["no", "I", "'m", "sure", "the", "violent", "felon", "put", "his", "hands", "right", "up", "and", "the", "evil", "policeman", "after", "yrs", "of", "service", "decided", "to", "kill", "fun", "!"]
# ::lemmas ["no", "i", "be", "sure", "the", "violent", "felon", "put", "his", "hand", "right", "up", "and", "the", "evil", "policeman", "after", "yrs", "of", "service", "decide", "to", "kill", "fun", "!"]
(c7-16 / sure-02
       :ARG0 (c7-9 / i)
       :ARG1 (c7-12 / and
                    :op1 (c7-8 / put-01
                               :ARG0 (c7-4 / felon
                                           :mod (c7-10 / violent)
                                           :part (c7-2 / hand
                                                       :ARG1-of c7-8))
                               :ARG2 (c7-11 / up
                                            :mod (c7-13 / right)))
                    :op2 (c7-7 / decide-01
                               :ARG0 (c7-6 / policeman
                                           :mod (c7-17 / evil))
                               :ARG1 (c7-0 / kill-01
                                           :ARG0 c7-6
                                           :ARG1 (c7-14 / fun-01))
                               :time (c7-15 / after
                                            :quant (c7-5 / multiple
                                                         :op1 (c7-3 / temporal-quantity
                                                                    :unit (c7-1 / year)
                                                                    :quant 1))))))

# ::snt are you afraid of admitting you're a racist? Are you afraid of being called a racist?
# ::tokens ["are", "you", "afraid", "of", "admitting", "you", "'re", "a", "racist", "?", "Are", "you", "afraid", "of", "being", "called", "a", "racist", "?"]
# ::lemmas ["be", "you", "afraid", "of", "admit", "you", "be", "a", "racist", "?", "be", "you", "afraid", "of", "be", "call", "a", "racist", "?"]
(c8-2 / multi-sentence
      :snt1 (c8-3 / fear-01
                  :polarity (c8-5 / amr-unknown)
                  :ARG0 (c8-0 / you)
                  :ARG1 (c8-8 / admit-01
                              :ARG0 c8-0
                              :ARG1 (c8-6 / racist
                                          :domain c8-0)))
      :snt2 (c8-7 / fear-01
                  :polarity (c8-9 / amr-unknown)
                  :ARG0 (c8-10 / you)
                  :ARG1 (c8-4 / call-01
                              :ARG1 c8-10
                              :ARG2 (c8-1 / racist))))

# ::snt race doesn't matter to me nor should it matter to this case. You are the racist. Facts don't matter u Just blindly follow the herd.
# ::tokens ["race", "does", "n't", "matter", "to", "me", "nor", "should", "it", "matter", "to", "this", "case", ".", "You", "are", "the", "racist", ".", "Facts", "do", "n't", "matter", "u", "Just", "blindly", "follow", "the", "herd", "."]
# ::lemmas ["race", "do", "not", "matter", "to", "i", "nor", "should", "it", "matter", "to", "this", "case", ".", "you", "be", "the", "racist", ".", "fact", "do", "not", "matter", "u", "just", "blindly", "follow", "the", "herd", "."]
(c9-4 / multi-sentence
      :snt1 (c9-11 / and
                   :op1 (c9-15 / matter-01
                               :ARG1 (c9-12 / race)
                               :ARG2 (c9-9 / i)
                               :polarity -)
                   :op2 (c9-1 / recommend-01
                              :ARG1 (c9-13 / matter-01
                                           :ARG1 c9-12
                                           :ARG2 (c9-10 / case-04
                                                        :ARG1 (c9-3 / this)))
                              :polarity -))
      :snt2 (c9-6 / racist
                  :domain (c9-0 / you))
      :snt3 (c9-8 / matter-01
                  :ARG1 (c9-5 / fact)
                  :ARG2 c9-0
                  :polarity -)
      :snt4 (c9-14 / follow-02
                   :ARG0 c9-0)
      :ARG1 (c9-2 / herd)
      :manner (c9-16 / blind)
      :mod (c9-7 / just))

# ::snt you do a lot of bitching and whining, but never make any points.
# ::tokens ["you", "do", "a", "lot", "of", "bitching", "and", "whining", ",", "but", "never", "make", "any", "points", "."]
# ::lemmas ["you", "do", "a", "lot", "of", "bitching", "and", "whining", ",", "but", "never", "make", "any", "point", "."]
(c10-3 / contrast-01
       :ARG1 (c10-2 / do-02
                    :ARG0 (c10-0 / you)
                    :ARG1 (c10-5 / and
                                 :op1 (c10-8 / bitch-01
                                             :ARG0 c10-0)
                                 :op2 (c10-1 / whine-01
                                             :ARG0 c10-0)
                                 :quant (c10-6 / lot)))
       :ARG2 (c10-4 / point-04
                    :ARG0 c10-0
                    :time (c10-7 / ever)
                    :polarity -))

# ::snt yep this picture proves he wasn't on his knees with his hands up. And the Mr Wilson didn't empty his gun on him. Nice work.
# ::tokens ["yep", "this", "picture", "proves", "he", "was", "n't", "on", "his", "knees", "with", "his", "hands", "up", ".", "And", "the", "Mr", "Wilson", "did", "n't", "empty", "his", "gun", "on", "him", ".", "Nice", "work", "."]
# ::lemmas ["yep", "this", "picture", "prove", "he", "be", "not", "on", "his", "knee", "with", "his", "hand", "up", ".", "and", "the", "Mr", "Wilson", "do", "not", "empty", "his", "gun", "on", "he", ".", "nice", "work", "."]
(c11-6 / multi-sentence
       :snt1 (c11-11 / prove-01
                     :ARG0 (c11-9 / picture
                                  :mod (c11-5 / this))
                     :ARG1 (c11-0 / kneel-01
                                  :ARG0 (c11-3 / he
                                               :part (c11-8 / hand
                                                            :ARG1-of (c11-12 / up-03)))
                                  :polarity -)
                     :mod (c11-1 / yep
                                 :mode expressive))
       :snt2 (c11-13 / and
                     :op2 (c11-16 / empty-01
                                  :ARG0 (c11-2 / person
                                               :name (c11-15 / name
                                                             :op1 "Mr"
                                                             :op2 "Wilson"))
                                  :ARG1 (c11-14 / gun
                                                :poss c11-2)
                                  :ARG2 (c11-7 / he)
                                  :polarity -))
       :snt3 (c11-4 / work-01
                    :ARG1-of (c11-10 / nice-01)))

# ::snt That person does not look . It actually looks a lot like a looter with their face covered that was photographed by
# ::tokens ["That", "person", "does", "not", "look", ".", "It", "actually", "looks", "a", "lot", "like", "a", "looter", "with", "their", "face", "covered", "that", "was", "photographed", "by"]
# ::lemmas ["that", "person", "do", "not", "look", ".", "it", "actually", "look", "a", "lot", "like", "a", "looter", "with", "their", "face", "cover", "that", "be", "photograph", "by"]
(c12-2 / multi-sentence
       :snt1 (c12-9 / look-02
                    :ARG0 (c12-5 / person
                                 :mod (c12-1 / that))
                    :polarity -)
       :snt2 (c12-13 / look-02
                     :ARG0 (c12-6 / it)
                     :ARG1 (c12-4 / person
                                  :ARG0-of (c12-12 / loot-01)
                                  :part (c12-3 / face
                                               :ARG1-of (c12-7 / cover-02)
                                               :part-of c12-4)
                                  :part-of (c12-0 / photograph-01
                                                  :ARG0 (c12-10 / person)))
                     :ARG1-of (c12-11 / actual-02)
                     :degree (c12-8 / lot)))

# ::snt Take a look at college football players, roughly same size and maturity (in terms of looking older).
# ::tokens ["Take", "a", "look", "at", "college", "football", "players", ",", "roughly", "same", "size", "and", "maturity", "(", "in", "terms", "of", "looking", "older", ")", "."]
# ::lemmas ["take", "a", "look", "at", "college", "football", "player", ",", "roughly", "same", "size", "and", "maturity", "(", "in", "term", "of", "look", "old", ")", "."]
(c13-8 / look-01
       :ARG0 (c13-0 / you)
       :ARG1 (c13-6 / person
                    :ARG0-of (c13-5 / play-01
                                    :ARG1 (c13-3 / football
                                                 :mod (c13-7 / college)))
                    :ARG1-of (c13-13 / same-01
                                     :ARG2 (c13-9 / and
                                                  :op1 (c13-1 / size
                                                              :poss c13-6)
                                                  :op2 (c13-4 / mature-02
                                                              :ARG1 c13-6))
                                     :degree (c13-10 / roughly)
                                     :topic (c13-14 / look-01
                                                    :ARG0 c13-6
                                                    :ARG1 (c13-11 / old
                                                                  :ARG2-of (c13-2 / have-degree-91
                                                                                  :ARG1 c13-6
                                                                                  :ARG3 (c13-12 / more))))))
       :mode imperative)

# ::snt my brother played, I'm familiar with their size
# ::tokens ["my", "brother", "played", ",", "I", "'m", "familiar", "with", "their", "size"]
# ::lemmas ["my", "brother", "play", ",", "i", "be", "familiar", "with", "their", "size"]
(c14-6 / and
       :op1 (c14-5 / play-01
                   :ARG0 (c14-3 / person
                                :ARG0-of (c14-0 / have-rel-role-91
                                                :ARG1 (c14-4 / i)
                                                :ARG2 (c14-8 / brother))))
       :op2 (c14-2 / familiarize-01
                   :ARG1 c14-4
                   :ARG2 (c14-7 / size
                                :poss (c14-1 / they))))

# ::snt check your facts and the pics from what he was wearing when he was gunned down, smh
# ::tokens ["check", "your", "facts", "and", "the", "pics", "from", "what", "he", "was", "wearing", "when", "he", "was", "gunned", "down", ",", "smh"]
# ::lemmas ["check", "your", "fact", "and", "the", "pic", "from", "what", "he", "be", "wear", "when", "he", "be", "gun", "down", ",", "smh"]
(c15-7 / check-01
       :ARG0 (c15-0 / you)
       :ARG1 (c15-8 / and
                    :op1 (c15-5 / fact
                                :poss c15-0)
                    :op2 (c15-6 / picture
                                :source (c15-4 / thing
                                               :ARG1-of (c15-1 / wear-01
                                                               :ARG0 (c15-2 / he)
                                                               :time (c15-9 / shoot-down-05
                                                                            :ARG1 c15-2)))))
       :mod (c15-3 / smh
                   :mode expressive)
       :mode imperative)

# ::snt Good folk of Ferguson, Support your Police Dept., Riot against the THUGS in your town.
# ::tokens ["Good", "folk", "of", "Ferguson", ",", "Support", "your", "Police", "Dept", ".", ",", "Riot", "against", "the", "THUGS", "in", "your", "town", "."]
# ::lemmas ["good", "folk", "of", "Ferguson", ",", "support", "your", "Police", "Dept", ".", ",", "Riot", "against", "the", "thugs", "in", "your", "town", "."]
(c16-10 / support-01
        :ARG0 (c16-1 / folk
                     :ARG1-of (c16-6 / good-02)
                     :mod (c16-4 / city
                                 :name (c16-11 / name
                                               :op1 "Ferguson")))
        :ARG1 (c16-7 / and
                     :op1 (c16-3 / department
                                 :mod (c16-5 / police)
                                 :poss c16-1)
                     :op2 (c16-8 / riot-01
                                 :ARG0-of (c16-9 / oppose-01
                                                 :ARG1 (c16-0 / thug
                                                              :location (c16-2 / town
                                                                               :poss c16-1)))))
        :mode imperative)

# ::snt This proves what? RT Update: police release stills from convenience store footage showing robbery
# ::tokens ["This", "proves", "what", "?", "RT", "Update", ":", "police", "release", "stills", "from", "convenience", "store", "footage", "showing", "robbery"]
# ::lemmas ["this", "prove", "what", "?", "RT", "Update", ":", "police", "release", "still", "from", "convenience", "store", "footage", "show", "robbery"]
(c17-5 / multi-sentence
       :snt1 (c17-8 / prove-01
                    :polarity (c17-11 / amr-unknown)
                    :ARG0 (c17-4 / this)
                    :ARG1 (c17-13 / amr-unknown))
       :snt2 (c17-10 / update-02
                     :ARG0 (c17-7 / publication
                                  :name (c17-15 / name
                                                :op1 "RT"))
                     :ARG2 (c17-12 / release-01
                                   :ARG0 (c17-2 / police)
                                   :ARG1 (c17-14 / still)
                                   :source (c17-6 / footage
                                                  :source (c17-3 / store
                                                                 :mod (c17-9 / convenience))
                                                  :ARG0-of (c17-1 / show-01
                                                                  :ARG1 (c17-0 / rob-01))))))

# ::snt That maybe he did try &amp; take cops gun though window (something witnesses could not see). This goes toward CHARACTER.
# ::tokens ["That", "maybe", "he", "did", "try", "&", "amp", ";", "take", "cops", "gun", "though", "window", "(", "something", "witnesses", "could", "not", "see", ")", ".", "This", "goes", "toward", "CHARACTER", "."]
# ::lemmas ["that", "maybe", "he", "do", "try", "&", "amp", ";", "take", "cop", "gun", "though", "window", "(", "something", "witness", "could", "not", "see", ")", ".", "this", "go", "toward", "CHARACTER", "."]
(c18-4 / multi-sentence
       :snt1 (c18-9 / possible-01
                    :ARG1 (c18-11 / and
                                  :op1 (c18-3 / try-01
                                              :ARG0 (c18-1 / he))
                                  :op2 (c18-14 / amp)))
       :snt2 (c18-5 / take-01
                    :ARG0 c18-1
                    :ARG1 (c18-12 / gun
                                  :poss (c18-10 / cop))
                    :direction (c18-0 / window)
                    :ARG1-of (c18-16 / see-01
                                     :ARG0 (c18-8 / person
                                                  :ARG0-of (c18-15 / witness-01))
                                     :ARG1-of (c18-2 / possible-01
                                                     :polarity -)))
       :snt3 (c18-6 / go-06
                    :ARG1 (c18-7 / this)
                    :ARG2 (c18-13 / criminal-03)))

# ::snt Gentle Giant, RIGHT. Go arrest that partner he had too.
# ::tokens ["Gentle", "Giant", ",", "RIGHT", ".", "Go", "arrest", "that", "partner", "he", "had", "too", "."]
# ::lemmas ["Gentle", "Giant", ",", "RIGHT", ".", "go", "arrest", "that", "partner", "he", "have", "too", "."]
(c19-4 / multi-sentence
       :snt1 (c19-11 / right-06
                     :ARG2 (c19-8 / person
                                  :name (c19-12 / name
                                                :op1 "Gentle"
                                                :op2 "Giant")))
       :snt2 (c19-9 / go-05
                    :ARG0 (c19-0 / you)
                    :ARG1 (c19-10 / arrest-01
                                  :ARG0 c19-0
                                  :ARG1 (c19-7 / person
                                               :ARG0-of (c19-2 / have-rel-role-91
                                                               :ARG1 (c19-6 / he)
                                                               :ARG2 (c19-1 / partner))
                                               :mod (c19-3 / that)
                                               :mod (c19-5 / too)))
                    :mode imperative))

# ::snt JUSTICE FOR THE POLICE DEPT. they were doing their job &amp; protecting your sorry butts.
# ::tokens ["JUSTICE", "FOR", "THE", "POLICE", "DEPT", ".", "they", "were", "doing", "their", "job", "&", "amp", ";", "protecting", "your", "sorry", "butts", "."]
# ::lemmas ["justice", "for", "the", "police", "dept", ".", "they", "be", "do", "their", "job", "&", "amp", ";", "protect", "your", "sorry", "butts", "."]
(c20-2 / multi-sentence
       :snt2 (c20-6 / and
                    :op1 (c20-4 / do-02
                                :ARG0 (c20-1 / they)
                                :ARG1 (c20-3 / job
                                             :poss c20-1))
                    :op2 (c20-5 / protect-01
                                :ARG0 c20-1
                                :ARG1 (c20-10 / butt
                                              :part-of (c20-0 / you)
                                              :ARG1-of (c20-8 / sorry-01))))
       :snt1 (c20-7 / law
                    :name (c20-9 / name
                                 :op1 "Justices"
                                 :op2 "for"
                                 :op3 "the"
                                 :op4 "POLICE")))

# ::snt are you really justifying the murder of an unarmed kid? o
# ::tokens ["are", "you", "really", "justifying", "the", "murder", "of", "an", "unarmed", "kid", "?", "o"]
# ::lemmas ["be", "you", "really", "justify", "the", "murder", "of", "an", "unarmed", "kid", "?", "o"]
(c21-2 / justify-01
       :polarity (c21-4 / amr-unknown)
       :ARG0 (c21-1 / you)
       :ARG1 (c21-3 / murder-01
                    :ARG1 (c21-0 / kid
                                 :ARG1-of (c21-6 / arm-01
                                                 :polarity -)))
       :ARG1-of (c21-5 / real-04))

# ::snt He wasn't a kid, an Adult who was robbing a business.
# ::tokens ["He", "was", "n't", "a", "kid", ",", "an", "Adult", "who", "was", "robbing", "a", "business", "."]
# ::lemmas ["he", "be", "not", "a", "kid", ",", "an", "Adult", "who", "be", "rob", "a", "business", "."]
(c22-2 / and
       :op1 (c22-0 / kid
                   :domain (c22-1 / he)
                   :polarity -)
       :op2 (c22-4 / adult
                   :domain c22-1
                   :ARG0-of (c22-3 / rob-01
                                   :ARG1 (c22-5 / business))))

# ::snt are you justifying the murder of an unarmed ADULT?
# ::tokens ["are", "you", "justifying", "the", "murder", "of", "an", "unarmed", "ADULT", "?"]
# ::lemmas ["be", "you", "justify", "the", "murder", "of", "an", "unarmed", "adult", "?"]
(c23-1 / justify-01
       :polarity (c23-5 / amr-unknown)
       :ARG0 (c23-0 / you)
       :ARG1 (c23-2 / murder-01
                    :ARG1 (c23-3 / person
                                 :ARG1-of (c23-4 / innocent-01)
                                 :ARG1-of (c23-6 / arm-01
                                                 :polarity -))))

# ::snt YES, it was JUSTIFIED
# ::tokens ["YES", ",", "it", "was", "JUSTIFIED"]
# ::lemmas ["yes", ",", "it", "be", "JUSTIFIED"]
(c24-0 / justify-01
       :ARG0 (c24-1 / it))

# ::snt you're one sick racist bitch
# ::tokens ["you", "'re", "one", "sick", "racist", "bitch"]
# ::lemmas ["you", "be", "one", "sick", "racist", "bitch"]
(c25-3 / bitch
       :domain (c25-0 / you)
       :mod (c25-2 / racist)
       :ARG1-of (c25-1 / sick-02))

# ::snt You're one sick stupid person.
# ::tokens ["You", "'re", "one", "sick", "stupid", "person", "."]
# ::lemmas ["you", "be", "one", "sick", "stupid", "person", "."]
(c26-3 / person
       :mod (c26-1 / stupid)
       :ARG1-of (c26-2 / sick-02)
       :domain (c26-0 / you))

# ::snt Wait, so why didn't we shoot down the ARMED (white) men who shot up theaters and schools?
# ::tokens ["Wait", ",", "so", "why", "did", "n't", "we", "shoot", "down", "the", "ARMED", "(", "white", ")", "men", "who", "shot", "up", "theaters", "and", "schools", "?"]
# ::lemmas ["wait", ",", "so", "why", "do", "not", "we", "shoot", "down", "the", "ARMED", "(", "white", ")", "man", "who", "shoot", "up", "theater", "and", "school", "?"]
(c27-8 / infer-01
       :ARG1 (c27-9 / amr-unknown
                    :ARG0-of (c27-7 / cause-01
                                    :ARG1 (c27-12 / shoot-down-05
                                                  :ARG0 (c27-2 / we)
                                                  :ARG1 (c27-6 / man
                                                               :ARG1-of (c27-10 / arm-01)
                                                               :ARG1-of (c27-11 / white-02)
                                                               :ARG0-of (c27-3 / shoot-down-05
                                                                               :ARG1 (c27-4 / and
                                                                                            :op1 (c27-5 / theater)
                                                                                            :op2 (c27-1 / school))))
                                                  :polarity -)))
       :ARG2 (c27-13 / wait-01
                     :ARG1 (c27-0 / you)
                     :mode imperative))

# ::snt They killed themselves, Thugs are thugs whatever color they are.
# ::tokens ["They", "killed", "themselves", ",", "Thugs", "are", "thugs", "whatever", "color", "they", "are", "."]
# ::lemmas ["they", "kill", "themselves", ",", "thug", "be", "thug", "whatever", "color", "they", "be", "."]
(c28-4 / and
       :op1 (c28-0 / kill-01
                   :ARG0 (c28-2 / they
                                :ARG1-of c28-0))
       :op2 (c28-1 / thug
                   :domain c28-1)
       :ARG1-of (c28-5 / regardless-91
                       :ARG2 (c28-3 / color
                                    :domain c28-1)))

# ::snt um, they killed themself.
# ::tokens ["um", ",", "they", "killed", "themself", "."]
# ::lemmas ["um", ",", "they", "kill", "themself", "."]
(c29-0 / kill-01
       :ARG0 (c29-2 / they)
       :ARG1 (c29-1 / they))

# ::snt James Holmes is still alive. So is the guy who shot a congresswomen in Az.
# ::tokens ["James", "Holmes", "is", "still", "alive", ".", "So", "is", "the", "guy", "who", "shot", "a", "congresswomen", "in", "Az", "."]
# ::lemmas ["James", "Holmes", "be", "still", "alive", ".", "so", "be", "the", "guy", "who", "shoot", "a", "congresswoman", "in", "Az", "."]
(c30-5 / multi-sentence
       :snt1 (c30-8 / live-01
                    :ARG0 (c30-7 / person
                                 :name (c30-13 / name
                                               :op1 "James"
                                               :op2 "Holmes"))
                    :mod (c30-11 / still))
       :snt2 (c30-12 / live-01
                     :ARG0 (c30-9 / guy
                                  :ARG0-of (c30-2 / shoot-02
                                                  :ARG1 (c30-1 / woman
                                                               :ARG0-of (c30-3 / have-org-role-91
                                                                               :ARG1 (c30-4 / government-organization
                                                                                            :name (c30-6 / name
                                                                                                         :op1 "Congress"))))
                                                  :location (c30-0 / state
                                                                   :name (c30-10 / name
                                                                                 :op1 "Az"))))))

# ::snt .
# ::tokens ["."]
# ::lemmas ["."]
(c31-0 / amr-empty)

# ::snt Aaaaand this
# ::tokens ["Aaaaand", "this"]
# ::lemmas ["Aaaaand", "this"]
(c32-0 / and
       :op2 (c32-1 / this))

# ::snt :Call me "dumb" all you want. Just realize that probably makes your tawdry, feeble-minded ass stupid (at best) in comparison.
# ::tokens [":", "Call", "me", "\"", "dumb", "\"", "all", "you", "want", ".", "Just", "realize", "that", "probably", "makes", "your", "tawdry", ",", "feeble", "-", "minded", "ass", "stupid", "(", "at", "best", ")", "in", "comparison", "."]
# ::lemmas [":", "call", "i", "\"", "dumb", "\"", "all", "you", "want", ".", "just", "realize", "that", "probably", "make", "your", "tawdry", ",", "feeble", "-", "minded", "ass", "stupid", "(", "at", "well", ")", "in", "comparison", "."]
(c33-18 / multi-sentence
        :snt1 (c33-9 / call-01
                     :ARG0 (c33-6 / you)
                     :ARG1 (c33-13 / i)
                     :ARG2 (c33-12 / dumb)
                     :ARG1-of (c33-1 / want-01
                                     :ARG0 c33-6
                                     :degree (c33-15 / all))
                     :mode imperative)
        :snt2 (c33-2 / realize-01
                     :ARG0 (c33-17 / you)
                     :ARG1 (c33-14 / probable
                                   :domain (c33-19 / make-02
                                                   :ARG0 c33-9
                                                   :ARG1 (c33-10 / stupid
                                                                 :domain (c33-4 / ass
                                                                                :part-of (c33-0 / you)
                                                                                :mod (c33-7 / tawdry)
                                                                                :part (c33-3 / mind
                                                                                             :mod (c33-11 / feeble)))
                                                                 :ARG1-of (c33-5 / compare-01
                                                                                 :ARG2 c33-17))
                                                   :mod (c33-16 / at-best)))
                     :mod (c33-8 / just)
                     :mode imperative))

# ::snt you are saying that's mike brown in the picture? It's not. Two events unconnected. What's your point?
# ::tokens ["you", "are", "saying", "that", "'s", "mike", "brown", "in", "the", "picture", "?", "It", "'s", "not", ".", "Two", "events", "unconnected", ".", "What", "'s", "your", "point", "?"]
# ::lemmas ["you", "be", "say", "that", "be", "mike", "brown", "in", "the", "picture", "?", "it", "be", "not", ".", "Two", "event", "unconnected", ".", "what", "be", "your", "point", "?"]
(c34-4 / multi-sentence
       :snt1 (c34-10 / say-01
                     :ARG0 (c34-0 / you)
                     :ARG1 (c34-13 / be-located-at-91
                                   :ARG1 (c34-6 / person
                                                :name (c34-12 / name
                                                              :op1 "Mike"
                                                              :op2 "Brown"))
                                   :ARG2 (c34-5 / picture)))
       :snt2 (c34-2 / have-polarity-91
                    :ARG1 (c34-7 / it)
                    :ARG2 -)
       :snt3 (c34-3 / event
                    :ARG1-of (c34-8 / connect-01
                                    :polarity -)
                    :quant 2)
       :snt4 (c34-1 / point-04
                    :ARG0 (c34-11 / you)
                    :ARG1 (c34-9 / amr-unknown)))

# ::snt You are a Peter Piper follower. Monkey see, monkey do.
# ::tokens ["You", "are", "a", "Peter", "Piper", "follower", ".", "Monkey", "see", ",", "monkey", "do", "."]
# ::lemmas ["you", "be", "a", "Peter", "Piper", "follower", ".", "monkey", "see", ",", "monkey", "do", "."]
(c35-1 / multi-sentence
       :snt1 (c35-5 / person
                    :ARG0-of (c35-2 / follow-02
                                    :ARG1 (c35-3 / person
                                                 :name (c35-9 / name
                                                              :op1 "Peter"
                                                              :op2 "Piper")))
                    :domain (c35-0 / you))
       :snt2 (c35-8 / see-01
                    :ARG0 c35-0
                    :mode imperative)
       :mod (c35-7 / monkey)
       :snt3 (c35-6 / monkey
                    :ARG0-of (c35-4 / do-02)))

# ::snt what point are you making about the photo?
# ::tokens ["what", "point", "are", "you", "making", "about", "the", "photo", "?"]
# ::lemmas ["what", "point", "be", "you", "make", "about", "the", "photo", "?"]
(c36-3 / point-04
       :ARG0 (c36-0 / you)
       :ARG1 (c36-2 / photograph-01)
       :ARG2 (c36-1 / amr-unknown))

# ::snt I think is saying: tough guy in pic is low life scum whether it's the late Mr. Brown or not
# ::tokens ["I", "think", "is", "saying", ":", "tough", "guy", "in", "pic", "is", "low", "life", "scum", "whether", "it", "'s", "the", "late", "Mr.", "Brown", "or", "not"]
# ::lemmas ["i", "think", "be", "say", ":", "tough", "guy", "in", "pic", "be", "low", "life", "scum", "whether", "it", "be", "the", "late", "Mr.", "Brown", "or", "not"]
(c37-2 / think-01
       :ARG0 (c37-4 / i)
       :ARG1 (c37-10 / say-01
                     :ARG1 (c37-1 / scum
                                  :ARG1-of (c37-6 / low-life-00)
                                  :domain (c37-7 / guy
                                                 :location (c37-5 / pic))
                                  :ARG1-of (c37-8 / regardless-91
                                                  :ARG2 (c37-9 / or
                                                               :op1 (c37-3 / person
                                                                           :name (c37-12 / name
                                                                                         :op1 "Mr."
                                                                                         :op2 "Brown")
                                                                           :ARG1-of (c37-11 / late-03))
                                                               :op2 (c37-0 / person
                                                                           :name c37-12
                                                                           :polarity -
                                                                           :op1 "Mr."
                                                                           :op2 "Brown"))))))

# ::snt then what's the relevance?
# ::tokens ["then", "what", "'s", "the", "relevance", "?"]
# ::lemmas ["then", "what", "be", "the", "relevance", "?"]
(c38-1 / relevant-01
       :ARG1 (c38-0 / amr-unknown)
       :time (c38-2 / then))

# ::snt low life scum I think
# ::tokens ["low", "life", "scum", "I", "think"]
# ::lemmas ["low", "life", "scum", "i", "think"]
(c39-0 / think-01
       :ARG0 (c39-1 / i)
       :ARG1 (c39-3 / scum
                    :mod (c39-2 / life
                                :ARG1-of (c39-4 / low-04))))

# ::snt still unclear in the context of the shooting of an unarmed teen. But ok.
# ::tokens ["still", "unclear", "in", "the", "context", "of", "the", "shooting", "of", "an", "unarmed", "teen", ".", "But", "ok", "."]
# ::lemmas ["still", "unclear", "in", "the", "context", "of", "the", "shooting", "of", "an", "unarmed", "teen", ".", "but", "ok", "."]
(c40-2 / multi-sentence
       :snt1 (c40-4 / clear-06
                    :mod (c40-7 / still)
                    :topic (c40-0 / shoot-02
                                  :ARG1 (c40-1 / teen
                                               :ARG1-of (c40-5 / arm-01
                                                               :polarity -)))
                    :polarity -)
       :snt2 (c40-6 / contrast-01
                    :ARG2 (c40-3 / okay-01)))

# ::snt is an ADULT
# ::tokens ["is", "an", "ADULT"]
# ::lemmas ["be", "an", "adult"]
(c41-0 / idiot)

# ::snt I said teen not child but again, how is the pic relevant?
# ::tokens ["I", "said", "teen", "not", "child", "but", "again", ",", "how", "is", "the", "pic", "relevant", "?"]
# ::lemmas ["i", "say", "teen", "not", "child", "but", "again", ",", "how", "be", "the", "pic", "relevant", "?"]
(c42-2 / contrast-01
       :ARG1 (c42-8 / say-01
                    :ARG0 (c42-1 / i)
                    :ARG1 (c42-6 / child
                                 :domain (c42-0 / teen)
                                 :polarity -))
       :ARG2 (c42-5 / relevant-01
                    :ARG1 (c42-3 / pic)
                    :manner (c42-4 / amr-unknown)
                    :mod (c42-7 / again)))

# ::snt A black cop shot Mr. Brown if he is charged (it will be racist) there will be more riots.
# ::tokens ["A", "black", "cop", "shot", "Mr.", "Brown", "if", "he", "is", "charged", "(", "it", "will", "be", "racist", ")", "there", "will", "be", "more", "riots", "."]
# ::lemmas ["a", "black", "cop", "shoot", "Mr.", "Brown", "if", "he", "be", "charge", "(", "it", "will", "be", "racist", ")", "there", "will", "be", "more", "riot", "."]
(c43-4 / and
       :op1 (c43-7 / shoot-02
                   :ARG0 (c43-3 / cop
                                :ARG1-of (c43-9 / black-05))
                   :ARG1 (c43-2 / person
                                :name (c43-8 / name
                                             :op1 "Mr."
                                             :op2 "Brown"))
                   :condition (c43-6 / charge-05
                                     :ARG1 c43-2
                                     :ARG2 (c43-5 / racism)))
       :op2 (c43-0 / riot-01
                   :quant (c43-1 / more)))

# ::snt Waiting to see an outpouring of sympathy for the owner of the store that was attacked. Not holding my breath.
# ::tokens ["Waiting", "to", "see", "an", "outpouring", "of", "sympathy", "for", "the", "owner", "of", "the", "store", "that", "was", "attacked", ".", "Not", "holding", "my", "breath", "."]
# ::lemmas ["wait", "to", "see", "an", "outpouring", "of", "sympathy", "for", "the", "owner", "of", "the", "store", "that", "be", "attack", ".", "not", "hold", "my", "breath", "."]
(c44-5 / multi-sentence
       :snt1 (c44-1 / wait-01
                    :ARG1 (c44-7 / i)
                    :ARG2 (c44-11 / see-01
                                  :ARG0 c44-7
                                  :ARG1 (c44-10 / outpour-00
                                                :ARG1 (c44-2 / sympathy
                                                             :beneficiary (c44-8 / person
                                                                                 :ARG0-of (c44-6 / own-01
                                                                                                 :ARG1 (c44-0 / store
                                                                                                              :ARG1-of (c44-9 / attack-01))))))))
       :snt2 (c44-3 / hold-01
                    :ARG0 (c44-4 / i)
                    :ARG1 (c44-12 / breathe-01
                                  :ARG0 c44-4)
                    :polarity -))

# ::snt doesn't excuse murder
# ::tokens ["does", "n't", "excuse", "murder"]
# ::lemmas ["do", "not", "excuse", "murder"]
(c45-1 / excuse-01
       :ARG2 (c45-0 / murder-01)
       :polarity -)

# ::snt that dude is huge
# ::tokens ["that", "dude", "is", "huge"]
# ::lemmas ["that", "dude", "be", "huge"]
(c46-1 / huge
       :domain (c46-0 / dude
                      :mod (c46-2 / that)))

# ::snt red hat?
# ::tokens ["red", "hat", "?"]
# ::lemmas ["red", "hat", "?"]
(c47-1 / hat
       :polarity (c47-0 / amr-unknown)
       :ARG1-of (c47-2 / red-02))

# ::snt if the officer did his job he would be arrested not murdered. Still the point.
# ::tokens ["if", "the", "officer", "did", "his", "job", "he", "would", "be", "arrested", "not", "murdered", ".", "Still", "the", "point", "."]
# ::lemmas ["if", "the", "officer", "do", "his", "job", "he", "would", "be", "arrest", "not", "murder", ".", "still", "the", "point", "."]
(c48-0 / multi-sentence
       :snt1 (c48-5 / arrest-01
                    :ARG1 (c48-6 / officer)
                    :condition (c48-2 / do-02
                                      :ARG0 c48-6
                                      :ARG1 (c48-1 / job
                                                   :poss c48-6))
                    :ARG1-of (c48-3 / contrast-01
                                    :ARG2 (c48-7 / murder-01
                                                 :ARG1 c48-6
                                                 :polarity -)))
       :snt2 (c48-4 / point-03
                    :mod (c48-8 / still)))

# ::snt here goes the fukkry now look at his picture.o wait he is black robber black. Has it been confirmed. Or just blow smoke our bum
# ::tokens ["here", "goes", "the", "fukkry", "now", "look", "at", "his", "picture.o", "wait", "he", "is", "black", "robber", "black", ".", "Has", "it", "been", "confirmed", ".", "Or", "just", "blow", "smoke", "our", "bum"]
# ::lemmas ["here", "go", "the", "fukkry", "now", "look", "at", "his", "picture.o", "wait", "he", "be", "black", "robber", "black", ".", "have", "it", "be", "confirm", ".", "or", "just", "blow", "smoke", "our", "bum"]
(c49-20 / multi-sentence
        :snt1 (c49-4 / look-01
                     :ARG0 (c49-6 / you)
                     :ARG1 (c49-15 / picture-01
                                   :ARG1 (c49-2 / he))
                     :time (c49-14 / now)
                     :location (c49-8 / here)
                     :mode imperative)
        :snt2 (c49-1 / wait-01
                     :ARG1 (c49-18 / you)
                     :ARG2 (c49-19 / black-05
                                   :ARG1 (c49-13 / he
                                                 :ARG0-of (c49-5 / rob-01))
                                   :ARG1-of (c49-21 / black-05))
                     :mode imperative)
        :snt3 (c49-9 / confirm-01
                     :ARG1 (c49-16 / it))
        :snt4 (c49-17 / or
                      :op2 (c49-3 / blow-03
                                  :ARG0 (c49-0 / you)
                                  :ARG1 (c49-12 / smoke-02
                                                :ARG0 c49-0
                                                :ARG1 (c49-10 / bum
                                                              :poss (c49-11 / we)))
                                  :mod (c49-7 / just)
                                  :mode imperative)))

# ::snt umm wasn't Mike Brown wearing pants, and shoes?
# ::tokens ["umm", "was", "n't", "Mike", "Brown", "wearing", "pants", ",", "and", "shoes", "?"]
# ::lemmas ["umm", "be", "not", "Mike", "Brown", "wear", "pant", ",", "and", "shoe", "?"]
(c50-0 / wear-01
       :ARG0 (c50-2 / person
                    :name (c50-7 / name
                                 :op1 "Mike"
                                 :op2 "Brown"))
       :ARG1 (c50-4 / and
                    :op1 (c50-1 / pant)
                    :op2 (c50-6 / shoe))
       :polarity (c50-5 / amr-unknown)
       :mod (c50-3 / umm
                   :mode expressive))
