# ::snt : Breaking: Two hostage situations in France are linked, Paris prosecutor says
# ::tokens [":", "Breaking", ":", "Two", "hostage", "situations", "in", "France", "are", "linked", ",", "Paris", "prosecutor", "says"]
# ::lemmas [":", "break", ":", "Two", "hostage", "situation", "in", "France", "be", "link", ",", "Paris", "prosecutor", "say"]
(c1-8 / say-01
      :ARG0 (c1-5 / person
                  :ARG0-of (c1-2 / prosecute-01)
                  :location (c1-4 / city
                                  :name (c1-9 / name
                                              :op1 "Paris")))
      :ARG1 (c1-6 / link-01
                  :ARG1 (c1-0 / situation
                              :mod (c1-1 / hostage)
                              :location (c1-7 / country
                                              :name (c1-3 / name
                                                          :op1 "France"))
                              :quant 2)))

# ::snt Can you please identify how LONG these have been ON? it is about p in that area. HOW MANY HOURS ON?
# ::tokens ["Can", "you", "please", "identify", "how", "LONG", "these", "have", "been", "ON", "?", "it", "is", "about", "p", "in", "that", "area", ".", "HOW", "MANY", "HOURS", "ON", "?"]
# ::lemmas ["can", "you", "please", "identify", "how", "long", "these", "have", "be", "ON", "?", "it", "be", "about", "p", "in", "that", "area", ".", "how", "many", "HOURS", "ON", "?"]
(c2-16 / multi-sentence
       :snt1 (c2-10 / possible-01
                    :polarity (c2-11 / amr-unknown)
                    :ARG1 (c2-9 / identify-01
                                :ARG0 (c2-3 / you)
                                :ARG1 (c2-5 / temporal-quantity
                                            :duration-of (c2-15 / this)
                                            :time (c2-14 / before
                                                         :op1 (c2-8 / now))))
                    :polite +)
       :snt2 (c2-18 / be-located-at-91
                    :ARG1 (c2-4 / it)
                    :ARG2 (c2-2 / area
                                :mod (c2-6 / that))
                    :time (c2-13 / about
                                 :op1 (c2-17 / p))
                    :snt3-of c2-16)
       :ARG1 (c2-19 / multiple
                    :op1 (c2-7 / temporal-quantity
                               :unit (c2-0 / hour)
                               :quant 13))
       :ARG2 (c2-12 / on)
       :quant (c2-1 / amr-unknown))

# ::snt the st has been on for h30 and the second for hrs
# ::tokens ["the", "st", "has", "been", "on", "for", "h30", "and", "the", "second", "for", "hrs"]
# ::lemmas ["the", "st", "have", "be", "on", "for", "h30", "and", "the", "second", "for", "hrs"]
(c3-4 / and
      :op1 (c3-6 / on-01
                 :ARG1 (c3-8 / broadcast-program
                             :name (c3-7 / name
                                         :op1 "ST"))
                 :time (c3-3 / date-entity
                             :day 30
                             :month 1))
      :op2 (c3-5 / last-01
                 :ARG1 c3-8
                 :ARG2 (c3-2 / multiple
                             :op1 (c3-1 / temporal-quantity
                                        :unit (c3-0 / hour)
                                        :quant 1))))

# ::snt Thanks. I think posing these situations in context helps us better understand. We are far away.
# ::tokens ["Thanks", ".", "I", "think", "posing", "these", "situations", "in", "context", "helps", "us", "better", "understand", ".", "We", "are", "far", "away", "."]
# ::lemmas ["thank", ".", "i", "think", "pose", "these", "situation", "in", "context", "help", "we", "well", "understand", ".", "we", "be", "far", "away", "."]
(c4-17 / multi-sentence
       :snt1 (c4-4 / thank-01
                   :ARG0 (c4-11 / i)
                   :ARG1 (c4-3 / you))
       :snt2 (c4-16 / think-01
                    :ARG0 c4-11
                    :ARG1 (c4-1 / help-01
                                :ARG0 (c4-12 / pose-03
                                             :ARG1 (c4-9 / situation
                                                         :mod (c4-5 / this))
                                             :ARG2 (c4-7 / context))
                                :ARG1 (c4-2 / understand-01
                                            :ARG0 (c4-0 / we)
                                            :ARG1-of (c4-6 / have-degree-91
                                                           :ARG2 (c4-13 / good-02
                                                                        :ARG1 c4-2)
                                                           :ARG3 (c4-18 / more)))
                                :ARG2 c4-0))
       :snt3 (c4-15 / be-located-at-91
                    :ARG1 (c4-8 / we)
                    :ARG2 (c4-14 / away
                                 :extent (c4-10 / far))))

# ::snt Time to arrest all the hostage takers relatives !
# ::tokens ["Time", "to", "arrest", "all", "the", "hostage", "takers", "relatives", "!"]
# ::lemmas ["time", "to", "arrest", "all", "the", "hostage", "taker", "relative", "!"]
(c5-1 / time
      :time-of (c5-6 / arrest-01
                     :ARG1 (c5-5 / person
                                 :ARG0-of (c5-0 / have-rel-role-91
                                                :ARG1 (c5-4 / person
                                                            :ARG0-of (c5-2 / take-01
                                                                           :ARG1 (c5-3 / hostage)))
                                                :ARG2 (c5-7 / relative))
                                 :mod (c5-8 / all))))

# ::snt knew that an hour ago by the BBC news
# ::tokens ["knew", "that", "an", "hour", "ago", "by", "the", "BBC", "news"]
# ::lemmas ["know", "that", "an", "hour", "ago", "by", "the", "BBC", "news"]
(c6-0 / know-01
      :ARG0 (c6-5 / i)
      :ARG1 (c6-2 / that
                  :ARG1-of (c6-8 / broadcast-program
                                 :name (c6-7 / name
                                             :op1 "BBC"
                                             :op2 "News"))
                  :time (c6-6 / before
                              :op1 (c6-4 / now)
                              :quant (c6-3 / temporal-quantity
                                           :unit (c6-1 / hour)
                                           :quant 1))))

# ::snt to ban religion.
# ::tokens ["to", "ban", "religion", "."]
# ::lemmas ["to", "ban", "religion", "."]
(c7-1 / ban-01
      :ARG1 (c7-0 / religion))

# ::snt Of course they are, fear is best sold in bundles!
# ::tokens ["Of", "course", "they", "are", ",", "fear", "is", "best", "sold", "in", "bundles", "!"]
# ::lemmas ["of", "course", "they", "be", ",", "fear", "be", "well", "sell", "in", "bundle", "!"]
(c8-4 / cause-01
      :ARG0 (c8-5 / good-02
                  :ARG1 (c8-7 / sell-01
                              :ARG1 (c8-2 / fear-01)
                              :manner (c8-8 / bundle-01))
                  :ARG2-of (c8-0 / have-degree-91
                                 :ARG1 c8-7
                                 :ARG3 (c8-3 / most)))
      :ARG1 (c8-1 / they
                  :mod (c8-6 / of-course)))

# ::snt Ok thats good know
# ::tokens ["Ok", "that", "s", "good", "know"]
# ::lemmas ["ok", "that", "s", "good", "know"]
(c9-1 / good-02
      :ARG1 (c9-2 / that)
      :ARG1-of (c9-0 / know-01))

# ::snt oh really maybe because it's false flag
# ::tokens ["oh", "really", "maybe", "because", "it", "'s", "false", "flag"]
# ::lemmas ["oh", "really", "maybe", "because", "it", "be", "false", "flag"]
(c10-4 / possible-01
       :ARG1 (c10-2 / cause-01
                    :ARG0 (c10-0 / flag
                                 :mod (c10-6 / false)
                                 :domain (c10-3 / it)))
       :ARG1-of (c10-5 / real-04)
       :mod (c10-1 / oh
                   :mode expressive))
