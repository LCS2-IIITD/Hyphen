# ::snt God i hope a
# ::tokens ["God", "i", "hope", "a"]
# ::lemmas ["God", "i", "hope", "a"]
(c1-1 / hope-01
      :ARG0 (c1-2 / i)
      :ARG1 (c1-0 / person
                  :name (c1-3 / name
                              :op1 "God")))

# ::snt Amen
# ::tokens ["Amen"]
# ::lemmas ["amen"]
(c2-0 / man)

# ::snt All a con game. Smh
# ::tokens ["All", "a", "con", "game", ".", "Smh"]
# ::lemmas ["all", "a", "con", "game", ".", "smh"]
(c3-0 / multi-sentence
      :snt1 (c3-3 / game
                  :mod (c3-1 / con)
                  :domain (c3-2 / all))
      :snt2 (c3-4 / smh
                  :mode expressive))

# ::snt FEM
# ::tokens ["FEM"]
# ::lemmas ["FEM"]
(c4-1 / person
      :name (c4-0 / name
                  :op1 "FEM"))

# ::snt Stop these bots!!
# ::tokens ["Stop", "these", "bots", "!", "!"]
# ::lemmas ["stop", "these", "bot", "!", "!"]
(c5-1 / stop-01
      :ARG0 (c5-0 / you)
      :ARG1 (c5-3 / bot
                  :mod (c5-2 / this))
      :mode imperative)

# ::snt Ty CNN horrible!
# ::tokens ["Ty", "CNN", "horrible", "!"]
# ::lemmas ["ty", "CNN", "horrible", "!"]
(c6-1 / horrible
      :domain (c6-2 / publication
                    :name (c6-0 / name
                                :op1 "CNN")))

# ::snt Thanks sandra
# ::tokens ["Thanks", "sandra"]
# ::lemmas ["thank", "sandra"]
(c7-3 / thank-01
      :ARG0 (c7-2 / i)
      :ARG1 (c7-1 / person
                  :name (c7-0 / name
                              :op1 "sandra")))

# ::snt I hope CNN gets taken off the air
# ::tokens ["I", "hope", "CNN", "gets", "taken", "off", "the", "air"]
# ::lemmas ["i", "hope", "CNN", "gets", "take", "off", "the", "air"]
(c8-0 / hope-01
      :ARG0 (c8-3 / i)
      :ARG1 (c8-1 / take-off-07
                  :ARG1 (c8-2 / publication
                              :name (c8-5 / name
                                          :op1 "CNN"))
                  :source (c8-4 / air)))

# ::snt Pics or it ain't true
# ::tokens ["Pics", "or", "it", "ai", "n't", "true"]
# ::lemmas ["pic", "or", "it", "be", "not", "true"]
(c9-3 / or
      :op1 (c9-2 / politics)
      :op2 (c9-1 / true-01
                 :ARG1 (c9-0 / it)
                 :polarity -))

# ::snt I just looke
# ::tokens ["I", "just", "looke"]
# ::lemmas ["i", "just", "looke"]
(c10-1 / looke-01
       :ARG0 (c10-2 / i)
       :mod (c10-0 / just))

# ::snt Is it fake n
# ::tokens ["Is", "it", "fake", "n"]
# ::lemmas ["be", "it", "fake", "n"]
(c11-0 / fake-02
       :ARG1 (c11-2 / it)
       :polarity (c11-1 / amr-unknown))

# ::snt ITA...Hate t
# ::tokens ["ITA", "...", "Hate", "t"]
# ::lemmas ["ITA", "...", "hate", "t"]
(c12-0 / hate-01
       :ARG0 (c12-1 / i))

# ::snt I'm hearing
# ::tokens ["I", "'m", "hearing"]
# ::lemmas ["i", "be", "hear"]
(c13-0 / hear-01
       :ARG0 (c13-1 / i))

# ::snt And you need
# ::tokens ["And", "you", "need"]
# ::lemmas ["and", "you", "need"]
(c14-1 / and
       :op2 (c14-2 / need-01
                   :ARG0 (c14-0 / you)))

# ::snt LOL!!! posting RUSSIAN BOTS???
# ::tokens ["LOL", "!", "!", "!", "posting", "RUSSIAN", "BOTS", "?", "?", "?"]
# ::lemmas ["LOL", "!", "!", "!", "post", "RUSSIAN", "BOTS", "?", "?", "?"]
(c15-1 / post-01
       :ARG1 (c15-5 / shot
                    :mod (c15-0 / country
                                :name (c15-7 / name
                                             :op1 "US")))
       :polarity (c15-3 / amr-unknown)
       :manner (c15-4 / laugh-01
                      :ARG0 (c15-2 / i)
                      :manner (c15-6 / loud)
                      :mode expressive))

# ::snt why would u
# ::tokens ["why", "would", "u"]
# ::lemmas ["why", "would", "u"]
(c16-2 / cause-01
       :ARG0 (c16-1 / amr-unknown)
       :ARG1 (c16-0 / you))

# ::snt Anything fro
# ::tokens ["Anything", "fro"]
# ::lemmas ["anything", "fro"]
(c17-1 / anything
       :mod (c17-0 / fro))

# ::snt Puerto Rico
# ::tokens ["Puerto", "Rico"]
# ::lemmas ["Puerto", "Rico"]
(c18-1 / country
       :name (c18-0 / name
                    :op1 "Puerto"
                    :op2 "Rico"))

# ::snt Turn off Fak
# ::tokens ["Turn", "off", "Fak"]
# ::lemmas ["turn", "off", "Fak"]
(c19-3 / turn-off-07
       :ARG0 (c19-0 / you)
       :ARG1 (c19-2 / publication
                    :name (c19-1 / name
                                 :op1 "Fak"))
       :mode imperative)

# ::snt Se
# ::tokens ["Se"]
# ::lemmas ["se"]
(c20-1 / person
       :name (c20-0 / name
                    :op1 "Se"))

# ::snt YES THEY are
# ::tokens ["YES", "THEY", "are"]
# ::lemmas ["yes", "they", "be"]
(c21-0 / they)

# ::snt Amen!!!
# ::tokens ["Amen", "!", "!", "!"]
# ::lemmas ["amen", "!", "!", "!"]
(c22-0 / amen
       :mode expressive)

# ::snt Here R the p
# ::tokens ["Here", "R", "the", "p"]
# ::lemmas ["here", "r", "the", "p"]
(c23-0 / string-entity
       :location (c23-1 / here)
       :value "R the")

# ::snt Sorry u had
# ::tokens ["Sorry", "u", "had"]
# ::lemmas ["sorry", "u", "have"]
(c24-1 / sorry-01
       :ARG1 (c24-3 / i)
       :ARG2 (c24-2 / event
                    :mod (c24-0 / you)))

# ::snt This needs t
# ::tokens ["This", "needs", "t"]
# ::lemmas ["this", "need", "t"]
(c25-0 / need-01
       :ARG0 (c25-1 / this))

# ::snt A great nati
# ::tokens ["A", "great", "nati"]
# ::lemmas ["a", "great", "nati"]
(c26-1 / nati
       :mod (c26-0 / great))

# ::snt Fake account or a scam artist
# ::tokens ["Fake", "account", "or", "a", "scam", "artist"]
# ::lemmas ["fake", "account", "or", "a", "scam", "artist"]
(c27-2 / or
       :op1 (c27-1 / account
                   :ARG1-of (c27-0 / fake-02))
       :op2 (c27-3 / artist
                   :ARG0-of (c27-4 / scam-01)))

# ::snt Scientology
# ::tokens ["Scientology"]
# ::lemmas ["scientology"]
(c28-0 / science)

# ::snt And you pers
# ::tokens ["And", "you", "pers"]
# ::lemmas ["and", "you", "per"]
(c29-1 / and
       :op2 (c29-3 / person
                   :name (c29-2 / name
                                :op1 " pers")
                   :domain (c29-0 / you)))

# ::snt CNN LIARS??M
# ::tokens ["CNN", "LIARS??M"]
# ::lemmas ["CNN", "liars??m"]
(c30-2 / person
       :polarity (c30-3 / amr-unknown)
       :name (c30-5 / name
                    :op1 "M")
       :ARG0-of (c30-4 / lie-08
                       :ARG1 (c30-0 / publication
                                    :name (c30-1 / name
                                                 :op1 "CNN"))))

# ::snt CNN turned off. Next?
# ::tokens ["CNN", "turned", "off", ".", "Next", "?"]
# ::lemmas ["CNN", "turn", "off", ".", "next", "?"]
(c31-1 / multi-sentence
       :snt1 (c31-0 / turn-off-07
                    :ARG1 (c31-3 / publication
                                 :name (c31-5 / name
                                              :op1 "CNN")))
       :snt2 (c31-2 / next
                    :polarity (c31-4 / amr-unknown)))

# ::snt Turned off years ago.
# ::tokens ["Turned", "off", "years", "ago", "."]
# ::lemmas ["turn", "off", "years", "ago", "."]
(c32-3 / turn-off-07
       :time (c32-5 / before
                    :op1 (c32-4 / now)
                    :quant (c32-2 / multiple
                                  :op1 (c32-1 / temporal-quantity
                                              :unit (c32-0 / year)
                                              :quant 1))))

# ::snt celebrities?
# ::tokens ["celebrities", "?"]
# ::lemmas ["celebrity", "?"]
(c33-1 / celebrity
       :polarity (c33-0 / amr-unknown))

# ::snt CNN you are a Media EMBARRASSMENT
# ::tokens ["CNN", "you", "are", "a", "Media", "EMBARRASSMENT"]
# ::lemmas ["CNN", "you", "be", "a", "Media", "EMBARRASSMENT"]
(c34-3 / embarrass-01
       :ARG0 (c34-0 / media)
       :ARG1 (c34-2 / publication
                    :name (c34-1 / name
                                 :op1 "CNN")))

# ::snt RT
# ::tokens ["RT"]
# ::lemmas ["RT"]
(c35-1 / publication
       :name (c35-0 / name
                    :op1 "RT"))

# ::snt This is a pa
# ::tokens ["This", "is", "a", "pa"]
# ::lemmas ["this", "be", "a", "pa"]
(c36-0 / pa
       :domain (c36-1 / this))

# ::snt And yet CNN
# ::tokens ["And", "yet", "CNN"]
# ::lemmas ["and", "yet", "CNN"]
(c37-0 / and
       :op2 (c37-2 / have-concession-91
                   :ARG1 (c37-3 / publication
                                :name (c37-1 / name
                                             :op1 "CNN"))))

# ::snt I would love
# ::tokens ["I", "would", "love"]
# ::lemmas ["i", "would", "love"]
(c38-0 / love-01
       :ARG0 (c38-1 / i))

# ::snt Why is it th
# ::tokens ["Why", "is", "it", "th"]
# ::lemmas ["why", "be", "it", "th"]
(c39-2 / cause-01
       :ARG0 (c39-1 / amr-unknown)
       :ARG1 (c39-0 / it))

# ::snt BOOM!!! Thank YOU!
# ::tokens ["BOOM", "!", "!", "!", "Thank", "YOU", "!"]
# ::lemmas ["BOOM", "!", "!", "!", "thank", "you", "!"]
(c40-2 / multi-sentence
       :snt1 (c40-4 / boom
                    :mode expressive)
       :snt2 (c40-1 / thank-01
                    :ARG0 (c40-3 / i)
                    :ARG1 (c40-0 / you)))

# ::snt Bates name i
# ::tokens ["Bates", "name", "i"]
# ::lemmas ["Bates", "name", "i"]
(c41-2 / name-01
       :ARG1 (c41-1 / person
                    :name (c41-0 / name
                                 :op1 "Bill")))

# ::snt moi aussi j
# ::tokens ["moi", "aussi", "j"]
# ::lemmas ["moi", "aussi", "j"]
(c42-2 / person
       :name (c42-1 / name
                    :op1 "j")
       :mod (c42-0 / country
                   :name c42-1
                   :op1 "Australia"))

# ::snt y
# ::tokens ["y"]
# ::lemmas ["y"]
(c43-1 / person
       :name (c43-0 / name
                    :op1 "y"))

# ::snt If you cant
# ::tokens ["If", "you", "ca", "nt"]
# ::lemmas ["if", "you", "can", "not"]
(c44-2 / have-condition-91
       :ARG2 (c44-3 / possible-01
                    :ARG1 (c44-1 / do-02
                                 :ARG0 (c44-0 / you))
                    :polarity -))

# ::snt Drown your MAYOR!!
# ::tokens ["Drown", "your", "MAYOR", "!", "!"]
# ::lemmas ["drown", "your", "MAYOR", "!", "!"]
(c45-2 / throw-01
       :ARG0 (c45-0 / you)
       :ARG1 (c45-4 / person
                    :ARG0-of (c45-1 / have-org-role-91
                                    :ARG2 (c45-3 / mayor))
                    :poss c45-0)
       :mode imperative)

# ::snt You lie!
# ::tokens ["You", "lie", "!"]
# ::lemmas ["you", "lie", "!"]
(c46-1 / lie-08
       :ARG0 (c46-0 / you)
       :mode expressive)

# ::snt I call them tabloid news network
# ::tokens ["I", "call", "them", "tabloid", "news", "network"]
# ::lemmas ["i", "call", "they", "tabloid", "news", "network"]
(c47-4 / call-01
       :ARG0 (c47-3 / i)
       :ARG1 (c47-0 / they)
       :ARG2 (c47-5 / network
                    :mod (c47-2 / news)
                    :mod (c47-1 / tabloid)))

# ::snt So what abou
# ::tokens ["So", "what", "abou"]
# ::lemmas ["so", "what", "abou"]
(c48-1 / infer-01
       :ARG1 (c48-0 / amr-unknown))

# ::snt Thank you
# ::tokens ["Thank", "you"]
# ::lemmas ["thank", "you"]
(c49-2 / thank-01
       :ARG0 (c49-1 / i)
       :ARG1 (c49-0 / you))

# ::snt An pit bull
# ::tokens ["An", "pit", "bull"]
# ::lemmas ["an", "pit", "bull"]
(c50-1 / bull
       :mod (c50-0 / pit))
