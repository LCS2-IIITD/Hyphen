# ::snt time to finish these Islamic pricks
# ::tokens ["time", "to", "finish", "these", "Islamic", "pricks"]
# ::lemmas ["time", "to", "finish", "these", "Islamic", "prick"]
(c1-0 / time
      :time-of (c1-1 / finish-01
                     :ARG1 (c1-3 / prick
                                 :mod (c1-4 / religious-group
                                            :name (c1-5 / name
                                                        :op1 "Islam"))
                                 :mod (c1-2 / this))))

# ::snt : A man believed to be the gunman filmed wearing a black headband inside the cafe"Filmed? Shoot the bastard
# ::tokens [":", "A", "man", "believed", "to", "be", "the", "gunman", "filmed", "wearing", "a", "black", "headband", "inside", "the", "cafe\"Filmed", "?", "Shoot", "the", "bastard"]
# ::lemmas [":", "a", "man", "believe", "to", "be", "the", "gunman", "film", "wear", "a", "black", "headband", "inside", "the", "cafe\"filmed", "?", "shoot", "the", "bastard"]
(c2-3 / multi-sentence
      :snt1 (c2-13 / believe-01
                   :ARG1 (c2-8 / gunman
                               :ARG1-of (c2-4 / film-01)
                               :ARG0-of (c2-1 / wear-01
                                              :ARG1 (c2-2 / headband
                                                          :ARG1-of (c2-9 / black-04))
                                              :location (c2-6 / inside
                                                              :op1 (c2-7 / cafe)))))
      :snt2 (c2-10 / and
                   :op1 (c2-11 / film-01)
                   :op2 (c2-12 / shoot-02
                               :ARG0 (c2-0 / you)
                               :ARG1 (c2-5 / bastard)
                               :mode imperative)))

# ::snt its like /11 all over again
# ::tokens ["its", "like", "/11", "all", "over", "again"]
# ::lemmas ["its", "like", "/11", "all", "over", "again"]
(c3-3 / resemble-01
      :ARG1 (c3-1 / it)
      :ARG2 (c3-0 / incident
                  :name (c3-5 / name
                              :op1 "9/11"))
      :mod (c3-2 / again
                 :mod (c3-4 / all-over)))

# ::snt Is he upset that the cafe didn't serve Halal products?
# ::tokens ["Is", "he", "upset", "that", "the", "cafe", "did", "n't", "serve", "Halal", "products", "?"]
# ::lemmas ["be", "he", "upset", "that", "the", "cafe", "do", "not", "serve", "Halal", "product", "?"]
(c4-4 / upset-01
      :ARG0 (c4-6 / serve-01
                  :ARG0 (c4-3 / cafe)
                  :ARG1 (c4-2 / product
                              :mod (c4-0 / halal))
                  :polarity -)
      :ARG1 (c4-1 / he)
      :polarity (c4-5 / amr-unknown))

# ::snt The West, wake up!
# ::tokens ["The", "West", ",", "wake", "up", "!"]
# ::lemmas ["the", "West", ",", "wake", "up", "!"]
(c5-1 / wake-up-02
      :ARG1 (c5-0 / world-region
                  :name (c5-2 / name
                              :op1 "West"))
      :mode imperative)

# ::snt Why not take him out? Clear view
# ::tokens ["Why", "not", "take", "him", "out", "?", "Clear", "view"]
# ::lemmas ["why", "not", "take", "he", "out", "?", "clear", "view"]
(c6-2 / multi-sentence
      :snt1 (c6-3 / cause-01
                  :ARG0 (c6-5 / amr-unknown)
                  :ARG1 (c6-1 / take-out-11
                              :ARG1 (c6-0 / he)
                              :polarity -))
      :snt2 (c6-4 / view-01
                  :ARG1-of (c6-6 / clear-06)))

# ::snt somebody crossed their leg and show him the bottom of their shoe
# ::tokens ["somebody", "crossed", "their", "leg", "and", "show", "him", "the", "bottom", "of", "their", "shoe"]
# ::lemmas ["somebody", "cross", "their", "leg", "and", "show", "he", "the", "bottom", "of", "their", "shoe"]
(c7-4 / and
      :op1 (c7-3 / cross-02
                 :ARG0 (c7-6 / somebody
                             :part (c7-5 / leg
                                         :ARG1-of c7-3)))
      :op2 (c7-1 / show-01
                 :ARG0 c7-6
                 :ARG1 (c7-7 / bottom
                             :part-of (c7-0 / shoe
                                            :poss c7-6))
                 :ARG2 (c7-2 / he)))

# ::snt Your Tweet Takes Center Stage On
# ::tokens ["Your", "Tweet", "Takes", "Center", "Stage", "On"]
# ::lemmas ["your", "Tweet", "Takes", "Center", "Stage", "on"]
(c8-3 / take-on-09
      :ARG0 (c8-2 / thing
                  :ARG1-of (c8-1 / tweet-01
                                 :ARG0 (c8-0 / you)))
      :ARG1 (c8-5 / stage
                  :mod (c8-4 / center)))

# ::snt the BBC translated the Arabic letters on the headband and it says.."I CAN"T BREATHE!"...lol
# ::tokens ["the", "BBC", "translated", "the", "Arabic", "letters", "on", "the", "headband", "and", "it", "says", "..", "\"I", "CAN\"T", "BREATHE!\"", "...", "lol"]
# ::lemmas ["the", "BBC", "translate", "the", "Arabic", "letter", "on", "the", "headband", "and", "it", "say", "..", "\"I", "CAN\"T", "breathe!\"", "...", "lol"]
(c9-6 / and
      :op1 (c9-1 / translate-01
                 :ARG0 (c9-4 / publication
                             :name (c9-11 / name
                                          :op1 "BBC"))
                 :ARG1 (c9-7 / letter
                             :mod (c9-10 / language
                                         :name (c9-3 / name
                                                     :op1 "Arabic")))
                 :ARG3 (c9-0 / headband))
      :op2 (c9-8 / say-01
                 :ARG0 c9-0
                 :ARG1 (c9-2 / possible-01
                             :ARG1 (c9-12 / break-heart-31
                                          :ARG1 c9-0)
                             :polarity -))
      :ARG2-of (c9-9 / laugh-01
                     :manner (c9-5 / loud)
                     :mode expressive))

# ::snt That's funny!!
# ::tokens ["That", "'s", "funny", "!", "!"]
# ::lemmas ["that", "be", "funny", "!", "!"]
(c10-0 / funny
       :domain (c10-1 / that))

# ::snt in less than hrs his headband will really be telling the tuuth..LOL!
# ::tokens ["in", "less", "than", "hrs", "his", "headband", "will", "really", "be", "telling", "the", "tuuth", "..", "LOL", "!"]
# ::lemmas ["in", "less", "than", "hrs", "his", "headband", "will", "really", "be", "tell", "the", "tuuth", "..", "LOL", "!"]
(c11-2 / tell-01
       :ARG0 (c11-0 / headband
                    :part-of (c11-4 / he))
       :ARG2 (c11-5 / person
                    :mod (c11-1 / that))
       :ARG1-of (c11-9 / real-04)
       :ARG2-of (c11-7 / laugh-01
                       :ARG0 (c11-6 / i)
                       :manner (c11-12 / loud)
                       :mode expressive)
       :time (c11-8 / after
                    :op1 (c11-13 / now)
                    :quant (c11-10 / less-than
                                   :op1 (c11-3 / temporal-quantity
                                               :unit (c11-11 / hour)
                                               :quant 1))))

# ::snt LOL
# ::tokens ["LOL"]
# ::lemmas ["LOL"]
(c12-0 / laugh-01
       :ARG0 (c12-2 / i)
       :manner (c12-1 / loud))

# ::snt Looks like clean sniper shot. Should have take him out. Pigs, scum, low life losers. All terrorists are evil.
# ::tokens ["Looks", "like", "clean", "sniper", "shot", ".", "Should", "have", "take", "him", "out", ".", "Pigs", ",", "scum", ",", "low", "life", "losers", ".", "All", "terrorists", "are", "evil", "."]
# ::lemmas ["look", "like", "clean", "sniper", "shot", ".", "should", "have", "take", "he", "out", ".", "Pigs", ",", "scum", ",", "low", "life", "loser", ".", "all", "terrorist", "be", "evil", "."]
(c13-4 / multi-sentence
       :snt1 (c13-10 / look-02
                     :ARG1 (c13-14 / shoot-01
                                   :ARG2 (c13-1 / sniper)
                                   :ARG1-of (c13-7 / clean-04)))
       :snt2 (c13-12 / recommend-01
                     :ARG1 (c13-3 / take-out-11
                                  :ARG1 (c13-2 / he)))
       :snt3 (c13-11 / and
                     :op1 (c13-8 / pig)
                     :op2 (c13-0 / scum)
                     :op3 (c13-6 / person
                                 :ARG0-of (c13-16 / lose-02
                                                  :ARG1 (c13-15 / life
                                                                :ARG1-of (c13-9 / low-04)))))
       :snt4 (c13-17 / evil
                     :domain (c13-5 / terrorist
                                    :mod (c13-13 / all))))

# ::snt The face of terror in Sydney
# ::tokens ["The", "face", "of", "terror", "in", "Sydney"]
# ::lemmas ["the", "face", "of", "terror", "in", "Sydney"]
(c14-0 / face
       :location (c14-2 / city
                        :name (c14-1 / name
                                     :op1 "Sydney"))
       :ARG0-of (c14-3 / terror-02))
