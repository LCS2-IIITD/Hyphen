# ::snt what are the implications of this?
# ::tokens ["what", "are", "the", "implications", "of", "this", "?"]
# ::lemmas ["what", "be", "the", "implication", "of", "this", "?"]
(c1-1 / imply-01
      :ARG0 (c1-2 / this)
      :ARG1 (c1-0 / amr-unknown))

# ::snt They made that call in French?
# ::tokens ["They", "made", "that", "call", "in", "French", "?"]
# ::lemmas ["they", "make", "that", "call", "in", "French", "?"]
(c2-2 / call-02
      :polarity (c2-4 / amr-unknown)
      :ARG0 (c2-1 / they)
      :ARG1 (c2-0 / that)
      :manner (c2-3 / language
                    :name (c2-5 / name
                                :op1 "French")))

# ::snt Lots of radio protocol is French... Mayday is M'aidez. Urgence, pan-pan, "see-lonce" etc.
# ::tokens ["Lots", "of", "radio", "protocol", "is", "French", "...", "Mayday", "is", "M'aidez", ".", "Urgence", ",", "pan", "-", "pan", ",", "\"", "see", "-", "lonce", "\"", "etc", "."]
# ::lemmas ["lot", "of", "radio", "protocol", "be", "French", "...", "Mayday", "be", "M'aidez", ".", "urgence", ",", "pan", "-", "pan", ",", "\"", "see", "-", "lonce", "\"", "etc", "."]
(c3-1 / multi-sentence
      :snt1 (c3-5 / protocol
                  :mod (c3-12 / radio)
                  :quant (c3-9 / lot)
                  :mod (c3-6 / country
                             :name (c3-14 / name
                                          :op1 "France")))
      :snt2 (c3-0 / event
                  :name (c3-4 / name
                              :op1 "M'aidez")
                  :domain (c3-2 / festival
                                :name (c3-10 / name
                                             :op1 "Mayday")))
      :snt3 (c3-11 / and
                   :op1 (c3-8 / Urgence)
                   :op2 (c3-3 / pan-pan)
                   :op3 (c3-13 / see-lonce)
                   :op4 (c3-7 / et-cetera)))

# ::snt Roger. Just seems odd given most comms are in English. Doesn't make it wrong, of course.
# ::tokens ["Roger", ".", "Just", "seems", "odd", "given", "most", "comms", "are", "in", "English", ".", "Does", "n't", "make", "it", "wrong", ",", "of", "course", "."]
# ::lemmas ["Roger", ".", "just", "seem", "odd", "give", "most", "comms", "be", "in", "English", ".", "do", "not", "make", "it", "wrong", ",", "of", "course", "."]
(c4-1 / multi-sentence
      :snt1 (c4-6 / person
                  :name (c4-14 / name
                               :op1 "Roger"))
      :snt2 (c4-13 / seem-01
                   :ARG1 (c4-11 / odd)
                   :mod (c4-2 / just)
                   :ARG1-of (c4-7 / cause-01
                                  :ARG0 (c4-15 / be-located-at-91
                                               :ARG1 (c4-3 / comm
                                                           :mod (c4-12 / most))
                                               :ARG2 (c4-9 / language
                                                           :name (c4-5 / name
                                                                       :op1 "English")))))
      :snt3 (c4-10 / make-02
                   :ARG1 (c4-0 / wrong-02
                               :ARG1 (c4-8 / it))
                   :mod (c4-4 / of-course)
                   :polarity -))

# ::snt Just historic. Also hard to confuse with other words, so clear for the listener.
# ::tokens ["Just", "historic", ".", "Also", "hard", "to", "confuse", "with", "other", "words", ",", "so", "clear", "for", "the", "listener", "."]
# ::lemmas ["just", "historic", ".", "also", "hard", "to", "confuse", "with", "other", "word", ",", "so", "clear", "for", "the", "listener", "."]
(c5-2 / multi-sentence
      :snt1 (c5-1 / history
                  :mod (c5-3 / just))
      :snt2 (c5-4 / hard-02
                  :ARG1 (c5-5 / confuse-01
                              :ARG2 (c5-0 / word
                                          :mod (c5-10 / other)))
                  :mod (c5-8 / also)
                  :ARG1-of (c5-11 / clear-06
                                  :ARG2 (c5-6 / person
                                              :ARG0-of (c5-9 / listen-01))
                                  :degree (c5-7 / so))))

# ::snt Mayday is a call for urgent assistance. (M'aidez). Not a lot of help for a plane hurtling towards the floor.
# ::tokens ["Mayday", "is", "a", "call", "for", "urgent", "assistance", ".", "(", "M'aidez", ")", ".", "Not", "a", "lot", "of", "help", "for", "a", "plane", "hurtling", "towards", "the", "floor", "."]
# ::lemmas ["Mayday", "be", "a", "call", "for", "urgent", "assistance", ".", "(", "M'aidez", ")", ".", "not", "a", "lot", "of", "help", "for", "a", "plane", "hurtle", "towards", "the", "floor", "."]
(c6-1 / multi-sentence
      :snt1 (c6-4 / call-03
                  :ARG1 (c6-7 / assist-01
                              :mod (c6-6 / urgent))
                  :time (c6-2 / festival
                              :name (c6-10 / name
                                           :op1 "Mayday")))
      :snt2 (c6-0 / help-01
                  :ARG1 (c6-5 / plane
                              :ARG1-of (c6-3 / hurtle-01
                                             :direction (c6-9 / floor)))
                  :quant (c6-8 / lot)
                  :polarity -))

# ::snt why would they say urgence in lieu of mayday which is standard ?
# ::tokens ["why", "would", "they", "say", "urgence", "in", "lieu", "of", "mayday", "which", "is", "standard", "?"]
# ::lemmas ["why", "would", "they", "say", "urgence", "in", "lieu", "of", "mayday", "which", "be", "standard", "?"]
(c7-5 / cause-01
      :ARG0 (c7-6 / amr-unknown)
      :ARG1 (c7-7 / say-01
                  :ARG0 (c7-2 / they)
                  :ARG1 (c7-4 / indulge-01
                              :ARG1-of (c7-0 / instead-of-91
                                             :ARG2 (c7-3 / mayday
                                                         :ARG1-of (c7-1 / standard-02))))))

# ::snt mayday is French!
# ::tokens ["mayday", "is", "French", "!"]
# ::lemmas ["mayday", "be", "French", "!"]
(c8-3 / person
      :name (c8-1 / name
                  :op1 "Mayday")
      :mod (c8-0 / country
                 :name (c8-2 / name
                             :op1 "France"))
      :mode expressive)

# ::snt is that unusual?
# ::tokens ["is", "that", "unusual", "?"]
# ::lemmas ["be", "that", "unusual", "?"]
(c9-0 / unusual
      :polarity (c9-1 / amr-unknown)
      :domain (c9-2 / that))

# ::snt Is that roughly equivalent to our 'Pan Pan' call it priority I assume?
# ::tokens ["Is", "that", "roughly", "equivalent", "to", "our", "'", "Pan", "Pan", "'", "call", "it", "priority", "I", "assume", "?"]
# ::lemmas ["be", "that", "roughly", "equivalent", "to", "our", "'", "Pan", "Pan", "'", "call", "it", "priority", "i", "assume", "?"]
(c10-7 / assume-02
       :ARG0 (c10-5 / i)
       :ARG1 (c10-11 / equal-01
                     :ARG1 (c10-2 / that)
                     :ARG2 (c10-4 / call-01
                                  :ARG0 (c10-6 / person
                                               :name (c10-10 / name
                                                             :op1 "Pan"
                                                             :op2 "Pan"
                                                             :op3 "Pan")
                                               :poss (c10-0 / we))
                                  :ARG1 (c10-1 / it)
                                  :ARG2 (c10-3 / priority))
                     :degree (c10-8 / rough))
       :polarity (c10-9 / amr-unknown))

# ::snt No 'Pan Pan' call is universal
# ::tokens ["No", "'", "Pan", "Pan", "'", "call", "is", "universal"]
# ::lemmas ["no", "'", "Pan", "Pan", "'", "call", "be", "universal"]
(c11-0 / universal
       :domain (c11-3 / call-03
                      :ARG1 (c11-2 / person
                                   :name (c11-1 / name
                                                :op1 "Pan"
                                                :op2 "Pan")))
       :polarity -)

# ::snt Ahh.. I was always taught it was a UK only thing; and having done only limited flying abroad never tested that!
# ::tokens ["Ahh", "..", "I", "was", "always", "taught", "it", "was", "a", "UK", "only", "thing", ";", "and", "having", "done", "only", "limited", "flying", "abroad", "never", "tested", "that", "!"]
# ::lemmas ["Ahh", "..", "i", "be", "always", "teach", "it", "be", "a", "UK", "only", "thing", ";", "and", "having", "do", "only", "limit", "flying", "abroad", "never", "test", "that", "!"]
(c12-11 / and
        :op1 (c12-3 / teach-01
                    :ARG1 (c12-2 / thing
                                 :mod (c12-13 / only)
                                 :domain (c12-8 / it)
                                 :mod (c12-9 / country
                                             :name (c12-17 / name
                                                           :op1 "UK")))
                    :ARG2 (c12-0 / i)
                    :time (c12-14 / always))
        :op2 (c12-4 / test-01
                    :ARG0 c12-0
                    :ARG1 c12-2
                    :time (c12-1 / ever)
                    :ARG1-of (c12-16 / cause-01
                                     :ARG0 (c12-7 / do-02
                                                  :ARG0 c12-0
                                                  :ARG1 (c12-5 / fly-01
                                                               :ARG1 c12-0
                                                               :ARG1-of (c12-12 / limit-01)
                                                               :mod (c12-6 / only)
                                                               :location (c12-15 / abroad))))
                    :polarity -)
        :mod (c12-10 / ah
                     :mode expressive))
