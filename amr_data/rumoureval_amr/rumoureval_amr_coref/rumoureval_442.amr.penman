# ::snt : Paris hostage-taker 'knows' one Charlie Hebdo killer: source
# ::tokens [":", "Paris", "hostage", "-", "taker", "'", "knows", "'", "one", "Charlie", "Hebdo", "killer", ":", "source"]
# ::lemmas [":", "Paris", "hostage", "-", "taker", "'", "know", "'", "one", "Charlie", "Hebdo", "killer", ":", "source"]
(c1-0 / know-01
      :ARG0 (c1-8 / person
                  :ARG0-of (c1-3 / take-01
                                 :ARG1 (c1-2 / hostage))
                  :location (c1-7 / city
                                  :name (c1-10 / name
                                               :op1 "Paris")))
      :ARG1 (c1-5 / person
                  :ARG0-of (c1-1 / kill-01
                                 :ARG1 (c1-4 / magazine
                                             :name (c1-6 / name
                                                         :op1 "Charlie"
                                                         :op2 " Hebdo")))
                  :quant 1)
      :ARG1-of (c1-9 / source-01))

# ::snt : Paris hostage-taker 'knows' one Charlie Hebdo killer: source what does that even mean?
# ::tokens [":", "Paris", "hostage", "-", "taker", "'", "knows", "'", "one", "Charlie", "Hebdo", "killer", ":", "source", "what", "does", "that", "even", "mean", "?"]
# ::lemmas [":", "Paris", "hostage", "-", "taker", "'", "know", "'", "one", "Charlie", "Hebdo", "killer", ":", "source", "what", "do", "that", "even", "mean", "?"]
(c2-10 / and
       :op1 (c2-0 / know-01
                  :ARG0 (c2-8 / person
                              :ARG0-of (c2-4 / take-01
                                             :ARG1 (c2-2 / hostage))
                              :location (c2-9 / city
                                              :name (c2-14 / name
                                                           :op1 "Paris")))
                  :ARG1 (c2-6 / person
                              :ARG0-of (c2-1 / kill-01
                                             :ARG1 (c2-5 / magazine
                                                         :name (c2-7 / name
                                                                     :op1 "Charlie"
                                                                     :op2 " Hebdo")))
                              :quant 1))
       :op2 (c2-13 / source-01
                   :ARG1 (c2-12 / mean-01
                                :ARG1 c2-0
                                :ARG2 (c2-11 / amr-unknown
                                             :mod (c2-3 / even)))))

# ::snt I don't think even they know.
# ::tokens ["I", "do", "n't", "think", "even", "they", "know", "."]
# ::lemmas ["i", "do", "not", "think", "even", "they", "know", "."]
(c3-2 / think-01
      :ARG0 (c3-3 / i)
      :ARG1 (c3-0 / know-01
                  :ARG0 (c3-1 / they
                              :mod (c3-4 / even)))
      :polarity -)

# ::snt it's like they can't make up their mind if they were monitoring these guys or there was no warning....
# ::tokens ["it", "'s", "like", "they", "ca", "n't", "make", "up", "their", "mind", "if", "they", "were", "monitoring", "these", "guys", "or", "there", "was", "no", "warning", "...."]
# ::lemmas ["it", "be", "like", "they", "can", "not", "make", "up", "their", "mind", "if", "they", "be", "monitor", "these", "guy", "or", "there", "be", "no", "warning", "...."]
(c4-6 / resemble-01
      :ARG1 (c4-7 / or
                  :op1 (c4-4 / possible-01
                             :ARG1 (c4-2 / make-up-mind-12
                                         :ARG0 (c4-1 / they)
                                         :ARG2 (c4-8 / monitor-01
                                                     :ARG0 c4-1
                                                     :ARG1 (c4-5 / guy
                                                                 :mod (c4-3 / this))))
                             :polarity -)
                  :op2 (c4-0 / warn-01
                             :polarity -)))

# ::snt Seems like the script they have isn't as complete as it ought to be. Things are smelling as fishy as ever.
# ::tokens ["Seems", "like", "the", "script", "they", "have", "is", "n't", "as", "complete", "as", "it", "ought", "to", "be", ".", "Things", "are", "smelling", "as", "fishy", "as", "ever", "."]
# ::lemmas ["seem", "like", "the", "script", "they", "have", "be", "not", "as", "complete", "as", "it", "ought", "to", "be", ".", "thing", "be", "smell", "as", "fishy", "as", "ever", "."]
(c5-4 / multi-sentence
      :snt1 (c5-11 / seem-01
                   :ARG1 (c5-2 / have-degree-91
                               :ARG1 (c5-1 / script
                                           :ARG1-of (c5-7 / have-03
                                                          :ARG0 (c5-3 / they)))
                               :ARG2 (c5-8 / complete-02
                                           :ARG1 c5-1)
                               :ARG3 (c5-13 / equal)
                               :ARG4 (c5-10 / obligate-01
                                            :ARG1 c5-1)
                               :polarity -))
      :snt2 (c5-0 / smell-02
                  :ARG1 (c5-5 / thing)
                  :ARG2 (c5-6 / fishy)
                  :ARG2-of (c5-12 / have-degree-91
                                  :ARG1 c5-5
                                  :ARG3 c5-13)
                  :ARG4 (c5-9 / ever)))

# ::snt someone is going to get the blame for this. Then also worry it'll just make conditions harder for all French Muslims
# ::tokens ["someone", "is", "going", "to", "get", "the", "blame", "for", "this", ".", "Then", "also", "worry", "it", "'ll", "just", "make", "conditions", "harder", "for", "all", "French", "Muslims"]
# ::lemmas ["someone", "be", "go", "to", "get", "the", "blame", "for", "this", ".", "then", "also", "worry", "it", "'ll", "just", "make", "condition", "hard", "for", "all", "French", "Muslims"]
(c6-19 / multi-sentence
       :snt1 (c6-17 / blame-01
                    :ARG1 (c6-12 / someone)
                    :ARG2 (c6-8 / this))
       :snt2 (c6-0 / worry-02
                   :ARG0 (c6-14 / it)
                   :ARG1 (c6-20 / make-02
                                :ARG0 (c6-7 / it)
                                :ARG1 (c6-1 / have-degree-91
                                            :ARG1 (c6-11 / condition)
                                            :ARG2 (c6-10 / hard-02
                                                         :ARG1 c6-11)
                                            :ARG3 (c6-4 / more)
                                            :ARG4 (c6-15 / person
                                                         :mod (c6-3 / religious-group
                                                                    :name (c6-13 / name
                                                                                 :op1 "Muslim"))
                                                         :mod (c6-6 / country
                                                                    :name (c6-2 / name
                                                                                :op1 "France"))
                                                         :mod (c6-16 / all)))
                                :mod (c6-9 / just))
                   :mod (c6-5 / also)
                   :time (c6-18 / then)))

# ::snt All I'm wondering is "who", exactly. I truly fear for them. It's not like things aren't already hard, as it is.
# ::tokens ["All", "I", "'m", "wondering", "is", "\"", "who", "\"", ",", "exactly", ".", "I", "truly", "fear", "for", "them", ".", "It", "'s", "not", "like", "things", "are", "n't", "already", "hard", ",", "as", "it", "is", "."]
# ::lemmas ["all", "i", "be", "wonder", "be", "\"", "who", "\"", ",", "exactly", ".", "i", "truly", "fear", "for", "they", ".", "it", "be", "not", "like", "thing", "be", "not", "already", "hard", ",", "as", "it", "be", "."]
(c7-4 / multi-sentence
      :snt1 (c7-0 / wonder-01
                  :ARG0 (c7-10 / i)
                  :ARG1 (c7-9 / person
                              :domain (c7-12 / amr-unknown))
                  :mod (c7-16 / exact)
                  :mod (c7-14 / all))
      :snt2 (c7-5 / fear-01
                  :ARG0 (c7-1 / i)
                  :ARG1 (c7-3 / they)
                  :ARG1-of (c7-6 / true-01))
      :snt3 (c7-13 / resemble-01
                   :ARG1 (c7-7 / it)
                   :ARG2 (c7-2 / hard-02
                               :ARG1 (c7-8 / thing)
                               :time (c7-15 / already)
                               :polarity -)
                   :ARG1-of (c7-11 / cause-01
                                   :ARG0 c7-7)
                   :polarity -))

# ::snt and about to get much worse. Collective punishment for government incompetence.
# ::tokens ["and", "about", "to", "get", "much", "worse", ".", "Collective", "punishment", "for", "government", "incompetence", "."]
# ::lemmas ["and", "about", "to", "get", "much", "bad", ".", "collective", "punishment", "for", "government", "incompetence", "."]
(c8-2 / multi-sentence
      :snt1 (c8-6 / and
                  :op2 (c8-5 / get-03
                             :ARG2 (c8-0 / have-degree-91
                                         :ARG2 (c8-12 / bad-07)
                                         :ARG3 (c8-9 / more
                                                     :quant (c8-8 / much)))
                             :time (c8-7 / about-to)))
      :snt2 (c8-3 / punish-01
                  :ARG3 (c8-4 / competent-01
                              :ARG1 (c8-1 / government-organization
                                          :ARG0-of (c8-11 / govern-01))
                              :polarity -)
                  :mod (c8-10 / collective)))

# ::snt That last bit sounds rather familiar, doesn't it? Had we not heard just about the same thing, with the attack in Sydney?
# ::tokens ["That", "last", "bit", "sounds", "rather", "familiar", ",", "does", "n't", "it", "?", "Had", "we", "not", "heard", "just", "about", "the", "same", "thing", ",", "with", "the", "attack", "in", "Sydney", "?"]
# ::lemmas ["that", "last", "bit", "sound", "rather", "familiar", ",", "do", "not", "it", "?", "have", "we", "not", "hear", "just", "about", "the", "same", "thing", ",", "with", "the", "attack", "in", "Sydney", "?"]
(c9-5 / multi-sentence
      :snt1 (c9-14 / sound-01
                   :ARG1 (c9-16 / bit
                                :mod (c9-10 / last)
                                :mod (c9-4 / that))
                   :ARG2 (c9-6 / familiarize-01
                               :ARG2 c9-16
                               :degree (c9-12 / rather))
                   :ARG1-of (c9-0 / request-confirmation-91))
      :snt2 (c9-2 / hear-01
                  :ARG0 (c9-1 / we)
                  :ARG1 (c9-7 / thing
                              :ARG1-of (c9-3 / same-01
                                             :mod (c9-8 / just)))
                  :ARG1-of (c9-9 / cause-01
                                 :ARG0 (c9-11 / attack-01
                                              :location (c9-13 / city
                                                               :name (c9-15 / name
                                                                            :op1 "Sydney"))))
                  :polarity -))

# ::snt it's the story all over the world anymore yeah.
# ::tokens ["it", "'s", "the", "story", "all", "over", "the", "world", "anymore", "yeah", "."]
# ::lemmas ["it", "be", "the", "you", "all", "over", "the", "world", "anymore", "yeah", "."]
(c10-4 / story
       :location (c10-2 / all-over
                        :op1 (c10-1 / world))
       :mod (c10-0 / yeah
                   :mode expressive)
       :time (c10-3 / anymore))

# ::snt How can so many countries be making the same, simple, and highly incompetent mistake, at about the same time? It's crazy.
# ::tokens ["How", "can", "so", "many", "countries", "be", "making", "the", "same", ",", "simple", ",", "and", "highly", "incompetent", "mistake", ",", "at", "about", "the", "same", "time", "?", "It", "'s", "crazy", "."]
# ::lemmas ["how", "can", "so", "many", "country", "be", "make", "the", "same", ",", "simple", ",", "and", "highly", "incompetent", "mistake", ",", "at", "about", "the", "same", "time", "?", "it", "be", "crazy", "."]
(c11-4 / multi-sentence
       :snt1 (c11-9 / possible-01
                    :ARG1 (c11-16 / mistake-02
                                  :ARG0 (c11-8 / country
                                               :ARG1-of (c11-1 / have-quant-91
                                                               :ARG2 (c11-14 / many)
                                                               :ARG3 (c11-17 / so)))
                                  :ARG1 (c11-3 / thing
                                               :ARG1-of (c11-2 / same-01)
                                               :ARG1-of (c11-0 / simple-02)
                                               :ARG1-of (c11-15 / competent-01
                                                                :degree (c11-7 / high-02)
                                                                :polarity -))
                                  :time (c11-12 / about
                                                :op1 (c11-5 / time
                                                            :ARG1-of (c11-6 / same-01)))
                                  :manner (c11-13 / amr-unknown)))
       :snt2 (c11-10 / crazy-03
                     :ARG1 (c11-11 / it)))

# ::snt Australia was I think more genuinely unpredictable, in that his "radicalization" was internal, delusional, and grandiose
# ::tokens ["Australia", "was", "I", "think", "more", "genuinely", "unpredictable", ",", "in", "that", "his", "\"", "radicalization", "\"", "was", "internal", ",", "delusional", ",", "and", "grandiose"]
# ::lemmas ["Australia", "be", "i", "think", "more", "genuinely", "unpredictable", ",", "in", "that", "his", "\"", "radicalization", "\"", "be", "internal", ",", "delusional", ",", "and", "grandiose"]
(c12-2 / think-01
       :ARG0 (c12-10 / i)
       :ARG1 (c12-9 / possible-01
                    :ARG1 (c12-6 / predict-01
                                 :ARG1 (c12-8 / country
                                              :name (c12-15 / name
                                                            :op1 "Australia"))
                                 :manner (c12-11 / genuine))
                    :ARG1-of (c12-14 / cause-01
                                     :ARG0 (c12-12 / and
                                                   :op1 (c12-0 / internalize-01
                                                               :ARG1 (c12-13 / radicalize-01
                                                                             :ARG1 (c12-1 / he)))
                                                   :op2 (c12-7 / delusional
                                                               :domain c12-13)
                                                   :op3 (c12-3 / grandiose
                                                               :domain c12-13)))
                    :ARG2-of (c12-5 / have-degree-91
                                    :ARG1 c12-8
                                    :ARG3 (c12-4 / more))
                    :polarity -))

# ::snt that most certainly is true. But...(eh, I guess with all the false flags, I can't help but see it all as something else)
# ::tokens ["that", "most", "certainly", "is", "true", ".", "But", "...", "(eh", ",", "I", "guess", "with", "all", "the", "false", "flags", ",", "I", "ca", "n't", "help", "but", "see", "it", "all", "as", "something", "else", ")"]
# ::lemmas ["that", "most", "certainly", "be", "true", ".", "but", "...", "(eh", ",", "i", "guess", "with", "all", "the", "false", "flag", ",", "i", "can", "not", "help", "but", "see", "it", "all", "as", "something", "else", ")"]
(c13-15 / multi-sentence
        :snt1 (c13-2 / true-01
                     :ARG1 (c13-14 / that)
                     :manner (c13-4 / certain
                                    :ARG2-of (c13-0 / have-degree-91
                                                    :ARG1 c13-2
                                                    :ARG3 (c13-18 / most))))
        :snt2 (c13-1 / contrast-01
                     :ARG2 (c13-10 / guess-01
                                   :ARG0 (c13-8 / i)
                                   :ARG1 (c13-9 / possible-01
                                                :ARG1 (c13-3 / help-02
                                                             :ARG0 c13-8
                                                             :ARG1 (c13-5 / see-01
                                                                          :ARG0 c13-8
                                                                          :ARG1 (c13-7 / flag
                                                                                       :mod (c13-12 / false)
                                                                                       :mod (c13-11 / all))
                                                                          :ARG2 (c13-6 / something
                                                                                       :mod (c13-13 / else))))
                                                :ARG1-of (c13-17 / cause-01
                                                                 :ARG0 c13-7)
                                                :polarity -)
                                   :mod (c13-16 / eh
                                                :mode expressive))))

# ::snt that said you have to wonder how a man known for being psychotic and murderous had access to guns.
# ::tokens ["that", "said", "you", "have", "to", "wonder", "how", "a", "man", "known", "for", "being", "psychotic", "and", "murderous", "had", "access", "to", "guns", "."]
# ::lemmas ["that", "say", "you", "have", "to", "wonder", "how", "a", "man", "know", "for", "be", "psychotic", "and", "murderous", "have", "access", "to", "gun", "."]
(c14-10 / obligate-01
        :ARG1 (c14-0 / you)
        :ARG2 (c14-2 / wonder-01
                     :ARG0 c14-0
                     :ARG1 (c14-3 / thing
                                  :manner-of (c14-8 / access-01
                                                    :ARG0 (c14-4 / man
                                                                 :ARG1-of (c14-1 / know-02
                                                                                 :ARG3 (c14-11 / and
                                                                                               :op1 (c14-6 / psychotic
                                                                                                           :domain c14-4)
                                                                                               :op2 (c14-7 / murder-01
                                                                                                           :ARG0 c14-4))))
                                                    :ARG1 (c14-9 / gun))))
        :condition (c14-12 / say-01
                           :ARG1 (c14-5 / that)))

# ::snt Exactly this. Especially with the amount of charges against him. I still really don't understand how he had walked free.
# ::tokens ["Exactly", "this", ".", "Especially", "with", "the", "amount", "of", "charges", "against", "him", ".", "I", "still", "really", "do", "n't", "understand", "how", "he", "had", "walked", "free", "."]
# ::lemmas ["exactly", "this", ".", "especially", "with", "the", "amount", "of", "charge", "against", "he", ".", "i", "still", "really", "do", "not", "understand", "how", "he", "have", "walk", "free", "."]
(c15-3 / multi-sentence
       :snt1 (c15-2 / this
                    :manner (c15-14 / exact))
       :snt2 (c15-11 / amount-01
                     :ARG1 (c15-7 / charge-05
                                  :ARG1 (c15-1 / he))
                     :mod (c15-8 / especially))
       :snt3 (c15-10 / understand-01
                     :ARG0 (c15-9 / i)
                     :ARG1 (c15-4 / thing
                                  :manner-of (c15-0 / walk-01
                                                    :ARG0 (c15-6 / he)
                                                    :manner (c15-5 / free-04
                                                                   :ARG1 c15-6)))
                     :mod (c15-13 / still)
                     :ARG1-of (c15-12 / real-04)
                     :polarity -))

# ::snt incompetence. We see the same in all the US mass shootings preceded by ridiculous amount of red flags.
# ::tokens ["incompetence", ".", "We", "see", "the", "same", "in", "all", "the", "US", "mass", "shootings", "preceded", "by", "ridiculous", "amount", "of", "red", "flags", "."]
# ::lemmas ["incompetence", ".", "we", "see", "the", "same", "in", "all", "the", "US", "mass", "shooting", "precede", "by", "ridiculous", "amount", "of", "red", "flag", "."]
(c16-5 / multi-sentence
       :snt1 (c16-7 / competent-01
                    :polarity -)
       :snt2 (c16-14 / see-01
                     :ARG0 (c16-2 / we)
                     :ARG1 (c16-4 / thing
                                  :ARG1-of (c16-3 / same-01))
                     :location (c16-1 / shoot-02
                                      :mod (c16-13 / mass)
                                      :mod (c16-12 / country
                                                   :name (c16-15 / name
                                                                 :op1 "US"))
                                      :mod (c16-9 / all)
                                      :ARG1-of (c16-8 / precede-01
                                                      :ARG2 (c16-10 / amount
                                                                    :quant-of (c16-6 / flag
                                                                                     :ARG1-of (c16-11 / red-02))
                                                                    :ARG1-of (c16-0 / ridiculous-02))))))

# ::snt this world is going crazy .
# ::tokens ["this", "world", "is", "going", "crazy", "."]
# ::lemmas ["this", "world", "be", "go", "crazy", "."]
(c17-1 / crazy-03
       :ARG1 (c17-0 / world
                    :mod (c17-2 / this)))

# ::snt Paris hostage-taker 'knows' one Charlie Hebdo killer: source
# ::tokens ["Paris", "hostage", "-", "taker", "'", "knows", "'", "one", "Charlie", "Hebdo", "killer", ":", "source"]
# ::lemmas ["Paris", "hostage", "-", "taker", "'", "know", "'", "one", "Charlie", "Hebdo", "killer", ":", "source"]
(c18-0 / know-01
       :ARG0 (c18-8 / person
                    :ARG0-of (c18-3 / take-01
                                    :ARG1 (c18-2 / hostage))
                    :location (c18-7 / city
                                     :name (c18-10 / name
                                                   :op1 "Paris")))
       :ARG1 (c18-5 / person
                    :ARG0-of (c18-1 / kill-01
                                    :ARG1 (c18-4 / magazine
                                                 :name (c18-6 / name
                                                              :op1 "Charlie"
                                                              :op2 "Ch Hebdo")))
                    :quant 1)
       :ARG1-of (c18-9 / source-01))

# ::snt : Paris hostage-taker 'knows' one Charlie Hebdo killer: source WHAT THE HELL...?
# ::tokens [":", "Paris", "hostage", "-", "taker", "'", "knows", "'", "one", "Charlie", "Hebdo", "killer", ":", "source", "WHAT", "THE", "HELL", "...", "?"]
# ::lemmas [":", "Paris", "hostage", "-", "taker", "'", "know", "'", "one", "Charlie", "Hebdo", "killer", ":", "source", "what", "the", "hell", "...", "?"]
(c19-10 / and
        :op1 (c19-0 / know-01
                    :ARG0 (c19-8 / person
                                 :ARG0-of (c19-3 / take-01
                                                 :ARG1 (c19-2 / hostage))
                                 :location (c19-9 / city
                                                  :name (c19-13 / name
                                                                :op1 "Paris")))
                    :ARG1 (c19-6 / person
                                 :ARG0-of (c19-1 / kill-01
                                                 :ARG1 (c19-4 / magazine
                                                              :name (c19-7 / name
                                                                           :op1 "Charlie"
                                                                           :op2 " Hebdo")))
                                 :quant 1))
        :op2 (c19-12 / source-01
                     :ARG1 (c19-11 / amr-unknown
                                   :mod (c19-5 / hell
                                               :mode expressive))))

# ::snt WTF? Now I don't understand, the paris hostage-takers is the ones who killed the people? I am mindfucked, someone explain.
# ::tokens ["WTF", "?", "Now", "I", "do", "n't", "understand", ",", "the", "paris", "hostage", "-", "takers", "is", "the", "ones", "who", "killed", "the", "people", "?", "I", "am", "mindfucked", ",", "someone", "explain", "."]
# ::lemmas ["WTF", "?", "now", "i", "do", "not", "understand", ",", "the", "paris", "hostage", "-", "taker", "be", "the", "one", "who", "kill", "the", "people", "?", "i", "be", "mindfucke", ",", "someone", "explain", "."]
(c20-5 / multi-sentence
       :snt1 (c20-11 / amr-unknown
                     :mod (c20-6 / fuck
                                 :mode expressive))
       :snt2 (c20-10 / understand-01
                     :ARG0 (c20-8 / i)
                     :ARG1 (c20-0 / kill-01
                                  :ARG0 (c20-9 / person
                                               :ARG0-of (c20-4 / take-01
                                                               :ARG1 (c20-2 / hostage))
                                               :mod (c20-7 / paris))
                                  :ARG1 (c20-1 / person))
                     :time (c20-13 / now)
                     :polarity -)
       :snt3 (c20-3 / explain-01
                    :ARG0 (c20-12 / someone)
                    :ARG1 c20-11
                    :mode imperative))

# ::snt Melbourne airport down on terror alert
# ::tokens ["Melbourne", "airport", "down", "on", "terror", "alert"]
# ::lemmas ["Melbourne", "airport", "down", "on", "terror", "alert"]
(c21-1 / down-01
       :ARG1 (c21-3 / airport
                    :location (c21-2 / city
                                     :name (c21-5 / name
                                                  :op1 "Melbourne")))
       :prep-on (c21-4 / alert-01
                       :ARG2 (c21-0 / terror)))
