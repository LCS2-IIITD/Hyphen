# ::snt no doubt scared for his life. It's obviously mike brown in the video
# ::tokens ["no", "doubt", "scared", "for", "his", "life", ".", "It", "'s", "obviously", "mike", "brown", "in", "the", "video"]
# ::lemmas ["no", "doubt", "scared", "for", "his", "life", ".", "it", "be", "obviously", "mike", "brown", "in", "the", "video"]
(c1-1 / multi-sentence
      :snt1 (c1-8 / scare-01
                  :ARG1 (c1-0 / he)
                  :ARG2 (c1-5 / life
                              :poss c1-0)
                  :ARG1-of (c1-2 / doubt-01
                                 :polarity -))
      :snt2 (c1-7 / obvious-01
                  :ARG1 (c1-9 / brown-02
                              :ARG1 (c1-3 / it)
                              :mod (c1-6 / apparent)
                              :location (c1-4 / video))))

# ::snt Obviously? So he took off his socks in the m between the video and getting shot?
# ::tokens ["Obviously", "?", "So", "he", "took", "off", "his", "socks", "in", "the", "m", "between", "the", "video", "and", "getting", "shot", "?"]
# ::lemmas ["obviously", "?", "so", "he", "take", "off", "his", "sock", "in", "the", "m", "between", "the", "video", "and", "getting", "shoot", "?"]
(c2-3 / multi-sentence
      :snt1 (c2-7 / obvious-01
                  :polarity (c2-6 / amr-unknown))
      :snt2 (c2-4 / cause-01
                  :ARG1 (c2-2 / take-off-07
                              :ARG0 (c2-0 / he)
                              :ARG1 (c2-9 / sock
                                          :poss c2-0)
                              :location (c2-10 / between
                                               :op1 (c2-5 / video)
                                               :op2 (c2-1 / shoot-02
                                                          :ARG1 c2-0))
                              :polarity (c2-8 / amr-unknown))))

# ::snt dude even his parents acknowledge it's him.
# ::tokens ["dude", "even", "his", "parents", "acknowledge", "it", "'s", "him", "."]
# ::lemmas ["dude", "even", "his", "parent", "acknowledge", "it", "be", "he", "."]
(c3-5 / acknowledge-01
      :ARG0 (c3-4 / person
                  :ARG0-of (c3-0 / have-rel-role-91
                                 :ARG1 (c3-3 / dude)
                                 :ARG2 (c3-2 / parent))
                  :mod (c3-6 / even))
      :ARG1 (c3-1 / he))

# ::snt And the store owner and the pictures say it wasn't. Why does someone who didn't see it matter?
# ::tokens ["And", "the", "store", "owner", "and", "the", "pictures", "say", "it", "was", "n't", ".", "Why", "does", "someone", "who", "did", "n't", "see", "it", "matter", "?"]
# ::lemmas ["and", "the", "store", "owner", "and", "the", "picture", "say", "it", "be", "not", ".", "why", "do", "someone", "who", "do", "not", "see", "it", "matter", "?"]
(c4-3 / multi-sentence
      :snt1 (c4-9 / and
                  :op2 (c4-13 / say-01
                              :ARG0 (c4-11 / and
                                           :op1 (c4-5 / person
                                                      :ARG0-of (c4-10 / own-01
                                                                      :ARG1 (c4-0 / store)))
                                           :op2 (c4-4 / picture))
                              :ARG1 (c4-1 / have-polarity-91
                                          :ARG1 (c4-6 / it)
                                          :ARG2 -)))
      :snt2 (c4-7 / cause-01
                  :ARG0 (c4-12 / amr-unknown)
                  :ARG1 (c4-8 / matter-01
                              :ARG1 (c4-2 / it))))

# ::snt Dorian Johnson just confirmed it was them. What now?
# ::tokens ["Dorian", "Johnson", "just", "confirmed", "it", "was", "them", ".", "What", "now", "?"]
# ::lemmas ["Dorian", "Johnson", "just", "confirm", "it", "be", "they", ".", "what", "now", "?"]
(c5-1 / multi-sentence
      :snt1 (c5-5 / confirm-01
                  :ARG0 (c5-4 / person
                              :name (c5-7 / name
                                          :op1 "Dorian"
                                          :op2 "Johnson"))
                  :ARG1 (c5-0 / they)
                  :time (c5-2 / just))
      :snt2 (c5-6 / amr-unknown
                  :time (c5-3 / now)))

# ::snt you just repeated what you said in the last tweet, p sure my reply doesn't change
# ::tokens ["you", "just", "repeated", "what", "you", "said", "in", "the", "last", "tweet", ",", "p", "sure", "my", "reply", "does", "n't", "change"]
# ::lemmas ["you", "just", "repeat", "what", "you", "say", "in", "the", "last", "tweet", ",", "p", "sure", "my", "reply", "do", "not", "change"]
(c6-8 / repeat-01
      :ARG0 (c6-0 / you)
      :ARG1 (c6-3 / thing
                  :ARG1-of (c6-9 / say-01
                                 :ARG0 c6-0
                                 :medium (c6-2 / tweet-01
                                               :mod (c6-7 / last))))
      :mod (c6-4 / just)
      :ARG0-of (c6-10 / ensure-01
                      :ARG1 (c6-5 / change-01
                                  :ARG1 (c6-1 / reply-01
                                              :ARG0 (c6-6 / i))
                                  :polarity -)))

# ::snt but you have two pictures of people with different clothes, and an eyewitness who says it wasn't him
# ::tokens ["but", "you", "have", "two", "pictures", "of", "people", "with", "different", "clothes", ",", "and", "an", "eyewitness", "who", "says", "it", "was", "n't", "him"]
# ::lemmas ["but", "you", "have", "two", "picture", "of", "people", "with", "different", "clothe", ",", "and", "an", "eyewitness", "who", "say", "it", "be", "not", "he"]
(c7-7 / contrast-01
      :ARG2 (c7-2 / have-03
                  :ARG0 (c7-0 / you)
                  :ARG1 (c7-9 / and
                              :op1 (c7-6 / picture
                                         :topic (c7-4 / person
                                                      :ARG0-of (c7-1 / wear-01
                                                                     :ARG1 (c7-10 / clothes
                                                                                  :ARG1-of (c7-5 / differ-02))))
                                         :quant 2)
                              :op2 (c7-11 / eyewitness
                                          :ARG0-of (c7-8 / say-01
                                                         :ARG1 (c7-3 / have-polarity-91
                                                                     :ARG1 c7-10
                                                                     :ARG2 -))))))

# ::snt but reasonable doubt? Innocent until proven guilt? Nah, fuck it, let's execute him
# ::tokens ["but", "reasonable", "doubt", "?", "Innocent", "until", "proven", "guilt", "?", "Nah", ",", "fuck", "it", ",", "let", "'s", "execute", "him"]
# ::lemmas ["but", "reasonable", "doubt", "?", "innocent", "until", "prove", "guilt", "?", "Nah", ",", "fuck", "it", ",", "let", "us", "execute", "he"]
(c8-5 / multi-sentence
      :snt1 (c8-9 / contrast-01
                  :ARG2 (c8-7 / doubt-01
                              :ARG1-of (c8-14 / reasonable-02)))
      :snt2 (c8-8 / innocent-01
                  :time (c8-11 / until
                               :op1 (c8-10 / prove-01
                                           :ARG1 (c8-12 / guilty-01)))
                  :polarity (c8-13 / amr-unknown))
      :snt3 (c8-6 / fuck-01
                  :ARG0 (c8-0 / you)
                  :ARG1 (c8-2 / it)
                  :mod (c8-15 / nah)
                  :mode imperative)
      :snt4 (c8-3 / execute-01
                  :ARG0 (c8-1 / we)
                  :ARG1 (c8-4 / he)
                  :mode imperative))

# ::snt Good job getting (a guy who looks a bit like a) petty thief off the street (four hours after shooting him)
# ::tokens ["Good", "job", "getting", "(", "a", "guy", "who", "looks", "a", "bit", "like", "a", ")", "petty", "thief", "off", "the", "street", "(", "four", "hours", "after", "shooting", "him", ")"]
# ::lemmas ["good", "job", "get", "(", "a", "guy", "who", "look", "a", "bit", "like", "a", ")", "petty", "thief", "off", "the", "street", "(", "four", "hours", "after", "shoot", "he", ")"]
(c9-4 / job
      :ARG1-of (c9-8 / good-02)
      :topic (c9-1 / get-05
                   :ARG1 (c9-13 / guy
                                :ARG1-of (c9-10 / resemble-01
                                                :ARG2 (c9-7 / person
                                                            :ARG0-of (c9-12 / steal-01
                                                                            :mod (c9-6 / petty)))
                                                :degree (c9-14 / bit)))
                   :ARG2 (c9-11 / off
                                :op1 (c9-2 / street))
                   :time (c9-9 / after
                               :op1 (c9-0 / shoot-02
                                          :ARG1 c9-13)
                               :quant (c9-3 / temporal-quantity
                                            :unit (c9-5 / hour)
                                            :quant 4))))

# ::snt it's obviously the same people and there's a confession
# ::tokens ["it", "'s", "obviously", "the", "same", "people", "and", "there", "'s", "a", "confession"]
# ::lemmas ["it", "be", "obviously", "the", "same", "people", "and", "there", "be", "a", "confession"]
(c10-2 / and
       :op1 (c10-4 / same-01
                   :ARG1 (c10-1 / person)
                   :ARG1-of (c10-3 / obvious-01))
       :op2 (c10-0 / confess-01))

# ::snt Hey everybody, robbed a store. Can they shoot you down? Can I say that after they shoot you down?
# ::tokens ["Hey", "everybody", ",", "robbed", "a", "store", ".", "Can", "they", "shoot", "you", "down", "?", "Can", "I", "say", "that", "after", "they", "shoot", "you", "down", "?"]
# ::lemmas ["hey", "everybody", ",", "rob", "a", "store", ".", "can", "they", "shoot", "you", "down", "?", "can", "i", "say", "that", "after", "they", "shoot", "you", "down", "?"]
(c11-5 / multi-sentence
       :snt1 (c11-11 / rob-01
                     :ARG0 (c11-15 / everybody)
                     :ARG1 (c11-14 / store)
                     :mod (c11-2 / hey
                                 :mode expressive))
       :snt2 (c11-8 / possible-01
                    :ARG1 (c11-3 / shoot-down-05
                                 :ARG0 (c11-4 / they)
                                 :ARG1 (c11-0 / you))
                    :polarity (c11-10 / amr-unknown))
       :snt3 (c11-7 / possible-01
                    :ARG1 (c11-1 / say-01
                                 :ARG0 (c11-9 / i)
                                 :ARG1 (c11-6 / shoot-down-05
                                              :ARG0 c11-4
                                              :ARG1 c11-0)
                                 :time (c11-12 / after
                                               :op1 c11-3)
                                 :polarity (c11-13 / amr-unknown))))

# ::snt I'm not arguing that he deserved to be shot.
# ::tokens ["I", "'m", "not", "arguing", "that", "he", "deserved", "to", "be", "shot", "."]
# ::lemmas ["i", "be", "not", "argue", "that", "he", "deserve", "to", "be", "shoot", "."]
(c12-3 / argue-01
       :ARG0 (c12-2 / i)
       :ARG1 (c12-1 / deserve-01
                    :ARG0 (c12-0 / he)
                    :ARG1 (c12-4 / shoot-01
                                 :ARG1 c12-0))
       :polarity -)

# ::snt Then what are you arguing?
# ::tokens ["Then", "what", "are", "you", "arguing", "?"]
# ::lemmas ["then", "what", "be", "you", "argue", "?"]
(c13-1 / argue-01
       :ARG0 (c13-0 / you)
       :ARG1 (c13-2 / amr-unknown))

# ::snt And also obliterating your attempt to deny that he was the person that robbed the store
# ::tokens ["And", "also", "obliterating", "your", "attempt", "to", "deny", "that", "he", "was", "the", "person", "that", "robbed", "the", "store"]
# ::lemmas ["and", "also", "obliterate", "your", "attempt", "to", "deny", "that", "he", "be", "the", "person", "that", "rob", "the", "store"]
(c14-3 / and
       :op2 (c14-5 / obliterate-01
                   :ARG1 (c14-6 / attempt-01
                                :ARG0 (c14-0 / you)
                                :ARG1 (c14-2 / deny-01
                                             :ARG0 c14-0
                                             :ARG1 (c14-4 / rob-01
                                                          :ARG0 (c14-1 / he)
                                                          :ARG1 (c14-8 / store))))
                   :mod (c14-7 / also)))

# ::snt So he took off his socks but did nothing else to change his appearance? Obliterated, lol
# ::tokens ["So", "he", "took", "off", "his", "socks", "but", "did", "nothing", "else", "to", "change", "his", "appearance", "?", "Obliterated", ",", "lol"]
# ::lemmas ["so", "he", "take", "off", "his", "sock", "but", "do", "nothing", "else", "to", "change", "his", "appearance", "?", "obliterate", ",", "lol"]
(c15-3 / multi-sentence
       :snt1 (c15-6 / contrast-01
                    :ARG1 (c15-2 / take-off-07
                                 :ARG0 (c15-0 / he)
                                 :ARG1 (c15-12 / sock
                                               :poss c15-0))
                    :ARG2 (c15-5 / do-02
                                 :ARG0 c15-0
                                 :ARG1 (c15-15 / nothing
                                               :mod (c15-1 / else))
                                 :purpose (c15-10 / change-01
                                                  :ARG0 c15-0
                                                  :ARG1 (c15-8 / appear-02
                                                               :ARG1 (c15-4 / he)))))
       :snt2 (c15-9 / literate-01
                    :polarity (c15-11 / amr-unknown)
                    :ARG2-of (c15-14 / laugh-01
                                     :ARG0 (c15-7 / i)
                                     :manner (c15-13 / loud)
                                     :mode expressive)))

# ::snt snitches get stitches in the hood. Store owner knows.
# ::tokens ["snitches", "get", "stitches", "in", "the", "hood", ".", "Store", "owner", "knows", "."]
# ::lemmas ["snitch", "get", "stitch", "in", "the", "hood", ".", "store", "owner", "know", "."]
(c16-4 / multi-sentence
       :snt1 (c16-6 / get-01
                    :ARG0 (c16-8 / snitch)
                    :ARG1 (c16-2 / stitch)
                    :location (c16-3 / hood))
       :snt2 (c16-0 / know-01
                    :ARG0 (c16-5 / person
                                 :ARG0-of (c16-7 / own-01
                                                 :ARG1 (c16-1 / store)))))

# ::snt looooool. "snitches get stiches in the hood" (noracist bro)
# ::tokens ["looooool", ".", "\"", "snitches", "get", "stiches", "in", "the", "hood", "\"", "(", "noracist", "bro", ")"]
# ::lemmas ["looooool", ".", "\"", "snitch", "get", "stiche", "in", "the", "hood", "\"", "(", "noracist", "bro", ")"]
(c17-1 / multi-sentence
       :snt1 (c17-3 / laugh-01
                    :ARG0 (c17-2 / i)
                    :manner (c17-8 / loud)
                    :mode expressive)
       :snt2 (c17-7 / say-01
                    :ARG0 (c17-9 / bro
                                 :mod (c17-6 / racist))
                    :ARG1 (c17-4 / get-03
                                 :ARG1 (c17-5 / bitch)
                                 :ARG2 (c17-0 / hood))))

# ::snt dude give it up. It's him. Confirmed.
# ::tokens ["dude", "give", "it", "up", ".", "It", "'s", "him", ".", "Confirmed", "."]
# ::lemmas ["dude", "give", "it", "up", ".", "it", "be", "he", ".", "confirm", "."]
(c18-1 / multi-sentence
       :snt1 (c18-5 / give-up-07
                    :ARG0 (c18-2 / dude)
                    :ARG1 (c18-3 / it))
       :snt2 (c18-0 / he
                    :domain c18-3)
       :snt3 (c18-4 / confirm-01))

# ::snt You get the last word here, I can't argue with everyone forever. Peace.
# ::tokens ["You", "get", "the", "last", "word", "here", ",", "I", "ca", "n't", "argue", "with", "everyone", "forever", ".", "Peace", "."]
# ::lemmas ["you", "get", "the", "last", "word", "here", ",", "i", "can", "not", "argue", "with", "everyone", "forever", ".", "peace", "."]
(c19-3 / multi-sentence
       :snt1 (c19-8 / get-01
                    :ARG0 (c19-0 / you)
                    :ARG1 (c19-1 / word
                                 :mod (c19-9 / last))
                    :location (c19-2 / here))
       :snt2 (c19-6 / possible-01
                    :ARG1 (c19-10 / argue-02
                                  :ARG0 (c19-7 / i)
                                  :ARG1 (c19-11 / everyone)
                                  :duration (c19-4 / forever))
                    :polarity -)
       :snt3 (c19-5 / peace))

# ::snt he seemed frightened
# ::tokens ["he", "seemed", "frightened"]
# ::lemmas ["he", "seem", "frightened"]
(c20-1 / seem-01
       :ARG1 (c20-0 / frighten-01
                    :ARG1 (c20-2 / he)))

# ::snt Somebody else probably did commit theft. Brown committed Robbery.
# ::tokens ["Somebody", "else", "probably", "did", "commit", "theft", ".", "Brown", "committed", "Robbery", "."]
# ::lemmas ["somebody", "else", "probably", "do", "commit", "theft", ".", "Brown", "commit", "Robbery", "."]
(c21-1 / multi-sentence
       :snt1 (c21-3 / probable
                    :domain (c21-4 / commit-02
                                   :ARG0 (c21-7 / somebody
                                                :mod (c21-9 / else))
                                   :ARG1 (c21-0 / steal-01
                                                :ARG0 c21-7)))
       :snt2 (c21-6 / commit-02
                    :ARG0 (c21-2 / person
                                 :name (c21-8 / name
                                              :op1 "Brown"))
                    :ARG1 (c21-5 / rob-01
                                 :ARG0 c21-2)))

# ::snt actually I did use the word robbery
# ::tokens ["actually", "I", "did", "use", "the", "word", "robbery"]
# ::lemmas ["actually", "i", "do", "use", "the", "word", "robbery"]
(c22-2 / use-01
       :ARG0 (c22-1 / i)
       :ARG1 (c22-0 / word-01
                    :ARG1 (c22-4 / rob-01))
       :ARG1-of (c22-3 / actual-02))

# ::snt Your post states theft. What am I missing?
# ::tokens ["Your", "post", "states", "theft", ".", "What", "am", "I", "missing", "?"]
# ::lemmas ["your", "post", "state", "theft", ".", "what", "be", "i", "miss", "?"]
(c23-2 / multi-sentence
       :snt1 (c23-7 / state-01
                    :ARG0 (c23-3 / post-01
                                 :ARG0 (c23-0 / you))
                    :ARG1 (c23-1 / steal-01))
       :snt2 (c23-6 / miss-01
                    :ARG0 (c23-4 / i)
                    :ARG1 (c23-5 / amr-unknown)))

# ::snt when I spoke to store owner, I said "robbery", tweeted "theft" in error
# ::tokens ["when", "I", "spoke", "to", "store", "owner", ",", "I", "said", "\"", "robbery", "\"", ",", "tweeted", "\"", "theft", "\"", "in", "error"]
# ::lemmas ["when", "i", "speak", "to", "store", "owner", ",", "i", "say", "\"", "robbery", "\"", ",", "tweet", "\"", "theft", "\"", "in", "error"]
(c24-6 / and
       :op1 (c24-9 / say-01
                   :ARG0 (c24-4 / i)
                   :ARG1 (c24-7 / rob-01))
       :op2 (c24-3 / tweet-01
                   :ARG0 c24-4
                   :ARG1 (c24-1 / steal-01)
                   :manner (c24-10 / err-01))
       :time (c24-0 / speak-01
                    :ARG0 c24-4
                    :ARG2 (c24-5 / person
                                 :ARG0-of (c24-8 / own-01
                                                 :ARG1 (c24-2 / store)))))

# ::snt Thank you for clarifying. You definitely didn't have to reply to me. Have a great day and thanks for the reports
# ::tokens ["Thank", "you", "for", "clarifying", ".", "You", "definitely", "did", "n't", "have", "to", "reply", "to", "me", ".", "Have", "a", "great", "day", "and", "thanks", "for", "the", "reports"]
# ::lemmas ["thank", "you", "for", "clarify", ".", "you", "definitely", "do", "not", "have", "to", "reply", "to", "i", ".", "have", "a", "great", "day", "and", "thank", "for", "the", "report"]
(c25-6 / multi-sentence
       :snt1 (c25-5 / thank-01
                    :ARG1 (c25-0 / you)
                    :ARG2 (c25-9 / clarify-10
                                 :ARG0 c25-0))
       :snt2 (c25-14 / obligate-01
                     :ARG1 (c25-15 / you)
                     :ARG2 (c25-13 / reply-01
                                   :ARG0 c25-15
                                   :ARG1 (c25-10 / i))
                     :mod (c25-8 / definite)
                     :polarity -)
       :snt3 (c25-11 / and
                     :op1 (c25-3 / have-03
                                 :ARG0 (c25-1 / you)
                                 :ARG1 (c25-4 / day
                                              :mod (c25-12 / great))
                                 :mode imperative)
                     :op2 (c25-7 / thank-01
                                 :ARG1 c25-1
                                 :ARG2 (c25-2 / report-01)
                                 :mode expressive)))

# ::snt Brown's family attorney said in an interview today that the person in the video "probably is Brown"
# ::tokens ["Brown", "'s", "family", "attorney", "said", "in", "an", "interview", "today", "that", "the", "person", "in", "the", "video", "\"", "probably", "is", "Brown", "\""]
# ::lemmas ["Brown", "'s", "family", "attorney", "say", "in", "an", "interview", "today", "that", "the", "person", "in", "the", "video", "\"", "probably", "be", "Brown", "\""]
(c26-10 / say-01
        :ARG0 (c26-9 / attorney
                     :mod (c26-3 / family
                                 :ARG1-of (c26-1 / have-org-role-91
                                                 :ARG0 (c26-6 / person
                                                              :name (c26-11 / name
                                                                            :op1 "Brown"))
                                                 :ARG2 (c26-4 / member))))
        :ARG1 (c26-5 / probable
                     :domain (c26-0 / person
                                    :medium (c26-8 / video)))
        :time (c26-7 / interview-01
                     :ARG1 c26-9
                     :time (c26-2 / today)))

# ::snt Any chance that's being said for fear of retribution?
# ::tokens ["Any", "chance", "that", "'s", "being", "said", "for", "fear", "of", "retribution", "?"]
# ::lemmas ["any", "chance", "that", "be", "be", "say", "for", "fear", "of", "retribution", "?"]
(c27-2 / chance-02
       :ARG1 (c27-7 / say-01
                    :ARG1 (c27-0 / that))
       :ARG2 (c27-3 / any)
       :ARG1-of (c27-5 / cause-01
                       :ARG0 (c27-1 / fear-01
                                    :ARG1 (c27-4 / retribute-01)))
       :polarity (c27-6 / amr-unknown))

# ::snt possibly. He seemed frightened
# ::tokens ["possibly", ".", "He", "seemed", "frightened"]
# ::lemmas ["possibly", ".", "he", "seem", "frightened"]
(c28-1 / multi-sentence
       :snt1 (c28-3 / possible-01)
       :snt2 (c28-4 / seem-01
                    :ARG1 (c28-2 / frighten-01
                                 :ARG1 (c28-0 / he))))

# ::snt now we now why!! Jeez!!
# ::tokens ["now", "we", "now", "why", "!", "!", "Jeez", "!", "!"]
# ::lemmas ["now", "we", "now", "why", "!", "!", "jeez", "!", "!"]
(c29-1 / multi-sentence
       :snt1 (c29-4 / cause-01
                    :ARG0 (c29-5 / amr-unknown)
                    :ARG1 (c29-0 / we)
                    :time (c29-6 / now)
                    :time (c29-3 / now))
       :snt2 (c29-2 / jeez
                    :mode expressive))

# ::snt or maybe the police scared him into saying it was michael brown in the first place?
# ::tokens ["or", "maybe", "the", "police", "scared", "him", "into", "saying", "it", "was", "michael", "brown", "in", "the", "first", "place", "?"]
# ::lemmas ["or", "maybe", "the", "police", "scare", "he", "into", "say", "it", "be", "michael", "brown", "in", "the", "first", "place", "?"]
(c30-8 / or
       :op2 (c30-5 / possible-01
                   :ARG1 (c30-9 / scare-01
                                :ARG0 (c30-4 / police)
                                :ARG1 (c30-1 / he)
                                :ARG2 (c30-2 / say-01
                                             :ARG0 c30-1
                                             :ARG1 (c30-0 / person
                                                          :name (c30-10 / name
                                                                        :op1 "Michael"
                                                                        :op2 "Brown")
                                                          :domain (c30-6 / it)))
                                :mod (c30-3 / in-the-first-place))
                   :polarity (c30-7 / amr-unknown)))

# ::snt or is that impossible because the police would never be capable of unscrupulous behavior?
# ::tokens ["or", "is", "that", "impossible", "because", "the", "police", "would", "never", "be", "capable", "of", "unscrupulous", "behavior", "?"]
# ::lemmas ["or", "be", "that", "impossible", "because", "the", "police", "would", "never", "be", "capable", "of", "unscrupulous", "behavior", "?"]
(c31-6 / or
       :op2 (c31-3 / cause-01
                   :ARG0 (c31-7 / capable-01
                                :ARG1 (c31-2 / police)
                                :ARG2 (c31-9 / behave-01
                                             :ARG0 c31-2
                                             :ARG1-of (c31-4 / unscrupulous-02))
                                :time (c31-8 / ever)
                                :polarity -)
                   :ARG1 (c31-1 / possible-01
                                :ARG1 (c31-0 / that)
                                :polarity (c31-5 / amr-unknown)
                                :polarity -)))

# ::snt I def did not say that. And even if it was I certainly don't think he deserved to die for it.
# ::tokens ["I", "def", "did", "not", "say", "that", ".", "And", "even", "if", "it", "was", "I", "certainly", "do", "n't", "think", "he", "deserved", "to", "die", "for", "it", "."]
# ::lemmas ["i", "def", "do", "not", "say", "that", ".", "and", "even", "if", "it", "be", "i", "certainly", "do", "not", "think", "he", "deserve", "to", "die", "for", "it", "."]
(c32-3 / multi-sentence
       :snt1 (c32-12 / say-01
                     :ARG0 (c32-8 / i)
                     :ARG1 (c32-2 / that)
                     :mod (c32-7 / def)
                     :polarity -)
       :snt2 (c32-10 / and
                     :op2 (c32-0 / have-concession-91
                                 :ARG1 (c32-4 / think-01
                                              :ARG0 (c32-1 / i)
                                              :ARG1 (c32-5 / deserve-01
                                                           :ARG0 (c32-6 / he)
                                                           :ARG1 (c32-13 / die-01
                                                                         :ARG1 c32-6)
                                                           :ARG1-of (c32-9 / cause-01
                                                                           :ARG0 c32-2))
                                              :polarity -)
                                 :ARG2 (c32-14 / even-if
                                               :op1 c32-2)
                                 :mod (c32-11 / certain))))

# ::snt im not saying you did, but that is what has been implied the entire course of this investigation
# ::tokens ["i", "m", "not", "saying", "you", "did", ",", "but", "that", "is", "what", "has", "been", "implied", "the", "entire", "course", "of", "this", "investigation"]
# ::lemmas ["i", "m", "not", "say", "you", "do", ",", "but", "that", "be", "what", "have", "be", "imply", "the", "entire", "course", "of", "this", "investigation"]
(c33-6 / contrast-01
       :ARG1 (c33-8 / say-01
                    :ARG0 (c33-5 / i)
                    :ARG1 (c33-4 / do-02
                                 :ARG0 (c33-0 / you))
                    :polarity -)
       :ARG2 (c33-1 / imply-01
                    :ARG1 c33-4
                    :duration (c33-7 / course
                                     :mod (c33-9 / entire)
                                     :subevent-of (c33-3 / investigate-01
                                                         :ARG1 (c33-2 / this)))))

# ::snt that's why the police's testimony has been considered law despite it contrasting what EYEWITNESSES said
# ::tokens ["that", "'s", "why", "the", "police", "'s", "testimony", "has", "been", "considered", "law", "despite", "it", "contrasting", "what", "EYEWITNESSES", "said"]
# ::lemmas ["that", "be", "why", "the", "police", "'s", "testimony", "have", "be", "consider", "law", "despite", "it", "contrast", "what", "EYEWITNESSES", "say"]
(c34-5 / cause-01
       :ARG0 (c34-2 / that)
       :ARG1 (c34-10 / consider-02
                     :ARG1 (c34-9 / law
                                  :domain (c34-1 / testify-01
                                                 :ARG0 (c34-6 / police)))
                     :concession (c34-7 / contrast-01
                                        :ARG1 (c34-3 / thing
                                                     :ARG1-of (c34-8 / say-01
                                                                     :ARG0 (c34-4 / person
                                                                                  :ARG0-of (c34-0 / witness-01)))
                                                     :ARG2-of c34-7))))

# ::snt Not by this kid.
# ::tokens ["Not", "by", "this", "kid", "."]
# ::lemmas ["not", "by", "this", "kid", "."]
(c35-2 / thing
       :prep-by (c35-0 / kid
                       :mod (c35-1 / this))
       :polarity -)

# ::snt you seem to be the only one and that is a testament to your character miss.
# ::tokens ["you", "seem", "to", "be", "the", "only", "one", "and", "that", "is", "a", "testament", "to", "your", "character", "miss", "."]
# ::lemmas ["you", "seem", "to", "be", "the", "only", "one", "and", "that", "be", "a", "testament", "to", "your", "character", "miss", "."]
(c36-4 / and
       :op1 (c36-6 / seem-01
                   :ARG1 (c36-5 / one
                                :mod (c36-2 / only)
                                :domain (c36-0 / you)))
       :op2 (c36-1 / testify-01
                   :ARG0 c36-5
                   :ARG1 (c36-3 / character
                                :poss c36-0)))

# ::snt There are lots of us out there. Promise.
# ::tokens ["There", "are", "lots", "of", "us", "out", "there", ".", "Promise", "."]
# ::lemmas ["there", "be", "lot", "of", "we", "out", "there", ".", "promise", "."]
(c37-1 / multi-sentence
       :snt1 (c37-5 / be-located-at-91
                    :ARG1 (c37-0 / we
                                 :quant (c37-3 / lot))
                    :ARG2 (c37-4 / out-there))
       :snt2 (c37-2 / promise-01))

# ::snt we all need to unite then. solidarity is key in the face of adversity and prejudice.
# ::tokens ["we", "all", "need", "to", "unite", "then", ".", "solidarity", "is", "key", "in", "the", "face", "of", "adversity", "and", "prejudice", "."]
# ::lemmas ["we", "all", "need", "to", "unite", "then", ".", "solidarity", "be", "key", "in", "the", "face", "of", "adversity", "and", "prejudice", "."]
(c38-3 / multi-sentence
       :snt1 (c38-11 / need-01
                     :ARG0 (c38-1 / we
                                  :mod (c38-7 / all))
                     :ARG1 (c38-6 / unite-01
                                  :ARG1 c38-1)
                     :mod (c38-2 / then))
       :snt2 (c38-0 / key-02
                    :ARG1 (c38-10 / solidarity)
                    :time (c38-4 / face-01
                                 :ARG0 c38-1
                                 :ARG1 (c38-8 / and
                                              :op1 (c38-9 / adversity)
                                              :op2 (c38-5 / prejudice-01)))))

# ::snt Truer words have never been spoken.
# ::tokens ["Truer", "words", "have", "never", "been", "spoken", "."]
# ::lemmas ["true", "word", "have", "never", "be", "speak", "."]
(c39-4 / speak-01
       :ARG1 (c39-0 / word
                    :ARG1-of (c39-1 / have-degree-91
                                    :ARG2 (c39-2 / tough-03)
                                    :ARG3 (c39-3 / more)))
       :time (c39-5 / ever)
       :polarity -)

# ::snt whose mike smith ?
# ::tokens ["whose", "mike", "smith", "?"]
# ::lemmas ["whose", "mike", "smith", "?"]
(c40-2 / person
       :name (c40-1 / name
                    :op1 "Mike"
                    :op2 "Smail")
       :mod (c40-0 / amr-unknown))

# ::snt Very embarrassing! Of course I meant . Ugh
# ::tokens ["Very", "embarrassing", "!", "Of", "course", "I", "meant", ".", "Ugh"]
# ::lemmas ["very", "embarrassing", "!", "of", "course", "i", "mean", ".", "ugh"]
(c41-0 / multi-sentence
       :snt1 (c41-6 / embarrass-01
                    :degree (c41-2 / very)
                    :mode expressive)
       :snt2 (c41-5 / mean-01
                    :ARG0 (c41-1 / i)
                    :mod (c41-4 / of-course)
                    :mod (c41-3 / ugh
                                :mode expressive)))

# ::snt and the last time i checked the eyewitness testimony overrides the testimony of the defident's friends
# ::tokens ["and", "the", "last", "time", "i", "checked", "the", "eyewitness", "testimony", "overrides", "the", "testimony", "of", "the", "defident", "'s", "friends"]
# ::lemmas ["and", "the", "last", "time", "i", "check", "the", "eyewitness", "testimony", "override", "the", "testimony", "of", "the", "defident", "'s", "friend"]
(c42-9 / and
       :op2 (c42-11 / override-01
                    :ARG0 (c42-2 / testify-01
                                 :ARG0 (c42-12 / eyewitness))
                    :ARG1 (c42-1 / testify-01
                                 :ARG0 (c42-6 / person
                                              :ARG0-of (c42-0 / have-rel-role-91
                                                              :ARG1 (c42-5 / defident)
                                                              :ARG2 (c42-3 / friend))))
                    :time (c42-7 / check-01
                                 :ARG0 (c42-8 / i)
                                 :ARG1 (c42-4 / testify-01
                                              :ARG0 c42-12)
                                 :mod (c42-10 / last))))

# ::snt Is that the video also?
# ::tokens ["Is", "that", "the", "video", "also", "?"]
# ::lemmas ["be", "that", "the", "video", "also", "?"]
(c43-0 / video
       :polarity (c43-1 / amr-unknown)
       :mod (c43-2 / also)
       :domain (c43-3 / that))

# ::snt even though his friend and witness to the shooting has admitted to the cigarillo theft?
# ::tokens ["even", "though", "his", "friend", "and", "witness", "to", "the", "shooting", "has", "admitted", "to", "the", "cigarillo", "theft", "?"]
# ::lemmas ["even", "though", "his", "friend", "and", "witness", "to", "the", "shooting", "have", "admit", "to", "the", "cigarillo", "theft", "?"]
(c44-1 / have-concession-91
       :polarity (c44-8 / amr-unknown)
       :ARG2 (c44-9 / admit-01
                    :ARG0 (c44-10 / and
                                  :op1 (c44-6 / person
                                              :ARG0-of (c44-4 / have-rel-role-91
                                                              :ARG1 (c44-12 / he)
                                                              :ARG2 (c44-3 / friend)))
                                  :op2 (c44-5 / person
                                              :ARG0-of (c44-0 / witness-01
                                                              :ARG1 (c44-11 / shoot-02))))
                    :ARG1 (c44-2 / thieve-01
                                 :ARG0 c44-12
                                 :ARG1 (c44-7 / cigarillo))))

# ::snt But Dorian Johnson already admitted they were in store and stole
# ::tokens ["But", "Dorian", "Johnson", "already", "admitted", "they", "were", "in", "store", "and", "stole"]
# ::lemmas ["but", "Dorian", "Johnson", "already", "admit", "they", "be", "in", "store", "and", "steal"]
(c45-3 / contrast-01
       :ARG2 (c45-4 / admit-01
                    :ARG0 (c45-2 / person
                                 :name (c45-8 / name
                                              :op1 "Dorian"
                                              :op2 "Johnson"))
                    :ARG1 (c45-5 / and
                                 :op1 (c45-9 / be-located-at-91
                                             :ARG1 (c45-1 / they)
                                             :ARG2 (c45-7 / store))
                                 :op2 (c45-0 / steal-01
                                             :ARG0 c45-1))
                    :time (c45-6 / already)))

# ::snt This is getting stranger by the minute. Will we ever get to the truth?
# ::tokens ["This", "is", "getting", "stranger", "by", "the", "minute", ".", "Will", "we", "ever", "get", "to", "the", "truth", "?"]
# ::lemmas ["this", "be", "get", "strange", "by", "the", "minute", ".", "will", "we", "ever", "get", "to", "the", "truth", "?"]
(c46-3 / multi-sentence
       :snt1 (c46-7 / get-03
                    :ARG1 (c46-0 / we)
                    :ARG2 (c46-2 / truth)
                    :polarity (c46-6 / amr-unknown)
                    :time (c46-12 / ever)
                    :snt2-of c46-3)
       :ARG1 (c46-4 / this)
       :ARG2 (c46-1 / have-degree-91
                    :ARG1 c46-4
                    :ARG2 (c46-11 / strange)
                    :ARG3 (c46-10 / more))
       :frequency (c46-8 / rate-entity-91
                         :ARG3 (c46-5 / temporal-quantity
                                      :unit (c46-9 / minute)
                                      :quant 1)))

# ::snt Where's With this breaking news? Police Chief making press conference.
# ::tokens ["Where", "'s", "With", "this", "breaking", "news", "?", "Police", "Chief", "making", "press", "conference", "."]
# ::lemmas ["where", "be", "with", "this", "break", "news", "?", "Police", "Chief", "make", "press", "conference", "."]
(c47-3 / multi-sentence
       :snt1 (c47-10 / news
                     :ARG1-of (c47-11 / break-13)
                     :mod (c47-2 / this)
                     :location (c47-7 / amr-unknown))
       :snt2 (c47-8 / make-01
                    :ARG0 (c47-5 / person
                                 :ARG0-of (c47-1 / have-org-role-91
                                                 :ARG1 (c47-4 / police)
                                                 :ARG2 (c47-6 / chief)))
                    :ARG1 (c47-9 / conference
                                 :mod (c47-0 / press))))

# ::snt Y'all --&gt; " Store owner told Monday that there was a theft, but said it was not MichaelBrown said it was someone else"
# ::tokens ["Y'all", "--&gt", ";", "\"", "Store", "owner", "told", "Monday", "that", "there", "was", "a", "theft", ",", "but", "said", "it", "was", "not", "MichaelBrown", "said", "it", "was", "someone", "else", "\""]
# ::lemmas ["Y'all", "--&gt", ";", "\"", "store", "owner", "tell", "Monday", "that", "there", "be", "a", "theft", ",", "but", "say", "it", "be", "not", "MichaelBrown", "say", "it", "be", "someone", "else", "\""]
(c48-12 / and
        :op2 (c48-14 / and
                     :op1 (c48-4 / tell-01
                                 :ARG0 (c48-9 / person
                                              :ARG0-of (c48-13 / own-01
                                                               :ARG1 (c48-16 / store)))
                                 :ARG1 (c48-2 / steal-01)
                                 :time (c48-8 / date-entity
                                              :weekday (c48-5 / monday)))
                     :op2 (c48-10 / contrast-01
                                  :ARG1 (c48-1 / say-01
                                               :ARG0 c48-9
                                               :ARG1 (c48-3 / steal-01
                                                            :ARG0 (c48-7 / person
                                                                         :name (c48-17 / name
                                                                                       :op1 "MichaelBrown"))
                                                            :polarity -)
                                               :ARG2 (c48-11 / say-01
                                                             :ARG0 c48-7
                                                             :ARG1 (c48-15 / someone
                                                                           :mod (c48-6 / else)
                                                                           :domain (c48-0 / steal-01)))))))

# ::snt " Store owner told Monday that there was a theft, but said it was not MichaelBrown; said it was someone else"
# ::tokens ["\"", "Store", "owner", "told", "Monday", "that", "there", "was", "a", "theft", ",", "but", "said", "it", "was", "not", "MichaelBrown", ";", "said", "it", "was", "someone", "else", "\""]
# ::lemmas ["\"", "store", "owner", "tell", "Monday", "that", "there", "be", "a", "theft", ",", "but", "say", "it", "be", "not", "MichaelBrown", ";", "say", "it", "be", "someone", "else", "\""]
(c49-10 / and
        :op1 (c49-3 / tell-01
                    :ARG0 (c49-9 / person
                                 :ARG0-of (c49-11 / own-01
                                                  :ARG1 (c49-12 / store)))
                    :ARG1 (c49-4 / thieve-01)
                    :time (c49-8 / date-entity
                                 :weekday (c49-5 / monday)))
        :op2 (c49-1 / say-01
                    :ARG0 c49-9
                    :ARG1 (c49-7 / person
                                 :name (c49-13 / name
                                               :op1 "MichaelBrown")
                                 :polarity -))
        :op3 (c49-0 / say-01
                    :ARG0 c49-9
                    :ARG1 (c49-2 / someone
                                 :mod (c49-6 / else))))

# ::snt I could tell it wasn't him when I saw the video.
# ::tokens ["I", "could", "tell", "it", "was", "n't", "him", "when", "I", "saw", "the", "video", "."]
# ::lemmas ["i", "could", "tell", "it", "be", "not", "he", "when", "i", "see", "the", "video", "."]
(c50-3 / possible-01
       :ARG1 (c50-1 / tell-02
                    :ARG0 (c50-2 / i)
                    :ARG1 (c50-0 / he
                                 :polarity -))
       :time (c50-5 / see-01
                    :ARG0 c50-2
                    :ARG1 (c50-4 / video)))
