# ::snt Well that guys a nut.
# ::tokens ["Well", "that", "guys", "a", "nut", "."]
# ::lemmas ["well", "that", "guy", "a", "nut", "."]
(c1-2 / nut
      :domain (c1-0 / guy
                    :mod (c1-3 / that))
      :mod (c1-1 / well))

# ::snt ://
# ::tokens [":", "//"]
# ::lemmas [":", "//"]
(c2-0 / emoticon
      :value "://")

# ::snt : Breaking: Gunman at Paris store threatens to kill hostages if suspects are harmed.
# ::tokens [":", "Breaking", ":", "Gunman", "at", "Paris", "store", "threatens", "to", "kill", "hostages", "if", "suspects", "are", "harmed", "."]
# ::lemmas [":", "break", ":", "Gunman", "at", "Paris", "store", "threaten", "to", "kill", "hostage", "if", "suspect", "be", "harm", "."]
(c3-10 / break-18
       :ARG1 (c3-3 / threaten-01
                   :ARG0 (c3-7 / gunman
                               :location (c3-8 / store
                                               :location (c3-5 / city
                                                               :name (c3-9 / name
                                                                           :op1 "Paris"))))
                   :ARG1 (c3-0 / kill-01
                               :ARG0 c3-7
                               :ARG1 (c3-1 / hostage))
                   :condition (c3-4 / harm-01
                                    :ARG1 (c3-6 / person
                                                :ARG2-of (c3-2 / suspect-01)))))

# ::snt Before attack, French began ceding control of neighborhoods to Islamists...
# ::tokens ["Before", "attack", ",", "French", "began", "ceding", "control", "of", "neighborhoods", "to", "Islamists", "..."]
# ::lemmas ["before", "attack", ",", "French", "begin", "cede", "control", "of", "neighborhood", "to", "Islamists", "..."]
(c4-11 / begin-01
       :ARG0 (c4-3 / person
                   :mod (c4-2 / country
                              :name (c4-10 / name
                                           :op1 "France")))
       :ARG1 (c4-9 / cede-01
                   :ARG0 c4-3
                   :ARG1 (c4-4 / control-01
                               :ARG0 c4-3
                               :ARG1 (c4-1 / neighborhood))
                   :ARG2 (c4-0 / person
                               :mod (c4-8 / religious-group
                                          :name (c4-5 / name
                                                      :op1 "Islamism"))))
       :time (c4-6 / before
                   :op1 (c4-7 / attack-01)))

# ::snt the terrorist had meeting with prsident in
# ::tokens ["the", "terrorist", "had", "meeting", "with", "prsident", "in"]
# ::lemmas ["the", "terrorist", "have", "meet", "with", "prsident", "in"]
(c5-2 / meet-03
      :ARG0 (c5-1 / terrorist)
      :ARG1 (c5-3 / person
                  :ARG0-of (c5-0 / have-org-role-91
                                 :ARG2 (c5-4 / minister))))

# ::snt seems it would behoove police to kill that particular gunman first then.
# ::tokens ["seems", "it", "would", "behoove", "police", "to", "kill", "that", "particular", "gunman", "first", "then", "."]
# ::lemmas ["seem", "it", "would", "behoove", "police", "to", "kill", "that", "particular", "gunman", "first", "then", "."]
(c6-7 / seem-01
      :ARG1 (c6-8 / behoove-01
                  :ARG0 (c6-0 / kill-01
                              :ARG0 (c6-4 / police)
                              :ARG1 (c6-5 / gunman
                                          :mod (c6-3 / particular)
                                          :mod (c6-1 / that))
                              :ord (c6-6 / ordinal-entity
                                         :value 1)
                              :time (c6-2 / then))
                  :ARG1 c6-4))

# ::snt how would they know if they are harmed or not? Is there some kind of communication between the suspects?
# ::tokens ["how", "would", "they", "know", "if", "they", "are", "harmed", "or", "not", "?", "Is", "there", "some", "kind", "of", "communication", "between", "the", "suspects", "?"]
# ::lemmas ["how", "would", "they", "know", "if", "they", "be", "harm", "or", "not", "?", "be", "there", "some", "kind", "of", "communication", "between", "the", "suspect", "?"]
(c7-5 / multi-sentence
      :snt1 (c7-0 / know-01
                  :ARG0 (c7-6 / they)
                  :ARG1 (c7-4 / truth-value
                              :polarity-of (c7-2 / harm-01
                                                 :ARG1 (c7-7 / they)))
                  :manner (c7-10 / amr-unknown))
      :snt2 (c7-8 / communicate-01
                  :ARG0 (c7-9 / person
                              :ARG2-of (c7-12 / suspect-01))
                  :mod (c7-1 / kind
                             :mod (c7-3 / some))
                  :polarity (c7-11 / amr-unknown)))

# ::snt had meeting with former president in
# ::tokens ["had", "meeting", "with", "former", "president", "in"]
# ::lemmas ["have", "meet", "with", "former", "president", "in"]
(c8-1 / meet-03
      :ARG0 (c8-5 / i)
      :ARG1 (c8-4 / person
                  :ARG0-of (c8-0 / have-org-role-91
                                 :ARG2 (c8-3 / president)
                                 :time (c8-2 / former))))

# ::snt : Breaking: Gunman at Paris store threatens to kill hostages if suspects are harmed. smh
# ::tokens [":", "Breaking", ":", "Gunman", "at", "Paris", "store", "threatens", "to", "kill", "hostages", "if", "suspects", "are", "harmed", ".", "smh"]
# ::lemmas [":", "break", ":", "Gunman", "at", "Paris", "store", "threaten", "to", "kill", "hostage", "if", "suspect", "be", "harm", ".", "smh"]
(c9-5 / multi-sentence
      :snt1 (c9-12 / break-18
                   :ARG1 (c9-4 / threaten-01
                               :ARG0 (c9-9 / gunman
                                           :location (c9-10 / store
                                                            :location (c9-7 / city
                                                                            :name (c9-11 / name
                                                                                         :op1 "Paris"))))
                               :ARG1 (c9-0 / kill-01
                                           :ARG0 c9-9
                                           :ARG1 (c9-2 / hostage))
                               :condition (c9-6 / harm-01
                                                :ARG1 (c9-8 / person
                                                            :ARG2-of (c9-3 / suspect-01)))))
      :snt2 (c9-1 / smh
                  :mode expressive))

# ::snt : Breaking: Gunman at Paris store threatens to kill hostages if suspects are harmed. What a mess
# ::tokens [":", "Breaking", ":", "Gunman", "at", "Paris", "store", "threatens", "to", "kill", "hostages", "if", "suspects", "are", "harmed", ".", "What", "a", "mess"]
# ::lemmas [":", "break", ":", "Gunman", "at", "Paris", "store", "threaten", "to", "kill", "hostage", "if", "suspect", "be", "harm", ".", "what", "a", "mess"]
(c10-5 / multi-sentence
       :snt1 (c10-13 / break-13
                     :ARG1 (c10-4 / threaten-01
                                  :ARG0 (c10-9 / gunman
                                               :location (c10-11 / store
                                                                 :location (c10-7 / city
                                                                                  :name (c10-12 / name
                                                                                                :op1 "Paris"))))
                                  :ARG1 (c10-0 / kill-01
                                               :ARG0 c10-9
                                               :ARG1 (c10-2 / hostage))
                                  :condition (c10-6 / harm-01
                                                    :ARG1 (c10-8 / person
                                                                 :ARG2-of (c10-3 / suspect-01)))))
       :snt2 (c10-10 / mess
                     :degree (c10-1 / so)))

# ::snt Omg : Breaking: Gunman at Paris store threatens to kill hostages if suspects are harmed.
# ::tokens ["Omg", ":", "Breaking", ":", "Gunman", "at", "Paris", "store", "threatens", "to", "kill", "hostages", "if", "suspects", "are", "harmed", "."]
# ::lemmas ["Omg", ":", "break", ":", "Gunman", "at", "Paris", "store", "threaten", "to", "kill", "hostage", "if", "suspect", "be", "harm", "."]
(c11-11 / break-18
        :ARG1 (c11-3 / threaten-01
                     :ARG0 (c11-7 / gunman
                                  :location (c11-9 / store
                                                   :location (c11-5 / city
                                                                    :name (c11-10 / name
                                                                                  :op1 "Paris"))))
                     :ARG1 (c11-0 / kill-01
                                  :ARG0 c11-7
                                  :ARG1 (c11-1 / hostage))
                     :condition (c11-4 / harm-01
                                       :ARG1 (c11-6 / person
                                                    :ARG2-of (c11-2 / suspect-01))))
        :mod (c11-8 / oh-my-god
                    :mode expressive))

# ::snt : Breaking: Gunman at Paris store threatens to kill hostages if suspects are harmed. smfh
# ::tokens [":", "Breaking", ":", "Gunman", "at", "Paris", "store", "threatens", "to", "kill", "hostages", "if", "suspects", "are", "harmed", ".", "smfh"]
# ::lemmas [":", "break", ":", "Gunman", "at", "Paris", "store", "threaten", "to", "kill", "hostage", "if", "suspect", "be", "harm", ".", "smfh"]
(c12-5 / multi-sentence
       :snt1 (c12-12 / break-18
                     :ARG1 (c12-4 / threaten-01
                                  :ARG0 (c12-9 / gunman
                                               :location (c12-10 / store
                                                                 :location (c12-7 / city
                                                                                  :name (c12-11 / name
                                                                                                :op1 "Paris"))))
                                  :ARG1 (c12-0 / kill-01
                                               :ARG0 c12-9
                                               :ARG1 (c12-2 / hostage))
                                  :condition (c12-6 / harm-01
                                                    :ARG1 (c12-8 / person
                                                                 :ARG2-of (c12-3 / suspect-01)))))
       :snt2 (c12-1 / smfh))
