# ::snt is that a normal call in this situation ?
# ::tokens ["is", "that", "a", "normal", "call", "in", "this", "situation", "?"]
# ::lemmas ["be", "that", "a", "normal", "call", "in", "this", "situation", "?"]
(c1-1 / call-02
      :polarity (c1-2 / amr-unknown)
      :ARG1-of (c1-4 / normal-02)
      :condition (c1-3 / situation
                       :mod (c1-0 / this)))

# ::snt : NEWS: 'Emergency Emergency' was the final distress call that was sent from the cockpit of flight -
# ::tokens [":", "NEWS", ":", "'", "Emergency", "Emergency", "'", "was", "the", "final", "distress", "call", "that", "was", "sent", "from", "the", "cockpit", "of", "flight", "-"]
# ::lemmas [":", "news", ":", "'", "Emergency", "Emergency", "'", "be", "the", "final", "distress", "call", "that", "be", "send", "from", "the", "cockpit", "of", "flight", "-"]
(c2-4 / and
      :op1 (c2-7 / news)
      :op2 (c2-3 / call-02
                 :ARG1 (c2-8 / emergency)
                 :ARG2 (c2-2 / distress-01)
                 :mod (c2-1 / final)
                 :ARG1-of (c2-6 / send-01
                                :ARG2 (c2-5 / cockpit
                                            :part-of (c2-0 / fly-01)))))

# ::snt : NEWS: 'Emergency Emergency' was the final distress call that was sent from the cockpit of flight -
# ::tokens [":", "NEWS", ":", "'", "Emergency", "Emergency", "'", "was", "the", "final", "distress", "call", "that", "was", "sent", "from", "the", "cockpit", "of", "flight", "-"]
# ::lemmas [":", "news", ":", "'", "Emergency", "Emergency", "'", "be", "the", "final", "distress", "call", "that", "be", "send", "from", "the", "cockpit", "of", "flight", "-"]
(c3-4 / and
      :op1 (c3-7 / news)
      :op2 (c3-3 / call-02
                 :ARG1 (c3-8 / emergency)
                 :ARG2 (c3-2 / distress-01)
                 :mod (c3-1 / final)
                 :ARG1-of (c3-6 / send-01
                                :ARG2 (c3-5 / cockpit
                                            :part-of (c3-0 / fly-01)))))

# ::snt I doubt any pilot would say 'Emergency', but rather 'Mayday' RT " NEWS: 'Emergency Emergency' was the final distress call
# ::tokens ["I", "doubt", "any", "pilot", "would", "say", "'", "Emergency", "'", ",", "but", "rather", "'", "Mayday", "'", "RT", "\"", "NEWS", ":", "'", "Emergency", "Emergency", "'", "was", "the", "final", "distress", "call"]
# ::lemmas ["i", "doubt", "any", "pilot", "would", "say", "'", "emergency", "'", ",", "but", "rather", "'", "Mayday", "'", "RT", "\"", "news", ":", "'", "Emergency", "Emergency", "'", "be", "the", "final", "distress", "call"]
(c4-5 / doubt-01
      :ARG0 (c4-7 / i)
      :ARG1 (c4-13 / say-01
                   :ARG0 (c4-6 / person
                               :ARG0-of (c4-4 / pilot-01)
                               :mod (c4-10 / any))
                   :ARG1 (c4-15 / emergency)
                   :ARG1-of (c4-0 / instead-of-91
                                  :ARG2 (c4-1 / say-01
                                              :ARG0 c4-6
                                              :ARG1 (c4-8 / event
                                                          :name (c4-14 / name
                                                                       :op1 "Mayday")
                                                          :mod (c4-16 / broadcast-program
                                                                      :name c4-14
                                                                      :op1 "RT")))))
      :ARG1-of (c4-9 / cause-01
                     :ARG0 (c4-12 / call-03
                                  :ARG1 (c4-11 / emergency)
                                  :ARG2 (c4-2 / distress-01)
                                  :mod (c4-3 / final))))

# ::snt its a scale. Emergency &lt; Mayday
# ::tokens ["its", "a", "scale", ".", "Emergency", "&", "lt", ";", "Mayday"]
# ::lemmas ["its", "a", "scale", ".", "Emergency", "&", "lt", ";", "Mayday"]
(c5-0 / multi-sentence
      :snt1 (c5-5 / scale
                  :domain (c5-2 / it))
      :snt2 (c5-3 / and
                  :op1 (c5-7 / emergency)
                  :op2 (c5-4 / lt)
                  :snt3 (c5-1 / festival
                              :name (c5-6 / name
                                          :op1 "Mayday"))))

# ::snt No, then you would say PANPAN. Trust me, I'm a pilot! Besides: Mayday is when lives are in danger...
# ::tokens ["No", ",", "then", "you", "would", "say", "PANPAN", ".", "Trust", "me", ",", "I", "'m", "a", "pilot", "!", "Besides", ":", "Mayday", "is", "when", "lives", "are", "in", "danger", "..."]
# ::lemmas ["no", ",", "then", "you", "would", "say", "PANPAN", ".", "trust", "i", ",", "i", "be", "a", "pilot", "!", "besides", ":", "Mayday", "be", "when", "life", "be", "in", "danger", "..."]
(c6-3 / multi-sentence
      :snt1 (c6-11 / say-01
                   :ARG0 (c6-0 / you)
                   :ARG1 (c6-8 / PANPAN)
                   :mod (c6-2 / then))
      :snt2 (c6-4 / trust-01
                  :ARG0 c6-0
                  :mode imperative)
      :ARG1 (c6-9 / i)
      :ARG1-of (c6-10 / cause-01
                      :ARG0 (c6-6 / person
                                  :ARG0-of (c6-1 / pilot-01)
                                  :domain c6-9))
      :snt3 (c6-7 / danger
                  :domain (c6-5 / festival
                                :name (c6-12 / name
                                             :op1 "Mayday"))
                  :mod (c6-13 / besides)))

# ::snt but isnt declaring an emergency the proper procedure if you still have control of the situation ?
# ::tokens ["but", "is", "nt", "declaring", "an", "emergency", "the", "proper", "procedure", "if", "you", "still", "have", "control", "of", "the", "situation", "?"]
# ::lemmas ["but", "be", "not", "declare", "an", "emergency", "the", "proper", "procedure", "if", "you", "still", "have", "control", "of", "the", "situation", "?"]
(c7-5 / contrast-01
      :ARG2 (c7-4 / procedure
                  :mod (c7-2 / proper)
                  :domain (c7-3 / declare-01
                                :ARG1 (c7-9 / emergency))
                  :condition (c7-8 / control-01
                                   :ARG0 (c7-0 / you)
                                   :ARG1 (c7-6 / situation)
                                   :mod (c7-1 / still))
                  :polarity (c7-7 / amr-unknown)
                  :polarity -))

# ::snt Normal descend rate for A320 is fpm. Now fpm (for minutes) which is much, but contrallable.
# ::tokens ["Normal", "descend", "rate", "for", "A320", "is", "fpm", ".", "Now", "fpm", "(", "for", "minutes", ")", "which", "is", "much", ",", "but", "contrallable", "."]
# ::lemmas ["normal", "descend", "rate", "for", "A320", "be", "fpm", ".", "now", "fpm", "(", "for", "minutes", ")", "which", "be", "much", ",", "but", "contrallable", "."]
(c8-2 / multi-sentence
      :snt1 (c8-9 / rate-entity-91
                  :ARG1 (c8-3 / fpm)
                  :ARG2 (c8-4 / descend-01
                              :ARG0 (c8-7 / aircraft-type
                                          :name (c8-14 / name
                                                       :op1 "A320")))
                  :ARG1-of (c8-5 / normal-02))
      :snt2 (c8-0 / rate-entity-91
                  :ARG1 (c8-11 / fpm)
                  :ARG2 (c8-1 / temporal-quantity
                              :unit (c8-12 / minute)
                              :quant 1)
                  :time (c8-8 / now)
                  :mod (c8-10 / much)
                  :ARG1-of (c8-6 / contrast-01
                                 :ARG2 (c8-13 / contrallable
                                              :domain c8-0))))

# ::snt exactly. So emergency would be appropriate, for example in case of cabin decompression, right ?
# ::tokens ["exactly", ".", "So", "emergency", "would", "be", "appropriate", ",", "for", "example", "in", "case", "of", "cabin", "decompression", ",", "right", "?"]
# ::lemmas ["exactly", ".", "so", "emergency", "would", "be", "appropriate", ",", "for", "example", "in", "case", "of", "cabin", "decompression", ",", "right", "?"]
(c9-1 / multi-sentence
      :snt1 (c9-7 / exact)
      :snt2 (c9-5 / appropriate-02
                  :ARG1 (c9-3 / emergency)
                  :ARG0-of (c9-8 / exemplify-01
                                 :ARG1 (c9-2 / decompress-01
                                             :ARG1 (c9-4 / cabin)))
                  :ARG1-of (c9-6 / request-confirmation-91
                                 :ARG2 (c9-0 / you))))

# ::snt That would certainly explain why pilots set steap descend. Maybe they passed too quickly (oxygen masks?)
# ::tokens ["That", "would", "certainly", "explain", "why", "pilots", "set", "steap", "descend", ".", "Maybe", "they", "passed", "too", "quickly", "(", "oxygen", "masks", "?", ")"]
# ::lemmas ["that", "would", "certainly", "explain", "why", "pilot", "set", "steap", "descend", ".", "maybe", "they", "pass", "too", "quickly", "(", "oxygen", "mask", "?", ")"]
(c10-17 / multi-sentence
        :snt1 (c10-15 / explain-01
                      :ARG0 (c10-3 / that)
                      :ARG1 (c10-16 / thing
                                    :ARG0-of (c10-5 / cause-01
                                                    :ARG1 (c10-7 / set-02
                                                                 :ARG0 (c10-12 / person
                                                                               :ARG0-of (c10-18 / pilot-01))
                                                                 :ARG1 (c10-11 / descend-01
                                                                               :ARG0 c10-12
                                                                               :manner (c10-10 / steam)))))
                      :manner (c10-2 / certain))
        :snt2 (c10-9 / possible-01
                     :ARG1 (c10-6 / pass-07
                                  :ARG1 (c10-4 / they)
                                  :ARG1-of (c10-20 / quick-02
                                                   :ARG2-of (c10-0 / have-degree-91
                                                                   :ARG1 c10-6
                                                                   :ARG3 (c10-8 / too)))
                                  :ARG1-of (c10-19 / mean-01
                                                   :ARG2 (c10-1 / mask
                                                                :mod (c10-14 / oxygen)
                                                                :polarity (c10-13 / amr-unknown))))))

# ::snt if they had, its likely the descent rate wouldve been steeper and the speed not reduce, no ?
# ::tokens ["if", "they", "had", ",", "its", "likely", "the", "descent", "rate", "would", "ve", "been", "steeper", "and", "the", "speed", "not", "reduce", ",", "no", "?"]
# ::lemmas ["if", "they", "have", ",", "its", "likely", "the", "descent", "rate", "would", "ve", "be", "steep", "and", "the", "speed", "not", "reduce", ",", "no", "?"]
(c11-8 / likely-01
       :ARG1 (c11-7 / and
                    :op1 (c11-1 / have-degree-91
                                :ARG1 (c11-9 / rate
                                             :mod (c11-6 / descend-01))
                                :ARG2 (c11-10 / steep-01
                                              :ARG1 c11-9)
                                :ARG3 (c11-4 / more))
                    :op2 (c11-0 / reduce-01
                                :ARG1 (c11-2 / speed)
                                :polarity -))
       :condition (c11-11 / event
                          :mod (c11-3 / they))
       :ARG1-of (c11-5 / request-confirmation-91))

# ::snt At that altitude you have about sec before you pass out. They started steep descend, reduced engine...
# ::tokens ["At", "that", "altitude", "you", "have", "about", "sec", "before", "you", "pass", "out", ".", "They", "started", "steep", "descend", ",", "reduced", "engine", "..."]
# ::lemmas ["at", "that", "altitude", "you", "have", "about", "sec", "before", "you", "pass", "out", ".", "they", "start", "steep", "descend", ",", "reduce", "engine", "..."]
(c12-5 / multi-sentence
       :snt1 (c12-2 / have-03
                    :ARG0 (c12-0 / you)
                    :ARG1 (c12-10 / about
                                  :op1 (c12-4 / temporal-quantity
                                              :unit (c12-14 / sec)
                                              :quant 1))
                    :time (c12-16 / before
                                  :op1 (c12-9 / pass-out-11
                                              :ARG0 c12-0))
                    :location (c12-12 / altitude
                                      :mod (c12-6 / that)))
       :snt2 (c12-13 / and
                     :op1 (c12-3 / start-01
                                 :ARG0 (c12-7 / they)
                                 :ARG1 (c12-8 / descend-01
                                              :manner (c12-1 / steep)))
                     :op2 (c12-11 / reduce-01
                                  :ARG0 c12-7
                                  :ARG1 (c12-15 / engine))))

# ::snt By the way: Cabin pressure loss in an airliner is a classic case for MAYDAY !
# ::tokens ["By", "the", "way", ":", "Cabin", "pressure", "loss", "in", "an", "airliner", "is", "a", "classic", "case", "for", "MAYDAY", "!"]
# ::lemmas ["by", "the", "way", ":", "Cabin", "pressure", "loss", "in", "an", "airliner", "be", "a", "classic", "case", "for", "MAYDAY", "!"]
(c13-2 / case-04
       :ARG1 (c13-5 / lose-02
                    :ARG1 (c13-1 / pressure
                                 :mod (c13-6 / cabin))
                    :location (c13-4 / airliner))
       :mod (c13-3 / classic)
       :time (c13-0 / date-entity
                    :month 5)
       :mod (c13-7 / by-the-way)
       :mode expressive)

# ::snt true...
# ::tokens ["true", "..."]
# ::lemmas ["true", "..."]
(c14-0 / true-01)

# ::snt whats the exact procedure btw ? What altitude would you drop down to ? at which rate of descent ?
# ::tokens ["what", "s", "the", "exact", "procedure", "btw", "?", "What", "altitude", "would", "you", "drop", "down", "to", "?", "at", "which", "rate", "of", "descent", "?"]
# ::lemmas ["what", "s", "the", "exact", "procedure", "btw", "?", "what", "altitude", "would", "you", "drop", "down", "to", "?", "at", "which", "rate", "of", "descent", "?"]
(c15-2 / multi-sentence
       :snt1 (c15-4 / procedure
                    :domain (c15-6 / amr-unknown)
                    :mod (c15-10 / exact)
                    :mod (c15-11 / by-the-way))
       :snt2 (c15-3 / drop-01
                    :ARG0 (c15-0 / you)
                    :ARG1 (c15-7 / altitude
                                 :mod (c15-8 / amr-unknown))
                    :ARG4 (c15-5 / amr-unknown
                                 :degree-of (c15-1 / descend-01
                                                   :ARG0 c15-0))
                    :direction (c15-9 / down)))

# ::snt immediately manual (autopilot off), throttle, oxygen masks + passngrs, radio call. All that in seconds?
# ::tokens ["immediately", "manual", "(", "autopilot", "off", ")", ",", "throttle", ",", "oxygen", "masks", "+", "passngrs", ",", "radio", "call", ".", "All", "that", "in", "seconds", "?"]
# ::lemmas ["immediately", "manual", "(", "autopilot", "off", ")", ",", "throttle", ",", "oxygen", "mask", "+", "passngrs", ",", "radio", "call", ".", "all", "that", "in", "seconds", "?"]
(c16-19 / multi-sentence
        :snt1 (c16-15 / and
                      :op1 (c16-21 / manual
                                   :domain (c16-3 / autopilot
                                                  :ARG1-of (c16-16 / off-01))
                                   :time (c16-13 / immediate))
                      :op2 (c16-5 / throttle)
                      :op3 (c16-12 / oxygen
                                   :ARG1-of (c16-17 / add-02
                                                    :ARG2 (c16-18 / thing
                                                                  :ARG0-of (c16-2 / mask-01))))
                      :op4 (c16-14 / pass-03)
                      :op5 (c16-8 / call-02
                                  :medium (c16-1 / radio)))
        :snt2 (c16-6 / that
                     :mod (c16-0 / all)
                     :polarity (c16-4 / amr-unknown)
                     :time (c16-20 / after
                                   :op1 (c16-11 / now)
                                   :quant (c16-7 / multiple
                                                 :op1 (c16-10 / temporal-quantity
                                                              :unit (c16-9 / second)
                                                              :quant 1)))))

# ::snt radio call then passengers, no ? sec isnt much it takes me longer to tweet sometimes
# ::tokens ["radio", "call", "then", "passengers", ",", "no", "?", "sec", "is", "nt", "much", "it", "takes", "me", "longer", "to", "tweet", "sometimes"]
# ::lemmas ["radio", "call", "then", "passenger", ",", "no", "?", "sec", "be", "not", "much", "it", "take", "i", "long", "to", "tweet", "sometimes"]
(c17-2 / multi-sentence
       :snt1 (c17-5 / call-02
                    :ARG1 (c17-8 / and
                                 :op1 (c17-10 / radio)
                                 :op2 (c17-4 / passenger)))
       :snt2 (c17-14 / no
                     :polarity (c17-12 / amr-unknown))
       :snt3 (c17-1 / take-10
                    :ARG0 (c17-3 / tweet-02
                                 :ARG0 (c17-6 / i)
                                 :frequency (c17-13 / sometimes)
                                 :ARG1-of (c17-0 / have-degree-91
                                                 :ARG2 (c17-9 / long-03
                                                              :ARG1 c17-3)
                                                 :ARG3 (c17-7 / more)))
                    :ARG1 (c17-11 / much)))

# ::snt radio call to passengers: not a priority at all !!
# ::tokens ["radio", "call", "to", "passengers", ":", "not", "a", "priority", "at", "all", "!", "!"]
# ::lemmas ["radio", "call", "to", "passenger", ":", "not", "a", "priority", "at", "all", "!", "!"]
(c18-2 / priority
       :domain (c18-1 / call-02
                      :ARG1 (c18-0 / passenger)
                      :medium (c18-4 / radio))
       :degree (c18-3 / at-all)
       :polarity -)

# ::snt From Airbus FlightOps: When the cabin altitude rises above feet, the oxygen masks will deploy automatically
# ::tokens ["From", "Airbus", "FlightOps", ":", "When", "the", "cabin", "altitude", "rises", "above", "feet", ",", "the", "oxygen", "masks", "will", "deploy", "automatically"]
# ::lemmas ["from", "Airbus", "FlightOps", ":", "when", "the", "cabin", "altitude", "rise", "above", "foot", ",", "the", "oxygen", "mask", "will", "deploy", "automatically"]
(c19-2 / deploy-01
       :ARG1 (c19-0 / mask
                    :purpose (c19-6 / oxygen))
       :manner (c19-4 / automatic)
       :time (c19-5 / rise-01
                    :ARG1 (c19-7 / altitude
                                 :mod (c19-3 / cabin))
                    :ARG4 (c19-8 / above
                                 :op1 (c19-1 / foot)))
       :source (c19-9 / company
                      :name (c19-10 / name
                                    :op1 "Airbus"
                                    :op2 "FlightOps")))

# ::snt What about icy sensors and software telling autopilot to dive as happened with AF447?
# ::tokens ["What", "about", "icy", "sensors", "and", "software", "telling", "autopilot", "to", "dive", "as", "happened", "with", "AF447", "?"]
# ::lemmas ["what", "about", "icy", "sensor", "and", "software", "tell", "autopilot", "to", "dive", "as", "happen", "with", "AF447", "?"]
(c20-4 / amr-unknown
       :topic (c20-1 / tell-01
                     :ARG0 (c20-6 / and
                                  :op1 (c20-8 / sensor
                                              :mod (c20-3 / ice))
                                  :op2 (c20-0 / software))
                     :ARG1 (c20-2 / dive-01
                                  :ARG0 (c20-7 / autopilot
                                               :ARG2-of c20-1))
                     :ARG1-of (c20-5 / resemble-01
                                     :ARG2 (c20-10 / event
                                                   :name (c20-9 / name
                                                                :op1 "AF447")))))

# ::snt I don't know about that. Graphs don't show a sign of leveling off at a certain altitude.
# ::tokens ["I", "do", "n't", "know", "about", "that", ".", "Graphs", "do", "n't", "show", "a", "sign", "of", "leveling", "off", "at", "a", "certain", "altitude", "."]
# ::lemmas ["i", "do", "not", "know", "about", "that", ".", "graph", "do", "not", "show", "a", "sign", "of", "level", "off", "at", "a", "certain", "altitude", "."]
(c21-3 / multi-sentence
       :snt1 (c21-0 / know-01
                    :ARG0 (c21-4 / i)
                    :ARG1 (c21-2 / that)
                    :polarity -)
       :snt2 (c21-9 / show-01
                    :ARG0 (c21-6 / graph)
                    :ARG1 (c21-1 / signal-07
                                 :ARG0 c21-6
                                 :ARG1 (c21-7 / level-off-04
                                              :ARG1 c21-6
                                              :location (c21-8 / altitude
                                                               :mod (c21-5 / certain))))
                    :polarity -))

# ::snt plus af447 was exceptionnal weather conditions
# ::tokens ["plus", "af447", "was", "exceptionnal", "weather", "conditions"]
# ::lemmas ["plus", "af447", "be", "exceptionnal", "weather", "condition"]
(c22-3 / add-02
       :ARG1 (c22-2 / condition
                    :mod (c22-0 / weather
                                :mod (c22-5 / except-01))
                    :domain (c22-1 / incident
                                   :name (c22-4 / name
                                                :op1 "Aires"))))

# ::snt GW flight had same descent rate as near crash LH flight. Check or
# ::tokens ["GW", "flight", "had", "same", "descent", "rate", "as", "near", "crash", "LH", "flight", ".", "Check", "or"]
# ::lemmas ["GW", "flight", "have", "same", "descent", "rate", "as", "near", "crash", "lh", "flight", ".", "check", "or"]
(c23-2 / multi-sentence
       :snt1 (c23-1 / have-03
                    :ARG0 (c23-3 / fly-01
                                 :mod (c23-9 / GW))
                    :ARG1 (c23-10 / rate
                                  :mod (c23-5 / descend-01)
                                  :ARG1-of (c23-13 / same-01
                                                   :ARG2 (c23-11 / fly-01
                                                                 :mod (c23-12 / fly-01
                                                                              :mod (c23-6 / product
                                                                                          :name (c23-14 / name
                                                                                                        :op1 "L LH")))
                                                                 :ARG1-of (c23-7 / near-02
                                                                                 :ARG2 (c23-8 / crash-01))))))
       :snt2 (c23-4 / check-01
                    :ARG0 (c23-0 / you)
                    :mode imperative))

# ::snt With iced sensors it won't level off. Apparently a computer glitch - pilot would need to override system manually
# ::tokens ["With", "iced", "sensors", "it", "wo", "n't", "level", "off", ".", "Apparently", "a", "computer", "glitch", "-", "pilot", "would", "need", "to", "override", "system", "manually"]
# ::lemmas ["with", "iced", "sensor", "it", "will", "not", "level", "off", ".", "apparently", "a", "computer", "glitch", "-", "pilot", "would", "need", "to", "override", "system", "manually"]
(c24-2 / multi-sentence
       :snt1 (c24-7 / level-off-04
                    :ARG0 (c24-11 / sensor
                                  :ARG1-of (c24-4 / ice-03))
                    :ARG1 (c24-0 / it)
                    :polarity -)
       :snt2 (c24-8 / appear-02
                    :ARG1 (c24-12 / need-01
                                  :ARG0 (c24-5 / person
                                               :ARG0-of (c24-3 / pilot-01
                                                               :ARG1 (c24-6 / computer)))
                                  :ARG1 (c24-9 / override-01
                                               :ARG0 c24-5
                                               :ARG1 (c24-1 / system)
                                               :manner (c24-10 / manual)))))

# ::snt I've seen friends with nasal oxygen masks on (General Avation), just to fly over the Channel
# ::tokens ["I", "'ve", "seen", "friends", "with", "nasal", "oxygen", "masks", "on", "(", "General", "Avation", ")", ",", "just", "to", "fly", "over", "the", "Channel"]
# ::lemmas ["i", "'ve", "see", "friend", "with", "nasal", "oxygen", "mask", "on", "(", "General", "Avation", ")", ",", "just", "to", "fly", "over", "the", "Channel"]
(c25-14 / see-01
        :ARG0 (c25-8 / i)
        :ARG1 (c25-7 / person
                     :ARG0-of (c25-0 / have-rel-role-91
                                     :ARG1 c25-8
                                     :ARG2 (c25-2 / friend))
                     :ARG0-of (c25-5 / have-03
                                     :ARG1 (c25-3 / mask
                                                  :mod (c25-12 / oxygen
                                                               :mod (c25-15 / nose))
                                                  :ARG1-of (c25-13 / mean-01
                                                                   :ARG2 (c25-10 / airborne
                                                                                 :mod (c25-11 / general)))))
                     :ARG0-of (c25-1 / fly-01
                                     :path (c25-6 / over
                                                  :op1 (c25-9 / channel))
                                     :mod (c25-4 / just))))

# ::snt that's just for the high
# ::tokens ["that", "'s", "just", "for", "the", "high"]
# ::lemmas ["that", "be", "just", "for", "the", "high"]
(c26-2 / have-purpose-91
       :ARG1 (c26-3 / that)
       :ARG2 (c26-1 / high-02)
       :mod (c26-0 / just))

# ::snt yes, and they have a bottle behind them with this tube connected. But it looks very stupid LOL
# ::tokens ["yes", ",", "and", "they", "have", "a", "bottle", "behind", "them", "with", "this", "tube", "connected", ".", "But", "it", "looks", "very", "stupid", "LOL"]
# ::lemmas ["yes", ",", "and", "they", "have", "a", "bottle", "behind", "they", "with", "this", "tube", "connect", ".", "but", "it", "look", "very", "stupid", "LOL"]
(c27-3 / multi-sentence
       :snt1 (c27-10 / and
                     :op2 (c27-0 / have-03
                                 :ARG0 (c27-2 / they)
                                 :ARG1 (c27-17 / bottle)
                                 :location (c27-11 / behind
                                                   :op1 (c27-4 / they))
                                 :instrument (c27-5 / tube
                                                    :mod (c27-15 / this)
                                                    :ARG1-of (c27-6 / connect-01))))
       :snt2 (c27-13 / contrast-01
                     :ARG2 (c27-12 / look-02
                                   :ARG0 (c27-7 / it)
                                   :ARG1 (c27-8 / stupid
                                                :degree (c27-9 / very))
                                   :ARG2-of (c27-16 / laugh-01
                                                    :ARG0 (c27-1 / i)
                                                    :manner (c27-14 / loud)
                                                    :mode expressive))))

# ::snt Plus they stayed more or less constant speed, which means they reduced throttle, so they were in control
# ::tokens ["Plus", "they", "stayed", "more", "or", "less", "constant", "speed", ",", "which", "means", "they", "reduced", "throttle", ",", "so", "they", "were", "in", "control"]
# ::lemmas ["plus", "they", "stay", "more", "or", "less", "constant", "speed", ",", "which", "mean", "they", "reduce", "throttle", ",", "so", "they", "be", "in", "control"]
(c28-10 / stay-01
        :ARG1 (c28-1 / they)
        :ARG3 (c28-0 / speed
                     :mod (c28-4 / constant
                                 :mod (c28-2 / more-or-less)))
        :mod (c28-5 / plus)
        :ARG1-of (c28-9 / mean-01
                        :ARG2 (c28-7 / reduce-01
                                     :ARG0 c28-1
                                     :ARG1 (c28-3 / throttle)
                                     :ARG0-of (c28-8 / cause-01
                                                     :ARG1 (c28-6 / control-01
                                                                  :ARG0 c28-1)))))

# ::snt or think you do ? or it hasnt been assessed ?
# ::tokens ["or", "think", "you", "do", "?", "or", "it", "has", "nt", "been", "assessed", "?"]
# ::lemmas ["or", "think", "you", "do", "?", "or", "it", "have", "not", "be", "assess", "?"]
(c29-5 / or
       :op2 (c29-1 / think-01
                   :polarity (c29-4 / amr-unknown)
                   :ARG0 (c29-0 / you)
                   :ARG1 (c29-2 / do-02
                                :ARG0 c29-0))
       :op3 (c29-6 / assess-01
                   :ARG1 (c29-3 / it)
                   :polarity -))

# ::snt Looks terribly off course on a map. Nothing earlier? Like much earlier?
# ::tokens ["Looks", "terribly", "off", "course", "on", "a", "map", ".", "Nothing", "earlier", "?", "Like", "much", "earlier", "?"]
# ::lemmas ["look", "terribly", "off", "course", "on", "a", "map", ".", "nothing", "early", "?", "like", "much", "early", "?"]
(c30-1 / multi-sentence
       :snt1 (c30-3 / look-02
                    :ARG1 (c30-8 / off-course
                                 :degree (c30-0 / terribly))
                    :location (c30-9 / map))
       :snt2 (c30-11 / nothing
                     :time (c30-12 / before
                                   :op1 (c30-2 / now))
                     :ARG1-of (c30-6 / resemble-01
                                     :ARG2 (c30-4 / before
                                                  :op1 (c30-5 / now)
                                                  :quant (c30-7 / much))
                                     :polarity (c30-10 / amr-unknown))))

# ::snt So sad...prayers to the families and friends...
# ::tokens ["So", "sad", "...", "prayers", "to", "the", "families", "and", "friends", "..."]
# ::lemmas ["so", "sad", "...", "prayer", "to", "the", "family", "and", "friend", "..."]
(c31-2 / multi-sentence
       :snt1 (c31-8 / sad-02
                    :degree (c31-0 / so))
       :snt2 (c31-5 / pray-01
                    :ARG2 (c31-6 / and
                                 :op1 (c31-3 / family)
                                 :op2 (c31-4 / person
                                             :ARG0-of (c31-1 / have-rel-role-91
                                                             :ARG2 (c31-7 / friend))))))
