# ::snt ?!?!? : In response to inquiries, we can confirm that Prince will not be performing at tonight.
# ::tokens ["?", "!", "?", "!", "?", ":", "In", "response", "to", "inquiries", ",", "we", "can", "confirm", "that", "Prince", "will", "not", "be", "performing", "at", "tonight", "."]
# ::lemmas ["?", "!", "?", "!", "?", ":", "in", "response", "to", "inquiry", ",", "we", "can", "confirm", "that", "Prince", "will", "not", "be", "perform", "at", "tonight", "."]
(c1-6 / possible-01
      :ARG1 (c1-5 / confirm-01
                  :ARG0 (c1-1 / we)
                  :ARG1 (c1-3 / perform-01
                              :ARG0 (c1-0 / person
                                          :name (c1-10 / name
                                                       :op1 "Prince"))
                              :time (c1-4 / date-entity
                                          :dayperiod (c1-7 / night)
                                          :mod (c1-2 / today))
                              :polarity -))
      :ARG2-of (c1-9 / respond-01
                     :ARG1 (c1-8 / inquire-01)))

# ::snt "Change of plans." Hmmm.
# ::tokens ["\"", "Change", "of", "plans", ".", "\"", "Hmmm", "."]
# ::lemmas ["\"", "change", "of", "plan", ".", "\"", "Hmmm", "."]
(c2-0 / multi-sentence
      :snt1 (c2-3 / change-01
                  :ARG1 (c2-2 / plan-01))
      :snt2 (c2-1 / hmm
                  :mode expressive))

# ::snt : In response to inquiries, we can confirm that Prince will not be performing at tonight.
# ::tokens [":", "In", "response", "to", "inquiries", ",", "we", "can", "confirm", "that", "Prince", "will", "not", "be", "performing", "at", "tonight", "."]
# ::lemmas [":", "in", "response", "to", "inquiry", ",", "we", "can", "confirm", "that", "Prince", "will", "not", "be", "perform", "at", "tonight", "."]
(c3-9 / respond-01
      :ARG1 (c3-7 / inquire-01)
      :ARG2 (c3-6 / possible-01
                  :ARG1 (c3-5 / confirm-01
                              :ARG0 (c3-0 / we)
                              :ARG1 (c3-3 / perform-01
                                          :ARG0 (c3-1 / person
                                                      :name (c3-10 / name
                                                                   :op1 "Prince"))
                                          :time (c3-4 / date-entity
                                                      :dayperiod (c3-8 / night)
                                                      :mod (c3-2 / today))
                                          :polarity -))))

# ::snt thank you for that tweet!! MUCHO APPRECIATEO
# ::tokens ["thank", "you", "for", "that", "tweet", "!", "!", "MUCHO", "APPRECIATEO"]
# ::lemmas ["thank", "you", "for", "that", "tweet", "!", "!", "MUCHO", "APPRECIATEO"]
(c4-2 / multi-sentence
      :snt1 (c4-3 / thank-01
                  :ARG0 (c4-5 / i)
                  :ARG1 (c4-0 / you)
                  :ARG2 (c4-1 / tweet-01
                              :ARG0 c4-0
                              :mod (c4-4 / that))
                  :mode expressive)
      :snt2 (c4-6 / person
                  :name (c4-7 / name
                              :op1 "MUCHO"
                              :op2 "AppRECIATEO")))

# ::snt Err, twist? RT : In response to inquiries, we can confirm that Prince will not be performing at tonight.
# ::tokens ["Err", ",", "twist", "?", "RT", ":", "In", "response", "to", "inquiries", ",", "we", "can", "confirm", "that", "Prince", "will", "not", "be", "performing", "at", "tonight", "."]
# ::lemmas ["Err", ",", "twist", "?", "RT", ":", "in", "response", "to", "inquiry", ",", "we", "can", "confirm", "that", "Prince", "will", "not", "be", "perform", "at", "tonight", "."]
(c5-13 / say-01
       :ARG0 (c5-6 / publication
                   :name (c5-14 / name
                                :op1 "RT"))
       :ARG1 (c5-4 / possible-01
                   :ARG1 (c5-7 / confirm-01
                               :ARG0 (c5-1 / we)
                               :ARG1 (c5-2 / perform-01
                                           :ARG0 (c5-10 / person
                                                        :name (c5-5 / name
                                                                    :op1 "Prince"))
                                           :time (c5-8 / date-entity
                                                       :dayperiod (c5-11 / night)
                                                       :mod (c5-3 / today))
                                           :polarity -)
                               :ARG2-of (c5-12 / respond-01
                                               :ARG1 (c5-9 / inquire-01))))
       :ARG1-of (c5-0 / request-01))

# ::snt But rd Eye Girl will be? Did you ask LN if The Artist Formerly Known As is playing?
# ::tokens ["But", "rd", "Eye", "Girl", "will", "be", "?", "Did", "you", "ask", "LN", "if", "The", "Artist", "Formerly", "Known", "As", "is", "playing", "?"]
# ::lemmas ["but", "rd", "Eye", "Girl", "will", "be", "?", "do", "you", "ask", "LN", "if", "The", "Artist", "Formerly", "Known", "as", "be", "play", "?"]
(c6-3 / multi-sentence
      :snt1 (c6-7 / contrast-01
                  :ARG2 (c6-6 / person
                              :name (c6-12 / name
                                           :op1 "rd"
                                           :op2 "eye"
                                           :op3 "Girl")))
      :snt2 (c6-8 / ask-01
                  :ARG0 (c6-0 / you)
                  :ARG1 (c6-2 / truth-value
                              :polarity-of (c6-4 / play-11
                                                 :ARG0 (c6-1 / person
                                                             :name (c6-5 / name
                                                                         :op1 "The"
                                                                         :op2 " Artist"
                                                                         :op3 "Former"
                                                                         :op4 "Known"
                                                                         :op5 "As"))))
                  :ARG2 (c6-9 / person
                              :name (c6-10 / name
                                           :op1 "LN"))
                  :polarity (c6-11 / amr-unknown)))

# ::snt maybe tomorrow?
# ::tokens ["maybe", "tomorrow", "?"]
# ::lemmas ["maybe", "tomorrow", "?"]
(c7-2 / possible-01
      :ARG1 (c7-3 / be-temporally-at-91
                  :ARG2 (c7-1 / tomorrow))
      :polarity (c7-0 / amr-unknown))

# ::snt Poor suckers in line! : In response to inquiries, we can confirm that Prince will not be performing at tonight.
# ::tokens ["Poor", "suckers", "in", "line", "!", ":", "In", "response", "to", "inquiries", ",", "we", "can", "confirm", "that", "Prince", "will", "not", "be", "performing", "at", "tonight", "."]
# ::lemmas ["poor", "sucker", "in", "line", "!", ":", "in", "response", "to", "inquiry", ",", "we", "can", "confirm", "that", "Prince", "will", "not", "be", "perform", "at", "tonight", "."]
(c8-4 / multi-sentence
      :snt1 (c8-8 / in-line-04
                  :ARG1 (c8-7 / person
                              :mod (c8-5 / poor)
                              :ARG0-of (c8-14 / suck-03))
                  :mode expressive)
      :snt2 (c8-13 / respond-01
                   :ARG1 (c8-1 / inquire-01)
                   :ARG2 (c8-0 / possible-01
                               :ARG1 (c8-9 / confirm-01
                                           :ARG0 (c8-2 / we)
                                           :ARG1 (c8-11 / perform-01
                                                        :ARG0 (c8-6 / person
                                                                    :name (c8-15 / name
                                                                                 :op1 "Prince"))
                                                        :time (c8-10 / date-entity
                                                                     :dayperiod (c8-12 / night)
                                                                     :mod (c8-3 / today))
                                                        :polarity -)))))

# ::snt This is what it feels like/when doves cry RT : we can confirm that Prince will not be performing at tonight.
# ::tokens ["This", "is", "what", "it", "feels", "like", "/", "when", "doves", "cry", "RT", ":", "we", "can", "confirm", "that", "Prince", "will", "not", "be", "performing", "at", "tonight", "."]
# ::lemmas ["this", "be", "what", "it", "feel", "like", "/", "when", "dove", "cry", "RT", ":", "we", "can", "confirm", "that", "Prince", "will", "not", "be", "perform", "at", "tonight", "."]
(c9-6 / cause-01
      :ARG0 (c9-14 / possible-01
                   :ARG1 (c9-4 / confirm-01
                               :ARG0 (c9-0 / we)
                               :ARG1 (c9-19 / perform-01
                                            :ARG0 (c9-10 / person
                                                         :name (c9-9 / name
                                                                     :op1 "Prince"))
                                            :time (c9-13 / date-entity
                                                         :dayperiod (c9-1 / night)
                                                         :mod (c9-5 / today))
                                            :polarity -)))
      :ARG1 (c9-20 / cry-01
                   :ARG0 (c9-7 / person
                               :ARG0-of (c9-11 / favor-01))
                   :ARG1 (c9-8 / slash
                               :op1 (c9-16 / feel-05
                                           :ARG1 (c9-18 / this))
                               :op2 (c9-17 / be-temporally-at-91
                                           :ARG1 c9-18
                                           :ARG2 (c9-15 / amr-unknown))))
      :ARG1-of (c9-12 / publication-91
                      :ARG4 (c9-3 / publication
                                  :name (c9-2 / name
                                              :op1 "RT"))))

# ::snt WHAT THE HELL EVEN JUST HAPPENED TODAY
# ::tokens ["WHAT", "THE", "HELL", "EVEN", "JUST", "HAPPENED", "TODAY"]
# ::lemmas ["what", "the", "hell", "even", "just", "happen", "today"]
(c10-0 / have-mod-91
       :ARG1 (c10-5 / event)
       :ARG2 (c10-4 / amr-unknown)
       :mod (c10-2 / hell
                   :mode expressive)
       :mod (c10-3 / even)
       :time (c10-1 / today))

# ::snt aw man! That got my funny bone!
# ::tokens ["aw", "man", "!", "That", "got", "my", "funny", "bone", "!"]
# ::lemmas ["aw", "man", "!", "that", "get", "my", "funny", "bone", "!"]
(c11-1 / multi-sentence
       :snt1 (c11-6 / man
                    :mod (c11-5 / aw
                                :mode expressive))
       :snt2 (c11-4 / get-02
                    :ARG0 (c11-0 / that)
                    :ARG1 (c11-7 / bone
                                 :mod (c11-2 / funny)
                                 :part-of (c11-3 / i))))

# ::snt Soo... Its tomorrow night!?
# ::tokens ["Soo", "...", "Its", "tomorrow", "night", "!", "?"]
# ::lemmas ["Soo", "...", "its", "tomorrow", "night", "!", "?"]
(c12-1 / multi-sentence
       :snt1 (c12-3 / so)
       :snt2 (c12-4 / night
                    :polarity (c12-2 / amr-unknown)
                    :time (c12-0 / tomorrow)))

# ::snt it's probably
# ::tokens ["it", "'s", "probably"]
# ::lemmas ["it", "be", "probably"]
(c13-0 / probable)

# ::snt Tomorrow Night?
# ::tokens ["Tomorrow", "Night", "?"]
# ::lemmas ["Tomorrow", "Night", "?"]
(c14-1 / night
       :polarity (c14-0 / amr-unknown)
       :mod (c14-2 / tomorrow))

# ::snt What about tomorrow night? in still a possibility?
# ::tokens ["What", "about", "tomorrow", "night", "?", "in", "still", "a", "possibility", "?"]
# ::lemmas ["what", "about", "tomorrow", "night", "?", "in", "still", "a", "possibility", "?"]
(c15-1 / multi-sentence
       :snt1 (c15-3 / amr-unknown
                    :topic (c15-6 / night
                                  :time (c15-0 / tomorrow)))
       :snt2 (c15-2 / possible-01
                    :ARG1 (c15-4 / amr-unknown)
                    :mod (c15-5 / still)))

# ::snt : In response to inquiries, we can confirm that Prince will not be performing at tonight.
# ::tokens [":", "In", "response", "to", "inquiries", ",", "we", "can", "confirm", "that", "Prince", "will", "not", "be", "performing", "at", "tonight", "."]
# ::lemmas [":", "in", "response", "to", "inquiry", ",", "we", "can", "confirm", "that", "Prince", "will", "not", "be", "perform", "at", "tonight", "."]
(c16-9 / respond-01
       :ARG1 (c16-7 / inquire-01)
       :ARG2 (c16-6 / possible-01
                    :ARG1 (c16-5 / confirm-01
                                 :ARG0 (c16-0 / we)
                                 :ARG1 (c16-3 / perform-01
                                              :ARG0 (c16-1 / person
                                                           :name (c16-10 / name
                                                                         :op1 "Prince"))
                                              :time (c16-4 / date-entity
                                                           :dayperiod (c16-8 / night)
                                                           :mod (c16-2 / today))
                                              :polarity -))))

# ::snt There ya go. RT : In response to inquiries, we can confirm that Prince will not be performing at tonight.
# ::tokens ["There", "ya", "go", ".", "RT", ":", "In", "response", "to", "inquiries", ",", "we", "can", "confirm", "that", "Prince", "will", "not", "be", "performing", "at", "tonight", "."]
# ::lemmas ["there", "ya", "go", ".", "RT", ":", "in", "response", "to", "inquiry", ",", "we", "can", "confirm", "that", "Prince", "will", "not", "be", "perform", "at", "tonight", "."]
(c17-4 / multi-sentence
       :snt1 (c17-12 / go-01
                     :ARG1 (c17-0 / you)
                     :ARG4 (c17-3 / there))
       :snt2 (c17-16 / say-01
                     :ARG0 (c17-8 / publication
                                  :name (c17-17 / name
                                                :op1 "RT"))
                     :ARG1 (c17-15 / respond-01
                                   :ARG1 (c17-9 / inquire-01)
                                   :ARG2 (c17-6 / possible-01
                                                :ARG1 (c17-10 / confirm-01
                                                              :ARG0 (c17-1 / we)
                                                              :ARG1 (c17-2 / perform-01
                                                                           :ARG0 (c17-13 / person
                                                                                         :name (c17-7 / name
                                                                                                      :op1 "Prince"))
                                                                           :time (c17-11 / date-entity
                                                                                         :dayperiod (c17-14 / night)
                                                                                         :mod (c17-5 / today))
                                                                           :polarity -))))))
