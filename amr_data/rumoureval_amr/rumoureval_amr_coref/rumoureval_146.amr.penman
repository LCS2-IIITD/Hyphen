# ::snt But no emergency call made? Or emergency squawk?
# ::tokens ["But", "no", "emergency", "call", "made", "?", "Or", "emergency", "squawk", "?"]
# ::lemmas ["but", "no", "emergency", "call", "make", "?", "or", "emergency", "squawk", "?"]
(c2-0 / multi-sentence
      :snt1 (c2-1 / contrast-01
                  :ARG2 (c2-7 / call-02
                              :mod (c2-8 / emergency)
                              :polarity -)
                  :polarity (c2-4 / amr-unknown))
      :snt2 (c2-5 / or
                  :op2 (c2-3 / squawk-01
                             :mod (c2-2 / emergency)
                             :polarity (c2-6 / amr-unknown))))

# ::snt Sent Mayday through radio. I suppose he had other things to do than adjust the Squawk
# ::tokens ["Sent", "Mayday", "through", "radio", ".", "I", "suppose", "he", "had", "other", "things", "to", "do", "than", "adjust", "the", "Squawk"]
# ::lemmas ["send", "Mayday", "through", "radio", ".", "i", "suppose", "he", "have", "other", "thing", "to", "do", "than", "adjust", "the", "Squawk"]
(c3-3 / multi-sentence
      :snt1 (c3-15 / send-01
                   :ARG1 (c3-2 / thing)
                   :ARG2 (c3-9 / person
                               :name (c3-16 / name
                                            :op1 "Mayday"))
                   :medium (c3-13 / radio))
      :snt2 (c3-0 / suppose-01
                  :ARG0 (c3-10 / i)
                  :ARG1 (c3-14 / obligate-01
                               :ARG1 (c3-1 / he)
                               :ARG2 (c3-8 / do-02
                                           :ARG0 c3-1
                                           :ARG1 (c3-4 / thing
                                                       :mod (c3-7 / other)
                                                       :ARG2-of (c3-5 / except-01
                                                                      :ARG1 (c3-12 / adjust-01
                                                                                   :ARG0 c3-1
                                                                                   :ARG1 (c3-6 / thing
                                                                                               :name (c3-11 / name
                                                                                                            :op1 "Squawk")))))))))

# ::snt Only takes a second to set the squawk code,
# ::tokens ["Only", "takes", "a", "second", "to", "set", "the", "squawk", "code", ","]
# ::lemmas ["only", "take", "a", "second", "to", "set", "the", "squawk", "code", ","]
(c4-3 / take-10
      :ARG0 (c4-6 / set-02
                  :ARG1 (c4-4 / code
                              :mod (c4-1 / squawk)))
      :ARG1 (c4-2 / temporal-quantity
                  :unit (c4-0 / second)
                  :quant 1)
      :mod (c4-5 / only))

# ::snt What's the use when you're crashing?
# ::tokens ["What", "'s", "the", "use", "when", "you", "'re", "crashing", "?"]
# ::lemmas ["what", "be", "the", "use", "when", "you", "be", "crash", "?"]
(c5-1 / use-01
      :ARG1 (c5-2 / amr-unknown)
      :time (c5-3 / crash-01
                  :ARG1 (c5-0 / you)))

# ::snt yes but every second not spent trying to save everyone.....
# ::tokens ["yes", "but", "every", "second", "not", "spent", "trying", "to", "save", "everyone", "....."]
# ::lemmas ["yes", "but", "every", "second", "not", "spend", "try", "to", "save", "everyone", "....."]
(c6-4 / contrast-01
      :ARG1 (c6-0 / yes)
      :ARG2 (c6-6 / spend-02
                  :ARG1 (c6-2 / second
                              :mod (c6-7 / every))
                  :ARG2 (c6-3 / try-01
                              :ARG1 (c6-1 / save-02
                                          :ARG1 (c6-5 / everyone)))
                  :polarity -))

# ::snt It turns out there was no distress call made. I'm almost certain this was a hi-jacking now.
# ::tokens ["It", "turns", "out", "there", "was", "no", "distress", "call", "made", ".", "I", "'m", "almost", "certain", "this", "was", "a", "hi", "-", "jacking", "now", "."]
# ::lemmas ["it", "turn", "out", "there", "be", "no", "distress", "call", "make", ".", "i", "be", "almost", "certain", "this", "be", "a", "hi", "-", "jack", "now", "."]
(c7-3 / multi-sentence
      :snt1 (c7-2 / turn-out-11
                  :ARG1 (c7-6 / call-02
                              :ARG1 (c7-5 / distress-01)
                              :polarity -))
      :snt2 (c7-0 / know-01
                  :ARG0 (c7-7 / i)
                  :ARG1 (c7-1 / hi-jacking
                              :domain (c7-4 / this)
                              :time (c7-9 / now))
                  :mod (c7-8 / almost)))

# ::snt Unless they became rapidly unconcious
# ::tokens ["Unless", "they", "became", "rapidly", "unconcious"]
# ::lemmas ["unless", "they", "become", "rapidly", "unconcious"]
(c8-0 / have-condition-91
      :ARG2 (c8-4 / become-01
                  :ARG1 (c8-1 / they)
                  :ARG2 (c8-2 / cious
                              :degree (c8-3 / rapid)
                              :polarity -)))

# ::snt It looks like someone was flying it manually, all the way into the ground.
# ::tokens ["It", "looks", "like", "someone", "was", "flying", "it", "manually", ",", "all", "the", "way", "into", "the", "ground", "."]
# ::lemmas ["it", "look", "like", "someone", "be", "fly", "it", "manually", ",", "all", "the", "way", "into", "the", "ground", "."]
(c9-3 / look-02
      :ARG0 (c9-2 / it)
      :ARG1 (c9-0 / fly-01
                  :ARG0 (c9-6 / someone)
                  :ARG1 c9-2
                  :manner (c9-1 / manual)
                  :destination (c9-4 / ground
                                     :extent (c9-5 / all-the-way))))

# ::snt For sure not, it was following exactly the same flight path as day before
# ::tokens ["For", "sure", "not", ",", "it", "was", "following", "exactly", "the", "same", "flight", "path", "as", "day", "before"]
# ::lemmas ["for", "sure", "not", ",", "it", "be", "follow", "exactly", "the", "same", "flight", "path", "as", "day", "before"]
(c10-6 / sure-02
       :ARG1 (c10-1 / follow-02
                    :ARG0 (c10-4 / it)
                    :ARG1 (c10-3 / path
                                 :path-of (c10-5 / fly-01)
                                 :ARG1-of (c10-0 / same-01
                                                 :ARG2 (c10-2 / day
                                                              :time (c10-8 / before))
                                                 :mod (c10-7 / exact))))
       :polarity -)

# ::snt Yep, it's follow exactly the route going down, that seems to suggest unconscious pilots.
# ::tokens ["Yep", ",", "it", "'s", "follow", "exactly", "the", "route", "going", "down", ",", "that", "seems", "to", "suggest", "unconscious", "pilots", "."]
# ::lemmas ["yep", ",", "it", "be", "follow", "exactly", "the", "route", "go", "down", ",", "that", "seem", "to", "suggest", "unconscious", "pilot", "."]
(c11-1 / follow-01
       :ARG1 (c11-4 / it)
       :path (c11-8 / route
                    :ARG1-of (c11-7 / go-01
                                    :direction (c11-3 / down-03))
                    :mod (c11-10 / exact))
       :ARG0-of (c11-9 / suggest-01
                       :ARG1 (c11-5 / person
                                    :ARG0-of (c11-2 / pilot-01)
                                    :mod (c11-6 / conscious
                                                :polarity -))
                       :ARG1-of (c11-0 / seem-01)))

# ::snt What I'm saying is, I believe it was deliberately crashed. Being controlled all the way into the ground
# ::tokens ["What", "I", "'m", "saying", "is", ",", "I", "believe", "it", "was", "deliberately", "crashed", ".", "Being", "controlled", "all", "the", "way", "into", "the", "ground"]
# ::lemmas ["what", "i", "be", "say", "be", ",", "i", "believe", "it", "be", "deliberately", "crash", ".", "be", "control", "all", "the", "way", "into", "the", "ground"]
(c12-1 / multi-sentence
       :snt1 (c12-9 / say-01
                    :ARG0 (c12-4 / i)
                    :ARG1 (c12-10 / believe-01
                                  :ARG0 (c12-0 / i)
                                  :ARG1 (c12-5 / crash-01
                                               :ARG1 (c12-2 / it)
                                               :manner (c12-3 / deliberate))))
       :snt2 (c12-8 / control-01
                    :ARG1 (c12-6 / ground)
                    :extent (c12-7 / all-the-way)))

# ::snt No, somebody had just initiated the descent, and might have been unconcious or dead just after that.
# ::tokens ["No", ",", "somebody", "had", "just", "initiated", "the", "descent", ",", "and", "might", "have", "been", "unconcious", "or", "dead", "just", "after", "that", "."]
# ::lemmas ["no", ",", "somebody", "have", "just", "initiate", "the", "descent", ",", "and", "might", "have", "be", "unconcious", "or", "dead", "just", "after", "that", "."]
(c13-7 / and
       :op1 (c13-4 / initiate-01
                   :ARG0 (c13-10 / somebody)
                   :ARG1 (c13-3 / descend-01
                                :ARG0 c13-10)
                   :time (c13-1 / just))
       :op2 (c13-5 / possible-01
                   :ARG1 (c13-8 / or
                                :op1 (c13-6 / conscious
                                            :domain c13-10
                                            :polarity -)
                                :op2 (c13-0 / die-01
                                            :ARG1 c13-10)
                                :time (c13-9 / after
                                             :op1 c13-4
                                             :mod (c13-2 / just)))))

# ::snt If someone set the autopilot to fly it into the ground, the descent rate would have been constant.
# ::tokens ["If", "someone", "set", "the", "autopilot", "to", "fly", "it", "into", "the", "ground", ",", "the", "descent", "rate", "would", "have", "been", "constant", "."]
# ::lemmas ["if", "someone", "set", "the", "autopilot", "to", "fly", "it", "into", "the", "ground", ",", "the", "descent", "rate", "would", "have", "be", "constant", "."]
(c14-3 / constant
       :domain (c14-6 / rate-01
                      :ARG1 (c14-2 / descend-01))
       :condition (c14-7 / set-01
                         :ARG0 (c14-0 / someone)
                         :ARG1 (c14-4 / autopilot)
                         :ARG2 (c14-1 / fly-01
                                      :ARG0 c14-4
                                      :destination (c14-5 / ground))))

# ::snt which seems to be the case.Constant descent, wind variations set aside..
# ::tokens ["which", "seems", "to", "be", "the", "case", ".", "Constant", "descent", ",", "wind", "variations", "set", "aside", ".."]
# ::lemmas ["which", "seem", "to", "be", "the", "case", ".", "constant", "descent", ",", "wind", "variation", "set", "aside", ".."]
(c15-2 / multi-sentence
       :snt1 (c15-9 / seem-01
                    :ARG1 (c15-4 / case-04))
       :snt2 (c15-1 / set-01
                    :ARG1 (c15-6 / and
                                 :op1 (c15-3 / descend-01
                                             :mod (c15-7 / constant))
                                 :op2 (c15-5 / vary-01
                                             :ARG1 (c15-0 / wind)))
                    :ARG2 (c15-8 / aside)))

# ::snt They're saying what I said, the crash was a deliberate act. Controlled flight all the way down.
# ::tokens ["They", "'re", "saying", "what", "I", "said", ",", "the", "crash", "was", "a", "deliberate", "act", ".", "Controlled", "flight", "all", "the", "way", "down", "."]
# ::lemmas ["they", "be", "say", "what", "i", "say", ",", "the", "crash", "be", "a", "deliberate", "act", ".", "control", "flight", "all", "the", "way", "down", "."]
(c16-3 / multi-sentence
       :snt1 (c16-12 / say-01
                     :ARG0 (c16-4 / they)
                     :ARG1 (c16-2 / thing
                                  :ARG1-of (c16-0 / say-01
                                                  :ARG0 (c16-7 / i))))
       :snt2 (c16-9 / act-02
                    :ARG1-of (c16-6 / deliberate-01)
                    :domain (c16-8 / crash-01))
       :snt3 (c16-1 / down-01
                    :ARG1 (c16-5 / fly-01
                                 :ARG1-of (c16-10 / control-01))
                    :extent (c16-11 / all-the-way)))

# ::snt Or autopilot. But sure deliberately set.
# ::tokens ["Or", "autopilot", ".", "But", "sure", "deliberately", "set", "."]
# ::lemmas ["or", "autopilot", ".", "but", "sure", "deliberately", "set", "."]
(c17-1 / multi-sentence
       :snt1 (c17-5 / or
                    :op2 (c17-4 / autopilot))
       :snt2 (c17-3 / contrast-01
                    :ARG2 (c17-6 / set-02
                                 :ARG1-of (c17-0 / sure-02)
                                 :manner (c17-2 / deliberate))))

# ::snt I don't think the autopilot was engaged.
# ::tokens ["I", "do", "n't", "think", "the", "autopilot", "was", "engaged", "."]
# ::lemmas ["i", "do", "not", "think", "the", "autopilot", "be", "engage", "."]
(c18-3 / think-01
       :ARG0 (c18-2 / i)
       :ARG1 (c18-1 / engage-01
                    :ARG1 (c18-0 / autopilot))
       :polarity -)

# ::snt They're now saying the co-pilot deliberately crashed the plane.
# ::tokens ["They", "'re", "now", "saying", "the", "co", "-", "pilot", "deliberately", "crashed", "the", "plane", "."]
# ::lemmas ["they", "be", "now", "say", "the", "co", "-", "pilot", "deliberately", "crash", "the", "plane", "."]
(c19-7 / say-01
       :ARG0 (c19-1 / they)
       :ARG1 (c19-5 / crash-01
                    :ARG0 (c19-4 / person
                                 :ARG0-of (c19-2 / pilot-01)
                                 :mod (c19-6 / co-pilot))
                    :ARG1 (c19-0 / plane)
                    :manner (c19-3 / deliberate))
       :time (c19-8 / now))

# ::snt That's what they say.
# ::tokens ["That", "'s", "what", "they", "say", "."]
# ::lemmas ["that", "be", "what", "they", "say", "."]
(c20-0 / say-01
       :ARG0 (c20-2 / they)
       :ARG1 (c20-1 / that))

# ::snt The data from the transponder made it obvious.
# ::tokens ["The", "data", "from", "the", "transponder", "made", "it", "obvious", "."]
# ::lemmas ["the", "datum", "from", "the", "transponder", "make", "it", "obvious", "."]
(c21-1 / make-02
       :ARG0 (c21-2 / data
                    :source (c21-0 / transponder))
       :ARG1 (c21-4 / obvious-01
                    :ARG1 (c21-3 / it)))

# ::snt The transponder did not say anything. No sqwak .
# ::tokens ["The", "transponder", "did", "not", "say", "anything", ".", "No", "sqwak", "."]
# ::lemmas ["the", "transponder", "do", "not", "say", "anything", ".", "no", "sqwak", "."]
(c22-2 / multi-sentence
       :snt1 (c22-4 / say-01
                    :ARG0 (c22-1 / transponder)
                    :ARG1 (c22-3 / anything)
                    :polarity -)
       :snt2 (c22-0 / sqwak
                    :polarity -))

# ::snt It was obvious it was being manually controlled by the changes in descent rate. Also no
# ::tokens ["It", "was", "obvious", "it", "was", "being", "manually", "controlled", "by", "the", "changes", "in", "descent", "rate", ".", "Also", "no"]
# ::lemmas ["it", "be", "obvious", "it", "be", "be", "manually", "control", "by", "the", "change", "in", "descent", "rate", ".", "also", "no"]
(c23-0 / multi-sentence
       :snt1 (c23-6 / obvious-01
                    :ARG1 (c23-2 / control-01
                                 :ARG0 (c23-8 / change-01
                                              :ARG1 (c23-5 / rate
                                                           :degree-of (c23-1 / descend-01)))
                                 :ARG1 (c23-3 / it)
                                 :manner (c23-7 / manual)))
       :snt2 (c23-9 / no
                    :mod (c23-4 / also)))

# ::snt distress call. I thought it was hi-jacked and being flown by then. If it's true that the co-pilot did
# ::tokens ["distress", "call", ".", "I", "thought", "it", "was", "hi", "-", "jacked", "and", "being", "flown", "by", "then", ".", "If", "it", "'s", "true", "that", "the", "co", "-", "pilot", "did"]
# ::lemmas ["distress", "call", ".", "i", "think", "it", "be", "hi", "-", "jack", "and", "be", "fly", "by", "then", ".", "if", "it", "be", "true", "that", "the", "co", "-", "pilot", "do"]
(c24-3 / multi-sentence
       :snt1 (c24-10 / call-02
                     :ARG0-of (c24-8 / disturb-01))
       :snt2 (c24-2 / think-01
                    :ARG0 (c24-9 / i)
                    :ARG1 (c24-13 / and
                                  :op1 (c24-0 / hack-04
                                              :ARG1 (c24-1 / it))
                                  :op2 (c24-4 / fly-01
                                              :ARG1 c24-1
                                              :time (c24-14 / by
                                                            :op1 (c24-5 / then)))))
       :snt3 (c24-6 / do-02
                    :ARG0 (c24-11 / person
                                  :ARG0-of (c24-7 / pilot-01))
                    :condition (c24-12 / true-01
                                       :ARG1 c24-6)))

# ::snt crash it deliberately, the whole industry needs a shake-up.
# ::tokens ["crash", "it", "deliberately", ",", "the", "whole", "industry", "needs", "a", "shake", "-", "up", "."]
# ::lemmas ["crash", "it", "deliberately", ",", "the", "whole", "industry", "need", "a", "shake", "-", "up", "."]
(c25-5 / cause-01
       :ARG0 (c25-7 / crack-02
                    :ARG0 (c25-0 / you)
                    :ARG1 (c25-4 / it)
                    :manner (c25-3 / deliberate)
                    :mode imperative)
       :ARG1 (c25-8 / need-01
                    :ARG0 (c25-2 / industry
                                 :mod (c25-1 / whole))
                    :ARG1 (c25-6 / shake-up-03)))

# ::snt It only takes a moment to enter into the transponder. I've worked on these systems before.
# ::tokens ["It", "only", "takes", "a", "moment", "to", "enter", "into", "the", "transponder", ".", "I", "'ve", "worked", "on", "these", "systems", "before", "."]
# ::lemmas ["it", "only", "take", "a", "moment", "to", "enter", "into", "the", "transponder", ".", "i", "'ve", "work", "on", "these", "system", "before", "."]
(c26-2 / multi-sentence
       :snt1 (c26-3 / take-10
                    :ARG0 (c26-9 / enter-01
                                 :ARG1 (c26-1 / transponder))
                    :ARG1 (c26-7 / moment)
                    :mod (c26-6 / only))
       :snt2 (c26-0 / work-01
                    :ARG0 (c26-5 / i)
                    :ARG1 (c26-8 / system
                                 :mod (c26-4 / this))
                    :time (c26-10 / before)))

# ::snt Autopilot was manually changed from to ft at :30:55 (Flightradar24 says)
# ::tokens ["Autopilot", "was", "manually", "changed", "from", "to", "ft", "at", ":", "30:55", "(", "Flightradar24", "says", ")"]
# ::lemmas ["autopilot", "be", "manually", "change", "from", "to", "ft", "at", ":", "30:55", "(", "Flightradar24", "say", ")"]
(c27-3 / change-01
       :ARG1 (c27-5 / autopilot)
       :ARG2 (c27-0 / foot)
       :manner (c27-1 / manual)
       :time (c27-2 / date-entity
                    :ARG1-of (c27-6 / say-01
                                    :ARG0 (c27-4 / publication
                                                 :name (c27-7 / name
                                                              :op1 "Flightradar24")))
                    :time "0:30:55"))

# ::snt The autopilot wasn't set to feet. It was flown manually. FlightRadar24 has made that up.
# ::tokens ["The", "autopilot", "was", "n't", "set", "to", "feet", ".", "It", "was", "flown", "manually", ".", "FlightRadar24", "has", "made", "that", "up", "."]
# ::lemmas ["the", "autopilot", "be", "not", "set", "to", "foot", ".", "it", "be", "fly", "manually", ".", "FlightRadar24", "have", "make", "that", "up", "."]
(c28-1 / multi-sentence
       :snt1 (c28-9 / set-16
                    :ARG1 (c28-5 / autopilot)
                    :ARG2 (c28-2 / foot)
                    :polarity -)
       :snt2 (c28-7 / fly-01
                    :ARG1 (c28-3 / it)
                    :manner (c28-8 / manual))
       :snt3 (c28-6 / make-up-10
                    :ARG0 (c28-4 / publication
                                 :name (c28-10 / name
                                               :op1 "FlightRadar24"))
                    :ARG1 (c28-0 / that)))

# ::snt Have you operated a flight mqnagement computer before? I used to test them. What FlightRadar24 is ahowing is changes made
# ::tokens ["Have", "you", "operated", "a", "flight", "mqnagement", "computer", "before", "?", "I", "used", "to", "test", "them", ".", "What", "FlightRadar24", "is", "ahowing", "is", "changes", "made"]
# ::lemmas ["have", "you", "operate", "a", "flight", "mqnagement", "computer", "before", "?", "i", "use", "to", "test", "they", ".", "what", "flightradar24", "be", "ahowe", "be", "change", "make"]
(c29-2 / multi-sentence
       :snt1 (c29-11 / operate-01
                     :polarity (c29-9 / amr-unknown)
                     :ARG0 (c29-0 / you)
                     :ARG1 (c29-6 / computer
                                  :instrument-of (c29-12 / mqnagement
                                                         :mod (c29-3 / fly-01)))
                     :time (c29-15 / before))
       :snt2 (c29-1 / test-01
                    :ARG0 (c29-7 / i)
                    :ARG1 (c29-4 / they)
                    :time (c29-8 / use-03))
       :snt3 (c29-10 / amr-unknown
                     :domain (c29-13 / change-01
                                     :ARG1 (c29-5 / thing
                                                  :name (c29-14 / name
                                                                :op1 "FlightRadar24")))))

# ::snt the flight profile. That doesn't indicate that the autopilot was set to feet. I've worked on these systems, tested them
# ::tokens ["the", "flight", "profile", ".", "That", "does", "n't", "indicate", "that", "the", "autopilot", "was", "set", "to", "feet", ".", "I", "'ve", "worked", "on", "these", "systems", ",", "tested", "them"]
# ::lemmas ["the", "flight", "profile", ".", "that", "do", "not", "indicate", "that", "the", "autopilot", "be", "set", "to", "foot", ".", "i", "'ve", "work", "on", "these", "system", ",", "test", "they"]
(c30-4 / multi-sentence
       :snt1 (c30-9 / profile
                    :topic (c30-5 / fly-01))
       :snt2 (c30-8 / indicate-01
                    :ARG0 (c30-3 / that)
                    :ARG1 (c30-13 / set-01
                                  :ARG1 (c30-10 / autopilot)
                                  :ARG2 (c30-11 / foot))
                    :polarity -)
       :snt3 (c30-12 / and
                     :op1 (c30-0 / work-01
                                 :ARG0 (c30-1 / i)
                                 :ARG1 (c30-2 / system
                                              :mod (c30-6 / this)))
                     :op2 (c30-7 / test-01
                                 :ARG0 c30-1
                                 :ARG1 c30-2)))

# ::snt and have operated them in sumulators. Also on actual flights when I've been in the flight deck.
# ::tokens ["and", "have", "operated", "them", "in", "sumulators", ".", "Also", "on", "actual", "flights", "when", "I", "'ve", "been", "in", "the", "flight", "deck", "."]
# ::lemmas ["and", "have", "operate", "they", "in", "sumulator", ".", "also", "on", "actual", "flight", "when", "i", "'ve", "be", "in", "the", "flight", "deck", "."]
(c31-2 / multi-sentence
       :snt1 (c31-7 / and
                    :op2 (c31-9 / operate-01
                                :ARG1 (c31-3 / they)
                                :instrument (c31-1 / thing
                                                   :ARG0-of (c31-10 / measure-01
                                                                    :ARG1 (c31-12 / sumulators)))))
       :snt2 (c31-4 / fly-01
                    :ARG1-of (c31-8 / actual-02)
                    :time (c31-13 / be-located-at-91
                                  :ARG1 (c31-6 / i)
                                  :ARG2 (c31-5 / deck
                                               :purpose (c31-0 / fly-01)))
                    :mod (c31-11 / also)))

# ::snt Look at the time on each line. The altitudes are requested not achieved.
# ::tokens ["Look", "at", "the", "time", "on", "each", "line", ".", "The", "altitudes", "are", "requested", "not", "achieved", "."]
# ::lemmas ["look", "at", "the", "time", "on", "each", "line", ".", "the", "altitude", "be", "request", "not", "achieve", "."]
(c32-2 / multi-sentence
       :snt1 (c32-3 / look-01
                    :ARG0 (c32-0 / you)
                    :ARG1 (c32-1 / time
                                 :location (c32-7 / line
                                                  :mod (c32-8 / each)))
                    :mode imperative)
       :snt2 (c32-5 / request-01
                    :ARG1 (c32-4 / achieve-01
                                 :ARG1 (c32-6 / altitude)
                                 :polarity -)))

# ::snt But that's the FMC, doesn't mean autopilot was engaged.
# ::tokens ["But", "that", "'s", "the", "FMC", ",", "does", "n't", "mean", "autopilot", "was", "engaged", "."]
# ::lemmas ["but", "that", "be", "the", "FMC", ",", "do", "not", "mean", "autopilot", "be", "engage", "."]
(c33-3 / contrast-01
       :ARG2 (c33-2 / mean-01
                    :ARG1 (c33-5 / military
                                 :name (c33-6 / name
                                              :op1 "FMC")
                                 :domain (c33-1 / that))
                    :ARG2 (c33-0 / engage-01
                                 :ARG2 (c33-4 / autopilot))
                    :polarity -))

# ::snt what's the use of changing FMC if autopilot not engaged?
# ::tokens ["what", "'s", "the", "use", "of", "changing", "FMC", "if", "autopilot", "not", "engaged", "?"]
# ::lemmas ["what", "be", "the", "use", "of", "change", "FMC", "if", "autopilot", "not", "engage", "?"]
(c34-3 / use-01
       :ARG1 (c34-2 / change-01
                    :ARG1 (c34-1 / product
                                 :name (c34-6 / name
                                              :op1 "FMC")))
       :ARG2 (c34-4 / amr-unknown)
       :condition (c34-0 / engage-01
                         :ARG1 (c34-5 / autopilot)
                         :polarity -))

# ::snt It changes the flight profile and cuts out the warnings and some of the protection.
# ::tokens ["It", "changes", "the", "flight", "profile", "and", "cuts", "out", "the", "warnings", "and", "some", "of", "the", "protection", "."]
# ::lemmas ["it", "change", "the", "flight", "profile", "and", "cut", "out", "the", "warning", "and", "some", "of", "the", "protection", "."]
(c35-7 / and
       :op1 (c35-5 / change-01
                   :ARG0 (c35-3 / it)
                   :ARG1 (c35-4 / profile
                                :mod (c35-1 / fly-01)))
       :op2 (c35-9 / cut-out-06
                   :ARG0 c35-3
                   :ARG1 (c35-8 / and
                                :op1 (c35-0 / warn-01)
                                :op2 (c35-2 / protect-01
                                            :quant (c35-6 / some)))))

# ::snt Would be good to get the data from the Flight Data Recorder though.
# ::tokens ["Would", "be", "good", "to", "get", "the", "data", "from", "the", "Flight", "Data", "Recorder", "though", "."]
# ::lemmas ["would", "be", "good", "to", "get", "the", "datum", "from", "the", "Flight", "Data", "Recorder", "though", "."]
(c36-3 / good-02
       :ARG1 (c36-0 / get-01
                    :ARG1 (c36-2 / data)
                    :ARG2 (c36-4 / organization
                                 :name (c36-5 / name
                                              :op1 "Flight"
                                              :op2 "Data"
                                              :op3 "Recorder")))
       :ARG2-of (c36-1 / have-concession-91))

# ::snt Anyway. Have to wait and see now.
# ::tokens ["Anyway", ".", "Have", "to", "wait", "and", "see", "now", "."]
# ::lemmas ["anyway", ".", "have", "to", "wait", "and", "see", "now", "."]
(c37-1 / multi-sentence
       :snt1 (c37-2 / anyway)
       :snt2 (c37-3 / obligate-01
                    :ARG2 (c37-4 / and
                                 :op1 (c37-0 / wait-01)
                                 :op2 (c37-5 / see-01)
                                 :time (c37-6 / now))))

# ::snt initially climbed to k ft before starting to descend and lost signal at k ft
# ::tokens ["initially", "climbed", "to", "k", "ft", "before", "starting", "to", "descend", "and", "lost", "signal", "at", "k", "ft"]
# ::lemmas ["initially", "climb", "to", "k", "ft", "before", "start", "to", "descend", "and", "lose", "signal", "at", "k", "ft"]
(c38-8 / and
       :op1 (c38-6 / climb-01
                   :ARG1 (c38-5 / distance-quantity
                                :quant (c38-0 / k
                                              :unit (c38-4 / foot))
                                :time (c38-7 / initial))
                   :op2 (c38-10 / start-01
                                :ARG1 (c38-2 / descend-01
                                             :ARG0 (c38-1 / i)))
                   :op3 (c38-9 / lose-02
                               :ARG0 c38-1
                               :ARG1 (c38-3 / signal-07
                                            :ARG0 c38-1)
                               :location c38-5)))

# ::snt Sounds like a decent of fpm
# ::tokens ["Sounds", "like", "a", "decent", "of", "fpm"]
# ::lemmas ["sound", "like", "a", "decent", "of", "fpm"]
(c39-5 / sound-01
       :ARG2 (c39-1 / thing
                    :mod (c39-3 / decent)
                    :ARG3-of (c39-4 / rate-entity-91
                                    :ARG2 (c39-0 / temporal-quantity
                                                 :unit (c39-2 / minute)
                                                 :quant 1))))

# ::snt Any ATC available? Strange.....
# ::tokens ["Any", "ATC", "available", "?", "Strange", "....."]
# ::lemmas ["any", "atc", "available", "?", "strange", "....."]
(c40-0 / multi-sentence
       :snt1 (c40-2 / available-02
                    :ARG2 (c40-1 / product
                                 :name (c40-6 / name
                                              :op1 "ATC")
                                 :mod (c40-3 / any))
                    :polarity (c40-4 / amr-unknown))
       :snt2 (c40-5 / strange))

# ::snt isnt ft unusually high?
# ::tokens ["is", "nt", "ft", "unusually", "high", "?"]
# ::lemmas ["be", "not", "ft", "unusually", "high", "?"]
(c41-3 / high-02
       :ARG1 (c41-0 / foot)
       :manner (c41-1 / usual
                      :polarity -)
       :polarity (c41-2 / amr-unknown)
       :polarity -)

# ::snt yes and no depends on other traffic, turbulence... they were mins late so going higher = going quicker
# ::tokens ["yes", "and", "no", "depends", "on", "other", "traffic", ",", "turbulence", "...", "they", "were", "mins", "late", "so", "going", "higher", "=", "going", "quicker"]
# ::lemmas ["yes", "and", "no", "depend", "on", "other", "traffic", ",", "turbulence", "...", "they", "be", "min", "late", "so", "go", "high", "=", "go", "quick"]
(c42-20 / multi-sentence
        :snt1 (c42-15 / and
                      :op1 (c42-5 / yes)
                      :op2 (c42-14 / no)
                      :topic (c42-4 / and
                                    :op1 (c42-7 / traffic
                                                :mod (c42-17 / other))
                                    :op2 (c42-19 / turbulence)))
        :snt2 (c42-1 / late-02
                     :ARG1 (c42-8 / they)
                     :ARG2 (c42-21 / multiple
                                   :op1 (c42-12 / temporal-quantity
                                                :unit (c42-3 / minute)
                                                :quant 1))
                     :ARG0-of (c42-11 / cause-01
                                      :ARG1 (c42-16 / go-01
                                                    :ARG2 (c42-0 / high-02
                                                                 :ARG2-of (c42-9 / have-degree-91
                                                                                 :ARG1 c42-16
                                                                                 :ARG3 (c42-10 / more)))
                                                    :ARG1-of (c42-18 / equal-01
                                                                     :ARG2 (c42-6 / go-01
                                                                                  :ARG2 (c42-22 / quick-02
                                                                                                :ARG2-of (c42-13 / have-degree-91
                                                                                                                 :ARG1 c42-6
                                                                                                                 :ARG3 (c42-2 / more)))))))))
