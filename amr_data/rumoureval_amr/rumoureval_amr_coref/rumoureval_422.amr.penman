# ::snt Brown suspect in robbery before death
# ::tokens ["Brown", "suspect", "in", "robbery", "before", "death"]
# ::lemmas ["Brown", "suspect", "in", "robbery", "before", "death"]
(c1-3 / suspect-01
      :ARG1 (c1-2 / rob-01
                  :ARG0 (c1-1 / person
                              :name (c1-4 / name
                                          :op1 "Brown")
                              :ARG2-of c1-3))
      :time (c1-5 / before
                  :op1 (c1-0 / die-01
                             :ARG1 c1-1)))

# ::snt : Brown suspect in robbery before death suspect in stealing a candy bar
# ::tokens [":", "Brown", "suspect", "in", "robbery", "before", "death", "suspect", "in", "stealing", "a", "candy", "bar"]
# ::lemmas [":", "Brown", "suspect", "in", "robbery", "before", "death", "suspect", "in", "steal", "a", "candy", "bar"]
(c2-3 / person
      :name (c2-8 / name
                  :op1 "Brown")
      :ARG2-of (c2-7 / suspect-01
                     :ARG1 (c2-6 / rob-01
                                 :ARG0 c2-3)
                     :time (c2-9 / before
                                 :op1 (c2-2 / die-01
                                            :ARG1 c2-3)))
      :ARG1-of (c2-1 / suspect-01
                     :ARG2 (c2-0 / steal-01
                                 :ARG0 c2-3
                                 :ARG1 (c2-5 / bar
                                             :mod (c2-4 / candy)))))

# ::snt nevertheless
# ::tokens ["nevertheless"]
# ::lemmas ["nevertheless"]
(c3-0 / have-concession-91
      :ARG2 (c3-1 / ever))

# ::snt correct stealing is no good but in sure jail sentence or a fine would've justified it, not a death sentence
# ::tokens ["correct", "stealing", "is", "no", "good", "but", "in", "sure", "jail", "sentence", "or", "a", "fine", "would", "'ve", "justified", "it", ",", "not", "a", "death", "sentence"]
# ::lemmas ["correct", "stealing", "be", "no", "good", "but", "in", "sure", "jail", "sentence", "or", "a", "fine", "would", "'ve", "justify", "it", ",", "not", "a", "death", "sentence"]
(c4-9 / contrast-01
      :ARG1 (c4-11 / good-02
                   :ARG1 (c4-13 / steal-01
                                :ARG1-of (c4-12 / correct-02))
                   :polarity -)
      :ARG2 (c4-4 / justify-01
                  :ARG0 (c4-6 / or
                              :op1 (c4-1 / sentence-01
                                         :ARG2 (c4-7 / jail))
                              :op2 (c4-5 / fine-01))
                  :ARG1 c4-13
                  :ARG1-of (c4-0 / sure-02))
      :ARG1-of (c4-10 / contrast-01
                      :ARG2 (c4-3 / justify-01
                                  :ARG0 c4-6
                                  :ARG1 c4-13
                                  :ARG2 (c4-2 / sentence-01
                                              :ARG2 (c4-8 / die-01))
                                  :polarity -)))

# ::snt he was resisting arrest
# ::tokens ["he", "was", "resisting", "arrest"]
# ::lemmas ["he", "be", "resist", "arrest"]
(c5-2 / resist-01
      :ARG0 (c5-1 / he)
      :ARG1 (c5-0 / arrest-01
                  :ARG1 c5-1))

# ::snt FOX NEWS exposed the lies.The guy was wanted for strong arm robbery.All of the race baiters need to be locked up
# ::tokens ["FOX", "NEWS", "exposed", "the", "lies", ".", "The", "guy", "was", "wanted", "for", "strong", "arm", "robbery", ".", "All", "of", "the", "race", "baiters", "need", "to", "be", "locked", "up"]
# ::lemmas ["FOX", "NEWS", "expose", "the", "lie", ".", "the", "guy", "be", "want", "for", "strong", "arm", "robbery", ".", "all", "of", "the", "race", "baiter", "need", "to", "be", "lock", "up"]
(c6-3 / multi-sentence
      :snt1 (c6-2 / expose-01
                  :ARG0 (c6-16 / broadcast-program
                               :name (c6-15 / name
                                            :op1 "FOX"
                                            :op2 "News"))
                  :ARG1 (c6-6 / lie-08))
      :snt2 (c6-1 / want-01
                  :ARG1 (c6-7 / guy)
                  :ARG1-of (c6-4 / cause-01
                                 :ARG0 (c6-9 / rob-01
                                             :ARG0 c6-7
                                             :manner (c6-8 / arm
                                                           :ARG1-of (c6-13 / strong-02)))))
      :snt3 (c6-11 / obligate-01
                   :ARG2 (c6-14 / lock-up-03
                                :ARG1 (c6-5 / person
                                            :ARG0-of (c6-10 / bait-01
                                                            :ARG2 (c6-0 / race))
                                            :mod (c6-12 / all)))))

# ::snt CNN,MDNBC race baiting, They did not look for facts, they tried to create them to incite blacks.
# ::tokens ["CNN", ",", "MDNBC", "race", "baiting", ",", "They", "did", "not", "look", "for", "facts", ",", "they", "tried", "to", "create", "them", "to", "incite", "blacks", "."]
# ::lemmas ["CNN", ",", "mdnbc", "race", "baiting", ",", "they", "do", "not", "look", "for", "fact", ",", "they", "try", "to", "create", "they", "to", "incite", "black", "."]
(c7-8 / and
      :op1 (c7-9 / look-01
                 :ARG0 (c7-12 / and
                              :op1 (c7-5 / publication
                                         :name (c7-13 / name
                                                      :op1 "CNN"))
                              :op2 (c7-3 / publication
                                         :name (c7-4 / name
                                                     :op1 "MDNBC")))
                 :ARG1 (c7-2 / fact)
                 :polarity -)
      :op2 (c7-1 / try-01
                 :ARG0 c7-12
                 :ARG1 (c7-6 / create-01
                             :ARG0 c7-12
                             :ARG1 (c7-14 / bait-01
                                          :ARG2 (c7-11 / race))
                             :purpose (c7-7 / incite-01
                                            :ARG0 c7-12
                                            :ARG1 (c7-0 / person
                                                        :ARG1-of (c7-10 / black-05))))))

# ::snt Blacks want to have control over the police. like lets form a committee and have a conversation.Police don't
# ::tokens ["Blacks", "want", "to", "have", "control", "over", "the", "police", ".", "like", "lets", "form", "a", "committee", "and", "have", "a", "conversation", ".", "Police", "do", "n't"]
# ::lemmas ["black", "want", "to", "have", "control", "over", "the", "police", ".", "like", "let", "form", "a", "committee", "and", "have", "a", "conversation", ".", "police", "do", "not"]
(c8-0 / want-01
      :ARG0 (c8-5 / person
                  :ARG1-of (c8-11 / black-05))
      :ARG1 (c8-4 / control-01
                  :ARG0 c8-5
                  :ARG1 (c8-3 / police))
      :example (c8-7 / and
                     :op1 (c8-2 / form-01
                                :ARG0 (c8-8 / we)
                                :ARG1 (c8-9 / committee)
                                :mode imperative)
                     :op2 (c8-6 / converse-01
                                :ARG0 c8-8
                                :mode imperative))
      :ARG1-of (c8-10 / want-01
                      :ARG0 (c8-1 / police)
                      :polarity -))

# ::snt we prefer the term African American sir
# ::tokens ["we", "prefer", "the", "term", "African", "American", "sir"]
# ::lemmas ["we", "prefer", "the", "term", "African", "American", "sir"]
(c9-8 / say-01
      :ARG1 (c9-5 / prefer-01
                  :ARG0 (c9-0 / we)
                  :ARG1 (c9-2 / term-01
                              :ARG1 (c9-3 / person
                                          :mod (c9-6 / continent
                                                     :name (c9-9 / name
                                                                 :op1 "Africa"))
                                          :mod (c9-7 / country
                                                     :name (c9-4 / name
                                                                 :op1 "America")))))
      :ARG2 (c9-1 / sir))

# ::snt Police have a duty to protect everyone, blacks protect criminals and use the death to make money.
# ::tokens ["Police", "have", "a", "duty", "to", "protect", "everyone", ",", "blacks", "protect", "criminals", "and", "use", "the", "death", "to", "make", "money", "."]
# ::lemmas ["police", "have", "a", "duty", "to", "protect", "everyone", ",", "black", "protect", "criminal", "and", "use", "the", "death", "to", "make", "money", "."]
(c10-5 / contrast-01
       :ARG1 (c10-10 / obligate-01
                     :ARG1 (c10-4 / police)
                     :ARG2 (c10-2 / protect-01
                                  :ARG0 c10-4
                                  :ARG1 (c10-13 / everyone)))
       :ARG2 (c10-8 / and
                    :op1 (c10-0 / protect-01
                                :ARG0 (c10-9 / person
                                             :ARG1-of (c10-14 / black-05))
                                :ARG1 (c10-3 / person
                                             :ARG2-of (c10-12 / criminal-03)))
                    :op2 (c10-7 / use-01
                                :ARG0 c10-9
                                :ARG1 (c10-6 / die-01)
                                :ARG2 (c10-1 / make-05
                                             :ARG0 c10-9
                                             :ARG1 (c10-11 / money)))))

# ::snt If anyone's curious what cognitive dissonance looks like, examine this Bobby News gent.
# ::tokens ["If", "anyone", "'s", "curious", "what", "cognitive", "dissonance", "looks", "like", ",", "examine", "this", "Bobby", "News", "gent", "."]
# ::lemmas ["if", "anyone", "be", "curious", "what", "cognitive", "dissonance", "look", "like", ",", "examine", "this", "Bobby", "News", "gent", "."]
(c11-0 / examine-01
       :ARG0 (c11-7 / anyone)
       :ARG1 (c11-6 / gent
                    :mod (c11-4 / person
                                :name (c11-10 / name
                                              :op1 "Bobby"
                                              :op2 "News"))
                    :mod (c11-1 / this))
       :condition (c11-5 / curious-01
                         :ARG0 (c11-2 / thing
                                      :ARG2-of (c11-8 / look-02
                                                      :ARG1 (c11-3 / dissonance
                                                                   :mod (c11-9 / cognition))))
                         :ARG1 c11-7)
       :mode imperative)

# ::snt Whites need to wake up and stop feeling sorry for the raciest, they are experts in RACE BAITING, communist agend
# ::tokens ["Whites", "need", "to", "wake", "up", "and", "stop", "feeling", "sorry", "for", "the", "raciest", ",", "they", "are", "experts", "in", "RACE", "BAITING", ",", "communist", "agend"]
# ::lemmas ["white", "need", "to", "wake", "up", "and", "stop", "feel", "sorry", "for", "the", "racy", ",", "they", "be", "expert", "in", "RACE", "BAITING", ",", "communist", "agend"]
(c12-13 / and
        :op1 (c12-8 / need-01
                    :ARG0 (c12-12 / person
                                  :ARG1-of (c12-0 / white-02))
                    :ARG1 (c12-5 / and
                                 :op1 (c12-6 / wake-up-02
                                             :ARG1 c12-12)
                                 :op2 (c12-7 / stop-01
                                             :ARG0 c12-12
                                             :ARG1 (c12-11 / feel-01
                                                           :ARG0 c12-12
                                                           :ARG1 (c12-10 / sorry-01
                                                                         :ARG1 c12-12
                                                                         :ARG2 (c12-18 / person
                                                                                       :ARG1-of (c12-1 / have-degree-91
                                                                                                       :ARG2 (c12-16 / bad-07
                                                                                                                     :ARG1 c12-18)
                                                                                                       :ARG3 (c12-17 / most))))))))
        :op2 (c12-15 / expert-01
                     :ARG1 c12-12
                     :ARG2 (c12-14 / and
                                   :op1 (c12-19 / bridge-01
                                                :mod (c12-4 / race))
                                   :op2 (c12-3 / agend
                                               :mod (c12-9 / political-movement
                                                           :name (c12-2 / name
                                                                        :op1 "communism"))))))

# ::snt Stop giving blacks free press and let the police do their job.We need a president a top cop that uphold the law
# ::tokens ["Stop", "giving", "blacks", "free", "press", "and", "let", "the", "police", "do", "their", "job", ".", "We", "need", "a", "president", "a", "top", "cop", "that", "uphold", "the", "law"]
# ::lemmas ["stop", "give", "black", "free", "press", "and", "let", "the", "police", "do", "their", "job", ".", "we", "need", "a", "president", "a", "top", "cop", "that", "uphold", "the", "law"]
(c13-19 / multi-sentence
        :snt1 (c13-9 / stop-01
                     :ARG0 (c13-4 / you)
                     :ARG1 (c13-17 / give-01
                                   :ARG0 c13-4
                                   :ARG1 (c13-16 / press
                                                 :ARG1-of (c13-13 / free-04))
                                   :ARG2 (c13-20 / person
                                                 :ARG1-of (c13-18 / black-05)))
                     :mode imperative)
        :snt2 (c13-3 / let-01
                     :ARG0 c13-4
                     :ARG1 (c13-15 / do-02
                                   :ARG0 (c13-12 / police)
                                   :ARG1 (c13-6 / job
                                                :poss c13-12))
                     :mode imperative)
        :snt3 (c13-11 / need-01
                      :ARG0 (c13-0 / we)
                      :ARG1 (c13-8 / person
                                   :ARG0-of (c13-1 / have-org-role-91
                                                   :ARG2 (c13-14 / president)
                                                   :ARG0 c13-8)
                                   :ARG2 (c13-7 / cop
                                                :mod (c13-5 / top)
                                                :ARG0-of (c13-2 / uphold-01
                                                                :ARG1 (c13-10 / law))))))

# ::snt but the kid in the back is throwing up gang signs....smh
# ::tokens ["but", "the", "kid", "in", "the", "back", "is", "throwing", "up", "gang", "signs", "....", "smh"]
# ::lemmas ["but", "the", "kid", "in", "the", "back", "be", "throw", "up", "gang", "sign", "....", "smh"]
(c14-3 / contrast-01
       :ARG2 (c14-2 / throw-up-04
                    :ARG0 (c14-0 / kid
                                 :location (c14-6 / back))
                    :ARG1 (c14-5 / sign
                                 :mod (c14-4 / gang)))
       :mod (c14-1 / smh
                   :mode expressive))

# ::snt way to flash a gang sign while asking for peace
# ::tokens ["way", "to", "flash", "a", "gang", "sign", "while", "asking", "for", "peace"]
# ::lemmas ["way", "to", "flash", "a", "gang", "sign", "while", "ask", "for", "peace"]
(c15-0 / way
       :manner-of (c15-1 / flash-01
                         :ARG1 (c15-5 / sign
                                      :mod (c15-3 / gang))
                         :time (c15-4 / ask-02
                                      :ARG1 (c15-2 / peace))))

# ::snt Reporters may have freedom of speech,they need to be held accountable for lies,race baiting, interfering with po
# ::tokens ["Reporters", "may", "have", "freedom", "of", "speech", ",", "they", "need", "to", "be", "held", "accountable", "for", "lies", ",", "race", "baiting", ",", "interfering", "with", "po"]
# ::lemmas ["reporter", "may", "have", "freedom", "of", "speech", ",", "they", "need", "to", "be", "hold", "accountable", "for", "lie", ",", "race", "baiting", ",", "interfere", "with", "po"]
(c16-7 / and
       :op1 (c16-5 / possible-01
                   :ARG1 (c16-3 / free-04
                                :ARG1 (c16-4 / person
                                             :ARG0-of (c16-9 / report-01))
                                :ARG3 (c16-13 / speak-01
                                              :ARG0 c16-4)))
       :op2 (c16-10 / obligate-01
                    :ARG2 (c16-2 / hold-02
                                 :ARG1 (c16-11 / accountable-02
                                               :ARG0 c16-4
                                               :ARG1 (c16-12 / and
                                                             :op1 (c16-8 / lie-08)
                                                             :op2 (c16-14 / bait-01
                                                                          :ARG2 (c16-0 / race))
                                                             :op3 (c16-6 / interfere-01
                                                                         :ARG0 c16-4
                                                                         :ARG1 (c16-1 / po)))))))

# ::snt WRONG AGAIN BITCH!
# ::tokens ["WRONG", "AGAIN", "BITCH", "!"]
# ::lemmas ["wrong", "again", "BITCH", "!"]
(c17-1 / wrong-02
       :ARG1 (c17-2 / bitch)
       :mod (c17-0 / again)
       :mode expressive)

# ::snt aye is this a peace sign or gang sign?
# ::tokens ["aye", "is", "this", "a", "peace", "sign", "or", "gang", "sign", "?"]
# ::lemmas ["aye", "be", "this", "a", "peace", "sign", "or", "gang", "sign", "?"]
(c18-3 / aye
       :polarity (c18-6 / amr-unknown)
       :mod (c18-5 / or
                   :op1 (c18-7 / signal-07
                               :ARG1 (c18-2 / peace))
                   :op2 (c18-0 / signal-07
                               :ARG1 (c18-4 / gang))
                   :domain (c18-1 / this)))
