# ::snt Antonio French tweeted this vid days ago. Is this the same robbery and market?
# ::tokens ["Antonio", "French", "tweeted", "this", "vid", "days", "ago", ".", "Is", "this", "the", "same", "robbery", "and", "market", "?"]
# ::lemmas ["Antonio", "French", "tweet", "this", "vid", "days", "ago", ".", "be", "this", "the", "same", "robbery", "and", "market", "?"]
(c1-1 / multi-sentence
      :snt1 (c1-0 / tweet-02
                  :ARG0 (c1-5 / person
                              :name (c1-15 / name
                                           :op1 "Antonio"
                                           :op2 "French"))
                  :ARG1 (c1-7 / video
                              :mod (c1-2 / this))
                  :time (c1-16 / before
                               :op1 (c1-4 / now)
                               :quant (c1-12 / multiple
                                             :op1 (c1-3 / temporal-quantity
                                                        :unit (c1-6 / day)
                                                        :quant 1))))
      :snt2 (c1-13 / same-01
                   :ARG1 (c1-14 / this)
                   :ARG2 (c1-8 / and
                               :op1 (c1-9 / rob-01)
                               :op2 (c1-10 / market))
                   :polarity (c1-11 / amr-unknown)))

# ::snt WHEN? he became a suspect upon the firing of the fatal shot?
# ::tokens ["WHEN", "?", "he", "became", "a", "suspect", "upon", "the", "firing", "of", "the", "fatal", "shot", "?"]
# ::lemmas ["when", "?", "he", "become", "a", "suspect", "upon", "the", "firing", "of", "the", "fatal", "shot", "?"]
(c2-2 / multi-sentence
      :snt1 (c2-4 / cause-01
                  :ARG0 (c2-5 / amr-unknown))
      :snt2 (c2-8 / become-01
                  :ARG1 (c2-0 / he)
                  :ARG2 (c2-7 / suspect-01
                              :ARG0 c2-0)
                  :time (c2-3 / fire-01
                              :ARG1 (c2-1 / shoot-02
                                          :mod (c2-6 / fatal)))))

# ::snt exactly
# ::tokens ["exactly"]
# ::lemmas ["exactly"]
(c3-0 / exact)

# ::snt We will not rest until there is Justice here. Even if true, Mike Brown did not deserve execution.
# ::tokens ["We", "will", "not", "rest", "until", "there", "is", "Justice", "here", ".", "Even", "if", "true", ",", "Mike", "Brown", "did", "not", "deserve", "execution", "."]
# ::lemmas ["we", "will", "not", "rest", "until", "there", "be", "Justice", "here", ".", "even", "if", "true", ",", "Mike", "Brown", "do", "not", "deserve", "execution", "."]
(c4-4 / multi-sentence
      :snt1 (c4-10 / rest-01
                   :ARG0 (c4-0 / we)
                   :time (c4-9 / until
                               :op1 (c4-5 / justice
                                          :location (c4-1 / here)))
                   :polarity -)
      :snt2 (c4-6 / deserve-01
                  :ARG0 (c4-7 / person
                              :name (c4-11 / name
                                           :op1 "Mike"
                                           :op2 "Brown"))
                  :ARG1 (c4-2 / execute-01
                              :ARG1 c4-7)
                  :concession (c4-8 / even-if
                                    :op1 (c4-3 / true-01
                                               :ARG1 c4-6))
                  :polarity -))

# ::snt It's a little scary to know they shoot and kill people suspected of crimes in Ferguson.
# ::tokens ["It", "'s", "a", "little", "scary", "to", "know", "they", "shoot", "and", "kill", "people", "suspected", "of", "crimes", "in", "Ferguson", "."]
# ::lemmas ["it", "be", "a", "little", "scary", "to", "know", "they", "shoot", "and", "kill", "people", "suspect", "of", "crime", "in", "Ferguson", "."]
(c5-10 / scary-03
       :ARG0 (c5-0 / know-01
                   :ARG1 (c5-7 / and
                               :op1 (c5-3 / shoot-02
                                          :ARG0 (c5-4 / they)
                                          :ARG1 (c5-5 / person
                                                      :ARG2-of (c5-2 / suspect-01
                                                                     :ARG1 (c5-6 / crime-02))))
                               :op2 (c5-1 / kill-01
                                          :ARG0 c5-4
                                          :ARG1 c5-5)
                               :location (c5-9 / city
                                               :name (c5-11 / name
                                                            :op1 "Ferguson"))))
       :degree (c5-8 / little))

# ::snt : Police reports released this morning indicate Mike Brown was a suspect in a "strong-armed" robbery in
# ::tokens [":", "Police", "reports", "released", "this", "morning", "indicate", "Mike", "Brown", "was", "a", "suspect", "in", "a", "\"", "strong", "-", "armed", "\"", "robbery", "in"]
# ::lemmas [":", "police", "report", "release", "this", "morning", "indicate", "Mike", "Brown", "be", "a", "suspect", "in", "a", "\"", "strong", "-", "armed", "\"", "robbery", "in"]
(c6-8 / indicate-01
      :ARG0 (c6-10 / report-01
                   :ARG0 (c6-7 / police)
                   :ARG1-of (c6-0 / release-01
                                  :time (c6-6 / date-entity
                                              :dayperiod (c6-3 / morning)
                                              :mod (c6-2 / today))))
      :ARG1 (c6-11 / suspect-01
                   :ARG1 (c6-5 / person
                               :name (c6-12 / name
                                            :op1 "Mike"
                                            :op2 "Brown"))
                   :ARG2 (c6-4 / rob-01
                               :manner (c6-9 / arm-01
                                             :ARG1-of (c6-1 / strong-02)))))

# ::snt old saying "there's always two sides to a story"
# ::tokens ["old", "saying", "\"", "there", "'s", "always", "two", "sides", "to", "a", "story", "\""]
# ::lemmas ["old", "say", "\"", "there", "be", "always", "two", "side", "to", "a", "story", "\""]
(c7-5 / say-01
      :ARG0 (c7-2 / person
                  :mod (c7-4 / old))
      :ARG1 (c7-1 / side
                  :part-of (c7-0 / story)
                  :time (c7-3 / always)
                  :quant 2))

# ::snt how many times do innocent "Black men" fit the description tho?
# ::tokens ["how", "many", "times", "do", "innocent", "\"", "Black", "men", "\"", "fit", "the", "description", "tho", "?"]
# ::lemmas ["how", "many", "time", "do", "innocent", "\"", "black", "man", "\"", "fit", "the", "description", "tho", "?"]
(c8-0 / have-concession-91
      :ARG1 (c8-1 / fit-06
                  :ARG1 (c8-2 / man
                              :ARG1-of (c8-4 / innocent-01)
                              :ARG1-of (c8-6 / black-05))
                  :ARG2 (c8-3 / describe-01)
                  :frequency (c8-5 / amr-unknown)))

# ::snt times out !
# ::tokens ["times", "out", "!"]
# ::lemmas ["time", "out", "!"]
(c9-0 / time-out-03
      :mode expressive)

# ::snt that's problematic.
# ::tokens ["that", "'s", "problematic", "."]
# ::lemmas ["that", "be", "problematic", "."]
(c10-0 / problematic-00
       :ARG1 (c10-1 / that))

# ::snt and unfortunately we'll never hear the other side of the story because he's dead
# ::tokens ["and", "unfortunately", "we", "'ll", "never", "hear", "the", "other", "side", "of", "the", "story", "because", "he", "'s", "dead"]
# ::lemmas ["and", "unfortunately", "we", "'ll", "never", "hear", "the", "other", "side", "of", "the", "story", "because", "he", "be", "dead"]
(c11-7 / and
       :op2 (c11-1 / hear-01
                   :ARG0 (c11-0 / we)
                   :ARG1 (c11-9 / side
                                :mod (c11-8 / other)
                                :part-of (c11-2 / story))
                   :time (c11-10 / ever)
                   :ARG2-of (c11-3 / fortunate-01
                                   :polarity -)
                   :ARG1-of (c11-6 / cause-01
                                   :ARG0 (c11-5 / die-01
                                                :ARG1 (c11-4 / he)))
                   :polarity -))

# ::snt Exactly
# ::tokens ["Exactly"]
# ::lemmas ["exactly"]
(c12-0 / exact)

# ::snt so it was fine to just execute him in the street then
# ::tokens ["so", "it", "was", "fine", "to", "just", "execute", "him", "in", "the", "street", "then"]
# ::lemmas ["so", "it", "be", "fine", "to", "just", "execute", "he", "in", "the", "street", "then"]
(c13-2 / fine-04
       :ARG1 (c13-5 / execute-01
                    :ARG1 (c13-0 / he)
                    :location (c13-4 / street)
                    :mod (c13-3 / just))
       :mod (c13-1 / then))

# ::snt "strong-armed"? But not actually "armed." Soooo, the use of deadly force against him? How can it be justified?
# ::tokens ["\"", "strong", "-", "armed", "\"", "?", "But", "not", "actually", "\"", "armed", ".", "\"", "Soooo", ",", "the", "use", "of", "deadly", "force", "against", "him", "?", "How", "can", "it", "be", "justified", "?"]
# ::lemmas ["\"", "strong", "-", "armed", "\"", "?", "but", "not", "actually", "\"", "armed", ".", "\"", "Soooo", ",", "the", "use", "of", "deadly", "force", "against", "he", "?", "how", "can", "it", "be", "justify", "?"]
(c14-3 / multi-sentence
       :snt1 (c14-6 / contrast-01
                    :ARG1 (c14-10 / arm-01
                                  :ARG1-of (c14-14 / strong-02))
                    :ARG2 (c14-12 / arm-01
                                  :ARG1-of (c14-13 / actual-02)
                                  :polarity -))
       :snt2 (c14-7 / infer-01
                    :ARG1 (c14-9 / use-01
                                 :ARG1 (c14-4 / force-04
                                              :ARG0-of (c14-0 / kill-01))
                                 :ARG2 (c14-8 / against
                                              :op1 (c14-1 / he))))
       :snt3 (c14-11 / possible-01
                     :ARG1 (c14-5 / justify-01
                                  :ARG1 (c14-2 / it)
                                  :manner (c14-15 / amr-unknown))))

# ::snt that's bs. there's always a "history" when the African Americans gets killed.
# ::tokens ["that", "'s", "bs", ".", "there", "'s", "always", "a", "\"", "history", "\"", "when", "the", "African", "Americans", "gets", "killed", "."]
# ::lemmas ["that", "be", "bs", ".", "there", "be", "always", "a", "\"", "history", "\"", "when", "the", "African", "Americans", "gets", "kill", "."]
(c15-3 / multi-sentence
       :snt1 (c15-2 / that
                    :mod (c15-10 / bullshit))
       :snt2 (c15-1 / history
                    :time (c15-7 / always)
                    :time (c15-0 / kill-01
                                 :ARG1 (c15-5 / person
                                              :mod (c15-6 / continent
                                                          :name (c15-9 / name
                                                                       :op1 "Africa"))
                                              :mod (c15-8 / country
                                                          :name (c15-4 / name
                                                                       :op1 "America"))))))

# ::snt How were the police so quick to indicate Mike Brown if all of this took place in a matter of minutes?
# ::tokens ["How", "were", "the", "police", "so", "quick", "to", "indicate", "Mike", "Brown", "if", "all", "of", "this", "took", "place", "in", "a", "matter", "of", "minutes", "?"]
# ::lemmas ["how", "be", "the", "police", "so", "quick", "to", "indicate", "Mike", "Brown", "if", "all", "of", "this", "take", "place", "in", "a", "matter", "of", "minutes", "?"]
(c16-10 / quick-02
        :ARG1 (c16-5 / indicate-01
                     :ARG0 (c16-4 / police)
                     :ARG1 (c16-3 / person
                                  :name (c16-11 / name
                                                :op1 "Mike"
                                                :op2 "Brown")))
        :manner (c16-8 / amr-unknown)
        :condition (c16-0 / this
                          :mod (c16-9 / all)
                          :duration (c16-1 / matter
                                           :op1 (c16-2 / temporal-quantity
                                                       :unit (c16-6 / minute)
                                                       :quant 1)))
        :degree (c16-7 / so))

# ::snt Ironic since all the i witnesses say the officer was white. Now it is the black officer Darren Wilson who shot??
# ::tokens ["Ironic", "since", "all", "the", "i", "witnesses", "say", "the", "officer", "was", "white", ".", "Now", "it", "is", "the", "black", "officer", "Darren", "Wilson", "who", "shot", "?", "?"]
# ::lemmas ["ironic", "since", "all", "the", "i", "witness", "say", "the", "officer", "be", "white", ".", "now", "it", "be", "the", "black", "officer", "Darren", "Wilson", "who", "shoot", "?", "?"]
(c17-3 / multi-sentence
       :snt1 (c17-7 / irony
                    :ARG1-of (c17-8 / cause-01
                                    :ARG0 (c17-14 / say-01
                                                  :ARG0 (c17-6 / person
                                                               :ARG0-of (c17-0 / witness-01)
                                                               :mod (c17-10 / all))
                                                  :ARG1 (c17-13 / white-02
                                                                :ARG1 (c17-11 / officer)))))
       :snt2 (c17-1 / shoot-02
                    :ARG0 (c17-4 / person
                                 :name (c17-15 / name
                                               :op1 "Darren"
                                               :op2 "Wilson")
                                 :ARG0-of (c17-2 / have-org-role-91
                                                 :ARG2 (c17-5 / officer))
                                 :ARG1-of (c17-16 / black-05))
                    :time (c17-9 / now)
                    :polarity (c17-12 / amr-unknown)))

# ::snt So they're claiming a BLACK cop killed ? ?
# ::tokens ["So", "they", "'re", "claiming", "a", "BLACK", "cop", "killed", "?", "?"]
# ::lemmas ["so", "they", "be", "claim", "a", "black", "cop", "kill", "?", "?"]
(c18-2 / claim-01
       :polarity (c18-3 / amr-unknown)
       :ARG0 (c18-1 / they)
       :ARG1 (c18-0 / kill-01
                    :ARG1 (c18-4 / cop
                                 :ARG1-of (c18-5 / black-05))))

# ::snt that is MY ERROR. There is no report confirming Darren Wilson is black. I retract my tweet.
# ::tokens ["that", "is", "MY", "ERROR", ".", "There", "is", "no", "report", "confirming", "Darren", "Wilson", "is", "black", ".", "I", "retract", "my", "tweet", "."]
# ::lemmas ["that", "be", "MY", "ERROR", ".", "there", "be", "no", "report", "confirm", "Darren", "Wilson", "be", "black", ".", "i", "retract", "my", "tweet", "."]
(c19-3 / multi-sentence
       :snt1 (c19-10 / err-01
                     :ARG0 (c19-5 / i)
                     :ARG1 (c19-2 / that))
       :snt2 (c19-8 / report-01
                    :ARG0-of (c19-6 / confirm-01
                                    :ARG1 (c19-11 / black-05
                                                  :ARG1 (c19-7 / person
                                                               :name (c19-9 / name
                                                                            :op1 "Darren"
                                                                            :op2 "Wilson"))))
                    :polarity -)
       :snt3 (c19-0 / retract-01
                    :ARG0 (c19-1 / i)
                    :ARG1 (c19-4 / tweet-01
                                 :ARG0 c19-1)))

# ::snt I haven't seen anyone say he was black. It is a somewhat common name.
# ::tokens ["I", "have", "n't", "seen", "anyone", "say", "he", "was", "black", ".", "It", "is", "a", "somewhat", "common", "name", "."]
# ::lemmas ["i", "have", "not", "see", "anyone", "say", "he", "be", "black", ".", "it", "be", "a", "somewhat", "common", "name", "."]
(c20-4 / multi-sentence
       :snt1 (c20-8 / see-01
                    :ARG0 (c20-5 / i)
                    :ARG1 (c20-1 / say-01
                                 :ARG0 (c20-7 / anyone)
                                 :ARG1 (c20-10 / black-05
                                               :ARG1 (c20-2 / he)))
                    :polarity -)
       :snt2 (c20-9 / name-01
                    :ARG1 (c20-3 / it)
                    :mod (c20-6 / common
                                :degree (c20-0 / somewhat))))

# ::snt I retract my previous tweet. Darren Wilson's race is NOT CONFIRMED. I apologize.
# ::tokens ["I", "retract", "my", "previous", "tweet", ".", "Darren", "Wilson", "'s", "race", "is", "NOT", "CONFIRMED", ".", "I", "apologize", "."]
# ::lemmas ["i", "retract", "my", "previous", "tweet", ".", "Darren", "Wilson", "'s", "race", "be", "not", "confirmed", ".", "i", "apologize", "."]
(c21-3 / multi-sentence
       :snt1 (c21-9 / retract-01
                    :ARG0 (c21-7 / i)
                    :ARG1 (c21-2 / tweet-01
                                 :ARG0 c21-7
                                 :time (c21-6 / previous)))
       :snt2 (c21-0 / report-01
                    :ARG1 (c21-4 / race-02
                                 :ARG0 (c21-5 / person
                                              :name (c21-10 / name
                                                            :op1 "Darren"
                                                            :op2 "Wilson")))
                    :polarity -)
       :snt3 (c21-8 / apologize-01
                    :ARG0 (c21-1 / i)))

# ::snt wait a min, I thought they said he was a good boy?
# ::tokens ["wait", "a", "min", ",", "I", "thought", "they", "said", "he", "was", "a", "good", "boy", "?"]
# ::lemmas ["wait", "a", "min", ",", "i", "think", "they", "say", "he", "be", "a", "good", "boy", "?"]
(c22-8 / and
       :op1 (c22-1 / wait-01
                   :ARG1 (c22-0 / you)
                   :duration (c22-3 / temporal-quantity
                                    :unit (c22-4 / minute)
                                    :quant 1)
                   :mode imperative)
       :op2 (c22-5 / think-01
                   :ARG0 (c22-7 / i)
                   :ARG1 (c22-11 / say-01
                                 :ARG0 (c22-6 / they)
                                 :ARG1 (c22-12 / boy
                                               :ARG1-of (c22-9 / good-02)
                                               :domain (c22-2 / he)))
                   :polarity (c22-10 / amr-unknown)))

# ::snt : Police reports released this morning indicate Mike Brown was a suspect in a "strong-armed" robbery in kill him?
# ::tokens [":", "Police", "reports", "released", "this", "morning", "indicate", "Mike", "Brown", "was", "a", "suspect", "in", "a", "\"", "strong", "-", "armed", "\"", "robbery", "in", "kill", "him", "?"]
# ::lemmas [":", "police", "report", "release", "this", "morning", "indicate", "Mike", "Brown", "be", "a", "suspect", "in", "a", "\"", "strong", "-", "armed", "\"", "robbery", "in", "kill", "he", "?"]
(c23-9 / indicate-01
       :ARG0 (c23-11 / report-01
                     :ARG0 (c23-8 / police)
                     :ARG1-of (c23-1 / release-01
                                     :time (c23-7 / date-entity
                                                  :dayperiod (c23-4 / morning)
                                                  :mod (c23-3 / today))))
       :ARG1 (c23-13 / suspect-01
                     :ARG1 (c23-6 / person
                                  :name (c23-14 / name
                                                :op1 "Mike"
                                                :op2 "Brown"))
                     :ARG2 (c23-5 / rob-01
                                  :ARG0 c23-6
                                  :instrument (c23-10 / arm
                                                      :ARG1-of (c23-2 / strong-02)))
                     :purpose (c23-0 / kill-01
                                     :ARG0 c23-6
                                     :ARG1 c23-6))
       :polarity (c23-12 / amr-unknown))

# ::snt all there is a still picture of a black man walking is that what counts as evidence were they on his person?
# ::tokens ["all", "there", "is", "a", "still", "picture", "of", "a", "black", "man", "walking", "is", "that", "what", "counts", "as", "evidence", "were", "they", "on", "his", "person", "?"]
# ::lemmas ["all", "there", "be", "a", "still", "picture", "of", "a", "black", "man", "walk", "be", "that", "what", "count", "as", "evidence", "be", "they", "on", "his", "person", "?"]
(c24-5 / and
       :op1 (c24-3 / picture-01
                   :ARG1 (c24-1 / man
                                :ARG1-of (c24-10 / black-05)
                                :ARG0-of (c24-0 / walk-01))
                   :mod (c24-8 / still))
       :op2 (c24-4 / count-04
                   :ARG1 (c24-6 / amr-unknown
                                :location (c24-2 / person
                                                 :poss c24-1))
                   :ARG2 (c24-9 / evidence-01))
       :mod (c24-7 / all))

# ::snt : Police reports released this morning indicate Mike Brown was a suspect in a "strong-armed" robbery in
# ::tokens [":", "Police", "reports", "released", "this", "morning", "indicate", "Mike", "Brown", "was", "a", "suspect", "in", "a", "\"", "strong", "-", "armed", "\"", "robbery", "in"]
# ::lemmas [":", "police", "report", "release", "this", "morning", "indicate", "Mike", "Brown", "be", "a", "suspect", "in", "a", "\"", "strong", "-", "armed", "\"", "robbery", "in"]
(c25-8 / indicate-01
       :ARG0 (c25-10 / report-01
                     :ARG0 (c25-7 / police)
                     :ARG1-of (c25-0 / release-01
                                     :time (c25-6 / date-entity
                                                  :dayperiod (c25-3 / morning)
                                                  :mod (c25-2 / today))))
       :ARG1 (c25-11 / suspect-01
                     :ARG1 (c25-5 / person
                                  :name (c25-12 / name
                                                :op1 "Mike"
                                                :op2 "Brown"))
                     :ARG2 (c25-4 / rob-01
                                  :manner (c25-9 / arm-01
                                                 :ARG1-of (c25-1 / strong-02)))))

# ::snt Indicate? If he was a suspect why did the police stop his car next to him and tell him to "get the f on the sidewalk" ?
# ::tokens ["Indicate", "?", "If", "he", "was", "a", "suspect", "why", "did", "the", "police", "stop", "his", "car", "next", "to", "him", "and", "tell", "him", "to", "\"", "get", "the", "f", "on", "the", "sidewalk", "\"", "?"]
# ::lemmas ["Indicate", "?", "if", "he", "be", "a", "suspect", "why", "do", "the", "police", "stop", "his", "car", "next", "to", "he", "and", "tell", "he", "to", "\"", "get", "the", "f", "on", "the", "sidewalk", "\"", "?"]
(c26-4 / multi-sentence
       :snt1 (c26-8 / accuse-01
                    :ARG1 (c26-1 / he))
       :snt2 (c26-5 / have-condition-91
                    :ARG1 (c26-11 / and
                                  :op1 (c26-13 / stop-01
                                               :ARG0 (c26-6 / police)
                                               :ARG1 (c26-7 / car
                                                            :poss (c26-14 / he))
                                               :location (c26-15 / next-to
                                                                 :op1 c26-14))
                                  :op2 (c26-3 / tell-01
                                              :ARG0 c26-6
                                              :ARG1 (c26-9 / get-05
                                                           :ARG1 c26-14
                                                           :ARG2 (c26-2 / sidewalk))
                                              :ARG2 c26-14)
                                  :ARG1-of (c26-10 / cause-01
                                                   :ARG0 (c26-12 / amr-unknown)))
                    :ARG2 (c26-0 / suspect-01
                                 :ARG1 c26-14)))

# ::snt . GOOD POINT. cc
# ::tokens [".", "GOOD", "POINT", ".", "cc"]
# ::lemmas [".", "GOOD", "POINT", ".", "cc"]
(c27-1 / point-04
       :ARG1-of (c27-0 / good-02))

# ::snt All "strong-armed" means is physical force was used; term is being used deliberately so people get confused.
# ::tokens ["All", "\"", "strong", "-", "armed", "\"", "means", "is", "physical", "force", "was", "used", ";", "term", "is", "being", "used", "deliberately", "so", "people", "get", "confused", "."]
# ::lemmas ["all", "\"", "strong", "-", "armed", "\"", "mean", "be", "physical", "force", "be", "use", ";", "term", "be", "be", "use", "deliberately", "so", "people", "get", "confused", "."]
(c28-2 / multi-sentence
       :snt1 (c28-6 / use-01
                    :ARG1 (c28-10 / mean-01
                                  :ARG2 (c28-7 / arm-01
                                               :ARG1-of (c28-11 / strong-02))
                                  :mod (c28-8 / all)))
       :snt2 (c28-0 / use-01
                    :ARG1 (c28-1 / term)
                    :manner (c28-3 / deliberate)
                    :ARG0-of (c28-4 / cause-01
                                    :ARG1 (c28-9 / confuse-01
                                                 :ARG1 (c28-5 / person)))))

# ::snt oh yes. Clear that something occurred, death still not necessarily the right result.
# ::tokens ["oh", "yes", ".", "Clear", "that", "something", "occurred", ",", "death", "still", "not", "necessarily", "the", "right", "result", "."]
# ::lemmas ["oh", "yes", ".", "clear", "that", "something", "occur", ",", "death", "still", "not", "necessarily", "the", "right", "result", "."]
(c29-1 / multi-sentence
       :snt1 (c29-2 / oh
                    :mode expressive)
       :snt2 (c29-4 / cause-01
                    :ARG0 (c29-6 / clear-06
                                 :ARG1 (c29-7 / something))
                    :ARG1 (c29-5 / result-01
                                 :ARG2 (c29-3 / die-01)
                                 :ARG1-of (c29-8 / need-01
                                                 :polarity -)
                                 :mod (c29-0 / still))))

# ::snt "Strong armed" is being used to obfuscate; sounds like the perp was armed, which he wasn't, &amp; the crime was SHOPLIFTING.
# ::tokens ["\"", "Strong", "armed", "\"", "is", "being", "used", "to", "obfuscate", ";", "sounds", "like", "the", "perp", "was", "armed", ",", "which", "he", "was", "n't", ",", "&", "amp", ";", "the", "crime", "was", "SHOPLIFTING", "."]
# ::lemmas ["\"", "strong", "armed", "\"", "be", "be", "use", "to", "obfuscate", ";", "sound", "like", "the", "perp", "be", "arm", ",", "which", "he", "be", "not", ",", "&", "amp", ";", "the", "crime", "be", "shoplift", "."]
(c30-2 / multi-sentence
       :snt1 (c30-6 / use-01
                    :ARG1 (c30-7 / arm-01
                                 :ARG1-of (c30-11 / strong-02))
                    :ARG2 (c30-8 / obfuscate-01)
                    :ARG1-of (c30-1 / sound-01
                                    :ARG2 (c30-9 / arm-01
                                                 :ARG1 (c30-4 / perp
                                                              :ARG1-of (c30-5 / contrast-01
                                                                              :ARG2 (c30-10 / arm-01
                                                                                            :ARG1 c30-4
                                                                                            :polarity -))))))
       :snt2 (c30-0 / slut-00
                    :domain (c30-3 / crime-02)))

# ::snt Fuck that. Where is the report? Why was he unarmed? No. We demand justice.
# ::tokens ["Fuck", "that", ".", "Where", "is", "the", "report", "?", "Why", "was", "he", "unarmed", "?", "No", ".", "We", "demand", "justice", "."]
# ::lemmas ["fuck", "that", ".", "where", "be", "the", "report", "?", "why", "be", "he", "unarmed", "?", "no", ".", "we", "demand", "justice", "."]
(c31-3 / multi-sentence
       :snt1 (c31-4 / fuck-01
                    :ARG1 (c31-2 / that)
                    :mode expressive)
       :snt2 (c31-12 / be-located-at-91
                     :ARG1 (c31-9 / report-01)
                     :ARG2 (c31-8 / amr-unknown))
       :snt3 (c31-7 / cause-01
                    :ARG0 c31-8)
       :ARG1 (c31-10 / arm-01
                     :ARG1 (c31-1 / he)
                     :polarity -)
       :snt4 (c31-11 / no)
       :snt5 (c31-6 / demand-01
                    :ARG0 (c31-0 / we)
                    :ARG1 (c31-5 / justice)))

# ::snt A pack of cigarettes = strong armed robbery.... You guys are getting ready to stir the pot again.
# ::tokens ["A", "pack", "of", "cigarettes", "=", "strong", "armed", "robbery", "....", "You", "guys", "are", "getting", "ready", "to", "stir", "the", "pot", "again", "."]
# ::lemmas ["a", "pack", "of", "cigarette", "=", "strong", "armed", "robbery", "....", "you", "guy", "be", "get", "ready", "to", "stir", "the", "pot", "again", "."]
(c32-3 / multi-sentence
       :snt1 (c32-12 / equal-01
                     :ARG1 (c32-5 / pack
                                  :consist-of (c32-6 / cigarette))
                     :ARG2 (c32-9 / rob-01
                                  :ARG1-of (c32-7 / arm-01
                                                  :ARG1-of (c32-11 / strong-02))))
       :snt2 (c32-1 / ready-02
                    :ARG1 (c32-0 / you
                                 :mod (c32-8 / guy))
                    :ARG2 (c32-2 / stir-01
                                 :ARG0 c32-0
                                 :ARG1 (c32-4 / pot)
                                 :mod (c32-10 / again))))

# ::snt This would be more believable if they'd said it a week ago. No one believes it now. NO ONE.
# ::tokens ["This", "would", "be", "more", "believable", "if", "they", "'d", "said", "it", "a", "week", "ago", ".", "No", "one", "believes", "it", "now", ".", "NO", "ONE", "."]
# ::lemmas ["this", "would", "be", "more", "believable", "if", "they", "have", "say", "it", "a", "week", "ago", ".", "no", "one", "believe", "it", "now", ".", "no", "one", "."]
(c33-3 / multi-sentence
       :snt1 (c33-1 / have-condition-91
                    :ARG1 (c33-8 / possible-01
                                 :ARG1 (c33-15 / believe-01
                                               :ARG1 (c33-2 / this)))
                    :ARG2 (c33-13 / say-01
                                  :ARG0 (c33-4 / they)
                                  :ARG1 c33-2
                                  :time (c33-11 / before
                                                :op1 (c33-14 / now)
                                                :quant (c33-5 / temporal-quantity
                                                              :unit (c33-0 / week)
                                                              :quant 1))))
       :snt2 (c33-6 / believe-01
                    :ARG0 (c33-7 / no-one)
                    :ARG1 (c33-9 / it)
                    :time (c33-12 / now))
       :snt3 (c33-10 / no-one))

# ::snt attacks victim, leaves perp unexamined
# ::tokens ["attacks", "victim", ",", "leaves", "perp", "unexamined"]
# ::lemmas ["attack", "victim", ",", "leave", "perp", "unexamine"]
(c34-3 / and
       :op1 (c34-5 / attack-01
                   :ARG1 (c34-0 / person
                                :ARG1-of (c34-2 / victimize-01)))
       :op2 (c34-4 / leave-13
                   :ARG1 (c34-1 / investigate-01
                                :ARG1 c34-0
                                :polarity -)))

# ::snt Wait... : Police reports released this morning indicate Mike Brown was a suspect in a "strong-armed" robbery in
# ::tokens ["Wait", "...", ":", "Police", "reports", "released", "this", "morning", "indicate", "Mike", "Brown", "was", "a", "suspect", "in", "a", "\"", "strong", "-", "armed", "\"", "robbery", "in"]
# ::lemmas ["wait", "...", ":", "police", "report", "release", "this", "morning", "indicate", "Mike", "Brown", "be", "a", "suspect", "in", "a", "\"", "strong", "-", "armed", "\"", "robbery", "in"]
(c35-5 / multi-sentence
       :snt1 (c35-2 / wait-01
                    :ARG1 (c35-0 / you)
                    :mode imperative)
       :snt2 (c35-9 / indicate-01
                    :ARG0 (c35-12 / report-01
                                  :ARG0 (c35-10 / police)
                                  :ARG1-of (c35-1 / release-01
                                                  :time (c35-8 / date-entity
                                                               :dayperiod (c35-13 / morning)
                                                               :mod (c35-4 / today))))
                    :ARG1 (c35-14 / suspect-01
                                  :ARG1 (c35-7 / person
                                               :name (c35-15 / name
                                                             :op1 "Mike"
                                                             :op2 "Brown"))
                                  :ARG2 (c35-6 / rob-01
                                               :ARG0 c35-7
                                               :instrument (c35-11 / arm
                                                                   :ARG1-of (c35-3 / strong-02))))))

# ::snt Even IF he did IF; he was still UNARMED &amp; shot MULTIPLE times. Does it JUSTIFY his killing NO!.
# ::tokens ["Even", "IF", "he", "did", "IF", ";", "he", "was", "still", "UNARMED", "&", "amp", ";", "shot", "MULTIPLE", "times", ".", "Does", "it", "JUSTIFY", "his", "killing", "NO", "!", "."]
# ::lemmas ["even", "if", "he", "do", "if", ";", "he", "be", "still", "UNARMED", "&", "amp", ";", "shoot", "MULTIPLE", "time", ".", "do", "it", "justify", "his", "kill", "no", "!", "."]
(c36-4 / multi-sentence
       :snt1 (c36-1 / have-concession-91
                    :ARG1 (c36-11 / and
                                  :op1 (c36-13 / arm-01
                                               :ARG1 (c36-7 / he)
                                               :mod (c36-14 / still)
                                               :polarity -)
                                  :op2 (c36-2 / shoot-02
                                              :frequency (c36-3 / times
                                                                :quant (c36-5 / few))))
                    :ARG2 (c36-16 / even-if
                                  :op1 (c36-9 / do-02
                                              :ARG0 (c36-15 / he)
                                              :snt2-of c36-4)))
       :ARG0 (c36-12 / he)
       :ARG1 (c36-10 / it)
       :snt3 (c36-0 / kill-01
                    :ARG0 (c36-6 / he)
                    :mod (c36-8 / just)
                    :polarity -))

# ::snt Fit description would be more accurate.
# ::tokens ["Fit", "description", "would", "be", "more", "accurate", "."]
# ::lemmas ["fit", "description", "would", "be", "more", "accurate", "."]
(c37-4 / accurate
       :ARG2-of (c37-0 / have-degree-91
                       :ARG1 (c37-3 / describe-01
                                    :ARG1 (c37-1 / fit-05))
                       :ARG3 (c37-2 / more)))

# ::snt : Police reports indicate Mike Brown was a suspect in a "strong-armed" robbery in Oh, please, of course it did
# ::tokens [":", "Police", "reports", "indicate", "Mike", "Brown", "was", "a", "suspect", "in", "a", "\"", "strong", "-", "armed", "\"", "robbery", "in", "Oh", ",", "please", ",", "of", "course", "it", "did"]
# ::lemmas [":", "police", "report", "indicate", "Mike", "Brown", "be", "a", "suspect", "in", "a", "\"", "strong", "-", "armed", "\"", "robbery", "in", "Oh", ",", "please", ",", "of", "course", "it", "do"]
(c38-6 / indicate-01
       :ARG0 (c38-8 / report-01
                    :ARG0 (c38-5 / police))
       :ARG1 (c38-10 / suspect-01
                     :ARG1 (c38-3 / person
                                  :name (c38-11 / name
                                                :op1 "Mike"
                                                :op2 "Brown"))
                     :ARG2 (c38-0 / rob-01
                                  :ARG0 c38-3
                                  :instrument (c38-7 / arm
                                                     :ARG1-of (c38-1 / strong-02))
                                  :location (c38-2 / event
                                                   :name (c38-4 / name
                                                                :op1 "Oh"))))
       :mod (c38-9 / of-course))
