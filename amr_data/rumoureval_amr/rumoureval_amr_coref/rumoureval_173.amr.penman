# ::snt hikes prices during the . How is that helping? Giving away free rides would help.
# ::tokens ["hikes", "prices", "during", "the", ".", "How", "is", "that", "helping", "?", "Giving", "away", "free", "rides", "would", "help", "."]
# ::lemmas ["hike", "price", "during", "the", ".", "how", "be", "that", "help", "?", "give", "away", "free", "ride", "would", "help", "."]
(c1-1 / multi-sentence
      :snt1 (c1-3 / dislike-01
                  :ARG1 (c1-4 / price-01)
                  :time (c1-8 / event))
      :snt2 (c1-0 / help-01
                  :ARG0 (c1-5 / give-away-02
                              :ARG1 (c1-7 / ride-01
                                          :ARG1-of (c1-2 / free-03)))
                  :manner (c1-6 / amr-unknown)))

# ::snt you're aware that this tweet ...is giving away free rides, right?
# ::tokens ["you", "'re", "aware", "that", "this", "tweet", "...", "is", "giving", "away", "free", "rides", ",", "right", "?"]
# ::lemmas ["you", "be", "aware", "that", "this", "tweet", "...", "be", "give", "away", "free", "ride", ",", "right", "?"]
(c2-7 / realize-01
      :ARG0 (c2-0 / you)
      :ARG1 (c2-6 / give-away-02
                  :ARG0 (c2-3 / tweet-01
                              :mod (c2-2 / this))
                  :ARG1 (c2-1 / ride-01
                              :ARG1-of (c2-4 / free-03)))
      :ARG1-of (c2-5 / request-confirmation-91
                     :ARG2 c2-0))

# ::snt Uber trips out of the CBD today are free to help Sydneysiders get home safely. See
# ::tokens ["Uber", "trips", "out", "of", "the", "CBD", "today", "are", "free", "to", "help", "Sydneysiders", "get", "home", "safely", ".", "See"]
# ::lemmas ["uber", "trip", "out", "of", "the", "CBD", "today", "be", "free", "to", "help", "sydneysider", "get", "home", "safely", ".", "see"]
(c3-3 / multi-sentence
      :snt1 (c3-4 / free-03
                  :ARG1 (c3-2 / trip-03
                              :ARG0 (c3-8 / company
                                          :name (c3-15 / name
                                                       :op1 "Uber"))
                              :time (c3-5 / today)
                              :direction (c3-13 / out-of
                                                :op1 (c3-14 / city-district
                                                            :name (c3-7 / name
                                                                        :op1 "CBD"))))
                  :purpose (c3-0 / help-01
                                 :ARG0 c3-2
                                 :ARG1 (c3-11 / get-05
                                              :ARG1 (c3-9 / person
                                                          :mod c3-14
                                                          :name (c3-12 / name
                                                                       :op1 "Sydney")))
                                 :ARG2 (c3-6 / home)
                                 :ARG1-of (c3-10 / safe-01))
                  :ARG2 c3-9)
      :snt2 (c3-1 / see-01))

# ::snt : Uber trips out of the CBD today are free to help Sydneysiders get home safely. See
# ::tokens [":", "Uber", "trips", "out", "of", "the", "CBD", "today", "are", "free", "to", "help", "Sydneysiders", "get", "home", "safely", ".", "See"]
# ::lemmas [":", "uber", "trip", "out", "of", "the", "CBD", "today", "be", "free", "to", "help", "sydneysider", "get", "home", "safely", ".", "see"]
(c4-18 / multi-sentence
       :snt1 (c4-13 / free-03
                    :ARG1 (c4-6 / trip-03
                                :ARG0 (c4-2 / Uber)
                                :time (c4-17 / today)
                                :direction (c4-16 / out-of
                                                  :op1 (c4-8 / city-district
                                                             :name (c4-11 / name
                                                                          :op1 "CBD"))))
                    :purpose (c4-0 / help-01
                                   :ARG0 c4-6
                                   :ARG1 (c4-15 / get-05
                                                :ARG1 (c4-14 / person
                                                             :ARG0-of (c4-7 / have-org-role-91
                                                                            :ARG1 (c4-4 / city
                                                                                        :name (c4-1 / name
                                                                                                    :op1 "Sydney"))
                                                                            :ARG2 (c4-3 / ride-01)))
                                                :ARG2 (c4-10 / home)
                                                :ARG1-of (c4-9 / safe-01))
                                   :ARG2 c4-14))
       :snt2 (c4-12 / see-01
                    :ARG0 (c4-5 / you)
                    :mode imperative))

# ::snt thank you for fixing this situation.
# ::tokens ["thank", "you", "for", "fixing", "this", "situation", "."]
# ::lemmas ["thank", "you", "for", "fix", "this", "situation", "."]
(c5-3 / thank-01
      :ARG1 (c5-0 / you)
      :ARG2 (c5-2 / fix-02
                  :ARG0 c5-0
                  :ARG1 (c5-4 / situation
                              :mod (c5-1 / this))))

# ::snt It is an illegal bloody service. Why don't you thank regular taxi drivers?Encouraging theft are we?
# ::tokens ["It", "is", "an", "illegal", "bloody", "service", ".", "Why", "do", "n't", "you", "thank", "regular", "taxi", "drivers?Encouraging", "theft", "are", "we", "?"]
# ::lemmas ["it", "be", "an", "illegal", "bloody", "service", ".", "why", "do", "not", "you", "thank", "regular", "taxi", "drivers?encouraging", "theft", "be", "we", "?"]
(c6-5 / multi-sentence
      :snt1 (c6-14 / service
                   :mod (c6-16 / bloody)
                   :ARG1-of (c6-11 / legal-02
                                   :polarity -)
                   :domain (c6-8 / it))
      :snt2 (c6-9 / cause-01
                  :ARG0 (c6-12 / amr-unknown)
                  :ARG1 (c6-4 / thank-01
                              :ARG0 (c6-0 / you)
                              :ARG1 (c6-10 / person
                                           :ARG0-of (c6-7 / drive-01
                                                          :ARG1 (c6-6 / taxi))
                                           :ARG1-of (c6-13 / regular-03))
                              :polarity -))
      :snt3 (c6-15 / encourage-01
                   :ARG0 (c6-2 / we)
                   :ARG2 (c6-3 / steal-01)
                   :ARG1-of (c6-1 / request-confirmation-91)))

# ::snt that's like the most confusing statement ever. The social media department of Uber Sydney is high or something?
# ::tokens ["that", "'s", "like", "the", "most", "confusing", "statement", "ever", ".", "The", "social", "media", "department", "of", "Uber", "Sydney", "is", "high", "or", "something", "?"]
# ::lemmas ["that", "be", "like", "the", "most", "confusing", "statement", "ever", ".", "the", "social", "medium", "department", "of", "Uber", "Sydney", "be", "high", "or", "something", "?"]
(c7-4 / multi-sentence
      :snt1 (c7-11 / resemble-01
                   :ARG1 (c7-3 / that)
                   :ARG2 (c7-1 / have-degree-91
                               :ARG1 (c7-15 / state-01)
                               :ARG2 (c7-8 / confuse-01
                                           :ARG0 c7-15)
                               :ARG3 (c7-14 / most)
                               :ARG5 (c7-17 / ever)))
      :snt2 (c7-13 / or
                   :op1 (c7-5 / high-02
                              :ARG1 (c7-7 / department
                                          :mod (c7-12 / media
                                                      :mod (c7-2 / social))
                                          :poss (c7-6 / company
                                                      :name (c7-16 / name
                                                                   :op1 "Uber")
                                                      :location (c7-9 / city
                                                                      :name c7-16
                                                                      :op1 "Sydney")))))
      :op2 (c7-0 / something)
      :polarity (c7-10 / amr-unknown))

# ::snt I'm baffled by how few of its customers actually know how Uber works.
# ::tokens ["I", "'m", "baffled", "by", "how", "few", "of", "its", "customers", "actually", "know", "how", "Uber", "works", "."]
# ::lemmas ["i", "be", "baffle", "by", "how", "few", "of", "its", "customer", "actually", "know", "how", "Uber", "work", "."]
(c8-12 / baffle-01
       :ARG0 (c8-0 / know-01
                   :ARG0 (c8-5 / customer
                               :quant (c8-4 / few
                                            :degree (c8-10 / so))
                               :ARG1-of (c8-6 / include-91
                                              :ARG2 (c8-9 / customer
                                                          :poss (c8-7 / company
                                                                      :name (c8-11 / name
                                                                                   :op1 " Uber")))))
                   :ARG1 (c8-3 / thing
                               :manner-of (c8-1 / work-09
                                                :ARG1 c8-7))
                   :ARG1-of (c8-8 / actual-02))
       :ARG1 (c8-2 / i))

# ::snt Uber trips out of the CBD today are free to help Sydneysiders get home safely. See
# ::tokens ["Uber", "trips", "out", "of", "the", "CBD", "today", "are", "free", "to", "help", "Sydneysiders", "get", "home", "safely", ".", "See"]
# ::lemmas ["uber", "trip", "out", "of", "the", "CBD", "today", "be", "free", "to", "help", "sydneysider", "get", "home", "safely", ".", "see"]
(c9-3 / multi-sentence
      :snt1 (c9-4 / free-03
                  :ARG1 (c9-2 / trip-03
                              :ARG0 (c9-8 / company
                                          :name (c9-15 / name
                                                       :op1 "Uber"))
                              :time (c9-5 / today)
                              :direction (c9-13 / out-of
                                                :op1 (c9-14 / city-district
                                                            :name (c9-7 / name
                                                                        :op1 "CBD"))))
                  :purpose (c9-0 / help-01
                                 :ARG0 c9-2
                                 :ARG1 (c9-11 / get-05
                                              :ARG1 (c9-9 / person
                                                          :mod c9-14
                                                          :name (c9-12 / name
                                                                       :op1 "Sydney")))
                                 :ARG2 (c9-6 / home)
                                 :ARG1-of (c9-10 / safe-01))
                  :ARG2 c9-9)
      :snt2 (c9-1 / see-01))

# ::snt Trying to get in contact, anyone at the phones?
# ::tokens ["Trying", "to", "get", "in", "contact", ",", "anyone", "at", "the", "phones", "?"]
# ::lemmas ["try", "to", "get", "in", "contact", ",", "anyone", "at", "the", "phone", "?"]
(c10-0 / try-01
       :ARG0 (c10-2 / i)
       :ARG1 (c10-1 / contact-01
                    :ARG0 c10-2
                    :ARG1 (c10-4 / anyone
                                 :polarity (c10-5 / amr-unknown)
                                 :instrument (c10-3 / phone))))

# ::snt . No, you refused to pay for them to be at the phones. Enjoy your walk.
# ::tokens [".", "No", ",", "you", "refused", "to", "pay", "for", "them", "to", "be", "at", "the", "phones", ".", "Enjoy", "your", "walk", "."]
# ::lemmas [".", "no", ",", "you", "refuse", "to", "pay", "for", "they", "to", "be", "at", "the", "phone", ".", "enjoy", "your", "walk", "."]
(c11-4 / multi-sentence
       :snt1 (c11-7 / refuse-01
                    :ARG0 (c11-0 / you)
                    :ARG1 (c11-6 / pay-01
                                 :ARG0 c11-0
                                 :ARG3 (c11-10 / be-located-at-91
                                               :ARG1 (c11-3 / they)
                                               :ARG2 (c11-5 / phone)))
                    :mod (c11-9 / no))
       :snt2 (c11-2 / enjoy-01
                    :ARG0 (c11-8 / you)
                    :ARG1 (c11-1 / walk-01
                                 :ARG0 c11-8)))

# ::snt Uber is covering the cost of all rides, Uber is still paying drivers higher fares to encourage them to pickup rides
# ::tokens ["Uber", "is", "covering", "the", "cost", "of", "all", "rides", ",", "Uber", "is", "still", "paying", "drivers", "higher", "fares", "to", "encourage", "them", "to", "pickup", "rides"]
# ::lemmas ["Uber", "be", "cover", "the", "cost", "of", "all", "ride", ",", "Uber", "be", "still", "pay", "driver", "high", "fare", "to", "encourage", "they", "to", "pickup", "ride"]
(c12-13 / and
        :op1 (c12-9 / cover-01
                    :ARG0 (c12-16 / company
                                  :name (c12-17 / name
                                                :op1 "Uber"))
                    :ARG1 (c12-10 / cost-01
                                  :ARG1 (c12-14 / ride-01
                                                :mod (c12-15 / all))))
        :op2 (c12-11 / pay-01
                     :ARG0 c12-16
                     :ARG1 (c12-4 / fare
                                  :ARG1-of (c12-2 / have-degree-91
                                                  :ARG2 (c12-6 / high-02)
                                                  :ARG3 (c12-5 / more)))
                     :ARG2 (c12-7 / person
                                  :ARG0-of (c12-8 / drive-01))
                     :mod (c12-12 / still)
                     :purpose (c12-3 / encourage-01
                                     :ARG0 c12-16
                                     :ARG1 c12-7
                                     :ARG2 (c12-0 / ride-01
                                                  :ARG0 c12-7
                                                  :purpose (c12-1 / pickup-00
                                                                  :ARG0 c12-7)))))

# ::snt Yes, that's excellent. What is the wait time for a ride out of the Sydney CBD right now? Are rides available right now?
# ::tokens ["Yes", ",", "that", "'s", "excellent", ".", "What", "is", "the", "wait", "time", "for", "a", "ride", "out", "of", "the", "Sydney", "CBD", "right", "now", "?", "Are", "rides", "available", "right", "now", "?"]
# ::lemmas ["yes", ",", "that", "be", "excellent", ".", "what", "be", "the", "wait", "time", "for", "a", "ride", "out", "of", "the", "Sydney", "CBD", "right", "now", "?", "be", "ride", "available", "right", "now", "?"]
(c13-4 / multi-sentence
       :snt1 (c13-16 / excellent-02
                     :ARG1 (c13-3 / that)
                     :mod (c13-0 / yes))
       :snt2 (c13-2 / wait-01
                    :ARG2 (c13-11 / ride-01
                                  :ARG1 (c13-12 / out-06
                                                :ARG2 (c13-7 / city-district
                                                             :name (c13-15 / name
                                                                           :op1 "CBD")
                                                             :part-of (c13-14 / city
                                                                              :name (c13-6 / name
                                                                                           :op1 "Sydney")))))
                    :time (c13-9 / now
                                 :mod (c13-1 / right))
                    :ARG3 (c13-10 / amr-unknown))
       :snt3 (c13-13 / available-02
                     :ARG2 (c13-5 / ride-01)
                     :time (c13-8 / now
                                  :mod c13-1)))

# ::snt Uber trips out of the CBD today are free to help Sydneysiders get home safely. See
# ::tokens ["Uber", "trips", "out", "of", "the", "CBD", "today", "are", "free", "to", "help", "Sydneysiders", "get", "home", "safely", ".", "See"]
# ::lemmas ["uber", "trip", "out", "of", "the", "CBD", "today", "be", "free", "to", "help", "sydneysider", "get", "home", "safely", ".", "see"]
(c14-3 / multi-sentence
       :snt1 (c14-4 / free-03
                    :ARG1 (c14-2 / trip-03
                                 :ARG0 (c14-8 / company
                                              :name (c14-15 / name
                                                            :op1 "Uber"))
                                 :time (c14-5 / today)
                                 :direction (c14-13 / out-of
                                                    :op1 (c14-14 / city-district
                                                                 :name (c14-7 / name
                                                                              :op1 "CBD"))))
                    :purpose (c14-0 / help-01
                                    :ARG0 c14-2
                                    :ARG1 (c14-11 / get-05
                                                  :ARG1 (c14-9 / person
                                                               :mod c14-14
                                                               :name (c14-12 / name
                                                                             :op1 "Sydney")))
                                    :ARG2 (c14-6 / home)
                                    :ARG1-of (c14-10 / safe-01))
                    :ARG2 c14-9)
       :snt2 (c14-1 / see-01))

# ::snt what do you define as CBD? Where does the boundary end?
# ::tokens ["what", "do", "you", "define", "as", "CBD", "?", "Where", "does", "the", "boundary", "end", "?"]
# ::lemmas ["what", "do", "you", "define", "as", "CBD", "?", "where", "do", "the", "boundary", "end", "?"]
(c15-2 / multi-sentence
       :snt1 (c15-3 / define-01
                    :ARG0 (c15-0 / you)
                    :ARG1 (c15-5 / amr-unknown)
                    :ARG2 (c15-4 / product
                                 :name (c15-7 / name
                                              :op1 "CBD")))
       :snt2 (c15-1 / end-01
                    :ARG1 (c15-8 / boundary)
                    :location (c15-6 / amr-unknown)))

# ::snt you really gotta stop the swarm model or at least have someone actually look at WHY an area is swarming.
# ::tokens ["you", "really", "got", "ta", "stop", "the", "swarm", "model", "or", "at", "least", "have", "someone", "actually", "look", "at", "WHY", "an", "area", "is", "swarming", "."]
# ::lemmas ["you", "really", "got", "to", "stop", "the", "swarm", "model", "or", "at", "least", "have", "someone", "actually", "look", "at", "why", "an", "area", "be", "swarm", "."]
(c16-12 / or
        :op1 (c16-7 / obligate-01
                    :ARG1 (c16-0 / you)
                    :ARG2 (c16-15 / stop-01
                                  :ARG0 c16-0
                                  :ARG1 (c16-5 / model-01
                                               :ARG1 (c16-2 / swarm-01)))
                    :ARG1-of (c16-11 / real-04))
        :op2 (c16-3 / have-04
                    :ARG0 c16-0
                    :ARG1 (c16-9 / look-01
                                 :ARG0 (c16-1 / someone)
                                 :ARG1 (c16-4 / thing
                                              :ARG0-of (c16-8 / cause-01
                                                              :ARG1 (c16-6 / swarm-01
                                                                           :ARG1 (c16-10 / area))))
                                 :mod (c16-13 / at-least)
                                 :ARG1-of (c16-14 / actual-02))))

# ::snt how about paying your drivers extra to go into the cbd instead of forcing others to pay extra to travel into potential danger?
# ::tokens ["how", "about", "paying", "your", "drivers", "extra", "to", "go", "into", "the", "cbd", "instead", "of", "forcing", "others", "to", "pay", "extra", "to", "travel", "into", "potential", "danger", "?"]
# ::lemmas ["how", "about", "pay", "your", "driver", "extra", "to", "go", "into", "the", "cbd", "instead", "of", "force", "other", "to", "pay", "extra", "to", "travel", "into", "potential", "danger", "?"]
(c17-9 / instead-of-91
       :ARG1 (c17-8 / pay-01
                    :ARG0 (c17-0 / you)
                    :ARG1 (c17-17 / extra)
                    :ARG2 (c17-6 / person
                                 :ARG0-of (c17-7 / drive-01
                                                 :ARG1 c17-0))
                    :purpose (c17-12 / go-02
                                     :ARG0 c17-6
                                     :ARG4 (c17-10 / crash-01
                                                   :mod (c17-4 / major))))
       :ARG2 (c17-5 / force-01
                    :ARG0 c17-0
                    :ARG1 (c17-1 / person
                                 :mod (c17-16 / other))
                    :ARG2 (c17-13 / pay-01
                                  :ARG0 c17-1
                                  :ARG1 (c17-11 / extra)
                                  :purpose (c17-3 / travel-01
                                                  :ARG0 c17-1
                                                  :ARG2 (c17-2 / danger
                                                               :mod (c17-14 / potential)))))
       :manner (c17-15 / amr-unknown))

# ::snt What do you pay your drivers?
# ::tokens ["What", "do", "you", "pay", "your", "drivers", "?"]
# ::lemmas ["what", "do", "you", "pay", "your", "driver", "?"]
(c18-3 / pay-01
       :ARG0 (c18-0 / you)
       :ARG1 (c18-4 / amr-unknown)
       :ARG2 (c18-1 / person
                    :ARG0-of (c18-2 / drive-01
                                    :ARG1 c18-0)))

# ::snt for the transport service I don't run? Excellent point sir. If they wanted to save money, they should've kept quiet.
# ::tokens ["for", "the", "transport", "service", "I", "do", "n't", "run", "?", "Excellent", "point", "sir", ".", "If", "they", "wanted", "to", "save", "money", ",", "they", "should", "'ve", "kept", "quiet", "."]
# ::lemmas ["for", "the", "transport", "service", "i", "do", "not", "run", "?", "excellent", "point", "sir", ".", "if", "they", "want", "to", "save", "money", ",", "they", "should", "'ve", "keep", "quiet", "."]
(c19-5 / multi-sentence
       :snt1 (c19-8 / cause-01
                    :ARG0 (c19-11 / run-01
                                  :ARG0 (c19-7 / i)
                                  :ARG1 (c19-13 / serve-01
                                                :ARG1 (c19-4 / transport-01))
                                  :polarity -)
                    :polarity (c19-10 / amr-unknown))
       :snt2 (c19-9 / point-04
                    :ARG0 (c19-3 / sir)
                    :ARG1-of (c19-14 / excellent-02)
                    :condition (c19-2 / want-01
                                      :ARG0 (c19-6 / they)
                                      :ARG1 (c19-1 / save-01
                                                   :ARG0 c19-6
                                                   :ARG1 (c19-12 / money)))
                    :ARG1-of (c19-0 / recommend-01)))

# ::snt That is the point, dummy. Lots of drivers signing up for Uber. They are smarter than you. So help out and shut it
# ::tokens ["That", "is", "the", "point", ",", "dummy", ".", "Lots", "of", "drivers", "signing", "up", "for", "Uber", ".", "They", "are", "smarter", "than", "you", ".", "So", "help", "out", "and", "shut", "it"]
# ::lemmas ["that", "be", "the", "point", ",", "dummy", ".", "lot", "of", "driver", "sign", "up", "for", "Uber", ".", "they", "be", "smart", "than", "you", ".", "so", "help", "out", "and", "shut", "it"]
(c20-20 / multi-sentence
        :snt1 (c20-9 / say-01
                     :ARG0 (c20-16 / i)
                     :ARG1 (c20-15 / point-03
                                   :ARG1 (c20-6 / that))
                     :ARG2 (c20-14 / dummy))
        :snt2 (c20-12 / sign-up-03
                      :ARG1 (c20-21 / person
                                    :ARG0-of (c20-1 / drive-01)
                                    :quant (c20-2 / lot))
                      :ARG3 (c20-8 / company
                                   :name (c20-10 / name
                                                 :op1 " Uber")))
        :snt3 (c20-11 / smart-06
                      :ARG1 (c20-19 / they)
                      :ARG2-of (c20-0 / have-degree-91
                                      :ARG1 c20-19
                                      :ARG3 (c20-22 / more)
                                      :ARG4 (c20-4 / you)))
        :snt4 (c20-3 / cause-01
                     :ARG1 (c20-17 / and
                                   :op1 (c20-7 / help-out-03
                                               :ARG0 (c20-18 / you)
                                               :mode imperative)
                                   :op2 (c20-13 / shut-01
                                                :ARG0 c20-18
                                                :ARG1 (c20-5 / it)
                                                :mode imperative))))

# ::snt wow, what an asinine remark. They went for a PR scoop and fucked it, now they're scrambling to fix it. Seems smart
# ::tokens ["wow", ",", "what", "an", "asinine", "remark", ".", "They", "went", "for", "a", "PR", "scoop", "and", "fucked", "it", ",", "now", "they", "'re", "scrambling", "to", "fix", "it", ".", "Seems", "smart"]
# ::lemmas ["wow", ",", "what", "an", "asinine", "remark", ".", "they", "go", "for", "a", "pr", "scoop", "and", "fuck", "it", ",", "now", "they", "be", "scramble", "to", "fix", "it", ".", "seem", "smart"]
(c21-18 / multi-sentence
        :snt1 (c21-1 / remark-01
                     :mod (c21-13 / asinine
                                  :degree (c21-5 / so))
                     :mod (c21-0 / wow
                                 :mode expressive))
        :snt2 (c21-2 / and
                     :op1 (c21-16 / and
                                  :op1 (c21-14 / go-03
                                               :ARG0 (c21-3 / they)
                                               :ARG1 (c21-8 / scoop-up-02
                                                            :ARG0 c21-3
                                                            :ARG1 (c21-17 / thing
                                                                          :ARG1-of (c21-11 / public-02))))
                                  :op2 (c21-10 / fuck-01
                                               :ARG0 c21-3
                                               :ARG1 c21-8))
                     :op2 (c21-7 / scramble-01
                                 :ARG0 (c21-4 / they)
                                 :ARG1 (c21-15 / fix-02
                                               :ARG0 c21-4
                                               :ARG1 c21-8)
                                 :time (c21-6 / now)))
        :snt3 (c21-9 / seem-01
                     :ARG1 (c21-12 / smart-06)))

# ::snt Listen up dum-dum. They ARE paying the drivers more. Reading is a skill.
# ::tokens ["Listen", "up", "dum", "-", "dum", ".", "They", "ARE", "paying", "the", "drivers", "more", ".", "Reading", "is", "a", "skill", "."]
# ::lemmas ["listen", "up", "dum", "-", "dum", ".", "they", "be", "pay", "the", "driver", "more", ".", "reading", "be", "a", "skill", "."]
(c22-3 / multi-sentence
       :snt1 (c22-7 / listen-up-02
                    :ARG0 (c22-0 / you)
                    :ARG1 (c22-5 / dum-dum)
                    :mode imperative)
       :snt2 (c22-6 / pay-01
                    :ARG0 (c22-2 / they)
                    :ARG1 (c22-9 / more)
                    :ARG2 (c22-4 / person
                                 :ARG0-of (c22-1 / drive-01)))
       :snt3 (c22-10 / skill
                     :domain (c22-8 / read-01)))

# ::snt . No, they presumed their customers weren't economic illiterates. They presumed wrong.
# ::tokens [".", "No", ",", "they", "presumed", "their", "customers", "were", "n't", "economic", "illiterates", ".", "They", "presumed", "wrong", "."]
# ::lemmas [".", "no", ",", "they", "presume", "their", "customer", "be", "not", "economic", "illiterate", ".", "they", "presume", "wrong", "."]
(c23-2 / multi-sentence
       :snt1 (c23-6 / presume-01
                    :ARG0 (c23-1 / they)
                    :ARG1 (c23-5 / illiterate
                                 :mod (c23-9 / economy)
                                 :domain (c23-7 / customer
                                                :poss c23-1)
                                 :polarity -)
                    :mod (c23-8 / no))
       :snt2 (c23-4 / presume-01
                    :ARG0 (c23-3 / they)
                    :ARG1 (c23-0 / wrong-04
                                 :ARG1 c23-3)))

# ::snt Being literate in economics is out of favor these days. Bad for politics.
# ::tokens ["Being", "literate", "in", "economics", "is", "out", "of", "favor", "these", "days", ".", "Bad", "for", "politics", "."]
# ::lemmas ["be", "literate", "in", "economics", "be", "out", "of", "favor", "these", "days", ".", "bad", "for", "politic", "."]
(c24-1 / multi-sentence
       :snt1 (c24-2 / favor-01
                    :ARG1 (c24-6 / literate
                                 :topic (c24-7 / economics)
                                 :domain (c24-5 / person))
                    :time (c24-4 / day
                                 :mod (c24-0 / this))
                    :polarity -)
       :snt2 (c24-8 / bad-04
                    :ARG2 (c24-3 / politics)))

# ::snt still looks like a PR issue to me, look at the backlash. Never assume the customer has same knowledge you do .
# ::tokens ["still", "looks", "like", "a", "PR", "issue", "to", "me", ",", "look", "at", "the", "backlash", ".", "Never", "assume", "the", "customer", "has", "same", "knowledge", "you", "do", "."]
# ::lemmas ["still", "look", "like", "a", "pr", "issue", "to", "i", ",", "look", "at", "the", "backlash", ".", "never", "assume", "the", "customer", "have", "same", "knowledge", "you", "do", "."]
(c25-5 / multi-sentence
       :snt1 (c25-9 / look-01
                    :ARG0 (c25-7 / i)
                    :ARG1 (c25-3 / issue-02
                                 :ARG0 (c25-6 / public-02)
                                 :ARG1 c25-7
                                 :mod (c25-11 / still))
                    :snt2-of c25-5)
       :ARG0 (c25-0 / you)
       :ARG1 (c25-14 / backlash-01)
       :snt3 (c25-10 / assume-02
                     :ARG0 (c25-12 / you)
                     :ARG1 (c25-1 / know-01
                                  :ARG0 (c25-8 / customer)
                                  :ARG1-of (c25-4 / same-01
                                                  :ARG2 (c25-2 / know-01
                                                               :ARG0 c25-12)))
                     :time (c25-13 / ever)
                     :polarity -
                     :mode imperative)
       :mode imperative)

# ::snt FWIW I think they're communicating fine now, that initial tweet was a grenade they should've rewritten.
# ::tokens ["FWIW", "I", "think", "they", "'re", "communicating", "fine", "now", ",", "that", "initial", "tweet", "was", "a", "grenade", "they", "should", "'ve", "rewritten", "."]
# ::lemmas ["fwiw", "i", "think", "they", "be", "communicate", "fine", "now", ",", "that", "initial", "tweet", "be", "a", "grenade", "they", "should", "'ve", "rewrite", "."]
(c26-9 / and
       :op1 (c26-4 / think-01
                   :ARG0 (c26-8 / i)
                   :ARG1 (c26-7 / communicate-01
                                :ARG0 (c26-3 / they)
                                :ARG1-of (c26-5 / fine-04)
                                :time (c26-13 / now)))
       :op2 (c26-10 / grenade
                    :domain (c26-6 / tweet-01
                                   :mod (c26-1 / initial)
                                   :mod (c26-12 / that))
                    :ARG1-of (c26-11 / rewrite-01
                                     :ARG0 c26-3
                                     :ARG1-of (c26-0 / recommend-01
                                                     :ARG2 c26-3)))
       :ARG1-of (c26-2 / honest-01
                       :ARG0 c26-8))

# ::snt . That initial tweet was on point. Their customers, and the outraged, should have been smarter.
# ::tokens [".", "That", "initial", "tweet", "was", "on", "point", ".", "Their", "customers", ",", "and", "the", "outraged", ",", "should", "have", "been", "smarter", "."]
# ::lemmas [".", "that", "initial", "tweet", "be", "on", "point", ".", "their", "customer", ",", "and", "the", "outraged", ",", "should", "have", "be", "smart", "."]
(c27-2 / multi-sentence
       :snt1 (c27-11 / on-point
                     :domain (c27-3 / tweet-01
                                    :mod (c27-6 / initial)
                                    :mod (c27-1 / that)))
       :snt2 (c27-10 / recommend-01
                     :ARG1 (c27-13 / smart-06
                                   :ARG1 (c27-9 / and
                                                :op1 (c27-7 / customer
                                                            :poss (c27-4 / they))
                                                :op2 (c27-8 / person
                                                            :ARG1-of (c27-5 / outrage-01)))
                                   :ARG2-of (c27-0 / have-degree-91
                                                   :ARG1 c27-9
                                                   :ARG3 (c27-12 / more)))))

# ::snt surge pricing is automated. When we became aware of the situation we capped surge pricing and made rides free for riders.
# ::tokens ["surge", "pricing", "is", "automated", ".", "When", "we", "became", "aware", "of", "the", "situation", "we", "capped", "surge", "pricing", "and", "made", "rides", "free", "for", "riders", "."]
# ::lemmas ["surge", "pricing", "be", "automate", ".", "when", "we", "become", "aware", "of", "the", "situation", "we", "cap", "surge", "pricing", "and", "make", "ride", "free", "for", "rider", "."]
(c28-5 / multi-sentence
       :snt1 (c28-12 / automate-01
                     :ARG1 (c28-9 / price-01
                                  :mod (c28-15 / surge-01)))
       :snt2 (c28-14 / and
                     :op1 (c28-10 / cap-01
                                  :ARG0 (c28-2 / we)
                                  :ARG1 (c28-8 / price-01
                                               :mod (c28-3 / surge-01)))
                     :op2 (c28-11 / make-02
                                  :ARG0 c28-2
                                  :ARG1 (c28-6 / free-03
                                               :ARG1 (c28-13 / ride-01)
                                               :ARG3 (c28-4 / person
                                                            :ARG0-of (c28-0 / ride-01))))
                     :time (c28-7 / realize-01
                                  :ARG0 c28-2
                                  :ARG1 (c28-1 / situation))))

# ::snt how about you fuck off back to your corner of the internet where your opinion matters and I'll do the same.
# ::tokens ["how", "about", "you", "fuck", "off", "back", "to", "your", "corner", "of", "the", "internet", "where", "your", "opinion", "matters", "and", "I", "'ll", "do", "the", "same", "."]
# ::lemmas ["how", "about", "you", "fuck", "off", "back", "to", "your", "corner", "of", "the", "internet", "where", "your", "opinion", "matter", "and", "i", "'ll", "do", "the", "same", "."]
(c29-9 / and
       :op1 (c29-3 / fuck-off-03
                   :ARG0 (c29-0 / you)
                   :location (c29-8 / corner
                                    :poss c29-0
                                    :mod (c29-7 / internet)
                                    :location-of (c29-4 / matter-01
                                                        :ARG1 (c29-2 / thing
                                                                     :ARG1-of (c29-10 / opine-01
                                                                                      :ARG0 c29-0))))
                   :mod (c29-5 / off))
       :op2 (c29-6 / do-02
                   :ARG0 (c29-1 / i)
                   :ARG1 c29-2
                   :ARG1-of (c29-12 / same-01
                                    :ARG2 c29-3))
       :mod (c29-11 / amr-unknown))

# ::snt Man, you're dumb. Sorry for saying anything, dummy.
# ::tokens ["Man", ",", "you", "'re", "dumb", ".", "Sorry", "for", "saying", "anything", ",", "dummy", "."]
# ::lemmas ["man", ",", "you", "be", "dumb", ".", "sorry", "for", "say", "anything", ",", "dummy", "."]
(c30-3 / multi-sentence
       :snt1 (c30-4 / dumb
                    :domain (c30-0 / you))
       :snt2 (c30-7 / sorry-01
                    :ARG1 (c30-5 / i)
                    :ARG2 (c30-1 / say-01
                                 :ARG0 (c30-8 / you
                                              :mod (c30-2 / dummy))
                                 :ARG1 (c30-6 / anything))))

# ::snt Uber is covering the cost of all rides, Uber is still paying drivers higher fares to encourage them to pickup riders.
# ::tokens ["Uber", "is", "covering", "the", "cost", "of", "all", "rides", ",", "Uber", "is", "still", "paying", "drivers", "higher", "fares", "to", "encourage", "them", "to", "pickup", "riders", "."]
# ::lemmas ["Uber", "be", "cover", "the", "cost", "of", "all", "ride", ",", "Uber", "be", "still", "pay", "driver", "high", "fare", "to", "encourage", "they", "to", "pickup", "rider", "."]
(c31-13 / and
        :op1 (c31-9 / cover-01
                    :ARG0 (c31-16 / company
                                  :name (c31-17 / name
                                                :op1 "Uber"))
                    :ARG1 (c31-10 / cost-01
                                  :ARG1 (c31-14 / ride-01
                                                :mod (c31-15 / all))))
        :op2 (c31-11 / pay-01
                     :ARG0 c31-16
                     :ARG1 (c31-4 / fare
                                  :ARG1-of (c31-2 / have-degree-91
                                                  :ARG2 (c31-6 / high-02)
                                                  :ARG3 (c31-5 / more)))
                     :ARG2 (c31-7 / person
                                  :ARG0-of (c31-8 / drive-01))
                     :mod (c31-12 / still)
                     :purpose (c31-3 / encourage-01
                                     :ARG0 c31-16
                                     :ARG1 c31-7
                                     :ARG2 (c31-0 / ride-01
                                                  :ARG0 c31-7
                                                  :mod (c31-1 / pickup)))))

# ::snt Yeah, I got that. Thank you for your great service.
# ::tokens ["Yeah", ",", "I", "got", "that", ".", "Thank", "you", "for", "your", "great", "service", "."]
# ::lemmas ["yeah", ",", "i", "get", "that", ".", "thank", "you", "for", "your", "great", "service", "."]
(c32-3 / multi-sentence
       :snt1 (c32-6 / get-01
                    :ARG0 (c32-5 / i)
                    :ARG1 (c32-2 / that)
                    :mod (c32-0 / yeah))
       :snt2 (c32-4 / thank-01
                    :ARG0 c32-5
                    :ARG1 (c32-8 / you)
                    :ARG2 (c32-7 / serve-01
                                 :ARG0 c32-8
                                 :mod (c32-1 / great))))

# ::snt Uber trips out of the CBD today are free to help Sydneysiders get home safely. See
# ::tokens ["Uber", "trips", "out", "of", "the", "CBD", "today", "are", "free", "to", "help", "Sydneysiders", "get", "home", "safely", ".", "See"]
# ::lemmas ["uber", "trip", "out", "of", "the", "CBD", "today", "be", "free", "to", "help", "sydneysider", "get", "home", "safely", ".", "see"]
(c33-3 / multi-sentence
       :snt1 (c33-4 / free-03
                    :ARG1 (c33-2 / trip-03
                                 :ARG0 (c33-8 / company
                                              :name (c33-15 / name
                                                            :op1 "Uber"))
                                 :time (c33-5 / today)
                                 :direction (c33-13 / out-of
                                                    :op1 (c33-14 / city-district
                                                                 :name (c33-7 / name
                                                                              :op1 "CBD"))))
                    :purpose (c33-0 / help-01
                                    :ARG0 c33-2
                                    :ARG1 (c33-11 / get-05
                                                  :ARG1 (c33-9 / person
                                                               :mod c33-14
                                                               :name (c33-12 / name
                                                                             :op1 "Sydney")))
                                    :ARG2 (c33-6 / home)
                                    :ARG1-of (c33-10 / safe-01))
                    :ARG2 c33-9)
       :snt2 (c33-1 / see-01))

# ::snt brilliant, thanks for the reply. I'll share the link
# ::tokens ["brilliant", ",", "thanks", "for", "the", "reply", ".", "I", "'ll", "share", "the", "link"]
# ::lemmas ["brilliant", ",", "thank", "for", "the", "reply", ".", "i", "'ll", "share", "the", "link"]
(c34-3 / multi-sentence
       :snt1 (c34-8 / brilliant-01)
       :snt2 (c34-2 / thank-01
                    :ARG0 (c34-4 / i)
                    :ARG1 (c34-0 / you)
                    :ARG2 (c34-6 / reply-01
                                 :ARG0 c34-0))
       :snt3 (c34-7 / share-01
                    :ARG0 (c34-1 / i)
                    :ARG1 (c34-5 / link)))

# ::snt swarming because of a concert or event? Fine. Swarming during a hostage crisis? NOT COOL.
# ::tokens ["swarming", "because", "of", "a", "concert", "or", "event", "?", "Fine", ".", "Swarming", "during", "a", "hostage", "crisis", "?", "NOT", "COOL", "."]
# ::lemmas ["swarm", "because", "of", "a", "concert", "or", "event", "?", "fine", ".", "swarm", "during", "a", "hostage", "crisis", "?", "not", "COOL", "."]
(c35-3 / multi-sentence
       :snt1 (c35-4 / fine-04
                    :polarity (c35-8 / amr-unknown)
                    :ARG1 (c35-11 / swag-01
                                  :ARG1-of (c35-6 / cause-01
                                                  :ARG0 (c35-9 / or
                                                               :op1 (c35-5 / concert)
                                                               :op2 (c35-12 / event)))))
       :snt2 (c35-7 / cool-04
                    :polarity (c35-10 / amr-unknown)
                    :ARG1 (c35-1 / swag-01
                                 :time (c35-0 / crisis
                                              :mod (c35-2 / hostage)))))

# ::snt calm down its one cafe.
# ::tokens ["calm", "down", "its", "one", "cafe", "."]
# ::lemmas ["calm", "down", "its", "one", "cafe", "."]
(c36-3 / calm-down-02
       :ARG0 (c36-0 / you)
       :ARG1 (c36-2 / cafe
                    :poss (c36-1 / it)
                    :quant 1)
       :mode imperative)

# ::snt it's still raising prices when people are trying to leave the CBD in a crisis. At least they've made rides free now
# ::tokens ["it", "'s", "still", "raising", "prices", "when", "people", "are", "trying", "to", "leave", "the", "CBD", "in", "a", "crisis", ".", "At", "least", "they", "'ve", "made", "rides", "free", "now"]
# ::lemmas ["it", "be", "still", "raise", "price", "when", "people", "be", "try", "to", "leave", "the", "CBD", "in", "a", "crisis", ".", "at", "least", "they", "'ve", "make", "ride", "free", "now"]
(c37-2 / multi-sentence
       :snt1 (c37-13 / raise-01
                     :ARG0 (c37-8 / it)
                     :ARG1 (c37-7 / price-01)
                     :time (c37-1 / try-01
                                  :ARG0 (c37-5 / person)
                                  :ARG1 (c37-11 / leave-11
                                                :ARG0 c37-5
                                                :ARG1 (c37-9 / city-district
                                                             :name (c37-16 / name
                                                                           :op1 "CBD"))
                                                :time (c37-15 / crisis)))
                     :mod (c37-10 / still))
       :snt2 (c37-14 / make-02
                     :ARG0 (c37-3 / they)
                     :ARG1 (c37-4 / free-03
                                  :ARG1 (c37-0 / ride))
                     :time (c37-6 / now)
                     :mod (c37-12 / at-least)))

# ::snt is public transport free?
# ::tokens ["is", "public", "transport", "free", "?"]
# ::lemmas ["be", "public", "transport", "free", "?"]
(c38-0 / free-03
       :ARG1 (c38-3 / transport-01
                    :ARG1-of (c38-2 / public-02))
       :polarity (c38-1 / amr-unknown))

# ::snt nope. I respect them for making the rides free, I can also see how they wanted to get more drivers in
# ::tokens ["nope", ".", "I", "respect", "them", "for", "making", "the", "rides", "free", ",", "I", "can", "also", "see", "how", "they", "wanted", "to", "get", "more", "drivers", "in"]
# ::lemmas ["nope", ".", "i", "respect", "they", "for", "make", "the", "ride", "free", ",", "i", "can", "also", "see", "how", "they", "want", "to", "get", "more", "driver", "in"]
(c39-16 / multi-sentence
        :snt1 (c39-8 / nope)
        :snt2 (c39-6 / contrast-01
                     :ARG1 (c39-1 / respect-01
                                  :ARG0 (c39-11 / i)
                                  :ARG1 (c39-5 / they)
                                  :ARG2 (c39-18 / make-02
                                                :ARG0 c39-5
                                                :ARG1 (c39-9 / free-03
                                                             :ARG1 (c39-3 / ride))))
                     :ARG2 (c39-12 / possible-01
                                   :ARG1 (c39-7 / see-01
                                                :ARG0 (c39-4 / i)
                                                :ARG1 (c39-0 / want-01
                                                             :ARG0 (c39-15 / they)
                                                             :ARG1 (c39-13 / get-05
                                                                           :ARG0 c39-15
                                                                           :ARG1 (c39-17 / person
                                                                                         :ARG0-of (c39-10 / drive-01)
                                                                                         :quant (c39-2 / more))))
                                                :mod (c39-14 / also)))))

# ::snt so our GOVERNMENT is making money from people trying to get out of a hostage situation but you don't shout and yell at them...
# ::tokens ["so", "our", "GOVERNMENT", "is", "making", "money", "from", "people", "trying", "to", "get", "out", "of", "a", "hostage", "situation", "but", "you", "do", "n't", "shout", "and", "yell", "at", "them", "..."]
# ::lemmas ["so", "our", "government", "be", "make", "money", "from", "people", "try", "to", "get", "out", "of", "a", "hostage", "situation", "but", "you", "do", "not", "shout", "and", "yell", "at", "they", "..."]
(c40-7 / infer-01
       :ARG1 (c40-5 / make-05
                    :ARG0 (c40-9 / government-organization
                                 :ARG0-of (c40-2 / govern-01)
                                 :poss (c40-1 / we))
                    :ARG1 (c40-12 / money)
                    :ARG2 (c40-8 / person
                                 :ARG0-of (c40-4 / try-01
                                                 :ARG1 (c40-14 / get-05
                                                               :ARG1 c40-8
                                                               :ARG2 (c40-11 / out-06
                                                                             :ARG1 c40-8
                                                                             :ARG2 (c40-13 / situation
                                                                                           :mod (c40-3 / hostage))))))
                    :concession-of (c40-10 / and
                                           :op1 (c40-6 / shout-01
                                                       :ARG0 (c40-0 / you)
                                                       :ARG2 c40-8
                                                       :polarity -)
                                           :op2 (c40-15 / yell-01
                                                        :ARG0 c40-0
                                                        :ARG2 c40-8
                                                        :polarity -))))

# ::snt but you do Uber for trying to increase drivers. My work here is done your honour.
# ::tokens ["but", "you", "do", "Uber", "for", "trying", "to", "increase", "drivers", ".", "My", "work", "here", "is", "done", "your", "honour", "."]
# ::lemmas ["but", "you", "do", "Uber", "for", "try", "to", "increase", "driver", ".", "my", "work", "here", "be", "do", "your", "honour", "."]
(c41-5 / multi-sentence
       :snt1 (c41-9 / contrast-01
                    :ARG2 (c41-8 / do-02
                                 :ARG0 (c41-0 / you)
                                 :ARG1 (c41-13 / company
                                               :name (c41-16 / name
                                                             :op1 " Uber"))
                                 :ARG1-of (c41-10 / cause-01
                                                  :ARG0 (c41-4 / try-01
                                                               :ARG0 c41-0
                                                               :ARG1 (c41-11 / increase-01
                                                                             :ARG0 c41-0
                                                                             :ARG1 (c41-12 / person
                                                                                           :ARG0-of (c41-3 / drive-01)))))))
       :snt2 (c41-14 / do-02
                     :ARG0 (c41-2 / i)
                     :ARG1 (c41-1 / work-01
                                  :ARG0 c41-2
                                  :location (c41-6 / here))
                     :ARG2 (c41-7 / honor-01
                                  :ARG1 (c41-15 / you))))

# ::snt . Every can take a M40 $30 discount voucher. But then isn't public transport.
# ::tokens [".", "Every", "can", "take", "a", "M40", "$", "30", "discount", "voucher", ".", "But", "then", "is", "n't", "public", "transport", "."]
# ::lemmas [".", "every", "can", "take", "a", "M40", "$", "30", "discount", "voucher", ".", "but", "then", "be", "not", "public", "transport", "."]
(c42-2 / multi-sentence
       :snt1 (c42-7 / possible-01
                    :ARG1 (c42-1 / take-01
                                 :ARG0 (c42-11 / every)
                                 :ARG1 (c42-9 / voucher
                                              :mod (c42-6 / discount-01
                                                          :ARG3 (c42-10 / monetary-quantity
                                                                        :unit (c42-0 / dollar)
                                                                        :quant 30)))))
       :snt2 (c42-8 / contrast-01
                    :ARG2 (c42-3 / transport
                                 :ARG1-of (c42-5 / public-02)
                                 :domain (c42-4 / then)
                                 :polarity -)))

# ::snt no idea what you mean?
# ::tokens ["no", "idea", "what", "you", "mean", "?"]
# ::lemmas ["no", "idea", "what", "you", "mean", "?"]
(c43-0 / know-01
       :ARG0 (c43-4 / i)
       :ARG1 (c43-2 / thing
                    :ARG2-of (c43-3 / mean-01
                                    :ARG0 (c43-1 / you)))
       :polarity (c43-5 / amr-unknown)
       :polarity -)

# ::snt Taxis all offer $30 discount to disabled passengers, doesnt even have disabled taxis to offer. That's true PT
# ::tokens ["Taxis", "all", "offer", "$", "30", "discount", "to", "disabled", "passengers", ",", "does", "nt", "even", "have", "disabled", "taxis", "to", "offer", ".", "That", "'s", "true", "PT"]
# ::lemmas ["Taxis", "all", "offer", "$", "30", "discount", "to", "disabled", "passenger", ",", "do", "not", "even", "have", "disable", "taxi", "to", "offer", ".", "that", "be", "true", "PT"]
(c44-17 / multi-sentence
        :snt1 (c44-13 / and
                      :op1 (c44-14 / offer-01
                                   :ARG0 (c44-5 / taxis
                                                :mod (c44-4 / all))
                                   :ARG1 (c44-11 / discount-01
                                                 :ARG1 (c44-19 / monetary-quantity
                                                               :unit (c44-1 / dollar)
                                                               :quant 30)
                                                 :ARG3 (c44-12 / passenger
                                                               :ARG1-of (c44-20 / disable-01)
                                                               :ARG3-of c44-14)))
                      :op2 (c44-0 / have-03
                                  :ARG0 c44-5
                                  :ARG1 (c44-16 / taxi
                                                :ARG1-of (c44-3 / disable-01)
                                                :ARG1-of (c44-10 / offer-01
                                                                 :ARG0 (c44-6 / taxi
                                                                              :ARG1-of (c44-18 / disable-01)))
                                                :mod (c44-15 / even))
                                  :polarity -))
        :snt2 (c44-8 / true-01
                     :ARG1 (c44-2 / that)
                     :mod (c44-7 / thing
                                 :name (c44-9 / name
                                              :op1 "PT"))))

# ::snt don't know if your being sarcastic or going of topic
# ::tokens ["do", "n't", "know", "if", "your", "being", "sarcastic", "or", "going", "of", "topic"]
# ::lemmas ["do", "not", "know", "if", "your", "be", "sarcastic", "or", "go", "of", "topic"]
(c45-0 / know-01
       :ARG0 (c45-3 / i)
       :ARG1 (c45-5 / or
                    :op1 (c45-6 / sarcasm
                                :domain (c45-1 / you))
                    :op2 (c45-4 / go-06
                                :ARG0 c45-1
                                :ARG2 (c45-2 / topic)))
       :polarity -)

# ::snt You called uber public transport, it's not. PT is for everyone not just the elite.
# ::tokens ["You", "called", "uber", "public", "transport", ",", "it", "'s", "not", ".", "PT", "is", "for", "everyone", "not", "just", "the", "elite", "."]
# ::lemmas ["you", "call", "uber", "public", "transport", ",", "it", "be", "not", ".", "PT", "be", "for", "everyone", "not", "just", "the", "elite", "."]
(c46-3 / multi-sentence
       :snt1 (c46-6 / call-01
                    :ARG0 (c46-0 / you)
                    :ARG1 (c46-2 / transport-01
                                 :ARG1-of (c46-5 / public-02)
                                 :mod (c46-8 / uber))
                    :polarity -)
       :snt2 (c46-11 / contrast-01
                     :ARG1 (c46-13 / benefit-01
                                   :ARG0 (c46-7 / company
                                                :name (c46-12 / name
                                                              :op1 "PT"))
                                   :ARG1 (c46-1 / everyone))
                     :ARG2 (c46-9 / benefit-01
                                  :ARG0 c46-7
                                  :ARG1 (c46-10 / elite
                                                :mod (c46-4 / just))
                                  :polarity -)))

# ::snt I never called uber PT. Everyone is having a go at Uber but not PT... We own it,we shouldn't have to pay in desperate times
# ::tokens ["I", "never", "called", "uber", "PT", ".", "Everyone", "is", "having", "a", "go", "at", "Uber", "but", "not", "PT", "...", "We", "own", "it", ",", "we", "should", "n't", "have", "to", "pay", "in", "desperate", "times"]
# ::lemmas ["i", "never", "call", "uber", "PT", ".", "everyone", "be", "have", "a", "go", "at", "Uber", "but", "not", "PT", "...", "we", "own", "it", ",", "we", "should", "not", "have", "to", "pay", "in", "desperate", "time"]
(c47-17 / multi-sentence
        :snt1 (c47-8 / call-02
                     :ARG0 (c47-12 / i)
                     :ARG1 (c47-3 / company
                                  :name (c47-9 / name
                                               :op1 " uber"
                                               :op2 "PT"))
                     :time (c47-16 / ever)
                     :polarity -)
        :snt2 (c47-19 / contrast-01
                      :ARG1 (c47-14 / go-02
                                    :ARG0 (c47-18 / everyone)
                                    :ARG4 (c47-4 / company
                                                 :name (c47-1 / name
                                                              :op1 "Uber")))
                      :ARG2 (c47-5 / go-02
                                   :ARG0 c47-18
                                   :ARG4 c47-4
                                   :polarity -))
        :snt3 (c47-15 / own-01
                      :ARG0 (c47-0 / we)
                      :ARG1 (c47-6 / it))
        :snt4 (c47-2 / recommend-01
                     :ARG1 (c47-10 / obligate-01
                                   :ARG1 c47-0
                                   :ARG2 (c47-13 / pay-01
                                                 :ARG0 c47-0
                                                 :time (c47-7 / time
                                                              :ARG1-of (c47-11 / desperate-02)))
                                   :polarity -)))

# ::snt U don't pay extra for PT at desperate . My apologies if I got the issue confused. I agree PT for everyone regardless of class.
# ::tokens ["U", "do", "n't", "pay", "extra", "for", "PT", "at", "desperate", ".", "My", "apologies", "if", "I", "got", "the", "issue", "confused", ".", "I", "agree", "PT", "for", "everyone", "regardless", "of", "class", "."]
# ::lemmas ["u", "do", "not", "pay", "extra", "for", "PT", "at", "desperate", ".", "my", "apology", "if", "i", "get", "the", "issue", "confuse", ".", "i", "agree", "PT", "for", "everyone", "regardless", "of", "class", "."]
(c48-3 / multi-sentence
       :snt1 (c48-6 / pay-01
                    :ARG0 (c48-0 / you)
                    :ARG1 (c48-15 / extra)
                    :ARG3 (c48-2 / thing
                                 :name (c48-14 / name
                                               :op1 "PT"))
                    :ARG1-of (c48-5 / desperate-02)
                    :polarity -)
       :snt2 (c48-10 / apologize-01
                     :ARG0 (c48-7 / i)
                     :condition (c48-8 / confuse-01
                                       :ARG1 c48-7
                                       :ARG2 (c48-4 / thing
                                                    :ARG0-of (c48-1 / issue-02))))
       :snt3 (c48-12 / agree-01
                     :ARG0 c48-7
                     :ARG1 c48-2
                     :ARG2 (c48-9 / everyone)
                     :ARG1-of (c48-11 / regardless-91
                                      :ARG2 (c48-13 / class))))

# ::snt people expect Uber drivers to work for normal/free in "crisis times" but when Uber increases prices get more drivers than
# ::tokens ["people", "expect", "Uber", "drivers", "to", "work", "for", "normal", "/", "free", "in", "\"", "crisis", "times", "\"", "but", "when", "Uber", "increases", "prices", "get", "more", "drivers", "than"]
# ::lemmas ["people", "expect", "Uber", "driver", "to", "work", "for", "normal", "/", "free", "in", "\"", "crisis", "time", "\"", "but", "when", "uber", "increase", "price", "get", "more", "driver", "than"]
(c49-5 / contrast-01
       :ARG1 (c49-15 / expect-01
                     :ARG0 (c49-12 / person)
                     :ARG1 (c49-0 / work-01
                                  :ARG0 (c49-17 / person
                                                :ARG0-of (c49-11 / drive-01
                                                                 :ARG1 (c49-4 / company
                                                                              :name (c49-8 / name
                                                                                           :op1 " Uber"))))
                                  :ARG1 (c49-7 / slash
                                               :op1 (c49-3 / normal-02)
                                               :op2 (c49-10 / free-03))
                                  :time (c49-18 / crisis)))
       :ARG2 (c49-14 / get-01
                     :ARG0 (c49-9 / price-01)
                     :ARG1 (c49-6 / person
                                  :ARG0-of (c49-2 / drive-01)
                                  :ARG1-of (c49-1 / have-quant-91
                                                  :ARG3 (c49-16 / more)
                                                  :ARG4 c49-17))
                     :condition (c49-13 / increase-01
                                        :ARG0 c49-4
                                        :ARG1 c49-9)))

# ::snt everyone cries how bad it is... Yet public transport is still usual price and no one is whining at them.
# ::tokens ["everyone", "cries", "how", "bad", "it", "is", "...", "Yet", "public", "transport", "is", "still", "usual", "price", "and", "no", "one", "is", "whining", "at", "them", "."]
# ::lemmas ["everyone", "cry", "how", "bad", "it", "be", "...", "yet", "public", "transport", "be", "still", "usual", "price", "and", "no", "one", "be", "whine", "at", "they", "."]
(c50-3 / multi-sentence
       :snt1 (c50-7 / cry-01
                    :ARG0 (c50-15 / everyone)
                    :ARG1 (c50-2 / thing
                                 :degree-of (c50-16 / bad-07
                                                    :ARG1 (c50-8 / it))))
       :snt2 (c50-1 / have-concession-91
                    :ARG1 (c50-11 / and
                                  :op1 (c50-12 / monetary-quantity
                                               :ARG2-of (c50-9 / price-01
                                                               :ARG1 (c50-4 / transport-01
                                                                            :ARG1-of (c50-6 / public-02)))
                                               :mod (c50-10 / usual)
                                               :mod (c50-13 / still))
                                  :op2 (c50-0 / whine-01
                                              :ARG0 (c50-14 / no-one)
                                              :ARG3 (c50-5 / they)))))
