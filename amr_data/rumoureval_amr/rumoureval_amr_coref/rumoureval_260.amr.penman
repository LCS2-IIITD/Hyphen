# ::snt Does he have a script to take away more freedoms.
# ::tokens ["Does", "he", "have", "a", "script", "to", "take", "away", "more", "freedoms", "."]
# ::lemmas ["do", "he", "have", "a", "script", "to", "take", "away", "more", "freedom", "."]
(c1-0 / have-03
      :polarity (c1-5 / amr-unknown)
      :ARG0 (c1-4 / he)
      :ARG1 (c1-6 / script
                  :purpose (c1-1 / take-away-05
                                 :ARG0 c1-4
                                 :ARG1 (c1-2 / free-04
                                             :mod (c1-3 / more)))))

# ::snt Doesnt sound like he has thought this one through
# ::tokens ["Does", "nt", "sound", "like", "he", "has", "thought", "this", "one", "through"]
# ::lemmas ["do", "nt", "sound", "like", "he", "have", "think", "this", "one", "through"]
(c2-4 / sound-01
      :ARG1 (c2-2 / think-through-04
                  :ARG0 (c2-0 / he)
                  :ARG1 (c2-3 / one
                              :mod (c2-1 / this)))
      :polarity -)

# ::snt : AFP says gunman who has taken a hostage at kosher supermarket in Paris
# ::tokens [":", "AFP", "says", "gunman", "who", "has", "taken", "a", "hostage", "at", "kosher", "supermarket", "in", "Paris"]
# ::lemmas [":", "AFP", "say", "gunman", "who", "have", "take", "a", "hostage", "at", "kosher", "supermarket", "in", "Paris"]
(c3-8 / say-01
      :ARG0 (c3-5 / publication
                  :name (c3-9 / name
                              :op1 "AFP"))
      :ARG1 (c3-7 / gunman
                  :ARG0-of (c3-3 / take-01
                                 :ARG1 (c3-1 / hostage)
                                 :location (c3-2 / supermarket
                                                 :mod (c3-0 / kosher)
                                                 :location (c3-6 / city
                                                                 :name (c3-4 / name
                                                                             :op1 "Paris"))))))

# ::snt looks like a deliberate attempt to split the French police action an cause confusion.
# ::tokens ["looks", "like", "a", "deliberate", "attempt", "to", "split", "the", "French", "police", "action", "an", "cause", "confusion", "."]
# ::lemmas ["look", "like", "a", "deliberate", "attempt", "to", "split", "the", "French", "police", "action", "an", "cause", "confusion", "."]
(c4-5 / look-02
      :ARG1 (c4-4 / attempt-01
                  :ARG1 (c4-8 / split-01
                              :ARG1 (c4-7 / act-02
                                          :ARG0 (c4-1 / police
                                                      :mod (c4-2 / country
                                                                 :name (c4-9 / name
                                                                             :op1 "France")))))
                  :ARG1-of (c4-0 / deliberate-01)
                  :ARG0-of (c4-6 / cause-01
                                 :ARG1 (c4-3 / confuse-01))))

# ::snt Presume they wanted a . So much for martyrdom. Why a kosher deli particularly?
# ::tokens ["Presume", "they", "wanted", "a", ".", "So", "much", "for", "martyrdom", ".", "Why", "a", "kosher", "deli", "particularly", "?"]
# ::lemmas ["presume", "they", "want", "a", ".", "so", "much", "for", "martyrdom", ".", "why", "a", "kosher", "deli", "particularly", "?"]
(c5-3 / multi-sentence
      :snt1 (c5-7 / presume-01
                  :ARG1 (c5-1 / want-01
                              :ARG0 (c5-4 / they)
                              :ARG1 (c5-2 / thing)))
      :snt2 (c5-11 / much
                   :degree (c5-12 / so)
                   :topic (c5-10 / martyr-01))
      :snt3 (c5-8 / cause-01
                  :ARG0 (c5-9 / amr-unknown)
                  :ARG1 (c5-6 / deli
                              :mod (c5-0 / kosher)
                              :mod (c5-5 / particular))))

# ::snt U haven't sent Queen Bee Burley to France have u,if so it's only a matter of time be4 she comes out with a classic
# ::tokens ["U", "have", "n't", "sent", "Queen", "Bee", "Burley", "to", "France", "have", "u", ",", "if", "so", "it", "'s", "only", "a", "matter", "of", "time", "be4", "she", "comes", "out", "with", "a", "classic"]
# ::lemmas ["u", "have", "not", "send", "Queen", "Bee", "Burley", "to", "France", "have", "u", ",", "if", "so", "it", "be", "only", "a", "matter", "of", "time", "be4", "she", "come", "out", "with", "a", "classic"]
(c6-10 / and
       :op1 (c6-12 / send-01
                   :ARG0 (c6-0 / you)
                   :ARG1 (c6-7 / person
                               :name (c6-13 / name
                                            :op1 "Queen"
                                            :op2 "Bee"
                                            :op3 "Burley"))
                   :ARG2 (c6-8 / country
                               :name (c6-6 / name
                                           :op1 "France"))
                   :polarity -)
       :op2 (c6-2 / send-01
                  :ARG0 c6-0
                  :ARG1 c6-7
                  :ARG2 c6-8)
       :ARG0-of (c6-11 / cause-01
                       :ARG1 (c6-4 / matter
                                   :mod (c6-3 / time)
                                   :mod (c6-5 / only)
                                   :domain (c6-9 / come-out-09
                                                 :ARG0 c6-7
                                                 :ARG1 (c6-1 / classic)))))

# ::snt Why would someone leave their ID-card? Thereafter allegedly seen at a gas station. Now hostage sit. Reports of
# ::tokens ["Why", "would", "someone", "leave", "their", "ID", "-", "card", "?", "Thereafter", "allegedly", "seen", "at", "a", "gas", "station", ".", "Now", "hostage", "sit", ".", "Reports", "of"]
# ::lemmas ["why", "would", "someone", "leave", "their", "ID", "-", "card", "?", "thereafter", "allegedly", "see", "at", "a", "gas", "station", ".", "now", "hostage", "sit", ".", "report", "of"]
(c7-4 / multi-sentence
      :snt1 (c7-9 / leave-15
                  :ARG0 (c7-15 / someone)
                  :ARG1 (c7-6 / card
                              :instrument-of (c7-5 / document-01
                                                   :ARG1 (c7-7 / identity))
                              :poss c7-15)
                  :ARG1-of (c7-13 / cause-01
                                  :ARG0 (c7-10 / amr-unknown)))
      :snt2 (c7-1 / see-01
                  :ARG1 (c7-8 / person
                              :ARG1-of (c7-2 / hostage-01))
                  :time (c7-3 / then)
                  :ARG1-of (c7-14 / allege-01)
                  :location (c7-0 / station
                                  :mod (c7-11 / gas)))
      :snt3 (c7-12 / report-01))

# ::snt a rd shooting at presentDivert Operatons?
# ::tokens ["a", "rd", "shooting", "at", "presentDivert", "Operatons", "?"]
# ::lemmas ["a", "rd", "shooting", "at", "presentdivert", "Operatons", "?"]
(c8-1 / shoot-01
      :ARG2 (c8-3 / organization
                  :name (c8-2 / name
                              :op1 " presentDivert"
                              :op2 "Operatons"))
      :polarity (c8-0 / amr-unknown))

# ::snt Why state kosher grocery? You, nor any other news agency say Christian grocery if it would of been the case
# ::tokens ["Why", "state", "kosher", "grocery", "?", "You", ",", "nor", "any", "other", "news", "agency", "say", "Christian", "grocery", "if", "it", "would", "of", "been", "the", "case"]
# ::lemmas ["why", "state", "kosher", "grocery", "?", "you", ",", "nor", "any", "other", "news", "agency", "say", "Christian", "grocery", "if", "it", "would", "of", "be", "the", "case"]
(c9-4 / multi-sentence
      :snt1 (c9-8 / cause-01
                  :ARG0 (c9-10 / amr-unknown)
                  :ARG1 (c9-16 / state-01
                               :ARG1 (c9-11 / grocery
                                            :mod (c9-0 / kosher))))
      :snt2 (c9-2 / say-01
                  :ARG0 (c9-13 / or
                               :op1 (c9-1 / you)
                               :op2 (c9-14 / agency
                                           :mod (c9-17 / news)
                                           :mod (c9-15 / any)
                                           :mod (c9-6 / other)))
                  :ARG1 (c9-3 / grocery
                              :mod (c9-12 / religious-group
                                          :name (c9-7 / name
                                                      :op1 "Christian")))
                  :condition (c9-5 / case-04
                                   :ARG1 (c9-9 / it))
                  :polarity -))

# ::snt Hunted Down, excellent police work, hope the other two follow soon
# ::tokens ["Hunted", "Down", ",", "excellent", "police", "work", ",", "hope", "the", "other", "two", "follow", "soon"]
# ::lemmas ["Hunted", "Down", ",", "excellent", "police", "work", ",", "hope", "the", "other", "two", "follow", "soon"]
(c10-8 / and
       :op1 (c10-9 / organization
                   :name (c10-11 / name
                                 :op1 "Hunted"
                                 :op2 "Down"))
       :op2 (c10-0 / work-01
                   :ARG0 (c10-6 / police)
                   :ARG1-of (c10-1 / excellent-02))
       :op3 (c10-2 / hope-01
                   :ARG0 (c10-7 / i)
                   :ARG1 (c10-3 / follow-01
                                :ARG1 (c10-4 / person
                                             :mod (c10-5 / other)
                                             :quant 2)
                                :time (c10-10 / soon))))

# ::snt which means the phsyco is ruthless and will shoot all. Attack is best defence.
# ::tokens ["which", "means", "the", "phsyco", "is", "ruthless", "and", "will", "shoot", "all", ".", "Attack", "is", "best", "defence", "."]
# ::lemmas ["which", "mean", "the", "phsyco", "be", "ruthless", "and", "will", "shoot", "all", ".", "attack", "be", "good", "defence", "."]
(c11-1 / multi-sentence
       :snt1 (c11-9 / mean-01
                    :ARG2 (c11-4 / and
                                 :op1 (c11-6 / ruthless
                                             :domain (c11-3 / phsyco))
                                 :op2 (c11-11 / shoot-01
                                              :ARG0 c11-3
                                              :ARG2 (c11-7 / all))))
       :snt2 (c11-2 / defend-01
                    :ARG3 (c11-10 / attack-01)
                    :ARG1-of (c11-0 / have-degree-91
                                    :ARG2 (c11-5 / good-03
                                                 :ARG1 c11-2)
                                    :ARG3 (c11-8 / most))))

# ::snt really sad situation
# ::tokens ["really", "sad", "situation"]
# ::lemmas ["really", "sad", "situation"]
(c12-0 / sad-02
       :degree (c12-2 / really)
       :ARG1 (c12-1 / situation))
