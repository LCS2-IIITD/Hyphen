# ::snt Me either. I would be out of my mind with worry if i had human kids.
# ::tokens ["Me", "either", ".", "I", "would", "be", "out", "of", "my", "mind", "with", "worry", "if", "i", "had", "human", "kids", "."]
# ::lemmas ["i", "either", ".", "i", "would", "be", "out", "of", "my", "mind", "with", "worry", "if", "i", "have", "human", "kid", "."]
(c1-4 / multi-sentence
      :snt1 (c1-6 / i
                  :mod (c1-12 / either))
      :snt2 (c1-9 / out-06
                  :ARG1 (c1-2 / i)
                  :ARG2 (c1-10 / mind
                               :poss c1-2)
                  :ARG1-of (c1-7 / cause-01
                                 :ARG0 (c1-1 / worry-01
                                             :ARG0 (c1-3 / have-05
                                                         :ARG0 c1-2
                                                         :ARG1 (c1-8 / person
                                                                     :mod (c1-5 / human)
                                                                     :ARG0-of (c1-11 / have-rel-role-91
                                                                                     :ARG1 c1-2
                                                                                     :ARG2 (c1-0 / kid))))))))

# ::snt I feel the same way. We can keep our -legged away from people. They're getting crazier by the day.
# ::tokens ["I", "feel", "the", "same", "way", ".", "We", "can", "keep", "our", "-legged", "away", "from", "people", ".", "They", "'re", "getting", "crazier", "by", "the", "day", "."]
# ::lemmas ["i", "feel", "the", "same", "way", ".", "we", "can", "keep", "our", "-legged", "away", "from", "people", ".", "they", "be", "get", "crazy", "by", "the", "day", "."]
(c2-16 / multi-sentence
       :snt1 (c2-8 / feel-01
                   :ARG0 (c2-10 / i)
                   :ARG1 (c2-0 / way
                               :ARG1-of (c2-7 / same-01)))
       :snt2 (c2-11 / possible-01
                    :ARG1 (c2-14 / keep-04
                                 :ARG0 (c2-6 / we)
                                 :ARG1 (c2-2 / legged
                                             :poss c2-6)
                                 :ARG2 (c2-12 / away
                                              :op1 (c2-17 / person))))
       :snt3 (c2-13 / get-03
                    :ARG1 (c2-4 / they)
                    :ARG2 (c2-5 / crazy-03
                                :ARG1 c2-4
                                :ARG2-of (c2-1 / have-degree-91
                                               :ARG1 c2-4
                                               :ARG3 (c2-18 / more)))
                    :frequency (c2-3 / rate-entity-91
                                     :ARG3 (c2-15 / temporal-quantity
                                                  :unit (c2-9 / day)
                                                  :quant 1))))

# ::snt Good on her. A lot more should do this. Share and ease the pain for all tax payers.
# ::tokens ["Good", "on", "her", ".", "A", "lot", "more", "should", "do", "this", ".", "Share", "and", "ease", "the", "pain", "for", "all", "tax", "payers", "."]
# ::lemmas ["good", "on", "she", ".", "a", "lot", "more", "should", "do", "this", ".", "share", "and", "ease", "the", "pain", "for", "all", "tax", "payer", "."]
(c3-3 / multi-sentence
      :snt1 (c3-8 / good-02
                  :ARG2 (c3-14 / she))
      :snt2 (c3-11 / recommend-01
                   :ARG1 (c3-6 / do-02
                               :ARG0 (c3-13 / more
                                            :quant (c3-9 / lot))
                               :ARG1 (c3-2 / this)))
      :snt3 (c3-10 / and
                   :op1 (c3-1 / share-01
                              :ARG0 (c3-7 / person
                                          :ARG0-of (c3-5 / pay-01
                                                         :ARG1 (c3-4 / tax))
                                          :mod (c3-12 / all)))
                   :op2 (c3-15 / ease-02
                               :ARG0 c3-7
                               :ARG1 (c3-0 / pain-01
                                           :ARG1 c3-7))))

# ::snt Insurance policies get higher and a lot of people can't pay their premiums. That is why so many hav
# ::tokens ["Insurance", "policies", "get", "higher", "and", "a", "lot", "of", "people", "ca", "n't", "pay", "their", "premiums", ".", "That", "is", "why", "so", "many", "hav"]
# ::lemmas ["insurance", "policy", "get", "high", "and", "a", "lot", "of", "people", "can", "not", "pay", "their", "premium", ".", "that", "be", "why", "so", "many", "hav"]
(c4-3 / multi-sentence
      :snt1 (c4-11 / and
                   :op1 (c4-10 / get-03
                               :ARG1 (c4-8 / policy-01
                                           :ARG2 (c4-7 / insure-02))
                               :ARG2 (c4-1 / high-02
                                           :ARG1 c4-8
                                           :ARG2-of (c4-4 / have-degree-91
                                                          :ARG1 c4-8
                                                          :ARG3 (c4-15 / more))))
                   :op2 (c4-5 / possible-01
                              :ARG1 (c4-0 / pay-01
                                          :ARG0 (c4-12 / person
                                                       :quant (c4-13 / lot))
                                          :ARG1 (c4-6 / premium
                                                      :poss c4-12))
                              :polarity -))
      :snt2 (c4-9 / cause-01
                  :ARG0 (c4-2 / that)
                  :ARG1 (c4-17 / hav
                               :quant (c4-14 / many
                                             :degree (c4-16 / so)))))

# ::snt I am glad the intelligent people of our generation decided on four legged kids. I would not want children in this country.
# ::tokens ["I", "am", "glad", "the", "intelligent", "people", "of", "our", "generation", "decided", "on", "four", "legged", "kids", ".", "I", "would", "not", "want", "children", "in", "this", "country", "."]
# ::lemmas ["i", "be", "glad", "the", "intelligent", "people", "of", "our", "generation", "decide", "on", "four", "legged", "kid", ".", "i", "would", "not", "want", "child", "in", "this", "country", "."]
(c5-5 / multi-sentence
      :snt1 (c5-11 / glad-02
                   :ARG0 (c5-7 / decide-01
                               :ARG0 (c5-9 / person
                                           :ARG1-of (c5-8 / intelligent-01)
                                           :part-of (c5-2 / generation
                                                          :poss (c5-1 / we)))
                               :ARG1 (c5-0 / kid
                                           :mod (c5-12 / legged
                                                       :quant 4)))
                   :ARG1 (c5-3 / i))
      :snt2 (c5-13 / want-01
                   :ARG0 (c5-6 / i)
                   :ARG1 (c5-10 / child
                                :location (c5-14 / country
                                                 :mod (c5-4 / this)))
                   :polarity -))

# ::snt Exactly honey. We know.xx
# ::tokens ["Exactly", "honey", ".", "We", "know.xx"]
# ::lemmas ["exactly", "honey", ".", "we", "know.xx"]
(c6-3 / multi-sentence
      :snt1 (c6-4 / exact)
      :snt2 (c6-0 / know-01
                  :ARG0 (c6-1 / we))
      :snt3 (c6-2 / honey
                  :mode expressive))

# ::snt Yes, we are!!!!!
# ::tokens ["Yes", ",", "we", "are", "!", "!", "!", "!", "!"]
# ::lemmas ["yes", ",", "we", "be", "!", "!", "!", "!", "!"]
(c7-0 / we)

# ::snt Lots will be covered by insurance coverage, thank goodness..
# ::tokens ["Lots", "will", "be", "covered", "by", "insurance", "coverage", ",", "thank", "goodness", ".."]
# ::lemmas ["lot", "will", "be", "cover", "by", "insurance", "coverage", ",", "thank", "goodness", ".."]
(c8-2 / cover-01
      :ARG0 (c8-5 / cover-01
                  :ARG0 (c8-1 / insure-02))
      :ARG1 (c8-3 / lot)
      :ARG2-of (c8-0 / thank-01
                     :ARG1 (c8-4 / goodness)))

# ::snt Yes, and yet you have no choice but to pay it, if you want to be covered. There's only so much the govt.is willing to do.
# ::tokens ["Yes", ",", "and", "yet", "you", "have", "no", "choice", "but", "to", "pay", "it", ",", "if", "you", "want", "to", "be", "covered", ".", "There", "'s", "only", "so", "much", "the", "govt.is", "willing", "to", "do", "."]
# ::lemmas ["yes", ",", "and", "yet", "you", "have", "no", "choice", "but", "to", "pay", "it", ",", "if", "you", "want", "to", "be", "cover", ".", "there", "be", "only", "so", "much", "the", "govt.is", "willing", "to", "do", "."]
(c9-4 / multi-sentence
      :snt1 (c9-10 / and
                   :op2 (c9-2 / have-concession-91
                              :ARG1 (c9-12 / obligate-01
                                           :ARG1 (c9-0 / you)
                                           :ARG2 (c9-7 / pay-01
                                                       :ARG0 c9-0
                                                       :ARG3 (c9-8 / it))
                                           :condition (c9-1 / want-01
                                                            :ARG0 c9-0
                                                            :ARG1 (c9-9 / cover-01
                                                                        :ARG1 c9-0))
                                           :polarity -)))
      :snt2 (c9-14 / will-02
                   :ARG0 (c9-11 / government-organization
                                :ARG0-of (c9-3 / govern-01))
                   :ARG1 (c9-6 / do-02
                               :ARG0 c9-11
                               :ARG1 (c9-13 / much
                                            :mod (c9-5 / only)
                                            :degree (c9-15 / so)))))

# ::snt So true x
# ::tokens ["So", "true", "x"]
# ::lemmas ["so", "true", "x"]
(c10-1 / true-01
       :mod (c10-0 / so))

# ::snt Well it is Texas. Dare i day x
# ::tokens ["Well", "it", "is", "Texas", ".", "Dare", "i", "day", "x"]
# ::lemmas ["well", "it", "be", "Texas", ".", "dare", "i", "day", "x"]
(c11-3 / multi-sentence
       :snt1 (c11-6 / state
                    :name (c11-7 / name
                                 :op1 "Texas")
                    :domain (c11-5 / it)
                    :mod (c11-0 / well))
       :snt2 (c11-4 / dare-01
                    :ARG0 (c11-1 / i)
                    :ARG2 (c11-2 / day)))

# ::snt Omg, you took the words right out of my mouth! It's like teaching blind mice. Religion makes people stupid to science.
# ::tokens ["Omg", ",", "you", "took", "the", "words", "right", "out", "of", "my", "mouth", "!", "It", "'s", "like", "teaching", "blind", "mice", ".", "Religion", "makes", "people", "stupid", "to", "science", "."]
# ::lemmas ["Omg", ",", "you", "take", "the", "word", "right", "out", "of", "my", "mouth", "!", "it", "be", "like", "teach", "blind", "mouse", ".", "religion", "make", "people", "stupid", "to", "science", "."]
(c12-6 / multi-sentence
       :snt1 (c12-5 / take-out-11
                    :ARG0 (c12-0 / you)
                    :ARG1 (c12-2 / word)
                    :source (c12-15 / mouth
                                    :part-of (c12-10 / i))
                    :mod (c12-14 / oh-my-god
                                 :mode expressive)
                    :mod (c12-12 / right))
       :snt2 (c12-1 / resemble-01
                    :ARG1 (c12-3 / it)
                    :ARG2 (c12-7 / teach-01
                                 :ARG1 (c12-17 / blind-02
                                               :ARG1 (c12-13 / mouse))))
       :snt3 (c12-9 / make-02
                    :ARG0 (c12-8 / religion)
                    :ARG1 (c12-16 / stupid
                                  :prep-to (c12-4 / science)
                                  :domain (c12-11 / person))))

# ::snt Gee Tom. We are on the same page with so many issues.
# ::tokens ["Gee", "Tom", ".", "We", "are", "on", "the", "same", "page", "with", "so", "many", "issues", "."]
# ::lemmas ["Gee", "Tom", ".", "we", "be", "on", "the", "same", "page", "with", "so", "many", "issue", "."]
(c13-3 / multi-sentence
       :snt1 (c13-5 / person
                    :name (c13-10 / name
                                  :op1 "Tom")
                    :mod (c13-7 / gee
                                :mode expressive))
       :snt2 (c13-11 / be-located-at-91
                     :ARG1 (c13-0 / we)
                     :ARG2 (c13-4 / page
                                  :ARG1-of (c13-9 / same-01))
                     :accompanier (c13-6 / issue-02
                                         :ARG1-of (c13-1 / have-quant-91
                                                         :ARG2 (c13-8 / many)
                                                         :ARG3 (c13-2 / so)))))

# ::snt Tommy you should be sleeping.
# ::tokens ["Tommy", "you", "should", "be", "sleeping", "."]
# ::lemmas ["Tommy", "you", "should", "be", "sleep", "."]
(c14-4 / say-01
       :ARG0 (c14-2 / i)
       :ARG1 (c14-3 / recommend-01
                    :ARG1 (c14-0 / sleep-01
                                 :ARG0 (c14-1 / person
                                              :name (c14-5 / name
                                                           :op1 "Tommy")
                                              :ARG2-of c14-4))))

# ::snt Yes, it is past time!! LOL I am exhausted. Luckily Amy, Trevor and Kathy are in helping tonight, so I can go home soon!!
# ::tokens ["Yes", ",", "it", "is", "past", "time", "!", "!", "LOL", "I", "am", "exhausted", ".", "Luckily", "Amy", ",", "Trevor", "and", "Kathy", "are", "in", "helping", "tonight", ",", "so", "I", "can", "go", "home", "soon", "!", "!"]
# ::lemmas ["yes", ",", "it", "be", "past", "time", "!", "!", "lol", "i", "be", "exhausted", ".", "luckily", "Amy", ",", "Trevor", "and", "Kathy", "be", "in", "help", "tonight", ",", "so", "i", "can", "go", "home", "soon", "!", "!"]
(c15-21 / multi-sentence
        :snt1 (c15-6 / time
                     :mod (c15-17 / past)
                     :domain (c15-16 / it)
                     :ARG2-of (c15-3 / laugh-01
                                     :ARG0 (c15-5 / i)
                                     :manner (c15-10 / loud)
                                     :mode expressive))
        :snt2 (c15-0 / help-01
                     :ARG0 (c15-18 / and
                                   :op1 (c15-22 / person
                                                :name (c15-11 / name
                                                              :op1 "Amy"))
                                   :op2 (c15-12 / person
                                                :name (c15-2 / name
                                                             :op1 "Trevor"))
                                   :op3 (c15-8 / person
                                               :name (c15-4 / name
                                                            :op1 "Kathy")))
                     :ARG2-of (c15-13 / fortunate-01)
                     :time (c15-15 / date-entity
                                   :dayperiod (c15-23 / night)
                                   :mod (c15-20 / today))
                     :purpose (c15-14 / possible-01
                                      :ARG1 (c15-19 / go-02
                                                    :ARG0 (c15-1 / i)
                                                    :ARG4 (c15-7 / home)
                                                    :time (c15-9 / soon)))))

# ::snt Pretty hard to convince people in that state that climate change is real. So, I expect a lot more before they get it.
# ::tokens ["Pretty", "hard", "to", "convince", "people", "in", "that", "state", "that", "climate", "change", "is", "real", ".", "So", ",", "I", "expect", "a", "lot", "more", "before", "they", "get", "it", "."]
# ::lemmas ["pretty", "hard", "to", "convince", "people", "in", "that", "state", "that", "climate", "change", "be", "real", ".", "so", ",", "i", "expect", "a", "lot", "more", "before", "they", "get", "it", "."]
(c16-15 / multi-sentence
        :snt1 (c16-0 / hard-02
                     :ARG1 (c16-7 / convince-01
                                  :ARG1 (c16-9 / person
                                               :location (c16-8 / state
                                                                :mod (c16-6 / that)))
                                  :ARG2 (c16-3 / real-04
                                               :ARG1 (c16-4 / change-01
                                                            :ARG1 (c16-17 / climate))))
                     :degree (c16-16 / pretty))
        :snt2 (c16-10 / infer-01
                      :ARG1 (c16-12 / expect-01
                                    :ARG0 (c16-5 / i)
                                    :ARG1 (c16-18 / more
                                                  :quant (c16-2 / lot))
                                    :time (c16-13 / before
                                                  :op1 (c16-11 / get-01
                                                               :ARG0 (c16-14 / they)
                                                               :ARG1 (c16-1 / it))))))
