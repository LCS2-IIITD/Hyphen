comment,amr
is that a normal call in this situation ?,"# ::snt is that a normal call in this situation ?
(c / call-02
      :polarity (a / amr-unknown)
      :ARG1-of (n / normal-02)
      :condition (s / situation
            :mod (t / this)))"
: NEWS: 'Emergency Emergency' was the final distress call that was sent from the cockpit of flight -,"# ::snt : NEWS: 'Emergency Emergency' was the final distress call that was sent from the cockpit of flight -
(a / and
      :op1 (n / news)
      :op2 (c / call-02
            :ARG1 (e / emergency)
            :ARG2 (d / distress-01)
            :mod (f / final)
            :ARG1-of (s / send-01
                  :ARG2 (c2 / cockpit
                        :part-of (f2 / fly-01)))))"
: NEWS: 'Emergency Emergency' was the final distress call that was sent from the cockpit of flight -,"# ::snt : NEWS: 'Emergency Emergency' was the final distress call that was sent from the cockpit of flight -
(a / and
      :op1 (n / news)
      :op2 (c / call-02
            :ARG1 (e / emergency)
            :ARG2 (d / distress-01)
            :mod (f / final)
            :ARG1-of (s / send-01
                  :ARG2 (c2 / cockpit
                        :part-of (f2 / fly-01)))))"
"I doubt any pilot would say 'Emergency', but rather 'Mayday' RT "" NEWS: 'Emergency Emergency' was the final distress call","# ::snt I doubt any pilot would say 'Emergency', but rather 'Mayday' RT "" NEWS: 'Emergency Emergency' was the final distress call
(d / doubt-01
      :ARG0 (ii / i)
      :ARG1 (s / say-01
            :ARG0 (p / person
                  :ARG0-of (p2 / pilot-01)
                  :mod (a / any))
            :ARG1 (e / emergency)
            :ARG1-of (ii2 / instead-of-91
                  :ARG2 (s2 / say-01
                        :ARG0 p
                        :ARG1 (e2 / event
                              :name (n / name
                                    :op1 ""Mayday"")
                              :mod (b / broadcast-program
                                    :name n
                                    :op1 ""RT"")))))
      :ARG1-of (c / cause-01
            :ARG0 (c2 / call-03
                  :ARG1 (e3 / emergency)
                  :ARG2 (d2 / distress-01)
                  :mod (f / final))))"
its a scale. Emergency &lt; Mayday,"# ::snt its a scale. Emergency &lt; Mayday
(m / multi-sentence
      :snt1 (s / scale
            :domain (ii / it))
      :snt2 (a / and
            :op1 (e / emergency)
            :op2 (l / lt)
            :snt3 (f / festival
                  :name (n / name
                        :op1 ""Mayday""))))"
"No, then you would say PANPAN. Trust me, I'm a pilot! Besides: Mayday is when lives are in danger...","# ::snt No, then you would say PANPAN. Trust me, I'm a pilot! Besides: Mayday is when lives are in danger...
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (y / you)
            :ARG1 (p / PANPAN)
            :mod (t / then))
      :snt2 (t2 / trust-01
            :mode imperative
            :ARG0 y)
      :ARG1 (ii / i)
      :ARG1-of (c / cause-01
            :ARG0 (p2 / person
                  :ARG0-of (p3 / pilot-01)
                  :domain ii))
      :snt3 (d / danger
            :domain (f / festival
                  :name (n / name
                        :op1 ""Mayday""))
            :mod (b / besides)))"
but isnt declaring an emergency the proper procedure if you still have control of the situation ?,"# ::snt but isnt declaring an emergency the proper procedure if you still have control of the situation ?
(c / contrast-01
      :ARG2 (p / procedure
            :polarity -
            :mod (p2 / proper)
            :domain (d / declare-01
                  :ARG1 (e / emergency))
            :condition (c2 / control-01
                  :ARG0 (y / you)
                  :ARG1 (s / situation)
                  :mod (s2 / still))
            :polarity (a / amr-unknown)))"
"Normal descend rate for A320 is fpm. Now fpm (for minutes) which is much, but contrallable.","# ::snt Normal descend rate for A320 is fpm. Now fpm (for minutes) which is much, but contrallable.
(m / multi-sentence
      :snt1 (r / rate-entity-91
            :ARG1 (f / fpm)
            :ARG2 (d / descend-01
                  :ARG0 (a / aircraft-type
                        :name (n / name
                              :op1 ""A320"")))
            :ARG1-of (n2 / normal-02))
      :snt2 (r2 / rate-entity-91
            :ARG1 (f2 / fpm)
            :ARG2 (t / temporal-quantity
                  :quant 1
                  :unit (m2 / minute))
            :time (n3 / now)
            :mod (m3 / much)
            :ARG1-of (c / contrast-01
                  :ARG2 (c2 / contrallable
                        :domain r2))))"
"exactly. So emergency would be appropriate, for example in case of cabin decompression, right ?","# ::snt exactly. So emergency would be appropriate, for example in case of cabin decompression, right ?
(m / multi-sentence
      :snt1 (e / exact)
      :snt2 (a / appropriate-02
            :ARG1 (e2 / emergency)
            :ARG0-of (e3 / exemplify-01
                  :ARG1 (d / decompress-01
                        :ARG1 (c / cabin)))
            :ARG1-of (r / request-confirmation-91
                  :ARG2 (y / you))))"
That would certainly explain why pilots set steap descend. Maybe they passed too quickly (oxygen masks?),"# ::snt That would certainly explain why pilots set steap descend. Maybe they passed too quickly (oxygen masks?)
(m / multi-sentence
      :snt1 (e / explain-01
            :ARG0 (t / that)
            :ARG1 (t2 / thing
                  :ARG0-of (c / cause-01
                        :ARG1 (s / set-02
                              :ARG0 (p / person
                                    :ARG0-of (p2 / pilot-01))
                              :ARG1 (d / descend-01
                                    :ARG0 p
                                    :manner (s2 / steam)))))
            :manner (c2 / certain))
      :snt2 (p3 / possible-01
            :ARG1 (p4 / pass-07
                  :ARG1 (t3 / they)
                  :ARG1-of (q / quick-02
                        :ARG2-of (h / have-degree-91
                              :ARG1 p4
                              :ARG3 (t4 / too)))
                  :ARG1-of (m2 / mean-01
                        :ARG2 (m3 / mask
                              :mod (o / oxygen)
                              :polarity (a / amr-unknown))))))"
"if they had, its likely the descent rate wouldve been steeper and the speed not reduce, no ?","# ::snt if they had, its likely the descent rate wouldve been steeper and the speed not reduce, no ?
(l / likely-01
      :ARG1 (a / and
            :op1 (h / have-degree-91
                  :ARG1 (r / rate
                        :mod (d / descend-01))
                  :ARG2 (s / steep-01
                        :ARG1 r)
                  :ARG3 (m / more))
            :op2 (r2 / reduce-01
                  :polarity -
                  :ARG1 (s2 / speed)))
      :condition (e / event
            :mod (t / they))
      :ARG1-of (r3 / request-confirmation-91))"
"At that altitude you have about sec before you pass out. They started steep descend, reduced engine...","# ::snt At that altitude you have about sec before you pass out. They started steep descend, reduced engine...
(m / multi-sentence
      :snt1 (h / have-03
            :ARG0 (y / you)
            :ARG1 (a / about
                  :op1 (t / temporal-quantity
                        :quant 1
                        :unit (s / sec)))
            :time (b / before
                  :op1 (p / pass-out-11
                        :ARG0 y))
            :location (a2 / altitude
                  :mod (t2 / that)))
      :snt2 (a3 / and
            :op1 (s2 / start-01
                  :ARG0 (t3 / they)
                  :ARG1 (d / descend-01
                        :manner (s3 / steep)))
            :op2 (r / reduce-01
                  :ARG0 t3
                  :ARG1 (e / engine))))"
By the way: Cabin pressure loss in an airliner is a classic case for MAYDAY !,"# ::snt By the way: Cabin pressure loss in an airliner is a classic case for MAYDAY !
(c / case-04
      :mode expressive
      :ARG1 (l / lose-02
            :ARG1 (p / pressure
                  :mod (c2 / cabin))
            :location (a / airliner))
      :mod (c3 / classic)
      :time (d / date-entity
            :month 5)
      :mod (b / by-the-way))"
true...,"# ::snt true...
(t / true-01)"
whats the exact procedure btw ? What altitude would you drop down to ? at which rate of descent ?,"# ::snt whats the exact procedure btw ? What altitude would you drop down to ? at which rate of descent ?
(m / multi-sentence
      :snt1 (p / procedure
            :domain (a / amr-unknown)
            :mod (e / exact)
            :mod (b / by-the-way))
      :snt2 (d / drop-01
            :ARG0 (y / you)
            :ARG1 (a2 / altitude
                  :mod (a3 / amr-unknown))
            :ARG4 (a4 / amr-unknown
                  :degree-of (d2 / descend-01
                        :ARG0 y))
            :direction (d3 / down)))"
"immediately manual (autopilot off), throttle, oxygen masks + passngrs, radio call. All that in seconds?","# ::snt immediately manual (autopilot off), throttle, oxygen masks + passngrs, radio call. All that in seconds?
(m / multi-sentence
      :snt1 (a / and
            :op1 (m2 / manual
                  :domain (a2 / autopilot
                        :ARG1-of (o / off-01))
                  :time (ii / immediate))
            :op2 (t / throttle)
            :op3 (o2 / oxygen
                  :ARG1-of (a3 / add-02
                        :ARG2 (t2 / thing
                              :ARG0-of (m3 / mask-01))))
            :op4 (p / pass-03)
            :op5 (c / call-02
                  :medium (r / radio)))
      :snt2 (t3 / that
            :mod (a4 / all)
            :polarity (a5 / amr-unknown)
            :time (a6 / after
                  :op1 (n / now)
                  :quant (m4 / multiple
                        :op1 (t4 / temporal-quantity
                              :quant 1
                              :unit (s / second))))))"
"radio call then passengers, no ? sec isnt much it takes me longer to tweet sometimes","# ::snt radio call then passengers, no ? sec isnt much it takes me longer to tweet sometimes
(m / multi-sentence
      :snt1 (c / call-02
            :ARG1 (a / and
                  :op1 (r / radio)
                  :op2 (p / passenger)))
      :snt2 (n / no
            :polarity (a2 / amr-unknown))
      :snt3 (t / take-10
            :ARG0 (t2 / tweet-02
                  :ARG0 (ii / i)
                  :frequency (s / sometimes)
                  :ARG1-of (h / have-degree-91
                        :ARG2 (l / long-03
                              :ARG1 t2)
                        :ARG3 (m2 / more)))
            :ARG1 (m3 / much)))"
radio call to passengers: not a priority at all !!,"# ::snt radio call to passengers: not a priority at all !!
(p / priority
      :polarity -
      :domain (c / call-02
            :ARG1 (p2 / passenger)
            :medium (r / radio))
      :degree (a / at-all))"
"From Airbus FlightOps: When the cabin altitude rises above feet, the oxygen masks will deploy automatically","# ::snt From Airbus FlightOps: When the cabin altitude rises above feet, the oxygen masks will deploy automatically
(d / deploy-01
      :ARG1 (m / mask
            :purpose (o / oxygen))
      :manner (a / automatic)
      :time (r / rise-01
            :ARG1 (a2 / altitude
                  :mod (c / cabin))
            :ARG4 (a3 / above
                  :op1 (f / foot)))
      :source (c2 / company
            :name (n / name
                  :op1 ""Airbus""
                  :op2 ""FlightOps"")))"
What about icy sensors and software telling autopilot to dive as happened with AF447?,"# ::snt What about icy sensors and software telling autopilot to dive as happened with AF447?
(a / amr-unknown
      :topic (t / tell-01
            :ARG0 (a2 / and
                  :op1 (s / sensor
                        :mod (ii / ice))
                  :op2 (s2 / software))
            :ARG1 (d / dive-01
                  :ARG0 (a3 / autopilot))
            :ARG2 a3
            :ARG1-of (r / resemble-01
                  :ARG2 (e / event
                        :name (n / name
                              :op1 ""AF447"")))))"
I don't know about that. Graphs don't show a sign of leveling off at a certain altitude.,"# ::snt I don't know about that. Graphs don't show a sign of leveling off at a certain altitude.
(m / multi-sentence
      :snt1 (k / know-01
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (t / that))
      :snt2 (s / show-01
            :polarity -
            :ARG0 (g / graph)
            :ARG1 (s2 / signal-07
                  :ARG0 g
                  :ARG1 (l / level-off-04
                        :ARG1 g
                        :location (a / altitude
                              :mod (c / certain))))))"
plus af447 was exceptionnal weather conditions,"# ::snt plus af447 was exceptionnal weather conditions
(a / add-02
      :ARG1 (c / condition
            :mod (w / weather
                  :mod (e / except-01))
            :domain (ii / incident
                  :name (n / name
                        :op1 ""Aires""))))"
GW flight had same descent rate as near crash LH flight. Check or,"# ::snt GW flight had same descent rate as near crash LH flight. Check or
(m / multi-sentence
      :snt1 (h / have-03
            :ARG0 (f / fly-01
                  :mod (g / GW))
            :ARG1 (r / rate
                  :mod (d / descend-01)
                  :ARG1-of (s / same-01
                        :ARG2 (f2 / fly-01
                              :mod (f3 / fly-01
                                    :mod (p / product
                                          :name (n / name
                                                :op1 ""L LH"")))
                              :ARG1-of (n2 / near-02
                                    :ARG2 (c / crash-01))))))
      :snt2 (c2 / check-01
            :mode imperative
            :ARG0 (y / you)))"
With iced sensors it won't level off. Apparently a computer glitch - pilot would need to override system manually,"# ::snt With iced sensors it won't level off. Apparently a computer glitch - pilot would need to override system manually
(m / multi-sentence
      :snt1 (l / level-off-04
            :polarity -
            :ARG0 (s / sensor
                  :ARG1-of (ii / ice-03))
            :ARG1 (ii2 / it))
      :snt2 (a / appear-02
            :ARG1 (n / need-01
                  :ARG0 (p / person
                        :ARG0-of (p2 / pilot-01
                              :ARG1 (c / computer)))
                  :ARG1 (o / override-01
                        :ARG0 p
                        :ARG1 (s2 / system)
                        :manner (m2 / manual)))))"
"I've seen friends with nasal oxygen masks on (General Avation), just to fly over the Channel","# ::snt I've seen friends with nasal oxygen masks on (General Avation), just to fly over the Channel
(s / see-01
      :ARG0 (ii / i)
      :ARG1 (p / person
            :ARG0-of (h / have-rel-role-91
                  :ARG1 ii
                  :ARG2 (f / friend))
            :ARG0-of (h2 / have-03
                  :ARG1 (m / mask
                        :mod (o / oxygen
                              :mod (n / nose))
                        :ARG1-of (m2 / mean-01
                              :ARG2 (a / airborne
                                    :mod (g / general)))))
            :ARG0-of (f2 / fly-01
                  :path (o2 / over
                        :op1 (c / channel))
                  :mod (j / just))))"
that's just for the high,"# ::snt that's just for the high
(h / have-purpose-91
      :ARG1 (t / that)
      :ARG2 (h2 / high-02)
      :mod (j / just))"
"yes, and they have a bottle behind them with this tube connected. But it looks very stupid LOL","# ::snt yes, and they have a bottle behind them with this tube connected. But it looks very stupid LOL
(m / multi-sentence
      :snt1 (a / and
            :op2 (h / have-03
                  :ARG0 (t / they)
                  :ARG1 (b / bottle)
                  :location (b2 / behind
                        :op1 (t2 / they))
                  :instrument (t3 / tube
                        :mod (t4 / this)
                        :ARG1-of (c / connect-01))))
      :snt2 (c2 / contrast-01
            :ARG2 (l / look-02
                  :ARG0 (ii / it)
                  :ARG1 (s / stupid
                        :degree (v / very))
                  :ARG2-of (l2 / laugh-01
                        :mode expressive
                        :ARG0 (ii2 / i)
                        :manner (l3 / loud)))))"
"Plus they stayed more or less constant speed, which means they reduced throttle, so they were in control","# ::snt Plus they stayed more or less constant speed, which means they reduced throttle, so they were in control
(s / stay-01
      :ARG1 (t / they)
      :ARG3 (s2 / speed
            :mod (c / constant
                  :mod (m / more-or-less)))
      :mod (p / plus)
      :ARG1-of (m2 / mean-01
            :ARG2 (r / reduce-01
                  :ARG0 t
                  :ARG1 (t2 / throttle)
                  :ARG0-of (c2 / cause-01
                        :ARG1 (c3 / control-01
                              :ARG0 t)))))"
or think you do ? or it hasnt been assessed ?,"# ::snt or think you do ? or it hasnt been assessed ?
(o / or
      :op2 (t / think-01
            :polarity (a / amr-unknown)
            :ARG0 (y / you)
            :ARG1 (d / do-02
                  :ARG0 y))
      :op3 (a2 / assess-01
            :polarity -
            :ARG1 (ii / it)))"
Looks terribly off course on a map. Nothing earlier? Like much earlier?,"# ::snt Looks terribly off course on a map. Nothing earlier? Like much earlier?
(m / multi-sentence
      :snt1 (l / look-02
            :ARG1 (o / off-course
                  :degree (t / terribly))
            :location (m2 / map))
      :snt2 (n / nothing
            :time (b / before
                  :op1 (n2 / now))
            :ARG1-of (r / resemble-01
                  :ARG2 (b2 / before
                        :op1 (n3 / now)
                        :quant (m3 / much))
                  :polarity (a / amr-unknown))))"
So sad...prayers to the families and friends...,"# ::snt So sad...prayers to the families and friends...
(m / multi-sentence
      :snt1 (s / sad-02
            :degree (s2 / so))
      :snt2 (p / pray-01
            :ARG2 (a / and
                  :op1 (f / family)
                  :op2 (p2 / person
                        :ARG0-of (h / have-rel-role-91
                              :ARG2 (f2 / friend))))))"
