comment,amr
THIS IS MY FUCKING QUESTION!!!,"# ::snt THIS IS MY FUCKING QUESTION!!!
(q / question-01
      :mode expressive
      :ARG0 (ii / i)
      :ARG1 (t / this)
      :mod (f / fucking
            :mode expressive))"
"I could not agree more, it just plain sounds preposterous. And why did he NOT get OUT of the car. It has to be a huge LIE.","# ::snt I could not agree more, it just plain sounds preposterous. And why did he NOT get OUT of the car. It has to be a huge LIE.
(m / multi-sentence
      :snt1 (p / possible-01
            :polarity -
            :ARG1 (a / agree-01
                  :ARG0 (ii / i)
                  :ARG1-of (h / have-quant-91
                        :ARG3 (m2 / more)))
            :ARG1-of (c / cause-01
                  :ARG0 (s / sound-01
                        :ARG1 (ii2 / it)
                        :ARG2 (p2 / preposterous)
                        :mod (p3 / plain
                              :mod (j / just)))))
      :snt2 (a2 / and
            :op2 (g / get-05
                  :polarity -
                  :ARG1 (h2 / he)
                  :ARG2 (o / out-06
                        :ARG1 h2
                        :ARG2 (c2 / car))
                  :ARG1-of (c3 / cause-01
                        :ARG0 (a3 / amr-unknown)))
            :snt3 (ii3 / infer-01
                  :ARG1 (t / thing
                        :ARG1-of (l / lie-08)
                        :mod (h3 / huge)))))"
More like why was trying to pull into police car thru the window?,"# ::snt More like why was trying to pull into police car thru the window?
(r / resemble-01
      :ARG2 (t / try-01
            :ARG1 (p / pull-01
                  :ARG1 (c / car
                        :mod (p2 / police))
                  :ARG2 (t2 / through
                        :op1 (w / window)))
            :ARG1-of (c2 / cause-01
                  :ARG0 (a / amr-unknown)))
      :mod (m / more))"
. - Barney Fife would have tried to pull through a window too. Shades of Ernest T. Bass,"# ::snt . - Barney Fife would have tried to pull through a window too. Shades of Ernest T. Bass
(m / multi-sentence
      :snt1 (t / try-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Barney""
                        :op2 ""Fife""))
            :ARG1 (p2 / pull-01
                  :ARG0 p
                  :ARG2 (w / window))
            :mod (t2 / too))
      :snt2 (s / Shades
            :topic (p3 / person
                  :name (n2 / name
                        :op1 ""Ernest""
                        :op2 ""T.""
                        :op3 ""Bass""))))"
"Agreed, Dante!","# ::snt Agreed, Dante!
(s / say-01
      :mode expressive
      :ARG0 (ii / i)
      :ARG1 (a / agree-01
            :ARG0 ii)
      :ARG2 (p / person
            :name (n / name
                  :op1 ""Dante"")))"
". - The Barney Fife fear is real in , total excessive force is common practice. This was a murder!","# ::snt . - The Barney Fife fear is real in , total excessive force is common practice. This was a murder!
(m / multi-sentence
      :snt1 (r / real-04
            :ARG1 (f / fear-01
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""Barney""
                              :op2 ""Fife""))))
      :snt2 (p2 / practice-01
            :ARG1 (f2 / force-04
                  :ARG1-of (e / excessive-02
                        :degree (t / total)))
            :mod (c / common))
      :snt3 (m2 / murder-01
            :domain (t2 / this)))"
"Agree those Cops in are filled with so they hide behind military equipment, outrageous tactics","# ::snt Agree those Cops in are filled with so they hide behind military equipment, outrageous tactics
(a / agree-01
      :ARG0 (ii / i)
      :ARG1 (f / fill-01
            :ARG1 (c / cop
                  :mod (t / that))
            :ARG2 (t2 / thing
                  :ARG2-of (h / hide-01
                        :ARG1 c
                        :location (b / behind
                              :op1 (a2 / and
                                    :op1 (e / equipment
                                          :mod (m / military))
                                    :op2 (t3 / tactic
                                          :ARG0-of (o / outrageous-02))))))))"
Thank goodness the cops in aren't very bright. Makes it easier to sue their sorry asses!,"# ::snt Thank goodness the cops in aren't very bright. Makes it easier to sue their sorry asses!
(m / multi-sentence
      :snt1 (t / thank-01
            :ARG0 (ii / i)
            :ARG1 (g / goodness)
            :ARG2 (b / bright-03
                  :polarity -
                  :ARG1 (c / cop
                        :location (ii2 / inside))
                  :degree (v / very)))
      :snt2 (m2 / make-02
            :ARG1 (e / easy-05
                  :ARG1 (s / sue-02
                        :ARG1 (a / ass
                              :part-of (t2 / they)
                              :ARG1-of (s2 / sorry-01)))
                  :ARG2-of (h / have-degree-91
                        :ARG1 s
                        :ARG3 (m3 / more)))))"
"It's not about smarts, it's that they never had to justify their actions ""Rubber Stamped""","# ::snt It's not about smarts, it's that they never had to justify their actions ""Rubber Stamped""
(c / contrast-01
      :ARG1 (c2 / concern-02
            :polarity -
            :ARG0 (ii / it)
            :ARG1 (s / smart-06))
      :ARG2 (c3 / concern-02
            :ARG0 ii
            :ARG1 (o / obligate-01
                  :polarity -
                  :ARG1 (t / they)
                  :ARG2 (j / justify-01
                        :ARG0 t
                        :ARG1 (a / act-02
                              :ARG0 t)
                        :ARG2 (s2 / stamp-01
                              :ARG0 (p / person
                                    :name (n / name
                                          :op1 ""Rubber""))
                              :ARG1 t))
                  :time (e / ever))))"
To think after all this time a lame-assed story about stolen cigars is going to fly is beyond stupid!,"# ::snt To think after all this time a lame-assed story about stolen cigars is going to fly is beyond stupid!
(s / stupid
      :degree (b / beyond)
      :domain (t / think-01
            :ARG1 (f / fly-01
                  :ARG1 (s2 / story
                        :topic (c / cigar
                              :ARG1-of (s3 / steal-01))
                        :mod (a / ass
                              :mod (l / lame)))
                  :time (a2 / after
                        :op1 (t2 / time
                              :mod (t3 / this)
                              :mod (a3 / all))))))"
"Affluent people and those in authority take it as an affront to be questioned, especially by lesser people","# ::snt Affluent people and those in authority take it as an affront to be questioned, especially by lesser people
(t / take-04
      :ARG0 (a / and
            :op1 (p / person
                  :mod (a2 / affluence))
            :op2 (p2 / person
                  :mod (a3 / authority)))
      :ARG1 (ii / it)
      :ARG2 (a4 / affront-01
            :ARG0 (q / question-01
                  :ARG0 (p3 / person
                        :mod (e / especially)
                        :ARG1-of (h / have-quant-91
                              :ARG3 (l / less)))
                  :ARG1 a)
            :ARG1 a))"
AND that attitude will be their downfall too. Bet on it.,"# ::snt AND that attitude will be their downfall too. Bet on it.
(m / multi-sentence
      :snt1 (a / and
            :op2 (d / downfall
                  :poss (t / they)
                  :domain (a2 / attitude
                        :mod (t2 / that))
                  :mod (t3 / too)))
      :snt2 (b / bet-01
            :mode imperative
            :ARG0 (y / you)
            :ARG2 (ii / it)))"
Apparently they don't think people can think for themselves. How WRONG they are. Will live to regret it,"# ::snt Apparently they don't think people can think for themselves. How WRONG they are. Will live to regret it
(m / multi-sentence
      :snt1 (t / think-01
            :polarity -
            :ARG0 (t2 / they)
            :ARG1 (p / possible-01
                  :ARG1 (t3 / think-01
                        :ARG0 (p2 / person)
                        :mod (b / by-oneself)))
            :manner (a / apparent))
      :snt2 (w / wrong-04
            :ARG1 (t4 / they)
            :degree (s / so))
      :snt3 (l / live-02
            :ARG0 (ii / i)
            :ARG1-of (r / regret-01
                  :ARG0 ii
                  :ARG1 (ii2 / it))))"
Yes!,"# ::snt Yes!
(y / yes)"
TYPICAL OF COWARDS AND BULLIES,"# ::snt TYPICAL OF COWARDS AND BULLIES
(t / technical
      :domain (a / and
            :op1 (p / person
                  :ARG0-of (h / have-org-role-91
                        :ARG2 (p2 / president)))
            :op2 (b / bull)))"
And at least Barney Fife would have been HONEST from the first hour.,"# ::snt And at least Barney Fife would have been HONEST from the first hour.
(a / and
      :op2 (h / have-degree-91
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""Barney""
                        :op2 ""Fife""))
            :ARG2 (b / bad-07
                  :ARG1 p)
            :ARG3 (m / most)
            :time (h2 / hour
                  :ord (o / ordinal-entity
                        :value 1))
            :mod (a2 / at-least)))"
and his bullet would have been harmlessly in his pocket.,"# ::snt and his bullet would have been harmlessly in his pocket.
(a / and
      :op2 (b / be-located-at-91
            :ARG1 (b2 / bullet
                  :poss (h / he))
            :ARG2 (p / pocket
                  :poss h)
            :ARG1-of (h2 / harm-01
                  :polarity -)))"
YES!!,"# ::snt YES!!
(y / yes)"
That makes no sense at all.,"# ::snt That makes no sense at all.
(s / sense-02
      :polarity -
      :ARG1 (t / that)
      :mod (a / at-all))"
A good question. I still think the cop was on drugs and hallucinating.,"# ::snt A good question. I still think the cop was on drugs and hallucinating.
(m / multi-sentence
      :snt1 (q / question-01
            :ARG1-of (g / good-02))
      :snt2 (t / think-01
            :ARG0 (ii / i)
            :ARG1 (a / and
                  :op1 (d / drug-01
                        :ARG1 (c / cop))
                  :op2 (h / hallucinate-01
                        :ARG0 c))
            :mod (s / still)))"
"are they calling Mike Brown a suspect? If so, why didn't he stop them and check them?","# ::snt are they calling Mike Brown a suspect? If so, why didn't he stop them and check them?
(m / multi-sentence
      :snt1 (c / call-01
            :ARG0 (t / they)
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""Mike""
                        :op2 ""Brown""))
            :ARG2 (p2 / person
                  :ARG2-of (s / suspect-01))
            :polarity (a / amr-unknown))
      :snt2 (h / have-condition-91
            :ARG1 (c2 / cause-01
                  :ARG0 (a2 / amr-unknown)
                  :ARG1 (a3 / and
                        :op1 (s2 / stop-01
                              :polarity -
                              :ARG0 (h2 / he)
                              :ARG1 (t2 / they))
                        :op2 (c3 / check-01
                              :polarity -
                              :ARG0 h2
                              :ARG1 t2)))
            :ARG2 c))"
I'm all types of confused.,"# ::snt I'm all types of confused.
(c / confuse-01
      :ARG1 (ii / i)
      :mod (t / type
            :mod (a / all)))"
shits not adding up. What convenient store was robbed? Who are the witnesses that called it in?,"# ::snt shits not adding up. What convenient store was robbed? Who are the witnesses that called it in?
(m / multi-sentence
      :snt1 (a / add-up-04
            :polarity -
            :ARG1 (ii / it))
      :snt2 (r / rob-01
            :ARG1 (s / store
                  :mod (c / convenient)
                  :mod (a2 / amr-unknown)))
      :snt3 (p / person
            :ARG0-of (w / witness-01)
            :ARG0-of (c2 / call-in-04
                  :ARG1 ii)
            :ARG2 (a3 / amr-unknown)))"
that's what they took days to concort ?...those situations don't seem related at all,"# ::snt that's what they took days to concort ?...those situations don't seem related at all
(m / multi-sentence
      :snt1 (t / take-10
            :polarity (a / amr-unknown)
            :ARG0 (c / concort-01
                  :ARG0 (t2 / they))
            :ARG1 (m2 / multiple
                  :op1 (t3 / temporal-quantity
                        :quant 1
                        :unit (d / day))))
      :snt2 (s / seem-01
            :polarity -
            :ARG1 (r / relate-01
                  :ARG1 (s2 / situation
                        :mod (t4 / that))
                  :ARG2 (a2 / at-all))))"
They had splice some tapes together.,"# ::snt They had splice some tapes together.
(s / splice-01
      :ARG0 (t / they)
      :ARG1 (t2 / tape
            :quant (s2 / some))
      :manner (t3 / together))"
how convenient for this police chief....he needs to just go,"# ::snt how convenient for this police chief....he needs to just go
(c / convenient
      :degree (s / so)
      :beneficiary (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG1 (p2 / police)
                  :ARG2 (c2 / chief))
            :mod (t / this))
      :ARG0-of (c3 / cause-01
            :ARG1 (n / need-01
                  :ARG0 p
                  :ARG1 (g / go-02
                        :ARG0 p
                        :mod (j / just)))))"
"Agreed-also,if was suspect,why not just question him? Why tell him &amp; friend get off road,not stop them?","# ::snt Agreed-also,if was suspect,why not just question him? Why tell him &amp; friend get off road,not stop them?
(a / agree-01
      :ARG1 (a2 / and
            :op1 (h / have-condition-91
                  :ARG1 (c / cause-01
                        :ARG0 (a3 / amr-unknown)
                        :ARG1 (q / question-01
                              :polarity -
                              :ARG1 (s / suspect-01)
                              :mod (j / just)))
                  :ARG2 s)
            :op2 (c2 / cause-01
                  :ARG0 (a4 / amr-unknown)
                  :ARG1 (a5 / and
                        :op1 (t / tell-01
                              :ARG1 (g / get-05
                                    :ARG1 (a6 / and
                                          :op1 (h2 / he)
                                          :op2 (p / person
                                                :name (n / name
                                                      :op1 ""amp"")))
                                    :ARG2 (o / off
                                          :op1 (r / road)))
                              :ARG2 (p2 / person
                                    :ARG0-of (h3 / have-rel-role-91
                                          :ARG1 a6
                                          :ARG2 (f / friend))))
                        :op2 (s2 / stop-01
                              :polarity -
                              :ARG1 a6))
                  :condition s))
      :mod (a7 / also))"
The cops can't spin this unlawful shooting try as they may. Police Dept. credibility ruined with Ferguson community.,"# ::snt The cops can't spin this unlawful shooting try as they may. Police Dept. credibility ruined with Ferguson community.
(m / multi-sentence
      :snt1 (p / possible-01
            :polarity -
            :ARG1 (s / spin-03
                  :ARG0 (c / cop)
                  :ARG1 (t / try-01
                        :ARG1 (s2 / shoot-02
                              :mod (l / law
                                    :polarity -))
                        :mod (t2 / this))
                  :ARG1-of (p2 / possible-01)))
      :snt2 (r / ruin-01
            :ARG1 (c2 / credibility
                  :poss (d / department
                        :mod (p3 / police)))
            :prep-with (c3 / community
                  :mod (c4 / city
                        :name (n / name
                              :op1 ""Ferguson"")))))"
. - Spin still doesn't justify the murder versus the arrest. Why did the officer not call for backup?,"# ::snt . - Spin still doesn't justify the murder versus the arrest. Why did the officer not call for backup?
(m / multi-sentence
      :snt1 (j / justify-01
            :polarity -
            :ARG0 (s / spin-03)
            :ARG1 (v / versus
                  :op1 (m2 / murder-01)
                  :op2 (a / arrest-01))
            :mod (s2 / still))
      :snt2 (c / cause-01
            :ARG0 (a2 / amr-unknown)
            :ARG1 (c2 / call-03
                  :polarity -
                  :ARG0 (o / officer)
                  :ARG1 (b / backup))))"
"There's no spin, cops blew it from day one by not releasing shooter's name! Trying to control the narrative w/lies.","# ::snt There's no spin, cops blew it from day one by not releasing shooter's name! Trying to control the narrative w/lies.
(m / multi-sentence
      :snt1 (s / spin-03
            :polarity -
            :ARG1-of (c / cause-01
                  :ARG0 (b / blow-10
                        :ARG0 (c2 / cop)
                        :ARG1 (ii / it)
                        :ARG2 (r / release-01
                              :polarity -
                              :ARG0 c2
                              :ARG1 (n / name
                                    :poss (p / person
                                          :ARG0-of (s2 / shoot-02))))
                        :time (f / from
                              :op1 (d / day
                                    :ord (o / ordinal-entity
                                          :value 1)))))
            :snt2 (t / try-01
                  :ARG0 (y / you)
                  :ARG1 (c3 / control-01
                        :ARG0 y
                        :ARG1 (n2 / narrate-01)
                        :manner (l / lie-08)))))"
". - PD tried to justify probable cause, even st &amp; d shot, everything after = premeditated murder.","# ::snt . - PD tried to justify probable cause, even st &amp; d shot, everything after = premeditated murder.
(m / multi-sentence
      :snt1 (t / try-01
            :ARG0 (g / government-organization
                  :name (n / name
                        :op1 ""PD""))
            :ARG1 (j / justify-01
                  :ARG0 g
                  :ARG1 (c / cause
                        :mod (p / probable)
                        :example (a / and
                              :op1 (s / st-and-amp)
                              :op2 (s2 / shoot-02)
                              :mod (e / even)))))
      :snt2 (e2 / equal-01
            :ARG1 (e3 / everything
                  :time (a2 / after
                        :op1 s2)))
      :ARG2 (m2 / murder-01
            :ARG1-of (p2 / precede-01)))"
Probable cause for what? The alleged robbery that cop wasn't aware of (so it appears) or alleged assault of cop?,"# ::snt Probable cause for what? The alleged robbery that cop wasn't aware of (so it appears) or alleged assault of cop?
(m / multi-sentence
      :snt1 (c / cause-01
            :ARG1 (a / amr-unknown)
            :ARG1-of (p / possible-01))
      :snt2 (o / or
            :op1 (r / rob-01
                  :ARG0 (c2 / cop)
                  :ARG1-of (a2 / allege-01)
                  :ARG1-of (r2 / realize-01
                        :polarity -
                        :ARG0 c2
                        :ARG1-of (a3 / appear-02)))
            :op2 (a4 / assault-01
                  :ARG1 (c3 / cop)
                  :ARG1-of (a5 / allege-01))
            :polarity (a6 / amr-unknown)))"
". - PD new story is trying to establish: probable cause, justify st &amp; d shot, but can't justify extras.","# ::snt . - PD new story is trying to establish: probable cause, justify st &amp; d shot, but can't justify extras.
(t / try-01
      :ARG0 (s / story
            :ARG1-of (n / new-01)
            :ARG1-of (h / have-org-role-91
                  :ARG0 (g / government-organization
                        :name (n2 / name
                              :op1 ""PD""))))
      :ARG1 (e / establish-01
            :ARG0 s
            :ARG1 (c / contrast-01
                  :ARG1 (a / and
                        :op1 (c2 / cause
                              :mod (p / probable))
                        :op2 (j / justify-01
                              :op1 (s2 / st-and-amp)
                              :op2 (s3 / shoot-02))
                        :ARG1-of j))
            :ARG2 (p2 / possible-01
                  :polarity -
                  :ARG1 (j2 / justify-01
                        :ARG1 (e2 / extra)))))"
There is a very fishy fishing expedition going on in looking for excuses for murder.,"# ::snt There is a very fishy fishing expedition going on in looking for excuses for murder.
(g / go-on-15
      :ARG1 (e / expedition
            :purpose (f / fish-01)
            :mod (f2 / fishy
                  :degree (v / very))
            :purpose (l / look-01
                  :ARG1 (t / thing
                        :ARG2-of (e2 / excuse-02
                              :ARG1 (m / murder-01))))))"
"Another question, how would the police engage a suspect from INSIDE his vehicle? And, why not question nd suspect?","# ::snt Another question, how would the police engage a suspect from INSIDE his vehicle? And, why not question nd suspect?
(m / multi-sentence
      :snt1 (q / question-01
            :ARG1 (e / engage-01
                  :ARG0 (p / police)
                  :ARG1 (p2 / person
                        :ARG2-of (s / suspect-01))
                  :ARG2 (ii / inside
                        :op1 (v / vehicle
                              :poss p2))
                  :manner (a / amr-unknown))
            :mod (a2 / another))
      :snt2 (a3 / and
            :op2 (c / cause-01
                  :ARG0 (a4 / amr-unknown)
                  :ARG1 (q2 / question-01
                        :polarity -
                        :ARG1 p2
                        :ARG2-of (s2 / suspect-01)))))"
Racist LIE to make it seem like innocent black child was a criminal. It will not work!! Police LIE may start more riots,"# ::snt Racist LIE to make it seem like innocent black child was a criminal. It will not work!! Police LIE may start more riots
(m / multi-sentence
      :snt1 (l / lie-08
            :ARG0 (r / racist)
            :purpose (m2 / make-02
                  :ARG0 r
                  :ARG1 (s / seem-01
                        :ARG1 (c / criminal-03
                              :ARG2 (c2 / child
                                    :ARG1-of (b / black-05)
                                    :ARG1-of (ii / innocent-01))))))
      :snt2 (w / work-09
            :polarity -
            :ARG1 (ii2 / it))
      :snt3 (p / possible-01
            :ARG1 (s2 / start-01
                  :ARG0 (l2 / lie-08
                        :ARG0 (p2 / police))
                  :ARG1 (r2 / riot-01
                        :quant (m3 / more)))))"
"IF Brown committed strong arm robbery is one thing,but cop response is still another entirely. No riots. Justice","# ::snt IF Brown committed strong arm robbery is one thing,but cop response is still another entirely. No riots. Justice
(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (t / thing
                  :quant 1
                  :domain (r / respond-01
                        :ARG0 (c2 / cop)
                        :ARG2 (r2 / rob-01
                              :ARG0 (p / person
                                    :name (n / name
                                          :op1 ""Brown""))
                              :manner (a / arm
                                    :ARG1-of (s / strong-02))))
                  :condition (c3 / commit-02
                        :ARG0 p
                        :ARG1 r2))
            :ARG2 (t2 / thing
                  :mod (a2 / another)
                  :mod (s2 / still)
                  :mod (e / entire)))
      :snt2 (r3 / riot-01
            :polarity -)
      :snt3 (j / justice))"
It's a LIE. Police originally said confrontation started b/c cop told Michael to get out of street &amp; walk on sidewalk.,"# ::snt It's a LIE. Police originally said confrontation started b/c cop told Michael to get out of street &amp; walk on sidewalk.
(m / multi-sentence
      :snt1 (l / lie-08
            :ARG1 (ii / it))
      :snt2 (s / say-01
            :ARG0 (p / police)
            :ARG1 (s2 / start-01
                  :ARG1 (c / confront-01)
                  :ARG1-of (c2 / cause-01
                        :ARG0 (t / tell-01
                              :ARG0 (c3 / cop
                                    :ARG0-of (c4 / counsel-01))
                              :ARG1 (a / and
                                    :op1 (g / get-05
                                          :ARG1 (p2 / person
                                                :name (n / name
                                                      :op1 ""Michael""))
                                          :ARG2 (o / out-06
                                                :ARG1 p2
                                                :ARG2 (s3 / street)))
                                    :op2 (w / walk-01
                                          :ARG0 p2
                                          :ARG2 (s4 / sidewalk)))
                              :ARG2 p2))
                  :mod (o2 / original))))"
"There are pics of ""strong arm robbery"" clothing description/size of assailant similar BUT cop deadly force? No!","# ::snt There are pics of ""strong arm robbery"" clothing description/size of assailant similar BUT cop deadly force? No!
(c / contrast-01
      :ARG1 (p / pic
            :topic (s / slash
                  :op1 (d / describe-01
                        :ARG1 (r / rob-01
                              :mod (a / arm
                                    :ARG1-of (s2 / strong-02)))
                        :ARG2 (c2 / clothing))
                  :op2 (s3 / size
                        :poss (p2 / person
                              :ARG0-of (a2 / assail-01)))
                  :ARG1-of (r2 / resemble-01)))
      :ARG2 (f / force-04
            :ARG0 (c3 / cop)
            :ARG2 (k / kill-01)
            :polarity (a3 / amr-unknown)))"
"Alasscan it's a lie. Pics are fake. No robbery was reported! If true, police would have said it last week to stop riots","# ::snt Alasscan it's a lie. Pics are fake. No robbery was reported! If true, police would have said it last week to stop riots
(m / multi-sentence
      :snt1 (p / possible-01
            :polarity -
            :ARG1 (c / claim-01
                  :ARG1 (l / lie-08
                        :ARG1 (ii / it))))
      :snt2 (f / fake-02
            :ARG1 (p2 / pic))
      :snt3 (r / report-01
            :polarity -
            :ARG1 (r2 / rob-01))
      :snt4 (s / say-01
            :ARG0 (p3 / police)
            :ARG1 (ii2 / it)
            :time (w / week
                  :mod (l2 / last))
            :purpose (s2 / stop-01
                  :ARG0 p3
                  :ARG1 (r3 / riot-01))
            :condition (t / true-01
                  :ARG1 (ii3 / it))))"
". - Even if robbery took place &amp; stop legal, actions after st &amp; d shot &amp; after put = MURDER","# ::snt . - Even if robbery took place &amp; stop legal, actions after st &amp; d shot &amp; after put = MURDER
(h / have-concession-91
      :ARG1 (a / and
            :op1 (s / stop-01
                  :mode imperative
                  :ARG0 (y / you)
                  :ARG1 (a2 / act-02
                        :ARG0 y
                        :ARG1-of (l / legal-02))
                  :time (a3 / after
                        :op1 (a4 / and
                              :op1 (r / rape-01)
                              :op2 (l2 / law))))
            :op2 (s2 / shoot-02
                  :mode imperative
                  :ARG0 y
                  :time (a5 / after
                        :op1 (p / put-03)))
            :op3 (e / equal-01
                  :ARG1 a4
                  :ARG2 (m / murder-01)))
      :ARG2 (e2 / even-if
            :op1 (a6 / and
                  :op1 (r2 / rob-01
                        :op2 (a7 / amp)))))"
"IMO no shot should've happened. Call was unarmed suspect, cop had full description, easy to find where he lived","# ::snt IMO no shot should've happened. Call was unarmed suspect, cop had full description, easy to find where he lived
(m / multi-sentence
      :snt1 (o / opine-01
            :ARG0 (ii / i)
            :ARG1 (r / recommend-01
                  :polarity -
                  :ARG1 (s / shoot-02)))
      :snt2 (a / and
            :op1 (s2 / suspect-01
                  :ARG1 (c / call-02)
                  :ARG1-of (a2 / arm-01
                        :polarity -))
            :op2 (h / have-03
                  :ARG0 (c2 / cop)
                  :ARG1 (d / describe-01
                        :ARG0 c2
                        :ARG1-of (f / full-09)))
            :op3 (e / easy-05
                  :ARG1 (f2 / find-01
                        :ARG1 (t / thing
                              :location-of (l / live-01
                                    :ARG0 (h2 / he)))))))"
Besides a person who committed a robbery wouldn't call attention to himself by walking in the middle of the street. It's a lie.,"# ::snt Besides a person who committed a robbery wouldn't call attention to himself by walking in the middle of the street. It's a lie.
(m / multi-sentence
      :snt1 (c / call-01
            :polarity -
            :ARG0 (p / person
                  :ARG0-of (r / rob-01)
                  :mod (b / besides)
                  :ARG1-of c)
            :ARG2 (a / attend-02
                  :ARG0 p
                  :ARG1 p)
            :manner (w / walk-01
                  :ARG0 p
                  :ARG2 (m2 / middle
                        :part-of (s / street))))
      :snt2 (l / lie-08
            :ARG1 (ii / it)))"
Sadly friend of was in store also &amp; has admitted to it,"# ::snt Sadly friend of was in store also &amp; has admitted to it
(a / and
      :op1 (s / sad-02
            :ARG1 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (p2 / person
                              :name (n / name
                                    :op1 ""&amp""))
                        :ARG2 (f / friend))
                  :location (s2 / store)
                  :mod (a2 / also)))
      :op2 (a3 / admit-01
            :ARG0 p2
            :ARG1 (ii / it)))"
Police lied! Chief now says Michaels's friend was NOT involved in any robbery.,"# ::snt Police lied! Chief now says Michaels's friend was NOT involved in any robbery.
(m / multi-sentence
      :snt1 (l / lie-08
            :ARG0 (p / police))
      :snt2 (s / say-01
            :ARG0 (p2 / person
                  :ARG0-of (h / have-org-role-91
                        :ARG2 (c / chief)))
            :ARG1 (ii / involve-01
                  :polarity -
                  :ARG1 (p3 / person
                        :ARG0-of (h2 / have-rel-role-91
                              :ARG1 (p4 / person
                                    :name (n / name
                                          :op1 ""Michaels""))
                              :ARG2 (f / friend)))
                  :ARG2 (r / rob-01
                        :mod (a / any)))
            :time (n2 / now)))"
"Heard that friend was not going to be ""charged"" in any robbery since video shows it was other person","# ::snt Heard that friend was not going to be ""charged"" in any robbery since video shows it was other person
(h / hear-01
      :ARG0 (h2 / heard-01
            :ARG1 (c / charge-05
                  :polarity -
                  :ARG1 (p / person
                        :mod (t / that)
                        :ARG0-of (h3 / have-rel-role-91
                              :ARG2 (f / friend)))
                  :ARG2 (r / rob-01
                        :mod (a / any))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (s / show-01
                              :ARG0 (v / video)
                              :ARG1 (p2 / person
                                    :mod (o / other)
                                    :domain r))))))"
"Who is 'other person?' st police LIE saying friend confessed. Under pressure, they now say he was not involved","# ::snt Who is 'other person?' st police LIE saying friend confessed. Under pressure, they now say he was not involved
(m / multi-sentence
      :snt1 (p / person
            :mod (o / other)
            :domain (a / amr-unknown)
            :ARG1-of (l / lie-08
                  :ARG0 (p2 / police))
            :ARG0-of (s / say-01
                  :ARG1 (c / confess-01
                        :ARG0 (p3 / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG2 (f / friend))))))
      :snt2 (s2 / say-01
            :ARG0 (t / they)
            :ARG1 (ii / involve-01
                  :polarity -
                  :ARG1 (h2 / he))
            :time (n / now)
            :manner (p4 / pressure-01
                  :ARG1 t)))"
"st interview mentions cigarillos &amp; told lawyer. Video shows he gave back, not Mike","# ::snt st interview mentions cigarillos &amp; told lawyer. Video shows he gave back, not Mike
(m / multi-sentence
      :snt1 (m2 / mention-01
            :ARG0 (ii / interview-01
                  :mod (s / st))
            :ARG1 (c / company
                  :name (n / name
                        :op1 "" cigarillos""
                        :op2 ""&amp"")))
      :snt2 (t / tell-01
            :ARG0 (l / lawyer)
            :ARG2 (p / person))
      :snt3 (s2 / show-01
            :ARG0 (v / video)
            :ARG1 (c2 / contrast-01
                  :ARG1 (g / give-back-03
                        :ARG0 (h / he))
                  :ARG2 (g2 / give-back-03
                        :polarity -
                        :ARG0 (p2 / person
                              :name (n2 / name
                                    :op1 ""Mike""))))))"
Max are you listening to what the Chief of Police said or do you just want to believe lies? Listen carefully,"# ::snt Max are you listening to what the Chief of Police said or do you just want to believe lies? Listen carefully
(m / multi-sentence
      :snt1 (a / ask-01
            :ARG1 (t / truth-value
                  :polarity-of (l / listen-01
                        :ARG0 (y / you)
                        :ARG1 (t2 / thing
                              :ARG1-of (s / say-01
                                    :ARG0 (p / person
                                          :ARG0-of (h / have-org-role-91
                                                :ARG1 (p2 / police)
                                                :ARG2 (c / chief)))))))
            :ARG2 p
            :name (n / name
                  :op1 ""Max""))
      :snt2 (w / want-01
            :ARG0 (y2 / you)
            :ARG1 (b / believe-01
                  :ARG0 y2
                  :ARG1 t2
                  :ARG1-of (l2 / lie-08)))
      :mod (j / just)
      :snt3 (l3 / listen-01
            :mode imperative
            :ARG0 (y3 / you)
            :manner (c2 / careful)))"
Don't understand your argument - we're both on same side. Was repeating what Dorian said. Also Chief walked stmt back later,"# ::snt Don't understand your argument - we're both on same side. Was repeating what Dorian said. Also Chief walked stmt back later
(m / multi-sentence
      :snt1 (u / understand-01
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (a / argue-01
                  :ARG0 (y / you))
            :ARG1-of (c / cause-01
                  :ARG0 (s / side-01
                        :ARG0 (w / we
                              :mod (b / both))
                        :ARG1-of (s2 / same-01))))
      :snt2 (r / repeat-01
            :ARG0 (ii2 / i)
            :ARG1 (t / thing
                  :ARG1-of (s3 / say-01
                        :ARG0 (p / person
                              :name (n / name
                                    :op1 ""Doran"")))))
      :snt3 (w2 / walk-01
            :ARG0 (p2 / person
                  :name n
                  :op1 ""Chief""))
      :direction (b2 / back)
      :mod (a2 / also)
      :time (a3 / after)
      :time (d / date-entity
            :dayperiod (n2 / night)))"
