comment,amr
"hallelujah, enjoy the virgins","# ::snt hallelujah, enjoy the virgins
(e / enjoy-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (v / virgin)
      :mod (h / hallelujah
            :mode expressive))"
good thats a start,"# ::snt good thats a start
(g / good-02
      :ARG1 (s / start-01
            :ARG2 (t / that)))"
"Got the bastards! "": AFP: suspected gunmen have been killed","# ::snt Got the bastards! "": AFP: suspected gunmen have been killed
(s / say-01
      :ARG0 (p / publication
            :name (n / name
                  :op1 ""AFP""))
      :ARG1 (k / kill-01
            :ARG1 (g / gunman
                  :ARG2-of (s2 / suspect-01))))"
: AFP: suspected gunmen have been killed Hoping that this is now the end,"# ::snt : AFP: suspected gunmen have been killed Hoping that this is now the end
(s / say-01
      :ARG0 (p / publication
            :name (n / name
                  :op1 ""AFP""))
      :ARG1 (k / kill-01
            :ARG1 (g / gunman
                  :ARG2-of (s2 / suspect-01))
            :ARG1-of (c / cause-01
                  :ARG0 (h / hope-01
                        :ARG1 (e / end-01
                              :ARG1 (t / this)
                              :time (n2 / now))))))"
it will never be the end,"# ::snt it will never be the end
(e / end-01
      :polarity -
      :ARG1 (ii / it)
      :time (e2 / ever))"
: AFP: suspected gunmen have been killed &lt;&lt;&lt;Was inevitable,"# ::snt : AFP: suspected gunmen have been killed &lt;&lt;&lt;Was inevitable
(s / say-01
      :ARG0 (p / publication
            :name (n / name
                  :op1 ""AFP""))
      :ARG1 (a / and
            :op1 (k / kill-01
                  :ARG1 (g / gunman
                        :ARG2-of (s2 / suspect-01)))
            :op2 (p2 / possible-01
                  :polarity -
                  :ARG1 (a2 / avoid-01
                        :ARG1 k))))"
: AFP: suspected gunmen have been killed vive la France,"# ::snt : AFP: suspected gunmen have been killed vive la France
(s / say-01
      :ARG0 (p / publication
            :name (n / name
                  :op1 ""AFP""))
      :ARG1 (k / kill-01
            :ARG1 (g / gunman
                  :ARG2-of (s2 / suspect-01))
            :location (c / city
                  :name (n2 / name
                        :op1 ""Vive""
                        :op2 ""la""
                        :op3 ""France""))))"
: AFP: suspected gunmen have been killed BANG BANG NIGGA,"# ::snt : AFP: suspected gunmen have been killed BANG BANG NIGGA
(s / say-01
      :ARG0 (p / publication
            :name (n / name
                  :op1 ""AFP""))
      :ARG1 (k / kill-01
            :ARG1 (g / gunman
                  :ARG2-of (s2 / suspect-01))
            :location (c / city
                  :name (n2 / name
                        :op1 ""Bang""
                        :op2 ""Bang""
                        :op3 ""Nigga""))))"
"like a Bogo',' and done","# ::snt like a Bogo',' and done
(a / and
      :op1 (r / resemble-01
            :ARG2 (b / boogie))
      :op2 (b2 / be-done-08))"
Great outcome. All murderers dead. All hostages freed. Great job by French police,"# ::snt Great outcome. All murderers dead. All hostages freed. Great job by French police
(m / multi-sentence
      :snt1 (o / outcome
            :mod (g / great))
      :snt2 (d / die-01
            :ARG1 (p / person
                  :ARG0-of (m2 / murder-01)
                  :mod (a / all)))
      :snt3 (f / free-01
            :ARG0 (p2 / police
                  :mod (c / country
                        :name (n / name
                              :op1 ""France"")))
            :ARG1 (h / hostage
                  :mod (a2 / all)))
      :snt4 (j / job
            :mod (g2 / great)))"
: AFP: suspected gunmen have been killed,"# ::snt : AFP: suspected gunmen have been killed
(s / say-01
      :ARG0 (p / publication
            :name (n / name
                  :op1 ""AFP""))
      :ARG1 (k / kill-01
            :ARG1 (g / gunman
                  :ARG2-of (s2 / suspect-01))))"
good,"# ::snt good
(g / good-02)"
: AFP: suspected gunmen have been killed yayyy,"# ::snt : AFP: suspected gunmen have been killed yayyy
(s / say-01
      :ARG0 (p / publication
            :name (n / name
                  :op1 ""AFP""))
      :ARG1 (k / kill-01
            :ARG1 (g / gunman
                  :ARG2-of (s2 / suspect-01))
            :mod (y / yay)))"
go on shoot em again just to make sure,"# ::snt go on shoot em again just to make sure
(g / go-03
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (s / shoot-02
            :ARG0 y
            :ARG1 (t / they)
            :mod (a / again)
            :purpose (e / ensure-01
                  :ARG0 y
                  :mod (j / just))))"
stick em full of pencils.,"# ::snt stick em full of pencils.
(s / stick-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (t / they)
      :ARG2 (f / full-09
            :ARG1 t
            :ARG2 (p / pencil)))"
and shove a copy of up their ass,"# ::snt and shove a copy of up their ass
(a / and
      :op2 (s / shove-01
            :ARG0 (t / they
                  :part (a2 / ass))
            :ARG1 (t2 / thing
                  :ARG1-of (c / copy-01))
            :ARG2 a2
            :direction (u / up)))"
then send them to the countries the supported as a sign. We are not backing down,"# ::snt then send them to the countries the supported as a sign. We are not backing down
(m / multi-sentence
      :snt1 (s / send-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (t / they)
            :ARG2 (c / country
                  :ARG1-of (s2 / support-01)
                  :ARG0-of (s3 / signal-07))
            :time (t2 / then))
      :snt2 (b / back-down-11
            :polarity -
            :ARG0 (w / we)))"
"that's a good idea, just attach a note saying "" I think this is your shit have it back""","# ::snt that's a good idea, just attach a note saying "" I think this is your shit have it back""
(a / and
      :op1 (ii / idea
            :ARG1-of (g / good-02)
            :domain (t / that))
      :op2 (a2 / attach-01
            :ARG1 (n / note
                  :ARG0-of (s / say-01
                        :ARG1 (t2 / think-01
                              :ARG0 (ii2 / i)
                              :ARG1 (s2 / shit
                                    :poss (y / you)
                                    :domain (t3 / this)))))
            :mod (j / just)
            :manner (b / back)))"
wonder if get the impression we are sick of these extremists and how the government just let them in,"# ::snt wonder if get the impression we are sick of these extremists and how the government just let them in
(w / wonder-01
      :ARG0 (ii / i)
      :ARG1 (t / truth-value
            :polarity-of (ii2 / impression-03
                  :ARG0 (w2 / we)
                  :ARG1 (a / and
                        :op1 (s / sick-04
                              :ARG0 (e / extremist
                                    :mod (t2 / this))
                              :ARG1 w2)
                        :op2 (l / let-01
                              :ARG0 (g / government-organization
                                    :ARG0-of (g2 / govern-01))
                              :ARG1 (ii3 / inside)
                              :mod (j / just))))))"
"it could never happen here, we don't have a paper with enough balls to publish anything that offends Muslims","# ::snt it could never happen here, we don't have a paper with enough balls to publish anything that offends Muslims
(a / and
      :op1 (p / possible-01
            :polarity -
            :ARG1 (ii / it)
            :location (h / here)
            :time (e / ever))
      :op2 (h2 / have-03
            :polarity -
            :ARG0 (w / we)
            :ARG1 (p2 / paper
                  :ARG1 (b / ball
                        :ARG1-of (h3 / have-quant-91
                              :ARG3 (e2 / enough)
                              :ARG6 (p3 / publish-01
                                    :ARG0 p2
                                    :ARG1 (a2 / anything
                                          :ARG0-of (o / offend-01
                                                :ARG1 (p4 / person
                                                      :mod (r / religious-group
                                                            :name (n / name
                                                                  :op1 ""Muslim"")))))))))
            :ARG0 p2))"
true. Perhaps they should all grow some,"# ::snt true. Perhaps they should all grow some
(m / multi-sentence
      :snt1 (t / true-01)
      :snt2 (p / possible-01
            :ARG1 (r / recommend-01
                  :ARG1 (g / grow-03
                        :ARG0 (t2 / they
                              :mod (a / all))
                        :quant (s / some)))))"
sod watching them and then them escaping being watched. If they support terrorism. .send them out of our country,"# ::snt sod watching them and then them escaping being watched. If they support terrorism. .send them out of our country
(m / multi-sentence
      :snt1 (a / and
            :op1 (w / watch-01
                  :ARG1 (t / they))
            :op2 (e / escape-01
                  :ARG0 t
                  :ARG1 (w2 / watch-01
                        :ARG1 t)
                  :time (t2 / then)))
      :snt2 (s / send-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (t3 / they)
            :ARG2 (o / out-06
                  :ARG1 t3
                  :ARG2 (c / country
                        :poss (w3 / we)))
            :condition (s2 / support-01
                  :ARG0 t3
                  :ARG1 (t4 / terrorism))))"
