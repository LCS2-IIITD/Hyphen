comment,amr
uhmmm botox sesions far more likely anyway,"# ::snt uhmmm botox sesions far more likely anyway
(l / likely-01
      :ARG1 (s / sesion
            :mod (b / botox))
      :mod (a / anyway)
      :mod (u / ummm
            :mode expressive)
      :ARG2-of (h / have-degree-91
            :ARG1 s
            :ARG3 (m / more
                  :quant (f / far))))"
And how Europe will behave in such a case?,"# ::snt And how Europe will behave in such a case?
(a / and
      :op2 (b / behave-01
            :ARG0 (c / continent
                  :name (n / name
                        :op1 ""Europe""))
            :ARG1 (a2 / amr-unknown)
            :condition (c2 / case-03
                  :mod (s / such))))"
Three Scenarios For A Succession In by via v,"# ::snt Three Scenarios For A Succession In by via v
(b / byline-91
      :ARG0 (p / publication
            :name (n / name
                  :op1 ""v""))
      :ARG1 (s / scenario
            :quant 3
            :topic (s2 / succeed-01)))"
What are your thoughts on ?,"# ::snt What are your thoughts on ?
(t / think-01
      :ARG0 (y / you)
      :ARG1 (a / amr-unknown))"
"Either a simple flue, more serious illness or serious domestic political problems.","# ::snt Either a simple flue, more serious illness or serious domestic political problems.
(o / or
      :op1 (f / flue
            :ARG1-of (s / simple-02))
      :op2 (ii / ill-01
            :ARG1-of (h / have-degree-91
                  :ARG2 (s2 / serious-02
                        :ARG1 ii)
                  :ARG3 (m / more)))
      :op3 (p / problem
            :mod (p2 / politics)
            :mod (d / domestic)
            :ARG1-of (s3 / serious-02)))"
Putin'll be made a tsar (and the newborn an heir). Back serfdom as Zorkin suggested.,"# ::snt Putin'll be made a tsar (and the newborn an heir). Back serfdom as Zorkin suggested.
(m / multi-sentence
      :snt1 (m2 / make-01
            :ARG1 (a / and
                  :op1 (t / tsar)
                  :op2 (h / heir)
                  :domain (p / person
                        :name (n / name
                              :op1 ""Putin"")
                        :ARG1-of (b / bear-02
                              :ARG1-of (n2 / new-01)))))
      :snt2 (s / serfdom
            :mod (b2 / back)
            :ARG1-of (s2 / suggest-01
                  :ARG0 (p2 / person
                        :name (n3 / name
                              :op1 ""Zorkin"")))))"
