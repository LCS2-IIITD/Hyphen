comment,amr
Yay Tony will save the day,"# ::snt Yay Tony will save the day
(s / save-02
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Tony""))
      :ARG1 (d / day)
      :mod (y / yay))"
Source from Ray Hadley shows confirmed same report of gunman claiming there are four packages around Sydney,"# ::snt Source from Ray Hadley shows confirmed same report of gunman claiming there are four packages around Sydney
(c / confirm-01
      :ARG0 (t / thing
            :ARG1-of (s / source-01
                  :ARG2 (p / person
                        :name (n / name
                              :op1 ""Ray""
                              :op2 ""Hadley""))))
      :ARG1 (r / report-01
            :ARG1 (c2 / claim-01
                  :ARG0 (g / gunman)
                  :ARG1 (p2 / package
                        :quant 4
                        :location (a / around
                              :op1 (c3 / city
                                    :name (n2 / name
                                          :op1 ""Sydney"")))))
            :ARG1-of (s2 / same-01)))"
four packages better get Lambie on the case are they large ?,"# ::snt four packages better get Lambie on the case are they large ?
(m / multi-sentence
      :snt1 (h / have-degree-91
            :ARG1 (g / get-01
                  :ARG1 (c / case-03
                        :ARG0 (p / person
                              :name (n / name
                                    :op1 ""Lambie"")))
                  :ARG2 (p2 / package
                        :quant 4))
            :ARG2 (g2 / good-02
                  :ARG1 g)
            :ARG3 (m2 / more))
      :snt2 (l / large
            :domain p2
            :polarity (a / amr-unknown)))"
"is this same as the ""call"" to Ray Hadley by ""POI"" from am? Or new info?","# ::snt is this same as the ""call"" to Ray Hadley by ""POI"" from am? Or new info?
(m / multi-sentence
      :snt1 (s / same-01
            :polarity (a / amr-unknown)
            :ARG1 (t / this)
            :ARG2 (c / call-02
                  :ARG0 (g / government-organization
                        :name (n / name
                              :op1 ""OPI""))
                  :ARG1 (p / person
                        :name (n2 / name
                              :op1 ""Ray""
                              :op2 ""Hadley""))
                  :ARG2 g))
      :snt2 (o / or
            :op2 (ii / information
                  :ARG1-of (n3 / new-01))
            :polarity a))"
fool bought the wrong flag with him.,"# ::snt fool bought the wrong flag with him.
(b / buy-01
      :ARG0 (f / fool)
      :ARG1 (f2 / flag
            :ARG1-of (w / wrong-04))
      :ARG4 (h / he))"
Deliver him the Australian SAS instead.,"# ::snt Deliver him the Australian SAS instead.
(d / deliver-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (m / military
            :name (n / name
                  :op1 ""Australian""
                  :op2 ""SAS""))
      :ARG2 (h / he)
      :ARG1-of (ii / instead-of-91))"
haha getting your news from is like watching Looney Tunes for Social skills ha,"# ::snt haha getting your news from is like watching Looney Tunes for Social skills ha
(r / resemble-01
      :ARG1 (g / get-01
            :ARG0 (y / you)
            :ARG1 (n / news)
            :ARG2 (a / amr-unknown))
      :ARG2 (w / watch-01
            :ARG0 y
            :ARG1 (b / broadcast-program
                  :name (n2 / name
                        :op1 ""Looney""
                        :op2 ""Tunes""))
            :purpose (s / skill
                  :topic (s2 / social-03)))
      :mod (h / haha))"
"&amp; really an flag? Surely when packing his shot gun, that would be the first item he'd pack!","# ::snt &amp; really an flag? Surely when packing his shot gun, that would be the first item he'd pack!
(m / multi-sentence
      :snt1 (a / and
            :op2 (f / flag
                  :ARG1-of (r / real-04)
                  :polarity (a2 / amr-unknown)))
      :snt2 (h / have-condition-91
            :ARG1 (p / pack-01
                  :ARG0 (h2 / he)
                  :ARG1 (ii / item
                        :ord (o / ordinal-entity
                              :value 1))
                  :ARG1-of (s / sure-02))
            :ARG2 (p2 / pack-01
                  :ARG0 h2
                  :ARG1 (g / gun
                        :ARG1-of (s2 / shoot-02)
                        :poss h2))
            :polarity (a3 / amr-unknown)))"
pathetic islamist coward,"# ::snt pathetic islamist coward
(c / coward
      :mod (r / religious-group
            :name (n / name
                  :op1 ""Islamism""))
      :mod (p / pathetic))"
take the shot...,"# ::snt take the shot...
(s / shoot-02
      :mode imperative
      :ARG0 (y / you))"
terminate him.doing this innocent ppl.give the coward a uniform&amput him on battlefield see how tough he is,"# ::snt terminate him.doing this innocent ppl.give the coward a uniform&amput him on battlefield see how tough he is
(m / multi-sentence
      :snt1 (t / terminate-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (h / he))
      :snt2 (d / do-02
            :ARG0 (y2 / you)
            :ARG1 (t2 / this)
            :ARG1-of (ii / innocent-01))
      :snt3 (a / and
            :op1 (g / give-01
                  :mode imperative
                  :ARG0 (y3 / you)
                  :ARG1 (u / uniform)
                  :ARG2 (c / coward))
            :op2 (a2 / amput-00
                  :mode imperative
                  :ARG0 y3
                  :ARG2 (c2 / coward)
                  :location (b / battlefield))
            :ARG0-of (c3 / cause-01
                  :ARG1 (s / see-01
                        :ARG0 y3
                        :ARG1 (t3 / tough-03
                              :ARG1 (h2 / he)
                              :degree (s2 / so))))))"
