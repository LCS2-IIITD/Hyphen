comment,amr
depends on the type of battery,"# ::snt depends on the type of battery
(d / depend-01
      :ARG1 (b / battery
            :mod (t / type)))"
What type would this be good for?,"# ::snt What type would this be good for?
(g / good-04
      :ARG1 (t / this)
      :ARG2 (t2 / type
            :mod (a / amr-unknown)))"
Nicad,"# ::snt Nicad
(p / person
      :name (n / name
            :op1 ""Nicad""))"
Ive heard youre supposed to let it fully die then fully charge it,"# ::snt Ive heard youre supposed to let it fully die then fully charge it
(h / hear-01
      :ARG0 (ii / i)
      :ARG1 (s / suppose-02
            :ARG1 (y / you)
            :ARG2 (l / let-01
                  :ARG0 y
                  :ARG1 (a / and
                        :op1 (d / die-01
                              :ARG1 (ii2 / it)
                              :degree (f / full))
                        :op2 (c / charge-03
                              :ARG0 y
                              :ARG1 ii2
                              :degree (f2 / full))))))"
"This used to be true but not really anymore. Most batteries now have a digital calibration tool built into them so they don't need to be manually ""calibrated"" by charging it or not charging it a certain way before use.","# ::snt This used to be true but not really anymore. Most batteries now have a digital calibration tool built into them so they don't need to be manually ""calibrated"" by charging it or not charging it a certain way before use.
(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (t / true-01
                  :ARG1 (t2 / this)
                  :time (u / use-03))
            :ARG2 (t3 / true-01
                  :polarity -
                  :ARG1 t2
                  :time (a / anymore)))
      :snt2 (h / have-03
            :ARG0 (b / battery
                  :quant (m2 / most))
            :ARG1 (t4 / tool
                  :instrument-of (c2 / calibrate-01
                        :ARG1 b
                        :mod (d / digital))
                  :ARG1-of (b2 / build-01
                        :destination b))
            :time (n / now)
            :ARG0-of (c3 / cause-01
                  :ARG1 (n2 / need-01
                        :polarity -
                        :ARG0 b
                        :ARG1 (o / or
                              :op1 (c4 / charge-01
                                    :ARG0 b
                                    :ARG1 b
                                    :manner (m3 / manual))
                              :op2 (c5 / charge-01
                                    :polarity -
                                    :ARG0 b
                                    :ARG1 b
                                    :manner (c6 / certain)
                                    :time (b3 / before
                                          :op1 (u2 / use-01
                                                :ARG1 b))))))))"
Okay cool. I just haven't thought about it in so long I didn't know if it was still relevant.,"# ::snt Okay cool. I just haven't thought about it in so long I didn't know if it was still relevant.
(m / multi-sentence
      :snt1 (c / cool-04
            :ARG1-of (o / okay-04))
      :snt2 (t / think-01
            :polarity -
            :ARG0 (ii / i)
            :ARG2 (ii2 / it)
            :time (b / before
                  :op1 (n / now)
                  :duration (l / long-03
                        :ARG2-of (h / have-degree-91
                              :ARG1 t
                              :ARG3 (s / so)
                              :ARG6 (k / know-01
                                    :polarity -
                                    :ARG0 ii
                                    :ARG1 (r / relevant-01
                                          :ARG1 (ii3 / it)
                                          :mod (s2 / still))))))
            :mod (j / just)))"
