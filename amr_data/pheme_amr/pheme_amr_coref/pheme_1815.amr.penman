# ::snt same old story after every terror attack still media media questions Gijarat police mosk drill
# ::tokens ["same", "old", "story", "after", "every", "terror", "attack", "still", "media", "media", "questions", "Gijarat", "police", "mosk", "drill"]
# ::lemmas ["same", "old", "story", "after", "every", "terror", "attack", "still", "medium", "medium", "question", "Gijarat", "police", "mosk", "drill"]
(c1-3 / question-03
      :ARG0 (c1-1 / media
                  :mod c1-1)
      :ARG1 (c1-8 / drill-02
                  :ARG0 (c1-7 / police
                              :mod (c1-9 / city
                                         :name (c1-6 / name
                                                     :op1 "Gijarat")))
                  :mod (c1-10 / mosk))
      :time (c1-13 / after
                   :op1 (c1-5 / attack-01
                              :mod (c1-12 / terror)
                              :frequency (c1-2 / every)))
      :mod (c1-11 / still)
      :mod (c1-4 / story
                 :ARG1-of (c1-0 / same-01)))

# ::snt do we still still continue with has no religion line? kinda stale now.
# ::tokens ["do", "we", "still", "still", "continue", "with", "has", "no", "religion", "line", "?", "kinda", "stale", "now", "."]
# ::lemmas ["do", "we", "still", "still", "continue", "with", "have", "no", "religion", "line", "?", "kinda", "stale", "now", "."]
(c2-3 / multi-sentence
      :snt1 (c2-7 / continue-01
                  :polarity (c2-10 / amr-unknown)
                  :ARG0 (c2-1 / we)
                  :ARG1 (c2-0 / have-03
                              :ARG0 c2-1
                              :ARG1 (c2-2 / line
                                          :topic (c2-6 / religion))
                              :polarity -)
                  :mod (c2-8 / still))
      :snt2 (c2-4 / stale
                  :degree (c2-9 / kind-of)
                  :time (c2-5 / now)))

# ::snt Are u still looking to get answer to your ?Search at
# ::tokens ["Are", "u", "still", "looking", "to", "get", "answer", "to", "your", "?", "Search", "at"]
# ::lemmas ["be", "u", "still", "look", "to", "get", "answer", "to", "your", "?", "search", "at"]
(c3-1 / look-01
      :polarity (c3-5 / amr-unknown)
      :ARG0 (c3-0 / you)
      :ARG1 (c3-3 / get-01
                  :ARG0 c3-0
                  :ARG1 (c3-2 / answer-01
                              :ARG0 c3-0
                              :ARG1 c3-0))
      :mod (c3-4 / still))

# ::snt Remember they are not Muslims. Islam is a religion of peace. If u say otherwise, you r an Islamophobe.
# ::tokens ["Remember", "they", "are", "not", "Muslims", ".", "Islam", "is", "a", "religion", "of", "peace", ".", "If", "u", "say", "otherwise", ",", "you", "r", "an", "Islamophobe", "."]
# ::lemmas ["remember", "they", "be", "not", "Muslims", ".", "Islam", "be", "a", "religion", "of", "peace", ".", "if", "u", "say", "otherwise", ",", "you", "r", "an", "Islamophobe", "."]
(c4-0 / multi-sentence
      :snt1 (c4-12 / remember-01
                   :ARG0 (c4-15 / you)
                   :ARG1 (c4-3 / person
                               :mod (c4-1 / religious-group
                                          :name (c4-11 / name
                                                       :op1 "Islam"))
                               :domain (c4-18 / they)
                               :polarity -)
                   :mode imperative)
      :snt2 (c4-10 / religion
                   :mod (c4-5 / peace)
                   :domain (c4-14 / religious-group
                                  :name (c4-16 / name
                                               :op1 "Islam")))
      :snt3 (c4-6 / have-condition-91
                  :ARG1 (c4-7 / person
                              :mod (c4-13 / religious-group
                                          :name (c4-2 / name
                                                      :op1 "Islam"))
                              :domain (c4-17 / you))
                  :ARG2 (c4-4 / say-01
                              :ARG0 c4-17
                              :ARG1 (c4-8 / something
                                          :mod (c4-9 / else)))))

# ::snt Its blocked now
# ::tokens ["Its", "blocked", "now"]
# ::lemmas ["its", "block", "now"]
(c5-2 / block-01
      :ARG1 (c5-1 / it)
      :time (c5-0 / now))

# ::snt One more story like /11
# ::tokens ["One", "more", "story", "like", "/11"]
# ::lemmas ["One", "more", "story", "like", "/11"]
(c6-4 / story
      :ARG1-of (c6-2 / resemble-01
                     :ARG2 (c6-1 / story
                                 :time (c6-3 / date-entity
                                             :month 11)))
      :mod (c6-0 / more)
      :quant 1)

# ::snt the video? Most channels have already aired it
# ::tokens ["the", "video", "?", "Most", "channels", "have", "already", "aired", "it"]
# ::lemmas ["the", "video", "?", "most", "channel", "have", "already", "air", "it"]
(c7-0 / multi-sentence
      :snt1 (c7-3 / video)
      :snt2 (c7-6 / air-01
                  :ARG0 (c7-5 / channel
                              :quant (c7-4 / most))
                  :ARG1 (c7-2 / it)
                  :time (c7-1 / already)))

# ::snt Remember they are not Muslims. Islam is a religion of peace. If u say otherwise, you r an Islamophobe.
# ::tokens ["Remember", "they", "are", "not", "Muslims", ".", "Islam", "is", "a", "religion", "of", "peace", ".", "If", "u", "say", "otherwise", ",", "you", "r", "an", "Islamophobe", "."]
# ::lemmas ["remember", "they", "be", "not", "Muslims", ".", "Islam", "be", "a", "religion", "of", "peace", ".", "if", "u", "say", "otherwise", ",", "you", "r", "an", "Islamophobe", "."]
(c8-0 / multi-sentence
      :snt1 (c8-12 / remember-01
                   :ARG0 (c8-15 / you)
                   :ARG1 (c8-3 / person
                               :mod (c8-1 / religious-group
                                          :name (c8-11 / name
                                                       :op1 "Islam"))
                               :domain (c8-18 / they)
                               :polarity -)
                   :mode imperative)
      :snt2 (c8-10 / religion
                   :mod (c8-5 / peace)
                   :domain (c8-14 / religious-group
                                  :name (c8-16 / name
                                               :op1 "Islam")))
      :snt3 (c8-6 / have-condition-91
                  :ARG1 (c8-7 / person
                              :mod (c8-13 / religious-group
                                          :name (c8-2 / name
                                                      :op1 "Islam"))
                              :domain (c8-17 / you))
                  :ARG2 (c8-4 / say-01
                              :ARG0 c8-17
                              :ARG1 (c8-8 / something
                                          :mod (c8-9 / else)))))

# ::snt French TVs are airing several videos; don't know about India; several amateur videos are being aired here.
# ::tokens ["French", "TVs", "are", "airing", "several", "videos", ";", "do", "n't", "know", "about", "India", ";", "several", "amateur", "videos", "are", "being", "aired", "here", "."]
# ::lemmas ["French", "tv", "be", "air", "several", "video", ";", "do", "not", "know", "about", "India", ";", "several", "amateur", "video", "be", "be", "air", "here", "."]
(c9-1 / multi-sentence
      :snt1 (c9-15 / air-01
                   :ARG0 (c9-14 / television
                                :mod (c9-11 / country
                                            :name (c9-7 / name
                                                        :op1 "France")))
                   :ARG1 (c9-8 / video
                               :quant (c9-13 / several)))
      :snt2 (c9-6 / know-01
                  :ARG0 (c9-5 / i)
                  :ARG1 (c9-10 / country
                               :name (c9-9 / name
                                           :op1 "India"))
                  :polarity -)
      :snt3 (c9-4 / air-01
                  :ARG1 (c9-2 / video
                              :mod (c9-12 / amateur)
                              :quant (c9-3 / several))
                  :location (c9-0 / here)))

# ::snt perhaps Gujrat police persons mocking their name of religion with terrorism not fair?IS TRUE so called intellectuals
# ::tokens ["perhaps", "Gujrat", "police", "persons", "mocking", "their", "name", "of", "religion", "with", "terrorism", "not", "fair?IS", "TRUE", "so", "called", "intellectuals"]
# ::lemmas ["perhaps", "Gujrat", "police", "person", "mock", "their", "name", "of", "religion", "with", "terrorism", "not", "fair?is", "true", "so", "call", "intellectual"]
(c10-1 / multi-sentence
       :snt1 (c10-5 / possible-01
                    :ARG1 (c10-0 / fair-01
                                 :ARG1 (c10-6 / mock-01
                                              :ARG0 (c10-12 / person
                                                            :mod (c10-2 / police)
                                                            :mod (c10-7 / city
                                                                        :name (c10-4 / name
                                                                                     :ARG1-of c10-6
                                                                                     :op1 "Gujrat")))
                                              :poss c10-12
                                              :topic (c10-8 / religion))
                                 :ARG2 (c10-11 / terrorism)
                                 :polarity -))
       :polarity (c10-13 / amr-unknown)
       :snt2 (c10-3 / intellectual
                    :mod (c10-10 / so-called)
                    :ARG1-of (c10-9 / true-01)))

# ::snt could be anyone giving a false impression. Needs investigation before one may jump to conclusions.
# ::tokens ["could", "be", "anyone", "giving", "a", "false", "impression", ".", "Needs", "investigation", "before", "one", "may", "jump", "to", "conclusions", "."]
# ::lemmas ["could", "be", "anyone", "give", "a", "false", "impression", ".", "need", "investigation", "before", "one", "may", "jump", "to", "conclusion", "."]
(c11-2 / multi-sentence
       :snt1 (c11-7 / possible-01
                    :ARG1 (c11-9 / give-01
                                 :ARG0 (c11-12 / anyone)
                                 :ARG1 (c11-5 / impression-03
                                              :mod (c11-1 / false))))
       :snt2 (c11-6 / need-01
                    :ARG1 (c11-10 / investigate-01
                                  :time (c11-3 / before
                                               :op1 (c11-11 / possible-01
                                                            :ARG1 (c11-0 / jump-02
                                                                         :ARG0 (c11-4 / one)
                                                                         :ARG1 (c11-8 / conclude-01
                                                                                      :ARG0 c11-4)))))))

# ::snt now we will hear statements that these guys were not from the religion of peace.
# ::tokens ["now", "we", "will", "hear", "statements", "that", "these", "guys", "were", "not", "from", "the", "religion", "of", "peace", "."]
# ::lemmas ["now", "we", "will", "hear", "statement", "that", "these", "guy", "be", "not", "from", "the", "religion", "of", "peace", "."]
(c12-0 / hear-01
       :ARG0 (c12-1 / we)
       :ARG1 (c12-7 / state-01
                    :ARG1 (c12-2 / be-from-91
                                 :ARG1 (c12-6 / guy
                                              :mod (c12-8 / this))
                                 :ARG2 (c12-5 / religion
                                              :mod (c12-4 / peace))
                                 :polarity -))
       :time (c12-3 / now))

# ::snt Thts wht happens when brains go dead after staying too long with Libtards!
# ::tokens ["Thts", "wht", "happens", "when", "brains", "go", "dead", "after", "staying", "too", "long", "with", "Libtards", "!"]
# ::lemmas ["tht", "wht", "happen", "when", "brain", "go", "dead", "after", "stay", "too", "long", "with", "Libtards", "!"]
(c13-3 / event
       :domain (c13-10 / amr-unknown)
       :time (c13-6 / die-01
                    :ARG1 (c13-2 / brain)
                    :time (c13-4 / after
                                 :op1 (c13-8 / stay-01
                                             :ARG1 c13-2
                                             :ARG3 (c13-5 / person
                                                          :ARG1-of (c13-1 / liberal-02))
                                             :ARG1-of (c13-0 / have-degree-91
                                                             :ARG2 (c13-7 / long-03
                                                                          :ARG1 c13-8)
                                                             :ARG3 (c13-9 / too))))))

# ::snt Why are they whispering? They should have been shouting.
# ::tokens ["Why", "are", "they", "whispering", "?", "They", "should", "have", "been", "shouting", "."]
# ::lemmas ["why", "be", "they", "whisper", "?", "they", "should", "have", "be", "shout", "."]
(c14-1 / multi-sentence
       :snt1 (c14-3 / cause-01
                    :ARG0 (c14-7 / amr-unknown)
                    :ARG1 (c14-0 / whisper-01
                                 :ARG0 (c14-6 / they)))
       :snt2 (c14-2 / recommend-01
                    :ARG1 (c14-5 / shout-01
                                 :ARG0 (c14-4 / they))))

# ::snt yeah. may be Martians!
# ::tokens ["yeah", ".", "may", "be", "Martians", "!"]
# ::lemmas ["yeah", ".", "may", "be", "Martians", "!"]
(c15-3 / possible-01
       :ARG1 (c15-4 / person
                    :mod (c15-1 / planet
                                :name (c15-2 / name
                                             :op1 "Mars")))
       :mod (c15-0 / yeah
                   :mode expressive))

# ::snt or monkeys!
# ::tokens ["or", "monkeys", "!"]
# ::lemmas ["or", "monkey", "!"]
(c16-0 / or
       :op2 (c16-1 / monkey))

# ::snt shantiduts ki ma ki chut
# ::tokens ["shantiduts", "ki", "ma", "ki", "chut"]
# ::lemmas ["shantidut", "ki", "ma", "ki", "chut"]
(c17-3 / and
       :op1 (c17-0 / shantiduts)
       :op2 (c17-2 / ma)
       :op3 (c17-1 / chut))
