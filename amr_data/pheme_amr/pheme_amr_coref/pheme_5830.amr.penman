# ::snt trending - don't let nutjob have the spotlight. That's what terrorist feed from and count in ..
# ::tokens ["trending", "-", "do", "n't", "let", "nutjob", "have", "the", "spotlight", ".", "That", "'s", "what", "terrorist", "feed", "from", "and", "count", "in", ".."]
# ::lemmas ["trend", "-", "do", "not", "let", "nutjob", "have", "the", "spotlight", ".", "that", "be", "what", "terrorist", "feed", "from", "and", "count", "in", ".."]
(c1-3 / multi-sentence
      :snt1 (c1-10 / thing
                   :ARG0-of (c1-0 / worry-02))
      :snt2 (c1-2 / let-01
                  :ARG0 (c1-1 / you)
                  :ARG1 (c1-9 / spotlight-01
                              :ARG1 (c1-5 / nutjob))
                  :polarity -
                  :mode imperative)
      :snt3 (c1-11 / and
                   :op1 (c1-4 / feed-02
                              :ARG0 (c1-8 / terrorist)
                              :ARG2 (c1-6 / that))
                   :op2 (c1-7 / count-03
                              :ARG1 c1-6)))

# ::snt : Five people have been able to get out of Sydney cafe during hostage situation.
# ::tokens [":", "Five", "people", "have", "been", "able", "to", "get", "out", "of", "Sydney", "cafe", "during", "hostage", "situation", "."]
# ::lemmas [":", "Five", "people", "have", "be", "able", "to", "get", "out", "of", "Sydney", "cafe", "during", "hostage", "situation", "."]
(c2-3 / possible-01
      :ARG1 (c2-6 / get-05
                  :ARG1 (c2-8 / person
                              :quant 5)
                  :ARG2 (c2-1 / out-06
                              :ARG1 c2-8
                              :ARG2 (c2-5 / cafe
                                          :location (c2-4 / city
                                                          :name (c2-2 / name
                                                                      :op1 "Sydney")))))
      :time (c2-7 / situation
                  :mod (c2-0 / hostage)))

# ::snt U're correct. something has to be done to stop these idiots in my opinion before they spread worse than they are now..
# ::tokens ["U're", "correct", ".", "something", "has", "to", "be", "done", "to", "stop", "these", "idiots", "in", "my", "opinion", "before", "they", "spread", "worse", "than", "they", "are", "now", ".."]
# ::lemmas ["u're", "correct", ".", "something", "have", "to", "be", "do", "to", "stop", "these", "idiot", "in", "my", "opinion", "before", "they", "spread", "bad", "than", "they", "be", "now", ".."]
(c3-11 / correct-02
       :ARG1 (c3-1 / you)
       :topic (c3-5 / obligate-01
                    :ARG2 (c3-10 / do-02
                                 :ARG1 (c3-13 / something)
                                 :purpose (c3-7 / stop-01
                                                :ARG1 (c3-8 / idiot
                                                            :mod (c3-14 / this))
                                                :time (c3-4 / before
                                                            :op1 (c3-2 / spread-03
                                                                       :ARG1 c3-8
                                                                       :ARG1-of (c3-0 / have-degree-91
                                                                                      :ARG2 (c3-12 / bad-04
                                                                                                   :ARG1 c3-2)
                                                                                      :ARG3 (c3-3 / more)
                                                                                      :ARG4 (c3-6 / spread-03
                                                                                                  :ARG1 c3-8
                                                                                                  :time (c3-9 / now)))))))))

# ::snt good good.. That's a Good news
# ::tokens ["good", "good", "..", "That", "'s", "a", "Good", "news"]
# ::lemmas ["good", "good", "..", "that", "be", "a", "good", "news"]
(c4-0 / multi-sentence
      :snt1 (c4-3 / good-02)
      :snt2 (c4-1 / news
                  :domain (c4-4 / that)
                  :ARG1-of (c4-2 / good-02)))

# ::snt yup faith is wonderful thing
# ::tokens ["yup", "faith", "is", "wonderful", "thing"]
# ::lemmas ["yup", "faith", "be", "wonderful", "thing"]
(c5-0 / wonderful-03
      :ARG1 (c5-1 / faith)
      :mod (c5-2 / yup))

# ::snt apply something positive something that will change the direction of the world
# ::tokens ["apply", "something", "positive", "something", "that", "will", "change", "the", "direction", "of", "the", "world"]
# ::lemmas ["apply", "something", "positive", "something", "that", "will", "change", "the", "direction", "of", "the", "world"]
(c6-6 / apply-02
      :ARG0 (c6-0 / you)
      :ARG1 (c6-5 / something
                  :mod (c6-2 / positive)
                  :ARG0-of (c6-4 / change-01
                                 :ARG1 (c6-3 / direct-01
                                             :ARG1 (c6-1 / world))))
      :mode imperative)

# ::snt it's terrible thing! Poor people hope it will be ok
# ::tokens ["it", "'s", "terrible", "thing", "!", "Poor", "people", "hope", "it", "will", "be", "ok"]
# ::lemmas ["it", "be", "terrible", "thing", "!", "poor", "people", "hope", "it", "will", "be", "ok"]
(c7-1 / multi-sentence
      :snt1 (c7-6 / terrible-01
                  :ARG1 (c7-5 / thing))
      :snt2 (c7-0 / hope-01
                  :ARG0 (c7-4 / person
                              :mod (c7-7 / poor))
                  :ARG1 (c7-2 / okay-04
                              :ARG1 (c7-3 / it))))

# ::snt : Five people have been able to get out of Sydney cafe during hostage situation.
# ::tokens [":", "Five", "people", "have", "been", "able", "to", "get", "out", "of", "Sydney", "cafe", "during", "hostage", "situation", "."]
# ::lemmas [":", "Five", "people", "have", "be", "able", "to", "get", "out", "of", "Sydney", "cafe", "during", "hostage", "situation", "."]
(c8-3 / possible-01
      :ARG1 (c8-6 / get-05
                  :ARG1 (c8-8 / person
                              :quant 5)
                  :ARG2 (c8-1 / out-06
                              :ARG1 c8-8
                              :ARG2 (c8-5 / cafe
                                          :location (c8-4 / city
                                                          :name (c8-2 / name
                                                                      :op1 "Sydney")))))
      :time (c8-7 / situation
                  :mod (c8-0 / hostage)))

# ::snt : Five people have been able to get out of Sydney cafe during hostage situation.
# ::tokens [":", "Five", "people", "have", "been", "able", "to", "get", "out", "of", "Sydney", "cafe", "during", "hostage", "situation", "."]
# ::lemmas [":", "Five", "people", "have", "be", "able", "to", "get", "out", "of", "Sydney", "cafe", "during", "hostage", "situation", "."]
(c9-3 / possible-01
      :ARG1 (c9-6 / get-05
                  :ARG1 (c9-8 / person
                              :quant 5)
                  :ARG2 (c9-1 / out-06
                              :ARG1 c9-8
                              :ARG2 (c9-5 / cafe
                                          :location (c9-4 / city
                                                          :name (c9-2 / name
                                                                      :op1 "Sydney")))))
      :time (c9-7 / situation
                  :mod (c9-0 / hostage)))

# ::snt that was hours ago.. No one can see in because the lights are off. And no more hostages yet
# ::tokens ["that", "was", "hours", "ago", "..", "No", "one", "can", "see", "in", "because", "the", "lights", "are", "off", ".", "And", "no", "more", "hostages", "yet"]
# ::lemmas ["that", "be", "hours", "ago", "..", "no", "one", "can", "see", "in", "because", "the", "light", "be", "off", ".", "and", "no", "more", "hostage", "yet"]
(c10-3 / multi-sentence
       :snt1 (c10-6 / be-temporally-at-91
                    :ARG1 (c10-16 / that)
                    :ARG2 (c10-12 / before
                                  :op1 (c10-8 / now)
                                  :quant (c10-10 / multiple
                                                 :op1 (c10-14 / temporal-quantity
                                                              :unit (c10-0 / hour)
                                                              :quant 1))))
       :snt2 (c10-13 / cause-01
                     :ARG0 (c10-7 / off-01
                                  :ARG1 (c10-2 / light))
                     :ARG1 (c10-11 / possible-01
                                   :ARG1 (c10-15 / see-01
                                                 :ARG0 (c10-9 / no-one))))
       :snt3 (c10-17 / and
                     :op2 (c10-4 / hostage
                                 :quant (c10-5 / more
                                               :polarity -)
                                 :time (c10-1 / yet))))

# ::snt you announce that the hostages have cell phones and sending messages. Are y'all just stupid? Way to get them killed!!
# ::tokens ["you", "announce", "that", "the", "hostages", "have", "cell", "phones", "and", "sending", "messages", ".", "Are", "y'", "all", "just", "stupid", "?", "Way", "to", "get", "them", "killed", "!", "!"]
# ::lemmas ["you", "announce", "that", "the", "hostage", "have", "cell", "phone", "and", "send", "message", ".", "be", "you", "all", "just", "stupid", "?", "way", "to", "get", "they", "kill", "!", "!"]
(c11-4 / multi-sentence
       :snt1 (c11-16 / announce-01
                     :ARG0 (c11-1 / you)
                     :ARG1 (c11-6 / and
                                  :op1 (c11-0 / have-03
                                              :ARG0 (c11-3 / hostage)
                                              :ARG1 (c11-8 / phone
                                                           :mod (c11-10 / cell)))
                                  :op2 (c11-13 / send-01
                                               :ARG0 c11-3
                                               :ARG1 (c11-9 / message))))
       :snt2 (c11-5 / stupid
                    :polarity (c11-7 / amr-unknown)
                    :domain (c11-12 / you
                                    :mod (c11-14 / all))
                    :manner (c11-2 / way
                                   :manner-of (c11-11 / get-04
                                                      :ARG1 (c11-15 / kill-01
                                                                    :ARG1 c11-3)))))

# ::snt My thoughts &amp; prayers are with everyone.
# ::tokens ["My", "thoughts", "&", "amp", ";", "prayers", "are", "with", "everyone", "."]
# ::lemmas ["my", "thought", "&", "amp", ";", "prayer", "be", "with", "everyone", "."]
(c12-0 / multi-sentence
       :snt1 (c12-8 / and
                    :op1 (c12-6 / thing
                                :ARG1-of (c12-5 / think-01
                                                :ARG0 (c12-2 / i)))
                    :op2 (c12-4 / person
                                :name (c12-3 / name
                                             :op1 "amp")))
       :snt2 (c12-7 / pray-01
                    :accompanier (c12-1 / everyone)))

# ::snt good they got out shame this is happenng
# ::tokens ["good", "they", "got", "out", "shame", "this", "is", "happenng"]
# ::lemmas ["good", "they", "get", "out", "shame", "this", "be", "happenng"]
(c13-5 / shame-02
       :ARG0 (c13-3 / get-03
                    :ARG1 (c13-6 / they)
                    :ARG2 (c13-0 / out)
                    :ARG1-of (c13-2 / cause-01
                                    :ARG0 (c13-1 / event
                                                 :mod (c13-4 / this))))
       :ARG1 c13-6)

# ::snt lol thanks god I'm not in Sydney. SHE DONT DO THAT
# ::tokens ["lol", "thanks", "god", "I", "'m", "not", "in", "Sydney", ".", "SHE", "DONT", "DO", "THAT"]
# ::lemmas ["lol", "thanks", "god", "i", "be", "not", "in", "Sydney", ".", "SHE", "dont", "do", "that"]
(c14-1 / multi-sentence
       :snt1 (c14-12 / thank-01
                     :ARG0 (c14-3 / i)
                     :ARG1 (c14-6 / person
                                  :name (c14-4 / name
                                               :op1 "God"))
                     :ARG2 (c14-2 / be-located-at-91
                                  :ARG1 c14-3
                                  :ARG2 (c14-8 / city
                                               :name (c14-5 / name
                                                            :op1 "Sydney"))
                                  :polarity -)
                     :mod (c14-0 / laugh-01
                                 :ARG0 c14-3
                                 :manner (c14-9 / loud)
                                 :mode expressive))
       :snt2 (c14-7 / do-02
                    :ARG0 (c14-10 / she)
                    :ARG1 (c14-11 / that)
                    :polarity -))

# ::snt Hope they all be OK.
# ::tokens ["Hope", "they", "all", "be", "OK", "."]
# ::lemmas ["hope", "you", "all", "be", "ok", "."]
(c15-0 / hope-01
       :ARG0 (c15-2 / i)
       :ARG1 (c15-1 / okay-04
                    :ARG1 (c15-3 / they
                                 :mod (c15-4 / all))))

# ::snt we're praying for them.
# ::tokens ["we", "'re", "praying", "for", "them", "."]
# ::lemmas ["we", "be", "pray", "for", "they", "."]
(c17-1 / pray-01
       :ARG0 (c17-0 / we)
       :ARG1 (c17-2 / they))

# ::snt , YES, GET OUT OF THE MIDDLE EAST !!!!
# ::tokens [",", "YES", ",", "GET", "OUT", "OF", "THE", "MIDDLE", "EAST", "!", "!", "!", "!"]
# ::lemmas [",", "yes", ",", "get", "out", "of", "THE", "MIDDLE", "EAST", "!", "!", "!", "!"]
(c18-4 / get-05
       :ARG0 (c18-0 / you
                    :ARG1-of c18-4)
       :ARG2 (c18-1 / out-06
                    :ARG1 c18-0
                    :ARG2 (c18-3 / country-region
                                 :name (c18-2 / name
                                              :op1 "Middle"
                                              :op2 "East")))
       :mode imperative)
