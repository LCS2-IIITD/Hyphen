# ::snt I bet they are doing that right now.
# ::tokens ["I", "bet", "they", "are", "doing", "that", "right", "now", "."]
# ::lemmas ["i", "bet", "they", "be", "do", "that", "right", "now", "."]
(c1-0 / bet-01
      :ARG0 (c1-1 / i)
      :ARG2 (c1-3 / do-02
                  :ARG0 (c1-6 / they)
                  :ARG1 (c1-5 / that)
                  :time (c1-2 / now
                              :mod (c1-4 / right))))

# ::snt My friends who worry about zombie apocalypse, I always tell them, this Jihad is the zombie apocalypse!
# ::tokens ["My", "friends", "who", "worry", "about", "zombie", "apocalypse", ",", "I", "always", "tell", "them", ",", "this", "Jihad", "is", "the", "zombie", "apocalypse", "!"]
# ::lemmas ["my", "friend", "who", "worry", "about", "zombie", "apocalypse", ",", "i", "always", "tell", "they", ",", "this", "Jihad", "be", "the", "zombie", "apocalypse", "!"]
(c2-11 / tell-01
       :ARG0 (c2-7 / i)
       :ARG1 (c2-12 / apocalypse
                    :mod (c2-4 / zombie)
                    :domain (c2-0 / jihad
                                  :mod (c2-10 / this)))
       :ARG2 (c2-9 / person
                   :ARG0-of (c2-1 / have-rel-role-91
                                  :ARG1 c2-7
                                  :ARG2 (c2-3 / friend))
                   :ARG0-of (c2-2 / worry-01
                                  :ARG1 (c2-6 / apocalypse
                                              :mod (c2-5 / zombie))))
       :time (c2-8 / always))

# ::snt Well done - better late than never.
# ::tokens ["Well", "done", "-", "better", "late", "than", "never", "."]
# ::lemmas ["well", "do", "-", "well", "late", "than", "never", "."]
(c3-8 / and
      :op1 (c3-5 / do-02
                 :ARG1-of (c3-1 / well-09))
      :op2 (c3-0 / have-degree-91
                 :ARG1 (c3-2 / late)
                 :ARG2 (c3-6 / good-02
                             :ARG1 c3-2)
                 :ARG3 (c3-3 / more)
                 :ARG4 (c3-7 / late
                             :time (c3-4 / ever)
                             :polarity -)))

# ::snt Proper recon with micro cameras drilled through floor or ceiling.Clear shot hostage taker dead as Julius Caesar!
# ::tokens ["Proper", "recon", "with", "micro", "cameras", "drilled", "through", "floor", "or", "ceiling", ".", "Clear", "shot", "hostage", "taker", "dead", "as", "Julius", "Caesar", "!"]
# ::lemmas ["proper", "recon", "with", "micro", "camera", "drill", "through", "floor", "or", "ceiling", ".", "Clear", "shoot", "hostage", "taker", "dead", "as", "Julius", "Caesar", "!"]
(c4-3 / multi-sentence
      :snt1 (c4-8 / perform-02
                  :ARG1 (c4-9 / recon-02
                              :instrument (c4-10 / camera
                                                 :mod (c4-11 / micro)
                                                 :ARG1-of (c4-12 / drill-01
                                                                 :ARG4 (c4-5 / or
                                                                             :op1 (c4-2 / floor)
                                                                             :op2 (c4-13 / ceiling))))))
      :snt2 (c4-1 / die-01
                  :ARG1 (c4-17 / person
                               :ARG0-of (c4-14 / shoot-02)
                               :ARG0-of (c4-16 / take-01
                                               :ARG1 (c4-0 / hostage)))
                  :ARG1-of (c4-15 / clear-06)
                  :ARG1-of (c4-6 / resemble-01
                                 :ARG2 (c4-4 / person
                                             :name (c4-7 / name
                                                         :op1 "Julius"
                                                         :op2 "Caesar")))))

# ::snt Katy &amp; Bieber embrace Islam: Bible &amp; NASA embrace Islam: ,
# ::tokens ["Katy", "&", "amp", ";", "Bieber", "embrace", "Islam", ":", "Bible", "&", "amp", ";", "NASA", "embrace", "Islam", ":", ","]
# ::lemmas ["Katy", "&", "amp", ";", "Bieber", "embrace", "Islam", ":", "Bible", "&", "amp", ";", "NASA", "embrace", "Islam", ":", ","]
(c5-13 / and
       :op1 (c5-3 / embrace-01
                  :ARG0 (c5-8 / person
                              :name (c5-6 / name
                                          :op1 "Bieber"))
                  :ARG1 (c5-9 / religious-group
                              :name (c5-7 / name
                                          :op1 "Islam")))
       :op2 (c5-2 / embrace-01
                  :ARG0 (c5-4 / and
                              :op1 (c5-12 / person
                                          :name (c5-10 / name
                                                       :op1 "Bible"))
                              :op2 (c5-1 / person
                                         :name (c5-11 / name
                                                      :op1 "amp")))
                  :ARG1 c5-9)
       :op3 (c5-0 / embrace-01
                  :ARG0 (c5-5 / research-institute
                              :name (c5-14 / name
                                           :op1 "NASA"))
                  :ARG1 c5-9))

# ::snt terrorist ways to seize attention and control civilians must end by Ahimsa and Non-violent methods of Mahatma Gandhi
# ::tokens ["terrorist", "ways", "to", "seize", "attention", "and", "control", "civilians", "must", "end", "by", "Ahimsa", "and", "Non", "-", "violent", "methods", "of", "Mahatma", "Gandhi"]
# ::lemmas ["terrorist", "way", "to", "seize", "attention", "and", "control", "civilian", "must", "end", "by", "Ahimsa", "and", "non", "-", "violent", "method", "of", "Mahatma", "Gandhi"]
(c6-2 / obligate-01
      :ARG2 (c6-3 / end-01
                  :ARG0 (c6-16 / and
                               :op1 (c6-1 / method
                                          :mod (c6-8 / religious-group
                                                     :name (c6-5 / name
                                                                 :op1 "Ahimsa")))
                               :op2 (c6-7 / method
                                          :mod (c6-6 / violence
                                                     :polarity -)
                                          :poss (c6-9 / person
                                                      :name (c6-10 / name
                                                                   :op1 "Mahatma"
                                                                   :op2 "Gandhi"))))
                  :ARG1 (c6-0 / way
                              :mod (c6-15 / terrorist)
                              :instrument-of (c6-13 / seize-01
                                                    :ARG1 (c6-4 / and
                                                                :op1 (c6-11 / attend-02)
                                                                :op2 (c6-12 / control-01
                                                                            :ARG1 (c6-14 / civilian)))))))

# ::snt NM - bloody sends electric waves to girls for physical relationships despite having own wife, extrema characterless?;"';,
# ::tokens ["NM", "-", "bloody", "sends", "electric", "waves", "to", "girls", "for", "physical", "relationships", "despite", "having", "own", "wife", ",", "extrema", "characterless", "?", ";", "\"", "'", ";", ","]
# ::lemmas ["NM", "-", "bloody", "send", "electric", "wave", "to", "girl", "for", "physical", "relationship", "despite", "have", "own", "wife", ",", "extrema", "characterless", "?", ";", "\"", "'", ";", ","]
(c7-11 / send-01
       :ARG0 (c7-7 / person
                   :name (c7-6 / name
                               :op1 "NM"))
       :ARG1 (c7-1 / wave
                   :mod (c7-4 / electric))
       :ARG2 (c7-10 / girl)
       :purpose (c7-8 / relation-03
                      :ARG0 c7-10
                      :ARG1 (c7-13 / physical))
       :concession (c7-0 / have-03
                         :ARG0 c7-10
                         :ARG1 (c7-2 / person
                                     :ARG0-of (c7-14 / have-rel-role-91
                                                     :ARG1 c7-10
                                                     :ARG2 (c7-5 / wife))
                                     :ARG0-of (c7-3 / extrema-01
                                                    :ARG1 (c7-9 / character)
                                                    :polarity -)))
       :polarity (c7-12 / amr-unknown))

# ::snt Send prayers : London: "We are aware of in and are in touch with authorities"
# ::tokens ["Send", "prayers", ":", "London", ":", "\"", "We", "are", "aware", "of", "in", "and", "are", "in", "touch", "with", "authorities", "\""]
# ::lemmas ["send", "prayer", ":", "London", ":", "\"", "we", "be", "aware", "of", "in", "and", "be", "in", "touch", "with", "authority", "\""]
(c8-1 / multi-sentence
      :snt1 (c8-10 / send-01
                   :ARG1 (c8-7 / pray-01))
      :snt2 (c8-3 / say-01
                  :ARG0 (c8-9 / city
                              :name (c8-6 / name
                                          :op1 "London"))
                  :ARG1 (c8-11 / and
                               :op1 (c8-8 / realize-01
                                          :ARG0 (c8-0 / we)
                                          :ARG1 (c8-2 / be-located-at-91
                                                      :ARG1 c8-0
                                                      :ARG2 (c8-4 / authority)))
                               :op2 (c8-5 / in-touch-12
                                          :ARG0 c8-0
                                          :ARG1 c8-4))))

# ::snt No they Need to Feed the some Chocolate covered Bacon.. He would lose his Mind and then his Head !
# ::tokens ["No", "they", "Need", "to", "Feed", "the", "some", "Chocolate", "covered", "Bacon", "..", "He", "would", "lose", "his", "Mind", "and", "then", "his", "Head", "!"]
# ::lemmas ["no", "they", "need", "to", "feed", "the", "some", "Chocolate", "cover", "Bacon", "..", "he", "would", "lose", "his", "Mind", "and", "then", "his", "Head", "!"]
(c9-2 / multi-sentence
      :snt1 (c9-5 / need-01
                  :ARG0 (c9-11 / they)
                  :ARG1 (c9-1 / feed-01
                              :ARG0 c9-11
                              :ARG1 (c9-4 / bacon
                                          :ARG1-of (c9-8 / cover-02
                                                         :ARG2 (c9-7 / chocolate))
                                          :quant (c9-10 / some)))
                  :polarity -)
      :snt2 (c9-3 / lose-02
                  :ARG0 (c9-0 / he
                              :part (c9-6 / mind)
                              :part (c9-12 / head
                                           :ARG1-of c9-3))
                  :time (c9-9 / then)))

# ::snt Not funny is a manifestation of the devil. . Or stands for . God Protect Us.
# ::tokens ["Not", "funny", "is", "a", "manifestation", "of", "the", "devil", ".", ".", "Or", "stands", "for", ".", "God", "Protect", "Us", "."]
# ::lemmas ["not", "funny", "be", "a", "manifestation", "of", "the", "devil", ".", ".", "or", "stand", "for", ".", "God", "protect", "Us", "."]
(c10-2 / multi-sentence
       :snt1 (c10-5 / manifest-01
                    :ARG1 (c10-6 / devil)
                    :ARG2 (c10-1 / funny
                                 :polarity -))
       :snt2 (c10-3 / or
                    :op2 (c10-8 / stand-11
                                :ARG2 (c10-7 / protect-01
                                             :ARG0 (c10-9 / person
                                                          :name (c10-4 / name
                                                                       :op1 "God"))
                                             :ARG1 (c10-0 / we)))))

# ::snt BBC news has a break from Sydney as it can't wait to get back to reporting on the USA!!!!!
# ::tokens ["BBC", "news", "has", "a", "break", "from", "Sydney", "as", "it", "ca", "n't", "wait", "to", "get", "back", "to", "reporting", "on", "the", "USA", "!", "!", "!", "!", "!"]
# ::lemmas ["BBC", "news", "have", "a", "break", "from", "Sydney", "as", "it", "can", "not", "wait", "to", "get", "back", "to", "reporting", "on", "the", "USA", "!", "!", "!", "!", "!"]
(c11-1 / break-16
       :ARG0 (c11-7 / broadcast-program
                    :name (c11-2 / name
                                 :op1 "BBC"
                                 :op2 "News"))
       :ARG1 (c11-6 / city
                    :name (c11-3 / name
                                 :op1 "Sydney"))
       :ARG1-of (c11-5 / cause-01
                       :ARG0 (c11-4 / possible-01
                                    :ARG1 (c11-0 / wait-01
                                                 :ARG1 c11-7
                                                 :ARG2 (c11-8 / get-back-10
                                                              :ARG1 c11-7
                                                              :ARG2 (c11-9 / report-01
                                                                           :ARG0 c11-7
                                                                           :ARG2 (c11-10 / country
                                                                                         :name (c11-11 / name
                                                                                                       :op1 "USA")))))
                                    :polarity -)))

# ::snt Sydney police need to bring in their best snipers to end .
# ::tokens ["Sydney", "police", "need", "to", "bring", "in", "their", "best", "snipers", "to", "end", "."]
# ::lemmas ["Sydney", "police", "need", "to", "bring", "in", "their", "good", "sniper", "to", "end", "."]
(c12-4 / need-01
       :ARG0 (c12-6 / police
                    :mod (c12-7 / city
                                :name (c12-5 / name
                                             :op1 "Sydney")))
       :ARG1 (c12-2 / bring-01
                    :ARG0 c12-6
                    :ARG1 (c12-9 / sniper
                                 :poss c12-6
                                 :ARG1-of (c12-0 / have-degree-91
                                                 :ARG2 (c12-8 / good-03
                                                              :ARG1 c12-9)
                                                 :ARG3 (c12-1 / most)))
                    :purpose (c12-3 / end-01
                                    :ARG1 c12-9)))

# ::snt yeah, clear shot and guy wud be queuing up for virgins..
# ::tokens ["yeah", ",", "clear", "shot", "and", "guy", "wud", "be", "queuing", "up", "for", "virgins", ".."]
# ::lemmas ["yeah", ",", "clear", "shot", "and", "guy", "wud", "be", "queue", "up", "for", "virgin", ".."]
(c13-6 / and
       :op1 (c13-5 / shoot-01
                   :ARG1-of (c13-3 / clear-06))
       :op2 (c13-1 / queue-up-02
                   :ARG0 (c13-4 / guy)
                   :beneficiary (c13-2 / virgin))
       :mod (c13-0 / yeah
                   :mode expressive))

# ::snt oh thank god panic over
# ::tokens ["oh", "thank", "god", "panic", "over"]
# ::lemmas ["oh", "thank", "god", "panic", "over"]
(c14-3 / thank-01
       :ARG1 (c14-2 / person
                    :name (c14-1 / name
                                 :op1 "God"))
       :ARG2 (c14-4 / panic-01
                    :ARG1 c14-2)
       :mod (c14-0 / oh
                   :mode expressive))

# ::snt need to invent sniper rounds that can carry out beheading..equal treatment shud be dished out!
# ::tokens ["need", "to", "invent", "sniper", "rounds", "that", "can", "carry", "out", "beheading", "..", "equal", "treatment", "shud", "be", "dished", "out", "!"]
# ::lemmas ["need", "to", "invent", "sniper", "round", "that", "can", "carry", "out", "behead", "..", "equal", "treatment", "shud", "be", "dish", "out", "!"]
(c15-0 / multi-sentence
       :snt1 (c15-5 / need-01
                    :ARG1 (c15-4 / invent-01
                                 :ARG1 (c15-7 / round
                                              :mod (c15-10 / sniper)
                                              :ARG0-of (c15-8 / carry-out-03
                                                              :ARG1 (c15-1 / behead-01)
                                                              :ARG1-of (c15-6 / possible-01)))))
       :snt2 (c15-9 / dish-out-02
                    :ARG1 (c15-2 / shud
                                 :ARG2-of (c15-11 / treat-01
                                                  :ARG1-of (c15-3 / equal-01)))))
