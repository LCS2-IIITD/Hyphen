# ::snt : Local prosecutor deciding whether to charge killer cop thinks cops were doing a great job this week. DANGER For real
# ::tokens [":", "Local", "prosecutor", "deciding", "whether", "to", "charge", "killer", "cop", "thinks", "cops", "were", "doing", "a", "great", "job", "this", "week", ".", "DANGER", "For", "real"]
# ::lemmas [":", "local", "prosecutor", "decide", "whether", "to", "charge", "killer", "cop", "think", "cop", "be", "do", "a", "great", "job", "this", "week", ".", "DANGER", "for", "real"]
(c1-4 / multi-sentence
      :snt1 (c1-9 / decide-01
                  :ARG0 (c1-8 / person
                              :ARG0-of (c1-17 / prosecute-01)
                              :ARG1-of (c1-3 / local-02))
                  :ARG1 (c1-16 / truth-value
                               :polarity-of (c1-10 / charge-05
                                                   :ARG0 c1-8
                                                   :ARG1 (c1-11 / cop
                                                                :ARG0-of (c1-6 / kill-01)))))
      :snt2 (c1-13 / think-01
                   :ARG0 (c1-14 / cop)
                   :ARG1 (c1-2 / do-02
                               :ARG0 c1-14
                               :ARG1 (c1-0 / job
                                           :mod (c1-12 / great))
                               :time (c1-1 / week
                                           :mod (c1-7 / this))))
      :snt3 (c1-5 / endanger-01
                  :ARG1-of (c1-15 / real-04)))

# ::snt the case needs a special prosecutor. Preferably appointed by the people and not the racist politicians
# ::tokens ["the", "case", "needs", "a", "special", "prosecutor", ".", "Preferably", "appointed", "by", "the", "people", "and", "not", "the", "racist", "politicians"]
# ::lemmas ["the", "case", "need", "a", "special", "prosecutor", ".", "preferably", "appoint", "by", "the", "people", "and", "not", "the", "racist", "politician"]
(c2-0 / multi-sentence
      :snt1 (c2-5 / need-01
                  :ARG0 (c2-8 / case-03)
                  :ARG1 (c2-6 / person
                              :ARG0-of (c2-11 / prosecute-01)
                              :ARG1-of (c2-9 / special-02)))
      :snt2 (c2-1 / prefer-01
                  :ARG1 (c2-12 / appoint-01
                               :ARG0 (c2-10 / person)
                               :ARG1-of (c2-4 / instead-of-91
                                              :ARG2 (c2-3 / appoint-01
                                                          :ARG0 (c2-2 / politician
                                                                      :mod (c2-7 / racist))
                                                          :ARG1 c2-10)))))

# ::snt same old story....disgusting
# ::tokens ["same", "old", "story", "....", "disgusting"]
# ::lemmas ["same", "old", "story", "....", "disgusting"]
(c3-0 / story
      :mod (c3-3 / old)
      :ARG1-of (c3-1 / same-01)
      :ARG0-of (c3-2 / disgust-01))

# ::snt in negros were % of USA population= %negro males =committed % of known USA Murders,theres yer Majority
# ::tokens ["in", "negros", "were", "%", "of", "USA", "population=", "%", "negro", "males", "=", "committed", "%", "of", "known", "USA", "Murders", ",", "theres", "yer", "Majority"]
# ::lemmas ["in", "negro", "be", "%", "of", "USA", "population=", "%", "negro", "male", "=", "commit", "%", "of", "know", "USA", "Murders", ",", "there", "yer", "majority"]
(c4-17 / and
       :op1 (c4-5 / include-91
                  :ARG1 (c4-9 / percentage
                              :ARG1-of (c4-7 / negative-03))
                  :ARG2 (c4-16 / population
                               :mod (c4-11 / country
                                           :name (c4-8 / name
                                                       :op1 "USA"))))
       :op2 (c4-12 / include-91
                   :ARG1 (c4-2 / male
                               :ARG1-of (c4-10 / negrate-01))
                   :ARG2 (c4-3 / percentage
                               :ARG1-of (c4-13 / commit-02
                                               :ARG2 (c4-15 / person
                                                            :ARG0-of (c4-14 / murder-01)
                                                            :ARG1-of (c4-6 / know-01)
                                                            :mod c4-11))))
       :op3 (c4-4 / equal-01
                  :ARG1 c4-9
                  :ARG2 (c4-1 / majority
                              :poss (c4-0 / you))))

# ::snt :Hey Bubba the majority of welfare recipients r out n your white bread world
# ::tokens [":", "Hey", "Bubba", "the", "majority", "of", "welfare", "recipients", "r", "out", "n", "your", "white", "bread", "world"]
# ::lemmas [":", "hey", "Bubba", "the", "majority", "of", "welfare", "recipient", "r", "out", "n", "your", "white", "bread", "world"]
(c5-10 / say-01
       :ARG1 (c5-4 / out-06
                   :ARG1 (c5-8 / person
                               :ARG0-of (c5-9 / receive-01
                                              :ARG1 (c5-1 / welfare))
                               :quant (c5-2 / majority))
                   :ARG2 (c5-6 / world
                               :mod (c5-3 / bread
                                          :ARG1-of (c5-5 / white-03))
                               :poss (c5-11 / person
                                            :name (c5-7 / name
                                                        :op1 "Bubba")))
                   :mod (c5-0 / hey
                              :mode expressive))
       :ARG2 c5-11)

# ::snt is this guy elected, if not, can we fire him plz
# ::tokens ["is", "this", "guy", "elected", ",", "if", "not", ",", "can", "we", "fire", "him", "plz"]
# ::lemmas ["be", "this", "guy", "elect", ",", "if", "not", ",", "can", "we", "fire", "he", "plz"]
(c6-0 / have-condition-91
      :ARG1 (c6-4 / possible-01
                  :ARG1 (c6-2 / fire-02
                              :ARG0 (c6-1 / we)
                              :ARG1 (c6-5 / guy
                                          :mod (c6-6 / this)))
                  :polarity (c6-7 / amr-unknown))
      :ARG2 (c6-3 / elect-01
                  :ARG1 c6-5
                  :polarity -))

# ::snt I feel like this is the DA from the Zimmerman trial all over again.....
# ::tokens ["I", "feel", "like", "this", "is", "the", "DA", "from", "the", "Zimmerman", "trial", "all", "over", "again", "....."]
# ::lemmas ["i", "feel", "like", "this", "be", "the", "da", "from", "the", "Zimmerman", "trial", "all", "over", "again", "....."]
(c7-1 / feel-02
      :ARG0 (c7-3 / i)
      :ARG1 (c7-6 / person
                  :ARG0-of (c7-0 / have-org-role-91
                                 :ARG2 (c7-11 / attorney
                                              :mod (c7-7 / district)))
                  :domain (c7-9 / this)
                  :source (c7-8 / try-02
                                :ARG1 (c7-10 / person
                                             :name (c7-4 / name
                                                         :op1 "Zimmerman")))
                  :mod (c7-2 / again
                             :mod (c7-5 / all-over))))

# ::snt I was banging on about this ad nauseum last night
# ::tokens ["I", "was", "banging", "on", "about", "this", "ad", "nauseum", "last", "night"]
# ::lemmas ["i", "be", "bang", "on", "about", "this", "ad", "nauseum", "last", "night"]
(c8-1 / bang-on-02
      :ARG0 (c8-2 / i)
      :ARG1 (c8-6 / ad-nauseam
                  :mod (c8-5 / this))
      :time (c8-4 / date-entity
                  :dayperiod (c8-3 / night)
                  :mod (c8-0 / yesterday)))

# ::snt Good. Thank heaven for the parallel federal investigation. Cc
# ::tokens ["Good", ".", "Thank", "heaven", "for", "the", "parallel", "federal", "investigation", ".", "Cc"]
# ::lemmas ["good", ".", "thank", "heaven", "for", "the", "parallel", "federal", "investigation", ".", "cc"]
(c9-2 / multi-sentence
      :snt1 (c9-6 / good-02)
      :snt2 (c9-8 / thank-01
                  :ARG0 (c9-3 / i)
                  :ARG1 (c9-0 / heaven)
                  :ARG2 (c9-7 / investigate-01
                              :ARG0 (c9-1 / federal)
                              :ARG1-of (c9-5 / parallel-01)))
      :snt3 (c9-9 / person
                  :name (c9-4 / name
                              :op1 "Cc")))

# ::snt good. Keep it up!
# ::tokens ["good", ".", "Keep", "it", "up", "!"]
# ::lemmas ["good", ".", "keep", "it", "up", "!"]
(c10-1 / multi-sentence
       :snt1 (c10-3 / good-02)
       :snt2 (c10-4 / keep-up-05
                    :ARG0 (c10-0 / you)
                    :ARG1 (c10-2 / it)
                    :mode imperative))

# ::snt That's how it goes. Police Chief/Sheriff and head prosecutor usually in bed together. Only feds can help.
# ::tokens ["That", "'s", "how", "it", "goes", ".", "Police", "Chief", "/", "Sheriff", "and", "head", "prosecutor", "usually", "in", "bed", "together", ".", "Only", "feds", "can", "help", "."]
# ::lemmas ["that", "be", "how", "it", "go", ".", "Police", "Chief", "/", "Sheriff", "and", "head", "prosecutor", "usually", "in", "bed", "together", ".", "only", "fed", "can", "help", "."]
(c11-0 / multi-sentence
       :snt1 (c11-14 / go-01
                     :ARG1 (c11-17 / it)
                     :manner (c11-23 / that))
       :snt2 (c11-11 / be-located-at-91
                     :ARG1 (c11-7 / and
                                  :op1 (c11-2 / person
                                              :ARG0-of (c11-8 / have-org-role-91
                                                              :ARG1 (c11-5 / police)
                                                              :ARG2 (c11-21 / chief)))
                                  :op2 (c11-10 / person
                                               :ARG0-of (c11-6 / have-org-role-91
                                                               :ARG1 c11-5
                                                               :ARG2 (c11-4 / sheriff)))
                                  :op3 (c11-15 / person
                                               :ARG0-of (c11-12 / prosecute-01)
                                               :ARG0-of (c11-1 / head-01)))
                     :ARG2 (c11-18 / bed)
                     :mod (c11-16 / usual)
                     :manner (c11-22 / together))
       :snt3 (c11-9 / possible-01
                    :ARG1 (c11-19 / help-01
                                  :ARG0 (c11-3 / government-organization
                                               :name (c11-13 / name
                                                             :op1 "Federal"
                                                             :op2 "Reserve"
                                                             :op3 "System")
                                               :mod (c11-20 / only)))))

# ::snt WTF?? WHETHER to charge killer cop? What sort of alternate universe is ? Lisa--nuther book.
# ::tokens ["WTF", "?", "?", "WHETHER", "to", "charge", "killer", "cop", "?", "What", "sort", "of", "alternate", "universe", "is", "?", "Lisa", "--", "nuther", "book", "."]
# ::lemmas ["WTF", "?", "?", "whether", "to", "charge", "killer", "cop", "?", "what", "sort", "of", "alternate", "universe", "be", "?", "Lisa", "--", "nuther", "book", "."]
(c12-2 / multi-sentence
       :snt1 (c12-16 / amr-unknown
                     :domain (c12-11 / charge-05
                                     :ARG1 (c12-15 / they)
                                     :ARG2 (c12-10 / cop
                                                   :ARG0-of (c12-6 / kill-01)))
                     :mod (c12-1 / fuck
                                 :mode expressive))
       :snt2 (c12-3 / universe
                    :mod (c12-5 / alternate)
                    :mod (c12-8 / amr-unknown)
                    :mod (c12-13 / sort))
       :snt3 (c12-4 / book
                    :ARG1-of (c12-0 / have-degree-91
                                    :ARG2 (c12-14 / uther)
                                    :ARG3 (c12-9 / more))
                    :mod (c12-12 / person
                                 :name (c12-7 / name
                                              :op1 "Lisa"))))

# ::snt Can Feds take over?
# ::tokens ["Can", "Feds", "take", "over", "?"]
# ::lemmas ["can", "Feds", "take", "over", "?"]
(c13-0 / possible-01
       :ARG1 (c13-2 / take-over-12
                    :ARG0 (c13-1 / fed))
       :polarity (c13-3 / amr-unknown))

# ::snt Hey LOL Why don'tU volunteer ride herd on some night?
# ::tokens ["Hey", "LOL", "Why", "don'tU", "volunteer", "ride", "herd", "on", "some", "night", "?"]
# ::lemmas ["hey", "LOL", "why", "don'tu", "volunteer", "ride", "herd", "on", "some", "night", "?"]
(c14-8 / cause-01
       :ARG0 (c14-12 / amr-unknown)
       :ARG1 (c14-6 / volunteer-01
                    :ARG0 (c14-1 / you)
                    :ARG1 (c14-7 / ride-01
                                 :ARG0 c14-1
                                 :ARG1 (c14-0 / herd)
                                 :time (c14-9 / date-entity
                                              :dayperiod (c14-5 / night)
                                              :mod (c14-11 / some)))
                    :polarity -)
       :mod (c14-2 / hey
                   :mode expressive)
       :ARG2-of (c14-3 / laugh-01
                       :ARG0 (c14-4 / i)
                       :manner (c14-10 / loud)))

# ::snt Local prosecutor deciding whether to charge killer cop thinks cops were doing a great job this week. DANGER
# ::tokens ["Local", "prosecutor", "deciding", "whether", "to", "charge", "killer", "cop", "thinks", "cops", "were", "doing", "a", "great", "job", "this", "week", ".", "DANGER"]
# ::lemmas ["local", "prosecutor", "decide", "whether", "to", "charge", "killer", "cop", "think", "cop", "be", "do", "a", "great", "job", "this", "week", ".", "DANGER"]
(c15-4 / multi-sentence
       :snt1 (c15-9 / decide-01
                    :ARG0 (c15-8 / person
                                 :ARG0-of (c15-16 / prosecute-01)
                                 :ARG1-of (c15-3 / local-02))
                    :ARG1 (c15-15 / truth-value
                                  :polarity-of (c15-10 / charge-05
                                                       :ARG0 c15-8
                                                       :ARG1 (c15-11 / cop
                                                                     :ARG0-of (c15-5 / kill-01)))))
       :snt2 (c15-13 / think-01
                     :ARG0 (c15-14 / cop)
                     :ARG1 (c15-2 / do-02
                                  :ARG0 c15-14
                                  :ARG1 (c15-0 / job
                                               :mod (c15-12 / great))
                                  :time (c15-1 / week
                                               :mod (c15-7 / this))))
       :snt3 (c15-6 / worsen-01))

# ::snt No charges will come.
# ::tokens ["No", "charges", "will", "come", "."]
# ::lemmas ["no", "charge", "will", "come", "."]
(c16-0 / charge-05
       :polarity -)

# ::snt If he rejects a complaint request, this week's events in Ferguson will look like child's play by comparison to what will happen.
# ::tokens ["If", "he", "rejects", "a", "complaint", "request", ",", "this", "week", "'s", "events", "in", "Ferguson", "will", "look", "like", "child", "'s", "play", "by", "comparison", "to", "what", "will", "happen", "."]
# ::lemmas ["if", "he", "reject", "a", "complaint", "request", ",", "this", "week", "'s", "event", "in", "Ferguson", "will", "look", "like", "child", "'s", "play", "by", "comparison", "to", "what", "will", "happen", "."]
(c17-2 / look-02
       :ARG0 (c17-4 / event
                    :time (c17-1 / week
                                 :mod (c17-12 / this))
                    :location (c17-9 / city
                                     :name (c17-6 / name
                                                  :op1 "Ferguson")))
       :ARG1 (c17-7 / play-01
                    :ARG0 (c17-8 / child))
       :condition (c17-10 / reject-01
                          :ARG0 (c17-0 / he)
                          :ARG1 (c17-5 / request-01
                                       :ARG1 (c17-11 / complain-01)))
       :manner (c17-13 / compare-01
                       :ARG1 c17-4
                       :ARG2 (c17-3 / event)))

# ::snt Is it just one prosecutor's decision whether or not he's charged?
# ::tokens ["Is", "it", "just", "one", "prosecutor", "'s", "decision", "whether", "or", "not", "he", "'s", "charged", "?"]
# ::lemmas ["be", "it", "just", "one", "prosecutor", "'s", "decision", "whether", "or", "not", "he", "be", "charge", "?"]
(c18-3 / decide-01
       :ARG0 (c18-2 / person
                    :ARG0-of (c18-6 / prosecute-01)
                    :mod (c18-0 / just)
                    :quant 1)
       :ARG1 (c18-5 / truth-value
                    :polarity-of (c18-4 / charge-05
                                        :ARG1 (c18-1 / he)))
       :polarity (c18-7 / amr-unknown))

# ::snt with that statement he's on short list of people that should b kept off this case.
# ::tokens ["with", "that", "statement", "he", "'s", "on", "short", "list", "of", "people", "that", "should", "b", "kept", "off", "this", "case", "."]
# ::lemmas ["with", "that", "statement", "he", "be", "on", "short", "list", "of", "people", "that", "should", "b", "kept", "off", "this", "case", "."]
(c19-1 / list-01
       :ARG1 (c19-0 / he)
       :ARG2 (c19-4 / person
                    :ARG1-of (c19-9 / keep-off-07
                                    :ARG1-of (c19-5 / recommend-01)
                                    :prep-in (c19-6 / case-03
                                                    :ARG1 (c19-8 / this))))
       :ARG1-of (c19-10 / short-07)
       :condition (c19-7 / thing
                         :ARG1-of (c19-2 / state-01)
                         :mod (c19-3 / that)))

# ::snt WOW this is such a surprise {snark}.. Sounds like Prosecutor ck the ME's name
# ::tokens ["WOW", "this", "is", "such", "a", "surprise", "{", "snark", "}", "..", "Sounds", "like", "Prosecutor", "ck", "the", "ME", "'s", "name"]
# ::lemmas ["WOW", "this", "be", "such", "a", "surprise", "{", "snark", "}", "..", "sound", "like", "Prosecutor", "ck", "the", "ME", "'s", "name"]
(c20-9 / surprise-01
       :ARG0 (c20-10 / this)
       :mod (c20-1 / wow
                   :mode expressive)
       :ARG1-of (c20-3 / mean-01
                       :ARG2 (c20-5 / snark-01))
       :ARG1-of (c20-2 / sound-01
                       :ARG2 (c20-6 / name-01
                                    :ARG1 (c20-8 / person
                                                 :ARG0-of (c20-11 / prosecute-01))
                                    :ARG2 (c20-7 / name-01
                                                 :ARG1 (c20-4 / person
                                                              :ARG0-of (c20-0 / have-org-role-91
                                                                              :ARG2 (c20-12 / attorney)))))))
