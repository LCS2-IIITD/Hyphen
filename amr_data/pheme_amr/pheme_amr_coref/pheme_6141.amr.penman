# ::snt the whole cockpit deal has always been scary...this makes it even more scary...and innocent people are dead...CAMERAS in the cp.
# ::tokens ["the", "whole", "cockpit", "deal", "has", "always", "been", "scary", "...", "this", "makes", "it", "even", "more", "scary", "...", "and", "innocent", "people", "are", "dead", "...", "CAMERAS", "in", "the", "cp", "."]
# ::lemmas ["the", "whole", "cockpit", "deal", "have", "always", "be", "scary", "...", "this", "make", "it", "even", "more", "scary", "...", "and", "innocent", "people", "be", "dead", "...", "CAMERAS", "in", "the", "cp", "."]
(c1-4 / multi-sentence
      :snt1 (c1-15 / scary-03
                   :ARG0 (c1-10 / deal-01
                                :ARG2 (c1-11 / cockpit)
                                :mod (c1-1 / whole))
                   :time (c1-16 / always)
                   :ARG0-of (c1-9 / make-02
                                  :ARG1 (c1-5 / scary-03
                                              :ARG0 c1-10
                                              :mod (c1-6 / even)
                                              :ARG2-of (c1-0 / have-degree-91
                                                             :ARG1 c1-10
                                                             :ARG3 (c1-3 / more)))))
      :snt2 (c1-2 / die-01
                  :ARG1 (c1-12 / person
                               :ARG1-of (c1-7 / innocent-01)))
      :snt3 (c1-13 / car-make
                   :location (c1-14 / government-organization
                                    :name (c1-8 / name
                                                :op1 "CIA"))))

# ::snt this is the Slateist of all Slate headlines.
# ::tokens ["this", "is", "the", "Slateist", "of", "all", "Slate", "headlines", "."]
# ::lemmas ["this", "be", "the", "Slateist", "of", "all", "Slate", "headline", "."]
(c2-3 / person
      :ARG0-of (c2-0 / have-org-role-91
                     :ARG1 (c2-2 / newspaper
                                 :name (c2-1 / name
                                             :op1 "Slate"))
                     :ARG3 (c2-6 / headline
                                 :mod (c2-4 / all)))
      :domain (c2-5 / this))

# ::snt Are planes that can scan obstructions a mile out/below not possible? Seems like overriding pilot control would not be that difficult?
# ::tokens ["Are", "planes", "that", "can", "scan", "obstructions", "a", "mile", "out", "/", "below", "not", "possible", "?", "Seems", "like", "overriding", "pilot", "control", "would", "not", "be", "that", "difficult", "?"]
# ::lemmas ["be", "plane", "that", "can", "scan", "obstruction", "a", "mile", "out", "/", "below", "not", "possible", "?", "seem", "like", "override", "pilot", "control", "would", "not", "be", "that", "difficult", "?"]
(c3-1 / multi-sentence
      :snt1 (c3-2 / possible-01
                  :ARG1 (c3-5 / plane
                              :ARG0-of (c3-4 / scan-01
                                             :ARG1 (c3-16 / obstruct-01)
                                             :ARG1-of (c3-7 / possible-01)
                                             :location (c3-15 / or
                                                              :op1 (c3-12 / out)
                                                              :op2 (c3-8 / below)
                                                              :quant (c3-3 / distance-quantity
                                                                           :unit (c3-11 / mile)
                                                                           :quant 1))))
                  :polarity (c3-6 / amr-unknown)
                  :polarity -)
      :snt2 (c3-10 / seem-01
                   :ARG1 (c3-0 / difficult
                               :domain (c3-13 / override-01
                                              :ARG1 (c3-17 / control-01
                                                           :ARG0 (c3-14 / person
                                                                        :ARG0-of (c3-9 / pilot-01))))
                               :degree (c3-18 / that
                                              :polarity -))))

# ::snt This kind of thing might speed the development
# ::tokens ["This", "kind", "of", "thing", "might", "speed", "the", "development"]
# ::lemmas ["this", "kind", "of", "thing", "might", "speed", "the", "development"]
(c4-1 / possible-01
      :ARG1 (c4-4 / speed-01
                  :ARG0 (c4-5 / thing
                              :mod (c4-0 / kind
                                         :mod (c4-3 / this)))
                  :ARG1 (c4-2 / develop-01)))

# ::snt codes enter override. Pilot AND Copilot must act in unison disengage. Backup ground &ampat sigs force safe hover
# ::tokens ["codes", "enter", "override", ".", "Pilot", "AND", "Copilot", "must", "act", "in", "unison", "disengage", ".", "Backup", "ground", "&", "ampat", "sigs", "force", "safe", "hover"]
# ::lemmas ["code", "enter", "override", ".", "Pilot", "AND", "Copilot", "must", "act", "in", "unison", "disengage", ".", "backup", "ground", "&", "ampat", "sig", "force", "safe", "hover"]
(c5-0 / multi-sentence
      :snt1 (c5-9 / enter-01
                  :ARG0 (c5-18 / code-01)
                  :ARG1 (c5-17 / override-01))
      :snt2 (c5-16 / obligate-01
                   :ARG1 (c5-5 / and
                               :op1 (c5-1 / person
                                          :ARG0-of (c5-4 / pilot-01))
                               :op2 (c5-7 / person
                                          :ARG0-of c5-4)))
      :ARG2 (c5-14 / act-02
                   :ARG0 c5-5
                   :manner (c5-13 / unison)
                   :manner-of (c5-2 / disengage-01
                                    :ARG0 c5-5))
      :snt3 (c5-11 / and
                   :op1 (c5-12 / ground
                               :ARG1-of (c5-8 / backup-01))
                   :op2 (c5-3 / sig
                              :mod (c5-15 / big))
                   :op3 (c5-6 / hover-01
                              :ARG2 (c5-10 / safe-01))))

# ::snt Yes of course, hand our lives over to robots
# ::tokens ["Yes", "of", "course", ",", "hand", "our", "lives", "over", "to", "robots"]
# ::lemmas ["yes", "of", "course", ",", "hand", "our", "life", "over", "to", "robot"]
(c6-0 / hand-over-02
      :ARG0 (c6-1 / we)
      :ARG1 (c6-2 / life
                  :poss c6-1)
      :ARG2 (c6-4 / robot)
      :mod (c6-3 / of-course)
      :mode imperative)

# ::snt god shut up.
# ::tokens ["god", "shut", "up", "."]
# ::lemmas ["god", "shut", "up", "."]
(c7-0 / shut-up-06
      :ARG0 (c7-1 / person
                  :name (c7-2 / name
                              :op1 "God")
                  :ARG1-of c7-0)
      :mode imperative)
