# ::snt No one does.
# ::tokens ["No", "one", "does", "."]
# ::lemmas ["no", "one", "do", "."]
(c1-1 / do-02
      :ARG0 (c1-0 / no-one))

# ::snt Why is the correct response to brutality to offend lots of people who *don't* support that brutality?
# ::tokens ["Why", "is", "the", "correct", "response", "to", "brutality", "to", "offend", "lots", "of", "people", "who", "*", "do", "n't", "*", "support", "that", "brutality", "?"]
# ::lemmas ["why", "be", "the", "correct", "response", "to", "brutality", "to", "offend", "lot", "of", "people", "who", "*", "do", "not", "*", "support", "that", "brutality", "?"]
(c2-6 / cause-01
      :ARG0 (c2-8 / amr-unknown)
      :ARG1 (c2-5 / respond-01
                  :ARG1 (c2-1 / brutalize-01)
                  :ARG1-of (c2-4 / correct-02)
                  :purpose (c2-2 / offend-01
                                 :ARG1 (c2-3 / person
                                             :quant (c2-0 / lot)
                                             :ARG0-of (c2-7 / support-01
                                                            :ARG1 c2-1
                                                            :polarity -)))))

# ::snt Why insult people who have nothing to do with this? People are genuinely offended by such drawings.
# ::tokens ["Why", "insult", "people", "who", "have", "nothing", "to", "do", "with", "this", "?", "People", "are", "genuinely", "offended", "by", "such", "drawings", "."]
# ::lemmas ["why", "insult", "people", "who", "have", "nothing", "to", "do", "with", "this", "?", "people", "be", "genuinely", "offend", "by", "such", "drawing", "."]
(c3-1 / multi-sentence
      :snt1 (c3-7 / cause-01
                  :ARG0 (c3-12 / amr-unknown)
                  :ARG1 (c3-3 / insult-01
                              :ARG1 (c3-5 / person
                                          :ARG0-of (c3-0 / have-to-do-with-04
                                                         :ARG1 (c3-10 / this)
                                                         :ARG2 (c3-4 / nothing)))))
      :snt2 (c3-2 / offend-01
                  :ARG0 (c3-6 / draw-01
                              :mod (c3-9 / such))
                  :ARG1 (c3-11 / person)
                  :manner (c3-8 / genuine)))

# ::snt Jews label anyone they don't like as Anti-Semite and campaign until that person/company is finished.
# ::tokens ["Jews", "label", "anyone", "they", "do", "n't", "like", "as", "Anti", "-", "Semite", "and", "campaign", "until", "that", "person", "/", "company", "is", "finished", "."]
# ::lemmas ["Jews", "label", "anyone", "they", "do", "not", "like", "as", "Anti", "-", "Semite", "and", "campaign", "until", "that", "person", "/", "company", "be", "finish", "."]
(c4-11 / and
       :op1 (c4-0 / label-01
                  :ARG0 (c4-7 / person
                              :mod (c4-8 / religious-group
                                         :name (c4-6 / name
                                                     :op1 "Jew")))
                  :ARG1 (c4-5 / anyone
                              :ARG1-of (c4-9 / dislike-01
                                             :ARG0 c4-7))
                  :ARG2 (c4-3 / oppose-01
                              :ARG0 c4-5
                              :ARG1 (c4-4 / ethnic-group
                                          :name c4-6
                                          :op1 "Jew")))
       :op2 (c4-10 / campaign-01
                   :ARG0 c4-7
                   :time (c4-2 / until
                               :op1 (c4-1 / finish-01
                                          :ARG1 c4-10))))

# ::snt ...and this
# ::tokens ["...", "and", "this"]
# ::lemmas ["...", "and", "this"]
(c5-1 / and
      :op2 (c5-0 / this))

# ::snt :How about this?
# ::tokens [":", "How", "about", "this", "?"]
# ::lemmas [":", "how", "about", "this", "?"]
(c6-0 / say-01
      :ARG1 (c6-2 / amr-unknown)
      :ARG3 (c6-1 / this))

# ::snt Also they kid you along with benign stuff then ... WHAM it's like a river of shite!
# ::tokens ["Also", "they", "kid", "you", "along", "with", "benign", "stuff", "then", "...", "WHAM", "it", "'s", "like", "a", "river", "of", "shite", "!"]
# ::lemmas ["also", "they", "kid", "you", "along", "with", "benign", "stuff", "then", "...", "wham", "it", "be", "like", "a", "river", "of", "shite", "!"]
(c7-2 / multi-sentence
      :snt1 (c7-6 / kid-01
                  :ARG0 (c7-11 / they)
                  :ARG1 (c7-0 / you)
                  :ARG2 (c7-10 / stuff
                               :mod (c7-3 / benign))
                  :mod (c7-12 / also)
                  :time (c7-9 / then))
      :snt2 (c7-8 / resemble-01
                  :ARG1 (c7-5 / it)
                  :ARG2 (c7-7 / river
                              :consist-of (c7-4 / shit))
                  :mod (c7-1 / wham
                             :mode expressive)))

# ::snt just for the record. I am not in any way, shape or form defending this atrocity.
# ::tokens ["just", "for", "the", "record", ".", "I", "am", "not", "in", "any", "way", ",", "shape", "or", "form", "defending", "this", "atrocity", "."]
# ::lemmas ["just", "for", "the", "record", ".", "i", "be", "not", "in", "any", "way", ",", "shape", "or", "form", "defend", "this", "atrocity", "."]
(c8-4 / multi-sentence
      :snt1 (c8-0 / have-purpose-91
                  :ARG2 (c8-8 / record-01)
                  :mod (c8-1 / just))
      :snt2 (c8-9 / defend-01
                  :ARG0 (c8-7 / i)
                  :ARG1 (c8-12 / atrocity
                               :mod (c8-11 / this))
                  :manner (c8-5 / or
                                :op1 (c8-2 / way)
                                :op2 (c8-10 / shape)
                                :op3 (c8-3 / form)
                                :mod (c8-6 / any))
                  :polarity -))

# ::snt I know! Gives me the creeps.
# ::tokens ["I", "know", "!", "Gives", "me", "the", "creeps", "."]
# ::lemmas ["i", "know", "!", "give", "i", "the", "creep", "."]
(c9-0 / multi-sentence
      :snt1 (c9-5 / know-01
                  :ARG0 (c9-1 / i))
      :snt2 (c9-3 / give-01
                  :ARG1 (c9-2 / creep)
                  :ARG2 (c9-4 / i)))

# ::snt What innocent Muslims ought to find insulting is an atrocity committed in their name, not a sodding cartoon.
# ::tokens ["What", "innocent", "Muslims", "ought", "to", "find", "insulting", "is", "an", "atrocity", "committed", "in", "their", "name", ",", "not", "a", "sodding", "cartoon", "."]
# ::lemmas ["what", "innocent", "Muslims", "ought", "to", "find", "insulting", "be", "an", "atrocity", "commit", "in", "their", "name", ",", "not", "a", "sodding", "cartoon", "."]
(c10-5 / recommend-01
       :ARG1 (c10-0 / find-02
                    :ARG0 (c10-4 / person
                                 :mod (c10-2 / religious-group
                                             :name (c10-3 / name
                                                          :op1 "Muslim"))
                                 :ARG1-of (c10-1 / innocent-01))
                    :ARG1 (c10-7 / insult-01
                                 :ARG0 (c10-11 / atrocity
                                               :ARG1-of (c10-6 / commit-02
                                                               :prep-in c10-3
                                                               :poss c10-4))
                                 :ARG1-of (c10-8 / contrast-01
                                                 :ARG2 (c10-9 / cartoon
                                                              :ARG0-of (c10-10 / sodding-01)
                                                              :polarity -)))))

# ::snt But by that token Jews, Blacks and Irish people would have to 'learn' not to be offended either
# ::tokens ["But", "by", "that", "token", "Jews", ",", "Blacks", "and", "Irish", "people", "would", "have", "to", "'", "learn", "'", "not", "to", "be", "offended", "either"]
# ::lemmas ["but", "by", "that", "token", "Jews", ",", "Blacks", "and", "Irish", "people", "would", "have", "to", "'", "learn", "'", "not", "to", "be", "offend", "either"]
(c12-10 / contrast-01
        :ARG2 (c12-4 / obligate-01
                     :ARG1 (c12-15 / and
                                   :op1 (c12-8 / person
                                               :mod (c12-9 / religious-group
                                                           :name (c12-6 / name
                                                                        :op1 "Jew")))
                                   :op2 (c12-14 / person
                                                :ARG1-of (c12-3 / black-05))
                                   :op3 (c12-2 / person
                                               :mod (c12-11 / country
                                                            :name (c12-7 / name
                                                                         :op1 "Ireland"))))
                     :ARG2 (c12-0 / learn-01
                                  :ARG0 c12-15
                                  :ARG1 (c12-1 / offend-01
                                               :ARG1 c12-15
                                               :polarity -)
                                  :mod (c12-5 / either))
                     :manner (c12-13 / token
                                     :mod (c12-12 / that))))

# ::snt Yes, until it becomes yours.
# ::tokens ["Yes", ",", "until", "it", "becomes", "yours", "."]
# ::lemmas ["yes", ",", "until", "it", "become", "yours", "."]
(c13-2 / be-temporally-at-91
       :ARG2 (c13-1 / until
                    :op1 (c13-4 / become-01
                                :ARG1 (c13-3 / it)
                                :ARG2 (c13-5 / thing
                                             :poss (c13-0 / you)))))

# ::snt Ditto
# ::tokens ["Ditto"]
# ::lemmas ["ditto"]
(c14-0 / ditto)

# ::snt It's a good point
# ::tokens ["It", "'s", "a", "good", "point"]
# ::lemmas ["it", "be", "a", "good", "point"]
(c15-0 / point-04
       :ARG1-of (c15-1 / good-02)
       :domain (c15-2 / it))

# ::snt No point insulting billions of innocent muslims just to thumb our noses at a bunch of lunatics.They're not worth it
# ::tokens ["No", "point", "insulting", "billions", "of", "innocent", "muslims", "just", "to", "thumb", "our", "noses", "at", "a", "bunch", "of", "lunatics", ".", "They're", "not", "worth", "it"]
# ::lemmas ["no", "point", "insult", "billions", "of", "innocent", "muslim", "just", "to", "thumb", "our", "nose", "at", "a", "bunch", "of", "lunatic", ".", "they're", "not", "worth", "it"]
(c16-3 / multi-sentence
       :snt1 (c16-10 / point-03
                     :ARG1 (c16-6 / insult-01
                                  :ARG1 (c16-16 / person
                                                :mod (c16-11 / religious-group
                                                             :name (c16-8 / name
                                                                          :op1 "Islam"))
                                                :quant (c16-12 / multiple
                                                               :op1 1000000000)
                                                :ARG1-of (c16-13 / innocent-01)
                                                :part (c16-9 / nose))
                                  :purpose (c16-15 / thumb-01
                                                   :ARG0 (c16-1 / we)
                                                   :ARG1 c16-9
                                                   :direction (c16-2 / lunatic
                                                                     :quant (c16-5 / bunch))
                                                   :mod (c16-0 / just)))
                     :polarity -)
       :snt2 (c16-7 / worth-02
                    :ARG1 (c16-14 / they)
                    :ARG2 (c16-4 / it)
                    :polarity -))

# ::snt And if that's the case, that is your problem.
# ::tokens ["And", "if", "that", "'s", "the", "case", ",", "that", "is", "your", "problem", "."]
# ::lemmas ["and", "if", "that", "be", "the", "case", ",", "that", "be", "your", "problem", "."]
(c17-4 / and
       :op2 (c17-1 / problem
                   :poss (c17-0 / you)
                   :domain (c17-3 / that)
                   :condition (c17-2 / case-04
                                     :ARG1 c17-3)))

# ::snt I get that ... I defend the right to free speech however there is a much broader context to this which is not
# ::tokens ["I", "get", "that", "...", "I", "defend", "the", "right", "to", "free", "speech", "however", "there", "is", "a", "much", "broader", "context", "to", "this", "which", "is", "not"]
# ::lemmas ["i", "get", "that", "...", "i", "defend", "the", "right", "to", "free", "speech", "however", "there", "be", "a", "much", "broad", "context", "to", "this", "which", "be", "not"]
(c18-2 / multi-sentence
       :snt1 (c18-9 / get-01
                    :ARG0 (c18-5 / i)
                    :ARG1 (c18-14 / that))
       :snt2 (c18-8 / contrast-01
                    :ARG1 (c18-7 / defend-01
                                 :ARG0 (c18-10 / i)
                                 :ARG1 (c18-11 / right-05
                                               :ARG2 (c18-12 / speak-01
                                                             :ARG3-of (c18-1 / free-04))))
                    :ARG2 (c18-13 / context
                                  :topic c18-11
                                  :ARG1-of (c18-0 / have-degree-91
                                                  :ARG2 (c18-4 / broad-02
                                                               :ARG1 c18-13)
                                                  :ARG3 (c18-6 / more
                                                               :quant (c18-3 / much))
                                                  :ARG4 (c18-15 / context
                                                                :topic c18-11
                                                                :polarity -)))))

# ::snt Ah, you don't like Jews. Bye bye.
# ::tokens ["Ah", ",", "you", "do", "n't", "like", "Jews", ".", "Bye", "bye", "."]
# ::lemmas ["ah", ",", "you", "do", "not", "like", "Jews", ".", "bye", "bye", "."]
(c19-1 / multi-sentence
       :snt1 (c19-5 / dislike-01
                    :ARG0 (c19-0 / you)
                    :ARG1 (c19-4 / person
                                 :mod (c19-6 / religious-group
                                             :name (c19-3 / name
                                                          :op1 "Jew")))
                    :mod (c19-7 / ah
                                :mode expressive))
       :snt2 (c19-2 / bye
                    :mode expressive))

# ::snt explored.
# ::tokens ["explored", "."]
# ::lemmas ["explore", "."]
(c20-0 / explain-01)

# ::snt And neither am I! I think this has little to do with actual Muslims.
# ::tokens ["And", "neither", "am", "I", "!", "I", "think", "this", "has", "little", "to", "do", "with", "actual", "Muslims", "."]
# ::lemmas ["and", "neither", "be", "i", "!", "i", "think", "this", "have", "little", "to", "do", "with", "actual", "Muslims", "."]
(c21-2 / multi-sentence
       :snt1 (c21-10 / and
                     :op2 (c21-4 / i
                                 :polarity -))
       :snt2 (c21-9 / think-01
                    :ARG0 c21-4)
       :ARG1 (c21-0 / have-to-do-with-04
                    :ARG0 (c21-8 / this)
                    :ARG1 (c21-6 / person
                                 :mod (c21-7 / religious-group
                                             :name (c21-5 / name
                                                          :op1 "Islam"))
                                 :ARG1-of (c21-3 / actual-02))
                    :ARG2 (c21-1 / little)))

# ::snt Organised Jewry, I mean, not the actual people. Otherwise I'd be hating on my own ancestors.
# ::tokens ["Organised", "Jewry", ",", "I", "mean", ",", "not", "the", "actual", "people", ".", "Otherwise", "I", "'d", "be", "hating", "on", "my", "own", "ancestors", "."]
# ::lemmas ["Organised", "Jewry", ",", "i", "mean", ",", "not", "the", "actual", "people", ".", "otherwise", "i", "would", "be", "hate", "on", "my", "own", "ancestor", "."]
(c22-2 / multi-sentence
       :snt1 (c22-9 / mean-01
                    :ARG0 (c22-6 / i)
                    :ARG2 (c22-12 / instead-of-91
                                  :ARG1 (c22-4 / organize-01
                                               :ARG1 (c22-10 / religious-group
                                                             :name (c22-7 / name
                                                                          :op1 "Jew")))
                                  :ARG2 (c22-11 / person
                                                :ARG1-of (c22-15 / actual-02))))
       :snt2 (c22-0 / have-condition-91
                    :ARG1 (c22-1 / hate-01
                                 :ARG0 (c22-3 / i)
                                 :ARG1 (c22-14 / person
                                               :ARG0-of (c22-8 / have-rel-role-91
                                                               :ARG1 c22-3
                                                               :ARG2 (c22-5 / ancestor))))
                    :ARG2 (c22-13 / have-polarity-91
                                  :ARG1 c22-4
                                  :ARG2 -)))

# ::snt Yes, remind me when was the last time Jews bombed the Guardian.
# ::tokens ["Yes", ",", "remind", "me", "when", "was", "the", "last", "time", "Jews", "bombed", "the", "Guardian", "."]
# ::lemmas ["yes", ",", "remind", "i", "when", "be", "the", "last", "time", "Jews", "bomb", "the", "Guardian", "."]
(c23-8 / remind-01
       :ARG0 (c23-0 / you)
       :ARG1 (c23-10 / time
                     :mod (c23-1 / last)
                     :time-of (c23-2 / bomb-01
                                     :ARG0 (c23-7 / person
                                                  :mod (c23-4 / religious-group
                                                              :name (c23-5 / name
                                                                           :op1 "Jew")))
                                     :ARG1 (c23-6 / newspaper
                                                  :name (c23-9 / name
                                                               :op1 "Guardian"))))
       :ARG2 (c23-3 / i)
       :mode imperative)

# ::snt There's a lot of very dodgy Twitter accounts who seem benign then you see the real side
# ::tokens ["There", "'s", "a", "lot", "of", "very", "dodgy", "Twitter", "accounts", "who", "seem", "benign", "then", "you", "see", "the", "real", "side"]
# ::lemmas ["there", "be", "a", "lot", "of", "very", "dodgy", "Twitter", "account", "who", "seem", "benign", "then", "you", "see", "the", "real", "side"]
(c24-10 / seem-01
        :ARG1 (c24-3 / benign
                     :domain (c24-12 / account
                                     :quant (c24-1 / lot)
                                     :mod (c24-8 / dodgy
                                                 :degree (c24-6 / very))
                                     :medium (c24-7 / publication
                                                    :name (c24-5 / name
                                                                 :op1 "Twitter"))))
        :ARG2 (c24-0 / you)
        :time (c24-11 / then
                      :op1 (c24-4 / see-01
                                  :ARG0 c24-0
                                  :ARG1 (c24-2 / side
                                               :ARG1-of (c24-9 / real-04)))))

# ::snt It's remarkable how quickly they come out the woodwork.
# ::tokens ["It", "'s", "remarkable", "how", "quickly", "they", "come", "out", "the", "woodwork", "."]
# ::lemmas ["it", "be", "remarkable", "how", "quickly", "they", "come", "out", "the", "woodwork", "."]
(c25-3 / remarkable-02
       :ARG1 (c25-2 / quick-02
                    :ARG1 (c25-4 / come-01
                                 :ARG1 (c25-6 / they)
                                 :direction (c25-1 / out-of
                                                   :op1 (c25-0 / woodwork)))
                    :degree (c25-5 / so)))

# ::snt If people insult something that's important to you, you feel that your identity is under attack.
# ::tokens ["If", "people", "insult", "something", "that", "'s", "important", "to", "you", ",", "you", "feel", "that", "your", "identity", "is", "under", "attack", "."]
# ::lemmas ["if", "people", "insult", "something", "that", "be", "important", "to", "you", ",", "you", "feel", "that", "your", "identity", "be", "under", "attack", "."]
(c26-1 / feel-01
       :ARG0 (c26-0 / you)
       :ARG1 (c26-7 / attack-01
                    :ARG1 (c26-3 / identity
                                 :poss c26-0))
       :condition (c26-5 / insult-01
                         :ARG0 (c26-4 / person)
                         :ARG1 (c26-6 / something
                                      :ARG1-of (c26-2 / important-01
                                                      :ARG2 c26-0))))

# ::snt Oh dear... Just saw those tweets... Blocked him.
# ::tokens ["Oh", "dear", "...", "Just", "saw", "those", "tweets", "...", "Blocked", "him", "."]
# ::lemmas ["oh", "dear", "...", "just", "see", "those", "tweet", "...", "block", "he", "."]
(c27-2 / multi-sentence
       :snt1 (c27-7 / dear
                    :mod (c27-3 / oh))
       :snt2 (c27-9 / see-01
                    :ARG0 (c27-4 / i)
                    :ARG1 (c27-10 / thing
                                  :ARG1-of (c27-8 / tweet-01)
                                  :mod (c27-6 / that))
                    :time (c27-0 / just))
       :snt3 (c27-5 / knock-01
                    :ARG1 (c27-1 / he)))

# ::snt Because they have to learn to not be offended, that's why.
# ::tokens ["Because", "they", "have", "to", "learn", "to", "not", "be", "offended", ",", "that", "'s", "why", "."]
# ::lemmas ["because", "they", "have", "to", "learn", "to", "not", "be", "offend", ",", "that", "be", "why", "."]
(c28-4 / cause-01
       :ARG0 (c28-2 / obligate-01
                    :ARG1 (c28-6 / they)
                    :ARG2 (c28-0 / learn-01
                                 :ARG0 c28-6
                                 :ARG1 (c28-1 / offend-01
                                              :ARG1 c28-6
                                              :polarity -)))
       :ARG1 (c28-5 / that
                    :ARG0-of (c28-3 / cause-01)))
