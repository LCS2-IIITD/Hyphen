# ::snt Remember this RT: From Paris to : Answer with .
# ::tokens ["Remember", "this", "RT", ":", "From", "Paris", "to", ":", "Answer", "with", "."]
# ::lemmas ["remember", "this", "rt", ":", "from", "Paris", "to", ":", "answer", "with", "."]
(c1-4 / remember-01
      :ARG0 (c1-0 / you)
      :ARG1 (c1-3 / publication
                  :name (c1-1 / name
                              :op1 "RT")
                  :source (c1-5 / city
                                :name (c1-2 / name
                                            :op1 "Paris"))
                  :mod (c1-6 / this)
                  :ARG1-of (c1-7 / answer-01
                                 :instrument c1-7))
      :mode imperative)

# ::snt crazy people out there blaming religion. No religious accepts this torture. God help the victims
# ::tokens ["crazy", "people", "out", "there", "blaming", "religion", ".", "No", "religious", "accepts", "this", "torture", ".", "God", "help", "the", "victims"]
# ::lemmas ["crazy", "people", "out", "there", "blame", "religion", ".", "no", "religious", "accept", "this", "torture", ".", "God", "help", "the", "victim"]
(c2-1 / multi-sentence
      :snt1 (c2-8 / person
                  :ARG1-of (c2-10 / crazy-03)
                  :location (c2-4 / out-there)
                  :ARG0-of (c2-3 / blame-01
                                 :ARG1 (c2-9 / religion)))
      :snt2 (c2-14 / accept-01
                   :ARG0 (c2-5 / religious)
                   :ARG1 (c2-12 / torture-01
                                :mod (c2-11 / this))
                   :polarity -)
      :snt3 (c2-0 / help-01
                  :ARG0 (c2-13 / person
                               :name (c2-6 / name
                                           :op1 "God"))
                  :ARG2 (c2-2 / person
                              :ARG1-of (c2-7 / victimize-01))))

# ::snt Not the best timed or best judged tweet RT: From to : Answer with .
# ::tokens ["Not", "the", "best", "timed", "or", "best", "judged", "tweet", "RT", ":", "From", "to", ":", "Answer", "with", "."]
# ::lemmas ["not", "the", "well", "timed", "or", "well", "judge", "tweet", "RT", ":", "from", "to", ":", "answer", "with", "."]
(c3-3 / multi-sentence
      :snt1 (c3-4 / or
                  :op1 (c3-0 / have-degree-91
                             :ARG1 (c3-14 / tweet)
                             :ARG2 (c3-11 / good-02
                                          :ARG1 c3-14)
                             :ARG3 (c3-8 / most)
                             :polarity -)
                  :op2 (c3-15 / have-degree-91
                              :ARG1 c3-14
                              :ARG2 (c3-9 / good-02
                                          :ARG1 c3-14)
                              :ARG3 (c3-2 / most)
                              :ARG5 (c3-12 / tweet
                                           :ARG1-of (c3-1 / judge-01
                                                          :ARG1-of (c3-7 / have-degree-91
                                                                         :ARG2 (c3-6 / good-02
                                                                                     :ARG1 c3-12)
                                                                         :ARG3 (c3-10 / most))))
                              :polarity -))
      :snt2 (c3-13 / answer-01
                   :manner (c3-5 / amr-unknown)))

# ::snt These pricks lost their rights a long time ago.
# ::tokens ["These", "pricks", "lost", "their", "rights", "a", "long", "time", "ago", "."]
# ::lemmas ["these", "prick", "lose", "their", "right", "a", "long", "time", "ago", "."]
(c5-0 / lose-02
      :ARG0 (c5-3 / prick
                  :mod (c5-7 / this))
      :ARG1 (c5-4 / right-05
                  :ARG1 c5-3)
      :time (c5-1 / before
                  :op1 (c5-2 / now)
                  :quant (c5-6 / time
                               :ARG1-of (c5-5 / long-03))))

# ::snt Best ALL
# ::tokens ["Best", "ALL"]
# ::lemmas ["good", "all"]
(c6-0 / have-degree-91
      :ARG2 (c6-2 / good-02)
      :ARG3 (c6-1 / most)
      :ARG5 (c6-3 / all))

# ::snt This is everything I believe in ": From Paris to : Answer with .
# ::tokens ["This", "is", "everything", "I", "believe", "in", "\"", ":", "From", "Paris", "to", ":", "Answer", "with", "."]
# ::lemmas ["this", "be", "everything", "i", "believe", "in", "\"", ":", "from", "Paris", "to", ":", "answer", "with", "."]
(c7-1 / everything
      :ARG1-of (c7-0 / believe-01
                     :ARG0 (c7-3 / i))
      :domain (c7-6 / this)
      :source (c7-5 / city
                    :name (c7-4 / name
                                :op1 "Paris"))
      :ARG2-of (c7-7 / answer-01
                     :instrument (c7-2 / amr-unknown)))

# ::snt This is very sad that religion is used to massacre innocent people .Islamoic religious leaders,should disown,denounce violence
# ::tokens ["This", "is", "very", "sad", "that", "religion", "is", "used", "to", "massacre", "innocent", "people", ".Islamoic", "religious", "leaders", ",", "should", "disown", ",", "denounce", "violence"]
# ::lemmas ["this", "be", "very", "sad", "that", "religion", "be", "use", "to", "massacre", "innocent", "people", ".islamoic", "religious", "leader", ",", "should", "disown", ",", "denounce", "violence"]
(c8-14 / sad-02
       :ARG0 (c8-3 / use-01
                   :ARG1 (c8-11 / religion)
                   :ARG2 (c8-2 / massacre-01
                               :ARG0 c8-11
                               :ARG1 (c8-10 / person
                                            :ARG1-of (c8-6 / innocent-01))))
       :degree (c8-9 / very)
       :ARG1-of (c8-12 / cause-01
                       :ARG0 (c8-7 / recommend-01
                                   :ARG1 (c8-15 / and
                                                :op1 (c8-13 / disown-01
                                                            :ARG0 c8-10
                                                            :ARG0-of (c8-1 / lead-02
                                                                           :ARG1 (c8-5 / religious-group
                                                                                       :name (c8-8 / name
                                                                                                   :op1 "Islamoic"))))
                                                :op2 (c8-0 / denounce-01
                                                           :ARG0 c8-10
                                                           :ARG1 (c8-4 / violence))))))

# ::snt You people are incorrigible. Aren't you?
# ::tokens ["You", "people", "are", "incorrigible", ".", "Are", "n't", "you", "?"]
# ::lemmas ["you", "people", "be", "incorrigible", ".", "be", "not", "you", "?"]
(c9-1 / possible-01
      :ARG1 (c9-3 / corrigible
                  :domain (c9-4 / person
                                :mod (c9-0 / you)))
      :ARG1-of (c9-2 / request-confirmation-91
                     :ARG2 c9-0)
      :polarity -)

# ::snt thank you i love you
# ::tokens ["thank", "you", "i", "love", "you"]
# ::lemmas ["thank", "you", "i", "love", "you"]
(c10-4 / and
       :op1 (c10-3 / thank-01
                   :ARG0 (c10-2 / i)
                   :ARG1 (c10-0 / you))
       :op2 (c10-1 / love-01
                   :ARG0 c10-2
                   :ARG1 c10-0))

# ::snt what about the Palestinians in gaza everyday!!!!!!!
# ::tokens ["what", "about", "the", "Palestinians", "in", "gaza", "everyday", "!", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["what", "about", "the", "Palestinians", "in", "gaza", "everyday", "!", "!", "!", "!", "!", "!", "!"]
(c11-8 / amr-unknown
       :topic (c11-2 / person
                     :mod (c11-4 / country
                                 :name (c11-0 / name
                                              :op1 "Palestine"))
                     :location (c11-3 / city
                                      :name (c11-1 / name
                                                   :op1 "Gaza"))
                     :frequency (c11-5 / rate-entity-91
                                       :ARG3 (c11-7 / temporal-quantity
                                                    :unit (c11-6 / day)
                                                    :quant 1))))
