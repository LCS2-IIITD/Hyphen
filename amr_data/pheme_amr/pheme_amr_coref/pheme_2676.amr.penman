# ::snt Could we also add some - Happiness, Understanding, Love and Kindness? Everyone will need it in the days to come.
# ::tokens ["Could", "we", "also", "add", "some", "-", "Happiness", ",", "Understanding", ",", "Love", "and", "Kindness", "?", "Everyone", "will", "need", "it", "in", "the", "days", "to", "come", "."]
# ::lemmas ["could", "we", "also", "add", "some", "-", "happiness", ",", "understanding", ",", "Love", "and", "Kindness", "?", "everyone", "will", "need", "it", "in", "the", "days", "to", "come", "."]
(c1-3 / multi-sentence
      :snt1 (c1-10 / possible-01
                   :polarity (c1-16 / amr-unknown)
                   :ARG1 (c1-6 / add-02
                               :ARG0 (c1-1 / we)
                               :ARG1 (c1-13 / some
                                            :example (c1-9 / and
                                                           :op1 (c1-0 / happy-01)
                                                           :op2 (c1-4 / understand-01)
                                                           :op3 (c1-2 / love-01)
                                                           :op4 (c1-15 / kind-01)))
                               :mod (c1-14 / also)))
      :snt2 (c1-8 / need-01
                  :ARG0 (c1-5 / everyone)
                  :ARG1 (c1-7 / it)
                  :time (c1-11 / day
                               :ARG1-of (c1-12 / come-03))))

# ::snt the innocent deaths could have been prevented A clear sniper shot was available early in the saga. NO tolerance to events
# ::tokens ["the", "innocent", "deaths", "could", "have", "been", "prevented", "A", "clear", "sniper", "shot", "was", "available", "early", "in", "the", "saga", ".", "NO", "tolerance", "to", "events"]
# ::lemmas ["the", "innocent", "death", "could", "have", "be", "prevent", "a", "clear", "sniper", "shot", "be", "available", "early", "in", "the", "saga", ".", "no", "tolerance", "to", "event"]
(c2-1 / multi-sentence
      :snt1 (c2-6 / possible-01
                  :ARG1 (c2-11 / prevent-01
                               :ARG1 (c2-7 / die-01
                                           :ARG1-of (c2-5 / innocent-01))))
      :snt2 (c2-12 / available-02
                   :ARG2 (c2-9 / shoot-01
                               :ARG2 (c2-3 / sniper)
                               :ARG1-of (c2-8 / clear-06))
                   :time (c2-4 / early
                               :part-of (c2-0 / saga)))
      :snt3 (c2-10 / tolerate-01
                   :ARG1 (c2-2 / event)
                   :polarity -))

# ::snt Happiness, Understanding, Love and Kindness coming from and other Channel News?
# ::tokens ["Happiness", ",", "Understanding", ",", "Love", "and", "Kindness", "coming", "from", "and", "other", "Channel", "News", "?"]
# ::lemmas ["happiness", ",", "understanding", ",", "Love", "and", "Kindness", "come", "from", "and", "other", "Channel", "News", "?"]
(c4-8 / come-01
      :ARG1 (c4-10 / and
                   :op1 (c4-0 / happy-01)
                   :op2 (c4-2 / understand-01)
                   :op3 (c4-1 / love-01)
                   :op4 (c4-9 / kind-01))
      :ARG3 (c4-5 / and
                  :op1 (c4-3 / broadcast-program
                             :name (c4-6 / name
                                         :op1 "Channel"
                                         :op2 "News")
                             :mod (c4-4 / other)))
      :polarity (c4-7 / amr-unknown))

# ::snt If you love Australia and all that it is about if not
# ::tokens ["If", "you", "love", "Australia", "and", "all", "that", "it", "is", "about", "if", "not"]
# ::lemmas ["if", "you", "love", "Australia", "and", "all", "that", "it", "be", "about", "if", "not"]
(c6-0 / have-condition-91
      :ARG2 (c6-8 / and
                  :op1 (c6-2 / love-01
                             :ARG0 (c6-1 / you)
                             :ARG1 (c6-7 / country
                                         :name (c6-5 / name
                                                     :op1 "Australia")))
                  :op2 (c6-6 / concern-02
                             :ARG0 c6-2
                             :ARG1 (c6-3 / have-polarity-91
                                         :ARG2 -)
                             :mod (c6-4 / all))))

# ::snt I find it is strange you report on campaign when you like News Ltd papers attack Muslims and Islam.
# ::tokens ["I", "find", "it", "is", "strange", "you", "report", "on", "campaign", "when", "you", "like", "News", "Ltd", "papers", "attack", "Muslims", "and", "Islam", "."]
# ::lemmas ["i", "find", "it", "be", "strange", "you", "report", "on", "campaign", "when", "you", "like", "News", "Ltd", "paper", "attack", "Muslims", "and", "Islam", "."]
(c7-1 / find-02
      :ARG0 (c7-4 / i)
      :ARG1 (c7-12 / strange
                   :domain (c7-9 / report-01
                                 :ARG0 (c7-0 / you)
                                 :ARG1 (c7-10 / campaign-01)
                                 :time (c7-2 / like-01
                                             :ARG0 c7-0
                                             :ARG1 (c7-14 / attack-01
                                                          :ARG0 (c7-8 / paper
                                                                      :poss (c7-11 / company
                                                                                   :name (c7-6 / name
                                                                                               :op1 "News"
                                                                                               :op2 "Ltd")))
                                                          :ARG1 (c7-3 / and
                                                                      :op1 (c7-13 / person
                                                                                  :mod (c7-5 / religious-group
                                                                                             :name (c7-7 / name
                                                                                                         :op1 "Muslim")
                                                                                             :op2-of c7-3))))))))

# ::snt : If anything positive can come from todays events, its this: campaign
# ::tokens [":", "If", "anything", "positive", "can", "come", "from", "todays", "events", ",", "its", "this", ":", "campaign"]
# ::lemmas [":", "if", "anything", "positive", "can", "come", "from", "today", "event", ",", "its", "this", ":", "campaign"]
(c8-3 / campaign-01
      :domain (c8-5 / this)
      :condition (c8-1 / possible-01
                       :ARG1 (c8-2 / come-03
                                   :ARG1 (c8-7 / anything
                                               :mod (c8-6 / positive))
                                   :ARG2 (c8-0 / event
                                               :time (c8-4 / today)))))

# ::snt : If anything positive can come from todays events, its this: campaign
# ::tokens [":", "If", "anything", "positive", "can", "come", "from", "todays", "events", ",", "its", "this", ":", "campaign"]
# ::lemmas [":", "if", "anything", "positive", "can", "come", "from", "today", "event", ",", "its", "this", ":", "campaign"]
(c10-3 / campaign-01
       :domain (c10-5 / this)
       :condition (c10-1 / possible-01
                         :ARG1 (c10-2 / come-03
                                      :ARG1 (c10-7 / anything
                                                   :mod (c10-6 / positive))
                                      :ARG2 (c10-0 / event
                                                   :time (c10-4 / today)))))
