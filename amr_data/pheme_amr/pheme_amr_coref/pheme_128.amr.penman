# ::snt Then you remembered you work for NewsCorp. You will name him, then exploit him for countless sensationalist headlines.
# ::tokens ["Then", "you", "remembered", "you", "work", "for", "NewsCorp", ".", "You", "will", "name", "him", ",", "then", "exploit", "him", "for", "countless", "sensationalist", "headlines", "."]
# ::lemmas ["then", "you", "remember", "you", "work", "for", "NewsCorp", ".", "you", "will", "name", "he", ",", "then", "exploit", "he", "for", "countless", "sensationalist", "headline", "."]
(c1-4 / multi-sentence
      :snt1 (c1-8 / remember-01
                  :ARG0 (c1-2 / you)
                  :ARG1 (c1-1 / work-01
                              :ARG0 c1-2
                              :ARG2 (c1-9 / company
                                          :name (c1-6 / name
                                                      :op1 "NewsCorp")))
                  :time (c1-14 / then))
      :snt2 (c1-15 / and
                   :op1 (c1-7 / name-01
                              :ARG0 (c1-11 / you)
                              :ARG1 (c1-0 / he))
                   :op2 (c1-5 / exploit-01
                              :ARG0 c1-11
                              :ARG1 c1-0
                              :purpose (c1-3 / headline
                                             :mod (c1-12 / sensationalist)
                                             :quant (c1-10 / count
                                                           :polarity -))
                              :time (c1-13 / then))))

# ::snt What are the chances of that actually happening though...Brilliant idea nonetheless.
# ::tokens ["What", "are", "the", "chances", "of", "that", "actually", "happening", "though", "...", "Brilliant", "idea", "nonetheless", "."]
# ::lemmas ["what", "be", "the", "chance", "of", "that", "actually", "happen", "though", "...", "brilliant", "idea", "nonetheless", "."]
(c2-2 / multi-sentence
      :snt1 (c2-0 / have-concession-91
                  :ARG2 (c2-7 / chance-02
                              :ARG1 (c2-4 / event
                                          :mod (c2-8 / that)
                                          :ARG1-of (c2-9 / actual-02))
                              :ARG2 (c2-5 / amr-unknown)))
      :snt2 (c2-6 / idea
                  :ARG0-of (c2-3 / brilliant-01)
                  :ARG1-of (c2-1 / have-concession-91)))

# ::snt Congrats on your tweet!
# ::tokens ["Congrats", "on", "your", "tweet", "!"]
# ::lemmas ["congrat", "on", "your", "tweet", "!"]
(c3-2 / congratulate-01
      :ARG1 (c3-1 / you)
      :ARG2 (c3-0 / tweet-01
                  :ARG0 c3-1))

# ::snt Beyond spinning POLITICAL AGENDA, how many lunatic criminal murderers in the world, attract media attention ????? Not too many.
# ::tokens ["Beyond", "spinning", "POLITICAL", "AGENDA", ",", "how", "many", "lunatic", "criminal", "murderers", "in", "the", "world", ",", "attract", "media", "attention", "?", "?", "?", "?", "?", "Not", "too", "many", "."]
# ::lemmas ["beyond", "spin", "POLITICAL", "AGENDA", ",", "how", "many", "lunatic", "criminal", "murderer", "in", "the", "world", ",", "attract", "medium", "attention", "?", "?", "?", "?", "?", "not", "too", "many", "."]
(c4-3 / multi-sentence
      :snt1 (c4-17 / attract-01
                   :ARG0 (c4-9 / person
                               :ARG0-of (c4-10 / murder-01)
                               :mod (c4-2 / lunatic)
                               :location (c4-1 / world)
                               :quant (c4-7 / amr-unknown))
                   :ARG1 (c4-8 / attend-02
                               :ARG0 (c4-4 / media)
                               :ARG1 c4-9)
                   :mod (c4-6 / beyond
                              :op1 (c4-13 / spin-01
                                          :ARG1 (c4-14 / amnesty
                                                       :mod (c4-16 / politics)))))
      :snt2 (c4-0 / have-quant-91
                  :ARG1 (c4-5 / person
                              :ARG0-of c4-10)
                  :ARG2-of (c4-11 / criminal-03)
                  :polarity -)
      :ARG2 (c4-12 / many)
      :ARG3 (c4-15 / too))

# ::snt from what Muslim community saying he is already a nobody. That however means he has nothing to lose. He's not coming out alive
# ::tokens ["from", "what", "Muslim", "community", "saying", "he", "is", "already", "a", "nobody", ".", "That", "however", "means", "he", "has", "nothing", "to", "lose", ".", "He", "'s", "not", "coming", "out", "alive"]
# ::lemmas ["from", "what", "Muslim", "community", "say", "he", "be", "already", "a", "nobody", ".", "that", "however", "mean", "he", "have", "nothing", "to", "lose", ".", "he", "be", "not", "come", "out", "alive"]
(c5-2 / multi-sentence
      :snt1 (c5-13 / say-01
                   :ARG0 (c5-9 / community
                               :mod (c5-8 / religious-group
                                          :name (c5-5 / name
                                                      :op1 "Muslim")))
                   :ARG1 (c5-6 / nobody
                               :domain (c5-0 / he)
                               :time (c5-17 / already)))
      :snt2 (c5-10 / contrast-01
                   :ARG2 (c5-7 / mean-01
                               :ARG1 (c5-16 / that)
                               :ARG2 (c5-1 / have-03
                                           :ARG0 (c5-11 / he)
                                           :ARG1 (c5-12 / nothing
                                                        :ARG1-of (c5-3 / lose-02
                                                                       :ARG0 c5-11)))))
      :snt3 (c5-14 / come-out-09
                   :ARG1 (c5-4 / he)
                   :manner (c5-15 / live-01
                                  :ARG0 c5-4)
                   :polarity -))

# ::snt yeh a dead nobody
# ::tokens ["yeh", "a", "dead", "nobody"]
# ::lemmas ["yeh", "a", "dead", "nobody"]
(c6-0 / nobody
      :ARG1-of (c6-2 / die-01)
      :mod (c6-1 / yeh
                 :mode expressive))

# ::snt From your lips to God's ears. Thank you for saying this. It's nice to know common sense can prevail in times like these.
# ::tokens ["From", "your", "lips", "to", "God", "'s", "ears", ".", "Thank", "you", "for", "saying", "this", ".", "It", "'s", "nice", "to", "know", "common", "sense", "can", "prevail", "in", "times", "like", "these", "."]
# ::lemmas ["from", "your", "lip", "to", "God", "'s", "ear", ".", "thank", "you", "for", "say", "this", ".", "it", "be", "nice", "to", "know", "common", "sense", "can", "prevail", "in", "time", "like", "these", "."]
(c7-0 / multi-sentence
      :snt1 (c7-6 / be-from-91
                  :ARG1 (c7-4 / lip)
                  :ARG2 (c7-7 / ear
                              :part-of (c7-1 / person
                                             :name (c7-9 / name
                                                         :op1 "God"))))
      :snt2 (c7-18 / thank-01
                   :ARG1 (c7-13 / you)
                   :ARG2 (c7-2 / say-01
                               :ARG0 c7-13
                               :ARG1 (c7-17 / this)))
      :snt3 (c7-15 / nice-01
                   :ARG1 (c7-12 / know-01
                                :ARG1 (c7-3 / possible-01
                                            :ARG1 (c7-5 / prevail-01
                                                        :ARG0 (c7-8 / sense-02
                                                                    :mod (c7-16 / common))
                                                        :time (c7-11 / time
                                                                     :ARG1-of (c7-10 / resemble-01
                                                                                     :ARG2 (c7-14 / this))))))))

# ::snt so true
# ::tokens ["so", "true"]
# ::lemmas ["so", "true"]
(c8-1 / true-01
      :degree (c8-0 / so))

# ::snt Love this idea
# ::tokens ["Love", "this", "idea"]
# ::lemmas ["love", "this", "idea"]
(c9-0 / love-01
      :ARG1 (c9-2 / idea
                  :mod (c9-1 / this)))

# ::snt hey any chance that'll happen?
# ::tokens ["hey", "any", "chance", "that", "'ll", "happen", "?"]
# ::lemmas ["hey", "any", "chance", "that", "'ll", "happen", "?"]
(c10-2 / chance-02
       :polarity (c10-4 / amr-unknown)
       :ARG1 (c10-3 / that)
       :mod (c10-1 / any)
       :mod (c10-0 / hey
                   :mode expressive))

# ::snt As humans we are naturally inquisitive. So hard to put it into practice.
# ::tokens ["As", "humans", "we", "are", "naturally", "inquisitive", ".", "So", "hard", "to", "put", "it", "into", "practice", "."]
# ::lemmas ["as", "human", "we", "be", "naturally", "inquisitive", ".", "so", "hard", "to", "put", "it", "into", "practice", "."]
(c11-3 / multi-sentence
       :snt1 (c11-4 / inquire-01
                    :ARG0 (c11-1 / we
                                 :mod (c11-0 / human))
                    :ARG1-of (c11-5 / natural-02))
       :snt2 (c11-9 / hard-02
                    :ARG1 (c11-6 / practice-01
                                 :ARG0 (c11-2 / you)
                                 :ARG1 (c11-7 / it))
                    :degree (c11-8 / so)))

# ::snt :I'd love it if we never publicly identify this crazed gunman. No name. No photo. No infamy. Just forever a nobody.
# ::tokens [":", "I", "'d", "love", "it", "if", "we", "never", "publicly", "identify", "this", "crazed", "gunman", ".", "No", "name", ".", "No", "photo", ".", "No", "infamy", ".", "Just", "forever", "a", "nobody", "."]
# ::lemmas [":", "i", "would", "love", "it", "if", "we", "never", "publicly", "identify", "this", "craze", "gunman", ".", "no", "name", ".", "no", "photo", ".", "no", "infamy", ".", "just", "forever", "a", "nobody", "."]
(c12-3 / multi-sentence
       :snt1 (c12-2 / love-02
                    :ARG0 (c12-7 / i)
                    :ARG1 (c12-12 / identify-01
                                  :ARG0 (c12-1 / we)
                                  :ARG1 (c12-13 / gunman
                                                :ARG1-of (c12-11 / crazy-03)
                                                :mod (c12-14 / this))
                                  :ARG1-of (c12-10 / public-02)
                                  :time (c12-6 / ever)
                                  :polarity -))
       :snt2 (c12-8 / name
                    :polarity -)
       :snt3 (c12-15 / photograph-01
                     :polarity -)
       :snt4 (c12-4 / infamy
                    :polarity -)
       :snt5 (c12-9 / nobody
                    :mod (c12-5 / forever)
                    :mod (c12-0 / just)))

# ::snt just kill them.. that's all I ask.. is it too much?
# ::tokens ["just", "kill", "them", "..", "that", "'s", "all", "I", "ask", "..", "is", "it", "too", "much", "?"]
# ::lemmas ["just", "kill", "they", "..", "that", "be", "all", "i", "ask", "..", "be", "it", "too", "much", "?"]
(c13-2 / multi-sentence
       :snt1 (c13-6 / kill-01
                    :ARG1 (c13-10 / they)
                    :mod (c13-0 / just)
                    :ARG1-of (c13-11 / ask-01
                                     :ARG0 (c13-5 / i)
                                     :ARG1-of (c13-3 / be-it-08)))
       :snt2 (c13-1 / have-quant-91
                    :ARG1 (c13-8 / it)
                    :ARG2 (c13-7 / much)
                    :ARG3 (c13-9 / too)
                    :polarity (c13-4 / amr-unknown)))

# ::snt No chance. There'll always be that one news station.
# ::tokens ["No", "chance", ".", "There", "'ll", "always", "be", "that", "one", "news", "station", "."]
# ::lemmas ["no", "chance", ".", "there", "'ll", "always", "be", "that", "one", "news", "station", "."]
(c14-0 / multi-sentence
       :snt1 (c14-2 / chance-02
                    :polarity -)
       :snt2 (c14-3 / station
                    :mod (c14-1 / news)
                    :time (c14-5 / always)
                    :mod (c14-4 / that)
                    :quant 1))

# ::snt really hope they just put him on a plane back to where he came from.
# ::tokens ["really", "hope", "they", "just", "put", "him", "on", "a", "plane", "back", "to", "where", "he", "came", "from", "."]
# ::lemmas ["really", "hope", "they", "just", "put", "he", "on", "a", "plane", "back", "to", "where", "he", "come", "from", "."]
(c15-0 / hope-01
       :ARG0 (c15-4 / i)
       :ARG1 (c15-5 / put-01
                    :ARG0 (c15-8 / they)
                    :ARG1 (c15-10 / he)
                    :ARG2 (c15-9 / plane)
                    :direction (c15-3 / back
                                      :op1 (c15-2 / location
                                                  :ARG3-of (c15-7 / come-01
                                                                  :ARG1 c15-10)))
                    :mod (c15-1 / just))
       :degree (c15-6 / really))

# ::snt the company you work for printed his photo on the front page of pm Edition
# ::tokens ["the", "company", "you", "work", "for", "printed", "his", "photo", "on", "the", "front", "page", "of", "pm", "Edition"]
# ::lemmas ["the", "company", "you", "work", "for", "print", "his", "photo", "on", "the", "front", "page", "of", "pm", "Edition"]
(c16-8 / print-01
       :ARG0 (c16-9 / company
                    :ARG3-of (c16-1 / work-01
                                    :ARG0 (c16-2 / you)))
       :ARG1 (c16-10 / photo
                     :poss (c16-0 / he))
       :location (c16-5 / page
                        :mod (c16-3 / front)
                        :part-of (c16-6 / edition
                                        :mod (c16-4 / magazine
                                                    :name (c16-7 / name
                                                                 :op1 "PMS")))))

# ::snt unfortunately that will never happen
# ::tokens ["unfortunately", "that", "will", "never", "happen"]
# ::lemmas ["unfortunately", "that", "will", "never", "happen"]
(c17-1 / fortunate-01
       :ARG2 (c17-2 / that
                    :time (c17-0 / ever)
                    :polarity -)
       :polarity -)

# ::snt I agree Todd he needs to fade into obscurity
# ::tokens ["I", "agree", "Todd", "he", "needs", "to", "fade", "into", "obscurity"]
# ::lemmas ["i", "agree", "Todd", "he", "need", "to", "fade", "into", "obscurity"]
(c18-6 / agree-01
       :ARG0 (c18-2 / i)
       :ARG1 (c18-3 / need-01
                    :ARG0 (c18-5 / person
                                 :name (c18-4 / name
                                              :op1 "Todd"))
                    :ARG1 (c18-0 / fade-01
                                 :ARG1 c18-5
                                 :ARG4 (c18-1 / obscurity)))
       :ARG2 c18-5)
