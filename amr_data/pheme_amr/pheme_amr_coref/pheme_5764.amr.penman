# ::snt what?
# ::tokens ["what", "?"]
# ::lemmas ["what", "?"]
(c3-0 / amr-unknown)

# ::snt thoughrs and prayers tocall french people, this stops today.
# ::tokens ["thoughrs", "and", "prayers", "tocall", "french", "people", ",", "this", "stops", "today", "."]
# ::lemmas ["thoughrs", "and", "prayer", "tocall", "french", "people", ",", "this", "stop", "today", "."]
(c4-6 / stop-01
      :ARG1 (c4-7 / this)
      :time (c4-5 / today)
      :concession (c4-9 / and
                        :op1 (c4-0 / have-concession-91)
                        :op2 (c4-2 / pray-01)
                        :purpose (c4-4 / call-02
                                       :ARG1 (c4-8 / person
                                                   :mod (c4-3 / country
                                                              :name (c4-1 / name
                                                                          :op1 "France"))))))

# ::snt had you meant the terrorists it would be inappropriate
# ::tokens ["had", "you", "meant", "the", "terrorists", "it", "would", "be", "inappropriate"]
# ::lemmas ["have", "you", "mean", "the", "terrorist", "it", "would", "be", "inappropriate"]
(c5-4 / appropriate-02
      :ARG1 (c5-2 / it)
      :condition (c5-1 / mean-02
                       :ARG0 (c5-0 / you)
                       :ARG2 (c5-3 / terrorist))
      :polarity -)

# ::snt I am very tired, not much sleep last night, then a wasted journey this morning.
# ::tokens ["I", "am", "very", "tired", ",", "not", "much", "sleep", "last", "night", ",", "then", "a", "wasted", "journey", "this", "morning", "."]
# ::lemmas ["i", "be", "very", "tired", ",", "not", "much", "sleep", "last", "night", ",", "then", "a", "waste", "journey", "this", "morning", "."]
(c6-13 / and
       :op1 (c6-12 / tire-01
                   :ARG1 (c6-5 / i)
                   :degree (c6-7 / very))
       :op2 (c6-11 / sleep-01
                   :ARG0 c6-5
                   :quant (c6-4 / much)
                   :time (c6-9 / date-entity
                               :dayperiod (c6-6 / night)
                               :mod (c6-1 / yesterday))
                   :polarity -)
       :op3 (c6-0 / journey-01
                  :ARG0 c6-5
                  :time (c6-2 / date-entity
                              :dayperiod (c6-8 / morning)
                              :mod (c6-10 / today))
                  :ARG1-of (c6-3 / waste-01)))

# ::snt two terrorists against the French military, could be a close call.
# ::tokens ["two", "terrorists", "against", "the", "French", "military", ",", "could", "be", "a", "close", "call", "."]
# ::lemmas ["two", "terrorist", "against", "the", "French", "military", ",", "could", "be", "a", "close", "call", "."]
(c7-2 / possible-01
      :ARG1 (c7-4 / call-10
                  :ARG1 (c7-6 / terrorist
                              :prep-against (c7-0 / military
                                                  :mod (c7-3 / country
                                                             :name (c7-1 / name
                                                                         :op1 "France")))
                              :quant 2)
                  :ARG1-of (c7-5 / close-10)))

# ::snt NM - Sends electric waves to girls and threaten them, sends drug in my body and clumps my chest though radioactivity
# ::tokens ["NM", "-", "Sends", "electric", "waves", "to", "girls", "and", "threaten", "them", ",", "sends", "drug", "in", "my", "body", "and", "clumps", "my", "chest", "though", "radioactivity"]
# ::lemmas ["NM", "-", "Sends", "electric", "wave", "to", "girl", "and", "threaten", "they", ",", "send", "drug", "in", "my", "body", "and", "clump", "my", "chest", "though", "radioactivity"]
(c8-13 / and
       :op1 (c8-11 / send-01
                   :ARG0 (c8-5 / person
                               :name (c8-4 / name
                                           :op1 "NM"))
                   :ARG1 (c8-0 / wave
                               :mod (c8-2 / electric))
                   :ARG2 (c8-8 / girl))
       :op2 (c8-12 / threaten-01
                   :ARG0 c8-5
                   :ARG2 c8-8)
       :op3 c8-11
       :ARG0 c8-5
       :ARG1 (c8-6 / drug)
       :ARG2 (c8-1 / body
                   :poss (c8-3 / i
                               :part (c8-7 / chest)))
       :op4 (c8-9 / clump-01
                  :ARG1 c8-7
                  :concession (c8-10 / radioactivity)))

# ::snt hope no one else gets hurt, or killed, apart from the brothers.
# ::tokens ["hope", "no", "one", "else", "gets", "hurt", ",", "or", "killed", ",", "apart", "from", "the", "brothers", "."]
# ::lemmas ["hope", "no", "one", "else", "gets", "hurt", ",", "or", "kill", ",", "apart", "from", "the", "brother", "."]
(c9-0 / hope-01
      :ARG1 (c9-2 / or
                  :op1 (c9-9 / hurt-01
                             :ARG1 (c9-5 / no-one
                                         :mod (c9-4 / else)
                                         :ARG2-of (c9-1 / except-01
                                                        :ARG1 (c9-7 / person
                                                                    :ARG0-of (c9-6 / have-rel-role-91
                                                                                   :ARG2 (c9-3 / brother))))))
                  :op2 (c9-8 / kill-01
                             :ARG1 c9-5)))

# ::snt Highly inappropriate, but there's something nice about their uniforms...
# ::tokens ["Highly", "inappropriate", ",", "but", "there", "'s", "something", "nice", "about", "their", "uniforms", "..."]
# ::lemmas ["highly", "inappropriate", ",", "but", "there", "be", "something", "nice", "about", "their", "uniform", "..."]
(c11-3 / contrast-01
       :ARG1 (c11-6 / appropriate-02
                    :degree (c11-0 / high-02)
                    :polarity -)
       :ARG2 (c11-4 / something
                    :ARG1-of (c11-2 / nice-01)
                    :topic (c11-1 / uniform
                                  :poss (c11-5 / they))))

# ::snt Why don't they use gas to render them unconscious &amp; get them out alive so they don't die as "martyrs" &amp; to prevent more deaths?
# ::tokens ["Why", "do", "n't", "they", "use", "gas", "to", "render", "them", "unconscious", "&", "amp", ";", "get", "them", "out", "alive", "so", "they", "do", "n't", "die", "as", "\"", "martyrs", "\"", "&", "amp", ";", "to", "prevent", "more", "deaths", "?"]
# ::lemmas ["why", "do", "not", "they", "use", "gas", "to", "render", "they", "unconscious", "&", "amp", ";", "get", "they", "out", "alive", "so", "they", "do", "not", "die", "as", "\"", "martyr", "\"", "&", "amp", ";", "to", "prevent", "more", "death", "?"]
(c12-16 / cause-01
        :ARG0 (c12-6 / amr-unknown)
        :ARG1 (c12-14 / and
                      :op1 (c12-13 / use-01
                                   :ARG0 (c12-18 / they)
                                   :ARG1 (c12-11 / gas)
                                   :ARG2 (c12-10 / render-01
                                                 :ARG0 c12-11
                                                 :ARG1 c12-18
                                                 :ARG2 (c12-8 / and
                                                              :op1 (c12-12 / unconscious)
                                                              :op2 (c12-17 / amp)))
                                   :polarity -)
                      :op2 (c12-4 / get-05
                                  :ARG0 c12-18
                                  :ARG1 c12-18
                                  :ARG2 (c12-15 / out)
                                  :manner (c12-7 / live-01
                                                 :ARG0 c12-18)
                                  :purpose (c12-5 / die-01
                                                  :ARG1 c12-18
                                                  :manner (c12-2 / resemble-01
                                                                 :ARG1 c12-18
                                                                 :ARG2 (c12-1 / martyr))
                                                  :polarity -))
                      :op3 (c12-3 / prevent-01
                                  :ARG0 c12-18
                                  :ARG1 (c12-0 / die-01
                                               :mod (c12-9 / more)))))

# ::snt if I do that, will not sleep tonight, might just drink some southern comfort tonight, might knock me out.
# ::tokens ["if", "I", "do", "that", ",", "will", "not", "sleep", "tonight", ",", "might", "just", "drink", "some", "southern", "comfort", "tonight", ",", "might", "knock", "me", "out", "."]
# ::lemmas ["if", "i", "do", "that", ",", "will", "not", "sleep", "tonight", ",", "might", "just", "drink", "some", "southern", "comfort", "tonight", ",", "might", "knock", "i", "out", "."]
(c13-7 / possible-01
       :ARG1 (c13-12 / knock-out-03
                     :ARG0 (c13-14 / and
                                   :op1 (c13-8 / do-02
                                               :ARG0 (c13-5 / i)
                                               :ARG1 (c13-11 / that))
                                   :op2 (c13-13 / sleep-01
                                                :ARG0 c13-5
                                                :time (c13-1 / date-entity
                                                             :dayperiod (c13-6 / night)
                                                             :mod (c13-10 / today))
                                                :polarity -)
                                   :op3 (c13-15 / drink-01
                                                :ARG0 c13-5
                                                :ARG1 (c13-9 / comfort
                                                             :mod (c13-3 / south)
                                                             :quant (c13-2 / some))
                                                :mod (c13-0 / just)
                                                :time c13-1)
                                   :op4 (c13-4 / possible-01
                                               :ARG1 c13-12))))

# ::snt I shall rephrase, my thoughts and prayers to all of france, this must stop today.
# ::tokens ["I", "shall", "rephrase", ",", "my", "thoughts", "and", "prayers", "to", "all", "of", "france", ",", "this", "must", "stop", "today", "."]
# ::lemmas ["i", "shall", "rephrase", ",", "my", "thought", "and", "prayer", "to", "all", "of", "france", ",", "this", "must", "stop", "today", "."]
(c14-6 / rephrase-01
       :ARG0 (c14-2 / i)
       :ARG1 (c14-0 / obligate-01
                    :ARG2 (c14-9 / stop-01
                                 :ARG1 (c14-10 / this)
                                 :time (c14-8 / today)))
       :ARG2 (c14-11 / and
                     :op1 (c14-4 / think-01
                                 :ARG0 c14-2
                                 :ARG2 (c14-7 / country
                                              :name (c14-3 / name
                                                           :op1 "France")
                                              :mod (c14-1 / all)))
                     :op2 (c14-5 / pray-01
                                 :ARG0 c14-2
                                 :ARG2 c14-7)))

# ::snt Yes, just catching up on news now.... Terrible situation, more killed n separate hostage situations.
# ::tokens ["Yes", ",", "just", "catching", "up", "on", "news", "now", "....", "Terrible", "situation", ",", "more", "killed", "n", "separate", "hostage", "situations", "."]
# ::lemmas ["yes", ",", "just", "catch", "up", "on", "news", "now", "....", "terrible", "situation", ",", "more", "kill", "n", "separate", "hostage", "situation", "."]
(c15-3 / multi-sentence
       :snt1 (c15-11 / catch-up-04
                     :ARG1 (c15-6 / i)
                     :ARG2 (c15-7 / news)
                     :mod (c15-0 / just)
                     :time (c15-8 / now))
       :snt2 (c15-15 / and
                     :op1 (c15-13 / situation
                                  :mod (c15-1 / horrible))
                     :op2 (c15-14 / kill-01
                                  :ARG1 (c15-9 / person
                                               :ARG1-of (c15-2 / have-quant-91
                                                               :ARG3 (c15-10 / more))))
                     :op3 (c15-5 / situation
                                 :mod (c15-12 / hostage)
                                 :ARG1-of (c15-4 / separate-02))))

# ::snt LOL!
# ::tokens ["LOL", "!"]
# ::lemmas ["LOL", "!"]
(c16-0 / laugh-01
       :ARG0 (c16-1 / i)
       :manner (c16-2 / loud)
       :mode expressive)

# ::snt read about the Russian 'success' with such an attempt here
# ::tokens ["read", "about", "the", "Russian", "'", "success", "'", "with", "such", "an", "attempt", "here"]
# ::lemmas ["read", "about", "the", "Russian", "'", "success", "'", "with", "such", "an", "attempt", "here"]
(c17-3 / read-01
       :ARG1 (c17-5 / succeed-01
                    :ARG0 (c17-4 / country
                                 :name (c17-2 / name
                                              :op1 "Russia"))
                    :ARG1 (c17-6 / attempt-01
                                 :ARG0 c17-4
                                 :mod (c17-1 / such)))
       :location (c17-0 / here))

# ::snt You should try n get some rest.
# ::tokens ["You", "should", "try", "n", "get", "some", "rest", "."]
# ::lemmas ["you", "should", "try", "n", "get", "some", "rest", "."]
(c18-2 / recommend-01
       :ARG1 (c18-5 / try-01
                    :ARG0 (c18-0 / you)
                    :ARG1 (c18-3 / get-01
                                 :ARG0 c18-0
                                 :ARG1 (c18-1 / rest-01
                                              :ARG1 c18-0
                                              :mod (c18-4 / some))))
       :ARG2 c18-0)

# ::snt seems though there is another shoot out in paris, also the brothers have hostage.
# ::tokens ["seems", "though", "there", "is", "another", "shoot", "out", "in", "paris", ",", "also", "the", "brothers", "have", "hostage", "."]
# ::lemmas ["seem", "though", "there", "be", "another", "shoot", "out", "in", "paris", ",", "also", "the", "brother", "have", "hostage", "."]
(c19-7 / seem-01
       :ARG1 (c19-4 / shoot-out-06
                    :location (c19-6 / paris)
                    :mod (c19-8 / another)
                    :ARG1-of (c19-2 / mean-01
                                    :ARG2 (c19-0 / have-03
                                                 :ARG0 (c19-3 / brother)
                                                 :ARG1 (c19-1 / hostage)
                                                 :mod (c19-5 / also)))))

# ::snt With due respect, that was some time ago &amp; I suspect there may be other substances that may not be so toxic.
# ::tokens ["With", "due", "respect", ",", "that", "was", "some", "time", "ago", "&", "amp", ";", "I", "suspect", "there", "may", "be", "other", "substances", "that", "may", "not", "be", "so", "toxic", "."]
# ::lemmas ["with", "due", "respect", ",", "that", "be", "some", "time", "ago", "&", "amp", ";", "i", "suspect", "there", "may", "be", "other", "substance", "that", "may", "not", "be", "so", "toxic", "."]
(c20-1 / multi-sentence
       :snt1 (c20-17 / and
                     :op1 (c20-2 / be-temporally-at-91
                                 :ARG1 (c20-15 / that)
                                 :ARG2 (c20-11 / before
                                               :op1 (c20-8 / now)
                                               :quant (c20-14 / some))
                                 :manner (c20-10 / respect-01
                                                 :mod (c20-12 / due)))
                     :op2 (c20-5 / suspect-01
                                 :ARG0 (c20-7 / i)
                                 :ARG1 (c20-9 / possible-01
                                              :ARG1 (c20-13 / toxic
                                                            :domain (c20-0 / substance
                                                                           :mod (c20-3 / other))
                                                            :degree (c20-4 / so)
                                                            :ARG1-of (c20-16 / possible-01)
                                                            :polarity -))))
       :snt2 (c20-6 / et-cetera))

# ::snt . alright BBC, stop foaming at the mouth, it's just a police operation.
# ::tokens [".", "alright", "BBC", ",", "stop", "foaming", "at", "the", "mouth", ",", "it", "'s", "just", "a", "police", "operation", "."]
# ::lemmas [".", "alright", "BBC", ",", "stop", "foam", "at", "the", "mouth", ",", "it", "be", "just", "a", "police", "operation", "."]
(c21-9 / say-01
       :ARG0 (c21-6 / i)
       :ARG1 (c21-11 / and
                     :op1 (c21-4 / stop-01
                                 :ARG0 (c21-8 / person
                                              :name (c21-7 / name
                                                           :op1 "BBC"))
                                 :ARG1 (c21-1 / foam-01
                                              :ARG0 c21-8
                                              :ARG1 (c21-2 / mouth))
                                 :mode imperative)
                     :op2 (c21-3 / operate-01
                                 :ARG0 (c21-10 / police)
                                 :mod (c21-0 / just)))
       :ARG2 c21-8
       :mod (c21-5 / all-right))
