# ::snt You seem to be the only outlet saying this, pls make sure you're corrwct
# ::tokens ["You", "seem", "to", "be", "the", "only", "outlet", "saying", "this", ",", "pls", "make", "sure", "you", "'re", "corrwct"]
# ::lemmas ["you", "seem", "to", "be", "the", "only", "outlet", "say", "this", ",", "pls", "make", "sure", "you", "be", "corrwct"]
(c1-9 / and
      :op1 (c1-7 / seem-01
                 :ARG1 (c1-3 / outlet
                             :mod (c1-2 / only)
                             :ARG0-of (c1-4 / say-01
                                            :ARG1 (c1-8 / this))
                             :domain (c1-0 / you)))
      :op2 (c1-5 / ensure-01
                 :ARG0 (c1-1 / we)
                 :ARG1 (c1-6 / correct-02
                             :ARG0 c1-0)
                 :mode imperative
                 :polite +))

# ::snt still are the great white North. Our diversity makes our stronger.
# ::tokens ["still", "are", "the", "great", "white", "North", ".", "Our", "diversity", "makes", "our", "stronger", "."]
# ::lemmas ["still", "be", "the", "great", "white", "North", ".", "our", "diversity", "make", "our", "strong", "."]
(c2-3 / multi-sentence
      :snt1 (c2-9 / country-region
                  :name (c2-6 / name
                              :op1 "North")
                  :ARG1-of (c2-1 / white-02)
                  :mod (c2-10 / great)
                  :mod (c2-11 / still))
      :snt2 (c2-7 / make-02
                  :ARG0 (c2-8 / diversity
                              :poss (c2-5 / we))
                  :ARG1 (c2-4 / strong-02
                              :ARG1 c2-5
                              :ARG2-of (c2-0 / have-degree-91
                                             :ARG1 c2-5
                                             :ARG3 (c2-2 / more)))))

# ::snt . No local confirmation that shot soldier has died. One gunman reported dead, shot inside Cdn Parliament. Search for other shooters.
# ::tokens [".", "No", "local", "confirmation", "that", "shot", "soldier", "has", "died", ".", "One", "gunman", "reported", "dead", ",", "shot", "inside", "Cdn", "Parliament", ".", "Search", "for", "other", "shooters", "."]
# ::lemmas [".", "no", "local", "confirmation", "that", "shot", "soldier", "have", "die", ".", "One", "gunman", "report", "dead", ",", "shoot", "inside", "Cdn", "Parliament", ".", "search", "for", "other", "shooter", "."]
(c3-2 / multi-sentence
      :snt1 (c3-11 / confirm-01
                   :ARG1 (c3-10 / die-01
                                :ARG1 (c3-15 / soldier
                                             :ARG1-of (c3-6 / shoot-02)))
                   :ARG1-of (c3-1 / local-02)
                   :polarity -)
      :snt2 (c3-12 / report-01
                   :ARG1 (c3-13 / gunman
                                :ARG1-of c3-10
                                :quant 1)
                   :ARG1-of (c3-3 / shoot-02
                                  :location (c3-7 / inside
                                                  :op1 (c3-14 / government-organization
                                                              :name (c3-8 / name
                                                                          :op1 "Cdn"
                                                                          :op2 "Parliament")))))
      :snt3 (c3-5 / search-01
                  :ARG2 (c3-9 / person
                              :ARG0-of (c3-0 / shoot-02)
                              :mod (c3-4 / other))))

# ::snt Canada was white? like, the land? trees? flag? sorry, don't follow...
# ::tokens ["Canada", "was", "white", "?", "like", ",", "the", "land", "?", "trees", "?", "flag", "?", "sorry", ",", "do", "n't", "follow", "..."]
# ::lemmas ["Canada", "be", "white", "?", "like", ",", "the", "land", "?", "tree", "?", "flag", "?", "sorry", ",", "do", "not", "follow", "..."]
(c4-3 / multi-sentence
      :snt1 (c4-0 / white-02
                  :ARG1 (c4-10 / country
                               :name (c4-7 / name
                                           :op1 "Canada"))
                  :polarity (c4-13 / amr-unknown)
                  :ARG1-of (c4-9 / resemble-01
                                 :ARG2 (c4-5 / and
                                             :op1 (c4-2 / land)
                                             :op2 (c4-12 / tree)
                                             :op3 (c4-4 / flag)
                                             :polarity (c4-8 / amr-unknown))))
      :snt2 (c4-11 / sorry-01
                   :ARG1 (c4-6 / follow-02
                               :ARG0 (c4-1 / you)
                               :polarity -
                               :mode imperative)))

# ::snt : Updated: Canadian soldier killed in attack at Parliament Hill in Ottawa
# ::tokens [":", "Updated", ":", "Canadian", "soldier", "killed", "in", "attack", "at", "Parliament", "Hill", "in", "Ottawa"]
# ::lemmas [":", "update", ":", "Canadian", "soldier", "kill", "in", "attack", "at", "Parliament", "Hill", "in", "Ottawa"]
(c5-1 / update-02
      :ARG2 (c5-9 / kill-01
                  :ARG1 (c5-8 / soldier
                              :mod (c5-6 / country
                                         :name (c5-2 / name
                                                     :op1 "Canada")))
                  :ARG1-of (c5-5 / cause-01
                                 :ARG0 (c5-10 / attack-01
                                              :ARG1 c5-8
                                              :location (c5-0 / facility
                                                              :name (c5-3 / name
                                                                          :op1 "Parliament"
                                                                          :op2 "Hill")
                                                              :location (c5-7 / city
                                                                              :name (c5-4 / name
                                                                                          :op1 "Ottawa")))))))

# ::snt Canadian soldier killed in attack at Parliament Hill in Ottawa
# ::tokens ["Canadian", "soldier", "killed", "in", "attack", "at", "Parliament", "Hill", "in", "Ottawa"]
# ::lemmas ["Canadian", "soldier", "kill", "in", "attack", "at", "Parliament", "Hill", "in", "Ottawa"]
(c6-8 / kill-01
      :ARG1 (c6-7 / soldier
                  :mod (c6-5 / country
                             :name (c6-1 / name
                                         :op1 "Canada")))
      :ARG1-of (c6-4 / cause-01
                     :ARG0 (c6-9 / attack-01
                                 :location (c6-0 / building
                                                 :name (c6-2 / name
                                                             :op1 "Parliament"
                                                             :op2 "Hill")
                                                 :location (c6-6 / city
                                                                 :name (c6-3 / name
                                                                             :op1 "Ottawa"))))))

# ::snt I know...find this interesting
# ::tokens ["I", "know", "...", "find", "this", "interesting"]
# ::lemmas ["i", "know", "...", "find", "this", "interesting"]
(c7-2 / multi-sentence
      :snt1 (c7-6 / know-01
                  :ARG0 (c7-3 / i))
      :snt2 (c7-1 / find-02
                  :ARG0 (c7-0 / you)
                  :ARG1 (c7-4 / interest-01
                              :ARG0 (c7-5 / this))
                  :mode imperative))

# ::snt You may want to confirm this, .
# ::tokens ["You", "may", "want", "to", "confirm", "this", ",", "."]
# ::lemmas ["you", "may", "want", "to", "confirm", "this", ",", "."]
(c8-2 / possible-01
      :ARG1 (c8-0 / want-01
                  :ARG0 (c8-1 / you)
                  :ARG1 (c8-3 / confirm-01
                              :ARG0 c8-1
                              :ARG1 (c8-4 / this))))

# ::snt Please stop spreading misinformation. The soldier was shot and taken to hospital ALIVE.
# ::tokens ["Please", "stop", "spreading", "misinformation", ".", "The", "soldier", "was", "shot", "and", "taken", "to", "hospital", "ALIVE", "."]
# ::lemmas ["please", "stop", "spread", "misinformation", ".", "the", "soldier", "be", "shoot", "and", "take", "to", "hospital", "alive", "."]
(c9-3 / multi-sentence
      :snt1 (c9-9 / stop-01
                  :ARG0 (c9-1 / you)
                  :ARG1 (c9-5 / spread-03
                              :ARG0 c9-1
                              :ARG1 (c9-10 / thing
                                           :ARG2-of (c9-7 / misinform-01)))
                  :mode imperative
                  :polite +)
      :snt2 (c9-11 / and
                   :op1 (c9-2 / shoot-02
                              :ARG1 (c9-4 / soldier))
                   :op2 (c9-8 / take-01
                              :ARG1 c9-4
                              :ARG3 (c9-0 / hospital)
                              :manner (c9-6 / intact))))

# ::snt Tell that to your .
# ::tokens ["Tell", "that", "to", "your", "."]
# ::lemmas ["tell", "that", "to", "your", "."]
(c10-1 / tell-01
       :ARG0 (c10-0 / you)
       :ARG1 (c10-2 / that)
       :ARG2 c10-0
       :mode imperative)

# ::snt Havent heard any confirmation of that
# ::tokens ["Have", "nt", "heard", "any", "confirmation", "of", "that"]
# ::lemmas ["have", "not", "hear", "any", "confirmation", "of", "that"]
(c11-0 / hear-01
       :ARG0 (c11-2 / person
                    :name (c11-1 / name
                                 :op1 "Havent"))
       :ARG1 (c11-3 / confirm-01
                    :ARG1 (c11-4 / that)
                    :mod (c11-5 / any)))

# ::snt Yeah, sure and go have a pork sandwich...
# ::tokens ["Yeah", ",", "sure", "and", "go", "have", "a", "pork", "sandwich", "..."]
# ::lemmas ["yeah", ",", "sure", "and", "go", "have", "a", "pork", "sandwich", "..."]
(c12-6 / and
       :op1 (c12-5 / sure-02)
       :op2 (c12-4 / go-05
                   :ARG0 (c12-1 / you)
                   :ARG1 (c12-0 / have-06
                                :ARG0 c12-1
                                :ARG1 (c12-2 / sandwich
                                             :mod (c12-3 / pork)))
                   :mode imperative))

# ::snt Do you remember when was White. The Great White North. Before ?
# ::tokens ["Do", "you", "remember", "when", "was", "White", ".", "The", "Great", "White", "North", ".", "Before", "?"]
# ::lemmas ["do", "you", "remember", "when", "be", "white", ".", "the", "Great", "White", "North", ".", "before", "?"]
(c13-2 / multi-sentence
       :snt1 (c13-7 / remember-01
                    :ARG0 (c13-0 / you)
                    :ARG1 (c13-9 / time
                                 :time-of (c13-1 / white-02))
                    :polarity (c13-10 / amr-unknown))
       :snt2 (c13-5 / world-region
                    :name (c13-6 / name
                                 :op1 "Great"
                                 :op2 "White"
                                 :op3 "North")
                    :polarity (c13-4 / amr-unknown))
       :snt3 (c13-3 / be-temporally-at-91
                    :ARG2 (c13-8 / before)))

# ::snt Big Trouble in Canuckistan, how's that working out for you up there in ?
# ::tokens ["Big", "Trouble", "in", "Canuckistan", ",", "how", "'s", "that", "working", "out", "for", "you", "up", "there", "in", "?"]
# ::lemmas ["big", "trouble", "in", "Canuckistan", ",", "how", "be", "that", "work", "out", "for", "you", "up", "there", "in", "?"]
(c15-0 / work-out-02
       :ARG1 (c15-6 / that)
       :beneficiary (c15-1 / you)
       :location (c15-2 / up-03
                        :ARG2 (c15-5 / there))
       :manner (c15-7 / amr-unknown)
       :topic (c15-4 / thing
                     :name (c15-3 / name
                                  :op1 "Big"
                                  :op2 "Trouble"
                                  :op3 "in"
                                  :op4 "Canuckistan")))

# ::snt Beautifully thank you very much. Our diversity and resiliency will help us overcome this.
# ::tokens ["Beautifully", "thank", "you", "very", "much", ".", "Our", "diversity", "and", "resiliency", "will", "help", "us", "overcome", "this", "."]
# ::lemmas ["beautifully", "thank", "you", "very", "much", ".", "our", "diversity", "and", "resiliency", "will", "help", "we", "overcome", "this", "."]
(c16-3 / multi-sentence
       :snt1 (c16-11 / thank-01
                     :ARG1 (c16-1 / you)
                     :mod (c16-4 / beautiful)
                     :mod (c16-7 / much
                                 :degree (c16-6 / very)))
       :snt2 (c16-0 / help-01
                    :ARG0 (c16-12 / and
                                  :op1 (c16-8 / diversity
                                              :poss (c16-2 / we))
                                  :op2 (c16-9 / resilience
                                              :poss c16-2))
                    :ARG1 (c16-5 / overcome-01
                                 :ARG0 c16-2
                                 :ARG1 (c16-10 / this))
                    :ARG2 c16-2))

# ::snt before Upper/Lower Canada, this place was plenty brown. But, whatever, good job being a piece of shit.
# ::tokens ["before", "Upper", "/", "Lower", "Canada", ",", "this", "place", "was", "plenty", "brown", ".", "But", ",", "whatever", ",", "good", "job", "being", "a", "piece", "of", "shit", "."]
# ::lemmas ["before", "Upper", "/", "Lower", "Canada", ",", "this", "place", "be", "plenty", "brown", ".", "but", ",", "whatever", ",", "good", "job", "be", "a", "piece", "of", "shit", "."]
(c17-2 / multi-sentence
       :snt1 (c17-4 / brown-02
                    :ARG1 (c17-8 / place
                                 :mod (c17-15 / this))
                    :degree (c17-16 / plenty)
                    :time (c17-10 / before
                                  :op1 (c17-14 / slash
                                               :op1 (c17-11 / country-region
                                                            :name (c17-6 / name
                                                                         :op1 "Upper"
                                                                         :op2 "Canada"))
                                               :op2 (c17-9 / country-region
                                                           :name (c17-7 / name
                                                                        :op1 "Lower"
                                                                        :op2 "Canada")))))
       :snt2 (c17-13 / contrast-01
                     :ARG2 (c17-0 / job
                                  :ARG1-of (c17-12 / good-02)
                                  :domain (c17-3 / piece
                                                 :consist-of (c17-5 / shit)))
                     :mod (c17-1 / whatever)))

# ::snt : Updated: Canadian soldier killed in attack at Parliament Hill in Ottawa
# ::tokens [":", "Updated", ":", "Canadian", "soldier", "killed", "in", "attack", "at", "Parliament", "Hill", "in", "Ottawa"]
# ::lemmas [":", "update", ":", "Canadian", "soldier", "kill", "in", "attack", "at", "Parliament", "Hill", "in", "Ottawa"]
(c18-1 / update-02
       :ARG2 (c18-9 / kill-01
                    :ARG1 (c18-8 / soldier
                                 :mod (c18-6 / country
                                             :name (c18-2 / name
                                                          :op1 "Canada")))
                    :ARG1-of (c18-5 / cause-01
                                    :ARG0 (c18-10 / attack-01
                                                  :ARG1 c18-8
                                                  :location (c18-0 / facility
                                                                   :name (c18-3 / name
                                                                                :op1 "Parliament"
                                                                                :op2 "Hill")
                                                                   :location (c18-7 / city
                                                                                    :name (c18-4 / name
                                                                                                 :op1 "Ottawa")))))))

# ::snt Do you remember when was White. The Great White North. Before ?
# ::tokens ["Do", "you", "remember", "when", "was", "White", ".", "The", "Great", "White", "North", ".", "Before", "?"]
# ::lemmas ["do", "you", "remember", "when", "be", "white", ".", "the", "Great", "White", "North", ".", "before", "?"]
(c19-2 / multi-sentence
       :snt1 (c19-7 / remember-01
                    :ARG0 (c19-0 / you)
                    :ARG1 (c19-9 / time
                                 :time-of (c19-1 / white-02))
                    :polarity (c19-10 / amr-unknown))
       :snt2 (c19-5 / world-region
                    :name (c19-6 / name
                                 :op1 "Great"
                                 :op2 "White"
                                 :op3 "North")
                    :polarity (c19-4 / amr-unknown))
       :snt3 (c19-3 / be-temporally-at-91
                    :ARG2 (c19-8 / before)))

# ::snt I'm not Jewish but if I manage to find one I will relay the message.
# ::tokens ["I", "'m", "not", "Jewish", "but", "if", "I", "manage", "to", "find", "one", "I", "will", "relay", "the", "message", "."]
# ::lemmas ["i", "be", "not", "Jewish", "but", "if", "i", "manage", "to", "find", "one", "i", "will", "relay", "the", "message", "."]
(c20-0 / have-concession-91
       :ARG1 (c20-8 / relay-01
                    :ARG0 (c20-4 / i)
                    :ARG1 (c20-2 / message)
                    :condition (c20-7 / manage-02
                                      :ARG0 c20-4
                                      :ARG1 (c20-1 / find-01
                                                   :ARG0 c20-4
                                                   :ARG1 (c20-3 / one))))
       :ARG2 (c20-5 / religious-group
                    :name (c20-6 / name
                                 :op1 "Jew")
                    :domain c20-4
                    :polarity -))

# ::snt CTV Reporting soldier who was gunned down at the War Memorial is ALIVE. Thank God. Good news.
# ::tokens ["CTV", "Reporting", "soldier", "who", "was", "gunned", "down", "at", "the", "War", "Memorial", "is", "ALIVE", ".", "Thank", "God", ".", "Good", "news", "."]
# ::lemmas ["CTV", "Reporting", "soldier", "who", "be", "gun", "down", "at", "the", "War", "Memorial", "be", "alive", ".", "thank", "God", ".", "good", "news", "."]
(c21-1 / multi-sentence
       :snt1 (c21-0 / live-01
                    :ARG1 (c21-10 / soldier
                                  :ARG0-of (c21-7 / report-01)
                                  :ARG1-of (c21-3 / shoot-down-05
                                                  :location (c21-2 / building
                                                                   :name (c21-4 / name
                                                                                :op1 "War"
                                                                                :op2 "Memorial")))))
       :snt2 (c21-11 / thank-01
                     :ARG1 (c21-6 / person
                                  :name (c21-5 / name
                                               :op1 "God")))
       :snt3 (c21-8 / news
                    :ARG1-of (c21-9 / good-02)))

# ::snt You're the only ones saying the soldier has died, what is your source? Can't find it in the article.
# ::tokens ["You", "'re", "the", "only", "ones", "saying", "the", "soldier", "has", "died", ",", "what", "is", "your", "source", "?", "Ca", "n't", "find", "it", "in", "the", "article", "."]
# ::lemmas ["you", "be", "the", "only", "one", "say", "the", "soldier", "have", "die", ",", "what", "be", "your", "source", "?", "can", "not", "find", "it", "in", "the", "article", "."]
(c22-2 / multi-sentence
       :snt1 (c22-5 / one
                    :domain (c22-0 / you)
                    :mod (c22-1 / only)
                    :ARG0-of (c22-12 / say-01
                                     :ARG1 (c22-10 / die-01
                                                   :ARG1 (c22-6 / soldier))))
       :snt2 (c22-13 / amr-unknown
                     :ARG2-of (c22-3 / source-01
                                     :ARG0 (c22-11 / you)))
       :snt3 (c22-9 / possible-01
                    :ARG1 (c22-4 / find-01
                                 :ARG1 (c22-8 / it)
                                 :location (c22-7 / article))
                    :polarity -))

# ::snt this is not confirmed. Shot yes, killed?
# ::tokens ["this", "is", "not", "confirmed", ".", "Shot", "yes", ",", "killed", "?"]
# ::lemmas ["this", "be", "not", "confirm", ".", "Shot", "yes", ",", "kill", "?"]
(c23-0 / multi-sentence
       :snt1 (c23-3 / confirm-01
                    :ARG1 (c23-5 / this)
                    :polarity -)
       :snt2 (c23-6 / and
                    :op1 (c23-4 / shoot-01)
                    :op2 (c23-2 / kill-01)
                    :polarity (c23-1 / amr-unknown)))

# ::snt Oh no. RT RT : Updated: Canadian soldier killed in attack at Parliament Hill in Ottawa
# ::tokens ["Oh", "no", ".", "RT", "RT", ":", "Updated", ":", "Canadian", "soldier", "killed", "in", "attack", "at", "Parliament", "Hill", "in", "Ottawa"]
# ::lemmas ["oh", "no", ".", "RT", "RT", ":", "Updated", ":", "Canadian", "soldier", "kill", "in", "attack", "at", "Parliament", "Hill", "in", "Ottawa"]
(c24-1 / multi-sentence
       :snt1 (c24-3 / oh-no
                    :mode expressive)
       :snt2 (c24-6 / publication
                    :name (c24-4 / name
                                 :op1 "RT"
                                 :op2 "RT")
                    :ARG1-of (c24-2 / update-02
                                    :ARG3 (c24-13 / kill-01
                                                  :ARG1 (c24-12 / soldier
                                                                :mod (c24-8 / country
                                                                            :name (c24-5 / name
                                                                                         :op1 "Canada")))
                                                  :ARG1-of (c24-7 / cause-01
                                                                  :ARG0 (c24-14 / attack-01
                                                                                :ARG1 c24-12
                                                                                :location (c24-0 / facility
                                                                                                 :name (c24-9 / name
                                                                                                              :op1 "Parliament"
                                                                                                              :op2 "Hill")
                                                                                                 :location (c24-11 / city
                                                                                                                   :name (c24-10 / name
                                                                                                                                 :op1 "Ottawa")))))))))

# ::snt Yep, before immigration-diversity has browned and paganized and its thinking.
# ::tokens ["Yep", ",", "before", "immigration", "-", "diversity", "has", "browned", "and", "paganized", "and", "its", "thinking", "."]
# ::lemmas ["Yep", ",", "before", "immigration", "-", "diversity", "have", "brown", "and", "paganized", "and", "its", "thinking", "."]
(c26-1 / be-temporally-at-91
       :ARG2 (c26-4 / before
                    :op1 (c26-7 / and
                                :op1 (c26-5 / brown-01
                                            :ARG1 (c26-8 / biodiversity
                                                         :mod (c26-2 / immigrate-01)))
                                :op2 (c26-3 / paganize-00
                                            :ARG1 c26-8)
                                :op3 (c26-6 / think-01
                                            :ARG0 c26-8)))
       :mod (c26-0 / yep))

# ::snt it's working great.
# ::tokens ["it", "'s", "working", "great", "."]
# ::lemmas ["it", "be", "work", "great", "."]
(c27-0 / work-09
       :ARG1 (c27-2 / it)
       :mod (c27-1 / great))

# ::snt Killed?? ": Updated: Canadian soldier killed in attack at Parliament Hill in Ottawa
# ::tokens ["Killed", "?", "?", "\"", ":", "Updated", ":", "Canadian", "soldier", "killed", "in", "attack", "at", "Parliament", "Hill", "in", "Ottawa"]
# ::lemmas ["kill", "?", "?", "\"", ":", "update", ":", "Canadian", "soldier", "kill", "in", "attack", "at", "Parliament", "Hill", "in", "Ottawa"]
(c28-1 / update-02
       :ARG2 (c28-10 / kill-01
                     :ARG1 (c28-9 / soldier
                                  :mod (c28-7 / country
                                              :name (c28-3 / name
                                                           :op1 "Canada")))
                     :ARG1-of (c28-6 / cause-01
                                     :ARG0 (c28-11 / attack-01
                                                   :ARG1 c28-9
                                                   :location (c28-0 / facility
                                                                    :name (c28-4 / name
                                                                                 :op1 "Parliament"
                                                                                 :op2 "Hill")
                                                                    :location (c28-8 / city
                                                                                     :name (c28-5 / name
                                                                                                  :op1 "Ottawa"))))))
       :polarity (c28-2 / amr-unknown))

# ::snt RT : Updated: Canadian soldier killed in attack at Parliament Hill in Ottawa
# ::tokens ["RT", ":", "Updated", ":", "Canadian", "soldier", "killed", "in", "attack", "at", "Parliament", "Hill", "in", "Ottawa"]
# ::lemmas ["rt", ":", "update", ":", "Canadian", "soldier", "kill", "in", "attack", "at", "Parliament", "Hill", "in", "Ottawa"]
(c29-1 / update-02
       :ARG1 (c29-4 / publication
                    :name (c29-2 / name
                                 :op1 "RT"))
       :ARG2 (c29-11 / kill-01
                     :ARG1 (c29-10 / soldier
                                   :mod (c29-6 / country
                                               :name (c29-3 / name
                                                            :op1 "Canada")))
                     :ARG1-of (c29-5 / cause-01
                                     :ARG0 (c29-12 / attack-01
                                                   :location (c29-0 / facility
                                                                    :name (c29-7 / name
                                                                                 :op1 "Parliament"
                                                                                 :op2 "Hill")
                                                                    :location (c29-9 / city
                                                                                     :name (c29-8 / name
                                                                                                  :op1 "Ottawa")))))))
