# ::snt relax Schwarzenegger
# ::tokens ["relax", "Schwarzenegger"]
# ::lemmas ["relax", "Schwarzenegger"]
(c1-2 / relieve-01
      :ARG1 (c1-1 / person
                  :name (c1-0 / name
                              :op1 "Schwarzenegger")))

# ::snt not the time to joke around...
# ::tokens ["not", "the", "time", "to", "joke", "around", "..."]
# ::lemmas ["not", "the", "time", "to", "joke", "around", "..."]
(c3-1 / time
      :time-of (c3-0 / joke-01
                     :manner (c3-2 / around))
      :polarity -)

# ::snt so thankful for your updates at this hour.
# ::tokens ["so", "thankful", "for", "your", "updates", "at", "this", "hour", "."]
# ::lemmas ["so", "thankful", "for", "your", "update", "at", "this", "hour", "."]
(c4-6 / thankful-02
      :ARG0 (c4-3 / i)
      :ARG2 (c4-2 / update-02
                  :ARG0 (c4-1 / you)
                  :time (c4-0 / hour
                              :mod (c4-4 / this)))
      :degree (c4-5 / so))

# ::snt Exactly. Thoughts should be with them and only them.
# ::tokens ["Exactly", ".", "Thoughts", "should", "be", "with", "them", "and", "only", "them", "."]
# ::lemmas ["exactly", ".", "thought", "should", "be", "with", "they", "and", "only", "they", "."]
(c6-0 / multi-sentence
      :snt1 (c6-2 / exact)
      :snt2 (c6-6 / recommend-01
                  :ARG1 (c6-9 / and
                              :op1 (c6-3 / accompany-01
                                         :ARG0 (c6-8 / thing
                                                     :ARG1-of (c6-7 / think-01))
                                         :ARG1 (c6-4 / they))
                              :op2 (c6-5 / accompany-01
                                         :ARG0 c6-8
                                         :ARG1 c6-4
                                         :mod (c6-1 / only)))))

# ::snt their adrenaline would be keeping them awake
# ::tokens ["their", "adrenaline", "would", "be", "keeping", "them", "awake"]
# ::lemmas ["their", "adrenaline", "would", "be", "keep", "they", "awake"]
(c7-1 / keep-02
      :ARG0 (c7-3 / adrenaline
                  :poss (c7-0 / they))
      :ARG1 (c7-2 / awake-03
                  :ARG1 c7-0))

# ::snt let us all now pray to God and Jesus that all hostages will be safe and that this bully will be shown no mercy
# ::tokens ["let", "us", "all", "now", "pray", "to", "God", "and", "Jesus", "that", "all", "hostages", "will", "be", "safe", "and", "that", "this", "bully", "will", "be", "shown", "no", "mercy"]
# ::lemmas ["let", "we", "all", "now", "pray", "to", "God", "and", "Jesus", "that", "all", "hostage", "will", "be", "safe", "and", "that", "this", "bully", "will", "be", "show", "no", "mercy"]
(c8-7 / let-01
      :ARG0 (c8-16 / you)
      :ARG1 (c8-2 / pray-01
                  :ARG0 (c8-14 / we
                               :mod (c8-5 / all))
                  :ARG1 (c8-15 / and
                               :op1 (c8-3 / safe-01
                                          :ARG1 (c8-6 / hostage
                                                      :mod (c8-12 / all)))
                               :op2 (c8-10 / show-01
                                           :ARG1 (c8-0 / mercy
                                                       :polarity -)
                                           :ARG2 (c8-4 / person
                                                       :ARG0-of (c8-9 / bully-01)
                                                       :mod (c8-19 / this))))
                  :ARG2 (c8-18 / and
                               :op1 (c8-8 / person
                                          :name (c8-11 / name
                                                       :op1 "God"))
                               :op2 (c8-13 / person
                                           :name (c8-17 / name
                                                        :op1 "Jesus")))
                  :time (c8-1 / now))
      :mode imperative)

# ::snt I hope they like chocolate
# ::tokens ["I", "hope", "they", "like", "chocolate"]
# ::lemmas ["i", "hope", "they", "like", "chocolate"]
(c9-0 / hope-01
      :ARG0 (c9-2 / i)
      :ARG1 (c9-1 / like-01
                  :ARG0 (c9-4 / they)
                  :ARG1 (c9-3 / chocolate)))

# ::snt wow, that's disgusting.
# ::tokens ["wow", ",", "that", "'s", "disgusting", "."]
# ::lemmas ["wow", ",", "that", "be", "disgusting", "."]
(c10-0 / disgust-01
       :ARG0 (c10-1 / that))

# ::snt Howdy from Orlando, Florida Chris and I heard you on the Morning Joe show. Crazy world we live in.
# ::tokens ["Howdy", "from", "Orlando", ",", "Florida", "Chris", "and", "I", "heard", "you", "on", "the", "Morning", "Joe", "show", ".", "Crazy", "world", "we", "live", "in", "."]
# ::lemmas ["Howdy", "from", "Orlando", ",", "Florida", "Chris", "and", "i", "hear", "you", "on", "the", "Morning", "Joe", "show", ".", "crazy", "world", "we", "live", "in", "."]
(c11-0 / multi-sentence
       :snt1 (c11-9 / hear-01
                    :ARG0 (c11-8 / and
                                 :op1 (c11-4 / person
                                             :name (c11-12 / name
                                                           :op1 "Chris"))
                                 :op2 (c11-14 / i))
                    :ARG1 (c11-7 / person
                                 :name (c11-16 / name
                                               :op1 "Howdy")
                                 :source (c11-17 / city
                                                 :name (c11-2 / name
                                                              :op1 "Orlando")
                                                 :location (c11-6 / state
                                                                  :name (c11-3 / name
                                                                               :op1 "Florida"))))
                    :ARG2 (c11-15 / you)
                    :medium (c11-11 / show
                                    :name (c11-18 / name
                                                  :op1 "Morning"
                                                  :op2 "Joe")))
       :snt2 (c11-10 / live-01
                     :ARG0 (c11-13 / we)
                     :location (c11-1 / world
                                      :ARG1-of (c11-5 / crazy-03))))

# ::snt Can't but feel and think of them. Must be terrified x
# ::tokens ["Ca", "n't", "but", "feel", "and", "think", "of", "them", ".", "Must", "be", "terrified", "x"]
# ::lemmas ["can", "not", "but", "feel", "and", "think", "of", "they", ".", "must", "be", "terrify", "x"]
(c12-1 / multi-sentence
       :snt1 (c12-5 / possible-01
                    :ARG1 (c12-6 / contrast-01
                                 :ARG1 (c12-0 / feel-01
                                              :ARG1 (c12-9 / they))
                                 :ARG2 (c12-8 / think-01
                                              :ARG1 (c12-4 / they)))
                    :polarity -)
       :snt2 (c12-3 / infer-01
                    :ARG1 (c12-2 / terrify-01
                                 :ARG1 (c12-7 / i))))
