# ::snt I've noticed that the police dog was injured; at least he was on a policeman's shoulders coming out the shooting area. damn!!
# ::tokens ["I", "'ve", "noticed", "that", "the", "police", "dog", "was", "injured", ";", "at", "least", "he", "was", "on", "a", "policeman", "'s", "shoulders", "coming", "out", "the", "shooting", "area", ".", "damn", "!", "!"]
# ::lemmas ["i", "'ve", "notice", "that", "the", "police", "dog", "be", "injure", ";", "at", "least", "he", "be", "on", "a", "policeman", "'s", "shoulder", "come", "out", "the", "shooting", "area", ".", "damn", "!", "!"]
(c1-2 / multi-sentence
      :snt1 (c1-8 / notice-01
                  :ARG0 (c1-7 / i)
                  :ARG1 (c1-12 / injure-01
                               :ARG1 (c1-10 / dog
                                            :mod (c1-9 / police))))
      :snt2 (c1-3 / be-located-at-91
                  :ARG1 (c1-0 / he)
                  :ARG2 (c1-13 / shoulder
                               :part-of (c1-14 / policeman))
                  :mod (c1-15 / at-least)
                  :ARG1-of (c1-11 / come-01
                                  :direction (c1-4 / out-of
                                                   :op1 (c1-6 / area
                                                              :location-of (c1-5 / shoot-02)))))
      :snt3 (c1-1 / damn
                  :mode expressive))

# ::snt and lool on that heaven n pig shit. I dont think it works that way. Educate urself.
# ::tokens ["and", "lool", "on", "that", "heaven", "n", "pig", "shit", ".", "I", "do", "nt", "think", "it", "works", "that", "way", ".", "Educate", "urself", "."]
# ::lemmas ["and", "lool", "on", "that", "heaven", "n", "pig", "shit", ".", "i", "do", "not", "think", "it", "work", "that", "way", ".", "educate", "urself", "."]
(c2-4 / multi-sentence
      :snt1 (c2-14 / and
                   :op2 (c2-3 / lool-01
                              :ARG0 (c2-1 / you)
                              :ARG1 (c2-12 / shit
                                           :mod (c2-13 / that)
                                           :mod (c2-0 / heaven)
                                           :mod (c2-5 / shit
                                                      :mod (c2-9 / pig)))
                              :mode imperative))
      :snt2 (c2-11 / think-01
                   :ARG0 (c2-7 / i)
                   :ARG1 (c2-2 / work-09
                               :ARG1 (c2-10 / it)
                               :manner (c2-8 / that))
                   :polarity -)
      :snt3 (c2-6 / educate-01
                  :ARG0 (c2-15 / you
                               :ARG1-of c2-6)))

# ::snt : Gunman holding hostages at kosher supermarket in eastern Paris killed, local reports say
# ::tokens [":", "Gunman", "holding", "hostages", "at", "kosher", "supermarket", "in", "eastern", "Paris", "killed", ",", "local", "reports", "say"]
# ::lemmas [":", "gunman", "hold", "hostage", "at", "kosher", "supermarket", "in", "eastern", "Paris", "kill", ",", "local", "report", "say"]
(c3-9 / say-01
      :ARG0 (c3-6 / report-01
                  :ARG1-of (c3-1 / local-02))
      :ARG1 (c3-10 / kill-01
                   :ARG1 (c3-8 / gunman
                               :ARG0-of (c3-0 / hold-01
                                              :ARG1 (c3-11 / hostage)
                                              :location (c3-2 / supermarket
                                                              :mod (c3-3 / kosher)
                                                              :location (c3-4 / east
                                                                              :part-of (c3-7 / city
                                                                                             :name (c3-5 / name
                                                                                                         :op1 "Paris"))))))))

# ::snt ok u islamophobe! Why mention bury in pig if ur not a islamophobe?
# ::tokens ["ok", "u", "islamophobe", "!", "Why", "mention", "bury", "in", "pig", "if", "ur", "not", "a", "islamophobe", "?"]
# ::lemmas ["ok", "u", "islamophobe", "!", "why", "mention", "bury", "in", "pig", "if", "ur", "not", "a", "islamophobe", "?"]
(c4-1 / multi-sentence
      :snt1 (c4-3 / okay-04
                  :ARG1 (c4-0 / you
                              :mod (c4-4 / islamophobe)))
      :snt2 (c4-8 / cause-01
                  :ARG0 (c4-11 / amr-unknown)
                  :ARG1 (c4-6 / mention-01
                              :ARG1 (c4-2 / bury-01
                                          :ARG1 (c4-10 / you)
                                          :ARG2 (c4-7 / pig))
                              :condition (c4-9 / religious-group
                                               :name (c4-5 / name
                                                           :op1 "Islamophobe_1")
                                               :domain c4-10
                                               :polarity -))))

# ::snt : Gunman holding hostages at kosher supermarket in eastern Paris killed, local reports say
# ::tokens [":", "Gunman", "holding", "hostages", "at", "kosher", "supermarket", "in", "eastern", "Paris", "killed", ",", "local", "reports", "say"]
# ::lemmas [":", "gunman", "hold", "hostage", "at", "kosher", "supermarket", "in", "eastern", "Paris", "kill", ",", "local", "report", "say"]
(c5-9 / say-01
      :ARG0 (c5-6 / report-01
                  :ARG1-of (c5-1 / local-02))
      :ARG1 (c5-10 / kill-01
                   :ARG1 (c5-8 / gunman
                               :ARG0-of (c5-0 / hold-01
                                              :ARG1 (c5-11 / hostage)
                                              :location (c5-2 / supermarket
                                                              :mod (c5-3 / kosher)
                                                              :location (c5-4 / east
                                                                              :part-of (c5-7 / city
                                                                                             :name (c5-5 / name
                                                                                                         :op1 "Paris"))))))))

# ::snt stun grenade/noxious gas would have apprehended these guys. Just think we need to uphold law or we mite b next
# ::tokens ["stun", "grenade", "/", "noxious", "gas", "would", "have", "apprehended", "these", "guys", ".", "Just", "think", "we", "need", "to", "uphold", "law", "or", "we", "mite", "b", "next"]
# ::lemmas ["stun", "grenade", "/", "noxious", "gas", "would", "have", "apprehend", "these", "guy", ".", "just", "think", "we", "need", "to", "uphold", "law", "or", "we", "mite", "b", "next"]
(c6-1 / multi-sentence
      :snt1 (c6-5 / apprehend-01
                  :ARG0 (c6-4 / slash
                              :op1 (c6-9 / grenade)
                              :op2 (c6-3 / gas
                                         :ARG0-of (c6-12 / annoy-01))
                              :ARG1-of (c6-7 / stick-01
                                             :polarity -))
                  :ARG1 (c6-2 / guy
                              :mod (c6-18 / this)))
      :snt2 (c6-17 / think-01
                   :ARG0 (c6-13 / i)
                   :ARG1 (c6-15 / or
                                :op1 (c6-8 / need-01
                                           :ARG0 (c6-10 / we)
                                           :ARG1 (c6-11 / uphold-01
                                                        :ARG0 c6-10
                                                        :ARG1 (c6-6 / law)))
                                :op2 (c6-14 / obligate-01
                                            :ARG1 c6-10
                                            :ARG2 c6-11
                                            :time (c6-16 / next)))
                   :mod (c6-0 / just)))

# ::snt Not if it cost even one more death of a PC or civilian, no.
# ::tokens ["Not", "if", "it", "cost", "even", "one", "more", "death", "of", "a", "PC", "or", "civilian", ",", "no", "."]
# ::lemmas ["not", "if", "it", "cost", "even", "one", "more", "death", "of", "a", "pc", "or", "civilian", ",", "no", "."]
(c7-0 / have-condition-91
      :ARG2 (c7-8 / cost-01
                  :ARG1 (c7-5 / it)
                  :ARG2 (c7-7 / die-01
                              :ARG1 (c7-3 / or
                                          :op1 (c7-6 / person
                                                     :ARG0-of (c7-2 / use-01
                                                                    :ARG1 (c7-9 / computer)))
                                          :op2 (c7-10 / civilian))
                              :mod (c7-1 / more
                                         :mod (c7-4 / even)
                                         :quant 1)))
      :polarity -)

# ::snt We know "why they attacked". They wanted to murder people. That's it.
# ::tokens ["We", "know", "\"", "why", "they", "attacked", "\"", ".", "They", "wanted", "to", "murder", "people", ".", "That", "'s", "it", "."]
# ::lemmas ["we", "know", "\"", "why", "they", "attack", "\"", ".", "they", "want", "to", "murder", "people", ".", "that", "be", "it", "."]
(c8-1 / multi-sentence
      :snt1 (c8-4 / know-01
                  :ARG0 (c8-0 / we)
                  :ARG1 (c8-11 / thing
                               :ARG0-of (c8-9 / cause-01
                                              :ARG1 (c8-12 / attack-01
                                                           :ARG0 (c8-10 / they)))))
      :snt2 (c8-5 / want-01
                  :ARG0 (c8-6 / they)
                  :ARG1 (c8-7 / murder-01
                              :ARG0 c8-6
                              :ARG1 (c8-8 / person)))
      :snt3 (c8-2 / be-it-08
                  :ARG1 (c8-3 / that)))

# ::snt both sets of gunmen are dead! Wow go French police!
# ::tokens ["both", "sets", "of", "gunmen", "are", "dead", "!", "Wow", "go", "French", "police", "!"]
# ::lemmas ["both", "set", "of", "gunman", "be", "dead", "!", "wow", "go", "French", "police", "!"]
(c9-1 / multi-sentence
      :snt1 (c9-5 / die-01
                  :ARG1 (c9-7 / gunman
                              :mod (c9-9 / set
                                         :mod (c9-2 / both))))
      :snt2 (c9-6 / go-02
                  :ARG0 (c9-4 / police
                              :mod (c9-8 / country
                                         :name (c9-3 / name
                                                     :op1 "France")))
                  :ARG1-of (c9-0 / wow-01)
                  :mode imperative))

# ::snt then they've resolved both. Good on them.
# ::tokens ["then", "they", "'ve", "resolved", "both", ".", "Good", "on", "them", "."]
# ::lemmas ["then", "they", "'ve", "resolve", "both", ".", "good", "on", "they", "."]
(c10-0 / multi-sentence
       :snt1 (c10-3 / resolve-01
                    :ARG0 (c10-6 / they)
                    :ARG1 (c10-1 / both)
                    :time (c10-5 / then))
       :snt2 (c10-4 / good-02
                    :ARG2 (c10-2 / they)))

# ::snt Those things don't work fast enough to have stopped them killing hostages.
# ::tokens ["Those", "things", "do", "n't", "work", "fast", "enough", "to", "have", "stopped", "them", "killing", "hostages", "."]
# ::lemmas ["those", "thing", "do", "not", "work", "fast", "enough", "to", "have", "stop", "they", "kill", "hostage", "."]
(c11-1 / work-09
       :ARG1 (c11-8 / thing
                    :mod (c11-6 / that))
       :ARG1-of (c11-2 / fast-02
                       :ARG2-of (c11-0 / have-degree-91
                                       :ARG1 c11-1
                                       :ARG3 (c11-3 / enough)
                                       :ARG6 (c11-7 / stop-03
                                                    :ARG1 (c11-5 / they)
                                                    :ARG2 (c11-4 / kill-01
                                                                 :ARG0 c11-5
                                                                 :ARG1 (c11-9 / hostage)))))
       :polarity -)

# ::snt no onecwants u to b affraod of muslims apart from the Gov n terrorists. Live in peace mate..
# ::tokens ["no", "onecwants", "u", "to", "b", "affraod", "of", "muslims", "apart", "from", "the", "Gov", "n", "terrorists", ".", "Live", "in", "peace", "mate", ".."]
# ::lemmas ["no", "onecwant", "u", "to", "b", "affraod", "of", "muslims", "apart", "from", "the", "Gov", "n", "terrorist", ".", "live", "in", "peace", "mate", ".."]
(c12-4 / multi-sentence
       :snt1 (c12-1 / want-01
                    :ARG0 (c12-8 / no-one)
                    :ARG1 (c12-16 / affluence-00
                                  :ARG0 (c12-2 / you)
                                  :ARG1 (c12-10 / person
                                                :mod (c12-11 / religious-group
                                                             :name (c12-9 / name
                                                                          :op1 "Islam"))
                                                :ARG2-of (c12-6 / except-01
                                                                :ARG1 (c12-7 / and
                                                                             :op1 (c12-15 / person
                                                                                          :ARG0-of (c12-0 / have-org-role-91
                                                                                                          :ARG2 (c12-13 / governor)))
                                                                             :op2 (c12-14 / terrorist))))))
       :snt2 (c12-3 / live-01
                    :ARG0 (c12-12 / mate)
                    :manner (c12-5 / peace)
                    :mode imperative))

# ::snt figures! Now we can't find reason why they attacked..perfect to make up some bulls**t by French Gov!!!
# ::tokens ["figures", "!", "Now", "we", "ca", "n't", "find", "reason", "why", "they", "attacked", "..", "perfect", "to", "make", "up", "some", "bulls**t", "by", "French", "Gov", "!", "!", "!"]
# ::lemmas ["figure", "!", "now", "we", "can", "not", "find", "reason", "why", "they", "attack", "..", "perfect", "to", "make", "up", "some", "bulls**t", "by", "French", "Gov", "!", "!", "!"]
(c13-0 / multi-sentence
       :snt1 (c13-7 / figures)
       :snt2 (c13-1 / possible-01
                    :ARG1 (c13-15 / find-01
                                  :ARG0 (c13-14 / we)
                                  :ARG1 (c13-12 / reason
                                                :ARG0-of (c13-17 / cause-01
                                                                 :ARG1 (c13-5 / attack-01
                                                                              :ARG0 (c13-18 / they)))))
                    :time (c13-10 / now)
                    :ARG1-of c13-17
                    :ARG0 (c13-4 / perfect-02
                                 :ARG1 c13-18
                                 :ARG2 (c13-11 / make-up-10
                                               :ARG0 (c13-8 / person
                                                            :ARG0-of (c13-6 / have-org-role-91
                                                                            :ARG1 (c13-2 / country
                                                                                         :name (c13-16 / name
                                                                                                       :op1 "France"))
                                                                            :ARG2 (c13-13 / governor)))
                                               :ARG1 (c13-9 / bullshit
                                                            :mod (c13-3 / some))))
                    :polarity -))

# ::snt not so sure now, reports of hostages maybe killed?
# ::tokens ["not", "so", "sure", "now", ",", "reports", "of", "hostages", "maybe", "killed", "?"]
# ::lemmas ["not", "so", "sure", "now", ",", "report", "of", "hostage", "maybe", "kill", "?"]
(c14-6 / sure-02
       :degree (c14-1 / so)
       :time (c14-2 / now)
       :ARG1-of (c14-5 / cause-01
                       :ARG0 (c14-4 / report-01
                                    :ARG1 (c14-3 / possible-01
                                                 :ARG1 (c14-7 / kill-01
                                                              :ARG1 (c14-0 / hostage)))
                                    :polarity (c14-8 / amr-unknown)))
       :polarity -)

# ::snt I'm glad the dog is ok too.
# ::tokens ["I", "'m", "glad", "the", "dog", "is", "ok", "too", "."]
# ::lemmas ["i", "be", "glad", "the", "dog", "be", "ok", "too", "."]
(c15-3 / glad-02
       :ARG0 (c15-0 / okay-03
                    :ARG1 (c15-2 / dog)
                    :mod (c15-4 / too))
       :ARG1 (c15-1 / i))

# ::snt oh ok n it was as simple as that!!Better to catch the nuts n put em on trial n then shoot them against a wall no?
# ::tokens ["oh", "ok", "n", "it", "was", "as", "simple", "as", "that!!Better", "to", "catch", "the", "nuts", "n", "put", "em", "on", "trial", "n", "then", "shoot", "them", "against", "a", "wall", "no", "?"]
# ::lemmas ["oh", "ok", "n", "it", "be", "as", "simple", "as", "that!!better", "to", "catch", "the", "nut", "n", "put", "em", "on", "trial", "n", "then", "shoot", "they", "against", "a", "wall", "no", "?"]
(c16-0 / multi-sentence
       :snt1 (c16-15 / okay-01
                     :mod (c16-14 / oh
                                  :mode expressive))
       :snt2 (c16-2 / simple-02
                    :ARG1 (c16-12 / it)
                    :ARG2-of (c16-4 / have-degree-91
                                    :ARG1 c16-12
                                    :ARG3 (c16-5 / equal)
                                    :ARG4 (c16-18 / that)))
       :snt3 (c16-9 / good-02
                    :ARG1 (c16-3 / and
                                 :op1 (c16-16 / catch-03
                                              :ARG1 (c16-7 / nuts))
                                 :op2 (c16-1 / put-03
                                             :ARG1 c16-7
                                             :ARG2 (c16-17 / try-02))
                                 :op3 (c16-6 / shoot-02
                                             :ARG1 c16-7
                                             :direction (c16-11 / against
                                                                :op1 (c16-10 / wall))
                                             :time (c16-13 / then)))
                    :ARG2-of c16-4
                    :ARG1 c16-3
                    :ARG3 (c16-8 / more)))

# ::snt well thank you!
# ::tokens ["well", "thank", "you", "!"]
# ::lemmas ["well", "thank", "you", "!"]
(c17-2 / thank-01
       :ARG1 (c17-1 / you)
       :mod (c17-0 / well))

# ::snt fair point but everyone needs to step back from war rhetoric n bring perps to court b judged n if found guilty then imprison
# ::tokens ["fair", "point", "but", "everyone", "needs", "to", "step", "back", "from", "war", "rhetoric", "n", "bring", "perps", "to", "court", "b", "judged", "n", "if", "found", "guilty", "then", "imprison"]
# ::lemmas ["fair", "point", "but", "everyone", "need", "to", "step", "back", "from", "war", "rhetoric", "n", "bring", "perp", "to", "court", "b", "judge", "n", "if", "find", "guilty", "then", "imprison"]
(c18-11 / contrast-01
        :ARG1 (c18-9 / point-04
                     :ARG1-of (c18-2 / fair-01))
        :ARG2 (c18-8 / need-01
                     :ARG0 (c18-5 / everyone)
                     :ARG1 (c18-17 / and
                                   :op1 (c18-15 / step-01
                                                :ARG1 c18-5
                                                :ARG2 (c18-4 / back-02
                                                             :ARG1 c18-5
                                                             :ARG2 (c18-10 / rhetoric
                                                                           :mod (c18-1 / war))))
                                   :op2 (c18-12 / bring-01
                                                :ARG0 c18-5
                                                :ARG1 (c18-16 / person
                                                              :ARG1-of (c18-3 / penalize-01))
                                                :ARG2 (c18-13 / court)
                                                :manner (c18-0 / judge-01))
                                   :op3 (c18-6 / imprison-01
                                               :ARG0 c18-5
                                               :condition (c18-7 / find-01
                                                                 :ARG1 (c18-14 / guilty-01
                                                                               :ARG1 c18-16))))))

# ::snt fortunately, seen another footage, dog's safe with police officer.But a lady same-colored coat was the one I saw
# ::tokens ["fortunately", ",", "seen", "another", "footage", ",", "dog", "'s", "safe", "with", "police", "officer", ".", "But", "a", "lady", "same", "-", "colored", "coat", "was", "the", "one", "I", "saw"]
# ::lemmas ["fortunately", ",", "see", "another", "footage", ",", "dog", "'s", "safe", "with", "police", "officer", ".", "but", "a", "lady", "same", "-", "color", "coat", "be", "the", "one", "i", "see"]
(c19-11 / contrast-01
        :ARG1 (c19-14 / see-01
                      :ARG0 (c19-7 / i)
                      :ARG1 (c19-1 / footage
                                   :mod (c19-16 / another)
                                   :topic (c19-6 / safe-01
                                                 :ARG1 (c19-10 / dog)
                                                 :accompanier (c19-9 / person
                                                                     :ARG0-of (c19-0 / have-org-role-91
                                                                                     :ARG1 (c19-15 / police)
                                                                                     :ARG2 (c19-4 / officer)))))
                      :ARG2-of (c19-8 / fortunate-01
                                      :polarity -))
        :ARG2 (c19-2 / see-01
                     :ARG0 c19-7
                     :ARG1 (c19-12 / coat
                                   :ARG1-of (c19-13 / color-01
                                                    :ARG2 (c19-5 / same-01))
                                   :domain (c19-17 / coat
                                                   :poss (c19-3 / lady)))))

# ::snt mate I dont wanna b f**ked by anyone. Have a good day.
# ::tokens ["mate", "I", "do", "nt", "wanna", "b", "f**ked", "by", "anyone", ".", "Have", "a", "good", "day", "."]
# ::lemmas ["mate", "i", "do", "not", "wanna", "b", "f**ke", "by", "anyone", ".", "have", "a", "good", "day", "."]
(c20-4 / multi-sentence
       :snt1 (c20-11 / say-01
                     :ARG0 (c20-6 / i)
                     :ARG1 (c20-1 / want-01
                                  :ARG0 c20-6
                                  :ARG1 (c20-3 / fuck-01
                                               :ARG0 (c20-12 / anyone)
                                               :ARG1 c20-6)
                                  :polarity -)
                     :ARG2 (c20-7 / person
                                  :ARG0-of (c20-0 / have-rel-role-91
                                                  :ARG1 c20-6
                                                  :ARG2 (c20-8 / mate))))
       :snt2 (c20-5 / have-03
                    :ARG0 (c20-2 / you)
                    :ARG1 (c20-9 / day
                                 :ARG1-of (c20-10 / good-02))
                    :mode imperative))

# ::snt some good news at last then. Well done to the police for taking these murdering scumbags out once and for all.
# ::tokens ["some", "good", "news", "at", "last", "then", ".", "Well", "done", "to", "the", "police", "for", "taking", "these", "murdering", "scumbags", "out", "once", "and", "for", "all", "."]
# ::lemmas ["some", "good", "news", "at", "last", "then", ".", "well", "do", "to", "the", "police", "for", "take", "these", "murder", "scumbag", "out", "once", "and", "for", "all", "."]
(c21-2 / multi-sentence
       :snt1 (c21-6 / news
                    :ARG1-of (c21-11 / good-02)
                    :mod (c21-13 / some)
                    :time (c21-15 / at-last)
                    :mod (c21-14 / then))
       :snt2 (c21-5 / say-01
                    :ARG1 (c21-9 / do-02
                                 :ARG1-of (c21-0 / well-09))
                    :ARG2 (c21-8 / police)
                    :ARG3 (c21-12 / take-out-11
                                  :ARG0 c21-8
                                  :ARG1 (c21-1 / scumbag
                                               :ARG0-of (c21-10 / murder-01)
                                               :mod (c21-7 / this))
                                  :mod (c21-4 / out)
                                  :mod (c21-3 / once-and-for-all))))

# ::snt it seems all terrorists in both locations dead, all hostages ok, incredible work by the french police. Just incredible.
# ::tokens ["it", "seems", "all", "terrorists", "in", "both", "locations", "dead", ",", "all", "hostages", "ok", ",", "incredible", "work", "by", "the", "french", "police", ".", "Just", "incredible", "."]
# ::lemmas ["it", "seem", "all", "terrorist", "in", "both", "location", "dead", ",", "all", "hostage", "ok", ",", "incredible", "work", "by", "the", "french", "police", ".", "just", "incredible", "."]
(c22-4 / multi-sentence
       :snt1 (c22-15 / seem-01
                     :ARG1 (c22-17 / and
                                   :op1 (c22-12 / die-01
                                                :ARG1 (c22-16 / terrorist
                                                              :mod (c22-7 / all)
                                                              :location (c22-3 / location
                                                                               :mod (c22-5 / both))))
                                   :op2 (c22-6 / okay-04
                                               :ARG1 (c22-0 / hostage
                                                            :mod (c22-10 / all)))
                                   :op3 (c22-1 / work-01
                                               :ARG0 (c22-11 / police
                                                             :mod (c22-13 / country
                                                                          :name (c22-9 / name
                                                                                       :op1 "France")))
                                               :mod (c22-8 / incredible))))
       :snt2 (c22-14 / incredible
                     :mod (c22-2 / just)))

# ::snt wait overnight if u have to for it to work.
# ::tokens ["wait", "overnight", "if", "u", "have", "to", "for", "it", "to", "work", "."]
# ::lemmas ["wait", "overnight", "if", "u", "have", "to", "for", "it", "to", "work", "."]
(c23-0 / wait-01
       :ARG1 (c23-1 / you)
       :time (c23-3 / overnight)
       :condition (c23-2 / obligate-01
                         :ARG1 c23-1
                         :purpose (c23-5 / work-09
                                         :ARG1 (c23-4 / it))))

# ::snt But can't you see, the criminals would have killed the hostages as soon as they knew gas had been used? Still time
# ::tokens ["But", "ca", "n't", "you", "see", ",", "the", "criminals", "would", "have", "killed", "the", "hostages", "as", "soon", "as", "they", "knew", "gas", "had", "been", "used", "?", "Still", "time"]
# ::lemmas ["but", "can", "not", "you", "see", ",", "the", "criminal", "would", "have", "kill", "the", "hostage", "as", "soon", "as", "they", "know", "gas", "have", "be", "use", "?", "still", "time"]
(c24-2 / multi-sentence
       :snt1 (c24-8 / contrast-01
                    :ARG2 (c24-6 / possible-01
                                 :ARG1 (c24-10 / see-01
                                               :ARG0 (c24-1 / you))
                                 :polarity -))
       :snt2 (c24-12 / kill-01
                     :ARG0 (c24-13 / person
                                   :ARG2-of (c24-7 / criminal-03))
                     :ARG1 (c24-0 / hostage)
                     :time (c24-14 / as-soon-as
                                   :op1 (c24-4 / know-01
                                               :ARG0 c24-13
                                               :ARG1 (c24-3 / use-01
                                                            :ARG1 (c24-9 / gas)))))
       :snt3 (c24-11 / time
                     :mod (c24-5 / still)))

# ::snt lets hope they bled slowly to death
# ::tokens ["lets", "hope", "they", "bled", "slowly", "to", "death"]
# ::lemmas ["let", "hope", "they", "bleed", "slowly", "to", "death"]
(c25-0 / hope-01
       :ARG0 (c25-1 / we)
       :ARG1 (c25-2 / bleed-01
                    :ARG1 (c25-5 / they)
                    :ARG1-of (c25-4 / slow-05)
                    :destination (c25-3 / die-01
                                        :ARG1 c25-5))
       :mode imperative)

# ::snt : Gunman holding hostages at kosher supermarket in eastern Paris killed, local reports say
# ::tokens [":", "Gunman", "holding", "hostages", "at", "kosher", "supermarket", "in", "eastern", "Paris", "killed", ",", "local", "reports", "say"]
# ::lemmas [":", "gunman", "hold", "hostage", "at", "kosher", "supermarket", "in", "eastern", "Paris", "kill", ",", "local", "report", "say"]
(c26-9 / say-01
       :ARG0 (c26-6 / report-01
                    :ARG1-of (c26-1 / local-02))
       :ARG1 (c26-10 / kill-01
                     :ARG1 (c26-8 / gunman
                                  :ARG0-of (c26-0 / hold-01
                                                  :ARG1 (c26-11 / hostage)
                                                  :location (c26-2 / supermarket
                                                                   :mod (c26-3 / kosher)
                                                                   :location (c26-4 / east
                                                                                    :part-of (c26-7 / city
                                                                                                    :name (c26-5 / name
                                                                                                                 :op1 "Paris"))))))))
