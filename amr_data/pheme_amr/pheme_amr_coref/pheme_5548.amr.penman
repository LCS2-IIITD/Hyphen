# ::snt Ah quality cnn. Earlier today they spoke about Canada and it's million population. They don't even Wikipedia their tripe.
# ::tokens ["Ah", "quality", "cnn", ".", "Earlier", "today", "they", "spoke", "about", "Canada", "and", "it", "'s", "million", "population", ".", "They", "do", "n't", "even", "Wikipedia", "their", "tripe", "."]
# ::lemmas ["ah", "quality", "cnn", ".", "Earlier", "today", "they", "speak", "about", "Canada", "and", "it", "be", "million", "population", ".", "they", "do", "not", "even", "Wikipedia", "their", "tripe", "."]
(c1-0 / multi-sentence
      :snt1 (c1-10 / quality
                   :mod (c1-6 / ah
                              :mode expressive)
                   :domain (c1-3 / publication
                                 :name (c1-11 / name
                                              :op1 "CNN")))
      :snt2 (c1-4 / speak-01
                  :ARG0 (c1-18 / they)
                  :ARG1 (c1-12 / and
                               :op1 (c1-16 / country
                                           :name (c1-15 / name
                                                        :op1 "Canada"))
                               :op2 (c1-5 / population
                                          :poss c1-16
                                          :quant 1000000))
                  :time (c1-8 / before
                              :op1 (c1-1 / now))
                  :time (c1-17 / today))
      :snt3 (c1-13 / tripe
                   :poss (c1-14 / they)
                   :mod (c1-9 / even)
                   :medium (c1-7 / publication
                                 :name (c1-2 / name
                                             :op1 "Wikipedia"))
                   :polarity -))

# ::snt yes, gime me a break too
# ::tokens ["yes", ",", "gime", "me", "a", "break", "too"]
# ::lemmas ["yes", ",", "gime", "i", "a", "break", "too"]
(c2-3 / give-01
      :ARG0 (c2-0 / you)
      :ARG1 (c2-1 / break-19)
      :ARG2 (c2-2 / i)
      :mod (c2-4 / too)
      :mode imperative)

# ::snt saw that, was a crock
# ::tokens ["saw", "that", ",", "was", "a", "crock"]
# ::lemmas ["see", "that", ",", "be", "a", "crock"]
(c3-0 / see-01
      :ARG0 (c3-3 / i)
      :ARG1 (c3-2 / crock
                  :domain (c3-1 / that)))

# ::snt yeah, its such a drag that we let folks born in Canada walk around in Canada. Damn that immigration system.
# ::tokens ["yeah", ",", "its", "such", "a", "drag", "that", "we", "let", "folks", "born", "in", "Canada", "walk", "around", "in", "Canada", ".", "Damn", "that", "immigration", "system", "."]
# ::lemmas ["yeah", ",", "its", "such", "a", "drag", "that", "we", "let", "folk", "bear", "in", "Canada", "walk", "around", "in", "Canada", ".", "damn", "that", "immigration", "system", "."]
(c4-3 / multi-sentence
      :snt1 (c4-11 / drag-01
                   :ARG1 (c4-2 / let-01
                               :ARG0 (c4-0 / we)
                               :ARG1 (c4-9 / walk-01
                                           :ARG0 (c4-4 / folk
                                                       :ARG1-of (c4-6 / bear-02
                                                                      :location (c4-12 / country
                                                                                       :name (c4-10 / name
                                                                                                    :op1 "Canada"))))
                                           :ARG2 (c4-15 / around
                                                        :location c4-12)))
                   :degree (c4-13 / such)
                   :mod (c4-1 / yeah
                              :mode expressive))
      :snt2 (c4-7 / system
                  :mod (c4-8 / immigrate-01)
                  :mod (c4-14 / that)
                  :ARG1-of (c4-5 / damn-01)))

# ::snt Xpected this kind of statement from Fox.. However, CNN has become as bad as Fox!
# ::tokens ["Xpected", "this", "kind", "of", "statement", "from", "Fox", "..", "However", ",", "CNN", "has", "become", "as", "bad", "as", "Fox", "!"]
# ::lemmas ["xpecte", "this", "kind", "of", "statement", "from", "Fox", "..", "however", ",", "CNN", "have", "become", "as", "bad", "as", "Fox", "!"]
(c5-1 / multi-sentence
      :snt1 (c5-9 / criticize-01
                  :ARG1 (c5-2 / broadcast-program
                              :name (c5-5 / name
                                          :op1 "Fox"))
                  :ARG2 (c5-14 / thing
                               :mod (c5-4 / kind
                                          :mod (c5-11 / this))
                               :ARG1-of (c5-12 / state-01
                                               :ARG0 c5-2)))
      :snt2 (c5-8 / contrast-01
                  :ARG2 (c5-10 / become-01
                               :ARG1 (c5-7 / publication
                                           :name (c5-6 / name
                                                       :op1 "CNN"))
                               :ARG2 (c5-0 / have-degree-91
                                           :ARG1 c5-7
                                           :ARG2 (c5-13 / bad-07
                                                        :ARG1 c5-7)
                                           :ARG3 (c5-3 / equal)
                                           :ARG4 c5-2))))

# ::snt Shooter is born in Canada
# ::tokens ["Shooter", "is", "born", "in", "Canada"]
# ::lemmas ["shooter", "be", "bear", "in", "Canada"]
(c6-0 / bear-02
      :ARG1 (c6-3 / person
                  :name (c6-1 / name
                              :op1 "Shooter"))
      :location (c6-4 / country
                      :name (c6-2 / name
                                  :op1 "Canada")))

# ::snt Reply to Yeah I had *NO* idea that Canadian born Canadians have never killed anyone.
# ::tokens ["Reply", "to", "Yeah", "I", "had", "*", "NO", "*", "idea", "that", "Canadian", "born", "Canadians", "have", "never", "killed", "anyone", "."]
# ::lemmas ["reply", "to", "yeah", "i", "have", "*", "no", "*", "idea", "that", "Canadian", "bear", "Canadians", "have", "never", "kill", "anyone", "."]
(c7-6 / reply-01
      :ARG2 (c7-0 / have-03
                  :ARG0 (c7-3 / i)
                  :ARG1 (c7-8 / idea
                              :topic (c7-9 / kill-01
                                           :ARG0 (c7-5 / person
                                                       :mod (c7-7 / country
                                                                  :name (c7-4 / name
                                                                              :op1 "Canada"))
                                                       :ARG1-of (c7-1 / bear-02
                                                                      :location c7-7))
                                           :ARG1 (c7-10 / anyone)
                                           :time (c7-2 / ever)
                                           :polarity -))
                  :polarity -))

# ::snt What part of Cdn born did they miss? MT CNN commentator already blaming our "lax" immigration policies for Ottawa shooting.
# ::tokens ["What", "part", "of", "Cdn", "born", "did", "they", "miss", "?", "MT", "CNN", "commentator", "already", "blaming", "our", "\"", "lax", "\"", "immigration", "policies", "for", "Ottawa", "shooting", "."]
# ::lemmas ["what", "part", "of", "Cdn", "bear", "do", "they", "miss", "?", "MT", "CNN", "commentator", "already", "blame", "our", "\"", "lax", "\"", "immigration", "policy", "for", "Ottawa", "shoot", "."]
(c8-0 / multi-sentence
      :snt1 (c8-11 / miss-02
                   :ARG0 (c8-19 / they)
                   :ARG1 (c8-2 / part
                               :mod (c8-6 / amr-unknown)
                               :part-of (c8-9 / bear-02
                                              :location (c8-18 / country
                                                               :name (c8-10 / name
                                                                            :op1 "Canada")))))
      :snt2 (c8-15 / blame-01
                   :ARG0 (c8-3 / commentator
                               :mod (c8-5 / publication
                                          :name (c8-17 / name
                                                       :op1 "CNN")))
                   :ARG1 (c8-8 / policy-01
                               :ARG0 (c8-12 / we)
                               :ARG2 (c8-14 / immigrate-01)
                               :mod (c8-7 / hoax))
                   :ARG2 (c8-4 / shoot-02
                               :location (c8-16 / city
                                                :name (c8-1 / name
                                                            :op1 "Ottawa")))
                   :time (c8-13 / already)))

# ::snt CNN isn't news. It's sensationalism.
# ::tokens ["CNN", "is", "n't", "news", ".", "It", "'s", "sensationalism", "."]
# ::lemmas ["CNN", "be", "not", "news", ".", "it", "be", "sensationalism", "."]
(c9-0 / multi-sentence
      :snt1 (c9-2 / news
                  :domain (c9-4 / publication
                                :name (c9-3 / name
                                            :op1 "CNN"))
                  :polarity -)
      :snt2 (c9-5 / sensationalism
                  :domain (c9-1 / it)))

# ::snt Canada probably has less of an immigration problem than US.
# ::tokens ["Canada", "probably", "has", "less", "of", "an", "immigration", "problem", "than", "US", "."]
# ::lemmas ["Canada", "probably", "have", "less", "of", "an", "immigration", "problem", "than", "US", "."]
(c10-5 / probable
       :domain (c10-0 / have-03
                      :ARG0 (c10-7 / country
                                   :name (c10-3 / name
                                                :op1 "Canada"))
                      :ARG1 (c10-8 / problem
                                   :topic (c10-2 / immigrate-01)
                                   :ARG1-of (c10-9 / have-quant-91
                                                   :ARG3 (c10-1 / less)
                                                   :ARG4 (c10-6 / country
                                                                :name (c10-4 / name
                                                                             :op1 "US"))))))

# ::snt Imagine us allowing people born in Canada to remain here...
# ::tokens ["Imagine", "us", "allowing", "people", "born", "in", "Canada", "to", "remain", "here", "..."]
# ::lemmas ["imagine", "we", "allow", "people", "bear", "in", "Canada", "to", "remain", "here", "..."]
(c11-3 / imagine-01
       :ARG0 (c11-1 / you)
       :ARG1 (c11-8 / allow-01
                    :ARG0 (c11-0 / we)
                    :ARG1 (c11-6 / remain-01
                                 :ARG1 (c11-5 / person
                                              :ARG1-of (c11-2 / bear-02
                                                              :location (c11-7 / country
                                                                               :name (c11-4 / name
                                                                                            :op1 "Canada")
                                                                               :location-of c11-6)))))
       :mode imperative)

# ::snt THIS IS AMAZING!!! RT: CNN commentator already blaming our "lax" immigration policies for . Gimme a break".
# ::tokens ["THIS", "IS", "AMAZING", "!", "!", "!", "RT", ":", "CNN", "commentator", "already", "blaming", "our", "\"", "lax", "\"", "immigration", "policies", "for", ".", "Gimme", "a", "break", "\"", "."]
# ::lemmas ["this", "be", "amazing", "!", "!", "!", "RT", ":", "CNN", "commentator", "already", "blame", "our", "\"", "lax", "\"", "immigration", "policy", "for", ".", "Gimme", "a", "break", "\"", "."]
(c12-3 / multi-sentence
       :snt1 (c12-17 / amaze-01
                     :domain (c12-15 / this)
                     :mode expressive)
       :snt2 (c12-14 / say-01
                     :ARG0 (c12-9 / publication
                                  :name (c12-7 / name
                                               :op1 "RT"))
                     :ARG1 (c12-4 / blame-01
                                  :ARG0 (c12-10 / commentator
                                                :mod c12-9
                                                :name (c12-8 / name
                                                             :op1 "CNN")))
                     :ARG1 (c12-16 / policy-01
                                   :ARG0 (c12-0 / we)
                                   :ARG2 (c12-6 / immigrate-01)
                                   :mod (c12-2 / law
                                               :polarity -))
                     :time (c12-5 / already))
       :snt3 (c12-11 / give-01
                     :ARG0 (c12-1 / you)
                     :ARG1 (c12-12 / break-19)
                     :ARG2 (c12-13 / i)
                     :mode imperative))

# ::snt I wonder where that CNN reporter's family immigrated from? There's an instance of lax immigration policy. IDIOT
# ::tokens ["I", "wonder", "where", "that", "CNN", "reporter", "'s", "family", "immigrated", "from", "?", "There", "'s", "an", "instance", "of", "lax", "immigration", "policy", ".", "IDIOT"]
# ::lemmas ["i", "wonder", "where", "that", "CNN", "reporter", "'s", "family", "immigrate", "from", "?", "there", "be", "an", "instance", "of", "lax", "immigration", "policy", ".", "IDIOT"]
(c13-3 / multi-sentence
       :snt1 (c13-1 / wonder-01
                    :ARG0 (c13-8 / i)
                    :ARG1 (c13-2 / location
                                 :source-of (c13-13 / immigrate-01
                                                    :ARG0 (c13-4 / family
                                                                 :ARG1-of (c13-0 / have-org-role-91
                                                                                 :ARG0 (c13-11 / person
                                                                                               :ARG1 (c13-15 / publication
                                                                                                             :name (c13-10 / name
                                                                                                                           :op1 "CNN"))
                                                                                               :ARG3 (c13-12 / report-01)
                                                                                               :ARG0-of c13-0))))))
       :snt2 (c13-5 / instance
                    :mod (c13-6 / policy-01
                                :ARG2 (c13-7 / immigrate-01)
                                :ARG1-of (c13-14 / lax-01)))
       :snt3 (c13-9 / idiot))

# ::snt Sheesh, does CNN *ever* get their facts right?
# ::tokens ["Sheesh", ",", "does", "CNN", "*", "ever", "*", "get", "their", "facts", "right", "?"]
# ::lemmas ["Sheesh", ",", "do", "CNN", "*", "ever", "*", "get", "their", "fact", "right", "?"]
(c14-5 / get-04
       :ARG0 (c14-3 / publication
                    :name (c14-2 / name
                                 :op1 "CNN"))
       :ARG1 (c14-4 / right-06
                    :ARG1 c14-3
                    :ARG2 (c14-0 / fact
                                 :poss c14-3))
       :polarity (c14-7 / amr-unknown)
       :time (c14-1 / ever)
       :mod (c14-6 / sheesh
                   :mode expressive))

# ::snt Not like is renowned for intelligent reporting. Wolf Blitzer is one example of dumb.
# ::tokens ["Not", "like", "is", "renowned", "for", "intelligent", "reporting", ".", "Wolf", "Blitzer", "is", "one", "example", "of", "dumb", "."]
# ::lemmas ["not", "like", "be", "renowne", "for", "intelligent", "reporting", ".", "Wolf", "Blitzer", "be", "one", "example", "of", "dumb", "."]
(c15-0 / multi-sentence
       :snt1 (c15-7 / renown-01
                    :ARG1 (c15-6 / person
                                 :ARG1-of (c15-4 / resemble-01
                                                 :polarity -))
                    :ARG2 (c15-2 / report-01
                                 :ARG0 c15-6
                                 :ARG1-of (c15-3 / intelligent-01)))
       :snt2 (c15-1 / exemplify-01
                    :ARG0 (c15-9 / person
                                 :name (c15-5 / name
                                              :op1 "Wolf"
                                              :op2 "Blitzer"))
                    :ARG1 (c15-8 / dumb)))

# ::snt the nerve of us!
# ::tokens ["the", "nerve", "of", "us", "!"]
# ::lemmas ["the", "nerve", "of", "we", "!"]
(c16-0 / nerve
       :poss (c16-1 / we))

# ::snt "Party of One" is amazing...many of my questions answered.
# ::tokens ["\"", "Party", "of", "One", "\"", "is", "amazing", "...", "many", "of", "my", "questions", "answered", "."]
# ::lemmas ["\"", "Party", "of", "One", "\"", "be", "amazing", "...", "many", "of", "my", "question", "answer", "."]
(c17-8 / amaze-01
       :ARG0 (c17-0 / work-of-art
                    :name (c17-5 / name
                                 :op1 "Party"
                                 :op2 "of"
                                 :op3 "One"))
       :ARG1-of (c17-6 / cause-01
                       :ARG0 (c17-3 / answer-01
                                    :ARG1 (c17-7 / thing
                                                 :ARG1-of (c17-2 / question-01
                                                                 :ARG0 (c17-4 / i))
                                                 :quant (c17-1 / many)))))

# ::snt apparently the death of factual information also occurred today.
# ::tokens ["apparently", "the", "death", "of", "factual", "information", "also", "occurred", "today", "."]
# ::lemmas ["apparently", "the", "death", "of", "factual", "information", "also", "occur", "today", "."]
(c18-3 / die-01
       :ARG1 (c18-2 / information
                    :mod (c18-0 / factual))
       :time (c18-4 / today)
       :mod (c18-5 / apparent)
       :mod (c18-1 / also))

# ::snt Thanks but it took seconds for argument to devolve from citizenship to in my own home.
# ::tokens ["Thanks", "but", "it", "took", "seconds", "for", "argument", "to", "devolve", "from", "citizenship", "to", "in", "my", "own", "home", "."]
# ::lemmas ["thank", "but", "it", "take", "seconds", "for", "argument", "to", "devolve", "from", "citizenship", "to", "in", "my", "own", "home", "."]
(c19-7 / contrast-01
       :ARG1 (c19-11 / thank-01
                     :ARG0 (c19-4 / i)
                     :ARG1 (c19-1 / you))
       :ARG2 (c19-9 / take-10
                    :ARG0 (c19-6 / devolve-02
                                 :ARG1 (c19-12 / argue-01)
                                 :ARG3 (c19-8 / citizenship)
                                 :ARG4 (c19-3 / be-located-at-91
                                              :ARG1 c19-12
                                              :ARG2 (c19-0 / home
                                                           :poss c19-4)))
                    :ARG1 (c19-2 / multiple
                                 :op1 (c19-5 / temporal-quantity
                                             :unit (c19-10 / second)
                                             :quant 1))))

# ::snt . Why are you watching CNN? That's like reading the comments in a newspaper.
# ::tokens [".", "Why", "are", "you", "watching", "CNN", "?", "That", "'s", "like", "reading", "the", "comments", "in", "a", "newspaper", "."]
# ::lemmas [".", "why", "be", "you", "watch", "CNN", "?", "that", "be", "like", "read", "the", "comment", "in", "a", "newspaper", "."]
(c20-2 / multi-sentence
       :snt1 (c20-0 / watch-01
                    :ARG0 (c20-1 / you)
                    :ARG1 (c20-6 / publication
                                 :name (c20-4 / name
                                              :op1 "CNN"))
                    :ARG1-of (c20-8 / cause-01
                                    :ARG0 (c20-11 / amr-unknown)))
       :snt2 (c20-7 / resemble-01
                    :ARG1 (c20-10 / that)
                    :ARG2 (c20-3 / read-01
                                 :ARG1 (c20-9 / comment-01
                                              :medium (c20-5 / newspaper)))))

# ::snt We really should be asking newborns for their papers in the delivery room
# ::tokens ["We", "really", "should", "be", "asking", "newborns", "for", "their", "papers", "in", "the", "delivery", "room"]
# ::lemmas ["we", "really", "should", "be", "ask", "newborn", "for", "their", "paper", "in", "the", "delivery", "room"]
(c21-5 / recommend-01
       :ARG0 (c21-0 / we)
       :ARG1 (c21-8 / ask-02
                    :ARG0 c21-0
                    :ARG1 (c21-4 / paper
                                 :poss (c21-7 / person
                                              :ARG1-of (c21-1 / bear-02)
                                              :ARG2-of c21-8))
                    :location (c21-3 / room
                                     :location-of (c21-6 / deliver-01)))
       :ARG1-of (c21-2 / real-04))

# ::snt facts? We don't need no stinking facts.
# ::tokens ["facts", "?", "We", "do", "n't", "need", "no", "stinking", "facts", "."]
# ::lemmas ["fact", "?", "we", "do", "not", "need", "no", "stink", "fact", "."]
(c22-2 / multi-sentence
       :snt1 (c22-1 / fact
                    :polarity (c22-6 / amr-unknown))
       :snt2 (c22-4 / need-01
                    :ARG0 (c22-0 / we)
                    :ARG1 (c22-3 / fact
                                 :mod (c22-5 / stinking))
                    :polarity -))
