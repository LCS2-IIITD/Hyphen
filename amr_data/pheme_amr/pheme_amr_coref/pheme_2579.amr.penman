# ::snt BREAKING - Germanwings plane crashes in France, up to believed dead
# ::tokens ["BREAKING", "-", "Germanwings", "plane", "crashes", "in", "France", ",", "up", "to", "believed", "dead"]
# ::lemmas ["BREAKING", "-", "Germanwings", "plane", "crash", "in", "France", ",", "up", "to", "believe", "dead"]
(c1-1 / break-01
      :ARG1 (c1-6 / crash-01
                  :ARG1 (c1-4 / plane
                              :poss (c1-5 / company
                                          :name (c1-2 / name
                                                      :op1 "Germanwings")))
                  :location (c1-9 / country
                                  :name (c1-3 / name
                                              :op1 "France"))
                  :ARG0-of (c1-11 / cause-01
                                  :ARG1 (c1-7 / believe-01
                                              :ARG1 (c1-8 / die-01
                                                          :ARG1 (c1-10 / person
                                                                       :quant (c1-0 / up-to
                                                                                    :op1 1)))))))

# ::snt You didn't need a link for that. You could have ended it with ":Not a lot yet."
# ::tokens ["You", "did", "n't", "need", "a", "link", "for", "that", ".", "You", "could", "have", "ended", "it", "with", "\"", ":", "Not", "a", "lot", "yet", ".", "\""]
# ::lemmas ["you", "do", "not", "need", "a", "link", "for", "that", ".", "you", "could", "have", "end", "it", "with", "\"", ":", "not", "a", "lot", "yet", ".", "\""]
(c2-2 / multi-sentence
      :snt1 (c2-6 / need-01
                  :ARG0 (c2-0 / you)
                  :ARG1 (c2-1 / link
                              :purpose (c2-10 / that))
                  :polarity -)
      :snt2 (c2-7 / possible-01
                  :ARG1 (c2-4 / end-01
                              :ARG0 (c2-9 / you)
                              :ARG1 (c2-5 / it)
                              :ARG2 (c2-8 / lot
                                          :time (c2-3 / yet)
                                          :polarity -))))
