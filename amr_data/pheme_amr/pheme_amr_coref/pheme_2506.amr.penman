# ::snt I thought flights are on autopilot, even if co-pilot is unconscious, why did plane go down right away.
# ::tokens ["I", "thought", "flights", "are", "on", "autopilot", ",", "even", "if", "co", "-", "pilot", "is", "unconscious", ",", "why", "did", "plane", "go", "down", "right", "away", "."]
# ::lemmas ["i", "think", "flight", "be", "on", "autopilot", ",", "even", "if", "co", "-", "pilot", "be", "unconscious", ",", "why", "do", "plane", "go", "down", "right", "away", "."]
(c1-9 / think-01
      :ARG0 (c1-3 / i)
      :ARG1 (c1-0 / fly-01
                  :manner (c1-11 / autopilot)
                  :concession (c1-2 / even-if
                                    :op1 (c1-6 / conscious
                                               :domain (c1-4 / person
                                                             :ARG0-of (c1-10 / pilot-01))))
                  :ARG0-of (c1-5 / cause-01
                                 :ARG1 (c1-7 / go-down-27
                                             :ARG1 (c1-1 / plane)
                                             :time (c1-8 / right-away)))))

# ::snt Planes need Onstar !!!
# ::tokens ["Planes", "need", "Onstar", "!", "!", "!"]
# ::lemmas ["plane", "need", "Onstar", "!", "!", "!"]
(c2-0 / need-01
      :ARG0 (c2-1 / plane)
      :ARG1 (c2-3 / product
                  :name (c2-2 / name
                              :op1 "Onstar"))
      :mode expressive)

# ::snt If this is true, it sure makes anyone scare of flying anywhere.
# ::tokens ["If", "this", "is", "true", ",", "it", "sure", "makes", "anyone", "scare", "of", "flying", "anywhere", "."]
# ::lemmas ["if", "this", "be", "true", ",", "it", "sure", "make", "anyone", "scare", "of", "fly", "anywhere", "."]
(c3-0 / have-condition-91
      :ARG1 (c3-2 / make-02
                  :ARG0 (c3-7 / this)
                  :ARG1 (c3-6 / scare-01
                              :ARG0 c3-7
                              :ARG1 (c3-8 / anyone)
                              :ARG2 (c3-1 / fly-01
                                          :ARG2 (c3-4 / anywhere)))
                  :ARG1-of (c3-3 / sure-02))
      :ARG2 (c3-5 / true-01
                  :ARG1 c3-7))

# ::snt Wow, that didn't even cross my mind. It very well may be the case. It's terribly sad all together.
# ::tokens ["Wow", ",", "that", "did", "n't", "even", "cross", "my", "mind", ".", "It", "very", "well", "may", "be", "the", "case", ".", "It", "'s", "terribly", "sad", "all", "together", "."]
# ::lemmas ["wow", ",", "that", "do", "not", "even", "cross", "my", "mind", ".", "it", "very", "well", "may", "be", "the", "case", ".", "it", "be", "terribly", "sad", "all", "together", "."]
(c4-2 / multi-sentence
      :snt1 (c4-9 / cross-02
                  :ARG0 (c4-4 / i)
                  :ARG1 (c4-7 / mind
                              :poss c4-4)
                  :mod (c4-3 / even)
                  :mod (c4-0 / wow
                             :mode expressive)
                  :polarity -)
      :snt2 (c4-8 / possible-01
                  :ARG1 (c4-10 / case-04
                               :ARG1 (c4-11 / it))
                  :mod (c4-5 / well
                             :degree (c4-6 / very)))
      :snt3 (c4-12 / sad-02
                   :ARG1 (c4-1 / it)
                   :degree (c4-13 / terribly)
                   :mod (c4-14 / all-together)))

# ::snt ~ .thgin doog a evah
# ::tokens ["~", ".thgin", "doog", "a", "evah"]
# ::lemmas ["~", ".thgin", "doog", "a", "evah"]
(c5-2 / doog-00
      :ARG0 (c5-1 / person
                  :name (c5-0 / name
                              :op1 "thgin")
                  :ARG1-of c5-2)
      :name (c5-3 / name
                  :op1 "Eva"))

# ::snt ~ olleh.
# ::tokens ["~", "olleh", "."]
# ::lemmas ["~", "olleh", "."]
(c6-0 / say-01
      :ARG0 (c6-3 / i)
      :ARG2 (c6-1 / person
                  :name (c6-2 / name
                              :op1 " olleh")))

# ::snt Theres a critical need for cameras installed onboard monitored by armed guards in forward area of the aircraft. ....
# ::tokens ["There", "s", "a", "critical", "need", "for", "cameras", "installed", "onboard", "monitored", "by", "armed", "guards", "in", "forward", "area", "of", "the", "aircraft", ".", "...."]
# ::lemmas ["there", "s", "a", "critical", "need", "for", "camera", "instal", "onboard", "monitor", "by", "armed", "guard", "in", "forward", "area", "of", "the", "aircraft", ".", "...."]
(c7-5 / need-01
      :ARG1 (c7-9 / camera
                  :ARG1-of (c7-4 / install-01
                                 :ARG2 (c7-2 / onboard))
                  :ARG1-of (c7-1 / monitor-01
                                 :ARG0 (c7-7 / person
                                             :ARG0-of (c7-10 / guard-01)
                                             :ARG1-of (c7-11 / arm-01))
                                 :location (c7-3 / area
                                                 :location (c7-0 / forward)
                                                 :part-of (c7-6 / aircraft))))
      :ARG1-of (c7-8 / critical-02))

# ::snt cdlc cokpit lock code cmes with emrgncy code to force open and it takes minute, unless a person manual lock it
# ::tokens ["cdlc", "cokpit", "lock", "code", "cmes", "with", "emrgncy", "code", "to", "force", "open", "and", "it", "takes", "minute", ",", "unless", "a", "person", "manual", "lock", "it"]
# ::lemmas ["cdlc", "cokpit", "lock", "code", "cme", "with", "emrgncy", "code", "to", "force", "open", "and", "it", "take", "minute", ",", "unless", "a", "person", "manual", "lock", "it"]
(c9-15 / and
       :op1 (c9-0 / have-purpose-91
                  :ARG1 (c9-9 / code
                              :mod (c9-1 / lock-01)
                              :mod (c9-8 / cokpit))
                  :ARG2 (c9-2 / force-01
                              :ARG1 (c9-4 / open-01
                                          :ARG1 (c9-13 / code
                                                       :mod (c9-5 / emr-unknown)))))
       :op2 (c9-14 / take-10
                   :ARG0 c9-2
                   :ARG1 (c9-12 / temporal-quantity
                                :unit (c9-3 / minute)
                                :quant 1))
       :condition (c9-10 / lock-01
                         :ARG0 (c9-7 / person
                                     :mod (c9-11 / manual))
                         :ARG1 (c9-6 / it)
                         :polarity -))

# ::snt how do they know this?
# ::tokens ["how", "do", "they", "know", "this", "?"]
# ::lemmas ["how", "do", "they", "know", "this", "?"]
(c10-1 / know-01
       :ARG0 (c10-0 / they)
       :ARG1 (c10-3 / this)
       :manner (c10-2 / amr-unknown))

# ::snt yes why was the pilot locked out of the cockpit before the crash. Praying for all the families.
# ::tokens ["yes", "why", "was", "the", "pilot", "locked", "out", "of", "the", "cockpit", "before", "the", "crash", ".", "Praying", "for", "all", "the", "families", "."]
# ::lemmas ["yes", "why", "be", "the", "pilot", "lock", "out", "of", "the", "cockpit", "before", "the", "crash", ".", "pray", "for", "all", "the", "family", "."]
(c11-1 / multi-sentence
       :snt1 (c11-0 / lock-01
                    :ARG1 (c11-7 / person
                                 :ARG0-of (c11-11 / pilot-01))
                    :ARG3 (c11-5 / out-06
                                 :ARG1 c11-11
                                 :ARG2 (c11-9 / cockpit))
                    :time (c11-4 / before
                                 :op1 (c11-8 / crash-01))
                    :ARG1-of (c11-10 / cause-01
                                     :ARG0 (c11-12 / amr-unknown)))
       :snt2 (c11-3 / pray-01
                    :ARG1 (c11-2 / family
                                 :mod (c11-6 / all))))

# ::snt say what?
# ::tokens ["say", "what", "?"]
# ::lemmas ["say", "what", "?"]
(c12-0 / say-01
       :ARG0 (c12-1 / you)
       :ARG1 (c12-2 / amr-unknown))

# ::snt wow! It's an all around tragic situation.
# ::tokens ["wow", "!", "It", "'s", "an", "all", "around", "tragic", "situation", "."]
# ::lemmas ["wow", "!", "it", "be", "an", "all", "around", "tragic", "situation", "."]
(c13-1 / multi-sentence
       :snt1 (c13-0 / wow
                    :mode expressive)
       :snt2 (c13-2 / situation
                    :mod (c13-3 / tragic
                                :degree (c13-4 / all-around))))

# ::snt I'm wondering if that means that the second pilot crashed on purpose
# ::tokens ["I", "'m", "wondering", "if", "that", "means", "that", "the", "second", "pilot", "crashed", "on", "purpose"]
# ::lemmas ["i", "be", "wonder", "if", "that", "mean", "that", "the", "second", "pilot", "crash", "on", "purpose"]
(c14-1 / wonder-01
       :ARG0 (c14-4 / i)
       :ARG1 (c14-8 / truth-value
                    :polarity-of (c14-2 / mean-01
                                        :ARG1 (c14-7 / that)
                                        :ARG2 (c14-6 / crash-01
                                                     :ARG1 (c14-5 / person
                                                                  :ARG0-of (c14-9 / pilot-01)
                                                                  :ord (c14-3 / ordinal-entity
                                                                              :value 2))
                                                     :ARG1-of (c14-0 / have-purpose-91)))))
