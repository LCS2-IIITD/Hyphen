# ::snt stop the looting maybe I'll listen!
# ::tokens ["stop", "the", "looting", "maybe", "I", "'ll", "listen", "!"]
# ::lemmas ["stop", "the", "looting", "maybe", "i", "'ll", "listen", "!"]
(c1-3 / possible-01
      :ARG1 (c1-1 / listen-01
                  :ARG0 (c1-2 / i))
      :condition (c1-5 / stop-01
                       :ARG0 (c1-0 / you)
                       :ARG1 (c1-4 / loot-01)
                       :mode imperative))

# ::snt Indeed!
# ::tokens ["Indeed", "!"]
# ::lemmas ["indeed", "!"]
(c2-0 / indeed
      :mode expressive)

# ::snt No weapons on those photos.
# ::tokens ["No", "weapons", "on", "those", "photos", "."]
# ::lemmas ["no", "weapon", "on", "those", "photo", "."]
(c3-0 / weapon
      :location (c3-1 / photo
                      :mod (c3-2 / that))
      :polarity -)

# ::snt PD Chief Jackson wanted2show the video put doubt in ppl's minds, which seems2work w/U.
# ::tokens ["PD", "Chief", "Jackson", "wanted2show", "the", "video", "put", "doubt", "in", "ppl", "'s", "minds", ",", "which", "seems2work", "w", "/", "U."]
# ::lemmas ["PD", "Chief", "Jackson", "wanted2show", "the", "video", "put", "doubt", "in", "ppl", "'s", "mind", ",", "which", "seems2work", "w", "/", "U."]
(c4-1 / want-01
      :ARG0 (c4-10 / person
                   :name (c4-8 / name
                               :op1 "Jackson")
                   :ARG0-of (c4-0 / have-org-role-91
                                  :ARG1 (c4-11 / department
                                               :mod (c4-16 / police))
                                  :ARG2 (c4-12 / chief)))
      :ARG1 (c4-14 / show-01
                   :ARG0 c4-10
                   :ARG1 (c4-4 / put-01
                               :ARG0 (c4-9 / video)
                               :ARG1 (c4-2 / doubt-01)
                               :ARG2 (c4-3 / mind
                                           :poss (c4-15 / person))
                               :ARG1-of (c4-6 / seem-01
                                              :ARG2 (c4-7 / work-01
                                                          :ARG0 c4-10
                                                          :ARG3 (c4-5 / person
                                                                      :ARG0-of (c4-17 / have-rel-role-91
                                                                                      :ARG1 c4-10
                                                                                      :ARG2 (c4-13 / husband))))))))

# ::snt No, it isn't. He could have just shot his leg if he felt threatened to get him down.
# ::tokens ["No", ",", "it", "is", "n't", ".", "He", "could", "have", "just", "shot", "his", "leg", "if", "he", "felt", "threatened", "to", "get", "him", "down", "."]
# ::lemmas ["no", ",", "it", "be", "not", ".", "he", "could", "have", "just", "shoot", "his", "leg", "if", "he", "feel", "threaten", "to", "get", "he", "down", "."]
(c5-3 / multi-sentence
      :snt1 (c5-5 / no)
      :snt2 (c5-0 / have-condition-91
                  :ARG1 (c5-7 / possible-01
                              :ARG1 (c5-10 / shoot-02
                                           :ARG0 (c5-12 / he
                                                        :part (c5-2 / leg
                                                                    :ARG1-of c5-10))
                                           :mod (c5-1 / just)))
                  :ARG2 (c5-4 / feel-01
                              :ARG0 (c5-6 / he
                                          :part c5-2)
                              :ARG1 (c5-11 / threaten-01
                                           :ARG0 c5-6
                                           :ARG1 (c5-9 / get-04
                                                       :ARG0 c5-6
                                                       :ARG1 (c5-8 / down-03
                                                                   :ARG1 c5-6))
                                           :ARG2 c5-6))))

# ::snt Just ask the dead victims of the anti White "knockout game".Ohh wait, you can't. Their dead.
# ::tokens ["Just", "ask", "the", "dead", "victims", "of", "the", "anti", "White", "\"", "knockout", "game\"", ".", "Ohh", "wait", ",", "you", "ca", "n't", ".", "Their", "dead", "."]
# ::lemmas ["just", "ask", "the", "dead", "victim", "of", "the", "anti", "white", "\"", "knockout", "game\"", ".", "Ohh", "wait", ",", "you", "can", "not", ".", "their", "dead", "."]
(c6-4 / multi-sentence
      :snt1 (c6-17 / ask-01
                   :ARG0 (c6-1 / you)
                   :ARG2 (c6-10 / person
                                :ARG1-of (c6-9 / victimize-01
                                               :ARG0 (c6-12 / game
                                                            :topic (c6-15 / knock-out-03)
                                                            :ARG0-of (c6-7 / oppose-01
                                                                           :ARG1 (c6-16 / person
                                                                                        :name (c6-8 / name
                                                                                                    :op1 "White")))))
                                :ARG1-of (c6-11 / die-01))
                   :mod (c6-0 / just)
                   :mode imperative)
      :snt2 (c6-2 / wait-01
                  :ARG1 (c6-13 / you)
                  :mod (c6-3 / oh
                             :mode expressive)
                  :mode imperative)
      :snt3 (c6-6 / possible-01
                  :ARG1 (c6-5 / die-01
                              :ARG1 (c6-14 / they))
                  :polarity -))

# ::snt As of right now, there are conflicting stories.
# ::tokens ["As", "of", "right", "now", ",", "there", "are", "conflicting", "stories", "."]
# ::lemmas ["as", "of", "right", "now", ",", "there", "be", "conflicting", "story", "."]
(c7-3 / story
      :ARG0-of (c7-2 / conflict-01)
      :time (c7-4 / as-of
                  :op1 (c7-0 / now
                             :mod (c7-1 / right))))

# ::snt You made my
# ::tokens ["You", "made", "my"]
# ::lemmas ["you", "make", "my"]
(c8-2 / make-01
      :ARG0 (c8-1 / you)
      :ARG1 (c8-0 / thing
                  :poss (c8-3 / i)))

# ::snt In case you missed this:Mike Brown Law.Requires all state, county, &amp; local police to wear a camera.
# ::tokens ["In", "case", "you", "missed", "this", ":", "Mike", "Brown", "Law", ".", "Requires", "all", "state", ",", "county", ",", "&", "amp", ";", "local", "police", "to", "wear", "a", "camera", "."]
# ::lemmas ["in", "case", "you", "miss", "this", ":", "Mike", "Brown", "Law", ".", "require", "all", "state", ",", "county", ",", "&", "amp", ";", "local", "police", "to", "wear", "a", "camera", "."]
(c9-3 / multi-sentence
      :snt1 (c9-9 / case-04
                  :ARG1 (c9-7 / miss-02
                              :ARG0 (c9-0 / you)
                              :ARG1 (c9-2 / law
                                          :name (c9-5 / name
                                                      :op1 "Mike"
                                                      :op2 "Brown"
                                                      :op3 "Law"))))
      :snt2 (c9-8 / require-01
                  :ARG0 c9-2
                  :ARG1 (c9-1 / wear-01
                              :ARG0 (c9-15 / and
                                           :op1 (c9-13 / state)
                                           :op2 (c9-10 / county)
                                           :op3 (c9-4 / amp)
                                           :mod (c9-6 / all))
                              :ARG1 (c9-12 / camera))
                  :ARG2 (c9-11 / police
                               :ARG1-of (c9-14 / local-02))))

# ::snt Yeah, would never assault a police officer and try to take his gun!
# ::tokens ["Yeah", ",", "would", "never", "assault", "a", "police", "officer", "and", "try", "to", "take", "his", "gun", "!"]
# ::lemmas ["yeah", ",", "would", "never", "assault", "a", "police", "officer", "and", "try", "to", "take", "his", "gun", "!"]
(c10-8 / and
       :op1 (c10-3 / assault-01
                   :ARG1 (c10-1 / officer
                                :mod (c10-4 / police))
                   :polarity -)
       :op2 (c10-7 / try-01
                   :ARG1 (c10-6 / take-01
                                :ARG1 (c10-5 / gun
                                             :poss c10-1))
                   :polarity -)
       :time (c10-2 / ever)
       :mod (c10-0 / yeah
                   :mode expressive))

# ::snt Either way, IF he was assaulted, and IF the man rushed at him again, deadly force justified.
# ::tokens ["Either", "way", ",", "IF", "he", "was", "assaulted", ",", "and", "IF", "the", "man", "rushed", "at", "him", "again", ",", "deadly", "force", "justified", "."]
# ::lemmas ["either", "way", ",", "if", "he", "be", "assault", ",", "and", "if", "the", "man", "rush", "at", "he", "again", ",", "deadly", "force", "justify", "."]
(c11-0 / justify-01
       :ARG1 (c11-3 / force-04
                    :ARG2 (c11-9 / kill-01))
       :condition (c11-10 / and
                          :op1 (c11-6 / assault-01
                                      :ARG1 (c11-1 / he))
                          :op2 (c11-8 / rush-01
                                      :ARG0 (c11-4 / man)
                                      :ARG1 c11-1
                                      :mod (c11-7 / again)))
       :mod (c11-2 / way
                   :mod (c11-5 / either)))

# ::snt Hypothetical scenarios sound good to people like you who have training or expertise.
# ::tokens ["Hypothetical", "scenarios", "sound", "good", "to", "people", "like", "you", "who", "have", "training", "or", "expertise", "."]
# ::lemmas ["hypothetical", "scenario", "sound", "good", "to", "people", "like", "you", "who", "have", "training", "or", "expertise", "."]
(c12-8 / sound-01
       :ARG1 (c12-3 / scenario
                    :mod (c12-0 / hypothetical))
       :ARG2 (c12-7 / good-02)
       :ARG3 (c12-5 / person
                    :ARG1-of (c12-6 / resemble-01
                                    :ARG2 (c12-1 / you))
                    :ARG0-of (c12-10 / have-03
                                     :ARG1 (c12-2 / or
                                                  :op1 (c12-9 / train-01)
                                                  :op2 (c12-4 / expertise)))))

# ::snt Doesn't have to be, someone who is "4' can be a deadly weapon if they become violent.
# ::tokens ["Does", "n't", "have", "to", "be", ",", "someone", "who", "is", "\"", "4", "'", "can", "be", "a", "deadly", "weapon", "if", "they", "become", "violent", "."]
# ::lemmas ["do", "not", "have", "to", "be", ",", "someone", "who", "be", "\"", "4", "'", "can", "be", "a", "deadly", "weapon", "if", "they", "become", "violent", "."]
(c13-3 / obligate-01
       :ARG2 (c13-0 / weapon
                    :ARG0-of (c13-7 / kill-01)
                    :domain (c13-6 / someone
                                   :mod (c13-5 / distance-quantity
                                               :unit (c13-1 / foot)
                                               :quant 4))
                    :condition (c13-2 / become-01
                                      :ARG1 c13-6
                                      :ARG2 (c13-4 / violent)))
       :polarity -)

# ::snt The killer cop didn't know about that incident when he shot Mike Brown to death.
# ::tokens ["The", "killer", "cop", "did", "n't", "know", "about", "that", "incident", "when", "he", "shot", "Mike", "Brown", "to", "death", "."]
# ::lemmas ["the", "killer", "cop", "do", "not", "know", "about", "that", "incident", "when", "he", "shoot", "Mike", "Brown", "to", "death", "."]
(c14-2 / know-01
       :ARG0 (c14-6 / cop
                    :ARG0-of (c14-0 / kill-01))
       :ARG1 (c14-1 / incident
                    :mod (c14-9 / that))
       :time (c14-8 / shoot-02
                    :ARG0 c14-6
                    :ARG1 (c14-4 / person
                                 :name (c14-3 / name
                                              :op1 "Mike"
                                              :op2 "Brown"))
                    :ARG0-of (c14-5 / cause-01
                                    :ARG1 (c14-7 / die-01
                                                 :ARG1 c14-4)))
       :polarity -)

# ::snt Yep!
# ::tokens ["Yep", "!"]
# ::lemmas ["yep", "!"]
(c15-0 / yep
       :mode expressive)

# ::snt I'm so very proud of you America. Every young, senior, veteran, sane non-violent person for justice
# ::tokens ["I", "'m", "so", "very", "proud", "of", "you", "America", ".", "Every", "young", ",", "senior", ",", "veteran", ",", "sane", "non", "-", "violent", "person", "for", "justice"]
# ::lemmas ["i", "be", "so", "very", "proud", "of", "you", "America", ".", "every", "young", ",", "senior", ",", "veteran", ",", "sane", "non", "-", "violent", "person", "for", "justice"]
(c16-3 / multi-sentence
       :snt1 (c16-10 / pride-01
                     :ARG0 (c16-7 / i)
                     :ARG1 (c16-11 / country
                                   :name (c16-8 / name
                                                :op1 "America"))
                     :degree (c16-9 / very
                                    :degree (c16-12 / so)))
       :snt2 (c16-13 / person
                     :mod (c16-5 / every)
                     :mod (c16-1 / young)
                     :mod (c16-6 / senior)
                     :mod (c16-4 / veteran)
                     :mod (c16-2 / sane)
                     :purpose (c16-0 / justice)))

# ::snt You really should not assume.
# ::tokens ["You", "really", "should", "not", "assume", "."]
# ::lemmas ["you", "really", "should", "not", "assume", "."]
(c17-1 / recommend-01
       :ARG1 (c17-2 / assume-02
                    :ARG0 (c17-0 / you)
                    :polarity -)
       :ARG1-of (c17-3 / real-04))

# ::snt Everyone in should be spreading Gene Sharp "How to Start a Revolution" now
# ::tokens ["Everyone", "in", "should", "be", "spreading", "Gene", "Sharp", "\"", "How", "to", "Start", "a", "Revolution", "\"", "now"]
# ::lemmas ["everyone", "in", "should", "be", "spread", "Gene", "Sharp", "\"", "how", "to", "start", "a", "Revolution", "\"", "now"]
(c18-6 / recommend-01
       :ARG1 (c18-7 / spread-01
                    :ARG0 (c18-1 / everyone)
                    :ARG1 (c18-0 / book
                                 :name (c18-4 / name
                                              :op1 "Gene"
                                              :op2 "Sharp")
                                 :topic (c18-8 / thing
                                               :manner-of (c18-2 / start-01
                                                                 :ARG1 (c18-3 / revolution-03))))
                    :time (c18-5 / now)))

# ::snt Ditto this...
# ::tokens ["Ditto", "this", "..."]
# ::lemmas ["ditto", "this", "..."]
(c19-0 / ditto
       :domain (c19-1 / this))
