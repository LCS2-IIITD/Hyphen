# ::snt Seems like the replay of Malaysian plane which hs yet to be traced. If so very dangerous trend
# ::tokens ["Seems", "like", "the", "replay", "of", "Malaysian", "plane", "which", "hs", "yet", "to", "be", "traced", ".", "If", "so", "very", "dangerous", "trend"]
# ::lemmas ["seem", "like", "the", "replay", "of", "Malaysian", "plane", "which", "hs", "yet", "to", "be", "trace", ".", "if", "so", "very", "dangerous", "trend"]
(c1-2 / multi-sentence
      :snt1 (c1-11 / seem-01
                   :ARG1 (c1-7 / replay-01
                               :ARG1 (c1-6 / plane
                                           :mod (c1-8 / country
                                                      :name (c1-4 / name
                                                                  :op1 "Malaysia")))
                               :ARG1-of (c1-12 / trace-02
                                               :ARG1-of (c1-0 / have-11
                                                              :ARG0 (c1-1 / yet)
                                                              :polarity -))))
      :snt2 (c1-13 / have-condition-91
                   :ARG2 (c1-10 / trend
                                :mod (c1-9 / dangerous
                                           :degree (c1-5 / very
                                                         :degree (c1-3 / so))))))

# ::snt hm. kann ich mich auch nicht mit anfreunden.
# ::tokens ["hm", ".", "kann", "ich", "mich", "auch", "nicht", "mit", "anfreunden", "."]
# ::lemmas ["hm", ".", "kann", "ich", "mich", "auch", "nicht", "mit", "anfreunden", "."]
(c2-3 / multi-sentence
      :snt1 (c2-5 / i)
      :snt2 (c2-9 / say-01
                  :ARG1 (c2-10 / amr-unknown)
                  :ARG2 (c2-8 / i))
      :snt3 (c2-0 / have-03
                  :ARG0 (c2-2 / i)
                  :ARG1 (c2-7 / person
                              :ARG0-of (c2-4 / inherit-01))
                  :mod (c2-6 / nigh)
                  :mod (c2-1 / just)))

# ::snt wre auf einer deutschen Pressekonferenz auch nicht passiert, selbst wenn der Name schon auf anderen Wegen herausgekommen wre.
# ::tokens ["wre", "auf", "einer", "deutschen", "Pressekonferenz", "auch", "nicht", "passiert", ",", "selbst", "wenn", "der", "Name", "schon", "auf", "anderen", "Wegen", "herausgekommen", "wre", "."]
# ::lemmas ["wre", "auf", "einer", "deutschen", "Pressekonferenz", "auch", "nicht", "passiert", ",", "selbst", "wenn", "der", "Name", "schon", "auf", "anderen", "Wegen", "herausgekommen", "wre", "."]
(c3-1 / multi-sentence
      :snt1 (c3-4 / pass-04
                  :ARG0 (c3-17 / we)
                  :ARG1 (c3-8 / publication
                              :name (c3-15 / name
                                           :op1 "Pressekonferenz")
                              :mod (c3-5 / deutschen)
                              :mod (c3-14 / einer))
                  :mod (c3-19 / nigh
                              :mod-of c3-4))
      :snt2 (c3-11 / have-concession-91
                   :ARG1 (c3-13 / be-located-at-91
                                :ARG1 (c3-2 / name
                                            :mod (c3-0 / der))
                                :ARG2 (c3-7 / schon
                                            :mod (c3-10 / and
                                                        :op1 (c3-12 / publication
                                                                    :name (c3-3 / name
                                                                                :op1 "Wegen"))
                                                        :op2 (c3-16 / publication
                                                                    :name (c3-20 / name
                                                                                 :op1 "Wegen"))
                                                        :mod (c3-9 / herausgekommen)))
                                :mod (c3-18 / only)
                                :ARG2-of c3-11)
                   :ARG1 c3-8
                   :ARG2 (c3-6 / here)))

# ::snt man muss ihn aber jetzt nicht in jedem zweiten tweet und jetzt auch mit Bild wiederholen...
# ::tokens ["man", "muss", "ihn", "aber", "jetzt", "nicht", "in", "jedem", "zweiten", "tweet", "und", "jetzt", "auch", "mit", "Bild", "wiederholen", "..."]
# ::lemmas ["man", "muss", "ihn", "aber", "jetzt", "nicht", "in", "jedem", "zweiten", "tweet", "und", "jetzt", "auch", "mit", "Bild", "wiederholen", "..."]
(c4-8 / say-01
      :ARG0 (c4-6 / i)
      :ARG1 (c4-11 / and
                   :op1 (c4-0 / jetzt
                              :ARG1 c4-6
                              :mod (c4-7 / nast)
                              :location (c4-9 / tweet
                                              :mod (c4-3 / zweiten)
                                              :mod (c4-10 / jedem))
                              :polarity -)
                   :op2 (c4-2 / jetzt
                              :mod (c4-5 / auch)
                              :mod (c4-1 / wiederholen)
                              :mod c4-7)
                   :location c4-9)
      :ARG2 (c4-4 / man))

# ::snt is he Muslim? Going by number of recent terror activities, we should be told about this.
# ::tokens ["is", "he", "Muslim", "?", "Going", "by", "number", "of", "recent", "terror", "activities", ",", "we", "should", "be", "told", "about", "this", "."]
# ::lemmas ["be", "he", "Muslim", "?", "go", "by", "number", "of", "recent", "terror", "activity", ",", "we", "should", "be", "tell", "about", "this", "."]
(c5-2 / multi-sentence
      :snt1 (c5-8 / religious-group
                  :polarity (c5-12 / amr-unknown)
                  :name (c5-6 / name
                              :op1 "Muslim")
                  :domain (c5-0 / he))
      :snt2 (c5-5 / recommend-01
                  :ARG1 (c5-11 / tell-01
                               :ARG1 (c5-4 / activity-06
                                           :ARG1 (c5-10 / terror-02)
                                           :time (c5-3 / recent))
                               :ARG2 (c5-1 / we))
                  :manner (c5-9 / go-by-17
                                :ARG1 (c5-7 / number))))

# ::snt ist in jeder Zeitung &amp; Ticker
# ::tokens ["ist", "in", "jeder", "Zeitung", "&", "amp", ";", "Ticker"]
# ::lemmas ["ist", "in", "jeder", "Zeitung", "&", "amp", ";", "Ticker"]
(c6-3 / person
      :ARG0-of (c6-0 / have-org-role-91
                     :ARG1 (c6-2 / newspaper
                                 :name (c6-1 / name
                                             :op1 "Jeder"
                                             :op2 "Z Zeitung"))
                     :ARG2 (c6-5 / person
                                 :name (c6-4 / name
                                             :op1 "Ticker"))))

# ::snt Wenn das alles wirklich so ist, wie man derzeit glaubt, htte ich ihm einen Strick gegeben.
# ::tokens ["Wenn", "das", "alles", "wirklich", "so", "ist", ",", "wie", "man", "derzeit", "glaubt", ",", "htte", "ich", "ihm", "einen", "Strick", "gegeben", "."]
# ::lemmas ["Wenn", "das", "alle", "wirklich", "so", "ist", ",", "wie", "man", "derzeit", "glaubt", ",", "htte", "ich", "ihm", "einen", "Strick", "gegeben", "."]
(c7-3 / multi-sentence
      :snt1 (c7-9 / cause-01
                  :ARG0 (c7-14 / amr-unknown)
                  :ARG1 (c7-0 / have-mod-91
                              :ARG1 (c7-5 / alles
                                          :mod (c7-1 / wirklich))
                              :ARG2 (c7-13 / so)))
      :snt2 (c7-8 / cause-01
                  :ARG0 c7-14)
      :ARG1 (c7-10 / glaubt-00
                   :ARG0 (c7-7 / man
                               :ARG1-of (c7-11 / derzeit)))
      :snt3 (c7-2 / have-mod-91
                  :ARG1 (c7-6 / i)
                  :ARG2 (c7-4 / string-entity
                              :mod c7-4
                              :value "Einen"
                              :value "Strick"))
      :ARG1-of (c7-12 / gegeben-00))

# ::snt not all Muslims are terrorist, don't be so ignorant
# ::tokens ["not", "all", "Muslims", "are", "terrorist", ",", "do", "n't", "be", "so", "ignorant"]
# ::lemmas ["not", "all", "Muslims", "be", "terrorist", ",", "do", "not", "be", "so", "ignorant"]
(c8-8 / and
      :op1 (c8-7 / terrorist
                 :domain (c8-4 / person
                               :mod (c8-5 / religious-group
                                          :name (c8-3 / name
                                                      :op1 "Islam"))
                               :mod (c8-1 / all
                                          :polarity -)))
      :op2 (c8-2 / ignorant-02
                 :ARG1 (c8-0 / you)
                 :degree (c8-6 / so)
                 :mode imperative
                 :polarity -))

# ::snt vielleicht psychose. Vielleicht war er berzeugt nicht anders handeln zu knnen. Hilft natrl nicht
# ::tokens ["vielleicht", "psychose", ".", "Vielleicht", "war", "er", "berzeugt", "nicht", "anders", "handeln", "zu", "knnen", ".", "Hilft", "natrl", "nicht"]
# ::lemmas ["vielleicht", "psychose", ".", "vielleicht", "war", "er", "berzeugt", "nicht", "ander", "handeln", "zu", "knnen", ".", "Hilft", "natrl", "nicht"]
(c9-3 / multi-sentence
      :snt1 (c9-9 / psychose
                  :mod (c9-8 / vielleicht))
      :snt2 (c9-1 / war-01
                  :ARG2 (c9-15 / and
                               :op1 (c9-5 / berzeugt-00
                                          :ARG1 (c9-14 / person))
                               :op2 (c9-0 / handeln-00
                                          :ARG1 (c9-4 / person
                                                      :ARG0-of (c9-2 / have-org-role-91
                                                                     :ARG2 c9-15
                                                                     :op1 c9-14
                                                                     :op2 c9-4))))
                  :ARG1-of (c9-6 / instead-of-91
                                 :ARG2 (c9-11 / berzeugt-00
                                              :ARG1 c9-15)))
      :snt3 (c9-7 / nicht
                  :mode expressive)
      :snt4 (c9-10 / nicht
                   :domain (c9-13 / person
                                  :name (c9-12 / name
                                               :op1 "Hilft"
                                               :op2 "Natrl"))
                   :mode expressive))

# ::snt good one.
# ::tokens ["good", "one", "."]
# ::lemmas ["good", "one", "."]
(c10-1 / good-02
       :ARG1 (c10-0 / one))

# ::snt I have followed you once. You are irresponsible.
# ::tokens ["I", "have", "followed", "you", "once", ".", "You", "are", "irresponsible", "."]
# ::lemmas ["i", "have", "follow", "you", "once", ".", "you", "be", "irresponsible", "."]
(c11-2 / multi-sentence
       :snt1 (c11-1 / follow-02
                    :ARG0 (c11-3 / i)
                    :ARG1 (c11-0 / you)
                    :frequency 1)
       :snt2 (c11-4 / responsible-02
                    :ARG1 (c11-5 / you)
                    :polarity -))

# ::snt quite. How disgusting and ignorant.
# ::tokens ["quite", ".", "How", "disgusting", "and", "ignorant", "."]
# ::lemmas ["quite", ".", "how", "disgusting", "and", "ignorant", "."]
(c12-0 / multi-sentence
       :snt1 (c12-2 / quite)
       :snt2 (c12-6 / and
                    :op1 (c12-4 / disgust-01
                                :degree (c12-5 / so))
                    :op2 (c12-3 / ignorant-02
                                :degree (c12-1 / so))))

# ::snt Der Name wurde auf der Pressekonferenz gesagt.
# ::tokens ["Der", "Name", "wurde", "auf", "der", "Pressekonferenz", "gesagt", "."]
# ::lemmas ["Der", "Name", "wurde", "auf", "der", "Pressekonferenz", "gesagt", "."]
(c13-0 / wurde
       :ARG1 (c13-1 / name
                    :mod (c13-2 / der))
       :ARG2 (c13-4 / gesagt-of
                    :ARG1 (c13-3 / government-organization
                                 :name c13-1
                                 :op1 "Pressekonferenz")))

# ::snt Menschen, Angehrige, Freunde ... wie soll man das erklren?
# ::tokens ["Menschen", ",", "Angehrige", ",", "Freunde", "...", "wie", "soll", "man", "das", "erklren", "?"]
# ::lemmas ["Menschen", ",", "Angehrige", ",", "Freunde", "...", "wie", "soll", "man", "das", "erklren", "?"]
(c15-9 / and
       :op1 (c15-4 / person
                   :name (c15-2 / name
                                :op1 "Menschen"))
       :op2 (c15-8 / person
                   :name (c15-3 / name
                                :op1 "Angehrige"))
       :op3 (c15-0 / person
                   :name (c15-5 / name
                                :op1 "Freunde"))
       :op4 (c15-7 / person
                   :name (c15-6 / name
                                :op1 "Wie soll"
                                :op2 "man"
                                :op3 "das"
                                :op4 " erklren")
                   :polarity (c15-1 / amr-unknown)))

# ::snt Ebenfalls. Bin geschockt
# ::tokens ["Ebenfalls", ".", "Bin", "geschockt"]
# ::lemmas ["Ebenfalls", ".", "Bin", "geschockt"]
(c16-0 / multi-sentence
       :snt1 (c16-1 / event
                    :name (c16-2 / name
                                 :op1 "Ebenfalls"))
       :snt2 (c16-4 / person
                    :name (c16-3 / name
                                 :op1 "Bin"
                                 :op2 "Geschockt")))

# ::snt muss man wohl etwas relativieren.
# ::tokens ["muss", "man", "wohl", "etwas", "relativieren", "."]
# ::lemmas ["muss", "man", "wohl", "etwa", "relativieren", "."]
(c17-6 / and
       :op1 (c17-4 / dismiss-01
                   :ARG0 (c17-2 / i)
                   :ARG1 (c17-1 / man))
       :op2 (c17-0 / dismiss-01
                   :ARG0 c17-2
                   :ARG1 (c17-3 / person
                                :ARG2 (c17-5 / relativieren))))

# ::snt . now I will unfollow. delete this tweet immediately.
# ::tokens [".", "now", "I", "will", "unfollow", ".", "delete", "this", "tweet", "immediately", "."]
# ::lemmas [".", "now", "i", "will", "unfollow", ".", "delete", "this", "tweet", "immediately", "."]
(c18-1 / multi-sentence
       :snt1 (c18-2 / unfollow-01
                    :ARG0 (c18-3 / i)
                    :time (c18-4 / now))
       :snt2 (c18-6 / delete-01
                    :ARG0 (c18-0 / you)
                    :ARG1 (c18-9 / thing
                                 :ARG1-of (c18-8 / tweet-01
                                                 :ARG0 c18-0)
                                 :mod (c18-5 / this))
                    :time (c18-7 / immediate)
                    :mode imperative))

# ::snt von mir mit Sicherheit auch
# ::tokens ["von", "mir", "mit", "Sicherheit", "auch"]
# ::lemmas ["von", "mir", "mit", "Sicherheit", "auch"]
(c19-1 / amr-unintelligible
       :mod (c19-0 / auch)
       :value "von mir mit Sicherheit")

# ::snt stimmt, aber das eine hat nichts mit dem anderen zu tun
# ::tokens ["stimmt", ",", "aber", "das", "eine", "hat", "nichts", "mit", "dem", "anderen", "zu", "tun"]
# ::lemmas ["stimmt", ",", "aber", "das", "eine", "hat", "nicht", "mit", "dem", "anderen", "zu", "tun"]
(c20-6 / contrast-01
       :ARG1 (c20-0 / have-polarity-91
                    :ARG2 -)
       :ARG2 (c20-8 / hat-01
                    :ARG1 (c20-3 / eine)
                    :ARG2 (c20-4 / nichts)
                    :manner (c20-7 / and
                                   :op1 (c20-5 / dem)
                                   :op2 (c20-2 / et-cetera))
                    :mod (c20-1 / zu)))

# ::snt I know that. Dont say the obvious
# ::tokens ["I", "know", "that", ".", "Do", "nt", "say", "the", "obvious"]
# ::lemmas ["i", "know", "that", ".", "do", "nt", "say", "the", "obvious"]
(c21-1 / multi-sentence
       :snt1 (c21-4 / know-01
                    :ARG0 (c21-3 / i)
                    :ARG1 (c21-7 / that))
       :snt2 (c21-6 / say-01
                    :ARG0 (c21-0 / you)
                    :ARG1 (c21-5 / thing
                                 :ARG1-of (c21-2 / obvious-01))
                    :polarity -
                    :mode imperative))

# ::snt auch erst mal gemutet.
# ::tokens ["auch", "erst", "mal", "gemutet", "."]
# ::lemmas ["auch", "erst", "mal", "gemutet", "."]
(c22-0 / erst-01
       :ARG1 (c22-1 / mal)
       :mod (c22-2 / erst))

# ::snt Conditions of working in low coast company?
# ::tokens ["Conditions", "of", "working", "in", "low", "coast", "company", "?"]
# ::lemmas ["condition", "of", "work", "in", "low", "coast", "company", "?"]
(c23-3 / condition
       :polarity (c23-5 / amr-unknown)
       :domain (c23-0 / work-01
                      :ARG2 (c23-2 / company
                                   :location (c23-4 / country-region
                                                    :name (c23-1 / name
                                                                 :op1 "Low"
                                                                 :op2 "Coast")))))
