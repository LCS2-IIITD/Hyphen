# ::snt Precisely. Only pictures and names of heroes like Cpl. Cirillo and Kevin Vickers should be used.
# ::tokens ["Precisely", ".", "Only", "pictures", "and", "names", "of", "heroes", "like", "Cpl", ".", "Cirillo", "and", "Kevin", "Vickers", "should", "be", "used", "."]
# ::lemmas ["precisely", ".", "only", "picture", "and", "name", "of", "hero", "like", "Cpl", ".", "Cirillo", "and", "Kevin", "Vickers", "should", "be", "use", "."]
(c1-1 / multi-sentence
      :snt1 (c1-8 / precise)
      :snt2 (c1-9 / recommend-01
                  :ARG1 (c1-2 / use-01
                              :ARG1 (c1-13 / and
                                           :op1 (c1-12 / picture
                                                       :topic (c1-0 / hero
                                                                    :example (c1-5 / and
                                                                                   :op1 (c1-3 / person
                                                                                              :name (c1-6 / name
                                                                                                          :op1 "Cpl."
                                                                                                          :op2 "Cirillo"))
                                                                                   :op2 (c1-11 / person
                                                                                               :name (c1-7 / name
                                                                                                           :op1 "Kevin"
                                                                                                           :op2 "Vickers")))))
                                           :op2 (c1-10 / name
                                                       :poss c1-0)
                                           :mod (c1-4 / only)))))

# ::snt thats a good looking guy
# ::tokens ["that", "s", "a", "good", "looking", "guy"]
# ::lemmas ["that", "s", "a", "good", "look", "guy"]
(c2-3 / guy
      :ARG0-of (c2-1 / look-02
                     :ARG1 (c2-2 / good-02))
      :domain (c2-0 / that))

# ::snt So awful...
# ::tokens ["So", "awful", "..."]
# ::lemmas ["so", "awful", "..."]
(c3-1 / awful
      :degree (c3-0 / so))

# ::snt agreed. This boy was on guard for us...Our turn for him now. Do the right thing Herald!
# ::tokens ["agreed", ".", "This", "boy", "was", "on", "guard", "for", "us", "...", "Our", "turn", "for", "him", "now", ".", "Do", "the", "right", "thing", "Herald", "!"]
# ::lemmas ["agree", ".", "this", "boy", "be", "on", "guard", "for", "we", "...", "our", "turn", "for", "he", "now", ".", "do", "the", "right", "thing", "Herald", "!"]
(c4-2 / multi-sentence
      :snt1 (c4-15 / agree-01)
      :snt2 (c4-10 / guard-01
                   :ARG0 (c4-3 / boy
                               :mod (c4-14 / this))
                   :ARG1 (c4-1 / we))
      :snt3 (c4-12 / turn-14
                   :ARG0 (c4-4 / we)
                   :beneficiary (c4-0 / he)
                   :time (c4-5 / now))
      :snt4 (c4-13 / say-01
                   :ARG1 (c4-8 / do-02
                               :ARG0 (c4-7 / person
                                           :name (c4-6 / name
                                                       :op1 "Herald"))
                               :ARG1 (c4-9 / thing
                                           :ARG1-of (c4-11 / right-02))
                               :mode imperative)
                   :ARG2 c4-7))

# ::snt .. on to a better place ...
# ::tokens ["..", "on", "to", "a", "better", "place", "..."]
# ::lemmas ["..", "on", "to", "a", "well", "place", "..."]
(c5-2 / on-01
      :ARG2 (c5-3 / place
                  :ARG1-of (c5-0 / have-degree-91
                                 :ARG2 (c5-4 / good-02
                                             :ARG1 c5-3)
                                 :ARG3 (c5-1 / more))))

# ::snt condolences to the family tonight
# ::tokens ["condolences", "to", "the", "family", "tonight"]
# ::lemmas ["condolence", "to", "the", "family", "tonight"]
(c6-3 / condolence
      :beneficiary (c6-0 / family)
      :time (c6-2 / date-entity
                  :dayperiod (c6-1 / night)
                  :mod (c6-4 / today)))

# ::snt that's how it's done. Please no resuscitation attempts or shooter pics tomorrow. Lead by example.
# ::tokens ["that", "'s", "how", "it", "'s", "done", ".", "Please", "no", "resuscitation", "attempts", "or", "shooter", "pics", "tomorrow", ".", "Lead", "by", "example", "."]
# ::lemmas ["that", "be", "how", "it", "be", "do", ".", "please", "no", "resuscitation", "attempt", "or", "shooter", "pic", "tomorrow", ".", "lead", "by", "example", "."]
(c7-1 / multi-sentence
      :snt1 (c7-6 / do-02
                  :ARG1 (c7-4 / it)
                  :manner (c7-10 / that))
      :snt2 (c7-2 / or
                  :op1 (c7-12 / attempt-01
                              :ARG1 (c7-7 / resuscitate-01)
                              :polarity -)
                  :op2 (c7-5 / pic
                             :topic (c7-11 / person
                                           :ARG0-of (c7-9 / shoot-02)))
                  :time (c7-8 / tomorrow)
                  :polite +)
      :snt3 (c7-0 / lead-02
                  :ARG0 (c7-3 / exemplify-01)))

# ::snt So full of life. It's all so damn senseless.
# ::tokens ["So", "full", "of", "life", ".", "It", "'s", "all", "so", "damn", "senseless", "."]
# ::lemmas ["so", "full", "of", "life", ".", "it", "be", "all", "so", "damn", "senseless", "."]
(c8-1 / multi-sentence
      :snt1 (c8-0 / fill-01
                  :ARG2 (c8-2 / life)
                  :degree (c8-7 / so))
      :snt2 (c8-4 / sense-02
                  :ARG1 (c8-5 / it
                              :mod (c8-8 / all))
                  :mod (c8-6 / damn
                             :degree (c8-3 / so))
                  :polarity -))

# ::snt poor guy. Rest in peace guy.
# ::tokens ["poor", "guy", ".", "Rest", "in", "peace", "guy", "."]
# ::lemmas ["poor", "guy", ".", "rest", "in", "peace", "guy", "."]
(c9-0 / multi-sentence
      :snt1 (c9-4 / guy
                  :mod (c9-1 / poor))
      :snt2 (c9-5 / say-01
                  :ARG1 (c9-2 / rest-01
                              :manner (c9-6 / peace))
                  :ARG2 (c9-3 / guy)))
