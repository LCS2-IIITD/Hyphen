# ::snt And did the killing in Paris? Conspiriologist much! LOL
# ::tokens ["And", "did", "the", "killing", "in", "Paris", "?", "Conspiriologist", "much", "!", "LOL"]
# ::lemmas ["and", "do", "the", "killing", "in", "Paris", "?", "conspiriologist", "much", "!", "LOL"]
(c1-1 / multi-sentence
      :snt1 (c1-11 / and
                   :op2 (c1-10 / kill-01
                               :location (c1-8 / city
                                               :name (c1-4 / name
                                                           :op1 "Paris"))
                               :polarity (c1-2 / amr-unknown))
                   :polarity (c1-5 / amr-unknown))
      :snt2 (c1-7 / conspiriologist
                  :quant (c1-6 / much
                               :mode expressive)
                  :ARG2-of (c1-0 / laugh-01
                                 :ARG0 (c1-3 / i)
                                 :manner (c1-9 / loud)
                                 :mode expressive)))

# ::snt Still cant answer a question, nutjob.
# ::tokens ["Still", "ca", "nt", "answer", "a", "question", ",", "nutjob", "."]
# ::lemmas ["still", "can", "not", "answer", "a", "question", ",", "nutjob", "."]
(c2-5 / say-01
      :ARG0 (c2-2 / i)
      :ARG1 (c2-4 / possible-01
                  :ARG1 (c2-7 / answer-01
                              :ARG0 c2-2
                              :ARG1 (c2-6 / thing
                                          :ARG1-of (c2-1 / question-01))
                              :mod (c2-0 / still))
                  :polarity -)
      :ARG2 (c2-3 / nutjob))

# ::snt why you not retweeting my original Tommy u cheeky git I'll let u off cos ur a ledge
# ::tokens ["why", "you", "not", "retweeting", "my", "original", "Tommy", "u", "cheeky", "git", "I", "'ll", "let", "u", "off", "cos", "ur", "a", "ledge"]
# ::lemmas ["why", "you", "not", "retweete", "my", "original", "Tommy", "u", "cheeky", "git", "i", "'ll", "let", "u", "off", "cos", "ur", "a", "ledge"]
(c3-8 / cause-01
      :ARG0 (c3-13 / amr-unknown)
      :ARG1 (c3-7 / retweet-01
                  :ARG0 (c3-0 / you
                              :mod (c3-9 / git
                                         :mod (c3-10 / cheeky)
                                         :mode expressive))
                  :ARG1 (c3-6 / person
                              :name (c3-5 / name
                                          :op1 "Tommy"
                                          :op2 "Robinson")
                              :mod (c3-3 / original)
                              :poss (c3-4 / i))
                  :polarity -)
      :ARG1 (c3-1 / let-01
                  :ARG0 c3-4
                  :ARG1 (c3-2 / off)
                  :ARG1-of (c3-12 / cause-01
                                  :ARG0 (c3-11 / ledge
                                               :poss c3-0))))

# ::snt we need to meet mate im down south in Sutton with our boys we need to do this cuz
# ::tokens ["we", "need", "to", "meet", "mate", "i", "m", "down", "south", "in", "Sutton", "with", "our", "boys", "we", "need", "to", "do", "this", "cuz"]
# ::lemmas ["we", "need", "to", "meet", "mate", "i", "m", "down", "south", "in", "Sutton", "with", "our", "boy", "we", "need", "to", "do", "this", "cuz"]
(c4-4 / need-01
      :ARG0 (c4-1 / we)
      :ARG1 (c4-2 / meet-03
                  :ARG0 c4-1
                  :ARG1 (c4-6 / person
                              :ARG0-of (c4-0 / have-rel-role-91
                                             :ARG1 c4-1
                                             :ARG2 (c4-7 / mate)))
                  :location (c4-11 / south
                                   :part-of (c4-8 / city
                                                  :name (c4-5 / name
                                                              :op1 "S Sutton")))
                  :accompanier (c4-12 / person
                                      :ARG0-of (c4-13 / have-rel-role-91
                                                      :ARG1 c4-1
                                                      :ARG2 (c4-3 / boy))))
      :ARG1-of (c4-9 / cause-01
                     :ARG0 (c4-10 / need-01
                                  :ARG0 c4-1
                                  :ARG1 c4-2)))

# ::snt Charlie Hebdo mocked CHristians. Number killed- . Charlie Hebdo mocked all politicians.Number killed .
# ::tokens ["Charlie", "Hebdo", "mocked", "CHristians", ".", "Number", "killed-", ".", "Charlie", "Hebdo", "mocked", "all", "politicians", ".", "Number", "killed", "."]
# ::lemmas ["Charlie", "Hebdo", "mock", "CHristians", ".", "number", "killed-", ".", "Charlie", "Hebdo", "mock", "all", "politician", ".", "number", "kill", "."]
(c5-1 / multi-sentence
      :snt1 (c5-6 / mock-01
                  :ARG0 (c5-0 / magazine
                              :name (c5-3 / name
                                          :op1 "Charlie"
                                          :op2 " Hebdo"))
                  :ARG1 (c5-5 / person
                              :mod (c5-7 / religious-group
                                         :name (c5-4 / name
                                                     :op1 "Christian"))))
      :snt2 (c5-11 / kill-01
                   :ARG1 (c5-8 / number))
      :snt3 (c5-9 / mock-01
                  :ARG0 c5-0
                  :ARG1 (c5-12 / politician
                               :mod (c5-13 / all)))
      :snt4 (c5-2 / kill-01
                  :ARG1 (c5-10 / number)))

# ::snt Still cant answer a simple question you wanker.
# ::tokens ["Still", "ca", "nt", "answer", "a", "simple", "question", "you", "wanker", "."]
# ::lemmas ["still", "can", "not", "answer", "a", "simple", "question", "you", "wanker", "."]
(c6-7 / say-01
      :ARG0 (c6-5 / i)
      :ARG1 (c6-6 / possible-01
                  :ARG1 (c6-9 / answer-01
                              :ARG1 (c6-8 / thing
                                          :ARG1-of (c6-4 / question-01)
                                          :ARG1-of (c6-3 / simple-02)))
                  :mod (c6-2 / still)
                  :polarity -)
      :ARG2 (c6-0 / you
                  :mod (c6-1 / wanker)))

# ::snt Not too much...
# ::tokens ["Not", "too", "much", "..."]
# ::lemmas ["not", "too", "much", "..."]
(c7-0 / have-quant-91
      :ARG2 (c7-2 / much)
      :ARG3 (c7-1 / too)
      :polarity -)

# ::snt You deny Israel has done false flags on US?
# ::tokens ["You", "deny", "Israel", "has", "done", "false", "flags", "on", "US", "?"]
# ::lemmas ["you", "deny", "Israel", "have", "do", "false", "flag", "on", "US", "?"]
(c8-6 / deny-01
      :ARG0 (c8-0 / you)
      :ARG1 (c8-1 / do-02
                  :ARG0 (c8-7 / country
                              :name (c8-4 / name
                                          :op1 "Israel"))
                  :ARG1 (c8-2 / flag
                              :mod (c8-3 / false))
                  :ARG2 (c8-8 / country
                              :name (c8-5 / name
                                          :op1 "US")))
      :polarity (c8-9 / amr-unknown))

# ::snt Can you answer my question first?
# ::tokens ["Can", "you", "answer", "my", "question", "first", "?"]
# ::lemmas ["can", "you", "answer", "my", "question", "first", "?"]
(c9-5 / possible-01
      :polarity (c9-6 / amr-unknown)
      :ARG1 (c9-3 / answer-01
                  :ARG0 (c9-0 / you)
                  :ARG1 (c9-2 / question-01
                              :ARG0 (c9-4 / i))
                  :ord (c9-1 / ordinal-entity
                             :value 1)))

# ::snt No I asked you first. If you cant then are a conspiriologist full of it.
# ::tokens ["No", "I", "asked", "you", "first", ".", "If", "you", "ca", "nt", "then", "are", "a", "conspiriologist", "full", "of", "it", "."]
# ::lemmas ["no", "i", "ask", "you", "first", ".", "if", "you", "can", "not", "then", "are", "a", "conspiriologist", "full", "of", "it", "."]
(c10-3 / multi-sentence
       :snt1 (c10-10 / ask-01
                     :ARG0 (c10-5 / i)
                     :ARG2 (c10-1 / you)
                     :ord (c10-4 / ordinal-entity
                                 :value 1))
       :snt2 (c10-0 / have-condition-91
                    :ARG1 (c10-7 / conspire-01
                                 :ARG0 (c10-9 / you)
                                 :ARG1-of (c10-2 / fill-01
                                                 :ARG2 (c10-8 / it)))
                    :ARG2 (c10-6 / possible-01
                                 :ARG1 c10-9
                                 :polarity -)))

# ::snt I deny the existence of ur brain, dhimmi
# ::tokens ["I", "deny", "the", "existence", "of", "ur", "brain", ",", "dhimmi"]
# ::lemmas ["i", "deny", "the", "existence", "of", "ur", "brain", ",", "dhimmi"]
(c11-6 / say-01
       :ARG1 (c11-5 / deny-01
                    :ARG0 (c11-2 / i)
                    :ARG1 (c11-1 / exist-01
                                 :ARG1 (c11-0 / brain
                                              :part-of (c11-4 / person
                                                              :name (c11-3 / name
                                                                           :op1 "Dhimmi")
                                                              :ARG2-of c11-6)))))

# ::snt Israel may have been involved or Russia or French themselves.
# ::tokens ["Israel", "may", "have", "been", "involved", "or", "Russia", "or", "French", "themselves", "."]
# ::lemmas ["Israel", "may", "have", "be", "involve", "or", "Russia", "or", "French", "themselves", "."]
(c13-4 / possible-01
       :ARG1 (c13-1 / involve-01
                    :ARG1 (c13-0 / or
                                 :op1 (c13-6 / country
                                             :name (c13-2 / name
                                                          :op1 "Israel"))
                                 :op2 (c13-5 / country
                                             :name (c13-3 / name
                                                          :op1 "Russia"))
                                 :op3 (c13-8 / country
                                             :name (c13-7 / name
                                                          :op1 "France")))))

# ::snt &gt;&gt;&gt; &lt;&lt;&lt; THESE JOURNOS SAY IT IS WESTERNERS FAULT
# ::tokens ["&", "gt;&gt;&gt", ";", "&", "lt;&lt;&lt", ";", "THESE", "JOURNOS", "SAY", "IT", "IS", "WESTERNERS", "FAULT"]
# ::lemmas ["&", "gt;&gt;&gt", ";", "&", "lt;&lt;&lt", ";", "these", "journos", "say", "it", "be", "westerner", "fault"]
(c14-4 / say-01
       :ARG0 (c14-0 / jury
                    :mod (c14-5 / this))
       :ARG1 (c14-2 / fault-01
                    :ARG1 (c14-1 / world-region
                                 :name (c14-3 / name
                                              :op1 "West"))))

# ::snt And you know this how? Through Fox News?
# ::tokens ["And", "you", "know", "this", "how", "?", "Through", "Fox", "News", "?"]
# ::lemmas ["and", "you", "know", "this", "how", "?", "through", "Fox", "News", "?"]
(c15-7 / and
       :op2 (c15-3 / know-01
                   :ARG0 (c15-0 / you)
                   :ARG1 (c15-6 / this)
                   :manner (c15-2 / amr-unknown)
                   :medium (c15-1 / broadcast-program
                                  :name (c15-4 / name
                                               :op1 "Fox"
                                               :op2 "News")
                                  :polarity (c15-5 / amr-unknown))))

# ::snt You are caught in a lie. You do know of Israeli false flags. Liar Liar pants on fire.
# ::tokens ["You", "are", "caught", "in", "a", "lie", ".", "You", "do", "know", "of", "Israeli", "false", "flags", ".", "Liar", "Liar", "pants", "on", "fire", "."]
# ::lemmas ["you", "be", "catch", "in", "a", "lie", ".", "you", "do", "know", "of", "Israeli", "false", "flag", ".", "Liar", "Liar", "pant", "on", "fire", "."]
(c16-2 / multi-sentence
       :snt1 (c16-9 / catch-02
                    :ARG1 (c16-0 / you)
                    :ARG2 (c16-1 / lie-08
                                 :ARG0 c16-0))
       :snt2 (c16-12 / know-01
                     :ARG0 (c16-11 / you)
                     :ARG1 (c16-3 / flag
                                  :mod (c16-5 / false)
                                  :mod (c16-8 / country
                                              :name (c16-6 / name
                                                           :op1 "Israel"))))
       :snt3 (c16-4 / on-fire-08
                    :ARG1 (c16-7 / pants
                                 :poss (c16-13 / person
                                               :ARG0-of (c16-10 / lie-08)))))

# ::snt they weren't killed mocking Islam. It was incite discord betw the French &amp; muslim immigrants drive recruits
# ::tokens ["they", "were", "n't", "killed", "mocking", "Islam", ".", "It", "was", "incite", "discord", "betw", "the", "French", "&", "amp", ";", "muslim", "immigrants", "drive", "recruits"]
# ::lemmas ["they", "be", "not", "kill", "mock", "Islam", ".", "it", "be", "incite", "discord", "betw", "the", "French", "&", "amp", ";", "muslim", "immigrant", "drive", "recruit"]
(c17-2 / multi-sentence
       :snt1 (c17-5 / kill-01
                    :ARG1 (c17-15 / they)
                    :manner (c17-8 / mock-01
                                   :ARG1 (c17-9 / religious-group
                                                :name (c17-6 / name
                                                             :op1 "Islam")))
                    :polarity -)
       :snt2 (c17-4 / incite-01
                    :ARG0 (c17-11 / it)
                    :ARG1 (c17-10 / discord)
                    :ARG1-of (c17-12 / cause-01
                                     :ARG0 (c17-0 / drive-02
                                                  :ARG0 (c17-13 / person
                                                                :ARG0-of (c17-1 / immigrate-01
                                                                                :ARG2 (c17-7 / religious-group
                                                                                             :name (c17-14 / name
                                                                                                           :op1 "Muslim"))))
                                                  :ARG1 (c17-16 / person
                                                                :ARG1-of (c17-3 / recruit-01))))))

# ::snt Do you call for stopping nonWhite immigration to the US, Europe, Australia, Canada, NZ?
# ::tokens ["Do", "you", "call", "for", "stopping", "nonWhite", "immigration", "to", "the", "US", ",", "Europe", ",", "Australia", ",", "Canada", ",", "NZ", "?"]
# ::lemmas ["do", "you", "call", "for", "stop", "nonwhite", "immigration", "to", "the", "US", ",", "Europe", ",", "Australia", ",", "Canada", ",", "NZ", "?"]
(c18-11 / call-03
        :ARG0 (c18-0 / you)
        :ARG1 (c18-15 / stop-01
                      :ARG1 (c18-6 / immigrate-01
                                   :ARG0 (c18-9 / person
                                                :ARG1-of (c18-1 / white-02
                                                                :polarity -))
                                   :ARG2 (c18-16 / and
                                                 :op1 (c18-10 / country
                                                              :name (c18-7 / name
                                                                           :op1 "US"))
                                                 :op2 (c18-14 / continent
                                                              :name (c18-8 / name
                                                                           :op1 "Europe"))
                                                 :op3 (c18-17 / country
                                                              :name (c18-12 / name
                                                                            :op1 "Australia"))
                                                 :op4 (c18-2 / country
                                                             :name (c18-13 / name
                                                                           :op1 "Canada"))
                                                 :op5 (c18-3 / country
                                                             :name (c18-4 / name
                                                                          :op1 "NZ")))))
        :polarity (c18-5 / amr-unknown))

# ::snt LOL, you are full of shit. You can go now.
# ::tokens ["LOL", ",", "you", "are", "full", "of", "shit", ".", "You", "can", "go", "now", "."]
# ::lemmas ["LOL", ",", "you", "be", "full", "of", "shit", ".", "you", "can", "go", "now", "."]
(c19-2 / multi-sentence
       :snt1 (c19-1 / fill-01
                    :ARG1 (c19-0 / you)
                    :ARG2 (c19-8 / shit)
                    :ARG2-of (c19-3 / laugh-01
                                    :manner (c19-7 / loud)
                                    :mode expressive))
       :snt2 (c19-5 / possible-01
                    :ARG1 (c19-6 / go-02
                                 :ARG0 (c19-9 / you)
                                 :time (c19-4 / now))))

# ::snt Thank you.
# ::tokens ["Thank", "you", "."]
# ::lemmas ["thank", "you", "."]
(c20-1 / thank-01
       :ARG0 (c20-2 / i)
       :ARG1 (c20-0 / you))

# ::snt Christian nutjob? Me thinks so.
# ::tokens ["Christian", "nutjob", "?", "Me", "thinks", "so", "."]
# ::lemmas ["Christian", "nutjob", "?", "i", "think", "so", "."]
(c21-0 / multi-sentence
       :snt1 (c21-2 / nutjob
                    :polarity (c21-7 / amr-unknown)
                    :mod (c21-4 / religious-group
                                :name (c21-3 / name
                                             :op1 "Christian")))
       :snt2 (c21-6 / think-01
                    :ARG0 (c21-1 / i)
                    :ARG1 (c21-5 / so)))

# ::snt You had already indicated you wanted to stop the discussion. Now you pretend you didn't.
# ::tokens ["You", "had", "already", "indicated", "you", "wanted", "to", "stop", "the", "discussion", ".", "Now", "you", "pretend", "you", "did", "n't", "."]
# ::lemmas ["you", "have", "already", "indicate", "you", "want", "to", "stop", "the", "discussion", ".", "now", "you", "pretend", "you", "do", "not", "."]
(c22-2 / multi-sentence
       :snt1 (c22-3 / indicate-01
                    :ARG0 (c22-1 / you)
                    :ARG1 (c22-0 / want-01
                                 :ARG0 c22-1
                                 :ARG1 (c22-9 / stop-01
                                              :ARG0 c22-1
                                              :ARG1 (c22-7 / discuss-01)))
                    :time (c22-10 / already))
       :snt2 (c22-6 / pretend-01
                    :ARG0 (c22-8 / you)
                    :ARG1 (c22-4 / want-01
                                 :ARG0 c22-8
                                 :ARG1 c22-9
                                 :polarity -)
                    :time (c22-5 / now)))

# ::snt You go first. If you claim there is no documented case of an Israeli false flag, you are ignoring known cases.
# ::tokens ["You", "go", "first", ".", "If", "you", "claim", "there", "is", "no", "documented", "case", "of", "an", "Israeli", "false", "flag", ",", "you", "are", "ignoring", "known", "cases", "."]
# ::lemmas ["you", "go", "first", ".", "if", "you", "claim", "there", "be", "no", "document", "case", "of", "an", "Israeli", "false", "flag", ",", "you", "be", "ignore", "know", "case", "."]
(c23-2 / multi-sentence
       :snt1 (c23-9 / go-01
                    :ARG1 (c23-0 / you)
                    :ord (c23-3 / ordinal-entity
                                :value 1))
       :snt2 (c23-4 / ignore-01
                    :ARG0 (c23-11 / you)
                    :ARG1 (c23-8 / case-04
                                 :ARG1-of (c23-13 / know-01))
                    :condition (c23-7 / claim-01
                                      :ARG0 c23-11
                                      :ARG1 (c23-12 / case-04
                                                    :ARG1 (c23-1 / flag
                                                                 :mod (c23-5 / false)
                                                                 :mod (c23-14 / country
                                                                              :name (c23-6 / name
                                                                                           :op1 "Israel")))
                                                    :ARG1-of (c23-10 / document-01)
                                                    :polarity -))))

# ::snt Israel is known to do false flags against West.
# ::tokens ["Israel", "is", "known", "to", "do", "false", "flags", "against", "West", "."]
# ::lemmas ["Israel", "be", "know", "to", "do", "false", "flag", "against", "West", "."]
(c24-7 / know-01
       :ARG1 (c24-5 / do-02
                    :ARG0 (c24-6 / country
                                 :name (c24-3 / name
                                              :op1 "Israel"))
                    :ARG1 (c24-1 / flag
                                 :mod (c24-2 / false))
                    :ARG2 (c24-0 / world-region
                                 :name (c24-4 / name
                                              :op1 "West"))))
