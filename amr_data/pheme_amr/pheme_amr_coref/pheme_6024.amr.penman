# ::snt Je disais quoi ? Smh.. RT ": Hi this is the photo of our journalist please credit him at least."
# ::tokens ["Je", "disais", "quoi", "?", "Smh", "..", "RT", "\"", ":", "Hi", "this", "is", "the", "photo", "of", "our", "journalist", "please", "credit", "him", "at", "least", ".", "\""]
# ::lemmas ["Je", "disais", "quoi", "?", "Smh", "..", "RT", "\"", ":", "hi", "this", "be", "the", "photo", "of", "our", "journalist", "please", "credit", "he", "at", "least", ".", "\""]
(c1-4 / multi-sentence
      :snt1 (c1-5 / et-cetera
                  :polarity (c1-13 / amr-unknown)
                  :mod (c1-8 / voila))
      :snt2 (c1-12 / say-01
                   :ARG0 (c1-9 / publication
                               :name (c1-7 / name
                                           :op1 "RT"))
                   :ARG1 c1-12
                   :ARG0 c1-9
                   :ARG1 (c1-6 / and
                               :op1 (c1-0 / hi)
                               :op2 (c1-11 / credit-01
                                           :ARG0 (c1-1 / you)
                                           :ARG1 (c1-2 / journalist
                                                       :poss (c1-3 / we))
                                           :mod (c1-10 / at-least)
                                           :mode imperative
                                           :polite +)))
      :ARG2 c1-2)

# ::snt Photo shows attackers are at least trained &amp; possibly experienced with combat weapons. More tracking needed of overseas fighters.
# ::tokens ["Photo", "shows", "attackers", "are", "at", "least", "trained", "&", "amp", ";", "possibly", "experienced", "with", "combat", "weapons", ".", "More", "tracking", "needed", "of", "overseas", "fighters", "."]
# ::lemmas ["photo", "show", "attacker", "be", "at", "least", "train", "&", "amp", ";", "possibly", "experience", "with", "combat", "weapon", ".", "more", "tracking", "need", "of", "overseas", "fighter", "."]
(c2-2 / multi-sentence
      :snt1 (c2-13 / show-01
                   :ARG0 (c2-9 / photo)
                   :ARG1 (c2-17 / and
                                :op1 (c2-15 / train-01
                                            :ARG2 (c2-16 / person
                                                         :ARG0-of (c2-6 / attack-01))
                                            :mod (c2-8 / at-least))
                                :op2 (c2-5 / experience-01
                                           :ARG0 c2-16
                                           :ARG1 (c2-0 / weapon
                                                       :instrument-of (c2-11 / combat-01))
                                           :ARG1-of (c2-3 / possible-01))))
      :snt2 (c2-7 / need-01
                  :ARG0 (c2-12 / track-01
                               :ARG1 (c2-14 / person
                                            :ARG0-of (c2-1 / fight-01)
                                            :location (c2-4 / overseas))
                               :mod (c2-10 / more))))

# ::snt : Hi this is the photo of our journalist please credit him at least. lol business .. Encore et encore
# ::tokens [":", "Hi", "this", "is", "the", "photo", "of", "our", "journalist", "please", "credit", "him", "at", "least", ".", "lol", "business", "..", "Encore", "et", "encore"]
# ::lemmas [":", "hi", "this", "be", "the", "photo", "of", "our", "journalist", "please", "credit", "he", "at", "least", ".", "lol", "business", "..", "encore", "et", "encore"]
(c3-4 / multi-sentence
      :snt1 (c3-13 / say-01
                   :ARG1 (c3-14 / and
                                :op1 (c3-0 / hi)
                                :op2 (c3-11 / photo
                                            :domain (c3-1 / journalist
                                                          :poss (c3-2 / we))))
                   :snt2 (c3-12 / credit-01
                                :ARG0 (c3-3 / you)
                                :ARG1 c3-1
                                :mod (c3-8 / at-least)
                                :mode imperative
                                :polite +))
      :snt3 (c3-10 / and
                   :op1 (c3-5 / business)
                   :op2 (c3-6 / organization
                              :name (c3-9 / name
                                          :op1 "Encore"))
                   :op3 (c3-7 / encore-01)))

# ::snt Sickening ": confirmed dead, Francois Hollande to visit scene of attack
# ::tokens ["Sickening", "\"", ":", "confirmed", "dead", ",", "Francois", "Hollande", "to", "visit", "scene", "of", "attack"]
# ::lemmas ["sicken", "\"", ":", "confirm", "dead", ",", "Francois", "Hollande", "to", "visit", "scene", "of", "attack"]
(c4-8 / and
      :op1 (c4-7 / sicken-01)
      :op2 (c4-6 / confirm-01
                 :ARG1 (c4-5 / die-01
                             :ARG1 (c4-4 / person
                                         :name (c4-2 / name
                                                     :op1 "Francois"
                                                     :op2 "Holland"))))
      :op3 (c4-3 / visit-01
                 :ARG0 c4-4
                 :ARG1 (c4-0 / scene
                             :location-of (c4-1 / attack-01))))

# ::snt :. Well, are noting that whoever fired those bullets knew how to fire the gun properly. PN office dead?
# ::tokens [":", ".", "Well", ",", "are", "noting", "that", "whoever", "fired", "those", "bullets", "knew", "how", "to", "fire", "the", "gun", "properly", ".", "PN", "office", "dead", "?"]
# ::lemmas [":", ".", "well", ",", "be", "note", "that", "whoever", "fire", "those", "bullet", "know", "how", "to", "fire", "the", "gun", "properly", ".", "PN", "office", "dead", "?"]
(c5-2 / multi-sentence
      :snt1 (c5-6 / note-01
                  :ARG1 (c5-13 / know-03
                               :ARG0 (c5-8 / person
                                           :ARG0-of (c5-1 / fire-01
                                                          :ARG1 (c5-3 / bullet
                                                                      :mod (c5-12 / that))))
                               :ARG1 (c5-5 / fire-01
                                           :ARG0 c5-8
                                           :ARG1 (c5-11 / gun)
                                           :manner (c5-14 / proper)))
                  :mod (c5-0 / well))
      :snt2 (c5-9 / die-01
                  :ARG1 (c5-4 / office
                              :poss (c5-10 / government-organization
                                           :name (c5-7 / name
                                                       :op1 "PN")))
                  :polarity (c5-15 / amr-unknown)))

# ::snt nah not even on that man, habibi marseille
# ::tokens ["nah", "not", "even", "on", "that", "man", ",", "habibi", "marseille"]
# ::lemmas ["nah", "not", "even", "on", "that", "man", ",", "habibi", "marseille"]
(c6-6 / say-01
      :ARG0 (c6-3 / i)
      :ARG1 (c6-1 / on-ones-mind-07
                  :ARG1 (c6-0 / man
                              :mod (c6-7 / that))
                  :mod (c6-2 / even)
                  :polarity -)
      :ARG2 (c6-5 / person
                  :name (c6-4 / name
                              :op1 "Habibi"
                              :op2 "Marseille")))

# ::snt Heu ce stade on s'en fiche non ?
# ::tokens ["Heu", "ce", "stade", "on", "s'en", "fiche", "non", "?"]
# ::lemmas ["Heu", "ce", "stade", "on", "s'en", "fiche", "non", "?"]
(c7-0 / stade-01
      :ARG0 (c7-2 / amr-unknown)
      :ARG1 (c7-1 / s'en-fiche
                  :polarity -))

# ::snt lol nd u lot wanted to go paris to get our headgears ripped off
# ::tokens ["lol", "nd", "u", "lot", "wanted", "to", "go", "paris", "to", "get", "our", "headgears", "ripped", "off"]
# ::lemmas ["lol", "nd", "u", "lot", "want", "to", "go", "paris", "to", "get", "our", "headgear", "rip", "off"]
(c8-12 / and
       :op1 (c8-3 / laugh-01
                  :ARG0 (c8-5 / i)
                  :manner (c8-11 / loud)
                  :mode expressive)
       :op2 (c8-1 / want-01
                  :ARG0 (c8-2 / you)
                  :ARG1 (c8-10 / go-01
                               :ARG1 c8-2
                               :ARG4 (c8-7 / paris)
                               :purpose (c8-8 / get-04
                                              :ARG0 c8-2
                                              :ARG1 (c8-9 / rip-off-04
                                                          :ARG1 (c8-0 / headgang
                                                                      :part-of (c8-6 / we)))))
                  :quant (c8-4 / lot)))

# ::snt Hi this is the photo of our journalist please credit him at least.
# ::tokens ["Hi", "this", "is", "the", "photo", "of", "our", "journalist", "please", "credit", "him", "at", "least", "."]
# ::lemmas ["hi", "this", "be", "the", "photo", "of", "our", "journalist", "please", "credit", "he", "at", "least", "."]
(c9-4 / multi-sentence
      :snt1 (c9-9 / say-01
                  :ARG0 (c9-5 / i)
                  :ARG1 (c9-0 / hi)
                  :ARG2 (c9-7 / person
                              :ARG0-of (c9-12 / have-org-role-91
                                              :ARG1 (c9-1 / we)
                                              :ARG2 (c9-2 / journalist))
                              :domain (c9-11 / this)))
      :snt2 (c9-8 / credit-01
                  :ARG0 (c9-3 / you)
                  :ARG1 (c9-6 / he)
                  :mod (c9-10 / at-least)
                  :mode imperative
                  :polite +))

# ::snt franchement dplac vu le contexte...
# ::tokens ["franchement", "dplac", "vu", "le", "contexte", "..."]
# ::lemmas ["franchement", "dplac", "vu", "le", "contexte", "..."]
(c10-1 / versus
       :op1 (c10-2 / franchement
                   :mod (c10-0 / dplac))
       :op2 (c10-3 / contexte))

# ::snt Wild West Politics: Western Europe is suffering from its internal contradictions; welcome to the tribal politics of the future.
# ::tokens ["Wild", "West", "Politics", ":", "Western", "Europe", "is", "suffering", "from", "its", "internal", "contradictions", ";", "welcome", "to", "the", "tribal", "politics", "of", "the", "future", "."]
# ::lemmas ["Wild", "West", "Politics", ":", "Western", "Europe", "be", "suffer", "from", "its", "internal", "contradiction", ";", "welcome", "to", "the", "tribal", "politic", "of", "the", "future", "."]
(c11-2 / multi-sentence
       :snt1 (c11-10 / suffer-01
                     :ARG0 (c11-0 / world-region
                                  :name (c11-6 / name
                                               :op1 "West"))
                     :ARG1 (c11-9 / contradiction
                                  :ARG1-of (c11-4 / internal-02)
                                  :poss c11-0))
       :snt2 (c11-5 / welcome-01
                    :ARG2 (c11-8 / politics
                                 :mod (c11-11 / tribe)
                                 :time (c11-1 / future)))
       :snt3 (c11-12 / politics
                     :mod (c11-3 / world-region
                                 :name (c11-7 / name
                                              :op1 "West"))))

# ::snt . Won't happen. Dover checks are focused mainly on de-worming treatments for dogs.
# ::tokens [".", "Wo", "n't", "happen", ".", "Dover", "checks", "are", "focused", "mainly", "on", "de", "-", "worming", "treatments", "for", "dogs", "."]
# ::lemmas [".", "will", "not", "happen", ".", "dover", "check", "be", "focus", "mainly", "on", "de", "-", "worming", "treatment", "for", "dog", "."]
(c12-2 / multi-sentence
       :snt1 (c12-3 / event
                    :polarity -)
       :snt2 (c12-1 / focus-01
                    :ARG1 (c12-8 / check
                                 :location (c12-4 / facility
                                                  :name (c12-5 / name
                                                               :op1 "Dover")))
                    :ARG2 (c12-9 / treat-03
                                 :ARG1 (c12-7 / dog)
                                 :ARG2 (c12-0 / deworm-00))
                    :mod (c12-6 / main)))

# ::snt indeed, this is called "courtesy" (thing often unknown by british papers)
# ::tokens ["indeed", ",", "this", "is", "called", "\"", "courtesy", "\"", "(", "thing", "often", "unknown", "by", "british", "papers", ")"]
# ::lemmas ["indeed", ",", "this", "be", "call", "\"", "courtesy", "\"", "(", "thing", "often", "unknown", "by", "british", "paper", ")"]
(c13-7 / call-01
       :ARG1 (c13-10 / this)
       :ARG2 (c13-6 / courtesy)
       :ARG1-of (c13-0 / mean-01
                       :ARG2 (c13-8 / thing
                                    :ARG1-of (c13-3 / know-01
                                                    :ARG0 (c13-5 / paper
                                                                 :mod (c13-9 / country
                                                                             :name (c13-4 / name
                                                                                          :op1 "Britain")))
                                                    :frequency (c13-1 / often)
                                                    :polarity -)))
       :mod (c13-2 / indeed))

# ::snt . Le sens des priorits...
# ::tokens [".", "Le", "sens", "des", "priorits", "..."]
# ::lemmas [".", "Le", "sen", "des", "priorit", "..."]
(c14-0 / sens
       :mode expressive)

# ::snt il y a des morts. Pendant ce temps, le pb de minutes c'est les photos...
# ::tokens ["il", "y", "a", "des", "morts", ".", "Pendant", "ce", "temps", ",", "le", "pb", "de", "minutes", "c'est", "les", "photos", "..."]
# ::lemmas ["il", "y", "a", "des", "mort", ".", "pendant", "ce", "temp", ",", "le", "pb", "de", "minute", "c'est", "les", "photo", "..."]
(c15-3 / multi-sentence
       :snt1 (c15-5 / et-cetera
                    :polarity (c15-13 / amr-unknown)
                    :domain (c15-1 / yep))
       :snt2 (c15-0 / have-condition-91
                    :ARG1 (c15-6 / amr-unknown
                                 :ARG1-of (c15-9 / post-01
                                                 :time (c15-8 / after
                                                              :op1 (c15-7 / now)
                                                              :quant (c15-10 / multiple
                                                                             :op1 (c15-12 / temporal-quantity
                                                                                          :unit (c15-2 / minute)
                                                                                          :quant 1)))))
                    :ARG2 (c15-11 / amr-unknown
                                  :mod (c15-4 / fuck
                                              :mode expressive))))
