# ::snt gimme
# ::tokens ["gimme"]
# ::lemmas ["gimme"]
(c1-0 / gimme
      :mode expressive)

# ::snt whoever at that sent the email to subscribers about cancellation made an error. Not Thursday am..
# ::tokens ["whoever", "at", "that", "sent", "the", "email", "to", "subscribers", "about", "cancellation", "made", "an", "error", ".", "Not", "Thursday", "am", ".."]
# ::lemmas ["whoever", "at", "that", "send", "the", "email", "to", "subscriber", "about", "cancellation", "make", "an", "error", ".", "not", "Thursday", "am", ".."]
(c2-0 / multi-sentence
      :snt1 (c2-2 / err-01
                  :ARG0 (c2-10 / amr-unknown
                               :ARG0-of (c2-8 / send-01
                                              :ARG1 (c2-1 / email-01
                                                          :ARG0 (c2-9 / that)
                                                          :ARG2 (c2-4 / person
                                                                      :ARG0-of (c2-3 / subscribe-01))
                                                          :topic (c2-6 / cancel-01)))))
      :snt2 (c2-5 / date-entity
                  :weekday (c2-7 / thursday
                                 :polarity -)))

# ::snt I hear that he is playing shows
# ::tokens ["I", "hear", "that", "he", "is", "playing", "shows"]
# ::lemmas ["i", "hear", "that", "he", "be", "play", "show"]
(c3-0 / hear-01
      :ARG0 (c3-1 / i)
      :ARG1 (c3-2 / play-11
                  :ARG0 (c3-4 / he)
                  :ARG1 (c3-3 / show-04)))

# ::snt or could it be a joke and he's under a different alias?
# ::tokens ["or", "could", "it", "be", "a", "joke", "and", "he", "'s", "under", "a", "different", "alias", "?"]
# ::lemmas ["or", "could", "it", "be", "a", "joke", "and", "he", "be", "under", "a", "different", "alias", "?"]
(c4-2 / or
      :op2 (c4-7 / possible-01
                 :ARG1 (c4-9 / and
                             :op1 (c4-0 / joke-01
                                        :ARG2 (c4-4 / it))
                             :op2 (c4-5 / name-01
                                        :ARG1 (c4-1 / he)
                                        :ARG2 (c4-3 / alias
                                                    :ARG1-of (c4-8 / differ-02))))
                 :polarity (c4-6 / amr-unknown)))

# ::snt it's all good. Just helping out
# ::tokens ["it", "'s", "all", "good", ".", "Just", "helping", "out"]
# ::lemmas ["it", "be", "all", "good", ".", "just", "help", "out"]
(c5-2 / multi-sentence
      :snt1 (c5-4 / good-02
                  :ARG1 (c5-3 / it)
                  :mod (c5-5 / all))
      :snt2 (c5-0 / help-out-03
                  :mod (c5-1 / just)))

# ::snt Ouch!!
# ::tokens ["Ouch", "!", "!"]
# ::lemmas ["ouch", "!", "!"]
(c6-0 / ouch
      :mode expressive)

# ::snt my fault
# ::tokens ["my", "fault"]
# ::lemmas ["my", "fault"]
(c7-0 / fault-01
      :ARG1 (c7-1 / i))

# ::snt try again
# ::tokens ["try", "again"]
# ::lemmas ["try", "again"]
(c8-0 / try-01
      :mod (c8-1 / again))

# ::snt call me cause phone will die
# ::tokens ["call", "me", "cause", "phone", "will", "die"]
# ::lemmas ["call", "i", "cause", "phone", "will", "die"]
(c9-5 / call-02
      :ARG0 (c9-0 / you)
      :ARG1 (c9-1 / i)
      :ARG1-of (c9-4 / cause-01
                     :ARG0 (c9-3 / die-01
                                 :ARG1 (c9-2 / phone)))
      :mode imperative)
