# ::snt I hope you enjoy! Only slightly jealous
# ::tokens ["I", "hope", "you", "enjoy", "!", "Only", "slightly", "jealous"]
# ::lemmas ["i", "hope", "you", "enjoy", "!", "only", "slightly", "jealous"]
(c1-3 / multi-sentence
      :snt1 (c1-0 / hope-01
                  :ARG0 (c1-6 / i)
                  :ARG1 (c1-5 / enjoy-01
                              :ARG0 (c1-1 / you)))
      :snt2 (c1-2 / jealous-02
                  :ARG0 (c1-7 / you)
                  :degree (c1-8 / slight)
                  :mod (c1-4 / only)))

# ::snt I can't haha sorry
# ::tokens ["I", "ca", "n't", "haha", "sorry"]
# ::lemmas ["i", "can", "not", "haha", "sorry"]
(c2-0 / sorry-01
      :ARG1 (c2-2 / i)
      :mod (c2-1 / haha
                 :mode expressive))

# ::snt very very true hope it's a heck of a concert.
# ::tokens ["very", "very", "true", "hope", "it", "'s", "a", "heck", "of", "a", "concert", "."]
# ::lemmas ["very", "very", "true", "hope", "it", "be", "a", "heck", "of", "a", "concert", "."]
(c3-0 / hope-01
      :ARG1 (c3-3 / concert
                  :domain (c3-1 / it)
                  :degree (c3-5 / heck))
      :ARG1-of (c3-4 / true-01
                     :degree (c3-2 / very)))

# ::snt Oh I can't I am already at work as I am typing this out lol
# ::tokens ["Oh", "I", "ca", "n't", "I", "am", "already", "at", "work", "as", "I", "am", "typing", "this", "out", "lol"]
# ::lemmas ["oh", "i", "can", "not", "i", "be", "already", "at", "work", "as", "i", "be", "type", "this", "out", "lol"]
(c4-2 / multi-sentence
      :snt1 (c4-7 / possible-01
                  :ARG1 (c4-5 / event
                              :mod (c4-6 / i))
                  :mod (c4-4 / oh)
                  :polarity -)
      :snt2 (c4-9 / cause-01
                  :ARG0 (c4-3 / be-located-at-91
                              :ARG1 c4-6
                              :ARG2 (c4-0 / work-01)
                              :time (c4-12 / already))
                  :ARG1 (c4-11 / type-out-03
                               :ARG0 c4-6
                               :ARG1 (c4-10 / this)
                               :ARG2-of (c4-1 / laugh-01
                                              :ARG0 c4-6
                                              :manner (c4-8 / loud)))))

# ::snt nice one day I will go and check him out and have a good ass time
# ::tokens ["nice", "one", "day", "I", "will", "go", "and", "check", "him", "out", "and", "have", "a", "good", "ass", "time"]
# ::lemmas ["nice", "one", "day", "i", "will", "go", "and", "check", "he", "out", "and", "have", "a", "good", "ass", "time"]
(c5-11 / and
       :op1 (c5-8 / go-02
                  :ARG0 (c5-4 / i))
       :op2 (c5-7 / check-out-05
                  :ARG0 c5-4
                  :ARG1 (c5-0 / he))
       :op3 (c5-1 / have-03
                  :ARG0 c5-4
                  :ARG1 (c5-10 / time
                               :ARG1-of (c5-6 / good-02)
                               :mod (c5-3 / ass)))
       :time (c5-9 / day
                   :mod (c5-2 / one))
       :ARG1-of (c5-5 / nice-01))

# ::snt and boy did we know how to queue mate.
# ::tokens ["and", "boy", "did", "we", "know", "how", "to", "queue", "mate", "."]
# ::lemmas ["and", "boy", "do", "we", "know", "how", "to", "queue", "mate", "."]
(c6-5 / and
      :op2 (c6-4 / know-03
                 :ARG0 (c6-0 / we)
                 :ARG1 (c6-3 / queue-01)
                 :mod (c6-2 / boy
                            :mode expressive))
      :ARG2 (c6-1 / mate))

# ::snt I can't go lol I have to work or I would should be amazing.
# ::tokens ["I", "ca", "n't", "go", "lol", "I", "have", "to", "work", "or", "I", "would", "should", "be", "amazing", "."]
# ::lemmas ["i", "can", "not", "go", "lol", "i", "have", "to", "work", "or", "i", "would", "should", "be", "amazing", "."]
(c7-10 / and
       :op1 (c7-5 / possible-01
                  :ARG1 (c7-8 / go-02
                              :ARG0 (c7-4 / i))
                  :ARG2-of (c7-1 / laugh-01
                                 :ARG0 c7-4
                                 :manner (c7-9 / loud)
                                 :mode expressive)
                  :polarity -)
       :op2 (c7-2 / obligate-01
                  :ARG1 c7-4
                  :ARG2 (c7-0 / work-01
                              :ARG0 c7-4)
                  :ARG0-of (c7-7 / cause-01
                                 :ARG1 (c7-6 / recommend-01
                                             :ARG1 (c7-3 / amaze-01
                                                         :ARG0 c7-4)))))

# ::snt If there's one thing fans love more than the music, it's queueing!
# ::tokens ["If", "there", "'s", "one", "thing", "fans", "love", "more", "than", "the", "music", ",", "it", "'s", "queueing", "!"]
# ::lemmas ["if", "there", "be", "one", "thing", "fan", "love", "more", "than", "the", "music", ",", "it", "be", "queue", "!"]
(c8-4 / queue-01
      :ARG1-of (c8-3 / love-01
                     :ARG0 (c8-1 / fan)
                     :ARG2-of (c8-0 / have-degree-91
                                    :ARG1 c8-1
                                    :ARG3 (c8-2 / more)
                                    :ARG4 (c8-5 / music)))
      :condition (c8-6 / thing
                       :quant 1)
      :mode expressive)

# ::snt yeah your telling me lol
# ::tokens ["yeah", "your", "telling", "me", "lol"]
# ::lemmas ["yeah", "your", "tell", "i", "lol"]
(c9-5 / tell-01
      :ARG0 (c9-0 / you)
      :ARG2 (c9-2 / i)
      :mod (c9-4 / yeah
                 :mode expressive)
      :ARG2-of (c9-1 / laugh-01
                     :ARG0 c9-2
                     :manner (c9-3 / loud)))

# ::snt Enjoyyyyyy I'm jealous
# ::tokens ["Enjoyyyyyy", "I", "'m", "jealous"]
# ::lemmas ["enjoyyyyyy", "i", "be", "jealous"]
(c10-4 / cause-01
       :ARG0 (c10-0 / jealous-02
                    :ARG0 (c10-3 / i))
       :ARG1 (c10-2 / enjoy-01
                    :ARG0 (c10-1 / you)
                    :mode imperative))
