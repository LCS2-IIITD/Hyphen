# ::snt Even if he did, you cretin, that's not a capital offence, is it? They don't get to shoot him like a dog.
# ::tokens ["Even", "if", "he", "did", ",", "you", "cretin", ",", "that", "'s", "not", "a", "capital", "offence", ",", "is", "it", "?", "They", "do", "n't", "get", "to", "shoot", "him", "like", "a", "dog", "."]
# ::lemmas ["even", "if", "he", "do", ",", "you", "cretin", ",", "that", "be", "not", "a", "capital", "offence", ",", "be", "it", "?", "they", "do", "not", "get", "to", "shoot", "he", "like", "a", "dog", "."]
(c1-3 / multi-sentence
      :snt1 (c1-13 / say-01
                   :ARG1 (c1-4 / offend-03
                               :mod (c1-9 / capital)
                               :concession (c1-5 / even-if
                                                 :op1 (c1-8 / do-02
                                                            :ARG0 (c1-0 / he)))
                               :ARG1-of (c1-10 / request-confirmation-91)
                               :polarity -)
                   :ARG2 (c1-1 / you
                               :mod (c1-11 / cretin)))
      :snt2 (c1-12 / get-22
                   :ARG0 (c1-14 / they)
                   :ARG1 (c1-6 / shoot-02
                               :ARG0 c1-14
                               :ARG1 (c1-15 / he)
                               :ARG1-of (c1-7 / resemble-01
                                              :ARG2 (c1-2 / dog)))
                   :polarity -))

# ::snt You are wrong, in far too many ways to fit in a tweet. You should watch less Fox News, mate. Try reading a book.
# ::tokens ["You", "are", "wrong", ",", "in", "far", "too", "many", "ways", "to", "fit", "in", "a", "tweet", ".", "You", "should", "watch", "less", "Fox", "News", ",", "mate", ".", "Try", "reading", "a", "book", "."]
# ::lemmas ["you", "be", "wrong", ",", "in", "far", "too", "many", "way", "to", "fit", "in", "a", "tweet", ".", "you", "should", "watch", "less", "Fox", "News", ",", "mate", ".", "try", "read", "a", "book", "."]
(c2-0 / multi-sentence
      :snt1 (c2-13 / wrong-04
                   :ARG1 (c2-17 / you)
                   :manner (c2-3 / way
                                 :ARG1-of (c2-5 / have-quant-91
                                                :ARG2 (c2-11 / many)
                                                :ARG3 (c2-20 / too
                                                             :mod (c2-6 / far))
                                                :ARG6 (c2-18 / fit-in-02
                                                             :ARG1 c2-17
                                                             :ARG2 (c2-19 / tweet-02)))))
      :snt2 (c2-12 / recommend-01
                   :ARG1 (c2-1 / watch-01
                               :ARG0 (c2-16 / you)
                               :ARG1 (c2-9 / broadcast-program
                                           :name (c2-10 / name
                                                        :op1 "Fox"
                                                        :op2 "News")
                                           :mod (c2-7 / less)))
                   :ARG2 (c2-8 / mate))
      :snt3 (c2-14 / try-01
                   :ARG0 (c2-2 / you)
                   :ARG1 (c2-4 / read-01
                               :ARG0 c2-2
                               :ARG1 (c2-15 / book))
                   :mode imperative))

# ::snt Surely even you can see that police officers cannot also be judge and executioner? Do you think you're immune?
# ::tokens ["Surely", "even", "you", "can", "see", "that", "police", "officers", "can", "not", "also", "be", "judge", "and", "executioner", "?", "Do", "you", "think", "you", "'re", "immune", "?"]
# ::lemmas ["surely", "even", "you", "can", "see", "that", "police", "officer", "can", "not", "also", "be", "judge", "and", "executioner", "?", "do", "you", "think", "you", "be", "immune", "?"]
(c3-0 / multi-sentence
      :snt1 (c3-1 / possible-01
                  :ARG1 (c3-2 / see-01
                              :ARG0 (c3-15 / you)
                              :ARG1 (c3-4 / possible-01
                                          :ARG1 (c3-5 / and
                                                      :op1 (c3-7 / person
                                                                 :ARG0-of (c3-6 / have-org-role-91
                                                                                :ARG1 (c3-12 / police)
                                                                                :ARG2 (c3-16 / officer)))
                                                      :op2 (c3-8 / person
                                                                 :ARG0-of (c3-9 / execute-01))
                                                      :mod (c3-13 / also)
                                                      :domain (c3-3 / person
                                                                    :ARG0-of c3-6
                                                                    :ARG1 c3-12
                                                                    :ARG2 c3-16))
                                          :polarity -)))
      :ARG1-of (c3-10 / sure-02)
      :snt2 (c3-18 / think-01
                   :ARG0 (c3-17 / you)
                   :ARG1 (c3-14 / immune-02
                                :ARG1 c3-17)
                   :polarity (c3-11 / amr-unknown)))

# ::snt Met a young man who told me, "We aren't here for colors. Black isn't a color, We are all Equal
# ::tokens ["Met", "a", "young", "man", "who", "told", "me", ",", "\"", "We", "are", "n't", "here", "for", "colors", ".", "Black", "is", "n't", "a", "color", ",", "We", "are", "all", "Equal"]
# ::lemmas ["Met", "a", "young", "man", "who", "tell", "i", ",", "\"", "we", "be", "not", "here", "for", "color", ".", "Black", "be", "not", "a", "color", ",", "we", "be", "all", "Equal"]
(c4-3 / meet-02
      :ARG0 (c4-7 / i)
      :ARG1 (c4-8 / man
                  :mod (c4-1 / young)
                  :ARG0-of (c4-12 / tell-01
                                  :ARG1 (c4-13 / and
                                               :op1 (c4-4 / be-located-at-91
                                                          :ARG1 (c4-2 / we
                                                                      :mod (c4-6 / all))
                                                          :ARG2 (c4-0 / here)
                                                          :purpose (c4-10 / color)
                                                          :polarity -)
                                               :op2 (c4-9 / color
                                                          :domain (c4-11 / black-04)
                                                          :polarity -)
                                               :op3 (c4-5 / equal-01
                                                          :ARG1 c4-2))
                                  :ARG2 c4-7)))

# ::snt yes they do!! criminals GIVE UP THEIR RIGHTS when they rob and run from police and become a menace! LOL
# ::tokens ["yes", "they", "do", "!", "!", "criminals", "GIVE", "UP", "THEIR", "RIGHTS", "when", "they", "rob", "and", "run", "from", "police", "and", "become", "a", "menace", "!", "LOL"]
# ::lemmas ["yes", "they", "do", "!", "!", "criminal", "give", "up", "their", "right", "when", "they", "rob", "and", "run", "from", "police", "and", "become", "a", "menace", "!", "LOL"]
(c5-1 / multi-sentence
      :snt1 (c5-7 / do-02
                  :ARG0 (c5-13 / they))
      :snt2 (c5-9 / give-up-07
                  :ARG0 (c5-6 / person
                              :ARG2-of (c5-8 / criminal-03))
                  :ARG1 (c5-10 / right-05
                               :ARG1 c5-6)
                  :time (c5-15 / and
                               :op1 (c5-5 / rob-01
                                          :ARG0 c5-6
                                          :ARG1 (c5-14 / police))
                               :op2 (c5-3 / run-02
                                          :ARG0 c5-6
                                          :source c5-14)
                               :op3 (c5-2 / become-01
                                          :ARG1 c5-6
                                          :ARG2 (c5-11 / menace-01
                                                       :ARG0 c5-6))))
      :snt3 (c5-0 / laugh-01
                  :ARG0 (c5-4 / i)
                  :manner (c5-12 / loud)
                  :mode expressive))

# ::snt can I hit that blunt tho
# ::tokens ["can", "I", "hit", "that", "blunt", "tho"]
# ::lemmas ["can", "i", "hit", "that", "blunt", "tho"]
(c6-0 / have-concession-91
      :ARG1 (c6-3 / possible-01
                  :ARG1 (c6-5 / hit-01
                              :ARG0 (c6-2 / i)
                              :ARG1 (c6-1 / blunt-02
                                          :degree (c6-4 / that)))
                  :polarity -))

# ::snt m.brown robbed and ran from police and the EQUALLY distributed bullets on his body. end of story!
# ::tokens ["m.brown", "robbed", "and", "ran", "from", "police", "and", "the", "EQUALLY", "distributed", "bullets", "on", "his", "body", ".", "end", "of", "story", "!"]
# ::lemmas ["m.brown", "rob", "and", "run", "from", "police", "and", "the", "EQUALLY", "distribute", "bullet", "on", "his", "body", ".", "end", "of", "story", "!"]
(c7-0 / multi-sentence
      :snt1 (c7-13 / and
                   :op1 (c7-7 / rob-01
                              :ARG0 (c7-6 / person
                                          :name (c7-5 / name
                                                      :op1 "m."
                                                      :op2 "brown")
                                          :part (c7-1 / body))
                              :ARG1 (c7-12 / police))
                   :op2 (c7-4 / run-02
                              :ARG0 c7-6
                              :source c7-12)
                   :op3 (c7-8 / be-located-at-91
                              :ARG1 (c7-11 / bullet
                                           :ARG1-of (c7-9 / distribute-01
                                                          :ARG1-of (c7-3 / equal-01)))
                              :ARG2 c7-1))
      :snt2 (c7-2 / end-01
                  :ARG1 (c7-10 / story)))

# ::snt Contradicts the hundreds yesterday praying the cop was white. bunch of racists.
# ::tokens ["Contradicts", "the", "hundreds", "yesterday", "praying", "the", "cop", "was", "white", ".", "bunch", "of", "racists", "."]
# ::lemmas ["contradict", "the", "hundreds", "yesterday", "pray", "the", "cop", "be", "white", ".", "bunch", "of", "racist", "."]
(c8-6 / convict-01
      :ARG1 (c8-4 / person
                  :quant (c8-2 / multiple
                               :op1 100)
                  :ARG0-of (c8-9 / pray-01
                                 :ARG1 (c8-0 / white-02
                                             :ARG1 (c8-5 / cop))))
      :ARG0-of (c8-7 / mean-01
                     :ARG1 (c8-3 / bunch
                                 :consist-of (c8-8 / racist)))
      :time (c8-1 / yesterday))

# ::snt Nah Iont like that shit
# ::tokens ["Nah", "Iont", "like", "that", "shit"]
# ::lemmas ["Nah", "Iont", "like", "that", "shit"]
(c9-1 / dislike-01
      :ARG0 (c9-3 / i)
      :ARG1 (c9-0 / shit
                  :mod (c9-2 / that)))

# ::snt i am sure your lily white pussy gets smashed and robbed your the first one crying for police to do something! LOL
# ::tokens ["i", "am", "sure", "your", "lily", "white", "pussy", "gets", "smashed", "and", "robbed", "your", "the", "first", "one", "crying", "for", "police", "to", "do", "something", "!", "LOL"]
# ::lemmas ["i", "be", "sure", "your", "lily", "white", "pussy", "gets", "smash", "and", "rob", "your", "the", "first", "one", "cry", "for", "police", "to", "do", "something", "!", "LOL"]
(c11-13 / sure-02
        :ARG0 (c11-7 / i)
        :ARG1 (c11-15 / and
                      :op1 (c11-6 / smash-01
                                  :ARG1 (c11-8 / pussy
                                               :ARG1-of (c11-1 / white-03
                                                               :mod (c11-3 / lily))
                                               :poss (c11-2 / you
                                                            :ord (c11-5 / ordinal-entity
                                                                        :value 1))))
                      :op2 (c11-9 / rob-01
                                  :ARG1 c11-8)
                      :op3 (c11-10 / cry-02
                                   :ARG0 c11-2
                                   :ARG1 (c11-11 / do-02
                                                 :ARG0 (c11-14 / police)
                                                 :ARG1 (c11-4 / something))))
        :ARG2-of (c11-12 / laugh-01
                         :ARG0 c11-7
                         :manner (c11-0 / loud)
                         :mode expressive))
