# ::snt Specific protocols prevent this from happening: Never a single person in a cockpit.
# ::tokens ["Specific", "protocols", "prevent", "this", "from", "happening", ":", "Never", "a", "single", "person", "in", "a", "cockpit", "."]
# ::lemmas ["specific", "protocol", "prevent", "this", "from", "happen", ":", "never", "a", "single", "person", "in", "a", "cockpit", "."]
(c1-4 / prevent-01
      :ARG0 (c1-9 / protocol
                  :ARG1-of (c1-7 / specific-02))
      :ARG1 (c1-8 / this)
      :ARG1-of (c1-6 / cause-01
                     :ARG0 (c1-1 / be-located-at-91
                                 :ARG1 (c1-0 / person
                                             :ARG1-of (c1-2 / single-02))
                                 :ARG2 (c1-5 / cockpit)
                                 :time (c1-3 / ever)
                                 :polarity -)))

# ::snt Still need more full information, how heartbreaking.
# ::tokens ["Still", "need", "more", "full", "information", ",", "how", "heartbreaking", "."]
# ::lemmas ["still", "need", "more", "full", "information", ",", "how", "heartbreaking", "."]
(c2-1 / multi-sentence
      :snt1 (c2-5 / need-01
                  :ARG1 (c2-4 / information
                              :ARG1-of (c2-0 / full-09)
                              :mod (c2-6 / more))
                  :mod (c2-7 / still))
      :snt2 (c2-2 / break-heart-31
                  :degree (c2-3 / so)))

# ::snt : Germanwings pilot 'was locked out of cockpit' before fatal plane crash ; so sad
# ::tokens [":", "Germanwings", "pilot", "'", "was", "locked", "out", "of", "cockpit", "'", "before", "fatal", "plane", "crash", ";", "so", "sad"]
# ::lemmas [":", "germanwing", "pilot", "'", "be", "lock", "out", "of", "cockpit", "'", "before", "fatal", "plane", "crash", ";", "so", "sad"]
(c3-0 / lock-01
      :ARG1 (c3-7 / person
                  :ARG0-of (c3-11 / pilot-01
                                  :ARG1 (c3-12 / aircraft-type
                                               :name (c3-6 / name
                                                           :op1 "Germanwings"))))
      :ARG2 (c3-4 / out-06
                  :ARG1 c3-7
                  :ARG2 (c3-9 / cockpit))
      :time (c3-3 / before
                  :op1 (c3-8 / crash-01
                             :ARG1 (c3-2 / plane)
                             :mod (c3-1 / fatal)))
      :ARG0-of (c3-10 / sad-02
                      :degree (c3-5 / so)))

# ::snt so that would explain the steady decent.
# ::tokens ["so", "that", "would", "explain", "the", "steady", "decent", "."]
# ::lemmas ["so", "that", "would", "explain", "the", "steady", "decent", "."]
(c4-1 / explain-01
      :ARG0 (c4-3 / that)
      :ARG1 (c4-2 / decent
                  :ARG1-of (c4-0 / steady-01)))

# ::snt Suggest that it wasn't an accident, there must have been a reason why he was locked out of the cockpit!
# ::tokens ["Suggest", "that", "it", "was", "n't", "an", "accident", ",", "there", "must", "have", "been", "a", "reason", "why", "he", "was", "locked", "out", "of", "the", "cockpit", "!"]
# ::lemmas ["suggest", "that", "it", "be", "not", "an", "accident", ",", "there", "must", "have", "be", "a", "reason", "why", "he", "be", "lock", "out", "of", "the", "cockpit", "!"]
(c5-11 / and
       :op1 (c5-10 / suggest-01
                   :ARG0 (c5-1 / you)
                   :ARG1 (c5-5 / accident
                               :domain (c5-6 / it)
                               :polarity -)
                   :mode imperative)
       :op2 (c5-4 / obligate-01
                  :ARG2 (c5-7 / reason
                              :ARG0-of (c5-8 / cause-01
                                             :ARG1 (c5-2 / lock-01
                                                         :ARG1 (c5-0 / he)
                                                         :ARG2 (c5-3 / out-06
                                                                     :ARG1 c5-0
                                                                     :ARG2 (c5-9 / cockpit)))))))

# ::snt : Germanwings pilot 'was locked out of cockpit' before fatal plane crash what??
# ::tokens [":", "Germanwings", "pilot", "'", "was", "locked", "out", "of", "cockpit", "'", "before", "fatal", "plane", "crash", "what", "?", "?"]
# ::lemmas [":", "germanwing", "pilot", "'", "be", "lock", "out", "of", "cockpit", "'", "before", "fatal", "plane", "crash", "what", "?", "?"]
(c6-0 / lock-01
      :ARG1 (c6-7 / person
                  :ARG0-of (c6-11 / pilot-01
                                  :ARG1 (c6-12 / aircraft-type
                                               :name (c6-6 / name
                                                           :op1 "Germanwings"))))
      :ARG2 (c6-4 / out-06
                  :ARG1 c6-7
                  :ARG2 (c6-9 / cockpit))
      :time (c6-3 / before
                  :op1 (c6-8 / crash-01
                             :ARG1 (c6-2 / plane)
                             :mod (c6-1 / fatal)))
      :ARG1-of (c6-10 / cause-01
                      :ARG0 (c6-5 / amr-unknown)))

# ::snt seriously? How was he locked out? Where was the co-pilot. People are hiding some truths recently!
# ::tokens ["seriously", "?", "How", "was", "he", "locked", "out", "?", "Where", "was", "the", "co", "-", "pilot", ".", "People", "are", "hiding", "some", "truths", "recently", "!"]
# ::lemmas ["seriously", "?", "how", "be", "he", "lock", "out", "?", "where", "be", "the", "co", "-", "pilot", ".", "people", "be", "hide", "some", "truth", "recently", "!"]
(c7-2 / multi-sentence
      :snt1 (c7-10 / serious-01
                   :ARG2 (c7-1 / lock-out-03
                               :ARG1 (c7-0 / he)
                               :manner (c7-13 / amr-unknown)))
      :snt2 (c7-5 / be-located-at-91
                  :ARG1 (c7-8 / person
                              :ARG0-of (c7-12 / pilot-01))
                  :ARG2 (c7-7 / amr-unknown))
      :snt3 (c7-3 / hide-01
                  :ARG0 (c7-4 / person)
                  :ARG1 (c7-11 / truth
                               :quant (c7-6 / some))
                  :time (c7-9 / recent)))

# ::snt pilots take breaks so if one takes off the other one has a nap so seems he went out and door shut behind him
# ::tokens ["pilots", "take", "breaks", "so", "if", "one", "takes", "off", "the", "other", "one", "has", "a", "nap", "so", "seems", "he", "went", "out", "and", "door", "shut", "behind", "him"]
# ::lemmas ["pilot", "take", "break", "so", "if", "one", "take", "off", "the", "other", "one", "have", "a", "nap", "so", "seem", "he", "go", "out", "and", "door", "shut", "behind", "he"]
(c8-3 / break-19
      :ARG0 (c8-7 / pussy)
      :purpose (c8-6 / nap-01
                     :ARG0 (c8-4 / one
                                 :mod (c8-1 / other))
                     :condition (c8-13 / take-off-19
                                       :ARG0 c8-7)
                     :ARG0-of (c8-9 / cause-01
                                    :ARG1 (c8-12 / seem-01
                                                 :ARG1 (c8-14 / and
                                                              :op1 (c8-10 / go-02
                                                                          :ARG0 (c8-0 / he)
                                                                          :direction (c8-2 / out))
                                                              :op2 (c8-5 / shut-01
                                                                         :ARG1 (c8-8 / door)
                                                                         :location (c8-11 / behind
                                                                                          :op1 c8-0)))))))

# ::snt shouldn't there be rules against this though, surely if one leaves the cockpit the other should be on hand?
# ::tokens ["should", "n't", "there", "be", "rules", "against", "this", "though", ",", "surely", "if", "one", "leaves", "the", "cockpit", "the", "other", "should", "be", "on", "hand", "?"]
# ::lemmas ["should", "not", "there", "be", "rule", "against", "this", "though", ",", "surely", "if", "one", "leave", "the", "cockpit", "the", "other", "should", "be", "on", "hand", "?"]
(c9-7 / contrast-01
      :ARG1 (c9-6 / recommend-01
                  :ARG1 (c9-5 / rule-01
                              :ARG3 (c9-10 / this)
                              :polarity -)
                  :ARG1-of (c9-0 / have-concession-91))
      :ARG2 (c9-4 / recommend-01
                  :ARG1 (c9-3 / on-hand-15
                              :ARG1 (c9-1 / other)
                              :condition (c9-2 / leave-11
                                               :ARG0 c9-1
                                               :ARG1 (c9-8 / cockpit))
                              :ARG1-of (c9-9 / sure-02))
                  :polarity (c9-11 / amr-unknown)))

# ::snt Incredible report : Germanwings pilot 'was locked out of cockpit' before fatal crash
# ::tokens ["Incredible", "report", ":", "Germanwings", "pilot", "'", "was", "locked", "out", "of", "cockpit", "'", "before", "fatal", "crash"]
# ::lemmas ["incredible", "report", ":", "germanwing", "pilot", "'", "be", "lock", "out", "of", "cockpit", "'", "before", "fatal", "crash"]
(c10-7 / report-01
       :ARG1 (c10-0 / lock-01
                    :ARG1 (c10-6 / person
                                 :ARG0-of (c10-10 / pilot-01
                                                  :ARG1 (c10-11 / aircraft-type
                                                                :name (c10-5 / name
                                                                             :op1 "Germanwings"))))
                    :ARG2 (c10-3 / out-06
                                 :ARG1 c10-6
                                 :ARG2 (c10-8 / cockpit))
                    :time (c10-2 / before
                                 :op1 (c10-9 / crash-01
                                             :mod (c10-1 / fatal))))
       :mod (c10-4 / incredible))

# ::snt Yeh seems navigation controls went kapoot leavin the plane to just descend on its own thinking it's on approach.
# ::tokens ["Yeh", "seems", "navigation", "controls", "went", "kapoot", "leavin", "the", "plane", "to", "just", "descend", "on", "its", "own", "thinking", "it", "'s", "on", "approach", "."]
# ::lemmas ["Yeh", "seem", "navigation", "control", "go", "kapoot", "leavin", "the", "plane", "to", "just", "descend", "on", "its", "own", "thinking", "it", "be", "on", "approach", "."]
(c11-8 / seem-01
       :ARG1 (c11-6 / go-08
                    :ARG1 (c11-5 / control-01
                                 :ARG1 (c11-2 / navigate-01))
                    :ARG2 (c11-10 / kapoot-00
                                  :ARG0 c11-5
                                  :ARG1 (c11-3 / plane)
                                  :ARG0-of (c11-4 / cause-01
                                                  :ARG1 (c11-7 / descend-01
                                                               :ARG0 c11-3
                                                               :manner (c11-9 / think-01
                                                                              :ARG0 c11-3
                                                                              :ARG1 (c11-11 / approach-01
                                                                                            :ARG1 c11-3))
                                                               :mod (c11-0 / just)))))
       :mod (c11-1 / yeh
                   :mode expressive))

# ::snt Hi, What is your source on this please? As there are a lot of speculation with the media. Thanks PR_A -x
# ::tokens ["Hi", ",", "What", "is", "your", "source", "on", "this", "please", "?", "As", "there", "are", "a", "lot", "of", "speculation", "with", "the", "media", ".", "Thanks", "PR_A", "-x"]
# ::lemmas ["hi", ",", "what", "be", "your", "source", "on", "this", "please", "?", "as", "there", "be", "a", "lot", "of", "speculation", "with", "the", "medium", ".", "thank", "PR_A", "-x"]
(c12-3 / multi-sentence
       :snt1 (c12-0 / hi)
       :snt2 (c12-9 / cause-01
                    :ARG0 (c12-11 / speculate-01
                                  :ARG0 (c12-7 / media)
                                  :quant (c12-2 / lot))
                    :ARG1 (c12-13 / amr-unknown
                                  :ARG2-of (c12-4 / source-01
                                                  :ARG0 (c12-1 / you)
                                                  :ARG1 (c12-12 / this))))
       :snt3 (c12-10 / thank-01
                     :ARG0 (c12-5 / i)
                     :ARG1 (c12-8 / person
                                  :name (c12-6 / name
                                               :op1 "PR_A -x"))))

# ::snt : Germanwings pilot 'was locked out of cockpit' before fatal plane crash eeeeehhhh!
# ::tokens [":", "Germanwings", "pilot", "'", "was", "locked", "out", "of", "cockpit", "'", "before", "fatal", "plane", "crash", "eeeeehhhh", "!"]
# ::lemmas [":", "germanwing", "pilot", "'", "be", "lock", "out", "of", "cockpit", "'", "before", "fatal", "plane", "crash", "eeeeehhhh", "!"]
(c13-0 / lock-01
       :ARG1 (c13-7 / person
                    :ARG0-of (c13-10 / pilot-01
                                     :ARG1 (c13-11 / aircraft-type
                                                   :name (c13-6 / name
                                                                :op1 "Germanwings"))))
       :ARG2 (c13-4 / out-06
                    :ARG1 c13-7
                    :ARG2 (c13-9 / cockpit))
       :time (c13-3 / before
                    :op1 (c13-8 / crash-01
                                :ARG1 (c13-2 / plane)
                                :mod (c13-1 / fatal)))
       :mod (c13-5 / ewww
                   :mode expressive))

# ::snt pilot you take a nap and u can fly later "pilot " just going loo...pilot falls to sleep.pilot locks himself out.
# ::tokens ["pilot", "you", "take", "a", "nap", "and", "u", "can", "fly", "later", "\"", "pilot", "\"", "just", "going", "loo", "...", "pilot", "falls", "to", "sleep.pilot", "locks", "himself", "out", "."]
# ::lemmas ["pilot", "you", "take", "a", "nap", "and", "u", "can", "fly", "later", "\"", "pilot", "\"", "just", "go", "loo", "...", "pilot", "fall", "to", "sleep.pilot", "lock", "himself", "out", "."]
(c14-2 / multi-sentence
       :snt1 (c14-14 / and
                     :op1 (c14-7 / nap-01
                                 :ARG0 (c14-8 / person
                                              :ARG0-of (c14-13 / pilot-01)))
                     :op2 (c14-4 / possible-01
                                 :ARG1 (c14-1 / fly-01
                                              :ARG1 c14-8)
                                 :time (c14-5 / after
                                              :op1 c14-7)))
       :snt2 c14-14
       :op1 (c14-9 / go-08
                   :ARG1 c14-8
                   :ARG0-of (c14-12 / pilot-01))
       :ARG2 (c14-3 / loo)
       :mod (c14-0 / just)
       :op2 (c14-6 / fall-07
                   :ARG1 c14-8
                   :ARG2 (c14-11 / sleep-01
                                 :ARG0 c14-8))
       :op3 (c14-10 / lock-out-03
                    :ARG0 c14-8
                    :ARG1 c14-8))
