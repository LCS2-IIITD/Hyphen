# ::snt they are they did but the public also needs to know who this coward is and the coward group
# ::tokens ["they", "are", "they", "did", "but", "the", "public", "also", "needs", "to", "know", "who", "this", "coward", "is", "and", "the", "coward", "group"]
# ::lemmas ["they", "be", "they", "do", "but", "the", "public", "also", "need", "to", "know", "who", "this", "coward", "be", "and", "the", "coward", "group"]
(c1-5 / contrast-01
      :ARG1 (c1-4 / do-02
                  :ARG0 (c1-10 / they))
      :ARG2 (c1-2 / need-01
                  :ARG0 (c1-3 / public)
                  :ARG1 (c1-1 / know-01
                              :ARG0 c1-3
                              :ARG1 (c1-12 / and
                                           :op1 (c1-11 / person
                                                       :mod (c1-6 / coward)
                                                       :domain (c1-7 / group
                                                                     :mod (c1-9 / coward)
                                                                     :mod (c1-8 / this)
                                                                     :op2-of c1-12))))
                  :mod (c1-0 / also)))

# ::snt Please do not make this piece of trash infamous via media. Focus on the innocent soldier who was slain. And on our peaceful Canada.
# ::tokens ["Please", "do", "not", "make", "this", "piece", "of", "trash", "infamous", "via", "media", ".", "Focus", "on", "the", "innocent", "soldier", "who", "was", "slain", ".", "And", "on", "our", "peaceful", "Canada", "."]
# ::lemmas ["please", "do", "not", "make", "this", "piece", "of", "trash", "infamous", "via", "medium", ".", "focus", "on", "the", "innocent", "soldier", "who", "be", "slain", ".", "and", "on", "our", "peaceful", "Canada", "."]
(c2-3 / multi-sentence
      :snt1 (c2-8 / make-02
                  :ARG0 (c2-0 / you)
                  :ARG1 (c2-6 / infamous
                              :domain (c2-9 / piece
                                            :consist-of (c2-14 / trash)
                                            :mod (c2-12 / this))
                              :medium (c2-2 / media))
                  :mode imperative
                  :polite +)
      :snt2 (c2-4 / focus-01
                  :ARG0 (c2-17 / you)
                  :ARG2 (c2-13 / soldier
                               :ARG1-of (c2-11 / innocent-01)
                               :ARG1-of (c2-5 / slay-01))
                  :mode imperative
                  :polite +)
      :snt3 (c2-16 / and
                   :op2 (c2-10 / country
                               :name (c2-7 / name
                                           :op1 "Canada")
                               :mod (c2-15 / peaceful)
                               :poss (c2-1 / we))))

# ::snt YES absolutely
# ::tokens ["YES", "absolutely"]
# ::lemmas ["yes", "absolutely"]
(c3-0 / yes
      :degree (c3-1 / absolute))

# ::snt wrd but i kno wagwanin nex countries an dun jus get fooled by da media leve it at that
# ::tokens ["wrd", "but", "i", "kno", "wagwanin", "nex", "countries", "an", "dun", "jus", "get", "fooled", "by", "da", "media", "leve", "it", "at", "that"]
# ::lemmas ["wrd", "but", "i", "kno", "wagwanin", "nex", "country", "an", "dun", "ju", "get", "fool", "by", "da", "medium", "leve", "it", "at", "that"]
(c4-6 / contrast-01
      :ARG2 (c4-10 / and
                   :op1 (c4-9 / kno
                              :ARG0-of (c4-0 / want-01
                                             :ARG1 (c4-5 / country
                                                         :name (c4-3 / name
                                                                     :op1 "Wagwan"))))
                   :op2 (c4-1 / fool-01
                              :ARG0 (c4-2 / media)
                              :ARG1 (c4-8 / country
                                          :name (c4-4 / name
                                                      :op1 "United"
                                                      :op2 "States"))
                              :mod (c4-7 / dun))))

# ::snt gud canada deserves that shit dunt talk shit an get involved in other countries business pusssies lmaoo
# ::tokens ["gud", "canada", "deserves", "that", "shit", "dunt", "talk", "shit", "an", "get", "involved", "in", "other", "countries", "business", "pusssies", "lmaoo"]
# ::lemmas ["gud", "canada", "deserve", "that", "shit", "dunt", "talk", "shit", "an", "get", "involve", "in", "other", "country", "business", "pusssie", "lmaoo"]
(c5-15 / and
       :op1 (c5-6 / deserve-01
                  :ARG0 (c5-7 / country
                              :name (c5-5 / name
                                          :op1 "Canada")
                              :mod (c5-1 / bud))
                  :ARG1 (c5-11 / shit
                               :mod (c5-14 / that)))
       :op2 (c5-10 / talk-01
                   :ARG0 c5-7
                   :ARG1 (c5-3 / shit)
                   :polarity -)
       :op3 (c5-4 / involve-01
                  :ARG1 c5-7
                  :ARG2 (c5-8 / business
                              :poss (c5-9 / country
                                          :mod (c5-2 / other))))
       :op4 (c5-0 / laugh-01
                  :ARG0 (c5-12 / i)
                  :manner (c5-13 / loud)
                  :mode expressive))

# ::snt Oh, thats interesting it was .
# ::tokens ["Oh", ",", "that", "s", "interesting", "it", "was", "."]
# ::lemmas ["oh", ",", "that", "s", "interesting", "it", "be", "."]
(c7-2 / interest-01
      :ARG2 (c7-1 / it)
      :mod (c7-0 / oh
                 :mode expressive))

# ::snt stop giving him a platform. It doesn't matter what he looks like.
# ::tokens ["stop", "giving", "him", "a", "platform", ".", "It", "does", "n't", "matter", "what", "he", "looks", "like", "."]
# ::lemmas ["stop", "give", "he", "a", "platform", ".", "it", "do", "not", "matter", "what", "he", "look", "like", "."]
(c8-3 / multi-sentence
      :snt1 (c8-7 / stop-01
                  :ARG0 (c8-1 / you)
                  :ARG1 (c8-6 / give-01
                              :ARG0 c8-1
                              :ARG1 (c8-4 / platform)
                              :ARG2 (c8-0 / he))
                  :mode imperative)
      :snt2 (c8-5 / matter-01
                  :ARG1 (c8-8 / thing
                              :ARG2-of (c8-2 / look-02
                                             :ARG0 (c8-9 / he)))
                  :polarity -))

# ::snt what a hero! Gave his life serving this great nation. RIP.
# ::tokens ["what", "a", "hero", "!", "Gave", "his", "life", "serving", "this", "great", "nation", ".", "RIP", "."]
# ::lemmas ["what", "a", "hero", "!", "give", "his", "life", "serve", "this", "great", "nation", ".", "RIP", "."]
(c9-3 / multi-sentence
      :snt1 (c9-0 / hero
                  :degree (c9-10 / so))
      :snt2 (c9-9 / give-01
                  :ARG0 (c9-12 / he)
                  :ARG1 (c9-2 / life)
                  :ARG2 (c9-4 / serve-01
                              :ARG0 c9-12
                              :ARG2 (c9-5 / nation
                                          :mod (c9-11 / this)
                                          :mod (c9-7 / great))))
      :snt3 (c9-8 / rest-01
                  :ARG1 (c9-1 / you)
                  :manner (c9-6 / peace)))

# ::snt So stop spreading it around then.
# ::tokens ["So", "stop", "spreading", "it", "around", "then", "."]
# ::lemmas ["so", "stop", "spread", "it", "around", "then", "."]
(c10-3 / stop-01
       :ARG0 (c10-0 / you)
       :ARG1 (c10-1 / spread-03
                    :ARG0 c10-0
                    :ARG1 (c10-2 / it)
                    :location (c10-5 / around))
       :mod (c10-4 / then)
       :mode imperative)

# ::snt I expect sometime in the future, computers would be able to reconstruct the photographer's silhouette...
# ::tokens ["I", "expect", "sometime", "in", "the", "future", ",", "computers", "would", "be", "able", "to", "reconstruct", "the", "photographer", "'s", "silhouette", "..."]
# ::lemmas ["i", "expect", "sometime", "in", "the", "future", ",", "computer", "would", "be", "able", "to", "reconstruct", "the", "photographer", "'s", "silhouette", "..."]
(c11-2 / expect-01
       :ARG0 (c11-4 / i)
       :ARG1 (c11-5 / possible-01
                    :ARG1 (c11-6 / reconstruct-01
                                 :ARG0 (c11-7 / computer)
                                 :ARG1 (c11-8 / silhouette
                                              :poss (c11-9 / person
                                                           :ARG0-of (c11-1 / photograph-01))))
                    :time (c11-3 / sometime
                                 :op1 (c11-0 / future))))

# ::snt real tho
# ::tokens ["real", "tho"]
# ::lemmas ["real", "tho"]
(c12-0 / have-concession-91
       :ARG2 (c12-1 / real-04))

# ::snt I understand that but there is always TOO much focus on it.
# ::tokens ["I", "understand", "that", "but", "there", "is", "always", "TOO", "much", "focus", "on", "it", "."]
# ::lemmas ["i", "understand", "that", "but", "there", "be", "always", "TOO", "much", "focus", "on", "it", "."]
(c13-4 / contrast-01
       :ARG1 (c13-2 / understand-01
                    :ARG0 (c13-3 / i)
                    :ARG1 (c13-7 / that))
       :ARG2 (c13-0 / focus-01
                    :ARG2 (c13-5 / it)
                    :quant (c13-1 / much
                                  :degree (c13-6 / too))
                    :time (c13-8 / always)))

# ::snt that soldier had nothing to do with decison he's just doing what he's gotta do
# ::tokens ["that", "soldier", "had", "nothing", "to", "do", "with", "decison", "he", "'s", "just", "doing", "what", "he", "'s", "got", "ta", "do"]
# ::lemmas ["that", "soldier", "have", "nothing", "to", "do", "with", "decison", "he", "be", "just", "do", "what", "he", "be", "got", "to", "do"]
(c14-0 / have-to-do-with-04
       :ARG0 (c14-7 / soldier
                    :mod (c14-8 / that))
       :ARG1 (c14-5 / decison-01
                    :ARG1 (c14-2 / do-02
                                 :ARG0 c14-7
                                 :ARG1 (c14-6 / thing
                                              :ARG1-of (c14-9 / do-02
                                                              :ARG0 c14-7
                                                              :ARG2-of (c14-3 / obligate-01)))
                                 :mod (c14-1 / just)))
       :ARG2 (c14-4 / nothing))

# ::snt I agree with Jeff!
# ::tokens ["I", "agree", "with", "Jeff", "!"]
# ::lemmas ["i", "agree", "with", "Jeff", "!"]
(c15-3 / agree-01
       :ARG0 (c15-2 / i)
       :ARG2 (c15-1 / person
                    :name (c15-0 / name
                                 :op1 "Jeff")))

# ::snt Yes because if we just let go of it Canada will be terrorized just as USA
# ::tokens ["Yes", "because", "if", "we", "just", "let", "go", "of", "it", "Canada", "will", "be", "terrorized", "just", "as", "USA"]
# ::lemmas ["yes", "because", "if", "we", "just", "let", "go", "of", "it", "Canada", "will", "be", "terrorize", "just", "as", "USA"]
(c16-8 / cause-01
       :ARG0 (c16-13 / terrorize-01
                     :ARG1 (c16-7 / country
                                  :name (c16-5 / name
                                               :op1 "Canada"))
                     :condition (c16-3 / let-01
                                       :ARG0 (c16-1 / we)
                                       :ARG1 (c16-9 / go-01
                                                    :ARG1 (c16-4 / it))
                                       :mod (c16-0 / just))
                     :ARG1-of (c16-10 / resemble-01
                                      :ARG2 (c16-11 / terrorize-01
                                                    :ARG0 (c16-12 / country
                                                                  :name (c16-6 / name
                                                                               :op1 "USA"))
                                                    :mod (c16-14 / just))))
       :mod (c16-2 / yes))

# ::snt Class doesn't count when a murderer kills one of yours
# ::tokens ["Class", "does", "n't", "count", "when", "a", "murderer", "kills", "one", "of", "yours"]
# ::lemmas ["class", "do", "not", "count", "when", "a", "murderer", "kill", "one", "of", "your"]
(c17-5 / count-04
       :ARG1 (c17-4 / class)
       :time (c17-7 / kill-01
                    :ARG0 (c17-3 / person
                                 :ARG0-of (c17-1 / murder-01))
                    :ARG1 (c17-8 / person
                                 :ARG1-of (c17-2 / include-91
                                                 :ARG2 (c17-0 / you))
                                 :ARG0-of (c17-6 / murder-01)
                                 :quant 1))
       :polarity -)

# ::snt Class is appreciating one of our own soldiers that is the good of Canada (Cirillo) not the bad (Bibeau)
# ::tokens ["Class", "is", "appreciating", "one", "of", "our", "own", "soldiers", "that", "is", "the", "good", "of", "Canada", "(", "Cirillo", ")", "not", "the", "bad", "(", "Bibeau", ")"]
# ::lemmas ["class", "be", "appreciate", "one", "of", "our", "own", "soldier", "that", "be", "the", "good", "of", "Canada", "(", "Cirillo", ")", "not", "the", "bad", "(", "Bibeau", ")"]
(c18-13 / appreciate-02
        :ARG0 (c18-9 / class)
        :ARG1 (c18-12 / soldier
                      :ARG1-of (c18-4 / include-91
                                      :ARG2 (c18-3 / soldier
                                                   :poss (c18-0 / we)))
                      :ARG1-of (c18-10 / good-02
                                       :ARG2 (c18-8 / country
                                                    :name (c18-5 / name
                                                                 :op1 "Canada"))
                                       :ARG1-of (c18-11 / instead-of-91
                                                        :ARG2 c18-13
                                                        :ARG0 c18-9
                                                        :ARG1 (c18-1 / soldier
                                                                     :ARG1-of (c18-2 / bad-02)
                                                                     :domain (c18-7 / person
                                                                                    :name (c18-6 / name
                                                                                                 :op1 "Bibeau")))))
                      :quant 1))

# ::snt exactly is not the persons fault is the countrys fault
# ::tokens ["exactly", "is", "not", "the", "persons", "fault", "is", "the", "countrys", "fault"]
# ::lemmas ["exactly", "be", "not", "the", "person", "fault", "be", "the", "country", "fault"]
(c19-0 / fault-01
       :ARG1 (c19-3 / person)
       :ARG2 (c19-2 / fault-01
                    :ARG1 (c19-4 / country)
                    :ARG2 c19-2)
       :mod (c19-1 / exact)
       :polarity -)

# ::snt How about have some class and focus on the victim instead.
# ::tokens ["How", "about", "have", "some", "class", "and", "focus", "on", "the", "victim", "instead", "."]
# ::lemmas ["how", "about", "have", "some", "class", "and", "focus", "on", "the", "victim", "instead", "."]
(c20-0 / have-04
       :ARG1 (c20-7 / and
                    :op1 (c20-5 / class
                                :mod (c20-6 / some))
                    :op2 (c20-1 / focus-01
                                :ARG2 (c20-4 / victim)))
       :ARG1-of (c20-3 / instead-of-91)
       :mod (c20-2 / amr-unknown))
