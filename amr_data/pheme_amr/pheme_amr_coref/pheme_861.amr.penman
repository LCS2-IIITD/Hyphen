# ::snt As has most religions. Stop,worshipping sky pixies and many of these problems will vanish.
# ::tokens ["As", "has", "most", "religions", ".", "Stop", ",", "worshipping", "sky", "pixies", "and", "many", "of", "these", "problems", "will", "vanish", "."]
# ::lemmas ["as", "have", "most", "religion", ".", "stop", ",", "worship", "sky", "pixie", "and", "many", "of", "these", "problem", "will", "vanish", "."]
(c1-2 / multi-sentence
      :snt1 (c1-10 / resemble-01
                   :ARG2 (c1-7 / religion
                               :mod (c1-9 / most)))
      :snt2 (c1-15 / and
                   :op1 (c1-12 / stop-01
                               :ARG0 (c1-0 / you)
                               :ARG1 (c1-5 / ship-01
                                           :ARG0 c1-0
                                           :ARG1 (c1-11 / pussy
                                                        :mod (c1-1 / sky)))
                               :mode imperative)
                   :op2 (c1-8 / vanish-01
                              :ARG1 (c1-14 / problem
                                           :quant (c1-3 / many)
                                           :ARG1-of (c1-6 / include-91
                                                          :ARG2 (c1-4 / problem
                                                                      :mod (c1-13 / this)))))))

# ::snt tell ur family u will never return when you go to stay among them to experience their so called caring ness lov
# ::tokens ["tell", "ur", "family", "u", "will", "never", "return", "when", "you", "go", "to", "stay", "among", "them", "to", "experience", "their", "so", "called", "caring", "ness", "lov"]
# ::lemmas ["tell", "ur", "family", "u", "will", "never", "return", "when", "you", "go", "to", "stay", "among", "they", "to", "experience", "their", "so", "call", "care", "ness", "lov"]
(c2-12 / tell-01
       :ARG0 (c2-1 / you)
       :ARG1 (c2-8 / return-01
                   :ARG1 c2-1
                   :time (c2-5 / ever)
                   :time (c2-10 / go-02
                                :ARG0 c2-1
                                :ARG4 (c2-13 / among
                                             :op1 (c2-2 / family
                                                        :ARG1-of (c2-0 / have-org-role-91
                                                                       :ARG0 c2-1
                                                                       :ARG2 (c2-3 / member))))
                                :purpose (c2-11 / stay-01
                                                :ARG1 c2-1
                                                :ARG3 c2-2
                                                :purpose (c2-4 / experience-01
                                                               :ARG0 c2-1
                                                               :ARG1 (c2-7 / ness
                                                                           :poss c2-2
                                                                           :ARG0-of (c2-9 / care-01)
                                                                           :mod (c2-6 / so-called)))))
                   :polarity -)
       :ARG2 c2-2)

# ::snt Hope this becomes a way of life all over the world including the countries where Muslims are in majority .
# ::tokens ["Hope", "this", "becomes", "a", "way", "of", "life", "all", "over", "the", "world", "including", "the", "countries", "where", "Muslims", "are", "in", "majority", "."]
# ::lemmas ["hope", "this", "become", "a", "way", "of", "life", "all", "over", "the", "world", "include", "the", "country", "where", "Muslims", "be", "in", "majority", "."]
(c3-0 / hope-01
      :ARG1 (c3-4 / become-01
                  :ARG1 (c3-11 / this)
                  :ARG2 (c3-1 / way
                              :manner-of (c3-2 / live-01)
                              :location (c3-12 / all-over
                                               :op1 (c3-6 / world))
                              :ARG2-of (c3-5 / include-01
                                             :ARG1 (c3-10 / country
                                                          :location-of (c3-3 / majority
                                                                             :domain (c3-8 / person
                                                                                           :mod (c3-9 / religious-group
                                                                                                      :name (c3-7 / name
                                                                                                                  :op1 "Muslim")))))))))

# ::snt so please think before you speak..
# ::tokens ["so", "please", "think", "before", "you", "speak", ".."]
# ::lemmas ["so", "please", "think", "before", "you", "speak", ".."]
(c4-2 / cause-01
      :ARG1 (c4-4 / think-01
                  :ARG0 (c4-0 / you)
                  :time (c4-1 / before
                              :op1 (c4-3 / speak-01
                                         :ARG0 c4-0))
                  :mode imperative
                  :polite +))

# ::snt Let's hope the hostages are the best thing to come out the
# ::tokens ["Let", "'s", "hope", "the", "hostages", "are", "the", "best", "thing", "to", "come", "out", "the"]
# ::lemmas ["let", "us", "hope", "the", "hostage", "be", "the", "good", "thing", "to", "come", "out", "the"]
(c5-0 / hope-01
      :ARG0 (c5-1 / we)
      :ARG1 (c5-7 / have-degree-91
                  :ARG1 (c5-3 / hostage)
                  :ARG2 (c5-5 / good-02
                              :ARG1 c5-3)
                  :ARG3 (c5-2 / most)
                  :ARG5 (c5-6 / thing
                              :ARG1-of (c5-4 / come-out-09)))
      :mode imperative)

# ::snt lol wait so beacause bombs go off in Iraq and Pakistan you think they're bad people?
# ::tokens ["lol", "wait", "so", "beacause", "bombs", "go", "off", "in", "Iraq", "and", "Pakistan", "you", "think", "they", "'re", "bad", "people", "?"]
# ::lemmas ["lol", "wait", "so", "beacause", "bomb", "go", "off", "in", "Iraq", "and", "Pakistan", "you", "think", "they", "be", "bad", "people", "?"]
(c6-9 / wait-01
      :ARG1 (c6-15 / you)
      :ARG2 (c6-8 / go-off-16
                  :ARG1 (c6-5 / bomb)
                  :time (c6-3 / after
                              :op1 (c6-6 / now))
                  :location (c6-10 / and
                                   :op1 (c6-17 / country
                                               :name (c6-16 / name
                                                            :op1 "Iraq"))
                                   :op2 (c6-2 / country
                                              :name (c6-0 / name
                                                          :op1 "Pakistan")))
                  :ARG0-of (c6-14 / cause-01
                                  :ARG1 (c6-19 / think-01
                                               :ARG0 c6-15
                                               :ARG1 (c6-1 / person
                                                           :ARG1-of (c6-13 / bad-07)
                                                           :domain (c6-18 / they))
                                               :polarity (c6-7 / amr-unknown))))
      :mod (c6-4 / laugh-01
                 :ARG0 (c6-11 / i)
                 :manner (c6-12 / loud)
                 :mode expressive)
      :mode imperative)

# ::snt they re beasts not humans. Sympathy showing means faxing own legs or kissing on black Mamba or rattle snakes lips
# ::tokens ["they", "re", "beasts", "not", "humans", ".", "Sympathy", "showing", "means", "faxing", "own", "legs", "or", "kissing", "on", "black", "Mamba", "or", "rattle", "snakes", "lips"]
# ::lemmas ["they", "re", "beast", "not", "human", ".", "sympathy", "show", "mean", "fax", "own", "leg", "or", "kissing", "on", "black", "Mamba", "or", "rattle", "snake", "lip"]
(c7-0 / multi-sentence
      :snt1 (c7-17 / contrast-01
                   :ARG1 (c7-1 / concern-02
                               :ARG0 (c7-19 / they)
                               :ARG1 (c7-7 / beast))
                   :ARG2 (c7-13 / concern-02
                                :ARG0 c7-19
                                :ARG1 (c7-4 / human)
                                :polarity -))
      :snt2 (c7-10 / mean-01
                   :ARG1 (c7-2 / show-04
                               :ARG1 (c7-8 / Sympathy))
                   :ARG2 (c7-16 / or
                                :op1 (c7-5 / fax-01
                                           :ARG1 (c7-6 / leg
                                                       :part-of (c7-3 / animal
                                                                      :name (c7-9 / name
                                                                                  :op1 "Mamba")
                                                                      :ARG1-of (c7-12 / black-04))))
                                :op2 (c7-14 / kiss-01
                                            :ARG1 c7-3)
                                :op3 (c7-11 / rattle-01
                                            :ARG1 (c7-18 / lip
                                                         :part-of (c7-15 / snake))))))

# ::snt You'd be surprised at what I know wee sky pixie man.
# ::tokens ["You", "'d", "be", "surprised", "at", "what", "I", "know", "wee", "sky", "pixie", "man", "."]
# ::lemmas ["you", "would", "be", "surprised", "at", "what", "i", "know", "wee", "sky", "pixie", "man", "."]
(c8-7 / say-01
      :ARG0 (c8-4 / i)
      :ARG1 (c8-3 / surprise-01
                  :ARG0 (c8-8 / thing
                              :ARG1-of (c8-5 / know-01
                                             :ARG0 c8-4))
                  :ARG1 (c8-0 / you
                              :mod (c8-2 / man
                                         :mod (c8-6 / pixie)
                                         :mod (c8-1 / wee))
                              :ARG2-of c8-7)))

# ::snt We love you back.
# ::tokens ["We", "love", "you", "back", "."]
# ::lemmas ["we", "love", "you", "back", "."]
(c9-1 / love-01
      :ARG0 (c9-0 / we)
      :ARG1 (c9-2 / you)
      :mod (c9-3 / back))

# ::snt thanks but no - seen enough to already have idea They have my sympathy but Im used to freedom
# ::tokens ["thanks", "but", "no", "-", "seen", "enough", "to", "already", "have", "idea", "They", "have", "my", "sympathy", "but", "I", "m", "used", "to", "freedom"]
# ::lemmas ["thank", "but", "no", "-", "see", "enough", "to", "already", "have", "idea", "they", "have", "my", "sympathy", "but", "i", "m", "use", "to", "freedom"]
(c10-2 / multi-sentence
       :snt1 (c10-11 / contrast-01
                     :ARG1 (c10-16 / thank-01
                                   :ARG0 (c10-8 / i))
                     :ARG2 (c10-9 / no))
       :snt2 (c10-0 / have-quant-91
                    :ARG1 (c10-14 / see-01
                                  :ARG0 (c10-12 / i))
                    :ARG3 (c10-6 / enough)
                    :ARG6 (c10-17 / have-03
                                  :ARG0 c10-12
                                  :ARG1 (c10-1 / idea
                                               :ARG0 (c10-13 / they)
                                               :ARG1 (c10-7 / sympathy
                                                            :poss c10-12))
                                  :topic-of c10-1
                                  :time (c10-15 / already)))
       :snt3 (c10-10 / contrast-01
                     :ARG1 (c10-3 / use-02
                                  :ARG0 (c10-5 / i)
                                  :ARG1 (c10-4 / free-04)
                                  :ARG2-of c10-10)
                     :ARG0 c10-5
                     :ARG1 c10-4))

# ::snt but what if their belief is killing innocents people!
# ::tokens ["but", "what", "if", "their", "belief", "is", "killing", "innocents", "people", "!"]
# ::lemmas ["but", "what", "if", "their", "belief", "be", "kill", "innocent", "people", "!"]
(c11-4 / contrast-01
       :ARG2 (c11-5 / suppose-01
                    :ARG1 (c11-0 / believe-01
                                 :ARG0 (c11-6 / they)
                                 :ARG1 (c11-2 / kill-01
                                              :ARG1 (c11-3 / person
                                                           :ARG1-of (c11-1 / innocent-01))))))

# ::snt come back and told me Iraqis are the nicest people they have ever met.
# ::tokens ["come", "back", "and", "told", "me", "Iraqis", "are", "the", "nicest", "people", "they", "have", "ever", "met", "."]
# ::lemmas ["come", "back", "and", "tell", "i", "Iraqis", "be", "the", "nice", "people", "they", "have", "ever", "meet", "."]
(c12-14 / and
        :op1 (c12-10 / come-01
                     :ARG1 (c12-1 / you)
                     :ARG4 (c12-3 / back)
                     :mode imperative)
        :op2 (c12-13 / tell-01
                     :ARG0 c12-1
                     :ARG1 (c12-0 / have-degree-91
                                  :ARG1 (c12-8 / person
                                               :mod (c12-9 / country
                                                           :name (c12-6 / name
                                                                        :op1 "Iraq")))
                                  :ARG2 (c12-7 / nice-01)
                                  :ARG3 (c12-2 / most)
                                  :ARG5 c12-8
                                  :ARG1-of (c12-11 / meet-02
                                                   :ARG0 (c12-12 / they)
                                                   :time (c12-4 / ever))))
        :ARG2 (c12-5 / i))

# ::snt don't ride on both the boats at a time. Have sympathy for honkeys and other nice ppl ..not for the clipping flaky piglets
# ::tokens ["do", "n't", "ride", "on", "both", "the", "boats", "at", "a", "time", ".", "Have", "sympathy", "for", "honkeys", "and", "other", "nice", "ppl", "..", "not", "for", "the", "clipping", "flaky", "piglets"]
# ::lemmas ["do", "not", "ride", "on", "both", "the", "boat", "at", "a", "time", ".", "have", "sympathy", "for", "honkey", "and", "other", "nice", "ppl", "..", "not", "for", "the", "clip", "flaky", "piglet"]
(c13-2 / multi-sentence
       :snt1 (c13-9 / ride-01
                    :ARG0 (c13-0 / you)
                    :ARG1 (c13-3 / boat
                                 :mod (c13-10 / both))
                    :time (c13-17 / at-a-time)
                    :polarity -
                    :mode imperative)
       :snt2 (c13-11 / contrast-01
                     :ARG1 (c13-14 / sympathize-01
                                   :ARG0 (c13-13 / you)
                                   :ARG1 (c13-6 / and
                                                :op1 (c13-12 / donkey)
                                                :op2 (c13-8 / ppl
                                                            :ARG1-of (c13-7 / nice-01)
                                                            :mod (c13-4 / other)))
                                   :mode imperative)
                     :ARG2 (c13-5 / sympathize-01
                                  :ARG0 c13-13
                                  :ARG1 (c13-16 / piglet
                                                :ARG0-of (c13-15 / clip-01)
                                                :ARG1-of (c13-1 / flake-01))
                                  :mode imperative
                                  :polarity -)))

# ::snt Until the hostages are released you mean?
# ::tokens ["Until", "the", "hostages", "are", "released", "you", "mean", "?"]
# ::lemmas ["until", "the", "hostage", "be", "release", "you", "mean", "?"]
(c14-2 / mean-01
       :ARG0 (c14-1 / you)
       :ARG2 (c14-4 / be-temporally-at-91
                    :ARG2 (c14-3 / until
                                 :op1 (c14-5 / release-01
                                             :ARG1 (c14-0 / hostage))))
       :polarity (c14-6 / amr-unknown))

# ::snt most Muslims arre good caring genuine people - just like us Aussies One does not define all
# ::tokens ["most", "Muslims", "arre", "good", "caring", "genuine", "people", "-", "just", "like", "us", "Aussies", "One", "does", "not", "define", "all"]
# ::lemmas ["most", "Muslims", "arre", "good", "care", "genuine", "people", "-", "just", "like", "us", "Aussies", "One", "do", "not", "define", "all"]
(c15-10 / define-01
        :ARG0 (c15-8 / person
                     :ARG1-of (c15-4 / include-91
                                     :ARG2 (c15-14 / person
                                                   :mod (c15-9 / religious-group
                                                               :name (c15-6 / name
                                                                            :op1 "Islam")))
                                     :ARG3 (c15-2 / most))
                     :ARG0-of (c15-11 / care-01
                                      :mod (c15-12 / genuine)))
        :ARG1 (c15-15 / all)
        :ARG1-of (c15-5 / resemble-01
                        :ARG2 (c15-3 / person
                                     :mod (c15-13 / country
                                                  :name (c15-7 / name
                                                               :op1 "Australia"))
                                     :domain (c15-1 / we))
                        :mod (c15-0 / just))
        :polarity -)

# ::snt always gotta be one - whatever you want to believe and whatever floats your boat
# ::tokens ["always", "got", "ta", "be", "one", "-", "whatever", "you", "want", "to", "believe", "and", "whatever", "floats", "your", "boat"]
# ::lemmas ["always", "got", "to", "be", "one", "-", "whatever", "you", "want", "to", "believe", "and", "whatever", "float", "your", "boat"]
(c16-6 / obligate-01
       :ARG1 (c16-0 / you)
       :ARG2 (c16-2 / one
                    :domain c16-0)
       :time (c16-11 / always)
       :ARG1-of (c16-3 / mean-01
                       :ARG2 (c16-8 / and
                                    :op1 (c16-1 / whatever
                                                :ARG1-of (c16-5 / believe-01
                                                                :ARG0 c16-0
                                                                :ARG1-of (c16-9 / want-01
                                                                                :ARG0 c16-0)))
                                    :op2 (c16-7 / whatever
                                                :ARG0-of (c16-4 / float-01
                                                                :ARG1 (c16-10 / boat
                                                                              :poss c16-0))))))

# ::snt -
# ::tokens ["-"]
# ::lemmas ["-"]
(c17-0 / amr-empty)

# ::snt : is the best thing to come out of the :// Australia
# ::tokens [":", "is", "the", "best", "thing", "to", "come", "out", "of", "the", ":", "//", "Australia"]
# ::lemmas [":", "be", "the", "good", "thing", "to", "come", "out", "of", "the", ":", "//", "Australia"]
(c18-6 / thing
       :ARG1-of (c18-0 / have-degree-91
                       :ARG2 (c18-5 / good-02
                                    :ARG1 c18-6)
                       :ARG3 (c18-1 / most))
       :ARG1-of (c18-4 / come-out-09
                       :ARG2 (c18-3 / country
                                    :name (c18-2 / name
                                                 :op1 "Australia"))))

# ::snt go and stay in Pakistan and Iraq and see their real colors.
# ::tokens ["go", "and", "stay", "in", "Pakistan", "and", "Iraq", "and", "see", "their", "real", "colors", "."]
# ::lemmas ["go", "and", "stay", "in", "Pakistan", "and", "Iraq", "and", "see", "their", "real", "color", "."]
(c19-11 / and
        :op1 (c19-7 / go-02
                    :ARG0 (c19-0 / you)
                    :mode imperative)
        :op2 (c19-10 / stay-01
                     :ARG1 c19-0
                     :ARG3 (c19-2 / and
                                  :op1 (c19-6 / country
                                              :name (c19-3 / name
                                                           :op1 "Pakistan"))
                                  :op2 (c19-5 / country
                                              :name (c19-4 / name
                                                           :op1 "Iraq")))
                     :mode imperative)
        :op3 (c19-1 / see-01
                    :ARG0 c19-0
                    :ARG1 (c19-9 / color
                                 :ARG1-of (c19-8 / real-04)
                                 :poss c19-2)
                    :mode imperative))

# ::snt you speak from another point of departure because you don't have any idea about islam. Good luck.
# ::tokens ["you", "speak", "from", "another", "point", "of", "departure", "because", "you", "do", "n't", "have", "any", "idea", "about", "islam", ".", "Good", "luck", "."]
# ::lemmas ["you", "speak", "from", "another", "point", "of", "departure", "because", "you", "do", "not", "have", "any", "idea", "about", "islam", ".", "good", "luck", "."]
(c20-3 / multi-sentence
       :snt1 (c20-12 / speak-01
                     :ARG0 (c20-1 / you)
                     :source (c20-7 / point
                                    :mod (c20-13 / another)
                                    :location-of (c20-8 / depart-01))
                     :ARG1-of (c20-9 / cause-01
                                     :ARG0 (c20-0 / have-03
                                                  :ARG0 c20-1
                                                  :ARG1 (c20-5 / idea
                                                               :topic (c20-10 / religious-group
                                                                              :name (c20-6 / name
                                                                                           :op1 "Islam"))
                                                               :mod (c20-4 / any))
                                                  :polarity -)))
       :snt2 (c20-2 / luck
                    :ARG1-of (c20-11 / good-02)))

# ::snt ": is the best thing to come out of the ://
# ::tokens ["\"", ":", "is", "the", "best", "thing", "to", "come", "out", "of", "the", ":", "//"]
# ::lemmas ["\"", ":", "be", "the", "good", "thing", "to", "come", "out", "of", "the", ":", "//"]
(c21-5 / thing
       :ARG1-of (c21-3 / come-out-09
                       :ARG2 (c21-2 / book))
       :ARG1-of (c21-0 / have-degree-91
                       :ARG2 (c21-4 / good-02
                                    :ARG1 c21-5)
                       :ARG3 (c21-1 / most)))

# ::snt I'm Iraqi myself and I have been times to Iraq. I know many people who have been and all have
# ::tokens ["I", "'m", "Iraqi", "myself", "and", "I", "have", "been", "times", "to", "Iraq", ".", "I", "know", "many", "people", "who", "have", "been", "and", "all", "have"]
# ::lemmas ["i", "be", "Iraqi", "myself", "and", "i", "have", "be", "time", "to", "Iraq", ".", "i", "know", "many", "people", "who", "have", "be", "and", "all", "have"]
(c22-0 / multi-sentence
       :snt1 (c22-15 / and
                     :op1 (c22-8 / person
                                 :mod (c22-10 / country
                                              :name (c22-6 / name
                                                           :op1 "Iraq"))
                                 :domain (c22-4 / i))
                     :op2 (c22-1 / be-located-at-91
                                 :ARG1 c22-4
                                 :ARG2 c22-10
                                 :time (c22-13 / time)))
       :snt2 (c22-3 / and
                    :op1 (c22-5 / know-02
                                :ARG0 (c22-11 / i)
                                :ARG1 (c22-14 / person
                                              :quant (c22-9 / many)
                                              :ARG1-of (c22-12 / be-located-at-91
                                                               :ARG2 c22-10)))
                    :op2 (c22-2 / know-02
                                :ARG0 (c22-7 / all)
                                :ARG1 c22-14)))

# ::snt who defined all is their prophet, and he was a criminal killed many people in wars against unbelievers.
# ::tokens ["who", "defined", "all", "is", "their", "prophet", ",", "and", "he", "was", "a", "criminal", "killed", "many", "people", "in", "wars", "against", "unbelievers", "."]
# ::lemmas ["who", "define", "all", "be", "their", "prophet", ",", "and", "he", "be", "a", "criminal", "kill", "many", "people", "in", "war", "against", "unbeliever", "."]
(c23-12 / and
        :op1 (c23-8 / define-01
                    :ARG0 (c23-7 / person
                                 :ARG0-of (c23-0 / have-rel-role-91
                                                 :ARG1 (c23-10 / they)
                                                 :ARG2 (c23-11 / prophet)))
                    :ARG1 (c23-5 / all))
        :op2 (c23-6 / kill-01
                    :ARG0 c23-7
                    :ARG1 (c23-3 / person
                                 :quant (c23-2 / many))
                    :ARG2 (c23-1 / war-01
                                 :ARG0 c23-7
                                 :ARG1 (c23-9 / person
                                              :ARG0-of (c23-4 / believe-01
                                                              :polarity -)))))

# ::snt great movement, this is what Australia is about. We can't do anything about the hostages, but we can unite against the backlash
# ::tokens ["great", "movement", ",", "this", "is", "what", "Australia", "is", "about", ".", "We", "ca", "n't", "do", "anything", "about", "the", "hostages", ",", "but", "we", "can", "unite", "against", "the", "backlash"]
# ::lemmas ["great", "movement", ",", "this", "be", "what", "Australia", "be", "about", ".", "we", "can", "not", "do", "anything", "about", "the", "hostage", ",", "but", "we", "can", "unite", "against", "the", "backlash"]
(c24-2 / multi-sentence
       :snt1 (c24-7 / movement-07
                    :mod (c24-10 / great)
                    :topic (c24-14 / this))
       :snt2 (c24-9 / concern-02
                    :ARG0 (c24-8 / country
                                 :name (c24-6 / name
                                              :op1 "Australia"))
                    :ARG1 c24-14)
       :snt3 (c24-13 / contrast-01
                     :ARG1 (c24-11 / possible-01
                                   :ARG1 (c24-12 / do-02
                                                 :ARG0 (c24-1 / we)
                                                 :ARG1 (c24-16 / anything)
                                                 :ARG2 (c24-0 / hostage))
                                   :polarity -)
                     :ARG2 (c24-15 / possible-01
                                   :ARG1 (c24-3 / unite-01
                                                :ARG1 c24-1
                                                :ARG2 (c24-5 / oppose-01
                                                             :ARG0 c24-1
                                                             :ARG1 (c24-4 / backlash-01))))))
