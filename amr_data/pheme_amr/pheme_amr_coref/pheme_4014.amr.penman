# ::snt : If liberty means anything at all, it means the right to tell people what they do not want to hear Orwell
# ::tokens [":", "If", "liberty", "means", "anything", "at", "all", ",", "it", "means", "the", "right", "to", "tell", "people", "what", "they", "do", "not", "want", "to", "hear", "Orwell"]
# ::lemmas [":", "if", "liberty", "mean", "anything", "at", "all", ",", "it", "mean", "the", "right", "to", "tell", "people", "what", "they", "do", "not", "want", "to", "hear", "Orwell"]
(c1-3 / mean-01
      :ARG1 (c1-2 / liberty)
      :ARG2 (c1-6 / right-05
                  :ARG2 (c1-9 / tell-01
                              :ARG1 (c1-8 / thing
                                          :ARG1-of (c1-0 / hear-01
                                                         :ARG0 (c1-5 / person)
                                                         :ARG1-of (c1-1 / want-01
                                                                        :ARG0 c1-5
                                                                        :polarity -)))
                              :ARG2 (c1-10 / person)))
      :condition (c1-7 / mean-01
                       :ARG1 c1-2
                       :ARG2 (c1-11 / anything)
                       :mod (c1-4 / at-all)))

# ::snt A complete GIF guide to Muslims Denouncing terrorism.
# ::tokens ["A", "complete", "GIF", "guide", "to", "Muslims", "Denouncing", "terrorism", "."]
# ::lemmas ["a", "complete", "GIF", "guide", "to", "Muslims", "Denouncing", "terrorism", "."]
(c2-4 / guide-01
      :ARG1 (c2-1 / person
                  :mod (c2-2 / religious-group
                             :name (c2-0 / name
                                         :op1 "Muslim"))
                  :ARG0-of (c2-3 / deny-01
                                 :ARG1 (c2-7 / terrorism)))
      :ARG2 (c2-6 / thing
                  :name c2-0
                  :op1 "GIF")
      :ARG1-of (c2-5 / complete-02))

# ::snt Should be on T-shirts and posters ,esp.,Paris today.
# ::tokens ["Should", "be", "on", "T", "-", "shirts", "and", "posters", ",", "esp", ".", ",Paris", "today", "."]
# ::lemmas ["should", "be", "on", "T", "-", "shirt", "and", "poster", ",", "esp", ".", ",paris", "today", "."]
(c3-3 / recommend-01
      :ARG1 (c3-0 / be-located-at-91
                  :ARG2 (c3-7 / and
                              :op1 (c3-6 / t-shirt)
                              :op2 (c3-2 / poster))
                  :time (c3-5 / today)
                  :location (c3-4 / city
                                  :name (c3-1 / name
                                              :op1 "Paris"))))

# ::snt religionuperstition and fair game for satire. Je suis Charlie.
# ::tokens ["religionuperstition", "and", "fair", "game", "for", "satire", ".", "Je", "suis", "Charlie", "."]
# ::lemmas ["religionuperstition", "and", "fair", "game", "for", "satire", ".", "Je", "suis", "Charlie", "."]
(c4-2 / multi-sentence
      :snt1 (c4-9 / and
                  :op1 (c4-6 / religion)
                  :op2 (c4-7 / game
                             :ARG1-of (c4-1 / fair-01)
                             :purpose (c4-8 / satire)))
      :snt2 (c4-3 / say-01
                  :ARG1 (c4-0 / Je
                              :mode expressive)
                  :ARG2 (c4-5 / person
                              :name (c4-4 / name
                                          :op1 "Charlie"))))

# ::snt Perfect choice so many relevant quotes from literature. Here's one
# ::tokens ["Perfect", "choice", "so", "many", "relevant", "quotes", "from", "literature", ".", "Here", "'s", "one"]
# ::lemmas ["perfect", "choice", "so", "many", "relevant", "quote", "from", "literature", ".", "here", "be", "one"]
(c5-2 / multi-sentence
      :snt1 (c5-7 / choose-01
                  :ARG1 (c5-4 / quote-01
                              :ARG2 (c5-1 / literature)
                              :ARG1-of (c5-6 / relevant-01)
                              :ARG1-of (c5-0 / have-quant-91
                                             :ARG2 (c5-5 / many)
                                             :ARG3 (c5-9 / so)))
                  :ARG1-of (c5-8 / perfect-02))
      :snt2 (c5-10 / here
                   :location-of (c5-3 / one)))

# ::snt this attack is as aweful as any other act of provocation towards a peaceful peoples.
# ::tokens ["this", "attack", "is", "as", "aweful", "as", "any", "other", "act", "of", "provocation", "towards", "a", "peaceful", "peoples", "."]
# ::lemmas ["this", "attack", "be", "as", "aweful", "as", "any", "other", "act", "of", "provocation", "towards", "a", "peaceful", "people", "."]
(c6-10 / awe-01
       :ARG0 (c6-4 / attack-01
                   :mod (c6-8 / this))
       :ARG2-of (c6-0 / have-degree-91
                      :ARG1 c6-4
                      :ARG3 (c6-3 / equal)
                      :ARG4 (c6-5 / act-02
                                  :ARG1 (c6-6 / provoke-01
                                              :ARG1 (c6-9 / people
                                                          :mod (c6-1 / peaceful)))
                                  :mod (c6-2 / other)
                                  :mod (c6-7 / any))))

# ::snt Stop Lying This Attack Was Nothing To Do With Free Speech
# ::tokens ["Stop", "Lying", "This", "Attack", "Was", "Nothing", "To", "Do", "With", "Free", "Speech"]
# ::lemmas ["stop", "lie", "this", "Attack", "be", "nothing", "to", "do", "with", "Free", "Speech"]
(c8-6 / stop-01
      :ARG0 (c8-1 / you)
      :ARG1 (c8-2 / lie-08
                  :ARG0 c8-1
                  :ARG1 (c8-8 / attack-01
                              :mod (c8-7 / this))
                  :ARG2-of (c8-0 / have-to-do-with-04
                                 :ARG1 (c8-4 / speak-01
                                             :ARG3-of (c8-3 / free-04))
                                 :ARG2 (c8-5 / nothing)))
      :mode imperative)

# ::snt What like 'Charlie Hebdo are racist'? Thanks George, will do.
# ::tokens ["What", "like", "'", "Charlie", "Hebdo", "are", "racist", "'", "?", "Thanks", "George", ",", "will", "do", "."]
# ::lemmas ["what", "like", "'", "Charlie", "Hebdo", "be", "racist", "'", "?", "thank", "George", ",", "will", "do", "."]
(c9-0 / multi-sentence
      :snt1 (c9-6 / resemble-01
                  :ARG1 (c9-10 / amr-unknown)
                  :ARG2 (c9-2 / racist
                              :domain (c9-5 / publication
                                            :name (c9-3 / name
                                                        :op1 "Charlie"
                                                        :op2 " Hebdo"))))
      :snt2 (c9-8 / thank-01
                  :ARG0 (c9-1 / i)
                  :ARG1 (c9-9 / person
                              :name (c9-4 / name
                                          :op1 "George")))
      :snt3 (c9-7 / do-02
                  :ARG0 c9-1))

# ::snt 'Truths' they deny themselves! We must remove the 'I' from and replace it with Jesus.
# ::tokens ["'", "Truths", "'", "they", "deny", "themselves", "!", "We", "must", "remove", "the", "'", "I", "'", "from", "and", "replace", "it", "with", "Jesus", "."]
# ::lemmas ["'", "truth", "'", "they", "deny", "themselves", "!", "we", "must", "remove", "the", "'", "i", "'", "from", "and", "replace", "it", "with", "Jesus", "."]
(c10-1 / multi-sentence
       :snt1 (c10-7 / deny-01
                    :ARG0 (c10-11 / they)
                    :ARG1 (c10-10 / truth))
       :snt2 (c10-2 / obligate-01
                    :ARG1 (c10-0 / we)
                    :ARG2 (c10-12 / and
                                  :op1 (c10-8 / remove-01
                                              :ARG0 c10-0
                                              :ARG1 (c10-3 / i)
                                              :ARG2 (c10-9 / it))
                                  :op2 (c10-4 / replace-01
                                              :ARG0 c10-0
                                              :ARG1 c10-9
                                              :ARG2 (c10-6 / person
                                                           :name (c10-5 / name
                                                                        :op1 "Jesus"))))))

# ::snt Please RT - Download a hilarious FREE Koran PARODY for infidels of all ages -
# ::tokens ["Please", "RT", "-", "Download", "a", "hilarious", "FREE", "Koran", "PARODY", "for", "infidels", "of", "all", "ages", "-"]
# ::lemmas ["please", "RT", "-", "Download", "a", "hilarious", "FREE", "Koran", "PARODY", "for", "infidel", "of", "all", "age", "-"]
(c11-10 / and
        :op1 (c11-9 / read-01
                    :ARG0 (c11-1 / you)
                    :ARG1 (c11-8 / publication
                                 :name (c11-6 / name
                                              :op1 "Koran")
                                 :ARG1-of (c11-2 / free-03)
                                 :beneficiary (c11-4 / infidelity
                                                     :mod (c11-3 / age
                                                                 :mod (c11-7 / all)))
                                 :mod (c11-0 / hilarious))
                    :mode imperative
                    :polite +)
        :op2 (c11-5 / reply-01
                    :ARG0 c11-1
                    :ARG2 c11-8
                    :mode imperative
                    :polite +))

# ::snt : If liberty means anything at all, it means the right to tell people what they do not want to hear G. O
# ::tokens [":", "If", "liberty", "means", "anything", "at", "all", ",", "it", "means", "the", "right", "to", "tell", "people", "what", "they", "do", "not", "want", "to", "hear", "G.", "O"]
# ::lemmas [":", "if", "liberty", "mean", "anything", "at", "all", ",", "it", "mean", "the", "right", "to", "tell", "people", "what", "they", "do", "not", "want", "to", "hear", "G.", "O"]
(c12-10 / say-01
        :ARG0 (c12-6 / person
                     :name (c12-5 / name
                                  :op1 "G."
                                  :op2 "O"))
        :ARG1 (c12-0 / have-condition-91
                     :ARG1 (c12-3 / mean-01
                                  :ARG1 (c12-2 / liberty)
                                  :ARG2 (c12-7 / right-05
                                               :ARG2 (c12-12 / tell-01
                                                             :ARG0 c12-2
                                                             :ARG1 (c12-9 / thing
                                                                          :ARG1-of (c12-14 / hear-01
                                                                                           :ARG0 (c12-13 / person)
                                                                                           :ARG1-of (c12-1 / want-01
                                                                                                           :ARG0 c12-13
                                                                                                           :polarity -)))
                                                             :ARG2 c12-13))
                                  :mod (c12-11 / at-all))
                     :ARG2 (c12-8 / mean-01
                                  :ARG1 c12-2
                                  :ARG2 (c12-4 / anything))))

# ::snt Congrats on your tweet!
# ::tokens ["Congrats", "on", "your", "tweet", "!"]
# ::lemmas ["congrat", "on", "your", "tweet", "!"]
(c13-2 / congratulate-01
       :ARG1 (c13-1 / you)
       :ARG2 (c13-0 / tweet-01
                    :ARG0 c13-1))

# ::snt YES
# ::tokens ["YES"]
# ::lemmas ["yes"]
(c14-0 / yes)

# ::snt You rock! Wish more people would hashtag this week
# ::tokens ["You", "rock", "!", "Wish", "more", "people", "would", "hashtag", "this", "week"]
# ::lemmas ["you", "rock", "!", "wish", "more", "people", "would", "hashtag", "this", "week"]
(c15-3 / multi-sentence
       :snt1 (c15-7 / rock-03
                    :ARG0 (c15-2 / you)
                    :mode expressive)
       :snt2 (c15-1 / wish-01
                    :ARG0 (c15-4 / i)
                    :ARG1 (c15-0 / hashtag-01
                                 :ARG0 (c15-6 / person
                                              :quant (c15-8 / more))
                                 :time (c15-5 / week
                                              :mod (c15-9 / this)))))

# ::snt : If liberty means anything at all, it means the right to tell people what they do not want to hear G.Orwell
# ::tokens [":", "If", "liberty", "means", "anything", "at", "all", ",", "it", "means", "the", "right", "to", "tell", "people", "what", "they", "do", "not", "want", "to", "hear", "G.Orwell"]
# ::lemmas [":", "if", "liberty", "mean", "anything", "at", "all", ",", "it", "mean", "the", "right", "to", "tell", "people", "what", "they", "do", "not", "want", "to", "hear", "G.Orwell"]
(c16-10 / say-01
        :ARG0 (c16-6 / person
                     :name (c16-5 / name
                                  :op1 "G."
                                  :op2 "Orwell"))
        :ARG1 (c16-3 / mean-01
                     :ARG1 (c16-2 / liberty)
                     :ARG2 (c16-7 / right-05
                                  :ARG2 (c16-11 / tell-01
                                                :ARG0 c16-2
                                                :ARG1 (c16-9 / thing
                                                             :ARG1-of (c16-0 / hear-01
                                                                             :ARG0 (c16-12 / person)
                                                                             :ARG1-of (c16-1 / want-01
                                                                                             :ARG0 c16-12
                                                                                             :polarity -)))
                                                :ARG2 c16-12))
                     :condition (c16-8 / mean-01
                                       :ARG1 c16-2
                                       :ARG2 (c16-13 / anything
                                                     :mod (c16-4 / at-all)))))
