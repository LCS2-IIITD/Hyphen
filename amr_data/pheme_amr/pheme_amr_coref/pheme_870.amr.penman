# ::snt Refugees such violent pigs their own countrymen in Egypt, Jordan, Syria will not take back
# ::tokens ["Refugees", "such", "violent", "pigs", "their", "own", "countrymen", "in", "Egypt", ",", "Jordan", ",", "Syria", "will", "not", "take", "back"]
# ::lemmas ["refugee", "such", "violent", "pig", "their", "own", "countryman", "in", "Egypt", ",", "Jordan", ",", "Syria", "will", "not", "take", "back"]
(c1-10 / take-01
       :ARG0 (c1-4 / refugee
                   :mod (c1-2 / violent
                              :degree (c1-9 / such))
                   :location (c1-11 / and
                                    :op1 (c1-5 / country
                                               :name (c1-1 / name
                                                           :op1 "Egypt"))
                                    :op2 (c1-6 / country
                                               :name (c1-3 / name
                                                           :op1 "Jordan"))
                                    :op3 (c1-8 / country
                                               :name (c1-7 / name
                                                           :op1 "Syria"))))
       :ARG1 (c1-0 / back)
       :polarity -)

# ::snt just buy it what they show u. okey?
# ::tokens ["just", "buy", "it", "what", "they", "show", "u.", "okey", "?"]
# ::lemmas ["just", "buy", "it", "what", "they", "show", "u.", "okey", "?"]
(c2-2 / buy-01
      :ARG0 (c2-1 / you)
      :ARG1 (c2-3 / it)
      :ARG3 (c2-7 / thing
                  :ARG1-of (c2-6 / show-01
                                 :ARG0 (c2-5 / they)
                                 :ARG2 c2-1))
      :mod (c2-0 / just)
      :ARG1-of (c2-4 / request-confirmation-91)
      :mode imperative)

# ::snt Israel lets other people live peaceably in Israel. Arabs &amp; Muslims do not.
# ::tokens ["Israel", "lets", "other", "people", "live", "peaceably", "in", "Israel", ".", "Arabs", "&", "amp", ";", "Muslims", "do", "not", "."]
# ::lemmas ["Israel", "let", "other", "people", "live", "peaceably", "in", "Israel", ".", "Arabs", "&", "amp", ";", "Muslims", "do", "not", "."]
(c3-0 / multi-sentence
      :snt1 (c3-7 / let-01
                  :ARG0 (c3-17 / country
                               :name (c3-12 / name
                                            :op1 "Israel"))
                  :ARG1 (c3-18 / live-01
                               :ARG0 (c3-3 / person
                                           :mod (c3-15 / other))
                               :location c3-17
                               :manner (c3-5 / peace)))
      :snt2 (c3-6 / and
                  :op1 (c3-8 / person
                             :mod (c3-11 / ethnic-group
                                         :name (c3-16 / name
                                                      :op1 "Arab")))
                  :op2 (c3-14 / person
                              :mod (c3-9 / ethnic-group
                                         :name (c3-1 / name
                                                     :op1 "Islam"))))
      :snt3 (c3-4 / do-02
                  :ARG0 (c3-10 / person
                               :mod (c3-13 / religious-group
                                           :name (c3-2 / name
                                                       :op1 "Muslim")))
                  :polarity -))

# ::snt They thought the crocodile would eat them last.
# ::tokens ["They", "thought", "the", "crocodile", "would", "eat", "them", "last", "."]
# ::lemmas ["they", "think", "the", "crocodile", "would", "eat", "they", "last", "."]
(c4-4 / think-01
      :ARG0 (c4-3 / they)
      :ARG1 (c4-1 / eat-01
                  :ARG0 (c4-2 / crocodile)
                  :ARG1 c4-3
                  :time (c4-0 / last)))

# ::snt Clearly a planned attack
# ::tokens ["Clearly", "a", "planned", "attack"]
# ::lemmas ["clearly", "a", "planned", "attack"]
(c5-1 / clear-06
      :ARG1 (c5-2 / attack-01
                  :ARG1-of (c5-0 / plan-01)))

# ::snt If Gaza stops attacking Israel, violence stops. That simple.Listen to son of Hamas founder
# ::tokens ["If", "Gaza", "stops", "attacking", "Israel", ",", "violence", "stops", ".", "That", "simple", ".", "Listen", "to", "son", "of", "Hamas", "founder"]
# ::lemmas ["if", "Gaza", "stop", "attack", "Israel", ",", "violence", "stop", ".", "that", "simple", ".", "listen", "to", "son", "of", "Hamas", "founder"]
(c6-0 / multi-sentence
      :snt1 (c6-5 / stop-01
                  :ARG1 (c6-2 / violence)
                  :condition (c6-12 / stop-01
                                    :ARG1 (c6-7 / attack-01
                                                :ARG0 (c6-18 / city
                                                             :name (c6-13 / name
                                                                          :op1 "Gaza"))
                                                :ARG1 (c6-4 / country
                                                            :name (c6-17 / name
                                                                         :op1 "Israel")))))
      :snt2 (c6-15 / simple-02
                   :degree (c6-19 / that)
                   :condition (c6-9 / listen-01
                                    :ARG0 (c6-14 / you)
                                    :ARG1 (c6-3 / person
                                                :ARG0-of (c6-8 / have-rel-role-91
                                                               :ARG1 (c6-6 / person
                                                                           :ARG0-of (c6-10 / found-01
                                                                                           :ARG1 (c6-16 / organization
                                                                                                        :name (c6-1 / name
                                                                                                                    :op1 "Hamas"))))
                                                               :ARG2 (c6-11 / son)))
                                    :mode imperative)))

# ::snt if Israel stops brutalizing &amp; imprisoning Gaza, rockets stop-there, I fixed it for you
# ::tokens ["if", "Israel", "stops", "brutalizing", "&", "amp", ";", "imprisoning", "Gaza", ",", "rockets", "stop", "-", "there", ",", "I", "fixed", "it", "for", "you"]
# ::lemmas ["if", "Israel", "stop", "brutalize", "&", "amp", ";", "imprison", "Gaza", ",", "rocket", "stop", "-", "there", ",", "i", "fix", "it", "for", "you"]
(c8-1 / fix-02
      :ARG0 (c8-4 / i)
      :ARG1 (c8-11 / stop-01
                   :ARG1 (c8-7 / rocket)
                   :location (c8-12 / there))
      :beneficiary (c8-0 / you)
      :condition (c8-3 / stop-01
                       :ARG0 (c8-8 / country
                                   :name (c8-5 / name
                                               :op1 "Israel"))
                       :ARG1 (c8-13 / and
                                    :op1 (c8-2 / brutalize-01
                                               :ARG0 c8-8
                                               :ARG1 (c8-9 / country-region
                                                           :name (c8-6 / name
                                                                       :op1 "Gaza")))
                                    :op2 (c8-10 / imprison-01
                                                :ARG0 c8-8
                                                :ARG1 c8-8))))

# ::snt Just like Jordan doesn't want Jordanian refugees on West Bank
# ::tokens ["Just", "like", "Jordan", "does", "n't", "want", "Jordanian", "refugees", "on", "West", "Bank"]
# ::lemmas ["just", "like", "Jordan", "do", "not", "want", "Jordanian", "refugee", "on", "West", "Bank"]
(c9-5 / resemble-01
      :ARG2 (c9-1 / want-01
                  :ARG0 (c9-6 / country
                              :name (c9-3 / name
                                          :op1 "Jordan"))
                  :ARG1 (c9-2 / refugee
                              :mod c9-6
                              :location (c9-7 / country-region
                                              :name (c9-4 / name
                                                          :op1 "West"
                                                          :op2 "Bank")))
                  :polarity -)
      :mod (c9-0 / just))

# ::snt Apparently you don't know that is packed with refugees that were expelled by
# ::tokens ["Apparently", "you", "do", "n't", "know", "that", "is", "packed", "with", "refugees", "that", "were", "expelled", "by"]
# ::lemmas ["apparently", "you", "do", "not", "know", "that", "be", "pack", "with", "refugee", "that", "be", "expel", "by"]
(c10-2 / know-01
       :ARG0 (c10-0 / you)
       :ARG1 (c10-3 / pack-01
                    :ARG1 (c10-5 / that)
                    :ARG2 (c10-4 / refugee
                                 :ARG1-of (c10-1 / expel-01
                                                 :ARG0 (c10-6 / person))))
       :manner (c10-7 / apparent)
       :polarity -)

# ::snt Maybe ,but as expected. Why can so few see what's coming our way ?
# ::tokens ["Maybe", ",", "but", "as", "expected", ".", "Why", "can", "so", "few", "see", "what", "'s", "coming", "our", "way", "?"]
# ::lemmas ["maybe", ",", "but", "as", "expect", ".", "why", "can", "so", "few", "see", "what", "be", "come", "our", "way", "?"]
(c11-2 / multi-sentence
       :snt1 (c11-8 / contrast-01
                    :ARG1 (c11-6 / possible-01)
                    :ARG2 (c11-3 / expect-01))
       :snt2 (c11-7 / cause-01
                    :ARG0 (c11-13 / amr-unknown)
                    :ARG1 (c11-12 / possible-01
                                  :ARG1 (c11-10 / see-01
                                                :ARG0 (c11-1 / few
                                                             :degree (c11-4 / so))
                                                :ARG1 (c11-11 / thing
                                                              :ARG1-of (c11-9 / come-01
                                                                              :path (c11-0 / way
                                                                                           :poss (c11-5 / we))))))))

# ::snt I think this is to help ensure they continue to vote that way. You know, nice little French country you got there.
# ::tokens ["I", "think", "this", "is", "to", "help", "ensure", "they", "continue", "to", "vote", "that", "way", ".", "You", "know", ",", "nice", "little", "French", "country", "you", "got", "there", "."]
# ::lemmas ["i", "think", "this", "be", "to", "help", "ensure", "they", "continue", "to", "vote", "that", "way", ".", "you", "know", ",", "nice", "little", "French", "country", "you", "get", "there", "."]
(c12-0 / multi-sentence
       :snt1 (c12-18 / think-01
                     :ARG0 (c12-10 / i)
                     :ARG1 (c12-4 / have-purpose-91
                                  :ARG1 (c12-17 / this)
                                  :ARG2 (c12-3 / help-01
                                               :ARG0 c12-17
                                               :ARG1 (c12-6 / ensure-01
                                                            :ARG0 c12-17
                                                            :ARG1 (c12-16 / continue-01
                                                                          :ARG0 (c12-11 / they)
                                                                          :ARG1 (c12-1 / vote-01
                                                                                       :ARG0 c12-11
                                                                                       :ARG1 (c12-9 / way
                                                                                                    :mod (c12-14 / that))))))))
       :snt2 (c12-12 / know-01
                     :ARG0 (c12-13 / you)
                     :ARG1 (c12-2 / country
                                  :mod (c12-5 / little)
                                  :mod c12-2
                                  :name (c12-7 / name
                                               :op1 "France"))
                     :ARG1-of (c12-15 / nice-01)
                     :ARG1-of (c12-8 / get-03
                                     :ARG0 c12-13
                                     :location c12-2)))

# ::snt Fuck off Muslim Whore BitchEgypt doesnt want u &amp; building massive wall keep u out
# ::tokens ["Fuck", "off", "Muslim", "Whore", "BitchEgypt", "does", "nt", "want", "u", "&", "amp", ";", "building", "massive", "wall", "keep", "u", "out"]
# ::lemmas ["fuck", "off", "Muslim", "Whore", "BitchEgypt", "do", "not", "want", "u", "&", "amp", ";", "build", "massive", "wall", "keep", "u", "out"]
(c13-15 / and
        :op1 (c13-0 / want-01
                    :ARG0 (c13-12 / country
                                  :name (c13-8 / name
                                               :op1 "Egypt"))
                    :ARG1 (c13-6 / and
                                 :op1 (c13-2 / fuck-off-03)
                                 :op2 (c13-9 / amp))
                    :polarity -)
        :op2 (c13-14 / keep-04
                     :ARG0 (c13-4 / build-01
                                  :ARG0 c13-12
                                  :ARG1 (c13-7 / wall
                                               :mod (c13-3 / massive)))
                     :ARG1 (c13-5 / out-06
                                  :ARG1 (c13-1 / you)))
        :ARG1-of (c13-13 / say-01
                         :ARG0 (c13-10 / person
                                       :name (c13-11 / name
                                                     :op1 "Muslim"
                                                     :op2 "Whore"
                                                     :op3 "Bitch"))))

# ::snt give it a rest
# ::tokens ["give", "it", "a", "rest"]
# ::lemmas ["give", "it", "a", "rest"]
(c14-2 / give-01
       :ARG0 (c14-0 / you)
       :ARG1 (c14-1 / rest-01
                    :ARG1 (c14-3 / it
                                 :ARG2-of c14-2))
       :mode imperative)

# ::snt Koran describes how a Muslim must kill. A religion of peace, yes
# ::tokens ["Koran", "describes", "how", "a", "Muslim", "must", "kill", ".", "A", "religion", "of", "peace", ",", "yes"]
# ::lemmas ["Koran", "describe", "how", "a", "Muslim", "must", "kill", ".", "a", "religion", "of", "peace", ",", "yes"]
(c15-1 / multi-sentence
       :snt1 (c15-8 / describe-01
                    :ARG0 (c15-7 / person
                                 :name (c15-5 / name
                                              :op1 "Koran"))
                    :ARG1 (c15-11 / thing
                                  :manner-of (c15-4 / kill-01
                                                    :ARG0 (c15-12 / person
                                                                  :mod (c15-9 / religious-group
                                                                              :name (c15-6 / name
                                                                                           :op1 "Muslim")))
                                                    :ARG2-of (c15-3 / obligate-01))))
       :snt2 (c15-10 / religion
                     :mod (c15-2 / peace)
                     :mod (c15-0 / yes)))

# ::snt Yup. That is what happens when you start multiple wars with a country and lose landDon't start wars
# ::tokens ["Yup", ".", "That", "is", "what", "happens", "when", "you", "start", "multiple", "wars", "with", "a", "country", "and", "lose", "landDon't", "start", "wars"]
# ::lemmas ["yup", ".", "that", "be", "what", "happen", "when", "you", "start", "multiple", "war", "with", "a", "country", "and", "lose", "landdon't", "start", "war"]
(c16-3 / multi-sentence
       :snt1 (c16-0 / yup)
       :snt2 (c16-4 / event
                    :domain (c16-11 / that)
                    :condition (c16-12 / and
                                       :op1 (c16-10 / start-01
                                                    :ARG0 (c16-9 / you)
                                                    :ARG1 (c16-1 / war-01
                                                                 :ARG0 c16-9
                                                                 :ARG1 (c16-8 / country)
                                                                 :quant (c16-6 / multiple)))
                                       :op2 (c16-2 / lose-02
                                                   :ARG0 c16-9
                                                   :ARG1 (c16-7 / land))))
       :snt3 (c16-5 / start-01
                    :ARG0 c16-9
                    :ARG1 c16-1
                    :polarity -
                    :mode imperative))

# ::snt if u dont understand this abject '' set up '' i do not have any words to tell.
# ::tokens ["if", "u", "do", "nt", "understand", "this", "abject", "''", "set", "up", "''", "i", "do", "not", "have", "any", "words", "to", "tell", "."]
# ::lemmas ["if", "u", "do", "not", "understand", "this", "abject", "''", "set", "up", "''", "i", "do", "not", "have", "any", "word", "to", "tell", "."]
(c17-0 / have-condition-91
       :ARG1 (c17-3 / have-03
                    :ARG0 (c17-6 / i)
                    :ARG1 (c17-1 / word
                                 :mod (c17-10 / any)
                                 :ARG1-of (c17-9 / tell-01
                                                 :ARG0 c17-6))
                    :polarity -)
       :ARG2 (c17-4 / understand-01
                    :ARG0 (c17-2 / you)
                    :ARG1 (c17-5 / abject
                                 :mod (c17-7 / this)
                                 :ARG1-of (c17-8 / set-up-03))
                    :polarity -))

# ::snt Islam religion of peace(
# ::tokens ["Islam", "religion", "of", "peace", "("]
# ::lemmas ["Islam", "religion", "of", "peace", "("]
(c18-2 / religion
       :mod (c18-1 / peace)
       :mod (c18-3 / religious-group
                   :name (c18-0 / name
                                :op1 "Islam")))

# ::snt wonder who could be responsible for that?
# ::tokens ["wonder", "who", "could", "be", "responsible", "for", "that", "?"]
# ::lemmas ["wonder", "who", "could", "be", "responsible", "for", "that", "?"]
(c19-0 / wonder-01
       :ARG1 (c19-2 / responsible-01
                    :ARG0 (c19-4 / amr-unknown)
                    :ARG1 (c19-3 / that)
                    :ARG1-of (c19-1 / possible-01)))

# ::snt ...Rocket launcher MT : French official says attack on Paris weekly was w Kalachnikovs and rocket launcher. -
# ::tokens ["...", "Rocket", "launcher", "MT", ":", "French", "official", "says", "attack", "on", "Paris", "weekly", "was", "w", "Kalachnikovs", "and", "rocket", "launcher", ".", "-"]
# ::lemmas ["...", "rocket", "launcher", "MT", ":", "French", "official", "say", "attack", "on", "Paris", "weekly", "be", "w", "Kalachnikovs", "and", "rocket", "launcher", ".", "-"]
(c20-0 / multi-sentence
       :snt1 (c20-20 / company
                     :name (c20-13 / name
                                   :op1 "MT")
                     :ARG0-of (c20-10 / launch-01
                                      :ARG1 (c20-14 / rocket)))
       :snt2 (c20-6 / say-01
                    :ARG0 (c20-4 / person
                                 :ARG0-of (c20-9 / have-org-role-91
                                                 :ARG1 (c20-5 / country
                                                              :name (c20-19 / name
                                                                            :op1 "France"))
                                                 :ARG2 (c20-18 / official)))
                    :ARG1 (c20-8 / attack-01
                                 :ARG1 (c20-17 / city
                                               :name (c20-2 / name
                                                            :op1 "Paris"))
                                 :frequency (c20-1 / rate-entity-91
                                                   :ARG3 (c20-22 / temporal-quantity
                                                                 :unit (c20-15 / week)
                                                                 :quant 1))
                                 :instrument (c20-16 / and
                                                     :op1 (c20-7 / product
                                                                 :name (c20-3 / name
                                                                              :op1 "Kalachnikovs"))
                                                     :op2 (c20-11 / product
                                                                  :ARG0-of (c20-21 / launch-01
                                                                                   :ARG1 (c20-12 / rocket)))))))

# ::snt pretty fathomable actually. It's a peaceful thing to do
# ::tokens ["pretty", "fathomable", "actually", ".", "It", "'s", "a", "peaceful", "thing", "to", "do"]
# ::lemmas ["pretty", "fathomable", "actually", ".", "it", "be", "a", "peaceful", "thing", "to", "do"]
(c21-1 / multi-sentence
       :snt1 (c21-3 / possible-01
                    :ARG1 (c21-0 / fathom-01
                                 :degree (c21-6 / pretty)
                                 :ARG1-of (c21-7 / actual-02)))
       :snt2 (c21-5 / thing
                    :mod (c21-2 / peaceful)
                    :ARG1-of (c21-4 / do-02)))

# ::snt sounded like it
# ::tokens ["sounded", "like", "it"]
# ::lemmas ["sound", "like", "it"]
(c22-0 / sound-01
       :ARG2 (c22-1 / it))

# ::snt by unprecedented of course you mean unprecedented since the last atrocity a couple of weeks ago
# ::tokens ["by", "unprecedented", "of", "course", "you", "mean", "unprecedented", "since", "the", "last", "atrocity", "a", "couple", "of", "weeks", "ago"]
# ::lemmas ["by", "unprecedented", "of", "course", "you", "mean", "unprecedented", "since", "the", "last", "atrocity", "a", "couple", "of", "weeks", "ago"]
(c23-3 / mean-01
       :ARG0 (c23-0 / you)
       :ARG1 (c23-7 / precedent
                    :time (c23-9 / since
                                 :op1 (c23-11 / atrocity
                                              :mod (c23-2 / last)
                                              :time (c23-4 / before
                                                           :op1 (c23-6 / now)
                                                           :quant (c23-8 / couple
                                                                         :op1 (c23-10 / temporal-quantity
                                                                                      :unit (c23-1 / week)
                                                                                      :quant 1)))))
                    :ARG2-of c23-3
                    :polarity -)
       :mod (c23-5 / of-course))

# ::snt Perhaps arming religious fanatics just across Med Sea in Libya &amp; Syria wasn't such a great idea after all?
# ::tokens ["Perhaps", "arming", "religious", "fanatics", "just", "across", "Med", "Sea", "in", "Libya", "&", "amp", ";", "Syria", "was", "n't", "such", "a", "great", "idea", "after", "all", "?"]
# ::lemmas ["perhaps", "arm", "religious", "fanatic", "just", "across", "Med", "Sea", "in", "Libya", "&", "amp", ";", "Syria", "be", "not", "such", "a", "great", "idea", "after", "all", "?"]
(c24-1 / multi-sentence
       :snt1 (c24-4 / possible-01
                    :ARG1 (c24-7 / arm-01
                                 :ARG1 (c24-8 / fanatic
                                              :mod (c24-12 / religious))
                                 :location (c24-14 / across
                                                   :op1 (c24-6 / sea
                                                               :name (c24-10 / name
                                                                             :op1 "Med"
                                                                             :op2 "Sea"))
                                                   :mod (c24-0 / just))
                                 :location (c24-11 / and
                                                   :op1 (c24-19 / country
                                                                :name (c24-18 / name
                                                                              :op1 "Libya"))
                                                   :op2 (c24-5 / country
                                                               :name (c24-2 / name
                                                                            :op1 "amp")))))
       :snt2 (c24-15 / idea
                     :mod (c24-13 / great
                                  :degree (c24-9 / such))
                     :domain (c24-16 / country
                                     :name (c24-3 / name
                                                  :op1 "Syria"))
                     :mod (c24-20 / after-all)
                     :polarity (c24-17 / amr-unknown)
                     :polarity -))

# ::snt The number of victims, yes. The principle, no.
# ::tokens ["The", "number", "of", "victims", ",", "yes", ".", "The", "principle", ",", "no", "."]
# ::lemmas ["the", "number", "of", "victim", ",", "yes", ".", "the", "principle", ",", "no", "."]
(c25-0 / multi-sentence
       :snt1 (c25-1 / number
                    :quant-of (c25-2 / victim))
       :snt2 (c25-3 / principle
                    :mod (c25-4 / no)))

# ::snt Yeah, let's forget the massacre in Paris &amp; Gaza, NOT
# ::tokens ["Yeah", ",", "let", "'s", "forget", "the", "massacre", "in", "Paris", "&", "amp", ";", "Gaza", ",", "NOT"]
# ::lemmas ["yeah", ",", "let", "us", "forget", "the", "massacre", "in", "Paris", "&", "amp", ";", "Gaza", ",", "not"]
(c26-8 / contrast-01
       :ARG1 (c26-1 / forget-01
                    :ARG0 (c26-0 / we)
                    :ARG1 (c26-2 / massacre-01
                                 :location (c26-10 / and
                                                   :op1 (c26-7 / city
                                                               :name (c26-4 / name
                                                                            :op1 "Paris"))
                                                   :op2 (c26-9 / city
                                                               :name (c26-5 / name
                                                                            :op1 "amp"))))
                    :mode imperative)
       :ARG2 (c26-3 / forget-01
                    :ARG0 c26-0
                    :ARG1 (c26-11 / country-region
                                  :name (c26-6 / name
                                               :op1 "Gaza"))
                    :mode imperative
                    :polarity -))

# ::snt Gaza are Egyptians. Such violent pigs that Egypt is building massive barrier to keep out.
# ::tokens ["Gaza", "are", "Egyptians", ".", "Such", "violent", "pigs", "that", "Egypt", "is", "building", "massive", "barrier", "to", "keep", "out", "."]
# ::lemmas ["Gaza", "be", "Egyptians", ".", "such", "violent", "pig", "that", "Egypt", "be", "build", "massive", "barrier", "to", "keep", "out", "."]
(c27-1 / multi-sentence
       :snt1 (c27-6 / person
                    :mod (c27-8 / country
                                :name (c27-4 / name
                                             :op1 "Egypt"))
                    :domain (c27-7 / country-region
                                   :name (c27-5 / name
                                                :op1 "Gaza")))
       :snt2 (c27-0 / have-degree-91
                    :ARG1 (c27-14 / pig)
                    :ARG2 (c27-9 / violent)
                    :ARG3 (c27-12 / so)
                    :ARG6 (c27-2 / build-01
                                 :ARG0 c27-8
                                 :ARG1 (c27-10 / barrier
                                               :mod (c27-11 / massive))
                                 :purpose (c27-13 / keep-04
                                                  :ARG1 c27-14
                                                  :ARG2 (c27-3 / out-06
                                                               :ARG1 c27-14)))))

# ::snt Rus mafyas?
# ::tokens ["Rus", "mafyas", "?"]
# ::lemmas ["rus", "mafyas", "?"]
(c28-2 / country
       :name (c28-0 / name
                    :op1 "Rus")
       :polarity (c28-3 / amr-unknown)
       :ARG1-of (c28-1 / mafyas-00))

# ::snt Unfathomable. MT : Attack on Paris weekly was w/ Kalachnikov automatic rifles and rocket launcher. Unprecedented.
# ::tokens ["Unfathomable", ".", "MT", ":", "Attack", "on", "Paris", "weekly", "was", "w/", "Kalachnikov", "automatic", "rifles", "and", "rocket", "launcher", ".", "Unprecedented", "."]
# ::lemmas ["unfathomable", ".", "MT", ":", "attack", "on", "Paris", "weekly", "be", "w/", "Kalachnikov", "automatic", "rifle", "and", "rocket", "launcher", ".", "unprecedented", "."]
(c29-2 / multi-sentence
       :snt1 (c29-8 / possible-01
                    :ARG1 (c29-10 / conceive-01
                                  :ARG1 (c29-16 / attack-01
                                                :ARG1 (c29-9 / city
                                                             :name (c29-6 / name
                                                                          :op1 "Paris"))
                                                :frequency (c29-11 / rate-entity-91
                                                                   :ARG3 (c29-14 / temporal-quantity
                                                                                 :unit (c29-0 / week)
                                                                                 :quant 1))
                                                :mod (c29-15 / product
                                                             :name (c29-7 / name
                                                                          :op1 "Kalachnikov")
                                                             :mod (c29-4 / automatic)
                                                             :ARG0-of (c29-1 / launch-01
                                                                             :ARG1 (c29-5 / rocket)))))
                    :snt2 (c29-3 / precedent
                                 :polarity -)
                    :snt3 (c29-13 / publication
                                  :name (c29-12 / name
                                                :op1 "MT"))
                    :polarity -))

# ::snt : French official says attack on Paris wkly was with AK rifles &amp; rocket launcher. Unprecedented.
# ::tokens [":", "French", "official", "says", "attack", "on", "Paris", "wkly", "was", "with", "AK", "rifles", "&", "amp", ";", "rocket", "launcher", ".", "Unprecedented", "."]
# ::lemmas [":", "French", "official", "say", "attack", "on", "Paris", "wkly", "be", "with", "AK", "rifle", "&", "amp", ";", "rocket", "launcher", ".", "unprecedented", "."]
(c30-2 / multi-sentence
       :snt1 (c30-12 / say-01
                     :ARG0 (c30-7 / person
                                  :ARG0-of (c30-0 / have-org-role-91
                                                  :ARG1 (c30-9 / country
                                                               :name (c30-5 / name
                                                                            :op1 "France"))
                                                  :ARG2 (c30-3 / official)))
                     :ARG1 (c30-14 / attack-01
                                   :ARG1 (c30-8 / city
                                                :name (c30-6 / name
                                                             :op1 "Paris"))
                                   :manner (c30-10 / rifle
                                                   :name (c30-11 / name
                                                                 :op1 "AK"))
                                   :manner (c30-1 / launch-01
                                                  :ARG1 (c30-4 / rocket))))
       :snt2 (c30-13 / precedent
                     :polarity -))

# ::snt Agreed, but that's nothing compared to 's carnage in which killed more than
# ::tokens ["Agreed", ",", "but", "that", "'s", "nothing", "compared", "to", "'s", "carnage", "in", "which", "killed", "more", "than"]
# ::lemmas ["agree", ",", "but", "that", "be", "nothing", "compare", "to", "'s", "carnage", "in", "which", "kill", "more", "than"]
(c31-5 / contrast-01
       :ARG1 (c31-8 / agree-01)
       :ARG2 (c31-4 / compare-01
                    :ARG1 (c31-7 / that)
                    :ARG2 (c31-6 / carnage
                                 :location-of (c31-2 / kill-01
                                                     :ARG1 (c31-3 / person
                                                                  :ARG1-of (c31-0 / have-quant-91
                                                                                  :ARG3 (c31-1 / more)))))
                    :polarity -))

# ::snt They didn't appreciate the Security Council vote?
# ::tokens ["They", "did", "n't", "appreciate", "the", "Security", "Council", "vote", "?"]
# ::lemmas ["they", "do", "not", "appreciate", "the", "Security", "Council", "vote", "?"]
(c32-5 / appreciate-02
       :ARG0 (c32-4 / they)
       :ARG1 (c32-3 / vote-01
                    :ARG0 (c32-0 / organization
                                 :name (c32-2 / name
                                              :op1 "Security"
                                              :op2 "Council")))
       :polarity (c32-1 / amr-unknown)
       :polarity -)
