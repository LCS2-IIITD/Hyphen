# ::snt sucks for those people if the rumour isnt true.
# ::tokens ["sucks", "for", "those", "people", "if", "the", "rumour", "is", "nt", "true", "."]
# ::lemmas ["suck", "for", "those", "people", "if", "the", "rumour", "be", "not", "true", "."]
(c1-3 / suck-03
      :ARG1 (c1-0 / person
                  :mod (c1-4 / that))
      :condition (c1-2 / true-01
                       :ARG1 (c1-1 / rumor-01)
                       :polarity -))

# ::snt : Lineup forms outside Massey Hall amid rumours of surprise Prince show word lol
# ::tokens [":", "Lineup", "forms", "outside", "Massey", "Hall", "amid", "rumours", "of", "surprise", "Prince", "show", "word", "lol"]
# ::lemmas [":", "Lineup", "form", "outside", "Massey", "Hall", "amid", "rumour", "of", "surprise", "Prince", "show", "word", "lol"]
(c2-2 / form-01
      :ARG1 (c2-3 / lineup)
      :location (c2-5 / outside
                      :op1 (c2-4 / building
                                 :name (c2-7 / name
                                             :op1 "Massey"
                                             :op2 "Hall")))
      :time (c2-10 / rumor-01
                   :ARG1 (c2-1 / word-01
                               :ARG1 (c2-12 / surprise-01)
                               :mod (c2-6 / show-04)
                               :mod (c2-9 / person
                                          :name (c2-8 / name
                                                      :op1 "Prince")))
                   :ARG2-of (c2-11 / laugh-01
                                   :manner (c2-0 / loud)
                                   :mode expressive)))

# ::snt I guess these people don't have jobs.
# ::tokens ["I", "guess", "these", "people", "do", "n't", "have", "jobs", "."]
# ::lemmas ["i", "guess", "these", "people", "do", "not", "have", "job", "."]
(c3-4 / guess-01
      :ARG0 (c3-2 / i)
      :ARG1 (c3-0 / have-03
                  :ARG0 (c3-3 / person
                              :mod (c3-5 / this))
                  :ARG1 (c3-1 / job)
                  :polarity -))

# ::snt How can there be a surprise show, if there were rumours of it being a surprise show?
# ::tokens ["How", "can", "there", "be", "a", "surprise", "show", ",", "if", "there", "were", "rumours", "of", "it", "being", "a", "surprise", "show", "?"]
# ::lemmas ["how", "can", "there", "be", "a", "surprise", "show", ",", "if", "there", "be", "rumour", "of", "it", "be", "a", "surprise", "show", "?"]
(c4-4 / possible-01
      :ARG1 (c4-6 / show-04
                  :ARG0-of (c4-2 / surprise-01))
      :manner (c4-7 / amr-unknown)
      :condition (c4-5 / rumor-01
                       :ARG1 (c4-0 / show-04
                                   :ARG0-of (c4-1 / surprise-01)
                                   :domain (c4-3 / it))))

# ::snt his a total "fuck"
# ::tokens ["his", "a", "total", "\"", "fuck", "\""]
# ::lemmas ["his", "a", "total", "\"", "fuck", "\""]
(c5-1 / fuck
      :domain (c5-0 / he)
      :degree (c5-2 / total)
      :mode expressive)

# ::snt So many fans...go Prince!
# ::tokens ["So", "many", "fans", "...", "go", "Prince", "!"]
# ::lemmas ["so", "many", "fan", "...", "go", "Prince", "!"]
(c6-5 / cheer-on-04
      :ARG0 (c6-1 / fan
                  :ARG1-of (c6-0 / have-quant-91
                                 :ARG2 (c6-2 / many)
                                 :ARG3 (c6-6 / so)))
      :ARG1 (c6-4 / person
                  :name (c6-3 / name
                              :op1 "Prince"))
      :mode expressive)

# ::snt Is the show free?
# ::tokens ["Is", "the", "show", "free", "?"]
# ::lemmas ["be", "the", "show", "free", "?"]
(c7-1 / free-03
      :polarity (c7-2 / amr-unknown)
      :ARG1 (c7-0 / show-04))
