# ::snt I never said Zimmerman was smart.
# ::tokens ["I", "never", "said", "Zimmerman", "was", "smart", "."]
# ::lemmas ["i", "never", "say", "Zimmerman", "be", "smart", "."]
(c1-5 / say-01
      :ARG0 (c1-2 / i)
      :ARG1 (c1-0 / smart-06
                  :ARG1 (c1-4 / person
                              :name (c1-3 / name
                                          :op1 "Zimmerman")))
      :time (c1-1 / ever)
      :polarity -)

# ::snt and still getting paid.
# ::tokens ["and", "still", "getting", "paid", "."]
# ::lemmas ["and", "still", "getting", "pay", "."]
(c2-2 / and
      :op2 (c2-1 / pay-01
                 :mod (c2-0 / still)))

# ::snt Isn't he a suspect? Where r the pics of his "injuries"? What's his record? Any previous disciplinary actions or investigations?
# ::tokens ["Is", "n't", "he", "a", "suspect", "?", "Where", "r", "the", "pics", "of", "his", "\"", "injuries", "\"", "?", "What", "'s", "his", "record", "?", "Any", "previous", "disciplinary", "actions", "or", "investigations", "?"]
# ::lemmas ["be", "not", "he", "a", "suspect", "?", "where", "r", "the", "pic", "of", "his", "\"", "injury", "\"", "?", "what", "be", "his", "record", "?", "any", "previous", "disciplinary", "action", "or", "investigation", "?"]
(c3-0 / multi-sentence
      :snt1 (c3-5 / suspect-01
                  :ARG1 (c3-9 / he)
                  :polarity (c3-8 / amr-unknown)
                  :polarity -)
      :snt2 (c3-10 / be-located-at-91
                   :ARG1 (c3-3 / pic
                               :topic (c3-14 / injure-01
                                             :ARG1 (c3-7 / he)))
                   :ARG2 (c3-13 / amr-unknown))
      :snt3 (c3-12 / record-01
                   :ARG1 (c3-11 / amr-unknown))
      :snt4 (c3-16 / or
                   :op1 (c3-18 / act-02
                               :ARG0 (c3-2 / he)
                               :mod (c3-4 / discipline)
                               :time (c3-6 / previous))
                   :op2 (c3-15 / investigate-01
                               :ARG0 c3-2)
                   :mod (c3-17 / any)
                   :polarity (c3-1 / amr-unknown)))

# ::snt you should work for tmz
# ::tokens ["you", "should", "work", "for", "tmz"]
# ::lemmas ["you", "should", "work", "for", "tmz"]
(c4-4 / recommend-01
      :ARG1 (c4-0 / work-01
                  :ARG0 (c4-1 / you)
                  :ARG2 (c4-3 / publication
                              :name (c4-2 / name
                                          :op1 "tmz"))))

# ::snt Here's what the FOP says on the topic
# ::tokens ["Here", "'s", "what", "the", "FOP", "says", "on", "the", "topic"]
# ::lemmas ["here", "be", "what", "the", "FOP", "say", "on", "the", "topic"]
(c5-4 / say-01
      :ARG0 (c5-2 / publication
                  :name (c5-1 / name
                              :op1 "FOP"))
      :ARG1 (c5-5 / thing
                  :location (c5-0 / here))
      :ARG3 (c5-3 / topic))

# ::snt :Arrived in Crestwood where officer Darren Wilson lives. When I knocked police officer rolled up and told me Wilson left days ago
# ::tokens [":", "Arrived", "in", "Crestwood", "where", "officer", "Darren", "Wilson", "lives", ".", "When", "I", "knocked", "police", "officer", "rolled", "up", "and", "told", "me", "Wilson", "left", "days", "ago"]
# ::lemmas [":", "arrive", "in", "Crestwood", "where", "officer", "Darren", "Wilson", "live", ".", "when", "i", "knock", "police", "officer", "roll", "up", "and", "tell", "i", "Wilson", "leave", "days", "ago"]
(c6-0 / multi-sentence
      :snt1 (c6-6 / arrive-01
                  :ARG1 (c6-15 / i)
                  :ARG4 (c6-22 / city-district
                               :name (c6-10 / name
                                            :op1 "Crestwood")
                               :location-of (c6-8 / live-01
                                                  :ARG0 (c6-2 / person
                                                              :name (c6-21 / name
                                                                           :op1 "Darren"
                                                                           :op2 "Wilson")
                                                              :ARG0-of (c6-7 / have-org-role-91
                                                                             :ARG2 (c6-20 / officer))))))
      :snt2 (c6-14 / and
                   :op1 (c6-12 / roll-01
                               :ARG1 c6-2
                               :ARG0-of (c6-5 / have-org-role-91
                                              :ARG1 (c6-4 / police)
                                              :ARG2 (c6-19 / officer)))
                   :direction (c6-13 / up)
                   :time (c6-18 / knock-01
                                :ARG0 (c6-16 / i)
                                :ARG1 c6-2))
      :op2 (c6-24 / tell-01
                  :ARG0 c6-2
                  :ARG1 (c6-23 / leave-11
                               :ARG0 c6-2
                               :time (c6-9 / before
                                           :op1 (c6-1 / now)
                                           :quant (c6-11 / multiple
                                                         :op1 (c6-17 / temporal-quantity
                                                                     :unit (c6-3 / day)
                                                                     :quant 1))))
                  :ARG2 c6-16))

# ::snt this requirement is rare in MO because there are + municipalities all packed in to St Louis County.
# ::tokens ["this", "requirement", "is", "rare", "in", "MO", "because", "there", "are", "+", "municipalities", "all", "packed", "in", "to", "St", "Louis", "County", "."]
# ::lemmas ["this", "requirement", "be", "rare", "in", "MO", "because", "there", "be", "+", "municipality", "all", "pack", "in", "to", "St", "Louis", "County", "."]
(c7-5 / rare-02
      :ARG1 (c7-1 / require-01
                  :mod (c7-9 / this))
      :location (c7-8 / state
                      :name (c7-2 / name
                                  :op1 "Missouri"))
      :ARG1-of (c7-6 / cause-01
                     :ARG0 (c7-4 / pack-01
                                 :ARG1 (c7-0 / municipality
                                             :mod (c7-10 / all))
                                 :ARG2 (c7-7 / county
                                             :name (c7-3 / name
                                                         :op1 "St."
                                                         :op2 "Louis"
                                                         :op3 "County")))))

# ::snt yup following as well
# ::tokens ["yup", "following", "as", "well"]
# ::lemmas ["yup", "follow", "as", "well"]
(c8-1 / follow-01
      :mod (c8-0 / yup)
      :mod (c8-2 / as-well))

# ::snt MT : Arrived in Crestwood where officer Darren Wilson lives. Police officer rolled up and told me Wilson left days ago
# ::tokens ["MT", ":", "Arrived", "in", "Crestwood", "where", "officer", "Darren", "Wilson", "lives", ".", "Police", "officer", "rolled", "up", "and", "told", "me", "Wilson", "left", "days", "ago"]
# ::lemmas ["MT", ":", "Arrived", "in", "Crestwood", "where", "officer", "Darren", "Wilson", "live", ".", "police", "officer", "roll", "up", "and", "tell", "i", "Wilson", "leave", "days", "ago"]
(c9-0 / multi-sentence
      :snt1 (c9-5 / say-01
                  :ARG0 (c9-3 / person
                              :name (c9-13 / name
                                           :op1 "MT"))
                  :ARG1 (c9-8 / arrive-01
                              :ARG1 c9-3
                              :ARG4 (c9-22 / city-district
                                           :name (c9-21 / name
                                                        :op1 "Crestwood")
                                           :location-of (c9-10 / live-01
                                                               :ARG0 (c9-6 / person
                                                                           :name (c9-1 / name
                                                                                       :op1 "Darren"
                                                                                       :op2 "Wilson")
                                                                           :ARG0-of (c9-9 / have-org-role-91
                                                                                          :ARG1 (c9-11 / police)
                                                                                          :ARG2 (c9-20 / officer))))))
                  :snt2 (c9-17 / and
                               :op1 (c9-15 / roll-01
                                           :ARG1 (c9-16 / person
                                                        :ARG0-of (c9-7 / have-org-role-91
                                                                       :ARG1 c9-11
                                                                       :ARG2 c9-20)))
                               :op2 (c9-24 / tell-01
                                           :ARG0 c9-16
                                           :ARG1 (c9-23 / leave-11
                                                        :ARG0 c9-6
                                                        :time (c9-12 / before
                                                                     :op1 (c9-2 / now)
                                                                     :quant (c9-14 / multiple
                                                                                   :op1 (c9-19 / temporal-quantity
                                                                                               :unit (c9-4 / day)
                                                                                               :quant 1))))
                                           :ARG2 (c9-18 / i)))))

# ::snt I'm sure you have a lot on your plate. It's not like residency fosters empathy or anything. We're just curious
# ::tokens ["I", "'m", "sure", "you", "have", "a", "lot", "on", "your", "plate", ".", "It", "'s", "not", "like", "residency", "fosters", "empathy", "or", "anything", ".", "We", "'re", "just", "curious"]
# ::lemmas ["i", "be", "sure", "you", "have", "a", "lot", "on", "your", "plate", ".", "it", "be", "not", "like", "residency", "foster", "empathy", "or", "anything", ".", "we", "be", "just", "curious"]
(c10-4 / multi-sentence
       :snt1 (c10-15 / sure-02
                     :ARG0 (c10-9 / i)
                     :ARG1 (c10-0 / have-03
                                  :ARG0 (c10-1 / you)
                                  :ARG1 (c10-3 / lot
                                               :prep-on (c10-11 / plate
                                                                :poss c10-1))))
       :snt2 (c10-12 / resemble-01
                     :ARG1 (c10-14 / it)
                     :ARG2 (c10-7 / or
                                  :op1 (c10-5 / foster-01
                                              :ARG0 (c10-10 / residency)
                                              :ARG1 (c10-8 / empathy))
                                  :op2 (c10-16 / anything))
                     :polarity -)
       :snt3 (c10-13 / curious-01
                     :ARG1 (c10-2 / we)
                     :mod (c10-6 / just)))

# ::snt Is everything about race to you. I didn't mention race.
# ::tokens ["Is", "everything", "about", "race", "to", "you", ".", "I", "did", "n't", "mention", "race", "."]
# ::lemmas ["be", "everything", "about", "race", "to", "you", ".", "i", "do", "not", "mention", "race", "."]
(c11-1 / multi-sentence
       :snt1 (c11-2 / opine-01
                    :polarity (c11-7 / amr-unknown)
                    :ARG0 (c11-0 / you)
                    :ARG1 (c11-6 / race))
       :snt2 (c11-5 / mention-01
                    :ARG0 (c11-3 / i)
                    :ARG1 (c11-4 / race)
                    :polarity -))

# ::snt Or walk a beat.
# ::tokens ["Or", "walk", "a", "beat", "."]
# ::lemmas ["or", "walk", "a", "beat", "."]
(c12-0 / or
       :op2 (c12-1 / walk-01
                   :ARG0 (c12-2 / you)
                   :ARG2 (c12-3 / beat)
                   :mode imperative))

# ::snt Why would you knock on his door? Didja think he'd invite you in for tea? Fucking hyena
# ::tokens ["Why", "would", "you", "knock", "on", "his", "door", "?", "Didja", "think", "he", "'d", "invite", "you", "in", "for", "tea", "?", "Fucking", "hyena"]
# ::lemmas ["why", "would", "you", "knock", "on", "his", "door", "?", "Didja", "think", "he", "would", "invite", "you", "in", "for", "tea", "?", "fuck", "hyena"]
(c13-3 / multi-sentence
       :snt1 (c13-13 / knock-01
                     :ARG0 (c13-1 / you)
                     :ARG1 (c13-8 / door
                                  :poss (c13-0 / he))
                     :ARG1-of (c13-9 / cause-01
                                     :ARG0 (c13-14 / amr-unknown)))
       :snt2 (c13-11 / think-01
                     :ARG0 (c13-10 / you)
                     :ARG1 (c13-6 / invite-01
                                  :ARG0 (c13-2 / he)
                                  :ARG1 c13-10
                                  :purpose (c13-12 / tea))
                     :polarity (c13-5 / amr-unknown))
       :snt3 (c13-7 / hyena
                    :mod (c13-4 / fucking
                                :mode expressive)))

# ::snt Wilson's probably hiding in the attic.
# ::tokens ["Wilson", "'s", "probably", "hiding", "in", "the", "attic", "."]
# ::lemmas ["Wilson", "'s", "probably", "hide", "in", "the", "attic", "."]
(c14-2 / probable
       :domain (c14-0 / hide-01
                      :ARG0 (c14-3 / person
                                   :name (c14-1 / name
                                                :op1 "Wilson"))
                      :location (c14-4 / attic)))

# ::snt I know that.... does anyone have personnel data for Ofc Wilson in Ferguson?
# ::tokens ["I", "know", "that", "....", "does", "anyone", "have", "personnel", "data", "for", "Ofc", "Wilson", "in", "Ferguson", "?"]
# ::lemmas ["i", "know", "that", "....", "do", "anyone", "have", "personnel", "datum", "for", "Ofc", "Wilson", "in", "Ferguson", "?"]
(c15-1 / multi-sentence
       :snt1 (c15-4 / know-01
                    :ARG0 (c15-3 / i)
                    :ARG1 (c15-10 / that))
       :snt2 (c15-0 / have-03
                    :ARG0 (c15-12 / anyone)
                    :ARG1 (c15-8 / data
                                 :mod (c15-7 / personnel)
                                 :poss (c15-11 / person
                                               :name (c15-5 / name
                                                            :op1 "Ofc"
                                                            :op2 "Wilson")
                                               :location (c15-9 / city
                                                                :name (c15-6 / name
                                                                             :op1 "Ferguson"))))
                    :polarity (c15-2 / amr-unknown)))

# ::snt Can you please give me an example of a white person who has been lynched in the last century
# ::tokens ["Can", "you", "please", "give", "me", "an", "example", "of", "a", "white", "person", "who", "has", "been", "lynched", "in", "the", "last", "century"]
# ::lemmas ["can", "you", "please", "give", "i", "an", "example", "of", "a", "white", "person", "who", "have", "be", "lynch", "in", "the", "last", "century"]
(c16-6 / possible-01
       :polarity (c16-12 / amr-unknown)
       :ARG1 (c16-8 / give-01
                    :ARG0 (c16-0 / you)
                    :ARG1 (c16-10 / thing
                                  :example-of (c16-2 / lynch-01
                                                     :ARG1 (c16-11 / person
                                                                   :ARG1-of (c16-1 / white-02))
                                                     :time (c16-3 / before
                                                                  :op1 (c16-5 / now)
                                                                  :duration (c16-9 / temporal-quantity
                                                                                   :unit (c16-7 / century)
                                                                                   :quant 1))))
                    :ARG2 (c16-4 / i))
       :polite +)

# ::snt When will we find out what "injuries" he had?
# ::tokens ["When", "will", "we", "find", "out", "what", "\"", "injuries", "\"", "he", "had", "?"]
# ::lemmas ["when", "will", "we", "find", "out", "what", "\"", "injury", "\"", "he", "have", "?"]
(c17-2 / find-out-03
       :ARG0 (c17-1 / we)
       :ARG1 (c17-3 / injure-01
                    :ARG1 (c17-0 / he))
       :time (c17-4 / amr-unknown))

# ::snt You missed the part at the press conference where they said he's been at a "secure location" since the shooting, huh?
# ::tokens ["You", "missed", "the", "part", "at", "the", "press", "conference", "where", "they", "said", "he", "'s", "been", "at", "a", "\"", "secure", "location", "\"", "since", "the", "shooting", ",", "huh", "?"]
# ::lemmas ["you", "miss", "the", "part", "at", "the", "press", "conference", "where", "they", "say", "he", "be", "be", "at", "a", "\"", "secure", "location", "\"", "since", "the", "shooting", ",", "huh", "?"]
(c18-3 / miss-02
       :ARG0 (c18-1 / you)
       :ARG1 (c18-8 / part
                    :location (c18-10 / conference
                                      :mod (c18-13 / press)
                                      :location-of (c18-11 / say-01
                                                           :ARG0 (c18-12 / they)
                                                           :ARG1 (c18-5 / be-located-at-91
                                                                        :ARG1 (c18-0 / he)
                                                                        :ARG2 (c18-2 / location
                                                                                     :ARG1-of (c18-7 / secure-02))
                                                                        :time (c18-4 / since
                                                                                     :op1 (c18-6 / shoot-02))))))
       :ARG1-of (c18-9 / request-confirmation-91))

# ::snt Sure they did, they already know how people do what they claim they hate,judge, jury executioner
# ::tokens ["Sure", "they", "did", ",", "they", "already", "know", "how", "people", "do", "what", "they", "claim", "they", "hate", ",", "judge", ",", "jury", "executioner"]
# ::lemmas ["sure", "they", "do", ",", "they", "already", "know", "how", "people", "do", "what", "they", "claim", "they", "hate", ",", "judge", ",", "jury", "executioner"]
(c19-16 / and
        :op1 (c19-13 / sure-02
                     :ARG1 (c19-9 / do-02
                                  :ARG0 (c19-14 / they)))
        :op2 (c19-6 / know-01
                    :ARG0 c19-14
                    :ARG1 (c19-12 / thing
                                  :manner-of (c19-2 / do-02
                                                    :ARG0 (c19-8 / person
                                                                 :ARG0-of (c19-0 / have-org-role-91
                                                                                 :ARG2 (c19-5 / and
                                                                                              :op1 (c19-1 / judge-01)
                                                                                              :op2 (c19-15 / person
                                                                                                           :ARG0-of (c19-4 / execute-01
                                                                                                                           :ARG1 (c19-11 / jury)))))
                                                                 :ARG1-of (c19-3 / hate-01
                                                                                 :ARG1-of (c19-10 / claim-01
                                                                                                  :ARG0 c19-14))
                                                                 :ARG0-of c19-3)))
                    :time (c19-7 / already)))

# ::snt Don't the County munys have the same residency requirements as the City?
# ::tokens ["Do", "n't", "the", "County", "munys", "have", "the", "same", "residency", "requirements", "as", "the", "City", "?"]
# ::lemmas ["do", "not", "the", "County", "munys", "have", "the", "same", "residency", "requirement", "as", "the", "City", "?"]
(c20-0 / have-03
       :ARG0 (c20-1 / muny
                    :mod (c20-5 / county))
       :ARG1 (c20-8 / thing
                    :ARG1-of (c20-4 / require-01
                                    :ARG0 (c20-3 / residency))
                    :ARG1-of (c20-7 / same-01
                                    :ARG2 (c20-2 / require-01
                                                 :ARG0 (c20-6 / city)
                                                 :ARG1 c20-3)))
       :polarity (c20-9 / amr-unknown)
       :polarity -)

# ::snt hahahahahahahahahaha yeah. He's just sitting at home in a bath robe. What a dummy.
# ::tokens ["hahahahahahahahahaha", "yeah", ".", "He", "'s", "just", "sitting", "at", "home", "in", "a", "bath", "robe", ".", "What", "a", "dummy", "."]
# ::lemmas ["hahahahahahahahahaha", "yeah", ".", "he", "be", "just", "sit", "at", "home", "in", "a", "bath", "robe", ".", "what", "a", "dummy", "."]
(c21-3 / multi-sentence
       :snt1 (c21-1 / yeah
                    :mode expressive)
       :snt2 (c21-8 / sit-01
                    :ARG1 (c21-0 / he)
                    :ARG2 (c21-9 / home)
                    :mod (c21-2 / just)
                    :manner (c21-6 / robe
                                   :mod (c21-4 / bath)))
       :snt3 (c21-7 / dummy
                    :degree (c21-5 / so)))

# ::snt I would leave too if a mob was screaming for my head before all the facts came out.
# ::tokens ["I", "would", "leave", "too", "if", "a", "mob", "was", "screaming", "for", "my", "head", "before", "all", "the", "facts", "came", "out", "."]
# ::lemmas ["i", "would", "leave", "too", "if", "a", "mob", "be", "scream", "for", "my", "head", "before", "all", "the", "fact", "come", "out", "."]
(c22-1 / leave-11
       :ARG0 (c22-5 / i
                    :part (c22-0 / head))
       :mod (c22-8 / too)
       :condition (c22-7 / scream-01
                         :ARG0 (c22-2 / mob)
                         :ARG2 c22-0
                         :time (c22-4 / before
                                      :op1 (c22-6 / come-out-09
                                                  :ARG1 (c22-3 / fact
                                                               :mod (c22-9 / all))))))

# ::snt Did you seriously this he'd be there?
# ::tokens ["Did", "you", "seriously", "this", "he", "'d", "be", "there", "?"]
# ::lemmas ["do", "you", "seriously", "this", "he", "would", "be", "there", "?"]
(c23-3 / serious-01
       :ARG1 (c23-1 / you)
       :ARG2 (c23-2 / be-located-at-91
                    :ARG1 (c23-0 / he)
                    :ARG2 (c23-4 / there))
       :polarity (c23-5 / amr-unknown))

# ::snt Good question. Have been in Chicago so long I assumed it was more common, and who knows whether it've made a difference.
# ::tokens ["Good", "question", ".", "Have", "been", "in", "Chicago", "so", "long", "I", "assumed", "it", "was", "more", "common", ",", "and", "who", "knows", "whether", "it've", "made", "a", "difference", "."]
# ::lemmas ["good", "question", ".", "have", "be", "in", "Chicago", "so", "long", "i", "assume", "it", "be", "more", "common", ",", "and", "who", "know", "whether", "it've", "make", "a", "difference", "."]
(c24-0 / multi-sentence
       :snt1 (c24-8 / question-01
                    :ARG1-of (c24-12 / good-02))
       :snt2 (c24-3 / and
                    :op1 (c24-13 / assume-01
                                 :ARG0 (c24-14 / i)
                                 :ARG1 (c24-17 / common
                                               :domain (c24-15 / it)
                                               :ARG2-of (c24-4 / have-degree-91
                                                               :ARG1 c24-15
                                                               :ARG3 (c24-11 / more)))
                                 :ARG1-of (c24-5 / long-03
                                                 :ARG2-of c24-4
                                                 :ARG1 c24-15
                                                 :ARG3 c24-11)))
       :op2 (c24-16 / know-01
                    :ARG0 (c24-10 / amr-unknown)
                    :ARG1 (c24-18 / truth-value
                                  :polarity-of (c24-6 / make-02
                                                      :ARG0 c24-15
                                                      :ARG1 (c24-1 / differ-02))))
       :condition (c24-7 / be-located-at-91
                         :ARG1 c24-14
                         :ARG2 (c24-2 / city
                                      :name (c24-9 / name
                                                   :op1 "Chicago"))))

# ::snt By all means, listen to these hypothetical cynics you mention. They sound very knowledgeable.
# ::tokens ["By", "all", "means", ",", "listen", "to", "these", "hypothetical", "cynics", "you", "mention", ".", "They", "sound", "very", "knowledgeable", "."]
# ::lemmas ["you", "all", "mean", ",", "listen", "to", "these", "hypothetical", "cynic", "you", "mention", ".", "they", "sound", "very", "knowledgeable", "."]
(c25-3 / multi-sentence
       :snt1 (c25-2 / listen-01
                    :ARG0 (c25-1 / you)
                    :ARG1 (c25-8 / cynic
                                 :ARG1-of (c25-0 / hypothetical-02)
                                 :ARG1-of (c25-7 / mention-01
                                                 :ARG0 c25-1)
                                 :mod (c25-11 / this))
                    :mod (c25-4 / by-all-means)
                    :mode imperative)
       :snt2 (c25-10 / sound-01
                     :ARG1 (c25-9 / they)
                     :ARG2 (c25-5 / know-01
                                  :ARG0 c25-9
                                  :degree (c25-6 / very))))

# ::snt Gosh Bob, you're the reporter, right? How about getting back to us when you find out. That would be great.
# ::tokens ["Gosh", "Bob", ",", "you", "'re", "the", "reporter", ",", "right", "?", "How", "about", "getting", "back", "to", "us", "when", "you", "find", "out", ".", "That", "would", "be", "great", "."]
# ::lemmas ["Gosh", "Bob", ",", "you", "be", "the", "reporter", ",", "right", "?", "how", "about", "get", "back", "to", "we", "when", "you", "find", "out", ".", "that", "would", "be", "great", "."]
(c26-3 / multi-sentence
       :snt1 (c26-7 / request-confirmation-91
                    :ARG1 (c26-6 / person
                                 :ARG0-of (c26-4 / report-01)
                                 :domain (c26-12 / person
                                                 :name (c26-5 / name
                                                              :op1 "Bob")
                                                 :ARG2-of c26-7)))
       :snt2 (c26-10 / suggest-01
                     :ARG1 (c26-9 / get-back-25
                                  :ARG0 (c26-0 / you)
                                  :ARG1 (c26-1 / we)
                                  :time (c26-2 / find-out-03
                                               :ARG0 c26-0)))
       :snt3 (c26-8 / great
                    :domain (c26-11 / that)))

# ::snt Oh wow. I wasn't expecting anyone to be interested in talking to me. This comes as quite a shock.
# ::tokens ["Oh", "wow", ".", "I", "was", "n't", "expecting", "anyone", "to", "be", "interested", "in", "talking", "to", "me", ".", "This", "comes", "as", "quite", "a", "shock", "."]
# ::lemmas ["oh", "wow", ".", "i", "be", "not", "expect", "anyone", "to", "be", "interested", "in", "talk", "to", "i", ".", "this", "come", "as", "quite", "a", "shock", "."]
(c27-1 / multi-sentence
       :snt1 (c27-0 / wow
                    :mod (c27-2 / oh)
                    :mode expressive)
       :snt2 (c27-3 / expect-01
                    :ARG0 (c27-5 / i)
                    :ARG1 (c27-7 / interest-01
                                 :ARG1 (c27-11 / anyone)
                                 :ARG2 (c27-10 / talk-01
                                               :ARG0 c27-11
                                               :ARG2 c27-5))
                    :polarity -)
       :snt3 (c27-6 / come-04
                    :ARG1 (c27-8 / this)
                    :ARG2 (c27-9 / shock-01
                                 :ARG0 c27-8
                                 :degree (c27-4 / quite))))

# ::snt good question. They've been pretty vague this far.
# ::tokens ["good", "question", ".", "They", "'ve", "been", "pretty", "vague", "this", "far", "."]
# ::lemmas ["good", "question", ".", "they", "'ve", "be", "pretty", "vague", "this", "far", "."]
(c28-0 / multi-sentence
       :snt1 (c28-1 / question-01
                    :ARG1-of (c28-4 / good-02))
       :snt2 (c28-2 / vague
                    :domain (c28-7 / they)
                    :time (c28-6 / so-far
                                 :mod (c28-5 / this))
                    :degree (c28-3 / pretty)))

# ::snt As soon as you give me an example of a cop who fled and never returned for an investigation, or court!
# ::tokens ["As", "soon", "as", "you", "give", "me", "an", "example", "of", "a", "cop", "who", "fled", "and", "never", "returned", "for", "an", "investigation", ",", "or", "court", "!"]
# ::lemmas ["as", "soon", "as", "you", "give", "i", "an", "example", "of", "a", "cop", "who", "flee", "and", "never", "return", "for", "an", "investigation", ",", "or", "court", "!"]
(c29-7 / give-01
       :ARG0 (c29-0 / you)
       :ARG1 (c29-10 / thing
                     :example-of (c29-6 / cop
                                        :ARG0-of (c29-1 / flee-05
                                                        :time (c29-3 / ever))
                                        :ARG0-of (c29-5 / return-01
                                                        :purpose (c29-2 / or
                                                                        :op1 (c29-4 / investigate-01
                                                                                    :ARG0 c29-6)
                                                                        :op2 (c29-8 / court))
                                                        :polarity -)))
       :ARG2 (c29-9 / i)
       :time (c29-11 / as-soon-as
                     :ARG0 c29-0
                     :ARG1 c29-10
                     :ARG2 c29-9)
       :op1-of c29-11)

# ::snt Indeed, the cynics say Chicagos rules (also for teachers, librarians) exist solely to prop up home values.
# ::tokens ["Indeed", ",", "the", "cynics", "say", "Chicagos", "rules", "(", "also", "for", "teachers", ",", "librarians", ")", "exist", "solely", "to", "prop", "up", "home", "values", "."]
# ::lemmas ["indeed", ",", "the", "cynic", "say", "Chicagos", "rule", "(", "also", "for", "teacher", ",", "librarian", ")", "exist", "solely", "to", "prop", "up", "home", "value", "."]
(c30-14 / say-01
        :ARG0 (c30-13 / cynic)
        :ARG1 (c30-5 / exist-01
                     :ARG1 (c30-12 / rule
                                   :mod (c30-4 / ethnic-group
                                               :name (c30-9 / name
                                                            :op1 "Chicagos"))
                                   :beneficiary (c30-17 / and
                                                        :op1 (c30-11 / person
                                                                     :ARG0-of (c30-15 / teach-01))
                                                        :op2 (c30-16 / person
                                                                     :ARG0-of (c30-0 / have-org-role-91
                                                                                     :ARG2 (c30-1 / librarian)))
                                                        :mod (c30-7 / also)))
                     :ARG2 (c30-3 / prop-up-01
                                  :ARG0 c30-12
                                  :ARG1 (c30-10 / value
                                                :mod (c30-2 / home))
                                  :manner (c30-6 / sole)))
        :mod (c30-8 / indeed))

# ::snt Still waiting for the name of the cop who fled never to be seen again!
# ::tokens ["Still", "waiting", "for", "the", "name", "of", "the", "cop", "who", "fled", "never", "to", "be", "seen", "again", "!"]
# ::lemmas ["still", "wait", "for", "the", "name", "of", "the", "cop", "who", "flee", "never", "to", "be", "see", "again", "!"]
(c31-0 / wait-01
       :ARG2 (c31-7 / thing
                    :ARG2-of (c31-4 / name-01
                                    :ARG1 (c31-5 / cop
                                                 :ARG0-of (c31-1 / flee-05
                                                                 :time (c31-2 / ever)
                                                                 :ARG1-of (c31-6 / see-01
                                                                                 :mod (c31-8 / again)
                                                                                 :polarity -)))))
       :mod (c31-3 / still))

# ::snt I think it depends on the city, but it appears no for Ferguson.
# ::tokens ["I", "think", "it", "depends", "on", "the", "city", ",", "but", "it", "appears", "no", "for", "Ferguson", "."]
# ::lemmas ["i", "think", "it", "depend", "on", "the", "city", ",", "but", "it", "appear", "no", "for", "Ferguson", "."]
(c32-4 / contrast-01
       :ARG1 (c32-8 / think-01
                    :ARG0 (c32-0 / i)
                    :ARG1 (c32-3 / depend-01
                                 :ARG0 (c32-5 / it)
                                 :ARG1 (c32-6 / city)))
       :ARG2 (c32-9 / appear-02
                    :ARG1 (c32-1 / no
                                 :beneficiary (c32-7 / city
                                                     :name (c32-2 / name
                                                                  :op1 "Ferguson")))))

# ::snt If it's the Darren Wilson from SLMPD, his FB shows him in California
# ::tokens ["If", "it", "'s", "the", "Darren", "Wilson", "from", "SLMPD", ",", "his", "FB", "shows", "him", "in", "California"]
# ::lemmas ["if", "it", "be", "the", "Darren", "Wilson", "from", "SLMPD", ",", "his", "FB", "show", "he", "in", "California"]
(c33-8 / show-01
       :ARG0 (c33-5 / publication
                    :name (c33-4 / name
                                 :op1 "Facebook")
                    :poss (c33-9 / person
                                 :name (c33-3 / name
                                              :op1 "Darren"
                                              :op2 "Wilson")
                                 :ARG0-of (c33-0 / have-org-role-91
                                                 :ARG1 (c33-1 / organization
                                                              :name (c33-6 / name
                                                                           :op1 "SLMPD")))
                                 :ARG2-of c33-8))
       :location (c33-2 / state
                        :name (c33-7 / name
                                     :op1 "California"))
       :condition c33-9
       :domain c33-9)

# ::snt Of course it is because you only see skin color not character! Of which your is questionable!
# ::tokens ["Of", "course", "it", "is", "because", "you", "only", "see", "skin", "color", "not", "character", "!", "Of", "which", "your", "is", "questionable", "!"]
# ::lemmas ["of", "course", "it", "be", "because", "you", "only", "see", "skin", "color", "not", "character", "!", "of", "which", "your", "be", "questionable", "!"]
(c34-2 / multi-sentence
       :snt1 (c34-9 / cause-01
                    :ARG0 (c34-8 / contrast-01
                                 :ARG1 (c34-11 / see-01
                                               :ARG0 (c34-0 / you)
                                               :ARG1 (c34-10 / color
                                                             :mod (c34-5 / skin))
                                               :mod (c34-4 / only))
                                 :ARG2 (c34-1 / see-01
                                              :ARG0 c34-0
                                              :ARG1 (c34-12 / character)
                                              :polarity -))
                    :mod (c34-3 / of-course))
       :snt2 (c34-6 / question-03
                    :ARG1 (c34-7 / you)))

# ::snt I'm not sure how many municipalities require the officers to live in town.
# ::tokens ["I", "'m", "not", "sure", "how", "many", "municipalities", "require", "the", "officers", "to", "live", "in", "town", "."]
# ::lemmas ["i", "be", "not", "sure", "how", "many", "municipality", "require", "the", "officer", "to", "live", "in", "town", "."]
(c35-6 / sure-02
       :ARG0 (c35-3 / i)
       :ARG1 (c35-4 / number
                    :quant-of (c35-1 / municipality
                                     :ARG0-of (c35-5 / require-01
                                                     :ARG1 (c35-0 / live-01
                                                                  :ARG0 (c35-2 / officer)
                                                                  :location (c35-7 / town))
                                                     :ARG2 c35-2)))
       :polarity -)

# ::snt Can you please give me an example of police accused of brutality who have been assaulted in last decade
# ::tokens ["Can", "you", "please", "give", "me", "an", "example", "of", "police", "accused", "of", "brutality", "who", "have", "been", "assaulted", "in", "last", "decade"]
# ::lemmas ["can", "you", "please", "give", "i", "an", "example", "of", "police", "accuse", "of", "brutality", "who", "have", "be", "assault", "in", "last", "decade"]
(c36-5 / possible-01
       :ARG1 (c36-8 / give-01
                    :ARG0 (c36-0 / you)
                    :ARG1 (c36-10 / thing
                                  :example-of (c36-11 / police
                                                      :ARG1-of (c36-12 / accuse-01
                                                                       :ARG2 (c36-1 / brutalize-01
                                                                                    :ARG0 c36-11)
                                                                       :time (c36-7 / before
                                                                                    :op1 (c36-4 / now)
                                                                                    :duration (c36-9 / temporal-quantity
                                                                                                     :unit (c36-6 / decade)
                                                                                                     :quant 1)))
                                                      :ARG1-of (c36-2 / assault-01
                                                                      :ARG0 c36-11)))
                    :ARG2 (c36-3 / i))
       :polite +)

# ::snt how convenient for killer-cop Darren Wilson no? Thin Blue Line protects him long enough for him to flee &amp; avoid public scrutiny.
# ::tokens ["how", "convenient", "for", "killer", "-", "cop", "Darren", "Wilson", "no", "?", "Thin", "Blue", "Line", "protects", "him", "long", "enough", "for", "him", "to", "flee", "&", "amp", ";", "avoid", "public", "scrutiny", "."]
# ::lemmas ["how", "convenient", "for", "killer", "-", "cop", "Darren", "Wilson", "no", "?", "Thin", "Blue", "Line", "protect", "he", "long", "enough", "for", "he", "to", "flee", "&", "amp", ";", "avoid", "public", "scrutiny", "."]
(c37-0 / multi-sentence
       :snt1 (c37-18 / convenient
                     :domain (c37-1 / person
                                    :name (c37-12 / name
                                                  :op1 "Darren"
                                                  :op2 "Wilson")
                                    :ARG0-of (c37-7 / have-org-role-91
                                                    :ARG2 (c37-2 / cop
                                                                 :ARG0-of (c37-16 / kill-01))))
                     :degree (c37-6 / amr-unknown))
       :snt2 (c37-4 / protect-01
                    :ARG0 (c37-15 / company
                                  :name (c37-17 / name
                                                :op1 "Thin"
                                                :op2 "Blue"
                                                :op3 "Line"))
                    :ARG1 c37-1
                    :ARG1-of (c37-8 / long-03
                                    :ARG2-of (c37-5 / have-degree-91
                                                    :ARG1 c37-4
                                                    :ARG3 (c37-11 / enough)
                                                    :ARG6 (c37-14 / and
                                                                  :op1 (c37-9 / flee-05
                                                                              :ARG0 c37-1)
                                                                  :op2 (c37-13 / amp))
                                                    :purpose (c37-19 / avoid-01
                                                                     :ARG0 c37-1
                                                                     :ARG1 (c37-3 / scrutinize-01
                                                                                  :ARG0 (c37-10 / public)))))))

# ::snt Ferguson PD is not SLMPD.
# ::tokens ["Ferguson", "PD", "is", "not", "SLMPD", "."]
# ::lemmas ["Ferguson", "PD", "be", "not", "SLMPD", "."]
(c38-0 / have-polarity-91
       :ARG1 (c38-1 / organization
                    :name (c38-2 / name
                                 :op1 "SLMPD")
                    :domain (c38-4 / government-organization
                                   :name (c38-3 / name
                                                :op1 "Ferguson"
                                                :op2 "PD")))
       :ARG2 -)

# ::snt Ferguson cops aren't required to live in community they serve? Huh.RT : Arrived in Crestwood where officer Darren Wilson lives.
# ::tokens ["Ferguson", "cops", "are", "n't", "required", "to", "live", "in", "community", "they", "serve", "?", "Huh", ".", "RT", ":", "Arrived", "in", "Crestwood", "where", "officer", "Darren", "Wilson", "lives", "."]
# ::lemmas ["Ferguson", "cop", "be", "not", "require", "to", "live", "in", "community", "they", "serve", "?", "huh", ".", "RT", ":", "arrive", "in", "Crestwood", "where", "officer", "Darren", "Wilson", "live", "."]
(c39-1 / multi-sentence
       :snt1 (c39-13 / require-01
                     :ARG1 (c39-11 / live-01
                                   :ARG0 (c39-20 / cop
                                                 :ARG0-of (c39-10 / have-org-role-91
                                                                  :ARG1 (c39-5 / city
                                                                               :name (c39-12 / name
                                                                                             :op1 "Ferguson"))
                                                                  :ARG2 (c39-16 / cop)))
                                   :location (c39-17 / community
                                                     :ARG2-of (c39-6 / serve-01
                                                                     :ARG0 c39-20)))
                     :ARG2 c39-20
                     :polarity (c39-8 / amr-unknown)
                     :polarity -)
       :snt2 (c39-14 / uh-oh
                     :mode expressive)
       :snt3 (c39-15 / arrive-01
                     :ARG1 (c39-4 / publication
                                  :name (c39-19 / name
                                                :op1 "RT"))
                     :ARG4 (c39-0 / city
                                  :name (c39-2 / name
                                               :op1 "Crestwood")
                                  :location-of (c39-21 / live-01
                                                       :ARG0 (c39-7 / person
                                                                    :name (c39-3 / name
                                                                                 :op1 "Darren"
                                                                                 :op2 "Wilson")
                                                                    :ARG0-of (c39-9 / have-org-role-91
                                                                                    :ARG2 (c39-18 / officer)))))))

# ::snt where is the picture?
# ::tokens ["where", "is", "the", "picture", "?"]
# ::lemmas ["where", "be", "the", "picture", "?"]
(c40-2 / be-located-at-91
       :ARG1 (c40-0 / picture)
       :ARG2 (c40-1 / amr-unknown))

# ::snt Hey, you know, I have other *paid* work to do.
# ::tokens ["Hey", ",", "you", "know", ",", "I", "have", "other", "*", "paid", "*", "work", "to", "do", "."]
# ::lemmas ["hey", ",", "you", "know", ",", "i", "have", "other", "*", "pay", "*", "work", "to", "do", "."]
(c41-4 / obligate-01
       :ARG1 (c41-5 / i)
       :ARG2 (c41-1 / work-01
                    :ARG0 c41-5
                    :mod (c41-3 / other)
                    :ARG3-of (c41-6 / pay-01
                                    :ARG2 c41-5))
       :mod (c41-0 / hey
                   :mode expressive)
       :ARG1-of (c41-7 / know-01
                       :ARG0 (c41-2 / you)))

# ::snt He's in Mexico, drinking margaritas.
# ::tokens ["He", "'s", "in", "Mexico", ",", "drinking", "margaritas", "."]
# ::lemmas ["he", "be", "in", "Mexico", ",", "drink", "margarita", "."]
(c42-2 / be-located-at-91
       :ARG1 (c42-0 / he
                    :ARG0-of (c42-4 / drink-01
                                    :ARG1 (c42-1 / margarita)))
       :ARG2 (c42-5 / country
                    :name (c42-3 / name
                                 :op1 "Mexico")))

# ::snt Does that surprise anyone-figured they'd get him far out of town b/4 IDing him
# ::tokens ["Does", "that", "surprise", "anyone", "-", "figured", "they", "'d", "get", "him", "far", "out", "of", "town", "b/4", "IDing", "him"]
# ::lemmas ["do", "that", "surprise", "anyone", "-", "figure", "they", "would", "get", "he", "far", "out", "of", "town", "b/4", "ide", "he"]
(c43-11 / surprise-01
        :polarity (c43-13 / amr-unknown)
        :ARG0 (c43-12 / that)
        :ARG1 (c43-4 / anyone
                     :ARG0-of (c43-1 / figure-01
                                     :ARG1 (c43-9 / get-05
                                                  :ARG0 c43-4
                                                  :ARG1 (c43-0 / he)
                                                  :ARG2 (c43-3 / out-06
                                                               :ARG1 c43-0
                                                               :ARG2 (c43-10 / town)
                                                               :quant (c43-6 / far))
                                                  :ARG1-of (c43-8 / cause-01
                                                                  :ARG0 (c43-5 / ID-01
                                                                               :ARG0 (c43-2 / military
                                                                                            :name (c43-7 / name
                                                                                                         :op1 "4"))
                                                                               :ARG1 c43-0))))))

# ::snt people screamed for Zimmermans head. That Zionist piece of shit is still walking the streets. Stfu.
# ::tokens ["people", "screamed", "for", "Zimmermans", "head", ".", "That", "Zionist", "piece", "of", "shit", "is", "still", "walking", "the", "streets", ".", "Stfu", "."]
# ::lemmas ["people", "scream", "for", "Zimmermans", "head", ".", "that", "Zionist", "piece", "of", "shit", "be", "still", "walk", "the", "street", ".", "Stfu", "."]
(c44-3 / multi-sentence
       :snt1 (c44-12 / scream-01
                     :ARG0 (c44-10 / person)
                     :ARG3 (c44-0 / head
                                  :part-of (c44-15 / person
                                                   :name (c44-8 / name
                                                                :op1 "Zimmerman"))))
       :snt2 (c44-1 / walk-01
                    :ARG0 (c44-4 / piece
                                 :consist-of (c44-6 / shit)
                                 :mod (c44-14 / political-movement
                                              :name (c44-9 / name
                                                           :op1 "Zionism"))
                                 :mod (c44-13 / that))
                    :ARG2 (c44-2 / street)
                    :mod (c44-5 / still))
       :snt3 (c44-7 / person
                    :name (c44-11 / name
                                  :op1 "Stfu")))

# ::snt they gave him a head start.
# ::tokens ["they", "gave", "him", "a", "head", "start", "."]
# ::lemmas ["they", "give", "he", "a", "head", "start", "."]
(c45-1 / give-01
       :ARG0 (c45-3 / they)
       :ARG1 (c45-2 / start-01
                    :ARG0 (c45-0 / he)
                    :ARG2 (c45-4 / head))
       :ARG2 c45-0)

# ::snt Oh hello, sir. Sure come on in, ask away. What an idiot
# ::tokens ["Oh", "hello", ",", "sir", ".", "Sure", "come", "on", "in", ",", "ask", "away", ".", "What", "an", "idiot"]
# ::lemmas ["oh", "hello", ",", "sir", ".", "sure", "come", "on", "in", ",", "ask", "away", ".", "what", "an", "idiot"]
(c46-3 / multi-sentence
       :snt1 (c46-12 / say-01
                     :ARG0 (c46-8 / i)
                     :ARG1 (c46-0 / hello)
                     :ARG2 (c46-6 / sir)
                     :mod (c46-4 / oh
                                 :mode expressive))
       :snt2 (c46-13 / and
                     :op1 (c46-10 / come-on-25
                                  :ARG1 (c46-1 / you)
                                  :ARG1-of (c46-2 / sure-02)
                                  :mode imperative)
                     :op2 (c46-7 / ask-01
                                 :ARG0 c46-1
                                 :manner (c46-9 / away)
                                 :mode imperative))
       :snt3 (c46-11 / idiot
                     :degree (c46-5 / so)))

# ::snt yes. everything is about race to me.
# ::tokens ["yes", ".", "everything", "is", "about", "race", "to", "me", "."]
# ::lemmas ["yes", ".", "everything", "be", "about", "race", "to", "i", "."]
(c47-1 / race
       :topic-of (c47-0 / everything)
       :beneficiary (c47-2 / i))

# ::snt Thank you! I wanna know more about I'm following you! The first journalist to share some real info abt him!
# ::tokens ["Thank", "you", "!", "I", "wanna", "know", "more", "about", "I", "'m", "following", "you", "!", "The", "first", "journalist", "to", "share", "some", "real", "info", "abt", "him", "!"]
# ::lemmas ["thank", "you", "!", "i", "wanna", "know", "more", "about", "i", "be", "follow", "you", "!", "the", "first", "journalist", "to", "share", "some", "real", "info", "abt", "he", "!"]
(c48-4 / multi-sentence
       :snt1 (c48-15 / thank-01
                     :ARG0 (c48-9 / i)
                     :ARG1 (c48-1 / you))
       :snt2 (c48-2 / want-01
                    :ARG0 (c48-13 / i)
                    :ARG1 (c48-10 / know-01
                                  :ARG0 c48-13
                                  :ARG1 (c48-11 / more
                                                :topic (c48-3 / follow-02
                                                              :ARG0 c48-13
                                                              :ARG1 c48-1))))
       :snt3 (c48-0 / journalist
                    :ord (c48-7 / ordinal-entity
                                :value 1)
                    :ARG0-of (c48-14 / share-01
                                     :ARG1 (c48-5 / information
                                                  :ARG1-of (c48-12 / real-04)
                                                  :mod (c48-8 / some))
                                     :ARG2 (c48-6 / he))))

# ::snt How can he leave? He's a suspect in an on going investigation.
# ::tokens ["How", "can", "he", "leave", "?", "He", "'s", "a", "suspect", "in", "an", "on", "going", "investigation", "."]
# ::lemmas ["how", "can", "he", "leave", "?", "he", "be", "a", "suspect", "in", "an", "on", "go", "investigation", "."]
(c49-2 / multi-sentence
       :snt1 (c49-5 / possible-01
                    :ARG1 (c49-1 / leave-11
                                 :ARG0 (c49-0 / he))
                    :manner (c49-8 / amr-unknown))
       :snt2 (c49-7 / suspect-01
                    :ARG1 (c49-3 / he)
                    :ARG2 (c49-4 / investigate-01
                                 :ARG0 c49-3
                                 :ARG1-of (c49-6 / go-on-15))))
