# ::snt no thank you already know. :-/
# ::tokens ["no", "thank", "you", "already", "know", ".", ":-/"]
# ::lemmas ["no", "thank", "you", "already", "know", ".", ":-/"]
(c1-1 / multi-sentence
      :snt1 (c1-2 / no)
      :snt2 (c1-3 / know-01
                  :ARG0 (c1-0 / you)
                  :time (c1-4 / already)))

# ::snt but they have socialized medicine *and* fracking -- how can this be?
# ::tokens ["but", "they", "have", "socialized", "medicine", "*", "and", "*", "fracking", "--", "how", "can", "this", "be", "?"]
# ::lemmas ["but", "they", "have", "socialize", "medicine", "*", "and", "*", "fracke", "--", "how", "can", "this", "be", "?"]
(c2-6 / contrast-01
      :ARG2 (c2-0 / have-03
                  :ARG0 (c2-9 / they)
                  :ARG1 (c2-10 / and
                               :op1 (c2-2 / medicine
                                          :ARG1-of (c2-8 / socialize-02))
                               :op2 (c2-1 / frack-01))
                  :ARG0-of (c2-5 / cause-01
                                 :ARG1 (c2-4 / possible-01
                                             :ARG1 (c2-7 / this)
                                             :manner (c2-3 / amr-unknown)))))

# ::snt One of the pleasures of going to school in Potsdam &amp; living in Masena was CBC.
# ::tokens ["One", "of", "the", "pleasures", "of", "going", "to", "school", "in", "Potsdam", "&", "amp", ";", "living", "in", "Masena", "was", "CBC", "."]
# ::lemmas ["One", "of", "the", "pleasure", "of", "go", "to", "school", "in", "Potsdam", "&", "amp", ";", "live", "in", "Masena", "be", "CBC", "."]
(c3-3 / include-91
      :ARG1 (c3-0 / live-01
                  :location (c3-8 / city
                                  :name (c3-4 / name
                                              :op1 "Masena")))
      :ARG2 (c3-13 / thing
                   :ARG1-of (c3-2 / enjoy-01
                                  :ARG0 (c3-14 / and
                                               :op1 (c3-9 / go-02
                                                          :ARG4 (c3-11 / school
                                                                       :location (c3-7 / city
                                                                                       :name (c3-5 / name
                                                                                                   :op1 "Potsdam"))))
                                               :op2 (c3-10 / trip-03
                                                           :ARG4 (c3-12 / city
                                                                        :name (c3-6 / name
                                                                                    :op1 "Potsdam"))))))
      :ARG3 (c3-1 / one))

# ::snt oh shit, I forgot you are visiting Canada arent you?
# ::tokens ["oh", "shit", ",", "I", "forgot", "you", "are", "visiting", "Canada", "are", "nt", "you", "?"]
# ::lemmas ["oh", "shit", ",", "i", "forget", "you", "be", "visit", "Canada", "be", "not", "you", "?"]
(c4-1 / forget-01
      :ARG0 (c4-3 / i)
      :ARG1 (c4-5 / visit-01
                  :ARG0 (c4-0 / you)
                  :ARG1 (c4-7 / country
                              :name (c4-4 / name
                                          :op1 "Canada")))
      :mod (c4-8 / shit
                 :mod (c4-2 / oh)
                 :mode expressive)
      :ARG1-of (c4-6 / request-confirmation-91))

# ::snt I'm watching ...
# ::tokens ["I", "'m", "watching", "..."]
# ::lemmas ["i", "be", "watch", "..."]
(c5-0 / watch-01
      :ARG0 (c5-1 / i))

# ::snt I read Americans tweeting their kind thoughts and prayers to Canada today. And, then I read this.
# ::tokens ["I", "read", "Americans", "tweeting", "their", "kind", "thoughts", "and", "prayers", "to", "Canada", "today", ".", "And", ",", "then", "I", "read", "this", "."]
# ::lemmas ["i", "read", "Americans", "tweet", "their", "kind", "thought", "and", "prayer", "to", "Canada", "today", ".", "and", ",", "then", "i", "read", "this", "."]
(c6-0 / multi-sentence
      :snt1 (c6-8 / read-01
                  :ARG0 (c6-10 / i)
                  :ARG1 (c6-20 / tweet-02
                               :ARG0 (c6-3 / person
                                           :mod (c6-18 / country
                                                       :name (c6-7 / name
                                                                   :op1 "America")))
                               :ARG1 (c6-6 / and
                                           :op1 (c6-19 / thing
                                                       :ARG1-of (c6-11 / think-01
                                                                       :ARG0 c6-3)
                                                       :ARG1-of (c6-13 / kind-01))
                                           :op2 (c6-15 / thing
                                                       :ARG1-of (c6-5 / pray-01
                                                                      :ARG0 c6-3)
                                                       :ARG1-of (c6-9 / kind-01)))
                               :ARG2 (c6-4 / country
                                           :name (c6-17 / name
                                                        :op1 "Canada"))
                               :time (c6-16 / today)))
      :snt2 c6-6
      :op2 (c6-1 / read-01
                 :ARG0 (c6-12 / i)
                 :ARG1 (c6-14 / this)
                 :time (c6-2 / then)))

# ::snt Waiting for the chants of "CNN! CNN!" to go with "USA! USA!"
# ::tokens ["Waiting", "for", "the", "chants", "of", "\"", "CNN", "!", "CNN", "!", "\"", "to", "go", "with", "\"", "USA", "!", "USA", "!", "\""]
# ::lemmas ["wait", "for", "the", "chant", "of", "\"", "CNN", "!", "CNN", "!", "\"", "to", "go", "with", "\"", "USA", "!", "USA", "!", "\""]
(c7-0 / wait-01
      :ARG2 (c7-2 / chant-01
                  :ARG1 (c7-3 / go-22
                              :ARG1 (c7-4 / string-entity
                                          :value "CNN! CNN!")
                              :ARG2 (c7-1 / string-entity
                                          :value "USA! USA!"))))

# ::snt I kinda think most Americans know that by now, or at least suspect. Partial credit?
# ::tokens ["I", "kinda", "think", "most", "Americans", "know", "that", "by", "now", ",", "or", "at", "least", "suspect", ".", "Partial", "credit", "?"]
# ::lemmas ["i", "kinda", "think", "most", "Americans", "know", "that", "by", "now", ",", "or", "at", "least", "suspect", ".", "partial", "credit", "?"]
(c8-0 / multi-sentence
      :snt1 (c8-15 / think-01
                   :ARG0 (c8-5 / i)
                   :ARG1 (c8-2 / or
                               :op1 (c8-6 / know-01
                                          :ARG0 (c8-9 / person
                                                      :mod (c8-11 / country
                                                                  :name (c8-7 / name
                                                                              :op1 "America"))
                                                      :quant (c8-10 / most))
                                          :ARG1 (c8-13 / that)
                                          :time (c8-1 / by
                                                      :op1 (c8-8 / now)))
                               :op2 (c8-14 / suspect-01
                                           :ARG0 c8-9
                                           :ARG1 c8-13
                                           :mod (c8-17 / at-least)))
                   :degree (c8-3 / kind-of))
      :snt2 (c8-12 / credit-02
                   :mod (c8-16 / partial)
                   :polarity (c8-4 / amr-unknown)))

# ::snt The true miracle would be an admission that we have anything to learn from anyone.
# ::tokens ["The", "true", "miracle", "would", "be", "an", "admission", "that", "we", "have", "anything", "to", "learn", "from", "anyone", "."]
# ::lemmas ["the", "true", "miracle", "would", "be", "an", "admission", "that", "we", "have", "anything", "to", "learn", "from", "anyone", "."]
(c9-3 / miracle
      :ARG1-of (c9-6 / true-01)
      :domain (c9-7 / admit-01
                    :ARG1 (c9-0 / have-03
                                :ARG0 (c9-1 / we)
                                :ARG1 (c9-4 / anything
                                            :ARG1-of (c9-2 / learn-01
                                                           :ARG0 c9-1
                                                           :ARG2 (c9-5 / anyone))))))

# ::snt Not the time.
# ::tokens ["Not", "the", "time", "."]
# ::lemmas ["not", "the", "time", "."]
(c10-0 / time
       :polarity -)

# ::snt Those of us who are rational already knew this.
# ::tokens ["Those", "of", "us", "who", "are", "rational", "already", "knew", "this", "."]
# ::lemmas ["those", "of", "we", "who", "be", "rational", "already", "know", "this", "."]
(c11-2 / know-01
       :ARG0 (c11-3 / person
                    :mod (c11-6 / that)
                    :ARG1-of (c11-1 / include-91
                                    :ARG2 (c11-0 / we))
                    :ARG1-of (c11-4 / rational-02))
       :ARG1 (c11-5 / this)
       :time (c11-7 / already))

# ::snt I'll be in touch!
# ::tokens ["I", "'ll", "be", "in", "touch", "!"]
# ::lemmas ["i", "'ll", "be", "in", "touch", "!"]
(c12-1 / in-touch-12
       :ARG0 (c12-0 / i)
       :mode expressive)

# ::snt We're number one! We're number one!
# ::tokens ["We", "'re", "number", "one", "!", "We", "'re", "number", "one", "!"]
# ::lemmas ["we", "be", "number", "one", "!", "we", "be", "number", "one", "!"]
(c13-1 / multi-sentence
       :snt1 (c13-3 / number
                    :domain (c13-0 / we)
                    :value 1)
       :snt2 (c13-4 / number
                    :domain (c13-2 / we)
                    :value 1))

# ::snt Amen!
# ::tokens ["Amen", "!"]
# ::lemmas ["amen", "!"]
(c14-0 / amen
       :mode expressive)

# ::snt Good chunk of us already know.
# ::tokens ["Good", "chunk", "of", "us", "already", "know", "."]
# ::lemmas ["good", "chunk", "of", "we", "already", "know", "."]
(c15-4 / know-01
       :ARG0 (c15-2 / chunk
                    :ARG1-of (c15-3 / good-02)
                    :ARG1-of (c15-1 / include-91
                                    :ARG2 (c15-0 / we)))
       :time (c15-5 / already))

# ::snt US politicians and media : Grifters and their scribes.
# ::tokens ["US", "politicians", "and", "media", ":", "Grifters", "and", "their", "scribes", "."]
# ::lemmas ["US", "politician", "and", "medium", ":", "grifter", "and", "their", "scribe", "."]
(c16-8 / and
       :op1 (c16-1 / and
                   :op1 (c16-4 / politician)
                   :op2 (c16-0 / media)
                   :mod (c16-5 / country
                               :name (c16-2 / name
                                            :op1 "US")))
       :op2 (c16-3 / and
                   :op1 (c16-6 / grifter)
                   :op2 (c16-7 / scribe)
                   :poss c16-1))

# ::snt Thank you, and thats *after* our Canadians' news quality has somewhat degraded over the past yrs w govt hostility to CBC.
# ::tokens ["Thank", "you", ",", "and", "that", "s", "*", "after", "*", "our", "Canadians", "'", "news", "quality", "has", "somewhat", "degraded", "over", "the", "past", "yrs", "w", "govt", "hostility", "to", "CBC", "."]
# ::lemmas ["thank", "you", ",", "and", "that", "s", "*", "after", "*", "our", "Canadians", "'", "news", "quality", "have", "somewhat", "degrade", "over", "the", "past", "yrs", "w", "govt", "hostility", "to", "CBC", "."]
(c17-8 / and
       :op1 (c17-23 / thank-01
                    :ARG0 (c17-16 / i)
                    :ARG1 (c17-19 / you))
       :op2 (c17-10 / be-temporally-at-91
                    :ARG1 (c17-3 / degrade-01
                                 :ARG1 (c17-11 / quality
                                               :mod (c17-12 / news)
                                               :poss (c17-2 / person
                                                            :mod (c17-21 / country
                                                                         :name (c17-20 / name
                                                                                       :op1 "Canada"))
                                                            :poss (c17-14 / we)))
                                 :degree (c17-6 / somewhat)
                                 :time (c17-17 / before
                                               :op1 (c17-0 / now)
                                               :duration (c17-22 / temporal-quantity
                                                                 :unit (c17-18 / year)
                                                                 :quant 1))
                                 :ARG1-of (c17-4 / cause-01
                                                 :ARG0 (c17-9 / hostility
                                                              :mod (c17-13 / government-organization
                                                                           :ARG0-of (c17-5 / govern-01))
                                                              :beneficiary (c17-7 / publication
                                                                                  :name (c17-1 / name
                                                                                               :op1 "CBC")))))
                    :ARG2 (c17-15 / after)))

# ::snt thats why I watch BBC
# ::tokens ["that", "s", "why", "I", "watch", "BBC"]
# ::lemmas ["that", "s", "why", "i", "watch", "BBC"]
(c18-4 / cause-01
       :ARG0 (c18-5 / that)
       :ARG1 (c18-0 / watch-01
                    :ARG0 (c18-1 / i)
                    :ARG1 (c18-3 / publication
                                 :name (c18-2 / name
                                              :op1 "BBC"))))
