# ::snt exactly you're defending the area by claiming there uneducated or ignorant which still is no excuse
# ::tokens ["exactly", "you", "'re", "defending", "the", "area", "by", "claiming", "there", "uneducated", "or", "ignorant", "which", "still", "is", "no", "excuse"]
# ::lemmas ["exactly", "you", "be", "defend", "the", "area", "by", "claim", "there", "uneducated", "or", "ignorant", "which", "still", "be", "no", "excuse"]
(c1-6 / defend-01
      :ARG0 (c1-0 / you)
      :ARG1 (c1-9 / area)
      :manner (c1-7 / claim-01
                    :ARG0 c1-0
                    :ARG1 (c1-3 / or
                                :op1 (c1-4 / educate-01
                                           :ARG1 c1-9
                                           :polarity -)
                                :op2 (c1-5 / ignorant-02
                                           :ARG1 c1-9)
                                :ARG2-of (c1-2 / excuse-02
                                               :mod (c1-8 / still)
                                               :polarity -)))
      :mod (c1-1 / exact))

# ::snt : Why do whites run a mostly black town? See what's fueling long-simmering tension in " HMMMM because we live in America. -.-
# ::tokens [":", "Why", "do", "whites", "run", "a", "mostly", "black", "town", "?", "See", "what", "'s", "fueling", "long", "-", "simmering", "tension", "in", "\"", "HMMMM", "because", "we", "live", "in", "America", ".", "-.-"]
# ::lemmas [":", "why", "do", "white", "run", "a", "mostly", "black", "town", "?", "see", "what", "be", "fuel", "long", "-", "simmer", "tension", "in", "\"", "HMMMM", "because", "we", "live", "in", "America", ".", "-.-"]
(c2-0 / multi-sentence
      :snt1 (c2-12 / run-01
                   :ARG0 (c2-2 / person
                               :ARG1-of (c2-13 / white-02))
                   :ARG1 (c2-22 / town
                                :ARG1-of (c2-9 / black-05
                                               :mod (c2-11 / most)))
                   :ARG1-of (c2-20 / cause-01
                                   :ARG0 (c2-6 / amr-unknown)))
      :snt2 (c2-4 / see-01
                  :ARG0 (c2-18 / you)
                  :ARG1 (c2-21 / thing
                               :ARG0-of (c2-7 / fuel-01
                                              :ARG1 (c2-15 / tension
                                                           :ARG1-of (c2-14 / immer-01
                                                                           :ARG1-of (c2-8 / long-03))
                                                           :location (c2-5 / publication
                                                                           :name (c2-10 / name
                                                                                        :op1 "HMMMM"))
                                                           :ARG1-of (c2-3 / cause-01
                                                                          :ARG0 (c2-16 / live-01
                                                                                       :ARG0 (c2-1 / we)
                                                                                       :location (c2-17 / country
                                                                                                        :name (c2-19 / name
                                                                                                                     :op1 "America")))))))
                  :mode imperative))

# ::snt I really don't care about making insinuations... Let's just wait for the autopsy results
# ::tokens ["I", "really", "do", "n't", "care", "about", "making", "insinuations", "...", "Let", "'s", "just", "wait", "for", "the", "autopsy", "results"]
# ::lemmas ["i", "really", "do", "not", "care", "about", "make", "insinuation", "...", "let", "us", "just", "wait", "for", "the", "autopsy", "result"]
(c3-2 / multi-sentence
      :snt1 (c3-7 / care-01
                  :ARG0 (c3-3 / i)
                  :ARG1 (c3-8 / insinuate-01
                              :ARG0 c3-3)
                  :ARG1-of (c3-6 / real-04)
                  :polarity -)
      :snt2 (c3-1 / wait-01
                  :ARG1 (c3-4 / we)
                  :ARG2 (c3-5 / result-01
                              :ARG2 (c3-9 / autopsy))
                  :mod (c3-0 / just)
                  :mode imperative))

# ::snt Why do whites run a mostly black town?&lt;----Is that a real question?Institutionalized racism is why.
# ::tokens ["Why", "do", "whites", "run", "a", "mostly", "black", "town?&lt;----Is", "that", "a", "real", "question?Institutionalized", "racism", "is", "why", "."]
# ::lemmas ["why", "do", "white", "run", "a", "mostly", "black", "town?&lt;----Is", "that", "a", "real", "question?institutionalized", "racism", "be", "why", "."]
(c4-1 / multi-sentence
      :snt1 (c4-10 / run-01
                   :ARG0 (c4-9 / person
                               :ARG1-of (c4-0 / white-02))
                   :ARG1 (c4-15 / town
                                :ARG1-of (c4-2 / black-05
                                               :mod (c4-11 / most)))
                   :ARG1-of (c4-12 / cause-01
                                   :ARG0 (c4-16 / amr-unknown))
                   :ARG1-of (c4-3 / question-01
                                  :ARG1-of (c4-7 / real-04)
                                  :polarity (c4-5 / amr-unknown)))
      :snt2 (c4-13 / cause-01
                   :ARG0 (c4-6 / institutionalize-02
                               :ARG1 (c4-4 / racism))
                   :ARG1-of (c4-14 / cause-01
                                   :ARG0 (c4-8 / amr-unknown))))

# ::snt smh its a mess
# ::tokens ["smh", "its", "a", "mess"]
# ::lemmas ["smh", "its", "a", "mess"]
(c5-1 / mess
      :domain (c5-2 / it)
      :mod (c5-0 / yeah
                 :mode expressive))

# ::snt that's not what the article stated
# ::tokens ["that", "'s", "not", "what", "the", "article", "stated"]
# ::lemmas ["that", "be", "not", "what", "the", "article", "state"]
(c6-0 / state-01
      :ARG0 (c6-2 / article)
      :ARG1 (c6-1 / that)
      :polarity -)

# ::snt which election cycle are you referring to?
# ::tokens ["which", "election", "cycle", "are", "you", "referring", "to", "?"]
# ::lemmas ["which", "election", "cycle", "be", "you", "refer", "to", "?"]
(c7-2 / refer-01
      :ARG0 (c7-0 / you)
      :ARG1 (c7-3 / cycle
                  :mod (c7-1 / elect-01)
                  :mod (c7-4 / amr-unknown)))

# ::snt about a fact
# ::tokens ["about", "a", "fact"]
# ::lemmas ["about", "a", "fact"]
(c8-0 / fact)

# ::snt Someone so ugly making even uglier statements... Watch yourself. Also, a black man runs the U.S. Not sure you're aware.
# ::tokens ["Someone", "so", "ugly", "making", "even", "uglier", "statements", "...", "Watch", "yourself", ".", "Also", ",", "a", "black", "man", "runs", "the", "U.S.", "Not", "sure", "you", "'re", "aware", "."]
# ::lemmas ["someone", "so", "ugly", "make", "even", "uglier", "statement", "...", "watch", "yourself", ".", "also", ",", "a", "black", "man", "run", "the", "U.S.", "not", "sure", "you", "be", "aware", "."]
(c9-0 / multi-sentence
      :snt1 (c9-2 / state-01
                  :ARG0 (c9-9 / someone
                              :mod (c9-15 / ugly
                                          :ARG2-of (c9-5 / have-degree-91
                                                         :ARG1 c9-9
                                                         :ARG3 (c9-18 / so))))
                  :mod (c9-10 / even)
                  :ARG1-of (c9-4 / have-degree-91
                                 :ARG2 c9-15)
                  :ARG3 (c9-12 / more))
      :snt2 (c9-14 / watch-01
                   :ARG0 (c9-17 / you
                                :ARG1-of c9-14)
                   :mode imperative)
      :snt3 (c9-13 / run-01
                   :ARG0 (c9-6 / man
                               :ARG1-of (c9-7 / black-05))
                   :ARG1 (c9-19 / country
                                :name (c9-11 / name
                                             :op1 "U.S."))
                   :mod (c9-3 / also))
      :snt4 (c9-8 / sure-02
                  :ARG0 (c9-16 / i)
                  :ARG1 (c9-1 / realize-01
                              :ARG0 (c9-20 / you))
                  :polarity -))

# ::snt Finish school. keep out of trouble be honest and upright then you might have a chance to do this. Far to many use other tactics.
# ::tokens ["Finish", "school", ".", "keep", "out", "of", "trouble", "be", "honest", "and", "upright", "then", "you", "might", "have", "a", "chance", "to", "do", "this", ".", "Far", "to", "many", "use", "other", "tactics", "."]
# ::lemmas ["finish", "school", ".", "keep", "out", "of", "trouble", "be", "honest", "and", "upright", "then", "you", "might", "have", "a", "chance", "to", "do", "this", ".", "far", "to", "many", "use", "other", "tactic", "."]
(c10-0 / multi-sentence
       :snt1 (c10-9 / finish-01
                    :ARG0 (c10-14 / you)
                    :ARG1 (c10-4 / school)
                    :mode imperative)
       :snt2 (c10-7 / and
                    :op1 (c10-8 / honest-01
                                :ARG0 (c10-18 / you)
                                :mode imperative)
                    :op2 (c10-11 / upright
                                 :domain c10-18
                                 :mode imperative)
                    :ARG0-of (c10-17 / cause-01
                                     :ARG1 (c10-1 / possible-01
                                                  :ARG1 (c10-2 / chance-02
                                                               :ARG0 c10-18
                                                               :ARG1 (c10-3 / do-02
                                                                            :ARG0 c10-18
                                                                            :ARG1 (c10-19 / this))))))
       :snt3 (c10-10 / use-01
                     :ARG0 (c10-5 / person
                                  :quant (c10-16 / far)
                                  :ARG1-of (c10-6 / have-quant-91
                                                  :ARG3 (c10-13 / too)))
                     :ARG1 (c10-12 / tactic
                                   :mod (c10-15 / other))))

# ::snt why would make a rational point, it's not news to them. Let's make the situation worse.
# ::tokens ["why", "would", "make", "a", "rational", "point", ",", "it", "'s", "not", "news", "to", "them", ".", "Let", "'s", "make", "the", "situation", "worse", "."]
# ::lemmas ["why", "would", "make", "a", "rational", "point", ",", "it", "be", "not", "news", "to", "they", ".", "let", "us", "make", "the", "situation", "bad", "."]
(c11-2 / multi-sentence
       :snt1 (c11-7 / point-04
                    :ARG0 (c11-4 / i)
                    :ARG1-of (c11-8 / rational-02)
                    :ARG1-of (c11-9 / cause-01
                                    :ARG0 (c11-13 / amr-unknown))
                    :ARG1-of (c11-10 / cause-01
                                     :ARG0 (c11-3 / amr-unknown))
                    :concession (c11-6 / news
                                       :beneficiary (c11-12 / they)
                                       :polarity -))
       :snt2 (c11-1 / let-01
                    :ARG0 (c11-0 / we)
                    :ARG1 (c11-5 / worsen-01
                                 :ARG0 c11-0
                                 :ARG1 (c11-11 / situation))))

# ::snt so hitting someone in the face means they should be killed? I understand retaliation.. A shot or two
# ::tokens ["so", "hitting", "someone", "in", "the", "face", "means", "they", "should", "be", "killed", "?", "I", "understand", "retaliation", "..", "A", "shot", "or", "two"]
# ::lemmas ["so", "hit", "someone", "in", "the", "face", "mean", "they", "should", "be", "kill", "?", "i", "understand", "retaliation", "..", "a", "shot", "or", "two"]
(c12-2 / multi-sentence
       :snt1 (c12-8 / mean-01
                    :polarity (c12-12 / amr-unknown)
                    :ARG1 (c12-0 / hit-01
                                 :ARG1 (c12-10 / someone
                                               :part (c12-1 / face
                                                            :ARG2-of c12-0)))
                    :ARG2 (c12-9 / recommend-01
                                 :ARG1 (c12-11 / kill-01
                                               :ARG1 c12-10)))
       :snt2 (c12-3 / understand-01
                    :ARG0 (c12-6 / i)
                    :ARG1 (c12-7 / retaliate-01))
       :snt3 (c12-5 / shoot-01
                    :quant (c12-4 / or
                                  :op1 1
                                  :op2 2)))

# ::snt by stores to where only shitty gas stations and liquor stores Chinese and title loan and ghetto nailand hair shops exist
# ::tokens ["by", "stores", "to", "where", "only", "shitty", "gas", "stations", "and", "liquor", "stores", "Chinese", "and", "title", "loan", "and", "ghetto", "nailand", "hair", "shops", "exist"]
# ::lemmas ["by", "store", "to", "where", "only", "shitty", "gas", "station", "and", "liquor", "store", "Chinese", "and", "title", "loan", "and", "ghetto", "nailand", "hair", "shop", "exist"]
(c13-4 / be-located-at-91
       :ARG2 (c13-15 / and
                     :op1 (c13-13 / store
                                  :mod (c13-12 / gas)
                                  :mod (c13-7 / shitty))
                     :op2 (c13-2 / store
                                 :mod (c13-3 / liquor)
                                 :mod c13-7)
                     :mod (c13-11 / country
                                  :name (c13-8 / name
                                               :op1 "China"))
                     :op3 (c13-6 / shop
                                 :mod (c13-0 / hair)
                                 :mod (c13-10 / country
                                              :name (c13-9 / name
                                                           :op1 "North"
                                                           :op2 "Korea"))
                                 :ARG2-of (c13-14 / title-01))
                     :mod (c13-5 / only))
       :location (c13-1 / store))

# ::snt new reports reveal there was gang membership, strong armed robbery &amp; the officer involved treated for wounds.
# ::tokens ["new", "reports", "reveal", "there", "was", "gang", "membership", ",", "strong", "armed", "robbery", "&", "amp", ";", "the", "officer", "involved", "treated", "for", "wounds", "."]
# ::lemmas ["new", "report", "reveal", "there", "be", "gang", "membership", ",", "strong", "armed", "robbery", "&", "amp", ";", "the", "officer", "involve", "treat", "for", "wound", "."]
(c14-10 / reveal-01
        :ARG0 (c14-7 / report-01
                     :ARG1-of (c14-8 / new-01))
        :ARG1 (c14-14 / and
                      :op1 (c14-0 / have-org-role-91
                                  :ARG1 (c14-11 / gang)
                                  :ARG2 (c14-2 / member))
                      :op2 c14-14
                      :op1 (c14-4 / rob-01
                                  :ARG1-of (c14-5 / arm-01))
                      :op2 (c14-9 / amp)
                      :ARG1-of (c14-12 / strong-02))
        :op3 (c14-13 / treat-03
                     :ARG1 (c14-3 / officer
                                  :ARG1-of (c14-6 / involve-01))
                     :ARG2 (c14-1 / wound-01
                                  :ARG1 c14-3)))

# ::snt do you follow CNN for information or sentimental value? That's odd. But thank you. Have a blessed day as well.
# ::tokens ["do", "you", "follow", "CNN", "for", "information", "or", "sentimental", "value", "?", "That", "'s", "odd", ".", "But", "thank", "you", ".", "Have", "a", "blessed", "day", "as", "well", "."]
# ::lemmas ["do", "you", "follow", "CNN", "for", "information", "or", "sentimental", "value", "?", "that", "be", "odd", ".", "but", "thank", "you", ".", "have", "a", "bless", "day", "as", "well", "."]
(c15-0 / multi-sentence
       :snt1 (c15-8 / follow-02
                    :ARG0 (c15-14 / you)
                    :ARG1 (c15-3 / publication
                                 :name (c15-10 / name
                                               :op1 "CNN"))
                    :polarity (c15-6 / amr-unknown)
                    :purpose (c15-16 / or
                                     :op1 (c15-12 / information)
                                     :op2 (c15-2 / value
                                                 :mod (c15-5 / sentiment)))
                    :mod (c15-15 / odd
                                 :domain (c15-19 / that)))
       :snt2 (c15-17 / contrast-01
                     :ARG2 (c15-18 / thank-01
                                   :ARG1 (c15-13 / you)))
       :snt3 (c15-7 / have-03
                    :ARG0 (c15-1 / you)
                    :ARG1 (c15-4 / day
                                 :ARG1-of (c15-9 / bless-01)
                                 :mod (c15-11 / as-well))
                    :mode imperative))

# ::snt we need that autopsy report it will tell us how many bullets Brown was struck with ..
# ::tokens ["we", "need", "that", "autopsy", "report", "it", "will", "tell", "us", "how", "many", "bullets", "Brown", "was", "struck", "with", ".."]
# ::lemmas ["we", "need", "that", "autopsy", "report", "it", "will", "tell", "we", "how", "many", "bullet", "Brown", "be", "strike", "with", ".."]
(c16-2 / need-01
       :ARG0 (c16-0 / we)
       :ARG1 (c16-5 / report-01
                    :ARG1 (c16-10 / autopsy)
                    :mod (c16-9 / that)
                    :ARG0-of (c16-7 / tell-01
                                    :ARG1 (c16-3 / number
                                                 :quant-of (c16-1 / bullet
                                                                  :ARG2-of (c16-8 / strike-01
                                                                                  :ARG1 (c16-4 / person
                                                                                               :name (c16-6 / name
                                                                                                            :op1 "Brown")))))
                                    :ARG2 c16-0)))

# ::snt he never fought back.. There was never a physical interaction. He was running when a gun was drawn at him.
# ::tokens ["he", "never", "fought", "back", "..", "There", "was", "never", "a", "physical", "interaction", ".", "He", "was", "running", "when", "a", "gun", "was", "drawn", "at", "him", "."]
# ::lemmas ["he", "never", "fight", "back", "..", "there", "be", "never", "a", "physical", "interaction", ".", "he", "be", "run", "when", "a", "gun", "be", "draw", "at", "he", "."]
(c17-2 / multi-sentence
       :snt1 (c17-1 / fight-back-04
                    :ARG0 (c17-0 / he)
                    :time (c17-4 / ever)
                    :polarity -)
       :snt2 (c17-5 / interact-01
                    :ARG0 (c17-9 / i)
                    :ARG1 c17-0
                    :time (c17-3 / ever)
                    :mod (c17-6 / physical)
                    :polarity -)
       :snt3 (c17-7 / run-02
                    :ARG0 (c17-11 / he)
                    :time (c17-8 / draw-02
                                 :ARG1 (c17-10 / gun)
                                 :ARG2 c17-11)))

# ::snt Officers are not trained to discriminate based on race. Break the law you get arrested.
# ::tokens ["Officers", "are", "not", "trained", "to", "discriminate", "based", "on", "race", ".", "Break", "the", "law", "you", "get", "arrested", "."]
# ::lemmas ["officer", "be", "not", "train", "to", "discriminate", "base", "on", "race", ".", "break", "the", "law", "you", "get", "arrest", "."]
(c18-2 / multi-sentence
       :snt1 (c18-8 / train-01
                    :ARG1 (c18-5 / discriminate-02
                                 :ARG0 (c18-4 / officer)
                                 :ARG1-of (c18-3 / base-02
                                                 :ARG2 (c18-6 / race)))
                    :ARG2 c18-4
                    :polarity -)
       :snt2 (c18-9 / arrest-01
                    :ARG1 (c18-0 / you)
                    :condition (c18-7 / break-18
                                      :ARG0 c18-0
                                      :ARG1 (c18-1 / law)
                                      :mode imperative)))

# ::snt --You just hit the nail directly on the head.
# ::tokens ["--You", "just", "hit", "the", "nail", "directly", "on", "the", "head", "."]
# ::lemmas ["--you", "just", "hit", "the", "nail", "directly", "on", "the", "head", "."]
(c19-0 / hit-01
       :ARG0 (c19-1 / you)
       :ARG1 (c19-5 / head
                    :part-of (c19-3 / nail))
       :time (c19-2 / just)
       :ARG1-of (c19-4 / direct-02))

# ::snt want to erase that and make it make grammatical sense or are you contempt with looking like a remedial ignorant?
# ::tokens ["want", "to", "erase", "that", "and", "make", "it", "make", "grammatical", "sense", "or", "are", "you", "contempt", "with", "looking", "like", "a", "remedial", "ignorant", "?"]
# ::lemmas ["want", "to", "erase", "that", "and", "make", "it", "make", "grammatical", "sense", "or", "be", "you", "contempt", "with", "look", "like", "a", "remedial", "ignorant", "?"]
(c20-14 / amr-choice
        :op1 (c20-0 / want-01
                    :ARG0 (c20-1 / you)
                    :ARG1 (c20-5 / and
                                 :op1 (c20-4 / erase-01
                                             :ARG0 c20-1
                                             :ARG1 (c20-13 / that))
                                 :op2 (c20-3 / make-02
                                             :ARG0 c20-1
                                             :ARG1 (c20-12 / sense-02
                                                           :ARG1 c20-13
                                                           :mod (c20-10 / grammar)))))
        :op2 (c20-9 / contempt
                    :polarity (c20-7 / amr-unknown)
                    :domain c20-1
                    :ARG1-of (c20-8 / cause-01
                                    :ARG0 (c20-2 / look-02
                                                 :ARG0 c20-1
                                                 :ARG1 (c20-6 / ignorant-02
                                                              :ARG2 (c20-11 / remedial))))))

# ::snt English please
# ::tokens ["English", "please"]
# ::lemmas ["English", "please"]
(c21-1 / language
       :name (c21-0 / name
                    :op1 "English")
       :polite +)

# ::snt the poor people there probably do not have the education nor experience to run for congress
# ::tokens ["the", "poor", "people", "there", "probably", "do", "not", "have", "the", "education", "nor", "experience", "to", "run", "for", "congress"]
# ::lemmas ["the", "poor", "people", "there", "probably", "do", "not", "have", "the", "education", "nor", "experience", "to", "run", "for", "congress"]
(c22-6 / probable
       :domain (c22-0 / have-03
                      :ARG0 (c22-10 / person
                                    :mod (c22-1 / poor)
                                    :location (c22-9 / there))
                      :ARG1 (c22-3 / or
                                   :op1 (c22-4 / educate-01
                                               :ARG1 c22-10)
                                   :op2 (c22-2 / experience-01
                                               :ARG0 c22-10))
                      :purpose (c22-7 / run-02
                                      :ARG0 c22-10
                                      :ARG1 (c22-8 / government-organization
                                                   :name (c22-5 / name
                                                                :op1 "Congress")))
                      :polarity -))

# ::snt who is running the headlines over at ? They are looking like fox news right now
# ::tokens ["who", "is", "running", "the", "headlines", "over", "at", "?", "They", "are", "looking", "like", "fox", "news", "right", "now"]
# ::lemmas ["who", "be", "run", "the", "headline", "over", "at", "?", "they", "be", "look", "like", "fox", "news", "right", "now"]
(c23-2 / multi-sentence
       :snt1 (c23-8 / run-09
                    :ARG0 (c23-10 / amr-unknown)
                    :ARG1 (c23-0 / headline)
                    :mod (c23-4 / over))
       :snt2 (c23-1 / look-02
                    :ARG0 (c23-9 / they)
                    :ARG1 (c23-3 / broadcast-program
                                 :name (c23-6 / name
                                              :op1 "Fox"
                                              :op2 "News"))
                    :time (c23-7 / now
                                 :mod (c23-5 / right))))

# ::snt I see
# ::tokens ["I", "see"]
# ::lemmas ["i", "see"]
(c24-0 / see-01
       :ARG0 (c24-1 / i))

# ::snt This is not a race issue, its a civil disobedience issue, felony assault &amp;robbery that was handled bad
# ::tokens ["This", "is", "not", "a", "race", "issue", ",", "its", "a", "civil", "disobedience", "issue", ",", "felony", "assault", "&", "amp;robbery", "that", "was", "handled", "bad"]
# ::lemmas ["this", "be", "not", "a", "race", "issue", ",", "its", "a", "civil", "disobedience", "issue", ",", "felony", "assault", "&", "amp;robbery", "that", "be", "handle", "bad"]
(c25-6 / contrast-01
       :ARG1 (c25-4 / issue-02
                    :ARG0 (c25-5 / race)
                    :domain (c25-10 / this)
                    :polarity -)
       :ARG2 (c25-7 / issue-02
                    :ARG0 (c25-8 / disobey-01
                                 :mod (c25-9 / civil))
                    :domain c25-10
                    :ARG1-of (c25-0 / handle-01
                                    :ARG1-of (c25-2 / bad-07))
                    :example (c25-11 / and
                                     :op1 (c25-3 / assault-01
                                                 :mod (c25-1 / felony)
                                                 :op2-of c25-11)
                                     :mod c25-1)))

# ::snt officers are trained he reacted I'm sure all this happened in seconds the man was '4 and .
# ::tokens ["officers", "are", "trained", "he", "reacted", "I", "'m", "sure", "all", "this", "happened", "in", "seconds", "the", "man", "was", "'", "4", "and", "."]
# ::lemmas ["officer", "be", "train", "he", "react", "i", "be", "sure", "all", "this", "happen", "in", "seconds", "the", "man", "be", "'", "4", "and", "."]
(c26-1 / multi-sentence
       :snt1 (c26-13 / train-01
                     :ARG1 (c26-7 / person
                                  :ARG0-of (c26-0 / have-org-role-91
                                                  :ARG2 (c26-2 / officer))))
       :snt2 (c26-8 / react-01
                    :ARG0 (c26-14 / he))
       :snt3 (c26-11 / sure-02
                     :ARG0 (c26-5 / i)
                     :ARG1 (c26-3 / event
                                  :mod (c26-10 / this
                                               :mod (c26-12 / all))
                                  :duration (c26-9 / multiple
                                                   :op1 (c26-6 / temporal-quantity
                                                               :unit (c26-4 / second)
                                                               :quant 4)))))

# ::snt flip the two races around and everyone would be calling this tweet racist and offensive
# ::tokens ["flip", "the", "two", "races", "around", "and", "everyone", "would", "be", "calling", "this", "tweet", "racist", "and", "offensive"]
# ::lemmas ["flip", "the", "two", "race", "around", "and", "everyone", "would", "be", "call", "this", "tweet", "racist", "and", "offensive"]
(c27-12 / and
        :op1 (c27-1 / flip-01
                    :ARG0 (c27-0 / you)
                    :ARG1 (c27-8 / race
                                 :quant 2)
                    :location (c27-4 / around)
                    :mode imperative)
        :op2 (c27-9 / call-01
                    :ARG0 (c27-3 / everyone)
                    :ARG1 (c27-11 / thing
                                  :ARG1-of (c27-10 / tweet-01)
                                  :mod (c27-6 / this))
                    :ARG2 (c27-7 / and
                                 :op1 (c27-5 / racist)
                                 :op2 (c27-2 / offend-01))))

# ::snt it's racist in theory to state that a person or people could lead better because they're the same color as most of the town
# ::tokens ["it", "'s", "racist", "in", "theory", "to", "state", "that", "a", "person", "or", "people", "could", "lead", "better", "because", "they", "'re", "the", "same", "color", "as", "most", "of", "the", "town"]
# ::lemmas ["it", "be", "racist", "in", "theory", "to", "state", "that", "a", "person", "or", "people", "could", "lead", "well", "because", "they", "be", "the", "same", "color", "as", "most", "of", "the", "town"]
(c28-6 / racist
       :domain (c28-11 / state-01
                       :ARG1 (c28-5 / possible-01
                                    :ARG1 (c28-1 / lead-02
                                                 :ARG0 (c28-3 / or
                                                              :op1 (c28-14 / person
                                                                           :op2-of c28-3)))
                                    :ARG1-of (c28-8 / good-02
                                                    :ARG2-of (c28-0 / have-degree-91
                                                                    :ARG1 c28-1
                                                                    :ARG3 (c28-2 / more)))
                                    :ARG1-of (c28-7 / cause-01
                                                    :ARG0 (c28-4 / same-01
                                                                 :ARG1 c28-3
                                                                 :ARG2 (c28-9 / color
                                                                              :poss (c28-13 / town
                                                                                            :quant (c28-10 / most)))))))
       :manner (c28-12 / theory))

# ::snt regardless of his size, he had his hands up and was saying don't shoot after the first shot
# ::tokens ["regardless", "of", "his", "size", ",", "he", "had", "his", "hands", "up", "and", "was", "saying", "do", "n't", "shoot", "after", "the", "first", "shot"]
# ::lemmas ["regardless", "of", "his", "size", ",", "he", "have", "his", "hand", "up", "and", "be", "say", "do", "not", "shoot", "after", "the", "first", "shot"]
(c29-7 / and
       :op1 (c29-2 / up-03
                   :ARG1 (c29-0 / hand
                                :part-of (c29-8 / he)))
       :op2 (c29-6 / say-01
                   :ARG0 c29-8
                   :ARG1 (c29-4 / shoot-02
                                :ARG0 c29-8
                                :time (c29-5 / after
                                             :ord (c29-3 / ordinal-entity
                                                         :value 1)
                                             :op1 c29-4)
                                :polarity -
                                :mode imperative))
       :concession (c29-1 / size
                          :poss c29-8))

# ::snt Damn did you forget what the British did to ur people? Internalized idiot.
# ::tokens ["Damn", "did", "you", "forget", "what", "the", "British", "did", "to", "ur", "people", "?", "Internalized", "idiot", "."]
# ::lemmas ["damn", "do", "you", "forget", "what", "the", "British", "do", "to", "ur", "people", "?", "internalize", "idiot", "."]
(c30-3 / multi-sentence
       :snt1 (c30-2 / forget-01
                    :ARG0 (c30-0 / you)
                    :ARG1 (c30-11 / thing
                                  :ARG1-of (c30-7 / do-02
                                                  :ARG0 (c30-6 / person
                                                               :mod (c30-8 / country
                                                                           :name (c30-5 / name
                                                                                        :op1 "Great"
                                                                                        :op2 "Britain")))
                                                  :ARG2 (c30-10 / you)))
                    :polarity (c30-12 / amr-unknown)
                    :mod (c30-1 / damn
                                :mode expressive))
       :snt2 (c30-4 / idiot
                    :ARG1-of (c30-9 / internalize-01)))

# ::snt inappropriate headline.
# ::tokens ["inappropriate", "headline", "."]
# ::lemmas ["inappropriate", "headline", "."]
(c31-1 / thing
       :ARG2-of (c31-0 / headline-01)
       :ARG1-of (c31-2 / appropriate-02
                       :polarity -))

# ::snt and u look like a man. Yea im disgusting
# ::tokens ["and", "u", "look", "like", "a", "man", ".", "Yea", "i", "m", "disgusting"]
# ::lemmas ["and", "u", "look", "like", "a", "man", ".", "yea", "i", "m", "disgusting"]
(c32-2 / multi-sentence
       :snt1 (c32-7 / and
                    :op2 (c32-1 / look-02
                                :ARG0 (c32-0 / you)
                                :ARG1 (c32-4 / man)))
       :snt2 (c32-5 / disgust-01
                    :ARG0 (c32-3 / i)
                    :mod (c32-6 / yeh
                                :mode expressive)))

# ::snt lol your response is very indicative that you were attempting to belittle my intelligence
# ::tokens ["lol", "your", "response", "is", "very", "indicative", "that", "you", "were", "attempting", "to", "belittle", "my", "intelligence"]
# ::lemmas ["lol", "your", "response", "be", "very", "indicative", "that", "you", "be", "attempt", "to", "belittle", "my", "intelligence"]
(c33-4 / indicate-01
       :ARG0 (c33-6 / respond-01
                    :ARG0 (c33-0 / you))
       :ARG1 (c33-9 / attempt-01
                    :ARG0 c33-0
                    :ARG1 (c33-3 / belittle-01
                                 :ARG0 c33-0
                                 :ARG1 (c33-7 / intelligent-01
                                              :ARG1 (c33-1 / i))))
       :degree (c33-5 / very)
       :ARG2-of (c33-2 / laugh-01
                       :manner (c33-8 / loud)
                       :mode expressive))

# ::snt Ya let's just fired every police person if a town turns mostly black good grief laws are laws they don't have color. race-baiting
# ::tokens ["Ya", "let", "'s", "just", "fired", "every", "police", "person", "if", "a", "town", "turns", "mostly", "black", "good", "grief", "laws", "are", "laws", "they", "do", "n't", "have", "color", ".", "race", "-", "baiting"]
# ::lemmas ["Ya", "let", "us", "just", "fire", "every", "police", "person", "if", "a", "town", "turn", "mostly", "black", "good", "grief", "law", "be", "law", "they", "do", "not", "have", "color", ".", "race", "-", "bait"]
(c34-1 / multi-sentence
       :snt1 (c34-6 / let-01
                    :ARG0 (c34-16 / you)
                    :ARG1 (c34-7 / fire-02
                                 :ARG0 (c34-13 / we)
                                 :ARG1 (c34-2 / person
                                              :mod (c34-4 / police)
                                              :mod (c34-9 / every))
                                 :mod (c34-0 / just)
                                 :condition (c34-19 / turn-02
                                                    :ARG1 (c34-15 / town
                                                                  :ARG1-of (c34-8 / black-05
                                                                                  :mod (c34-10 / most))
                                                                  :mod (c34-12 / grief
                                                                               :ARG1-of (c34-3 / good-02)))
                                                    :ARG2 (c34-18 / law
                                                                  :ARG0-of (c34-5 / have-03
                                                                                  :ARG1 (c34-17 / color)
                                                                                  :polarity -))))
                    :snt2 (c34-14 / bait-01
                                  :ARG2 (c34-11 / race))
                    :mode imperative))

# ::snt I see that you love Jesus and so do I, so I am not going to get into an argument with you,....you are not my enemy
# ::tokens ["I", "see", "that", "you", "love", "Jesus", "and", "so", "do", "I", ",", "so", "I", "am", "not", "going", "to", "get", "into", "an", "argument", "with", "you,", "....", "you", "are", "not", "my", "enemy"]
# ::lemmas ["i", "see", "that", "you", "love", "Jesus", "and", "so", "do", "i", ",", "so", "i", "be", "not", "go", "to", "get", "into", "an", "argument", "with", "you,", "....", "you", "be", "not", "my", "enemy"]
(c35-8 / cause-01
       :ARG0 (c35-12 / and
                     :op1 (c35-10 / see-01
                                  :ARG0 (c35-5 / i)
                                  :ARG1 (c35-2 / love-01
                                               :ARG0 (c35-1 / you)
                                               :ARG1 (c35-7 / person
                                                            :name (c35-6 / name
                                                                         :op1 "Jesus"))))
                     :op2 (c35-9 / love-01
                                 :ARG0 c35-5
                                 :ARG1 c35-7))
       :ARG1 (c35-4 / argue-02
                    :ARG0 c35-5
                    :ARG1 c35-1
                    :ARG2 (c35-11 / person
                                  :ARG0-of (c35-0 / have-rel-role-91
                                                  :ARG1 c35-5
                                                  :ARG2 (c35-3 / enemy)
                                                  :polarity -)
                                  :domain c35-1)
                    :polarity -))

# ::snt article you felt so strongly about
# ::tokens ["article", "you", "felt", "so", "strongly", "about"]
# ::lemmas ["article", "you", "feel", "so", "strongly", "about"]
(c36-4 / article
       :ARG1-of (c36-1 / feel-01
                       :ARG0 (c36-0 / you)
                       :ARG1-of (c36-3 / strong-02
                                       :degree (c36-2 / so))))

# ::snt they elect the mayor don't they?
# ::tokens ["they", "elect", "the", "mayor", "do", "n't", "they", "?"]
# ::lemmas ["they", "elect", "the", "mayor", "do", "not", "they", "?"]
(c37-2 / elect-01
       :ARG0 (c37-5 / they)
       :ARG1 (c37-3 / person
                    :ARG0-of (c37-0 / have-org-role-91
                                    :ARG2 (c37-1 / mayor)))
       :ARG1-of (c37-4 / request-confirmation-91))

# ::snt A black man runs the United States. So... I don't know. Shut the fuck up, I suppose.
# ::tokens ["A", "black", "man", "runs", "the", "United", "States", ".", "So", "...", "I", "do", "n't", "know", ".", "Shut", "the", "fuck", "up", ",", "I", "suppose", "."]
# ::lemmas ["a", "black", "man", "run", "the", "United", "States", ".", "so", "...", "i", "do", "not", "know", ".", "shut", "the", "fuck", "up", ",", "i", "suppose", "."]
(c38-2 / multi-sentence
       :snt1 (c38-8 / run-01
                    :ARG0 (c38-7 / man
                                 :ARG1-of (c38-3 / black-05))
                    :ARG1 (c38-9 / country
                                 :name (c38-6 / name
                                              :op1 "United"
                                              :op2 "States")))
       :snt2 (c38-11 / know-01
                     :ARG0 (c38-5 / i)
                     :polarity -)
       :snt3 (c38-10 / suppose-01
                     :ARG0 c38-5
                     :ARG1 (c38-4 / shut-up-06
                                  :ARG0 (c38-0 / you
                                               :ARG1-of c38-4)
                                  :mod (c38-1 / fuck
                                              :mode expressive)
                                  :mode imperative)))

# ::snt because its right if they didn't it would end up looking like Hyde park or north city in a matter of hours and the be abandoned
# ::tokens ["because", "its", "right", "if", "they", "did", "n't", "it", "would", "end", "up", "looking", "like", "Hyde", "park", "or", "north", "city", "in", "a", "matter", "of", "hours", "and", "the", "be", "abandoned"]
# ::lemmas ["because", "its", "right", "if", "they", "do", "not", "it", "would", "end", "up", "look", "like", "Hyde", "park", "or", "north", "city", "in", "a", "matter", "of", "hour", "and", "the", "be", "abandon"]
(c39-11 / cause-01
        :ARG0 (c39-10 / right-06
                      :ARG2 (c39-17 / and
                                    :op1 (c39-4 / end-up-03
                                                :ARG1 (c39-6 / it)
                                                :ARG2 (c39-1 / look-02
                                                             :ARG0 c39-6
                                                             :ARG1 (c39-3 / or
                                                                          :op1 (c39-9 / park
                                                                                      :name (c39-7 / name
                                                                                                   :op1 "Hyde"
                                                                                                   :op2 "Park"))
                                                                          :op2 (c39-12 / city
                                                                                       :location (c39-8 / north)))
                                                             :time (c39-5 / after
                                                                          :quant (c39-2 / matter
                                                                                        :op1 (c39-16 / temporal-quantity
                                                                                                     :unit (c39-0 / hour)
                                                                                                     :quant 1)))))
                                    :op2 (c39-13 / abandon-01
                                                 :ARG1 c39-3))
                      :condition (c39-14 / do-02
                                         :ARG0 (c39-15 / they)
                                         :polarity -)))

# ::snt also, I was never playing the "race card" .. I'm not even African American lol
# ::tokens ["also", ",", "I", "was", "never", "playing", "the", "\"", "race", "card", "\"", "..", "I", "'m", "not", "even", "African", "American", "lol"]
# ::lemmas ["also", ",", "i", "be", "never", "play", "the", "\"", "race", "card", "\"", "..", "i", "be", "not", "even", "African", "American", "lol"]
(c40-12 / and
        :op1 (c40-6 / play-01
                    :ARG0 (c40-4 / i)
                    :ARG1 (c40-8 / card
                                 :mod (c40-7 / race))
                    :time (c40-2 / ever)
                    :mod (c40-3 / also)
                    :polarity -)
        :op2 (c40-11 / person
                     :mod (c40-9 / continent
                                 :name (c40-5 / name
                                              :op1 "Africa"))
                     :mod (c40-1 / even)
                     :ARG2-of (c40-0 / laugh-01
                                     :ARG0 c40-4
                                     :manner (c40-10 / loud)
                                     :mode expressive)
                     :domain c40-4
                     :polarity -))

# ::snt lol
# ::tokens ["lol"]
# ::lemmas ["lol"]
(c41-0 / laugh-01
       :manner (c41-1 / loud)
       :mode expressive)

# ::snt to the leg would have sufficed as far as stopping him.
# ::tokens ["to", "the", "leg", "would", "have", "sufficed", "as", "far", "as", "stopping", "him", "."]
# ::lemmas ["to", "the", "leg", "would", "have", "suffice", "as", "far", "as", "stop", "he", "."]
(c43-0 / suffice-01
       :ARG0 (c43-2 / leg)
       :ARG1 (c43-1 / stop-01
                    :ARG1 (c43-3 / he)))

# ::snt and again.. You're right. Officers ARE TRAINED TO KNOW WHEN/HOW TO SHOOT TO KILL OR FOR DEFENSE
# ::tokens ["and", "again", "..", "You", "'re", "right", ".", "Officers", "ARE", "TRAINED", "TO", "KNOW", "WHEN", "/", "HOW", "TO", "SHOOT", "TO", "KILL", "OR", "FOR", "DEFENSE"]
# ::lemmas ["and", "again", "..", "you", "be", "right", ".", "officer", "be", "train", "to", "know", "when", "/", "how", "to", "shoot", "to", "KILL", "or", "for", "defense"]
(c44-3 / multi-sentence
       :snt1 (c44-14 / and
                     :op2 (c44-9 / right-06
                                 :ARG1 (c44-1 / you)))
       :snt2 (c44-13 / train-01
                     :ARG1 (c44-7 / know-01
                                  :ARG0 (c44-8 / person
                                               :ARG0-of (c44-0 / have-org-role-91
                                                               :ARG2 (c44-4 / officer)))
                                  :ARG1 (c44-12 / slash
                                                :op1 (c44-11 / time
                                                             :time-of (c44-5 / shoot-02
                                                                             :ARG1 c44-8
                                                                             :purpose (c44-6 / kill-01
                                                                                             :ARG0 c44-8)))
                                                :op2 c44-11
                                                :manner-of (c44-2 / shoot-02
                                                                  :ARG1 c44-8
                                                                  :purpose (c44-10 / defend-01
                                                                                   :ARG1 c44-8)))))
       :ARG2 c44-8)

# ::snt No they didn't. And quit making "hypothetical" situations for something that is real life.
# ::tokens ["No", "they", "did", "n't", ".", "And", "quit", "making", "\"", "hypothetical", "\"", "situations", "for", "something", "that", "is", "real", "life", "."]
# ::lemmas ["no", "they", "do", "not", ".", "and", "quit", "make", "\"", "hypothetical", "\"", "situation", "for", "something", "that", "be", "real", "life", "."]
(c45-3 / multi-sentence
       :snt1 (c45-7 / do-02
                    :ARG0 (c45-10 / they)
                    :polarity -)
       :snt2 (c45-11 / and
                     :op2 (c45-5 / quit-01
                                 :ARG0 (c45-1 / you)
                                 :ARG1 (c45-6 / make-01
                                              :ARG0 c45-1
                                              :ARG1 (c45-9 / situation
                                                           :mod (c45-0 / hypothetical))
                                              :purpose (c45-4 / something
                                                              :domain (c45-2 / life
                                                                             :ARG1-of (c45-8 / real-04))))
                                 :mode imperative)))

# ::snt not really... If the two races were flipped around in that headline, it wouldn't be factual.
# ::tokens ["not", "really", "...", "If", "the", "two", "races", "were", "flipped", "around", "in", "that", "headline", ",", "it", "would", "n't", "be", "factual", "."]
# ::lemmas ["not", "really", "...", "if", "the", "two", "race", "be", "flip", "around", "in", "that", "headline", ",", "it", "would", "not", "be", "factual", "."]
(c46-2 / multi-sentence
       :snt1 (c46-5 / real-04
                    :polarity -)
       :snt2 (c46-1 / factual
                    :condition (c46-4 / flip-01
                                      :ARG1 (c46-3 / race
                                                   :quant 2)
                                      :location (c46-7 / thing
                                                       :ARG2-of (c46-0 / headline-01)
                                                       :mod (c46-6 / that))
                                      :direction (c46-8 / around))
                    :polarity -))

# ::snt they at only see race, but of course and all of us are racist. We live in effed up times.
# ::tokens ["they", "at", "only", "see", "race", ",", "but", "of", "course", "and", "all", "of", "us", "are", "racist", ".", "We", "live", "in", "effed", "up", "times", "."]
# ::lemmas ["they", "at", "only", "see", "race", ",", "but", "of", "course", "and", "all", "of", "we", "be", "racist", ".", "we", "live", "in", "eff", "up", "time", "."]
(c47-2 / multi-sentence
       :snt1 (c47-8 / contrast-01
                    :ARG1 (c47-9 / see-01
                                 :ARG0 (c47-10 / they)
                                 :ARG1 (c47-7 / race)
                                 :mod (c47-5 / only))
                    :ARG2 (c47-6 / racist
                                 :domain (c47-0 / we
                                                :mod (c47-11 / all))
                                 :mod (c47-1 / of-course)))
       :snt2 (c47-3 / live-01
                    :ARG0 c47-0
                    :time (c47-4 / fuck-up-02)))

# ::snt stupid see
# ::tokens ["stupid", "see"]
# ::lemmas ["stupid", "see"]
(c48-0 / see-01
       :mod (c48-1 / stupid))

# ::snt Mind the kind of statement you make,if the blacks are too dumb,then the white are thoughtless and dumb too.
# ::tokens ["Mind", "the", "kind", "of", "statement", "you", "make", ",", "if", "the", "blacks", "are", "too", "dumb", ",", "then", "the", "white", "are", "thoughtless", "and", "dumb", "too", "."]
# ::lemmas ["mind", "the", "kind", "of", "statement", "you", "make", ",", "if", "the", "black", "be", "too", "dumb", ",", "then", "the", "white", "be", "thoughtless", "and", "dumb", "too", "."]
(c49-4 / mind-03
       :ARG0 (c49-1 / you)
       :ARG1 (c49-12 / kind
                     :mod (c49-10 / state-01
                                  :ARG0 c49-1
                                  :ARG1 (c49-0 / have-degree-91
                                               :ARG1 (c49-7 / person
                                                            :ARG1-of (c49-5 / black-05))
                                               :ARG2 (c49-8 / dumb)
                                               :ARG3 (c49-11 / too)
                                               :ARG6 (c49-14 / have-condition-91
                                                             :ARG1 (c49-6 / have-degree-91
                                                                          :ARG1 (c49-13 / person
                                                                                        :ARG1-of (c49-2 / white-02))
                                                                          :ARG2 (c49-3 / dumb)
                                                                          :ARG3 (c49-9 / too))
                                                             :ARG2 (c49-15 / dumb)))))
       :mode imperative)

# ::snt also the problem lies with the people that will read nothing but the headline, or those who can't read at all. Both sides
# ::tokens ["also", "the", "problem", "lies", "with", "the", "people", "that", "will", "read", "nothing", "but", "the", "headline", ",", "or", "those", "who", "ca", "n't", "read", "at", "all", ".", "Both", "sides"]
# ::lemmas ["also", "the", "problem", "lie", "with", "the", "people", "that", "will", "read", "nothing", "but", "the", "headline", ",", "or", "those", "who", "can", "not", "read", "at", "all", ".", "both", "side"]
(c50-2 / multi-sentence
       :snt1 (c50-1 / lie-07
                    :ARG1 (c50-9 / problem)
                    :ARG2 (c50-5 / or
                                 :op1 (c50-13 / person
                                              :ARG0-of (c50-10 / read-01
                                                               :ARG1 (c50-0 / headline)
                                                               :mod (c50-8 / nothing-but)))
                                 :op2 (c50-3 / person
                                             :ARG0-of (c50-7 / read-01
                                                             :ARG1 c50-0
                                                             :mod (c50-14 / at-all)
                                                             :ARG1-of (c50-12 / possible-01
                                                                              :polarity -))))
                    :mod (c50-6 / also))
       :snt2 (c50-11 / side
                     :mod (c50-4 / both)))
