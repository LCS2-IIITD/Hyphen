# ::snt i love u james
# ::tokens ["i", "love", "u", "james"]
# ::lemmas ["i", "love", "u", "james"]
(c1-2 / love-01
      :ARG0 (c1-3 / i)
      :ARG1 (c1-1 / person
                  :name (c1-0 / name
                              :op1 "James")))

# ::snt hi james
# ::tokens ["hi", "james"]
# ::lemmas ["hi", "jame"]
(c3-0 / say-01
      :ARG1 (c3-1 / hi)
      :ARG2 (c3-2 / person
                  :name (c3-3 / name
                              :op1 "James")))

# ::snt Thanks James
# ::tokens ["Thanks", "James"]
# ::lemmas ["thank", "James"]
(c6-2 / thank-01
      :ARG0 (c6-3 / i)
      :ARG1 (c6-1 / person
                  :name (c6-0 / name
                              :op1 "James")))

# ::snt ..
# ::tokens [".."]
# ::lemmas [".."]
(c7-0 / amr-empty)

# ::snt jamees pleaee follow mee
# ::tokens ["jamees", "pleaee", "follow", "mee"]
# ::lemmas ["jamee", "pleaee", "follow", "mee"]
(c8-0 / follow-02
      :ARG0 (c8-3 / person
                  :name (c8-1 / name
                              :op1 "jamees"
                              :op2 " pleadee"))
      :ARG1 (c8-4 / person
                  :name (c8-2 / name
                              :op1 "mee"))
      :mode imperative)

# ::snt SEE YOU IN DAYS JAMES
# ::tokens ["SEE", "YOU", "IN", "DAYS", "JAMES"]
# ::lemmas ["see", "you", "in", "DAYS", "JAMES"]
(c9-4 / see-01
      :ARG0 (c9-0 / you)
      :time (c9-6 / after
                  :op1 (c9-2 / now)
                  :quant (c9-1 / multiple
                               :op1 (c9-5 / temporal-quantity
                                          :unit (c9-3 / day)
                                          :quant 1)))
      :mode imperative)

# ::snt merci
# ::tokens ["merci"]
# ::lemmas ["merci"]
(c10-1 / person
       :name (c10-0 / name
                    :op1 "Merci"))

# ::snt we saw that !!!
# ::tokens ["we", "saw", "that", "!", "!", "!"]
# ::lemmas ["we", "see", "that", "!", "!", "!"]
(c11-0 / see-01
       :ARG0 (c11-1 / we)
       :ARG1 (c11-2 / that)
       :mode expressive)

# ::snt eu te amo
# ::tokens ["eu", "te", "amo"]
# ::lemmas ["eu", "te", "amo"]
(c12-0 / amo
       :mode expressive)

# ::snt no kidding
# ::tokens ["no", "kidding"]
# ::lemmas ["no", "kidding"]
(c13-0 / kid-01
       :polarity -)

# ::snt : jamees pleaee follow mee sale pute il parle de l'attentat et tu demandes un follow ntm
# ::tokens [":", "jamees", "pleaee", "follow", "mee", "sale", "pute", "il", "parle", "de", "l'attentat", "et", "tu", "demandes", "un", "follow", "ntm"]
# ::lemmas [":", "jamee", "pleaee", "follow", "mee", "sale", "pute", "il", "parle", "de", "l'attentat", "et", "tu", "demand", "un", "follow", "ntm"]
(c14-13 / say-01
        :ARG0 (c14-7 / i)
        :ARG1 (c14-17 / and
                      :op1 (c14-2 / follow-02
                                  :ARG0 (c14-11 / person
                                                :name (c14-9 / name
                                                             :op1 "James"
                                                             :op2 "A pleaee"))
                                  :ARG1 (c14-16 / person
                                                :ARG0-of (c14-5 / sell-01)
                                                :poss c14-7)
                                  :mode imperative)
                      :op2 c14-17
                      :op1 (c14-3 / pute-01
                                  :ARG2 (c14-15 / parle
                                                :poss (c14-4 / person
                                                             :ARG0-of (c14-0 / have-org-role-91
                                                                             :ARG2 (c14-6 / attorney)))))
                      :op2 (c14-12 / demand-01
                                   :ARG0 (c14-1 / you)
                                   :ARG1 (c14-8 / follow-02
                                                :ARG0 c14-1
                                                :polarity -
                                                :mode imperative)))
        :ARG2 (c14-14 / person
                      :name (c14-10 / name
                                    :op1 "tm")))

# ::snt respect for muslims
# ::tokens ["respect", "for", "muslims"]
# ::lemmas ["respect", "for", "muslim"]
(c15-2 / respect-01
       :ARG1 (c15-1 / person
                    :mod (c15-3 / religious-group
                                :name (c15-0 / name
                                             :op1 "Islam"))))

# ::snt je t'aime
# ::tokens ["je", "t'aime"]
# ::lemmas ["je", "t'aime"]
(c17-0 / je-t-aime)

# ::snt :/
# ::tokens [":/"]
# ::lemmas [":/"]
(c18-0 / amr-empty)

# ::snt that's disgusting
# ::tokens ["that", "'s", "disgusting"]
# ::lemmas ["that", "be", "disgusting"]
(c19-0 / disgust-01
       :ARG0 (c19-1 / that))

# ::snt thanks James
# ::tokens ["thanks", "James"]
# ::lemmas ["thank", "James"]
(c20-2 / thank-01
       :ARG1 (c20-1 / person
                    :name (c20-0 / name
                                 :op1 "James")))

# ::snt vai dormir amor
# ::tokens ["vai", "dormir", "amor"]
# ::lemmas ["vai", "dormir", "amor"]
(c21-2 / amor
       :mod (c21-1 / person
                   :name (c21-0 / name
                                :op1 "vai"
                                :op2 "Dormir")))

# ::snt Can u plz rt these
# ::tokens ["Can", "u", "plz", "rt", "these"]
# ::lemmas ["can", "u", "plz", "rt", "these"]
(c22-1 / possible-01
       :polarity (c22-3 / amr-unknown)
       :ARG1 (c22-2 / this
                    :mod (c22-0 / you))
       :polite +)
