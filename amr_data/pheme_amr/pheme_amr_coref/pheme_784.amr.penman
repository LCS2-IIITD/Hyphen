# ::snt this is so traumatic
# ::tokens ["this", "is", "so", "traumatic"]
# ::lemmas ["this", "be", "so", "traumatic"]
(c1-1 / traumatize-01
      :ARG0 (c1-2 / this)
      :degree (c1-0 / so))

# ::snt no kidding
# ::tokens ["no", "kidding"]
# ::lemmas ["no", "kidding"]
(c2-0 / kid-01
      :polarity -)

# ::snt I think many of us are feeling this today.
# ::tokens ["I", "think", "many", "of", "us", "are", "feeling", "this", "today", "."]
# ::lemmas ["i", "think", "many", "of", "we", "be", "feel", "this", "today", "."]
(c3-8 / think-01
      :ARG0 (c3-3 / i)
      :ARG1 (c3-1 / feel-01
                  :ARG0 (c3-5 / person
                              :quant (c3-2 / many)
                              :ARG1-of (c3-6 / include-91
                                             :ARG2 (c3-0 / we)))
                  :ARG1 (c3-7 / this)
                  :time (c3-4 / today)))

# ::snt This IS . I'm pissed off that anyone tried to jeopardize that. Stay safe, everyone and let the police do their job.
# ::tokens ["This", "IS", ".", "I", "'m", "pissed", "off", "that", "anyone", "tried", "to", "jeopardize", "that", ".", "Stay", "safe", ",", "everyone", "and", "let", "the", "police", "do", "their", "job", "."]
# ::lemmas ["this", "be", ".", "i", "be", "piss", "off", "that", "anyone", "try", "to", "jeopardize", "that", ".", "stay", "safe", ",", "everyone", "and", "let", "the", "police", "do", "their", "job", "."]
(c4-3 / multi-sentence
      :snt1 (c4-15 / this)
      :snt2 (c4-9 / piss-off-02
                  :ARG0 (c4-13 / try-01
                               :ARG0 (c4-17 / anyone)
                               :ARG1 (c4-0 / jeopardize-01
                                           :ARG0 c4-17
                                           :ARG1 (c4-8 / that)))
                  :ARG1 (c4-7 / i))
      :snt3 (c4-6 / and
                  :op1 (c4-14 / stay-01
                              :ARG1 (c4-1 / you)
                              :ARG3 (c4-10 / and
                                           :op1 (c4-4 / safe-01
                                                      :ARG1 c4-1)
                                           :op2 (c4-5 / everyone))
                              :mode imperative)
                  :op2 (c4-2 / let-01
                             :ARG0 c4-1
                             :ARG1 (c4-11 / do-02
                                          :ARG0 (c4-16 / police)
                                          :ARG1 (c4-12 / job
                                                       :poss c4-16))
                             :mode imperative)))

# ::snt saddened and shocked
# ::tokens ["saddened", "and", "shocked"]
# ::lemmas ["sadden", "and", "shock"]
(c5-2 / and
      :op1 (c5-0 / sadden-01)
      :op2 (c5-1 / shock-01))

# ::snt mine either. I feel sick.
# ::tokens ["mine", "either", ".", "I", "feel", "sick", "."]
# ::lemmas ["mine", "either", ".", "i", "feel", "sick", "."]
(c6-1 / multi-sentence
      :snt1 (c6-2 / either)
      :snt2 (c6-0 / feel-01
                  :ARG0 (c6-3 / i)
                  :ARG1 (c6-4 / sick-05
                              :ARG1 c6-3)))

# ::snt - Sadly, it is. Welcome to the new world.
# ::tokens ["-", "Sadly", ",", "it", "is", ".", "Welcome", "to", "the", "new", "world", "."]
# ::lemmas ["-", "sadly", ",", "it", "be", ".", "welcome", "to", "the", "new", "world", "."]
(c7-1 / multi-sentence
      :snt1 (c7-5 / sad-02
                  :ARG0 (c7-2 / it))
      :snt2 (c7-0 / welcome-01
                  :ARG2 (c7-3 / world
                              :ARG1-of (c7-4 / new-01))))

# ::snt Mine other.
# ::tokens ["Mine", "other", "."]
# ::lemmas ["mine", "other", "."]
(c8-1 / thing
      :mod (c8-0 / other)
      :poss (c8-2 / i))

# ::snt Agreed....can't believe this is happening!
# ::tokens ["Agreed", "....", "can't", "believe", "this", "is", "happening", "!"]
# ::lemmas ["agree", "....", "can't", "believe", "this", "be", "happen", "!"]
(c9-4 / and
      :op1 (c9-2 / agree-01
                 :ARG1 (c9-1 / event))
      :op2 (c9-3 / possible-01
                 :ARG1 (c9-0 / believe-01
                             :ARG1 c9-1)
                 :polarity -))

# ::snt : This isn't my .
# ::tokens [":", "This", "is", "n't", "my", "."]
# ::lemmas [":", "this", "be", "not", "my", "."]
(c10-0 / event
       :mod (c10-2 / i)
       :mod (c10-1 / this)
       :polarity -)

# ::snt mine either.
# ::tokens ["mine", "either", "."]
# ::lemmas ["mine", "either", "."]
(c11-1 / mine
       :mod (c11-0 / either))
