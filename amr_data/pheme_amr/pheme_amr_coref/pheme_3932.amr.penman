# ::snt our PM does not negotiate w terrorists.cockraches which must be crushed unceremoniously
# ::tokens ["our", "PM", "does", "not", "negotiate", "w", "terrorists.cockraches", "which", "must", "be", "crushed", "unceremoniously"]
# ::lemmas ["our", "PM", "do", "not", "negotiate", "w", "terrorists.cockrache", "which", "must", "be", "crush", "unceremoniously"]
(c1-2 / multi-sentence
      :snt1 (c1-4 / negotiate-01
                  :ARG0 (c1-5 / person
                              :ARG0-of (c1-0 / have-org-role-91
                                             :ARG2 (c1-6 / minister
                                                         :mod (c1-11 / prime)))
                              :poss (c1-1 / we))
                  :ARG2 (c1-10 / terrorist)
                  :polarity -)
      :snt2 (c1-7 / cockroach
                  :ARG1-of (c1-8 / crush-01
                                 :ARG2-of (c1-3 / obligate-01)
                                 :manner (c1-9 / decisive
                                               :polarity -))))

# ::snt that gunman would speak to any idiot if thats the case
# ::tokens ["that", "gunman", "would", "speak", "to", "any", "idiot", "if", "that", "s", "the", "case"]
# ::lemmas ["that", "gunman", "would", "speak", "to", "any", "idiot", "if", "that", "s", "the", "case"]
(c2-3 / speak-01
      :ARG0 (c2-2 / gunman
                  :mod (c2-4 / that))
      :ARG2 (c2-0 / idiot
                  :mod (c2-5 / any))
      :condition (c2-1 / case-04
                       :ARG1 c2-3))

# ::snt : Reports the gunman wants to speak to Tony Abbott.
# ::tokens [":", "Reports", "the", "gunman", "wants", "to", "speak", "to", "Tony", "Abbott", "."]
# ::lemmas [":", "report", "the", "gunman", "want", "to", "speak", "to", "Tony", "Abbott", "."]
(c3-3 / report-01
      :ARG1 (c3-0 / want-01
                  :ARG0 (c3-4 / gunman)
                  :ARG1 (c3-5 / speak-01
                              :ARG0 c3-4
                              :ARG2 (c3-2 / person
                                          :name (c3-1 / name
                                                      :op1 "Tony"
                                                      :op2 "Abbott")))))

# ::snt : Reports the gunman wants to speak to Tony Abbott.
# ::tokens [":", "Reports", "the", "gunman", "wants", "to", "speak", "to", "Tony", "Abbott", "."]
# ::lemmas [":", "report", "the", "gunman", "want", "to", "speak", "to", "Tony", "Abbott", "."]
(c4-3 / report-01
      :ARG1 (c4-0 / want-01
                  :ARG0 (c4-4 / gunman)
                  :ARG1 (c4-5 / speak-01
                              :ARG0 c4-4
                              :ARG2 (c4-2 / person
                                          :name (c4-1 / name
                                                      :op1 "Tony"
                                                      :op2 "Abbott")))))

# ::snt send Tony in with a m16 and few grenades will raise his popularity to stratospheric heights
# ::tokens ["send", "Tony", "in", "with", "a", "m16", "and", "few", "grenades", "will", "raise", "his", "popularity", "to", "stratospheric", "heights"]
# ::lemmas ["send", "Tony", "in", "with", "a", "m16", "and", "few", "grenade", "will", "raise", "his", "popularity", "to", "stratospheric", "height"]
(c5-10 / send-01
       :ARG0 (c5-1 / you)
       :ARG1 (c5-7 / person
                   :name (c5-6 / name
                               :op1 "Tony"))
       :ARG2 (c5-5 / inside)
       :accompanier (c5-12 / and
                           :op1 (c5-11 / product
                                       :name c5-6
                                       :op1 "M16"))
       :op2 (c5-9 / grenade
                  :quant (c5-2 / few))
       :ARG0-of (c5-8 / raise-01
                      :ARG1 (c5-3 / popularity
                                  :poss c5-7)
                      :ARG4 (c5-0 / high-02
                                  :mod (c5-4 / stratosphere)))
       :mode imperative)

# ::snt . BLUR THEIR FACES YOU DERPS.
# ::tokens [".", "BLUR", "THEIR", "FACES", "YOU", "DERPS", "."]
# ::lemmas [".", "blur", "their", "face", "you", "derps", "."]
(c6-4 / say-01
      :ARG1 (c6-2 / bleed-01
                  :ARG0 (c6-0 / you
                              :mod (c6-3 / darling))
                  :ARG1 (c6-1 / face
                              :poss (c6-5 / they))
                  :mode imperative)
      :ARG2 c6-0)

# ::snt way to go Australia ! You took everyone's guns from them ! You missed one
# ::tokens ["way", "to", "go", "Australia", "!", "You", "took", "everyone", "'s", "guns", "from", "them", "!", "You", "missed", "one"]
# ::lemmas ["way", "to", "go", "Australia", "!", "you", "take", "everyone", "'s", "gun", "from", "they", "!", "you", "miss", "one"]
(c7-2 / multi-sentence
      :snt1 (c7-9 / go-01
                  :ARG1 (c7-8 / country
                              :name (c7-5 / name
                                          :op1 "Australia"))
                  :manner (c7-0 / way)
                  :mode expressive)
      :snt2 (c7-11 / take-01
                   :ARG0 (c7-1 / you)
                   :ARG1 (c7-7 / gun
                               :poss (c7-4 / everyone))
                   :ARG2 (c7-10 / they))
      :snt3 (c7-6 / miss-02
                  :ARG0 (c7-12 / you)
                  :ARG1 (c7-3 / one)))

# ::snt It's not that meteorology is not being spent. Ladies and gentlemen, it's now my happy berry to more fully introduce Paul Kelly.
# ::tokens ["It", "'s", "not", "that", "meteorology", "is", "not", "being", "spent", ".", "Ladies", "and", "gentlemen", ",", "it", "'s", "now", "my", "happy", "berry", "to", "more", "fully", "introduce", "Paul", "Kelly", "."]
# ::lemmas ["it", "be", "not", "that", "meteorology", "be", "not", "be", "spend", ".", "lady", "and", "gentleman", ",", "it", "be", "now", "my", "happy", "berry", "to", "more", "fully", "introduce", "Paul", "Kelly", "."]
(c8-2 / multi-sentence
      :snt1 (c8-14 / spend-02
                   :ARG1 (c8-10 / meteorology)
                   :polarity -)
      :snt2 (c8-6 / say-01
                  :ARG1 (c8-5 / berry
                              :ARG1-of (c8-0 / happy-01)
                              :domain (c8-7 / introduce-01
                                            :ARG0 (c8-12 / i)
                                            :ARG1 (c8-11 / person
                                                         :name (c8-8 / name
                                                                     :op1 "Paul"
                                                                     :op2 "Kelly"))
                                            :ARG1-of (c8-16 / have-degree-91
                                                            :ARG2 (c8-1 / full-09
                                                                        :ARG1 c8-7)
                                                            :ARG3 (c8-3 / more)))
                              :time (c8-9 / now))
                  :ARG2 (c8-15 / and
                               :op1 (c8-4 / lady)
                               :op2 (c8-13 / gentleman))))
