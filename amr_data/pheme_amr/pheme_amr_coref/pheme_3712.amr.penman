# ::snt : Reports: dead in Paris kosher supermarket hostage situation STOP THE VIOLENCE PLEASE
# ::tokens [":", "Reports", ":", "dead", "in", "Paris", "kosher", "supermarket", "hostage", "situation", "STOP", "THE", "VIOLENCE", "PLEASE"]
# ::lemmas [":", "report", ":", "dead", "in", "Paris", "kosher", "supermarket", "hostage", "situation", "stop", "the", "violence", "please"]
(c2-12 / and
       :op1 (c2-8 / report-01
                  :ARG1 (c2-7 / die-01
                              :ARG1 (c2-6 / person)
                              :location (c2-10 / situation
                                               :mod (c2-0 / hostage)
                                               :location (c2-3 / supermarket
                                                               :mod (c2-11 / kosher)
                                                               :location (c2-9 / city
                                                                               :name (c2-4 / name
                                                                                           :op1 "Paris"))))))
       :op2 (c2-2 / stop-01
                  :ARG0 (c2-1 / you)
                  :ARG1 (c2-5 / violence)
                  :mode imperative
                  :polite +))

# ::snt Fuck
# ::tokens ["Fuck"]
# ::lemmas ["fuck"]
(c3-0 / fuck-01
      :mode expressive)

# ::snt va "Un herido"
# ::tokens ["va", "\"", "Un", "herido", "\""]
# ::lemmas ["va", "\"", "Un", "herido", "\""]
(c4-0 / herido
      :ARG1-of (c4-1 / say-01)
      :polarity -
      :mode expressive)

# ::snt is this different to the manhunt?
# ::tokens ["is", "this", "different", "to", "the", "manhunt", "?"]
# ::lemmas ["be", "this", "different", "to", "the", "manhunt", "?"]
(c5-1 / differ-02
      :polarity (c5-3 / amr-unknown)
      :ARG1 (c5-2 / this)
      :ARG2 (c5-0 / manhunt))

# ::snt thanks this is crazy hope for the best outcome
# ::tokens ["thanks", "this", "is", "crazy", "hope", "for", "the", "best", "outcome"]
# ::lemmas ["thank", "this", "be", "crazy", "hope", "for", "the", "good", "outcome"]
(c6-7 / thank-01
      :ARG0 (c6-3 / i)
      :ARG1 (c6-0 / hope-01
                  :ARG1 (c6-2 / outcome
                              :ARG1-of (c6-8 / have-degree-91
                                             :ARG2 (c6-5 / good-02
                                                         :ARG1 c6-2)
                                             :ARG3 (c6-1 / most)))
                  :ARG1-of (c6-4 / crazy-03)
                  :mod (c6-6 / this)))

# ::snt prayers to all the , , the . This is breaking my heart.
# ::tokens ["prayers", "to", "all", "the", ",", ",", "the", ".", "This", "is", "breaking", "my", "heart", "."]
# ::lemmas ["prayer", "to", "all", "the", ",", ",", "the", ".", "this", "be", "break", "my", "heart", "."]
(c7-7 / and
      :op1 (c7-4 / pray-01
                 :ARG0 (c7-3 / i
                             :part (c7-0 / heart))
                 :ARG2 (c7-6 / person
                             :mod (c7-2 / all)))
      :op2 (c7-1 / break-heart-31
                 :ARG1 c7-3
                 :ARG2 (c7-5 / this)))

# ::snt I knew the the French would do everything poss to put end to terrorist assaults in Paris They won't rest until all r dealt with!
# ::tokens ["I", "knew", "the", "the", "French", "would", "do", "everything", "poss", "to", "put", "end", "to", "terrorist", "assaults", "in", "Paris", "They", "wo", "n't", "rest", "until", "all", "r", "dealt", "with", "!"]
# ::lemmas ["i", "know", "the", "the", "French", "would", "do", "everything", "poss", "to", "put", "end", "to", "terrorist", "assault", "in", "Paris", "they", "will", "not", "rest", "until", "all", "r", "deal", "with", "!"]
(c8-15 / know-01
       :ARG0 (c8-5 / i)
       :ARG1 (c8-9 / do-02
                   :ARG0 (c8-8 / person
                               :mod (c8-10 / country
                                           :name (c8-6 / name
                                                       :op1 "France")))
                   :ARG1 (c8-3 / everything)
                   :purpose (c8-16 / put-03
                                   :ARG0 c8-8
                                   :ARG1 (c8-2 / end-01
                                               :ARG0 c8-8
                                               :ARG1 (c8-17 / assault-01
                                                            :ARG0 (c8-14 / terrorist)
                                                            :location (c8-11 / city
                                                                             :name (c8-7 / name
                                                                                         :op1 "Paris"))))))
       :ARG1-of (c8-13 / cause-01
                       :ARG0 (c8-12 / rest-01
                                    :ARG1 c8-8
                                    :time (c8-1 / until
                                                :op1 (c8-0 / deal-01
                                                           :ARG2 (c8-4 / all)))
                                    :polarity -)))

# ::snt Dear G-d.
# ::tokens ["Dear", "G", "-", "d."]
# ::lemmas ["Dear", "G", "-", "d."]
(c9-2 / dear
      :domain (c9-1 / person
                    :name (c9-0 / name
                                :op1 "G-d")))

# ::snt Yes! different events: one in Paris and the other one, in the North. But, the Paris' one is related to the others
# ::tokens ["Yes", "!", "different", "events", ":", "one", "in", "Paris", "and", "the", "other", "one", ",", "in", "the", "North", ".", "But", ",", "the", "Paris", "'", "one", "is", "related", "to", "the", "others"]
# ::lemmas ["yes", "!", "different", "event", ":", "one", "in", "Paris", "and", "the", "other", "one", ",", "in", "the", "North", ".", "but", ",", "the", "Paris", "'", "one", "be", "relate", "to", "the", "other"]
(c10-3 / multi-sentence
       :snt1 (c10-6 / event
                    :ARG1-of (c10-9 / differ-02)
                    :domain (c10-14 / and
                                    :op1 (c10-4 / event
                                                :location (c10-10 / city
                                                                  :name (c10-7 / name
                                                                               :op1 "Paris"))
                                                :quant 1)
                                    :op2 (c10-0 / event
                                                :mod (c10-5 / other)
                                                :location (c10-8 / north)))
                    :mod (c10-1 / yes
                                :mode expressive))
       :snt2 (c10-11 / contrast-01
                     :ARG2 (c10-12 / relate-01
                                   :ARG1 (c10-2 / one
                                                :location c10-10)
                                   :ARG2 (c10-13 / other))))

# ::snt RT Fuentes del Min. Interior francs desmienten que haya vctimas mortales en secuestro de tienda juda!
# ::tokens ["RT", "Fuentes", "del", "Min", ".", "Interior", "francs", "desmienten", "que", "haya", "vctimas", "mortales", "en", "secuestro", "de", "tienda", "juda", "!"]
# ::lemmas ["RT", "Fuentes", "del", "Min", ".", "interior", "franc", "desmienten", "que", "haya", "vctimas", "mortale", "en", "secuestro", "de", "tienda", "juda", "!"]
(c11-4 / obligate-01
       :ARG1 (c11-7 / publication
                    :name (c11-5 / name
                                 :op1 "RT"
                                 :op2 "Fuentes"
                                 :op3 "del"
                                 :op4 "Min."
                                 :op5 "Interior"))
       :ARG2 (c11-11 / prove-01
                     :ARG0 c11-7
                     :ARG1 (c11-0 / have-03
                                  :ARG0 (c11-1 / you)
                                  :ARG1 (c11-6 / vocation
                                               :mod (c11-3 / mortales))
                                  :ARG1-of (c11-9 / cause-01
                                                  :ARG0 (c11-10 / secuestro
                                                                :mod (c11-8 / de
                                                                            :mod (c11-2 / juda)))))))
