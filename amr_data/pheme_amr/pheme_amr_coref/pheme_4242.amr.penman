# ::snt : POLICE MOVE IN: Police confirm live ammunition used in Martin Place
# ::tokens [":", "POLICE", "MOVE", "IN", ":", "Police", "confirm", "live", "ammunition", "used", "in", "Martin", "Place"]
# ::lemmas [":", "police", "move", "in", ":", "police", "confirm", "live", "ammunition", "use", "in", "Martin", "Place"]
(c1-1 / multi-sentence
      :snt1 (c1-5 / move-01
                  :ARG0 (c1-6 / police)
                  :ARG2 (c1-3 / inside))
      :snt2 (c1-7 / confirm-01
                  :ARG0 (c1-9 / police)
                  :ARG1 (c1-10 / ammunition
                               :mod (c1-0 / live)
                               :ARG1-of (c1-2 / use-01
                                              :location (c1-8 / location
                                                              :name (c1-4 / name
                                                                          :op1 "Martin"
                                                                          :op2 "Place"))))))

# ::snt where's the live stream at
# ::tokens ["where", "'s", "the", "live", "stream", "at"]
# ::lemmas ["where", "be", "the", "live", "stream", "at"]
(c2-0 / stream-03
      :mod (c2-1 / live)
      :location (c2-2 / amr-unknown))

# ::snt : POLICE MOVE IN: Police confirm live ammunition used in Martin Place
# ::tokens [":", "POLICE", "MOVE", "IN", ":", "Police", "confirm", "live", "ammunition", "used", "in", "Martin", "Place"]
# ::lemmas [":", "police", "move", "in", ":", "police", "confirm", "live", "ammunition", "use", "in", "Martin", "Place"]
(c3-1 / multi-sentence
      :snt1 (c3-5 / move-01
                  :ARG0 (c3-6 / police)
                  :ARG2 (c3-3 / inside))
      :snt2 (c3-7 / confirm-01
                  :ARG0 (c3-9 / police)
                  :ARG1 (c3-10 / ammunition
                               :mod (c3-0 / live)
                               :ARG1-of (c3-2 / use-01
                                              :location (c3-8 / location
                                                              :name (c3-4 / name
                                                                          :op1 "Martin"
                                                                          :op2 "Place"))))))

# ::snt : POLICE MOVE IN: Police confirm live ammunition used in Martin Place . These are real soldiers!
# ::tokens [":", "POLICE", "MOVE", "IN", ":", "Police", "confirm", "live", "ammunition", "used", "in", "Martin", "Place", ".", "These", "are", "real", "soldiers", "!"]
# ::lemmas [":", "police", "move", "in", ":", "police", "confirm", "live", "ammunition", "use", "in", "Martin", "Place", ".", "these", "be", "real", "soldier", "!"]
(c4-1 / multi-sentence
      :snt1 (c4-5 / move-01
                  :ARG0 (c4-6 / police)
                  :ARG2 (c4-3 / inside))
      :snt2 (c4-7 / confirm-01
                  :ARG0 (c4-12 / police)
                  :ARG1 (c4-13 / ammunition
                               :mod (c4-0 / live)
                               :ARG1-of (c4-2 / use-01
                                              :location (c4-9 / location
                                                              :name (c4-4 / name
                                                                          :op1 "Martin"
                                                                          :op2 "Place")))))
      :snt3 (c4-10 / soldier
                   :domain (c4-11 / this)
                   :ARG1-of (c4-8 / real-04)))

# ::snt what else r they goin to use....tea n fukin sympathy.
# ::tokens ["what", "else", "r", "they", "goin", "to", "use", "....", "tea", "n", "fukin", "sympathy", "."]
# ::lemmas ["what", "else", "r", "they", "goin", "to", "use", "....", "tea", "n", "fukin", "sympathy", "."]
(c5-1 / multi-sentence
      :snt1 (c5-2 / use-01
                  :ARG0 (c5-6 / they)
                  :ARG1 (c5-7 / amr-unknown
                              :mod (c5-3 / else)))
      :snt2 (c5-5 / sympathy
                  :mod (c5-4 / tea)
                  :mod (c5-0 / fuck)))

# ::snt LOL "live ammunition." You cheeky cunts.
# ::tokens ["LOL", "\"", "live", "ammunition", ".", "\"", "You", "cheeky", "cunts", "."]
# ::lemmas ["LOL", "\"", "live", "ammunition", ".", "\"", "you", "cheeky", "cunt", "."]
(c6-3 / multi-sentence
      :snt1 (c6-7 / ammunition
                  :ARG1-of (c6-2 / live-01)
                  :ARG2-of (c6-6 / laugh-01
                                 :manner (c6-0 / loud)
                                 :mode expressive))
      :snt2 (c6-1 / you
                  :mod (c6-5 / cunts
                             :mod (c6-4 / cheeky))))

# ::snt Who would think otherwise!?!?
# ::tokens ["Who", "would", "think", "otherwise", "!", "?", "!", "?"]
# ::lemmas ["who", "would", "think", "otherwise", "!", "?", "!", "?"]
(c7-1 / think-01
      :ARG0 (c7-2 / amr-unknown)
      :ARG1 (c7-0 / have-polarity-91
                  :ARG2 -)
      :mode expressive)

# ::snt that's good. Dead ammunition doesn't work too well
# ::tokens ["that", "'s", "good", ".", "Dead", "ammunition", "does", "n't", "work", "too", "well"]
# ::lemmas ["that", "be", "good", ".", "dead", "ammunition", "do", "not", "work", "too", "well"]
(c8-2 / multi-sentence
      :snt1 (c8-5 / good-02
                  :ARG1 (c8-7 / that))
      :snt2 (c8-1 / work-09
                  :ARG1 (c8-8 / ammunition
                              :ARG1-of (c8-4 / die-01))
                  :ARG2 (c8-3 / well-09
                              :ARG2-of (c8-0 / have-degree-91
                                             :ARG1 c8-1
                                             :ARG3 (c8-6 / too)))
                  :polarity -))
