# ::snt Wonder what your great disciple would feel about this tweet ...!
# ::tokens ["Wonder", "what", "your", "great", "disciple", "would", "feel", "about", "this", "tweet", "...", "!"]
# ::lemmas ["wonder", "what", "your", "great", "disciple", "would", "feel", "about", "this", "tweet", "...", "!"]
(c1-0 / wonder-01
      :ARG0 (c1-3 / i)
      :ARG1 (c1-9 / thing
                  :ARG1-of (c1-2 / feel-01
                                 :ARG0 (c1-5 / person
                                             :ARG0-of (c1-6 / disciple-01
                                                            :ARG1 (c1-1 / you))
                                             :mod (c1-7 / great))
                                 :ARG2 c1-9
                                 :ARG1-of (c1-8 / tweet-01)
                                 :mod (c1-4 / this)))
      :mode expressive)

# ::snt . There you are Secularist. I wonder what is a though.
# ::tokens [".", "There", "you", "are", "Secularist", ".", "I", "wonder", "what", "is", "a", "though", "."]
# ::lemmas [".", "there", "you", "be", "Secularist", ".", "i", "wonder", "what", "be", "a", "though", "."]
(c2-3 / multi-sentence
      :snt1 (c2-6 / Secularist
                  :domain (c2-1 / you)
                  :location (c2-7 / there))
      :snt2 (c2-2 / wonder-01
                  :ARG0 (c2-4 / i)
                  :ARG1 (c2-5 / thing
                              :ARG1-of (c2-0 / have-concession-91))))

# ::snt yes. every incident needs an investigation, every human being deserves a trial.
# ::tokens ["yes", ".", "every", "incident", "needs", "an", "investigation", ",", "every", "human", "being", "deserves", "a", "trial", "."]
# ::lemmas ["yes", ".", "every", "incident", "need", "an", "investigation", ",", "every", "human", "being", "deserve", "a", "trial", "."]
(c3-2 / multi-sentence
      :snt1 (c3-1 / yes)
      :snt2 (c3-5 / deserve-01
                  :ARG0 (c3-3 / being
                              :mod (c3-0 / human)
                              :mod (c3-4 / every))
                  :ARG1 (c3-6 / try-02
                              :ARG1 c3-3)))

# ::snt watchd ur intrview in headlinetoday. Hope now know the difference b/w islamic &amp; other religious hardliners.
# ::tokens ["watchd", "ur", "intrview", "in", "headlinetoday", ".", "Hope", "now", "know", "the", "difference", "b", "/", "w", "islamic", "&", "amp", ";", "other", "religious", "hardliners", "."]
# ::lemmas ["watchd", "ur", "intrview", "in", "headlinetoday", ".", "hope", "now", "know", "the", "difference", "b", "/", "w", "islamic", "&", "amp", ";", "other", "religious", "hardliner", "."]
(c4-0 / multi-sentence
      :snt1 (c4-12 / watch-01
                   :ARG0 (c4-16 / you)
                   :ARG1 (c4-13 / intrview-01
                                :ARG0 c4-16
                                :medium (c4-4 / publication
                                              :name (c4-10 / name
                                                           :op1 "Headlinetoday")))
                   :mode imperative)
      :snt2 (c4-8 / hope-01
                  :ARG0 (c4-14 / i)
                  :ARG1 (c4-15 / know-01
                               :ARG0 (c4-19 / you)
                               :ARG1 (c4-5 / differ-02
                                           :ARG1 (c4-7 / and
                                                       :op1 (c4-11 / religious-group
                                                                   :name (c4-18 / name
                                                                                :op1 "Islam"))
                                                       :op2 (c4-1 / religious-group
                                                                  :name (c4-2 / name
                                                                              :op1 "amp")))
                                           :ARG2 (c4-6 / hardliner
                                                       :mod (c4-17 / other)
                                                       :mod (c4-9 / religious)))
                               :time (c4-3 / now))))

# ::snt What policies will the French Gov have in place to tackle the scum that is hell bent to create future problems?
# ::tokens ["What", "policies", "will", "the", "French", "Gov", "have", "in", "place", "to", "tackle", "the", "scum", "that", "is", "hell", "bent", "to", "create", "future", "problems", "?"]
# ::lemmas ["what", "policy", "will", "the", "French", "Gov", "have", "in", "place", "to", "tackle", "the", "scum", "that", "be", "hell", "bent", "to", "create", "future", "problem", "?"]
(c5-0 / have-03
      :ARG0 (c5-6 / person
                  :ARG0-of (c5-14 / have-org-role-91
                                  :ARG1 (c5-8 / country
                                              :name (c5-4 / name
                                                          :op1 "France"))
                                  :ARG2 (c5-9 / governor)))
      :ARG1 (c5-13 / policy-01
                   :ARG2 (c5-12 / tackle-01
                                :ARG0 c5-6
                                :ARG1 (c5-10 / scum
                                             :ARG0-of (c5-3 / bent-08
                                                            :ARG1 (c5-7 / create-01
                                                                        :ARG0 c5-10
                                                                        :ARG1 (c5-2 / problem
                                                                                    :time (c5-1 / future)))
                                                            :degree (c5-5 / hell))))
                   :mod (c5-11 / amr-unknown)))

# ::snt never mind ! People who know ur thoughts through ur books n tweets know well how you will silence secular apologist
# ::tokens ["never", "mind", "!", "People", "who", "know", "ur", "thoughts", "through", "ur", "books", "n", "tweets", "know", "well", "how", "you", "will", "silence", "secular", "apologist"]
# ::lemmas ["never", "mind", "!", "people", "who", "know", "ur", "thought", "through", "ur", "book", "n", "tweet", "know", "well", "how", "you", "will", "silence", "secular", "apologist"]
(c6-2 / multi-sentence
      :snt1 (c6-10 / mind-15
                   :ARG0 (c6-0 / you)
                   :time (c6-4 / ever)
                   :polarity -
                   :mode imperative)
      :snt2 (c6-14 / know-01
                   :ARG0 (c6-11 / person
                                :ARG0-of (c6-5 / know-01
                                               :ARG1 (c6-13 / thing
                                                            :ARG1-of (c6-12 / think-01
                                                                            :ARG0 (c6-17 / you)))
                                               :medium (c6-16 / and
                                                              :op1 (c6-3 / book
                                                                         :poss c6-17)
                                                              :op2 (c6-9 / tweet-02
                                                                         :ARG0 c6-17))))
                   :ARG1 c6-13
                   :manner-of (c6-15 / silence-01
                                     :ARG0 c6-17
                                     :ARG1 (c6-6 / person
                                                 :mod (c6-7 / secular)
                                                 :ARG0-of (c6-8 / apologist-00))))
      :ARG1-of (c6-1 / well-09))

# ::snt Death penalty Never brought justice ....
# ::tokens ["Death", "penalty", "Never", "brought", "justice", "...."]
# ::lemmas ["death", "penalty", "never", "bring", "justice", "...."]
(c7-1 / bring-01
      :ARG0 (c7-3 / penalize-01
                  :manner (c7-4 / die-01))
      :ARG1 (c7-0 / justice)
      :time (c7-2 / ever)
      :polarity -)

# ::snt Secret armies to fight fire with Fire
# ::tokens ["Secret", "armies", "to", "fight", "fire", "with", "Fire"]
# ::lemmas ["secret", "army", "to", "fight", "fire", "with", "Fire"]
(c8-4 / army
      :mod (c8-3 / secret)
      :ARG0-of (c8-0 / fight-01
                     :ARG1 (c8-2 / fire-01)
                     :ARG2 (c8-1 / fire-01)))

# ::snt There's no blasphemy law either, hence ? Violence is wrong,whether by police or by terrorists.
# ::tokens ["There", "'s", "no", "blasphemy", "law", "either", ",", "hence", "?", "Violence", "is", "wrong", ",", "whether", "by", "police", "or", "by", "terrorists", "."]
# ::lemmas ["there", "be", "no", "blasphemy", "law", "either", ",", "hence", "?", "violence", "be", "wrong", ",", "whether", "by", "police", "or", "by", "terrorist", "."]
(c9-2 / multi-sentence
      :snt1 (c9-8 / cause-01
                  :ARG0 (c9-1 / law
                              :mod (c9-3 / blasphemy)
                              :mod (c9-5 / either)
                              :polarity -))
      :snt2 (c9-0 / wrong-02
                  :ARG1 (c9-6 / violence)
                  :ARG2 (c9-4 / or
                              :op1 (c9-7 / police)
                              :op2 (c9-9 / terrorist))))

# ::snt You're one hell of a brave woman. No wonder psudos across spectrum are irked at ur mere mention. Go Strong!
# ::tokens ["You", "'re", "one", "hell", "of", "a", "brave", "woman", ".", "No", "wonder", "psudos", "across", "spectrum", "are", "irked", "at", "ur", "mere", "mention", ".", "Go", "Strong", "!"]
# ::lemmas ["you", "be", "one", "hell", "of", "a", "brave", "woman", ".", "no", "wonder", "psudo", "across", "spectrum", "be", "irk", "at", "ur", "mere", "mention", ".", "go", "Strong", "!"]
(c10-4 / multi-sentence
       :snt1 (c10-1 / woman
                    :ARG0-of (c10-5 / brave-02
                                    :degree (c10-0 / hell))
                    :domain (c10-2 / you))
       :snt2 (c10-8 / wonder-02
                    :ARG1 (c10-14 / awe-01
                                  :ARG0 (c10-9 / mention-01
                                               :ARG1 (c10-12 / you)
                                               :mod (c10-3 / mere))
                                  :ARG1 (c10-10 / pudos
                                                :location (c10-13 / spectrum)))
                    :polarity -)
       :snt3 (c10-11 / go-03
                     :ARG0 (c10-6 / you)
                     :ARG1 (c10-7 / strong-02
                                  :ARG1 c10-6)
                     :mode imperative))

# ::snt Versatile armies with missions: de jure for media &amp; de facto to exterminate Jihadists.
# ::tokens ["Versatile", "armies", "with", "missions", ":", "de", "jure", "for", "media", "&", "amp", ";", "de", "facto", "to", "exterminate", "Jihadists", "."]
# ::lemmas ["versatile", "army", "with", "mission", ":", "de", "jure", "for", "media", "&", "amp", ";", "de", "facto", "to", "exterminate", "Jihadists", "."]
(c11-10 / army
        :ARG1-of (c11-5 / versatile-00)
        :ARG0-of (c11-0 / have-03
                        :ARG1 (c11-2 / mission-01
                                     :ARG0 c11-10
                                     :ARG1 (c11-4 / and
                                                  :op1 (c11-6 / media)
                                                  :op2 (c11-7 / amp))))
        :ARG0-of (c11-3 / exterminate-01
                        :ARG1 (c11-8 / person
                                     :mod (c11-1 / jihad))
                        :mod (c11-9 / de-facto)))

# ::snt agree!
# ::tokens ["agree", "!"]
# ::lemmas ["agree", "!"]
(c12-0 / agree-01
       :mode expressive)

# ::snt loved your interview on Headlines today.. be that fierce always.. &amp; keep inviting Fatwas
# ::tokens ["loved", "your", "interview", "on", "Headlines", "today", "..", "be", "that", "fierce", "always", "..", "&", "amp", ";", "keep", "inviting", "Fatwas"]
# ::lemmas ["love", "your", "interview", "on", "Headlines", "today", "..", "be", "that", "fierce", "always", "..", "&", "amp", ";", "keep", "invite", "Fatwas"]
(c13-1 / multi-sentence
       :snt1 (c13-8 / love-01
                    :ARG0 (c13-14 / i)
                    :ARG1 (c13-15 / interview-01
                                  :ARG0 (c13-10 / broadcast-program
                                                :name (c13-12 / name
                                                              :op1 "Headlines"))
                                  :ARG1 (c13-18 / you))
                    :time (c13-21 / today))
       :snt2 (c13-5 / say-01
                    :ARG1 (c13-7 / and
                                 :op1 (c13-9 / fierce
                                             :domain (c13-20 / you)
                                             :time (c13-13 / always)
                                             :degree (c13-16 / that))
                                 :op2 (c13-11 / et-cetera))
                    :ARG2 (c13-4 / person
                                 :name (c13-19 / name
                                               :op1 "&amp")))
       :snt3 (c13-17 / keep-02
                     :ARG0 (c13-2 / you)
                     :ARG1 (c13-0 / invite-01
                                  :ARG0 c13-2
                                  :ARG1 (c13-6 / person
                                               :name (c13-3 / name
                                                            :op1 "Fatwas")))
                     :mode imperative))

# ::snt But wait, a politically motivated SIT can give a anytime. LOLz.
# ::tokens ["But", "wait", ",", "a", "politically", "motivated", "SIT", "can", "give", "a", "anytime", ".", "LOLz", "."]
# ::lemmas ["but", "wait", ",", "a", "politically", "motivated", "SIT", "can", "give", "a", "anytime", ".", "lolz", "."]
(c14-7 / contrast-01
       :ARG2 (c14-0 / wait-01
                    :ARG1 (c14-1 / you)
                    :ARG1-of (c14-6 / cause-01
                                    :ARG0 (c14-5 / possible-01
                                                 :ARG1 (c14-8 / give-01
                                                              :ARG0 (c14-10 / shit
                                                                            :ARG1-of (c14-3 / motivate-01
                                                                                            :ARG0 (c14-11 / politics)))
                                                              :ARG1 (c14-12 / anytime))
                                                 :ARG2-of (c14-2 / laugh-01
                                                                 :ARG0 (c14-4 / i)
                                                                 :manner (c14-9 / loud)
                                                                 :mode expressive)))
                    :mode imperative))

# ::snt the whole of it wasnt telecast b/c you were not following d script...lol..
# ::tokens ["the", "whole", "of", "it", "was", "nt", "telecast", "b", "/", "c", "you", "were", "not", "following", "d", "script", "...", "lol", ".."]
# ::lemmas ["the", "whole", "of", "it", "be", "not", "telecast", "b", "/", "c", "you", "be", "not", "follow", "d", "script", "...", "lol", ".."]
(c15-12 / telecast-00
        :ARG1 (c15-10 / thing
                      :ARG1-of (c15-5 / include-91
                                      :ARG2 (c15-8 / it)
                                      :ARG3 (c15-0 / whole)))
        :ARG1-of (c15-7 / cause-01
                        :ARG0 (c15-2 / follow-02
                                     :ARG0 (c15-1 / you)
                                     :ARG1 (c15-11 / script
                                                   :mod (c15-6 / d))
                                     :ARG1-of (c15-3 / laugh-01
                                                     :ARG0 (c15-4 / i)
                                                     :manner (c15-9 / loud)
                                                     :mode expressive)
                                     :polarity -))
        :polarity -)

# ::snt headlines today
# ::tokens ["headlines", "today"]
# ::lemmas ["headline", "today"]
(c16-0 / headline
       :time (c16-1 / today))

# ::snt r u blind or sumthng,u need a bloody investigation on open killing at
# ::tokens ["r", "u", "blind", "or", "sumthng", ",", "u", "need", "a", "bloody", "investigation", "on", "open", "killing", "at"]
# ::lemmas ["r", "u", "blind", "or", "sumthng", ",", "u", "need", "a", "bloody", "investigation", "on", "open", "killing", "at"]
(c17-5 / need-01
       :ARG0 (c17-3 / or
                    :op1 (c17-0 / you)
                    :op2 (c17-7 / person
                                :name (c17-6 / name
                                             :op1 "Sumthng")))
       :ARG1 (c17-4 / investigate-01
                    :ARG1 (c17-8 / kill-01
                                 :ARG1-of (c17-1 / open-04))
                    :manner (c17-2 / bloody)))

# ::snt Authorities in France &amp; elsewhere should adopt 'implicit' guidelines to kill jihad terrorists where possible.
# ::tokens ["Authorities", "in", "France", "&", "amp", ";", "elsewhere", "should", "adopt", "'", "implicit", "'", "guidelines", "to", "kill", "jihad", "terrorists", "where", "possible", "."]
# ::lemmas ["authority", "in", "France", "&", "amp", ";", "elsewhere", "should", "adopt", "'", "implicit", "'", "guideline", "to", "kill", "jihad", "terrorist", "where", "possible", "."]
(c18-7 / recommend-01
       :ARG1 (c18-13 / adopt-01
                     :ARG0 (c18-2 / and
                                  :op1 (c18-5 / authority
                                              :location (c18-8 / country
                                                               :name (c18-4 / name
                                                                            :op1 "France")))
                                  :op2 (c18-11 / authority
                                               :location (c18-1 / elsewhere)))
                     :ARG1 (c18-9 / guideline
                                  :ARG1-of (c18-3 / imply-01))
                     :purpose (c18-12 / kill-01
                                      :ARG0 c18-2
                                      :ARG1 (c18-10 / terrorist
                                                    :mod (c18-0 / jihad))
                                      :location (c18-6 / possible-01))))

# ::snt kon se chanel par interview aa rha tha
# ::tokens ["kon", "se", "chanel", "par", "interview", "aa", "rha", "tha"]
# ::lemmas ["kon", "se", "chanel", "par", "interview", "aa", "rha", "tha"]
(c19-4 / aha
       :mod (c19-2 / par
                   :op1 (c19-0 / interview-01)
                   :mod (c19-3 / person
                               :name (c19-1 / name
                                            :op1 "Chanel")))
       :mode expressive)

# ::snt Boko Haram needs a investigation,go to Nigeria
# ::tokens ["Boko", "Haram", "needs", "a", "investigation", ",", "go", "to", "Nigeria"]
# ::lemmas ["Boko", "Haram", "need", "a", "investigation", ",", "go", "to", "Nigeria"]
(c20-8 / and
       :op1 (c20-3 / need-01
                   :ARG0 (c20-1 / organization
                                :name (c20-4 / name
                                             :op1 "Boko"
                                             :op2 "Haram"))
                   :ARG1 (c20-2 / investigate-01
                                :ARG1 c20-1))
       :op2 (c20-7 / go-02
                   :ARG0 (c20-0 / you)
                   :ARG4 (c20-6 / country
                                :name (c20-5 / name
                                             :op1 "Nigeria"))
                   :mode imperative))

# ::snt Trial would take sec.to come to decision. Eye witnesses, videos would address that.
# ::tokens ["Trial", "would", "take", "sec.to", "come", "to", "decision", ".", "Eye", "witnesses", ",", "videos", "would", "address", "that", "."]
# ::lemmas ["trial", "would", "take", "sec.to", "come", "to", "decision", ".", "eye", "witness", ",", "video", "would", "address", "that", "."]
(c21-1 / multi-sentence
       :snt1 (c21-10 / take-10
                     :ARG0 (c21-8 / try-02)
                     :ARG1 (c21-6 / decide-01
                                  :ARG0 c21-8)
                     :ARG2 (c21-9 / secure-02))
       :snt2 (c21-11 / address-02
                     :ARG0 (c21-3 / and
                                  :op1 (c21-5 / person
                                              :ARG0-of (c21-0 / witness-01
                                                              :manner (c21-2 / eye)))
                                  :op2 (c21-4 / video))
                     :ARG1 (c21-7 / that)))

# ::snt Innocent until proven guilty you see,which applies to eg &amp; .
# ::tokens ["Innocent", "until", "proven", "guilty", "you", "see", ",", "which", "applies", "to", "eg", "&", "amp", ";", "."]
# ::lemmas ["innocent", "until", "prove", "guilty", "you", "see", ",", "which", "apply", "to", "eg", "&", "amp", ";", "."]
(c22-7 / see-01
       :ARG0 (c22-0 / you)
       :ARG1 (c22-3 / innocent-01
                    :time (c22-1 / until
                                 :op1 (c22-5 / prove-01
                                             :ARG1 (c22-6 / guilty-01)))
                    :ARG1-of (c22-9 / apply-02
                                    :ARG2 (c22-2 / exemplify-01
                                                 :ARG0 (c22-8 / person
                                                              :name (c22-4 / name
                                                                           :op1 "&"
                                                                           :op2 "amp"))))))

# ::snt Don't think there was any doubt how the French authorities intended to end this. Right move.
# ::tokens ["Do", "n't", "think", "there", "was", "any", "doubt", "how", "the", "French", "authorities", "intended", "to", "end", "this", ".", "Right", "move", "."]
# ::lemmas ["do", "not", "think", "there", "be", "any", "doubt", "how", "the", "French", "authority", "intend", "to", "end", "this", ".", "right", "move", "."]
(c23-0 / multi-sentence
       :snt1 (c23-11 / think-01
                     :ARG0 (c23-3 / i)
                     :ARG1 (c23-6 / doubt-01
                                  :ARG1 (c23-8 / intend-01
                                               :ARG0 (c23-12 / authority
                                                             :mod (c23-7 / country
                                                                         :name (c23-4 / name
                                                                                      :op1 "France")))
                                               :ARG1 (c23-1 / end-01
                                                            :ARG0 c23-12
                                                            :ARG1 (c23-10 / this)))
                                  :mod (c23-2 / any))
                     :polarity -)
       :snt2 (c23-5 / move-02
                    :ARG1-of (c23-9 / right-02)))

# ::snt cant agree with u more. Rajdeep tried hard make Taslima speak language of pseudo secularist but in vain.
# ::tokens ["ca", "nt", "agree", "with", "u", "more", ".", "Rajdeep", "tried", "hard", "make", "Taslima", "speak", "language", "of", "pseudo", "secularist", "but", "in", "vain", "."]
# ::lemmas ["can", "not", "agree", "with", "u", "more", ".", "rajdeep", "try", "hard", "make", "Taslima", "speak", "language", "of", "pseudo", "secularist", "but", "in", "vain", "."]
(c24-0 / multi-sentence
       :snt1 (c24-2 / possible-01
                    :ARG1 (c24-5 / agree-01
                                 :ARG0 (c24-16 / i)
                                 :ARG2 (c24-17 / you)
                                 :ARG1-of (c24-7 / have-quant-91
                                                 :ARG3 (c24-13 / more)))
                    :polarity -)
       :snt2 (c24-19 / contrast-01
                     :ARG1 (c24-20 / try-01
                                   :ARG0 (c24-4 / person
                                                :name (c24-12 / name
                                                              :op1 "Rajdeep"))
                                   :ARG1 (c24-8 / make-02
                                                :ARG0 c24-4
                                                :ARG1 (c24-9 / language
                                                             :ARG3-of (c24-3 / speak-01
                                                                             :ARG0 (c24-10 / person
                                                                                           :mod (c24-14 / religious-group
                                                                                                        :name (c24-18 / name
                                                                                                                      :op1 "Taslima"))))
                                                             :mod (c24-11 / secularist
                                                                          :mod (c24-15 / pseudo))))
                                   :manner (c24-6 / hard))
                     :ARG2 (c24-1 / vain
                                  :domain c24-8)))

# ::snt . LOL! Secular apologist? Hindus are so good at coining preposterous phrases. You forgot to add !
# ::tokens [".", "LOL", "!", "Secular", "apologist", "?", "Hindus", "are", "so", "good", "at", "coining", "preposterous", "phrases", ".", "You", "forgot", "to", "add", "!"]
# ::lemmas [".", "LOL", "!", "secular", "apologist", "?", "Hindus", "be", "so", "good", "at", "coin", "preposterous", "phrase", ".", "you", "forgot", "to", "add", "!"]
(c25-2 / multi-sentence
       :snt1 (c25-15 / apologist
                     :mod (c25-13 / secular)
                     :ARG2-of (c25-1 / laugh-01
                                     :manner (c25-12 / loud)
                                     :mode expressive))
       :snt2 (c25-11 / good-03
                     :ARG1 (c25-8 / person
                                  :mod (c25-9 / religious-group
                                              :name (c25-7 / name
                                                           :op1 "Hindu")))
                     :ARG2 (c25-10 / coine-01
                                   :ARG0 c25-8
                                   :ARG1 (c25-14 / phrase
                                                 :mod (c25-4 / preposterous)))
                     :degree (c25-5 / so))
       :snt3 (c25-3 / forget-01
                    :ARG0 (c25-0 / you)
                    :ARG1 (c25-6 / add-01
                                 :ARG0 c25-0)))

# ::snt So you think it is very ok to kill people without an investigation and trial?
# ::tokens ["So", "you", "think", "it", "is", "very", "ok", "to", "kill", "people", "without", "an", "investigation", "and", "trial", "?"]
# ::lemmas ["so", "you", "think", "it", "be", "very", "ok", "to", "kill", "people", "without", "an", "investigation", "and", "trial", "?"]
(c26-4 / infer-01
       :polarity (c26-11 / amr-unknown)
       :ARG1 (c26-10 / think-01
                     :ARG0 (c26-0 / you)
                     :ARG1 (c26-2 / okay-04
                                  :ARG1 (c26-5 / kill-01
                                               :ARG1 (c26-7 / person)
                                               :manner (c26-1 / without
                                                              :op1 (c26-3 / and
                                                                          :op1 (c26-8 / investigate-01
                                                                                      :ARG1 c26-7)
                                                                          :op2 (c26-9 / try-02
                                                                                      :ARG1 c26-7))))
                                  :degree (c26-6 / very))))

# ::snt Yes those few seconds are their right. If u act savage with savages then you are the same
# ::tokens ["Yes", "those", "few", "seconds", "are", "their", "right", ".", "If", "u", "act", "savage", "with", "savages", "then", "you", "are", "the", "same"]
# ::lemmas ["yes", "those", "few", "seconds", "be", "their", "right", ".", "if", "u", "act", "savage", "with", "savage", "then", "you", "be", "the", "same"]
(c27-2 / multi-sentence
       :snt1 (c27-7 / right-06
                    :ARG1 (c27-10 / they)
                    :ARG2 (c27-1 / few
                                 :op1 (c27-8 / temporal-quantity
                                             :unit (c27-9 / second)
                                             :quant 1)
                                 :mod (c27-5 / that))
                    :mod (c27-0 / yes))
       :snt2 (c27-4 / same-01
                    :ARG1 (c27-12 / you)
                    :condition (c27-11 / act-01
                                       :ARG0 c27-12
                                       :ARG1 (c27-3 / savage)
                                       :ARG3 (c27-6 / person
                                                    :mod c27-3))))

# ::snt interview was suddenly stopped because of breaking news, they haven't telecasted the rest of the interview.
# ::tokens ["interview", "was", "suddenly", "stopped", "because", "of", "breaking", "news", ",", "they", "have", "n't", "telecasted", "the", "rest", "of", "the", "interview", "."]
# ::lemmas ["interview", "be", "suddenly", "stop", "because", "of", "break", "news", ",", "they", "have", "not", "telecast", "the", "rest", "of", "the", "interview", "."]
(c28-9 / and
       :op1 (c28-7 / stop-01
                   :ARG1 (c28-2 / interview-01)
                   :manner (c28-1 / sudden)
                   :ARG1-of (c28-5 / cause-01
                                   :ARG0 (c28-3 / news
                                                :ARG1-of (c28-0 / break-13))))
       :op2 (c28-8 / telecast-01
                   :ARG0 (c28-6 / they)
                   :ARG1 (c28-4 / rest
                                :part-of c28-2)
                   :polarity -))
