# ::snt wtf? : The streets of look a little different tonight. | AP Photo
# ::tokens ["wtf", "?", ":", "The", "streets", "of", "look", "a", "little", "different", "tonight", ".", "|", "AP", "Photo"]
# ::lemmas ["wtf", "?", ":", "the", "street", "of", "look", "a", "little", "different", "tonight", ".", "|", "AP", "Photo"]
(c1-1 / look-02
      :ARG0 (c1-8 / street)
      :ARG1 (c1-6 / differ-02
                  :ARG1 c1-8
                  :degree (c1-7 / little))
      :time (c1-0 / date-entity
                  :dayperiod (c1-3 / night)
                  :mod (c1-9 / today))
      :source (c1-5 / publication
                    :name (c1-4 / name
                                :op1 "AP"
                                :op2 " Photo"))
      :mod (c1-2 / fuck
                 :mode expressive))

# ::snt ": The streets of look a little different tonight. | AP Photo
# ::tokens ["\"", ":", "The", "streets", "of", "look", "a", "little", "different", "tonight", ".", "|", "AP", "Photo"]
# ::lemmas ["\"", ":", "the", "street", "of", "look", "a", "little", "different", "tonight", ".", "|", "AP", "Photo"]
(c2-1 / look-02
      :ARG0 (c2-7 / street)
      :ARG1 (c2-5 / differ-02
                  :degree (c2-6 / little))
      :time (c2-0 / date-entity
                  :dayperiod (c2-2 / night)
                  :mod (c2-8 / today))
      :source (c2-4 / publication
                    :name (c2-3 / name
                                :op1 "AP"
                                :op2 " Photo")))

# ::snt OK Jimmy, we'll take over now. You're a good boy.
# ::tokens ["OK", "Jimmy", ",", "we", "'ll", "take", "over", "now", ".", "You", "'re", "a", "good", "boy", "."]
# ::lemmas ["ok", "Jimmy", ",", "we", "'ll", "take", "over", "now", ".", "you", "be", "a", "good", "boy", "."]
(c3-2 / multi-sentence
      :snt1 (c3-9 / say-01
                  :ARG0 (c3-4 / i)
                  :ARG1 (c3-10 / take-over-12
                               :ARG0 (c3-0 / we)
                               :time (c3-5 / now))
                  :ARG2 (c3-7 / person
                              :name (c3-6 / name
                                          :op1 "Jimmy")))
      :snt2 (c3-3 / boy
                  :ARG1-of (c3-8 / good-02)
                  :domain (c3-1 / you)))

# ::snt libya ?
# ::tokens ["libya", "?"]
# ::lemmas ["libya", "?"]
(c4-0 / libya
      :polarity (c4-1 / amr-unknown))

# ::snt : The streets of look a little different tonight. | AP Photo
# ::tokens [":", "The", "streets", "of", "look", "a", "little", "different", "tonight", ".", "|", "AP", "Photo"]
# ::lemmas [":", "the", "street", "of", "look", "a", "little", "different", "tonight", ".", "|", "AP", "Photo"]
(c5-1 / look-02
      :ARG0 (c5-7 / street)
      :ARG1 (c5-5 / differ-02
                  :ARG1 c5-7
                  :degree (c5-6 / little))
      :time (c5-0 / date-entity
                  :dayperiod (c5-2 / night)
                  :mod (c5-8 / today))
      :source (c5-4 / publication
                    :name (c5-3 / name
                                :op1 "AP"
                                :op2 " Photo")))

# ::snt : The streets of look a little different tonight. | AP Photo
# ::tokens [":", "The", "streets", "of", "look", "a", "little", "different", "tonight", ".", "|", "AP", "Photo"]
# ::lemmas [":", "the", "street", "of", "look", "a", "little", "different", "tonight", ".", "|", "AP", "Photo"]
(c6-1 / look-02
      :ARG0 (c6-7 / street)
      :ARG1 (c6-5 / differ-02
                  :ARG1 c6-7
                  :degree (c6-6 / little))
      :time (c6-0 / date-entity
                  :dayperiod (c6-2 / night)
                  :mod (c6-8 / today))
      :source (c6-4 / publication
                    :name (c6-3 / name
                                :op1 "AP"
                                :op2 " Photo")))

# ::snt The streets of look a little different tonight. | AP Photo
# ::tokens ["The", "streets", "of", "look", "a", "little", "different", "tonight", ".", "|", "AP", "Photo"]
# ::lemmas ["the", "street", "of", "look", "a", "little", "different", "tonight", ".", "|", "AP", "Photo"]
(c7-1 / look-02
      :ARG0 (c7-7 / street)
      :ARG1 (c7-5 / differ-02
                  :degree (c7-6 / little))
      :time (c7-0 / date-entity
                  :dayperiod (c7-2 / night)
                  :mod (c7-8 / today))
      :source (c7-4 / publication
                    :name (c7-3 / name
                                :op1 "AP"
                                :op2 " Photo")))

# ::snt I have to admit, the miniature train caught me a little off-guard... o.O How things change!
# ::tokens ["I", "have", "to", "admit", ",", "the", "miniature", "train", "caught", "me", "a", "little", "off", "-", "guard", "...", "o.O", "How", "things", "change", "!"]
# ::lemmas ["i", "have", "to", "admit", ",", "the", "miniature", "train", "catch", "i", "a", "little", "off", "-", "guard", "...", "o.o", "how", "thing", "change", "!"]
(c8-1 / multi-sentence
      :snt1 (c8-3 / obligate-01
                  :ARG1 (c8-5 / i)
                  :ARG2 (c8-13 / admit-01
                               :ARG0 c8-5
                               :ARG1 (c8-8 / catch-01
                                           :ARG0 (c8-12 / train
                                                        :mod (c8-6 / miniature))
                                           :ARG1 (c8-9 / i)
                                           :ARG2 (c8-10 / guard-01
                                                        :ARG0 c8-12
                                                        :ARG1 c8-9
                                                        :degree (c8-0 / little)
                                                        :polarity -))))
      :snt2 (c8-2 / o.O
                  :topic (c8-7 / change-01
                               :ARG1 (c8-11 / thing)
                               :manner (c8-4 / amr-unknown))
                  :mode expressive))

# ::snt and God bless family .
# ::tokens ["and", "God", "bless", "family", "."]
# ::lemmas ["and", "God", "bless", "family", "."]
(c9-4 / and
      :op2 (c9-1 / bless-01
                 :ARG0 (c9-3 / person
                             :name (c9-2 / name
                                         :op1 "God"))
                 :ARG1 (c9-0 / family)))

# ::snt Glad to see the have stopped. You can't have as long as you have riots. Never get peace that way.
# ::tokens ["Glad", "to", "see", "the", "have", "stopped", ".", "You", "ca", "n't", "have", "as", "long", "as", "you", "have", "riots", ".", "Never", "get", "peace", "that", "way", "."]
# ::lemmas ["Glad", "to", "see", "the", "have", "stop", ".", "you", "can", "not", "have", "as", "long", "as", "you", "have", "riot", ".", "never", "get", "peace", "that", "way", "."]
(c10-4 / multi-sentence
       :snt1 (c10-11 / glad-02
                     :ARG0 (c10-13 / see-01
                                   :ARG0 (c10-7 / i)
                                   :ARG1 (c10-5 / stop-01
                                                :ARG1 (c10-15 / they))))
       :snt2 (c10-8 / possible-01
                    :ARG1 (c10-0 / have-06
                                 :ARG0 (c10-1 / you)
                                 :condition (c10-17 / as-long-as
                                                    :op1 (c10-3 / have-06
                                                                :ARG0 c10-1
                                                                :ARG1 (c10-9 / riot-01))))
                    :polarity -)
       :snt3 (c10-10 / get-01
                     :ARG0 (c10-12 / you)
                     :ARG1 (c10-16 / peace)
                     :time (c10-6 / ever)
                     :manner (c10-2 / way
                                    :mod (c10-14 / that))
                     :polarity -))

# ::snt oh, but as Bob McCulloch would point out: Who's thinking of those poor, disgraced police?
# ::tokens ["oh", ",", "but", "as", "Bob", "McCulloch", "would", "point", "out", ":", "Who", "'s", "thinking", "of", "those", "poor", ",", "disgraced", "police", "?"]
# ::lemmas ["oh", ",", "but", "as", "Bob", "McCulloch", "would", "point", "out", ":", "who", "be", "thinking", "of", "those", "poor", ",", "disgrace", "police", "?"]
(c11-5 / contrast-01
       :ARG2 (c11-8 / think-01
                    :ARG0 (c11-10 / amr-unknown)
                    :ARG1 (c11-3 / police
                                 :mod (c11-9 / poor)
                                 :ARG1-of (c11-4 / disgrace-01)
                                 :mod (c11-6 / that))
                    :ARG1-of (c11-0 / point-out-02
                                    :ARG0 (c11-7 / person
                                                 :name (c11-2 / name
                                                              :op1 "Bob"
                                                              :op2 "McCulloch"))))
       :mod (c11-1 / oh
                   :mode expressive))

# ::snt Looks like Russian-Ukrain War Zone lol
# ::tokens ["Looks", "like", "Russian", "-", "Ukrain", "War", "Zone", "lol"]
# ::lemmas ["look", "like", "Russian", "-", "Ukrain", "War", "Zone", "lol"]
(c12-2 / look-02
       :ARG1 (c12-3 / zone
                    :location-of (c12-1 / war-01
                                        :ARG1 (c12-8 / country
                                                     :name (c12-5 / name
                                                                  :op1 "Russia"))
                                        :ARG2 (c12-7 / country
                                                     :name (c12-6 / name
                                                                  :op1 "Ukraine"))))
       :ARG2 (c12-9 / laugh-01
                    :ARG0 (c12-4 / i)
                    :manner (c12-0 / loud)
                    :mode expressive))

# ::snt Mike Browns MURDER will b ruled "justfied" because NO WAY IN HELL will a judge or D.A. hold any PIG accountable!
# ::tokens ["Mike", "Browns", "MURDER", "will", "b", "ruled", "\"", "justfied", "\"", "because", "NO", "WAY", "IN", "HELL", "will", "a", "judge", "or", "D.A.", "hold", "any", "PIG", "accountable", "!"]
# ::lemmas ["Mike", "Browns", "MURDER", "will", "b", "rule", "\"", "justfied", "\"", "because", "no", "WAY", "in", "HELL", "will", "a", "judge", "or", "D.A.", "hold", "any", "PIG", "accountable", "!"]
(c13-20 / cause-01
        :ARG0 (c13-3 / possible-01
                     :ARG1 (c13-7 / hold-02
                                  :ARG0 (c13-19 / or
                                                :op1 (c13-4 / person
                                                            :ARG0-of (c13-6 / have-org-role-91
                                                                            :ARG3 (c13-0 / judge-01)))
                                                :op2 (c13-9 / person
                                                            :ARG0-of (c13-2 / have-org-role-91
                                                                            :ARG3 (c13-5 / attorney))))
                                  :ARG1 (c13-15 / accountable-02
                                                :ARG0 (c13-14 / person
                                                              :ARG0-of (c13-17 / have-org-role-91
                                                                               :ARG2 (c13-16 / IG))
                                                              :mod (c13-12 / any)))
                                  :location (c13-18 / hell))
                     :polarity -)
        :ARG1 (c13-13 / rule-01
                      :ARG0 (c13-10 / person
                                    :name (c13-11 / name
                                                  :op1 "Mike"
                                                  :op2 "Brown")
                                    :ARG1-of (c13-1 / murder-01))
                      :ARG1 (c13-8 / just-02)))

# ::snt What flag is that?
# ::tokens ["What", "flag", "is", "that", "?"]
# ::lemmas ["what", "flag", "be", "that", "?"]
(c14-0 / flag
       :mod (c14-2 / amr-unknown)
       :domain (c14-1 / that))

# ::snt The streets of are safer now that the cops are gone. Go figure.
# ::tokens ["The", "streets", "of", "are", "safer", "now", "that", "the", "cops", "are", "gone", ".", "Go", "figure", "."]
# ::lemmas ["the", "street", "of", "be", "safe", "now", "that", "the", "cop", "be", "go", ".", "go", "figure", "."]
(c15-2 / multi-sentence
       :snt1 (c15-10 / safe-01
                     :ARG0 (c15-9 / go-02
                                  :ARG0 (c15-8 / cop))
                     :time (c15-5 / now)
                     :time-of (c15-0 / have-degree-91
                                     :ARG1 (c15-4 / street)
                                     :ARG2 (c15-1 / secure-02
                                                  :ARG1 c15-4)
                                     :ARG3 (c15-6 / more)))
       :snt2 (c15-7 / go-03
                    :ARG1 (c15-3 / figure-01)))

# ::snt THIS is the Memory I want to sign off with! WOW! just WOW! WILL WIN! ! GN Family
# ::tokens ["THIS", "is", "the", "Memory", "I", "want", "to", "sign", "off", "with", "!", "WOW", "!", "just", "WOW", "!", "WILL", "WIN", "!", "!", "GN", "Family"]
# ::lemmas ["this", "be", "the", "memory", "i", "want", "to", "sign", "off", "with", "!", "WOW", "!", "just", "WOW", "!", "WILL", "WIN", "!", "!", "GN", "Family"]
(c16-3 / multi-sentence
       :snt1 (c16-10 / remember-01
                     :domain (c16-12 / this)
                     :ARG1-of (c16-11 / sign-off-05
                                      :ARG0 (c16-5 / i)
                                      :ARG1-of (c16-1 / want-01
                                                      :ARG0 c16-5)))
       :snt2 (c16-13 / and
                     :op1 (c16-6 / wow-01
                                 :mode expressive)
                     :op2 (c16-4 / wow-01
                                 :mod (c16-0 / just)
                                 :mode expressive)
                     :op3 (c16-7 / win-01
                                 :mode expressive)
                     :op4 (c16-2 / family
                                 :mod (c16-9 / product
                                             :name (c16-8 / name
                                                          :op1 "GN")))))

# ::snt : The streets of look a little different tonight. | AP Photo did the mini train come from
# ::tokens [":", "The", "streets", "of", "look", "a", "little", "different", "tonight", ".", "|", "AP", "Photo", "did", "the", "mini", "train", "come", "from"]
# ::lemmas [":", "the", "street", "of", "look", "a", "little", "different", "tonight", ".", "|", "AP", "Photo", "do", "the", "mini", "train", "come", "from"]
(c17-2 / multi-sentence
       :snt1 (c17-1 / look-02
                    :ARG0 (c17-10 / street)
                    :ARG1 (c17-6 / differ-02
                                 :ARG1 c17-10
                                 :degree (c17-9 / little))
                    :time (c17-0 / date-entity
                                 :dayperiod (c17-3 / night)
                                 :mod (c17-12 / today)))
       :snt2 (c17-7 / come-01
                    :ARG1 (c17-11 / train
                                  :mod (c17-5 / mini))
                    :ARG3 (c17-8 / photo
                                 :mod (c17-13 / publication
                                              :name (c17-4 / name
                                                           :op1 "AP")))))

# ::snt wud B proud THIS pic is what I go bed with! ! Family
# ::tokens ["wud", "B", "proud", "THIS", "pic", "is", "what", "I", "go", "bed", "with", "!", "!", "Family"]
# ::lemmas ["wud", "B", "proud", "this", "pic", "be", "what", "i", "go", "bed", "with", "!", "!", "family"]
(c18-1 / multi-sentence
       :snt1 (c18-5 / pride-01
                    :ARG0 (c18-7 / person
                                 :name (c18-4 / name
                                              :op1 "Wud"
                                              :op2 "B"))
                    :ARG2 (c18-6 / this
                                 :ARG1-of (c18-2 / bed-02
                                                 :ARG0 (c18-3 / i))))
       :snt2 (c18-0 / family))

# ::snt Pan-African flag.
# ::tokens ["Pan", "-", "African", "flag", "."]
# ::lemmas ["Pan", "-", "African", "flag", "."]
(c19-1 / flag
       :mod (c19-2 / continent
                   :name (c19-0 / name
                                :op1 "Pan-African")))
