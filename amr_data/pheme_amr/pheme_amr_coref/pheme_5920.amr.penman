# ::snt typical untrue media reports who are just trying to get viewers no official reports from official sources
# ::tokens ["typical", "untrue", "media", "reports", "who", "are", "just", "trying", "to", "get", "viewers", "no", "official", "reports", "from", "official", "sources"]
# ::lemmas ["typical", "untrue", "medium", "report", "who", "be", "just", "try", "to", "get", "viewer", "no", "official", "report", "from", "official", "source"]
(c1-6 / report-01
      :ARG0 (c1-2 / media
                  :ARG0-of (c1-10 / try-01
                                  :ARG1 (c1-7 / get-01
                                              :ARG0 c1-2
                                              :ARG1 (c1-4 / report-01
                                                          :mod (c1-3 / official)
                                                          :source (c1-9 / source
                                                                        :mod (c1-1 / official))
                                                          :polarity -))
                                  :mod (c1-0 / just)))
      :ARG1-of (c1-8 / true-01
                     :polarity -)
      :ARG1-of (c1-5 / typical-02))

# ::snt he isnt a bloody president! he is a Prime Minister!
# ::tokens ["he", "is", "nt", "a", "bloody", "president", "!", "he", "is", "a", "Prime", "Minister", "!"]
# ::lemmas ["he", "be", "not", "a", "bloody", "president", "!", "he", "be", "a", "Prime", "Minister", "!"]
(c2-1 / multi-sentence
      :snt1 (c2-4 / president
                  :domain (c2-0 / he)
                  :mod (c2-2 / bloody)
                  :polarity -)
      :snt2 (c2-7 / have-org-role-91
                  :ARG0 (c2-3 / he)
                  :ARG2 (c2-5 / minister
                              :mod (c2-6 / prime))))

# ::snt prime minister.
# ::tokens ["prime", "minister", "."]
# ::lemmas ["prime", "minister", "."]
(c3-1 / minister
      :mod (c3-0 / prime))

# ::snt Seeing you live in Australia, has any media say anything about devices being planted around Sydney?
# ::tokens ["Seeing", "you", "live", "in", "Australia", ",", "has", "any", "media", "say", "anything", "about", "devices", "being", "planted", "around", "Sydney", "?"]
# ::lemmas ["see", "you", "live", "in", "Australia", ",", "have", "any", "medium", "say", "anything", "about", "device", "be", "plant", "around", "Sydney", "?"]
(c4-2 / multi-sentence
      :snt1 (c4-14 / see-01
                   :ARG0 (c4-5 / i)
                   :ARG1 (c4-1 / live-01
                               :ARG0 (c4-0 / you)
                               :location (c4-10 / country
                                                :name (c4-6 / name
                                                            :op1 "Australia"))))
      :snt2 (c4-3 / say-01
                  :ARG0 (c4-8 / media
                              :mod (c4-16 / any))
                  :ARG1 (c4-4 / anything)
                  :ARG3 (c4-9 / plant-01
                              :ARG1 (c4-11 / device)
                              :ARG2 (c4-7 / around
                                          :op1 (c4-12 / city
                                                      :name (c4-13 / name
                                                                   :op1 "Sydney"))))
                  :polarity (c4-15 / amr-unknown)))

# ::snt I am listening a direct news feed (internal) &amp; this is not confirmed as yet. Cafe is in Martin Place not near opera house.
# ::tokens ["I", "am", "listening", "a", "direct", "news", "feed", "(", "internal", ")", "&", "amp", ";", "this", "is", "not", "confirmed", "as", "yet", ".", "Cafe", "is", "in", "Martin", "Place", "not", "near", "opera", "house", "."]
# ::lemmas ["i", "be", "listen", "a", "direct", "news", "feed", "(", "internal", ")", "&", "amp", ";", "this", "be", "not", "confirm", "as", "yet", ".", "Cafe", "be", "in", "Martin", "Place", "not", "near", "opera", "house", "."]
(c5-0 / multi-sentence
      :snt1 (c5-9 / listen-01
                  :ARG0 (c5-14 / i)
                  :ARG1 (c5-7 / and
                              :op1 (c5-10 / feed
                                          :mod (c5-12 / news)
                                          :ARG1-of (c5-4 / direct-02)
                                          :ARG1-of (c5-15 / internal-02))
                              :op2 (c5-3 / product
                                         :name (c5-18 / name
                                                      :op1 "&"
                                                      :op2 "amp")))
                  :ARG1-of (c5-19 / cause-01
                                  :ARG0 (c5-5 / confirm-01
                                              :ARG1 (c5-20 / this)
                                              :time (c5-13 / as-yet)
                                              :polarity -)))
      :snt2 (c5-11 / be-located-at-91
                   :ARG1 (c5-16 / cafe)
                   :ARG2 (c5-6 / street
                               :name (c5-1 / name
                                           :op1 "Martin"
                                           :op2 "Place"))
                   :ARG1-of (c5-2 / near-02
                                  :ARG2 (c5-8 / house
                                              :mod (c5-17 / opera))
                                  :polarity -)))

# ::snt prime minister not president.
# ::tokens ["prime", "minister", "not", "president", "."]
# ::lemmas ["prime", "minister", "not", "president", "."]
(c6-0 / have-org-role-91
      :ARG0 (c6-3 / person
                  :ARG2 (c6-1 / minister
                              :mod (c6-4 / prime))
                  :ARG0-of c6-0)
      :ARG2 (c6-2 / president)
      :polarity -)

# ::snt thats not true either.... you guys are not the real Anonymous clearly
# ::tokens ["that", "s", "not", "true", "either", "....", "you", "guys", "are", "not", "the", "real", "Anonymous", "clearly"]
# ::lemmas ["that", "s", "not", "true", "either", "....", "you", "guy", "be", "not", "the", "real", "Anonymous", "clearly"]
(c7-1 / multi-sentence
      :snt1 (c7-9 / true-01
                  :ARG1 (c7-8 / that)
                  :mod (c7-2 / either)
                  :polarity -)
      :snt2 (c7-5 / real-04
                  :ARG1 (c7-4 / person
                              :name (c7-3 / name
                                          :op1 "Anonymous")
                              :domain (c7-0 / you
                                            :mod (c7-7 / guy)))
                  :ARG1-of (c7-6 / clear-06)
                  :polarity -))

# ::snt fucking go n kick their baws.
# ::tokens ["fucking", "go", "n", "kick", "their", "baws", "."]
# ::lemmas ["fucking", "go", "n", "kick", "their", "baw", "."]
(c8-6 / and
      :op1 (c8-3 / go-05
                 :ARG0 (c8-0 / you)
                 :mode imperative)
      :op2 (c8-5 / kick-01
                 :ARG0 c8-0
                 :ARG1 (c8-2 / baw
                             :poss (c8-4 / they))
                 :mode imperative)
      :mod (c8-1 / fucking
                 :mode expressive))

# ::snt Where are you hearing that? that hasnt even been reported.
# ::tokens ["Where", "are", "you", "hearing", "that", "?", "that", "has", "nt", "even", "been", "reported", "."]
# ::lemmas ["where", "be", "you", "hear", "that", "?", "that", "have", "not", "even", "be", "report", "."]
(c9-2 / multi-sentence
      :snt1 (c9-0 / hear-01
                  :ARG0 (c9-1 / you)
                  :ARG1 (c9-6 / that)
                  :location (c9-7 / amr-unknown))
      :snt2 (c9-4 / report-01
                  :ARG1 (c9-5 / that)
                  :mod (c9-3 / even)
                  :polarity -))

# ::snt Ummm. that would be Prime Minister Tony Abbott not President....JS
# ::tokens ["Ummm", ".", "that", "would", "be", "Prime", "Minister", "Tony", "Abbott", "not", "President", "....", "JS"]
# ::lemmas ["ummm", ".", "that", "would", "be", "Prime", "Minister", "Tony", "Abbott", "not", "President", "....", "JS"]
(c10-5 / person
       :name (c10-4 / name
                    :op1 "Tony"
                    :op2 "Abbott")
       :ARG0-of (c10-0 / have-org-role-91
                       :ARG2 (c10-1 / minister
                                    :mod (c10-7 / prime)))
       :ARG0-of (c10-8 / have-org-role-91
                       :ARG2 (c10-3 / president)
                       :polarity -)
       :domain (c10-6 / that)
       :mod (c10-2 / umm
                   :mode expressive))

# ::snt :'(
# ::tokens [":'("]
# ::lemmas [":'("]
(c11-0 / amr-empty)

# ::snt *Prime Minister
# ::tokens ["*", "Prime", "Minister"]
# ::lemmas ["*", "Prime", "Minister"]
(c12-0 / have-org-role-91
       :ARG2 (c12-2 / minister
                    :mod (c12-1 / prime)))

# ::snt Source?
# ::tokens ["Source", "?"]
# ::lemmas ["source", "?"]
(c13-0 / source
       :polarity (c13-1 / amr-unknown))

# ::snt Have trains been cancelled in Sydney as a result
# ::tokens ["Have", "trains", "been", "cancelled", "in", "Sydney", "as", "a", "result"]
# ::lemmas ["have", "train", "be", "cancel", "in", "Sydney", "as", "a", "result"]
(c14-2 / cancel-01
       :ARG1 (c14-4 / train)
       :polarity (c14-5 / amr-unknown)
       :location (c14-1 / city
                        :name (c14-0 / name
                                     :op1 "Sydney"))
       :ARG2-of (c14-3 / result-01))

# ::snt The Opera House was evacuated as a normal precaution as per operational plan.
# ::tokens ["The", "Opera", "House", "was", "evacuated", "as", "a", "normal", "precaution", "as", "per", "operational", "plan", "."]
# ::lemmas ["The", "Opera", "House", "be", "evacuate", "as", "a", "normal", "precaution", "as", "per", "operational", "plan", "."]
(c15-2 / evacuate-01
       :ARG1 (c15-0 / building
                    :name (c15-3 / name
                                 :op1 "Opera"
                                 :op2 "House"))
       :purpose (c15-5 / precaution-02
                       :ARG1-of (c15-4 / normal-02)
                       :ARG1-of (c15-6 / cause-01
                                       :ARG0 (c15-7 / plan-01
                                                    :ARG1 (c15-1 / operate-01)))))
