# ::snt it happen in St. Louis tonight around
# ::tokens ["it", "happen", "in", "St.", "Louis", "tonight", "around"]
# ::lemmas ["it", "happen", "in", "St.", "Louis", "tonight", "around"]
(c1-0 / be-located-at-91
      :ARG1 (c1-1 / it)
      :ARG2 (c1-5 / city
                  :name (c1-2 / name
                              :op1 "St."
                              :op2 "Louis"))
      :time (c1-4 / date-entity
                  :dayperiod (c1-3 / night)
                  :mod (c1-6 / today))
      :mod (c1-7 / around))

# ::snt dogs? Is this Selma Alabama Revisited?
# ::tokens ["dogs", "?", "Is", "this", "Selma", "Alabama", "Revisited", "?"]
# ::lemmas ["dog", "?", "be", "this", "Selma", "Alabama", "Revisited", "?"]
(c2-0 / multi-sentence
      :snt1 (c2-5 / dogs
                  :polarity (c2-7 / amr-unknown))
      :snt2 (c2-4 / Revisite-01
                  :ARG1 (c2-1 / event
                              :name (c2-3 / name
                                          :op1 "Selma"
                                          :op2 "Alabama")
                              :mod (c2-6 / this))
                  :polarity (c2-2 / amr-unknown)))

# ::snt Cops starting to show their true colors now.
# ::tokens ["Cops", "starting", "to", "show", "their", "true", "colors", "now", "."]
# ::lemmas ["cop", "start", "to", "show", "their", "true", "color", "now", "."]
(c3-4 / start-01
      :ARG0 (c3-3 / cop)
      :ARG1 (c3-0 / show-01
                  :ARG0 c3-3
                  :ARG1 (c3-2 / color
                              :ARG1-of (c3-5 / true-01)
                              :poss c3-3))
      :time (c3-1 / now))

# ::snt They want their America back.
# ::tokens ["They", "want", "their", "America", "back", "."]
# ::lemmas ["they", "want", "their", "America", "back", "."]
(c4-0 / want-01
      :ARG0 (c4-4 / they)
      :ARG1 (c4-1 / back
                  :domain (c4-3 / country
                                :name (c4-2 / name
                                            :op1 "America")
                                :poss c4-4)))

# ::snt what's with the dogs!?
# ::tokens ["what", "'s", "with", "the", "dogs", "!", "?"]
# ::lemmas ["what", "be", "with", "the", "dog", "!", "?"]
(c5-0 / dog
      :polarity (c5-1 / amr-unknown))

# ::snt a year old unarmed boy was shot times by police and now the police are turning on mourners
# ::tokens ["a", "year", "old", "unarmed", "boy", "was", "shot", "times", "by", "police", "and", "now", "the", "police", "are", "turning", "on", "mourners"]
# ::lemmas ["a", "year", "old", "unarmed", "boy", "be", "shoot", "time", "by", "police", "and", "now", "the", "police", "be", "turn", "on", "mourner"]
(c6-11 / and
       :op1 (c6-8 / shoot-02
                  :ARG0 (c6-6 / police)
                  :ARG1 (c6-2 / boy
                              :ARG1-of (c6-3 / arm-01
                                             :polarity -)
                              :age (c6-9 / temporal-quantity
                                         :unit (c6-0 / year)
                                         :quant 1))
                  :frequency (c6-7 / times))
       :op2 (c6-5 / turn-on-13
                  :ARG0 c6-6
                  :ARG1 (c6-10 / person
                               :ARG0-of (c6-1 / mourn-01))
                  :time (c6-4 / now)))

# ::snt How many innocents are going to be shot tonight? The US is, if you will excuse the term, fucked.
# ::tokens ["How", "many", "innocents", "are", "going", "to", "be", "shot", "tonight", "?", "The", "US", "is", ",", "if", "you", "will", "excuse", "the", "term", ",", "fucked", "."]
# ::lemmas ["how", "many", "innocent", "be", "go", "to", "be", "shoot", "tonight", "?", "the", "US", "be", ",", "if", "you", "will", "excuse", "the", "term", ",", "fuck", "."]
(c7-2 / multi-sentence
      :snt1 (c7-11 / shoot-02
                   :ARG1 (c7-7 / person
                               :ARG1-of (c7-4 / innocent-01)
                               :quant (c7-13 / amr-unknown))
                   :time (c7-8 / date-entity
                               :dayperiod (c7-5 / night)
                               :mod (c7-12 / today)))
      :snt2 (c7-1 / fuck-01
                  :ARG1 (c7-9 / country
                              :name (c7-6 / name
                                          :op1 "US"))
                  :condition (c7-3 / excuse-02
                                   :ARG0 (c7-0 / you)
                                   :ARG2 (c7-10 / term))))

# ::snt police have brought dogs into neighborhood. Residents protest with hands in the air. Tension is growing...
# ::tokens ["police", "have", "brought", "dogs", "into", "neighborhood", ".", "Residents", "protest", "with", "hands", "in", "the", "air", ".", "Tension", "is", "growing", "..."]
# ::lemmas ["police", "have", "bring", "dog", "into", "neighborhood", ".", "resident", "protest", "with", "hand", "in", "the", "air", ".", "tension", "be", "grow", "..."]
(c8-1 / multi-sentence
      :snt1 (c8-3 / bring-01
                  :ARG0 (c8-5 / police)
                  :ARG1 (c8-6 / dog)
                  :ARG2 (c8-4 / neighborhood))
      :snt2 (c8-10 / protest-01
                   :ARG0 (c8-2 / person
                               :ARG0-of (c8-7 / reside-01))
                   :manner (c8-0 / hand
                                 :location (c8-11 / air)))
      :snt3 (c8-8 / grow-01
                  :ARG1 (c8-9 / tension)))

# ::snt Don't forget the hoses : police have brought dogs. Residents protest with hands in the air
# ::tokens ["Do", "n't", "forget", "the", "hoses", ":", "police", "have", "brought", "dogs", ".", "Residents", "protest", "with", "hands", "in", "the", "air"]
# ::lemmas ["do", "not", "forget", "the", "hose", ":", "police", "have", "bring", "dog", ".", "resident", "protest", "with", "hand", "in", "the", "air"]
(c9-3 / multi-sentence
      :snt1 (c9-2 / forget-01
                  :ARG0 (c9-1 / you)
                  :ARG1 (c9-0 / hose)
                  :polarity -
                  :mode imperative)
      :snt2 (c9-5 / bring-01
                  :ARG0 (c9-6 / police)
                  :ARG1 (c9-7 / dog))
      :snt3 (c9-10 / protest-01
                   :ARG0 (c9-4 / person
                               :ARG0-of (c9-8 / reside-01))
                   :manner (c9-11 / hand
                                  :location (c9-9 / air))))

# ::snt Jesus it's like banging ur head Against a brick wall Gee that hurts over&ampver again where is training defusing tensions
# ::tokens ["Jesus", "it", "'s", "like", "banging", "ur", "head", "Against", "a", "brick", "wall", "Gee", "that", "hurts", "over&ampver", "again", "where", "is", "training", "defusing", "tensions"]
# ::lemmas ["Jesus", "it", "be", "like", "bang", "ur", "head", "against", "a", "brick", "wall", "Gee", "that", "hurt", "over&ampver", "again", "where", "be", "train", "defuse", "tension"]
(c10-0 / multi-sentence
       :snt1 (c10-3 / say-01
                    :ARG0 (c10-13 / i)
                    :ARG1 (c10-10 / resemble-01
                                  :ARG1 (c10-15 / it)
                                  :ARG2 (c10-7 / bang-01
                                               :ARG0 (c10-16 / you
                                                             :part (c10-6 / head
                                                                          :ARG1-of c10-7))
                                               :ARG2 (c10-5 / against
                                                            :op1 (c10-11 / wall
                                                                         :consist-of (c10-14 / brick)))))
                    :ARG2 (c10-1 / person
                                 :name (c10-8 / name
                                              :op1 "Jesus")
                                 :mode expressive)
                    :mode expressive)
       :snt2 (c10-4 / hurt-01
                    :ARG1 c10-1
                    :name c10-8
                    :op1 "Gee")
       :mod (c10-12 / again)
       :mod (c10-17 / over)
       :mod c10-12
       :snt3 (c10-19 / be-located-at-91
                     :ARG1 (c10-20 / train-01
                                   :ARG1 (c10-2 / defuse-01
                                                :ARG1 (c10-18 / tension)))
                     :ARG2 (c10-9 / amr-unknown)))

# ::snt oh I'm sorry I thought I read
# ::tokens ["oh", "I", "'m", "sorry", "I", "thought", "I", "read"]
# ::lemmas ["oh", "i", "be", "sorry", "i", "think", "i", "read"]
(c11-3 / sorry-01
       :ARG1 (c11-1 / i)
       :ARG2 (c11-4 / think-01
                    :ARG0 c11-1
                    :ARG1 (c11-2 / read-01
                                 :ARG0 c11-1))
       :mod (c11-0 / oh
                   :mode expressive))

# ::snt ya know this is just again!!! This has happened way too many times in this country w police just skating away
# ::tokens ["ya", "know", "this", "is", "just", "again", "!", "!", "!", "This", "has", "happened", "way", "too", "many", "times", "in", "this", "country", "w", "police", "just", "skating", "away"]
# ::lemmas ["ya", "know", "this", "be", "just", "again", "!", "!", "!", "this", "have", "happen", "way", "too", "many", "time", "in", "this", "country", "w", "police", "just", "skate", "away"]
(c12-4 / multi-sentence
       :snt1 (c12-8 / know-01
                    :ARG0 (c12-1 / you)
                    :ARG1 (c12-17 / again
                                  :domain (c12-15 / this)
                                  :mod (c12-0 / just)))
       :snt2 (c12-5 / be-temporally-at-91
                    :ARG1 (c12-13 / this)
                    :ARG2 (c12-14 / skate-01
                                  :ARG0 (c12-10 / police)
                                  :direction (c12-7 / away)
                                  :mod (c12-16 / just))
                    :location (c12-12 / country
                                      :mod (c12-9 / this))
                    :ARG1-of (c12-2 / have-quant-91
                                    :ARG2 (c12-11 / many)
                                    :ARG3 (c12-6 / too
                                                 :mod (c12-3 / way)))))

# ::snt Dogs? Man up and handle what you started guys.
# ::tokens ["Dogs", "?", "Man", "up", "and", "handle", "what", "you", "started", "guys", "."]
# ::lemmas ["dog", "?", "man", "up", "and", "handle", "what", "you", "start", "guy", "."]
(c13-1 / multi-sentence
       :snt1 (c13-5 / dude
                    :polarity (c13-9 / amr-unknown))
       :snt2 (c13-3 / and
                    :op1 (c13-2 / up-03
                                :ARG1 (c13-4 / man)
                                :mode imperative)
                    :op2 (c13-0 / handle-01
                                :ARG0 c13-4
                                :ARG1 (c13-8 / thing
                                             :ARG1-of (c13-7 / start-01
                                                             :ARG0 (c13-6 / guy)))
                                :mode imperative)))

# ::snt Going back to the 's
# ::tokens ["Going", "back", "to", "the", "'s"]
# ::lemmas ["go", "back", "to", "the", "'"]
(c14-1 / go-back-19
       :ARG2 (c14-0 / date-entity
                    :decade 1950))

# ::snt I meant he was shot times
# ::tokens ["I", "meant", "he", "was", "shot", "times"]
# ::lemmas ["i", "mean", "he", "be", "shoot", "time"]
(c15-1 / mean-01
       :ARG0 (c15-2 / i)
       :ARG2 (c15-3 / shoot-01
                    :ARG1 (c15-0 / he)
                    :frequency (c15-4 / times)))

# ::snt B/C cops bringing dogs to a race protest ALWAYS goes well...Jesus Christ.
# ::tokens ["B", "/", "C", "cops", "bringing", "dogs", "to", "a", "race", "protest", "ALWAYS", "goes", "well", "...", "Jesus", "Christ", "."]
# ::lemmas ["B", "/", "c", "cop", "bring", "dog", "to", "a", "race", "protest", "always", "go", "well", "...", "Jesus", "Christ", "."]
(c16-1 / multi-sentence
       :snt1 (c16-7 / go-06
                    :ARG0 (c16-2 / bring-01
                                 :ARG0 (c16-6 / cop)
                                 :ARG1 (c16-5 / dog)
                                 :ARG2 (c16-4 / protest-01
                                              :ARG1 (c16-8 / race)))
                    :time (c16-10 / always)
                    :ARG1-of (c16-0 / well-09))
       :snt2 (c16-9 / person
                    :name (c16-3 / name
                                 :op1 "Jesus"
                                 :op2 "Christ")
                    :mode expressive))

# ::snt what city and state did this happen?
# ::tokens ["what", "city", "and", "state", "did", "this", "happen", "?"]
# ::lemmas ["what", "city", "and", "state", "do", "this", "happen", "?"]
(c17-0 / event
       :mod (c17-3 / this)
       :mod (c17-4 / amr-unknown
                   :mod (c17-1 / city)
                   :mod (c17-2 / state)))

# ::snt &gt;&gt; RT police have brought dogs into neighborhood. Residents protest with hands in the air. Tension is growing...
# ::tokens ["&", "gt;&gt", ";", "RT", "police", "have", "brought", "dogs", "into", "neighborhood", ".", "Residents", "protest", "with", "hands", "in", "the", "air", ".", "Tension", "is", "growing", "..."]
# ::lemmas ["&", "gt;&gt", ";", "RT", "police", "have", "bring", "dog", "into", "neighborhood", ".", "resident", "protest", "with", "hand", "in", "the", "air", ".", "tension", "be", "grow", "..."]
(c18-1 / multi-sentence
       :snt1 (c18-3 / bring-01
                    :ARG0 (c18-6 / police
                                 :ARG0-of (c18-4 / enforce-01
                                                 :polarity -))
                    :ARG1 (c18-7 / dog)
                    :ARG2 (c18-5 / neighborhood))
       :snt2 (c18-11 / protest-01
                     :ARG0 (c18-2 / person
                                  :ARG0-of (c18-8 / reside-01))
                     :manner (c18-0 / hand
                                    :location (c18-12 / air)))
       :snt3 (c18-9 / grow-01
                    :ARG1 (c18-10 / tension)))

# ::snt the dogs ?? Really. I wanna say I can't believe this , but I'd be lying.
# ::tokens ["the", "dogs", "?", "?", "Really", ".", "I", "wanna", "say", "I", "ca", "n't", "believe", "this", ",", "but", "I", "'d", "be", "lying", "."]
# ::lemmas ["the", "dog", "?", "?", "really", ".", "i", "wanna", "say", "i", "can", "not", "believe", "this", ",", "but", "i", "would", "be", "lie", "."]
(c19-2 / multi-sentence
       :snt1 (c19-6 / dog)
       :snt2 (c19-0 / want-01
                    :ARG0 (c19-4 / i)
                    :ARG1 (c19-9 / say-01
                                 :ARG0 c19-4
                                 :ARG1 (c19-5 / possible-01
                                              :ARG1 (c19-3 / believe-01
                                                           :ARG0 c19-4
                                                           :ARG1 (c19-10 / this))
                                              :polarity -))
                    :ARG1-of (c19-7 / contrast-01
                                    :ARG2 (c19-1 / lie-08
                                                 :ARG0 c19-4)))
       :snt1 (c19-8 / real-04))

# ::snt dogs ? Really ? How very sad
# ::tokens ["dogs", "?", "Really", "?", "How", "very", "sad"]
# ::lemmas ["dog", "?", "really", "?", "how", "very", "sad"]
(c20-0 / multi-sentence
       :snt1 (c20-4 / dogs
                    :polarity (c20-6 / amr-unknown)
                    :ARG1-of (c20-3 / real-04))
       :snt2 (c20-5 / sad-02
                    :degree (c20-2 / very
                                   :degree (c20-1 / so))))

# ::snt this is ridiculous
# ::tokens ["this", "is", "ridiculous"]
# ::lemmas ["this", "be", "ridiculous"]
(c21-0 / ridiculous-02
       :ARG1 (c21-1 / this))

# ::snt Police Dogs? What's next...are they going to bring out the fire hoses and Sheriff Bull Connor.
# ::tokens ["Police", "Dogs", "?", "What", "'s", "next", "...", "are", "they", "going", "to", "bring", "out", "the", "fire", "hoses", "and", "Sheriff", "Bull", "Connor", "."]
# ::lemmas ["police", "dog", "?", "what", "be", "next", "...", "be", "they", "go", "to", "bring", "out", "the", "fire", "hose", "and", "Sheriff", "Bull", "Connor", "."]
(c22-2 / multi-sentence
       :snt1 (c22-10 / dog
                     :mod (c22-9 / police))
       :snt2 (c22-14 / amr-unknown
                     :mod (c22-7 / next)
                     :mod (c22-4 / bring-01
                                 :ARG0 (c22-12 / they)
                                 :ARG1 (c22-6 / and
                                              :op1 (c22-0 / hose
                                                          :mod (c22-1 / fire))
                                              :op2 (c22-13 / person
                                                           :name (c22-8 / name
                                                                        :op1 "Bull"
                                                                        :op2 "Connor")
                                                           :ARG0-of (c22-3 / have-org-role-91
                                                                           :ARG2 (c22-11 / sheriff))))
                                 :ARG2 (c22-5 / out))))

# ::snt I see on twitter cops killing black people every week. What happened? Or was it always like this?
# ::tokens ["I", "see", "on", "twitter", "cops", "killing", "black", "people", "every", "week", ".", "What", "happened", "?", "Or", "was", "it", "always", "like", "this", "?"]
# ::lemmas ["i", "see", "on", "twitter", "cop", "kill", "black", "people", "every", "week", ".", "what", "happen", "?", "or", "be", "it", "always", "like", "this", "?"]
(c23-0 / multi-sentence
       :snt1 (c23-3 / see-01
                    :ARG0 (c23-12 / i)
                    :ARG1 (c23-14 / kill-01
                                  :ARG0 (c23-16 / cop)
                                  :ARG1 (c23-2 / person
                                               :ARG1-of (c23-6 / black-05))
                                  :frequency (c23-9 / rate-entity-91
                                                    :ARG3 (c23-18 / temporal-quantity
                                                                  :unit (c23-10 / week)
                                                                  :quant 1)))
                    :medium (c23-4 / publication
                                   :name (c23-8 / name
                                                :op1 "Twitter")))
       :snt2 (c23-15 / or
                     :op1 (c23-7 / event
                                 :mod (c23-5 / amr-unknown))
                     :op2 (c23-1 / resemble-01
                                 :ARG1 (c23-13 / it)
                                 :ARG2 (c23-17 / this)
                                 :time (c23-11 / always))))

# ::snt wow the /60's all over again
# ::tokens ["wow", "the", "/60", "'s", "all", "over", "again"]
# ::lemmas ["wow", "the", "/60", "be", "all", "over", "again"]
(c24-1 / date-entity
       :mod (c24-0 / wow
                   :mode expressive)
       :mod (c24-3 / again
                   :mod (c24-2 / all-over))
       :decade 1960)

# ::snt bring out three pitbulls rip that k9 to k pieces
# ::tokens ["bring", "out", "three", "pitbulls", "rip", "that", "k9", "to", "k", "pieces"]
# ::lemmas ["bring", "out", "three", "pitbull", "rip", "that", "k9", "to", "k", "piece"]
(c25-1 / bring-01
       :ARG0 (c25-0 / you)
       :ARG1 (c25-4 / pitbull
                    :ARG0-of (c25-5 / rip-01
                                    :ARG1 (c25-6 / thing
                                                 :name (c25-3 / name
                                                              :op1 "K9"))
                                    :ARG2 (c25-7 / piece))
                    :quant 3)
       :ARG2 (c25-2 / out)
       :mode imperative)

# ::snt where is this and what is the problem? Disturbing.
# ::tokens ["where", "is", "this", "and", "what", "is", "the", "problem", "?", "Disturbing", "."]
# ::lemmas ["where", "be", "this", "and", "what", "be", "the", "problem", "?", "disturb", "."]
(c26-0 / multi-sentence
       :snt1 (c26-7 / and
                    :op1 (c26-1 / be-located-at-91
                                :ARG1 (c26-4 / problem
                                             :domain (c26-6 / this))
                                :ARG2 (c26-2 / amr-unknown)
                                :op2-of c26-7)
                    :ARG1 c26-4
                    :ARG2 (c26-3 / amr-unknown))
       :snt2 (c26-5 / disturb-01))

# ::snt I guess they went to the "Bull Conner" school of policing.
# ::tokens ["I", "guess", "they", "went", "to", "the", "\"", "Bull", "Conner", "\"", "school", "of", "policing", "."]
# ::lemmas ["i", "guess", "they", "go", "to", "the", "\"", "Bull", "Conner", "\"", "school", "of", "police", "."]
(c27-4 / guess-01
       :ARG0 (c27-0 / i)
       :ARG1 (c27-3 / go-01
                    :ARG1 (c27-6 / they)
                    :ARG4 (c27-5 / school
                                 :name (c27-1 / name
                                              :op1 "Bull"
                                              :op2 "Conner")
                                 :topic (c27-2 / police-01))))

# ::snt wow so sorry to hear this i was out and hadn't heard this one yet! So sad, his poor family.
# ::tokens ["wow", "so", "sorry", "to", "hear", "this", "i", "was", "out", "and", "had", "n't", "heard", "this", "one", "yet", "!", "So", "sad", ",", "his", "poor", "family", "."]
# ::lemmas ["wow", "so", "sorry", "to", "hear", "this", "i", "be", "out", "and", "have", "not", "hear", "this", "one", "yet", "!", "so", "sad", ",", "his", "poor", "family", "."]
(c28-4 / multi-sentence
       :snt1 (c28-14 / sorry-01
                     :ARG1 (c28-11 / i)
                     :ARG2 (c28-0 / hear-01
                                  :ARG0 c28-11
                                  :ARG1 (c28-16 / and
                                                :op1 (c28-8 / out-06
                                                            :ARG1 c28-11)
                                                :op2 (c28-3 / hear-01
                                                            :ARG0 c28-11
                                                            :ARG1 (c28-5 / one
                                                                         :mod (c28-15 / this))
                                                            :time (c28-1 / yet)
                                                            :polarity -)))
                     :degree (c28-10 / so)
                     :mod (c28-2 / wow
                                 :mode expressive))
       :snt2 (c28-6 / sad-02
                    :ARG0 (c28-7 / family
                                 :mod (c28-13 / poor)
                                 :poss (c28-12 / he))
                    :degree (c28-9 / so)))

# ::snt Looks like Selma all over again.
# ::tokens ["Looks", "like", "Selma", "all", "over", "again", "."]
# ::lemmas ["look", "like", "Selma", "all", "over", "again", "."]
(c29-0 / look-02
       :ARG1 (c29-3 / person
                    :name (c29-2 / name
                                 :op1 "Selma"))
       :mod (c29-4 / again
                   :mod (c29-1 / all-over)))

# ::snt he was
# ::tokens ["he", "was"]
# ::lemmas ["he", "be"]
(c30-0 / he)

# ::snt quit boosting
# ::tokens ["quit", "boosting"]
# ::lemmas ["quit", "boost"]
(c31-0 / quit-01
       :ARG1 (c31-1 / boost-01))

# ::snt clearly he shouldn't have been shot at all!
# ::tokens ["clearly", "he", "should", "n't", "have", "been", "shot", "at", "all", "!"]
# ::lemmas ["clearly", "he", "should", "not", "have", "be", "shoot", "at", "all", "!"]
(c32-1 / recommend-01
       :ARG1 (c32-3 / shoot-01
                    :ARG2 (c32-0 / he)
                    :degree (c32-4 / at-all))
       :ARG1-of (c32-2 / clear-06)
       :polarity -)

# ::snt this shit gives german shepherds a bad name
# ::tokens ["this", "shit", "gives", "german", "shepherds", "a", "bad", "name"]
# ::lemmas ["this", "shit", "give", "german", "shepherd", "a", "bad", "name"]
(c33-2 / name-01
       :ARG0 (c33-6 / shit
                    :mod (c33-7 / this))
       :ARG1 (c33-4 / person
                    :ARG0-of (c33-1 / shepherd-01
                                    :ARG1 (c33-5 / country
                                                 :name (c33-3 / name
                                                              :ARG2-of c33-2
                                                              :op1 "Germany"))))
       :ARG1-of (c33-0 / bad-07))

# ::snt This is beyond pathetic. Dogs? Really? They just don't get it, and worse, they don't even care.
# ::tokens ["This", "is", "beyond", "pathetic", ".", "Dogs", "?", "Really", "?", "They", "just", "do", "n't", "get", "it", ",", "and", "worse", ",", "they", "do", "n't", "even", "care", "."]
# ::lemmas ["this", "be", "beyond", "pathetic", ".", "dog", "?", "really", "?", "they", "just", "do", "not", "get", "it", ",", "and", "bad", ",", "they", "do", "not", "even", "care", "."]
(c34-2 / multi-sentence
       :snt1 (c34-3 / beyond
                    :op1 (c34-7 / pathetic)
                    :domain (c34-15 / this))
       :snt2 (c34-8 / dog
                    :polarity (c34-16 / amr-unknown)
                    :ARG1-of (c34-9 / real-04))
       :snt3 (c34-5 / and
                    :op1 (c34-10 / get-01
                                 :ARG0 (c34-12 / they)
                                 :ARG1 (c34-6 / it)
                                 :mod (c34-0 / just)
                                 :polarity -)
                    :op2 (c34-1 / have-degree-91
                                :ARG1 (c34-11 / care-01
                                              :ARG0 c34-12
                                              :mod (c34-4 / even)
                                              :polarity -)
                                :ARG2 (c34-13 / bad-07
                                              :ARG1 c34-11)
                                :ARG3 (c34-14 / more))))
