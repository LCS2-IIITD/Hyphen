# ::snt what you advocate for Brown means you should face execution too over some minor transgression
# ::tokens ["what", "you", "advocate", "for", "Brown", "means", "you", "should", "face", "execution", "too", "over", "some", "minor", "transgression"]
# ::lemmas ["what", "you", "advocate", "for", "Brown", "mean", "you", "should", "face", "execution", "too", "over", "some", "minor", "transgression"]
(c1-2 / mean-01
      :ARG1 (c1-12 / thing
                   :ARG1-of (c1-13 / advocate-01
                                   :ARG0 (c1-0 / you)
                                   :ARG2 (c1-6 / person
                                               :name (c1-4 / name
                                                           :op1 "Brown"))))
      :ARG2 (c1-7 / recommend-01
                  :ARG1 (c1-1 / face-01
                              :ARG0 c1-0
                              :ARG1 (c1-3 / execute-01
                                          :ARG1 c1-0
                                          :ARG1-of (c1-8 / cause-01
                                                         :ARG0 (c1-10 / transgress-01
                                                                      :ARG0 c1-0
                                                                      :ARG1-of (c1-9 / minor-01)
                                                                      :mod (c1-11 / some))))
                              :mod (c1-5 / too))))

# ::snt . Honestly, if you're going to be a douchenugget, at least be an original douchenugget. You already tweeted that.
# ::tokens [".", "Honestly", ",", "if", "you", "'re", "going", "to", "be", "a", "douchenugget", ",", "at", "least", "be", "an", "original", "douchenugget", ".", "You", "already", "tweeted", "that", "."]
# ::lemmas [".", "honestly", ",", "if", "you", "be", "go", "to", "be", "a", "douchenugget", ",", "at", "least", "be", "an", "original", "douchenugget", ".", "you", "already", "tweet", "that", "."]
(c2-3 / multi-sentence
      :snt1 (c2-5 / douchenugget
                  :mod (c2-4 / original)
                  :domain (c2-1 / you)
                  :condition (c2-2 / douchenugget
                                   :domain c2-1)
                  :ARG1-of (c2-0 / honest-01))
      :snt2 (c2-8 / tweet-01
                  :ARG0 (c2-6 / you)
                  :ARG1 (c2-7 / that)
                  :time (c2-9 / already)))

# ::snt When all the facts come out you won't be so smug.
# ::tokens ["When", "all", "the", "facts", "come", "out", "you", "wo", "n't", "be", "so", "smug", "."]
# ::lemmas ["when", "all", "the", "fact", "come", "out", "you", "will", "not", "be", "so", "smug", "."]
(c3-4 / smug
      :degree (c3-2 / so)
      :domain (c3-0 / you)
      :time (c3-3 / come-out-09
                  :ARG1 (c3-1 / fact
                              :mod (c3-5 / all)))
      :polarity -)

# ::snt . So you're saying you're ok with no due process, and shoplifting is a capital crime?
# ::tokens [".", "So", "you", "'re", "saying", "you", "'re", "ok", "with", "no", "due", "process", ",", "and", "shoplifting", "is", "a", "capital", "crime", "?"]
# ::lemmas [".", "so", "you", "be", "say", "you", "be", "ok", "with", "no", "due", "process", ",", "and", "shoplifting", "be", "a", "capital", "crime", "?"]
(c4-4 / infer-01
      :polarity (c4-9 / amr-unknown)
      :ARG1 (c4-8 / say-01
                  :ARG0 (c4-0 / you)
                  :ARG1 (c4-3 / and
                              :op1 (c4-1 / okay-01
                                         :ARG0 c4-0
                                         :ARG1 (c4-5 / due-process
                                                     :polarity -))
                              :op2 (c4-6 / crime-02
                                         :ARG1 (c4-2 / shoplift-01)
                                         :mod (c4-7 / capital)))))

# ::snt . But Mike Brown DIDN'T. Are you ok with his not getting due process?And I'm "naive." Ok.
# ::tokens [".", "But", "Mike", "Brown", "DIDN'T.", "Are", "you", "ok", "with", "his", "not", "getting", "due", "process?And", "I", "'m", "\"", "naive", ".", "\"", "Ok", "."]
# ::lemmas [".", "but", "Mike", "Brown", "didn't.", "be", "you", "ok", "with", "his", "not", "get", "due", "process?and", "i", "be", "\"", "naive", ".", "\"", "ok", "."]
(c5-4 / multi-sentence
      :snt1 (c5-11 / contrast-01
                   :ARG2 (c5-10 / do-02
                                :ARG0 (c5-9 / person
                                            :name (c5-8 / name
                                                        :op1 "Mike"
                                                        :op2 "Brown"))
                                :polarity -))
      :snt2 (c5-14 / and
                   :op2 (c5-5 / okay-01
                              :ARG0 (c5-1 / you)
                              :ARG1 (c5-12 / get-01
                                           :ARG0 (c5-0 / he)
                                           :ARG1 (c5-2 / due-process)
                                           :polarity -)
                              :polarity (c5-6 / amr-unknown))
                   :op3 (c5-13 / realize-01
                               :ARG0 (c5-7 / i)
                               :polarity c5-6))
      :snt3 (c5-3 / okay-01))

# ::snt At the end of the day, shooting an unarmed man who is surrendering is a crime &amp; the person who we know did it isn't in custody.
# ::tokens ["At", "the", "end", "of", "the", "day", ",", "shooting", "an", "unarmed", "man", "who", "is", "surrendering", "is", "a", "crime", "&", "amp", ";", "the", "person", "who", "we", "know", "did", "it", "is", "n't", "in", "custody", "."]
# ::lemmas ["at", "the", "end", "of", "the", "day", ",", "shoot", "an", "unarmed", "man", "who", "be", "surrender", "be", "a", "crime", "&", "amp", ";", "the", "person", "who", "we", "know", "do", "it", "be", "not", "in", "custody", "."]
(c6-13 / and
       :op1 (c6-9 / crime-02
                  :ARG1 (c6-11 / shoot-02
                               :ARG1 (c6-2 / man
                                           :ARG1-of (c6-6 / arm-01
                                                          :polarity -)
                                           :ARG0-of (c6-4 / surrender-01)))
                  :time (c6-5 / end-01
                              :ARG1 (c6-8 / day)))
       :op2 (c6-3 / be-located-at-91
                  :ARG1 (c6-7 / person
                              :ARG0-of (c6-1 / do-02
                                             :ARG1 c6-11
                                             :ARG1-of (c6-12 / know-01
                                                             :ARG0 (c6-0 / we))))
                  :ARG2 (c6-10 / custody)
                  :polarity -))

# ::snt Yes
# ::tokens ["Yes"]
# ::lemmas ["yes"]
(c7-0 / yes)

# ::snt "they" just filed a million dollar lawsuit in Mo. Didn't see that coming.
# ::tokens ["\"", "they", "\"", "just", "filed", "a", "million", "dollar", "lawsuit", "in", "Mo.", "Did", "n't", "see", "that", "coming", "."]
# ::lemmas ["\"", "they", "\"", "just", "file", "a", "million", "dollar", "lawsuit", "in", "Mo.", "Did", "not", "see", "that", "come", "."]
(c8-2 / multi-sentence
      :snt1 (c8-1 / file-01
                  :ARG0 (c8-12 / they)
                  :ARG1 (c8-11 / sue-02
                               :ARG0 c8-12
                               :ARG2 (c8-7 / monetary-quantity
                                           :unit (c8-8 / dollar)
                                           :quant 1000000))
                  :ARG2 (c8-4 / state
                              :name (c8-6 / name
                                          :op1 "Mo"))
                  :time (c8-0 / just))
      :snt2 (c8-3 / see-01
                  :ARG0 (c8-5 / i)
                  :ARG1 (c8-9 / come-03
                              :ARG1 (c8-10 / that))
                  :polarity -))

# ::snt Note that STILL hasn't answered my question about due process.
# ::tokens ["Note", "that", "STILL", "has", "n't", "answered", "my", "question", "about", "due", "process", "."]
# ::lemmas ["note", "that", "STILL", "have", "not", "answer", "my", "question", "about", "due", "process", "."]
(c9-3 / note-01
      :ARG0 (c9-0 / you)
      :ARG1 (c9-6 / answer-01
                  :ARG1 (c9-1 / question-01
                              :ARG0 (c9-2 / i)
                              :ARG1 (c9-4 / due-process))
                  :mod (c9-5 / still)
                  :polarity -)
      :mode imperative)

# ::snt that is so wrong.
# ::tokens ["that", "is", "so", "wrong", "."]
# ::lemmas ["that", "be", "so", "wrong", "."]
(c10-1 / wrong-04
       :ARG1 (c10-2 / that)
       :degree (c10-0 / so))

# ::snt Point is doesn't matter if was Al Capone (was NOT). Didn't deserve be extrajudicially executed in the street
# ::tokens ["Point", "is", "does", "n't", "matter", "if", "was", "Al", "Capone", "(", "was", "NOT", ")", ".", "Did", "n't", "deserve", "be", "extrajudicially", "executed", "in", "the", "street"]
# ::lemmas ["point", "be", "do", "not", "matter", "if", "be", "Al", "Capone", "(", "be", "not", ")", ".", "do", "not", "deserve", "be", "extrajudicially", "execute", "in", "the", "street"]
(c11-0 / multi-sentence
       :snt1 (c11-5 / matter-01
                    :ARG1 (c11-6 / person
                                 :name (c11-4 / name
                                              :op1 "Al"
                                              :op2 "Capone")
                                 :domain (c11-9 / person
                                                :polarity -))
                    :polarity -)
       :snt2 (c11-7 / deserve-01
                    :ARG0 (c11-1 / person)
                    :ARG1 (c11-3 / execute-01
                                 :ARG1 c11-1
                                 :manner (c11-2 / extrajudic)
                                 :location (c11-8 / street))
                    :polarity -))

# ::snt Now you're just repeating yourself. RT : me Funeral for big mike. Do you think they will put the box of cigars in his coffin?
# ::tokens ["Now", "you", "'re", "just", "repeating", "yourself", ".", "RT", ":", "me", "Funeral", "for", "big", "mike", ".", "Do", "you", "think", "they", "will", "put", "the", "box", "of", "cigars", "in", "his", "coffin", "?"]
# ::lemmas ["now", "you", "be", "just", "repeat", "yourself", ".", "RT", ":", "i", "Funeral", "for", "big", "mike", ".", "do", "you", "think", "they", "will", "put", "the", "box", "of", "cigar", "in", "his", "coffin", "?"]
(c12-1 / multi-sentence
       :snt1 (c12-12 / repeat-01
                     :ARG0 (c12-16 / you
                                   :ARG1-of c12-12)
                     :mod (c12-0 / just)
                     :time (c12-10 / now))
       :snt2 (c12-4 / say-01
                    :ARG0 (c12-2 / publication
                                 :name (c12-17 / name
                                               :op1 "RT"))
                    :ARG1 (c12-8 / funeral
                                 :beneficiary (c12-11 / mike
                                                      :mod (c12-9 / big))
                                 :beneficiary (c12-13 / i)))
       :snt3 (c12-20 / think-01
                     :ARG0 (c12-19 / you)
                     :ARG1 (c12-5 / put-01
                                  :ARG0 (c12-15 / they)
                                  :ARG1 (c12-14 / box
                                                :consist-of (c12-18 / cigar))
                                  :ARG2 (c12-3 / coffin
                                               :poss (c12-7 / he)))
                     :polarity (c12-6 / amr-unknown)))

# ::snt . Oh, and you still haven't told me who "they" are. Enlighten me.
# ::tokens [".", "Oh", ",", "and", "you", "still", "have", "n't", "told", "me", "who", "\"", "they", "\"", "are", ".", "Enlighten", "me", "."]
# ::lemmas [".", "oh", ",", "and", "you", "still", "have", "not", "tell", "i", "who", "\"", "they", "\"", "be", ".", "enlighten", "i", "."]
(c13-1 / multi-sentence
       :snt1 (c13-9 / and
                    :op1 (c13-2 / oh)
                    :op2 (c13-8 / tell-01
                                :ARG0 (c13-0 / you)
                                :ARG1 (c13-5 / person
                                             :domain (c13-6 / they))
                                :ARG2 (c13-4 / i)
                                :mod (c13-7 / still)
                                :polarity -))
       :snt2 (c13-3 / enlighten-01
                    :ARG0 c13-0
                    :ARG1 c13-4
                    :mode imperative))

# ::snt this is no joking matter and post is in very bad taste
# ::tokens ["this", "is", "no", "joking", "matter", "and", "post", "is", "in", "very", "bad", "taste"]
# ::lemmas ["this", "be", "no", "joke", "matter", "and", "post", "be", "in", "very", "bad", "taste"]
(c14-7 / and
       :op1 (c14-1 / matter
                   :topic (c14-0 / joke-01)
                   :domain (c14-6 / this)
                   :polarity -)
       :op2 (c14-5 / taste
                   :ARG1-of (c14-2 / bad-07
                                   :degree (c14-3 / very))
                   :domain (c14-4 / post-01)))

# ::snt . That still leaves the OTHER eyewitnesses, and you still haven't answered my question. Who is "they"?
# ::tokens [".", "That", "still", "leaves", "the", "OTHER", "eyewitnesses", ",", "and", "you", "still", "have", "n't", "answered", "my", "question", ".", "Who", "is", "\"", "they", "\"", "?"]
# ::lemmas [".", "that", "still", "leave", "the", "other", "eyewitness", ",", "and", "you", "still", "have", "not", "answer", "my", "question", ".", "who", "be", "\"", "they", "\"", "?"]
(c15-2 / multi-sentence
       :snt1 (c15-13 / and
                     :op1 (c15-1 / leave-13
                                 :ARG0 (c15-12 / that)
                                 :ARG1 (c15-4 / eyewitness
                                              :mod (c15-3 / other))
                                 :mod (c15-11 / still))
                     :op2 (c15-7 / answer-01
                                 :ARG0 (c15-0 / you)
                                 :ARG1 (c15-5 / question-01
                                              :ARG0 (c15-8 / i))
                                 :mod (c15-6 / still)
                                 :polarity -))
       :snt2 (c15-9 / amr-unknown
                    :domain (c15-10 / they)))

# ::snt I am so curious as to what facts could possibly justify shooting an unarmed kid who was surrendering.
# ::tokens ["I", "am", "so", "curious", "as", "to", "what", "facts", "could", "possibly", "justify", "shooting", "an", "unarmed", "kid", "who", "was", "surrendering", "."]
# ::lemmas ["i", "be", "so", "curious", "as", "to", "what", "fact", "could", "possibly", "justify", "shoot", "an", "unarmed", "kid", "who", "be", "surrender", "."]
(c16-6 / curious-01
       :ARG0 (c16-1 / fact
                    :ARG2-of (c16-0 / justify-01
                                    :ARG1 (c16-7 / shoot-02
                                                 :ARG1 (c16-8 / kid
                                                              :ARG1-of (c16-9 / arm-01
                                                                              :polarity -)
                                                              :ARG0-of (c16-3 / surrender-01)))
                                    :ARG1-of (c16-5 / possible-01)))
       :ARG1 (c16-4 / i)
       :degree (c16-2 / so))

# ::snt the ignorance is real.
# ::tokens ["the", "ignorance", "is", "real", "."]
# ::lemmas ["the", "ignorance", "be", "real", "."]
(c17-0 / real-04
       :ARG1 (c17-1 / ignorance))

# ::snt . ...who is "they"?
# ::tokens [".", "...", "who", "is", "\"", "they", "\"", "?"]
# ::lemmas [".", "...", "who", "be", "\"", "they", "\"", "?"]
(c18-0 / they
       :domain (c18-1 / amr-unknown))

# ::snt your lack of experience makes your statement true.
# ::tokens ["your", "lack", "of", "experience", "makes", "your", "statement", "true", "."]
# ::lemmas ["your", "lack", "of", "experience", "make", "your", "statement", "true", "."]
(c19-2 / make-02
       :ARG0 (c19-1 / lack-01
                    :ARG0 (c19-0 / you)
                    :ARG1 (c19-3 / experience-01
                                 :ARG0 c19-0))
       :ARG1 (c19-5 / true-01
                    :ARG1 (c19-4 / state-01
                                 :ARG0 c19-0)))

# ::snt lol, do you believe everything you hear. rock on
# ::tokens ["lol", ",", "do", "you", "believe", "everything", "you", "hear", ".", "rock", "on"]
# ::lemmas ["lol", ",", "do", "you", "believe", "everything", "you", "hear", ".", "rock", "on"]
(c20-3 / multi-sentence
       :snt1 (c20-4 / believe-01
                    :polarity (c20-8 / amr-unknown)
                    :ARG0 (c20-1 / you)
                    :ARG1 (c20-5 / everything
                                 :ARG1-of (c20-0 / hear-01
                                                 :ARG0 c20-1))
                    :ARG2-of (c20-2 / laugh-01
                                    :manner (c20-7 / loud)
                                    :mode expressive))
       :snt2 (c20-6 / rock-on-02
                    :ARG0 (c20-9 / you)
                    :mode imperative))

# ::snt If minor transgression is strong arm robbery, assaulting a police officer, and bum rushing the same cop. Hell yes.
# ::tokens ["If", "minor", "transgression", "is", "strong", "arm", "robbery", ",", "assaulting", "a", "police", "officer", ",", "and", "bum", "rushing", "the", "same", "cop", ".", "Hell", "yes", "."]
# ::lemmas ["if", "minor", "transgression", "be", "strong", "arm", "robbery", ",", "assault", "a", "police", "officer", ",", "and", "bum", "rush", "the", "same", "cop", ".", "hell", "yes", "."]
(c21-3 / multi-sentence
       :snt1 (c21-0 / have-condition-91
                    :ARG2 (c21-15 / transgress-01
                                  :ARG1-of (c21-10 / minor-01)
                                  :mod (c21-16 / arm
                                               :ARG1-of (c21-14 / strong-02))
                                  :example (c21-7 / and
                                                  :op1 (c21-11 / rob-01
                                                               :ARG1 (c21-5 / officer
                                                                            :mod (c21-12 / police)))
                                                  :op2 (c21-9 / assault-01
                                                              :ARG1 c21-5)
                                                  :op3 (c21-8 / rush-01
                                                              :ARG1 (c21-13 / cop
                                                                            :ARG1-of (c21-6 / same-01))
                                                              :mod (c21-4 / bum)))))
       :snt2 (c21-1 / yes
                    :mod (c21-2 / hell)))

# ::snt sorry Mr Expert
# ::tokens ["sorry", "Mr", "Expert"]
# ::lemmas ["sorry", "Mr", "Expert"]
(c22-0 / say-01
       :ARG1 (c22-1 / sorry-01)
       :ARG2 (c22-2 / person
                    :name (c22-3 / name
                                 :op1 "Mr"
                                 :op2 "Expert")))

# ::snt Here ya go, kiddo.
# ::tokens ["Here", "ya", "go", ",", "kiddo", "."]
# ::lemmas ["here", "ya", "go", ",", "kiddo", "."]
(c23-4 / say-01
       :ARG0 (c23-2 / i)
       :ARG1 (c23-3 / go-01
                    :ARG1 (c23-1 / you)
                    :ARG4 (c23-0 / here))
       :ARG2 (c23-5 / kid))

# ::snt . But eyewitnesses and an autopsy aren't credible? lololol go away.
# ::tokens [".", "But", "eyewitnesses", "and", "an", "autopsy", "are", "n't", "credible", "?", "lololol", "go", "away", "."]
# ::lemmas [".", "but", "eyewitness", "and", "an", "autopsy", "be", "not", "credible", "?", "lololol", "go", "away", "."]
(c24-3 / multi-sentence
       :snt1 (c24-0 / have-concession-91
                    :ARG1 (c24-8 / credible
                                 :domain (c24-12 / and
                                                 :op1 (c24-5 / eyewitness)
                                                 :op2 (c24-6 / autopsy-01))
                                 :polarity (c24-7 / amr-unknown)
                                 :polarity -)
                    :polarity (c24-11 / amr-unknown))
       :snt2 (c24-9 / go-02
                    :ARG0 (c24-1 / you)
                    :ARG4 (c24-4 / away)
                    :mod (c24-2 / laugh-01
                                :ARG0 c24-1
                                :manner (c24-10 / loud))
                    :mode imperative))

# ::snt unless he was charging at the officer, after he punched the officer in the head and tried to get his gun.
# ::tokens ["unless", "he", "was", "charging", "at", "the", "officer", ",", "after", "he", "punched", "the", "officer", "in", "the", "head", "and", "tried", "to", "get", "his", "gun", "."]
# ::lemmas ["unless", "he", "be", "charge", "at", "the", "officer", ",", "after", "he", "punch", "the", "officer", "in", "the", "head", "and", "try", "to", "get", "his", "gun", "."]
(c25-0 / have-condition-91
       :ARG2 (c25-6 / charge-02
                    :ARG0 (c25-12 / he
                                  :part (c25-3 / head))
                    :direction (c25-4 / person
                                      :ARG0-of (c25-8 / have-org-role-91
                                                      :ARG2 (c25-1 / officer)))
                    :time (c25-9 / after
                                 :op1 (c25-2 / and
                                             :op1 (c25-11 / punch-01
                                                          :ARG0 c25-12
                                                          :ARG1 c25-3)
                                             :op2 (c25-10 / try-01
                                                          :ARG0 c25-12
                                                          :ARG1 (c25-7 / get-01
                                                                       :ARG0 c25-12
                                                                       :ARG1 (c25-5 / gun
                                                                                    :poss c25-4)))))
                    :polarity -))

# ::snt And you have all this experience shooting unarmed kids, eh?
# ::tokens ["And", "you", "have", "all", "this", "experience", "shooting", "unarmed", "kids", ",", "eh", "?"]
# ::lemmas ["and", "you", "have", "all", "this", "experience", "shoot", "unarmed", "kid", ",", "eh", "?"]
(c26-9 / and
       :op2 (c26-0 / have-03
                   :ARG0 (c26-1 / you)
                   :ARG1 (c26-2 / experience-01
                                :ARG0 c26-1
                                :ARG1 (c26-6 / shoot-02
                                             :ARG0 c26-1
                                             :ARG1 (c26-8 / kid
                                                          :ARG1-of (c26-3 / arm-01
                                                                          :polarity -)))
                                :mod (c26-7 / this)
                                :mod (c26-4 / all))
                   :ARG1-of (c26-5 / request-confirmation-91)))

# ::snt I'll go one further. Shooting an unarmed person period is a crime - surrendering or not - when not a matter of life/death.
# ::tokens ["I", "'ll", "go", "one", "further", ".", "Shooting", "an", "unarmed", "person", "period", "is", "a", "crime", "-", "surrendering", "or", "not", "-", "when", "not", "a", "matter", "of", "life", "/", "death", "."]
# ::lemmas ["i", "'ll", "go", "one", "far", ".", "shoot", "an", "unarmed", "person", "period", "be", "a", "crime", "-", "surrender", "or", "not", "-", "when", "not", "a", "matter", "of", "life", "/", "death", "."]
(c27-1 / multi-sentence
       :snt1 (c27-7 / go-01
                    :ARG1 (c27-3 / i)
                    :ARG2 (c27-0 / further
                                 :quant 1))
       :snt2 (c27-6 / crime-02
                    :ARG1 (c27-9 / shoot-02
                                 :ARG1 (c27-4 / person
                                              :ARG1-of (c27-11 / arm-01
                                                               :polarity -))
                                 :duration (c27-10 / period))
                    :condition (c27-5 / matter
                                      :op1 (c27-2 / live-01)
                                      :op2 (c27-8 / die-01)
                                      :polarity -)))

# ::snt exactly
# ::tokens ["exactly"]
# ::lemmas ["exactly"]
(c28-0 / exact)

# ::snt Oh, the irony.
# ::tokens ["Oh", ",", "the", "irony", "."]
# ::lemmas ["oh", ",", "the", "irony", "."]
(c29-1 / irony
       :mod (c29-0 / oh
                   :mode expressive))

# ::snt My column: ARREST DARREN WILSON ARREST HIM NOW!!:
# ::tokens ["My", "column", ":", "ARREST", "DARREN", "WILSON", "ARREST", "HIM", "NOW", "!", "!", ":"]
# ::lemmas ["my", "column", ":", "ARREST", "DARREN", "WILSON", "arrest", "him", "now", "!", "!", ":"]
(c30-1 / multi-sentence
       :snt1 (c30-6 / column
                    :poss (c30-2 / i))
       :snt2 (c30-7 / arrest-01
                    :ARG0 (c30-5 / person
                                 :name (c30-3 / name
                                              :op1 "Aaron"
                                              :op2 "DarrEN"
                                              :op3 "Wilson"))
                    :ARG1 (c30-0 / he)
                    :time (c30-4 / now)
                    :mode expressive))

# ::snt :His partner in the robbery has some credibility issues. Why hasn't the officer been charged? Could it be that he is innocent.
# ::tokens [":", "His", "partner", "in", "the", "robbery", "has", "some", "credibility", "issues", ".", "Why", "has", "n't", "the", "officer", "been", "charged", "?", "Could", "it", "be", "that", "he", "is", "innocent", "."]
# ::lemmas [":", "his", "partner", "in", "the", "robbery", "have", "some", "credibility", "issue", ".", "why", "have", "not", "the", "officer", "be", "charge", "?", "could", "it", "be", "that", "he", "be", "innocent", "."]
(c31-2 / multi-sentence
       :snt1 (c31-5 / issue-02
                    :ARG0 (c31-8 / credibility)
                    :ARG1 (c31-6 / person
                                 :ARG0-of (c31-13 / partner-01
                                                  :ARG1 (c31-0 / he)
                                                  :ARG2 (c31-7 / rob-01
                                                               :ARG0 c31-6)))
                    :mod (c31-12 / some))
       :snt2 (c31-14 / amr-unknown
                     :ARG0-of (c31-9 / cause-01
                                     :ARG1 (c31-11 / charge-05
                                                   :ARG1 (c31-4 / officer)
                                                   :polarity -)))
       :snt3 (c31-3 / possible-01
                    :ARG1 (c31-10 / innocent-01
                                  :ARG1 (c31-1 / he))))

# ::snt He didn't get shot for the strong arm robbery. He got shot for hitting the cop in the head and charging him like a bull.
# ::tokens ["He", "did", "n't", "get", "shot", "for", "the", "strong", "arm", "robbery", ".", "He", "got", "shot", "for", "hitting", "the", "cop", "in", "the", "head", "and", "charging", "him", "like", "a", "bull", "."]
# ::lemmas ["he", "do", "not", "get", "shoot", "for", "the", "strong", "arm", "robbery", ".", "he", "got", "shoot", "for", "hit", "the", "cop", "in", "the", "head", "and", "charge", "he", "like", "a", "bull", "."]
(c32-2 / multi-sentence
       :snt1 (c32-14 / shoot-02
                     :ARG1 (c32-0 / he)
                     :ARG1-of (c32-11 / cause-01
                                      :ARG0 (c32-10 / rob-01
                                                    :manner (c32-15 / arm
                                                                    :ARG1-of (c32-6 / strong-02))))
                     :polarity -)
       :snt2 (c32-1 / shoot-02
                    :ARG1 (c32-3 / he)
                    :ARG1-of (c32-12 / cause-01
                                     :ARG0 (c32-7 / and
                                                  :op1 (c32-9 / hit-01
                                                              :ARG0 c32-3
                                                              :ARG1 (c32-13 / cop
                                                                            :part (c32-4 / head
                                                                                         :ARG2-of c32-9)))
                                                  :op2 (c32-16 / charge-02
                                                               :ARG0 c32-3
                                                               :ARG1 c32-13
                                                               :ARG1-of (c32-8 / resemble-01
                                                                               :ARG2 (c32-5 / bull)))))))

# ::snt . Interesting how you didn't answer my question. Are you or are you not ok with no due process? And where, exactly, am I "smug"?
# ::tokens [".", "Interesting", "how", "you", "did", "n't", "answer", "my", "question", ".", "Are", "you", "or", "are", "you", "not", "ok", "with", "no", "due", "process", "?", "And", "where", ",", "exactly", ",", "am", "I", "\"", "smug", "\"", "?"]
# ::lemmas [".", "interesting", "how", "you", "do", "not", "answer", "my", "question", ".", "be", "you", "or", "be", "you", "not", "ok", "with", "no", "due", "process", "?", "and", "where", ",", "exactly", ",", "be", "i", "\"", "smug", "\"", "?"]
(c33-2 / multi-sentence
       :snt1 (c33-8 / interesting
                    :domain (c33-15 / thing
                                    :manner-of (c33-16 / answer-01
                                                       :ARG0 (c33-0 / you)
                                                       :ARG1 (c33-12 / thing
                                                                     :ARG1-of (c33-6 / question-01
                                                                                     :ARG0 (c33-11 / i)))
                                                       :polarity -)))
       :snt2 (c33-7 / amr-choice
                    :op1 (c33-4 / okay-01
                                :ARG0 (c33-17 / you)
                                :ARG1 (c33-10 / due-process
                                              :polarity -)
                                :polarity -)
                    :op2 (c33-1 / okay-01
                                :ARG0 c33-17
                                :ARG1 c33-10
                                :polarity -))
       :snt3 (c33-9 / and
                    :op2 (c33-13 / smoke-02
                                 :ARG0 (c33-3 / i)
                                 :location (c33-14 / amr-unknown
                                                   :mod (c33-5 / exact)))))

# ::snt Good thing you call yourself a political analyst &amp; TV commentator b/c you're NOT a journalist presenting facts~You're biased
# ::tokens ["Good", "thing", "you", "call", "yourself", "a", "political", "analyst", "&", "amp", ";", "TV", "commentator", "b", "/", "c", "you", "'re", "NOT", "a", "journalist", "presenting", "facts", "~", "You're", "biased"]
# ::lemmas ["good", "thing", "you", "call", "yourself", "a", "political", "analyst", "&", "amp", ";", "tv", "commentator", "b", "/", "c", "you", "be", "not", "a", "journalist", "present", "fact", "~", "You're", "bias"]
(c34-3 / multi-sentence
       :snt1 (c34-10 / call-01
                     :ARG0 (c34-1 / you
                                  :ARG1-of c34-10)
                     :ARG2 (c34-17 / and
                                   :op1 (c34-8 / person
                                               :ARG0-of (c34-6 / analyze-01
                                                               :ARG1 (c34-16 / politics)))
                                   :op2 (c34-4 / person
                                               :name (c34-7 / name
                                                            :op1 "amp")))
                     :ARG1-of (c34-11 / good-02))
       :snt2 (c34-9 / commentator
                    :mod (c34-15 / television)
                    :ARG1-of (c34-13 / cause-01
                                     :ARG0 (c34-0 / journalist
                                                  :domain c34-1
                                                  :ARG0-of (c34-14 / present-01
                                                                   :ARG1 (c34-2 / fact))
                                                  :polarity -)))
       :snt3 (c34-5 / bias-01
                    :ARG1 (c34-12 / you)))

# ::snt you aint the dude, youre a straight Walter
# ::tokens ["you", "ai", "nt", "the", "dude", ",", "you", "re", "a", "straight", "Walter"]
# ::lemmas ["you", "be", "nt", "the", "dude", ",", "you", "re", "a", "straight", "Walter"]
(c35-6 / say-01
       :ARG0 (c35-2 / i)
       :ARG1 (c35-5 / dude
                    :polarity -)
       :ARG2 (c35-4 / person
                    :name (c35-3 / name
                                 :op1 "Walter")
                    :ARG1-of (c35-1 / straight-05)
                    :domain (c35-0 / you)))

# ::snt . You seem to have gotten "poetic" and "vigilante" a wee bit confused there.
# ::tokens [".", "You", "seem", "to", "have", "gotten", "\"", "poetic", "\"", "and", "\"", "vigilante", "\"", "a", "wee", "bit", "confused", "there", "."]
# ::lemmas [".", "you", "seem", "to", "have", "get", "\"", "poetic", "\"", "and", "\"", "vigilante", "\"", "a", "wee", "bit", "confuse", "there", "."]
(c36-7 / seem-01
       :ARG1 (c36-6 / get-03
                    :ARG1 (c36-0 / you)
                    :ARG2 (c36-5 / confuse-01
                                 :ARG1 c36-0
                                 :ARG2 (c36-9 / and
                                              :op1 (c36-4 / poetry)
                                              :op2 (c36-3 / vigilant-01))
                                 :degree (c36-2 / bit
                                                :mod (c36-1 / wee)))
                    :time (c36-8 / there)))

# ::snt Was the guy leaving the store totally innocent? Did he treat the cop the same way he treated the store owner?
# ::tokens ["Was", "the", "guy", "leaving", "the", "store", "totally", "innocent", "?", "Did", "he", "treat", "the", "cop", "the", "same", "way", "he", "treated", "the", "store", "owner", "?"]
# ::lemmas ["be", "the", "guy", "leave", "the", "store", "totally", "innocent", "?", "do", "he", "treat", "the", "cop", "the", "same", "way", "he", "treat", "the", "store", "owner", "?"]
(c37-3 / multi-sentence
       :snt1 (c37-2 / leave-15
                    :ARG0 (c37-11 / guy)
                    :ARG1 (c37-13 / store)
                    :ARG1-of (c37-7 / innocent-01
                                    :degree (c37-14 / total)))
       :snt2 (c37-12 / treat-01
                     :ARG0 (c37-0 / he)
                     :ARG1 (c37-10 / cop)
                     :ARG2 (c37-1 / way
                                  :ARG1-of (c37-6 / same-01
                                                  :ARG2 (c37-8 / treat-01
                                                               :ARG0 c37-0
                                                               :ARG1 (c37-9 / person
                                                                            :ARG0-of (c37-5 / own-01
                                                                                            :ARG1 (c37-4 / store))))))
                     :polarity (c37-15 / amr-unknown)))

# ::snt none that I can think of.
# ::tokens ["none", "that", "I", "can", "think", "of", "."]
# ::lemmas ["none", "that", "i", "can", "think", "of", "."]
(c38-1 / possible-01
       :ARG1 (c38-2 / think-01
                    :ARG0 (c38-3 / i)
                    :ARG1 (c38-0 / none)))

# ::snt Funeral for big mike. Do you think they will put the box of cigars in his coffin?
# ::tokens ["Funeral", "for", "big", "mike", ".", "Do", "you", "think", "they", "will", "put", "the", "box", "of", "cigars", "in", "his", "coffin", "?"]
# ::lemmas ["funeral", "for", "big", "mike", ".", "do", "you", "think", "they", "will", "put", "the", "box", "of", "cigar", "in", "his", "coffin", "?"]
(c39-3 / multi-sentence
       :snt1 (c39-2 / funeral
                    :beneficiary (c39-6 / person
                                        :name (c39-5 / name
                                                     :op1 "Big"
                                                     :op2 "Mike")))
       :snt2 (c39-10 / think-01
                     :ARG0 (c39-1 / you)
                     :ARG1 (c39-11 / put-01
                                   :ARG0 (c39-9 / they)
                                   :ARG1 (c39-4 / box
                                                :consist-of (c39-8 / cigar))
                                   :ARG2 (c39-7 / coffin
                                                :poss (c39-0 / he)))
                     :polarity (c39-12 / amr-unknown)))

# ::snt Yeah, we've got a badass over here.
# ::tokens ["Yeah", ",", "we", "'ve", "got", "a", "badass", "over", "here", "."]
# ::lemmas ["yeah", ",", "we", "'ve", "get", "a", "badass", "over", "here", "."]
(c40-4 / get-02
       :ARG0 (c40-1 / we)
       :ARG1 (c40-3 / badass)
       :location (c40-0 / here)
       :mod (c40-2 / yeah
                   :mode expressive))

# ::snt . Still waiting to hear who "they" are.
# ::tokens [".", "Still", "waiting", "to", "hear", "who", "\"", "they", "\"", "are", "."]
# ::lemmas [".", "still", "wait", "to", "hear", "who", "\"", "they", "\"", "be", "."]
(c41-1 / wait-01
       :ARG2 (c41-0 / hear-01
                    :ARG1 (c41-2 / person
                                 :domain (c41-4 / they)))
       :mod (c41-3 / still))

# ::snt and it appears local cops aided him in getting out of town &amp; polluting the jury pool, not likely they'll suddenly get honest
# ::tokens ["and", "it", "appears", "local", "cops", "aided", "him", "in", "getting", "out", "of", "town", "&", "amp", ";", "polluting", "the", "jury", "pool", ",", "not", "likely", "they", "'ll", "suddenly", "get", "honest"]
# ::lemmas ["and", "it", "appear", "local", "cop", "aid", "he", "in", "get", "out", "of", "town", "&", "amp", ";", "pollute", "the", "jury", "pool", ",", "not", "likely", "they", "'ll", "suddenly", "get", "honest"]
(c42-17 / and
        :op2 (c42-5 / and
                    :op1 (c42-6 / appear-02
                                :ARG1 (c42-14 / aid-01
                                              :ARG0 (c42-9 / cop
                                                           :ARG1-of (c42-2 / local-02))
                                              :ARG1 (c42-10 / get-05
                                                            :ARG1 (c42-0 / he)
                                                            :ARG2 (c42-4 / out-06
                                                                         :ARG1 c42-0
                                                                         :ARG2 (c42-15 / town)))
                                              :ARG2 c42-0))
                    :op2 (c42-7 / pollute-01
                                :ARG1 (c42-16 / pool-01
                                              :ARG2 (c42-1 / jury))
                                :ARG0-of (c42-8 / cause-01
                                                :ARG1 (c42-12 / likely-01
                                                              :ARG1 (c42-11 / get-03
                                                                            :ARG1 c42-16
                                                                            :ARG2 (c42-3 / honest-01
                                                                                         :ARG0 c42-16)
                                                                            :manner (c42-13 / sudden))
                                                              :polarity -)))))

# ::snt . A version of the story contradicted by all the eye witnesses &amp; the independent autopsy. You've shown your true colors; go away
# ::tokens [".", "A", "version", "of", "the", "story", "contradicted", "by", "all", "the", "eye", "witnesses", "&", "amp", ";", "the", "independent", "autopsy", ".", "You", "'ve", "shown", "your", "true", "colors", ";", "go", "away"]
# ::lemmas [".", "a", "version", "of", "the", "story", "contradict", "you", "all", "the", "eye", "witness", "&", "amp", ";", "the", "independent", "autopsy", ".", "you", "'ve", "show", "your", "true", "color", ";", "go", "away"]
(c43-0 / multi-sentence
       :snt1 (c43-16 / contradict-01
                     :ARG0 (c43-7 / and
                                  :op1 (c43-2 / person
                                              :ARG0-of (c43-13 / witness-01
                                                               :mod (c43-8 / eye))
                                              :mod (c43-14 / all))
                                  :op2 (c43-6 / person
                                              :name (c43-10 / name
                                                            :op1 "amp")))
                     :ARG1 (c43-1 / version
                                  :mod (c43-5 / story)))
       :snt2 (c43-11 / autopsy-01
                     :ARG0-of (c43-3 / depend-01
                                     :polarity -))
       :snt3 (c43-9 / show-01
                    :ARG0 (c43-15 / you)
                    :ARG1 (c43-4 / color
                                 :ARG1-of (c43-18 / true-01)
                                 :poss c43-15))
       :snt4 (c43-12 / go-02
                     :ARG0 c43-15
                     :ARG4 (c43-17 / away)
                     :mode imperative))

# ::snt even after all facts come out I have strong feeling won't justify getting shot times, including in top of head.
# ::tokens ["even", "after", "all", "facts", "come", "out", "I", "have", "strong", "feeling", "wo", "n't", "justify", "getting", "shot", "times", ",", "including", "in", "top", "of", "head", "."]
# ::lemmas ["even", "after", "all", "fact", "come", "out", "i", "have", "strong", "feeling", "will", "not", "justify", "get", "shoot", "time", ",", "include", "in", "top", "of", "head", "."]
(c44-2 / feel-01
       :ARG0 (c44-5 / i)
       :ARG1 (c44-0 / justify-01
                    :ARG0 c44-2
                    :ARG0 c44-5
                    :ARG1 (c44-8 / get-04
                                 :ARG1 c44-5
                                 :ARG2 (c44-10 / shoot-02
                                               :ARG1 c44-5
                                               :ARG2-of (c44-9 / include-01
                                                               :ARG1 (c44-11 / top
                                                                             :part-of (c44-1 / head)))))
                    :polarity -)
       :ARG1-of (c44-3 / strong-02)
       :concession (c44-4 / even-after
                          :op1 (c44-7 / come-out-09
                                      :ARG1 (c44-6 / fact
                                                   :mod (c44-12 / all)))))

# ::snt What is interesting is how naive you really are. I would concur that the officer is getting due process.
# ::tokens ["What", "is", "interesting", "is", "how", "naive", "you", "really", "are", ".", "I", "would", "concur", "that", "the", "officer", "is", "getting", "due", "process", "."]
# ::lemmas ["what", "be", "interesting", "be", "how", "naive", "you", "really", "be", ".", "i", "would", "concur", "that", "the", "officer", "be", "get", "due", "process", "."]
(c45-1 / multi-sentence
       :snt1 (c45-3 / interest-01
                    :ARG2 (c45-4 / naive
                                 :domain (c45-0 / you)
                                 :ARG1-of (c45-5 / real-04)
                                 :degree (c45-10 / so)))
       :snt2 (c45-6 / concur-01
                    :ARG0 (c45-7 / i)
                    :ARG1 (c45-8 / get-01
                                 :ARG0 (c45-2 / officer)
                                 :ARG1 (c45-9 / due-process))))

# ::snt Given your politics it isn't surprising that you leave out a ton of pertinent information. So intellectually dishonest.
# ::tokens ["Given", "your", "politics", "it", "is", "n't", "surprising", "that", "you", "leave", "out", "a", "ton", "of", "pertinent", "information", ".", "So", "intellectually", "dishonest", "."]
# ::lemmas ["give", "your", "politic", "it", "be", "not", "surprising", "that", "you", "leave", "out", "a", "ton", "of", "pertinent", "information", ".", "so", "intellectually", "dishonest", "."]
(c46-3 / multi-sentence
       :snt1 (c46-10 / surprise-01
                     :ARG0 (c46-2 / leave-out-03
                                  :ARG0 (c46-1 / you)
                                  :ARG1 (c46-5 / information
                                               :ARG1-of (c46-7 / relevant-01)
                                               :quant (c46-11 / ton))
                                  :ARG1-of (c46-8 / give-01
                                                  :ARG2 (c46-6 / politics
                                                               :poss c46-1)))
                     :ARG1 c46-1
                     :polarity -)
       :snt2 (c46-0 / honest-01
                    :degree (c46-4 / so)
                    :manner (c46-9 / intellectual)
                    :polarity -))

# ::snt Big Mike's partner in crime is very credible. lol. when all the facts come out just remember you heard it here first.
# ::tokens ["Big", "Mike", "'s", "partner", "in", "crime", "is", "very", "credible", ".", "lol", ".", "when", "all", "the", "facts", "come", "out", "just", "remember", "you", "heard", "it", "here", "first", "."]
# ::lemmas ["Big", "Mike", "'s", "partner", "in", "crime", "be", "very", "credible", ".", "lol", ".", "when", "all", "the", "fact", "come", "out", "just", "remember", "you", "hear", "it", "here", "first", "."]
(c47-1 / multi-sentence
       :snt1 (c47-19 / credible
                     :degree (c47-2 / very)
                     :domain (c47-3 / person
                                    :ARG0-of (c47-9 / have-rel-role-91
                                                    :ARG1 (c47-6 / person
                                                                 :name (c47-14 / name
                                                                               :op1 "Mike")
                                                                 :mod (c47-13 / big))
                                                    :ARG2 (c47-12 / partner-in-crime))))
       :snt2 (c47-15 / remember-01
                     :ARG0 (c47-17 / you)
                     :ARG1 (c47-8 / hear-01
                                  :ARG0 c47-17
                                  :ARG1 (c47-16 / it)
                                  :location (c47-4 / here)
                                  :ord (c47-18 / ordinal-entity
                                               :value 1))
                     :mod (c47-0 / just)
                     :time (c47-5 / come-out-09
                                  :ARG1 (c47-10 / fact
                                                :mod (c47-7 / all)))
                     :ARG2-of (c47-11 / laugh-01
                                      :manner (c47-20 / loud)
                                      :mode expressive)
                     :mode imperative))
