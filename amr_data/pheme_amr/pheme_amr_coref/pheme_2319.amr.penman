# ::snt yeah same
# ::tokens ["yeah", "same"]
# ::lemmas ["yeah", "same"]
(c1-0 / same-01
      :mod (c1-1 / yeah
                 :mode expressive))

# ::snt Hostage situation. Thankfully it's over with only casualties including the gunman.
# ::tokens ["Hostage", "situation", ".", "Thankfully", "it", "'s", "over", "with", "only", "casualties", "including", "the", "gunman", "."]
# ::lemmas ["hostage", "situation", ".", "thankfully", "it", "be", "over", "with", "only", "casualty", "include", "the", "gunman", "."]
(c2-2 / multi-sentence
      :snt1 (c2-8 / situation
                  :mod (c2-0 / hostage))
      :snt2 (c2-3 / over-01
                  :ARG1 (c2-4 / it)
                  :manner (c2-5 / casualty
                                :mod (c2-1 / only)
                                :ARG2-of (c2-6 / include-01
                                               :ARG1 (c2-7 / gunman)))
                  :ARG2-of (c2-9 / thankful-02)))

# ::snt Christmas is coming ...and your follow would be a nice giftfollow me??
# ::tokens ["Christmas", "is", "coming", "...", "and", "your", "follow", "would", "be", "a", "nice", "giftfollow", "me", "?", "?"]
# ::lemmas ["Christmas", "be", "come", "...", "and", "your", "follow", "would", "be", "a", "nice", "giftfollow", "i", "?", "?"]
(c3-9 / and
      :op1 (c3-7 / come-01
                 :ARG1 (c3-1 / festival
                             :name (c3-5 / name
                                         :op1 "Christmas")))
      :op2 (c3-8 / gift
                 :ARG1-of (c3-6 / nice-01)
                 :domain (c3-4 / follow-02
                               :ARG0 (c3-0 / you)
                               :ARG1 (c3-3 / i))
                 :polarity (c3-2 / amr-unknown)))

# ::snt some Isis guys are keeping hostages in some coffee shop in Sydney
# ::tokens ["some", "Isis", "guys", "are", "keeping", "hostages", "in", "some", "coffee", "shop", "in", "Sydney"]
# ::lemmas ["some", "Isis", "guy", "be", "keep", "hostage", "in", "some", "coffee", "shop", "in", "Sydney"]
(c5-10 / keep-01
       :ARG0 (c5-7 / guy
                   :quant (c5-9 / some)
                   :mod (c5-6 / criminal-organization
                              :name (c5-3 / name
                                          :op1 "Isis")))
       :ARG1 (c5-0 / hostage)
       :location (c5-2 / shop
                       :mod (c5-5 / coffee)
                       :mod (c5-1 / some)
                       :location (c5-8 / city
                                       :name (c5-4 / name
                                                   :op1 "Sydney"))))

# ::snt IL OVE YOU
# ::tokens ["IL", "OVE", "YOU"]
# ::lemmas ["IL", "OVE", "you"]
(c6-0 / offer-01
      :ARG0 (c6-2 / i)
      :ARG1 (c6-1 / you))

# ::snt Christmas is coming ...and your follow would be a nice giftfollow me?
# ::tokens ["Christmas", "is", "coming", "...", "and", "your", "follow", "would", "be", "a", "nice", "giftfollow", "me", "?"]
# ::lemmas ["Christmas", "be", "come", "...", "and", "your", "follow", "would", "be", "a", "nice", "giftfollow", "i", "?"]
(c7-9 / and
      :op1 (c7-7 / come-01
                 :ARG1 (c7-1 / festival
                             :name (c7-5 / name
                                         :op1 "Christmas")))
      :op2 (c7-8 / gift
                 :ARG1-of (c7-6 / nice-01)
                 :domain (c7-4 / follow-02
                               :ARG0 (c7-0 / you)
                               :ARG1 (c7-3 / i))
                 :polarity (c7-2 / amr-unknown)))

# ::snt cant wait till the world tour next april! ily
# ::tokens ["ca", "nt", "wait", "till", "the", "world", "tour", "next", "april", "!", "ily"]
# ::lemmas ["can", "not", "wait", "till", "the", "world", "tour", "next", "april", "!", "ily"]
(c8-0 / wait-01
      :ARG1 (c8-1 / you)
      :ARG2 (c8-5 / tour-01
                  :ARG1 (c8-2 / world)
                  :time (c8-3 / next
                              :op1 (c8-4 / date-entity
                                         :month 4)))
      :mode imperative)

# ::snt PEOPLE ESCAPED IM SO HAPPY
# ::tokens ["PEOPLE", "ESCAPED", "IM", "SO", "HAPPY"]
# ::lemmas ["PEOPLE", "ESCAPED", "IM", "SO", "HAPPY"]
(c9-1 / escape-01
      :ARG0 (c9-3 / person)
      :ARG1-of (c9-4 / cause-01
                     :ARG0 (c9-0 / happy-01
                                 :ARG1 (c9-2 / i)
                                 :degree (c9-5 / so))))

# ::snt man suspected to be associated with terrorists has about people hostage in a cafe. it's been going on for hours
# ::tokens ["man", "suspected", "to", "be", "associated", "with", "terrorists", "has", "about", "people", "hostage", "in", "a", "cafe", ".", "it", "'s", "been", "going", "on", "for", "hours"]
# ::lemmas ["man", "suspect", "to", "be", "associate", "with", "terrorist", "have", "about", "people", "hostage", "in", "a", "cafe", ".", "it", "be", "be", "go", "on", "for", "hours"]
(c10-2 / multi-sentence
       :snt1 (c10-0 / have-03
                    :ARG0 (c10-6 / man
                                 :ARG1-of (c10-13 / associate-01
                                                  :ARG2 (c10-12 / terrorist)
                                                  :ARG1-of (c10-11 / suspect-01)))
                    :ARG1 (c10-7 / person
                                 :ARG1-of (c10-1 / hostage-01
                                                 :location (c10-8 / cafe))))
       :snt2 (c10-9 / go-on-15
                    :ARG1 (c10-4 / it)
                    :duration (c10-3 / multiple
                                     :op1 (c10-10 / temporal-quantity
                                                  :unit (c10-5 / hour)
                                                  :quant 1))))

# ::snt don't worry its okay ;
# ::tokens ["do", "n't", "worry", "its", "okay", ";"]
# ::lemmas ["do", "not", "worry", "its", "okay", ";"]
(c11-1 / worry-01
       :ARG0 (c11-0 / okay-04
                    :ARG1 (c11-2 / it))
       :polarity -)

# ::snt wow its terrible I hope these people will be okay
# ::tokens ["wow", "its", "terrible", "I", "hope", "these", "people", "will", "be", "okay"]
# ::lemmas ["wow", "its", "terrible", "i", "hope", "these", "people", "will", "be", "okay"]
(c12-1 / multi-sentence
       :snt1 (c12-7 / terrible-01
                    :ARG1 (c12-3 / it))
       :snt2 (c12-0 / hope-01
                    :ARG0 (c12-5 / i)
                    :ARG1 (c12-2 / okay-03
                                 :ARG1 (c12-4 / person
                                              :mod (c12-6 / this)))))

# ::snt everything will be fine I hope
# ::tokens ["everything", "will", "be", "fine", "I", "hope"]
# ::lemmas ["everything", "will", "be", "fine", "i", "hope"]
(c13-0 / hope-01
       :ARG0 (c13-3 / i)
       :ARG1 (c13-2 / fine-04
                    :ARG1 (c13-1 / everything)))

# ::snt COME TO BRAIZL
# ::tokens ["COME", "TO", "BRAIZL"]
# ::lemmas ["come", "to", "braizl"]
(c14-3 / come-01
       :ARG1 (c14-1 / you)
       :ARG4 (c14-2 / country
                    :name (c14-0 / name
                                 :op1 " BRAZL"))
       :mode imperative)

# ::snt Kellin
# ::tokens ["Kellin"]
# ::lemmas ["Kellin"]
(c15-1 / person
       :name (c15-0 / name
                    :op1 "Kellin"))

# ::snt i love you kellin!
# ::tokens ["i", "love", "you", "kellin", "!"]
# ::lemmas ["i", "love", "you", "kellin", "!"]
(c16-4 / say-01
       :ARG0 (c16-1 / i)
       :ARG1 (c16-0 / love-01
                    :ARG0 c16-1
                    :ARG1 (c16-3 / person
                                 :name (c16-2 / name
                                              :op1 "Kellin")
                                 :ARG2-of c16-4)))

# ::snt what's going on in Sydney?
# ::tokens ["what", "'s", "going", "on", "in", "Sydney", "?"]
# ::lemmas ["what", "be", "go", "on", "in", "Sydney", "?"]
(c17-1 / event
       :mod (c17-3 / amr-unknown)
       :location (c17-2 / city
                        :name (c17-0 / name
                                     :op1 "Sydney")))

# ::snt i love you
# ::tokens ["i", "love", "you"]
# ::lemmas ["i", "love", "you"]
(c18-1 / love-01
       :ARG0 (c18-2 / i)
       :ARG1 (c18-0 / you))

# ::snt I love you so much you're so sweet
# ::tokens ["I", "love", "you", "so", "much", "you", "'re", "so", "sweet"]
# ::lemmas ["i", "love", "you", "so", "much", "you", "be", "so", "sweet"]
(c19-1 / love-01
       :ARG0 (c19-5 / i)
       :ARG1 (c19-0 / you)
       :degree (c19-2 / much
                      :degree (c19-7 / so))
       :ARG1-of (c19-6 / cause-01
                       :ARG0 (c19-4 / sweet-03
                                    :ARG1 c19-0
                                    :degree (c19-3 / so))))

# ::snt sorry, didn't realise someone already answered :')
# ::tokens ["sorry", ",", "did", "n't", "realise", "someone", "already", "answered", ":')"]
# ::lemmas ["sorry", ",", "do", "not", "realise", "someone", "already", "answer", ":')"]
(c21-3 / sorry-01
       :ARG2 (c21-2 / realize-01
                    :ARG1 (c21-4 / answer-01
                                 :ARG0 (c21-0 / someone)
                                 :time (c21-1 / already))
                    :polarity -))

# ::snt ahh jesus I hope people will be okay
# ::tokens ["ahh", "jesus", "I", "hope", "people", "will", "be", "okay"]
# ::lemmas ["ahh", "jesus", "i", "hope", "people", "will", "be", "okay"]
(c22-0 / hope-01
       :ARG0 (c22-3 / i)
       :ARG1 (c22-2 / okay-04
                    :ARG1 (c22-4 / person))
       :mod (c22-5 / ah
                   :mode expressive)
       :mod (c22-1 / jesus))

# ::snt Christmas is coming ...and your follow would be a nice giftfollow me??
# ::tokens ["Christmas", "is", "coming", "...", "and", "your", "follow", "would", "be", "a", "nice", "giftfollow", "me", "?", "?"]
# ::lemmas ["Christmas", "be", "come", "...", "and", "your", "follow", "would", "be", "a", "nice", "giftfollow", "i", "?", "?"]
(c24-9 / and
       :op1 (c24-7 / come-01
                   :ARG1 (c24-1 / festival
                                :name (c24-5 / name
                                             :op1 "Christmas")))
       :op2 (c24-8 / gift
                   :ARG1-of (c24-6 / nice-01)
                   :domain (c24-4 / follow-02
                                  :ARG0 (c24-0 / you)
                                  :ARG1 (c24-3 / i))
                   :polarity (c24-2 / amr-unknown)))

# ::snt I LOVE U
# ::tokens ["I", "LOVE", "U"]
# ::lemmas ["i", "LOVE", "U"]
(c25-2 / love-01
       :ARG0 (c25-3 / i)
       :ARG1 (c25-1 / person
                    :name (c25-0 / name
                                 :op1 "U")))

# ::snt ilyy
# ::tokens ["ilyy"]
# ::lemmas ["ilyy"]
(c26-0 / easy-05)

# ::snt this is so sad
# ::tokens ["this", "is", "so", "sad"]
# ::lemmas ["this", "be", "so", "sad"]
(c27-0 / have-degree-91
       :ARG1 (c27-2 / this)
       :ARG2 (c27-3 / sad-02)
       :ARG3 (c27-1 / so))
