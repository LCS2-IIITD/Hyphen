# ::snt officer Wilson didnt know anything about the robbery
# ::tokens ["officer", "Wilson", "did", "nt", "know", "anything", "about", "the", "robbery"]
# ::lemmas ["officer", "Wilson", "do", "not", "know", "anything", "about", "the", "robbery"]
(c1-5 / know-01
      :ARG0 (c1-3 / person
                  :name (c1-2 / name
                              :op1 "Wilson")
                  :ARG0-of (c1-0 / have-org-role-91
                                 :ARG2 (c1-1 / officer)))
      :ARG1 (c1-6 / anything
                  :topic (c1-4 / rob-01))
      :polarity -)

# ::snt and has no words for those grieving families
# ::tokens ["and", "has", "no", "words", "for", "those", "grieving", "families"]
# ::lemmas ["and", "have", "no", "word", "for", "those", "grieve", "family"]
(c2-5 / and
      :op2 (c2-0 / have-03
                 :ARG1 (c2-1 / word-01
                             :ARG1 (c2-2 / family
                                         :ARG1-of (c2-3 / grieve-01)
                                         :mod (c2-4 / that))
                             :polarity -)))

# ::snt [The Dude voice] New sh*t has come to light! But hey lets totally ignore the fact Brown robbed a store.
# ::tokens ["[", "The", "Dude", "voice", "]", "New", "sh*t", "has", "come", "to", "light", "!", "But", "hey", "lets", "totally", "ignore", "the", "fact", "Brown", "robbed", "a", "store", "."]
# ::lemmas ["[", "the", "Dude", "voice", "]", "New", "sh*t", "have", "come", "to", "light", "!", "but", "hey", "let", "totally", "ignore", "the", "fact", "Brown", "rob", "a", "store", "."]
(c3-3 / multi-sentence
      :snt1 (c3-11 / come-04
                   :ARG1 (c3-15 / shit
                                :ARG1-of (c3-7 / new-01))
                   :ARG2 (c3-2 / light)
                   :ARG1-of (c3-8 / voice-01
                                  :ARG0 (c3-9 / person
                                              :name (c3-10 / name
                                                           :op1 "The"
                                                           :op2 "Dude"))))
      :snt2 (c3-12 / contrast-01
                   :ARG2 (c3-6 / ignore-01
                               :ARG0 (c3-1 / we)
                               :ARG1 (c3-4 / fact
                                           :topic (c3-13 / rob-01
                                                         :ARG0 (c3-17 / person
                                                                      :name (c3-14 / name
                                                                                   :op1 "Brown"))
                                                         :ARG1 (c3-5 / store)))
                               :mod (c3-16 / total)
                               :mod (c3-0 / hey
                                          :mode expressive)
                               :mode imperative)))

# ::snt The cop doesn't even know about the robbery. But it's looking like Brown assumed he did.
# ::tokens ["The", "cop", "does", "n't", "even", "know", "about", "the", "robbery", ".", "But", "it", "'s", "looking", "like", "Brown", "assumed", "he", "did", "."]
# ::lemmas ["the", "cop", "do", "not", "even", "know", "about", "the", "robbery", ".", "but", "it", "be", "look", "like", "Brown", "assume", "he", "do", "."]
(c4-1 / multi-sentence
      :snt1 (c4-8 / know-01
                  :ARG0 (c4-6 / cop)
                  :ARG1 (c4-5 / rob-01)
                  :mod (c4-2 / even)
                  :polarity -)
      :snt2 (c4-7 / contrast-01
                  :ARG2 (c4-0 / look-02
                              :ARG1 (c4-9 / assume-02
                                          :ARG0 (c4-4 / person
                                                      :name (c4-3 / name
                                                                  :op1 "Brown"))
                                          :ARG1 c4-5))))

# ::snt No it does not, if that is what happened.
# ::tokens ["No", "it", "does", "not", ",", "if", "that", "is", "what", "happened", "."]
# ::lemmas ["no", "it", "do", "not", ",", "if", "that", "be", "what", "happen", "."]
(c5-1 / do-02
      :ARG0 (c5-2 / it)
      :condition (c5-0 / event
                       :domain c5-2)
      :polarity -)

# ::snt Forensic evidence has come a long way. It'll establish some facts. Such as how the officer suffered his injuries.
# ::tokens ["Forensic", "evidence", "has", "come", "a", "long", "way", ".", "It", "'ll", "establish", "some", "facts", ".", "Such", "as", "how", "the", "officer", "suffered", "his", "injuries", "."]
# ::lemmas ["forensic", "evidence", "have", "come", "a", "long", "way", ".", "it", "'ll", "establish", "some", "fact", ".", "such", "as", "how", "the", "officer", "suffer", "his", "injury", "."]
(c6-3 / multi-sentence
      :snt1 (c6-11 / come-01
                   :ARG1 (c6-7 / evidence-01
                               :mod (c6-2 / forensic))
                   :ARG4 (c6-0 / way
                               :ARG1-of (c6-4 / long-03)))
      :snt2 (c6-5 / establish-01
                  :ARG0 (c6-9 / it)
                  :ARG1 (c6-10 / fact
                               :quant (c6-13 / some)))
      :snt3 (c6-1 / exemplify-01
                  :ARG0 (c6-14 / thing
                               :manner-of (c6-8 / suffer-01
                                                :ARG0 (c6-6 / officer)
                                                :ARG1 (c6-12 / injure-01
                                                             :ARG1 c6-6)))))

# ::snt and FWIW, details of Brown shooting are all over place, no real judgment but that he did just strong arm that guy.
# ::tokens ["and", "FWIW", ",", "details", "of", "Brown", "shooting", "are", "all", "over", "place", ",", "no", "real", "judgment", "but", "that", "he", "did", "just", "strong", "arm", "that", "guy", "."]
# ::lemmas ["and", "FWIW", ",", "detail", "of", "Brown", "shooting", "be", "all", "over", "place", ",", "no", "real", "judgment", "but", "that", "he", "do", "just", "strong", "arm", "that", "guy", "."]
(c7-16 / and
       :op2 (c7-9 / contrast-01
                  :ARG1 (c7-8 / detail-01
                              :ARG1 (c7-13 / shoot-02
                                           :ARG1 (c7-7 / person
                                                       :name (c7-5 / name
                                                                   :op1 "Brown")))
                              :mod (c7-4 / all-over-place))
                  :ARG2 (c7-0 / judge-01
                              :ARG1-of (c7-10 / real-04)
                              :ARG1-of c7-9
                              :ARG2 (c7-6 / arm-01
                                          :ARG0 c7-7
                                          :ARG1 (c7-11 / guy
                                                       :mod (c7-14 / that))
                                          :ARG1-of (c7-2 / strong-02)
                                          :mod (c7-15 / just))
                              :polarity -))
       :ARG1-of (c7-3 / publication-91
                      :ARG4 (c7-1 / publication
                                  :name (c7-12 / name
                                               :op1 "FWIW"))))

# ::snt you're stupid.
# ::tokens ["you", "'re", "stupid", "."]
# ::lemmas ["you", "be", "stupid", "."]
(c8-0 / stupid
      :domain (c8-1 / you))

# ::snt These things are IQ tests for some like don't deserve die for X. But if u do X, u may eat lead.
# ::tokens ["These", "things", "are", "IQ", "tests", "for", "some", "like", "do", "n't", "deserve", "die", "for", "X.", "But", "if", "u", "do", "X", ",", "u", "may", "eat", "lead", "."]
# ::lemmas ["these", "thing", "be", "IQ", "test", "for", "some", "like", "do", "not", "deserve", "die", "for", "X.", "but", "if", "u", "do", "X", ",", "u", "may", "eat", "lead", "."]
(c9-3 / multi-sentence
      :snt1 (c9-16 / test-01
                   :ARG0 (c9-14 / some)
                   :ARG1 (c9-5 / intelligent-01)
                   :ARG2 (c9-13 / thing
                                :mod (c9-7 / this))
                   :ARG1-of (c9-9 / resemble-01
                                  :ARG2 (c9-10 / deserve-01
                                               :ARG0 c9-14
                                               :ARG1 (c9-1 / die-01
                                                           :ARG1 c9-14
                                                           :ARG1-of (c9-11 / cause-01
                                                                           :ARG0 (c9-8 / variable
                                                                                       :name (c9-6 / name
                                                                                                   :op1 "X"))))
                                               :polarity -)))
      :snt2 (c9-12 / contrast-01
                   :ARG2 (c9-15 / permit-01
                                :ARG1 (c9-4 / eat-01
                                            :ARG0 (c9-0 / you)
                                            :ARG1 (c9-2 / lead))
                                :condition (c9-17 / do-02
                                                  :ARG0 c9-0
                                                  :ARG1 c9-8))))

# ::snt well if the cop emptied his gun while Mike's hand was raised in surrender then it was an execution regardless
# ::tokens ["well", "if", "the", "cop", "emptied", "his", "gun", "while", "Mike", "'s", "hand", "was", "raised", "in", "surrender", "then", "it", "was", "an", "execution", "regardless"]
# ::lemmas ["well", "if", "the", "cop", "empty", "his", "gun", "while", "Mike", "'s", "hand", "be", "raise", "in", "surrender", "then", "it", "be", "an", "execution", "regardless"]
(c10-3 / execute-01
       :condition (c10-2 / empty-01
                         :ARG0 (c10-8 / cop)
                         :ARG1 (c10-9 / gun
                                      :poss c10-8)
                         :time (c10-7 / raise-01
                                      :ARG1 (c10-0 / hand
                                                   :part-of (c10-6 / person
                                                                   :name (c10-5 / name
                                                                                :op1 "Mike")))
                                      :ARG2 (c10-10 / surrender-01
                                                    :ARG0 c10-6)))
       :ARG1-of (c10-4 / regardless-91)
       :mod (c10-1 / well))

# ::snt uh huh, so when you decide to play the punching game, do you choose pregnant women or the elderly?
# ::tokens ["uh", "huh", ",", "so", "when", "you", "decide", "to", "play", "the", "punching", "game", ",", "do", "you", "choose", "pregnant", "women", "or", "the", "elderly", "?"]
# ::lemmas ["uh", "huh", ",", "so", "when", "you", "decide", "to", "play", "the", "punching", "game", ",", "do", "you", "choose", "pregnant", "woman", "or", "the", "elderly", "?"]
(c11-8 / choose-01
       :ARG0 (c11-2 / you)
       :ARG1 (c11-11 / amr-choice
                     :op1 (c11-1 / woman
                                 :ARG1-of (c11-5 / impregnate-01))
                     :op2 (c11-6 / person
                                 :mod (c11-4 / elderly)))
       :time (c11-7 / decide-01
                    :ARG0 c11-2
                    :ARG1 (c11-10 / play-01
                                  :ARG0 c11-2
                                  :ARG1 (c11-9 / game
                                               :mod (c11-3 / punch-01))))
       :mod (c11-0 / huh
                   :mode expressive))

# ::snt What the video does is demonstrate why Brown was willing to go after the officer as he exited his car.
# ::tokens ["What", "the", "video", "does", "is", "demonstrate", "why", "Brown", "was", "willing", "to", "go", "after", "the", "officer", "as", "he", "exited", "his", "car", "."]
# ::lemmas ["what", "the", "video", "do", "be", "demonstrate", "why", "Brown", "be", "willing", "to", "go", "after", "the", "officer", "as", "he", "exit", "his", "car", "."]
(c12-7 / demonstrate-01
       :ARG0 (c12-5 / video)
       :ARG1 (c12-11 / thing
                     :ARG0-of (c12-8 / cause-01
                                     :ARG1 (c12-1 / will-02
                                                  :ARG0 (c12-6 / person
                                                               :name (c12-4 / name
                                                                            :op1 "Brown"))
                                                  :ARG1 (c12-9 / go-03
                                                               :ARG0 c12-6
                                                               :ARG1 (c12-12 / person
                                                                             :ARG0-of (c12-0 / have-org-role-91
                                                                                             :ARG2 (c12-2 / officer)))
                                                               :time (c12-3 / exit-01
                                                                            :ARG0 c12-6
                                                                            :ARG1 (c12-10 / car
                                                                                          :poss c12-12)))))))

# ::snt The jury never viewed trayvon as a humanbeing
# ::tokens ["The", "jury", "never", "viewed", "trayvon", "as", "a", "humanbeing"]
# ::lemmas ["the", "jury", "never", "view", "trayvon", "as", "a", "humanbeing"]
(c13-5 / view-02
       :ARG0 (c13-0 / jury)
       :ARG1 (c13-6 / person
                    :name (c13-4 / name
                                 :op1 "Trayvon"))
       :ARG2 (c13-2 / being
                    :mod (c13-1 / human))
       :time (c13-3 / ever)
       :polarity -)

# ::snt this is disgustingly dismissive and insensitive...ugh
# ::tokens ["this", "is", "disgustingly", "dismissive", "and", "insensitive", "...", "ugh"]
# ::lemmas ["this", "be", "disgustingly", "dismissive", "and", "insensitive", "...", "ugh"]
(c14-5 / and
       :op1 (c14-2 / dismiss-02
                   :ARG0 (c14-4 / this)
                   :ARG0-of (c14-1 / disgust-01))
       :op2 (c14-3 / sensitive-03
                   :ARG0 c14-4
                   :polarity -)
       :mod (c14-0 / haugh
                   :mode expressive))

# ::snt Look, real life is gray. People who want to believe this cop just rolled up on this kid &amp; decided to execute him need to deal.
# ::tokens ["Look", ",", "real", "life", "is", "gray", ".", "People", "who", "want", "to", "believe", "this", "cop", "just", "rolled", "up", "on", "this", "kid", "&", "amp", ";", "decided", "to", "execute", "him", "need", "to", "deal", "."]
# ::lemmas ["look", ",", "real", "life", "be", "gray", ".", "people", "who", "want", "to", "believe", "this", "cop", "just", "roll", "up", "on", "this", "kid", "&", "amp", ";", "decide", "to", "execute", "he", "need", "to", "deal", "."]
(c15-2 / multi-sentence
       :snt1 (c15-8 / look-01
                    :ARG0 (c15-17 / you)
                    :ARG1 (c15-13 / gray-02
                                  :ARG1 (c15-20 / life
                                                :ARG1-of (c15-12 / real-04)))
                    :mode imperative)
       :snt2 (c15-11 / need-01
                     :ARG0 (c15-4 / person
                                  :ARG0-of (c15-14 / want-01
                                                   :ARG1 (c15-9 / believe-01
                                                                :ARG0 c15-4
                                                                :ARG1 (c15-3 / roll-up-15
                                                                             :ARG1 (c15-19 / cop
                                                                                           :mod (c15-21 / this))
                                                                             :ARG2 (c15-7 / and
                                                                                          :op1 (c15-16 / kid)
                                                                                          :op2 (c15-6 / person
                                                                                                      :name (c15-18 / name
                                                                                                                    :op1 "amp"))
                                                                                          :mod (c15-15 / this))
                                                                             :mod (c15-0 / just))))
                                  :ARG0-of (c15-5 / decide-01
                                                  :ARG1 (c15-10 / execute-01
                                                                :ARG0 c15-19
                                                                :ARG1 c15-7)))
                     :ARG1 (c15-1 / deal-01
                                  :ARG0 c15-4)))

# ::snt I'm still wondering-Why the policeman was talking to Brown?What got his attention.Why Brown was in police car?Why so many shots?
# ::tokens ["I", "'m", "still", "wondering", "-", "Why", "the", "policeman", "was", "talking", "to", "Brown?What", "got", "his", "attention", ".", "Why", "Brown", "was", "in", "police", "car?Why", "so", "many", "shots", "?"]
# ::lemmas ["i", "be", "still", "wonder", "-", "why", "the", "policeman", "be", "talk", "to", "Brown?What", "get", "his", "attention", ".", "why", "Brown", "be", "in", "police", "car?why", "so", "many", "shot", "?"]
(c16-13 / wonder-01
        :ARG0 (c16-15 / i)
        :ARG1 (c16-5 / and
                     :op1 (c16-19 / cause-01
                                  :ARG0 (c16-14 / amr-unknown)
                                  :ARG1 (c16-21 / talk-01
                                                :ARG0 (c16-1 / policeman)
                                                :ARG2 (c16-4 / person
                                                             :name (c16-10 / name
                                                                           :op1 "Brown"))))
                     :op2 (c16-12 / get-01
                                  :ARG0 (c16-11 / amr-unknown)
                                  :ARG1 (c16-20 / attend-02
                                                :ARG0 c16-4))
                     :op3 (c16-2 / cause-01
                                 :ARG0 (c16-18 / amr-unknown)
                                 :ARG1 (c16-8 / be-located-at-91
                                              :ARG1 c16-4
                                              :ARG2 (c16-16 / car
                                                            :mod (c16-7 / police)))
                                 :op4 (c16-3 / shoot-02
                                             :ARG1-of (c16-6 / have-quant-91
                                                             :ARG2 (c16-0 / many)
                                                             :ARG3 (c16-9 / so))))
                     :mod (c16-17 / still)))

# ::snt I don't follow your pet issues.IDK abt Brown but it doesn't look good. Tray clearly attacked creepy ass zim.
# ::tokens ["I", "do", "n't", "follow", "your", "pet", "issues", ".", "IDK", "abt", "Brown", "but", "it", "does", "n't", "look", "good", ".", "Tray", "clearly", "attacked", "creepy", "ass", "zim", "."]
# ::lemmas ["i", "do", "not", "follow", "your", "pet", "issue", ".", "IDK", "abt", "Brown", "but", "it", "do", "not", "look", "good", ".", "Tray", "clearly", "attack", "creepy", "ass", "zim", "."]
(c17-1 / multi-sentence
       :snt1 (c17-7 / follow-02
                    :ARG0 (c17-14 / i)
                    :ARG1 (c17-15 / issue-02
                                  :ARG0 (c17-3 / pet)
                                  :ARG1 (c17-18 / you))
                    :polarity -)
       :snt2 (c17-21 / contrast-01
                     :ARG1 (c17-17 / know-01
                                   :ARG0 (c17-0 / i)
                                   :ARG1 (c17-5 / person
                                                :name (c17-10 / name
                                                              :op1 "Brown"))
                                   :polarity -)
                     :ARG2 (c17-8 / look-02
                                  :ARG0 (c17-19 / it)
                                  :ARG1 (c17-11 / good-02)
                                  :polarity -))
       :snt3 (c17-6 / attack-01
                    :ARG0 (c17-9 / person
                                 :name (c17-20 / name
                                               :op1 "Trayvon"))
                    :ARG1 (c17-12 / person
                                  :name (c17-2 / name
                                               :op1 "Zim")
                                  :mod (c17-13 / ass
                                               :ARG0-of (c17-4 / creepy-04)))
                    :ARG1-of (c17-16 / clear-06)))

# ::snt You recall the initial narrative about that shooting?
# ::tokens ["You", "recall", "the", "initial", "narrative", "about", "that", "shooting", "?"]
# ::lemmas ["you", "recall", "the", "initial", "narrative", "about", "that", "shooting", "?"]
(c18-3 / recall-02
       :polarity (c18-6 / amr-unknown)
       :ARG0 (c18-0 / you)
       :ARG1 (c18-2 / narrate-01
                    :ARG1 (c18-4 / shoot-02
                                 :mod (c18-5 / that))
                    :time (c18-1 / initial)))

# ::snt How did that turn out? It should serve as a cautionary tale for going with a story before all the facts emerge.
# ::tokens ["How", "did", "that", "turn", "out", "?", "It", "should", "serve", "as", "a", "cautionary", "tale", "for", "going", "with", "a", "story", "before", "all", "the", "facts", "emerge", "."]
# ::lemmas ["how", "do", "that", "turn", "out", "?", "it", "should", "serve", "as", "a", "cautionary", "tale", "for", "go", "with", "a", "story", "before", "all", "the", "fact", "emerge", "."]
(c19-1 / multi-sentence
       :snt1 (c19-13 / turn-out-11
                     :ARG1 (c19-11 / that)
                     :manner (c19-14 / amr-unknown))
       :snt2 (c19-8 / recommend-01
                    :ARG1 (c19-12 / serve-01
                                  :ARG0 (c19-6 / it)
                                  :ARG1 (c19-7 / tale
                                               :mod (c19-9 / cautionary))
                                  :ARG2 (c19-10 / go-06
                                                :ARG2 (c19-3 / story)
                                                :time (c19-2 / before
                                                             :op1 (c19-4 / emerge-01
                                                                         :ARG0 (c19-0 / fact
                                                                                      :mod (c19-5 / all))))))))

# ::snt Who said that?
# ::tokens ["Who", "said", "that", "?"]
# ::lemmas ["who", "say", "that", "?"]
(c20-0 / say-01
       :ARG0 (c20-2 / amr-unknown)
       :ARG1 (c20-1 / that))

# ::snt I got stopped in Dallas years ago- I'm White- my truck matched description. Maybe if I'd cussed I'd have gotten...?
# ::tokens ["I", "got", "stopped", "in", "Dallas", "years", "ago-", "I", "'m", "White-", "my", "truck", "matched", "description", ".", "Maybe", "if", "I", "'d", "cussed", "I", "'d", "have", "gotten", "...", "?"]
# ::lemmas ["i", "got", "stop", "in", "Dallas", "years", "ago-", "i", "be", "white-", "my", "truck", "match", "description", ".", "maybe", "if", "i", "would", "cuss", "i", "would", "have", "get", "...", "?"]
(c21-1 / multi-sentence
       :snt1 (c21-4 / stop-01
                    :ARG1 (c21-13 / i)
                    :location (c21-17 / city
                                      :name (c21-9 / name
                                                   :op1 "Dallas"))
                    :time (c21-8 / before
                                 :op1 (c21-16 / now)
                                 :quant (c21-10 / multiple
                                                :op1 (c21-19 / temporal-quantity
                                                             :unit (c21-15 / year)
                                                             :quant 1))))
       :snt2 (c21-12 / white-02
                     :ARG1 (c21-14 / i))
       :snt3 (c21-6 / match-01
                    :ARG1 (c21-18 / truck
                                  :poss c21-14)
                    :ARG2 (c21-3 / describe-01
                                 :ARG1 c21-14))
       :snt4 (c21-2 / possible-01
                    :ARG1 (c21-11 / get-01
                                  :ARG0 (c21-0 / i)
                                  :condition (c21-7 / fuss-01
                                                    :ARG0 c21-0))
                    :polarity (c21-5 / amr-unknown)))

# ::snt what you just described cannot b presented in court as Michael Brown's mindset because he is no longer with us it speculation
# ::tokens ["what", "you", "just", "described", "can", "not", "b", "presented", "in", "court", "as", "Michael", "Brown", "'s", "mindset", "because", "he", "is", "no", "longer", "with", "us", "it", "speculation"]
# ::lemmas ["what", "you", "just", "describe", "can", "not", "b", "present", "in", "court", "as", "Michael", "Brown", "'s", "mindset", "because", "he", "be", "no", "long", "with", "we", "it", "speculation"]
(c22-7 / possible-01
       :ARG1 (c22-13 / present-01
                     :ARG1 (c22-12 / thing
                                   :ARG1-of (c22-8 / describe-01
                                                   :ARG0 (c22-1 / you)
                                                   :mod (c22-0 / just)))
                     :location (c22-9 / court)
                     :prep-as (c22-3 / mindset
                                     :poss (c22-4 / person
                                                  :name (c22-5 / name
                                                               :op1 "Michael"
                                                               :op2 "Brown"))))
       :ARG1-of (c22-10 / cause-01
                        :ARG0 (c22-11 / speculate-01
                                      :ARG1 c22-3
                                      :time (c22-6 / no-longer)
                                      :prep-with (c22-2 / we)))
       :polarity -)

# ::snt Are you fucking stupid or just completely bat shit insane?
# ::tokens ["Are", "you", "fucking", "stupid", "or", "just", "completely", "bat", "shit", "insane", "?"]
# ::lemmas ["be", "you", "fucking", "stupid", "or", "just", "completely", "bat", "shit", "insane", "?"]
(c23-8 / amr-choice
       :op1 (c23-7 / stupid
                   :domain (c23-1 / you)
                   :mod (c23-2 / fucking))
       :op2 (c23-5 / insane
                   :domain c23-1
                   :mod (c23-4 / shit
                               :mod (c23-3 / bat)
                               :ARG1-of (c23-6 / complete-02))
                   :mod (c23-0 / just)))

# ::snt free
# ::tokens ["free"]
# ::lemmas ["free"]
(c24-0 / free-03)

# ::snt That's what I think happened. Based on what I know so far.
# ::tokens ["That", "'s", "what", "I", "think", "happened", ".", "Based", "on", "what", "I", "know", "so", "far", "."]
# ::lemmas ["that", "be", "what", "i", "think", "happen", ".", "base", "on", "what", "i", "know", "so", "far", "."]
(c25-0 / multi-sentence
       :snt1 (c25-9 / think-01
                    :ARG0 (c25-3 / i)
                    :ARG1 (c25-2 / event
                                 :mod (c25-7 / that)))
       :snt2 (c25-1 / base-02
                    :ARG1 (c25-5 / thing
                                 :ARG1-of (c25-4 / know-01
                                                 :ARG0 (c25-6 / i)
                                                 :time (c25-8 / so-far)))))

# ::snt Never said that but that's what you wanted to hear.
# ::tokens ["Never", "said", "that", "but", "that", "'s", "what", "you", "wanted", "to", "hear", "."]
# ::lemmas ["never", "say", "that", "but", "that", "be", "what", "you", "want", "to", "hear", "."]
(c26-5 / contrast-01
       :ARG1 (c26-6 / say-01
                    :ARG0 (c26-4 / i)
                    :ARG1 (c26-7 / that)
                    :time (c26-3 / ever)
                    :polarity -)
       :ARG2 (c26-1 / want-01
                    :ARG0 (c26-2 / you)
                    :ARG1 (c26-0 / hear-01
                                 :ARG0 c26-2
                                 :ARG1 c26-7)))

# ::snt my question is what is the best detergent to use to clean white sheets?
# ::tokens ["my", "question", "is", "what", "is", "the", "best", "detergent", "to", "use", "to", "clean", "white", "sheets", "?"]
# ::lemmas ["my", "question", "be", "what", "be", "the", "good", "detergent", "to", "use", "to", "clean", "white", "sheet", "?"]
(c27-4 / question-01
       :ARG0 (c27-5 / i)
       :ARG1 (c27-10 / thing
                     :domain (c27-6 / detergent
                                    :ARG1-of (c27-3 / use-01
                                                    :ARG2 (c27-7 / clean-01
                                                                 :ARG1 (c27-9 / sheet
                                                                              :ARG1-of (c27-1 / white-03))))
                                    :ARG1-of (c27-0 / have-degree-91
                                                    :ARG2 (c27-8 / good-02
                                                                 :ARG1 c27-6)
                                                    :ARG3 (c27-2 / most)))))

# ::snt The video would show Brown's state of mind. "Holy shit, I just robbed a store, now this cop is rolling up on me!"
# ::tokens ["The", "video", "would", "show", "Brown", "'s", "state", "of", "mind", ".", "\"", "Holy", "shit", ",", "I", "just", "robbed", "a", "store", ",", "now", "this", "cop", "is", "rolling", "up", "on", "me", "!", "\""]
# ::lemmas ["the", "video", "would", "show", "Brown", "'s", "state", "of", "mind", ".", "\"", "holy", "shit", ",", "i", "just", "rob", "a", "store", ",", "now", "this", "cop", "be", "roll", "up", "on", "i", "!", "\""]
(c28-13 / show-01
        :ARG0 (c28-8 / video)
        :ARG1 (c28-5 / state
                     :mod (c28-3 / mind)
                     :poss (c28-9 / person
                                  :name (c28-7 / name
                                               :op1 "Brown"))
                     :domain (c28-15 / and
                                     :op1 (c28-10 / rob-01
                                                  :ARG0 c28-9
                                                  :ARG1 (c28-2 / store)
                                                  :time (c28-0 / just)
                                                  :mod (c28-4 / shit
                                                              :mod (c28-1 / holy)
                                                              :mode expressive))
                                     :op2 (c28-6 / roll-01
                                                 :ARG1 (c28-11 / cop
                                                               :mod (c28-14 / this))
                                                 :ARG2 c28-9
                                                 :time (c28-12 / now)))))

# ::snt If you feel that renishamcbride,Michael brown,TrayvonMartin, Jordandavis,and so many others deserved to be killed?
# ::tokens ["If", "you", "feel", "that", "renishamcbride", ",", "Michael", "brown", ",", "TrayvonMartin", ",", "Jordandavis", ",", "and", "so", "many", "others", "deserved", "to", "be", "killed", "?"]
# ::lemmas ["if", "you", "feel", "that", "renishamcbride", ",", "Michael", "brown", ",", "TrayvonMartin", ",", "Jordandavis", ",", "and", "so", "many", "other", "deserve", "to", "be", "kill", "?"]
(c29-9 / have-condition-91
       :ARG2 (c29-10 / feel-02
                     :ARG0 (c29-16 / you)
                     :ARG1 (c29-4 / deserve-01
                                  :ARG0 (c29-8 / and
                                               :op1 (c29-3 / person
                                                           :name (c29-12 / name
                                                                         :op1 " renishamcbride"))
                                               :op2 (c29-6 / person
                                                           :name (c29-18 / name
                                                                         :op1 "Michael"
                                                                         :op2 "Brown"))
                                               :op3 (c29-11 / person
                                                            :name (c29-1 / name
                                                                         :op1 "TrayvonMartin"))
                                               :op4 (c29-13 / person
                                                            :name (c29-2 / name
                                                                         :op1 "Jordandavis"))
                                               :op5 (c29-17 / other
                                                            :ARG1-of (c29-7 / have-quant-91
                                                                            :ARG2 (c29-0 / many)
                                                                            :ARG3 (c29-5 / so))))
                                  :ARG1 (c29-15 / kill-01
                                                :ARG1 c29-8)))
       :polarity (c29-14 / amr-unknown))

# ::snt violent thugs who attack wrong ppl don't *deserve* death but they take chance attacking neighborhd watch or cops
# ::tokens ["violent", "thugs", "who", "attack", "wrong", "ppl", "do", "n't", "*", "deserve", "*", "death", "but", "they", "take", "chance", "attacking", "neighborhd", "watch", "or", "cops"]
# ::lemmas ["violent", "thug", "who", "attack", "wrong", "ppl", "do", "not", "*", "deserve", "*", "death", "but", "they", "take", "chance", "attack", "neighborhd", "watch", "or", "cop"]
(c30-9 / contrast-01
       :ARG1 (c30-8 / deserve-01
                    :ARG0 (c30-12 / thug
                                  :mod (c30-6 / violent)
                                  :ARG0-of (c30-13 / attack-01
                                                   :ARG1 (c30-7 / person
                                                                :ARG1-of (c30-0 / wrong-04))))
                    :ARG1 (c30-1 / die-01)
                    :polarity -)
       :ARG2 (c30-10 / chance-02
                     :ARG0 c30-12
                     :ARG1 (c30-3 / attack-01
                                  :ARG0 c30-12
                                  :ARG1 (c30-2 / or
                                               :op1 (c30-5 / neighbor)
                                               :op2 (c30-4 / watch-01
                                                           :ARG1 c30-5)
                                               :op3 (c30-11 / cop)))))

# ::snt Good article.Shame the police can't announce officer's name she to death threats.Also shame that anger was response-NotQuestions
# ::tokens ["Good", "article", ".", "Shame", "the", "police", "ca", "n't", "announce", "officer", "'s", "name", "she", "to", "death", "threats", ".", "Also", "shame", "that", "anger", "was", "response", "-", "NotQuestions"]
# ::lemmas ["good", "article", ".", "shame", "the", "police", "can", "not", "announce", "officer", "'s", "name", "she", "to", "death", "threat", ".", "also", "shame", "that", "anger", "be", "response", "-", "notquestion"]
(c31-0 / multi-sentence
       :snt1 (c31-16 / article
                     :ARG1-of (c31-10 / good-02))
       :snt2 (c31-12 / shame-02
                     :ARG2 (c31-7 / possible-01
                                  :ARG1 (c31-4 / announce-01
                                               :ARG0 (c31-15 / police)
                                               :ARG1 (c31-5 / name
                                                            :poss (c31-1 / officer))
                                               :ARG1-of (c31-9 / cause-01
                                                               :ARG0 (c31-14 / threaten-01
                                                                             :ARG1 (c31-8 / die-01
                                                                                          :ARG1 c31-1)
                                                                             :ARG2 c31-1)))
                                  :polarity -))
       :snt3 (c31-2 / shame-02
                    :ARG2 (c31-11 / respond-01
                                  :ARG2 (c31-6 / anger-01))
                    :mod (c31-13 / also))
       :snt4 (c31-3 / question-01
                    :polarity -))

# ::snt and?
# ::tokens ["and", "?"]
# ::lemmas ["and", "?"]
(c32-1 / and
       :polarity (c32-0 / amr-unknown))

# ::snt I mean your language insulates you from even comprehending reality.Deserve2die?as if random execution like J Dredd
# ::tokens ["I", "mean", "your", "language", "insulates", "you", "from", "even", "comprehending", "reality", ".", "Deserve2die?as", "if", "random", "execution", "like", "J", "Dredd"]
# ::lemmas ["i", "mean", "your", "language", "insulate", "you", "from", "even", "comprehend", "reality", ".", "deserve2die?as", "if", "random", "execution", "like", "J", "Dredd"]
(c33-2 / multi-sentence
       :snt1 (c33-10 / mean-01
                     :ARG0 (c33-6 / i)
                     :ARG2 (c33-13 / insulate-01
                                   :ARG0 (c33-1 / language
                                                :poss (c33-0 / you
                                                             :ARG1-of c33-13))
                                   :ARG2 (c33-12 / comprehend-01
                                                 :ARG0 c33-0
                                                 :ARG1 (c33-11 / reality)
                                                 :mod (c33-4 / even))))
       :snt2 (c33-14 / person
                     :name (c33-8 / name
                                  :op1 "Deserve2die")
                     :polarity (c33-16 / amr-unknown)
                     :ARG1-of (c33-7 / resemble-01
                                     :ARG2 (c33-3 / execute-01
                                                  :mod (c33-5 / random)
                                                  :example (c33-15 / person
                                                                   :name (c33-9 / name
                                                                                :op1 "J"
                                                                                :op2 "Dredd"))))))

# ::snt what are you talking about?
# ::tokens ["what", "are", "you", "talking", "about", "?"]
# ::lemmas ["what", "be", "you", "talk", "about", "?"]
(c34-1 / talk-01
       :ARG0 (c34-0 / you)
       :ARG1 (c34-2 / amr-unknown))

# ::snt better than being a racist like yourself.
# ::tokens ["better", "than", "being", "a", "racist", "like", "yourself", "."]
# ::lemmas ["well", "than", "be", "a", "racist", "like", "yourself", "."]
(c35-0 / have-degree-91
       :ARG2 (c35-4 / good-02)
       :ARG3 (c35-2 / more)
       :ARG4 (c35-3 / racist
                    :domain (c35-1 / you)))

# ::snt is running after and chasing some1 with a loaded gun illegal? As Georgie admitted he did
# ::tokens ["is", "running", "after", "and", "chasing", "some1", "with", "a", "loaded", "gun", "illegal", "?", "As", "Georgie", "admitted", "he", "did"]
# ::lemmas ["be", "run", "after", "and", "chase", "some1", "with", "a", "load", "gun", "illegal", "?", "as", "Georgie", "admit", "he", "do"]
(c36-1 / multi-sentence
       :snt1 (c36-0 / legal-02
                    :ARG1 (c36-15 / and
                                  :op1 (c36-8 / run-02
                                              :ARG0 (c36-7 / person
                                                           :name (c36-5 / name
                                                                        :op1 "Georgie"))
                                              :direction (c36-4 / after))
                                  :op2 (c36-9 / chase-01
                                              :ARG0 c36-7
                                              :ARG1 (c36-14 / person
                                                            :name c36-5
                                                            :op1 "Some1"))
                                  :instrument (c36-10 / gun
                                                      :ARG1-of (c36-12 / load-01)))
                    :polarity -)
       :polarity (c36-6 / amr-unknown)
       :snt2 (c36-13 / admit-01
                     :ARG0 (c36-2 / person
                                  :name c36-5
                                  :op1 "Georgie"))
       :ARG1 (c36-11 / do-02
                     :ARG0 c36-2)
       :polarity (c36-3 / amr-unknown))

# ::snt of course
# ::tokens ["of", "course"]
# ::lemmas ["of", "course"]
(c37-0 / of-course)

# ::snt The Police Chief said that in his presser this afternoon
# ::tokens ["The", "Police", "Chief", "said", "that", "in", "his", "presser", "this", "afternoon"]
# ::lemmas ["the", "Police", "Chief", "say", "that", "in", "his", "presser", "this", "afternoon"]
(c38-6 / say-01
       :ARG0 (c38-2 / person
                    :ARG0-of (c38-0 / have-org-role-91
                                    :ARG1 (c38-8 / police)
                                    :ARG2 (c38-4 / chief)))
       :ARG1 (c38-7 / that)
       :location (c38-1 / presser
                        :poss c38-2)
       :time (c38-3 / date-entity
                    :dayperiod (c38-9 / afternoon)
                    :mod (c38-5 / today)))

# ::snt No. I'm saying he tried to PREVENT the officer from successfully exiting his car by trying to shove him back into it.
# ::tokens ["No", ".", "I", "'m", "saying", "he", "tried", "to", "PREVENT", "the", "officer", "from", "successfully", "exiting", "his", "car", "by", "trying", "to", "shove", "him", "back", "into", "it", "."]
# ::lemmas ["no", ".", "i", "be", "say", "he", "try", "to", "prevent", "the", "officer", "from", "successfully", "exit", "his", "car", "by", "try", "to", "shove", "he", "back", "into", "it", "."]
(c39-2 / multi-sentence
       :snt1 (c39-8 / no)
       :snt2 (c39-12 / say-01
                     :ARG0 (c39-7 / i)
                     :ARG1 (c39-13 / try-01
                                   :ARG0 (c39-0 / he)
                                   :ARG1 (c39-9 / prevent-01
                                                :ARG0 c39-0
                                                :ARG1 (c39-4 / officer)
                                                :ARG2 (c39-5 / exit-01
                                                             :ARG0 c39-4
                                                             :ARG1 (c39-10 / car
                                                                           :poss c39-4)
                                                             :ARG1-of (c39-6 / succeed-01))
                                                :manner (c39-11 / try-01
                                                                :ARG0 c39-0
                                                                :ARG1 (c39-1 / shove-01
                                                                             :ARG0 c39-0
                                                                             :ARG1 c39-4
                                                                             :ARG2 (c39-3 / back
                                                                                          :op1 c39-10)))))))

# ::snt whose to say? I was a Marine in my Alpha uniform home on leave. That whole 'appearances' lie doesnt matter much
# ::tokens ["whose", "to", "say", "?", "I", "was", "a", "Marine", "in", "my", "Alpha", "uniform", "home", "on", "leave", ".", "That", "whole", "'", "appearances", "'", "lie", "does", "nt", "matter", "much"]
# ::lemmas ["whose", "to", "say", "?", "i", "be", "a", "Marine", "in", "my", "alpha", "uniform", "home", "on", "leave", ".", "that", "whole", "'", "appearance", "'", "lie", "do", "not", "matter", "much"]
(c40-3 / multi-sentence
       :snt1 (c40-15 / say-01
                     :ARG0 (c40-16 / amr-unknown
                                   :ARG1-of c40-15))
       :snt2 (c40-0 / have-org-role-91
                    :ARG0 (c40-8 / i)
                    :ARG1 (c40-11 / military
                                  :name (c40-9 / name
                                               :op1 "Marine"))
                    :ARG2 (c40-2 / member
                                 :ARG1-of (c40-4 / uniform-01
                                                 :ARG2 (c40-6 / organization
                                                              :name (c40-10 / name
                                                                            :op1 "Alpha"))))
                    :time (c40-5 / leave-11
                                 :ARG0 c40-8))
       :snt3 (c40-12 / matter-01
                     :ARG1 (c40-14 / lie-08
                                   :ARG1 (c40-7 / appear-01
                                                :ARG1 c40-7))
                     :mod (c40-1 / whole)
                     :polarity -)
       :degree (c40-13 / much))

# ::snt I agree Forensic will also show if Mike's hands were raised when shot as well as the projecturie of the bullets excuse spell
# ::tokens ["I", "agree", "Forensic", "will", "also", "show", "if", "Mike", "'s", "hands", "were", "raised", "when", "shot", "as", "well", "as", "the", "projecturie", "of", "the", "bullets", "excuse", "spell"]
# ::lemmas ["i", "agree", "Forensic", "will", "also", "show", "if", "Mike", "'s", "hand", "be", "raise", "when", "shoot", "as", "well", "as", "the", "projecturie", "of", "the", "bullet", "excuse", "spell"]
(c41-14 / agree-01
        :ARG0 (c41-7 / i)
        :ARG1 (c41-12 / show-01
                      :ARG0 (c41-1 / forensic)
                      :ARG1 (c41-6 / and
                                   :op1 (c41-11 / raise-01
                                                :ARG1 (c41-0 / hand
                                                             :part-of (c41-10 / person
                                                                              :name (c41-8 / name
                                                                                           :op1 "Mike")))
                                                :time (c41-4 / shoot-02))
                                   :op2 (c41-2 / spell-01
                                               :ARG1 (c41-5 / excuse-02
                                                            :ARG2 (c41-3 / bullet))
                                               :mod (c41-13 / projecturie)))
                      :mod (c41-9 / also)))

# ::snt Larry Elder you really are an uncle Tom.
# ::tokens ["Larry", "Elder", "you", "really", "are", "an", "uncle", "Tom", "."]
# ::lemmas ["Larry", "Elder", "you", "really", "be", "an", "uncle", "Tom", "."]
(c42-5 / say-01
       :ARG0 (c42-1 / i)
       :ARG1 (c42-0 / uncle
                    :domain (c42-3 / person
                                   :name (c42-2 / name
                                                :op1 "Larry"
                                                :op2 "Elder"))
                    :ARG1-of (c42-4 / real-04))
       :ARG2 c42-3)

# ::snt can I ask you a real serious question?
# ::tokens ["can", "I", "ask", "you", "a", "real", "serious", "question", "?"]
# ::lemmas ["can", "i", "ask", "you", "a", "real", "serious", "question", "?"]
(c43-4 / possible-01
       :polarity (c43-7 / amr-unknown)
       :ARG1 (c43-2 / ask-01
                    :ARG0 (c43-3 / i)
                    :ARG1 (c43-1 / question
                                 :ARG1-of (c43-6 / serious-02
                                                 :ARG1-of (c43-5 / real-04)))
                    :ARG2 (c43-0 / you)))

# ::snt A huge hulking white racist jumped out of his car, ran down, tackled, beat up, then cold-bloodedly executed a small child?
# ::tokens ["A", "huge", "hulking", "white", "racist", "jumped", "out", "of", "his", "car", ",", "ran", "down", ",", "tackled", ",", "beat", "up", ",", "then", "cold", "-", "bloodedly", "executed", "a", "small", "child", "?"]
# ::lemmas ["a", "huge", "hulking", "white", "racist", "jump", "out", "of", "his", "car", ",", "run", "down", ",", "tackle", ",", "beat", "up", ",", "then", "cold", "-", "bloodedly", "execute", "a", "small", "child", "?"]
(c44-5 / and
       :op1 (c44-0 / jump-03
                   :ARG0 (c44-10 / racist
                                 :mod (c44-7 / huge)
                                 :ARG0-of (c44-6 / hulk-01)
                                 :ARG1-of (c44-11 / white-02))
                   :direction (c44-15 / out-of
                                      :op1 (c44-16 / car
                                                   :poss c44-10)))
       :op2 (c44-1 / run-02
                   :ARG0 c44-10
                   :direction (c44-2 / down))
       :op3 (c44-18 / tackle-01
                    :ARG0 c44-10)
       :op4 (c44-8 / beat-up-05
                   :ARG0 c44-10
                   :ARG1 c44-10)
       :op5 (c44-9 / execute-01
                   :ARG0 c44-10
                   :ARG1 (c44-3 / child
                                :mod (c44-4 / small))
                   :manner (c44-13 / blood
                                   :ARG1-of (c44-14 / cold-02))
                   :time (c44-17 / then))
       :polarity (c44-12 / amr-unknown))

# ::snt That jury had black people on it. Try again. Wait, never mind. Gonna let you go, it's been fun.
# ::tokens ["That", "jury", "had", "black", "people", "on", "it", ".", "Try", "again", ".", "Wait", ",", "never", "mind", ".", "Gon", "na", "let", "you", "go", ",", "it", "'s", "been", "fun", "."]
# ::lemmas ["that", "jury", "have", "black", "people", "on", "it", ".", "try", "again", ".", "wait", ",", "never", "mind", ".", "going", "to", "let", "you", "go", ",", "it", "be", "be", "fun", "."]
(c45-1 / multi-sentence
       :snt1 (c45-4 / have-03
                    :ARG0 (c45-0 / jury
                                 :mod (c45-18 / that))
                    :ARG1 (c45-2 / person
                                 :ARG1-of (c45-7 / black-05)))
       :snt2 (c45-17 / try-01
                     :ARG0 (c45-15 / you)
                     :mod (c45-3 / again)
                     :mode imperative)
       :snt3 (c45-11 / wait-01
                     :ARG1 (c45-14 / you)
                     :concession (c45-9 / mind-15
                                        :ARG0 c45-14
                                        :time (c45-8 / ever)
                                        :polarity -
                                        :mode imperative)
                     :mode imperative)
       :snt4 (c45-5 / let-01
                    :ARG0 (c45-12 / i)
                    :ARG1 (c45-10 / go-02
                                  :ARG0 c45-14)
                    :ARG1-of (c45-16 / cause-01
                                     :ARG0 (c45-6 / fun-01
                                                  :ARG1 (c45-13 / it)))))

# ::snt And a struggle ensued over the handgun while Trayvon was kicking Zimmerman's ass. But people didn't want to hear that.
# ::tokens ["And", "a", "struggle", "ensued", "over", "the", "handgun", "while", "Trayvon", "was", "kicking", "Zimmerman", "'s", "ass", ".", "But", "people", "did", "n't", "want", "to", "hear", "that", "."]
# ::lemmas ["and", "a", "struggle", "ensue", "over", "the", "handgun", "while", "Trayvon", "be", "kick", "Zimmerman", "'s", "ass", ".", "but", "people", "do", "not", "want", "to", "hear", "that", "."]
(c46-3 / multi-sentence
       :snt1 (c46-13 / and
                     :op2 (c46-4 / ensue-01
                                 :ARG1 (c46-9 / struggle-01
                                              :ARG2 (c46-0 / handgun))
                                 :time (c46-11 / kick-01
                                               :ARG0 (c46-7 / person
                                                            :name (c46-6 / name
                                                                         :op1 "Trayvon")
                                                            :part (c46-5 / ass
                                                                         :ARG1-of c46-11)))))
       :snt2 (c46-8 / contrast-01
                    :ARG2 (c46-1 / want-01
                                 :ARG0 (c46-12 / person)
                                 :ARG1 (c46-2 / hear-01
                                              :ARG0 c46-12
                                              :ARG1 (c46-10 / that))
                                 :polarity -)))

# ::snt if ppl are seriously going to believe there's an "open season" on pure,innocent babies like Tray or Brown,then yes
# ::tokens ["if", "ppl", "are", "seriously", "going", "to", "believe", "there", "'s", "an", "\"", "open", "season", "\"", "on", "pure", ",", "innocent", "babies", "like", "Tray", "or", "Brown", ",", "then", "yes"]
# ::lemmas ["if", "ppl", "be", "seriously", "go", "to", "believe", "there", "be", "an", "\"", "open", "season", "\"", "on", "pure", ",", "innocent", "baby", "like", "Tray", "or", "Brown", ",", "then", "yes"]
(c47-0 / yes
       :condition (c47-4 / believe-01
                         :ARG0 (c47-9 / person
                                      :quant (c47-2 / multiple))
                         :ARG1 (c47-11 / season
                                       :ARG1-of (c47-5 / open-09)
                                       :topic (c47-10 / baby
                                                      :ARG1-of (c47-13 / pure-02)
                                                      :example (c47-1 / or
                                                                      :op1 (c47-3 / person
                                                                                  :name (c47-7 / name
                                                                                               :op1 "Tray"))
                                                                      :op2 (c47-12 / person
                                                                                   :name (c47-8 / name
                                                                                                :op1 "Brown")))))
                         :ARG2-of (c47-6 / serious-01)))

# ::snt I'm saying that's why Brown assaulted the officer, yes. As for the subsequent shooting, I have no idea.
# ::tokens ["I", "'m", "saying", "that", "'s", "why", "Brown", "assaulted", "the", "officer", ",", "yes", ".", "As", "for", "the", "subsequent", "shooting", ",", "I", "have", "no", "idea", "."]
# ::lemmas ["i", "be", "say", "that", "be", "why", "Brown", "assault", "the", "officer", ",", "yes", ".", "as", "for", "the", "subsequent", "shooting", ",", "i", "have", "no", "idea", "."]
(c48-2 / multi-sentence
       :snt1 (c48-12 / say-01
                     :ARG0 (c48-7 / i)
                     :ARG1 (c48-15 / assault-01
                                   :ARG0 (c48-9 / person
                                                :name (c48-8 / name
                                                             :op1 "Brown"))
                                   :ARG1 (c48-14 / person
                                                 :ARG0-of (c48-0 / have-org-role-91
                                                                 :ARG2 (c48-5 / officer)))
                                   :ARG1-of (c48-10 / cause-01
                                                    :ARG0 (c48-13 / that))))
       :snt2 (c48-1 / have-03
                    :ARG0 (c48-11 / i)
                    :ARG1 (c48-3 / idea)
                    :topic (c48-6 / shoot-02
                                  :time (c48-4 / subsequent))
                    :polarity -))

# ::snt Sure he did.
# ::tokens ["Sure", "he", "did", "."]
# ::lemmas ["sure", "he", "do", "."]
(c49-0 / sure-02
       :ARG1 (c49-2 / do-02
                    :ARG0 (c49-1 / he)))

# ::snt It explains why Brown would assault the officer.
# ::tokens ["It", "explains", "why", "Brown", "would", "assault", "the", "officer", "."]
# ::lemmas ["it", "explain", "why", "Brown", "would", "assault", "the", "officer", "."]
(c50-1 / explain-01
       :ARG0 (c50-2 / it)
       :ARG1 (c50-6 / thing
                    :ARG0-of (c50-5 / cause-01
                                    :ARG1 (c50-7 / assault-01
                                                 :ARG0 (c50-4 / person
                                                              :name (c50-3 / name
                                                                           :op1 "Brown"))
                                                 :ARG1 (c50-0 / officer)))))
