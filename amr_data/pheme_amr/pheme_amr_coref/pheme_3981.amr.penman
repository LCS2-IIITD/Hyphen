# ::snt Count me in - worked for the House for years, I am mad. This is my House.
# ::tokens ["Count", "me", "in", "-", "worked", "for", "the", "House", "for", "years", ",", "I", "am", "mad", ".", "This", "is", "my", "House", "."]
# ::lemmas ["count", "i", "in", "-", "work", "for", "the", "House", "for", "years", ",", "i", "be", "mad", ".", "this", "be", "my", "House", "."]
(c1-3 / multi-sentence
      :snt1 (c1-10 / count-02
                   :ARG0 (c1-0 / you)
                   :ARG1 (c1-5 / i)
                   :mode imperative)
      :snt2 (c1-8 / mad-04
                  :ARG0 (c1-1 / work-01
                              :ARG0 c1-5
                              :ARG2 (c1-11 / government-organization
                                           :name (c1-6 / name
                                                       :op1 "House"))
                              :duration (c1-2 / multiple
                                              :op1 (c1-15 / temporal-quantity
                                                          :unit (c1-13 / year)
                                                          :quant 1)))
                  :ARG1 (c1-12 / i))
      :snt3 (c1-9 / government-organization
                  :name (c1-7 / name
                              :op1 "House")
                  :poss (c1-4 / i)
                  :domain (c1-14 / this)))

# ::snt . Reads: We will use these crimes as justification for our political objectives. Join or perish.
# ::tokens [".", "Reads", ":", "We", "will", "use", "these", "crimes", "as", "justification", "for", "our", "political", "objectives", ".", "Join", "or", "perish", "."]
# ::lemmas [".", "read", ":", "we", "will", "use", "these", "crime", "as", "justification", "for", "our", "political", "objective", ".", "join", "or", "perish", "."]
(c2-4 / multi-sentence
      :snt1 (c2-9 / read-01
                  :ARG1 (c2-5 / use-01
                              :ARG0 (c2-1 / we)
                              :ARG1 (c2-10 / crime-02
                                           :mod (c2-11 / this))
                              :ARG2 (c2-0 / justify-01
                                          :ARG0 c2-1
                                          :ARG1 (c2-6 / objective
                                                      :mod (c2-8 / politics)
                                                      :poss c2-1))))
      :snt2 (c2-3 / or
                  :op1 (c2-12 / join-04
                              :ARG0 (c2-2 / you)
                              :mode imperative)
                  :op2 (c2-7 / perish-01
                             :ARG0 c2-2
                             :mode imperative)))

# ::snt Its tomorrow so I'm recalling .'s most profound message which I support &amp; wish to implement. Let's reclaim our publc space -publicly.
# ::tokens ["Its", "tomorrow", "so", "I", "'m", "recalling", ".", "'s", "most", "profound", "message", "which", "I", "support", "&", "amp", ";", "wish", "to", "implement", ".", "Let", "'s", "reclaim", "our", "publc", "space", "-publicly", "."]
# ::lemmas ["its", "tomorrow", "so", "i", "be", "recall", ".", "'s", "most", "profound", "message", "which", "i", "support", "&", "amp", ";", "wish", "to", "implement", ".", "let", "us", "reclaim", "our", "publc", "space", "-publicly", "."]
(c3-3 / multi-sentence
      :snt1 (c3-11 / cause-01
                   :ARG0 (c3-15 / tomorrow)
                   :ARG1 (c3-10 / recall-02
                                :ARG0 (c3-5 / i)
                                :ARG1 (c3-9 / message-01
                                            :ARG0 (c3-12 / person
                                                         :name (c3-7 / name
                                                                     :op1 "&amp"))
                                            :ARG1-of (c3-0 / have-degree-91
                                                           :ARG2 (c3-16 / profound)
                                                           :ARG3 (c3-2 / most))
                                            :ARG1-of (c3-13 / implement-01
                                                            :ARG0 c3-5
                                                            :ARG1-of (c3-1 / wish-01
                                                                           :ARG0 c3-5)))))
      :snt2 (c3-6 / reclaim-01
                  :ARG0 (c3-8 / we)
                  :ARG1 (c3-14 / space
                               :mod (c3-4 / public)
                               :poss c3-8)
                  :mode imperative))

# ::snt If we become paralyzed by fear, then they have won.
# ::tokens ["If", "we", "become", "paralyzed", "by", "fear", ",", "then", "they", "have", "won", "."]
# ::lemmas ["if", "we", "become", "paralyze", "by", "fear", ",", "then", "they", "have", "win", "."]
(c4-0 / win-01
      :ARG0 (c4-5 / they)
      :condition (c4-2 / become-01
                       :ARG1 (c4-3 / we)
                       :ARG2 (c4-4 / paralyze-01
                                   :ARG0 (c4-1 / fear-01)
                                   :ARG1 c4-3)))

# ::snt Sure, if people are still allowed to assemble there.
# ::tokens ["Sure", ",", "if", "people", "are", "still", "allowed", "to", "assemble", "there", "."]
# ::lemmas ["sure", ",", "if", "people", "be", "still", "allow", "to", "assemble", "there", "."]
(c5-3 / sure-02
      :condition (c5-5 / allow-01
                       :ARG1 (c5-1 / assemble-02
                                   :ARG0 (c5-2 / person)
                                   :location (c5-4 / there))
                       :mod (c5-0 / still)))

# ::snt Getting together is nice sentiment but in an era of double tap bombings, not good policy.
# ::tokens ["Getting", "together", "is", "nice", "sentiment", "but", "in", "an", "era", "of", "double", "tap", "bombings", ",", "not", "good", "policy", "."]
# ::lemmas ["get", "together", "be", "nice", "sentiment", "but", "in", "an", "era", "of", "double", "tap", "bombing", ",", "not", "good", "policy", "."]
(c6-5 / contrast-01
      :ARG1 (c6-8 / sentiment
                  :ARG1-of (c6-2 / nice-01)
                  :domain (c6-6 / get-together-14))
      :ARG2 (c6-3 / policy-01
                  :ARG1-of (c6-4 / good-02)
                  :time (c6-1 / era
                              :time-of (c6-0 / bomb-01
                                             :mod (c6-9 / tap
                                                        :mod (c6-7 / double))))
                  :polarity -))

# ::snt Lets do that! Andrew that is a great idea!
# ::tokens ["Lets", "do", "that", "!", "Andrew", "that", "is", "a", "great", "idea", "!"]
# ::lemmas ["let", "do", "that", "!", "Andrew", "that", "be", "a", "great", "idea", "!"]
(c7-1 / multi-sentence
      :snt1 (c7-5 / do-02
                  :ARG0 (c7-0 / we)
                  :ARG1 (c7-10 / that)
                  :mode imperative)
      :snt2 (c7-9 / say-01
                  :ARG0 (c7-2 / i)
                  :ARG1 (c7-6 / idea
                              :mod (c7-7 / great)
                              :domain (c7-8 / that))
                  :ARG2 (c7-4 / person
                              :name (c7-3 / name
                                          :op1 "Andrew"))))

# ::snt They will have a shortage of virgins in Islamic paradise when we are finished with these a-holes.
# ::tokens ["They", "will", "have", "a", "shortage", "of", "virgins", "in", "Islamic", "paradise", "when", "we", "are", "finished", "with", "these", "a", "-", "holes", "."]
# ::lemmas ["they", "will", "have", "a", "shortage", "of", "virgin", "in", "Islamic", "paradise", "when", "we", "be", "finish", "with", "these", "a", "-", "hole", "."]
(c8-8 / short-06
      :ARG1 (c8-9 / they)
      :ARG2 (c8-4 / virgin)
      :location (c8-5 / paradise
                      :mod (c8-6 / religious-group
                                 :name (c8-3 / name
                                             :op1 "Islam")))
      :time (c8-2 / finish-01
                  :ARG0 (c8-1 / we)
                  :ARG1 (c8-0 / hole
                              :mod (c8-7 / this))))

# ::snt I can't be in Ottawa tomorrow. Instead, I'm going to vote.
# ::tokens ["I", "ca", "n't", "be", "in", "Ottawa", "tomorrow", ".", "Instead", ",", "I", "'m", "going", "to", "vote", "."]
# ::lemmas ["i", "can", "not", "be", "in", "Ottawa", "tomorrow", ".", "instead", ",", "i", "be", "go", "to", "vote", "."]
(c9-1 / multi-sentence
      :snt1 (c9-6 / possible-01
                  :ARG1 (c9-2 / be-located-at-91
                              :ARG1 (c9-3 / i)
                              :ARG2 (c9-7 / city
                                          :name (c9-4 / name
                                                      :op1 "Ottawa"))
                              :time (c9-9 / tomorrow))
                  :polarity -)
      :snt2 (c9-5 / vote-01
                  :ARG0 (c9-8 / i)
                  :ARG1-of (c9-0 / instead-of-91)))

# ::snt : Easy for me to say from where I am, but what should happen, when this is over, is for people to assemble on Parliament HIll
# ::tokens [":", "Easy", "for", "me", "to", "say", "from", "where", "I", "am", ",", "but", "what", "should", "happen", ",", "when", "this", "is", "over", ",", "is", "for", "people", "to", "assemble", "on", "Parliament", "HIll"]
# ::lemmas [":", "easy", "for", "i", "to", "say", "from", "where", "i", "be", ",", "but", "what", "should", "happen", ",", "when", "this", "be", "over", ",", "be", "for", "people", "to", "assemble", "on", "Parliament", "HIll"]
(c10-8 / contrast-01
       :ARG1 (c10-3 / easy-05
                    :ARG1 (c10-10 / say-01
                                  :ARG0 (c10-4 / i)
                                  :source (c10-0 / location
                                                 :ARG2-of (c10-1 / be-located-at-91
                                                                 :ARG1 c10-4))))
       :ARG2 (c10-7 / recommend-01
                    :ARG1 (c10-12 / assemble-02
                                  :ARG0 (c10-6 / person)
                                  :location (c10-9 / government-organization
                                                   :name (c10-5 / name
                                                                :op1 "Parliament"))
                                  :time (c10-2 / over-01
                                               :ARG1 (c10-11 / this)))))

# ::snt "remember remember october" not that catchy but "remember remember nov" might catch on
# ::tokens ["\"", "remember", "remember", "october", "\"", "not", "that", "catchy", "but", "\"", "remember", "remember", "nov", "\"", "might", "catch", "on"]
# ::lemmas ["\"", "remember", "remember", "october", "\"", "not", "that", "catchy", "but", "\"", "remember", "remember", "nov", "\"", "might", "catch", "on"]
(c11-6 / contrast-01
       :ARG1 (c11-5 / remember-01
                    :ARG0 (c11-0 / you)
                    :ARG1 (c11-2 / remember-01
                                 :ARG0 c11-0
                                 :ARG1 (c11-1 / event
                                              :name (c11-3 / name
                                                           :op1 "october")))
                    :mode imperative)
       :ARG2 (c11-4 / possible-01
                    :ARG1 (c11-7 / catch-on-04
                                 :ARG1 (c11-8 / string-entity
                                              :value "remember-01_2 :mode imperative :ARG0 you :ARG1 ( nov"))))

# ::snt I'd like to retweet this, Andrew. Can you please unblock me?
# ::tokens ["I", "'d", "like", "to", "retweet", "this", ",", "Andrew", ".", "Can", "you", "please", "unblock", "me", "?"]
# ::lemmas ["i", "would", "like", "to", "retweet", "this", ",", "Andrew", ".", "can", "you", "please", "unblock", "i", "?"]
(c12-1 / multi-sentence
       :snt1 (c12-8 / say-01
                    :ARG0 (c12-3 / i)
                    :ARG1 (c12-0 / like-02
                                 :ARG0 c12-3
                                 :ARG1 (c12-6 / retweet-01
                                              :ARG0 c12-3
                                              :ARG1 (c12-9 / this)))
                    :ARG2 (c12-5 / person
                                 :name (c12-4 / name
                                              :op1 "Andrew")))
       :snt2 (c12-10 / possible-01
                     :polarity (c12-11 / amr-unknown)
                     :ARG1 (c12-2 / unblock-01
                                  :ARG0 c12-5
                                  :ARG1 (c12-7 / i))
                     :polite +))

# ::snt Amen. Attacks don't change us; we can only change ourselves. The proper response of an open society is to remain open.
# ::tokens ["Amen", ".", "Attacks", "do", "n't", "change", "us", ";", "we", "can", "only", "change", "ourselves", ".", "The", "proper", "response", "of", "an", "open", "society", "is", "to", "remain", "open", "."]
# ::lemmas ["amen", ".", "attack", "do", "not", "change", "we", ";", "we", "can", "only", "change", "ourselves", ".", "the", "proper", "response", "of", "an", "open", "society", "be", "to", "remain", "open", "."]
(c13-2 / multi-sentence
       :snt1 (c13-7 / man
                    :mode expressive)
       :snt2 (c13-9 / contrast-01
                    :ARG1 (c13-8 / change-01
                                 :ARG0 (c13-14 / attack-01)
                                 :ARG1 (c13-0 / we)
                                 :polarity -)
                    :ARG2 (c13-10 / possible-01
                                  :ARG1 (c13-12 / change-01
                                                :ARG0 c13-0
                                                :ARG1 c13-0
                                                :mod (c13-4 / only))))
       :snt3 (c13-11 / respond-01
                     :ARG0 (c13-13 / society
                                   :ARG1-of (c13-1 / open-04))
                     :ARG2 (c13-6 / remain-01
                                  :ARG1 c13-13
                                  :ARG3 (c13-3 / open-04
                                               :ARG1 c13-13))
                     :mod (c13-5 / proper)))

# ::snt Remembrance Day at Cenotaph will be especially difficult this year. Wear your poppy in memory of all our fallen.
# ::tokens ["Remembrance", "Day", "at", "Cenotaph", "will", "be", "especially", "difficult", "this", "year", ".", "Wear", "your", "poppy", "in", "memory", "of", "all", "our", "fallen", "."]
# ::lemmas ["remembrance", "Day", "at", "Cenotaph", "will", "be", "especially", "difficult", "this", "year", ".", "wear", "your", "poppy", "in", "memory", "of", "all", "our", "fall", "."]
(c14-3 / multi-sentence
       :snt1 (c14-9 / difficult
                    :domain (c14-5 / event
                                   :name (c14-7 / name
                                                :op1 "Remembrance"
                                                :op2 "Day")
                                   :location (c14-10 / cenotaph))
                    :time (c14-0 / year
                                 :mod (c14-13 / this))
                    :mod (c14-4 / especially))
       :snt2 (c14-1 / wear-01
                    :ARG0 (c14-12 / you)
                    :ARG1 (c14-8 / poppy
                                 :poss c14-12)
                    :purpose (c14-11 / remember-01
                                     :ARG0 c14-12
                                     :ARG1 (c14-14 / person
                                                   :ARG1-of (c14-2 / fall-05)
                                                   :mod (c14-15 / all)
                                                   :poss (c14-6 / we)))
                    :mode imperative))

# ::snt thank you! !
# ::tokens ["thank", "you", "!", "!"]
# ::lemmas ["thank", "you", "!", "!"]
(c15-1 / thank-01
       :ARG1 (c15-0 / you)
       :mode expressive)

# ::snt Canadian soldiers murdered in days in Canada in service of Canada. Unprecedented.
# ::tokens ["Canadian", "soldiers", "murdered", "in", "days", "in", "Canada", "in", "service", "of", "Canada", ".", "Unprecedented", "."]
# ::lemmas ["Canadian", "soldier", "murder", "in", "days", "in", "Canada", "in", "service", "of", "Canada", ".", "unprecedented", "."]
(c16-1 / multi-sentence
       :snt1 (c16-4 / murder-01
                    :ARG1 (c16-8 / soldier
                                 :mod (c16-6 / country
                                             :name (c16-3 / name
                                                          :op1 "Canada")))
                    :time (c16-0 / multiple
                                 :op1 (c16-9 / temporal-quantity
                                             :unit (c16-5 / day)
                                             :quant 1))
                    :location c16-6
                    :purpose (c16-2 / serve-01
                                    :ARG0 c16-8
                                    :ARG2 c16-6))
       :snt2 (c16-7 / precedent
                    :polarity -))

# ::snt thanks
# ::tokens ["thanks"]
# ::lemmas ["thank"]
(c17-0 / thank-01)

# ::snt And outside hospital of soldier shot at war memorial. A show of solidarity.
# ::tokens ["And", "outside", "hospital", "of", "soldier", "shot", "at", "war", "memorial", ".", "A", "show", "of", "solidarity", "."]
# ::lemmas ["and", "outside", "hospital", "of", "soldier", "shoot", "at", "war", "memorial", ".", "a", "show", "of", "solidarity", "."]
(c18-3 / multi-sentence
       :snt1 (c18-9 / and
                    :op2 (c18-4 / outside
                                :op1 (c18-0 / hospital
                                            :location-of (c18-8 / shoot-01
                                                                :ARG1 (c18-6 / soldier)
                                                                :location (c18-7 / memorial
                                                                                 :mod (c18-1 / war))))))
       :snt2 (c18-2 / show-01
                    :ARG1 (c18-5 / solidarity)))

# ::snt Harper has already done that. After everything Malala endured for her beliefs and the PM capitulates like a jelly.
# ::tokens ["Harper", "has", "already", "done", "that", ".", "After", "everything", "Malala", "endured", "for", "her", "beliefs", "and", "the", "PM", "capitulates", "like", "a", "jelly", "."]
# ::lemmas ["harper", "have", "already", "do", "that", ".", "after", "everything", "Malala", "endure", "for", "her", "belief", "and", "the", "PM", "capitulate", "like", "a", "jelly", "."]
(c19-1 / multi-sentence
       :snt1 (c19-3 / do-02
                    :ARG0 (c19-2 / person
                                 :name (c19-12 / name
                                               :op1 "Harper"))
                    :ARG1 (c19-19 / that)
                    :time (c19-6 / already))
       :snt2 (c19-18 / capitulate-01
                     :ARG0 (c19-5 / person
                                  :ARG0-of (c19-7 / have-org-role-91
                                                  :ARG2 (c19-13 / minister
                                                                :mod (c19-8 / prime))))
                     :time (c19-16 / after
                                   :op1 (c19-11 / endure-01
                                                :ARG1 (c19-15 / person
                                                              :name (c19-17 / name
                                                                            :op1 "Malala"))
                                                :ARG2 (c19-9 / everything)
                                                :ARG1-of (c19-4 / cause-01
                                                                :ARG0 (c19-10 / believe-01
                                                                              :ARG0 c19-15))))
                     :manner (c19-14 / resemble-01
                                     :ARG2 (c19-0 / jelly))))
