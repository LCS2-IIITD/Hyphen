# ::snt Is that one of the famous Sydney backpackers
# ::tokens ["Is", "that", "one", "of", "the", "famous", "Sydney", "backpackers"]
# ::lemmas ["be", "that", "one", "of", "the", "famous", "Sydney", "backpacker"]
(c1-2 / include-91
      :ARG1 (c1-6 / that)
      :ARG2 (c1-4 / person
                  :ARG0-of (c1-1 / backpack-01)
                  :ARG1-of (c1-0 / fame-01)
                  :location (c1-5 / city
                                  :name (c1-3 / name
                                              :op1 "Sydney")))
      :polarity (c1-7 / amr-unknown))

# ::snt no hostage where did you get that from
# ::tokens ["no", "hostage", "where", "did", "you", "get", "that", "from"]
# ::lemmas ["no", "hostage", "where", "do", "you", "get", "that", "from"]
(c2-2 / get-01
      :ARG0 (c2-0 / you)
      :ARG1 (c2-1 / that)
      :ARG2 (c2-3 / amr-unknown))

# ::snt : UPDATE: th hostage escapes from cafe
# ::tokens [":", "UPDATE", ":", "th", "hostage", "escapes", "from", "cafe"]
# ::lemmas [":", "update", ":", "th", "hostage", "escape", "from", "cafe"]
(c3-3 / update-02
      :ARG2 (c3-1 / escape-01
                  :ARG0 (c3-0 / hostage)
                  :ARG1 (c3-2 / cafe)))

# ::snt th
# ::tokens ["th"]
# ::lemmas ["th"]
(c4-0 / amr-empty)

# ::snt : UPDATE: th hostage escapes from cafe
# ::tokens [":", "UPDATE", ":", "th", "hostage", "escapes", "from", "cafe"]
# ::lemmas [":", "update", ":", "th", "hostage", "escape", "from", "cafe"]
(c5-3 / update-02
      :ARG2 (c5-1 / escape-01
                  :ARG0 (c5-0 / hostage)
                  :ARG1 (c5-2 / cafe)))

# ::snt Hang on...Sky reporting th
# ::tokens ["Hang", "on", "...", "Sky", "reporting", "th"]
# ::lemmas ["hang", "on", "...", "sky", "report", "th"]
(c6-5 / and
      :op1 (c6-0 / hang-on-05
                 :ARG1 (c6-1 / you)
                 :mode imperative)
      :op2 (c6-4 / report-01
                 :ARG0 (c6-2 / broadcast-program
                             :name (c6-3 / name
                                         :op1 "Sky"))))

# ::snt Tense. : UPDATE: th hostage escapes from cafe
# ::tokens ["Tense", ".", ":", "UPDATE", ":", "th", "hostage", "escapes", "from", "cafe"]
# ::lemmas ["tense", ".", ":", "update", ":", "th", "hostage", "escape", "from", "cafe"]
(c7-1 / multi-sentence
      :snt1 (c7-5 / tense-03)
      :snt2 (c7-2 / update-02
                  :ARG2 (c7-3 / escape-01
                              :ARG0 (c7-0 / hostage)
                              :ARG1 (c7-4 / cafe))))

# ::snt ...that should do...
# ::tokens ["...", "that", "should", "do", "..."]
# ::lemmas ["...", "that", "should", "do", "..."]
(c8-1 / recommend-01
      :ARG1 (c8-0 / do-02
                  :ARG0 (c8-2 / that)))

# ::snt "escapes" or released?
# ::tokens ["\"", "escapes", "\"", "or", "released", "?"]
# ::lemmas ["\"", "escape", "\"", "or", "release", "?"]
(c9-2 / amr-choice
      :op1 (c9-0 / escape-01)
      :op2 (c9-1 / release-01))

# ::snt these two arent even at "stand to"! Its a bloody disgrace!
# ::tokens ["these", "two", "are", "nt", "even", "at", "\"", "stand", "to", "\"", "!", "Its", "a", "bloody", "disgrace", "!"]
# ::lemmas ["these", "two", "be", "not", "even", "at", "\"", "stand", "to", "\"", "!", "its", "a", "bloody", "disgrace", "!"]
(c10-0 / multi-sentence
       :snt1 (c10-5 / stand-11
                    :ARG1 (c10-3 / person
                                 :mod (c10-6 / this)
                                 :quant 2)
                    :mod (c10-2 / even)
                    :polarity -)
       :snt2 (c10-4 / disgrace-01
                    :mod (c10-1 / bloody)))
