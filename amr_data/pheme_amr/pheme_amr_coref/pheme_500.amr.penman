# ::snt can't wait for their million selfies if a device is detonated. Fools.
# ::tokens ["ca", "n't", "wait", "for", "their", "million", "selfies", "if", "a", "device", "is", "detonated", ".", "Fools", "."]
# ::lemmas ["can", "not", "wait", "for", "their", "million", "selfie", "if", "a", "device", "be", "detonate", ".", "fool", "."]
(c1-3 / multi-sentence
      :snt1 (c1-0 / wait-01
                  :ARG1 (c1-4 / i)
                  :ARG2 (c1-6 / selfies
                              :poss (c1-7 / they)
                              :quant 1000000)
                  :condition (c1-5 / detonate-01
                                   :ARG1 (c1-1 / device))
                  :polarity -)
      :snt2 (c1-2 / fool
                  :mode expressive))

# ::snt : If you're taking selfies in at the site of the then... I... just... just don't.
# ::tokens [":", "If", "you", "'re", "taking", "selfies", "in", "at", "the", "site", "of", "the", "then", "...", "I", "...", "just", "...", "just", "do", "n't", "."]
# ::lemmas [":", "if", "you", "be", "take", "selfie", "in", "at", "the", "site", "of", "the", "then", "...", "i", "...", "just", "...", "just", "do", "not", "."]
(c2-9 / and
      :op1 (c2-5 / do-02
                 :ARG0 (c2-3 / i)
                 :mod (c2-0 / just)
                 :polarity -)
      :op2 (c2-2 / do-02
                 :ARG0 c2-3
                 :mod (c2-8 / just)
                 :polarity -)
      :condition (c2-4 / photograph-01
                       :ARG0 (c2-1 / you)
                       :location (c2-6 / site
                                       :mod (c2-7 / then))))

# ::snt : If you're taking selfies in at the site of the then... I... just... just don't. Me either.
# ::tokens [":", "If", "you", "'re", "taking", "selfies", "in", "at", "the", "site", "of", "the", "then", "...", "I", "...", "just", "...", "just", "do", "n't", ".", "Me", "either", "."]
# ::lemmas [":", "if", "you", "be", "take", "selfie", "in", "at", "the", "site", "of", "the", "then", "...", "i", "...", "just", "...", "just", "do", "not", ".", "i", "either", "."]
(c3-4 / multi-sentence
      :snt1 (c3-0 / have-condition-91
                  :ARG1 (c3-14 / and
                               :op1 (c3-8 / do-02
                                          :ARG0 (c3-6 / i)
                                          :mod (c3-1 / just)
                                          :polarity -)
                               :op2 (c3-2 / do-02
                                          :ARG0 c3-6
                                          :mod (c3-13 / just)
                                          :polarity -))
                  :ARG2 (c3-12 / take-01
                               :ARG0 (c3-3 / you)
                               :ARG1 (c3-7 / photograph-01
                                           :ARG0 c3-3)
                               :location (c3-11 / site
                                                :mod (c3-10 / then))))
      :snt2 (c3-9 / i
                  :mod (c3-5 / either)))

# ::snt What is wrong with people? Go home. Go home and think of those poor people trapped in there. Geez!!!
# ::tokens ["What", "is", "wrong", "with", "people", "?", "Go", "home", ".", "Go", "home", "and", "think", "of", "those", "poor", "people", "trapped", "in", "there", ".", "Geez", "!", "!", "!"]
# ::lemmas ["what", "be", "wrong", "with", "people", "?", "go", "home", ".", "go", "home", "and", "think", "of", "those", "poor", "people", "trap", "in", "there", ".", "geez", "!", "!", "!"]
(c4-4 / multi-sentence
      :snt1 (c4-1 / wrong-02
                  :ARG1 (c4-17 / amr-unknown)
                  :ARG2 (c4-10 / person))
      :snt2 (c4-12 / go-02
                   :ARG0 (c4-2 / you)
                   :ARG4 (c4-0 / home)
                   :mode imperative)
      :snt3 (c4-8 / and
                  :op1 (c4-11 / go-02
                              :ARG0 (c4-13 / you)
                              :ARG4 (c4-3 / home)
                              :mode imperative)
                  :op2 (c4-15 / think-01
                              :ARG0 c4-13
                              :ARG2 (c4-16 / person
                                           :mod (c4-6 / poor)
                                           :ARG1-of (c4-14 / trap-01
                                                           :ARG2 (c4-9 / there))
                                           :mod (c4-7 / that))
                              :mode imperative))
      :snt4 (c4-5 / jeez
                  :mode expressive))

# ::snt disgusting is the only thing I can say.
# ::tokens ["disgusting", "is", "the", "only", "thing", "I", "can", "say", "."]
# ::lemmas ["disgusting", "be", "the", "only", "thing", "i", "can", "say", "."]
(c5-2 / possible-01
      :ARG1 (c5-4 / say-01
                  :ARG0 (c5-1 / i)
                  :ARG1 (c5-3 / disgust-01)
                  :mod (c5-0 / only)))

# ::snt OMG I know how totally wrong!!
# ::tokens ["OMG", "I", "know", "how", "totally", "wrong", "!", "!"]
# ::lemmas ["OMG", "i", "know", "how", "totally", "wrong", "!", "!"]
(c6-3 / know-01
      :ARG0 (c6-2 / i)
      :ARG1 (c6-0 / wrong-04
                  :degree (c6-4 / total))
      :mod (c6-1 / oh-my-god
                 :mode expressive))

# ::snt ud be n doin tht neways
# ::tokens ["ud", "be", "n", "doin", "tht", "neways"]
# ::lemmas ["ud", "be", "n", "doin", "tht", "neway"]
(c7-2 / do-02
      :ARG0 (c7-0 / you)
      :ARG1 (c7-4 / thing
                  :ARG1-of (c7-1 / new-01))
      :time (c7-3 / today)
      :polarity -)

# ::snt what the hell is wrong with some people?
# ::tokens ["what", "the", "hell", "is", "wrong", "with", "some", "people", "?"]
# ::lemmas ["what", "the", "hell", "be", "wrong", "with", "some", "people", "?"]
(c8-1 / wrong-02
      :ARG1 (c8-4 / amr-unknown)
      :ARG2 (c8-2 / person
                  :mod (c8-3 / some))
      :mod (c8-0 / hell
                 :mode expressive))

# ::snt so sick some people a
# ::tokens ["so", "sick", "some", "people", "a"]
# ::lemmas ["so", "sick", "some", "people", "a"]
(c9-0 / sick-05
      :ARG1 (c9-1 / person
                  :mod (c9-3 / some))
      :degree (c9-2 / so))

# ::snt : If you're taking selfies in at the site of the then... I... just... just don't. Oh dear
# ::tokens [":", "If", "you", "'re", "taking", "selfies", "in", "at", "the", "site", "of", "the", "then", "...", "I", "...", "just", "...", "just", "do", "n't", ".", "Oh", "dear"]
# ::lemmas [":", "if", "you", "be", "take", "selfie", "in", "at", "the", "site", "of", "the", "then", "...", "i", "...", "just", "...", "just", "do", "not", ".", "oh", "dear"]
(c10-4 / multi-sentence
       :snt1 (c10-0 / have-condition-91
                    :ARG1 (c10-13 / and
                                  :op1 (c10-8 / do-02
                                              :ARG0 (c10-6 / i)
                                              :mod (c10-1 / just)
                                              :polarity -)
                                  :op2 (c10-2 / do-02
                                              :ARG0 c10-6
                                              :mod (c10-12 / just)
                                              :polarity -))
                    :ARG2 (c10-11 / take-01
                                  :ARG0 (c10-3 / you)
                                  :ARG1 (c10-7 / photograph-01
                                               :ARG0 c10-3)
                                  :location (c10-10 / site
                                                    :mod (c10-9 / then))))
       :snt2 (c10-14 / dear
                     :mod (c10-5 / oh)))

# ::snt if you're doing that, I think it's fair to say you're a complete dickhead.
# ::tokens ["if", "you", "'re", "doing", "that", ",", "I", "think", "it", "'s", "fair", "to", "say", "you", "'re", "a", "complete", "dickhead", "."]
# ::lemmas ["if", "you", "be", "do", "that", ",", "i", "think", "it", "be", "fair", "to", "say", "you", "be", "a", "complete", "dickhead", "."]
(c11-8 / think-01
       :ARG0 (c11-3 / i)
       :ARG1 (c11-2 / fair-01
                    :ARG1 (c11-7 / say-01
                                 :ARG1 (c11-4 / dickhead
                                              :ARG1-of (c11-5 / complete-02)
                                              :domain (c11-0 / you))))
       :condition (c11-1 / do-02
                         :ARG0 c11-0
                         :ARG1 (c11-6 / that)))

# ::snt what happened to respect?
# ::tokens ["what", "happened", "to", "respect", "?"]
# ::lemmas ["what", "happen", "to", "respect", "?"]
(c12-0 / respect-01
       :ARG1 (c12-1 / amr-unknown))

# ::snt hope someone takes a selfie on the most horrific day of their life someday....
# ::tokens ["hope", "someone", "takes", "a", "selfie", "on", "the", "most", "horrific", "day", "of", "their", "life", "someday", "...."]
# ::lemmas ["hope", "someone", "take", "a", "selfie", "on", "the", "most", "horrific", "day", "of", "their", "life", "someday", "...."]
(c13-0 / hope-01
       :ARG0 (c13-5 / i)
       :ARG1 (c13-9 / take-01
                    :ARG0 (c13-8 / someone)
                    :ARG1 (c13-4 / selfie)
                    :time (c13-7 / day
                                 :ARG1-of (c13-10 / have-degree-91
                                                  :ARG2 (c13-6 / horrific)
                                                  :ARG3 (c13-2 / most)
                                                  :ARG5 (c13-1 / life
                                                               :poss c13-8)))
                    :time (c13-3 / someday)))

# ::snt FUCKING THANK YOU SOMEONE IN THE MEDIA AGREES WITH ME.
# ::tokens ["FUCKING", "THANK", "YOU", "SOMEONE", "IN", "THE", "MEDIA", "AGREES", "WITH", "ME", "."]
# ::lemmas ["fucking", "thank", "you", "someone", "in", "the", "MEDIA", "AGREES", "with", "i", "."]
(c14-3 / thank-01
       :ARG0 (c14-1 / i)
       :ARG1 (c14-0 / you
                    :mod (c14-2 / someone
                                :ARG0-of (c14-4 / argue-02
                                                :ARG2 c14-1))))

# ::snt WTF is wrong with people?
# ::tokens ["WTF", "is", "wrong", "with", "people", "?"]
# ::lemmas ["WTF", "be", "wrong", "with", "people", "?"]
(c15-0 / wrong-02
       :ARG1 (c15-3 / amr-unknown)
       :ARG2 (c15-1 / person)
       :mod (c15-2 / fuck
                   :mode expressive))

# ::snt : If you're taking selfies in at the site of the then... I... just... just don't.
# ::tokens [":", "If", "you", "'re", "taking", "selfies", "in", "at", "the", "site", "of", "the", "then", "...", "I", "...", "just", "...", "just", "do", "n't", "."]
# ::lemmas [":", "if", "you", "be", "take", "selfie", "in", "at", "the", "site", "of", "the", "then", "...", "i", "...", "just", "...", "just", "do", "not", "."]
(c16-9 / and
       :op1 (c16-5 / do-02
                   :ARG0 (c16-3 / i)
                   :mod (c16-0 / just)
                   :polarity -)
       :op2 (c16-2 / do-02
                   :ARG0 c16-3
                   :mod (c16-8 / just)
                   :polarity -)
       :condition (c16-4 / photograph-01
                         :ARG0 (c16-1 / you)
                         :location (c16-6 / site
                                          :mod (c16-7 / then))))

# ::snt a heartless one at that
# ::tokens ["a", "heartless", "one", "at", "that"]
# ::lemmas ["a", "heartless", "one", "at", "that"]
(c17-0 / one
       :mod (c17-1 / heartless)
       :ARG1-of (c17-2 / add-02))

# ::snt . go home you sad people
# ::tokens [".", "go", "home", "you", "sad", "people"]
# ::lemmas [".", "go", "home", "you", "sad", "people"]
(c18-4 / say-01
       :ARG1 (c18-3 / go-02
                    :ARG0 (c18-2 / person
                                 :ARG1-of (c18-1 / sad-02))
                    :ARG4 (c18-0 / home)
                    :mode imperative)
       :ARG2 c18-2)
