# ::snt Yes of course, at least it will be a quick procedure, i hope.
# ::tokens ["Yes", "of", "course", ",", "at", "least", "it", "will", "be", "a", "quick", "procedure", ",", "i", "hope", "."]
# ::lemmas ["yes", "of", "course", ",", "at", "least", "it", "will", "be", "a", "quick", "procedure", ",", "i", "hope", "."]
(c1-0 / hope-01
      :ARG0 (c1-3 / i)
      :ARG1 (c1-4 / procedure
                  :ARG1-of (c1-2 / quick-02)
                  :domain (c1-5 / it)
                  :mod (c1-6 / at-least))
      :mod (c1-1 / of-course))

# ::snt : Germanwings flight (registration D-AIPX)was lost from Flightradar24 feet UTC.
# ::tokens [":", "Germanwings", "flight", "(", "registration", "D", "-", "AIPX)was", "lost", "from", "Flightradar24", "feet", "UTC", "."]
# ::lemmas [":", "germanwing", "flight", "(", "registration", "d", "-", "aipx)wa", "lose", "from", "Flightradar24", "feet", "UTC", "."]
(c2-0 / lose-02
      :ARG1 (c2-1 / fly-01
                  :ARG0 (c2-6 / company
                              :name (c2-2 / name
                                          :op1 "Germanwings"))
                  :ARG1-of (c2-5 / register-02
                                 :ARG3 (c2-9 / thing
                                             :name (c2-3 / name
                                                         :op1 "D-AIPX"))))
      :source (c2-4 / publication
                    :name (c2-7 / name
                                :op1 "Flightradar24"))
      :time (c2-8 / date-entity
                  :time "UTC"))

# ::snt have you seen the pictures, I've never seen anything like it
# ::tokens ["have", "you", "seen", "the", "pictures", ",", "I", "'ve", "never", "seen", "anything", "like", "it"]
# ::lemmas ["have", "you", "see", "the", "picture", ",", "i", "'ve", "never", "see", "anything", "like", "it"]
(c3-9 / and
      :op1 (c3-8 / see-01
                 :polarity (c3-3 / amr-unknown)
                 :ARG0 (c3-0 / you)
                 :ARG1 (c3-6 / picture))
      :op2 (c3-1 / see-01
                 :ARG0 (c3-4 / i)
                 :ARG1 (c3-5 / anything
                             :ARG1-of (c3-7 / resemble-01
                                            :ARG2 c3-6))
                 :time (c3-2 / ever)
                 :polarity -))

# ::snt ive seen half a tail, but no high res images yet,
# ::tokens ["i", "ve", "seen", "half", "a", "tail", ",", "but", "no", "high", "res", "images", "yet", ","]
# ::lemmas ["i", "ve", "see", "half", "a", "tail", ",", "but", "no", "high", "res", "image", "yet", ","]
(c4-3 / contrast-01
      :ARG1 (c4-5 / see-01
                  :ARG0 (c4-2 / i)
                  :ARG1 (c4-6 / tail
                              :quant "1/2"))
      :ARG2 (c4-4 / image
                  :medium (c4-0 / high-res)
                  :time (c4-1 / yet)
                  :polarity -))

# ::snt maybe nose down but not fully vertical
# ::tokens ["maybe", "nose", "down", "but", "not", "fully", "vertical"]
# ::lemmas ["maybe", "nose", "down", "but", "not", "fully", "vertical"]
(c5-6 / contrast-01
      :ARG1 (c5-4 / possible-01
                  :ARG1 (c5-2 / nose
                              :direction (c5-5 / down-03)))
      :ARG2 (c5-0 / have-degree-91
                  :ARG1 c5-2
                  :ARG2 (c5-3 / vertical)
                  :ARG3 (c5-1 / full
                              :polarity -)))

# ::snt There is higher terrain in the area.
# ::tokens ["There", "is", "higher", "terrain", "in", "the", "area", "."]
# ::lemmas ["there", "be", "high", "terrain", "in", "the", "area", "."]
(c6-2 / be-located-at-91
      :ARG1 (c6-4 / terrain
                  :ARG1-of (c6-0 / have-degree-91
                                 :ARG2 (c6-5 / high-02
                                             :ARG1 c6-4)
                                 :ARG3 (c6-1 / more)))
      :ARG2 (c6-3 / area))

# ::snt Crashed.
# ::tokens ["Crashed", "."]
# ::lemmas ["crash", "."]
(c7-0 / crack-02)

# ::snt was looking at the same thing..
# ::tokens ["was", "looking", "at", "the", "same", "thing", ".."]
# ::lemmas ["be", "look", "at", "the", "same", "thing", ".."]
(c8-1 / look-01
      :ARG0 (c8-3 / i)
      :ARG1 (c8-2 / thing
                  :ARG1-of (c8-0 / same-01)))

# ::snt yes you do...
# ::tokens ["yes", "you", "do", "..."]
# ::lemmas ["yes", "you", "do", "..."]
(c9-1 / do-02
      :ARG0 (c9-0 / you))

# ::snt OMG : Germanwings flight (registration D-AIPX) was lost from Flightradar24 at feet at UTC time.
# ::tokens ["OMG", ":", "Germanwings", "flight", "(", "registration", "D", "-", "AIPX", ")", "was", "lost", "from", "Flightradar24", "at", "feet", "at", "UTC", "time", "."]
# ::lemmas ["OMG", ":", "germanwing", "flight", "(", "registration", "d", "-", "AIPX", ")", "be", "lose", "from", "Flightradar24", "at", "foot", "at", "UTC", "time", "."]
(c10-0 / lose-02
       :ARG1 (c10-1 / fly-01
                    :ARG0 (c10-7 / company
                                 :name (c10-3 / name
                                              :op1 "Germanwings"))
                    :ARG1-of (c10-6 / register-02
                                    :ARG3 (c10-9 / thing
                                                 :name (c10-4 / name
                                                              :op1 "D-AIPX"))))
       :ARG2 c10-7
       :name (c10-5 / name
                    :op1 "Flightradar24")
       :frequency (c10-2 / foot)
       :time (c10-8 / date-entity
                    :UTC "UTC"))

# ::snt it's major, what's the Live ATC coverage around there like, might be worth checking
# ::tokens ["it", "'s", "major", ",", "what", "'s", "the", "Live", "ATC", "coverage", "around", "there", "like", ",", "might", "be", "worth", "checking"]
# ::lemmas ["it", "be", "major", ",", "what", "be", "the", "Live", "atc", "coverage", "around", "there", "like", ",", "might", "be", "worth", "check"]
(c11-1 / multi-sentence
       :snt1 (c11-5 / major-02
                    :ARG1 (c11-3 / it))
       :snt2 (c11-6 / resemble-01
                    :ARG1 (c11-7 / cover-03
                                 :ARG1 (c11-8 / company
                                              :name (c11-4 / name
                                                           :op1 "Live"
                                                           :op2 "ATC"))
                                 :location (c11-12 / around
                                                   :op1 (c11-11 / there)))
                    :ARG2 (c11-2 / amr-unknown))
       :snt3 (c11-9 / possible-01
                    :ARG1 (c11-0 / worth-02
                                 :ARG1 (c11-10 / check-01
                                               :ARG1 c11-7))))

# ::snt if signal lost at feet does this imply destruction of plane in the air?
# ::tokens ["if", "signal", "lost", "at", "feet", "does", "this", "imply", "destruction", "of", "plane", "in", "the", "air", "?"]
# ::lemmas ["if", "signal", "lose", "at", "foot", "do", "this", "imply", "destruction", "of", "plane", "in", "the", "air", "?"]
(c12-3 / imply-01
       :polarity (c12-8 / amr-unknown)
       :ARG0 (c12-7 / this)
       :ARG1 (c12-5 / destroy-01
                    :ARG1 (c12-4 / plane)
                    :location (c12-2 / air))
       :condition (c12-0 / lose-02
                         :ARG1 (c12-6 / signal)
                         :location (c12-1 / foot)))

# ::snt Airbus passenger plane crash - France RT : Germanwings flight lost from Flightradar24 ft
# ::tokens ["Airbus", "passenger", "plane", "crash", "-", "France", "RT", ":", "Germanwings", "flight", "lost", "from", "Flightradar24", "ft"]
# ::lemmas ["Airbus", "passenger", "plane", "crash", "-", "France", "RT", ":", "germanwing", "flight", "lose", "from", "Flightradar24", "ft"]
(c13-8 / crash-01
       :ARG1 (c13-6 / plane
                    :mod (c13-13 / passenger)
                    :poss (c13-7 / company
                                 :name (c13-4 / name
                                              :op1 "Airbus")))
       :location (c13-12 / country
                         :name (c13-5 / name
                                      :op1 "France"))
       :ARG0-of (c13-15 / cause-01
                        :ARG1 (c13-0 / lose-02
                                     :ARG1 (c13-1 / fly-01
                                                  :ARG0 (c13-2 / company
                                                               :name (c13-9 / name
                                                                            :op1 "Germanywings")))
                                     :source (c13-14 / aircraft-type
                                                     :name (c13-10 / name
                                                                   :op1 "Flightradar24"))
                                     :extent (c13-11 / distance-quantity
                                                     :unit (c13-3 / foot)
                                                     :quant 24))))

# ::snt Oh no... : Germanwings flight [...] lost from Flightradar24 at feet at UTC time.
# ::tokens ["Oh", "no", "...", ":", "Germanwings", "flight", "[", "...", "]", "lost", "from", "Flightradar24", "at", "feet", "at", "UTC", "time", "."]
# ::lemmas ["oh", "no", "...", ":", "germanwing", "flight", "[", "...", "]", "lose", "from", "Flightradar24", "at", "foot", "at", "UTC", "time", "."]
(c14-3 / multi-sentence
       :snt1 (c14-6 / oh-no
                    :mode expressive)
       :snt2 (c14-2 / lose-02
                    :ARG1 (c14-4 / fly-01
                                 :ARG1 (c14-0 / wing
                                              :part-of (c14-10 / military
                                                               :name (c14-8 / name
                                                                            :op1 "Germanwings"))))
                    :ARG2 (c14-12 / aircraft-type
                                  :name (c14-9 / name
                                               :op1 "Flightradar24"))
                    :time (c14-11 / date-entity
                                  :time "UTC")
                    :quant (c14-5 / multiple
                                  :op1 (c14-1 / distance-quantity
                                              :unit (c14-7 / foot)
                                              :quant 1))))

# ::snt Lufthansa &amp; Airbus
# ::tokens ["Lufthansa", "&", "amp", ";", "Airbus"]
# ::lemmas ["Lufthansa", "&", "amp", ";", "Airbus"]
(c15-4 / and
       :op1 (c15-3 / company
                   :name (c15-0 / name
                                :op1 "Lufthansa"
                                :op2 "&amp"))
       :op2 (c15-2 / company
                   :name (c15-1 / name
                                :op1 "Airbus")))

# ::snt yeah, and everything is already moving at a fast rate
# ::tokens ["yeah", ",", "and", "everything", "is", "already", "moving", "at", "a", "fast", "rate"]
# ::lemmas ["yeah", ",", "and", "everything", "be", "already", "move", "at", "a", "fast", "rate"]
(c16-6 / and
       :op2 (c16-2 / move-01
                   :ARG1 (c16-3 / everything)
                   :time (c16-4 / already)
                   :manner (c16-5 / rate
                                  :ARG1-of (c16-1 / fast-02)))
       :mod (c16-0 / yeah
                   :mode expressive))

# ::snt : Germanwings flight was lost from Flightradar24 at feet at UTC time.
# ::tokens [":", "Germanwings", "flight", "was", "lost", "from", "Flightradar24", "at", "feet", "at", "UTC", "time", "."]
# ::lemmas [":", "germanwing", "flight", "be", "lose", "from", "Flightradar24", "at", "foot", "at", "UTC", "time", "."]
(c17-0 / lose-02
       :ARG1 (c17-2 / fly-01
                    :ARG0 (c17-1 / military
                                 :name (c17-4 / name
                                              :op1 "Germanwings")))
       :ARG2 (c17-7 / aircraft-type
                    :name (c17-5 / name
                                 :op1 "Flightradar24"))
       :manner (c17-3 / foot)
       :time (c17-6 / date-entity
                    :UTC "UTC"))

# ::snt Any news on passengers?
# ::tokens ["Any", "news", "on", "passengers", "?"]
# ::lemmas ["any", "news", "on", "passenger", "?"]
(c18-0 / news
       :topic (c18-1 / passenger)
       :mod (c18-3 / any)
       :polarity (c18-2 / amr-unknown))

# ::snt Shit : Germanwings flight was lost from Flightradar24 at feet at UTC time.
# ::tokens ["Shit", ":", "Germanwings", "flight", "was", "lost", "from", "Flightradar24", "at", "feet", "at", "UTC", "time", "."]
# ::lemmas ["shit", ":", "germanwing", "flight", "be", "lose", "from", "Flightradar24", "at", "foot", "at", "UTC", "time", "."]
(c19-0 / lose-02
       :ARG1 (c19-1 / fly-01
                    :ARG1 (c19-7 / aircraft-type
                                 :name (c19-3 / name
                                              :op1 "Germanwings")
                                 :ARG2-of c19-0))
       :name (c19-4 / name
                    :op1 "Flightradar24")
       :time (c19-5 / date-entity
                    :time "UTC")
       :quant (c19-2 / foot)
       :mod (c19-6 / shit
                   :mode expressive))

# ::snt look at that vertical speed.
# ::tokens ["look", "at", "that", "vertical", "speed", "."]
# ::lemmas ["look", "at", "that", "vertical", "speed", "."]
(c20-1 / look-01
       :ARG0 (c20-0 / you)
       :ARG1 (c20-3 / speed
                    :mod (c20-4 / that)
                    :mod (c20-2 / vertical))
       :mode imperative)

# ::snt Germanwings flight (D-AIPX) lost from Flightradar24 at feet at UTC time. Via
# ::tokens ["Germanwings", "flight", "(", "D", "-", "AIPX", ")", "lost", "from", "Flightradar24", "at", "feet", "at", "UTC", "time", ".", "Via"]
# ::lemmas ["germanwing", "flight", "(", "d", "-", "aipx", ")", "lose", "from", "Flightradar24", "at", "foot", "at", "UTC", "time", ".", "via"]
(c21-1 / multi-sentence
       :snt1 (c21-0 / lose-02
                    :ARG1 (c21-2 / fly-01
                                 :ARG0 (c21-10 / company
                                               :name (c21-6 / name
                                                            :op1 "Germanwings"))
                                 :ARG1-of (c21-9 / call-01
                                                 :ARG2 (c21-7 / name
                                                              :op1 "D-AIPX")))
                    :ARG3 (c21-5 / fly-01
                                 :ARG2 c21-10
                                 :name (c21-8 / name
                                              :op1 "Flightradar24")))
       :extent (c21-4 / foot)
       :time (c21-11 / date-entity
                     :time "UTC")
       :snt2 (c21-3 / byline-91))

# ::snt by the other hand, i've heard the plane was ascending for a while BEFORE the crash...(i dont know if its true)
# ::tokens ["by", "the", "other", "hand", ",", "i", "'ve", "heard", "the", "plane", "was", "ascending", "for", "a", "while", "BEFORE", "the", "crash", "...", "(i", "do", "nt", "know", "if", "its", "true", ")"]
# ::lemmas ["by", "the", "other", "hand", ",", "i", "'ve", "hear", "the", "plane", "be", "ascend", "for", "a", "while", "before", "the", "crash", "...", "(i", "do", "not", "know", "if", "its", "true", ")"]
(c22-6 / contrast-01
       :ARG2 (c22-0 / hear-01
                    :ARG0 (c22-3 / i)
                    :ARG1 (c22-9 / ascend-01
                                 :ARG1 (c22-4 / plane)
                                 :duration (c22-1 / while)
                                 :time (c22-2 / before
                                              :op1 (c22-5 / crash-01)))
                    :ARG1-of (c22-7 / know-01
                                    :ARG0 c22-3
                                    :ARG1-of (c22-8 / possible-01)
                                    :polarity -)))

# ::snt : Germanwings flight was lost from Flightradar24 at feet at UTC time.
# ::tokens [":", "Germanwings", "flight", "was", "lost", "from", "Flightradar24", "at", "feet", "at", "UTC", "time", "."]
# ::lemmas [":", "germanwing", "flight", "be", "lose", "from", "Flightradar24", "at", "foot", "at", "UTC", "time", "."]
(c23-0 / lose-02
       :ARG1 (c23-2 / fly-01
                    :ARG0 (c23-1 / military
                                 :name (c23-4 / name
                                              :op1 "Germanwings")))
       :ARG2 (c23-7 / aircraft-type
                    :name (c23-5 / name
                                 :op1 "Flightradar24"))
       :manner (c23-3 / foot)
       :time (c23-6 / date-entity
                    :UTC "UTC"))

# ::snt Do you think so? I've seen a tail part... Im not absolutely sure but... Maybe a down nose crash was possible...
# ::tokens ["Do", "you", "think", "so", "?", "I", "'ve", "seen", "a", "tail", "part", "...", "I", "m", "not", "absolutely", "sure", "but", "...", "Maybe", "a", "down", "nose", "crash", "was", "possible", "..."]
# ::lemmas ["do", "you", "think", "so", "?", "i", "'ve", "see", "a", "tail", "part", "...", "i", "m", "not", "absolutely", "sure", "but", "...", "maybe", "a", "down", "nose", "crash", "be", "possible", "..."]
(c24-2 / multi-sentence
       :snt1 (c24-14 / think-01
                     :polarity (c24-16 / amr-unknown)
                     :ARG0 (c24-0 / you)
                     :ARG1 (c24-13 / so))
       :snt2 (c24-3 / see-01
                    :ARG0 (c24-5 / i)
                    :ARG1 (c24-7 / part
                                 :part-of (c24-12 / tail)))
       :snt3 (c24-9 / contrast-01
                    :ARG1 (c24-1 / sure-02
                                 :ARG0 (c24-10 / i)
                                 :degree (c24-4 / absolute)
                                 :polarity -)
                    :ARG2 (c24-15 / possible-01
                                  :ARG1 (c24-8 / crash-01
                                               :ARG1 (c24-6 / nose
                                                            :direction (c24-11 / down))))))

# ::snt makes me think it didn't come down nose, wing or tail first
# ::tokens ["makes", "me", "think", "it", "did", "n't", "come", "down", "nose", ",", "wing", "or", "tail", "first"]
# ::lemmas ["make", "i", "think", "it", "do", "not", "come", "down", "nose", ",", "wing", "or", "tail", "first"]
(c25-2 / make-02
       :ARG1 (c25-10 / think-01
                     :ARG0 (c25-4 / i)
                     :ARG1 (c25-7 / come-01
                                  :ARG1 (c25-8 / it)
                                  :direction (c25-6 / down)
                                  :path (c25-3 / or
                                               :op1 (c25-5 / nose)
                                               :op2 (c25-0 / wing)
                                               :op3 (c25-9 / tail))
                                  :ord (c25-1 / ordinal-entity
                                              :value 1)
                                  :polarity -)))

# ::snt strange descent started over sea. Hypoxia ?
# ::tokens ["strange", "descent", "started", "over", "sea", ".", "Hypoxia", "?"]
# ::lemmas ["strange", "descent", "start", "over", "sea", ".", "Hypoxia", "?"]
(c26-2 / multi-sentence
       :snt1 (c26-6 / start-01
                    :ARG1 (c26-5 / descend-01
                                 :manner (c26-4 / strange))
                    :path (c26-3 / over
                                 :op1 (c26-1 / sea)))
       :snt2 (c26-0 / hypoxia
                    :polarity (c26-7 / amr-unknown)))

# ::snt , yes...
# ::tokens [",", "yes", "..."]
# ::lemmas [",", "yes", "..."]
(c27-0 / yes)

# ::snt Amazing. Im absolutly agree with you. I've never seen before that level of disintegration. What a hard crash...
# ::tokens ["Amazing", ".", "I", "m", "absolutly", "agree", "with", "you", ".", "I", "'ve", "never", "seen", "before", "that", "level", "of", "disintegration", ".", "What", "a", "hard", "crash", "..."]
# ::lemmas ["amazing", ".", "i", "m", "absolutly", "agree", "with", "you", ".", "i", "'ve", "never", "see", "before", "that", "level", "of", "disintegration", ".", "what", "a", "hard", "crash", "..."]
(c28-3 / multi-sentence
       :snt1 (c28-14 / amaze-01)
       :snt2 (c28-7 / agree-01
                    :ARG0 (c28-8 / i)
                    :ARG2 (c28-1 / you)
                    :manner (c28-9 / absolute)
                    :polarity -)
       :snt3 (c28-12 / see-01
                     :ARG0 c28-8
                     :time (c28-5 / ever)
                     :time (c28-4 / before
                                  :op1 (c28-2 / level
                                              :degree-of (c28-10 / disintegrate-01)
                                              :mod (c28-13 / that)))
                     :polarity -)
       :snt4 (c28-11 / crash-01
                     :ARG1-of (c28-0 / hard-02)
                     :degree (c28-6 / so)))

# ::snt at least it's not in the sea so they can recover everything, well almost
# ::tokens ["at", "least", "it", "'s", "not", "in", "the", "sea", "so", "they", "can", "recover", "everything", ",", "well", "almost"]
# ::lemmas ["at", "least", "it", "be", "not", "in", "the", "sea", "so", "they", "can", "recover", "everything", ",", "well", "almost"]
(c29-0 / be-located-at-91
       :ARG1 (c29-3 / it)
       :ARG2 (c29-6 / sea)
       :mod (c29-8 / at-least)
       :purpose (c29-4 / possible-01
                       :ARG1 (c29-5 / recover-02
                                    :ARG0 (c29-7 / they)
                                    :ARG1 (c29-1 / everything)))
       :mod (c29-2 / almost)
       :polarity -)

# ::snt sad
# ::tokens ["sad"]
# ::lemmas ["sad"]
(c30-0 / sad-02)

# ::snt usually you would expect to see more
# ::tokens ["usually", "you", "would", "expect", "to", "see", "more"]
# ::lemmas ["usually", "you", "would", "expect", "to", "see", "more"]
(c32-3 / expect-01
       :ARG0 (c32-0 / you)
       :ARG1 (c32-4 / see-01
                    :ARG0 c32-0
                    :ARG1 (c32-1 / more))
       :mod (c32-2 / usual))
