# ::snt terrible loss
# ::tokens ["terrible", "loss"]
# ::lemmas ["terrible", "loss"]
(c1-1 / lose-02
      :mod (c1-0 / horrible))

# ::snt profile looks like a constant ROD, suggestive of cabin press/fire/smoke, OP DESC w/ speed brakes
# ::tokens ["profile", "looks", "like", "a", "constant", "ROD", ",", "suggestive", "of", "cabin", "press", "/", "fire", "/", "smoke", ",", "OP", "DESC", "w/", "speed", "brakes"]
# ::lemmas ["profile", "look", "like", "a", "constant", "ROD", ",", "suggestive", "of", "cabin", "press", "/", "fire", "/", "smoke", ",", "OP", "desc", "w/", "speed", "brake"]
(c2-1 / look-02
      :ARG0 (c2-10 / profile)
      :ARG1 (c2-11 / resemble-01
                   :ARG1 c2-10
                   :ARG2 (c2-15 / thing
                                :name (c2-9 / name
                                            :op1 "ROD")
                                :mod (c2-12 / constant)
                                :ARG0-of (c2-8 / indicate-01
                                               :ARG1 (c2-14 / slash
                                                            :op1 (c2-16 / press
                                                                        :mod (c2-13 / cabin))
                                                            :op2 (c2-2 / fire
                                                                       :mod c2-13)
                                                            :op3 (c2-7 / smoke-02
                                                                       :mod c2-13)))))
      :ARG1-of (c2-3 / mean-01
                     :ARG2 (c2-4 / product
                                 :name c2-9
                                 :op1 "OP")
                     :ARG0-of (c2-0 / work-09)
                     :ARG0-of (c2-5 / brake-01
                                    :ARG1 (c2-6 / speed))))

# ::snt Who needs terrorists?
# ::tokens ["Who", "needs", "terrorists", "?"]
# ::lemmas ["who", "need", "terrorist", "?"]
(c3-0 / need-01
      :ARG0 (c3-2 / amr-unknown)
      :ARG1 (c3-1 / terrorist))

# ::snt not true... descend didnt exceed the ft/m. Normal descend speed.
# ::tokens ["not", "true", "...", "descend", "did", "nt", "exceed", "the", "ft", "/", "m.", "Normal", "descend", "speed", "."]
# ::lemmas ["not", "true", "...", "descend", "do", "nt", "exceed", "the", "ft", "/", "m.", "Normal", "descend", "speed", "."]
(c4-2 / multi-sentence
      :snt1 (c4-10 / true-01
                   :polarity -)
      :snt2 (c4-3 / exceed-01
                  :ARG0 (c4-7 / descend-01)
                  :ARG1 (c4-6 / rate-entity-91
                              :ARG1 (c4-0 / distance-quantity
                                          :unit (c4-1 / foot)
                                          :quant 1)
                              :ARG2 (c4-8 / temporal-quantity
                                          :unit (c4-5 / meter)
                                          :quant 1))
                  :polarity -)
      :snt3 (c4-9 / speed
                  :mod (c4-11 / descend-01)
                  :ARG1-of (c4-4 / normal-02)))

# ::snt CERNed. A new verb.
# ::tokens ["CERNed", ".", "A", "new", "verb", "."]
# ::lemmas ["CERNed", ".", "a", "new", "verb", "."]
(c5-3 / multi-sentence
      :snt1 (c5-2 / cERN-01)
      :snt2 (c5-1 / verb
                  :ARG1-of (c5-0 / new-01)))
