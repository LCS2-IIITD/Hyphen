# ::snt just.
# ::tokens ["just", "."]
# ::lemmas ["just", "."]
(c1-0 / just)

# ::snt after this week they will need to work. Nobody's gonna buy their story.
# ::tokens ["after", "this", "week", "they", "will", "need", "to", "work", ".", "Nobody", "'s", "gon", "na", "buy", "their", "story", "."]
# ::lemmas ["after", "this", "week", "they", "will", "need", "to", "work", ".", "nobody", "be", "going", "to", "buy", "their", "story", "."]
(c2-1 / multi-sentence
      :snt1 (c2-4 / need-01
                  :ARG0 (c2-9 / they)
                  :ARG1 (c2-0 / work-01
                              :ARG0 c2-9)
                  :time (c2-10 / after
                               :op1 (c2-3 / week
                                          :mod (c2-7 / this))))
      :snt2 (c2-2 / buy-05
                  :ARG0 (c2-5 / nobody)
                  :ARG1 (c2-8 / story
                              :poss (c2-6 / they))
                  :polarity -))

# ::snt The sad thing is, from their perspective, this is the system working.
# ::tokens ["The", "sad", "thing", "is", ",", "from", "their", "perspective", ",", "this", "is", "the", "system", "working", "."]
# ::lemmas ["the", "sad", "thing", "be", ",", "from", "their", "perspective", ",", "this", "be", "the", "system", "work", "."]
(c3-4 / sad-02
      :ARG1-of (c3-3 / cause-01
                     :ARG0 (c3-0 / work-09
                                 :ARG1 (c3-1 / system)
                                 :manner (c3-2 / perspective
                                               :poss (c3-5 / they)))))

# ::snt Incompetent in some things, we saw that, but cops know how to handle this part.
# ::tokens ["Incompetent", "in", "some", "things", ",", "we", "saw", "that", ",", "but", "cops", "know", "how", "to", "handle", "this", "part", "."]
# ::lemmas ["Incompetent", "in", "some", "thing", ",", "we", "see", "that", ",", "but", "cop", "know", "how", "to", "handle", "this", "part", "."]
(c4-6 / contrast-01
      :ARG1 (c4-5 / competent-01
                  :ARG2 (c4-10 / thing
                               :mod (c4-8 / some))
                  :ARG1-of (c4-2 / see-01
                                 :ARG0 (c4-1 / we))
                  :polarity -)
      :ARG2 (c4-3 / know-03
                  :ARG0 (c4-7 / cop)
                  :ARG1 (c4-0 / handle-01
                              :ARG0 c4-7
                              :ARG1 (c4-4 / part
                                          :mod (c4-9 / this)))))

# ::snt Friends, the police aren't incompetent. They are building a defense &amp; know they don't have to work hard at it.
# ::tokens ["Friends", ",", "the", "police", "are", "n't", "incompetent", ".", "They", "are", "building", "a", "defense", "&", "amp", ";", "know", "they", "do", "n't", "have", "to", "work", "hard", "at", "it", "."]
# ::lemmas ["friend", ",", "the", "police", "be", "not", "incompetent", ".", "they", "be", "build", "a", "defense", "&", "amp", ";", "know", "they", "do", "not", "have", "to", "work", "hard", "at", "it", "."]
(c5-3 / multi-sentence
      :snt1 (c5-12 / competent-01
                   :ARG1 (c5-10 / police)
                   :polarity -)
      :snt2 (c5-15 / and
                   :op1 (c5-5 / build-01
                              :ARG0 (c5-13 / they)
                              :ARG1 (c5-7 / and
                                          :op1 (c5-11 / defend-01)
                                          :op2 (c5-9 / amp)))
                   :op2 (c5-8 / know-01
                              :ARG0 c5-13
                              :ARG1 (c5-6 / obligate-01
                                          :ARG1 c5-13
                                          :ARG2 (c5-1 / work-01
                                                      :ARG0 c5-13
                                                      :ARG1 c5-7
                                                      :ARG1-of (c5-0 / hard-02))
                                          :polarity -)))
      :snt3 c5-12
      :ARG1 (c5-14 / person
                   :ARG0-of (c5-2 / have-rel-role-91
                                  :ARG2 (c5-4 / friend)))
      :polarity -)

# ::snt they know they barely have to do anything to justify the murder of a young Black man. And the white majority will absorb it.
# ::tokens ["they", "know", "they", "barely", "have", "to", "do", "anything", "to", "justify", "the", "murder", "of", "a", "young", "Black", "man", ".", "And", "the", "white", "majority", "will", "absorb", "it", "."]
# ::lemmas ["they", "know", "they", "barely", "have", "to", "do", "anything", "to", "justify", "the", "murder", "of", "a", "young", "Black", "man", ".", "and", "the", "white", "majority", "will", "absorb", "it", "."]
(c6-4 / multi-sentence
      :snt1 (c6-9 / know-01
                  :ARG0 (c6-15 / they)
                  :ARG1 (c6-6 / obligate-01
                              :ARG1 c6-15
                              :ARG2 (c6-12 / do-02
                                           :ARG0 c6-15
                                           :ARG1 (c6-16 / anything)
                                           :mod (c6-5 / barely)
                                           :purpose (c6-0 / justify-01
                                                          :ARG0 c6-15
                                                          :ARG1 (c6-11 / murder-01
                                                                       :ARG0 c6-15
                                                                       :ARG1 (c6-3 / man
                                                                                   :mod (c6-1 / young)
                                                                                   :ARG1-of (c6-13 / black-05)))))))
      :snt2 (c6-7 / and
                  :op2 (c6-10 / absorb-01
                              :ARG0 (c6-14 / majority
                                           :ARG1-of (c6-2 / white-02))
                              :ARG1 (c6-8 / it))))

# ::snt that's what has had me torn up all morning/afternoon...
# ::tokens ["that", "'s", "what", "has", "had", "me", "torn", "up", "all", "morning", "/", "afternoon", "..."]
# ::lemmas ["that", "be", "what", "have", "have", "i", "tear", "up", "all", "morning", "/", "afternoon", "..."]
(c7-7 / tear-up-04
      :ARG0 (c7-5 / that)
      :ARG1 (c7-3 / i)
      :time (c7-6 / slash
                  :op1 (c7-4 / date-entity
                             :dayperiod (c7-1 / morning))
                  :op2 (c7-0 / date-entity
                             :dayperiod (c7-8 / afternoon))
                  :mod (c7-2 / all)))

# ::snt They know they don't need to convince the public, just have enough lies to justify the internal investigation.
# ::tokens ["They", "know", "they", "do", "n't", "need", "to", "convince", "the", "public", ",", "just", "have", "enough", "lies", "to", "justify", "the", "internal", "investigation", "."]
# ::lemmas ["they", "know", "they", "do", "not", "need", "to", "convince", "the", "public", ",", "just", "have", "enough", "lie", "to", "justify", "the", "internal", "investigation", "."]
(c8-6 / know-01
      :ARG0 (c8-11 / they)
      :ARG1 (c8-13 / and
                   :op1 (c8-7 / need-01
                              :ARG0 c8-11
                              :ARG1 (c8-9 / convince-01
                                          :ARG0 c8-11
                                          :ARG1 (c8-8 / public))
                              :polarity -)
                   :op2 (c8-0 / have-03
                              :ARG0 c8-11
                              :ARG1 (c8-2 / lie-08
                                          :ARG0 c8-11
                                          :ARG1-of (c8-3 / have-quant-91
                                                         :ARG3 (c8-4 / enough)
                                                         :ARG6 (c8-1 / justify-01
                                                                     :ARG0 c8-11
                                                                     :ARG1 (c8-5 / investigate-01
                                                                                 :ARG1-of (c8-10 / internal-02)))))
                              :mod (c8-12 / just))))

# ::snt the defense doesn't even need to make sense, racist white people will fill in any blanks.
# ::tokens ["the", "defense", "does", "n't", "even", "need", "to", "make", "sense", ",", "racist", "white", "people", "will", "fill", "in", "any", "blanks", "."]
# ::lemmas ["the", "defense", "do", "not", "even", "need", "to", "make", "sense", ",", "racist", "white", "people", "will", "fill", "in", "any", "blank", "."]
(c9-10 / and
       :op1 (c9-5 / need-01
                  :ARG1 (c9-9 / sense-02
                              :ARG1 (c9-7 / defend-01))
                  :mod (c9-3 / even)
                  :polarity -)
       :op2 (c9-1 / fill-in-08
                  :ARG0 (c9-6 / person
                              :mod (c9-8 / racist)
                              :ARG1-of (c9-0 / white-02))
                  :ARG1 (c9-2 / blank
                              :mod (c9-4 / any))))

# ::snt they're digging their own graves, shoplifting for $3 at most doesn't justify killing an armed child
# ::tokens ["they", "'re", "digging", "their", "own", "graves", ",", "shoplifting", "for", "$", "3", "at", "most", "does", "n't", "justify", "killing", "an", "armed", "child"]
# ::lemmas ["they", "be", "dig", "their", "own", "grave", ",", "shoplift", "for", "$", "3", "at", "most", "do", "not", "justify", "kill", "an", "armed", "child"]
(c10-12 / and
        :op1 (c10-6 / dig-01
                    :ARG0 (c10-11 / they)
                    :ARG1 (c10-8 / grave
                                 :poss c10-11))
        :op2 (c10-0 / justify-01
                    :ARG0 (c10-10 / shoplift-01
                                  :ARG0 c10-11
                                  :ARG1-of (c10-7 / cost-01
                                                  :ARG2 (c10-2 / monetary-quantity
                                                               :unit (c10-1 / dollar)
                                                               :mod (c10-3 / at-most)
                                                               :quant 3)))
                    :ARG1 (c10-4 / kill-01
                                 :ARG1 (c10-9 / child
                                              :ARG1-of (c10-5 / arm-01)))
                    :polarity -))

# ::snt Y'all might dig this - an impromptu recording of mine from last night &gt;
# ::tokens ["Y'all", "might", "dig", "this", "-", "an", "impromptu", "recording", "of", "mine", "from", "last", "night", "&", "gt", ";"]
# ::lemmas ["Y'all", "might", "dig", "this", "-", "an", "impromptu", "recording", "of", "mine", "from", "last", "night", "&", "gt", ";"]
(c11-5 / possible-01
       :ARG1 (c11-6 / dig-01
                    :ARG0 (c11-0 / you
                                 :mod (c11-11 / all))
                    :ARG1 (c11-10 / this
                                  :ARG1-of (c11-2 / mean-01
                                                  :ARG2 (c11-7 / record-01
                                                               :ARG0 (c11-3 / i)
                                                               :time (c11-1 / date-entity
                                                                            :dayperiod (c11-4 / night)
                                                                            :mod (c11-9 / yesterday))
                                                               :mod (c11-8 / impromptu))))))

# ::snt Not interviewing key eye witnesses tells you basically all you needed to know.
# ::tokens ["Not", "interviewing", "key", "eye", "witnesses", "tells", "you", "basically", "all", "you", "needed", "to", "know", "."]
# ::lemmas ["not", "interview", "key", "eye", "witness", "tell", "you", "you", "all", "you", "need", "to", "know", "."]
(c12-9 / tell-01
       :ARG0 (c12-5 / interview-01
                    :ARG1 (c12-8 / person
                                 :ARG0-of (c12-0 / witness-01
                                                 :ARG1 (c12-3 / eye))
                                 :ARG1-of (c12-6 / key-02))
                    :polarity -)
       :ARG1 (c12-10 / all
                     :ARG1-of (c12-4 / know-01
                                     :ARG0 (c12-1 / you)
                                     :ARG1-of (c12-7 / need-01
                                                     :ARG0 c12-1)
                                     :mod (c12-2 / basic)))
       :ARG2 c12-1)
