# ::snt Thats a look of a man thinking "Fuck I cant bullshit my way out of this"
# ::tokens ["That", "s", "a", "look", "of", "a", "man", "thinking", "\"", "Fuck", "I", "ca", "nt", "bullshit", "my", "way", "out", "of", "this", "\""]
# ::lemmas ["that", "s", "a", "look", "of", "a", "man", "think", "\"", "Fuck", "i", "can", "not", "bullshit", "my", "way", "out", "of", "this", "\""]
(c1-1 / look-02
      :ARG0 (c1-2 / man)
      :ARG1 (c1-8 / think-01
                  :ARG0 c1-2
                  :ARG1 (c1-6 / possible-01
                              :ARG1 (c1-3 / bullshit-01
                                          :ARG0 c1-2
                                          :ARG1 (c1-0 / way
                                                      :path-of (c1-4 / out-06
                                                                     :ARG1 c1-2
                                                                     :ARG2 (c1-7 / this))))
                              :polarity -))
      :domain (c1-5 / that))

# ::snt Oh but she's very fluent.: you sound like you need some fucking English lessons
# ::tokens ["Oh", "but", "she", "'s", "very", "fluent", ".", ":", "you", "sound", "like", "you", "need", "some", "fucking", "English", "lessons"]
# ::lemmas ["oh", "but", "she", "be", "very", "fluent", ".", ":", "you", "sound", "like", "you", "need", "some", "fucking", "English", "lesson"]
(c2-2 / multi-sentence
      :snt1 (c2-10 / contrast-01
                   :ARG2 (c2-1 / fluent
                               :domain (c2-12 / she)
                               :degree (c2-8 / very)))
      :snt2 (c2-5 / sound-01
                  :ARG1 (c2-0 / you)
                  :ARG2 (c2-7 / need-01
                              :ARG0 c2-0
                              :ARG1 (c2-3 / lesson
                                          :mod (c2-11 / language
                                                      :name (c2-9 / name
                                                                  :op1 "English"))
                                          :quant (c2-4 / some)
                                          :mod (c2-6 / fucking
                                                     :mode expressive)))))

# ::snt : They didn't give the chief no type of time to rehearse his lines and now he stuck looking like...
# ::tokens [":", "They", "did", "n't", "give", "the", "chief", "no", "type", "of", "time", "to", "rehearse", "his", "lines", "and", "now", "he", "stuck", "looking", "like", "..."]
# ::lemmas [":", "they", "do", "not", "give", "the", "chief", "no", "type", "of", "time", "to", "rehearse", "his", "line", "and", "now", "he", "stick", "look", "like", "..."]
(c3-10 / and
       :op1 (c3-5 / give-01
                  :ARG0 (c3-9 / they)
                  :ARG1 (c3-7 / time
                              :mod (c3-2 / type))
                  :ARG2 (c3-4 / chief)
                  :purpose (c3-3 / rehearse-01
                                 :ARG0 c3-4
                                 :ARG1 (c3-0 / line
                                             :poss c3-4))
                  :polarity -)
       :op2 (c3-8 / stick-01
                  :ARG1 c3-4
                  :ARG2 (c3-6 / look-02
                              :ARG0 c3-4)
                  :time (c3-1 / now)))

# ::snt it's the look of a man who knows nothing is going to happen anyway.
# ::tokens ["it", "'s", "the", "look", "of", "a", "man", "who", "knows", "nothing", "is", "going", "to", "happen", "anyway", "."]
# ::lemmas ["it", "be", "the", "look", "of", "a", "man", "who", "know", "nothing", "be", "go", "to", "happen", "anyway", "."]
(c4-0 / look-02
      :ARG0 (c4-1 / man
                  :ARG0-of (c4-4 / know-01
                                 :ARG1 (c4-3 / nothing
                                             :mod (c4-5 / anyway))))
      :ARG1 (c4-2 / it))

# ::snt . Lmao he look so scared. Man thts dude don't say nothing wrong but he's lien now
# ::tokens [".", "Lmao", "he", "look", "so", "scared", ".", "Man", "thts", "dude", "do", "n't", "say", "nothing", "wrong", "but", "he", "'s", "lien", "now"]
# ::lemmas [".", "Lmao", "he", "look", "so", "scared", ".", "man", "tht", "dude", "do", "not", "say", "nothing", "wrong", "but", "he", "be", "lien", "now"]
(c5-1 / multi-sentence
      :snt1 (c5-8 / look-02
                  :ARG0 (c5-7 / he)
                  :ARG1 (c5-4 / scare-01
                              :ARG0 c5-7
                              :degree (c5-9 / so))
                  :mod (c5-17 / laugh-01
                              :ARG0 (c5-12 / i)
                              :manner (c5-0 / loud)
                              :mode expressive))
      :snt2 (c5-16 / contrast-01
                   :ARG1 (c5-14 / say-01
                                :ARG0 (c5-2 / dude
                                            :poss (c5-18 / they))
                                :ARG1 (c5-10 / nothing
                                             :ARG1-of (c5-11 / wrong-02))
                                :polarity -)
                   :ARG2 (c5-6 / lien
                               :domain (c5-5 / he)
                               :time (c5-15 / now)))
      :snt3 c5-17
      :ARG0 (c5-13 / i)
      :manner (c5-3 / loud)
      :mode expressive)

# ::snt They didn't give the chief no type of time to rehearse his lines and now he stuck looking like...
# ::tokens ["They", "did", "n't", "give", "the", "chief", "no", "type", "of", "time", "to", "rehearse", "his", "lines", "and", "now", "he", "stuck", "looking", "like", "..."]
# ::lemmas ["they", "do", "not", "give", "the", "chief", "no", "type", "of", "time", "to", "rehearse", "his", "line", "and", "now", "he", "stick", "look", "like", "..."]
(c6-10 / and
       :op1 (c6-5 / give-01
                  :ARG0 (c6-9 / they)
                  :ARG1 (c6-7 / time
                              :mod (c6-2 / type)
                              :purpose (c6-3 / rehearse-01
                                             :ARG0 (c6-4 / chief)
                                             :ARG1 (c6-0 / line
                                                         :poss c6-4)))
                  :ARG2 c6-4
                  :polarity -)
       :op2 (c6-8 / stick-01
                  :ARG1 c6-4
                  :ARG2 (c6-6 / look-02
                              :ARG0 c6-4)
                  :time (c6-1 / now)))

# ::snt That's what we call a "flop sweat," right there.
# ::tokens ["That", "'s", "what", "we", "call", "a", "\"", "flop", "sweat", ",", "\"", "right", "there", "."]
# ::lemmas ["that", "be", "what", "we", "call", "a", "\"", "flop", "sweat", ",", "\"", "right", "there", "."]
(c7-3 / call-01
      :ARG0 (c7-0 / we)
      :ARG1 (c7-6 / that)
      :ARG2 (c7-5 / sweat
                  :mod (c7-1 / flip))
      :location (c7-4 / there
                      :mod (c7-2 / right)))
