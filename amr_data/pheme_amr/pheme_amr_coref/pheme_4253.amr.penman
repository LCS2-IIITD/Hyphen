# ::snt I believe you mean "Josie". He is totally being railroaded and it seems like everyone is in on it.
# ::tokens ["I", "believe", "you", "mean", "\"", "Josie", "\"", ".", "He", "is", "totally", "being", "railroaded", "and", "it", "seems", "like", "everyone", "is", "in", "on", "it", "."]
# ::lemmas ["i", "believe", "you", "mean", "\"", "Josie", "\"", ".", "he", "be", "totally", "be", "railroad", "and", "it", "seem", "like", "everyone", "be", "in", "on", "it", "."]
(c1-2 / multi-sentence
      :snt1 (c1-3 / believe-01
                  :ARG0 (c1-5 / i)
                  :ARG1 (c1-7 / mean-01
                              :ARG0 (c1-1 / you)
                              :ARG2 (c1-8 / person
                                          :name (c1-6 / name
                                                      :op1 "Josie"))))
      :snt2 (c1-13 / and
                   :op1 (c1-9 / railrocade-01
                              :ARG1 (c1-0 / he)
                              :degree (c1-11 / total))
                   :op2 (c1-10 / seem-01
                               :ARG1 (c1-12 / participate-01
                                            :ARG0 (c1-4 / everyone)
                                            :ARG1 c1-9))))

# ::snt He didn't act they way minutes before. He assaulted an elderly minority man.
# ::tokens ["He", "did", "n't", "act", "they", "way", "minutes", "before", ".", "He", "assaulted", "an", "elderly", "minority", "man", "."]
# ::lemmas ["he", "do", "not", "act", "they", "way", "minute", "before", ".", "he", "assault", "an", "elderly", "minority", "man", "."]
(c2-2 / multi-sentence
      :snt1 (c2-11 / act-01
                   :ARG0 (c2-0 / he)
                   :time (c2-4 / before
                               :quant (c2-7 / multiple
                                            :op1 (c2-10 / temporal-quantity
                                                        :unit (c2-1 / minute)
                                                        :quant 1)))
                   :polarity -)
      :snt2 (c2-6 / assault-01
                  :ARG0 (c2-3 / he)
                  :ARG1 (c2-8 / man
                              :mod (c2-9 / minority)
                              :mod (c2-5 / elderly))))

# ::snt You have absolutely no idea what you're talking about.
# ::tokens ["You", "have", "absolutely", "no", "idea", "what", "you", "'re", "talking", "about", "."]
# ::lemmas ["you", "have", "absolutely", "no", "idea", "what", "you", "be", "talk", "about", "."]
(c3-0 / have-03
      :ARG0 (c3-1 / you)
      :ARG1 (c3-2 / idea
                  :topic (c3-4 / thing
                               :ARG1-of (c3-3 / talk-01
                                              :ARG0 c3-1))
                  :degree (c3-5 / absolute)
                  :polarity -))

# ::snt so other black people who protesting won't beat or steal from them
# ::tokens ["so", "other", "black", "people", "who", "protesting", "wo", "n't", "beat", "or", "steal", "from", "them"]
# ::lemmas ["so", "other", "black", "people", "who", "protest", "will", "not", "beat", "or", "steal", "from", "they"]
(c4-2 / or
      :op1 (c4-1 / beat-01
                 :ARG0 (c4-3 / person
                             :ARG1-of (c4-4 / black-05)
                             :mod (c4-0 / other)
                             :ARG0-of (c4-7 / protest-01))
                 :ARG1 (c4-6 / they)
                 :polarity -)
      :op2 (c4-5 / steal-01
                 :ARG0 c4-3
                 :ARG2 c4-6
                 :polarity -))

# ::snt the post now trying to pretend it's being fair? We don't forget your reporting on this matter . This was a good cop!
# ::tokens ["the", "post", "now", "trying", "to", "pretend", "it", "'s", "being", "fair", "?", "We", "do", "n't", "forget", "your", "reporting", "on", "this", "matter", ".", "This", "was", "a", "good", "cop", "!"]
# ::lemmas ["the", "post", "now", "try", "to", "pretend", "it", "be", "be", "fair", "?", "we", "do", "not", "forget", "your", "reporting", "on", "this", "matter", ".", "this", "be", "a", "good", "cop", "!"]
(c5-3 / multi-sentence
      :snt1 (c5-14 / try-01
                   :polarity (c5-16 / amr-unknown)
                   :ARG0 (c5-8 / post)
                   :ARG1 (c5-15 / pretend-01
                                :ARG0 c5-8
                                :ARG1 (c5-2 / fair-01
                                            :ARG1 (c5-4 / it)))
                   :time (c5-6 / now))
      :snt2 (c5-5 / forget-01
                  :ARG0 (c5-0 / we)
                  :ARG1 (c5-9 / report-01
                              :ARG0 (c5-1 / you)
                              :ARG1 (c5-10 / matter
                                           :mod (c5-13 / this)))
                  :polarity -)
      :snt3 (c5-11 / cop
                   :ARG1-of (c5-12 / good-03)
                   :domain (c5-7 / this)))

# ::snt no I followed your point I was asking the doubter to think
# ::tokens ["no", "I", "followed", "your", "point", "I", "was", "asking", "the", "doubter", "to", "think"]
# ::lemmas ["no", "i", "follow", "your", "point", "i", "be", "ask", "the", "doubter", "to", "think"]
(c6-8 / and
      :op1 (c6-1 / follow-02
                 :ARG0 (c6-3 / i)
                 :ARG1 (c6-4 / point-04
                             :ARG0 (c6-0 / you)))
      :op2 (c6-2 / ask-02
                 :ARG0 c6-3
                 :ARG1 (c6-6 / think-01
                             :ARG0 (c6-7 / person
                                         :ARG0-of (c6-5 / doubt-01
                                                        :polarity -)
                                         :ARG2-of c6-2))))

# ::snt True that.
# ::tokens ["True", "that", "."]
# ::lemmas ["true", "that", "."]
(c7-0 / true-01
      :ARG1 (c7-1 / that))

# ::snt LOL lemme guess "Jodie" again? Gimme a break, this poor kid is getting railroaded beyond belief &amp; it's disgusting
# ::tokens ["LOL", "lemme", "guess", "\"", "Jodie", "\"", "again", "?", "Gimme", "a", "break", ",", "this", "poor", "kid", "is", "getting", "railroaded", "beyond", "belief", "&", "amp", ";", "it", "'s", "disgusting"]
# ::lemmas ["LOL", "lemme", "guess", "\"", "Jodie", "\"", "again", "?", "Gimme", "a", "break", ",", "this", "poor", "kid", "be", "getting", "railroad", "beyond", "belief", "&", "amp", ";", "it", "be", "disgusting"]
(c8-1 / multi-sentence
      :snt1 (c8-13 / guess-01
                   :ARG0 (c8-16 / i)
                   :ARG1 (c8-3 / person
                               :name (c8-10 / name
                                            :op1 "Jodie"))
                   :polarity (c8-7 / amr-unknown)
                   :mod (c8-8 / laugh-01
                              :ARG0 c8-16
                              :manner (c8-22 / loud)
                              :mode expressive)
                   :mod (c8-15 / again))
      :snt2 (c8-4 / give-01
                  :ARG0 (c8-20 / you)
                  :ARG1 (c8-9 / break-19)
                  :ARG2 (c8-18 / i)
                  :ARG1-of (c8-21 / cause-01
                                  :ARG0 (c8-2 / get-03
                                              :ARG1 (c8-19 / kid
                                                           :mod (c8-6 / poor)
                                                           :mod (c8-24 / this))
                                              :ARG2 (c8-12 / railroad-01
                                                           :ARG1 c8-19
                                                           :ARG2 (c8-17 / beyond
                                                                        :op1 (c8-11 / and
                                                                                    :op1 (c8-23 / believe-01)
                                                                                    :op2 (c8-14 / amp))))))
                  :mode imperative)
      :snt3 (c8-5 / disgust-01
                  :ARG0 (c8-0 / it)))

# ::snt Ok I've been really high back in my day, and I have never experienced one hallucination. Unbelievable.
# ::tokens ["Ok", "I", "'ve", "been", "really", "high", "back", "in", "my", "day", ",", "and", "I", "have", "never", "experienced", "one", "hallucination", ".", "Unbelievable", "."]
# ::lemmas ["ok", "i", "'ve", "be", "really", "high", "back", "in", "my", "day", ",", "and", "i", "have", "never", "experience", "one", "hallucination", ".", "unbelievable", "."]
(c9-2 / multi-sentence
      :snt1 (c9-11 / and
                   :op1 (c9-0 / high-04
                              :ARG1 (c9-6 / i)
                              :degree (c9-8 / really)
                              :time (c9-9 / day
                                          :poss c9-6)
                              :mod (c9-3 / back))
                   :op2 (c9-5 / experience-01
                              :ARG0 c9-6
                              :ARG1 (c9-1 / hallucinate-01
                                          :ARG0 c9-6
                                          :quant 1)
                              :time (c9-4 / ever)
                              :polarity -))
      :snt2 (c9-7 / possible-01
                  :ARG1 (c9-10 / believe-01
                               :ARG0 c9-6)
                  :polarity -))

# ::snt calling Rev Sharpton...
# ::tokens ["calling", "Rev", "Sharpton", "..."]
# ::lemmas ["call", "Rev", "Sharpton", "..."]
(c10-4 / call-01
       :ARG1 (c10-2 / person
                    :name (c10-1 / name
                                 :op1 "Sharpton")
                    :ARG0-of (c10-0 / have-org-role-91
                                    :ARG2 (c10-3 / reverend))))

# ::snt stay updated and read the article
# ::tokens ["stay", "updated", "and", "read", "the", "article"]
# ::lemmas ["stay", "update", "and", "read", "the", "article"]
(c11-5 / and
       :op1 (c11-4 / stay-01
                   :ARG1 (c11-0 / you)
                   :ARG3 (c11-1 / update-02
                                :ARG1 c11-0)
                   :mode imperative)
       :op2 (c11-3 / read-01
                   :ARG0 c11-0
                   :ARG1 (c11-2 / article)
                   :mode imperative))

# ::snt really Washington post? are you serious, you dont report the news you report BULLSHIT!
# ::tokens ["really", "Washington", "post", "?", "are", "you", "serious", ",", "you", "do", "nt", "report", "the", "news", "you", "report", "BULLSHIT", "!"]
# ::lemmas ["really", "Washington", "post", "?", "be", "you", "serious", ",", "you", "do", "not", "report", "the", "news", "you", "report", "BULLSHIT", "!"]
(c12-1 / multi-sentence
       :snt1 (c12-9 / real-04
                    :ARG1 (c12-8 / post-01
                                 :mod (c12-10 / city
                                              :name (c12-6 / name
                                                           :op1 "Washington")))
                    :polarity (c12-12 / amr-unknown))
       :snt2 (c12-11 / serious-01
                     :ARG1 (c12-0 / you)
                     :ARG2 (c12-5 / report-01
                                  :ARG0 c12-0
                                  :ARG1 (c12-7 / news)
                                  :polarity -)
                     :polarity (c12-4 / amr-unknown))
       :snt3 (c12-3 / report-01
                    :ARG0 c12-0
                    :ARG1 (c12-2 / bullshit)))

# ::snt No they did not. Forensics cannot prove intent. Forensics can only place someone at a scene.
# ::tokens ["No", "they", "did", "not", ".", "Forensics", "can", "not", "prove", "intent", ".", "Forensics", "can", "only", "place", "someone", "at", "a", "scene", "."]
# ::lemmas ["no", "they", "do", "not", ".", "forensic", "can", "not", "prove", "intent", ".", "forensic", "can", "only", "place", "someone", "at", "a", "scene", "."]
(c13-1 / multi-sentence
       :snt1 (c13-8 / do-02
                    :ARG0 (c13-12 / they)
                    :polarity -)
       :snt2 (c13-7 / possible-01
                    :ARG1 (c13-13 / prove-01
                                  :ARG0 (c13-0 / forensics)
                                  :ARG1 (c13-9 / thing
                                               :ARG1-of (c13-5 / intent-02)))
                    :polarity -)
       :snt3 (c13-2 / possible-01
                    :ARG1 (c13-11 / place-01
                                  :ARG0 (c13-6 / forensics)
                                  :ARG1 (c13-10 / someone)
                                  :ARG2 (c13-4 / scene)
                                  :mod (c13-3 / only))))

# ::snt well well .. All this media surrounding the shooting was just bs after forensic report
# ::tokens ["well", "well", "..", "All", "this", "media", "surrounding", "the", "shooting", "was", "just", "bs", "after", "forensic", "report"]
# ::lemmas ["well", "well", "..", "all", "this", "medium", "surround", "the", "shooting", "be", "just", "b", "after", "forensic", "report"]
(c14-4 / be-temporally-at-91
       :ARG1 (c14-3 / media
                    :mod (c14-9 / this)
                    :mod (c14-10 / all)
                    :ARG1-of (c14-8 / surround-01
                                    :ARG2 (c14-5 / shoot-02)))
       :ARG2 (c14-6 / after
                    :op1 (c14-7 / report-01
                                :ARG0 (c14-2 / forensic))
                    :mod (c14-0 / just))
       :mod (c14-1 / well
                   :mode expressive))

# ::snt forensic findings found he attack officer .
# ::tokens ["forensic", "findings", "found", "he", "attack", "officer", "."]
# ::lemmas ["forensic", "finding", "find", "he", "attack", "officer", "."]
(c15-1 / find-01
       :ARG0 c15-1
       :ARG1 (c15-4 / attack-01
                    :ARG0 (c15-0 / he)
                    :ARG1 (c15-2 / officer
                                 :ARG0-of (c15-5 / have-org-role-91
                                                 :ARG2 c15-4)))
       :manner (c15-3 / forensic))

# ::snt Two words define the credibility of Sharp'toon': Twana Brawley.
# ::tokens ["Two", "words", "define", "the", "credibility", "of", "Sharp'toon", "'", ":", "Twana", "Brawley", "."]
# ::lemmas ["Two", "word", "define", "the", "credibility", "of", "sharp'toon", "'", ":", "Twana", "Brawley", "."]
(c16-5 / define-01
       :ARG0 (c16-0 / word
                    :ARG1-of (c16-1 / mean-01
                                    :ARG2 (c16-4 / person
                                                 :name (c16-2 / name
                                                              :op1 "Twana"
                                                              :op2 "Brawley")))
                    :quant 2)
       :ARG1 (c16-6 / credibility
                    :poss (c16-7 / product
                                 :name (c16-3 / name
                                              :op1 "Sharp'toon"))))

# ::snt hmm shot at point blank range . Didn't have his hands up . Gun powder residue on his hands and fingers...
# ::tokens ["hmm", "shot", "at", "point", "blank", "range", ".", "Did", "n't", "have", "his", "hands", "up", ".", "Gun", "powder", "residue", "on", "his", "hands", "and", "fingers", "..."]
# ::lemmas ["hmm", "shoot", "at", "point", "blank", "range", ".", "do", "not", "have", "his", "hand", "up", ".", "Gun", "powder", "residue", "on", "his", "hand", "and", "finger", "..."]
(c17-2 / multi-sentence
       :snt1 (c17-12 / shoot-02
                     :ARG2 (c17-10 / range
                                   :mod (c17-9 / point
                                               :mod (c17-5 / blank)))
                     :mod (c17-0 / hmm
                                 :mode expressive))
       :snt2 (c17-15 / have-03
                     :ARG0 (c17-8 / he
                                  :part (c17-6 / hand))
                     :ARG1 (c17-3 / up-03
                                  :ARG1 c17-6)
                     :polarity -)
       :snt3 (c17-7 / residue
                    :consist-of (c17-11 / gun
                                        :ARG1-of (c17-14 / powder-01))
                    :location (c17-13 / and
                                      :op1 (c17-4 / hand
                                                  :part (c17-1 / finger
                                                               :op2-of c17-13)))))

# ::snt So they're really going with the "he was so high on the pot that he attacked the officer" thing? Okay.
# ::tokens ["So", "they", "'re", "really", "going", "with", "the", "\"", "he", "was", "so", "high", "on", "the", "pot", "that", "he", "attacked", "the", "officer", "\"", "thing", "?", "Okay", "."]
# ::lemmas ["so", "they", "be", "really", "go", "with", "the", "\"", "he", "be", "so", "high", "on", "the", "pot", "that", "he", "attack", "the", "officer", "\"", "thing", "?", "okay", "."]
(c18-2 / multi-sentence
       :snt1 (c18-8 / cause-01
                    :ARG1 (c18-9 / go-06
                                 :ARG0 (c18-12 / they)
                                 :ARG1 (c18-10 / say-01
                                               :ARG1 (c18-0 / high-04
                                                            :ARG1 (c18-13 / he)
                                                            :ARG2 (c18-6 / pot)
                                                            :ARG2-of (c18-5 / have-degree-91
                                                                            :ARG1 c18-13
                                                                            :ARG3 (c18-4 / so)
                                                                            :ARG6 (c18-11 / attack-01
                                                                                          :ARG0 c18-13
                                                                                          :ARG1 (c18-3 / officer)))))
                                 :ARG1-of (c18-7 / real-04)))
       :snt2 (c18-1 / okay-04))

# ::snt right, now if he had attacked some doritos, ok, but nobody wants to fight while high
# ::tokens ["right", ",", "now", "if", "he", "had", "attacked", "some", "doritos", ",", "ok", ",", "but", "nobody", "wants", "to", "fight", "while", "high"]
# ::lemmas ["right", ",", "now", "if", "he", "have", "attack", "some", "dorito", ",", "ok", ",", "but", "nobody", "want", "to", "fight", "while", "high"]
(c19-0 / have-concession-91
       :ARG1 (c19-3 / okay-04
                    :condition (c19-10 / attack-01
                                       :ARG0 (c19-11 / he)
                                       :ARG1 (c19-7 / doritos
                                                    :quant (c19-9 / some)))
                    :time (c19-4 / now))
       :ARG2 (c19-1 / want-01
                    :ARG0 (c19-5 / nobody)
                    :ARG1 (c19-2 / fight-01
                                 :ARG0 c19-5
                                 :time (c19-6 / high-02
                                              :ARG1 c19-5)))
       :ARG1-of (c19-8 / right-06))

# ::snt hello gunpowder on his hand ? Pathologist already stated the logic . nothing but wannabe thug
# ::tokens ["hello", "gunpowder", "on", "his", "hand", "?", "Pathologist", "already", "stated", "the", "logic", ".", "nothing", "but", "wannabe", "thug"]
# ::lemmas ["hello", "gunpowder", "on", "his", "hand", "?", "Pathologist", "already", "state", "the", "logic", ".", "nothing", "but", "wannabe", "thug"]
(c20-3 / multi-sentence
       :snt1 (c20-8 / gunpowder
                    :polarity (c20-10 / amr-unknown)
                    :mod (c20-0 / hello)
                    :location (c20-12 / hand
                                      :part-of (c20-6 / he)))
       :snt2 (c20-9 / state-01
                    :ARG0 (c20-7 / pathologist)
                    :ARG1 (c20-2 / logic)
                    :time (c20-4 / already))
       :snt3 (c20-11 / thug
                     :mod (c20-1 / wannabe)
                     :mod (c20-5 / nothing-but)))

# ::snt what is there to update ? Foresinc studies proved attacked the police officer .
# ::tokens ["what", "is", "there", "to", "update", "?", "Foresinc", "studies", "proved", "attacked", "the", "police", "officer", "."]
# ::lemmas ["what", "be", "there", "to", "update", "?", "Foresinc", "study", "prove", "attack", "the", "police", "officer", "."]
(c21-1 / multi-sentence
       :snt1 (c21-2 / update-01
                    :ARG1 (c21-10 / amr-unknown
                                  :location (c21-8 / there)))
       :snt2 (c21-5 / prove-01
                    :ARG1 (c21-4 / attack-01
                                 :ARG0 (c21-7 / study-01
                                              :ARG1 (c21-6 / minority))
                                 :ARG1 (c21-3 / officer
                                              :ARG2-of (c21-0 / have-org-role-91
                                                              :ARG1 (c21-9 / police))))))

# ::snt Actually a lot of people commit violent acts while high, not everyone is a peaceful pot head.
# ::tokens ["Actually", "a", "lot", "of", "people", "commit", "violent", "acts", "while", "high", ",", "not", "everyone", "is", "a", "peaceful", "pot", "head", "."]
# ::lemmas ["actually", "a", "lot", "of", "people", "commit", "violent", "act", "while", "high", ",", "not", "everyone", "be", "a", "peaceful", "pot", "head", "."]
(c22-11 / and
        :op1 (c22-9 / commit-02
                    :ARG0 (c22-7 / person
                                 :quant (c22-1 / lot))
                    :ARG1 (c22-5 / act-02
                                 :mod (c22-6 / violent))
                    :time (c22-0 / high-02)
                    :ARG1-of (c22-8 / actual-02))
        :op2 (c22-2 / head
                    :mod (c22-10 / pot)
                    :mod (c22-3 / peaceful
                                :polarity -)
                    :domain (c22-4 / everyone)))

# ::snt Let us know when you report their testimonies.
# ::tokens ["Let", "us", "know", "when", "you", "report", "their", "testimonies", "."]
# ::lemmas ["let", "we", "know", "when", "you", "report", "their", "testimony", "."]
(c23-2 / let-know-07
       :ARG0 (c23-1 / you)
       :ARG1 (c23-0 / we)
       :ARG2 (c23-3 / be-temporally-at-91
                    :ARG2 (c23-4 / report-01
                                 :ARG0 c23-1
                                 :ARG1 (c23-6 / testify-01
                                              :ARG0 (c23-5 / they))))
       :mode imperative)

# ::snt of course when comes to black people complaining and whining , science is not enough evidence
# ::tokens ["of", "course", "when", "comes", "to", "black", "people", "complaining", "and", "whining", ",", "science", "is", "not", "enough", "evidence"]
# ::lemmas ["of", "course", "when", "come", "to", "black", "people", "complain", "and", "whining", ",", "science", "be", "not", "enough", "evidence"]
(c25-5 / evidence-01
       :ARG0 (c25-9 / science)
       :ARG1-of (c25-0 / have-quant-91
                       :ARG3 (c25-2 / enough)
                       :polarity -)
       :mod (c25-3 / of-course)
       :time (c25-8 / come-12
                    :ARG1 (c25-10 / and
                                  :op1 (c25-7 / complain-01
                                              :ARG0 (c25-6 / person
                                                           :ARG1-of (c25-4 / black-05)))
                                  :op2 (c25-1 / whine-01
                                              :ARG0 c25-6))))

# ::snt ask why would they be afraid to say publicly what they saw?
# ::tokens ["ask", "why", "would", "they", "be", "afraid", "to", "say", "publicly", "what", "they", "saw", "?"]
# ::lemmas ["ask", "why", "would", "they", "be", "afraid", "to", "say", "publicly", "what", "they", "see", "?"]
(c26-8 / ask-01
       :ARG1 (c26-0 / fear-01
                    :ARG0 (c26-7 / they)
                    :ARG1 (c26-6 / say-01
                                 :ARG0 c26-7
                                 :ARG1 (c26-5 / thing
                                              :ARG1-of (c26-1 / see-01
                                                              :ARG0 c26-7))
                                 :ARG1-of (c26-3 / public-02))
                    :ARG1-of (c26-4 / cause-01
                                    :ARG0 (c26-2 / amr-unknown)))
       :ARG2 c26-7)
