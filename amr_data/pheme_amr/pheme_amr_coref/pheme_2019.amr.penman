# ::snt Your key: IlyC3. Your tweet just landed u one ticket to our grand contest! Click our header bitly link claim
# ::tokens ["Your", "key", ":", "IlyC3", ".", "Your", "tweet", "just", "landed", "u", "one", "ticket", "to", "our", "grand", "contest", "!", "Click", "our", "header", "bitly", "link", "claim"]
# ::lemmas ["your", "key", ":", "ilyc3", ".", "your", "tweet", "just", "land", "u", "one", "ticket", "to", "our", "grand", "contest", "!", "click", "our", "header", "bitly", "link", "claim"]
(c1-4 / multi-sentence
      :snt1 (c1-17 / key-02
                   :ARG1 (c1-9 / person
                               :name (c1-7 / name
                                           :op1 "IlyC3")))
      :snt2 (c1-3 / land-01
                  :ARG0 (c1-15 / thing
                               :ARG1-of (c1-14 / tweet-01
                                               :ARG0 (c1-1 / you)))
                  :ARG1 (c1-8 / ticket
                              :destination (c1-11 / contest-02
                                                  :mod (c1-12 / grand)
                                                  :poss (c1-2 / we))
                              :quant 1)
                  :ARG2 c1-1
                  :time (c1-0 / just))
      :snt3 (c1-10 / click-01
                   :ARG0 c1-1
                   :mode imperative)
      :ARG1 (c1-16 / claim-01
                   :ARG1 (c1-13 / link
                                :mod (c1-6 / bitly)))
      :medium (c1-5 / header))

# ::snt look at the film of flag raising, woman on left stops and starts doing her hair before raising her hands, she's in on it
# ::tokens ["look", "at", "the", "film", "of", "flag", "raising", ",", "woman", "on", "left", "stops", "and", "starts", "doing", "her", "hair", "before", "raising", "her", "hands", ",", "she", "'s", "in", "on", "it"]
# ::lemmas ["look", "at", "the", "film", "of", "flag", "raising", ",", "woman", "on", "left", "stop", "and", "start", "do", "her", "hair", "before", "raise", "her", "hand", ",", "she", "be", "in", "on", "it"]
(c2-0 / multi-sentence
      :snt1 (c2-8 / look-01
                  :ARG0 (c2-15 / you)
                  :ARG1 (c2-9 / film
                              :topic (c2-12 / raise-01
                                            :ARG1 (c2-17 / flag)))
                  :mode imperative)
      :snt2 (c2-6 / and
                  :op1 (c2-4 / stop-01
                             :ARG0 (c2-13 / woman
                                          :ARG1-of (c2-18 / left-19)
                                          :part (c2-7 / hair)))
                  :op2 (c2-11 / start-01
                              :ARG0 c2-13
                              :ARG1 (c2-3 / do-02
                                          :ARG0 c2-13
                                          :ARG1 c2-7
                                          :time (c2-10 / before
                                                       :op1 (c2-1 / raise-01
                                                                  :ARG0 c2-13
                                                                  :ARG1 (c2-5 / hand)))))
                  :snt3 (c2-2 / participate-01
                              :ARG0 (c2-16 / she
                                           :part c2-5)
                              :ARG1 (c2-14 / it))))

# ::snt Shouldve had a clean shot when the guy was at the window. Phone the SAS there more than capable
# ::tokens ["Should", "ve", "had", "a", "clean", "shot", "when", "the", "guy", "was", "at", "the", "window", ".", "Phone", "the", "SAS", "there", "more", "than", "capable"]
# ::lemmas ["should", "ve", "have", "a", "clean", "shot", "when", "the", "guy", "be", "at", "the", "window", ".", "phone", "the", "SAS", "there", "more", "than", "capable"]
(c3-3 / multi-sentence
      :snt1 (c3-8 / recommend-01
                  :ARG1 (c3-0 / have-03
                              :ARG1 (c3-13 / shoot-01
                                           :ARG1-of (c3-9 / clean-04))
                              :time (c3-4 / be-located-at-91
                                          :ARG1 (c3-10 / guy)
                                          :ARG2 (c3-1 / window))))
      :snt2 (c3-7 / phone-01
                  :ARG0 (c3-2 / you)
                  :ARG1 (c3-5 / organization
                              :name (c3-6 / name
                                          :op1 "SAS"))
                  :location (c3-14 / there)
                  :ARG1-of (c3-11 / capable-01
                                  :mod (c3-12 / more-than))
                  :mode imperative))

# ::snt it's very sad,i mean years ago we were more stable,so strange how we digressed.
# ::tokens ["it", "'s", "very", "sad", ",", "i", "mean", "years", "ago", "we", "were", "more", "stable", ",", "so", "strange", "how", "we", "digressed", "."]
# ::lemmas ["it", "be", "very", "sad", ",", "i", "mean", "years", "ago", "we", "be", "more", "stable", ",", "so", "strange", "how", "we", "digress", "."]
(c4-15 / sad-02
       :ARG0 (c4-0 / have-degree-91
                   :ARG1 (c4-1 / we)
                   :ARG2 (c4-8 / stable-03
                               :ARG1 c4-1)
                   :ARG3 (c4-4 / more)
                   :time (c4-6 / before
                               :op1 (c4-10 / now)
                               :quant (c4-12 / multiple
                                             :op1 (c4-16 / temporal-quantity
                                                         :unit (c4-2 / year)
                                                         :quant 1)))
                   :ARG1-of (c4-3 / mean-01
                                  :ARG0 (c4-9 / i))
                   :ARG1 c4-0
                   :ARG2 (c4-5 / strange)
                   :ARG3 (c4-7 / so)
                   :ARG6 (c4-14 / thing
                                :manner-of (c4-13 / digress-01
                                                  :ARG0 c4-1)))
       :degree (c4-11 / very))

# ::snt , -
# ::tokens [",", "-"]
# ::lemmas [",", "-"]
(c6-0 / emoticon)

# ::snt Am liking their stance. Give nothing to the press that will jeopardise the hostages and families privacy.
# ::tokens ["Am", "liking", "their", "stance", ".", "Give", "nothing", "to", "the", "press", "that", "will", "jeopardise", "the", "hostages", "and", "families", "privacy", "."]
# ::lemmas ["be", "like", "their", "stance", ".", "give", "nothing", "to", "the", "press", "that", "will", "jeopardise", "the", "hostage", "and", "family", "privacy", "."]
(c7-4 / multi-sentence
      :snt1 (c7-3 / like-01
                  :ARG0 (c7-6 / i)
                  :ARG1 (c7-10 / stand-11
                               :ARG0 (c7-11 / they)))
      :snt2 (c7-9 / give-01
                  :ARG0 (c7-1 / you)
                  :ARG1 (c7-7 / nothing
                              :ARG0-of (c7-0 / jeopardize-01
                                             :ARG1 (c7-8 / privacy
                                                         :poss (c7-13 / and
                                                                      :op1 (c7-2 / hostage)
                                                                      :op2 (c7-5 / family)))))
                  :ARG2 (c7-12 / press)
                  :mode imperative))

# ::snt what you think about that plz reply
# ::tokens ["what", "you", "think", "about", "that", "plz", "reply"]
# ::lemmas ["what", "you", "think", "about", "that", "plz", "reply"]
(c8-1 / reply-01
      :ARG0 (c8-0 / you)
      :ARG2 (c8-2 / think-01
                  :ARG0 c8-0
                  :ARG1 (c8-3 / that))
      :polite +
      :mode imperative)

# ::snt "We are doing all we can to set you free" - NSW Police head says rescue will go on "as long as it takes"
# ::tokens ["\"", "We", "are", "doing", "all", "we", "can", "to", "set", "you", "free", "\"", "-", "NSW", "Police", "head", "says", "rescue", "will", "go", "on", "\"", "as", "long", "as", "it", "takes", "\""]
# ::lemmas ["\"", "we", "be", "do", "all", "we", "can", "to", "set", "you", "free", "\"", "-", "NSW", "Police", "head", "say", "rescue", "will", "go", "on", "\"", "as", "long", "as", "it", "take", "\""]
(c9-0 / multi-sentence
      :snt1 (c9-3 / say-01
                  :ARG0 (c9-1 / person
                              :ARG0-of (c9-7 / head-01
                                             :ARG1 (c9-4 / police
                                                         :mod (c9-11 / state
                                                                     :name (c9-13 / name
                                                                                  :op1 "New"
                                                                                  :op2 "South"
                                                                                  :op3 "Wales")))))
                  :ARG1 (c9-15 / go-on-15
                               :ARG1 (c9-14 / rescue-01)
                               :duration (c9-8 / long-03
                                               :ARG2-of (c9-6 / have-degree-91
                                                              :ARG1 c9-15
                                                              :ARG3 (c9-12 / equal)
                                                              :ARG4 (c9-19 / take-10
                                                                           :ARG1 c9-14)))))
      :snt2 (c9-2 / do-02
                  :ARG0 (c9-16 / we)
                  :ARG1 (c9-5 / all)
                  :ARG1-of (c9-10 / possible-01)
                  :purpose (c9-18 / set-02
                                  :ARG0 c9-16
                                  :ARG1 (c9-9 / free-04
                                              :ARG1 (c9-17 / you)))))

# ::snt "We are doing all we can to set you free" - NSW Police head says rescue will go on "as long as it takes"
# ::tokens ["\"", "We", "are", "doing", "all", "we", "can", "to", "set", "you", "free", "\"", "-", "NSW", "Police", "head", "says", "rescue", "will", "go", "on", "\"", "as", "long", "as", "it", "takes", "\""]
# ::lemmas ["\"", "we", "be", "do", "all", "we", "can", "to", "set", "you", "free", "\"", "-", "NSW", "Police", "head", "say", "rescue", "will", "go", "on", "\"", "as", "long", "as", "it", "take", "\""]
(c10-0 / multi-sentence
       :snt1 (c10-3 / say-01
                    :ARG0 (c10-1 / person
                                 :ARG0-of (c10-7 / head-01
                                                 :ARG1 (c10-4 / police
                                                              :mod (c10-11 / state
                                                                           :name (c10-13 / name
                                                                                         :op1 "New"
                                                                                         :op2 "South"
                                                                                         :op3 "Wales")))))
                    :ARG1 (c10-15 / go-on-15
                                  :ARG1 (c10-14 / rescue-01)
                                  :duration (c10-8 / long-03
                                                   :ARG2-of (c10-6 / have-degree-91
                                                                   :ARG1 c10-15
                                                                   :ARG3 (c10-12 / equal)
                                                                   :ARG4 (c10-19 / take-10
                                                                                 :ARG1 c10-14)))))
       :snt2 (c10-2 / do-02
                    :ARG0 (c10-16 / we)
                    :ARG1 (c10-5 / all)
                    :ARG1-of (c10-10 / possible-01)
                    :purpose (c10-18 / set-02
                                     :ARG0 c10-16
                                     :ARG1 (c10-9 / free-04
                                                  :ARG1 (c10-17 / you)))))

# ::snt The Demands of the hostage taker right here
# ::tokens ["The", "Demands", "of", "the", "hostage", "taker", "right", "here"]
# ::lemmas ["the", "demand", "of", "the", "hostage", "taker", "right", "here"]
(c12-5 / thing
       :ARG2-of (c12-2 / Demands-01
                       :ARG0 (c12-1 / person
                                    :ARG0-of (c12-4 / take-01
                                                    :ARG1 (c12-0 / hostage))))
       :location (c12-6 / here
                        :mod (c12-3 / right)))

# ::snt : WATCH: conference about
# ::tokens [":", "WATCH", ":", "conference", "about"]
# ::lemmas [":", "watch", ":", "conference", "about"]
(c13-3 / and
       :op1 (c13-0 / watch-01)
       :op2 (c13-1 / conference
                   :topic (c13-2 / about)))

# ::snt You are getting what you richly deserve. Collectivism will be your downfall.
# ::tokens ["You", "are", "getting", "what", "you", "richly", "deserve", ".", "Collectivism", "will", "be", "your", "downfall", "."]
# ::lemmas ["you", "be", "get", "what", "you", "richly", "deserve", ".", "collectivism", "will", "be", "your", "downfall", "."]
(c15-2 / multi-sentence
       :snt1 (c15-5 / get-01
                    :ARG0 (c15-0 / you)
                    :ARG1 (c15-8 / thing
                                 :ARG1-of (c15-3 / deserve-01
                                                 :ARG0 c15-0
                                                 :degree (c15-4 / rich))))
       :snt2 (c15-1 / fall-05
                    :ARG1 (c15-7 / you)
                    :ARG2 (c15-6 / collect-01)))

# ::snt Police disarmed the populace in the full knowledge that such events would happen. Collectivist scum.
# ::tokens ["Police", "disarmed", "the", "populace", "in", "the", "full", "knowledge", "that", "such", "events", "would", "happen", ".", "Collectivist", "scum", "."]
# ::lemmas ["police", "disarm", "the", "populace", "in", "the", "full", "knowledge", "that", "such", "event", "would", "happen", ".", "collectivist", "scum", "."]
(c16-1 / multi-sentence
       :snt1 (c16-9 / arm-01
                    :ARG0 (c16-4 / police)
                    :ARG1 (c16-8 / populace)
                    :manner (c16-7 / know-01
                                   :ARG0 c16-4
                                   :ARG1 (c16-2 / event
                                                :mod (c16-6 / such))
                                   :degree (c16-0 / full)))
       :snt2 (c16-3 / scum
                    :mod (c16-5 / collectivist)))

# ::snt : WATCH: conference about
# ::tokens [":", "WATCH", ":", "conference", "about"]
# ::lemmas [":", "watch", ":", "conference", "about"]
(c17-3 / and
       :op1 (c17-0 / watch-01)
       :op2 (c17-1 / conference
                   :topic (c17-2 / about)))

# ::snt another Muslim savage ...
# ::tokens ["another", "Muslim", "savage", "..."]
# ::lemmas ["another", "Muslim", "savage", "..."]
(c18-0 / savage
       :mod (c18-2 / religious-group
                   :name (c18-1 / name
                                :op1 "Islam"))
       :mod (c18-3 / another))

# ::snt My moral support to NSW Police Chief(Anupam Sinha)Corporate Human Resource Adviser &amp; Trainer+919711537496India
# ::tokens ["My", "moral", "support", "to", "NSW", "Police", "Chief(Anupam", "Sinha)Corporate", "Human", "Resource", "Adviser", "&", "amp", ";", "Trainer+919711537496India"]
# ::lemmas ["my", "moral", "support", "to", "NSW", "Police", "Chief(Anupam", "Sinha)Corporate", "Human", "Resource", "Adviser", "&", "amp", ";", "trainer+919711537496india"]
(c19-13 / support-01
        :ARG0 (c19-4 / i)
        :ARG1 (c19-7 / person
                     :name (c19-5 / name
                                  :op1 "Anupam"
                                  :op2 "Sinha")
                     :ARG0-of (c19-0 / have-org-role-91
                                     :ARG1 (c19-15 / police
                                                   :mod (c19-3 / state
                                                               :name (c19-6 / name
                                                                            :op1 "New"
                                                                            :op2 "South"
                                                                            :op3 "Wales")))
                                     :ARG2 (c19-9 / chief))
                     :ARG0-of (c19-16 / advise-01
                                      :ARG2 (c19-8 / resource
                                                   :mod (c19-1 / human)
                                                   :mod (c19-10 / corporate)))
                     :ARG0-of (c19-14 / train-01))
        :ARG1-of (c19-2 / moral-02)
        :mod (c19-12 / country
                     :name (c19-11 / name
                                   :op1 "India")))

# ::snt thats comforting for the hostages, that the police wont just get bored and leave them to it, i suppose
# ::tokens ["that", "s", "comforting", "for", "the", "hostages", ",", "that", "the", "police", "wo", "nt", "just", "get", "bored", "and", "leave", "them", "to", "it", ",", "i", "suppose"]
# ::lemmas ["that", "s", "comfort", "for", "the", "hostage", ",", "that", "the", "police", "will", "not", "just", "get", "bored", "and", "leave", "they", "to", "it", ",", "i", "suppose"]
(c20-6 / comfort-01
       :ARG0 (c20-9 / and
                    :op1 (c20-3 / bore-02
                                :ARG0 (c20-5 / police)
                                :mod (c20-0 / just)
                                :polarity -)
                    :op2 (c20-2 / leave-14
                                :ARG0 c20-5
                                :ARG1 (c20-1 / hostage
                                             :ARG2 (c20-4 / it)
                                             :ARG1-of c20-9)
                                :polarity -))
       :ARG1-of (c20-8 / suppose-01
                       :ARG0 (c20-7 / i)))

# ::snt Yes I feel for the Hostages But .BBC NEWS seem to think all the other Worlds News has Compleatly Stopped ?
# ::tokens ["Yes", "I", "feel", "for", "the", "Hostages", "But", ".BBC", "NEWS", "seem", "to", "think", "all", "the", "other", "Worlds", "News", "has", "Compleatly", "Stopped", "?"]
# ::lemmas ["yes", "i", "feel", "for", "the", "Hostages", "but", ".bbc", "news", "seem", "to", "think", "all", "the", "other", "Worlds", "News", "have", "Compleatly", "Stopped", "?"]
(c21-2 / multi-sentence
       :snt1 (c21-11 / contrast-01
                     :ARG2 (c21-1 / feel-02
                                  :ARG0 (c21-6 / i)
                                  :ARG2 (c21-9 / person
                                               :ARG0-of (c21-0 / host-01))))
       :snt2 (c21-14 / seem-01
                     :ARG1 (c21-15 / think-01
                                   :ARG0 (c21-3 / broadcast-program
                                                :name (c21-7 / name
                                                             :op1 "BBC"
                                                             :op2 "News"))
                                   :ARG1 (c21-10 / crush-01
                                                 :ARG0 (c21-12 / broadcast-program
                                                               :name (c21-8 / name
                                                                            :op1 "World"
                                                                            :op2 "News")
                                                               :mod (c21-4 / other)
                                                               :mod (c21-16 / all))
                                                 :manner (c21-13 / Compleat)))
                     :polarity (c21-5 / amr-unknown)))

# ::snt : "We are doing all we can to set you free" - NSW Police speak directly to hostages. Presser just concluded
# ::tokens [":", "\"", "We", "are", "doing", "all", "we", "can", "to", "set", "you", "free", "\"", "-", "NSW", "Police", "speak", "directly", "to", "hostages", ".", "Presser", "just", "concluded"]
# ::lemmas [":", "\"", "we", "be", "do", "all", "we", "can", "to", "set", "you", "free", "\"", "-", "NSW", "police", "speak", "directly", "to", "hostage", ".", "Presser", "just", "conclude"]
(c22-2 / multi-sentence
       :snt1 (c22-5 / say-01
                    :ARG0 (c22-15 / we)
                    :ARG1 (c22-4 / do-02
                                 :ARG0 c22-15
                                 :ARG1 (c22-7 / all
                                              :ARG1-of (c22-3 / possible-01))
                                 :ARG2 (c22-12 / set-02
                                               :ARG0 c22-15
                                               :ARG1 (c22-9 / free-04
                                                            :ARG1 (c22-16 / you))))
                    :ARG1-of (c22-17 / speak-01
                                     :ARG0 (c22-6 / police
                                                  :mod (c22-11 / state
                                                               :name (c22-13 / name
                                                                             :op1 "New"
                                                                             :op2 "South"
                                                                             :op3 "Wales")))
                                     :ARG2 (c22-8 / hostage)
                                     :ARG1-of (c22-1 / direct-02)))
       :snt2 (c22-18 / conclude-01
                     :ARG0 (c22-10 / person
                                   :ARG0-of (c22-14 / press-01))
                     :time (c22-0 / just)))

# ::snt You mean a safer society? Yeah. The horror.
# ::tokens ["You", "mean", "a", "safer", "society", "?", "Yeah", ".", "The", "horror", "."]
# ::lemmas ["you", "mean", "a", "safe", "society", "?", "yeah", ".", "the", "horror", "."]
(c23-3 / multi-sentence
       :snt1 (c23-5 / mean-01
                    :polarity (c23-8 / amr-unknown)
                    :ARG0 (c23-1 / you)
                    :ARG2 (c23-7 / society
                                 :ARG1-of (c23-0 / have-degree-91
                                                 :ARG2 (c23-4 / safe-01
                                                              :ARG1 c23-7)
                                                 :ARG3 (c23-2 / more))))
       :snt2 (c23-6 / yeah
                    :mode expressive))

# ::snt I think tony shoud accept his all demands because its the matter of fifty people lives
# ::tokens ["I", "think", "tony", "shoud", "accept", "his", "all", "demands", "because", "its", "the", "matter", "of", "fifty", "people", "lives"]
# ::lemmas ["i", "think", "tony", "shoud", "accept", "his", "all", "demand", "because", "its", "the", "matter", "of", "fifty", "people", "live"]
(c24-9 / think-01
       :ARG0 (c24-3 / i)
       :ARG1 (c24-11 / accept-01
                     :ARG0 (c24-5 / person
                                  :name (c24-4 / name
                                               :op1 "Tony"
                                               :op2 "Shoud"))
                     :ARG1 (c24-8 / thing
                                  :ARG1-of (c24-6 / demand-01
                                                  :ARG0 c24-5)
                                  :mod (c24-2 / all))
                     :ARG1-of (c24-7 / cause-01
                                     :ARG0 (c24-1 / matter
                                                  :topic (c24-0 / life
                                                                :poss (c24-10 / person
                                                                              :quant 50))))))

# ::snt Redrawing of a washy PNL from a menial insane who pretending drawing just to keep the stolen bazaar from that farmer wrongfully
# ::tokens ["Redrawing", "of", "a", "washy", "PNL", "from", "a", "menial", "insane", "who", "pretending", "drawing", "just", "to", "keep", "the", "stolen", "bazaar", "from", "that", "farmer", "wrongfully"]
# ::lemmas ["redrawe", "of", "a", "washy", "PNL", "from", "a", "menial", "insane", "who", "pretend", "draw", "just", "to", "keep", "the", "steal", "bazaar", "from", "that", "farmer", "wrongfully"]
(c25-9 / redraw-01
       :ARG1 (c25-8 / political-party
                    :name (c25-7 / name
                                 :op1 "PNL"))
       :ARG2 (c25-6 / insane
                    :mod (c25-3 / menial)
                    :ARG0-of (c25-14 / pretend-01
                                     :ARG1 (c25-10 / draw-01
                                                   :purpose (c25-13 / keep-01
                                                                    :ARG0 c25-6
                                                                    :ARG1 (c25-5 / bazaar
                                                                                 :ARG1-of (c25-11 / steal-01
                                                                                                  :ARG2 (c25-4 / person
                                                                                                               :ARG0-of (c25-2 / farm-01)
                                                                                                               :mod (c25-12 / that)))
                                                                                 :ARG1-of (c25-1 / wrong-02))
                                                                    :mod (c25-0 / just))))))

# ::snt why?
# ::tokens ["why", "?"]
# ::lemmas ["why", "?"]
(c26-0 / cause-01
       :ARG0 (c26-1 / amr-unknown))

# ::snt : "doing all we can to set you free"-NSW Police head. rescue will go "as long as it takes"
# ::tokens [":", "\"", "doing", "all", "we", "can", "to", "set", "you", "free\"-NSW", "Police", "head", ".", "rescue", "will", "go", "\"", "as", "long", "as", "it", "takes", "\""]
# ::lemmas [":", "\"", "do", "all", "we", "can", "to", "set", "you", "free\"-nsw", "Police", "head", ".", "rescue", "will", "go", "\"", "as", "long", "as", "it", "take", "\""]
(c27-4 / multi-sentence
       :snt1 (c27-10 / do-02
                     :ARG0 (c27-1 / we)
                     :ARG1 (c27-16 / all)
                     :ARG1-of (c27-9 / possible-01)
                     :purpose (c27-13 / set-02
                                      :ARG0 c27-1
                                      :ARG1 (c27-3 / free-04
                                                   :ARG1 (c27-2 / you))))
       :snt2 (c27-12 / go-01
                     :ARG1 (c27-11 / rescue-01)
                     :condition (c27-6 / as-long-as
                                       :op1 (c27-14 / take-10
                                                    :ARG1 (c27-7 / it))))
       :ARG2-of (c27-0 / head-01
                       :ARG1 (c27-15 / police
                                     :mod (c27-5 / state
                                                 :name (c27-8 / name
                                                              :op1 "NSW")))))

# ::snt The more defenceless you are, the safer you'll be. It's a well-known fact in Socialist'-land.
# ::tokens ["The", "more", "defenceless", "you", "are", ",", "the", "safer", "you", "'ll", "be", ".", "It", "'s", "a", "well", "-", "known", "fact", "in", "Socialist'-land", "."]
# ::lemmas ["the", "more", "defenceless", "you", "be", ",", "the", "safe", "you", "'ll", "be", ".", "it", "be", "a", "well", "-", "know", "fact", "in", "Socialist'-land", "."]
(c28-4 / multi-sentence
       :snt1 (c28-11 / correlate-91
                     :ARG1 (c28-9 / more
                                  :ARG3-of (c28-0 / have-degree-91
                                                  :ARG1 (c28-10 / defend-01
                                                                :ARG0 (c28-1 / you)
                                                                :ARG2-of c28-0)
                                                  :ARG0 c28-1)))
       :ARG2 (c28-3 / more
                    :ARG3-of (c28-16 / have-degree-91
                                     :ARG1 (c28-13 / you)
                                     :ARG2 (c28-14 / safe-01
                                                   :ARG1 c28-13)))
       :snt2 (c28-5 / fact
                    :domain (c28-7 / it)
                    :ARG1-of (c28-15 / know-02
                                     :location (c28-6 / land
                                                      :mod (c28-12 / political-movement
                                                                   :name (c28-8 / name
                                                                                :op1 "socialism")))
                                     :degree (c28-2 / well))))

# ::snt A cheap tool, and the cheapest worker using such a tool at ever !
# ::tokens ["A", "cheap", "tool", ",", "and", "the", "cheapest", "worker", "using", "such", "a", "tool", "at", "ever", "!"]
# ::lemmas ["a", "cheap", "tool", ",", "and", "the", "cheap", "worker", "use", "such", "a", "tool", "at", "ever", "!"]
(c29-11 / and
        :op1 (c29-10 / tool
                     :ARG1-of (c29-7 / cheap-02))
        :op2 (c29-3 / use-01
                    :ARG0 (c29-5 / person
                                 :ARG0-of (c29-1 / work-01)
                                 :ARG1-of (c29-6 / cheap-02
                                                 :ARG2-of (c29-0 / have-degree-91
                                                                 :ARG1 c29-5
                                                                 :ARG3 (c29-2 / most))))
                    :ARG1 (c29-8 / tool
                                 :mod (c29-9 / such))
                    :time (c29-4 / ever))
        :mode expressive)

# ::snt Then just go talk to them! They are peaceful Muzzies, and you'll upset them if u send in police
# ::tokens ["Then", "just", "go", "talk", "to", "them", "!", "They", "are", "peaceful", "Muzzies", ",", "and", "you", "'ll", "upset", "them", "if", "u", "send", "in", "police"]
# ::lemmas ["then", "just", "go", "talk", "to", "they", "!", "they", "be", "peaceful", "Muzzies", ",", "and", "you", "'ll", "upset", "they", "if", "u", "send", "in", "police"]
(c30-2 / multi-sentence
       :snt1 (c30-7 / go-05
                    :ARG0 (c30-1 / you)
                    :ARG1 (c30-10 / talk-01
                                  :ARG0 c30-1
                                  :ARG2 (c30-8 / they))
                    :mod (c30-0 / just)
                    :time (c30-5 / then)
                    :mode imperative)
       :snt2 (c30-12 / and
                     :op1 (c30-6 / peaceful
                                 :domain (c30-4 / they))
                     :op2 (c30-3 / upset-01
                                 :ARG0 (c30-13 / you)
                                 :ARG1 c30-4
                                 :condition (c30-9 / send-01
                                                   :ARG0 c30-13
                                                   :ARG1 (c30-11 / police)))))

# ::snt Come on Sydney! Kick that terrorist ass!!!
# ::tokens ["Come", "on", "Sydney", "!", "Kick", "that", "terrorist", "ass", "!", "!", "!"]
# ::lemmas ["come", "on", "Sydney", "!", "Kick", "that", "terrorist", "ass", "!", "!", "!"]
(c31-1 / multi-sentence
       :snt1 (c31-4 / come-on-25
                    :ARG1 (c31-3 / person
                                 :name (c31-2 / name
                                              :op1 "Sydney")))
       :snt2 (c31-7 / kick-01
                    :ARG0 (c31-0 / you)
                    :ARG1 (c31-8 / ass
                                 :mod (c31-6 / terrorist)
                                 :mod (c31-5 / that))
                    :mode imperative))

# ::snt Yeah, this is nothing that a bunch of panicked, poorly-trained civilians with guns can't fix
# ::tokens ["Yeah", ",", "this", "is", "nothing", "that", "a", "bunch", "of", "panicked", ",", "poorly", "-", "trained", "civilians", "with", "guns", "ca", "n't", "fix"]
# ::lemmas ["yeah", ",", "this", "be", "nothing", "that", "a", "bunch", "of", "panicked", ",", "poorly", "-", "train", "civilian", "with", "gun", "can", "not", "fix"]
(c32-5 / possible-01
       :ARG1 (c32-1 / fix-02
                    :ARG0 (c32-6 / civilian
                                 :quant (c32-3 / bunch)
                                 :ARG1-of (c32-9 / train-01
                                                 :manner (c32-10 / poor))
                                 :ARG0-of (c32-0 / have-03
                                                 :ARG1 (c32-7 / gun))
                                 :ARG1-of (c32-2 / panic-01))
                    :ARG1 (c32-4 / nothing
                                 :domain (c32-8 / this)))
       :polarity -)

# ::snt sending prayers.
# ::tokens ["sending", "prayers", "."]
# ::lemmas ["send", "prayer", "."]
(c34-0 / send-01
       :ARG1 (c34-1 / pray-01))

# ::snt And choose cafe is no more a preference to pollute a contentment has been prevailed between local, immigrants, and students.
# ::tokens ["And", "choose", "cafe", "is", "no", "more", "a", "preference", "to", "pollute", "a", "contentment", "has", "been", "prevailed", "between", "local", ",", "immigrants", ",", "and", "students", "."]
# ::lemmas ["and", "choose", "cafe", "be", "no", "more", "a", "preference", "to", "pollute", "a", "contentment", "have", "be", "prevail", "between", "local", ",", "immigrant", ",", "and", "student", "."]
(c35-14 / and
        :op2 (c35-6 / prevail-01
                    :ARG0 (c35-13 / prefer-01
                                  :ARG0 (c35-4 / and
                                               :op1 (c35-2 / person
                                                           :ARG1-of (c35-0 / local-02))
                                               :op2 (c35-12 / person
                                                            :ARG0-of (c35-5 / immigrate-01))
                                               :op3 (c35-3 / person
                                                           :ARG0-of (c35-10 / study-01)))
                                  :ARG1 (c35-11 / pollute-01
                                                :ARG0 c35-4
                                                :ARG1 (c35-8 / contentment)))
                    :mod (c35-1 / more
                                :polarity -)
                    :domain (c35-7 / choose-01
                                   :ARG1 (c35-9 / cafe))))
