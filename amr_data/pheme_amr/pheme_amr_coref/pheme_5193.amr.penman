# ::snt WoW..they had to pull something out of their ***, not going to fly with the armed robbery suspect stroll.
# ::tokens ["WoW", "..", "they", "had", "to", "pull", "something", "out", "of", "their", "*", "*", "*", ",", "not", "going", "to", "fly", "with", "the", "armed", "robbery", "suspect", "stroll", "."]
# ::lemmas ["WoW", "..", "they", "have", "to", "pull", "something", "out", "of", "their", "*", "*", "*", ",", "not", "go", "to", "fly", "with", "the", "armed", "robbery", "suspect", "stroll", "."]
(c1-12 / and
       :op1 (c1-3 / obligate-01
                  :ARG1 (c1-10 / they)
                  :ARG2 (c1-7 / pull-out-02
                              :ARG0 c1-10
                              :ARG1 (c1-9 / something)
                              :ARG2 (c1-5 / ***
                                          :poss c1-10)))
       :op2 (c1-1 / fly-01
                  :ARG1 c1-10
                  :accompanier (c1-4 / stroll-01
                                     :ARG0 (c1-11 / person
                                                  :ARG2-of (c1-2 / suspect-01
                                                                 :ARG1 (c1-8 / rob-01
                                                                             :ARG0 c1-11
                                                                             :ARG1-of (c1-6 / arm-01)))))
                  :polarity -)
       :mod (c1-0 / woo
                  :mode expressive))

# ::snt Because, of course, when somebody feels an injustice has been done them they should loot and destroy other people's property.
# ::tokens ["Because", ",", "of", "course", ",", "when", "somebody", "feels", "an", "injustice", "has", "been", "done", "them", "they", "should", "loot", "and", "destroy", "other", "people", "'s", "property", "."]
# ::lemmas ["because", ",", "of", "course", ",", "when", "somebody", "feel", "an", "injustice", "have", "be", "do", "they", "they", "should", "loot", "and", "destroy", "other", "people", "'s", "property", "."]
(c2-7 / cause-01
      :ARG0 (c2-6 / recommend-01
                  :ARG1 (c2-12 / and
                               :op1 (c2-1 / loot-01
                                          :ARG0 (c2-10 / they))
                               :op2 (c2-8 / destroy-01
                                          :ARG0 c2-10
                                          :ARG1 (c2-5 / property
                                                      :poss (c2-11 / person
                                                                   :mod (c2-4 / other))))
                               :time (c2-2 / feel-01
                                           :ARG0 (c2-9 / somebody)
                                           :ARG1 (c2-0 / justice
                                                       :polarity -)))
                  :mod (c2-3 / of-course)))

# ::snt There are no time stamps on those pictures...that could be him but when were those pictures ...in admissible ?
# ::tokens ["There", "are", "no", "time", "stamps", "on", "those", "pictures", "...", "that", "could", "be", "him", "but", "when", "were", "those", "pictures", "...", "in", "admissible", "?"]
# ::lemmas ["there", "be", "no", "time", "stamp", "on", "those", "picture", "...", "that", "could", "be", "he", "but", "when", "be", "those", "picture", "...", "in", "admissible", "?"]
(c3-1 / multi-sentence
      :snt1 (c3-8 / stamp
                  :mod (c3-9 / time)
                  :location (c3-5 / picture
                                  :mod (c3-7 / that))
                  :polarity -)
      :snt2 (c3-6 / contrast-01
                  :ARG1 (c3-10 / possible-01
                               :ARG1 (c3-0 / he))
                  :ARG2 (c3-11 / admit-02
                               :ARG1 (c3-2 / picture
                                           :mod (c3-4 / that))
                               :time (c3-3 / amr-unknown))))

# ::snt and even if they did rob a store and strut down the middle of the street, deserved to die??
# ::tokens ["and", "even", "if", "they", "did", "rob", "a", "store", "and", "strut", "down", "the", "middle", "of", "the", "street", ",", "deserved", "to", "die", "?", "?"]
# ::lemmas ["and", "even", "if", "they", "do", "rob", "a", "store", "and", "strut", "down", "the", "middle", "of", "the", "street", ",", "deserve", "to", "die", "?", "?"]
(c4-11 / and
       :op2 (c4-7 / deserve-01
                  :polarity (c4-5 / amr-unknown)
                  :ARG0 (c4-10 / they)
                  :ARG1 (c4-0 / die-01
                              :ARG1 c4-10)
                  :concession (c4-3 / even-if
                                    :op1 (c4-6 / and
                                               :op1 (c4-8 / rob-01
                                                          :ARG0 c4-10
                                                          :ARG1 (c4-9 / store))
                                               :op2 (c4-4 / strut-01
                                                          :ARG0 c4-10
                                                          :direction (c4-12 / down
                                                                            :op1 (c4-2 / middle
                                                                                       :part-of (c4-1 / street))))))))

# ::snt and those images show why assumptions should not be made. But we also don't know what happened in the store.
# ::tokens ["and", "those", "images", "show", "why", "assumptions", "should", "not", "be", "made", ".", "But", "we", "also", "do", "n't", "know", "what", "happened", "in", "the", "store", "."]
# ::lemmas ["and", "those", "image", "show", "why", "assumption", "should", "not", "be", "make", ".", "but", "we", "also", "do", "not", "know", "what", "happen", "in", "the", "store", "."]
(c5-1 / multi-sentence
      :snt1 (c5-14 / and
                   :op2 (c5-12 / show-01
                               :ARG0 (c5-4 / image
                                           :mod (c5-13 / that))
                               :ARG1 (c5-11 / thing
                                            :ARG0-of (c5-9 / cause-01
                                                           :ARG1 (c5-8 / recommend-01
                                                                       :ARG1 (c5-3 / assume-02)
                                                                       :polarity -)))))
      :snt2 (c5-10 / contrast-01
                   :ARG2 (c5-5 / know-01
                               :ARG0 (c5-0 / we)
                               :ARG1 (c5-6 / thing
                                           :location (c5-2 / store))
                               :mod (c5-7 / also)
                               :polarity -)))

# ::snt and even if he had just stolen something from a store...shot dead in less than a min encounter with cops?
# ::tokens ["and", "even", "if", "he", "had", "just", "stolen", "something", "from", "a", "store", "...", "shot", "dead", "in", "less", "than", "a", "min", "encounter", "with", "cops", "?"]
# ::lemmas ["and", "even", "if", "he", "have", "just", "steal", "something", "from", "a", "store", "...", "shoot", "dead", "in", "less", "than", "a", "min", "encounter", "with", "cop", "?"]
(c6-17 / and
       :op2 (c6-0 / have-concession-91
                  :polarity (c6-10 / amr-unknown)
                  :ARG2 (c6-8 / even-if
                              :op1 (c6-15 / steal-01
                                          :ARG0 (c6-2 / he)
                                          :ARG1 (c6-9 / something)
                                          :ARG2 (c6-3 / store)
                                          :mod (c6-1 / just)))
                  :op3 (c6-7 / shoot-02
                             :ARG1 c6-2
                             :ARG0-of (c6-13 / cause-01
                                             :ARG1 (c6-12 / die-01
                                                          :ARG1 c6-2)
                                             :time (c6-11 / after
                                                          :op1 (c6-6 / encounter-01
                                                                     :ARG0 c6-2
                                                                     :ARG1 (c6-14 / cop)
                                                                     :duration (c6-4 / less-than
                                                                                     :op1 (c6-16 / temporal-quantity
                                                                                                 :unit (c6-5 / minute)
                                                                                                 :quant 1))))))))

# ::snt that happens, a lot. Maybe not here, but it happens.
# ::tokens ["that", "happens", ",", "a", "lot", ".", "Maybe", "not", "here", ",", "but", "it", "happens", "."]
# ::lemmas ["that", "happen", ",", "a", "lot", ".", "maybe", "not", "here", ",", "but", "it", "happen", "."]
(c7-2 / multi-sentence
      :snt1 (c7-4 / event
                  :frequency (c7-1 / lot))
      :snt2 (c7-6 / contrast-01
                  :ARG1 (c7-5 / possible-01
                              :ARG1 (c7-3 / event
                                          :location (c7-0 / here
                                                          :polarity -)
                                          :ARG2-of c7-6))))

# ::snt with no weapon.
# ::tokens ["with", "no", "weapon", "."]
# ::lemmas ["with", "no", "weapon", "."]
(c8-0 / weapon
      :polarity -)

# ::snt He may not have robbed the store, but he's clearly assaulting the owner in the pics. Cop stopped him for jaywalking tho
# ::tokens ["He", "may", "not", "have", "robbed", "the", "store", ",", "but", "he", "'s", "clearly", "assaulting", "the", "owner", "in", "the", "pics", ".", "Cop", "stopped", "him", "for", "jaywalking", "tho"]
# ::lemmas ["he", "may", "not", "have", "rob", "the", "store", ",", "but", "he", "be", "clearly", "assault", "the", "owner", "in", "the", "pic", ".", "Cop", "stop", "he", "for", "jaywalk", "tho"]
(c9-3 / multi-sentence
      :snt1 (c9-10 / contrast-01
                   :ARG1 (c9-8 / possible-01
                               :ARG1 (c9-9 / rob-01
                                           :ARG0 (c9-0 / he)
                                           :ARG1 (c9-13 / store)
                                           :polarity -))
                   :ARG2 (c9-15 / assault-01
                                :ARG0 c9-0
                                :ARG1 (c9-14 / person
                                             :ARG0-of (c9-5 / own-01
                                                            :ARG1 c9-13))
                                :ARG1-of (c9-11 / clear-06)
                                :location (c9-4 / pic)))
      :snt2 (c9-6 / stop-01
                  :ARG0 (c9-12 / cop)
                  :ARG1 (c9-2 / he)
                  :ARG2 (c9-1 / jaywalk-00
                              :ARG0 c9-2)
                  :ARG1-of (c9-7 / have-concession-91)))

# ::snt And how did he get the cigars? Cause we all know by law that cigars are behind the counter at stores.
# ::tokens ["And", "how", "did", "he", "get", "the", "cigars", "?", "Cause", "we", "all", "know", "by", "law", "that", "cigars", "are", "behind", "the", "counter", "at", "stores", "."]
# ::lemmas ["and", "how", "do", "he", "get", "the", "cigar", "?", "cause", "we", "all", "know", "by", "law", "that", "cigar", "be", "behind", "the", "counter", "at", "store", "."]
(c10-3 / multi-sentence
       :snt1 (c10-13 / and
                     :op2 (c10-9 / get-01
                                 :ARG0 (c10-0 / he)
                                 :ARG1 (c10-8 / cigar)
                                 :manner (c10-5 / amr-unknown)))
       :snt2 (c10-7 / cause-01
                    :ARG0 (c10-11 / know-01
                                  :ARG0 (c10-1 / we
                                               :mod (c10-6 / all))
                                  :ARG1 (c10-10 / cigar
                                                :location (c10-4 / behind
                                                                 :op1 (c10-14 / counter))
                                                :location (c10-12 / store))
                                  :ARG1-of c10-7
                                  :ARG0 (c10-2 / law))))

# ::snt Accomplice to Wilson .
# ::tokens ["Accomplice", "to", "Wilson", "."]
# ::lemmas ["Accomplice", "to", "Wilson", "."]
(c11-2 / accomplish-01
       :ARG0 (c11-1 / person
                    :name (c11-0 / name
                                 :op1 "Wilson")))

# ::snt Wow a fucking lie. They took a week to come up with this lie.
# ::tokens ["Wow", "a", "fucking", "lie", ".", "They", "took", "a", "week", "to", "come", "up", "with", "this", "lie", "."]
# ::lemmas ["wow", "a", "fucking", "lie", ".", "they", "take", "a", "week", "to", "come", "up", "with", "this", "lie", "."]
(c12-2 / multi-sentence
       :snt1 (c12-1 / lie-08
                    :mod (c12-3 / fucking
                                :mode expressive)
                    :mod (c12-0 / wow
                                :mode expressive))
       :snt2 (c12-10 / take-10
                     :ARG0 (c12-8 / come-up-11
                                  :ARG0 (c12-9 / they)
                                  :ARG1 (c12-7 / lie-08
                                               :mod (c12-6 / this)))
                     :ARG1 (c12-4 / temporal-quantity
                                  :unit (c12-5 / week)
                                  :quant 1)))

# ::snt senseless deaths over cigarets land of the free is a joke
# ::tokens ["senseless", "deaths", "over", "cigarets", "land", "of", "the", "free", "is", "a", "joke"]
# ::lemmas ["senseless", "death", "over", "cigaret", "land", "of", "the", "free", "be", "a", "joke"]
(c13-0 / joke-01
       :ARG2 (c13-5 / die-01
                    :ARG1-of (c13-6 / cause-01
                                    :ARG0 (c13-7 / cigarette))
                    :ARG1-of (c13-1 / defend-01
                                    :polarity -)
                    :location (c13-2 / land
                                     :poss (c13-4 / person
                                                  :ARG1-of (c13-3 / free-04)))))

# ::snt there would be a time and date stamp on any digital source of those pics.
# ::tokens ["there", "would", "be", "a", "time", "and", "date", "stamp", "on", "any", "digital", "source", "of", "those", "pics", "."]
# ::lemmas ["there", "would", "be", "a", "time", "and", "date", "stamp", "on", "any", "digital", "source", "of", "those", "pic", "."]
(c14-6 / stamp
       :mod (c14-7 / time)
       :mod (c14-4 / date)
       :location (c14-5 / thing
                        :ARG2-of (c14-1 / source-01
                                        :ARG1 (c14-3 / pic
                                                     :mod (c14-2 / that)))
                        :mod (c14-0 / digital)
                        :mod (c14-8 / any)))

# ::snt Yeah, that seems like the pattern.
# ::tokens ["Yeah", ",", "that", "seems", "like", "the", "pattern", "."]
# ::lemmas ["yeah", ",", "that", "seem", "like", "the", "pattern", "."]
(c15-0 / seem-01
       :ARG1 (c15-2 / pattern
                    :domain (c15-3 / that))
       :mod (c15-1 / yeah))

# ::snt Yes, Eric Garner killed over cigarettes and Mike Brown killed over Swisher Sweets cigars.
# ::tokens ["Yes", ",", "Eric", "Garner", "killed", "over", "cigarettes", "and", "Mike", "Brown", "killed", "over", "Swisher", "Sweets", "cigars", "."]
# ::lemmas ["yes", ",", "Eric", "Garner", "kill", "over", "cigarette", "and", "Mike", "Brown", "kill", "over", "Swisher", "Sweets", "cigar", "."]
(c16-9 / and
       :op1 (c16-7 / kill-01
                   :ARG1 (c16-3 / person
                                :name (c16-1 / name
                                             :op1 "Eric"
                                             :op2 "Garner"))
                   :ARG2 (c16-5 / cigarette))
       :op2 (c16-0 / kill-01
                   :ARG1 (c16-8 / person
                                :name (c16-2 / name
                                             :op1 "Mike"
                                             :op2 "Brown"))
                   :ARG2 (c16-4 / cigar
                                :name (c16-6 / name
                                             :op1 "Swisher"
                                             :op2 "Sweets"))))

# ::snt At least us were not that bright...
# ::tokens ["At", "least", "us", "were", "not", "that", "bright", "..."]
# ::lemmas ["at", "least", "we", "be", "not", "that", "bright", "..."]
(c17-3 / bright-03
       :ARG1 (c17-0 / we)
       :mod (c17-2 / at-least)
       :degree (c17-1 / that)
       :polarity -)

# ::snt thats what I said..hes setting the table for the officers defense..
# ::tokens ["that", "s", "what", "I", "said", "..", "hes", "setting", "the", "table", "for", "the", "officers", "defense", ".."]
# ::lemmas ["that", "s", "what", "i", "say", "..", "he", "set", "the", "table", "for", "the", "officer", "defense", ".."]
(c18-2 / multi-sentence
       :snt1 (c18-9 / say-01
                    :ARG0 (c18-5 / i)
                    :ARG1 (c18-10 / that))
       :snt2 (c18-4 / set-01
                    :ARG0 (c18-1 / she)
                    :ARG1 (c18-8 / table)
                    :purpose (c18-7 / defend-01
                                    :ARG0 c18-1
                                    :ARG1 (c18-6 / person
                                                 :ARG0-of (c18-0 / have-org-role-91
                                                                 :ARG2 (c18-3 / officer))))))

# ::snt so now Johnson is an accomplice? You didn't interview him as a witness to a murder either. This chief needs to go.
# ::tokens ["so", "now", "Johnson", "is", "an", "accomplice", "?", "You", "did", "n't", "interview", "him", "as", "a", "witness", "to", "a", "murder", "either", ".", "This", "chief", "needs", "to", "go", "."]
# ::lemmas ["so", "now", "Johnson", "be", "an", "accomplice", "?", "you", "do", "not", "interview", "he", "as", "a", "witness", "to", "a", "murder", "either", ".", "this", "chief", "need", "to", "go", "."]
(c19-0 / multi-sentence
       :snt1 (c19-17 / cause-01
                     :ARG1 (c19-6 / accomplice
                                  :domain (c19-2 / person
                                                 :name (c19-9 / name
                                                              :op1 "Johnson"))
                                  :time (c19-16 / now))
                     :polarity (c19-13 / amr-unknown))
       :snt2 (c19-14 / interview-01
                     :ARG0 (c19-15 / you)
                     :ARG1 (c19-7 / he)
                     :ARG2 (c19-12 / witness-01
                                   :ARG0 c19-7
                                   :ARG1 (c19-10 / murder-01))
                     :mod (c19-8 / either)
                     :polarity -)
       :snt3 (c19-1 / need-01
                    :ARG1 (c19-11 / go-02
                                  :ARG0 (c19-4 / person
                                               :ARG0-of (c19-5 / have-org-role-91
                                                               :ARG2 (c19-3 / chief))
                                               :mod (c19-18 / this)))))

# ::snt ground! They need to come clean!! Dirty ( cops) bcuz the truth will set you "Free"!!! Ijs
# ::tokens ["ground", "!", "They", "need", "to", "come", "clean", "!", "!", "Dirty", "(", "cops", ")", "bcuz", "the", "truth", "will", "set", "you", "\"", "Free", "\"", "!", "!", "!", "Ijs"]
# ::lemmas ["ground", "!", "they", "need", "to", "come", "clean", "!", "!", "dirty", "(", "cop", ")", "bcuz", "the", "truth", "will", "set", "you", "\"", "free", "\"", "!", "!", "!", "Ijs"]
(c20-2 / multi-sentence
       :snt1 (c20-7 / ground-02
                    :mode expressive)
       :snt2 (c20-4 / need-01
                    :ARG0 (c20-11 / they)
                    :ARG1 (c20-6 / come-04
                                 :ARG1 c20-11
                                 :ARG2 (c20-5 / clean-04
                                              :ARG1 c20-11)))
       :snt3 (c20-8 / dirty-02
                    :ARG1 (c20-10 / cop)
                    :ARG1-of (c20-13 / cause-01
                                     :ARG0 (c20-12 / set-02
                                                   :ARG0 (c20-9 / truth)
                                                   :ARG1 (c20-0 / you)
                                                   :ARG2 (c20-1 / free-04
                                                                :ARG1 c20-0))))
       :snt4 (c20-3 / i))

# ::snt Um there have been times when others have posted pics of themselves on social media after a crime
# ::tokens ["Um", "there", "have", "been", "times", "when", "others", "have", "posted", "pics", "of", "themselves", "on", "social", "media", "after", "a", "crime"]
# ::lemmas ["um", "there", "have", "be", "time", "when", "other", "have", "post", "pic", "of", "themselves", "on", "social", "medium", "after", "a", "crime"]
(c21-5 / time
       :time-of (c21-2 / post-01
                       :ARG0 (c21-1 / other)
                       :ARG1 (c21-6 / picture
                                    :topic c21-1)
                       :ARG2 (c21-4 / social-service)
                       :time (c21-7 / after
                                    :op1 (c21-3 / crime-02)))
       :mod (c21-0 / um
                   :mode expressive))

# ::snt No in white cop world...you know the drill.
# ::tokens ["No", "in", "white", "cop", "world", "...", "you", "know", "the", "drill", "."]
# ::lemmas ["no", "in", "white", "cop", "world", "...", "you", "know", "the", "drill", "."]
(c22-2 / multi-sentence
       :snt1 (c22-4 / no
                    :location (c22-0 / world
                                     :mod (c22-6 / cop
                                                 :ARG1-of (c22-3 / white-02))))
       :snt2 (c22-7 / know-01
                    :ARG0 (c22-1 / you)
                    :ARG1 (c22-5 / drill-02)))

# ::snt the time line doesn't even seem right.
# ::tokens ["the", "time", "line", "does", "n't", "even", "seem", "right", "."]
# ::lemmas ["the", "time", "line", "do", "not", "even", "seem", "right", "."]
(c23-3 / seem-01
       :ARG1 (c23-2 / right-06
                    :ARG1 (c23-0 / line
                                 :mod (c23-4 / time)))
       :mod (c23-1 / even)
       :polarity -)

# ::snt My thought exactly.
# ::tokens ["My", "thought", "exactly", "."]
# ::lemmas ["my", "thought", "exactly", "."]
(c24-1 / thing
       :ARG1-of (c24-3 / think-01
                       :ARG0 (c24-2 / i))
       :mod (c24-0 / exact))

# ::snt they saying the child stole a box of Swisher sweets cigars! Where were the cigars then? While he lay dead as a door knob on
# ::tokens ["they", "saying", "the", "child", "stole", "a", "box", "of", "Swisher", "sweets", "cigars", "!", "Where", "were", "the", "cigars", "then", "?", "While", "he", "lay", "dead", "as", "a", "door", "knob", "on"]
# ::lemmas ["they", "say", "the", "child", "steal", "a", "box", "of", "Swisher", "sweet", "cigar", "!", "where", "be", "the", "cigar", "then", "?", "while", "he", "lie", "dead", "as", "a", "door", "knob", "on"]
(c25-2 / multi-sentence
       :snt1 (c25-5 / say-01
                    :ARG0 (c25-19 / they)
                    :ARG1 (c25-10 / steal-01
                                  :ARG0 (c25-17 / child)
                                  :ARG1 (c25-9 / box
                                               :ARG0-of (c25-3 / contain-01
                                                               :ARG1 (c25-13 / cigar
                                                                             :mod (c25-14 / company
                                                                                          :name (c25-11 / name
                                                                                                        :op1 "Swisher"))
                                                                             :mod (c25-15 / sweets)))))
                    :snt2 (c25-12 / be-located-at-91
                                  :ARG1 c25-13)
                    :ARG2 (c25-6 / amr-unknown)
                    :time (c25-18 / then))
       :snt3 (c25-1 / contrast-01
                    :ARG2 (c25-8 / lay-01
                                 :ARG1 (c25-7 / he)
                                 :ARG2 (c25-4 / die-01
                                              :ARG1 c25-7)
                                 :manner c25-12
                                 :ARG1 (c25-0 / door
                                              :part-of (c25-16 / on
                                                               :ARG2-of c25-8)))))

# ::snt and he allegedly shoplifted, not commuted robbery. Two different categories.
# ::tokens ["and", "he", "allegedly", "shoplifted", ",", "not", "commuted", "robbery", ".", "Two", "different", "categories", "."]
# ::lemmas ["and", "he", "allegedly", "shoplift", ",", "not", "commute", "robbery", ".", "Two", "different", "category", "."]
(c26-1 / multi-sentence
       :snt1 (c26-8 / and
                    :op2 c26-8
                    :op1 (c26-7 / shoplift-01
                                :ARG0 (c26-0 / he))
                    :op2 (c26-3 / rob-01
                                :ARG0 c26-0
                                :ARG1-of (c26-4 / commute-02
                                                :polarity -))
                    :ARG1-of (c26-2 / allege-01))
       :snt2 (c26-5 / category
                    :ARG1-of (c26-6 / differ-02)
                    :quant 2))

# ::snt there is and his family and friend confirmed it was him. It was -9
# ::tokens ["there", "is", "and", "his", "family", "and", "friend", "confirmed", "it", "was", "him", ".", "It", "was", "-9"]
# ::lemmas ["there", "be", "and", "his", "family", "and", "friend", "confirm", "it", "be", "he", ".", "it", "be", "-9"]
(c27-2 / multi-sentence
       :snt1 (c27-14 / and
                     :op1 (c27-5 / event)
                     :op2 (c27-12 / confirm-01
                                  :ARG0 (c27-6 / and
                                               :op1 (c27-1 / family
                                                           :ARG1-of (c27-0 / have-org-role-91
                                                                           :ARG0 (c27-3 / he)
                                                                           :ARG2 (c27-10 / member)))
                                               :op2 (c27-11 / person
                                                            :ARG0-of (c27-9 / have-rel-role-91
                                                                            :ARG1 c27-3
                                                                            :ARG2 (c27-8 / friend))))
                                  :ARG1 (c27-13 / he
                                                :domain (c27-7 / it))))
       :snt2 (c27-4 / equal-01
                    :ARG2 -9))

# ::snt they already said they found them on him.
# ::tokens ["they", "already", "said", "they", "found", "them", "on", "him", "."]
# ::lemmas ["they", "already", "say", "they", "find", "they", "on", "he", "."]
(c28-3 / say-01
       :ARG0 (c28-4 / they)
       :ARG1 (c28-1 / find-01
                    :ARG0 c28-4
                    :ARG1 (c28-2 / they)
                    :location (c28-0 / he))
       :time (c28-5 / already))

# ::snt they really want us to stop smoking...or na?
# ::tokens ["they", "really", "want", "us", "to", "stop", "smoking", "...", "or", "na", "?"]
# ::lemmas ["they", "really", "want", "we", "to", "stop", "smoke", "...", "or", "na", "?"]
(c29-1 / or
       :op1 (c29-0 / want-01
                   :ARG0 (c29-7 / they)
                   :ARG1 (c29-6 / stop-01
                                :ARG0 (c29-3 / we)
                                :ARG1 (c29-2 / smoke-02
                                             :ARG0 c29-3))
                   :ARG1-of (c29-5 / real-04))
       :op2 (c29-4 / na
                   :polarity (c29-8 / amr-unknown)))

# ::snt . - But, but... Probable cause... and, and, he was jaywalking... and, and, we still haven't interviewed suspected accomplice. ??
# ::tokens [".", "-", "But", ",", "but", "...", "Probable", "cause", "...", "and", ",", "and", ",", "he", "was", "jaywalking", "...", "and", ",", "and", ",", "we", "still", "have", "n't", "interviewed", "suspected", "accomplice", ".", "?", "?"]
# ::lemmas [".", "-", "but", ",", "but", "...", "probable", "cause", "...", "and", ",", "and", ",", "he", "be", "jaywalk", "...", "and", ",", "and", ",", "we", "still", "have", "not", "interview", "suspect", "accomplice", ".", "?", "?"]
(c30-8 / contrast-01
       :ARG2 (c30-7 / contrast-01
                    :ARG2 (c30-12 / and
                                  :op1 (c30-10 / cause
                                               :ARG1-of (c30-6 / possible-01))
                                  :op2 (c30-0 / jaywalk-00
                                              :ARG0 (c30-1 / he))
                                  :op3 (c30-5 / interview-01
                                              :ARG0 (c30-2 / we)
                                              :ARG1 (c30-11 / person
                                                            :ARG2-of (c30-9 / suspect-01
                                                                            :ARG1 (c30-4 / accomplice)))
                                              :mod (c30-3 / still)
                                              :polarity -))))

# ::snt watch the video. It was him. Family and friend confirmed it
# ::tokens ["watch", "the", "video", ".", "It", "was", "him", ".", "Family", "and", "friend", "confirmed", "it"]
# ::lemmas ["watch", "the", "video", ".", "it", "be", "he", ".", "family", "and", "friend", "confirm", "it"]
(c31-4 / multi-sentence
       :snt1 (c31-1 / watch-01
                    :ARG0 (c31-2 / you)
                    :ARG1 (c31-8 / video)
                    :mode imperative)
       :snt2 (c31-0 / he
                    :domain (c31-6 / it))
       :snt3 (c31-10 / confirm-01
                     :ARG0 (c31-12 / and
                                   :op1 (c31-3 / family)
                                   :op2 (c31-9 / person
                                               :ARG0-of (c31-5 / have-rel-role-91
                                                               :ARG2 (c31-7 / friend))))
                     :ARG1 (c31-11 / it)))

# ::snt and then his friends gives multiple interviews with media! Doesn't pass the sniff test
# ::tokens ["and", "then", "his", "friends", "gives", "multiple", "interviews", "with", "media", "!", "Does", "n't", "pass", "the", "sniff", "test"]
# ::lemmas ["and", "then", "his", "friend", "give", "multiple", "interview", "with", "medium", "!", "do", "not", "pass", "the", "sniff", "test"]
(c32-2 / multi-sentence
       :snt1 (c32-12 / and
                     :op2 (c32-5 / interview-01
                                 :ARG0 (c32-6 / media)
                                 :ARG1 (c32-7 / person
                                              :ARG0-of (c32-0 / have-rel-role-91
                                                              :ARG1 (c32-1 / he)
                                                              :ARG2 (c32-3 / friend)))
                                 :quant (c32-4 / multiple)
                                 :time (c32-10 / then)))
       :snt2 (c32-11 / pass-07
                     :ARG1 (c32-8 / test-01
                                  :ARG2 (c32-9 / sniff))
                     :polarity -))

# ::snt The footage of the scenes match up pretty good so not sure this is a case of mistaken identity...still a case of exc force
# ::tokens ["The", "footage", "of", "the", "scenes", "match", "up", "pretty", "good", "so", "not", "sure", "this", "is", "a", "case", "of", "mistaken", "identity", "...", "still", "a", "case", "of", "exc", "force"]
# ::lemmas ["the", "footage", "of", "the", "scene", "match", "up", "pretty", "good", "so", "not", "sure", "this", "be", "a", "case", "of", "mistaken", "identity", "...", "still", "a", "case", "of", "exc", "force"]
(c33-1 / multi-sentence
       :snt1 (c33-8 / match-up-02
                    :ARG1 (c33-0 / footage
                                 :topic (c33-14 / scene))
                    :ARG1-of (c33-11 / good-02
                                     :degree (c33-9 / pretty))
                    :ARG0-of (c33-10 / cause-01
                                     :ARG1 (c33-4 / sure-02
                                                  :ARG0 (c33-6 / i)
                                                  :ARG1 (c33-12 / case-04
                                                                :ARG1 (c33-2 / mistake-01
                                                                             :ARG1 (c33-13 / identity))
                                                                :domain (c33-16 / this))
                                                  :polarity -)))
       :snt2 (c33-15 / case-04
                     :ARG1 (c33-7 / force-04
                                  :ARG2 (c33-5 / excuse-02))
                     :mod (c33-3 / still)))

# ::snt Did anyone find any cigars on either of the alleged jaywalkers?
# ::tokens ["Did", "anyone", "find", "any", "cigars", "on", "either", "of", "the", "alleged", "jaywalkers", "?"]
# ::lemmas ["do", "anyone", "find", "any", "cigar", "on", "either", "of", "the", "allege", "jaywalker", "?"]
(c34-1 / find-01
       :ARG0 (c34-9 / anyone)
       :ARG1 (c34-7 / cigar
                    :mod (c34-3 / any))
       :polarity (c34-5 / amr-unknown)
       :beneficiary (c34-6 / person
                           :mod (c34-2 / either)
                           :ARG1-of (c34-4 / include-91
                                           :ARG2 (c34-0 / jaywalker
                                                        :ARG1-of (c34-8 / allege-01)))))

# ::snt And not take off running when the cops roll up on them. Getting more ridiculous by the minute!
# ::tokens ["And", "not", "take", "off", "running", "when", "the", "cops", "roll", "up", "on", "them", ".", "Getting", "more", "ridiculous", "by", "the", "minute", "!"]
# ::lemmas ["and", "not", "take", "off", "run", "when", "the", "cop", "roll", "up", "on", "they", ".", "get", "more", "ridiculous", "by", "the", "minute", "!"]
(c35-3 / multi-sentence
       :snt1 (c35-14 / and
                     :op2 (c35-13 / take-off-07
                                  :ARG1 (c35-9 / run-02)
                                  :time (c35-6 / roll-01
                                               :ARG0 (c35-10 / cop)
                                               :ARG1 (c35-12 / they)
                                               :direction (c35-4 / up))
                                  :polarity -))
       :snt2 (c35-11 / get-03
                     :ARG2 (c35-5 / ridiculous-02
                                  :ARG2-of (c35-0 / have-degree-91
                                                  :ARG3 (c35-8 / more)))
                     :frequency (c35-1 / rate-entity-91
                                       :ARG3 (c35-7 / temporal-quantity
                                                    :unit (c35-2 / minute)
                                                    :quant 1))))

# ::snt police officers are saving us from lung cancer by shooting us in the head
# ::tokens ["police", "officers", "are", "saving", "us", "from", "lung", "cancer", "by", "shooting", "us", "in", "the", "head"]
# ::lemmas ["police", "officer", "be", "save", "we", "from", "lung", "cancer", "by", "shoot", "we", "in", "the", "head"]
(c36-7 / save-02
       :ARG0 (c36-5 / person
                    :ARG0-of (c36-0 / have-org-role-91
                                    :ARG1 (c36-8 / police)
                                    :ARG2 (c36-2 / officer)))
       :ARG1 (c36-1 / we)
       :ARG2 (c36-6 / disease
                    :name (c36-4 / name
                                 :op1 "lung"
                                 :op2 "cancer"))
       :manner (c36-3 / shoot-02
                      :ARG0 c36-5
                      :ARG1 c36-1
                      :location (c36-9 / head)))

# ::snt stop giving them press releases. You know that's the next justification.
# ::tokens ["stop", "giving", "them", "press", "releases", ".", "You", "know", "that", "'s", "the", "next", "justification", "."]
# ::lemmas ["stop", "give", "they", "press", "release", ".", "you", "know", "that", "be", "the", "next", "justification", "."]
(c37-2 / multi-sentence
       :snt1 (c37-10 / stop-01
                     :ARG0 (c37-1 / you)
                     :ARG1 (c37-8 / give-01
                                  :ARG0 c37-1
                                  :ARG1 (c37-7 / release-01
                                               :ARG1 (c37-6 / press))
                                  :ARG2 (c37-12 / they))
                     :mode imperative)
       :snt2 (c37-3 / know-01
                    :ARG0 (c37-9 / you)
                    :ARG1 (c37-11 / thing
                                  :ARG2-of (c37-0 / justify-01)
                                  :mod (c37-4 / next)
                                  :domain (c37-5 / that))))

# ::snt B/c of course, when someone commits a robbery they stroll down the middle of the street where everyone can see em
# ::tokens ["B", "/", "c", "of", "course", ",", "when", "someone", "commits", "a", "robbery", "they", "stroll", "down", "the", "middle", "of", "the", "street", "where", "everyone", "can", "see", "em"]
# ::lemmas ["b", "/", "c", "of", "course", ",", "when", "someone", "commit", "a", "robbery", "they", "stroll", "down", "the", "middle", "of", "the", "street", "where", "everyone", "can", "see", "em"]
(c38-12 / and
        :op1 (c38-2 / bullshit-01)
        :op2 (c38-11 / stroll-01
                     :ARG0 (c38-5 / someone)
                     :ARG1 (c38-1 / middle
                                  :part-of (c38-0 / street)
                                  :location-of (c38-7 / possible-01
                                                      :ARG1 (c38-4 / see-01
                                                                   :ARG0 (c38-6 / everyone)
                                                                   :ARG1 c38-5)))
                     :direction (c38-8 / down)
                     :time (c38-9 / commit-02
                                  :ARG0 c38-5
                                  :ARG1 (c38-10 / rob-01
                                                :ARG0 c38-5))
                     :mod (c38-3 / of-course)))

# ::snt Because, of course, when someone commits a robbery they stroll down the middle of the street where everyone can see them.
# ::tokens ["Because", ",", "of", "course", ",", "when", "someone", "commits", "a", "robbery", "they", "stroll", "down", "the", "middle", "of", "the", "street", "where", "everyone", "can", "see", "them", "."]
# ::lemmas ["because", ",", "of", "course", ",", "when", "someone", "commit", "a", "robbery", "they", "stroll", "down", "the", "middle", "of", "the", "street", "where", "everyone", "can", "see", "they", "."]
(c39-8 / cause-01
       :ARG0 (c39-11 / stroll-01
                     :ARG0 (c39-4 / someone)
                     :ARG1 (c39-0 / street
                                  :mod (c39-1 / middle)
                                  :location-of (c39-6 / possible-01
                                                      :ARG1 (c39-3 / see-01
                                                                   :ARG0 (c39-5 / everyone)
                                                                   :ARG1 c39-4)))
                     :direction (c39-7 / down)
                     :time (c39-9 / commit-02
                                  :ARG0 c39-4
                                  :ARG1 (c39-10 / rob-01
                                                :ARG0 c39-4))
                     :mod (c39-2 / of-course)))
