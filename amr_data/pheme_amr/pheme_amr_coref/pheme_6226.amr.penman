# ::snt yes that will help a lot *sigh* how about his president stops supporting these jihadist 'rebels' !
# ::tokens ["yes", "that", "will", "help", "a", "lot", "*", "sigh", "*", "how", "about", "his", "president", "stops", "supporting", "these", "jihadist", "'", "rebels", "'", "!"]
# ::lemmas ["yes", "that", "will", "help", "a", "lot", "*", "sigh", "*", "how", "about", "his", "president", "stop", "support", "these", "jihadist", "'", "rebel", "'", "!"]
(c1-2 / multi-sentence
      :snt1 (c1-0 / help-01
                  :ARG0 (c1-12 / that)
                  :degree (c1-1 / lot))
      :snt2 (c1-11 / suggest-01
                   :ARG1 (c1-4 / stop-01
                               :ARG0 (c1-8 / person
                                           :ARG0-of (c1-14 / have-org-role-91
                                                           :ARG2 (c1-13 / president))
                                           :poss (c1-7 / he))
                               :ARG1 (c1-3 / support-01
                                           :ARG0 c1-8
                                           :ARG1 c1-8
                                           :mod (c1-9 / religious-group
                                                      :name (c1-6 / name
                                                                  :op1 "Jihadism"))
                                           :mod (c1-10 / this)
                                           :ARG0-of (c1-5 / rebel-01)))))

# ::snt The future of all our children is in hands of Muslims prepared to speak &amp; act
# ::tokens ["The", "future", "of", "all", "our", "children", "is", "in", "hands", "of", "Muslims", "prepared", "to", "speak", "&", "amp", ";", "act"]
# ::lemmas ["the", "future", "of", "all", "our", "child", "be", "in", "hand", "of", "Muslims", "prepare", "to", "speak", "&", "amp", ";", "act"]
(c2-3 / in-ones-hands-04
      :ARG0 (c2-6 / person
                  :mod (c2-7 / religious-group
                             :name (c2-4 / name
                                         :op1 "Muslim"))
                  :ARG1-of (c2-10 / prepare-02
                                  :ARG2 (c2-11 / and
                                               :op1 (c2-9 / speak-01
                                                          :ARG0 c2-6)
                                               :op2 (c2-2 / act-02
                                                          :ARG0 c2-6))))
      :ARG1 (c2-1 / future
                  :poss (c2-8 / child
                              :mod (c2-5 / all)
                              :poss (c2-0 / we))))

# ::snt hey
# ::tokens ["hey"]
# ::lemmas ["hey"]
(c3-0 / hey)

# ::snt I'll do the same as a Turkish Muslim. That will be my partial repay at least
# ::tokens ["I", "'ll", "do", "the", "same", "as", "a", "Turkish", "Muslim", ".", "That", "will", "be", "my", "partial", "repay", "at", "least"]
# ::lemmas ["i", "'ll", "do", "the", "same", "as", "a", "Turkish", "Muslim", ".", "that", "will", "be", "my", "partial", "repay", "at", "least"]
(c4-0 / multi-sentence
      :snt1 (c4-5 / do-02
                  :ARG0 (c4-1 / i)
                  :ARG1-of (c4-9 / same-01
                                 :ARG2 (c4-4 / person
                                             :mod (c4-6 / religious-group
                                                        :name (c4-3 / name
                                                                    :op1 "Muslim")
                                                        :mod (c4-7 / country
                                                                   :name c4-3
                                                                   :op1 "Turkey")))))
      :snt2 (c4-2 / repay-01
                  :ARG0 (c4-8 / i)
                  :ARG1 (c4-10 / that)
                  :degree (c4-11 / part)
                  :mod (c4-12 / at-least)))

# ::snt . You said the right thing, Dominique
# ::tokens [".", "You", "said", "the", "right", "thing", ",", "Dominique"]
# ::lemmas [".", "you", "say", "the", "right", "thing", ",", "Dominique"]
(c5-4 / say-01
      :ARG0 (c5-2 / person
                  :name (c5-1 / name
                              :op1 "Dominique"))
      :ARG1 (c5-0 / say-01
                  :ARG0 c5-2
                  :ARG1 (c5-5 / thing
                              :ARG1-of (c5-3 / right-02))))

# ::snt agreed
# ::tokens ["agreed"]
# ::lemmas ["agree"]
(c6-0 / agree-01)
