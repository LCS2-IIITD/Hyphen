# ::snt so that angers him enough to execute him in broad daylight! Interesting. Never knew jaywalking warranted execution! Smh
# ::tokens ["so", "that", "angers", "him", "enough", "to", "execute", "him", "in", "broad", "daylight", "!", "Interesting", ".", "Never", "knew", "jaywalking", "warranted", "execution", "!", "Smh"]
# ::lemmas ["so", "that", "anger", "he", "enough", "to", "execute", "he", "in", "broad", "daylight", "!", "interesting", ".", "never", "know", "jaywalking", "warrant", "execution", "!", "smh"]
(c1-4 / multi-sentence
      :snt1 (c1-13 / cause-01
                   :ARG1 (c1-0 / have-degree-91
                               :ARG1 (c1-16 / that)
                               :ARG2 (c1-17 / appeal-03
                                            :ARG0 c1-16
                                            :ARG1 (c1-3 / he))
                               :ARG3 (c1-8 / enough)
                               :ARG6 (c1-6 / execute-01
                                           :ARG1 c1-3
                                           :location (c1-12 / daylight
                                                            :ARG1-of (c1-7 / broad-02)))))
      :snt2 (c1-10 / interest-01)
      :snt3 (c1-11 / know-01
                   :ARG0 (c1-14 / i)
                   :ARG1 (c1-1 / warrant-01
                               :ARG1 (c1-2 / execute-01
                                           :ARG1 (c1-5 / jaywalking)))
                   :time (c1-9 / ever)
                   :polarity -)
      :snt4 (c1-15 / smh
                   :mode expressive))

# ::snt That's exactly what the Chief wants folks to believe. The more County talks, the more guilty they are.
# ::tokens ["That", "'s", "exactly", "what", "the", "Chief", "wants", "folks", "to", "believe", ".", "The", "more", "County", "talks", ",", "the", "more", "guilty", "they", "are", "."]
# ::lemmas ["that", "be", "exactly", "what", "the", "Chief", "want", "folk", "to", "believe", ".", "the", "more", "county", "talk", ",", "the", "more", "guilty", "they", "be", "."]
(c2-3 / multi-sentence
      :snt1 (c2-1 / want-01
                  :ARG0 (c2-10 / chief)
                  :ARG1 (c2-5 / believe-01
                              :ARG0 (c2-2 / folk)
                              :ARG1 (c2-14 / that)
                              :mod (c2-6 / exact)))
      :snt2 (c2-9 / correlate-91
                  :ARG1 (c2-8 / more
                              :ARG3-of (c2-0 / have-quant-91
                                             :ARG1 (c2-12 / talk-01
                                                          :ARG0 (c2-13 / county))))
                  :ARG2 (c2-4 / more
                              :ARG3-of (c2-15 / have-quant-91
                                              :ARG1 (c2-11 / guilty-01
                                                           :ARG1 (c2-7 / they))))))

# ::snt do you have a source for that?
# ::tokens ["do", "you", "have", "a", "source", "for", "that", "?"]
# ::lemmas ["do", "you", "have", "a", "source", "for", "that", "?"]
(c3-0 / have-03
      :polarity (c3-5 / amr-unknown)
      :ARG0 (c3-1 / you)
      :ARG1 (c3-4 / thing
                  :ARG2-of (c3-3 / source-01
                                 :ARG1 (c3-2 / that))))

# ::snt Chief Jackson: officer Darren Wilson stopped initially because he was in the street and blocking traffic.
# ::tokens ["Chief", "Jackson", ":", "officer", "Darren", "Wilson", "stopped", "initially", "because", "he", "was", "in", "the", "street", "and", "blocking", "traffic", "."]
# ::lemmas ["Chief", "Jackson", ":", "officer", "Darren", "Wilson", "stop", "initially", "because", "he", "be", "in", "the", "street", "and", "block", "traffic", "."]
(c4-12 / say-01
       :ARG0 (c4-8 / person
                   :name (c4-6 / name
                               :op1 "Jackson")
                   :mod (c4-10 / chief))
       :ARG1 (c4-4 / stop-01
                   :ARG0 (c4-14 / person
                                :name (c4-7 / name
                                            :op1 "Darren"
                                            :op2 "Wilson")
                                :ARG0-of (c4-0 / have-org-role-91
                                               :ARG2 (c4-3 / officer)))
                   :time (c4-5 / initial)
                   :ARG1-of (c4-9 / cause-01
                                  :ARG0 (c4-15 / and
                                               :op1 (c4-2 / be-located-at-91
                                                          :ARG1 c4-14
                                                          :ARG2 (c4-1 / street))
                                               :op2 (c4-11 / block-01
                                                           :ARG0 c4-14
                                                           :ARG1 (c4-13 / traffic))))))

# ::snt and thats exactly where the problem comes in..Who is supposed to police the nations biggest gang?
# ::tokens ["and", "that", "s", "exactly", "where", "the", "problem", "comes", "in", "..", "Who", "is", "supposed", "to", "police", "the", "nations", "biggest", "gang", "?"]
# ::lemmas ["and", "that", "s", "exactly", "where", "the", "problem", "come", "in", "..", "who", "be", "suppose", "to", "police", "the", "nation", "big", "gang", "?"]
(c5-11 / and
       :op2 (c5-7 / come-in-07
                  :ARG1 (c5-6 / problem)
                  :ARG2 (c5-9 / suppose-02
                              :ARG1 (c5-4 / amr-unknown)
                              :ARG2 (c5-10 / police-01
                                           :ARG0 c5-4
                                           :ARG1 (c5-8 / gang
                                                       :poss (c5-5 / nation)
                                                       :ARG1-of (c5-0 / have-degree-91
                                                                      :ARG2 (c5-2 / big)
                                                                      :ARG3 (c5-1 / most)))))
                  :mod (c5-3 / exact)))

# ::snt Of course!~
# ::tokens ["Of", "course!~"]
# ::lemmas ["of", "course!~"]
(c6-0 / of-course
      :mode expressive)

# ::snt : Chief Jackson: officer Darren Wilson stopped initially because he was in the street and blocking traffic.
# ::tokens [":", "Chief", "Jackson", ":", "officer", "Darren", "Wilson", "stopped", "initially", "because", "he", "was", "in", "the", "street", "and", "blocking", "traffic", "."]
# ::lemmas [":", "Chief", "Jackson", ":", "officer", "Darren", "Wilson", "stop", "initially", "because", "he", "be", "in", "the", "street", "and", "block", "traffic", "."]
(c7-12 / say-01
       :ARG0 (c7-8 / person
                   :name (c7-6 / name
                               :op1 "Jackson")
                   :ARG0-of (c7-0 / have-org-role-91
                                  :ARG2 (c7-10 / chief)))
       :ARG1 (c7-4 / stop-01
                   :ARG1 (c7-14 / person
                                :name (c7-7 / name
                                            :op1 "Darren"
                                            :op2 "Wilson")
                                :ARG0-of c7-0
                                :ARG2 (c7-3 / officer)))
       :ARG1-of (c7-9 / cause-01
                      :ARG0 (c7-15 / and
                                   :op1 (c7-2 / be-located-at-91
                                              :ARG1 c7-14
                                              :ARG2 (c7-1 / street))
                                   :op2 (c7-11 / block-01
                                               :ARG0 c7-14
                                               :ARG1 (c7-13 / traffic)))
                      :time (c7-5 / initial)))

# ::snt I agree. but when you attack a cop and grab for his gun, its a diff story.
# ::tokens ["I", "agree", ".", "but", "when", "you", "attack", "a", "cop", "and", "grab", "for", "his", "gun", ",", "its", "a", "diff", "story", "."]
# ::lemmas ["i", "agree", ".", "but", "when", "you", "attack", "a", "cop", "and", "grab", "for", "his", "gun", ",", "its", "a", "diff", "story", "."]
(c8-5 / contrast-01
      :ARG1 (c8-10 / agree-01
                   :ARG0 (c8-2 / i))
      :ARG2 (c8-4 / differ-02
                  :ARG1 (c8-9 / story)
                  :condition (c8-1 / and
                                   :op1 (c8-3 / attack-01
                                              :ARG0 (c8-0 / you)
                                              :ARG1 (c8-6 / cop))
                                   :op2 (c8-7 / grab-01
                                              :ARG0 c8-0
                                              :ARG1 (c8-8 / gun
                                                          :poss c8-6)))))

# ::snt its jaywalking and its a ticket-able offense
# ::tokens ["its", "jaywalking", "and", "its", "a", "ticket", "-", "able", "offense"]
# ::lemmas ["its", "jaywalking", "and", "its", "a", "ticket", "-", "able", "offense"]
(c9-5 / and
      :op1 (c9-0 / jaywalking
                 :domain (c9-2 / it))
      :op2 (c9-1 / offend-03
                 :ARG3 (c9-4 / ticket-02
                             :ARG1 c9-2)
                 :ARG1-of (c9-3 / possible-01)))

# ::snt Which sounds exactly what a guy who just robbed store would do. Walk down the middle of the road to block traffic .NOT
# ::tokens ["Which", "sounds", "exactly", "what", "a", "guy", "who", "just", "robbed", "store", "would", "do", ".", "Walk", "down", "the", "middle", "of", "the", "road", "to", "block", "traffic", ".NOT"]
# ::lemmas ["which", "sound", "exactly", "what", "a", "guy", "who", "just", "rob", "store", "would", "do", ".", "walk", "down", "the", "middle", "of", "the", "road", "to", "block", "traffic", ".not"]
(c10-4 / multi-sentence
       :snt1 (c10-14 / sound-01
                     :ARG1 (c10-15 / thing
                                   :ARG1-of (c10-10 / do-02
                                                    :ARG0 (c10-12 / guy
                                                                  :ARG0-of (c10-11 / rob-01
                                                                                   :ARG1 (c10-6 / store)
                                                                                   :time (c10-0 / just)))))
                     :ARG2 (c10-7 / exact))
       :snt2 (c10-1 / walk-01
                    :ARG0 (c10-2 / you)
                    :ARG2 (c10-9 / middle
                                 :part-of (c10-8 / road))
                    :direction (c10-3 / down)
                    :purpose (c10-5 / block-01
                                    :ARG0 c10-2
                                    :ARG1 (c10-13 / traffic))
                    :mode imperative))

# ::snt but they calling it law enforcement Protect and serve.. smh
# ::tokens ["but", "they", "calling", "it", "law", "enforcement", "Protect", "and", "serve", "..", "smh"]
# ::lemmas ["but", "they", "call", "it", "law", "enforcement", "protect", "and", "serve", "..", "smh"]
(c11-5 / contrast-01
       :ARG2 (c11-4 / call-01
                    :ARG0 (c11-7 / they)
                    :ARG1 (c11-2 / it)
                    :ARG2 (c11-8 / and
                                 :op1 (c11-3 / protect-01
                                             :ARG1 (c11-0 / law))
                                 :op2 (c11-6 / serve-01)))
       :mod (c11-1 / smh
                   :mode expressive))

# ::snt It's not working.~
# ::tokens ["It", "'s", "not", "working.~"]
# ::lemmas ["it", "be", "not", "working.~"]
(c12-0 / work-09
       :ARG1 (c12-1 / it)
       :polarity -)

# ::snt And how long has innocent blacks been getting killed..
# ::tokens ["And", "how", "long", "has", "innocent", "blacks", "been", "getting", "killed", ".."]
# ::lemmas ["and", "how", "long", "have", "innocent", "black", "be", "getting", "kill", ".."]
(c13-5 / and
       :op2 (c13-4 / kill-01
                   :ARG1 (c13-3 / person
                                :ARG1-of (c13-0 / black-05)
                                :ARG1-of (c13-2 / innocent-01))
                   :duration (c13-1 / amr-unknown)))

# ::snt Notice first video they show you is heavily edited. Just shows push &amp; contact and leaving. Suspicious
# ::tokens ["Notice", "first", "video", "they", "show", "you", "is", "heavily", "edited", ".", "Just", "shows", "push", "&", "amp", ";", "contact", "and", "leaving", ".", "Suspicious"]
# ::lemmas ["notice", "first", "video", "they", "show", "you", "be", "heavily", "edit", ".", "just", "show", "push", "&", "amp", ";", "contact", "and", "leave", ".", "suspicious"]
(c14-4 / multi-sentence
       :snt1 (c14-10 / notice-01
                     :ARG0 (c14-1 / you)
                     :ARG1 (c14-6 / edit-01
                                  :ARG1 (c14-11 / video
                                                :ord (c14-5 / ordinal-entity
                                                            :value 1)
                                                :ARG1-of (c14-13 / show-01
                                                                 :ARG0 (c14-14 / they)
                                                                 :ARG2 c14-1))
                                  :manner (c14-0 / heavy))
                     :mode imperative)
       :snt2 (c14-7 / show-01
                    :ARG0 (c14-9 / i)
                    :ARG1 (c14-15 / and
                                  :op1 (c14-12 / push-01)
                                  :op2 (c14-8 / amp))
                    :mod (c14-2 / just))
       :snt3 (c14-3 / suspicious-03))

# ::snt You do know I was being sarcastic ?
# ::tokens ["You", "do", "know", "I", "was", "being", "sarcastic", "?"]
# ::lemmas ["you", "do", "know", "i", "be", "be", "sarcastic", "?"]
(c15-3 / know-01
       :polarity (c15-4 / amr-unknown)
       :ARG0 (c15-0 / you)
       :ARG1 (c15-2 / sarcastic
                    :domain (c15-1 / i)))

# ::snt Why aren't any young white males getting killed by Black CopsEye for Eye, Tooth for Tooth Right...
# ::tokens ["Why", "are", "n't", "any", "young", "white", "males", "getting", "killed", "by", "Black", "CopsEye", "for", "Eye", ",", "Tooth", "for", "Tooth", "Right", "..."]
# ::lemmas ["why", "be", "not", "any", "young", "white", "male", "getting", "kill", "by", "Black", "CopsEye", "for", "Eye", ",", "Tooth", "for", "Tooth", "Right", "..."]
(c16-3 / kill-01
       :ARG0 (c16-5 / person
                    :name (c16-4 / name
                                 :op1 "Black"
                                 :op2 "Cops"
                                 :op3 "For"
                                 :op4 "Eyepatch")
                    :ARG0-of (c16-2 / mean-01
                                    :ARG1 (c16-9 / tooth
                                                 :prep-for (c16-8 / tooth))))
       :ARG1 (c16-6 / male
                    :mod (c16-0 / young)
                    :ARG1-of (c16-1 / white-02))
       :ARG1-of (c16-7 / cause-01
                       :ARG0 (c16-10 / amr-unknown))
       :polarity -)

# ::snt tell it to the people thats trigger mad when was the last time you heard of a little white dude gunned down by a Black
# ::tokens ["tell", "it", "to", "the", "people", "that", "s", "trigger", "mad", "when", "was", "the", "last", "time", "you", "heard", "of", "a", "little", "white", "dude", "gunned", "down", "by", "a", "Black"]
# ::lemmas ["tell", "it", "to", "the", "people", "that", "s", "trigger", "mad", "when", "be", "the", "last", "time", "you", "hear", "of", "a", "little", "white", "dude", "gun", "down", "by", "a", "Black"]
(c17-12 / tell-01
        :ARG0 (c17-1 / you)
        :ARG1 (c17-0 / hear-01
                     :ARG0 c17-1
                     :ARG1 (c17-10 / shoot-down-05
                                   :ARG0 (c17-7 / person
                                                :ARG1-of (c17-5 / black-05))
                                   :ARG1 (c17-8 / dude
                                                :mod (c17-3 / little)
                                                :ARG1-of (c17-2 / white-02)))
                     :mod (c17-9 / last)
                     :time (c17-14 / amr-unknown))
        :ARG2 (c17-13 / person
                      :mod (c17-11 / that)
                      :ARG1-of (c17-4 / mad-04
                                      :ARG2 (c17-6 / trigger)))
        :mode imperative)

# ::snt If you kill an innocent person you are a criminal and should be handled as such.
# ::tokens ["If", "you", "kill", "an", "innocent", "person", "you", "are", "a", "criminal", "and", "should", "be", "handled", "as", "such", "."]
# ::lemmas ["if", "you", "kill", "an", "innocent", "person", "you", "be", "a", "criminal", "and", "should", "be", "handle", "as", "such", "."]
(c18-7 / and
       :op1 (c18-5 / criminal-03
                   :ARG2 (c18-1 / you))
       :op2 (c18-4 / recommend-01
                   :ARG1 (c18-0 / handle-01
                                :ARG1 c18-1
                                :manner c18-5))
       :condition (c18-6 / kill-01
                         :ARG0 c18-1
                         :ARG1 (c18-3 / person
                                      :ARG1-of (c18-2 / innocent-01))))

# ::snt How about...We just stop killing innocent people period? Seems easy enough to me.
# ::tokens ["How", "about", "...", "We", "just", "stop", "killing", "innocent", "people", "period", "?", "Seems", "easy", "enough", "to", "me", "."]
# ::lemmas ["how", "about", "...", "we", "just", "stop", "kill", "innocent", "people", "period", "?", "seem", "easy", "enough", "to", "i", "."]
(c19-4 / multi-sentence
       :snt1 (c19-11 / suggest-01
                     :ARG1 (c19-6 / stop-01
                                  :ARG0 (c19-1 / we)
                                  :ARG1 (c19-12 / kill-01
                                                :ARG0 c19-1
                                                :ARG1 (c19-9 / person
                                                             :ARG1-of (c19-8 / innocent-01)))
                                  :mod (c19-0 / just)
                                  :mod (c19-13 / period)))
       :snt2 (c19-3 / seem-01
                    :ARG1 (c19-7 / easy-05
                                 :ARG2-of (c19-2 / have-degree-91
                                                 :ARG1 c19-6
                                                 :ARG3 (c19-5 / enough)))
                    :ARG2 (c19-10 / i)))

# ::snt its still a crime
# ::tokens ["its", "still", "a", "crime"]
# ::lemmas ["its", "still", "a", "crime"]
(c20-1 / crime-02
       :ARG1 (c20-2 / it)
       :mod (c20-0 / still))

# ::snt So Not Murder????!!! That's my point!!!!!!!!!!!!!!!
# ::tokens ["So", "Not", "Murder", "?", "?", "?", "?", "!", "!", "!", "That", "'s", "my", "point", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["so", "not", "Murder", "?", "?", "?", "?", "!", "!", "!", "that", "be", "my", "point", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]
(c21-0 / multi-sentence
       :snt1 (c21-4 / cause-01
                    :ARG1 (c21-3 / murder-01
                                 :polarity (c21-6 / amr-unknown)
                                 :polarity -))
       :snt2 (c21-2 / point-04
                    :ARG0 (c21-1 / i)
                    :ARG1 (c21-5 / that)))

# ::snt how do we know that happened? There are multiple eye witnesses that say otherwise..
# ::tokens ["how", "do", "we", "know", "that", "happened", "?", "There", "are", "multiple", "eye", "witnesses", "that", "say", "otherwise", ".."]
# ::lemmas ["how", "do", "we", "know", "that", "happen", "?", "there", "be", "multiple", "eye", "witness", "that", "say", "otherwise", ".."]
(c22-2 / multi-sentence
       :snt1 (c22-9 / know-01
                    :ARG0 (c22-0 / we)
                    :ARG1 (c22-4 / event)
                    :manner (c22-10 / amr-unknown))
       :snt2 (c22-5 / witness-01
                    :ARG0 (c22-6 / person
                                 :part (c22-3 / eye)
                                 :quant (c22-7 / multiple))
                    :ARG1 (c22-8 / something
                                 :mod (c22-1 / else))
                    :manner c22-3))

# ::snt my point was that whole eye for an eye mentality just results in more innocents being killed.
# ::tokens ["my", "point", "was", "that", "whole", "eye", "for", "an", "eye", "mentality", "just", "results", "in", "more", "innocents", "being", "killed", "."]
# ::lemmas ["my", "point", "be", "that", "whole", "eye", "for", "an", "eye", "mentality", "just", "result", "in", "more", "innocent", "be", "kill", "."]
(c23-6 / point-04
       :ARG0 (c23-5 / i)
       :ARG1 (c23-7 / result-01
                    :ARG1 (c23-4 / eye
                                 :mod (c23-1 / whole)
                                 :purpose (c23-2 / mentality
                                                 :mod (c23-3 / eye)))
                    :ARG2 (c23-10 / kill-01
                                  :ARG1 (c23-11 / person
                                                :ARG1-of (c23-9 / innocent-01)
                                                :quant (c23-8 / more)))
                    :mod (c23-0 / just)))

# ::snt Can just hear him,"Hey Darian I just robbed a store so lets walk in street block traffic &amp; draw attention to ourselves
# ::tokens ["Can", "just", "hear", "him,\"Hey", "Darian", "I", "just", "robbed", "a", "store", "so", "lets", "walk", "in", "street", "block", "traffic", "&", "amp", ";", "draw", "attention", "to", "ourselves"]
# ::lemmas ["can", "just", "hear", "him,\"Hey", "Darian", "i", "just", "rob", "a", "store", "so", "lets", "walk", "in", "street", "block", "traffic", "&", "amp", ";", "draw", "attention", "to", "ourselves"]
(c24-3 / possible-01
       :ARG1 (c24-8 / hear-01
                    :ARG0 (c24-16 / i)
                    :ARG1 (c24-7 / and
                                 :op1 (c24-6 / hey
                                             :mode expressive)
                                 :op2 (c24-18 / cause-01
                                              :ARG0 (c24-13 / rob-01
                                                            :ARG0 c24-16
                                                            :ARG1 (c24-5 / store)
                                                            :time (c24-0 / just))
                                              :ARG1 (c24-9 / let-01
                                                           :ARG0 (c24-14 / we)
                                                           :ARG1 (c24-15 / and
                                                                         :op1 (c24-1 / walk-01
                                                                                     :ARG0 c24-14
                                                                                     :ARG2 (c24-12 / and
                                                                                                   :op1 (c24-20 / traffic
                                                                                                                :mod (c24-10 / block-01
                                                                                                                             :ARG1 (c24-11 / street)))
                                                                                                   :op2 (c24-19 / amp)))
                                                                         :op2 (c24-4 / draw-02
                                                                                     :ARG0 c24-14
                                                                                     :ARG1 (c24-17 / attend-02
                                                                                                   :ARG0 c24-14
                                                                                                   :ARG1 c24-14))))))
                    :ARG2 (c24-2 / he)
                    :mod c24-0))

# ::snt Nawl only the ones that people get away with, do to their authority...
# ::tokens ["Nawl", "only", "the", "ones", "that", "people", "get", "away", "with", ",", "do", "to", "their", "authority", "..."]
# ::lemmas ["nawl", "only", "the", "one", "that", "people", "get", "away", "with", ",", "do", "to", "their", "authority", "..."]
(c25-2 / person
       :ARG1-of (c25-3 / do-02
                       :ARG0 (c25-5 / person)
                       :ARG2 (c25-6 / authority
                                    :poss c25-2))
       :domain (c25-0 / person
                      :mod (c25-1 / only))
       :ARG1-of (c25-4 / get-away-08
                       :ARG0 c25-5))

# ::snt Im not arguing that..We pointlessly kill each other also tho..So we're only worried about one type of murder now?
# ::tokens ["I", "m", "not", "arguing", "that", "..", "We", "pointlessly", "kill", "each", "other", "also", "tho", "..", "So", "we", "'re", "only", "worried", "about", "one", "type", "of", "murder", "now", "?"]
# ::lemmas ["i", "m", "not", "argue", "that", "..", "we", "pointlessly", "kill", "each", "other", "also", "tho", "..", "so", "we", "be", "only", "worried", "about", "one", "type", "of", "murder", "now", "?"]
(c26-2 / multi-sentence
       :snt1 (c26-15 / argue-01
                     :ARG0 (c26-5 / i)
                     :ARG1 (c26-14 / that)
                     :polarity -)
       :snt2 (c26-0 / have-concession-91
                    :ARG1 (c26-6 / kill-01
                                 :ARG0 (c26-1 / we
                                              :ARG1-of c26-6)
                                 :mod (c26-4 / also)
                                 :manner (c26-9 / point-03
                                                :polarity -)))
       :snt3 (c26-11 / cause-01
                     :ARG1 (c26-7 / worry-01
                                  :ARG0 (c26-10 / murder-01
                                                :mod (c26-13 / type
                                                             :quant 1))
                                  :ARG1 c26-1
                                  :mod (c26-3 / only)
                                  :time (c26-8 / now)
                                  :polarity (c26-12 / amr-unknown))))

# ::snt : Chief Jackson: officer Darren Wilson stopped initially because he was in the street and blocking traffic -IN THE HOOD?
# ::tokens [":", "Chief", "Jackson", ":", "officer", "Darren", "Wilson", "stopped", "initially", "because", "he", "was", "in", "the", "street", "and", "blocking", "traffic", "-IN", "THE", "HOOD", "?"]
# ::lemmas [":", "Chief", "Jackson", ":", "officer", "Darren", "Wilson", "stop", "initially", "because", "he", "be", "in", "the", "street", "and", "block", "traffic", "-in", "the", "hood", "?"]
(c27-14 / say-01
        :ARG0 (c27-9 / person
                     :name (c27-7 / name
                                  :op1 "Jackson")
                     :ARG0-of (c27-0 / have-org-role-91
                                     :ARG2 (c27-11 / chief)))
        :ARG1 (c27-4 / stop-01
                     :ARG1 (c27-16 / person
                                   :name (c27-8 / name
                                                :op1 "Darren"
                                                :op2 "Wilson")
                                   :ARG0-of c27-0
                                   :ARG2 (c27-3 / officer)))
        :ARG1-of (c27-10 / cause-01
                         :ARG0 (c27-17 / and
                                       :op1 (c27-2 / be-located-at-91
                                                   :ARG1 c27-16
                                                   :ARG2 (c27-1 / street))
                                       :op2 (c27-12 / block-01
                                                    :ARG0 c27-16
                                                    :ARG1 (c27-15 / traffic)))
                         :time (c27-6 / initial))
        :location (c27-13 / neighborhood)
        :polarity (c27-5 / amr-unknown))

# ::snt Sure...let's draw attention to ourselves!~
# ::tokens ["Sure", "...", "let", "'s", "draw", "attention", "to", "ourselves!~"]
# ::lemmas ["sure", "...", "let", "us", "draw", "attention", "to", "ourselves!~"]
(c28-2 / draw-02
       :ARG0 (c28-1 / we)
       :ARG1 (c28-3 / attend-02
                    :ARG0 c28-1
                    :ARG1 c28-1)
       :ARG1-of (c28-0 / sure-02)
       :mode imperative)

# ::snt Phew LOL
# ::tokens ["Phew", "LOL"]
# ::lemmas ["Phew", "lol"]
(c29-0 / phew-01
       :ARG2-of (c29-1 / laugh-01
                       :ARG0 (c29-2 / i)
                       :manner (c29-3 / loud))
       :mode expressive)

# ::snt U jus covered all grounds then
# ::tokens ["U", "jus", "covered", "all", "grounds", "then"]
# ::lemmas ["u", "ju", "cover", "all", "ground", "then"]
(c30-2 / cover-03
       :ARG0 (c30-1 / country
                    :name (c30-0 / name
                                 :op1 "U jus"))
       :ARG1 (c30-3 / ground
                    :mod (c30-5 / all))
       :time (c30-4 / then))

# ::snt Yeah its such a crime to cross the street to get from one side of the street to the Other.GOOD GRIEF APARTHEID IN AMERICA!
# ::tokens ["Yeah", "its", "such", "a", "crime", "to", "cross", "the", "street", "to", "get", "from", "one", "side", "of", "the", "street", "to", "the", "Other", ".", "GOOD", "GRIEF", "APARTHEID", "IN", "AMERICA", "!"]
# ::lemmas ["yeah", "its", "such", "a", "crime", "to", "cross", "the", "street", "to", "get", "from", "one", "side", "of", "the", "street", "to", "the", "other", ".", "good", "GRIEF", "APARTHEID", "in", "AMERICA", "!"]
(c31-3 / multi-sentence
       :snt1 (c31-11 / crime-02
                     :ARG1 (c31-10 / cross-02
                                   :ARG1 (c31-15 / street)
                                   :purpose (c31-12 / get-05
                                                    :ARG1 (c31-7 / side
                                                                 :mod (c31-5 / one)
                                                                 :part-of (c31-2 / street))
                                                    :ARG2 (c31-6 / side
                                                                 :mod (c31-4 / other))))
                     :mod (c31-1 / yeah)
                     :degree (c31-0 / such))
       :snt2 (c31-13 / give-01
                     :ARG0 (c31-14 / you)
                     :ARG1 (c31-17 / amnesty)
                     :ARG2 (c31-16 / country
                                   :name (c31-8 / name
                                                :op1 "America"))
                     :mod (c31-9 / good)
                     :mode imperative))

# ::snt TICKET ABLE OFFENSE! Not execution worthy!!!!
# ::tokens ["TICKET", "ABLE", "OFFENSE", "!", "Not", "execution", "worthy", "!", "!", "!", "!"]
# ::lemmas ["TICKET", "ABLE", "OFFENSE", "!", "not", "execution", "worthy", "!", "!", "!", "!"]
(c32-0 / multi-sentence
       :snt1 (c32-1 / offer-01
                    :ARG1 (c32-3 / pickup)
                    :mod (c32-5 / additional))
       :snt2 (c32-4 / deserve-01
                    :ARG0 (c32-2 / execute-01)
                    :polarity -))
