# ::snt isn't "prayer" how we got into this situation in the first place?
# ::tokens ["is", "n't", "\"", "prayer", "\"", "how", "we", "got", "into", "this", "situation", "in", "the", "first", "place", "?"]
# ::lemmas ["be", "not", "\"", "prayer", "\"", "how", "we", "get", "into", "this", "situation", "in", "the", "first", "place", "?"]
(c1-3 / pray-01
      :polarity (c1-8 / amr-unknown)
      :ARG0-of (c1-4 / cause-01
                     :ARG1 (c1-5 / get-05
                                 :ARG1 (c1-0 / we)
                                 :ARG2 (c1-6 / situation
                                             :mod (c1-7 / this))
                                 :manner (c1-1 / amr-unknown)
                                 :mod (c1-2 / in-the-first-place))))

# ::snt : Say a prayer for those being held hostage in the Lindt cafe in Martin Place, Sydney. hoping every1 stays safe
# ::tokens [":", "Say", "a", "prayer", "for", "those", "being", "held", "hostage", "in", "the", "Lindt", "cafe", "in", "Martin", "Place", ",", "Sydney", ".", "hoping", "every1", "stays", "safe"]
# ::lemmas [":", "say", "a", "prayer", "for", "those", "be", "hold", "hostage", "in", "the", "Lindt", "cafe", "in", "Martin", "Place", ",", "Sydney", ".", "hope", "every1", "stay", "safe"]
(c2-0 / multi-sentence
      :snt1 (c2-5 / say-01
                  :ARG0 (c2-15 / you)
                  :ARG1 (c2-19 / thing
                               :ARG1-of (c2-3 / pray-01
                                              :ARG0 c2-15
                                              :beneficiary (c2-6 / person
                                                                 :ARG1-of (c2-8 / hold-01
                                                                                :ARG2 (c2-7 / hostage)
                                                                                :location (c2-18 / cafe
                                                                                                 :name (c2-12 / name
                                                                                                              :op1 "Lindt")
                                                                                                 :location (c2-10 / street-address-91
                                                                                                                  :ARG2 (c2-16 / street
                                                                                                                               :name (c2-17 / name
                                                                                                                                            :op1 "Martin"
                                                                                                                                            :op2 "Place")
                                                                                                                               :location (c2-4 / city
                                                                                                                                               :name (c2-1 / name
                                                                                                                                                           :op1 "Sydney")))))))))
                  :snt2 (c2-2 / hope-01
                              :ARG0 (c2-13 / i)
                              :ARG1 (c2-9 / stay-01
                                          :ARG1 (c2-11 / everyone
                                                       :quant 1)
                                          :ARG3 (c2-14 / safe-01
                                                       :ARG1 c2-11)))
                  :mode imperative))

# ::snt can't hurt
# ::tokens ["ca", "n't", "hurt"]
# ::lemmas ["can", "not", "hurt"]
(c3-1 / possible-01
      :ARG1 (c3-0 / hurt-01)
      :polarity -)

# ::snt You could kiss your dog on the lips as well... Not going to help... Not going to hurt..
# ::tokens ["You", "could", "kiss", "your", "dog", "on", "the", "lips", "as", "well", "...", "Not", "going", "to", "help", "...", "Not", "going", "to", "hurt", ".."]
# ::lemmas ["you", "could", "kiss", "your", "dog", "on", "the", "lip", "as", "well", "...", "not", "go", "to", "help", "...", "not", "go", "to", "hurt", ".."]
(c4-3 / multi-sentence
      :snt1 (c4-5 / possible-01
                  :ARG1 (c4-8 / kiss-01
                              :ARG0 (c4-1 / you)
                              :ARG1 (c4-6 / dog
                                          :poss c4-1
                                          :part (c4-2 / lip
                                                      :location-of c4-8))
                              :mod (c4-9 / as-well)))
      :snt2 (c4-0 / help-01
                  :ARG0 (c4-7 / you)
                  :polarity -)
      :snt3 (c4-4 / hurt-01
                  :ARG1 c4-7
                  :polarity -))

# ::snt I think "they" might be starting to realize why vigilantism is needed in the world.
# ::tokens ["I", "think", "\"", "they", "\"", "might", "be", "starting", "to", "realize", "why", "vigilantism", "is", "needed", "in", "the", "world", "."]
# ::lemmas ["i", "think", "\"", "they", "\"", "might", "be", "start", "to", "realize", "why", "vigilantism", "be", "need", "in", "the", "world", "."]
(c5-10 / think-01
       :ARG0 (c5-1 / i)
       :ARG1 (c5-4 / possible-01
                   :ARG1 (c5-9 / start-01
                               :ARG0 (c5-8 / they)
                               :ARG1 (c5-5 / realize-01
                                           :ARG0 c5-8
                                           :ARG1 (c5-3 / thing
                                                       :ARG0-of (c5-6 / cause-01
                                                                      :ARG1 (c5-2 / need-01
                                                                                  :ARG1 (c5-7 / vigilantism)
                                                                                  :location (c5-0 / world))))))))

# ::snt Yeah.. that's going to help! : Say a prayer for those being held hostage in the Lindt cafe in Martin Place, Sydney
# ::tokens ["Yeah", "..", "that", "'s", "going", "to", "help", "!", ":", "Say", "a", "prayer", "for", "those", "being", "held", "hostage", "in", "the", "Lindt", "cafe", "in", "Martin", "Place", ",", "Sydney"]
# ::lemmas ["yeah", "..", "that", "be", "go", "to", "help", "!", ":", "say", "a", "prayer", "for", "those", "be", "hold", "hostage", "in", "the", "Lindt", "cafe", "in", "Martin", "Place", ",", "Sydney"]
(c6-3 / multi-sentence
      :snt1 (c6-0 / help-01
                  :ARG0 (c6-14 / that))
      :snt2 (c6-13 / say-01
                   :ARG0 (c6-1 / you)
                   :ARG1 (c6-7 / pray-01
                               :ARG0 c6-1
                               :ARG1 (c6-15 / person
                                            :mod (c6-12 / that)
                                            :ARG1-of (c6-16 / hold-01
                                                            :ARG2 (c6-6 / hostage)
                                                            :location (c6-9 / cafe
                                                                            :name (c6-5 / name
                                                                                        :op1 "Lindt")
                                                                            :location (c6-4 / street-address-91
                                                                                            :ARG2 (c6-2 / street
                                                                                                        :name (c6-8 / name
                                                                                                                    :op1 "Martin"
                                                                                                                    :op2 "Place")
                                                                                                        :location (c6-10 / city
                                                                                                                         :name (c6-11 / name
                                                                                                                                      :op1 "Sydney"))))))))
                   :mode imperative))

# ::snt how about we don't play into their hands by running it live on every TV station?
# ::tokens ["how", "about", "we", "do", "n't", "play", "into", "their", "hands", "by", "running", "it", "live", "on", "every", "TV", "station", "?"]
# ::lemmas ["how", "about", "we", "do", "not", "play", "into", "their", "hand", "by", "run", "it", "live", "on", "every", "tv", "station", "?"]
(c7-10 / amr-unknown
       :topic (c7-4 / play-02
                    :ARG0 (c7-0 / we)
                    :ARG1 (c7-3 / in-ones-hands-04
                                :ARG0 (c7-9 / they)
                                :ARG1 (c7-6 / it))
                    :manner (c7-5 / run-09
                                  :ARG0 c7-0
                                  :ARG1 c7-6
                                  :manner (c7-1 / live)
                                  :medium (c7-8 / station
                                                :mod (c7-7 / television)
                                                :mod (c7-2 / every)))
                    :polarity -))

# ::snt prayers and thoughts with everyone, stay safe.
# ::tokens ["prayers", "and", "thoughts", "with", "everyone", ",", "stay", "safe", "."]
# ::lemmas ["prayer", "and", "thought", "with", "everyone", ",", "stay", "safe", "."]
(c8-3 / stay-01
      :ARG1 (c8-0 / you)
      :ARG3 (c8-1 / safe-01
                  :ARG1 c8-0)
      :accompanier (c8-5 / and
                         :op1 (c8-2 / pray-01
                                    :ARG0 c8-0)
                         :op2 (c8-4 / think-01
                                    :ARG0 c8-0)))

# ::snt Don't need prayers when you have the Australian SOG &amp; SAS on the job. Predicting dead Islamists within the hour.
# ::tokens ["Do", "n't", "need", "prayers", "when", "you", "have", "the", "Australian", "SOG", "&", "amp", ";", "SAS", "on", "the", "job", ".", "Predicting", "dead", "Islamists", "within", "the", "hour", "."]
# ::lemmas ["do", "not", "need", "prayer", "when", "you", "have", "the", "Australian", "SOG", "&", "amp", ";", "SAS", "on", "the", "job", ".", "predict", "dead", "Islamists", "within", "the", "hour", "."]
(c9-1 / multi-sentence
      :snt1 (c9-13 / need-01
                   :ARG0 (c9-18 / you)
                   :ARG1 (c9-4 / pray-01)
                   :time (c9-9 / have-03
                               :ARG0 c9-18
                               :ARG1 (c9-7 / and
                                           :op1 (c9-14 / military
                                                       :name (c9-19 / name
                                                                    :op1 "SOG")
                                                       :mod (c9-20 / country
                                                                   :name (c9-2 / name
                                                                               :op1 "Australia")))
                                           :op2 (c9-11 / military
                                                       :name (c9-3 / name
                                                                   :op1 "SAS")
                                                       :mod c9-20)
                                           :location (c9-0 / job)))
                   :polarity -)
      :snt2 (c9-6 / predict-01
                  :ARG1 (c9-12 / person
                               :mod (c9-15 / religious-group
                                           :name (c9-22 / name
                                                        :op1 "Islamism"))
                               :ARG1-of (c9-5 / die-01))
                  :time (c9-17 / after
                               :op1 (c9-10 / now)
                               :quant (c9-16 / up-to
                                             :op1 (c9-21 / temporal-quantity
                                                         :unit (c9-8 / hour)
                                                         :quant 1)))))

# ::snt You know there is a funny reporter who likes to hang around pseudo-vigilantes like and
# ::tokens ["You", "know", "there", "is", "a", "funny", "reporter", "who", "likes", "to", "hang", "around", "pseudo", "-", "vigilantes", "like", "and"]
# ::lemmas ["you", "know", "there", "be", "a", "funny", "reporter", "who", "like", "to", "hang", "around", "pseudo", "-", "vigilante", "like", "and"]
(c10-7 / know-01
       :ARG0 (c10-1 / you)
       :ARG1 (c10-5 / person
                    :ARG0-of (c10-6 / report-01)
                    :mod (c10-2 / funny)
                    :ARG0-of (c10-3 / like-01
                                    :ARG1 (c10-0 / hang-01
                                                 :ARG1 c10-5
                                                 :ARG2 (c10-9 / around
                                                              :op1 (c10-4 / vigilante
                                                                          :mod (c10-8 / pseudo)))))))

# ::snt hope no one gets seriously gets hurt.
# ::tokens ["hope", "no", "one", "gets", "seriously", "gets", "hurt", "."]
# ::lemmas ["hope", "no", "one", "gets", "seriously", "gets", "hurt", "."]
(c11-0 / hope-01
       :ARG0 (c11-1 / i)
       :ARG1 (c11-4 / hurt-01
                    :ARG1 (c11-2 / no-one)
                    :ARG1-of (c11-3 / serious-02)))

# ::snt feeling sick to my stomach, prayers and thoughts with them and their safety!
# ::tokens ["feeling", "sick", "to", "my", "stomach", ",", "prayers", "and", "thoughts", "with", "them", "and", "their", "safety", "!"]
# ::lemmas ["feel", "sick", "to", "my", "stomach", ",", "prayer", "and", "thought", "with", "they", "and", "their", "safety", "!"]
(c12-0 / feel-01
       :ARG0 (c12-4 / i
                    :part (c12-7 / stomach))
       :ARG1 (c12-2 / sick-05
                    :ARG1 c12-4
                    :ARG2 c12-7)
       :accompanier (c12-9 / and
                           :op1 (c12-5 / pray-01
                                       :ARG0 c12-4
                                       :ARG2 (c12-3 / and
                                                    :op1 (c12-8 / they)
                                                    :op2 (c12-1 / safe-01
                                                                :ARG1 c12-8)))
                           :op2 (c12-6 / think-01
                                       :ARG0 c12-4
                                       :ARG2 c12-3)))

# ::snt let's hope their prayers are heard by Allah he seems to be running this show. Religion sucks!!
# ::tokens ["let", "'s", "hope", "their", "prayers", "are", "heard", "by", "Allah", "he", "seems", "to", "be", "running", "this", "show", ".", "Religion", "sucks", "!", "!"]
# ::lemmas ["let", "us", "hope", "their", "prayer", "be", "hear", "by", "Allah", "he", "seem", "to", "be", "run", "this", "show", ".", "religion", "suck", "!", "!"]
(c13-3 / multi-sentence
       :snt1 (c13-0 / hope-01
                    :ARG0 (c13-1 / we)
                    :ARG1 (c13-15 / hear-01
                                  :ARG0 (c13-8 / person
                                               :name (c13-6 / name
                                                            :op1 "Allah"))
                                  :ARG1 (c13-13 / thing
                                                :ARG1-of (c13-14 / pray-01
                                                                 :ARG0 (c13-11 / they))))
                    :mode imperative)
       :snt2 (c13-12 / seem-01
                     :ARG1 (c13-9 / run-09
                                  :ARG0 (c13-7 / he)
                                  :ARG1 (c13-4 / show-04
                                               :mod (c13-10 / this))))
       :snt3 (c13-2 / suck-03
                    :ARG0 (c13-5 / religion)))

# ::snt very sad. It makes me feel sick that these cowards attack innocent people.
# ::tokens ["very", "sad", ".", "It", "makes", "me", "feel", "sick", "that", "these", "cowards", "attack", "innocent", "people", "."]
# ::lemmas ["very", "sad", ".", "it", "make", "i", "feel", "sick", "that", "these", "coward", "attack", "innocent", "people", "."]
(c14-1 / multi-sentence
       :snt1 (c14-9 / sad-02
                    :degree (c14-4 / very))
       :snt2 (c14-5 / make-02
                    :ARG0 (c14-11 / attack-01
                                  :ARG0 (c14-7 / coward
                                               :mod (c14-10 / this))
                                  :ARG1 (c14-6 / person
                                               :ARG1-of (c14-3 / innocent-01)))
                    :ARG1 (c14-0 / feel-01
                                 :ARG0 (c14-8 / i)
                                 :ARG1 (c14-2 / sick-05
                                              :ARG0 c14-11
                                              :ARG1 c14-8))))

# ::snt no pray. Hope that those managing the incident are doing what they were trained to do.
# ::tokens ["no", "pray", ".", "Hope", "that", "those", "managing", "the", "incident", "are", "doing", "what", "they", "were", "trained", "to", "do", "."]
# ::lemmas ["no", "pray", ".", "hope", "that", "those", "manage", "the", "incident", "be", "do", "what", "they", "be", "train", "to", "do", "."]
(c16-1 / multi-sentence
       :snt1 (c16-4 / pray-01
                    :polarity -)
       :snt2 (c16-0 / hope-01
                    :ARG1 (c16-5 / do-02
                                 :ARG0 (c16-9 / person
                                              :mod (c16-8 / that)
                                              :ARG0-of (c16-6 / manage-01
                                                              :ARG1 (c16-2 / incident)))
                                 :ARG1 (c16-7 / thing
                                              :ARG2-of (c16-3 / train-01
                                                              :ARG1 c16-9))
                                 :ARG1 c16-7)))

# ::snt what pieces of shit
# ::tokens ["what", "pieces", "of", "shit"]
# ::lemmas ["what", "piece", "of", "shit"]
(c17-1 / piece
       :mod (c17-0 / shit)
       :degree (c17-2 / so))
