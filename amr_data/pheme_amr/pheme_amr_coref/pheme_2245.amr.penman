# ::snt I know everything you've done and said has been your own response but thanks from this old pencil pusher for saying it all
# ::tokens ["I", "know", "everything", "you", "'ve", "done", "and", "said", "has", "been", "your", "own", "response", "but", "thanks", "from", "this", "old", "pencil", "pusher", "for", "saying", "it", "all"]
# ::lemmas ["i", "know", "everything", "you", "'ve", "do", "and", "say", "have", "be", "your", "own", "response", "but", "thank", "from", "this", "old", "pencil", "pusher", "for", "say", "it", "all"]
(c1-8 / contrast-01
      :ARG1 (c1-13 / know-01
                   :ARG0 (c1-5 / i)
                   :ARG1 (c1-7 / respond-01
                               :ARG0 (c1-0 / you)
                               :ARG2 (c1-3 / everything
                                           :ARG1-of (c1-9 / do-02
                                                          :ARG0 c1-0)
                                           :ARG1-of (c1-11 / say-01
                                                           :ARG0 c1-0))))
      :ARG2 (c1-12 / thank-01
                   :ARG0 c1-5
                   :ARG1 (c1-6 / person
                               :ARG0-of (c1-14 / pushe-01
                                               :ARG1 (c1-1 / pencil))
                               :mod (c1-2 / old)
                               :mod (c1-10 / this))
                   :ARG2 (c1-4 / say-01
                               :ARG0 c1-6
                               :ARG1 c1-3)))

# ::snt if terrorists killed every one, would they have to do an honest job, or go on the dole?
# ::tokens ["if", "terrorists", "killed", "every", "one", ",", "would", "they", "have", "to", "do", "an", "honest", "job", ",", "or", "go", "on", "the", "dole", "?"]
# ::lemmas ["if", "terrorist", "kill", "every", "one", ",", "would", "they", "have", "to", "do", "an", "honest", "job", ",", "or", "go", "on", "the", "dole", "?"]
(c3-9 / amr-choice
      :op1 (c3-3 / obligate-01
                 :ARG1 (c3-8 / terrorist)
                 :ARG2 (c3-6 / do-02
                             :ARG0 c3-8
                             :ARG1 (c3-0 / job
                                         :ARG1-of (c3-1 / honest-01
                                                        :ARG0 c3-8))))
      :op2 (c3-7 / go-01
                 :ARG1 c3-8
                 :ARG4 (c3-2 / dole))
      :condition (c3-5 / kill-01
                       :ARG0 c3-8
                       :ARG1 (c3-4 / everyone)))

# ::snt Like the style Mr Rowson... V Beano
# ::tokens ["Like", "the", "style", "Mr", "Rowson", "...", "V", "Beano"]
# ::lemmas ["like", "the", "style", "Mr", "Rowson", "...", "V", "Beano"]
(c4-3 / resemble-01
      :ARG1 (c4-4 / style
                  :poss (c4-2 / person
                              :name (c4-1 / name
                                          :op1 "Mr"
                                          :op2 "Rowson")
                              :ARG2-of c4-3))
      :name (c4-0 / name
                  :op1 "V"
                  :op2 "Beano"))

# ::snt defender of /sadden by loosing our supporter
# ::tokens ["defender", "of", "/sadden", "by", "loosing", "our", "supporter"]
# ::lemmas ["defender", "of", "/sadden", "by", "loose", "our", "supporter"]
(c5-5 / defend-01
      :ARG0 (c5-4 / person)
      :ARG1 (c5-7 / person
                  :name (c5-3 / name
                              :op1 "Sadden"))
      :manner (c5-1 / lose-02
                    :ARG0 c5-4
                    :ARG1 (c5-2 / person
                                :ARG0-of (c5-6 / support-01
                                               :ARG1 (c5-0 / we)))))

# ::snt clowns to us, but sadly millions of extremist idolize such facist terrorists
# ::tokens ["clowns", "to", "us", ",", "but", "sadly", "millions", "of", "extremist", "idolize", "such", "facist", "terrorists"]
# ::lemmas ["clown", "to", "we", ",", "but", "sadly", "millions", "of", "extremist", "idolize", "such", "facist", "terrorist"]
(c6-7 / contrast-01
      :ARG1 (c6-6 / clown-00
                  :beneficiary (c6-0 / we))
      :ARG2 (c6-5 / idolize-01
                  :ARG0 (c6-3 / extremist
                              :quant (c6-2 / multiple
                                           :op1 1000000))
                  :ARG1 (c6-9 / terrorist
                              :mod (c6-1 / facist)
                              :mod (c6-8 / such))
                  :ARG0-of (c6-4 / sad-02)))

# ::snt vive tout les cartoonists
# ::tokens ["vive", "tout", "les", "cartoonists"]
# ::lemmas ["vive", "tout", "les", "cartoonist"]
(c7-0 / laugh-01
      :ARG0 (c7-3 / cartoonist)
      :ARG1 (c7-1 / off
                  :op1 (c7-4 / ass))
      :ARG1-of (c7-2 / possible-01))

# ::snt Good point. But if everyone was dead, who would they work for?
# ::tokens ["Good", "point", ".", "But", "if", "everyone", "was", "dead", ",", "who", "would", "they", "work", "for", "?"]
# ::lemmas ["good", "point", ".", "but", "if", "everyone", "be", "dead", ",", "who", "would", "they", "work", "for", "?"]
(c8-1 / multi-sentence
      :snt1 (c8-3 / point-04
                  :ARG1-of (c8-6 / good-02))
      :snt2 (c8-5 / contrast-01
                  :ARG2 (c8-0 / work-01
                              :ARG0 (c8-7 / they)
                              :ARG2 (c8-8 / amr-unknown)
                              :condition (c8-4 / die-01
                                               :ARG1 (c8-2 / everyone)))))

# ::snt HaHaHa L{}Ve it !
# ::tokens ["HaHaHa", "L{}Ve", "it", "!"]
# ::lemmas ["HaHaHa", "l{}ve", "it", "!"]
(c9-0 / laugh-01
      :ARG1 (c9-1 / it)
      :mode expressive)

# ::snt i was thinking about their ' real world survival' skills. bet they cant even do their own laundry.
# ::tokens ["i", "was", "thinking", "about", "their", "'", "real", "world", "survival", "'", "skills", ".", "bet", "they", "ca", "nt", "even", "do", "their", "own", "laundry", "."]
# ::lemmas ["i", "be", "think", "about", "their", "'", "real", "world", "survival", "'", "skill", ".", "bet", "they", "can", "not", "even", "do", "their", "own", "laundry", "."]
(c11-2 / multi-sentence
       :snt1 (c11-13 / think-01
                     :ARG0 (c11-6 / i)
                     :ARG1 (c11-12 / skill
                                   :mod (c11-4 / survive-01
                                               :ARG0 (c11-11 / they)
                                               :location (c11-0 / world
                                                                :ARG1-of (c11-9 / real-04)))
                                   :poss c11-11))
       :snt2 (c11-3 / bet-01
                    :ARG0 c11-6)
       :ARG2 (c11-8 / possible-01
                    :ARG1 (c11-10 / do-02
                                  :ARG0 (c11-7 / they)
                                  :ARG1 (c11-1 / laundry
                                               :poss c11-7)
                                  :mod (c11-5 / even))
                    :polarity -))
