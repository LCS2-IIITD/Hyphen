# ::snt - correction: WAS an ISIS sympathiser. Now in hell with his Sluts of Satan!
# ::tokens ["-", "correction", ":", "WAS", "an", "ISIS", "sympathiser", ".", "Now", "in", "hell", "with", "his", "Sluts", "of", "Satan", "!"]
# ::lemmas ["-", "correction", ":", "be", "an", "ISIS", "sympathiser", ".", "now", "in", "hell", "with", "his", "Sluts", "of", "Satan", "!"]
(c1-1 / multi-sentence
      :snt1 (c1-8 / correct-01
                  :ARG1 (c1-11 / sympathize-01
                               :ARG0 (c1-6 / person
                                           :domain (c1-0 / he))
                               :ARG1 (c1-7 / criminal-organization
                                           :name (c1-4 / name
                                                       :op1 "ISIS"))))
      :snt2 (c1-2 / be-located-at-91
                  :ARG1 (c1-13 / he)
                  :ARG2 (c1-5 / hell)
                  :time (c1-9 / now)
                  :accompanier (c1-3 / shit
                                     :poss (c1-12 / person
                                                  :name (c1-10 / name
                                                               :op1 "Satan"))
                                     :poss c1-13)))

# ::snt : BREAKING NEWS: Suspected Ottawa gunman identified as Michael Joseph Hall sympathizer.
# ::tokens [":", "BREAKING", "NEWS", ":", "Suspected", "Ottawa", "gunman", "identified", "as", "Michael", "Joseph", "Hall", "sympathizer", "."]
# ::lemmas [":", "break", "news", ":", "Suspected", "Ottawa", "gunman", "identify", "as", "Michael", "Joseph", "Hall", "sympathizer", "."]
(c2-6 / report-01
      :ARG1 (c2-2 / identify-01
                  :ARG1 (c2-8 / gunman
                              :ARG1-of (c2-9 / suspect-01)
                              :location (c2-7 / city
                                              :name (c2-3 / name
                                                          :op1 "Ottawa")))
                  :ARG2 (c2-1 / sympathize-01
                              :ARG0 c2-8
                              :ARG1 (c2-5 / person
                                          :name (c2-4 / name
                                                      :op1 "Michael"
                                                      :op2 "Joseph"
                                                      :op3 "Hall"))))
      :ARG1-of (c2-0 / break-13))

# ::snt ISIS can Suck My Dick you WEAK MINDED pieces of unworthy Shit !
# ::tokens ["ISIS", "can", "Suck", "My", "Dick", "you", "WEAK", "MINDED", "pieces", "of", "unworthy", "Shit", "!"]
# ::lemmas ["ISIS", "can", "Suck", "My", "Dick", "you", "weak", "MINDED", "piece", "of", "unworthy", "shit", "!"]
(c3-6 / possible-01
      :ARG1 (c3-11 / and
                   :op1 (c3-9 / suck-01
                              :ARG0 (c3-8 / criminal-organization
                                          :name (c3-5 / name
                                                      :op1 "Islamic"
                                                      :op2 "organization"))
                              :ARG1 (c3-7 / dick
                                          :part-of (c3-4 / i)))
                   :op2 (c3-2 / make-01
                              :ARG0 (c3-0 / you)
                              :ARG1 (c3-10 / piece
                                           :consist-of (c3-3 / shit
                                                             :ARG1-of (c3-1 / deserve-01
                                                                            :polarity -))))))

# ::snt Really?
# ::tokens ["Really", "?"]
# ::lemmas ["really", "?"]
(c4-0 / real-04
      :polarity (c4-1 / amr-unknown))

# ::snt -BREAKING NEWS GUYS
# ::tokens ["-BREAKING", "NEWS", "GUYS"]
# ::lemmas ["-breaking", "news", "guys"]
(c5-0 / say-01
      :ARG1 (c5-1 / news
                  :ARG1-of (c5-3 / break-13))
      :ARG2 (c5-2 / guy))

# ::snt :Confirmed by both BBC and NBC News, what more do you need?
# ::tokens [":", "Confirmed", "by", "both", "BBC", "and", "NBC", "News", ",", "what", "more", "do", "you", "need", "?"]
# ::lemmas [":", "confirm", "by", "both", "BBC", "and", "NBC", "News", ",", "what", "more", "do", "you", "need", "?"]
(c6-4 / need-01
      :ARG0 (c6-0 / you)
      :ARG1 (c6-10 / amr-unknown
                   :mod (c6-1 / more))
      :ARG1-of (c6-8 / confirm-01
                     :ARG0 (c6-3 / and
                                 :op1 (c6-6 / publication
                                            :name (c6-5 / name
                                                        :op1 "BBC"))
                                 :op2 (c6-9 / publication
                                            :name (c6-7 / name
                                                        :op1 "NBC"
                                                        :op2 "News"))
                                 :mod (c6-2 / both))))

# ::snt I see the name Michael Zehaf-Bibeau bandied about, not Hall. Haven't seen any affiliations reported; speculated Algerian.
# ::tokens ["I", "see", "the", "name", "Michael", "Zehaf", "-", "Bibeau", "bandied", "about", ",", "not", "Hall", ".", "Have", "n't", "seen", "any", "affiliations", "reported", ";", "speculated", "Algerian", "."]
# ::lemmas ["i", "see", "the", "name", "Michael", "Zehaf", "-", "Bibeau", "bandy", "about", ",", "not", "Hall", ".", "have", "not", "see", "any", "affiliation", "report", ";", "speculate", "Algerian", "."]
(c7-0 / multi-sentence
      :snt1 (c7-5 / see-01
                  :ARG0 (c7-14 / i)
                  :ARG1 (c7-9 / bandy-01
                              :ARG1 (c7-11 / name
                                           :poss (c7-3 / person
                                                       :name (c7-18 / name
                                                                    :op1 "Michael"
                                                                    :op2 "Zehaf-Bibeau"))))
                  :ARG1-of (c7-19 / contrast-01
                                  :ARG2 (c7-15 / bandie-01
                                               :ARG1 (c7-1 / name
                                                           :poss (c7-6 / person
                                                                       :name (c7-2 / name
                                                                                   :op1 "Hall")))
                                               :polarity -)))
      :snt2 (c7-7 / and
                  :op1 (c7-10 / see-01
                              :ARG0 (c7-16 / i)
                              :ARG1 (c7-13 / affiliate-01
                                           :ARG1-of (c7-12 / report-01))
                              :polarity -)
                  :op2 (c7-17 / speculate-01
                              :ARG1 (c7-8 / person
                                          :mod (c7-4 / country
                                                     :name (c7-20 / name
                                                                  :op1 "Algeria"))))))

# ::snt Surprise!
# ::tokens ["Surprise", "!"]
# ::lemmas ["surprise", "!"]
(c8-0 / surprise-01)

# ::snt Michael Zehaf Bibeau is Canadian born in . He is years old.
# ::tokens ["Michael", "Zehaf", "Bibeau", "is", "Canadian", "born", "in", ".", "He", "is", "years", "old", "."]
# ::lemmas ["Michael", "Zehaf", "Bibeau", "be", "Canadian", "bear", "in", ".", "he", "be", "years", "old", "."]
(c9-2 / multi-sentence
      :snt1 (c9-3 / bear-02
                  :ARG1 (c9-6 / person
                              :name (c9-4 / name
                                          :op1 "Michael"
                                          :op2 "Zehaf"
                                          :op3 "Bibeau"))
                  :location (c9-7 / country
                                  :name (c9-5 / name
                                              :op1 "Canada")))
      :snt2 (c9-9 / age-01
                  :ARG1 (c9-0 / he)
                  :ARG2 (c9-8 / temporal-quantity
                              :unit (c9-1 / year)
                              :quant 1)))

# ::snt Drugs to convict me of the people in the store
# ::tokens ["Drugs", "to", "convict", "me", "of", "the", "people", "in", "the", "store"]
# ::lemmas ["drug", "to", "convict", "i", "of", "the", "people", "in", "the", "store"]
(c10-0 / have-purpose-91
       :ARG1 (c10-3 / drug)
       :ARG2 (c10-4 / convict-01
                    :ARG1 (c10-1 / i)
                    :ARG2 (c10-2 / person
                                 :location (c10-5 / store))))

# ::snt I don't read newspaper.
# ::tokens ["I", "do", "n't", "read", "newspaper", "."]
# ::lemmas ["i", "do", "not", "read", "newspaper", "."]
(c11-1 / read-01
       :ARG0 (c11-2 / i)
       :ARG1 (c11-0 / newspaper)
       :polarity -)
