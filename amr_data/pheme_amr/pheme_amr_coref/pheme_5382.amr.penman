# ::snt botox no never!
# ::tokens ["botox", "no", "never", "!"]
# ::lemmas ["botox", "no", "never", "!"]
(c1-0 / no
      :name (c1-2 / name
                  :op1 "botox")
      :time (c1-1 / ever)
      :mode expressive)

# ::snt in his dreams but
# ::tokens ["in", "his", "dreams", "but"]
# ::lemmas ["in", "his", "dream", "but"]
(c2-2 / contrast-01
      :ARG2 (c2-1 / dream-01
                  :ARG0 (c2-0 / he)))

# ::snt ALL FOUR..........
# ::tokens ["ALL", "FOUR", ".........."]
# ::lemmas ["all", "FOUR", ".........."]
(c3-0 / four
      :mod (c3-1 / all))

# ::snt i can understand why he is busy with that!
# ::tokens ["i", "can", "understand", "why", "he", "is", "busy", "with", "that", "!"]
# ::lemmas ["i", "can", "understand", "why", "he", "be", "busy", "with", "that", "!"]
(c4-4 / possible-01
      :ARG1 (c4-1 / understand-01
                  :ARG0 (c4-3 / i)
                  :ARG1 (c4-7 / thing
                              :ARG0-of (c4-5 / cause-01
                                             :ARG1 (c4-2 / busy-01
                                                         :ARG1 (c4-0 / he)
                                                         :ARG2 (c4-6 / that))))))

# ::snt I will take you both on.........NOW!
# ::tokens ["I", "will", "take", "you", "both", "on", ".........", "NOW", "!"]
# ::lemmas ["i", "will", "take", "you", "both", "on", ".........", "NOW", "!"]
(c5-4 / take-on-21
      :ARG0 (c5-2 / i)
      :ARG1 (c5-0 / you
                  :mod (c5-1 / both))
      :time (c5-3 / now
                  :mode expressive))

# ::snt Have you ever and a bear before???
# ::tokens ["Have", "you", "ever", "and", "a", "bear", "before", "?", "?", "?"]
# ::lemmas ["have", "you", "ever", "and", "a", "bear", "before", "?", "?", "?"]
(c6-5 / and
      :op1 (c6-0 / you)
      :op2 (c6-1 / bear)
      :time (c6-4 / before)
      :time (c6-2 / ever)
      :polarity (c6-3 / amr-unknown))

# ::snt what ?? he is fucking a pregnant bear!??
# ::tokens ["what", "?", "?", "he", "is", "fucking", "a", "pregnant", "bear", "!", "?", "?"]
# ::lemmas ["what", "?", "?", "he", "be", "fuck", "a", "pregnant", "bear", "!", "?", "?"]
(c7-2 / bear
      :ARG1-of (c7-3 / impregnate-01)
      :domain (c7-0 / he)
      :mod (c7-1 / fucking
                 :mode expressive)
      :polarity (c7-4 / amr-unknown))

# ::snt i luv u too babe you wanted me to come back here enjoy now!
# ::tokens ["i", "luv", "u", "too", "babe", "you", "wanted", "me", "to", "come", "back", "here", "enjoy", "now", "!"]
# ::lemmas ["i", "luv", "u", "too", "babe", "you", "want", "i", "to", "come", "back", "here", "enjoy", "now", "!"]
(c9-10 / say-01
       :ARG0 (c9-6 / i)
       :ARG1 (c9-12 / and
                    :op1 (c9-3 / love-01
                               :ARG0 c9-6
                               :ARG1 (c9-1 / you
                                           :mod (c9-4 / babe))
                               :mod (c9-11 / too))
                    :op2 (c9-2 / want-01
                               :ARG0 c9-1
                               :ARG1 (c9-8 / come-01
                                           :ARG1 c9-6
                                           :ARG4 (c9-0 / here)
                                           :direction (c9-9 / back)))
                    :op3 (c9-5 / enjoy-01
                               :ARG0 c9-1
                               :time (c9-7 / now)))
       :ARG2 c9-1)

# ::snt Putin and you have a lot in common Dom
# ::tokens ["Putin", "and", "you", "have", "a", "lot", "in", "common", "Dom"]
# ::lemmas ["Putin", "and", "you", "have", "a", "lot", "in", "common", "dom"]
(c11-6 / say-01
       :ARG0 (c11-1 / i)
       :ARG1 (c11-5 / common
                    :domain (c11-8 / and
                                   :op1 (c11-4 / person
                                               :name (c11-2 / name
                                                            :op1 "Putin"))
                                   :op2 (c11-7 / person
                                               :name (c11-3 / name
                                                            :op1 "Dom")))
                    :quant (c11-0 / lot))
       :ARG2 c11-7)

# ::snt I will......... any chance of a ? ..... js
# ::tokens ["I", "will", ".........", "any", "chance", "of", "a", "?", ".....", "js"]
# ::lemmas ["i", "will", ".........", "any", "chance", "of", "a", "?", ".....", "j"]
(c12-1 / chance-02
       :ARG0 (c12-3 / i)
       :ARG1 (c12-0 / any)
       :polarity (c12-2 / amr-unknown))

# ::snt He needs to be spanked
# ::tokens ["He", "needs", "to", "be", "spanked"]
# ::lemmas ["he", "need", "to", "be", "spank"]
(c13-0 / need-01
       :ARG0 (c13-1 / he)
       :ARG1 (c13-2 / spank-01
                    :ARG1 c13-1))

# ::snt Bwahahaha
# ::tokens ["Bwahahaha"]
# ::lemmas ["Bwahahaha"]
(c14-0 / laugh-01
       :mode expressive)

# ::snt Oh hell yes, good girl, love it
# ::tokens ["Oh", "hell", "yes", ",", "good", "girl", ",", "love", "it"]
# ::lemmas ["oh", "hell", "yes", ",", "good", "girl", ",", "love", "it"]
(c15-1 / love-01
       :ARG0 (c15-4 / girl
                    :ARG1-of (c15-3 / good-02))
       :ARG1 (c15-2 / it)
       :mod (c15-0 / hell
                   :mode expressive))

# ::snt Hahaha, it was probably just one of his epic chessgames to assess what the world would make up
# ::tokens ["Hahaha", ",", "it", "was", "probably", "just", "one", "of", "his", "epic", "chessgames", "to", "assess", "what", "the", "world", "would", "make", "up"]
# ::lemmas ["Hahaha", ",", "it", "be", "probably", "just", "one", "of", "his", "epic", "chessgame", "to", "assess", "what", "the", "world", "would", "make", "up"]
(c16-7 / probable
       :domain (c16-6 / include-91
                      :ARG1 (c16-10 / it)
                      :ARG2 (c16-9 / game
                                   :mod (c16-8 / chess)
                                   :mod (c16-5 / epic)
                                   :poss (c16-0 / he)
                                   :purpose (c16-12 / assess-01
                                                    :ARG1 (c16-11 / thing
                                                                  :ARG1-of (c16-4 / make-up-10
                                                                                  :ARG0 (c16-1 / world)))))
                      :mod (c16-2 / just))
       :mod (c16-3 / haha
                   :mode expressive))

# ::snt his skin is too hard
# ::tokens ["his", "skin", "is", "too", "hard"]
# ::lemmas ["his", "skin", "be", "too", "hard"]
(c17-0 / have-degree-91
       :ARG1 (c17-2 / skin
                    :part-of (c17-4 / he))
       :ARG2 (c17-1 / hard-02
                    :ARG1 c17-2)
       :ARG3 (c17-3 / too))

# ::snt while being dead
# ::tokens ["while", "being", "dead"]
# ::lemmas ["while", "be", "dead"]
(c18-1 / contrast-01
       :ARG2 (c18-0 / die-01
                    :ARG1 (c18-2 / i)))

# ::snt it's a great day confessed is stubborn as shit
# ::tokens ["it", "'s", "a", "great", "day", "confessed", "is", "stubborn", "as", "shit"]
# ::lemmas ["it", "be", "a", "great", "day", "confess", "be", "stubborn", "as", "shit"]
(c19-4 / confess-01
       :ARG1 (c19-6 / stubborn
                    :ARG2-of (c19-0 / have-degree-91
                                    :ARG1 c19-4
                                    :ARG3 (c19-2 / equal)
                                    :ARG4 (c19-1 / shit)))
       :domain (c19-3 / day
                      :mod (c19-5 / great)))

# ::snt and he those damn bears.......
# ::tokens ["and", "he", "those", "damn", "bears", "......."]
# ::lemmas ["and", "he", "those", "damn", "bear", "......."]
(c20-4 / and
       :op2 (c20-1 / bear
                   :mod (c20-2 / damn
                               :mode expressive)
                   :mod (c20-3 / that)
                   :domain (c20-0 / he)))

# ::snt I would agree.... stubborn as shit.... but he be two feet shorter then me!!! &amp; .... and not dead yet!
# ::tokens ["I", "would", "agree", "....", "stubborn", "as", "shit", "....", "but", "he", "be", "two", "feet", "shorter", "then", "me", "!", "!", "!", "&", "amp", ";", "....", "and", "not", "dead", "yet", "!"]
# ::lemmas ["i", "would", "agree", "....", "stubborn", "as", "shit", "....", "but", "he", "be", "two", "feet", "short", "then", "i", "!", "!", "!", "&", "amp", ";", "....", "and", "not", "dead", "yet", "!"]
(c21-4 / multi-sentence
       :snt1 (c21-14 / agree-01
                     :ARG0 (c21-8 / i))
       :snt2 (c21-11 / contrast-01
                     :ARG1 (c21-13 / stubborn
                                   :ARG2-of (c21-0 / have-degree-91
                                                   :ARG1 (c21-3 / he)
                                                   :ARG3 (c21-9 / more
                                                                :quant (c21-10 / distance-quantity
                                                                               :unit (c21-5 / foot)
                                                                               :quant 2))
                                                   :ARG4 (c21-12 / i))
                                   :mode expressive)
                     :ARG2 (c21-7 / and
                                  :op1 c21-0
                                  :ARG1 c21-3
                                  :ARG2 (c21-6 / short-07
                                               :ARG1 c21-3)
                                  :ARG3 c21-9)
                     :ARG4 c21-12)
       :op2 (c21-2 / die-01
                   :ARG1 c21-3
                   :time (c21-1 / yet)
                   :polarity -))

# ::snt Pooootin LURVES
# ::tokens ["Pooootin", "LURVES"]
# ::lemmas ["pooootin", "lurve"]
(c22-2 / laugh-01
       :ARG1 (c22-1 / person
                    :name (c22-0 / name
                                 :op1 "Pooootin"))
       :mode expressive)

# ::snt I think this will be us Memo
# ::tokens ["I", "think", "this", "will", "be", "us", "Memo"]
# ::lemmas ["i", "think", "this", "will", "be", "we", "Memo"]
(c23-6 / say-01
       :ARG0 (c23-3 / i)
       :ARG1 (c23-7 / think-01
                    :ARG0 c23-3
                    :ARG1 (c23-4 / person
                                 :domain (c23-5 / this)
                                 :mod (c23-1 / we)
                                 :ARG0-of (c23-0 / have-org-role-91
                                                 :ARG2 (c23-2 / moo))
                                 :ARG2-of c23-6)))
