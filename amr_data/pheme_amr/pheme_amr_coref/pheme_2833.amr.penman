# ::snt yes, because what happened hundreds of years ago definitely is relevant to whats happened today, fuck off please
# ::tokens ["yes", ",", "because", "what", "happened", "hundreds", "of", "years", "ago", "definitely", "is", "relevant", "to", "what", "s", "happened", "today", ",", "fuck", "off", "please"]
# ::lemmas ["yes", ",", "because", "what", "happen", "hundreds", "of", "years", "ago", "definitely", "be", "relevant", "to", "what", "s", "happen", "today", ",", "fuck", "off", "please"]
(c1-1 / fuck-off-06
      :ARG0 (c1-0 / you)
      :ARG1-of (c1-8 / cause-01
                     :ARG0 (c1-7 / relevant-01
                                 :ARG1 (c1-5 / event
                                             :time (c1-3 / before
                                                         :op1 (c1-6 / now)
                                                         :quant (c1-2 / multiple
                                                                      :op1 (c1-12 / temporal-quantity
                                                                                  :unit (c1-10 / year)
                                                                                  :quant 100))))
                                 :ARG2 (c1-4 / event
                                             :time (c1-11 / today))
                                 :mod (c1-9 / definite)))
      :mode imperative
      :polite +)

# ::snt just pointing it out..
# ::tokens ["just", "pointing", "it", "out", ".."]
# ::lemmas ["just", "point", "it", "out", ".."]
(c3-2 / point-out-02
      :ARG0 (c3-1 / you)
      :ARG1 (c3-3 / it)
      :mod (c3-0 / just))

# ::snt - , .
# ::tokens ["-", ",", "."]
# ::lemmas ["-", ",", "."]
(c4-0 / amr-empty)

# ::snt "".. has a long history of ..
# ::tokens ["\"", "\"", "..", "has", "a", "long", "history", "of", ".."]
# ::lemmas ["\"", "\"", "..", "have", "a", "long", "history", "of", ".."]
(c5-0 / history
      :ARG1-of (c5-1 / long-03))

# ::snt State terrorism ignored, while individual terrorism deplored.
# ::tokens ["State", "terrorism", "ignored", ",", "while", "individual", "terrorism", "deplored", "."]
# ::lemmas ["state", "terrorism", "ignore", ",", "while", "individual", "terrorism", "deplore", "."]
(c6-2 / contrast-01
      :ARG1 (c6-0 / ignore-01
                  :ARG1 (c6-6 / terrorism
                              :mod (c6-5 / state)))
      :ARG2 (c6-1 / deplore-01
                  :ARG1 (c6-4 / terrorism
                              :mod (c6-3 / individual))))

# ::snt don't try to correct a wrong with a wrong
# ::tokens ["do", "n't", "try", "to", "correct", "a", "wrong", "with", "a", "wrong"]
# ::lemmas ["do", "not", "try", "to", "correct", "a", "wrong", "with", "a", "wrong"]
(c7-4 / try-01
      :ARG0 (c7-1 / you)
      :ARG1 (c7-3 / correct-01
                  :ARG0 c7-1
                  :ARG1 (c7-0 / wrong-02)
                  :ARG2 (c7-2 / wrong-02))
      :polarity -
      :mode imperative)

# ::snt ,wow those r masterpieces
# ::tokens [",", "wow", "those", "r", "masterpieces"]
# ::lemmas [",", "wow", "those", "r", "masterpiece"]
(c8-2 / masterpiece
      :mod (c8-0 / that)
      :mod (c8-1 / wow
                 :mode expressive))

# ::snt (-) , , .
# ::tokens ["(", "-", ")", ",", ",", "."]
# ::lemmas ["(", "-", ")", ",", ",", "."]
(c9-0 / amr-empty)

# ::snt Isn't history strange..so little knowledgeIs absorbed!
# ::tokens ["Is", "n't", "history", "strange", "..", "so", "little", "knowledgeIs", "absorbed", "!"]
# ::lemmas ["be", "not", "history", "strange", "..", "so", "little", "knowledgei", "absorb", "!"]
(c11-2 / multi-sentence
       :snt1 (c11-4 / strange
                    :domain (c11-0 / history)
                    :polarity -)
       :snt2 (c11-6 / absorb-01
                    :ARG1 (c11-5 / know-01
                                 :quant (c11-1 / little
                                               :degree (c11-3 / so)))))

# ::snt still doesn't make it right, even if it is reversed.
# ::tokens ["still", "does", "n't", "make", "it", "right", ",", "even", "if", "it", "is", "reversed", "."]
# ::lemmas ["still", "do", "not", "make", "it", "right", ",", "even", "if", "it", "be", "reversed", "."]
(c12-0 / make-02
       :ARG1 (c12-4 / right-02
                    :ARG1 (c12-2 / it))
       :mod (c12-5 / still)
       :concession (c12-1 / even-if
                          :op1 (c12-3 / reverse-01
                                      :ARG1 c12-2))
       :polarity -)

# ::snt . , ""
# ::tokens [".", ",", "\"", "\""]
# ::lemmas [".", ",", "\"", "\""]
(c14-0 / amr-empty)

# ::snt it was to provoke a discussion, not for you to be a sarcastic cock.
# ::tokens ["it", "was", "to", "provoke", "a", "discussion", ",", "not", "for", "you", "to", "be", "a", "sarcastic", "cock", "."]
# ::lemmas ["it", "be", "to", "provoke", "a", "discussion", ",", "not", "for", "you", "to", "be", "a", "sarcastic", "cock", "."]
(c15-5 / contrast-01
       :ARG1 (c15-0 / have-purpose-91
                    :ARG1 (c15-2 / it)
                    :ARG2 (c15-3 / provoke-01
                                 :ARG1 (c15-4 / discuss-01)))
       :ARG2 (c15-8 / have-purpose-91
                    :ARG1 (c15-6 / cock
                                 :mod (c15-7 / sarcasm)
                                 :domain (c15-1 / you))
                    :ARG2 c15-2
                    :polarity -))

# ::snt Nonsensical response.
# ::tokens ["Nonsensical", "response", "."]
# ::lemmas ["nonsensical", "response", "."]
(c16-2 / thing
       :ARG2-of (c16-1 / respond-01)
       :mod (c16-0 / ensical))
