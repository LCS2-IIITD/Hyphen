# ::snt omg stfu already. Did you see the clothes the kid was wearing, looked similar. Agree with you but quit fucking fishing.
# ::tokens ["omg", "stfu", "already", ".", "Did", "you", "see", "the", "clothes", "the", "kid", "was", "wearing", ",", "looked", "similar", ".", "Agree", "with", "you", "but", "quit", "fucking", "fishing", "."]
# ::lemmas ["omg", "stfu", "already", ".", "do", "you", "see", "the", "clothe", "the", "kid", "be", "wear", ",", "look", "similar", ".", "agree", "with", "you", "but", "quit", "fucking", "fishing", "."]
(c1-0 / multi-sentence
      :snt1 (c1-14 / oh-my-god
                   :time (c1-3 / already)
                   :mode expressive)
      :snt2 (c1-2 / see-01
                  :ARG0 (c1-13 / you)
                  :ARG1 (c1-10 / and
                               :op1 (c1-16 / clothe-01
                                           :ARG1 (c1-12 / kid)
                                           :ARG1-of (c1-9 / wear-01
                                                          :ARG0 c1-12))
                               :op2 (c1-4 / look-02
                                          :ARG0 c1-12
                                          :ARG1 (c1-8 / resemble-01
                                                      :ARG1 c1-16)))
                  :polarity (c1-7 / amr-unknown))
      :snt3 (c1-1 / contrast-01
                  :ARG1 (c1-18 / agree-01
                               :ARG0 (c1-11 / i)
                               :ARG2 (c1-17 / you))
                  :ARG2 (c1-6 / quit-01
                              :ARG0 c1-11
                              :ARG1 (c1-5 / fish-01
                                          :ARG0 c1-11
                                          :mod (c1-15 / fucking
                                                      :mode expressive)))))

# ::snt if those kids were involved why would the officer just tell the kids to get on the sidewalk, not get on the ground?
# ::tokens ["if", "those", "kids", "were", "involved", "why", "would", "the", "officer", "just", "tell", "the", "kids", "to", "get", "on", "the", "sidewalk", ",", "not", "get", "on", "the", "ground", "?"]
# ::lemmas ["if", "those", "kid", "be", "involve", "why", "would", "the", "officer", "just", "tell", "the", "kid", "to", "get", "on", "the", "sidewalk", ",", "not", "get", "on", "the", "ground", "?"]
(c2-8 / cause-01
      :ARG0 (c2-13 / amr-unknown)
      :ARG1 (c2-12 / tell-01
                   :ARG0 (c2-1 / officer)
                   :ARG1 (c2-3 / and
                               :op1 (c2-9 / get-05
                                          :ARG1 (c2-5 / kid)
                                          :ARG2 (c2-11 / sidewalk))
                               :op2 (c2-7 / get-05
                                          :ARG1 c2-5
                                          :ARG2 (c2-6 / ground)
                                          :polarity -))
                   :ARG2 (c2-2 / kid
                               :mod (c2-10 / that))
                   :mod (c2-0 / just)
                   :condition (c2-4 / involve-01
                                    :ARG1 c2-2)))

# ::snt LIES! was not wanted robbery otherise his friend would hv been considered an accomplice...
# ::tokens ["LIES", "!", "was", "not", "wanted", "robbery", "otherise", "his", "friend", "would", "hv", "been", "considered", "an", "accomplice", "..."]
# ::lemmas ["lie", "!", "be", "not", "want", "robbery", "otherise", "his", "friend", "would", "hv", "be", "consider", "an", "accomplice", "..."]
(c3-6 / contrast-01
      :ARG1 (c3-1 / want-01
                  :ARG1 (c3-5 / rob-01)
                  :polarity -)
      :ARG2 (c3-4 / consider-01
                  :ARG1 (c3-0 / have-rel-role-91
                              :ARG0 (c3-3 / person
                                          :ARG1 (c3-8 / he)
                                          :ARG2 (c3-2 / friend)
                                          :ARG1-of c3-4)
                              :ARG0 c3-3)
                  :ARG2 (c3-7 / accomplice)))

# ::snt OMG this IS a police state, if this was true,the Nazi wouldve already put this out there they are
# ::tokens ["OMG", "this", "IS", "a", "police", "state", ",", "if", "this", "was", "true", ",", "the", "Nazi", "would", "ve", "already", "put", "this", "out", "there", "they", "are"]
# ::lemmas ["OMG", "this", "be", "a", "police", "state", ",", "if", "this", "be", "true", ",", "the", "Nazi", "would", "ve", "already", "put", "this", "out", "there", "they", "be"]
(c4-13 / and
       :op1 (c4-9 / state
                  :mod (c4-7 / police)
                  :domain (c4-11 / this)
                  :mod (c4-2 / oh-my-god
                             :mode expressive))
       :op2 (c4-12 / put-01
                   :ARG0 (c4-1 / person
                               :mod (c4-10 / political-movement
                                           :name (c4-5 / name
                                                       :op1 "Nazism")))
                   :ARG1 (c4-8 / this)
                   :ARG2 (c4-0 / out-there)
                   :time (c4-4 / already)
                   :condition (c4-6 / true-01
                                    :ARG1 (c4-3 / this))))

# ::snt all I see is him walking in a store
# ::tokens ["all", "I", "see", "is", "him", "walking", "in", "a", "store"]
# ::lemmas ["all", "i", "see", "be", "he", "walk", "in", "a", "store"]
(c5-1 / walk-01
      :ARG0 (c5-0 / he)
      :ARG2 (c5-4 / store)
      :ARG1-of (c5-2 / see-01
                     :ARG0 (c5-3 / i)
                     :mod (c5-5 / all)))

# ::snt LIES
# ::tokens ["LIES"]
# ::lemmas ["lie"]
(c6-0 / lie-08)

# ::snt that still is no excuse to kill him
# ::tokens ["that", "still", "is", "no", "excuse", "to", "kill", "him"]
# ::lemmas ["that", "still", "be", "no", "excuse", "to", "kill", "he"]
(c7-1 / excuse-02
      :ARG1 (c7-2 / kill-01
                  :ARG1 (c7-0 / he))
      :ARG2 (c7-4 / that)
      :mod (c7-3 / still)
      :polarity -)

# ::snt just so my opinion is clear; no way that kid should be dead, period! Anon ain't the vigilante he thinks
# ::tokens ["just", "so", "my", "opinion", "is", "clear", ";", "no", "way", "that", "kid", "should", "be", "dead", ",", "period", "!", "Anon", "ai", "n't", "the", "vigilante", "he", "thinks"]
# ::lemmas ["just", "so", "my", "opinion", "be", "clear", ";", "no", "way", "that", "kid", "should", "be", "dead", ",", "period", "!", "Anon", "be", "not", "the", "vigilante", "he", "think"]
(c8-2 / multi-sentence
      :snt1 (c8-9 / cause-01
                  :ARG1 (c8-8 / clear-06
                              :ARG1 (c8-3 / opine-01
                                          :ARG0 (c8-4 / i)
                                          :ARG1 (c8-10 / recommend-01
                                                       :ARG1 (c8-11 / die-01
                                                                    :ARG1 (c8-14 / kid
                                                                                 :mod (c8-13 / that))
                                                                    :polarity -)
                                                       :mod (c8-7 / period)))
                              :mod (c8-0 / just)))
      :snt2 (c8-6 / vigilant-01
                  :ARG0 (c8-15 / person
                               :name (c8-5 / name
                                           :op1 "Anon"))
                  :ARG1-of (c8-12 / think-01
                                  :ARG0 (c8-1 / he))
                  :polarity -))

# ::snt Even if connected, does that mean he should be shot times with his hands up on the ground?
# ::tokens ["Even", "if", "connected", ",", "does", "that", "mean", "he", "should", "be", "shot", "times", "with", "his", "hands", "up", "on", "the", "ground", "?"]
# ::lemmas ["even", "if", "connect", ",", "do", "that", "mean", "he", "should", "be", "shoot", "time", "with", "his", "hand", "up", "on", "the", "ground", "?"]
(c9-2 / mean-01
      :polarity (c9-11 / amr-unknown)
      :ARG1 (c9-10 / that)
      :ARG2 (c9-5 / recommend-01
                  :ARG1 (c9-9 / shoot-02
                              :ARG1 (c9-0 / he
                                          :part (c9-1 / hand
                                                      :ARG1-of (c9-3 / up-03
                                                                     :ARG2 (c9-7 / ground))
                                                      :part-of c9-0))
                              :frequency (c9-8 / time)
                              :manner c9-1))
      :concession (c9-4 / even-if
                        :op1 (c9-6 / connect-01)))

# ::snt BREAKING NEWS: According to documents released to the press, was connected to an earlier robbery
# ::tokens ["BREAKING", "NEWS", ":", "According", "to", "documents", "released", "to", "the", "press", ",", "was", "connected", "to", "an", "earlier", "robbery"]
# ::lemmas ["breaking", "news", ":", "accord", "to", "document", "release", "to", "the", "press", ",", "be", "connect", "to", "an", "early", "robbery"]
(c10-7 / say-01
       :ARG0 (c10-4 / document
                    :ARG1-of (c10-3 / release-01
                                    :ARG0 (c10-2 / press)))
       :ARG1 (c10-5 / connect-01
                    :ARG1 c10-4
                    :ARG2 (c10-1 / rob-01
                                 :time (c10-0 / before)))
       :ARG1-of (c10-6 / break-13))

# ::snt oh hell of course
# ::tokens ["oh", "hell", "of", "course"]
# ::lemmas ["oh", "hell", "of", "course"]
(c11-0 / hell
       :mod (c11-2 / oh)
       :mod (c11-1 / of-course)
       :mode expressive)

# ::snt this guy is way fatter than mike
# ::tokens ["this", "guy", "is", "way", "fatter", "than", "mike"]
# ::lemmas ["this", "guy", "be", "way", "fat", "than", "mike"]
(c12-0 / have-degree-91
       :ARG1 (c12-6 / guy
                    :mod (c12-7 / this))
       :ARG2 (c12-2 / fat-03
                    :ARG1 c12-6)
       :ARG3 (c12-3 / more
                    :quant (c12-1 / way))
       :ARG4 (c12-5 / guy
                    :mod (c12-4 / mike)))

# ::snt this isn't him clearly
# ::tokens ["this", "is", "n't", "him", "clearly"]
# ::lemmas ["this", "be", "not", "he", "clearly"]
(c13-0 / he
       :domain (c13-2 / this)
       :ARG1-of (c13-1 / clear-06)
       :polarity -)

# ::snt lol there's a million dudes wearing cargos &amp; white tees everyday please stop
# ::tokens ["lol", "there", "'s", "a", "million", "dudes", "wearing", "cargos", "&", "amp", ";", "white", "tees", "everyday", "please", "stop"]
# ::lemmas ["lol", "there", "be", "a", "million", "dude", "wear", "cargo", "&", "amp", ";", "white", "tee", "everyday", "please", "stop"]
(c14-3 / multi-sentence
       :snt1 (c14-0 / wear-01
                    :ARG0 (c14-8 / dude
                                 :quant 1000000)
                    :ARG1 (c14-15 / and
                                  :op1 (c14-9 / condom)
                                  :op2 (c14-5 / amp))
                    :ARG2-of (c14-2 / laugh-01
                                    :manner (c14-11 / loud)
                                    :mode expressive))
       :snt2 (c14-12 / stop-01
                     :ARG0 (c14-1 / you)
                     :ARG1 (c14-7 / person
                                  :ARG1-of (c14-6 / white-02)
                                  :ARG0-of c14-0
                                  :ARG1 (c14-14 / teep))
                     :mode imperative
                     :polite +)
       :frequency (c14-10 / rate-entity-91
                          :ARG3 (c14-13 / temporal-quantity
                                        :unit (c14-4 / day)
                                        :quant 1)))

# ::snt he stole a candy bar and was threatened the cops will come to resolve the issue
# ::tokens ["he", "stole", "a", "candy", "bar", "and", "was", "threatened", "the", "cops", "will", "come", "to", "resolve", "the", "issue"]
# ::lemmas ["he", "steal", "a", "candy", "bar", "and", "be", "threaten", "the", "cop", "will", "come", "to", "resolve", "the", "issue"]
(c15-9 / and
       :op1 (c15-7 / steal-01
                   :ARG0 (c15-0 / he)
                   :ARG1 (c15-1 / bar
                                :mod (c15-4 / candy)))
       :op2 (c15-8 / threaten-01
                   :ARG1 (c15-3 / come-01
                                :ARG1 (c15-6 / cop)
                                :purpose (c15-5 / resolve-01
                                                :ARG0 c15-6
                                                :ARG1 (c15-2 / issue-02)))
                   :ARG2 c15-0))

# ::snt these pictures look damning, but stealing rillos DOES NOT JUSTIFY MURDER!
# ::tokens ["these", "pictures", "look", "damning", ",", "but", "stealing", "rillos", "DOES", "NOT", "JUSTIFY", "MURDER", "!"]
# ::lemmas ["these", "picture", "look", "damning", ",", "but", "steal", "rillo", "do", "not", "justify", "murder", "!"]
(c16-5 / contrast-01
       :ARG1 (c16-1 / look-02
                    :ARG0 (c16-3 / picture
                                 :mod (c16-8 / this))
                    :ARG1 (c16-4 / damning))
       :ARG2 (c16-2 / murder-01
                    :ARG0 (c16-7 / steal-01
                                 :ARG1 (c16-6 / rillo))
                    :mod (c16-0 / just)
                    :polarity -))

# ::snt Of course, you have to crop have his face.
# ::tokens ["Of", "course", ",", "you", "have", "to", "crop", "have", "his", "face", "."]
# ::lemmas ["of", "course", ",", "you", "have", "to", "crop", "have", "his", "face", "."]
(c17-4 / obligate-01
       :ARG1 (c17-1 / you)
       :ARG2 (c17-5 / crop-00
                    :ARG0 c17-1
                    :ARG1 (c17-2 / face
                                 :part-of (c17-0 / he)))
       :mod (c17-3 / of-course))

# ::snt I have a real civil rights idea that WILL work.
# ::tokens ["I", "have", "a", "real", "civil", "rights", "idea", "that", "WILL", "work", "."]
# ::lemmas ["i", "have", "a", "real", "civil", "right", "idea", "that", "will", "work", "."]
(c18-0 / have-03
       :ARG0 (c18-2 / i)
       :ARG1 (c18-6 / idea
                    :topic (c18-4 / right-05
                                  :mod (c18-5 / civil)
                                  :ARG1-of (c18-3 / real-04))
                    :ARG1-of (c18-1 / work-09)))

# ::snt didn't the manager of the store already say this was not true
# ::tokens ["did", "n't", "the", "manager", "of", "the", "store", "already", "say", "this", "was", "not", "true"]
# ::lemmas ["do", "not", "the", "manager", "of", "the", "store", "already", "say", "this", "be", "not", "true"]
(c19-5 / say-01
       :ARG0 (c19-3 / person
                    :ARG0-of (c19-0 / manage-01
                                    :ARG1 (c19-1 / store)))
       :ARG1 (c19-6 / true-01
                    :ARG1 (c19-4 / this)
                    :polarity -)
       :time (c19-7 / already)
       :polarity (c19-2 / amr-unknown)
       :polarity -)

# ::snt Now I dont even believe they gave the right name of the officer.one lie leads to another and another..they r buried in lies
# ::tokens ["Now", "I", "do", "nt", "even", "believe", "they", "gave", "the", "right", "name", "of", "the", "officer.one", "lie", "leads", "to", "another", "and", "another", "..", "they", "r", "buried", "in", "lies"]
# ::lemmas ["now", "i", "do", "not", "even", "believe", "they", "give", "the", "right", "name", "of", "the", "officer.one", "lie", "lead", "to", "another", "and", "another", "..", "they", "r", "bury", "in", "lie"]
(c20-1 / multi-sentence
       :snt1 (c20-7 / believe-01
                    :ARG0 (c20-12 / i)
                    :ARG1 (c20-11 / give-01
                                  :ARG0 (c20-19 / they)
                                  :ARG1 (c20-9 / name
                                               :ARG1-of (c20-10 / right-02)
                                               :poss (c20-2 / person
                                                            :ARG0-of (c20-5 / have-org-role-91
                                                                            :ARG2 (c20-16 / officer)))))
                    :mod (c20-8 / even)
                    :time (c20-17 / now)
                    :polarity -)
       :snt2 (c20-6 / lead-01
                    :ARG0 (c20-18 / lie-08
                                  :mod (c20-15 / one))
                    :ARG4 (c20-0 / lie-08
                                 :mod (c20-3 / another)))
       :snt3 (c20-13 / bury-01
                     :ARG1 (c20-14 / they)
                     :ARG2 (c20-4 / lie-08)))

# ::snt I want to know what kind of vision the police have to clearly say this is Mike Brown! I can barely see a face
# ::tokens ["I", "want", "to", "know", "what", "kind", "of", "vision", "the", "police", "have", "to", "clearly", "say", "this", "is", "Mike", "Brown", "!", "I", "can", "barely", "see", "a", "face"]
# ::lemmas ["i", "want", "to", "know", "what", "kind", "of", "vision", "the", "police", "have", "to", "clearly", "say", "this", "be", "Mike", "Brown", "!", "i", "can", "barely", "see", "a", "face"]
(c21-2 / multi-sentence
       :snt1 (c21-0 / want-01
                    :ARG0 (c21-8 / i)
                    :ARG1 (c21-15 / know-01
                                  :ARG0 c21-8
                                  :ARG1 (c21-6 / kind
                                               :mod (c21-13 / see-01
                                                            :ARG0 (c21-10 / police)
                                                            :ARG1 (c21-16 / person
                                                                          :name (c21-9 / name
                                                                                       :op1 "Mike"
                                                                                       :op2 "Brown")
                                                                          :domain (c21-14 / this))
                                                            :ARG1-of (c21-7 / say-01
                                                                            :ARG0 c21-10
                                                                            :ARG1-of (c21-11 / clear-06))))))
       :snt2 (c21-4 / possible-01
                    :ARG1 (c21-1 / see-01
                                 :ARG0 (c21-12 / i)
                                 :ARG1 (c21-3 / face)
                                 :degree (c21-5 / barely))))
