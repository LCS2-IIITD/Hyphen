# ::snt God, I love you, and while I condemn the murders, I also condemn racist caricature.
# ::tokens ["God", ",", "I", "love", "you", ",", "and", "while", "I", "condemn", "the", "murders", ",", "I", "also", "condemn", "racist", "caricature", "."]
# ::lemmas ["God", ",", "i", "love", "you", ",", "and", "while", "i", "condemn", "the", "murder", ",", "i", "also", "condemn", "racist", "caricature", "."]
(c1-10 / and
       :op1 (c1-0 / love-01
                  :ARG0 (c1-3 / i)
                  :ARG1 (c1-5 / person
                              :name (c1-4 / name
                                          :op1 "God")))
       :op2 (c1-7 / contrast-01
                  :ARG1 (c1-6 / condemn-01
                              :ARG0 c1-3
                              :ARG1 (c1-1 / murder-01))
                  :ARG2 (c1-9 / condemn-01
                              :ARG0 c1-3
                              :ARG1 (c1-11 / caricature
                                           :mod (c1-8 / racist))
                              :mod (c1-2 / also))))

# ::snt That's not how birth works either god, I thot we agreed after that stork thing you would lay low for a while
# ::tokens ["That", "'s", "not", "how", "birth", "works", "either", "god", ",", "I", "thot", "we", "agreed", "after", "that", "stork", "thing", "you", "would", "lay", "low", "for", "a", "while"]
# ::lemmas ["that", "be", "not", "how", "birth", "work", "either", "god", ",", "i", "thot", "we", "agree", "after", "that", "stork", "thing", "you", "would", "lay", "low", "for", "a", "while"]
(c3-0 / multi-sentence
      :snt1 (c3-3 / say-01
                  :ARG0 (c3-12 / i)
                  :ARG1 (c3-10 / work-09
                               :ARG1 (c3-6 / bear-02)
                               :manner (c3-18 / that)
                               :mod (c3-7 / either)
                               :polarity -)
                  :ARG2 (c3-2 / person
                              :name (c3-9 / name
                                          :op1 "God")))
      :snt2 (c3-4 / agree-01
                  :ARG0 (c3-14 / i)
                  :ARG1 (c3-5 / lay-01
                              :ARG1 (c3-16 / you)
                              :ARG2 (c3-17 / low-04)
                              :duration (c3-1 / while)
                              :time (c3-11 / after
                                           :op1 (c3-15 / thing
                                                       :mod (c3-13 / that)
                                                       :mod (c3-8 / stork))))))

# ::snt did you accept those satirists in heaven though
# ::tokens ["did", "you", "accept", "those", "satirists", "in", "heaven", "though"]
# ::lemmas ["do", "you", "accept", "those", "satirist", "in", "heaven", "though"]
(c4-6 / accept-01
      :ARG0 (c4-1 / you)
      :ARG1 (c4-4 / satirist
                  :mod (c4-5 / that)
                  :location (c4-0 / heaven))
      :polarity (c4-3 / amr-unknown)
      :ARG1-of (c4-2 / have-concession-91))

# ::snt Sure babe but when a pretty girl like you does the ladder the former tends to "arise" all on its own.
# ::tokens ["Sure", "babe", "but", "when", "a", "pretty", "girl", "like", "you", "does", "the", "ladder", "the", "former", "tends", "to", "\"", "arise", "\"", "all", "on", "its", "own", "."]
# ::lemmas ["sure", "babe", "but", "when", "a", "pretty", "girl", "like", "you", "do", "the", "ladder", "the", "former", "tend", "to", "\"", "arise", "\"", "all", "on", "its", "own", "."]
(c5-12 / say-01
       :ARG1 (c5-8 / contrast-01
                   :ARG1 (c5-4 / sure-02)
                   :ARG2 (c5-13 / tend-02
                                :ARG1 (c5-1 / former)
                                :ARG2 (c5-5 / inherit-01
                                            :ARG0 c5-1
                                            :mod (c5-3 / by-oneself)
                                            :mod (c5-14 / all))
                                :time (c5-7 / do-02
                                            :ARG0 (c5-9 / girl
                                                        :mod (c5-6 / pretty)
                                                        :ARG1-of (c5-10 / resemble-01
                                                                        :ARG2 (c5-0 / you)))
                                            :ARG1 (c5-2 / ladder))))
       :ARG2 (c5-11 / babe))

# ::snt please don't call me "babe", you don't know me, and that was kind of a weird thing to say
# ::tokens ["please", "do", "n't", "call", "me", "\"", "babe", "\"", ",", "you", "do", "n't", "know", "me", ",", "and", "that", "was", "kind", "of", "a", "weird", "thing", "to", "say"]
# ::lemmas ["please", "do", "not", "call", "i", "\"", "babe", "\"", ",", "you", "do", "not", "know", "i", ",", "and", "that", "be", "kind", "of", "a", "weird", "thing", "to", "say"]
(c6-8 / and
      :op1 (c6-5 / call-01
                 :ARG0 (c6-0 / you)
                 :ARG1 (c6-4 / i)
                 :ARG2 (c6-3 / abe)
                 :polite +
                 :mode imperative)
      :op2 (c6-7 / know-02
                 :ARG0 c6-0
                 :ARG1 c6-4
                 :polarity -)
      :op3 (c6-1 / weird
                 :domain (c6-6 / say-01
                               :ARG1 c6-5)
                 :degree (c6-2 / kind-of)))

# ::snt he didn't say they would be "born" he said "rise up", there is a difference
# ::tokens ["he", "did", "n't", "say", "they", "would", "be", "\"", "born", "\"", "he", "said", "\"", "rise", "up", "\"", ",", "there", "is", "a", "difference"]
# ::lemmas ["he", "do", "not", "say", "they", "would", "be", "\"", "bear", "\"", "he", "say", "\"", "rise", "up", "\"", ",", "there", "be", "a", "difference"]
(c7-1 / multi-sentence
      :snt1 (c7-6 / contrast-01
                  :ARG1 (c7-9 / say-01
                              :ARG0 (c7-0 / he)
                              :ARG1 (c7-3 / bear-02
                                          :ARG1 (c7-10 / they))
                              :polarity -)
                  :ARG2 (c7-4 / say-01
                              :ARG0 (c7-11 / he)
                              :ARG1 (c7-5 / rise-01
                                          :ARG1 c7-10
                                          :ARG4 (c7-2 / up))))
      :snt2 (c7-7 / differ-02
                  :location (c7-8 / there)))

# ::snt Congrats on your tweet!
# ::tokens ["Congrats", "on", "your", "tweet", "!"]
# ::lemmas ["congrat", "on", "your", "tweet", "!"]
(c8-2 / congratulate-01
      :ARG1 (c8-1 / you)
      :ARG2 (c8-0 / tweet-01
                  :ARG0 c8-1))

# ::snt Vous tes tout le monde!
# ::tokens ["Vous", "tes", "tout", "le", "monde", "!"]
# ::lemmas ["vous", "te", "tout", "le", "monde", "!"]
(c9-0 / joke-01
      :ARG2 (c9-1 / person
                  :name (c9-2 / name
                              :op1 "Le"
                              :op2 "Monde"))
      :mode expressive)
