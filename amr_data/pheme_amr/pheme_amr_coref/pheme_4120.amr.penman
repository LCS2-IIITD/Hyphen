# ::snt we have a car but we parked to get closer. Can't get pass the cops...
# ::tokens ["we", "have", "a", "car", "but", "we", "parked", "to", "get", "closer", ".", "Ca", "n't", "get", "pass", "the", "cops", "..."]
# ::lemmas ["we", "have", "a", "car", "but", "we", "park", "to", "get", "close", ".", "can", "not", "get", "pass", "the", "cop", "..."]
(c1-2 / multi-sentence
      :snt1 (c1-0 / have-concession-91
                  :ARG1 (c1-11 / have-03
                               :ARG0 (c1-1 / we)
                               :ARG1 (c1-7 / car))
                  :ARG2 (c1-5 / park-01
                              :ARG0 c1-1
                              :purpose (c1-8 / get-05
                                             :ARG1 c1-1
                                             :ARG2 (c1-6 / close-10
                                                         :ARG1 c1-1
                                                         :ARG2 (c1-9 / cop)))))
      :snt2 (c1-10 / possible-01
                   :ARG1 (c1-3 / pass-02
                               :ARG0 (c1-4 / we)
                               :ARG1 c1-9)
                   :polarity -))

# ::snt if you'd like to get dinner at your break let me know
# ::tokens ["if", "you", "'d", "like", "to", "get", "dinner", "at", "your", "break", "let", "me", "know"]
# ::lemmas ["if", "you", "would", "like", "to", "get", "dinner", "at", "your", "break", "let", "i", "know"]
(c2-1 / let-know-07
      :ARG0 (c2-0 / you)
      :ARG1 (c2-3 / i)
      :condition (c2-6 / like-02
                       :ARG0 c2-0
                       :ARG1 (c2-5 / get-01
                                   :ARG0 c2-0
                                   :ARG1 (c2-4 / dinner)
                                   :time (c2-2 / break-19
                                               :ARG0 c2-0))))

# ::snt are you guys walking?
# ::tokens ["are", "you", "guys", "walking", "?"]
# ::lemmas ["be", "you", "guy", "walk", "?"]
(c3-0 / walk-01
      :polarity (c3-3 / amr-unknown)
      :ARG0 (c3-2 / you
                  :mod (c3-1 / guy)))

# ::snt How the fk can they do this? Did declare Martial Law? Has to be illegal.
# ::tokens ["How", "the", "fk", "can", "they", "do", "this", "?", "Did", "declare", "Martial", "Law", "?", "Has", "to", "be", "illegal", "."]
# ::lemmas ["how", "the", "fk", "can", "they", "do", "this", "?", "do", "declare", "Martial", "Law", "?", "have", "to", "be", "illegal", "."]
(c4-2 / multi-sentence
      :snt1 (c4-7 / possible-01
                  :ARG1 (c4-8 / do-02
                              :ARG0 (c4-11 / they)
                              :ARG1 (c4-10 / this)
                              :manner (c4-12 / amr-unknown)
                              :manner (c4-4 / amr-unknown)))
      :snt2 (c4-0 / declare-02
                  :ARG0 (c4-6 / amr-unknown)
                  :ARG1 (c4-1 / law
                              :name (c4-5 / name
                                          :op1 "Martial"
                                          :op2 "Law")))
      :snt3 (c4-3 / obligate-01
                  :ARG2 (c4-9 / legal-02
                              :ARG1 c4-1
                              :polarity -)))

# ::snt What happened to freedom of the press? RT : Police have blocked us from getting to the protestors.
# ::tokens ["What", "happened", "to", "freedom", "of", "the", "press", "?", "RT", ":", "Police", "have", "blocked", "us", "from", "getting", "to", "the", "protestors", "."]
# ::lemmas ["what", "happen", "to", "freedom", "of", "the", "press", "?", "RT", ":", "police", "have", "block", "we", "from", "get", "to", "the", "protestor", "."]
(c5-2 / multi-sentence
      :snt1 (c5-12 / amr-unknown
                   :topic (c5-1 / free-04
                                :ARG1 (c5-7 / press)))
      :snt2 (c5-9 / say-01
                  :ARG0 (c5-11 / publication
                               :name (c5-6 / name
                                           :op1 "RT"))
                  :ARG1 (c5-4 / block-01
                              :ARG0 (c5-3 / police)
                              :ARG1 (c5-0 / we)
                              :ARG2 (c5-8 / get-05
                                          :ARG1 c5-0
                                          :ARG2 (c5-10 / person
                                                       :ARG0-of (c5-5 / protest-01))))))

# ::snt be careful.
# ::tokens ["be", "careful", "."]
# ::lemmas ["be", "careful", "."]
(c6-1 / care-04
      :ARG0 (c6-0 / you))

# ::snt please stay safe. I have no trust in our hyper militarized police force.
# ::tokens ["please", "stay", "safe", ".", "I", "have", "no", "trust", "in", "our", "hyper", "militarized", "police", "force", "."]
# ::lemmas ["please", "stay", "safe", ".", "i", "have", "no", "trust", "in", "our", "hyper", "militarize", "police", "force", "."]
(c7-4 / multi-sentence
      :snt1 (c7-9 / stay-01
                  :ARG1 (c7-1 / you)
                  :ARG3 (c7-5 / safe-01
                              :ARG1 c7-1)
                  :mode imperative
                  :polite +)
      :snt2 (c7-10 / trust-02
                   :ARG0 (c7-6 / i)
                   :ARG1 (c7-3 / force
                               :mod (c7-7 / police)
                               :ARG1-of (c7-8 / militarize-01
                                              :degree (c7-0 / hyper))
                               :poss (c7-2 / we))
                   :polarity -))

# ::snt They're forcing the crowd to either head to Canfield Green or walk down W. Florissant.
# ::tokens ["They", "'re", "forcing", "the", "crowd", "to", "either", "head", "to", "Canfield", "Green", "or", "walk", "down", "W.", "Florissant", "."]
# ::lemmas ["they", "be", "force", "the", "crowd", "to", "either", "head", "to", "Canfield", "Green", "or", "walk", "down", "W.", "Florissant", "."]
(c8-2 / force-01
      :ARG0 (c8-10 / they)
      :ARG1 (c8-7 / crowd)
      :ARG2 (c8-3 / or
                  :op1 (c8-0 / head-02
                             :ARG0 c8-7
                             :ARG1 (c8-6 / city-district
                                         :name (c8-4 / name
                                                     :op1 "Canfield"
                                                     :op2 "Green")))
                  :op2 (c8-1 / walk-01
                             :ARG0 c8-7
                             :ARG2 (c8-9 / city-district
                                         :name (c8-5 / name
                                                     :op1 "W."
                                                     :op2 "Florissant"))
                             :direction (c8-8 / down))))

# ::snt Let me know if they come by I'll bring dessert. You know I stockpile, lol
# ::tokens ["Let", "me", "know", "if", "they", "come", "by", "I", "'ll", "bring", "dessert", ".", "You", "know", "I", "stockpile", ",", "lol"]
# ::lemmas ["let", "i", "know", "if", "they", "come", "by", "i", "'ll", "bring", "dessert", ".", "you", "know", "i", "stockpile", ",", "lol"]
(c9-3 / multi-sentence
      :snt1 (c9-2 / let-know-07
                  :ARG0 (c9-1 / you)
                  :ARG1 (c9-6 / i)
                  :ARG2 (c9-9 / come-01
                              :ARG1 (c9-13 / they)
                              :ARG4 (c9-5 / by))
                  :mode imperative)
      :snt2 (c9-7 / know-01
                  :ARG0 (c9-11 / you)
                  :ARG1 (c9-12 / stockpile-01
                               :ARG0 (c9-10 / i))
                  :ARG2-of (c9-8 / laugh-01
                                 :ARG0 (c9-4 / i)
                                 :manner (c9-0 / loud)
                                 :mode expressive)))

# ::snt Hey they're trying to get in RT : we have a car but we parked to get closer. Can't get pass the cops...
# ::tokens ["Hey", "they", "'re", "trying", "to", "get", "in", "RT", ":", "we", "have", "a", "car", "but", "we", "parked", "to", "get", "closer", ".", "Ca", "n't", "get", "pass", "the", "cops", "..."]
# ::lemmas ["hey", "they", "be", "try", "to", "get", "in", "RT", ":", "we", "have", "a", "car", "but", "we", "park", "to", "get", "close", ".", "can", "not", "get", "pass", "the", "cop", "..."]
(c10-2 / multi-sentence
       :snt1 (c10-14 / try-01
                     :ARG0 (c10-11 / they)
                     :ARG1 (c10-9 / get-05
                                  :ARG1 c10-11
                                  :ARG2 (c10-6 / publication
                                               :name (c10-4 / name
                                                            :op1 "RT")))
                     :mod (c10-0 / hey
                                 :mode expressive))
       :snt2 (c10-8 / contrast-01
                    :ARG1 (c10-16 / have-03
                                  :ARG0 (c10-1 / we)
                                  :ARG1 (c10-7 / car))
                    :ARG2 (c10-15 / park-01
                                  :ARG0 c10-1
                                  :purpose (c10-10 / get-05
                                                   :ARG1 c10-1
                                                   :ARG2 (c10-12 / close-10
                                                                 :ARG1 c10-1
                                                                 :ARG2 (c10-17 / cop)))))
       :snt3 (c10-3 / possible-01
                    :ARG1 (c10-5 / get-05
                                 :ARG1 (c10-13 / pass-02
                                               :ARG1 c10-17))
                    :polarity -))

# ::snt want would provoke policemen to shoot unarmed citizens?
# ::tokens ["want", "would", "provoke", "policemen", "to", "shoot", "unarmed", "citizens", "?"]
# ::lemmas ["want", "would", "provoke", "policeman", "to", "shoot", "unarmed", "citizen", "?"]
(c11-0 / want-01
       :polarity (c11-7 / amr-unknown)
       :ARG0 (c11-1 / you)
       :ARG1 (c11-3 / provoke-01
                    :ARG0 c11-1
                    :ARG1 (c11-5 / shoot-02
                                 :ARG0 (c11-6 / policeman)
                                 :ARG1 (c11-4 / citizen
                                              :ARG1-of (c11-2 / arm-01
                                                              :polarity -)))))

# ::snt Police have blocked us from getting to the protestors. Full riot gear.
# ::tokens ["Police", "have", "blocked", "us", "from", "getting", "to", "the", "protestors", ".", "Full", "riot", "gear", "."]
# ::lemmas ["police", "have", "block", "we", "from", "get", "to", "the", "protestor", ".", "full", "riot", "gear", "."]
(c12-2 / multi-sentence
       :snt1 (c12-4 / block-01
                    :ARG0 (c12-5 / police)
                    :ARG1 (c12-0 / we)
                    :ARG2 (c12-8 / get-05
                                 :ARG1 c12-0
                                 :ARG2 (c12-9 / person
                                              :ARG0-of (c12-3 / protest-01))))
       :snt2 (c12-6 / gear
                    :mod (c12-7 / riot-01)
                    :ARG1-of (c12-1 / full-09)))

# ::snt Damnit Elon, be safe!
# ::tokens ["Damnit", "Elon", ",", "be", "safe", "!"]
# ::lemmas ["Damnit", "Elon", ",", "be", "safe", "!"]
(c13-5 / say-01
       :ARG0 (c13-1 / i)
       :ARG1 (c13-0 / safe-01
                    :ARG1 (c13-3 / person
                                 :name (c13-2 / name
                                              :op1 "Elon")
                                 :mod (c13-4 / damn
                                             :mode expressive)
                                 :ARG2-of c13-5)
                    :mode imperative))

# ::snt : if you'd like to get dinner at your break let me know (I'm gonna tag his wife jik)
# ::tokens [":", "if", "you", "'d", "like", "to", "get", "dinner", "at", "your", "break", "let", "me", "know", "(", "I", "'m", "gon", "na", "tag", "his", "wife", "jik", ")"]
# ::lemmas [":", "if", "you", "would", "like", "to", "get", "dinner", "at", "your", "break", "let", "i", "know", "(", "i", "be", "going", "to", "tag", "his", "wife", "jik", ")"]
(c14-4 / multi-sentence
       :snt1 (c14-3 / let-know-07
                    :ARG0 (c14-1 / you)
                    :ARG1 (c14-6 / i)
                    :condition (c14-12 / like-02
                                       :ARG0 c14-1
                                       :ARG1 (c14-10 / get-01
                                                     :ARG0 c14-1
                                                     :ARG1 (c14-9 / dinner)
                                                     :time (c14-5 / break-19
                                                                  :ARG0 c14-1))))
       :snt2 (c14-13 / tag-01
                     :ARG0 (c14-11 / i)
                     :ARG1 (c14-8 / person
                                  :name (c14-7 / name
                                               :op1 "Jik")
                                  :ARG0-of (c14-0 / have-rel-role-91
                                                  :ARG1 (c14-14 / he)
                                                  :ARG2 (c14-2 / wife)))))
