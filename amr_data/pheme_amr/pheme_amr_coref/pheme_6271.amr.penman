# ::snt This is brilliant.
# ::tokens ["This", "is", "brilliant", "."]
# ::lemmas ["this", "be", "brilliant", "."]
(c1-1 / brilliant-01
      :ARG1 (c1-0 / this))

# ::snt : will survive.
# ::tokens [":", "will", "survive", "."]
# ::lemmas [":", "will", "survive", "."]
(c2-0 / survive-01
      :ARG1 (c2-1 / event))

# ::snt Sheer bravery!!Salute..only way to defeat terrorism is this.May be dangerous..but there is no other way..
# ::tokens ["Sheer", "bravery!!Salute", "..", "only", "way", "to", "defeat", "terrorism", "is", "this", ".", "May", "be", "dangerous", "..", "but", "there", "is", "no", "other", "way", ".."]
# ::lemmas ["sheer", "bravery!!salute", "..", "only", "way", "to", "defeat", "terrorism", "be", "this", ".", "may", "be", "dangerous", "..", "but", "there", "be", "no", "other", "way", ".."]
(c3-2 / multi-sentence
      :snt1 (c3-3 / brave-02
                  :mod (c3-7 / more)
                  :mode expressive)
      :snt2 (c3-0 / way
                  :mod (c3-4 / only)
                  :manner-of (c3-8 / defeat-01
                                   :ARG1 (c3-12 / terrorism))
                  :domain (c3-11 / this))
      :snt3 (c3-9 / contrast-01
                  :ARG1 (c3-10 / possible-01
                               :ARG1 (c3-5 / endanger-01
                                           :ARG0 c3-11))
                  :ARG2 (c3-6 / way
                              :mod (c3-1 / other)
                              :polarity -)))

# ::snt Kudos. All power to you all
# ::tokens ["Kudos", ".", "All", "power", "to", "you", "all"]
# ::lemmas ["Kudos", ".", "all", "power", "to", "you", "all"]
(c4-1 / multi-sentence
      :snt1 (c4-3 / kudos)
      :snt2 (c4-2 / power-01
                  :ARG1 (c4-0 / you
                              :mod (c4-4 / all
                                         :mod-of c4-2))))

# ::snt Magnifique.Salute Charlie Hedbo.
# ::tokens ["Magnifique", ".", "Salute", "Charlie", "Hedbo", "."]
# ::lemmas ["Magnifique", ".", "Salute", "Charlie", "Hedbo", "."]
(c5-0 / multi-sentence
      :snt1 (c5-4 / case-03
                  :name (c5-1 / name
                              :op1 "Magnifique"))
      :snt2 (c5-5 / Salute-01
                  :ARG1 (c5-3 / person
                              :name (c5-2 / name
                                          :op1 "Charlie"
                                          :op2 "Hedbo"))))

# ::snt Power to the peaceful !
# ::tokens ["Power", "to", "the", "peaceful", "!"]
# ::lemmas ["power", "to", "the", "peaceful", "!"]
(c6-0 / power-01
      :ARG2 (c6-1 / person
                  :mod (c6-2 / peaceful))
      :mode expressive)

# ::snt Wonderful .. ! .. best news ever .. x
# ::tokens ["Wonderful", "..", "!", "..", "best", "news", "ever", "..", "x"]
# ::lemmas ["wonderful", "..", "!", "..", "good", "news", "ever", "..", "x"]
(c7-6 / and
      :op1 (c7-1 / wonderful-03)
      :op2 (c7-0 / have-degree-91
                 :ARG1 (c7-4 / news)
                 :ARG2 (c7-5 / good-02
                             :ARG1 c7-4
                             :time (c7-3 / ever))
                 :ARG3 (c7-2 / most)))

# ::snt Write an English version and I'll subscribe.
# ::tokens ["Write", "an", "English", "version", "and", "I", "'ll", "subscribe", "."]
# ::lemmas ["write", "an", "English", "version", "and", "i", "'ll", "subscribe", "."]
(c8-5 / subscribe-01
      :ARG0 (c8-2 / i)
      :condition (c8-0 / write-01
                       :ARG0 c8-2
                       :ARG1 (c8-4 / version
                                   :mod (c8-1 / language
                                              :name (c8-3 / name
                                                          :op1 "English")))))

# ::snt The question is whether they have the capability to produce x their normal print run...
# ::tokens ["The", "question", "is", "whether", "they", "have", "the", "capability", "to", "produce", "x", "their", "normal", "print", "run", "..."]
# ::lemmas ["the", "question", "be", "whether", "they", "have", "the", "capability", "to", "produce", "x", "their", "normal", "print", "run", "..."]
(c9-0 / question-01
      :ARG1 (c9-6 / truth-value
                  :polarity-of (c9-4 / capable-01
                                     :ARG1 (c9-5 / they)
                                     :ARG2 (c9-2 / produce-01
                                                 :ARG0 c9-5
                                                 :ARG1 (c9-3 / run-13
                                                             :ARG1 (c9-7 / print)
                                                             :ARG1-of (c9-1 / normal-02)
                                                             :poss c9-5)))))

# ::snt Why not?
# ::tokens ["Why", "not", "?"]
# ::lemmas ["why", "not", "?"]
(c10-0 / cause-01
       :ARG0 (c10-1 / amr-unknown)
       :polarity -)

# ::snt : will survive. Brave. Long live all humour in truth.
# ::tokens [":", "will", "survive", ".", "Brave", ".", "Long", "live", "all", "humour", "in", "truth", "."]
# ::lemmas [":", "will", "survive", ".", "brave", ".", "long", "live", "all", "humour", "in", "truth", "."]
(c11-2 / multi-sentence
       :snt1 (c11-5 / survive-01)
       :snt2 (c11-3 / brave-02)
       :snt3 (c11-1 / live-01
                    :ARG0 (c11-0 / humor
                                 :mod (c11-7 / all))
                    :ARG1-of (c11-4 / long-03)
                    :ARG1-of (c11-6 / true-01)))

# ::snt welldone Let Freedom of Expression (FOE) light ever but V must remember FOE does not mean insulting other relgn
# ::tokens ["welldone", "Let", "Freedom", "of", "Expression", "(", "FOE", ")", "light", "ever", "but", "V", "must", "remember", "FOE", "does", "not", "mean", "insulting", "other", "relgn"]
# ::lemmas ["welldone", "let", "Freedom", "of", "Expression", "(", "FOE", ")", "light", "ever", "but", "v", "must", "remember", "FOE", "do", "not", "mean", "insult", "other", "relgn"]
(c12-0 / have-concession-91
       :ARG1 (c12-6 / obligate-01
                    :ARG1 (c12-12 / person
                                  :name (c12-10 / name
                                                :op1 "V"))
                    :ARG2 (c12-13 / remember-01
                                  :ARG0 c12-12
                                  :ARG1 (c12-2 / mean-01
                                               :ARG1 (c12-1 / free-04
                                                            :ARG3 (c12-8 / express-01))
                                               :ARG2 (c12-9 / insult-01
                                                            :ARG1 (c12-15 / person
                                                                          :mod (c12-3 / other)
                                                                          :ARG0-of (c12-16 / have-org-role-91
                                                                                           :ARG1 (c12-4 / political-party
                                                                                                        :name (c12-11 / name
                                                                                                                      :op1 "Republican"
                                                                                                                      :op2 "Party")))))
                                               :polarity -)))
       :ARG2 (c12-14 / do-02
                     :ARG1 (c12-5 / let-01
                                  :ARG1 c12-1)
                     :time (c12-7 / ever)))

# ::snt Vive la France
# ::tokens ["Vive", "la", "France"]
# ::lemmas ["Vive", "la", "France"]
(c13-1 / vive-01
       :ARG1 (c13-2 / country
                    :name (c13-0 / name
                                 :op1 "France")))

# ::snt I salute your bravery and determination.
# ::tokens ["I", "salute", "your", "bravery", "and", "determination", "."]
# ::lemmas ["i", "salute", "your", "bravery", "and", "determination", "."]
(c14-4 / salute-01
       :ARG0 (c14-2 / i)
       :ARG1 (c14-5 / and
                    :op1 (c14-1 / brave-02
                                :ARG0 (c14-0 / you))
                    :op2 (c14-3 / determined-02
                                :ARG0 c14-0)))

# ::snt That's the spirit...
# ::tokens ["That", "'s", "the", "spirit", "..."]
# ::lemmas ["that", "be", "the", "spirit", "..."]
(c15-0 / spirit
       :domain (c15-1 / that))

# ::snt hats off for the spirit.
# ::tokens ["hats", "off", "for", "the", "spirit", "."]
# ::lemmas ["hat", "off", "for", "the", "spirit", "."]
(c16-0 / off
       :beneficiary (c16-1 / spirit))

# ::snt who are the terrorists? IDF killed in Gaza last summer.
# ::tokens ["who", "are", "the", "terrorists", "?", "IDF", "killed", "in", "Gaza", "last", "summer", "."]
# ::lemmas ["who", "be", "the", "terrorist", "?", "IDF", "kill", "in", "Gaza", "last", "summer", "."]
(c17-2 / multi-sentence
       :snt1 (c17-10 / terrorist
                     :domain (c17-11 / amr-unknown))
       :snt2 (c17-3 / kill-01
                    :ARG1 (c17-6 / military
                                 :name (c17-4 / name
                                              :op1 "IDF"))
                    :location (c17-8 / city
                                     :name (c17-5 / name
                                                  :op1 "Gaza"))
                    :time (c17-7 / date-entity
                                 :season (c17-9 / summer)
                                 :mod (c17-0 / year
                                             :mod (c17-1 / last)))))

# ::snt ": will survive. "
# ::tokens ["\"", ":", "will", "survive", ".", "\""]
# ::lemmas ["\"", ":", "will", "survive", ".", "\""]
(c18-0 / survive-01
       :ARG0 (c18-1 / you))

# ::snt go for it. Prove Pen is mightier than the sword.
# ::tokens ["go", "for", "it", ".", "Prove", "Pen", "is", "mightier", "than", "the", "sword", "."]
# ::lemmas ["go", "for", "it", ".", "prove", "Pen", "be", "mighty", "than", "the", "sword", "."]
(c19-3 / multi-sentence
       :snt1 (c19-8 / go-03
                    :ARG0 (c19-1 / you)
                    :ARG1 (c19-2 / for
                                 :op1 (c19-5 / it))
                    :mode imperative)
       :snt2 (c19-6 / prove-01
                    :ARG0 (c19-9 / you)
                    :ARG1 (c19-0 / have-degree-91
                                 :ARG1 (c19-11 / pen)
                                 :ARG2 (c19-7 / mightier)
                                 :ARG3 (c19-4 / more)
                                 :ARG4 (c19-10 / sword))
                    :mode imperative))

# ::snt they r daring coz of being unscrupulous. we r daring coz of being educative.
# ::tokens ["they", "r", "daring", "coz", "of", "being", "unscrupulous", ".", "we", "r", "daring", "coz", "of", "being", "educative", "."]
# ::lemmas ["they", "r", "dare", "coz", "of", "be", "unscrupulous", ".", "we", "r", "dare", "coz", "of", "be", "educative", "."]
(c20-2 / multi-sentence
       :snt1 (c20-5 / dare-01
                    :ARG0 (c20-8 / they)
                    :ARG1-of (c20-6 / cause-01
                                    :ARG0 (c20-3 / unscrupulous
                                                 :domain c20-8)))
       :snt2 (c20-1 / dare-01
                    :ARG0 (c20-0 / we)
                    :ARG1-of (c20-7 / cause-01
                                    :ARG0 (c20-4 / educate-01
                                                 :ARG1 c20-0))))
