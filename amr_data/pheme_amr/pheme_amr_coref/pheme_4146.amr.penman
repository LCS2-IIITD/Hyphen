# ::snt The cop's name was Ahmed Merabet
# ::tokens ["The", "cop", "'s", "name", "was", "Ahmed", "Merabet"]
# ::lemmas ["the", "cop", "'s", "name", "be", "Ahmed", "Merabet"]
(c1-0 / name-01
      :ARG1 (c1-2 / cop)
      :ARG2 (c1-1 / person
                  :name (c1-3 / name
                              :op1 "Ahmed"
                              :op2 "Merabet")))

# ::snt seems likely. but i don't see it confirmed anywhere. I see "believed" and "assumed."
# ::tokens ["seems", "likely", ".", "but", "i", "do", "n't", "see", "it", "confirmed", "anywhere", ".", "I", "see", "\"", "believed", "\"", "and", "\"", "assumed", ".", "\""]
# ::lemmas ["seem", "likely", ".", "but", "i", "do", "not", "see", "it", "confirm", "anywhere", ".", "i", "see", "\"", "believe", "\"", "and", "\"", "assume", ".", "\""]
(c2-1 / multi-sentence
      :snt1 (c2-12 / seem-01
                   :ARG1 (c2-0 / likely-01))
      :snt2 (c2-10 / contrast-01
                   :ARG2 (c2-5 / see-01
                               :ARG0 (c2-7 / i)
                               :ARG1 (c2-9 / confirm-01
                                           :ARG1 (c2-11 / it)
                                           :location (c2-13 / anywhere))
                               :polarity -))
      :snt3 (c2-2 / see-01
                  :ARG0 (c2-3 / i)
                  :ARG1 (c2-6 / and
                              :op1 (c2-4 / believe-01)
                              :op2 (c2-8 / assume-02))))

# ::snt has it been confirmed that he's Muslim?
# ::tokens ["has", "it", "been", "confirmed", "that", "he", "'s", "Muslim", "?"]
# ::lemmas ["have", "it", "be", "confirm", "that", "he", "be", "Muslim", "?"]
(c3-3 / confirm-01
      :polarity (c3-4 / amr-unknown)
      :ARG1 (c3-2 / religious-group
                  :name (c3-1 / name
                              :op1 "Muslim")
                  :domain (c3-0 / he)))

# ::snt wow, u have a lot of muslim followers don't you? want to write to some of mine? They are really nice people, I like all of them
# ::tokens ["wow", ",", "u", "have", "a", "lot", "of", "muslim", "followers", "do", "n't", "you", "?", "want", "to", "write", "to", "some", "of", "mine", "?", "They", "are", "really", "nice", "people", ",", "I", "like", "all", "of", "them"]
# ::lemmas ["wow", ",", "u", "have", "a", "lot", "of", "muslim", "follower", "do", "not", "you", "?", "want", "to", "write", "to", "some", "of", "mine", "?", "they", "be", "really", "nice", "people", ",", "i", "like", "all", "of", "they"]
(c4-0 / multi-sentence
      :snt1 (c4-7 / have-03
                  :ARG0 (c4-20 / you)
                  :ARG1 (c4-3 / person
                              :ARG0-of (c4-8 / follow-02
                                             :ARG1 (c4-5 / person
                                                         :mod (c4-14 / religious-group
                                                                     :name (c4-13 / name
                                                                                  :op1 "Islam"))))
                              :quant (c4-9 / lot))
                  :ARG1-of (c4-1 / request-confirmation-91
                                 :ARG2 c4-20))
      :snt2 (c4-16 / want-01
                   :ARG0 (c4-23 / you)
                   :ARG1 (c4-2 / write-01
                               :ARG0 c4-23
                               :ARG2 (c4-10 / person
                                            :quant (c4-4 / some)
                                            :ARG1-of (c4-17 / include-91
                                                            :ARG2 (c4-15 / person
                                                                         :ARG0-of (c4-21 / follow-02
                                                                                         :ARG1 c4-23))))))
      :snt3 (c4-6 / and
                  :op1 (c4-22 / nice-01
                              :ARG1 (c4-11 / person
                                           :domain (c4-24 / they))
                              :degree (c4-12 / really))
                  :op2 (c4-18 / like-01
                              :ARG0 (c4-19 / i)
                              :ARG1 c4-11)))

# ::snt Not sure the pic is him one of the police killed was Muslim
# ::tokens ["Not", "sure", "the", "pic", "is", "him", "one", "of", "the", "police", "killed", "was", "Muslim"]
# ::lemmas ["not", "sure", "the", "pic", "be", "he", "one", "of", "the", "police", "kill", "be", "Muslim"]
(c5-6 / sure-02
      :ARG0 (c5-1 / i)
      :ARG1 (c5-0 / same-01
                  :ARG1 (c5-3 / pic)
                  :ARG2 (c5-4 / religious-group
                              :name (c5-2 / name
                                          :op1 "Muslim")
                              :ARG1-of (c5-5 / include-91
                                             :ARG2 (c5-8 / police
                                                         :ARG1-of (c5-7 / kill-01)))))
      :polarity -)

# ::snt u should probably go and talk to ur gf instead of me, she might get jealous if her great big hunk of man isn't there.
# ::tokens ["u", "should", "probably", "go", "and", "talk", "to", "ur", "gf", "instead", "of", "me", ",", "she", "might", "get", "jealous", "if", "her", "great", "big", "hunk", "of", "man", "is", "n't", "there", "."]
# ::lemmas ["u", "should", "probably", "go", "and", "talk", "to", "ur", "gf", "instead", "of", "i", ",", "she", "might", "get", "jealous", "if", "her", "great", "big", "hunk", "of", "man", "be", "not", "there", "."]
(c6-7 / and
      :op1 (c6-11 / recommend-01
                  :ARG1 (c6-14 / and
                               :op1 (c6-12 / go-02
                                           :ARG0 (c6-18 / you))
                               :op2 (c6-20 / talk-01
                                           :ARG0 c6-18
                                           :ARG2 (c6-3 / person
                                                       :ARG0-of (c6-8 / have-rel-role-91
                                                                      :ARG1 c6-18
                                                                      :ARG2 (c6-4 / girlfriend)))
                                           :ARG1-of (c6-15 / instead-of-91
                                                           :ARG2 (c6-17 / i))))
                  :ARG2 c6-18
                  :mod (c6-5 / probable))
      :op2 (c6-9 / possible-01
                 :ARG1 (c6-2 / get-03
                             :ARG1 c6-3
                             :ARG2 (c6-0 / jealous-02
                                         :ARG0 c6-3)
                             :condition (c6-10 / be-located-at-91
                                               :ARG1 (c6-6 / hunk
                                                           :mod (c6-16 / big)
                                                           :mod (c6-13 / great)
                                                           :poss c6-3
                                                           :mod (c6-1 / man))
                                               :ARG2 (c6-19 / there)
                                               :polarity -))))

# ::snt . the world we live in today - it's all wrong
# ::tokens [".", "the", "world", "we", "live", "in", "today", "-", "it", "'s", "all", "wrong"]
# ::lemmas [".", "the", "world", "we", "live", "in", "today", "-", "it", "be", "all", "wrong"]
(c7-0 / wrong-02
      :ARG1 (c7-3 / world
                  :location-of (c7-1 / live-01
                                     :ARG0 (c7-2 / we)
                                     :time (c7-4 / today)))
      :degree (c7-5 / all))

# ::snt did you see there are cranks already claiming this is fake footage?
# ::tokens ["did", "you", "see", "there", "are", "cranks", "already", "claiming", "this", "is", "fake", "footage", "?"]
# ::lemmas ["do", "you", "see", "there", "be", "crank", "already", "claim", "this", "be", "fake", "footage", "?"]
(c8-6 / see-01
      :ARG0 (c8-0 / you)
      :ARG1 (c8-5 / claim-01
                  :ARG0 (c8-4 / crank)
                  :ARG1 (c8-1 / footage
                              :ARG1-of (c8-3 / fake-02)
                              :domain (c8-7 / this))
                  :time (c8-8 / already))
      :polarity (c8-2 / amr-unknown))

# ::snt Just curious if anyone's confirmed it or if it's an assumption.
# ::tokens ["Just", "curious", "if", "anyone", "'s", "confirmed", "it", "or", "if", "it", "'s", "an", "assumption", "."]
# ::lemmas ["just", "curious", "if", "anyone", "be", "confirm", "it", "or", "if", "it", "be", "an", "assumption", "."]
(c9-5 / curious-01
      :ARG0 (c9-1 / or
                  :op1 (c9-4 / confirm-01
                             :ARG0 (c9-6 / anyone)
                             :ARG1 (c9-3 / it))
                  :op2 (c9-2 / assume-02
                             :ARG1 c9-3))
      :mod (c9-0 / just))

# ::snt and you should go talk to your......oh wait
# ::tokens ["and", "you", "should", "go", "talk", "to", "your", "......", "oh", "wait"]
# ::lemmas ["and", "you", "should", "go", "talk", "to", "your", "......", "oh", "wait"]
(c10-6 / and
       :op2 (c10-3 / recommend-01
                   :ARG1 (c10-4 / go-05
                                :ARG0 (c10-0 / you)
                                :ARG1 (c10-5 / talk-01
                                             :ARG0 c10-0
                                             :ARG2 c10-0))
                   :ARG2 c10-0)
       :ARG1-of (c10-1 / wait-01
                       :mod (c10-2 / oh)))

# ::snt Its confirmed
# ::tokens ["Its", "confirmed"]
# ::lemmas ["its", "confirmed"]
(c11-0 / confirm-01
       :ARG1 (c11-1 / it))

# ::snt I get angry when I'm proven wrong too
# ::tokens ["I", "get", "angry", "when", "I", "'m", "proven", "wrong", "too"]
# ::lemmas ["i", "get", "angry", "when", "i", "be", "prove", "wrong", "too"]
(c12-4 / anger-01
       :ARG0 (c12-2 / prove-01
                    :ARG1 (c12-0 / wrong-04
                                 :ARG1 (c12-1 / i
                                              :ARG1-of c12-4)))
       :mod (c12-3 / too))

# ::snt I always fit my jokes to fit the mentality of the viewer. bye.
# ::tokens ["I", "always", "fit", "my", "jokes", "to", "fit", "the", "mentality", "of", "the", "viewer", ".", "bye", "."]
# ::lemmas ["i", "always", "fit", "my", "joke", "to", "fit", "the", "mentality", "of", "the", "viewer", ".", "bye", "."]
(c14-2 / multi-sentence
       :snt1 (c14-1 / fit-06
                    :ARG0 (c14-4 / i)
                    :ARG1 (c14-0 / joke-01
                                 :ARG0 c14-4)
                    :ARG2 (c14-5 / fit-06
                                 :ARG0 c14-4
                                 :ARG1 (c14-7 / mentality
                                              :poss (c14-8 / person
                                                           :ARG0-of (c14-6 / view-01)))
                                 :ARG2 c14-0)
                    :time (c14-9 / always))
       :snt2 (c14-3 / bye))

# ::snt everyone already knew the police officer was muslim yesterday, ur a bit slow. u don't have any point, ur just lonely
# ::tokens ["everyone", "already", "knew", "the", "police", "officer", "was", "muslim", "yesterday", ",", "ur", "a", "bit", "slow", ".", "u", "do", "n't", "have", "any", "point", ",", "ur", "just", "lonely"]
# ::lemmas ["everyone", "already", "know", "the", "police", "officer", "be", "muslim", "yesterday", ",", "ur", "a", "bit", "slow", ".", "u", "do", "not", "have", "any", "point", ",", "ur", "just", "lonely"]
(c15-4 / multi-sentence
       :snt1 (c15-15 / know-01
                     :ARG0 (c15-7 / everyone)
                     :ARG1 (c15-9 / person
                                  :mod (c15-10 / religious-group
                                               :name (c15-8 / name
                                                            :op1 "Muslim"))
                                  :ARG0-of (c15-0 / have-org-role-91
                                                  :ARG1 (c15-16 / police)
                                                  :ARG2 (c15-6 / officer)))
                     :time (c15-1 / yesterday)
                     :ARG1-of (c15-11 / cause-01
                                      :ARG0 (c15-13 / slow-05
                                                    :ARG1 c15-9
                                                    :degree (c15-5 / bit))))
       :snt2 (c15-17 / have-a-point-09
                     :ARG0 (c15-12 / you)
                     :mod (c15-14 / any)
                     :polarity -)
       :snt3 (c15-3 / lonely
                    :domain c15-12
                    :mod (c15-2 / just)))

# ::snt And in case u want to know what a silly twat looks like Mike, just look in the mirror.
# ::tokens ["And", "in", "case", "u", "want", "to", "know", "what", "a", "silly", "twat", "looks", "like", "Mike", ",", "just", "look", "in", "the", "mirror", "."]
# ::lemmas ["and", "in", "case", "u", "want", "to", "know", "what", "a", "silly", "twat", "look", "like", "Mike", ",", "just", "look", "in", "the", "mirror", "."]
(c16-12 / and
        :op2 (c16-3 / look-01
                    :ARG0 (c16-1 / you)
                    :ARG1 (c16-4 / mirror)
                    :mod (c16-0 / just)
                    :condition (c16-2 / want-01
                                      :ARG0 c16-1
                                      :ARG1 (c16-10 / know-01
                                                    :ARG0 c16-1
                                                    :ARG1 (c16-8 / thing
                                                                 :ARG2-of (c16-7 / look-02
                                                                                 :ARG0 (c16-9 / twat
                                                                                              :mod (c16-11 / silly))
                                                                                 :ARG1 (c16-6 / person
                                                                                              :name (c16-5 / name
                                                                                                           :op1 "Mike"))))))
                    :mode imperative))

# ::snt remember yesterdays history lesson Heres days. On the day u were born the doctors slapped ur mum. then she dropped u on ur head
# ::tokens ["remember", "yesterdays", "history", "lesson", "Heres", "days", ".", "On", "the", "day", "u", "were", "born", "the", "doctors", "slapped", "ur", "mum", ".", "then", "she", "dropped", "u", "on", "ur", "head"]
# ::lemmas ["remember", "yesterday", "history", "lesson", "Heres", "days", ".", "on", "the", "day", "u", "be", "bear", "the", "doctor", "slap", "ur", "mum", ".", "then", "she", "drop", "u", "on", "ur", "head"]
(c17-4 / multi-sentence
       :snt1 (c17-8 / remember-01
                    :ARG0 (c17-1 / you)
                    :ARG1 (c17-3 / lesson
                                 :topic (c17-0 / history)
                                 :time (c17-14 / today))
                    :mode imperative)
       :snt2 (c17-9 / day
                    :mod (c17-11 / last)
                    :time-of (c17-5 / bear-02
                                    :ARG1 (c17-16 / you
                                                  :part (c17-15 / head))))
       :snt3 (c17-12 / slap-01
                     :ARG0 (c17-2 / doctor)
                     :ARG1 (c17-7 / person
                                  :ARG0-of (c17-6 / have-rel-role-91
                                                  :ARG1 c17-16
                                                  :ARG2 (c17-10 / mum)))
                     :time (c17-13 / then)
                     :location c17-15))

# ::snt I love making the same jokes as year olds
# ::tokens ["I", "love", "making", "the", "same", "jokes", "as", "year", "olds"]
# ::lemmas ["i", "love", "make", "the", "same", "joke", "as", "year", "olds"]
(c18-2 / love-01
       :ARG0 (c18-3 / i)
       :ARG1 (c18-0 / joke-01
                    :ARG0 c18-3
                    :ARG1-of (c18-5 / same-01
                                    :ARG2 (c18-7 / joke-01
                                                 :ARG0 (c18-4 / person
                                                              :age (c18-6 / temporal-quantity
                                                                          :unit (c18-1 / year)
                                                                          :quant 1))))))

# ::snt . too much info about him now for it to just be an assumption, yesterday maybe, today we know his life story
# ::tokens [".", "too", "much", "info", "about", "him", "now", "for", "it", "to", "just", "be", "an", "assumption", ",", "yesterday", "maybe", ",", "today", "we", "know", "his", "life", "story"]
# ::lemmas [".", "too", "much", "info", "about", "he", "now", "for", "it", "to", "just", "be", "an", "assumption", ",", "yesterday", "maybe", ",", "today", "we", "know", "his", "life", "story"]
(c19-13 / and
        :op1 (c19-0 / have-quant-91
                    :ARG1 (c19-7 / information
                                 :topic (c19-15 / he))
                    :ARG2 (c19-4 / much)
                    :ARG3 (c19-14 / too)
                    :ARG6 (c19-6 / assume-02
                                 :ARG1 c19-7
                                 :mod (c19-1 / just)
                                 :time (c19-9 / now)))
        :op2 (c19-10 / possible-01
                     :ARG1 (c19-5 / be-temporally-at-91
                                  :ARG1 (c19-8 / know-01
                                               :ARG0 (c19-2 / we)
                                               :ARG1 (c19-12 / story
                                                             :topic (c19-3 / life
                                                                           :poss c19-15))
                                               :time (c19-11 / today)))))

# ::snt unfortunately I don't know any year old jokes
# ::tokens ["unfortunately", "I", "do", "n't", "know", "any", "year", "old", "jokes"]
# ::lemmas ["unfortunately", "i", "do", "not", "know", "any", "year", "old", "joke"]
(c20-2 / fortunate-01
       :ARG2 (c20-4 / know-02
                    :ARG0 (c20-3 / i)
                    :ARG1 (c20-0 / joke-01
                                 :age (c20-5 / temporal-quantity
                                             :unit (c20-1 / year)
                                             :quant 1)
                                 :mod (c20-6 / any))
                    :polarity -)
       :polarity -)

# ::snt I really don't like the idea of publicising the poor man's dying moments everywhere, though.
# ::tokens ["I", "really", "do", "n't", "like", "the", "idea", "of", "publicising", "the", "poor", "man", "'s", "dying", "moments", "everywhere", ",", "though", "."]
# ::lemmas ["i", "really", "do", "not", "like", "the", "idea", "of", "publicise", "the", "poor", "man", "'s", "die", "moment", "everywhere", ",", "though", "."]
(c21-0 / have-concession-91
       :ARG2 (c21-6 / dislike-01
                    :ARG0 (c21-4 / i)
                    :ARG1 (c21-8 / idea
                                 :topic (c21-5 / publicize-01
                                               :ARG1 (c21-2 / moment
                                                            :mod (c21-1 / die-01
                                                                        :ARG1 (c21-7 / man
                                                                                     :mod (c21-10 / poor))))
                                               :location (c21-3 / everywhere)))
                    :degree (c21-9 / really)))

# ::snt Not all of it, Mark, at times like these we must focus on the bigger issues and support our friends in Europe.
# ::tokens ["Not", "all", "of", "it", ",", "Mark", ",", "at", "times", "like", "these", "we", "must", "focus", "on", "the", "bigger", "issues", "and", "support", "our", "friends", "in", "Europe", "."]
# ::lemmas ["not", "all", "of", "it", ",", "Mark", ",", "at", "time", "like", "these", "we", "must", "focus", "on", "the", "big", "issue", "and", "support", "our", "friend", "in", "Europe", "."]
(c22-2 / say-01
       :ARG0 (c22-14 / i)
       :ARG1 (c22-16 / obligate-01
                     :ARG1 (c22-12 / we)
                     :ARG2 (c22-5 / and
                                  :op1 (c22-7 / focus-01
                                              :ARG0 c22-12
                                              :ARG2 (c22-15 / issue-02
                                                            :ARG1-of (c22-6 / have-degree-91
                                                                            :ARG2 (c22-8 / big)
                                                                            :ARG3 (c22-0 / more))))
                                  :op2 (c22-9 / support-01
                                              :ARG0 c22-12
                                              :ARG1 (c22-1 / person
                                                           :ARG0-of (c22-4 / have-rel-role-91
                                                                           :ARG1 c22-12
                                                                           :ARG2 (c22-17 / friend))
                                                           :location (c22-19 / continent
                                                                             :name (c22-10 / name
                                                                                           :op1 "Europe"))))
                                  :frequency (c22-13 / at-times
                                                     :ARG1-of (c22-11 / resemble-01
                                                                      :ARG2 (c22-20 / this)))))
       :ARG2 (c22-3 / person
                    :name (c22-18 / name
                                  :op1 "Mark")))

# ::snt . yes, unfortunately... everything is wrong about this situation
# ::tokens [".", "yes", ",", "unfortunately", "...", "everything", "is", "wrong", "about", "this", "situation"]
# ::lemmas [".", "yes", ",", "unfortunately", "...", "everything", "be", "wrong", "about", "this", "situation"]
(c23-0 / wrong-04
       :ARG1 (c23-2 / everything)
       :ARG2 (c23-3 / situation
                    :mod (c23-4 / this))
       :ARG2-of (c23-1 / fortunate-01
                       :polarity -))

# ::snt got your rant out of your system now, or wanna write a few more replys
# ::tokens ["got", "your", "rant", "out", "of", "your", "system", "now", ",", "or", "wanna", "write", "a", "few", "more", "replys"]
# ::lemmas ["get", "your", "rant", "out", "of", "your", "system", "now", ",", "or", "wanna", "write", "a", "few", "more", "reply"]
(c24-5 / or
       :op1 (c24-10 / get-05
                    :ARG0 (c24-0 / you)
                    :ARG1 (c24-9 / rant-01
                                 :ARG0 c24-0)
                    :ARG2 (c24-2 / out-06
                                 :ARG1 c24-9
                                 :ARG2 (c24-11 / system
                                               :poss c24-0))
                    :time (c24-7 / now))
       :op2 (c24-1 / want-01
                   :ARG0 c24-0
                   :ARG1 (c24-6 / write-01
                                :ARG0 c24-0
                                :ARG1 (c24-8 / reply-01
                                             :quant (c24-3 / few
                                                           :mod (c24-4 / more))))))
