# ::snt : Justice Served: Michael Dunn gets life in prison for shooting unarmed Jordan Davis
# ::tokens [":", "Justice", "Served", ":", "Michael", "Dunn", "gets", "life", "in", "prison", "for", "shooting", "unarmed", "Jordan", "Davis"]
# ::lemmas [":", "Justice", "Served", ":", "Michael", "Dunn", "get", "life", "in", "prison", "for", "shoot", "unarmed", "Jordan", "Davis"]
(c1-12 / and
       :op1 (c1-10 / serve-01
                   :ARG1 (c1-0 / justice))
       :op2 (c1-9 / get-01
                  :ARG0 (c1-7 / person
                              :name (c1-5 / name
                                          :op1 "Michael"
                                          :op2 "Dunn"))
                  :ARG1 (c1-1 / life
                              :location (c1-11 / prison))
                  :ARG1-of (c1-8 / cause-01
                                 :ARG0 (c1-3 / shoot-02
                                             :ARG0 c1-7
                                             :ARG1 (c1-2 / person
                                                         :name (c1-6 / name
                                                                     :op1 "Jordan"
                                                                     :op2 "Davis")
                                                         :ARG1-of (c1-4 / arm-01
                                                                        :polarity -))))))

# ::snt :good fuck him
# ::tokens [":", "good", "fuck", "him"]
# ::lemmas [":", "good", "fuck", "he"]
(c2-1 / fuck-01
      :ARG1 (c2-0 / he)
      :ARG1-of (c2-2 / good-02)
      :mode expressive)

# ::snt More reform! : Justice Served: Michael Dunn gets life in prison for shooting unarmed Jordan Davis: Now what?
# ::tokens ["More", "reform", "!", ":", "Justice", "Served", ":", "Michael", "Dunn", "gets", "life", "in", "prison", "for", "shooting", "unarmed", "Jordan", "Davis", ":", "Now", "what", "?"]
# ::lemmas ["more", "reform", "!", ":", "Justice", "Served", ":", "Michael", "Dunn", "get", "life", "in", "prison", "for", "shoot", "unarmed", "Jordan", "Davis", ":", "now", "what", "?"]
(c3-2 / multi-sentence
      :snt1 (c3-9 / reform-01
                  :mod (c3-8 / more)
                  :mode expressive)
      :snt2 (c3-14 / serve-01
                   :ARG1 (c3-0 / justice))
      :snt3 (c3-11 / get-01
                   :ARG0 (c3-10 / person
                                :name (c3-6 / name
                                            :op1 "Michael"
                                            :op2 "Dunn"))
                   :ARG1 (c3-1 / life
                               :location (c3-15 / prison))
                   :ARG1-of (c3-12 / cause-01
                                   :ARG0 (c3-4 / shoot-02
                                               :ARG0 c3-10
                                               :ARG1 (c3-3 / person
                                                           :name (c3-7 / name
                                                                       :op1 "Jordan"
                                                                       :op2 "Davis")
                                                           :ARG1-of (c3-16 / arm-01
                                                                           :polarity -)))))
      :snt4 (c3-5 / amr-unknown
                  :time (c3-13 / now)))

# ::snt Well Now You Part Ways With Your Jewish Owner?
# ::tokens ["Well", "Now", "You", "Part", "Ways", "With", "Your", "Jewish", "Owner", "?"]
# ::lemmas ["well", "now", "you", "Part", "Ways", "with", "your", "jewish", "owner", "?"]
(c4-4 / part-how
      :polarity (c4-7 / amr-unknown)
      :prep-with (c4-6 / person
                       :ARG0-of (c4-1 / own-01
                                      :ARG1 (c4-0 / you))
                       :mod (c4-5 / religious-group
                                  :name (c4-2 / name
                                              :op1 "Jew")))
      :domain c4-0
      :time (c4-3 / now))

# ::snt No injustice goes unpunished. ..
# ::tokens ["No", "injustice", "goes", "unpunished", ".", ".."]
# ::lemmas ["no", "injustice", "go", "unpunished", ".", ".."]
(c5-2 / go-07
      :ARG1 (c5-0 / justice
                  :polarity -)
      :ARG2 (c5-1 / unpunish-01
                  :ARG1 c5-0))

# ::snt Move on. : Michael Dunn gets life in prison for shooting unarmed Jordan Davis: Now what?
# ::tokens ["Move", "on", ".", ":", "Michael", "Dunn", "gets", "life", "in", "prison", "for", "shooting", "unarmed", "Jordan", "Davis", ":", "Now", "what", "?"]
# ::lemmas ["move", "on", ".", ":", "Michael", "Dunn", "get", "life", "in", "prison", "for", "shoot", "unarmed", "Jordan", "Davis", ":", "now", "what", "?"]
(c6-1 / multi-sentence
      :snt1 (c6-7 / move-01
                  :direction (c6-3 / on))
      :snt2 (c6-10 / get-01
                   :ARG0 (c6-8 / person
                               :name (c6-5 / name
                                           :op1 "Michael"
                                           :op2 "Dunn"))
                   :ARG1 (c6-0 / life
                               :location (c6-12 / prison))
                   :ARG2 (c6-11 / shoot-02
                                :ARG0 c6-8
                                :ARG1 (c6-2 / person
                                            :name (c6-6 / name
                                                        :op1 "Jordan"
                                                        :op2 "Davis")
                                            :ARG1-of (c6-13 / arm-01
                                                            :polarity -))))
      :snt3 (c6-4 / amr-unknown
                  :time (c6-9 / now)))

# ::snt , all day &amp; nite lol
# ::tokens [",", "all", "day", "&", "amp", ";", "nite", "lol"]
# ::lemmas [",", "all", "day", "&", "amp", ";", "nite", "lol"]
(c7-7 / and
      :op1 (c7-5 / day
                 :mod (c7-1 / all))
      :op2 (c7-4 / amp)
      :time (c7-3 / nite)
      :ARG2-of (c7-0 / laugh-01
                     :ARG0 (c7-2 / i)
                     :manner (c7-6 / loud)
                     :mode expressive))

# ::snt BYYYYYYYYYYYYYYYYYYYEEEEEEEEEEEEEEEE PUMPKIN
# ::tokens ["BYYYYYYYYYYYYYYYYYYYEEEEEEEEEEEEEEEE", "PUMPKIN"]
# ::lemmas ["BYYYYYYYYYYYYYYYYYYYEEEEEEEEEEEEEEEE", "pumpkin"]
(c8-2 / by-the-way
      :frequency (c8-0 / rate-entity-91
                       :ARG3 (c8-1 / few)))

# ::snt nothing will happen. He'll probably be a hero to the Aryan Nation in prison.
# ::tokens ["nothing", "will", "happen", ".", "He", "'ll", "probably", "be", "a", "hero", "to", "the", "Aryan", "Nation", "in", "prison", "."]
# ::lemmas ["nothing", "will", "happen", ".", "he", "'ll", "probably", "be", "a", "hero", "to", "the", "Aryan", "Nation", "in", "prison", "."]
(c9-1 / multi-sentence
      :snt1 (c9-3 / nothing)
      :snt2 (c9-0 / hero
                  :domain (c9-7 / he)
                  :beneficiary (c9-2 / organization
                                     :name (c9-4 / name
                                                 :op1 "Aryan"
                                                 :op2 "Nation")
                                     :location (c9-5 / prison))
                  :mod (c9-6 / probable)))

# ::snt finally there is some justice after all.
# ::tokens ["finally", "there", "is", "some", "justice", "after", "all", "."]
# ::lemmas ["finally", "there", "be", "some", "justice", "after", "all", "."]
(c10-0 / justice
       :mod (c10-2 / some)
       :mod (c10-1 / final)
       :concession (c10-3 / after-all))

# ::snt I guess he bet on the race card and he lose
# ::tokens ["I", "guess", "he", "bet", "on", "the", "race", "card", "and", "he", "lose"]
# ::lemmas ["i", "guess", "he", "bet", "on", "the", "race", "card", "and", "he", "lose"]
(c11-6 / guess-01
       :ARG0 (c11-3 / i)
       :ARG1 (c11-7 / and
                    :op1 (c11-2 / bet-01
                                :ARG0 (c11-0 / he)
                                :ARG2 (c11-5 / card
                                             :mod (c11-4 / race)))
                    :op2 (c11-1 / lose-03
                                :ARG0 c11-0)))

# ::snt lol
# ::tokens ["lol"]
# ::lemmas ["lol"]
(c12-0 / laugh-01
       :manner (c12-1 / loud)
       :mode expressive)

# ::snt ~ bend over Beethoven!
# ::tokens ["~", "bend", "over", "Beethoven", "!"]
# ::lemmas ["~", "bend", "over", "Beethoven", "!"]
(c13-1 / bend-01
       :ARG0 (c13-0 / you)
       :ARG1 (c13-4 / person
                    :name (c13-3 / name
                                 :op1 "Beethoven"))
       :direction (c13-2 / over)
       :mode imperative)

# ::snt lesson for the others to not just take people's lives.
# ::tokens ["lesson", "for", "the", "others", "to", "not", "just", "take", "people", "'s", "lives", "."]
# ::lemmas ["lesson", "for", "the", "other", "to", "not", "just", "take", "people", "'s", "life", "."]
(c14-1 / lesson
       :purpose (c14-5 / take-01
                       :ARG0 (c14-2 / other)
                       :ARG1 (c14-4 / life
                                    :poss (c14-3 / person))
                       :mod (c14-0 / just)
                       :polarity -)
       :mod (c14-6 / again))

# ::snt : Justice Served: Michael Dunn gets life in prison for shooting unarmed Jordan Davis" Play pussy and get fucked nigga!
# ::tokens [":", "Justice", "Served", ":", "Michael", "Dunn", "gets", "life", "in", "prison", "for", "shooting", "unarmed", "Jordan", "Davis", "\"", "Play", "pussy", "and", "get", "fucked", "nigga", "!"]
# ::lemmas [":", "Justice", "Served", ":", "Michael", "Dunn", "get", "life", "in", "prison", "for", "shoot", "unarmed", "Jordan", "Davis", "\"", "play", "pussy", "and", "get", "fuck", "nigga", "!"]
(c15-6 / and
       :op1 (c15-3 / serve-01
                   :ARG1 (c15-0 / justice))
       :op2 (c15-14 / get-01
                    :ARG0 (c15-2 / person
                                 :name (c15-12 / name
                                               :op1 "Michael"
                                               :op2 "Dunn"))
                    :ARG1 (c15-7 / life
                                 :location (c15-5 / prison))
                    :ARG1-of (c15-19 / cause-01
                                     :ARG0 (c15-11 / shoot-02
                                                   :ARG0 c15-2
                                                   :ARG1 (c15-9 / person
                                                                :name (c15-18 / name
                                                                              :op1 "Jordan"
                                                                              :op2 "Davis")
                                                                :ARG1-of (c15-16 / arm-01
                                                                                 :polarity -)))))
       :op3 (c15-13 / and
                    :op1 (c15-15 / play-01
                                 :ARG0 (c15-17 / you)
                                 :ARG1 (c15-10 / pussy)
                                 :mode imperative)
                    :op2 (c15-8 / fuck-01
                                :ARG0 c15-17
                                :ARG1 (c15-4 / person
                                             :mod (c15-1 / nigger))
                                :mode imperative)))

# ::snt Nothing Justice Has Been Served! (For Once)&amp; It's Time To Do The Same For Our Brothers, Trayvon Martin And Mike Brown.
# ::tokens ["Nothing", "Justice", "Has", "Been", "Served", "!", "(", "For", "Once)&amp", ";", "It", "'s", "Time", "To", "Do", "The", "Same", "For", "Our", "Brothers", ",", "Trayvon", "Martin", "And", "Mike", "Brown", "."]
# ::lemmas ["nothing", "Justice", "have", "be", "serve", "!", "(", "for", "Once)&amp", ";", "it", "be", "time", "to", "do", "the", "Same", "for", "our", "Brothers", ",", "Trayvon", "Martin", "and", "Mike", "Brown", "."]
(c17-1 / multi-sentence
       :snt1 (c17-7 / and
                    :op1 (c17-4 / serve-01
                                :ARG1 (c17-0 / justice)
                                :mod (c17-9 / for-once))
                    :op2 (c17-17 / amp))
       :snt2 (c17-19 / time
                     :time-of (c17-3 / do-02
                                     :ARG0 (c17-16 / we)
                                     :ARG1 (c17-12 / same-01)
                                     :beneficiary (c17-14 / and
                                                          :op1 (c17-2 / person
                                                                      :ARG0-of (c17-8 / have-rel-role-91
                                                                                      :ARG1 c17-16
                                                                                      :ARG2 (c17-11 / brother)))
                                                          :op2 (c17-5 / person
                                                                      :ARG0-of (c17-6 / have-rel-role-91
                                                                                      :ARG1 c17-16
                                                                                      :ARG2 c17-11)))
                                     :op3 (c17-10 / person
                                                  :name (c17-13 / name
                                                                :op1 "Trayvon"
                                                                :op2 "Martin"))
                                     :op4 (c17-15 / person
                                                  :name (c17-18 / name
                                                                :op1 "Mike"
                                                                :op2 "Brown")))))

# ::snt finally the white man goes to jail for life
# ::tokens ["finally", "the", "white", "man", "goes", "to", "jail", "for", "life"]
# ::lemmas ["finally", "the", "white", "man", "go", "to", "jail", "for", "life"]
(c18-4 / imprison-01
       :ARG1 (c18-2 / man
                    :ARG1-of (c18-0 / white-02))
       :ARG2 (c18-1 / life)
       :mod (c18-3 / final))

# ::snt blast him with loud music... hours a day !!!
# ::tokens ["blast", "him", "with", "loud", "music", "...", "hours", "a", "day", "!", "!", "!"]
# ::lemmas ["blast", "he", "with", "loud", "music", "...", "hours", "a", "day", "!", "!", "!"]
(c19-4 / blast-02
       :ARG0 (c19-1 / you)
       :ARG1 (c19-0 / he)
       :instrument (c19-3 / music
                          :mod (c19-2 / loud))
       :frequency (c19-5 / rate-entity-91
                         :ARG1 (c19-8 / temporal-quantity
                                      :unit (c19-9 / hour)
                                      :quant 1)
                         :ARG2 (c19-7 / temporal-quantity
                                      :unit (c19-6 / day)
                                      :quant 1))
       :mode imperative)

# ::snt Now what about Michael Brown's deatg
# ::tokens ["Now", "what", "about", "Michael", "Brown", "'s", "deatg"]
# ::lemmas ["now", "what", "about", "Michael", "Brown", "'s", "deatg"]
(c20-4 / amr-unknown
       :topic (c20-3 / department
                     :poss (c20-2 / person
                                  :name (c20-0 / name
                                               :op1 "Michael"
                                               :op2 "Brown")))
       :time (c20-1 / now))
