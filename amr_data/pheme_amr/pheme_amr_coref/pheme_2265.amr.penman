# ::snt MT Live coverage of hostage situation unfolding in Sydney's Martin Place
# ::tokens ["MT", "Live", "coverage", "of", "hostage", "situation", "unfolding", "in", "Sydney", "'s", "Martin", "Place"]
# ::lemmas ["MT", "Live", "coverage", "of", "hostage", "situation", "unfolding", "in", "Sydney", "'s", "Martin", "Place"]
(c1-8 / cover-03
      :ARG0 (c1-2 / broadcast-program
                  :name (c1-4 / name
                              :op1 "MT"
                              :op2 "Live"))
      :ARG1 (c1-9 / situation
                  :mod (c1-0 / hostage)
                  :ARG1-of (c1-1 / unfold-02
                                 :location (c1-3 / street
                                                 :name (c1-5 / name
                                                             :op1 "Martin"
                                                             :op2 "Place")
                                                 :location (c1-7 / city
                                                                 :name (c1-6 / name
                                                                             :op1 "Sydney"))))))

# ::snt I hope this isn't what it looks like I hope everyone comes out safe
# ::tokens ["I", "hope", "this", "is", "n't", "what", "it", "looks", "like", "I", "hope", "everyone", "comes", "out", "safe"]
# ::lemmas ["i", "hope", "this", "be", "not", "what", "it", "look", "like", "i", "hope", "everyone", "come", "out", "safe"]
(c2-10 / and
       :op1 (c2-0 / hope-01
                  :ARG0 (c2-4 / i)
                  :ARG1 (c2-5 / resemble-01
                              :ARG1 (c2-9 / this)
                              :ARG2 (c2-7 / thing
                                          :ARG2-of (c2-1 / look-02
                                                         :ARG0 c2-9))
                              :polarity -))
       :op2 (c2-2 / hope-01
                  :ARG0 c2-4
                  :ARG1 (c2-6 / come-out-09
                              :ARG1 (c2-3 / everyone)
                              :ARG2 (c2-8 / safe-01
                                          :ARG1 c2-3))))

# ::snt if it is ISIS connected, cut off the oxygen right now. No coverage.
# ::tokens ["if", "it", "is", "ISIS", "connected", ",", "cut", "off", "the", "oxygen", "right", "now", ".", "No", "coverage", "."]
# ::lemmas ["if", "it", "be", "ISIS", "connect", ",", "cut", "off", "the", "oxygen", "right", "now", ".", "no", "coverage", "."]
(c3-1 / multi-sentence
      :snt1 (c3-7 / cut-off-04
                  :ARG0 (c3-0 / you)
                  :ARG1 (c3-2 / oxygen)
                  :time (c3-4 / now
                              :mod (c3-6 / right))
                  :condition (c3-8 / connect-01
                                   :ARG1 (c3-3 / it)
                                   :ARG2 (c3-9 / criminal-organization
                                               :name (c3-5 / name
                                                           :op1 "ISIS")))
                  :mode imperative)
      :snt2 (c3-10 / cover-03
                   :polarity -))

# ::snt what a horrible situation ...just hope it is not ISIL...it will not end well...
# ::tokens ["what", "a", "horrible", "situation", "...", "just", "hope", "it", "is", "not", "ISIL", "...", "it", "will", "not", "end", "well", "..."]
# ::lemmas ["what", "a", "horrible", "situation", "...", "just", "hope", "it", "be", "not", "ISIL", "...", "it", "will", "not", "end", "well", "..."]
(c4-4 / multi-sentence
      :snt1 (c4-11 / situation
                   :mod (c4-0 / horrible
                              :degree (c4-5 / so)))
      :snt2 (c4-12 / hope-01
                   :ARG0 (c4-1 / you)
                   :ARG1 (c4-8 / have-polarity-91
                               :ARG1 (c4-7 / it)
                               :ARG2 -)
                   :mod (c4-2 / just)
                   :ARG1-of (c4-9 / cause-01
                                  :ARG0 (c4-6 / end-01
                                              :ARG1 (c4-10 / it)
                                              :manner (c4-3 / well-09)
                                              :polarity -))
                   :mode imperative))

# ::snt wee Neid tu goe dere an FAK sheet arp orn deh moooslims brah
# ::tokens ["wee", "Neid", "tu", "goe", "dere", "an", "FAK", "sheet", "arp", "orn", "deh", "moooslims", "brah"]
# ::lemmas ["wee", "Neid", "tu", "goe", "dere", "an", "FAK", "sheet", "arp", "orn", "deh", "moooslim", "brah"]
(c5-13 / and
       :op1 (c5-0 / wee
                  :mod (c5-12 / string-entity
                              :value "neid"))
       :op2 (c5-11 / goe
                   :mod (c5-9 / dere))
       :op3 (c5-4 / sheet
                  :mod (c5-3 / organization
                             :name (c5-6 / name
                                         :op1 "FAK")))
       :op4 (c5-5 / arp
                  :mod (c5-1 / orn))
       :op5 (c5-2 / brah
                  :mod (c5-8 / person
                             :mod (c5-10 / religious-group
                                         :name (c5-7 / name
                                                     :op1 "Muslim")))))

# ::snt That's not the Isis flag.
# ::tokens ["That", "'s", "not", "the", "Isis", "flag", "."]
# ::lemmas ["that", "be", "not", "the", "Isis", "flag", "."]
(c6-2 / flag
      :mod (c6-1 / religious-group
                 :name (c6-0 / name
                             :op1 "Isis"))
      :domain (c6-3 / that)
      :polarity -)

# ::snt : Live coverage of hostage situation unfolding in Sydney's Martin Place
# ::tokens [":", "Live", "coverage", "of", "hostage", "situation", "unfolding", "in", "Sydney", "'s", "Martin", "Place"]
# ::lemmas [":", "live", "coverage", "of", "hostage", "situation", "unfolding", "in", "Sydney", "'s", "Martin", "Place"]
(c7-7 / cover-03
      :ARG1 (c7-8 / situation
                  :mod (c7-0 / hostage)
                  :ARG1-of (c7-2 / unfold-02
                                 :location (c7-3 / street
                                                 :name (c7-4 / name
                                                             :op1 "Martin"
                                                             :op2 "Place")
                                                 :location (c7-6 / city
                                                                 :name (c7-5 / name
                                                                             :op1 "Sydney")))))
      :manner (c7-1 / live))

# ::snt Is that the Lindt chocolate cafe?
# ::tokens ["Is", "that", "the", "Lindt", "chocolate", "cafe", "?"]
# ::lemmas ["be", "that", "the", "Lindt", "chocolate", "cafe", "?"]
(c8-2 / cafe
      :polarity (c8-4 / amr-unknown)
      :name (c8-0 / name
                  :op1 "Lindt")
      :mod (c8-1 / chocolate)
      :domain (c8-3 / that))

# ::snt Terrifying : BREAKING: Hostage situation unfolding in Sydney's Martin Place
# ::tokens ["Terrifying", ":", "BREAKING", ":", "Hostage", "situation", "unfolding", "in", "Sydney", "'s", "Martin", "Place"]
# ::lemmas ["terrify", ":", "breaking", ":", "hostage", "situation", "unfold", "in", "Sydney", "'s", "Martin", "Place"]
(c9-1 / multi-sentence
      :snt1 (c9-9 / terrify-01)
      :snt2 (c9-3 / break-13
                  :ARG1 (c9-2 / unfold-02
                              :ARG1 (c9-8 / situation
                                          :mod (c9-0 / hostage))
                              :location (c9-4 / street
                                              :name (c9-5 / name
                                                          :op1 "Martin"
                                                          :op2 "Place")
                                              :location (c9-7 / city
                                                              :name (c9-6 / name
                                                                          :op1 "Sydney"))))))

# ::snt feel the enrichment
# ::tokens ["feel", "the", "enrichment"]
# ::lemmas ["feel", "the", "enrichment"]
(c10-2 / feel-01
       :ARG0 (c10-0 / you)
       :ARG1 (c10-1 / enrich-01)
       :mode imperative)

# ::snt We need new hero.
# ::tokens ["We", "need", "new", "hero", "."]
# ::lemmas ["we", "need", "new", "hero", "."]
(c12-0 / need-01
       :ARG0 (c12-1 / we)
       :ARG1 (c12-2 / hero
                    :ARG1-of (c12-3 / new-01)))

# ::snt flag!
# ::tokens ["flag", "!"]
# ::lemmas ["flag", "!"]
(c13-0 / flag)

# ::snt in =
# ::tokens ["in", "="]
# ::lemmas ["in", "="]
(c14-0 / be-located-at-91)

# ::snt That sure looks like an ISIS flag to me! You bastards, don't bring your filthy terror religion to my country!
# ::tokens ["That", "sure", "looks", "like", "an", "ISIS", "flag", "to", "me", "!", "You", "bastards", ",", "do", "n't", "bring", "your", "filthy", "terror", "religion", "to", "my", "country", "!"]
# ::lemmas ["that", "sure", "look", "like", "an", "ISIS", "flag", "to", "i", "!", "you", "bastard", ",", "do", "not", "bring", "your", "filthy", "terror", "religion", "to", "my", "country", "!"]
(c15-2 / multi-sentence
       :snt1 (c15-1 / look-02
                    :ARG0 (c15-15 / that)
                    :ARG1 (c15-3 / flag
                                 :mod (c15-9 / criminal-organization
                                             :name (c15-7 / name
                                                          :op1 "ISIS")))
                    :ARG2 (c15-5 / i)
                    :ARG1-of (c15-13 / sure-02))
       :snt2 (c15-4 / bring-01
                    :ARG0 (c15-0 / you
                                 :mod (c15-10 / bastard))
                    :ARG1 (c15-8 / religion
                                 :mod (c15-12 / terror)
                                 :mod (c15-6 / filthy)
                                 :poss c15-0)
                    :ARG2 (c15-11 / country
                                  :poss (c15-14 / i))
                    :polarity -
                    :mode imperative))
