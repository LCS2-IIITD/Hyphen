# ::snt I can't believe my eyes and ears at what has happened. It seems unreal.
# ::tokens ["I", "ca", "n't", "believe", "my", "eyes", "and", "ears", "at", "what", "has", "happened", ".", "It", "seems", "unreal", "."]
# ::lemmas ["i", "can", "not", "believe", "my", "eye", "and", "ear", "at", "what", "have", "happen", ".", "it", "seem", "unreal", "."]
(c1-1 / multi-sentence
      :snt1 (c1-6 / possible-01
                  :ARG1 (c1-2 / believe-01
                              :ARG0 (c1-5 / i
                                          :part (c1-10 / and
                                                       :op1 (c1-4 / eye)
                                                       :op2 (c1-3 / ear)))
                              :ARG1 (c1-0 / event))
                  :polarity -)
      :snt2 (c1-9 / seem-01
                  :ARG1 (c1-7 / realistic-03
                              :ARG1 (c1-8 / it)
                              :polarity -)))

# ::snt Go troll somewhere else. Bye bye
# ::tokens ["Go", "troll", "somewhere", "else", ".", "Bye", "bye"]
# ::lemmas ["go", "troll", "somewhere", "else", ".", "bye", "bye"]
(c2-1 / multi-sentence
      :snt1 (c2-4 / go-03
                  :ARG0 (c2-0 / you)
                  :ARG1 (c2-6 / troll-01
                              :ARG0 c2-0
                              :location (c2-5 / somewhere
                                              :mod (c2-3 / else)))
                  :mode imperative)
      :snt2 (c2-2 / bye
                  :mode expressive))

# ::snt Go fuck your hat.
# ::tokens ["Go", "fuck", "your", "hat", "."]
# ::lemmas ["go", "fuck", "your", "hat", "."]
(c3-3 / go-05
      :ARG0 (c3-1 / you)
      :ARG1 (c3-2 / fuck-01
                  :ARG1 (c3-0 / hat
                              :poss c3-1))
      :mode imperative)

# ::snt false flag! What else is happening in gov today we're not supposed to see?
# ::tokens ["false", "flag", "!", "What", "else", "is", "happening", "in", "gov", "today", "we", "'re", "not", "supposed", "to", "see", "?"]
# ::lemmas ["false", "flag", "!", "what", "else", "be", "happen", "in", "gov", "today", "we", "be", "not", "suppose", "to", "see", "?"]
(c4-2 / multi-sentence
      :snt1 (c4-1 / flag
                  :mod (c4-5 / false))
      :snt2 (c4-8 / suppose-02
                  :ARG1 (c4-0 / we)
                  :ARG2 (c4-3 / see-01
                              :ARG0 c4-0
                              :ARG1 (c4-4 / else
                                          :mod (c4-10 / amr-unknown))
                              :time (c4-9 / today)
                              :location (c4-7 / government-organization
                                              :ARG0-of (c4-6 / govern-01)))
                  :polarity -))

# ::snt : : don't tweet your location. Don't tweet location of police units. Resist urge to look at what's happening, get out
# ::tokens [":", ":", "do", "n't", "tweet", "your", "location", ".", "Do", "n't", "tweet", "location", "of", "police", "units", ".", "Resist", "urge", "to", "look", "at", "what", "'s", "happening", ",", "get", "out"]
# ::lemmas [":", ":", "do", "not", "tweet", "your", "location", ".", "do", "not", "tweet", "location", "of", "police", "unit", ".", "resist", "urge", "to", "look", "at", "what", "be", "happen", ",", "get", "out"]
(c5-3 / multi-sentence
      :snt1 (c5-15 / tweet-02
                   :ARG0 (c5-1 / you)
                   :ARG1 (c5-2 / location
                               :poss c5-1)
                   :polarity -
                   :mode imperative)
      :snt2 (c5-13 / tweet-02
                   :ARG0 (c5-16 / you)
                   :ARG1 (c5-9 / location
                               :poss (c5-4 / unit
                                           :mod (c5-8 / police)))
                   :mode imperative
                   :polarity -)
      :snt3 (c5-10 / resist-01
                   :ARG0 (c5-5 / you)
                   :ARG1 (c5-14 / urge-01
                                :ARG1 c5-5
                                :ARG2 (c5-0 / look-01
                                            :ARG0 c5-5
                                            :ARG1 (c5-7 / event)))
                   :mode imperative)
      :snt4 (c5-11 / get-05
                   :ARG0 (c5-12 / you)
                   :ARG2 (c5-6 / out)
                   :mode imperative))

# ::snt Is this a joke
# ::tokens ["Is", "this", "a", "joke"]
# ::lemmas ["be", "this", "a", "joke"]
(c6-0 / joke-01
      :polarity (c6-2 / amr-unknown)
      :ARG2 (c6-1 / this))

# ::snt Remain Calm &amp; Don't Panic.
# ::tokens ["Remain", "Calm", "&", "amp", ";", "Do", "n't", "Panic", "."]
# ::lemmas ["Remain", "Calm", "&", "amp", ";", "do", "not", "panic", "."]
(c7-5 / and
      :op1 (c7-3 / remain-01
                 :ARG1 (c7-1 / you)
                 :ARG3 (c7-4 / calm)
                 :mode imperative)
      :op2 (c7-0 / help-01
                 :ARG0 c7-1
                 :ARG1 (c7-2 / panic-01
                             :ARG0 c7-1
                             :polarity -
                             :mode imperative)
                 :mode imperative))

# ::snt STOP SPREADING LIES TO THE CDN PEOPLE- False Flag anyone? PHONEY
# ::tokens ["STOP", "SPREADING", "LIES", "TO", "THE", "CDN", "PEOPLE-", "False", "Flag", "anyone", "?", "PHONEY"]
# ::lemmas ["stop", "spread", "lie", "to", "the", "cdn", "people-", "False", "Flag", "anyone", "?", "phoney"]
(c8-2 / multi-sentence
      :snt1 (c8-9 / stick-01
                  :ARG0 (c8-0 / you
                              :ARG1-of c8-9)
                  :ARG2 (c8-1 / lie-08
                              :ARG0 c8-0
                              :ARG2 (c8-7 / person
                                          :mod (c8-10 / publication
                                                      :name (c8-6 / name
                                                                  :op1 "CDN"))))
                  :mode imperative)
      :snt2 (c8-11 / anyone
                   :polarity (c8-4 / amr-unknown)
                   :mod (c8-3 / flag
                              :mod (c8-5 / false)))
      :snt3 (c8-8 / money))

# ::snt : Ottawa: dont tweet your location. Dont tweet the location of police units. Resist urge to look at whats happening
# ::tokens [":", "Ottawa", ":", "do", "nt", "tweet", "your", "location", ".", "Do", "nt", "tweet", "the", "location", "of", "police", "units", ".", "Resist", "urge", "to", "look", "at", "what", "s", "happening"]
# ::lemmas [":", "Ottawa", ":", "do", "not", "tweet", "your", "location", ".", "do", "not", "tweet", "the", "location", "of", "police", "unit", ".", "resist", "urge", "to", "look", "at", "what", "s", "happen"]
(c9-3 / multi-sentence
      :snt1 (c9-12 / say-01
                   :ARG0 (c9-9 / city
                               :name (c9-6 / name
                                           :op1 "Ottawa"))
                   :ARG1 (c9-14 / tweet-02
                                :ARG0 (c9-1 / you)
                                :ARG1 (c9-2 / location
                                            :poss c9-1)
                                :polarity -
                                :mode imperative)
                   :ARG2 c9-1)
      :snt2 (c9-11 / tweet-02
                   :ARG0 c9-1
                   :ARG1 (c9-8 / location
                               :poss (c9-4 / unit
                                           :mod (c9-7 / police)))
                   :mode imperative
                   :polarity -)
      :snt3 (c9-10 / resist-01
                   :ARG0 c9-1
                   :ARG1 (c9-13 / urge-01
                                :ARG1 c9-1
                                :ARG2 (c9-0 / look-01
                                            :ARG0 c9-1
                                            :ARG1 (c9-5 / event)))
                   :mode imperative))

# ::snt geez.. fear mongering ala MSM. harper must be sooooooo pleased w his work; he's right, i don't recognize Canada. dd
# ::tokens ["geez", "..", "fear", "mongering", "ala", "MSM", ".", "harper", "must", "be", "sooooooo", "pleased", "w", "his", "work", ";", "he", "'s", "right", ",", "i", "do", "n't", "recognize", "Canada", ".", "dd"]
# ::lemmas ["geez", "..", "fear", "monger", "ala", "MSM", ".", "harper", "must", "be", "sooooooo", "pleased", "w", "his", "work", ";", "he", "be", "right", ",", "i", "do", "not", "recognize", "Canada", ".", "dd"]
(c10-0 / multi-sentence
       :snt1 (c10-13 / gez)
       :snt2 (c10-8 / fearmonger
                    :mod (c10-11 / media
                                 :ARG1-of (c10-7 / mainstream-02)))
       :snt3 (c10-16 / obligate-01
                     :ARG1 (c10-3 / person
                                  :name (c10-10 / name
                                                :op1 "Harper"))
                     :ARG2 (c10-5 / please-01
                                  :ARG0 (c10-14 / work-01
                                                :ARG0 c10-3)
                                  :ARG1 c10-3
                                  :degree (c10-4 / so)))
       :snt4 (c10-12 / right-06
                     :ARG1 (c10-6 / he)
                     :ARG2 (c10-1 / recognize-02
                                  :ARG0 (c10-15 / i)
                                  :ARG1 (c10-18 / country
                                                :name (c10-17 / name
                                                              :op1 "Canada"))
                                  :polarity -))
       :snt5 (c10-9 / person
                    :name (c10-2 / name
                                 :op1 "DD")))

# ::snt I received an email from my brother Colin, in lock down; as of :23 AM one shooter was down.
# ::tokens ["I", "received", "an", "email", "from", "my", "brother", "Colin", ",", "in", "lock", "down", ";", "as", "of", ":", "23", "AM", "one", "shooter", "was", "down", "."]
# ::lemmas ["i", "receive", "an", "email", "from", "my", "brother", "Colin", ",", "in", "lock", "down", ";", "as", "of", ":", "23", "be", "one", "shooter", "be", "down", "."]
(c11-3 / multi-sentence
       :snt1 (c11-9 / receive-01
                    :ARG0 (c11-6 / i)
                    :ARG1 (c11-5 / email-01
                                 :ARG0 (c11-8 / person
                                              :name (c11-7 / name
                                                           :op1 "Colin")
                                              :ARG0-of (c11-0 / have-rel-role-91
                                                              :ARG1 c11-6
                                                              :ARG2 (c11-4 / brother)))
                                 :ARG1 c11-6
                                 :ARG2 (c11-2 / lock-down-05
                                              :ARG1 c11-6)))
       :snt2 (c11-10 / down-01
                     :ARG1 (c11-12 / person
                                   :ARG0-of (c11-11 / shoot-02)
                                   :quant 1)
                     :time (c11-13 / as-of
                                   :op1 (c11-1 / date-entity
                                               :time "23:23"))))

# ::snt ahahaha. best troll tweet of the day! (thus far) dd
# ::tokens ["ahahaha", ".", "best", "troll", "tweet", "of", "the", "day", "!", "(", "thus", "far", ")", "dd"]
# ::lemmas ["ahahaha", ".", "good", "troll", "tweet", "of", "the", "day", "!", "(", "thus", "far", ")", "dd"]
(c12-1 / multi-sentence
       :snt1 (c12-0 / haha
                    :mode expressive)
       :snt2 (c12-8 / tweet-01
                    :ARG0 (c12-3 / person
                                 :name (c12-2 / name
                                              :op1 "DD"))
                    :mod (c12-7 / troll)
                    :ARG1-of (c12-9 / have-degree-91
                                    :ARG2 (c12-6 / good-02
                                                 :ARG1 c12-8)
                                    :ARG3 (c12-4 / most)
                                    :time (c12-5 / day))
                    :mode expressive))

# ::snt I'm in Calgary looking after my father who has cancer.
# ::tokens ["I", "'m", "in", "Calgary", "looking", "after", "my", "father", "who", "has", "cancer", "."]
# ::lemmas ["i", "be", "in", "Calgary", "look", "after", "my", "father", "who", "have", "cancer", "."]
(c13-3 / be-located-at-91
       :ARG1 (c13-4 / i)
       :ARG2 (c13-9 / city
                    :name (c13-5 / name
                                 :op1 "Calgary"))
       :purpose (c13-1 / look-after-07
                       :ARG0 c13-4
                       :ARG1 (c13-7 / person
                                    :ARG0-of (c13-0 / have-rel-role-91
                                                    :ARG1 c13-4
                                                    :ARG2 (c13-2 / father))
                                    :ARG0-of (c13-10 / have-03
                                                     :ARG1 (c13-8 / disease
                                                                  :name (c13-6 / name
                                                                               :op1 "cancer"))))))

# ::snt heart goes out to young soldier, I can't believe ppl take time to tweet in this situation,safety first!
# ::tokens ["heart", "goes", "out", "to", "young", "soldier", ",", "I", "ca", "n't", "believe", "ppl", "take", "time", "to", "tweet", "in", "this", "situation", ",", "safety", "first", "!"]
# ::lemmas ["heart", "go", "out", "to", "young", "soldier", ",", "i", "can", "not", "believe", "ppl", "take", "time", "to", "tweet", "in", "this", "situation", ",", "safety", "first", "!"]
(c14-3 / multi-sentence
       :snt1 (c14-11 / go-out-17
                     :ARG1 (c14-0 / heart)
                     :beneficiary (c14-13 / soldier
                                          :mod (c14-1 / young)))
       :snt2 (c14-10 / possible-01
                     :ARG1 (c14-4 / believe-01
                                  :ARG0 (c14-8 / i)
                                  :ARG1 (c14-14 / take-01
                                                :ARG0 (c14-15 / person)
                                                :ARG1 (c14-12 / time)
                                                :purpose (c14-9 / tweet-02
                                                                :ARG0 c14-15
                                                                :topic (c14-6 / situation
                                                                              :mod (c14-7 / this)))))
                     :polarity -)
       :snt3 (c14-2 / safe-01
                    :ord (c14-5 / ordinal-entity
                                :value 1)))

# ::snt well.. you told me what for, huh? LOL feel better, in some small way even? or not? if not, you wasted your insult. dd
# ::tokens ["well", "..", "you", "told", "me", "what", "for", ",", "huh", "?", "LOL", "feel", "better", ",", "in", "some", "small", "way", "even", "?", "or", "not", "?", "if", "not", ",", "you", "wasted", "your", "insult", ".", "dd"]
# ::lemmas ["well", "..", "you", "tell", "i", "what", "for", ",", "huh", "?", "lol", "feel", "well", ",", "in", "some", "small", "way", "even", "?", "or", "not", "?", "if", "not", ",", "you", "waste", "your", "insult", ".", "dd"]
(c15-0 / multi-sentence
       :snt1 (c15-22 / tell-01
                     :ARG0 (c15-20 / you)
                     :ARG1 (c15-18 / thing)
                     :ARG2 (c15-16 / i)
                     :mod (c15-15 / well)
                     :ARG1-of (c15-13 / request-confirmation-91))
       :snt2 (c15-8 / feel-01
                    :ARG0 (c15-19 / you)
                    :ARG1 (c15-14 / good-02
                                  :ARG2-of (c15-7 / have-degree-91
                                                  :ARG1 c15-8
                                                  :ARG3 (c15-12 / more)))
                    :manner (c15-3 / way
                                   :mod (c15-5 / some)
                                   :mod (c15-10 / small)
                                   :mod (c15-11 / even))
                    :ARG2-of (c15-9 / laugh-01
                                    :ARG0 c15-16)
                    :manner (c15-21 / loud)
                    :mode expressive)
       :condition (c15-6 / have-polarity-91
                         :ARG1 c15-22
                         :ARG2 -)
       :snt3 (c15-4 / have-condition-91
                    :ARG1 (c15-1 / waste-01
                                 :ARG0 (c15-2 / you)
                                 :ARG1 (c15-17 / insult-01
                                               :ARG0 c15-2))
                    :ARG2 c15-6
                    :ARG1 c15-22
                    :ARG2 -))

# ::snt but you are a reporter shouldn't you be there?
# ::tokens ["but", "you", "are", "a", "reporter", "should", "n't", "you", "be", "there", "?"]
# ::lemmas ["but", "you", "be", "a", "reporter", "should", "not", "you", "be", "there", "?"]
(c16-5 / contrast-01
       :ARG2 (c16-4 / recommend-01
                    :ARG1 (c16-1 / be-located-at-91
                                 :ARG1 (c16-0 / you)
                                 :ARG2 (c16-7 / there))
                    :ARG1-of (c16-6 / cause-01
                                    :ARG0 (c16-3 / person
                                                 :ARG0-of (c16-2 / report-01)
                                                 :domain c16-0))
                    :polarity (c16-8 / amr-unknown)
                    :polarity -))

# ::snt So relieved you are okay. Stay safe, my prayers are with all.
# ::tokens ["So", "relieved", "you", "are", "okay", ".", "Stay", "safe", ",", "my", "prayers", "are", "with", "all", "."]
# ::lemmas ["so", "relieved", "you", "be", "okay", ".", "stay", "safe", ",", "my", "prayer", "be", "with", "all", "."]
(c17-2 / multi-sentence
       :snt1 (c17-7 / relieve-01
                    :ARG0 (c17-3 / okay-03
                                 :ARG1 (c17-0 / you))
                    :degree (c17-10 / so))
       :snt2 (c17-4 / stay-01
                    :ARG1 (c17-9 / you)
                    :ARG3 (c17-1 / safe-01
                                 :ARG1 c17-9)
                    :ARG1-of (c17-8 / cause-01
                                    :ARG0 (c17-6 / pray-01
                                                 :ARG0 (c17-5 / i)
                                                 :accompanier (c17-11 / all)))
                    :mode imperative))
