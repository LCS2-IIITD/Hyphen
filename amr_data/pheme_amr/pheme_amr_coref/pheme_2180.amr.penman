# ::snt only one worthy of standing with those brave people of Charlie. Why say otherwise?
# ::tokens ["only", "one", "worthy", "of", "standing", "with", "those", "brave", "people", "of", "Charlie", ".", "Why", "say", "otherwise", "?"]
# ::lemmas ["only", "one", "worthy", "of", "stand", "with", "those", "brave", "people", "of", "Charlie", ".", "why", "say", "otherwise", "?"]
(c1-2 / multi-sentence
      :snt1 (c1-8 / deserve-01
                  :ARG0 (c1-4 / one
                              :mod (c1-1 / only))
                  :ARG1 (c1-10 / stand-11
                               :ARG1 c1-4
                               :accompanier (c1-7 / person
                                                  :ARG0-of (c1-3 / brave-02)
                                                  :mod (c1-11 / that)
                                                  :poss (c1-12 / person
                                                               :name (c1-6 / name
                                                                           :op1 "Charlie")))))
      :snt2 (c1-13 / amr-unknown
                   :ARG0-of (c1-9 / cause-01
                                  :ARG1 (c1-5 / say-01
                                              :ARG1 (c1-0 / have-polarity-91
                                                          :ARG2 -)))))

# ::snt No. Only one.
# ::tokens ["No", ".", "Only", "one", "."]
# ::lemmas ["no", ".", "Only", "one", "."]
(c2-2 / multi-sentence
      :snt1 (c2-0 / no)
      :snt2 (c2-3 / one
                  :mod (c2-1 / only)))

# ::snt L'ECHO one sums it up.
# ::tokens ["L'ECHO", "one", "sums", "it", "up", "."]
# ::lemmas ["l'echo", "one", "sum", "it", "up", "."]
(c3-0 / sum-up-01
      :ARG0 (c3-2 / one
                  :name (c3-1 / name
                              :op1 "L'ECHO"))
      :ARG1 (c3-3 / it))

# ::snt Wow!
# ::tokens ["Wow", "!"]
# ::lemmas ["wow", "!"]
(c4-0 / wow-01
      :mode expressive)

# ::snt To bad the people filming the killing of the French cop didn't have a rifle to take them out with.
# ::tokens ["To", "bad", "the", "people", "filming", "the", "killing", "of", "the", "French", "cop", "did", "n't", "have", "a", "rifle", "to", "take", "them", "out", "with", "."]
# ::lemmas ["to", "bad", "the", "people", "film", "the", "killing", "of", "the", "French", "cop", "do", "not", "have", "a", "rifle", "to", "take", "they", "out", "with", "."]
(c5-2 / bad-07
      :ARG1 (c5-0 / have-03
                  :ARG0 (c5-4 / person
                              :ARG0-of (c5-1 / film-01
                                             :ARG1 (c5-9 / kill-01
                                                         :ARG0 c5-4
                                                         :ARG1 (c5-6 / cop
                                                                     :mod (c5-5 / country
                                                                                :name (c5-3 / name
                                                                                            :op1 "France"))))))
                  :ARG1 (c5-7 / rifle
                              :instrument-of (c5-8 / take-out-11
                                                   :ARG0 c5-4
                                                   :ARG1 c5-4))
                  :polarity -))

# ::snt And thank you all: covers of tomorrow's newspapers via
# ::tokens ["And", "thank", "you", "all", ":", "covers", "of", "tomorrow", "'s", "newspapers", "via"]
# ::lemmas ["and", "thank", "you", "all", ":", "cover", "of", "tomorrow", "'s", "newspaper", "via"]
(c6-7 / and
      :op2 (c6-6 / thank-01
                 :ARG1 (c6-0 / you
                             :mod (c6-1 / all))
                 :ARG2 (c6-4 / cover-03
                             :ARG1 (c6-2 / newspaper
                                         :time (c6-5 / tomorrow))
                             :medium (c6-3 / via))))

# ::snt Epic : covers of tomorrow's newspapers
# ::tokens ["Epic", ":", "covers", "of", "tomorrow", "'s", "newspapers"]
# ::lemmas ["epic", ":", "cover", "of", "tomorrow", "'s", "newspaper"]
(c7-1 / epic
      :domain (c7-3 / cover-02
                    :ARG1 (c7-0 / newspaper
                                :time (c7-2 / tomorrow))))

# ::snt covers for this but not other issues he promoted racism using the media and media is celebrating that
# ::tokens ["covers", "for", "this", "but", "not", "other", "issues", "he", "promoted", "racism", "using", "the", "media", "and", "media", "is", "celebrating", "that"]
# ::lemmas ["cover", "for", "this", "but", "not", "other", "issue", "he", "promote", "racism", "use", "the", "medium", "and", "medium", "be", "celebrate", "that"]
(c8-8 / contrast-01
      :ARG1 (c8-1 / favor-01
                  :ARG0 (c8-0 / he)
                  :ARG1 (c8-11 / this))
      :ARG2 (c8-3 / benefit-01
                  :ARG0 (c8-5 / issue-02
                              :mod (c8-4 / other)
                              :ARG1-of (c8-6 / promote-02
                                             :ARG0 c8-0))
                  :ARG1 c8-0
                  :polarity -)
      :ARG1-of (c8-7 / cause-01
                     :ARG0 (c8-10 / celebrate-01
                                  :ARG0 (c8-12 / and
                                               :op1 c8-0
                                               :op2 (c8-2 / media)
                                               :ARG1 (c8-9 / racism)))))

# ::snt : And thank you all: covers of tomorrow's newspapers via
# ::tokens [":", "And", "thank", "you", "all", ":", "covers", "of", "tomorrow", "'s", "newspapers", "via"]
# ::lemmas [":", "and", "thank", "you", "all", ":", "cover", "of", "tomorrow", "'s", "newspaper", "via"]
(c9-7 / and
      :op2 (c9-6 / thank-01
                 :ARG1 (c9-0 / you
                             :mod (c9-1 / all))
                 :ARG2 (c9-4 / cover-03
                             :ARG1 (c9-2 / newspaper
                                         :time (c9-5 / tomorrow))
                             :medium (c9-3 / via))))

# ::snt : covers of tomorrow's newspapers
# ::tokens [":", "covers", "of", "tomorrow", "'s", "newspapers"]
# ::lemmas [":", "cover", "of", "tomorrow", "'s", "newspaper"]
(c10-2 / cover-03
       :ARG1 (c10-0 / newspaper
                    :time (c10-1 / tomorrow)))

# ::snt : covers of tomorrow's newspapers
# ::tokens [":", "covers", "of", "tomorrow", "'s", "newspapers"]
# ::lemmas [":", "cover", "of", "tomorrow", "'s", "newspaper"]
(c11-2 / cover-03
       :ARG1 (c11-0 / newspaper
                    :time (c11-1 / tomorrow)))

# ::snt how it is racist? I'm confused. bigotry possibly but generally speaking they make fun of everyone
# ::tokens ["how", "it", "is", "racist", "?", "I", "'m", "confused", ".", "bigotry", "possibly", "but", "generally", "speaking", "they", "make", "fun", "of", "everyone"]
# ::lemmas ["how", "it", "be", "racist", "?", "i", "be", "confused", ".", "bigotry", "possibly", "but", "generally", "speak", "they", "make", "fun", "of", "everyone"]
(c12-0 / multi-sentence
       :snt1 (c12-5 / racist
                    :domain (c12-3 / it)
                    :manner (c12-13 / amr-unknown))
       :snt2 (c12-6 / confuse-01
                    :ARG1 (c12-7 / i))
       :snt3 (c12-8 / contrast-01
                    :ARG1 (c12-4 / possible-01
                                 :ARG1 (c12-1 / bigotry))
                    :ARG2 (c12-9 / make-fun-04
                                 :ARG0 (c12-12 / they)
                                 :ARG1 (c12-2 / everyone)
                                 :ARG1-of (c12-10 / speak-01
                                                  :ARG1-of (c12-11 / general-02)))))

# ::snt : covers of tomorrow's newspapers
# ::tokens [":", "covers", "of", "tomorrow", "'s", "newspapers"]
# ::lemmas [":", "cover", "of", "tomorrow", "'s", "newspaper"]
(c13-2 / cover-03
       :ARG1 (c13-0 / newspaper
                    :time (c13-1 / tomorrow)))

# ::snt they need to put a cartoon on there
# ::tokens ["they", "need", "to", "put", "a", "cartoon", "on", "there"]
# ::lemmas ["they", "need", "to", "put", "a", "cartoon", "on", "there"]
(c14-0 / obligate-01
       :ARG1 (c14-4 / they)
       :ARG2 (c14-1 / put-01
                    :ARG0 c14-4
                    :ARG1 (c14-2 / cartoon)
                    :ARG2 (c14-3 / there)))

# ::snt ?
# ::tokens ["?"]
# ::lemmas ["?"]
(c15-0 / request-confirmation-91)

# ::snt : covers of tomorrow's newspapers
# ::tokens [":", "covers", "of", "tomorrow", "'s", "newspapers"]
# ::lemmas [":", "cover", "of", "tomorrow", "'s", "newspaper"]
(c16-2 / cover-03
       :ARG1 (c16-0 / newspaper
                    :time (c16-1 / tomorrow)))

# ::snt Every major newspaper in the world should show true solidarity and put the Mohammed cartoon on there front page
# ::tokens ["Every", "major", "newspaper", "in", "the", "world", "should", "show", "true", "solidarity", "and", "put", "the", "Mohammed", "cartoon", "on", "there", "front", "page"]
# ::lemmas ["every", "major", "newspaper", "in", "the", "world", "should", "show", "true", "solidarity", "and", "put", "the", "Mohammed", "cartoon", "on", "there", "front", "page"]
(c17-9 / recommend-01
       :ARG1 (c17-14 / and
                     :op1 (c17-11 / show-01
                                  :ARG0 (c17-6 / newspaper
                                               :ARG1-of (c17-2 / major-02)
                                               :mod (c17-4 / every)
                                               :location (c17-0 / world))
                                  :ARG1 (c17-5 / solidarity
                                               :ARG1-of (c17-12 / true-01)))
                     :op2 (c17-8 / put-01
                                 :ARG0 c17-6
                                 :ARG1 (c17-10 / cartoon
                                               :topic (c17-13 / person
                                                              :name (c17-7 / name
                                                                           :op1 "Mohammed")))
                                 :ARG2 (c17-3 / page
                                              :mod (c17-1 / front)
                                              :poss c17-6))))

# ::snt If you have to ask that question your lost French colonialism was always tied to Anti-Islamic propaganda that ended in violence
# ::tokens ["If", "you", "have", "to", "ask", "that", "question", "your", "lost", "French", "colonialism", "was", "always", "tied", "to", "Anti", "-", "Islamic", "propaganda", "that", "ended", "in", "violence"]
# ::lemmas ["if", "you", "have", "to", "ask", "that", "question", "your", "lose", "French", "colonialism", "be", "always", "tie", "to", "Anti", "-", "Islamic", "propaganda", "that", "end", "in", "violence"]
(c18-15 / tie-01
        :ARG1 (c18-11 / colonialism
                      :mod (c18-10 / country
                                   :name (c18-7 / name
                                                :op1 "France"))
                      :ARG1-of (c18-1 / lose-02
                                      :ARG0 (c18-0 / you)))
        :ARG2 (c18-9 / propaganda
                     :ARG0-of (c18-3 / oppose-01
                                     :ARG1 (c18-12 / religious-group
                                                   :name (c18-8 / name
                                                                :op1 "Islam")))
                     :ARG1-of (c18-4 / end-01
                                     :ARG2 (c18-13 / violence)))
        :time (c18-16 / always)
        :condition (c18-2 / obligate-01
                          :ARG1 c18-0
                          :ARG2 (c18-6 / ask-01
                                       :ARG0 c18-0
                                       :ARG1 (c18-5 / question
                                                    :mod (c18-14 / that)))))

# ::snt : covers of tomorrow's newspapers
# ::tokens [":", "covers", "of", "tomorrow", "'s", "newspapers"]
# ::lemmas [":", "cover", "of", "tomorrow", "'s", "newspaper"]
(c19-2 / cover-03
       :ARG1 (c19-0 / newspaper
                    :time (c19-1 / tomorrow)))

# ::snt Critique of the Socialists defending Islam by ex-Muslim poet from
# ::tokens ["Critique", "of", "the", "Socialists", "defending", "Islam", "by", "ex", "-", "Muslim", "poet", "from"]
# ::lemmas ["Critique", "of", "the", "Socialists", "defend", "Islam", "by", "ex", "-", "Muslim", "poet", "from"]
(c21-5 / criticize-01
       :ARG0 (c21-3 / poet
                    :source (c21-4 / religious-group
                                   :name (c21-1 / name
                                                :op1 "Muslim")
                                   :time (c21-0 / ex)))
       :ARG1 (c21-7 / political-party
                    :name (c21-2 / name
                                 :op1 "Socialist"))
       :ARG2 (c21-6 / defend-01
                    :ARG0 c21-3
                    :ARG1 c21-4))

# ::snt Islam is worse than Nazism by ex-Muslim poet from ://
# ::tokens ["Islam", "is", "worse", "than", "Nazism", "by", "ex", "-", "Muslim", "poet", "from", ":", "//"]
# ::lemmas ["Islam", "be", "bad", "than", "Nazism", "by", "ex", "-", "Muslim", "poet", "from", ":", "//"]
(c22-0 / have-degree-91
       :ARG1 (c22-8 / religious-group
                    :name (c22-5 / name
                                 :op1 "Islam"))
       :ARG2 (c22-2 / bad-07
                    :ARG1 c22-8)
       :ARG3 (c22-1 / more)
       :ARG4 (c22-4 / religious-group
                    :name (c22-6 / name
                                 :op1 "Nazism"))
       :source (c22-7 / poet
                      :mod c22-8
                      :time (c22-3 / ex)))

# ::snt : Covers of tomorrow's newspapers
# ::tokens [":", "Covers", "of", "tomorrow", "'s", "newspapers"]
# ::lemmas [":", "cover", "of", "tomorrow", "'s", "newspaper"]
(c23-3 / be-located-at-91
       :ARG1 (c23-2 / coal)
       :ARG2 (c23-0 / newspaper
                    :time (c23-1 / tomorrow)))

# ::snt covers of tomorrows newspapers (via )
# ::tokens ["covers", "of", "tomorrows", "newspapers", "(", "via", ")"]
# ::lemmas ["cover", "of", "tomorrow", "newspaper", "(", "via", ")"]
(c24-0 / journey-01
       :ARG0 (c24-1 / newspaper
                    :time (c24-2 / tomorrow)))

# ::snt hopefully not
# ::tokens ["hopefully", "not"]
# ::lemmas ["hopefully", "not"]
(c25-0 / hope-01
       :ARG1 (c25-1 / event
                    :polarity -))
