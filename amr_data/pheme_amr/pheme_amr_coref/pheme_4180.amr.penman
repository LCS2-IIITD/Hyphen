# ::snt I bet it wasn't News Ltd, Nine,Seven or Ten who accepted the truth?
# ::tokens ["I", "bet", "it", "was", "n't", "News", "Ltd", ",", "Nine", ",", "Seven", "or", "Ten", "who", "accepted", "the", "truth", "?"]
# ::lemmas ["i", "bet", "it", "be", "not", "News", "Ltd", ",", "Nine", ",", "Seven", "or", "ten", "who", "accept", "the", "truth", "?"]
(c1-0 / bet-01
      :ARG0 (c1-3 / i)
      :ARG2 (c1-11 / accept-01
                   :ARG0 (c1-1 / or
                               :op1 (c1-8 / company
                                          :name (c1-4 / name
                                                      :op1 "News"
                                                      :op2 "Ltd"))
                               :op2 (c1-7 / company
                                          :name (c1-5 / name
                                                      :op1 "Nine"
                                                      :op2 "Seven"))
                               :op3 (c1-9 / company
                                          :name (c1-6 / name
                                                      :op1 "Ten")))
                   :ARG1 (c1-10 / truth)
                   :polarity -)
      :polarity (c1-2 / amr-unknown))

# ::snt DEPICTION! In Canada our gov't quick reference "terrorism"&amp; used to validate going to war
# ::tokens ["DEPICTION", "!", "In", "Canada", "our", "gov't", "quick", "reference", "\"", "terrorism\"&amp", ";", "used", "to", "validate", "going", "to", "war"]
# ::lemmas ["DEPICTION", "!", "in", "Canada", "our", "gov't", "quick", "reference", "\"", "terrorism\"&amp", ";", "use", "to", "validate", "go", "to", "war"]
(c2-1 / multi-sentence
      :snt1 (c2-10 / depend-01)
      :snt2 (c2-9 / reference-04
                  :ARG0 (c2-11 / government-organization
                               :ARG0-of (c2-12 / govern-01)
                               :poss (c2-0 / we))
                  :ARG1 (c2-15 / and
                               :op1 (c2-14 / terrorism)
                               :op2 (c2-4 / amp))
                  :ARG1-of (c2-3 / quick-02)
                  :location (c2-13 / country
                                   :name (c2-6 / name
                                               :op1 "Canada"))
                  :purpose (c2-7 / validate-01
                                 :ARG0 c2-11
                                 :ARG1 (c2-8 / go-02
                                             :ARG4 (c2-5 / war))
                                 :time (c2-2 / use-03))))

# ::snt Finally! We had to get there eventually.
# ::tokens ["Finally", "!", "We", "had", "to", "get", "there", "eventually", "."]
# ::lemmas ["finally", "!", "we", "have", "to", "get", "there", "eventually", "."]
(c3-2 / multi-sentence
      :snt1 (c3-1 / final
                  :mode expressive)
      :snt2 (c3-3 / obligate-01
                  :ARG2 (c3-5 / get-05
                              :ARG1 (c3-0 / we)
                              :ARG2 (c3-6 / there)
                              :time (c3-4 / eventual))))

# ::snt Thank Christ
# ::tokens ["Thank", "Christ"]
# ::lemmas ["thank", "Christ"]
(c4-2 / thank-01
      :ARG1 (c4-1 / person
                  :name (c4-0 / name
                              :op1 "Christ")))

# ::snt Hostage taking is always a crime, why do the lazy pollies and media make it anything more.
# ::tokens ["Hostage", "taking", "is", "always", "a", "crime", ",", "why", "do", "the", "lazy", "pollies", "and", "media", "make", "it", "anything", "more", "."]
# ::lemmas ["hostage", "taking", "be", "always", "a", "crime", ",", "why", "do", "the", "lazy", "pollie", "and", "medium", "make", "it", "anything", "more", "."]
(c5-14 / and
       :op1 (c5-9 / crime-02
                  :ARG1 (c5-12 / take-01
                               :ARG1 (c5-0 / host-01))
                  :time (c5-5 / always))
       :op2 (c5-2 / make-02
                  :ARG0 (c5-6 / and
                              :op1 (c5-7 / person
                                         :mod (c5-1 / lazy)
                                         :ARG0-of (c5-13 / poll-01))
                              :op2 (c5-8 / media))
                  :ARG1 (c5-11 / anything
                               :mod (c5-3 / more))
                  :ARG2 c5-12
                  :ARG1-of (c5-10 / cause-01
                                  :ARG0 (c5-4 / amr-unknown))))

# ::snt Thanks
# ::tokens ["Thanks"]
# ::lemmas ["thank"]
(c6-1 / thank-01
      :ARG0 (c6-2 / i)
      :ARG1 (c6-0 / you))

# ::snt I think it was
# ::tokens ["I", "think", "it", "was"]
# ::lemmas ["i", "think", "it", "be"]
(c7-0 / think-01
      :ARG0 (c7-2 / i)
      :ARG1 (c7-1 / it))

# ::snt ABC were stating this when I left the house at :30 this morning.
# ::tokens ["ABC", "were", "stating", "this", "when", "I", "left", "the", "house", "at", ":", "30", "this", "morning", "."]
# ::lemmas ["ABC", "be", "state", "this", "when", "i", "leave", "the", "house", "at", ":", "30", "this", "morning", "."]
(c8-8 / state-01
      :ARG0 (c8-5 / publication
                  :name (c8-4 / name
                              :op1 "ABC"))
      :ARG1 (c8-9 / this)
      :time (c8-1 / leave-11
                  :ARG0 (c8-3 / i)
                  :ARG1 (c8-0 / house)
                  :time (c8-6 / date-entity
                              :dayperiod (c8-2 / morning)
                              :mod (c8-7 / today)
                              :time ":30")))

# ::snt Crime yesNot enough info to R/O terrorism as driverWhat is known suggests terrorism, mental illness or ?
# ::tokens ["Crime", "yesNot", "enough", "info", "to", "R", "/", "O", "terrorism", "as", "driverWhat", "is", "known", "suggests", "terrorism", ",", "mental", "illness", "or", "?"]
# ::lemmas ["crime", "yesNot", "enough", "info", "to", "r", "/", "o", "terrorism", "as", "driverwhat", "be", "know", "suggest", "terrorism", ",", "mental", "illness", "or", "?"]
(c9-15 / and
       :op1 (c9-1 / yes)
       :op2 (c9-6 / information
                  :ARG1-of (c9-0 / have-quant-91
                                 :ARG3 (c9-4 / enough)
                                 :ARG6 (c9-13 / terrorism
                                              :prep-as (c9-8 / person
                                                             :ARG0-of (c9-9 / drive-01)))
                                 :polarity -))
       :op3 (c9-12 / suggest-01
                   :ARG0 (c9-7 / know-01)
                   :ARG1 (c9-5 / amr-choice
                               :op1 (c9-11 / terrorism)
                               :op2 (c9-10 / ill-01
                                           :ARG1 (c9-14 / person
                                                        :ARG0-of (c9-2 / have-rel-role-91
                                                                       :ARG2 (c9-3 / mental)))))))

# ::snt only taken about or so hours to do. Still not good enough MSM
# ::tokens ["only", "taken", "about", "or", "so", "hours", "to", "do", ".", "Still", "not", "good", "enough", "MSM"]
# ::lemmas ["only", "take", "about", "or", "so", "hours", "to", "do", ".", "still", "not", "good", "enough", "MSM"]
(c10-2 / multi-sentence
       :snt1 (c10-11 / take-10
                     :ARG1 (c10-12 / about
                                   :op1 (c10-9 / temporal-quantity
                                               :unit (c10-0 / hour)
                                               :quant 1))
                     :ARG2 (c10-7 / do-02)
                     :mod (c10-3 / only))
       :snt2 (c10-1 / have-degree-91
                    :ARG1 (c10-6 / publication
                                 :name (c10-5 / name
                                              :op1 "MSM"))
                    :ARG2 (c10-8 / good-02
                                 :ARG1 c10-6)
                    :ARG3 (c10-4 / enough)
                    :mod (c10-10 / still)
                    :polarity -))

# ::snt Guy on just caught it as flicked over from the farce of
# ::tokens ["Guy", "on", "just", "caught", "it", "as", "flicked", "over", "from", "the", "farce", "of"]
# ::lemmas ["Guy", "on", "just", "catch", "it", "as", "flick", "over", "from", "the", "farce", "of"]
(c11-4 / catch-02
       :ARG0 (c11-5 / guy)
       :ARG1 (c11-2 / it)
       :time (c11-1 / flicker-01
                    :source (c11-3 / farce))
       :mod (c11-0 / just))

# ::snt Reminds me of the "Howard/Bush" days!
# ::tokens ["Reminds", "me", "of", "the", "\"", "Howard", "/", "Bush", "\"", "days", "!"]
# ::lemmas ["remind", "i", "of", "the", "\"", "Howard", "/", "Bush", "\"", "days", "!"]
(c12-5 / remind-01
       :ARG1 (c12-4 / day
                    :time-of (c12-6 / slash
                                    :op1 (c12-3 / person
                                                :name (c12-1 / name
                                                             :op1 "Howard"))
                                    :op2 (c12-7 / person
                                                :name (c12-2 / name
                                                             :op1 "Bush"))))
       :ARG2 (c12-0 / i))

# ::snt Republican template. Uses fear, a stage to build popularity.
# ::tokens ["Republican", "template", ".", "Uses", "fear", ",", "a", "stage", "to", "build", "popularity", "."]
# ::lemmas ["Republican", "template", ".", "use", "fear", ",", "a", "stage", "to", "build", "popularity", "."]
(c13-1 / multi-sentence
       :snt1 (c13-7 / template
                    :mod (c13-5 / political-party
                                :name (c13-4 / name
                                             :op1 "Republican")))
       :snt2 (c13-2 / use-01
                    :ARG1 (c13-0 / fear-01
                                 :mod (c13-6 / stage))
                    :ARG2 (c13-3 / build-02
                                 :ARG1 (c13-8 / popularity))))

# ::snt Whoever it was, he/she deserves a medal. Only sane journalist in the country. So, who was it?
# ::tokens ["Whoever", "it", "was", ",", "he", "/", "she", "deserves", "a", "medal", ".", "Only", "sane", "journalist", "in", "the", "country", ".", "So", ",", "who", "was", "it", "?"]
# ::lemmas ["whoever", "it", "be", ",", "he", "/", "she", "deserve", "a", "medal", ".", "only", "sane", "journalist", "in", "the", "country", ".", "so", ",", "who", "be", "it", "?"]
(c14-3 / multi-sentence
       :snt1 (c14-8 / deserve-01
                    :ARG0 (c14-12 / slash
                                  :op1 (c14-0 / he)
                                  :op2 (c14-5 / she))
                    :ARG1 (c14-7 / medal)
                    :ARG1-of (c14-9 / regardless-91
                                    :ARG2 (c14-6 / it)))
       :snt2 (c14-1 / journalist
                    :mod (c14-2 / sane)
                    :mod (c14-4 / only)
                    :location (c14-10 / country))
       :snt3 (c14-13 / amr-unknown
                     :domain (c14-11 / it)))

# ::snt Thank you
# ::tokens ["Thank", "you"]
# ::lemmas ["thank", "you"]
(c15-1 / thank-01
       :ARG0 (c15-2 / i)
       :ARG1 (c15-0 / you))

# ::snt Don't know how they can make such a claim. Too little info.
# ::tokens ["Do", "n't", "know", "how", "they", "can", "make", "such", "a", "claim", ".", "Too", "little", "info", "."]
# ::lemmas ["do", "not", "know", "how", "they", "can", "make", "such", "a", "claim", ".", "too", "little", "info", "."]
(c16-2 / multi-sentence
       :snt1 (c16-4 / know-01
                    :ARG0 (c16-3 / i)
                    :ARG1 (c16-11 / thing
                                  :manner-of (c16-6 / possible-01
                                                    :ARG1 (c16-7 / claim-01
                                                                 :ARG0 (c16-9 / they)
                                                                 :mod (c16-10 / such))))
                    :polarity -)
       :snt2 (c16-8 / information
                    :ARG1-of (c16-0 / have-quant-91
                                    :ARG2 (c16-1 / little)
                                    :ARG3 (c16-5 / too))))
