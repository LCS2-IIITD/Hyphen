# ::snt The police chief is a star general in projection, imagination and deflection...took a week to hatch this theory
# ::tokens ["The", "police", "chief", "is", "a", "star", "general", "in", "projection", ",", "imagination", "and", "deflection", "...", "took", "a", "week", "to", "hatch", "this", "theory"]
# ::lemmas ["the", "police", "chief", "be", "a", "star", "general", "in", "projection", ",", "imagination", "and", "deflection", "...", "take", "a", "week", "to", "hatch", "this", "theory"]
(c1-3 / multi-sentence
      :snt1 (c1-11 / general
                   :domain (c1-8 / person
                                 :ARG0-of (c1-0 / have-org-role-91
                                                :ARG1 (c1-15 / police)
                                                :ARG2 (c1-10 / chief)))
                   :topic (c1-16 / and
                                 :op1 (c1-4 / project-01)
                                 :op2 (c1-6 / imagine-01)
                                 :op3 (c1-9 / deflect-01))
                   :mod (c1-13 / star))
      :snt2 (c1-14 / take-10
                   :ARG0 (c1-2 / hatch-01
                               :ARG1 (c1-12 / theory
                                            :mod (c1-7 / this)))
                   :ARG1 (c1-5 / temporal-quantity
                               :unit (c1-1 / week)
                               :quant 1)))

# ::snt Preach!
# ::tokens ["Preach", "!"]
# ::lemmas ["Preach", "!"]
(c2-1 / preach-01
      :ARG0 (c2-0 / you)
      :mode imperative)

# ::snt Didn't the store manager say on Saturday that he wasn't involved?
# ::tokens ["Did", "n't", "the", "store", "manager", "say", "on", "Saturday", "that", "he", "was", "n't", "involved", "?"]
# ::lemmas ["do", "not", "the", "store", "manager", "say", "on", "Saturday", "that", "he", "be", "not", "involve", "?"]
(c3-7 / say-01
      :ARG0 (c3-4 / person
                  :ARG0-of (c3-1 / manage-01
                                 :ARG1 (c3-2 / store)))
      :ARG1 (c3-3 / involve-01
                  :ARG1 c3-4
                  :polarity -)
      :time (c3-5 / date-entity
                  :weekday (c3-0 / saturday))
      :ARG1-of (c3-6 / request-confirmation-91)
      :polarity -)

# ::snt More importantly. Does he really think we don't all watch enough crime dramas on TV, to see right through this?
# ::tokens ["More", "importantly", ".", "Does", "he", "really", "think", "we", "do", "n't", "all", "watch", "enough", "crime", "dramas", "on", "TV", ",", "to", "see", "right", "through", "this", "?"]
# ::lemmas ["more", "importantly", ".", "do", "he", "really", "think", "we", "do", "not", "all", "watch", "enough", "crime", "drama", "on", "tv", ",", "to", "see", "right", "through", "this", "?"]
(c4-0 / multi-sentence
      :snt1 (c4-15 / important-01
                   :ARG2-of (c4-8 / have-degree-91
                                  :ARG1 (c4-10 / event)
                                  :ARG3 (c4-11 / more)))
      :snt2 (c4-20 / think-01
                   :ARG0 (c4-7 / he)
                   :ARG1 (c4-13 / watch-01
                                :ARG0 (c4-1 / we
                                            :mod (c4-6 / all))
                                :ARG1 (c4-4 / drama
                                            :topic (c4-18 / crime-02)
                                            :ARG1-of (c4-3 / have-quant-91
                                                           :ARG3 (c4-9 / enough)
                                                           :ARG6 (c4-5 / see-01
                                                                       :ARG0 c4-1
                                                                       :ARG1 (c4-19 / through
                                                                                    :op1 (c4-16 / this)
                                                                                    :mod (c4-12 / right)))))
                                :ARG1-of (c4-2 / real-04)
                                :polarity (c4-14 / amr-unknown)
                                :medium (c4-17 / television)
                                :polarity -)))

# ::snt Well... we know he isn't a rocket scientist... Real Talk... take that back to the drawing board!
# ::tokens ["Well", "...", "we", "know", "he", "is", "n't", "a", "rocket", "scientist", "...", "Real", "Talk", "...", "take", "that", "back", "to", "the", "drawing", "board", "!"]
# ::lemmas ["well", "...", "we", "know", "he", "be", "not", "a", "rocket", "scientist", "...", "real", "talk", "...", "take", "that", "back", "to", "the", "drawing", "board", "!"]
(c5-3 / multi-sentence
      :snt1 (c5-15 / know-01
                   :ARG0 (c5-1 / we)
                   :ARG1 (c5-13 / scientist
                                :mod (c5-9 / rocket)
                                :domain (c5-0 / he)
                                :polarity -))
      :snt2 (c5-5 / say-01
                  :ARG1 (c5-16 / and
                               :op1 (c5-14 / thing
                                           :ARG1-of (c5-7 / real-04)
                                           :ARG1-of (c5-12 / talk-01))
                               :op2 (c5-8 / take-01
                                          :ARG0 (c5-2 / you)
                                          :ARG1 (c5-6 / that)
                                          :ARG3 (c5-4 / board
                                                      :ARG2-of (c5-10 / draw-02))
                                          :direction (c5-11 / back)
                                          :mode imperative))
                  :ARG2 c5-2))

# ::snt Give it up! The video &amp; photos PROVE it, learn to accept that he wasn't a "good boy"! You'll find any excuse to cause trouble
# ::tokens ["Give", "it", "up", "!", "The", "video", "&", "amp", ";", "photos", "PROVE", "it", ",", "learn", "to", "accept", "that", "he", "was", "n't", "a", "\"", "good", "boy", "\"", "!", "You", "'ll", "find", "any", "excuse", "to", "cause", "trouble"]
# ::lemmas ["give", "it", "up", "!", "the", "video", "&", "amp", ";", "photo", "prove", "it", ",", "learn", "to", "accept", "that", "he", "be", "not", "a", "\"", "good", "boy", "\"", "!", "you", "'ll", "find", "any", "excuse", "to", "cause", "trouble"]
(c6-0 / multi-sentence
      :snt1 (c6-14 / give-up-07
                   :ARG0 (c6-18 / you)
                   :ARG1 (c6-16 / it)
                   :mode imperative)
      :snt2 (c6-3 / prove-01
                  :ARG0 (c6-6 / and
                              :op1 (c6-2 / video)
                              :op2 (c6-5 / photo))
                  :ARG1 (c6-17 / it))
      :snt3 (c6-8 / learn-01
                  :ARG0 (c6-19 / you)
                  :ARG1 (c6-15 / accept-01
                               :ARG0 c6-19
                               :ARG1 (c6-10 / boy
                                            :ARG1-of (c6-4 / good-02)
                                            :domain (c6-7 / he)
                                            :polarity -))
                  :mode imperative)
      :snt4 (c6-9 / find-01
                  :ARG0 (c6-1 / you)
                  :ARG1 (c6-20 / thing
                               :ARG2-of (c6-11 / excuse-02
                                               :ARG1 (c6-13 / make-trouble-06
                                                            :ARG0 c6-1))
                               :mod (c6-12 / any))))

# ::snt Preach. . It was so Fake!!
# ::tokens ["Preach", ".", ".", "It", "was", "so", "Fake", "!", "!"]
# ::lemmas ["Preach", ".", ".", "it", "be", "so", "fake", "!", "!"]
(c7-5 / and
      :op1 (c7-3 / preach-01
                 :ARG0 (c7-0 / you)
                 :mode imperative)
      :op2 (c7-1 / fake-02
                 :ARG1 (c7-2 / it)
                 :degree (c7-4 / so)))

# ::snt exactly... And now going into the second.
# ::tokens ["exactly", "...", "And", "now", "going", "into", "the", "second", "."]
# ::lemmas ["exactly", "...", "and", "now", "go", "into", "the", "second", "."]
(c8-4 / and
      :op1 (c8-0 / exact)
      :op2 (c8-2 / go-06
                 :ARG2 (c8-3 / second)
                 :time (c8-1 / now)))

# ::snt I wonder how much they paid this black officer to take this heat?? If u look him up he is a black man.... Smh
# ::tokens ["I", "wonder", "how", "much", "they", "paid", "this", "black", "officer", "to", "take", "this", "heat", "?", "?", "If", "u", "look", "him", "up", "he", "is", "a", "black", "man", "....", "Smh"]
# ::lemmas ["i", "wonder", "how", "much", "they", "pay", "this", "black", "officer", "to", "take", "this", "heat", "?", "?", "if", "u", "look", "he", "up", "he", "be", "a", "black", "man", "....", "smh"]
(c9-4 / multi-sentence
      :snt1 (c9-1 / wonder-01
                  :ARG0 (c9-9 / i)
                  :ARG1 (c9-11 / monetary-quantity
                               :ARG1-of (c9-12 / pay-01
                                               :ARG0 (c9-16 / they)
                                               :ARG2 (c9-7 / officer
                                                           :ARG1-of (c9-6 / black-05)
                                                           :mod (c9-14 / this))
                                               :ARG3 (c9-10 / take-01
                                                            :ARG0 c9-7
                                                            :ARG1 (c9-0 / heat-01
                                                                        :mod (c9-8 / this))))))
      :snt2 (c9-3 / man
                  :ARG1-of (c9-13 / black-05)
                  :domain (c9-17 / he)
                  :condition (c9-5 / look-up-05
                                   :ARG0 (c9-2 / you)
                                   :ARG1 c9-17)
                  :mod (c9-15 / smh
                              :mode expressive)))

# ::snt Still pissin and moanin Jamal?
# ::tokens ["Still", "pissin", "and", "moanin", "Jamal", "?"]
# ::lemmas ["still", "pissin", "and", "moanin", "Jamal", "?"]
(c10-6 / say-01
       :ARG0 (c10-3 / i)
       :ARG1 (c10-8 / and
                    :op1 (c10-5 / piss-01
                                :ARG0 (c10-7 / person
                                             :name (c10-4 / name
                                                          :op1 "Jamal")))
                    :op2 (c10-0 / moan-01
                                :ARG0 c10-7)
                    :mod (c10-1 / still)
                    :polarity (c10-2 / amr-unknown))
       :ARG2 c10-7)

# ::snt they think we will be ok with what happened if they say a black man did it. Smh
# ::tokens ["they", "think", "we", "will", "be", "ok", "with", "what", "happened", "if", "they", "say", "a", "black", "man", "did", "it", ".", "Smh"]
# ::lemmas ["they", "think", "we", "will", "be", "ok", "with", "what", "happen", "if", "they", "say", "a", "black", "man", "do", "it", ".", "smh"]
(c11-1 / multi-sentence
       :snt1 (c11-12 / think-01
                     :ARG0 (c11-10 / they)
                     :ARG1 (c11-3 / okay-01
                                  :ARG0 (c11-0 / we)
                                  :ARG1 (c11-4 / event)
                                  :condition (c11-11 / say-01
                                                     :ARG0 (c11-7 / they)
                                                     :ARG1 (c11-9 / do-02
                                                                  :ARG0 (c11-8 / man
                                                                               :ARG1-of (c11-2 / black-05))
                                                                  :ARG1 (c11-6 / it)))))
       :snt2 (c11-5 / smh
                    :mode expressive))

# ::snt EVEN if MB stole the cigars, does that justify KILLING HIM? Since when is taking cigars with no weapon robbery? Shoplifting..
# ::tokens ["EVEN", "if", "MB", "stole", "the", "cigars", ",", "does", "that", "justify", "KILLING", "HIM", "?", "Since", "when", "is", "taking", "cigars", "with", "no", "weapon", "robbery", "?", "Shoplifting", ".."]
# ::lemmas ["even", "if", "mb", "steal", "the", "cigar", ",", "do", "that", "justify", "KILLING", "HIM", "?", "since", "when", "be", "take", "cigar", "with", "no", "weapon", "robbery", "?", "shoplifting", ".."]
(c12-3 / multi-sentence
       :snt1 (c12-0 / justify-01
                    :ARG0 (c12-10 / steal-01
                                  :ARG0 (c12-6 / person
                                               :name (c12-5 / name
                                                            :op1 "MB"))
                                  :ARG1 (c12-8 / cigar))
                    :ARG1 (c12-12 / kill-01
                                  :ARG1 c12-6)
                    :condition c12-10)
       :snt2 (c12-11 / take-01
                     :ARG1 (c12-7 / cigar)
                     :manner (c12-9 / rob-01
                                    :ARG1 (c12-1 / weapon)
                                    :polarity -)
                     :time (c12-4 / since
                                  :op1 (c12-13 / amr-unknown)))
       :snt3 (c12-2 / shoplift-01))

# ::snt Do you know how many kids, Black and white, would be killed if that level of thievery justified a "shoot to kill" approach?
# ::tokens ["Do", "you", "know", "how", "many", "kids", ",", "Black", "and", "white", ",", "would", "be", "killed", "if", "that", "level", "of", "thievery", "justified", "a", "\"", "shoot", "to", "kill", "\"", "approach", "?"]
# ::lemmas ["do", "you", "know", "how", "many", "kid", ",", "black", "and", "white", ",", "would", "be", "kill", "if", "that", "level", "of", "thievery", "justify", "a", "\"", "shoot", "to", "kill", "\"", "approach", "?"]
(c13-12 / know-01
        :ARG0 (c13-1 / you)
        :ARG1 (c13-7 / number
                     :quant-of (c13-5 / kid
                                      :ARG1-of (c13-11 / kill-01
                                                       :condition (c13-0 / justify-01
                                                                         :ARG0 (c13-3 / level
                                                                                      :mod (c13-10 / that)
                                                                                      :mod (c13-9 / thievery))
                                                                         :ARG1 (c13-14 / approach-02
                                                                                       :ARG1 (c13-13 / shoot-02
                                                                                                     :purpose (c13-8 / kill-01)))))
                                      :ARG1-of (c13-4 / black-05)
                                      :ARG1-of (c13-2 / white-02)))
        :polarity (c13-6 / amr-unknown))

# ::snt I'm sitting here saying the same thing! If had been a criminal, the whole world would've known days ago!
# ::tokens ["I", "'m", "sitting", "here", "saying", "the", "same", "thing", "!", "If", "had", "been", "a", "criminal", ",", "the", "whole", "world", "would", "'ve", "known", "days", "ago", "!"]
# ::lemmas ["i", "be", "sit", "here", "say", "the", "same", "thing", "!", "if", "have", "be", "a", "criminal", ",", "the", "whole", "world", "would", "'ve", "known", "days", "ago", "!"]
(c14-3 / multi-sentence
       :snt1 (c14-14 / sit-01
                     :ARG1 (c14-6 / i)
                     :ARG2 (c14-0 / here)
                     :manner (c14-5 / say-01
                                    :ARG0 c14-6
                                    :ARG1 (c14-15 / thing
                                                  :ARG1-of (c14-2 / same-01))))
       :snt2 (c14-7 / know-01
                    :ARG0 (c14-1 / world
                                 :mod (c14-8 / whole))
                    :time (c14-4 / before
                                 :op1 (c14-9 / now)
                                 :quant (c14-10 / multiple
                                                :op1 (c14-13 / temporal-quantity
                                                             :unit (c14-11 / day)
                                                             :quant 1)))
                    :condition (c14-12 / criminal-03
                                       :ARG2 c14-6)))

# ::snt Message!!!
# ::tokens ["Message", "!", "!", "!"]
# ::lemmas ["message", "!", "!", "!"]
(c15-0 / message-01
       :mode expressive)

# ::snt very well written!
# ::tokens ["very", "well", "written", "!"]
# ::lemmas ["very", "well", "write", "!"]
(c16-1 / thing
       :ARG1-of (c16-0 / write-01)
       :ARG1-of (c16-3 / well-09
                       :degree (c16-2 / very)))
