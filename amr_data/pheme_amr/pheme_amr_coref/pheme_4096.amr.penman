# ::snt ty Harry
# ::tokens ["ty", "Harry"]
# ::lemmas ["ty", "Harry"]
(c1-1 / person
      :name (c1-0 / name
                  :op1 "ty"
                  :op2 "Harry"))

# ::snt merci
# ::tokens ["merci"]
# ::lemmas ["merci"]
(c2-1 / person
      :name (c2-0 / name
                  :op1 "Merci"))

# ::snt : Prince Harry signs the bookCharlieHebdo (via ) our kind condolences as well.
# ::tokens [":", "Prince", "Harry", "signs", "the", "bookCharlieHebdo", "(", "via", ")", "our", "kind", "condolences", "as", "well", "."]
# ::lemmas [":", "Prince", "Harry", "sign", "the", "bookcharliehebdo", "(", "via", ")", "our", "kind", "condolence", "as", "well", "."]
(c3-6 / sign-01
      :ARG0 (c3-4 / person
                  :name (c3-3 / name
                              :op1 "Prince"
                              :op2 "Harry"))
      :ARG1 (c3-1 / book
                  :name (c3-2 / name
                              :op1 "CharlieHebdo"))
      :manner (c3-5 / condolence
                    :poss (c3-0 / we)
                    :mod (c3-7 / kind)
                    :mod (c3-8 / as-well)))

# ::snt why is she smiling? this is not a happy event
# ::tokens ["why", "is", "she", "smiling", "?", "this", "is", "not", "a", "happy", "event"]
# ::lemmas ["why", "be", "she", "smile", "?", "this", "be", "not", "a", "happy", "event"]
(c4-1 / multi-sentence
      :snt1 (c4-5 / smile-01
                  :ARG0 (c4-2 / she)
                  :ARG1-of (c4-4 / cause-01
                                 :ARG0 (c4-7 / amr-unknown)))
      :snt2 (c4-3 / event
                  :ARG1-of (c4-0 / happy-02)
                  :domain (c4-6 / this)
                  :polarity -))

# ::snt lol
# ::tokens ["lol"]
# ::lemmas ["lol"]
(c5-0 / laugh-01
      :manner (c5-1 / loud)
      :mode expressive)

# ::snt Its Shakespeare - Much Ado About Nothing! BBC WAKE UP DO SOMETHING REPORT THE TRUTH ABOUT MUSLIM THREATS
# ::tokens ["Its", "Shakespeare", "-", "Much", "Ado", "About", "Nothing", "!", "BBC", "WAKE", "UP", "DO", "SOMETHING", "REPORT", "THE", "TRUTH", "ABOUT", "MUSLIM", "THREATS"]
# ::lemmas ["its", "Shakespeare", "-", "Much", "Ado", "about", "Nothing", "!", "BBC", "wake", "up", "DO", "something", "report", "the", "truth", "about", "MUSLIM", "THREATS"]
(c6-1 / multi-sentence
      :snt1 (c6-7 / person
                  :name (c6-5 / name
                              :op1 "Shakespeare")
                  :domain (c6-3 / it)
                  :topic (c6-15 / Ado
                                :topic (c6-6 / nothing)
                                :quant (c6-8 / much)))
      :snt2 (c6-9 / report-01
                  :ARG0 (c6-14 / publication
                               :name (c6-10 / name
                                            :op1 "BBC"))
                  :ARG1 (c6-13 / true-01
                               :ARG1 (c6-0 / hate-01
                                           :ARG1 (c6-2 / person
                                                       :mod (c6-4 / religious-group
                                                                  :name (c6-11 / name
                                                                               :op1 "Muslim")))))
                  :mod (c6-12 / something)))

# ::snt Prince Harry needs to get back to Afghanistan and take care of some business.
# ::tokens ["Prince", "Harry", "needs", "to", "get", "back", "to", "Afghanistan", "and", "take", "care", "of", "some", "business", "."]
# ::lemmas ["Prince", "Harry", "need", "to", "get", "back", "to", "Afghanistan", "and", "take", "care", "of", "some", "business", "."]
(c7-2 / need-01
      :ARG0 (c7-4 / person
                  :name (c7-3 / name
                              :op1 "Harry")
                  :ARG0-of (c7-0 / have-org-role-91
                                 :ARG2 (c7-10 / prince)))
      :ARG1 (c7-11 / and
                   :op1 (c7-7 / get-back-10
                              :ARG1 c7-4
                              :ARG2 (c7-6 / country
                                          :name (c7-5 / name
                                                      :op1 "Afghanistan")))
                   :op2 (c7-8 / care-03
                              :ARG0 c7-4
                              :ARG1 (c7-1 / business
                                          :quant (c7-9 / some)))))

# ::snt Geraldo, is that you??
# ::tokens ["Geraldo", ",", "is", "that", "you", "?", "?"]
# ::lemmas ["Geraldo", ",", "be", "that", "you", "?", "?"]
(c8-3 / say-01
      :ARG1 (c8-1 / eraldo
                  :domain (c8-4 / that)
                  :ARG1-of (c8-2 / request-confirmation-91))
      :ARG2 (c8-0 / you))

# ::snt wonderful prince Harry - his Mother's Son
# ::tokens ["wonderful", "prince", "Harry", "-", "his", "Mother", "'s", "Son"]
# ::lemmas ["wonderful", "prince", "Harry", "-", "his", "Mother", "'s", "Son"]
(c9-4 / prince
      :name (c9-3 / name
                  :op1 "Harry")
      :mod (c9-1 / wonderful)
      :ARG0-of (c9-0 / have-rel-role-91
                     :ARG1 (c9-6 / person
                                 :ARG0-of (c9-7 / have-rel-role-91
                                                :ARG1 c9-4
                                                :ARG2 (c9-2 / mother)))
                     :ARG2 (c9-5 / son)))

# ::snt how about signing some letters of marque to plunder the Barbary Coast?
# ::tokens ["how", "about", "signing", "some", "letters", "of", "marque", "to", "plunder", "the", "Barbary", "Coast", "?"]
# ::lemmas ["how", "about", "sign", "some", "letter", "of", "marque", "to", "plunder", "the", "Barbary", "Coast", "?"]
(c10-7 / amr-unknown
       :topic (c10-6 / sign-01
                     :ARG1 (c10-0 / letter
                                  :mod (c10-1 / marque)
                                  :quant (c10-2 / some))
                     :purpose (c10-4 / plunder-01
                                     :ARG1 (c10-5 / coast
                                                  :name (c10-3 / name
                                                               :op1 "Barbary"
                                                               :op2 "Coast")))))

# ::snt wow, if you are comparing me to him I really need to hit the gym harder.
# ::tokens ["wow", ",", "if", "you", "are", "comparing", "me", "to", "him", "I", "really", "need", "to", "hit", "the", "gym", "harder", "."]
# ::lemmas ["wow", ",", "if", "you", "be", "compare", "i", "to", "he", "i", "really", "need", "to", "hit", "the", "gym", "hard", "."]
(c11-5 / need-01
       :ARG0 (c11-4 / i)
       :ARG1 (c11-0 / hit-02
                    :ARG0 c11-4
                    :ARG1 (c11-9 / gym)
                    :ARG1-of (c11-11 / hard-02
                                     :ARG2-of (c11-6 / have-degree-91
                                                     :ARG1 c11-0
                                                     :ARG3 (c11-3 / more))))
       :ARG1-of (c11-7 / real-04)
       :condition (c11-8 / compare-01
                         :ARG0 (c11-1 / you)
                         :ARG1 c11-4
                         :ARG2 (c11-10 / he))
       :mod (c11-2 / wow
                   :mode expressive))
