# ::snt Racism alive and well in USA and it's DISGUSTING!MORE disgusting so many white ppl DENY this fact!
# ::tokens ["Racism", "alive", "and", "well", "in", "USA", "and", "it", "'s", "DISGUSTING!MORE", "disgusting", "so", "many", "white", "ppl", "DENY", "this", "fact", "!"]
# ::lemmas ["racism", "alive", "and", "well", "in", "USA", "and", "it", "be", "DISGUSTING!MORE", "disgusting", "so", "many", "white", "ppl", "DENY", "this", "fact", "!"]
(c1-4 / multi-sentence
      :snt1 (c1-16 / and
                   :op1 (c1-3 / live-01
                              :ARG0 (c1-10 / racism)
                              :location (c1-11 / country
                                               :name (c1-8 / name
                                                           :op1 "USA")))
                   :op2 (c1-12 / disgust-01
                               :ARG0 c1-10))
      :snt2 (c1-2 / disgust-01
                  :ARG0 (c1-17 / deny-01
                               :ARG0 (c1-9 / person
                                           :ARG1-of (c1-1 / white-02)
                                           :ARG1-of (c1-0 / have-quant-91
                                                          :ARG2 (c1-13 / many)
                                                          :ARG3 (c1-14 / so)))
                               :ARG1 (c1-5 / fact
                                           :mod (c1-15 / this)))
                  :ARG2-of (c1-6 / have-degree-91
                                 :ARG1 c1-17
                                 :ARG3 (c1-7 / more))))

# ::snt I'm saying don't release your side of the story, drop the mic and walk away, this boy was MURDERED, IDGAF if he robbed or not
# ::tokens ["I", "'m", "saying", "do", "n't", "release", "your", "side", "of", "the", "story", ",", "drop", "the", "mic", "and", "walk", "away", ",", "this", "boy", "was", "MURDERED", ",", "IDGAF", "if", "he", "robbed", "or", "not"]
# ::lemmas ["i", "be", "say", "do", "not", "release", "your", "side", "of", "the", "story", ",", "drop", "the", "mic", "and", "walk", "away", ",", "this", "boy", "be", "murder", ",", "IDGAF", "if", "he", "rob", "or", "not"]
(c2-0 / multi-sentence
      :snt1 (c2-3 / say-01
                  :ARG0 (c2-14 / i)
                  :ARG1 (c2-4 / and
                              :op1 (c2-11 / release-01
                                          :ARG0 (c2-16 / you)
                                          :ARG1 (c2-7 / side
                                                      :poss c2-16
                                                      :part-of (c2-17 / story))
                                          :polarity -
                                          :mode imperative)
                              :op2 (c2-2 / drop-05
                                         :ARG0 c2-16
                                         :ARG1 (c2-10 / mic)
                                         :mode imperative)
                              :op3 (c2-12 / walk-01
                                          :ARG0 c2-16
                                          :ARG2 (c2-13 / away)
                                          :mode imperative)))
      :snt2 (c2-9 / and
                  :op1 (c2-5 / murder-01
                             :ARG1 (c2-6 / boy
                                         :mod (c2-19 / this)))
                  :op2 (c2-15 / IDGAF
                              :condition (c2-18 / or
                                                :op1 (c2-1 / rob-01
                                                           :ARG0 c2-6)
                                                :op2 (c2-8 / rob-01
                                                           :ARG0 c2-6
                                                           :polarity -)))))

# ::snt Exactly.
# ::tokens ["Exactly", "."]
# ::lemmas ["exactly", "."]
(c3-0 / exact)

# ::snt If the second witness interviewed holds up, that ship has sailed.
# ::tokens ["If", "the", "second", "witness", "interviewed", "holds", "up", ",", "that", "ship", "has", "sailed", "."]
# ::lemmas ["if", "the", "second", "witness", "interview", "hold", "up", ",", "that", "ship", "have", "sail", "."]
(c4-6 / sail-01
      :ARG0 (c4-3 / ship
                  :mod (c4-7 / that))
      :condition (c4-0 / hold-up-11
                       :ARG1 (c4-5 / person
                                   :ARG0-of (c4-1 / witness-01)
                                   :ord (c4-2 / ordinal-entity
                                              :value 2)
                                   :ARG1-of (c4-4 / interview-01))))

# ::snt lol looks Police wants this case to avoid trial
# ::tokens ["lol", "looks", "Police", "wants", "this", "case", "to", "avoid", "trial"]
# ::lemmas ["lol", "look", "police", "want", "this", "case", "to", "avoid", "trial"]
(c5-1 / look-02
      :ARG1 (c5-0 / want-01
                  :ARG0 (c5-2 / police)
                  :ARG1 (c5-7 / avoid-01
                              :ARG0 (c5-4 / case-03
                                          :mod (c5-6 / this))
                              :ARG1 (c5-5 / try-02
                                          :ARG1 c5-4)))
      :manner (c5-3 / loud))

# ::snt Thank you. I can't believe this is STILL happening in !
# ::tokens ["Thank", "you", ".", "I", "ca", "n't", "believe", "this", "is", "STILL", "happening", "in", "!"]
# ::lemmas ["thank", "you", ".", "i", "can", "not", "believe", "this", "be", "still", "happen", "in", "!"]
(c6-1 / multi-sentence
      :snt1 (c6-8 / thank-01
                  :ARG0 (c6-3 / i)
                  :ARG1 (c6-0 / you))
      :snt2 (c6-4 / possible-01
                  :ARG1 (c6-2 / believe-01
                              :ARG0 c6-3
                              :ARG1 (c6-5 / be-located-at-91
                                          :ARG1 (c6-6 / this)
                                          :mod (c6-7 / still)))
                  :polarity -))

# ::snt and they wonder why we're mad
# ::tokens ["and", "they", "wonder", "why", "we", "'re", "mad"]
# ::lemmas ["and", "they", "wonder", "why", "we", "be", "mad"]
(c7-6 / and
      :op2 (c7-0 / wonder-01
                 :ARG0 (c7-5 / they)
                 :ARG1 (c7-4 / thing
                             :ARG0-of (c7-3 / cause-01
                                            :ARG1 (c7-1 / mad-04
                                                        :ARG1 (c7-2 / we))))))

# ::snt they didn't say it was a good shooting liz, but don't be upset that they released more info.
# ::tokens ["they", "did", "n't", "say", "it", "was", "a", "good", "shooting", "liz", ",", "but", "do", "n't", "be", "upset", "that", "they", "released", "more", "info", "."]
# ::lemmas ["they", "do", "not", "say", "it", "be", "a", "good", "shooting", "liz", ",", "but", "do", "not", "be", "upset", "that", "they", "release", "more", "info", "."]
(c8-6 / contrast-01
      :ARG1 (c8-9 / say-01
                  :ARG0 (c8-10 / they)
                  :ARG1 (c8-7 / good-03
                              :ARG1 (c8-4 / it)
                              :ARG2 (c8-3 / shoot-01))
                  :polarity -)
      :ARG2 (c8-2 / upset-01
                  :ARG0 (c8-5 / release-01
                              :ARG0 c8-10
                              :ARG1 (c8-8 / information
                                          :mod (c8-1 / more)))
                  :ARG1 (c8-0 / you)
                  :polarity -))

# ::snt Kyle, the PD smeared the poor boy and tried to walk away before even releasing the name of the officer, don't u see?
# ::tokens ["Kyle", ",", "the", "PD", "smeared", "the", "poor", "boy", "and", "tried", "to", "walk", "away", "before", "even", "releasing", "the", "name", "of", "the", "officer", ",", "do", "n't", "u", "see", "?"]
# ::lemmas ["Kyle", ",", "the", "PD", "smear", "the", "poor", "boy", "and", "try", "to", "walk", "away", "before", "even", "release", "the", "name", "of", "the", "officer", ",", "do", "not", "u", "see", "?"]
(c9-3 / say-01
      :ARG0 (c9-14 / i)
      :ARG1 (c9-5 / and
                  :op1 (c9-8 / smear-01
                             :ARG0 (c9-2 / department
                                         :mod (c9-1 / police))
                             :ARG1 (c9-7 / boy
                                         :mod (c9-4 / poor)))
                  :op2 (c9-20 / try-01
                              :ARG0 c9-7
                              :ARG1 (c9-12 / walk-01
                                           :ARG0 c9-7
                                           :ARG2 (c9-13 / away))
                              :time (c9-15 / before
                                           :op1 (c9-11 / release-01
                                                       :ARG0 c9-2
                                                       :ARG1 (c9-19 / thing
                                                                    :ARG2-of (c9-10 / name-01
                                                                                    :ARG1 (c9-17 / officer)))
                                                       :mod (c9-9 / even))))
                  :ARG1-of (c9-0 / request-confirmation-91
                                 :ARG2 (c9-16 / you)))
      :ARG2 (c9-6 / person
                  :name (c9-18 / name
                               :op1 "Kyle")))

# ::snt so ur saying if indeed he was involved in a robbery, that info should not be released? Do tell..
# ::tokens ["so", "ur", "saying", "if", "indeed", "he", "was", "involved", "in", "a", "robbery", ",", "that", "info", "should", "not", "be", "released", "?", "Do", "tell", ".."]
# ::lemmas ["so", "ur", "say", "if", "indeed", "he", "be", "involve", "in", "a", "robbery", ",", "that", "info", "should", "not", "be", "release", "?", "do", "tell", ".."]
(c10-3 / multi-sentence
       :snt1 (c10-8 / cause-01
                    :ARG1 (c10-11 / say-01
                                  :ARG0 (c10-1 / you)
                                  :ARG1 (c10-7 / recommend-01
                                               :ARG1 (c10-6 / release-01
                                                            :ARG1 (c10-5 / information
                                                                         :mod (c10-12 / that)))
                                               :condition (c10-9 / involve-01
                                                                 :ARG1 (c10-0 / he)
                                                                 :ARG2 (c10-4 / rob-01
                                                                              :ARG0 c10-0)
                                                                 :mod (c10-2 / indeed))
                                               :polarity -)))
       :snt2 (c10-10 / tell-01
                     :ARG0 (c10-13 / you)
                     :mode imperative))

# ::snt I hope you didnt expect any thing more than that. Of course they were going to spin it
# ::tokens ["I", "hope", "you", "did", "nt", "expect", "any", "thing", "more", "than", "that", ".", "Of", "course", "they", "were", "going", "to", "spin", "it"]
# ::lemmas ["i", "hope", "you", "do", "not", "expect", "any", "thing", "more", "than", "that", ".", "of", "course", "they", "be", "go", "to", "spin", "it"]
(c11-3 / multi-sentence
       :snt1 (c11-0 / hope-01
                    :ARG0 (c11-6 / i)
                    :ARG1 (c11-5 / expect-01
                                 :ARG0 (c11-1 / you)
                                 :ARG1 (c11-12 / thing
                                               :mod (c11-13 / any)
                                               :ARG1-of (c11-2 / have-quant-91
                                                               :ARG3 (c11-8 / more)
                                                               :ARG4 (c11-10 / that)))
                                 :polarity -))
       :snt2 (c11-11 / spin-03
                     :ARG0 (c11-7 / they)
                     :ARG1 (c11-9 / it)
                     :mod (c11-4 / of-course)))

# ::snt My son has faced racial bullying to an extreme and was largely ignored by school!
# ::tokens ["My", "son", "has", "faced", "racial", "bullying", "to", "an", "extreme", "and", "was", "largely", "ignored", "by", "school", "!"]
# ::lemmas ["my", "son", "have", "face", "racial", "bullying", "to", "an", "extreme", "and", "be", "largely", "ignore", "by", "school", "!"]
(c12-11 / and
        :op1 (c12-1 / face-01
                    :ARG0 (c12-7 / person
                                 :ARG0-of (c12-0 / have-rel-role-91
                                                 :ARG1 (c12-6 / i)
                                                 :ARG2 (c12-10 / son)))
                    :ARG1 (c12-3 / bully-01
                                 :ARG1 c12-7
                                 :mod (c12-8 / race)
                                 :degree (c12-4 / extreme)))
        :op2 (c12-9 / ignore-01
                    :ARG0 (c12-5 / school)
                    :ARG1 c12-7
                    :degree (c12-2 / large)))

# ::snt it's fact that info should be released sooner and that policy needs changed.
# ::tokens ["it", "'s", "fact", "that", "info", "should", "be", "released", "sooner", "and", "that", "policy", "needs", "changed", "."]
# ::lemmas ["it", "be", "fact", "that", "info", "should", "be", "release", "soon", "and", "that", "policy", "need", "change", "."]
(c13-1 / fact
       :topic (c13-10 / and
                      :op1 (c13-7 / recommend-01
                                  :ARG1 (c13-4 / release-01
                                               :ARG1 (c13-3 / information)
                                               :time (c13-9 / soon
                                                            :ARG2-of (c13-0 / have-degree-91
                                                                            :ARG1 c13-4
                                                                            :ARG3 (c13-2 / more)))))
                      :op2 (c13-8 / change-01
                                  :ARG1 (c13-6 / policy-01)
                                  :ARG1-of (c13-5 / need-01))))

# ::snt Didn't see that one coming. I bet Michael Brown had marijuana in his system, too.
# ::tokens ["Did", "n't", "see", "that", "one", "coming", ".", "I", "bet", "Michael", "Brown", "had", "marijuana", "in", "his", "system", ",", "too", "."]
# ::lemmas ["do", "not", "see", "that", "one", "come", ".", "i", "bet", "Michael", "Brown", "have", "marijuana", "in", "his", "system", ",", "too", "."]
(c14-1 / multi-sentence
       :snt1 (c14-12 / see-01
                     :ARG0 (c14-5 / i)
                     :ARG1 (c14-9 / come-03
                                  :ARG1 (c14-3 / one
                                               :mod (c14-13 / that)))
                     :polarity -)
       :snt2 (c14-2 / bet-01
                    :ARG0 (c14-10 / i)
                    :ARG2 (c14-0 / have-03
                                 :ARG0 (c14-7 / person
                                              :name (c14-6 / name
                                                           :op1 "Michael"
                                                           :op2 "Brown"))
                                 :ARG1 (c14-8 / marijuana
                                              :location (c14-4 / system
                                                               :poss c14-7))
                                 :mod (c14-11 / too))))

# ::snt It's true. Just check Breitbart or Red State.
# ::tokens ["It", "'s", "true", ".", "Just", "check", "Breitbart", "or", "Red", "State", "."]
# ::lemmas ["it", "be", "true", ".", "just", "check", "Breitbart", "or", "Red", "State", "."]
(c15-2 / multi-sentence
       :snt1 (c15-9 / true-01
                    :ARG1 (c15-4 / it))
       :snt2 (c15-8 / check-01
                    :ARG0 (c15-1 / you)
                    :ARG1 (c15-3 / or
                                 :op1 (c15-7 / publication
                                             :name (c15-5 / name
                                                          :op1 "Breitbart"))
                                 :op2 (c15-10 / publication
                                              :name (c15-6 / name
                                                           :op1 "Red"
                                                           :op2 "State")))
                    :mod (c15-0 / just)
                    :mode imperative))

# ::snt hide then they wouldn't have waited days to release any info at all. And they do this after last night??
# ::tokens ["hide", "then", "they", "would", "n't", "have", "waited", "days", "to", "release", "any", "info", "at", "all", ".", "And", "they", "do", "this", "after", "last", "night", "?", "?"]
# ::lemmas ["hide", "then", "they", "would", "not", "have", "wait", "days", "to", "release", "any", "info", "at", "all", ".", "and", "they", "do", "this", "after", "last", "night", "?", "?"]
(c16-1 / multi-sentence
       :snt1 (c16-4 / hide-01
                    :time (c16-21 / then)
                    :ARG0-of (c16-18 / cause-01
                                     :ARG1 (c16-10 / wait-01
                                                   :ARG1 (c16-14 / they)
                                                   :ARG2 (c16-8 / release-01
                                                                :ARG0 c16-14
                                                                :ARG1 (c16-12 / information
                                                                              :mod (c16-3 / any))
                                                                :mod (c16-11 / at-all))
                                                   :duration (c16-7 / multiple
                                                                    :op1 (c16-13 / temporal-quantity
                                                                                 :unit (c16-2 / day)
                                                                                 :quant 1))
                                                   :polarity -)))
       :snt2 (c16-6 / and
                    :op2 (c16-0 / do-02
                                :ARG0 (c16-17 / they)
                                :ARG1 (c16-19 / this)
                                :time (c16-20 / after
                                              :op1 (c16-9 / date-entity
                                                          :dayperiod (c16-5 / night)
                                                          :mod (c16-15 / yesterday)))
                                :polarity (c16-16 / amr-unknown))))

# ::snt Oh,I know,wasn't saying it like it gave me permission to speak on issue, just that I've witnessed prob
# ::tokens ["Oh", ",", "I", "know", ",", "wasn't", "saying", "it", "like", "it", "gave", "me", "permission", "to", "speak", "on", "issue", ",", "just", "that", "I", "'ve", "witnessed", "prob"]
# ::lemmas ["oh", ",", "i", "know", ",", "wasn't", "say", "it", "like", "it", "give", "i", "permission", "to", "speak", "on", "issue", ",", "just", "that", "i", "'ve", "witness", "prob"]
(c17-12 / know-01
        :ARG0 (c17-5 / i)
        :ARG1 (c17-8 / contrast-01
                     :ARG1 (c17-11 / say-01
                                   :ARG0 c17-5
                                   :ARG1 (c17-9 / it)
                                   :manner (c17-7 / resemble-01
                                                  :ARG2 (c17-10 / give-01
                                                                :ARG0 c17-9
                                                                :ARG1 (c17-6 / permit-01
                                                                             :ARG0 c17-9
                                                                             :ARG1 (c17-4 / speak-01
                                                                                          :ARG0 c17-5
                                                                                          :ARG1 (c17-2 / issue-02))
                                                                             :ARG2 c17-5)
                                                                :ARG2 c17-5))
                                   :polarity -)
                     :ARG2 (c17-1 / witness-01
                                  :ARG0 c17-5
                                  :mod (c17-0 / just)))
        :mod (c17-3 / oh
                    :mode expressive))

# ::snt Our Pres has faced extreme racism from second he announced he was running for Pres.
# ::tokens ["Our", "Pres", "has", "faced", "extreme", "racism", "from", "second", "he", "announced", "he", "was", "running", "for", "Pres", "."]
# ::lemmas ["our", "Pres", "have", "face", "extreme", "racism", "from", "second", "he", "announce", "he", "be", "run", "for", "Pres", "."]
(c18-2 / face-01
       :ARG0 (c18-6 / person
                    :ARG0-of (c18-0 / have-org-role-91
                                    :ARG2 (c18-9 / president))
                    :poss (c18-1 / we))
       :ARG1 (c18-7 / racism
                    :degree (c18-4 / extreme))
       :time (c18-8 / since
                    :op1 (c18-10 / announce-01
                                 :ARG0 c18-6
                                 :ARG1 (c18-5 / run-02
                                              :ARG0 c18-6
                                              :ARG1 c18-9)
                                 :ord (c18-3 / ordinal-entity
                                             :value 2))))

# ::snt Not going to happen. When they do give out the cops ID, he will be a law abiding angel
# ::tokens ["Not", "going", "to", "happen", ".", "When", "they", "do", "give", "out", "the", "cops", "ID", ",", "he", "will", "be", "a", "law", "abiding", "angel"]
# ::lemmas ["not", "go", "to", "happen", ".", "when", "they", "do", "give", "out", "the", "cop", "ID", ",", "he", "will", "be", "a", "law", "abide", "angel"]
(c19-2 / multi-sentence
       :snt1 (c19-3 / event
                    :polarity -)
       :snt2 (c19-10 / angel
                     :domain (c19-0 / he)
                     :ARG0-of (c19-4 / abide-01
                                     :ARG1 (c19-1 / law))
                     :time (c19-8 / give-out-06
                                  :ARG0 (c19-9 / they)
                                  :ARG1 (c19-6 / document-01
                                               :ARG1 (c19-5 / identity
                                                            :poss (c19-7 / cop))))))

# ::snt BUT since that day I'd estimate about % or more of wh ppl in USA have lost their damn minds!
# ::tokens ["BUT", "since", "that", "day", "I", "'d", "estimate", "about", "%", "or", "more", "of", "wh", "ppl", "in", "USA", "have", "lost", "their", "damn", "minds", "!"]
# ::lemmas ["but", "since", "that", "day", "i", "would", "estimate", "about", "%", "or", "more", "of", "wh", "ppl", "in", "USA", "have", "lose", "their", "damn", "mind", "!"]
(c20-8 / contrast-01
       :ARG2 (c20-3 / estimate-01
                    :ARG0 (c20-4 / i)
                    :ARG1 (c20-1 / lose-02
                                 :ARG0 (c20-6 / person
                                              :ARG1-of (c20-9 / include-91
                                                              :location (c20-7 / country
                                                                               :name (c20-5 / name
                                                                                            :op1 "USA"))
                                                              :ARG2 c20-6)
                                              :ARG3 (c20-14 / about
                                                            :op1 (c20-13 / percentage-entity
                                                                         :value 40)))
                                 :part (c20-2 / mind
                                              :mod (c20-10 / damn
                                                           :mode expressive)
                                              :ARG1-of c20-3)))
       :time (c20-11 / since
                     :op1 (c20-0 / day
                                 :mod (c20-12 / that))))

# ::snt Yeah they're dumping the whole bag out on that joint. This is wild
# ::tokens ["Yeah", "they", "'re", "dumping", "the", "whole", "bag", "out", "on", "that", "joint", ".", "This", "is", "wild"]
# ::lemmas ["yeah", "they", "be", "dump", "the", "whole", "bag", "out", "on", "that", "joint", ".", "this", "be", "wild"]
(c21-3 / multi-sentence
       :snt1 (c21-7 / dump-01
                    :ARG0 (c21-9 / they)
                    :ARG1 (c21-4 / bag
                                 :mod (c21-1 / whole))
                    :ARG2 (c21-0 / joint
                                 :mod (c21-8 / that))
                    :mod (c21-2 / yeah
                                :mode expressive))
       :snt2 (c21-5 / wild
                    :domain (c21-6 / this)))

# ::snt Liz releasing facts is not smearing him
# ::tokens ["Liz", "releasing", "facts", "is", "not", "smearing", "him"]
# ::lemmas ["Liz", "releasing", "fact", "be", "not", "smear", "he"]
(c22-5 / smear-02
       :ARG0 (c22-4 / release-01
                    :ARG0 (c22-3 / person
                                 :name (c22-2 / name
                                              :op1 "Liz"))
                    :ARG1 (c22-1 / fact))
       :ARG1 (c22-0 / he)
       :polarity -)

# ::snt fuck that. This is NOT their investigation. They shouldn't have released anything but that officers name. PERIOD.
# ::tokens ["fuck", "that", ".", "This", "is", "NOT", "their", "investigation", ".", "They", "should", "n't", "have", "released", "anything", "but", "that", "officers", "name", ".", "PERIOD", "."]
# ::lemmas ["fuck", "that", ".", "this", "be", "not", "their", "investigation", ".", "they", "should", "not", "have", "release", "anything", "but", "that", "officer", "name", ".", "period", "."]
(c23-3 / multi-sentence
       :snt1 (c23-2 / fuck-01
                    :ARG0 (c23-1 / you)
                    :ARG1 (c23-16 / that)
                    :mode imperative
                    :mode expressive)
       :snt2 (c23-8 / investigate-01
                    :ARG0 (c23-15 / they)
                    :ARG1 (c23-11 / this)
                    :polarity -)
       :snt3 (c23-13 / recommend-01
                     :ARG1 (c23-9 / release-01
                                  :ARG0 (c23-6 / they)
                                  :ARG1 (c23-17 / anything
                                                :ARG2-of (c23-5 / except-01
                                                                :ARG1 (c23-10 / name
                                                                              :poss (c23-12 / person
                                                                                            :ARG0-of (c23-0 / have-org-role-91
                                                                                                            :ARG2 (c23-4 / officer))
                                                                                            :mod (c23-14 / that)))))
                                  :polarity -)
                     :ARG1-of (c23-7 / reasonable-02)))

# ::snt just stating facts
# ::tokens ["just", "stating", "facts"]
# ::lemmas ["just", "state", "fact"]
(c24-0 / state-01
       :ARG1 (c24-2 / fact)
       :mod (c24-1 / just))

# ::snt I always expect the worse. Especially when it comes to cops justifying shooting unarmed men
# ::tokens ["I", "always", "expect", "the", "worse", ".", "Especially", "when", "it", "comes", "to", "cops", "justifying", "shooting", "unarmed", "men"]
# ::lemmas ["i", "always", "expect", "the", "bad", ".", "especially", "when", "it", "come", "to", "cop", "justify", "shoot", "unarmed", "man"]
(c25-3 / multi-sentence
       :snt1 (c25-6 / expect-01
                    :ARG0 (c25-8 / i)
                    :ARG1 (c25-13 / thing
                                  :ARG1-of (c25-0 / have-degree-91
                                                  :ARG2 (c25-4 / bad-07)
                                                  :ARG3 (c25-9 / more)))
                    :time (c25-14 / always))
       :snt2 (c25-5 / especially
                    :op1 (c25-11 / come-12
                                 :ARG1 (c25-1 / justify-01
                                              :ARG0 (c25-10 / cop)
                                              :ARG1 (c25-12 / shoot-02
                                                            :ARG0 c25-10
                                                            :ARG1 (c25-2 / man
                                                                         :ARG1-of (c25-7 / arm-01
                                                                                         :polarity -)))))))

# ::snt Not this white person or millions of others across America. This is finally transcending race.
# ::tokens ["Not", "this", "white", "person", "or", "millions", "of", "others", "across", "America", ".", "This", "is", "finally", "transcending", "race", "."]
# ::lemmas ["not", "this", "white", "person", "or", "millions", "of", "other", "across", "America", ".", "this", "be", "finally", "transcend", "race", "."]
(c26-2 / multi-sentence
       :snt1 (c26-4 / or
                    :op1 (c26-7 / person
                                :ARG1-of (c26-0 / white-02)
                                :mod (c26-12 / this))
                    :op2 (c26-13 / person
                                 :mod (c26-1 / other)
                                 :quant (c26-8 / multiple
                                               :op1 1000000)
                                 :location (c26-14 / across
                                                   :op1 (c26-9 / country
                                                               :name (c26-5 / name
                                                                            :op1 "America"))))
                    :polarity -)
       :snt2 (c26-11 / transcribe-01
                     :ARG0 (c26-6 / this)
                     :ARG1 (c26-10 / race)
                     :time (c26-3 / final)))

# ::snt Doesn't matter. You were good in my book from jump, no matter who you're married to.
# ::tokens ["Does", "n't", "matter", ".", "You", "were", "good", "in", "my", "book", "from", "jump", ",", "no", "matter", "who", "you", "'re", "married", "to", "."]
# ::lemmas ["do", "not", "matter", ".", "you", "be", "good", "in", "my", "book", "from", "jump", ",", "no", "matter", "who", "you", "be", "married", "to", "."]
(c27-3 / multi-sentence
       :snt1 (c27-7 / matter-01
                    :polarity -)
       :snt2 (c27-10 / good-03
                     :ARG1 (c27-1 / you)
                     :location (c27-5 / book
                                      :poss (c27-6 / i))
                     :time (c27-2 / from
                                  :op1 (c27-0 / jump))
                     :ARG1-of (c27-8 / regardless-91
                                     :ARG2 (c27-9 / person
                                                  :ARG2-of (c27-4 / marry-01
                                                                  :ARG1 (c27-11 / you))))))

# ::snt Exactly! It make it easier for whites to absorb that Mike Brown was a thug/criminal and rightly shot!
# ::tokens ["Exactly", "!", "It", "make", "it", "easier", "for", "whites", "to", "absorb", "that", "Mike", "Brown", "was", "a", "thug", "/", "criminal", "and", "rightly", "shot", "!"]
# ::lemmas ["exactly", "!", "it", "make", "it", "easy", "for", "white", "to", "absorb", "that", "Mike", "Brown", "be", "a", "thug", "/", "criminal", "and", "rightly", "shoot", "!"]
(c28-3 / multi-sentence
       :snt1 (c28-5 / exact
                    :mode expressive)
       :snt2 (c28-10 / make-02
                     :ARG0 (c28-8 / it)
                     :ARG1 (c28-4 / easy-05
                                  :ARG1 (c28-17 / absorb-01
                                                :ARG0 (c28-11 / person
                                                              :ARG1-of (c28-1 / white-02))
                                                :ARG1 (c28-7 / and
                                                             :op1 (c28-14 / slash
                                                                          :op1 (c28-15 / thug)
                                                                          :op2 (c28-12 / crime)
                                                                          :domain (c28-16 / person
                                                                                          :name (c28-9 / name
                                                                                                       :op1 "Mike"
                                                                                                       :op2 "Brown")))
                                                             :op2 (c28-6 / shoot-02
                                                                         :ARG1 c28-16
                                                                         :ARG1-of (c28-13 / right-02))))
                                  :ARG2-of (c28-0 / have-degree-91
                                                  :ARG1 c28-17
                                                  :ARG3 (c28-2 / more)))))

# ::snt Really. She might be targeted n arrested on some funny issue like jaywalking
# ::tokens ["Really", ".", "She", "might", "be", "targeted", "n", "arrested", "on", "some", "funny", "issue", "like", "jaywalking"]
# ::lemmas ["really", ".", "she", "might", "be", "target", "n", "arrest", "on", "some", "funny", "issue", "like", "jaywalk"]
(c29-2 / multi-sentence
       :snt1 (c29-7 / real-04)
       :snt2 (c29-6 / possible-01
                    :ARG1 (c29-10 / and
                                  :op1 (c29-9 / target-01
                                              :ARG1 (c29-8 / she))
                                  :op2 (c29-4 / arrest-01
                                              :ARG1 c29-8
                                              :ARG2 (c29-5 / issue-02
                                                           :ARG0 (c29-1 / funny-02)
                                                           :mod (c29-3 / some)
                                                           :example (c29-0 / jaywalk-00))))))

# ::snt they should have released cops name ASAP, and also the robbery info ASAP. U can't argue w that
# ::tokens ["they", "should", "have", "released", "cops", "name", "ASAP", ",", "and", "also", "the", "robbery", "info", "ASAP", ".", "U", "ca", "n't", "argue", "w", "that"]
# ::lemmas ["they", "should", "have", "release", "cop", "name", "asap", ",", "and", "also", "the", "robbery", "info", "ASAP", ".", "u", "can", "not", "argue", "w", "that"]
(c30-1 / multi-sentence
       :snt1 (c30-9 / recommend-01
                    :ARG1 (c30-5 / release-01
                                 :ARG0 (c30-13 / they)
                                 :ARG1 (c30-14 / and
                                               :op1 (c30-6 / name
                                                           :poss (c30-10 / cop))
                                               :op2 (c30-4 / information
                                                           :topic (c30-2 / rob-01)
                                                           :mod (c30-3 / also)))
                                 :time (c30-7 / ASAP)))
       :snt2 (c30-8 / possible-01
                    :ARG1 (c30-12 / argue-02
                                  :ARG0 (c30-0 / you)
                                  :ARG2 (c30-11 / that))
                    :polarity -))

# ::snt I'm not arguing with that, the PD shit allll over this investigation then all over . If they had nothing to
# ::tokens ["I", "'m", "not", "arguing", "with", "that", ",", "the", "PD", "shit", "allll", "over", "this", "investigation", "then", "all", "over", ".", "If", "they", "had", "nothing", "to"]
# ::lemmas ["i", "be", "not", "argue", "with", "that", ",", "the", "PD", "shit", "allll", "over", "this", "investigation", "then", "all", "over", ".", "if", "they", "have", "nothing", "to"]
(c31-2 / multi-sentence
       :snt1 (c31-14 / argue-02
                     :ARG0 (c31-5 / i)
                     :ARG2 (c31-13 / that)
                     :polarity -)
       :snt2 (c31-12 / shit-01
                     :ARG0 (c31-9 / department
                                  :mod (c31-8 / police))
                     :ARG1 (c31-10 / investigate-01
                                   :mod (c31-11 / this))
                     :degree (c31-4 / all-over)
                     :time (c31-7 / then))
       :snt3 (c31-0 / have-condition-91
                    :ARG2 (c31-1 / have-03
                                 :ARG0 (c31-3 / they)
                                 :ARG1 (c31-6 / nothing))))

# ::snt talked to a nd witness last night. If her testimony holds up, Cop's roasted.
# ::tokens ["talked", "to", "a", "nd", "witness", "last", "night", ".", "If", "her", "testimony", "holds", "up", ",", "Cop", "'s", "roasted", "."]
# ::lemmas ["talk", "to", "a", "nd", "witness", "last", "night", ".", "if", "her", "testimony", "hold", "up", ",", "Cop", "'s", "roasted", "."]
(c32-3 / multi-sentence
       :snt1 (c32-11 / talk-01
                     :ARG0 (c32-4 / i)
                     :ARG2 (c32-6 / person
                                  :ARG0-of (c32-1 / witness-01))
                     :time (c32-7 / date-entity
                                  :dayperiod (c32-5 / night)
                                  :mod (c32-2 / yesterday)))
       :snt2 (c32-8 / roast-01
                    :ARG1 (c32-12 / person
                                  :mod (c32-9 / cop))
                    :condition (c32-0 / hold-up-11
                                      :ARG1 (c32-10 / testify-01
                                                    :ARG0 c32-12))))

# ::snt I do have some knowledge though as I'm married to a bl man and have a son I fear for greatly!
# ::tokens ["I", "do", "have", "some", "knowledge", "though", "as", "I", "'m", "married", "to", "a", "bl", "man", "and", "have", "a", "son", "I", "fear", "for", "greatly", "!"]
# ::lemmas ["i", "do", "have", "some", "knowledge", "though", "as", "i", "be", "married", "to", "a", "bl", "man", "and", "have", "a", "son", "i", "fear", "for", "greatly", "!"]
(c33-0 / have-concession-91
       :ARG2 (c33-13 / know-01
                     :ARG0 (c33-6 / i)
                     :quant (c33-12 / some)
                     :ARG1-of (c33-10 / cause-01
                                      :ARG0 (c33-14 / and
                                                    :op1 (c33-2 / marry-01
                                                                :ARG1 c33-6
                                                                :ARG2 (c33-8 / man
                                                                             :mod (c33-4 / bl)))
                                                    :op2 (c33-1 / have-05
                                                                :ARG0 c33-6
                                                                :ARG1 (c33-9 / person
                                                                             :ARG0-of (c33-7 / have-rel-role-91
                                                                                             :ARG1 c33-6
                                                                                             :ARG2 (c33-5 / son)))
                                                                :ARG1-of (c33-3 / fear-01
                                                                                :ARG0 c33-6
                                                                                :degree (c33-11 / great)))))))

# ::snt NOT THIS WHITE person! This whole thing is BS!! A man was shot multiple times with hands in the air,PERIOD
# ::tokens ["NOT", "THIS", "WHITE", "person", "!", "This", "whole", "thing", "is", "BS", "!", "!", "A", "man", "was", "shot", "multiple", "times", "with", "hands", "in", "the", "air", ",", "PERIOD"]
# ::lemmas ["not", "this", "white", "person", "!", "this", "whole", "thing", "be", "BS", "!", "!", "a", "man", "be", "shoot", "multiple", "time", "with", "hand", "in", "the", "air", ",", "period"]
(c34-3 / multi-sentence
       :snt1 (c34-8 / person
                    :ARG1-of (c34-1 / white-02)
                    :domain (c34-12 / this)
                    :polarity -)
       :snt2 (c34-4 / bullshit-01
                    :ARG1 (c34-10 / thing
                                  :mod (c34-5 / whole)
                                  :mod (c34-7 / this)))
       :snt3 (c34-11 / shoot-02
                     :ARG1 (c34-9 / man
                                  :part (c34-0 / hand
                                               :location (c34-13 / air)))
                     :frequency (c34-2 / multiple)
                     :manner c34-0)
       :snt4 c34-8
       :name (c34-6 / name
                    :op1 "PERIOD"))

# ::snt Let's see if that's actually true. Because Journalists just got themselves a new hobby.
# ::tokens ["Let", "'s", "see", "if", "that", "'s", "actually", "true", ".", "Because", "Journalists", "just", "got", "themselves", "a", "new", "hobby", "."]
# ::lemmas ["let", "us", "see", "if", "that", "be", "actually", "true", ".", "because", "journalist", "just", "get", "themselves", "a", "new", "hobby", "."]
(c35-3 / multi-sentence
       :snt1 (c35-9 / see-01
                    :ARG0 (c35-1 / we)
                    :ARG1 (c35-10 / truth-value
                                  :polarity-of (c35-8 / true-01
                                                      :ARG1 (c35-5 / that)
                                                      :ARG1-of (c35-12 / actual-02)))
                    :mode imperative)
       :snt2 (c35-6 / cause-01
                    :ARG0 (c35-7 / get-01
                                 :ARG0 (c35-0 / journalist)
                                 :ARG1 (c35-2 / hobby
                                              :ARG1-of (c35-4 / new-01))
                                 :mod (c35-11 / just))))

# ::snt If that is what they think they are wrong! Nat'l many 's all races protesting this.
# ::tokens ["If", "that", "is", "what", "they", "think", "they", "are", "wrong", "!", "Nat'l", "many", "'s", "all", "races", "protesting", "this", "."]
# ::lemmas ["if", "that", "be", "what", "they", "think", "they", "be", "wrong", "!", "nat'l", "many", "be", "all", "race", "protest", "this", "."]
(c36-1 / multi-sentence
       :snt1 (c36-0 / wrong-04
                    :ARG1 (c36-8 / they)
                    :condition (c36-7 / think-01
                                      :ARG0 c36-8
                                      :ARG1 (c36-3 / that)))
       :snt2 (c36-4 / protest-01
                    :ARG0 (c36-9 / person
                                 :mod (c36-5 / race
                                             :mod (c36-10 / all))
                                 :quant (c36-6 / many))
                    :ARG1 (c36-2 / this)))

# ::snt Here we go!
# ::tokens ["Here", "we", "go", "!"]
# ::lemmas ["here", "we", "go", "!"]
(c37-2 / go-01
       :ARG1 (c37-1 / we)
       :ARG4 (c37-0 / here))

# ::snt But I can think of two recently arrested Journalists who just got themselves a hobby.
# ::tokens ["But", "I", "can", "think", "of", "two", "recently", "arrested", "Journalists", "who", "just", "got", "themselves", "a", "hobby", "."]
# ::lemmas ["but", "i", "can", "think", "of", "two", "recently", "arrest", "journalist", "who", "just", "get", "themselves", "a", "hobby", "."]
(c38-5 / contrast-01
       :ARG2 (c38-3 / possible-01
                    :ARG1 (c38-7 / think-01
                                 :ARG0 (c38-2 / i)
                                 :ARG1 (c38-0 / journalist
                                              :ARG1-of (c38-9 / arrest-01
                                                              :time (c38-4 / recent))
                                              :ARG0-of (c38-6 / get-01
                                                              :ARG1 (c38-1 / hobby)
                                                              :mod (c38-8 / just))
                                              :quant 2))))

# ::snt do what?? Release factual info as regards to the investigation?? What do u want? Info or not??
# ::tokens ["do", "what", "?", "?", "Release", "factual", "info", "as", "regards", "to", "the", "investigation", "?", "?", "What", "do", "u", "want", "?", "Info", "or", "not", "?", "?"]
# ::lemmas ["do", "what", "?", "?", "release", "factual", "info", "as", "regard", "to", "the", "investigation", "?", "?", "what", "do", "u", "want", "?", "info", "or", "not", "?", "?"]
(c39-3 / multi-sentence
       :snt1 (c39-10 / do-02
                     :polarity (c39-13 / amr-unknown))
       :snt2 (c39-9 / release-01
                    :ARG0 (c39-0 / you)
                    :ARG1 (c39-8 / information
                                 :mod (c39-2 / factual)
                                 :topic (c39-11 / investigate-01))
                    :mode imperative)
       :snt3 (c39-1 / want-01
                    :ARG0 (c39-12 / you)
                    :ARG1 (c39-7 / amr-unknown))
       :snt4 (c39-5 / or
                    :op1 (c39-4 / information
                                :polarity -)
                    :op2 (c39-6 / information
                                :polarity -)))

# ::snt You don't have to. Your outrage is welcome, and more to the point HELPS US ALL get justice.
# ::tokens ["You", "do", "n't", "have", "to", ".", "Your", "outrage", "is", "welcome", ",", "and", "more", "to", "the", "point", "HELPS", "US", "ALL", "get", "justice", "."]
# ::lemmas ["you", "do", "not", "have", "to", ".", "your", "outrage", "be", "welcome", ",", "and", "more", "to", "the", "point", "helps", "US", "all", "get", "justice", "."]
(c40-4 / multi-sentence
       :snt1 (c40-7 / obligate-01
                    :ARG1 (c40-1 / you)
                    :polarity -)
       :snt2 (c40-13 / and
                     :op1 (c40-2 / welcome-01
                                 :ARG1 (c40-3 / outrage-01
                                              :ARG0 (c40-12 / you)))
                     :op2 (c40-0 / help-01
                                 :ARG0 c40-3
                                 :ARG1 (c40-11 / get-01
                                               :ARG0 (c40-9 / we
                                                            :mod (c40-8 / all))
                                               :ARG1 (c40-5 / justice))
                                 :ARG2 c40-9
                                 :ARG1-of (c40-6 / have-quant-91
                                                 :ARG3 (c40-10 / more)))))

# ::snt Maybe he was armed with skittles and a slab of concrete as well
# ::tokens ["Maybe", "he", "was", "armed", "with", "skittles", "and", "a", "slab", "of", "concrete", "as", "well"]
# ::lemmas ["maybe", "he", "be", "armed", "with", "skittle", "and", "a", "slab", "of", "concrete", "as", "well"]
(c41-4 / possible-01
       :ARG1 (c41-7 / arm-01
                    :ARG1 (c41-0 / he)
                    :ARG2 (c41-2 / and
                                 :op1 (c41-6 / skittle)
                                 :op2 (c41-1 / slab
                                             :consist-of (c41-5 / concrete)))
                    :mod (c41-3 / as-well)))

# ::snt people say they want info released and just get mad if it doesn't favor their opinion????
# ::tokens ["people", "say", "they", "want", "info", "released", "and", "just", "get", "mad", "if", "it", "does", "n't", "favor", "their", "opinion", "?", "?", "?", "?"]
# ::lemmas ["people", "say", "they", "want", "info", "release", "and", "just", "get", "mad", "if", "it", "do", "not", "favor", "their", "opinion", "?", "?", "?", "?"]
(c42-10 / say-01
        :polarity (c42-12 / amr-unknown)
        :ARG0 (c42-7 / person)
        :ARG1 (c42-5 / and
                     :op1 (c42-1 / want-01
                                 :ARG0 c42-7
                                 :ARG1 (c42-8 / release-01
                                              :ARG1 (c42-6 / information)))
                     :op2 (c42-9 / get-03
                                 :ARG1 c42-7
                                 :ARG2 (c42-3 / mad-04
                                              :ARG1 c42-7
                                              :ARG2 (c42-2 / favor-01
                                                           :ARG0 c42-6
                                                           :ARG1 (c42-11 / thing
                                                                         :ARG1-of (c42-4 / opine-01
                                                                                         :ARG0 c42-7))
                                                           :polarity -)
                                              :mod (c42-0 / just)))))

# ::snt That's the real tragedy of racism. I happens to the highest and the lowest. Young and old...
# ::tokens ["That", "'s", "the", "real", "tragedy", "of", "racism", ".", "I", "happens", "to", "the", "highest", "and", "the", "lowest", ".", "Young", "and", "old", "..."]
# ::lemmas ["that", "be", "the", "real", "tragedy", "of", "racism", ".", "i", "happen", "to", "the", "high", "and", "the", "low", ".", "young", "and", "old", "..."]
(c43-3 / multi-sentence
       :snt1 (c43-15 / tragedy
                     :ARG1-of (c43-12 / real-04)
                     :topic (c43-9 / racism)
                     :domain (c43-13 / that))
       :snt2 (c43-0 / happen-02
                    :ARG1 (c43-8 / i)
                    :ARG2 (c43-16 / and
                                  :op1 (c43-2 / have-degree-91
                                              :ARG1 c43-8
                                              :ARG2 (c43-10 / high-02)
                                              :ARG3 (c43-11 / most))
                                  :op2 (c43-14 / have-degree-91
                                               :ARG1 c43-8
                                               :ARG2 (c43-4 / low-04
                                                            :ARG1 c43-8)
                                               :ARG3 (c43-5 / most))))
       :snt3 (c43-7 / and
                    :op1 (c43-1 / young)
                    :op2 (c43-6 / old)))

# ::snt well he released the name..that's done. But why get upset that they release other info? I'm confused
# ::tokens ["well", "he", "released", "the", "name", "..", "that", "'s", "done", ".", "But", "why", "get", "upset", "that", "they", "release", "other", "info", "?", "I", "'m", "confused"]
# ::lemmas ["well", "he", "release", "the", "name", "..", "that", "be", "do", ".", "but", "why", "get", "upset", "that", "they", "release", "other", "info", "?", "i", "be", "confused"]
(c44-2 / multi-sentence
       :snt1 (c44-9 / release-01
                    :ARG0 (c44-0 / he)
                    :ARG1 (c44-15 / thing
                                  :ARG2-of (c44-8 / name-01))
                    :mod (c44-1 / well)
                    :ARG1-of (c44-4 / be-done-08
                                    :ARG0 c44-0))
       :snt2 (c44-10 / contrast-01
                     :ARG2 (c44-11 / cause-01
                                   :ARG0 (c44-16 / amr-unknown)
                                   :ARG1 (c44-3 / upset-01
                                                :ARG0 (c44-7 / release-01
                                                             :ARG0 (c44-13 / they)
                                                             :ARG1 (c44-6 / information
                                                                          :mod (c44-5 / other)))
                                                :ARG1 (c44-12 / i))))
       :snt3 (c44-14 / confuse-01
                     :ARG1 c44-12))

# ::snt It has to be dead in the water cos if it goes on trial they are roasted,
# ::tokens ["It", "has", "to", "be", "dead", "in", "the", "water", "cos", "if", "it", "goes", "on", "trial", "they", "are", "roasted", ","]
# ::lemmas ["it", "have", "to", "be", "dead", "in", "the", "water", "cos", "if", "it", "go", "on", "trial", "they", "be", "roast", ","]
(c45-1 / obligate-01
       :ARG2 (c45-2 / die-01
                    :ARG1 (c45-7 / they)
                    :location (c45-0 / water))
       :ARG1-of (c45-3 / cause-01
                       :ARG0 (c45-4 / roast-01
                                    :ARG1 c45-7
                                    :condition (c45-5 / go-on-15
                                                      :ARG1 (c45-6 / try-02
                                                                   :ARG1 c45-7)))))

# ::snt I'd like to say neither do I, but...
# ::tokens ["I", "'d", "like", "to", "say", "neither", "do", "I", ",", "but", "..."]
# ::lemmas ["i", "would", "like", "to", "say", "neither", "do", "i", ",", "but", "..."]
(c46-4 / contrast-01
       :ARG1 (c46-0 / like-02
                    :ARG0 (c46-2 / i)
                    :ARG1 (c46-5 / say-01
                                 :ARG0 c46-2
                                 :ARG1 (c46-3 / do-02
                                              :ARG0 c46-2
                                              :ARG1 (c46-1 / either)
                                              :polarity -))))

# ::snt Cop has no criminal/disciplinary record, they could say shooting was self-defence
# ::tokens ["Cop", "has", "no", "criminal", "/", "disciplinary", "record", ",", "they", "could", "say", "shooting", "was", "self", "-", "defence"]
# ::lemmas ["Cop", "have", "no", "criminal", "/", "disciplinary", "record", ",", "they", "could", "say", "shooting", "be", "self", "-", "defence"]
(c47-3 / multi-sentence
       :snt1 (c47-0 / have-03
                    :ARG0 (c47-7 / cop)
                    :ARG1 (c47-6 / record
                                 :mod (c47-10 / slash
                                              :op1 (c47-8 / criminal-03)
                                              :op2 (c47-9 / disciplinary)))
                    :polarity -)
       :snt2 (c47-5 / possible-01
                    :ARG1 (c47-4 / say-01
                                 :ARG0 (c47-11 / they)
                                 :ARG1 (c47-1 / defend-01
                                              :ARG0 c47-7
                                              :ARG1 c47-7
                                              :mod (c47-2 / self)))))

# ::snt yup, you got us Kyle. That's it. ding ding, you win the prize
# ::tokens ["yup", ",", "you", "got", "us", "Kyle", ".", "That", "'s", "it", ".", "ding", "ding", ",", "you", "win", "the", "prize"]
# ::lemmas ["yup", ",", "you", "get", "we", "Kyle", ".", "that", "be", "it", ".", "ding", "ding", ",", "you", "win", "the", "prize"]
(c48-2 / multi-sentence
       :snt1 (c48-7 / get-02
                    :ARG0 (c48-0 / you)
                    :ARG1 (c48-5 / person
                                 :name (c48-4 / name
                                              :op1 "Kyle"))
                    :ARG2 (c48-1 / we)
                    :mod (c48-8 / yup))
       :snt2 (c48-3 / be-it-07
                    :ARG1 (c48-9 / that))
       :snt3 (c48-6 / ding-d))

# ::snt Day Pres was elected I cried like a baby&amp;told my biracial son "baby,NOW you really CAN be anything u want!
# ::tokens ["Day", "Pres", "was", "elected", "I", "cried", "like", "a", "baby&amp;told", "my", "biracial", "son", "\"", "baby", ",", "NOW", "you", "really", "CAN", "be", "anything", "u", "want", "!"]
# ::lemmas ["Day", "Pres", "be", "elect", "i", "cry", "like", "a", "baby&amp;told", "my", "biracial", "son", "\"", "baby", ",", "now", "you", "really", "can", "be", "anything", "u", "want", "!"]
(c49-5 / and
       :op1 (c49-18 / cry-02
                    :ARG0 (c49-15 / i)
                    :time (c49-9 / elect-01
                                 :ARG1 (c49-1 / person
                                              :name (c49-10 / name
                                                            :op1 "Pres"))
                                 :mod (c49-2 / day))
                    :ARG1-of (c49-12 / resemble-01
                                     :ARG2 (c49-14 / and
                                                   :op1 (c49-8 / baby)
                                                   :op2 (c49-11 / amp))))
       :op2 (c49-20 / tell-01
                    :ARG0 c49-15
                    :ARG1 (c49-4 / possible-01
                                 :ARG1 (c49-19 / anything
                                               :ARG1-of (c49-13 / want-01
                                                                :ARG0 (c49-7 / person
                                                                             :mod (c49-16 / biracial)
                                                                             :ARG0-of (c49-6 / have-rel-role-91
                                                                                             :ARG1 c49-15
                                                                                             :ARG2 (c49-3 / son)))))
                                 :time (c49-17 / now)
                                 :ARG1-of (c49-0 / real-04))
                    :ARG2 c49-7))

# ::snt Not at all upset at you just UPSET! MLK&amp;Malcolm X, Medgar Evers, etc did NOT die for THIS!
# ::tokens ["Not", "at", "all", "upset", "at", "you", "just", "UPSET", "!", "MLK&amp;Malcolm", "X", ",", "Medgar", "Evers", ",", "etc", "did", "NOT", "die", "for", "THIS", "!"]
# ::lemmas ["not", "at", "all", "upset", "at", "you", "just", "upset", "!", "MLK&amp;Malcolm", "X", ",", "Medgar", "Evers", ",", "etc", "do", "not", "die", "for", "this", "!"]
(c50-1 / multi-sentence
       :snt1 (c50-13 / upset-01
                     :ARG0 (c50-11 / UPSET
                                   :domain (c50-16 / you)
                                   :mod (c50-0 / just))
                     :ARG1 (c50-15 / i)
                     :degree (c50-7 / at-all)
                     :polarity -)
       :snt2 (c50-5 / die-01
                    :ARG1 (c50-14 / and
                                  :op1 (c50-4 / person
                                              :name (c50-10 / name
                                                            :op1 "MLK"))
                                  :op2 (c50-6 / person
                                              :name (c50-17 / name
                                                            :op1 "amp"))
                                  :op3 (c50-8 / person
                                              :name (c50-2 / name
                                                           :op1 "Malcolm"
                                                           :op2 "X"))
                                  :op4 (c50-12 / person
                                               :name (c50-3 / name
                                                            :op1 "Medgar"
                                                            :op2 "Evers"))
                                  :op5 (c50-9 / et-cetera))
                    :ARG1-of (c50-18 / cause-01
                                     :ARG0 (c50-19 / this))
                    :polarity -))
