# ::snt . Police Chief Must Resign NOW.
# ::tokens [".", "Police", "Chief", "Must", "Resign", "NOW", "."]
# ::lemmas [".", "police", "Chief", "must", "resign", "now", "."]
(c1-1 / obligate-01
      :ARG2 (c1-4 / resign-01
                  :ARG0 (c1-3 / person
                              :ARG0-of (c1-0 / have-org-role-91
                                             :ARG1 (c1-6 / police)
                                             :ARG2 (c1-5 / chief)))
                  :time (c1-2 / now)))

# ::snt he "sat on it for as long as he could" and the State cops have been there all along. Wow - what a hero this guy is ...
# ::tokens ["he", "\"", "sat", "on", "it", "for", "as", "long", "as", "he", "could", "\"", "and", "the", "State", "cops", "have", "been", "there", "all", "along", ".", "Wow", "-", "what", "a", "hero", "this", "guy", "is", "..."]
# ::lemmas ["he", "\"", "sit", "on", "it", "for", "as", "long", "as", "he", "could", "\"", "and", "the", "State", "cop", "have", "be", "there", "all", "along", ".", "wow", "-", "what", "a", "hero", "this", "guy", "be", "..."]
(c2-3 / multi-sentence
      :snt1 (c2-16 / and
                   :op1 (c2-14 / sit-01
                               :ARG1 (c2-0 / he)
                               :ARG2 (c2-9 / it)
                               :duration (c2-2 / long-03
                                               :ARG2-of (c2-4 / have-degree-91
                                                              :ARG1 c2-14
                                                              :ARG3 (c2-6 / equal)
                                                              :ARG4 (c2-11 / possible-01
                                                                           :ARG1 c2-14))))
                   :op2 (c2-5 / be-located-at-91
                              :ARG1 (c2-12 / cop
                                           :mod (c2-7 / state))
                              :ARG2 c2-9
                              :duration (c2-8 / all-along)))
      :snt2 (c2-1 / wow-01
                  :ARG1 (c2-10 / hero
                               :domain (c2-13 / guy
                                              :mod (c2-15 / this)))
                  :mode expressive))

# ::snt and he can take the Mayor with him!
# ::tokens ["and", "he", "can", "take", "the", "Mayor", "with", "him", "!"]
# ::lemmas ["and", "he", "can", "take", "the", "Mayor", "with", "he", "!"]
(c3-4 / and
      :op2 (c3-2 / possible-01
                 :ARG1 (c3-3 / take-01
                             :ARG0 (c3-0 / he)
                             :ARG1 (c3-1 / mayor)
                             :accompanier c3-0)))

# ::snt Indeed outrageous. He serendipitously just cut out the legs of the cop/shooters self defense claim as to knowledge of robbery.
# ::tokens ["Indeed", "outrageous", ".", "He", "serendipitously", "just", "cut", "out", "the", "legs", "of", "the", "cop", "/", "shooters", "self", "defense", "claim", "as", "to", "knowledge", "of", "robbery", "."]
# ::lemmas ["indeed", "outrageous", ".", "he", "serendipitously", "just", "cut", "out", "the", "leg", "of", "the", "cop", "/", "shooter", "self", "defense", "claim", "as", "to", "knowledge", "of", "robbery", "."]
(c4-3 / multi-sentence
      :snt1 (c4-5 / outrageous-02
                  :mod (c4-7 / indeed))
      :snt2 (c4-9 / cut-out-06
                  :ARG0 (c4-0 / he)
                  :ARG1 (c4-2 / leg
                              :part-of (c4-8 / claim-01
                                             :ARG0 (c4-12 / slash
                                                          :op1 (c4-11 / cop)
                                                          :op2 (c4-6 / shoot-02))
                                             :ARG1 (c4-13 / know-01
                                                          :ARG0 c4-12
                                                          :ARG1 (c4-10 / rob-01))))
                  :mod (c4-1 / just)
                  :manner (c4-4 / serendipitous)))

# ::snt What happened? I couldn't watch press conference.
# ::tokens ["What", "happened", "?", "I", "could", "n't", "watch", "press", "conference", "."]
# ::lemmas ["what", "happen", "?", "i", "could", "not", "watch", "press", "conference", "."]
(c5-1 / multi-sentence
      :snt1 (c5-2 / event
                  :mod (c5-7 / amr-unknown))
      :snt2 (c5-4 / possible-01
                  :ARG1 (c5-0 / watch-01
                              :ARG0 (c5-3 / i)
                              :ARG1 (c5-5 / conference
                                          :mod (c5-6 / press)))
                  :polarity -))

# ::snt Yet sadly expected. Straight out of the Guiliani playbook.
# ::tokens ["Yet", "sadly", "expected", ".", "Straight", "out", "of", "the", "Guiliani", "playbook", "."]
# ::lemmas ["yet", "sadly", "expect", ".", "straight", "out", "of", "the", "Guiliani", "playbook", "."]
(c6-1 / multi-sentence
      :snt1 (c6-3 / expect-01
                  :mod (c6-0 / yet)
                  :ARG0-of (c6-7 / sad-02))
      :snt2 (c6-2 / be-from-91
                  :ARG2 (c6-6 / playbook
                              :poss (c6-8 / person
                                          :name (c6-5 / name
                                                      :op1 "Guiliani")))
                  :manner (c6-4 / straight)))

# ::snt . Yes. Craziest thing I ever heard. Alleged theft &amp; stop not related so why release video?
# ::tokens [".", "Yes", ".", "Craziest", "thing", "I", "ever", "heard", ".", "Alleged", "theft", "&", "amp", ";", "stop", "not", "related", "so", "why", "release", "video", "?"]
# ::lemmas [".", "yes", ".", "craziest", "thing", "i", "ever", "hear", ".", "alleged", "theft", "&", "amp", ";", "stop", "not", "relate", "so", "why", "release", "video", "?"]
(c7-0 / multi-sentence
      :snt1 (c7-15 / yes)
      :snt2 (c7-7 / have-degree-91
                  :ARG1 (c7-18 / thing
                               :ARG1-of (c7-6 / hear-01
                                              :ARG0 (c7-14 / i)
                                              :time (c7-8 / ever)))
                  :ARG2 (c7-16 / crazy-03
                               :ARG1 c7-18)
                  :ARG3 (c7-11 / most))
      :snt3 (c7-5 / and
                  :op1 (c7-13 / allege-01
                              :ARG1 (c7-4 / steal-01))
                  :op2 (c7-10 / amp))
      :snt4 (c7-9 / stop-01
                  :ARG0 (c7-17 / you)
                  :ARG1 (c7-12 / relate-01
                               :ARG1 c7-5
                               :polarity -)
                  :ARG0-of (c7-3 / cause-01
                                 :ARG1 (c7-1 / release-01
                                             :ARG1 (c7-2 / video)))
                  :polarity -
                  :mode imperative))

# ::snt not only outrageous but SHEER INCOMPETENCE SO many questions, so little answers as the lies get debunked
# ::tokens ["not", "only", "outrageous", "but", "SHEER", "INCOMPETENCE", "SO", "many", "questions", ",", "so", "little", "answers", "as", "the", "lies", "get", "debunked"]
# ::lemmas ["not", "only", "outrageous", "but", "sheer", "INCOMPETENCE", "so", "many", "question", ",", "so", "little", "answer", "as", "the", "lie", "get", "debunk"]
(c8-9 / contrast-01
      :ARG1 (c8-5 / outrageous-02
                  :mod (c8-1 / only
                             :polarity -))
      :ARG2 (c8-7 / question-01
                  :ARG0 (c8-11 / she)
                  :ARG1-of (c8-0 / have-quant-91
                                 :ARG2 (c8-2 / many)
                                 :ARG3 (c8-6 / so))
                  :ARG2-of (c8-13 / answer-01
                                  :mod (c8-3 / little)
                                  :time (c8-8 / debunk-01
                                              :ARG1 (c8-12 / thing
                                                           :ARG1-of (c8-10 / lie-08))))
                  :ARG1-of c8-0
                  :ARG2 c8-2)
      :ARG3 (c8-4 / so))

# ::snt never jump to conclusions not knowing the full facts of the case
# ::tokens ["never", "jump", "to", "conclusions", "not", "knowing", "the", "full", "facts", "of", "the", "case"]
# ::lemmas ["never", "jump", "to", "conclusion", "not", "know", "the", "full", "fact", "of", "the", "case"]
(c9-0 / jump-03
      :ARG1 (c9-1 / you)
      :ARG2 (c9-6 / conclude-01
                  :ARG0 c9-1)
      :time (c9-3 / ever)
      :ARG1-of (c9-5 / cause-01
                     :ARG0 (c9-8 / know-01
                                 :ARG0 c9-1
                                 :ARG1 (c9-2 / fact
                                             :mod (c9-4 / full)
                                             :part-of (c9-7 / case-03))
                                 :polarity -))
      :polarity -)

# ::snt 'Outrageous' doesn't begin to describe it. Makes no sense.
# ::tokens ["'", "Outrageous", "'", "does", "n't", "begin", "to", "describe", "it", ".", "Makes", "no", "sense", "."]
# ::lemmas ["'", "outrageous", "'", "do", "not", "begin", "to", "describe", "it", ".", "make", "no", "sense", "."]
(c10-0 / multi-sentence
       :snt1 (c10-1 / begin-01
                    :ARG0 (c10-4 / describe-01
                                 :ARG1 (c10-3 / it)
                                 :ARG2 (c10-2 / outrage-01))
                    :polarity -)
       :snt2 (c10-5 / sense-02
                    :polarity -))

# ::snt Right!! Un-be-liev-able!!!
# ::tokens ["Right", "!", "!", "Un", "-", "be", "-", "liev", "-", "able", "!", "!", "!"]
# ::lemmas ["right", "!", "!", "Un", "-", "be", "-", "liev", "-", "able", "!", "!", "!"]
(c11-2 / multi-sentence
       :snt1 (c11-1 / right-06)
       :snt2 (c11-0 / possible-01
                    :ARG1 (c11-3 / believe-01)
                    :polarity -
                    :mode expressive))

# ::snt He is useless at this point.
# ::tokens ["He", "is", "useless", "at", "this", "point", "."]
# ::lemmas ["he", "be", "useless", "at", "this", "point", "."]
(c12-3 / useless
       :domain (c12-0 / he)
       :time (c12-1 / point
                    :mod (c12-2 / this)))

# ::snt omg! He just contradicted himself and totally just put that tape out to smear!
# ::tokens ["omg", "!", "He", "just", "contradicted", "himself", "and", "totally", "just", "put", "that", "tape", "out", "to", "smear", "!"]
# ::lemmas ["omg", "!", "he", "just", "contradict", "himself", "and", "totally", "just", "put", "that", "tape", "out", "to", "smear", "!"]
(c13-2 / multi-sentence
       :snt1 (c13-3 / oh-my-god
                    :mode expressive)
       :snt2 (c13-11 / and
                     :op1 (c13-6 / contradict-01
                                 :ARG0 (c13-0 / he
                                              :ARG1-of c13-6)
                                 :time (c13-1 / just))
                     :op2 (c13-5 / put-out-10
                                 :ARG0 c13-0
                                 :ARG1 (c13-9 / tape
                                              :mod (c13-7 / that))
                                 :purpose (c13-8 / smear-02
                                                 :ARG0 c13-0
                                                 :ARG1 c13-9)
                                 :mod (c13-10 / just)
                                 :mod (c13-4 / total))))

# ::snt What Chief of Police Thomas Jackson did was outrageous!
# ::tokens ["What", "Chief", "of", "Police", "Thomas", "Jackson", "did", "was", "outrageous", "!"]
# ::lemmas ["what", "Chief", "of", "Police", "Thomas", "Jackson", "do", "be", "outrageous", "!"]
(c14-1 / outrageous-02
       :ARG0 (c14-6 / thing
                    :ARG1-of (c14-4 / do-02
                                    :ARG0 (c14-3 / person
                                                 :name (c14-2 / name
                                                              :op1 "Thomas"
                                                              :op2 "Jackson")
                                                 :ARG0-of (c14-0 / have-org-role-91
                                                                 :ARG1 (c14-7 / police)
                                                                 :ARG2 (c14-5 / chief))))))

# ::snt which actions?
# ::tokens ["which", "actions", "?"]
# ::lemmas ["which", "action", "?"]
(c15-1 / act-02
       :mod (c15-0 / amr-unknown))

# ::snt THANK YOU!If your cool head is flipping,It's okay4the OLd Broads to have a meltdown. Wake us when it's over.
# ::tokens ["THANK", "YOU!If", "your", "cool", "head", "is", "flipping", ",", "It", "'s", "okay4the", "OLd", "Broads", "to", "have", "a", "meltdown", ".", "Wake", "us", "when", "it", "'s", "over", "."]
# ::lemmas ["thank", "YOU!If", "your", "cool", "head", "be", "flip", ",", "it", "be", "okay4the", "old", "broad", "to", "have", "a", "meltdown", ".", "wake", "we", "when", "it", "be", "over", "."]
(c16-4 / multi-sentence
       :snt1 (c16-16 / thank-01
                     :ARG0 (c16-8 / i)
                     :ARG1 (c16-1 / you)
                     :mode expressive)
       :snt2 (c16-7 / okay-04
                    :ARG1 (c16-11 / meltdown
                                  :mod (c16-12 / person
                                               :name (c16-10 / name
                                                             :op1 "Old"
                                                             :op2 "Broads")))
                    :condition (c16-3 / flip-01
                                      :ARG1 (c16-0 / head
                                                   :ARG1-of (c16-13 / cool-04)
                                                   :part-of (c16-15 / you))))
       :snt3 (c16-2 / wake-01
                    :ARG0 (c16-6 / you)
                    :ARG1 (c16-9 / we)
                    :time (c16-5 / over-01
                                 :ARG1 (c16-14 / it))
                    :mode imperative))

# ::snt and beyond incompetent. Can't wait for all the (deserved) lawsuits to roll in for Ferguson police and city.
# ::tokens ["and", "beyond", "incompetent", ".", "Ca", "n't", "wait", "for", "all", "the", "(", "deserved", ")", "lawsuits", "to", "roll", "in", "for", "Ferguson", "police", "and", "city", "."]
# ::lemmas ["and", "beyond", "incompetent", ".", "can", "not", "wait", "for", "all", "the", "(", "deserved", ")", "lawsuit", "to", "roll", "in", "for", "Ferguson", "police", "and", "city", "."]
(c17-1 / multi-sentence
       :snt1 (c17-13 / and
                     :op2 (c17-8 / competent-01
                                 :degree (c17-2 / beyond)
                                 :polarity -))
       :snt2 (c17-6 / possible-01
                    :ARG1 (c17-0 / wait-01
                                 :ARG2 (c17-7 / roll-in-02
                                              :ARG1 (c17-11 / sue-02
                                                            :mod (c17-3 / all)
                                                            :ARG1-of (c17-9 / deserve-01))
                                              :beneficiary (c17-5 / and
                                                                  :op1 (c17-12 / police
                                                                               :mod (c17-10 / city
                                                                                            :name (c17-4 / name
                                                                                                         :op1 "Ferguson")
                                                                                            :op2-of c17-5)))))
                    :polarity -))

# ::snt making a bad situation much worse.
# ::tokens ["making", "a", "bad", "situation", "much", "worse", "."]
# ::lemmas ["make", "a", "bad", "situation", "much", "bad", "."]
(c18-1 / worsen-01
       :ARG1 (c18-0 / situation
                    :ARG1-of (c18-3 / bad-07))
       :quant (c18-2 / much))

# ::snt : What Chief of Police Thomas Jackson did was outrageous! this is unreal!
# ::tokens [":", "What", "Chief", "of", "Police", "Thomas", "Jackson", "did", "was", "outrageous", "!", "this", "is", "unreal", "!"]
# ::lemmas [":", "what", "Chief", "of", "Police", "Thomas", "Jackson", "do", "be", "outrageous", "!", "this", "be", "unreal", "!"]
(c19-1 / multi-sentence
       :snt1 (c19-2 / outrageous-02
                    :ARG0 (c19-9 / thing
                                 :ARG1-of (c19-5 / do-02
                                                 :ARG0 (c19-4 / person
                                                              :name (c19-3 / name
                                                                           :op1 "Thomas"
                                                                           :op2 "Jackson")
                                                              :ARG0-of (c19-0 / have-org-role-91
                                                                              :ARG1 (c19-10 / police)
                                                                              :ARG2 (c19-6 / chief))))))
       :snt2 (c19-7 / realistic-03
                    :ARG1 (c19-8 / this)
                    :polarity -))
