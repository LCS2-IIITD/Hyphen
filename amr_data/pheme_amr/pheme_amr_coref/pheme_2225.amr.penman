# ::snt Joan that does not justify attacking civilians in canada or elsewhere
# ::tokens ["Joan", "that", "does", "not", "justify", "attacking", "civilians", "in", "canada", "or", "elsewhere"]
# ::lemmas ["Joan", "that", "do", "not", "justify", "attack", "civilian", "in", "canada", "or", "elsewhere"]
(c1-5 / person
      :name (c1-3 / name
                  :op1 "Joan")
      :ARG0-of (c1-0 / justify-01
                     :ARG1 (c1-8 / attack-01
                                 :ARG1 (c1-7 / civilian
                                             :location (c1-1 / or
                                                             :op1 (c1-6 / country
                                                                        :name (c1-4 / name
                                                                                    :op1 "Canada"))
                                                             :op2 (c1-2 / elsewhere))))
                     :polarity -))

# ::snt Whoa! thank Mr.Harper for getting involved in the U.S.'s constant interfering in the Middle East.
# ::tokens ["Whoa", "!", "thank", "Mr.", "Harper", "for", "getting", "involved", "in", "the", "U.S.", "'s", "constant", "interfering", "in", "the", "Middle", "East", "."]
# ::lemmas ["whoa", "!", "thank", "Mr.", "Harper", "for", "get", "involve", "in", "the", "U.S.", "'s", "constant", "interfering", "in", "the", "Middle", "East", "."]
(c2-10 / thank-01
       :ARG1 (c2-5 / person
                   :name (c2-3 / name
                               :op1 "Mr."
                               :op2 "Harper"))
       :ARG2 (c2-1 / involve-01
                   :ARG1 c2-5
                   :ARG2 (c2-8 / interfere-01
                               :ARG0 (c2-7 / country
                                           :name (c2-4 / name
                                                       :op1 "U.S."))
                               :ARG1 (c2-0 / world-region
                                           :name (c2-6 / name
                                                       :op1 "Middle"
                                                       :op2 "East"))
                               :mod (c2-9 / constant)))
       :mod (c2-2 / whoa
                  :mode expressive))

# ::snt The Canadian Government needs to enact the War Measures Act and arrest all Islamists.
# ::tokens ["The", "Canadian", "Government", "needs", "to", "enact", "the", "War", "Measures", "Act", "and", "arrest", "all", "Islamists", "."]
# ::lemmas ["The", "Canadian", "Government", "need", "to", "enact", "the", "War", "Measures", "Act", "and", "arrest", "all", "Islamists", "."]
(c3-3 / need-01
      :ARG0 (c3-8 / government-organization
                  :ARG0-of (c3-6 / govern-01
                                 :ARG1 (c3-7 / country
                                             :name (c3-4 / name
                                                         :op1 "Canada"))))
      :ARG1 (c3-13 / and
                   :op1 (c3-1 / enact-01
                              :ARG0 c3-8
                              :ARG1 (c3-0 / law
                                          :name (c3-5 / name
                                                      :op1 "War"
                                                      :op2 "M Measures"
                                                      :op3 "Act")))
                   :op2 (c3-2 / arrest-01
                              :ARG0 c3-8
                              :ARG1 (c3-9 / person
                                          :mod (c3-10 / religious-group
                                                      :name (c3-11 / name
                                                                   :op1 "Islamism"))
                                          :mod (c3-12 / all)))))

# ::snt I wasn't justifying it,just mentioning consequences for actions.
# ::tokens ["I", "was", "n't", "justifying", "it", ",", "just", "mentioning", "consequences", "for", "actions", "."]
# ::lemmas ["i", "be", "not", "justify", "it", ",", "just", "mention", "consequence", "for", "action", "."]
(c4-4 / contrast-01
      :ARG1 (c4-0 / justify-01
                  :ARG0 (c4-2 / i)
                  :ARG1 (c4-5 / it)
                  :polarity -)
      :ARG2 (c4-1 / mention-01
                  :ARG0 c4-2
                  :ARG1 (c4-3 / consequence-03
                              :ARG3 (c4-7 / act-02))
                  :mod (c4-6 / just)))

# ::snt your an idiot
# ::tokens ["your", "an", "idiot"]
# ::lemmas ["your", "an", "idiot"]
(c5-1 / idiot
      :domain (c5-0 / you))

# ::snt why the fuck would CBC post this video!!! Fucking disgusting on you part CBC!!!!
# ::tokens ["why", "the", "fuck", "would", "CBC", "post", "this", "video", "!", "!", "!", "Fucking", "disgusting", "on", "you", "part", "CBC", "!", "!", "!", "!"]
# ::lemmas ["why", "the", "fuck", "would", "CBC", "post", "this", "video", "!", "!", "!", "fucking", "disgust", "on", "you", "part", "CBC", "!", "!", "!", "!"]
(c6-2 / multi-sentence
      :snt1 (c6-9 / cause-01
                  :ARG0 (c6-12 / amr-unknown)
                  :ARG1 (c6-7 / post-01
                              :ARG0 (c6-11 / publication
                                           :name (c6-5 / name
                                                       :op1 "CBC"))
                              :ARG1 (c6-6 / video
                                          :mod (c6-10 / this)))
                  :mod (c6-1 / fuck
                             :mode expressive))
      :snt2 (c6-8 / disgust-01
                  :ARG1 (c6-0 / you
                              :mod (c6-3 / part))
                  :mod (c6-4 / fucking)))

# ::snt that consequences will have a backlash at home here, that's what is worry some, hope I'm wrong thou
# ::tokens ["that", "consequences", "will", "have", "a", "backlash", "at", "home", "here", ",", "that", "'s", "what", "is", "worry", "some", ",", "hope", "I", "'m", "wrong", "thou"]
# ::lemmas ["that", "consequence", "will", "have", "a", "backlash", "at", "home", "here", ",", "that", "be", "what", "be", "worry", "some", ",", "hope", "i", "be", "wrong", "thou"]
(c7-11 / and
       :op1 (c7-0 / have-03
                  :ARG0 (c7-8 / consequence-03
                              :mod (c7-10 / that))
                  :ARG1 (c7-3 / backlash-01
                              :location (c7-2 / home))
                  :location (c7-7 / here))
       :op2 (c7-1 / worry-01
                  :ARG0 c7-8
                  :ARG1 (c7-9 / some))
       :op3 (c7-4 / hope-01
                  :ARG0 (c7-5 / i)
                  :ARG1 (c7-6 / wrong-04
                              :ARG1 c7-5)))
