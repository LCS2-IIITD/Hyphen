# ::snt Can't honestly connect journos killed at for what they wrote to journos dying for what they report
# ::tokens ["Ca", "n't", "honestly", "connect", "journos", "killed", "at", "for", "what", "they", "wrote", "to", "journos", "dying", "for", "what", "they", "report"]
# ::lemmas ["can", "not", "honestly", "connect", "journo", "kill", "at", "for", "what", "they", "write", "to", "journo", "die", "for", "what", "they", "report"]
(c1-4 / possible-01
      :ARG1 (c1-6 / connect-01
                  :ARG1 (c1-12 / kill-01
                               :ARG1 (c1-0 / journalist)
                               :ARG1-of (c1-5 / cause-01
                                              :ARG0 (c1-10 / thing
                                                           :ARG1-of (c1-1 / write-01
                                                                          :ARG0 c1-0
                                                                          :ARG2 (c1-13 / journalist)))))
                  :ARG2 (c1-2 / journalist
                              :ARG1-of (c1-7 / die-01
                                             :ARG1-of (c1-9 / cause-01
                                                            :ARG0 (c1-11 / thing
                                                                         :ARG1-of (c1-8 / report-01
                                                                                        :ARG0 c1-2)))))
                  :ARG1-of (c1-3 / honest-01))
      :polarity -)

# ::snt : Even before killings, journalism had become a life-threatening proposition for some.
# ::tokens [":", "Even", "before", "killings", ",", "journalism", "had", "become", "a", "life", "-", "threatening", "proposition", "for", "some", "."]
# ::lemmas [":", "even", "before", "killing", ",", "journalism", "have", "become", "a", "life", "-", "threaten", "proposition", "for", "some", "."]
(c2-2 / become-01
      :ARG1 (c2-0 / journalism)
      :ARG2 (c2-9 / thing
                  :ARG1-of (c2-5 / propose-01
                                 :ARG0 (c2-8 / some))
                  :ARG0-of (c2-7 / threaten-01
                                 :ARG1 (c2-1 / life)
                                 :ARG2 c2-8))
      :time (c2-6 / before
                  :op1 (c2-4 / kill-01)
                  :mod (c2-3 / even)))

# ::snt good article. As a writer I thought of this myself.
# ::tokens ["good", "article", ".", "As", "a", "writer", "I", "thought", "of", "this", "myself", "."]
# ::lemmas ["good", "article", ".", "as", "a", "writer", "i", "think", "of", "this", "myself", "."]
(c3-1 / multi-sentence
      :snt1 (c3-6 / article
                  :ARG1-of (c3-3 / good-02))
      :snt2 (c3-5 / think-01
                  :ARG0 (c3-2 / i
                              :ARG0-of (c3-0 / write-01))
                  :ARG1 (c3-4 / this)))

# ::snt That's not true ('many places').
# ::tokens ["That", "'s", "not", "true", "(", "'", "many", "places", "'", ")", "."]
# ::lemmas ["that", "be", "not", "true", "(", "'", "many", "place", "'", ")", "."]
(c4-2 / true-01
      :ARG1 (c4-3 / that)
      :location (c4-1 / place
                      :quant (c4-0 / many))
      :polarity -)

# ::snt Al Jazeera 's reporters still jailed n Egypt; problem n Russia, entire Asian continents,central&ampth America
# ::tokens ["Al", "Jazeera", "'s", "reporters", "still", "jailed", "n", "Egypt", ";", "problem", "n", "Russia", ",", "entire", "Asian", "continents", ",", "central&ampth", "America"]
# ::lemmas ["Al", "Jazeera", "'s", "reporter", "still", "jail", "n", "Egypt", ";", "problem", "n", "Russia", ",", "entire", "Asian", "continent", ",", "central&ampth", "America"]
(c5-8 / and
      :op1 (c5-0 / jail-01
                 :ARG1 (c5-4 / person
                             :ARG0-of (c5-13 / report-01)
                             :poss (c5-7 / publication
                                         :name (c5-11 / name
                                                      :op1 "Al"
                                                      :op2 "Jazeera")))
                 :mod (c5-6 / still)
                 :location (c5-19 / country
                                  :name (c5-18 / name
                                               :op1 "Egypt")))
      :op2 (c5-9 / problem
                 :location (c5-15 / and
                                  :op1 (c5-5 / continent
                                             :name (c5-2 / name
                                                         :op1 "Russia"))
                                  :op2 (c5-16 / continent
                                              :mod (c5-17 / continent
                                                          :name (c5-3 / name
                                                                      :op1 "Asia"))
                                              :mod (c5-10 / entire))
                                  :op3 (c5-12 / and
                                              :op1 (c5-1 / center)
                                              :op2 (c5-14 / continent
                                                          :name (c5-20 / name
                                                                       :op1 "America"))))))

# ::snt sick people's eh nothing to thinks of only to kills what kind human being from same w their brain I wonder d brai
# ::tokens ["sick", "people", "'s", "eh", "nothing", "to", "thinks", "of", "only", "to", "kills", "what", "kind", "human", "being", "from", "same", "w", "their", "brain", "I", "wonder", "d", "brai"]
# ::lemmas ["sick", "people", "'s", "eh", "nothing", "to", "think", "of", "only", "to", "kill", "what", "kind", "human", "be", "from", "same", "w", "their", "brain", "i", "wonder", "d", "brai"]
(c6-2 / multi-sentence
      :snt1 (c6-13 / think-01
                   :ARG0 (c6-11 / person)
                   :ARG1 (c6-9 / nothing
                               :ARG0 c6-11)
                   :ARG1 c6-9)
      :purpose (c6-8 / kill-01
                     :ARG0 c6-11
                     :ARG1 (c6-4 / being
                                 :mod (c6-0 / human)
                                 :mod (c6-6 / kind
                                            :mod (c6-15 / amr-unknown))
                                 :source (c6-12 / brain
                                                :part-of (c6-14 / person)))
                     :mod (c6-5 / only))
      :snt2 (c6-1 / wonder-01
                  :ARG0 (c6-7 / i)
                  :ARG1 (c6-3 / person
                              :name (c6-10 / name
                                           :op1 "d"
                                           :op2 "brai"))))

# ::snt So satire is journalism? I knew you guys made stuff up.
# ::tokens ["So", "satire", "is", "journalism", "?", "I", "knew", "you", "guys", "made", "stuff", "up", "."]
# ::lemmas ["so", "satire", "be", "journalism", "?", "i", "know", "you", "guy", "make", "stuff", "up", "."]
(c7-2 / multi-sentence
      :snt1 (c7-4 / infer-01
                  :ARG1 (c7-0 / journalism
                              :domain (c7-8 / satire))
                  :polarity (c7-10 / amr-unknown))
      :snt2 (c7-9 / know-01
                  :ARG0 (c7-6 / i)
                  :ARG1 (c7-5 / make-up-10
                              :ARG0 (c7-1 / you
                                          :mod (c7-7 / guy))
                              :ARG1 (c7-3 / stuff))))

# ::snt yes i know. But his information was relied upon by journos. Is exposing wrongdoing wrong?
# ::tokens ["yes", "i", "know", ".", "But", "his", "information", "was", "relied", "upon", "by", "journos", ".", "Is", "exposing", "wrongdoing", "wrong", "?"]
# ::lemmas ["yes", "i", "know", ".", "but", "his", "information", "be", "rely", "upon", "by", "journo", ".", "be", "expose", "wrongdoe", "wrong", "?"]
(c8-3 / multi-sentence
      :snt1 (c8-11 / know-01
                   :ARG0 (c8-5 / i))
      :snt2 (c8-7 / contrast-01
                  :ARG2 (c8-6 / rely-01
                              :ARG0 (c8-0 / journalist)
                              :ARG1 (c8-8 / information
                                          :poss (c8-1 / he))))
      :snt3 (c8-2 / wrong-02
                  :ARG1 (c8-4 / expose-01
                              :ARG1 (c8-10 / thing
                                           :ARG1-of (c8-9 / do-02
                                                          :ARG1-of c8-2))))
      :polarity (c8-12 / amr-unknown))

# ::snt come on! Even after the attack you can't make comparisons with the real danger in Mexico and Syria e.g.
# ::tokens ["come", "on", "!", "Even", "after", "the", "attack", "you", "ca", "n't", "make", "comparisons", "with", "the", "real", "danger", "in", "Mexico", "and", "Syria", "e.g."]
# ::lemmas ["come", "on", "!", "even", "after", "the", "attack", "you", "can", "not", "make", "comparison", "with", "the", "real", "danger", "in", "Mexico", "and", "Syria", "e.g."]
(c9-2 / multi-sentence
      :snt1 (c9-9 / come-on-25
                  :ARG1 (c9-0 / you)
                  :mode imperative)
      :snt2 (c9-7 / possible-01
                  :ARG1 (c9-8 / compare-01
                              :ARG0 c9-0
                              :ARG1 (c9-10 / danger
                                           :ARG1-of (c9-11 / real-04)
                                           :location (c9-15 / and
                                                            :op1 (c9-13 / country
                                                                        :name (c9-5 / name
                                                                                    :op1 "Mexico"))
                                                            :op2 (c9-16 / country
                                                                        :name (c9-6 / name
                                                                                    :op1 "Syria")))
                                           :example (c9-1 / country
                                                          :name (c9-12 / name
                                                                       :op1 "Mexico"))))
                  :time (c9-4 / after
                              :op1 (c9-14 / attack-01)
                              :mod (c9-3 / even))
                  :polarity -))

# ::snt because journalists should say the truth without taking positions or shut up forever
# ::tokens ["because", "journalists", "should", "say", "the", "truth", "without", "taking", "positions", "or", "shut", "up", "forever"]
# ::lemmas ["because", "journalist", "should", "say", "the", "truth", "without", "take", "position", "or", "shut", "up", "forever"]
(c10-6 / cause-01
       :ARG0 (c10-5 / recommend-01
                    :ARG1 (c10-2 / or
                                 :op1 (c10-8 / say-01
                                             :ARG0 (c10-0 / journalist)
                                             :ARG1 (c10-9 / truth)
                                             :manner (c10-7 / take-01
                                                            :ARG0 c10-0
                                                            :ARG1 (c10-4 / position-02
                                                                         :ARG0 c10-0)
                                                            :polarity -))
                                 :op2 (c10-3 / shut-up-06
                                             :ARG1 c10-0
                                             :duration (c10-1 / forever)))))

# ::snt Depends on your definition of "journalist." Snowden never claimed to be one.
# ::tokens ["Depends", "on", "your", "definition", "of", "\"", "journalist", ".", "\"", "Snowden", "never", "claimed", "to", "be", "one", "."]
# ::lemmas ["depend", "on", "your", "definition", "of", "\"", "journalist", ".", "\"", "Snowden", "never", "claim", "to", "be", "one", "."]
(c11-3 / multi-sentence
       :snt1 (c11-7 / depend-01
                    :ARG1 (c11-2 / define-01
                                 :ARG0 (c11-1 / you)
                                 :ARG1 (c11-0 / journalist)))
       :snt2 (c11-8 / claim-01
                    :ARG0 (c11-6 / person
                                 :name (c11-5 / name
                                              :op1 "Snowden"))
                    :ARG1 (c11-9 / journalist
                                 :domain c11-6)
                    :time (c11-4 / ever)
                    :polarity -))

# ::snt places like Venezuela, for example
# ::tokens ["places", "like", "Venezuela", ",", "for", "example"]
# ::lemmas ["place", "like", "Venezuela", ",", "for", "example"]
(c12-1 / exemplify-01
       :ARG0 (c12-2 / place
                    :example (c12-3 / country
                                    :name (c12-0 / name
                                                 :op1 "Venezuela"))))

# ::snt in the West they arrest journalists - Assange, Snowden. In East and Mid East sometimes they kill them.
# ::tokens ["in", "the", "West", "they", "arrest", "journalists", "-", "Assange", ",", "Snowden", ".", "In", "East", "and", "Mid", "East", "sometimes", "they", "kill", "them", "."]
# ::lemmas ["in", "the", "West", "they", "arrest", "journalist", "-", "assange", ",", "Snowden", ".", "in", "East", "and", "Mid", "East", "sometimes", "they", "kill", "they", "."]
(c13-2 / multi-sentence
       :snt1 (c13-16 / arrest-01
                     :ARG0 (c13-14 / they)
                     :ARG1 (c13-0 / journalist
                                  :example (c13-4 / and
                                                  :op1 (c13-8 / person
                                                              :name (c13-6 / name
                                                                           :op1 "Julian"
                                                                           :op2 "Assange"))
                                                  :op2 (c13-15 / person
                                                               :name (c13-7 / name
                                                                            :op1 "Snowden"))))
                     :location (c13-1 / world-region
                                      :name (c13-9 / name
                                                   :op1 "West")))
       :snt2 (c13-5 / kill-01
                    :ARG0 (c13-12 / they)
                    :ARG1 c13-0
                    :location c13-4
                    :op1 (c13-10 / world-region
                                 :name (c13-11 / name
                                               :op1 "East"))
                    :op2 (c13-3 / world-region
                                :name (c13-17 / name
                                              :op1 "Mid"
                                              :op2 "East")))
       :frequency (c13-13 / sometimes))
