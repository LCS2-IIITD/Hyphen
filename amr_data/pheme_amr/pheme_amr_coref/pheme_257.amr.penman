# ::snt : tough. Irrational panic is for wingnuts. : frustrated by Canadians' lack of panic.
# ::tokens [":", "tough", ".", "Irrational", "panic", "is", "for", "wingnuts", ".", ":", "frustrated", "by", "Canadians", "'", "lack", "of", "panic", "."]
# ::lemmas [":", "tough", ".", "irrational", "panic", "be", "for", "wingnut", ".", ":", "frustrate", "by", "Canadians", "'", "lack", "of", "panic", "."]
(c1-2 / multi-sentence
      :snt1 (c1-10 / tough-02)
      :snt2 (c1-7 / panic-01
                  :ARG0 (c1-0 / wingnut)
                  :ARG1-of (c1-8 / rational-02
                                 :polarity -))
      :snt3 (c1-1 / frustrate-01
                  :ARG0 (c1-3 / lack-01
                              :ARG0 (c1-11 / person
                                           :mod (c1-9 / country
                                                      :name (c1-6 / name
                                                                  :op1 "Canada")))
                              :ARG1 (c1-4 / panic-01))
                  :ARG1 (c1-5 / i)))

# ::snt Why am I not surprised by this tweet?
# ::tokens ["Why", "am", "I", "not", "surprised", "by", "this", "tweet", "?"]
# ::lemmas ["why", "be", "i", "not", "surprise", "by", "this", "tweet", "?"]
(c2-1 / cause-01
      :ARG0 (c2-5 / amr-unknown)
      :ARG1 (c2-3 / surprise-01
                  :ARG0 (c2-4 / tweet-01
                              :mod (c2-2 / this))
                  :ARG1 (c2-0 / i)
                  :polarity -))

# ::snt obviously they are not watching enough CNN !
# ::tokens ["obviously", "they", "are", "not", "watching", "enough", "CNN", "!"]
# ::lemmas ["obviously", "they", "be", "not", "watch", "enough", "CNN", "!"]
(c3-1 / watch-01
      :ARG0 (c3-6 / they)
      :ARG1 (c3-5 / publication
                  :name (c3-4 / name
                              :op1 "CNN")
                  :ARG1-of (c3-0 / have-quant-91
                                 :ARG3 (c3-3 / enough)
                                 :polarity -))
      :ARG1-of (c3-2 / obvious-01))

# ::snt We've got for that in Quebec at least
# ::tokens ["We", "'ve", "got", "for", "that", "in", "Quebec", "at", "least"]
# ::lemmas ["we", "'ve", "get", "for", "that", "in", "Quebec", "at", "least"]
(c4-0 / have-03
      :ARG0 (c4-1 / we)
      :ARG1 (c4-2 / for
                  :op1 (c4-5 / that))
      :location (c4-4 / province
                      :name (c4-3 / name
                                  :op1 "Quebec"))
      :mod (c4-6 / at-least))

# ::snt it's called being rational and not living in fear like idiots
# ::tokens ["it", "'s", "called", "being", "rational", "and", "not", "living", "in", "fear", "like", "idiots"]
# ::lemmas ["it", "be", "call", "be", "rational", "and", "not", "live", "in", "fear", "like", "idiot"]
(c5-6 / call-01
      :ARG1 (c5-3 / it)
      :ARG2 (c5-8 / and
                  :op1 (c5-5 / rational
                             :domain (c5-0 / you))
                  :op2 (c5-1 / live-01
                             :manner (c5-2 / fear-01)
                             :ARG1-of (c5-4 / resemble-01
                                            :ARG2 (c5-7 / idiot))
                             :polarity -)))

# ::snt Canada doesn't have Fox News to get everyone all worked up
# ::tokens ["Canada", "does", "n't", "have", "Fox", "News", "to", "get", "everyone", "all", "worked", "up"]
# ::lemmas ["Canada", "do", "not", "have", "Fox", "News", "to", "get", "you", "all", "work", "up"]
(c6-0 / have-03
      :ARG0 (c6-6 / country
                  :name (c6-4 / name
                              :op1 "Canada"))
      :ARG1 (c6-2 / broadcast-program
                  :name (c6-5 / name
                              :op1 "Fox"
                              :op2 "News"))
      :purpose (c6-7 / get-04
                     :ARG0 c6-2
                     :ARG1 (c6-1 / work-up-04
                                 :ARG1 (c6-3 / everyone
                                             :mod (c6-8 / all))))
      :polarity -)
