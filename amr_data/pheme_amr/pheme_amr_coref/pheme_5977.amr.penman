# ::snt Menschjagd, live on air - ja das ist ja mal ein Gaudi. Wann ist es "mind-blowing" ??? Jetzt bitte noch mit eigenem Hubschrauber... !
# ::tokens ["Menschjagd", ",", "live", "on", "air", "-", "ja", "das", "ist", "ja", "mal", "ein", "Gaudi", ".", "Wann", "ist", "es", "\"", "mind", "-", "blowing", "\"", "?", "?", "?", "Jetzt", "bitte", "noch", "mit", "eigenem", "Hubschrauber", "...", "!"]
# ::lemmas ["Menschjagd", ",", "live", "on", "air", "-", "ja", "das", "ist", "ja", "mal", "ein", "Gaudi", ".", "Wann", "ist", "es", "\"", "mind", "-", "blow", "\"", "?", "?", "?", "Jetzt", "bitte", "noch", "mit", "eigenem", "Hubschrauber", "...", "!"]
(c1-1 / multi-sentence
      :snt1 (c1-6 / say-01
                  :ARG1 (c1-10 / have-mod-91
                               :ARG1 (c1-16 / event)
                               :ARG2 (c1-12 / live
                                            :medium (c1-9 / air)))
                  :ARG2 (c1-4 / person
                              :name (c1-17 / name
                                           :op1 "Menschjagd")))
      :snt2 (c1-8 / have-mod-91
                  :ARG1 c1-16
                  :name (c1-23 / name
                               :op1 "Gaudi"))
      :ARG2 (c1-0 / ja)
      :mod (c1-18 / mal-01
                  :ARG1 c1-16)
      :snt3 (c1-3 / have-mod-91
                  :ARG1 (c1-7 / person
                              :name (c1-2 / name
                                          :op1 "Wann"))
                  :ARG2 (c1-15 / blow-08
                               :ARG1 (c1-13 / mind)))
      :snt4 (c1-22 / have-mod-91
                   :ARG1 (c1-14 / person
                                :name (c1-5 / name
                                            :op1 "Jihad"))
                   :ARG2 (c1-21 / bitte
                                :mod (c1-24 / noch)
                                :prep- (c1-20 / mit
                                              :mod (c1-19 / person
                                                          :name (c1-11 / name
                                                                       :op1 "Hubschrauber"))))))

# ::snt Geschickt wre, die Tter auszulschen, dann gbe es keinen strenden, verrterischen PROOZESS mehr anschl.
# ::tokens ["Geschickt", "wre", ",", "die", "Tter", "auszulschen", ",", "dann", "gbe", "es", "keinen", "strenden", ",", "verrterischen", "PROOZESS", "mehr", "anschl", "."]
# ::lemmas ["Geschickt", "wre", ",", "die", "Tter", "auszulschen", ",", "dann", "gbe", "es", "keinen", "strenden", ",", "verrterischen", "PROOZESS", "mehr", "anschl", "."]
(c2-7 / and
      :op1 (c2-2 / person
                 :name (c2-13 / name
                              :op1 "Geschickt"
                              :op2 "W wre"))
      :op2 (c2-5 / person
                 :name (c2-18 / name
                              :op1 "Tter"
                              :op2 "Auszulschen"))
      :op3 (c2-8 / have-condition-91
                 :ARG1 (c2-10 / possible-01
                              :ARG1 (c2-9 / fuck-01
                                          :ARG1 (c2-4 / strenden)))
                 :ARG2 (c2-6 / have-03
                             :ARG0 (c2-16 / we)
                             :ARG1 c2-4))
      :op4 (c2-15 / prove-01
                  :ARG0 c2-16
                  :ARG1 (c2-11 / person
                               :ARG0-of (c2-1 / have-org-role-91
                                              :ARG2 (c2-0 / member)))
                  :mod (c2-3 / verrterischen)
                  :ARG1-of (c2-17 / have-degree-91
                                  :ARG2 (c2-12 / enthusiastic-03
                                               :ARG0 c2-16)
                                  :ARG3 (c2-14 / more)
                                  :ARG4 c2-2)))

# ::snt irgendwann ist der Treibstoff alle ..... mind. Schwerverletzte SOLL es wieder geben.
# ::tokens ["irgendwann", "ist", "der", "Treibstoff", "alle", ".....", "mind", ".", "Schwerverletzte", "SOLL", "es", "wieder", "geben", "."]
# ::lemmas ["irgendwann", "ist", "der", "Treibstoff", "alle", ".....", "mind", ".", "Schwerverletzte", "SOLL", "es", "wieder", "geben", "."]
(c3-2 / multi-sentence
      :snt1 (c3-0 / have-mod-91
                  :ARG1 (c3-5 / person
                              :name (c3-4 / name
                                          :op1 "Trevibstoff"))
                  :ARG2 (c3-10 / person
                               :mod (c3-11 / alle)
                               :mod (c3-6 / der)))
      :snt2 (c3-7 / mind-03
                  :ARG1 (c3-1 / well-09
                              :ARG1 (c3-8 / get-01
                                          :ARG0 (c3-3 / person
                                                      :name c3-4
                                                      :op1 "Schwerverletzte"))
                              :ARG1 (c3-9 / geben-01
                                          :ARG1 c3-3))))

# ::snt Geht es am Airport Charles de Gaulle auch rund ? Intensives Gewehrfeuer dort.
# ::tokens ["Geht", "es", "am", "Airport", "Charles", "de", "Gaulle", "auch", "rund", "?", "Intensives", "Gewehrfeuer", "dort", "."]
# ::lemmas ["Geht", "es", "am", "Airport", "Charles", "de", "Gaulle", "auch", "rund", "?", "Intensives", "Gewehrfeuer", "dort", "."]
(c4-0 / multi-sentence
      :snt1 (c4-7 / geht
                  :domain (c4-1 / be-located-at-91
                                :ARG1 (c4-8 / airport
                                            :name (c4-5 / name
                                                        :op1 "Charles"
                                                        :op2 "de"
                                                        :op3 "G Gaulle"))
                                :ARG2 (c4-3 / amr-unintelligible
                                            :value "Auch rund")))
      :snt2 (c4-4 / intend-01
                  :ARG1 (c4-2 / event
                              :name (c4-6 / name
                                          :op1 "Gewehrfeuer"
                                          :op2 "dort"))))

# ::snt Man sollte diese ganzen geilen Reporter erstmal auf den Mond schieen ... dann weiterjagen!
# ::tokens ["Man", "sollte", "diese", "ganzen", "geilen", "Reporter", "erstmal", "auf", "den", "Mond", "schieen", "...", "dann", "weiterjagen", "!"]
# ::lemmas ["Man", "sollte", "diese", "ganzen", "geilen", "reporter", "erstmal", "auf", "den", "Mond", "schieen", "...", "dann", "weiterjagen", "!"]
(c5-2 / multi-sentence
      :snt1 (c5-11 / sollte-01
                   :ARG0 (c5-6 / man)
                   :ARG1 (c5-8 / person
                               :ARG0-of (c5-7 / report-01)
                               :mod (c5-9 / ganzen)
                               :ARG0-of (c5-0 / have-03
                                              :ARG1 (c5-1 / word
                                                          :mod (c5-3 / erstmal))
                                              :ARG0 c5-8)
                               :ARG1 c5-1
                               :mod (c5-4 / string-entity
                                          :value "Mond")))
      :mod c5-3
      :domain c5-8
      :snt2 c5-0
      :ARG0 (c5-5 / weiterjagen)
      :mod (c5-10 / dann))

# ::snt Anschlag mit Citroen, Flucht mit Peugeot...Leichenabtransport mit Renault!
# ::tokens ["Anschlag", "mit", "Citroen", ",", "Flucht", "mit", "Peugeot", "...", "Leichenabtransport", "mit", "Renault", "!"]
# ::lemmas ["Anschlag", "mit", "Citroen", ",", "Flucht", "mit", "Peugeot", "...", "leichenabtransport", "mit", "Renault", "!"]
(c6-11 / and
       :op1 (c6-3 / event
                  :name (c6-4 / name
                              :op1 "Anschlag")
                  :location (c6-8 / company
                                  :name (c6-5 / name
                                              :op1 "Citroen")))
       :op2 (c6-2 / event
                  :name (c6-6 / name
                              :op1 "Flucht")
                  :location (c6-7 / company
                                  :name (c6-9 / name
                                              :op1 "Peugeot")))
       :op3 (c6-0 / event
                  :name (c6-12 / name
                               :op1 "Leichenabtransport")
                  :location (c6-10 / company
                                   :name (c6-1 / name
                                               :op1 "Nissan"))))

# ::snt Aber wer auch mit Peugeot flchtet .....
# ::tokens ["Aber", "wer", "auch", "mit", "Peugeot", "flchtet", "....."]
# ::lemmas ["Aber", "wer", "auch", "mit", "Peugeot", "flchtet", "....."]
(c7-1 / flchtet-00
      :ARG1 (c7-2 / company
                  :name (c7-0 / name
                              :op1 "Peugeot"))
      :mod (c7-3 / auch))

# ::snt Du glaubst doch nicht ernsthaft, das die beiden muslimischen Mrder da LEBEND herauskommen!?
# ::tokens ["Du", "glaubst", "doch", "nicht", "ernsthaft", ",", "das", "die", "beiden", "muslimischen", "Mrder", "da", "LEBEND", "herauskommen", "!", "?"]
# ::lemmas ["Du", "glaubst", "doch", "nicht", "ernsthaft", ",", "das", "die", "beiden", "muslimischen", "Mrder", "da", "LEBEND", "herauskomman", "!", "?"]
(c8-12 / say-01
       :ARG0 (c8-3 / i)
       :ARG1 (c8-0 / have-mod-91
                   :ARG1 (c8-6 / person
                               :name (c8-4 / name
                                           :op1 "Mrder")
                               :mod (c8-7 / religious-group
                                          :name (c8-5 / name
                                                      :op1 "Islam"))
                               :mod (c8-1 / beiden))
                   :ARG2 (c8-13 / amr-unintelligible
                                :value "Lebend")
                   :ARG1-of (c8-9 / get-04
                                  :ARG0 c8-6))
       :ARG2 (c8-8 / glaubst-00
                   :ARG0 c8-3
                   :ARG1 (c8-10 / doch
                                :mod (c8-2 / ernsthaft))
                   :mod (c8-11 / nicht)))

# ::snt jetzt gehts hier schon zu wie in Amerika, Livebertragung von Verfolgungsfahrten mit Heli-Einsatz ... Mann, wenn das SO weitergeht
# ::tokens ["jetzt", "gehts", "hier", "schon", "zu", "wie", "in", "Amerika", ",", "Livebertragung", "von", "Verfolgungsfahrten", "mit", "Heli", "-", "Einsatz", "...", "Mann", ",", "wenn", "das", "SO", "weitergeht"]
# ::lemmas ["jetzt", "geht", "hi", "schon", "zu", "wie", "in", "Amerika", ",", "Livebertragung", "von", "Verfolgungsfahrten", "mit", "Heli", "-", "Einsatz", "...", "Mann", ",", "wenn", "das", "SO", "weitergeht"]
(c9-0 / multi-sentence
      :snt1 (c9-14 / gehts-01
                   :ARG1 (c9-4 / person
                               :name (c9-12 / name
                                            :op1 "Jetzt"))
                   :mod (c9-7 / hier)
                   :mod (c9-5 / schon)
                   :ARG1-of (c9-13 / resemble-01
                                   :ARG2 (c9-6 / person
                                               :location (c9-18 / continent
                                                                :name (c9-17 / name
                                                                             :op1 "America"))
                                               :ARG0-of (c9-9 / participate-01
                                                              :ARG1 (c9-11 / event
                                                                           :name (c9-2 / name
                                                                                       :op1 "Livebertragung"
                                                                                       :op2 "von"
                                                                                       :op3 "Verfolgungsfahrten"))
                                                              :mod (c9-10 / event
                                                                          :name (c9-3 / name
                                                                                      :op1 "Heli-Einsatz"))))))
      :snt2 (c9-15 / person
                   :name (c9-19 / name
                                :op1 "Mann")
                   :mod (c9-16 / wenn
                               :op1 (c9-1 / weitergeht-of
                                          :name (c9-8 / name
                                                      :op1 "SO")))))

# ::snt Da drfte Bald der Flugverkehr umgeleitet werden, wenn das so weitergeht. Landeanflug und Gewehrfeuer .... ? Schlecht.
# ::tokens ["Da", "drfte", "Bald", "der", "Flugverkehr", "umgeleitet", "werden", ",", "wenn", "das", "so", "weitergeht", ".", "Landeanflug", "und", "Gewehrfeuer", "....", "?", "Schlecht", "."]
# ::lemmas ["Da", "drfte", "Bald", "der", "Flugverkehr", "umgeleitet", "werden", ",", "wenn", "das", "so", "weitergeht", ".", "Landeanflug", "und", "Gewehrfeuer", "....", "?", "schlecht", "."]
(c10-2 / multi-sentence
       :snt1 (c10-11 / get-01
                     :ARG1 (c10-8 / person
                                  :name (c10-6 / name
                                               :op1 "Bald"
                                               :op2 "der"
                                               :op3 "Flugverkehr"))
                     :ARG2 (c10-3 / umgeleitet)
                     :mod (c10-1 / werden))
       :snt2 (c10-0 / have-condition-91
                    :ARG1 (c10-5 / weitergeht-of
                                 :op1 (c10-13 / person
                                              :name (c10-7 / name
                                                           :op1 "Landeanflug"))
                                 :op2 (c10-4 / person
                                             :name (c10-9 / name
                                                          :op1 "Gewehr"))))
       :snt3 (c10-12 / person
                     :name (c10-10 / name
                                   :op1 "Schlecht")
                     :polarity (c10-14 / amr-unknown)))

# ::snt In Deutschland kmen sie raus. Die Franzosen ... sind ein bissl grber ! Stimmt!
# ::tokens ["In", "Deutschland", "kmen", "sie", "raus", ".", "Die", "Franzosen", "...", "sind", "ein", "bissl", "grber", "!", "Stimmt", "!"]
# ::lemmas ["in", "Deutschland", "kman", "sie", "raus", ".", "Die", "Franzosen", "...", "sind", "ein", "bissl", "grber", "!", "Stimmt", "!"]
(c11-0 / multi-sentence
       :snt1 (c11-6 / person
                    :name (c11-4 / name
                                 :op1 "Kmen"
                                 :op2 "Sie"
                                 :op3 "Raus")
                    :location (c11-8 / country
                                     :name (c11-5 / name
                                                  :op1 "Deutschland")))
       :snt2 (c11-11 / say-01
                     :ARG1 (c11-13 / and
                                   :op1 (c11-7 / die-01
                                               :ARG1 (c11-12 / person
                                                             :name (c11-9 / name
                                                                          :op1 "Franzosen")))
                                   :op2 (c11-3 / sind-01
                                               :ARG1 (c11-2 / bissl
                                                            :mode expressive)
                                               :op3 (c11-1 / person
                                                           :name (c11-10 / name
                                                                         :op1 "Stimmt"))))
                     :ARG2 c11-12))

# ::snt found similar by here:~ entitled: 'Police raid cannabis crops'
# ::tokens ["found", "similar", "by", "here:~", "entitled", ":", "'", "Police", "raid", "cannabis", "crops", "'"]
# ::lemmas ["find", "similar", "by", "here:~", "entitle", ":", "'", "police", "raid", "cannabis", "crop", "'"]
(c12-1 / find-01
       :ARG1 (c12-8 / thing
                    :ARG1-of (c12-5 / resemble-01)
                    :ARG1-of (c12-2 / entitle-02
                                    :ARG2 (c12-3 / raid-01
                                                 :ARG0 (c12-4 / police)
                                                 :ARG1 (c12-6 / crop
                                                              :mod (c12-7 / cannabis)))))
       :location (c12-0 / here))

# ::snt Das ist ja herzig - so bleiben die ganzen franz. Automarken parittisch beteiligt.
# ::tokens ["Das", "ist", "ja", "herzig", "-", "so", "bleiben", "die", "ganzen", "franz", ".", "Automarken", "parittisch", "beteiligt", "."]
# ::lemmas ["Das", "ist", "ja", "herzig", "-", "so", "bleiben", "die", "ganzen", "franz", ".", "automarken", "parittisch", "beteiligt", "."]
(c13-2 / multi-sentence
       :snt1 (c13-12 / say-01
                     :ARG0 (c13-4 / i)
                     :ARG1 (c13-0 / have-mod-91
                                  :ARG1 (c13-7 / person
                                               :name (c13-5 / name
                                                            :op1 "Ja"
                                                            :op2 "Herzig"))
                                  :ARG2 (c13-14 / herzig))
                     :ARG1-of (c13-9 / cause-01
                                     :ARG0 (c13-3 / bleiben-01
                                                  :ARG1 (c13-8 / die
                                                               :mod (c13-1 / franz)))))
       :snt2 (c13-10 / beteiligt-of
                     :ARG0 (c13-11 / company
                                   :name (c13-6 / name
                                                :op1 "Automarken"))
                     :mod (c13-13 / parittisch)))

# ::snt Wann krachen die Polizeihubschrauber im Verfolgungswahn zusammen?
# ::tokens ["Wann", "krachen", "die", "Polizeihubschrauber", "i", "m", "Verfolgungswahn", "zusammen", "?"]
# ::lemmas ["Wann", "krachen", "die", "Polizeihubschrauber", "i", "m", "Verfolgungswahn", "zusammen", "?"]
(c14-8 / amr-unknown
       :ARG0-of (c14-6 / cause-01
                       :ARG1 (c14-7 / krachen-00
                                    :ARG0 (c14-5 / person
                                                 :ARG0-of (c14-0 / have-org-role-91
                                                                 :ARG1 (c14-3 / organization
                                                                              :name (c14-4 / name
                                                                                           :op1 "Polizeihubschrauber"))
                                                                 :ARG2 (c14-1 / member)))
                                    :ARG1 (c14-2 / zusammen))))
