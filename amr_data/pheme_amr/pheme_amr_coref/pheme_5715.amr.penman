# ::snt were talking about France, not the US.
# ::tokens ["were", "talking", "about", "France", ",", "not", "the", "US", "."]
# ::lemmas ["be", "talk", "about", "France", ",", "not", "the", "US", "."]
(c1-4 / contrast-01
      :ARG1 (c1-7 / talk-01
                  :ARG0 (c1-0 / we)
                  :ARG1 (c1-3 / country
                              :name (c1-1 / name
                                          :op1 "France")))
      :ARG2 (c1-5 / talk-01
                  :ARG0 c1-0
                  :ARG1 (c1-6 / country
                              :name (c1-2 / name
                                          :op1 "US"))
                  :polarity -))

# ::snt governments will do anything but I hope it's not the world doesn't need it right now
# ::tokens ["governments", "will", "do", "anything", "but", "I", "hope", "it", "'s", "not", "the", "world", "does", "n't", "need", "it", "right", "now"]
# ::lemmas ["government", "will", "do", "anything", "but", "i", "hope", "it", "be", "not", "the", "world", "do", "not", "need", "it", "right", "now"]
(c2-7 / contrast-01
      :ARG1 (c2-6 / do-02
                  :ARG0 (c2-8 / government-organization
                              :ARG0-of (c2-5 / govern-01))
                  :ARG1 (c2-10 / anything))
      :ARG2 (c2-0 / hope-01
                  :ARG0 (c2-2 / i)
                  :ARG1 (c2-3 / need-01
                              :ARG0 (c2-1 / world)
                              :ARG1 c2-10
                              :time (c2-4 / now
                                          :mod (c2-9 / right))
                              :polarity -)))

# ::snt yea but you never know this day and age
# ::tokens ["yea", "but", "you", "never", "know", "this", "day", "and", "age"]
# ::lemmas ["yea", "but", "you", "never", "know", "this", "day", "and", "age"]
(c3-4 / contrast-01
      :ARG2 (c3-6 / know-01
                  :ARG0 (c3-0 / you)
                  :ARG1 (c3-7 / and
                              :op1 (c3-3 / day)
                              :op2 (c3-2 / age)
                              :mod (c3-5 / this))
                  :time (c3-1 / ever)
                  :polarity -))

# ::snt dnt be scared of the TRUTH. They need war n creating it is all they know. FALSE flag
# ::tokens ["dnt", "be", "scared", "of", "the", "TRUTH", ".", "They", "need", "war", "n", "creating", "it", "is", "all", "they", "know", ".", "FALSE", "flag"]
# ::lemmas ["dnt", "be", "scared", "of", "the", "TRUTH", ".", "they", "need", "war", "n", "create", "it", "be", "all", "they", "know", ".", "false", "flag"]
(c4-3 / multi-sentence
      :snt1 (c4-9 / scare-01
                  :ARG0 (c4-10 / true-01)
                  :ARG1 (c4-0 / you)
                  :polarity -)
      :snt2 (c4-11 / and
                   :op1 (c4-6 / need-01
                              :ARG0 (c4-8 / they)
                              :ARG1 (c4-1 / war-01))
                   :op2 (c4-7 / create-01
                              :ARG0 c4-8
                              :ARG1 c4-1)
                   :ARG1-of (c4-5 / know-01
                                  :ARG0 c4-8
                                  :mod (c4-4 / all)))
      :snt3 (c4-2 / flag
                  :ARG1-of c4-10
                  :polarity -))

# ::snt we got a video in France... they are not human they are more than horrible Monster...
# ::tokens ["we", "got", "a", "video", "in", "France", "...", "they", "are", "not", "human", "they", "are", "more", "than", "horrible", "Monster", "..."]
# ::lemmas ["we", "get", "a", "video", "in", "France", "...", "they", "be", "not", "human", "they", "be", "more", "than", "horrible", "Monster", "..."]
(c5-3 / multi-sentence
      :snt1 (c5-8 / get-01
                  :ARG0 (c5-1 / we)
                  :ARG1 (c5-5 / video)
                  :location (c5-7 / country
                                  :name (c5-4 / name
                                              :op1 "France")))
      :snt2 (c5-0 / human
                  :domain (c5-9 / they)
                  :polarity -)
      :snt3 (c5-6 / monster
                  :domain c5-9
                  :mod (c5-10 / horrible)
                  :mod (c5-2 / more-than)))

# ::snt I'm so scared it's a false flag
# ::tokens ["I", "'m", "so", "scared", "it", "'s", "a", "false", "flag"]
# ::lemmas ["i", "be", "so", "scared", "it", "be", "a", "false", "flag"]
(c6-5 / scare-01
      :ARG0 (c6-0 / flag
                  :mod (c6-3 / false)
                  :domain (c6-2 / it))
      :ARG1 (c6-4 / i)
      :degree (c6-1 / so))

# ::snt According to President of Turkey; R.T. Erdogan..EU, Israel and US is biggest enemy..All political dissidents is enemy.
# ::tokens ["According", "to", "President", "of", "Turkey", ";", "R.T.", "Erdogan", "..", "EU", ",", "Israel", "and", "US", "is", "biggest", "enemy", "..", "All", "political", "dissidents", "is", "enemy", "."]
# ::lemmas ["accord", "to", "President", "of", "Turkey", ";", "R.T.", "Erdogan", "..", "EU", ",", "Israel", "and", "US", "be", "big", "enemy", "..", "all", "political", "dissident", "be", "enemy", "."]
(c7-7 / say-01
      :ARG0 (c7-3 / person
                  :ARG0-of (c7-11 / have-org-role-91
                                  :ARG1 (c7-22 / country
                                               :name (c7-15 / name
                                                            :op1 "Turkey"))
                                  :ARG2 (c7-8 / president)))
      :ARG1 (c7-10 / and
                   :op1 (c7-9 / have-rel-role-91
                              :ARG0 (c7-18 / and
                                           :op1 (c7-20 / organization
                                                       :name (c7-21 / name
                                                                    :op1 "EU"))
                                           :op2 (c7-4 / country
                                                      :name (c7-1 / name
                                                                  :op1 "Israel"))
                                           :op3 (c7-19 / country
                                                       :name (c7-2 / name
                                                                   :op1 "US")))
                              :ARG1 (c7-12 / person
                                           :ARG0-of (c7-5 / dissent-01
                                                          :ARG1 (c7-17 / politics))
                                           :mod (c7-16 / all))
                              :ARG2 (c7-14 / enemy)
                              :ARG1-of (c7-6 / have-degree-91
                                             :ARG2 (c7-13 / big)
                                             :ARG3 (c7-0 / most)))))

# ::snt Hamas leader Mashaal attends AK Party congress in central Turkey
# ::tokens ["Hamas", "leader", "Mashaal", "attends", "AK", "Party", "congress", "in", "central", "Turkey"]
# ::lemmas ["Hamas", "leader", "Mashaal", "attend", "AK", "Party", "congress", "in", "central", "Turkey"]
(c8-11 / attend-01
       :ARG0 (c8-4 / person
                   :name (c8-2 / name
                               :op1 "Mashaal")
                   :ARG0-of (c8-0 / lead-02
                                  :ARG1 (c8-1 / organization
                                              :name (c8-3 / name
                                                          :op1 "Hamas"))))
       :ARG1 (c8-6 / congress
                   :poss (c8-10 / political-party
                                :name (c8-5 / name
                                            :op1 "AK"
                                            :op2 "Party"))
                   :location (c8-7 / center
                                   :part-of (c8-9 / country
                                                  :name (c8-8 / name
                                                              :op1 "Turkey")))))

# ::snt Judge hushes up 's link to al-Qadi in hearing into bugging case
# ::tokens ["Judge", "hushes", "up", "'s", "link", "to", "al", "-", "Qadi", "in", "hearing", "into", "bugging", "case"]
# ::lemmas ["judge", "hush", "up", "'s", "link", "to", "al", "-", "Qadi", "in", "hearing", "into", "bugging", "case"]
(c9-0 / hush-up-01
      :ARG0 (c9-6 / person
                  :ARG0-of (c9-9 / have-org-role-91
                                 :ARG3 (c9-1 / judge-01)))
      :ARG1 (c9-2 / link-01
                  :ARG2 (c9-8 / person
                              :name (c9-4 / name
                                          :op1 "al-Qadi")))
      :time (c9-5 / hearing-02
                  :ARG0 c9-6
                  :ARG2 (c9-7 / case-03
                              :ARG1 (c9-3 / bugger))))

# ::snt yea I'm not scared of it I try to get more educated but I hope it's really not just some radicals but you nvr know
# ::tokens ["yea", "I", "'m", "not", "scared", "of", "it", "I", "try", "to", "get", "more", "educated", "but", "I", "hope", "it", "'s", "really", "not", "just", "some", "radicals", "but", "you", "nvr", "know"]
# ::lemmas ["yea", "i", "be", "not", "scared", "of", "it", "i", "try", "to", "get", "more", "educate", "but", "i", "hope", "it", "be", "really", "not", "just", "some", "radical", "but", "you", "nvr", "know"]
(c10-2 / multi-sentence
       :snt1 (c10-6 / scare-01
                    :ARG0 (c10-14 / it)
                    :ARG1 (c10-15 / i)
                    :polarity -)
       :snt2 (c10-19 / contrast-01
                     :ARG1 (c10-20 / try-01
                                   :ARG0 (c10-1 / i)
                                   :ARG1 (c10-13 / get-03
                                                 :ARG1 c10-1
                                                 :ARG2 (c10-10 / educate-01
                                                               :ARG1 c10-1
                                                               :ARG2-of (c10-9 / have-degree-91
                                                                               :ARG1 c10-1
                                                                               :ARG3 (c10-11 / more)))))
                     :ARG2 (c10-5 / contrast-01
                                  :ARG1 (c10-8 / hope-01
                                               :ARG0 c10-1
                                               :ARG1 (c10-4 / person
                                                            :ARG1-of (c10-12 / radical-02)
                                                            :mod (c10-0 / just
                                                                        :polarity -)
                                                            :domain (c10-18 / it)
                                                            :ARG1-of (c10-3 / real-04)))
                                  :ARG2 (c10-16 / know-01
                                                :ARG0 (c10-17 / you)
                                                :ARG1-of (c10-7 / possible-01)))))

# ::snt I know, just France is one of the last nations that I'd think would do one.
# ::tokens ["I", "know", ",", "just", "France", "is", "one", "of", "the", "last", "nations", "that", "I", "'d", "think", "would", "do", "one", "."]
# ::lemmas ["i", "know", ",", "just", "France", "be", "one", "of", "the", "last", "nation", "that", "i", "would", "think", "would", "do", "one", "."]
(c11-10 / know-01
        :ARG0 (c11-3 / i)
        :ARG1 (c11-8 / include-91
                     :ARG1 (c11-7 / country
                                  :name (c11-4 / name
                                               :op1 "France")
                                  :mod (c11-0 / just))
                     :ARG2 (c11-5 / nation
                                  :mod (c11-1 / last)
                                  :ARG0-of (c11-6 / do-02
                                                  :ARG1 (c11-2 / one)
                                                  :ARG1-of (c11-9 / think-01
                                                                  :ARG0 c11-3)))))

# ::snt There is no need for that. France raises national alert system to highest level after attack at CharlieHebdo
# ::tokens ["There", "is", "no", "need", "for", "that", ".", "France", "raises", "national", "alert", "system", "to", "highest", "level", "after", "attack", "at", "CharlieHebdo"]
# ::lemmas ["there", "be", "no", "need", "for", "that", ".", "France", "raise", "national", "alert", "system", "to", "high", "level", "after", "attack", "at", "CharlieHebdo"]
(c12-2 / multi-sentence
       :snt1 (c12-5 / need-01
                    :ARG1 (c12-15 / that)
                    :polarity -)
       :snt2 (c12-8 / raise-01
                    :ARG0 (c12-9 / country
                                 :name (c12-6 / name
                                              :op1 "France"))
                    :ARG1 (c12-13 / system
                                  :ARG0-of (c12-16 / alert-01
                                                   :mod (c12-7 / nation)))
                    :ARG4 (c12-1 / level
                                 :ARG1-of (c12-0 / have-degree-91
                                                 :ARG2 (c12-3 / high-02)
                                                 :ARG3 (c12-10 / most)))
                    :time (c12-4 / after
                                 :op1 (c12-11 / attack-01
                                              :ARG1 (c12-12 / person
                                                            :name (c12-14 / name
                                                                          :op1 "CharlieHebdo"))))))

# ::snt not all governments are that corrupt.
# ::tokens ["not", "all", "governments", "are", "that", "corrupt", "."]
# ::lemmas ["not", "all", "government", "be", "that", "corrupt", "."]
(c13-1 / corrupt-01
       :ARG1 (c13-2 / government-organization
                    :ARG0-of (c13-0 / govern-01)
                    :mod (c13-4 / all
                                :polarity -))
       :degree (c13-3 / that))

# ::snt false flags can happen anywhere
# ::tokens ["false", "flags", "can", "happen", "anywhere"]
# ::lemmas ["false", "flag", "can", "happen", "anywhere"]
(c14-3 / possible-01
       :ARG1 (c14-1 / event
                    :mod (c14-0 / flag
                                :ARG1-of (c14-2 / false-02))
                    :location (c14-4 / anywhere)))

# ::snt France should just deport or jail all Muslims and anyone affiliated with them. **brushes off hands** Problem solved.
# ::tokens ["France", "should", "just", "deport", "or", "jail", "all", "Muslims", "and", "anyone", "affiliated", "with", "them", ".", "*", "*", "brushes", "off", "hands", "*", "*", "Problem", "solved", "."]
# ::lemmas ["France", "should", "just", "deport", "or", "jail", "all", "Muslims", "and", "anyone", "affiliate", "with", "they", ".", "*", "*", "brush", "off", "hand", "*", "*", "problem", "solve", "."]
(c15-1 / multi-sentence
       :snt1 (c15-13 / recommend-01
                     :ARG1 (c15-15 / or
                                   :op1 (c15-4 / deport-01
                                               :ARG0 (c15-17 / country
                                                             :name (c15-11 / name
                                                                           :op1 "France"))
                                               :ARG1 (c15-8 / and
                                                            :op1 (c15-3 / person
                                                                        :mod (c15-2 / religious-group
                                                                                    :name (c15-16 / name
                                                                                                  :op1 "Islam"))
                                                                        :mod (c15-14 / all))
                                                            :op2 (c15-12 / anyone
                                                                         :ARG1-of (c15-18 / affiliate-01
                                                                                          :ARG2 c15-2))))
                                   :op2 (c15-0 / jail-01
                                               :ARG0 c15-17
                                               :ARG1 c15-8)
                                   :mod (c15-7 / just)))
       :snt2 (c15-10 / brush-off-02
                     :ARG1 (c15-9 / hand))
       :snt3 (c15-5 / solve-01
                    :ARG1 (c15-6 / problem)))

# ::snt wait on the footage if they show any. N gunmen got away n cars video please. might just b a drill
# ::tokens ["wait", "on", "the", "footage", "if", "they", "show", "any", ".", "N", "gunmen", "got", "away", "n", "cars", "video", "please", ".", "might", "just", "b", "a", "drill"]
# ::lemmas ["wait", "on", "the", "footage", "if", "they", "show", "any", ".", "n", "gunman", "get", "away", "n", "car", "video", "please", ".", "might", "just", "b", "a", "drill"]
(c16-4 / multi-sentence
       :snt1 (c16-1 / wait-01
                    :ARG1 (c16-2 / you)
                    :ARG2 (c16-3 / footage)
                    :condition (c16-14 / show-01
                                       :ARG0 (c16-15 / they)
                                       :ARG1 (c16-16 / any))
                    :mode imperative)
       :snt2 (c16-5 / and
                    :op1 (c16-11 / get-away-08
                                 :ARG0 (c16-9 / gunman
                                              :mod (c16-6 / n)))
                    :op2 (c16-7 / video
                                :topic (c16-10 / car)
                                :mod (c16-8 / n))
                    :polite +)
       :snt3 (c16-12 / possible-01
                     :ARG1 (c16-13 / drill-02
                                   :mod (c16-0 / just))))

# ::snt no I mean a false flag for France
# ::tokens ["no", "I", "mean", "a", "false", "flag", "for", "France"]
# ::lemmas ["no", "i", "mean", "a", "false", "flag", "for", "France"]
(c17-1 / mean-01
       :ARG0 (c17-2 / i)
       :ARG2 (c17-0 / flag
                    :mod (c17-3 / false)
                    :beneficiary (c17-5 / country
                                        :name (c17-4 / name
                                                     :op1 "France"))))

# ::snt possible police state over haul for the new year ?
# ::tokens ["possible", "police", "state", "over", "haul", "for", "the", "new", "year", "?"]
# ::lemmas ["possible", "police", "state", "over", "haul", "for", "the", "new", "year", "?"]
(c18-4 / state
       :polarity (c18-6 / amr-unknown)
       :mod (c18-3 / police)
       :ARG1-of (c18-0 / haul-01)
       :ARG1-of (c18-5 / possible-01)
       :time (c18-1 / year
                    :ARG1-of (c18-2 / new-01)))
