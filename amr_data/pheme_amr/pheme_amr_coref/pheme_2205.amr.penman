# ::snt a f sad day for the world. Sometimes people are just f without a reason. I wish I knew.
# ::tokens ["a", "f", "sad", "day", "for", "the", "world", ".", "Sometimes", "people", "are", "just", "f", "without", "a", "reason", ".", "I", "wish", "I", "knew", "."]
# ::lemmas ["a", "f", "sad", "day", "for", "the", "world", ".", "sometimes", "people", "be", "just", "f", "without", "a", "reason", ".", "i", "wish", "i", "know", "."]
(c1-3 / multi-sentence
      :snt1 (c1-10 / sad-02
                   :ARG1 (c1-8 / day)
                   :ARG2 (c1-1 / world))
      :snt2 (c1-0 / have-03
                  :ARG0 (c1-7 / person)
                  :ARG1 (c1-9 / reason
                              :polarity -)
                  :mod (c1-2 / just)
                  :frequency (c1-4 / sometimes))
      :snt3 (c1-6 / wish-01
                  :ARG0 (c1-5 / i)
                  :ARG1 (c1-11 / know-01
                               :ARG0 c1-5)))

# ::snt absolutely, don't give the fuckers any more air time than required. That's how the fuckers work.Fucking fuckers
# ::tokens ["absolutely", ",", "do", "n't", "give", "the", "fuckers", "any", "more", "air", "time", "than", "required", ".", "That", "'s", "how", "the", "fuckers", "work", ".", "Fucking", "fuckers"]
# ::lemmas ["absolutely", ",", "do", "not", "give", "the", "fucker", "any", "more", "air", "time", "than", "require", ".", "that", "be", "how", "the", "fucker", "work", ".", "fucking", "fucker"]
(c2-4 / multi-sentence
      :snt1 (c2-12 / give-01
                   :ARG0 (c2-1 / you)
                   :ARG1 (c2-14 / time
                                :mod (c2-15 / air)
                                :ARG1-of (c2-0 / have-quant-91
                                               :ARG3 (c2-9 / more
                                                           :mod (c2-6 / any))
                                               :ARG4 (c2-10 / require-01)))
                   :ARG2 (c2-11 / person
                                :ARG0-of (c2-3 / fuck-01))
                   :degree (c2-8 / absolute)
                   :polarity -
                   :mode imperative)
      :snt2 (c2-2 / work-01
                  :ARG0 c2-11
                  :ARG0-of (c2-7 / fuck-01)
                  :mod (c2-5 / fucking
                             :mode expressive))
      :manner (c2-13 / that))

# ::snt Y only the converts.. u think the original ones (arabs) r any better..??
# ::tokens ["Y", "only", "the", "converts", "..", "u", "think", "the", "original", "ones", "(", "arabs", ")", "r", "any", "better", "..", "?", "?"]
# ::lemmas ["Y", "only", "the", "convert", "..", "u", "think", "the", "original", "one", "(", "arabs", ")", "r", "any", "well", "..", "?", "?"]
(c3-3 / multi-sentence
      :snt1 (c3-9 / person
                  :ARG0-of (c3-11 / convert-01)
                  :mod (c3-5 / only)
                  :domain (c3-1 / you))
      :snt2 (c3-15 / think-01
                   :ARG0 (c3-13 / you)
                   :ARG1 (c3-12 / good-02
                                :ARG1 (c3-2 / one
                                            :mod (c3-14 / original)
                                            :ARG1-of (c3-10 / mean-01
                                                            :ARG2 (c3-16 / person
                                                                         :mod (c3-6 / ethnic-group
                                                                                    :name (c3-8 / name
                                                                                                :op1 "Arab")))))
                                :mod (c3-17 / any)
                                :ARG2-of (c3-0 / have-degree-91
                                               :ARG1 c3-2
                                               :ARG3 (c3-4 / more)))
                   :polarity (c3-7 / amr-unknown)))

# ::snt Again this proves it's not racial, it's a part of the religion. Leaving the rest of us with no way to tell which one will kill us.
# ::tokens ["Again", "this", "proves", "it", "'s", "not", "racial", ",", "it", "'s", "a", "part", "of", "the", "religion", ".", "Leaving", "the", "rest", "of", "us", "with", "no", "way", "to", "tell", "which", "one", "will", "kill", "us", "."]
# ::lemmas ["again", "this", "prove", "it", "be", "not", "racial", ",", "it", "be", "a", "part", "of", "the", "religion", ".", "leave", "the", "rest", "of", "we", "with", "no", "way", "to", "tell", "which", "one", "will", "kill", "we", "."]
(c4-3 / multi-sentence
      :snt1 (c4-10 / prove-01
                   :ARG0 (c4-14 / this)
                   :ARG1 (c4-12 / contrast-01
                                :ARG1 (c4-11 / race
                                             :domain (c4-6 / it)
                                             :polarity -)
                                :ARG2 (c4-0 / have-part-91
                                            :ARG1 (c4-7 / religion)
                                            :ARG2 c4-6))
                   :mod (c4-16 / again))
      :snt2 (c4-2 / leave-14
                  :ARG1 (c4-4 / have-03
                              :ARG0 (c4-1 / we
                                          :mod (c4-5 / rest))
                              :ARG1 (c4-8 / way
                                          :manner-of (c4-13 / tell-01
                                                            :ARG0 c4-1
                                                            :ARG1 (c4-15 / person
                                                                         :ARG0-of (c4-9 / kill-01
                                                                                        :ARG1 c4-1)))
                                          :polarity -))))

# ::snt :Co-Pilot of Airbus Was a Muslim convert."Hero of Islamic State"
# ::tokens [":", "Co", "-", "Pilot", "of", "Airbus", "Was", "a", "Muslim", "convert", ".", "\"Hero", "of", "Islamic", "State", "\""]
# ::lemmas [":", "Co", "-", "Pilot", "of", "Airbus", "be", "a", "Muslim", "convert", ".", "\"hero", "of", "Islamic", "State", "\""]
(c5-1 / multi-sentence
      :snt1 (c5-5 / person
                  :ARG0-of (c5-9 / pilot-01
                                 :ARG1 (c5-10 / aircraft-type
                                              :name (c5-3 / name
                                                          :op1 "Airbus")))
                  :mod (c5-6 / religious-group
                             :name (c5-4 / name
                                         :op1 "Muslim"))
                  :domain c5-5)
      :snt2 (c5-0 / hero
                  :mod (c5-8 / state
                             :mod (c5-2 / religious-group
                                        :name (c5-7 / name
                                                    :op1 "Islam")))))

# ::snt no, he just needed a job....I mean... Ahem
# ::tokens ["no", ",", "he", "just", "needed", "a", "job", "....", "I", "mean", "...", "Ahem"]
# ::lemmas ["no", ",", "he", "just", "need", "a", "job", "....", "i", "mean", "...", "ahem"]
(c6-4 / need-01
      :ARG0 (c6-1 / he)
      :ARG1 (c6-0 / job)
      :mod (c6-5 / just)
      :ARG1-of (c6-2 / mean-01
                     :ARG0 (c6-3 / i)
                     :mod (c6-6 / ah
                                :mode expressive)))

# ::snt - but of course it's nothing to do with Islam!
# ::tokens ["-", "but", "of", "course", "it", "'s", "nothing", "to", "do", "with", "Islam", "!"]
# ::lemmas ["-", "but", "of", "course", "it", "be", "nothing", "to", "do", "with", "Islam", "!"]
(c7-6 / contrast-01
      :ARG2 (c7-0 / have-to-do-with-04
                  :ARG0 (c7-2 / it)
                  :ARG1 (c7-5 / religious-group
                              :name (c7-3 / name
                                          :op1 "Islam"))
                  :ARG2 (c7-4 / nothing)
                  :mod (c7-1 / of-course)))

# ::snt Either he was a Muslim convert or completely insane, which is a prerequisite to be a Muslim convert.
# ::tokens ["Either", "he", "was", "a", "Muslim", "convert", "or", "completely", "insane", ",", "which", "is", "a", "prerequisite", "to", "be", "a", "Muslim", "convert", "."]
# ::lemmas ["either", "he", "be", "a", "Muslim", "convert", "or", "completely", "insane", ",", "which", "be", "a", "prerequisite", "to", "be", "a", "Muslim", "convert", "."]
(c8-1 / or
      :op1 (c8-6 / convert-01
                 :ARG1 (c8-0 / he)
                 :ARG2 (c8-5 / religious-group
                             :name (c8-4 / name
                                         :op1 "Islam")))
      :op2 (c8-2 / insane
                 :domain c8-0
                 :ARG1-of (c8-7 / complete-02))
      :ARG2-of (c8-3 / require-01
                     :ARG1 (c8-8 / convert-01
                                 :ARG1 c8-0
                                 :ARG2 c8-5)))

# ::snt I agree mate, but without care we trivialise these souls as trophies of shitbags, and those fuckers don't need credit
# ::tokens ["I", "agree", "mate", ",", "but", "without", "care", "we", "trivialise", "these", "souls", "as", "trophies", "of", "shitbags", ",", "and", "those", "fuckers", "do", "n't", "need", "credit"]
# ::lemmas ["i", "agree", "mate", ",", "but", "without", "care", "we", "trivialise", "these", "soul", "as", "trophy", "of", "shitbag", ",", "and", "those", "fucker", "do", "not", "need", "credit"]
(c9-14 / say-01
       :ARG0 (c9-7 / i)
       :ARG1 (c9-12 / contrast-01
                    :ARG1 (c9-17 / agree-01
                                 :ARG0 c9-7)
                    :ARG2 (c9-6 / and
                                :op1 (c9-16 / trivialize-01
                                            :ARG0 (c9-0 / we)
                                            :ARG1 (c9-4 / soul
                                                        :mod (c9-13 / this))
                                            :prep-as (c9-9 / trophy
                                                           :mod (c9-1 / shitbag))
                                            :manner (c9-11 / care-04
                                                           :ARG0 c9-0
                                                           :polarity -))
                                :op2 (c9-8 / need-01
                                           :ARG0 (c9-10 / person
                                                        :ARG0-of (c9-2 / fuck-around-04)
                                                        :mod (c9-5 / that))
                                           :ARG1 (c9-15 / credit-01
                                                        :ARG1 c9-10)
                                           :polarity -)))
       :ARG2 (c9-3 / mate))

# ::snt . Bad for Islam: all these prisoners &amp; disturbed people to convert. Muslims need to stop asking/taking anyone they can convert.
# ::tokens [".", "Bad", "for", "Islam", ":", "all", "these", "prisoners", "&", "amp", ";", "disturbed", "people", "to", "convert", ".", "Muslims", "need", "to", "stop", "asking", "/", "taking", "anyone", "they", "can", "convert", "."]
# ::lemmas [".", "bad", "for", "Islam", ":", "all", "these", "prisoner", "&", "amp", ";", "disturb", "people", "to", "convert", ".", "Muslims", "need", "to", "stop", "ask", "/", "take", "anyone", "they", "can", "convert", "."]
(c10-0 / multi-sentence
       :snt1 (c10-7 / bad-04
                    :ARG1 (c10-5 / and
                                 :op1 (c10-1 / person
                                             :ARG1-of (c10-13 / imprison-01))
                                 :op2 (c10-4 / person
                                             :ARG1-of (c10-2 / disturb-01))
                                 :mod (c10-12 / all)
                                 :mod (c10-18 / this))
                    :ARG2 (c10-11 / religious-group
                                  :name (c10-9 / name
                                               :op1 "Islam")))
       :snt2 (c10-14 / need-01
                     :ARG0 c10-11
                     :ARG1 (c10-3 / stop-01
                                  :ARG0 c10-11
                                  :ARG1 (c10-8 / slash
                                               :op1 (c10-10 / ask-02
                                                            :ARG0 c10-11
                                                            :ARG1 (c10-17 / anyone
                                                                          :ARG1-of (c10-15 / convert-01
                                                                                           :ARG0 c10-11
                                                                                           :ARG1-of (c10-6 / possible-01))))
                                               :op2 (c10-16 / take-01
                                                            :ARG0 c10-11
                                                            :ARG1 c10-17)))))

# ::snt I knew it! Earlier they wouldn't say what his faith was. Dead giveaway. Such a tragedy.
# ::tokens ["I", "knew", "it", "!", "Earlier", "they", "would", "n't", "say", "what", "his", "faith", "was", ".", "Dead", "giveaway", ".", "Such", "a", "tragedy", "."]
# ::lemmas ["i", "know", "it", "!", "early", "they", "would", "not", "say", "what", "his", "faith", "be", ".", "dead", "giveaway", ".", "such", "a", "tragedy", "."]
(c11-2 / multi-sentence
       :snt1 (c11-13 / know-01
                     :ARG0 (c11-5 / i)
                     :ARG1 (c11-8 / it))
       :snt2 (c11-11 / say-01
                     :ARG0 (c11-12 / they)
                     :ARG1 (c11-10 / thing
                                   :domain (c11-1 / faith
                                                  :poss (c11-0 / he)))
                     :time (c11-3 / before)
                     :polarity -)
       :snt3 (c11-9 / giveaway-01
                    :mod (c11-7 / die-01))
       :snt4 (c11-6 / tragedy
                    :mod (c11-4 / such)))

# ::snt no of course not, but the converts are think they have to prove them self, that's why
# ::tokens ["no", "of", "course", "not", ",", "but", "the", "converts", "are", "think", "they", "have", "to", "prove", "them", "self", ",", "that", "'s", "why"]
# ::lemmas ["no", "of", "course", "not", ",", "but", "the", "convert", "be", "think", "they", "have", "to", "prove", "they", "self", ",", "that", "be", "why"]
(c12-5 / contrast-01
       :ARG1 (c12-2 / no
                    :mod (c12-1 / of-course))
       :ARG2 (c12-8 / think-01
                    :ARG0 (c12-3 / person
                                 :ARG1-of (c12-4 / convert-01))
                    :ARG1 (c12-0 / obligate-01
                                 :ARG1 c12-3
                                 :ARG2 (c12-9 / prove-01
                                              :ARG0 c12-3
                                              :ARG1 c12-3))
                    :ARG0-of (c12-7 / cause-01
                                    :ARG1 (c12-6 / that))))

# ::snt I hear u... I also think the media and release of info is to control the reaction to the truth
# ::tokens ["I", "hear", "u", "...", "I", "also", "think", "the", "media", "and", "release", "of", "info", "is", "to", "control", "the", "reaction", "to", "the", "truth"]
# ::lemmas ["i", "hear", "u", "...", "i", "also", "think", "the", "medium", "and", "release", "of", "info", "be", "to", "control", "the", "reaction", "to", "the", "truth"]
(c13-3 / multi-sentence
       :snt1 (c13-0 / hear-01
                    :ARG0 (c13-5 / i)
                    :ARG2 (c13-1 / you))
       :snt2 (c13-12 / think-01
                     :ARG0 (c13-10 / i)
                     :ARG1 (c13-9 / control-01
                                  :ARG0 (c13-13 / and
                                                :op1 (c13-7 / media)
                                                :op2 (c13-8 / release-01
                                                            :ARG1 (c13-2 / information)))
                                  :ARG1 (c13-6 / react-01
                                               :ARG1 (c13-11 / truth)))
                     :mod (c13-4 / also)))

# ::snt the tipping point is not far away.... The ingredients are nearly right for all out conflict
# ::tokens ["the", "tipping", "point", "is", "not", "far", "away", "....", "The", "ingredients", "are", "nearly", "right", "for", "all", "out", "conflict"]
# ::lemmas ["the", "tipping", "point", "be", "not", "far", "away", "....", "the", "ingredient", "be", "nearly", "right", "for", "all", "out", "conflict"]
(c14-1 / multi-sentence
       :snt1 (c14-2 / be-located-at-91
                    :ARG1 (c14-6 / point
                                 :time-of (c14-9 / tip-01))
                    :ARG2 (c14-10 / away
                                  :extent (c14-0 / far
                                                 :polarity -)))
       :snt2 (c14-7 / right-06
                    :ARG1 (c14-4 / ingredient)
                    :degree (c14-5 / near)
                    :beneficiary (c14-8 / conflict-01
                                        :mod (c14-3 / all-out))))

# ::snt c'mon mate, don't make these lost lives media-fodder because of assumptions.
# ::tokens ["c'm", "on", "mate", ",", "do", "n't", "make", "these", "lost", "lives", "media", "-", "fodder", "because", "of", "assumptions", "."]
# ::lemmas ["come", "on", "mate", ",", "do", "not", "make", "these", "lose", "life", "media", "-", "fodder", "because", "of", "assumption", "."]
(c15-7 / say-01
       :ARG0 (c15-4 / i)
       :ARG1 (c15-1 / make-02
                    :ARG0 (c15-5 / mate)
                    :ARG1 (c15-0 / fodder
                                 :mod (c15-2 / media)
                                 :domain (c15-8 / this)
                                 :ARG1-of (c15-3 / lose-02))
                    :ARG1-of (c15-6 / cause-01
                                    :ARG0 (c15-9 / assume-02))
                    :polarity -
                    :mode imperative)
       :ARG2 c15-5)

# ::snt I'm not trivialising a tragedy... I want hard questions asked and real answers
# ::tokens ["I", "'m", "not", "trivialising", "a", "tragedy", "...", "I", "want", "hard", "questions", "asked", "and", "real", "answers"]
# ::lemmas ["i", "be", "not", "trivialise", "a", "tragedy", "...", "i", "want", "hard", "question", "ask", "and", "real", "answer"]
(c16-2 / multi-sentence
       :snt1 (c16-10 / trivialize-01
                     :ARG0 (c16-5 / i)
                     :ARG1 (c16-9 / tragedy)
                     :polarity -)
       :snt2 (c16-1 / want-01
                    :ARG0 (c16-8 / i)
                    :ARG1 (c16-11 / and
                                  :op1 (c16-3 / question-01
                                              :ARG1-of (c16-0 / hard-02)
                                              :ARG1-of (c16-4 / ask-01))
                                  :op2 (c16-6 / answer-01
                                              :ARG1-of (c16-7 / real-04)))))

# ::snt Seriously!
# ::tokens ["Seriously", "!"]
# ::lemmas ["seriously", "!"]
(c17-0 / serious-01)

# ::snt i agree, and not sadly, shit needs to come to a head. My WW2 grandfather would agree
# ::tokens ["i", "agree", ",", "and", "not", "sadly", ",", "shit", "needs", "to", "come", "to", "a", "head", ".", "My", "WW2", "grandfather", "would", "agree"]
# ::lemmas ["i", "agree", ",", "and", "not", "sadly", ",", "shit", "need", "to", "come", "to", "a", "head", ".", "my", "WW2", "grandfather", "would", "agree"]
(c18-3 / multi-sentence
       :snt1 (c18-14 / and
                     :op1 (c18-5 / agree-01
                                 :ARG0 (c18-6 / i))
                     :op2 (c18-7 / need-01
                                 :ARG0 (c18-11 / come-04
                                               :ARG1 (c18-13 / shit)
                                               :ARG2 (c18-0 / head))
                                 :ARG1-of (c18-4 / sad-02
                                                 :polarity -)))
       :snt2 (c18-8 / agree-01
                    :ARG0 (c18-9 / person
                                 :ARG0-of (c18-2 / have-rel-role-91
                                                 :ARG1 c18-6
                                                 :ARG2 (c18-12 / grandfather))
                                 :time (c18-1 / war
                                              :name (c18-10 / name
                                                            :op1 "WWII")))))

# ::snt best to ask than put head in the sand... If its not suicide? What is it?
# ::tokens ["best", "to", "ask", "than", "put", "head", "in", "the", "sand", "...", "If", "its", "not", "suicide", "?", "What", "is", "it", "?"]
# ::lemmas ["good", "to", "ask", "than", "put", "head", "in", "the", "sand", "...", "if", "its", "not", "suicide", "?", "what", "be", "it", "?"]
(c19-2 / multi-sentence
       :snt1 (c19-9 / good-02
                    :ARG1 (c19-11 / ask-01)
                    :ARG2-of (c19-0 / have-degree-91
                                    :ARG1 c19-11
                                    :ARG3 (c19-7 / most)
                                    :ARG2 c19-9)
                    :ARG1 c19-11
                    :ARG3 (c19-1 / more)
                    :ARG4 (c19-8 / put-01
                                 :ARG1 (c19-3 / head)
                                 :ARG2 (c19-10 / sand)))
       :snt2 (c19-4 / suicide
                    :domain (c19-6 / it)
                    :polarity (c19-5 / amr-unknown)
                    :polarity -))

# ::snt unfortunately it seems to be brewing
# ::tokens ["unfortunately", "it", "seems", "to", "be", "brewing"]
# ::lemmas ["unfortunately", "it", "seem", "to", "be", "brew"]
(c20-0 / seem-01
       :ARG1 (c20-3 / brew-01
                    :ARG1 (c20-2 / it))
       :ARG2-of (c20-1 / fortunate-01
                       :polarity -))

# ::snt he way really a Muslim? is that confirmed?
# ::tokens ["he", "way", "really", "a", "Muslim", "?", "is", "that", "confirmed", "?"]
# ::lemmas ["he", "way", "really", "a", "Muslim", "?", "be", "that", "confirm", "?"]
(c21-1 / multi-sentence
       :snt1 (c21-4 / religious-group
                    :polarity (c21-7 / amr-unknown)
                    :name (c21-3 / name
                                 :op1 "Muslim")
                    :domain (c21-0 / he)
                    :ARG1-of (c21-2 / real-04))
       :snt2 (c21-5 / confirm-01
                    :ARG1 (c21-6 / that)))

# ::snt the converts are the most evil in Islam.in Germany all the big mosques are running by such converts. Germany is invaded
# ::tokens ["the", "converts", "are", "the", "most", "evil", "in", "Islam.in", "Germany", "all", "the", "big", "mosques", "are", "running", "by", "such", "converts", ".", "Germany", "is", "invaded"]
# ::lemmas ["the", "convert", "be", "the", "most", "evil", "in", "Islam.in", "Germany", "all", "the", "big", "mosques", "be", "run", "by", "such", "convert", ".", "Germany", "be", "invade"]
(c22-0 / multi-sentence
       :snt1 (c22-7 / have-degree-91
                    :ARG1 (c22-2 / person
                                 :ARG1-of (c22-18 / convert-01))
                    :ARG2 (c22-11 / evil)
                    :ARG3 (c22-13 / most)
                    :ARG5 (c22-5 / person
                                 :mod (c22-14 / religious-group
                                              :name (c22-12 / name
                                                            :op1 "Islam"))))
       :snt2 (c22-1 / run-01
                    :ARG0 (c22-9 / person
                                 :ARG1-of (c22-3 / convert-01)
                                 :mod (c22-4 / such))
                    :ARG1 (c22-8 / mosque
                                 :mod (c22-10 / big)
                                 :mod (c22-6 / all))
                    :location (c22-16 / country
                                      :name (c22-17 / name
                                                    :op1 "Germany")))
       :snt3 (c22-15 / invade-01
                     :ARG1 c22-16))

# ::snt the founder of Islam was a white man, converts always are most fervent
# ::tokens ["the", "founder", "of", "Islam", "was", "a", "white", "man", ",", "converts", "always", "are", "most", "fervent"]
# ::lemmas ["the", "founder", "of", "Islam", "be", "a", "white", "man", ",", "convert", "always", "be", "most", "fervent"]
(c23-11 / and
        :op1 (c23-3 / man
                    :ARG1-of (c23-1 / white-02)
                    :ARG0-of (c23-2 / found-01
                                    :ARG1 (c23-8 / religious-group
                                                 :name (c23-6 / name
                                                              :op1 "Islam"))))
        :op2 (c23-5 / fervent
                    :time (c23-4 / always)
                    :domain (c23-7 / person
                                   :ARG1-of (c23-9 / convert-01))
                    :ARG2-of (c23-0 / have-degree-91
                                    :ARG1 c23-7
                                    :ARG3 (c23-10 / most))))
