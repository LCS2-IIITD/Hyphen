# ::snt actually it is about him and everyone that works on the hill.
# ::tokens ["actually", "it", "is", "about", "him", "and", "everyone", "that", "works", "on", "the", "hill", "."]
# ::lemmas ["actually", "it", "be", "about", "he", "and", "everyone", "that", "work", "on", "the", "hill", "."]
(c1-5 / concern-02
      :ARG1 (c1-6 / and
                  :op1 (c1-0 / he)
                  :op2 (c1-3 / everyone
                             :ARG0-of (c1-1 / work-01
                                            :location (c1-2 / hill))))
      :ARG1-of (c1-4 / actual-02))

# ::snt . In a Gazebo, perhaps?
# ::tokens [".", "In", "a", "Gazebo", ",", "perhaps", "?"]
# ::lemmas [".", "in", "a", "Gazebo", ",", "perhaps", "?"]
(c2-3 / possible-01
      :ARG1 (c2-1 / be-located-at-91
                  :ARG2 (c2-0 / facility
                              :name (c2-2 / name
                                          :op1 "Gazebo")))
      :polarity (c2-4 / amr-unknown))

# ::snt glad you are safe. Bridges closed to and from Ottawa. Soldier at the War Memorial has died.
# ::tokens ["glad", "you", "are", "safe", ".", "Bridges", "closed", "to", "and", "from", "Ottawa", ".", "Soldier", "at", "the", "War", "Memorial", "has", "died", "."]
# ::lemmas ["glad", "you", "be", "safe", ".", "Bridges", "close", "to", "and", "from", "Ottawa", ".", "Soldier", "at", "the", "War", "Memorial", "have", "die", "."]
(c3-2 / multi-sentence
      :snt1 (c3-11 / glad-02
                   :ARG0 (c3-14 / safe-01
                                :ARG1 (c3-1 / you))
                   :ARG1 (c3-5 / i))
      :snt2 (c3-10 / close-01
                   :ARG1 (c3-3 / bridge)
                   :source (c3-9 / city
                                 :name (c3-6 / name
                                             :op1 "Ottawa")))
      :snt3 (c3-12 / die-01
                   :ARG1 (c3-8 / person
                               :ARG0-of (c3-0 / have-org-role-91
                                              :ARG2 (c3-4 / soldier))
                               :location (c3-13 / building
                                                :name (c3-7 / name
                                                            :op1 "War"
                                                            :op2 "Memorial")))))

# ::snt I totally understand Paul
# ::tokens ["I", "totally", "understand", "Paul"]
# ::lemmas ["i", "totally", "understand", "Paul"]
(c4-0 / understand-01
      :ARG0 (c4-1 / i)
      :ARG1 (c4-3 / person
                  :name (c4-2 / name
                              :op1 "Paul"))
      :degree (c4-4 / total))

# ::snt Soldier confirmed dead. So sad.
# ::tokens ["Soldier", "confirmed", "dead", ".", "So", "sad", "."]
# ::lemmas ["Soldier", "confirm", "dead", ".", "so", "sad", "."]
(c5-1 / multi-sentence
      :snt1 (c5-4 / confirm-01
                  :ARG1 (c5-3 / die-01
                              :ARG1 (c5-5 / soldier)))
      :snt2 (c5-2 / sad-02
                  :degree (c5-0 / so)))

# ::snt Stay safe. Wishing the best for all of you there!
# ::tokens ["Stay", "safe", ".", "Wishing", "the", "best", "for", "all", "of", "you", "there", "!"]
# ::lemmas ["stay", "safe", ".", "wish", "the", "good", "for", "all", "of", "you", "there", "!"]
(c6-3 / multi-sentence
      :snt1 (c6-8 / stay-01
                  :ARG1 (c6-1 / you)
                  :ARG3 (c6-4 / safe-01
                              :ARG1 c6-1))
      :snt2 (c6-2 / wish-01
                  :ARG1 (c6-10 / thing
                               :ARG1-of (c6-0 / have-degree-91
                                              :ARG2 (c6-6 / good-02
                                                          :ARG1 c6-10)
                                              :ARG3 (c6-5 / most)))
                  :ARG2 (c6-7 / you
                              :mod (c6-11 / all)
                              :location (c6-9 / there))))

# ::snt Glad you are safe, sir!
# ::tokens ["Glad", "you", "are", "safe", ",", "sir", "!"]
# ::lemmas ["glad", "you", "be", "safe", ",", "sir", "!"]
(c7-5 / say-01
      :ARG0 (c7-3 / i)
      :ARG1 (c7-4 / glad-02
                  :ARG0 (c7-2 / safe-01
                              :ARG1 (c7-0 / you))
                  :ARG1 c7-3)
      :ARG2 (c7-1 / sir))

# ::snt - stay safe Sir. please.
# ::tokens ["-", "stay", "safe", "Sir", ".", "please", "."]
# ::lemmas ["-", "stay", "safe", "Sir", ".", "please", "."]
(c8-5 / say-01
      :ARG0 (c8-2 / i)
      :ARG1 (c8-1 / stay-01
                  :ARG1 (c8-4 / person
                              :name (c8-3 / name
                                          :op1 "Sir"))
                  :ARG3 (c8-0 / safe-01
                              :ARG1 c8-4)
                  :mode imperative)
      :ARG2 c8-4)

# ::snt Stay safe sir.
# ::tokens ["Stay", "safe", "sir", "."]
# ::lemmas ["stay", "safe", "sir", "."]
(c9-4 / say-01
      :ARG1 (c9-3 / stay-01
                  :ARG1 (c9-0 / you)
                  :ARG3 (c9-1 / safe-01
                              :ARG1 c9-0)
                  :mode imperative)
      :ARG2 (c9-2 / sir))

# ::snt News saying it's going to be a long day for all in there, protocol required2clear buildings. Poss still shooter/s.
# ::tokens ["News", "saying", "it", "'s", "going", "to", "be", "a", "long", "day", "for", "all", "in", "there", ",", "protocol", "required2clear", "buildings", ".", "Poss", "still", "shooter", "/", "s."]
# ::lemmas ["news", "say", "it", "be", "go", "to", "be", "a", "long", "day", "for", "all", "in", "there", ",", "protocol", "required2clear", "building", ".", "poss", "still", "shooter", "/", "s."]
(c10-0 / multi-sentence
       :snt1 (c10-3 / say-01
                    :ARG0 (c10-12 / news)
                    :ARG1 (c10-2 / day
                                 :ARG1-of (c10-7 / long-03)
                                 :beneficiary (c10-5 / all
                                                     :location (c10-18 / there))))
       :snt2 (c10-13 / require-01
                     :ARG0 (c10-1 / protocol)
                     :ARG1 (c10-17 / clear-01
                                   :ARG1 (c10-9 / building)))
       :snt3 (c10-4 / possess-01
                    :ARG1 (c10-11 / slash
                                  :op1 (c10-8 / person
                                              :ARG0-of (c10-16 / shoot-02))
                                  :op2 (c10-14 / person
                                               :ARG0-of (c10-6 / have-rel-role-91
                                                               :ARG2 (c10-10 / sister)))
                                  :mod (c10-15 / still))))

# ::snt This isn't about you shithead
# ::tokens ["This", "is", "n't", "about", "you", "shithead"]
# ::lemmas ["this", "be", "not", "about", "you", "shithead"]
(c11-4 / say-01
       :ARG0 (c11-2 / i)
       :ARG1 (c11-3 / concern-02
                    :ARG0 (c11-5 / this)
                    :ARG1 (c11-0 / you
                                 :mod (c11-1 / shithead)
                                 :ARG2-of c11-4)
                    :polarity -))

# ::snt If you are able to join us to discuss, we would appreciate any info you can provide.
# ::tokens ["If", "you", "are", "able", "to", "join", "us", "to", "discuss", ",", "we", "would", "appreciate", "any", "info", "you", "can", "provide", "."]
# ::lemmas ["if", "you", "be", "able", "to", "join", "we", "to", "discuss", ",", "we", "would", "appreciate", "any", "info", "you", "can", "provide", "."]
(c12-9 / appreciate-02
       :ARG0 (c12-1 / we)
       :ARG1 (c12-5 / information
                    :mod (c12-4 / any)
                    :ARG1-of (c12-6 / provide-01
                                    :ARG0 (c12-2 / you)
                                    :ARG1-of (c12-8 / possible-01)))
       :condition (c12-3 / possible-01
                         :ARG1 (c12-0 / join-04
                                      :ARG0 c12-2
                                      :ARG1 c12-1
                                      :purpose (c12-7 / discuss-01
                                                      :ARG0 c12-2
                                                      :ARG2 c12-1))))

# ::snt With Clement it's always about Clement
# ::tokens ["With", "Clement", "it", "'s", "always", "about", "Clement"]
# ::lemmas ["with", "Clement", "it", "be", "always", "about", "Clement"]
(c13-3 / concern-02
       :ARG0 (c13-0 / it)
       :ARG1 (c13-2 / person
                    :name (c13-1 / name
                                 :op1 "Clement"))
       :time (c13-4 / always))

# ::snt Stay safe Tony!
# ::tokens ["Stay", "safe", "Tony", "!"]
# ::lemmas ["stay", "safe", "Tony", "!"]
(c14-5 / say-01
       :ARG0 (c14-2 / i)
       :ARG1 (c14-1 / stay-01
                    :ARG1 (c14-4 / person
                                 :name (c14-3 / name
                                              :op1 "Tony"))
                    :ARG3 (c14-0 / safe-01
                                 :ARG1 c14-4)
                    :mode imperative)
       :ARG2 c14-4)

# ::snt All MPs seem to be safe at this point. Glad you are all safe. It's just a horrible event
# ::tokens ["All", "MPs", "seem", "to", "be", "safe", "at", "this", "point", ".", "Glad", "you", "are", "all", "safe", ".", "It", "'s", "just", "a", "horrible", "event"]
# ::lemmas ["all", "mp", "seem", "to", "be", "safe", "at", "this", "point", ".", "glad", "you", "be", "all", "safe", ".", "it", "be", "just", "a", "horrible", "event"]
(c15-1 / multi-sentence
       :snt1 (c15-4 / seem-01
                    :ARG1 (c15-9 / safe-01
                                 :ARG1 (c15-2 / person
                                              :ARG0-of (c15-8 / have-org-role-91
                                                              :ARG1 (c15-13 / government-organization
                                                                            :name (c15-11 / name
                                                                                          :op1 "Parliament"))
                                                              :ARG2 (c15-12 / member))
                                              :mod (c15-7 / all))
                                 :time (c15-5 / point
                                              :mod (c15-18 / this))))
       :snt2 (c15-3 / glad-02
                    :ARG0 (c15-17 / safe-01
                                  :ARG1 (c15-16 / you
                                                :mod (c15-14 / all)))
                    :ARG1 (c15-15 / i))
       :snt3 (c15-10 / event
                     :mod (c15-6 / horrible)
                     :mod (c15-0 / just)))

# ::snt Actually it is about and every other person who works on the Hill. Calm down. I'm glad he's safe.
# ::tokens ["Actually", "it", "is", "about", "and", "every", "other", "person", "who", "works", "on", "the", "Hill", ".", "Calm", "down", ".", "I", "'m", "glad", "he", "'s", "safe", "."]
# ::lemmas ["actually", "it", "be", "about", "and", "every", "other", "person", "who", "work", "on", "the", "Hill", ".", "calm", "down", ".", "i", "be", "glad", "he", "be", "safe", "."]
(c16-3 / multi-sentence
       :snt1 (c16-15 / and
                     :op1 (c16-6 / about
                                 :op1 (c16-10 / person
                                              :mod (c16-5 / every)
                                              :mod (c16-4 / other)
                                              :ARG0-of (c16-1 / work-01
                                                              :ARG2 (c16-13 / government-organization
                                                                            :name (c16-8 / name
                                                                                         :op1 "Hill"))))
                                 :ARG1-of (c16-9 / actual-02))
                     :op2 (c16-12 / calm-down-02
                                  :ARG0 (c16-2 / you
                                               :ARG1-of c16-12)
                                  :mode imperative))
       :snt2 (c16-11 / glad-02
                     :ARG0 (c16-14 / safe-01
                                   :ARG1 (c16-0 / he))
                     :ARG1 (c16-7 / i)))

# ::snt Moore's fb post hit the right note Clement's not even close
# ::tokens ["Moore", "'s", "fb", "post", "hit", "the", "right", "note", "Clement", "'s", "not", "even", "close"]
# ::lemmas ["Moore", "'s", "fb", "post", "hit", "the", "right", "note", "Clement", "be", "not", "even", "close"]
(c17-0 / hit-02
       :ARG0 (c17-5 / post-01
                    :ARG0 (c17-11 / person
                                  :name (c17-3 / name
                                               :op1 "Moore"))
                    :mod (c17-1 / publication
                                :name (c17-4 / name
                                             :op1 "Fb")))
       :ARG1 (c17-6 / note
                    :ARG1-of (c17-7 / right-03))
       :ARG2-of (c17-8 / close-13
                       :ARG1 (c17-10 / person
                                     :name (c17-9 / name
                                                  :op1 "Clement"))
                       :mod (c17-2 / even)
                       :polarity -))

# ::snt they will feel the effects of today's events for the rest of their lives
# ::tokens ["they", "will", "feel", "the", "effects", "of", "today", "'s", "events", "for", "the", "rest", "of", "their", "lives"]
# ::lemmas ["they", "will", "feel", "the", "effect", "of", "today", "'s", "event", "for", "the", "rest", "of", "their", "life"]
(c18-0 / feel-01
       :ARG0 (c18-5 / they)
       :ARG1 (c18-6 / affect-01
                    :ARG0 (c18-2 / event
                                 :time (c18-4 / today))
                    :ARG1 c18-5)
       :duration (c18-3 / rest
                        :part-of (c18-1 / live-01
                                        :ARG0 c18-5)))

# ::snt I didnt see that but I have friends that work on the hill who have been through a lot today.
# ::tokens ["I", "did", "nt", "see", "that", "but", "I", "have", "friends", "that", "work", "on", "the", "hill", "who", "have", "been", "through", "a", "lot", "today", "."]
# ::lemmas ["i", "do", "not", "see", "that", "but", "i", "have", "friend", "that", "work", "on", "the", "hill", "who", "have", "be", "through", "a", "lot", "today", "."]
(c19-5 / contrast-01
       :ARG1 (c19-8 / see-01
                    :ARG0 (c19-4 / i)
                    :ARG1 (c19-9 / that)
                    :polarity -)
       :ARG2 (c19-0 / have-03
                    :ARG0 c19-4
                    :ARG1 (c19-2 / friend
                                 :ARG0-of (c19-1 / work-01
                                                 :location (c19-10 / hill))
                                 :ARG1-of (c19-6 / go-through-20
                                                 :ARG2 (c19-3 / lot)
                                                 :time (c19-7 / today)))))

# ::snt : Still trapped here, barricaded. Not in my office, but elsewhere. : Parlamento ancora assediato.
# ::tokens [":", "Still", "trapped", "here", ",", "barricaded", ".", "Not", "in", "my", "office", ",", "but", "elsewhere", ".", ":", "Parlamento", "ancora", "assediato", "."]
# ::lemmas [":", "still", "trap", "here", ",", "barricade", ".", "not", "in", "my", "office", ",", "but", "elsewhere", ".", ":", "Parlamento", "ancora", "assediato", "."]
(c20-2 / multi-sentence
       :snt1 (c20-15 / and
                     :op1 (c20-14 / trap-01
                                  :ARG1 (c20-1 / you)
                                  :mod (c20-12 / still)
                                  :location (c20-0 / here))
                     :op2 (c20-3 / barricade-01
                                 :ARG1 c20-1))
       :snt2 (c20-10 / contrast-01
                     :ARG1 (c20-11 / be-located-at-91
                                   :ARG1 (c20-7 / i)
                                   :ARG2 (c20-4 / office
                                                :poss c20-7)
                                   :polarity -)
                     :ARG2 (c20-13 / be-located-at-91
                                   :ARG1 (c20-9 / parlamento
                                                :mod (c20-6 / ancora
                                                            :mod (c20-8 / assediato)))
                                   :ARG2 (c20-5 / elsewhere))))

# ::snt Thanks. Stay safe
# ::tokens ["Thanks", ".", "Stay", "safe"]
# ::lemmas ["thank", ".", "stay", "safe"]
(c21-1 / multi-sentence
       :snt1 (c21-5 / thank-01
                    :ARG0 (c21-3 / i)
                    :ARG1 (c21-0 / you))
       :snt2 (c21-4 / stay-01
                    :ARG1 c21-0
                    :ARG3 (c21-2 / safe-01
                                 :ARG1 c21-0)))
