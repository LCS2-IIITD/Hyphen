# ::snt don't show me stills and describe the video for me; show me the video; i'll arrive at my own conclusion.
# ::tokens ["do", "n't", "show", "me", "stills", "and", "describe", "the", "video", "for", "me", ";", "show", "me", "the", "video", ";", "i", "'ll", "arrive", "at", "my", "own", "conclusion", "."]
# ::lemmas ["do", "not", "show", "i", "still", "and", "describe", "the", "video", "for", "i", ";", "show", "i", "the", "video", ";", "i", "'ll", "arrive", "at", "my", "own", "conclusion", "."]
(c1-10 / and
       :op1 (c1-9 / show-01
                  :ARG0 (c1-0 / you)
                  :ARG1 (c1-3 / and
                              :op1 (c1-2 / still)
                              :op2 (c1-7 / describe-01
                                         :ARG0 c1-0
                                         :ARG1 (c1-5 / video)
                                         :beneficiary (c1-4 / i
                                                            :ARG2-of c1-9)
                                         :mode imperative))
                  :mode imperative
                  :polarity -)
       :op2 (c1-1 / show-01
                  :ARG0 c1-0
                  :ARG1 c1-5
                  :ARG2 c1-4
                  :mode imperative)
       :op3 (c1-6 / arrive-01
                  :ARG1 c1-4
                  :ARG4 (c1-8 / conclude-01
                              :ARG0 c1-4)))

# ::snt yup.
# ::tokens ["yup", "."]
# ::lemmas ["yup", "."]
(c2-0 / yup)

# ::snt How do you know is hands were up?
# ::tokens ["How", "do", "you", "know", "is", "hands", "were", "up", "?"]
# ::lemmas ["how", "do", "you", "know", "be", "hand", "be", "up", "?"]
(c3-3 / know-01
      :ARG0 (c3-1 / you)
      :ARG1 (c3-2 / up-03
                  :ARG1 (c3-0 / hand))
      :manner (c3-4 / amr-unknown))

# ::snt I'd wait for the facts before calling someone an executioner....
# ::tokens ["I", "'d", "wait", "for", "the", "facts", "before", "calling", "someone", "an", "executioner", "...."]
# ::lemmas ["i", "would", "wait", "for", "the", "fact", "before", "call", "someone", "an", "executioner", "...."]
(c4-0 / wait-01
      :ARG1 (c4-4 / i)
      :ARG2 (c4-1 / fact)
      :time (c4-2 / before
                  :op1 (c4-6 / call-01
                             :ARG1 (c4-7 / someone)
                             :ARG2 (c4-5 / person
                                         :ARG0-of (c4-3 / execute-01)))))

# ::snt yeah but he didn't fill him full of lead! He was a thug that deserved justice. These pigs should be slaughtered!!!
# ::tokens ["yeah", "but", "he", "did", "n't", "fill", "him", "full", "of", "lead", "!", "He", "was", "a", "thug", "that", "deserved", "justice", ".", "These", "pigs", "should", "be", "slaughtered", "!", "!", "!"]
# ::lemmas ["yeah", "but", "he", "do", "not", "fill", "he", "full", "of", "lead", "!", "he", "be", "a", "thug", "that", "deserve", "justice", ".", "these", "pig", "should", "be", "slaughter", "!", "!", "!"]
(c5-3 / multi-sentence
      :snt1 (c5-8 / contrast-01
                  :ARG2 (c5-2 / fill-01
                              :ARG0 (c5-0 / he)
                              :ARG1 (c5-13 / he)
                              :ARG2 (c5-4 / lead)
                              :polarity -))
      :snt2 (c5-12 / thug
                   :domain (c5-5 / he)
                   :ARG0-of (c5-7 / deserve-01
                                  :ARG1 (c5-1 / justice)))
      :snt3 (c5-9 / recommend-01
                  :ARG1 (c5-11 / slaughter-01
                               :ARG1 (c5-6 / pig
                                           :mod (c5-10 / this)))))

# ::snt such a sweet young man... yeah, he probably was very respectful to the officer... was he defensive about the robbery?
# ::tokens ["such", "a", "sweet", "young", "man", "...", "yeah", ",", "he", "probably", "was", "very", "respectful", "to", "the", "officer", "...", "was", "he", "defensive", "about", "the", "robbery", "?"]
# ::lemmas ["such", "a", "sweet", "young", "man", "...", "yeah", ",", "he", "probably", "be", "very", "respectful", "to", "the", "officer", "...", "be", "he", "defensive", "about", "the", "robbery", "?"]
(c6-2 / multi-sentence
      :snt1 (c6-7 / man
                  :mod (c6-1 / young)
                  :ARG1-of (c6-12 / sweet-03
                                  :degree (c6-4 / such)))
      :snt2 (c6-8 / respect-01
                  :ARG0 (c6-3 / officer)
                  :ARG1 c6-7
                  :degree (c6-6 / very)
                  :mod (c6-11 / yeah
                              :mode expressive)
                  :mod (c6-9 / probable))
      :snt3 (c6-10 / defend-01
                   :ARG0 (c6-0 / he)
                   :ARG1 (c6-5 / rob-01)
                   :polarity (c6-13 / amr-unknown)))

# ::snt We don't know. One self-interested witness says that happened. Multiple witnesses say it didn't. No official report yet.
# ::tokens ["We", "do", "n't", "know", ".", "One", "self", "-", "interested", "witness", "says", "that", "happened", ".", "Multiple", "witnesses", "say", "it", "did", "n't", ".", "No", "official", "report", "yet", "."]
# ::lemmas ["we", "do", "not", "know", ".", "One", "self", "-", "interested", "witness", "say", "that", "happen", ".", "multiple", "witness", "say", "it", "do", "not", ".", "no", "official", "report", "yet", "."]
(c7-2 / multi-sentence
      :snt1 (c7-13 / know-01
                   :ARG0 (c7-0 / we)
                   :polarity -)
      :snt2 (c7-12 / say-01
                   :ARG0 (c7-9 / person
                               :ARG0-of (c7-8 / witness-01)
                               :ARG0-of (c7-7 / interest-01
                                              :ARG1 c7-9)
                               :quant 1)
                   :ARG1 (c7-5 / event))
      :snt3 (c7-6 / say-01
                  :ARG0 (c7-14 / person
                               :ARG0-of (c7-3 / witness-01)
                               :quant (c7-10 / multiple))
                  :ARG1 c7-5
                  :polarity -)
      :snt4 (c7-11 / report-01
                   :mod (c7-4 / official)
                   :time (c7-1 / yet)
                   :polarity -))

# ::snt It may reflectHis attitude when he fought with the police.
# ::tokens ["It", "may", "reflectHis", "attitude", "when", "he", "fought", "with", "the", "police", "."]
# ::lemmas ["it", "may", "reflecthis", "attitude", "when", "he", "fight", "with", "the", "police", "."]
(c8-3 / possible-01
      :ARG1 (c8-4 / reflect-01
                  :ARG1 (c8-2 / it)
                  :ARG2 (c8-6 / attitude
                              :poss (c8-0 / he)
                              :time (c8-1 / fight-01
                                          :ARG0 c8-0
                                          :ARG1 (c8-5 / police)))))

# ::snt I would but you can't trust the police. The profession is corrupt.
# ::tokens ["I", "would", "but", "you", "ca", "n't", "trust", "the", "police", ".", "The", "profession", "is", "corrupt", "."]
# ::lemmas ["i", "would", "but", "you", "can", "not", "trust", "the", "police", ".", "the", "profession", "be", "corrupt", "."]
(c9-1 / multi-sentence
      :snt1 (c9-6 / contrast-01
                  :ARG1 (c9-5 / do-02
                              :ARG0 (c9-3 / i))
                  :ARG2 (c9-4 / possible-01
                              :ARG1 (c9-8 / trust-02
                                          :ARG0 (c9-0 / you)
                                          :ARG1 (c9-9 / police))
                              :polarity -))
      :snt2 (c9-7 / corrupt-01
                  :ARG1 (c9-2 / profession)))

# ::snt Has more to do with WHY he would have attacked the cop for just telling him to get out of the middle of the road.
# ::tokens ["Has", "more", "to", "do", "with", "WHY", "he", "would", "have", "attacked", "the", "cop", "for", "just", "telling", "him", "to", "get", "out", "of", "the", "middle", "of", "the", "road", "."]
# ::lemmas ["have", "more", "to", "do", "with", "why", "he", "would", "have", "attack", "the", "cop", "for", "just", "tell", "he", "to", "get", "out", "of", "the", "middle", "of", "the", "road", "."]
(c10-0 / have-to-do-with-04
       :ARG1 (c10-11 / thing
                     :ARG0-of (c10-6 / cause-01
                                     :ARG1 (c10-10 / attack-01
                                                   :ARG0 (c10-12 / he)
                                                   :ARG1 (c10-5 / cop)
                                                   :ARG1-of c10-6
                                                   :ARG0 (c10-9 / tell-01
                                                                :ARG0 c10-12
                                                                :ARG1 (c10-7 / get-05
                                                                             :ARG1 c10-5
                                                                             :ARG2 (c10-3 / out-06
                                                                                          :ARG1 c10-5
                                                                                          :ARG2 (c10-2 / middle
                                                                                                       :part-of (c10-8 / road)))
                                                                             :ARG2 c10-5
                                                                             :mod (c10-1 / just))))))
       :ARG2 (c10-4 / more))

# ::snt That's the only scenario you can imagine? Possible radio call came during stop, or Brown went for gun thinking (1/2)
# ::tokens ["That", "'s", "the", "only", "scenario", "you", "can", "imagine", "?", "Possible", "radio", "call", "came", "during", "stop", ",", "or", "Brown", "went", "for", "gun", "thinking", "(", "1/2", ")"]
# ::lemmas ["that", "be", "the", "only", "scenario", "you", "can", "imagine", "?", "possible", "radio", "call", "come", "during", "stop", ",", "or", "Brown", "go", "for", "gun", "thinking", "(", "1/2", ")"]
(c11-0 / multi-sentence
       :snt1 (c11-4 / scenario
                    :domain (c11-19 / that)
                    :mod (c11-16 / only)
                    :ARG1-of (c11-12 / imagine-01
                                     :ARG0 (c11-14 / you)
                                     :ARG1-of (c11-1 / possible-01)))
       :snt2 (c11-15 / or
                     :op1 (c11-17 / come-01
                                  :ARG1 (c11-2 / call-02
                                               :ARG0 (c11-9 / radio)
                                               :ARG1-of (c11-5 / possible-01))
                                  :time (c11-7 / stop-01))
                     :op2 (c11-10 / go-03
                                  :ARG0 (c11-6 / person
                                               :name (c11-8 / name
                                                            :op1 "Brown"))
                                  :ARG1 (c11-18 / think-01
                                                :ARG0 c11-6
                                                :instrument (c11-3 / gun))))
       :snt3 (c11-11 / publication
                     :ARG1-of (c11-13 / cite-01
                                      :ARG2 "1/2")))

# ::snt And whatever homeland security agency that watches my tweets better know my house better than I do. make me a hero.
# ::tokens ["And", "whatever", "homeland", "security", "agency", "that", "watches", "my", "tweets", "better", "know", "my", "house", "better", "than", "I", "do", ".", "make", "me", "a", "hero", "."]
# ::lemmas ["and", "whatever", "homeland", "security", "agency", "that", "watch", "my", "tweet", "well", "know", "my", "house", "well", "than", "i", "do", ".", "make", "i", "a", "hero", "."]
(c12-0 / multi-sentence
       :snt1 (c12-6 / and
                    :op2 (c12-10 / make-01
                                 :ARG0 (c12-18 / you)
                                 :ARG1 (c12-7 / hero
                                              :domain (c12-14 / i))
                                 :mode imperative))
       :snt2 (c12-5 / have-degree-91
                    :ARG1 (c12-11 / government-organization
                                  :name (c12-9 / name
                                               :op1 "Homeland"
                                               :op2 "Security"
                                               :op3 "Agency")
                                  :mod (c12-12 / whatever)
                                  :ARG0-of (c12-1 / watch-01
                                                  :ARG1 (c12-20 / tweet-01
                                                                :ARG0 c12-14)))
                    :ARG2 (c12-4 / good-02
                                 :ARG1 c12-11
                                 :ARG2 (c12-17 / know-01
                                               :ARG0 c12-11
                                               :ARG1 (c12-3 / house
                                                            :poss c12-14)))
                    :ARG3 (c12-8 / more)
                    :ARG4 (c12-13 / know-01
                                  :ARG0 (c12-16 / i)
                                  :ARG1 c12-3))
       :ARG2 (c12-2 / good-02
                    :ARG1 c12-17)
       :ARG3 (c12-15 / more)
       :ARG4 (c12-19 / know-01
                     :ARG0 c12-16
                     :ARG1 c12-3))

# ::snt otherwise it's called murder.
# ::tokens ["otherwise", "it", "'s", "called", "murder", "."]
# ::lemmas ["otherwise", "it", "be", "call", "murder", "."]
(c13-0 / have-concession-91
       :ARG1 (c13-2 / call-01
                    :ARG1 (c13-3 / it)
                    :ARG2 (c13-1 / murder-01)))

# ::snt How do we know what the officer did or didn't know..and we know nothing of their encounter? too early
# ::tokens ["How", "do", "we", "know", "what", "the", "officer", "did", "or", "did", "n't", "know", "..", "and", "we", "know", "nothing", "of", "their", "encounter", "?", "too", "early"]
# ::lemmas ["how", "do", "we", "know", "what", "the", "officer", "do", "or", "do", "not", "know", "..", "and", "we", "know", "nothing", "of", "their", "encounter", "?", "too", "early"]
(c14-0 / multi-sentence
       :snt1 (c14-15 / cause-01
                     :ARG0 (c14-3 / amr-unknown)
                     :ARG1 (c14-11 / know-01
                                   :ARG0 (c14-8 / we)
                                   :ARG1 (c14-13 / or
                                                 :op1 (c14-18 / thing
                                                              :ARG1-of (c14-9 / know-01
                                                                              :ARG0 (c14-12 / officer)))
                                                 :op2 (c14-16 / thing
                                                              :ARG1-of (c14-17 / know-01
                                                                               :ARG0 c14-12
                                                                               :polarity -)))))
       :snt2 (c14-2 / know-01
                    :ARG0 (c14-1 / we)
                    :ARG1 (c14-7 / nothing
                                 :topic (c14-6 / encounter-01
                                               :ARG0 (c14-10 / they)))
                    :time (c14-5 / early
                                 :ARG2-of (c14-4 / have-degree-91
                                                 :ARG1 c14-2
                                                 :ARG3 (c14-14 / too)))))

# ::snt aren't you doing the same thing but on the other side of the issue?
# ::tokens ["are", "n't", "you", "doing", "the", "same", "thing", "but", "on", "the", "other", "side", "of", "the", "issue", "?"]
# ::lemmas ["be", "not", "you", "do", "the", "same", "thing", "but", "on", "the", "other", "side", "of", "the", "issue", "?"]
(c15-6 / contrast-01
       :polarity (c15-9 / amr-unknown)
       :ARG1 (c15-5 / do-02
                    :ARG0 (c15-0 / you)
                    :ARG1 (c15-8 / thing
                                 :ARG1-of (c15-7 / same-01)))
       :ARG2 (c15-1 / do-02
                    :ARG0 c15-0
                    :ARG1 c15-8
                    :location (c15-3 / side
                                     :mod (c15-2 / other)
                                     :part-of (c15-4 / issue-02))))

# ::snt . If you want credibility, why don't you link to a news source that isn't your own?
# ::tokens [".", "If", "you", "want", "credibility", ",", "why", "do", "n't", "you", "link", "to", "a", "news", "source", "that", "is", "n't", "your", "own", "?"]
# ::lemmas [".", "if", "you", "want", "credibility", ",", "why", "do", "not", "you", "link", "to", "a", "news", "source", "that", "be", "not", "your", "own", "?"]
(c16-6 / cause-01
       :ARG0 (c16-8 / amr-unknown)
       :ARG1 (c16-2 / link-01
                    :ARG0 (c16-0 / you)
                    :ARG2 (c16-7 / source
                                 :mod (c16-4 / news)
                                 :poss c16-0
                                 :ARG1-of (c16-3 / own-01
                                                 :ARG0 c16-0
                                                 :polarity -))
                    :polarity -)
       :condition (c16-1 / want-01
                         :ARG0 c16-0
                         :ARG1 (c16-5 / credibility)))

# ::snt I You're right, killing people that scare you is totally justifiable, as long as you have a gun AND a badge.
# ::tokens ["I", "You", "'re", "right", ",", "killing", "people", "that", "scare", "you", "is", "totally", "justifiable", ",", "as", "long", "as", "you", "have", "a", "gun", "AND", "a", "badge", "."]
# ::lemmas ["i", "you", "be", "right", ",", "kill", "people", "that", "scare", "you", "be", "totally", "justifiable", ",", "as", "long", "as", "you", "have", "a", "gun", "and", "a", "badge", "."]
(c17-6 / right-06
       :ARG1 (c17-1 / you)
       :ARG2 (c17-5 / possible-01
                    :ARG1 (c17-0 / justify-01
                                 :ARG1 (c17-10 / kill-01
                                               :ARG0 c17-1
                                               :ARG1 (c17-11 / person
                                                             :ARG0-of (c17-8 / scare-01
                                                                             :ARG1 c17-1)))
                                 :condition (c17-12 / as-long-as
                                                    :op1 (c17-2 / have-03
                                                                :ARG0 c17-1
                                                                :ARG1 (c17-4 / and
                                                                             :op1 (c17-7 / gun)
                                                                             :op2 (c17-3 / badge)))))
                    :degree (c17-9 / total)))

# ::snt How many cops have been killed with they're own gun?If you don't know the answer, shut up.
# ::tokens ["How", "many", "cops", "have", "been", "killed", "with", "they", "'re", "own", "gun?If", "you", "do", "n't", "know", "the", "answer", ",", "shut", "up", "."]
# ::lemmas ["how", "many", "cop", "have", "be", "kill", "with", "they", "be", "own", "gun?If", "you", "do", "not", "know", "the", "answer", ",", "shut", "up", "."]
(c18-6 / kill-01
       :ARG1 (c18-3 / cop
                    :quant (c18-7 / amr-unknown))
       :instrument (c18-4 / gun
                          :poss c18-3)
       :condition (c18-1 / know-01
                         :ARG0 (c18-0 / you)
                         :ARG1 (c18-5 / thing
                                      :ARG2-of (c18-2 / answer-01))
                         :polarity -))

# ::snt Multiple times and in retreat.
# ::tokens ["Multiple", "times", "and", "in", "retreat", "."]
# ::lemmas ["multiple", "time", "and", "in", "retreat", "."]
(c19-3 / and
       :op1 (c19-2 / time
                   :mod (c19-0 / multiple))
       :op2 (c19-1 / retreat-01))

# ::snt Does not warrant shooting but raises the tension between officer and citizen that can lead to tragedy
# ::tokens ["Does", "not", "warrant", "shooting", "but", "raises", "the", "tension", "between", "officer", "and", "citizen", "that", "can", "lead", "to", "tragedy"]
# ::lemmas ["do", "not", "warrant", "shooting", "but", "raise", "the", "tension", "between", "officer", "and", "citizen", "that", "can", "lead", "to", "tragedy"]
(c20-6 / contrast-01
       :ARG1 (c20-0 / warrant-01
                    :ARG1 (c20-9 / shoot-02)
                    :polarity -)
       :ARG2 (c20-5 / raise-01
                    :ARG1 (c20-10 / tension
                                  :mod (c20-2 / between
                                              :op1 (c20-3 / officer)
                                              :op2 (c20-7 / citizen))
                                  :ARG0-of (c20-1 / lead-03
                                                  :ARG2 (c20-8 / tragedy)
                                                  :ARG1-of (c20-4 / possible-01)))))

# ::snt Yea, not a lot of rocket science going on with that decision.
# ::tokens ["Yea", ",", "not", "a", "lot", "of", "rocket", "science", "going", "on", "with", "that", "decision", "."]
# ::lemmas ["yea", ",", "not", "a", "lot", "of", "rocket", "science", "go", "on", "with", "that", "decision", "."]
(c21-3 / science
       :mod (c21-1 / rocket)
       :quant (c21-0 / lot
                     :polarity -)
       :topic (c21-2 / decide-01
                     :mod (c21-4 / that)))

# ::snt Police: Video Shows Michael Brown Strong-Arming Store Clerk
# ::tokens ["Police", ":", "Video", "Shows", "Michael", "Brown", "Strong", "-", "Arming", "Store", "Clerk"]
# ::lemmas ["police", ":", "video", "show", "Michael", "Brown", "Strong", "-", "Arming", "Store", "Clerk"]
(c22-7 / show-01
       :ARG0 (c22-4 / video)
       :ARG1 (c22-5 / person
                    :name (c22-3 / name
                                 :op1 "Michael"
                                 :op2 "Brown")
                    :ARG0-of (c22-9 / arm-01
                                    :ARG1 (c22-8 / person
                                                 :ARG0-of (c22-6 / clerk-01
                                                                 :ARG1 (c22-2 / store)))
                                    :ARG1-of (c22-0 / strong-02)))
       :ARG2 (c22-1 / police))

# ::snt You think Mike Brown confessed while they were (allegedly) fighting? Or after he got shot?
# ::tokens ["You", "think", "Mike", "Brown", "confessed", "while", "they", "were", "(", "allegedly", ")", "fighting", "?", "Or", "after", "he", "got", "shot", "?"]
# ::lemmas ["you", "think", "Mike", "Brown", "confess", "while", "they", "be", "(", "allegedly", ")", "fighting", "?", "or", "after", "he", "got", "shoot", "?"]
(c23-3 / multi-sentence
       :snt1 (c23-12 / think-01
                     :ARG0 (c23-1 / you)
                     :ARG1 (c23-9 / confess-01
                                  :ARG0 (c23-8 / person
                                               :name (c23-6 / name
                                                            :op1 "Mike"
                                                            :op2 "Brown"))
                                  :time (c23-2 / fight-01
                                               :ARG0 (c23-10 / they)
                                               :ARG1-of (c23-13 / allege-01))))
       :snt2 (c23-4 / or
                    :op2 (c23-5 / after
                                :op1 (c23-11 / shoot-02
                                             :ARG1 (c23-0 / he)))
                    :polarity (c23-7 / amr-unknown)))

# ::snt Nice to see an idiot who thinks he knows the answers before all the facts come out..
# ::tokens ["Nice", "to", "see", "an", "idiot", "who", "thinks", "he", "knows", "the", "answers", "before", "all", "the", "facts", "come", "out", ".."]
# ::lemmas ["nice", "to", "see", "an", "idiot", "who", "think", "he", "know", "the", "answer", "before", "all", "the", "fact", "come", "out", ".."]
(c25-5 / nice-01
       :ARG1 (c25-7 / see-01
                    :ARG1 (c25-3 / idiot
                                 :ARG0-of (c25-8 / think-01
                                                 :ARG1 (c25-4 / know-01
                                                              :ARG0 c25-3
                                                              :ARG1 (c25-9 / answer-01)
                                                              :time (c25-1 / before
                                                                           :op1 (c25-6 / come-out-09
                                                                                       :ARG1 (c25-0 / fact
                                                                                                    :mod (c25-2 / all)))))))))

# ::snt That's my point, we judge without knowledge.
# ::tokens ["That", "'s", "my", "point", ",", "we", "judge", "without", "knowledge", "."]
# ::lemmas ["that", "be", "my", "point", ",", "we", "judge", "without", "knowledge", "."]
(c26-3 / point-04
       :ARG0 (c26-2 / i)
       :ARG1 (c26-0 / judge-01
                    :ARG0 (c26-1 / we)
                    :ARG1-of (c26-5 / know-01
                                    :ARG0 c26-1
                                    :polarity -))
       :mod (c26-4 / that))

# ::snt I know he was unarmed. Hands up or not it doesn't give a cop the right to kill!!
# ::tokens ["I", "know", "he", "was", "unarmed", ".", "Hands", "up", "or", "not", "it", "does", "n't", "give", "a", "cop", "the", "right", "to", "kill", "!", "!"]
# ::lemmas ["i", "know", "he", "be", "unarmed", ".", "hand", "up", "or", "not", "it", "do", "not", "give", "a", "cop", "the", "right", "to", "kill", "!", "!"]
(c27-1 / multi-sentence
       :snt1 (c27-9 / know-01
                    :ARG0 (c27-3 / i)
                    :ARG1 (c27-10 / arm-01
                                  :ARG1 (c27-0 / he)
                                  :polarity -))
       :snt2 (c27-7 / give-01
                    :ARG0 (c27-8 / it)
                    :ARG1 (c27-5 / right-05
                                 :ARG1 (c27-6 / cop)
                                 :ARG2 (c27-2 / kill-01
                                              :ARG0 c27-6))
                    :ARG2 c27-6
                    :ARG1-of (c27-4 / regardless-91
                                    :ARG2 c27-10)
                    :polarity -))

# ::snt Now THAT part is self interested. CYA
# ::tokens ["Now", "THAT", "part", "is", "self", "interested", ".", "CYA"]
# ::lemmas ["now", "that", "part", "be", "self", "interested", ".", "CYA"]
(c28-0 / multi-sentence
       :snt1 (c28-1 / interest-01
                    :ARG1 (c28-5 / she)
                    :ARG2 (c28-4 / part
                                 :mod (c28-6 / that))
                    :time (c28-2 / now))
       :snt2 (c28-7 / person
                    :name (c28-3 / name
                                 :op1 " CYA")))

# ::snt Helps explain why Mr Brown would attack the cop for telling him to get out of the middle of the road though.
# ::tokens ["Helps", "explain", "why", "Mr", "Brown", "would", "attack", "the", "cop", "for", "telling", "him", "to", "get", "out", "of", "the", "middle", "of", "the", "road", "though", "."]
# ::lemmas ["help", "explain", "why", "Mr", "Brown", "would", "attack", "the", "cop", "for", "tell", "he", "to", "get", "out", "of", "the", "middle", "of", "the", "road", "though", "."]
(c29-0 / have-concession-91
       :ARG1 (c29-3 / explain-01
                    :ARG1 (c29-11 / thing
                                  :ARG0-of (c29-7 / cause-01
                                                  :ARG1 (c29-12 / attack-01
                                                                :ARG0 (c29-5 / person
                                                                             :name (c29-4 / name
                                                                                          :op1 "Brown"))
                                                                :ARG1 (c29-6 / cop)
                                                                :ARG2 (c29-10 / tell-01
                                                                              :ARG0 c29-6
                                                                              :ARG1 (c29-8 / get-05
                                                                                           :ARG1 c29-5
                                                                                           :ARG2 (c29-2 / out-06
                                                                                                        :ARG1 c29-5
                                                                                                        :ARG2 (c29-1 / middle
                                                                                                                     :part-of (c29-9 / road))))
                                                                              :ARG2 c29-5))))))

# ::snt Funny how quickly they got info together on the robbery, but haven't had time to collect evidence on the shooting.
# ::tokens ["Funny", "how", "quickly", "they", "got", "info", "together", "on", "the", "robbery", ",", "but", "have", "n't", "had", "time", "to", "collect", "evidence", "on", "the", "shooting", "."]
# ::lemmas ["funny", "how", "quickly", "they", "get", "info", "together", "on", "the", "robbery", ",", "but", "have", "not", "have", "time", "to", "collect", "evidence", "on", "the", "shooting", "."]
(c30-1 / funny-02
       :ARG1 (c30-8 / contrast-01
                    :ARG1 (c30-9 / get-04
                                 :ARG0 (c30-13 / they)
                                 :ARG1 (c30-5 / information
                                              :topic (c30-7 / rob-01))
                                 :manner (c30-3 / quick-02
                                                :degree (c30-12 / so)))
                    :ARG2 (c30-0 / have-03
                                 :ARG0 c30-13
                                 :ARG1 (c30-11 / time
                                               :purpose (c30-10 / collect-01
                                                                :ARG0 c30-13
                                                                :ARG1 (c30-6 / thing
                                                                             :ARG0-of (c30-2 / evidence-01
                                                                                             :ARG1 (c30-4 / shoot-02)))))
                                 :polarity -)))

# ::snt Honestly. I've seen worse during a Barney's shoe sale.
# ::tokens ["Honestly", ".", "I", "'ve", "seen", "worse", "during", "a", "Barney", "'s", "shoe", "sale", "."]
# ::lemmas ["honestly", ".", "i", "'ve", "see", "bad", "during", "a", "Barney", "'s", "shoe", "sale", "."]
(c31-2 / multi-sentence
       :snt1 (c31-0 / honest-01)
       :snt2 (c31-9 / see-01
                    :ARG0 (c31-5 / i)
                    :ARG1 (c31-3 / bad-07
                                 :ARG2-of (c31-10 / have-degree-91
                                                  :ARG1 c31-9
                                                  :ARG3 (c31-7 / more)))
                    :time (c31-4 / sell-01
                                 :ARG1 (c31-1 / shoe
                                              :poss (c31-8 / person
                                                           :name (c31-6 / name
                                                                        :op1 "Barney"))))))

# ::snt no, by thinking you know what has happened before the facts come out. To bad we can't hear the cigar thief's version.
# ::tokens ["no", ",", "by", "thinking", "you", "know", "what", "has", "happened", "before", "the", "facts", "come", "out", ".", "To", "bad", "we", "ca", "n't", "hear", "the", "cigar", "thief", "'s", "version", "."]
# ::lemmas ["no", ",", "by", "think", "you", "know", "what", "have", "happen", "before", "the", "fact", "come", "out", ".", "to", "bad", "we", "can", "not", "hear", "the", "cigar", "thief", "'s", "version", "."]
(c32-4 / multi-sentence
       :snt1 (c32-0 / have-manner-91
                    :ARG2 (c32-14 / think-01
                                  :ARG0 (c32-1 / you)
                                  :ARG1 (c32-7 / know-01
                                               :ARG0 c32-1
                                               :ARG1 (c32-6 / event)
                                               :time (c32-5 / before
                                                            :op1 (c32-11 / come-out-09
                                                                         :ARG1 (c32-3 / fact))))))
       :snt2 (c32-12 / bad-07
                     :ARG1 (c32-9 / possible-01
                                  :ARG1 (c32-16 / hear-01
                                                :ARG0 (c32-2 / we)
                                                :ARG1 (c32-8 / version
                                                             :poss (c32-15 / person
                                                                           :ARG0-of (c32-13 / steal-01
                                                                                            :ARG1 (c32-10 / cigar)))))
                                  :polarity -)))

# ::snt such a nice college bound boy.
# ::tokens ["such", "a", "nice", "college", "bound", "boy", "."]
# ::lemmas ["such", "a", "nice", "college", "bind", "boy", "."]
(c33-0 / boy
       :ARG1-of (c33-1 / nice-01
                       :degree (c33-4 / such))
       :ARG1-of (c33-3 / bind-01
                       :ARG2 (c33-2 / college)))

# ::snt Not just a thief, also a strong arm thug.
# ::tokens ["Not", "just", "a", "thief", ",", "also", "a", "strong", "arm", "thug", "."]
# ::lemmas ["not", "just", "a", "thief", ",", "also", "a", "strong", "arm", "thug", "."]
(c34-4 / contrast-01
       :ARG1 (c34-3 / person
                    :ARG0-of (c34-5 / steal-01)
                    :mod (c34-0 / just
                                :polarity -))
       :ARG2 (c34-6 / thug
                    :mod (c34-7 / arm
                                :ARG1-of (c34-1 / strong-02))
                    :mod (c34-2 / also)))

# ::snt I can't see what this has to do with him being shot. Officer didn't even know he was a suspect.
# ::tokens ["I", "ca", "n't", "see", "what", "this", "has", "to", "do", "with", "him", "being", "shot", ".", "Officer", "did", "n't", "even", "know", "he", "was", "a", "suspect", "."]
# ::lemmas ["i", "can", "not", "see", "what", "this", "have", "to", "do", "with", "he", "be", "shoot", ".", "Officer", "do", "not", "even", "know", "he", "be", "a", "suspect", "."]
(c35-2 / multi-sentence
       :snt1 (c35-9 / possible-01
                    :ARG1 (c35-11 / see-01
                                  :ARG0 (c35-6 / i)
                                  :ARG1 (c35-0 / have-to-do-with-04
                                               :ARG0 (c35-12 / this)
                                               :ARG1 (c35-4 / shoot-02
                                                            :ARG1 (c35-14 / he))
                                               :ARG2 (c35-10 / thing)))
                    :polarity -)
       :snt2 (c35-7 / know-01
                    :ARG0 (c35-3 / officer)
                    :ARG1 (c35-13 / person
                                  :ARG2-of (c35-1 / suspect-01
                                                  :ARG0 (c35-8 / he)))
                    :mod (c35-5 / even)
                    :polarity -))

# ::snt stop was related to robbery. Again, not excusing either...we need more facts. Period. (2/2)
# ::tokens ["stop", "was", "related", "to", "robbery", ".", "Again", ",", "not", "excusing", "either", "...", "we", "need", "more", "facts", ".", "Period", ".", "(", "2/2", ")"]
# ::lemmas ["stop", "be", "relate", "to", "robbery", ".", "again", ",", "not", "excuse", "either", "...", "we", "need", "more", "fact", ".", "period", ".", "(", "2/2", ")"]
(c36-2 / multi-sentence
       :snt1 (c36-8 / relate-01
                    :ARG1 (c36-12 / stop-01)
                    :ARG2 (c36-5 / rob-01))
       :snt2 (c36-4 / excuse-01
                    :mod (c36-3 / either)
                    :mod (c36-13 / again)
                    :ARG0-of (c36-9 / cause-01
                                    :ARG1 (c36-6 / need-01
                                                 :ARG0 (c36-0 / we)
                                                 :ARG1 (c36-1 / fact
                                                              :quant (c36-7 / more))))
                    :polarity -)
       :snt3 (c36-10 / period)
       :time (c36-11 / date-entity
                     :month 2
                     :day 2))

# ::snt How, by not believing everything the media spouts? LOL
# ::tokens ["How", ",", "by", "not", "believing", "everything", "the", "media", "spouts", "?", "LOL"]
# ::lemmas ["how", ",", "by", "not", "believe", "everything", "the", "medium", "spout", "?", "LOL"]
(c37-7 / amr-unknown
       :manner-of (c37-2 / believe-01
                         :ARG1 (c37-3 / everything
                                      :ARG1-of (c37-6 / spout-01
                                                      :ARG0 (c37-1 / media)))
                         :polarity -)
       :ARG2-of (c37-0 / laugh-01
                       :ARG0 (c37-4 / i)
                       :manner (c37-5 / loud)
                       :mode expressive))

# ::snt Because the chief says he didn't know and the interaction was about walking in the street.
# ::tokens ["Because", "the", "chief", "says", "he", "did", "n't", "know", "and", "the", "interaction", "was", "about", "walking", "in", "the", "street", "."]
# ::lemmas ["because", "the", "chief", "say", "he", "do", "not", "know", "and", "the", "interaction", "be", "about", "walk", "in", "the", "street", "."]
(c38-4 / cause-01
       :ARG0 (c38-7 / and
                    :op1 (c38-5 / say-01
                                :ARG0 (c38-3 / chief)
                                :ARG1 (c38-6 / know-01
                                             :ARG0 c38-3
                                             :polarity -))
                    :op2 (c38-2 / interact-01
                                :topic (c38-0 / walk-01
                                              :ARG2 (c38-1 / street)))))

# ::snt We don't know that. *Initial* contact not related to robbery, but maybe learned during encounter. We still need facts.
# ::tokens ["We", "do", "n't", "know", "that", ".", "*", "Initial", "*", "contact", "not", "related", "to", "robbery", ",", "but", "maybe", "learned", "during", "encounter", ".", "We", "still", "need", "facts", "."]
# ::lemmas ["we", "do", "not", "know", "that", ".", "*", "initial", "*", "contact", "not", "relate", "to", "robbery", ",", "but", "maybe", "learn", "during", "encounter", ".", "we", "still", "need", "fact", "."]
(c39-2 / multi-sentence
       :snt1 (c39-6 / know-01
                    :ARG0 (c39-0 / we)
                    :ARG1 (c39-15 / that)
                    :polarity -)
       :snt2 (c39-11 / contrast-01
                     :ARG1 (c39-10 / relate-01
                                   :ARG1 (c39-12 / contact-01
                                                 :mod (c39-5 / initial))
                                   :ARG2 (c39-7 / rob-01)
                                   :polarity -)
                     :ARG2 (c39-9 / possible-01
                                  :ARG1 (c39-1 / learn-01
                                               :ARG1 c39-12
                                               :time (c39-4 / encounter-01))))
       :snt3 (c39-8 / need-01
                    :ARG0 (c39-13 / we)
                    :ARG1 (c39-3 / fact)
                    :mod (c39-14 / still)))

# ::snt Has absolutely nothing to do w/cop shooting him dead when his hands were up.Cop didn't know about this. Smarmy to bring it up, HF.
# ::tokens ["Has", "absolutely", "nothing", "to", "do", "w", "/", "cop", "shooting", "him", "dead", "when", "his", "hands", "were", "up", ".", "Cop", "did", "n't", "know", "about", "this", ".", "Smarmy", "to", "bring", "it", "up", ",", "HF", "."]
# ::lemmas ["have", "absolutely", "nothing", "to", "do", "w", "/", "cop", "shoot", "he", "dead", "when", "his", "hand", "be", "up", ".", "Cop", "do", "not", "know", "about", "this", ".", "Smarmy", "to", "bring", "it", "up", ",", "HF", "."]
(c40-0 / multi-sentence
       :snt1 (c40-8 / have-to-do-with-04
                    :ARG1 (c40-5 / shoot-02
                                 :ARG0 (c40-17 / cop)
                                 :ARG1 (c40-7 / he
                                              :part (c40-1 / hand
                                                           :ARG1-of (c40-12 / up-03)))
                                 :ARG2 (c40-3 / die-01
                                              :ARG1 c40-7)
                                 :time c40-12
                                 :ARG1 c40-1)
                    :polarity -)
       :ARG2 (c40-11 / nothing
                     :mod (c40-6 / absolute))
       :snt2 (c40-14 / know-01
                     :ARG0 (c40-4 / cop)
                     :ARG1 (c40-18 / this)
                     :polarity -)
       :snt3 (c40-10 / smarmy
                     :ARG0-of (c40-9 / bring-up-02
                                     :ARG1 (c40-13 / it)))
       :snt4 (c40-15 / say-01
                     :ARG1 c40-12
                     :ARG1 c40-13)
       :ARG2 (c40-2 / person
                    :name (c40-16 / name
                                  :op1 " HF")))

# ::snt fine he was a thug. Does that mean he should be killed?!? A badge doesn't make a man judge, jury, &amp; executioner.
# ::tokens ["fine", "he", "was", "a", "thug", ".", "Does", "that", "mean", "he", "should", "be", "killed", "?", "!", "?", "A", "badge", "does", "n't", "make", "a", "man", "judge", ",", "jury", ",", "&", "amp", ";", "executioner", "."]
# ::lemmas ["fine", "he", "be", "a", "thug", ".", "do", "that", "mean", "he", "should", "be", "kill", "?", "!", "?", "a", "badge", "do", "not", "make", "a", "man", "judge", ",", "jury", ",", "&", "amp", ";", "executioner", "."]
(c41-1 / multi-sentence
       :snt1 (c41-8 / fine-04
                    :ARG1 (c41-18 / thug
                                  :domain (c41-6 / he)))
       :snt2 (c41-12 / mean-01
                     :polarity (c41-7 / amr-unknown)
                     :ARG1 (c41-17 / that)
                     :ARG2 (c41-13 / recommend-01
                                   :ARG1 (c41-16 / kill-01
                                                 :ARG1 (c41-4 / he))))
       :snt3 (c41-9 / make-02
                    :ARG0 (c41-10 / badge)
                    :ARG1 (c41-14 / and
                                  :op1 (c41-2 / person
                                              :ARG0-of (c41-0 / judge-01))
                                  :op2 (c41-5 / jury)
                                  :op3 (c41-3 / person
                                              :ARG0-of (c41-11 / execute-01))
                                  :domain (c41-15 / man))
                    :polarity -))

# ::snt how bad an attitude warrants being shot?
# ::tokens ["how", "bad", "an", "attitude", "warrants", "being", "shot", "?"]
# ::lemmas ["how", "bad", "an", "attitude", "warrant", "be", "shoot", "?"]
(c42-0 / warrant-01
       :ARG0 (c42-4 / attitude
                    :ARG1-of (c42-1 / bad-07
                                    :degree (c42-2 / amr-unknown)))
       :ARG1 (c42-3 / shoot-02
                    :ARG1 c42-4))

# ::snt police chief said he did not know.
# ::tokens ["police", "chief", "said", "he", "did", "not", "know", "."]
# ::lemmas ["police", "chief", "say", "he", "do", "not", "know", "."]
(c43-3 / say-01
       :ARG0 (c43-0 / have-org-role-91
                    :ARG1 (c43-1 / police)
                    :ARG2 (c43-2 / chief))
       :ARG1 (c43-4 / know-01
                    :ARG0 c43-2
                    :polarity -))

# ::snt Government is trying to shift the blame to one of its victims. hates govn't until it shoots a black guy
# ::tokens ["Government", "is", "trying", "to", "shift", "the", "blame", "to", "one", "of", "its", "victims", ".", "hates", "govn't", "until", "it", "shoots", "a", "black", "guy"]
# ::lemmas ["government", "be", "try", "to", "shift", "the", "blame", "to", "one", "of", "its", "victim", ".", "hate", "govn't", "until", "it", "shoot", "a", "black", "guy"]
(c44-1 / multi-sentence
       :snt1 (c44-14 / try-01
                     :ARG0 (c44-11 / government-organization
                                   :ARG0-of (c44-9 / govern-01))
                     :ARG1 (c44-13 / shift-01
                                   :ARG0 c44-11
                                   :ARG1 (c44-3 / blame-01)
                                   :ARG2 (c44-8 / person
                                                :ARG1-of (c44-5 / include-91
                                                                :ARG2 (c44-15 / person
                                                                              :ARG1-of (c44-7 / victimize-01
                                                                                              :ARG0 c44-11))))))
       :snt2 (c44-0 / hate-01
                    :ARG1 (c44-6 / government-organization
                                 :ARG0-of c44-9))
       :time (c44-2 / until
                    :op1 (c44-4 / shoot-02
                                :ARG0 c44-6
                                :ARG1 (c44-12 / guy
                                              :ARG1-of (c44-10 / black-05)))))

# ::snt yeah. Its a much safer bet to attack a cop, instead of stepping onto sidewalk.
# ::tokens ["yeah", ".", "Its", "a", "much", "safer", "bet", "to", "attack", "a", "cop", ",", "instead", "of", "stepping", "onto", "sidewalk", "."]
# ::lemmas ["yeah", ".", "its", "a", "much", "safe", "bet", "to", "attack", "a", "cop", ",", "instead", "of", "step", "onto", "sidewalk", "."]
(c45-3 / multi-sentence
       :snt1 (c45-1 / yeah
                    :mode expressive)
       :snt2 (c45-5 / bet-01
                    :ARG2 (c45-11 / attack-01
                                  :ARG1 (c45-9 / cop)
                                  :ARG1-of (c45-7 / instead-of-91
                                                  :ARG2 (c45-10 / step-01
                                                                :ARG2 (c45-6 / sidewalk))))
                    :ARG1-of (c45-0 / have-degree-91
                                    :ARG2 (c45-2 / safe-01
                                                 :ARG1 c45-5)
                                    :ARG3 (c45-8 / more
                                                 :quant (c45-4 / much)))))
