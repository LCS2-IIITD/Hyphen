# ::snt I do. I know Atomic Veterans and loved ones personally who have been denied VA justice dating back to start of Feres Doc
# ::tokens ["I", "do", ".", "I", "know", "Atomic", "Veterans", "and", "loved", "ones", "personally", "who", "have", "been", "denied", "VA", "justice", "dating", "back", "to", "start", "of", "Feres", "Doc"]
# ::lemmas ["i", "do", ".", "i", "know", "Atomic", "Veterans", "and", "love", "one", "personally", "who", "have", "be", "deny", "VA", "justice", "date", "back", "to", "start", "of", "Feres", "Doc"]
(c1-2 / multi-sentence
      :snt1 (c1-5 / do-02
                  :ARG0 (c1-14 / i))
      :snt2 (c1-16 / know-02
                   :ARG0 (c1-15 / i)
                   :ARG1 (c1-7 / and
                               :op1 (c1-3 / veteran
                                          :mod (c1-13 / atom))
                               :op2 (c1-12 / veteran
                                           :ARG1-of (c1-8 / love-01))
                               :ARG1-of (c1-1 / deny-01
                                              :ARG2 (c1-0 / justice
                                                          :beneficiary (c1-10 / government-organization
                                                                              :name (c1-9 / name
                                                                                          :op1 "Veterans"
                                                                                          :op2 "Affairs")))
                                              :ARG1-of (c1-11 / date-01
                                                              :ARG2 (c1-6 / start-01
                                                                          :ARG1 (c1-18 / thing
                                                                                       :name (c1-17 / name
                                                                                                    :op1 "Feres"
                                                                                                    :op2 "Doc")))))
                               :ARG1-of (c1-4 / personal-02))))

# ::snt so u fucks thing he DESERVED to get killed for takin a cigar WTF COP DIDNT KNOW he was just on patrol n killed the kid no reason
# ::tokens ["so", "u", "fucks", "thing", "he", "DESERVED", "to", "get", "killed", "for", "takin", "a", "cigar", "WTF", "COP", "DIDNT", "KNOW", "he", "was", "just", "on", "patrol", "n", "killed", "the", "kid", "no", "reason"]
# ::lemmas ["so", "u", "fuck", "thing", "he", "DESERVED", "to", "get", "kill", "for", "takin", "a", "cigar", "WTF", "COP", "didnt", "know", "he", "be", "just", "on", "patrol", "n", "kill", "the", "kid", "no", "reason"]
(c2-2 / multi-sentence
      :snt1 (c2-16 / cause-01
                   :ARG1 (c2-4 / deserve-01
                               :ARG0 (c2-9 / he)
                               :ARG1 (c2-14 / kill-01
                                            :ARG1 c2-9
                                            :ARG1-of (c2-5 / cause-01
                                                           :ARG0 (c2-18 / take-01
                                                                        :ARG0 c2-9
                                                                        :ARG1 (c2-13 / cigar))))))
      :snt2 (c2-12 / know-01
                   :ARG0 (c2-15 / cop)
                   :ARG1 (c2-8 / and
                               :op1 (c2-3 / patrol-01
                                          :ARG0 (c2-7 / he)
                                          :mod (c2-0 / just))
                               :op2 (c2-17 / kill-01
                                           :ARG0 c2-7
                                           :ARG1 (c2-6 / kid)
                                           :ARG1-of (c2-1 / cause-01
                                                          :ARG0 (c2-11 / reason
                                                                       :polarity -))))
                   :mod (c2-10 / fuck
                               :mode expressive)
                   :polarity -))

# ::snt Video does not show the instance that all the stills are from
# ::tokens ["Video", "does", "not", "show", "the", "instance", "that", "all", "the", "stills", "are", "from"]
# ::lemmas ["video", "do", "not", "show", "the", "instance", "that", "all", "the", "still", "be", "from"]
(c3-4 / show-01
      :ARG0 (c3-3 / video)
      :ARG1 (c3-2 / instance
                  :mod (c3-0 / be-from-91
                             :ARG1 (c3-1 / still
                                         :mod (c3-5 / all))))
      :polarity -)

# ::snt Racist as fuck, also tape is from June not August.
# ::tokens ["Racist", "as", "fuck", ",", "also", "tape", "is", "from", "June", "not", "August", "."]
# ::lemmas ["racist", "as", "fuck", ",", "also", "tape", "be", "from", "June", "not", "August", "."]
(c4-2 / person
      :mod (c4-4 / racist
                 :degree (c4-6 / as-fuck))
      :ARG0-of (c4-5 / tape-02
                     :time (c4-3 / date-interval
                                 :op1 (c4-0 / date-entity
                                            :month 6)
                                 :op2 (c4-7 / date-entity
                                            :month 8
                                            :polarity -))
                     :mod (c4-1 / also)))

# ::snt They say they want transparency and truth? But not this...no no. That truth isn't relevant.......geez.
# ::tokens ["They", "say", "they", "want", "transparency", "and", "truth", "?", "But", "not", "this", "...", "no", "no", ".", "That", "truth", "is", "n't", "relevant", ".......", "geez", "."]
# ::lemmas ["they", "say", "they", "want", "transparency", "and", "truth", "?", "but", "not", "this", "...", "no", "no", ".", "that", "truth", "be", "not", "relevant", ".......", "geez", "."]
(c5-1 / multi-sentence
      :snt1 (c5-12 / say-01
                   :polarity (c5-14 / amr-unknown)
                   :ARG0 (c5-13 / they)
                   :ARG1 (c5-0 / want-01
                               :ARG0 c5-13
                               :ARG1 (c5-5 / and
                                           :op1 (c5-11 / transparency)
                                           :op2 (c5-8 / truth))))
      :snt2 (c5-10 / contrast-01
                   :ARG1 (c5-4 / this
                               :polarity -)
                   :ARG2 (c5-7 / no))
      :snt3 (c5-9 / relevant-01
                  :ARG1 (c5-6 / truth
                              :mod (c5-2 / that))
                  :polarity -)
      :snt4 (c5-3 / ez))

# ::snt Ok...bye. Reasonable discussion isn't your thing. And hearing one side of the story is how you judge a court?
# ::tokens ["Ok", "...", "bye", ".", "Reasonable", "discussion", "is", "n't", "your", "thing", ".", "And", "hearing", "one", "side", "of", "the", "story", "is", "how", "you", "judge", "a", "court", "?"]
# ::lemmas ["ok", "...", "bye", ".", "reasonable", "discussion", "be", "not", "your", "thing", ".", "and", "hear", "one", "side", "of", "the", "story", "be", "how", "you", "judge", "a", "court", "?"]
(c6-3 / multi-sentence
      :snt1 (c6-4 / okay-01)
      :snt2 (c6-8 / discuss-01
                  :ARG1-of (c6-7 / reasonable-02)
                  :domain (c6-12 / thing
                                 :poss (c6-1 / you)
                                 :polarity -))
      :snt3 (c6-13 / and
                   :op2 (c6-0 / hear-01
                              :ARG0 (c6-10 / you)
                              :ARG1 (c6-11 / side
                                           :part-of (c6-5 / story)
                                           :quant 1)
                              :ARG3 (c6-2 / judge-01
                                          :ARG0 c6-10
                                          :ARG1 (c6-9 / court))
                              :polarity (c6-6 / amr-unknown))))

# ::snt Why was the suspect in the video wearing different clothes &amp; shoes than Michael Brown?
# ::tokens ["Why", "was", "the", "suspect", "in", "the", "video", "wearing", "different", "clothes", "&", "amp", ";", "shoes", "than", "Michael", "Brown", "?"]
# ::lemmas ["why", "be", "the", "suspect", "in", "the", "video", "wear", "different", "clothe", "&", "amp", ";", "shoe", "than", "Michael", "Brown", "?"]
(c7-16 / and
       :op1 (c7-9 / cause-01
                  :ARG0 (c7-3 / amr-unknown)
                  :ARG1 (c7-0 / wear-01
                              :ARG0 (c7-7 / person
                                          :ARG2-of (c7-13 / suspect-01
                                                          :ARG1 (c7-6 / video)))
                              :ARG1 (c7-8 / and
                                          :op1 (c7-10 / clothe-01)
                                          :op2 (c7-15 / product
                                                      :name (c7-5 / name
                                                                  :op1 "amp"))
                                          :ARG1-of (c7-11 / differ-02
                                                          :ARG2 (c7-2 / shoe
                                                                      :ARG1-of (c7-4 / wear-01
                                                                                     :ARG0 (c7-1 / person
                                                                                                 :name (c7-12 / name
                                                                                                              :op1 "Michael"
                                                                                                              :op2 "Brown"))))))))
       :op2 (c7-14 / cause-01
                   :ARG0 c7-3)
       :ARG1 c7-0)

# ::snt My mistake, yes - cool heads can wait for truth
# ::tokens ["My", "mistake", ",", "yes", "-", "cool", "heads", "can", "wait", "for", "truth"]
# ::lemmas ["my", "mistake", ",", "yes", "-", "cool", "head", "can", "wait", "for", "truth"]
(c8-2 / mistake-02
      :ARG0 (c8-3 / i)
      :ARG1 (c8-4 / possible-01
                  :ARG1 (c8-1 / wait-01
                              :ARG1 (c8-0 / head
                                          :ARG1-of (c8-5 / cool-04))
                              :ARG2 (c8-6 / truth))))

# ::snt YOU ALL COVERED THE COLORADO MASS SHOOTERDIFFERENTLY~ YOU ARE PAINTING AS A
# ::tokens ["YOU", "ALL", "COVERED", "THE", "COLORADO", "MASS", "SHOOTERDIFFERENTLY~", "YOU", "ARE", "PAINTING", "AS", "A"]
# ::lemmas ["you", "all", "cover", "the", "colorado", "MASS", "SHOOTERDIFFERENTLY~", "you", "be", "paint", "as", "A"]
(c9-1 / multi-sentence
      :snt1 (c9-6 / cover-03
                  :ARG0 (c9-0 / you)
                  :ARG1 (c9-8 / shotgun
                              :mod (c9-2 / state
                                         :name (c9-4 / name
                                                     :op1 "Colorado")))
                  :mod (c9-9 / all))
      :snt2 (c9-5 / paint-02
                  :ARG0 (c9-7 / you)
                  :manner (c9-3 / as-a)))

# ::snt Cops do not have to see a weapon to justify force. U don't frick around when wrestling a cop. We don't know the facts yet.
# ::tokens ["Cops", "do", "not", "have", "to", "see", "a", "weapon", "to", "justify", "force", ".", "U", "do", "n't", "frick", "around", "when", "wrestling", "a", "cop", ".", "We", "do", "n't", "know", "the", "facts", "yet", "."]
# ::lemmas ["cop", "do", "not", "have", "to", "see", "a", "weapon", "to", "justify", "force", ".", "u", "do", "not", "frick", "around", "when", "wrestle", "a", "cop", ".", "we", "do", "not", "know", "the", "fact", "yet", "."]
(c10-4 / multi-sentence
       :snt1 (c10-6 / obligate-01
                    :ARG1 (c10-11 / cop)
                    :ARG2 (c10-13 / see-01
                                  :ARG0 c10-11
                                  :ARG1 (c10-1 / weapon)
                                  :purpose (c10-0 / justify-01
                                                  :ARG0 c10-11
                                                  :ARG1 (c10-3 / force-04)))
                    :polarity -)
       :snt2 (c10-8 / frick-around-00
                    :ARG0 (c10-2 / you)
                    :time (c10-9 / wrestle-01
                                 :ARG0 c10-2
                                 :ARG1 (c10-10 / cop))
                    :polarity -)
       :snt3 (c10-14 / know-01
                     :ARG0 (c10-5 / we)
                     :ARG1 (c10-7 / fact)
                     :time (c10-12 / yet)
                     :polarity -))

# ::snt I don't know what tune she is singing, other than seeking facts.
# ::tokens ["I", "do", "n't", "know", "what", "tune", "she", "is", "singing", ",", "other", "than", "seeking", "facts", "."]
# ::lemmas ["i", "do", "not", "know", "what", "tune", "she", "be", "singe", ",", "other", "than", "seek", "fact", "."]
(c11-5 / know-01
       :ARG0 (c11-4 / i)
       :ARG1 (c11-7 / tune
                    :ARG3-of (c11-6 / sing-01
                                    :ARG0 (c11-2 / she)))
       :ARG2-of (c11-3 / except-01
                       :ARG1 (c11-0 / seek-01
                                    :ARG0 c11-4
                                    :ARG1 (c11-1 / fact)))
       :polarity -)

# ::snt as per report mike didn't fit the description but hey just look at the pics
# ::tokens ["as", "per", "report", "mike", "did", "n't", "fit", "the", "description", "but", "hey", "just", "look", "at", "the", "pics"]
# ::lemmas ["as", "per", "report", "mike", "do", "not", "fit", "the", "description", "but", "hey", "just", "look", "at", "the", "pic"]
(c12-7 / contrast-01
       :ARG1 (c12-2 / fit-06
                    :ARG1 (c12-5 / person
                                 :name (c12-4 / name
                                              :op1 "Mike"))
                    :ARG2 (c12-6 / describe-01)
                    :ARG1-of (c12-8 / report-01)
                    :polarity -)
       :ARG2 (c12-3 / look-01
                    :ARG0 (c12-1 / you)
                    :ARG1 (c12-9 / pic)
                    :mod (c12-0 / just)
                    :mode imperative))

# ::snt Haha. That's a good response. Take care.
# ::tokens ["Haha", ".", "That", "'s", "a", "good", "response", ".", "Take", "care", "."]
# ::lemmas ["Haha", ".", "that", "be", "a", "good", "response", ".", "take", "care", "."]
(c13-1 / multi-sentence
       :snt1 (c13-0 / haha
                    :mode expressive)
       :snt2 (c13-2 / respond-01
                    :ARG2 (c13-6 / that)
                    :ARG1-of (c13-4 / good-02))
       :snt3 (c13-5 / take-01
                    :ARG1 (c13-3 / care-03)))

# ::snt Tape is from June, not August.
# ::tokens ["Tape", "is", "from", "June", ",", "not", "August", "."]
# ::lemmas ["tape", "be", "from", "June", ",", "not", "August", "."]
(c14-4 / contrast-01
       :ARG1 (c14-1 / be-temporally-at-91
                    :ARG1 (c14-5 / tape-02)
                    :ARG2 (c14-2 / date-entity
                                 :month 6))
       :ARG2 (c14-3 / be-temporally-at-91
                    :ARG1 c14-5
                    :ARG2 (c14-0 / date-entity
                                 :month 8)
                    :polarity -))

# ::snt This us America. Not middle eastern countries where the consequence of theft us death. .
# ::tokens ["This", "us", "America", ".", "Not", "middle", "eastern", "countries", "where", "the", "consequence", "of", "theft", "us", "death", ".", "."]
# ::lemmas ["This", "us", "America", ".", "not", "middle", "eastern", "country", "where", "the", "consequence", "of", "theft", "we", "death", ".", "."]
(c15-1 / multi-sentence
       :snt1 (c15-6 / country
                    :name (c15-3 / name
                                 :op1 "America")
                    :domain (c15-9 / this))
       :snt2 (c15-5 / country
                    :location (c15-0 / world-region
                                     :name (c15-4 / name
                                                  :op1 "Middle"
                                                  :op2 "East"))
                    :location-of (c15-8 / consequence-03
                                        :ARG1 (c15-10 / steal-01)
                                        :ARG2 (c15-7 / die-01
                                                     :ARG1 (c15-2 / we)))
                    :polarity -))

# ::snt I just saw it and yes I was wrong it is him however shoving a man dosent warrant being shot
# ::tokens ["I", "just", "saw", "it", "and", "yes", "I", "was", "wrong", "it", "is", "him", "however", "shoving", "a", "man", "dosent", "warrant", "being", "shot"]
# ::lemmas ["i", "just", "see", "it", "and", "yes", "i", "be", "wrong", "it", "be", "he", "however", "shove", "a", "man", "dosent", "warrant", "be", "shoot"]
(c16-11 / and
        :op1 (c16-10 / see-01
                     :ARG0 (c16-7 / i)
                     :ARG1 (c16-9 / it)
                     :time (c16-0 / just))
        :op2 (c16-1 / wrong-04
                    :ARG1 c16-7
                    :ARG2 (c16-2 / he)
                    :mod (c16-3 / yes))
        :concession (c16-6 / shoving-01
                           :ARG1 (c16-4 / man
                                        :ARG1-of (c16-8 / warrant-01
                                                        :ARG0 (c16-5 / shoot-02
                                                                     :ARG1 c16-4)))))

# ::snt bottom line, punk year old man, not kid, should be doing other things besides stealing cigars!
# ::tokens ["bottom", "line", ",", "punk", "year", "old", "man", ",", "not", "kid", ",", "should", "be", "doing", "other", "things", "besides", "stealing", "cigars", "!"]
# ::lemmas ["bottom", "line", ",", "punk", "year", "old", "man", ",", "not", "kid", ",", "should", "be", "do", "other", "thing", "besides", "steal", "cigar", "!"]
(c17-9 / recommend-01
       :ARG1 (c17-8 / do-02
                    :ARG0 (c17-2 / man
                                 :age (c17-14 / temporal-quantity
                                              :unit (c17-0 / year)
                                              :quant 1)
                                 :mod (c17-7 / punk)
                                 :ARG1-of (c17-10 / contrast-01
                                                  :ARG2 (c17-6 / kid
                                                               :polarity -)))
                    :ARG1 (c17-12 / thing
                                  :mod (c17-4 / other)
                                  :ARG2-of (c17-5 / except-01
                                                  :ARG1 (c17-13 / steal-01
                                                                :ARG0 c17-2
                                                                :ARG1 (c17-11 / cigar)))))
       :mod (c17-1 / line
                   :mod (c17-3 / bottom)))

# ::snt Pigs will do anything to protect their own.
# ::tokens ["Pigs", "will", "do", "anything", "to", "protect", "their", "own", "."]
# ::lemmas ["Pigs", "will", "do", "anything", "to", "protect", "their", "own", "."]
(c18-4 / do-02
       :ARG0 (c18-3 / person
                    :ARG0-of (c18-0 / have-org-role-91
                                    :ARG1 (c18-5 / political-party
                                                 :name (c18-2 / name
                                                              :op1 "Pigs"))))
       :ARG1 (c18-6 / anything)
       :purpose (c18-1 / protect-01
                       :ARG0 c18-3
                       :ARG1 c18-3))

# ::snt video/crime is not issue now - unfortunately bcuz now a policeman has killed an unarmed individual; armed robber poss still free
# ::tokens ["video", "/", "crime", "is", "not", "issue", "now", "-", "unfortunately", "bcuz", "now", "a", "policeman", "has", "killed", "an", "unarmed", "individual", ";", "armed", "robber", "poss", "still", "free"]
# ::lemmas ["video", "/", "crime", "be", "not", "issue", "now", "-", "unfortunately", "bcuz", "now", "a", "policeman", "have", "kill", "an", "unarmed", "individual", ";", "armed", "robber", "poss", "still", "free"]
(c19-3 / issue-02
       :ARG0 (c19-13 / slash
                     :op1 (c19-6 / video)
                     :op2 (c19-9 / crime-02))
       :time (c19-5 / now)
       :ARG2-of (c19-0 / fortunate-01
                       :ARG1-of (c19-8 / cause-01
                                       :ARG0 (c19-17 / and
                                                     :op1 (c19-15 / kill-01
                                                                  :ARG0 (c19-7 / policeman)
                                                                  :ARG1 (c19-10 / individual
                                                                                :ARG1-of (c19-2 / arm-01)))
                                                     :op2 (c19-4 / free-04
                                                                 :ARG1 (c19-16 / person
                                                                               :ARG0-of (c19-11 / rob-01)
                                                                               :ARG1-of (c19-12 / arm-01))
                                                                 :mod (c19-1 / still))
                                                     :time (c19-14 / now)))
                       :polarity -)
       :polarity -)

# ::snt again...So petty theft justifies execution style murder in America? . Please clarify the relevance...
# ::tokens ["again", "...", "So", "petty", "theft", "justifies", "execution", "style", "murder", "in", "America", "?", ".", "Please", "clarify", "the", "relevance", "..."]
# ::lemmas ["again", "...", "so", "petty", "theft", "justify", "execution", "style", "murder", "in", "America", "?", ".", "please", "clarify", "the", "relevance", "..."]
(c20-2 / multi-sentence
       :snt1 (c20-0 / justify-01
                    :polarity (c20-13 / amr-unknown)
                    :ARG0 (c20-12 / steal-01
                                  :mod (c20-7 / petty))
                    :ARG1 (c20-8 / murder-01
                                 :mod (c20-3 / style
                                             :mod (c20-4 / execute-01))
                                 :location (c20-9 / country
                                                  :name (c20-6 / name
                                                               :op1 "America")))
                    :mod (c20-5 / again))
       :snt2 (c20-10 / clarify-10
                     :ARG0 (c20-1 / you)
                     :ARG1 (c20-11 / relevant-01)
                     :mode imperative
                     :polite +))

# ::snt and if it did happen like that, he will be punished. The cop lost his mind.
# ::tokens ["and", "if", "it", "did", "happen", "like", "that", ",", "he", "will", "be", "punished", ".", "The", "cop", "lost", "his", "mind", "."]
# ::lemmas ["and", "if", "it", "do", "happen", "like", "that", ",", "he", "will", "be", "punish", ".", "the", "cop", "lose", "his", "mind", "."]
(c21-2 / multi-sentence
       :snt1 (c21-9 / and
                    :op2 (c21-4 / punish-01
                                :ARG1 (c21-0 / he)
                                :condition (c21-5 / resemble-01
                                                  :ARG1 (c21-3 / it)
                                                  :ARG2 (c21-8 / that)
                                                  :polarity -)))
       :snt2 (c21-1 / lose-02
                    :ARG0 (c21-6 / cop
                                 :part (c21-7 / mind
                                              :ARG1-of c21-1))))

# ::snt then you must be as frustrated as - and as long as - me. UNbelievable how the issue is a political pawn to love &amp; hate at will
# ::tokens ["then", "you", "must", "be", "as", "frustrated", "as", "-", "and", "as", "long", "as", "-", "me", ".", "UNbelievable", "how", "the", "issue", "is", "a", "political", "pawn", "to", "love", "&", "amp", ";", "hate", "at", "will"]
# ::lemmas ["then", "you", "must", "be", "as", "frustrated", "as", "-", "and", "as", "long", "as", "-", "i", ".", "UNbelievable", "how", "the", "issue", "be", "a", "political", "pawn", "to", "love", "&", "amp", ";", "hate", "at", "will"]
(c22-1 / multi-sentence
       :snt1 (c22-15 / infer-01
                     :ARG1 (c22-7 / frustrate-01
                                  :ARG0 (c22-17 / you)
                                  :ARG2-of (c22-6 / have-degree-91
                                                  :ARG1 c22-17
                                                  :ARG3 (c22-11 / equal)
                                                  :ARG4 (c22-16 / i))
                                  :condition (c22-4 / as-long-as
                                                    :op1 (c22-0 / i))))
       :snt2 (c22-2 / possible-01
                    :ARG1 (c22-10 / believe-01
                                  :ARG1 (c22-20 / thing
                                                :manner-of (c22-3 / pawn
                                                                  :mod (c22-9 / politics)
                                                                  :purpose (c22-14 / and
                                                                                   :op1 (c22-8 / love-01)
                                                                                   :op2 (c22-12 / amp))
                                                                  :domain (c22-18 / issue-02))
                                                :ARG1-of (c22-13 / mean-01
                                                                 :ARG2 (c22-5 / hate-01
                                                                              :mod (c22-19 / at-will)))))
                    :polarity -))

# ::snt yet we've already convicted the police wrong doing. They're just guilty. Walk right up &amp; shoot ppl. Makes no since either way.
# ::tokens ["yet", "we", "'ve", "already", "convicted", "the", "police", "wrong", "doing", ".", "They", "'re", "just", "guilty", ".", "Walk", "right", "up", "&", "amp", ";", "shoot", "ppl", ".", "Makes", "no", "since", "either", "way", "."]
# ::lemmas ["yet", "we", "'ve", "already", "convict", "the", "police", "wrong", "do", ".", "they", "be", "just", "guilty", ".", "walk", "right", "up", "&", "amp", ";", "shoot", "ppl", ".", "make", "no", "since", "either", "way", "."]
(c23-1 / multi-sentence
       :snt1 (c23-9 / have-concession-91
                    :ARG2 (c23-22 / convict-01
                                  :ARG0 (c23-17 / we)
                                  :ARG1 (c23-4 / police)
                                  :ARG2 (c23-5 / do-02
                                               :ARG0 c23-4
                                               :ARG1 (c23-3 / wrong-02))
                                  :time (c23-8 / already)))
       :snt2 (c23-16 / guilty-01
                     :ARG1 (c23-23 / they)
                     :mod (c23-0 / just))
       :snt3 (c23-19 / and
                     :op1 (c23-2 / walk-01
                                 :ARG0 (c23-20 / you)
                                 :direction (c23-18 / up)
                                 :mod (c23-15 / right))
                     :op2 (c23-6 / shoot-02
                                 :ARG0 c23-20
                                 :ARG1 (c23-7 / person
                                              :name (c23-13 / name
                                                            :op1 "pl"))))
       :snt4 (c23-14 / make-01
                     :ARG1 (c23-21 / no)
                     :time (c23-10 / since
                                   :op1 (c23-12 / way
                                                :mod (c23-11 / either)))))

# ::snt Again, wedon't know what happened. One TV interview doesn't cut it quite yet. But if that's the case, then the cop is in big trouble
# ::tokens ["Again", ",", "wedon't", "know", "what", "happened", ".", "One", "TV", "interview", "does", "n't", "cut", "it", "quite", "yet", ".", "But", "if", "that", "'s", "the", "case", ",", "then", "the", "cop", "is", "in", "big", "trouble"]
# ::lemmas ["again", ",", "wedon't", "know", "what", "happen", ".", "One", "tv", "interview", "do", "not", "cut", "it", "quite", "yet", ".", "but", "if", "that", "be", "the", "case", ",", "then", "the", "cop", "be", "in", "big", "trouble"]
(c24-2 / multi-sentence
       :snt1 (c24-13 / know-01
                     :ARG0 (c24-0 / wednesday)
                     :ARG1 (c24-4 / event)
                     :mod (c24-14 / again)
                     :polarity -)
       :snt2 (c24-8 / cut-it-19
                    :ARG0 (c24-6 / interview-01
                                 :medium (c24-11 / television)
                                 :quant 1)
                    :time (c24-1 / yet
                                 :mod (c24-5 / quite))
                    :polarity -)
       :snt3 (c24-7 / contrast-01
                    :ARG2 (c24-9 / in-trouble-02
                                 :ARG1 (c24-10 / cop)
                                 :mod (c24-3 / big)
                                 :condition (c24-12 / that))))

# ::snt Yea thats some strong arm robbery. He pushed a guy out of his way. Shoplifting should be his only charge. But hes dead....
# ::tokens ["Yea", "that", "s", "some", "strong", "arm", "robbery", ".", "He", "pushed", "a", "guy", "out", "of", "his", "way", ".", "Shoplifting", "should", "be", "his", "only", "charge", ".", "But", "he", "s", "dead", "...."]
# ::lemmas ["yea", "that", "s", "some", "strong", "arm", "robbery", ".", "he", "push", "a", "guy", "out", "of", "his", "way", ".", "shoplifting", "should", "be", "his", "only", "charge", ".", "but", "he", "s", "dead", "...."]
(c25-0 / multi-sentence
       :snt1 (c25-11 / rob-01
                     :mod (c25-8 / arm
                                 :ARG1-of (c25-6 / strong-02))
                     :domain (c25-18 / that)
                     :mod (c25-14 / yea))
       :snt2 (c25-3 / push-01
                    :ARG0 (c25-9 / he)
                    :ARG1 (c25-12 / guy)
                    :ARG2 (c25-16 / out-06
                                  :ARG1 c25-12
                                  :ARG2 (c25-13 / way
                                                :poss c25-12)))
       :snt3 (c25-1 / recommend-01
                    :ARG1 (c25-17 / charge-05
                                  :ARG0 (c25-7 / he)
                                  :ARG2 (c25-10 / shoplift-01
                                                :ARG0 c25-7)
                                  :mod (c25-15 / only)))
       :snt4 (c25-4 / contrast-01
                    :ARG2 (c25-5 / die-01
                                 :ARG1 (c25-2 / he))))

# ::snt Surrendering? I find that extremely hard to believe
# ::tokens ["Surrendering", "?", "I", "find", "that", "extremely", "hard", "to", "believe"]
# ::lemmas ["surrender", "?", "i", "find", "that", "extremely", "hard", "to", "believe"]
(c26-2 / multi-sentence
       :snt1 (c26-6 / surrender-01
                    :polarity (c26-7 / amr-unknown))
       :snt2 (c26-1 / find-02
                    :ARG0 (c26-5 / i)
                    :ARG1 (c26-0 / hard-02
                                 :ARG1 (c26-3 / believe-01
                                              :ARG1 c26-6)
                                 :degree (c26-4 / extreme))))

# ::snt no it certainly does not. Unfortunately pushing and shoving a man is what started this.
# ::tokens ["no", "it", "certainly", "does", "not", ".", "Unfortunately", "pushing", "and", "shoving", "a", "man", "is", "what", "started", "this", "."]
# ::lemmas ["no", "it", "certainly", "do", "not", ".", "unfortunately", "push", "and", "shove", "a", "man", "be", "what", "start", "this", "."]
(c27-1 / multi-sentence
       :snt1 (c27-5 / do-02
                    :ARG0 (c27-3 / it)
                    :mod (c27-6 / certain)
                    :polarity -)
       :snt2 (c27-8 / start-01
                    :ARG0 (c27-10 / and
                                  :op1 (c27-4 / push-01
                                              :ARG1 (c27-7 / man))
                                  :op2 (c27-2 / shove-01
                                              :ARG1 c27-7))
                    :ARG1 (c27-9 / this)
                    :ARG2-of (c27-0 / fortunate-01
                                    :polarity -)))

# ::snt I mean if you can change shoes shorts hats and lose about lbs in a tad maybe cops should be worried
# ::tokens ["I", "mean", "if", "you", "can", "change", "shoes", "shorts", "hats", "and", "lose", "about", "lbs", "in", "a", "tad", "maybe", "cops", "should", "be", "worried"]
# ::lemmas ["i", "mean", "if", "you", "can", "change", "shoe", "short", "hat", "and", "lose", "about", "lb", "in", "a", "tad", "maybe", "cop", "should", "be", "worry"]
(c28-0 / mean-01
       :ARG0 (c28-15 / i)
       :ARG2 (c28-7 / have-condition-91
                    :ARG1 (c28-1 / possible-01
                                 :ARG1 (c28-12 / recommend-01
                                               :ARG1 (c28-13 / worry-02
                                                             :ARG0 (c28-17 / cop
                                                                           :ARG1-of c28-12))))
                    :ARG2 (c28-4 / possible-01
                                 :ARG1 (c28-6 / and
                                              :op1 (c28-2 / change-01
                                                          :ARG0 (c28-16 / you)
                                                          :ARG1 (c28-5 / hat
                                                                       :mod (c28-3 / shorts
                                                                                   :mod (c28-10 / shoe))))
                                              :op2 (c28-8 / lose-01
                                                          :ARG0 c28-16
                                                          :ARG1 (c28-14 / about
                                                                        :op1 (c28-11 / mass-quantity
                                                                                     :unit (c28-9 / pound)
                                                                                     :quant 1))
                                                          :manner (c28-18 / tad))))))

# ::snt esp because as it has been said he got on his knees put his hands up and said don't shoot
# ::tokens ["esp", "because", "as", "it", "has", "been", "said", "he", "got", "on", "his", "knees", "put", "his", "hands", "up", "and", "said", "do", "n't", "shoot"]
# ::lemmas ["esp", "because", "as", "it", "have", "be", "say", "he", "get", "on", "his", "knee", "put", "his", "hand", "up", "and", "say", "do", "not", "shoot"]
(c29-10 / cause-01
        :ARG0 (c29-11 / say-01
                      :ARG1 (c29-13 / and
                                    :op1 (c29-12 / kneel-01
                                                 :ARG0 (c29-0 / he
                                                              :part (c29-2 / hand)))
                                    :op2 (c29-9 / put-01
                                                :ARG0 c29-0
                                                :ARG1 c29-2
                                                :ARG2 (c29-4 / up))
                                    :op3 (c29-6 / say-01
                                                :ARG0 c29-0
                                                :ARG1 (c29-3 / shoot-02
                                                             :ARG0 (c29-1 / you)
                                                             :polarity -
                                                             :mode imperative))))
        :ARG1 (c29-5 / be-located-at-91
                     :ARG1 (c29-7 / it)
                     :ARG2 (c29-8 / here)))

# ::snt um, can cops justify shooting an individual who has his hands up while shouting, "Don't Shoot" ?
# ::tokens ["um", ",", "can", "cops", "justify", "shooting", "an", "individual", "who", "has", "his", "hands", "up", "while", "shouting", ",", "\"", "Do", "n't", "Shoot", "\"", "?"]
# ::lemmas ["um", ",", "can", "cop", "justify", "shoot", "an", "individual", "who", "have", "his", "hand", "up", "while", "shout", ",", "\"", "do", "not", "Shoot", "\"", "?"]
(c30-7 / possible-01
       :polarity (c30-11 / amr-unknown)
       :ARG1 (c30-0 / justify-01
                    :ARG0 (c30-8 / cop)
                    :ARG1 (c30-9 / shoot-02
                                 :ARG0 c30-8
                                 :ARG1 (c30-6 / individual
                                              :ARG1-of (c30-4 / up-03)
                                              :part (c30-1 / hand)))
                    :time (c30-5 / shout-01
                                 :ARG0 c30-6
                                 :ARG1 (c30-3 / shoot-02
                                              :ARG0 (c30-2 / you)
                                              :polarity -
                                              :mode imperative)))
       :mod (c30-10 / um
                    :mode expressive))

# ::snt I don't at all dispute that, but did he really? Was that made up? How do you know?
# ::tokens ["I", "do", "n't", "at", "all", "dispute", "that", ",", "but", "did", "he", "really", "?", "Was", "that", "made", "up", "?", "How", "do", "you", "know", "?"]
# ::lemmas ["i", "do", "not", "at", "all", "dispute", "that", ",", "but", "do", "he", "really", "?", "be", "that", "make", "up", "?", "how", "do", "you", "know", "?"]
(c31-3 / multi-sentence
       :snt1 (c31-10 / contrast-01
                     :ARG1 (c31-9 / dispute-01
                                  :ARG0 (c31-5 / i)
                                  :ARG2 (c31-14 / that)
                                  :degree (c31-15 / at-all)
                                  :polarity -)
                     :ARG2 (c31-2 / do-02
                                  :ARG0 (c31-0 / he)
                                  :ARG1 (c31-11 / real-04
                                                :ARG1 (c31-13 / that))))
       :snt2 (c31-8 / make-up-10
                    :polarity (c31-4 / amr-unknown)
                    :ARG1 (c31-7 / that))
       :snt3 (c31-6 / know-01
                    :ARG0 (c31-1 / you)
                    :manner (c31-12 / amr-unknown)))

# ::snt Soooo petty theft is justification for public execution in America? Ok, got it thanks!
# ::tokens ["Soooo", "petty", "theft", "is", "justification", "for", "public", "execution", "in", "America", "?", "Ok", ",", "got", "it", "thanks", "!"]
# ::lemmas ["Soooo", "petty", "theft", "be", "justification", "for", "public", "execution", "in", "America", "?", "ok", ",", "get", "it", "thank", "!"]
(c32-2 / multi-sentence
       :snt1 (c32-0 / justify-01
                    :polarity (c32-13 / amr-unknown)
                    :ARG1 (c32-3 / execute-01
                                 :ARG1-of (c32-7 / public-02))
                    :ARG2 (c32-10 / steal-01
                                  :mod (c32-12 / petty))
                    :location (c32-8 / country
                                     :name (c32-6 / name
                                                  :op1 "America"))
                    :mod (c32-4 / so))
       :snt2 (c32-9 / get-01
                    :ARG0 (c32-1 / you)
                    :ARG1 (c32-5 / it)
                    :ARG2-of (c32-11 / thank-01
                                     :ARG1 c32-1)))

# ::snt the kid was not as innocent as everyone was making him out to be. The investigation is on going and no one knows the truth just.
# ::tokens ["the", "kid", "was", "not", "as", "innocent", "as", "everyone", "was", "making", "him", "out", "to", "be", ".", "The", "investigation", "is", "on", "going", "and", "no", "one", "knows", "the", "truth", "just", "."]
# ::lemmas ["the", "kid", "be", "not", "as", "innocent", "as", "everyone", "be", "make", "he", "out", "to", "be", ".", "the", "investigation", "be", "on", "go", "and", "no", "one", "know", "the", "truth", "just", "."]
(c33-3 / multi-sentence
       :snt1 (c33-0 / have-degree-91
                    :ARG1 (c33-13 / kid)
                    :ARG2 (c33-7 / innocent-01
                                 :ARG1 c33-13)
                    :ARG3 (c33-5 / equal)
                    :ARG4 (c33-10 / innocent-01
                                  :ARG1 (c33-9 / make-out-23
                                               :ARG0 (c33-4 / everyone)
                                               :ARG1 c33-13))
                    :polarity -)
       :snt2 (c33-14 / and
                     :op1 (c33-11 / go-on-15
                                  :ARG1 (c33-2 / investigate-01))
                     :op2 (c33-6 / know-01
                                 :ARG0 (c33-8 / no-one)
                                 :ARG1 (c33-12 / truth)
                                 :mod (c33-1 / just))))

# ::snt and yet the chief of police said i didn't even know he was a suspect and he was stopped for jaywalking
# ::tokens ["and", "yet", "the", "chief", "of", "police", "said", "i", "did", "n't", "even", "know", "he", "was", "a", "suspect", "and", "he", "was", "stopped", "for", "jaywalking"]
# ::lemmas ["and", "yet", "the", "chief", "of", "police", "say", "i", "do", "not", "even", "know", "he", "be", "a", "suspect", "and", "he", "be", "stop", "for", "jaywalk"]
(c34-15 / and
        :op2 (c34-12 / say-01
                     :ARG0 (c34-9 / person
                                  :ARG0-of (c34-0 / have-org-role-91
                                                  :ARG1 (c34-14 / police)
                                                  :ARG2 (c34-11 / chief)))
                     :ARG1 (c34-7 / and
                                  :op1 (c34-13 / know-01
                                               :ARG0 (c34-8 / i)
                                               :ARG1 c34-9
                                               :ARG2-of (c34-5 / suspect-01
                                                               :ARG1 (c34-3 / he))
                                               :polarity -)
                                  :mod (c34-6 / even))
                     :op2 (c34-4 / stop-01
                                 :ARG1 c34-3
                                 :ARG1-of (c34-10 / cause-01
                                                  :ARG0 (c34-1 / jaywalk-00
                                                               :ARG0 c34-3))))
        :mod (c34-2 / yet))

# ::snt WANT TO KNOW WAS A/M A WEEK AGO! THERE IS A COVER UP GOING ON IN
# ::tokens ["WANT", "TO", "KNOW", "WAS", "A", "/", "M", "A", "WEEK", "AGO", "!", "THERE", "IS", "A", "COVER", "UP", "GOING", "ON", "IN"]
# ::lemmas ["want", "to", "know", "WAS", "A", "/", "M", "A", "WEEK", "AGO", "!", "there", "be", "a", "COVER", "up", "go", "on", "in"]
(c35-1 / multi-sentence
       :snt1 (c35-0 / want-01
                    :ARG1 (c35-8 / know-01
                                 :ARG1 (c35-4 / rate-entity-91
                                              :ARG1 (c35-9 / air-conditioning)
                                              :ARG2 (c35-7 / temporal-quantity
                                                           :unit (c35-3 / week)
                                                           :quant 1))))
       :snt2 (c35-6 / go-on-15
                    :ARG1 (c35-5 / cover-up-04)
                    :location (c35-2 / inside)))

# ::snt If the boy or the cop was a rancher? Patriot? Nobody should shoot anyone for no reason.
# ::tokens ["If", "the", "boy", "or", "the", "cop", "was", "a", "rancher", "?", "Patriot", "?", "Nobody", "should", "shoot", "anyone", "for", "no", "reason", "."]
# ::lemmas ["if", "the", "boy", "or", "the", "cop", "be", "a", "rancher", "?", "Patriot", "?", "nobody", "should", "shoot", "anyone", "for", "no", "reason", "."]
(c36-1 / multi-sentence
       :snt1 (c36-0 / have-condition-91
                    :ARG2 (c36-9 / rancher
                                 :domain (c36-3 / or
                                                :op1 (c36-2 / boy)
                                                :op2 (c36-10 / cop))))
       :snt2 (c36-8 / person
                    :polarity (c36-14 / amr-unknown)
                    :mod (c36-13 / patriot))
       :snt3 (c36-6 / recommend-01
                    :ARG1 (c36-12 / shoot-02
                                  :ARG0 (c36-7 / nobody)
                                  :ARG1 (c36-5 / anyone)
                                  :ARG1-of (c36-11 / cause-01
                                                   :ARG0 (c36-4 / reason
                                                                :polarity -)))))

# ::snt You take care too. T'was fun!
# ::tokens ["You", "take", "care", "too", ".", "T'was", "fun", "!"]
# ::lemmas ["you", "take", "care", "too", ".", "T'was", "fun", "!"]
(c37-2 / multi-sentence
       :snt1 (c37-3 / care-03
                    :ARG1 (c37-0 / you)
                    :mod (c37-5 / too))
       :snt2 (c37-1 / fun-01
                    :ARG1 (c37-4 / this)))

# ::snt Once a fleeing-felon surrenders u can not kill him/her so however you slice it, its still Murder! all it shows is Prob Cause.
# ::tokens ["Once", "a", "fleeing", "-", "felon", "surrenders", "u", "can", "not", "kill", "him", "/", "her", "so", "however", "you", "slice", "it", ",", "its", "still", "Murder", "!", "all", "it", "shows", "is", "Prob", "Cause", "."]
# ::lemmas ["once", "a", "fleeing", "-", "felon", "surrender", "u", "can", "not", "kill", "he", "/", "she", "so", "however", "you", "slice", "it", ",", "its", "still", "murder", "!", "all", "it", "show", "be", "Prob", "Cause", "."]
(c38-0 / multi-sentence
       :snt1 (c38-19 / cause-01
                     :ARG0 (c38-2 / possible-01
                                  :ARG1 (c38-15 / kill-01
                                                :ARG0 (c38-17 / you)
                                                :ARG1 (c38-4 / slash
                                                             :op1 (c38-7 / he)
                                                             :op2 (c38-11 / she)))
                                  :time (c38-18 / surrender-01
                                                :ARG0 (c38-8 / fugitive))
                                  :polarity -)
                     :ARG1 (c38-5 / possible-01
                                  :ARG1 (c38-13 / kill-01
                                                :ARG0 c38-17
                                                :ARG1 c38-4)
                                  :time c38-18))
       :snt2 (c38-12 / murder-01
                     :mod (c38-10 / still)
                     :concession (c38-16 / slice-01
                                         :ARG0 c38-17
                                         :ARG1 (c38-14 / it)))
       :snt3 (c38-1 / show-01
                    :ARG0 c38-14
                    :ARG1 (c38-3 / cause
                                 :mod (c38-9 / probability))
                    :mod (c38-6 / all)))

# ::snt Greta The Full Truth Must Be seen
# ::tokens ["Greta", "The", "Full", "Truth", "Must", "Be", "seen"]
# ::lemmas ["Greta", "the", "full", "truth", "must", "be", "see"]
(c39-5 / say-01
       :ARG1 (c39-1 / obligate-01
                    :ARG2 (c39-2 / see-01
                                 :ARG1 (c39-6 / truth
                                              :ARG1-of (c39-0 / full-09))))
       :ARG2 (c39-4 / person
                    :name (c39-3 / name
                                 :op1 "Greta")))

# ::snt I AM NOT SHOCKED
# ::tokens ["I", "AM", "NOT", "SHOCKED"]
# ::lemmas ["i", "be", "not", "shocked"]
(c40-0 / shock-01
       :ARG1 (c40-1 / i)
       :polarity -)

# ::snt yes homework versus robbing store is prob better way to start ones day.
# ::tokens ["yes", "homework", "versus", "robbing", "store", "is", "prob", "better", "way", "to", "start", "ones", "day", "."]
# ::lemmas ["yes", "homework", "versus", "rob", "store", "be", "prob", "well", "way", "to", "start", "ones", "day", "."]
(c41-1 / way
       :ARG1-of (c41-0 / have-degree-91
                       :ARG2 (c41-9 / good-02)
                       :ARG3 (c41-3 / more))
       :manner-of (c41-10 / start-01
                          :time (c41-7 / day
                                       :quant (c41-4 / one)))
       :domain (c41-6 / versus
                      :op1 (c41-11 / homework)
                      :op2 (c41-8 / rob-01
                                  :ARG1 (c41-5 / store)))
       :mod (c41-2 / yes))

# ::snt They say this isn't relevant and an attack on his character? Uh, its completely relevant! This would come up in court everytime.
# ::tokens ["They", "say", "this", "is", "n't", "relevant", "and", "an", "attack", "on", "his", "character", "?", "Uh", ",", "its", "completely", "relevant", "!", "This", "would", "come", "up", "in", "court", "everytime", "."]
# ::lemmas ["they", "say", "this", "be", "not", "relevant", "and", "an", "attack", "on", "his", "character", "?", "uh", ",", "its", "completely", "relevant", "!", "this", "would", "come", "up", "in", "court", "everytime", "."]
(c42-0 / multi-sentence
       :snt1 (c42-3 / say-01
                    :polarity (c42-4 / amr-unknown)
                    :ARG0 (c42-18 / they)
                    :ARG1 (c42-10 / and
                                  :op1 (c42-8 / relevant-01
                                              :ARG1 (c42-13 / this)
                                              :polarity -)
                                  :op2 (c42-7 / attack-01
                                              :ARG1 (c42-16 / character
                                                            :poss (c42-5 / he)))))
       :snt2 (c42-1 / relevant-01
                    :ARG1 (c42-11 / this)
                    :ARG1-of (c42-2 / complete-02)
                    :mod (c42-9 / uh
                                :mode expressive))
       :snt3 (c42-12 / come-up-13
                     :ARG1 (c42-15 / this)
                     :location (c42-14 / court)
                     :frequency (c42-17 / time
                                        :mod (c42-6 / every))))

# ::snt tony, I'm sorry but did you look at this video? Pretty sure it looks like Mike!
# ::tokens ["tony", ",", "I", "'m", "sorry", "but", "did", "you", "look", "at", "this", "video", "?", "Pretty", "sure", "it", "looks", "like", "Mike", "!"]
# ::lemmas ["tony", ",", "i", "be", "sorry", "but", "do", "you", "look", "at", "this", "video", "?", "pretty", "sure", "it", "look", "like", "Mike", "!"]
(c43-2 / multi-sentence
       :snt1 (c43-12 / say-01
                     :ARG0 (c43-5 / i)
                     :ARG1 (c43-9 / contrast-01
                                  :ARG1 (c43-4 / sorry-01
                                               :ARG1 c43-5)
                                  :ARG2 (c43-1 / look-01
                                               :ARG0 (c43-0 / you)
                                               :ARG1 (c43-7 / video
                                                            :mod (c43-13 / this))
                                               :polarity (c43-15 / amr-unknown)))
                     :ARG2 (c43-3 / sure-02
                                  :ARG0 c43-5
                                  :ARG1 (c43-11 / look-02
                                                :ARG0 (c43-10 / it)
                                                :ARG1 (c43-8 / person
                                                             :name (c43-6 / name
                                                                          :op1 "Mike")))
                                  :degree (c43-14 / pretty))
                     :snt2-of c43-2)
       :ARG0 c43-5
       :ARG1 c43-4
       :ARG1 c43-5
       :ARG2 c43-8
       :name c43-6
       :op1 "tony")

# ::snt kid was a thug punk. Resisted arrest, pushed cop in car, went for gun, then cop lost it.
# ::tokens ["kid", "was", "a", "thug", "punk", ".", "Resisted", "arrest", ",", "pushed", "cop", "in", "car", ",", "went", "for", "gun", ",", "then", "cop", "lost", "it", "."]
# ::lemmas ["kid", "be", "a", "thug", "punk", ".", "resist", "arrest", ",", "push", "cop", "in", "car", ",", "go", "for", "gun", ",", "then", "cop", "lose", "it", "."]
(c44-1 / multi-sentence
       :snt1 (c44-4 / punk
                    :mod (c44-11 / thug)
                    :domain (c44-3 / kid))
       :snt2 (c44-13 / and
                     :op1 (c44-5 / resist-01
                                 :ARG0 (c44-6 / cop)
                                 :ARG1 (c44-2 / arrest-01
                                              :ARG1 c44-3))
                     :op2 (c44-12 / push-01
                                  :ARG0 c44-6
                                  :ARG1 c44-6
                                  :destination (c44-7 / car))
                     :op3 (c44-8 / go-02
                                 :ARG0 c44-6
                                 :ARG4 (c44-9 / gun))
                     :op4 (c44-0 / lose-02
                                 :ARG0 c44-6
                                 :ARG1 c44-9
                                 :time (c44-10 / then))))

# ::snt oh so this is how America justifies his killing good job guys
# ::tokens ["oh", "so", "this", "is", "how", "America", "justifies", "his", "killing", "good", "job", "guys"]
# ::lemmas ["oh", "so", "this", "be", "how", "America", "justify", "his", "kill", "good", "job", "guy"]
(c45-2 / infer-01
       :ARG1 (c45-0 / justify-01
                    :ARG0 (c45-5 / country
                                 :name (c45-3 / name
                                              :op1 "America"))
                    :ARG1 (c45-8 / kill-01
                                 :ARG0 c45-5
                                 :ARG1 (c45-6 / guy
                                              :mod (c45-9 / job
                                                          :ARG1-of (c45-4 / good-02))))
                    :ARG2 (c45-7 / this)
                    :mod (c45-1 / oh-so)))

# ::snt I believe the constitution states, INNOCENT UNTIL PROVEN GUILTY
# ::tokens ["I", "believe", "the", "constitution", "states", ",", "INNOCENT", "UNTIL", "PROVEN", "GUILTY"]
# ::lemmas ["i", "believe", "the", "constitution", "state", ",", "INNOCENT", "UNTIL", "PROVEN", "GUILTY"]
(c46-1 / believe-01
       :ARG0 (c46-2 / i)
       :ARG1 (c46-5 / state-01
                    :ARG0 (c46-4 / constitution)
                    :ARG1 (c46-3 / provide-01
                                 :ARG1 (c46-0 / force-01)
                                 :polarity -)))

# ::snt U have anything of substance to add? Or is this a "is so" "is not" discussion?
# ::tokens ["U", "have", "anything", "of", "substance", "to", "add", "?", "Or", "is", "this", "a", "\"", "is", "so", "\"", "\"", "is", "not", "\"", "discussion", "?"]
# ::lemmas ["u", "have", "anything", "of", "substance", "to", "add", "?", "or", "be", "this", "a", "\"", "be", "so", "\"", "\"", "be", "not", "\"", "discussion", "?"]
(c47-2 / multi-sentence
       :snt1 (c47-0 / have-03
                    :polarity (c47-11 / amr-unknown)
                    :ARG0 (c47-1 / you)
                    :ARG1 (c47-5 / anything
                                 :mod (c47-8 / substance)
                                 :ARG1-of (c47-6 / add-02
                                                 :ARG0 c47-1)))
       :snt2 (c47-3 / or
                    :op2 (c47-7 / discuss-01
                                :ARG1 (c47-10 / this)
                                :polarity (c47-9 / amr-unknown)
                                :mod (c47-4 / so))))

# ::snt if you know a cop, talk to them, I'm amazed more don't lose it in situations.
# ::tokens ["if", "you", "know", "a", "cop", ",", "talk", "to", "them", ",", "I", "'m", "amazed", "more", "do", "n't", "lose", "it", "in", "situations", "."]
# ::lemmas ["if", "you", "know", "a", "cop", ",", "talk", "to", "they", ",", "i", "be", "amazed", "more", "do", "not", "lose", "it", "in", "situation", "."]
(c48-9 / amaze-01
       :ARG0 (c48-2 / lose-02
                    :ARG0 (c48-1 / you)
                    :ARG1 (c48-4 / it)
                    :condition (c48-7 / situation)
                    :polarity -)
       :ARG1 (c48-6 / i)
       :ARG2-of (c48-0 / have-degree-91
                       :ARG1 c48-6
                       :ARG3 (c48-3 / more))
       :condition (c48-8 / know-02
                         :ARG0 c48-1
                         :ARG1 (c48-5 / cop)))

# ::snt Media will do anything to paint POC as thugs. No correlation between surveillance tape+murder, yet was released anyway.
# ::tokens ["Media", "will", "do", "anything", "to", "paint", "POC", "as", "thugs", ".", "No", "correlation", "between", "surveillance", "tape+murder", ",", "yet", "was", "released", "anyway", "."]
# ::lemmas ["medium", "will", "do", "anything", "to", "paint", "POC", "as", "thug", ".", "no", "correlation", "between", "surveillance", "tape+murder", ",", "yet", "be", "release", "anyway", "."]
(c49-3 / multi-sentence
       :snt1 (c49-8 / do-02
                    :ARG0 (c49-7 / media)
                    :ARG1 (c49-14 / anything)
                    :ARG2 (c49-6 / paint-03
                                 :ARG0 c49-7
                                 :ARG1 (c49-4 / organization
                                              :name (c49-5 / name
                                                           :op1 "Palestine"
                                                           :op2 "Civil"
                                                           :op3 "Organization"))
                                 :ARG2 (c49-13 / thug)))
       :snt2 (c49-0 / have-concession-91
                    :ARG1 (c49-9 / release-01
                                 :ARG1 (c49-11 / tape
                                               :ARG0-of (c49-12 / surveil-01))
                                 :mod (c49-1 / yet))
                    :ARG2 (c49-10 / correlate-01
                                  :ARG1 c49-11
                                  :ARG2 (c49-2 / murder-01)
                                  :polarity -)))

# ::snt Good point but what does that have to do with unarmed execution? Robbery is not punishable by execution
# ::tokens ["Good", "point", "but", "what", "does", "that", "have", "to", "do", "with", "unarmed", "execution", "?", "Robbery", "is", "not", "punishable", "by", "execution"]
# ::lemmas ["good", "point", "but", "what", "do", "that", "have", "to", "do", "with", "unarmed", "execution", "?", "robbery", "be", "not", "punishable", "by", "execution"]
(c50-1 / multi-sentence
       :snt1 (c50-6 / contrast-01
                    :ARG1 (c50-4 / point-04
                                 :ARG1-of (c50-7 / good-02))
                    :ARG2 (c50-0 / have-to-do-with-04
                                 :ARG0 (c50-8 / that)
                                 :ARG1 (c50-2 / execute-01
                                              :ARG1-of (c50-10 / arm-01
                                                               :polarity -))
                                 :ARG2 (c50-3 / amr-unknown)))
       :snt2 (c50-9 / punishable-02
                    :ARG2 (c50-5 / rob-01)
                    :manner c50-2
                    :polarity -))
