# ::snt POLICE MURDER
# ::tokens ["POLICE", "MURDER"]
# ::lemmas ["police", "murder"]
(c1-0 / person
      :ARG0-of (c1-1 / mug-01)
      :ARG0-of (c1-2 / police-01))

# ::snt Teenager won't start college on Monday because he was shot ten times by a police officer.
# ::tokens ["Teenager", "wo", "n't", "start", "college", "on", "Monday", "because", "he", "was", "shot", "ten", "times", "by", "a", "police", "officer", "."]
# ::lemmas ["Teenager", "will", "not", "start", "college", "on", "Monday", "because", "he", "be", "shoot", "ten", "time", "by", "a", "police", "officer", "."]
(c2-5 / cause-01
      :ARG0 (c2-7 / shoot-02
                  :ARG0 (c2-1 / officer
                              :mod (c2-3 / police))
                  :ARG1 (c2-8 / teenager)
                  :frequency 10)
      :ARG1 (c2-2 / start-01
                  :ARG0 c2-8
                  :ARG1 (c2-4 / college)
                  :time (c2-6 / date-entity
                              :weekday (c2-0 / monday))
                  :polarity -))

# ::snt first the choke hold goes wrong now this is too dam much too understand cops killing us off
# ::tokens ["first", "the", "choke", "hold", "goes", "wrong", "now", "this", "is", "too", "dam", "much", "too", "understand", "cops", "killing", "us", "off"]
# ::lemmas ["first", "the", "choke", "hold", "go", "wrong", "now", "this", "be", "too", "dam", "much", "too", "understand", "cop", "kill", "we", "off"]
(c3-2 / multi-sentence
      :snt1 (c3-10 / go-08
                   :ARG1 (c3-0 / hold-01
                               :ARG1 (c3-9 / choke-hold))
                   :ARG2 (c3-1 / wrong-02)
                   :li 1)
      :snt2 (c3-3 / understand-01
                  :ARG0 (c3-4 / i)
                  :ARG1 (c3-14 / kill-off-02
                               :ARG0 (c3-8 / cop)
                               :ARG1 (c3-5 / we))
                  :ARG1-of (c3-15 / have-degree-91
                                  :ARG2 (c3-11 / dam)
                                  :ARG3 (c3-13 / too))
                  :ARG1-of (c3-6 / have-quant-91
                                 :ARG2 (c3-7 / much)
                                 :ARG3 (c3-12 / too))))

# ::snt omg this makes me so sad
# ::tokens ["omg", "this", "makes", "me", "so", "sad"]
# ::lemmas ["omg", "this", "make", "i", "so", "sad"]
(c4-0 / make-02
      :ARG0 (c4-5 / this)
      :ARG1 (c4-4 / sad-02
                  :ARG1 (c4-3 / i)
                  :degree (c4-2 / so))
      :mod (c4-1 / oh-my-god
                 :mode expressive))

# ::snt : From Amazing - Rand ft. SinceForever
# ::tokens [":", "From", "Amazing", "-", "Rand", "ft", ".", "SinceForever"]
# ::lemmas [":", "from", "Amazing", "-", "Rand", "ft", ".", "SinceForever"]
(c5-0 / be-from-91
      :ARG2 (c5-5 / and
                  :op1 (c5-3 / person
                             :name (c5-1 / name
                                         :op1 "Amazing"
                                         :op2 "Rand"))
                  :op2 (c5-4 / person
                             :name (c5-2 / name
                                         :op1 "SinceForever"))))
