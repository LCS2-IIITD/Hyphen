# ::snt oh yeah, I want to see how THIS is made to look like this unarmed young brother deserved to be shot times..
# ::tokens ["oh", "yeah", ",", "I", "want", "to", "see", "how", "THIS", "is", "made", "to", "look", "like", "this", "unarmed", "young", "brother", "deserved", "to", "be", "shot", "times", ".."]
# ::lemmas ["oh", "yeah", ",", "i", "want", "to", "see", "how", "this", "be", "make", "to", "look", "like", "this", "unarmed", "young", "brother", "deserve", "to", "be", "shoot", "time", ".."]
(c1-0 / want-01
      :ARG0 (c1-8 / i)
      :ARG1 (c1-12 / see-01
                   :ARG0 c1-8
                   :ARG1 (c1-13 / thing
                                :manner-of (c1-3 / make-02
                                                 :ARG1 (c1-2 / look-02
                                                             :ARG0 (c1-11 / this)
                                                             :ARG1 (c1-10 / deserve-01
                                                                          :ARG0 (c1-4 / brother
                                                                                      :mod (c1-1 / young)
                                                                                      :ARG1-of (c1-14 / arm-01
                                                                                                      :polarity -)
                                                                                      :mod (c1-9 / this))
                                                                          :ARG1 (c1-6 / shoot-01
                                                                                      :frequency (c1-7 / time)))))))
      :mod (c1-5 / oh-yeah
                 :mode expressive))

# ::snt sad bro!
# ::tokens ["sad", "bro", "!"]
# ::lemmas ["sad", "bro", "!"]
(c2-0 / say-01
      :ARG1 (c2-1 / sad-02)
      :ARG2 (c2-2 / bro))

# ::snt I am currently waiting to hear more...seems odd to me!
# ::tokens ["I", "am", "currently", "waiting", "to", "hear", "more", "...", "seems", "odd", "to", "me", "!"]
# ::lemmas ["i", "be", "currently", "wait", "to", "hear", "more", "...", "seem", "odd", "to", "i", "!"]
(c3-2 / multi-sentence
      :snt1 (c3-1 / wait-01
                  :ARG1 (c3-4 / i)
                  :ARG2 (c3-0 / hear-01
                              :ARG0 c3-4
                              :ARG1 (c3-5 / more))
                  :time (c3-6 / current))
      :snt2 (c3-7 / seem-01
                  :ARG1 (c3-3 / odd)
                  :ARG2 c3-4))

# ::snt : An unarmed year old kid shot times &amp; once in the HEAD?!?!Not sure how you can "spin that".
# ::tokens [":", "An", "unarmed", "year", "old", "kid", "shot", "times", "&", "amp", ";", "once", "in", "the", "HEAD?!?!Not", "sure", "how", "you", "can", "\"", "spin", "that", "\"", "."]
# ::lemmas [":", "An", "unarmed", "year", "old", "kid", "shoot", "times", "&", "amp", ";", "once", "in", "the", "HEAD?!?!Not", "sure", "how", "you", "can", "\"", "spin", "that", "\"", "."]
(c4-3 / multi-sentence
      :snt1 (c4-13 / shoot-02
                   :ARG1 (c4-8 / kid
                               :ARG1-of (c4-15 / arm-01
                                               :polarity -)
                               :age (c4-14 / temporal-quantity
                                           :unit (c4-1 / year)
                                           :quant 1)
                               :part (c4-0 / head))
                   :frequency (c4-6 / and
                                    :op1 (c4-12 / times)
                                    :op2 (c4-9 / amp)))
      :snt2 (c4-4 / sure-02
                  :ARG0 (c4-7 / i)
                  :ARG1 (c4-10 / thing
                               :manner-of (c4-2 / spin-03
                                                :ARG0 (c4-16 / you)
                                                :ARG1 (c4-5 / that)
                                                :ARG1-of (c4-11 / possible-01)))
                  :polarity -))

# ::snt : An unarmed year old kid shot times &amp; once in the HEAD?!?!Not sure how you can "spin that".
# ::tokens [":", "An", "unarmed", "year", "old", "kid", "shot", "times", "&", "amp", ";", "once", "in", "the", "HEAD?!?!Not", "sure", "how", "you", "can", "\"", "spin", "that", "\"", "."]
# ::lemmas [":", "An", "unarmed", "year", "old", "kid", "shoot", "times", "&", "amp", ";", "once", "in", "the", "HEAD?!?!Not", "sure", "how", "you", "can", "\"", "spin", "that", "\"", "."]
(c5-3 / multi-sentence
      :snt1 (c5-13 / shoot-02
                   :ARG1 (c5-8 / kid
                               :ARG1-of (c5-15 / arm-01
                                               :polarity -)
                               :age (c5-14 / temporal-quantity
                                           :unit (c5-1 / year)
                                           :quant 1)
                               :part (c5-0 / head))
                   :frequency (c5-6 / and
                                    :op1 (c5-12 / times)
                                    :op2 (c5-9 / amp)))
      :snt2 (c5-4 / sure-02
                  :ARG0 (c5-7 / i)
                  :ARG1 (c5-10 / thing
                               :manner-of (c5-2 / spin-03
                                                :ARG0 (c5-16 / you)
                                                :ARG1 (c5-5 / that)
                                                :ARG1-of (c5-11 / possible-01)))
                  :polarity -))

# ::snt IN THE HEAD??
# ::tokens ["IN", "THE", "HEAD", "?", "?"]
# ::lemmas ["in", "the", "head", "?", "?"]
(c6-2 / be-located-at-91
      :polarity (c6-1 / amr-unknown)
      :ARG2 (c6-0 / head))

# ::snt "it was a warning shot over his head..... And he's big for his age"
# ::tokens ["\"", "it", "was", "a", "warning", "shot", "over", "his", "head", ".....", "And", "he", "'s", "big", "for", "his", "age", "\""]
# ::lemmas ["\"", "it", "be", "a", "warning", "shot", "over", "his", "head", ".....", "and", "he", "be", "big", "for", "his", "age", "\""]
(c7-3 / multi-sentence
      :snt1 (c7-8 / shoot-01
                  :ARG2 (c7-0 / head)
                  :ARG0-of (c7-1 / warn-01)
                  :location (c7-5 / over
                                  :op1 c7-0))
      :snt2 (c7-9 / and
                  :op2 (c7-4 / big
                             :domain (c7-2 / he
                                           :part c7-0)
                             :ARG1-of (c7-7 / cause-01
                                            :ARG0 (c7-6 / age-01
                                                        :ARG1 c7-2)))))

# ::snt Bishop pray for us Black Men, because we in this war that we didn't even know we was fighting.
# ::tokens ["Bishop", "pray", "for", "us", "Black", "Men", ",", "because", "we", "in", "this", "war", "that", "we", "did", "n't", "even", "know", "we", "was", "fighting", "."]
# ::lemmas ["Bishop", "pray", "for", "we", "Black", "Men", ",", "because", "we", "in", "this", "war", "that", "we", "do", "not", "even", "know", "we", "be", "fight", "."]
(c8-7 / pray-01
      :ARG0 (c8-11 / person
                   :ARG0-of (c8-0 / have-org-role-91
                                  :ARG2 (c8-4 / bishop)))
      :beneficiary (c8-1 / we
                         :mod (c8-3 / man
                                    :ARG1-of (c8-8 / black-05)))
      :ARG1-of (c8-9 / cause-01
                     :ARG0 (c8-10 / know-01
                                  :ARG0 c8-1
                                  :ARG1 (c8-2 / fight-01
                                              :ARG0 c8-1
                                              :ARG2 (c8-6 / war-01)
                                              :mod (c8-5 / even))
                                  :polarity -)))

# ::snt but it will. It's going to be "they felt threatened" or "he ran" or some excuse and justification for his murder
# ::tokens ["but", "it", "will", ".", "It", "'s", "going", "to", "be", "\"", "they", "felt", "threatened", "\"", "or", "\"", "he", "ran", "\"", "or", "some", "excuse", "and", "justification", "for", "his", "murder"]
# ::lemmas ["but", "it", "will", ".", "it", "be", "go", "to", "be", "\"", "they", "feel", "threaten", "\"", "or", "\"", "he", "run", "\"", "or", "some", "excuse", "and", "justification", "for", "his", "murder"]
(c9-3 / multi-sentence
      :snt1 (c9-9 / contrast-01
                  :ARG2 (c9-6 / it))
      :snt2 (c9-4 / or
                  :op1 (c9-2 / feel-01
                             :ARG0 (c9-12 / they)
                             :ARG1 (c9-10 / threaten-01
                                          :ARG2 c9-12))
                  :op2 (c9-8 / run-02
                             :ARG0 (c9-0 / he))
                  :op3 (c9-5 / excuse-02
                             :ARG1 (c9-7 / murder-01
                                         :ARG1 c9-0)
                             :mod (c9-11 / some))
                  :op4 (c9-1 / justify-01
                             :ARG1 c9-7)))

# ::snt Just can't...smh.: An unarmed year old kid shot times &amp; once in the HEAD?!?!Not sure how you can "spin that".
# ::tokens ["Just", "can't", "...", "smh", ".", ":", "An", "unarmed", "year", "old", "kid", "shot", "times", "&", "amp", ";", "once", "in", "the", "HEAD?!?!Not", "sure", "how", "you", "can", "\"", "spin", "that", "\"", "."]
# ::lemmas ["just", "can't", "...", "smh", ".", ":", "an", "unarmed", "year", "old", "kid", "shoot", "times", "&", "amp", ";", "once", "in", "the", "HEAD?!?!Not", "sure", "how", "you", "can", "\"", "spin", "that", "\"", "."]
(c10-1 / multi-sentence
       :snt1 (c10-2 / possible-01
                    :mod (c10-0 / just)
                    :polarity -)
       :snt2 (c10-4 / and
                    :op1 (c10-3 / shoot-02
                                :ARG1 (c10-12 / kid
                                              :ARG1-of (c10-9 / arm-01
                                                              :polarity -)
                                              :age (c10-20 / temporal-quantity
                                                           :unit (c10-14 / year)
                                                           :quant 1))
                                :frequency c10-4
                                :op1 (c10-18 / time)
                                :op2 (c10-8 / amp)))
       :op2 (c10-7 / shoot-02
                   :ARG1 c10-12
                   :ARG2 (c10-5 / head)
                   :frequency (c10-16 / once))
       :polarity (c10-19 / amr-unknown)
       :snt3 (c10-15 / sure-02
                     :ARG0 (c10-10 / i)
                     :ARG1 (c10-11 / thing
                                   :manner-of (c10-6 / spin-03
                                                     :ARG0 (c10-13 / you)
                                                     :ARG1 (c10-17 / that)))
                     :polarity -))

# ::snt They will try, but they can't!
# ::tokens ["They", "will", "try", ",", "but", "they", "ca", "n't", "!"]
# ::lemmas ["they", "will", "try", ",", "but", "they", "can", "not", "!"]
(c11-2 / contrast-01
       :ARG1 (c11-0 / try-01
                    :ARG0 (c11-3 / they))
       :ARG2 (c11-1 / possible-01
                    :ARG1 c11-0
                    :polarity -))

# ::snt im sure theyll find a way. They always have and ill actually be surprised if they dont get away with it
# ::tokens ["i", "m", "sure", "they", "ll", "find", "a", "way", ".", "They", "always", "have", "and", "ill", "actually", "be", "surprised", "if", "they", "do", "nt", "get", "away", "with", "it"]
# ::lemmas ["i", "m", "sure", "they", "ll", "find", "a", "way", ".", "they", "always", "have", "and", "ill", "actually", "be", "surprised", "if", "they", "do", "not", "get", "away", "with", "it"]
(c12-3 / multi-sentence
       :snt1 (c12-11 / sure-02
                     :ARG0 (c12-6 / i)
                     :ARG1 (c12-2 / find-01
                                  :ARG0 (c12-12 / they)
                                  :ARG1 (c12-1 / way)))
       :snt2 (c12-13 / and
                     :op1 (c12-0 / have-06
                                 :ARG0 (c12-10 / they)
                                 :time (c12-5 / always))
                     :op2 (c12-4 / surprise-01
                                 :ARG0 (c12-8 / get-away-08
                                              :ARG0 c12-10
                                              :ARG1 (c12-9 / it)
                                              :polarity -)
                                 :ARG1 c12-6)
                     :ARG1-of (c12-7 / actual-02)
                     :condition c12-8))
