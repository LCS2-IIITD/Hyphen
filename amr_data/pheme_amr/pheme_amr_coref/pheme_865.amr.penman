# ::snt . Once again. Bad guy with gun stopped only by good guy with gun. Yes, it is THAT simple.
# ::tokens [".", "Once", "again", ".", "Bad", "guy", "with", "gun", "stopped", "only", "by", "good", "guy", "with", "gun", ".", "Yes", ",", "it", "is", "THAT", "simple", "."]
# ::lemmas [".", "once", "again", ".", "bad", "guy", "with", "gun", "stop", "only", "by", "good", "guy", "with", "gun", ".", "yes", ",", "it", "be", "that", "simple", "."]
(c1-3 / multi-sentence
      :snt1 (c1-16 / again
                   :mod (c1-6 / once))
      :snt2 (c1-13 / stop-01
                   :ARG0 (c1-11 / guy
                                :ARG1-of (c1-10 / good-02)
                                :ARG0-of (c1-0 / have-03
                                               :ARG1 (c1-9 / gun)))
                   :ARG1 (c1-12 / guy
                                :ARG1-of (c1-5 / bad-07)
                                :ARG0-of (c1-2 / have-03
                                               :ARG1 (c1-14 / gun)))
                   :mod (c1-4 / only))
      :snt3 (c1-7 / simple-02
                  :ARG1 (c1-8 / it)
                  :degree (c1-15 / that)
                  :mod (c1-1 / yes)))

# ::snt One gun nut killed by another? Thanks!
# ::tokens ["One", "gun", "nut", "killed", "by", "another", "?", "Thanks", "!"]
# ::lemmas ["One", "gun", "nut", "kill", "by", "another", "?", "thank", "!"]
(c2-1 / multi-sentence
      :snt1 (c2-8 / kill-01
                  :polarity (c2-9 / amr-unknown)
                  :ARG0 (c2-3 / another)
                  :ARG1 (c2-5 / nut
                              :mod (c2-6 / gun)
                              :quant (c2-2 / one)))
      :snt2 (c2-7 / thank-01
                  :ARG0 (c2-4 / i)
                  :ARG1 (c2-0 / you)
                  :mode expressive))

# ::snt What is common does not need to be preached, for it's common/popular. If you have to keep asking, your question is wrong
# ::tokens ["What", "is", "common", "does", "not", "need", "to", "be", "preached", ",", "for", "it", "'s", "common", "/", "popular", ".", "If", "you", "have", "to", "keep", "asking", ",", "your", "question", "is", "wrong"]
# ::lemmas ["what", "be", "common", "do", "not", "need", "to", "be", "preach", ",", "for", "it", "be", "common", "/", "popular", ".", "if", "you", "have", "to", "keep", "ask", ",", "your", "question", "be", "wrong"]
(c3-2 / multi-sentence
      :snt1 (c3-6 / need-01
                  :ARG0 (c3-9 / common
                              :domain (c3-13 / thing))
                  :ARG1 (c3-7 / preach-01
                              :ARG1 c3-13)
                  :ARG1-of (c3-8 / cause-01
                                 :ARG0 (c3-11 / slash
                                              :op1 (c3-10 / common
                                                          :domain c3-13)
                                              :op2 (c3-14 / popular-02
                                                          :ARG1 c3-13)))
                  :polarity -)
      :snt2 (c3-0 / wrong-02
                  :ARG1 (c3-12 / thing
                               :ARG1-of (c3-4 / question-01
                                              :ARG0 (c3-1 / you)))
                  :condition (c3-3 / obligate-01
                                   :ARG1 c3-1
                                   :ARG2 (c3-5 / keep-02
                                               :ARG0 c3-1
                                               :ARG1 (c3-15 / ask-01
                                                            :ARG0 c3-1)))))

# ::snt This sin't a matter of opinion. See the Canadian Charter of Rights and Freedoms
# ::tokens ["This", "sin't", "a", "matter", "of", "opinion", ".", "See", "the", "Canadian", "Charter", "of", "Rights", "and", "Freedoms"]
# ::lemmas ["this", "sin't", "a", "matter", "of", "opinion", ".", "see", "the", "Canadian", "Charter", "of", "Rights", "and", "freedom"]
(c4-2 / multi-sentence
      :snt1 (c4-6 / matter
                  :domain (c4-7 / sin-01
                                :mod (c4-8 / this))
                  :ARG1-of (c4-3 / opine-01)
                  :polarity -)
      :snt2 (c4-4 / see-01
                  :ARG0 (c4-0 / you)
                  :ARG1 (c4-1 / law
                              :name (c4-5 / name
                                          :op1 "Canadian"
                                          :op2 "Charter"
                                          :op3 "of"
                                          :op4 "Rights"
                                          :op5 "and"
                                          :op6 "Fights"))
                  :mode imperative))

# ::snt :Im still waiting for an answer are you going to now going to argue over the other words in that question.
# ::tokens [":", "I", "m", "still", "waiting", "for", "an", "answer", "are", "you", "going", "to", "now", "going", "to", "argue", "over", "the", "other", "words", "in", "that", "question", "."]
# ::lemmas [":", "i", "m", "still", "wait", "for", "an", "answer", "be", "you", "go", "to", "now", "go", "to", "argue", "over", "the", "other", "word", "in", "that", "question", "."]
(c5-2 / multi-sentence
      :snt1 (c5-0 / wait-01
                  :ARG1 (c5-6 / i)
                  :ARG2 (c5-12 / answer-01)
                  :mod (c5-10 / still))
      :snt2 (c5-5 / argue-02
                  :ARG0 (c5-1 / you)
                  :ARG2 (c5-7 / word
                              :mod (c5-3 / other)
                              :location (c5-11 / thing
                                               :ARG1-of (c5-4 / question-01)
                                               :mod (c5-9 / that)))
                  :time (c5-8 / now)))

# ::snt As I said. It seems to me that you don't seem to grasp the meaning of the word 'common'. Still need an answer?
# ::tokens ["As", "I", "said", ".", "It", "seems", "to", "me", "that", "you", "do", "n't", "seem", "to", "grasp", "the", "meaning", "of", "the", "word", "'", "common", "'", ".", "Still", "need", "an", "answer", "?"]
# ::lemmas ["as", "i", "say", ".", "it", "seem", "to", "i", "that", "you", "do", "not", "seem", "to", "grasp", "the", "meaning", "of", "the", "word", "'", "common", "'", ".", "still", "need", "an", "answer", "?"]
(c6-3 / multi-sentence
      :snt1 (c6-14 / say-01
                   :ARG0 (c6-7 / i))
      :snt2 (c6-5 / seem-01
                  :ARG1 (c6-2 / seem-01
                              :ARG1 (c6-11 / grasp-01
                                           :ARG0 (c6-0 / you)
                                           :ARG1 (c6-15 / thing
                                                        :ARG2-of (c6-9 / mean-01
                                                                       :ARG1 (c6-1 / word
                                                                                   :mod (c6-10 / common)))))
                              :ARG2 (c6-12 / i)
                              :polarity -))
      :snt3 (c6-8 / need-01
                  :ARG0 c6-0)
      :ARG1 (c6-13 / thing
                   :ARG2-of (c6-16 / answer-01))
      :polarity (c6-6 / amr-unknown)
      :mod (c6-4 / still))

# ::snt Now that weve dispensed with that dodge, can you please answer the Question.
# ::tokens ["Now", "that", "we", "ve", "dispensed", "with", "that", "dodge", ",", "can", "you", "please", "answer", "the", "Question", "."]
# ::lemmas ["now", "that", "we", "ve", "dispense", "with", "that", "dodge", ",", "can", "you", "please", "answer", "the", "question", "."]
(c7-6 / possible-01
      :polarity (c7-9 / amr-unknown)
      :ARG1 (c7-4 / answer-01
                  :ARG0 (c7-0 / you)
                  :ARG1 (c7-3 / question-01))
      :time (c7-5 / now
                  :time-of (c7-7 / dispense-01
                                 :ARG0 (c7-1 / we)
                                 :ARG1 (c7-2 / dodge-01
                                             :ARG0 c7-1
                                             :mod (c7-8 / that))))
      :polite +)

# ::snt Answer the question please.Do you possess the Common sense Civil Right of Armed Self Defense ?
# ::tokens ["Answer", "the", "question", "please", ".", "Do", "you", "possess", "the", "Common", "sense", "Civil", "Right", "of", "Armed", "Self", "Defense", "?"]
# ::lemmas ["answer", "the", "question", "please", ".", "do", "you", "possess", "the", "common", "sense", "civil", "Right", "of", "Armed", "Self", "Defense", "?"]
(c8-10 / answer-01
       :ARG0 (c8-0 / you)
       :ARG1 (c8-2 / question-01)
       :ARG2 (c8-4 / possess-01
                   :ARG0 c8-0
                   :ARG1 (c8-5 / right-05
                               :ARG2 (c8-6 / defend-01
                                           :ARG1 (c8-9 / self)
                                           :ARG1-of (c8-3 / arm-01))
                               :mod (c8-7 / civil)
                               :mod (c8-1 / sense
                                          :mod (c8-8 / common))))
       :mode imperative
       :polite +)

# ::snt They would like to say NO, but that reveals their Anti-Liberty belief system
# ::tokens ["They", "would", "like", "to", "say", "NO", ",", "but", "that", "reveals", "their", "Anti", "-", "Liberty", "belief", "system"]
# ::lemmas ["they", "would", "like", "to", "say", "no", ",", "but", "that", "reveal", "their", "Anti", "-", "Liberty", "belief", "system"]
(c9-0 / have-concession-91
      :ARG1 (c9-1 / like-02
                  :ARG0 (c9-9 / they)
                  :ARG1 (c9-8 / say-01
                              :ARG0 c9-9
                              :ARG1 (c9-5 / no)))
      :ARG2 (c9-6 / reveal-01
                  :ARG0 c9-8
                  :ARG1 (c9-4 / system
                              :mod (c9-2 / believe-01)
                              :poss c9-9
                              :ARG0-of (c9-3 / oppose-01
                                             :ARG1 (c9-7 / liberty)))))

# ::snt Okay, lets simplify the question: Do you have a right to defend yourself?Yes or No [Y or N] if you prefer.
# ::tokens ["Okay", ",", "lets", "simplify", "the", "question", ":", "Do", "you", "have", "a", "right", "to", "defend", "yourself?Yes", "or", "No", "[", "Y", "or", "N", "]", "if", "you", "prefer", "."]
# ::lemmas ["okay", ",", "lets", "simplify", "the", "question", ":", "do", "you", "have", "a", "right", "to", "defend", "yourself?yes", "or", "no", "[", "Y", "or", "n", "]", "if", "you", "prefer", "."]
(c10-2 / multi-sentence
       :snt1 (c10-3 / okay-01)
       :snt2 (c10-7 / simplify-01
                    :ARG0 (c10-0 / we)
                    :ARG1 (c10-4 / question-01
                                 :ARG1 (c10-8 / truth-value
                                              :polarity-of (c10-5 / right-05
                                                                  :ARG1 (c10-1 / you)
                                                                  :ARG2 (c10-6 / defend-01
                                                                               :ARG0 c10-1
                                                                               :ARG1 c10-1))))
                    :mode imperative))

# ::snt I'm sure the professional involved will be delighted to be described as a "gun nut"
# ::tokens ["I", "'m", "sure", "the", "professional", "involved", "will", "be", "delighted", "to", "be", "described", "as", "a", "\"", "gun", "nut", "\""]
# ::lemmas ["i", "be", "sure", "the", "professional", "involve", "will", "be", "delighted", "to", "be", "describe", "as", "a", "\"", "gun", "nut", "\""]
(c11-7 / sure-02
       :ARG0 (c11-1 / i)
       :ARG1 (c11-4 / delight-01
                    :ARG0 (c11-0 / describe-01
                                 :ARG1 (c11-3 / professional
                                              :ARG1-of (c11-5 / involve-01))
                                 :ARG2 (c11-2 / nut
                                              :topic (c11-6 / gun)))
                    :ARG1 c11-3))

# ::snt How do you REALLY feel?
# ::tokens ["How", "do", "you", "REALLY", "feel", "?"]
# ::lemmas ["how", "do", "you", "really", "feel", "?"]
(c12-2 / feel-01
       :ARG0 (c12-0 / you)
       :ARG1 (c12-3 / amr-unknown)
       :ARG1-of (c12-1 / real-04))

# ::snt Those who are anti-Liberty will dodge and deflect such questions.
# ::tokens ["Those", "who", "are", "anti", "-", "Liberty", "will", "dodge", "and", "deflect", "such", "questions", "."]
# ::lemmas ["those", "who", "be", "anti", "-", "Liberty", "will", "dodge", "and", "deflect", "such", "question", "."]
(c13-7 / and
       :op1 (c13-5 / dodge-01
                   :ARG0 (c13-4 / person
                                :ARG0-of (c13-2 / oppose-01
                                                :ARG1 (c13-1 / liberty)))
                   :ARG1 (c13-3 / question-01
                                :mod (c13-6 / such)))
       :op2 (c13-0 / deflect-01
                   :ARG0 c13-4
                   :ARG1 c13-3))

# ::snt How did that work out in todays situation?
# ::tokens ["How", "did", "that", "work", "out", "in", "todays", "situation", "?"]
# ::lemmas ["how", "do", "that", "work", "out", "in", "today", "situation", "?"]
(c14-0 / work-out-02
       :ARG1 (c14-3 / that)
       :manner (c14-4 / amr-unknown)
       :condition (c14-2 / situation
                         :time (c14-1 / today)))

# ::snt No, you're having trouble answering a simple question
# ::tokens ["No", ",", "you", "'re", "having", "trouble", "answering", "a", "simple", "question"]
# ::lemmas ["no", ",", "you", "be", "have", "trouble", "answer", "a", "simple", "question"]
(c15-0 / have-trouble-04
       :ARG0 (c15-1 / you)
       :ARG1 (c15-5 / answer-01
                    :ARG0 c15-1
                    :ARG1 (c15-2 / question-01
                                 :ARG1-of (c15-4 / simple-02)))
       :mod (c15-3 / no))

# ::snt Once again youve shown yourself to be incapable of answering the question.
# ::tokens ["Once", "again", "you", "ve", "shown", "yourself", "to", "be", "incapable", "of", "answering", "the", "question", "."]
# ::lemmas ["once", "again", "you", "ve", "show", "yourself", "to", "be", "incapable", "of", "answer", "the", "question", "."]
(c16-5 / show-01
       :ARG0 (c16-0 / you)
       :ARG1 (c16-4 / capable-01
                    :ARG1 c16-0
                    :ARG2 (c16-7 / answer-01
                                 :ARG0 c16-0
                                 :ARG1 (c16-6 / thing
                                              :ARG1-of (c16-2 / question-01)))
                    :polarity -)
       :mod (c16-3 / again
                   :mod (c16-1 / once)))

# ::snt So is that a Yes or a No?Your difficulty in answering a simple question should inform you of your stance on Liberty
# ::tokens ["So", "is", "that", "a", "Yes", "or", "a", "No?Your", "difficulty", "in", "answering", "a", "simple", "question", "should", "inform", "you", "of", "your", "stance", "on", "Liberty"]
# ::lemmas ["so", "be", "that", "a", "yes", "or", "a", "no?your", "difficulty", "in", "answer", "a", "simple", "question", "should", "inform", "you", "of", "your", "stance", "on", "Liberty"]
(c17-2 / infer-01
       :ARG1 (c17-1 / or
                    :op1 (c17-0 / yes
                                :domain (c17-4 / that))
                    :op2 (c17-3 / no
                                :domain c17-4)
                    :polarity (c17-5 / amr-unknown)))

# ::snt Aside from American gun nuts, and American "Anti-liberty" nuts, there are other nuts in the world. I know. Nuts!
# ::tokens ["Aside", "from", "American", "gun", "nuts", ",", "and", "American", "\"", "Anti", "-", "liberty", "\"", "nuts", ",", "there", "are", "other", "nuts", "in", "the", "world", ".", "I", "know", ".", "Nuts", "!"]
# ::lemmas ["aside", "from", "American", "gun", "nut", ",", "and", "American", "\"", "Anti", "-", "liberty", "\"", "nut", ",", "there", "be", "other", "nut", "in", "the", "world", ".", "i", "know", ".", "nuts", "!"]
(c18-2 / multi-sentence
       :snt1 (c18-7 / nuts
                    :mod (c18-4 / other)
                    :location (c18-0 / world)
                    :ARG2-of (c18-5 / except-01
                                    :ARG1 (c18-14 / and
                                                  :op1 (c18-8 / nuts
                                                              :mod (c18-12 / gun)
                                                              :mod (c18-11 / country
                                                                           :name (c18-9 / name
                                                                                        :op1 "America")))
                                                  :op2 (c18-10 / nuts
                                                               :ARG0-of (c18-1 / oppose-01
                                                                               :ARG1 (c18-3 / liberty))
                                                               :mod c18-11))))
       :snt2 (c18-13 / know-01
                     :ARG0 (c18-6 / i)
                     :ARG1 (c18-15 / nuts)))

# ::snt Sprinkle some random uppercase letters and remove a few spaces; I'm having trouble reading your tweets. ()
# ::tokens ["Sprinkle", "some", "random", "uppercase", "letters", "and", "remove", "a", "few", "spaces", ";", "I", "'m", "having", "trouble", "reading", "your", "tweets", ".", "(", ")"]
# ::lemmas ["sprinkle", "some", "random", "uppercase", "letter", "and", "remove", "a", "few", "space", ";", "i", "be", "have", "trouble", "read", "your", "tweet", ".", "(", ")"]
(c19-3 / multi-sentence
       :snt1 (c19-15 / and
                     :op1 (c19-13 / spray-01
                                  :ARG0 (c19-1 / you)
                                  :ARG1 (c19-2 / letter
                                               :mod (c19-4 / uppercase)
                                               :mod (c19-11 / random)
                                               :quant (c19-7 / some))
                                  :mode imperative)
                     :op2 (c19-10 / remove-01
                                  :ARG0 c19-1
                                  :ARG1 (c19-5 / space
                                               :quant (c19-6 / few))
                                  :mode imperative))
       :snt2 (c19-0 / have-trouble-04
                    :ARG0 (c19-9 / i)
                    :ARG1 (c19-8 / read-01
                                 :ARG0 c19-9
                                 :ARG1 (c19-14 / tweet-01
                                               :ARG0 (c19-12 / you)))))

# ::snt Wait a minute! Do you mean he didn't try conflict resolution first? /sarc.
# ::tokens ["Wait", "a", "minute", "!", "Do", "you", "mean", "he", "did", "n't", "try", "conflict", "resolution", "first", "?", "/sarc", "."]
# ::lemmas ["wait", "a", "minute", "!", "do", "you", "mean", "he", "do", "not", "try", "conflict", "resolution", "first", "?", "/sarc", "."]
(c20-4 / multi-sentence
       :snt1 (c20-1 / wait-01
                    :ARG1 (c20-2 / you)
                    :duration (c20-12 / temporal-quantity
                                      :unit (c20-6 / minute)
                                      :quant 1)
                    :mode imperative)
       :snt2 (c20-3 / mean-01
                    :ARG0 (c20-9 / you)
                    :ARG2 (c20-11 / try-01
                                  :ARG0 (c20-0 / he)
                                  :ARG1 (c20-7 / resolve-01
                                               :ARG1 (c20-8 / conflict-01))
                                  :ord (c20-5 / ordinal-entity
                                              :value 1)
                                  :polarity -)
                    :polarity (c20-13 / amr-unknown))
       :snt3 (c20-10 / sarcasm))

# ::snt Common sense - by definition what you are preaching is uncommon.
# ::tokens ["Common", "sense", "-", "by", "definition", "what", "you", "are", "preaching", "is", "uncommon", "."]
# ::lemmas ["common", "sense", "-", "by", "definition", "what", "you", "be", "preach", "be", "uncommon", "."]
(c21-5 / common
       :domain (c21-6 / sense
                      :mod c21-5)
       :ARG1-of (c21-1 / mean-01
                       :ARG2 (c21-2 / uncommon
                                    :domain (c21-7 / thing
                                                   :ARG1-of (c21-3 / preach-01
                                                                   :ARG0 (c21-0 / you)))
                                    :ARG1-of (c21-4 / define-01))))

# ::snt you do know where Ottawa is right?
# ::tokens ["you", "do", "know", "where", "Ottawa", "is", "right", "?"]
# ::lemmas ["you", "do", "know", "where", "Ottawa", "be", "right", "?"]
(c22-5 / know-01
       :ARG0 (c22-0 / you)
       :ARG1 (c22-1 / location
                    :ARG2-of (c22-3 / right-06
                                    :ARG1 (c22-4 / city
                                                 :name (c22-2 / name
                                                              :op1 "Ottawa"))))
       :polarity (c22-6 / amr-unknown))

# ::snt It's Canada. The nd Amendment doesn't apply here. That's why our streets are safer.
# ::tokens ["It", "'s", "Canada", ".", "The", "nd", "Amendment", "does", "n't", "apply", "here", ".", "That", "'s", "why", "our", "streets", "are", "safer", "."]
# ::lemmas ["it", "be", "Canada", ".", "the", "nd", "Amendment", "do", "not", "apply", "here", ".", "that", "be", "why", "our", "street", "be", "safe", "."]
(c23-3 / multi-sentence
       :snt1 (c23-10 / country
                     :name (c23-6 / name
                                  :op1 "Canada"))
       :snt2 (c23-13 / apply-02
                     :ARG1 (c23-2 / law
                                  :name (c23-7 / name
                                               :op1 "ND"
                                               :op2 "Amendment"))
                     :location (c23-0 / here)
                     :polarity -)
       :snt3 (c23-9 / cause-01
                    :ARG0 (c23-12 / that)
                    :ARG1 (c23-11 / safe-01
                                  :ARG0 (c23-5 / street
                                               :poss (c23-1 / we))
                                  :ARG2-of (c23-4 / have-degree-91
                                                  :ARG1 c23-5
                                                  :ARG3 (c23-8 / more)))))

# ::snt Common sense is made up of two words.
# ::tokens ["Common", "sense", "is", "made", "up", "of", "two", "words", "."]
# ::lemmas ["common", "sense", "be", "make", "up", "of", "two", "word", "."]
(c24-3 / make-up-07
       :ARG1 (c24-0 / sense-02
                    :mod (c24-2 / common))
       :ARG2 (c24-1 / word
                    :quant 2))

# ::snt Having trouble with reading comprehension?Do you possess the Common sense Civil Right of Armed Self Defense ?
# ::tokens ["Having", "trouble", "with", "reading", "comprehension?Do", "you", "possess", "the", "Common", "sense", "Civil", "Right", "of", "Armed", "Self", "Defense", "?"]
# ::lemmas ["have", "trouble", "with", "reading", "comprehension?do", "you", "possess", "the", "common", "sense", "civil", "Right", "of", "Armed", "Self", "Defense", "?"]
(c25-3 / possess-01
       :ARG0 (c25-0 / you)
       :ARG1 (c25-5 / right-05
                    :ARG1 (c25-4 / defend-01
                                 :ARG1 (c25-8 / self)
                                 :ARG1-of (c25-9 / arm-01))
                    :mod (c25-6 / civil)
                    :mod (c25-1 / sense
                                :mod (c25-7 / common)))
       :polarity (c25-2 / amr-unknown))

# ::snt Thank you youve proven my pointThose on the Anti-Liberty side will do all they can to dodge that question.As you did
# ::tokens ["Thank", "you", "you", "ve", "proven", "my", "pointThose", "on", "the", "Anti", "-", "Liberty", "side", "will", "do", "all", "they", "can", "to", "dodge", "that", "question", ".", "As", "you", "did"]
# ::lemmas ["thank", "you", "you", "ve", "prove", "my", "pointthose", "on", "the", "Anti", "-", "Liberty", "side", "will", "do", "all", "they", "can", "to", "dodge", "that", "question", ".", "as", "you", "do"]
(c26-3 / thank-01
       :ARG0 (c26-1 / i)
       :ARG1 (c26-0 / you)
       :ARG2 (c26-2 / prove-01
                    :ARG0 c26-0
                    :ARG1 (c26-4 / point-04
                                 :ARG0 c26-1)))

# ::snt That ques is a great litmus testThose who agree with the will simply ans yes.
# ::tokens ["That", "ques", "is", "a", "great", "litmus", "testThose", "who", "agree", "with", "the", "will", "simply", "ans", "yes", "."]
# ::lemmas ["that", "que", "be", "a", "great", "litmus", "testthose", "who", "agree", "with", "the", "will", "simply", "an", "yes", "."]
(c27-10 / and
        :op1 (c27-9 / test-01
                    :ARG1 (c27-3 / question-01
                                 :mod (c27-7 / that))
                    :mod (c27-6 / great)
                    :mod (c27-2 / litmus))
        :op2 (c27-4 / agree-01
                    :ARG0 (c27-5 / person
                                 :mod c27-7))
        :ARG1 (c27-0 / will)
        :ARG1-of (c27-8 / simple-02)
        :op3 (c27-1 / yes))

# ::snt Outside of USA there are other laws, rights, and liberties. Your line of questioning is solipsistic and fruitless.
# ::tokens ["Outside", "of", "USA", "there", "are", "other", "laws", ",", "rights", ",", "and", "liberties", ".", "Your", "line", "of", "questioning", "is", "solipsistic", "and", "fruitless", "."]
# ::lemmas ["outside", "of", "USA", "there", "be", "other", "law", ",", "right", ",", "and", "liberty", ".", "your", "line", "of", "questioning", "be", "solipsistic", "and", "fruitless", "."]
(c28-3 / multi-sentence
       :snt1 (c28-14 / and
                     :op1 (c28-2 / law)
                     :op2 (c28-10 / right-05)
                     :op3 (c28-12 / liberty)
                     :mod (c28-6 / other)
                     :location (c28-4 / outside
                                      :op1 (c28-11 / country
                                                   :name (c28-9 / name
                                                                :op1 "USA"))))
       :snt2 (c28-8 / and
                    :op1 (c28-13 / solipsistic
                                 :domain (c28-0 / line
                                                :poss (c28-1 / you)
                                                :instrument-of (c28-7 / question-01
                                                                      :ARG0 c28-1)))
                    :op2 (c28-5 / fruitless
                                :domain c28-0)))

# ::snt Ah yes, now we get into the childish name calling portion of the program
# ::tokens ["Ah", "yes", ",", "now", "we", "get", "into", "the", "childish", "name", "calling", "portion", "of", "the", "program"]
# ::lemmas ["ah", "yes", ",", "now", "we", "get", "into", "the", "childish", "name", "calling", "portion", "of", "the", "program"]
(c29-7 / get-05
       :ARG1 (c29-0 / we)
       :ARG2 (c29-4 / portion
                    :mod (c29-6 / call-01
                                :ARG1 (c29-2 / name)
                                :mod (c29-5 / childish))
                    :part-of (c29-8 / program))
       :time (c29-3 / now)
       :mod (c29-1 / yes))

# ::snt Sounds like the conflict got resolved quite effectively.
# ::tokens ["Sounds", "like", "the", "conflict", "got", "resolved", "quite", "effectively", "."]
# ::lemmas ["sound", "like", "the", "conflict", "got", "resolve", "quite", "effectively", "."]
(c30-4 / sound-01
       :ARG1 (c30-2 / resolve-01
                    :ARG1 (c30-3 / conflict-01)
                    :ARG1-of (c30-0 / effective-04
                                    :degree (c30-1 / quite))))

# ::snt Commongood sense and sound judgement in practical matters:it is all a matter of common sense
# ::tokens ["Commongood", "sense", "and", "sound", "judgement", "in", "practical", "matters", ":", "it", "is", "all", "a", "matter", "of", "common", "sense"]
# ::lemmas ["commongood", "sense", "and", "sound", "judgement", "in", "practical", "matter", ":", "it", "be", "all", "a", "matter", "of", "common", "sense"]
(c31-1 / matter
       :mod (c31-6 / common)
       :domain (c31-9 / and
                      :op1 (c31-8 / sense-02
                                  :mod (c31-5 / counsel-01))
                      :op2 (c31-0 / judge-01
                                  :manner (c31-2 / sound))
                      :topic (c31-4 / matter
                                    :ARG1-of (c31-7 / practical-02))
                      :mod (c31-3 / all)))

# ::snt Yes,that it didIt's like the ques about a Terrorist charging at you and your actions be it L R or C
# ::tokens ["Yes", ",", "that", "it", "didIt", "'s", "like", "the", "ques", "about", "a", "Terrorist", "charging", "at", "you", "and", "your", "actions", "be", "it", "L", "R", "or", "C"]
# ::lemmas ["yes", ",", "that", "it", "didIt", "'s", "like", "the", "que", "about", "a", "terrorist", "charging", "at", "you", "and", "your", "action", "be", "it", "L", "R", "or", "c"]
(c32-8 / resemble-01
       :ARG1 (c32-4 / it)
       :ARG2 (c32-2 / question-01
                    :ARG1 (c32-13 / and
                                  :op1 (c32-9 / charge-02
                                              :ARG0 (c32-11 / terrorist)
                                              :ARG1 (c32-3 / and
                                                           :op1 (c32-0 / you)
                                                           :op2 (c32-6 / act-02
                                                                       :ARG0 c32-0)))
                                  :op2 (c32-1 / or
                                              :op1 (c32-7 / person
                                                          :name (c32-5 / name
                                                                       :op1 "L"
                                                                       :op2 "R"))
                                              :op2 (c32-12 / person
                                                           :name (c32-10 / name
                                                                         :op1 "C"))))))

# ::snt Do you possess the ?
# ::tokens ["Do", "you", "possess", "the", "?"]
# ::lemmas ["do", "you", "possess", "the", "?"]
(c33-1 / possess-01
       :polarity (c33-3 / amr-unknown)
       :ARG0 (c33-0 / you)
       :ARG1 (c33-2 / thing))

# ::snt Yet the pansies will still vehemently go after Gun owner's nd Amendment rights.
# ::tokens ["Yet", "the", "pansies", "will", "still", "vehemently", "go", "after", "Gun", "owner", "'s", "nd", "Amendment", "rights", "."]
# ::lemmas ["yet", "the", "pansy", "will", "still", "vehemently", "go", "after", "Gun", "owner", "'s", "nd", "Amendment", "right", "."]
(c34-8 / go-03
       :ARG0 (c34-5 / pansie)
       :ARG1 (c34-6 / right-05
                    :ARG1 (c34-10 / person
                                  :ARG0-of (c34-2 / own-01
                                                  :ARG1 (c34-7 / gun)))
                    :mod (c34-1 / law
                                :name (c34-3 / name
                                             :op1 "Nd"
                                             :op2 "Amendment")))
       :mod (c34-9 / still)
       :manner (c34-4 / vehement)
       :mod (c34-0 / yet))

# ::snt In Canada armed self defence is not a right but a privilege, and therefore not a matter "possession". Your Q is wrong.
# ::tokens ["In", "Canada", "armed", "self", "defence", "is", "not", "a", "right", "but", "a", "privilege", ",", "and", "therefore", "not", "a", "matter", "\"", "possession", "\"", ".", "Your", "Q", "is", "wrong", "."]
# ::lemmas ["in", "Canada", "armed", "self", "defence", "be", "not", "a", "right", "but", "a", "privilege", ",", "and", "therefore", "not", "a", "matter", "\"", "possession", "\"", ".", "your", "Q", "be", "wrong", "."]
(c35-2 / multi-sentence
       :snt1 (c35-8 / contrast-01
                    :ARG1 (c35-7 / right-05
                                 :ARG2 (c35-6 / defend-01
                                              :ARG1 (c35-11 / self)
                                              :ARG1-of (c35-15 / arm-01))
                                 :location (c35-9 / country
                                                  :name (c35-4 / name
                                                               :op1 "Canada"))
                                 :polarity -)
                    :ARG2 (c35-5 / privilege-01
                                 :ARG1 c35-6
                                 :ARG0-of (c35-10 / cause-01
                                                  :ARG1 (c35-12 / matter-01
                                                                :ARG1 (c35-14 / possess-01)
                                                                :polarity -))))
       :snt2 (c35-0 / wrong-04
                    :ARG1 (c35-13 / thing
                                  :ARG1-of (c35-3 / question-01
                                                  :ARG0 (c35-1 / you)))))

# ::snt Yeah really!!!!!
# ::tokens ["Yeah", "really", "!", "!", "!", "!", "!"]
# ::lemmas ["yeah", "really", "!", "!", "!", "!", "!"]
(c36-1 / real-04
       :mod (c36-0 / yeah)
       :mode expressive)
