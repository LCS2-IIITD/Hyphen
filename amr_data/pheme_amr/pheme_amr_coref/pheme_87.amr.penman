# ::snt Young Blk men don't understand that US code's been utilized agnst them for centuries. Tread carefully, r die!
# ::tokens ["Young", "Blk", "men", "do", "n't", "understand", "that", "US", "code", "'s", "been", "utilized", "agnst", "them", "for", "centuries", ".", "Tread", "carefully", ",", "r", "die", "!"]
# ::lemmas ["Young", "Blk", "man", "do", "not", "understand", "that", "US", "code", "be", "be", "utilize", "agnst", "they", "for", "centuries", ".", "Tread", "carefully", ",", "r", "die", "!"]
(c1-2 / multi-sentence
      :snt1 (c1-3 / understand-01
                  :ARG0 (c1-7 / man
                              :mod (c1-8 / religious-group
                                         :name (c1-5 / name
                                                     :op1 "Blk"))
                              :mod (c1-0 / young))
                  :ARG1 (c1-14 / utilize-01
                               :ARG1 (c1-9 / code
                                           :mod (c1-10 / country
                                                       :name (c1-6 / name
                                                                   :op1 "US")))
                               :duration (c1-1 / multiple
                                               :op1 (c1-15 / temporal-quantity
                                                           :unit (c1-13 / century)
                                                           :quant 1)))
                  :polarity -)
      :snt2 (c1-16 / and
                   :op1 (c1-4 / read-01
                              :ARG0 (c1-12 / you)
                              :manner (c1-17 / careful)
                              :mode imperative)
                   :op2 (c1-11 / die-01
                               :ARG1 c1-12
                               :mode imperative)))

# ::snt : Im in and the witnesses are telling a chillin story. This young man was truly executed.
# ::tokens [":", "I", "m", "in", "and", "the", "witnesses", "are", "telling", "a", "chillin", "story", ".", "This", "young", "man", "was", "truly", "executed", "."]
# ::lemmas [":", "i", "m", "in", "and", "the", "witness", "be", "tell", "a", "chillin", "story", ".", "this", "young", "man", "be", "truly", "execute", "."]
(c2-2 / multi-sentence
      :snt1 (c2-13 / and
                   :op1 (c2-3 / be-located-at-91
                              :ARG1 (c2-5 / i))
                   :op2 (c2-12 / tell-01
                               :ARG0 (c2-7 / person
                                           :ARG0-of (c2-0 / witness-01))
                               :ARG1 (c2-11 / story
                                            :mod (c2-9 / chill-01))))
      :snt2 (c2-4 / execute-01
                  :ARG1 (c2-8 / man
                              :mod (c2-1 / young)
                              :mod (c2-10 / this))
                  :ARG1-of (c2-6 / true-01)))

# ::snt Im in and the witnesses are telling a chillin story. This young man was truly executed.
# ::tokens ["I", "m", "in", "and", "the", "witnesses", "are", "telling", "a", "chillin", "story", ".", "This", "young", "man", "was", "truly", "executed", "."]
# ::lemmas ["i", "m", "in", "and", "the", "witness", "be", "tell", "a", "chillin", "story", ".", "this", "young", "man", "be", "truly", "execute", "."]
(c3-2 / multi-sentence
      :snt1 (c3-13 / and
                   :op1 (c3-3 / be-located-at-91
                              :ARG1 (c3-5 / i))
                   :op2 (c3-12 / tell-01
                               :ARG0 (c3-7 / person
                                           :ARG0-of (c3-0 / witness-01))
                               :ARG1 (c3-11 / story
                                            :mod (c3-9 / chill-01))))
      :snt2 (c3-4 / execute-01
                  :ARG1 (c3-8 / man
                              :mod (c3-1 / young)
                              :mod (c3-10 / this))
                  :ARG1-of (c3-6 / true-01)))

# ::snt : Im in and the witnesses are telling a chillin story. This young man was truly executed.
# ::tokens [":", "I", "m", "in", "and", "the", "witnesses", "are", "telling", "a", "chillin", "story", ".", "This", "young", "man", "was", "truly", "executed", "."]
# ::lemmas [":", "i", "m", "in", "and", "the", "witness", "be", "tell", "a", "chillin", "story", ".", "this", "young", "man", "be", "truly", "execute", "."]
(c4-2 / multi-sentence
      :snt1 (c4-13 / and
                   :op1 (c4-3 / be-located-at-91
                              :ARG1 (c4-5 / i))
                   :op2 (c4-12 / tell-01
                               :ARG0 (c4-7 / person
                                           :ARG0-of (c4-0 / witness-01))
                               :ARG1 (c4-11 / story
                                            :mod (c4-9 / chill-01))))
      :snt2 (c4-4 / execute-01
                  :ARG1 (c4-8 / man
                              :mod (c4-1 / young)
                              :mod (c4-10 / this))
                  :ARG1-of (c4-6 / true-01)))

# ::snt BRUH, it's heartbreaking
# ::tokens ["BRUH", ",", "it", "'s", "heartbreaking"]
# ::lemmas ["BRUH", ",", "it", "be", "heartbreaking"]
(c5-4 / say-01
      :ARG1 (c5-0 / break-heart-31
                  :ARG0 (c5-1 / it))
      :ARG2 (c5-3 / person
                  :name (c5-2 / name
                              :op1 "Broh")))

# ::snt heartbreaking
# ::tokens ["heartbreaking"]
# ::lemmas ["heartbreake"]
(c6-0 / break-heart-31)

# ::snt We need to do something. Too many black boys have been murdered.
# ::tokens ["We", "need", "to", "do", "something", ".", "Too", "many", "black", "boys", "have", "been", "murdered", "."]
# ::lemmas ["we", "need", "to", "do", "something", ".", "too", "many", "black", "boy", "have", "be", "murder", "."]
(c7-3 / multi-sentence
      :snt1 (c7-5 / need-01
                  :ARG0 (c7-1 / we)
                  :ARG1 (c7-7 / do-02
                              :ARG0 c7-1
                              :ARG1 (c7-9 / something)))
      :snt2 (c7-6 / murder-01
                  :ARG1 (c7-4 / boy
                              :ARG1-of (c7-8 / black-05)
                              :ARG1-of (c7-0 / have-quant-91
                                             :ARG2 (c7-2 / many)
                                             :ARG3 (c7-10 / too)))))
