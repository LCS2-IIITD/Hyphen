# ::snt they have been identifyed and got an hostage
# ::tokens ["they", "have", "been", "identifyed", "and", "got", "an", "hostage"]
# ::lemmas ["they", "have", "be", "identify", "and", "get", "an", "hostage"]
(c1-4 / and
      :op1 (c1-1 / identify-01
                 :ARG1 (c1-3 / they))
      :op2 (c1-2 / get-01
                 :ARG0 c1-3
                 :ARG1 (c1-0 / hostage)))

# ::snt Humanity, peace of mind, happiness. Thanks for reminding me!
# ::tokens ["Humanity", ",", "peace", "of", "mind", ",", "happiness", ".", "Thanks", "for", "reminding", "me", "!"]
# ::lemmas ["humanity", ",", "peace", "of", "mind", ",", "happiness", ".", "thank", "for", "remind", "i", "!"]
(c2-3 / multi-sentence
      :snt1 (c2-9 / and
                  :op1 (c2-0 / humanity)
                  :op2 (c2-5 / peace
                             :mod (c2-6 / mind))
                  :op3 (c2-2 / happiness))
      :snt2 (c2-8 / thank-01
                  :ARG0 (c2-4 / i)
                  :ARG1 (c2-1 / you)
                  :ARG2 (c2-7 / remind-01
                              :ARG0 c2-1
                              :ARG2 c2-4)
                  :mode expressive))

# ::snt Can we please stop reporting every single firefight until it's really verified that it has something to do with ?
# ::tokens ["Can", "we", "please", "stop", "reporting", "every", "single", "firefight", "until", "it", "'s", "really", "verified", "that", "it", "has", "something", "to", "do", "with", "?"]
# ::lemmas ["can", "we", "please", "stop", "report", "every", "single", "firefight", "until", "it", "be", "really", "verify", "that", "it", "have", "something", "to", "do", "with", "?"]
(c3-10 / possible-01
       :polarity (c3-13 / amr-unknown)
       :ARG1 (c3-12 / stop-01
                    :ARG0 (c3-1 / we)
                    :ARG1 (c3-11 / report-01
                                 :ARG0 c3-1
                                 :ARG1 (c3-2 / fight-01
                                             :mod (c3-7 / fire-01)
                                             :ARG1-of (c3-5 / single-02)
                                             :mod (c3-6 / every)))
                    :time (c3-4 / until
                                :op1 (c3-9 / verify-01
                                           :ARG1 (c3-0 / have-to-do-with-04
                                                       :ARG0 c3-2
                                                       :ARG1 (c3-3 / something))
                                           :ARG1-of (c3-8 / real-04))))
       :polite +)

# ::snt Hey guys, put away the pens. It's just another one of those routine French "firefights" that happen so often
# ::tokens ["Hey", "guys", ",", "put", "away", "the", "pens", ".", "It", "'s", "just", "another", "one", "of", "those", "routine", "French", "\"", "firefights", "\"", "that", "happen", "so", "often"]
# ::lemmas ["hey", "guy", ",", "put", "away", "the", "pen", ".", "it", "be", "just", "another", "one", "of", "those", "routine", "French", "\"", "firefight", "\"", "that", "happen", "so", "often"]
(c4-3 / multi-sentence
      :snt1 (c4-15 / say-01
                   :ARG1 (c4-11 / put-01
                                :ARG0 (c4-14 / guy)
                                :ARG1 (c4-16 / pen)
                                :ARG2 (c4-17 / away)
                                :mode imperative)
                   :ARG2 c4-14
                   :mod (c4-0 / hey
                              :mode expressive))
      :snt2 (c4-2 / fight-01
                  :mod (c4-7 / another)
                  :mod (c4-1 / just)
                  :ARG1-of (c4-8 / include-91
                                 :ARG2 (c4-9 / fight-01
                                             :mod (c4-12 / routine)
                                             :mod (c4-13 / country
                                                         :name (c4-10 / name
                                                                      :op1 "France"))
                                             :mod (c4-5 / fire-01)
                                             :frequency (c4-4 / often
                                                              :degree (c4-6 / so))))))

# ::snt worthless, and sorry. Sorry as hell.
# ::tokens ["worthless", ",", "and", "sorry", ".", "Sorry", "as", "hell", "."]
# ::lemmas ["worthless", ",", "and", "sorry", ".", "sorry", "as", "hell", "."]
(c5-1 / multi-sentence
      :snt1 (c5-5 / and
                  :op1 (c5-0 / worth-02
                             :polarity -)
                  :op2 (c5-4 / sorry-01))
      :snt2 (c5-2 / sorry-01
                  :degree (c5-3 / as-hell)))

# ::snt Have you had yourself tested on the sociopath scale? For your families sake please do. Seek help.
# ::tokens ["Have", "you", "had", "yourself", "tested", "on", "the", "sociopath", "scale", "?", "For", "your", "families", "sake", "please", "do", ".", "Seek", "help", "."]
# ::lemmas ["have", "you", "have", "yourself", "test", "on", "the", "sociopath", "scale", "?", "for", "your", "family", "sake", "please", "do", ".", "seek", "help", "."]
(c6-3 / multi-sentence
      :snt1 (c6-13 / test-01
                   :polarity (c6-14 / amr-unknown)
                   :ARG0 (c6-1 / you
                               :ARG1-of c6-13)
                   :manner (c6-12 / scale
                                  :mod (c6-8 / sociopath)))
      :snt2 (c6-10 / do-02
                   :ARG0 (c6-11 / you)
                   :purpose (c6-2 / sake
                                  :poss (c6-4 / family
                                              :ARG1-of (c6-0 / have-org-role-91
                                                             :ARG0 c6-11
                                                             :ARG2 (c6-9 / member))))
                   :polite +
                   :mode imperative)
      :snt3 (c6-7 / seek-01
                  :ARG0 (c6-6 / you)
                  :ARG1 (c6-5 / help-01)
                  :mode imperative))

# ::snt JeSuisCharlie
# ::tokens ["JeSuisCharlie"]
# ::lemmas ["JeSuisCharlie"]
(c7-1 / person
      :name (c7-0 / name
                  :op1 "JeSuisCharlie"))

# ::snt Twats like you (Pussies in Americee) feel the false fear enough to let their citizens carry arms. Your kids die.
# ::tokens ["Twats", "like", "you", "(", "Pussies", "in", "Americee", ")", "feel", "the", "false", "fear", "enough", "to", "let", "their", "citizens", "carry", "arms", ".", "Your", "kids", "die", "."]
# ::lemmas ["twat", "like", "you", "(", "Pussies", "in", "Americee", ")", "feel", "the", "false", "fear", "enough", "to", "let", "their", "citizen", "carry", "arm", ".", "your", "kid", "die", "."]
(c8-0 / multi-sentence
      :snt1 (c8-8 / feel-01
                  :ARG0 (c8-22 / twat
                               :ARG1-of (c8-13 / resemble-01
                                               :ARG2 (c8-17 / you))
                               :ARG1-of (c8-12 / mean-01
                                               :ARG2 (c8-1 / person
                                                           :mod (c8-20 / country
                                                                       :name (c8-11 / name
                                                                                    :op1 "America")
                                                                       :mod-of c8-1)
                                                           :name (c8-19 / name
                                                                        :op1 "Pussies")))))
      :ARG1 (c8-18 / fear-01
                   :mod (c8-14 / false)
                   :ARG1-of (c8-7 / have-quant-91
                                  :ARG3 (c8-10 / enough)
                                  :ARG6 (c8-9 / let-01
                                              :ARG0 c8-22
                                              :ARG1 (c8-2 / carry-01
                                                          :ARG0 (c8-15 / citizen
                                                                       :poss c8-22)
                                                          :ARG1 (c8-5 / arm)))))
      :snt2 (c8-3 / die-01
                  :ARG1 (c8-4 / person
                              :ARG0-of (c8-6 / have-rel-role-91
                                             :ARG1 (c8-21 / you)
                                             :ARG2 (c8-16 / kid)))))

# ::snt I have boys, a daughter, and a wife of years. are in college, ones in the military. Wtf do you have? Nothing. Get bent.
# ::tokens ["I", "have", "boys", ",", "a", "daughter", ",", "and", "a", "wife", "of", "years", ".", "are", "in", "college", ",", "ones", "in", "the", "military", ".", "Wtf", "do", "you", "have", "?", "Nothing", ".", "Get", "bent", "."]
# ::lemmas ["i", "have", "boy", ",", "a", "daughter", ",", "and", "a", "wife", "of", "years", ".", "be", "in", "college", ",", "one", "in", "the", "military", ".", "Wtf", "do", "you", "have", "?", "nothing", ".", "get", "bent", "."]
(c9-0 / multi-sentence
      :snt1 (c9-5 / have-03
                  :ARG0 (c9-13 / i)
                  :ARG1 (c9-4 / and
                              :op1 (c9-8 / boy)
                              :op2 (c9-2 / daughter)
                              :op3 (c9-11 / wife
                                          :duration (c9-10 / multiple
                                                           :op1 (c9-20 / temporal-quantity
                                                                       :unit (c9-15 / year)
                                                                       :quant 1)))))
      :snt2 (c9-14 / be-located-at-91
                   :ARG1 (c9-16 / one
                                :ARG0-of (c9-3 / have-org-role-91
                                               :ARG1 (c9-6 / military)))
                   :ARG2 (c9-17 / college))
      :snt3 (c9-1 / have-03
                  :ARG0 (c9-18 / you)
                  :ARG1 (c9-12 / amr-unknown)
                  :mod (c9-7 / fuck
                             :mode expressive))
      :snt4 (c9-9 / nothing)
      :snt5 (c9-19 / bend-01
                   :ARG0 c9-18
                   :mode imperative))

# ::snt It has
# ::tokens ["It", "has"]
# ::lemmas ["it", "have"]
(c10-0 / it)

# ::snt Sorry, no, you're obviously a psychopath. God help your family.
# ::tokens ["Sorry", ",", "no", ",", "you", "'re", "obviously", "a", "psychopath", ".", "God", "help", "your", "family", "."]
# ::lemmas ["sorry", ",", "no", ",", "you", "be", "obviously", "a", "psychopath", ".", "God", "help", "your", "family", "."]
(c11-3 / multi-sentence
       :snt1 (c11-10 / sorry-01
                     :ARG1 (c11-5 / i)
                     :ARG2 (c11-4 / obvious-01
                                  :ARG1 (c11-8 / psychopath
                                               :domain (c11-1 / you)))
                     :mod (c11-6 / no))
       :snt2 (c11-0 / help-01
                    :ARG0 (c11-11 / person
                                  :name (c11-7 / name
                                               :op1 "God"))
                    :ARG2 (c11-2 / family
                                 :poss (c11-9 / you))))

# ::snt Yeah, nothing to see her people...move along.
# ::tokens ["Yeah", ",", "nothing", "to", "see", "her", "people", "...", "move", "along", "."]
# ::lemmas ["yeah", ",", "nothing", "to", "see", "her", "people", "...", "move", "along", "."]
(c12-0 / multi-sentence
       :snt1 (c12-2 / nothing
                    :domain (c12-5 / see-01
                                   :ARG1 (c12-3 / person
                                                :poss (c12-1 / she))))
       :snt2 (c12-4 / move-01
                    :ARG2 (c12-6 / along)))

# ::snt Right, just saw a tweet about the Interior Ministry confirming it. My bad!
# ::tokens ["Right", ",", "just", "saw", "a", "tweet", "about", "the", "Interior", "Ministry", "confirming", "it", ".", "My", "bad", "!"]
# ::lemmas ["right", ",", "just", "see", "a", "tweet", "about", "the", "Interior", "Ministry", "confirm", "it", ".", "my", "bad", "!"]
(c13-2 / multi-sentence
       :snt1 (c13-7 / right-06
                    :ARG1 (c13-5 / i))
       :snt2 (c13-11 / see-01
                     :ARG0 (c13-9 / i)
                     :ARG1 (c13-12 / tweet-01
                                   :ARG0 (c13-10 / government-organization
                                                 :name (c13-6 / name
                                                              :op1 "Interior"
                                                              :op2 "Ministry"))
                                   :ARG0-of (c13-8 / confirm-01
                                                   :ARG1 (c13-1 / it)))
                     :time (c13-0 / just))
       :snt3 (c13-3 / bad-02
                    :ARG1 (c13-4 / i)
                    :mode expressive))

# ::snt mostly trash in inner cities, that's a self-cleaning oven. Next
# ::tokens ["mostly", "trash", "in", "inner", "cities", ",", "that", "'s", "a", "self", "-", "cleaning", "oven", ".", "Next"]
# ::lemmas ["mostly", "trash", "in", "inner", "city", ",", "that", "be", "a", "self", "-", "clean", "oven", ".", "next"]
(c14-0 / multi-sentence
       :snt1 (c14-8 / trash
                    :location (c14-6 / city
                                     :mod (c14-2 / inner))
                    :mod (c14-4 / most)
                    :domain (c14-1 / oven
                                   :ARG0-of (c14-5 / clean-01
                                                   :ARG1 (c14-7 / self))))
       :snt2 (c14-3 / next))

# ::snt NE of CDG Apt
# ::tokens ["NE", "of", "CDG", "Apt"]
# ::lemmas ["NE", "of", "CDG", "Apt"]
(c15-4 / alert-01
       :ARG1 (c15-2 / disc
                    :mod (c15-3 / compact)
                    :name (c15-0 / name
                                 :op1 "CDG"))
       :degree (c15-1 / NE))

# ::snt a policeman without a gun is a suggestion.
# ::tokens ["a", "policeman", "without", "a", "gun", "is", "a", "suggestion", "."]
# ::lemmas ["a", "policeman", "without", "a", "gun", "be", "a", "suggestion", "."]
(c16-0 / suggest-01
       :ARG1 (c16-1 / policeman
                    :ARG0-of (c16-3 / have-03
                                    :ARG1 (c16-2 / gun)
                                    :polarity -)))

# ::snt No need for mockery, Mark. I was merely arguing against the permanent need to "break" news before verifying the facts
# ::tokens ["No", "need", "for", "mockery", ",", "Mark", ".", "I", "was", "merely", "arguing", "against", "the", "permanent", "need", "to", "\"", "break", "\"", "news", "before", "verifying", "the", "facts"]
# ::lemmas ["no", "need", "for", "mockery", ",", "Mark", ".", "i", "be", "merely", "argue", "against", "the", "permanent", "need", "to", "\"", "break", "\"", "news", "before", "verify", "the", "fact"]
(c17-1 / multi-sentence
       :snt1 (c17-14 / say-01
                     :ARG1 (c17-6 / need-01
                                  :ARG1 (c17-9 / mock-01
                                               :ARG1 (c17-8 / person
                                                            :name (c17-7 / name
                                                                         :op1 "Mark")
                                                            :ARG2-of c17-14))
                                  :polarity -))
       :snt2 (c17-16 / argue-01
                     :ARG0 (c17-5 / i)
                     :ARG1 (c17-4 / against
                                  :op1 (c17-10 / need-01
                                               :ARG1 (c17-3 / break-13
                                                            :ARG1 (c17-11 / news)
                                                            :time (c17-12 / before
                                                                          :op1 (c17-13 / verify-01
                                                                                       :ARG1 (c17-0 / fact))))
                                               :mod (c17-15 / permanent)))
                     :mod (c17-2 / mere)))

# ::snt whether Charlie Hebdo suspects or not helicopters chase with gunmen firing is worthy of breaking news!
# ::tokens ["whether", "Charlie", "Hebdo", "suspects", "or", "not", "helicopters", "chase", "with", "gunmen", "firing", "is", "worthy", "of", "breaking", "news", "!"]
# ::lemmas ["whether", "Charlie", "Hebdo", "suspect", "or", "not", "helicopter", "chase", "with", "gunman", "fire", "be", "worthy", "of", "break", "news", "!"]
(c18-7 / deserve-01
       :ARG0 (c18-4 / or
                    :op1 (c18-8 / chase-01
                                :ARG0 (c18-0 / helicopter
                                             :ARG2-of (c18-11 / suspect-01
                                                              :ARG1 (c18-2 / magazine
                                                                           :name (c18-5 / name
                                                                                        :op1 "Charlie"
                                                                                        :op2 "Charity"))))
                                :ARG1 (c18-9 / gunman
                                             :ARG0-of (c18-1 / fire-01)))
                    :op2 (c18-10 / chase-01
                                 :ARG0 c18-0
                                 :ARG1 c18-9
                                 :polarity -))
       :ARG1 (c18-6 / news
                    :ARG1-of (c18-3 / break-13)))

# ::snt Journalists should exercise discretion in what they report, rather than just jumping to conclusions.
# ::tokens ["Journalists", "should", "exercise", "discretion", "in", "what", "they", "report", ",", "rather", "than", "just", "jumping", "to", "conclusions", "."]
# ::lemmas ["journalist", "should", "exercise", "discretion", "in", "what", "they", "report", ",", "rather", "than", "just", "jump", "to", "conclusion", "."]
(c19-5 / recommend-01
       :ARG1 (c19-2 / exercise-01
                    :ARG0 (c19-0 / journalist)
                    :ARG1 (c19-6 / discretion)
                    :ARG3 (c19-8 / thing
                                 :ARG1-of (c19-4 / report-01
                                                 :ARG0 c19-0))
                    :ARG1-of (c19-3 / instead-of-91
                                    :ARG2 (c19-9 / jump-02
                                                 :ARG0 c19-0
                                                 :ARG2 (c19-7 / conclude-01
                                                              :ARG0 c19-0)
                                                 :mod (c19-1 / just)))))

# ::snt Twat. French police routinely carry arms. It's made no difference.
# ::tokens ["Twat", ".", "French", "police", "routinely", "carry", "arms", ".", "It", "'s", "made", "no", "difference", "."]
# ::lemmas ["Twat", ".", "French", "police", "routinely", "carry", "arm", ".", "it", "be", "make", "no", "difference", "."]
(c20-0 / multi-sentence
       :snt1 (c20-8 / twat)
       :snt2 (c20-4 / carry-01
                    :ARG0 (c20-2 / police
                                 :mod (c20-3 / country
                                             :name (c20-1 / name
                                                          :op1 "France")))
                    :ARG1 (c20-9 / arm)
                    :mod (c20-5 / routine))
       :snt3 (c20-6 / make-01
                    :ARG1 (c20-7 / differ-02)
                    :polarity -))

# ::snt my kids live and learn weapons training..your kids suck muzzie dick. Thanks for playing. Next.
# ::tokens ["my", "kids", "live", "and", "learn", "weapons", "training", "..", "your", "kids", "suck", "muzzie", "dick", ".", "Thanks", "for", "playing", ".", "Next", "."]
# ::lemmas ["my", "kid", "live", "and", "learn", "weapon", "training", "..", "your", "kid", "suck", "muzzie", "dick", ".", "thank", "for", "play", ".", "next", "."]
(c21-0 / multi-sentence
       :snt1 (c21-6 / and
                    :op1 (c21-8 / live-01
                                :ARG0 (c21-1 / person
                                             :ARG0-of (c21-7 / have-rel-role-91
                                                             :ARG1 (c21-14 / i)
                                                             :ARG2 (c21-16 / kid))))
                    :op2 (c21-18 / learn-01
                                 :ARG0 c21-1
                                 :ARG1 (c21-19 / train-01
                                               :ARG1 (c21-12 / weapon))))
       :snt2 (c21-3 / suck-01
                    :ARG0 (c21-4 / person
                                 :ARG0-of (c21-5 / have-rel-role-91
                                                 :ARG1 (c21-17 / you)
                                                 :ARG2 (c21-13 / kid)))
                    :ARG1 (c21-2 / dick
                                 :mod (c21-11 / muzzie)))
       :snt3 (c21-15 / thank-01
                     :ARG0 c21-14)
       :ARG1 c21-17
       :ARG2 (c21-9 / play-01
                    :ARG0 c21-17)
       :time (c21-10 / next))

# ::snt It's a bit pointless and only contributes to an atmosphere of panic. You don't have to reproduce everything from FR media.
# ::tokens ["It", "'s", "a", "bit", "pointless", "and", "only", "contributes", "to", "an", "atmosphere", "of", "panic", ".", "You", "do", "n't", "have", "to", "reproduce", "everything", "from", "FR", "media", "."]
# ::lemmas ["it", "be", "a", "bit", "pointless", "and", "only", "contribute", "to", "an", "atmosphere", "of", "panic", ".", "you", "do", "not", "have", "to", "reproduce", "everything", "from", "FR", "medium", "."]
(c22-2 / multi-sentence
       :snt1 (c22-15 / and
                     :op1 (c22-10 / point-03
                                  :ARG1 (c22-8 / it)
                                  :degree (c22-4 / bit)
                                  :polarity -)
                     :op2 (c22-12 / contribute-01
                                  :ARG0 c22-8
                                  :ARG2 (c22-7 / atmosphere
                                               :mod (c22-14 / panic-01))
                                  :mod (c22-5 / only)))
       :snt2 (c22-1 / obligate-01
                    :ARG1 (c22-0 / you)
                    :ARG2 (c22-11 / reproduce-01
                                  :ARG0 c22-0
                                  :ARG1 (c22-6 / everything
                                               :source (c22-13 / media
                                                               :mod (c22-3 / publication
                                                                           :name (c22-9 / name
                                                                                        :op1 "FR")))))
                    :polarity -))

# ::snt why yes, you are right...made no difference at all. Dead.
# ::tokens ["why", "yes", ",", "you", "are", "right", "...", "made", "no", "difference", "at", "all", ".", "Dead", "."]
# ::lemmas ["why", "yes", ",", "you", "be", "right", "...", "make", "no", "difference", "at", "all", ".", "dead", "."]
(c23-2 / multi-sentence
       :snt1 (c23-5 / right-06
                    :ARG1 (c23-0 / you)
                    :ARG1-of (c23-6 / cause-01
                                    :ARG0 (c23-8 / amr-unknown)))
       :snt2 (c23-4 / make-01
                    :ARG1 (c23-7 / differ-02
                                 :degree (c23-3 / at-all))
                    :polarity -)
       :snt3 (c23-1 / die-01))

# ::snt get fucked, you could die of stomach cancer, could care less. Good day, sir.
# ::tokens ["get", "fucked", ",", "you", "could", "die", "of", "stomach", "cancer", ",", "could", "care", "less", ".", "Good", "day", ",", "sir", "."]
# ::lemmas ["get", "fuck", ",", "you", "could", "die", "of", "stomach", "cancer", ",", "could", "care", "less", ".", "Good", "day", ",", "sir", "."]
(c24-1 / multi-sentence
       :snt1 (c24-9 / fuck-01
                    :ARG1 (c24-16 / you)
                    :mode imperative)
       :snt2 (c24-7 / and
                    :op1 (c24-2 / possible-01
                                :ARG1 (c24-3 / die-01
                                             :ARG1 (c24-19 / you)
                                             :ARG1-of (c24-18 / cause-01
                                                              :ARG0 (c24-0 / disease
                                                                           :name (c24-12 / name
                                                                                         :op1 "cancer")
                                                                           :mod (c24-5 / stomach)))))
                    :op2 (c24-6 / possible-01
                                :ARG1 (c24-8 / have-degree-91
                                             :ARG1 c24-19
                                             :ARG2 (c24-4 / care-01
                                                          :ARG0 c24-19)
                                             :ARG3 (c24-10 / less))))
       :snt3 (c24-11 / say-01
                     :ARG0 (c24-15 / i)
                     :ARG1 (c24-14 / day
                                   :ARG1-of (c24-13 / good-02))
                     :ARG2 (c24-17 / sir)))

# ::snt breaking news is breaking news. When it's over its no longer breaking news
# ::tokens ["breaking", "news", "is", "breaking", "news", ".", "When", "it", "'s", "over", "its", "no", "longer", "breaking", "news"]
# ::lemmas ["break", "news", "be", "break", "news", ".", "when", "it", "be", "over", "its", "no", "long", "break", "news"]
(c25-0 / multi-sentence
       :snt1 (c25-1 / break-18
                    :ARG0 (c25-2 / news
                                 :ARG0-of (c25-6 / break-18))
                    :ARG1 (c25-3 / news))
       :snt2 (c25-7 / break-18
                    :ARG0 (c25-4 / news)
                    :time (c25-5 / no-longer)))

# ::snt the French police better subdue the perps with wishes..and unicorn horns. Do french police at least carry, candy? Fags
# ::tokens ["the", "French", "police", "better", "subdue", "the", "perps", "with", "wishes", "..", "and", "unicorn", "horns", ".", "Do", "french", "police", "at", "least", "carry", ",", "candy", "?", "Fags"]
# ::lemmas ["the", "French", "police", "well", "subdue", "the", "perp", "with", "wish", "..", "and", "unicorn", "horn", ".", "do", "french", "police", "at", "least", "carry", ",", "candy", "?", "fag"]
(c26-0 / multi-sentence
       :snt1 (c26-3 / subdue-01
                    :ARG0 (c26-1 / police
                                 :mod (c26-18 / country
                                              :name (c26-10 / name
                                                            :op1 "France")))
                    :ARG1 (c26-4 / perp)
                    :ARG2 (c26-6 / and
                                 :op1 (c26-14 / wish-01)
                                 :op2 (c26-7 / horn
                                             :mod (c26-15 / unicorn)))
                    :ARG1-of (c26-5 / have-degree-91
                                    :ARG2 (c26-13 / good-02
                                                  :ARG1 c26-3)
                                    :ARG3 (c26-12 / more)))
       :snt2 (c26-2 / carry-01
                    :ARG0 (c26-9 / police
                                 :mod c26-18)
                    :ARG1 (c26-17 / candy)
                    :polarity (c26-16 / amr-unknown)
                    :mod (c26-11 / at-least))
       :snt3 (c26-8 / fag
                    :polarity c26-16))

# ::snt every U.S. soldier killed in Afghanistan during years of war, at least children were shot and killed in America.
# ::tokens ["every", "U.S.", "soldier", "killed", "in", "Afghanistan", "during", "years", "of", "war", ",", "at", "least", "children", "were", "shot", "and", "killed", "in", "America", "."]
# ::lemmas ["every", "U.S.", "soldier", "kill", "in", "Afghanistan", "during", "years", "of", "war", ",", "at", "least", "child", "be", "shoot", "and", "kill", "in", "America", "."]
(c27-15 / and
        :op1 (c27-11 / shoot-02
                     :ARG1 (c27-9 / child
                                  :quant (c27-5 / at-least
                                                :op1 1))
                     :location (c27-8 / country
                                      :name (c27-6 / name
                                                   :op1 "America")))
        :op2 (c27-14 / kill-01
                     :ARG1 c27-9)
        :location c27-8
        :time (c27-2 / kill-01
                     :ARG1 (c27-3 / soldier
                                  :mod c27-8
                                  :mod (c27-4 / every)
                                  :ARG1-of (c27-13 / kill-01
                                                   :location (c27-10 / country
                                                                     :name (c27-7 / name
                                                                                  :op1 "Afghanistan"))
                                                   :duration (c27-1 / multiple
                                                                    :op1 (c27-12 / temporal-quantity
                                                                                 :unit (c27-0 / year)
                                                                                 :quant 1))))))

# ::snt Scary
# ::tokens ["Scary"]
# ::lemmas ["scary"]
(c28-0 / scary-03)

# ::snt Breaking; french police ditch bicycles for unicycles, in order to bungle any attempt to be taken seriously.
# ::tokens ["Breaking", ";", "french", "police", "ditch", "bicycles", "for", "unicycles", ",", "in", "order", "to", "bungle", "any", "attempt", "to", "be", "taken", "seriously", "."]
# ::lemmas ["break", ";", "french", "police", "ditch", "bicycle", "for", "unicycle", ",", "in", "order", "to", "bungle", "any", "attempt", "to", "be", "take", "seriously", "."]
(c29-11 / and
        :op1 (c29-0 / break-01)
        :op2 (c29-5 / ditch-01
                    :ARG0 (c29-4 / police
                                 :mod (c29-6 / country
                                             :name (c29-2 / name
                                                          :op1 "France")))
                    :ARG1 (c29-7 / bicycle
                                 :purpose-of c29-5))
        :purpose (c29-9 / bungle-01
                        :ARG0 c29-4
                        :ARG1 (c29-1 / attempt-01
                                     :ARG0 c29-4
                                     :ARG1 (c29-10 / take-04
                                                   :ARG1 c29-4
                                                   :ARG2 (c29-8 / serious-01
                                                                :ARG2 c29-4))
                                     :mod (c29-3 / any))))
