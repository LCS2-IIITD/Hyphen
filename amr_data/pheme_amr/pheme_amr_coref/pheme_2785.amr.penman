# ::snt I am. What do you do for a living? Odd that I'm trying to fix your problem? Confused I have to explain this to you.
# ::tokens ["I", "am", ".", "What", "do", "you", "do", "for", "a", "living", "?", "Odd", "that", "I", "'m", "trying", "to", "fix", "your", "problem", "?", "Confused", "I", "have", "to", "explain", "this", "to", "you", "."]
# ::lemmas ["i", "be", ".", "what", "do", "you", "do", "for", "a", "living", "?", "odd", "that", "i", "be", "try", "to", "fix", "your", "problem", "?", "confused", "i", "have", "to", "explain", "this", "to", "you", "."]
(c1-2 / multi-sentence
      :snt1 (c1-8 / i)
      :snt2 (c1-10 / do-02
                   :ARG0 (c1-0 / you)
                   :ARG1 (c1-16 / amr-unknown)
                   :ARG2 (c1-1 / live-01
                               :ARG0 c1-0))
      :snt3 (c1-6 / odd
                  :domain (c1-15 / try-01
                                 :ARG0 (c1-12 / i)
                                 :ARG1 (c1-3 / fix-02
                                             :ARG0 c1-12
                                             :ARG1 (c1-9 / problem
                                                         :poss (c1-13 / you)))))
      :snt4 (c1-11 / Confused-01
                   :ARG0 (c1-4 / obligate-01
                               :ARG1 (c1-5 / i)
                               :ARG2 (c1-7 / explain-01
                                           :ARG0 c1-5
                                           :ARG1 (c1-14 / this)
                                           :ARG2 c1-13))
                   :ARG1 c1-5))

# ::snt lots of people were wrong, only one got dead.
# ::tokens ["lots", "of", "people", "were", "wrong", ",", "only", "one", "got", "dead", "."]
# ::lemmas ["lot", "of", "people", "be", "wrong", ",", "only", "one", "get", "dead", "."]
(c2-6 / and
      :op1 (c2-0 / wrong-04
                 :ARG1 (c2-3 / person
                             :quant (c2-1 / lot)))
      :op2 (c2-4 / die-01
                 :ARG1 (c2-5 / person
                             :mod (c2-2 / only))))

# ::snt All it takes is one moron to do something stupid.
# ::tokens ["All", "it", "takes", "is", "one", "moron", "to", "do", "something", "stupid", "."]
# ::lemmas ["all", "it", "take", "be", "one", "moron", "to", "do", "something", "stupid", "."]
(c3-4 / take-10
      :ARG0 (c3-2 / do-02
                  :ARG0 (c3-0 / moron
                              :quant 1)
                  :ARG1 (c3-3 / something
                              :mod (c3-1 / stupid)))
      :ARG1 (c3-5 / all))

# ::snt Steve! (I feel like I know you) despite your refusal to answer my question I've deduced you're a LEO in the STL area. ?
# ::tokens ["Steve", "!", "(", "I", "feel", "like", "I", "know", "you", ")", "despite", "your", "refusal", "to", "answer", "my", "question", "I", "'ve", "deduced", "you", "'re", "a", "LEO", "in", "the", "STL", "area", ".", "?"]
# ::lemmas ["Steve", "!", "(", "i", "feel", "like", "i", "know", "you", ")", "despite", "your", "refusal", "to", "answer", "my", "question", "i", "'ve", "deduce", "you", "be", "a", "LEO", "in", "the", "STL", "area", ".", "?"]
(c4-11 / say-01
       :ARG0 (c4-3 / i)
       :ARG1 (c4-7 / deduce-01
                   :ARG0 c4-3
                   :ARG1 (c4-6 / person
                               :domain (c4-13 / person
                                              :name (c4-4 / name
                                                          :op1 "Steve"))
                               :ARG1-of (c4-0 / liberal-02)
                               :location (c4-14 / area
                                                :mod (c4-8 / city
                                                           :name (c4-5 / name
                                                                       :op1 "STL"))))
                   :concession (c4-9 / refuse-01
                                     :ARG0 c4-13
                                     :ARG1 (c4-2 / answer-01
                                                 :ARG0 c4-13
                                                 :ARG1 (c4-1 / question-01
                                                             :ARG0 c4-3)))
                   :concession (c4-12 / know-02
                                      :ARG0 c4-3
                                      :ARG1 c4-13)
                   :polarity (c4-10 / amr-unknown))
       :ARG2 c4-13)

# ::snt &amp; somebody else would've died. Theis incident aside, there is an undeniable problem with that Police Dept. Agreed?
# ::tokens ["&", "amp", ";", "somebody", "else", "would", "'ve", "died", ".", "Theis", "incident", "aside", ",", "there", "is", "an", "undeniable", "problem", "with", "that", "Police", "Dept", ".", "Agreed", "?"]
# ::lemmas ["&", "amp", ";", "somebody", "else", "would", "'ve", "die", ".", "Theis", "incident", "aside", ",", "there", "be", "an", "undeniable", "problem", "with", "that", "Police", "Dept", ".", "agree", "?"]
(c5-1 / multi-sentence
      :snt1 (c5-15 / and
                   :op2 (c5-5 / amp)
                   :op3 (c5-9 / die-01
                              :ARG1 (c5-11 / somebody
                                           :mod (c5-4 / else))))
      :snt2 (c5-8 / problem
                  :domain (c5-0 / department
                                :mod (c5-14 / police)
                                :mod (c5-13 / that))
                  :ARG1-of (c5-16 / deny-01
                                  :ARG1-of (c5-2 / possible-01
                                                 :polarity -))
                  :concession (c5-7 / aside
                                    :op1 (c5-6 / incident
                                               :mod (c5-10 / this))))
      :snt3 (c5-12 / agree-01
                   :polarity (c5-3 / amr-unknown)))

# ::snt honestly this shit started cause he stole some dutches from the store and he was walking in the street
# ::tokens ["honestly", "this", "shit", "started", "cause", "he", "stole", "some", "dutches", "from", "the", "store", "and", "he", "was", "walking", "in", "the", "street"]
# ::lemmas ["honestly", "this", "shit", "start", "cause", "he", "steal", "some", "dutch", "from", "the", "store", "and", "he", "be", "walk", "in", "the", "street"]
(c6-9 / cause-01
      :ARG0 (c6-12 / and
                   :op1 (c6-10 / steal-01
                               :ARG0 (c6-0 / he)
                               :ARG1 (c6-8 / dutch
                                           :quant (c6-6 / some))
                               :ARG2 (c6-3 / store))
                   :op2 (c6-1 / walk-01
                              :ARG0 c6-0
                              :ARG2 (c6-5 / street)))
      :ARG1 (c6-2 / start-01
                  :ARG1 (c6-7 / shit
                              :mod (c6-11 / this))
                  :ARG1-of (c6-4 / honest-01)))

# ::snt Tyrell, wake up. Had he listened to the officer, and never stole, he would be alive today. -4 fighting cop
# ::tokens ["Tyrell", ",", "wake", "up", ".", "Had", "he", "listened", "to", "the", "officer", ",", "and", "never", "stole", ",", "he", "would", "be", "alive", "today", ".", "-4", "fighting", "cop"]
# ::lemmas ["Tyrell", ",", "wake", "up", ".", "have", "he", "listen", "to", "the", "officer", ",", "and", "never", "steal", ",", "he", "would", "be", "alive", "today", ".", "-4", "fight", "cop"]
(c7-3 / multi-sentence
      :snt1 (c7-1 / wake-up-02
                  :ARG1 (c7-8 / person
                              :name (c7-7 / name
                                          :op1 "Tyrell"))
                  :mode imperative)
      :snt2 (c7-0 / have-condition-91
                  :ARG1 (c7-2 / live-01
                              :ARG0 (c7-13 / person
                                           :ARG0-of (c7-4 / fight-01))
                              :time (c7-12 / today))
                  :ARG2 (c7-14 / and
                               :op1 (c7-10 / listen-01
                                           :ARG0 c7-13
                                           :ARG1 (c7-5 / officer))
                               :op2 (c7-11 / steal-01
                                           :ARG0 c7-13
                                           :time (c7-6 / ever)
                                           :polarity -)))
      :snt3 (c7-9 / cop
                  :ARG0-of c7-4
                  :quant 4))

# ::snt then go offer your expert advise. Tyrell your naive to what is going on. Wake up
# ::tokens ["then", "go", "offer", "your", "expert", "advise", ".", "Tyrell", "your", "naive", "to", "what", "is", "going", "on", ".", "Wake", "up"]
# ::lemmas ["then", "go", "offer", "your", "expert", "advise", ".", "tyrell", "your", "naive", "to", "what", "be", "go", "on", ".", "wake", "up"]
(c8-2 / multi-sentence
      :snt1 (c8-9 / go-05
                  :ARG0 (c8-0 / you)
                  :ARG1 (c8-4 / offer-01
                              :ARG0 c8-0
                              :ARG1 (c8-12 / advise-01
                                           :ARG0 c8-0
                                           :ARG1-of (c8-5 / expert-01)))
                  :time (c8-11 / then)
                  :mode imperative)
      :snt2 (c8-6 / naive
                  :domain (c8-8 / person
                                :name (c8-7 / name
                                            :op1 "Tyrell"))
                  :topic (c8-3 / event))
      :snt3 (c8-1 / wake-up-02
                  :ARG0 (c8-10 / you
                               :ARG1-of c8-1)
                  :mode imperative))

# ::snt and had the PD not overreacted to the response of their citizens we might not have had riots on our hands.
# ::tokens ["and", "had", "the", "PD", "not", "overreacted", "to", "the", "response", "of", "their", "citizens", "we", "might", "not", "have", "had", "riots", "on", "our", "hands", "."]
# ::lemmas ["and", "have", "the", "PD", "not", "overreact", "to", "the", "response", "of", "their", "citizen", "we", "might", "not", "have", "have", "riot", "on", "our", "hand", "."]
(c9-9 / and
      :op2 (c9-5 / possible-01
                 :ARG1 (c9-2 / on-ones-hands-07
                             :ARG1 (c9-0 / we)
                             :ARG2 (c9-6 / riot-01)
                             :polarity -)
                 :condition (c9-1 / overreact-01
                                  :ARG0 (c9-8 / government-organization
                                              :name (c9-4 / name
                                                          :op1 "PD"))
                                  :ARG1 (c9-3 / respond-01
                                              :ARG0 (c9-7 / citizen
                                                          :poss c9-8))
                                  :polarity -)))

# ::snt so use your imagination and the word "de-escalate" to think about how the police response could have been different.
# ::tokens ["so", "use", "your", "imagination", "and", "the", "word", "\"", "de", "-", "escalate", "\"", "to", "think", "about", "how", "the", "police", "response", "could", "have", "been", "different", "."]
# ::lemmas ["so", "use", "your", "imagination", "and", "the", "word", "\"", "de", "-", "escalate", "\"", "to", "think", "about", "how", "the", "police", "response", "could", "have", "be", "different", "."]
(c10-4 / infer-01
       :ARG1 (c10-3 / use-01
                    :ARG0 (c10-0 / you)
                    :ARG1 (c10-12 / and
                                  :op1 (c10-8 / imagine-01
                                              :ARG0 c10-0)
                                  :op2 (c10-1 / word
                                              :mod (c10-6 / deescalate-01)))
                    :ARG2 (c10-10 / think-01
                                  :ARG0 c10-0
                                  :ARG1 (c10-9 / thing
                                               :manner-of (c10-5 / possible-01
                                                                 :ARG1 (c10-2 / differ-02
                                                                              :ARG1 (c10-7 / respond-01
                                                                                           :ARG0 (c10-11 / police))))))))

# ::snt answering a question with a question is certainly evasive. I'm a military policeman by trade. I dabble elsewhere.
# ::tokens ["answering", "a", "question", "with", "a", "question", "is", "certainly", "evasive", ".", "I", "'m", "a", "military", "policeman", "by", "trade", ".", "I", "dabble", "elsewhere", "."]
# ::lemmas ["answer", "a", "question", "with", "a", "question", "be", "certainly", "evasive", ".", "i", "be", "a", "military", "policeman", "by", "trade", ".", "i", "dabble", "elsewhere", "."]
(c12-0 / multi-sentence
       :snt1 (c12-2 / evasive
                    :domain (c12-13 / answer-01
                                    :ARG1 (c12-12 / thing
                                                  :ARG1-of (c12-3 / question-01))
                                    :ARG2 (c12-10 / thing
                                                  :ARG1-of (c12-11 / question-01)))
                    :manner (c12-8 / certain))
       :snt2 (c12-6 / policeman
                    :mod (c12-7 / military)
                    :domain (c12-4 / i)
                    :manner (c12-5 / trade))
       :snt3 (c12-9 / dabble-01
                    :ARG0 c12-4
                    :location (c12-1 / elsewhere)))

# ::snt I'm guessing an interview since its on Fox news is not valid?
# ::tokens ["I", "'m", "guessing", "an", "interview", "since", "its", "on", "Fox", "news", "is", "not", "valid", "?"]
# ::lemmas ["i", "be", "guess", "an", "interview", "since", "its", "on", "Fox", "news", "be", "not", "valid", "?"]
(c13-6 / guess-01
       :ARG0 (c13-1 / i)
       :ARG1 (c13-3 / valid-02
                    :ARG1 (c13-5 / interview-01)
                    :ARG1-of (c13-4 / cause-01
                                    :ARG0 (c13-0 / broadcast-program
                                                 :name (c13-2 / name
                                                              :op1 "Fox"
                                                              :op2 "News")))
                    :polarity -)
       :polarity (c13-7 / amr-unknown))

# ::snt and what are you suppose to do when people start tearing shit up... Let them?
# ::tokens ["and", "what", "are", "you", "suppose", "to", "do", "when", "people", "start", "tearing", "shit", "up", "...", "Let", "them", "?"]
# ::lemmas ["and", "what", "be", "you", "suppose", "to", "do", "when", "people", "start", "tear", "shit", "up", "...", "let", "they", "?"]
(c14-10 / and
        :op2 (c14-8 / suppose-02
                    :ARG1 (c14-0 / you)
                    :ARG2 (c14-6 / do-02
                                 :ARG0 c14-0
                                 :ARG1 (c14-4 / amr-unknown)
                                 :time (c14-3 / start-01
                                              :ARG0 (c14-5 / person)
                                              :ARG1 (c14-9 / tear-up-04
                                                           :ARG0 c14-5
                                                           :ARG1 (c14-1 / shit))))
                    :ARG1-of (c14-7 / cause-01
                                    :ARG0 (c14-2 / let-01
                                                 :ARG0 c14-0
                                                 :ARG1 c14-5))))

# ::snt I did a cursory search on the web, found nothing to corroborate the chief's statement.
# ::tokens ["I", "did", "a", "cursory", "search", "on", "the", "web", ",", "found", "nothing", "to", "corroborate", "the", "chief", "'s", "statement", "."]
# ::lemmas ["i", "do", "a", "cursory", "search", "on", "the", "web", ",", "find", "nothing", "to", "corroborate", "the", "chief", "'s", "statement", "."]
(c15-9 / and
       :op1 (c15-8 / search-01
                   :ARG0 (c15-3 / i)
                   :ARG2 (c15-0 / web)
                   :manner (c15-6 / cursory))
       :op2 (c15-1 / find-01
                   :ARG0 c15-3
                   :ARG1 (c15-4 / nothing
                                :ARG0-of (c15-5 / corroborate-01
                                                :ARG1 (c15-2 / state-01
                                                             :ARG0 (c15-7 / chief))))))

# ::snt i suspect it's because it didn't happen. But ok.
# ::tokens ["i", "suspect", "it", "'s", "because", "it", "did", "n't", "happen", ".", "But", "ok", "."]
# ::lemmas ["i", "suspect", "it", "be", "because", "it", "do", "not", "happen", ".", "but", "ok", "."]
(c16-1 / multi-sentence
       :snt1 (c16-7 / suspect-01
                    :ARG0 (c16-3 / i)
                    :ARG1 (c16-5 / cause-01
                                 :ARG0 (c16-0 / have-polarity-91
                                              :ARG1 (c16-6 / it)
                                              :ARG2 -)))
       :snt2 (c16-4 / contrast-01
                    :ARG2 (c16-2 / okay-04)))

# ::snt lol but are you suppose to steal and walk in the street though? Just because everyone doesn't mean you have too
# ::tokens ["lol", "but", "are", "you", "suppose", "to", "steal", "and", "walk", "in", "the", "street", "though", "?", "Just", "because", "everyone", "does", "n't", "mean", "you", "have", "too"]
# ::lemmas ["lol", "but", "be", "you", "suppose", "to", "steal", "and", "walk", "in", "the", "street", "though", "?", "just", "because", "everyone", "do", "not", "mean", "you", "have", "too"]
(c17-1 / multi-sentence
       :snt1 (c17-16 / contrast-01
                     :ARG2 (c17-3 / suppose-02
                                  :polarity (c17-4 / amr-unknown)
                                  :ARG1 (c17-13 / you)
                                  :ARG2 (c17-11 / and
                                                :op1 (c17-7 / steal-01
                                                            :ARG0 c17-13)
                                                :op2 (c17-10 / walk-01
                                                             :ARG0 c17-13
                                                             :ARG2 (c17-14 / street)))
                                  :ARG1-of (c17-5 / have-concession-91))
                     :ARG2-of (c17-6 / laugh-01
                                     :manner (c17-17 / loud)
                                     :mode expressive))
       :snt2 (c17-9 / mean-01
                    :ARG1 (c17-2 / cause-01
                                 :ARG0 (c17-8 / everyone)
                                 :ARG1 c17-3)
                    :ARG2 (c17-15 / obligate-01
                                  :ARG1 (c17-12 / you)
                                  :mod (c17-18 / too))
                    :mod (c17-0 / just)
                    :polarity -))

# ::snt Reminds me of apartheid South Africa ...
# ::tokens ["Reminds", "me", "of", "apartheid", "South", "Africa", "..."]
# ::lemmas ["remind", "i", "of", "apartheid", "South", "Africa", "..."]
(c18-2 / remind-01
       :ARG1 (c18-3 / country
                    :name (c18-1 / name
                                 :op1 "South"
                                 :op2 "Africa")
                    :mod (c18-4 / apartheid))
       :ARG2 (c18-0 / i))

# ::snt where does shooting unarmed men for walking in the street get you?
# ::tokens ["where", "does", "shooting", "unarmed", "men", "for", "walking", "in", "the", "street", "get", "you", "?"]
# ::lemmas ["where", "do", "shoot", "unarmed", "man", "for", "walk", "in", "the", "street", "get", "you", "?"]
(c19-5 / get-02
       :ARG0 (c19-6 / shoot-02
                    :ARG1 (c19-2 / man
                                 :ARG1-of (c19-7 / arm-01
                                                 :polarity -))
                    :ARG2 (c19-0 / walk-01
                                 :ARG0 c19-2
                                 :ARG2 (c19-3 / street)))
       :ARG1 (c19-1 / you)
       :ARG2 (c19-4 / amr-unknown))

# ::snt Calling out SWAT is not lessening tensions. It may escalate it
# ::tokens ["Calling", "out", "SWAT", "is", "not", "lessening", "tensions", ".", "It", "may", "escalate", "it"]
# ::lemmas ["call", "out", "SWAT", "be", "not", "lessen", "tension", ".", "it", "may", "escalate", "it"]
(c20-2 / multi-sentence
       :snt1 (c20-1 / lessen-01
                    :ARG0 (c20-6 / call-out-15
                                 :ARG1 (c20-0 / weapon
                                              :ARG2-of (c20-7 / special-02)))
                    :ARG1 (c20-8 / tension)
                    :polarity -)
       :snt2 (c20-5 / possible-01
                    :ARG1 (c20-3 / escalate-01
                                 :ARG0 (c20-4 / it))))

# ::snt so, what should they wear? It's a paramilitary organization. Sorry it's not all warm and fuzzy.
# ::tokens ["so", ",", "what", "should", "they", "wear", "?", "It", "'s", "a", "paramilitary", "organization", ".", "Sorry", "it", "'s", "not", "all", "warm", "and", "fuzzy", "."]
# ::lemmas ["so", ",", "what", "should", "they", "wear", "?", "it", "be", "a", "paramilitary", "organization", ".", "sorry", "it", "be", "not", "all", "warm", "and", "fuzzy", "."]
(c21-2 / multi-sentence
       :snt1 (c21-11 / cause-01
                     :ARG1 (c21-10 / recommend-01
                                   :ARG1 (c21-0 / wear-01
                                                :ARG0 (c21-14 / they)
                                                :ARG1 (c21-15 / amr-unknown))))
       :snt2 (c21-4 / organization
                    :mod (c21-9 / paramilitary)
                    :domain (c21-6 / it))
       :snt3 (c21-13 / sorry-01
                     :ARG1 (c21-12 / i)
                     :ARG2 (c21-5 / and
                                  :op1 (c21-7 / warm-06
                                              :ARG1 (c21-1 / it)
                                              :polarity -)
                                  :op2 (c21-3 / fuzz-01
                                              :ARG1 c21-1
                                              :polarity -)
                                  :degree (c21-8 / all))))

# ::snt "or prohibiting the petitioning for a governmental redress of grievances"
# ::tokens ["\"", "or", "prohibiting", "the", "petitioning", "for", "a", "governmental", "redress", "of", "grievances", "\""]
# ::lemmas ["\"", "or", "prohibit", "the", "petitioning", "for", "a", "governmental", "redress", "of", "grievance", "\""]
(c22-0 / or
       :op2 (c22-1 / prohibit-01
                   :ARG1 (c22-6 / petition-01
                                :ARG1 (c22-2 / redress-01
                                             :ARG0 (c22-4 / government-organization
                                                          :ARG0-of (c22-3 / govern-01))
                                             :ARG1 (c22-5 / complain-01)))))

# ::snt valid as any other cable news network. If indeed police officers were shot at it'll be reported &amp; corroborated in other sources.
# ::tokens ["valid", "as", "any", "other", "cable", "news", "network", ".", "If", "indeed", "police", "officers", "were", "shot", "at", "it", "'ll", "be", "reported", "&", "amp", ";", "corroborated", "in", "other", "sources", "."]
# ::lemmas ["valid", "as", "any", "other", "cable", "news", "network", ".", "if", "indeed", "police", "officer", "be", "shoot", "at", "it", "'ll", "be", "report", "&", "amp", ";", "corroborate", "in", "other", "source", "."]
(c23-1 / multi-sentence
       :snt1 (c23-7 / valid-02
                    :ARG2 (c23-6 / network
                                 :mod (c23-8 / news)
                                 :mod (c23-10 / cable)
                                 :mod (c23-3 / other)
                                 :mod (c23-14 / any)))
       :snt2 (c23-5 / and
                    :op1 (c23-9 / report-01
                                :ARG1 (c23-13 / shoot-02
                                              :ARG2 (c23-0 / officer
                                                           :mod (c23-11 / police))))
                    :op2 (c23-12 / corroborate-01
                                 :ARG0 (c23-4 / source
                                              :mod (c23-2 / other))
                                 :ARG1 c23-13)
                    :condition c23-13))

# ::snt I have no problem I just don't understand where rioting and breaking shit gets you
# ::tokens ["I", "have", "no", "problem", "I", "just", "do", "n't", "understand", "where", "rioting", "and", "breaking", "shit", "gets", "you"]
# ::lemmas ["i", "have", "no", "problem", "i", "just", "do", "not", "understand", "where", "rioting", "and", "break", "shit", "get", "you"]
(c24-12 / and
        :op1 (c24-0 / have-03
                    :ARG0 (c24-6 / i)
                    :ARG1 (c24-7 / problem)
                    :polarity -)
        :op2 (c24-3 / understand-01
                    :ARG0 c24-6
                    :ARG1 (c24-11 / thing
                                  :ARG2-of (c24-9 / get-05
                                                  :ARG0 (c24-5 / and
                                                               :op1 (c24-8 / riot-01)
                                                               :op2 (c24-4 / break-01
                                                                           :ARG1 (c24-10 / shit)))
                                                  :ARG1 (c24-1 / you)))
                    :mod (c24-2 / just)
                    :polarity -))

# ::snt millions of Americans have survived stealing smokes and walking in the street. Neither of which warrant getting shot.
# ::tokens ["millions", "of", "Americans", "have", "survived", "stealing", "smokes", "and", "walking", "in", "the", "street", ".", "Neither", "of", "which", "warrant", "getting", "shot", "."]
# ::lemmas ["millions", "of", "Americans", "have", "survive", "steal", "smoke", "and", "walk", "in", "the", "street", ".", "neither", "of", "which", "warrant", "getting", "shoot", "."]
(c25-3 / multi-sentence
       :snt1 (c25-12 / survive-01
                     :ARG0 (c25-9 / person
                                  :mod (c25-11 / country
                                               :name (c25-8 / name
                                                            :op1 "America"))
                                  :quant (c25-10 / multiple
                                                 :op1 1000000))
                     :ARG1 (c25-14 / and
                                   :op1 (c25-5 / steal-01
                                               :ARG0 c25-9
                                               :ARG1 (c25-2 / smokes))
                                   :op2 (c25-1 / walk-01
                                               :ARG0 c25-9
                                               :ARG2 (c25-4 / street))
                                   :ARG0-of (c25-7 / warrant-01
                                                   :ARG1 (c25-0 / shoot-02
                                                                :ARG1 c25-9))))
       :snt2 (c25-13 / thing
                     :mod (c25-6 / either)))

# ::snt that's right and just because you do doesn't mean you deserve to get shot. Put Mike Brown aside, look at the problem.
# ::tokens ["that", "'s", "right", "and", "just", "because", "you", "do", "does", "n't", "mean", "you", "deserve", "to", "get", "shot", ".", "Put", "Mike", "Brown", "aside", ",", "look", "at", "the", "problem", "."]
# ::lemmas ["that", "be", "right", "and", "just", "because", "you", "do", "do", "not", "mean", "you", "deserve", "to", "get", "shoot", ".", "put", "Mike", "Brown", "aside", ",", "look", "at", "the", "problem", "."]
(c26-4 / multi-sentence
       :snt1 (c26-15 / and
                     :op1 (c26-9 / right-02
                                 :ARG1 (c26-13 / that))
                     :op2 (c26-8 / mean-01
                                 :ARG1 (c26-10 / do-02
                                               :ARG0 (c26-1 / you))
                                 :ARG2 (c26-2 / deserve-01
                                              :ARG0 c26-1
                                              :ARG1 (c26-12 / shoot-02
                                                            :ARG1 c26-1))
                                 :mod (c26-0 / just)
                                 :polarity -)
                     :snt2-of c26-4)
       :op1 (c26-11 / put-01
                    :ARG0 c26-1
                    :mode imperative)
       :ARG1 (c26-14 / person
                     :name (c26-7 / name
                                  :op1 "Mike"
                                  :op2 "Brown"))
       :ARG2 (c26-6 / aside)
       :op2 (c26-3 / look-01
                   :ARG0 c26-1
                   :ARG1 (c26-5 / problem)
                   :mode imperative))

# ::snt ideologies are not black and white nor set in stone most people have blends of multiple
# ::tokens ["ideologies", "are", "not", "black", "and", "white", "nor", "set", "in", "stone", "most", "people", "have", "blends", "of", "multiple"]
# ::lemmas ["ideology", "be", "not", "black", "and", "white", "nor", "set", "in", "stone", "most", "people", "have", "blend", "of", "multiple"]
(c27-7 / contrast-01
       :ARG1 (c27-3 / or
                    :op1 (c27-2 / black-and-white
                                :domain (c27-4 / ideal)
                                :polarity -)
                    :op2 (c27-9 / set-in-stone
                                :domain c27-4
                                :polarity -))
       :ARG2 (c27-0 / have-03
                    :ARG0 (c27-5 / person
                                 :mod (c27-1 / most))
                    :ARG1 (c27-8 / blend-01
                                 :ARG1 (c27-6 / multiple))))

# ::snt is he was walking on the side walk shit would've been good, if he would've payed for the dutches he would be good
# ::tokens ["is", "he", "was", "walking", "on", "the", "side", "walk", "shit", "would", "'ve", "been", "good", ",", "if", "he", "would", "'ve", "payed", "for", "the", "dutches", "he", "would", "be", "good"]
# ::lemmas ["be", "he", "be", "walk", "on", "the", "side", "walk", "shit", "would", "'ve", "be", "good", ",", "if", "he", "would", "'ve", "pay", "for", "the", "dutch", "he", "would", "be", "good"]
(c28-5 / contrast-01
       :ARG1 (c28-6 / good-02
                    :ARG1 (c28-1 / walk-01
                                 :ARG0 (c28-0 / he)
                                 :location (c28-8 / side
                                                  :part-of (c28-2 / walk-01))))
       :ARG2 (c28-4 / good-02
                    :ARG1 c28-0
                    :condition (c28-3 / pay-01
                                      :ARG0 c28-0
                                      :ARG3 (c28-7 / dutch))))

# ::snt that isnt policing.
# ::tokens ["that", "is", "nt", "policing", "."]
# ::lemmas ["that", "be", "not", "police", "."]
(c29-0 / police-01
       :domain (c29-1 / that)
       :polarity -)

# ::snt a cacophony of echoes. SOrtbals
# ::tokens ["a", "cacophony", "of", "echoes", ".", "SOrtbals"]
# ::lemmas ["a", "cacophony", "of", "echo", ".", "sortbal"]
(c30-0 / multi-sentence
       :snt1 (c30-4 / cacophony
                    :consist-of (c30-1 / echo))
       :snt2 (c30-3 / person
                    :name (c30-2 / name
                                 :op1 "SOrtbals")))

# ::snt who's liberal? what is a liberal ? why are you reducing this issue to party politics?
# ::tokens ["who", "'s", "liberal", "?", "what", "is", "a", "liberal", "?", "why", "are", "you", "reducing", "this", "issue", "to", "party", "politics", "?"]
# ::lemmas ["who", "be", "liberal", "?", "what", "be", "a", "liberal", "?", "why", "be", "you", "reduce", "this", "issue", "to", "party", "politic", "?"]
(c31-2 / multi-sentence
       :snt1 (c31-1 / liberal-02
                    :ARG1 (c31-12 / amr-unknown))
       :snt2 (c31-9 / liberal-02
                    :ARG1 (c31-3 / amr-unknown))
       :snt3 (c31-7 / reduce-01
                    :ARG0 (c31-0 / you)
                    :ARG1 (c31-4 / issue-02
                                 :mod (c31-10 / this))
                    :ARG4 (c31-6 / politics
                                 :mod (c31-11 / party))
                    :ARG1-of (c31-8 / cause-01
                                    :ARG0 (c31-5 / amr-unknown))))

# ::snt wtf does the democratic party have to do with what's going on in ferguson or the price of tea in china . idgaf about that
# ::tokens ["wtf", "does", "the", "democratic", "party", "have", "to", "do", "with", "what", "'s", "going", "on", "in", "ferguson", "or", "the", "price", "of", "tea", "in", "china", ".", "idgaf", "about", "that"]
# ::lemmas ["wtf", "do", "the", "democratic", "party", "have", "to", "do", "with", "what", "be", "go", "on", "in", "ferguson", "or", "the", "price", "of", "tea", "in", "china", ".", "idgaf", "about", "that"]
(c32-2 / multi-sentence
       :snt1 (c32-0 / have-to-do-with-04
                    :ARG0 (c32-8 / political-party
                                 :name (c32-6 / name
                                              :op1 "Democrat"))
                    :ARG1 (c32-3 / or
                                 :op1 (c32-4 / event
                                             :location (c32-10 / city
                                                               :name (c32-7 / name
                                                                            :op1 "Ferguson")))
                                 :op2 (c32-14 / thing
                                              :ARG2-of (c32-15 / price-01
                                                               :ARG1 (c32-13 / tea))
                                              :location (c32-9 / country
                                                               :name (c32-11 / name
                                                                             :op1 "China"))))
                    :ARG2 (c32-16 / amr-unknown
                                  :mod (c32-1 / fuck
                                              :mode expressive)))
       :snt2 (c32-5 / idgaf
                    :topic (c32-12 / that)))

# ::snt You wear body armor/helmets when you're worried about getting shot. Remind me, who's been shooting whom in ?
# ::tokens ["You", "wear", "body", "armor", "/", "helmets", "when", "you", "'re", "worried", "about", "getting", "shot", ".", "Remind", "me", ",", "who", "'s", "been", "shooting", "whom", "in", "?"]
# ::lemmas ["you", "wear", "body", "armor", "/", "helmet", "when", "you", "be", "worried", "about", "getting", "shoot", ".", "remind", "i", ",", "who", "be", "be", "shoot", "whom", "in", "?"]
(c33-4 / multi-sentence
       :snt1 (c33-1 / wear-01
                    :ARG0 (c33-2 / you)
                    :ARG1 (c33-12 / slash
                                  :op1 (c33-13 / armor
                                               :mod (c33-5 / body))
                                  :op2 (c33-0 / helm))
                    :time (c33-9 / worry-02
                                 :ARG0 c33-2
                                 :ARG1 (c33-6 / shoot-02
                                              :ARG1 c33-2)))
       :snt2 (c33-11 / remind-01
                     :ARG0 c33-2
                     :mode imperative)
       :ARG1 (c33-3 / shoot-02
                    :ARG0 (c33-7 / amr-unknown)
                    :ARG1 (c33-10 / amr-unknown))
       :ARG2 (c33-8 / i))

# ::snt Steve, I see you're new to twitter. What do you do for a living if I might ask?
# ::tokens ["Steve", ",", "I", "see", "you", "'re", "new", "to", "twitter", ".", "What", "do", "you", "do", "for", "a", "living", "if", "I", "might", "ask", "?"]
# ::lemmas ["Steve", ",", "i", "see", "you", "be", "new", "to", "twitter", ".", "what", "do", "you", "do", "for", "a", "living", "if", "i", "might", "ask", "?"]
(c34-2 / multi-sentence
       :snt1 (c34-13 / say-01
                     :ARG0 (c34-6 / i)
                     :ARG1 (c34-4 / see-01
                                  :ARG0 c34-6
                                  :ARG1 (c34-7 / new-02
                                               :ARG1 (c34-9 / person
                                                            :name (c34-8 / name
                                                                         :op1 "Steve"))
                                               :ARG2 (c34-14 / publication
                                                             :name (c34-10 / name
                                                                           :op1 "Twitter"))))
                     :ARG2 c34-9)
       :snt2 (c34-11 / do-02
                     :ARG0 (c34-0 / you)
                     :ARG1 (c34-15 / amr-unknown)
                     :ARG2 (c34-1 / live-01
                                  :ARG0 c34-0)
                     :condition (c34-3 / permit-01
                                       :ARG0 (c34-12 / i)
                                       :ARG1 (c34-5 / ask-01
                                                    :ARG0 c34-12
                                                    :ARG1 c34-15))))

# ::snt what do you do?
# ::tokens ["what", "do", "you", "do", "?"]
# ::lemmas ["what", "do", "you", "do", "?"]
(c35-1 / do-02
       :ARG0 (c35-0 / you)
       :ARG1 (c35-2 / amr-unknown))

# ::snt not like they took the man out as a unit and hung him it was a individual that got into a altercation with another
# ::tokens ["not", "like", "they", "took", "the", "man", "out", "as", "a", "unit", "and", "hung", "him", "it", "was", "a", "individual", "that", "got", "into", "a", "altercation", "with", "another"]
# ::lemmas ["not", "like", "they", "take", "the", "man", "out", "as", "a", "unit", "and", "hang", "he", "it", "be", "a", "individual", "that", "get", "into", "a", "altercation", "with", "another"]
(c36-2 / multi-sentence
       :snt1 (c36-7 / resemble-01
                    :ARG2 (c36-11 / and
                                  :op1 (c36-10 / take-out-11
                                               :ARG0 (c36-9 / they)
                                               :ARG1 (c36-6 / man)
                                               :prep-as (c36-3 / unit))
                                  :op2 (c36-0 / hang-01
                                              :ARG0 c36-9
                                              :ARG1 c36-6))
                    :polarity -)
       :snt2 (c36-5 / individual
                    :ARG0-of (c36-8 / get-05
                                    :ARG1 (c36-1 / fight-01
                                                 :ARG0 c36-5
                                                 :ARG1 (c36-4 / another)))))

# ::snt with the spin this story is getting, I don't think people care about what they do to the police.
# ::tokens ["with", "the", "spin", "this", "story", "is", "getting", ",", "I", "do", "n't", "think", "people", "care", "about", "what", "they", "do", "to", "the", "police", "."]
# ::lemmas ["with", "the", "spin", "this", "story", "be", "get", ",", "i", "do", "not", "think", "people", "care", "about", "what", "they", "do", "to", "the", "police", "."]
(c37-10 / think-01
        :ARG0 (c37-1 / i)
        :ARG1 (c37-5 / care-01
                     :ARG0 (c37-3 / person)
                     :ARG1 (c37-8 / thing
                                  :ARG1-of (c37-4 / do-02
                                                  :ARG0 c37-3
                                                  :ARG2 (c37-11 / police))))
        :ARG1-of (c37-6 / cause-01
                        :ARG0 (c37-7 / get-03
                                     :ARG1 (c37-9 / spin-03
                                                  :ARG1 (c37-0 / story
                                                               :mod (c37-2 / this)))))
        :polarity -)

# ::snt got a link or reference about police being "shot at every night since Mike Brown was shot."? I'm interested in reading abt that.
# ::tokens ["got", "a", "link", "or", "reference", "about", "police", "being", "\"", "shot", "at", "every", "night", "since", "Mike", "Brown", "was", "shot", ".", "\"", "?", "I", "'m", "interested", "in", "reading", "abt", "that", "."]
# ::lemmas ["get", "a", "link", "or", "reference", "about", "police", "be", "\"", "shoot", "at", "every", "night", "since", "Mike", "Brown", "be", "shoot", ".", "\"", "?", "i", "be", "interested", "in", "read", "abt", "that", "."]
(c38-1 / multi-sentence
       :snt1 (c38-12 / get-01
                     :ARG0 (c38-13 / i)
                     :ARG1 (c38-16 / or
                                   :op1 (c38-7 / link)
                                   :op2 (c38-11 / reference)
                                   :topic (c38-5 / shoot-01
                                                 :ARG1 (c38-3 / police)
                                                 :time (c38-8 / since
                                                              :op1 (c38-15 / shoot-01
                                                                           :ARG1 (c38-6 / person
                                                                                        :name (c38-10 / name
                                                                                                      :op1 "Mike"
                                                                                                      :op2 "Brown"))))
                                                 :frequency (c38-2 / rate-entity-91
                                                                   :ARG4 (c38-4 / date-entity
                                                                                :dayperiod (c38-17 / night))))))
       :snt2 (c38-14 / interest-01
                     :ARG1 (c38-0 / i)
                     :ARG2 (c38-9 / read-01
                                  :ARG0 c38-0
                                  :ARG1 (c38-18 / that))))

# ::snt thank you. National guard is on its way now also. Should be interesting.
# ::tokens ["thank", "you", ".", "National", "guard", "is", "on", "its", "way", "now", "also", ".", "Should", "be", "interesting", "."]
# ::lemmas ["thank", "you", ".", "national", "guard", "be", "on", "its", "way", "now", "also", ".", "should", "be", "interesting", "."]
(c39-2 / multi-sentence
       :snt1 (c39-8 / thank-01
                    :ARG1 (c39-0 / you))
       :snt2 (c39-1 / way
                    :domain (c39-7 / guard
                                   :mod (c39-4 / nation))
                    :time (c39-5 / now)
                    :mod (c39-9 / also))
       :snt3 (c39-6 / recommend-01
                    :ARG1 (c39-3 / interest-01)))

# ::snt the Police in are one negligent discharge away from total catastrophe.
# ::tokens ["the", "Police", "in", "are", "one", "negligent", "discharge", "away", "from", "total", "catastrophe", "."]
# ::lemmas ["the", "Police", "in", "be", "one", "negligent", "discharge", "away", "from", "total", "catastrophe", "."]
(c40-0 / be-located-at-91
       :ARG1 (c40-2 / police)
       :ARG2 (c40-3 / relative-position
                    :op1 (c40-4 / catastrophe
                                :degree (c40-6 / total))
                    :direction (c40-7 / away)
                    :quant (c40-5 / discharge-01
                                  :ARG0 c40-2
                                  :mod (c40-1 / negligent)
                                  :quant 1)))

# ::snt are you serious? The police have been shot at every night since Mike Brown was shot.
# ::tokens ["are", "you", "serious", "?", "The", "police", "have", "been", "shot", "at", "every", "night", "since", "Mike", "Brown", "was", "shot", "."]
# ::lemmas ["be", "you", "serious", "?", "the", "police", "have", "be", "shoot", "at", "every", "night", "since", "Mike", "Brown", "be", "shoot", "."]
(c41-2 / multi-sentence
       :snt1 (c41-10 / serious-01
                     :polarity (c41-12 / amr-unknown)
                     :ARG1 (c41-0 / you))
       :snt2 (c41-4 / shoot-02
                    :ARG1 (c41-7 / police)
                    :frequency (c41-8 / rate-entity-91
                                      :ARG4 (c41-9 / date-entity
                                                   :dayperiod (c41-5 / night)))
                    :time (c41-1 / since
                                 :op1 (c41-3 / shoot-02
                                             :ARG1 (c41-11 / person
                                                           :name (c41-6 / name
                                                                        :op1 "Mike"
                                                                        :op2 "Brown"))))))

# ::snt there hasn't been rioting or looting for over hrs....so what are you talking about.
# ::tokens ["there", "has", "n't", "been", "rioting", "or", "looting", "for", "over", "hrs", "....", "so", "what", "are", "you", "talking", "about", "."]
# ::lemmas ["there", "have", "not", "be", "riot", "or", "loot", "for", "over", "hrs", "....", "so", "what", "be", "you", "talk", "about", "."]
(c42-7 / talk-01
       :ARG0 (c42-1 / you)
       :ARG1 (c42-8 / amr-unknown)
       :time (c42-4 / or
                    :op1 (c42-5 / riot-01
                                :polarity -)
                    :op2 (c42-2 / loot-01
                                :polarity -)
                    :duration (c42-3 / over
                                     :op1 (c42-6 / temporal-quantity
                                                 :unit (c42-0 / hour)
                                                 :quant 1))))

# ::snt how does what make me feel? I'm sick about this entire event. They are possibly rioting over a good shoot.
# ::tokens ["how", "does", "what", "make", "me", "feel", "?", "I", "'m", "sick", "about", "this", "entire", "event", ".", "They", "are", "possibly", "rioting", "over", "a", "good", "shoot", "."]
# ::lemmas ["how", "do", "what", "make", "i", "feel", "?", "i", "be", "sick", "about", "this", "entire", "event", ".", "they", "be", "possibly", "riot", "over", "a", "good", "shoot", "."]
(c43-1 / multi-sentence
       :snt1 (c43-6 / make-02
                    :ARG0 (c43-14 / amr-unknown)
                    :ARG1 (c43-0 / feel-01
                                 :ARG0 (c43-5 / i)))
       :snt2 (c43-12 / sick-04
                     :ARG0 (c43-3 / event
                                  :mod (c43-2 / entire)
                                  :mod (c43-13 / this))
                     :ARG1 (c43-9 / i))
       :snt3 (c43-7 / possible-01
                    :ARG1 (c43-8 / riot-01
                                 :ARG0 (c43-11 / they)
                                 :ARG1 (c43-4 / shoot-01
                                              :ARG1-of (c43-10 / good-02)))))

# ::snt ok buy if have thousands of angry people rioting, shooting, and stealing what are you suppose to do?
# ::tokens ["ok", "buy", "if", "have", "thousands", "of", "angry", "people", "rioting", ",", "shooting", ",", "and", "stealing", "what", "are", "you", "suppose", "to", "do", "?"]
# ::lemmas ["ok", "buy", "if", "have", "thousands", "of", "angry", "people", "rioting", ",", "shooting", ",", "and", "steal", "what", "be", "you", "suppose", "to", "do", "?"]
(c44-3 / buy-01
       :ARG0 (c44-0 / you)
       :condition (c44-11 / suppose-02
                          :ARG1 c44-0
                          :ARG2 (c44-9 / do-02
                                       :ARG0 c44-0
                                       :ARG1 (c44-12 / amr-unknown))
                          :condition (c44-6 / and
                                            :op1 (c44-10 / riot-01
                                                         :ARG0 (c44-8 / person
                                                                      :ARG1-of (c44-7 / anger-01)
                                                                      :quant (c44-2 / multiple
                                                                                    :op1 1000)))
                                            :op2 (c44-5 / shoot-02
                                                        :ARG0 c44-8)
                                            :op3 (c44-1 / steal-01
                                                        :ARG0 c44-8)))
       :ARG1-of (c44-4 / okay-04)
       :mode imperative)

# ::snt 'Not Open For Discussion'SWAT Tells Protesters In To Leave (Photo: )
# ::tokens ["'", "Not", "Open", "For", "Discussion'SWAT", "Tells", "Protesters", "In", "To", "Leave", "(", "Photo", ":", ")"]
# ::lemmas ["'", "not", "open", "for", "discussion'swat", "Tells", "Protesters", "in", "to", "leave", "(", "photo", ":", ")"]
(c45-8 / tell-01
       :ARG0 (c45-3 / newspaper
                    :name (c45-4 / name
                                 :op1 "SWAT"))
       :ARG1 (c45-2 / obligate-01
                    :ARG1 (c45-5 / person
                                 :ARG0-of (c45-9 / protest-01))
                    :ARG2 (c45-0 / leave-11
                                 :ARG0 c45-5))
       :ARG2 c45-5
       :ARG1-of (c45-6 / describe-01
                       :ARG0 (c45-1 / publication
                                    :ARG1-of (c45-7 / cite-01))))

# ::snt the problem is that you trust cops like they are your first line of defense... You have to protect yourself always
# ::tokens ["the", "problem", "is", "that", "you", "trust", "cops", "like", "they", "are", "your", "first", "line", "of", "defense", "...", "You", "have", "to", "protect", "yourself", "always"]
# ::lemmas ["the", "problem", "be", "that", "you", "trust", "cop", "like", "they", "be", "your", "first", "line", "of", "defense", "...", "you", "have", "to", "protect", "yourself", "always"]
(c46-2 / multi-sentence
       :snt1 (c46-5 / problem
                    :domain (c46-10 / trust-02
                                    :ARG0 (c46-0 / you)
                                    :ARG1 (c46-7 / cop)
                                    :ARG1-of (c46-6 / resemble-01
                                                    :ARG2 (c46-1 / line
                                                                 :ord (c46-4 / ordinal-entity
                                                                             :value 1)
                                                                 :ARG2-of (c46-8 / defend-01
                                                                                 :ARG0 c46-0)
                                                                 :domain c46-7))))
       :snt2 (c46-3 / obligate-01
                    :ARG1 (c46-9 / you)
                    :ARG2 (c46-11 / protect-01
                                  :ARG0 c46-9
                                  :ARG1 c46-9
                                  :time (c46-12 / always))))

# ::snt you don't even know what that means. And you can't welcome me to America from Finland dear.
# ::tokens ["you", "do", "n't", "even", "know", "what", "that", "means", ".", "And", "you", "ca", "n't", "welcome", "me", "to", "America", "from", "Finland", "dear", "."]
# ::lemmas ["you", "do", "not", "even", "know", "what", "that", "mean", ".", "and", "you", "can", "not", "welcome", "i", "to", "America", "from", "Finland", "dear", "."]
(c47-2 / multi-sentence
       :snt1 (c47-5 / know-01
                    :ARG0 (c47-0 / you)
                    :ARG1 (c47-14 / thing
                                  :ARG2-of (c47-8 / mean-01
                                                  :ARG1 (c47-13 / that)))
                    :mod (c47-3 / even)
                    :polarity -)
       :snt2 (c47-15 / and
                     :op2 (c47-9 / possible-01
                                 :ARG1 (c47-1 / welcome-01
                                              :ARG0 (c47-16 / you)
                                              :ARG1 (c47-4 / i)
                                              :ARG2 (c47-10 / country
                                                            :name (c47-6 / name
                                                                         :op1 "America"))
                                              :source (c47-11 / country
                                                              :name (c47-7 / name
                                                                           :op1 "Finland")))
                                 :polarity -)
                     :mod (c47-12 / dear)))

# ::snt who in their right mind has complete endorsement of the system?
# ::tokens ["who", "in", "their", "right", "mind", "has", "complete", "endorsement", "of", "the", "system", "?"]
# ::lemmas ["who", "in", "their", "right", "mind", "have", "complete", "endorsement", "of", "the", "system", "?"]
(c48-1 / endorse-01
       :ARG0 (c48-5 / amr-unknown
                    :mod (c48-0 / mind
                                :ARG1-of (c48-2 / right-03)))
       :ARG1 (c48-4 / system)
       :ARG1-of (c48-3 / complete-02))

# ::snt law... "interfering with the right to peaceably assemble" Amendment
# ::tokens ["law", "...", "\"", "interfering", "with", "the", "right", "to", "peaceably", "assemble", "\"", "Amendment"]
# ::lemmas ["law", "...", "\"", "interfere", "with", "the", "right", "to", "peaceably", "assemble", "\"", "amendment"]
(c49-2 / and
       :op1 (c49-1 / law)
       :op2 (c49-3 / law
                   :name (c49-0 / name
                                :op1 "interfering"
                                :op2 "with"
                                :op3 "the"
                                :op4 "Right"
                                :op5 "To")))

# ::snt The cops in are like kids posing showing off new toys.They can't even operate the equipment.They're too stupid.
# ::tokens ["The", "cops", "in", "are", "like", "kids", "posing", "showing", "off", "new", "toys", ".", "They", "ca", "n't", "even", "operate", "the", "equipment", ".", "They're", "too", "stupid", "."]
# ::lemmas ["the", "cop", "in", "be", "like", "kid", "pose", "show", "off", "new", "toy", ".", "they", "can", "not", "even", "operate", "the", "equipment", ".", "they're", "too", "stupid", "."]
(c50-1 / multi-sentence
       :snt1 (c50-11 / resemble-01
                     :ARG1 (c50-12 / cop
                                   :location (c50-7 / inside))
                     :ARG2 (c50-16 / kid
                                   :ARG0-of (c50-10 / pose-01
                                                    :ARG1 (c50-14 / show-off-03
                                                                  :ARG0 c50-16
                                                                  :ARG1 (c50-15 / toy
                                                                                :ARG1-of (c50-8 / new-01))))))
       :snt2 (c50-17 / possible-01
                     :ARG1 (c50-3 / operate-01
                                  :ARG0 (c50-13 / they)
                                  :ARG1 (c50-4 / equipment)
                                  :mod (c50-2 / even))
                     :polarity -)
       :snt3 (c50-0 / have-degree-91
                    :ARG1 (c50-9 / they)
                    :ARG2 (c50-5 / stupid)
                    :ARG3 (c50-6 / too)))
