# ::snt I'm a muslim, made my day thank you. it makes me happy to see people like u
# ::tokens ["I", "'m", "a", "muslim", ",", "made", "my", "day", "thank", "you", ".", "it", "makes", "me", "happy", "to", "see", "people", "like", "u"]
# ::lemmas ["i", "be", "a", "muslim", ",", "make", "my", "day", "thank", "you", ".", "it", "make", "i", "happy", "to", "see", "people", "like", "u"]
(c1-3 / multi-sentence
      :snt1 (c1-8 / person
                  :mod (c1-9 / religious-group
                             :name (c1-7 / name
                                         :op1 "Islam"))
                  :domain (c1-5 / i))
      :snt2 (c1-10 / make-18
                   :ARG0 (c1-11 / i)
                   :ARG1 (c1-12 / day
                                :poss c1-11)
                   :ARG2 (c1-15 / thank-01
                                :ARG0 c1-11
                                :ARG1 (c1-1 / you)))
      :snt3 (c1-2 / make-18
                  :ARG0 (c1-14 / see-01
                               :ARG0 (c1-4 / i)
                               :ARG1 (c1-16 / person
                                            :ARG1-of (c1-6 / resemble-01
                                                           :ARG2 (c1-13 / you))))
                  :ARG1 (c1-0 / happy-01
                              :ARG0 c1-14
                              :ARG0 c1-4
                              :ARG1 c1-16)
                  :ARG1 c1-4))

# ::snt I respect humans, not their belief systems or their ideologies.
# ::tokens ["I", "respect", "humans", ",", "not", "their", "belief", "systems", "or", "their", "ideologies", "."]
# ::lemmas ["i", "respect", "human", ",", "not", "their", "belief", "system", "or", "their", "ideology", "."]
(c2-5 / respect-01
      :ARG0 (c2-3 / i)
      :ARG1 (c2-0 / human)
      :ARG1-of (c2-6 / contrast-01
                     :ARG2 (c2-4 / respect-01
                                 :ARG0 c2-3
                                 :ARG1 (c2-2 / or
                                             :op1 (c2-8 / system
                                                        :mod (c2-1 / believe-01)
                                                        :poss c2-0)
                                             :op2 (c2-7 / ideology
                                                        :poss c2-0))
                                 :polarity -)))

# ::snt IM A MUSLIM THANK YOU
# ::tokens ["IM", "A", "MUSLIM", "THANK", "YOU"]
# ::lemmas ["IM", "a", "MUSLIM", "thank", "you"]
(c3-4 / thank-01
      :ARG0 (c3-1 / i)
      :ARG1 (c3-0 / you)
      :mod (c3-3 / religious-group
                 :name (c3-2 / name
                             :op1 "Islam")))

# ::snt Should i tweet maybe lot people will see it from my acc
# ::tokens ["Should", "i", "tweet", "maybe", "lot", "people", "will", "see", "it", "from", "my", "acc"]
# ::lemmas ["should", "i", "tweet", "maybe", "lot", "people", "will", "see", "it", "from", "my", "acc"]
(c4-4 / possible-01
      :ARG1 (c4-7 / see-01
                  :ARG0 (c4-9 / person
                              :quant (c4-1 / lot))
                  :ARG1 (c4-3 / it)
                  :source (c4-2 / person
                                :ARG0-of (c4-0 / have-rel-role-91
                                               :ARG1 (c4-6 / i)
                                               :ARG2 (c4-10 / acc))))
      :condition (c4-5 / recommend-01
                       :ARG1 (c4-8 / tweet-02
                                   :ARG0 c4-6)))

# ::snt idk haha as you like, actually
# ::tokens ["idk", "haha", "as", "you", "like", ",", "actually"]
# ::lemmas ["idk", "haha", "as", "you", "like", ",", "actually"]
(c5-0 / have-manner-91
      :ARG2 (c5-2 / like-01
                  :ARG0 (c5-1 / you))
      :mod (c5-3 / haha
                 :mode expressive)
      :ARG1-of (c5-4 / actual-02))

# ::snt Islam : Most important video I have ever seen on
# ::tokens ["Islam", ":", "Most", "important", "video", "I", "have", "ever", "seen", "on"]
# ::lemmas ["Islam", ":", "most", "important", "video", "i", "have", "ever", "see", "on"]
(c7-5 / video
      :topic (c7-6 / religious-group
                   :name (c7-4 / name
                               :op1 "Islam"))
      :ARG1-of (c7-0 / have-degree-91
                     :ARG2 (c7-3 / important-01
                                 :ARG1 c7-5)
                     :ARG3 (c7-1 / most)
                     :ARG5 (c7-8 / see-01
                                 :ARG0 (c7-7 / i)
                                 :time (c7-2 / ever)
                                 :location c7-5)))

# ::snt :if i rt it will nott sucseed a lot what do u think
# ::tokens [":", "if", "i", "rt", "it", "will", "nott", "sucseed", "a", "lot", "what", "do", "u", "think"]
# ::lemmas [":", "if", "i", "rt", "it", "will", "nott", "sucseed", "a", "lot", "what", "do", "u", "think"]
(c8-7 / think-01
      :ARG0 (c8-1 / you)
      :ARG1 (c8-0 / have-condition-91
                  :ARG1 (c8-6 / seed-01
                              :ARG0 (c8-4 / it)
                              :degree (c8-2 / lot)
                              :polarity -)
                  :ARG2 (c8-5 / person
                              :ARG0-of (c8-8 / have-rel-role-91
                                             :ARG1 c8-1
                                             :ARG2 (c8-3 / significant-other)))))

# ::snt : ? then expect New Muslim greeting:"Bro! . Next year in the mosque at the Reichstag"
# ::tokens [":", "?", "then", "expect", "New", "Muslim", "greeting:\"Bro", "!", ".", "Next", "year", "in", "the", "mosque", "at", "the", "Reichstag", "\""]
# ::lemmas [":", "?", "then", "expect", "New", "Muslim", "greeting:\"bro", "!", ".", "Next", "year", "in", "the", "mosque", "at", "the", "Reichstag", "\""]
(c9-3 / expect-01
      :ARG1 (c9-9 / greet-01
                  :ARG1 (c9-6 / person
                              :mod (c9-7 / religious-group
                                         :name (c9-4 / name
                                                     :op1 "Islam"))
                              :ARG1-of (c9-5 / new-01))
                  :ARG1-of (c9-1 / mean-01
                                 :ARG2 (c9-2 / be-located-at-91
                                             :ARG1 c9-9
                                             :ARG2 (c9-8 / mosque
                                                         :location (c9-10 / building
                                                                          :name (c9-11 / name
                                                                                       :op1 "Reichstag")))
                                             :time (c9-0 / year
                                                         :mod (c9-12 / next)))))
      :time (c9-13 / then))

# ::snt ill tweet it and ill see lmao
# ::tokens ["ill", "tweet", "it", "and", "ill", "see", "lmao"]
# ::lemmas ["ill", "tweet", "it", "and", "ill", "see", "lmao"]
(c10-6 / and
       :op1 (c10-5 / tweet-02
                   :ARG0 (c10-1 / i)
                   :ARG1 (c10-2 / it))
       :op2 (c10-4 / see-01
                   :ARG0 c10-1
                   :ARG1 (c10-0 / laugh-01
                                :ARG0 c10-1
                                :manner (c10-3 / loud))))

# ::snt Thanks
# ::tokens ["Thanks"]
# ::lemmas ["thank"]
(c11-1 / thank-01
       :ARG0 (c11-2 / i)
       :ARG1 (c11-0 / you))

# ::snt no prob
# ::tokens ["no", "prob"]
# ::lemmas ["no", "prob"]
(c12-0 / prob
       :polarity -)

# ::snt you could just rt or tweet the link haha idk, as you like
# ::tokens ["you", "could", "just", "rt", "or", "tweet", "the", "link", "haha", "idk", ",", "as", "you", "like"]
# ::lemmas ["you", "could", "just", "rt", "or", "tweet", "the", "link", "haha", "idk", ",", "as", "you", "like"]
(c13-6 / possible-01
       :ARG1 (c13-5 / or
                    :op1 (c13-3 / laugh-01
                                :ARG0 (c13-1 / you)
                                :mod (c13-0 / just))
                    :op2 (c13-9 / tweet-02
                                :ARG0 c13-1
                                :ARG1 (c13-8 / link)))
       :mod (c13-2 / haha
                   :mode expressive)
       :ARG1-of (c13-7 / resemble-01
                       :ARG2 (c13-4 / like-02
                                    :ARG0 c13-1)))

# ::snt okay lol x
# ::tokens ["okay", "lol", "x"]
# ::lemmas ["okay", "lol", "x"]
(c14-0 / okay-04
       :ARG2-of (c14-1 / laugh-01
                       :ARG0 (c14-2 / i)
                       :manner (c14-3 / loud)))

# ::snt . I respect everyone, untill they show disrespect to me or others..
# ::tokens [".", "I", "respect", "everyone", ",", "untill", "they", "show", "disrespect", "to", "me", "or", "others", ".."]
# ::lemmas [".", "i", "respect", "everyone", ",", "untill", "they", "show", "disrespect", "to", "i", "or", "other", ".."]
(c15-6 / respect-01
       :ARG0 (c15-4 / i)
       :ARG1 (c15-3 / everyone)
       :time (c15-1 / until
                    :op1 (c15-8 / show-01
                                :ARG0 c15-3
                                :ARG1 (c15-7 / disrespect-01
                                             :ARG0 c15-3
                                             :ARG1 (c15-2 / or
                                                          :op1 c15-4
                                                          :op2 (c15-5 / person
                                                                      :mod (c15-0 / other)))))))

# ::snt if u could just read this and show people what i have to say i'd be grateful
# ::tokens ["if", "u", "could", "just", "read", "this", "and", "show", "people", "what", "i", "have", "to", "say", "i", "'d", "be", "grateful"]
# ::lemmas ["if", "u", "could", "just", "read", "this", "and", "show", "people", "what", "i", "have", "to", "say", "i", "would", "be", "grateful"]
(c16-11 / appreciate-02
        :ARG0 (c16-4 / i)
        :condition (c16-5 / possible-01
                          :ARG1 (c16-3 / and
                                       :op1 (c16-6 / read-01
                                                   :ARG0 (c16-1 / you)
                                                   :ARG1 (c16-9 / this)
                                                   :mod (c16-0 / just))
                                       :op2 (c16-8 / show-01
                                                   :ARG0 c16-1
                                                   :ARG1 (c16-7 / thing
                                                                :ARG1-of (c16-2 / say-01
                                                                                :ARG0 c16-4))
                                                   :ARG2 (c16-10 / person)))))
