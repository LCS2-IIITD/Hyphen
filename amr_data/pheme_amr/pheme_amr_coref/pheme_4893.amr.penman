# ::snt yep, this says it all
# ::tokens ["yep", ",", "this", "says", "it", "all"]
# ::lemmas ["yep", ",", "this", "say", "it", "all"]
(c1-2 / say-01
      :ARG0 (c1-3 / this)
      :ARG1 (c1-1 / it
                  :mod (c1-4 / all))
      :mod (c1-0 / yep))

# ::snt I'm looking at the supposed original report now. That is how it appeared. But something's weird.
# ::tokens ["I", "'m", "looking", "at", "the", "supposed", "original", "report", "now", ".", "That", "is", "how", "it", "appeared", ".", "But", "something", "'s", "weird", "."]
# ::lemmas ["i", "be", "look", "at", "the", "suppose", "original", "report", "now", ".", "that", "be", "how", "it", "appear", ".", "but", "something", "be", "weird", "."]
(c2-2 / multi-sentence
      :snt1 (c2-1 / look-01
                  :ARG0 (c2-5 / i)
                  :ARG1 (c2-7 / report-01
                              :mod (c2-3 / original)
                              :ARG1-of (c2-10 / suppose-01))
                  :time (c2-6 / now))
      :snt2 (c2-12 / appear-01
                   :ARG1 (c2-9 / it)
                   :manner (c2-11 / that))
      :snt3 (c2-8 / contrast-01
                  :ARG2 (c2-0 / weird
                              :domain (c2-4 / something))))

# ::snt Ummmm, I'm guessing bc they realized they didn't have the right person? Just a guess.
# ::tokens ["Ummmm", ",", "I", "'m", "guessing", "bc", "they", "realized", "they", "did", "n't", "have", "the", "right", "person", "?", "Just", "a", "guess", "."]
# ::lemmas ["Ummmm", ",", "i", "be", "guess", "bc", "they", "realize", "they", "do", "not", "have", "the", "right", "person", "?", "just", "a", "guess", "."]
(c3-2 / multi-sentence
      :snt1 (c3-9 / guess-01
                  :ARG0 (c3-4 / i)
                  :ARG1 (c3-8 / cause-01
                              :ARG0 (c3-7 / realize-01
                                          :ARG0 (c3-11 / they)
                                          :ARG1 (c3-0 / have-03
                                                      :ARG0 c3-11
                                                      :ARG1 (c3-6 / person
                                                                  :ARG1-of (c3-5 / right-02))
                                                      :polarity -)))
                  :mod (c3-3 / umm
                             :mode expressive))
      :snt2 (c3-10 / guess-01
                   :ARG0 c3-4
                   :mod (c3-1 / just)))

# ::snt I'm reading the other pages, too
# ::tokens ["I", "'m", "reading", "the", "other", "pages", ",", "too"]
# ::lemmas ["i", "be", "read", "the", "other", "page", ",", "too"]
(c4-3 / read-01
      :ARG0 (c4-1 / i)
      :ARG1 (c4-2 / page
                  :mod (c4-0 / other))
      :mod (c4-4 / too))

# ::snt Hmm, good point, i'll un-retweet that until someone confirms it.
# ::tokens ["Hmm", ",", "good", "point", ",", "i", "'ll", "un", "-", "retweet", "that", "until", "someone", "confirms", "it", "."]
# ::lemmas ["hmm", ",", "good", "point", ",", "i", "'ll", "un", "-", "retweet", "that", "until", "someone", "confirm", "it", "."]
(c5-9 / and
      :op1 (c5-2 / point-04
                 :ARG1-of (c5-5 / good-02))
      :op2 (c5-3 / regret-01
                 :ARG0 (c5-1 / i)
                 :ARG1 (c5-8 / that)
                 :time (c5-0 / until
                             :op1 (c5-4 / confirm-01
                                        :ARG0 (c5-7 / someone)
                                        :ARG1 (c5-6 / it)))
                 :polarity -))

# ::snt Because they are LIARS.. Thing is not all cops are bad. But Ferguson's Police are clearly the worse!
# ::tokens ["Because", "they", "are", "LIARS", "..", "Thing", "is", "not", "all", "cops", "are", "bad", ".", "But", "Ferguson", "'s", "Police", "are", "clearly", "the", "worse", "!"]
# ::lemmas ["because", "they", "be", "LIARS", "..", "thing", "be", "not", "all", "cop", "be", "bad", ".", "but", "Ferguson", "'s", "Police", "be", "clearly", "the", "bad", "!"]
(c6-1 / multi-sentence
      :snt1 (c6-7 / cause-01
                  :ARG0 (c6-0 / lie-08
                              :ARG0 (c6-10 / they)))
      :snt2 (c6-3 / bad-07
                  :ARG1 (c6-6 / cop
                              :mod (c6-11 / all))
                  :polarity -)
      :snt3 (c6-9 / contrast-01
                  :ARG2 (c6-8 / bad-07
                              :ARG1 (c6-5 / police
                                          :poss (c6-12 / city
                                                       :name (c6-4 / name
                                                                   :op1 "Ferguson")))
                              :ARG1-of (c6-2 / clear-06))))

# ::snt not entirely sure because of the redacted sections though.
# ::tokens ["not", "entirely", "sure", "because", "of", "the", "redacted", "sections", "though", "."]
# ::lemmas ["not", "entirely", "sure", "because", "of", "the", "redacted", "section", "though", "."]
(c7-5 / sure-02
      :ARG1-of (c7-0 / have-concession-91)
      :degree (c7-2 / entire
                    :polarity -)
      :ARG1-of (c7-4 / cause-01
                     :ARG0 (c7-1 / section
                                 :ARG1-of (c7-3 / redraw-01))))

# ::snt maybe you ought to educate yourself on police procedures before insinuating things you know nothing about
# ::tokens ["maybe", "you", "ought", "to", "educate", "yourself", "on", "police", "procedures", "before", "insinuating", "things", "you", "know", "nothing", "about"]
# ::lemmas ["maybe", "you", "ought", "to", "educate", "yourself", "on", "police", "procedure", "before", "insinuate", "thing", "you", "know", "nothing", "about"]
(c8-7 / possible-01
      :ARG1 (c8-8 / recommend-01
                  :ARG1 (c8-3 / educate-01
                              :ARG0 (c8-0 / you
                                          :ARG1-of c8-3)
                              :ARG2 (c8-10 / procedure
                                           :mod (c8-1 / police))
                              :time (c8-2 / before
                                          :op1 (c8-4 / insinuate-01
                                                     :ARG0 c8-0
                                                     :ARG1 (c8-9 / thing
                                                                 :topic-of (c8-5 / know-01
                                                                                 :ARG0 c8-0
                                                                                 :ARG1 (c8-6 / nothing))))))))

# ::snt from the report, it appears they didn't figure out the robbery suspect was Brown for days possibly.
# ::tokens ["from", "the", "report", ",", "it", "appears", "they", "did", "n't", "figure", "out", "the", "robbery", "suspect", "was", "Brown", "for", "days", "possibly", "."]
# ::lemmas ["from", "the", "report", ",", "it", "appear", "they", "do", "not", "figure", "out", "the", "robbery", "suspect", "be", "Brown", "for", "days", "possibly", "."]
(c9-11 / appear-02
       :ARG1 (c9-0 / figure-out-05
                   :ARG0 (c9-9 / they)
                   :ARG1 (c9-4 / person
                               :name (c9-3 / name
                                           :op1 "Brown")
                               :ARG2-of (c9-8 / suspect-01
                                              :ARG1 (c9-5 / rob-01)))
                   :duration (c9-1 / multiple
                                   :op1 (c9-7 / temporal-quantity
                                              :unit (c9-6 / day)
                                              :quant 1)
                                   :ARG1-of (c9-10 / possible-01))
                   :polarity -)
       :source (c9-2 / report))

# ::snt they didn't know they already got the thief.
# ::tokens ["they", "did", "n't", "know", "they", "already", "got", "the", "thief", "."]
# ::lemmas ["they", "do", "not", "know", "they", "already", "get", "the", "thief", "."]
(c10-0 / know-01
       :ARG0 (c10-4 / they)
       :ARG1 (c10-2 / get-01
                    :ARG0 c10-4
                    :ARG1 (c10-1 / person
                                 :ARG0-of (c10-3 / steal-01))
                    :time (c10-5 / already))
       :polarity -)

# ::snt the earlier time if that's what it was. So tweet was legit.
# ::tokens ["the", "earlier", "time", "if", "that", "'s", "what", "it", "was", ".", "So", "tweet", "was", "legit", "."]
# ::lemmas ["the", "early", "time", "if", "that", "be", "what", "it", "be", ".", "so", "tweet", "be", "legit", "."]
(c11-2 / multi-sentence
       :snt1 (c11-0 / have-condition-91
                    :ARG2 (c11-4 / exist-01
                                 :ARG1 (c11-5 / it)
                                 :time (c11-3 / before)))
       :snt2 (c11-6 / cause-01
                    :ARG1 (c11-1 / legit-02
                                 :ARG1 (c11-7 / tweet-01))))

# ::snt Looks like they just left the call open because of the shooting. Then went back to close the call at :54 &amp; added the comment
# ::tokens ["Looks", "like", "they", "just", "left", "the", "call", "open", "because", "of", "the", "shooting", ".", "Then", "went", "back", "to", "close", "the", "call", "at", ":", "54", "&", "amp", ";", "added", "the", "comment"]
# ::lemmas ["look", "like", "they", "just", "leave", "the", "call", "open", "because", "of", "the", "shooting", ".", "then", "go", "back", "to", "close", "the", "call", "at", ":", "54", "&", "amp", ";", "add", "the", "comment"]
(c12-2 / multi-sentence
       :snt1 (c12-1 / look-02
                    :ARG1 (c12-11 / leave-13
                                  :ARG0 (c12-15 / they)
                                  :ARG1 (c12-4 / open-09
                                               :ARG1 (c12-9 / call-02))
                                  :ARG1-of (c12-8 / cause-01
                                                  :ARG0 (c12-12 / shoot-02))
                                  :mod (c12-0 / just)))
       :snt2 (c12-16 / and
                     :op1 (c12-10 / go-back-19
                                  :ARG1 (c12-7 / i)
                                  :purpose (c12-13 / close-01
                                                   :ARG0 c12-7
                                                   :ARG1 (c12-17 / call-02)
                                                   :time (c12-5 / string-entity
                                                                :value ":54&amp"))
                                  :time (c12-14 / then))
                     :op2 (c12-6 / add-02
                                 :ARG0 c12-7
                                 :ARG1 (c12-3 / comment-01))))

# ::snt not sure if they were adding a comment made at that time, or adding a comment from earlier. Although they should have noted
# ::tokens ["not", "sure", "if", "they", "were", "adding", "a", "comment", "made", "at", "that", "time", ",", "or", "adding", "a", "comment", "from", "earlier", ".", "Although", "they", "should", "have", "noted"]
# ::lemmas ["not", "sure", "if", "they", "be", "add", "a", "comment", "make", "at", "that", "time", ",", "or", "add", "a", "comment", "from", "early", ".", "although", "they", "should", "have", "note"]
(c13-1 / multi-sentence
       :snt1 (c13-15 / sure-02
                     :ARG0 (c13-6 / i)
                     :ARG1 (c13-3 / or
                                  :op1 (c13-17 / add-02
                                               :ARG0 (c13-16 / they)
                                               :ARG1 (c13-12 / comment-01
                                                             :ARG0 c13-16
                                                             :time (c13-14 / time
                                                                           :mod (c13-9 / that))))
                                  :op2 (c13-5 / add-02
                                              :ARG0 c13-16
                                              :ARG1 (c13-11 / comment-01
                                                            :ARG0 (c13-4 / they)
                                                            :time (c13-2 / before
                                                                         :op1 (c13-8 / now)))))
                     :polarity -)
       :snt2 (c13-0 / have-concession-91
                    :ARG2 (c13-13 / recommend-01
                                  :ARG1 (c13-10 / note-01
                                                :ARG0 (c13-7 / they)))))

# ::snt Ah, I see, thanks for checking into it, I appreciate your doing the research to get the facts.
# ::tokens ["Ah", ",", "I", "see", ",", "thanks", "for", "checking", "into", "it", ",", "I", "appreciate", "your", "doing", "the", "research", "to", "get", "the", "facts", "."]
# ::lemmas ["ah", ",", "i", "see", ",", "thank", "for", "check", "into", "it", ",", "i", "appreciate", "your", "do", "the", "research", "to", "get", "the", "fact", "."]
(c14-11 / and
        :op1 (c14-9 / see-01
                    :ARG0 (c14-3 / i)
                    :mod (c14-2 / ah
                                :mode expressive))
        :op2 (c14-10 / thank-01
                     :ARG0 c14-3
                     :ARG1 (c14-0 / you)
                     :ARG2 (c14-6 / check-into-11
                                  :ARG0 c14-0
                                  :ARG1 (c14-7 / it)))
        :op3 (c14-4 / appreciate-02
                    :ARG0 c14-3
                    :ARG1 (c14-5 / research-01
                                 :ARG0 c14-0
                                 :purpose (c14-8 / get-01
                                                 :ARG0 c14-0
                                                 :ARG1 (c14-1 / fact)))))

# ::snt Boom RT Why was PD still looking for the suspect hours after Michael Brown had been killed?
# ::tokens ["Boom", "RT", "Why", "was", "PD", "still", "looking", "for", "the", "suspect", "hours", "after", "Michael", "Brown", "had", "been", "killed", "?"]
# ::lemmas ["boom", "RT", "why", "be", "PD", "still", "look", "for", "the", "suspect", "hours", "after", "Michael", "Brown", "have", "be", "kill", "?"]
(c15-5 / ask-01
       :ARG0 (c15-15 / i)
       :ARG1 (c15-17 / cause-01
                     :ARG0 (c15-14 / amr-unknown)
                     :ARG1 (c15-7 / look-01
                                  :ARG0 (c15-2 / department
                                               :mod (c15-1 / police))
                                  :ARG1 (c15-4 / person
                                               :ARG2-of (c15-3 / suspect-01))
                                  :mod (c15-10 / still)
                                  :time (c15-12 / after
                                                :op1 (c15-16 / kill-01
                                                             :ARG1 (c15-8 / person
                                                                          :name (c15-11 / name
                                                                                        :op1 "Michael"
                                                                                        :op2 "Brown")))
                                                :quant (c15-0 / multiple
                                                              :op1 (c15-18 / temporal-quantity
                                                                           :unit (c15-6 / hour)
                                                                           :quant 1))))
                     :mod (c15-9 / boom
                                 :mode expressive))
       :ARG2 (c15-13 / person
                     :name c15-11
                     :op1 "RT"))
