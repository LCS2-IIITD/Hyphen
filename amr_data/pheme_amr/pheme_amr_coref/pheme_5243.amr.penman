# ::snt Names of crew are nowhere to be found. Release them now.
# ::tokens ["Names", "of", "crew", "are", "nowhere", "to", "be", "found", ".", "Release", "them", "now", "."]
# ::lemmas ["name", "of", "crew", "be", "nowhere", "to", "be", "find", ".", "release", "they", "now", "."]
(c1-2 / multi-sentence
      :snt1 (c1-1 / find-01
                  :ARG1 (c1-9 / thing
                              :ARG2-of (c1-3 / name-01
                                             :ARG1 (c1-7 / crew)))
                  :location (c1-4 / nowhere)
                  :polarity -)
      :snt2 (c1-6 / release-01
                  :ARG0 (c1-0 / you)
                  :ARG1 (c1-8 / they)
                  :time (c1-5 / now)
                  :mode imperative))

# ::snt according to atatistics flying is the safest form of travel however the impact of mass corpses is a deterrent
# ::tokens ["according", "to", "atatistics", "flying", "is", "the", "safest", "form", "of", "travel", "however", "the", "impact", "of", "mass", "corpses", "is", "a", "deterrent"]
# ::lemmas ["accord", "to", "atatistic", "fly", "be", "the", "safe", "form", "of", "travel", "however", "the", "impact", "of", "mass", "corpse", "be", "a", "deterrent"]
(c2-10 / say-01
       :ARG0 (c2-8 / company
                   :name (c2-5 / name
                               :op1 "Atatistics"
                               :op2 "Fly"))
       :ARG1 (c2-0 / have-concession-91
                   :ARG1 (c2-7 / deter-01
                               :ARG0 (c2-4 / impact-02
                                           :ARG0 (c2-9 / corpse
                                                       :mod (c2-2 / mass))))
                   :ARG2 (c2-3 / safe-01
                               :ARG0 (c2-1 / form
                                           :mod (c2-11 / travel-01)
                                           :domain c2-1)
                               :ARG2-of (c2-12 / have-degree-91
                                               :ARG1 c2-1
                                               :ARG3 (c2-6 / most)))))

# ::snt : scary times bc I fly quite often. Safest form of travel ?
# ::tokens [":", "scary", "times", "bc", "I", "fly", "quite", "often", ".", "Safest", "form", "of", "travel", "?"]
# ::lemmas [":", "scary", "time", "bc", "i", "fly", "quite", "often", ".", "safest", "form", "of", "travel", "?"]
(c3-2 / multi-sentence
      :snt1 (c3-9 / cause-01
                  :ARG0 (c3-1 / fly-01
                              :ARG1 (c3-6 / i)
                              :frequency (c3-3 / often
                                               :degree (c3-5 / quite)))
                  :ARG1 (c3-12 / time
                               :ARG0-of (c3-11 / scary-03)))
      :snt2 (c3-7 / form
                  :polarity (c3-13 / amr-unknown)
                  :mod (c3-10 / travel-01)
                  :ARG1-of (c3-0 / have-degree-91
                                 :ARG2 (c3-4 / safe-01)
                                 :ARG3 (c3-8 / most))))

# ::snt was the pilot in cockpit a muslim ?
# ::tokens ["was", "the", "pilot", "in", "cockpit", "a", "muslim", "?"]
# ::lemmas ["be", "the", "pilot", "in", "cockpit", "a", "muslim", "?"]
(c4-2 / person
      :polarity (c4-6 / amr-unknown)
      :mod (c4-3 / religious-group
                 :name (c4-1 / name
                             :op1 "Muslim"))
      :domain (c4-5 / person
                    :ARG0-of (c4-0 / pilot-01
                                   :location (c4-4 / cockpit))))

# ::snt holy cow
# ::tokens ["holy", "cow"]
# ::lemmas ["holy", "cow"]
(c5-1 / cow
      :mod (c5-0 / holy)
      :mode expressive)

# ::snt CNN are you making up stories again?
# ::tokens ["CNN", "are", "you", "making", "up", "stories", "again", "?"]
# ::lemmas ["CNN", "be", "you", "make", "up", "story", "again", "?"]
(c6-1 / make-up-10
      :ARG0 (c6-0 / you)
      :ARG1 (c6-5 / story)
      :polarity (c6-6 / amr-unknown)
      :mod (c6-2 / again)
      :medium (c6-4 / publication
                    :name (c6-3 / name
                                :op1 "CNN")))

# ::snt Uh oh. : BREAKING reporting one pilot on locked out of cockpit. Crash as an accident now called into doubt
# ::tokens ["Uh", "oh", ".", ":", "BREAKING", "reporting", "one", "pilot", "on", "locked", "out", "of", "cockpit", ".", "Crash", "as", "an", "accident", "now", "called", "into", "doubt"]
# ::lemmas ["uh", "oh", ".", ":", "breaking", "report", "one", "pilot", "on", "lock", "out", "of", "cockpit", ".", "crash", "as", "an", "accident", "now", "call", "into", "doubt"]
(c7-1 / multi-sentence
      :snt1 (c7-2 / uh-oh
                  :mode expressive)
      :snt2 (c7-7 / report-01
                  :ARG1 (c7-0 / lock-01
                              :ARG1 (c7-6 / person
                                          :ARG0-of (c7-12 / pilot-01)
                                          :quant 1)
                              :ARG2 (c7-4 / out-06
                                          :ARG1 c7-6
                                          :ARG2 (c7-8 / cockpit)))
                  :ARG1-of (c7-3 / break-13))
      :snt3 (c7-9 / call-03
                  :ARG1 (c7-11 / crash-01
                               :mod (c7-13 / accident))
                  :ARG2 (c7-10 / doubt-01
                               :ARG1 c7-11)
                  :time (c7-5 / now)))

# ::snt don't afraid Chris.Death is not accident it is about time !! But,make sure you Enjoy every single day.We love u.
# ::tokens ["do", "n't", "afraid", "Chris", ".", "Death", "is", "not", "accident", "it", "is", "about", "time", "!", "!", "But", ",", "make", "sure", "you", "Enjoy", "every", "single", "day", ".", "We", "love", "u."]
# ::lemmas ["do", "not", "afraid", "Chris", ".", "death", "be", "not", "accident", "it", "be", "about", "time", "!", "!", "but", ",", "make", "sure", "you", "enjoy", "every", "single", "day", ".", "we", "love", "u."]
(c8-1 / multi-sentence
      :snt1 (c8-5 / say-01
                  :ARG0 (c8-15 / i)
                  :ARG1 (c8-7 / fear-01
                              :ARG0 c8-15
                              :polarity -)
                  :ARG2 (c8-2 / person
                              :name (c8-12 / name
                                           :op1 "Chris")))
      :snt2 (c8-18 / contrast-01
                   :ARG1 (c8-6 / accident
                               :domain (c8-3 / die-01)
                               :ARG1-of (c8-4 / cause-01
                                              :ARG0 (c8-14 / about-time))
                               :polarity -)
                   :ARG2 (c8-10 / ensure-01
                                :ARG0 (c8-16 / you)
                                :ARG1 (c8-9 / enjoy-01
                                            :ARG0 c8-16
                                            :ARG1 (c8-0 / day
                                                        :mod (c8-17 / every)
                                                        :ARG1-of (c8-11 / single-02)))
                                :mode imperative))
      :snt3 (c8-8 / love-01
                  :ARG0 (c8-13 / we)
                  :ARG1 c8-16))

# ::snt trouble is we'll never get the real story.. Only what the WH thinks we should believe.. About done w/news
# ::tokens ["trouble", "is", "we", "'ll", "never", "get", "the", "real", "story", "..", "Only", "what", "the", "WH", "thinks", "we", "should", "believe", "..", "About", "done", "w", "/", "news"]
# ::lemmas ["trouble", "be", "we", "'ll", "never", "get", "the", "real", "story", "..", "only", "what", "the", "WH", "think", "we", "should", "believe", "..", "about", "do", "w", "/", "news"]
(c9-1 / multi-sentence
      :snt1 (c9-16 / tough-02
                   :ARG1 (c9-11 / get-01
                                :ARG0 (c9-0 / we)
                                :ARG1 (c9-14 / story
                                             :ARG1-of (c9-9 / real-04))
                                :time (c9-4 / ever)
                                :polarity -))
      :snt2 (c9-13 / thing
                   :ARG1-of (c9-2 / believe-01
                                  :ARG0 (c9-5 / we)
                                  :ARG1-of (c9-6 / recommend-01
                                                 :ARG2 c9-5)
                                  :mod (c9-3 / only))
                   :ARG1-of (c9-7 / think-01
                                  :ARG0 (c9-10 / government-organization
                                               :name (c9-8 / name
                                                           :op1 "White"
                                                           :op2 "House"))))
      :snt3 (c9-12 / be-done-08
                   :ARG1 (c9-17 / about)
                   :topic (c9-15 / news)))

# ::snt scary times bc I fly quite often.
# ::tokens ["scary", "times", "bc", "I", "fly", "quite", "often", "."]
# ::lemmas ["scary", "time", "bc", "i", "fly", "quite", "often", "."]
(c10-4 / cause-01
       :ARG0 (c10-0 / fly-01
                    :ARG1 (c10-3 / i)
                    :frequency (c10-1 / often
                                      :degree (c10-2 / quite)))
       :ARG1 (c10-6 / time
                    :ARG0-of (c10-5 / scary-03)))

# ::snt Good question. That procedure would make sense.
# ::tokens ["Good", "question", ".", "That", "procedure", "would", "make", "sense", "."]
# ::lemmas ["good", "question", ".", "that", "procedure", "would", "make", "sense", "."]
(c11-0 / multi-sentence
       :snt1 (c11-1 / question-01
                    :ARG1-of (c11-3 / good-02))
       :snt2 (c11-4 / sense-02
                    :ARG1 (c11-2 / procedure
                                 :mod (c11-5 / that))))

# ::snt Troubling to say the least...
# ::tokens ["Troubling", "to", "say", "the", "least", "..."]
# ::lemmas ["troubling", "to", "say", "the", "least", "..."]
(c12-2 / tough-02
       :ARG1-of (c12-0 / say-01
                       :mod (c12-1 / least)))

# ::snt don't expect to admit that even if true
# ::tokens ["do", "n't", "expect", "to", "admit", "that", "even", "if", "true"]
# ::lemmas ["do", "not", "expect", "to", "admit", "that", "even", "if", "true"]
(c13-2 / expect-01
       :ARG0 (c13-0 / you)
       :ARG1 (c13-5 / admit-01
                    :ARG0 c13-0
                    :ARG1 (c13-4 / that)
                    :concession (c13-1 / even-if
                                       :op1 (c13-3 / true-01
                                                   :ARG1 c13-4)))
       :polarity -
       :mode imperative)

# ::snt Why? Don't they lock the door when they leave cockpit? Remaining pilot could have become incapacitated.
# ::tokens ["Why", "?", "Do", "n't", "they", "lock", "the", "door", "when", "they", "leave", "cockpit", "?", "Remaining", "pilot", "could", "have", "become", "incapacitated", "."]
# ::lemmas ["why", "?", "do", "not", "they", "lock", "the", "door", "when", "they", "leave", "cockpit", "?", "remain", "pilot", "could", "have", "become", "incapacitate", "."]
(c14-1 / multi-sentence
       :snt1 (c14-7 / cause-01
                    :ARG0 (c14-13 / amr-unknown))
       :snt2 (c14-0 / lock-01
                    :ARG0 (c14-11 / they)
                    :ARG1 (c14-6 / door)
                    :time (c14-9 / leave-11
                                 :ARG0 (c14-10 / they)
                                 :ARG1 (c14-8 / cockpit))
                    :polarity -
                    :mode imperative)
       :snt3 (c14-5 / possible-01
                    :ARG1 (c14-3 / become-01
                                 :ARG1 (c14-12 / person
                                               :ARG0-of (c14-2 / pilot-01))
                                 :ARG2 (c14-4 / incapacitate-01
                                              :ARG1 c14-2))))

# ::snt and I'm no expert but wouldn't they also be able to hear if it was a heart attack, the guy making noise?
# ::tokens ["and", "I", "'m", "no", "expert", "but", "would", "n't", "they", "also", "be", "able", "to", "hear", "if", "it", "was", "a", "heart", "attack", ",", "the", "guy", "making", "noise", "?"]
# ::lemmas ["and", "i", "be", "no", "expert", "but", "would", "not", "they", "also", "be", "able", "to", "hear", "if", "it", "be", "a", "heart", "attack", ",", "the", "guy", "make", "noise", "?"]
(c15-13 / and
        :op2 (c15-9 / contrast-01
                    :ARG1 (c15-3 / expert-01
                                 :ARG1 (c15-5 / i)
                                 :polarity -)
                    :ARG2 (c15-8 / possible-01
                                 :ARG1 (c15-0 / hear-01
                                              :ARG0 (c15-12 / they)
                                              :ARG1 (c15-4 / and
                                                           :op1 (c15-1 / heart-attack)
                                                           :op2 (c15-2 / make-01
                                                                       :ARG0 (c15-10 / guy)
                                                                       :ARG1 (c15-6 / noise))
                                                           :condition c15-1))
                                 :mod (c15-7 / also)
                                 :polarity (c15-11 / amr-unknown))))

# ::snt safe
# ::tokens ["safe"]
# ::lemmas ["safe"]
(c16-0 / safe-01)

# ::snt Doesn't someone from crew have to go in if pilot goes out?
# ::tokens ["Does", "n't", "someone", "from", "crew", "have", "to", "go", "in", "if", "pilot", "goes", "out", "?"]
# ::lemmas ["do", "not", "someone", "from", "crew", "have", "to", "go", "in", "if", "pilot", "go", "out", "?"]
(c17-3 / obligate-01
       :ARG1 (c17-10 / someone
                     :ARG0-of (c17-0 / have-org-role-91
                                     :ARG1 (c17-7 / crew)
                                     :ARG2 (c17-2 / member)))
       :ARG2 (c17-8 / go-01
                    :ARG1 c17-10
                    :direction (c17-4 / inside))
       :condition (c17-6 / go-01
                         :ARG1 (c17-5 / person
                                      :ARG0-of (c17-11 / pilot-01))
                         :direction (c17-1 / out))
       :ARG1-of (c17-9 / request-confirmation-91)
       :polarity -)

# ::snt Names of crew are nowhere to be found. Release them now.
# ::tokens ["Names", "of", "crew", "are", "nowhere", "to", "be", "found", ".", "Release", "them", "now", "."]
# ::lemmas ["name", "of", "crew", "be", "nowhere", "to", "be", "find", ".", "release", "they", "now", "."]
(c18-2 / multi-sentence
       :snt1 (c18-1 / find-01
                    :ARG1 (c18-9 / thing
                                 :ARG2-of (c18-3 / name-01
                                                 :ARG1 (c18-7 / crew)))
                    :location (c18-4 / nowhere)
                    :polarity -)
       :snt2 (c18-6 / release-01
                    :ARG0 (c18-0 / you)
                    :ARG1 (c18-8 / they)
                    :time (c18-5 / now)
                    :mode imperative))

# ::snt " shocking " chris ! Think it's a MUSLIM terrorist???
# ::tokens ["\"", "shocking", "\"", "chris", "!", "Think", "it", "'s", "a", "MUSLIM", "terrorist", "?", "?", "?"]
# ::lemmas ["\"", "shocking", "\"", "chris", "!", "think", "it", "be", "a", "MUSLIM", "terrorist", "?", "?", "?"]
(c19-0 / multi-sentence
       :snt1 (c19-7 / shock-01
                    :mode expressive)
       :snt2 (c19-8 / think-01
                    :ARG0 (c19-4 / person
                                 :name (c19-2 / name
                                              :op1 "Chris"))
                    :ARG1 (c19-6 / terrorist
                                 :mod (c19-5 / religious-group
                                             :name (c19-3 / name
                                                          :op1 "Islam"))
                                 :domain (c19-1 / it))
                    :polarity (c19-9 / amr-unknown)))

# ::snt NO, it is NOT. I don't fly anymore.
# ::tokens ["NO", ",", "it", "is", "NOT", ".", "I", "do", "n't", "fly", "anymore", "."]
# ::lemmas ["no", ",", "it", "be", "not", ".", "i", "do", "not", "fly", "anymore", "."]
(c20-1 / multi-sentence
       :snt1 (c20-3 / no)
       :snt2 (c20-0 / fly-01
                    :ARG1 (c20-2 / i)
                    :time (c20-4 / anymore)
                    :polarity -))

# ::snt and we all pray for you !! Relax you are in good hand.God be with you every step of your life brother!!Peace
# ::tokens ["and", "we", "all", "pray", "for", "you", "!", "!", "Relax", "you", "are", "in", "good", "hand", ".", "God", "be", "with", "you", "every", "step", "of", "your", "life", "brother!!Peace"]
# ::lemmas ["and", "we", "all", "pray", "for", "you", "!", "!", "relax", "you", "be", "in", "good", "hand", ".", "God", "be", "with", "you", "every", "step", "of", "your", "life", "brother!!peace"]
(c21-4 / multi-sentence
       :snt1 (c21-16 / and
                     :op2 (c21-10 / pray-01
                                  :ARG0 (c21-1 / we
                                               :mod (c21-8 / all))
                                  :beneficiary (c21-2 / you)))
       :snt2 (c21-11 / relax-01
                     :ARG1 (c21-13 / you
                                   :part (c21-0 / hand
                                                :ARG1-of (c21-12 / good-02)))
                     :mode imperative)
       :snt3 (c21-6 / be-with-10
                    :ARG0 (c21-15 / person
                                  :name (c21-9 / name
                                               :op1 "God"))
                    :ARG1 c21-13
                    :time (c21-7 / every
                                 :op1 (c21-14 / step-01
                                              :ARG2 (c21-3 / life
                                                           :poss c21-13)))
                    :mode expressive)
       :snt4 (c21-5 / peace))

# ::snt could have had a heart attack??
# ::tokens ["could", "have", "had", "a", "heart", "attack", "?", "?"]
# ::lemmas ["could", "have", "have", "a", "heart", "attack", "?", "?"]
(c22-1 / possible-01
       :polarity (c22-2 / amr-unknown)
       :ARG1 (c22-0 / heart-attack))
