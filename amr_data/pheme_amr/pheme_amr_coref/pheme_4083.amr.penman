# ::snt Good luck, French police. Save the hostage. Kill the jihadis slowly. Using knives with fresh pig blood.
# ::tokens ["Good", "luck", ",", "French", "police", ".", "Save", "the", "hostage", ".", "Kill", "the", "jihadis", "slowly", ".", "Using", "knives", "with", "fresh", "pig", "blood", "."]
# ::lemmas ["good", "luck", ",", "French", "police", ".", "save", "the", "hostage", ".", "kill", "the", "jihadi", "slowly", ".", "use", "knife", "with", "fresh", "pig", "blood", "."]
(c1-4 / multi-sentence
      :snt1 (c1-15 / say-01
                   :ARG1 (c1-3 / luck
                               :ARG1-of (c1-14 / good-02))
                   :ARG2 (c1-12 / police
                                :mod (c1-13 / country
                                            :name (c1-11 / name
                                                         :op1 "France"))))
      :snt2 (c1-9 / save-01
                  :ARG0 (c1-1 / you)
                  :ARG1 (c1-0 / hostage)
                  :mode imperative)
      :snt3 (c1-16 / kill-01
                   :ARG0 c1-1
                   :ARG1 (c1-2 / jihadi)
                   :ARG1-of (c1-5 / slow-05)
                   :mode imperative)
      :snt4 (c1-6 / use-01
                  :ARG0 c1-1
                  :ARG1 (c1-10 / knife)
                  :ARG2 (c1-7 / blood
                              :source (c1-17 / pig
                                             :ARG1-of (c1-8 / fresh-04)))
                  :mode imperative))

# ::snt That's right and until they all suffer there's no incentive for them to turn in the bad ones.
# ::tokens ["That", "'s", "right", "and", "until", "they", "all", "suffer", "there", "'s", "no", "incentive", "for", "them", "to", "turn", "in", "the", "bad", "ones", "."]
# ::lemmas ["that", "be", "right", "and", "until", "you", "all", "suffer", "there", "be", "no", "incentive", "for", "they", "to", "turn", "in", "the", "bad", "one", "."]
(c2-10 / and
       :op1 (c2-6 / right-06
                  :ARG2 (c2-9 / that))
       :op2 (c2-4 / incentivize-01
                  :ARG1 (c2-7 / they
                              :mod (c2-3 / all))
                  :ARG2 (c2-5 / turn-in-22
                              :ARG0 c2-7
                              :ARG1 (c2-2 / thing
                                          :ARG1-of (c2-1 / bad-07)))
                  :time (c2-0 / until
                              :op1 (c2-8 / suffer-01
                                         :ARG0 c2-7))
                  :polarity -))

# ::snt bet Fox will treat this criminal even in a 'Fair and Impartial' way! NOT! If it involves criminal Muslims Fox are on it like FOS!
# ::tokens ["bet", "Fox", "will", "treat", "this", "criminal", "even", "in", "a", "'", "Fair", "and", "Impartial", "'", "way", "!", "NOT", "!", "If", "it", "involves", "criminal", "Muslims", "Fox", "are", "on", "it", "like", "FOS", "!"]
# ::lemmas ["bet", "Fox", "will", "treat", "this", "criminal", "even", "in", "a", "'", "fair", "and", "Impartial", "'", "way", "!", "not", "!", "if", "it", "involve", "criminal", "Muslims", "Fox", "be", "on", "it", "like", "FOS", "!"]
(c3-0 / multi-sentence
      :snt1 (c3-20 / contrast-01
                   :ARG1 (c3-10 / bet-01
                                :ARG2 (c3-21 / treat-01
                                             :ARG0 (c3-17 / broadcast-program
                                                          :name (c3-12 / name
                                                                       :op1 "Fox"))
                                             :ARG1 (c3-4 / person
                                                         :ARG2-of (c3-5 / criminal-03)
                                                         :mod (c3-13 / religious-group
                                                                     :name (c3-19 / name
                                                                                  :op1 "Islam")))
                                             :ARG2 (c3-15 / way
                                                          :ARG1-of (c3-8 / fair-01)
                                                          :ARG1-of (c3-6 / partial-01
                                                                         :polarity -))
                                             :mod (c3-11 / even)))
                   :ARG2 (c3-7 / have-polarity-91
                               :ARG2 -))
      :snt2 c3-17
      :name (c3-2 / name
                  :op1 "Fox")
      :condition (c3-16 / involve-01
                        :ARG1 (c3-9 / person
                                    :mod c3-13
                                    :ARG2-of c3-5))
      :ARG2 (c3-18 / it)
      :ARG1-of (c3-1 / resemble-01
                     :ARG2 (c3-14 / person
                                  :name (c3-3 / name
                                              :op1 "FOS"))))

# ::snt : French police in standoff with suspects, hostage believed taken.
# ::tokens [":", "French", "police", "in", "standoff", "with", "suspects", ",", "hostage", "believed", "taken", "."]
# ::lemmas [":", "French", "police", "in", "standoff", "with", "suspect", ",", "hostage", "believe", "take", "."]
(c4-6 / standoff
      :consist-of (c4-9 / and
                        :op1 (c4-4 / person
                                   :ARG2-of (c4-2 / suspect-01))
                        :op2 (c4-0 / hostage
                                   :ARG1-of (c4-7 / take-01
                                                  :ARG1-of (c4-1 / believe-01))))
      :domain (c4-8 / police
                    :mod (c4-5 / country
                               :name (c4-3 / name
                                           :op1 "France"))))

# ::snt This seems a little too easy. These guys could have disappeared of they wanted to....that, or I watch too much Homeland.
# ::tokens ["This", "seems", "a", "little", "too", "easy", ".", "These", "guys", "could", "have", "disappeared", "of", "they", "wanted", "to", "....", "that", ",", "or", "I", "watch", "too", "much", "Homeland", "."]
# ::lemmas ["this", "seem", "a", "little", "too", "easy", ".", "these", "guy", "could", "have", "disappear", "of", "they", "want", "to", "....", "that", ",", "or", "i", "watch", "too", "much", "Homeland", "."]
(c5-1 / multi-sentence
      :snt1 (c5-5 / seem-01
                  :ARG1 (c5-10 / easy-05
                               :ARG1 (c5-21 / this)
                               :ARG2-of (c5-7 / have-degree-91
                                              :ARG1 c5-21
                                              :ARG3 (c5-20 / too
                                                           :quant (c5-8 / little)))))
      :snt2 (c5-17 / or
                   :op1 (c5-3 / possible-01
                              :ARG1 (c5-4 / disappear-01
                                          :ARG1 (c5-13 / guy
                                                       :mod (c5-16 / this))
                                          :ARG1-of (c5-19 / cause-01
                                                          :ARG0 (c5-14 / want-01
                                                                       :ARG0 c5-13
                                                                       :ARG1 (c5-0 / disappear-01
                                                                                   :ARG1 c5-13)))))
                   :op2 (c5-2 / watch-01
                              :ARG0 (c5-15 / i)
                              :ARG1 (c5-9 / broadcast-program
                                          :name (c5-11 / name
                                                       :op1 "Homeland")
                                          :ARG1-of (c5-6 / have-quant-91
                                                         :ARG2 (c5-12 / much)
                                                         :ARG3 (c5-18 / too))))))

# ::snt Another bloodshed I foresee... Another life or lives loss.. Sad
# ::tokens ["Another", "bloodshed", "I", "foresee", "...", "Another", "life", "or", "lives", "loss", "..", "Sad"]
# ::lemmas ["another", "bloodshed", "i", "foresee", "...", "another", "life", "or", "life", "loss", "..", "sad"]
(c6-2 / multi-sentence
      :snt1 (c6-1 / foresee-01
                  :ARG0 (c6-7 / i)
                  :ARG1 (c6-4 / bloodshed
                              :mod (c6-10 / another)))
      :snt2 (c6-3 / lose-02
                  :ARG1 (c6-5 / or
                              :op1 (c6-8 / life)
                              :op2 (c6-0 / life))
                  :mod (c6-6 / another))
      :ARG0-of (c6-9 / sad-02))

# ::snt This problem will never go away until the world starts treating ALL Muslims as terrorists. Stop coddling them now !!!
# ::tokens ["This", "problem", "will", "never", "go", "away", "until", "the", "world", "starts", "treating", "ALL", "Muslims", "as", "terrorists", ".", "Stop", "coddling", "them", "now", "!", "!", "!"]
# ::lemmas ["this", "problem", "will", "never", "go", "away", "until", "the", "world", "start", "treat", "all", "Muslims", "as", "terrorist", ".", "stop", "coddle", "they", "now", "!", "!", "!"]
(c7-0 / multi-sentence
      :snt1 (c7-9 / go-01
                  :ARG1 (c7-1 / problem
                              :mod (c7-19 / this))
                  :ARG4 (c7-4 / away)
                  :time (c7-5 / ever)
                  :time (c7-11 / until
                               :op1 (c7-2 / start-01
                                          :ARG0 (c7-10 / world)
                                          :ARG1 (c7-18 / treat-01
                                                       :ARG0 c7-10
                                                       :ARG1 (c7-3 / person
                                                                   :mod (c7-8 / religious-group
                                                                              :name (c7-7 / name
                                                                                          :op1 "Muslim"))
                                                                   :mod (c7-12 / all))
                                                       :ARG2 (c7-13 / terrorist))))
                  :polarity -)
      :snt2 (c7-6 / stop-01
                  :ARG0 (c7-14 / you)
                  :ARG1 (c7-17 / coddle-01
                               :ARG0 c7-14
                               :ARG1 (c7-15 / they))
                  :time (c7-16 / now)
                  :mode imperative))

# ::snt IN UKRAINE HAVE GIVEN THE NAZI COUP, SUPPORTED BY NATO AND MEDIA COMMUNICATION,AS SEE PHOTO...
# ::tokens ["IN", "UKRAINE", "HAVE", "GIVEN", "THE", "NAZI", "COUP", ",", "SUPPORTED", "BY", "NATO", "AND", "MEDIA", "COMMUNICATION", ",", "AS", "SEE", "PHOTO", "..."]
# ::lemmas ["in", "UKRAINE", "have", "give", "the", "NAZI", "COUP", ",", "support", "by", "NATO", "and", "MEDIA", "COMMUNICATION", ",", "as", "SEE", "PHOTO", "..."]
(c8-1 / multi-sentence
      :snt1 (c8-8 / give-01
                  :ARG0 (c8-7 / country
                              :name (c8-3 / name
                                          :op1 "UKRAINE"))
                  :ARG1 (c8-6 / cOUP
                              :mod (c8-5 / political-movement
                                         :name (c8-4 / name
                                                     :op1 "Nazi"))
                              :ARG1-of (c8-11 / support-01
                                              :ARG0 (c8-14 / and
                                                           :op1 (c8-9 / military
                                                                      :name (c8-10 / name
                                                                                   :op1 "NATO"))
                                                           :op2 (c8-12 / community
                                                                       :mod (c8-0 / media))))))
      :snt2 (c8-2 / see-01
                  :ARG1 (c8-13 / photograph-01)))

# ::snt I hope these animals die a slow and painful death.
# ::tokens ["I", "hope", "these", "animals", "die", "a", "slow", "and", "painful", "death", "."]
# ::lemmas ["i", "hope", "these", "animal", "die", "a", "slow", "and", "painful", "death", "."]
(c9-0 / hope-01
      :ARG0 (c9-1 / i)
      :ARG1 (c9-3 / die-01
                  :ARG1 (c9-6 / animal
                              :mod (c9-5 / this))
                  :manner c9-3
                  :ARG1 c9-6
                  :ARG1-of (c9-4 / slow-05)
                  :ARG0-of (c9-2 / pain-01)))

# ::snt French police in standoff, hostage believed taken latest
# ::tokens ["French", "police", "in", "standoff", ",", "hostage", "believed", "taken", "latest"]
# ::lemmas ["French", "police", "in", "standoff", ",", "hostage", "believe", "take", "latest"]
(c10-7 / and
       :op1 (c10-5 / standoff
                   :location (c10-4 / country
                                    :name (c10-3 / name
                                                 :op1 "France")))
       :op2 (c10-6 / take-01
                   :ARG1 (c10-0 / hostage)
                   :ARG1-of (c10-2 / believe-01)
                   :mod (c10-1 / last)))

# ::snt I hope the scum muslim terrorists get yrs solitary followed by US style "lethal" injection
# ::tokens ["I", "hope", "the", "scum", "muslim", "terrorists", "get", "yrs", "solitary", "followed", "by", "US", "style", "\"", "lethal", "\"", "injection"]
# ::lemmas ["i", "hope", "the", "scum", "muslim", "terrorist", "get", "yrs", "solitary", "follow", "by", "US", "style", "\"", "lethal", "\"", "injection"]
(c11-0 / hope-01
       :ARG0 (c11-7 / i)
       :ARG1 (c11-12 / isolate-01
                     :ARG1 (c11-15 / terrorist
                                   :mod (c11-10 / religious-group
                                                :name (c11-8 / name
                                                             :op1 "Islam"))
                                   :mod (c11-14 / scum))
                     :duration (c11-3 / multiple
                                      :op1 (c11-13 / temporal-quantity
                                                   :unit (c11-1 / year)
                                                   :quant 1))
                     :ARG2-of (c11-2 / follow-01
                                     :ARG1 (c11-4 / inject-01
                                                  :mod (c11-5 / lethal)
                                                  :mod (c11-6 / style
                                                              :mod (c11-11 / country
                                                                           :name (c11-9 / name
                                                                                        :op1 "US")))))))

# ::snt nevermind. They are simply staging nearby. Assault is likely imminent.
# ::tokens ["nevermind", ".", "They", "are", "simply", "staging", "nearby", ".", "Assault", "is", "likely", "imminent", "."]
# ::lemmas ["nevermind", ".", "they", "be", "simply", "stage", "nearby", ".", "assault", "be", "likely", "imminent", "."]
(c12-2 / multi-sentence
       :snt1 (c12-7 / mind-15
                    :ARG0 (c12-0 / you)
                    :time (c12-3 / ever)
                    :polarity -
                    :mode imperative)
       :snt2 (c12-8 / stage-01
                    :ARG0 (c12-9 / they)
                    :location (c12-6 / nearby)
                    :ARG1-of (c12-4 / simple-02))
       :snt3 (c12-1 / likely-01
                    :ARG1 (c12-5 / imminent
                                 :domain (c12-10 / assault-01))))

# ::snt They should fly a large copy of the cartoon in question atop the empire state building!
# ::tokens ["They", "should", "fly", "a", "large", "copy", "of", "the", "cartoon", "in", "question", "atop", "the", "empire", "state", "building", "!"]
# ::lemmas ["they", "should", "fly", "a", "large", "copy", "of", "the", "cartoon", "in", "question", "atop", "the", "empire", "state", "building", "!"]
(c13-7 / recommend-01
       :ARG1 (c13-0 / fly-01
                    :ARG0 (c13-9 / they)
                    :ARG2 (c13-6 / copy-01
                                 :ARG1 (c13-5 / cartoon
                                              :ARG1-of (c13-4 / question-01))
                                 :mod (c13-1 / large))
                    :location (c13-10 / atop
                                      :op1 (c13-2 / building
                                                  :mod (c13-8 / state
                                                              :mod (c13-3 / empire))))))

# ::snt like the idea of taking them alive for info, but then again some liberal lawyer will keep them silent oh no not again
# ::tokens ["like", "the", "idea", "of", "taking", "them", "alive", "for", "info", ",", "but", "then", "again", "some", "liberal", "lawyer", "will", "keep", "them", "silent", "oh", "no", "not", "again"]
# ::lemmas ["like", "the", "idea", "of", "take", "they", "alive", "for", "info", ",", "but", "then", "again", "some", "liberal", "lawyer", "will", "keep", "they", "silent", "oh", "no", "not", "again"]
(c14-8 / contrast-01
       :ARG1 (c14-4 / idea
                    :topic (c14-12 / take-01
                                   :ARG1 (c14-10 / they)
                                   :ARG3 (c14-1 / live-01
                                                :ARG0 c14-10)
                                   :purpose (c14-9 / information)))
       :ARG2 (c14-5 / keep-02
                    :ARG0 (c14-7 / lawyer
                                 :ARG1-of (c14-0 / liberal-02)
                                 :mod (c14-11 / some))
                    :ARG1 (c14-3 / silent
                                 :domain c14-10)
                    :mod (c14-13 / again
                                 :mod (c14-6 / then))
                    :mod (c14-2 / oh-no
                                :mode expressive)))

# ::snt Ambulances have arrived on scene. Zero chance they are let into an active scene. This is likely over at this point.
# ::tokens ["Ambulances", "have", "arrived", "on", "scene", ".", "Zero", "chance", "they", "are", "let", "into", "an", "active", "scene", ".", "This", "is", "likely", "over", "at", "this", "point", "."]
# ::lemmas ["ambulance", "have", "arrive", "on", "scene", ".", "Zero", "chance", "they", "be", "let", "into", "an", "active", "scene", ".", "this", "be", "likely", "over", "at", "this", "point", "."]
(c15-1 / multi-sentence
       :snt1 (c15-13 / arrive-01
                     :ARG1 (c15-4 / ambulance)
                     :ARG4 (c15-10 / scene))
       :snt2 (c15-8 / chance-02
                    :ARG1 (c15-0 / let-01
                                 :ARG1 (c15-12 / they)
                                 :destination (c15-3 / scene
                                                     :ARG0-of (c15-5 / activity-06)))
                    :polarity -)
       :snt3 (c15-9 / likely-01
                    :ARG1 (c15-2 / over-01
                                 :ARG1 (c15-11 / this)
                                 :time (c15-6 / point
                                              :mod (c15-7 / this)))))

# ::snt dead or alive don't mind
# ::tokens ["dead", "or", "alive", "do", "n't", "mind"]
# ::lemmas ["dead", "or", "alive", "do", "not", "mind"]
(c16-2 / mind-01
       :ARG0 (c16-0 / you)
       :ARG1 (c16-3 / or
                    :op1 (c16-4 / person
                                :ARG1-of (c16-5 / die-01))
                    :op2 (c16-6 / person
                                :ARG1-of (c16-1 / live-01)))
       :polarity -
       :mode imperative)

# ::snt srailli Tmgeneral Aviv Koavi: Trkiyede El Kaide ss var!
# ::tokens ["srailli", "Tmgeneral", "Aviv", "Koavi", ":", "Trkiyede", "El", "Kaide", "ss", "var", "!"]
# ::lemmas ["srailli", "Tmgeneral", "Aviv", "Koavi", ":", "Trkiyede", "El", "Kaide", "ss", "var", "!"]
(c17-4 / person
       :name (c17-2 / name
                    :op1 "Aviv"
                    :op2 "Koavi")
       :ARG0-of (c17-0 / have-org-role-91
                       :ARG2 (c17-7 / general))
       :mod (c17-8 / person
                   :name (c17-3 / name
                                :op1 "Tmgeneral"
                                :op2 "Aviv"
                                :op3 "Koavi"))
       :mod (c17-1 / person
                   :name (c17-5 / name
                                :op1 "Tkiyede"
                                :op2 "El"
                                :op3 "Kaide"))
       :mod (c17-6 / var
                   :mode expressive))

# ::snt or until the good ones stand up against the bad ones
# ::tokens ["or", "until", "the", "good", "ones", "stand", "up", "against", "the", "bad", "ones"]
# ::lemmas ["or", "until", "the", "good", "one", "stand", "up", "against", "the", "bad", "one"]
(c18-4 / or
       :op2 (c18-1 / until
                   :op1 (c18-6 / stand-up-07
                               :ARG1 (c18-0 / one
                                            :ARG1-of (c18-5 / good-02))
                               :prep-against (c18-2 / one
                                                    :ARG1-of (c18-3 / bad-07)))))

# ::snt Who is coming up with these questions that your news readers are asking these so called analyst?
# ::tokens ["Who", "is", "coming", "up", "with", "these", "questions", "that", "your", "news", "readers", "are", "asking", "these", "so", "called", "analyst", "?"]
# ::lemmas ["who", "be", "come", "up", "with", "these", "question", "that", "your", "news", "reader", "be", "ask", "these", "so", "call", "analyst", "?"]
(c19-7 / come-up-11
       :ARG0 (c19-12 / amr-unknown)
       :ARG1 (c19-11 / thing
                     :ARG1-of (c19-1 / question-01)
                     :mod (c19-9 / this)
                     :ARG1-of (c19-2 / ask-01
                                     :ARG0 (c19-5 / person
                                                  :ARG0-of (c19-6 / read-01
                                                                  :ARG1 (c19-3 / news)
                                                                  :poss (c19-0 / you))
                                                  :mod (c19-4 / this)
                                                  :ARG0-of (c19-8 / analyze-01)
                                                  :mod (c19-10 / so-called)))))
