# ::snt and tory MPs never lie, so we can totally believe that this is not an orchestration by the govn't/police
# ::tokens ["and", "tory", "MPs", "never", "lie", ",", "so", "we", "can", "totally", "believe", "that", "this", "is", "not", "an", "orchestration", "by", "the", "govn't", "/", "police"]
# ::lemmas ["and", "tory", "mp", "never", "lie", ",", "so", "we", "can", "totally", "believe", "that", "this", "be", "not", "an", "orchestration", "by", "the", "govn't", "/", "police"]
(c1-6 / and
      :op2 (c1-8 / lie-08
                 :ARG0 (c1-2 / person
                             :ARG0-of (c1-7 / have-org-role-91
                                            :ARG1 (c1-13 / government-organization
                                                         :name (c1-12 / name
                                                                      :op1 "Parliament"))
                                            :ARG2 (c1-0 / member))
                             :mod (c1-5 / political-party
                                        :name (c1-17 / name
                                                     :op1 "Tory")))
                 :time (c1-11 / ever)
                 :ARG0-of (c1-18 / cause-01
                                 :ARG1 (c1-9 / possible-01
                                             :ARG1 (c1-10 / believe-01
                                                          :ARG0 (c1-15 / we)
                                                          :ARG1 (c1-16 / orchestrate-01
                                                                       :ARG0 (c1-4 / slash
                                                                                   :op1 (c1-3 / government-organization
                                                                                              :ARG0-of (c1-1 / govern-01))
                                                                                   :op2 (c1-14 / police))
                                                                       :ARG1 (c1-20 / this)
                                                                       :polarity -)
                                                          :degree (c1-19 / total))))
                 :polarity -))

# ::snt Other outlets reporting multiple assailants
# ::tokens ["Other", "outlets", "reporting", "multiple", "assailants"]
# ::lemmas ["other", "outlet", "report", "multiple", "assailant"]
(c2-4 / report-01
      :ARG0 (c2-2 / outlet
                  :mod (c2-0 / other))
      :ARG1 (c2-3 / person
                  :ARG0-of (c2-5 / assail-01)
                  :quant (c2-1 / multiple)))

# ::snt nice.
# ::tokens ["nice", "."]
# ::lemmas ["nice", "."]
(c3-0 / nice-01)

# ::snt : Two Tory MPs say gunman at Parliament Hill has been 'shot and killed' OH MY
# ::tokens [":", "Two", "Tory", "MPs", "say", "gunman", "at", "Parliament", "Hill", "has", "been", "'", "shot", "and", "killed", "'", "OH", "MY"]
# ::lemmas [":", "Two", "Tory", "mp", "say", "gunman", "at", "Parliament", "Hill", "have", "be", "'", "shoot", "and", "kill", "'", "OH", "MY"]
(c4-9 / say-01
      :ARG0 (c4-6 / person
                  :ARG0-of (c4-0 / have-org-role-91
                                 :ARG1 (c4-8 / government-organization
                                             :name (c4-4 / name
                                                         :op1 "Parliament"
                                                         :op2 "Hill"))
                                 :ARG2 (c4-1 / member))
                  :ARG0-of (c4-13 / have-org-role-91
                                  :ARG1 (c4-12 / political-party
                                               :name (c4-5 / name
                                                           :op1 "Tory")))
                  :quant 2)
      :ARG1 (c4-10 / and
                   :op1 (c4-3 / shoot-01
                              :ARG1 (c4-7 / gunman)
                              :location c4-8)
                   :op2 (c4-11 / kill-01
                               :ARG1 c4-7))
      :mod (c4-2 / oh-my-god
                 :mode expressive))

# ::snt sending thoughts n prayers
# ::tokens ["sending", "thoughts", "n", "prayers"]
# ::lemmas ["send", "thought", "n", "prayer"]
(c5-2 / and
      :op1 (c5-1 / think-01)
      :op2 (c5-0 / pray-01))

# ::snt good on you terrorists should be killed at point.
# ::tokens ["good", "on", "you", "terrorists", "should", "be", "killed", "at", "point", "."]
# ::lemmas ["good", "on", "you", "terrorist", "should", "be", "kill", "at", "point", "."]
(c7-3 / say-01
      :ARG1 (c7-2 / recommend-01
                  :ARG1 (c7-0 / kill-01
                              :ARG1 (c7-4 / terrorist)
                              :time (c7-1 / point)))
      :ARG2 c7-4)

# ::snt : Two Tory MPs say gunman at Parliament Hill 'shot &amp; killed'
# ::tokens [":", "Two", "Tory", "MPs", "say", "gunman", "at", "Parliament", "Hill", "'", "shot", "&", "amp", ";", "killed", "'"]
# ::lemmas [":", "Two", "Tory", "mp", "say", "gunman", "at", "Parliament", "Hill", "'", "shot", "&", "amp", ";", "kill", "'"]
(c8-8 / say-01
      :ARG0 (c8-5 / person
                  :ARG0-of (c8-0 / have-org-role-91
                                 :ARG1 (c8-7 / government-organization
                                             :name (c8-3 / name
                                                         :op1 "Parliament"
                                                         :op2 "Hill"))
                                 :ARG2 (c8-1 / member))
                  :ARG0-of (c8-12 / have-org-role-91
                                  :ARG1 (c8-11 / political-party
                                               :name (c8-4 / name
                                                           :op1 "Tory")))
                  :quant 2)
      :ARG1 (c8-9 / and
                  :op1 (c8-2 / shoot-02
                             :ARG0 (c8-6 / gunman)
                             :location c8-7)
                  :op2 (c8-10 / kill-01
                              :ARG0 c8-6
                              :ARG1 c8-6)))

# ::snt Wow. : Two Tory MPs say gunman at Parliament Hill has been 'shot and killed'
# ::tokens ["Wow", ".", ":", "Two", "Tory", "MPs", "say", "gunman", "at", "Parliament", "Hill", "has", "been", "'", "shot", "and", "killed", "'"]
# ::lemmas ["wow", ".", ":", "Two", "Tory", "mp", "say", "gunman", "at", "Parliament", "Hill", "have", "be", "'", "shoot", "and", "kill", "'"]
(c9-2 / multi-sentence
      :snt1 (c9-1 / wow
                  :mode expressive)
      :snt2 (c9-12 / say-01
                   :ARG0 (c9-6 / person
                               :ARG0-of (c9-0 / have-org-role-91
                                              :ARG1 (c9-9 / government-organization
                                                          :name (c9-4 / name
                                                                      :op1 "Parliament"
                                                                      :op2 "Hill"))
                                              :ARG2 (c9-7 / member))
                               :ARG0-of (c9-16 / have-org-role-91
                                               :ARG1 (c9-15 / political-party
                                                            :name (c9-5 / name
                                                                        :op1 "Tory")))
                               :quant 2)
                   :ARG1 (c9-13 / and
                                :op1 (c9-3 / shoot-02
                                           :ARG1 (c9-8 / gunman)
                                           :location (c9-10 / government-organization
                                                            :name (c9-11 / name
                                                                         :op1 "Parliament"
                                                                         :op2 "Hill")))
                                :op2 (c9-14 / kill-01
                                            :ARG1 c9-8))))

# ::snt not what CBC is reporting. But hope so.
# ::tokens ["not", "what", "CBC", "is", "reporting", ".", "But", "hope", "so", "."]
# ::lemmas ["not", "what", "CBC", "be", "report", ".", "but", "hope", "so", "."]
(c10-1 / multi-sentence
       :snt1 (c10-4 / report-01
                    :ARG0 (c10-3 / publication
                                 :name (c10-2 / name
                                              :op1 "CBC"))
                    :polarity -)
       :snt2 (c10-5 / contrast-01
                    :ARG2 (c10-0 / hope-01
                                 :ARG1 (c10-6 / so))))

# ::snt : Two Tory MPs say gunman at Parliament Hill has been 'shot and killed'
# ::tokens [":", "Two", "Tory", "MPs", "say", "gunman", "at", "Parliament", "Hill", "has", "been", "'", "shot", "and", "killed", "'"]
# ::lemmas [":", "Two", "Tory", "mp", "say", "gunman", "at", "Parliament", "Hill", "have", "be", "'", "shoot", "and", "kill", "'"]
(c11-8 / say-01
       :ARG0 (c11-5 / person
                    :ARG0-of (c11-0 / have-org-role-91
                                    :ARG1 (c11-7 / government-organization
                                                 :name (c11-3 / name
                                                              :op1 "Parliament"
                                                              :op2 "Hill"))
                                    :ARG2 (c11-1 / member))
                    :ARG0-of (c11-12 / have-org-role-91
                                     :ARG1 (c11-11 / political-party
                                                   :name (c11-4 / name
                                                                :op1 "Tory")))
                    :quant 2)
       :ARG1 (c11-9 / and
                    :op1 (c11-2 / shoot-02
                                :ARG1 (c11-6 / gunman)
                                :location c11-7)
                    :op2 (c11-10 / kill-01
                                 :ARG1 c11-6)))

# ::snt we won't get all the info until they are absolutely certain that the area is clear, most likely.
# ::tokens ["we", "wo", "n't", "get", "all", "the", "info", "until", "they", "are", "absolutely", "certain", "that", "the", "area", "is", "clear", ",", "most", "likely", "."]
# ::lemmas ["we", "will", "not", "get", "all", "the", "info", "until", "they", "be", "absolutely", "certain", "that", "the", "area", "be", "clear", ",", "most", "likely", "."]
(c12-9 / get-01
       :ARG0 (c12-1 / we)
       :ARG1 (c12-6 / information
                    :mod (c12-13 / all))
       :time (c12-4 / until
                    :op1 (c12-12 / know-01
                                 :ARG0 (c12-10 / they)
                                 :ARG1 (c12-5 / and
                                              :op1 (c12-8 / clear-06
                                                          :ARG1 (c12-7 / area))
                                              :op2 (c12-2 / likely-01
                                                          :ARG1 c12-8
                                                          :ARG2-of (c12-0 / have-degree-91
                                                                          :ARG1 c12-8
                                                                          :ARG3 (c12-3 / most))))
                                 :degree (c12-11 / absolute)))
       :polarity -)
