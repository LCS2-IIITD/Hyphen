# ::snt Handsome fellow. So pleasant looking. Doesn't look like a jackass at all.
# ::tokens ["Handsome", "fellow", ".", "So", "pleasant", "looking", ".", "Does", "n't", "look", "like", "a", "jackass", "at", "all", "."]
# ::lemmas ["handsome", "fellow", ".", "so", "pleasant", "look", ".", "do", "not", "look", "like", "a", "jackass", "at", "all", "."]
(c1-3 / multi-sentence
      :snt1 (c1-2 / fellow
                  :mod (c1-0 / handsome))
      :snt2 (c1-4 / look-02
                  :ARG1 (c1-5 / pleasant-02
                              :degree (c1-6 / so))
                  :snt3-of c1-3)
      :ARG1 (c1-1 / jackass)
      :degree (c1-7 / at-all)
      :polarity -)

# ::snt Will any of his co-workers tell you? That is cowardly.
# ::tokens ["Will", "any", "of", "his", "co", "-", "workers", "tell", "you", "?", "That", "is", "cowardly", "."]
# ::lemmas ["will", "any", "of", "his", "co", "-", "worker", "tell", "you", "?", "that", "be", "cowardly", "."]
(c2-3 / multi-sentence
      :snt1 (c2-9 / tell-01
                  :polarity (c2-10 / amr-unknown)
                  :ARG0 (c2-4 / any
                              :ARG1-of (c2-5 / include-91
                                             :ARG2 (c2-6 / person
                                                         :ARG0-of (c2-1 / work-01
                                                                        :ARG2 (c2-0 / he)))))
                  :ARG2 (c2-2 / you))
      :snt2 (c2-7 / coward
                  :domain (c2-8 / that)))

# ::snt Here, for example, is one of the officers who cuffed me. Still wouldn't give me his name.
# ::tokens ["Here", ",", "for", "example", ",", "is", "one", "of", "the", "officers", "who", "cuffed", "me", ".", "Still", "would", "n't", "give", "me", "his", "name", "."]
# ::lemmas ["here", ",", "for", "example", ",", "be", "one", "of", "the", "officer", "who", "cuff", "i", ".", "still", "would", "not", "give", "i", "his", "name", "."]
(c3-2 / multi-sentence
      :snt1 (c3-8 / person
                  :ARG1-of (c3-5 / include-91
                                 :ARG2 (c3-12 / person
                                              :ARG0-of (c3-0 / have-org-role-91
                                                             :ARG2 (c3-3 / officer))
                                              :ARG0-of (c3-9 / cuff-01
                                                             :ARG1 (c3-10 / i))))
                  :location (c3-13 / here)
                  :ARG0-of (c3-4 / exemplify-01))
      :snt2 (c3-6 / name-01
                  :ARG1 (c3-7 / he)
                  :ARG2 (c3-1 / i)
                  :mod (c3-11 / still)
                  :polarity -))

# ::snt try some facial recognition software.
# ::tokens ["try", "some", "facial", "recognition", "software", "."]
# ::lemmas ["try", "some", "facial", "recognition", "software", "."]
(c4-5 / try-01
      :ARG0 (c4-0 / you)
      :ARG1 (c4-4 / software
                  :ARG0-of (c4-3 / recognize-02
                                 :ARG1 (c4-1 / face))
                  :mod (c4-2 / some))
      :mode imperative)

# ::snt They don't wear them because they don't wanna become personal with the community that they're suppose to be protecting.
# ::tokens ["They", "do", "n't", "wear", "them", "because", "they", "do", "n't", "wanna", "become", "personal", "with", "the", "community", "that", "they", "'re", "suppose", "to", "be", "protecting", "."]
# ::lemmas ["they", "do", "not", "wear", "they", "because", "they", "do", "not", "wanna", "become", "personal", "with", "the", "community", "that", "they", "be", "suppose", "to", "be", "protect", "."]
(c5-5 / cause-01
      :ARG0 (c5-0 / want-01
                  :ARG0 (c5-7 / they)
                  :ARG1 (c5-1 / become-01
                              :ARG1 c5-7
                              :ARG2 (c5-3 / personal-02
                                          :ARG1 c5-7
                                          :ARG2 (c5-4 / community
                                                      :ARG1-of (c5-8 / protect-01
                                                                     :ARG0 c5-7
                                                                     :ARG1-of (c5-6 / suppose-02)))))
                  :polarity -)
      :ARG1 (c5-2 / wear-01
                  :ARG0 c5-7
                  :ARG1 c5-7
                  :polarity -))

# ::snt T-1000
# ::tokens ["T-1000"]
# ::lemmas ["T-1000"]
(c6-1 / product
      :name (c6-0 / name
                  :op1 "T-1000"))

# ::snt | We'll see what we can do for you. *yells over his shoulder: one cop dox for a journo stat* - we'll get right on that for you.
# ::tokens ["|", "We", "'ll", "see", "what", "we", "can", "do", "for", "you", ".", "*", "yells", "over", "his", "shoulder", ":", "one", "cop", "dox", "for", "a", "journo", "stat", "*", "-", "we", "'ll", "get", "right", "on", "that", "for", "you", "."]
# ::lemmas ["|", "we", "'ll", "see", "what", "we", "can", "do", "for", "you", ".", "*", "yell", "over", "his", "shoulder", ":", "one", "cop", "dox", "for", "a", "journo", "stat", "*", "-", "we", "'ll", "get", "right", "on", "that", "for", "you", "."]
(c7-2 / multi-sentence
      :snt1 (c7-7 / see-01
                  :ARG0 (c7-13 / we)
                  :ARG1 (c7-20 / thing
                               :ARG1-of (c7-6 / do-02
                                              :ARG0 c7-13
                                              :ARG2 (c7-15 / you)
                                              :ARG1-of (c7-5 / possible-01))))
      :snt2 (c7-19 / yells-01
                   :location (c7-17 / over
                                    :op1 (c7-9 / shoulder
                                               :part-of (c7-8 / he)))
                   :ARG1-of (c7-10 / mean-01
                                   :ARG2 (c7-1 / do-02
                                               :ARG0 (c7-18 / cop
                                                            :quant 1)
                                               :ARG1 (c7-16 / stat
                                                            :topic (c7-0 / journo)))))
      :snt3 (c7-12 / get-on-21
                   :ARG0 (c7-4 / we)
                   :ARG1 (c7-14 / that)
                   :beneficiary (c7-3 / you)
                   :mod (c7-11 / right)))

# ::snt what's that over the pocket on the left?
# ::tokens ["what", "'s", "that", "over", "the", "pocket", "on", "the", "left", "?"]
# ::lemmas ["what", "be", "that", "over", "the", "pocket", "on", "the", "left", "?"]
(c8-4 / amr-unknown
      :domain (c8-2 / that)
      :location (c8-1 / pocket
                      :poss (c8-3 / person
                                  :ARG1-of (c8-0 / left-19))))

# ::snt How very Russian separatists of Ferguson PD.
# ::tokens ["How", "very", "Russian", "separatists", "of", "Ferguson", "PD", "."]
# ::lemmas ["how", "very", "Russian", "separatist", "of", "Ferguson", "PD", "."]
(c9-6 / separatist
      :mod (c9-4 / country
                 :name (c9-1 / name
                             :op1 "Russia")
                 :degree (c9-2 / very
                               :degree (c9-0 / so)))
      :poss (c9-5 / government-organization
                  :name (c9-3 / name
                              :op1 "Ferguson"
                              :op2 "PD")))

# ::snt I think that is good for now; with people still riled up anyone of them n families could be targeted. So good idea for now.
# ::tokens ["I", "think", "that", "is", "good", "for", "now", ";", "with", "people", "still", "riled", "up", "anyone", "of", "them", "n", "families", "could", "be", "targeted", ".", "So", "good", "idea", "for", "now", "."]
# ::lemmas ["i", "think", "that", "be", "good", "for", "now", ";", "with", "people", "still", "rile", "up", "anyone", "of", "they", "n", "family", "could", "be", "target", ".", "so", "good", "idea", "for", "now", "."]
(c10-1 / multi-sentence
       :snt1 (c10-19 / think-01
                     :ARG0 (c10-12 / i)
                     :ARG1 (c10-11 / good-04
                                   :ARG1 (c10-18 / that)
                                   :time (c10-9 / now)
                                   :ARG1-of (c10-17 / cause-01
                                                    :ARG0 (c10-10 / rile-up-02
                                                                  :ARG0 (c10-2 / person)
                                                                  :ARG1 (c10-6 / anyone
                                                                               :ARG1-of (c10-14 / include-91
                                                                                                :ARG2 (c10-13 / they)
                                                                                                :ARG3 (c10-15 / or
                                                                                                              :op1 c10-6)
                                                                                                :op2 (c10-7 / family))))
                                                    :mod (c10-4 / still)
                                                    :ARG1-of (c10-5 / possible-01))))
       :snt2 (c10-0 / idea
                    :ARG1-of (c10-3 / good-04
                                    :time (c10-16 / now))
                    :degree (c10-8 / so)))

# ::snt I think it's a fresh start with the Highway Patrol taking over. That's good right? Brings calmness back eh?
# ::tokens ["I", "think", "it", "'s", "a", "fresh", "start", "with", "the", "Highway", "Patrol", "taking", "over", ".", "That", "'s", "good", "right", "?", "Brings", "calmness", "back", "eh", "?"]
# ::lemmas ["i", "think", "it", "be", "a", "fresh", "start", "with", "the", "Highway", "Patrol", "take", "over", ".", "that", "be", "good", "right", "?", "bring", "calmness", "back", "eh", "?"]
(c11-1 / multi-sentence
       :snt1 (c11-13 / think-01
                     :ARG0 (c11-3 / i)
                     :ARG1 (c11-11 / start-01
                                   :ARG2 (c11-10 / take-over-12
                                                 :ARG0 (c11-8 / government-organization
                                                              :name (c11-4 / name
                                                                           :op1 "Highway"
                                                                           :op2 "Patrol")))
                                   :ARG1-of (c11-0 / fresh-04)))
       :snt2 (c11-6 / good-02
                    :ARG1 (c11-5 / that)
                    :ARG1-of (c11-7 / request-confirmation-91))
       :snt3 (c11-2 / Brings-01
                    :ARG1 (c11-9 / calm-03)
                    :ARG2 (c11-12 / back)
                    :ARG1-of c11-7))

# ::snt Nothing surprising in the "Show me your hands state"
# ::tokens ["Nothing", "surprising", "in", "the", "\"", "Show", "me", "your", "hands", "state", "\""]
# ::lemmas ["nothing", "surprising", "in", "the", "\"", "show", "i", "your", "hand", "state", "\""]
(c12-6 / surprise-01
       :ARG0 (c12-5 / nothing
                    :topic (c12-3 / state-01
                                  :ARG1 (c12-2 / show-01
                                               :ARG0 (c12-1 / you
                                                            :part (c12-0 / hand
                                                                         :ARG1-of c12-2))
                                               :ARG2 (c12-4 / i)
                                               :mode imperative))))

# ::snt It's nice to see officers with name tags on from Missouri State Highway Patrol. cops still not wearing them.
# ::tokens ["It", "'s", "nice", "to", "see", "officers", "with", "name", "tags", "on", "from", "Missouri", "State", "Highway", "Patrol", ".", "cops", "still", "not", "wearing", "them", "."]
# ::lemmas ["it", "be", "nice", "to", "see", "officer", "with", "name", "tag", "on", "from", "Missouri", "State", "Highway", "Patrol", ".", "cop", "still", "not", "wear", "they", "."]
(c13-2 / multi-sentence
       :snt1 (c13-5 / nice-01
                    :ARG1 (c13-12 / see-01
                                  :ARG1 (c13-7 / person
                                               :ARG0-of (c13-0 / have-org-role-91
                                                               :ARG2 (c13-3 / officer))
                                               :ARG1-of (c13-13 / tag-01
                                                                :ARG2 (c13-11 / thing
                                                                              :ARG2-of (c13-6 / name-01)))
                                               :source (c13-10 / government-organization
                                                               :name (c13-8 / name
                                                                            :op1 "Missouri"
                                                                            :op2 "State"
                                                                            :op3 "Highway"
                                                                            :op4 "Patrol")))))
       :snt2 (c13-1 / wear-01
                    :ARG0 (c13-9 / cop)
                    :ARG1 c13-11
                    :mod (c13-4 / still)
                    :polarity -))

# ::snt Otherwise, see if he gets in a patrol car and write down the number
# ::tokens ["Otherwise", ",", "see", "if", "he", "gets", "in", "a", "patrol", "car", "and", "write", "down", "the", "number"]
# ::lemmas ["otherwise", ",", "see", "if", "he", "get", "in", "a", "patrol", "car", "and", "write", "down", "the", "number"]
(c14-9 / and
       :op1 (c14-8 / see-01
                   :ARG0 (c14-1 / you)
                   :ARG1 (c14-7 / get-05
                                :ARG1 (c14-0 / he)
                                :ARG2 (c14-6 / car
                                             :ARG0-of (c14-5 / patrol-01)))
                   :mode imperative)
       :op2 (c14-2 / write-01
                   :ARG0 c14-1
                   :ARG1 (c14-4 / number)
                   :mode imperative)
       :condition (c14-3 / have-polarity-91
                         :ARG2 -))

# ::snt the smoke and mirrors, head-faking, and cover up continues.
# ::tokens ["the", "smoke", "and", "mirrors", ",", "head", "-", "faking", ",", "and", "cover", "up", "continues", "."]
# ::lemmas ["the", "smoke", "and", "mirror", ",", "head", "-", "fake", ",", "and", "cover", "up", "continue", "."]
(c15-4 / continue-01
       :ARG1 (c15-6 / and
                    :op1 (c15-5 / smoke)
                    :op2 (c15-1 / mirror)
                    :op3 (c15-2 / shake-01
                                :ARG1 (c15-0 / head))
                    :op4 (c15-3 / cover-up-04)))

# ::snt : It's nice to see officers with name tags on from Missouri State Highway Patrol. cops still not wearing them.
# ::tokens [":", "It", "'s", "nice", "to", "see", "officers", "with", "name", "tags", "on", "from", "Missouri", "State", "Highway", "Patrol", ".", "cops", "still", "not", "wearing", "them", "."]
# ::lemmas [":", "it", "be", "nice", "to", "see", "officer", "with", "name", "tag", "on", "from", "Missouri", "State", "Highway", "Patrol", ".", "cop", "still", "not", "wear", "they", "."]
(c16-2 / multi-sentence
       :snt1 (c16-5 / nice-01
                    :ARG1 (c16-12 / see-01
                                  :ARG1 (c16-7 / person
                                               :ARG0-of (c16-0 / have-org-role-91
                                                               :ARG2 (c16-3 / officer))
                                               :ARG1-of (c16-13 / tag-01
                                                                :ARG2 (c16-11 / thing
                                                                              :ARG2-of (c16-6 / name-01)))
                                               :source (c16-10 / government-organization
                                                               :name (c16-8 / name
                                                                            :op1 "Missouri"
                                                                            :op2 "State"
                                                                            :op3 "Highway"
                                                                            :op4 "Patrol")))))
       :snt2 (c16-1 / wear-01
                    :ARG0 (c16-9 / cop)
                    :ARG1 c16-11
                    :mod (c16-4 / still)
                    :polarity -))

# ::snt (He's not wearing a name tag, FYI. It is some sort of flag pin thing. He wouldn't talk to me.)
# ::tokens ["(", "He", "'s", "not", "wearing", "a", "name", "tag", ",", "FYI", ".", "It", "is", "some", "sort", "of", "flag", "pin", "thing", ".", "He", "would", "n't", "talk", "to", "me", ".", ")"]
# ::lemmas ["(", "he", "be", "not", "wear", "a", "name", "tag", ",", "FYI", ".", "it", "be", "some", "sort", "of", "flag", "pin", "thing", ".", "he", "would", "not", "talk", "to", "i", ".", ")"]
(c17-3 / multi-sentence
       :snt1 (c17-1 / wear-01
                    :ARG0 (c17-0 / he)
                    :ARG1 (c17-13 / tag
                                  :mod (c17-7 / name))
                    :purpose (c17-6 / inform-01
                                    :ARG1 c17-0)
                    :polarity -)
       :snt2 (c17-11 / thing
                     :mod (c17-12 / sort
                                  :mod (c17-5 / some))
                     :mod (c17-9 / pin
                                 :mod (c17-2 / flag))
                     :domain (c17-10 / it))
       :snt3 (c17-8 / talk-01
                    :ARG0 (c17-14 / he)
                    :ARG2 (c17-4 / i)
                    :polarity -))

# ::snt doesnt his shield have a badge number on it?
# ::tokens ["does", "nt", "his", "shield", "have", "a", "badge", "number", "on", "it", "?"]
# ::lemmas ["do", "nt", "his", "shield", "have", "a", "badge", "number", "on", "it", "?"]
(c18-0 / have-03
       :ARG0 (c18-3 / shield
                    :poss (c18-5 / he))
       :ARG1 (c18-2 / number
                    :mod (c18-1 / badge)
                    :location c18-3)
       :polarity (c18-4 / amr-unknown)
       :polarity -)

# ::snt Badge number?
# ::tokens ["Badge", "number", "?"]
# ::lemmas ["Badge", "number", "?"]
(c19-0 / number
       :polarity (c19-1 / amr-unknown)
       :ARG1-of (c19-2 / bad-07))
