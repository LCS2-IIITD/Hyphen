# ::snt hopefully this idiot is the only one whacked. Let's hope this sends a message to the rest of this spineless religion!
# ::tokens ["hopefully", "this", "idiot", "is", "the", "only", "one", "whacked", ".", "Let", "'s", "hope", "this", "sends", "a", "message", "to", "the", "rest", "of", "this", "spineless", "religion", "!"]
# ::lemmas ["hopefully", "this", "idiot", "be", "the", "only", "one", "whack", ".", "let", "us", "hope", "this", "send", "a", "message", "to", "the", "rest", "of", "this", "spineless", "religion", "!"]
(c1-3 / multi-sentence
      :snt1 (c1-0 / hope-01
                  :ARG0 (c1-7 / i)
                  :ARG1 (c1-1 / whack-01
                              :ARG1 (c1-12 / idiot
                                           :mod (c1-4 / only)
                                           :domain (c1-2 / idiot
                                                         :mod (c1-15 / this)))))
      :snt2 (c1-16 / hope-01
                   :ARG0 (c1-5 / i)
                   :ARG1 (c1-14 / send-01
                                :ARG0 (c1-13 / this)
                                :ARG1 (c1-10 / message-01)
                                :ARG2 (c1-11 / rest
                                             :part-of (c1-8 / religion
                                                            :mod (c1-6 / spineless)
                                                            :mod (c1-9 / this))))))

# ::snt just k et us know when they nail the Sheik
# ::tokens ["just", "k", "et", "us", "know", "when", "they", "nail", "the", "Sheik"]
# ::lemmas ["just", "k", "et", "we", "know", "when", "they", "nail", "the", "Sheik"]
(c2-7 / know-01
      :ARG0 (c2-9 / and
                  :op1 (c2-2 / you)
                  :op2 (c2-1 / we)
                  :mod (c2-0 / just))
      :ARG1 (c2-6 / time
                  :time-of (c2-3 / nail-01
                                 :ARG0 (c2-5 / they)
                                 :ARG1 (c2-8 / ship
                                             :name (c2-4 / name
                                                         :op1 "Sheik")))))

# ::snt : Australian TV pictures show police storming cafe under siege in Sydney
# ::tokens [":", "Australian", "TV", "pictures", "show", "police", "storming", "cafe", "under", "siege", "in", "Sydney"]
# ::lemmas [":", "Australian", "tv", "picture", "show", "police", "storm", "cafe", "under", "siege", "in", "Sydney"]
(c3-9 / show-01
      :ARG0 (c3-5 / picture
                  :source (c3-10 / television
                                 :mod (c3-7 / country
                                            :name (c3-3 / name
                                                        :op1 "Australia"))))
      :ARG1 (c3-1 / storm-02
                  :ARG0 (c3-11 / police)
                  :ARG1 (c3-6 / cafe
                              :ARG1-of (c3-0 / under
                                             :op1 (c3-2 / iege-01)))
                  :location (c3-8 / city
                                  :name (c3-4 / name
                                              :op1 "Sydney"))))

# ::snt ohhh... i cant believe this..this is sick..
# ::tokens ["ohhh", "...", "i", "ca", "nt", "believe", "this", "..", "this", "is", "sick", ".."]
# ::lemmas ["ohhh", "...", "i", "can", "not", "believe", "this", "..", "this", "be", "sick", ".."]
(c4-0 / multi-sentence
      :snt1 (c4-4 / possible-01
                  :ARG1 (c4-1 / believe-01
                              :ARG0 (c4-3 / i)
                              :ARG1 (c4-7 / this))
                  :mod (c4-2 / oh
                             :mode expressive)
                  :polarity -)
      :snt2 (c4-6 / sick-02
                  :ARG1 (c4-5 / this)))

# ::snt Asaltan la cafetera donde estaban rehenes : Australian TV pictures show police storming cafe
# ::tokens ["Asaltan", "la", "cafetera", "donde", "estaban", "rehenes", ":", "Australian", "TV", "pictures", "show", "police", "storming", "cafe"]
# ::lemmas ["Asaltan", "la", "cafetera", "donde", "estaban", "rehene", ":", "Australian", "tv", "picture", "show", "police", "storm", "cafe"]
(c5-0 / multi-sentence
      :snt1 (c5-1 / be-located-at-91
                  :ARG1 (c5-7 / cafe
                              :name (c5-3 / name
                                          :op1 "Asaltan"
                                          :op2 "la"
                                          :op3 "Cafetera"
                                          :op4 "donde"
                                          :op5 " estaban"
                                          :op6 "henes"))
                  :ARG2 (c5-6 / city
                              :name (c5-4 / name
                                          :op1 "Asaltan")))
      :snt2 (c5-10 / show-01
                   :ARG0 (c5-5 / picture
                               :mod (c5-11 / television
                                           :mod (c5-9 / country
                                                      :name (c5-8 / name
                                                                  :op1 "Australia"))))
                   :ARG1 (c5-2 / storm-02
                               :ARG0 (c5-12 / police)
                               :ARG1 (c5-13 / cafe))))

# ::snt Australian TV pictures show police storming cafe under siege in Sydney crazy and sad to see live on TV
# ::tokens ["Australian", "TV", "pictures", "show", "police", "storming", "cafe", "under", "siege", "in", "Sydney", "crazy", "and", "sad", "to", "see", "live", "on", "TV"]
# ::lemmas ["Australian", "tv", "picture", "show", "police", "storm", "cafe", "under", "siege", "in", "Sydney", "crazy", "and", "sad", "to", "see", "live", "on", "tv"]
(c6-11 / show-01
       :ARG0 (c6-7 / picture
                   :mod (c6-13 / television)
                   :mod (c6-9 / country
                              :name (c6-5 / name
                                          :op1 "Australia")))
       :ARG1 (c6-15 / and
                    :op1 (c6-8 / crazy-03
                               :ARG1 (c6-14 / police
                                            :ARG0-of (c6-4 / storm-02
                                                           :ARG1 (c6-10 / cafe
                                                                        :ARG1-of (c6-1 / siege-01
                                                                                       :location (c6-16 / city
                                                                                                        :name (c6-6 / name
                                                                                                                    :op1 "Sydney")))))))
                    :op2 (c6-3 / sad-02
                               :ARG0 (c6-0 / see-01
                                           :ARG0 c6-14
                                           :ARG1 (c6-2 / live
                                                       :medium (c6-12 / television))))))

# ::snt or do I care that belief in non existent entity that failed to save them will be justified to continue faith? Oh Yes.
# ::tokens ["or", "do", "I", "care", "that", "belief", "in", "non", "existent", "entity", "that", "failed", "to", "save", "them", "will", "be", "justified", "to", "continue", "faith", "?", "Oh", "Yes", "."]
# ::lemmas ["or", "do", "i", "care", "that", "belief", "in", "non", "existent", "entity", "that", "fail", "to", "save", "they", "will", "be", "justify", "to", "continue", "faith", "?", "oh", "yes", "."]
(c7-3 / multi-sentence
      :snt1 (c7-5 / or
                  :op2 (c7-11 / care-01
                              :polarity (c7-14 / amr-unknown)
                              :ARG0 (c7-8 / i)
                              :ARG1 (c7-0 / justify-01
                                          :ARG1 (c7-4 / believe-01
                                                      :ARG1 (c7-7 / entity
                                                                  :ARG1-of (c7-6 / exist-01
                                                                                 :polarity -)
                                                                  :ARG0-of (c7-2 / fail-01
                                                                                 :ARG1 (c7-12 / save-02
                                                                                              :ARG0 c7-7
                                                                                              :ARG1 (c7-13 / they)))))
                                          :purpose (c7-10 / continue-01
                                                          :ARG0 c7-13
                                                          :ARG1 (c7-9 / faith)))))
      :snt2 (c7-1 / yes
                  :mode expressive))

# ::snt do I care that a belief in a non existent entity is used as an excuse to take life? Yes, of course.
# ::tokens ["do", "I", "care", "that", "a", "belief", "in", "a", "non", "existent", "entity", "is", "used", "as", "an", "excuse", "to", "take", "life", "?", "Yes", ",", "of", "course", "."]
# ::lemmas ["do", "i", "care", "that", "a", "belief", "in", "a", "non", "existent", "entity", "be", "use", "as", "an", "excuse", "to", "take", "life", "?", "yes", ",", "of", "course", "."]
(c8-3 / multi-sentence
      :snt1 (c8-10 / care-01
                   :polarity (c8-12 / amr-unknown)
                   :ARG0 (c8-9 / i)
                   :ARG1 (c8-4 / use-01
                               :ARG1 (c8-5 / believe-01
                                           :ARG1 (c8-8 / entity
                                                       :ARG1-of (c8-6 / exist-01
                                                                      :polarity -)))
                               :ARG2 (c8-0 / excuse-02
                                           :ARG1 (c8-11 / take-01
                                                        :ARG1 (c8-2 / life)))))
      :snt2 (c8-1 / yes
                  :mod (c8-7 / of-course)))

# ::snt Yes ppl injured says CNN. i feel so sad too and i remember our hostaged Ambassador.
# ::tokens ["Yes", "ppl", "injured", "says", "CNN", ".", "i", "feel", "so", "sad", "too", "and", "i", "remember", "our", "hostaged", "Ambassador", "."]
# ::lemmas ["yes", "ppl", "injure", "say", "CNN", ".", "i", "feel", "so", "sad", "too", "and", "i", "remember", "our", "hostage", "Ambassador", "."]
(c9-0 / multi-sentence
      :snt1 (c9-2 / say-01
                  :ARG0 (c9-1 / publication
                              :name (c9-10 / name
                                           :op1 "CNN"))
                  :ARG1 (c9-15 / injure-01
                               :ARG1 (c9-3 / person
                                           :ARG0-of (c9-8 / post-01))))
      :snt2 (c9-5 / and
                  :op1 (c9-7 / feel-01
                             :ARG0 (c9-16 / i)
                             :ARG1 (c9-9 / sad-02
                                         :ARG1 c9-16
                                         :degree (c9-17 / so))
                             :mod (c9-18 / too))
                  :op2 (c9-11 / remember-01
                              :ARG0 c9-16
                              :ARG1 (c9-12 / person
                                           :ARG0-of (c9-6 / have-org-role-91
                                                          :ARG2 (c9-14 / ambassador
                                                                       :mod (c9-4 / hostaged)))
                                           :poss (c9-13 / we)))))

# ::snt Much ado about nothing, publicity seeking perverted iranian muslim
# ::tokens ["Much", "ado", "about", "nothing", ",", "publicity", "seeking", "perverted", "iranian", "muslim"]
# ::lemmas ["much", "ado", "about", "nothing", ",", "publicity", "seek", "pervert", "iranian", "muslim"]
(c10-11 / ado
        :topic (c10-2 / and
                      :op1 (c10-3 / nothing)
                      :op2 (c10-9 / seek-01
                                  :ARG1 (c10-5 / publicity)
                                  :ARG2 (c10-10 / person
                                                :mod (c10-6 / religious-group
                                                            :name (c10-4 / name
                                                                         :op1 "Islam"))
                                                :mod (c10-7 / country
                                                            :name (c10-8 / name
                                                                         :op1 "Iran"))
                                                :ARG1-of (c10-1 / pervert-01))))
        :quant (c10-0 / much))

# ::snt policeman hurt they're saying, don't know how badHope every1 except terrorists is unharmed
# ::tokens ["policeman", "hurt", "they", "'re", "saying", ",", "do", "n't", "know", "how", "badHope", "every1", "except", "terrorists", "is", "unharmed"]
# ::lemmas ["policeman", "hurt", "they", "be", "say", ",", "do", "not", "know", "how", "badhope", "every1", "except", "terrorist", "be", "unharmed"]
(c11-11 / say-01
        :ARG0 (c11-12 / they)
        :ARG1 (c11-14 / and
                      :op1 (c11-0 / hurt-01
                                  :ARG1 (c11-8 / person
                                               :ARG0-of (c11-1 / have-org-role-91
                                                               :ARG2 (c11-13 / policeman))))
                      :op2 (c11-6 / know-01
                                  :ARG0 c11-12
                                  :ARG1 (c11-10 / thing
                                                :degree-of (c11-2 / bad-07
                                                                  :ARG1 (c11-7 / hope-01
                                                                               :ARG1 (c11-3 / har-01
                                                                                            :ARG1 (c11-5 / everyone
                                                                                                         :ARG2-of (c11-4 / except-01
                                                                                                                         :ARG1 (c11-9 / terrorist)))
                                                                                            :polarity -))))
                                  :polarity -)))

# ::snt this is alliance with US.lol
# ::tokens ["this", "is", "alliance", "with", "US.lol"]
# ::lemmas ["this", "be", "alliance", "with", "US.lol"]
(c12-5 / ally-01
       :ARG2 (c12-2 / country
                    :name (c12-1 / name
                                 :op1 "US"))
       :domain (c12-4 / this)
       :ARG2-of (c12-0 / laugh-01
                       :manner (c12-3 / loud)
                       :mode expressive))

# ::snt wtf?
# ::tokens ["wtf", "?"]
# ::lemmas ["wtf", "?"]
(c13-1 / amr-unknown
       :mod (c13-0 / fuck
                   :mode expressive))

# ::snt How 'bout government "sting operation" by offering ISIS flags for sale-- see who "bites?"
# ::tokens ["How", "'bout", "government", "\"", "sting", "operation", "\"", "by", "offering", "ISIS", "flags", "for", "sale--", "see", "who", "\"", "bites", "?", "\""]
# ::lemmas ["how", "'bout", "government", "\"", "ste", "operation", "\"", "by", "offer", "ISIS", "flag", "for", "sale--", "see", "who", "\"", "bite", "?", "\""]
(c14-2 / multi-sentence
       :snt1 (c14-6 / operate-01
                    :ARG0 (c14-11 / government-organization
                                  :ARG0-of (c14-9 / govern-01))
                    :manner (c14-12 / sting-01
                                    :ARG0 c14-11
                                    :manner (c14-1 / offer-01
                                                   :ARG0 c14-11
                                                   :ARG1 (c14-3 / flag
                                                                :mod (c14-10 / religious-group
                                                                             :name (c14-8 / name
                                                                                          :op1 "Islamic")))
                                                   :ARG3 (c14-7 / sell-01
                                                                :ARG0 c14-11
                                                                :ARG1 c14-3)))
                    :manner (c14-13 / amr-unknown))
       :snt2 (c14-4 / see-01
                    :ARG0 (c14-0 / you)
                    :ARG1 c14-13
                    :mod (c14-5 / bites)
                    :mode imperative))

# ::snt yup. they also kidnapped our ambassador for -4 times and killed our intels and still US waiting..
# ::tokens ["yup", ".", "they", "also", "kidnapped", "our", "ambassador", "for", "-4", "times", "and", "killed", "our", "intels", "and", "still", "US", "waiting", ".."]
# ::lemmas ["yup", ".", "they", "also", "kidnap", "our", "ambassador", "for", "-4", "time", "and", "kill", "our", "intel", "and", "still", "US", "wait", ".."]
(c15-2 / multi-sentence
       :snt1 (c15-0 / yup)
       :snt2 (c15-14 / and
                     :op1 (c15-6 / kidnap-01
                                 :ARG0 (c15-13 / they)
                                 :ARG1 (c15-4 / ambassador
                                              :poss (c15-1 / we))
                                 :frequency (c15-10 / rate-entity-91
                                                    :ARG1 -4)
                                 :mod (c15-8 / also))
                     :op2 (c15-3 / kill-01
                                 :ARG0 c15-13
                                 :ARG1 (c15-5 / intel
                                              :poss c15-1))
                     :op3 (c15-7 / wait-01
                                 :ARG1 (c15-11 / country
                                               :name (c15-9 / name
                                                            :op1 "US"))
                                 :mod (c15-12 / still))))

# ::snt ohh..im sorry abt ur ambassador.. i remember mumbai /11..
# ::tokens ["ohh", "..", "im", "sorry", "abt", "ur", "ambassador", "..", "i", "remember", "mumbai", "/11", ".."]
# ::lemmas ["ohh", "..", "im", "sorry", "abt", "ur", "ambassador", "..", "i", "remember", "mumbai", "/11", ".."]
(c16-1 / multi-sentence
       :snt1 (c16-7 / sorry-01
                    :ARG1 (c16-3 / i)
                    :ARG2 (c16-8 / ambassador
                                 :poss c16-3)
                    :mod (c16-2 / oh
                                :mode expressive))
       :snt2 (c16-5 / remember-01
                    :ARG0 (c16-6 / i)
                    :ARG1 (c16-0 / incident
                                 :name (c16-4 / name
                                              :op1 "Mumbai"
                                              :op2 " /11"))))

# ::snt As debe de ser, ojal no haya heridos y al terrorista le vuelen la cabeza
# ::tokens ["As", "debe", "de", "ser", ",", "ojal", "no", "haya", "heridos", "y", "al", "terrorista", "le", "vuelen", "la", "cabeza"]
# ::lemmas ["as", "debe", "de", "ser", ",", "ojal", "no", "haya", "herido", "y", "al", "terrorista", "le", "vuelen", "la", "cabeza"]
(c17-11 / and
        :op1 (c17-0 / haya
                    :op1 (c17-13 / heridos)
                    :op2 (c17-9 / criminal-organization
                                :name (c17-5 / name
                                             :op1 "al"
                                             :op2 "Qaeda"))
                    :op3 (c17-6 / vuelen-01
                                :ARG1 (c17-8 / cabeza))
                    :ARG1-of (c17-10 / cause-01
                                     :ARG0 (c17-1 / be-located-at-91
                                                  :ARG1 (c17-7 / person
                                                               :name c17-5
                                                               :op1 "Ojal"))
                                     :ARG2 (c17-3 / abroad))
                    :polarity -)
        :ARG1-of (c17-12 / say-01
                         :ARG0 (c17-4 / i)
                         :ARG1-of (c17-2 / possible-01)))

# ::snt either way.. gud to know that u care..
# ::tokens ["either", "way", "..", "gud", "to", "know", "that", "u", "care", ".."]
# ::lemmas ["either", "way", "..", "gud", "to", "know", "that", "u", "care", ".."]
(c18-0 / have-condition-91
       :ARG1 (c18-6 / know-01
                    :ARG0 (c18-4 / i)
                    :ARG1 (c18-5 / care-01
                                 :ARG0 (c18-1 / you)))
       :ARG2 (c18-2 / way
                    :mod (c18-3 / either)))

# ::snt irony in that statement
# ::tokens ["irony", "in", "that", "statement"]
# ::lemmas ["irony", "in", "that", "statement"]
(c19-2 / irony
       :location (c19-0 / statement
                        :mod (c19-1 / that)))

# ::snt i guess all alive one cop might been hurt says cnn
# ::tokens ["i", "guess", "all", "alive", "one", "cop", "might", "been", "hurt", "says", "cnn"]
# ::lemmas ["i", "guess", "all", "alive", "one", "cop", "might", "be", "hurt", "say", "cnn"]
(c20-6 / say-01
       :ARG0 (c20-3 / publication
                    :name (c20-2 / name
                                 :op1 "CNN"))
       :ARG1 (c20-5 / guess-01
                    :ARG0 (c20-1 / i)
                    :ARG1 (c20-7 / possible-01
                                 :ARG1 (c20-0 / hurt-01
                                              :ARG1 (c20-4 / cop
                                                           :quant 1)))))

# ::snt Hoping for the safety of the hostages and authorities involved in this situation.
# ::tokens ["Hoping", "for", "the", "safety", "of", "the", "hostages", "and", "authorities", "involved", "in", "this", "situation", "."]
# ::lemmas ["hope", "for", "the", "safety", "of", "the", "hostage", "and", "authority", "involve", "in", "this", "situation", "."]
(c21-0 / hope-01
       :ARG1 (c21-4 / safe-01
                    :ARG1 (c21-5 / and
                                 :op1 (c21-7 / hostage)
                                 :op2 (c21-2 / authority
                                             :ARG1-of (c21-3 / involve-01
                                                             :ARG2 (c21-1 / situation
                                                                          :mod (c21-6 / this)))))))

# ::snt Five people killed in Montgomery County, Pa.; gunman sought, television station reports.
# ::tokens ["Five", "people", "killed", "in", "Montgomery", "County", ",", "Pa.", ";", "gunman", "sought", ",", "television", "station", "reports", "."]
# ::lemmas ["Five", "people", "kill", "in", "Montgomery", "County", ",", "Pa.", ";", "gunman", "seek", ",", "television", "station", "report", "."]
(c22-6 / report-01
       :ARG0 (c22-9 / station
                    :mod (c22-10 / television))
       :ARG1 (c22-11 / and
                     :op1 (c22-2 / kill-01
                                 :ARG1 (c22-5 / person
                                              :quant 5)
                                 :location (c22-7 / county
                                                  :name (c22-3 / name
                                                               :op1 "Montgomery"
                                                               :op2 "County")
                                                  :location (c22-1 / state
                                                                   :name (c22-4 / name
                                                                                :op1 "Pennsylvania"))))
                     :op2 (c22-0 / seek-01
                                 :ARG0 (c22-8 / gunman))))

# ::snt do u care..?
# ::tokens ["do", "u", "care", "..", "?"]
# ::lemmas ["do", "u", "care", "..", "?"]
(c23-1 / care-01
       :polarity (c23-2 / amr-unknown)
       :ARG0 (c23-0 / you))

# ::snt lets hope the Aussie govt thinks twice about letting spineless thugs in there country.
# ::tokens ["lets", "hope", "the", "Aussie", "govt", "thinks", "twice", "about", "letting", "spineless", "thugs", "in", "there", "country", "."]
# ::lemmas ["let", "hope", "the", "Aussie", "govt", "think", "twice", "about", "let", "spineless", "thug", "in", "there", "country", "."]
(c24-0 / hope-01
       :ARG0 (c24-1 / we)
       :ARG1 (c24-10 / think-01
                     :ARG0 (c24-6 / government-organization
                                  :ARG0-of (c24-4 / govern-01
                                                  :ARG1 (c24-5 / country
                                                               :name (c24-3 / name
                                                                            :op1 "Australia"))))
                     :ARG1 (c24-2 / let-01
                                  :ARG0 c24-6
                                  :ARG1 (c24-8 / thug
                                               :mod (c24-9 / spineless)
                                               :location (c24-7 / country)))
                     :frequency 2)
       :mode imperative)

# ::snt Blimey - who is that bloke on BBC news with the massive speculation?
# ::tokens ["Blimey", "-", "who", "is", "that", "bloke", "on", "BBC", "news", "with", "the", "massive", "speculation", "?"]
# ::lemmas ["Blimey", "-", "who", "be", "that", "bloke", "on", "BBC", "news", "with", "the", "massive", "speculation", "?"]
(c25-1 / bloke
       :mod (c25-7 / that)
       :location (c25-2 / news
                        :mod (c25-4 / publication
                                    :name (c25-3 / name
                                                 :op1 "BBC")))
       :ARG1-of (c25-6 / speculate-01
                       :mod (c25-0 / massive))
       :domain (c25-8 / amr-unknown)
       :mod (c25-5 / blimey))

# ::snt watever it is im watching this in tv nd feeling really very emotional...!!
# ::tokens ["watever", "it", "is", "i", "m", "watching", "this", "in", "tv", "nd", "feeling", "really", "very", "emotional", "...", "!", "!"]
# ::lemmas ["watever", "it", "be", "i", "m", "watch", "this", "in", "tv", "nd", "feel", "really", "very", "emotional", "...", "!", "!"]
(c26-9 / and
       :op1 (c26-8 / truth-value
                   :polarity-of (c26-0 / watch-01
                                       :ARG0 (c26-3 / i)
                                       :ARG1 (c26-7 / this)
                                       :medium (c26-4 / television)))
       :op2 (c26-1 / feel-01
                   :ARG0 c26-3
                   :ARG1 (c26-2 / emotional-02
                                :ARG1 c26-3
                                :degree (c26-5 / very
                                               :degree (c26-6 / really)))))

# ::snt oh lord let them all be alive..!!
# ::tokens ["oh", "lord", "let", "them", "all", "be", "alive", "..", "!", "!"]
# ::lemmas ["oh", "lord", "let", "they", "all", "be", "alive", "..", "!", "!"]
(c27-1 / let-01
       :ARG0 (c27-0 / you)
       :ARG1 (c27-3 / live-01
                    :ARG0 (c27-4 / they
                                 :mod (c27-5 / all)))
       :mod (c27-2 / oh
                   :mode expressive)
       :mode imperative)
