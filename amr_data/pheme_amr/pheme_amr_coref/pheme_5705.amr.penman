# ::snt That has not been proven yet
# ::tokens ["That", "has", "not", "been", "proven", "yet"]
# ::lemmas ["that", "have", "not", "be", "prove", "yet"]
(c1-1 / prove-01
      :ARG1 (c1-2 / that)
      :time (c1-0 / yet)
      :polarity -)

# ::snt Somewhere between -40% of Muskims support terror.
# ::tokens ["Somewhere", "between", "-40", "%", "of", "Muskims", "support", "terror", "."]
# ::lemmas ["somewhere", "between", "-40", "%", "of", "Muskims", "support", "terror", "."]
(c2-6 / support-01
      :ARG0 (c2-4 / person
                  :ARG1-of (c2-2 / include-91
                                 :ARG2 (c2-9 / person
                                             :mod (c2-5 / company
                                                        :name (c2-3 / name
                                                                    :op1 "Musk")))
                                 :ARG3 (c2-1 / between
                                             :op1 (c2-0 / percentage-entity
                                                        :value 40)
                                             :op2 (c2-8 / percentage-entity
                                                        :value 40))))
      :ARG1 (c2-7 / terror))

# ::snt i have to agree..we need to do our due diligence before placing blame..but...
# ::tokens ["i", "have", "to", "agree", "..", "we", "need", "to", "do", "our", "due", "diligence", "before", "placing", "blame", "..", "but", "..."]
# ::lemmas ["i", "have", "to", "agree", "..", "we", "need", "to", "do", "our", "due", "diligence", "before", "place", "blame", "..", "but", "..."]
(c3-3 / obligate-01
      :ARG1 (c3-4 / i)
      :ARG2 (c3-9 / agree-01
                  :ARG0 c3-4
                  :ARG1 c3-3
                  :ARG1 (c3-0 / we)
                  :ARG2 (c3-6 / do-02
                              :ARG0 c3-0
                              :ARG1 (c3-1 / diligence
                                          :mod (c3-10 / due)
                                          :poss c3-0)
                              :time (c3-2 / before
                                          :op1 (c3-5 / place-01
                                                     :ARG0 c3-0
                                                     :ARG1 (c3-7 / blame-01)))))
      :ARG1-of (c3-8 / contrast-01))

# ::snt German Co-pilot was a Muslim Convert
# ::tokens ["German", "Co", "-", "pilot", "was", "a", "Muslim", "Convert"]
# ::lemmas ["German", "Co", "-", "pilot", "be", "a", "Muslim", "Convert"]
(c4-3 / person
      :ARG1-of (c4-5 / convert-01
                     :ARG2 (c4-4 / religious-group
                                 :name (c4-1 / name
                                             :op1 "Muslim")))
      :domain (c4-8 / person
                    :mod (c4-6 / country
                               :name (c4-2 / name
                                           :op1 "Germany"))
                    :ARG0-of (c4-0 / pilot-01
                                   :mod (c4-7 / together))))

# ::snt This is false. It was a hoax. He wasn't.
# ::tokens ["This", "is", "false", ".", "It", "was", "a", "hoax", ".", "He", "was", "n't", "."]
# ::lemmas ["this", "be", "false", ".", "it", "be", "a", "hoax", ".", "he", "be", "not", "."]
(c5-2 / multi-sentence
      :snt1 (c5-1 / false
                  :domain (c5-4 / this))
      :snt2 (c5-0 / hoax-01
                  :ARG2 (c5-3 / it))
      :snt3 (c5-5 / he
                  :polarity -))

# ::snt Obama lies! He doesn't have to tell me anything!
# ::tokens ["Obama", "lies", "!", "He", "does", "n't", "have", "to", "tell", "me", "anything", "!"]
# ::lemmas ["Obama", "lie", "!", "he", "do", "not", "have", "to", "tell", "i", "anything", "!"]
(c6-2 / multi-sentence
      :snt1 (c6-1 / lie-08
                  :ARG0 (c6-6 / person
                              :name (c6-5 / name
                                          :op1 "Obama")))
      :snt2 (c6-3 / obligate-01
                  :ARG1 (c6-0 / he)
                  :ARG2 (c6-7 / tell-01
                              :ARG0 c6-0
                              :ARG1 (c6-8 / anything)
                              :ARG2 (c6-4 / i))
                  :polarity -))

# ::snt U should see some of what I have seen and you would understand.
# ::tokens ["U", "should", "see", "some", "of", "what", "I", "have", "seen", "and", "you", "would", "understand", "."]
# ::lemmas ["u", "should", "see", "some", "of", "what", "i", "have", "see", "and", "you", "would", "understand", "."]
(c7-10 / and
       :op1 (c7-5 / recommend-01
                  :ARG1 (c7-8 / see-01
                              :ARG0 (c7-0 / you)
                              :ARG1 (c7-9 / thing
                                          :ARG1-of (c7-4 / include-91
                                                         :ARG2 (c7-7 / thing
                                                                     :ARG1-of (c7-3 / see-01
                                                                                    :ARG0 (c7-6 / i))))
                                          :quant (c7-1 / some))))
       :op2 (c7-2 / understand-01
                  :ARG0 c7-0))

# ::snt Nobody but these dumb liberals
# ::tokens ["Nobody", "but", "these", "dumb", "liberals"]
# ::lemmas ["nobody", "but", "these", "dumb", "liberal"]
(c8-4 / contrast-01
      :ARG1 (c8-1 / nobody)
      :ARG2 (c8-2 / person
                  :ARG1-of (c8-0 / liberal-02)
                  :mod (c8-3 / dumb)
                  :mod (c8-5 / this)))

# ::snt I don't want anyone to be a go to. I just report what I find.
# ::tokens ["I", "do", "n't", "want", "anyone", "to", "be", "a", "go", "to", ".", "I", "just", "report", "what", "I", "find", "."]
# ::lemmas ["i", "do", "not", "want", "anyone", "to", "be", "a", "go", "to", ".", "i", "just", "report", "what", "i", "find", "."]
(c9-3 / multi-sentence
      :snt1 (c9-1 / want-01
                  :ARG0 (c9-4 / i)
                  :ARG1 (c9-6 / go-02
                              :ARG0 (c9-9 / anyone))
                  :polarity -)
      :snt2 (c9-5 / report-01
                  :ARG0 (c9-7 / i)
                  :ARG1 (c9-8 / thing
                              :ARG1-of (c9-2 / find-01
                                             :ARG0 c9-7))
                  :mod (c9-0 / just)))

# ::snt Lame stream media mum once again.
# ::tokens ["Lame", "stream", "media", "mum", "once", "again", "."]
# ::lemmas ["lame", "stream", "medium", "mum", "once", "again", "."]
(c10-4 / person
       :ARG0-of (c10-0 / have-rel-role-91
                       :ARG2 (c10-2 / mum))
       :mod (c10-5 / media)
       :mod (c10-1 / lame)
       :mod (c10-6 / again
                   :mod (c10-3 / once)))

# ::snt not once has this been mentioned in European news.
# ::tokens ["not", "once", "has", "this", "been", "mentioned", "in", "European", "news", "."]
# ::lemmas ["not", "once", "have", "this", "be", "mention", "in", "European", "news", "."]
(c11-0 / mention-01
       :ARG1 (c11-4 / this)
       :medium (c11-1 / news
                      :mod (c11-3 / continent
                                  :name (c11-2 / name
                                               :op1 "Europe")))
       :polarity -)

# ::snt ok...Roger that...be quiet now and let the investigation run its course
# ::tokens ["ok", "...", "Roger", "that", "...", "be", "quiet", "now", "and", "let", "the", "investigation", "run", "its", "course"]
# ::lemmas ["ok", "...", "Roger", "that", "...", "be", "quiet", "now", "and", "let", "the", "investigation", "run", "its", "course"]
(c12-2 / multi-sentence
       :snt1 (c12-3 / okay-04
                    :ARG1 (c12-10 / that))
       :snt2 (c12-11 / and
                     :op1 (c12-8 / Roger-01
                                 :ARG0 (c12-0 / you)
                                 :ARG1 c12-10
                                 :mode imperative))
       :op2 (c12-4 / quiet-03
                   :ARG0 c12-0
                   :ARG1 c12-0
                   :time (c12-7 / now)
                   :mode imperative)
       :op3 (c12-1 / let-01
                   :ARG0 c12-0
                   :ARG1 (c12-6 / run-10
                                :ARG1 (c12-5 / investigate-01)
                                :ARG2 (c12-9 / course))
                   :mode imperative))

# ::snt Who is really surprised these days.
# ::tokens ["Who", "is", "really", "surprised", "these", "days", "."]
# ::lemmas ["who", "be", "really", "surprised", "these", "days", "."]
(c13-2 / surprise-01
       :ARG1 (c13-4 / amr-unknown)
       :degree (c13-0 / really)
       :time (c13-1 / day
                    :mod (c13-3 / this)))

# ::snt I knew it!!! I had a gut feeling&amp;brought it up b4they found the blackbox
# ::tokens ["I", "knew", "it", "!", "!", "!", "I", "had", "a", "gut", "feeling&amp;brought", "it", "up", "b4they", "found", "the", "blackbox"]
# ::lemmas ["i", "know", "it", "!", "!", "!", "i", "have", "a", "gut", "feeling&amp;brought", "it", "up", "b4they", "find", "the", "blackbox"]
(c14-1 / multi-sentence
       :snt1 (c14-13 / know-01
                     :ARG0 (c14-6 / i)
                     :ARG1 (c14-9 / it))
       :snt2 (c14-14 / and
                     :op1 (c14-0 / feel-01
                                 :ARG0 (c14-2 / i)
                                 :ARG1 (c14-10 / gut))
                     :op2 (c14-5 / amp)
                     :op3 (c14-3 / bring-up-02
                                 :ARG0 c14-2
                                 :ARG1 (c14-4 / it))
                     :ARG1-of (c14-8 / cause-01
                                     :ARG0 (c14-7 / find-01
                                                  :ARG0 (c14-12 / they)
                                                  :ARG1 (c14-11 / blackbox)))))

# ::snt It came from the German news. Read the article
# ::tokens ["It", "came", "from", "the", "German", "news", ".", "Read", "the", "article"]
# ::lemmas ["it", "come", "from", "the", "German", "news", ".", "read", "the", "article"]
(c15-1 / multi-sentence
       :snt1 (c15-6 / come-01
                    :ARG1 (c15-2 / it)
                    :ARG3 (c15-3 / news
                                 :mod (c15-5 / country
                                             :name (c15-4 / name
                                                          :op1 "Germany"))))
       :snt2 (c15-7 / read-01
                    :ARG0 (c15-0 / you)
                    :ARG1 (c15-8 / article)
                    :mode imperative))

# ::snt The extreme Muslims. So sad others don't speak against them in large number
# ::tokens ["The", "extreme", "Muslims", ".", "So", "sad", "others", "do", "n't", "speak", "against", "them", "in", "large", "number"]
# ::lemmas ["the", "extreme", "Muslims", ".", "so", "sad", "other", "do", "not", "speak", "against", "they", "in", "large", "number"]
(c16-1 / multi-sentence
       :snt1 (c16-8 / person
                    :mod (c16-9 / religious-group
                                :name (c16-6 / name
                                             :op1 "Islam"))
                    :mod (c16-4 / extreme))
       :snt2 (c16-10 / speak-01
                     :ARG0 (c16-3 / other)
                     :ARG1 (c16-12 / against
                                   :op1 (c16-11 / they))
                     :quant (c16-7 / number
                                   :mod (c16-0 / large))
                     :ARG0-of (c16-5 / sad-02
                                     :degree (c16-2 / so))
                     :polarity -))

# ::snt we also need to accept when our due diligence confirms our initial belief..
# ::tokens ["we", "also", "need", "to", "accept", "when", "our", "due", "diligence", "confirms", "our", "initial", "belief", ".."]
# ::lemmas ["we", "also", "need", "to", "accept", "when", "our", "due", "diligence", "confirm", "our", "initial", "belief", ".."]
(c17-3 / obligate-01
       :ARG1 (c17-0 / we)
       :ARG2 (c17-9 / accept-01
                    :ARG0 c17-0
                    :time (c17-7 / confirm-01
                                 :ARG0 (c17-6 / diligence
                                              :mod (c17-1 / due)
                                              :poss c17-0)
                                 :ARG1 (c17-8 / thing
                                              :ARG1-of (c17-2 / believe-01
                                                              :ARG0 c17-0
                                                              :time (c17-5 / initial)))))
       :mod (c17-4 / also))

# ::snt They being all Muslims or just the extremists? Or are they one and the same
# ::tokens ["They", "being", "all", "Muslims", "or", "just", "the", "extremists", "?", "Or", "are", "they", "one", "and", "the", "same"]
# ::lemmas ["they", "be", "all", "Muslims", "or", "just", "the", "extremist", "?", "or", "be", "they", "one", "and", "the", "same"]
(c19-1 / multi-sentence
       :snt1 (c19-11 / amr-choice
                     :op1 (c19-6 / person
                                 :mod (c19-7 / religious-group
                                             :name (c19-5 / name
                                                          :op1 "Islam"))
                                 :domain (c19-10 / they)
                                 :mod (c19-4 / all))
                     :op2 (c19-3 / extremist
                                 :mod (c19-0 / just)
                                 :domain c19-10))
       :snt2 (c19-2 / or
                    :op2 (c19-9 / same-01
                                :ARG1 (c19-8 / they))))

# ::snt being reported here yet either. Always hit twitter first.
# ::tokens ["being", "reported", "here", "yet", "either", ".", "Always", "hit", "twitter", "first", "."]
# ::lemmas ["be", "report", "here", "yet", "either", ".", "always", "hit", "twitter", "first", "."]
(c20-2 / multi-sentence
       :snt1 (c20-7 / report-01
                    :location (c20-0 / here)
                    :mod (c20-4 / either)
                    :time (c20-1 / yet))
       :snt2 (c20-10 / hit-02
                     :ARG0 (c20-8 / you)
                     :ARG1 (c20-6 / publication
                                  :name (c20-5 / name
                                               :op1 "Twitter"))
                     :time (c20-9 / always)
                     :ord (c20-3 / ordinal-entity
                                 :value 1)
                     :mode imperative))

# ::snt agreed. And at the moment there is NOTHING to suggest this was religion-related.
# ::tokens ["agreed", ".", "And", "at", "the", "moment", "there", "is", "NOTHING", "to", "suggest", "this", "was", "religion", "-", "related", "."]
# ::lemmas ["agree", ".", "and", "at", "the", "moment", "there", "be", "nothing", "to", "suggest", "this", "be", "religion", "-", "relate", "."]
(c21-0 / multi-sentence
       :snt1 (c21-8 / agree-01)
       :snt2 (c21-1 / and
                    :op2 (c21-3 / nothing
                                :ARG0-of (c21-6 / suggest-01
                                                :ARG1 (c21-5 / relate-01
                                                             :ARG1 (c21-7 / this)
                                                             :ARG2 (c21-2 / religion))
                                                :time (c21-4 / moment)))))

# ::snt Been expecting that. Thank you!
# ::tokens ["Been", "expecting", "that", ".", "Thank", "you", "!"]
# ::lemmas ["been", "expect", "that", ".", "thank", "you", "!"]
(c22-1 / multi-sentence
       :snt1 (c22-2 / expect-01
                    :ARG0 (c22-3 / i)
                    :ARG1 (c22-5 / that))
       :snt2 (c22-4 / thank-01
                    :ARG0 c22-3
                    :ARG1 (c22-0 / you)
                    :mode expressive))

# ::snt Maybe if they just stopped killing ?
# ::tokens ["Maybe", "if", "they", "just", "stopped", "killing", "?"]
# ::lemmas ["maybe", "if", "they", "just", "stop", "kill", "?"]
(c23-2 / possible-01
       :polarity (c23-5 / amr-unknown)
       :condition (c23-3 / stop-01
                         :ARG0 (c23-4 / they)
                         :ARG1 (c23-1 / kill-01
                                      :ARG0 c23-4)
                         :mod (c23-0 / just)))

# ::snt &lt;&lt;&lt;&lt;U don't know me to call me names! Read the article and go after who wrote it.
# ::tokens ["&", "lt;&lt;&lt;&lt;U", "do", "n't", "know", "me", "to", "call", "me", "names", "!", "Read", "the", "article", "and", "go", "after", "who", "wrote", "it", "."]
# ::lemmas ["&", "lt;&lt;&lt;&lt;U", "do", "not", "know", "i", "to", "call", "i", "name", "!", "read", "the", "article", "and", "go", "after", "who", "write", "it", "."]
(c24-2 / multi-sentence
       :snt1 (c24-10 / know-01
                     :ARG0 (c24-0 / you)
                     :ARG1 (c24-8 / call-01
                                  :ARG0 c24-0
                                  :ARG1 (c24-4 / i)
                                  :ARG2 (c24-5 / name))
                     :polarity -)
       :snt2 (c24-11 / and
                     :op1 (c24-7 / read-01
                                 :ARG0 c24-0
                                 :mode imperative)
                     :ARG1 (c24-3 / article))
       :op2 (c24-9 / go-03
                   :ARG0 c24-0
                   :ARG1 (c24-6 / person
                                :ARG0-of (c24-1 / write-01
                                                :ARG1 c24-3))
                   :mode imperative))

# ::snt God help America and rest of the world with fuckwits like you.
# ::tokens ["God", "help", "America", "and", "rest", "of", "the", "world", "with", "fuckwits", "like", "you", "."]
# ::lemmas ["God", "help", "America", "and", "rest", "of", "the", "world", "with", "fuckwit", "like", "you", "."]
(c25-0 / help-01
       :ARG0 (c25-7 / person
                    :name (c25-5 / name
                                 :op1 "God"))
       :ARG1 (c25-10 / and
                     :op1 (c25-9 / country
                                 :name (c25-6 / name
                                              :op1 "America"))
                     :op2 (c25-8 / rest
                                 :part-of (c25-1 / world)))
       :ARG2 (c25-3 / fuckwit
                    :ARG1-of (c25-4 / resemble-01
                                    :ARG2 (c25-2 / you))))

# ::snt as I said, not once has this been reported on European news outlets.
# ::tokens ["as", "I", "said", ",", "not", "once", "has", "this", "been", "reported", "on", "European", "news", "outlets", "."]
# ::lemmas ["as", "i", "say", ",", "not", "once", "have", "this", "be", "report", "on", "European", "news", "outlet", "."]
(c26-4 / report-01
       :ARG1 (c26-7 / this)
       :ARG2 (c26-0 / outlet
                    :mod (c26-2 / news)
                    :mod (c26-5 / continent
                                :name (c26-3 / name
                                             :op1 "Europe")))
       :ARG1-of (c26-6 / say-01
                       :ARG0 (c26-1 / i))
       :polarity -
       :frequency 1)

# ::snt Ban islam&amp;mosques. Deport muslims. Shoot rioters&amp;looters Hang terrorists
# ::tokens ["Ban", "islam&amp;mosques", ".", "Deport", "muslims", ".", "Shoot", "rioters&amp;looters", "Hang", "terrorists"]
# ::lemmas ["Ban", "islam&amp;mosque", ".", "Deport", "muslims", ".", "shoot", "rioters&amp;looter", "hang", "terrorist"]
(c27-0 / multi-sentence
       :snt1 (c27-6 / and
                    :op1 (c27-10 / ban-01
                                 :ARG0 (c27-17 / you)
                                 :ARG1 (c27-16 / and
                                               :op1 (c27-15 / religious-group
                                                            :name (c27-12 / name
                                                                          :op1 "Islam"))
                                               :op2 (c27-14 / mosque))
                                 :mode imperative)
                    :op2 (c27-3 / deport-01
                                :ARG0 c27-17
                                :ARG1 (c27-2 / person
                                             :mod (c27-1 / religious-group
                                                         :name (c27-18 / name
                                                                       :op1 "Muslim")))
                                :mode imperative))
       :snt2 (c27-4 / shoot-02
                    :ARG0 (c27-19 / you)
                    :mode imperative)
       :snt3 (c27-7 / hang-01
                    :ARG0 (c27-13 / and
                                  :op1 (c27-5 / person
                                              :ARG0-of (c27-11 / riot-01))
                                  :op2 (c27-9 / person
                                              :ARG0-of (c27-8 / loot-01)))
                    :ARG1 (c27-20 / terrorist)))

# ::snt Equally sad some choose not to listen.
# ::tokens ["Equally", "sad", "some", "choose", "not", "to", "listen", "."]
# ::lemmas ["equally", "sad", "some", "choose", "not", "to", "listen", "."]
(c28-4 / sad-02
       :ARG1 (c28-3 / choose-01
                    :ARG0 (c28-1 / some)
                    :ARG1 (c28-0 / listen-01
                                 :ARG0 c28-1
                                 :polarity -))
       :mod (c28-2 / equilateral))

# ::snt I am sick of Muslims being the go-to cause of everything. Stirs up hatred further.
# ::tokens ["I", "am", "sick", "of", "Muslims", "being", "the", "go", "-", "to", "cause", "of", "everything", ".", "Stirs", "up", "hatred", "further", "."]
# ::lemmas ["i", "be", "sick", "of", "Muslims", "be", "the", "go", "-", "to", "cause", "of", "everything", ".", "stir", "up", "hatred", "far", "."]
(c29-2 / multi-sentence
       :snt1 (c29-11 / sick-04
                     :ARG0 (c29-10 / go-06
                                   :ARG0 (c29-7 / person
                                                :mod (c29-8 / religious-group
                                                            :name (c29-6 / name
                                                                         :op1 "Islam")))
                                   :ARG1 (c29-9 / cause-01
                                                :ARG0 c29-7
                                                :ARG1 (c29-3 / everything)))
                     :ARG1 (c29-5 / i))
       :snt2 (c29-4 / stir-up-04
                    :ARG1 (c29-0 / hate-01)
                    :degree (c29-1 / further)))
