# ::snt : Reuters: One gunman has been shot dead inside Canadian parliament building wtffff
# ::tokens [":", "Reuters", ":", "One", "gunman", "has", "been", "shot", "dead", "inside", "Canadian", "parliament", "building", "wtffff"]
# ::lemmas [":", "Reuters", ":", "One", "gunman", "have", "be", "shoot", "dead", "inside", "Canadian", "parliament", "building", "wtffff"]
(c1-10 / say-01
       :ARG0 (c1-5 / publication
                   :name (c1-3 / name
                               :op1 "Reuters"))
       :ARG1 (c1-1 / shoot-02
                   :ARG1 (c1-8 / gunman
                               :quant 1)
                   :ARG0-of (c1-7 / cause-01
                                  :ARG1 (c1-6 / die-01
                                              :ARG1 c1-8))
                   :location (c1-2 / inside
                                   :op1 (c1-0 / building
                                              :part-of (c1-9 / government-organization
                                                             :name (c1-4 / name
                                                                         :op1 "Canadian"
                                                                         :op2 "Parliament"))))))

# ::snt hope it was
# ::tokens ["hope", "it", "was"]
# ::lemmas ["hope", "it", "be"]
(c2-0 / hope-01
      :ARG0 (c2-2 / i)
      :ARG1 (c2-1 / it))

# ::snt Ottowa.bet it was D.despicable.I.indiscriminate.S.stupid IS.C.condemnated.O.ooo..oops that was Ottowan..they even attack music
# ::tokens ["Ottowa.bet", "it", "was", "D.despicable.I.indiscriminate.S.stupid", "IS.C.condemnated", ".", "O.ooo", "..", "oops", "that", "was", "Ottowan", "..", "they", "even", "attack", "music"]
# ::lemmas ["Ottowa.bet", "it", "be", "d.despicable.i.indiscriminate.s.stupid", "IS.C.condemnated", ".", "O.ooo", "..", "oop", "that", "be", "Ottowan", "..", "they", "even", "attack", "music"]
(c3-0 / multi-sentence
      :snt1 (c3-16 / city
                   :name (c3-9 / name
                               :op1 "Ottow"))
      :snt2 (c3-6 / and
                  :op1 (c3-7 / bet-01
                             :ARG0 c3-16
                             :name (c3-15 / name
                                          :op1 "Ottow"))
                  :ARG2 (c3-2 / possible-01
                              :ARG1 (c3-12 / assassinate-01
                                           :ARG1 (c3-13 / i))
                              :polarity -))
      :op2 (c3-10 / accuse-01
                  :ARG1 c3-13
                  :mod (c3-4 / stupid))
      :op3 (c3-3 / condemn-01
                 :ARG1 (c3-5 / person
                             :name (c3-1 / name
                                         :op1 "IS.C.")))
      :snt3 (c3-14 / oops
                   :snt4-of c3-0
                   :mode expressive)
      :snt5 (c3-17 / attack-01
                   :ARG0 (c3-18 / they)
                   :ARG1 (c3-11 / music)
                   :mod (c3-8 / even))
      :mode expressive)

# ::snt : Reuters: One gunman has been shot dead inside Canadian parliament building
# ::tokens [":", "Reuters", ":", "One", "gunman", "has", "been", "shot", "dead", "inside", "Canadian", "parliament", "building"]
# ::lemmas [":", "Reuters", ":", "One", "gunman", "have", "be", "shoot", "dead", "inside", "Canadian", "parliament", "building"]
(c4-10 / say-01
       :ARG0 (c4-5 / publication
                   :name (c4-3 / name
                               :op1 "Reuters"))
       :ARG1 (c4-1 / shoot-02
                   :ARG1 (c4-8 / gunman
                               :quant 1)
                   :ARG0-of (c4-7 / cause-01
                                  :ARG1 (c4-6 / die-01
                                              :ARG1 c4-8))
                   :location (c4-2 / inside
                                   :op1 (c4-0 / building
                                              :part-of (c4-9 / government-organization
                                                             :name (c4-4 / name
                                                                         :op1 "Canadian"
                                                                         :op2 "Parliament"))))))

# ::snt yeah but id be really suprised if its not, its not crazy guy losing it is it
# ::tokens ["yeah", "but", "i", "d", "be", "really", "suprised", "if", "its", "not", ",", "its", "not", "crazy", "guy", "losing", "it", "is", "it"]
# ::lemmas ["yeah", "but", "i", "d", "be", "really", "suprised", "if", "its", "not", ",", "its", "not", "crazy", "guy", "lose", "it", "be", "it"]
(c5-5 / contrast-01
      :ARG1 (c5-1 / yeah)
      :ARG2 (c5-9 / surprise-01
                  :ARG0 (c5-2 / lose-03
                              :ARG0 (c5-6 / guy
                                          :ARG1-of (c5-4 / crazy-03
                                                         :polarity -))
                              :ARG1 (c5-3 / it))
                  :ARG1 (c5-7 / i)
                  :degree (c5-8 / really)
                  :condition (c5-0 / have-polarity-91
                                   :ARG1 c5-3
                                   :ARG2 -)))

# ::snt sounds like a nd suspect shot now
# ::tokens ["sounds", "like", "a", "nd", "suspect", "shot", "now"]
# ::lemmas ["sound", "like", "a", "nd", "suspect", "shot", "now"]
(c6-5 / sound-01
      :ARG1 (c6-1 / shoot-02
                  :ARG2 (c6-3 / person
                              :ARG2-of (c6-0 / suspect-01)
                              :mod (c6-4 / dear))
                  :time (c6-2 / now)))

# ::snt Thanks. I can't believe it....
# ::tokens ["Thanks", ".", "I", "ca", "n't", "believe", "it", "...."]
# ::lemmas ["thank", ".", "i", "can", "not", "believe", "it", "...."]
(c7-2 / multi-sentence
      :snt1 (c7-7 / thank-01
                  :ARG0 (c7-4 / i)
                  :ARG1 (c7-0 / you))
      :snt2 (c7-5 / possible-01
                  :ARG1 (c7-3 / believe-01
                              :ARG0 (c7-6 / i)
                              :ARG1 (c7-1 / it))
                  :polarity -))

# ::snt Not saying that it's that or that it isn't, just I'd rather wait to see what it is exactly...
# ::tokens ["Not", "saying", "that", "it", "'s", "that", "or", "that", "it", "is", "n't", ",", "just", "I", "'d", "rather", "wait", "to", "see", "what", "it", "is", "exactly", "..."]
# ::lemmas ["not", "say", "that", "it", "be", "that", "or", "that", "it", "be", "not", ",", "just", "i", "would", "rather", "wait", "to", "see", "what", "it", "be", "exactly", "..."]
(c8-8 / contrast-01
      :ARG1 (c8-11 / say-01
                   :ARG0 (c8-5 / i)
                   :ARG1 (c8-2 / or
                               :op1 (c8-12 / that)
                               :op2 (c8-10 / that
                                           :polarity -))
                   :polarity -)
      :ARG2 (c8-7 / prefer-01
                  :ARG0 c8-5
                  :ARG1 (c8-1 / wait-01
                              :ARG1 c8-5
                              :ARG2 (c8-3 / see-01
                                          :ARG0 c8-5
                                          :ARG1 (c8-6 / thing
                                                      :domain (c8-9 / it)
                                                      :mod (c8-4 / exact))))
                  :mod (c8-0 / just)))

# ::snt : Reuters: One gunman has been shot dead inside Canadian parliament building
# ::tokens [":", "Reuters", ":", "One", "gunman", "has", "been", "shot", "dead", "inside", "Canadian", "parliament", "building"]
# ::lemmas [":", "Reuters", ":", "One", "gunman", "have", "be", "shoot", "dead", "inside", "Canadian", "parliament", "building"]
(c10-10 / say-01
        :ARG0 (c10-5 / publication
                     :name (c10-3 / name
                                  :op1 "Reuters"))
        :ARG1 (c10-1 / shoot-02
                     :ARG1 (c10-8 / gunman
                                  :quant 1)
                     :ARG0-of (c10-7 / cause-01
                                     :ARG1 (c10-6 / die-01
                                                  :ARG1 c10-8))
                     :location (c10-2 / inside
                                      :op1 (c10-0 / building
                                                  :part-of (c10-9 / government-organization
                                                                  :name (c10-4 / name
                                                                               :op1 "Canadian"
                                                                               :op2 "Parliament"))))))

# ::snt If this turns out to be a Jihadist, may the world wake up !
# ::tokens ["If", "this", "turns", "out", "to", "be", "a", "Jihadist", ",", "may", "the", "world", "wake", "up", "!"]
# ::lemmas ["if", "this", "turn", "out", "to", "be", "a", "Jihadist", ",", "may", "the", "world", "wake", "up", "!"]
(c11-3 / possible-01
       :ARG1 (c11-1 / wake-up-02
                    :ARG1 (c11-2 / world))
       :condition (c11-5 / turn-out-11
                         :ARG1 (c11-4 / this)
                         :ARG2 (c11-6 / person
                                      :mod (c11-0 / jihad)))
       :mode expressive)

# ::snt So there is more than shooter?
# ::tokens ["So", "there", "is", "more", "than", "shooter", "?"]
# ::lemmas ["so", "there", "be", "more", "than", "shooter", "?"]
(c12-2 / cause-01
       :ARG1 (c12-0 / more-than
                    :polarity (c12-4 / amr-unknown)
                    :op1 (c12-1 / person
                                :ARG0-of (c12-3 / shoot-02))))

# ::snt good!
# ::tokens ["good", "!"]
# ::lemmas ["good", "!"]
(c13-0 / good-02
       :mode expressive)

# ::snt There was more than one?
# ::tokens ["There", "was", "more", "than", "one", "?"]
# ::lemmas ["there", "be", "more", "than", "one", "?"]
(c14-1 / thing
       :polarity (c14-2 / amr-unknown)
       :quant (c14-0 / more-than
                     :op1 1))

# ::snt There is no concrete indication yet that this incident has any connection with ISIS, correct?
# ::tokens ["There", "is", "no", "concrete", "indication", "yet", "that", "this", "incident", "has", "any", "connection", "with", "ISIS", ",", "correct", "?"]
# ::lemmas ["there", "be", "no", "concrete", "indication", "yet", "that", "this", "incident", "have", "any", "connection", "with", "ISIS", ",", "correct", "?"]
(c15-1 / indicate-01
       :ARG1 (c15-4 / connect-01
                    :ARG1 (c15-5 / incident
                                 :mod (c15-8 / this))
                    :ARG2 (c15-3 / criminal-organization
                                 :name (c15-2 / name
                                              :op1 "Islamic"
                                              :op2 "organization"))
                    :mod (c15-9 / any))
       :ARG1-of (c15-7 / concrete-02)
       :time (c15-0 / yet)
       :ARG1-of (c15-6 / request-confirmation-91)
       :polarity -)

# ::snt I expected it given ISIS threats I just wouldnt think Canada would be the first
# ::tokens ["I", "expected", "it", "given", "ISIS", "threats", "I", "just", "would", "nt", "think", "Canada", "would", "be", "the", "first"]
# ::lemmas ["i", "expect", "it", "give", "ISIS", "threat", "i", "just", "would", "not", "think", "Canada", "would", "be", "the", "first"]
(c16-12 / and
        :op1 (c16-2 / expect-01
                    :ARG0 (c16-3 / i)
                    :ARG1 (c16-8 / it)
                    :ARG1-of (c16-7 / cause-01
                                    :ARG0 (c16-11 / threaten-01
                                                  :ARG0 (c16-6 / criminal-organization
                                                               :name (c16-4 / name
                                                                            :op1 "Islamic"
                                                                            :op2 "organization")))))
        :op2 (c16-9 / think-01
                    :ARG0 c16-3
                    :ARG1 (c16-10 / country
                                  :ord (c16-1 / ordinal-entity
                                              :value 1)
                                  :domain (c16-13 / country
                                                  :name (c16-5 / name
                                                               :op1 "Canada")))
                    :mod (c16-0 / just)
                    :polarity -))
