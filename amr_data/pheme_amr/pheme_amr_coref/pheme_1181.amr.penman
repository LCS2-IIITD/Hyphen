# ::snt this is terrible prayers for victims
# ::tokens ["this", "is", "terrible", "prayers", "for", "victims"]
# ::lemmas ["this", "be", "terrible", "prayer", "for", "victim"]
(c1-1 / pray-01
      :ARG1 (c1-2 / this)
      :ARG2 (c1-0 / victim)
      :ARG1-of (c1-3 / terrible-01))

# ::snt : cartoonists killed:- Charb- Cabu- Tignous- Georges Wolinski
# ::tokens [":", "cartoonists", "killed:-", "Charb-", "Cabu-", "Tignous-", "Georges", "Wolinski"]
# ::lemmas [":", "cartoonist", "killed:-", "Charb-", "Cabu-", "Tignous-", "Georges", "Wolinski"]
(c2-2 / kill-01
      :ARG1 (c2-1 / cartoonist
                  :name (c2-0 / name
                              :op1 "Charb-Cabu-Tignous-Georges"
                              :op2 "Wolinski")))

# ::snt Not just "killed", murdered in cold-blood
# ::tokens ["Not", "just", "\"", "killed", "\"", ",", "murdered", "in", "cold", "-", "blood"]
# ::lemmas ["not", "just", "\"", "kill", "\"", ",", "murder", "in", "cold", "-", "blood"]
(c3-4 / contrast-01
      :ARG1 (c3-5 / kill-01
                  :mod (c3-0 / just
                             :polarity -))
      :ARG2 (c3-1 / murder-01
                  :manner (c3-2 / blood
                                :ARG1-of (c3-3 / cold-01))))

# ::snt : cartoonists killed:- Charb- Cabu- Tignous- Georges Wolinski
# ::tokens [":", "cartoonists", "killed:-", "Charb-", "Cabu-", "Tignous-", "Georges", "Wolinski"]
# ::lemmas [":", "cartoonist", "killed:-", "Charb-", "Cabu-", "Tignous-", "Georges", "Wolinski"]
(c4-2 / kill-01
      :ARG1 (c4-1 / cartoonist
                  :name (c4-0 / name
                              :op1 "Charb-Cabu-Tignous-Georges"
                              :op2 "Wolinski")))

# ::snt And anonymous. RT:4 cartoonists killed:- Charb- Cabu- Tignous- Wolinski
# ::tokens ["And", "anonymous", ".", "RT:4", "cartoonists", "killed:-", "Charb-", "Cabu-", "Tignous-", "Wolinski"]
# ::lemmas ["and", "anonymous", ".", "RT:4", "cartoonist", "killed:-", "Charb-", "Cabu-", "Tignous-", "Wolinski"]
(c5-0 / multi-sentence
      :snt1 (c5-7 / and
                  :op2 (c5-1 / anonymous))
      :snt2 (c5-6 / kill-01
                  :ARG1 (c5-5 / cartoonist
                              :name (c5-2 / name
                                          :op1 "Charb-Cabu-Tignous-Wolinski")
                              :quant 4)
                  :medium (c5-4 / publication
                                :name (c5-3 / name
                                            :op1 "RT:"))))

# ::snt sad so sad
# ::tokens ["sad", "so", "sad"]
# ::lemmas ["sad", "so", "sad"]
(c7-0 / sad-02
      :degree (c7-1 / so))

# ::snt We will never forget you.
# ::tokens ["We", "will", "never", "forget", "you", "."]
# ::lemmas ["we", "will", "never", "forget", "you", "."]
(c8-2 / forget-01
      :ARG0 (c8-0 / we)
      :ARG1 (c8-3 / you)
      :time (c8-1 / ever)
      :polarity -)

# ::snt PPY GODFATHER YAPIP BEN KORKUTABLECENZ M SANDINIZ OLUM. FKRLERE KURUN LEMEZ UZAA
# ::tokens ["PPY", "GODFATHER", "YAPIP", "BEN", "KORKUTABLECENZ", "M", "SANDINIZ", "OLUM", ".", "FKRLERE", "KURUN", "LEMEZ", "UZAA"]
# ::lemmas ["PPY", "GODFATHER", "yapip", "BEN", "KORKUTABLECENZ", "M", "SANDINIZ", "olum", ".", "FKRLERE", "KURUN", "LEMEZ", "UZAA"]
(c9-2 / multi-sentence
      :snt1 (c9-7 / person
                  :name (c9-5 / name
                              :op1 "Yapip"
                              :op2 "Ben"
                              :op3 "KORKUTABLECENZ")
                  :mod (c9-12 / person
                              :name (c9-6 / name
                                          :op1 "God")
                              :mode expressive))
      :snt2 (c9-3 / person
                  :name (c9-8 / name
                              :op1 "SANDINIZ"
                              :op2 "OLUM"))
      :snt3 (c9-1 / fuck-01
                  :location (c9-9 / city
                                  :name (c9-10 / name
                                               :op1 "Fleck"))
                  :mode expressive)
      :snt4 (c9-11 / person
                   :name (c9-13 / name
                                :op1 "Fleck"))
      :snt5 (c9-4 / person
                  :name (c9-0 / name
                              :op1 "UzAA")))

# ::snt : ilustradores asesinados:- Charb- Cabu- Tignous- Georges Wolinski
# ::tokens [":", "ilustradores", "asesinados:-", "Charb-", "Cabu-", "Tignous-", "Georges", "Wolinski"]
# ::lemmas [":", "ilustradore", "asesinados:-", "charb-", "Cabu-", "Tignous-", "Georges", "Wolinski"]
(c10-2 / island
       :name (c10-3 / name
                    :op1 "Ilustradores"
                    :op2 "Asesinados")
       :ARG1-of (c10-0 / mean-01
                       :ARG2 (c10-9 / and
                                    :op1 (c10-5 / person
                                                :name (c10-4 / name
                                                             :op1 "Charb"))
                                    :op2 (c10-8 / person
                                                :name (c10-6 / name
                                                             :op1 "Cabu"))
                                    :op3 (c10-1 / person
                                                :name (c10-7 / name
                                                             :op1 "Georges"
                                                             :op2 "Wolinski")))))

# ::snt Cabu was a cartoonist in my generation TV children show...its going to impact so much please
# ::tokens ["Cabu", "was", "a", "cartoonist", "in", "my", "generation", "TV", "children", "show", "...", "its", "going", "to", "impact", "so", "much", "please"]
# ::lemmas ["Cabu", "be", "a", "cartoonist", "in", "my", "generation", "tv", "child", "show", "...", "its", "go", "to", "impact", "so", "much", "please"]
(c11-2 / multi-sentence
       :snt1 (c11-8 / cartoonist
                    :domain (c11-6 / person
                                   :name (c11-5 / name
                                                :op1 "Cabu"))
                    :prep-in (c11-12 / show-04
                                     :ARG1 (c11-7 / child)
                                     :mod (c11-13 / television)
                                     :mod (c11-9 / generation
                                                 :poss (c11-4 / i))))
       :snt2 (c11-10 / impact-01
                     :ARG0 (c11-1 / it)
                     :ARG1-of (c11-0 / have-quant-91
                                     :ARG2 (c11-11 / much)
                                     :ARG3 (c11-3 / so))
                     :polite +))

# ::snt Please RT - Download a hilarious FREE Koran PARODY for infidels of all ages -
# ::tokens ["Please", "RT", "-", "Download", "a", "hilarious", "FREE", "Koran", "PARODY", "for", "infidels", "of", "all", "ages", "-"]
# ::lemmas ["please", "RT", "-", "Download", "a", "hilarious", "FREE", "Koran", "PARODY", "for", "infidel", "of", "all", "age", "-"]
(c12-10 / and
        :op1 (c12-9 / read-01
                    :ARG0 (c12-1 / you)
                    :ARG1 (c12-8 / publication
                                 :name (c12-6 / name
                                              :op1 "Koran")
                                 :ARG1-of (c12-2 / free-03)
                                 :beneficiary (c12-4 / infidelity
                                                     :mod (c12-3 / age
                                                                 :mod (c12-7 / all)))
                                 :mod (c12-0 / hilarious))
                    :mode imperative
                    :polite +)
        :op2 (c12-5 / reply-01
                    :ARG0 c12-1
                    :ARG2 c12-8
                    :mode imperative
                    :polite +))

# ::snt Assassinated. As by the original muslim assassins, the "hashishim"
# ::tokens ["Assassinated", ".", "As", "by", "the", "original", "muslim", "assassins", ",", "the", "\"", "hashishim", "\""]
# ::lemmas ["assassinate", ".", "as", "by", "the", "original", "muslim", "assassin", ",", "the", "\"", "hashishim", "\""]
(c13-1 / multi-sentence
       :snt1 (c13-9 / assassinate-01
                    :ARG1-of (c13-3 / Associate-01))
       :snt2 (c13-0 / hashishim
                    :ARG1-of (c13-8 / resemble-01
                                    :ARG2 (c13-6 / assassinate-01
                                                 :ARG0 (c13-7 / person
                                                              :mod (c13-4 / religious-group
                                                                          :name (c13-5 / name
                                                                                       :op1 "Islam"))
                                                              :mod (c13-2 / original))))))

# ::snt incredibly saddened by this
# ::tokens ["incredibly", "saddened", "by", "this"]
# ::lemmas ["incredibly", "sadden", "by", "this"]
(c14-0 / sadden-01
       :ARG0 (c14-1 / this)
       :ARG1 (c14-3 / i)
       :degree (c14-2 / incredible))

# ::snt Intelligenti e,liberi ,Assassini orrendi, incapaci di sopportare una vignetta,, cervelli malati,li hanno uccisi.
# ::tokens ["Intelligenti", "e", ",", "liberi", ",", "Assassini", "orrendi", ",", "incapaci", "di", "sopportare", "una", "vignetta", ",", ",", "cervelli", "malati", ",", "li", "hanno", "uccisi", "."]
# ::lemmas ["intelligenti", "e", ",", "liberi", ",", "Assassini", "orrendi", ",", "incapaci", "di", "sopportare", "una", "vignetta", ",", ",", "cervelli", "malati", ",", "li", "hanno", "uccisi", "."]
(c15-2 / multi-sentence
       :snt1 (c15-16 / and
                     :op1 (c15-5 / intelligent-01)
                     :op2 (c15-1 / liberal-02)
                     :op3 (c15-8 / person
                                 :name (c15-6 / name
                                              :op1 "Assassini"))
                     :op4 (c15-15 / person
                                  :name (c15-7 / name
                                               :op1 "Orrendi"))
                     :op5 (c15-10 / capable-01
                                  :ARG2 (c15-13 / sopporto-00
                                                :ARG1 (c15-9 / vignetta
                                                             :mod (c15-3 / un)))
                                  :polarity -))
       :snt2 (c15-4 / person
                    :ARG0-of (c15-11 / malati-00)
                    :mod (c15-12 / cervelli))
       :snt3 (c15-0 / hanno-usi-00
                    :ARG1 (c15-14 / uccisi)))

# ::snt que horror...
# ::tokens ["que", "horror", "..."]
# ::lemmas ["que", "horror", "..."]
(c16-0 / horror
       :mod (c16-1 / que)
       :mode expressive)

# ::snt konuma len teneke bi gn bende skcam azna grcen babam dava etcek zaten seni aleyhine karikatr iziyon diye
# ::tokens ["konuma", "len", "teneke", "bi", "gn", "bende", "skcam", "azna", "grcen", "babam", "dava", "etcek", "zaten", "seni", "aleyhine", "karikatr", "iziyon", "diye"]
# ::lemmas ["konuma", "len", "teneke", "bi", "gn", "bende", "skcam", "azna", "grcen", "babam", "dava", "etcek", "zaten", "seni", "aleyhine", "karikatr", "iziyon", "diye"]
(c17-6 / and
       :op1 (c17-5 / string-entity
                   :value "konuma")
       :op2 (c17-10 / string-entity
                    :value "eneke")
       :op3 (c17-15 / string-entity
                    :value "gn")
       :op4 (c17-9 / string-entity
                   :value "a-gn")
       :op5 (c17-13 / string-entity
                    :value "a-bavam")
       :op6 (c17-2 / string-entity
                   :value "bava")
       :op7 (c17-8 / string-entity
                   :value "bouncen")
       :op8 (c17-3 / string-entity
                   :value "bava")
       :op9 (c17-19 / string-entity
                    :value "bouncen")
       :op10 (c17-14 / string-entity
                     :value "bouncen")
       :op11 (c17-18 / string-entity
                     :value "bava")
       :op12 c17-14
       :op13 c17-18
       :op14 c17-18
       :op15 c17-18
       :op16 (c17-16 / string-entity
                     :value "bouncen")
       :op17 c17-18
       :op18 c17-16
       :op19 (c17-17 / string-entity
                     :value "bouncen")
       :op20 (c17-11 / string-entity
                     :value "bouncen")
       :op21 (c17-12 / string-entity
                     :value "bouncen")
       :op22 c17-11
       :op23 c17-12
       :op24 (c17-4 / string-entity
                    :value "bouncen")
       :op35 (c17-0 / string-entity
                    :value "bouncen")
       :op38 (c17-7 / string-entity
                    :value "bouncen")
       :op39 (c17-1 / string-entity
                    :value "bouncen")
       :op45 c17-7
       :op46 c17-1
       :value "bouncen"
       :value "bouncen"
       :value "bouncen"
       :value "bouncen"
       :value "bouncen"
       :value "bouncen"
       :value "bouncen"
       :value "bouncen"
       :value "bouncen"
       :value "beneke")

# ::snt very sad, freedom defenders were killed by weak men that are unable to fight ideas with ideas and don't value lives.
# ::tokens ["very", "sad", ",", "freedom", "defenders", "were", "killed", "by", "weak", "men", "that", "are", "unable", "to", "fight", "ideas", "with", "ideas", "and", "do", "n't", "value", "lives", "."]
# ::lemmas ["very", "sad", ",", "freedom", "defender", "be", "kill", "by", "weak", "man", "that", "be", "unable", "to", "fight", "idea", "with", "idea", "and", "do", "not", "value", "life", "."]
(c18-13 / kill-01
        :ARG0 (c18-2 / man
                     :ARG1-of (c18-0 / weak-02)
                     :ARG1-of (c18-10 / capable-01
                                      :ARG2 (c18-1 / fight-01
                                                   :ARG0 c18-2
                                                   :ARG2 (c18-5 / idea)
                                                   :instrument (c18-11 / idea))
                                      :polarity -)
                     :ARG0-of (c18-7 / value-02
                                     :ARG1 (c18-3 / life)
                                     :polarity -))
        :ARG1 (c18-8 / person
                     :ARG0-of (c18-9 / defend-01
                                     :ARG1 (c18-6 / free-04)))
        :ARG0-of (c18-12 / sad-02
                         :degree (c18-4 / very)))

# ::snt we're in a world where you get killed because of your ideas ! I wish they rest in peace
# ::tokens ["we", "'re", "in", "a", "world", "where", "you", "get", "killed", "because", "of", "your", "ideas", "!", "I", "wish", "they", "rest", "in", "peace"]
# ::lemmas ["we", "be", "in", "a", "world", "where", "you", "get", "kill", "because", "of", "your", "idea", "!", "i", "wish", "they", "rest", "in", "peace"]
(c19-2 / multi-sentence
       :snt1 (c19-3 / be-located-at-91
                    :ARG1 (c19-0 / we)
                    :ARG2 (c19-6 / world
                                 :location-of (c19-12 / kill-01
                                                      :ARG1 (c19-1 / you)
                                                      :ARG1-of (c19-9 / cause-01
                                                                      :ARG0 (c19-5 / idea
                                                                                   :poss c19-1))))
                    :mode expressive)
       :snt2 (c19-4 / wish-01
                    :ARG0 (c19-10 / i)
                    :ARG1 (c19-8 / rest-01
                                 :ARG1 (c19-11 / they)
                                 :manner (c19-7 / peace))))

# ::snt A SURGICAL INCISION
# ::tokens ["A", "SURGICAL", "INCISION"]
# ::lemmas ["a", "surgical", "incision"]
(c20-1 / change-01
       :ARG1 (c20-0 / psychology))

# ::snt Wow I read this story and i'm shocked. What a sad situation...
# ::tokens ["Wow", "I", "read", "this", "story", "and", "i", "'m", "shocked", ".", "What", "a", "sad", "situation", "..."]
# ::lemmas ["wow", "i", "read", "this", "story", "and", "i", "be", "shocked", ".", "what", "a", "sad", "situation", "..."]
(c21-3 / multi-sentence
       :snt1 (c21-10 / and
                     :op1 (c21-7 / read-01
                                 :ARG0 (c21-6 / i)
                                 :ARG1 (c21-8 / story
                                              :mod (c21-9 / this))
                                 :mod (c21-1 / wow
                                             :mode expressive))
                     :op2 (c21-5 / shock-01
                                 :ARG1 c21-6))
       :snt2 (c21-2 / sad-02
                    :ARG1 (c21-4 / situation)
                    :degree (c21-0 / so)))
