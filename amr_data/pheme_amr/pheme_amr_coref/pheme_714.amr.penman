# ::snt find them &amp; let them meet their God, painfully!
# ::tokens ["find", "them", "&", "amp", ";", "let", "them", "meet", "their", "God", ",", "painfully", "!"]
# ::lemmas ["find", "they", "&", "amp", ";", "let", "they", "meet", "their", "God", ",", "painfully", "!"]
(c1-2 / multi-sentence
      :snt1 (c1-1 / find-01
                  :ARG0 (c1-0 / you)
                  :ARG1 (c1-13 / and
                               :op1 (c1-11 / they)
                               :op2 (c1-7 / person
                                          :name (c1-5 / name
                                                      :op1 "amp")))
                  :mode imperative)
      :snt2 (c1-3 / let-01
                  :ARG0 (c1-9 / you)
                  :ARG1 (c1-8 / meet-02
                              :ARG0 (c1-10 / they)
                              :ARG1 (c1-12 / person
                                           :name (c1-6 / name
                                                       :op1 "God")
                                           :poss c1-10))
                  :ARG0-of (c1-4 / pain-01)
                  :mode imperative))

# ::snt Yes,and I am afraid the worst is to come yet.France is ruled by scared puppets.
# ::tokens ["Yes", ",", "and", "I", "am", "afraid", "the", "worst", "is", "to", "come", "yet", ".", "France", "is", "ruled", "by", "scared", "puppets", "."]
# ::lemmas ["yes", ",", "and", "i", "be", "afraid", "the", "bad", "be", "to", "come", "yet", ".", "France", "be", "rule", "by", "scared", "puppet", "."]
(c2-3 / multi-sentence
      :snt1 (c2-13 / and
                   :op2 (c2-2 / fear-01
                              :ARG0 (c2-5 / i)
                              :ARG1 (c2-9 / come-01
                                          :ARG1 (c2-4 / bad-04
                                                      :ARG2-of (c2-0 / have-degree-91
                                                                     :ARG1 c2-9
                                                                     :ARG3 (c2-7 / most)))
                                          :time (c2-1 / yet))))
      :snt2 (c2-8 / rule-03
                  :ARG0 (c2-10 / puppet
                               :ARG1-of (c2-12 / scare-01))
                  :ARG1 (c2-11 / country
                               :name (c2-6 / name
                                           :op1 "France"))))

# ::snt Take Note
# ::tokens ["Take", "Note"]
# ::lemmas ["take", "Note"]
(c3-2 / take-01
      :ARG0 (c3-1 / you)
      :ARG1 (c3-0 / note)
      :mode imperative)

# ::snt ESTHER! nee-hee de politie zegt kortsluiting!
# ::tokens ["ESTHER", "!", "nee", "-", "hee", "de", "politie", "zegt", "kortsluiting", "!"]
# ::lemmas ["ESTHER", "!", "nee", "-", "hee", "de", "politie", "zegt", "kortsluite", "!"]
(c4-0 / have-manner-91
      :ARG2 (c4-2 / certain)
      :ARG3 (c4-1 / zegt-kortsluiting)
      :mode expressive)

# ::snt Muslim pedophile worshipers and fags, getting mad and murdering people. It's what they do.
# ::tokens ["Muslim", "pedophile", "worshipers", "and", "fags", ",", "getting", "mad", "and", "murdering", "people", ".", "It", "'s", "what", "they", "do", "."]
# ::lemmas ["Muslim", "pedophile", "worshiper", "and", "fag", ",", "get", "mad", "and", "murder", "people", ".", "it", "be", "what", "they", "do", "."]
(c5-2 / multi-sentence
      :snt1 (c5-15 / and
                   :op1 (c5-5 / and
                              :op1 (c5-8 / person
                                         :ARG0-of (c5-0 / worship-01
                                                        :ARG1 (c5-14 / pedophile)))
                              :op2 (c5-1 / fag)
                              :mod (c5-9 / religious-group
                                         :name (c5-7 / name
                                                     :op1 "Muslim")))
                   :op2 (c5-11 / get-03
                               :ARG1 c5-5
                               :ARG2 (c5-10 / mad-04
                                            :ARG1 c5-5))
                   :op3 (c5-3 / murder-01
                              :ARG0 c5-5
                              :ARG1 (c5-4 / person)))
      :snt2 (c5-12 / do-02
                   :ARG0 (c5-13 / they)
                   :ARG1 (c5-6 / it)))

# ::snt How's that Islam immigration thing working out for you?
# ::tokens ["How", "'s", "that", "Islam", "immigration", "thing", "working", "out", "for", "you", "?"]
# ::lemmas ["how", "be", "that", "Islam", "immigration", "thing", "work", "out", "for", "you", "?"]
(c6-0 / work-out-02
      :ARG1 (c6-5 / thing
                  :mod (c6-2 / immigrate-01
                             :ARG0 (c6-4 / religious-group
                                         :name (c6-3 / name
                                                     :op1 "Islam"))))
      :beneficiary (c6-1 / you)
      :manner (c6-6 / amr-unknown))

# ::snt Lets hope they get shot by a woman or arrested by women
# ::tokens ["Lets", "hope", "they", "get", "shot", "by", "a", "woman", "or", "arrested", "by", "women"]
# ::lemmas ["let", "hope", "they", "get", "shoot", "by", "a", "woman", "or", "arrest", "by", "woman"]
(c7-0 / hope-01
      :ARG0 (c7-1 / we)
      :ARG1 (c7-3 / or
                  :op1 (c7-5 / shoot-02
                             :ARG0 (c7-4 / woman)
                             :ARG1 (c7-6 / they))
                  :op2 (c7-7 / arrest-01
                             :ARG0 (c7-2 / woman)
                             :ARG1 c7-6))
      :mode imperative)

# ::snt Must b those Catholics again.
# ::tokens ["Must", "b", "those", "Catholics", "again", "."]
# ::lemmas ["must", "b", "those", "Catholics", "again", "."]
(c8-1 / obligate-01
      :ARG2 (c8-0 / bicker-01
                  :ARG1 (c8-3 / person
                              :mod (c8-4 / religious-group
                                         :name (c8-2 / name
                                                     :op1 "Catholic"))
                              :mod (c8-5 / that))
                  :mod (c8-6 / again)))

# ::snt Awesome! Thanks for sharing your tweet. It's at
# ::tokens ["Awesome", "!", "Thanks", "for", "sharing", "your", "tweet", ".", "It", "'s", "at"]
# ::lemmas ["awesome", "!", "thank", "for", "share", "your", "tweet", ".", "it", "be", "at"]
(c9-1 / multi-sentence
      :snt1 (c9-8 / awe-01
                  :mode expressive)
      :snt2 (c9-7 / thank-01
                  :ARG0 (c9-3 / i)
                  :ARG1 (c9-0 / you)
                  :ARG2 (c9-6 / share-01
                              :ARG0 c9-0
                              :ARG1 (c9-5 / tweet-01
                                          :ARG0 c9-0)))
      :snt3 (c9-4 / it
                  :location (c9-2 / at)))

# ::snt : Peaceful people!
# ::tokens [":", "Peaceful", "people", "!"]
# ::lemmas [":", "peaceful", "people", "!"]
(c10-0 / person
       :ARG0-of (c10-1 / peace-01)
       :mode expressive)

# ::snt Your Tweet Was Featured At
# ::tokens ["Your", "Tweet", "Was", "Featured", "At"]
# ::lemmas ["your", "Tweet", "be", "feature", "at"]
(c11-1 / feature-01
       :ARG1 (c11-2 / thing
                    :ARG1-of (c11-3 / tweet-01
                                    :ARG0 (c11-0 / you))))

# ::snt :no, apparently it is only burning because a short circuit. Police to quote official statement later today. //
# ::tokens [":", "no", ",", "apparently", "it", "is", "only", "burning", "because", "a", "short", "circuit", ".", "Police", "to", "quote", "official", "statement", "later", "today", ".", "//"]
# ::lemmas [":", "no", ",", "apparently", "it", "be", "only", "burn", "because", "a", "short", "circuit", ".", "police", "to", "quote", "official", "statement", "later", "today", ".", "//"]
(c12-1 / multi-sentence
       :snt1 (c12-10 / contrast-01
                     :ARG2 (c12-14 / appear-02
                                   :ARG1 (c12-2 / burn-01
                                                :ARG1 (c12-7 / it)
                                                :mod (c12-3 / only)
                                                :ARG1-of (c12-9 / cause-01
                                                                :ARG0 (c12-11 / circuit
                                                                              :ARG1-of (c12-13 / short-07))))))
       :snt2 (c12-5 / quote-01
                    :ARG0 (c12-8 / police)
                    :ARG2 (c12-4 / state-01
                                 :mod (c12-0 / official))
                    :time (c12-6 / after)
                    :time (c12-12 / today)))

# ::snt Hoax
# ::tokens ["Hoax"]
# ::lemmas ["hoax"]
(c13-0 / hoax-01)

# ::snt as predicted.Nazism alive and well in a french town near you...2015
# ::tokens ["as", "predicted", ".", "Nazism", "alive", "and", "well", "in", "a", "french", "town", "near", "you", "...", "2015"]
# ::lemmas ["as", "predict", ".", "nazism", "alive", "and", "well", "in", "a", "french", "town", "near", "you", "...", "2015"]
(c14-3 / multi-sentence
       :snt1 (c14-4 / event
                    :ARG1-of (c14-7 / predict-01))
       :snt2 (c14-12 / and
                     :op1 (c14-2 / live-01
                                 :ARG0 (c14-11 / political-movement
                                               :name (c14-5 / name
                                                            :op1 "Nazism")))
                     :op2 (c14-0 / well-09
                                 :ARG1 c14-11)
                     :location (c14-10 / town
                                       :mod (c14-9 / country
                                                   :name (c14-6 / name
                                                                :op1 "France"))
                                       :ARG1-of (c14-8 / near-02
                                                       :ARG2 (c14-1 / you)))))

# ::snt The BIBLE predicts all this turning out to be true after all!. Have a look if you have one . Look in AWE! I did!.
# ::tokens ["The", "BIBLE", "predicts", "all", "this", "turning", "out", "to", "be", "true", "after", "all", "!", ".", "Have", "a", "look", "if", "you", "have", "one", ".", "Look", "in", "AWE", "!", "I", "did", "!", "."]
# ::lemmas ["the", "BIBLE", "predict", "all", "this", "turn", "out", "to", "be", "true", "after", "all", "!", ".", "have", "a", "look", "if", "you", "have", "one", ".", "look", "in", "AWE", "!", "i", "do", "!", "."]
(c15-3 / multi-sentence
       :snt1 (c15-10 / predict-01
                     :ARG0 (c15-4 / book
                                  :name (c15-8 / name
                                               :op1 "Bible"))
                     :ARG1 (c15-15 / turn-out-11
                                   :ARG1 (c15-14 / this
                                                 :mod (c15-16 / all))
                                   :ARG2 (c15-9 / true-01
                                                :ARG1 c15-14)
                                   :concession (c15-6 / after-all)))
       :snt2 (c15-2 / look-01
                    :ARG0 (c15-1 / you)
                    :condition (c15-0 / have-03
                                      :ARG0 c15-1
                                      :ARG1 (c15-5 / one))
                    :mode imperative)
       :snt3 (c15-11 / look-01
                     :ARG0 (c15-7 / i)
                     :manner (c15-12 / aw
                                     :mode expressive)
                     :mode imperative)
       :snt4 (c15-13 / do-02
                     :ARG0 c15-7))

# ::snt ytzhak sharon a master terrorist was th first to bobby trap a car in crwdd markt murdering civilian Palestinians n47
# ::tokens ["ytzhak", "sharon", "a", "master", "terrorist", "was", "th", "first", "to", "bobby", "trap", "a", "car", "in", "crwdd", "markt", "murdering", "civilian", "Palestinians", "n47"]
# ::lemmas ["ytzhak", "sharon", "a", "master", "terrorist", "be", "th", "first", "to", "bobby", "trap", "a", "car", "in", "crwdd", "markt", "murder", "civilian", "Palestinians", "n47"]
(c16-0 / have-ord-91
       :ARG1 (c16-7 / person
                    :name (c16-5 / name
                                 :op1 "ytzhak"
                                 :op2 "Sharon")
                    :mod (c16-14 / terrorist
                                 :ARG0-of (c16-1 / master-01)))
       :ARG2 (c16-4 / ordinal-entity
                    :value 1)
       :ARG0-of (c16-9 / cause-01
                       :ARG1 (c16-3 / bobby-00
                                    :ARG0 c16-7
                                    :ARG1 (c16-12 / trap-01
                                                  :ARG0 c16-7
                                                  :ARG1 (c16-8 / car)
                                                  :location (c16-10 / murder-01
                                                                    :ARG0 (c16-15 / person
                                                                                  :name (c16-6 / name
                                                                                               :op1 "Markt"))
                                                                    :ARG1 (c16-2 / person
                                                                                 :mod (c16-13 / country
                                                                                              :name (c16-11 / name
                                                                                                            :op1 "Palestine"))
                                                                                 :mod (c16-16 / civilian)))))))

# ::snt There is a steady stream of Jihadists all around the world. We r fighting this mess all wrong. Its apparent.
# ::tokens ["There", "is", "a", "steady", "stream", "of", "Jihadists", "all", "around", "the", "world", ".", "We", "r", "fighting", "this", "mess", "all", "wrong", ".", "Its", "apparent", "."]
# ::lemmas ["there", "be", "a", "steady", "stream", "of", "Jihadists", "all", "around", "the", "world", ".", "we", "r", "fight", "this", "mess", "all", "wrong", ".", "its", "apparent", "."]
(c17-3 / multi-sentence
       :snt1 (c17-12 / stream-01
                     :ARG1 (c17-10 / person
                                   :mod (c17-0 / jihad))
                     :ARG1-of (c17-5 / steady-01)
                     :location (c17-15 / around
                                       :op1 (c17-1 / world)
                                       :mod (c17-6 / all)))
       :snt2 (c17-2 / fight-01
                    :ARG0 (c17-8 / we)
                    :ARG2 (c17-11 / mess
                                  :mod (c17-14 / this))
                    :ARG2-of (c17-4 / wrong-04
                                    :mod (c17-9 / all)))
       :snt3 (c17-13 / appear-01
                     :ARG1 (c17-7 / it)))

# ::snt not according to dave, just a few mentally ill muslims, nothing to do with Islam
# ::tokens ["not", "according", "to", "dave", ",", "just", "a", "few", "mentally", "ill", "muslims", ",", "nothing", "to", "do", "with", "Islam"]
# ::lemmas ["not", "accord", "to", "dave", ",", "just", "a", "few", "mentally", "ill", "muslims", ",", "nothing", "to", "do", "with", "Islam"]
(c18-11 / say-01
        :ARG0 (c18-7 / person
                     :name (c18-5 / name
                                  :op1 "Dave"))
        :ARG1 (c18-9 / contrast-01
                     :ARG1 (c18-12 / person
                                   :mod (c18-8 / religious-group
                                               :name (c18-6 / name
                                                            :op1 "Islam"))
                                   :quant (c18-2 / few)
                                   :ARG1-of (c18-4 / ill-01
                                                   :mod (c18-3 / mental))
                                   :mod (c18-0 / just))
                     :ARG2 (c18-1 / have-to-do-with-04
                                  :ARG0 c18-12
                                  :ARG1 c18-8
                                  :ARG2 (c18-10 / nothing)))
        :polarity -)

# ::snt Could it have been the car they were driving?
# ::tokens ["Could", "it", "have", "been", "the", "car", "they", "were", "driving", "?"]
# ::lemmas ["could", "it", "have", "be", "the", "car", "they", "be", "drive", "?"]
(c19-0 / possible-01
       :polarity (c19-4 / amr-unknown)
       :ARG1 (c19-1 / drive-01
                    :ARG0 (c19-3 / they)
                    :ARG1 (c19-2 / car)))
