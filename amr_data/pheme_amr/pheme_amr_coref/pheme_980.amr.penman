# ::snt Of course they "have to". Moderates must stop the extremists by ostracizing &amp; criticizing them. We can't do it with bombs &amp; bullets.
# ::tokens ["Of", "course", "they", "\"", "have", "to", "\"", ".", "Moderates", "must", "stop", "the", "extremists", "by", "ostracizing", "&", "amp", ";", "criticizing", "them", ".", "We", "ca", "n't", "do", "it", "with", "bombs", "&", "amp", ";", "bullets", "."]
# ::lemmas ["of", "course", "they", "\"", "have", "to", "\"", ".", "moderate", "must", "stop", "the", "extremist", "by", "ostracizing", "&", "amp", ";", "criticize", "they", ".", "we", "can", "not", "do", "it", "with", "bomb", "&", "amp", ";", "bullet", "."]
(c1-2 / multi-sentence
      :snt1 (c1-5 / obligate-01
                  :ARG1 (c1-15 / they)
                  :mod (c1-1 / of-course)
                  :snt2-of c1-2)
      :ARG1 (c1-9 / person
                  :ARG1-of (c1-10 / moderate-03))
      :ARG2 (c1-14 / stop-01
                   :ARG0 c1-9
                   :ARG1 (c1-6 / extremist)
                   :ARG2 (c1-17 / and
                                :op1 (c1-3 / ostracize-01
                                           :ARG0 c1-9
                                           :ARG1 c1-6)
                                :op2 (c1-11 / criticize-01
                                            :ARG0 c1-9
                                            :ARG1 c1-6)))
      :snt3 (c1-16 / possible-01
                   :ARG1 (c1-12 / do-02
                                :ARG0 (c1-0 / we)
                                :ARG1 (c1-8 / it)
                                :ARG2 (c1-7 / and
                                            :op1 (c1-4 / bomb)
                                            :op2 (c1-13 / bullet)))
                   :polarity -))

# ::snt it's the exact same logic. As a member of a demographic, you must condemn every bad act carried out by a fellow member.
# ::tokens ["it", "'s", "the", "exact", "same", "logic", ".", "As", "a", "member", "of", "a", "demographic", ",", "you", "must", "condemn", "every", "bad", "act", "carried", "out", "by", "a", "fellow", "member", "."]
# ::lemmas ["it", "be", "the", "exact", "same", "logic", ".", "as", "a", "member", "of", "a", "demographic", ",", "you", "must", "condemn", "every", "bad", "act", "carry", "out", "by", "a", "fellow", "member", "."]
(c2-2 / multi-sentence
      :snt1 (c2-1 / logic
                  :ARG1-of (c2-13 / same-01
                                  :degree (c2-8 / exact)))
      :snt2 (c2-6 / obligate-01
                  :ARG1 (c2-0 / you)
                  :ARG2 (c2-11 / condemn-01
                               :ARG0 c2-0
                               :ARG1 (c2-14 / act-02
                                            :ARG1-of (c2-5 / bad-07)
                                            :mod (c2-7 / every)
                                            :ARG1-of (c2-10 / carry-out-03
                                                            :ARG0 (c2-9 / member
                                                                        :mod (c2-3 / fellow)))))
                  :prep-as (c2-4 / member
                                 :part-of (c2-12 / demography))))

# ::snt Now you're just being silly. It's a wildly illogical comparison. characters won't do why.
# ::tokens ["Now", "you", "'re", "just", "being", "silly", ".", "It", "'s", "a", "wildly", "illogical", "comparison", ".", "characters", "wo", "n't", "do", "why", "."]
# ::lemmas ["now", "you", "be", "just", "be", "silly", ".", "it", "be", "a", "wildly", "illogical", "comparison", ".", "character", "will", "not", "do", "why", "."]
(c3-4 / multi-sentence
      :snt1 (c3-10 / silly
                   :domain (c3-1 / you)
                   :time (c3-5 / now)
                   :mod (c3-0 / just))
      :snt2 (c3-7 / compare-01
                  :mod (c3-3 / logical
                             :degree (c3-2 / wild)
                             :polarity -))
      :snt3 (c3-6 / do-02
                  :ARG0 (c3-8 / character)
                  :ARG1 (c3-11 / amr-unknown
                               :ARG0-of (c3-9 / cause-01))
                  :polarity -))

# ::snt And why should they not? Everyone should. Muslims should also stand up for free speech and the right to offend.
# ::tokens ["And", "why", "should", "they", "not", "?", "Everyone", "should", ".", "Muslims", "should", "also", "stand", "up", "for", "free", "speech", "and", "the", "right", "to", "offend", "."]
# ::lemmas ["and", "why", "should", "they", "not", "?", "everyone", "should", ".", "Muslims", "should", "also", "stand", "up", "for", "free", "speech", "and", "the", "right", "to", "offend", "."]
(c5-0 / multi-sentence
      :snt1 (c5-4 / and
                  :op2 (c5-16 / cause-01
                              :ARG0 (c5-14 / amr-unknown)
                              :ARG1 (c5-11 / recommend-01
                                           :ARG1 (c5-18 / they)
                                           :polarity -)))
      :snt2 (c5-1 / recommend-01
                  :ARG1 (c5-6 / everyone))
      :snt3 (c5-8 / recommend-01
                  :ARG1 (c5-3 / stand-up-07
                              :ARG1 (c5-2 / person
                                          :mod (c5-13 / religious-group
                                                      :name (c5-9 / name
                                                                  :op1 "Muslim")))
                              :purpose (c5-10 / and
                                              :op1 (c5-7 / speak-01
                                                         :ARG3-of (c5-5 / free-04))
                                              :op2 (c5-12 / right-05
                                                          :ARG1 c5-2
                                                          :ARG2 (c5-15 / offend-01
                                                                       :ARG0 c5-2)))
                              :mod (c5-17 / also))))

# ::snt I see you're from New Jersey. Did you condemn this murder on behalf of all people of New Jersey?
# ::tokens ["I", "see", "you", "'re", "from", "New", "Jersey", ".", "Did", "you", "condemn", "this", "murder", "on", "behalf", "of", "all", "people", "of", "New", "Jersey", "?"]
# ::lemmas ["i", "see", "you", "be", "from", "New", "Jersey", ".", "do", "you", "condemn", "this", "murder", "on", "behalf", "of", "all", "people", "of", "New", "Jersey", "?"]
(c6-1 / multi-sentence
      :snt1 (c6-11 / see-01
                   :ARG0 (c6-5 / i)
                   :ARG1 (c6-2 / be-from-91
                               :ARG1 (c6-0 / you)
                               :ARG2 (c6-3 / state
                                           :name (c6-6 / name
                                                       :op1 "New"
                                                       :op2 "Jersey"))))
      :snt2 (c6-9 / condemn-01
                  :ARG0 (c6-10 / you)
                  :ARG1 (c6-7 / murder-01
                              :mod (c6-12 / this))
                  :prep-on-behalf-of (c6-8 / person
                                           :mod (c6-13 / all)
                                           :mod c6-3)
                  :polarity (c6-4 / amr-unknown)))

# ::snt Muslim Cleric Defends Paris Terrorist Attack
# ::tokens ["Muslim", "Cleric", "Defends", "Paris", "Terrorist", "Attack"]
# ::lemmas ["Muslim", "Cleric", "defend", "Paris", "Terrorist", "Attack"]
(c7-5 / defend-01
      :ARG0 (c7-3 / person
                  :mod (c7-4 / religious-group
                             :name (c7-1 / name
                                         :op1 "Muslim"))
                  :ARG0-of (c7-0 / have-org-role-91
                                 :ARG2 (c7-6 / cleric)))
      :ARG1 (c7-9 / attack-01
                  :ARG0 (c7-8 / terrorist)
                  :location (c7-7 / city
                                  :name (c7-2 / name
                                              :op1 "Paris"))))

# ::snt Well ok then: as a NJite I condemn all murders committed in my state. That was easy!
# ::tokens ["Well", "ok", "then", ":", "as", "a", "NJite", "I", "condemn", "all", "murders", "committed", "in", "my", "state", ".", "That", "was", "easy", "!"]
# ::lemmas ["well", "ok", "then", ":", "as", "a", "NJite", "i", "condemn", "all", "murder", "commit", "in", "my", "state", ".", "that", "be", "easy", "!"]
(c8-1 / multi-sentence
      :snt1 (c8-9 / cause-01
                  :ARG1 (c8-2 / okay-04
                              :mod (c8-0 / well)))
      :snt2 (c8-8 / condemn-01
                  :ARG0 (c8-5 / i
                              :mod (c8-11 / state
                                          :name (c8-6 / name
                                                      :op1 "New"
                                                      :op2 "Jersey")))
                  :ARG1 (c8-7 / murder-01
                              :mod (c8-13 / all)
                              :ARG1-of (c8-10 / commit-02
                                              :location (c8-3 / state
                                                              :poss c8-5))))
      :snt3 (c8-4 / easy-05
                  :ARG1 (c8-12 / that)))

# ::snt "We condemn this attack in the strongest terms" wink wink
# ::tokens ["\"", "We", "condemn", "this", "attack", "in", "the", "strongest", "terms", "\"", "wink", "wink"]
# ::lemmas ["\"", "we", "condemn", "this", "attack", "in", "the", "strong", "term", "\"", "wink", "wink"]
(c9-1 / wink-01
      :ARG1 (c9-4 / condemn-01
                  :ARG0 (c9-3 / we)
                  :ARG1 (c9-8 / attack-01
                              :mod (c9-7 / this))
                  :manner (c9-5 / term
                                :ARG1-of (c9-0 / have-degree-91
                                               :ARG2 (c9-6 / strong-02
                                                           :ARG1 c9-5)
                                               :ARG3 (c9-2 / most)))))

# ::snt Clock's ticking. The longer you wait to condemn this murder, the more you prove that all New Jerseyans support murder.
# ::tokens ["Clock", "'s", "ticking", ".", "The", "longer", "you", "wait", "to", "condemn", "this", "murder", ",", "the", "more", "you", "prove", "that", "all", "New", "Jerseyans", "support", "murder", "."]
# ::lemmas ["Clock", "'s", "ticking", ".", "the", "long", "you", "wait", "to", "condemn", "this", "murder", ",", "the", "more", "you", "prove", "that", "all", "New", "Jerseyans", "support", "murder", "."]
(c10-0 / multi-sentence
       :snt1 (c10-19 / tick-03
                     :ARG1 (c10-17 / clock))
       :snt2 (c10-2 / correlate-91
                    :ARG1 (c10-12 / more
                                  :ARG3-of (c10-7 / have-degree-91
                                                  :ARG1 (c10-13 / wait-01
                                                                :ARG1 (c10-16 / you)
                                                                :ARG2 (c10-15 / condemn-01
                                                                              :ARG0 c10-16
                                                                              :ARG1 (c10-8 / murder-01
                                                                                           :mod (c10-18 / this))))
                                                  :ARG2 (c10-9 / long-03
                                                               :ARG1 c10-13)))
                    :ARG2 (c10-14 / more
                                  :ARG3-of (c10-5 / have-degree-91
                                                  :ARG1 (c10-1 / prove-01
                                                               :ARG0 c10-16
                                                               :ARG1 (c10-3 / support-01
                                                                            :ARG0 (c10-4 / person
                                                                                         :mod (c10-10 / state
                                                                                                      :name (c10-11 / name
                                                                                                                    :op1 "New"
                                                                                                                    :op2 "Jersey"))
                                                                                         :mod (c10-6 / all))
                                                                            :ARG1 c10-8))))))

# ::snt thank you. You have now proven that you are a human being.
# ::tokens ["thank", "you", ".", "You", "have", "now", "proven", "that", "you", "are", "a", "human", "being", "."]
# ::lemmas ["thank", "you", ".", "you", "have", "now", "prove", "that", "you", "be", "a", "human", "being", "."]
(c11-2 / multi-sentence
       :snt1 (c11-7 / thank-01
                    :ARG1 (c11-1 / you))
       :snt2 (c11-5 / prove-01
                    :ARG0 (c11-6 / you)
                    :ARG1 (c11-3 / being
                                 :mod (c11-0 / human)
                                 :domain c11-6)
                    :time (c11-4 / now)))

# ::snt They shouldn't have to stand in solidarity with the victims of their coreligionists? That's literally the least they can do.
# ::tokens ["They", "should", "n't", "have", "to", "stand", "in", "solidarity", "with", "the", "victims", "of", "their", "coreligionists", "?", "That", "'s", "literally", "the", "least", "they", "can", "do", "."]
# ::lemmas ["they", "should", "not", "have", "to", "stand", "in", "solidarity", "with", "the", "victim", "of", "their", "coreligionist", "?", "that", "be", "literally", "the", "least", "they", "can", "do", "."]
(c12-2 / multi-sentence
       :snt1 (c12-7 / recommend-01
                    :ARG1 (c12-3 / obligate-01
                                 :ARG1 (c12-13 / they)
                                 :ARG2 (c12-12 / stand-11
                                               :ARG0 c12-13
                                               :ARG1 (c12-4 / solidarity
                                                            :prep-with (c12-5 / victim
                                                                              :poss (c12-6 / person
                                                                                           :mod (c12-8 / coreligionist)
                                                                                           :ARG1-of (c12-0 / have-org-role-91
                                                                                                           :ARG0 c12-13))))))
                    :polarity (c12-15 / amr-unknown)
                    :polarity -)
       :snt2 (c12-14 / possible-01
                     :ARG1 (c12-9 / do-02
                                  :ARG0 (c12-11 / they)
                                  :ARG1 (c12-10 / that)
                                  :mod (c12-1 / literal))))

# ::snt So rape is fine? How about aggravated assault?
# ::tokens ["So", "rape", "is", "fine", "?", "How", "about", "aggravated", "assault", "?"]
# ::lemmas ["so", "rape", "be", "fine", "?", "how", "about", "aggravate", "assault", "?"]
(c13-1 / multi-sentence
       :snt1 (c13-0 / fine-04
                    :ARG1 (c13-4 / rape-01)
                    :polarity (c13-6 / amr-unknown))
       :snt2 (c13-2 / assault-01
                    :manner (c13-3 / aggravate-01)
                    :polarity (c13-5 / amr-unknown)))

# ::snt As a male I condemn all instances of rape. Let's see, as a homeowner I condemn tapes by all homeownets--each and every .
# ::tokens ["As", "a", "male", "I", "condemn", "all", "instances", "of", "rape", ".", "Let", "'s", "see", ",", "as", "a", "homeowner", "I", "condemn", "tapes", "by", "all", "homeownets", "--", "each", "and", "every", "."]
# ::lemmas ["as", "a", "male", "i", "condemn", "all", "instance", "of", "rape", ".", "let", "us", "see", ",", "as", "a", "homeowner", "i", "condemn", "tape", "you", "all", "homeownet", "--", "each", "and", "every", "."]
(c14-3 / multi-sentence
       :snt1 (c14-12 / condemn-01
                     :ARG0 (c14-9 / i
                                  :mod (c14-10 / male))
                     :ARG1 (c14-13 / instance
                                   :mod (c14-11 / rape-01)
                                   :mod (c14-17 / all)))
       :snt2 (c14-15 / see-01
                     :ARG0 (c14-1 / we)
                     :ARG1 (c14-14 / condemn-01
                                   :ARG0 (c14-2 / i
                                                :ARG0-of (c14-6 / own-01
                                                                :ARG1 (c14-0 / home)))
                                   :ARG1 (c14-16 / tape-02
                                                 :ARG0 (c14-4 / homeownet
                                                              :mod (c14-8 / all)
                                                              :mod (c14-7 / each)
                                                              :mod (c14-5 / every))))
                     :mode imperative))

# ::snt As a Jew I condemn all murders committed by Jews;as a Democrat I condemn all murders committed by Jews;as white I condemn
# ::tokens ["As", "a", "Jew", "I", "condemn", "all", "murders", "committed", "by", "Jews;as", "a", "Democrat", "I", "condemn", "all", "murders", "committed", "by", "Jews;as", "white", "I", "condemn"]
# ::lemmas ["as", "a", "Jew", "i", "condemn", "all", "murder", "commit", "by", "Jews;as", "a", "Democrat", "i", "condemn", "all", "murder", "commit", "by", "Jews;as", "white", "i", "condemn"]
(c15-1 / multi-sentence
       :snt1 (c15-19 / condemn-01
                     :ARG0 (c15-14 / i
                                   :mod (c15-11 / religious-group
                                                :name (c15-9 / name
                                                             :op1 "Jew")))
                     :ARG1 (c15-10 / murder-01
                                   :ARG0 (c15-3 / religious-group
                                                :name (c15-18 / name
                                                              :op1 "Jew"))
                                   :mod (c15-7 / all)
                                   :ARG1-of (c15-6 / commit-02
                                                   :ARG0 c15-3)))
       :snt2 (c15-16 / condemn-01
                     :ARG0 (c15-15 / i
                                   :mod (c15-5 / political-party
                                               :name (c15-4 / name
                                                            :op1 "Democrat")))
                     :ARG1 (c15-8 / murder-01
                                  :ARG1-of (c15-17 / commit-02
                                                   :ARG0 c15-3)
                                  :mod (c15-13 / all)))
       :snt3 (c15-0 / condemn-01
                    :ARG0 (c15-2 / i
                                 :ARG1-of (c15-12 / white-02))))

# ::snt al-Arabiya: % of Arabs said the /11 attacks were morally justifiedGallup: % of Muslims believe /11 attacks were justified
# ::tokens ["al", "-", "Arabiya", ":", "%", "of", "Arabs", "said", "the", "/11", "attacks", "were", "morally", "justifiedGallup", ":", "%", "of", "Muslims", "believe", "/11", "attacks", "were", "justified"]
# ::lemmas ["al", "-", "Arabiya", ":", "%", "of", "Arabs", "say", "the", "/11", "attack", "be", "morally", "justifiedGallup", ":", "%", "of", "Muslims", "believe", "/11", "attack", "be", "justify"]
(c16-1 / multi-sentence
       :snt1 (c16-13 / say-01
                     :ARG0 (c16-8 / person
                                  :name (c16-6 / name
                                               :op1 "al-Arabiya"))
                     :ARG1 (c16-0 / justify-01
                                  :ARG1 (c16-16 / attack-01
                                                :time (c16-9 / date-entity
                                                             :month 11
                                                             :day 11))
                                  :manner (c16-10 / moral-02)))
       :snt2 (c16-3 / believe-01
                    :ARG0 (c16-15 / person
                                  :ARG1-of (c16-5 / include-91
                                                  :ARG2 (c16-2 / person
                                                               :mod (c16-11 / religious-group
                                                                            :name (c16-7 / name
                                                                                         :op1 "Muslim")))
                                                  :ARG3 (c16-14 / percentage-entity
                                                                :value (c16-4 / %)))
                                  :ARG1 (c16-12 / justify-01
                                                :ARG1 c16-16))))

# ::snt Very good. Now get every other Jew to do the same.
# ::tokens ["Very", "good", ".", "Now", "get", "every", "other", "Jew", "to", "do", "the", "same", "."]
# ::lemmas ["very", "good", ".", "now", "get", "every", "other", "Jew", "to", "do", "the", "same", "."]
(c17-1 / multi-sentence
       :snt1 (c17-9 / good-02
                    :degree (c17-5 / very))
       :snt2 (c17-7 / get-04
                    :ARG0 (c17-0 / you)
                    :ARG1 (c17-8 / do-02
                                 :ARG0 (c17-6 / person
                                              :mod (c17-10 / religious-group
                                                           :name (c17-4 / name
                                                                        :op1 "Jew"))
                                              :mod (c17-2 / other
                                                          :mod (c17-3 / every)))
                                 :ARG1 (c17-13 / thing
                                               :ARG1-of (c17-12 / same-01)))
                    :time (c17-11 / now)
                    :mode imperative))

# ::snt that's leaves % right?
# ::tokens ["that", "'s", "leaves", "%", "right", "?"]
# ::lemmas ["that", "be", "leave", "%", "right", "?"]
(c18-2 / leave-17
       :ARG0 (c18-3 / that)
       :degree (c18-1 / percentage-entity
                      :value 90)
       :ARG1-of (c18-0 / request-confirmation-91))

# ::snt types of Muslims: a) Radical - Force everyone to accept Islam b) Moderate - Hopes the radicals succeed
# ::tokens ["types", "of", "Muslims", ":", "a", ")", "Radical", "-", "Force", "everyone", "to", "accept", "Islam", "b", ")", "Moderate", "-", "Hopes", "the", "radicals", "succeed"]
# ::lemmas ["type", "of", "Muslims", ":", "a", ")", "radical", "-", "Force", "everyone", "to", "accept", "Islam", "b", ")", "Moderate", "-", "Hopes", "the", "radical", "succeed"]
(c19-10 / type-03
        :ARG1 (c19-7 / person
                     :mod (c19-8 / religious-group
                                 :name (c19-6 / name
                                              :op1 "Islam")))
        :ARG2 (c19-11 / and
                      :op1 (c19-1 / force-01
                                  :ARG1 (c19-3 / everyone)
                                  :ARG2 (c19-4 / accept-01
                                               :ARG0 c19-3
                                               :ARG1 c19-8)
                                  :li "a")
                      :op2 (c19-5 / force-01
                                  :ARG1 c19-3
                                  :ARG2 (c19-2 / moderate-03
                                               :ARG1 c19-3)
                                  :li "b")
                      :op3 (c19-0 / hope-01
                                  :ARG1 (c19-9 / succeed-01
                                               :ARG0 c19-7))))

# ::snt They kinda do have to.
# ::tokens ["They", "kinda", "do", "have", "to", "."]
# ::lemmas ["they", "kinda", "do", "have", "to", "."]
(c20-0 / obligate-01
       :ARG1 (c20-1 / they)
       :degree (c20-2 / kind-of))

# ::snt Also, you can't just issue a blanket condemnation. You have to condemn each one individually.
# ::tokens ["Also", ",", "you", "ca", "n't", "just", "issue", "a", "blanket", "condemnation", ".", "You", "have", "to", "condemn", "each", "one", "individually", "."]
# ::lemmas ["also", ",", "you", "can", "not", "just", "issue", "a", "blanket", "condemnation", ".", "you", "have", "to", "condemn", "each", "one", "individually", "."]
(c21-3 / multi-sentence
       :snt1 (c21-8 / possible-01
                    :ARG1 (c21-7 / issue-01
                                 :ARG0 (c21-1 / you)
                                 :ARG1 (c21-10 / condemn-01
                                               :ARG0 c21-1
                                               :ARG1-of (c21-4 / blanket-01))
                                 :mod (c21-0 / just))
                    :mod (c21-13 / also)
                    :polarity -)
       :snt2 (c21-5 / obligate-01
                    :ARG1 (c21-12 / you)
                    :ARG2 (c21-9 / condemn-01
                                 :ARG0 c21-12
                                 :ARG1 (c21-6 / each
                                              :mod (c21-2 / one))
                                 :manner (c21-11 / individual))))

# ::snt No, they really don't.
# ::tokens ["No", ",", "they", "really", "do", "n't", "."]
# ::lemmas ["no", ",", "they", "really", "do", "not", "."]
(c22-1 / do-02
       :ARG0 (c22-2 / they)
       :ARG1-of (c22-0 / real-04)
       :polarity -)

# ::snt : No, they really don't. OK. You win.
# ::tokens [":", "No", ",", "they", "really", "do", "n't", ".", "OK", ".", "You", "win", "."]
# ::lemmas [":", "no", ",", "they", "really", "do", "not", ".", "ok", ".", "you", "win", "."]
(c23-2 / multi-sentence
       :snt1 (c23-6 / do-02
                    :ARG0 (c23-7 / they)
                    :ARG1-of (c23-5 / real-04)
                    :mod (c23-4 / no)
                    :polarity -)
       :snt2 (c23-3 / okay-01
                    :ARG1 (c23-0 / win-01
                                 :ARG0 (c23-1 / you))))
