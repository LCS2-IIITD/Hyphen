# ::snt good one, Dickhead.
# ::tokens ["good", "one", ",", "Dickhead", "."]
# ::lemmas ["good", "one", ",", "Dickhead", "."]
(c1-4 / say-01
      :ARG0 (c1-1 / i)
      :ARG1 (c1-3 / good-02
                  :ARG1 (c1-0 / one))
      :ARG2 (c1-2 / dickhead))

# ::snt Yes, he had no right, I'd agree entirely. Your wording was vulgar.
# ::tokens ["Yes", ",", "he", "had", "no", "right", ",", "I", "'d", "agree", "entirely", ".", "Your", "wording", "was", "vulgar", "."]
# ::lemmas ["yes", ",", "he", "have", "no", "right", ",", "i", "would", "agree", "entirely", ".", "your", "wording", "be", "vulgar", "."]
(c2-3 / multi-sentence
      :snt1 (c2-7 / right-05
                  :ARG1 (c2-0 / he)
                  :mod (c2-1 / yes)
                  :ARG1-of (c2-9 / agree-01
                                 :ARG0 (c2-5 / i)
                                 :degree (c2-4 / entire))
                  :polarity -)
      :snt2 (c2-6 / vulgar
                  :domain (c2-2 / word-01
                                :ARG0 (c2-8 / you))))

# ::snt Who?
# ::tokens ["Who", "?"]
# ::lemmas ["who", "?"]
(c3-0 / amr-unknown)

# ::snt couldn't you even try to spell it right?
# ::tokens ["could", "n't", "you", "even", "try", "to", "spell", "it", "right", "?"]
# ::lemmas ["could", "not", "you", "even", "try", "to", "spell", "it", "right", "?"]
(c4-4 / possible-01
      :ARG1 (c4-7 / try-01
                  :ARG0 (c4-0 / you)
                  :ARG1 (c4-6 / spell-01
                              :ARG0 c4-0
                              :ARG1 (c4-2 / it)
                              :ARG2-of (c4-5 / right-06))
                  :mod (c4-1 / even))
      :ARG1-of (c4-3 / request-confirmation-91)
      :polarity -)

# ::snt no miss perfect he was a murderer and had no right
# ::tokens ["no", "miss", "perfect", "he", "was", "a", "murderer", "and", "had", "no", "right"]
# ::lemmas ["no", "miss", "perfect", "he", "be", "a", "murderer", "and", "have", "no", "right"]
(c5-1 / miss-02
      :ARG0 (c5-2 / i)
      :ARG1 (c5-6 / and
                  :op1 (c5-4 / person
                             :ARG0-of (c5-3 / murder-01)
                             :domain (c5-0 / he))
                  :op2 (c5-5 / right-05
                             :ARG1 c5-0
                             :polarity -))
      :polarity -)

# ::snt : : Police believe the man behind the Sydney siege is Iraninan cleric Man Haron Monis
# ::tokens [":", ":", "Police", "believe", "the", "man", "behind", "the", "Sydney", "siege", "is", "Iraninan", "cleric", "Man", "Haron", "Monis"]
# ::lemmas [":", ":", "police", "believe", "the", "man", "behind", "the", "Sydney", "siege", "be", "Iraninan", "cleric", "Man", "Haron", "Monis"]
(c6-1 / believe-01
      :ARG0 (c6-4 / police)
      :ARG1 (c6-0 / man
                  :name (c6-2 / name
                              :op1 "Haron"
                              :op2 "Monis")
                  :mod (c6-6 / cleric
                             :source (c6-5 / country
                                           :name (c6-3 / name
                                                       :op1 "Iran")))
                  :ARG0-of (c6-8 / cause-01
                                 :ARG1 (c6-9 / siege-01
                                             :location (c6-10 / city
                                                              :name (c6-7 / name
                                                                          :op1 "Sydney"))))))

# ::snt I not believe the words of nsw police.
# ::tokens ["I", "not", "believe", "the", "words", "of", "nsw", "police", "."]
# ::lemmas ["i", "not", "believe", "the", "word", "of", "nsw", "police", "."]
(c7-1 / believe-01
      :ARG0 (c7-2 / i)
      :ARG1 (c7-0 / word-01
                  :ARG0 (c7-4 / police
                              :mod (c7-3 / news)))
      :polarity -)

# ::snt just a typical Aussie battler by the sounds of it
# ::tokens ["just", "a", "typical", "Aussie", "battler", "by", "the", "sounds", "of", "it"]
# ::lemmas ["just", "a", "typical", "Aussie", "battler", "by", "the", "sound", "of", "it"]
(c8-4 / person
      :ARG0-of (c8-1 / battler-01)
      :mod (c8-5 / country
                 :name (c8-3 / name
                             :op1 "Australia"))
      :ARG1-of (c8-7 / typical-02
                     :ARG2 (c8-6 / sound-01
                                 :ARG1 (c8-2 / it)))
      :mod (c8-0 / just))

# ::snt I can't believe that this guy was not locked up earlier!!! WHY wasn't the police watching him more closely???
# ::tokens ["I", "ca", "n't", "believe", "that", "this", "guy", "was", "not", "locked", "up", "earlier", "!", "!", "!", "WHY", "was", "n't", "the", "police", "watching", "him", "more", "closely", "?", "?", "?"]
# ::lemmas ["i", "can", "not", "believe", "that", "this", "guy", "be", "not", "lock", "up", "early", "!", "!", "!", "why", "be", "not", "the", "police", "watch", "he", "more", "closely", "?", "?", "?"]
(c9-3 / multi-sentence
      :snt1 (c9-6 / possible-01
                  :ARG1 (c9-4 / believe-01
                              :ARG0 (c9-5 / i)
                              :ARG1 (c9-2 / lock-up-03
                                          :ARG1 (c9-9 / guy
                                                      :mod (c9-12 / this))
                                          :time (c9-8 / before)
                                          :polarity -))
                  :polarity -)
      :snt2 (c9-1 / watch-01
                  :ARG0 (c9-13 / police)
                  :ARG1 c9-9
                  :manner (c9-10 / close-10
                                 :ARG2-of (c9-0 / have-degree-91
                                                :ARG1 c9-1
                                                :ARG3 (c9-7 / more)))
                  :ARG1-of (c9-11 / cause-01
                                  :ARG0 (c9-14 / amr-unknown))
                  :polarity -))

# ::snt fucks wrong with you cunt?
# ::tokens ["fucks", "wrong", "with", "you", "cunt", "?"]
# ::lemmas ["fuck", "wrong", "with", "you", "cunt", "?"]
(c10-0 / wrong-02
       :ARG2 (c10-1 / you
                    :mod (c10-3 / cunt))
       :mod (c10-2 / fuck
                   :mode expressive)
       :polarity (c10-4 / amr-unknown))

# ::snt Who gives a fuck? Hope he chop off every cracker head in that mutha-phucka!!!! Holla
# ::tokens ["Who", "gives", "a", "fuck", "?", "Hope", "he", "chop", "off", "every", "cracker", "head", "in", "that", "mutha", "-", "phucka", "!", "!", "!", "!", "Holla"]
# ::lemmas ["who", "give", "a", "fuck", "?", "hope", "he", "chop", "off", "every", "cracker", "head", "in", "that", "mutha", "-", "phucka", "!", "!", "!", "!", "Holla"]
(c11-2 / multi-sentence
       :snt1 (c11-11 / give-16
                     :ARG0 (c11-14 / amr-unknown)
                     :ARG1 (c11-1 / fuck))
       :snt2 (c11-0 / hope-01
                    :ARG0 (c11-5 / i)
                    :ARG1 (c11-10 / chop-off-03
                                  :ARG0 (c11-3 / he)
                                  :ARG1 (c11-7 / head
                                               :mod (c11-9 / cracker)
                                               :mod (c11-4 / every)
                                               :location (c11-8 / mutha-phucka
                                                                :mod (c11-13 / that)))))
       :snt3 (c11-12 / person
                     :name (c11-6 / name
                                  :op1 "Holla")))

# ::snt converted
# ::tokens ["converted"]
# ::lemmas ["convert"]
(c12-0 / convert-01)

# ::snt you're absolutely right, I'm just a grammar grump this time of night
# ::tokens ["you", "'re", "absolutely", "right", ",", "I", "'m", "just", "a", "grammar", "grump", "this", "time", "of", "night"]
# ::lemmas ["you", "be", "absolutely", "right", ",", "i", "be", "just", "a", "grammar", "grump", "this", "time", "of", "night"]
(c13-4 / right-06
       :ARG1 (c13-1 / you)
       :ARG2 (c13-6 / grump
                    :mod (c13-5 / grammar)
                    :domain (c13-2 / i)
                    :time (c13-8 / time
                                 :mod (c13-7 / this)
                                 :part-of (c13-3 / night))
                    :mod (c13-0 / just))
       :degree (c13-9 / absolute))

# ::snt . time to send this Iranian cleric back from where he came a body bag would do just fine
# ::tokens [".", "time", "to", "send", "this", "Iranian", "cleric", "back", "from", "where", "he", "came", "a", "body", "bag", "would", "do", "just", "fine"]
# ::lemmas [".", "time", "to", "send", "this", "Iranian", "cleric", "back", "from", "where", "he", "come", "a", "body", "bag", "would", "do", "just", "fine"]
(c14-7 / good-02
       :ARG1 (c14-9 / send-03
                    :ARG1 (c14-6 / cleric
                                 :mod (c14-5 / country
                                             :name (c14-4 / name
                                                          :op1 "Iran"))
                                 :mod (c14-10 / this))
                    :ARG2 (c14-3 / back
                                 :op1 (c14-1 / location
                                             :ARG2-of (c14-8 / come-01
                                                             :ARG1 c14-6))))
       :mod (c14-0 / just)
       :ARG1-of (c14-2 / fine-04))

# ::snt Ooooop's!!!!! Lol
# ::tokens ["Ooooop", "'s", "!", "!", "!", "!", "!", "Lol"]
# ::lemmas ["Ooooop", "'s", "!", "!", "!", "!", "!", "Lol"]
(c15-0 / ooooop
       :mode expressive)

# ::snt who cares how it's spelled?? filth is filth.
# ::tokens ["who", "cares", "how", "it", "'s", "spelled", "?", "?", "filth", "is", "filth", "."]
# ::lemmas ["who", "care", "how", "it", "be", "spell", "?", "?", "filth", "be", "filth", "."]
(c16-1 / multi-sentence
       :snt1 (c16-4 / care-01
                    :ARG0 (c16-7 / amr-unknown)
                    :ARG1 (c16-6 / thing
                                 :manner-of (c16-5 / spell-01
                                                   :ARG1 (c16-2 / it))))
       :snt2 (c16-0 / filth
                    :domain (c16-3 / filth)))

# ::snt Self-proclaimed cleric who is charged with murder, several sexual assaults and sent hate mail to the families of Aussie soldiers.
# ::tokens ["Self", "-", "proclaimed", "cleric", "who", "is", "charged", "with", "murder", ",", "several", "sexual", "assaults", "and", "sent", "hate", "mail", "to", "the", "families", "of", "Aussie", "soldiers", "."]
# ::lemmas ["self", "-", "proclaim", "cleric", "who", "be", "charge", "with", "murder", ",", "several", "sexual", "assault", "and", "send", "hate", "mail", "to", "the", "family", "of", "Aussie", "soldier", "."]
(c17-10 / cleric
        :ARG0-of (c17-8 / proclaim-01
                        :ARG1 (c17-13 / and
                                      :op1 (c17-2 / murder-01)
                                      :op2 (c17-6 / assault-01
                                                  :quant (c17-12 / several)
                                                  :manner (c17-5 / sex-01))))
        :ARG0-of (c17-1 / send-01
                        :ARG1 (c17-9 / mail
                                     :mod (c17-0 / hate-01))
                        :ARG2 (c17-3 / family
                                     :poss (c17-4 / soldier
                                                  :mod (c17-11 / country
                                                               :name (c17-7 / name
                                                                            :op1 "Australia"))))))

# ::snt And who is he when he's at home? ...Hmmm, maybe that's his issue.
# ::tokens ["And", "who", "is", "he", "when", "he", "'s", "at", "home", "?", "...", "Hmmm", ",", "maybe", "that", "'s", "his", "issue", "."]
# ::lemmas ["and", "who", "be", "he", "when", "he", "be", "at", "home", "?", "...", "hmmm", ",", "maybe", "that", "be", "his", "issue", "."]
(c18-5 / and
       :op2 (c18-0 / he
                   :domain (c18-2 / amr-unknown)
                   :time (c18-1 / be-located-at-91
                                :ARG2 (c18-6 / home)
                                :ARG1 c18-0))
       :mod (c18-3 / hmm
                   :mode expressive)
       :ARG1-of (c18-4 / possible-01))

# ::snt Only thing crackers respect. Is violence!!!!! Dick head!!!!! Holla
# ::tokens ["Only", "thing", "crackers", "respect", ".", "Is", "violence", "!", "!", "!", "!", "!", "Dick", "head", "!", "!", "!", "!", "!", "Holla"]
# ::lemmas ["only", "thing", "cracker", "respect", ".", "be", "violence", "!", "!", "!", "!", "!", "Dick", "head", "!", "!", "!", "!", "!", "Holla"]
(c19-1 / multi-sentence
       :snt1 (c19-6 / respect-01
                    :ARG0 (c19-7 / cracker)
                    :ARG1 (c19-9 / thing
                                 :mod (c19-2 / only)))
       :snt2 (c19-4 / violence
                    :mode expressive)
       :snt3 (c19-0 / head
                    :mod (c19-8 / dick))
       :snt4 (c19-5 / person
                    :name (c19-3 / name
                                 :op1 "Holla")))

# ::snt and again media asked not to name him
# ::tokens ["and", "again", "media", "asked", "not", "to", "name", "him"]
# ::lemmas ["and", "again", "medium", "ask", "not", "to", "name", "he"]
(c21-5 / and
       :op2 (c21-2 / ask-02
                   :ARG0 (c21-1 / media)
                   :ARG1 (c21-3 / name-01
                                :ARG0 c21-1
                                :ARG1 (c21-0 / he)
                                :polarity -)
                   :mod (c21-4 / again)))

# ::snt Put a bullet in his head
# ::tokens ["Put", "a", "bullet", "in", "his", "head"]
# ::lemmas ["put", "a", "bullet", "in", "his", "head"]
(c22-1 / put-01
       :ARG1 (c22-3 / bullet)
       :ARG2 (c22-0 / head
                    :part-of (c22-2 / he)))

# ::snt : : Police believe the man behind the Sydney siege is Iraninan cleric Man Haron Monis
# ::tokens [":", ":", "Police", "believe", "the", "man", "behind", "the", "Sydney", "siege", "is", "Iraninan", "cleric", "Man", "Haron", "Monis"]
# ::lemmas [":", ":", "police", "believe", "the", "man", "behind", "the", "Sydney", "siege", "be", "Iraninan", "cleric", "Man", "Haron", "Monis"]
(c23-1 / believe-01
       :ARG0 (c23-4 / police)
       :ARG1 (c23-0 / man
                    :name (c23-2 / name
                                 :op1 "Haron"
                                 :op2 "Monis")
                    :mod (c23-6 / cleric
                                :source (c23-5 / country
                                               :name (c23-3 / name
                                                            :op1 "Iran")))
                    :ARG0-of (c23-8 / cause-01
                                    :ARG1 (c23-9 / siege-01
                                                 :location (c23-10 / city
                                                                   :name (c23-7 / name
                                                                                :op1 "Sydney"))))))
