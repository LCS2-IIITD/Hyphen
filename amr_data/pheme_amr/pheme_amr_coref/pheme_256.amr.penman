# ::snt You are a profoundly stupid asshole, using today's events to grind political axes.
# ::tokens ["You", "are", "a", "profoundly", "stupid", "asshole", ",", "using", "today", "'s", "events", "to", "grind", "political", "axes", "."]
# ::lemmas ["you", "be", "a", "profoundly", "stupid", "asshole", ",", "use", "today", "'s", "event", "to", "grind", "political", "axis", "."]
(c1-9 / asshole
      :mod (c1-6 / stupid
                 :degree (c1-4 / profound))
      :domain (c1-0 / you)
      :ARG0-of (c1-1 / use-01
                     :ARG1 (c1-2 / event
                                 :time (c1-7 / today))
                     :ARG2 (c1-5 / grind-01
                                 :ARG0 c1-0
                                 :ARG1 (c1-3 / axe
                                             :mod (c1-8 / politics)))))

# ::snt I'm not a prog fag lover like you seem to be.
# ::tokens ["I", "'m", "not", "a", "prog", "fag", "lover", "like", "you", "seem", "to", "be", "."]
# ::lemmas ["i", "be", "not", "a", "prog", "fag", "lover", "like", "you", "seem", "to", "be", "."]
(c2-1 / lover
      :mod (c2-4 / prog)
      :domain (c2-3 / i)
      :ARG1-of (c2-5 / resemble-01
                     :ARG2 (c2-6 / lover
                                 :ARG1-of (c2-7 / seem-01
                                                :ARG2 (c2-0 / you))
                                 :mod (c2-2 / fag
                                            :mod c2-4)))
      :polarity -)

# ::snt How are those "common sense" gun legislations working Canada? As well as in Chicago I see.
# ::tokens ["How", "are", "those", "\"", "common", "sense", "\"", "gun", "legislations", "working", "Canada", "?", "As", "well", "as", "in", "Chicago", "I", "see", "."]
# ::lemmas ["how", "be", "those", "\"", "common", "sense", "\"", "gun", "legislation", "work", "Canada", "?", "as", "well", "as", "in", "Chicago", "i", "see", "."]
(c3-2 / multi-sentence
      :snt1 (c3-0 / work-09
                  :ARG1 (c3-1 / legislate-01
                              :ARG1 (c3-12 / gun)
                              :mod (c3-13 / sense
                                          :ARG1-of (c3-4 / share-01))
                              :mod (c3-14 / that))
                  :ARG2 (c3-11 / country
                               :name (c3-7 / name
                                           :op1 "Canada"))
                  :manner (c3-15 / amr-unknown))
      :snt2 (c3-3 / see-01
                  :ARG0 (c3-6 / i)
                  :location (c3-5 / and
                                  :op1 (c3-10 / city
                                              :name (c3-8 / name
                                                          :op1 "Chicago"))
                                  :op2 (c3-9 / as-well))))

# ::snt Bullshit. There is indeed a human right to self defense you senseless commie fuck
# ::tokens ["Bullshit", ".", "There", "is", "indeed", "a", "human", "right", "to", "self", "defense", "you", "senseless", "commie", "fuck"]
# ::lemmas ["Bullshit", ".", "there", "be", "indeed", "a", "human", "right", "to", "self", "defense", "you", "senseles", "commie", "fuck"]
(c4-2 / multi-sentence
      :snt1 (c4-3 / bullshit-01)
      :snt2 (c4-6 / right-05
                  :ARG1 (c4-0 / human)
                  :ARG2 (c4-7 / defend-01
                              :ARG0 c4-0
                              :ARG1 c4-0)
                  :mod (c4-5 / indeed))
      :snt3 (c4-10 / say-01
                   :ARG0 (c4-8 / i)
                   :ARG1 c4-6
                   :ARG1 (c4-1 / fuck
                               :mod (c4-9 / commie)
                               :ARG1-of (c4-4 / sense-02
                                              :polarity -))
                   :ARG2 c4-7)
      :ARG2 c4-1)

# ::snt And I can guarantee you know fuck all about Canadian law.
# ::tokens ["And", "I", "can", "guarantee", "you", "know", "fuck", "all", "about", "Canadian", "law", "."]
# ::lemmas ["and", "i", "can", "guarantee", "you", "know", "fuck", "all", "about", "Canadian", "law", "."]
(c5-10 / and
       :op2 (c5-6 / possible-01
                  :ARG1 (c5-8 / guarantee-01
                              :ARG0 (c5-4 / i)
                              :ARG1 (c5-9 / know-01
                                          :ARG0 (c5-0 / you)
                                          :ARG1 (c5-3 / all
                                                      :topic (c5-1 / law
                                                                   :mod (c5-7 / country
                                                                              :name (c5-5 / name
                                                                                          :op1 "Canada"))))
                                          :mod (c5-2 / fuck
                                                     :mode expressive))
                              :ARG2 c5-0)))

# ::snt YOu are a pathetic piece of shit, revealing your love of slavery.
# ::tokens ["YOu", "are", "a", "pathetic", "piece", "of", "shit", ",", "revealing", "your", "love", "of", "slavery", "."]
# ::lemmas ["you", "be", "a", "pathetic", "piece", "of", "shit", ",", "reveal", "your", "love", "of", "slavery", "."]
(c6-3 / piece
      :consist-of (c6-5 / shit)
      :mod (c6-6 / pathetic)
      :domain (c6-0 / you)
      :ARG0-of (c6-4 / reveal-01
                     :ARG1 (c6-1 / love-01
                                 :ARG0 c6-0
                                 :ARG1 (c6-2 / slavery))))

# ::snt what a gem you are. blocked.
# ::tokens ["what", "a", "gem", "you", "are", ".", "blocked", "."]
# ::lemmas ["what", "a", "gem", "you", "be", ".", "block", "."]
(c7-1 / multi-sentence
      :snt1 (c7-3 / gem
                  :domain (c7-0 / you)
                  :degree (c7-4 / so))
      :snt2 (c7-2 / block-01
                  :ARG1 c7-3))

# ::snt Death is not safety.
# ::tokens ["Death", "is", "not", "safety", "."]
# ::lemmas ["death", "be", "not", "safety", "."]
(c8-0 / safe-01
      :domain (c8-1 / die-01)
      :polarity -)

# ::snt No, I will not accept people being murdered as a thing we have to have for this
# ::tokens ["No", ",", "I", "will", "not", "accept", "people", "being", "murdered", "as", "a", "thing", "we", "have", "to", "have", "for", "this"]
# ::lemmas ["no", ",", "i", "will", "not", "accept", "people", "be", "murder", "as", "a", "thing", "we", "have", "to", "have", "for", "this"]
(c9-7 / accept-01
      :ARG0 (c9-3 / i)
      :ARG1 (c9-1 / murder-01
                  :ARG1 (c9-4 / person)
                  :mod (c9-6 / thing
                             :ARG1-of (c9-2 / obligate-01
                                            :ARG0 (c9-0 / we)
                                            :purpose (c9-5 / this))))
      :polarity -)

# ::snt Fuck Canadian law, I know about HUMAN RIGHTS you prog fuck
# ::tokens ["Fuck", "Canadian", "law", ",", "I", "know", "about", "HUMAN", "RIGHTS", "you", "prog", "fuck"]
# ::lemmas ["Fuck", "Canadian", "law", ",", "i", "know", "about", "human", "right", "you", "prog", "fuck"]
(c10-10 / and
        :op1 (c10-2 / fuck-01
                    :ARG0 (c10-3 / i)
                    :ARG1 (c10-1 / law
                                 :mod (c10-8 / country
                                             :name (c10-5 / name
                                                          :op1 "Canada")))
                    :mode expressive)
        :op2 (c10-9 / know-01
                    :ARG0 c10-3
                    :ARG1 (c10-7 / right-05
                                 :ARG1 (c10-0 / human)))
        :op3 (c10-4 / fuck-01
                    :mod (c10-6 / prog)
                    :mode expressive))

# ::snt There is no "human right" to self defense, check the Declaration, but legal right!
# ::tokens ["There", "is", "no", "\"", "human", "right", "\"", "to", "self", "defense", ",", "check", "the", "Declaration", ",", "but", "legal", "right", "!"]
# ::lemmas ["there", "be", "no", "\"", "human", "right", "\"", "to", "self", "defense", ",", "check", "the", "Declaration", ",", "but", "legal", "right", "!"]
(c11-7 / contrast-01
       :ARG1 (c11-6 / right-05
                    :ARG1 (c11-0 / human)
                    :ARG2 (c11-9 / defend-01
                                 :ARG0 c11-0
                                 :ARG1 c11-0)
                    :ARG1-of (c11-8 / cause-01
                                    :ARG0 (c11-10 / check-01
                                                  :ARG0 (c11-1 / you)
                                                  :ARG1 (c11-5 / publication
                                                               :name (c11-4 / name
                                                                            :op1 "Declaration"))
                                                  :mode imperative))
                    :polarity -)
       :ARG2 (c11-3 / right-05
                    :ARG2 c11-9
                    :ARG1-of (c11-2 / legal-02)))

# ::snt suck a bag of dicks buddy
# ::tokens ["suck", "a", "bag", "of", "dicks", "buddy"]
# ::lemmas ["suck", "a", "bag", "of", "dick", "buddy"]
(c12-5 / say-01
       :ARG0 (c12-2 / i)
       :ARG1 (c12-1 / suck-01
                    :ARG0 (c12-0 / buddy)
                    :ARG1 (c12-4 / bag
                                 :consist-of (c12-3 / dick))
                    :mode imperative)
       :ARG2 c12-0)

# ::snt goofleearth
# ::tokens ["goofleearth"]
# ::lemmas ["goofleearth"]
(c13-0 / dole-out-01
       :ARG0 (c13-1 / i))

# ::snt Yes you are!
# ::tokens ["Yes", "you", "are", "!"]
# ::lemmas ["yes", "you", "be", "!"]
(c14-0 / yes
       :domain (c14-1 / you)
       :mode expressive)

# ::snt hey how about FUCK YOU and your cheap shots
# ::tokens ["hey", "how", "about", "FUCK", "YOU", "and", "your", "cheap", "shots"]
# ::lemmas ["hey", "how", "about", "fuck", "you", "and", "your", "cheap", "shot"]
(c15-5 / suggest-01
       :ARG1 (c15-2 / fuck-01
                    :ARG1 (c15-6 / and
                                 :op1 (c15-1 / you)
                                 :op2 (c15-3 / shot
                                             :poss c15-1
                                             :ARG1-of (c15-4 / cheap-02)))
                    :mode expressive)
       :mod (c15-0 / hey
                   :mode expressive))

# ::snt People may have died, and you're using it as an excuse for cheap political shots.
# ::tokens ["People", "may", "have", "died", ",", "and", "you", "'re", "using", "it", "as", "an", "excuse", "for", "cheap", "political", "shots", "."]
# ::lemmas ["people", "may", "have", "die", ",", "and", "you", "be", "use", "it", "as", "an", "excuse", "for", "cheap", "political", "shot", "."]
(c16-9 / and
       :op1 (c16-4 / possible-01
                   :ARG1 (c16-5 / die-01
                                :ARG1 (c16-8 / person)))
       :op2 (c16-1 / use-01
                   :ARG0 (c16-0 / you)
                   :ARG1 c16-4
                   :ARG2 (c16-3 / excuse-02
                                :ARG0 c16-0
                                :ARG1 (c16-7 / shoot-01
                                             :mod (c16-2 / politics)
                                             :ARG1-of (c16-6 / cheap-02)))))

# ::snt Give a quote?
# ::tokens ["Give", "a", "quote", "?"]
# ::lemmas ["give", "a", "quote", "?"]
(c17-0 / quote-01
       :polarity (c17-1 / amr-unknown))

# ::snt Dumbass
# ::tokens ["Dumbass"]
# ::lemmas ["dumbass"]
(c18-1 / dumbass
       :domain (c18-0 / you))

# ::snt Most definitely a right to self defense! Stop all this pc indoctrination
# ::tokens ["Most", "definitely", "a", "right", "to", "self", "defense", "!", "Stop", "all", "this", "pc", "indoctrination"]
# ::lemmas ["most", "definitely", "a", "right", "to", "self", "defense", "!", "stop", "all", "this", "pc", "indoctrination"]
(c19-2 / multi-sentence
       :snt1 (c19-7 / right-05
                    :ARG2 (c19-6 / defend-01
                                 :ARG1 (c19-10 / self))
                    :mod (c19-1 / definite
                                :mod (c19-5 / most)))
       :snt2 (c19-3 / stop-01
                    :ARG0 (c19-0 / you)
                    :ARG1 (c19-4 / indoctrinate-01
                                 :ARG2 (c19-8 / correct-02
                                              :mod (c19-9 / politics))
                                 :mod (c19-11 / this)
                                 :mod (c19-12 / all))
                    :mode imperative))

# ::snt were supposedly shot up. So yeah, don't get mad because I got there first.
# ::tokens ["were", "supposedly", "shot", "up", ".", "So", "yeah", ",", "do", "n't", "get", "mad", "because", "I", "got", "there", "first", "."]
# ::lemmas ["be", "supposedly", "shoot", "up", ".", "so", "yeah", ",", "do", "not", "get", "mad", "because", "i", "get", "there", "first", "."]
(c20-1 / multi-sentence
       :snt1 (c20-10 / shoot-02
                     :ARG2 (c20-2 / up)
                     :ARG1-of (c20-4 / suppose-01))
       :snt2 (c20-7 / cause-01
                    :ARG0 (c20-8 / get-03
                                 :ARG1 (c20-5 / i)
                                 :ARG2 (c20-11 / there)
                                 :ord (c20-3 / ordinal-entity
                                             :value 1)
                                 :ARG1-of c20-7)
                    :ARG1 (c20-0 / you)
                    :ARG2 (c20-6 / mad-04
                                 :ARG1 c20-0)
                    :mod (c20-9 / yeah
                                :mode expressive)
                    :polarity -
                    :mode imperative))

# ::snt I'm using it to point out that the goal of the left leads to death.
# ::tokens ["I", "'m", "using", "it", "to", "point", "out", "that", "the", "goal", "of", "the", "left", "leads", "to", "death", "."]
# ::lemmas ["i", "be", "use", "it", "to", "point", "out", "that", "the", "goal", "of", "the", "left", "lead", "to", "death", "."]
(c21-1 / use-01
       :ARG0 (c21-2 / i)
       :ARG1 (c21-5 / it)
       :ARG2 (c21-3 / point-out-02
                    :ARG0 c21-2
                    :ARG1 (c21-0 / lead-03
                                 :ARG0 (c21-6 / goal
                                              :poss (c21-7 / left-19))
                                 :ARG2 (c21-4 / die-01))))

# ::snt Hey, I'm just pointing out that liberty is more safe that totalitarianism.
# ::tokens ["Hey", ",", "I", "'m", "just", "pointing", "out", "that", "liberty", "is", "more", "safe", "that", "totalitarianism", "."]
# ::lemmas ["hey", ",", "i", "be", "just", "point", "out", "that", "liberty", "be", "more", "safe", "that", "totalitarianism", "."]
(c22-5 / point-out-02
       :ARG0 (c22-4 / i)
       :ARG1 (c22-0 / have-degree-91
                    :ARG1 (c22-2 / liberty)
                    :ARG2 (c22-6 / safe-01
                                 :ARG0 c22-2)
                    :ARG3 (c22-3 / more)
                    :ARG4 (c22-7 / totalitarianism))
       :mod (c22-1 / just)
       :mod (c22-8 / hey
                   :mode expressive))

# ::snt Honestly, go back to whatever hole you crawled out of.
# ::tokens ["Honestly", ",", "go", "back", "to", "whatever", "hole", "you", "crawled", "out", "of", "."]
# ::lemmas ["honestly", ",", "go", "back", "to", "whatever", "hole", "you", "crawl", "out", "of", "."]
(c23-6 / go-02
       :ARG0 (c23-1 / you)
       :ARG4 (c23-0 / hole
                    :ARG2-of (c23-5 / crawl-01
                                    :ARG0 c23-1
                                    :direction (c23-4 / out-of))
                    :mod (c23-2 / whatever))
       :direction (c23-3 / back)
       :ARG1-of (c23-7 / honest-01)
       :mode imperative)

# ::snt Oh boy, you're rubber and I'm glue? Guess what shit bag, you're also blocked.
# ::tokens ["Oh", "boy", ",", "you", "'re", "rubber", "and", "I", "'m", "glue", "?", "Guess", "what", "shit", "bag", ",", "you", "'re", "also", "blocked", "."]
# ::lemmas ["oh", "boy", ",", "you", "be", "rubber", "and", "i", "be", "glue", "?", "guess", "what", "shit", "bag", ",", "you", "be", "also", "block", "."]
(c24-1 / multi-sentence
       :snt1 (c24-12 / and
                     :op1 (c24-6 / rubber
                                 :domain (c24-0 / you))
                     :op2 (c24-8 / glue-01
                                 :ARG1 (c24-5 / i))
                     :mod (c24-3 / oh
                                 :mode expressive))
       :snt2 (c24-7 / guess-01
                    :ARG0 (c24-10 / you)
                    :ARG1 (c24-2 / bag
                                 :mod (c24-11 / shit)
                                 :ARG1-of (c24-9 / block-01
                                                 :mod (c24-4 / also)))
                    :mode imperative))

# ::snt People have a RIGHT a HUMAN RIGHT, to self defense.
# ::tokens ["People", "have", "a", "RIGHT", "a", "HUMAN", "RIGHT", ",", "to", "self", "defense", "."]
# ::lemmas ["people", "have", "a", "right", "a", "human", "right", ",", "to", "self", "defense", "."]
(c25-4 / right-05
       :ARG1 (c25-2 / person)
       :ARG2 (c25-1 / right-05
                    :ARG1 c25-2
                    :ARG2 (c25-3 / defend-01
                                 :ARG0 c25-2
                                 :ARG1 c25-2
                                 :ARG3 (c25-5 / self))
                    :mod (c25-0 / human)))

# ::snt supposed safety these "governments" seem to think they are giving us.
# ::tokens ["supposed", "safety", "these", "\"", "governments", "\"", "seem", "to", "think", "they", "are", "giving", "us", "."]
# ::lemmas ["suppose", "safety", "these", "\"", "government", "\"", "seem", "to", "think", "they", "be", "give", "we", "."]
(c26-6 / seem-01
       :ARG1 (c26-7 / think-01
                    :ARG0 (c26-4 / government-organization
                                 :ARG0-of (c26-3 / govern-01)
                                 :mod (c26-5 / this))
                    :ARG1 (c26-2 / give-01
                                 :ARG0 c26-4
                                 :ARG1 (c26-1 / safe-01)
                                 :ARG2 (c26-0 / we))))

# ::snt And the left rolled out their gun control after the notional "kids" at sandy hook
# ::tokens ["And", "the", "left", "rolled", "out", "their", "gun", "control", "after", "the", "notional", "\"", "kids", "\"", "at", "sandy", "hook"]
# ::lemmas ["and", "the", "left", "roll", "out", "their", "gun", "control", "after", "the", "notional", "\"", "kid", "\"", "at", "sandy", "hook"]
(c27-9 / and
       :op2 (c27-4 / roll-out-02
                   :ARG0 (c27-1 / left-19)
                   :ARG1 (c27-5 / control-01
                                :ARG0 c27-1
                                :ARG1 (c27-6 / gun))
                   :time (c27-2 / after
                                :op1 (c27-8 / kid
                                            :mod (c27-3 / ional)
                                            :location (c27-0 / hook
                                                             :mod (c27-7 / sand))))))
