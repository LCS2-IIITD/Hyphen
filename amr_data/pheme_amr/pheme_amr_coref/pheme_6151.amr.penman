# ::snt We're all with you.
# ::tokens ["We", "'re", "all", "with", "you", "."]
# ::lemmas ["we", "be", "all", "with", "you", "."]
(c1-2 / accompany-01
      :ARG0 (c1-0 / we
                  :mod (c1-1 / all))
      :ARG1 (c1-3 / you))

# ::snt from the sound if fire he could be. It's all horrid
# ::tokens ["from", "the", "sound", "if", "fire", "he", "could", "be", ".", "It", "'s", "all", "horrid"]
# ::lemmas ["from", "the", "sound", "if", "fire", "he", "could", "be", ".", "it", "be", "all", "horrid"]
(c2-2 / multi-sentence
      :snt1 (c2-0 / have-condition-91
                  :ARG1 (c2-5 / possible-01
                              :ARG1 (c2-1 / fire-01
                                          :ARG1 (c2-8 / he)))
                  :ARG2 (c2-6 / sound))
      :snt2 (c2-4 / horrid
                  :domain (c2-3 / it
                                :mod (c2-7 / all))))

# ::snt oh shit
# ::tokens ["oh", "shit"]
# ::lemmas ["oh", "shit"]
(c3-0 / shit
      :mod (c3-1 / oh)
      :mode expressive)

# ::snt Appreciate it, libtard.
# ::tokens ["Appreciate", "it", ",", "libtard", "."]
# ::lemmas ["appreciate", "it", ",", "libtard", "."]
(c4-4 / say-01
      :ARG0 (c4-1 / i)
      :ARG1 (c4-5 / appreciate-02
                  :ARG0 c4-1
                  :ARG1 (c4-3 / it))
      :ARG2 (c4-2 / person
                  :ARG1-of (c4-0 / liberal-02)))

# ::snt that didn't sound good. It's all very sad
# ::tokens ["that", "did", "n't", "sound", "good", ".", "It", "'s", "all", "very", "sad"]
# ::lemmas ["that", "do", "not", "sound", "good", ".", "it", "be", "all", "very", "sad"]
(c5-0 / multi-sentence
      :snt1 (c5-5 / sound-01
                  :ARG1 (c5-6 / that)
                  :ARG2 (c5-4 / good-02)
                  :polarity -)
      :snt2 (c5-1 / sad-02
                  :ARG1 (c5-2 / it
                              :mod (c5-7 / all))
                  :degree (c5-3 / very)))

# ::snt Take that bastard out!
# ::tokens ["Take", "that", "bastard", "out", "!"]
# ::lemmas ["take", "that", "bastard", "out", "!"]
(c6-2 / take-out-11
      :ARG0 (c6-0 / you)
      :ARG1 (c6-3 / bastard
                  :mod (c6-1 / that))
      :mode imperative)

# ::snt is he dead yet
# ::tokens ["is", "he", "dead", "yet"]
# ::lemmas ["be", "he", "dead", "yet"]
(c7-2 / die-01
      :polarity (c7-3 / amr-unknown)
      :ARG1 (c7-0 / he)
      :time (c7-1 / yet))

# ::snt agree with you but I think we will see more of this as so easy to pull off
# ::tokens ["agree", "with", "you", "but", "I", "think", "we", "will", "see", "more", "of", "this", "as", "so", "easy", "to", "pull", "off"]
# ::lemmas ["agree", "with", "you", "but", "i", "think", "we", "will", "see", "more", "of", "this", "as", "so", "easy", "to", "pull", "off"]
(c8-7 / contrast-01
      :ARG1 (c8-11 / agree-01
                   :ARG0 (c8-5 / i)
                   :ARG2 (c8-0 / you))
      :ARG2 (c8-10 / think-01
                   :ARG0 c8-5
                   :ARG1 (c8-9 / see-01
                               :ARG0 (c8-1 / we)
                               :ARG1 (c8-8 / this
                                           :quant (c8-2 / more))
                               :ARG2 (c8-3 / easy-05
                                           :ARG1 (c8-6 / pull-off-03
                                                       :ARG1 c8-8)
                                           :degree (c8-4 / so)))))

# ::snt have been taken out on stretchers. Do u think they have taken him out
# ::tokens ["have", "been", "taken", "out", "on", "stretchers", ".", "Do", "u", "think", "they", "have", "taken", "him", "out"]
# ::lemmas ["have", "be", "take", "out", "on", "stretcher", ".", "do", "u", "think", "they", "have", "take", "he", "out"]
(c9-2 / multi-sentence
      :snt1 (c9-8 / take-01
                  :ARG1 (c9-6 / they)
                  :ARG3 (c9-3 / out)
                  :manner (c9-7 / stretcher))
      :snt2 (c9-5 / think-01
                  :ARG0 (c9-1 / you)
                  :ARG1 (c9-4 / take-01
                              :ARG0 c9-6)
                  :ARG1 (c9-0 / he)
                  :ARG3 c9-3)
      :polarity (c9-9 / amr-unknown))

# ::snt let's hope the mad dog is the only casualtie of this drama
# ::tokens ["let", "'s", "hope", "the", "mad", "dog", "is", "the", "only", "casualtie", "of", "this", "drama"]
# ::lemmas ["let", "us", "hope", "the", "mad", "dog", "be", "the", "only", "casualtie", "of", "this", "drama"]
(c10-0 / hope-01
       :ARG0 (c10-1 / we)
       :ARG1 (c10-8 / tie
                    :mod (c10-6 / casual)
                    :mod (c10-4 / only)
                    :poss (c10-5 / drama
                                 :mod (c10-7 / this))
                    :domain (c10-2 / dog
                                   :ARG1-of (c10-3 / mad-02)))
       :mode imperative)

# ::snt hope so dawn it will serve as a warning to those non peace lovers
# ::tokens ["hope", "so", "dawn", "it", "will", "serve", "as", "a", "warning", "to", "those", "non", "peace", "lovers"]
# ::lemmas ["hope", "so", "dawn", "it", "will", "serve", "as", "a", "warning", "to", "those", "non", "peace", "lover"]
(c11-0 / hope-01
       :ARG0 (c11-5 / i)
       :ARG1 (c11-9 / serve-01
                    :ARG0 (c11-8 / it)
                    :ARG1 (c11-1 / warn-01
                                 :ARG2 (c11-3 / lover
                                              :mod (c11-6 / peace)
                                              :mod (c11-10 / that)
                                              :polarity -))
                    :time (c11-7 / date-entity
                                 :dayperiod (c11-2 / dawn)
                                 :mod (c11-4 / so))))

# ::snt : : A series of loud blasts and bursts of ammunition at cafe" Someone please give him his order
# ::tokens [":", ":", "A", "series", "of", "loud", "blasts", "and", "bursts", "of", "ammunition", "at", "cafe", "\"", "Someone", "please", "give", "him", "his", "order"]
# ::lemmas [":", ":", "a", "series", "of", "loud", "blast", "and", "burst", "of", "ammunition", "at", "cafe", "\"", "someone", "please", "give", "he", "his", "order"]
(c12-2 / multi-sentence
       :snt1 (c12-9 / series
                    :consist-of (c12-10 / and
                                        :op1 (c12-3 / blast-05
                                                    :mod (c12-1 / loud))
                                        :op2 (c12-7 / burst-02
                                                    :ARG1 (c12-6 / ammunition)))
                    :location (c12-8 / cafe))
       :snt2 (c12-4 / order-02
                    :ARG0 (c12-5 / someone)
                    :ARG1 (c12-0 / he)
                    :mode imperative
                    :polite +))

# ::snt A sec delay, i might be being stupid with this question, but why?
# ::tokens ["A", "sec", "delay", ",", "i", "might", "be", "being", "stupid", "with", "this", "question", ",", "but", "why", "?"]
# ::lemmas ["a", "sec", "delay", ",", "i", "might", "be", "be", "stupid", "with", "this", "question", ",", "but", "why", "?"]
(c13-0 / multi-sentence
       :snt1 (c13-6 / delay-01
                    :ARG2 (c13-12 / temporal-quantity
                                  :unit (c13-10 / second)
                                  :quant 1))
       :snt2 (c13-7 / contrast-01
                    :ARG1 (c13-5 / possible-01
                                 :ARG1 (c13-1 / stupid
                                              :domain (c13-3 / i)
                                              :ARG1-of (c13-8 / cause-01
                                                              :ARG0 (c13-9 / thing
                                                                           :ARG1-of (c13-2 / question-01)
                                                                           :mod (c13-4 / this)))))
                    :ARG2 (c13-11 / cause-01
                                  :ARG0 (c13-13 / amr-unknown))))

# ::snt pleased you stopped the live feed, good call
# ::tokens ["pleased", "you", "stopped", "the", "live", "feed", ",", "good", "call"]
# ::lemmas ["please", "you", "stop", "the", "live", "feed", ",", "good", "call"]
(c14-2 / multi-sentence
       :snt1 (c14-5 / pleased-01
                    :ARG0 (c14-8 / stop-01
                                 :ARG0 (c14-0 / you)
                                 :ARG1 (c14-1 / feed-01
                                              :mod (c14-3 / live)))
                    :ARG1 (c14-4 / i))
       :snt2 (c14-6 / call-02
                    :ARG1-of (c14-7 / good-02)))

# ::snt Someone please explain to your presenters what flashbang/mine bangs are.
# ::tokens ["Someone", "please", "explain", "to", "your", "presenters", "what", "flashbang", "/", "mine", "bangs", "are", "."]
# ::lemmas ["someone", "please", "explain", "to", "your", "presenter", "what", "flashbang", "/", "mine", "bang", "be", "."]
(c15-4 / explain-01
       :ARG0 (c15-7 / someone)
       :ARG1 (c15-5 / slash
                    :op1 (c15-1 / flashbang)
                    :op2 (c15-3 / bang
                                :ARG1-of (c15-2 / mine-01))
                    :domain (c15-9 / amr-unknown))
       :ARG2 (c15-6 / person
                    :ARG0-of (c15-8 / present-01
                                    :ARG2 (c15-0 / you)))
       :mode imperative
       :polite +)

# ::snt How close are you to this, Krys?
# ::tokens ["How", "close", "are", "you", "to", "this", ",", "Krys", "?"]
# ::lemmas ["how", "close", "be", "you", "to", "this", ",", "Krys", "?"]
(c16-3 / say-01
       :ARG1 (c16-2 / close-10
                    :ARG1 (c16-1 / person
                                 :name (c16-0 / name
                                              :op1 "Krys"))
                    :ARG2 (c16-4 / this)
                    :degree (c16-5 / amr-unknown))
       :ARG2 c16-1)

# ::snt Go play with little boys, like you always do.
# ::tokens ["Go", "play", "with", "little", "boys", ",", "like", "you", "always", "do", "."]
# ::lemmas ["go", "play", "with", "little", "boy", ",", "like", "you", "always", "do", "."]
(c17-5 / go-05
       :ARG0 (c17-0 / you)
       :ARG1 (c17-3 / play-01
                    :ARG0 c17-0
                    :ARG2 (c17-2 / boy
                                 :mod (c17-1 / little))
                    :ARG1-of (c17-4 / resemble-01
                                    :ARG2 (c17-6 / play-01
                                                 :ARG0 c17-0
                                                 :time (c17-7 / always))))
       :mode imperative)

# ::snt So glad it's over for all those caught up in this. Torture, kidnappings and atrocities did nought to help.
# ::tokens ["So", "glad", "it", "'s", "over", "for", "all", "those", "caught", "up", "in", "this", ".", "Torture", ",", "kidnappings", "and", "atrocities", "did", "nought", "to", "help", "."]
# ::lemmas ["so", "glad", "it", "be", "over", "for", "all", "those", "catch", "up", "in", "this", ".", "torture", ",", "kidnapping", "and", "atrocity", "do", "nought", "to", "help", "."]
(c18-1 / multi-sentence
       :snt1 (c18-10 / glad-02
                     :ARG0 (c18-2 / over-01
                                  :ARG1 (c18-4 / it)
                                  :beneficiary (c18-8 / person
                                                      :mod (c18-14 / all)
                                                      :ARG1-of (c18-9 / catch-up-04
                                                                      :ARG2 (c18-13 / this))))
                     :degree (c18-12 / so))
       :snt2 (c18-6 / nought-02
                    :ARG1 (c18-0 / help-01
                                 :ARG0 (c18-3 / and
                                              :op1 (c18-11 / torture-01)
                                              :op2 (c18-5 / kidnap-01)
                                              :op3 (c18-7 / atrocity)))))

# ::snt Not close. Different state but it was my old hometown so it's shocking and terrifying to hear
# ::tokens ["Not", "close", ".", "Different", "state", "but", "it", "was", "my", "old", "hometown", "so", "it", "'s", "shocking", "and", "terrifying", "to", "hear"]
# ::lemmas ["not", "close", ".", "different", "state", "but", "it", "be", "my", "old", "hometown", "so", "it", "be", "shocking", "and", "terrify", "to", "hear"]
(c19-2 / multi-sentence
       :snt1 (c19-8 / close-10
                    :polarity -)
       :snt2 (c19-7 / contrast-01
                    :ARG1 (c19-12 / state
                                  :ARG1-of (c19-9 / differ-02))
                    :ARG2 (c19-0 / hometown
                                 :poss (c19-6 / i)
                                 :mod (c19-4 / old)
                                 :domain (c19-10 / it)
                                 :ARG0-of (c19-11 / cause-01
                                                  :ARG1 (c19-14 / and
                                                                :op1 (c19-5 / shock-01
                                                                            :ARG0 (c19-1 / hear-01
                                                                                         :ARG1 (c19-3 / it)))
                                                                :op2 (c19-13 / terrify-01
                                                                             :ARG0 c19-1))))))
