# ::snt Yes we do.
# ::tokens ["Yes", "we", "do", "."]
# ::lemmas ["yes", "we", "do", "."]
(c1-1 / do-02
      :ARG0 (c1-0 / we))

# ::snt which Cartoons John?
# ::tokens ["which", "Cartoons", "John", "?"]
# ::lemmas ["which", "Cartoons", "John", "?"]
(c2-3 / say-01
      :ARG1 (c2-2 / Cartoons
                  :domain (c2-4 / amr-unknown))
      :ARG2 (c2-1 / person
                  :name (c2-0 / name
                              :op1 "John")))

# ::snt Cowardly Uk media reaction (esp TV) over Danish cartoons or Jesus and Mo inspires no confidence they will ..
# ::tokens ["Cowardly", "Uk", "media", "reaction", "(", "esp", "TV", ")", "over", "Danish", "cartoons", "or", "Jesus", "and", "Mo", "inspires", "no", "confidence", "they", "will", ".."]
# ::lemmas ["cowardly", "Uk", "medium", "reaction", "(", "esp", "tv", ")", "over", "Danish", "cartoon", "or", "Jesus", "and", "Mo", "inspire", "no", "confidence", "they", "will", ".."]
(c3-3 / inspire-01
      :ARG0 (c3-7 / react-01
                  :ARG0 (c3-1 / media
                              :mod (c3-8 / country
                                         :name (c3-4 / name
                                                     :op1 "U Uk")))
                  :ARG1 (c3-9 / cartoon
                              :mod c3-8
                              :name (c3-5 / name
                                          :op1 "Denmark")))
      :ARG0-of (c3-12 / cause-01
                      :ARG1 (c3-16 / coward))
      :ARG1 (c3-0 / confident-01)
      :ARG1-of (c3-2 / contrast-01
                     :ARG2 (c3-10 / inspire-01
                                  :ARG0 (c3-15 / and
                                               :op1 (c3-6 / person
                                                          :name (c3-11 / name
                                                                       :op1 "Jesus"))
                                               :op2 (c3-14 / person
                                                           :name (c3-13 / name
                                                                        :op1 "Mo")))))
      :polarity -)

# ::snt hear hear John...well said
# ::tokens ["hear", "hear", "John", "...", "well", "said"]
# ::lemmas ["hear", "hear", "John", "...", "well", "say"]
(c4-0 / hear-01
      :ARG0 (c4-2 / i)
      :ARG1 (c4-5 / say-01
                  :ARG0 (c4-4 / person
                              :name (c4-3 / name
                                          :op1 "John"))
                  :mod (c4-1 / well))
      :ARG2 c4-4)

# ::snt So we now know who's responsible and why?
# ::tokens ["So", "we", "now", "know", "who", "'s", "responsible", "and", "why", "?"]
# ::lemmas ["so", "we", "now", "know", "who", "be", "responsible", "and", "why", "?"]
(c5-5 / cause-01
      :ARG1 (c5-8 / know-01
                  :ARG0 (c5-0 / we)
                  :ARG1 (c5-9 / and
                              :op1 (c5-3 / person
                                         :ARG0-of (c5-4 / responsible-01))
                              :op2 (c5-7 / thing
                                         :ARG0-of (c5-6 / cause-01
                                                        :ARG1 c5-4)))
                  :time (c5-2 / now)
                  :polarity (c5-1 / amr-unknown)))

# ::snt : Every newspaper in Europe should publish those cartoons from Charlie Hebdo tomorrow. Every single one. .... In the world.
# ::tokens [":", "Every", "newspaper", "in", "Europe", "should", "publish", "those", "cartoons", "from", "Charlie", "Hebdo", "tomorrow", ".", "Every", "single", "one", ".", "....", "In", "the", "world", "."]
# ::lemmas [":", "every", "newspaper", "in", "Europe", "should", "publish", "those", "cartoon", "from", "Charlie", "Hebdo", "tomorrow", ".", "every", "single", "one", ".", "....", "in", "the", "world", "."]
(c6-1 / multi-sentence
      :snt1 (c6-9 / recommend-01
                  :ARG1 (c6-8 / publish-01
                              :ARG0 (c6-6 / newspaper
                                          :mod (c6-5 / every)
                                          :location (c6-10 / continent
                                                           :name (c6-7 / name
                                                                       :op1 "Europe")))
                              :ARG1 (c6-11 / cartoon
                                           :source (c6-12 / magazine
                                                          :name (c6-13 / name
                                                                       :op1 "Charlie"
                                                                       :op2 "Chi Hebdo"))
                                           :mod (c6-16 / that))
                              :time (c6-15 / tomorrow)))
      :snt2 (c6-3 / one
                  :mod (c6-2 / every)
                  :ARG1-of (c6-14 / single-02))
      :snt3 (c6-4 / be-located-at-91
                  :ARG2 (c6-0 / world)))

# ::snt and every TV news network
# ::tokens ["and", "every", "TV", "news", "network"]
# ::lemmas ["and", "every", "tv", "news", "network"]
(c7-4 / and
      :op2 (c7-1 / network
                 :mod (c7-2 / news)
                 :mod (c7-3 / television)
                 :mod (c7-0 / every)))

# ::snt They won't tho
# ::tokens ["They", "wo", "n't", "tho"]
# ::lemmas ["they", "will", "not", "tho"]
(c8-0 / have-concession-91
      :ARG1 (c8-1 / do-02
                  :ARG0 (c8-2 / they)
                  :polarity -))

# ::snt how about the guardian Nick?
# ::tokens ["how", "about", "the", "guardian", "Nick", "?"]
# ::lemmas ["how", "about", "the", "guardian", "Nick", "?"]
(c9-3 / amr-unknown
      :topic (c9-1 / person
                   :name (c9-0 / name
                               :op1 "Nick")
                   :ARG0-of (c9-2 / guard-01)))

# ::snt No we don't and fuelling this fire wont help.
# ::tokens ["No", "we", "do", "n't", "and", "fuelling", "this", "fire", "wo", "nt", "help", "."]
# ::lemmas ["no", "we", "do", "not", "and", "fuel", "this", "fire", "will", "not", "help", "."]
(c10-6 / and
       :op1 (c10-4 / do-02
                   :ARG0 (c10-1 / we)
                   :polarity -)
       :op2 (c10-0 / help-01
                   :ARG0 (c10-2 / fuel-01
                                :ARG1 (c10-3 / fire
                                             :mod (c10-5 / this)))
                   :polarity -))

# ::snt : Every newspaper in Europe should publish those cartoons from Charlie Hebdo tomorrow. Every single one. Agree totally
# ::tokens [":", "Every", "newspaper", "in", "Europe", "should", "publish", "those", "cartoons", "from", "Charlie", "Hebdo", "tomorrow", ".", "Every", "single", "one", ".", "Agree", "totally"]
# ::lemmas [":", "every", "newspaper", "in", "Europe", "should", "publish", "those", "cartoon", "from", "Charlie", "Hebdo", "tomorrow", ".", "every", "single", "one", ".", "agree", "totally"]
(c11-1 / multi-sentence
       :snt1 (c11-8 / recommend-01
                    :ARG1 (c11-7 / publish-01
                                 :ARG0 (c11-5 / newspaper
                                              :mod (c11-4 / every)
                                              :location (c11-9 / continent
                                                               :name (c11-6 / name
                                                                            :op1 "Europe")))
                                 :ARG1 (c11-10 / cartoon
                                               :source (c11-11 / magazine
                                                               :name (c11-12 / name
                                                                             :op1 "Charlie"
                                                                             :op2 "Chi Hebdo"))
                                               :mod (c11-16 / that))
                                 :time (c11-15 / tomorrow)))
       :snt2 (c11-3 / one
                    :mod (c11-2 / every)
                    :ARG1-of (c11-13 / single-02))
       :snt3 (c11-17 / agree-01
                     :ARG0 (c11-0 / you)
                     :degree (c11-14 / total)
                     :mode expressive))

# ::snt So we already know who did it and why?
# ::tokens ["So", "we", "already", "know", "who", "did", "it", "and", "why", "?"]
# ::lemmas ["so", "we", "already", "know", "who", "do", "it", "and", "why", "?"]
(c12-8 / know-01
       :ARG0 (c12-0 / we)
       :ARG1 (c12-9 / and
                    :op1 (c12-4 / person
                                :ARG0-of (c12-5 / do-02
                                                :ARG1 (c12-2 / it)))
                    :op2 (c12-7 / thing
                                :ARG0-of (c12-6 / cause-01
                                                :ARG1 c12-5)))
       :time (c12-1 / already)
       :polarity (c12-3 / amr-unknown))

# ::snt Can we still hope for some backbone from the liberal left. Suggest we are all Charlie Hebdo campaign.
# ::tokens ["Can", "we", "still", "hope", "for", "some", "backbone", "from", "the", "liberal", "left", ".", "Suggest", "we", "are", "all", "Charlie", "Hebdo", "campaign", "."]
# ::lemmas ["can", "we", "still", "hope", "for", "some", "backbone", "from", "the", "liberal", "left", ".", "suggest", "we", "be", "all", "Charlie", "Hebdo", "campaign", "."]
(c13-4 / multi-sentence
       :snt1 (c13-10 / possible-01
                     :ARG1 (c13-0 / hope-01
                                  :ARG0 (c13-1 / we)
                                  :ARG1 (c13-6 / backbone
                                               :source (c13-3 / left-19
                                                              :ARG1-of (c13-13 / liberal-02))
                                               :mod (c13-14 / some))
                                  :mod (c13-7 / still)))
       :snt2 (c13-5 / suggest-01
                    :ARG0 (c13-2 / you)
                    :ARG1 (c13-12 / campaign-01
                                  :ARG0 (c13-8 / we
                                               :mod (c13-15 / all))
                                  :ARG1 (c13-11 / magazine
                                                :name (c13-9 / name
                                                             :op1 "Charlie"
                                                             :op2 "Ch Hebdo")))
                    :mode imperative))

# ::snt ABSOLUTELY! It is time to show these wahabbist scums what we all stand for... I hope Europe has the balls!
# ::tokens ["ABSOLUTELY", "!", "It", "is", "time", "to", "show", "these", "wahabbist", "scums", "what", "we", "all", "stand", "for", "...", "I", "hope", "Europe", "has", "the", "balls", "!"]
# ::lemmas ["ABSOLUTELY", "!", "it", "be", "time", "to", "show", "these", "wahabbist", "scum", "what", "we", "all", "stand", "for", "...", "i", "hope", "Europe", "have", "the", "ball", "!"]
(c15-3 / multi-sentence
       :snt1 (c15-16 / absolute
                     :mode expressive)
       :snt2 (c15-15 / time
                     :time-of (c15-14 / show-01
                                      :ARG0 (c15-1 / we
                                                   :mod (c15-7 / all))
                                      :ARG1 (c15-6 / stand-08
                                                   :ARG0 (c15-2 / scum
                                                                :mod (c15-9 / wahabbist)
                                                                :mod (c15-13 / this))
                                                   :ARG2 (c15-11 / thing))))
       :snt3 (c15-0 / hope-01
                    :ARG0 (c15-8 / i)
                    :ARG1 (c15-4 / have-03
                                 :ARG0 (c15-12 / continent
                                               :name (c15-10 / name
                                                             :op1 "Europe"))
                                 :ARG1 (c15-5 / ball))))

# ::snt Couldn't agree more!
# ::tokens ["Could", "n't", "agree", "more", "!"]
# ::lemmas ["could", "not", "agree", "more", "!"]
(c16-3 / possible-01
       :ARG1 (c16-4 / agree-01
                    :ARG0 (c16-2 / i)
                    :ARG1-of (c16-0 / have-quant-91
                                    :ARG3 (c16-1 / more)))
       :polarity -)

# ::snt Charlie Hebdo has more courage than the entire Irish media combined (which wouldn't be hard tbf).
# ::tokens ["Charlie", "Hebdo", "has", "more", "courage", "than", "the", "entire", "Irish", "media", "combined", "(", "which", "would", "n't", "be", "hard", "tbf", ")", "."]
# ::lemmas ["Charlie", "Hebdo", "have", "more", "courage", "than", "the", "entire", "Irish", "medium", "combine", "(", "which", "would", "not", "be", "hard", "tbf", ")", "."]
(c17-0 / have-03
       :ARG0 (c17-2 / magazine
                    :name (c17-4 / name
                                 :op1 "Charlie"
                                 :op2 " Hebdo"))
       :ARG1 (c17-8 / courage
                    :ARG1-of (c17-11 / have-quant-91
                                     :ARG3 (c17-6 / more)
                                     :ARG4 (c17-1 / media
                                                  :mod (c17-3 / entire)
                                                  :mod (c17-7 / country
                                                              :name (c17-5 / name
                                                                           :op1 "Ireland"))
                                                  :ARG1-of (c17-10 / combine-01))))
       :ARG1-of (c17-9 / hard-02
                       :polarity -))

# ::snt I hope too that they are put on a website so that they are permanently recorded and globally available
# ::tokens ["I", "hope", "too", "that", "they", "are", "put", "on", "a", "website", "so", "that", "they", "are", "permanently", "recorded", "and", "globally", "available"]
# ::lemmas ["i", "hope", "too", "that", "they", "be", "put", "on", "a", "website", "so", "that", "they", "be", "permanently", "record", "and", "globally", "available"]
(c18-0 / hope-01
       :ARG0 (c18-3 / i)
       :ARG1 (c18-4 / put-01
                    :ARG1 (c18-8 / they)
                    :ARG2 (c18-1 / website)
                    :purpose (c18-10 / and
                                     :op1 (c18-5 / record-01
                                                 :ARG1 c18-8
                                                 :duration (c18-9 / permanent))
                                     :op2 (c18-2 / available-02
                                                 :ARG2 c18-8
                                                 :manner (c18-6 / globe))))
       :mod (c18-7 / too))

# ::snt . Every newspaper and every news website in the world should publish them. Every day for the rest of the year.
# ::tokens [".", "Every", "newspaper", "and", "every", "news", "website", "in", "the", "world", "should", "publish", "them", ".", "Every", "day", "for", "the", "rest", "of", "the", "year", "."]
# ::lemmas [".", "every", "newspaper", "and", "every", "news", "website", "in", "the", "world", "should", "publish", "they", ".", "every", "day", "for", "the", "rest", "of", "the", "year", "."]
(c19-3 / multi-sentence
       :snt1 (c19-10 / recommend-01
                     :ARG1 (c19-9 / publish-01
                                  :ARG0 (c19-14 / and
                                                :op1 (c19-7 / newspaper
                                                            :mod (c19-5 / every))
                                                :op2 (c19-0 / website
                                                            :mod (c19-8 / news)
                                                            :mod (c19-4 / every)
                                                            :location (c19-6 / world)))
                                  :ARG1 (c19-13 / they)))
       :snt2 (c19-11 / day
                     :mod (c19-1 / every)
                     :duration (c19-12 / rest
                                       :part-of (c19-2 / year))))

# ::snt I know they won't Nick, they're too busy making up excuses for the murderers!
# ::tokens ["I", "know", "they", "wo", "n't", "Nick", ",", "they", "'re", "too", "busy", "making", "up", "excuses", "for", "the", "murderers", "!"]
# ::lemmas ["i", "know", "they", "will", "not", "Nick", ",", "they", "be", "too", "busy", "make", "up", "excuse", "for", "the", "murderer", "!"]
(c20-13 / say-01
        :ARG0 (c20-5 / i)
        :ARG1 (c20-6 / know-01
                     :ARG0 c20-5
                     :ARG1 (c20-4 / event
                                  :mod (c20-14 / they))
                     :ARG1-of (c20-11 / cause-01
                                      :ARG0 (c20-2 / busy-01
                                                   :ARG1 c20-14
                                                   :ARG2 (c20-1 / make-up-10
                                                                :ARG0 c20-14
                                                                :ARG1 (c20-12 / thing
                                                                              :ARG2-of (c20-3 / excuse-02
                                                                                              :ARG0 c20-14
                                                                                              :ARG1 (c20-9 / person
                                                                                                           :ARG0-of (c20-10 / murder-01)))))
                                                   :ARG2-of (c20-0 / have-degree-91
                                                                   :ARG1 c20-14
                                                                   :ARG3 (c20-8 / too))))
                     :polarity -)
        :ARG2 (c20-15 / person
                      :name (c20-7 / name
                                   :op1 "Nick")))

# ::snt Rt" : Every newspaper in The World should publish those cartoons from tomorrow. Every single one.
# ::tokens ["Rt", "\"", ":", "Every", "newspaper", "in", "The", "World", "should", "publish", "those", "cartoons", "from", "tomorrow", ".", "Every", "single", "one", "."]
# ::lemmas ["rt", "\"", ":", "every", "newspaper", "in", "The", "World", "should", "publish", "those", "cartoon", "from", "tomorrow", ".", "every", "single", "one", "."]
(c21-0 / multi-sentence
       :snt1 (c21-7 / person
                    :name (c21-5 / name
                                 :op1 "Rt"))
       :snt2 (c21-8 / recommend-01
                    :ARG1 (c21-14 / publish-01
                                  :ARG0 (c21-6 / newspaper
                                               :mod (c21-4 / every)
                                               :location (c21-1 / broadcast-program
                                                                :name (c21-9 / name
                                                                             :op1 "The"
                                                                             :op2 "World")))
                                  :ARG1 (c21-10 / cartoon
                                                :mod (c21-13 / that)
                                                :time (c21-11 / tomorrow))))
       :snt3 (c21-2 / one
                    :mod (c21-3 / every)
                    :ARG1-of (c21-12 / single-02)))

# ::snt It is a part of the news story of the terrorist attack, after all.
# ::tokens ["It", "is", "a", "part", "of", "the", "news", "story", "of", "the", "terrorist", "attack", ",", "after", "all", "."]
# ::lemmas ["it", "be", "a", "part", "of", "the", "news", "story", "of", "the", "terrorist", "attack", ",", "after", "all", "."]
(c22-0 / have-part-91
       :ARG1 (c22-4 / story
                    :mod (c22-3 / news)
                    :topic (c22-6 / attack-01
                                  :mod (c22-5 / terrorist)))
       :ARG2 (c22-2 / it)
       :mod (c22-1 / after-all))

# ::snt That is for COWARDS: surrender your freedom of expression to wahabbist shit-heads.
# ::tokens ["That", "is", "for", "COWARDS", ":", "surrender", "your", "freedom", "of", "expression", "to", "wahabbist", "shit", "-", "heads", "."]
# ::lemmas ["that", "be", "for", "COWARDS", ":", "surrender", "your", "freedom", "of", "expression", "to", "wahabbist", "shit", "-", "head", "."]
(c23-0 / have-purpose-91
       :ARG1 (c23-8 / that)
       :ARG2 (c23-7 / surrender-01
                    :ARG0 (c23-1 / you)
                    :ARG1 (c23-2 / free-04
                                 :ARG1 c23-1
                                 :ARG3 (c23-3 / express-01
                                              :ARG0 c23-1))
                    :ARG2 (c23-9 / head
                                 :mod (c23-4 / shit)
                                 :mod (c23-6 / religious-group
                                             :name (c23-5 / name
                                                          :op1 "Wahhabism")))))
