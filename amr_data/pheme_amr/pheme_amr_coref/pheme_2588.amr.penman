# ::snt - deciding without emotions on occasion != devoid of emotions (sociopathy).
# ::tokens ["-", "deciding", "without", "emotions", "on", "occasion", "!", "=", "devoid", "of", "emotions", "(", "sociopathy", ")", "."]
# ::lemmas ["-", "decide", "without", "emotion", "on", "occasion", "!", "=", "devoid", "of", "emotion", "(", "sociopathy", ")", "."]
(c1-2 / mean-01
      :ARG1 (c1-6 / decide-01
                  :manner (c1-0 / without-03
                                :ARG1 (c1-5 / emotion)
                                :frequency (c1-4 / occasion)))
      :ARG2 (c1-1 / lack-01
                  :ARG1 (c1-3 / emotion)
                  :ARG1-of c1-2
                  :ARG2 (c1-7 / sociopath)))

# ::snt when it's a kid, people who empathize with kids are emotional. There is no emotion-free perspective.
# ::tokens ["when", "it", "'s", "a", "kid", ",", "people", "who", "empathize", "with", "kids", "are", "emotional", ".", "There", "is", "no", "emotion", "-", "free", "perspective", "."]
# ::lemmas ["when", "it", "be", "a", "kid", ",", "people", "who", "empathize", "with", "kid", "be", "emotional", ".", "there", "be", "no", "emotion", "-", "free", "perspective", "."]
(c2-2 / multi-sentence
      :snt1 (c2-4 / emotional-02
                  :ARG0 (c2-6 / person
                              :ARG0-of (c2-3 / empathize-01
                                             :ARG1 (c2-7 / kid)))
                  :time (c2-5 / kid
                              :domain c2-7))
      :snt2 (c2-8 / perspective
                  :ARG1-of (c2-1 / free-04
                                 :ARG2 (c2-0 / emotion))
                  :polarity -))

# ::snt - definitely a huge problem. The biggest problem here though is a lack of transparency all round.
# ::tokens ["-", "definitely", "a", "huge", "problem", ".", "The", "biggest", "problem", "here", "though", "is", "a", "lack", "of", "transparency", "all", "round", "."]
# ::lemmas ["-", "definitely", "a", "huge", "problem", ".", "the", "big", "problem", "here", "though", "be", "a", "lack", "of", "you", "all", "round", "."]
(c3-2 / multi-sentence
      :snt1 (c3-5 / problem
                  :mod (c3-0 / huge)
                  :mod (c3-6 / definite))
      :snt2 (c3-13 / have-concession-91
                   :ARG1 (c3-12 / problem
                                :location (c3-4 / here)
                                :domain (c3-1 / lack-01
                                              :ARG1 (c3-11 / transparency)
                                              :mod (c3-7 / round
                                                         :mod (c3-10 / all)))
                                :ARG1-of (c3-9 / have-degree-91
                                               :ARG2 (c3-3 / big)
                                               :ARG3 (c3-8 / most)))))

# ::snt it's not pointless. And fuck yeah, I am leveraging my opinion. It's my Twitter account. I should apologize for this?
# ::tokens ["it", "'s", "not", "pointless", ".", "And", "fuck", "yeah", ",", "I", "am", "leveraging", "my", "opinion", ".", "It", "'s", "my", "Twitter", "account", ".", "I", "should", "apologize", "for", "this", "?"]
# ::lemmas ["it", "be", "not", "pointless", ".", "and", "fuck", "yeah", ",", "i", "be", "leverage", "my", "opinion", ".", "it", "be", "my", "Twitter", "account", ".", "i", "should", "apologize", "for", "this", "?"]
(c4-1 / multi-sentence
      :snt1 (c4-10 / point-03
                   :ARG1 (c4-7 / it)
                   :polarity -)
      :snt2 (c4-17 / and
                   :op2 (c4-0 / leverage-01
                              :ARG0 (c4-12 / i)
                              :ARG1 (c4-15 / thing
                                           :ARG1-of (c4-4 / opine-01
                                                          :ARG0 c4-12)))
                   :mod (c4-2 / fuck-yeah
                              :mode expressive))
      :snt3 (c4-6 / account
                  :mod (c4-16 / publication
                              :name (c4-8 / name
                                          :op1 "Twitter"))
                  :poss (c4-3 / i)
                  :domain (c4-5 / it))
      :snt4 (c4-11 / recommend-01
                   :ARG1 (c4-9 / apologize-01
                               :ARG0 c4-3
                               :ARG1 (c4-13 / this))
                   :polarity (c4-14 / amr-unknown)))

# ::snt REMINDER: was a kid who just wanted to walk down a street. And for that, HE IS DEAD. Those are the facts.
# ::tokens ["REMINDER", ":", "was", "a", "kid", "who", "just", "wanted", "to", "walk", "down", "a", "street", ".", "And", "for", "that", ",", "HE", "IS", "DEAD", ".", "Those", "are", "the", "facts", "."]
# ::lemmas ["REMINDER", ":", "be", "a", "kid", "who", "just", "want", "to", "walk", "down", "a", "street", ".", "and", "for", "that", ",", "he", "be", "dead", ".", "those", "be", "the", "fact", "."]
(c5-4 / multi-sentence
      :snt1 (c5-8 / remember-01
                  :ARG0 (c5-2 / you)
                  :ARG1 (c5-13 / kid
                               :ARG0-of (c5-1 / want-01
                                              :ARG1 (c5-7 / walk-01
                                                          :ARG0 c5-13
                                                          :ARG2 (c5-11 / street
                                                                       :direction (c5-9 / down)))
                                              :mod (c5-0 / just))))
      :snt2 (c5-14 / and
                   :op2 (c5-3 / die-01
                              :ARG1 (c5-5 / he)
                              :ARG1-of (c5-10 / cause-01
                                              :ARG0 c5-1)))
      :snt3 (c5-6 / fact
                  :domain (c5-12 / that)))

# ::snt - we are indeed, but ya need to consider things without emotion sometimes. Judges don't rule on emotion!
# ::tokens ["-", "we", "are", "indeed", ",", "but", "ya", "need", "to", "consider", "things", "without", "emotion", "sometimes", ".", "Judges", "do", "n't", "rule", "on", "emotion", "!"]
# ::lemmas ["-", "we", "be", "indeed", ",", "but", "ya", "need", "to", "consider", "thing", "without", "emotion", "sometimes", ".", "judge", "do", "not", "rule", "on", "emotion", "!"]
(c6-4 / multi-sentence
      :snt1 (c6-10 / contrast-01
                   :ARG1 (c6-1 / we)
                   :ARG2 (c6-7 / need-01
                               :ARG0 (c6-2 / you)
                               :ARG1 (c6-9 / consider-02
                                           :ARG0 c6-2
                                           :ARG1 (c6-13 / thing
                                                        :ARG0-of (c6-0 / have-03
                                                                       :ARG1 (c6-6 / emotion)
                                                                       :polarity -))
                                           :frequency (c6-12 / sometimes))))
      :snt2 (c6-11 / rule-01
                   :ARG0 (c6-8 / person
                               :ARG0-of (c6-3 / judge-01))
                   :ARG3 (c6-5 / emotion)
                   :polarity -))

# ::snt - if a judge ever sent someone to prison because the judge didn't like the defendant, then that's unlawful.
# ::tokens ["-", "if", "a", "judge", "ever", "sent", "someone", "to", "prison", "because", "the", "judge", "did", "n't", "like", "the", "defendant", ",", "then", "that", "'s", "unlawful", "."]
# ::lemmas ["-", "if", "a", "judge", "ever", "send", "someone", "to", "prison", "because", "the", "judge", "do", "not", "like", "the", "defendant", ",", "then", "that", "be", "unlawful", "."]
(c7-0 / have-condition-91
      :ARG1 (c7-3 / law
                  :domain (c7-10 / send-01
                                 :ARG0 (c7-7 / person
                                             :ARG0-of (c7-1 / judge-01))
                                 :ARG1 (c7-5 / someone)
                                 :ARG2 (c7-11 / prison)
                                 :time (c7-6 / ever)
                                 :ARG1-of (c7-9 / cause-01
                                                :ARG0 (c7-8 / dislike-01
                                                            :ARG0 c7-7
                                                            :ARG1 (c7-4 / person
                                                                        :ARG0-of (c7-2 / defend-01))))
                                 :ARG2-of c7-0)
                  :polarity -))

# ::snt . Reminder, he is a suspect in a crime and allegedly assaulted a police officer.
# ::tokens [".", "Reminder", ",", "he", "is", "a", "suspect", "in", "a", "crime", "and", "allegedly", "assaulted", "a", "police", "officer", "."]
# ::lemmas [".", "reminder", ",", "he", "be", "a", "suspect", "in", "a", "crime", "and", "allegedly", "assault", "a", "police", "officer", "."]
(c8-5 / remind-01
      :ARG1 (c8-8 / and
                  :op1 (c8-7 / suspect-01
                             :ARG1 (c8-0 / he)
                             :ARG2 (c8-6 / crime-02))
                  :op2 (c8-2 / assault-01
                             :ARG0 c8-0
                             :ARG1 (c8-1 / officer
                                         :mod (c8-4 / police))
                             :ARG1-of (c8-3 / allege-01))))

# ::snt - I'm not. It's funny. Having to resort to personal attacks in order to bait some kinda rise.
# ::tokens ["-", "I", "'m", "not", ".", "It", "'s", "funny", ".", "Having", "to", "resort", "to", "personal", "attacks", "in", "order", "to", "bait", "some", "kinda", "rise", "."]
# ::lemmas ["-", "i", "be", "not", ".", "it", "be", "funny", ".", "have", "to", "resort", "to", "personal", "attack", "in", "order", "to", "bait", "some", "kinda", "rise", "."]
(c9-2 / multi-sentence
      :snt1 (c9-0 / have-polarity-91
                  :ARG1 (c9-5 / i)
                  :ARG2 -)
      :snt2 (c9-1 / funny-02
                  :ARG1 (c9-4 / obligate-01
                              :ARG2 (c9-8 / resort-01
                                          :ARG1 (c9-11 / attack-01
                                                       :ARG1-of (c9-7 / personal-02))
                                          :purpose (c9-3 / bait-01
                                                         :ARG1 (c9-6 / rise-01
                                                                     :degree (c9-10 / kind
                                                                                    :mod (c9-9 / some))))))))

# ::snt Jose Guerena case shows cops may lie to deflect blame. Guerena's family won lawsuit, but Tucson sheriff won reelection anyway.
# ::tokens ["Jose", "Guerena", "case", "shows", "cops", "may", "lie", "to", "deflect", "blame", ".", "Guerena", "'s", "family", "won", "lawsuit", ",", "but", "Tucson", "sheriff", "won", "reelection", "anyway", "."]
# ::lemmas ["Jose", "Guerena", "case", "show", "cop", "may", "lie", "to", "deflect", "blame", ".", "Guerena", "'s", "family", "win", "lawsuit", ",", "but", "Tucson", "sheriff", "win", "reelection", "anyway", "."]
(c10-0 / multi-sentence
       :snt1 (c10-6 / show-01
                    :ARG0 (c10-23 / case-03
                                  :ARG2 (c10-3 / person
                                               :name (c10-15 / name
                                                             :op1 "Jose"
                                                             :op2 "Guerena")))
                    :ARG1 (c10-7 / possible-01
                                 :ARG1 (c10-10 / lie-08
                                               :ARG0 (c10-4 / cop)
                                               :purpose (c10-5 / deflect-01
                                                               :ARG0 c10-4
                                                               :ARG1 (c10-13 / blame-01)))))
       :snt2 (c10-19 / contrast-01
                     :ARG1 (c10-18 / win-01
                                   :ARG0 (c10-11 / family
                                                 :ARG1-of (c10-9 / have-org-role-91
                                                                 :ARG0 (c10-12 / person
                                                                               :name (c10-22 / name
                                                                                             :op1 "Guerena"))
                                                                 :ARG2 (c10-16 / member)))
                                   :ARG1 (c10-14 / sue-02))
                     :ARG2 (c10-1 / win-01
                                  :ARG0 (c10-21 / sheriff
                                                :location (c10-20 / city
                                                                  :name (c10-2 / name
                                                                               :op1 "Tucson")))
                                  :ARG2 (c10-17 / reelect-01
                                                :ARG1 c10-21)
                                  :mod (c10-8 / anyway))))

# ::snt I think you really need to study "objectivity" and question that concept.
# ::tokens ["I", "think", "you", "really", "need", "to", "study", "\"", "objectivity", "\"", "and", "question", "that", "concept", "."]
# ::lemmas ["i", "think", "you", "really", "need", "to", "study", "\"", "objectivity", "\"", "and", "question", "that", "concept", "."]
(c11-8 / think-01
       :ARG0 (c11-3 / i)
       :ARG1 (c11-4 / need-01
                    :ARG0 (c11-0 / you)
                    :ARG1 (c11-9 / and
                                 :op1 (c11-7 / study-01
                                             :ARG0 c11-0
                                             :ARG1 (c11-1 / objectivity))
                                 :op2 (c11-2 / question-03
                                             :ARG0 c11-0
                                             :ARG1 (c11-6 / concept
                                                          :mod c11-1)))
                    :ARG1-of (c11-5 / real-04)))

# ::snt - unpopular opinion incoming. Would this have been as big, if the police officer was dead instead?
# ::tokens ["-", "unpopular", "opinion", "incoming", ".", "Would", "this", "have", "been", "as", "big", ",", "if", "the", "police", "officer", "was", "dead", "instead", "?"]
# ::lemmas ["-", "unpopular", "opinion", "incoming", ".", "would", "this", "have", "be", "as", "big", ",", "if", "the", "police", "officer", "be", "dead", "instead", "?"]
(c12-2 / multi-sentence
       :snt1 (c12-4 / opine-01
                    :ARG1-of (c12-7 / popular-02
                                    :polarity -)
                    :time (c12-6 / incoming))
       :snt2 (c12-0 / have-condition-91
                    :ARG1 (c12-13 / have-degree-91
                                  :ARG1 (c12-11 / this)
                                  :ARG2 (c12-3 / big)
                                  :ARG3 (c12-5 / equal)
                                  :ARG4 (c12-8 / die-01
                                               :ARG1 (c12-1 / officer
                                                            :mod (c12-12 / police))
                                               :ARG1-of (c12-9 / instead-of-91)
                                               :ARG2-of c12-0))
                    :polarity (c12-10 / amr-unknown)))

# ::snt can you say "Trayvon Martin?"
# ::tokens ["can", "you", "say", "\"", "Trayvon", "Martin", "?", "\""]
# ::lemmas ["can", "you", "say", "\"", "Trayvon", "Martin", "?", "\""]
(c13-2 / possible-01
       :ARG1 (c13-3 / say-01
                    :ARG0 (c13-0 / you)
                    :ARG1 (c13-4 / person
                                 :name (c13-1 / name
                                              :op1 "Trayvon"
                                              :op2 "Martin")))
       :polarity (c13-5 / amr-unknown))

# ::snt yes, yes bc you are clearly the smartest, best and more deserving of humanity. yes, we know white man, it is about YOU here.
# ::tokens ["yes", ",", "yes", "bc", "you", "are", "clearly", "the", "smartest", ",", "best", "and", "more", "deserving", "of", "humanity", ".", "yes", ",", "we", "know", "white", "man", ",", "it", "is", "about", "YOU", "here", "."]
# ::lemmas ["yes", ",", "yes", "bc", "you", "be", "clearly", "the", "smart", ",", "good", "and", "more", "deserving", "of", "humanity", ".", "yes", ",", "we", "know", "white", "man", ",", "it", "be", "about", "you", "here", "."]
(c14-0 / multi-sentence
       :snt1 (c14-17 / yes
                     :ARG1-of (c14-19 / cause-01
                                      :ARG0 (c14-3 / clear-06
                                                   :ARG1 (c14-7 / and
                                                                :op1 (c14-5 / smart-06
                                                                            :ARG1 (c14-20 / you)
                                                                            :ARG2-of (c14-8 / have-degree-91
                                                                                            :ARG1 c14-20
                                                                                            :ARG3 (c14-10 / most)))
                                                                :op2 (c14-11 / good-03
                                                                             :ARG1 c14-20
                                                                             :ARG2-of (c14-6 / have-degree-91
                                                                                             :ARG1 c14-20
                                                                                             :ARG3 (c14-9 / most)))
                                                                :op3 (c14-4 / deserve-01
                                                                            :ARG0 c14-20
                                                                            :ARG1 (c14-2 / humanity)
                                                                            :ARG2-of (c14-15 / have-degree-91
                                                                                             :ARG1 c14-20
                                                                                             :ARG3 (c14-13 / more)))))))
       :snt2 (c14-16 / know-02
                     :ARG0 (c14-12 / we)
                     :ARG1 (c14-14 / man
                                   :ARG1-of (c14-1 / white-02))
                     :location (c14-18 / here)))

# ::snt surprise!
# ::tokens ["surprise", "!"]
# ::lemmas ["surprise", "!"]
(c15-0 / surprise-01)

# ::snt yes, they are. The photos of him match the police report
# ::tokens ["yes", ",", "they", "are", ".", "The", "photos", "of", "him", "match", "the", "police", "report"]
# ::lemmas ["yes", ",", "they", "be", ".", "the", "photo", "of", "he", "match", "the", "police", "report"]
(c16-2 / multi-sentence
       :snt1 (c16-1 / yes)
       :snt2 (c16-3 / match-01
                    :ARG1 (c16-4 / photograph-01
                                 :ARG1 (c16-0 / he))
                    :ARG2 (c16-5 / report-01
                                 :ARG0 (c16-6 / police))))

# ::snt - sure thing. I'm young, I've got plenty to learn.
# ::tokens ["-", "sure", "thing", ".", "I", "'m", "young", ",", "I", "'ve", "got", "plenty", "to", "learn", "."]
# ::lemmas ["-", "sure", "thing", ".", "i", "be", "young", ",", "i", "'ve", "get", "plenty", "to", "learn", "."]
(c17-2 / multi-sentence
       :snt1 (c17-7 / thing
                    :ARG1-of (c17-6 / sure-02))
       :snt2 (c17-8 / and
                    :op1 (c17-0 / young
                                :domain (c17-4 / i))
                    :op2 (c17-3 / obligate-01
                                :ARG1 c17-4
                                :ARG2 (c17-1 / learn-01
                                             :ARG0 c17-4
                                             :quant (c17-5 / plenty)))))

# ::snt no they are not.
# ::tokens ["no", "they", "are", "not", "."]
# ::lemmas ["no", "they", "be", "not", "."]
(c18-0 / event
       :mod (c18-1 / they)
       :polarity -)

# ::snt don't know what your point is. People are emotional when someone's shot. If it's a cop, cops are emotional.
# ::tokens ["do", "n't", "know", "what", "your", "point", "is", ".", "People", "are", "emotional", "when", "someone", "'s", "shot", ".", "If", "it", "'s", "a", "cop", ",", "cops", "are", "emotional", "."]
# ::lemmas ["do", "not", "know", "what", "your", "point", "be", ".", "people", "be", "emotional", "when", "someone", "'s", "shot", ".", "if", "it", "be", "a", "cop", ",", "cop", "be", "emotional", "."]
(c19-1 / multi-sentence
       :snt1 (c19-6 / know-01
                    :ARG0 (c19-5 / i)
                    :ARG1 (c19-12 / thing
                                  :ARG1-of (c19-7 / point-04
                                                  :ARG0 (c19-0 / you)))
                    :polarity -)
       :snt2 (c19-3 / emotional-02
                    :ARG1 (c19-13 / person)
                    :time (c19-11 / shoot-02
                                  :ARG1 (c19-4 / someone)))
       :snt3 (c19-2 / emotional-02
                    :ARG1 (c19-9 / cop)
                    :condition (c19-8 / cop
                                      :domain (c19-10 / it))))

# ::snt - sorry for that impression, I don't want to make it about the officer. I want objective views, not emotive tangents. Nothing more.
# ::tokens ["-", "sorry", "for", "that", "impression", ",", "I", "do", "n't", "want", "to", "make", "it", "about", "the", "officer", ".", "I", "want", "objective", "views", ",", "not", "emotive", "tangents", ".", "Nothing", "more", "."]
# ::lemmas ["-", "sorry", "for", "that", "impression", ",", "i", "do", "not", "want", "to", "make", "it", "about", "the", "officer", ".", "i", "want", "objective", "view", ",", "not", "emotive", "tangent", ".", "nothing", "more", "."]
(c20-1 / multi-sentence
       :snt1 (c20-7 / sorry-01
                    :ARG1 (c20-13 / i)
                    :ARG2 (c20-14 / impression-03
                                  :ARG0 c20-13
                                  :ARG1 (c20-12 / want-01
                                                :ARG0 c20-13
                                                :ARG1 (c20-18 / concern-02
                                                              :ARG0 (c20-0 / it)
                                                              :ARG1 (c20-5 / person
                                                                           :ARG0-of (c20-8 / have-org-role-91
                                                                                           :ARG2 (c20-16 / officer))))
                                                :polarity -)))
       :snt2 (c20-6 / contrast-01
                    :ARG1 (c20-3 / want-01
                                 :ARG0 (c20-17 / i)
                                 :ARG1 (c20-4 / view-02
                                              :manner (c20-15 / objective)))
                    :ARG2 (c20-2 / want-01
                                 :ARG0 c20-17
                                 :ARG1 (c20-19 / tangent
                                               :mod (c20-9 / emoticon))
                                 :polarity -))
       :snt3 (c20-11 / more
                     :domain (c20-10 / nothing)
                     :polarity -))

# ::snt Not if he doesn't know it's bad info at the time.
# ::tokens ["Not", "if", "he", "does", "n't", "know", "it", "'s", "bad", "info", "at", "the", "time", "."]
# ::lemmas ["not", "if", "he", "do", "not", "know", "it", "be", "bad", "info", "at", "the", "time", "."]
(c21-0 / have-condition-91
       :ARG2 (c21-4 / know-01
                    :ARG0 (c21-5 / he)
                    :ARG1 (c21-2 / information
                                 :ARG1-of (c21-1 / bad-07)
                                 :time (c21-3 / time))
                    :polarity -)
       :polarity -)

# ::snt - in joke, community-related. It's funny how quick people jump to insults though :/
# ::tokens ["-", "in", "joke", ",", "community", "-", "related", ".", "It", "'s", "funny", "how", "quick", "people", "jump", "to", "insults", "though", ":/"]
# ::lemmas ["-", "in", "joke", ",", "community", "-", "relate", ".", "it", "be", "funny", "how", "quick", "people", "jump", "to", "insult", "though", ":/"]
(c22-3 / multi-sentence
       :snt1 (c22-0 / joke-01)
       :snt2 (c22-7 / relate-01
                    :ARG2 (c22-8 / community))
       :snt3 (c22-2 / funny
                    :domain (c22-10 / jump-03
                                    :ARG0 (c22-6 / person)
                                    :ARG2 (c22-5 / insult-01)
                                    :ARG1-of (c22-4 / quick-02
                                                    :degree (c22-9 / so)))
                    :ARG1-of (c22-1 / have-concession-91)))

# ::snt how many names could we say?
# ::tokens ["how", "many", "names", "could", "we", "say", "?"]
# ::lemmas ["how", "many", "name", "could", "we", "say", "?"]
(c23-2 / possible-01
       :ARG1 (c23-3 / say-01
                    :ARG0 (c23-0 / we)
                    :ARG1 (c23-1 / name
                                 :quant (c23-4 / amr-unknown))))

# ::snt why the fuck does it matter what would be done if it had been the officer? IT COULDN'T HAVE BEEN; THE KID WAS UNARMED.
# ::tokens ["why", "the", "fuck", "does", "it", "matter", "what", "would", "be", "done", "if", "it", "had", "been", "the", "officer", "?", "IT", "COULDN'T", "HAVE", "BEEN", ";", "THE", "KID", "WAS", "UNARMED", "."]
# ::lemmas ["why", "the", "fuck", "do", "it", "matter", "what", "would", "be", "do", "if", "it", "have", "be", "the", "officer", "?", "it", "COULDN'T", "have", "be", ";", "the", "KID", "be", "unarmed", "."]
(c24-2 / multi-sentence
       :snt1 (c24-9 / matter-01
                    :ARG1 (c24-13 / thing
                                  :ARG1-of (c24-10 / do-02
                                                   :condition (c24-8 / person
                                                                     :domain (c24-6 / it)
                                                                     :ARG0-of (c24-0 / have-org-role-91
                                                                                     :ARG2 (c24-4 / officer)))))
                    :ARG1-of (c24-11 / cause-01
                                     :ARG0 (c24-15 / amr-unknown)
                                     :mod (c24-1 / fuck
                                                 :mode expressive)))
       :snt2 (c24-5 / and
                    :op1 (c24-14 / possible-01
                                 :ARG1 (c24-12 / it)
                                 :polarity -)
                    :op2 (c24-3 / bury-01
                                :ARG1 (c24-7 / kid))))

# ::snt depends on the obligation one would expect you to do due diligence before passing on lies, no?
# ::tokens ["depends", "on", "the", "obligation", "one", "would", "expect", "you", "to", "do", "due", "diligence", "before", "passing", "on", "lies", ",", "no", "?"]
# ::lemmas ["depend", "on", "the", "obligation", "one", "would", "expect", "you", "to", "do", "due", "diligence", "before", "pass", "on", "lie", ",", "no", "?"]
(c25-9 / depend-01
       :ARG1 (c25-5 / obligate-01
                    :ARG1 (c25-0 / you)
                    :ARG2 (c25-1 / do-02
                                 :ARG0 c25-0
                                 :ARG1 (c25-11 / diligence
                                               :mod (c25-7 / due))
                                 :time (c25-4 / before
                                              :op1 (c25-8 / pass-on-09
                                                          :ARG0 c25-0
                                                          :ARG1 (c25-2 / lie-08))))
                    :ARG1-of (c25-6 / expect-01
                                    :ARG0 (c25-3 / one)))
       :ARG1-of (c25-10 / request-confirmation-91))

# ::snt also it's not an opinion.
# ::tokens ["also", "it", "'s", "not", "an", "opinion", "."]
# ::lemmas ["also", "it", "be", "not", "an", "opinion", "."]
(c26-0 / opine-01
       :ARG1 (c26-2 / it)
       :mod (c26-1 / also)
       :polarity -)

# ::snt I'm not asserting police chief IS telling truth. I'm saying he COULD have thought story was truth at time.
# ::tokens ["I", "'m", "not", "asserting", "police", "chief", "IS", "telling", "truth", ".", "I", "'m", "saying", "he", "COULD", "have", "thought", "story", "was", "truth", "at", "time", "."]
# ::lemmas ["i", "be", "not", "assert", "police", "chief", "be", "tell", "truth", ".", "i", "be", "say", "he", "could", "have", "think", "story", "be", "truth", "at", "time", "."]
(c27-2 / multi-sentence
       :snt1 (c27-16 / assert-02
                     :ARG0 (c27-7 / i)
                     :ARG1 (c27-14 / tell-01
                                   :ARG0 (c27-9 / person
                                                :ARG0-of (c27-0 / have-org-role-91
                                                                :ARG1 (c27-15 / police)
                                                                :ARG2 (c27-10 / chief)))
                                   :ARG1 (c27-12 / truth))
                     :polarity -)
       :snt2 (c27-13 / say-01
                     :ARG0 (c27-11 / i)
                     :ARG1 (c27-3 / possible-01
                                  :ARG1 (c27-8 / think-01
                                               :ARG0 (c27-1 / he)
                                               :ARG1 (c27-5 / truth
                                                            :domain (c27-4 / story))
                                               :time (c27-6 / at-times)))))

# ::snt - original point was lost somewhat, no worries. People are emotional, never disputed that.
# ::tokens ["-", "original", "point", "was", "lost", "somewhat", ",", "no", "worries", ".", "People", "are", "emotional", ",", "never", "disputed", "that", "."]
# ::lemmas ["-", "original", "point", "be", "lose", "somewhat", ",", "no", "worry", ".", "people", "be", "emotional", ",", "never", "dispute", "that", "."]
(c28-2 / multi-sentence
       :snt1 (c28-1 / lose-02
                    :ARG1 (c28-6 / point
                                 :mod (c28-4 / original))
                    :degree (c28-8 / somewhat)
                    :ARG0-of (c28-0 / worry-02
                                    :polarity -))
       :snt2 (c28-11 / and
                     :op1 (c28-5 / emotional-02
                                 :ARG1 (c28-10 / person))
                     :op2 (c28-7 / dispute-01
                                 :ARG0 c28-10
                                 :ARG2 (c28-9 / that)
                                 :time (c28-3 / ever)
                                 :polarity -)))

# ::snt the chief has now told two contradictory stories. By definition, he is lying in at least one of them.
# ::tokens ["the", "chief", "has", "now", "told", "two", "contradictory", "stories", ".", "By", "definition", ",", "he", "is", "lying", "in", "at", "least", "one", "of", "them", "."]
# ::lemmas ["the", "chief", "have", "now", "tell", "two", "contradictory", "story", ".", "by", "definition", ",", "he", "be", "lie", "in", "at", "least", "one", "of", "they", "."]
(c29-2 / multi-sentence
       :snt1 (c29-10 / tell-01
                     :ARG0 (c29-7 / chief)
                     :ARG1 (c29-9 / story
                                  :ARG1-of (c29-6 / contradict-01)
                                  :quant 2)
                     :time (c29-5 / now))
       :snt2 (c29-8 / define-01
                    :ARG1 (c29-1 / lie-08
                                 :ARG0 (c29-0 / he)
                                 :ARG1 (c29-3 / story
                                              :quant (c29-11 / at-least
                                                             :op1 1)
                                              :ARG1-of (c29-4 / include-91
                                                              :ARG2 c29-9)))))

# ::snt you wanting to change the story to make this about the not-dead or not-even-injured or not-arrested cop is ridiculous derailing.
# ::tokens ["you", "wanting", "to", "change", "the", "story", "to", "make", "this", "about", "the", "not", "-", "dead", "or", "not", "-", "even", "-", "injured", "or", "not", "-", "arrested", "cop", "is", "ridiculous", "derailing", "."]
# ::lemmas ["you", "want", "to", "change", "the", "story", "to", "make", "this", "about", "the", "not", "-", "dead", "or", "not", "-", "even", "-", "injure", "or", "not", "-", "arrest", "cop", "be", "ridiculous", "derailing", "."]
(c30-7 / ridiculous-02
       :ARG1 (c30-0 / want-01
                    :ARG0 (c30-1 / you)
                    :ARG1 (c30-8 / change-01
                                 :ARG0 c30-1
                                 :ARG1 (c30-12 / story)
                                 :purpose (c30-3 / make-02
                                                 :ARG0 c30-1
                                                 :ARG1 (c30-9 / derail-01
                                                              :ARG1 (c30-13 / this
                                                                            :topic (c30-4 / or
                                                                                          :op1 (c30-10 / cop
                                                                                                       :ARG1-of (c30-2 / die-01
                                                                                                                       :polarity -))
                                                                                          :op2 (c30-11 / cop
                                                                                                       :ARG1-of (c30-6 / injure-01
                                                                                                                       :polarity -)
                                                                                                       :mod (c30-5 / even))
                                                                                          :op3 (c30-15 / cop
                                                                                                       :ARG1-of (c30-14 / arrest-01
                                                                                                                        :polarity -)))))))))

# ::snt seriously
# ::tokens ["seriously"]
# ::lemmas ["seriously"]
(c31-0 / serious-01)

# ::snt - Twitter's crap at letting me get it all out decently. Basically, reminding people someone's dead is pointless. Everyone knows (1/2)
# ::tokens ["-", "Twitter", "'s", "crap", "at", "letting", "me", "get", "it", "all", "out", "decently", ".", "Basically", ",", "reminding", "people", "someone", "'s", "dead", "is", "pointless", ".", "Everyone", "knows", "(", "1/2", ")"]
# ::lemmas ["-", "twitter", "'s", "crap", "at", "let", "i", "get", "it", "all", "out", "decently", ".", "basically", ",", "remind", "people", "someone", "be", "dead", "be", "pointless", ".", "everyone", "know", "(", "1/2", ")"]
(c32-1 / multi-sentence
       :snt1 (c32-20 / crap-01
                     :ARG0 (c32-2 / publication
                                  :name (c32-13 / name
                                                :op1 "Twitter"))
                     :ARG1 (c32-8 / let-01
                                  :ARG0 c32-2
                                  :ARG1 (c32-15 / get-05
                                                :ARG0 (c32-16 / i)
                                                :ARG1 (c32-17 / it
                                                              :mod (c32-7 / all))
                                                :ARG2 (c32-19 / out)
                                                :manner (c32-3 / decent))))
       :snt2 (c32-6 / point-03
                    :ARG1 (c32-14 / remind-01
                                  :ARG1 (c32-0 / die-01
                                               :ARG1 (c32-5 / someone))
                                  :ARG2 (c32-9 / person))
                    :mod (c32-10 / basic)
                    :polarity -)
       :snt3 (c32-18 / know-01
                     :ARG0 (c32-11 / everyone)
                     :ARG1-of (c32-12 / say-01
                                      :ARG0 c32-2
                                      :ARG1-of (c32-4 / cite-01
                                                      :ARG2 "1/2"))))

# ::snt It's called delegation. Person in charge expects underlings to do gruntwork of due diligence.
# ::tokens ["It", "'s", "called", "delegation", ".", "Person", "in", "charge", "expects", "underlings", "to", "do", "gruntwork", "of", "due", "diligence", "."]
# ::lemmas ["it", "be", "call", "delegation", ".", "person", "in", "charge", "expect", "underling", "to", "do", "gruntwork", "of", "due", "diligence", "."]
(c33-1 / multi-sentence
       :snt1 (c33-8 / call-01
                    :ARG1 (c33-4 / it)
                    :ARG2 (c33-7 / delegation))
       :snt2 (c33-3 / expect-01
                    :ARG0 (c33-6 / person
                                 :ARG1-of (c33-9 / charge-05))
                    :ARG1 (c33-0 / do-02
                                 :ARG0 (c33-2 / underlay)
                                 :ARG1 (c33-10 / gruntwork
                                               :mod (c33-11 / diligence
                                                            :mod (c33-5 / due))))))

# ::snt Maybe some facts...but you're not telling all of the facts...only some of the story.
# ::tokens ["Maybe", "some", "facts", "...", "but", "you", "'re", "not", "telling", "all", "of", "the", "facts", "...", "only", "some", "of", "the", "story", "."]
# ::lemmas ["maybe", "some", "fact", "...", "but", "you", "be", "not", "tell", "all", "of", "the", "fact", "...", "only", "some", "of", "the", "story", "."]
(c34-8 / contrast-01
       :ARG1 (c34-6 / possible-01
                    :ARG1 (c34-1 / fact
                                 :quant (c34-10 / some)))
       :ARG2 (c34-7 / contrast-01
                    :ARG1 (c34-11 / tell-01
                                  :ARG0 (c34-0 / you)
                                  :ARG1 (c34-5 / fact
                                               :mod (c34-12 / all))
                                  :polarity -)
                    :ARG2 (c34-9 / tell-01
                                 :ARG0 c34-0
                                 :ARG1 (c34-4 / story
                                              :mod (c34-2 / some))
                                 :mod (c34-3 / only))))

# ::snt yeah, definitely no "emotion" in the way the criminal justice system pursues alleged cop killers either.
# ::tokens ["yeah", ",", "definitely", "no", "\"", "emotion", "\"", "in", "the", "way", "the", "criminal", "justice", "system", "pursues", "alleged", "cop", "killers", "either", "."]
# ::lemmas ["yeah", ",", "definitely", "no", "\"", "emotion", "\"", "in", "the", "way", "the", "criminal", "justice", "system", "pursue", "allege", "cop", "killer", "either", "."]
(c35-3 / emotion
       :mod (c35-5 / definite)
       :manner (c35-4 / pursue-01
                      :ARG0 (c35-8 / system
                                   :mod (c35-0 / justice
                                               :ARG2-of (c35-6 / criminal-03)))
                      :ARG1 (c35-10 / person
                                    :ARG0-of (c35-9 / kill-01
                                                    :ARG1 (c35-7 / cop))
                                    :ARG1-of (c35-11 / allege-01))
                      :mod (c35-2 / either))
       :mod (c35-1 / yeah
                   :mode expressive)
       :polarity -)

# ::snt - not that I ever stated what my feelings on the situation was. Death is awful.
# ::tokens ["-", "not", "that", "I", "ever", "stated", "what", "my", "feelings", "on", "the", "situation", "was", ".", "Death", "is", "awful", "."]
# ::lemmas ["-", "not", "that", "i", "ever", "state", "what", "my", "feeling", "on", "the", "situation", "be", ".", "death", "be", "awful", "."]
(c36-1 / multi-sentence
       :snt1 (c36-6 / state-01
                    :ARG0 (c36-4 / i)
                    :ARG1 (c36-7 / thing
                                 :ARG1-of (c36-0 / feel-02
                                                 :ARG0 c36-4
                                                 :ARG2 (c36-2 / situation)))
                    :time (c36-3 / ever)
                    :polarity -)
       :snt2 (c36-8 / awful
                    :domain (c36-5 / die-01)))

# ::snt his profile states % dolt. we have our answer.
# ::tokens ["his", "profile", "states", "%", "dolt", ".", "we", "have", "our", "answer", "."]
# ::lemmas ["his", "profile", "state", "%", "dolt", ".", "we", "have", "our", "answer", "."]
(c37-2 / multi-sentence
       :snt1 (c37-5 / state-01
                    :ARG0 (c37-3 / profile
                                 :poss (c37-0 / he))
                    :ARG1 (c37-4 / dolt
                                 :degree (c37-7 / percentage-entity)))
       :snt2 (c37-8 / have-03
                    :ARG0 (c37-1 / we)
                    :ARG1 (c37-6 / answer-01
                                 :ARG0 c37-1)))

# ::snt You were there? You saw with your own eyes? I prefer to wait for full truth. If chief is lying, then he should be fired.
# ::tokens ["You", "were", "there", "?", "You", "saw", "with", "your", "own", "eyes", "?", "I", "prefer", "to", "wait", "for", "full", "truth", ".", "If", "chief", "is", "lying", ",", "then", "he", "should", "be", "fired", "."]
# ::lemmas ["you", "be", "there", "?", "you", "see", "with", "your", "own", "eye", "?", "i", "prefer", "to", "wait", "for", "full", "truth", ".", "if", "chief", "be", "lie", ",", "then", "he", "should", "be", "fire", "."]
(c38-4 / multi-sentence
       :snt1 (c38-1 / you
                    :polarity (c38-17 / amr-unknown)
                    :location (c38-15 / there))
       :snt2 (c38-13 / see-01
                     :ARG0 (c38-12 / you
                                   :part (c38-6 / eye
                                                :instrument-of c38-13)))
       :snt3 (c38-9 / prefer-01
                    :ARG0 (c38-7 / i)
                    :ARG1 (c38-2 / wait-01
                                 :ARG1 c38-7
                                 :ARG2 (c38-14 / truth
                                               :ARG1-of (c38-3 / full-09))))
       :snt4 (c38-10 / recommend-01
                     :ARG1 (c38-8 / fire-02
                                  :ARG1 (c38-16 / person
                                                :ARG0-of (c38-0 / have-org-role-91
                                                                :ARG2 (c38-11 / chief)))
                                  :condition (c38-5 / lie-08
                                                    :ARG0 c38-16))))

# ::snt - not at all, sorry again. I'm offering my opinion like you were offering yours. That's all. I didn't even expect a reply!
# ::tokens ["-", "not", "at", "all", ",", "sorry", "again", ".", "I", "'m", "offering", "my", "opinion", "like", "you", "were", "offering", "yours", ".", "That", "'s", "all", ".", "I", "did", "n't", "even", "expect", "a", "reply", "!"]
# ::lemmas ["-", "not", "at", "all", ",", "sorry", "again", ".", "i", "be", "offer", "my", "opinion", "like", "you", "be", "offer", "yours", ".", "that", "be", "all", ".", "i", "do", "not", "even", "expect", "a", "reply", "!"]
(c39-1 / multi-sentence
       :snt1 (c39-3 / sorry-01
                    :ARG1 (c39-12 / i)
                    :mod (c39-4 / at-all)
                    :mod (c39-11 / again)
                    :polarity -)
       :snt2 (c39-18 / offer-01
                     :ARG0 (c39-14 / i)
                     :ARG1 (c39-20 / thing
                                   :ARG1-of (c39-17 / opine-01
                                                    :ARG0 c39-14))
                     :ARG1-of (c39-8 / resemble-01
                                     :ARG2 (c39-9 / offer-01
                                                  :ARG0 (c39-16 / you)
                                                  :ARG1 (c39-19 / thing
                                                                :ARG1-of (c39-10 / opine-01
                                                                                 :ARG0 (c39-15 / you)))))
                     :snt3 (c39-5 / be-it-08
                                  :ARG1 (c39-13 / that))
                     :snt4 (c39-7 / expect-01
                                  :ARG0 (c39-0 / i)
                                  :ARG1 (c39-2 / reply-01)
                                  :mod (c39-6 / even)
                                  :polarity -)))

# ::snt If somebody tells you something that's not true, and you repeat it (because you thought it was truth), does that make you liar?
# ::tokens ["If", "somebody", "tells", "you", "something", "that", "'s", "not", "true", ",", "and", "you", "repeat", "it", "(", "because", "you", "thought", "it", "was", "truth", ")", ",", "does", "that", "make", "you", "liar", "?"]
# ::lemmas ["if", "somebody", "tell", "you", "something", "that", "be", "not", "true", ",", "and", "you", "repeat", "it", "(", "because", "you", "think", "it", "be", "truth", ")", ",", "do", "that", "make", "you", "liar", "?"]
(c40-2 / make-02
       :ARG0 (c40-10 / tell-01
                     :ARG0 (c40-9 / somebody)
                     :ARG1 (c40-3 / something
                                  :ARG1-of (c40-8 / true-01
                                                  :polarity -))
                     :ARG2 (c40-0 / you)
                     :condition (c40-6 / repeat-01
                                       :ARG0 c40-0
                                       :ARG1 c40-3
                                       :ARG1-of (c40-7 / cause-01
                                                       :ARG0 (c40-5 / think-01
                                                                    :ARG0 c40-0
                                                                    :ARG1 (c40-4 / true-01
                                                                                 :ARG1 c40-3)))))
       :ARG1 (c40-1 / lie-08
                    :ARG0 c40-0)
       :polarity (c40-11 / amr-unknown))

# ::snt - when observing the situation, then you have to have more of a clear head.
# ::tokens ["-", "when", "observing", "the", "situation", ",", "then", "you", "have", "to", "have", "more", "of", "a", "clear", "head", "."]
# ::lemmas ["-", "when", "observe", "the", "situation", ",", "then", "you", "have", "to", "have", "more", "of", "a", "clear", "head", "."]
(c41-4 / obligate-01
       :ARG1 (c41-1 / you)
       :ARG2 (c41-0 / have-03
                    :ARG0 c41-1
                    :ARG1 (c41-7 / head
                                 :ARG1-of (c41-5 / clear-06
                                                 :mod (c41-3 / more))))
       :time (c41-2 / observe-01
                    :ARG0 c41-1
                    :ARG1 (c41-6 / situation)))

# ::snt - because making an emotive tweet on a tragic death isn't the best presentation of it. I doubt it'd have been done for the officer.
# ::tokens ["-", "because", "making", "an", "emotive", "tweet", "on", "a", "tragic", "death", "is", "n't", "the", "best", "presentation", "of", "it", ".", "I", "doubt", "it", "'d", "have", "been", "done", "for", "the", "officer", "."]
# ::lemmas ["-", "because", "make", "an", "emotive", "tweet", "on", "a", "tragic", "death", "be", "not", "the", "good", "presentation", "of", "it", ".", "i", "doubt", "it", "would", "have", "be", "do", "for", "the", "officer", "."]
(c42-2 / multi-sentence
       :snt1 (c42-7 / cause-01
                    :ARG0 (c42-5 / presentation
                                 :topic (c42-6 / die-01
                                               :mod (c42-11 / tragic))
                                 :ARG1-of (c42-0 / have-degree-91
                                                 :ARG2 (c42-8 / good-02
                                                              :ARG1 c42-5)
                                                 :ARG3 (c42-9 / most))
                                 :polarity -))
       :snt2 (c42-1 / doubt-01
                    :ARG0 (c42-4 / i)
                    :ARG1 (c42-12 / do-02
                                  :ARG1 (c42-10 / it)
                                  :ARG2 (c42-3 / officer))))

# ::snt This. we are made up of emotion. Objective is often a code for male/real/white.
# ::tokens ["This", ".", "we", "are", "made", "up", "of", "emotion", ".", "Objective", "is", "often", "a", "code", "for", "male", "/", "real", "/", "white", "."]
# ::lemmas ["this", ".", "we", "be", "make", "up", "of", "emotion", ".", "objective", "be", "often", "a", "code", "for", "male", "/", "real", "/", "white", "."]
(c43-2 / multi-sentence
       :snt1 (c43-11 / this)
       :snt2 (c43-7 / make-up-07
                    :ARG1 (c43-0 / we)
                    :ARG2 (c43-5 / emotion))
       :snt3 (c43-9 / code-01
                    :ARG1 (c43-4 / objective)
                    :ARG3 (c43-10 / slash
                                  :op1 (c43-1 / male)
                                  :op2 (c43-8 / real-04)
                                  :op3 (c43-6 / white-02))
                    :frequency (c43-3 / often)))

# ::snt Yo, go fuck yourself, yo.
# ::tokens ["Yo", ",", "go", "fuck", "yourself", ",", "yo", "."]
# ::lemmas ["Yo", ",", "go", "fuck", "yourself", ",", "yo", "."]
(c44-2 / go-05
       :ARG0 (c44-0 / you)
       :ARG1 (c44-1 / fuck-01
                    :ARG0 c44-0
                    :ARG1 c44-0)
       :mode imperative)

# ::snt waaaa waaaaaa poor widdle white dude feefees. yawn. don't make it about emotion! suck it up!
# ::tokens ["waaaa", "waaaaaa", "poor", "widdle", "white", "dude", "feefees", ".", "yawn", ".", "do", "n't", "make", "it", "about", "emotion", "!", "suck", "it", "up", "!"]
# ::lemmas ["waaaa", "waaaaaa", "poor", "widdle", "white", "dude", "feefee", ".", "yawn", ".", "do", "not", "make", "it", "about", "emotion", "!", "suck", "it", "up", "!"]
(c45-3 / multi-sentence
       :snt1 (c45-2 / feefee
                    :domain (c45-8 / dude
                                   :mod (c45-7 / poor)
                                   :ARG1-of (c45-0 / white-02)
                                   :mod (c45-6 / widdle)))
       :snt2 (c45-1 / yawn-01)
       :snt3 (c45-9 / make-02
                    :ARG0 (c45-12 / you)
                    :ARG1 (c45-10 / concern-02
                                  :ARG0 (c45-5 / it)
                                  :ARG1 (c45-4 / emotion))
                    :polarity -
                    :mode imperative)
       :snt4 (c45-13 / suck-up-04
                     :ARG0 c45-12
                     :ARG1 (c45-11 / it)
                     :mode imperative))

# ::snt Not sure why you think anybody gives a fuck what you "want".
# ::tokens ["Not", "sure", "why", "you", "think", "anybody", "gives", "a", "fuck", "what", "you", "\"", "want", "\"", "."]
# ::lemmas ["not", "sure", "why", "you", "think", "anybody", "give", "a", "fuck", "what", "you", "\"", "want", "\"", "."]
(c46-8 / sure-02
       :ARG0 (c46-3 / i)
       :ARG1 (c46-9 / thing
                    :ARG0-of (c46-5 / cause-01
                                    :ARG1 (c46-7 / think-01
                                                 :ARG0 (c46-0 / you)
                                                 :ARG1 (c46-6 / give-16
                                                              :ARG0 (c46-10 / anybody)
                                                              :ARG1 (c46-2 / fuck)
                                                              :ARG2 (c46-4 / thing
                                                                           :ARG1-of (c46-1 / want-01
                                                                                           :ARG0 c46-0))))))
       :polarity -)

# ::snt - you're in a position of authority, and you're using that to leverage this view. Just my opinion, I'm not the only one to reply.
# ::tokens ["-", "you", "'re", "in", "a", "position", "of", "authority", ",", "and", "you", "'re", "using", "that", "to", "leverage", "this", "view", ".", "Just", "my", "opinion", ",", "I", "'m", "not", "the", "only", "one", "to", "reply", "."]
# ::lemmas ["-", "you", "be", "in", "a", "position", "of", "authority", ",", "and", "you", "be", "use", "that", "to", "leverage", "this", "view", ".", "just", "my", "opinion", ",", "i", "be", "not", "the", "only", "one", "to", "reply", "."]
(c47-3 / multi-sentence
       :snt1 (c47-13 / and
                     :op1 (c47-10 / position-01
                                  :ARG1 (c47-1 / you)
                                  :ARG2 (c47-7 / authority))
                     :op2 (c47-4 / use-01
                                 :ARG0 c47-1
                                 :ARG1 c47-10
                                 :ARG2 (c47-2 / leverage-01
                                              :ARG0 c47-1
                                              :ARG1 (c47-9 / view-02
                                                           :mod (c47-12 / this)))))
       :snt2 (c47-6 / opine-01
                    :ARG0 (c47-8 / i
                                 :mod (c47-5 / only
                                             :polarity -))
                    :ARG1 (c47-11 / reply-01
                                  :ARG0 c47-8)
                    :mod (c47-0 / just)))

# ::snt far too many
# ::tokens ["far", "too", "many"]
# ::lemmas ["far", "too", "many"]
(c48-0 / have-quant-91
       :ARG2 (c48-3 / many)
       :ARG3 (c48-1 / too
                    :mod (c48-2 / far)))

# ::snt He could be, or he could have been given bad info before. But given Ferguson history, it doesn't look good for chief.
# ::tokens ["He", "could", "be", ",", "or", "he", "could", "have", "been", "given", "bad", "info", "before", ".", "But", "given", "Ferguson", "history", ",", "it", "does", "n't", "look", "good", "for", "chief", "."]
# ::lemmas ["he", "could", "be", ",", "or", "he", "could", "have", "be", "give", "bad", "info", "before", ".", "but", "give", "Ferguson", "history", ",", "it", "do", "not", "look", "good", "for", "chief", "."]
(c49-0 / multi-sentence
       :snt1 (c49-18 / or
                     :op1 (c49-3 / possible-01
                                 :ARG1 (c49-13 / give-01
                                               :ARG1 (c49-14 / information
                                                             :ARG1-of (c49-11 / bad-04))
                                               :ARG2 (c49-8 / he)
                                               :time (c49-15 / before)))
                     :op2 (c49-6 / possible-01
                                 :ARG1 (c49-4 / give-01
                                              :ARG1 c49-14
                                              :ARG2 (c49-7 / he)
                                              :ARG1-of (c49-20 / bad-04)
                                              :time c49-15)))
       :snt2 (c49-19 / contrast-01
                     :ARG2 (c49-9 / look-02
                                  :ARG1 (c49-1 / good-02)
                                  :ARG2 (c49-10 / person
                                                :ARG0-of (c49-2 / have-org-role-91
                                                                :ARG2 (c49-5 / chief)))
                                  :ARG1-of (c49-16 / cause-01
                                                   :ARG0 (c49-17 / history
                                                                 :mod c49-10
                                                                 :name (c49-12 / name
                                                                               :op1 "Ferguson")))
                                  :polarity -)))

# ::snt : REMINDER: was a kid who just wanted to walk down a street. And for that, HE IS DEAD. Those are the facts.
# ::tokens [":", "REMINDER", ":", "was", "a", "kid", "who", "just", "wanted", "to", "walk", "down", "a", "street", ".", "And", "for", "that", ",", "HE", "IS", "DEAD", ".", "Those", "are", "the", "facts", "."]
# ::lemmas [":", "reminder", ":", "be", "a", "kid", "who", "just", "want", "to", "walk", "down", "a", "street", ".", "and", "for", "that", ",", "he", "be", "dead", ".", "those", "be", "the", "fact", "."]
(c50-4 / multi-sentence
       :snt1 (c50-7 / remember-01
                    :ARG1 (c50-12 / kid
                                  :ARG0-of (c50-1 / want-01
                                                  :ARG1 (c50-6 / walk-01
                                                               :ARG0 c50-12
                                                               :ARG2 (c50-10 / street
                                                                             :direction (c50-8 / down)))
                                                  :mod (c50-0 / just))))
       :snt2 (c50-13 / and
                     :op2 (c50-2 / die-01
                                 :ARG1 (c50-3 / he)
                                 :ARG1-of (c50-9 / cause-01
                                                 :ARG0 c50-1)))
       :snt3 (c50-5 / fact
                    :domain (c50-11 / that)))
