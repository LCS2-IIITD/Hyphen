# ::snt PD "Justice isn't here right now". what happens when you demand justice?
# ::tokens ["PD", "\"", "Justice", "is", "n't", "here", "right", "now", "\"", ".", "what", "happens", "when", "you", "demand", "justice", "?"]
# ::lemmas ["PD", "\"", "Justice", "be", "not", "here", "right", "now", "\"", ".", "what", "happen", "when", "you", "demand", "justice", "?"]
(c1-3 / multi-sentence
      :snt1 (c1-10 / say-01
                   :ARG0 (c1-7 / person
                               :name (c1-5 / name
                                           :op1 "PD"))
                   :ARG1 (c1-4 / be-located-at-91
                               :ARG1 (c1-0 / justice)
                               :ARG2 (c1-1 / here)
                               :time (c1-6 / now
                                           :mod (c1-8 / right))
                               :polarity -))
      :snt2 (c1-12 / amr-unknown
                   :time (c1-9 / demand-01
                               :ARG0 (c1-2 / you)
                               :ARG1 (c1-11 / justice))))

# ::snt : "To protect and serve" has become "To harass and shoot"
# ::tokens [":", "\"", "To", "protect", "and", "serve", "\"", "has", "become", "\"", "To", "harass", "and", "shoot", "\""]
# ::lemmas [":", "\"", "to", "protect", "and", "serve", "\"", "have", "become", "\"", "to", "harass", "and", "shoot", "\""]
(c2-1 / become-01
      :ARG1 (c2-6 / and
                  :op1 (c2-4 / protect-01)
                  :op2 (c2-5 / serve-01))
      :ARG2 (c2-3 / and
                  :op1 (c2-0 / harass-01)
                  :op2 (c2-2 / shoot-02)))

# ::snt Also known as "African-American Life".
# ::tokens ["Also", "known", "as", "\"", "African", "-", "American", "Life", "\"", "."]
# ::lemmas ["also", "know", "as", "\"", "African", "-", "American", "life", "\"", "."]
(c3-4 / know-02
      :ARG1 (c3-2 / it)
      :ARG2 (c3-0 / life
                  :mod (c3-1 / ethnic-group
                             :name (c3-3 / name
                                         :op1 "African-American")))
      :mod (c3-5 / also))

# ::snt "To protect and serve" has become "To harass and shoot"
# ::tokens ["\"", "To", "protect", "and", "serve", "\"", "has", "become", "\"", "To", "harass", "and", "shoot", "\""]
# ::lemmas ["\"", "to", "protect", "and", "serve", "\"", "have", "become", "\"", "to", "harass", "and", "shoot", "\""]
(c4-1 / become-01
      :ARG1 (c4-6 / and
                  :op1 (c4-4 / protect-01)
                  :op2 (c4-5 / serve-01))
      :ARG2 (c4-3 / and
                  :op1 (c4-0 / harass-01)
                  :op2 (c4-2 / shoot-02)))

# ::snt : "To protect and serve" has become "To harass and shoot"Or "To punish and enslave"
# ::tokens [":", "\"", "To", "protect", "and", "serve", "\"", "has", "become", "\"", "To", "harass", "and", "shoot\"Or", "\"", "To", "punish", "and", "enslave", "\""]
# ::lemmas [":", "\"", "to", "protect", "and", "serve", "\"", "have", "become", "\"", "to", "harass", "and", "shoot\"or", "\"", "to", "punish", "and", "enslave", "\""]
(c5-1 / become-01
      :ARG1 (c5-9 / and
                  :op1 (c5-6 / protect-01)
                  :op2 (c5-7 / serve-01))
      :ARG2 (c5-2 / or
                  :op1 (c5-5 / and
                             :op1 (c5-0 / harass-01)
                             :op2 (c5-3 / shoot-02))
                  :op2 (c5-8 / punish-01)
                  :op3 (c5-4 / enslave-01)))

# ::snt ehh, the kid had stolen something, and then tried to wrestle the cop for his gun. He wasn't innocent
# ::tokens ["ehh", ",", "the", "kid", "had", "stolen", "something", ",", "and", "then", "tried", "to", "wrestle", "the", "cop", "for", "his", "gun", ".", "He", "was", "n't", "innocent"]
# ::lemmas ["ehh", ",", "the", "kid", "have", "steal", "something", ",", "and", "then", "try", "to", "wrestle", "the", "cop", "for", "his", "gun", ".", "he", "be", "not", "innocent"]
(c6-2 / multi-sentence
      :snt1 (c6-12 / and
                   :op1 (c6-9 / steal-01
                              :ARG0 (c6-11 / kid)
                              :ARG1 (c6-3 / something))
                   :op2 (c6-10 / try-01
                               :ARG0 c6-11
                               :ARG1 (c6-1 / wrestle-01
                                           :ARG0 c6-11
                                           :ARG1 (c6-6 / cop)
                                           :ARG2 (c6-7 / gun
                                                       :poss c6-6))
                               :time (c6-8 / then))
                   :mod (c6-4 / eh
                              :mode expressive))
      :snt2 (c6-5 / innocent-01
                  :ARG1 (c6-0 / he)
                  :polarity -))

# ::snt punish and enslave is better.
# ::tokens ["punish", "and", "enslave", "is", "better", "."]
# ::lemmas ["punish", "and", "enslave", "be", "well", "."]
(c7-0 / have-degree-91
      :ARG1 (c7-5 / and
                  :op1 (c7-3 / punish-01)
                  :op2 (c7-2 / enslave-01))
      :ARG2 (c7-4 / good-02)
      :ARG3 (c7-1 / more))

# ::snt Sorry God but you've got that backwards, it "To Shoot and Then Harrass"
# ::tokens ["Sorry", "God", "but", "you", "'ve", "got", "that", "backwards", ",", "it", "\"", "To", "Shoot", "and", "Then", "Harrass", "\""]
# ::lemmas ["sorry", "God", "but", "you", "'ve", "get", "that", "backwards", ",", "it", "\"", "To", "Shoot", "and", "Then", "Harrass", "\""]
(c8-5 / contrast-01
      :ARG1 (c8-7 / sorry-01
                  :ARG1 (c8-2 / i)
                  :ARG2 (c8-4 / person
                              :name (c8-3 / name
                                          :op1 "God")))
      :ARG2 (c8-6 / get-03
                  :ARG1 c8-4
                  :ARG2 (c8-0 / backwards
                              :domain (c8-1 / string-entity
                                            :value "To"
                                            :op2 "Shoot"
                                            :op3 "and"
                                            :op4 "Then"
                                            :op5 "Harrass"))))

# ::snt It all started after th hippies &amp; th yuppies went back home from Woodstock. Some to shanties, th others college.
# ::tokens ["It", "all", "started", "after", "th", "hippies", "&", "amp", ";", "th", "yuppies", "went", "back", "home", "from", "Woodstock", ".", "Some", "to", "shanties", ",", "th", "others", "college", "."]
# ::lemmas ["it", "all", "start", "after", "th", "hippies", "&", "amp", ";", "th", "yuppie", "go", "back", "home", "from", "Woodstock", ".", "some", "to", "shanty", ",", "th", "other", "college", "."]
(c9-3 / multi-sentence
      :snt1 (c9-14 / start-01
                   :ARG1 (c9-8 / it)
                   :time (c9-16 / after
                                :op1 (c9-7 / and
                                           :op1 (c9-0 / hippie)
                                           :op2 (c9-10 / amp)))
                   :mod (c9-15 / all))
      :snt2 (c9-13 / go-back-19
                   :ARG1 (c9-1 / yuppie)
                   :ARG2 (c9-2 / home
                               :source (c9-12 / city
                                              :name (c9-9 / name
                                                          :op1 "Woodstock"))))
      :snt3 (c9-6 / some
                  :destination (c9-4 / shanty))
      :snt4 (c9-11 / college
                   :mod (c9-5 / other)))
