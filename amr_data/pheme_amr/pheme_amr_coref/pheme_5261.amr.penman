# ::snt Any Dead COPS YET?
# ::tokens ["Any", "Dead", "COPS", "YET", "?"]
# ::lemmas ["any", "dead", "cop", "yet", "?"]
(c1-3 / thing
      :polarity (c1-4 / amr-unknown)
      :ARG1-of (c1-1 / die-01)
      :quant (c1-0 / any)
      :ARG1-of (c1-2 / cop-02))

# ::snt amen! keep guard on his blood stain/body chalk outline...make a statement, take shifts, don't back down-power in numbers&amp;luv!
# ::tokens ["amen", "!", "keep", "guard", "on", "his", "blood", "stain", "/", "body", "chalk", "outline", "...", "make", "a", "statement", ",", "take", "shifts", ",", "do", "n't", "back", "down", "-", "power", "in", "numbers&amp;luv", "!"]
# ::lemmas ["amen", "!", "keep", "guard", "on", "his", "blood", "stain", "/", "body", "chalk", "outline", "...", "make", "a", "statement", ",", "take", "shift", ",", "do", "not", "back", "down", "-", "power", "in", "numbers&amp;luv", "!"]
(c2-0 / multi-sentence
      :snt1 (c2-4 / amen
                  :mode expressive)
      :snt2 (c2-14 / and
                   :op1 (c2-16 / keep-01
                               :ARG0 (c2-17 / you)
                               :ARG1 (c2-12 / guard-01
                                            :ARG0 c2-17
                                            :ARG1 (c2-3 / slash
                                                        :op1 (c2-8 / stain-01
                                                                   :ARG1 (c2-6 / blood))
                                                        :op2 (c2-19 / outline-01
                                                                    :ARG1 (c2-20 / chalk)
                                                                    :mod (c2-15 / body))
                                                        :poss (c2-5 / he)))
                               :mode imperative)
                   :op2 (c2-11 / make-01
                               :ARG0 c2-17
                               :ARG1 (c2-18 / state-01
                                            :ARG0 c2-17)
                               :mode imperative)
                   :op3 (c2-22 / take-01
                               :ARG0 c2-17
                               :ARG1 (c2-7 / shift)
                               :mode imperative)
                   :op4 (c2-21 / back-01
                               :ARG0 c2-17
                               :ARG1 (c2-1 / power-01
                                           :ARG1 (c2-10 / and
                                                        :op1 (c2-9 / number)
                                                        :op2 (c2-13 / amp)))
                               :direction (c2-2 / down)
                               :mode imperative
                               :polarity -)))

# ::snt Happening now in
# ::tokens ["Happening", "now", "in"]
# ::lemmas ["happen", "now", "in"]
(c3-1 / be-temporally-at-91
      :ARG2 (c3-0 / now))
