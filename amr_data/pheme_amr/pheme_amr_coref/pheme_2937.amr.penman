# ::snt They should do a kinda wife swap show where they have to swap with working men in the real world for a week
# ::tokens ["They", "should", "do", "a", "kinda", "wife", "swap", "show", "where", "they", "have", "to", "swap", "with", "working", "men", "in", "the", "real", "world", "for", "a", "week"]
# ::lemmas ["they", "should", "do", "a", "kinda", "wife", "swap", "show", "where", "they", "have", "to", "swap", "with", "work", "man", "in", "the", "real", "world", "for", "a", "week"]
(c1-9 / recommend-01
      :ARG1 (c1-8 / do-02
                  :ARG0 (c1-12 / they)
                  :ARG1 (c1-11 / show-04
                               :ARG1 (c1-4 / swap-01
                                           :ARG0 c1-12
                                           :ARG2 (c1-2 / man
                                                       :ARG0-of (c1-0 / work-01))
                                           :duration (c1-10 / temporal-quantity
                                                            :unit (c1-5 / week)
                                                            :quant 1)
                                           :location (c1-3 / world
                                                           :ARG1-of (c1-6 / real-04)))
                               :ARG3 (c1-1 / swap-01
                                           :ARG0 c1-12
                                           :ARG2 c1-2)
                               :mod (c1-7 / kind-of))))

# ::snt if there's a Hell them pair of shits will rot in there that's for sure!!
# ::tokens ["if", "there", "'s", "a", "Hell", "them", "pair", "of", "shits", "will", "rot", "in", "there", "that", "'s", "for", "sure", "!", "!"]
# ::lemmas ["if", "there", "be", "a", "Hell", "they", "pair", "of", "shit", "will", "rot", "in", "there", "that", "be", "for", "sure", "!", "!"]
(c2-4 / rot-01
      :ARG1 (c2-6 / shit
                  :quant (c2-3 / pair)
                  :mod (c2-7 / they))
      :location (c2-5 / there)
      :condition (c2-1 / event
                       :mod (c2-0 / hell
                                  :mode expressive))
      :ARG1-of (c2-2 / sure-02))

# ::snt well said, I wish they wouid do that, I think they might think twice about what there god tells them.
# ::tokens ["well", "said", ",", "I", "wish", "they", "wouid", "do", "that", ",", "I", "think", "they", "might", "think", "twice", "about", "what", "there", "god", "tells", "them", "."]
# ::lemmas ["well", "say", ",", "i", "wish", "they", "wouid", "do", "that", ",", "i", "think", "they", "might", "think", "twice", "about", "what", "there", "god", "tell", "they", "."]
(c3-14 / and
       :op1 (c3-11 / say-01
                   :manner (c3-9 / good-02))
       :op2 (c3-0 / wish-01
                  :ARG0 (c3-3 / i)
                  :ARG1 (c3-8 / do-02
                              :ARG0 (c3-12 / they)
                              :ARG1 (c3-10 / that)))
       :op3 (c3-6 / think-01
                  :ARG0 c3-3
                  :ARG1 (c3-7 / possible-01
                              :ARG1 (c3-2 / think-01
                                          :ARG0 c3-12
                                          :ARG1 (c3-4 / thing
                                                      :ARG1-of (c3-1 / tell-01
                                                                     :ARG0 (c3-13 / person
                                                                                  :name (c3-5 / name
                                                                                              :op1 "God"))
                                                                     :ARG2 c3-12))
                                          :frequency 2))))

# ::snt Very good. Unlike India France has been quick to react.
# ::tokens ["Very", "good", ".", "Unlike", "India", "France", "has", "been", "quick", "to", "react", "."]
# ::lemmas ["very", "good", ".", "unlike", "India", "France", "have", "be", "quick", "to", "react", "."]
(c4-0 / multi-sentence
      :snt1 (c4-8 / good-02
                  :degree (c4-4 / very))
      :snt2 (c4-1 / quick-02
                  :ARG1 (c4-6 / react-01
                              :ARG0 (c4-7 / country
                                          :name (c4-3 / name
                                                      :op1 "France")))
                  :ARG1-of (c4-2 / resemble-01
                                 :ARG2 (c4-9 / country
                                             :name (c4-5 / name
                                                         :op1 "India"))
                                 :polarity -)))

# ::snt Exactly, freaks becoming more powerful after abusing ppl, it's all they know
# ::tokens ["Exactly", ",", "freaks", "becoming", "more", "powerful", "after", "abusing", "ppl", ",", "it", "'s", "all", "they", "know"]
# ::lemmas ["exactly", ",", "freak", "become", "more", "powerful", "after", "abuse", "ppl", ",", "it", "be", "all", "they", "know"]
(c5-12 / all
       :ARG1-of (c5-7 / know-01
                      :ARG0 (c5-10 / they))
       :domain (c5-3 / become-01
                     :ARG1 (c5-1 / freak)
                     :ARG2 (c5-9 / powerful-02
                                 :ARG1 c5-1
                                 :ARG2-of (c5-0 / have-degree-91
                                                :ARG1 c5-1
                                                :ARG3 (c5-2 / more)))
                     :time (c5-6 / after
                                 :op1 (c5-8 / abuse-01
                                            :ARG0 c5-1
                                            :ARG1 (c5-11 / person
                                                         :mod (c5-4 / original)))))
       :mod (c5-5 / exact))

# ::snt yes why carn't Cameron and his merry men see what they have done, murders knife crime you only have to turn
# ::tokens ["yes", "why", "carn't", "Cameron", "and", "his", "merry", "men", "see", "what", "they", "have", "done", ",", "murders", "knife", "crime", "you", "only", "have", "to", "turn"]
# ::lemmas ["yes", "why", "carn't", "Cameron", "and", "his", "merry", "man", "see", "what", "they", "have", "do", ",", "murder", "knife", "crime", "you", "only", "have", "to", "turn"]
(c6-17 / and
       :op1 (c6-11 / cause-01
                   :ARG0 (c6-5 / amr-unknown)
                   :ARG1 (c6-15 / see-01
                                :ARG0 (c6-8 / and
                                            :op1 (c6-9 / person
                                                       :name (c6-7 / name
                                                                   :op1 "Cameron"))
                                            :op2 (c6-2 / man
                                                       :mod (c6-10 / merry)
                                                       :poss c6-9))
                                :ARG1 (c6-16 / thing
                                             :ARG1-of (c6-12 / do-02
                                                             :ARG0 c6-8))
                                :polarity -))
       :op2 (c6-1 / murder-01
                  :ARG1 (c6-6 / knife)
                  :ARG1-of (c6-13 / crime-02)
                  :ARG1-of (c6-14 / turn-01
                                  :ARG0 (c6-0 / you)
                                  :ARG2-of (c6-4 / obligate-01
                                                 :mod (c6-3 / only)))))

# ::snt RESULT!!!!!!!!!!!!!!!!!!!!!!!!!
# ::tokens ["RESULT", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["result", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]
(c7-0 / fault-01
      :mode expressive)

# ::snt Hope they died a very slow painful death
# ::tokens ["Hope", "they", "died", "a", "very", "slow", "painful", "death"]
# ::lemmas ["hope", "they", "die", "a", "very", "slow", "painful", "death"]
(c8-0 / hope-01
      :ARG1 (c8-4 / die-01
                  :ARG1 (c8-6 / they)
                  :manner (c8-1 / die-01
                                :ARG1-of (c8-5 / slow-05
                                               :degree (c8-2 / very))
                                :ARG0-of (c8-3 / pain-01))))

# ::snt the thing is they use this racist card, I know quite a few of them that hate whites, so the government do need
# ::tokens ["the", "thing", "is", "they", "use", "this", "racist", "card", ",", "I", "know", "quite", "a", "few", "of", "them", "that", "hate", "whites", ",", "so", "the", "government", "do", "need"]
# ::lemmas ["the", "thing", "be", "they", "use", "this", "racist", "card", ",", "i", "know", "quite", "a", "few", "of", "they", "that", "hate", "white", ",", "so", "the", "government", "do", "need"]
(c9-5 / and
      :op1 (c9-12 / use-01
                  :ARG0 (c9-18 / they)
                  :ARG1 (c9-16 / card
                               :mod (c9-9 / racist)
                               :mod (c9-17 / this)))
      :op2 (c9-15 / know-01
                  :ARG0 (c9-13 / i)
                  :ARG1 (c9-1 / person
                              :ARG1-of (c9-14 / include-91
                                              :ARG2 c9-18)
                              :ARG0-of (c9-6 / hate-01
                                             :ARG1 (c9-4 / person
                                                         :ARG1-of (c9-11 / white-02)))
                              :quant (c9-0 / many
                                           :degree (c9-7 / quite)))
                  :ARG0-of (c9-2 / cause-01
                                 :ARG1 (c9-8 / need-01
                                             :ARG0 (c9-10 / government-organization
                                                          :ARG0-of (c9-3 / govern-01))))))

# ::snt good start to the weekend
# ::tokens ["good", "start", "to", "the", "weekend"]
# ::lemmas ["good", "start", "to", "the", "weekend"]
(c10-0 / start-01
       :ARG1 (c10-1 / weekend)
       :ARG1-of (c10-2 / good-02))

# ::snt to open there eyes, and see what works over here and what don't.
# ::tokens ["to", "open", "there", "eyes", ",", "and", "see", "what", "works", "over", "here", "and", "what", "do", "n't", "."]
# ::lemmas ["to", "open", "there", "eye", ",", "and", "see", "what", "work", "over", "here", "and", "what", "do", "not", "."]
(c11-11 / and
        :op1 (c11-3 / open-01
                    :ARG1 (c11-4 / eye
                                 :part-of (c11-10 / they)))
        :op2 (c11-9 / see-01
                    :ARG1 (c11-5 / and
                                 :op1 (c11-8 / thing
                                             :ARG1-of (c11-1 / work-09))
                                 :op2 (c11-7 / thing
                                             :ARG1-of (c11-6 / work-09
                                                             :polarity -)))
                    :location (c11-2 / over
                                     :op1 (c11-0 / here))))

# ::snt the only law, and live in the rubble they've created. They've never lived in peace for thousands of years, why
# ::tokens ["the", "only", "law", ",", "and", "live", "in", "the", "rubble", "they", "'ve", "created", ".", "They", "'ve", "never", "lived", "in", "peace", "for", "thousands", "of", "years", ",", "why"]
# ::lemmas ["the", "only", "law", ",", "and", "live", "in", "the", "rubble", "they", "'ve", "create", ".", "they", "'ve", "never", "live", "in", "peace", "for", "thousands", "of", "years", ",", "why"]
(c12-3 / multi-sentence
       :snt1 (c12-16 / and
                     :op1 (c12-2 / law
                                 :mod (c12-4 / only))
                     :op2 (c12-13 / live-01
                                  :ARG0 (c12-15 / they)
                                  :location (c12-9 / rubble
                                                   :ARG1-of (c12-10 / create-01
                                                                    :ARG0 c12-15))))
       :snt2 (c12-0 / live-01
                    :ARG0 (c12-14 / they)
                    :time (c12-5 / ever)
                    :manner (c12-8 / peace)
                    :duration (c12-11 / multiple
                                      :op1 (c12-7 / temporal-quantity
                                                  :unit (c12-1 / year)
                                                  :quant 1000))
                    :ARG1-of (c12-12 / cause-01
                                     :ARG0 (c12-6 / amr-unknown))
                    :polarity -))

# ::snt Who confirmed it? There's no info in that story!
# ::tokens ["Who", "confirmed", "it", "?", "There", "'s", "no", "info", "in", "that", "story", "!"]
# ::lemmas ["who", "confirm", "it", "?", "there", "be", "no", "info", "in", "that", "story", "!"]
(c13-0 / multi-sentence
       :snt1 (c13-2 / confirm-01
                    :ARG0 (c13-6 / amr-unknown)
                    :ARG1 (c13-1 / it))
       :snt2 (c13-3 / information
                    :location (c13-4 / story
                                     :mod (c13-5 / that))
                    :polarity -))

# ::snt I know i'm sure they just make there own rules as they go along, but they think i'ts alright to rape women.
# ::tokens ["I", "know", "i", "'m", "sure", "they", "just", "make", "there", "own", "rules", "as", "they", "go", "along", ",", "but", "they", "think", "i'ts", "alright", "to", "rape", "women", "."]
# ::lemmas ["i", "know", "i", "be", "sure", "they", "just", "make", "there", "own", "rule", "as", "they", "go", "along", ",", "but", "they", "think", "i'ts", "alright", "to", "rape", "woman", "."]
(c14-7 / contrast-01
       :ARG1 (c14-12 / know-01
                     :ARG0 (c14-4 / i)
                     :ARG1 (c14-10 / sure-02
                                   :ARG0 c14-4
                                   :ARG1 (c14-2 / make-01
                                                :ARG0 (c14-11 / they)
                                                :ARG1 (c14-6 / rule
                                                             :poss c14-11)
                                                :mod (c14-0 / just)
                                                :manner (c14-8 / go-06
                                                               :ARG0 c14-11
                                                               :ARG2 (c14-13 / along)))))
       :ARG2 (c14-9 / think-01
                    :ARG0 c14-11
                    :ARG1 (c14-3 / all-right
                                 :domain c14-4
                                 :manner (c14-5 / rape-01
                                                :ARG0 c14-11
                                                :ARG1 (c14-1 / woman))
                                 :polarity -)))

# ::snt just wish the shits weren't shot, they deserve to be tortured, vile scum
# ::tokens ["just", "wish", "the", "shits", "were", "n't", "shot", ",", "they", "deserve", "to", "be", "tortured", ",", "vile", "scum"]
# ::lemmas ["just", "wish", "the", "shit", "be", "not", "shoot", ",", "they", "deserve", "to", "be", "torture", ",", "vile", "scum"]
(c15-3 / multi-sentence
       :snt1 (c15-1 / wish-01
                    :ARG0 (c15-5 / i)
                    :ARG1 (c15-8 / shoot-01
                                 :ARG1 (c15-4 / shit)
                                 :polarity -)
                    :mod (c15-0 / just))
       :snt2 (c15-7 / deserve-01
                    :ARG0 (c15-2 / scum
                                 :ARG1-of (c15-6 / vile-02))
                    :ARG1 (c15-9 / torture-01
                                 :ARG1 c15-2)))

# ::snt I agree totally, they should certainly pay, me thinks torture then death penalty
# ::tokens ["I", "agree", "totally", ",", "they", "should", "certainly", "pay", ",", "me", "thinks", "torture", "then", "death", "penalty"]
# ::lemmas ["i", "agree", "totally", ",", "they", "should", "certainly", "pay", ",", "i", "think", "torture", "then", "death", "penalty"]
(c16-12 / and
        :op1 (c16-1 / agree-01
                    :ARG0 (c16-2 / i)
                    :ARG1 (c16-5 / recommend-01
                                 :ARG1 (c16-4 / pay-01
                                              :ARG0 (c16-10 / they)
                                              :mod (c16-6 / certain)))
                    :degree (c16-9 / total))
        :op2 (c16-3 / think-01
                    :ARG0 c16-2
                    :ARG1 (c16-7 / contrast-01
                                 :ARG1 (c16-0 / torture-01)
                                 :ARG2 (c16-11 / penalize-01
                                               :manner (c16-8 / die-01)))))

# ::snt Was reading comments on this thread and wondered why there no comment as to what prompted them to do this.
# ::tokens ["Was", "reading", "comments", "on", "this", "thread", "and", "wondered", "why", "there", "no", "comment", "as", "to", "what", "prompted", "them", "to", "do", "this", "."]
# ::lemmas ["be", "read", "comment", "on", "this", "thread", "and", "wonder", "why", "there", "no", "comment", "as", "to", "what", "prompt", "they", "to", "do", "this", "."]
(c17-13 / and
        :op1 (c17-6 / read-01
                    :ARG0 (c17-2 / i)
                    :ARG1 (c17-7 / comment-01
                                 :medium (c17-12 / thread
                                                 :mod (c17-10 / this))))
        :op2 (c17-0 / wonder-01
                    :ARG0 c17-2
                    :ARG1 (c17-4 / thing
                                 :ARG0-of (c17-8 / cause-01
                                                 :ARG1 (c17-11 / comment-01
                                                               :ARG3 c17-4
                                                               :ARG0-of (c17-5 / prompt-01
                                                                               :ARG1 (c17-1 / they)
                                                                               :ARG2 (c17-9 / do-02
                                                                                            :ARG0 c17-1
                                                                                            :ARG1 (c17-3 / this)))
                                                               :polarity -)))))

# ::snt they turn a blind eye give us the spin, listen if they are pushed, and will never live in the real world
# ::tokens ["they", "turn", "a", "blind", "eye", "give", "us", "the", "spin", ",", "listen", "if", "they", "are", "pushed", ",", "and", "will", "never", "live", "in", "the", "real", "world"]
# ::lemmas ["they", "turn", "a", "blind", "eye", "give", "we", "the", "spin", ",", "listen", "if", "they", "be", "push", ",", "and", "will", "never", "live", "in", "the", "real", "world"]
(c18-13 / and
        :op1 (c18-12 / turn-18
                     :ARG0 (c18-10 / they)
                     :ARG1 (c18-4 / eye
                                  :ARG1-of (c18-2 / blind-02))
                     :purpose (c18-9 / give-01
                                     :ARG0 c18-10
                                     :ARG1 (c18-11 / spin-03)
                                     :ARG2 (c18-0 / we)))
        :op2 (c18-1 / listen-01
                    :ARG0 c18-10
                    :condition (c18-6 / push-01
                                      :ARG1 c18-10))
        :op3 (c18-7 / live-01
                    :ARG0 c18-10
                    :location (c18-5 / world
                                     :ARG1-of (c18-8 / real-04))
                    :time (c18-3 / ever)
                    :polarity -))

# ::snt True, I'm sure lots of ppl stay quietly frustrated by worrying what will happen if they say how they feel
# ::tokens ["True", ",", "I", "'m", "sure", "lots", "of", "ppl", "stay", "quietly", "frustrated", "by", "worrying", "what", "will", "happen", "if", "they", "say", "how", "they", "feel"]
# ::lemmas ["true", ",", "i", "be", "sure", "lot", "of", "ppl", "stay", "quietly", "frustrate", "by", "worry", "what", "will", "happen", "if", "they", "say", "how", "they", "feel"]
(c19-11 / true-01
        :ARG1 (c19-10 / sure-02
                      :ARG0 (c19-6 / i)
                      :ARG1 (c19-4 / stay-01
                                   :ARG1 (c19-8 / person
                                                :quant (c19-1 / lot))
                                   :ARG3 (c19-2 / frustrate-01
                                                :ARG0 (c19-0 / worry-01
                                                             :ARG0 (c19-3 / say-01
                                                                          :ARG0 c19-8
                                                                          :ARG1 (c19-9 / thing
                                                                                       :ARG1-of (c19-7 / feel-01
                                                                                                       :ARG0 c19-8)))
                                                             :ARG1 c19-8)
                                                :ARG1 c19-8
                                                :ARG1-of (c19-5 / quiet-04)))))

# ::snt yes lets hope so mandy.
# ::tokens ["yes", "lets", "hope", "so", "mandy", "."]
# ::lemmas ["yes", "let", "hope", "so", "mandy", "."]
(c20-5 / say-01
       :ARG0 (c20-2 / i)
       :ARG1 (c20-0 / hope-01
                    :ARG0 c20-2
                    :ARG1 (c20-1 / so))
       :ARG2 (c20-4 / person
                    :name (c20-3 / name
                                 :op1 "Mandy")))

# ::snt they are scum, what else couid you say about them.
# ::tokens ["they", "are", "scum", ",", "what", "else", "couid", "you", "say", "about", "them", "."]
# ::lemmas ["they", "be", "scum", ",", "what", "else", "couid", "you", "say", "about", "they", "."]
(c21-6 / and
       :op1 (c21-4 / scum
                   :domain (c21-5 / they))
       :op2 (c21-1 / say-01
                   :ARG0 (c21-0 / you)
                   :ARG1 (c21-3 / amr-unknown
                                :mod (c21-2 / else))
                   :ARG3 c21-5))

# ::snt No virgins for them two scum bags in nd event also dead
# ::tokens ["No", "virgins", "for", "them", "two", "scum", "bags", "in", "nd", "event", "also", "dead"]
# ::lemmas ["no", "virgin", "for", "they", "two", "scum", "bag", "in", "nd", "event", "also", "dead"]
(c22-5 / and
       :op1 (c22-1 / virgin
                   :beneficiary (c22-4 / they)
                   :polarity -)
       :op2 (c22-2 / die-01
                   :ARG1 (c22-3 / scumbag
                                :quant 2)
                   :mod (c22-0 / also)))

# ::snt now tucking into their specially reserved virgins
# ::tokens ["now", "tucking", "into", "their", "specially", "reserved", "virgins"]
# ::lemmas ["now", "tuck", "into", "their", "specially", "reserve", "virgin"]
(c23-5 / tuck-01
       :ARG1 (c23-1 / virgin
                    :poss (c23-3 / they)
                    :ARG1-of (c23-2 / reserve-01
                                    :ARG1-of (c23-4 / special-02)))
       :time (c23-0 / now))

# ::snt governments need to change things now, they will now look to see how they can better there attacks. after this.
# ::tokens ["governments", "need", "to", "change", "things", "now", ",", "they", "will", "now", "look", "to", "see", "how", "they", "can", "better", "there", "attacks", ".", "after", "this", "."]
# ::lemmas ["government", "need", "to", "change", "thing", "now", ",", "they", "will", "now", "look", "to", "see", "how", "they", "can", "better", "there", "attack", ".", "after", "this", "."]
(c24-14 / and
        :op1 (c24-3 / need-01
                    :ARG0 (c24-8 / government-organization
                                 :ARG0-of (c24-6 / govern-01))
                    :ARG1 (c24-7 / change-01
                                 :ARG0 c24-8
                                 :ARG1 (c24-13 / thing))
                    :time (c24-4 / now))
        :op2 (c24-0 / look-01
                    :ARG0 c24-8
                    :ARG1 (c24-10 / thing
                                  :manner-of (c24-5 / possible-01
                                                    :ARG1 (c24-1 / better-01
                                                                 :ARG0 c24-8
                                                                 :ARG1 (c24-2 / attack-01
                                                                              :ARG0 c24-8))))
                    :time (c24-9 / now)
                    :time (c24-11 / after
                                  :op1 (c24-12 / this))))

# ::snt of course they are dead,cant have patsys running around right?
# ::tokens ["of", "course", "they", "are", "dead", ",", "cant", "have", "patsys", "running", "around", "right", "?"]
# ::lemmas ["of", "course", "they", "be", "dead", ",", "cant", "have", "patsy", "run", "around", "right", "?"]
(c25-5 / cause-01
       :ARG0 (c25-4 / die-01
                    :ARG1 (c25-7 / they)
                    :mod (c25-1 / of-course))
       :ARG1 (c25-3 / possible-01
                    :ARG1 (c25-0 / have-03
                                 :ARG1 (c25-8 / patsy
                                              :ARG0-of (c25-6 / run-02
                                                              :ARG1 (c25-9 / around))))
                    :ARG1-of (c25-2 / request-confirmation-91)
                    :polarity -))

# ::snt the tv on to see who did it.
# ::tokens ["the", "tv", "on", "to", "see", "who", "did", "it", "."]
# ::lemmas ["the", "tv", "on", "to", "see", "who", "do", "it", "."]
(c26-0 / on-01
       :ARG1 (c26-5 / television)
       :purpose (c26-4 / see-01
                       :ARG0 c26-5
                       :ARG1 (c26-2 / person
                                    :ARG0-of (c26-3 / do-02
                                                    :ARG1 (c26-1 / it)))))

# ::snt rot in hell you filthy pig swine bastards.
# ::tokens ["rot", "in", "hell", "you", "filthy", "pig", "swine", "bastards", "."]
# ::lemmas ["rot", "in", "hell", "you", "filthy", "pig", "swine", "bastard", "."]
(c27-7 / say-01
       :ARG1 (c27-6 / rot-01
                    :location (c27-0 / hell))
       :ARG2 (c27-1 / you
                    :mod (c27-3 / bastard
                                :mod (c27-4 / swine)
                                :mod (c27-2 / filthy)
                                :mod (c27-5 / pig))))

# ::snt Good news ,hope all hostages are OK.
# ::tokens ["Good", "news", ",", "hope", "all", "hostages", "are", "OK", "."]
# ::lemmas ["good", "news", ",", "hope", "all", "hostage", "be", "ok", "."]
(c28-7 / and
       :op1 (c28-5 / news
                   :ARG1-of (c28-6 / good-02))
       :op2 (c28-0 / hope-01
                   :ARG0 (c28-4 / i)
                   :ARG1 (c28-2 / okay-04
                                :ARG1 (c28-1 / hostage
                                             :mod (c28-3 / all)))))

# ::snt There should be women who commit the death penalty to ensure their faith of the virgins is crushed
# ::tokens ["There", "should", "be", "women", "who", "commit", "the", "death", "penalty", "to", "ensure", "their", "faith", "of", "the", "virgins", "is", "crushed"]
# ::lemmas ["there", "should", "be", "woman", "who", "commit", "the", "death", "penalty", "to", "ensure", "their", "faith", "of", "the", "virgin", "be", "crush"]
(c29-6 / recommend-01
       :ARG1 (c29-0 / woman
                    :ARG0-of (c29-7 / commit-02
                                    :ARG1 (c29-4 / penalize-01
                                                 :manner (c29-5 / die-01))
                                    :purpose (c29-2 / ensure-01
                                                    :ARG0 c29-0
                                                    :ARG1 (c29-8 / crush-01
                                                                 :ARG1 (c29-1 / faith
                                                                              :poss (c29-3 / virgin)))))))

# ::snt the government keep us down by saying you carn't say that it's racist, there way of telling us, keep it shut
# ::tokens ["the", "government", "keep", "us", "down", "by", "saying", "you", "carn't", "say", "that", "it", "'s", "racist", ",", "there", "way", "of", "telling", "us", ",", "keep", "it", "shut"]
# ::lemmas ["the", "government", "keep", "we", "down", "by", "say", "you", "carn't", "say", "that", "it", "be", "racist", ",", "there", "way", "of", "tell", "we", ",", "keep", "it", "shut"]
(c30-13 / and
        :op1 (c30-12 / keep-down-00
                     :ARG0 (c30-9 / government-organization
                                  :ARG0-of (c30-7 / govern-01))
                     :ARG1 (c30-0 / we)
                     :manner (c30-10 / say-01
                                     :ARG0 c30-9
                                     :ARG1 (c30-3 / say-01
                                                  :ARG0 (c30-1 / you)
                                                  :ARG1 (c30-8 / racist
                                                               :domain (c30-5 / it))
                                                  :polarity -)))
        :op2 (c30-6 / way
                    :manner-of (c30-11 / tell-01
                                       :ARG0 c30-9
                                       :ARG2 c30-0)
                    :mod (c30-4 / keep-04
                                :ARG0 c30-9
                                :ARG1 (c30-2 / shut-01
                                             :ARG1 c30-5))))

# ::snt You're so right, they've done nothing but bow down to their every demand, scared of the outcome coz so many here
# ::tokens ["You", "'re", "so", "right", ",", "they", "'ve", "done", "nothing", "but", "bow", "down", "to", "their", "every", "demand", ",", "scared", "of", "the", "outcome", "coz", "so", "many", "here"]
# ::lemmas ["you", "be", "so", "right", ",", "they", "'ve", "do", "nothing", "but", "bow", "down", "to", "their", "every", "demand", ",", "scared", "of", "the", "outcome", "coz", "so", "many", "here"]
(c31-10 / right-06
        :ARG1 (c31-1 / you)
        :ARG2 (c31-4 / bow-01
                     :ARG0 (c31-14 / they)
                     :ARG1 (c31-9 / demand-01
                                  :ARG0 c31-14
                                  :mod (c31-6 / every))
                     :mod (c31-8 / nothing-but)
                     :ARG1-of (c31-11 / cause-01
                                      :ARG0 (c31-13 / scare-01
                                                    :ARG0 (c31-5 / outcome)
                                                    :ARG1 c31-14
                                                    :ARG1-of (c31-12 / cause-01
                                                                     :ARG0 (c31-3 / many
                                                                                  :location (c31-0 / here)
                                                                                  :quant (c31-7 / so))))))
        :degree (c31-2 / so))

# ::snt Spot on, open their eyes and also listen. They don't live in the real world, they're all millionaires
# ::tokens ["Spot", "on", ",", "open", "their", "eyes", "and", "also", "listen", ".", "They", "do", "n't", "live", "in", "the", "real", "world", ",", "they", "'re", "all", "millionaires"]
# ::lemmas ["spot", "on", ",", "open", "their", "eye", "and", "also", "listen", ".", "they", "do", "not", "live", "in", "the", "real", "world", ",", "they", "be", "all", "millionaire"]
(c32-3 / multi-sentence
       :snt1 (c32-14 / and
                     :op1 (c32-11 / spot-on-02
                                  :ARG0 (c32-0 / you)
                                  :mode imperative)
                     :op2 (c32-4 / open-01
                                 :ARG0 c32-0
                                 :ARG1 (c32-5 / eye
                                              :part-of (c32-13 / they))
                                 :mode imperative)
                     :op3 (c32-2 / listen-01
                                 :ARG0 c32-0
                                 :mod (c32-6 / also)
                                 :mode imperative)
                     :snt2-of c32-3)
       :op1 (c32-10 / live-01
                    :ARG0 (c32-12 / they
                                  :mod (c32-7 / all))
                    :location (c32-1 / world
                                     :ARG1-of (c32-9 / real-04))
                    :polarity -)
       :op2 (c32-8 / millionaire
                   :domain c32-12))

# ::snt would they start now?
# ::tokens ["would", "they", "start", "now", "?"]
# ::lemmas ["would", "they", "start", "now", "?"]
(c33-0 / start-01
       :polarity (c33-3 / amr-unknown)
       :ARG0 (c33-2 / they)
       :time (c33-1 / now))

# ::snt Mostly you don't have to second guess who's responsible, it's a shock when they're not Islamic
# ::tokens ["Mostly", "you", "do", "n't", "have", "to", "second", "guess", "who", "'s", "responsible", ",", "it", "'s", "a", "shock", "when", "they", "'re", "not", "Islamic"]
# ::lemmas ["mostly", "you", "do", "not", "have", "to", "second", "guess", "who", "be", "responsible", ",", "it", "be", "a", "shock", "when", "they", "be", "not", "Islamic"]
(c34-11 / and
        :op1 (c34-3 / obligate-01
                    :ARG1 (c34-0 / you)
                    :ARG2 (c34-8 / guess-01
                                 :ARG0 c34-0
                                 :ARG1 (c34-6 / person
                                              :ARG0-of (c34-7 / responsible-01))
                                 :ord (c34-1 / ordinal-entity
                                             :value 2))
                    :mod (c34-2 / most)
                    :polarity -)
        :op2 (c34-9 / shock-01
                    :ARG0 (c34-4 / religious-group
                                 :name (c34-5 / name
                                              :op1 "Islam")
                                 :domain (c34-10 / they)
                                 :polarity -)))

# ::snt There's more chance they'll be in hell than awaiting their supposed virgins
# ::tokens ["There", "'s", "more", "chance", "they", "'ll", "be", "in", "hell", "than", "awaiting", "their", "supposed", "virgins"]
# ::lemmas ["there", "be", "more", "chance", "they", "'ll", "be", "in", "hell", "than", "await", "their", "suppose", "virgin"]
(c35-4 / chance-02
       :ARG1 (c35-2 / be-located-at-91
                    :ARG1 (c35-7 / they)
                    :ARG2 (c35-0 / hell))
       :ARG2-of (c35-8 / have-degree-91
                       :ARG1 c35-2
                       :ARG3 (c35-1 / more)
                       :ARG4 (c35-6 / await-01
                                    :ARG1 c35-7
                                    :ARG2 (c35-3 / virgin
                                                 :ARG1-of (c35-5 / suppose-01)
                                                 :poss c35-7))))

# ::snt : The massacre brothers have been killed. Full story here: HA! CUNTS!!
# ::tokens [":", "The", "massacre", "brothers", "have", "been", "killed", ".", "Full", "story", "here", ":", "HA", "!", "CUNTS", "!", "!"]
# ::lemmas [":", "the", "massacre", "brother", "have", "be", "kill", ".", "full", "story", "here", ":", "ha", "!", "CUNTS", "!", "!"]
(c36-2 / multi-sentence
       :snt1 (c36-9 / kill-01
                    :ARG1 (c36-5 / person
                                 :ARG0-of (c36-0 / have-rel-role-91
                                                 :ARG1 (c36-6 / massacre-01)
                                                 :ARG2 (c36-3 / brother))))
       :snt2 (c36-8 / story
                    :ARG1-of (c36-1 / full-09)
                    :location (c36-10 / here)
                    :mod (c36-4 / ha
                                :mode expressive))
       :snt3 (c36-7 / cunt
                    :mode expressive))

# ::snt haha a bunch of Eaton college boys at work, it wouid kill the idiots mandy, as for wife swap most like men, lol
# ::tokens ["haha", "a", "bunch", "of", "Eaton", "college", "boys", "at", "work", ",", "it", "wouid", "kill", "the", "idiots", "mandy", ",", "as", "for", "wife", "swap", "most", "like", "men", ",", "lol"]
# ::lemmas ["haha", "a", "bunch", "of", "Eaton", "college", "boy", "at", "work", ",", "it", "wouid", "kill", "the", "idiot", "mandy", ",", "as", "for", "wife", "swap", "most", "like", "man", ",", "lol"]
(c37-0 / multi-sentence
       :snt1 (c37-8 / haha
                    :mode expressive)
       :snt2 (c37-20 / kill-01
                     :ARG0 (c37-3 / person
                                  :name (c37-13 / name
                                                :op1 "Mads"))
                     :ARG1 (c37-17 / idiot)
                     :ARG1-of (c37-21 / cause-01
                                      :ARG0 (c37-5 / swap-01
                                                   :ARG1 (c37-6 / person
                                                                :ARG0-of (c37-7 / have-rel-role-91
                                                                                :ARG2 (c37-16 / wife)))
                                                   :ARG1-of (c37-15 / resemble-01
                                                                    :ARG2 (c37-14 / man)
                                                                    :ARG2-of (c37-2 / have-degree-91
                                                                                    :ARG1 c37-5
                                                                                    :ARG3 (c37-9 / most)
                                                                                    :snt3-of c37-0)))))
       :ARG1 (c37-11 / person
                     :ARG0-of (c37-19 / have-rel-role-91
                                      :ARG2 (c37-12 / boy))
                     :quant (c37-18 / bunch)
                     :mod (c37-4 / college)
                     :location (c37-1 / work-01))
       :ARG2 (c37-10 / funny-02
                     :ARG1 c37-11)
       :ARG3 c37-9)

# ::snt down to governments
# ::tokens ["down", "to", "governments"]
# ::lemmas ["down", "to", "government"]
(c38-0 / down-03
       :ARG3 (c38-2 / government-organization
                    :ARG0-of (c38-1 / govern-01)))

# ::snt Pmsl you're bob on there
# ::tokens ["Pmsl", "you", "'re", "bob", "on", "there"]
# ::lemmas ["pmsl", "you", "be", "bob", "on", "there"]
(c39-3 / say-01
       :ARG0 (c39-2 / i)
       :ARG1 (c39-1 / bob-00
                    :ARG1 (c39-0 / you)
                    :location (c39-4 / there))
       :ARG2 c39-0)

# ::snt Bloody hell it is...
# ::tokens ["Bloody", "hell", "it", "is", "..."]
# ::lemmas ["bloody", "hell", "it", "be", "..."]
(c40-0 / hell
       :mod (c40-2 / blood)
       :domain (c40-1 / it)
       :mode expressive)

# ::snt Definitely, it's what drives them, if there way of living's so good why don't they piss off to where sharia law is
# ::tokens ["Definitely", ",", "it", "'s", "what", "drives", "them", ",", "if", "there", "way", "of", "living", "'s", "so", "good", "why", "do", "n't", "they", "piss", "off", "to", "where", "sharia", "law", "is"]
# ::lemmas ["definitely", ",", "it", "be", "what", "drive", "they", ",", "if", "there", "way", "of", "living", "be", "so", "good", "why", "do", "not", "they", "piss", "off", "to", "where", "sharia", "law", "be"]
(c41-5 / drive-02
       :ARG0 (c41-2 / it)
       :ARG1 (c41-9 / they)
       :mod (c41-0 / definite)
       :ARG0-of (c41-6 / cause-01
                       :ARG1 (c41-4 / piss-off-02
                                    :ARG1 c41-9
                                    :ARG2 (c41-1 / location
                                                 :location-of (c41-8 / law
                                                                     :name (c41-3 / name
                                                                                  :op1 "Sharia")))
                                    :ARG1-of (c41-7 / cause-01
                                                    :ARG0 (c41-10 / amr-unknown))
                                    :polarity -)))

# ::snt fucking good job
# ::tokens ["fucking", "good", "job"]
# ::lemmas ["fuck", "good", "job"]
(c42-0 / job
       :ARG1-of (c42-2 / good-02)
       :mod (c42-1 / fucking
                   :mode expressive))

# ::snt they pass there cultures on by living here our kids then pic there ways of life, but you know who to blame it's
# ::tokens ["they", "pass", "there", "cultures", "on", "by", "living", "here", "our", "kids", "then", "pic", "there", "ways", "of", "life", ",", "but", "you", "know", "who", "to", "blame", "it", "'s"]
# ::lemmas ["they", "pass", "there", "culture", "on", "by", "live", "here", "our", "kid", "then", "pic", "there", "way", "of", "life", ",", "but", "you", "know", "who", "to", "blame", "it", "be"]
(c43-11 / contrast-01
        :ARG1 (c43-9 / pass-on-14
                     :ARG0 (c43-14 / they)
                     :ARG1 (c43-10 / culture)
                     :manner (c43-3 / live-01
                                    :ARG0 (c43-15 / person
                                                  :ARG0-of (c43-0 / have-rel-role-91
                                                                  :ARG1 (c43-1 / we)
                                                                  :ARG2 (c43-7 / kid)))
                                    :location (c43-16 / here)))
        :ARG2 (c43-4 / picture-01
                     :ARG0 c43-14
                     :ARG1 (c43-8 / way
                                  :manner-of c43-3))
        :time (c43-12 / then)
        :ARG2 (c43-6 / know-01
                     :ARG0 (c43-2 / you)
                     :ARG1 (c43-13 / person
                                   :ARG1-of (c43-5 / blame-01
                                                   :ARG0 c43-2))))
