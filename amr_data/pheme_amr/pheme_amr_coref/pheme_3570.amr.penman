# ::snt That's pretty awesome!
# ::tokens ["That", "'s", "pretty", "awesome", "!"]
# ::lemmas ["that", "be", "pretty", "awesome", "!"]
(c1-2 / awesome-02
      :ARG0 (c1-1 / that)
      :degree (c1-0 / pretty))

# ::snt Word. Time to rise up STL.
# ::tokens ["Word", ".", "Time", "to", "rise", "up", "STL", "."]
# ::lemmas ["word", ".", "time", "to", "rise", "up", "STL", "."]
(c2-1 / multi-sentence
      :snt1 (c2-0 / word)
      :snt2 (c2-2 / be-temporally-at-91
                  :ARG2 (c2-3 / rise-01
                              :ARG1 (c2-4 / STL))))

# ::snt Thank you!! I can only imagine how much this is being appreciate.
# ::tokens ["Thank", "you", "!", "!", "I", "can", "only", "imagine", "how", "much", "this", "is", "being", "appreciate", "."]
# ::lemmas ["thank", "you", "!", "!", "i", "can", "only", "imagine", "how", "much", "this", "be", "be", "appreciate", "."]
(c3-2 / multi-sentence
      :snt1 (c3-9 / thank-01
                  :ARG0 (c3-4 / i)
                  :ARG1 (c3-0 / you)
                  :mode expressive)
      :snt2 (c3-6 / possible-01
                  :ARG1 (c3-7 / imagine-01
                              :ARG0 (c3-1 / i)
                              :ARG1 (c3-8 / thing
                                          :degree-of (c3-10 / appreciate-02
                                                            :ARG1 (c3-5 / this)))
                              :mod (c3-3 / only))))

# ::snt Good to finally see something classy coming out of all this. Even if it's just free coffee.
# ::tokens ["Good", "to", "finally", "see", "something", "classy", "coming", "out", "of", "all", "this", ".", "Even", "if", "it", "'s", "just", "free", "coffee", "."]
# ::lemmas ["good", "to", "finally", "see", "something", "classy", "come", "out", "of", "all", "this", ".", "even", "if", "it", "be", "just", "free", "coffee", "."]
(c4-3 / multi-sentence
      :snt1 (c4-9 / good-02
                  :ARG1 (c4-11 / see-01
                               :ARG1 (c4-4 / something
                                           :ARG1-of (c4-8 / classy-02)
                                           :ARG1-of (c4-7 / come-out-09
                                                          :ARG2 (c4-12 / this
                                                                       :mod (c4-13 / all))))
                               :time (c4-2 / final)))
      :snt2 (c4-0 / have-concession-91
                  :ARG2 (c4-5 / even-if
                              :op1 (c4-10 / coffee
                                          :ARG1-of (c4-6 / free-03)
                                          :mod (c4-1 / just)))))

# ::snt Corner Coffee House in Ferguson has great coffee as well for journos who don't mind paying it fwd
# ::tokens ["Corner", "Coffee", "House", "in", "Ferguson", "has", "great", "coffee", "as", "well", "for", "journos", "who", "do", "n't", "mind", "paying", "it", "fwd"]
# ::lemmas ["Corner", "Coffee", "House", "in", "Ferguson", "have", "great", "coffee", "as", "well", "for", "journo", "who", "do", "not", "mind", "pay", "it", "fwd"]
(c5-0 / have-03
      :ARG0 (c5-2 / facility
                  :name (c5-4 / name
                              :op1 "Corner"
                              :op2 "Coffee"
                              :op3 "House")
                  :location (c5-8 / city
                                  :name (c5-5 / name
                                              :op1 "Ferguson")))
      :ARG1 (c5-7 / coffee
                  :mod (c5-9 / great))
      :beneficiary (c5-1 / journalist
                         :ARG0-of (c5-3 / mind-01
                                        :ARG1 (c5-6 / pay-01
                                                    :ARG0 c5-1
                                                    :ARG3 c5-7)
                                        :polarity -))
      :mod (c5-10 / as-well))

# ::snt beautiful
# ::tokens ["beautiful"]
# ::lemmas ["beautiful"]
(c6-0 / beautiful-02)

# ::snt That just earned y'all a follow. And a customer next time I'm in town.
# ::tokens ["That", "just", "earned", "y'", "all", "a", "follow", ".", "And", "a", "customer", "next", "time", "I", "'m", "in", "town", "."]
# ::lemmas ["that", "just", "earn", "you", "all", "a", "follow", ".", "and", "a", "customer", "next", "time", "i", "be", "in", "town", "."]
(c7-3 / multi-sentence
      :snt1 (c7-5 / earn-01
                  :ARG0 (c7-11 / that)
                  :ARG1 (c7-2 / follow-02
                              :ARG0 (c7-1 / you
                                          :mod (c7-12 / all)
                                          :ARG2-of c7-5))
                  :mod (c7-0 / just))
      :snt2 (c7-6 / and
                  :op2 (c7-9 / customer
                             :time (c7-4 / be-located-at-91
                                         :ARG1 (c7-7 / i)
                                         :ARG2 (c7-10 / town))
                             :mod (c7-8 / next))))

# ::snt Hell Yeah Media is the Fourth Branch of Government time for us to Rise Up like a Phoenix
# ::tokens ["Hell", "Yeah", "Media", "is", "the", "Fourth", "Branch", "of", "Government", "time", "for", "us", "to", "Rise", "Up", "like", "a", "Phoenix"]
# ::lemmas ["hell", "yeah", "Media", "be", "the", "Fourth", "Branch", "of", "Government", "time", "for", "we", "to", "rise", "up", "like", "a", "Phoenix"]
(c8-4 / branch
      :ord (c8-5 / ordinal-entity
                 :value 4)
      :part-of (c8-10 / government-organization
                      :ARG0-of (c8-8 / govern-01))
      :domain (c8-3 / media)
      :mod (c8-1 / yeah
                 :mod (c8-0 / hell)
                 :mode expressive)
      :time-of (c8-9 / rise-up-03
                     :ARG0 (c8-2 / we)
                     :ARG1-of (c8-6 / resemble-01
                                    :ARG2 (c8-11 / city
                                                 :name (c8-7 / name
                                                             :op1 "Phoenix")))))

# ::snt Calling all journalists covering FREE coffee/Wifi if you need a place to work!
# ::tokens ["Calling", "all", "journalists", "covering", "FREE", "coffee", "/", "Wifi", "if", "you", "need", "a", "place", "to", "work", "!"]
# ::lemmas ["call", "all", "journalist", "cover", "FREE", "coffee", "/", "Wifi", "if", "you", "need", "a", "place", "to", "work", "!"]
(c9-9 / call-02
      :ARG0 (c9-1 / you)
      :ARG1 (c9-0 / journalist
                  :mod (c9-12 / all)
                  :ARG0-of (c9-8 / cover-03
                                 :ARG1 (c9-11 / slash
                                              :op1 (c9-10 / coffee
                                                          :ARG1-of (c9-3 / free-03))
                                              :op2 (c9-4 / ifi
                                                         :ARG1-of (c9-5 / free-03)))))
      :condition (c9-6 / need-01
                       :ARG0 c9-1
                       :ARG1 (c9-7 / place
                                   :location-of (c9-2 / work-01
                                                      :ARG0 c9-1)))
      :mode imperative)
