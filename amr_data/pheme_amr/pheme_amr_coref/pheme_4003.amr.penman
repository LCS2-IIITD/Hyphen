# ::snt I had the same observation. But it just goes on a long list of things PD said that make no sense.
# ::tokens ["I", "had", "the", "same", "observation", ".", "But", "it", "just", "goes", "on", "a", "long", "list", "of", "things", "PD", "said", "that", "make", "no", "sense", "."]
# ::lemmas ["i", "have", "the", "same", "observation", ".", "but", "it", "just", "go", "on", "a", "long", "list", "of", "thing", "PD", "say", "that", "make", "no", "sense", "."]
(c1-3 / multi-sentence
      :snt1 (c1-0 / have-03
                  :ARG0 (c1-7 / i)
                  :ARG1 (c1-16 / thing
                               :ARG1-of (c1-5 / observe-01)
                               :ARG1-of (c1-14 / same-01)))
      :snt2 (c1-10 / contrast-01
                   :ARG2 (c1-11 / go-01
                                :ARG1 (c1-12 / it)
                                :ARG4 (c1-2 / list
                                            :ARG1-of (c1-13 / long-03)
                                            :consist-of (c1-15 / thing
                                                               :ARG1-of (c1-6 / say-01
                                                                              :ARG0 (c1-9 / government-organization
                                                                                          :name (c1-8 / name
                                                                                                      :op1 "PD")))
                                                               :ARG1-of (c1-4 / sense-02
                                                                              :polarity -)))
                                :mod (c1-1 / just))))

# ::snt That is EXACTLY what I said.
# ::tokens ["That", "is", "EXACTLY", "what", "I", "said", "."]
# ::lemmas ["that", "be", "exactly", "what", "i", "say", "."]
(c2-4 / thing
      :ARG1-of (c2-3 / say-01
                     :ARG0 (c2-1 / i))
      :domain (c2-2 / that)
      :mod (c2-0 / exact))

# ::snt they even fucked up and put two different dates /9 and /13z sloppy cover up
# ::tokens ["they", "even", "fucked", "up", "and", "put", "two", "different", "dates", "/9", "and", "/13z", "sloppy", "cover", "up"]
# ::lemmas ["they", "even", "fuck", "up", "and", "put", "two", "different", "date", "/9", "and", "/13z", "sloppy", "cover", "up"]
(c3-10 / and
       :op1 (c3-1 / fuck-up-02
                  :ARG0 (c3-9 / they))
       :op2 (c3-5 / put-03
                  :ARG0 c3-9
                  :ARG1 (c3-6 / date
                              :ARG1-of (c3-0 / differ-02)
                              :time (c3-3 / and
                                          :op1 (c3-11 / date-entity
                                                      :month 9)
                                          :op2 (c3-4 / date-entity
                                                     :month 13
                                                     :day 13)
                                          :op3 (c3-7 / cover-up-04
                                                     :mod (c3-8 / sloppy)))
                              :quant 2))
       :mod (c3-2 / even))

# ::snt Dammit that's right. There are no names in the narrative of a police report.
# ::tokens ["Dammit", "that", "'s", "right", ".", "There", "are", "no", "names", "in", "the", "narrative", "of", "a", "police", "report", "."]
# ::lemmas ["dammit", "that", "be", "right", ".", "there", "be", "no", "name", "in", "the", "narrative", "of", "a", "police", "report", "."]
(c4-0 / multi-sentence
      :snt1 (c4-7 / damn-01
                  :ARG1 (c4-6 / right-06
                              :ARG1 (c4-8 / that)))
      :snt2 (c4-1 / be-located-at-91
                  :ARG1 (c4-3 / name)
                  :ARG2 (c4-4 / narrate-01
                              :ARG0 (c4-2 / report-01
                                          :ARG0 (c4-5 / police)))
                  :polarity -))

# ::snt reverse-engineering? racism?
# ::tokens ["reverse", "-", "engineering", "?", "racism", "?"]
# ::lemmas ["reverse", "-", "engineering", "?", "racism", "?"]
(c5-4 / and
      :op1 (c5-0 / engineer-01
                 :manner (c5-3 / reverse-01))
      :op2 (c5-2 / racism)
      :polarity (c5-1 / amr-unknown))

# ::snt the date says /9/14 I'm honestly not trying to be a dick I just don't get what your sayin
# ::tokens ["the", "date", "says", "/9/14", "I", "'m", "honestly", "not", "trying", "to", "be", "a", "dick", "I", "just", "do", "n't", "get", "what", "your", "sayin"]
# ::lemmas ["the", "date", "say", "/9/14", "i", "be", "honestly", "not", "try", "to", "be", "a", "dick", "i", "just", "do", "not", "get", "what", "your", "sayin"]
(c6-11 / and
       :op1 (c6-9 / say-01
                  :ARG0 (c6-7 / date)
                  :ARG1 (c6-10 / try-01
                               :ARG0 (c6-6 / i)
                               :ARG1 (c6-2 / dick
                                           :domain c6-6)
                               :ARG1-of (c6-0 / honest-01)
                               :polarity -)
                  :time c6-7
                  :month 9
                  :day 14)
       :op2 (c6-4 / understand-01
                  :ARG0 c6-6
                  :ARG1 (c6-8 / thing
                              :ARG1-of (c6-5 / say-01
                                             :ARG0 (c6-1 / you)))
                  :mod (c6-3 / just)
                  :polarity -))

# ::snt the police officer who made the report identified him as mike brown after he arrived at the shooting.
# ::tokens ["the", "police", "officer", "who", "made", "the", "report", "identified", "him", "as", "mike", "brown", "after", "he", "arrived", "at", "the", "shooting", "."]
# ::lemmas ["the", "police", "officer", "who", "make", "the", "report", "identify", "he", "as", "mike", "brown", "after", "he", "arrive", "at", "the", "shooting", "."]
(c7-5 / identify-01
      :ARG0 (c7-3 / officer
                  :mod (c7-6 / police)
                  :ARG0-of (c7-7 / report-01))
      :ARG1 (c7-0 / he)
      :ARG2 (c7-2 / brown
                  :mod (c7-1 / mike))
      :time (c7-9 / after
                  :op1 (c7-4 / arrive-01
                             :ARG1 c7-3
                             :ARG4 (c7-8 / shoot-02))))

# ::snt cooked..simple. Cold blooded murdering continues
# ::tokens ["cooked", "..", "simple", ".", "Cold", "blooded", "murdering", "continues"]
# ::lemmas ["cook", "..", "simple", ".", "cold", "blooded", "murdering", "continue"]
(c8-0 / multi-sentence
      :snt1 (c8-7 / and
                  :op1 (c8-4 / cook-01)
                  :op2 (c8-6 / simple-02))
      :snt2 (c8-3 / continue-01
                  :ARG1 (c8-2 / murder-01
                              :manner (c8-1 / blood-02
                                            :ARG1-of (c8-5 / cold-02)))))

# ::snt yay but why do you assume that it is , when you don't even know how proper documents to compare it with
# ::tokens ["yay", "but", "why", "do", "you", "assume", "that", "it", "is", ",", "when", "you", "do", "n't", "even", "know", "how", "proper", "documents", "to", "compare", "it", "with"]
# ::lemmas ["yay", "but", "why", "do", "you", "assume", "that", "it", "be", ",", "when", "you", "do", "not", "even", "know", "how", "proper", "document", "to", "compare", "it", "with"]
(c9-6 / contrast-01
      :ARG1 (c9-0 / yay)
      :ARG2 (c9-5 / cause-01
                  :ARG0 (c9-12 / amr-unknown)
                  :ARG1 (c9-2 / assume-02
                              :ARG0 (c9-8 / you)
                              :ARG1 (c9-3 / it))
                  :condition (c9-11 / know-01
                                    :ARG0 c9-8
                                    :ARG1 (c9-9 / thing
                                                :manner-of (c9-10 / compare-01
                                                                  :ARG0 c9-8
                                                                  :ARG1 c9-3
                                                                  :ARG2 (c9-7 / document
                                                                              :mod (c9-4 / proper))))
                                    :mod (c9-1 / even)
                                    :polarity -)))

# ::snt Andy was nice, tho. RT : I was wondering the same thing. They run that place like its Mayberry
# ::tokens ["Andy", "was", "nice", ",", "tho", ".", "RT", ":", "I", "was", "wondering", "the", "same", "thing", ".", "They", "run", "that", "place", "like", "its", "Mayberry"]
# ::lemmas ["Andy", "be", "nice", ",", "tho", ".", "RT", ":", "i", "be", "wonder", "the", "same", "thing", ".", "they", "run", "that", "place", "like", "its", "Mayberry"]
(c10-0 / multi-sentence
       :snt1 (c10-10 / nice-01
                     :ARG1 (c10-4 / person
                                  :name (c10-16 / name
                                                :op1 "Andy"))
                     :ARG1-of (c10-7 / have-concession-91))
       :snt2 (c10-5 / say-01
                    :ARG0 (c10-14 / i)
                    :ARG1 (c10-13 / wonder-01
                                  :ARG0 c10-14
                                  :ARG1 (c10-18 / thing
                                                :ARG1-of (c10-9 / same-01)))
                    :ARG2 (c10-6 / person
                                 :name (c10-2 / name
                                              :op1 "RT")))
       :snt3 (c10-11 / run-01
                     :ARG0 (c10-17 / they)
                     :ARG1 (c10-8 / place
                                  :mod (c10-15 / that))
                     :ARG1-of (c10-1 / resemble-01
                                     :ARG2 (c10-12 / place
                                                   :name (c10-3 / name
                                                                :op1 "Mayberry")))))

# ::snt it says here he saw the footages and then responded to scene and identified it was mike. All irrelevant to shooting either way
# ::tokens ["it", "says", "here", "he", "saw", "the", "footages", "and", "then", "responded", "to", "scene", "and", "identified", "it", "was", "mike", ".", "All", "irrelevant", "to", "shooting", "either", "way"]
# ::lemmas ["it", "say", "here", "he", "see", "the", "footage", "and", "then", "respond", "to", "scene", "and", "identify", "it", "be", "mike", ".", "all", "irrelevant", "to", "shoot", "either", "way"]
(c11-3 / multi-sentence
       :snt1 (c11-15 / say-01
                     :ARG0 (c11-10 / it)
                     :ARG1 (c11-16 / and
                                   :op1 (c11-7 / see-01
                                               :ARG0 (c11-0 / he)
                                               :ARG1 (c11-2 / footage))
                                   :op2 (c11-13 / respond-01
                                                :ARG0 c11-0
                                                :ARG1 (c11-4 / scene))
                                   :op3 (c11-14 / identify-01
                                                :ARG0 c11-0
                                                :ARG1 c11-2
                                                :ARG2 (c11-12 / mike))
                                   :location (c11-5 / here)))
       :snt2 (c11-11 / relevant-01
                     :ARG1 (c11-9 / all)
                     :ARG2 (c11-6 / shoot-02
                                  :mod (c11-1 / way
                                              :mod (c11-8 / either)))
                     :polarity -))

# ::snt i just heard there is no incident report
# ::tokens ["i", "just", "heard", "there", "is", "no", "incident", "report"]
# ::lemmas ["i", "just", "hear", "there", "be", "no", "incident", "report"]
(c12-0 / hear-01
       :ARG0 (c12-2 / i)
       :ARG1 (c12-3 / report-01
                    :ARG1 (c12-4 / incident)
                    :polarity -)
       :time (c12-1 / just))

# ::snt clearly it was re written after the fact for today's press conference.
# ::tokens ["clearly", "it", "was", "re", "written", "after", "the", "fact", "for", "today", "'s", "press", "conference", "."]
# ::lemmas ["clearly", "it", "be", "re", "write", "after", "the", "fact", "for", "today", "'s", "press", "conference", "."]
(c13-0 / write-01
       :ARG1 (c13-3 / it)
       :mod (c13-8 / again)
       :time (c13-2 / after
                    :op1 (c13-1 / fact))
       :purpose (c13-6 / conference
                       :mod (c13-4 / press)
                       :time (c13-7 / today))
       :ARG1-of (c13-5 / clear-06))

# ::snt driver's license?
# ::tokens ["driver", "'s", "license", "?"]
# ::lemmas ["driver", "'s", "license", "?"]
(c14-1 / license
       :polarity (c14-2 / amr-unknown)
       :mod (c14-0 / drive-01))

# ::snt Every incident report I've seen says "the suspect was X," "the suspect did Y." On the report, is ALREADY NAMED. HOW??
# ::tokens ["Every", "incident", "report", "I", "'ve", "seen", "says", "\"", "the", "suspect", "was", "X", ",", "\"", "\"", "the", "suspect", "did", "Y.", "\"", "On", "the", "report", ",", "is", "ALREADY", "NAMED", ".", "HOW", "?", "?"]
# ::lemmas ["every", "incident", "report", "i", "'ve", "see", "say", "\"", "the", "suspect", "be", "X", ",", "\"", "\"", "the", "suspect", "do", "Y.", "\"", "on", "the", "report", ",", "be", "already", "name", ".", "how", "?", "?"]
(c15-0 / multi-sentence
       :snt1 (c15-5 / say-01
                    :ARG0 (c15-14 / report-01
                                  :ARG1 (c15-17 / incident)
                                  :mod (c15-10 / every)
                                  :ARG1-of (c15-11 / see-01
                                                   :ARG0 (c15-18 / i)))
                    :ARG1 (c15-7 / and
                                 :op1 (c15-3 / person
                                             :domain (c15-6 / person
                                                            :ARG2-of (c15-19 / suspect-01))
                                             :mod (c15-2 / variable
                                                         :name (c15-12 / name
                                                                       :op1 "X")))
                                 :op2 (c15-8 / person
                                             :ARG0-of (c15-9 / suspect-01)
                                             :mod (c15-15 / variable
                                                          :name (c15-20 / name
                                                                        :op1 "Y")))))
       :snt2 (c15-4 / declare-02
                    :time (c15-16 / already)
                    :location (c15-1 / report-01)
                    :manner (c15-13 / amr-unknown)))

# ::snt Do you think time (11:51) on the report represents the time in which the incident began? And :54 footage is when he left
# ::tokens ["Do", "you", "think", "time", "(", "11:51", ")", "on", "the", "report", "represents", "the", "time", "in", "which", "the", "incident", "began", "?", "And", ":", "54", "footage", "is", "when", "he", "left"]
# ::lemmas ["do", "you", "think", "time", "(", "11:51", ")", "on", "the", "report", "represent", "the", "time", "in", "which", "the", "incident", "begin", "?", "and", ":", "54", "footage", "be", "when", "he", "leave"]
(c16-3 / multi-sentence
       :snt1 (c16-13 / think-01
                     :ARG0 (c16-1 / you)
                     :ARG1 (c16-10 / represent-01
                                   :ARG0 (c16-12 / time
                                                 :time-of (c16-5 / begin-01
                                                                 :ARG1 (c16-7 / incident)))
                                   :ARG1 (c16-9 / time
                                                :medium (c16-8 / report-01)
                                                :time "11:51"))
                     :polarity (c16-14 / amr-unknown))
       :snt2 (c16-6 / and
                    :op2 (c16-2 / footage
                                :time (c16-11 / date-entity
                                              :time "0:54")
                                :time-of (c16-4 / leave-11
                                                :ARG0 (c16-0 / he)))))

# ::snt I was wondering the same thing. They run that place like its Mayberry
# ::tokens ["I", "was", "wondering", "the", "same", "thing", ".", "They", "run", "that", "place", "like", "its", "Mayberry"]
# ::lemmas ["i", "be", "wonder", "the", "same", "thing", ".", "they", "run", "that", "place", "like", "its", "Mayberry"]
(c17-1 / multi-sentence
       :snt1 (c17-0 / wonder-01
                    :ARG0 (c17-2 / i)
                    :ARG1 (c17-10 / thing
                                  :ARG1-of (c17-9 / same-01)))
       :snt2 (c17-7 / run-01
                    :ARG0 (c17-8 / they)
                    :ARG1 (c17-6 / place
                                 :mod (c17-5 / that))
                    :ARG1-of (c17-3 / resemble-01
                                    :ARG2 (c17-11 / place
                                                  :name (c17-4 / name
                                                               :op1 "Mayberry")))))

# ::snt How is the shooter not the ? See: how to rationalize your fk'd up racist ideology.
# ::tokens ["How", "is", "the", "shooter", "not", "the", "?", "See", ":", "how", "to", "rationalize", "your", "fk'd", "up", "racist", "ideology", "."]
# ::lemmas ["how", "be", "the", "shooter", "not", "the", "?", "see", ":", "how", "to", "rationalize", "your", "fk'd", "up", "racist", "ideology", "."]
(c18-3 / multi-sentence
       :snt1 (c18-0 / have-manner-91
                    :polarity (c18-12 / amr-unknown)
                    :ARG1 (c18-8 / person
                                 :ARG0-of (c18-10 / shoot-02))
                    :ARG2 (c18-5 / amr-unknown))
       :snt2 (c18-4 / see-01
                    :ARG0 (c18-1 / you)
                    :ARG1 (c18-11 / thing
                                  :manner-of (c18-9 / rationalize-01
                                                    :ARG0 c18-1
                                                    :ARG1 (c18-6 / ideology
                                                                 :mod (c18-7 / racist)
                                                                 :ARG1-of (c18-2 / fuck-up-02)
                                                                 :poss c18-1)))
                    :mode imperative))

# ::snt but they don't release suspect names right? According to the police chief two days ago
# ::tokens ["but", "they", "do", "n't", "release", "suspect", "names", "right", "?", "According", "to", "the", "police", "chief", "two", "days", "ago"]
# ::lemmas ["but", "they", "do", "not", "release", "suspect", "name", "right", "?", "accord", "to", "the", "police", "chief", "two", "days", "ago"]
(c19-1 / multi-sentence
       :snt1 (c19-9 / contrast-01
                    :ARG2 (c19-8 / release-01
                                 :ARG0 (c19-14 / they)
                                 :ARG1 (c19-5 / name
                                              :poss (c19-7 / person
                                                           :ARG2-of (c19-13 / suspect-01)))
                                 :ARG1-of (c19-4 / request-confirmation-91)
                                 :polarity -))
       :snt2 (c19-3 / say-01
                    :ARG0 c19-7
                    :ARG0-of (c19-0 / have-org-role-91
                                    :ARG1 (c19-15 / police)
                                    :ARG2 (c19-10 / chief)))
       :time (c19-2 / before
                    :op1 (c19-6 / now)
                    :quant (c19-12 / temporal-quantity
                                   :unit (c19-11 / day)
                                   :quant 2)))

# ::snt because it's bullshit
# ::tokens ["because", "it", "'s", "bullshit"]
# ::lemmas ["because", "it", "be", "bullshit"]
(c20-0 / cause-01
       :ARG0 (c20-2 / bullshit-01
                    :ARG1 (c20-1 / it)))

# ::snt they are straight up lying. it's remarkable.
# ::tokens ["they", "are", "straight", "up", "lying", ".", "it", "'s", "remarkable", "."]
# ::lemmas ["they", "be", "straight", "up", "lie", ".", "it", "be", "remarkable", "."]
(c21-1 / multi-sentence
       :snt1 (c21-0 / lie-08
                    :ARG0 (c21-5 / they)
                    :ARG1-of (c21-4 / straight-04))
       :snt2 (c21-3 / remarkable-02
                    :ARG1 (c21-2 / it)))

# ::snt Good point
# ::tokens ["Good", "point"]
# ::lemmas ["good", "point"]
(c22-0 / point-04
       :ARG1-of (c22-1 / good-02))

# ::snt yah someone called it in at :51 and the footage shows him leaving around :54 ?
# ::tokens ["yah", "someone", "called", "it", "in", "at", ":", "51", "and", "the", "footage", "shows", "him", "leaving", "around", ":", "54", "?"]
# ::lemmas ["yah", "someone", "call", "it", "in", "at", ":", "51", "and", "the", "footage", "show", "he", "leave", "around", ":", "54", "?"]
(c23-12 / and
        :op1 (c23-10 / call-in-04
                     :ARG0 (c23-11 / someone)
                     :ARG1 (c23-7 / it)
                     :time (c23-9 / date-entity
                                  :time "0:51"))
        :op2 (c23-5 / show-01
                    :ARG0 (c23-3 / footage)
                    :ARG1 (c23-4 / leave-11
                                 :ARG0 (c23-0 / he)
                                 :time (c23-6 / around
                                              :op1 (c23-2 / date-entity
                                                          :time "0:54"))))
        :mod (c23-1 / yah
                    :mode expressive)
        :polarity (c23-8 / amr-unknown))

# ::snt cause he was shot, they filled in the blanks as everything unfolded
# ::tokens ["cause", "he", "was", "shot", ",", "they", "filled", "in", "the", "blanks", "as", "everything", "unfolded"]
# ::lemmas ["cause", "he", "be", "shoot", ",", "they", "fill", "in", "the", "blank", "as", "everything", "unfold"]
(c24-1 / fill-in-05
       :ARG0 (c24-7 / they)
       :ARG1 (c24-3 / blank)
       :time (c24-2 / unfold-02
                    :ARG1 (c24-4 / everything))
       :ARG1-of (c24-5 / cause-01
                       :ARG0 (c24-6 / shoot-02
                                    :ARG1 (c24-0 / he))))

# ::snt That struck me as really odd when I saw it, but couldn't put my finger on what was weird til . This is terrible.
# ::tokens ["That", "struck", "me", "as", "really", "odd", "when", "I", "saw", "it", ",", "but", "could", "n't", "put", "my", "finger", "on", "what", "was", "weird", "til", ".", "This", "is", "terrible", "."]
# ::lemmas ["that", "strike", "i", "as", "really", "odd", "when", "i", "see", "it", ",", "but", "could", "not", "put", "my", "finger", "on", "what", "be", "weird", "til", ".", "this", "be", "terrible", "."]
(c25-2 / multi-sentence
       :snt1 (c25-11 / contrast-01
                     :ARG1 (c25-14 / strike-04
                                   :ARG1 (c25-15 / that)
                                   :ARG2 (c25-5 / odd
                                                :degree (c25-10 / really))
                                   :time (c25-6 / see-01
                                                :ARG0 (c25-7 / i)
                                                :ARG1 (c25-12 / it)))
                     :ARG2 (c25-9 / possible-01
                                  :ARG1 (c25-16 / put-01
                                                :ARG0 (c25-1 / i
                                                             :part (c25-3 / finger
                                                                          :ARG1-of c25-16))
                                                :ARG2 (c25-0 / weird)
                                                :time (c25-4 / until
                                                             :op1 c25-6))
                                  :polarity -))
       :snt2 (c25-13 / terrible-01
                     :ARG1 (c25-8 / this)))

# ::snt coming from someone from "Mayberry" (lol), Andy didn't even carry a gun.
# ::tokens ["coming", "from", "someone", "from", "\"", "Mayberry", "\"", "(", "lol", ")", ",", "Andy", "did", "n't", "even", "carry", "a", "gun", "."]
# ::lemmas ["come", "from", "someone", "from", "\"", "Mayberry", "\"", "(", "lol", ")", ",", "Andy", "do", "not", "even", "carry", "a", "gun", "."]
(c26-8 / carry-01
       :ARG0 (c26-6 / person
                    :name (c26-4 / name
                                 :op1 "Andy"))
       :ARG1 (c26-9 / gun)
       :mod (c26-2 / even)
       :ARG1-of (c26-7 / cause-01
                       :ARG0 (c26-11 / come-03
                                     :ARG2 (c26-12 / someone
                                                   :source (c26-1 / location
                                                                  :name (c26-5 / name
                                                                               :op1 "Mayberry")))
                                     :manner (c26-10 / laugh-01
                                                     :ARG0 (c26-3 / i)
                                                     :manner (c26-0 / loud)
                                                     :mode expressive)))
       :polarity -)

# ::snt shows departed time hrs.later. Boy, they investigated that box of cigars for a looong ass time.
# ::tokens ["shows", "departed", "time", "hrs.later", ".", "Boy", ",", "they", "investigated", "that", "box", "of", "cigars", "for", "a", "looong", "ass", "time", "."]
# ::lemmas ["show", "depart", "time", "hrs.later", ".", "boy", ",", "they", "investigate", "that", "box", "of", "cigar", "for", "a", "looong", "ass", "time", "."]
(c27-2 / multi-sentence
       :snt1 (c27-9 / depart-01
                    :ARG0 (c27-13 / show)
                    :time (c27-15 / after
                                  :quant (c27-8 / multiple
                                                :op1 (c27-14 / temporal-quantity
                                                             :unit (c27-0 / hour)
                                                             :quant 1))))
       :snt2 (c27-6 / investigate-01
                    :ARG0 (c27-12 / they)
                    :ARG1 (c27-3 / box
                                 :consist-of (c27-10 / cigar)
                                 :mod (c27-7 / that))
                    :duration (c27-4 / time
                                     :mod (c27-5 / ass
                                                 :mod (c27-1 / looong)))
                    :mod (c27-11 / boy)))

# ::snt AGAIN. This was nearly a week ago.
# ::tokens ["AGAIN", ".", "This", "was", "nearly", "a", "week", "ago", "."]
# ::lemmas ["again", ".", "this", "be", "nearly", "a", "week", "ago", "."]
(c28-1 / multi-sentence
       :snt1 (c28-7 / agree-01
                    :mode expressive)
       :snt2 (c28-6 / this
                    :time (c28-2 / before
                                 :op1 (c28-3 / now)
                                 :quant (c28-4 / nearly
                                               :op1 (c28-5 / temporal-quantity
                                                           :unit (c28-0 / week)
                                                           :quant 1)))))

# ::snt the officer that wrote this isn't the shooter, this officer saw the footage&amp;identified him at the shootin look at report date
# ::tokens ["the", "officer", "that", "wrote", "this", "is", "n't", "the", "shooter", ",", "this", "officer", "saw", "the", "footage&amp;identified", "him", "at", "the", "shootin", "look", "at", "report", "date"]
# ::lemmas ["the", "officer", "that", "write", "this", "be", "not", "the", "shooter", ",", "this", "officer", "see", "the", "footage&amp;identified", "he", "at", "the", "shootin", "look", "at", "report", "date"]
(c29-3 / multi-sentence
       :snt1 (c29-11 / person
                     :ARG0-of (c29-14 / shoot-02)
                     :domain (c29-7 / officer
                                    :ARG0-of (c29-1 / write-01
                                                    :ARG1 (c29-15 / this)))
                     :polarity -)
       :snt2 (c29-16 / and
                     :op1 (c29-8 / see-01
                                 :ARG0 (c29-2 / officer
                                              :mod (c29-13 / this))
                                 :ARG1 c29-16
                                 :op1 (c29-4 / footage)
                                 :op2 (c29-9 / amp)))
       :op2 (c29-10 / identify-01
                    :ARG0 c29-2
                    :ARG1 (c29-0 / he)
                    :time (c29-5 / look-01
                                 :ARG0 c29-2
                                 :ARG1 (c29-12 / date-entity
                                               :time-of (c29-6 / shoot-02)))))

# ::snt this is the full report , what you showed was page which is where supplementary info began
# ::tokens ["this", "is", "the", "full", "report", ",", "what", "you", "showed", "was", "page", "which", "is", "where", "supplementary", "info", "began"]
# ::lemmas ["this", "be", "the", "full", "report", ",", "what", "you", "show", "be", "page", "which", "be", "where", "supplementary", "info", "begin"]
(c30-9 / and
       :op1 (c30-6 / report-01
                   :ARG1-of (c30-1 / full-09)
                   :domain (c30-8 / this))
       :op2 (c30-7 / show-01
                   :ARG0 (c30-0 / you)
                   :ARG1 (c30-5 / page
                                :location-of (c30-2 / begin-01
                                                    :ARG1 (c30-4 / information
                                                                 :ARG2-of (c30-3 / supplement-01))))))

# ::snt I guess but donte already admitted to being their and the cigarillo incident even before the video ..
# ::tokens ["I", "guess", "but", "donte", "already", "admitted", "to", "being", "their", "and", "the", "cigarillo", "incident", "even", "before", "the", "video", ".."]
# ::lemmas ["i", "guess", "but", "donte", "already", "admit", "to", "be", "their", "and", "the", "cigarillo", "incident", "even", "before", "the", "video", ".."]
(c31-8 / contrast-01
       :ARG1 (c31-9 / guess-01
                    :ARG0 (c31-3 / i))
       :ARG2 (c31-13 / admit-01
                     :ARG0 (c31-6 / person
                                  :name (c31-4 / name
                                               :op1 "Donte"))
                     :ARG1 (c31-10 / incident
                                   :topic (c31-2 / and
                                                 :op1 (c31-12 / they)
                                                 :op2 (c31-7 / cigarillo))
                                   :poss c31-12)
                     :time (c31-5 / already)
                     :time (c31-0 / before
                                  :op1 (c31-11 / video)
                                  :mod (c31-1 / even))))

# ::snt good point
# ::tokens ["good", "point"]
# ::lemmas ["good", "point"]
(c32-0 / point-04
       :ARG1-of (c32-1 / good-02))

# ::snt where is the u read this says /9 &amp; his name? But either way his friend/witness admitted they got swishers..all irrelevant
# ::tokens ["where", "is", "the", "u", "read", "this", "says", "/9", "&", "amp", ";", "his", "name", "?", "But", "either", "way", "his", "friend", "/", "witness", "admitted", "they", "got", "swishers", "..", "all", "irrelevant"]
# ::lemmas ["where", "be", "the", "u", "read", "this", "say", "/9", "&", "amp", ";", "his", "name", "?", "but", "either", "way", "his", "friend", "/", "witness", "admit", "they", "get", "swisher", "..", "all", "irrelevant"]
(c33-0 / multi-sentence
       :snt1 (c33-10 / be-located-at-91
                     :ARG1 (c33-13 / read-01
                                   :ARG0 (c33-17 / you)
                                   :ARG1 (c33-19 / this))
                     :ARG2 (c33-6 / amr-unknown))
       :snt2 (c33-18 / contrast-01
                     :ARG2 (c33-16 / admit-01
                                   :ARG0 (c33-3 / slash
                                                :op1 (c33-2 / person
                                                            :ARG0-of (c33-7 / have-rel-role-91
                                                                            :ARG1 (c33-5 / he)
                                                                            :ARG2 (c33-8 / friend)))
                                                :op2 (c33-4 / person
                                                            :ARG0-of (c33-15 / witness-01)))
                                   :ARG1 (c33-14 / get-01
                                                 :ARG0 c33-3
                                                 :ARG1 (c33-9 / person
                                                              :ARG0-of (c33-11 / swish-01)))
                                   :mod (c33-12 / either)
                                   :ARG1-of (c33-1 / relevant-01
                                                   :polarity -))))

# ::snt Oh, it's because it's completely fabricated.
# ::tokens ["Oh", ",", "it", "'s", "because", "it", "'s", "completely", "fabricated", "."]
# ::lemmas ["oh", ",", "it", "be", "because", "it", "be", "completely", "fabricate", "."]
(c34-2 / cause-01
       :ARG0 (c34-1 / fabricate-01
                    :ARG1 (c34-3 / it)
                    :ARG1-of (c34-0 / complete-02))
       :ARG1 c34-3)

# ::snt Because it was after the fact.
# ::tokens ["Because", "it", "was", "after", "the", "fact", "."]
# ::lemmas ["because", "it", "be", "after", "the", "fact", "."]
(c35-3 / cause-01
       :ARG0 (c35-1 / be-temporally-at-91
                    :ARG1 (c35-2 / it)
                    :ARG2 (c35-4 / after
                                 :op1 (c35-0 / fact))))

# ::snt I bet you he was lbs. Not -290.. two hundred and ninety two!
# ::tokens ["I", "bet", "you", "he", "was", "lbs", ".", "Not", "-290", "..", "two", "hundred", "and", "ninety", "two", "!"]
# ::lemmas ["i", "bet", "you", "he", "be", "lb", ".", "not", "-290", "..", "two", "hundred", "and", "ninety", "two", "!"]
(c36-2 / multi-sentence
       :snt1 (c36-3 / bet-01
                    :ARG0 (c36-4 / i)
                    :ARG2 (c36-5 / mass-quantity
                                 :unit (c36-6 / pound)
                                 :domain (c36-0 / he)
                                 :quant 1))
       :snt2 (c36-1 / mass-quantity
                    :quant290 (c36-9 / pound)
                    :domain c36-0
                    :polarity -)
       :snt3 (c36-10 / age-01
                     :ARG2 (c36-8 / temporal-quantity
                                  :unit (c36-7 / month)
                                  :quant 26)))

# ::snt : Every incident report I've seen says "suspect was X" "suspect did Y" On report, is ALREADY NAMED. HOW
# ::tokens [":", "Every", "incident", "report", "I", "'ve", "seen", "says", "\"", "suspect", "was", "X", "\"", "\"", "suspect", "did", "Y", "\"", "On", "report", ",", "is", "ALREADY", "NAMED", ".", "HOW"]
# ::lemmas [":", "every", "incident", "report", "i", "'ve", "see", "say", "\"", "suspect", "be", "X", "\"", "\"", "suspect", "do", "Y", "\"", "on", "report", ",", "be", "already", "name", ".", "how"]
(c37-1 / multi-sentence
       :snt1 (c37-6 / say-01
                    :ARG0 (c37-14 / report-01
                                  :ARG1 (c37-17 / incident)
                                  :mod (c37-10 / every)
                                  :ARG1-of (c37-11 / see-01
                                                   :ARG0 (c37-18 / i)))
                    :ARG1 (c37-8 / and
                                 :op1 (c37-4 / person
                                             :domain (c37-7 / person)
                                             :mod (c37-3 / variable
                                                         :name (c37-12 / name
                                                                       :op1 "X")))
                                 :op2 (c37-9 / person
                                             :ARG0-of (c37-5 / do-02
                                                             :ARG1 (c37-20 / thing
                                                                           :mod (c37-15 / variable
                                                                                        :name (c37-19 / name
                                                                                                      :op1 "Y")))))))
       :snt2 (c37-0 / declare-02
                    :ARG1 (c37-2 / report-01)
                    :time (c37-16 / already)
                    :manner (c37-13 / amr-unknown)))
