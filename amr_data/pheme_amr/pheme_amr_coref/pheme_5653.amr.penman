# ::snt what happened?:/
# ::tokens ["what", "happened?:/"]
# ::lemmas ["what", "happened?:/"]
(c1-0 / amr-unknown)

# ::snt I am anxious about a case
# ::tokens ["I", "am", "anxious", "about", "a", "case"]
# ::lemmas ["i", "be", "anxious", "about", "a", "case"]
(c2-2 / anxious
      :domain (c2-1 / i)
      :topic (c2-0 / case-03))

# ::snt it's a very scary moment for us. The entire region is at a standstill. One can only hope they all leave unscathed.
# ::tokens ["it", "'s", "a", "very", "scary", "moment", "for", "us", ".", "The", "entire", "region", "is", "at", "a", "standstill", ".", "One", "can", "only", "hope", "they", "all", "leave", "unscathed", "."]
# ::lemmas ["it", "be", "a", "very", "scary", "moment", "for", "we", ".", "the", "entire", "region", "be", "at", "a", "standstill", ".", "one", "can", "only", "hope", "you", "all", "leave", "unscathed", "."]
(c3-3 / multi-sentence
      :snt1 (c3-11 / moment
                   :ARG0-of (c3-14 / scary-03
                                   :ARG1 (c3-1 / we)
                                   :degree (c3-10 / very))
                   :domain (c3-9 / it))
      :snt2 (c3-7 / stand-still-07
                  :ARG1 (c3-12 / region
                               :mod (c3-8 / entire)))
      :snt3 (c3-13 / possible-01
                   :ARG1 (c3-0 / hope-01
                               :ARG0 (c3-6 / one)
                               :ARG1 (c3-2 / leave-11
                                           :ARG0 (c3-15 / they
                                                        :mod (c3-16 / all))
                                           :ARG1 (c3-4 / unscathed))
                               :mod (c3-5 / only))))

# ::snt what's happening?
# ::tokens ["what", "'s", "happening", "?"]
# ::lemmas ["what", "be", "happen", "?"]
(c4-0 / event
      :mod (c4-1 / amr-unknown))

# ::snt my entire school was in town hall (just opposite Martin place). We were in lockdown but we were all evacuated safely!
# ::tokens ["my", "entire", "school", "was", "in", "town", "hall", "(", "just", "opposite", "Martin", "place", ")", ".", "We", "were", "in", "lockdown", "but", "we", "were", "all", "evacuated", "safely", "!"]
# ::lemmas ["my", "entire", "school", "be", "in", "town", "hall", "(", "just", "opposite", "Martin", "place", ")", ".", "we", "be", "in", "lockdown", "but", "we", "be", "all", "evacuate", "safely", "!"]
(c5-4 / multi-sentence
      :snt1 (c5-13 / school
                   :mod (c5-7 / entire)
                   :poss (c5-9 / i)
                   :location (c5-0 / hall
                                   :mod (c5-14 / town)
                                   :ARG1-of (c5-6 / opposite-01
                                                  :ARG2 (c5-11 / place
                                                               :name (c5-10 / name
                                                                            :op1 "Martin"))
                                                  :mod (c5-1 / just))))
      :snt2 (c5-12 / contrast-01
                   :ARG1 (c5-3 / lock-down-06
                               :ARG1 (c5-2 / we
                                           :mod (c5-15 / all)))
                   :ARG2 (c5-5 / evacuate-01
                               :ARG2 c5-2
                               :ARG1-of (c5-8 / safe-01))))

# ::snt it's absolutely repulsive what they're doing. There is no room for terrorism today or any day.
# ::tokens ["it", "'s", "absolutely", "repulsive", "what", "they", "'re", "doing", ".", "There", "is", "no", "room", "for", "terrorism", "today", "or", "any", "day", "."]
# ::lemmas ["it", "be", "absolutely", "repulsive", "what", "they", "be", "do", ".", "there", "be", "no", "room", "for", "terrorism", "today", "or", "any", "day", "."]
(c6-1 / multi-sentence
      :snt1 (c6-7 / repulsive
                  :domain (c6-10 / thing
                                 :ARG1-of (c6-8 / do-02
                                                :ARG0 (c6-9 / they)))
                  :degree (c6-11 / absolute))
      :snt2 (c6-5 / room
                  :purpose (c6-6 / terrorism)
                  :time (c6-2 / or
                              :op1 (c6-3 / today)
                              :op2 (c6-0 / day
                                         :mod (c6-4 / any)))
                  :polarity -))

# ::snt Mankind is going mad ...
# ::tokens ["Mankind", "is", "going", "mad", "..."]
# ::lemmas ["mankind", "be", "go", "mad", "..."]
(c7-2 / go-08
      :ARG1 (c7-0 / humankind)
      :ARG2 (c7-1 / mad-04
                  :ARG1 c7-0))

# ::snt Hi,James What's happened? Does James not come to Japan? Please come to Osaka!
# ::tokens ["Hi", ",", "James", "What", "'s", "happened", "?", "Does", "James", "not", "come", "to", "Japan", "?", "Please", "come", "to", "Osaka", "!"]
# ::lemmas ["hi", ",", "James", "What", "'s", "happen", "?", "do", "James", "not", "come", "to", "Japan", "?", "please", "come", "to", "Osaka", "!"]
(c8-1 / multi-sentence
      :snt1 (c8-11 / say-01
                   :ARG1 (c8-0 / hi)
                   :ARG2 (c8-5 / person
                               :name (c8-3 / name
                                           :op1 "James")))
      :snt2 (c8-12 / and
                   :op1 (c8-2 / event)
                   :op2 (c8-7 / come-01
                              :ARG1 c8-5
                              :name (c8-4 / name
                                          :op1 "James")
                              :polarity -)
                   :ARG4 (c8-6 / country
                               :name (c8-8 / name
                                           :op1 "Japan")))
      :op3 (c8-10 / come-01
                  :ARG1 c8-5
                  :ARG4 (c8-13 / city
                               :name (c8-9 / name
                                           :op1 "Osaka"))
                  :mode imperative
                  :polite +))

# ::snt it's so sad &amp; terrible James. to all those involved &amp; their families
# ::tokens ["it", "'s", "so", "sad", "&", "amp", ";", "terrible", "James", ".", "to", "all", "those", "involved", "&", "amp", ";", "their", "families"]
# ::lemmas ["it", "be", "so", "sad", "&", "amp", ";", "terrible", "James", ".", "to", "all", "those", "involve", "&", "amp", ";", "their", "family"]
(c9-11 / say-01
       :ARG0 (c9-6 / i)
       :ARG1 (c9-14 / and
                    :op1 (c9-4 / sad-02
                               :degree (c9-1 / so))
                    :op2 (c9-12 / terrible-01
                                :ARG1 (c9-9 / person
                                            :name (c9-7 / name
                                                        :op1 "James"))))
       :ARG2 (c9-5 / and
                   :op1 (c9-13 / person
                               :ARG1-of (c9-10 / involve-01))
                   :op2 (c9-3 / person
                              :ARG0-of (c9-0 / have-rel-role-91
                                             :ARG1 c9-5
                                             :ARG2 (c9-2 / family)))
                   :mod (c9-8 / all)))

# ::snt what happened?Please talk to meI'm you biggest fanIlysm
# ::tokens ["what", "happened?Please", "talk", "to", "meI'm", "you", "biggest", "fanIlysm"]
# ::lemmas ["what", "happened?please", "talk", "to", "mei'm", "you", "big", "fanIlysm"]
(c10-3 / multi-sentence
       :snt1 (c10-10 / amr-unknown
                     :polarity c10-10)
       :snt2 (c10-9 / talk-01
                    :ARG0 (c10-1 / you)
                    :ARG2 (c10-5 / i)
                    :mode imperative
                    :polite +)
       :snt3 (c10-2 / fan
                    :domain (c10-8 / you)
                    :ARG1-of (c10-0 / have-degree-91
                                    :ARG2 (c10-4 / big)
                                    :ARG3 (c10-6 / most)
                                    :ARG5 (c10-7 / i))))

# ::snt thanks james
# ::tokens ["thanks", "james"]
# ::lemmas ["thank", "jame"]
(c11-2 / thank-01
       :ARG1 (c11-1 / person
                    :name (c11-0 / name
                                 :op1 "James")))

# ::snt Have they reported how many people are inside the cafe?
# ::tokens ["Have", "they", "reported", "how", "many", "people", "are", "inside", "the", "cafe", "?"]
# ::lemmas ["have", "they", "report", "how", "many", "people", "be", "inside", "the", "cafe", "?"]
(c12-3 / report-01
       :polarity (c12-6 / amr-unknown)
       :ARG0 (c12-5 / they)
       :ARG1 (c12-1 / number
                    :quant-of (c12-2 / person
                                     :location (c12-0 / inside
                                                      :op1 (c12-4 / cafe)))))

# ::snt we just got out of the city after hours, finally! it's crazy, everyone's in panic mode, police and helicopters everywhere!
# ::tokens ["we", "just", "got", "out", "of", "the", "city", "after", "hours", ",", "finally", "!", "it", "'s", "crazy", ",", "everyone", "'s", "in", "panic", "mode", ",", "police", "and", "helicopters", "everywhere", "!"]
# ::lemmas ["we", "just", "get", "out", "of", "the", "city", "after", "hour", ",", "finally", "!", "it", "be", "crazy", ",", "everyone", "'s", "in", "panic", "mode", ",", "police", "and", "helicopter", "everywhere", "!"]
(c13-1 / multi-sentence
       :snt1 (c13-13 / get-05
                     :ARG1 (c13-14 / we)
                     :ARG2 (c13-17 / out-06
                                   :ARG1 c13-14
                                   :ARG2 (c13-18 / city))
                     :time (c13-6 / after
                                  :quant (c13-12 / multiple
                                                 :op1 (c13-19 / temporal-quantity
                                                              :unit (c13-7 / hour)
                                                              :quant 1)))
                     :mod (c13-0 / just)
                     :time (c13-8 / final))
       :snt2 (c13-3 / crazy-03
                    :ARG1 (c13-16 / it))
       :snt3 (c13-15 / and
                     :op1 (c13-2 / panic-01
                                 :ARG1 (c13-10 / everyone))
                     :op2 (c13-11 / and
                                  :op1 (c13-4 / police)
                                  :op2 (c13-5 / helicopter)
                                  :location (c13-9 / everywhere))))

# ::snt hey James how are you??
# ::tokens ["hey", "James", "how", "are", "you", "?", "?"]
# ::lemmas ["hey", "James", "how", "be", "you", "?", "?"]
(c14-4 / say-01
       :ARG1 (c14-0 / have-manner-91
                    :ARG1 (c14-3 / person
                                 :name (c14-2 / name
                                              :op1 "James"))
                    :ARG2 (c14-5 / amr-unknown))
       :ARG2 c14-3
       :mod (c14-1 / hey
                   :mode expressive))

# ::snt Im not far from Sydney.. Wish I could meet you
# ::tokens ["I", "m", "not", "far", "from", "Sydney", "..", "Wish", "I", "could", "meet", "you"]
# ::lemmas ["i", "m", "not", "far", "from", "Sydney", "..", "wish", "i", "could", "meet", "you"]
(c15-3 / multi-sentence
       :snt1 (c15-4 / be-located-at-91
                    :ARG1 (c15-5 / i)
                    :ARG2 (c15-8 / relative-position
                                 :op1 (c15-9 / city
                                             :name (c15-6 / name
                                                          :op1 "Sydney"))
                                 :quant (c15-2 / far
                                               :polarity -)))
       :snt2 (c15-0 / wish-01
                    :ARG0 (c15-10 / i)
                    :ARG1 (c15-7 / possible-01
                                 :ARG1 (c15-11 / meet-02
                                               :ARG0 c15-10
                                               :ARG1 (c15-1 / you)))))

# ::snt Praying for Sydney
# ::tokens ["Praying", "for", "Sydney"]
# ::lemmas ["pray", "for", "Sydney"]
(c16-1 / pray-01
       :beneficiary (c16-2 / person
                           :name (c16-0 / name
                                        :op1 "Sydney")))

# ::snt be safe!
# ::tokens ["be", "safe", "!"]
# ::lemmas ["be", "safe", "!"]
(c17-0 / safe-01
       :ARG1 (c17-1 / you)
       :mode imperative)

# ::snt I love you so much!!!
# ::tokens ["I", "love", "you", "so", "much", "!", "!", "!"]
# ::lemmas ["i", "love", "you", "so", "much", "!", "!", "!"]
(c18-1 / love-01
       :ARG0 (c18-3 / i)
       :ARG1 (c18-0 / you)
       :degree (c18-2 / much
                      :degree (c18-4 / so)))

# ::snt brasil loves u
# ::tokens ["brasil", "loves", "u"]
# ::lemmas ["brasil", "love", "u"]
(c19-3 / love-01
       :ARG0 (c19-2 / person
                    :name (c19-0 / name
                                 :op1 "brasil"))
       :ARG1 (c19-1 / you))
