# ::snt AcuteAddition2this cartoon. As President cuts off ABU's head Pres turns sideways at THEbigGUY of Al-Quida and says "NEXT!".
# ::tokens ["AcuteAddition2this", "cartoon", ".", "As", "President", "cuts", "off", "ABU", "'s", "head", "Pres", "turns", "sideways", "at", "THEbigGUY", "of", "Al", "-", "Quida", "and", "says", "\"", "NEXT", "!", "\"", "."]
# ::lemmas ["acuteaddition2this", "cartoon", ".", "as", "President", "cut", "off", "ABU", "'s", "head", "Pres", "turn", "sideways", "at", "thebigguy", "of", "Al", "-", "Quida", "and", "say", "\"", "NEXT", "!", "\"", "."]
(c1-0 / multi-sentence
      :snt1 (c1-21 / cartoon
                   :name (c1-15 / name
                                :op1 "AcuteAddition2")
                   :mod (c1-23 / this))
      :snt2 (c1-9 / and
                  :op1 (c1-22 / turn-01
                              :ARG1 (c1-3 / person
                                          :name (c1-20 / name
                                                       :op1 "Pres")
                                          :ARG0-of (c1-10 / have-org-role-91
                                                          :ARG2 (c1-7 / president)))
                              :direction (c1-13 / backward)
                              :direction (c1-12 / person
                                                :name (c1-1 / name
                                                            :op1 "Al-Quida")
                                                :ARG0-of (c1-8 / have-org-role-91
                                                               :ARG1 (c1-4 / criminal-organization
                                                                           :name (c1-2 / name
                                                                                       :op1 "Al-Quida"))
                                                               :ARG2 (c1-14 / enemy))))
                  :op2 (c1-6 / say-01
                             :ARG0 c1-3
                             :ARG1 (c1-24 / next))
                  :time (c1-17 / cut-off-04
                               :ARG0 c1-3
                               :ARG1 (c1-5 / head
                                           :part-of (c1-16 / person
                                                           :ARG0-of (c1-18 / have-org-role-91
                                                                           :ARG1 (c1-19 / organization
                                                                                        :name (c1-11 / name
                                                                                                     :op1 "ABU"))))))))

# ::snt what about a week on that fantastic island of yours?
# ::tokens ["what", "about", "a", "week", "on", "that", "fantastic", "island", "of", "yours", "?"]
# ::lemmas ["what", "about", "a", "week", "on", "that", "fantastic", "island", "of", "your", "?"]
(c2-6 / amr-unknown
      :topic (c2-5 / temporal-quantity
                   :unit (c2-0 / week)
                   :location (c2-3 / island
                                   :ARG1-of (c2-2 / fantastic-02)
                                   :poss (c2-1 / you)
                                   :mod (c2-4 / that))
                   :quant 1))

# ::snt L'Amrique se tient avec la France.
# ::tokens ["L'Amrique", "se", "tient", "avec", "la", "France", "."]
# ::lemmas ["L'Amrique", "se", "tient", "avec", "la", "France", "."]
(c3-4 / tient-of
      :ARG1 (c3-3 / city
                  :name (c3-0 / name
                              :op1 "L'Amrique"))
      :ARG3 (c3-2 / country
                  :name (c3-1 / name
                              :op1 "France")))

# ::snt Telegraph World Cartoonists
# ::tokens ["Telegraph", "World", "Cartoonists"]
# ::lemmas ["Telegraph", "World", "Cartoonists"]
(c4-2 / telegraph-01
      :ARG0 (c4-1 / you)
      :ARG1 (c4-3 / broadcast-program
                  :name (c4-0 / name
                              :op1 "World"
                              :op2 "Cartoonists"))
      :mode imperative)

# ::snt THAT'S GREAT!!!
# ::tokens ["THAT", "'S", "GREAT", "!", "!", "!"]
# ::lemmas ["that", "be", "GREAT", "!", "!", "!"]
(c5-1 / great
      :domain (c5-0 / that))

# ::snt SORRY.THOSE ARE REALLY NOT MUSLMS.
# ::tokens ["SORRY.THOSE", "ARE", "REALLY", "NOT", "MUSLMS", "."]
# ::lemmas ["SORRY.THOSE", "be", "really", "not", "MUSLMS", "."]
(c6-0 / multi-sentence
      :snt1 (c6-4 / sigh-02)
      :snt2 (c6-3 / religious-group
                  :name (c6-2 / name
                              :op1 "Islam")
                  :domain (c6-5 / that)
                  :ARG1-of (c6-1 / real-04)
                  :polarity -))

# ::snt such hypocrisy. would ppl say 'I am terry jones'? -the FL pastor who wanted to burn a Koran- if he was shot? never
# ::tokens ["such", "hypocrisy", ".", "would", "ppl", "say", "'", "I", "am", "terry", "jones", "'", "?", "-the", "FL", "pastor", "who", "wanted", "to", "burn", "a", "Koran-", "if", "he", "was", "shot", "?", "never"]
# ::lemmas ["such", "hypocrisy", ".", "would", "ppl", "say", "'", "i", "be", "terry", "jones", "'", "?", "-the", "FL", "pastor", "who", "want", "to", "burn", "a", "Koran-", "if", "he", "be", "shoot", "?", "never"]
(c7-0 / multi-sentence
      :snt1 (c7-8 / hypocrisy
                  :mod (c7-4 / such))
      :snt2 (c7-12 / say-01
                   :ARG0 (c7-15 / we)
                   :ARG1 (c7-3 / person
                               :name (c7-14 / name
                                            :op1 "Terry"
                                            :op2 "Jones")
                               :domain (c7-17 / i))
                   :polarity (c7-7 / amr-unknown)
                   :polarity (c7-16 / amr-unknown))
      :snt3 (c7-5 / person
                  :ARG0-of (c7-6 / have-org-role-91
                                 :ARG2 (c7-9 / pastor))
                  :location (c7-19 / state
                                   :name (c7-20 / name
                                                :op1 "Florida"))
                  :ARG0-of (c7-1 / want-01
                                 :ARG1 (c7-10 / burn-01
                                              :ARG0 c7-5
                                              :ARG1 (c7-18 / book
                                                           :name (c7-2 / name
                                                                       :op1 "Koran")))
                                 :condition (c7-11 / shoot-02
                                                   :ARG1 c7-5))
                  :time (c7-13 / ever)))

# ::snt Stop Lying This Attack Was Nothing To Do With Free Speech
# ::tokens ["Stop", "Lying", "This", "Attack", "Was", "Nothing", "To", "Do", "With", "Free", "Speech"]
# ::lemmas ["stop", "lie", "this", "Attack", "be", "nothing", "to", "do", "with", "Free", "Speech"]
(c8-6 / stop-01
      :ARG0 (c8-1 / you)
      :ARG1 (c8-2 / lie-08
                  :ARG0 c8-1
                  :ARG1 (c8-8 / attack-01
                              :mod (c8-7 / this))
                  :ARG2-of (c8-0 / have-to-do-with-04
                                 :ARG1 (c8-4 / speak-01
                                             :ARG3-of (c8-3 / free-04))
                                 :ARG2 (c8-5 / nothing)))
      :mode imperative)

# ::snt brilliant to say the least, loved it thanka
# ::tokens ["brilliant", "to", "say", "the", "least", ",", "loved", "it", "thanka"]
# ::lemmas ["brilliant", "to", "say", "the", "least", ",", "love", "it", "thanka"]
(c9-7 / and
      :op1 (c9-2 / brilliant-01
                 :ARG1 (c9-6 / say-01
                             :ARG1 (c9-0 / have-polarity-91
                                         :ARG2 -)))
      :op2 (c9-1 / love-01
                 :ARG0 c9-6
                 :ARG1 (c9-3 / it))
      :op3 (c9-5 / person
                 :name (c9-4 / name
                             :op1 "thanka")))

# ::snt Call to register for this site and gain new job
# ::tokens ["Call", "to", "register", "for", "this", "site", "and", "gain", "new", "job"]
# ::lemmas ["call", "to", "register", "for", "this", "site", "and", "gain", "new", "job"]
(c11-4 / call-02
       :ARG0 (c11-1 / you)
       :purpose (c11-8 / and
                       :op1 (c11-3 / register-02
                                   :ARG0 c11-1
                                   :ARG2 (c11-6 / site
                                                :mod (c11-7 / this)))
                       :op2 (c11-5 / gain-02
                                   :ARG0 c11-1
                                   :ARG1 (c11-0 / job
                                                :ARG1-of (c11-2 / new-01))))
       :mode imperative)

# ::snt Buy and post antimony covers every week.. don't say at the end "I wish I'd done that!!"
# ::tokens ["Buy", "and", "post", "antimony", "covers", "every", "week", "..", "do", "n't", "say", "at", "the", "end", "\"", "I", "wish", "I", "'d", "done", "that", "!", "!", "\""]
# ::lemmas ["buy", "and", "post", "antimony", "cover", "every", "week", "..", "do", "not", "say", "at", "the", "end", "\"", "i", "wish", "i", "would", "do", "that", "!", "!", "\""]
(c12-2 / multi-sentence
       :snt1 (c12-14 / and
                     :op1 (c12-3 / buy-01
                                 :ARG0 (c12-0 / you)
                                 :ARG1 (c12-9 / cover-01
                                              :ARG2 (c12-5 / antimony))
                                 :mode imperative)
                     :op2 (c12-7 / post-01
                                 :ARG0 c12-0
                                 :ARG1 c12-9
                                 :mode imperative)
                     :frequency (c12-8 / rate-entity-91
                                       :ARG3 (c12-13 / temporal-quantity
                                                     :unit (c12-1 / week)
                                                     :quant 1)))
       :snt2 (c12-12 / say-01
                     :ARG0 c12-0
                     :ARG1 (c12-6 / wish-01
                                  :ARG0 c12-0
                                  :ARG1 (c12-10 / do-02
                                                :ARG0 c12-0
                                                :ARG1 (c12-11 / that)))
                     :time (c12-4 / end-01)
                     :polarity -
                     :mode imperative))

# ::snt How about this cartoon? World-wideTelevisionScreenShowing ThePresidentofTheUnitedNationsCuttingOffTheHeadOfAbuBakr.Yes?No?
# ::tokens ["How", "about", "this", "cartoon", "?", "World", "-", "wideTelevisionScreenShowing", "ThePresidentofTheUnitedNationsCuttingOffTheHeadOfAbuBakr", ".", "Yes?No", "?"]
# ::lemmas ["how", "about", "this", "cartoon", "?", "world", "-", "widetelevisionscreenshowe", "thepresidentoftheunitednationscuttingofftheheadofabubakr", ".", "Yes?No", "?"]
(c14-3 / multi-sentence
       :snt1 (c14-10 / suggest-01
                     :ARG0 (c14-5 / i)
                     :ARG1 (c14-8 / cartoon
                                  :mod (c14-11 / this)))
       :snt2 (c14-4 / show-01
                    :ARG1 (c14-2 / screen
                                 :mod (c14-9 / television))
                    :ARG2 (c14-7 / person
                                 :name (c14-6 / name
                                              :op1 "ThePresidentofTheUnitedNationsCuttingOffTheHeadOfAbuBakr"))
                    :mod (c14-0 / worldwide))
       :snt3 (c14-1 / yes
                    :polarity (c14-12 / amr-unknown)))

# ::snt Many thx Sir Branson
# ::tokens ["Many", "thx", "Sir", "Branson"]
# ::lemmas ["many", "thx", "Sir", "Branson"]
(c15-1 / person
       :name (c15-0 / name
                    :op1 "Sir"
                    :op2 "Branson")
       :quant (c15-2 / many))

# ::snt don't get what that He drew first mean la?
# ::tokens ["do", "n't", "get", "what", "that", "He", "drew", "first", "mean", "la", "?"]
# ::lemmas ["do", "not", "get", "what", "that", "he", "draw", "first", "mean", "la", "?"]
(c16-6 / get-01
       :ARG0 (c16-4 / i)
       :ARG1 (c16-7 / thing
                    :ARG1-of (c16-5 / draw-01
                                    :ARG0 (c16-0 / he)
                                    :ord (c16-3 / ordinal-entity
                                                :value 1)))
       :ARG1-of (c16-2 / mean-01
                       :ARG2 (c16-1 / la)
                       :polarity (c16-8 / amr-unknown))
       :polarity -)

# ::snt Happy New year,I would LOVE to send this personalised frame to your family filled memories
# ::tokens ["Happy", "New", "year", ",", "I", "would", "LOVE", "to", "send", "this", "personalised", "frame", "to", "your", "family", "filled", "memories"]
# ::lemmas ["Happy", "New", "year", ",", "i", "would", "love", "to", "send", "this", "personalised", "frame", "to", "your", "family", "fill", "memory"]
(c17-2 / love-02
       :ARG0 (c17-6 / i)
       :ARG1 (c17-11 / send-01
                     :ARG0 c17-6
                     :ARG1 (c17-3 / frame
                                  :ARG1-of (c17-9 / personalize-01)
                                  :mod (c17-13 / this))
                     :ARG2 (c17-1 / you)
                     :purpose (c17-4 / memory
                                     :ARG1-of (c17-7 / fill-01
                                                     :ARG2 (c17-5 / family
                                                                  :ARG1-of (c17-0 / have-org-role-91
                                                                                  :ARG0 c17-1
                                                                                  :ARG2 (c17-10 / member))))))
       :time (c17-12 / festival
                     :name (c17-8 / name
                                  :op1 "New"
                                  :op2 "Year")
                     :ARG1-of (c17-14 / happy-02)))

# ::snt +5 shot, +10 injured, in Paris? Yes that matters. No, that's not about us. ~~ TheAtlantic RBerman USA WH
# ::tokens ["+5", "shot", ",", "+10", "injured", ",", "in", "Paris", "?", "Yes", "that", "matters", ".", "No", ",", "that", "'s", "not", "about", "us", ".", "~~", "TheAtlantic", "RBerman", "USA", "WH"]
# ::lemmas ["+5", "shoot", ",", "+10", "injure", ",", "in", "Paris", "?", "yes", "that", "matter", ".", "no", ",", "that", "be", "not", "about", "we", ".", "~~", "TheAtlantic", "RBerman", "USA", "WH"]
(c18-2 / multi-sentence
       :snt1 (c18-17 / and
                     :op1 (c18-13 / shoot-02
                                  :location (c18-9 / city
                                                   :name (c18-5 / name
                                                                :op1 "Paris"))
                                  :quant 5)
                     :op2 (c18-4 / injure-01
                                 :location c18-9
                                 :quant 10)
                     :polarity (c18-3 / amr-unknown))
       :snt2 (c18-7 / matter-01
                    :ARG1 (c18-16 / that)
                    :mod (c18-0 / yes))
       :snt3 (c18-8 / concern-02
                    :ARG0 (c18-12 / that)
                    :ARG1 (c18-1 / we)
                    :mod (c18-6 / no)
                    :polarity -)
       :snt4 (c18-10 / person
                     :name (c18-11 / name
                                   :op1 "The"
                                   :op2 "Atlantic"
                                   :op3 "RBerman")
                     :location (c18-14 / country
                                       :name (c18-15 / name
                                                     :op1 "USA"))))
