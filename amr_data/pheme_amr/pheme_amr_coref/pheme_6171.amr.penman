# ::snt Botched PR job by -that made matters worse, Brown was killed for no reason.
# ::tokens ["Botched", "PR", "job", "by", "-that", "made", "matters", "worse", ",", "Brown", "was", "killed", "for", "no", "reason", "."]
# ::lemmas ["Botched", "pr", "job", "by", "-that", "make", "matter", "bad", ",", "Brown", "be", "kill", "for", "no", "reason", "."]
(c1-9 / kill-01
      :ARG1 (c1-5 / person
                  :name (c1-4 / name
                              :op1 "Brown"))
      :ARG1-of (c1-7 / cause-01
                     :ARG0 (c1-6 / reason
                                 :polarity -)
                     :ARG1 c1-9)
      :ARG0 (c1-3 / botch-01
                  :ARG1 (c1-0 / job
                              :topic (c1-10 / public)
                              :ARG1-of (c1-1 / have-degree-91
                                             :ARG2 (c1-8 / bad-07
                                                         :ARG1 c1-0)
                                             :ARG3 (c1-2 / more)))))

# ::snt Lame pathetic excuse, cops are just trigger happy. I bet the cops are covering for him. Its Bullshit.
# ::tokens ["Lame", "pathetic", "excuse", ",", "cops", "are", "just", "trigger", "happy", ".", "I", "bet", "the", "cops", "are", "covering", "for", "him", ".", "Its", "Bullshit", "."]
# ::lemmas ["lame", "pathetic", "excuse", ",", "cop", "be", "just", "trigger", "happy", ".", "i", "bet", "the", "cop", "be", "cover", "for", "he", ".", "its", "Bullshit", "."]
(c2-3 / multi-sentence
      :snt1 (c2-5 / excuse-02
                  :ARG2 (c2-7 / pathetic)
                  :ARG1-of (c2-2 / lame-02))
      :snt2 (c2-0 / happy-01
                  :ARG0 (c2-13 / trigger)
                  :ARG1 (c2-9 / cop)
                  :mod (c2-1 / just))
      :snt3 (c2-4 / bet-01
                  :ARG0 (c2-6 / i)
                  :ARG2 (c2-8 / cover-03
                              :ARG0 (c2-12 / cop)
                              :ARG1 (c2-14 / he)))
      :snt4 (c2-10 / bullshit-01
                   :ARG1 (c2-11 / it)))

# ::snt maybe this explains why he attacked the officer. He thought he was going to get arrested.
# ::tokens ["maybe", "this", "explains", "why", "he", "attacked", "the", "officer", ".", "He", "thought", "he", "was", "going", "to", "get", "arrested", "."]
# ::lemmas ["maybe", "this", "explain", "why", "he", "attack", "the", "officer", ".", "he", "think", "he", "be", "go", "to", "get", "arrest", "."]
(c4-2 / multi-sentence
      :snt1 (c4-7 / possible-01
                  :ARG1 (c4-4 / explain-01
                              :ARG0 (c4-10 / this)
                              :ARG1 (c4-9 / thing
                                          :ARG0-of (c4-8 / cause-01
                                                         :ARG1 (c4-11 / attack-01
                                                                      :ARG0 (c4-0 / he)
                                                                      :ARG1 (c4-3 / officer))))))
      :snt2 (c4-6 / think-01
                  :ARG0 (c4-1 / he)
                  :ARG1 (c4-5 / arrest-01
                              :ARG1 c4-1)))

# ::snt that all smells at bullish...
# ::tokens ["that", "all", "smells", "at", "bullish", "..."]
# ::lemmas ["that", "all", "smell", "at", "bullish", "..."]
(c5-0 / smell-02
      :ARG1 (c5-1 / that
                  :mod (c5-2 / all))
      :ARG2 (c5-3 / bullish))

# ::snt Officer in shooting death of MIchael Brown was unaware he was a suspect: police
# ::tokens ["Officer", "in", "shooting", "death", "of", "MIchael", "Brown", "was", "unaware", "he", "was", "a", "suspect", ":", "police"]
# ::lemmas ["officer", "in", "shoot", "death", "of", "MIchael", "Brown", "be", "unaware", "he", "be", "a", "suspect", ":", "police"]
(c6-7 / realize-01
      :ARG0 (c6-6 / person
                  :ARG0-of (c6-0 / have-org-role-91
                                 :ARG2 (c6-3 / officer))
                  :ARG0-of (c6-8 / cause-01
                                 :ARG1 (c6-9 / die-01
                                             :ARG1 (c6-11 / person
                                                          :name (c6-5 / name
                                                                      :op1 "MIchael"
                                                                      :op2 "Brown"))
                                             :manner (c6-10 / shoot-02
                                                            :ARG0 c6-6
                                                            :ARG1 c6-11))))
      :ARG1 (c6-4 / suspect-01
                  :ARG1 c6-6)
      :ARG1-of (c6-1 / say-01
                     :ARG0 (c6-2 / police))
      :polarity -)

# ::snt :That's why they kept him under wraps: The subterfuge continues in !
# ::tokens [":", "That", "'s", "why", "they", "kept", "him", "under", "wraps", ":", "The", "subterfuge", "continues", "in", "!"]
# ::lemmas [":", "that", "be", "why", "they", "keep", "he", "under", "wrap", ":", "the", "subterfuge", "continue", "in", "!"]
(c7-2 / multi-sentence
      :snt1 (c7-6 / cause-01
                  :ARG0 (c7-9 / that)
                  :ARG1 (c7-4 / keep-04
                              :ARG0 (c7-7 / they)
                              :ARG1 (c7-0 / he)
                              :ARG2 (c7-3 / under
                                          :op1 (c7-1 / wraps))))
      :snt2 (c7-5 / continue-01
                  :ARG1 (c7-8 / subterfuge)))

# ::snt Dam that police chief looks like Carol O'conner
# ::tokens ["Dam", "that", "police", "chief", "looks", "like", "Carol", "O'conner"]
# ::lemmas ["dam", "that", "police", "chief", "look", "like", "Carol", "o'conner"]
(c8-1 / look-02
      :ARG0 (c8-4 / person
                  :ARG0-of (c8-0 / have-org-role-91
                                 :ARG1 (c8-7 / police)
                                 :ARG2 (c8-6 / chief)))
      :ARG1 (c8-2 / person
                  :name (c8-3 / name
                              :op1 "Carol"
                              :op2 "O'conner"))
      :mod (c8-5 / dam
                 :mode expressive))

# ::snt googl
# ::tokens ["googl"]
# ::lemmas ["googl"]
(c9-1 / go-03
      :ARG0 (c9-0 / you)
      :mode imperative)

# ::snt funny how unaware he has become all of a sudden...bet theres no one held2 account for this murder...where are the black panthers?
# ::tokens ["funny", "how", "unaware", "he", "has", "become", "all", "of", "a", "sudden", "...", "bet", "there", "s", "no", "one", "held2", "account", "for", "this", "murder", "...", "where", "are", "the", "black", "panthers", "?"]
# ::lemmas ["funny", "how", "unaware", "he", "have", "become", "all", "of", "a", "sudden", "...", "bet", "there", "s", "no", "one", "held2", "account", "for", "this", "murder", "...", "where", "be", "the", "black", "panther", "?"]
(c10-2 / multi-sentence
       :snt1 (c10-1 / funny
                    :domain (c10-11 / realize-01
                                    :ARG0 (c10-0 / he)
                                    :ARG1-of (c10-14 / sudden-02)
                                    :polarity -))
       :snt2 (c10-4 / bet-01
                    :ARG0 (c10-7 / i)
                    :ARG2 (c10-8 / no-one
                                 :ARG0-of (c10-16 / account-01
                                                  :ARG1 (c10-10 / murder-01
                                                                :mod (c10-15 / this)))))
       :snt3 (c10-12 / be-located-at-91
                     :ARG1 (c10-13 / person
                                   :ARG0-of (c10-3 / have-org-role-91
                                                   :ARG1 (c10-5 / organization
                                                                :name (c10-9 / name
                                                                             :op1 "Black"
                                                                             :op2 "Panther"))))
                     :ARG2 (c10-6 / amr-unknown)))

# ::snt What? He was unaware that Michael Brown was a suspect for stealing cigars? How does this make it any better?
# ::tokens ["What", "?", "He", "was", "unaware", "that", "Michael", "Brown", "was", "a", "suspect", "for", "stealing", "cigars", "?", "How", "does", "this", "make", "it", "any", "better", "?"]
# ::lemmas ["what", "?", "he", "be", "unaware", "that", "Michael", "Brown", "be", "a", "suspect", "for", "steal", "cigar", "?", "how", "do", "this", "make", "it", "any", "well", "?"]
(c11-3 / multi-sentence
       :snt1 (c11-15 / amr-unknown)
       :snt2 (c11-9 / realize-01
                    :ARG0 (c11-0 / he)
                    :ARG1 (c11-13 / suspect-01
                                  :ARG1 (c11-8 / person
                                               :name (c11-7 / name
                                                            :op1 "Michael"
                                                            :op2 "Brown"))
                                  :ARG2 (c11-4 / steal-01
                                               :ARG0 c11-8
                                               :ARG1 (c11-10 / cigar)))
                    :polarity -)
       :snt3 (c11-1 / worsen-01
                    :ARG0 (c11-14 / this)
                    :ARG1 (c11-6 / it)
                    :manner (c11-5 / amr-unknown)
                    :ARG1-of (c11-2 / have-degree-91
                                    :ARG2 (c11-11 / good-02
                                                  :ARG1 c11-6)
                                    :ARG3 (c11-12 / more))))

# ::snt and your point is?
# ::tokens ["and", "your", "point", "is", "?"]
# ::lemmas ["and", "your", "point", "be", "?"]
(c12-3 / and
       :op2 (c12-1 / point-04
                   :ARG0 (c12-0 / you)
                   :ARG1 (c12-2 / amr-unknown)))

# ::snt truth u. seals to home .. police judges prison guards
# ::tokens ["truth", "u.", "seals", "to", "home", "..", "police", "judges", "prison", "guards"]
# ::lemmas ["truth", "u.", "seal", "to", "home", "..", "police", "judge", "prison", "guard"]
(c13-3 / multi-sentence
       :snt1 (c13-10 / true-01
                     :ARG1 (c13-1 / you))
       :snt2 (c13-8 / seal-01
                    :ARG1 (c13-0 / home))
       :snt3 (c13-6 / person
                    :ARG0-of (c13-12 / have-org-role-91
                                     :ARG1 (c13-11 / police)
                                     :ARG2 (c13-4 / person
                                                  :ARG0-of (c13-2 / judge-01)
                                                  :ARG0-of (c13-5 / have-org-role-91
                                                                  :ARG1 (c13-9 / prison)
                                                                  :ARG2 (c13-7 / guard))))))

# ::snt Please, send these super cops to Iraq.&amp; Russia bring home our real soldiers!
# ::tokens ["Please", ",", "send", "these", "super", "cops", "to", "Iraq.&amp", ";", "Russia", "bring", "home", "our", "real", "soldiers", "!"]
# ::lemmas ["please", ",", "send", "these", "super", "cop", "to", "Iraq.&amp", ";", "Russia", "bring", "home", "our", "real", "soldier", "!"]
(c14-4 / multi-sentence
       :snt1 (c14-13 / send-01
                     :ARG0 (c14-1 / you)
                     :ARG1 (c14-10 / cop
                                   :mod (c14-6 / super)
                                   :mod (c14-14 / this))
                     :ARG2 (c14-9 / country
                                  :name (c14-7 / name
                                               :op1 "Iraq"))
                     :mode imperative
                     :polite +)
       :snt2 (c14-5 / bring-01
                    :ARG0 (c14-12 / country
                                  :name (c14-8 / name
                                               :op1 "Russia"))
                    :ARG1 (c14-3 / soldier
                                 :ARG1-of (c14-11 / real-04)
                                 :poss (c14-2 / we))
                    :ARG2 (c14-0 / home)))

# ::snt In the heat of the night, thought the same thing
# ::tokens ["In", "the", "heat", "of", "the", "night", ",", "thought", "the", "same", "thing"]
# ::lemmas ["in", "the", "heat", "of", "the", "night", ",", "think", "the", "same", "thing"]
(c15-4 / think-01
       :ARG1 (c15-2 / thing
                    :ARG1-of (c15-3 / same-01))
       :time (c15-0 / heat
                    :poss (c15-1 / night)))

# ::snt : Americans know "BULL" when they hear it!
# ::tokens [":", "Americans", "know", "\"", "BULL", "\"", "when", "they", "hear", "it", "!"]
# ::lemmas [":", "Americans", "know", "\"", "BULL", "\"", "when", "they", "hear", "it", "!"]
(c16-5 / know-01
       :ARG0 (c16-3 / person
                    :mod (c16-4 / country
                                :name (c16-2 / name
                                             :op1 "America")))
       :ARG1 (c16-1 / bullshit)
       :time (c16-0 / hear-01
                    :ARG0 c16-3
                    :ARG1 c16-1))
