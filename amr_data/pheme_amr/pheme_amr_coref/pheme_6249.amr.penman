# ::snt (Note: none of this justifies the shooting or killing, just answering the question.)
# ::tokens ["(", "Note", ":", "none", "of", "this", "justifies", "the", "shooting", "or", "killing", ",", "just", "answering", "the", "question", ".", ")"]
# ::lemmas ["(", "note", ":", "none", "of", "this", "justify", "the", "shooting", "or", "killing", ",", "just", "answer", "the", "question", ".", ")"]
(c1-5 / note-01
      :ARG1 (c1-7 / contrast-01
                  :ARG1 (c1-0 / justify-01
                              :ARG0 (c1-6 / none
                                          :ARG3-of (c1-3 / include-91
                                                         :ARG2 (c1-9 / this)))
                              :ARG1 (c1-1 / or
                                          :op1 (c1-8 / shoot-02)
                                          :op2 (c1-4 / kill-01)))
                  :ARG2 (c1-11 / answer-01
                               :ARG1 (c1-2 / question-01)
                               :mod (c1-10 / just))))

# ::snt Yes, alert for an unarmed kid with cigars. Doesn't really explain why a gun came into the situation, repeatedly.
# ::tokens ["Yes", ",", "alert", "for", "an", "unarmed", "kid", "with", "cigars", ".", "Does", "n't", "really", "explain", "why", "a", "gun", "came", "into", "the", "situation", ",", "repeatedly", "."]
# ::lemmas ["yes", ",", "alert", "for", "an", "unarmed", "kid", "with", "cigar", ".", "do", "not", "really", "explain", "why", "a", "gun", "come", "into", "the", "situation", ",", "repeatedly", "."]
(c2-2 / multi-sentence
      :snt1 (c2-14 / alert-01
                   :ARG1 (c2-12 / kid
                                :ARG1-of (c2-4 / arm-01
                                               :polarity -)
                                :ARG0-of (c2-0 / have-03
                                               :ARG1 (c2-7 / cigar)))
                   :mod (c2-1 / yes))
      :snt2 (c2-3 / explain-01
                  :ARG1 (c2-11 / thing
                               :ARG0-of (c2-6 / cause-01
                                              :ARG1 (c2-10 / come-01
                                                           :ARG1 (c2-8 / gun)
                                                           :ARG4 (c2-13 / situation)
                                                           :ARG1-of (c2-9 / repeat-01))))
                  :ARG1-of (c2-5 / real-04)
                  :polarity -))

# ::snt no it's not useless. It explains what had been put officers mind. May have been why he attempted to make contact
# ::tokens ["no", "it", "'s", "not", "useless", ".", "It", "explains", "what", "had", "been", "put", "officers", "mind", ".", "May", "have", "been", "why", "he", "attempted", "to", "make", "contact"]
# ::lemmas ["no", "it", "be", "not", "useless", ".", "it", "explain", "what", "have", "be", "put", "officer", "mind", ".", "may", "have", "be", "why", "he", "attempt", "to", "make", "contact"]
(c3-2 / multi-sentence
      :snt1 (c3-3 / useless
                  :domain (c3-6 / it)
                  :polarity -)
      :snt2 (c3-5 / explain-01
                  :ARG0 (c3-10 / it)
                  :ARG1 (c3-12 / thing
                               :ARG1-of (c3-11 / think-01
                                               :ARG0 (c3-7 / person
                                                           :ARG0-of (c3-0 / have-org-role-91
                                                                          :ARG2 (c3-4 / officer))))))
      :snt3 (c3-13 / possible-01
                   :ARG1 (c3-9 / cause-01
                               :ARG0 (c3-14 / attempt-01
                                            :ARG0 (c3-1 / he)
                                            :ARG1 (c3-8 / contact-01
                                                        :ARG0 c3-1))
                               :ARG1 c3-12)))

# ::snt the +40 lbs??
# ::tokens ["the", "+40", "lbs", "?", "?"]
# ::lemmas ["the", "+40", "lbs", "?", "?"]
(c4-1 / mass-quantity
      :polarity (c4-2 / amr-unknown)
      :unit (c4-0 / pound)
      :quant 40)

# ::snt where's the witness calling ?
# ::tokens ["where", "'s", "the", "witness", "calling", "?"]
# ::lemmas ["where", "be", "the", "witness", "call", "?"]
(c5-2 / call-02
      :ARG0 (c5-1 / person
                  :ARG0-of (c5-0 / witness-01))
      :location (c5-3 / amr-unknown))

# ::snt Are you saying he's not smart enough to discard/hide evidence... because he's black? Shame on you. /s
# ::tokens ["Are", "you", "saying", "he", "'s", "not", "smart", "enough", "to", "discard", "/", "hide", "evidence", "...", "because", "he", "'s", "black", "?", "Shame", "on", "you", ".", "/s"]
# ::lemmas ["be", "you", "say", "he", "be", "not", "smart", "enough", "to", "discard", "/", "hide", "evidence", "...", "because", "he", "be", "black", "?", "shame", "on", "you", ".", "/s"]
(c6-3 / multi-sentence
      :snt1 (c6-14 / say-01
                   :ARG0 (c6-1 / you)
                   :ARG1 (c6-0 / have-degree-91
                               :ARG1 (c6-16 / he)
                               :ARG2 (c6-7 / smart-06
                                           :ARG1 c6-16)
                               :ARG3 (c6-8 / enough)
                               :ARG6 (c6-2 / slash
                                           :op1 (c6-11 / discard-01
                                                       :ARG0 c6-16
                                                       :ARG1 (c6-4 / evidence-01))
                                           :op2 (c6-10 / hide-01
                                                       :ARG0 c6-16
                                                       :ARG1 c6-4))
                               :ARG1-of (c6-12 / cause-01
                                               :ARG0 (c6-5 / black-05
                                                           :ARG1 (c6-6 / he)))
                               :polarity -)
                   :polarity (c6-15 / amr-unknown))
      :snt2 (c6-9 / shame-01
                  :ARG1 (c6-13 / you)))

# ::snt red ball cap was in the street. Sandals probably came off. Check out the socks.
# ::tokens ["red", "ball", "cap", "was", "in", "the", "street", ".", "Sandals", "probably", "came", "off", ".", "Check", "out", "the", "socks", "."]
# ::lemmas ["red", "ball", "cap", "be", "in", "the", "street", ".", "sandal", "probably", "come", "off", ".", "check", "out", "the", "sock", "."]
(c7-2 / multi-sentence
      :snt1 (c7-7 / cap
                  :consist-of (c7-3 / ball)
                  :ARG1-of (c7-6 / red-02)
                  :location (c7-10 / street))
      :snt2 (c7-8 / come-off-33
                  :ARG1 (c7-4 / sandal)
                  :mod (c7-5 / probable))
      :snt3 (c7-9 / check-out-05
                  :ARG0 (c7-0 / you)
                  :ARG1 (c7-1 / sock)
                  :mode imperative))

# ::snt so you think it is him in the store? I can't tell so no opinion there. The Chief didn't say it was him either. So...
# ::tokens ["so", "you", "think", "it", "is", "him", "in", "the", "store", "?", "I", "ca", "n't", "tell", "so", "no", "opinion", "there", ".", "The", "Chief", "did", "n't", "say", "it", "was", "him", "either", ".", "So", "..."]
# ::lemmas ["so", "you", "think", "it", "be", "he", "in", "the", "store", "?", "i", "can", "not", "tell", "so", "no", "opinion", "there", ".", "the", "Chief", "do", "not", "say", "it", "be", "he", "either", ".", "so", "..."]
(c8-0 / multi-sentence
      :snt1 (c8-19 / think-01
                   :polarity (c8-7 / amr-unknown)
                   :ARG0 (c8-15 / you)
                   :ARG1 (c8-9 / be-located-at-91
                               :ARG1 (c8-8 / he)
                               :ARG2 (c8-4 / store))
                   :ARG1-of (c8-17 / cause-01
                                   :ARG0 (c8-2 / possible-01
                                               :ARG1 (c8-18 / tell-02
                                                            :ARG0 (c8-12 / i))
                                               :ARG0-of (c8-3 / cause-01
                                                              :ARG1 (c8-16 / opine-01
                                                                           :location c8-4
                                                                           :polarity -))
                                               :polarity -)))
      :snt2 (c8-10 / say-01
                   :ARG0 (c8-5 / person
                               :ARG0-of (c8-6 / have-org-role-91
                                              :ARG2 (c8-14 / chief)))
                   :ARG1 (c8-1 / he
                               :domain (c8-13 / it))
                   :mod (c8-11 / either)
                   :polarity -))

# ::snt I haven't been reading much of the news on this. Everyone has an agenda &amp; will believe whatever suits them
# ::tokens ["I", "have", "n't", "been", "reading", "much", "of", "the", "news", "on", "this", ".", "Everyone", "has", "an", "agenda", "&", "amp", ";", "will", "believe", "whatever", "suits", "them"]
# ::lemmas ["i", "have", "not", "be", "read", "much", "of", "the", "news", "on", "this", ".", "everyone", "have", "an", "agenda", "&", "amp", ";", "will", "believe", "whatever", "suit", "they"]
(c9-2 / multi-sentence
      :snt1 (c9-10 / read-01
                   :ARG0 (c9-6 / i)
                   :ARG1 (c9-7 / news
                               :topic (c9-13 / this)
                               :quant (c9-9 / much))
                   :polarity -)
      :snt2 (c9-14 / and
                   :op1 (c9-0 / have-03
                              :ARG0 (c9-4 / everyone)
                              :ARG1 (c9-5 / and
                                          :op1 (c9-8 / agenda)
                                          :op2 (c9-12 / amp)))
                   :op2 (c9-3 / believe-01
                              :ARG0 c9-4
                              :ARG1 (c9-1 / whatever
                                          :ARG1-of (c9-11 / suit-01
                                                          :ARG2 c9-4)))))

# ::snt go be bitchy somewhere else.
# ::tokens ["go", "be", "bitchy", "somewhere", "else", "."]
# ::lemmas ["go", "be", "bitchy", "somewhere", "else", "."]
(c10-3 / go-05
       :ARG0 (c10-0 / you)
       :ARG1 (c10-1 / bitch-01
                    :ARG0 c10-0)
       :location (c10-4 / somewhere
                        :mod (c10-2 / else))
       :mode imperative)

# ::snt oh absolutely. Not arguing that!
# ::tokens ["oh", "absolutely", ".", "Not", "arguing", "that", "!"]
# ::lemmas ["oh", "absolutely", ".", "not", "argue", "that", "!"]
(c11-0 / multi-sentence
       :snt1 (c11-4 / absolute
                    :mod (c11-1 / oh
                                :mode expressive))
       :snt2 (c11-2 / argue-01
                    :ARG1 (c11-3 / that)
                    :polarity -))

# ::snt /s means sarcasm genius. your misplaced anger and self righteousness needs to be put in check.
# ::tokens ["/s", "means", "sarcasm", "genius", ".", "your", "misplaced", "anger", "and", "self", "righteousness", "needs", "to", "be", "put", "in", "check", "."]
# ::lemmas ["/s", "mean", "sarcasm", "genius", ".", "your", "misplaced", "anger", "and", "self", "righteousness", "need", "to", "be", "put", "in", "check", "."]
(c12-2 / multi-sentence
       :snt1 (c12-6 / mean-01
                    :ARG1 (c12-10 / slash)
                    :ARG2 (c12-9 / genius
                                 :mod (c12-3 / sarcasm)))
       :snt2 (c12-5 / need-01
                    :ARG1 (c12-8 / check-07
                                 :ARG1 (c12-11 / and
                                               :op1 (c12-4 / anger-01
                                                           :ARG1 (c12-0 / you)
                                                           :ARG1-of (c12-1 / misplace-01
                                                                           :ARG0 c12-0))
                                               :op2 (c12-7 / righteousness
                                                           :poss c12-0)))))

# ::snt Shhh! Shut up, Lisa! You're cramping our style! Signed, Ferguson PD
# ::tokens ["Shhh", "!", "Shut", "up", ",", "Lisa", "!", "You", "'re", "cramping", "our", "style", "!", "Signed", ",", "Ferguson", "PD"]
# ::lemmas ["shhh", "!", "Shut", "up", ",", "Lisa", "!", "you", "be", "cramp", "our", "style", "!", "sign", ",", "Ferguson", "PD"]
(c13-3 / multi-sentence
       :snt1 (c13-11 / shut-up-06
                     :ARG0 (c13-8 / person
                                  :name (c13-6 / name
                                               :op1 "Lisa")
                                  :ARG1-of c13-11)
                     :mod (c13-5 / shhh
                                 :mode expressive)
                     :mode imperative)
       :snt2 (c13-9 / cramp-01
                    :ARG0 (c13-0 / you)
                    :ARG1 (c13-2 / style
                                 :poss (c13-1 / we)))
       :snt3 (c13-4 / sign-01
                    :ARG0 (c13-10 / government-organization
                                  :name (c13-7 / name
                                               :op1 "Ferguson"
                                               :op2 "PD"))))

# ::snt If is indeed the robber, wheres the red ball cap? Sandals? Stolen cigars?
# ::tokens ["If", "is", "indeed", "the", "robber", ",", "where", "s", "the", "red", "ball", "cap", "?", "Sandals", "?", "Stolen", "cigars", "?"]
# ::lemmas ["if", "be", "indeed", "the", "robber", ",", "where", "s", "the", "red", "ball", "cap", "?", "sandal", "?", "steal", "cigar", "?"]
(c14-0 / multi-sentence
       :snt1 (c14-7 / cap
                    :mod (c14-1 / ball)
                    :ARG1-of (c14-6 / red-02)
                    :condition (c14-5 / person
                                      :ARG0-of (c14-4 / rob-01)
                                      :mod (c14-3 / indeed)))
       :snt2 (c14-9 / sandal)
       :snt3 (c14-8 / cigar
                    :ARG1-of (c14-2 / steal-01))
       :polarity (c14-10 / amr-unknown))

# ::snt footage of mike brown there was no ambulance at all to get his body .
# ::tokens ["footage", "of", "mike", "brown", "there", "was", "no", "ambulance", "at", "all", "to", "get", "his", "body", "."]
# ::lemmas ["footage", "of", "mike", "brown", "there", "be", "no", "ambulance", "at", "all", "to", "get", "his", "body", "."]
(c15-6 / ambulance
       :ARG0-of (c15-5 / get-05
                       :ARG1 (c15-1 / body
                                    :poss (c15-4 / person
                                                 :name (c15-3 / name
                                                              :op1 "Mike"
                                                              :op2 "Brown"))))
       :domain (c15-0 / footage
                      :poss c15-4)
       :degree (c15-2 / at-all)
       :polarity -)

# ::snt . wear your best I Surveillance teeINTERNTNL WAVE AT SURVEILLANCE DAY tomorrow
# ::tokens [".", "wear", "your", "best", "I", "Surveillance", "teeINTERNTNL", "WAVE", "AT", "SURVEILLANCE", "DAY", "tomorrow"]
# ::lemmas [".", "wear", "your", "good", "i", "surveillance", "teeINTERNTNL", "wave", "at", "SURVEILLANCE", "DAY", "tomorrow"]
(c16-1 / wear-01
       :ARG0 (c16-2 / you)
       :ARG1 (c16-11 / thing
                     :ARG1-of (c16-0 / have-degree-91
                                     :ARG2 (c16-8 / good-03
                                                  :ARG1 c16-11)
                                     :ARG3 (c16-3 / most))
                     :ARG1-of (c16-6 / photograph-01
                                     :ARG0 (c16-4 / i)))
       :ARG2-of (c16-9 / thank-01
                       :ARG0 c16-4
                       :ARG1 c16-2)
       :time (c16-7 / day
                    :time-of (c16-10 / surveil-01)
                    :mod (c16-5 / tomorrow))
       :mode imperative)

# ::snt hmmm cigars are worth more than a human life. That sucks
# ::tokens ["hmmm", "cigars", "are", "worth", "more", "than", "a", "human", "life", ".", "That", "sucks"]
# ::lemmas ["hmmm", "cigar", "be", "worth", "more", "than", "a", "human", "life", ".", "that", "suck"]
(c17-3 / multi-sentence
       :snt1 (c17-1 / worth-01
                    :ARG1 (c17-5 / cigar)
                    :ARG2 (c17-4 / more-than
                                 :op1 (c17-2 / life
                                             :poss (c17-0 / human)))
                    :mod (c17-8 / hmm
                                :mode expressive))
       :snt2 (c17-6 / suck-03
                    :ARG0 (c17-7 / that)))

# ::snt bitch there ain't one gtfo RT : If is indeed the robber, wheres the red ball cap? Sandals? Stolen cigars?
# ::tokens ["bitch", "there", "ai", "n't", "one", "gtfo", "RT", ":", "If", "is", "indeed", "the", "robber", ",", "where", "s", "the", "red", "ball", "cap", "?", "Sandals", "?", "Stolen", "cigars", "?"]
# ::lemmas ["bitch", "there", "be", "not", "one", "gtfo", "rt", ":", "if", "be", "indeed", "the", "robber", ",", "where", "s", "the", "red", "ball", "cap", "?", "sandal", "?", "steal", "cigar", "?"]
(c18-12 / ask-01
        :ARG1 (c18-2 / and
                     :op1 (c18-8 / cap
                                 :mod (c18-0 / ball)
                                 :ARG1-of (c18-7 / red-02))
                     :op2 (c18-11 / sandal)
                     :op3 (c18-9 / cigar
                                 :ARG1-of (c18-1 / steal-01))
                     :condition (c18-6 / person
                                       :ARG0-of (c18-4 / rob-01)
                                       :mod (c18-3 / indeed)
                                       :domain (c18-5 / amr-unknown)))
        :ARG2 (c18-10 / bitch
                      :mode expressive))

# ::snt not justifying shooting. informing that Brown's lawyer is already fucking up the case. This lawyer let Zimmerman walk free.
# ::tokens ["not", "justifying", "shooting", ".", "informing", "that", "Brown", "'s", "lawyer", "is", "already", "fucking", "up", "the", "case", ".", "This", "lawyer", "let", "Zimmerman", "walk", "free", "."]
# ::lemmas ["not", "justify", "shoot", ".", "inform", "that", "Brown", "'s", "lawyer", "be", "already", "fuck", "up", "the", "case", ".", "this", "lawyer", "let", "Zimmerman", "walk", "free", "."]
(c19-4 / multi-sentence
       :snt1 (c19-0 / justify-01
                    :ARG1 (c19-13 / shoot-02)
                    :polarity -)
       :snt2 (c19-6 / inform-01
                    :ARG2 (c19-3 / fuck-up-02
                                 :ARG0 (c19-5 / lawyer
                                              :poss (c19-10 / person
                                                            :name (c19-8 / name
                                                                         :op1 "Brown")))
                                 :ARG1 (c19-11 / case-03)
                                 :time (c19-16 / already)))
       :snt3 (c19-12 / let-01
                     :ARG0 (c19-1 / lawyer
                                  :mod (c19-14 / this))
                     :ARG1 (c19-2 / walk-01
                                  :ARG0 (c19-15 / person
                                                :name (c19-9 / name
                                                             :op1 "Zimmerman"))
                                  :ARG1-of (c19-7 / free-04))))

# ::snt they showed it lying in the street on the news
# ::tokens ["they", "showed", "it", "lying", "in", "the", "street", "on", "the", "news"]
# ::lemmas ["they", "show", "it", "lie", "in", "the", "street", "on", "the", "news"]
(c20-4 / show-01
       :ARG0 (c20-5 / they)
       :ARG1 (c20-0 / lie-07
                    :ARG1 (c20-2 / it)
                    :ARG2 (c20-1 / street))
       :medium (c20-3 / news))

# ::snt The Penalty Shoplifting (Many Of Are Guilty Of It) Isn't Death. Stole More Money While I Was Typing
# ::tokens ["The", "Penalty", "Shoplifting", "(", "Many", "Of", "Are", "Guilty", "Of", "It", ")", "Is", "n't", "Death", ".", "Stole", "More", "Money", "While", "I", "Was", "Typing"]
# ::lemmas ["The", "Penalty", "Shoplifting", "(", "Many", "Of", "Are", "Guilty", "Of", "It", ")", "be", "not", "death", ".", "steal", "more", "money", "while", "i", "be", "type"]
(c21-1 / multi-sentence
       :snt1 (c21-5 / die-01
                    :domain (c21-9 / shoplift-01
                                   :ARG2-of (c21-4 / penalize-01)
                                   :ARG0-of (c21-7 / guilty-01
                                                   :ARG1 (c21-11 / person
                                                                 :quant (c21-6 / many))))
                    :polarity -)
       :snt2 (c21-0 / lose-02
                    :ARG1 (c21-2 / money
                                 :quant (c21-8 / more))
                    :time (c21-10 / Typ-01
                                  :ARG0 (c21-3 / i))))

# ::snt even if it was him that doesn't justify the killing. His life really valued less than that of a pack of swishers. One buck
# ::tokens ["even", "if", "it", "was", "him", "that", "does", "n't", "justify", "the", "killing", ".", "His", "life", "really", "valued", "less", "than", "that", "of", "a", "pack", "of", "swishers", ".", "One", "buck"]
# ::lemmas ["even", "if", "it", "be", "he", "that", "do", "not", "justify", "the", "killing", ".", "his", "life", "really", "value", "less", "than", "that", "of", "a", "pack", "of", "swisher", ".", "One", "buck"]
(c22-4 / multi-sentence
       :snt1 (c22-0 / have-concession-91
                    :ARG2 (c22-6 / even-if
                                 :op1 (c22-1 / justify-01
                                             :ARG0 (c22-16 / he)
                                             :ARG1 (c22-14 / kill-01)
                                             :polarity -)))
       :snt2 (c22-8 / value-01
                    :ARG1 (c22-3 / life
                                 :poss (c22-9 / he))
                    :ARG1-of (c22-10 / real-04)
                    :ARG1-of (c22-13 / have-quant-91
                                     :ARG3 (c22-12 / less)
                                     :ARG4 (c22-2 / life
                                                  :poss (c22-11 / pack
                                                                :consist-of (c22-15 / person
                                                                                    :ARG0-of (c22-7 / ishers-01))))))
       :snt3 (c22-5 / buck
                    :quant 1))

# ::snt I think so
# ::tokens ["I", "think", "so"]
# ::lemmas ["i", "think", "so"]
(c23-1 / think-01
       :ARG0 (c23-2 / i)
       :ARG1 (c23-0 / so))

# ::snt || If is indeed the robber, wheres the red ball cap? Sandals? Stolen cigars?
# ::tokens ["||", "If", "is", "indeed", "the", "robber", ",", "where", "s", "the", "red", "ball", "cap", "?", "Sandals", "?", "Stolen", "cigars", "?"]
# ::lemmas ["||", "if", "be", "indeed", "the", "robber", ",", "where", "s", "the", "red", "ball", "cap", "?", "sandal", "?", "steal", "cigar", "?"]
(c24-1 / multi-sentence
       :snt1 (c24-0 / have-condition-91
                    :ARG1 (c24-10 / amr-unknown
                                  :domain (c24-7 / cap
                                                 :mod (c24-2 / ball)
                                                 :ARG1-of (c24-6 / red-02)))
                    :ARG2 (c24-5 / rob-01
                                 :mod (c24-4 / indeed)))
       :snt2 (c24-9 / sandal)
       :snt3 (c24-8 / cigar
                    :ARG1-of (c24-3 / steal-01)))

# ::snt in the street where??? I'll wait
# ::tokens ["in", "the", "street", "where", "?", "?", "?", "I", "'ll", "wait"]
# ::lemmas ["in", "the", "street", "where", "?", "?", "?", "i", "'ll", "wait"]
(c25-1 / wait-01
       :ARG1 (c25-3 / i)
       :location (c25-0 / street
                        :location (c25-2 / amr-unknown)))

# ::snt . That's what I want to know Lisa.
# ::tokens [".", "That", "'s", "what", "I", "want", "to", "know", "Lisa", "."]
# ::lemmas [".", "that", "be", "what", "i", "want", "to", "know", "Lisa", "."]
(c26-5 / say-01
       :ARG1 (c26-0 / want-01
                    :ARG0 (c26-1 / i)
                    :ARG1 (c26-2 / know-02
                                 :ARG0 c26-1
                                 :ARG1 (c26-6 / that)))
       :ARG2 (c26-4 / person
                    :name (c26-3 / name
                                 :op1 "Lisa")))

# ::snt the PD are making this story up as they go along, but they have a few major problems: eye witnesses
# ::tokens ["the", "PD", "are", "making", "this", "story", "up", "as", "they", "go", "along", ",", "but", "they", "have", "a", "few", "major", "problems", ":", "eye", "witnesses"]
# ::lemmas ["the", "PD", "be", "make", "this", "story", "up", "as", "they", "go", "along", ",", "but", "they", "have", "a", "few", "major", "problem", ":", "eye", "witness"]
(c27-8 / contrast-01
       :ARG1 (c27-3 / make-up-10
                    :ARG0 (c27-9 / government-organization
                                 :name (c27-5 / name
                                              :op1 "PD"))
                    :ARG1 (c27-11 / story
                                  :mod (c27-12 / this))
                    :time (c27-7 / go-06
                                 :ARG0 c27-9
                                 :ARG2 (c27-14 / along)))
       :ARG2 (c27-0 / have-03
                    :ARG0 c27-9
                    :ARG1 (c27-6 / problem
                                 :ARG1-of (c27-10 / major-02)
                                 :quant (c27-2 / few)
                                 :example (c27-13 / person
                                                  :ARG0-of (c27-1 / witness-01
                                                                  :ARG1 (c27-4 / eye))))))

# ::snt are YOU saying officer was dumb enough approach robbery suspects by saying "get the fuck on the sidewalk"?
# ::tokens ["are", "YOU", "saying", "officer", "was", "dumb", "enough", "approach", "robbery", "suspects", "by", "saying", "\"", "get", "the", "fuck", "on", "the", "sidewalk", "\"", "?"]
# ::lemmas ["be", "you", "say", "officer", "be", "dumb", "enough", "approach", "robbery", "suspect", "by", "say", "\"", "get", "the", "fuck", "on", "the", "sidewalk", "\"", "?"]
(c28-13 / say-01
        :ARG0 (c28-1 / you)
        :ARG1 (c28-0 / have-degree-91
                     :ARG1 (c28-4 / officer)
                     :ARG2 (c28-10 / dumb)
                     :ARG3 (c28-6 / enough)
                     :ARG6 (c28-14 / approach-02
                                   :ARG0 c28-4
                                   :ARG1 (c28-9 / person
                                                :ARG2-of (c28-7 / suspect-01
                                                                :ARG1 (c28-11 / rob-01)))
                                   :manner (c28-2 / say-01
                                                  :ARG0 c28-4
                                                  :ARG1 (c28-12 / get-05
                                                                :ARG0 c28-9
                                                                :ARG2 (c28-5 / sidewalk)
                                                                :mod (c28-3 / fuck
                                                                            :mode expressive)
                                                                :mode imperative))))
        :polarity (c28-8 / amr-unknown))

# ::snt I'm just glad to see the improvements since the State Troopers took over. Things were bad on both sides
# ::tokens ["I", "'m", "just", "glad", "to", "see", "the", "improvements", "since", "the", "State", "Troopers", "took", "over", ".", "Things", "were", "bad", "on", "both", "sides"]
# ::lemmas ["i", "be", "just", "glad", "to", "see", "the", "improvement", "since", "the", "State", "Troopers", "take", "over", ".", "thing", "be", "bad", "on", "both", "side"]
(c29-2 / multi-sentence
       :snt1 (c29-10 / glad-02
                     :ARG0 (c29-12 / see-01
                                   :ARG0 (c29-6 / i)
                                   :ARG1 (c29-9 / improve-01)
                                   :time (c29-5 / since
                                                :op1 (c29-13 / take-over-12
                                                             :ARG0 (c29-11 / troop
                                                                           :mod (c29-1 / state)))))
                     :ARG1 c29-6
                     :mod (c29-0 / just))
       :snt2 (c29-3 / bad-07
                    :ARG1 (c29-7 / thing)
                    :ARG2 (c29-4 / side
                                 :mod (c29-8 / both))))

# ::snt He's clearing wearing the sandals in the photos circulating of him in the pavement. It's him.
# ::tokens ["He", "'s", "clearing", "wearing", "the", "sandals", "in", "the", "photos", "circulating", "of", "him", "in", "the", "pavement", ".", "It", "'s", "him", "."]
# ::lemmas ["he", "be", "clear", "wear", "the", "sandal", "in", "the", "photo", "circulate", "of", "he", "in", "the", "pavement", ".", "it", "be", "he", "."]
(c30-2 / multi-sentence
       :snt1 (c30-7 / clear-08
                    :ARG0 (c30-0 / he)
                    :ARG1 (c30-1 / wear-01
                                 :ARG0 c30-0
                                 :ARG1 (c30-8 / sandal)
                                 :location (c30-5 / photo
                                                  :ARG1-of (c30-6 / circulate-01
                                                                  :ARG2 (c30-10 / he)
                                                                  :location (c30-9 / pavement)))))
       :snt2 (c30-4 / he
                    :domain (c30-3 / it)))

# ::snt Lawyer says that Brown's friend confirms that he did take the cigarillos (via. MSNBC)
# ::tokens ["Lawyer", "says", "that", "Brown", "'s", "friend", "confirms", "that", "he", "did", "take", "the", "cigarillos", "(", "via", ".", "MSNBC", ")"]
# ::lemmas ["Lawyer", "say", "that", "Brown", "'s", "friend", "confirm", "that", "he", "do", "take", "the", "cigarillo", "(", "via", ".", "MSNBC", ")"]
(c31-9 / say-01
       :ARG0 (c31-6 / person
                    :ARG0-of (c31-0 / have-rel-role-91
                                    :ARG2 (c31-1 / lawyer)))
       :ARG1 (c31-8 / confirm-01
                    :ARG0 (c31-12 / person
                                  :ARG0-of (c31-13 / have-rel-role-91
                                                   :ARG1 (c31-3 / person
                                                                :name (c31-4 / name
                                                                             :op1 "Brown"))
                                                   :ARG2 (c31-2 / friend)))
                    :ARG1 (c31-11 / take-01
                                  :ARG0 c31-12
                                  :ARG1 (c31-7 / cigarillos))
                    :source (c31-10 / publication
                                    :name (c31-5 / name
                                                 :op1 "MSNBC"))))

# ::snt so his lame attempt at sarcasm was still racist. Too dumb because he's black? Go be goofy elsewhere.
# ::tokens ["so", "his", "lame", "attempt", "at", "sarcasm", "was", "still", "racist", ".", "Too", "dumb", "because", "he", "'s", "black", "?", "Go", "be", "goofy", "elsewhere", "."]
# ::lemmas ["so", "his", "lame", "attempt", "at", "sarcasm", "be", "still", "racist", ".", "too", "dumb", "because", "he", "be", "black", "?", "go", "be", "goofy", "elsewhere", "."]
(c32-3 / multi-sentence
       :snt1 (c32-9 / racist
                    :domain (c32-16 / attempt-01
                                    :ARG0 (c32-0 / he)
                                    :ARG1 (c32-14 / sarcasm)
                                    :mod (c32-2 / lame))
                    :mod (c32-6 / still))
       :snt2 (c32-10 / cause-01
                     :ARG0 (c32-5 / black-05
                                  :ARG1 (c32-4 / he))
                     :ARG1 (c32-8 / have-degree-91
                                  :ARG1 c32-4
                                  :ARG2 (c32-11 / dumb)
                                  :ARG3 (c32-15 / too)))
       :snt3 (c32-12 / go-05
                     :ARG0 (c32-1 / you)
                     :ARG1 (c32-13 / goofy
                                   :domain c32-1)
                     :location (c32-7 / elsewhere)
                     :mode imperative))

# ::snt yes those would be the facts I am talking about... Or a vid of what happened from all the witness's that saw it.
# ::tokens ["yes", "those", "would", "be", "the", "facts", "I", "am", "talking", "about", "...", "Or", "a", "vid", "of", "what", "happened", "from", "all", "the", "witness", "'s", "that", "saw", "it", "."]
# ::lemmas ["yes", "those", "would", "be", "the", "fact", "i", "be", "talk", "about", "...", "or", "a", "vid", "of", "what", "happen", "from", "all", "the", "witness", "'s", "that", "see", "it", "."]
(c33-2 / multi-sentence
       :snt1 (c33-1 / fact
                    :ARG1-of (c33-11 / talk-01
                                     :ARG0 (c33-5 / i))
                    :domain (c33-9 / that))
       :snt2 (c33-3 / or
                    :op2 (c33-6 / video
                                :topic (c33-4 / event)
                                :source (c33-7 / person
                                               :ARG0-of (c33-0 / witness-01)
                                               :mod (c33-12 / all)
                                               :ARG0-of (c33-10 / see-01
                                                                :ARG1 (c33-8 / it))))))

# ::snt what am I missing. What statement came out today
# ::tokens ["what", "am", "I", "missing", ".", "What", "statement", "came", "out", "today"]
# ::lemmas ["what", "be", "i", "miss", ".", "what", "statement", "come", "out", "today"]
(c34-0 / multi-sentence
       :snt1 (c34-3 / miss-01
                    :ARG0 (c34-2 / i)
                    :ARG1 (c34-6 / amr-unknown))
       :snt2 (c34-4 / come-out-09
                    :ARG1 (c34-1 / amr-unknown)
                    :time (c34-5 / today)))

# ::snt he wasn't a kid... None really knew if he was armed or not until they took him away. Besides all I am saying is
# ::tokens ["he", "was", "n't", "a", "kid", "...", "None", "really", "knew", "if", "he", "was", "armed", "or", "not", "until", "they", "took", "him", "away", ".", "Besides", "all", "I", "am", "saying", "is"]
# ::lemmas ["he", "be", "not", "a", "kid", "...", "none", "really", "know", "if", "he", "be", "armed", "or", "not", "until", "they", "take", "he", "away", ".", "besides", "all", "i", "be", "say", "be"]
(c35-2 / multi-sentence
       :snt1 (c35-14 / kid
                     :domain (c35-0 / he)
                     :polarity -)
       :snt2 (c35-6 / know-01
                    :ARG0 (c35-9 / none)
                    :ARG1 (c35-5 / or
                                 :op1 (c35-16 / arm-01
                                              :ARG1 (c35-1 / he))
                                 :op2 (c35-7 / arm-01
                                             :ARG1 c35-1
                                             :polarity -))
                    :ARG1-of (c35-11 / real-04)
                    :time (c35-3 / until
                                 :op1 (c35-13 / take-away-05
                                              :ARG0 (c35-12 / they)
                                              :ARG1 c35-1)))
       :snt3 (c35-15 / say-01
                     :ARG0 (c35-8 / i)
                     :ARG1 (c35-10 / all)
                     :mod (c35-4 / besides)))

# ::snt Thank u. Now, cops have given themselves time to build a story! Teen w/hands up SHOT?!!
# ::tokens ["Thank", "u.", "Now", ",", "cops", "have", "given", "themselves", "time", "to", "build", "a", "story", "!", "Teen", "w", "/", "hands", "up", "SHOT", "?", "!", "!"]
# ::lemmas ["thank", "u.", "now", ",", "cop", "have", "give", "themselves", "time", "to", "build", "a", "story", "!", "Teen", "w", "/", "hand", "up", "shot", "?", "!", "!"]
(c36-2 / multi-sentence
       :snt1 (c36-14 / thank-01
                     :ARG0 (c36-5 / i)
                     :ARG1 (c36-1 / you))
       :snt2 (c36-10 / give-01
                     :ARG0 (c36-9 / cop)
                     :ARG1 (c36-11 / time
                                   :purpose (c36-3 / build-01
                                                   :ARG0 c36-9
                                                   :ARG1 (c36-12 / story)))
                     :ARG2 c36-9
                     :time (c36-6 / now))
       :snt3 (c36-4 / shit-01
                    :ARG0 (c36-8 / person
                                 :mod (c36-7 / teenage)
                                 :ARG0-of (c36-0 / have-03
                                                 :ARG1 (c36-15 / hand-up-04
                                                               :ARG0 c36-8)))
                    :polarity (c36-13 / amr-unknown)))

# ::snt where's the vid proof any of this went down either way?Looks like there are a lot of people out when it happened. No vid?
# ::tokens ["where", "'s", "the", "vid", "proof", "any", "of", "this", "went", "down", "either", "way?Looks", "like", "there", "are", "a", "lot", "of", "people", "out", "when", "it", "happened", ".", "No", "vid", "?"]
# ::lemmas ["where", "be", "the", "vid", "proof", "any", "of", "this", "go", "down", "either", "way?look", "like", "there", "be", "a", "lot", "of", "people", "out", "when", "it", "happen", ".", "no", "vid", "?"]
(c37-2 / multi-sentence
       :snt1 (c37-9 / prove-01
                    :ARG0 (c37-8 / video)
                    :ARG1 (c37-10 / go-down-27
                                  :ARG1 (c37-12 / this
                                                :mod (c37-14 / any))
                                  :mod (c37-0 / way
                                              :mod (c37-5 / either)))
                    :location (c37-6 / amr-unknown))
       :snt2 (c37-1 / look-02
                    :ARG1 (c37-13 / person
                                  :quant (c37-11 / lot)
                                  :ARG1-of (c37-3 / out-06)
                                  :time (c37-7 / it)))
       :snt3 (c37-4 / video
                    :polarity c37-6
                    :polarity -))

# ::snt You didn't get any facts or proof as all this would prove is that he stole cigars. Has no relation on the death.
# ::tokens ["You", "did", "n't", "get", "any", "facts", "or", "proof", "as", "all", "this", "would", "prove", "is", "that", "he", "stole", "cigars", ".", "Has", "no", "relation", "on", "the", "death", "."]
# ::lemmas ["you", "do", "not", "get", "any", "fact", "or", "proof", "as", "all", "this", "would", "prove", "be", "that", "he", "steal", "cigar", ".", "have", "no", "relation", "on", "the", "death", "."]
(c38-3 / multi-sentence
       :snt1 (c38-9 / get-01
                    :ARG0 (c38-1 / you)
                    :ARG1 (c38-5 / or
                                 :op1 (c38-2 / fact)
                                 :op2 (c38-6 / prove-01
                                             :ARG1 (c38-12 / steal-01
                                                           :ARG0 (c38-0 / he)
                                                           :ARG1 (c38-8 / cigar))))
                    :ARG1-of (c38-7 / cause-01
                                    :ARG0 (c38-14 / prove-01
                                                  :ARG0 (c38-13 / this
                                                                :mod (c38-15 / all))
                                                  :ARG1 c38-12))
                    :polarity -)
       :snt2 (c38-10 / relate-01
                     :ARG1 (c38-4 / he)
                     :time (c38-11 / die-01)
                     :polarity -))

# ::snt no he was being racist. Not sarcastic and get over yourself. Your handle was in the pre-existing convo. Bye
# ::tokens ["no", "he", "was", "being", "racist", ".", "Not", "sarcastic", "and", "get", "over", "yourself", ".", "Your", "handle", "was", "in", "the", "pre", "-", "existing", "convo", ".", "Bye"]
# ::lemmas ["no", "he", "be", "be", "racist", ".", "not", "sarcastic", "and", "get", "over", "yourself", ".", "your", "handle", "be", "in", "the", "pre", "-", "exist", "convo", ".", "bye"]
(c39-3 / multi-sentence
       :snt1 (c39-7 / racist
                    :domain (c39-0 / he))
       :snt2 (c39-12 / and
                     :op1 (c39-11 / sarcastic
                                  :domain (c39-1 / you)
                                  :polarity -)
                     :op2 (c39-5 / over-02
                                 :ARG1 c39-1
                                 :polarity -))
       :snt3 (c39-4 / be-located-at-91
                    :ARG1 (c39-2 / handle-01
                                 :ARG0 (c39-10 / you))
                    :ARG2 (c39-8 / converse-01
                                 :ARG0 c39-10
                                 :ARG1-of (c39-6 / preexist-01)))
       :snt4 (c39-9 / bye))

# ::snt he was being sarcastic. chill and leave me out of this please.
# ::tokens ["he", "was", "being", "sarcastic", ".", "chill", "and", "leave", "me", "out", "of", "this", "please", "."]
# ::lemmas ["he", "be", "be", "sarcastic", ".", "chill", "and", "leave", "i", "out", "of", "this", "please", "."]
(c40-3 / multi-sentence
       :snt1 (c40-7 / sarcasm
                    :domain (c40-0 / he))
       :snt2 (c40-9 / and
                    :op1 (c40-6 / chill-01
                                :ARG0 (c40-1 / you)
                                :mode imperative
                                :polite +)
                    :op2 (c40-2 / leave-14
                                :ARG0 c40-1
                                :ARG1 (c40-5 / i)
                                :ARG2 (c40-4 / out-06
                                             :ARG1 c40-5
                                             :ARG2 (c40-8 / this))
                                :mode imperative
                                :polite +)))

# ::snt and the loss of at least pounds in less than minutes
# ::tokens ["and", "the", "loss", "of", "at", "least", "pounds", "in", "less", "than", "minutes"]
# ::lemmas ["and", "the", "loss", "of", "at", "least", "pounds", "in", "less", "than", "minutes"]
(c41-8 / and
       :op2 (c41-0 / lose-02
                   :ARG1 (c41-2 / at-least
                                :op1 (c41-1 / mass-quantity
                                            :unit (c41-4 / pound)
                                            :quant 1))
                   :time (c41-3 / after
                                :quant (c41-6 / less-than
                                              :op1 (c41-7 / temporal-quantity
                                                          :unit (c41-5 / minute)
                                                          :quant 1)))))

# ::snt no it doesn't
# ::tokens ["no", "it", "does", "n't"]
# ::lemmas ["no", "it", "do", "not"]
(c42-0 / do-02
       :ARG0 (c42-1 / it)
       :polarity -)

# ::snt with Brown in the first place. "May have" with everything reg this it's all assumption. What happens when u assume
# ::tokens ["with", "Brown", "in", "the", "first", "place", ".", "\"", "May", "have", "\"", "with", "everything", "reg", "this", "it", "'s", "all", "assumption", ".", "What", "happens", "when", "u", "assume"]
# ::lemmas ["with", "Brown", "in", "the", "first", "place", ".", "\"", "may", "have", "\"", "with", "everything", "reg", "this", "it", "be", "all", "assumption", ".", "what", "happen", "when", "u", "assume"]
(c43-2 / multi-sentence
       :snt1 (c43-0 / have-condition-91
                    :ARG2 (c43-9 / person
                                 :name (c43-7 / name
                                              :op1 "Brown"))
                    :mod (c43-6 / in-the-first-place))
       :snt2 (c43-12 / possible-01
                     :ARG1 (c43-13 / assume-02
                                   :ARG1 (c43-4 / everything
                                                :topic (c43-11 / this))
                                   :mod (c43-5 / all)))
       :snt3 (c43-3 / event
                    :condition (c43-8 / assume-02
                                      :ARG0 (c43-1 / you))
                    :mod (c43-10 / amr-unknown)))

# ::snt does that really have anything to do with it???They didn't say it was him. The officers were on a heighten alert though
# ::tokens ["does", "that", "really", "have", "anything", "to", "do", "with", "it???They", "did", "n't", "say", "it", "was", "him", ".", "The", "officers", "were", "on", "a", "heighten", "alert", "though"]
# ::lemmas ["do", "that", "really", "have", "anything", "to", "do", "with", "it???They", "do", "not", "say", "it", "be", "he", ".", "the", "officer", "be", "on", "a", "heighten", "alert", "though"]
(c44-2 / multi-sentence
       :snt1 (c44-0 / have-to-do-with-04
                    :polarity (c44-15 / amr-unknown)
                    :ARG0 (c44-14 / that)
                    :ARG1 (c44-7 / it)
                    :ARG2 (c44-6 / anything)
                    :ARG1-of (c44-10 / real-04))
       :snt2 (c44-13 / say-01
                     :ARG0 (c44-12 / they)
                     :ARG1 (c44-1 / he)
                     :polarity -)
       :snt3 (c44-8 / alert-01
                    :ARG1 (c44-9 / person
                                 :ARG0-of (c44-11 / have-org-role-91
                                                  :ARG2 (c44-5 / officer)))
                    :ARG2 (c44-4 / heighten-01)
                    :ARG1-of (c44-3 / have-concession-91)))

# ::snt they panicked because of the witnesses so they forgot to plant the evidence or couldn't plant it.
# ::tokens ["they", "panicked", "because", "of", "the", "witnesses", "so", "they", "forgot", "to", "plant", "the", "evidence", "or", "could", "n't", "plant", "it", "."]
# ::lemmas ["they", "panic", "because", "of", "the", "witness", "so", "they", "forget", "to", "plant", "the", "evidence", "or", "could", "not", "plant", "it", "."]
(c45-7 / cause-01
       :ARG0 (c45-6 / person
                    :ARG0-of (c45-0 / witness-01))
       :ARG1 (c45-10 / panic-01
                     :ARG1 (c45-9 / they))
       :ARG0 c45-7
       :ARG1 (c45-3 / or
                    :op1 (c45-1 / forget-01
                                :ARG0 c45-9
                                :ARG1 (c45-2 / plant-01
                                             :ARG0 c45-9
                                             :ARG1 (c45-5 / evidence-01)))
                    :op2 (c45-8 / possible-01
                                :ARG1 (c45-4 / plant-01
                                             :ARG0 c45-9
                                             :ARG1 c45-5)
                                :polarity -)))

# ::snt ...and "if", then why hasn't Dorian been arrested?
# ::tokens ["...", "and", "\"", "if", "\"", ",", "then", "why", "has", "n't", "Dorian", "been", "arrested", "?"]
# ::lemmas ["...", "and", "\"", "if", "\"", ",", "then", "why", "have", "not", "Dorian", "be", "arrest", "?"]
(c46-5 / and
       :op2 (c46-0 / arrest-01
                   :ARG1 (c46-3 / person
                                :name (c46-1 / name
                                             :op1 "Dorian"))
                   :ARG1-of (c46-4 / cause-01
                                   :ARG0 (c46-2 / amr-unknown
                                                :condition-of c46-0))
                   :polarity -))

# ::snt you didn't answer so I will take that as acknowledgment that their version doesn't make sense to you either
# ::tokens ["you", "did", "n't", "answer", "so", "I", "will", "take", "that", "as", "acknowledgment", "that", "their", "version", "does", "n't", "make", "sense", "to", "you", "either"]
# ::lemmas ["you", "do", "not", "answer", "so", "i", "will", "take", "that", "as", "acknowledgment", "that", "their", "version", "do", "not", "make", "sense", "to", "you", "either"]
(c47-9 / answer-01
       :ARG0 (c47-0 / you)
       :ARG0-of (c47-5 / cause-01
                       :ARG1 (c47-8 / take-04
                                    :ARG0 (c47-3 / i)
                                    :ARG1 c47-9
                                    :ARG2 (c47-2 / acknowledge-01
                                                 :ARG0 c47-3
                                                 :ARG1 (c47-7 / sense-02
                                                              :ARG1 (c47-4 / version
                                                                           :poss (c47-6 / they))
                                                              :ARG2 c47-0
                                                              :mod (c47-1 / either)
                                                              :polarity -))))
       :polarity -)

# ::snt you might wanna report and block her cuz she is on the self righteous everyone is racist war path.
# ::tokens ["you", "might", "wanna", "report", "and", "block", "her", "cuz", "she", "is", "on", "the", "self", "righteous", "everyone", "is", "racist", "war", "path", "."]
# ::lemmas ["you", "might", "wanna", "report", "and", "block", "she", "cuz", "she", "be", "on", "the", "self", "righteous", "everyone", "be", "racist", "war", "path", "."]
(c48-5 / possible-01
       :ARG1 (c48-0 / want-01
                    :ARG0 (c48-1 / you)
                    :ARG1 (c48-11 / and
                                  :op1 (c48-6 / report-01
                                              :ARG0 c48-1)
                                  :op2 (c48-2 / block-01
                                              :ARG0 c48-1
                                              :ARG1 (c48-9 / she)))
                    :ARG1-of (c48-7 / cause-01
                                    :ARG0 (c48-8 / be-located-at-91
                                                 :ARG1 c48-9
                                                 :ARG2 (c48-10 / path
                                                               :mod (c48-3 / war-01)
                                                               :mod (c48-4 / racist))))))

# ::snt your lack of english comprehension is unsettling. as is your unwarranted aggression and eagerness to label "racists"
# ::tokens ["your", "lack", "of", "english", "comprehension", "is", "unsettling", ".", "as", "is", "your", "unwarranted", "aggression", "and", "eagerness", "to", "label", "\"", "racists", "\""]
# ::lemmas ["your", "lack", "of", "english", "comprehension", "be", "unsettling", ".", "as", "be", "your", "unwarranted", "aggression", "and", "eagerness", "to", "label", "\"", "racist", "\""]
(c49-12 / and
        :op1 (c49-4 / unsettle-01
                    :ARG0 (c49-3 / lack-01
                                 :ARG0 (c49-1 / you)
                                 :ARG1 (c49-10 / comprehend-01
                                               :ARG0 c49-1
                                               :ARG1 (c49-11 / language
                                                             :name (c49-7 / name
                                                                          :op1 "English")))))
        :op2 (c49-6 / and
                    :op1 (c49-8 / aggression
                                :ARG1-of (c49-2 / warrant-01
                                                :polarity -)
                                :poss c49-1)
                    :op2 (c49-5 / eager-01
                                :ARG0 c49-1
                                :ARG1 (c49-0 / label-01
                                             :ARG0 c49-1
                                             :ARG1 c49-1
                                             :ARG2 (c49-9 / racist)))))

# ::snt noted.
# ::tokens ["noted", "."]
# ::lemmas ["note", "."]
(c50-0 / note-01)
