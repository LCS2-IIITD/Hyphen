# ::snt : Canadians praying for a fast and peaceful outcome =^.^=
# ::tokens [":", "Canadians", "praying", "for", "a", "fast", "and", "peaceful", "outcome", "=", "^.^="]
# ::lemmas [":", "Canadians", "pray", "for", "a", "fast", "and", "peaceful", "outcome", "=", "^.^="]
(c1-4 / pray-01
      :ARG0 (c1-6 / person
                  :mod (c1-5 / country
                             :name (c1-3 / name
                                         :op1 "Canada")))
      :ARG1 (c1-2 / outcome
                  :ARG1-of (c1-0 / fast-02)
                  :mod (c1-1 / peaceful)))

# ::snt Thank you x
# ::tokens ["Thank", "you", "x"]
# ::lemmas ["thank", "you", "x"]
(c2-1 / thank-01
      :ARG0 (c2-2 / i)
      :ARG1 (c2-0 / you))

# ::snt Thanks
# ::tokens ["Thanks"]
# ::lemmas ["thank"]
(c3-1 / thank-01
      :ARG0 (c3-2 / i)
      :ARG1 (c3-0 / you))

# ::snt yw
# ::tokens ["yw"]
# ::lemmas ["yw"]
(c4-0 / yw)

# ::snt yw
# ::tokens ["yw"]
# ::lemmas ["yw"]
(c5-0 / yw)

# ::snt yw
# ::tokens ["yw"]
# ::lemmas ["yw"]
(c6-0 / yw)

# ::snt yw
# ::tokens ["yw"]
# ::lemmas ["yw"]
(c7-0 / yw)

# ::snt Thank you
# ::tokens ["Thank", "you"]
# ::lemmas ["thank", "you"]
(c8-1 / thank-01
      :ARG0 (c8-2 / i)
      :ARG1 (c8-0 / you))

# ::snt : Canadians praying for a fast and peaceful outcome
# ::tokens [":", "Canadians", "praying", "for", "a", "fast", "and", "peaceful", "outcome"]
# ::lemmas [":", "Canadians", "pray", "for", "a", "fast", "and", "peaceful", "outcome"]
(c9-4 / pray-01
      :ARG0 (c9-6 / person
                  :mod (c9-5 / country
                             :name (c9-3 / name
                                         :op1 "Canada")))
      :ARG1 (c9-2 / outcome
                  :ARG1-of (c9-0 / fast-02)
                  :mod (c9-1 / peaceful)))

# ::snt thank you.
# ::tokens ["thank", "you", "."]
# ::lemmas ["thank", "you", "."]
(c10-1 / thank-01
       :ARG1 (c10-0 / you))

# ::snt &lt;3
# ::tokens ["&", "lt;3"]
# ::lemmas ["&", "lt;3"]
(c11-0 / and
       :op2 3)

# ::snt Thank you Canada
# ::tokens ["Thank", "you", "Canada"]
# ::lemmas ["thank", "you", "Canada"]
(c12-3 / say-01
       :ARG1 (c12-4 / thank-01
                    :ARG0 (c12-0 / i)
                    :ARG1 (c12-2 / country
                                 :name (c12-1 / name
                                              :op1 "Canada")
                                 :ARG2-of c12-3)))

# ::snt cheers.
# ::tokens ["cheers", "."]
# ::lemmas ["cheer", "."]
(c13-0 / cheer-02)

# ::snt And dead terrorists. : Canadians praying for a fast and peaceful outcome
# ::tokens ["And", "dead", "terrorists", ".", ":", "Canadians", "praying", "for", "a", "fast", "and", "peaceful", "outcome"]
# ::lemmas ["and", "dead", "terrorist", ".", ":", "Canadians", "pray", "for", "a", "fast", "and", "peaceful", "outcome"]
(c14-1 / multi-sentence
       :snt1 (c14-10 / and
                     :op2 (c14-8 / terrorist
                                 :ARG1-of (c14-6 / die-01)))
       :snt2 (c14-5 / pray-01
                    :ARG0 (c14-9 / person
                                 :mod (c14-7 / country
                                             :name (c14-4 / name
                                                          :op1 "Canada")))
                    :ARG1 (c14-3 / outcome
                                 :ARG1-of (c14-0 / fast-02)
                                 :mod (c14-2 / peaceful))))

# ::snt yw
# ::tokens ["yw"]
# ::lemmas ["yw"]
(c15-0 / yw)

# ::snt Thankyou. But were not affraid of this loser ot losers. Take care
# ::tokens ["Thankyou", ".", "But", "were", "not", "affraid", "of", "this", "loser", "ot", "losers", ".", "Take", "care"]
# ::lemmas ["Thankyou", ".", "but", "be", "not", "affraid", "of", "this", "loser", "ot", "loser", ".", "take", "care"]
(c16-2 / multi-sentence
       :snt1 (c16-13 / thank-01
                     :ARG0 (c16-5 / i)
                     :ARG1 (c16-0 / you))
       :snt2 (c16-9 / contrast-01
                    :ARG2 (c16-1 / fear-01
                                 :ARG0 (c16-10 / i)
                                 :ARG1 (c16-4 / or
                                              :op1 (c16-7 / person
                                                          :ARG0-of (c16-3 / lose-03)
                                                          :mod (c16-12 / this))
                                              :op2 (c16-14 / person
                                                           :ARG0-of (c16-8 / lose-03)))
                                 :polarity -))
       :snt3 (c16-6 / take-01
                    :ARG0 (c16-15 / you)
                    :ARG1 (c16-11 / care-03)))

# ::snt yw
# ::tokens ["yw"]
# ::lemmas ["yw"]
(c17-0 / yw)
