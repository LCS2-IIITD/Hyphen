# ::snt Just in case you 'forget' to mention. The male police officer that was shown to be executed/murdered has been identified as a .
# ::tokens ["Just", "in", "case", "you", "'", "forget", "'", "to", "mention", ".", "The", "male", "police", "officer", "that", "was", "shown", "to", "be", "executed", "/", "murdered", "has", "been", "identified", "as", "a", "."]
# ::lemmas ["just", "in", "case", "you", "'", "forget", "'", "to", "mention", ".", "the", "male", "police", "officer", "that", "be", "show", "to", "be", "execute", "/", "murder", "have", "be", "identify", "as", "a", "."]
(c1-3 / multi-sentence
      :snt1 (c1-9 / mention-01
                  :ARG0 (c1-1 / you)
                  :ARG1-of (c1-2 / forget-01
                                 :ARG0 c1-1
                                 :mod (c1-0 / just)))
      :snt2 (c1-8 / identify-01
                  :ARG1 (c1-5 / officer
                              :mod (c1-10 / police)
                              :mod (c1-4 / male)
                              :ARG1-of (c1-12 / show-01
                                              :ARG2 (c1-6 / slash
                                                          :op1 (c1-7 / execute-01
                                                                     :ARG1 c1-5)
                                                          :op2 (c1-11 / murder-01
                                                                      :ARG1 c1-5))))))

# ::snt Paris is crying .
# ::tokens ["Paris", "is", "crying", "."]
# ::lemmas ["Paris", "be", "cry", "."]
(c2-2 / cry-02
      :ARG0 (c2-1 / city
                  :name (c2-0 / name
                              :op1 "Paris")))

# ::snt so much for terrorism not changing our lives
# ::tokens ["so", "much", "for", "terrorism", "not", "changing", "our", "lives"]
# ::lemmas ["so", "much", "for", "terrorism", "not", "change", "our", "life"]
(c3-2 / much
      :degree (c3-4 / so)
      :topic (c3-5 / terrorism
                   :ARG0-of (c3-3 / change-01
                                  :ARG1 (c3-1 / life
                                              :poss (c3-0 / we))
                                  :polarity -)))

# ::snt TV program will end terrorism from its roots for ever
# ::tokens ["TV", "program", "will", "end", "terrorism", "from", "its", "roots", "for", "ever"]
# ::lemmas ["tv", "program", "will", "end", "terrorism", "from", "its", "root", "for", "ever"]
(c4-1 / end-01
      :ARG0 (c4-2 / program
                  :mod (c4-5 / television))
      :ARG1 (c4-4 / terrorism)
      :ARG2 (c4-3 / root-02
                  :ARG1 c4-4
                  :time (c4-0 / ever)))

# ::snt Live updates : People gather to remember the victims of the attack
# ::tokens ["Live", "updates", ":", "People", "gather", "to", "remember", "the", "victims", "of", "the", "attack"]
# ::lemmas ["Live", "update", ":", "people", "gather", "to", "remember", "the", "victim", "of", "the", "attack"]
(c5-7 / and
      :op1 (c5-1 / update-02
                 :manner (c5-0 / live))
      :op2 (c5-6 / gather-03
                 :ARG0 (c5-4 / person)
                 :purpose (c5-5 / remember-01
                                :ARG0 c5-4
                                :ARG1 (c5-3 / victim
                                            :ARG1-of (c5-2 / attack-01)))))

# ::snt I'm sorry, I cannot get into this. I am a proud Jew. Today Paris is crying and in mourning that's my point.
# ::tokens ["I", "'m", "sorry", ",", "I", "can", "not", "get", "into", "this", ".", "I", "am", "a", "proud", "Jew", ".", "Today", "Paris", "is", "crying", "and", "in", "mourning", "that", "'s", "my", "point", "."]
# ::lemmas ["i", "be", "sorry", ",", "i", "can", "not", "get", "into", "this", ".", "i", "be", "a", "proud", "Jew", ".", "Today", "Paris", "be", "cry", "and", "in", "mourning", "that", "be", "my", "point", "."]
(c6-1 / multi-sentence
      :snt1 (c6-12 / sorry-01
                   :ARG1 (c6-3 / i)
                   :ARG2 (c6-6 / possible-01
                               :ARG1 (c6-9 / get-05
                                           :ARG1 c6-3
                                           :ARG2 (c6-15 / this))
                               :polarity -))
      :snt2 (c6-16 / pride-01
                   :ARG0 (c6-10 / i)
                   :ARG1 (c6-7 / religious-group
                               :name (c6-4 / name
                                           :op1 "Jew")
                               :domain c6-10))
      :snt3 (c6-17 / and
                   :op1 (c6-8 / cry-02
                              :ARG0 (c6-11 / city
                                           :name (c6-5 / name
                                                       :op1 "Paris"))
                              :time (c6-14 / today))
                   :op2 (c6-13 / mourn-01
                               :ARG0 c6-11)
                   :ARG1-of (c6-2 / point-04
                                  :ARG0 (c6-0 / i))))

# ::snt Palestine cries everyday. Attacked by terrorists from Israel. Ur point being?
# ::tokens ["Palestine", "cries", "everyday", ".", "Attacked", "by", "terrorists", "from", "Israel", ".", "Ur", "point", "being", "?"]
# ::lemmas ["Palestine", "cry", "everyday", ".", "attack", "by", "terrorist", "from", "Israel", ".", "ur", "point", "be", "?"]
(c7-0 / multi-sentence
      :snt1 (c7-7 / cry-01
                  :ARG0 (c7-5 / country
                              :name (c7-2 / name
                                          :op1 "Palestine"))
                  :frequency (c7-6 / rate-entity-91
                                   :ARG3 (c7-11 / temporal-quantity
                                                :unit (c7-8 / day)
                                                :quant 1)))
      :snt2 (c7-12 / attack-01
                   :ARG0 (c7-9 / terrorist
                               :source (c7-10 / country
                                              :name (c7-3 / name
                                                          :op1 "Israel")))
                   :ARG1 c7-5)
      :snt3 (c7-4 / point-03
                  :ARG1 (c7-1 / amr-unknown)))

# ::snt Read Raul Castros Memo to Cubas first Military Mission to Algeria, Oct. , . Doc.
# ::tokens ["Read", "Raul", "Castros", "Memo", "to", "Cubas", "first", "Military", "Mission", "to", "Algeria", ",", "Oct.", ",", ".", "Doc", "."]
# ::lemmas ["read", "Raul", "Castros", "Memo", "to", "Cubas", "first", "Military", "Mission", "to", "Algeria", ",", "Oct.", ",", ".", "doc", "."]
(c8-1 / multi-sentence
      :snt1 (c8-6 / read-01
                  :ARG0 (c8-5 / person
                              :name (c8-3 / name
                                          :op1 "Raul"
                                          :op2 "Castros"
                                          :op3 "Memo"))
                  :ARG1 (c8-7 / mission-01
                              :ARG0 (c8-8 / country
                                          :name (c8-4 / name
                                                      :op1 "Cuba"))
                              :ARG1 (c8-0 / military)
                              :ord (c8-2 / ordinal-entity
                                         :value 1)
                              :destination (c8-9 / country
                                                 :name (c8-10 / name
                                                              :op1 "Algeria")))
                  :time (c8-11 / date-entity
                               :month 10)
                  :mode imperative)
      :snt2 (c8-13 / person
                   :name (c8-12 / name
                                :op1 "Doc")))

# ::snt : People gather to remember the victims of the attack
# ::tokens [":", "People", "gather", "to", "remember", "the", "victims", "of", "the", "attack"]
# ::lemmas [":", "people", "gather", "to", "remember", "the", "victim", "of", "the", "attack"]
(c9-3 / gather-03
      :ARG0 (c9-1 / person)
      :purpose (c9-2 / remember-01
                     :ARG0 c9-1
                     :ARG1 (c9-4 / person
                                 :ARG1-of (c9-0 / victimize-01
                                                :ARG0 (c9-5 / attack-01)))))

# ::snt Religion just has to stop
# ::tokens ["Religion", "just", "has", "to", "stop"]
# ::lemmas ["religion", "just", "have", "to", "stop"]
(c10-0 / obligate-01
       :ARG2 (c10-3 / stop-01
                    :ARG1 (c10-2 / religion))
       :mod (c10-1 / just))

# ::snt How about a minutes time of writing a law that allows citizens to carry a weapon to protect themselves!!
# ::tokens ["How", "about", "a", "minutes", "time", "of", "writing", "a", "law", "that", "allows", "citizens", "to", "carry", "a", "weapon", "to", "protect", "themselves", "!", "!"]
# ::lemmas ["how", "about", "a", "minutes", "time", "of", "write", "a", "law", "that", "allow", "citizen", "to", "carry", "a", "weapon", "to", "protect", "themselves", "!", "!"]
(c11-9 / time
       :duration-of (c11-0 / write-01
                           :ARG1 (c11-1 / law
                                        :ARG0-of (c11-10 / allow-01
                                                         :ARG1 (c11-7 / carry-01
                                                                      :ARG0 (c11-6 / citizen)
                                                                      :ARG1 (c11-4 / weapon)
                                                                      :purpose (c11-5 / protect-01
                                                                                      :ARG0 c11-6
                                                                                      :ARG1 c11-6)))))
       :quant (c11-3 / about
                     :op1 (c11-8 / temporal-quantity
                                 :unit (c11-2 / minute)
                                 :quant 1)))

# ::snt Je suis Charlie : a minute's silence to remember the victims of the CharlieHebdo attack
# ::tokens ["Je", "suis", "Charlie", ":", "a", "minute", "'s", "silence", "to", "remember", "the", "victims", "of", "the", "CharlieHebdo", "attack"]
# ::lemmas ["Je", "suis", "Charlie", ":", "a", "minute", "'s", "silence", "to", "remember", "the", "victim", "of", "the", "CharlieHebdo", "attack"]
(c12-6 / silence-01
       :duration (c12-7 / temporal-quantity
                        :unit (c12-1 / minute)
                        :quant 1)
       :purpose (c12-5 / remember-01
                       :ARG1 (c12-3 / victim
                                    :ARG1-of (c12-8 / attack-01
                                                    :ARG0 (c12-4 / person
                                                                 :name (c12-2 / name
                                                                              :op1 "CharlieHebdo")))))
       :mod (c12-0 / Je))

# ::snt so true. Its a shame they forget to mention this.
# ::tokens ["so", "true", ".", "Its", "a", "shame", "they", "forget", "to", "mention", "this", "."]
# ::lemmas ["so", "true", ".", "its", "a", "shame", "they", "forget", "to", "mention", "this", "."]
(c13-1 / multi-sentence
       :snt1 (c13-7 / true-01
                    :degree (c13-6 / so))
       :snt2 (c13-2 / shame-02
                    :ARG2 (c13-0 / forget-01
                                 :ARG0 (c13-5 / they)
                                 :ARG1 (c13-4 / mention-01
                                              :ARG0 c13-5
                                              :ARG1 (c13-3 / this)))))

# ::snt up call all pro vs
# ::tokens ["up", "call", "all", "pro", "vs"]
# ::lemmas ["up", "call", "all", "pro", "vs"]
(c14-4 / call-03
       :ARG0 (c14-3 / person
                    :mod (c14-5 / all)
                    :ARG0-of (c14-0 / favor-01
                                    :ARG1 (c14-2 / oppose-01)))
       :mod (c14-1 / up))

# ::snt ' People gather for a minute's silence to remember victims of the attack '
# ::tokens ["'", "People", "gather", "for", "a", "minute", "'s", "silence", "to", "remember", "victims", "of", "the", "attack", "'"]
# ::lemmas ["'", "people", "gather", "for", "a", "minute", "'s", "silence", "to", "remember", "victim", "of", "the", "attack", "'"]
(c15-4 / gather-03
       :ARG0 (c15-2 / person)
       :duration (c15-5 / temporal-quantity
                        :unit (c15-0 / minute)
                        :quant 1)
       :purpose (c15-3 / remember-01
                       :ARG0 c15-2
                       :ARG1 (c15-6 / person
                                    :ARG1-of (c15-1 / victimize-01
                                                    :ARG0 (c15-7 / attack-01)))))
