# ::snt Don't you fucking dare call me darling, you little brown nosed cunt.
# ::tokens ["Do", "n't", "you", "fucking", "dare", "call", "me", "darling", ",", "you", "little", "brown", "nosed", "cunt", "."]
# ::lemmas ["do", "not", "you", "fucking", "dare", "call", "i", "darling", ",", "you", "little", "brown", "nosed", "cunt", "."]
(c1-10 / say-01
       :ARG0 (c1-5 / i)
       :ARG1 (c1-7 / dare-01
                   :ARG1 (c1-0 / you
                               :mod (c1-8 / cunt
                                          :mod (c1-2 / little)
                                          :mod (c1-6 / nose
                                                     :mod (c1-4 / brown))))
                   :ARG2 (c1-9 / call-01
                               :ARG0 c1-0
                               :ARG1 c1-5
                               :ARG2 (c1-1 / darling))
                   :mod (c1-3 / fucking)
                   :polarity -)
       :ARG2 c1-0)

# ::snt Nobody asked for your opinion mate.
# ::tokens ["Nobody", "asked", "for", "your", "opinion", "mate", "."]
# ::lemmas ["nobody", "ask", "for", "your", "opinion", "mate", "."]
(c2-4 / ask-02
      :ARG0 (c2-2 / nobody)
      :ARG1 (c2-3 / thing
                  :ARG1-of (c2-1 / opine-01
                                 :ARG0 (c2-0 / mate
                                             :ARG2-of c2-4))))

# ::snt Dickhead
# ::tokens ["Dickhead"]
# ::lemmas ["dickhead"]
(c3-1 / person
      :name (c3-0 / name
                  :op1 "Dickhead"))

# ::snt Because he's the only one who tweeted about it isn't he? Shut the fuck up..
# ::tokens ["Because", "he", "'s", "the", "only", "one", "who", "tweeted", "about", "it", "is", "n't", "he", "?", "Shut", "the", "fuck", "up", ".."]
# ::lemmas ["because", "he", "be", "the", "only", "one", "who", "tweet", "about", "it", "be", "not", "he", "?", "shut", "the", "fuck", "up", ".."]
(c4-3 / multi-sentence
      :snt1 (c4-7 / cause-01
                  :ARG0 (c4-9 / tweet-02
                              :ARG0 (c4-0 / he
                                          :mod (c4-4 / only))
                              :topic (c4-5 / it)
                              :ARG1-of (c4-6 / request-confirmation-91)))
      :snt2 (c4-8 / shut-up-06
                  :ARG0 (c4-1 / you
                              :ARG1-of c4-8)
                  :mod (c4-2 / fuck
                             :mode expressive)
                  :mode imperative))

# ::snt I come from Australia, where we use proper English, and include brackets in our lists.
# ::tokens ["I", "come", "from", "Australia", ",", "where", "we", "use", "proper", "English", ",", "and", "include", "brackets", "in", "our", "lists", "."]
# ::lemmas ["i", "come", "from", "Australia", ",", "where", "we", "use", "proper", "English", ",", "and", "include", "bracket", "in", "our", "list", "."]
(c5-9 / come-01
      :ARG1 (c5-4 / i)
      :ARG3 (c5-8 / country
                  :name (c5-5 / name
                              :op1 "Australia")
                  :location-of (c5-2 / use-01
                                     :ARG0 (c5-0 / we)
                                     :ARG1 (c5-1 / language
                                                 :name (c5-6 / name
                                                             :op1 "English")
                                                 :mod (c5-7 / proper)))
                  :ARG0-of (c5-10 / include-01
                                  :ARG1 (c5-3 / bracket)
                                  :ARG2 (c5-11 / list-01
                                               :ARG0 c5-0))))

# ::snt . you do things like .) . your mouth foul af3. i'm actually not white so get your information right!
# ::tokens [".", "you", "do", "things", "like", ".", ")", ".", "your", "mouth", "foul", "af3", ".", "i", "'m", "actually", "not", "white", "so", "get", "your", "information", "right", "!"]
# ::lemmas [".", "you", "do", "thing", "like", ".", ")", ".", "your", "mouth", "foul", "af3", ".", "i", "be", "actually", "not", "white", "so", "get", "your", "information", "right", "!"]
(c6-3 / multi-sentence
      :snt1 (c6-9 / do-02
                  :ARG0 (c6-0 / you)
                  :ARG1 (c6-14 / thing
                               :ARG1-of (c6-8 / resemble-01)))
      :snt2 (c6-2 / foul-01
                  :ARG1 (c6-7 / mouth)
                  :mod (c6-15 / af3))
      :snt3 (c6-1 / white-02
                  :ARG1 (c6-5 / i)
                  :ARG1-of (c6-4 / actual-02)
                  :ARG0-of (c6-10 / cause-01
                                  :ARG1 (c6-11 / get-04
                                               :ARG0 (c6-12 / you)
                                               :ARG1 (c6-13 / information
                                                            :poss c6-12)
                                               :ARG2-of (c6-6 / right-06
                                                              :ARG1 c6-12)
                                               :mode imperative))
                  :polarity -))

# ::snt Like, it shows that Harry is caring and all. But not everyone has to tweet just to show that they care and are sympathetic +
# ::tokens ["Like", ",", "it", "shows", "that", "Harry", "is", "caring", "and", "all", ".", "But", "not", "everyone", "has", "to", "tweet", "just", "to", "show", "that", "they", "care", "and", "are", "sympathetic", "+"]
# ::lemmas ["like", ",", "it", "show", "that", "Harry", "be", "care", "and", "all", ".", "but", "not", "everyone", "have", "to", "tweet", "just", "to", "show", "that", "they", "care", "and", "be", "sympathetic", "+"]
(c7-2 / multi-sentence
      :snt1 (c7-9 / resemble-01
                  :ARG2 (c7-13 / show-01
                               :ARG0 (c7-6 / it)
                               :ARG1 (c7-10 / care-01
                                            :ARG0 (c7-8 / person
                                                        :name (c7-7 / name
                                                                    :op1 "Harry")))))
      :snt2 (c7-11 / contrast-01
                   :ARG2 (c7-3 / obligate-01
                               :ARG1 (c7-4 / everyone)
                               :ARG2 (c7-14 / tweet-01
                                            :ARG0 c7-4
                                            :purpose (c7-5 / show-01
                                                           :ARG0 c7-4
                                                           :ARG1 (c7-15 / and
                                                                        :op1 (c7-12 / care-01
                                                                                    :ARG0 c7-4)
                                                                        :op2 (c7-1 / sympathize-01
                                                                                   :ARG0 c7-4))
                                                           :mod (c7-0 / just)))
                               :polarity -)))

# ::snt is that really the best insult you've got? that's so weak lmao
# ::tokens ["is", "that", "really", "the", "best", "insult", "you", "'ve", "got", "?", "that", "'s", "so", "weak", "lmao"]
# ::lemmas ["be", "that", "really", "the", "good", "insult", "you", "'ve", "get", "?", "that", "be", "so", "weak", "lmao"]
(c8-4 / multi-sentence
      :snt1 (c8-0 / have-degree-91
                  :polarity (c8-14 / amr-unknown)
                  :ARG1 (c8-5 / insult-01
                              :ARG1 (c8-1 / you)
                              :ARG1-of (c8-9 / get-02
                                             :ARG0 c8-1)
                              :ARG1-of (c8-7 / real-04))
                  :ARG2 (c8-8 / good-02
                              :ARG1 c8-5)
                  :ARG3 (c8-6 / most))
      :snt2 (c8-2 / weak-02
                  :ARG1 (c8-13 / that)
                  :degree (c8-12 / so)
                  :ARG2-of (c8-3 / laugh-01
                                 :ARG0 (c8-10 / i)
                                 :manner (c8-11 / loud)
                                 :mode expressive)))

# ::snt Nobody asked for your dumbass disrespectful opinion either.
# ::tokens ["Nobody", "asked", "for", "your", "dumbass", "disrespectful", "opinion", "either", "."]
# ::lemmas ["nobody", "ask", "for", "your", "dumbass", "disrespectful", "opinion", "either", "."]
(c9-7 / ask-02
      :ARG0 (c9-4 / nobody)
      :ARG1 (c9-6 / thing
                  :ARG1-of (c9-2 / opine-01
                                 :ARG0 (c9-0 / you))
                  :mod (c9-5 / dumbass)
                  :ARG0-of (c9-1 / disrespect-01))
      :mod (c9-3 / either))

# ::snt I did not imply any of what you're implying so.
# ::tokens ["I", "did", "not", "imply", "any", "of", "what", "you", "'re", "implying", "so", "."]
# ::lemmas ["i", "do", "not", "imply", "any", "of", "what", "you", "be", "imply", "so", "."]
(c10-3 / imply-01
       :ARG0 (c10-4 / i)
       :ARG1 (c10-7 / thing
                    :mod (c10-8 / any)
                    :ARG1-of (c10-1 / include-91
                                    :ARG2 (c10-5 / thing
                                                 :ARG1-of (c10-2 / imply-01
                                                                 :ARG0 (c10-0 / you)))))
       :manner (c10-6 / so)
       :polarity -)

# ::snt Why thank you, I believe I will, off to making more replies!
# ::tokens ["Why", "thank", "you", ",", "I", "believe", "I", "will", ",", "off", "to", "making", "more", "replies", "!"]
# ::lemmas ["why", "thank", "you", ",", "i", "believe", "i", "will", ",", "off", "to", "make", "more", "reply", "!"]
(c11-11 / and
        :op1 (c11-10 / thank-01
                     :ARG0 (c11-5 / i)
                     :ARG1 (c11-0 / you)
                     :ARG1-of (c11-8 / cause-01
                                     :ARG0 (c11-4 / amr-unknown)))
        :op2 (c11-2 / believe-01
                    :ARG0 c11-5
                    :ARG1 (c11-7 / do-02
                                 :ARG0 c11-5))
        :op3 (c11-3 / off
                    :op1 (c11-1 / make-01
                                :ARG0 c11-5
                                :ARG1 (c11-9 / reply-01
                                             :ARG0 c11-5
                                             :quant (c11-6 / more)))))

# ::snt lmao, i'm not even going to continue anymore, i'm just wasting my precious time on a fucked up cunt like you
# ::tokens ["lmao", ",", "i", "'m", "not", "even", "going", "to", "continue", "anymore", ",", "i", "'m", "just", "wasting", "my", "precious", "time", "on", "a", "fucked", "up", "cunt", "like", "you"]
# ::lemmas ["lmao", ",", "i", "be", "not", "even", "go", "to", "continue", "anymore", ",", "i", "be", "just", "waste", "my", "precious", "time", "on", "a", "fuck", "up", "cunt", "like", "you"]
(c12-14 / and
        :op1 (c12-10 / continue-01
                     :ARG0 (c12-7 / i)
                     :mod (c12-5 / even)
                     :time (c12-6 / anymore)
                     :polarity -)
        :op2 (c12-1 / waste-01
                    :ARG0 c12-7
                    :ARG1 (c12-13 / time
                                  :poss c12-7
                                  :mod (c12-8 / precious))
                    :ARG2 (c12-9 / cunt
                                 :ARG1-of (c12-3 / fuck-up-02)
                                 :ARG1-of (c12-11 / resemble-01
                                                  :ARG2 (c12-2 / you)))
                    :mod (c12-0 / just))
        :mod (c12-4 / laugh-01
                    :ARG0 c12-7
                    :manner (c12-12 / loud)
                    :mode expressive))

# ::snt have Zayne tweeted yet?
# ::tokens ["have", "Zayne", "tweeted", "yet", "?"]
# ::lemmas ["have", "Zayne", "tweet", "yet", "?"]
(c13-3 / tweet-02
       :ARG0 (c13-2 / person
                    :name (c13-1 / name
                                 :op1 "Zayne"))
       :polarity (c13-4 / amr-unknown)
       :time (c13-0 / yet))

# ::snt They are ChineseThey did not grow up in the Australian school systemSays that they "know" it's wrong
# ::tokens ["They", "are", "ChineseThey", "did", "not", "grow", "up", "in", "the", "Australian", "school", "systemSays", "that", "they", "\"", "know", "\"", "it", "'s", "wrong"]
# ::lemmas ["they", "be", "chinesethey", "do", "not", "grow", "up", "in", "the", "Australian", "school", "systemsay", "that", "they", "\"", "know", "\"", "it", "be", "wrong"]
(c14-2 / multi-sentence
       :snt1 (c14-8 / person
                    :mod (c14-10 / country
                                 :name (c14-6 / name
                                              :op1 "China"))
                    :domain (c14-13 / they))
       :snt2 (c14-11 / grow-up-04
                     :ARG1 c14-13
                     :location (c14-12 / system
                                       :mod (c14-3 / school)
                                       :mod (c14-9 / country
                                                   :name (c14-7 / name
                                                                :op1 "Australia")))
                     :polarity -)
       :snt3 (c14-1 / say-01
                    :ARG0 c14-13)
       :ARG1 (c14-5 / know-01
                    :ARG0 c14-13
                    :ARG1 (c14-0 / wrong-02
                                 :ARG1 (c14-4 / it))))

# ::snt I just love how you're both ganging up on me and your best argument about how I make lists with brackets xD
# ::tokens ["I", "just", "love", "how", "you", "'re", "both", "ganging", "up", "on", "me", "and", "your", "best", "argument", "about", "how", "I", "make", "lists", "with", "brackets", "xD"]
# ::lemmas ["i", "just", "love", "how", "you", "be", "both", "gang", "up", "on", "i", "and", "your", "good", "argument", "about", "how", "i", "make", "list", "with", "bracket", "xD"]
(c15-3 / love-01
       :ARG0 (c15-8 / i)
       :ARG1 (c15-15 / and
                     :op1 (c15-12 / gang-up-00
                                  :ARG0 (c15-1 / you
                                               :mod (c15-5 / both))
                                  :ARG1 c15-8)
                     :op2 (c15-7 / argue-01
                                 :ARG0 c15-1
                                 :ARG2 (c15-14 / thing
                                               :manner-of (c15-4 / make-01
                                                                 :ARG0 c15-8
                                                                 :ARG1 (c15-13 / list)
                                                                 :instrument (c15-11 / bracket)))
                                 :ARG1-of (c15-0 / have-degree-91
                                                 :ARG2 (c15-10 / good-03
                                                               :ARG1 c15-7)
                                                 :ARG3 (c15-9 / most))))
       :mod (c15-2 / just)
       :mod (c15-6 / emoticon
                   :value "xD"))

# ::snt You have no idea how ignorant you sound
# ::tokens ["You", "have", "no", "idea", "how", "ignorant", "you", "sound"]
# ::lemmas ["you", "have", "no", "idea", "how", "ignorant", "you", "sound"]
(c16-0 / have-03
       :ARG0 (c16-1 / you)
       :ARG1 (c16-2 / idea
                    :topic (c16-5 / thing
                                  :degree-of (c16-3 / ignorant-02
                                                    :ARG1 c16-1
                                                    :ARG2-of (c16-4 / sound-01
                                                                    :ARG1 c16-1))))
       :polarity -)

# ::snt : Oh my god shut the fuck up. hA! you can shut the fuck up instead!
# ::tokens [":", "Oh", "my", "god", "shut", "the", "fuck", "up", ".", "hA", "!", "you", "can", "shut", "the", "fuck", "up", "instead", "!"]
# ::lemmas [":", "oh", "my", "god", "shut", "the", "fuck", "up", ".", "ha", "!", "you", "can", "shut", "the", "fuck", "up", "instead", "!"]
(c17-2 / multi-sentence
       :snt1 (c17-10 / shut-up-06
                     :ARG0 (c17-8 / person
                                  :name (c17-7 / name
                                               :op1 "God")
                                  :poss (c17-5 / i))
                     :mod (c17-3 / oh
                                 :mode expressive)
                     :mod (c17-1 / fuck)
                     :mode imperative)
       :snt2 (c17-12 / a
                     :mod (c17-11 / possible-01
                                  :ARG1 (c17-4 / shut-up-06
                                               :ARG0 (c17-0 / you)
                                               :mod (c17-6 / fuck)
                                               :ARG1-of (c17-9 / instead-of-91)))
                     :mode expressive))

# ::snt Oh my god shut the fuck up.
# ::tokens ["Oh", "my", "god", "shut", "the", "fuck", "up", "."]
# ::lemmas ["oh", "my", "god", "shut", "the", "fuck", "up", "."]
(c18-5 / shut-up-06
       :ARG0 (c18-4 / person
                    :name (c18-3 / name
                                 :op1 "God")
                    :poss (c18-2 / i)
                    :ARG1-of c18-5)
       :mod (c18-1 / oh
                   :mode expressive)
       :mod (c18-0 / fuck
                   :mode expressive)
       :mode imperative)

# ::snt im fucking chinese and even i know you dont make lists with dots before the brackets
# ::tokens ["i", "m", "fucking", "chinese", "and", "even", "i", "know", "you", "do", "nt", "make", "lists", "with", "dots", "before", "the", "brackets"]
# ::lemmas ["i", "m", "fucking", "chinese", "and", "even", "i", "know", "you", "do", "not", "make", "list", "with", "dot", "before", "the", "bracket"]
(c19-12 / and
        :op1 (c19-7 / person
                    :mod (c19-9 / country
                                :name (c19-6 / name
                                             :op1 "China"))
                    :mod (c19-1 / fucking
                                :mode expressive)
                    :domain (c19-5 / i))
        :op2 (c19-11 / know-01
                     :ARG0 c19-5
                     :ARG1 (c19-2 / list-01
                                  :ARG0 (c19-0 / you)
                                  :instrument (c19-8 / dot
                                                     :location (c19-3 / before
                                                                      :op1 (c19-10 / bracket)))
                                  :polarity -)
                     :mod (c19-4 / even)))

# ::snt your insults are just making me laugh! thanks for the entertainment, darling.
# ::tokens ["your", "insults", "are", "just", "making", "me", "laugh", "!", "thanks", "for", "the", "entertainment", ",", "darling", "."]
# ::lemmas ["your", "insult", "be", "just", "make", "i", "laugh", "!", "thank", "for", "the", "entertainment", ",", "darling", "."]
(c20-4 / multi-sentence
       :snt1 (c20-8 / make-02
                    :ARG0 (c20-7 / insult-01
                                 :ARG0 (c20-1 / you))
                    :ARG1 (c20-3 / laugh-01
                                 :ARG0 (c20-10 / i))
                    :mod (c20-0 / just))
       :snt2 (c20-12 / thank-01
                     :ARG0 (c20-5 / i)
                     :ARG1 (c20-11 / you
                                   :ARG0-of (c20-2 / have-rel-role-91
                                                   :ARG1 c20-5
                                                   :ARG2 (c20-9 / darling)))
                     :ARG2 (c20-6 / entertain-01
                                  :ARG1 c20-11)))

# ::snt Don't call me honey, either.
# ::tokens ["Do", "n't", "call", "me", "honey", ",", "either", "."]
# ::lemmas ["do", "not", "call", "i", "honey", ",", "either", "."]
(c21-4 / call-01
       :ARG0 (c21-1 / you)
       :ARG1 (c21-3 / i)
       :ARG2 (c21-0 / honey)
       :mod (c21-2 / either)
       :mode imperative
       :polarity -)

# ::snt continue having fun darling
# ::tokens ["continue", "having", "fun", "darling"]
# ::lemmas ["continue", "have", "fun", "darling"]
(c22-0 / say-01
       :ARG1 (c22-2 / continue-01
                    :ARG0 (c22-1 / darling)
                    :ARG1 (c22-3 / fun-01
                                 :ARG0 c22-1)
                    :mode imperative)
       :ARG2 c22-1)

# ::snt wow great language from a site for kids - I feel much better knowing my daughter follows D sites with admins like you!
# ::tokens ["wow", "great", "language", "from", "a", "site", "for", "kids", "-", "I", "feel", "much", "better", "knowing", "my", "daughter", "follows", "D", "sites", "with", "admins", "like", "you", "!"]
# ::lemmas ["wow", "great", "language", "from", "a", "site", "for", "kid", "-", "i", "feel", "much", "well", "know", "my", "daughter", "follow", "d", "site", "with", "admin", "like", "you", "!"]
(c23-0 / multi-sentence
       :snt1 (c23-10 / language
                     :mod (c23-16 / great)
                     :source (c23-5 / site
                                    :beneficiary (c23-20 / kid))
                     :mod (c23-17 / wow
                                  :mode expressive))
       :snt2 (c23-11 / feel-01
                     :ARG0 (c23-19 / i)
                     :ARG1 (c23-3 / good-02
                                  :ARG2-of (c23-9 / have-degree-91
                                                  :ARG1 c23-11
                                                  :ARG3 (c23-14 / more
                                                                :quant (c23-12 / much))))
                     :ARG1-of (c23-24 / cause-01
                                      :ARG0 (c23-18 / know-01
                                                    :ARG0 c23-19
                                                    :ARG1 (c23-23 / follow-02
                                                                  :ARG0 (c23-2 / person
                                                                               :ARG0-of (c23-7 / have-rel-role-91
                                                                                               :ARG1 c23-19
                                                                                               :ARG2 (c23-4 / daughter)))
                                                                  :ARG1 (c23-13 / site
                                                                                :mod (c23-22 / string-entity
                                                                                             :value "D")
                                                                                :ARG0-of (c23-1 / have-03
                                                                                                :ARG1 (c23-6 / person
                                                                                                             :ARG0-of (c23-8 / administrate-01)
                                                                                                             :ARG1-of (c23-15 / resemble-01
                                                                                                                              :ARG2 (c23-21 / you))))))))))

# ::snt Mate, we're an update account. What do you fucking expect? If you don't like it , don't look at it.
# ::tokens ["Mate", ",", "we", "'re", "an", "update", "account", ".", "What", "do", "you", "fucking", "expect", "?", "If", "you", "do", "n't", "like", "it", ",", "do", "n't", "look", "at", "it", "."]
# ::lemmas ["mate", ",", "we", "be", "an", "update", "account", ".", "what", "do", "you", "fucking", "expect", "?", "if", "you", "do", "not", "like", "it", ",", "do", "not", "look", "at", "it", "."]
(c24-4 / multi-sentence
       :snt1 (c24-15 / say-01
                     :ARG0 (c24-9 / i)
                     :ARG1 (c24-16 / account
                                   :ARG0-of (c24-5 / update-01)
                                   :domain (c24-1 / we))
                     :ARG2 (c24-10 / person
                                   :ARG0-of (c24-0 / have-rel-role-91
                                                   :ARG1 c24-9
                                                   :ARG2 (c24-11 / mate))))
       :snt2 (c24-7 / expect-01
                    :ARG0 (c24-2 / you)
                    :ARG1 (c24-8 / amr-unknown)
                    :mod (c24-3 / fuck))
       :snt3 (c24-6 / look-01
                    :ARG0 (c24-14 / you)
                    :ARG1 (c24-13 / it)
                    :condition (c24-12 / dislike-01
                                       :ARG0 c24-14
                                       :ARG1 c24-13)
                    :mode imperative
                    :polarity -))

# ::snt lmao where the fuck is the contradiction
# ::tokens ["lmao", "where", "the", "fuck", "is", "the", "contradiction"]
# ::lemmas ["lmao", "where", "the", "fuck", "be", "the", "contradiction"]
(c25-1 / multi-sentence
       :snt1 (c25-0 / laugh-01
                    :ARG0 (c25-3 / i)
                    :manner (c25-5 / loud))
       :snt2 (c25-4 / contradict-01
                    :mod (c25-2 / fuck
                                :mode expressive)))

# ::snt No, I made a Twitter account quite some time ago...to troll idiots indiscriminately XD
# ::tokens ["No", ",", "I", "made", "a", "Twitter", "account", "quite", "some", "time", "ago", "...", "to", "troll", "idiots", "indiscriminately", "XD"]
# ::lemmas ["no", ",", "i", "make", "a", "Twitter", "account", "quite", "some", "time", "ago", "...", "to", "troll", "idiot", "indiscriminately", "XD"]
(c26-0 / make-01
       :ARG0 (c26-4 / i)
       :ARG1 (c26-14 / account
                     :medium (c26-7 / publication
                                    :name (c26-5 / name
                                                 :op1 "Twitter")))
       :time (c26-1 / before
                    :op1 (c26-6 / now)
                    :quant (c26-13 / time
                                   :quant (c26-12 / some
                                                  :degree (c26-3 / quite))))
       :purpose (c26-11 / troll-01
                        :ARG0 c26-4
                        :ARG1 (c26-10 / idiot)
                        :manner (c26-8 / discriminate-01
                                       :polarity -))
       :mod (c26-9 / no)
       :mod (c26-2 / emoticon
                   :value " XD"))

# ::snt too bad i'm not little or white
# ::tokens ["too", "bad", "i", "'m", "not", "little", "or", "white"]
# ::lemmas ["too", "bad", "i", "be", "not", "little", "or", "white"]
(c27-0 / have-degree-91
       :ARG1 (c27-5 / i)
       :ARG2 (c27-3 / bad-07
                    :ARG1 c27-5)
       :ARG3 (c27-6 / too)
       :ARG6 (c27-4 / or
                    :op1 (c27-2 / little)
                    :op2 (c27-1 / white-02)
                    :domain c27-5
                    :polarity -))

# ::snt Fuck you - people are in danger and you link it to D - Twats
# ::tokens ["Fuck", "you", "-", "people", "are", "in", "danger", "and", "you", "link", "it", "to", "D", "-", "Twats"]
# ::lemmas ["fuck", "you", "-", "people", "be", "in", "danger", "and", "you", "link", "it", "to", "D", "-", "Twats"]
(c28-2 / multi-sentence
       :snt1 (c28-1 / fuck-01
                    :ARG1 (c28-0 / you)
                    :mode expressive)
       :snt2 (c28-4 / endanger-01
                    :ARG1 (c28-7 / person))
       :snt3 (c28-3 / link-01
                    :ARG0 (c28-8 / you)
                    :ARG1 (c28-5 / it)
                    :ARG2 (c28-9 / person
                                 :name (c28-6 / name
                                              :op1 "D-Twats"))))

# ::snt .) You're a D fan2.) you use lots of typical white girl language like honey and darling3.) you use emojis
# ::tokens [".", ")", "You", "'re", "a", "D", "fan2", ".", ")", "you", "use", "lots", "of", "typical", "white", "girl", "language", "like", "honey", "and", "darling3", ".", ")", "you", "use", "emojis"]
# ::lemmas [".", ")", "you", "be", "a", "D", "fan2", ".", ")", "you", "use", "lot", "of", "typical", "white", "girl", "language", "like", "honey", "and", "darling3", ".", ")", "you", "use", "emoji"]
(c29-3 / fan
       :domain (c29-1 / you)
       :mod (c29-7 / girl)
       :ARG0-of (c29-4 / use-01
                       :ARG1 (c29-2 / language
                                    :ARG1-of (c29-10 / typical-02
                                                     :ARG2 c29-7))
                       :quant (c29-8 / lot)
                       :example (c29-11 / and
                                        :op1 (c29-0 / honey)
                                        :op2 (c29-6 / darling)))
       :ARG0-of (c29-9 / use-01
                       :ARG1 (c29-5 / emojis))
       :li 2
       :li 3)

# ::snt It's funny because you think I actually give shits, I'm actually replying for the fun of it,
# ::tokens ["It", "'s", "funny", "because", "you", "think", "I", "actually", "give", "shits", ",", "I", "'m", "actually", "replying", "for", "the", "fun", "of", "it", ","]
# ::lemmas ["it", "be", "funny", "because", "you", "think", "i", "actually", "give", "shit", ",", "i", "be", "actually", "reply", "for", "the", "fun", "of", "it", ","]
(c30-1 / funny
       :domain (c30-10 / and
                       :op1 (c30-9 / think-01
                                   :ARG0 (c30-0 / you)
                                   :ARG1 (c30-7 / give-shit-00
                                                :ARG0 (c30-3 / i)
                                                :ARG1-of (c30-2 / actual-02)))
                       :op2 (c30-6 / reply-01
                                   :ARG0 c30-3
                                   :ARG2 (c30-4 / fun-01
                                                :ARG1 (c30-8 / it))
                                   :ARG1-of (c30-5 / actual-02))))

# ::snt You just contradicted yourself, congrats.You're ChineseI grew up in the AUSTRALIAN school systemDumbass.
# ::tokens ["You", "just", "contradicted", "yourself", ",", "congrats", ".", "You're", "ChineseI", "grew", "up", "in", "the", "AUSTRALIAN", "school", "systemDumbass", "."]
# ::lemmas ["you", "just", "contradict", "yourself", ",", "congrat", ".", "You're", "ChineseI", "grow", "up", "in", "the", "AUSTRALIAN", "school", "systemdumbass", "."]
(c31-2 / multi-sentence
       :snt1 (c31-9 / contradict-01
                    :ARG0 (c31-1 / you
                                 :ARG1-of c31-9)
                    :mod (c31-0 / just))
       :snt2 (c31-8 / congratulate-01
                    :ARG1 (c31-12 / you
                                  :mod (c31-13 / country
                                               :name (c31-6 / name
                                                            :op1 "China"))))
       :snt3 (c31-10 / grow-up-04
                     :ARG1 (c31-5 / i)
                     :location (c31-14 / system
                                       :mod (c31-4 / school)
                                       :mod (c31-15 / country
                                                    :name (c31-7 / name
                                                                 :op1 "Australia"))))
       :snt4 (c31-11 / dumbass
                     :domain (c31-3 / you)))

# ::snt glad you finally learnt your manners honey
# ::tokens ["glad", "you", "finally", "learnt", "your", "manners", "honey"]
# ::lemmas ["glad", "you", "finally", "learn", "your", "manner", "honey"]
(c32-6 / say-01
       :ARG0 (c32-4 / i)
       :ARG1 (c32-5 / glad-02
                    :ARG0 (c32-1 / learn-01
                                 :ARG0 (c32-0 / honey)
                                 :ARG1 (c32-2 / manner
                                              :poss c32-0)
                                 :time (c32-3 / final))
                    :ARG1 c32-4)
       :ARG2 c32-0)

# ::snt I was just stating the reason of why I believed you where white.
# ::tokens ["I", "was", "just", "stating", "the", "reason", "of", "why", "I", "believed", "you", "where", "white", "."]
# ::lemmas ["i", "be", "just", "state", "the", "reason", "of", "why", "i", "believe", "you", "where", "white", "."]
(c33-7 / state-01
       :ARG0 (c33-4 / i)
       :ARG1 (c33-5 / reason
                    :ARG0-of (c33-6 / cause-01
                                    :ARG1 (c33-3 / believe-01
                                                 :ARG0 c33-4
                                                 :ARG1 (c33-1 / white-02
                                                              :ARG1 (c33-2 / you)))))
       :mod (c33-0 / just))

# ::snt even if he didnt care, he should anyway. its paying respects and its not hard
# ::tokens ["even", "if", "he", "did", "nt", "care", ",", "he", "should", "anyway", ".", "its", "paying", "respects", "and", "its", "not", "hard"]
# ::lemmas ["even", "if", "he", "do", "nt", "care", ",", "he", "should", "anyway", ".", "its", "pay", "respect", "and", "its", "not", "hard"]
(c34-1 / multi-sentence
       :snt1 (c34-0 / have-concession-91
                    :ARG1 (c34-7 / recommend-01
                                 :ARG1 (c34-8 / care-01
                                              :ARG0 (c34-10 / he)
                                              :polarity -)
                                 :mod (c34-9 / anyway))
                    :ARG2 (c34-2 / even-if
                                 :op1 c34-8))
       :snt2 (c34-3 / and
                    :op1 (c34-6 / pay-01
                                :ARG1 (c34-4 / respect-01))
                    :op2 (c34-5 / hard-02
                                :ARG1 c34-6
                                :polarity -)))

# ::snt no you see he is attractive therefore it's important and different
# ::tokens ["no", "you", "see", "he", "is", "attractive", "therefore", "it", "'s", "important", "and", "different"]
# ::lemmas ["no", "you", "see", "he", "be", "attractive", "therefore", "it", "be", "important", "and", "different"]
(c35-7 / see-01
       :ARG0 (c35-1 / you)
       :ARG1 (c35-8 / attract-01
                    :ARG0 (c35-0 / he))
       :mod (c35-4 / no)
       :ARG0-of (c35-6 / cause-01
                       :ARG1 (c35-2 / and
                                    :op1 (c35-3 / important-01
                                                :ARG1 c35-8)
                                    :op2 (c35-5 / differ-02
                                                :ARG1 c35-8))))

# ::snt I AM THE DANGER.
# ::tokens ["I", "AM", "THE", "DANGER", "."]
# ::lemmas ["i", "be", "the", "danger", "."]
(c36-0 / have-degree-91
       :ARG1 (c36-3 / i)
       :ARG2 (c36-1 / dangerous)
       :ARG3 (c36-2 / more))

# ::snt i love how you still use xD and call her out for using emojis
# ::tokens ["i", "love", "how", "you", "still", "use", "xD", "and", "call", "her", "out", "for", "using", "emojis"]
# ::lemmas ["i", "love", "how", "you", "still", "use", "xD", "and", "call", "she", "out", "for", "use", "emoji"]
(c37-1 / love-01
       :ARG0 (c37-5 / i)
       :ARG1 (c37-11 / and
                     :op1 (c37-2 / use-01
                                 :ARG0 (c37-0 / you)
                                 :ARG1 (c37-7 / product
                                              :name (c37-6 / name
                                                           :op1 "xD"))
                                 :mod (c37-9 / still))
                     :op2 (c37-8 / call-out-15
                                 :ARG0 c37-0
                                 :ARG1 (c37-3 / she)
                                 :ARG2 (c37-10 / use-01
                                               :ARG0 c37-3
                                               :ARG1 (c37-4 / emojis)))))

# ::snt So yeah, /you're/ the one proving /me/ with entertainment, with all your little white girl comebacks
# ::tokens ["So", "yeah", ",", "/you're/", "the", "one", "proving", "/me/", "with", "entertainment", ",", "with", "all", "your", "little", "white", "girl", "comebacks"]
# ::lemmas ["so", "yeah", ",", "/you're/", "the", "one", "prove", "/me/", "with", "entertainment", ",", "with", "all", "your", "little", "white", "girl", "comeback"]
(c38-6 / prove-01
       :ARG0 (c38-3 / one
                    :domain (c38-0 / you))
       :ARG1 (c38-11 / and
                     :op1 (c38-5 / i)
                     :op2 (c38-10 / she))
       :accompanier (c38-7 / comeback
                           :mod (c38-8 / girl
                                       :ARG1-of (c38-1 / white-02)
                                       :mod (c38-2 / little)
                                       :poss c38-0)
                           :mod (c38-4 / all))
       :mod (c38-9 / yeah
                   :mode expressive))

# ::snt its no different from me tweeting it, we are both thinking about the people in the
# ::tokens ["its", "no", "different", "from", "me", "tweeting", "it", ",", "we", "are", "both", "thinking", "about", "the", "people", "in", "the"]
# ::lemmas ["its", "no", "different", "from", "i", "tweet", "it", ",", "we", "be", "both", "think", "about", "the", "people", "in", "the"]
(c39-3 / multi-sentence
       :snt1 (c39-7 / differ-02
                    :ARG1 (c39-5 / it)
                    :ARG2 (c39-10 / tweet-02
                                  :ARG0 (c39-8 / i)
                                  :ARG1 (c39-2 / it))
                    :polarity -)
       :snt2 (c39-9 / think-01
                    :ARG0 (c39-1 / we
                                 :mod (c39-4 / both))
                    :ARG2 (c39-6 / person
                                 :location (c39-0 / here))))

# ::snt i'm laughing so hard i think your life is shorter at this point of time
# ::tokens ["i", "'m", "laughing", "so", "hard", "i", "think", "your", "life", "is", "shorter", "at", "this", "point", "of", "time"]
# ::lemmas ["i", "be", "laugh", "so", "hard", "i", "think", "your", "life", "be", "short", "at", "this", "point", "of", "time"]
(c40-2 / laugh-01
       :ARG0 (c40-5 / i)
       :ARG1-of (c40-0 / hard-02
                       :degree (c40-10 / so))
       :ARG1-of (c40-8 / cause-01
                       :ARG0 (c40-12 / think-01
                                     :ARG0 c40-5
                                     :ARG1 (c40-4 / short-07
                                                  :ARG1 (c40-9 / life
                                                               :poss (c40-1 / you))
                                                  :time (c40-7 / point
                                                               :mod (c40-11 / this)
                                                               :mod (c40-6 / time))
                                                  :ARG2-of (c40-13 / have-degree-91
                                                                   :ARG1 c40-9
                                                                   :ARG3 (c40-3 / more))))))

# ::snt no, not cunt. this person is an appendix, irrelevant, useless and needs to be cut out sooner or later
# ::tokens ["no", ",", "not", "cunt", ".", "this", "person", "is", "an", "appendix", ",", "irrelevant", ",", "useless", "and", "needs", "to", "be", "cut", "out", "sooner", "or", "later"]
# ::lemmas ["no", ",", "not", "cunt", ".", "this", "person", "be", "an", "appendix", ",", "irrelevant", ",", "useless", "and", "need", "to", "be", "cut", "out", "soon", "or", "later"]
(c42-1 / multi-sentence
       :snt1 (c42-0 / have-polarity-91
                    :ARG2 -)
       :snt2 (c42-10 / say-01
                     :ARG1 (c42-12 / and
                                   :op1 (c42-4 / appendix
                                               :domain (c42-6 / person
                                                              :mod (c42-11 / this)))
                                   :op2 (c42-7 / relevant-01
                                               :ARG1 c42-6
                                               :polarity -)
                                   :op3 (c42-2 / useless
                                               :domain c42-6)
                                   :op4 (c42-5 / need-01
                                               :ARG0 c42-6
                                               :ARG1 (c42-8 / cut-out-06
                                                            :ARG1 c42-6
                                                            :time (c42-3 / eventual))))
                     :ARG2 (c42-9 / cunt)))

# ::snt have you learnt to spell yet?
# ::tokens ["have", "you", "learnt", "to", "spell", "yet", "?"]
# ::lemmas ["have", "you", "learn", "to", "spell", "yet", "?"]
(c43-1 / learn-01
       :polarity (c43-4 / amr-unknown)
       :ARG0 (c43-0 / you)
       :ARG1 (c43-3 / spell-01
                    :ARG0 c43-0)
       :time (c43-2 / yet))

# ::snt . you use both a full stop and a bracket2. the language she uses on you is called sarcasm!1!1
# ::tokens [".", "you", "use", "both", "a", "full", "stop", "and", "a", "bracket2", ".", "the", "language", "she", "uses", "on", "you", "is", "called", "sarcasm!1!1"]
# ::lemmas [".", "you", "use", "both", "a", "full", "stop", "and", "a", "bracket2", ".", "the", "language", "she", "use", "on", "you", "be", "call", "sarcasm!1!1"]
(c44-2 / multi-sentence
       :snt1 (c44-3 / use-01
                    :ARG0 (c44-0 / you)
                    :ARG1 (c44-13 / and
                                  :op1 (c44-11 / stop-01
                                               :mod (c44-1 / full))
                                  :op2 (c44-5 / bracket)
                                  :mod (c44-8 / both)))
       :snt2 (c44-9 / call-01
                    :ARG1 (c44-4 / language
                                 :ARG1-of (c44-12 / use-01
                                                  :ARG0 (c44-7 / she)
                                                  :ARG2 (c44-10 / you)))
                    :ARG2 (c44-6 / sarcasm)
                    :li 1))

# ::snt You shut your fucking jew rat mouth you cum-guzzling whore.
# ::tokens ["You", "shut", "your", "fucking", "jew", "rat", "mouth", "you", "cum", "-", "guzzling", "whore", "."]
# ::lemmas ["you", "shut", "your", "fucking", "jew", "rat", "mouth", "you", "cum", "-", "guzzle", "whore", "."]
(c45-9 / shut-01
       :ARG0 (c45-0 / you
                    :ARG0-of (c45-1 / whore-01)
                    :ARG0-of (c45-8 / gag-01
                                    :ARG1 (c45-7 / cum))
                    :mod (c45-6 / religious-group
                                :name (c45-5 / name
                                             :op1 "Jew")))
       :ARG1 (c45-3 / mouth
                    :part-of c45-0
                    :mod (c45-4 / rat)
                    :mod (c45-2 / fucking))
       :mode imperative)

# ::snt I also come from Australia, where I live, "foul" language is the norm, and we make lists with brackets.
# ::tokens ["I", "also", "come", "from", "Australia", ",", "where", "I", "live", ",", "\"", "foul", "\"", "language", "is", "the", "norm", ",", "and", "we", "make", "lists", "with", "brackets", "."]
# ::lemmas ["i", "also", "come", "from", "Australia", ",", "where", "i", "live", ",", "\"", "foul", "\"", "language", "be", "the", "norm", ",", "and", "we", "make", "list", "with", "bracket", "."]
(c46-12 / and
        :op1 (c46-10 / come-01
                     :ARG1 (c46-6 / i)
                     :ARG3 (c46-9 / country
                                  :name (c46-7 / name
                                               :op1 "Australia")
                                  :location-of (c46-2 / live-01
                                                      :ARG0 c46-6))
                     :mod (c46-5 / also))
        :op2 (c46-8 / norm
                    :domain (c46-11 / language
                                    :mod (c46-3 / foul)))
        :op3 (c46-0 / list-01
                    :ARG0 (c46-1 / we)
                    :instrument (c46-4 / bracket)))

# ::snt Yes, your precious time in your very short life.
# ::tokens ["Yes", ",", "your", "precious", "time", "in", "your", "very", "short", "life", "."]
# ::lemmas ["yes", ",", "your", "precious", "time", "in", "your", "very", "short", "life", "."]
(c47-5 / time
       :poss (c47-0 / you)
       :mod (c47-3 / precious)
       :time (c47-1 / life
                    :poss c47-0
                    :ARG1-of (c47-4 / short-07
                                    :degree (c47-2 / very))))

# ::snt me too
# ::tokens ["me", "too"]
# ::lemmas ["i", "too"]
(c48-1 / i
       :mod (c48-0 / too))

# ::snt Fuck up cunt.
# ::tokens ["Fuck", "up", "cunt", "."]
# ::lemmas ["fuck", "up", "cunt", "."]
(c49-1 / cunt
       :mod (c49-0 / fuck-up-02))

# ::snt You can shut right up too.
# ::tokens ["You", "can", "shut", "right", "up", "too", "."]
# ::lemmas ["you", "can", "shut", "right", "up", "too", "."]
(c50-1 / possible-01
       :ARG1 (c50-3 / shut-up-06
                    :ARG1 (c50-0 / you)
                    :mod (c50-4 / too)
                    :mod (c50-2 / right)))
