# ::snt if it is by any hindu thn they attrubute motive entire religion.but not now..bcause thy r not
# ::tokens ["if", "it", "is", "by", "any", "hindu", "thn", "they", "attrubute", "motive", "entire", "religion.but", "not", "now", "..", "bcause", "thy", "r", "not"]
# ::lemmas ["if", "it", "be", "by", "any", "hindu", "thn", "they", "attrubute", "motive", "entire", "religion.but", "not", "now", "..", "bcause", "thy", "r", "not"]
(c1-9 / contrast-01
      :ARG1 (c1-0 / have-condition-91
                  :ARG2 (c1-4 / oppose-01
                              :ARG0 (c1-8 / religious-group
                                          :name (c1-6 / name
                                                      :op1 "Hindu")
                                          :mod (c1-11 / any))
                              :ARG1 (c1-3 / motive
                                          :mod (c1-5 / entire))))
      :ARG2 (c1-7 / now
                  :polarity -)
      :ARG1-of (c1-10 / cause-01
                      :ARG0 (c1-2 / have-polarity-91
                                  :ARG1 (c1-1 / you)
                                  :ARG2 -)))

# ::snt such peoples demean whole society...they need to dealt with strictness..
# ::tokens ["such", "peoples", "demean", "whole", "society", "...", "they", "need", "to", "dealt", "with", "strictness", ".."]
# ::lemmas ["such", "people", "demean", "whole", "society", "...", "they", "need", "to", "dealt", "with", "strictness", ".."]
(c2-8 / and
      :op1 (c2-6 / demean-01
                 :ARG0 (c2-5 / person
                             :mod (c2-7 / such))
                 :ARG1 (c2-3 / society
                             :mod (c2-0 / whole)))
      :op2 (c2-4 / need-01
                 :ARG0 c2-5
                 :ARG1 (c2-1 / deal-01
                             :ARG0 c2-5
                             :ARG2 (c2-2 / strictness))))

# ::snt tell me how many hindus are doing this kind of things anywhere in the world???
# ::tokens ["tell", "me", "how", "many", "hindus", "are", "doing", "this", "kind", "of", "things", "anywhere", "in", "the", "world", "?", "?", "?"]
# ::lemmas ["tell", "i", "how", "many", "hindu", "be", "do", "this", "kind", "of", "thing", "anywhere", "in", "the", "world", "?", "?", "?"]
(c3-9 / tell-01
      :ARG0 (c3-1 / you)
      :ARG1 (c3-7 / do-02
                  :ARG0 (c3-0 / hindus
                              :quant (c3-10 / amr-unknown))
                  :ARG1 (c3-8 / thing
                              :mod (c3-5 / kind
                                         :mod (c3-6 / this)))
                  :location (c3-3 / anywhere
                                  :location (c3-2 / world)))
      :ARG2 (c3-4 / i)
      :mode imperative)

# ::snt he is just one rouge individual of peace loving religion....isnt it ??
# ::tokens ["he", "is", "just", "one", "rouge", "individual", "of", "peace", "loving", "religion", "....", "isnt", "it", "?", "?"]
# ::lemmas ["he", "be", "just", "one", "rouge", "individual", "of", "peace", "love", "religion", "....", "isnt", "it", "?", "?"]
(c4-4 / individual
      :ARG1-of (c4-7 / rouge-01)
      :domain (c4-0 / he)
      :mod (c4-5 / religion
                 :ARG0-of (c4-2 / love-01
                                :ARG1 (c4-6 / peace)))
      :mod (c4-1 / just)
      :ARG1-of (c4-3 / request-confirmation-91)
      :quant 1)

# ::snt yep...but its free India now .don't give a what they think
# ::tokens ["yep", "...", "but", "its", "free", "India", "now", ".don't", "give", "a", "what", "they", "think"]
# ::lemmas ["yep", "...", "but", "its", "free", "India", "now", ".don't", "give", "a", "what", "they", "think"]
(c5-2 / multi-sentence
      :snt1 (c5-7 / contrast-01
                  :ARG2 (c5-1 / free-04
                              :ARG1 (c5-6 / country
                                          :name (c5-3 / name
                                                      :op1 "India"))
                              :time (c5-4 / now)))
      :snt2 (c5-8 / give-16
                  :ARG0 (c5-0 / you)
                  :ARG1 (c5-10 / thing
                               :ARG1-of (c5-9 / think-01
                                              :ARG0 (c5-5 / they)))
                  :polarity -
                  :mode imperative))

# ::snt let them cook something
# ::tokens ["let", "them", "cook", "something"]
# ::lemmas ["let", "they", "cook", "something"]
(c6-1 / let-01
      :ARG0 (c6-0 / you)
      :ARG1 (c6-2 / cook-01
                  :ARG0 (c6-4 / they)
                  :ARG1 (c6-3 / something))
      :mode imperative)

# ::snt selfies
# ::tokens ["selfies"]
# ::lemmas ["selfie"]
(c7-0 / selfie)

# ::snt i am waiting
# ::tokens ["i", "am", "waiting"]
# ::lemmas ["i", "be", "wait"]
(c8-0 / wait-01
      :ARG1 (c8-1 / i))

# ::snt Jackass is this coz of love jehad.u eternal moron?
# ::tokens ["Jackass", "is", "this", "coz", "of", "love", "jehad.u", "eternal", "moron", "?"]
# ::lemmas ["Jackass", "be", "this", "coz", "of", "love", "jehad.u", "eternal", "moron", "?"]
(c9-6 / say-01
      :ARG0 (c9-4 / i)
      :ARG1 (c9-5 / cause-01
                  :ARG0 (c9-1 / love-01)
                  :ARG1 (c9-2 / moron
                              :mod (c9-3 / eternal)
                              :domain (c9-7 / this))
                  :polarity (c9-8 / amr-unknown))
      :ARG2 (c9-0 / jackass))

# ::snt they are expert in cooking this kind on nonsense thing
# ::tokens ["they", "are", "expert", "in", "cooking", "this", "kind", "on", "nonsense", "thing"]
# ::lemmas ["they", "be", "expert", "in", "cook", "this", "kind", "on", "nonsense", "thing"]
(c10-0 / expert-01
       :ARG1 (c10-6 / they)
       :ARG2 (c10-4 / cook-01
                    :ARG0 c10-6
                    :ARG1 (c10-1 / kind
                                 :mod (c10-5 / this))
                    :ARG3 (c10-3 / thing
                                 :mod (c10-2 / nonsense))))

# ::snt there are many rouge like him are at present making people life hell
# ::tokens ["there", "are", "many", "rouge", "like", "him", "are", "at", "present", "making", "people", "life", "hell"]
# ::lemmas ["there", "be", "many", "rouge", "like", "he", "be", "at", "present", "make", "people", "life", "hell"]
(c11-2 / make-02
       :ARG0 (c11-5 / rouge
                    :quant (c11-4 / many)
                    :ARG1-of (c11-3 / resemble-01
                                    :ARG2 (c11-0 / he)))
       :ARG1 (c11-8 / hell
                    :domain (c11-1 / live-01
                                   :ARG0 (c11-6 / person)))
       :time (c11-7 / present))

# ::snt attack on humanity
# ::tokens ["attack", "on", "humanity"]
# ::lemmas ["attack", "on", "humanity"]
(c12-1 / attack-01
       :ARG1 (c12-0 / humanity))

# ::snt : The Sydney attack gunman identified as Sheikh Man Haron Monis !
# ::tokens [":", "The", "Sydney", "attack", "gunman", "identified", "as", "Sheikh", "Man", "Haron", "Monis", "!"]
# ::lemmas [":", "the", "Sydney", "attack", "gunman", "identify", "as", "Sheikh", "Man", "Haron", "Monis", "!"]
(c13-0 / identify-01
       :ARG1 (c13-5 / gunman
                    :ARG0-of (c13-6 / attack-01
                                    :location (c13-4 / city
                                                     :name (c13-1 / name
                                                                  :op1 "Sydney"))))
       :ARG2 (c13-3 / person
                    :name (c13-2 / name
                                 :op1 "Sheikh"
                                 :op2 "Man"
                                 :op3 "Haron"
                                 :op4 "Monis")))

# ::snt wow,,,,is he from RSS or he is a hindu,,,i want to know from sickulars
# ::tokens ["wow,,,,is", "he", "from", "RSS", "or", "he", "is", "a", "hindu,,,i", "want", "to", "know", "from", "sickulars"]
# ::lemmas ["wow,,,,is", "he", "from", "RSS", "or", "he", "be", "a", "hindu,,,i", "want", "to", "know", "from", "sickular"]
(c14-2 / multi-sentence
       :snt1 (c14-3 / or
                    :op1 (c14-0 / he
                                :source (c14-8 / publication
                                               :name (c14-6 / name
                                                            :op1 "RSS")))
                    :op2 (c14-13 / he
                                 :source (c14-9 / religious-group
                                                :name (c14-7 / name
                                                             :op1 "Hindu"))))
       :snt2 (c14-1 / want-01
                    :ARG0 (c14-4 / i)
                    :ARG1 (c14-11 / know-01
                                  :ARG0 c14-4
                                  :source (c14-12 / person
                                                  :name (c14-10 / name
                                                                :op1 "Sickulars"))))
       :mod (c14-5 / wow
                   :mode expressive))

# ::snt secular pigs will say something just wait
# ::tokens ["secular", "pigs", "will", "say", "something", "just", "wait"]
# ::lemmas ["secular", "pig", "will", "say", "something", "just", "wait"]
(c15-5 / say-01
       :ARG0 (c15-4 / pig
                    :mod (c15-3 / secret))
       :ARG1 (c15-1 / wait-01
                    :ARG1 (c15-2 / you)
                    :mod (c15-0 / just)
                    :mode imperative))

# ::snt : The Sydney attack gunman identified as Sheikh Man Haron Monis scared
# ::tokens [":", "The", "Sydney", "attack", "gunman", "identified", "as", "Sheikh", "Man", "Haron", "Monis", "scared"]
# ::lemmas [":", "the", "Sydney", "attack", "gunman", "identify", "as", "Sheikh", "Man", "Haron", "Monis", "scare"]
(c16-6 / scare-01
       :ARG0 (c16-5 / gunman
                    :ARG1-of (c16-0 / identify-01
                                    :ARG2 (c16-3 / person
                                                 :name (c16-1 / name
                                                              :op1 "Sheikh"
                                                              :op2 "Man"
                                                              :op3 "Haron"
                                                              :op4 "Monis")))
                    :ARG0-of (c16-7 / attack-01
                                    :location (c16-4 / city
                                                     :name (c16-2 / name
                                                                  :op1 "Sydney")))))

# ::snt what a lunatic! Writes his name as Sheikh but acts like a retard.
# ::tokens ["what", "a", "lunatic", "!", "Writes", "his", "name", "as", "Sheikh", "but", "acts", "like", "a", "retard", "."]
# ::lemmas ["what", "a", "lunatic", "!", "write", "his", "name", "as", "Sheikh", "but", "act", "like", "a", "retard", "."]
(c17-3 / multi-sentence
       :snt1 (c17-2 / lunatic
                    :degree (c17-9 / so))
       :snt2 (c17-8 / contrast-01
                    :ARG1 (c17-1 / write-01
                                 :ARG0 (c17-0 / he)
                                 :ARG1 (c17-4 / name-01
                                              :ARG1 c17-0
                                              :ARG2 (c17-6 / person
                                                           :name (c17-5 / name
                                                                        :op1 "Sheikh"))))
                    :ARG2 (c17-10 / act-01
                                  :ARG0 c17-0
                                  :ARG1 (c17-7 / retard-01
                                               :ARG1 c17-0))))

# ::snt ah! Another Muslim Terrorist
# ::tokens ["ah", "!", "Another", "Muslim", "Terrorist"]
# ::lemmas ["ah", "!", "another", "Muslim", "Terrorist"]
(c18-2 / terrorist
       :mod (c18-1 / religious-group
                   :name (c18-0 / name
                                :op1 "Islam"))
       :mod (c18-3 / another))

# ::snt israt ke aabu ko aapna eklauta varish milgaya
# ::tokens ["israt", "ke", "aabu", "ko", "aapna", "eklauta", "varish", "milgaya"]
# ::lemmas ["israt", "ke", "aabu", "ko", "aapna", "eklauta", "varish", "milgaya"]
(c19-5 / and
       :op1 (c19-4 / string-entity
                   :value "israt")
       :op2 (c19-3 / string-entity
                   :value "aabu")
       :op3 (c19-1 / string-entity
                   :value "aapna")
       :op4 (c19-2 / string-entity
                   :value "eklauta")
       :op5 (c19-0 / string-entity
                   :value "milgaya"))
