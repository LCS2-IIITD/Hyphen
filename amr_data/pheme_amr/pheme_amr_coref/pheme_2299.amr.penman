# ::snt BREAKING: Gunman at kosher grocery store threatens to kill hostages if police storm terrorist brothers
# ::tokens ["BREAKING", ":", "Gunman", "at", "kosher", "grocery", "store", "threatens", "to", "kill", "hostages", "if", "police", "storm", "terrorist", "brothers"]
# ::lemmas ["breaking", ":", "Gunman", "at", "kosher", "grocery", "store", "threaten", "to", "kill", "hostage", "if", "police", "storm", "terrorist", "brother"]
(c1-1 / break-01
      :ARG1 (c1-11 / threaten-01
                   :ARG0 (c1-8 / gunman
                               :location (c1-10 / store
                                                :mod (c1-6 / grocery)
                                                :mod (c1-4 / kosher)))
                   :ARG1 (c1-2 / kill-01
                               :ARG0 c1-8
                               :ARG1 (c1-0 / hostage))
                   :condition (c1-3 / storm-02
                                    :ARG0 (c1-5 / police)
                                    :ARG1 (c1-12 / person
                                                 :ARG0-of (c1-13 / have-rel-role-91
                                                                 :ARG1 (c1-9 / terrorist)
                                                                 :ARG2 (c1-7 / brother))))))

# ::snt kosher means false flag.
# ::tokens ["kosher", "means", "false", "flag", "."]
# ::lemmas ["kosher", "mean", "false", "flag", "."]
(c2-2 / mean-01
      :ARG1 (c2-3 / kosher)
      :ARG2 (c2-1 / flag
                  :mod (c2-0 / false)))

# ::snt yes, it's certainly an indicator of how that ones going to pan out.
# ::tokens ["yes", ",", "it", "'s", "certainly", "an", "indicator", "of", "how", "that", "ones", "going", "to", "pan", "out", "."]
# ::lemmas ["yes", ",", "it", "be", "certainly", "an", "indicator", "of", "how", "that", "one", "go", "to", "pan", "out", "."]
(c3-1 / indicate-01
      :ARG0 (c3-4 / it)
      :ARG1 (c3-6 / thing
                  :manner-of (c3-2 / pan-out-02
                                   :ARG1 (c3-0 / one
                                               :mod (c3-5 / that))))
      :mod (c3-3 / certain))

# ::snt What a fucking nightmare
# ::tokens ["What", "a", "fucking", "nightmare"]
# ::lemmas ["what", "a", "fucking", "nightmare"]
(c4-0 / nightmare
      :mod (c4-1 / fucking
                 :degree (c4-2 / so)
                 :mode expressive))

# ::snt On the face of it that's unusual because Islamic terrorists are usually suicidal. So I suspect it's a deliberately /2
# ::tokens ["On", "the", "face", "of", "it", "that", "'s", "unusual", "because", "Islamic", "terrorists", "are", "usually", "suicidal", ".", "So", "I", "suspect", "it", "'s", "a", "deliberately", "/2"]
# ::lemmas ["on", "the", "face", "of", "it", "that", "be", "unusual", "because", "Islamic", "terrorist", "be", "usually", "suicidal", ".", "so", "i", "suspect", "it", "be", "a", "deliberately", "/2"]
(c5-1 / multi-sentence
      :snt1 (c5-8 / cause-01
                  :ARG0 (c5-12 / suicidal
                               :domain (c5-13 / terrorist
                                              :mod (c5-7 / religious-group
                                                         :name (c5-6 / name
                                                                     :op1 "Islamic")))
                               :mod (c5-2 / usual
                                          :ARG1-of c5-8))
                  :domain (c5-11 / that)
                  :location (c5-0 / face)
                  :polarity -)
      :snt2 (c5-4 / suspect-01
                  :ARG0 (c5-5 / i)
                  :ARG1 (c5-3 / slash
                              :domain (c5-9 / it)
                              :manner (c5-10 / deliberate)
                              :op1 2
                              :op2 2)))

# ::snt if u can see well the first picture is about Paris attack and it's hash tag is the one stop killing innocent ppl
# ::tokens ["if", "u", "can", "see", "well", "the", "first", "picture", "is", "about", "Paris", "attack", "and", "it", "'s", "hash", "tag", "is", "the", "one", "stop", "killing", "innocent", "ppl"]
# ::lemmas ["if", "u", "can", "see", "well", "the", "first", "picture", "be", "about", "Paris", "attack", "and", "it", "be", "hash", "tag", "be", "the", "one", "stop", "kill", "innocent", "ppl"]
(c6-16 / and
       :op1 (c6-12 / concern-02
                   :ARG0 (c6-10 / picture
                                :ord (c6-4 / ordinal-entity
                                           :value 1))
                   :ARG1 (c6-6 / attack-01
                               :location (c6-11 / city
                                                :name (c6-9 / name
                                                            :op1 "Paris"))))
       :op2 (c6-13 / stop-01
                   :ARG0 (c6-14 / tag
                                :mod (c6-0 / hash)
                                :poss c6-10)
                   :ARG1 (c6-8 / kill-01
                               :ARG1 (c6-15 / person
                                            :ARG1-of (c6-7 / innocent-01))))
       :condition (c6-3 / possible-01
                        :ARG1 (c6-5 / see-01
                                    :ARG0 (c6-1 / you)
                                    :ARG1-of (c6-2 / well-09))))

# ::snt Nothing excuses the murder of innocent people, whether it is these poor hostages in France or civilians in Gaza.
# ::tokens ["Nothing", "excuses", "the", "murder", "of", "innocent", "people", ",", "whether", "it", "is", "these", "poor", "hostages", "in", "France", "or", "civilians", "in", "Gaza", "."]
# ::lemmas ["nothing", "excuse", "the", "murder", "of", "innocent", "people", ",", "whether", "it", "be", "these", "poor", "hostage", "in", "France", "or", "civilian", "in", "Gaza", "."]
(c7-3 / excuse-02
      :ARG0 (c7-5 / nothing)
      :ARG1 (c7-1 / murder-01
                  :ARG1 (c7-7 / person
                              :ARG1-of (c7-4 / innocent-01)))
      :ARG2 (c7-2 / or
                  :op1 (c7-0 / hostage
                             :mod (c7-13 / poor)
                             :location (c7-9 / country
                                             :name (c7-6 / name
                                                         :op1 "France"))
                             :mod (c7-12 / this))
                  :op2 (c7-8 / civilian
                             :location (c7-11 / country-region
                                              :name (c7-10 / name
                                                           :op1 "Gaza"))
                             :mod c7-12)))

# ::snt Mohammed is that Guy who promotes murdering women+children in the name of Peace....
# ::tokens ["Mohammed", "is", "that", "Guy", "who", "promotes", "murdering", "women+children", "in", "the", "name", "of", "Peace", "...."]
# ::lemmas ["Mohammed", "be", "that", "Guy", "who", "promote", "murder", "women+children", "in", "the", "name", "of", "Peace", "...."]
(c8-6 / guy
      :domain (c8-4 / person
                    :name (c8-3 / name
                                :op1 "Mohammed"))
      :ARG0-of (c8-7 / promote-02
                     :ARG1 (c8-1 / murder-01
                                 :ARG1 (c8-8 / and
                                             :op1 (c8-0 / woman)
                                             :op2 (c8-5 / child))
                                 :purpose (c8-2 / peace))))

# ::snt : UPDATE: Gunman in kosher grocery store is demanding the release of the suspects in shooting" &lt;--
# ::tokens [":", "UPDATE", ":", "Gunman", "in", "kosher", "grocery", "store", "is", "demanding", "the", "release", "of", "the", "suspects", "in", "shooting", "\"", "&", "lt;--"]
# ::lemmas [":", "update", ":", "Gunman", "in", "kosher", "grocery", "store", "be", "demand", "the", "release", "of", "the", "suspect", "in", "shoot", "\"", "&", "lt;--"]
(c9-1 / multi-sentence
      :snt1 (c9-11 / thing
                   :ARG1-of (c9-2 / update-02))
      :snt2 (c9-7 / demand-01
                  :ARG0 (c9-6 / person
                              :name (c9-5 / name
                                          :op1 "Gunny")
                              :location (c9-10 / store
                                               :mod (c9-9 / grocery)
                                               :mod (c9-4 / kosher)))
                  :ARG1 (c9-8 / release-01
                              :ARG1 (c9-12 / person
                                           :ARG2-of (c9-3 / suspect-01
                                                          :ARG1 (c9-0 / shoot-02
                                                                      :ARG0 c9-12))))))

# ::snt Well done. This kind of information is important to remain secret for the sake of the safety of the hostages!
# ::tokens ["Well", "done", ".", "This", "kind", "of", "information", "is", "important", "to", "remain", "secret", "for", "the", "sake", "of", "the", "safety", "of", "the", "hostages", "!"]
# ::lemmas ["well", "do", ".", "this", "kind", "of", "information", "be", "important", "to", "remain", "secret", "for", "the", "sake", "of", "the", "safety", "of", "the", "hostage", "!"]
(c10-2 / multi-sentence
       :snt1 (c10-6 / do-02
                    :ARG1-of (c10-1 / well-09))
       :snt2 (c10-4 / important-01
                    :ARG1 (c10-5 / remain-01
                                 :ARG1 (c10-7 / information
                                              :mod (c10-9 / kind
                                                          :mod (c10-8 / this)))
                                 :ARG3 (c10-10 / secret)
                                 :purpose (c10-3 / safe-01
                                                 :ARG1 (c10-0 / hostage)))))

# ::snt Gegenseitige Deckung .. eine Art Feuerschutz. Wird schwierig f. die Blauen.
# ::tokens ["Gegenseitige", "Deckung", "..", "eine", "Art", "Feuerschutz", ".", "Wird", "schwierig", "f.", "die", "Blauen", "."]
# ::lemmas ["Gegenseitige", "Deckung", "..", "eine", "Art", "Feuerschutz", ".", "Wird", "schwierig", "f.", "die", "Blauen", "."]
(c11-1 / multi-sentence
       :snt1 (c11-4 / person
                    :name (c11-2 / name
                                 :op1 "Gegenseitige"
                                 :op2 "Deckung")
                    :ARG1-of (c11-5 / mean-01
                                    :ARG2 (c11-8 / person
                                                 :name (c11-3 / name
                                                              :op1 "Art"
                                                              :op2 "Feuerschutz"))))
       :snt2 (c11-0 / wird
                    :mod (c11-7 / schwierig)
                    :mod (c11-6 / die-blauen)))

# ::snt We all heard of Mexican standoff. This is French version of it
# ::tokens ["We", "all", "heard", "of", "Mexican", "standoff", ".", "This", "is", "French", "version", "of", "it"]
# ::lemmas ["we", "all", "hear", "of", "Mexican", "standoff", ".", "this", "be", "French", "version", "of", "it"]
(c12-2 / multi-sentence
       :snt1 (c12-0 / hear-01
                    :ARG0 (c12-1 / we
                                 :mod (c12-11 / all))
                    :ARG1 (c12-9 / standoff
                                 :location (c12-8 / country
                                                  :name (c12-4 / name
                                                               :op1 "Mexico"))))
       :snt2 (c12-5 / version
                    :mod (c12-7 / country
                                :name (c12-6 / name
                                             :op1 "France"))
                    :mod (c12-10 / this)
                    :topic (c12-3 / it)))

# ::snt When will countries &amp; the decent Ppl w/in realize MOSLEMS all follow Koran. Which means our death. Deport the bastards
# ::tokens ["When", "will", "countries", "&", "amp", ";", "the", "decent", "Ppl", "w", "/", "in", "realize", "MOSLEMS", "all", "follow", "Koran", ".", "Which", "means", "our", "death", ".", "Deport", "the", "bastards"]
# ::lemmas ["when", "will", "country", "&", "amp", ";", "the", "decent", "Ppl", "w", "/", "in", "realize", "MOSLEMS", "all", "follow", "Koran", ".", "which", "mean", "our", "death", ".", "deport", "the", "bastard"]
(c13-1 / multi-sentence
       :snt1 (c13-13 / realize-01
                     :ARG0 (c13-5 / and
                                  :op1 (c13-20 / country)
                                  :op2 (c13-2 / person
                                              :mod (c13-3 / decent)
                                              :ARG0-of (c13-4 / post-01
                                                              :manner (c13-19 / original))))
                     :ARG1 (c13-6 / follow-02
                                  :ARG0 (c13-8 / person
                                               :ARG0-of (c13-12 / murder-01)
                                               :mod (c13-16 / all))
                                  :ARG1 (c13-9 / book
                                               :name (c13-10 / name
                                                             :op1 "Koran")))
                     :time (c13-11 / amr-unknown))
       :snt2 (c13-7 / mean-01
                    :ARG1 c13-6
                    :ARG2 (c13-0 / die-01
                                 :ARG1 (c13-15 / we)))
       :snt3 (c13-14 / deport-01
                     :ARG0 (c13-18 / you)
                     :ARG1 (c13-17 / bastard)
                     :mode imperative))

# ::snt dont waste time with A Hindu laim price ...they eat shit and urine of animals and spread Hates in world
# ::tokens ["do", "nt", "waste", "time", "with", "A", "Hindu", "laim", "price", "...", "they", "eat", "shit", "and", "urine", "of", "animals", "and", "spread", "Hates", "in", "world"]
# ::lemmas ["do", "not", "waste", "time", "with", "a", "Hindu", "laim", "price", "...", "they", "eat", "shit", "and", "urine", "of", "animal", "and", "spread", "Hates", "in", "world"]
(c14-1 / waste-01
       :ARG0 (c14-2 / you)
       :ARG1 (c14-16 / time)
       :ARG2 (c14-11 / price-01
                     :ARG1 (c14-3 / laim-00
                                  :ARG0 (c14-12 / religious-group
                                                :name (c14-9 / name
                                                             :op1 "Hindu"))))
       :ARG1-of (c14-13 / cause-01
                        :ARG0 (c14-17 / and
                                      :op1 (c14-5 / eat-01
                                                  :ARG0 (c14-14 / they)
                                                  :ARG1 (c14-7 / and
                                                               :op1 (c14-15 / shit)
                                                               :op2 (c14-4 / urine)
                                                               :part-of (c14-10 / animal)))
                                      :op2 (c14-6 / spread-02
                                                  :ARG0 c14-14
                                                  :ARG1 (c14-0 / hate)
                                                  :location (c14-8 / world))))
       :polarity -
       :mode imperative)

# ::snt fuck you sarracen and stop islamization
# ::tokens ["fuck", "you", "sarracen", "and", "stop", "islamization"]
# ::lemmas ["fuck", "you", "sarracen", "and", "stop", "islamization"]
(c15-6 / say-01
       :ARG0 (c15-3 / i)
       :ARG1 (c15-7 / and
                    :op1 (c15-0 / fuck-01
                                :ARG1 (c15-5 / person
                                             :name (c15-4 / name
                                                          :op1 "sarracen"))
                                :mode imperative
                                :mode expressive)
                    :op2 (c15-1 / stop-01
                                :ARG0 c15-5
                                :ARG1 (c15-2 / amlamize-01)
                                :mode imperative))
       :ARG2 c15-5)

# ::snt Who buys Kosher? MT : BREAKING: Gunman at kosher grocery store threatens to kill hostages if police storm terrorist brothers.
# ::tokens ["Who", "buys", "Kosher", "?", "MT", ":", "BREAKING", ":", "Gunman", "at", "kosher", "grocery", "store", "threatens", "to", "kill", "hostages", "if", "police", "storm", "terrorist", "brothers", "."]
# ::lemmas ["who", "buy", "Kosher", "?", "MT", ":", "breaking", ":", "Gunman", "at", "kosher", "grocery", "store", "threaten", "to", "kill", "hostage", "if", "police", "storm", "terrorist", "brother", "."]
(c16-0 / multi-sentence
       :snt1 (c16-9 / buy-01
                    :ARG0 (c16-6 / amr-unknown)
                    :ARG1 (c16-1 / product
                                 :name (c16-11 / name
                                               :op1 "Kosher")))
       :snt2 (c16-15 / break-13
                     :ARG1 (c16-19 / threaten-01
                                   :ARG0 (c16-4 / person
                                                :ARG0-of (c16-12 / gun-02)
                                                :location (c16-3 / store
                                                                 :mod (c16-2 / grocery)
                                                                 :mod (c16-16 / kosher)))
                                   :ARG1 (c16-14 / kill-01
                                                 :ARG0 c16-4
                                                 :ARG1 (c16-7 / hostage))
                                   :condition (c16-10 / storm-02
                                                      :ARG0 (c16-8 / police)
                                                      :ARG1 (c16-13 / person
                                                                    :ARG0-of (c16-5 / have-rel-role-91
                                                                                    :ARG1 (c16-17 / terrorist)
                                                                                    :ARG2 (c16-18 / brother)))))))

# ::snt /2 impossible demand to "justify" a massacre when it's refused.
# ::tokens ["/2", "impossible", "demand", "to", "\"", "justify", "\"", "a", "massacre", "when", "it", "'s", "refused", "."]
# ::lemmas ["/2", "impossible", "demand", "to", "\"", "justify", "\"", "a", "massacre", "when", "it", "be", "refuse", "."]
(c17-2 / possible-01
       :ARG1 (c17-4 / demand-01
                    :ARG1 (c17-0 / justify-01
                                 :ARG1 (c17-1 / massacre-01))
                    :time (c17-3 / refuse-01
                                 :ARG1 c17-1))
       :polarity -
       :li 2)

# ::snt Yeah, that's going to happen! MT : Gunman in kosher grocery store is demanding the release of the suspects in shooting
# ::tokens ["Yeah", ",", "that", "'s", "going", "to", "happen", "!", "MT", ":", "Gunman", "in", "kosher", "grocery", "store", "is", "demanding", "the", "release", "of", "the", "suspects", "in", "shooting"]
# ::lemmas ["yeah", ",", "that", "be", "go", "to", "happen", "!", "MT", ":", "Gunman", "in", "kosher", "grocery", "store", "be", "demand", "the", "release", "of", "the", "suspect", "in", "shoot"]
(c18-2 / multi-sentence
       :snt1 (c18-13 / that
                     :mod (c18-0 / yeah))
       :snt2 (c18-9 / demand-01
                    :ARG0 (c18-8 / person
                                 :name (c18-6 / name
                                              :op1 "Gunny")
                                 :location (c18-12 / store
                                                   :mod (c18-11 / grocery)
                                                   :mod (c18-5 / kosher)))
                    :ARG1 (c18-10 / release-01
                                  :ARG1 (c18-14 / person
                                                :ARG2-of (c18-4 / suspect-01
                                                                :ARG1 (c18-1 / shoot-02
                                                                             :ARG0 c18-14))))
                    :source (c18-3 / state
                                   :name (c18-7 / name
                                                :op1 "Montana"))))

# ::snt huh he doesn't even know who killed the journalists he's trying to get media coverage just kill him
# ::tokens ["huh", "he", "does", "n't", "even", "know", "who", "killed", "the", "journalists", "he", "'s", "trying", "to", "get", "media", "coverage", "just", "kill", "him"]
# ::lemmas ["huh", "he", "do", "not", "even", "know", "who", "kill", "the", "journalist", "he", "be", "try", "to", "get", "media", "coverage", "just", "kill", "he"]
(c19-9 / know-01
       :ARG0 (c19-0 / he)
       :ARG1 (c19-5 / person
                    :ARG0-of (c19-3 / kill-01
                                    :ARG1 (c19-1 / journalist
                                                 :ARG1-of (c19-6 / cover-03
                                                                 :ARG0 (c19-2 / media)
                                                                 :ARG1-of (c19-7 / try-01
                                                                                 :ARG0 c19-0)))))
       :mod (c19-4 / even)
       :mod (c19-11 / huh
                    :mode expressive)
       :ARG0-of (c19-8 / kill-01
                       :ARG1 c19-0
                       :mod (c19-10 / just))
       :polarity -)

# ::snt Right a tradgedy happening in France and you post this. This is the reason the world hates Islam.
# ::tokens ["Right", "a", "tradgedy", "happening", "in", "France", "and", "you", "post", "this", ".", "This", "is", "the", "reason", "the", "world", "hates", "Islam", "."]
# ::lemmas ["right", "a", "tradgedy", "happen", "in", "France", "and", "you", "post", "this", ".", "this", "be", "the", "reason", "the", "world", "hate", "Islam", "."]
(c20-3 / multi-sentence
       :snt1 (c20-15 / and
                     :op1 (c20-4 / event
                                 :location (c20-10 / country
                                                   :name (c20-6 / name
                                                                :op1 "France"))
                                 :ARG1-of (c20-14 / tradgey-00)
                                 :mod (c20-9 / right))
                     :op2 (c20-8 / post-01
                                 :ARG0 (c20-1 / you)
                                 :ARG1 (c20-13 / this)))
       :snt2 (c20-11 / cause-01
                     :ARG0 (c20-7 / this)
                     :ARG1 (c20-0 / hate-01
                                  :ARG0 (c20-2 / world)
                                  :ARG1 (c20-5 / religious-group
                                               :name (c20-12 / name
                                                             :op1 "Islam")))))

# ::snt Two wrongs won't suddenly become right and two tragedies can never be compared - neither by quantity nor by quality.
# ::tokens ["Two", "wrongs", "wo", "n't", "suddenly", "become", "right", "and", "two", "tragedies", "can", "never", "be", "compared", "-", "neither", "by", "quantity", "nor", "by", "quality", "."]
# ::lemmas ["Two", "wrong", "will", "not", "suddenly", "become", "right", "and", "two", "tragedy", "can", "never", "be", "compare", "-", "neither", "by", "quantity", "nor", "by", "quality", "."]
(c21-11 / and
        :op1 (c21-1 / become-01
                    :ARG1 (c21-0 / wrong-02
                                 :quant 2)
                    :ARG2 (c21-6 / right-06
                                 :ARG1 c21-0)
                    :manner (c21-8 / sudden)
                    :polarity -)
        :op2 (c21-5 / possible-01
                    :ARG1 (c21-7 / compare-01
                                 :ARG1 (c21-10 / tragedy
                                               :quant 2)
                                 :manner (c21-2 / or
                                                :op1 (c21-4 / quantity
                                                            :polarity -)
                                                :op2 (c21-9 / quality
                                                            :polarity -)))
                    :time (c21-3 / ever)
                    :polarity -))

# ::snt where's Eddy Caplan when you need him
# ::tokens ["where", "'s", "Eddy", "Caplan", "when", "you", "need", "him"]
# ::lemmas ["where", "be", "Eddy", "Caplan", "when", "you", "need", "he"]
(c22-1 / be-located-at-91
       :ARG1 (c22-4 / person
                    :name (c22-2 / name
                                 :op1 "Eddy"
                                 :op2 "Caplan"))
       :ARG2 (c22-5 / amr-unknown)
       :time (c22-3 / need-01
                    :ARG0 (c22-0 / you)
                    :ARG1 c22-4))

# ::snt ://
# ::tokens [":", "//"]
# ::lemmas [":", "//"]
(c23-0 / emoticon
       :value "://")
