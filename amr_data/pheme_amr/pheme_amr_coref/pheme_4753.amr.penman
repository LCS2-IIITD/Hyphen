# ::snt Cop just pulled the trigger on a gun, which happened to fire a bullet, which incidentally hit someone. Completely unrelated.
# ::tokens ["Cop", "just", "pulled", "the", "trigger", "on", "a", "gun", ",", "which", "happened", "to", "fire", "a", "bullet", ",", "which", "incidentally", "hit", "someone", ".", "Completely", "unrelated", "."]
# ::lemmas ["Cop", "just", "pull", "the", "trigger", "on", "a", "gun", ",", "which", "happen", "to", "fire", "a", "bullet", ",", "which", "incidentally", "hit", "someone", ".", "completely", "unrelated", "."]
(c1-3 / multi-sentence
      :snt1 (c1-7 / pull-01
                  :ARG0 (c1-9 / cop)
                  :ARG1 (c1-13 / trigger)
                  :ARG2 (c1-10 / gun)
                  :mod (c1-0 / just)
                  :ARG0-of (c1-2 / fire-01
                                 :ARG1 (c1-4 / bullet
                                             :ARG0-of (c1-1 / hit-01
                                                            :ARG1 (c1-12 / someone)
                                                            :manner (c1-6 / incidental)))))
      :snt2 (c1-8 / relate-01
                  :ARG2 (c1-5 / event)
                  :ARG1-of (c1-11 / complete-02)
                  :polarity -))

# ::snt I think you mean before they are charged, which is just an accusation by the state.
# ::tokens ["I", "think", "you", "mean", "before", "they", "are", "charged", ",", "which", "is", "just", "an", "accusation", "by", "the", "state", "."]
# ::lemmas ["i", "think", "you", "mean", "before", "they", "be", "charge", ",", "which", "be", "just", "an", "accusation", "by", "the", "state", "."]
(c2-9 / think-01
      :ARG0 (c2-4 / i)
      :ARG1 (c2-2 / mean-01
                  :ARG0 (c2-1 / you)
                  :ARG2 (c2-3 / be-temporally-at-91
                              :ARG2 (c2-5 / before
                                          :op1 (c2-6 / charge-05
                                                     :ARG1 (c2-7 / they)))
                              :ARG2-of (c2-10 / accuse-01
                                              :ARG0 (c2-8 / state)
                                              :mod (c2-0 / just)))))

# ::snt Are you aware that the officer that shot is also black?
# ::tokens ["Are", "you", "aware", "that", "the", "officer", "that", "shot", "is", "also", "black", "?"]
# ::lemmas ["be", "you", "aware", "that", "the", "officer", "that", "shot", "be", "also", "black", "?"]
(c3-4 / realize-01
      :ARG0 (c3-0 / you)
      :ARG1 (c3-1 / black-05
                  :ARG1 (c3-2 / officer
                              :ARG0-of (c3-5 / shoot-02))
                  :mod (c3-6 / also))
      :polarity (c3-3 / amr-unknown))

# ::snt accusing people of murder before a conviction is a particularly stupid way to waste taxpayers money
# ::tokens ["accusing", "people", "of", "murder", "before", "a", "conviction", "is", "a", "particularly", "stupid", "way", "to", "waste", "taxpayers", "money"]
# ::lemmas ["accuse", "people", "of", "murder", "before", "a", "conviction", "be", "a", "particularly", "stupid", "way", "to", "waste", "taxpayer", "money"]
(c4-0 / way
      :manner-of (c4-4 / waste-01
                       :ARG1 (c4-1 / money)
                       :ARG2 (c4-5 / person
                                   :ARG0-of (c4-11 / pay-01
                                                   :ARG1 (c4-10 / tax))))
      :domain (c4-12 / accuse-01
                     :ARG1 (c4-2 / person)
                     :ARG2 (c4-6 / murder-01
                                 :ARG0 c4-2)
                     :time (c4-3 / before
                                 :op1 (c4-7 / convict-01
                                            :ARG1 c4-2)))
      :mod (c4-8 / stupid
                 :mod (c4-9 / particular)))

# ::snt "murder" requires intent; IMO, given disturbances, pretty reckless to incite w/o clear facts
# ::tokens ["\"", "murder", "\"", "requires", "intent", ";", "IMO", ",", "given", "disturbances", ",", "pretty", "reckless", "to", "incite", "w/o", "clear", "facts"]
# ::lemmas ["\"", "murder", "\"", "require", "intent", ";", "imo", ",", "give", "disturbance", ",", "pretty", "reckless", "to", "incite", "w/o", "clear", "fact"]
(c5-7 / require-01
      :ARG0 (c5-1 / murder-01)
      :ARG1 (c5-12 / thing
                   :ARG1-of (c5-4 / intent-02))
      :ARG1-of (c5-3 / opine-01
                     :ARG0 (c5-9 / i)
                     :ARG1-of (c5-8 / cause-01
                                    :ARG0 (c5-10 / disturb-01))
                     :mod (c5-5 / reckless
                                :degree (c5-6 / pretty)
                                :domain (c5-0 / incite-01
                                              :ARG1 (c5-2 / fact
                                                          :ARG1-of (c5-11 / clear-06))))))

# ::snt the lady before was emoting, which doesn't help in such circumstances
# ::tokens ["the", "lady", "before", "was", "emoting", ",", "which", "does", "n't", "help", "in", "such", "circumstances"]
# ::lemmas ["the", "lady", "before", "be", "emote", ",", "which", "do", "not", "help", "in", "such", "circumstance"]
(c6-3 / emote-01
      :ARG0 (c6-1 / lady
                  :time (c6-2 / before))
      :ARG0-of (c6-0 / help-01
                     :condition (c6-4 / circumstance
                                      :mod (c6-5 / such))
                     :polarity -))

# ::snt Has a cop ever been convicted of murder due to a shooting in the line of duty? Cursory Google search turned up nothing.
# ::tokens ["Has", "a", "cop", "ever", "been", "convicted", "of", "murder", "due", "to", "a", "shooting", "in", "the", "line", "of", "duty", "?", "Cursory", "Google", "search", "turned", "up", "nothing", "."]
# ::lemmas ["have", "a", "cop", "ever", "be", "convict", "of", "murder", "due", "to", "a", "shooting", "in", "the", "line", "of", "duty", "?", "Cursory", "Google", "search", "turn", "up", "nothing", "."]
(c7-1 / multi-sentence
      :snt1 (c7-7 / convict-01
                  :polarity (c7-14 / amr-unknown)
                  :ARG1 (c7-6 / cop)
                  :ARG2 (c7-5 / murder-01
                              :ARG0 c7-6)
                  :time (c7-2 / ever)
                  :ARG1-of (c7-11 / cause-01
                                  :ARG0 (c7-13 / shoot-02
                                               :ARG0 c7-6
                                               :ARG1-of (c7-0 / line-up-02
                                                              :ARG2 (c7-8 / duty)))))
      :snt2 (c7-12 / turn-up-13
                   :ARG1 (c7-9 / google-01
                               :ARG1 (c7-10 / thing
                                            :name (c7-3 / name
                                                        :op1 "Google"))
                               :mod (c7-15 / cursory))
                   :ARG2 (c7-4 / nothing)))

# ::snt I've read quite a few more actually...
# ::tokens ["I", "'ve", "read", "quite", "a", "few", "more", "actually", "..."]
# ::lemmas ["i", "'ve", "read", "quite", "a", "few", "more", "actually", "..."]
(c8-4 / read-01
      :ARG0 (c8-3 / i)
      :ARG1 (c8-1 / more
                  :quant (c8-0 / few
                               :degree (c8-2 / quite)))
      :ARG1-of (c8-5 / actual-02))

# ::snt that's kind of my point though. That statement should have never singled out a specific race.
# ::tokens ["that", "'s", "kind", "of", "my", "point", "though", ".", "That", "statement", "should", "have", "never", "singled", "out", "a", "specific", "race", "."]
# ::lemmas ["that", "be", "kind", "of", "my", "point", "though", ".", "that", "statement", "should", "have", "never", "single", "out", "a", "specific", "race", "."]
(c9-2 / multi-sentence
      :snt1 (c9-0 / have-concession-91
                  :ARG2 (c9-9 / point-04
                              :ARG0 (c9-5 / i)
                              :ARG1 (c9-13 / that)
                              :degree (c9-6 / kind-of)))
      :snt2 (c9-10 / recommend-01
                   :ARG1 (c9-12 / single-out-01
                                :ARG0 (c9-11 / thing
                                             :ARG1-of (c9-3 / state-01)
                                             :mod (c9-8 / that))
                                :ARG1 (c9-7 / race
                                            :ARG1-of (c9-1 / specific-02))
                                :time (c9-4 / ever)
                                :polarity -)))

# ::snt lol I wouldn't deny that
# ::tokens ["lol", "I", "would", "n't", "deny", "that"]
# ::lemmas ["lol", "i", "would", "not", "deny", "that"]
(c10-0 / deny-01
       :ARG0 (c10-3 / i)
       :ARG1 (c10-1 / that)
       :manner (c10-2 / loud)
       :polarity -)

# ::snt Silly-poo! The gun fired when it was in the officer's hands. You can't say the cop actively pulled it!
# ::tokens ["Silly", "-", "poo", "!", "The", "gun", "fired", "when", "it", "was", "in", "the", "officer", "'s", "hands", ".", "You", "ca", "n't", "say", "the", "cop", "actively", "pulled", "it", "!"]
# ::lemmas ["Silly", "-", "poo", "!", "the", "gun", "fire", "when", "it", "be", "in", "the", "officer", "'s", "hand", ".", "you", "can", "not", "say", "the", "cop", "actively", "pull", "it", "!"]
(c11-2 / multi-sentence
       :snt1 (c11-9 / silly
                    :mode expressive)
       :snt2 (c11-1 / fire-01
                    :ARG1 (c11-8 / gun)
                    :time (c11-5 / in-ones-hands-04
                                 :ARG0 (c11-3 / officer)
                                 :ARG1 c11-8))
       :snt3 (c11-6 / possible-01
                    :ARG1 (c11-4 / say-01
                                 :ARG0 (c11-0 / you)
                                 :ARG1 (c11-10 / pull-06
                                               :ARG0 (c11-7 / cop)
                                               :ARG1 c11-8
                                               :ARG1-of (c11-11 / activity-06
                                                                :ARG0 c11-7)))
                    :polarity -))

# ::snt There may be justification, e.g. self-defense, but I'm pretty sure the officer didn't accidentally fire four shots at Brown.
# ::tokens ["There", "may", "be", "justification", ",", "e.g.", "self", "-", "defense", ",", "but", "I", "'m", "pretty", "sure", "the", "officer", "did", "n't", "accidentally", "fire", "four", "shots", "at", "Brown", "."]
# ::lemmas ["there", "may", "be", "justification", ",", "e.g.", "self", "-", "defense", ",", "but", "i", "be", "pretty", "sure", "the", "officer", "do", "not", "accidentally", "fire", "four", "shot", "at", "Brown", "."]
(c12-10 / contrast-01
        :ARG1 (c12-8 / possible-01
                     :ARG1 (c12-0 / justify-01
                                  :example (c12-9 / defend-01
                                                  :ARG1 (c12-11 / self))))
        :ARG2 (c12-5 / sure-02
                     :ARG0 (c12-6 / i)
                     :ARG1 (c12-1 / fire-01
                                  :ARG0 (c12-4 / officer)
                                  :ARG1 (c12-2 / shoot-01
                                               :ARG0 c12-4
                                               :ARG2 (c12-12 / person
                                                             :name (c12-7 / name
                                                                          :op1 "Brown"))
                                               :quant 4)
                                  :manner (c12-13 / accidental)
                                  :polarity -)
                     :degree (c12-3 / pretty)))

# ::snt in beaver creek Ohio police shot a black male and ARE calling it murder. So should Ferguson.
# ::tokens ["in", "beaver", "creek", "Ohio", "police", "shot", "a", "black", "male", "and", "ARE", "calling", "it", "murder", ".", "So", "should", "Ferguson", "."]
# ::lemmas ["in", "beaver", "creek", "Ohio", "police", "shoot", "a", "black", "male", "and", "be", "call", "it", "murder", ".", "so", "should", "Ferguson", "."]
(c13-1 / multi-sentence
       :snt1 (c13-14 / and
                     :op1 (c13-13 / shoot-02
                                  :ARG0 (c13-7 / police
                                               :mod (c13-3 / state
                                                           :name (c13-5 / name
                                                                        :op1 "Ohio")))
                                  :ARG1 (c13-8 / male
                                               :ARG1-of (c13-2 / black-05))
                                  :location (c13-9 / creek
                                                   :name (c13-6 / name
                                                                :op1 "Beaver"
                                                                :op2 " creek")))
                     :op2 (c13-10 / call-01
                                  :ARG0 c13-7
                                  :ARG1 c13-13
                                  :ARG2 (c13-0 / murder-01
                                               :ARG0 c13-7
                                               :ARG1 c13-8)))
       :snt2 (c13-11 / recommend-01
                     :ARG1 (c13-4 / event
                                  :name (c13-12 / name
                                                :op1 "Ferguson"))))

# ::snt oh right because white are murderd. This is the most ignorant statement I've read.
# ::tokens ["oh", "right", "because", "white", "are", "murderd", ".", "This", "is", "the", "most", "ignorant", "statement", "I", "'ve", "read", "."]
# ::lemmas ["oh", "right", "because", "white", "be", "murderd", ".", "this", "be", "the", "most", "ignorant", "statement", "i", "'ve", "read", "."]
(c14-3 / multi-sentence
       :snt1 (c14-8 / right-06
                    :ARG2 (c14-9 / cause-01
                                 :ARG0 (c14-7 / murder-01
                                              :ARG1 (c14-10 / person
                                                            :ARG1-of (c14-1 / white-02))))
                    :mod (c14-4 / oh
                                :mode expressive))
       :snt2 (c14-12 / state-01
                     :ARG1 (c14-13 / this)
                     :ARG1-of (c14-0 / have-degree-91
                                     :ARG2 (c14-5 / ignorant-02
                                                  :ARG1 c14-12)
                                     :ARG3 (c14-2 / most)
                                     :ARG5 (c14-6 / read-01
                                                  :ARG0 (c14-11 / i)))))

# ::snt murder requires *intent* to *kill,* doubt even bad bigots would think present snafu worth that
# ::tokens ["murder", "requires", "*", "intent", "*", "to", "*", "kill", ",", "*", "doubt", "even", "bad", "bigots", "would", "think", "present", "snafu", "worth", "that"]
# ::lemmas ["murder", "require", "*", "intent", "*", "to", "*", "kill", ",", "*", "doubt", "even", "bad", "bigot", "would", "think", "present", "snafu", "worth", "that"]
(c15-7 / require-01
       :ARG0 (c15-1 / murder-01)
       :ARG1 (c15-4 / intend-01
                    :ARG1 (c15-11 / kill-01))
       :ARG1-of (c15-6 / doubt-01
                       :ARG0 (c15-8 / i)
                       :ARG1 (c15-10 / think-01
                                     :ARG0 (c15-2 / bigot
                                                  :ARG1-of (c15-9 / bad-07)
                                                  :mod (c15-3 / even))
                                     :ARG1 (c15-0 / worth-02
                                                  :ARG1 (c15-12 / snafu
                                                                :time (c15-5 / present))))))

# ::snt Time to End Police Militarization Now!
# ::tokens ["Time", "to", "End", "Police", "Militarization", "Now", "!"]
# ::lemmas ["time", "to", "end", "Police", "Militarization", "now", "!"]
(c16-4 / time
       :time-of (c16-1 / end-01
                       :ARG1 (c16-0 / Militarization
                                    :mod (c16-3 / police))
                       :time (c16-2 / now)))

# ::snt *uebermenschen or bermenschen
# ::tokens ["*", "uebermenschen", "or", "bermenschen"]
# ::lemmas ["*", "uebermenschen", "or", "bermenschen"]
(c17-0 / or
       :op1 (c17-3 / person
                   :name (c17-2 / name
                                :op1 "uebermenschen"))
       :op2 (c17-4 / person
                   :name (c17-1 / name
                                :op1 "Bermenschen")))

# ::snt Murder involves premeditation and is mostly a court term. Not defending the police here, it's a just a language thing.
# ::tokens ["Murder", "involves", "premeditation", "and", "is", "mostly", "a", "court", "term", ".", "Not", "defending", "the", "police", "here", ",", "it", "'s", "a", "just", "a", "language", "thing", "."]
# ::lemmas ["murder", "involve", "premeditation", "and", "be", "mostly", "a", "court", "term", ".", "not", "defend", "the", "police", "here", ",", "it", "be", "a", "just", "a", "language", "thing", "."]
(c18-3 / multi-sentence
       :snt1 (c18-14 / and
                     :op1 (c18-5 / involve-01
                                 :ARG1 (c18-13 / kidnap-01)
                                 :ARG2 (c18-6 / murder-01))
                     :op2 (c18-12 / term
                                  :mod (c18-8 / court)
                                  :mod (c18-2 / most)))
       :snt2 (c18-7 / contrast-01
                    :ARG1 (c18-9 / defend-01
                                 :ARG1 (c18-10 / police)
                                 :location (c18-0 / here)
                                 :polarity -)
                    :ARG2 (c18-11 / thing
                                  :mod (c18-4 / language)
                                  :mod (c18-1 / just)
                                  :domain c18-9)))

# ::snt actually, they just "die". Autopsy hasn't been revealed, so "shot" is still a bridge too far.
# ::tokens ["actually", ",", "they", "just", "\"", "die", "\"", ".", "Autopsy", "has", "n't", "been", "revealed", ",", "so", "\"", "shot", "\"", "is", "still", "a", "bridge", "too", "far", "."]
# ::lemmas ["actually", ",", "they", "just", "\"", "die", "\"", ".", "Autopsy", "have", "not", "be", "reveal", ",", "so", "\"", "shot", "\"", "be", "still", "a", "bridge", "too", "far", "."]
(c19-3 / multi-sentence
       :snt1 (c19-7 / die-01
                    :ARG1 (c19-12 / they)
                    :mod (c19-0 / just)
                    :ARG1-of (c19-13 / actual-02))
       :snt2 (c19-8 / reveal-01
                    :ARG1 (c19-6 / autopsy)
                    :ARG0-of (c19-9 / cause-01
                                    :ARG1 (c19-4 / bridge
                                                 :domain (c19-11 / shoot-02)
                                                 :mod (c19-5 / still)
                                                 :ARG1-of (c19-1 / have-degree-91
                                                                 :ARG2 (c19-2 / far)
                                                                 :ARG3 (c19-10 / too))))
                    :polarity -))

# ::snt Murder=unlawful premeditated killing of a human being by another.Until proven guilty,law presumes innocence
# ::tokens ["Murder", "=", "unlawful", "premeditated", "killing", "of", "a", "human", "being", "by", "another", ".", "Until", "proven", "guilty", ",", "law", "presumes", "innocence"]
# ::lemmas ["murder", "=", "unlawful", "premeditate", "killing", "of", "a", "human", "being", "by", "another", ".", "until", "prove", "guilty", ",", "law", "presume", "innocence"]
(c20-2 / multi-sentence
       :snt1 (c20-6 / equal-01
                    :ARG1 (c20-9 / murder-01)
                    :ARG2 (c20-14 / kill-01
                                  :ARG0 (c20-8 / person
                                               :mod (c20-16 / another))
                                  :ARG1 (c20-5 / being
                                               :mod (c20-0 / human))
                                  :ARG1-of (c20-10 / cause-01
                                                   :ARG0 (c20-1 / law))
                                  :ARG1-of (c20-7 / intend-01
                                                  :polarity -)))
       :snt2 (c20-15 / presume-01
                     :ARG0 (c20-13 / law)
                     :ARG1 (c20-11 / innocent-01)
                     :time (c20-3 / until
                                  :op1 (c20-4 / prove-01
                                              :ARG1 (c20-12 / guilty-01
                                                            :ARG1 c20-13)))))

# ::snt Mike's father used the proper verb: "executed"
# ::tokens ["Mike", "'s", "father", "used", "the", "proper", "verb", ":", "\"", "executed", "\""]
# ::lemmas ["Mike", "'s", "father", "use", "the", "proper", "verb", ":", "\"", "execute", "\""]
(c21-2 / use-01
       :ARG0 (c21-7 / person
                    :ARG0-of (c21-0 / have-rel-role-91
                                    :ARG1 (c21-8 / person
                                                 :name (c21-5 / name
                                                              :op1 "Mike"))
                                    :ARG2 (c21-1 / father)))
       :ARG1 (c21-6 / verb
                    :mod (c21-3 / proper)
                    :domain (c21-4 / execute-01)))

# ::snt murder in self-defense is impossible; *unqualified* murder with conditional intent also
# ::tokens ["murder", "in", "self", "-", "defense", "is", "impossible", ";", "*", "unqualified", "*", "murder", "with", "conditional", "intent", "also"]
# ::lemmas ["murder", "in", "self", "-", "defense", "be", "impossible", ";", "*", "unqualified", "*", "murder", "with", "conditional", "intent", "also"]
(c22-1 / multi-sentence
       :snt1 (c22-4 / possible-01
                    :ARG1 (c22-6 / murder-01
                                 :purpose (c22-5 / defend-01
                                                 :ARG1 (c22-8 / self)))
                    :polarity -)
       :snt2 (c22-2 / qualify-02
                    :ARG1 (c22-0 / murder-01
                                 :ARG1-of (c22-3 / intend-01
                                                 :ARG1-of (c22-7 / condition-01)))
                    :mod (c22-9 / also)
                    :polarity -))

# ::snt For public controversies in the US, the standard is generally making a false statement w/reckless disregard for the truth.
# ::tokens ["For", "public", "controversies", "in", "the", "US", ",", "the", "standard", "is", "generally", "making", "a", "false", "statement", "w", "/", "reckless", "disregard", "for", "the", "truth", "."]
# ::lemmas ["for", "public", "controversy", "in", "the", "US", ",", "the", "standard", "be", "generally", "make", "a", "false", "statement", "w", "/", "reckless", "disregard", "for", "the", "truth", "."]
(c23-4 / cause-01
       :ARG0 (c23-3 / controversy
                    :ARG1-of (c23-2 / public-02)
                    :location (c23-8 / country
                                     :name (c23-1 / name
                                                  :op1 "US")))
       :ARG1 (c23-10 / state-01
                     :ARG1 (c23-5 / disregard-01
                                  :ARG1 (c23-9 / truth)
                                  :ARG1-of (c23-6 / reckless-00))
                     :mod (c23-0 / false)
                     :ARG1-of (c23-7 / general-02)))

# ::snt This is such a deep hole of bullshit, surprised police has even ATTEMPTED to PR-speak their way out of this mess.
# ::tokens ["This", "is", "such", "a", "deep", "hole", "of", "bullshit", ",", "surprised", "police", "has", "even", "ATTEMPTED", "to", "PR", "-", "speak", "their", "way", "out", "of", "this", "mess", "."]
# ::lemmas ["this", "be", "such", "a", "deep", "hole", "of", "bullshit", ",", "surprised", "police", "have", "even", "attempt", "to", "pr", "-", "speak", "their", "way", "out", "of", "this", "mess", "."]
(c24-14 / and
        :op1 (c24-0 / hole
                    :consist-of (c24-3 / bullshit)
                    :ARG1-of (c24-10 / deep-02
                                     :degree (c24-12 / such))
                    :domain (c24-13 / this))
        :op2 (c24-5 / surprise-01
                    :ARG0 (c24-7 / attempt-01
                                 :ARG0 (c24-9 / police)
                                 :ARG1 (c24-1 / speak-01
                                              :ARG0 c24-9
                                              :ARG1 (c24-11 / truth-value
                                                            :polarity-of (c24-4 / out-06
                                                                                :ARG1 c24-9
                                                                                :ARG2 (c24-2 / mess
                                                                                             :mod (c24-8 / this)))))
                                 :mod (c24-6 / even))
                    :ARG1 c24-9))

# ::snt more on the language of police shootings, by
# ::tokens ["more", "on", "the", "language", "of", "police", "shootings", ",", "by"]
# ::lemmas ["more", "on", "the", "language", "of", "police", "shooting", ",", "by"]
(c25-3 / more
       :topic (c25-2 / language
                     :mod (c25-0 / shoot-02
                                 :ARG0 (c25-1 / police))))

# ::snt but such is the internet...
# ::tokens ["but", "such", "is", "the", "internet", "..."]
# ::lemmas ["but", "such", "be", "the", "internet", "..."]
(c26-1 / contrast-01
       :ARG2 (c26-2 / internet
                    :mod (c26-0 / such)))

# ::snt The police dept didn't say "murdered" of course. Cops never "murder" people. Black people just "are shot" in proximity of cops
# ::tokens ["The", "police", "dept", "did", "n't", "say", "\"", "murdered", "\"", "of", "course", ".", "Cops", "never", "\"", "murder", "\"", "people", ".", "Black", "people", "just", "\"", "are", "shot", "\"", "in", "proximity", "of", "cops"]
# ::lemmas ["the", "police", "dept", "do", "not", "say", "\"", "murder", "\"", "of", "course", ".", "cop", "never", "\"", "murder", "\"", "people", ".", "black", "people", "just", "\"", "be", "shoot", "\"", "in", "proximity", "of", "cop"]
(c27-1 / multi-sentence
       :snt1 (c27-13 / say-01
                     :ARG0 (c27-8 / department
                                  :mod (c27-7 / police))
                     :ARG1 (c27-9 / murder-01
                                  :ARG0 (c27-10 / cop)
                                  :time (c27-5 / ever)
                                  :polarity -)
                     :mod (c27-4 / of-course)
                     :polarity -)
       :snt2 (c27-6 / shoot-02
                    :ARG1 (c27-14 / person
                                  :ARG1-of (c27-3 / black-05))
                    :mod (c27-0 / just)
                    :location (c27-11 / close-10
                                      :ARG1 c27-10
                                      :ARG2 (c27-12 / cop))
                    :snt3 c27-9
                    :ARG0 (c27-15 / cop)
                    :ARG1 (c27-2 / person)
                    :time c27-5
                    :polarity -))

# ::snt so if the officer was black this wouldn't be a issue?
# ::tokens ["so", "if", "the", "officer", "was", "black", "this", "would", "n't", "be", "a", "issue", "?"]
# ::lemmas ["so", "if", "the", "officer", "be", "black", "this", "would", "not", "be", "a", "issue", "?"]
(c28-2 / issue-02
       :ARG0 (c28-4 / this)
       :ARG1-of (c28-3 / cause-01
                       :ARG0 (c28-0 / black-05
                                    :ARG1 (c28-1 / officer)))
       :polarity (c28-5 / amr-unknown)
       :polarity -)

# ::snt if you call someone a "murderer" before the verdict is final here, &amp; it's overturned, prepare to pay
# ::tokens ["if", "you", "call", "someone", "a", "\"", "murderer", "\"", "before", "the", "verdict", "is", "final", "here", ",", "&", "amp", ";", "it", "'s", "overturned", ",", "prepare", "to", "pay"]
# ::lemmas ["if", "you", "call", "someone", "a", "\"", "murderer", "\"", "before", "the", "verdict", "be", "final", "here", ",", "&", "amp", ";", "it", "be", "overturn", ",", "prepare", "to", "pay"]
(c29-13 / and
        :op1 (c29-0 / have-condition-91
                    :ARG1 (c29-9 / prepare-02
                                 :ARG0 (c29-1 / you)
                                 :ARG1 (c29-12 / pay-01
                                               :ARG0 c29-1))
                    :ARG2 (c29-10 / call-01
                                  :ARG0 c29-1
                                  :ARG1 (c29-11 / someone)
                                  :ARG2 (c29-5 / person
                                               :ARG0-of (c29-3 / murder-01))
                                  :time (c29-6 / before
                                               :op1 (c29-2 / finalize-01
                                                           :ARG1 (c29-8 / verdict)
                                                           :location (c29-4 / here)))))
        :op2 (c29-7 / overturn-01
                    :ARG1 c29-8))

# ::snt even that's generous; at the press conference earlier Chief used the word 'encountered' as a euphemism for murder
# ::tokens ["even", "that", "'s", "generous", ";", "at", "the", "press", "conference", "earlier", "Chief", "used", "the", "word", "'", "encountered", "'", "as", "a", "euphemism", "for", "murder"]
# ::lemmas ["even", "that", "be", "generous", ";", "at", "the", "press", "conference", "early", "Chief", "use", "the", "word", "'", "encounter", "'", "as", "a", "euphemism", "for", "murder"]
(c30-1 / multi-sentence
       :snt1 (c30-10 / generous-01
                     :ARG1 (c30-12 / that)
                     :mod (c30-5 / even))
       :snt2 (c30-2 / use-01
                    :ARG0 (c30-7 / person
                                 :name (c30-6 / name
                                              :op1 "Chief"))
                    :ARG1 (c30-0 / word-01
                                 :ARG1 (c30-9 / count-01))
                    :ARG2 (c30-3 / euphemize-00
                                 :ARG1 (c30-8 / murder-01))
                    :location (c30-11 / conference
                                      :mod (c30-13 / press)
                                      :time (c30-4 / before))))

# ::snt this tweet has been on my mind all f'ing day..if I could retweet it again, I would
# ::tokens ["this", "tweet", "has", "been", "on", "my", "mind", "all", "f'ing", "day", "..", "if", "I", "could", "retweet", "it", "again", ",", "I", "would"]
# ::lemmas ["this", "tweet", "have", "be", "on", "my", "mind", "all", "f'e", "day", "..", "if", "i", "could", "retweet", "it", "again", ",", "i", "would"]
(c31-12 / and
        :op1 (c31-2 / on-ones-mind-07
                    :ARG1 (c31-4 / i)
                    :ARG2 (c31-11 / thing
                                  :ARG1-of (c31-10 / tweet-01)
                                  :mod (c31-5 / this))
                    :duration (c31-7 / day
                                     :mod (c31-1 / fucking
                                                 :mode expressive)
                                     :mod (c31-3 / all)))
        :op2 (c31-0 / have-condition-91
                    :ARG1 (c31-6 / possible-01
                                 :ARG1 (c31-8 / retweet-01
                                              :ARG0 c31-4
                                              :ARG1 c31-11
                                              :mod (c31-9 / again))
                                 :ARG2-of c31-0)))

# ::snt . They don't even *do* anything. Things just happen "in connection with" them. In the passive voice.
# ::tokens [".", "They", "do", "n't", "even", "*", "do", "*", "anything", ".", "Things", "just", "happen", "\"", "in", "connection", "with", "\"", "them", ".", "In", "the", "passive", "voice", "."]
# ::lemmas [".", "they", "do", "not", "even", "*", "do", "*", "anything", ".", "thing", "just", "happen", "\"", "in", "connection", "with", "\"", "they", ".", "in", "the", "passive", "voice", "."]
(c32-1 / multi-sentence
       :snt1 (c32-5 / do-02
                    :ARG0 (c32-9 / they)
                    :ARG1 (c32-10 / anything)
                    :mod (c32-2 / even)
                    :polarity -)
       :snt2 (c32-8 / thing
                    :ARG1-of (c32-6 / connect-01
                                    :ARG2 (c32-3 / they))
                    :mod (c32-0 / just))
       :snt3 (c32-4 / voice
                    :mod (c32-7 / passive)))

# ::snt I'd agree with that think your original wording could be better.
# ::tokens ["I", "'d", "agree", "with", "that", "think", "your", "original", "wording", "could", "be", "better", "."]
# ::lemmas ["i", "would", "agree", "with", "that", "think", "your", "original", "wording", "could", "be", "well", "."]
(c33-10 / agree-01
        :ARG0 (c33-5 / i)
        :ARG1 (c33-9 / think-01
                     :ARG0 (c33-1 / you)
                     :ARG1 (c33-6 / possible-01
                                  :ARG1 (c33-0 / have-degree-91
                                               :ARG1 (c33-2 / word-01
                                                            :ARG0 c33-1
                                                            :mod (c33-4 / original))
                                               :ARG2 (c33-7 / good-02)
                                               :ARG3 (c33-3 / more))))
        :ARG2 (c33-8 / that))

# ::snt . Police LOVE using the passive voice, it's almost like they didn't do anything
# ::tokens [".", "Police", "LOVE", "using", "the", "passive", "voice", ",", "it", "'s", "almost", "like", "they", "did", "n't", "do", "anything"]
# ::lemmas [".", "police", "LOVE", "use", "the", "passive", "voice", ",", "it", "be", "almost", "like", "they", "do", "not", "do", "anything"]
(c34-0 / love-01
       :ARG0 (c34-4 / police)
       :ARG1 (c34-1 / use-01
                    :ARG0 c34-4
                    :ARG1 (c34-3 / voice
                                 :mod (c34-8 / passive)))
       :ARG1-of (c34-6 / cause-01
                       :ARG0 (c34-5 / resemble-01
                                    :ARG1 c34-1
                                    :ARG2 (c34-7 / do-02
                                                 :ARG0 c34-4
                                                 :ARG1 (c34-9 / anything)
                                                 :polarity -)
                                    :mod (c34-2 / almost))))

# ::snt yep - and in this case it was an execution
# ::tokens ["yep", "-", "and", "in", "this", "case", "it", "was", "an", "execution"]
# ::lemmas ["yep", "-", "and", "in", "this", "case", "it", "be", "an", "execution"]
(c35-4 / and
       :op1 (c35-0 / yep)
       :op2 (c35-1 / execute-01
                   :condition (c35-2 / case-04
                                     :ARG1 (c35-3 / this))))

# ::snt I am,any such accusation,(w/o alleged after indictment) b4 all appeals are dismissed can be a tort
# ::tokens ["I", "am", ",", "any", "such", "accusation,(w", "/", "o", "alleged", "after", "indictment", ")", "b4", "all", "appeals", "are", "dismissed", "can", "be", "a", "tort"]
# ::lemmas ["i", "be", ",", "any", "such", "accusation,(w", "/", "o", "allege", "after", "indictment", ")", "b4", "all", "appeal", "be", "dismiss", "can", "be", "a", "tort"]
(c36-0 / multi-sentence
       :snt1 (c36-13 / allege-01
                     :ARG0 (c36-4 / i)
                     :ARG1 (c36-12 / thing
                                   :ARG2-of (c36-3 / accuse-01)
                                   :mod (c36-5 / any)
                                   :mod (c36-10 / such))
                     :time (c36-11 / after
                                   :op1 (c36-8 / indict-01))
                     :polarity -)
       :snt2 (c36-6 / possible-01
                    :ARG1 (c36-9 / tort
                                 :domain (c36-7 / dismiss-01
                                                :ARG1 (c36-2 / appeal-01
                                                             :mod (c36-1 / all))))))

# ::snt that happens to everyone, not just black people.
# ::tokens ["that", "happens", "to", "everyone", ",", "not", "just", "black", "people", "."]
# ::lemmas ["that", "happen", "to", "everyone", ",", "not", "just", "black", "people", "."]
(c37-6 / contrast-01
       :ARG1 (c37-4 / event
                    :beneficiary (c37-2 / everyone))
       :ARG2 (c37-1 / event
                    :beneficiary (c37-5 / person
                                        :ARG1-of (c37-3 / black-05)
                                        :mod (c37-0 / just))
                    :polarity -))

# ::snt Every time an officer intentionally uses lethal force, e.g. shoots his gun at a person, he has an intention to kill.
# ::tokens ["Every", "time", "an", "officer", "intentionally", "uses", "lethal", "force", ",", "e.g.", "shoots", "his", "gun", "at", "a", "person", ",", "he", "has", "an", "intention", "to", "kill", "."]
# ::lemmas ["every", "time", "an", "officer", "intentionally", "use", "lethal", "force", ",", "e.g.", "shoot", "his", "gun", "at", "a", "person", ",", "he", "have", "an", "intention", "to", "kill", "."]
(c38-4 / intend-01
       :ARG0 (c38-3 / officer)
       :ARG1 (c38-9 / kill-01
                    :ARG0 c38-3)
       :frequency (c38-6 / rate-entity-91
                         :ARG4 (c38-2 / use-01
                                      :ARG0 c38-3
                                      :ARG1 (c38-0 / force
                                                   :mod (c38-1 / lethal)
                                                   :example (c38-8 / shoot-02
                                                                   :ARG0 c38-3
                                                                   :ARG1 (c38-7 / gun
                                                                                :poss c38-3)
                                                                   :ARG2 (c38-5 / person)))
                                      :ARG1-of c38-4
                                      :ARG0 c38-3)))

# ::snt Sounds like an awful version of the phrase "His body ran into my bullets ten times"
# ::tokens ["Sounds", "like", "an", "awful", "version", "of", "the", "phrase", "\"", "His", "body", "ran", "into", "my", "bullets", "ten", "times", "\""]
# ::lemmas ["sound", "like", "an", "awful", "version", "of", "the", "phrase", "\"", "his", "body", "run", "into", "my", "bullet", "ten", "time", "\""]
(c39-6 / sound-01
       :ARG2 (c39-2 / version
                    :mod (c39-7 / awful)
                    :mod (c39-3 / phrase-01
                                :ARG1 (c39-4 / run-07
                                             :ARG0 (c39-1 / body
                                                          :poss (c39-0 / he))
                                             :ARG2 (c39-5 / bullet
                                                          :poss c39-0)
                                             :frequency 10))))

# ::snt I do think you would hear would hear murdered thrown around if the person was white. Definitely not from cops though...
# ::tokens ["I", "do", "think", "you", "would", "hear", "would", "hear", "murdered", "thrown", "around", "if", "the", "person", "was", "white", ".", "Definitely", "not", "from", "cops", "though", "..."]
# ::lemmas ["i", "do", "think", "you", "would", "hear", "would", "hear", "murder", "throw", "around", "if", "the", "person", "be", "white", ".", "definitely", "not", "from", "cop", "though", "..."]
(c40-3 / multi-sentence
       :snt1 (c40-13 / think-01
                     :ARG0 (c40-5 / i)
                     :ARG1 (c40-0 / hear-01
                                  :ARG0 (c40-1 / you)
                                  :ARG1 (c40-14 / hear-01
                                                :ARG0 c40-1
                                                :ARG1 (c40-11 / throw-01
                                                              :ARG1 (c40-7 / person
                                                                           :ARG1-of (c40-8 / murder-01))
                                                              :ARG2 (c40-12 / around))
                                                :condition (c40-2 / white-02
                                                                  :ARG1 c40-7))))
       :snt2 (c40-6 / have-concession-91
                    :ARG1 (c40-4 / be-from-91
                                 :ARG1 (c40-9 / cop)
                                 :ARG2-of c40-6
                                 :polarity -)
                    :mod (c40-10 / definite)))

# ::snt law enforcement agents cant commit crimes because we only draft heroic ubermensch into their ranks
# ::tokens ["law", "enforcement", "agents", "ca", "nt", "commit", "crimes", "because", "we", "only", "draft", "heroic", "ubermensch", "into", "their", "ranks"]
# ::lemmas ["law", "enforcement", "agent", "can", "not", "commit", "crime", "because", "we", "only", "draft", "heroic", "ubermensch", "into", "their", "rank"]
(c41-8 / cause-01
       :ARG0 (c41-7 / draft-02
                    :ARG0 (c41-1 / we)
                    :ARG1 (c41-3 / ubermensch
                                 :mod (c41-0 / hero))
                    :ARG2 (c41-9 / rank
                                 :poss (c41-12 / they))
                    :mod (c41-4 / only))
       :ARG1 (c41-6 / possible-01
                    :ARG1 (c41-10 / commit-02
                                  :ARG0 (c41-13 / agent
                                                :ARG0-of (c41-5 / enforce-01
                                                                :ARG1 (c41-2 / law)))
                                  :ARG1 (c41-11 / crime-02))
                    :polarity -))

# ::snt That's not just officers, that applies to everyone too.
# ::tokens ["That", "'s", "not", "just", "officers", ",", "that", "applies", "to", "everyone", "too", "."]
# ::lemmas ["that", "be", "not", "just", "officer", ",", "that", "apply", "to", "everyone", "too", "."]
(c42-5 / contrast-01
       :ARG1 (c42-4 / person
                    :ARG0-of (c42-0 / have-org-role-91
                                    :ARG2 (c42-2 / officer))
                    :mod (c42-1 / just
                                :polarity -)
                    :domain (c42-7 / that))
       :ARG2 (c42-8 / apply-02
                    :ARG1 c42-7
                    :ARG2 (c42-3 / everyone)
                    :mod (c42-6 / too)))
