# ::snt so if shooter came an hour later he might have killed multiple MP's &amp; reporters. Which Minister will resign?
# ::tokens ["so", "if", "shooter", "came", "an", "hour", "later", "he", "might", "have", "killed", "multiple", "MP", "'s", "&", "amp", ";", "reporters", ".", "Which", "Minister", "will", "resign", "?"]
# ::lemmas ["so", "if", "shooter", "come", "an", "hour", "later", "he", "might", "have", "kill", "multiple", "MP", "'s", "&", "amp", ";", "reporter", ".", "which", "Minister", "will", "resign", "?"]
(c1-0 / multi-sentence
      :snt1 (c1-8 / have-condition-91
                  :ARG1 (c1-3 / possible-01
                              :ARG1 (c1-19 / kill-01
                                           :ARG0 (c1-5 / person
                                                       :ARG0-of (c1-4 / shoot-02))
                                           :ARG1 (c1-7 / and
                                                       :op1 (c1-10 / person
                                                                   :ARG0-of (c1-6 / have-org-role-91
                                                                                  :ARG1 (c1-15 / parliament)
                                                                                  :ARG2 (c1-13 / member))
                                                                   :quant (c1-9 / multiple))
                                                       :op2 (c1-11 / person
                                                                   :ARG0-of (c1-14 / report-01)))))
                  :ARG2 (c1-20 / come-01
                               :ARG1 c1-5
                               :time (c1-16 / after
                                            :quant (c1-21 / temporal-quantity
                                                          :unit (c1-2 / hour)
                                                          :quant 1))))
      :snt2 (c1-1 / resign-01
                  :ARG0 (c1-12 / amr-unknown
                               :ARG0-of (c1-18 / have-org-role-91
                                               :ARG2 (c1-17 / minister)))))

# ::snt dumbass
# ::tokens ["dumbass"]
# ::lemmas ["dumbass"]
(c2-1 / dumbass
      :domain (c2-0 / you))

# ::snt Well that's good to know for the next attack
# ::tokens ["Well", "that", "'s", "good", "to", "know", "for", "the", "next", "attack"]
# ::lemmas ["well", "that", "be", "good", "to", "know", "for", "the", "next", "attack"]
(c4-2 / good-02
      :ARG1 (c4-3 / know-01
                  :ARG1 (c4-4 / attack-01
                              :mod (c4-1 / next)))
      :mod (c4-0 / well))

# ::snt that's a sobering thought. Wow.
# ::tokens ["that", "'s", "a", "sobering", "thought", ".", "Wow", "."]
# ::lemmas ["that", "be", "a", "sobering", "thought", ".", "wow", "."]
(c5-1 / multi-sentence
      :snt1 (c5-4 / think-01
                  :ARG1 (c5-2 / that)
                  :ARG0-of (c5-3 / sober-02))
      :snt2 (c5-0 / wow-01
                  :mode expressive))

# ::snt I beg to differ. This is exactly the time for cooler heads to prevail.
# ::tokens ["I", "beg", "to", "differ", ".", "This", "is", "exactly", "the", "time", "for", "cooler", "heads", "to", "prevail", "."]
# ::lemmas ["i", "beg", "to", "differ", ".", "this", "be", "exactly", "the", "time", "for", "cool", "head", "to", "prevail", "."]
(c6-1 / multi-sentence
      :snt1 (c6-2 / beg-01
                  :ARG0 (c6-4 / i)
                  :ARG1 (c6-6 / differ-01
                              :ARG0 c6-4))
      :snt2 (c6-10 / time
                   :domain (c6-9 / this)
                   :purpose (c6-5 / prevail-01
                                  :ARG0 (c6-0 / head
                                              :ARG1-of (c6-11 / have-degree-91
                                                              :ARG2 (c6-7 / cool-06
                                                                          :ARG1 c6-0)
                                                              :ARG3 (c6-8 / more))))
                   :mod (c6-3 / exact)))

# ::snt stay safe, Nathan!
# ::tokens ["stay", "safe", ",", "Nathan", "!"]
# ::lemmas ["stay", "safe", ",", "Nathan", "!"]
(c7-5 / say-01
      :ARG0 (c7-2 / i)
      :ARG1 (c7-1 / stay-01
                  :ARG1 (c7-4 / person
                              :name (c7-3 / name
                                          :op1 "Nathan"))
                  :ARG3 (c7-0 / safe-01
                              :ARG1 c7-4)
                  :mode imperative)
      :ARG2 c7-4)

# ::snt not exactly classified information
# ::tokens ["not", "exactly", "classified", "information"]
# ::lemmas ["not", "exactly", "classified", "information"]
(c8-2 / information
      :ARG1-of (c8-1 / classify-02
                     :mod (c8-0 / exact)
                     :polarity -))

# ::snt Disgraceful. This just happened, to a Canadian, in Canada. Save your Harper hate for another day please.
# ::tokens ["Disgraceful", ".", "This", "just", "happened", ",", "to", "a", "Canadian", ",", "in", "Canada", ".", "Save", "your", "Harper", "hate", "for", "another", "day", "please", "."]
# ::lemmas ["disgraceful", ".", "this", "just", "happen", ",", "to", "a", "Canadian", ",", "in", "Canada", ".", "save", "your", "Harper", "hate", "for", "another", "day", "please", "."]
(c9-4 / multi-sentence
      :snt1 (c9-8 / disgrace-01)
      :snt2 (c9-11 / this
                   :beneficiary (c9-7 / person
                                      :mod (c9-9 / country
                                                 :name (c9-5 / name
                                                             :op1 "Canada")))
                   :mod (c9-0 / just))
      :snt3 (c9-10 / save-02
                   :ARG0 (c9-1 / you)
                   :ARG1 (c9-2 / hate-01
                               :ARG0 c9-1
                               :ARG1 (c9-12 / person
                                            :name (c9-6 / name
                                                        :op1 "Harper")))
                   :ARG2 (c9-3 / day
                               :mod (c9-13 / another))
                   :mode imperative
                   :polite +))

# ::snt Pretty poorly planned attacks if you asked me. Don't let the Gov't use this to railroad through their draconian legislation.
# ::tokens ["Pretty", "poorly", "planned", "attacks", "if", "you", "asked", "me", ".", "Do", "n't", "let", "the", "Gov't", "use", "this", "to", "railroad", "through", "their", "draconian", "legislation", "."]
# ::lemmas ["pretty", "poorly", "plan", "attack", "if", "you", "ask", "i", ".", "do", "not", "let", "the", "Gov't", "use", "this", "to", "railroad", "through", "their", "draconian", "legislation", "."]
(c10-2 / multi-sentence
       :snt1 (c10-15 / attack-01
                     :ARG1-of (c10-7 / plan-01
                                     :manner (c10-14 / poor
                                                     :degree (c10-4 / pretty)))
                     :condition (c10-5 / ask-01
                                       :ARG0 (c10-0 / you)
                                       :ARG2 (c10-6 / i)))
       :snt2 (c10-1 / let-01
                    :ARG0 c10-0
                    :polarity -
                    :mode imperative)
       :ARG1 (c10-3 / use-01
                    :ARG0 (c10-10 / government-organization
                                  :ARG0-of (c10-8 / govern-01))
                    :ARG1 (c10-13 / this)
                    :ARG2 (c10-9 / railroad-01
                                 :ARG0 c10-10
                                 :ARG2 (c10-12 / legislate-01
                                               :ARG0 c10-10
                                               :manner (c10-11 / draconian)))))

# ::snt My stomach just turned reading that.
# ::tokens ["My", "stomach", "just", "turned", "reading", "that", "."]
# ::lemmas ["my", "stomach", "just", "turn", "read", "that", "."]
(c11-5 / turn-01
       :ARG1 (c11-4 / stomach
                    :part-of (c11-1 / i))
       :time (c11-0 / just)
       :manner (c11-2 / read-01
                      :ARG0 c11-4
                      :ARG1 (c11-3 / that)))

# ::snt cooler heads being? What exactly does that mean in light of what has/is happening?
# ::tokens ["cooler", "heads", "being", "?", "What", "exactly", "does", "that", "mean", "in", "light", "of", "what", "has", "/", "is", "happening", "?"]
# ::lemmas ["cool", "head", "be", "?", "what", "exactly", "do", "that", "mean", "in", "light", "of", "what", "have", "/", "be", "happen", "?"]
(c12-2 / multi-sentence
       :snt1 (c12-3 / being
                    :domain (c12-0 / head
                                   :ARG1-of (c12-8 / cool-04
                                                   :ARG2-of (c12-12 / have-degree-91
                                                                    :ARG1 c12-0
                                                                    :ARG3 (c12-6 / more)))))
       :snt2 (c12-1 / mean-01
                    :ARG1 (c12-11 / that)
                    :ARG2 (c12-10 / amr-unknown
                                  :mod (c12-5 / exact))
                    :ARG1-of (c12-7 / cause-01
                                    :ARG0 (c12-9 / slash
                                                 :op1 (c12-4 / event
                                                             :op2-of c12-9)))))

# ::snt Perhaps that's the type of non-news info shouldn't be tweeted, for security reasons?
# ::tokens ["Perhaps", "that", "'s", "the", "type", "of", "non", "-", "news", "info", "should", "n't", "be", "tweeted", ",", "for", "security", "reasons", "?"]
# ::lemmas ["perhaps", "that", "be", "the", "type", "of", "non", "-", "news", "info", "should", "not", "be", "tweet", ",", "for", "security", "reason", "?"]
(c13-3 / possible-01
       :ARG1 (c13-4 / recommend-01
                    :ARG1 (c13-8 / tweet-01
                                 :ARG1 (c13-0 / information
                                              :mod (c13-2 / news
                                                          :polarity -)
                                              :mod (c13-6 / type)))
                    :ARG1-of (c13-5 / cause-01
                                    :ARG0 (c13-1 / reason
                                                 :mod (c13-7 / security)))
                    :polarity -)
       :polarity (c13-9 / amr-unknown))

# ::snt Why not just hand the attacker(s) your personal itinerary? I'm sorry, but this isn't a smart tweet to make &amp; should be removed
# ::tokens ["Why", "not", "just", "hand", "the", "attacker(s", ")", "your", "personal", "itinerary", "?", "I", "'m", "sorry", ",", "but", "this", "is", "n't", "a", "smart", "tweet", "to", "make", "&", "amp", ";", "should", "be", "removed"]
# ::lemmas ["why", "not", "just", "hand", "the", "attacker(s", ")", "your", "personal", "itinerary", "?", "i", "be", "sorry", ",", "but", "this", "be", "not", "a", "smart", "tweet", "to", "make", "&", "amp", ";", "should", "be", "remove"]
(c14-2 / multi-sentence
       :snt1 (c14-20 / cause-01
                     :ARG0 (c14-8 / amr-unknown)
                     :ARG1 (c14-9 / hand-01
                                  :ARG0 (c14-19 / you)
                                  :ARG1 (c14-16 / itinerary
                                                :ARG1-of (c14-4 / personal-02
                                                                :ARG2 (c14-7 / person
                                                                             :ARG0-of (c14-15 / attack-01)))
                                                :poss c14-19
                                                :mod (c14-0 / just))
                                  :polarity -))
       :snt2 (c14-5 / contrast-01
                    :ARG1 (c14-6 / sorry-01
                                 :ARG1 (c14-18 / i))
                    :ARG2 (c14-12 / and
                                  :op1 (c14-22 / tweet-01
                                               :ARG0 (c14-1 / i)
                                               :ARG1-of (c14-10 / smart-06
                                                                :polarity -)
                                               :domain (c14-21 / this)
                                               :purpose (c14-13 / make-01
                                                                :ARG0 c14-1
                                                                :ARG1 (c14-17 / thing
                                                                              :name (c14-11 / name
                                                                                            :op1 "&amp"))))
                                  :op2 (c14-14 / recommend-01
                                               :ARG1 (c14-3 / remove-01
                                                            :ARG1 c14-17)))))

# ::snt there's a dead Canadian soldier. Today. Shot for no reason. I refuse to be cool today. I refuse to listen to apologists.
# ::tokens ["there", "'s", "a", "dead", "Canadian", "soldier", ".", "Today", ".", "Shot", "for", "no", "reason", ".", "I", "refuse", "to", "be", "cool", "today", ".", "I", "refuse", "to", "listen", "to", "apologists", "."]
# ::lemmas ["there", "be", "a", "dead", "Canadian", "soldier", ".", "Today", ".", "Shot", "for", "no", "reason", ".", "i", "refuse", "to", "be", "cool", "today", ".", "i", "refuse", "to", "listen", "to", "apologist", "."]
(c15-1 / multi-sentence
       :snt1 (c15-13 / soldier
                     :ARG1-of (c15-8 / die-01)
                     :mod (c15-9 / country
                                 :name (c15-6 / name
                                              :op1 "Canada")))
       :snt2 (c15-2 / shoot-02
                    :ARG2 (c15-10 / reason
                                  :polarity -)
                    :time (c15-14 / today))
       :snt3 (c15-5 / refuse-01
                    :ARG0 (c15-4 / i)
                    :ARG1 (c15-11 / cool-04
                                  :ARG1 c15-4)
                    :time (c15-12 / today))
       :snt4 (c15-3 / refuse-01
                    :ARG0 c15-4
                    :ARG1 (c15-0 / listen-01
                                 :ARG0 c15-4
                                 :ARG1 (c15-7 / person
                                              :ARG0-of (c15-15 / apologize-01)))))
