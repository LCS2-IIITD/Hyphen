# ::snt send the gunman to hell and tell him "PISS ON U"
# ::tokens ["send", "the", "gunman", "to", "hell", "and", "tell", "him", "\"", "PISS", "ON", "U", "\""]
# ::lemmas ["send", "the", "gunman", "to", "hell", "and", "tell", "he", "\"", "piss", "on", "u", "\""]
(c1-6 / and
      :op1 (c1-4 / send-03
                 :ARG0 (c1-1 / you)
                 :ARG1 (c1-3 / gunman)
                 :ARG4 (c1-0 / hell)
                 :mode imperative)
      :op2 (c1-5 / tell-01
                 :ARG0 c1-1
                 :ARG1 (c1-2 / piss-on-04
                             :ARG0 c1-1
                             :ARG1 c1-3
                             :mode imperative)
                 :ARG2 c1-3
                 :mode imperative))

# ::snt In other words he ***may*** want the world to see what's about to happen.Let's hope not.
# ::tokens ["In", "other", "words", "he", "*", "*", "*", "may", "*", "*", "*", "want", "the", "world", "to", "see", "what", "'s", "about", "to", "happen", ".", "Let", "'s", "hope", "not", "."]
# ::lemmas ["in", "other", "word", "he", "*", "*", "*", "may", "*", "*", "*", "want", "the", "world", "to", "see", "what", "be", "about", "to", "happen", ".", "let", "us", "hope", "not", "."]
(c2-3 / multi-sentence
      :snt1 (c2-10 / possible-01
                   :ARG1 (c2-1 / want-01
                               :ARG0 (c2-0 / he)
                               :ARG1 (c2-11 / see-01
                                            :ARG0 (c2-7 / world)
                                            :ARG1 (c2-6 / event
                                                        :time (c2-12 / about-to))))
                   :ARG1-of (c2-4 / word-01
                                  :mod (c2-5 / other)))
      :snt2 (c2-2 / hope-01
                  :ARG0 (c2-8 / we)
                  :ARG1 (c2-9 / have-polarity-91
                              :ARG2 -)
                  :mode imperative))

# ::snt maybe via this one?
# ::tokens ["maybe", "via", "this", "one", "?"]
# ::lemmas ["maybe", "via", "this", "one", "?"]
(c3-2 / possible-01
      :ARG1 (c3-1 / event
                  :medium (c3-0 / one
                                :mod (c3-3 / this)))
      :polarity (c3-4 / amr-unknown))

# ::snt not heard on here
# ::tokens ["not", "heard", "on", "here"]
# ::lemmas ["not", "hear", "on", "here"]
(c4-0 / hear-01
      :location (c4-1 / here)
      :polarity -)

# ::snt -most impt is how we treat this terrorist once captured. Can only pray it's with the respect and dignity that terrorists deserve.
# ::tokens ["-most", "impt", "is", "how", "we", "treat", "this", "terrorist", "once", "captured", ".", "Can", "only", "pray", "it", "'s", "with", "the", "respect", "and", "dignity", "that", "terrorists", "deserve", "."]
# ::lemmas ["-most", "impt", "be", "how", "we", "treat", "this", "terrorist", "once", "capture", ".", "can", "only", "pray", "it", "be", "with", "the", "respect", "and", "dignity", "that", "terrorist", "deserve", "."]
(c5-3 / multi-sentence
      :snt1 (c5-0 / have-quant-91
                  :ARG1 (c5-6 / impt)
                  :ARG3 (c5-8 / most)
                  :ARG5 (c5-14 / treat-01
                               :ARG0 (c5-1 / we)
                               :ARG1 (c5-13 / terrorist
                                            :mod (c5-7 / this))
                               :time (c5-10 / capture-01
                                            :ARG0 c5-1
                                            :ARG1 c5-13)))
      :snt2 (c5-9 / possible-01
                  :ARG1 (c5-15 / pray-01
                               :ARG1 (c5-16 / and
                                            :op1 (c5-11 / respect-01
                                                        :ARG1 (c5-5 / terrorist))
                                            :op2 (c5-12 / dignity)
                                            :ARG1-of (c5-2 / deserve-01
                                                           :ARG0 c5-5))
                               :mod (c5-4 / only))))

# ::snt Prise d' : L'angoisse se prolonge - : Gunman in has told police he has "devices all over the city" .
# ::tokens ["Prise", "d", "'", ":", "L'angoisse", "se", "prolonge", "-", ":", "Gunman", "in", "has", "told", "police", "he", "has", "\"", "devices", "all", "over", "the", "city", "\"", "."]
# ::lemmas ["Prise", "d", "'", ":", "l'angoisse", "se", "prolonge", "-", ":", "Gunman", "in", "have", "tell", "police", "he", "have", "\"", "device", "all", "over", "the", "city", "\"", "."]
(c6-1 / multi-sentence
      :snt1 (c6-5 / prison
                  :mod (c6-7 / city
                             :name (c6-3 / name
                                         :op1 "Prise"
                                         :op2 "d'")))
      :snt2 (c6-9 / tell-01
                  :ARG0 (c6-10 / person
                               :name (c6-4 / name
                                           :op1 "Gunman"))
                  :ARG1 (c6-0 / have-03
                              :ARG0 c6-10
                              :ARG1 (c6-6 / device)
                              :location (c6-11 / all-over
                                               :op1 (c6-8 / city)))
                  :ARG2 (c6-2 / police)))

# ::snt thanks, i only couldn't open it
# ::tokens ["thanks", ",", "i", "only", "could", "n't", "open", "it"]
# ::lemmas ["thank", ",", "i", "only", "could", "not", "open", "it"]
(c7-6 / and
      :op1 (c7-5 / thank-01
                 :ARG0 (c7-2 / i))
      :op2 (c7-3 / possible-01
                 :ARG1 (c7-1 / open-01
                             :ARG0 c7-2
                             :ARG1 (c7-4 / it))
                 :mod (c7-0 / only)
                 :polarity -))

# ::snt That's odd, I checked it again, works fine for me.
# ::tokens ["That", "'s", "odd", ",", "I", "checked", "it", "again", ",", "works", "fine", "for", "me", "."]
# ::lemmas ["that", "be", "odd", ",", "i", "check", "it", "again", ",", "work", "fine", "for", "i", "."]
(c8-2 / odd
      :domain (c8-8 / that)
      :ARG1-of (c8-6 / cause-01
                     :ARG0 (c8-9 / and
                                 :op1 (c8-5 / check-01
                                            :ARG0 (c8-4 / i)
                                            :ARG1 (c8-7 / it)
                                            :mod (c8-3 / again))
                                 :op2 (c8-0 / work-09
                                            :ARG1 c8-7
                                            :ARG2 c8-4
                                            :ARG1-of (c8-1 / fine-04)))))

# ::snt this begins to sound less credible as a planned act of terrorism.
# ::tokens ["this", "begins", "to", "sound", "less", "credible", "as", "a", "planned", "act", "of", "terrorism", "."]
# ::lemmas ["this", "begin", "to", "sound", "less", "credible", "as", "a", "plan", "act", "of", "terrorism", "."]
(c9-2 / begin-01
      :ARG1 (c9-6 / sound-01
                  :ARG1 (c9-7 / this)
                  :ARG2 (c9-4 / credible
                              :ARG2-of (c9-0 / have-degree-91
                                             :ARG1 c9-7
                                             :ARG3 (c9-1 / less)
                                             :ARG4 (c9-8 / act-02
                                                         :ARG1-of (c9-3 / plan-01)
                                                         :mod (c9-5 / terrorism))))))

# ::snt wow
# ::tokens ["wow"]
# ::lemmas ["wow"]
(c10-0 / wow
       :mode expressive)

# ::snt I'm calling his bluff!!!
# ::tokens ["I", "'m", "calling", "his", "bluff", "!", "!", "!"]
# ::lemmas ["i", "be", "call", "his", "bluff", "!", "!", "!"]
(c11-1 / call-13
       :ARG0 (c11-2 / i)
       :ARG1 (c11-3 / bluff-01
                    :ARG0 c11-2
                    :ARG1 (c11-0 / he
                                 :ARG2-of c11-1)))

# ::snt I worry that the fact he has the hostages in the window for all to see and holding terroristic flags means he isn't bluffing
# ::tokens ["I", "worry", "that", "the", "fact", "he", "has", "the", "hostages", "in", "the", "window", "for", "all", "to", "see", "and", "holding", "terroristic", "flags", "means", "he", "is", "n't", "bluffing"]
# ::lemmas ["i", "worry", "that", "the", "fact", "he", "have", "the", "hostage", "in", "the", "window", "for", "all", "to", "see", "and", "hold", "terroristic", "flag", "mean", "he", "be", "not", "bluff"]
(c12-1 / worry-01
       :ARG0 (c12-3 / mean-01
                    :ARG1 (c12-11 / and
                                  :op1 (c12-0 / have-03
                                              :ARG0 (c12-13 / he)
                                              :ARG1 (c12-9 / hostage)
                                              :location (c12-8 / window)
                                              :purpose (c12-10 / see-01
                                                               :ARG0 (c12-6 / all)
                                                               :ARG1 c12-9))
                                  :op2 (c12-4 / hold-01
                                              :ARG0 c12-13
                                              :ARG1 (c12-2 / flag
                                                           :mod (c12-12 / terroristic))))
                    :ARG2 (c12-5 / bluff-01
                                 :ARG0 c12-13
                                 :polarity -))
       :ARG1 (c12-7 / i))

# ::snt Crikey
# ::tokens ["Crikey"]
# ::lemmas ["Crikey"]
(c13-1 / person
       :name (c13-0 / name
                    :op1 "Crikey"))

# ::snt Suspeito em Sidney alega ter bombas em vrios pontos da cidade via
# ::tokens ["Suspeito", "em", "Sidney", "alega", "ter", "bombas", "em", "vrios", "pontos", "da", "cidade", "via"]
# ::lemmas ["Suspeito", "em", "Sidney", "alega", "ter", "bombas", "em", "vrio", "ponto", "da", "cidade", "via"]
(c14-4 / person
       :ARG0-of (c14-0 / have-rel-role-91
                       :ARG1 (c14-11 / person
                                     :name (c14-3 / name
                                                  :op1 "Sidney"))
                       :ARG2 (c14-8 / suspect-01))
       :ARG0-of (c14-6 / cause-01
                       :ARG1 (c14-10 / ter-01
                                     :ARG1 (c14-2 / bomb)
                                     :ARG2 (c14-1 / person
                                                  :ARG0-of (c14-12 / have-03
                                                                   :ARG1 (c14-9 / pontos
                                                                                :mod (c14-5 / da
                                                                                            :op1 (c14-7 / cidade))))))))

# ::snt probably here the problem.
# ::tokens ["probably", "here", "the", "problem", "."]
# ::lemmas ["probably", "here", "the", "problem", "."]
(c15-1 / probable
       :domain (c15-2 / problem
                      :location (c15-0 / here)))

# ::snt sounds like a person needing mental health care? urgently. how did he get a gun.
# ::tokens ["sounds", "like", "a", "person", "needing", "mental", "health", "care", "?", "urgently", ".", "how", "did", "he", "get", "a", "gun", "."]
# ::lemmas ["sound", "like", "a", "person", "need", "mental", "health", "care", "?", "urgently", ".", "how", "do", "he", "get", "a", "gun", "."]
(c16-2 / multi-sentence
       :snt1 (c16-11 / sound-01
                     :ARG1 (c16-5 / need-01
                                  :ARG0 (c16-6 / person)
                                  :ARG1 (c16-8 / care-03
                                               :ARG1 (c16-0 / health
                                                            :mod (c16-7 / mental))))
                     :polarity (c16-12 / amr-unknown)
                     :manner (c16-3 / urgent))
       :snt2 (c16-9 / get-01
                    :ARG0 (c16-1 / he)
                    :ARG1 (c16-10 / gun)
                    :manner (c16-4 / amr-unknown)))

# ::snt dis seems sm cheap popularity stunt
# ::tokens ["dis", "seems", "sm", "cheap", "popularity", "stunt"]
# ::lemmas ["dis", "seem", "sm", "cheap", "popularity", "stunt"]
(c17-4 / seem-01
       :ARG1 (c17-1 / stunt-02
                    :ARG1 (c17-2 / popularity)
                    :ARG1-of (c17-3 / cheap-02
                                    :degree (c17-0 / sm))))

# ::snt run
# ::tokens ["run"]
# ::lemmas ["run"]
(c18-0 / run-02)
