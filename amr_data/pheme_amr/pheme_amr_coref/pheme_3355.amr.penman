# ::snt Smearing the victim, tainting any jury pool, dodging out of the real questions. This is definitely a calculated smoke screen
# ::tokens ["Smearing", "the", "victim", ",", "tainting", "any", "jury", "pool", ",", "dodging", "out", "of", "the", "real", "questions", ".", "This", "is", "definitely", "a", "calculated", "smoke", "screen"]
# ::lemmas ["smear", "the", "victim", ",", "taint", "any", "jury", "pool", ",", "dodge", "out", "of", "the", "real", "question", ".", "this", "be", "definitely", "a", "calculated", "smoke", "screen"]
(c1-3 / multi-sentence
      :snt1 (c1-16 / and
                   :op1 (c1-14 / smear-02
                               :ARG1 (c1-7 / victim))
                   :op2 (c1-15 / touch-01
                               :ARG1 (c1-8 / pool-01
                                           :ARG2 (c1-0 / jury)
                                           :mod (c1-6 / any)))
                   :op3 (c1-9 / dodge-01
                              :ARG1 (c1-13 / thing
                                           :ARG1-of (c1-5 / question-01)
                                           :ARG1-of (c1-10 / real-04))))
      :snt2 (c1-4 / screen
                  :mod (c1-2 / smoke-01)
                  :ARG1-of (c1-11 / calculate-01)
                  :domain (c1-12 / this)
                  :mod (c1-1 / definite)))

# ::snt It smells don't it. This is the plan to get Darren Wilson off. Period.
# ::tokens ["It", "smells", "do", "n't", "it", ".", "This", "is", "the", "plan", "to", "get", "Darren", "Wilson", "off", ".", "Period", "."]
# ::lemmas ["it", "smell", "do", "not", "it", ".", "this", "be", "the", "plan", "to", "get", "Darren", "Wilson", "off", ".", "period", "."]
(c2-0 / multi-sentence
      :snt1 (c2-6 / smell-02
                  :ARG1 (c2-2 / it)
                  :polarity -)
      :snt2 (c2-4 / plan-01
                  :ARG1 (c2-5 / get-off-23
                              :ARG1 (c2-8 / person
                                          :name (c2-3 / name
                                                      :op1 "Darren"
                                                      :op2 "Wilson")))
                  :domain (c2-7 / this))
      :snt3 (c2-1 / period))

# ::snt Hopefully not - I'm seeing a lot of people who recognize that his involvement in the robbery is irrelevant to his execution
# ::tokens ["Hopefully", "not", "-", "I", "'m", "seeing", "a", "lot", "of", "people", "who", "recognize", "that", "his", "involvement", "in", "the", "robbery", "is", "irrelevant", "to", "his", "execution"]
# ::lemmas ["hopefully", "not", "-", "i", "be", "see", "a", "lot", "of", "people", "who", "recognize", "that", "his", "involvement", "in", "the", "robbery", "be", "irrelevant", "to", "his", "execution"]
(c3-2 / multi-sentence
      :snt1 (c3-0 / hope-01
                  :polarity -)
      :snt2 (c3-10 / see-01
                   :ARG0 (c3-5 / i)
                   :ARG1 (c3-7 / person
                               :quant (c3-1 / lot)
                               :ARG0-of (c3-8 / recognize-02
                                              :ARG1 (c3-6 / relevant-01
                                                          :ARG1 (c3-9 / involve-01
                                                                      :ARG1 (c3-11 / he)
                                                                      :ARG2 (c3-4 / rob-01))
                                                          :ARG2 (c3-3 / execute-01
                                                                      :ARG1 c3-11)
                                                          :polarity -)))))

# ::snt dm
# ::tokens ["dm"]
# ::lemmas ["dm"]
(c4-1 / person
      :name (c4-0 / name
                  :op1 "dm"))

# ::snt that was their intent all along. Brown will be painted a "thug" and "deserves" what he got.
# ::tokens ["that", "was", "their", "intent", "all", "along", ".", "Brown", "will", "be", "painted", "a", "\"", "thug", "\"", "and", "\"", "deserves", "\"", "what", "he", "got", "."]
# ::lemmas ["that", "be", "their", "intent", "all", "along", ".", "Brown", "will", "be", "paint", "a", "\"", "thug", "\"", "and", "\"", "deserve", "\"", "what", "he", "get", "."]
(c5-0 / multi-sentence
      :snt1 (c5-3 / intend-01
                  :ARG0 (c5-10 / they)
                  :ARG1 (c5-9 / that)
                  :duration (c5-12 / all-along))
      :snt2 (c5-6 / paint-03
                  :ARG1 (c5-11 / person
                               :name (c5-4 / name
                                           :op1 "Brown"))
                  :ARG2 (c5-2 / and
                              :op1 (c5-5 / thug)
                              :op2 (c5-7 / deserve-01
                                         :ARG0 c5-11
                                         :ARG1 (c5-1 / thing
                                                     :ARG1-of (c5-8 / get-01
                                                                    :ARG0 c5-11))))))

# ::snt He did that quickly &amp; made moves. Like ok lets get that wheel spinning.
# ::tokens ["He", "did", "that", "quickly", "&", "amp", ";", "made", "moves", ".", "Like", "ok", "lets", "get", "that", "wheel", "spinning", "."]
# ::lemmas ["he", "do", "that", "quickly", "&", "amp", ";", "make", "move", ".", "like", "ok", "let", "get", "that", "wheel", "spinning", "."]
(c6-3 / multi-sentence
      :snt1 (c6-14 / and
                   :op1 (c6-8 / do-02
                              :ARG0 (c6-0 / he)
                              :ARG1 (c6-13 / that)
                              :ARG1-of (c6-5 / quick-02))
                   :op2 (c6-7 / make-02
                              :ARG0 c6-0
                              :ARG1 (c6-2 / move-03
                                          :ARG0 c6-0)))
      :snt2 (c6-10 / get-04
                   :ARG0 (c6-1 / we)
                   :ARG1 (c6-12 / spin-01
                                :ARG0 c6-1
                                :ARG1 (c6-6 / wheel
                                            :mod (c6-11 / that)))
                   :ARG1-of (c6-9 / resemble-01
                                  :ARG2 (c6-4 / okay-04))
                   :mode imperative))

# ::snt They're trying to skirt the situation &amp; take focus off of Darren Wilson. Who's left over to blame? Dead victim.
# ::tokens ["They", "'re", "trying", "to", "skirt", "the", "situation", "&", "amp", ";", "take", "focus", "off", "of", "Darren", "Wilson", ".", "Who", "'s", "left", "over", "to", "blame", "?", "Dead", "victim", "."]
# ::lemmas ["they", "be", "try", "to", "skirt", "the", "situation", "&", "amp", ";", "take", "focus", "off", "of", "Darren", "Wilson", ".", "who", "be", "leave", "over", "to", "blame", "?", "dead", "victim", "."]
(c7-1 / multi-sentence
      :snt1 (c7-13 / try-01
                   :ARG0 (c7-11 / they)
                   :ARG1 (c7-12 / skirt-02
                                :ARG0 c7-11
                                :ARG1 (c7-15 / and
                                             :op1 (c7-4 / situation)
                                             :op2 (c7-5 / amp)))
                   :purpose (c7-7 / take-off-07
                                  :ARG0 c7-11
                                  :ARG1 (c7-0 / focus-01
                                              :ARG2 (c7-8 / person
                                                          :name (c7-6 / name
                                                                      :op1 "Darren"
                                                                      :op2 "Wilson")))))
      :snt2 c7-1
      :snt3 (c7-3 / blame-01
                  :ARG1 (c7-9 / amr-unknown
                              :ARG1-of (c7-2 / leave-over-08)))
      :snt4 (c7-14 / person
                   :ARG1-of (c7-10 / die-01)))
