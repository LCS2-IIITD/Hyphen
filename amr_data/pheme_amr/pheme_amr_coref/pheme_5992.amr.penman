# ::snt like i said...
# ::tokens ["like", "i", "said", "..."]
# ::lemmas ["like", "i", "say", "..."]
(c1-1 / resemble-01
      :ARG2 (c1-2 / thing
                  :ARG1-of (c1-0 / say-01
                                 :ARG0 (c1-3 / i))))

# ::snt LOL....OK...LOST FRONTAL LOBE...AKA:LIBERAL
# ::tokens ["LOL", "....", "OK", "...", "LOST", "FRONTAL", "LOBE", "...", "AKA", ":", "LIBERAL"]
# ::lemmas ["LOL", "....", "ok", "...", "lose", "FRONTAL", "LOBE", "...", "AKA", ":", "LIBERAL"]
(c2-8 / and
      :op1 (c2-2 / laugh-01
                 :manner (c2-7 / loud)
                 :mode expressive)
      :op2 (c2-4 / okay-01)
      :op3 (c2-0 / lie-08
                 :ARG1-of (c2-1 / have-quant-91
                                :ARG3 (c2-3 / most))
                 :ARG1-of (c2-6 / mean-01
                                :ARG2 (c2-5 / liberal-02))))

# ::snt yea yea i know....thanks for reminding me...but I'm about to catch this flight...holla at u hoes...
# ::tokens ["yea", "yea", "i", "know", "....", "thanks", "for", "reminding", "me", "...", "but", "I", "'m", "about", "to", "catch", "this", "flight", "...", "holla", "at", "u", "hoes", "..."]
# ::lemmas ["yea", "yea", "i", "know", "....", "thank", "for", "remind", "i", "...", "but", "i", "be", "about", "to", "catch", "this", "flight", "...", "holla", "at", "u", "hoe", "..."]
(c3-3 / multi-sentence
      :snt1 (c3-14 / know-01
                   :ARG0 (c3-6 / i)
                   :mod (c3-1 / yea))
      :snt2 (c3-8 / contrast-01
                  :ARG1 (c3-12 / thank-01
                               :ARG0 (c3-9 / i)
                               :ARG1 (c3-11 / you)
                               :ARG2 (c3-7 / remind-01
                                           :ARG0 (c3-5 / you
                                                       :ARG1 c3-9))
                               :ARG2 (c3-10 / catch-01
                                            :ARG0 c3-9
                                            :ARG1 (c3-2 / fly-01
                                                        :mod (c3-13 / this))
                                            :time (c3-15 / about-to)))
                  :snt3 (c3-0 / holla-00
                              :ARG0 (c3-4 / i)
                              :ARG1 c3-5
                              :mode expressive)))

# ::snt Mike Brown death was tragic shouldn't have happened. He shouldn't have resisted but should have been handled
# ::tokens ["Mike", "Brown", "death", "was", "tragic", "should", "n't", "have", "happened", ".", "He", "should", "n't", "have", "resisted", "but", "should", "have", "been", "handled"]
# ::lemmas ["Mike", "Brown", "death", "be", "tragic", "should", "not", "have", "happen", ".", "he", "should", "not", "have", "resist", "but", "should", "have", "be", "handle"]
(c4-2 / multi-sentence
      :snt1 (c4-8 / recommend-01
                  :ARG1 (c4-7 / die-01
                              :ARG1 (c4-6 / person
                                          :name (c4-5 / name
                                                      :op1 "Mike"
                                                      :op2 "Brown"))
                              :mod (c4-10 / tragic))
                  :polarity -)
      :snt2 (c4-9 / contrast-01
                  :ARG1 (c4-4 / recommend-01
                              :ARG1 (c4-3 / resist-01
                                          :ARG0 (c4-0 / he)
                                          :polarity -))
                  :ARG2 (c4-1 / recommend-01
                              :ARG1 (c4-11 / handle-01
                                           :ARG1 c4-0))))

# ::snt GITMO, IDIOT....YES HE DOES!
# ::tokens ["GITMO", ",", "IDIOT", "....", "YES", "HE", "DOES", "!"]
# ::lemmas ["GITMO", ",", "IDIOT", "....", "yes", "he", "do", "!"]
(c5-1 / multi-sentence
      :snt1 (c5-5 / say-01
                  :ARG1 (c5-4 / gitmo)
                  :ARG2 (c5-2 / idiot))
      :snt2 (c5-3 / do-02
                  :ARG0 (c5-0 / he)))

# ::snt wasn't his. He was visiting his dad. He was acting suspicious and Z had every right to follow him
# ::tokens ["was", "n't", "his", ".", "He", "was", "visiting", "his", "dad", ".", "He", "was", "acting", "suspicious", "and", "Z", "had", "every", "right", "to", "follow", "him"]
# ::lemmas ["be", "not", "his", ".", "he", "be", "visit", "his", "dad", ".", "he", "be", "act", "suspicious", "and", "z", "have", "every", "right", "to", "follow", "he"]
(c6-2 / multi-sentence
      :snt1 (c6-0 / he
                  :polarity -)
      :snt2 (c6-7 / visit-01
                  :ARG0 (c6-15 / he)
                  :ARG1 (c6-8 / person
                              :ARG0-of (c6-9 / have-rel-role-91
                                             :ARG1 c6-15
                                             :ARG2 (c6-10 / dad))))
      :snt3 (c6-13 / and
                   :op1 (c6-5 / act-01
                              :ARG0 (c6-12 / he)
                              :ARG1 (c6-14 / suspicious-02
                                           :ARG0 c6-12))
                   :op2 (c6-11 / right-05
                               :ARG1 (c6-3 / person
                                           :name (c6-6 / name
                                                       :op1 "Z"))
                               :ARG2 (c6-1 / follow-01
                                           :ARG0 c6-3
                                           :ARG1 c6-12)
                               :mod (c6-4 / every))))

# ::snt ha fat momma is the only hoe
# ::tokens ["ha", "fat", "momma", "is", "the", "only", "hoe"]
# ::lemmas ["ha", "fat", "momma", "be", "the", "only", "hoe"]
(c7-0 / hoe
      :mod (c7-3 / only)
      :domain (c7-5 / person
                    :ARG0-of (c7-6 / have-rel-role-91
                                   :ARG2 (c7-2 / momma))
                    :ARG1-of (c7-1 / fat-03))
      :mod (c7-4 / ha
                 :mode expressive))

# ::snt yeah Obama, I really believe that, more than likely you funded them
# ::tokens ["yeah", "Obama", ",", "I", "really", "believe", "that", ",", "more", "than", "likely", "you", "funded", "them"]
# ::lemmas ["yeah", "Obama", ",", "i", "really", "believe", "that", ",", "more", "than", "likely", "you", "fund", "they"]
(c8-9 / say-01
      :ARG0 (c8-5 / i)
      :ARG1 (c8-4 / believe-01
                  :ARG0 c8-5
                  :ARG1 (c8-1 / fund-01
                              :ARG0 (c8-7 / person
                                          :name (c8-6 / name
                                                      :op1 "Obama"))
                              :ARG1 (c8-10 / they)
                              :ARG1-of (c8-2 / likely-01
                                             :mod (c8-3 / more-than)))
                  :ARG1-of (c8-8 / real-04)
                  :mod (c8-0 / yeah
                             :mode expressive))
      :ARG2 c8-7)

# ::snt I'm sure he is aware, but the buy line on the post is really bad and shallow. I could have done better.
# ::tokens ["I", "'m", "sure", "he", "is", "aware", ",", "but", "the", "buy", "line", "on", "the", "post", "is", "really", "bad", "and", "shallow", ".", "I", "could", "have", "done", "better", "."]
# ::lemmas ["i", "be", "sure", "he", "be", "aware", ",", "but", "the", "buy", "line", "on", "the", "post", "be", "really", "bad", "and", "shallow", ".", "i", "could", "have", "do", "well", "."]
(c9-0 / multi-sentence
      :snt1 (c9-18 / contrast-01
                   :ARG1 (c9-4 / sure-02
                               :ARG0 (c9-15 / i)
                               :ARG1 (c9-13 / realize-01
                                            :ARG0 (c9-8 / he)))
                   :ARG2 (c9-7 / and
                               :op1 (c9-10 / bad-07
                                           :ARG1 (c9-9 / line
                                                       :mod (c9-16 / buy-01)
                                                       :location (c9-2 / post))
                                           :degree (c9-1 / really))
                               :op2 (c9-11 / shallow
                                           :domain c9-9)))
      :snt2 (c9-5 / possible-01
                  :ARG1 (c9-3 / do-02
                              :ARG0 (c9-17 / i)
                              :ARG1 (c9-14 / good-02
                                           :ARG2-of (c9-6 / have-degree-91
                                                          :ARG1 c9-3
                                                          :ARG3 (c9-12 / more))))))

# ::snt saying they provoked no one is as ignorant as those chanting, "hands up don't shoot". It never happened.
# ::tokens ["saying", "they", "provoked", "no", "one", "is", "as", "ignorant", "as", "those", "chanting", ",", "\"", "hands", "up", "do", "n't", "shoot", "\"", ".", "It", "never", "happened", "."]
# ::lemmas ["say", "they", "provoke", "no", "one", "be", "as", "ignorant", "as", "those", "chant", ",", "\"", "hand", "up", "do", "not", "shoot", "\"", ".", "it", "never", "happen", "."]
(c10-3 / multi-sentence
       :snt1 (c10-7 / ignorant-02
                    :ARG1 (c10-11 / say-01
                                  :ARG1 (c10-9 / provoke-01
                                               :ARG0 (c10-12 / they)))
                    :ARG2 (c10-8 / no-one)
                    :ARG2-of (c10-0 / have-degree-91
                                    :ARG1 c10-11
                                    :ARG3 (c10-5 / equal)
                                    :ARG4 (c10-13 / person
                                                  :ARG0-of (c10-10 / chant-01
                                                                   :ARG1 (c10-14 / and
                                                                                 :op1 (c10-2 / hand-up-00
                                                                                             :ARG1 c10-8)
                                                                                 :op2 (c10-6 / shoot-02
                                                                                             :ARG0 c10-8
                                                                                             :polarity -))))))
       :snt2 (c10-4 / event
                    :time (c10-1 / ever)
                    :polarity -))

# ::snt Everything isnt about black people you ignorant fuck
# ::tokens ["Everything", "is", "nt", "about", "black", "people", "you", "ignorant", "fuck"]
# ::lemmas ["everything", "be", "not", "about", "black", "people", "you", "ignorant", "fuck"]
(c11-8 / say-01
       :ARG0 (c11-4 / i)
       :ARG1 (c11-6 / concern-02
                    :ARG0 (c11-3 / everything)
                    :ARG1 (c11-5 / person
                                 :ARG1-of (c11-2 / black-05))
                    :polarity -)
       :ARG2 (c11-0 / you
                    :ARG1-of (c11-7 / ignorant-02)
                    :ARG0-of (c11-1 / fuck-01)))

# ::snt and while i wait for the nd answer that wont be accurate..who did eric garner provoke ?
# ::tokens ["and", "while", "i", "wait", "for", "the", "nd", "answer", "that", "wo", "nt", "be", "accurate", "..", "who", "did", "eric", "garner", "provoke", "?"]
# ::lemmas ["and", "while", "i", "wait", "for", "the", "nd", "answer", "that", "will", "not", "be", "accurate", "..", "who", "do", "eric", "garner", "provoke", "?"]
(c12-2 / multi-sentence
       :snt1 (c12-13 / and
                     :op2 (c12-0 / have-concession-91
                                 :ARG1 (c12-3 / accurate
                                              :domain (c12-11 / that)
                                              :polarity -)
                                 :ARG2 (c12-1 / wait-01
                                              :ARG1 (c12-4 / i)
                                              :ARG2 (c12-6 / answer-01
                                                           :mod (c12-8 / definite)))))
       :snt2 (c12-7 / provoke-01
                    :ARG0 (c12-9 / garner-01
                                 :ARG0 (c12-12 / person
                                               :name (c12-5 / name
                                                            :op1 "Eric"
                                                            :op2 "Holder"))
                                 :ARG1 (c12-10 / amr-unknown))))

# ::snt Mike Brown deserves to be ft under. His ass had it coming for the way he acted. He initiated a fight
# ::tokens ["Mike", "Brown", "deserves", "to", "be", "ft", "under", ".", "His", "ass", "had", "it", "coming", "for", "the", "way", "he", "acted", ".", "He", "initiated", "a", "fight"]
# ::lemmas ["Mike", "Brown", "deserve", "to", "be", "ft", "under", ".", "his", "ass", "have", "it", "come", "for", "the", "way", "he", "act", ".", "he", "initiate", "a", "fight"]
(c13-2 / multi-sentence
       :snt1 (c13-10 / deserve-01
                     :ARG0 (c13-9 / person
                                  :name (c13-8 / name
                                               :op1 "Mike"
                                               :op2 "Brown")
                                  :part (c13-14 / ass))
                     :ARG1 (c13-5 / be-located-at-91
                                  :ARG1 c13-9
                                  :ARG2 (c13-3 / under)))
       :snt2 (c13-0 / have-03
                    :ARG0 c13-14
                    :ARG1 (c13-11 / come-01
                                  :ARG1 c13-14
                                  :ARG1-of (c13-12 / cause-01
                                                   :ARG0 (c13-13 / thing
                                                                 :manner-of (c13-6 / act-01
                                                                                   :ARG0 c13-9)))))
       :snt3 (c13-7 / initiate-01
                    :ARG0 (c13-1 / he)
                    :ARG1 (c13-4 / fight-01
                                 :ARG0 c13-1)))

# ::snt Wonder why you're so busy sucking in everything that sniveling lowlife said? Even obvious lies.
# ::tokens ["Wonder", "why", "you", "'re", "so", "busy", "sucking", "in", "everything", "that", "sniveling", "lowlife", "said", "?", "Even", "obvious", "lies", "."]
# ::lemmas ["wonder", "why", "you", "be", "so", "busy", "suck", "in", "everything", "that", "snivel", "lowlife", "say", "?", "even", "obvious", "lie", "."]
(c14-3 / multi-sentence
       :snt1 (c14-0 / wonder-01
                    :ARG0 (c14-1 / you)
                    :ARG1 (c14-14 / thing
                                  :ARG0-of (c14-11 / cause-01
                                                   :ARG1 (c14-5 / busy-01
                                                                :ARG1 c14-1
                                                                :ARG2 (c14-13 / suck-01
                                                                              :ARG0 c14-1
                                                                              :ARG1 (c14-8 / everything
                                                                                           :ARG1-of (c14-9 / say-01
                                                                                                           :ARG0 (c14-2 / lowlife
                                                                                                                        :ARG0-of (c14-4 / snivel-01)))))
                                                                :degree (c14-7 / so)))))
       :snt2 (c14-12 / lie-08
                     :ARG1-of (c14-6 / obvious-01)
                     :mod (c14-10 / even)))

# ::snt and his visit to the embassy today too?
# ::tokens ["and", "his", "visit", "to", "the", "embassy", "today", "too", "?"]
# ::lemmas ["and", "his", "visit", "to", "the", "embassy", "today", "too", "?"]
(c15-6 / and
       :op2 (c15-3 / visit-01
                   :ARG0 (c15-0 / he)
                   :ARG1 (c15-1 / embassy)
                   :time (c15-5 / today)
                   :mod (c15-4 / too)
                   :polarity (c15-2 / amr-unknown)))

# ::snt . Perpetuating myths about what Obama said to support the secret Muslim myth, how original
# ::tokens [".", "Perpetuating", "myths", "about", "what", "Obama", "said", "to", "support", "the", "secret", "Muslim", "myth", ",", "how", "original"]
# ::lemmas [".", "perpetuate", "myth", "about", "what", "Obama", "say", "to", "support", "the", "secret", "Muslim", "myth", ",", "how", "original"]
(c16-7 / perpetuate-01
       :ARG1 (c16-1 / myth
                    :topic (c16-11 / thing
                                   :ARG1-of (c16-10 / say-01
                                                    :ARG0 (c16-12 / person
                                                                  :name (c16-5 / name
                                                                               :op1 "Obama")))
                                   :ARG0-of (c16-4 / support-01
                                                   :ARG1 (c16-8 / myth
                                                                :topic (c16-9 / religious-group
                                                                              :name (c16-6 / name
                                                                                           :op1 "Muslim"))
                                                                :mod (c16-0 / secret)))))
       :mod (c16-2 / original
                   :degree (c16-3 / so)))

# ::snt Like said. You don't care about black lives. You just hate white people
# ::tokens ["Like", "said", ".", "You", "do", "n't", "care", "about", "black", "lives", ".", "You", "just", "hate", "white", "people"]
# ::lemmas ["like", "say", ".", "you", "do", "not", "care", "about", "black", "life", ".", "you", "just", "hate", "white", "people"]
(c17-4 / multi-sentence
       :snt1 (c17-8 / resemble-01
                    :ARG2 (c17-12 / thing
                                  :ARG1-of (c17-11 / say-01)))
       :snt2 (c17-9 / care-01
                    :ARG0 (c17-1 / you)
                    :ARG1 (c17-3 / life
                                 :poss (c17-7 / person
                                              :ARG1-of (c17-6 / black-05)))
                    :polarity -)
       :snt3 (c17-0 / hate-01
                    :ARG0 (c17-10 / you)
                    :ARG1 (c17-13 / person
                                  :ARG1-of (c17-2 / white-02))
                    :mod (c17-5 / just)))

# ::snt That was a weak response, wonder if he actually said that or an aid tweeted it.
# ::tokens ["That", "was", "a", "weak", "response", ",", "wonder", "if", "he", "actually", "said", "that", "or", "an", "aid", "tweeted", "it", "."]
# ::lemmas ["that", "be", "a", "weak", "response", ",", "wonder", "if", "he", "actually", "say", "that", "or", "an", "aid", "tweet", "it", "."]
(c18-2 / multi-sentence
       :snt1 (c18-9 / respond-01
                    :ARG2 (c18-12 / that)
                    :ARG1-of (c18-1 / weak-02))
       :snt2 (c18-7 / wonder-01
                    :ARG0 (c18-6 / i)
                    :ARG1 (c18-10 / truth-value
                                  :polarity-of (c18-3 / or
                                                      :op1 (c18-11 / say-01
                                                                   :ARG0 (c18-0 / he)
                                                                   :ARG1 (c18-8 / that)
                                                                   :ARG1-of (c18-13 / actual-02))
                                                      :op2 (c18-4 / tweet-02
                                                                  :ARG0 (c18-5 / aid-01)
                                                                  :ARG1 c18-8)))))

# ::snt Wrong. Try again. UN Speech.
# ::tokens ["Wrong", ".", "Try", "again", ".", "UN", "Speech", "."]
# ::lemmas ["wrong", ".", "try", "again", ".", "UN", "Speech", "."]
(c19-2 / multi-sentence
       :snt1 (c19-0 / wrong-04)
       :snt2 (c19-6 / try-01
                    :ARG0 (c19-1 / you)
                    :mod (c19-7 / again)
                    :mode imperative)
       :snt3 (c19-5 / speak-01
                    :ARG0 (c19-3 / organization
                                 :name (c19-4 / name
                                              :op1 "UN"))))

# ::snt dude, I have no idea. I guess he equivocates them to french people who did nothing but go to work.
# ::tokens ["dude", ",", "I", "have", "no", "idea", ".", "I", "guess", "he", "equivocates", "them", "to", "french", "people", "who", "did", "nothing", "but", "go", "to", "work", "."]
# ::lemmas ["dude", ",", "i", "have", "no", "idea", ".", "i", "guess", "he", "equivocate", "they", "to", "french", "people", "who", "do", "nothing", "but", "go", "to", "work", "."]
(c20-3 / multi-sentence
       :snt1 (c20-14 / say-01
                     :ARG1 (c20-0 / have-03
                                  :ARG0 (c20-5 / i)
                                  :ARG1 (c20-11 / idea)
                                  :polarity -)
                     :ARG2 (c20-9 / dude))
       :snt2 (c20-12 / guess-01
                     :ARG0 (c20-2 / i)
                     :ARG1 (c20-4 / equate-01
                                  :ARG0 (c20-16 / he)
                                  :ARG1 (c20-15 / they)
                                  :ARG2 (c20-8 / person
                                               :mod (c20-10 / country
                                                            :name (c20-6 / name
                                                                         :op1 "France"))
                                               :ARG0-of (c20-13 / go-02
                                                                :ARG4 (c20-1 / work-01
                                                                             :ARG0 c20-8)
                                                                :mod (c20-7 / nothing-but))))))

# ::snt The future belongs to the free but you think "The future must not belong to those who slander the prophet of Islam," Obama
# ::tokens ["The", "future", "belongs", "to", "the", "free", "but", "you", "think", "\"", "The", "future", "must", "not", "belong", "to", "those", "who", "slander", "the", "prophet", "of", "Islam", ",", "\"", "Obama"]
# ::lemmas ["the", "future", "belong", "to", "the", "free", "but", "you", "think", "\"", "the", "future", "must", "not", "belong", "to", "those", "who", "slander", "the", "prophet", "of", "Islam", ",", "\"", "Obama"]
(c21-1 / say-01
       :ARG0 (c21-0 / person
                    :name (c21-9 / name
                                 :op1 "Obama"))
       :ARG1 (c21-17 / contrast-01
                     :ARG1 (c21-6 / belong-01
                                  :ARG0 (c21-4 / future)
                                  :ARG1 (c21-2 / person
                                               :ARG1-of (c21-15 / free-04)))
                     :ARG2 (c21-19 / think-01
                                   :ARG0 (c21-13 / you)
                                   :ARG1 (c21-14 / obligate-01
                                                 :ARG2 (c21-12 / belong-01
                                                               :ARG0 c21-4
                                                               :ARG1 (c21-5 / person
                                                                            :mod (c21-18 / that)
                                                                            :ARG0-of (c21-8 / slander-01
                                                                                            :ARG1 (c21-11 / person
                                                                                                          :ARG0-of (c21-3 / have-org-role-91
                                                                                                                          :ARG1 (c21-10 / religious-group
                                                                                                                                        :name (c21-16 / name
                                                                                                                                                      :op1 "Islam"))
                                                                                                                          :ARG2 (c21-7 / prophet)))))
                                                               :polarity -)))))

# ::snt not in my book...
# ::tokens ["not", "in", "my", "book", "..."]
# ::lemmas ["not", "in", "my", "book", "..."]
(c22-1 / book
       :poss (c22-0 / i)
       :polarity -)

# ::snt yea ok...
# ::tokens ["yea", "ok", "..."]
# ::lemmas ["yea", "ok", "..."]
(c23-0 / okay-04
       :mod (c23-1 / yeh))

# ::snt I was referring to the written statement, not the Investigation.
# ::tokens ["I", "was", "referring", "to", "the", "written", "statement", ",", "not", "the", "Investigation", "."]
# ::lemmas ["i", "be", "refer", "to", "the", "write", "statement", ",", "not", "the", "Investigation", "."]
(c24-4 / contrast-01
       :ARG1 (c24-3 / refer-01
                    :ARG0 (c24-1 / i)
                    :ARG1 (c24-6 / state-01
                                 :ARG1-of (c24-0 / write-01)))
       :ARG2 (c24-2 / refer-01
                    :ARG0 c24-1
                    :ARG1 (c24-5 / investigate-01)
                    :polarity -))

# ::snt (on 's) ./ France for helping in the,NOW-Starting,Investigations.This, Doesn't compose a "weak response".
# ::tokens ["(", "on", "'s", ")", "./", "France", "for", "helping", "in", "the", ",", "NOW", "-", "Starting", ",", "Investigations", ".", "This", ",", "Does", "n't", "compose", "a", "\"", "weak", "response", "\"", "."]
# ::lemmas ["(", "on", "be", ")", "./", "France", "for", "help", "in", "the", ",", "NOW", "-", "Starting", ",", "Investigations", ".", "this", ",", "do", "not", "compose", "a", "\"", "weak", "response", "\"", "."]
(c25-2 / multi-sentence
       :snt1 (c25-10 / thank-01
                     :ARG1 (c25-7 / country
                                  :name (c25-4 / name
                                               :op1 "France"))
                     :ARG2 (c25-0 / help-01
                                  :ARG0 c25-7
                                  :ARG1 (c25-3 / investigate-01
                                               :time (c25-5 / now))))
       :snt2 (c25-6 / compose-01
                    :ARG0 (c25-9 / this)
                    :ARG1 (c25-8 / respond-01
                                 :ARG1-of (c25-1 / weak-02))
                    :polarity -))

# ::snt facts don't matter to you though. It's all about race. Not about responsibility. You'll get far.
# ::tokens ["facts", "do", "n't", "matter", "to", "you", "though", ".", "It", "'s", "all", "about", "race", ".", "Not", "about", "responsibility", ".", "You", "'ll", "get", "far", "."]
# ::lemmas ["fact", "do", "not", "matter", "to", "you", "though", ".", "it", "be", "all", "about", "race", ".", "not", "about", "responsibility", ".", "you", "'ll", "get", "far", "."]
(c26-3 / multi-sentence
       :snt1 (c26-0 / have-concession-91
                    :ARG2 (c26-7 / matter-01
                                 :ARG1 (c26-2 / fact)
                                 :ARG2 (c26-1 / you)
                                 :polarity -))
       :snt2 (c26-9 / concern-02
                    :ARG0 (c26-4 / it)
                    :ARG1 (c26-8 / race)
                    :degree (c26-13 / all))
       :snt3 (c26-10 / concern-02
                     :ARG0 (c26-11 / it)
                     :ARG1 (c26-5 / responsible-03)
                     :polarity -)
       :snt4 (c26-12 / get-05
                     :ARG1 (c26-14 / you)
                     :ARG2 (c26-6 / far)))

# ::snt as late as this guy is,he's probably just now flying to Furgeson to protest.
# ::tokens ["as", "late", "as", "this", "guy", "is", ",", "he", "'s", "probably", "just", "now", "flying", "to", "Furgeson", "to", "protest", "."]
# ::lemmas ["as", "late", "as", "this", "guy", "be", ",", "he", "be", "probably", "just", "now", "fly", "to", "Furgeson", "to", "protest", "."]
(c27-5 / probable
       :domain (c27-1 / fly-01
                      :ARG1 (c27-7 / guy
                                   :mod (c27-8 / this))
                      :destination (c27-6 / city
                                          :name (c27-3 / name
                                                       :op1 "Furgeson"))
                      :time (c27-4 / now
                                   :mod (c27-0 / just))
                      :purpose (c27-9 / protest-01
                                      :ARG0 c27-7))
       :concession (c27-2 / late
                          :domain c27-7))

# ::snt ( ) President Obama's been briefed about this Attack,almost,4 hrs ago.His Services work with ./.
# ::tokens ["(", ")", "President", "Obama", "'s", "been", "briefed", "about", "this", "Attack", ",", "almost,4", "hrs", "ago", ".", "His", "Services", "work", "with", "./."]
# ::lemmas ["(", ")", "President", "Obama", "be", "be", "brief", "about", "this", "Attack", ",", "almost,4", "hrs", "ago", ".", "his", "Services", "work", "with", "./."]
(c28-3 / multi-sentence
       :snt1 (c28-4 / brief-01
                    :ARG1 (c28-8 / person
                                 :name (c28-6 / name
                                              :op1 "Obama")
                                 :ARG0-of (c28-0 / have-org-role-91
                                                 :ARG2 (c28-15 / president)))
                    :ARG2 (c28-16 / attack-01
                                  :mod (c28-14 / this))
                    :time (c28-10 / before
                                  :op1 (c28-7 / now)
                                  :quant (c28-5 / almost
                                                :op1 (c28-12 / temporal-quantity
                                                             :unit (c28-2 / hour)
                                                             :quant 4))))
       :snt2 (c28-1 / work-01
                    :ARG0 (c28-13 / service
                                  :poss (c28-9 / he))
                    :ARG3 (c28-11 / amr-unknown)))

# ::snt &lt;----------------------
# ::tokens ["&", "lt;----------------------"]
# ::lemmas ["&", "lt;----------------------"]
(c29-1 / and
       :op2 (c29-0 / string-entity
                   :value "&lt;--------------------"))

# ::snt but Trayvon Martin and Michael Brown get live statements?
# ::tokens ["but", "Trayvon", "Martin", "and", "Michael", "Brown", "get", "live", "statements", "?"]
# ::lemmas ["but", "Trayvon", "Martin", "and", "Michael", "Brown", "get", "live", "statement", "?"]
(c30-5 / contrast-01
       :ARG2 (c30-6 / get-01
                    :ARG0 (c30-9 / and
                                 :op1 (c30-4 / person
                                             :name (c30-2 / name
                                                          :op1 "Trayvon"
                                                          :op2 "Martin"))
                                 :op2 (c30-8 / person
                                             :name (c30-3 / name
                                                          :op1 "Michael"
                                                          :op2 "Brown")))
                    :ARG1 (c30-7 / state-01
                                 :manner (c30-0 / live))
                    :polarity (c30-1 / amr-unknown)))

# ::snt and while i wait for the first answer that will never come...who did mike brown provoke ?
# ::tokens ["and", "while", "i", "wait", "for", "the", "first", "answer", "that", "will", "never", "come", "...", "who", "did", "mike", "brown", "provoke", "?"]
# ::lemmas ["and", "while", "i", "wait", "for", "the", "first", "answer", "that", "will", "never", "come", "...", "who", "do", "mike", "brown", "provoke", "?"]
(c31-10 / and
        :op2 (c31-7 / provoke-01
                    :ARG0 (c31-9 / person
                                 :name (c31-5 / name
                                              :op1 "Mike"
                                              :op2 "Brown"))
                    :ARG1 (c31-3 / amr-unknown)
                    :time (c31-0 / wait-01
                                 :ARG1 (c31-4 / i)
                                 :ARG2 (c31-6 / answer-01
                                              :ord (c31-1 / ordinal-entity
                                                          :value 1)
                                              :ARG1-of (c31-8 / come-01
                                                              :time (c31-2 / ever)
                                                              :polarity -)))))

# ::snt facts say that DISPATCH told him not to follow. Dispatch are not the police. They answer a phone.
# ::tokens ["facts", "say", "that", "DISPATCH", "told", "him", "not", "to", "follow", ".", "Dispatch", "are", "not", "the", "police", ".", "They", "answer", "a", "phone", "."]
# ::lemmas ["fact", "say", "that", "DISPATCH", "tell", "he", "not", "to", "follow", ".", "dispatch", "be", "not", "the", "police", ".", "they", "answer", "a", "phone", "."]
(c32-2 / multi-sentence
       :snt1 (c32-9 / say-01
                    :ARG0 (c32-1 / fact)
                    :ARG1 (c32-10 / tell-01
                                  :ARG0 (c32-3 / broadcast-program
                                               :name (c32-5 / name
                                                            :op1 "Dispatch"))
                                  :ARG1 (c32-4 / follow-02
                                               :ARG0 (c32-0 / he
                                                            :ARG2-of c32-10)
                                               :polarity -)))
       :snt2 (c32-6 / police
                    :domain (c32-7 / Dispatch)
                    :polarity -)
       :snt3 (c32-12 / answer-01
                     :ARG0 (c32-8 / they)
                     :ARG1 (c32-11 / phone)))

# ::snt sooo..have u released a statement...?? Smh
# ::tokens ["sooo", "..", "have", "u", "released", "a", "statement", "...", "?", "?", "Smh"]
# ::lemmas ["sooo", "..", "have", "u", "release", "a", "statement", "...", "?", "?", "smh"]
(c33-2 / multi-sentence
       :snt1 (c33-5 / so)
       :snt2 (c33-4 / release-01
                    :ARG0 (c33-0 / you)
                    :ARG1 (c33-3 / statement)
                    :polarity (c33-6 / amr-unknown))
       :snt3 (c33-1 / smh
                    :mode expressive))

# ::snt even when the police tells u not to...u follow anyway...lol...
# ::tokens ["even", "when", "the", "police", "tells", "u", "not", "to", "...", "u", "follow", "anyway", "...", "lol", "..."]
# ::lemmas ["even", "when", "the", "police", "tell", "u", "not", "to", "...", "u", "follow", "anyway", "...", "lol", "..."]
(c34-1 / follow-02
       :ARG0 (c34-0 / you)
       :mod (c34-9 / anyway)
       :concession (c34-3 / even-when
                          :op1 (c34-8 / tell-01
                                      :ARG0 (c34-5 / police)
                                      :ARG1 (c34-6 / do-02
                                                   :ARG0 c34-0
                                                   :polarity -)
                                      :ARG2 c34-0))
       :ARG2-of (c34-2 / laugh-01
                       :ARG0 (c34-4 / i)
                       :manner (c34-7 / loud)
                       :mode expressive))

# ::snt +
# ::tokens ["+"]
# ::lemmas ["+"]
(c35-0 / add-02)

# ::snt HE LET'S FUCKING TERRORISTS WALK AROUND AND DO WHATEVER...OUR SHIT FOR BRAINS COMMUNIST CRIMINAL PRESIDENT
# ::tokens ["HE", "LET", "'S", "FUCKING", "TERRORISTS", "WALK", "AROUND", "AND", "DO", "WHATEVER", "...", "OUR", "SHIT", "FOR", "BRAINS", "COMMUNIST", "CRIMINAL", "PRESIDENT"]
# ::lemmas ["he", "let", "us", "fucking", "TERRORISTS", "WALK", "around", "and", "DO", "WHATEVER", "...", "OUR", "SHIT", "for", "BRAINS", "communist", "criminal", "president"]
(c36-15 / and
        :op1 (c36-1 / walk-01
                    :ARG0 (c36-13 / terrorist
                                  :mod (c36-2 / fucking
                                              :mode expressive))
                    :ARG2 (c36-5 / nowhere))
        :op2 (c36-8 / do-02
                    :ARG0 c36-13
                    :time (c36-3 / ever))
        :ARG1-of (c36-9 / cause-01
                        :ARG0 (c36-12 / shit-01
                                      :ARG0 (c36-4 / we)
                                      :beneficiary (c36-7 / person
                                                          :ARG0-of (c36-0 / have-org-role-91
                                                                          :ARG2 (c36-14 / president))
                                                          :mod (c36-10 / religious-group
                                                                       :name (c36-6 / name
                                                                                    :op1 "Muslim"))
                                                          :mod (c36-11 / community)))))

# ::snt if you attack a man with a gun you're a dumbass. Period.
# ::tokens ["if", "you", "attack", "a", "man", "with", "a", "gun", "you", "'re", "a", "dumbass", ".", "Period", "."]
# ::lemmas ["if", "you", "attack", "a", "man", "with", "a", "gun", "you", "be", "a", "dumbass", ".", "period", "."]
(c37-3 / dumbass
       :domain (c37-0 / you)
       :condition (c37-5 / attack-01
                         :ARG0 c37-0
                         :ARG1 (c37-1 / man)
                         :instrument (c37-4 / gun))
       :mod (c37-2 / period))

# ::snt I'm not defending Z. He's an idiot. But Trayvon was a bigger one. Turned it physical and got dealt with
# ::tokens ["I", "'m", "not", "defending", "Z.", "He", "'s", "an", "idiot", ".", "But", "Trayvon", "was", "a", "bigger", "one", ".", "Turned", "it", "physical", "and", "got", "dealt", "with"]
# ::lemmas ["i", "be", "not", "defend", "Z.", "he", "be", "an", "idiot", ".", "but", "Trayvon", "be", "a", "big", "one", ".", "turn", "it", "physical", "and", "got", "deal", "with"]
(c38-3 / multi-sentence
       :snt1 (c38-10 / defend-01
                     :ARG0 (c38-6 / i)
                     :ARG1 (c38-9 / person
                                  :name (c38-7 / name
                                               :op1 "Z"))
                     :polarity -)
       :snt2 (c38-12 / idiot
                     :domain (c38-0 / he))
       :snt3 (c38-11 / contrast-01
                     :ARG2 (c38-5 / big
                                  :ARG2-of (c38-17 / have-degree-91
                                                   :ARG1 (c38-16 / person
                                                                 :name (c38-8 / name
                                                                              :op1 "Trayvon"))
                                                   :ARG3 (c38-13 / more))))
       :snt4 (c38-14 / and
                     :op1 (c38-15 / turn-01
                                  :ARG1 (c38-2 / it)
                                  :manner (c38-4 / physical))
                     :op2 (c38-1 / deal-01
                                 :ARG2 c38-16)))

# ::snt why is it that you as a black man take issue with accepting the consequences of your actions?
# ::tokens ["why", "is", "it", "that", "you", "as", "a", "black", "man", "take", "issue", "with", "accepting", "the", "consequences", "of", "your", "actions", "?"]
# ::lemmas ["why", "be", "it", "that", "you", "as", "a", "black", "man", "take", "issue", "with", "accept", "the", "consequence", "of", "your", "action", "?"]
(c39-7 / cause-01
       :ARG0 (c39-8 / amr-unknown)
       :ARG1 (c39-4 / issue-02
                    :ARG0 (c39-3 / accept-01
                                 :ARG0 (c39-0 / you
                                              :mod (c39-1 / man
                                                          :ARG1-of (c39-2 / black-05)))
                                 :ARG1 (c39-6 / consequence-03
                                              :ARG1 (c39-5 / act-02
                                                           :ARG0 c39-0)))
                    :ARG1 c39-0))

# ::snt don't the people of paris have there own police..the president don't let terroiest walk around smh
# ::tokens ["do", "n't", "the", "people", "of", "paris", "have", "there", "own", "police", "..", "the", "president", "do", "n't", "let", "terroiest", "walk", "around", "smh"]
# ::lemmas ["do", "not", "the", "people", "of", "paris", "have", "there", "own", "police", "..", "the", "president", "do", "not", "let", "terroiest", "walk", "around", "smh"]
(c40-3 / multi-sentence
       :snt1 (c40-0 / have-03
                    :ARG0 (c40-8 / person
                                 :mod (c40-10 / country
                                              :name (c40-6 / name
                                                           :op1 "France")))
                    :ARG1 (c40-14 / police
                                  :poss c40-8)
                    :polarity -)
       :snt2 (c40-2 / let-01
                    :ARG0 (c40-4 / person
                                 :ARG0-of (c40-15 / have-org-role-91
                                                  :ARG2 (c40-13 / president)))
                    :ARG1 (c40-1 / walk-01
                                 :ARG0 (c40-5 / person
                                              :ARG1-of (c40-7 / have-degree-91
                                                              :ARG2 (c40-11 / speedy-03
                                                                            :ARG1 c40-1)
                                                              :ARG3 (c40-9 / most)))
                                 :ARG2 (c40-12 / around))
                    :polarity -))

# ::snt who did trayvon martian provoke ?
# ::tokens ["who", "did", "trayvon", "martian", "provoke", "?"]
# ::lemmas ["who", "do", "trayvon", "martian", "provoke", "?"]
(c41-1 / provoke-01
       :ARG0 (c41-2 / person
                    :name (c41-0 / name
                                 :op1 "Trayvon"
                                 :op2 "Martian"))
       :ARG1 (c41-3 / amr-unknown))

# ::snt (lol) | ...(spellcheck=Ferguson though
# ::tokens ["(", "lol", ")", "|", "...", "(", "spellcheck", "=", "Ferguson", "though"]
# ::lemmas ["(", "lol", ")", "|", "...", "(", "spellcheck", "=", "Ferguson", "though"]
(c42-2 / multi-sentence
       :snt1 (c42-1 / laugh-01
                    :manner (c42-6 / loud)
                    :mode expressive)
       :snt2 (c42-0 / have-concession-91
                    :ARG1 (c42-3 / equal-01
                                 :ARG1 (c42-7 / spellcheck-01)
                                 :ARG2 (c42-5 / person
                                              :name (c42-4 / name
                                                           :op1 "Ferguson")))))

# ::snt Sean, did you mean bi-line? If so, what's weak is your grammar
# ::tokens ["Sean", ",", "did", "you", "mean", "bi", "-", "line", "?", "If", "so", ",", "what", "'s", "weak", "is", "your", "grammar"]
# ::lemmas ["sean", ",", "do", "you", "mean", "bi", "-", "line", "?", "if", "so", ",", "what", "be", "weak", "be", "your", "grammar"]
(c43-3 / multi-sentence
       :snt1 (c43-12 / say-01
                     :ARG0 (c43-7 / i)
                     :ARG1 (c43-9 / mean-01
                                  :ARG0 (c43-10 / person
                                                :name (c43-8 / name
                                                             :op1 "Sean"))
                                  :ARG2 (c43-2 / line
                                               :mod (c43-4 / bi))
                                  :polarity (c43-13 / amr-unknown))
                     :ARG2 c43-10)
       :snt2 (c43-0 / weak-02
                    :ARG1 (c43-11 / grammar
                                  :poss (c43-1 / you))
                    :ARG2 (c43-6 / amr-unknown)
                    :condition (c43-5 / so)))

# ::snt why would he fund...oh nevermind...u jus want attention...
# ::tokens ["why", "would", "he", "fund", "...", "oh", "nevermind", "...", "u", "jus", "want", "attention", "..."]
# ::lemmas ["why", "would", "he", "fund", "...", "oh", "nevermind", "...", "u", "ju", "want", "attention", "..."]
(c44-4 / multi-sentence
       :snt1 (c44-9 / cause-01
                    :ARG0 (c44-11 / amr-unknown)
                    :ARG1 (c44-3 / fund-01
                                 :ARG0 (c44-0 / he)))
       :snt2 (c44-8 / mind-15
                    :ARG0 (c44-1 / you)
                    :time (c44-6 / ever)
                    :mod (c44-5 / oh)
                    :polarity -
                    :mode imperative)
       :snt3 (c44-2 / want-01
                    :ARG0 (c44-10 / you)
                    :ARG1 (c44-7 / attend-02
                                 :ARG1 c44-10)))

# ::snt (lol!)
# ::tokens ["(", "lol", "!", ")"]
# ::lemmas ["(", "lol", "!", ")"]
(c45-0 / laugh-01
       :manner (c45-1 / loud)
       :mode expressive)

# ::snt Accurate? There is concrete evidence that answers both of your questions!
# ::tokens ["Accurate", "?", "There", "is", "concrete", "evidence", "that", "answers", "both", "of", "your", "questions", "!"]
# ::lemmas ["Accurate", "?", "there", "be", "concrete", "evidence", "that", "answer", "both", "of", "your", "question", "!"]
(c46-1 / multi-sentence
       :snt1 (c46-8 / accurate
                    :polarity (c46-5 / amr-unknown))
       :snt2 (c46-3 / evidence-01
                    :ARG1-of (c46-7 / concrete-02)
                    :ARG0-of (c46-6 / answer-01
                                    :ARG1 (c46-4 / question-01
                                                 :ARG0 (c46-0 / you)
                                                 :mod (c46-2 / both)))))

# ::snt also, they absolutely did provoke. What world does this dipshit live in?
# ::tokens ["also", ",", "they", "absolutely", "did", "provoke", ".", "What", "world", "does", "this", "dipshit", "live", "in", "?"]
# ::lemmas ["also", ",", "they", "absolutely", "do", "provoke", ".", "what", "world", "do", "this", "dipshit", "live", "in", "?"]
(c47-2 / multi-sentence
       :snt1 (c47-5 / provoke-01
                    :ARG0 (c47-8 / they)
                    :mod (c47-9 / absolute)
                    :mod (c47-3 / also))
       :snt2 (c47-1 / live-01
                    :ARG0 (c47-6 / dipshit
                                 :mod (c47-7 / this))
                    :location (c47-4 / amr-unknown
                                     :mod (c47-0 / world))))

# ::snt (Lol!)
# ::tokens ["(", "Lol", "!", ")"]
# ::lemmas ["(", "Lol", "!", ")"]
(c48-0 / laugh-01
       :manner (c48-1 / loud)
       :mode expressive)

# ::snt yea keep driving and ignore the guy acting suspicious who was on drugs and out of place.
# ::tokens ["yea", "keep", "driving", "and", "ignore", "the", "guy", "acting", "suspicious", "who", "was", "on", "drugs", "and", "out", "of", "place", "."]
# ::lemmas ["yea", "keep", "drive", "and", "ignore", "the", "guy", "act", "suspicious", "who", "be", "on", "drug", "and", "out", "of", "place", "."]
(c49-10 / and
        :op1 (c49-9 / keep-02
                    :ARG0 (c49-0 / you)
                    :ARG1 (c49-6 / drive-01
                                 :ARG0 c49-0)
                    :mode imperative)
        :op2 (c49-4 / ignore-01
                    :ARG0 c49-0
                    :ARG1 (c49-7 / guy
                                 :ARG0-of (c49-3 / act-01
                                                 :ARG1 (c49-8 / suspicious-02
                                                              :ARG0 c49-7))
                                 :ARG1-of (c49-1 / drug-01)
                                 :ARG1-of (c49-2 / out-06
                                                 :ARG2 (c49-5 / place)))
                    :mode imperative))

# ::snt differently. You try and turn it into a race issue which just makes you the racist.
# ::tokens ["differently", ".", "You", "try", "and", "turn", "it", "into", "a", "race", "issue", "which", "just", "makes", "you", "the", "racist", "."]
# ::lemmas ["differently", ".", "you", "try", "and", "turn", "it", "into", "a", "race", "issue", "which", "just", "make", "you", "the", "racist", "."]
(c50-2 / multi-sentence
       :snt1 (c50-6 / differ-02)
       :snt2 (c50-10 / try-01
                     :ARG0 (c50-1 / you)
                     :ARG1 (c50-9 / turn-02
                                  :ARG0 c50-1
                                  :ARG1 (c50-3 / it)
                                  :ARG2 (c50-8 / issue-02
                                               :ARG0 (c50-7 / race))
                                  :ARG0-of (c50-5 / make-02
                                                  :ARG1 (c50-4 / racist
                                                               :domain c50-1)
                                                  :mod (c50-0 / just)))))
