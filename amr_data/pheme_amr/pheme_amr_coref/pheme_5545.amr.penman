# ::snt take a minute to read the about and ..
# ::tokens ["take", "a", "minute", "to", "read", "the", "about", "and", ".."]
# ::lemmas ["take", "a", "minute", "to", "read", "the", "about", "and", ".."]
(c1-6 / take-01
      :ARG0 (c1-0 / you)
      :ARG1 (c1-5 / temporal-quantity
                  :unit (c1-1 / minute)
                  :quant 1)
      :purpose (c1-4 / read-01
                     :ARG0 c1-0
                     :ARG1 (c1-7 / and
                                 :op1 (c1-3 / about)
                                 :op2 (c1-2 / et-cetera)))
      :mode imperative)

# ::snt . we've got enough problems with our own disgusting "defense league". Go away &amp; shut up. You're bigotory not wanted.
# ::tokens [".", "we", "'ve", "got", "enough", "problems", "with", "our", "own", "disgusting", "\"", "defense", "league", "\"", ".", "Go", "away", "&", "amp", ";", "shut", "up", ".", "You", "'re", "bigotory", "not", "wanted", "."]
# ::lemmas [".", "we", "'ve", "get", "enough", "problem", "with", "our", "own", "disgusting", "\"", "defense", "league", "\"", ".", "go", "away", "&", "amp", ";", "shut", "up", ".", "you", "be", "bigotory", "not", "want", "."]
(c2-4 / multi-sentence
      :snt1 (c2-0 / have-03
                  :ARG0 (c2-1 / we)
                  :ARG1 (c2-10 / problem
                               :ARG1-of (c2-15 / have-quant-91
                                               :ARG3 (c2-7 / enough))
                               :topic (c2-3 / league
                                            :mod (c2-11 / defend-01)
                                            :ARG0-of (c2-2 / disgust-01)
                                            :poss c2-1)))
      :snt2 (c2-14 / and
                   :op1 (c2-12 / go-02
                               :ARG0 (c2-5 / you)
                               :ARG4 (c2-8 / away)
                               :mode imperative)
                   :op2 (c2-13 / shut-up-06
                               :ARG0 c2-5
                               :mode imperative)
                   :op3 (c2-6 / bigot
                              :domain c2-5
                              :ARG1-of (c2-9 / want-01
                                             :polarity -))))

# ::snt jai Hindustan jai Sri ram
# ::tokens ["jai", "Hindustan", "jai", "Sri", "ram"]
# ::lemmas ["jai", "Hindustan", "jai", "Sri", "ram"]
(c3-3 / person
      :name (c3-1 / name
                  :op1 "Jai"
                  :op2 "Hindustan")
      :ARG2-of (c3-0 / include-91
                     :ARG1 (c3-4 / person
                                 :name (c3-2 / name
                                             :op1 "Jai"
                                             :op2 "Sri"
                                             :op3 "Ram"))))

# ::snt Please piss off and don't highjack an event that has nothing to do with Right Wing Hinduism
# ::tokens ["Please", "piss", "off", "and", "do", "n't", "highjack", "an", "event", "that", "has", "nothing", "to", "do", "with", "Right", "Wing", "Hinduism"]
# ::lemmas ["please", "piss", "off", "and", "do", "not", "highjack", "an", "event", "that", "have", "nothing", "to", "do", "with", "Right", "Wing", "hinduism"]
(c4-9 / and
      :op1 (c4-7 / piss-off-02
                 :ARG0 (c4-1 / you)
                 :mode imperative
                 :polite +)
      :op2 (c4-0 / highjack-00
                 :ARG0 c4-1
                 :ARG1 (c4-3 / event
                             :ARG0-of (c4-2 / have-to-do-with-04
                                            :ARG1 (c4-8 / religious-group
                                                        :name (c4-5 / name
                                                                    :op1 "Hinduism")
                                                        :ARG1-of (c4-4 / right-08))
                                            :ARG2 (c4-6 / nothing)))
                 :mode imperative
                 :polite +
                 :polarity -))

# ::snt The st name that comes to my mind abt Taqiyya is Aamir khan &amp; his "Satyameva Jayate". Others - shahid siddiqui, saba naqvi etc.
# ::tokens ["The", "st", "name", "that", "comes", "to", "my", "mind", "abt", "Taqiyya", "is", "Aamir", "khan", "&", "amp", ";", "his", "\"", "Satyameva", "Jayate", "\"", ".", "Others", "-", "shahid", "siddiqui", ",", "saba", "naqvi", "etc", "."]
# ::lemmas ["the", "st", "name", "that", "come", "to", "my", "mind", "abt", "Taqiyya", "be", "Aamir", "khan", "&", "amp", ";", "his", "\"", "Satyameva", "Jayate", "\"", ".", "other", "-", "shahid", "siddiqui", ",", "saba", "naqvi", "etc", "."]
(c5-0 / multi-sentence
      :snt1 (c5-8 / come-to-mind-09
                  :ARG1 (c5-3 / i)
                  :ARG2 (c5-6 / person
                              :name (c5-4 / name
                                          :op1 "Aamir"
                                          :op2 "Khan")
                              :domain (c5-5 / name
                                            :op1 "&"
                                            :op2 "amp")))
      :snt2 (c5-11 / person
                   :name (c5-7 / name
                               :op1 "Satyameva"
                               :op2 "Jayate")
                   :domain (c5-1 / person
                                 :name (c5-9 / name
                                             :op1 "Shahid"
                                             :op2 "Siddiqui"))
                   :example (c5-10 / person
                                   :name (c5-12 / name
                                                :op1 "Saba"
                                                :op2 "naqvi"))
                   :example (c5-2 / et-cetera)))

# ::snt ) the second point these punishments is not immediately applied ! It can't be applied until there are witness ..
# ::tokens [")", "the", "second", "point", "these", "punishments", "is", "not", "immediately", "applied", "!", "It", "ca", "n't", "be", "applied", "until", "there", "are", "witness", ".."]
# ::lemmas [")", "the", "second", "point", "these", "punishment", "be", "not", "immediately", "apply", "!", "it", "can", "not", "be", "apply", "until", "there", "be", "witness", ".."]
(c6-1 / multi-sentence
      :snt1 (c6-8 / apply-02
                  :ARG1 (c6-5 / punish-01
                              :mod (c6-6 / this))
                  :time (c6-4 / immediate)
                  :polarity -
                  :li 2)
      :snt2 (c6-7 / possible-01
                  :ARG1 (c6-3 / apply-02
                              :ARG1 c6-5
                              :time (c6-2 / until
                                          :op1 (c6-0 / witness-01)))
                  :polarity -))

# ::snt take a minute to read the about and cont.
# ::tokens ["take", "a", "minute", "to", "read", "the", "about", "and", "cont", "."]
# ::lemmas ["take", "a", "minute", "to", "read", "the", "about", "and", "cont", "."]
(c7-6 / take-01
      :ARG0 (c7-0 / you)
      :ARG1 (c7-5 / temporal-quantity
                  :unit (c7-1 / minute)
                  :quant 1)
      :purpose (c7-3 / read-01
                     :ARG0 c7-0
                     :ARG1 (c7-7 / and
                                 :op1 (c7-2 / about)
                                 :op2 (c7-4 / cont)))
      :mode imperative)
