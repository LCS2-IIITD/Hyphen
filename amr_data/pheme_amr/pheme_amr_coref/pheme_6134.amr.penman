# ::snt U Would humble him huh Iron Sheik
# ::tokens ["U", "Would", "humble", "him", "huh", "Iron", "Sheik"]
# ::lemmas ["U", "Would", "humble", "he", "huh", "Iron", "Sheik"]
(c2-0 / humble-01
      :ARG0 (c2-1 / you)
      :ARG1 (c2-6 / he)
      :mod (c2-3 / huh
                 :mode expressive)
      :ARG1-of (c2-5 / say-01
                     :ARG2 (c2-4 / person
                                 :name (c2-2 / name
                                             :op1 "Iron"
                                             :op2 "Sheik"))))

# ::snt same does every single Aussie... Im a Sydney guy and i wanna kick his JABRONI ASS
# ::tokens ["same", "does", "every", "single", "Aussie", "...", "I", "m", "a", "Sydney", "guy", "and", "i", "wanna", "kick", "his", "JABRONI", "ASS"]
# ::lemmas ["same", "do", "every", "single", "Aussie", "...", "i", "m", "a", "Sydney", "guy", "and", "i", "wanna", "kick", "his", "JABRONI", "ASS"]
(c3-1 / multi-sentence
      :snt1 (c3-14 / same-01
                   :ARG1 (c3-9 / do-02
                               :ARG0 (c3-8 / person
                                           :mod (c3-10 / country
                                                       :name (c3-6 / name
                                                                   :op1 "Australia"))
                                           :ARG1-of (c3-2 / single-02)
                                           :mod (c3-3 / every))))
      :snt2 (c3-17 / and
                   :op1 (c3-11 / guy
                               :domain (c3-5 / i)
                               :mod (c3-12 / city
                                           :name (c3-7 / name
                                                       :op1 "Sydney")))
                   :op2 (c3-0 / want-01
                              :ARG0 c3-5
                              :ARG1 (c3-15 / kick-01
                                           :ARG0 c3-5
                                           :ARG1 (c3-4 / ass
                                                       :poss (c3-16 / person
                                                                    :name (c3-13 / name
                                                                                 :op1 "JABRONI")))))))

# ::snt Thank you for easing the tension in our Sydney office
# ::tokens ["Thank", "you", "for", "easing", "the", "tension", "in", "our", "Sydney", "office"]
# ::lemmas ["thank", "you", "for", "ease", "the", "tension", "in", "our", "Sydney", "office"]
(c4-7 / thank-01
      :ARG0 (c4-0 / we)
      :ARG1 (c4-1 / you)
      :ARG2 (c4-3 / ease-02
                  :ARG0 c4-1
                  :ARG1 (c4-6 / tension)
                  :location (c4-2 / office
                                  :poss c4-0
                                  :location (c4-5 / city
                                                  :name (c4-4 / name
                                                              :op1 "Sydney")))))

# ::snt make him humble, sheikie
# ::tokens ["make", "him", "humble", ",", "sheikie"]
# ::lemmas ["make", "he", "humble", ",", "sheikie"]
(c5-5 / say-01
      :ARG0 (c5-2 / i)
      :ARG1 (c5-1 / make-02
                  :ARG0 (c5-4 / person
                              :name (c5-3 / name
                                          :op1 "sheikie"))
                  :ARG1 (c5-0 / humble
                              :domain (c5-6 / he))
                  :mode imperative)
      :ARG2 c5-4)

# ::snt Fick him in the ass and make him humble.
# ::tokens ["Fick", "him", "in", "the", "ass", "and", "make", "him", "humble", "."]
# ::lemmas ["fick", "he", "in", "the", "ass", "and", "make", "he", "humble", "."]
(c6-5 / and
      :op1 (c6-3 / bite-01
                 :ARG1 (c6-4 / ass)
                 :ARG2 (c6-0 / he
                             :part c6-4))
      :op2 (c6-2 / make-02
                 :ARG1 (c6-1 / humble
                             :domain c6-0)))

# ::snt you're the man Sheikie!!
# ::tokens ["you", "'re", "the", "man", "Sheikie", "!", "!"]
# ::lemmas ["you", "be", "the", "man", "Sheikie", "!", "!"]
(c7-4 / say-01
      :ARG0 (c7-1 / i)
      :ARG1 (c7-0 / man
                  :domain (c7-3 / person
                                :name (c7-2 / name
                                            :op1 "Sheikie")
                                :ARG2-of c7-4)))

# ::snt I was silently hoping that would catch wind of this, he'd make that raisin balls humble, break his neck
# ::tokens ["I", "was", "silently", "hoping", "that", "would", "catch", "wind", "of", "this", ",", "he", "'d", "make", "that", "raisin", "balls", "humble", ",", "break", "his", "neck"]
# ::lemmas ["i", "be", "silently", "hope", "that", "would", "catch", "wind", "of", "this", ",", "he", "would", "make", "that", "raisin", "ball", "humble", ",", "break", "his", "neck"]
(c8-0 / hope-01
      :ARG0 (c8-5 / i)
      :ARG1 (c8-10 / catch-01
                   :ARG0 (c8-15 / that)
                   :ARG1 (c8-1 / wind-01
                               :ARG1 (c8-13 / this))
                   :ARG0-of (c8-9 / cause-01
                                  :ARG1 (c8-16 / and
                                               :op1 (c8-3 / make-02
                                                          :ARG0 (c8-2 / he
                                                                      :part (c8-6 / neck))
                                                          :ARG1 (c8-7 / humble-01
                                                                      :ARG1 (c8-4 / ball
                                                                                  :mod (c8-11 / raisin)
                                                                                  :mod (c8-8 / that))))
                                               :op2 (c8-12 / break-01
                                                           :ARG0 c8-2
                                                           :ARG1 c8-6))))
      :manner (c8-14 / silent))

# ::snt Sheiky this jabroni is not a true representative of Iran unlike Iron Sheik who is the legend
# ::tokens ["Sheiky", "this", "jabroni", "is", "not", "a", "true", "representative", "of", "Iran", "unlike", "Iron", "Sheik", "who", "is", "the", "legend"]
# ::lemmas ["sheiky", "this", "jabroni", "be", "not", "a", "true", "representative", "of", "Iran", "unlike", "Iron", "Sheik", "who", "be", "the", "legend"]
(c9-6 / represent-01
      :ARG0 (c9-0 / jabroni
                  :mod (c9-9 / this))
      :ARG1 (c9-7 / country
                  :name (c9-3 / name
                              :op1 "Iran"))
      :ARG1-of (c9-8 / true-01)
      :ARG1-of (c9-2 / resemble-01
                     :ARG2 (c9-5 / person
                                 :name (c9-4 / name
                                             :op1 "Iron"
                                             :op2 "Sheik")
                                 :mod (c9-1 / legend))
                     :polarity -)
      :polarity -)

# ::snt This is why I love The Iron Sheik! &lt;3
# ::tokens ["This", "is", "why", "I", "love", "The", "Iron", "Sheik", "!", "&", "lt;3"]
# ::lemmas ["this", "be", "why", "i", "love", "The", "Iron", "Sheik", "!", "&", "lt;3"]
(c10-4 / cause-01
       :ARG0 (c10-5 / this)
       :ARG1 (c10-0 / love-01
                    :ARG0 (c10-2 / i)
                    :ARG1 (c10-1 / book
                                 :name (c10-3 / name
                                              :op1 "Iron"
                                              :op2 "Sheik"))))

# ::snt he's my hero
# ::tokens ["he", "'s", "my", "hero"]
# ::lemmas ["he", "be", "my", "hero"]
(c11-0 / hero
       :domain (c11-2 / he)
       :poss (c11-1 / i))

# ::snt Yes Sheik!!! I'll be waiting in Sydney for you to break that dickhead's neck.
# ::tokens ["Yes", "Sheik", "!", "!", "!", "I", "'ll", "be", "waiting", "in", "Sydney", "for", "you", "to", "break", "that", "dickhead", "'s", "neck", "."]
# ::lemmas ["yes", "Sheik", "!", "!", "!", "i", "'ll", "be", "wait", "in", "Sydney", "for", "you", "to", "break", "that", "dickhead", "'s", "neck", "."]
(c12-9 / say-01
       :ARG1 (c12-0 / wait-01
                    :ARG1 (c12-3 / i)
                    :ARG2 (c12-2 / break-01
                                 :ARG0 (c12-1 / you)
                                 :ARG1 (c12-4 / neck
                                              :part-of (c12-7 / dickhead
                                                              :mod (c12-10 / that))))
                    :location (c12-8 / city
                                     :name (c12-5 / name
                                                  :op1 "Sydney")))
       :ARG2 (c12-6 / person
                    :name c12-5
                    :op1 "Sheik")
       :mode expressive)

# ::snt You would fuck that prick up. Problem solved
# ::tokens ["You", "would", "fuck", "that", "prick", "up", ".", "Problem", "solved"]
# ::lemmas ["you", "would", "fuck", "that", "prick", "up", ".", "Problem", "solve"]
(c13-2 / multi-sentence
       :snt1 (c13-1 / fuck-up-02
                    :ARG0 (c13-0 / you)
                    :ARG1 (c13-3 / prick
                                 :mod (c13-5 / that)))
       :snt2 (c13-4 / solve-01
                    :ARG1 (c13-6 / problem)))

# ::snt Ha! Fucking raisin balled taco tits
# ::tokens ["Ha", "!", "Fucking", "raisin", "balled", "taco", "tits"]
# ::lemmas ["ha", "!", "fucking", "raisin", "ball", "taco", "tit"]
(c14-5 / tit
       :mod (c14-4 / taco)
       :part (c14-2 / ball
                    :consist-of (c14-3 / raisin))
       :mod (c14-1 / fucking)
       :mod (c14-0 / ha
                   :mode expressive))

# ::snt . Bubba!
# ::tokens [".", "Bubba", "!"]
# ::lemmas [".", "Bubba", "!"]
(c15-0 / bubba
       :mode expressive)
