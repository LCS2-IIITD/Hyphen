# ::snt even if it does they are entitled to. Freedom of speech and all.
# ::tokens ["even", "if", "it", "does", "they", "are", "entitled", "to", ".", "Freedom", "of", "speech", "and", "all", "."]
# ::lemmas ["even", "if", "it", "do", "they", "be", "entitle", "to", ".", "freedom", "of", "speech", "and", "all", "."]
(c1-1 / multi-sentence
      :snt1 (c1-3 / entitle-01
                  :ARG2 (c1-8 / they)
                  :concession (c1-2 / even-if
                                    :op1 (c1-6 / do-02
                                               :ARG0 (c1-5 / it))))
      :snt2 (c1-9 / and
                  :op1 (c1-0 / free-04
                             :ARG3 (c1-7 / speak-01))
                  :op2 (c1-4 / all)))

# ::snt please define "common sense"
# ::tokens ["please", "define", "\"", "common", "sense", "\""]
# ::lemmas ["please", "define", "\"", "common", "sense", "\""]
(c2-3 / define-01
      :ARG0 (c2-1 / you)
      :ARG1 (c2-0 / sense-02
                  :ARG1-of (c2-2 / share-01))
      :mode imperative
      :polite +)

# ::snt is this guy serious??? We have tons of jokes about Christianity and the pope, etc...
# ::tokens ["is", "this", "guy", "serious", "?", "?", "?", "We", "have", "tons", "of", "jokes", "about", "Christianity", "and", "the", "pope", ",", "etc", "..."]
# ::lemmas ["be", "this", "guy", "serious", "?", "?", "?", "we", "have", "ton", "of", "joke", "about", "Christianity", "and", "the", "pope", ",", "etc", "..."]
(c3-3 / multi-sentence
      :snt1 (c3-11 / serious-01
                   :polarity (c3-14 / amr-unknown)
                   :ARG1 (c3-9 / guy
                               :mod (c3-12 / this)))
      :snt2 (c3-0 / joke-01
                  :ARG0 (c3-1 / we)
                  :ARG2 (c3-5 / and
                              :op1 (c3-8 / religious-group
                                         :name (c3-6 / name
                                                     :op1 "Christianity"))
                              :op2 (c3-7 / person
                                         :ARG0-of (c3-2 / have-org-role-91
                                                        :ARG2 (c3-13 / pope)))
                              :op3 (c3-4 / et-cetera))
                  :quant (c3-10 / ton)))

# ::snt Right or wrong, it's insensitive and just in really poor taste say this at this time.
# ::tokens ["Right", "or", "wrong", ",", "it", "'s", "insensitive", "and", "just", "in", "really", "poor", "taste", "say", "this", "at", "this", "time", "."]
# ::lemmas ["right", "or", "wrong", ",", "it", "be", "insensitive", "and", "just", "in", "really", "poor", "taste", "say", "this", "at", "this", "time", "."]
(c4-12 / and
       :op1 (c4-10 / sensitive-03
                   :ARG0 (c4-3 / say-01
                               :ARG1 (c4-11 / this)
                               :time (c4-9 / time
                                           :mod c4-11))
                   :polarity -)
       :op2 c4-10
       :ARG0 c4-3
       :mod (c4-0 / just)
       :mod (c4-6 / taste
                  :mod (c4-7 / poor
                             :degree (c4-8 / really)))
       :ARG1-of (c4-5 / regardless-91
                      :ARG2 (c4-2 / or
                                  :op1 (c4-4 / right-02
                                             :ARG1 c4-3)
                                  :op2 (c4-1 / wrong-02
                                             :ARG1 c4-3)))
       :polarity -)

# ::snt By this logic Palestinians should stop writing nasty things about Israel as it just provokes them.
# ::tokens ["By", "this", "logic", "Palestinians", "should", "stop", "writing", "nasty", "things", "about", "Israel", "as", "it", "just", "provokes", "them", "."]
# ::lemmas ["by", "this", "logic", "Palestinians", "should", "stop", "write", "nasty", "thing", "about", "Israel", "as", "it", "just", "provoke", "they", "."]
(c5-6 / recommend-01
      :ARG1 (c5-11 / stop-01
                   :ARG0 (c5-5 / person
                               :mod (c5-7 / country
                                          :name (c5-3 / name
                                                      :op1 "Palestine")))
                   :ARG1 (c5-1 / write-01
                               :ARG0 c5-5
                               :ARG1 (c5-13 / thing
                                            :mod (c5-4 / nasty)
                                            :topic (c5-8 / country
                                                         :name (c5-9 / name
                                                                     :op1 "Israel")))))
      :ARG1-of (c5-10 / cause-01
                      :ARG0 (c5-14 / provoke-01
                                   :ARG0 c5-11
                                   :ARG1 c5-5
                                   :mod (c5-0 / just)))
      :manner (c5-2 / logic
                    :mod (c5-12 / this)))

# ::snt No one deserves to be murdered for taking the piss.If anyone can't handle that then fuck off!
# ::tokens ["No", "one", "deserves", "to", "be", "murdered", "for", "taking", "the", "piss", ".", "If", "anyone", "ca", "n't", "handle", "that", "then", "fuck", "off", "!"]
# ::lemmas ["no", "one", "deserve", "to", "be", "murder", "for", "take", "the", "piss", ".", "if", "anyone", "can", "not", "handle", "that", "then", "fuck", "off", "!"]
(c6-2 / multi-sentence
      :snt1 (c6-5 / deserve-01
                  :ARG0 (c6-3 / no-one)
                  :ARG1 (c6-4 / murder-01
                              :ARG1 c6-3
                              :ARG1-of (c6-6 / cause-01
                                             :ARG0 (c6-9 / take-01
                                                         :ARG0 c6-3
                                                         :ARG1 (c6-7 / piss)))))
      :snt2 (c6-1 / fuck-off-02
                  :ARG0 (c6-11 / anyone)
                  :condition (c6-10 / possible-01
                                    :ARG1 (c6-0 / handle-01
                                                :ARG0 c6-11
                                                :ARG1 (c6-8 / that))
                                    :polarity -)
                  :mode imperative))

# ::snt what a cretin... "don't provoke the animals"
# ::tokens ["what", "a", "cretin", "...", "\"", "do", "n't", "provoke", "the", "animals", "\""]
# ::lemmas ["what", "a", "cretin", "...", "\"", "do", "not", "provoke", "the", "animal", "\""]
(c7-1 / multi-sentence
      :snt1 (c7-4 / cretin
                  :degree (c7-5 / so))
      :snt2 (c7-2 / say-01
                  :ARG1 (c7-3 / provoke-01
                              :ARG0 (c7-0 / you)
                              :ARG1 (c7-6 / animal)
                              :polarity -
                              :mode imperative)))

# ::snt Freedom of speech is apparently contingent on not being stupid. Horrible misstep by 's Barber h/t
# ::tokens ["Freedom", "of", "speech", "is", "apparently", "contingent", "on", "not", "being", "stupid", ".", "Horrible", "misstep", "by", "'s", "Barber", "h", "/", "t"]
# ::lemmas ["freedom", "of", "speech", "be", "apparently", "contingent", "on", "not", "be", "stupid", ".", "horrible", "misstep", "by", "be", "Barber", "h", "/", "t"]
(c8-2 / multi-sentence
      :snt1 (c8-8 / contingent
                  :domain (c8-1 / free-04
                                :ARG3 (c8-10 / speak-01))
                  :ARG1-of (c8-12 / appear-02)
                  :ARG1-of (c8-7 / cause-01
                                 :ARG0 (c8-3 / stupid
                                             :domain (c8-6 / person
                                                           :name (c8-4 / name
                                                                       :op1 "Barber"
                                                                       :op2 "H/t"))
                                             :polarity -)))
      :snt2 (c8-9 / misstep
                  :mod (c8-0 / horrible)
                  :source (c8-11 / person
                                 :name (c8-5 / name
                                             :op1 "Barber"))))

# ::snt I gotcha Thanks. Understood.
# ::tokens ["I", "gotcha", "Thanks", ".", "Understood", "."]
# ::lemmas ["i", "gotcha", "thank", ".", "Understood", "."]
(c9-1 / multi-sentence
      :snt1 (c9-4 / get-01
                  :ARG0 (c9-3 / i)
                  :ARG1 (c9-0 / you))
      :snt2 (c9-2 / understand-01
                  :ARG0 (c9-5 / i)
                  :ARG1 (c9-6 / you)))

# ::snt What the hell is this shit?
# ::tokens ["What", "the", "hell", "is", "this", "shit", "?"]
# ::lemmas ["what", "the", "hell", "be", "this", "shit", "?"]
(c10-0 / shit
       :mod (c10-2 / this)
       :mod (c10-3 / amr-unknown
                   :mod (c10-1 / hell
                               :mode expressive)))

# ::snt Nicola you are probably right there but we should all be entitled to free speech no matter what
# ::tokens ["Nicola", "you", "are", "probably", "right", "there", "but", "we", "should", "all", "be", "entitled", "to", "free", "speech", "no", "matter", "what"]
# ::lemmas ["Nicola", "you", "be", "probably", "right", "there", "but", "we", "should", "all", "be", "entitle", "to", "free", "speech", "no", "matter", "what"]
(c11-12 / say-01
        :ARG0 (c11-6 / i)
        :ARG1 (c11-11 / contrast-01
                      :ARG1 (c11-9 / probable
                                   :domain (c11-2 / be-located-at-91
                                                  :ARG1 (c11-14 / person
                                                                :name (c11-8 / name
                                                                             :op1 "Nicola"))
                                                  :ARG2 (c11-13 / there
                                                                :mod (c11-10 / right))))
                      :ARG2 (c11-7 / recommend-01
                                   :ARG1 (c11-3 / entitle-01
                                                :ARG1 (c11-4 / speak-01
                                                             :ARG3-of (c11-1 / free-04))
                                                :ARG2 (c11-0 / we
                                                             :mod (c11-15 / all))
                                                :ARG1-of (c11-5 / regardless-91))))
        :ARG2 c11-14)

# ::snt I love it when our betters provide context for us.
# ::tokens ["I", "love", "it", "when", "our", "betters", "provide", "context", "for", "us", "."]
# ::lemmas ["i", "love", "it", "when", "our", "better", "provide", "context", "for", "we", "."]
(c12-1 / love-01
       :ARG0 (c12-3 / i)
       :time (c12-4 / provide-01
                    :ARG0 (c12-6 / person
                                 :ARG0-of (c12-2 / bet-01
                                                 :ARG2 (c12-0 / we)))
                    :ARG1 (c12-5 / context)
                    :ARG2 c12-0))

# ::snt it's the wrong day for it even if I agreed with the sentiments, which I don't....
# ::tokens ["it", "'s", "the", "wrong", "day", "for", "it", "even", "if", "I", "agreed", "with", "the", "sentiments", ",", "which", "I", "do", "n't", "...."]
# ::lemmas ["it", "be", "the", "wrong", "day", "for", "it", "even", "if", "i", "agree", "with", "the", "sentiment", ",", "which", "i", "do", "not", "...."]
(c13-4 / day
       :ARG1-of (c13-0 / wrong-02
                       :ARG2 (c13-3 / it
                                    :domain-of c13-4))
       :concession (c13-1 / even-if
                          :op1 (c13-7 / agree-01
                                      :ARG0 (c13-5 / i)
                                      :ARG1 (c13-6 / sentiment)
                                      :ARG1-of (c13-2 / agree-01
                                                      :ARG0 c13-5
                                                      :polarity -))))

# ::snt Bollocks. Self censorship is worse than government censorship.
# ::tokens ["Bollocks", ".", "Self", "censorship", "is", "worse", "than", "government", "censorship", "."]
# ::lemmas ["bollock", ".", "self", "censorship", "be", "bad", "than", "government", "censorship", "."]
(c14-1 / multi-sentence
       :snt1 (c14-2 / bullocks)
       :snt2 (c14-0 / have-degree-91
                    :ARG1 (c14-5 / censor-01
                                 :ARG1 (c14-9 / self))
                    :ARG2 (c14-6 / bad-07
                                 :ARG1 c14-5)
                    :ARG3 (c14-3 / more)
                    :ARG4 (c14-4 / censor-01
                                 :ARG0 (c14-7 / government-organization
                                              :ARG0-of (c14-8 / govern-01)))))

# ::snt To your point, I believe.
# ::tokens ["To", "your", "point", ",", "I", "believe", "."]
# ::lemmas ["to", "your", "point", ",", "i", "believe", "."]
(c15-3 / believe-01
       :ARG0 (c15-2 / i)
       :ARG1-of (c15-1 / point-04
                       :ARG0 (c15-0 / you)))

# ::snt Yes it is and people should not put up with it.It is our right
# ::tokens ["Yes", "it", "is", "and", "people", "should", "not", "put", "up", "with", "it", ".", "It", "is", "our", "right"]
# ::lemmas ["yes", "it", "be", "and", "people", "should", "not", "put", "up", "with", "it", ".", "it", "be", "our", "right"]
(c16-7 / and
       :op1 (c16-0 / yes)
       :op2 (c16-5 / recommend-01
                   :ARG1 (c16-4 / put-up-12
                                :ARG0 (c16-6 / person)
                                :ARG1 (c16-2 / it)
                                :polarity -))
       :op3 (c16-3 / right-05
                   :ARG1 (c16-1 / we)
                   :ARG2 c16-2))

# ::snt I did read it lots and lots to make sure my tiny mind had understood.
# ::tokens ["I", "did", "read", "it", "lots", "and", "lots", "to", "make", "sure", "my", "tiny", "mind", "had", "understood", "."]
# ::lemmas ["i", "do", "read", "it", "lot", "and", "lot", "to", "make", "sure", "my", "tiny", "mind", "have", "understand", "."]
(c17-5 / read-01
       :ARG0 (c17-4 / i
                    :part (c17-1 / mind
                                 :mod (c17-7 / tiny)))
       :ARG1 (c17-6 / it)
       :quant (c17-0 / lot)
       :purpose (c17-3 / ensure-01
                       :ARG0 c17-4
                       :ARG1 (c17-2 / understand-01
                                    :ARG0 c17-1)))

# ::snt I agree but free speech seems selective &amp; limited in this new authoritarian world we live in
# ::tokens ["I", "agree", "but", "free", "speech", "seems", "selective", "&", "amp", ";", "limited", "in", "this", "new", "authoritarian", "world", "we", "live", "in"]
# ::lemmas ["i", "agree", "but", "free", "speech", "seem", "selective", "&", "amp", ";", "limit", "in", "this", "new", "authoritarian", "world", "we", "live", "in"]
(c18-10 / contrast-01
        :ARG1 (c18-14 / agree-01
                      :ARG0 (c18-6 / i))
        :ARG2 (c18-12 / seem-01
                      :ARG1 (c18-5 / and
                                   :op1 (c18-4 / selective
                                               :domain (c18-1 / speak-01
                                                              :ARG3-of (c18-2 / free-04)))
                                   :op2 (c18-3 / limit-01
                                               :ARG1 c18-1))
                      :location (c18-0 / world
                                       :mod (c18-9 / authoritarian)
                                       :ARG1-of (c18-8 / new-01)
                                       :mod (c18-13 / this)
                                       :location-of (c18-11 / live-01
                                                            :ARG0 (c18-7 / we)))))

# ::snt what a massive prick.
# ::tokens ["what", "a", "massive", "prick", "."]
# ::lemmas ["what", "a", "massive", "prick", "."]
(c19-1 / prick
       :mod (c19-2 / massive
                   :degree (c19-0 / so)))

# ::snt I think that's a job for Mr Barber.
# ::tokens ["I", "think", "that", "'s", "a", "job", "for", "Mr", "Barber", "."]
# ::lemmas ["i", "think", "that", "be", "a", "job", "for", "Mr", "Barber", "."]
(c20-5 / think-01
       :ARG0 (c20-1 / i)
       :ARG1 (c20-0 / job
                    :domain (c20-4 / that)
                    :beneficiary (c20-3 / person
                                        :name (c20-2 / name
                                                     :op1 "Mr"
                                                     :op2 "Barber"))))

# ::snt the article is bizarre. Very unlike the FT.
# ::tokens ["the", "article", "is", "bizarre", ".", "Very", "unlike", "the", "FT", "."]
# ::lemmas ["the", "article", "be", "bizarre", ".", "very", "unlike", "the", "FT", "."]
(c21-0 / multi-sentence
       :snt1 (c21-1 / bizarre
                    :domain (c21-6 / article))
       :snt2 (c21-5 / resemble-01
                    :ARG1 (c21-2 / newspaper
                                 :name (c21-3 / name
                                              :op1 "FT"))
                    :degree (c21-4 / very)
                    :polarity -))

# ::snt Terrible. I could happily cancel my FT subscription over those words. Insulting religion is quite ok.
# ::tokens ["Terrible", ".", "I", "could", "happily", "cancel", "my", "FT", "subscription", "over", "those", "words", ".", "Insulting", "religion", "is", "quite", "ok", "."]
# ::lemmas ["terrible", ".", "i", "could", "happily", "cancel", "my", "FT", "subscription", "over", "those", "word", ".", "insult", "religion", "be", "quite", "ok", "."]
(c22-2 / multi-sentence
       :snt1 (c22-0 / horrible)
       :snt2 (c22-8 / possible-01
                    :ARG1 (c22-10 / cancel-01
                                  :ARG0 (c22-5 / i)
                                  :ARG1 (c22-13 / subscribe-01
                                                :ARG0 c22-5
                                                :ARG1 (c22-6 / newspaper
                                                             :name (c22-7 / name
                                                                          :op1 "FT")))
                                  :ARG1-of (c22-15 / happy-01)
                                  :ARG1-of (c22-9 / cause-01
                                                  :ARG0 (c22-1 / word
                                                               :mod (c22-14 / that)))))
       :snt3 (c22-3 / okay-04
                    :ARG1 (c22-11 / insult-01
                                  :ARG1 (c22-12 / religion))
                    :degree (c22-4 / quite)))

# ::snt no fan of Israel, but one thing Jewish people share is the ability to laugh at themselves
# ::tokens ["no", "fan", "of", "Israel", ",", "but", "one", "thing", "Jewish", "people", "share", "is", "the", "ability", "to", "laugh", "at", "themselves"]
# ::lemmas ["no", "fan", "of", "Israel", ",", "but", "one", "thing", "Jewish", "people", "share", "be", "the", "ability", "to", "laugh", "at", "themselves"]
(c23-6 / contrast-01
       :ARG1 (c23-0 / fan
                    :topic (c23-5 / country
                                  :name (c23-2 / name
                                               :op1 "Israel"))
                    :polarity -)
       :ARG2 (c23-9 / share-01
                    :ARG0 (c23-4 / person
                                 :mod (c23-7 / religious-group
                                             :name (c23-3 / name
                                                          :op1 "Jew")))
                    :ARG1 (c23-10 / thing
                                  :domain (c23-8 / capable-01
                                                 :ARG1 c23-4
                                                 :ARG2 (c23-1 / laugh-01
                                                              :ARG0 c23-4
                                                              :ARG2 c23-4))
                                  :quant 1)))

# ::snt FFS : 's Tony Barber calls "editorially foolish" &amp; "stupid"
# ::tokens ["FFS", ":", "'s", "Tony", "Barber", "calls", "\"", "editorially", "foolish", "\"", "&", "amp", ";", "\"", "stupid", "\""]
# ::lemmas ["FFS", ":", "be", "Tony", "Barber", "call", "\"", "editorially", "foolish", "\"", "&", "amp", ";", "\"", "stupid", "\""]
(c24-6 / call-01
       :ARG0 (c24-5 / person
                    :name (c24-3 / name
                                 :op1 "Tony"
                                 :op2 "Barber")
                    :poss (c24-8 / publication
                                 :name (c24-4 / name
                                              :op1 "FFS")))
       :ARG1 (c24-9 / and
                    :op1 (c24-0 / foolish
                                :mod (c24-1 / editorial))
                    :op2 (c24-2 / amp))
       :ARG2 (c24-7 / stupid))

# ::snt In a 'free' country you should be able to say what the fuck you like and the same applies in reverse!!!
# ::tokens ["In", "a", "'", "free", "'", "country", "you", "should", "be", "able", "to", "say", "what", "the", "fuck", "you", "like", "and", "the", "same", "applies", "in", "reverse", "!", "!", "!"]
# ::lemmas ["in", "a", "'", "free", "'", "country", "you", "should", "be", "able", "to", "say", "what", "the", "fuck", "you", "like", "and", "the", "same", "apply", "in", "reverse", "!", "!", "!"]
(c25-11 / and
        :op1 (c25-6 / recommend-01
                    :ARG1 (c25-7 / capable-01
                                 :ARG1 (c25-0 / you)
                                 :ARG2 (c25-9 / say-01
                                              :ARG0 c25-0
                                              :ARG1 (c25-10 / thing
                                                            :ARG1-of (c25-1 / like-01
                                                                            :ARG0 c25-0)
                                                            :mod (c25-2 / fuck
                                                                        :mode expressive))))
                    :location (c25-8 / country
                                     :ARG1-of (c25-4 / free-04)))
        :op2 (c25-3 / apply-02
                    :ARG1 c25-9
                    :manner (c25-5 / reverse-01))
        :mode expressive)

# ::snt Not "right or wrong." Wrong.
# ::tokens ["Not", "\"", "right", "or", "wrong", ".", "\"", "Wrong", "."]
# ::lemmas ["not", "\"", "right", "or", "wrong", ".", "\"", "wrong", "."]
(c26-3 / multi-sentence
       :snt1 (c26-0 / or
                    :op1 (c26-2 / right-02)
                    :op2 (c26-1 / wrong-04
                                :snt2-of c26-3)
                    :polarity -))

# ::snt Not sure (not following) how you're seeing it as selective.
# ::tokens ["Not", "sure", "(", "not", "following", ")", "how", "you", "'re", "seeing", "it", "as", "selective", "."]
# ::lemmas ["not", "sure", "(", "not", "follow", ")", "how", "you", "be", "see", "it", "as", "selective", "."]
(c27-5 / sure-02
       :ARG1 (c27-6 / thing
                    :manner-of (c27-3 / see-01
                                      :ARG0 (c27-0 / you)
                                      :ARG1 (c27-4 / it)
                                      :ARG2 (c27-1 / selective)))
       :ARG1-of (c27-2 / follow-02
                       :polarity -)
       :polarity -)

# ::snt Got it . Your logic would blame battered wives for asking their husbands where they've been all day.
# ::tokens ["Got", "it", ".", "Your", "logic", "would", "blame", "battered", "wives", "for", "asking", "their", "husbands", "where", "they", "'ve", "been", "all", "day", "."]
# ::lemmas ["got", "it", ".", "your", "logic", "would", "blame", "battered", "wife", "for", "ask", "their", "husband", "where", "they", "'ve", "be", "all", "day", "."]
(c28-4 / multi-sentence
       :snt1 (c28-12 / get-02
                     :ARG1 (c28-8 / it))
       :snt2 (c28-6 / blame-01
                    :ARG0 (c28-3 / logic
                                 :poss (c28-1 / you))
                    :ARG1 (c28-2 / wife
                                 :ARG1-of (c28-11 / batter-01))
                    :ARG2 (c28-14 / ask-01
                                  :ARG0 c28-2
                                  :ARG1 (c28-13 / thing
                                                :location-of (c28-9 / person
                                                                    :ARG0-of (c28-0 / have-rel-role-91
                                                                                    :ARG1 c28-2
                                                                                    :ARG2 (c28-5 / husband))
                                                                    :ARG2-of c28-14))
                                  :time (c28-10 / day
                                                :mod (c28-7 / all)))))

# ::snt Me too. My mind is tinier than yours, prolly, But I think we have first helping of "context."
# ::tokens ["Me", "too", ".", "My", "mind", "is", "tinier", "than", "yours", ",", "prolly", ",", "But", "I", "think", "we", "have", "first", "helping", "of", "\"", "context", ".", "\""]
# ::lemmas ["i", "too", ".", "my", "mind", "be", "tiny", "than", "your", ",", "prolly", ",", "but", "i", "think", "we", "have", "first", "help", "of", "\"", "context", ".", "\""]
(c29-4 / multi-sentence
       :snt1 (c29-6 / i
                    :mod (c29-16 / too))
       :snt2 (c29-10 / contrast-01
                     :ARG1 (c29-0 / have-degree-91
                                  :ARG1 (c29-8 / mind
                                               :poss (c29-11 / i))
                                  :ARG2 (c29-13 / tinier)
                                  :ARG3 (c29-3 / more)
                                  :ARG4 (c29-9 / mind
                                               :poss (c29-1 / you))
                                  :mod (c29-12 / prolly))
                     :ARG2 (c29-7 / think-01
                                  :ARG0 c29-11
                                  :ARG1 (c29-17 / have-03
                                                :ARG0 (c29-2 / we)
                                                :ARG1 (c29-14 / help-01
                                                              :ARG1 (c29-15 / context)
                                                              :ord (c29-5 / ordinal-entity
                                                                          :value 1))))))

# ::snt indeed
# ::tokens ["indeed"]
# ::lemmas ["indeed"]
(c30-0 / indeed)

# ::snt a book review counts as mocking/needling/baiting?
# ::tokens ["a", "book", "review", "counts", "as", "mocking", "/", "needling", "/", "baiting", "?"]
# ::lemmas ["a", "book", "review", "count", "as", "mocking", "/", "needling", "/", "baiting", "?"]
(c31-4 / count-04
       :polarity (c31-7 / amr-unknown)
       :ARG1 (c31-3 / review-01
                    :ARG1 (c31-1 / book))
       :ARG2 (c31-6 / slash
                    :op1 (c31-0 / mock-01)
                    :op2 (c31-2 / needle-02)
                    :op3 (c31-5 / bait-01)))

# ::snt this is what I mean by selective
# ::tokens ["this", "is", "what", "I", "mean", "by", "selective"]
# ::lemmas ["this", "be", "what", "i", "mean", "by", "selective"]
(c32-2 / mean-01
       :ARG0 (c32-3 / i)
       :ARG1 (c32-0 / selective)
       :ARG2 (c32-1 / this))

# ::snt So if their jokes had just been better? Certainly cannot agree with Barber here.
# ::tokens ["So", "if", "their", "jokes", "had", "just", "been", "better", "?", "Certainly", "can", "not", "agree", "with", "Barber", "here", "."]
# ::lemmas ["so", "if", "their", "joke", "have", "just", "be", "well", "?", "certainly", "can", "not", "agree", "with", "Barber", "here", "."]
(c33-3 / multi-sentence
       :snt1 (c33-14 / amr-unknown
                     :condition (c33-0 / have-degree-91
                                       :ARG1 (c33-1 / joke-01
                                                    :ARG0 (c33-12 / they))
                                       :ARG2 (c33-11 / good-02
                                                     :ARG1 c33-1)
                                       :ARG3 (c33-8 / more)
                                       :mod (c33-13 / just)))
       :snt2 (c33-9 / possible-01
                    :ARG1 (c33-5 / agree-01
                                 :ARG0 (c33-6 / i)
                                 :ARG2 (c33-4 / person
                                              :name (c33-7 / name
                                                           :op1 "Barber"))
                                 :location (c33-2 / here))
                    :manner (c33-10 / certain)
                    :polarity -))

# ::snt sure, was aimed at him. a trully disgraceful article
# ::tokens ["sure", ",", "was", "aimed", "at", "him", ".", "a", "trully", "disgraceful", "article"]
# ::lemmas ["sure", ",", "be", "aim", "at", "he", ".", "a", "trully", "disgraceful", "article"]
(c34-1 / multi-sentence
       :snt1 (c34-4 / sure-02
                    :ARG1 (c34-6 / aim-02
                                 :ARG2 (c34-0 / he)))
       :snt2 (c34-2 / article
                    :ARG0-of (c34-3 / disgrace-01
                                    :degree (c34-5 / trite))))

# ::snt I may have meant agree or disagree.
# ::tokens ["I", "may", "have", "meant", "agree", "or", "disagree", "."]
# ::lemmas ["i", "may", "have", "mean", "agree", "or", "disagree", "."]
(c35-3 / possible-01
       :ARG1 (c35-0 / mean-01
                    :ARG0 (c35-2 / i)
                    :ARG2 (c35-1 / or
                                 :op1 (c35-5 / agree-01)
                                 :op2 (c35-4 / disagree-01))))

# ::snt Well, let's hope the never mistakenly gives Tony Barber an editorial position
# ::tokens ["Well", ",", "let", "'s", "hope", "the", "never", "mistakenly", "gives", "Tony", "Barber", "an", "editorial", "position"]
# ::lemmas ["well", ",", "let", "us", "hope", "the", "never", "mistakenly", "give", "Tony", "Barber", "an", "editorial", "position"]
(c36-0 / hope-01
       :ARG0 (c36-1 / we)
       :ARG1 (c36-9 / give-01
                    :ARG0 (c36-8 / person)
                    :ARG1 (c36-10 / position-02
                                  :ARG0 (c36-3 / person
                                               :name (c36-7 / name
                                                            :op1 "Tony"
                                                            :op2 "Barber"))
                                  :ARG2 (c36-5 / editorial))
                    :ARG2 c36-3
                    :time (c36-4 / ever)
                    :ARG1-of (c36-2 / mistake-02)
                    :polarity -)
       :mod (c36-6 / well)
       :mode imperative)
