# ::snt know his intentions or what's in his soul.
# ::tokens ["know", "his", "intentions", "or", "what", "'s", "in", "his", "soul", "."]
# ::lemmas ["know", "his", "intention", "or", "what", "be", "in", "his", "soul", "."]
(c1-4 / know-01
      :ARG0 (c1-1 / you)
      :ARG1 (c1-2 / or
                  :op1 (c1-7 / thing
                             :ARG1-of (c1-3 / intend-01
                                            :ARG0 (c1-0 / he
                                                        :part (c1-6 / soul))))
                  :op2 (c1-5 / thing
                             :location c1-6)))

# ::snt liberal whites from New York didn't do that or allow it.
# ::tokens ["liberal", "whites", "from", "New", "York", "did", "n't", "do", "that", "or", "allow", "it", "."]
# ::lemmas ["liberal", "white", "from", "New", "York", "do", "not", "do", "that", "or", "allow", "it", "."]
(c3-2 / or
      :op1 (c3-5 / do-02
                 :ARG0 (c3-4 / person
                             :ARG1-of (c3-0 / white-02)
                             :ARG1-of (c3-1 / liberal-02)
                             :source (c3-6 / city
                                           :name (c3-3 / name
                                                       :op1 "New"
                                                       :op2 "York")))
                 :ARG1 (c3-7 / that)
                 :polarity -)
      :op2 (c3-8 / allow-01
                 :ARG0 c3-4
                 :ARG1 c3-7
                 :polarity -))

# ::snt why would I apply for a job in Missouri? That I don't need.
# ::tokens ["why", "would", "I", "apply", "for", "a", "job", "in", "Missouri", "?", "That", "I", "do", "n't", "need", "."]
# ::lemmas ["why", "would", "i", "apply", "for", "a", "job", "in", "Missouri", "?", "that", "i", "do", "not", "need", "."]
(c4-1 / multi-sentence
      :snt1 (c4-6 / cause-01
                  :ARG0 (c4-9 / amr-unknown)
                  :ARG1 (c4-2 / apply-01
                              :ARG0 (c4-3 / i)
                              :ARG1 (c4-0 / job
                                          :location (c4-8 / state
                                                          :name (c4-4 / name
                                                                      :op1 "Missouri")))))
      :snt2 (c4-5 / need-01
                  :ARG0 (c4-7 / i)
                  :ARG1 c4-0
                  :polarity -))

# ::snt The people who bothered to vote did. % turn-out
# ::tokens ["The", "people", "who", "bothered", "to", "vote", "did", ".", "%", "turn", "-", "out"]
# ::lemmas ["the", "people", "who", "bother", "to", "vote", "do", ".", "%", "turn", "-", "out"]
(c5-0 / multi-sentence
      :snt1 (c5-2 / event
                  :mod (c5-4 / person
                             :ARG0-of (c5-1 / bother-02
                                            :ARG1 (c5-3 / vote-01
                                                        :ARG0 c5-4))))
      :snt2 (c5-5 / turn-out-17
                  :quant (c5-6 / percentage-entity
                               :value 40)))

# ::snt again did they vote? Did Chris make anyone choose to live under what they are complaining about?
# ::tokens ["again", "did", "they", "vote", "?", "Did", "Chris", "make", "anyone", "choose", "to", "live", "under", "what", "they", "are", "complaining", "about", "?"]
# ::lemmas ["again", "do", "they", "vote", "?", "do", "Chris", "make", "anyone", "choose", "to", "live", "under", "what", "they", "be", "complain", "about", "?"]
(c6-1 / multi-sentence
      :snt1 (c6-4 / vote-01
                  :ARG0 (c6-12 / they)
                  :mod (c6-13 / again))
      :snt2 (c6-5 / make-02
                  :ARG0 (c6-6 / person
                              :name (c6-3 / name
                                          :op1 "Chris"))
                  :ARG1 (c6-7 / choose-01
                              :ARG0 (c6-2 / anyone)
                              :ARG1 (c6-0 / live-01
                                          :ARG0 c6-2
                                          :manner (c6-10 / thing
                                                         :ARG1-of (c6-8 / complain-01
                                                                        :ARG0 (c6-9 / they)))))
                  :polarity (c6-11 / amr-unknown)))

# ::snt Liberal whites from NY are just fine with you and I playing the victim because it keeps us dependent on them.
# ::tokens ["Liberal", "whites", "from", "NY", "are", "just", "fine", "with", "you", "and", "I", "playing", "the", "victim", "because", "it", "keeps", "us", "dependent", "on", "them", "."]
# ::lemmas ["liberal", "white", "from", "NY", "be", "just", "fine", "with", "you", "and", "i", "play", "the", "victim", "because", "it", "keep", "we", "dependent", "on", "they", "."]
(c7-3 / fine-04
      :ARG1 (c7-9 / play-10
                  :ARG0 (c7-15 / and
                               :op1 (c7-1 / you)
                               :op2 (c7-5 / i))
                  :ARG1 (c7-8 / victim))
      :ARG2 (c7-14 / person
                   :ARG1-of (c7-2 / white-02)
                   :source (c7-12 / state
                                  :name (c7-7 / name
                                              :op1 "NY"))
                   :ARG1-of (c7-4 / liberal-02))
      :ARG1-of (c7-11 / cause-01
                      :ARG0 (c7-13 / keep-02
                                   :ARG0 c7-9
                                   :ARG1 (c7-10 / depend-01
                                                :ARG0 (c7-6 / we)
                                                :ARG1 c7-14)))
      :mod (c7-0 / just))

# ::snt also, the answer can be seen in any city known for looting.
# ::tokens ["also", ",", "the", "answer", "can", "be", "seen", "in", "any", "city", "known", "for", "looting", "."]
# ::lemmas ["also", ",", "the", "answer", "can", "be", "see", "in", "any", "city", "know", "for", "loot", "."]
(c8-4 / possible-01
      :ARG1 (c8-6 / see-01
                  :ARG1 (c8-7 / thing
                              :ARG2-of (c8-8 / answer-01))
                  :location (c8-5 / city
                                  :mod (c8-1 / any)
                                  :ARG1-of (c8-2 / know-02
                                                 :ARG2 (c8-0 / loot-01))))
      :mod (c8-3 / also))

# ::snt saw interview a woman who said black voters were disenfranchised. Nonsense, they just didn't bother
# ::tokens ["saw", "interview", "a", "woman", "who", "said", "black", "voters", "were", "disenfranchised", ".", "Nonsense", ",", "they", "just", "did", "n't", "bother"]
# ::lemmas ["see", "interview", "a", "woman", "who", "say", "black", "voter", "be", "disenfranchise", ".", "nonsense", ",", "they", "just", "do", "not", "bother"]
(c9-3 / multi-sentence
      :snt1 (c9-11 / see-01
                   :ARG1 (c9-6 / interview-01
                               :ARG1 (c9-1 / woman
                                           :ARG0-of (c9-5 / say-01
                                                          :ARG1 (c9-9 / disenfranchise-01
                                                                      :ARG1 (c9-8 / person
                                                                                  :ARG0-of (c9-7 / vote-01)
                                                                                  :ARG1-of (c9-4 / black-05)))))))
      :snt2 (c9-13 / and
                   :op1 (c9-2 / sense-02
                              :polarity -)
                   :op2 (c9-10 / bother-01
                               :ARG0 (c9-12 / they)
                               :mod (c9-0 / just)
                               :polarity -)))

# ::snt Liberal is a terrible word. It hasn't helped black folks. It's only kept us (as a people) dependent.
# ::tokens ["Liberal", "is", "a", "terrible", "word", ".", "It", "has", "n't", "helped", "black", "folks", ".", "It", "'s", "only", "kept", "us", "(", "as", "a", "people", ")", "dependent", "."]
# ::lemmas ["Liberal", "be", "a", "terrible", "word", ".", "it", "have", "not", "help", "black", "folk", ".", "it", "be", "only", "keep", "we", "(", "as", "a", "people", ")", "dependent", "."]
(c10-3 / multi-sentence
       :snt1 (c10-1 / word
                    :ARG1-of (c10-13 / terrible-01)
                    :domain (c10-2 / liberal-02))
       :snt2 (c10-0 / help-01
                    :ARG0 (c10-7 / it)
                    :ARG1 (c10-4 / folk
                                 :ARG1-of (c10-5 / black-05))
                    :polarity -)
       :snt3 (c10-8 / keep-02
                    :ARG0 (c10-12 / it)
                    :ARG1 (c10-11 / depend-01
                                  :ARG0 (c10-9 / we
                                               :mod (c10-10 / person)
                                               :ARG1-of c10-11))
                    :mod (c10-6 / only)))

# ::snt Yes. Most of those whites were Christians (who would not be welcome in the Democratic Party today) - whole other dscsn
# ::tokens ["Yes", ".", "Most", "of", "those", "whites", "were", "Christians", "(", "who", "would", "not", "be", "welcome", "in", "the", "Democratic", "Party", "today", ")", "-", "whole", "other", "dscsn"]
# ::lemmas ["yes", ".", "most", "of", "those", "white", "be", "Christians", "(", "who", "would", "not", "be", "welcome", "in", "the", "Democratic", "Party", "today", ")", "-", "whole", "other", "dscsn"]
(c11-2 / multi-sentence
       :snt1 (c11-0 / yes)
       :snt2 (c11-10 / person
                     :mod (c11-11 / religious-group
                                  :name (c11-8 / name
                                               :op1 "Christian"))
                     :domain (c11-17 / person
                                     :ARG1-of (c11-6 / include-91
                                                     :ARG2 (c11-3 / person
                                                                  :ARG1-of (c11-1 / white-02)
                                                                  :mod (c11-16 / that))
                                                     :ARG3 (c11-12 / most)))
                     :ARG2-of (c11-7 / welcome-01
                                     :ARG1 c11-17
                                     :ARG2 (c11-15 / political-party
                                                   :name (c11-9 / name
                                                                :op1 "Democratic"
                                                                :op2 "Party"))
                                     :time (c11-14 / today)
                                     :polarity -))
       :snt3 (c11-13 / dscsn
                     :mod (c11-5 / other
                                 :mod (c11-4 / whole))))

# ::snt Who said this?
# ::tokens ["Who", "said", "this", "?"]
# ::lemmas ["who", "say", "this", "?"]
(c12-0 / say-01
       :ARG0 (c12-2 / amr-unknown)
       :ARG1 (c12-1 / this))

# ::snt "hasn't helped" uhm when did it become liberals job to help "black folks" you are complaining about things black
# ::tokens ["\"", "has", "n't", "helped", "\"", "uhm", "when", "did", "it", "become", "liberals", "job", "to", "help", "\"", "black", "folks", "\"", "you", "are", "complaining", "about", "things", "black"]
# ::lemmas ["\"", "have", "not", "help", "\"", "uhm", "when", "do", "it", "become", "liberal", "job", "to", "help", "\"", "black", "folk", "\"", "you", "be", "complain", "about", "thing", "black"]
(c13-4 / multi-sentence
       :snt1 (c13-0 / help-01
                    :polarity -)
       :snt2 (c13-6 / become-01
                    :ARG1 (c13-14 / help-01
                                  :ARG0 (c13-8 / person
                                               :ARG1-of (c13-3 / liberal-02)))
                    :ARG2 (c13-1 / job
                                 :poss c13-8
                                 :purpose (c13-7 / help-01
                                                 :ARG0 c13-8
                                                 :ARG1 (c13-5 / folk
                                                              :ARG1-of (c13-9 / black-05))))
                    :time (c13-12 / amr-unknown))
       :snt3 (c13-10 / complain-01
                     :ARG0 (c13-2 / you)
                     :ARG1 (c13-13 / thing
                                   :ARG1-of (c13-11 / black-05))))

# ::snt Keep tellng yourself that. They are totally in favor of the moral breakdown in our communities. They promote it.
# ::tokens ["Keep", "tellng", "yourself", "that", ".", "They", "are", "totally", "in", "favor", "of", "the", "moral", "breakdown", "in", "our", "communities", ".", "They", "promote", "it", "."]
# ::lemmas ["keep", "tellng", "yourself", "that", ".", "they", "be", "totally", "in", "favor", "of", "the", "moral", "breakdown", "in", "our", "community", ".", "they", "promote", "it", "."]
(c14-3 / multi-sentence
       :snt1 (c14-6 / keep-02
                    :ARG0 (c14-0 / you)
                    :ARG1 (c14-12 / tell-01
                                  :ARG0 c14-0
                                  :ARG1 (c14-11 / that)
                                  :ARG2 c14-0)
                    :mode imperative)
       :snt2 (c14-2 / favor-01
                    :ARG0 (c14-7 / they)
                    :ARG1 (c14-4 / break-down-12
                                 :ARG1 (c14-10 / community
                                               :poss (c14-1 / we))
                                 :ARG1-of (c14-8 / moral-02))
                    :degree (c14-5 / total))
       :snt3 (c14-9 / promote-02
                    :ARG0 c14-7
                    :ARG1 c14-4))

# ::snt I'm not police material but people in the communities need to join n explain the peoples rights the constitution
# ::tokens ["I", "'m", "not", "police", "material", "but", "people", "in", "the", "communities", "need", "to", "join", "n", "explain", "the", "peoples", "rights", "the", "constitution"]
# ::lemmas ["i", "be", "not", "police", "material", "but", "people", "in", "the", "community", "need", "to", "join", "n", "explain", "the", "people", "right", "the", "constitution"]
(c15-8 / contrast-01
       :ARG1 (c15-1 / material
                    :mod (c15-6 / police)
                    :domain (c15-4 / i)
                    :polarity -)
       :ARG2 (c15-5 / need-01
                    :ARG0 (c15-11 / person
                                  :location (c15-7 / community))
                    :ARG1 (c15-12 / and
                                  :op1 (c15-0 / join-04
                                              :ARG0 c15-11)
                                  :op2 (c15-3 / explain-01
                                              :ARG0 c15-11
                                              :ARG1 (c15-9 / right-05
                                                           :ARG1 (c15-2 / person))
                                              :ARG2 (c15-10 / constitution)))))

# ::snt well apply for a job with the police
# ::tokens ["well", "apply", "for", "a", "job", "with", "the", "police"]
# ::lemmas ["well", "apply", "for", "a", "job", "with", "the", "police"]
(c16-5 / apply-01
       :ARG0 (c16-1 / you)
       :ARG1 (c16-0 / job
                    :ARG2-of (c16-2 / have-org-role-91
                                    :ARG1 (c16-4 / police)))
       :mod (c16-3 / well))

# ::snt although the same could be said of the protesters
# ::tokens ["although", "the", "same", "could", "be", "said", "of", "the", "protesters"]
# ::lemmas ["although", "the", "same", "could", "be", "say", "of", "the", "protester"]
(c17-0 / have-concession-91
       :ARG2 (c17-3 / possible-01
                    :ARG1 (c17-4 / say-01
                                 :ARG1 (c17-2 / same-01)
                                 :ARG3 (c17-5 / person
                                              :ARG0-of (c17-1 / protest-01)))))

# ::snt not every white man is the boogeyman man out to get you and they aren't completely responsible for the state of
# ::tokens ["not", "every", "white", "man", "is", "the", "boogeyman", "man", "out", "to", "get", "you", "and", "they", "are", "n't", "completely", "responsible", "for", "the", "state", "of"]
# ::lemmas ["not", "every", "white", "man", "be", "the", "boogeyman", "man", "out", "to", "get", "you", "and", "they", "be", "not", "completely", "responsible", "for", "the", "state", "of"]
(c18-10 / and
        :op1 (c18-2 / man
                    :mod (c18-3 / boogeyman)
                    :domain (c18-5 / man
                                   :ARG1-of (c18-0 / white-02)
                                   :mod (c18-4 / every
                                               :polarity -))
                    :purpose (c18-8 / get-05
                                    :ARG0 c18-5
                                    :ARG1 (c18-1 / you)))
        :op2 (c18-6 / responsible-01
                    :ARG0 c18-5
                    :ARG1 (c18-9 / state)
                    :ARG1-of (c18-7 / complete-02)
                    :polarity -))

# ::snt saying liberals made black people not handle their business is crazy. It was white liberals marching and dying
# ::tokens ["saying", "liberals", "made", "black", "people", "not", "handle", "their", "business", "is", "crazy", ".", "It", "was", "white", "liberals", "marching", "and", "dying"]
# ::lemmas ["say", "liberal", "make", "black", "people", "not", "handle", "their", "business", "be", "crazy", ".", "it", "be", "white", "liberal", "march", "and", "die"]
(c19-3 / multi-sentence
       :snt1 (c19-9 / crazy-03
                    :ARG1 (c19-13 / say-01
                                  :ARG1 (c19-8 / make-02
                                               :ARG0 (c19-7 / person
                                                            :ARG1-of (c19-2 / liberal-02))
                                               :ARG1 (c19-0 / handle-01
                                                            :ARG0 (c19-14 / person
                                                                          :ARG1-of (c19-6 / black-05))
                                                            :ARG1 (c19-10 / business
                                                                          :poss c19-14)
                                                            :polarity -))))
       :snt2 (c19-15 / and
                     :op1 (c19-4 / march-01
                                 :ARG0 (c19-5 / person
                                              :ARG1-of (c19-1 / white-02)
                                              :ARG1-of (c19-12 / liberal-02)))
                     :op2 (c19-11 / die-01
                                  :ARG1 c19-5)))

# ::snt is a cop out. Liberal isn't a bad word and I won't make it one.
# ::tokens ["is", "a", "cop", "out", ".", "Liberal", "is", "n't", "a", "bad", "word", "and", "I", "wo", "n't", "make", "it", "one", "."]
# ::lemmas ["be", "a", "cop", "out", ".", "Liberal", "be", "not", "a", "bad", "word", "and", "i", "will", "not", "make", "it", "one", "."]
(c20-2 / multi-sentence
       :snt1 (c20-7 / cop-out-02)
       :snt2 (c20-9 / and
                    :op1 (c20-3 / bad-07
                                :ARG1 (c20-0 / word
                                             :ARG1-of (c20-1 / liberal-02))
                                :polarity -)
                    :op2 (c20-6 / make-02
                                :ARG0 (c20-4 / i)
                                :ARG1 (c20-5 / word
                                             :domain (c20-8 / it)
                                             :quant 1)
                                :polarity -)))

# ::snt I agree. Own your ish. Don't let the liberal media tell you it's white cops' fault when things go wrong.
# ::tokens ["I", "agree", ".", "Own", "your", "ish", ".", "Do", "n't", "let", "the", "liberal", "media", "tell", "you", "it", "'s", "white", "cops", "'", "fault", "when", "things", "go", "wrong", "."]
# ::lemmas ["i", "agree", ".", "own", "your", "ish", ".", "do", "not", "let", "the", "liberal", "medium", "tell", "you", "it", "be", "white", "cop", "'", "fault", "when", "thing", "go", "wrong", "."]
(c21-3 / multi-sentence
       :snt1 (c21-16 / agree-01
                     :ARG0 (c21-6 / i))
       :snt2 (c21-5 / own-01
                    :ARG0 (c21-0 / you)
                    :ARG1 (c21-11 / ish
                                  :poss c21-0)
                    :mode imperative)
       :snt3 (c21-2 / let-01
                    :ARG0 (c21-13 / you)
                    :ARG1 (c21-15 / tell-01
                                  :ARG0 (c21-8 / media
                                               :ARG1-of (c21-9 / liberal-02))
                                  :ARG1 (c21-4 / fault-01
                                               :ARG1 (c21-10 / cop
                                                             :ARG1-of (c21-1 / white-02))
                                               :ARG2 (c21-12 / go-08
                                                             :ARG1 (c21-14 / thing)
                                                             :ARG2 (c21-7 / wrong-02
                                                                          :ARG1 c21-14)))
                                  :ARG2 c21-13)
                    :polarity -
                    :mode imperative))

# ::snt so how long will you be staying?
# ::tokens ["so", "how", "long", "will", "you", "be", "staying", "?"]
# ::lemmas ["so", "how", "long", "will", "you", "be", "stay", "?"]
(c22-0 / stay-01
       :ARG1 (c22-1 / you)
       :duration (c22-2 / amr-unknown))

# ::snt I'm not looking for Chris Hayes to save me nor do I expect it to be his job nor should anyone else.
# ::tokens ["I", "'m", "not", "looking", "for", "Chris", "Hayes", "to", "save", "me", "nor", "do", "I", "expect", "it", "to", "be", "his", "job", "nor", "should", "anyone", "else", "."]
# ::lemmas ["i", "be", "not", "look", "for", "Chris", "Hayes", "to", "save", "i", "nor", "do", "i", "expect", "it", "to", "be", "his", "job", "nor", "should", "anyone", "else", "."]
(c23-11 / and
        :op1 (c23-1 / look-04
                    :ARG0 (c23-5 / i)
                    :ARG1 (c23-10 / save-02
                                  :ARG0 (c23-8 / person
                                               :name (c23-6 / name
                                                            :op1 "Chris"
                                                            :op2 "Hayes"))
                                  :ARG1 c23-5)
                    :polarity -)
        :op2 (c23-4 / and
                    :op1 (c23-3 / expect-01
                                :ARG0 c23-5
                                :ARG1 (c23-0 / job
                                             :poss c23-8
                                             :domain c23-10)
                                :polarity -)
                    :op2 (c23-9 / recommend-01
                                :ARG0 c23-5
                                :ARG1 c23-10
                                :ARG2 (c23-7 / anyone
                                             :mod (c23-2 / else))
                                :polarity -)))

# ::snt oh I think a call to a democratic gov by POTUS will be making some changes happen before DOJ leaves town.
# ::tokens ["oh", "I", "think", "a", "call", "to", "a", "democratic", "gov", "by", "POTUS", "will", "be", "making", "some", "changes", "happen", "before", "DOJ", "leaves", "town", "."]
# ::lemmas ["oh", "i", "think", "a", "call", "to", "a", "democratic", "gov", "by", "POTUS", "will", "be", "make", "some", "change", "happen", "before", "DOJ", "leave", "town", "."]
(c24-18 / think-01
        :ARG0 (c24-12 / i)
        :ARG1 (c24-0 / make-02
                     :ARG0 (c24-16 / call-03
                                   :ARG0 (c24-1 / person
                                                :ARG0-of (c24-7 / have-org-role-91
                                                                :ARG1 (c24-2 / country
                                                                             :name (c24-10 / name
                                                                                           :op1 "United"
                                                                                           :op2 "States"))
                                                                :ARG2 (c24-6 / president)))
                                   :ARG1 (c24-11 / government-organization
                                                 :ARG0-of (c24-3 / govern-01)
                                                 :mod (c24-4 / democratic)))
                     :ARG1 (c24-13 / change-01
                                   :quant (c24-5 / some))
                     :time (c24-9 / before
                                  :op1 (c24-8 / leave-11
                                              :ARG0 c24-11
                                              :name (c24-15 / name
                                                            :op1 "DOJ"))
                                  :ARG1 (c24-17 / town)))
        :mod (c24-14 / oh
                     :mode expressive))

# ::snt And like I always tell non-voters. If you don't vote, you don't count
# ::tokens ["And", "like", "I", "always", "tell", "non", "-", "voters", ".", "If", "you", "do", "n't", "vote", ",", "you", "do", "n't", "count"]
# ::lemmas ["and", "like", "i", "always", "tell", "non", "-", "voter", ".", "if", "you", "do", "not", "vote", ",", "you", "do", "not", "count"]
(c25-9 / and
       :op2 (c25-6 / resemble-01
                   :ARG2 (c25-8 / tell-01
                                :ARG0 (c25-3 / i)
                                :ARG1 (c25-7 / count-04
                                             :ARG1 (c25-0 / you)
                                             :condition (c25-4 / vote-01
                                                               :ARG0 c25-0
                                                               :polarity -)
                                             :polarity -)
                                :ARG2 (c25-5 / person
                                             :ARG0-of (c25-1 / vote-01
                                                             :polarity -))
                                :time (c25-2 / always))))

# ::snt the problem is we are living under a two party dictator ship
# ::tokens ["the", "problem", "is", "we", "are", "living", "under", "a", "two", "party", "dictator", "ship"]
# ::lemmas ["the", "problem", "be", "we", "be", "live", "under", "a", "two", "party", "dictator", "ship"]
(c26-3 / problem
       :domain (c26-1 / live-01
                      :ARG0 (c26-0 / we)
                      :location (c26-2 / under
                                       :op1 (c26-5 / ship
                                                   :mod (c26-4 / dictator)
                                                   :mod (c26-6 / party
                                                               :quant 2)))))

# ::snt lol. You believe that??
# ::tokens ["lol", ".", "You", "believe", "that", "?", "?"]
# ::lemmas ["lol", ".", "you", "believe", "that", "?", "?"]
(c27-2 / believe-01
       :polarity (c27-5 / amr-unknown)
       :ARG0 (c27-0 / you)
       :ARG1 (c27-4 / that)
       :ARG2-of (c27-1 / laugh-01
                       :manner (c27-3 / loud)
                       :mode expressive))

# ::snt own interest, if they were running for offices, if they were taking responsibility for themselves they wouldn't
# ::tokens ["own", "interest", ",", "if", "they", "were", "running", "for", "offices", ",", "if", "they", "were", "taking", "responsibility", "for", "themselves", "they", "would", "n't"]
# ::lemmas ["own", "interest", ",", "if", "they", "be", "run", "for", "office", ",", "if", "they", "be", "take", "responsibility", "for", "themselves", "they", "would", "not"]
(c28-2 / interest-01
       :ARG1 (c28-6 / they
                    :condition (c28-4 / run-02
                                      :ARG1 (c28-1 / office)
                                      :ARG0 c28-6)
                    :condition (c28-5 / take-01
                                      :ARG1 (c28-3 / responsible-03
                                                   :ARG0 c28-6
                                                   :ARG1 c28-6))
                    :ARG0-of c28-5
                    :polarity -)
       :mod (c28-0 / own))

# ::snt excuses, I'll hold people accountable for the dirt they do but allowing them to do it is bad too
# ::tokens ["excuses", ",", "I", "'ll", "hold", "people", "accountable", "for", "the", "dirt", "they", "do", "but", "allowing", "them", "to", "do", "it", "is", "bad", "too"]
# ::lemmas ["excuse", ",", "i", "'ll", "hold", "people", "accountable", "for", "the", "dirt", "they", "do", "but", "allow", "they", "to", "do", "it", "be", "bad", "too"]
(c29-11 / and
        :op1 (c29-3 / excuse-02)
        :op2 (c29-9 / contrast-01
                    :ARG1 (c29-0 / hold-02
                                 :ARG0 (c29-5 / i)
                                 :ARG1 (c29-4 / accountable-02
                                              :ARG0 (c29-7 / person)
                                              :ARG1 (c29-8 / dirt
                                                           :ARG1-of (c29-1 / do-02
                                                                           :ARG0 c29-7))))
                    :ARG2 (c29-2 / bad-07
                                 :ARG1 (c29-6 / allow-01
                                              :ARG1 c29-1)
                                 :mod (c29-10 / too))))

# ::snt Thank you Liberal white folks. However could we po' blacks survive without you? /sarcasm off
# ::tokens ["Thank", "you", "Liberal", "white", "folks", ".", "However", "could", "we", "po", "'", "blacks", "survive", "without", "you", "?", "/sarcasm", "off"]
# ::lemmas ["thank", "you", "liberal", "white", "folk", ".", "however", "could", "we", "po", "'", "black", "survive", "without", "you", "?", "/sarcasm", "off"]
(c30-3 / multi-sentence
       :snt1 (c30-13 / thank-01
                     :ARG1 (c30-2 / folk
                                  :ARG1-of (c30-0 / white-02)
                                  :ARG1-of (c30-4 / liberal-02)))
       :snt2 (c30-11 / contrast-01
                     :ARG2 (c30-10 / possible-01
                                   :ARG1 (c30-12 / survive-01
                                                 :ARG0 (c30-9 / we)
                                                 :manner (c30-15 / accompany-01
                                                                 :ARG0 (c30-1 / you)
                                                                 :ARG1 (c30-14 / person
                                                                               :ARG1-of (c30-5 / black-05))
                                                                 :polarity -))
                                   :polarity (c30-8 / amr-unknown)))
       :snt3 (c30-7 / sarcasm
                    :mod (c30-6 / off)))

# ::snt Because we demonize police and don't encourage our kids to become police officers. That's why.
# ::tokens ["Because", "we", "demonize", "police", "and", "do", "n't", "encourage", "our", "kids", "to", "become", "police", "officers", ".", "That", "'s", "why", "."]
# ::lemmas ["because", "we", "demonize", "police", "and", "do", "not", "encourage", "our", "kid", "to", "become", "police", "officer", ".", "that", "be", "why", "."]
(c31-2 / multi-sentence
       :snt1 (c31-11 / cause-01
                     :ARG0 (c31-10 / demonize-01
                                   :ARG0 (c31-1 / we)
                                   :ARG1 (c31-9 / police)))
       :snt2 (c31-12 / cause-01
                     :ARG0 (c31-14 / that)
                     :ARG1 (c31-6 / encourage-01
                                  :ARG0 (c31-7 / we)
                                  :ARG1 (c31-15 / person
                                                :ARG0-of (c31-0 / have-rel-role-91
                                                                :ARG1 c31-7
                                                                :ARG2 (c31-8 / kid)))
                                  :ARG2 (c31-4 / become-01
                                               :ARG1 c31-15
                                               :ARG2 (c31-3 / person
                                                            :ARG0-of (c31-16 / have-org-role-91
                                                                             :ARG1 (c31-13 / police)
                                                                             :ARG2 (c31-5 / officer))))
                                  :polarity -)))

# ::snt Chris doesn't have to be there. He could do his reporting right from the safety of his studio. Don't assume you
# ::tokens ["Chris", "does", "n't", "have", "to", "be", "there", ".", "He", "could", "do", "his", "reporting", "right", "from", "the", "safety", "of", "his", "studio", ".", "Do", "n't", "assume", "you"]
# ::lemmas ["Chris", "do", "not", "have", "to", "be", "there", ".", "he", "could", "do", "his", "reporting", "right", "from", "the", "safety", "of", "his", "studio", ".", "do", "not", "assume", "you"]
(c32-2 / multi-sentence
       :snt1 (c32-4 / obligate-01
                    :ARG1 (c32-8 / person
                                 :name (c32-7 / name
                                              :op1 "Chris"))
                    :ARG2 (c32-3 / be-located-at-91
                                 :ARG1 c32-8
                                 :ARG2 (c32-11 / there))
                    :polarity -)
       :snt2 (c32-12 / possible-01
                     :ARG1 (c32-9 / report-01
                                  :ARG0 (c32-0 / he)
                                  :manner (c32-10 / safe-01
                                                  :ARG1 (c32-5 / studio
                                                               :poss c32-0)
                                                  :mod (c32-6 / right))))
       :snt3 (c32-13 / assume-02
                     :ARG0 (c32-1 / you
                                  :ARG1-of c32-13)
                     :mode imperative
                     :polarity -))

# ::snt uhm lol there was something I agree with in there somewhere.
# ::tokens ["uhm", "lol", "there", "was", "something", "I", "agree", "with", "in", "there", "somewhere", "."]
# ::lemmas ["uhm", "lol", "there", "be", "something", "i", "agree", "with", "in", "there", "somewhere", "."]
(c33-4 / something
       :ARG1-of (c33-6 / agree-01
                       :ARG0 (c33-2 / i))
       :location (c33-5 / there
                        :mod (c33-1 / somewhere))
       :ARG2-of (c33-0 / laugh-01
                       :ARG0 c33-2
                       :manner (c33-3 / loud)
                       :mode expressive))

# ::snt need white NYC liberals.
# ::tokens ["need", "white", "NYC", "liberals", "."]
# ::lemmas ["need", "white", "NYC", "liberal", "."]
(c34-2 / need-01
       :ARG1 (c34-4 / person
                    :ARG1-of (c34-1 / liberal-02)
                    :ARG1-of (c34-0 / white-02)
                    :location (c34-5 / city
                                     :name (c34-3 / name
                                                  :op1 "NYC"))))

# ::snt Yet smthng like this hppns and the white NYC liberals have everyone believing they are victims who need more liberals
# ::tokens ["Yet", "smthng", "like", "this", "hppns", "and", "the", "white", "NYC", "liberals", "have", "everyone", "believing", "they", "are", "victims", "who", "need", "more", "liberals"]
# ::lemmas ["yet", "smthng", "like", "this", "hppns", "and", "the", "white", "NYC", "liberal", "have", "everyone", "believe", "they", "be", "victim", "who", "need", "more", "liberal"]
(c35-11 / contrast-01
        :ARG2 (c35-6 / believe-01
                     :ARG0 (c35-17 / and
                                   :op1 (c35-9 / person
                                               :ARG1-of (c35-3 / liberal-02)
                                               :ARG1-of (c35-10 / resemble-01
                                                                :ARG2 (c35-15 / this)))
                                   :op2 (c35-16 / person
                                                :ARG1-of (c35-14 / liberal-02)
                                                :ARG1-of (c35-1 / white-02)
                                                :location (c35-12 / city
                                                                  :name (c35-7 / name
                                                                               :op1 "NYC"))))
                     :ARG1 (c35-8 / victim
                                  :domain c35-17
                                  :ARG0-of (c35-13 / need-01
                                                   :ARG1 (c35-5 / person
                                                                :ARG1-of (c35-0 / liberal-02)
                                                                :quant (c35-4 / more))))
                     :mod (c35-2 / yet)))

# ::snt no one makes anyone believe anything, they choose to.
# ::tokens ["no", "one", "makes", "anyone", "believe", "anything", ",", "they", "choose", "to", "."]
# ::lemmas ["no", "one", "make", "anyone", "believe", "anything", ",", "they", "choose", "to", "."]
(c36-6 / and
       :op1 (c36-0 / make-02
                   :ARG0 (c36-3 / no-one)
                   :ARG1 (c36-1 / believe-01
                                :ARG0 (c36-2 / anyone)
                                :ARG1 (c36-4 / anything)))
       :op2 (c36-5 / choose-01
                   :ARG0 c36-3
                   :ARG1 c36-1))

# ::snt lol uhm I'm no ones victim and unless I see blacks stepping up to help I'm not going to knock those who do.
# ::tokens ["lol", "uhm", "I", "'m", "no", "ones", "victim", "and", "unless", "I", "see", "blacks", "stepping", "up", "to", "help", "I", "'m", "not", "going", "to", "knock", "those", "who", "do", "."]
# ::lemmas ["lol", "uhm", "i", "be", "no", "one", "victim", "and", "unless", "i", "see", "black", "step", "up", "to", "help", "i", "be", "not", "go", "to", "knock", "those", "who", "do", "."]
(c37-14 / and
        :op1 (c37-8 / victim
                    :domain (c37-6 / i)
                    :mod (c37-7 / no-one))
        :op2 (c37-12 / knock-01
                     :ARG0 c37-6
                     :ARG1 (c37-9 / person
                                  :mod (c37-10 / that)
                                  :ARG0-of (c37-13 / step-01
                                                   :direction (c37-2 / up)
                                                   :purpose (c37-0 / help-01
                                                                   :ARG0 c37-9)))
                     :condition (c37-4 / see-01
                                       :ARG0 c37-6
                                       :ARG1 (c37-1 / step-01
                                                    :ARG0 (c37-5 / person
                                                                 :ARG1-of (c37-3 / black-05))
                                                    :ARG2 c37-2
                                                    :purpose c37-0)
                                       :polarity -)
                     :polarity -)
        :mod (c37-11 / uhm
                     :mode expressive))

# ::snt Hey Chrissy : ) Video of Gang member robbin store didn't make U very happy,did it? LOL
# ::tokens ["Hey", "Chrissy", ":", ")", "Video", "of", "Gang", "member", "robbin", "store", "did", "n't", "make", "U", "very", "happy", ",", "did", "it", "?", "LOL"]
# ::lemmas ["hey", "chrissy", ":", ")", "video", "of", "Gang", "member", "robbin", "store", "do", "not", "make", "U", "very", "happy", ",", "do", "it", "?", "lol"]
(c38-15 / say-01
        :ARG0 (c38-6 / i)
        :ARG1 (c38-3 / make-02
                     :ARG0 (c38-8 / video
                                  :topic (c38-5 / store
                                                :mod (c38-10 / rob-01
                                                             :ARG0 (c38-9 / person
                                                                          :ARG0-of (c38-0 / have-org-role-91
                                                                                          :ARG1 (c38-12 / gang)
                                                                                          :ARG2 (c38-11 / member))))))
                     :ARG1 (c38-16 / happy-01
                                   :ARG1 (c38-1 / we)
                                   :degree (c38-4 / very))
                     :ARG2-of (c38-2 / laugh-01
                                     :ARG0 c38-6
                                     :manner (c38-14 / loud)
                                     :mode expressive)
                     :polarity -)
        :ARG2 c38-9
        :name (c38-7 / name
                     :op1 "Chrissy")
        :mod (c38-13 / hey
                     :mode expressive))

# ::snt I agree with you but we need too get these Barney Fifes out you know the type
# ::tokens ["I", "agree", "with", "you", "but", "we", "need", "too", "get", "these", "Barney", "Fifes", "out", "you", "know", "the", "type"]
# ::lemmas ["i", "agree", "with", "you", "but", "we", "need", "too", "get", "these", "Barney", "Fifes", "out", "you", "know", "the", "type"]
(c39-9 / contrast-01
       :ARG1 (c39-14 / agree-01
                     :ARG0 (c39-3 / i)
                     :ARG2 (c39-0 / you))
       :ARG2 (c39-5 / need-01
                    :ARG0 c39-0
                    :ARG1 (c39-10 / get-05
                                  :ARG0 (c39-1 / we)
                                  :ARG1 (c39-7 / person
                                               :name (c39-6 / name
                                                            :op1 "Barney"
                                                            :op2 "Fifes")
                                               :mod (c39-13 / this))
                                  :ARG2 (c39-2 / out))
                    :mod (c39-12 / too)
                    :ARG1-of (c39-8 / cause-01
                                    :ARG0 (c39-4 / know-01
                                                 :ARG0 c39-0
                                                 :ARG1 (c39-11 / type)))))

# ::snt "...they acting good now because y'all are here. But what you think's gonna happen when y'all leave? Tell *that* story."
# ::tokens ["\"", "...", "they", "acting", "good", "now", "because", "y'", "all", "are", "here", ".", "But", "what", "you", "think", "'s", "gon", "na", "happen", "when", "y'", "all", "leave", "?", "Tell", "*", "that", "*", "story", ".", "\""]
# ::lemmas ["\"", "...", "they", "act", "good", "now", "because", "you", "all", "be", "here", ".", "but", "what", "you", "think", "'s", "going", "to", "happen", "when", "you", "all", "leave", "?", "tell", "*", "that", "*", "story", ".", "\""]
(c40-3 / multi-sentence
       :snt1 (c40-16 / act-01
                     :ARG0 (c40-15 / they)
                     :ARG1 (c40-12 / good-02)
                     :time (c40-8 / now)
                     :ARG1-of (c40-11 / cause-01
                                      :ARG0 (c40-4 / be-located-at-91
                                                   :ARG1 (c40-1 / you)
                                                   :ARG2 (c40-0 / here))))
       :snt2 (c40-10 / contrast-01
                     :ARG2 (c40-13 / think-01
                                   :ARG0 (c40-17 / you)
                                   :ARG1 (c40-5 / event
                                                :time (c40-2 / leave-11
                                                             :ARG0 c40-17)))
                     :polarity (c40-7 / amr-unknown))
       :snt3 (c40-9 / tell-01
                    :ARG0 c40-17
                    :ARG1 (c40-14 / story
                                  :mod (c40-6 / that))
                    :mode imperative))

# ::snt ahhh never!
# ::tokens ["ahhh", "never", "!"]
# ::lemmas ["ahhh", "never", "!"]
(c41-0 / have-polarity-91
       :mod (c41-2 / ah
                   :mode expressive)
       :time (c41-1 / ever)
       :ARG2 -)

# ::snt yes we have his thing called history and if you knew it you'd know about whites who helped in the CR movement
# ::tokens ["yes", "we", "have", "his", "thing", "called", "history", "and", "if", "you", "knew", "it", "you", "'d", "know", "about", "whites", "who", "helped", "in", "the", "CR", "movement"]
# ::lemmas ["yes", "we", "have", "his", "thing", "call", "history", "and", "if", "you", "know", "it", "you", "would", "know", "about", "white", "who", "help", "in", "the", "CR", "movement"]
(c42-15 / and
        :op1 (c42-0 / have-03
                    :ARG0 (c42-1 / we)
                    :ARG1 (c42-13 / thing
                                  :name (c42-7 / name
                                               :op1 "History")
                                  :poss (c42-3 / he)))
        :op2 (c42-6 / know-01
                    :ARG0 (c42-2 / you)
                    :ARG1 (c42-9 / person
                                 :ARG1-of (c42-8 / white-02)
                                 :ARG0-of (c42-10 / help-01
                                                  :ARG1 (c42-4 / movement-07
                                                               :ARG1 (c42-14 / political-party
                                                                             :name (c42-11 / name
                                                                                           :op1 "Republican"
                                                                                           :op2 "Party")))))
                    :condition (c42-5 / know-01
                                      :ARG0 c42-2
                                      :ARG1 (c42-12 / history))))

# ::snt the real question is how the Ferguson police will act when everyone is gone
# ::tokens ["the", "real", "question", "is", "how", "the", "Ferguson", "police", "will", "act", "when", "everyone", "is", "gone"]
# ::lemmas ["the", "real", "question", "be", "how", "the", "Ferguson", "police", "will", "act", "when", "everyone", "be", "go"]
(c43-1 / question-01
       :ARG1 (c43-7 / thing
                    :manner-of (c43-8 / act-02
                                      :ARG0 (c43-3 / police
                                                   :mod (c43-5 / city
                                                               :name (c43-2 / name
                                                                            :op1 "Ferguson")))
                                      :time (c43-6 / go-02
                                                   :ARG0 (c43-0 / everyone))))
       :ARG1-of (c43-4 / real-04))

# ::snt minorities in . Own your own ish.
# ::tokens ["minorities", "in", ".", "Own", "your", "own", "ish", "."]
# ::lemmas ["minority", "in", ".", "own", "your", "own", "ish", "."]
(c44-1 / multi-sentence
       :snt1 (c44-5 / minority
                    :prep-in (c44-3 / event))
       :snt2 (c44-2 / own-01
                    :ARG0 (c44-0 / you)
                    :ARG1 (c44-4 / ish
                                 :poss c44-0)))

# ::snt people allowed, has nothing to do with liberals doing anything.
# ::tokens ["people", "allowed", ",", "has", "nothing", "to", "do", "with", "liberals", "doing", "anything", "."]
# ::lemmas ["people", "allow", ",", "have", "nothing", "to", "do", "with", "liberal", "do", "anything", "."]
(c45-0 / have-to-do-with-04
       :ARG0 (c45-4 / person
                    :ARG1-of (c45-7 / allow-01))
       :ARG1 (c45-5 / do-02
                    :ARG0 (c45-6 / person
                                 :ARG1-of (c45-1 / liberal-02))
                    :ARG1 (c45-2 / anything))
       :ARG2 (c45-3 / nothing))

# ::snt oh I know and I know the people of Ferguson can remove them....just vote.
# ::tokens ["oh", "I", "know", "and", "I", "know", "the", "people", "of", "Ferguson", "can", "remove", "them", "....", "just", "vote", "."]
# ::lemmas ["oh", "i", "know", "and", "i", "know", "the", "people", "of", "Ferguson", "can", "remove", "they", "....", "just", "vote", "."]
(c46-2 / multi-sentence
       :snt1 (c46-13 / and
                     :op1 (c46-11 / know-01
                                  :ARG0 (c46-4 / i))
                     :op2 (c46-3 / know-01
                                 :ARG0 c46-4
                                 :ARG1 (c46-7 / possible-01
                                              :ARG1 (c46-8 / remove-01
                                                           :ARG0 (c46-12 / person
                                                                         :mod (c46-9 / city
                                                                                     :name (c46-5 / name
                                                                                                  :op1 "Ferguson")))
                                                           :ARG1 (c46-10 / they)))))
       :snt2 (c46-6 / vote-01
                    :ARG0 (c46-1 / you)
                    :mod (c46-0 / just)
                    :mode imperative))

# ::snt lol I think we've been mostly agreeing this whole time.
# ::tokens ["lol", "I", "think", "we", "'ve", "been", "mostly", "agreeing", "this", "whole", "time", "."]
# ::lemmas ["lol", "i", "think", "we", "'ve", "be", "mostly", "agree", "this", "whole", "time", "."]
(c47-7 / think-01
       :ARG0 (c47-3 / i)
       :ARG1 (c47-8 / agree-01
                    :ARG0 (c47-0 / we)
                    :ARG1 (c47-6 / this)
                    :mod (c47-2 / most)
                    :duration (c47-5 / time
                                     :mod (c47-4 / whole)))
       :manner (c47-1 / loud))

# ::snt no one forces anyone to be dependent, that's silly. People make choices and blaming other for those choices
# ::tokens ["no", "one", "forces", "anyone", "to", "be", "dependent", ",", "that", "'s", "silly", ".", "People", "make", "choices", "and", "blaming", "other", "for", "those", "choices"]
# ::lemmas ["no", "one", "force", "anyone", "to", "be", "dependent", ",", "that", "be", "silly", ".", "people", "make", "choice", "and", "blame", "other", "for", "those", "choice"]
(c48-1 / multi-sentence
       :snt1 (c48-0 / force-01
                    :ARG0 (c48-5 / no-one)
                    :ARG1 (c48-13 / anyone)
                    :ARG2 (c48-7 / depend-01
                                 :ARG0 c48-13)
                    :mod (c48-10 / silly))
       :snt2 (c48-4 / and
                    :op1 (c48-8 / choose-01
                                :ARG0 (c48-6 / person))
                    :op2 (c48-2 / blame-01
                                :ARG0 c48-6
                                :ARG1 (c48-12 / person
                                              :mod (c48-3 / other))
                                :ARG2 (c48-9 / choose-01
                                             :ARG0 c48-12
                                             :mod (c48-11 / that)))))

# ::snt or why called out in ferguson but not at bundy ranch
# ::tokens ["or", "why", "called", "out", "in", "ferguson", "but", "not", "at", "bundy", "ranch"]
# ::lemmas ["or", "why", "call", "out", "in", "ferguson", "but", "not", "at", "bundy", "ranch"]
(c49-1 / or
       :op2 (c49-6 / contrast-01
                   :ARG1 (c49-5 / call-out-15
                                :ARG1-of (c49-8 / cause-01
                                                :ARG0 (c49-9 / amr-unknown))
                                :location (c49-10 / city
                                                  :name (c49-3 / name
                                                               :op1 "Ferguson")))
                   :ARG2 (c49-0 / call-out-15
                                :ARG1 (c49-2 / amr-unknown)
                                :location (c49-7 / ranch
                                                 :name (c49-4 / name
                                                              :op1 "Bundy"))
                                :polarity -)))

# ::snt question, who voted in an entirely white city council, why are there only two blacks on the police force?
# ::tokens ["question", ",", "who", "voted", "in", "an", "entirely", "white", "city", "council", ",", "why", "are", "there", "only", "two", "blacks", "on", "the", "police", "force", "?"]
# ::lemmas ["question", ",", "who", "vote", "in", "an", "entirely", "white", "city", "council", ",", "why", "be", "there", "only", "two", "black", "on", "the", "police", "force", "?"]
(c50-6 / question-01
       :ARG1 (c50-0 / have-org-role-91
                    :ARG0 (c50-8 / person
                                 :mod (c50-4 / only)
                                 :ARG1-of (c50-3 / black-05)
                                 :quant 2)
                    :ARG1 (c50-2 / force
                                 :mod (c50-12 / police))
                    :ARG1-of (c50-10 / cause-01
                                     :ARG0 (c50-13 / amr-unknown
                                                   :ARG2-of c50-6)))
       :concession (c50-7 / vote-01
                          :ARG0 c50-13)
       :ARG1 (c50-9 / council
                    :mod (c50-11 / city)
                    :ARG1-of (c50-1 / white-02
                                    :degree (c50-5 / entire))))
