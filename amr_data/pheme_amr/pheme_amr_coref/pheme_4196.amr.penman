# ::snt reports they are dead
# ::tokens ["reports", "they", "are", "dead"]
# ::lemmas ["report", "they", "be", "dead"]
(c1-1 / report-01
      :ARG1 (c1-0 / die-01
                  :ARG1 (c1-2 / they)))

# ::snt animals dying the death they deserve....learn people. Tolerance breeds crazies..
# ::tokens ["animals", "dying", "the", "death", "they", "deserve", "....", "learn", "people", ".", "Tolerance", "breeds", "crazies", ".."]
# ::lemmas ["animal", "die", "the", "death", "they", "deserve", "....", "learn", "people", ".", "tolerance", "breed", "crazy", ".."]
(c2-3 / multi-sentence
      :snt1 (c2-6 / die-01
                  :ARG1 (c2-9 / animal)
                  :ARG1-of (c2-1 / deserve-01
                                 :ARG0 c2-9))
      :snt2 (c2-2 / learn-01
                  :ARG0 (c2-0 / you)
                  :ARG2 (c2-5 / person)
                  :mode imperative)
      :snt3 (c2-4 / breed-01
                  :ARG0 (c2-8 / tolerate-01
                              :polarity -)
                  :ARG1 (c2-7 / crazy-03)))

# ::snt Its time to return the favor to muslims &amp; islam. Just kill them on site. Call it an "eye for an eye" or whatever no more victims
# ::tokens ["Its", "time", "to", "return", "the", "favor", "to", "muslims", "&", "amp", ";", "islam", ".", "Just", "kill", "them", "on", "site", ".", "Call", "it", "an", "\"", "eye", "for", "an", "eye", "\"", "or", "whatever", "no", "more", "victims"]
# ::lemmas ["its", "time", "to", "return", "the", "favor", "to", "muslims", "&", "amp", ";", "islam", ".", "just", "kill", "they", "on", "site", ".", "call", "it", "an", "\"", "eye", "for", "an", "eye", "\"", "or", "whatever", "no", "more", "victim"]
(c3-1 / multi-sentence
      :snt1 (c3-23 / time
                   :time-of (c3-14 / return-02
                                   :ARG1 (c3-8 / favor-01)
                                   :ARG2 (c3-7 / and
                                               :op1 (c3-4 / person
                                                          :mod (c3-2 / religious-group
                                                                     :name (c3-12 / name
                                                                                  :op1 "Islam")))
                                               :op2 (c3-6 / person
                                                          :mod (c3-11 / religious-group
                                                                      :name (c3-20 / name
                                                                                   :op1 "Islam"))))))
      :snt2 (c3-17 / kill-01
                   :ARG1 (c3-22 / they)
                   :location (c3-5 / site)
                   :mod (c3-0 / just))
      :snt3 (c3-21 / call-01
                   :ARG0 (c3-18 / you)
                   :ARG1 (c3-16 / it)
                   :ARG2 (c3-19 / or
                                :op1 (c3-10 / eye
                                            :purpose (c3-9 / eye))
                                :op2 (c3-15 / whatever))
                   :mode imperative)
      :snt4 (c3-3 / victim
                  :quant (c3-13 / more)
                  :polarity -))

# ::snt God help the hostages.
# ::tokens ["God", "help", "the", "hostages", "."]
# ::lemmas ["God", "help", "the", "hostage", "."]
(c4-0 / help-01
      :ARG0 (c4-1 / person
                  :name (c4-2 / name
                              :op1 "God"))
      :ARG2 (c4-3 / hostage))

# ::snt Hope they made the hostages disappear!
# ::tokens ["Hope", "they", "made", "the", "hostages", "disappear", "!"]
# ::lemmas ["hope", "they", "make", "the", "hostage", "disappear", "!"]
(c5-0 / hope-01
      :ARG0 (c5-2 / i)
      :ARG1 (c5-1 / make-02
                  :ARG0 (c5-4 / they)
                  :ARG1 (c5-3 / disappear-01
                              :ARG1 (c5-5 / hostage)))
      :mode expressive)

# ::snt kill everyone one of the savages
# ::tokens ["kill", "everyone", "one", "of", "the", "savages"]
# ::lemmas ["kill", "everyone", "one", "of", "the", "savage"]
(c6-5 / kill-01
      :ARG0 (c6-0 / you)
      :ARG1 (c6-1 / everyone
                  :ARG1-of (c6-2 / include-91
                                 :ARG2 (c6-3 / person
                                             :mod (c6-4 / savage))))
      :mode imperative)

# ::snt frozen bacon bullets. Go. No heaven for you.
# ::tokens ["frozen", "bacon", "bullets", ".", "Go", ".", "No", "heaven", "for", "you", "."]
# ::lemmas ["frozen", "bacon", "bullet", ".", "go", ".", "no", "heaven", "for", "you", "."]
(c7-3 / multi-sentence
      :snt1 (c7-4 / bullet
                  :ARG1-of (c7-2 / freeze-01)
                  :mod (c7-5 / bacon))
      :snt2 (c7-6 / go-02
                  :ARG0 (c7-1 / you)
                  :mode imperative)
      :snt3 (c7-0 / heaven
                  :beneficiary (c7-7 / you)
                  :polarity -))

# ::snt They always do.
# ::tokens ["They", "always", "do", "."]
# ::lemmas ["they", "always", "do", "."]
(c8-0 / do-02
      :ARG0 (c8-1 / they)
      :time (c8-2 / always))

# ::snt French police should kill all of 'em
# ::tokens ["French", "police", "should", "kill", "all", "of", "'em"]
# ::lemmas ["French", "police", "should", "kill", "all", "of", "'em"]
(c9-2 / recommend-01
      :ARG1 (c9-5 / kill-01
                  :ARG0 (c9-1 / police
                              :mod (c9-3 / country
                                         :name (c9-0 / name
                                                     :op1 "France")))
                  :ARG1 (c9-4 / they
                              :mod (c9-6 / all))))

# ::snt oops has = had
# ::tokens ["oops", "has", "=", "had"]
# ::lemmas ["oop", "have", "=", "have"]
(c10-1 / equal-01
       :ARG1 (c10-0 / have-03
                    :ARG2-of c10-1)
       :mod (c10-2 / oops
                   :mode expressive))

# ::snt yes, sir! Don't waste taxpayers money on a trial.
# ::tokens ["yes", ",", "sir", "!", "Do", "n't", "waste", "taxpayers", "money", "on", "a", "trial", "."]
# ::lemmas ["yes", ",", "sir", "!", "do", "not", "waste", "taxpayer", "money", "on", "a", "trial", "."]
(c11-2 / multi-sentence
       :snt1 (c11-0 / yes
                    :mod (c11-6 / sir)
                    :mode expressive)
       :snt2 (c11-1 / waste-01
                    :ARG0 (c11-5 / you)
                    :ARG1 (c11-3 / money
                                 :source (c11-4 / person
                                                :ARG0-of (c11-9 / pay-01
                                                                :ARG1 (c11-8 / tax))))
                    :ARG2 (c11-7 / try-02
                                 :ARG1 c11-5)
                    :polarity -
                    :mode imperative))

# ::snt But they just started covering this news today... I has to watch live at CNN even thou I despise that channel
# ::tokens ["But", "they", "just", "started", "covering", "this", "news", "today", "...", "I", "has", "to", "watch", "live", "at", "CNN", "even", "thou", "I", "despise", "that", "channel"]
# ::lemmas ["but", "they", "just", "start", "cover", "this", "news", "today", "...", "i", "have", "to", "watch", "live", "at", "CNN", "even", "thou", "i", "despise", "that", "channel"]
(c12-3 / multi-sentence
       :snt1 (c12-10 / contrast-01
                     :ARG2 (c12-14 / start-01
                                   :ARG0 (c12-15 / they)
                                   :ARG1 (c12-9 / cover-03
                                                :ARG0 c12-15
                                                :ARG1 (c12-6 / news
                                                             :mod (c12-13 / this)))
                                   :time (c12-7 / today)
                                   :mod (c12-0 / just)))
       :snt2 (c12-4 / obligate-01
                    :ARG1 (c12-5 / i)
                    :ARG2 (c12-1 / watch-01
                                 :ARG0 c12-5
                                 :ARG1 (c12-8 / publication
                                              :name (c12-11 / name
                                                            :op1 "CNN"))
                                 :manner (c12-2 / live)
                                 :concession (c12-12 / despise-01
                                                     :ARG0 c12-5
                                                     :ARG1 c12-8))))

# ::snt Police FLASHBANGS for cover during assault to end crisis
# ::tokens ["Police", "FLASHBANGS", "for", "cover", "during", "assault", "to", "end", "crisis"]
# ::lemmas ["police", "flashbang", "for", "cover", "during", "assault", "to", "end", "crisis"]
(c13-0 / flashbag-00
       :ARG0 (c13-2 / police)
       :purpose (c13-4 / cover-01
                       :ARG0 c13-2)
       :time (c13-5 / assault-01)
       :purpose (c13-1 / end-01
                       :ARG0 c13-2
                       :ARG1 (c13-3 / crisis)))

# ::snt condolences to the families of the dead and wounded
# ::tokens ["condolences", "to", "the", "families", "of", "the", "dead", "and", "wounded"]
# ::lemmas ["condolence", "to", "the", "family", "of", "the", "dead", "and", "wound"]
(c14-4 / condolence
       :beneficiary (c14-1 / family
                           :poss (c14-6 / and
                                        :op1 (c14-2 / person
                                                    :ARG1-of (c14-3 / die-01))
                                        :op2 (c14-5 / person
                                                    :ARG1-of (c14-0 / wound-01)))))

# ::snt has best coverage
# ::tokens ["has", "best", "coverage"]
# ::lemmas ["have", "good", "coverage"]
(c15-2 / cover-03
       :ARG1-of (c15-0 / have-degree-91
                       :ARG2 (c15-3 / good-02
                                    :ARG1 c15-2)
                       :ARG3 (c15-1 / most)))

# ::snt MT : Gunfire, explosions heard at print plant where the suspects are holed up with hostage.
# ::tokens ["MT", ":", "Gunfire", ",", "explosions", "heard", "at", "print", "plant", "where", "the", "suspects", "are", "holed", "up", "with", "hostage", "."]
# ::lemmas ["MT", ":", "Gunfire", ",", "explosion", "hear", "at", "print", "plant", "where", "the", "suspect", "be", "hole", "up", "with", "hostage", "."]
(c16-9 / say-01
       :ARG0 (c16-7 / person
                    :name (c16-5 / name
                                 :op1 "MT"))
       :ARG1 (c16-0 / hear-01
                    :ARG1 (c16-12 / and
                                  :op1 (c16-8 / gunfire)
                                  :op2 (c16-3 / explode-01))
                    :location (c16-11 / plant
                                      :mod (c16-2 / print)
                                      :location-of (c16-1 / hole-up-01
                                                          :ARG1 (c16-10 / person
                                                                        :ARG2-of (c16-4 / suspect-01))
                                                          :ARG2 (c16-6 / hostage)))))

# ::snt Prayers for the hostages and officers..
# ::tokens ["Prayers", "for", "the", "hostages", "and", "officers", ".."]
# ::lemmas ["prayer", "for", "the", "hostage", "and", "officer", ".."]
(c17-2 / pray-01
       :beneficiary (c17-3 / and
                           :op1 (c17-0 / hostage)
                           :op2 (c17-4 / person
                                       :ARG0-of (c17-5 / have-org-role-91
                                                       :ARG2 (c17-1 / officer)))))

# ::snt No heaven them if assaulted by women with bacon wrapped ice picks.
# ::tokens ["No", "heaven", "them", "if", "assaulted", "by", "women", "with", "bacon", "wrapped", "ice", "picks", "."]
# ::lemmas ["no", "heaven", "they", "if", "assault", "by", "woman", "with", "bacon", "wrap", "ice", "pick", "."]
(c18-0 / heaven
       :domain (c18-7 / they)
       :condition (c18-6 / assault-01
                         :ARG0 (c18-1 / woman
                                      :ARG0-of (c18-8 / have-03
                                                      :ARG1 (c18-5 / pick
                                                                   :consist-of (c18-3 / ice)
                                                                   :ARG1-of (c18-4 / wrap-01
                                                                                   :ARG2 (c18-2 / bacon)))))
                         :ARG1 c18-7)
       :polarity -)

# ::snt Now that you're giving us news direct from France I'm back I was watching news at . before even thou I despise them.
# ::tokens ["Now", "that", "you", "'re", "giving", "us", "news", "direct", "from", "France", "I", "'m", "back", "I", "was", "watching", "news", "at", ".", "before", "even", "thou", "I", "despise", "them", "."]
# ::lemmas ["now", "that", "you", "be", "give", "we", "news", "direct", "from", "France", "i", "be", "back", "i", "be", "watch", "news", "at", ".", "before", "even", "thou", "i", "despise", "they", "."]
(c19-16 / and
        :op1 (c19-3 / be-located-at-91
                    :ARG1 (c19-5 / i)
                    :ARG2 (c19-11 / back)
                    :time (c19-7 / now
                                 :time-of (c19-12 / give-01
                                                  :ARG0 (c19-0 / you)
                                                  :ARG1 (c19-8 / news)
                                                  :ARG2 (c19-1 / we)
                                                  :ARG1-of (c19-10 / direct-02)
                                                  :source (c19-13 / country
                                                                  :name (c19-9 / name
                                                                               :op1 "France")))))
        :op2 (c19-6 / watch-01
                    :ARG0 c19-5
                    :ARG1 (c19-14 / news)
                    :time (c19-15 / before
                                  :op1 (c19-2 / despise-01
                                              :ARG0 c19-5
                                              :ARG1 c19-14
                                              :mod (c19-4 / even)))))

# ::snt don't equate these demons with animals.
# ::tokens ["do", "n't", "equate", "these", "demons", "with", "animals", "."]
# ::lemmas ["do", "not", "equate", "these", "demon", "with", "animal", "."]
(c20-1 / equate-01
       :ARG0 (c20-0 / you)
       :ARG1 (c20-2 / demon
                    :mod (c20-3 / this))
       :ARG2 (c20-4 / animal)
       :polarity -
       :mode imperative)
