# ::snt Fuck 'em
# ::tokens ["Fuck", "'em"]
# ::lemmas ["fuck", "'em"]
(c1-0 / fuck-01
      :ARG1 (c1-1 / they))

# ::snt brilliantly said
# ::tokens ["brilliantly", "said"]
# ::lemmas ["brilliantly", "say"]
(c2-0 / say-01
      :manner (c2-1 / brilliant-01))

# ::snt When our law-abiding Muslim community come out so quickly to condemn it, there's a fair chance they aren't responsible.
# ::tokens ["When", "our", "law", "-", "abiding", "Muslim", "community", "come", "out", "so", "quickly", "to", "condemn", "it", ",", "there", "'s", "a", "fair", "chance", "they", "are", "n't", "responsible", "."]
# ::lemmas ["when", "our", "law", "-", "abide", "Muslim", "community", "come", "out", "so", "quickly", "to", "condemn", "it", ",", "there", "be", "a", "fair", "chance", "they", "be", "not", "responsible", "."]
(c3-9 / chance-02
      :ARG1 (c3-8 / responsible-01
                  :ARG0 (c3-7 / community
                              :mod (c3-5 / religious-group
                                         :name (c3-6 / name
                                                     :op1 "Islam"))
                              :ARG0-of (c3-12 / abide-01
                                              :ARG1 (c3-1 / law))
                              :poss (c3-0 / we))
                  :polarity -)
      :ARG2 (c3-2 / fair-01)
      :time (c3-10 / come-out-09
                   :ARG1 c3-7
                   :purpose (c3-13 / condemn-01
                                   :ARG0 c3-7
                                   :ARG1 (c3-4 / it))
                   :ARG1-of (c3-3 / quick-02
                                  :degree (c3-11 / so))))

# ::snt Australian, Lebanese, Muslim community leader on national tv now denouncing the act publicly. Just FYI.
# ::tokens ["Australian", ",", "Lebanese", ",", "Muslim", "community", "leader", "on", "national", "tv", "now", "denouncing", "the", "act", "publicly", ".", "Just", "FYI", "."]
# ::lemmas ["Australian", ",", "Lebanese", ",", "Muslim", "community", "leader", "on", "national", "tv", "now", "denounce", "the", "act", "publicly", ".", "just", "FYI", "."]
(c4-1 / multi-sentence
      :snt1 (c4-5 / denounce-01
                  :ARG0 (c4-8 / and
                              :op1 (c4-4 / person
                                         :mod (c4-19 / country
                                                     :name (c4-11 / name
                                                                  :op1 "Australia")))
                              :op2 (c4-7 / person
                                         :mod (c4-6 / country
                                                    :name (c4-18 / name
                                                                 :op1 "Lebanon")))
                              :op3 (c4-10 / person
                                          :mod (c4-16 / community
                                                      :mod (c4-12 / religious-group
                                                                  :name (c4-2 / name
                                                                              :op1 "Islam")))))
                  :ARG1 (c4-14 / act)
                  :ARG1-of (c4-13 / public-02)
                  :time (c4-3 / now)
                  :medium (c4-20 / television
                                 :mod (c4-21 / nation)))
      :snt2 (c4-9 / have-purpose-91
                  :ARG2 (c4-15 / inform-01
                               :ARG1 (c4-17 / you))
                  :mod (c4-0 / just)))

# ::snt thank you
# ::tokens ["thank", "you"]
# ::lemmas ["thank", "you"]
(c5-1 / thank-01
      :ARG0 (c5-2 / i)
      :ARG1 (c5-0 / you))

# ::snt thank you
# ::tokens ["thank", "you"]
# ::lemmas ["thank", "you"]
(c6-1 / thank-01
      :ARG0 (c6-2 / i)
      :ARG1 (c6-0 / you))

# ::snt Especially sad in light of the numerous marches and protests they regularly hold to denounce this madness. Oh, wait . . . . .
# ::tokens ["Especially", "sad", "in", "light", "of", "the", "numerous", "marches", "and", "protests", "they", "regularly", "hold", "to", "denounce", "this", "madness", ".", "Oh", ",", "wait", ".", ".", ".", ".", "."]
# ::lemmas ["especially", "sad", "in", "light", "of", "the", "numerous", "marche", "and", "protest", "they", "regularly", "hold", "to", "denounce", "this", "madness", ".", "oh", ",", "wait", ".", ".", ".", ".", "."]
(c7-4 / multi-sentence
      :snt1 (c7-14 / sad-02
                   :mod (c7-6 / especially)
                   :ARG1-of (c7-10 / cause-01
                                   :ARG0 (c7-0 / hold-04
                                               :ARG0 (c7-15 / they)
                                               :ARG1 (c7-16 / and
                                                            :op1 (c7-8 / march-01)
                                                            :op2 (c7-9 / protest-01)
                                                            :quant (c7-7 / numerous))
                                               :ARG1-of (c7-11 / regular-02)
                                               :purpose (c7-12 / denounce-01
                                                               :ARG0 c7-15
                                                               :ARG1 (c7-3 / madness
                                                                           :mod (c7-13 / this))))))
      :snt2 (c7-1 / wait-01
                  :ARG1 (c7-2 / you)
                  :mod (c7-5 / oh
                             :mode expressive)
                  :mode imperative))

# ::snt Thank you for this.
# ::tokens ["Thank", "you", "for", "this", "."]
# ::lemmas ["thank", "you", "for", "this", "."]
(c8-1 / thank-01
      :ARG0 (c8-2 / i)
      :ARG1 (c8-0 / you)
      :ARG2 (c8-3 / this))

# ::snt You need more than a witty metaphor to be right. But good luck with your paranoia and your teeth.
# ::tokens ["You", "need", "more", "than", "a", "witty", "metaphor", "to", "be", "right", ".", "But", "good", "luck", "with", "your", "paranoia", "and", "your", "teeth", "."]
# ::lemmas ["you", "need", "more", "than", "a", "witty", "metaphor", "to", "be", "right", ".", "but", "good", "luck", "with", "your", "paranoia", "and", "your", "tooth", "."]
(c9-3 / multi-sentence
      :snt1 (c9-5 / need-01
                  :ARG0 (c9-0 / you)
                  :ARG1 (c9-6 / more-than
                              :op1 (c9-2 / metaphor
                                         :mod (c9-1 / witty)))
                  :purpose (c9-7 / right-06
                                 :ARG1 c9-0))
      :snt2 (c9-8 / contrast-01
                  :ARG2 (c9-4 / luck
                              :ARG1-of (c9-9 / good-02)
                              :topic (c9-13 / and
                                            :op1 (c9-10 / paranoia
                                                        :poss (c9-11 / you
                                                                     :part (c9-12 / tooth
                                                                                  :op2-of c9-13)))))))

# ::snt Well said.
# ::tokens ["Well", "said", "."]
# ::lemmas ["well", "say", "."]
(c10-0 / say-01
       :manner (c10-1 / good-02))

# ::snt Congrats on your tweet!
# ::tokens ["Congrats", "on", "your", "tweet", "!"]
# ::lemmas ["congrat", "on", "your", "tweet", "!"]
(c11-2 / congratulate-01
       :ARG1 (c11-1 / you)
       :ARG2 (c11-0 / tweet-01
                    :ARG0 c11-1))

# ::snt What marches and protests?
# ::tokens ["What", "marches", "and", "protests", "?"]
# ::lemmas ["what", "march", "and", "protest", "?"]
(c12-3 / and
       :op1 (c12-1 / march-01)
       :op2 (c12-0 / protest-01)
       :mod (c12-2 / amr-unknown))

# ::snt thank you!
# ::tokens ["thank", "you", "!"]
# ::lemmas ["thank", "you", "!"]
(c13-1 / thank-01
       :ARG1 (c13-0 / you)
       :mode expressive)

# ::snt No, it is another example that this religion is a poison to the whole world.
# ::tokens ["No", ",", "it", "is", "another", "example", "that", "this", "religion", "is", "a", "poison", "to", "the", "whole", "world", "."]
# ::lemmas ["no", ",", "it", "be", "another", "example", "that", "this", "religion", "be", "a", "poison", "to", "the", "whole", "world", "."]
(c14-1 / exemplify-01
       :ARG0 (c14-2 / it)
       :ARG1 (c14-5 / poison-01
                    :ARG0 (c14-6 / religion
                                 :mod (c14-7 / this))
                    :ARG1 (c14-0 / world
                                 :mod (c14-3 / whole)))
       :mod (c14-8 / another)
       :mod (c14-4 / no))

# ::snt Adam is that what happened or is are the individuals in Martin place representative of Muslim Community. we want proof.
# ::tokens ["Adam", "is", "that", "what", "happened", "or", "is", "are", "the", "individuals", "in", "Martin", "place", "representative", "of", "Muslim", "Community", ".", "we", "want", "proof", "."]
# ::lemmas ["Adam", "be", "that", "what", "happen", "or", "be", "be", "the", "individual", "in", "Martin", "place", "representative", "of", "Muslim", "Community", ".", "we", "want", "proof", "."]
(c15-1 / multi-sentence
       :snt1 (c15-8 / person
                    :name (c15-6 / name
                                 :op1 "Adam")
                    :domain (c15-14 / amr-choice
                                    :op1 (c15-9 / represent-01
                                                :ARG0 (c15-4 / individual
                                                             :location (c15-13 / place
                                                                               :name (c15-7 / name
                                                                                            :op1 "Martin")))
                                                :ARG1 (c15-10 / community
                                                              :mod (c15-5 / religious-group
                                                                          :name (c15-11 / name
                                                                                        :op1 "Muslim"))))
                                    :op2 (c15-3 / represent-01
                                                :ARG0 c15-4
                                                :ARG1 c15-10)))
       :snt2 (c15-0 / want-01
                    :ARG0 (c15-12 / we)
                    :ARG1 (c15-2 / prove-01)))

# ::snt Is that still called a "Cover Your Ass moment" like we call it in the States? That toothpaste left the tube a long time ago.
# ::tokens ["Is", "that", "still", "called", "a", "\"", "Cover", "Your", "Ass", "moment", "\"", "like", "we", "call", "it", "in", "the", "States", "?", "That", "toothpaste", "left", "the", "tube", "a", "long", "time", "ago", "."]
# ::lemmas ["be", "that", "still", "call", "a", "\"", "Cover", "Your", "Ass", "moment", "\"", "like", "we", "call", "it", "in", "the", "States", "?", "that", "toothpaste", "leave", "the", "tube", "a", "long", "time", "ago", "."]
(c16-0 / multi-sentence
       :snt1 (c16-19 / call-01
                     :polarity (c16-3 / amr-unknown)
                     :ARG1 (c16-21 / that)
                     :ARG2 (c16-7 / moment
                                  :mod (c16-1 / cover-01
                                              :ARG1 (c16-10 / ass
                                                            :part-of (c16-15 / you)))
                                  :ARG1-of (c16-8 / resemble-01
                                                  :ARG2 (c16-13 / call-01
                                                                :ARG0 (c16-9 / we)
                                                                :ARG1 c16-7
                                                                :location (c16-14 / country
                                                                                  :name (c16-6 / name
                                                                                               :op1 "United"
                                                                                               :op2 "States")))))
                     :mod (c16-2 / still))
       :snt2 (c16-4 / leave-11
                    :ARG0 (c16-20 / toothpaste
                                  :mod (c16-11 / that))
                    :ARG1 (c16-16 / tube)
                    :time (c16-5 / before
                                 :op1 (c16-18 / now)
                                 :quant (c16-17 / time
                                                :ARG1-of (c16-12 / long-03)))))
