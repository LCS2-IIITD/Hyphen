# ::snt do you know how bad shooting an unarmed child is ? I mean do you really ?
# ::tokens ["do", "you", "know", "how", "bad", "shooting", "an", "unarmed", "child", "is", "?", "I", "mean", "do", "you", "really", "?"]
# ::lemmas ["do", "you", "know", "how", "bad", "shoot", "an", "unarmed", "child", "be", "?", "i", "mean", "do", "you", "really", "?"]
(c1-1 / multi-sentence
      :snt1 (c1-5 / know-01
                  :ARG0 (c1-0 / you)
                  :ARG1 (c1-12 / thing
                               :degree-of (c1-2 / bad-07
                                                :ARG1 (c1-11 / shoot-02
                                                             :ARG1 (c1-9 / child
                                                                         :ARG1-of (c1-13 / arm-01
                                                                                         :polarity -)))))
                  :polarity (c1-3 / amr-unknown))
      :snt2 (c1-7 / mean-01
                  :ARG0 (c1-4 / i)
                  :ARG2 (c1-8 / real-04
                              :polarity (c1-6 / amr-unknown)
                              :ARG1 (c1-10 / you))))

# ::snt perhaps you will find a receipt for skittles and cough syrup in the evidence file.
# ::tokens ["perhaps", "you", "will", "find", "a", "receipt", "for", "skittles", "and", "cough", "syrup", "in", "the", "evidence", "file", "."]
# ::lemmas ["perhaps", "you", "will", "find", "a", "receipt", "for", "skittle", "and", "cough", "syrup", "in", "the", "evidence", "file", "."]
(c2-4 / possible-01
      :ARG1 (c2-1 / find-01
                  :ARG0 (c2-0 / you)
                  :ARG1 (c2-5 / receipt
                              :topic (c2-8 / and
                                           :op1 (c2-7 / skittle)
                                           :op2 (c2-6 / cough-)))
                  :location (c2-3 / file
                                  :mod (c2-2 / evidence-01))))

# ::snt . filed a new suit to obtain public records from the Ferguson police dept.
# ::tokens [".", "filed", "a", "new", "suit", "to", "obtain", "public", "records", "from", "the", "Ferguson", "police", "dept", "."]
# ::lemmas [".", "file", "a", "new", "suit", "to", "obtain", "public", "record", "from", "the", "Ferguson", "police", "dept", "."]
(c3-0 / file-01
      :ARG1 (c3-8 / sue-02
                  :ARG2 (c3-1 / obtain-01
                              :ARG1 (c3-5 / record-01
                                          :ARG1-of (c3-4 / public-02))
                              :ARG2 (c3-6 / department
                                          :part-of (c3-9 / police)
                                          :location (c3-7 / city
                                                          :name (c3-2 / name
                                                                      :op1 "Ferguson"))))
                  :ARG1-of (c3-3 / new-01)))

# ::snt chief said cop didn't know about robbery so why is everyone focusing on the robbery and not the murder
# ::tokens ["chief", "said", "cop", "did", "n't", "know", "about", "robbery", "so", "why", "is", "everyone", "focusing", "on", "the", "robbery", "and", "not", "the", "murder"]
# ::lemmas ["chief", "say", "cop", "do", "not", "know", "about", "robbery", "so", "why", "be", "everyone", "focus", "on", "the", "robbery", "and", "not", "the", "murder"]
(c4-9 / say-01
      :ARG0 (c4-7 / chief)
      :ARG1 (c4-10 / know-01
                   :ARG0 (c4-6 / cop)
                   :ARG1 (c4-5 / rob-01)
                   :ARG0-of (c4-8 / cause-01
                                  :ARG1 (c4-0 / focus-01
                                              :ARG1 (c4-2 / everyone)
                                              :ARG2 (c4-11 / and
                                                           :op1 (c4-4 / rob-01)
                                                           :op2 (c4-1 / murder-01))
                                              :ARG1-of (c4-12 / cause-01
                                                              :ARG0 (c4-3 / amr-unknown))))
                   :polarity -))

# ::snt about time aclu . Cause if you're not gay , muslim or black . You won't do anything for them .
# ::tokens ["about", "time", "aclu", ".", "Cause", "if", "you", "'re", "not", "gay", ",", "muslim", "or", "black", ".", "You", "wo", "n't", "do", "anything", "for", "them", "."]
# ::lemmas ["about", "time", "aclu", ".", "cause", "if", "you", "be", "not", "gay", ",", "muslim", "or", "black", ".", "you", "will", "not", "do", "anything", "for", "they", "."]
(c5-1 / multi-sentence
      :snt1 (c5-12 / about
                   :op1 (c5-11 / time))
      :snt2 (c5-7 / cause-01
                  :ARG0 (c5-6 / do-02
                              :ARG0 (c5-0 / you)
                              :ARG1 (c5-4 / anything)
                              :ARG2 (c5-10 / they)
                              :condition (c5-3 / or
                                               :op1 (c5-8 / gay-01
                                                          :ARG1 c5-0)
                                               :op2 (c5-9 / religious-group
                                                          :name (c5-5 / name
                                                                      :op1 "Islam"))
                                               :op3 (c5-2 / black-05
                                                          :ARG1 c5-0)
                                               :polarity -)
                              :polarity -)))

# ::snt Thank u, tho I fear what you'll get in return. Brown was a werewolf?
# ::tokens ["Thank", "u", ",", "tho", "I", "fear", "what", "you", "'ll", "get", "in", "return", ".", "Brown", "was", "a", "werewolf", "?"]
# ::lemmas ["thank", "u", ",", "tho", "i", "fear", "what", "you", "'ll", "get", "in", "return", ".", "Brown", "be", "a", "werewolf", "?"]
(c7-3 / multi-sentence
      :snt1 (c7-9 / thank-01
                  :ARG0 (c7-4 / i)
                  :ARG1 (c7-0 / you)
                  :concession (c7-2 / fear-01
                                    :ARG0 c7-4
                                    :ARG1 (c7-8 / thing
                                                :ARG1-of (c7-7 / return-02
                                                               :ARG0 c7-0))))
      :snt2 (c7-1 / werewolf
                  :polarity (c7-10 / amr-unknown)
                  :domain (c7-6 / person
                                :name (c7-5 / name
                                            :op1 "Brown"))))

# ::snt VERY glad you are asking questions.
# ::tokens ["VERY", "glad", "you", "are", "asking", "questions", "."]
# ::lemmas ["very", "glad", "you", "be", "ask", "question", "."]
(c8-4 / glad-02
      :ARG0 (c8-5 / ask-01
                  :ARG0 (c8-0 / you)
                  :ARG1 (c8-1 / question-01
                              :ARG0 c8-0))
      :ARG1 (c8-2 / i)
      :degree (c8-3 / very))

# ::snt btw this is what a vigil for a shot unarmed child perspective man perspective
# ::tokens ["btw", "this", "is", "what", "a", "vigil", "for", "a", "shot", "unarmed", "child", "perspective", "man", "perspective"]
# ::lemmas ["btw", "this", "be", "what", "a", "vigil", "for", "a", "shot", "unarmed", "child", "perspective", "man", "perspective"]
(c10-2 / vigil
       :beneficiary (c10-3 / perspective
                           :mod (c10-0 / man)
                           :ARG1-of (c10-7 / arm-01
                                           :polarity -)
                           :mod (c10-4 / child)
                           :ARG1-of (c10-5 / shoot-02))
       :domain (c10-6 / this)
       :mod (c10-1 / by-the-way))

# ::snt Yes, please help get to the bottom of this mess.
# ::tokens ["Yes", ",", "please", "help", "get", "to", "the", "bottom", "of", "this", "mess", "."]
# ::lemmas ["yes", ",", "please", "help", "get", "to", "the", "bottom", "of", "this", "mess", "."]
(c11-0 / help-01
       :ARG0 (c11-1 / you)
       :ARG1 (c11-4 / get-05
                    :ARG2 (c11-3 / bottom
                                 :poss (c11-2 / mess
                                              :mod (c11-5 / this))))
       :mode imperative
       :polite +)

# ::snt Shouldn't The St. Louis County Police be named as well?
# ::tokens ["Should", "n't", "The", "St.", "Louis", "County", "Police", "be", "named", "as", "well", "?"]
# ::lemmas ["should", "not", "The", "St.", "Louis", "County", "Police", "be", "name", "as", "well", "?"]
(c12-4 / recommend-01
       :ARG1 (c12-1 / name-01
                    :ARG1 (c12-3 / police
                                 :mod (c12-5 / county
                                             :name (c12-2 / name
                                                          :op1 "St."
                                                          :op2 "Louis")))
                    :mod (c12-6 / as-well))
       :polarity (c12-0 / amr-unknown)
       :polarity -)

# ::snt ? Stop capitulating. Stop doing what they want you to do. They want us divided!
# ::tokens ["?", "Stop", "capitulating", ".", "Stop", "doing", "what", "they", "want", "you", "to", "do", ".", "They", "want", "us", "divided", "!"]
# ::lemmas ["?", "stop", "capitulate", ".", "stop", "do", "what", "they", "want", "you", "to", "do", ".", "they", "want", "we", "divide", "!"]
(c13-3 / multi-sentence
       :snt1 (c13-12 / stop-01
                     :polarity (c13-15 / amr-unknown)
                     :ARG0 (c13-0 / you)
                     :ARG1 (c13-10 / capitulate-01
                                   :ARG0 c13-0)
                     :mode imperative)
       :snt2 (c13-6 / stop-01
                    :ARG0 (c13-11 / you)
                    :ARG1 (c13-9 / do-02
                                 :ARG0 c13-11
                                 :ARG1 (c13-14 / thing
                                               :ARG1-of (c13-1 / do-02
                                                               :ARG0 (c13-13 / they)
                                                               :ARG1-of (c13-2 / want-01
                                                                               :ARG0 (c13-4 / you)))))
                    :mode imperative)
       :snt3 (c13-7 / want-01
                    :ARG0 (c13-8 / they)
                    :ARG1 (c13-16 / divide-02
                                  :ARG1 (c13-5 / we))))

# ::snt Great.
# ::tokens ["Great", "."]
# ::lemmas ["great", "."]
(c14-0 / great)

# ::snt Murder?? So you were an eyewitness??
# ::tokens ["Murder", "?", "?", "So", "you", "were", "an", "eyewitness", "?", "?"]
# ::lemmas ["murder", "?", "?", "so", "you", "be", "an", "eyewitness", "?", "?"]
(c15-2 / eyewitness
       :polarity (c15-4 / amr-unknown)
       :domain (c15-0 / you)
       :ARG1-of (c15-3 / cause-01
                       :ARG0 (c15-1 / murder-01)))

# ::snt do you know all the facts? I mean do you really?
# ::tokens ["do", "you", "know", "all", "the", "facts", "?", "I", "mean", "do", "you", "really", "?"]
# ::lemmas ["do", "you", "know", "all", "the", "fact", "?", "i", "mean", "do", "you", "really", "?"]
(c16-2 / multi-sentence
       :snt1 (c16-9 / know-01
                    :ARG0 (c16-0 / you)
                    :ARG1 (c16-1 / fact
                                 :mod (c16-10 / all))
                    :polarity (c16-3 / amr-unknown))
       :snt2 (c16-6 / mean-01
                    :ARG0 (c16-4 / i)
                    :ARG2 (c16-7 / real-04
                                 :polarity (c16-5 / amr-unknown)
                                 :ARG1 (c16-8 / you))))

# ::snt prove it, the cop luckily didnt have a dash cam and apparently no one credible saw it.
# ::tokens ["prove", "it", ",", "the", "cop", "luckily", "did", "nt", "have", "a", "dash", "cam", "and", "apparently", "no", "one", "credible", "saw", "it", "."]
# ::lemmas ["prove", "it", ",", "the", "cop", "luckily", "do", "not", "have", "a", "dash", "cam", "and", "apparently", "no", "one", "credible", "see", "it", "."]
(c17-5 / prove-01
       :ARG1 (c17-11 / and
                     :op1 (c17-0 / have-03
                                 :ARG0 (c17-7 / cop)
                                 :ARG1 (c17-6 / camera
                                              :mod (c17-8 / dash))
                                 :manner (c17-1 / lucky)
                                 :polarity -)
                     :op2 (c17-10 / see-01
                                  :ARG0 (c17-4 / no-one
                                               :mod (c17-9 / credible))
                                  :ARG1 (c17-3 / it)
                                  :ARG1-of (c17-2 / appear-02))))

# ::snt - Dispatch Cop involved in shooting never called -11 AUDIO (11:05am- :05pm)
# ::tokens ["-", "Dispatch", "Cop", "involved", "in", "shooting", "never", "called", "-11", "AUDIO", "(", "11:05am-", ":", "05pm", ")"]
# ::lemmas ["-", "Dispatch", "Cop", "involve", "in", "shoot", "never", "call", "-11", "AUDIO", "(", "11:05am-", ":", "05pm", ")"]
(c18-6 / call-02
       :ARG0 (c18-5 / cop
                    :ARG0-of (c18-4 / dispatch-01)
                    :ARG1-of (c18-2 / involve-01
                                    :ARG2 (c18-7 / shoot-02)))
       :time (c18-1 / ever)
       :mod (c18-8 / audio)
       :time (c18-0 / date-interval
                    :op1 (c18-9 / date-entity
                                :time "11:05")
                    :op2 (c18-3 / date-entity
                                :time "17:05"))
       :polarity -)

# ::snt Hope City Clerk Megan has good back up. The work load is gonna be worth battle pay when this is all over.
# ::tokens ["Hope", "City", "Clerk", "Megan", "has", "good", "back", "up", ".", "The", "work", "load", "is", "gon", "na", "be", "worth", "battle", "pay", "when", "this", "is", "all", "over", "."]
# ::lemmas ["Hope", "City", "Clerk", "Megan", "have", "good", "back", "up", ".", "the", "work", "load", "be", "going", "to", "be", "worth", "battle", "pay", "when", "this", "be", "all", "over", "."]
(c19-0 / multi-sentence
       :snt1 (c19-8 / hope-01
                    :ARG0 (c19-14 / i)
                    :ARG1 (c19-7 / have-03
                                 :ARG0 (c19-3 / person
                                              :name (c19-11 / name
                                                            :op1 "Megan")
                                              :ARG0-of (c19-2 / have-org-role-91
                                                              :ARG1 (c19-17 / city)
                                                              :ARG2 (c19-4 / clerk)))
                                 :ARG1 (c19-10 / back-up-04
                                               :ARG1-of (c19-12 / good-02))))
       :snt2 (c19-13 / worth-02
                     :ARG1 (c19-9 / load
                                  :mod (c19-1 / work-01))
                     :ARG2 (c19-5 / pay-01
                                  :mod (c19-15 / battle-01))
                     :time (c19-16 / over-01
                                   :ARG1 (c19-18 / this)
                                   :degree (c19-6 / all))))

# ::snt THANK YOU
# ::tokens ["THANK", "YOU"]
# ::lemmas ["thank", "you"]
(c21-1 / thank-01
       :ARG0 (c21-2 / i)
       :ARG1 (c21-0 / you))

# ::snt Not very public if you have to file a suit to obtain them...
# ::tokens ["Not", "very", "public", "if", "you", "have", "to", "file", "a", "suit", "to", "obtain", "them", "..."]
# ::lemmas ["not", "very", "public", "if", "you", "have", "to", "file", "a", "suit", "to", "obtain", "they", "..."]
(c22-5 / public-02
       :degree (c22-4 / very)
       :condition (c22-3 / obligate-01
                         :ARG1 (c22-0 / you)
                         :ARG2 (c22-1 / file-01
                                      :ARG0 c22-0
                                      :ARG1 (c22-6 / sue-02
                                                   :ARG0 c22-0)
                                      :purpose (c22-2 / obtain-01
                                                      :ARG0 c22-0
                                                      :ARG1 (c22-7 / they))))
       :polarity -)

# ::snt I see this brought you out of retirement huh??
# ::tokens ["I", "see", "this", "brought", "you", "out", "of", "retirement", "huh", "?", "?"]
# ::lemmas ["i", "see", "this", "bring", "you", "out", "of", "retirement", "huh", "?", "?"]
(c23-6 / see-01
       :ARG0 (c23-3 / i)
       :ARG1 (c23-1 / bring-01
                    :ARG0 (c23-7 / this)
                    :ARG1 (c23-0 / you)
                    :ARG2 (c23-2 / out-06
                                 :ARG1 c23-0
                                 :ARG2 (c23-5 / retire-01
                                              :ARG0 c23-0)))
       :ARG1-of (c23-4 / request-confirmation-91))

# ::snt lol!
# ::tokens ["lol", "!"]
# ::lemmas ["lol", "!"]
(c24-0 / laugh-01
       :ARG0 (c24-1 / i)
       :manner (c24-2 / loud)
       :mode expressive)

# ::snt thank you
# ::tokens ["thank", "you"]
# ::lemmas ["thank", "you"]
(c25-1 / thank-01
       :ARG0 (c25-2 / i)
       :ARG1 (c25-0 / you))

# ::snt this hasn't made the national news? This was actually a child. A year old baby. That pisses me off
# ::tokens ["this", "has", "n't", "made", "the", "national", "news", "?", "This", "was", "actually", "a", "child", ".", "A", "year", "old", "baby", ".", "That", "pisses", "me", "off"]
# ::lemmas ["this", "have", "not", "make", "the", "national", "news", "?", "this", "be", "actually", "a", "child", ".", "a", "year", "old", "baby", ".", "that", "piss", "i", "off"]
(c26-1 / multi-sentence
       :snt1 (c26-8 / make-18
                    :ARG0 (c26-13 / this)
                    :ARG1 (c26-7 / news
                                 :mod (c26-6 / nation))
                    :polarity (c26-14 / amr-unknown)
                    :polarity -)
       :snt2 (c26-10 / child
                     :domain (c26-12 / this)
                     :ARG1-of (c26-4 / actual-02))
       :snt3 (c26-2 / baby
                    :age (c26-9 / temporal-quantity
                                :unit (c26-0 / year)
                                :quant 1))
       :snt4 (c26-11 / piss-off-02
                     :ARG0 (c26-3 / that)
                     :ARG1 (c26-5 / i)))

# ::snt Don't think that can not happens to you when you stand nothing you fall everything
# ::tokens ["Do", "n't", "think", "that", "can", "not", "happens", "to", "you", "when", "you", "stand", "nothing", "you", "fall", "everything"]
# ::lemmas ["do", "not", "think", "that", "can", "not", "happen", "to", "you", "when", "you", "stand", "nothing", "you", "fall", "everything"]
(c27-7 / think-01
       :ARG0 (c27-0 / you)
       :ARG1 (c27-5 / possible-01
                    :ARG1 (c27-3 / event
                                 :mod c27-0
                                 :time (c27-6 / stand-11
                                              :ARG0 c27-0
                                              :ARG1 (c27-4 / nothing))
                                 :ARG1-of (c27-1 / fall-01
                                                 :ARG4 (c27-2 / everything)))
                    :polarity -)
       :polarity -)

# ::snt And when you get them and it shows the kid was killed because he attacked the officer are you going to report that?
# ::tokens ["And", "when", "you", "get", "them", "and", "it", "shows", "the", "kid", "was", "killed", "because", "he", "attacked", "the", "officer", "are", "you", "going", "to", "report", "that", "?"]
# ::lemmas ["and", "when", "you", "get", "they", "and", "it", "show", "the", "kid", "be", "kill", "because", "he", "attack", "the", "officer", "be", "you", "go", "to", "report", "that", "?"]
(c28-6 / report-01
       :polarity (c28-12 / amr-unknown)
       :ARG0 (c28-0 / you)
       :ARG1 (c28-11 / that)
       :condition (c28-3 / and
                         :op1 (c28-8 / get-01
                                     :ARG0 c28-0
                                     :ARG1 (c28-9 / they))
                         :op2 (c28-10 / show-01
                                      :ARG0 c28-9
                                      :ARG1 (c28-4 / kill-01
                                                   :ARG1 (c28-2 / kid)
                                                   :ARG1-of (c28-7 / cause-01
                                                                   :ARG0 (c28-5 / attack-01
                                                                                :ARG0 c28-2
                                                                                :ARG1 (c28-1 / officer)))))))

# ::snt how do you expect to obtain records when everything is still under investigation....? They probably won't be released until after.
# ::tokens ["how", "do", "you", "expect", "to", "obtain", "records", "when", "everything", "is", "still", "under", "investigation", "....", "?", "They", "probably", "wo", "n't", "be", "released", "until", "after", "."]
# ::lemmas ["how", "do", "you", "expect", "to", "obtain", "record", "when", "everything", "be", "still", "under", "investigation", "....", "?", "they", "probably", "will", "not", "be", "release", "until", "after", "."]
(c29-1 / multi-sentence
       :snt1 (c29-5 / expect-01
                    :ARG0 (c29-0 / you)
                    :ARG1 (c29-4 / obtain-01
                                 :ARG0 c29-0
                                 :ARG1 (c29-10 / record)
                                 :time (c29-7 / investigate-01
                                              :ARG1 (c29-3 / everything)
                                              :mod (c29-11 / still))
                                 :manner (c29-13 / amr-unknown)))
       :snt2 (c29-9 / probable
                    :domain (c29-8 / release-01
                                   :ARG1 (c29-12 / they)
                                   :time (c29-2 / until
                                                :op1 (c29-6 / after
                                                            :op1 c29-7))
                                   :polarity -)))

# ::snt . . pls explain if there is MOU On ANY youth assault issues profiling witness/victim? ?
# ::tokens [".", ".", "pls", "explain", "if", "there", "is", "MOU", "On", "ANY", "youth", "assault", "issues", "profiling", "witness", "/", "victim", "?", "?"]
# ::lemmas [".", ".", "pls", "explain", "if", "there", "be", "MOU", "on", "ANY", "youth", "assault", "issue", "profile", "witness", "/", "victim", "?", "?"]
(c30-4 / explain-01
       :ARG0 (c30-0 / we)
       :ARG1 (c30-11 / truth-value
                     :polarity-of (c30-2 / meet-03
                                         :ARG0 (c30-6 / issue-02
                                                      :ARG0 (c30-13 / assault-01
                                                                    :ARG1 (c30-1 / youth))
                                                      :mod (c30-5 / any))
                                         :ARG1 (c30-9 / profile-01
                                                      :ARG1 (c30-10 / slash
                                                                    :op1 (c30-12 / person
                                                                                 :ARG0-of (c30-7 / witness-01))
                                                                    :op2 (c30-3 / person
                                                                                :ARG1-of (c30-8 / victimize-01))))))
       :mode imperative
       :polite +)

# ::snt Michael Brown's death &amp; his strong-arm robbery were related. Brown assumed Wilson knew of recent crime.
# ::tokens ["Michael", "Brown", "'s", "death", "&", "amp", ";", "his", "strong", "-", "arm", "robbery", "were", "related", ".", "Brown", "assumed", "Wilson", "knew", "of", "recent", "crime", "."]
# ::lemmas ["Michael", "Brown", "'s", "death", "&", "amp", ";", "his", "strong", "-", "arm", "robbery", "be", "relate", ".", "Brown", "assume", "Wilson", "know", "of", "recent", "crime", "."]
(c31-0 / multi-sentence
       :snt1 (c31-8 / relate-01
                    :ARG1 (c31-4 / rob-01
                                 :ARG0 (c31-7 / person
                                              :name (c31-5 / name
                                                           :op1 "Michael"
                                                           :op2 "Brown"))
                                 :mod (c31-17 / arm
                                              :ARG1-of (c31-13 / strong-02)))
                    :ARG2 (c31-3 / and
                                 :op1 (c31-9 / die-01
                                             :ARG1 c31-7)
                                 :op2 (c31-6 / amp)
                                 :poss c31-7))
       :snt2 (c31-14 / assume-02
                     :ARG0 (c31-16 / person
                                   :name (c31-10 / name
                                                 :op1 "Brown"))
                     :ARG1 (c31-15 / know-01
                                   :ARG0 (c31-1 / person
                                                :name (c31-11 / name
                                                              :op1 "Wilson"))
                                   :ARG1 (c31-12 / crime-02
                                                 :time (c31-2 / recent)))))

# ::snt Just a suggestion,but maybe let law enforcement finish the investigation? Sounds logical to me.
# ::tokens ["Just", "a", "suggestion", ",", "but", "maybe", "let", "law", "enforcement", "finish", "the", "investigation", "?", "Sounds", "logical", "to", "me", "."]
# ::lemmas ["just", "a", "suggestion", ",", "but", "maybe", "let", "law", "enforcement", "finish", "the", "investigation", "?", "sound", "logical", "to", "i", "."]
(c33-3 / multi-sentence
       :snt1 (c33-9 / contrast-01
                    :ARG1 (c33-13 / thing
                                  :ARG1-of (c33-12 / suggest-01)
                                  :mod (c33-0 / just))
                    :ARG2 (c33-2 / let-01
                                 :ARG1 (c33-4 / finish-01
                                              :ARG0 (c33-8 / person
                                                           :ARG0-of (c33-5 / enforce-01
                                                                           :ARG1 (c33-11 / law)))
                                              :ARG1 (c33-7 / investigate-01
                                                           :ARG0 c33-8))
                                 :ARG1-of (c33-14 / possible-01)))
       :snt2 (c33-6 / sound-01
                    :ARG1 (c33-1 / logical)
                    :ARG2 (c33-10 / i)))

# ::snt yes, because Michael Brown couldn't possibly have been doing anything wrong...
# ::tokens ["yes", ",", "because", "Michael", "Brown", "could", "n't", "possibly", "have", "been", "doing", "anything", "wrong", "..."]
# ::lemmas ["yes", ",", "because", "Michael", "Brown", "could", "not", "possibly", "have", "be", "do", "anything", "wrong", "..."]
(c34-5 / cause-01
       :ARG0 (c34-3 / possible-01
                    :ARG1 (c34-4 / do-02
                                 :ARG0 (c34-6 / person
                                              :name (c34-2 / name
                                                           :op1 "Michael"
                                                           :op2 "Brown"))
                                 :ARG1 (c34-7 / anything
                                              :ARG1-of (c34-0 / wrong-02)))
                    :polarity -)
       :mod (c34-1 / yes))

# ::snt Am I supposed to just take the word of law enforcement, suprising they had no dash cam or video yes ?
# ::tokens ["Am", "I", "supposed", "to", "just", "take", "the", "word", "of", "law", "enforcement", ",", "suprising", "they", "had", "no", "dash", "cam", "or", "video", "yes", "?"]
# ::lemmas ["be", "i", "suppose", "to", "just", "take", "the", "word", "of", "law", "enforcement", ",", "suprising", "they", "have", "no", "dash", "cam", "or", "video", "yes", "?"]
(c35-12 / suppose-02
        :polarity (c35-14 / amr-unknown)
        :ARG1 (c35-7 / i)
        :ARG2 (c35-13 / take-01
                      :ARG0 c35-7
                      :ARG1 (c35-1 / word
                                   :topic (c35-5 / enforce-01
                                                 :ARG1 (c35-3 / law)))
                      :mod (c35-0 / just))
        :ARG0-of (c35-10 / cause-01
                         :ARG1 (c35-6 / surprise-01
                                      :ARG0 (c35-2 / have-03
                                                   :ARG0 c35-5
                                                   :ARG1 (c35-4 / or
                                                                :op1 (c35-9 / camera
                                                                            :mod (c35-11 / dash))
                                                                :op2 (c35-8 / video))
                                                   :polarity -)
                                      :ARG1 c35-7)))

# ::snt This whole issue of being allowed to completely re-order complaints, omit data and blame the victim... TOO COMMON.
# ::tokens ["This", "whole", "issue", "of", "being", "allowed", "to", "completely", "re", "-", "order", "complaints", ",", "omit", "data", "and", "blame", "the", "victim", "...", "TOO", "COMMON", "."]
# ::lemmas ["this", "whole", "issue", "of", "be", "allow", "to", "completely", "re", "-", "order", "complaint", ",", "omit", "datum", "and", "blame", "the", "victim", "...", "TOO", "COMMON", "."]
(c36-13 / and
        :op1 (c36-4 / issue-02
                    :ARG0 (c36-3 / allow-01
                                 :ARG1 (c36-5 / and
                                              :op1 (c36-7 / reorder-01
                                                          :ARG1 (c36-8 / complain-01)
                                                          :ARG1-of (c36-9 / complete-02))
                                              :op2 (c36-2 / omit-01
                                                          :ARG1 (c36-10 / data))
                                              :op3 (c36-1 / blame-01
                                                          :ARG1 (c36-6 / victim))))
                    :mod (c36-0 / whole)
                    :mod (c36-12 / this))
        :op2 (c36-11 / continue-01
                     :ARG1 c36-5))

# ::snt here in Seattle the cops over step their bounds all the time why would it be any different.
# ::tokens ["here", "in", "Seattle", "the", "cops", "over", "step", "their", "bounds", "all", "the", "time", "why", "would", "it", "be", "any", "different", "."]
# ::lemmas ["here", "in", "Seattle", "the", "cop", "over", "step", "their", "bound", "all", "the", "time", "why", "would", "it", "be", "any", "different", "."]
(c37-8 / cause-01
       :ARG0 (c37-12 / amr-unknown)
       :ARG1 (c37-7 / differ-02
                    :ARG1 (c37-4 / it)
                    :mod (c37-3 / any))
       :condition (c37-2 / overstep-01
                         :ARG0 (c37-9 / cop)
                         :ARG1 (c37-1 / bound-09
                                      :ARG0 c37-9)
                         :location (c37-0 / here
                                          :location (c37-10 / city
                                                            :name (c37-5 / name
                                                                         :op1 "Seattle")))
                         :frequency (c37-11 / time
                                            :mod (c37-6 / all))))

# ::snt Israels real target is not Hamas: It's Palestinian Statehood.
# ::tokens ["Israels", "real", "target", "is", "not", "Hamas", ":", "It", "'s", "Palestinian", "Statehood", "."]
# ::lemmas ["Israels", "real", "target", "be", "not", "Hamas", ":", "it", "be", "Palestinian", "Statehood", "."]
(c38-5 / contrast-01
       :ARG1 (c38-9 / target-01
                    :ARG0 (c38-0 / organization
                                 :name (c38-1 / name
                                              :op1 "Hamas"))
                    :ARG1 (c38-3 / person
                                 :name (c38-2 / name
                                              :op1 "Israel"))
                    :ARG1-of (c38-4 / real-04)
                    :polarity -)
       :ARG2 (c38-8 / target-01
                    :ARG0 c38-3
                    :ARG1 (c38-6 / country
                                 :name (c38-7 / name
                                              :op1 "Palestine"))))

# ::snt Thank you
# ::tokens ["Thank", "you"]
# ::lemmas ["thank", "you"]
(c39-1 / thank-01
       :ARG0 (c39-2 / i)
       :ARG1 (c39-0 / you))

# ::snt GREAT!My guess the Brown killing is of many many illegal acts.Jackson sets bad tone for dept
# ::tokens ["GREAT!My", "guess", "the", "Brown", "killing", "is", "of", "many", "many", "illegal", "acts", ".", "Jackson", "sets", "bad", "tone", "for", "dept"]
# ::lemmas ["GREAT!My", "guess", "the", "Brown", "killing", "be", "of", "many", "many", "illegal", "act", ".", "Jackson", "set", "bad", "tone", "for", "dept"]
(c40-1 / multi-sentence
       :snt1 (c40-9 / great
                    :ARG1-of (c40-7 / guess-01
                                    :ARG0 (c40-3 / i)
                                    :ARG2 (c40-14 / kill-01
                                                  :ARG1 (c40-6 / person
                                                               :name (c40-4 / name
                                                                            :op1 "Brown"))
                                                  :ARG1-of (c40-10 / include-91
                                                                   :ARG2 (c40-16 / act-02
                                                                                 :quant (c40-8 / many)
                                                                                 :ARG1-of (c40-0 / legal-02
                                                                                                 :polarity -)))))
                    :mode expressive)
       :snt2 (c40-12 / set-02
                     :ARG0 (c40-15 / person
                                   :name (c40-5 / name
                                                :op1 "Jackson"))
                     :ARG1 (c40-13 / tone
                                   :ARG1-of (c40-2 / bad-07))
                     :beneficiary (c40-11 / department)))

# ::snt My column: ARREST DARREN WILSON ARREST HIM NOW!!: :
# ::tokens ["My", "column", ":", "ARREST", "DARREN", "WILSON", "ARREST", "HIM", "NOW", "!", "!", ":", ":"]
# ::lemmas ["my", "column", ":", "ARREST", "DARREN", "WILSON", "arrest", "him", "now", "!", "!", ":", ":"]
(c41-6 / say-01
       :ARG0 (c41-5 / column
                    :poss (c41-1 / i))
       :ARG1 (c41-7 / arrest-01
                    :ARG0 (c41-4 / person
                                 :name (c41-2 / name
                                              :op1 "Aaron"
                                              :op2 "DarrEN"
                                              :op3 "Wilson"))
                    :ARG1 (c41-0 / he)
                    :time (c41-3 / now))
       :mode expressive)
