# ::snt I agree that its the character the person, but I can't remember when a bunch of whites ever looted.
# ::tokens ["I", "agree", "that", "its", "the", "character", "the", "person", ",", "but", "I", "ca", "n't", "remember", "when", "a", "bunch", "of", "whites", "ever", "looted", "."]
# ::lemmas ["i", "agree", "that", "its", "the", "character", "the", "person", ",", "but", "i", "can", "not", "remember", "when", "a", "bunch", "of", "white", "ever", "loot", "."]
(c1-7 / contrast-01
      :ARG1 (c1-12 / agree-01
                   :ARG0 (c1-4 / i)
                   :ARG1 (c1-6 / character
                               :domain (c1-8 / it)))
      :ARG2 (c1-5 / possible-01
                  :ARG1 (c1-9 / remember-01
                              :ARG0 c1-4
                              :ARG1 (c1-10 / time
                                           :time-of (c1-1 / loot-01
                                                          :ARG0 (c1-11 / person
                                                                       :ARG1-of (c1-0 / white-02)
                                                                       :quant (c1-2 / bunch))
                                                          :time (c1-3 / ever))))
                  :polarity -))

# ::snt I wonder if Sharpton picked himself up some of those free twinkies and fruit pies?
# ::tokens ["I", "wonder", "if", "Sharpton", "picked", "himself", "up", "some", "of", "those", "free", "twinkies", "and", "fruit", "pies", "?"]
# ::lemmas ["i", "wonder", "if", "Sharpton", "pick", "himself", "up", "some", "of", "those", "free", "twinkie", "and", "fruit", "pie", "?"]
(c2-0 / wonder-01
      :ARG0 (c2-3 / i)
      :ARG1 (c2-11 / truth-value
                   :polarity-of (c2-7 / pick-up-04
                                      :ARG0 (c2-12 / person
                                                   :name (c2-5 / name
                                                               :op1 "Sharpton"))
                                      :ARG1 (c2-10 / some
                                                   :ARG1-of (c2-8 / include-91
                                                                  :ARG2 (c2-13 / and
                                                                               :op1 (c2-9 / twinkle)
                                                                               :op2 (c2-2 / pie
                                                                                          :mod (c2-1 / fruit))
                                                                               :ARG1-of (c2-4 / free-03)
                                                                               :mod (c2-6 / that)))))))

# ::snt Should of used a head shot, gray matter and blood everywhere. Looter meet gun, gun meet looter!
# ::tokens ["Should", "of", "used", "a", "head", "shot", ",", "gray", "matter", "and", "blood", "everywhere", ".", "Looter", "meet", "gun", ",", "gun", "meet", "looter", "!"]
# ::lemmas ["should", "of", "use", "a", "head", "shot", ",", "gray", "matter", "and", "blood", "everywhere", ".", "looter", "meet", "gun", ",", "gun", "meet", "looter", "!"]
(c3-0 / multi-sentence
      :snt1 (c3-14 / recommend-01
                   :ARG1 (c3-16 / use-01
                                :ARG1 (c3-6 / and
                                            :op1 (c3-4 / shot-02
                                                       :ARG1 (c3-7 / head))
                                            :op2 (c3-13 / matter
                                                        :ARG1-of (c3-15 / gray-02))
                                            :op3 (c3-10 / blood)
                                            :location (c3-11 / everywhere))))
      :snt2 (c3-17 / and
                   :op1 (c3-8 / meet-03
                              :ARG0 (c3-2 / person
                                          :ARG0-of (c3-12 / shoot-02))
                              :ARG1 (c3-3 / gun))
                   :op2 (c3-18 / meet-03
                               :ARG0 (c3-1 / gun)
                               :ARG1 (c3-5 / person
                                           :ARG0-of (c3-9 / loot-01)))))

# ::snt Yup.
# ::tokens ["Yup", "."]
# ::lemmas ["yup", "."]
(c4-0 / yup)

# ::snt Gods justice will be swift and harsh for Al Not-So-Sharpton...
# ::tokens ["Gods", "justice", "will", "be", "swift", "and", "harsh", "for", "Al", "Not", "-", "So", "-", "Sharpton", "..."]
# ::lemmas ["god", "justice", "will", "be", "swift", "and", "harsh", "for", "Al", "Not", "-", "So", "-", "Sharpton", "..."]
(c5-0 / justice
      :ARG1-of (c5-5 / swift-02)
      :ARG1-of (c5-1 / harsh-02)
      :beneficiary (c5-3 / person
                         :name (c5-2 / name
                                     :op1 "Al"
                                     :op2 "Not-So-Sharpton")
                         :mod (c5-4 / god
                                    :mode expressive)))

# ::snt . LOL
# ::tokens [".", "LOL"]
# ::lemmas [".", "LOL"]
(c6-0 / laugh-01
      :ARG0 (c6-1 / i)
      :manner (c6-2 / loud)
      :mode expressive)

# ::snt Thx. Amy Black Panther or card carrying red is a piece of shit in my book. Just riling shit up.
# ::tokens ["Thx", ".", "Amy", "Black", "Panther", "or", "card", "carrying", "red", "is", "a", "piece", "of", "shit", "in", "my", "book", ".", "Just", "riling", "shit", "up", "."]
# ::lemmas ["thx", ".", "Amy", "Black", "Panther", "or", "card", "carry", "red", "be", "a", "piece", "of", "shit", "in", "my", "book", ".", "just", "rile", "shit", "up", "."]
(c7-1 / multi-sentence
      :snt1 (c7-8 / piece
                  :consist-of (c7-12 / shit)
                  :domain (c7-3 / or
                                :op1 (c7-13 / person
                                            :name (c7-7 / name
                                                        :op1 "Amy"
                                                        :op2 "Black"
                                                        :op3 "Panther"))
                                :op2 (c7-10 / carry-01
                                            :ARG0 c7-13
                                            :ARG1 (c7-9 / card
                                                        :ARG1-of (c7-11 / red-02))))
                  :location (c7-2 / book
                                  :poss (c7-5 / i)))
      :snt2 (c7-6 / rile-up-02
                  :ARG0 (c7-4 / shit)
                  :mod (c7-0 / just)))

# ::snt Criminals should be arristed, no matter where they come from.
# ::tokens ["Criminals", "should", "be", "arristed", ",", "no", "matter", "where", "they", "come", "from", "."]
# ::lemmas ["criminal", "should", "be", "arriste", ",", "no", "matter", "where", "they", "come", "from", "."]
(c8-3 / recommend-01
      :ARG1 (c8-6 / arrest-01
                  :ARG1 (c8-2 / person
                              :ARG2-of (c8-4 / criminal-03)))
      :ARG1-of (c8-1 / regardless-91
                     :ARG2 (c8-0 / location
                                 :ARG3-of (c8-5 / come-01
                                                :ARG1 c8-2))))

# ::snt A Reverend. What Religion?
# ::tokens ["A", "Reverend", ".", "What", "Religion", "?"]
# ::lemmas ["a", "reverend", ".", "what", "Religion", "?"]
(c9-1 / multi-sentence
      :snt1 (c9-3 / person
                  :ARG0-of (c9-0 / have-org-role-91
                                 :ARG2 (c9-4 / reverend)))
      :snt2 (c9-2 / religion
                  :mod (c9-5 / amr-unknown)))

# ::snt Here's some evidence and some weird conspiracy theories
# ::tokens ["Here", "'s", "some", "evidence", "and", "some", "weird", "conspiracy", "theories"]
# ::lemmas ["here", "be", "some", "evidence", "and", "some", "weird", "conspiracy", "theory"]
(c10-7 / and
       :op1 (c10-2 / evidence-01
                   :quant (c10-5 / some))
       :op2 (c10-6 / theory
                   :mod (c10-1 / weird)
                   :topic (c10-4 / conspire-01)
                   :quant (c10-3 / some))
       :location (c10-0 / here))

# ::snt :All these mobs are going to do to that cop is attempt to kill him like the blacks did to that white trucker re: Rodney King.
# ::tokens [":", "All", "these", "mobs", "are", "going", "to", "do", "to", "that", "cop", "is", "attempt", "to", "kill", "him", "like", "the", "blacks", "did", "to", "that", "white", "trucker", "re", ":", "Rodney", "King", "."]
# ::lemmas [":", "all", "these", "mob", "be", "go", "to", "do", "to", "that", "cop", "be", "attempt", "to", "kill", "he", "like", "the", "black", "do", "to", "that", "white", "trucker", "re", ":", "Rodney", "King", "."]
(c11-16 / attempt-01
        :ARG0 (c11-1 / mob
                     :mod (c11-14 / this)
                     :mod (c11-5 / all))
        :ARG1 (c11-6 / kill-01
                     :ARG0 c11-1
                     :ARG1 (c11-11 / cop
                                   :mod (c11-13 / that))
                     :ARG1-of (c11-10 / resemble-01
                                      :ARG2 (c11-3 / kill-01
                                                   :ARG0 (c11-9 / person
                                                                :ARG1-of (c11-2 / black-05))
                                                   :ARG1 (c11-8 / trucker
                                                                :ARG1-of (c11-0 / white-02)
                                                                :mod (c11-4 / that)
                                                                :topic (c11-15 / person
                                                                               :name (c11-7 / name
                                                                                            :op1 "Rodney"
                                                                                            :op2 "King"))))))
        :ARG1-of (c11-12 / do-02
                         :ARG0 c11-1
                         :ARG2 c11-11))

# ::snt Oh, it'll be a free will donation of appreciation. Who would dare say otherwise?
# ::tokens ["Oh", ",", "it", "'ll", "be", "a", "free", "will", "donation", "of", "appreciation", ".", "Who", "would", "dare", "say", "otherwise", "?"]
# ::lemmas ["oh", ",", "it", "'ll", "be", "a", "free", "will", "donation", "of", "appreciation", ".", "who", "would", "dare", "say", "otherwise", "?"]
(c12-3 / multi-sentence
       :snt1 (c12-7 / donate-01
                    :ARG1 (c12-9 / appreciate-02)
                    :ARG1-of (c12-2 / free-04)
                    :domain (c12-6 / it)
                    :mod (c12-4 / oh
                                :mode expressive))
       :snt2 (c12-1 / dare-01
                    :ARG0 (c12-5 / amr-unknown)
                    :ARG2 (c12-8 / say-01
                                 :ARG0 c12-5
                                 :ARG1 (c12-0 / have-polarity-91
                                              :ARG2 -))))

# ::snt How does he come to that conclusion? Unless these pricks were IDed &amp; arrested, who knows anything about them?
# ::tokens ["How", "does", "he", "come", "to", "that", "conclusion", "?", "Unless", "these", "pricks", "were", "IDed", "&", "amp", ";", "arrested", ",", "who", "knows", "anything", "about", "them", "?"]
# ::lemmas ["how", "do", "he", "come", "to", "that", "conclusion", "?", "unless", "these", "prick", "be", "IDed", "&", "amp", ";", "arrest", ",", "who", "know", "anything", "about", "they", "?"]
(c13-1 / multi-sentence
       :snt1 (c13-8 / conclude-01
                    :ARG0 (c13-0 / he)
                    :ARG1 (c13-11 / that)
                    :manner (c13-12 / amr-unknown))
       :snt2 (c13-5 / know-01
                    :ARG0 (c13-3 / amr-unknown)
                    :ARG1 (c13-6 / anything
                                 :topic (c13-7 / prick
                                               :mod (c13-9 / this)))
                    :condition (c13-10 / and
                                       :op1 (c13-4 / ID-01
                                                   :ARG1 c13-7
                                                   :polarity -)
                                       :op2 (c13-2 / arrest-01
                                                   :ARG1 c13-7))))

# ::snt Saw Sharpton yesterday in large group of NAACPers, calling for the name of the cop. "Reverend" wants the mobs to kill the cop
# ::tokens ["Saw", "Sharpton", "yesterday", "in", "large", "group", "of", "NAACPers", ",", "calling", "for", "the", "name", "of", "the", "cop", ".", "\"", "Reverend", "\"", "wants", "the", "mobs", "to", "kill", "the", "cop"]
# ::lemmas ["Saw", "Sharpton", "yesterday", "in", "large", "group", "of", "NAACPers", ",", "call", "for", "the", "name", "of", "the", "cop", ".", "\"", "reverend", "\"", "want", "the", "mob", "to", "kill", "the", "cop"]
(c14-0 / multi-sentence
       :snt1 (c14-2 / person
                    :name (c14-9 / name
                                 :op1 "Saw"
                                 :op2 "Sharpton")
                    :accompanier (c14-12 / group
                                         :mod (c14-6 / large)
                                         :consist-of (c14-4 / person
                                                            :ARG0-of (c14-5 / have-org-role-91
                                                                            :ARG1 (c14-8 / political-movement
                                                                                         :name (c14-18 / name
                                                                                                       :op1 "NAACP"))
                                                                            :ARG2 (c14-10 / member))))
                    :time (c14-17 / yesterday)
                    :manner (c14-19 / call-03
                                    :ARG1 (c14-1 / name
                                                 :poss (c14-3 / cop))
                                    :ARG0 c14-2))
       :snt2 (c14-14 / want-01
                     :ARG0 (c14-13 / person
                                   :ARG0-of c14-5
                                   :ARG2 (c14-11 / reverend)))
       :ARG1 (c14-16 / kill-01
                     :ARG0 (c14-7 / mob)
                     :ARG1 (c14-15 / cop)))

# ::snt He'll probably call it a donation and not pay any taxes on it, either!
# ::tokens ["He", "'ll", "probably", "call", "it", "a", "donation", "and", "not", "pay", "any", "taxes", "on", "it", ",", "either", "!"]
# ::lemmas ["he", "'ll", "probably", "call", "it", "a", "donation", "and", "not", "pay", "any", "taxis", "on", "it", ",", "either", "!"]
(c15-9 / and
       :op1 (c15-6 / call-01
                   :ARG0 (c15-0 / he)
                   :ARG1 (c15-3 / it)
                   :ARG2 (c15-5 / donate-01)
                   :mod (c15-4 / probable))
       :op2 (c15-8 / pay-01
                   :ARG0 c15-0
                   :ARG1 (c15-7 / tax-01
                                :ARG3 c15-3
                                :mod (c15-2 / any))
                   :mod (c15-1 / either)
                   :polarity -))

# ::snt . will be there to take his fees.
# ::tokens [".", "will", "be", "there", "to", "take", "his", "fees", "."]
# ::lemmas [".", "will", "be", "there", "to", "take", "his", "fee", "."]
(c16-2 / be-located-at-91
       :ARG2 (c16-4 / there)
       :purpose (c16-3 / take-01
                       :ARG1 (c16-1 / fee
                                    :poss (c16-0 / he))))

# ::snt actually I know alot of hard working members in the construction industry who fed up &amp; tired of being screwed over
# ::tokens ["actually", "I", "know", "alot", "of", "hard", "working", "members", "in", "the", "construction", "industry", "who", "fed", "up", "&", "amp", ";", "tired", "of", "being", "screwed", "over"]
# ::lemmas ["actually", "i", "know", "alot", "of", "hard", "work", "member", "in", "the", "construction", "industry", "who", "feed", "up", "&", "amp", ";", "tired", "of", "be", "screw", "over"]
(c17-10 / know-02
        :ARG0 (c17-4 / i)
        :ARG1 (c17-5 / person
                     :ARG0-of (c17-0 / have-org-role-91
                                     :ARG1 (c17-7 / industry
                                                  :mod (c17-6 / construct-01))
                                     :ARG2 (c17-3 / member))
                     :quant (c17-2 / lot)
                     :ARG0-of (c17-1 / work-01
                                     :ARG1-of (c17-12 / hard-02))
                     :ARG0-of (c17-8 / tire-01
                                     :ARG1 (c17-11 / screw-over-05
                                                   :ARG1 c17-5))
                     :ARG0-of c17-8
                     :ARG1 c17-5)
        :ARG1-of (c17-9 / actual-02))

# ::snt sad. Another reason why the Republic is endangered.
# ::tokens ["sad", ".", "Another", "reason", "why", "the", "Republic", "is", "endangered", "."]
# ::lemmas ["sad", ".", "another", "reason", "why", "the", "Republic", "be", "endanger", "."]
(c18-0 / multi-sentence
       :snt1 (c18-5 / sad-02)
       :snt2 (c18-3 / reason
                    :mod (c18-6 / another)
                    :ARG0-of (c18-4 / cause-01
                                    :ARG1 (c18-1 / endanger-01
                                                 :ARG1 (c18-2 / republic)))))

# ::snt Sharpton is a Looter, taking advantage of a bad situation he swoops in and gathers up all the loot he can.
# ::tokens ["Sharpton", "is", "a", "Looter", ",", "taking", "advantage", "of", "a", "bad", "situation", "he", "swoops", "in", "and", "gathers", "up", "all", "the", "loot", "he", "can", "."]
# ::lemmas ["Sharpton", "be", "a", "Looter", ",", "take", "advantage", "of", "a", "bad", "situation", "he", "swoop", "in", "and", "gather", "up", "all", "the", "loot", "he", "can", "."]
(c19-8 / cause-01
       :ARG0 (c19-6 / person
                    :name (c19-4 / name
                                 :op1 "Sharpton")
                    :ARG0-of (c19-11 / take-advantage-02
                                     :ARG1 (c19-10 / situation
                                                   :ARG1-of (c19-1 / bad-07))))
       :ARG1 (c19-13 / and
                     :op1 (c19-2 / swoops-01
                                 :ARG0 c19-6)
                     :op2 (c19-9 / gather-up-04
                                 :ARG0 c19-6
                                 :ARG1 (c19-0 / loot
                                              :mod (c19-3 / all)
                                              :ARG1-of (c19-7 / good-02)
                                              :ARG1-of (c19-5 / gather-01
                                                              :ARG0 c19-6
                                                              :ARG1-of (c19-12 / possible-01))))))

# ::snt He's planning to jack up the compensation on this shooting. He'll get a percentage one way or another. That's theft.
# ::tokens ["He", "'s", "planning", "to", "jack", "up", "the", "compensation", "on", "this", "shooting", ".", "He", "'ll", "get", "a", "percentage", "one", "way", "or", "another", ".", "That", "'s", "theft", "."]
# ::lemmas ["he", "be", "plan", "to", "jack", "up", "the", "compensation", "on", "this", "shooting", ".", "he", "'ll", "get", "a", "percentage", "one", "way", "or", "another", ".", "that", "be", "theft", "."]
(c20-4 / multi-sentence
       :snt1 (c20-8 / plan-01
                    :ARG0 (c20-0 / he)
                    :ARG1 (c20-1 / jack-up-01
                                 :ARG0 c20-0
                                 :ARG1 (c20-9 / compensate-01
                                              :ARG2 (c20-12 / shoot-02
                                                            :mod (c20-14 / this)))))
       :snt2 (c20-10 / get-01
                     :ARG0 (c20-16 / he)
                     :ARG1 (c20-15 / percentage)
                     :manner (c20-5 / or
                                    :op1 (c20-2 / way
                                                :mod (c20-3 / one))
                                    :op2 (c20-6 / way
                                                :mod (c20-13 / another))))
       :snt3 (c20-11 / thieve-01
                     :domain (c20-7 / that)))

# ::snt Sharpton is from Out of Town.
# ::tokens ["Sharpton", "is", "from", "Out", "of", "Town", "."]
# ::lemmas ["Sharpton", "be", "from", "out", "of", "Town", "."]
(c21-0 / be-from-91
       :ARG1 (c21-3 / person
                    :name (c21-2 / name
                                 :op1 "Sharpton"))
       :ARG2 (c21-1 / out-06
                    :ARG2 (c21-4 / town)))

# ::snt all colors loot and steal if given a chance..it's not the color of the skin but the moral of the character....
# ::tokens ["all", "colors", "loot", "and", "steal", "if", "given", "a", "chance", "..", "it", "'s", "not", "the", "color", "of", "the", "skin", "but", "the", "moral", "of", "the", "character", "...."]
# ::lemmas ["all", "color", "loot", "and", "steal", "if", "give", "a", "chance", "..", "it", "be", "not", "the", "color", "of", "the", "skin", "but", "the", "moral", "of", "the", "character", "...."]
(c22-1 / multi-sentence
       :snt1 (c22-10 / and
                     :op1 (c22-0 / loot-01
                                 :ARG0 (c22-7 / color
                                              :mod (c22-4 / all)))
                     :op2 (c22-9 / steal-01
                                 :ARG0 c22-7)
                     :condition (c22-6 / chance-02
                                       :ARG1 c22-10))
       :snt2 (c22-8 / contrast-01
                    :ARG1 (c22-11 / color
                                  :domain (c22-3 / skin)
                                  :polarity -)
                    :ARG2 (c22-5 / moral-02
                                 :ARG1 (c22-2 / character))))

# ::snt Thats true about union Leaders.They are destroying the entire economy with ttheir demands,and lazy members.
# ::tokens ["That", "s", "true", "about", "union", "Leaders", ".", "They", "are", "destroying", "the", "entire", "economy", "with", "ttheir", "demands", ",", "and", "lazy", "members", "."]
# ::lemmas ["that", "s", "true", "about", "union", "Leaders", ".", "they", "be", "destroy", "the", "entire", "economy", "with", "ttheir", "demand", ",", "and", "lazy", "member", "."]
(c23-3 / multi-sentence
       :snt1 (c23-13 / true-01
                     :ARG1 (c23-12 / that)
                     :topic (c23-8 / person
                                   :ARG0-of (c23-2 / lead-02
                                                   :ARG1 (c23-4 / union))))
       :snt2 (c23-9 / destroy-01
                    :ARG0 (c23-7 / they)
                    :ARG1 (c23-6 / economy
                                 :mod (c23-5 / entire))
                    :ARG2 (c23-15 / and
                                  :op1 (c23-1 / demand-01
                                              :ARG0 c23-7)
                                  :op2 (c23-14 / person
                                               :ARG0-of (c23-0 / have-org-role-91
                                                               :ARG1 c23-4
                                                               :ARG2 (c23-10 / member))
                                               :mod (c23-11 / lazy)))))

# ::snt Naw, Sharpie is too nerve out to steal, he has others do it for him so he won't get caught?
# ::tokens ["Naw", ",", "Sharpie", "is", "too", "nerve", "out", "to", "steal", ",", "he", "has", "others", "do", "it", "for", "him", "so", "he", "wo", "n't", "get", "caught", "?"]
# ::lemmas ["Naw", ",", "Sharpie", "be", "too", "nerve", "out", "to", "steal", ",", "he", "have", "other", "do", "it", "for", "he", "so", "he", "will", "not", "get", "catch", "?"]
(c24-12 / and
        :op1 (c24-0 / have-degree-91
                    :ARG1 (c24-6 / person
                                 :name (c24-5 / name
                                              :op1 "Sharpie"))
                    :ARG2 (c24-4 / nerve-out-02
                                 :ARG1 c24-6)
                    :ARG3 (c24-10 / too)
                    :ARG6 (c24-9 / steal-01
                                 :ARG0 c24-6))
        :op2 (c24-1 / have-04
                    :ARG0 c24-6
                    :ARG1 (c24-7 / do-02
                                 :ARG0 (c24-11 / person
                                               :mod (c24-2 / other))
                                 :ARG1 c24-9
                                 :beneficiary c24-6)
                    :purpose (c24-8 / catch-03
                                    :ARG1 c24-6
                                    :polarity -))
        :polarity (c24-3 / amr-unknown))

# ::snt want was the racial quotient?
# ::tokens ["want", "was", "the", "racial", "quotient", "?"]
# ::lemmas ["want", "be", "the", "racial", "quotient", "?"]
(c25-0 / want-01
       :polarity (c25-3 / amr-unknown)
       :ARG1 (c25-2 / quotient
                    :mod (c25-1 / race)))

# ::snt I'd be interested in what the voter turnout was in last election. Maybe you get what you deserve.
# ::tokens ["I", "'d", "be", "interested", "in", "what", "the", "voter", "turnout", "was", "in", "last", "election", ".", "Maybe", "you", "get", "what", "you", "deserve", "."]
# ::lemmas ["i", "would", "be", "interested", "in", "what", "the", "voter", "turnout", "be", "in", "last", "election", ".", "maybe", "you", "get", "what", "you", "deserve", "."]
(c26-2 / multi-sentence
       :snt1 (c26-4 / interest-01
                    :ARG1 (c26-8 / i)
                    :ARG2 (c26-11 / turn-out-17
                                  :ARG1 (c26-6 / person
                                               :ARG0-of (c26-5 / vote-01))
                                  :time (c26-3 / elect-01
                                               :mod (c26-1 / last))))
       :snt2 (c26-12 / possible-01
                     :ARG1 (c26-9 / get-01
                                  :ARG0 (c26-0 / you)
                                  :ARG1 (c26-10 / thing
                                                :ARG1-of (c26-7 / deserve-01
                                                                :ARG0 c26-0)))))

# ::snt this is some East St. Louis Crap going on.Wonder if Obama dropped some flyer/shoes like he did in SouthAmerica saying come on
# ::tokens ["this", "is", "some", "East", "St.", "Louis", "Crap", "going", "on", ".", "Wonder", "if", "Obama", "dropped", "some", "flyer", "/", "shoes", "like", "he", "did", "in", "SouthAmerica", "saying", "come", "on"]
# ::lemmas ["this", "be", "some", "East", "St.", "Louis", "Crap", "go", "on", ".", "wonder", "if", "Obama", "drop", "some", "flyer", "/", "shoe", "like", "he", "do", "in", "SouthAmerica", "say", "come", "on"]
(c27-1 / multi-sentence
       :snt1 (c27-13 / go-on-15
                     :ARG1 (c27-19 / crap
                                   :mod (c27-7 / some)
                                   :mod (c27-5 / city-district
                                               :name (c27-11 / name
                                                             :op1 "East"
                                                             :op2 "St."
                                                             :op3 "Louis"))))
       :snt2 (c27-14 / wonder-01
                     :ARG1 (c27-6 / drop-01
                                  :ARG0 (c27-4 / person
                                               :name (c27-18 / name
                                                             :op1 "Obama"))
                                  :ARG1 (c27-10 / slash
                                                :op1 (c27-8 / flyer)
                                                :op2 (c27-17 / shoe)
                                                :mod (c27-9 / some))
                                  :ARG1-of (c27-12 / resemble-01
                                                   :ARG2 (c27-0 / drop-01
                                                                :ARG0 c27-4
                                                                :location (c27-2 / world-region
                                                                                 :name (c27-3 / name
                                                                                              :op1 "SouthAmerica"))
                                                                :ARG0-of (c27-16 / say-01
                                                                                 :ARG1 (c27-15 / come-on-25
                                                                                               :ARG1 c27-4)))))))

# ::snt &amp;as u can see in OBAMA's America hes done a lot for blk communities. is tearing itself apart!
# ::tokens ["&", "amp;as", "u", "can", "see", "in", "OBAMA", "'s", "America", "he", "s", "done", "a", "lot", "for", "blk", "communities", ".", "is", "tearing", "itself", "apart", "!"]
# ::lemmas ["&", "amp;as", "u", "can", "see", "in", "OBAMA", "'s", "America", "he", "s", "do", "a", "lot", "for", "blk", "community", ".", "be", "tear", "itself", "apart", "!"]
(c28-14 / and
        :op2 (c28-7 / possible-01
                    :ARG1 (c28-11 / see-01
                                  :ARG0 (c28-1 / you)
                                  :ARG1 (c28-8 / do-02
                                               :ARG0 (c28-0 / he)
                                               :ARG1 (c28-2 / lot)
                                               :ARG2 (c28-9 / community
                                                            :mod (c28-13 / person
                                                                         :name (c28-5 / name
                                                                                      :op1 "Barack"
                                                                                      :op2 "Obama")))
                                               :location (c28-10 / country
                                                                 :name (c28-6 / name
                                                                              :op1 "America")
                                                                 :poss c28-13))))
        :op3 (c28-12 / tear-01
                     :ARG0 (c28-4 / it
                                  :ARG1-of c28-12)
                     :mod (c28-3 / apart)))

# ::snt Missouri Mayor: Looters came from out of town. Was he talking about Sharpton?
# ::tokens ["Missouri", "Mayor", ":", "Looters", "came", "from", "out", "of", "town", ".", "Was", "he", "talking", "about", "Sharpton", "?"]
# ::lemmas ["Missouri", "Mayor", ":", "looter", "come", "from", "out", "of", "town", ".", "be", "he", "talk", "about", "Sharpton", "?"]
(c29-2 / multi-sentence
       :snt1 (c29-12 / say-01
                     :ARG0 (c29-8 / person
                                  :ARG0-of (c29-0 / have-org-role-91
                                                  :ARG1 (c29-5 / state
                                                               :name (c29-6 / name
                                                                            :op1 "Missouri"))
                                                  :ARG2 (c29-9 / mayor)))
                     :ARG1 (c29-10 / come-01
                                   :ARG1 (c29-15 / person
                                                 :ARG0-of (c29-1 / loot-01))
                                   :ARG3 (c29-4 / out-06
                                                :ARG1 c29-15
                                                :ARG2 (c29-14 / town))))
       :snt2 (c29-11 / talk-01
                     :ARG0 (c29-16 / he)
                     :ARG1 (c29-3 / person
                                  :name (c29-7 / name
                                               :op1 "Sharpton"))
                     :polarity (c29-13 / amr-unknown)))

# ::snt They're better at white collar crime Union Leaders do it everyday. I can't fathom the destroying ones own comm!
# ::tokens ["They", "'re", "better", "at", "white", "collar", "crime", "Union", "Leaders", "do", "it", "everyday", ".", "I", "ca", "n't", "fathom", "the", "destroying", "ones", "own", "comm", "!"]
# ::lemmas ["they", "be", "well", "at", "white", "collar", "crime", "Union", "Leaders", "do", "it", "everyday", ".", "i", "can", "not", "fathom", "the", "destroy", "one", "own", "comm", "!"]
(c30-1 / multi-sentence
       :snt1 (c30-11 / good-03
                     :ARG1 (c30-20 / they)
                     :ARG2 (c30-18 / crime-02
                                   :ARG0 c30-20
                                   :mod (c30-13 / white-collar))
                     :ARG2-of (c30-6 / have-degree-91
                                     :ARG1 c30-20
                                     :ARG3 (c30-9 / more)))
       :snt2 (c30-3 / do-02
                    :ARG0 (c30-2 / person
                                 :ARG0-of (c30-7 / lead-02
                                                 :ARG1 (c30-14 / union)))
                    :ARG1 (c30-15 / it)
                    :frequency (c30-10 / rate-entity-91
                                       :ARG3 (c30-19 / temporal-quantity
                                                     :unit (c30-0 / day)
                                                     :quant 1)))
       :snt3 (c30-5 / possible-01
                    :ARG1 (c30-8 / fathom-01
                                 :ARG0 (c30-16 / i)
                                 :ARG1 (c30-12 / destroy-01
                                               :ARG1 (c30-4 / comm
                                                            :poss (c30-17 / one))))
                    :polarity -))

# ::snt yep, liberating hard working shop owners and employees of the goods, the meats, etc of their livelihood!
# ::tokens ["yep", ",", "liberating", "hard", "working", "shop", "owners", "and", "employees", "of", "the", "goods", ",", "the", "meats", ",", "etc", "of", "their", "livelihood", "!"]
# ::lemmas ["yep", ",", "liberate", "hard", "work", "shop", "owner", "and", "employee", "of", "the", "good", ",", "the", "meat", ",", "etc", "of", "their", "livelihood", "!"]
(c31-3 / liberate-01
       :ARG1 (c31-14 / and
                     :op1 (c31-9 / person
                                 :ARG0-of (c31-6 / own-01
                                                 :ARG1 (c31-12 / shop))
                                 :ARG0-of (c31-1 / work-01
                                                 :ARG1-of (c31-0 / hard-02)))
                     :op2 (c31-13 / person
                                  :ARG1-of (c31-7 / employ-01
                                                  :ARG2 (c31-8 / and
                                                               :op1 (c31-10 / good)
                                                               :op2 (c31-4 / meat)
                                                               :op3 (c31-5 / et-cetera)
                                                               :poss (c31-11 / livelihood
                                                                             :poss c31-9)))))
       :mod (c31-2 / yep
                   :mode expressive))

# ::snt Again with the autocorrect ! Sheesh!
# ::tokens ["Again", "with", "the", "autocorrect", "!", "Sheesh", "!"]
# ::lemmas ["again", "with", "the", "autocorrect", "!", "sheesh", "!"]
(c32-1 / multi-sentence
       :snt1 (c32-3 / autocorrect-00
                    :mod (c32-2 / again)
                    :mode expressive)
       :snt2 (c32-0 / sheesh
                    :mode expressive))

# ::snt Sharpton is just a professional looter.
# ::tokens ["Sharpton", "is", "just", "a", "professional", "looter", "."]
# ::lemmas ["Sharpton", "be", "just", "a", "professional", "looter", "."]
(c33-4 / person
       :ARG0-of (c33-1 / loot-01)
       :mod (c33-5 / professional)
       :domain (c33-2 / person
                      :name (c33-3 / name
                                   :op1 "Sharpton"))
       :mod (c33-0 / just))

# ::snt It does add some spice to our tweets from time to time!
# ::tokens ["It", "does", "add", "some", "spice", "to", "our", "tweets", "from", "time", "to", "time", "!"]
# ::lemmas ["it", "do", "add", "some", "spice", "to", "our", "tweet", "from", "time", "to", "time", "!"]
(c34-7 / add-02
       :ARG0 (c34-2 / it)
       :ARG1 (c34-5 / spice
                    :quant (c34-1 / some))
       :ARG2 (c34-6 / thing
                    :ARG1-of (c34-4 / tweet-01
                                    :ARG0 (c34-0 / we)))
       :frequency (c34-3 / time-to-time))

# ::snt Why is it always Black People that Loot, never Whites?...Just An Observation.
# ::tokens ["Why", "is", "it", "always", "Black", "People", "that", "Loot", ",", "never", "Whites?", "...", "Just", "An", "Observation", "."]
# ::lemmas ["why", "be", "it", "always", "Black", "People", "that", "Loot", ",", "never", "Whites?", "...", "just", "an", "observation", "."]
(c35-3 / multi-sentence
       :snt1 (c35-10 / cause-01
                     :ARG0 (c35-13 / amr-unknown)
                     :ARG1 (c35-2 / loot-01
                                  :ARG0 (c35-8 / person
                                               :ARG1-of (c35-4 / black-05))
                                  :time (c35-7 / always)))
       :snt2 (c35-9 / cause-01
                    :ARG0 c35-13)
       :ARG1 (c35-11 / loot-01
                     :ARG0 (c35-12 / person
                                   :ARG1-of (c35-1 / white-02))
                     :time (c35-6 / ever)
                     :polarity -)
       :snt3 (c35-5 / observe-01
                    :mod (c35-0 / just)))
