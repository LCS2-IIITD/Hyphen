# ::snt Sorry if I don't shed a tear. Ordering the jumping castle as we speak.
# ::tokens ["Sorry", "if", "I", "do", "n't", "shed", "a", "tear", ".", "Ordering", "the", "jumping", "castle", "as", "we", "speak", "."]
# ::lemmas ["sorry", "if", "i", "do", "not", "shed", "a", "tear", ".", "order", "the", "jumping", "castle", "as", "we", "speak", "."]
(c1-3 / multi-sentence
      :snt1 (c1-8 / sorry-01
                  :ARG1 (c1-6 / i)
                  :condition (c1-5 / shed-01
                                   :ARG0 c1-6
                                   :ARG1 (c1-9 / tear)
                                   :polarity -))
      :snt2 (c1-4 / order-02
                  :ARG2 (c1-7 / castle
                              :ARG0-of (c1-0 / jump-03))
                  :time (c1-2 / speak-01
                              :ARG0 (c1-1 / we))))

# ::snt Even if they were, must be such a boring paradise, I don't want it !
# ::tokens ["Even", "if", "they", "were", ",", "must", "be", "such", "a", "boring", "paradise", ",", "I", "do", "n't", "want", "it", "!"]
# ::lemmas ["even", "if", "they", "be", ",", "must", "be", "such", "a", "boring", "paradise", ",", "i", "do", "not", "want", "it", "!"]
(c2-0 / want-01
      :ARG0 (c2-3 / i)
      :ARG1 (c2-4 / paradise
                  :ARG0-of (c2-1 / bore-02
                                 :degree (c2-5 / such))
                  :domain (c2-6 / they))
      :concession (c2-2 / even-if
                        :op1 c2-4)
      :polarity -)

# ::snt True story : Charlie Hebdo killers are dead. Sources say they are not in Paradise.
# ::tokens ["True", "story", ":", "Charlie", "Hebdo", "killers", "are", "dead", ".", "Sources", "say", "they", "are", "not", "in", "Paradise", "."]
# ::lemmas ["true", "story", ":", "Charlie", "Hebdo", "killer", "be", "dead", ".", "source", "say", "they", "be", "not", "in", "Paradise", "."]
(c4-1 / multi-sentence
      :snt1 (c4-12 / story
                   :ARG1-of (c4-13 / true-01)
                   :topic (c4-8 / die-01
                                :ARG1 (c4-7 / person
                                            :ARG0-of (c4-4 / kill-01
                                                           :ARG1 (c4-9 / magazine
                                                                       :name (c4-5 / name
                                                                                   :op1 "Charlie"
                                                                                   :op2 "Ch Hebdo"))))))
      :snt2 (c4-3 / say-01
                  :ARG0 (c4-0 / source)
                  :ARG1 (c4-2 / be-located-at-91
                              :ARG1 (c4-11 / they)
                              :ARG2 (c4-10 / city
                                           :name (c4-6 / name
                                                       :op1 "Paradise"))
                              :polarity -)))

# ::snt Hahahahahahahahahahahaha
# ::tokens ["Hahahahahahahahahahahaha"]
# ::lemmas ["Hahahahahahahahahahahaha"]
(c5-0 / ha
      :mode expressive)

# ::snt Any casualties in the market?
# ::tokens ["Any", "casualties", "in", "the", "market", "?"]
# ::lemmas ["any", "casualty", "in", "the", "market", "?"]
(c6-1 / casualty
      :polarity (c6-3 / amr-unknown)
      :location (c6-0 / market)
      :quant (c6-2 / any))

# ::snt hahaha
# ::tokens ["hahaha"]
# ::lemmas ["hahaha"]
(c7-0 / haha
      :mode expressive)

# ::snt ": Charlie Hebdo KILLERS DEAD Sources say they are not in Paradise.NOOOOOTHEY R IN PARADISEFUCKKIN72VIRGIN HOORS
# ::tokens ["\"", ":", "Charlie", "Hebdo", "KILLERS", "DEAD", "Sources", "say", "they", "are", "not", "in", "Paradise", ".", "NOOOOOTHEY", "R", "IN", "PARADISEFUCKKIN72VIRGIN", "HOORS"]
# ::lemmas ["\"", ":", "Charlie", "Hebdo", "KILLERS", "DEAD", "Sources", "say", "they", "be", "not", "in", "Paradise", ".", "NOOOOOTHEY", "R", "in", "PARADISEFUCKKIN72VIRGIN", "HOORS"]
(c8-0 / multi-sentence
      :snt1 (c8-11 / kill-01
                   :ARG0 (c8-5 / magazine
                               :name (c8-3 / name
                                           :op1 "Charlie"
                                           :op2 " Hebdo"))
                   :ARG1 (c8-6 / person
                               :ARG1-of (c8-7 / die-01)))
      :snt2 (c8-9 / say-01
                  :ARG0 (c8-2 / source)
                  :ARG1 (c8-1 / be-located-at-91
                              :ARG1 (c8-10 / they)
                              :ARG2 (c8-8 / city
                                          :name (c8-4 / name
                                                      :op1 "Paradise"))
                              :polarity -)))

# ::snt good silly cunts
# ::tokens ["good", "silly", "cunts"]
# ::lemmas ["good", "silly", "cunt"]
(c9-1 / cunt
      :ARG1-of (c9-2 / good-02)
      :mod (c9-0 / silly))

# ::snt Gh : Charlie Hebdo killers are dead. Sources say they are not in Paradise.
# ::tokens ["Gh", ":", "Charlie", "Hebdo", "killers", "are", "dead", ".", "Sources", "say", "they", "are", "not", "in", "Paradise", "."]
# ::lemmas ["gh", ":", "Charlie", "Hebdo", "killer", "be", "dead", ".", "source", "say", "they", "be", "not", "in", "Paradise", "."]
(c10-1 / multi-sentence
       :snt1 (c10-7 / die-01
                    :ARG1 (c10-6 / person
                                 :ARG0-of (c10-12 / kill-01)
                                 :ARG0-of (c10-0 / have-org-role-91
                                                 :ARG1 (c10-8 / magazine
                                                              :name (c10-4 / name
                                                                           :op1 "Charlie"
                                                                           :op2 " Hebdo"))))
                    :mod (c10-9 / Gh
                                :mode expressive))
       :snt2 (c10-11 / say-01
                     :ARG0 (c10-3 / source)
                     :ARG1 (c10-2 / be-located-at-91
                                  :ARG1 c10-6
                                  :ARG2 (c10-10 / city
                                                :name (c10-5 / name
                                                             :op1 "Paradise"))
                                  :polarity -)))

# ::snt ": no virgins, only goats"Ok OkOkVIRGIN GOATSTHAT'S IT.ALLAH HU BAKHAAD
# ::tokens ["\"", ":", "no", "virgins", ",", "only", "goats\"Ok", "OkOkVIRGIN", "GOATSTHAT", "'S", "IT.ALLAH", "HU", "BAKHAAD"]
# ::lemmas ["\"", ":", "no", "virgin", ",", "only", "goats\"Ok", "OkOkVIRGIN", "GOATSTHAT", "'S", "IT.ALLAH", "HU", "BAKHAAD"]
(c11-1 / multi-sentence
       :snt1 (c11-7 / contrast-01
                    :ARG1 (c11-5 / virgin
                                 :polarity -)
                    :ARG2 (c11-8 / goat
                                 :mod (c11-3 / only)))
       :snt2 (c11-2 / be-it-08
                    :ARG1 c11-8
                    :mod c11-8)
       :mod (c11-0 / ok
                   :mode expressive)
       :snt3 (c11-6 / city
                    :name (c11-4 / name
                                 :op1 "Allah"
                                 :op2 "HU"
                                 :op3 "Bakhaad")))

# ::snt no virgins, only goats
# ::tokens ["no", "virgins", ",", "only", "goats"]
# ::lemmas ["no", "virgin", ",", "only", "goat"]
(c12-2 / contrast-01
       :ARG1 (c12-1 / virgin
                    :polarity -)
       :ARG2 (c12-3 / goat
                    :mod (c12-0 / only)))

# ::snt plus there ain't a paradise
# ::tokens ["plus", "there", "ai", "n't", "a", "paradise"]
# ::lemmas ["plus", "there", "be", "not", "a", "paradise"]
(c13-0 / paradise
       :mod (c13-1 / plus)
       :polarity -)

# ::snt too bad... Wanted to learn more about their motivators and influencers.
# ::tokens ["too", "bad", "...", "Wanted", "to", "learn", "more", "about", "their", "motivators", "and", "influencers", "."]
# ::lemmas ["too", "bad", "...", "want", "to", "learn", "more", "about", "their", "motivator", "and", "influencer", "."]
(c14-3 / multi-sentence
       :snt1 (c14-0 / have-degree-91
                    :ARG2 (c14-5 / bad-07)
                    :ARG3 (c14-10 / too))
       :snt2 (c14-1 / want-01
                    :ARG1 (c14-2 / learn-01
                                 :ARG1 (c14-12 / and
                                               :op1 (c14-7 / person
                                                           :ARG0-of (c14-8 / motivate-01
                                                                           :ARG1 (c14-9 / they)))
                                               :op2 (c14-11 / person
                                                            :ARG0-of (c14-6 / influence-01
                                                                            :ARG1 c14-9)))
                                 :mod (c14-4 / more))))
