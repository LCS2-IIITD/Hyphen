# ::snt no live stream?
# ::tokens ["no", "live", "stream", "?"]
# ::lemmas ["no", "live", "stream", "?"]
(c1-0 / stream-03
      :mod (c1-1 / live)
      :polarity (c1-2 / amr-unknown)
      :polarity -)

# ::snt : Captain Johnson: "Last night was a great night."
# ::tokens [":", "Captain", "Johnson", ":", "\"", "Last", "night", "was", "a", "great", "night", ".", "\""]
# ::lemmas [":", "Captain", "Johnson", ":", "\"", "Last", "night", "be", "a", "great", "night", ".", "\""]
(c2-6 / say-01
      :ARG0 (c2-3 / person
                  :name (c2-2 / name
                              :op1 "Captain"
                              :op2 "Johnson"))
      :ARG1 (c2-1 / night
                  :mod (c2-5 / great)
                  :domain (c2-4 / night
                                :mod (c2-0 / yesterday))))

# ::snt Yes-now CONVICT KILLER COPS b4 they thnk its OK KILL AGAIN! If behavior goes UNPUNISHED cops will think its OK KILL.
# ::tokens ["Yes", "-", "now", "CONVICT", "KILLER", "COPS", "b4", "they", "thnk", "its", "OK", "KILL", "AGAIN", "!", "If", "behavior", "goes", "UNPUNISHED", "cops", "will", "think", "its", "OK", "KILL", "."]
# ::lemmas ["yes", "-", "now", "CONVICT", "KILLER", "COPS", "b4", "they", "thnk", "its", "ok", "KILL", "again", "!", "if", "behavior", "go", "UNPUNISHED", "cop", "will", "think", "its", "ok", "KILL", "."]
(c3-0 / multi-sentence
      :snt1 (c3-14 / and
                   :op1 (c3-12 / kill-01
                               :ARG0 (c3-8 / cop
                                           :ARG0-of (c3-7 / convict-01))
                               :time (c3-5 / now)
                               :ARG1-of (c3-9 / cause-01
                                              :ARG0 (c3-6 / possible-01
                                                          :ARG1 (c3-3 / kill-01
                                                                      :ARG0 c3-8
                                                                      :mod (c3-4 / again)))))
                   :op2 (c3-10 / think-01
                               :ARG0 (c3-15 / cop)
                               :ARG1 (c3-2 / okay-04
                                           :ARG1 (c3-11 / kill-01
                                                        :ARG0 c3-15))
                               :condition (c3-1 / behave-01
                                                :ARG1-of (c3-13 / punish-01
                                                                :polarity -)))))

# ::snt last night: woman shot, carjacking, mcd's windows broken, white washu student beat, cops injured, cop cars damaged OK
# ::tokens ["last", "night", ":", "woman", "shot", ",", "carjacking", ",", "mcd", "'s", "windows", "broken", ",", "white", "washu", "student", "beat", ",", "cops", "injured", ",", "cop", "cars", "damaged", "OK"]
# ::lemmas ["last", "night", ":", "woman", "shoot", ",", "carjack", ",", "mcd", "'s", "window", "break", ",", "white", "washu", "student", "beat", ",", "cop", "injure", ",", "cop", "car", "damage", "ok"]
(c4-8 / and
      :op1 (c4-7 / shoot-02
                 :ARG1 (c4-14 / woman))
      :op2 (c4-23 / carjacker)
      :op3 (c4-9 / break-01
                 :ARG1 (c4-3 / window
                             :part-of (c4-5 / department
                                            :topic (c4-16 / and
                                                          :op1 (c4-12 / accident)
                                                          :op2 (c4-1 / medicine)))))
      :op4 (c4-18 / beat-01
                  :ARG1 (c4-4 / person
                              :ARG0-of (c4-10 / study-01)
                              :ARG1-of (c4-2 / white-02)
                              :mod (c4-15 / university
                                          :name (c4-11 / name
                                                       :op1 "MCD"))))
      :op5 (c4-17 / injure-01
                  :ARG1 (c4-6 / cop))
      :op6 (c4-0 / damage-01
                 :ARG1 (c4-19 / car
                              :poss c4-6)
                 :ARG1-of (c4-21 / okay-04))
      :time (c4-13 / date-entity
                   :dayperiod (c4-22 / night)
                   :mod (c4-20 / yesterday)))

# ::snt Captain Johnson: "Last night was a great night."
# ::tokens ["Captain", "Johnson", ":", "\"", "Last", "night", "was", "a", "great", "night", ".", "\""]
# ::lemmas ["Captain", "Johnson", ":", "\"", "Last", "night", "be", "a", "great", "night", ".", "\""]
(c5-6 / say-01
      :ARG0 (c5-3 / person
                  :name (c5-2 / name
                              :op1 "Captain"
                              :op2 "Johnson"))
      :ARG1 (c5-1 / night
                  :mod (c5-5 / great)
                  :domain (c5-4 / night
                                :mod (c5-0 / yesterday))))

# ::snt Can we watch this anywhere? Any streams?
# ::tokens ["Can", "we", "watch", "this", "anywhere", "?", "Any", "streams", "?"]
# ::lemmas ["can", "we", "watch", "this", "anywhere", "?", "any", "stream", "?"]
(c6-1 / multi-sentence
      :snt1 (c6-5 / possible-01
                  :polarity (c6-9 / amr-unknown)
                  :ARG1 (c6-0 / watch-01
                              :ARG0 (c6-3 / we)
                              :ARG1 (c6-8 / this)
                              :location (c6-2 / anywhere)))
      :snt2 (c6-6 / stream-03
                  :polarity (c6-4 / amr-unknown)
                  :mod (c6-7 / any)))

# ::snt Indeed it was RT : Captain Johnson: "Last night was a great night."
# ::tokens ["Indeed", "it", "was", "RT", ":", "Captain", "Johnson", ":", "\"", "Last", "night", "was", "a", "great", "night", ".", "\""]
# ::lemmas ["indeed", "it", "be", "RT", ":", "Captain", "Johnson", ":", "\"", "Last", "night", "be", "a", "great", "night", ".", "\""]
(c7-10 / and
       :op1 (c7-4 / publication
                  :name (c7-2 / name
                              :op1 "RT"))
       :op2 (c7-8 / say-01
                  :ARG0 (c7-9 / person
                              :name (c7-3 / name
                                          :op1 "Captain"
                                          :op2 "Johnson"))
                  :ARG1 (c7-5 / night
                              :mod (c7-7 / great)
                              :domain (c7-6 / night
                                            :mod (c7-0 / yesterday))))
       :mod (c7-1 / indeed))

# ::snt difference was they walked with the people they serve and talked to them. Thats missing in communities. Leads to disconnect.
# ::tokens ["difference", "was", "they", "walked", "with", "the", "people", "they", "serve", "and", "talked", "to", "them", ".", "That", "s", "missing", "in", "communities", ".", "Leads", "to", "disconnect", "."]
# ::lemmas ["difference", "be", "they", "walk", "with", "the", "people", "they", "serve", "and", "talk", "to", "they", ".", "that", "s", "miss", "in", "community", ".", "lead", "to", "disconnect", "."]
(c8-3 / multi-sentence
      :snt1 (c8-6 / differ-02
                  :ARG3 (c8-12 / and
                               :op1 (c8-0 / walk-01
                                          :ARG0 (c8-11 / they)
                                          :accompanier (c8-5 / person
                                                             :ARG2-of (c8-10 / serve-01
                                                                             :ARG0 c8-11)))
                               :op2 (c8-9 / talk-01
                                          :ARG0 c8-11
                                          :ARG2 c8-5)))
      :snt2 (c8-7 / miss-01
                  :ARG1 (c8-4 / that)
                  :location (c8-8 / community))
      :snt3 (c8-2 / lad
                  :ARG0-of (c8-1 / disconnect-01)))

# ::snt Thats y STRICT punishment for rapists/child molestors/even DUIs. its meant2 DETER behavior frm occuring again!
# ::tokens ["That", "s", "y", "STRICT", "punishment", "for", "rapists", "/", "child", "molestors", "/", "even", "DUIs", ".", "its", "meant2", "DETER", "behavior", "frm", "occuring", "again", "!"]
# ::lemmas ["that", "s", "y", "strict", "punishment", "for", "rapist", "/", "child", "molestor", "/", "even", "DUIs", ".", "its", "meant2", "DETER", "behavior", "frm", "occur", "again", "!"]
(c9-2 / multi-sentence
      :snt1 (c9-8 / punish-01
                  :ARG1 (c9-13 / slash
                               :op1 (c9-15 / person
                                           :ARG0-of (c9-9 / rape-01))
                               :op2 (c9-3 / person
                                          :ARG0-of (c9-10 / molest-01
                                                          :ARG1 (c9-11 / child)))
                               :op3 (c9-12 / DUI
                                           :mod (c9-5 / even)))
                  :ARG1-of (c9-6 / strong-02)
                  :domain (c9-14 / that))
      :snt2 (c9-1 / mean-01
                  :ARG1 (c9-7 / it)
                  :ARG2 (c9-4 / behave-01
                              :ARG1 (c9-0 / deter-01)
                              :mod (c9-16 / again)
                              :quant 2)))

# ::snt : Captain Johnson: "Last night was a great night." exactly.. Don't bring this black man on TV to try and calm us
# ::tokens [":", "Captain", "Johnson", ":", "\"", "Last", "night", "was", "a", "great", "night", ".", "\"", "exactly", "..", "Do", "n't", "bring", "this", "black", "man", "on", "TV", "to", "try", "and", "calm", "us"]
# ::lemmas [":", "Captain", "Johnson", ":", "\"", "Last", "night", "be", "a", "great", "night", ".", "\"", "exactly", "..", "do", "not", "bring", "this", "black", "man", "on", "tv", "to", "try", "and", "calm", "we"]
(c10-2 / multi-sentence
       :snt1 (c10-13 / say-01
                     :ARG0 (c10-7 / person
                                  :name (c10-6 / name
                                               :op1 "Captain"
                                               :op2 "Johnson"))
                     :ARG1 (c10-5 / night
                                  :mod (c10-10 / great)
                                  :domain (c10-8 / night
                                                 :mod (c10-0 / yesterday)))
                     :mod (c10-4 / exact))
       :snt2 (c10-3 / bring-01
                    :ARG0 (c10-12 / you)
                    :ARG1 (c10-9 / man
                                 :ARG1-of (c10-11 / black-05)
                                 :mod (c10-17 / this))
                    :ARG2 (c10-16 / television)
                    :purpose (c10-14 / try-01
                                     :ARG0 c10-12
                                     :ARG1 (c10-15 / calm-down-02
                                                   :ARG0 c10-12
                                                   :ARG1 (c10-1 / we)))
                    :polarity -
                    :mode imperative))
