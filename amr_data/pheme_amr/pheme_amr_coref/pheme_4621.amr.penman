# ::snt Someone needs to look up "proportions" in the dictionary.
# ::tokens ["Someone", "needs", "to", "look", "up", "\"", "proportions", "\"", "in", "the", "dictionary", "."]
# ::lemmas ["someone", "need", "to", "look", "up", "\"", "proportion", "\"", "in", "the", "dictionary", "."]
(c1-1 / need-01
      :ARG0 (c1-4 / someone)
      :ARG1 (c1-0 / look-up-05
                  :ARG0 c1-4
                  :ARG1 (c1-2 / position-02)
                  :ARG2 (c1-3 / dictionary)))

# ::snt You're in over your head Sally.
# ::tokens ["You", "'re", "in", "over", "your", "head", "Sally", "."]
# ::lemmas ["you", "be", "in", "over", "your", "head", "Sally", "."]
(c2-6 / say-01
      :ARG0 (c2-3 / i)
      :ARG1 (c2-1 / be-located-at-91
                  :ARG1 (c2-5 / person
                              :name (c2-4 / name
                                          :op1 "Sally"))
                  :ARG2 (c2-2 / over
                              :op1 (c2-0 / head
                                         :part-of c2-5)))
      :ARG2 c2-5)

# ::snt Well Sally Kahn can go screw! We are living in the century not the th.
# ::tokens ["Well", "Sally", "Kahn", "can", "go", "screw", "!", "We", "are", "living", "in", "the", "century", "not", "the", "th", "."]
# ::lemmas ["well", "Sally", "Kahn", "can", "go", "screw", "!", "we", "be", "live", "in", "the", "century", "not", "the", "th", "."]
(c3-2 / multi-sentence
      :snt1 (c3-5 / possible-01
                  :ARG1 (c3-9 / screw-02
                              :ARG0 (c3-11 / person
                                           :name (c3-4 / name
                                                       :op1 "Sally"
                                                       :op2 "Khan")))
                  :mod (c3-0 / well))
      :snt2 (c3-7 / contrast-01
                  :ARG1 (c3-1 / live-01
                              :ARG0 (c3-3 / we)
                              :time (c3-6 / century))
                  :ARG2 (c3-8 / live-01
                              :ARG0 c3-3
                              :time (c3-10 / century)
                              :polarity -)))

# ::snt . Come on, guys! She has (intellectually insulting) "proof"!!! -&gt;
# ::tokens [".", "Come", "on", ",", "guys", "!", "She", "has", "(", "intellectually", "insulting", ")", "\"", "proof", "\"", "!", "!", "!", "-&gt", ";"]
# ::lemmas [".", "come", "on", ",", "guy", "!", "she", "have", "(", "intellectually", "insulting", ")", "\"", "proof", "\"", "!", "!", "!", "-&gt", ";"]
(c4-0 / multi-sentence
      :snt1 (c4-3 / come-on-25
                  :ARG1 (c4-4 / guy)
                  :mode imperative)
      :snt2 (c4-2 / prove-01
                  :ARG0 (c4-6 / she)
                  :ARG0-of (c4-1 / insult-01
                                 :manner (c4-5 / intellectual))
                  :mode expressive))

# ::snt Sally will diss Christians and Jews, but not Muslims because she knows they would kill her.
# ::tokens ["Sally", "will", "diss", "Christians", "and", "Jews", ",", "but", "not", "Muslims", "because", "she", "knows", "they", "would", "kill", "her", "."]
# ::lemmas ["Sally", "will", "diss", "Christians", "and", "Jews", ",", "but", "not", "Muslims", "because", "she", "know", "they", "would", "kill", "she", "."]
(c5-10 / contrast-01
       :ARG1 (c5-9 / diss-01
                   :ARG0 (c5-8 / person
                               :name (c5-6 / name
                                           :op1 "Sally"))
                   :ARG1 (c5-17 / and
                                :op1 (c5-16 / person
                                            :mod (c5-11 / religious-group
                                                        :name (c5-7 / name
                                                                    :op1 "Christianity")))
                                :op2 (c5-1 / person
                                           :mod (c5-5 / religious-group
                                                      :name (c5-12 / name
                                                                   :op1 "Jew")))))
       :ARG2 (c5-0 / diss-01
                   :ARG0 c5-8
                   :ARG1 (c5-15 / person
                                :mod (c5-3 / religious-group
                                           :name (c5-13 / name
                                                        :op1 "Islam")))
                   :polarity -)
       :ARG1-of (c5-14 / cause-01
                       :ARG0 (c5-4 / know-01
                                   :ARG0 c5-8
                                   :ARG1 (c5-2 / kill-01
                                               :ARG0 c5-15
                                               :ARG1 c5-8))))

# ::snt Sally used to be Sam
# ::tokens ["Sally", "used", "to", "be", "Sam"]
# ::lemmas ["Sally", "use", "to", "be", "Sam"]
(c6-2 / person
      :name (c6-0 / name
                  :op1 "Sam")
      :domain (c6-3 / person
                    :name c6-0
                    :op1 "Sally")
      :time (c6-1 / use-03))

# ::snt I nd that motion!
# ::tokens ["I", "nd", "that", "motion", "!"]
# ::lemmas ["i", "nd", "that", "motion", "!"]
(c7-1 / move-01
      :ARG0 (c7-2 / i)
      :ARG1 (c7-0 / that))

# ::snt DOUCHE BAG
# ::tokens ["DOUCHE", "BAG"]
# ::lemmas ["DOUCHE", "BAG"]
(c8-1 / bag
      :mod (c8-0 / duh))

# ::snt Your Tweet Takes Center Stage On
# ::tokens ["Your", "Tweet", "Takes", "Center", "Stage", "On"]
# ::lemmas ["your", "Tweet", "Takes", "Center", "Stage", "on"]
(c9-5 / take-on-09
      :ARG0 (c9-3 / thing
                  :ARG1-of (c9-1 / tweet-01
                                 :ARG0 (c9-0 / you)))
      :ARG1 (c9-4 / stage
                  :mod (c9-2 / center)))

# ::snt It is time to ignore Idiots,if a tree falls in the forest......they are minuscule,take away the voice,nada!!
# ::tokens ["It", "is", "time", "to", "ignore", "Idiots", ",", "if", "a", "tree", "falls", "in", "the", "forest", "......", "they", "are", "minuscule", ",", "take", "away", "the", "voice", ",", "nada", "!", "!"]
# ::lemmas ["it", "be", "time", "to", "ignore", "Idiots", ",", "if", "a", "tree", "fall", "in", "the", "forest", "......", "they", "be", "minuscule", ",", "take", "away", "the", "voice", ",", "nada", "!", "!"]
(c10-11 / and
        :op1 (c10-10 / time
                     :purpose (c10-3 / ignore-01
                                     :ARG1 (c10-8 / idiot)))
        :op2 (c10-2 / minuscule
                    :domain c10-8
                    :condition (c10-1 / fall-01
                                      :ARG1 (c10-9 / tree)
                                      :ARG4 (c10-4 / forest)))
        :op3 (c10-6 / take-away-05
                    :ARG0 (c10-0 / you)
                    :ARG1 (c10-7 / voice)
                    :mode imperative)
        :op4 (c10-5 / nada))

# ::snt Kohn is another apologist idiot. It seems the leftwinger media is full of these fools.
# ::tokens ["Kohn", "is", "another", "apologist", "idiot", ".", "It", "seems", "the", "leftwinger", "media", "is", "full", "of", "these", "fools", "."]
# ::lemmas ["Kohn", "be", "another", "apologist", "idiot", ".", "it", "seem", "the", "leftwinger", "medium", "be", "full", "of", "these", "fool", "."]
(c11-1 / multi-sentence
       :snt1 (c11-4 / idiot
                    :mod (c11-11 / another)
                    :domain (c11-7 / person
                                   :name (c11-6 / name
                                                :op1 "Kohn"))
                    :mod (c11-3 / apologist))
       :snt2 (c11-9 / seem-01
                    :ARG1 (c11-0 / fill-01
                                 :ARG1 (c11-8 / media
                                              :ARG1-of (c11-2 / left-19))
                                 :ARG2 (c11-5 / fool
                                              :mod (c11-10 / this)))))

# ::snt Sally Kohn is a moron.
# ::tokens ["Sally", "Kohn", "is", "a", "moron", "."]
# ::lemmas ["Sally", "Kohn", "be", "a", "moron", "."]
(c12-2 / moron
       :domain (c12-1 / person
                      :name (c12-0 / name
                                   :op1 "Sally"
                                   :op2 "Kohn")))

# ::snt consider the source, enough said
# ::tokens ["consider", "the", "source", ",", "enough", "said"]
# ::lemmas ["consider", "the", "source", ",", "enough", "say"]
(c13-4 / consider-02
       :ARG0 (c13-1 / you)
       :ARG1 (c13-6 / thing
                    :ARG2-of (c13-5 / source-01)
                    :ARG1-of (c13-2 / say-01
                                    :ARG1-of (c13-0 / have-quant-91
                                                    :ARG3 (c13-3 / enough))))
       :mode imperative)

# ::snt the woman is a moron!
# ::tokens ["the", "woman", "is", "a", "moron", "!"]
# ::lemmas ["the", "woman", "be", "a", "moron", "!"]
(c14-1 / moron
       :domain (c14-0 / woman))

# ::snt Obviously, is talking about the Christians who killed writers of the South Park and Family Guy shows.
# ::tokens ["Obviously", ",", "is", "talking", "about", "the", "Christians", "who", "killed", "writers", "of", "the", "South", "Park", "and", "Family", "Guy", "shows", "."]
# ::lemmas ["obviously", ",", "be", "talk", "about", "the", "Christians", "who", "kill", "writer", "of", "the", "South", "Park", "and", "Family", "Guy", "show", "."]
(c15-8 / talk-01
       :ARG1 (c15-5 / person
                    :mod (c15-6 / religious-group
                                :name (c15-3 / name
                                             :op1 "Christian"))
                    :ARG0-of (c15-2 / kill-01
                                    :ARG1 (c15-9 / person
                                                 :ARG0-of (c15-0 / write-01
                                                                 :ARG1 (c15-7 / show
                                                                              :name (c15-4 / name
                                                                                           :op1 "South"
                                                                                           :op2 "Park"
                                                                                           :op3 "and"
                                                                                           :op4 "Family"
                                                                                           :op5 "Guy"))))))
       :ARG1-of (c15-1 / obvious-01))

# ::snt Lacks both balls and brains.
# ::tokens ["Lacks", "both", "balls", "and", "brains", "."]
# ::lemmas ["lack", "both", "ball", "and", "brain", "."]
(c16-2 / carry-01
       :ARG1 (c16-4 / and
                    :op1 (c16-0 / ball)
                    :op2 (c16-1 / brain)
                    :mod (c16-3 / both)))

# ::snt Maybe if we stop tweeting or talking about 's moronic statements she would be irrelevant. Just a thought.
# ::tokens ["Maybe", "if", "we", "stop", "tweeting", "or", "talking", "about", "'s", "moronic", "statements", "she", "would", "be", "irrelevant", ".", "Just", "a", "thought", "."]
# ::lemmas ["maybe", "if", "we", "stop", "tweet", "or", "talk", "about", "be", "moronic", "statement", "she", "would", "be", "irrelevant", ".", "just", "a", "thought", "."]
(c17-3 / multi-sentence
       :snt1 (c17-7 / possible-01
                    :ARG1 (c17-8 / relevant-01
                                 :ARG1 (c17-11 / she)
                                 :condition (c17-5 / stop-01
                                                   :ARG0 (c17-1 / we)
                                                   :ARG1 (c17-4 / or
                                                                :op1 (c17-12 / tweet-02
                                                                             :ARG0 c17-1)
                                                                :op2 (c17-10 / talk-01
                                                                             :ARG0 c17-1
                                                                             :ARG1 (c17-2 / state-01
                                                                                          :ARG0 (c17-9 / moron)))))
                                 :polarity -))
       :snt2 (c17-6 / think-01
                    :mod (c17-0 / just)))

# ::snt Sally Kohn should be given to ISIS to do with what they choose
# ::tokens ["Sally", "Kohn", "should", "be", "given", "to", "ISIS", "to", "do", "with", "what", "they", "choose"]
# ::lemmas ["Sally", "Kohn", "should", "be", "give", "to", "ISIS", "to", "do", "with", "what", "they", "choose"]
(c18-4 / recommend-01
       :ARG1 (c18-6 / give-01
                    :ARG1 (c18-3 / person
                                 :name (c18-1 / name
                                              :op1 "Sally"
                                              :op2 "Kohn"))
                    :ARG2 (c18-5 / criminal-organization
                                 :name (c18-2 / name
                                              :op1 "ISIS"))
                    :purpose (c18-0 / have-to-do-with-04
                                    :ARG0 c18-3
                                    :ARG1 (c18-8 / thing
                                                 :ARG1-of (c18-7 / choose-01
                                                                 :ARG0 c18-5)))))

# ::snt are we positive about the "balls?"
# ::tokens ["are", "we", "positive", "about", "the", "\"", "balls", "?", "\""]
# ::lemmas ["be", "we", "positive", "about", "the", "\"", "ball", "?", "\""]
(c19-1 / positive
       :polarity (c19-2 / amr-unknown)
       :domain (c19-0 / we)
       :topic (c19-3 / ball))

# ::snt Not all Muslims are terrorists but all terrorists are Muslims, which they acknowledge. is way in over her head.
# ::tokens ["Not", "all", "Muslims", "are", "terrorists", "but", "all", "terrorists", "are", "Muslims", ",", "which", "they", "acknowledge", ".", "is", "way", "in", "over", "her", "head", "."]
# ::lemmas ["not", "all", "Muslims", "be", "terrorist", "but", "all", "terrorist", "be", "Muslims", ",", "which", "they", "acknowledge", ".", "be", "way", "in", "over", "her", "head", "."]
(c20-7 / contrast-01
       :ARG1 (c20-10 / terrorist
                     :domain (c20-5 / person
                                    :mod (c20-6 / religious-group
                                                :name (c20-4 / name
                                                             :op1 "Islam"))
                                    :mod (c20-11 / all
                                                 :polarity -)))
       :ARG2 (c20-8 / terrorist
                    :mod c20-6
                    :ARG1-of (c20-3 / acknowledge-01
                                    :ARG0 c20-10)
                    :location (c20-2 / over
                                     :op1 (c20-0 / head
                                                 :part-of (c20-9 / she))
                                     :degree (c20-1 / way))))
