# ::snt Thank you.
# ::tokens ["Thank", "you", "."]
# ::lemmas ["thank", "you", "."]
(c1-1 / thank-01
      :ARG0 (c1-2 / i)
      :ARG1 (c1-0 / you))

# ::snt Would that make the child a Swiss citizen?
# ::tokens ["Would", "that", "make", "the", "child", "a", "Swiss", "citizen", "?"]
# ::lemmas ["would", "that", "make", "the", "child", "a", "Swiss", "citizen", "?"]
(c2-0 / make-02
      :ARG0 (c2-5 / that)
      :ARG1 (c2-3 / citizen
                  :mod (c2-2 / country
                             :name (c2-1 / name
                                         :op1 "Switzerland"))
                  :domain (c2-4 / child))
      :polarity (c2-6 / amr-unknown))

# ::snt : Kabayeva rumoured to have delivered a baby in Switzerland Putin p pappaperm?
# ::tokens [":", "Kabayeva", "rumoured", "to", "have", "delivered", "a", "baby", "in", "Switzerland", "Putin", "p", "pappaperm", "?"]
# ::lemmas [":", "Kabayeva", "rumour", "to", "have", "deliver", "a", "baby", "in", "Switzerland", "Putin", "p", "pappaperm", "?"]
(c3-6 / rumour-01
      :ARG1 (c3-5 / deliver-01
                  :ARG0 (c3-4 / person
                              :name (c3-2 / name
                                          :op1 "Kabayeva"))
                  :ARG1 (c3-1 / baby)
                  :location (c3-7 / country
                                  :name (c3-3 / name
                                              :op1 "Switzerland")))
      :polarity (c3-10 / amr-unknown)
      :manner (c3-9 / person
                    :name (c3-8 / name
                                :op1 "Putin")
                    :mod (c3-0 / pappaperm)))

# ::snt always knew he was a dickhead
# ::tokens ["always", "knew", "he", "was", "a", "dickhead"]
# ::lemmas ["always", "know", "he", "be", "a", "dickhead"]
(c4-2 / know-01
      :ARG1 (c4-1 / dickhead
                  :domain (c4-0 / he))
      :time (c4-3 / always))

# ::snt Nope, they have strict lex sanguinis
# ::tokens ["Nope", ",", "they", "have", "strict", "lex", "sanguinis"]
# ::lemmas ["nope", ",", "they", "have", "strict", "lex", "sanguinis"]
(c5-0 / have-03
      :ARG0 (c5-5 / they)
      :ARG1 (c5-4 / system
                  :mod (c5-2 / strict)
                  :mod (c5-1 / lex))
      :mod (c5-3 / nope))

# ::snt In terms of news, this is the first Kabayeva baby that is born outside the NY Post's This was Nr
# ::tokens ["In", "terms", "of", "news", ",", "this", "is", "the", "first", "Kabayeva", "baby", "that", "is", "born", "outside", "the", "NY", "Post", "'s", "This", "was", "Nr"]
# ::lemmas ["in", "term", "of", "news", ",", "this", "be", "the", "first", "Kabayeva", "baby", "that", "be", "bear", "outside", "the", "NY", "Post", "'s", "this", "be", "Nr"]
(c6-1 / baby
      :ARG1-of (c6-7 / bear-02
                     :location (c6-2 / outside
                                     :op1 (c6-3 / newspaper
                                                :name (c6-4 / name
                                                            :op1 "NY"
                                                            :op2 "Post"))))
      :ord (c6-0 / ordinal-entity
                 :value 1)
      :domain (c6-9 / this)
      :mod (c6-5 / person
                 :name (c6-6 / name
                             :op1 "Nr"))
      :topic (c6-8 / news))

# ::snt :likely they are now in Northern Italy with Betlusconi.
# ::tokens [":", "likely", "they", "are", "now", "in", "Northern", "Italy", "with", "Betlusconi", "."]
# ::lemmas [":", "likely", "they", "be", "now", "in", "Northern", "Italy", "with", "Betlusconi", "."]
(c7-0 / likely-01
      :ARG1 (c7-1 / be-located-at-91
                  :ARG1 (c7-7 / they)
                  :ARG2 (c7-6 / country-region
                              :name (c7-2 / name
                                          :op1 "Northern"
                                          :op2 "Italy"))
                  :time (c7-3 / now)
                  :accompanier (c7-4 / person
                                     :name (c7-5 / name
                                                 :op1 "Betlusconi"))))

# ::snt I like: "Neu-Papi Putin"
# ::tokens ["I", "like", ":", "\"", "Neu", "-", "Papi", "Putin", "\""]
# ::lemmas ["i", "like", ":", "\"", "Neu", "-", "Papi", "Putin", "\""]
(c8-0 / like-01
      :ARG0 (c8-2 / i)
      :ARG1 (c8-1 / quote-01
                  :ARG2 (c8-4 / person
                              :name (c8-3 / name
                                          :op1 "Neu-Papi"
                                          :op2 "Putin"))))

# ::snt Apart from pregnancy will be under big pressure in for having a child from
# ::tokens ["Apart", "from", "pregnancy", "will", "be", "under", "big", "pressure", "in", "for", "having", "a", "child", "from"]
# ::lemmas ["apart", "from", "pregnancy", "will", "be", "under", "big", "pressure", "in", "for", "have", "a", "child", "from"]
(c9-5 / pressure-01
      :ARG1 (c9-0 / have-05
                  :ARG1 (c9-7 / person
                              :ARG0-of (c9-8 / have-rel-role-91
                                             :ARG2 (c9-6 / child))))
      :ARG2 (c9-4 / impregnate-01)
      :mod (c9-2 / big)
      :ARG2-of (c9-3 / except-01
                     :ARG1 (c9-1 / pregnancy)))
