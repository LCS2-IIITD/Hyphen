# ::snt I DON'T KNOWI DON'T CARE
# ::tokens ["I", "DON'T", "KNOWI", "DON'T", "CARE"]
# ::lemmas ["i", "don't", "KNOWI", "don't", "care"]
(c1-1 / know-01
      :ARG0 (c1-2 / i)
      :ARG1 (c1-0 / care-01
                  :ARG0 c1-2
                  :polarity -)
      :polarity -)

# ::snt A Song of Peace" with lyrics - YouTube RT
# ::tokens ["A", "Song", "of", "Peace", "\"", "with", "lyrics", "-", "YouTube", "RT"]
# ::lemmas ["a", "Song", "of", "Peace", "\"", "with", "lyric", "-", "YouTube", "rt"]
(c2-3 / publication-91
      :ARG1 (c2-4 / song
                  :mod (c2-5 / peace)
                  :ARG2-of (c2-0 / lyric-01))
      :ARG4 (c2-1 / publication
                  :name (c2-2 / name
                              :op1 "YouTube"
                              :op2 "RT")))

# ::snt : PM: I was briefed overnight on the siege in Sydney. Deeply concerning and my thoughts are with all those caught up in it.
# ::tokens [":", "PM", ":", "I", "was", "briefed", "overnight", "on", "the", "siege", "in", "Sydney", ".", "Deeply", "concerning", "and", "my", "thoughts", "are", "with", "all", "those", "caught", "up", "in", "it", "."]
# ::lemmas [":", "pm", ":", "i", "be", "brief", "overnight", "on", "the", "siege", "in", "Sydney", ".", "deeply", "concern", "and", "my", "thought", "be", "with", "all", "those", "catch", "up", "in", "it", "."]
(c3-1 / multi-sentence
      :snt1 (c3-2 / brief-01
                  :ARG1 (c3-5 / i)
                  :ARG2 (c3-13 / siege
                               :location (c3-9 / city
                                               :name (c3-6 / name
                                                           :op1 "Sydney")))
                  :time (c3-3 / overnight))
      :snt2 (c3-15 / and
                   :op1 (c3-8 / concern-01
                              :ARG0 (c3-10 / it)
                              :ARG1 (c3-0 / i)
                              :ARG1-of (c3-11 / deep-02))
                   :op2 (c3-14 / think-01
                               :ARG0 c3-0
                               :ARG2 (c3-7 / person
                                           :mod (c3-4 / all)
                                           :ARG1-of (c3-12 / catch-up-04
                                                           :ARG2 c3-10)))))

# ::snt : PM: We will be deploying two armed guards across all Costa Coffees today following events in Sydney."
# ::tokens [":", "PM", ":", "We", "will", "be", "deploying", "two", "armed", "guards", "across", "all", "Costa", "Coffees", "today", "following", "events", "in", "Sydney", ".", "\""]
# ::lemmas [":", "pm", ":", "we", "will", "be", "deploy", "two", "armed", "guard", "across", "all", "Costa", "Coffees", "today", "follow", "event", "in", "Sydney", ".", "\""]
(c4-8 / deploy-01
      :ARG0 (c4-0 / we)
      :ARG1 (c4-7 / person
                  :ARG0-of (c4-10 / guard-01)
                  :ARG1-of (c4-14 / arm-01)
                  :quant 2)
      :ARG2 (c4-4 / across
                  :op1 (c4-9 / city
                             :name (c4-5 / name
                                         :op1 "Costa"
                                         :op2 "Cochees")
                             :mod (c4-6 / all)))
      :time (c4-13 / today)
      :ARG1-of (c4-2 / follow-01
                     :ARG2 (c4-3 / event
                                 :location (c4-11 / city
                                                  :name (c4-12 / name
                                                               :op1 "Sydney"))))
      :time (c4-1 / date-entity
                  :time "17:00"))

# ::snt Better rush in some anti-terror legislation, just in case.
# ::tokens ["Better", "rush", "in", "some", "anti", "-", "terror", "legislation", ",", "just", "in", "case", "."]
# ::lemmas ["well", "rush", "in", "some", "anti", "-", "terror", "legislation", ",", "just", "in", "case", "."]
(c5-5 / rush-01
      :ARG2 (c5-2 / legislate-01
                  :ARG0-of (c5-4 / oppose-01
                                 :ARG1 (c5-9 / terror))
                  :mod (c5-8 / some))
      :ARG1-of (c5-0 / have-degree-91
                     :ARG2 (c5-7 / good-02
                                 :ARG1 c5-5)
                     :ARG3 (c5-3 / more))
      :condition (c5-6 / case-04
                       :mod (c5-1 / just)))

# ::snt You can't resist can you Dave - no one cares what you say -The last thing any of the hostages need is you winding extremists up
# ::tokens ["You", "ca", "n't", "resist", "can", "you", "Dave", "-", "no", "one", "cares", "what", "you", "say", "-The", "last", "thing", "any", "of", "the", "hostages", "need", "is", "you", "winding", "extremists", "up"]
# ::lemmas ["you", "can", "not", "resist", "can", "you", "Dave", "-", "no", "one", "care", "what", "you", "say", "-the", "last", "thing", "any", "of", "the", "hostage", "need", "be", "you", "wind", "extremist", "up"]
(c6-4 / multi-sentence
      :snt1 (c6-9 / possible-01
                  :ARG1 (c6-10 / resist-01
                               :ARG0 (c6-16 / person
                                            :name (c6-7 / name
                                                        :op1 "Dave"))
                               :ARG1-of (c6-5 / possible-01))
                  :polarity -)
      :snt2 (c6-11 / care-01
                   :ARG0 (c6-8 / no-one)
                   :ARG1 (c6-15 / thing
                                :ARG1-of (c6-13 / say-01
                                                :ARG0 (c6-0 / hostage))))
      :snt3 (c6-12 / need-01
                   :ARG0 (c6-17 / hostage
                                :mod (c6-14 / any))
                   :ARG1 (c6-1 / wind-up-02
                               :ARG0 (c6-2 / you)
                               :ARG1 (c6-6 / extremist))
                   :mod (c6-3 / last)))

# ::snt we need to re-establish a system dominated by love and affection have a RT
# ::tokens ["we", "need", "to", "re", "-", "establish", "a", "system", "dominated", "by", "love", "and", "affection", "have", "a", "RT"]
# ::lemmas ["we", "need", "to", "re", "-", "establish", "a", "system", "dominate", "by", "love", "and", "affection", "have", "a", "rt"]
(c7-0 / have-03
      :ARG0 (c7-1 / you)
      :ARG1 (c7-9 / system
                  :ARG1-of (c7-7 / dominate-01
                                 :ARG0 (c7-10 / and
                                              :op1 (c7-3 / love-01)
                                              :op2 (c7-4 / affection)))
                  :ARG0-of (c7-8 / RT-01))
      :ARG1-of (c7-5 / need-01
                     :ARG0 (c7-2 / we)
                     :mod (c7-6 / again))
      :mode imperative)

# ::snt is what happens when West kills Muslims mercilessly. Sad but inevitable. Stupidity on all sides. As if you care, .
# ::tokens ["is", "what", "happens", "when", "West", "kills", "Muslims", "mercilessly", ".", "Sad", "but", "inevitable", ".", "Stupidity", "on", "all", "sides", ".", "As", "if", "you", "care", ",", "."]
# ::lemmas ["be", "what", "happen", "when", "West", "kill", "Muslims", "mercilessly", ".", "sad", "but", "inevitable", ".", "stupidity", "on", "all", "side", ".", "as", "if", "you", "care", ",", "."]
(c8-2 / multi-sentence
      :snt1 (c8-3 / event
                  :domain (c8-14 / kill-01
                                 :ARG0 (c8-0 / world-region
                                             :name (c8-6 / name
                                                         :op1 "West"))
                                 :ARG1 (c8-8 / person
                                             :mod (c8-9 / religious-group
                                                        :name (c8-7 / name
                                                                    :op1 "Muslim")))
                                 :manner (c8-10 / merciless)))
      :snt2 (c8-11 / contrast-01
                   :ARG1 (c8-13 / sad-02)
                   :ARG2 (c8-15 / possible-01
                                :ARG1 (c8-16 / avoid-01
                                             :ARG1 (c8-4 / stupid))
                                :polarity -))
      :snt3 (c8-5 / resemble-01
                  :ARG2 (c8-12 / care-01
                               :ARG0 (c8-1 / you))))

# ::snt displaced people live in people live where is
# ::tokens ["displaced", "people", "live", "in", "people", "live", "where", "is"]
# ::lemmas ["displace", "people", "live", "in", "people", "live", "where", "be"]
(c9-0 / live-01
      :ARG0 (c9-1 / person
                  :ARG1-of (c9-2 / displace-01))
      :location (c9-3 / live-01
                      :ARG0 (c9-4 / person)
                      :location (c9-5 / amr-unknown)))

# ::snt Really? What care we what u think? Look to yr own very serious issues
# ::tokens ["Really", "?", "What", "care", "we", "what", "u", "think", "?", "Look", "to", "yr", "own", "very", "serious", "issues"]
# ::lemmas ["really", "?", "what", "care", "we", "what", "u", "think", "?", "look", "to", "yr", "own", "very", "serious", "issue"]
(c10-2 / multi-sentence
       :snt1 (c10-7 / real-04
                    :polarity (c10-12 / amr-unknown))
       :snt2 (c10-8 / care-01
                    :ARG0 (c10-0 / you)
                    :ARG1 (c10-11 / thing
                                  :ARG1-of (c10-9 / think-01
                                                  :ARG0 (c10-13 / you)))
                    :polarity (c10-4 / amr-unknown))
       :snt3 (c10-1 / look-01
                    :ARG0 (c10-3 / you)
                    :ARG1 (c10-5 / issue-02
                                 :ARG1 c10-3
                                 :ARG1-of (c10-10 / serious-02
                                                  :degree (c10-6 / very)))
                    :mode imperative))

# ::snt LOL You want to find out what's wrong with my life? Well okay! ENJOY!
# ::tokens ["LOL", "You", "want", "to", "find", "out", "what", "'s", "wrong", "with", "my", "life", "?", "Well", "okay", "!", "ENJOY", "!"]
# ::lemmas ["lol", "you", "want", "to", "find", "out", "what", "be", "wrong", "with", "my", "life", "?", "well", "okay", "!", "ENJOY", "!"]
(c11-4 / multi-sentence
       :snt1 (c11-1 / want-01
                    :ARG0 (c11-2 / you)
                    :ARG1 (c11-3 / find-out-03
                                 :ARG0 c11-2
                                 :ARG1 (c11-12 / thing
                                               :ARG1-of (c11-10 / wrong-02
                                                                :ARG2 (c11-5 / life
                                                                             :poss (c11-9 / i)))))
                    :ARG2-of (c11-11 / laugh-01
                                     :ARG0 c11-9
                                     :manner (c11-0 / loud)
                                     :mode expressive))
       :snt2 (c11-7 / okay-01
                    :mod (c11-6 / well))
       :snt3 (c11-8 / enjoy-01
                    :mode expressive))

# ::snt Be a proper leader then, and deal with the problems not only abroad, but here as well !!
# ::tokens ["Be", "a", "proper", "leader", "then", ",", "and", "deal", "with", "the", "problems", "not", "only", "abroad", ",", "but", "here", "as", "well", "!", "!"]
# ::lemmas ["be", "a", "proper", "leader", "then", ",", "and", "deal", "with", "the", "problem", "not", "only", "abroad", ",", "but", "here", "as", "well", "!", "!"]
(c12-10 / and
        :op1 (c12-6 / person
                    :ARG0-of (c12-2 / lead-02)
                    :mod (c12-9 / proper)
                    :domain (c12-1 / you)
                    :time (c12-8 / then)
                    :mode imperative)
        :op2 (c12-7 / deal-01
                    :ARG0 c12-1
                    :ARG2 (c12-3 / problem
                                 :location c12-10
                                 :op1 (c12-4 / abroad)
                                 :op2 (c12-0 / here
                                             :mod (c12-5 / as-well)))
                    :mode imperative))

# ::snt So makes deal with to keep silent on murders in exchange for military base? But worried about ? Fuck off.
# ::tokens ["So", "makes", "deal", "with", "to", "keep", "silent", "on", "murders", "in", "exchange", "for", "military", "base", "?", "But", "worried", "about", "?", "Fuck", "off", "."]
# ::lemmas ["so", "make", "deal", "with", "to", "keep", "silent", "on", "murder", "in", "exchange", "for", "military", "base", "?", "but", "worry", "about", "?", "fuck", "off", "."]
(c13-2 / multi-sentence
       :snt1 (c13-7 / make-01
                    :polarity (c13-13 / amr-unknown)
                    :ARG1 (c13-8 / deal-01
                                 :ARG2 (c13-12 / keep-02
                                               :ARG1 (c13-11 / silent
                                                             :topic (c13-1 / murder-01))
                                               :ARG1-of (c13-5 / exchange-01
                                                               :ARG3 (c13-4 / base
                                                                            :mod (c13-9 / military)))))
                    :mod (c13-6 / so))
       :snt2 (c13-10 / contrast-01
                     :ARG2 (c13-0 / worry-01
                                  :ARG0 c13-9))
       :snt3 (c13-3 / fuck-off-03))

# ::snt Blah blah blah. You are so full of it. The entire world is haunted now.*They* know what you did last summer.
# ::tokens ["Blah", "blah", "blah", ".", "You", "are", "so", "full", "of", "it", ".", "The", "entire", "world", "is", "haunted", "now.*They", "*", "know", "what", "you", "did", "last", "summer", "."]
# ::lemmas ["blah", "blah", "blah", ".", "you", "be", "so", "full", "of", "it", ".", "the", "entire", "world", "be", "haunt", "now.*They", "*", "know", "what", "you", "do", "last", "summer", "."]
(c14-4 / multi-sentence
       :snt1 (c14-7 / blah-blah-blah)
       :snt2 (c14-3 / fill-01
                    :ARG1 (c14-1 / you)
                    :ARG2 (c14-10 / it)
                    :degree (c14-14 / so))
       :snt3 (c14-0 / haunt-01
                    :ARG1 (c14-2 / world
                                 :mod (c14-8 / entire))
                    :time (c14-11 / now))
       :snt4 (c14-16 / know-01
                     :ARG0 (c14-15 / they)
                     :ARG1 (c14-13 / thing
                                   :ARG1-of (c14-12 / do-02
                                                    :ARG0 c14-1
                                                    :time (c14-5 / date-entity
                                                                 :season (c14-9 / summer)
                                                                 :mod (c14-17 / year
                                                                              :mod (c14-6 / last)))))))

# ::snt SydneySiege PM Cameron, thanks partly to you, the UK will be subject to future events as this! Vote for UKs future! Vote
# ::tokens ["SydneySiege", "PM", "Cameron", ",", "thanks", "partly", "to", "you", ",", "the", "UK", "will", "be", "subject", "to", "future", "events", "as", "this", "!", "Vote", "for", "UKs", "future", "!", "Vote"]
# ::lemmas ["SydneySiege", "PM", "Cameron", ",", "thank", "partly", "to", "you", ",", "the", "UK", "will", "be", "subject", "to", "future", "event", "as", "this", "!", "vote", "for", "uks", "future", "!", "vote"]
(c15-0 / multi-sentence
       :snt1 (c15-13 / iege-01
                     :ARG1 (c15-2 / person
                                  :name (c15-10 / name
                                                :op1 "Cameron")
                                  :ARG0-of (c15-6 / have-org-role-91
                                                  :ARG2 (c15-11 / minister
                                                                :mod (c15-5 / prime))))
                     :ARG0-of (c15-17 / cause-01
                                      :ARG1 (c15-4 / subject-01
                                                   :ARG1 (c15-3 / country
                                                                :name (c15-16 / name
                                                                              :op1 "UK"))
                                                   :ARG2 (c15-9 / event
                                                                :time (c15-7 / future)
                                                                :ARG1-of (c15-12 / resemble-01
                                                                                 :ARG2 (c15-19 / this)))
                                                   :ARG1-of (c15-18 / thank-01
                                                                    :ARG2 (c15-14 / you)
                                                                    :degree (c15-8 / part))))
                     :snt2 (c15-1 / vote-01
                                  :ARG0 c15-14
                                  :mode imperative)
                     :ARG1 (c15-15 / future
                                   :poss c15-3)))

# ::snt how long until this happens here wake up Cameron you fool
# ::tokens ["how", "long", "until", "this", "happens", "here", "wake", "up", "Cameron", "you", "fool"]
# ::lemmas ["how", "long", "until", "this", "happen", "here", "wake", "up", "Cameron", "you", "fool"]
(c16-6 / say-01
       :ARG0 (c16-3 / i)
       :ARG1 (c16-1 / wake-up-02
                    :ARG0 (c16-5 / person
                                 :name (c16-4 / name
                                              :op1 "Cameron")
                                 :ARG1-of (c16-2 / fool-01)
                                 :ARG1-of c16-1)
                    :time (c16-8 / amr-unknown
                                 :time-of (c16-7 / this
                                                 :location (c16-0 / here)))
                    :mode imperative)
       :ARG2 c16-5)

# ::snt people want to get a grip. He's giving his thoughts to people caught up in a bad situation. This is not the time or place guys.
# ::tokens ["people", "want", "to", "get", "a", "grip", ".", "He", "'s", "giving", "his", "thoughts", "to", "people", "caught", "up", "in", "a", "bad", "situation", ".", "This", "is", "not", "the", "time", "or", "place", "guys", "."]
# ::lemmas ["people", "want", "to", "get", "a", "grip", ".", "he", "be", "give", "his", "thought", "to", "people", "catch", "up", "in", "a", "bad", "situation", ".", "this", "be", "not", "the", "time", "or", "place", "guy", "."]
(c17-2 / multi-sentence
       :snt1 (c17-1 / want-01
                    :ARG0 (c17-9 / person)
                    :ARG1 (c17-12 / get-01
                                  :ARG0 c17-9
                                  :ARG1 (c17-10 / grip-01
                                                :ARG0 c17-9)))
       :snt2 (c17-7 / give-01
                    :ARG0 (c17-0 / he)
                    :ARG1 (c17-16 / thing
                                  :ARG1-of (c17-14 / think-01
                                                   :ARG0 c17-0))
                    :ARG2 (c17-17 / person
                                  :ARG1-of (c17-11 / catch-up-07
                                                   :ARG2 (c17-15 / situation
                                                                 :ARG1-of (c17-4 / bad-07)))))
       :snt3 (c17-5 / or
                    :op1 (c17-8 / time
                                :polarity -)
                    :op2 (c17-3 / place
                                :polarity -)
                    :domain (c17-6 / this)
                    :beneficiary (c17-13 / guy)))

# ::snt Your boys doing it people you support in Syria
# ::tokens ["Your", "boys", "doing", "it", "people", "you", "support", "in", "Syria"]
# ::lemmas ["your", "boy", "do", "it", "people", "you", "support", "in", "Syria"]
(c18-5 / do-02
       :ARG0 (c18-1 / boy
                    :poss (c18-0 / you))
       :ARG1 (c18-2 / it)
       :ARG2 (c18-4 / person
                    :ARG1-of (c18-7 / support-01
                                    :ARG0 c18-0
                                    :location (c18-6 / country
                                                     :name (c18-3 / name
                                                                  :op1 "Syria")))))

# ::snt you're saying he shot down MH17? What is wrong with your life
# ::tokens ["you", "'re", "saying", "he", "shot", "down", "MH17", "?", "What", "is", "wrong", "with", "your", "life"]
# ::lemmas ["you", "be", "say", "he", "shoot", "down", "MH17", "?", "what", "be", "wrong", "with", "your", "life"]
(c19-4 / multi-sentence
       :snt1 (c19-9 / say-01
                    :ARG0 (c19-1 / you)
                    :ARG1 (c19-5 / shoot-down-05
                                 :ARG0 (c19-0 / he)
                                 :ARG1 (c19-10 / aircraft-type
                                               :name (c19-7 / name
                                                            :op1 "MH17"))))
       :snt2 (c19-2 / wrong-02
                    :ARG1 (c19-6 / amr-unknown)
                    :ARG2 (c19-3 / life
                                 :poss (c19-8 / you))))

# ::snt Briefed overnight means he had Sky News on!
# ::tokens ["Briefed", "overnight", "means", "he", "had", "Sky", "News", "on", "!"]
# ::lemmas ["Briefed", "overnight", "mean", "he", "have", "Sky", "News", "on", "!"]
(c20-1 / mean-01
       :ARG1 (c20-2 / brief-01
                    :time (c20-3 / overnight))
       :ARG2 (c20-0 / have-03
                    :ARG0 (c20-6 / he)
                    :ARG1 (c20-5 / broadcast-program
                                 :name (c20-4 / name
                                              :op1 "Sky"
                                              :op2 "News")))
       :mode expressive)

# ::snt fuck off you dumb troll
# ::tokens ["fuck", "off", "you", "dumb", "troll"]
# ::lemmas ["fuck", "off", "you", "dumb", "troll"]
(c21-4 / say-01
       :ARG0 (c21-2 / i)
       :ARG1 (c21-1 / fuck-off-03
                    :ARG0 (c21-0 / you
                                 :mod (c21-5 / troll
                                             :mod (c21-3 / dumb))
                                 :ARG2-of c21-4)
                    :mode imperative))

# ::snt LULZ Hey Cameron. This douche thinks I am a troll. LMFAO
# ::tokens ["LULZ", "Hey", "Cameron", ".", "This", "douche", "thinks", "I", "am", "a", "troll", ".", "LMFAO"]
# ::lemmas ["LULZ", "Hey", "Cameron", ".", "this", "douche", "think", "i", "be", "a", "troll", ".", "lmfao"]
(c22-2 / multi-sentence
       :snt1 (c22-13 / say-01
                     :ARG0 (c22-4 / i)
                     :ARG1 (c22-0 / hey
                                  :mode expressive)
                     :ARG2 (c22-7 / person
                                  :name (c22-5 / name
                                               :op1 "Cameron")))
       :snt2 (c22-14 / think-01
                     :ARG0 (c22-8 / douche
                                  :mod (c22-12 / this))
                     :ARG1 (c22-6 / troll
                                  :domain (c22-10 / i)))
       :snt3 (c22-1 / laugh-01
                    :ARG0 (c22-3 / i)
                    :manner (c22-9 / loud)
                    :mode expressive)
       :snt4 (c22-15 / person
                     :name (c22-11 / name
                                   :op1 "LMFAO")))

# ::snt so does that justify it ?
# ::tokens ["so", "does", "that", "justify", "it", "?"]
# ::lemmas ["so", "do", "that", "justify", "it", "?"]
(c23-0 / justify-01
       :polarity (c23-3 / amr-unknown)
       :ARG0 (c23-1 / that)
       :ARG1 (c23-2 / it))

# ::snt "but not Starbucks as they have fallen behind with their taxes...."
# ::tokens ["\"", "but", "not", "Starbucks", "as", "they", "have", "fallen", "behind", "with", "their", "taxes", "....", "\""]
# ::lemmas ["\"", "but", "not", "starbuck", "as", "they", "have", "fall", "behind", "with", "their", "taxis", "....", "\""]
(c24-3 / contrast-01
       :ARG2 (c24-2 / company
                    :name (c24-1 / name
                                 :op1 "Starbucks")
                    :ARG1-of (c24-4 / cause-01
                                    :ARG0 (c24-0 / fall-behind-00
                                                 :ARG1 c24-2
                                                 :ARG2 (c24-5 / tax-01
                                                              :ARG2 c24-2)))
                    :polarity -))

# ::snt soon it will happen to us . Hope you prevent it rather than try solve it when the arrives
# ::tokens ["soon", "it", "will", "happen", "to", "us", ".", "Hope", "you", "prevent", "it", "rather", "than", "try", "solve", "it", "when", "the", "arrives"]
# ::lemmas ["soon", "it", "will", "happen", "to", "we", ".", "hope", "you", "prevent", "it", "rather", "than", "try", "solve", "it", "when", "the", "arrive"]
(c25-4 / multi-sentence
       :snt1 (c25-7 / it
                    :beneficiary (c25-1 / we)
                    :time (c25-10 / soon))
       :snt2 (c25-0 / hope-01
                    :ARG0 (c25-9 / i)
                    :ARG1 (c25-3 / instead-of-91
                                 :ARG1 (c25-8 / prevent-01
                                              :ARG0 (c25-2 / you)
                                              :ARG1 c25-7)
                                 :ARG2 (c25-11 / try-01
                                               :ARG0 c25-2
                                               :ARG1 (c25-6 / solve-01
                                                            :ARG0 c25-2
                                                            :ARG1 c25-7
                                                            :time (c25-12 / arrive-01
                                                                          :ARG1 (c25-5 / ship)))))))

# ::snt thanks dishface but they just want Tonys ugly mug we arent scared ..toodles
# ::tokens ["thanks", "dishface", "but", "they", "just", "want", "Tonys", "ugly", "mug", "we", "are", "nt", "scared", "..", "toodles"]
# ::lemmas ["thank", "dishface", "but", "they", "just", "want", "Tonys", "ugly", "mug", "we", "be", "not", "scared", "..", "toodles"]
(c26-2 / multi-sentence
       :snt1 (c26-15 / thank-01
                     :ARG0 (c26-5 / i)
                     :ARG1 (c26-9 / person
                                  :name (c26-7 / name
                                               :op1 "dishface")))
       :snt2 (c26-11 / contrast-01
                     :ARG1 (c26-1 / want-01
                                  :ARG0 (c26-13 / they)
                                  :ARG1 (c26-10 / mug
                                                :mod (c26-3 / ugly)
                                                :poss (c26-16 / person
                                                              :name (c26-8 / name
                                                                           :op1 "Tony"
                                                                           :op2 "Tonys")))
                                  :mod (c26-0 / just))
                     :ARG2 (c26-14 / scare-01
                                   :ARG1 (c26-6 / we)
                                   :polarity -))
       :snt3 (c26-4 / person
                    :name (c26-12 / name
                                  :op1 "toodles")))

# ::snt PEW PEW PEW.They are going to haunt you too.
# ::tokens ["PEW", "PEW", "PEW.They", "are", "going", "to", "haunt", "you", "too", "."]
# ::lemmas ["pew", "PEW", "PEW.They", "be", "go", "to", "haunt", "you", "too", "."]
(c27-2 / multi-sentence
       :snt1 (c27-3 / pray-01
                    :ARG0 (c27-1 / you)
                    :mode imperative)
       :snt2 (c27-0 / haunt-01
                    :ARG0 (c27-6 / they)
                    :ARG1 (c27-4 / you)
                    :mod (c27-5 / too)))

# ::snt why do governments give air time to these crimes?
# ::tokens ["why", "do", "governments", "give", "air", "time", "to", "these", "crimes", "?"]
# ::lemmas ["why", "do", "government", "give", "air", "time", "to", "these", "crime", "?"]
(c28-3 / cause-01
       :ARG0 (c28-8 / amr-unknown)
       :ARG1 (c28-4 / give-01
                    :ARG0 (c28-2 / government-organization
                                 :ARG0-of (c28-1 / govern-01))
                    :ARG1 (c28-7 / time
                                 :mod (c28-0 / air))
                    :ARG2 (c28-5 / crime-02
                                 :mod (c28-6 / this))))
