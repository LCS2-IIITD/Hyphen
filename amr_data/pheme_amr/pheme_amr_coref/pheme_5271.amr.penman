# ::snt Many shots fired, explosions too &gt;&gt; RT : - Smoke coming out in
# ::tokens ["Many", "shots", "fired", ",", "explosions", "too", "&", "gt;&gt", ";", "RT", ":", "-", "Smoke", "coming", "out", "in"]
# ::lemmas ["many", "shot", "fire", ",", "explosion", "too", "&", "gt;&gt", ";", "RT", ":", "-", "Smoke", "come", "out", "in"]
(c2-10 / and
       :op1 (c2-0 / fire-01
                  :ARG1 (c2-8 / shot
                              :quant (c2-1 / many)))
       :op2 (c2-2 / explode-01
                  :mod (c2-9 / too))
       :op3 (c2-7 / come-out-09
                  :ARG1 (c2-3 / smoke))
       :ARG1-of (c2-6 / describe-01
                      :ARG0 (c2-5 / publication
                                  :name (c2-4 / name
                                              :op1 "RT"))))

# ::snt : - Smoke coming out in
# ::tokens [":", "-", "Smoke", "coming", "out", "in"]
# ::lemmas [":", "-", "smoke", "come", "out", "in"]
(c3-1 / come-out-09
      :ARG1 (c3-0 / smoke))

# ::snt .
# ::tokens ["."]
# ::lemmas ["."]
(c4-0 / amr-empty)

# ::snt : - Smoke coming out in
# ::tokens [":", "-", "Smoke", "coming", "out", "in"]
# ::lemmas [":", "-", "smoke", "come", "out", "in"]
(c5-1 / come-out-09
      :ARG1 (c5-0 / smoke))

# ::snt ": - Smoke coming out in "
# ::tokens ["\"", ":", "-", "Smoke", "coming", "out", "in", "\""]
# ::lemmas ["\"", ":", "-", "smoke", "come", "out", "in", "\""]
(c6-2 / come-out-09
      :ARG1 (c6-0 / smoke)
      :medium (c6-3 / broadcast-program
                    :name (c6-1 / name
                                :op1 ":")))
