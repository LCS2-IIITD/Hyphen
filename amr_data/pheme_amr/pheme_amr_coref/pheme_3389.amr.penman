# ::snt Commentator deducts choice of Lindt a botched choice. I'm thinking perfectly positioned opposite news outlet!! News !,
# ::tokens ["Commentator", "deducts", "choice", "of", "Lindt", "a", "botched", "choice", ".", "I", "'m", "thinking", "perfectly", "positioned", "opposite", "news", "outlet", "!", "!", "News", "!", ","]
# ::lemmas ["commentator", "deduct", "choice", "of", "Lindt", "a", "botch", "choice", ".", "i", "be", "think", "perfectly", "position", "opposite", "news", "outlet", "!", "!", "news", "!", ","]
(c1-1 / multi-sentence
      :snt1 (c1-11 / deduct-01
                   :ARG0 (c1-8 / person
                               :ARG0-of (c1-10 / comment-01))
                   :ARG1 (c1-9 / choose-01
                               :ARG1 (c1-14 / person
                                            :name (c1-6 / name
                                                        :op1 "Lindt"))
                               :ARG1-of (c1-3 / botch-01)))
      :snt2 (c1-13 / think-01
                   :ARG0 (c1-5 / i)
                   :ARG1 (c1-2 / position-01
                               :ARG1 (c1-4 / outlet
                                           :mod (c1-7 / news)
                                           :ARG1-of (c1-0 / opposite-01))
                               :ARG1-of (c1-12 / perfect-02)))
      :snt3 c1-7
      :mode expressive)

# ::snt oh please excuse me! care to clarify what L approach jargon means then for benefit of all?...
# ::tokens ["oh", "please", "excuse", "me", "!", "care", "to", "clarify", "what", "L", "approach", "jargon", "means", "then", "for", "benefit", "of", "all", "?", "..."]
# ::lemmas ["oh", "please", "excuse", "i", "!", "care", "to", "clarify", "what", "L", "approach", "jargon", "mean", "then", "for", "benefit", "of", "all", "?", "..."]
(c2-1 / multi-sentence
      :snt1 (c2-4 / excuse-01
                  :ARG0 (c2-0 / you)
                  :ARG1 (c2-6 / i)
                  :mod (c2-3 / oh)
                  :mode imperative
                  :polite +)
      :snt2 (c2-10 / care-02
                   :ARG0 (c2-12 / you)
                   :ARG1 (c2-9 / clarify-10
                               :ARG0 c2-12
                               :ARG1 (c2-8 / mean-01
                                           :ARG1 (c2-14 / term
                                                        :mod (c2-15 / approach-02
                                                                    :ARG2 (c2-13 / string-entity
                                                                                 :value "L")))
                                           :ARG2 (c2-5 / amr-unknown))
                               :purpose (c2-2 / benefit-01
                                              :ARG1 (c2-11 / person
                                                           :mod (c2-7 / all))))
                   :mode imperative
                   :polite +))

# ::snt Disagree social media is there to let people express opinions.my error won't make history/cause harm
# ::tokens ["Disagree", "social", "media", "is", "there", "to", "let", "people", "express", "opinions.my", "error", "wo", "n't", "make", "history", "/", "cause", "harm"]
# ::lemmas ["disagree", "social", "medium", "be", "there", "to", "let", "people", "express", "opinions.my", "error", "will", "not", "make", "history", "/", "cause", "harm"]
(c3-2 / multi-sentence
      :snt1 (c3-17 / agree-01
                   :ARG0 (c3-10 / i)
                   :ARG1 (c3-5 / be-located-at-91
                               :ARG1 (c3-11 / media
                                            :mod (c3-15 / social))
                               :ARG2 (c3-16 / there)
                               :purpose (c3-1 / let-01
                                              :ARG0 c3-11
                                              :ARG1 (c3-8 / express-01
                                                          :ARG0 (c3-12 / person)
                                                          :ARG1 (c3-6 / opine-01
                                                                      :ARG0 c3-12))))
                   :polarity -)
      :snt2 (c3-9 / slash
                  :op1 (c3-3 / make-01
                             :ARG0 (c3-7 / err-01
                                         :ARG0 (c3-14 / i))
                             :ARG1 (c3-0 / history)
                             :polarity -)
                  :op2 (c3-13 / cause-01
                              :ARG0 c3-7
                              :ARG1 (c3-4 / harm-01)
                              :polarity -)))

# ::snt that's not a diversion - that's a totally normal runway L approach. A bit excited r we?
# ::tokens ["that", "'s", "not", "a", "diversion", "-", "that", "'s", "a", "totally", "normal", "runway", "L", "approach", ".", "A", "bit", "excited", "r", "we", "?"]
# ::lemmas ["that", "be", "not", "a", "diversion", "-", "that", "be", "a", "totally", "normal", "runway", "l", "approach", ".", "a", "bit", "excited", "r", "we", "?"]
(c4-1 / multi-sentence
      :snt1 (c4-9 / contrast-01
                  :ARG1 (c4-8 / divert-01
                              :ARG0 (c4-12 / that)
                              :polarity -)
                  :ARG2 (c4-13 / approach-01
                               :ARG2 (c4-10 / runway
                                            :name (c4-5 / name
                                                        :op1 "L"))
                               :ARG1-of (c4-6 / normal-02
                                              :degree (c4-11 / total))
                               :domain (c4-7 / that)))
      :snt2 (c4-3 / excite-01
                  :ARG1 (c4-0 / we)
                  :polarity (c4-4 / amr-unknown)
                  :degree (c4-2 / bit)))

# ::snt I expect histrionic falsehoods from your commercial cousins, , facts from you.
# ::tokens ["I", "expect", "histrionic", "falsehoods", "from", "your", "commercial", "cousins", ",", ",", "facts", "from", "you", "."]
# ::lemmas ["i", "expect", "histrionic", "falsehood", "from", "your", "commercial", "cousin", ",", ",", "fact", "from", "you", "."]
(c5-4 / expect-01
      :ARG0 (c5-5 / i)
      :ARG1 (c5-10 / and
                   :op1 (c5-2 / falsehood
                              :source (c5-7 / person
                                            :ARG0-of (c5-0 / have-rel-role-91
                                                           :ARG1 (c5-1 / you)
                                                           :ARG2 (c5-9 / cousin))
                                            :mod (c5-8 / commerce))
                              :mod (c5-3 / histrionic))
                   :op2 (c5-6 / fact
                              :source c5-1)))

# ::snt it's totally normal. If u don't understand what your looking at it best not to tweet. Avoids panic!
# ::tokens ["it", "'s", "totally", "normal", ".", "If", "u", "do", "n't", "understand", "what", "your", "looking", "at", "it", "best", "not", "to", "tweet", ".", "Avoids", "panic", "!"]
# ::lemmas ["it", "be", "totally", "normal", ".", "if", "u", "do", "not", "understand", "what", "your", "look", "at", "it", "well", "not", "to", "tweet", ".", "avoid", "panic", "!"]
(c6-3 / multi-sentence
      :snt1 (c6-6 / normal-02
                  :ARG1 (c6-5 / it)
                  :degree (c6-14 / total))
      :snt2 (c6-0 / have-condition-91
                  :ARG1 (c6-12 / tweet-02
                               :ARG0 (c6-1 / you)
                               :ARG1 (c6-10 / it)
                               :ARG1-of (c6-11 / good-02
                                               :ARG2-of (c6-15 / have-degree-91
                                                               :ARG1 c6-12
                                                               :ARG3 (c6-8 / most)))
                               :polarity -)
                  :ARG2 (c6-4 / understand-01
                              :ARG0 c6-1
                              :ARG1 (c6-7 / thing
                                          :ARG1-of (c6-2 / look-01
                                                         :ARG0 c6-1
                                                         :ARG2 c6-10))
                              :polarity -))
      :snt3 (c6-9 / panic-01
                  :ARG0 (c6-13 / avoid)))

# ::snt ffs do planes normally fly over the sydney CBD
# ::tokens ["ffs", "do", "planes", "normally", "fly", "over", "the", "sydney", "CBD"]
# ::lemmas ["ff", "do", "plane", "normally", "fly", "over", "the", "sydney", "CBD"]
(c7-0 / fly-01
      :ARG2 (c7-4 / plane)
      :ARG1-of (c7-2 / normal-02)
      :path (c7-1 / over
                  :op1 (c7-6 / city-district
                             :name (c7-3 / name
                                         :op1 "CBD")
                             :part-of (c7-5 / city
                                            :name c7-3
                                            :op1 "Sydney"))))

# ::snt yep that's right
# ::tokens ["yep", "that", "'s", "right"]
# ::lemmas ["yep", "that", "be", "right"]
(c8-1 / right-06
      :ARG2 (c8-2 / that)
      :mod (c8-0 / yep
                 :mode expressive))

# ::snt Police must be terrified of an all-mighty bang or helis being brought down...
# ::tokens ["Police", "must", "be", "terrified", "of", "an", "all", "-", "mighty", "bang", "or", "helis", "being", "brought", "down", "..."]
# ::lemmas ["police", "must", "be", "terrify", "of", "an", "all", "-", "mighty", "bang", "or", "heli", "be", "bring", "down", "..."]
(c9-4 / infer-01
      :ARG1 (c9-7 / terrify-01
                  :ARG0 (c9-2 / bring-down-03
                              :ARG1 (c9-3 / or
                                          :op1 (c9-6 / bang
                                                     :mod (c9-1 / mighty
                                                                :mod (c9-8 / all)))
                                          :op2 (c9-0 / helis)))
                  :ARG1 (c9-5 / police)))

# ::snt : : No confirmation airspace has been shut down yet in Sydney but planes are avoiding the area.
# ::tokens [":", ":", "No", "confirmation", "airspace", "has", "been", "shut", "down", "yet", "in", "Sydney", "but", "planes", "are", "avoiding", "the", "area", "."]
# ::lemmas [":", ":", "no", "confirmation", "airspace", "have", "be", "shut", "down", "yet", "in", "Sydney", "but", "plane", "be", "avoid", "the", "area", "."]
(c10-7 / shut-down-05
       :ARG1 (c10-8 / airspace
                    :mod (c10-6 / confirm-01))
       :time (c10-0 / yet)
       :location (c10-5 / city
                        :name (c10-2 / name
                                     :op1 "Sydney"))
       :concession (c10-1 / avoid-01
                          :ARG0 (c10-4 / plane)
                          :ARG1 (c10-3 / area))
       :polarity -)
