# ::snt Is this a taste of things to come? Coordinated attacks to sap police resources, when hundreds of police converge on one place.
# ::tokens ["Is", "this", "a", "taste", "of", "things", "to", "come", "?", "Coordinated", "attacks", "to", "sap", "police", "resources", ",", "when", "hundreds", "of", "police", "converge", "on", "one", "place", "."]
# ::lemmas ["be", "this", "a", "taste", "of", "thing", "to", "come", "?", "coordinate", "attack", "to", "sap", "police", "resource", ",", "when", "hundreds", "of", "police", "converge", "on", "one", "place", "."]
(c1-0 / multi-sentence
      :snt1 (c1-12 / taste
                   :polarity (c1-14 / amr-unknown)
                   :poss (c1-9 / thing
                               :ARG1-of (c1-6 / come-01))
                   :domain (c1-3 / this))
      :snt2 (c1-2 / attack-01
                  :ARG1-of (c1-5 / coordinate-01)
                  :purpose (c1-10 / sap-01
                                  :ARG1 (c1-7 / resource
                                              :poss (c1-4 / police)))
                  :time (c1-11 / converge-01
                               :ARG0 (c1-13 / police
                                            :quant (c1-8 / multiple
                                                         :op1 100))
                               :location (c1-1 / place
                                               :quant 1))))

# ::snt FML! Get those bastards and hang them and investigate israel behind it too
# ::tokens ["FML", "!", "Get", "those", "bastards", "and", "hang", "them", "and", "investigate", "israel", "behind", "it", "too"]
# ::lemmas ["FML", "!", "get", "those", "bastard", "and", "hang", "they", "and", "investigate", "israel", "behind", "it", "too"]
(c2-3 / multi-sentence
      :snt1 (c2-2 / fuck-01
                  :manner (c2-4 / loud)
                  :mode expressive)
      :snt2 (c2-14 / and
                   :op1 (c2-9 / get-05
                              :ARG0 (c2-1 / you)
                              :ARG1 (c2-5 / bastard
                                          :mod (c2-13 / that))
                              :mode imperative)
                   :op2 (c2-0 / hang-01
                              :ARG0 c2-1
                              :ARG1 c2-5
                              :mode imperative)
                   :op3 (c2-6 / investigate-01
                              :ARG0 c2-1
                              :ARG1 (c2-8 / country
                                          :name (c2-7 / name
                                                      :op1 "Israel"))
                              :location (c2-10 / behind
                                               :op1 (c2-11 / it))
                              :mod (c2-12 / too)
                              :mode imperative)))

# ::snt This absurd HOAX was scripted as a duo by Adam Lanza and Offcer Dorner "The men who never wuz!"
# ::tokens ["This", "absurd", "HOAX", "was", "scripted", "as", "a", "duo", "by", "Adam", "Lanza", "and", "Offcer", "Dorner", "\"", "The", "men", "who", "never", "wuz", "!", "\""]
# ::lemmas ["this", "absurd", "HOAX", "be", "script", "as", "a", "duo", "by", "Adam", "Lanza", "and", "Offcer", "Dorner", "\"", "the", "man", "who", "never", "wuz", "!", "\""]
(c3-11 / script-01
       :ARG0 (c3-14 / and
                    :op1 (c3-7 / person
                               :name (c3-5 / name
                                           :op1 "Adam"
                                           :op2 "Lanza"))
                    :op2 (c3-13 / person
                                :name (c3-6 / name
                                            :op1 "Offcer"
                                            :op2 "Dorner")))
       :ARG1 (c3-2 / publication
                   :name (c3-8 / name
                               :op1 "HOAX")
                   :mod (c3-4 / absurd)
                   :mod (c3-12 / this))
       :manner (c3-9 / duo)
       :ARG1-of (c3-1 / mean-01
                      :ARG2 (c3-10 / man
                                   :ARG0-of (c3-0 / wuz-01
                                                  :time (c3-3 / ever)
                                                  :polarity -))))

# ::snt great cartoonists responses via
# ::tokens ["great", "cartoonists", "responses", "via"]
# ::lemmas ["great", "cartoonist", "response", "via"]
(c4-0 / respond-01
      :ARG0 (c4-1 / cartoonist
                  :mod (c4-2 / great)))

# ::snt CID Printers where the French Terrorists are holed up
# ::tokens ["CID", "Printers", "where", "the", "French", "Terrorists", "are", "holed", "up"]
# ::lemmas ["CID", "Printers", "where", "the", "French", "Terrorists", "be", "hole", "up"]
(c5-5 / thing
      :name (c5-1 / name
                  :op1 "CID"
                  :op2 "Printer")
      :location-of (c5-0 / hole-up-01
                         :ARG1 (c5-4 / terrorist
                                     :mod (c5-3 / country
                                                :name (c5-2 / name
                                                            :op1 "France")))))
