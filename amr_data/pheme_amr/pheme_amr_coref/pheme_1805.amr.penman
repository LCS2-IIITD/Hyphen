# ::snt It's blank?
# ::tokens ["It", "'s", "blank", "?"]
# ::lemmas ["it", "be", "blank", "?"]
(c1-2 / blank
      :polarity (c1-1 / amr-unknown)
      :domain (c1-0 / it))

# ::snt Tell me more about that Willman guy. lol
# ::tokens ["Tell", "me", "more", "about", "that", "Willman", "guy", ".", "lol"]
# ::lemmas ["tell", "i", "more", "about", "that", "Willman", "guy", ".", "lol"]
(c2-10 / tell-01
       :ARG0 (c2-0 / you)
       :ARG1 (c2-9 / thing
                   :mod (c2-2 / more)
                   :topic (c2-8 / guy
                                :mod (c2-5 / that)
                                :mod (c2-6 / person
                                           :name (c2-4 / name
                                                       :op1 "Willman"))))
       :ARG2 (c2-3 / i)
       :ARG2-of (c2-1 / laugh-01
                      :ARG0 c2-3
                      :manner (c2-7 / loud)
                      :mode expressive)
       :mode imperative)

# ::snt the police car was from apparently and had no dash cam
# ::tokens ["the", "police", "car", "was", "from", "apparently", "and", "had", "no", "dash", "cam"]
# ::lemmas ["the", "police", "car", "be", "from", "apparently", "and", "have", "no", "dash", "cam"]
(c3-6 / and
      :op1 (c3-4 / car
                 :mod (c3-2 / police)
                 :source (c3-1 / apparent))
      :op2 (c3-0 / have-03
                 :ARG0 c3-4
                 :ARG1 (c3-3 / camera
                             :mod (c3-5 / dash))
                 :polarity -))

# ::snt I'm assuming you don't care about the ethnic cleansing in Iraq since you've completely ignored it so far...
# ::tokens ["I", "'m", "assuming", "you", "do", "n't", "care", "about", "the", "ethnic", "cleansing", "in", "Iraq", "since", "you", "'ve", "completely", "ignored", "it", "so", "far", "..."]
# ::lemmas ["i", "be", "assume", "you", "do", "not", "care", "about", "the", "ethnic", "cleansing", "in", "Iraq", "since", "you", "'ve", "completely", "ignore", "it", "so", "far", "..."]
(c4-10 / assume-02
       :ARG0 (c4-3 / i)
       :ARG1 (c4-6 / care-01
                   :ARG0 (c4-0 / you)
                   :ARG1 (c4-5 / cleanse-01
                               :ARG1 (c4-2 / ethnic)
                               :location (c4-8 / country
                                               :name (c4-4 / name
                                                           :op1 "Iraq")))
                   :polarity -)
       :ARG1-of (c4-11 / cause-01
                       :ARG0 (c4-7 / ignore-01
                                   :ARG0 c4-0
                                   :ARG1 c4-5
                                   :ARG1-of (c4-1 / complete-02)
                                   :time (c4-9 / so-far))))

# ::snt highway patrol just tryin to spew they propaganda to put people back where they can control them again
# ::tokens ["highway", "patrol", "just", "tryin", "to", "spew", "they", "propaganda", "to", "put", "people", "back", "where", "they", "can", "control", "them", "again"]
# ::lemmas ["highway", "patrol", "just", "tryin", "to", "spew", "they", "propaganda", "to", "put", "people", "back", "where", "they", "can", "control", "they", "again"]
(c5-10 / try-01
       :ARG0 (c5-6 / person
                   :ARG0-of (c5-11 / patrol-01
                                   :ARG1 (c5-0 / highway)))
       :ARG1 (c5-8 / spew-01
                   :ARG0 c5-6
                   :ARG1 (c5-2 / propaganda
                               :poss c5-6)
                   :purpose (c5-9 / put-01
                                  :ARG0 c5-6
                                  :ARG1 (c5-5 / person)
                                  :ARG2 (c5-3 / back
                                              :location-of (c5-4 / possible-01
                                                                 :ARG1 (c5-7 / control-01
                                                                             :ARG0 c5-6
                                                                             :ARG1 c5-5
                                                                             :mod (c5-12 / again))))))
       :mod (c5-1 / just))

# ::snt po lil tink tink
# ::tokens ["po", "lil", "tink", "tink"]
# ::lemmas ["po", "lil", "tink", "tink"]
(c7-1 / tink-01
      :mod (c7-0 / little)
      :mode expressive)

# ::snt Ya gotta be kidding me! That's it?
# ::tokens ["Ya", "got", "ta", "be", "kidding", "me", "!", "That", "'s", "it", "?"]
# ::lemmas ["Ya", "got", "to", "be", "kid", "i", "!", "that", "be", "it", "?"]
(c8-1 / multi-sentence
      :snt1 (c8-5 / kid-01
                  :ARG0 (c8-0 / you)
                  :ARG1 (c8-3 / i))
      :snt2 (c8-2 / be-it-07
                  :ARG1 (c8-4 / that)
                  :polarity (c8-6 / amr-unknown)))

# ::snt Many are saying the so called footage is months old &amp; therefore relevant to the events of that day
# ::tokens ["Many", "are", "saying", "the", "so", "called", "footage", "is", "months", "old", "&", "amp", ";", "therefore", "relevant", "to", "the", "events", "of", "that", "day"]
# ::lemmas ["many", "be", "say", "the", "so", "call", "footage", "be", "months", "old", "&", "amp", ";", "therefore", "relevant", "to", "the", "event", "of", "that", "day"]
(c9-13 / say-01
       :ARG0 (c9-7 / person
                   :quant (c9-1 / many))
       :ARG1 (c9-15 / and
                    :op1 (c9-5 / age-01
                               :ARG1 (c9-0 / footage
                                           :mod (c9-3 / so-called))
                               :ARG2 (c9-8 / multiple
                                           :op1 (c9-14 / temporal-quantity
                                                       :unit (c9-2 / month)
                                                       :quant 1)))
                    :op2 (c9-6 / amp)
                    :ARG0-of (c9-9 / cause-01
                                   :ARG1 (c9-10 / relevant-01
                                                :ARG1 c9-0
                                                :ARG2 (c9-4 / event
                                                            :time (c9-11 / day
                                                                         :mod (c9-12 / that)))))))

# ::snt I uploaded it to PDF.yt
# ::tokens ["I", "uploaded", "it", "to", "PDF.yt"]
# ::lemmas ["i", "upload", "it", "to", "pdf.yt"]
(c12-1 / post-01
       :ARG0 (c12-3 / i)
       :ARG1 (c12-2 / it)
       :ARG2 (c12-0 / url-entity
                    :value "PDF.yt"))

# ::snt KendrickJohnsons organs were stolen in georgia;Cheny stole heart Nimrods Tombme1 stole purchased humans Cash Build America
# ::tokens ["KendrickJohnsons", "organs", "were", "stolen", "in", "georgia;Cheny", "stole", "heart", "Nimrods", "Tombme1", "stole", "purchased", "humans", "Cash", "Build", "America"]
# ::lemmas ["kendrickjohnson", "organ", "be", "steal", "in", "georgia;Cheny", "stole", "heart", "Nimrods", "Tombme1", "stole", "purchase", "human", "Cash", "Build", "America"]
(c13-2 / multi-sentence
       :snt1 (c13-14 / steal-01
                     :ARG1 (c13-3 / organ
                                  :part-of (c13-8 / person
                                                  :name (c13-6 / name
                                                               :op1 "KendrickJohnsons")))
                     :location (c13-10 / country
                                       :name (c13-7 / name
                                                    :op1 "Georgia")))
       :snt2 (c13-4 / steal-01
                    :ARG0 (c13-9 / country
                                 :name (c13-11 / name
                                               :op1 "Cheny"))
                    :ARG1 (c13-0 / heart)
                    :ARG2 (c13-13 / company
                                  :name (c13-12 / name
                                                :op1 "Nimrods"
                                                :op2 "Tombme1")))
       :snt3 (c13-1 / steal-01
                    :ARG0 (c13-17 / company
                                  :name (c13-5 / name
                                               :op1 "Cash"
                                               :op2 "Build"
                                               :op3 "America"))
                    :ARG1 (c13-16 / human
                                  :ARG1-of (c13-15 / purchase-01))))

# ::snt "redacted" a tried and trued method used in the injustice system God bless the hackers!!!
# ::tokens ["\"", "redacted", "\"", "a", "tried", "and", "trued", "method", "used", "in", "the", "injustice", "system", "God", "bless", "the", "hackers", "!", "!", "!"]
# ::lemmas ["\"", "redact", "\"", "a", "tried", "and", "trued", "method", "use", "in", "the", "injustice", "system", "God", "bless", "the", "hacker", "!", "!", "!"]
(c14-4 / bless-01
       :ARG0 (c14-6 / person
                    :name (c14-5 / name
                                 :op1 "God"))
       :ARG1 (c14-12 / person
                     :ARG0-of (c14-0 / hack-04))
       :ARG1-of (c14-8 / cause-01
                       :ARG0 (c14-7 / redact-01
                                    :ARG1 (c14-2 / method
                                                 :ARG1-of (c14-11 / try-01)
                                                 :ARG1-of (c14-9 / true-00)
                                                 :ARG1-of (c14-3 / use-01
                                                                 :location (c14-10 / system
                                                                                   :mod (c14-1 / justice
                                                                                               :polarity -))))))
       :mode expressive)

# ::snt so moral of story is don't be a thief, don't assault store workers and cops = you don't get shot by cops
# ::tokens ["so", "moral", "of", "story", "is", "do", "n't", "be", "a", "thief", ",", "do", "n't", "assault", "store", "workers", "and", "cops", "=", "you", "do", "n't", "get", "shot", "by", "cops"]
# ::lemmas ["so", "moral", "of", "story", "be", "do", "not", "be", "a", "thief", ",", "do", "not", "assault", "store", "worker", "and", "cop", "=", "you", "do", "not", "get", "shoot", "by", "cop"]
(c15-14 / and
        :op1 (c15-8 / person
                    :ARG0-of (c15-12 / steal-01)
                    :domain (c15-0 / you)
                    :polarity -)
        :op2 (c15-6 / assault-01
                    :ARG0 c15-0
                    :ARG1 (c15-7 / and
                                 :op1 (c15-13 / person
                                              :ARG0-of (c15-1 / work-01
                                                              :ARG2 (c15-5 / store)))
                                 :op2 (c15-10 / cop))
                    :ARG1-of (c15-9 / cause-01
                                    :ARG0 (c15-2 / shoot-02
                                                 :ARG0 (c15-11 / cop)
                                                 :ARG1 c15-0
                                                 :polarity -))
                    :polarity -
                    :mode imperative)
        :domain (c15-4 / story
                       :ARG1-of (c15-3 / moral-02)))

# ::snt at :54 he said he arrived on the scene but if you look at the video at :54 dude was still there
# ::tokens ["at", ":", "54", "he", "said", "he", "arrived", "on", "the", "scene", "but", "if", "you", "look", "at", "the", "video", "at", ":", "54", "dude", "was", "still", "there"]
# ::lemmas ["at", ":", "54", "he", "say", "he", "arrive", "on", "the", "scene", "but", "if", "you", "look", "at", "the", "video", "at", ":", "54", "dude", "be", "still", "there"]
(c16-8 / contrast-01
       :ARG1 (c16-9 / say-01
                    :ARG0 (c16-0 / he)
                    :ARG1 (c16-11 / arrive-01
                                  :ARG1 c16-0
                                  :ARG4 (c16-5 / scene))
                    :time (c16-7 / date-entity
                                 :time "54:54"))
       :ARG2 (c16-2 / dude
                    :location (c16-10 / there
                                      :mod (c16-3 / still))
                    :condition (c16-4 / look-01
                                      :ARG0 (c16-1 / you)
                                      :ARG1 (c16-6 / video
                                                   :time c16-7))))

# ::snt We saw what we saw let do them, Detroit Stealing Water/cln air all way2Bank
# ::tokens ["We", "saw", "what", "we", "saw", "let", "do", "them", ",", "Detroit", "Stealing", "Water", "/", "cln", "air", "all", "way2Bank"]
# ::lemmas ["we", "see", "what", "we", "see", "let", "do", "they", ",", "Detroit", "Stealing", "Water", "/", "cln", "air", "all", "way2bank"]
(c17-3 / multi-sentence
       :snt1 (c17-15 / see-01
                     :ARG0 (c17-0 / we)
                     :ARG1 (c17-16 / thing
                                   :ARG1-of (c17-8 / see-01
                                                   :ARG0 c17-0)))
       :snt2 (c17-2 / let-01
                    :ARG0 (c17-10 / we)
                    :ARG1 (c17-12 / do-02
                                  :ARG0 (c17-1 / you)
                                  :ARG1 (c17-14 / they))
                    :mode imperative)
       :snt3 (c17-4 / steal-01
                    :ARG0 (c17-13 / city
                                  :name (c17-11 / name
                                                :op1 "Detroit"))
                    :ARG1 (c17-7 / slash
                                 :op1 (c17-5 / water)
                                 :op2 (c17-17 / air)))
       :snt4 (c17-6 / bank
                    :name c17-11
                    :op1 "2Bank")
       :extent (c17-9 / all-the-way))

# ::snt The entire report was redacted ?
# ::tokens ["The", "entire", "report", "was", "redacted", "?"]
# ::lemmas ["the", "entire", "report", "be", "redact", "?"]
(c18-1 / redraw-01
       :polarity (c18-2 / amr-unknown)
       :ARG1 (c18-3 / report
                    :mod (c18-0 / entire)))

# ::snt i heard the dude in the store had sandels but brown died with sneakers on
# ::tokens ["i", "heard", "the", "dude", "in", "the", "store", "had", "sandels", "but", "brown", "died", "with", "sneakers", "on"]
# ::lemmas ["i", "hear", "the", "dude", "in", "the", "store", "have", "sandel", "but", "brown", "die", "with", "sneaker", "on"]
(c20-0 / hear-01
       :ARG0 (c20-5 / i)
       :ARG1 (c20-9 / contrast-01
                    :ARG1 (c20-11 / have-03
                                  :ARG0 (c20-8 / dude
                                               :location (c20-10 / store))
                                  :ARG1 (c20-4 / sandal))
                    :ARG2 (c20-1 / die-01
                                 :ARG1 (c20-7 / person
                                              :name (c20-6 / name
                                                           :op1 "brown"))
                                 :manner (c20-3 / on
                                                :op1 (c20-2 / sneaker)))))

# ::snt I can't see this stuff on my smart phone (no PC). Has anyone compared clothes vs what Brown's body had on?
# ::tokens ["I", "ca", "n't", "see", "this", "stuff", "on", "my", "smart", "phone", "(", "no", "PC", ")", ".", "Has", "anyone", "compared", "clothes", "vs", "what", "Brown", "'s", "body", "had", "on", "?"]
# ::lemmas ["i", "can", "not", "see", "this", "stuff", "on", "my", "smart", "phone", "(", "no", "pc", ")", ".", "have", "anyone", "compare", "clothe", "vs", "what", "Brown", "'s", "body", "have", "on", "?"]
(c21-0 / multi-sentence
       :snt1 (c21-1 / possible-01
                    :ARG1 (c21-3 / see-01
                                 :ARG0 (c21-14 / i)
                                 :ARG1 (c21-9 / stuff
                                              :mod (c21-18 / this))
                                 :instrument (c21-4 / phone
                                                    :ARG1-of (c21-16 / smart-06)
                                                    :poss c21-14
                                                    :ARG1-of (c21-11 / mean-01
                                                                     :ARG2 (c21-6 / have-03
                                                                                  :ARG0 c21-14
                                                                                  :ARG1 (c21-17 / computer
                                                                                                :mod (c21-7 / politics))
                                                                                  :polarity -))))
                    :polarity -)
       :snt2 (c21-2 / compare-01
                    :ARG0 (c21-5 / anyone)
                    :ARG1 (c21-15 / clothes)
                    :ARG2 (c21-8 / body
                                 :poss (c21-12 / person
                                               :name (c21-10 / name
                                                             :op1 "Brown")))
                    :polarity (c21-13 / amr-unknown)))

# ::snt : Full *Redacted* police report on and
# ::tokens [":", "Full", "*", "Redacted", "*", "police", "report", "on", "and"]
# ::lemmas [":", "full", "*", "redacted", "*", "police", "report", "on", "and"]
(c22-4 / and
       :op1 (c22-0 / full-09
                   :ARG1 (c22-3 / report-01
                                :ARG0 (c22-2 / police)))
       :op2 (c22-1 / redact-01
                   :ARG1 c22-3))

# ::snt An acceptance of this is a problem of our nation where property is of more value than a life. A core of racism
# ::tokens ["An", "acceptance", "of", "this", "is", "a", "problem", "of", "our", "nation", "where", "property", "is", "of", "more", "value", "than", "a", "life", ".", "A", "core", "of", "racism"]
# ::lemmas ["an", "acceptance", "of", "this", "be", "a", "problem", "of", "our", "nation", "where", "property", "be", "of", "more", "value", "than", "a", "life", ".", "a", "core", "of", "racism"]
(c23-3 / multi-sentence
       :snt1 (c23-6 / problem
                    :domain (c23-12 / accept-01
                                    :ARG1 (c23-10 / this))
                    :poss (c23-4 / nation
                                 :poss (c23-1 / we)
                                 :location-of (c23-5 / value-01
                                                     :ARG1 (c23-11 / property)
                                                     :ARG2-of (c23-0 / have-degree-91
                                                                     :ARG1 c23-11
                                                                     :ARG3 (c23-7 / more)
                                                                     :ARG4 (c23-2 / life)))))
       :snt2 (c23-8 / core
                    :mod (c23-9 / racism)))

# ::snt Don't remember the original details saying cop was investigating robbery. He stopped to tell them get on sidewalk.
# ::tokens ["Do", "n't", "remember", "the", "original", "details", "saying", "cop", "was", "investigating", "robbery", ".", "He", "stopped", "to", "tell", "them", "get", "on", "sidewalk", "."]
# ::lemmas ["do", "not", "remember", "the", "original", "detail", "say", "cop", "be", "investigate", "robbery", ".", "he", "stop", "to", "tell", "they", "get", "on", "sidewalk", "."]
(c24-2 / multi-sentence
       :snt1 (c24-8 / remember-01
                    :ARG0 (c24-5 / i)
                    :ARG1 (c24-7 / detail
                                 :mod (c24-3 / original)
                                 :ARG0-of (c24-12 / say-01
                                                  :ARG1 (c24-9 / investigate-01
                                                               :ARG0 (c24-10 / cop)
                                                               :ARG1 (c24-6 / rob-01))))
                    :polarity -)
       :snt2 (c24-4 / stop-01
                    :ARG0 (c24-0 / he)
                    :purpose (c24-14 / tell-01
                                     :ARG0 c24-0
                                     :ARG1 (c24-11 / get-05
                                                   :ARG1 (c24-13 / they)
                                                   :ARG2 (c24-1 / sidewalk))
                                     :ARG2 c24-13)))

# ::snt : Full *Redacted* police report on and
# ::tokens [":", "Full", "*", "Redacted", "*", "police", "report", "on", "and"]
# ::lemmas [":", "full", "*", "redacted", "*", "police", "report", "on", "and"]
(c25-4 / and
       :op1 (c25-0 / full-09
                   :ARG1 (c25-3 / report-01
                                :ARG0 (c25-2 / police)))
       :op2 (c25-1 / redact-01
                   :ARG1 c25-3))

# ::snt exactly noooow they want to say he was trying to arrest him for robbery smh
# ::tokens ["exactly", "noooow", "they", "want", "to", "say", "he", "was", "trying", "to", "arrest", "him", "for", "robbery", "smh"]
# ::lemmas ["exactly", "noooow", "they", "want", "to", "say", "he", "be", "try", "to", "arrest", "he", "for", "robbery", "smh"]
(c26-1 / want-01
       :ARG0 (c26-7 / they)
       :ARG1 (c26-6 / say-01
                    :ARG0 c26-7
                    :ARG1 (c26-5 / try-01
                                 :ARG0 (c26-0 / he)
                                 :ARG1 (c26-8 / arrest-01
                                              :ARG0 c26-7
                                              :ARG1 c26-0
                                              :ARG2 (c26-4 / rob-01
                                                           :ARG0 c26-0))))
       :mod (c26-2 / exact)
       :mod (c26-3 / smh
                   :mode expressive))

# ::snt This is what they are showing.
# ::tokens ["This", "is", "what", "they", "are", "showing", "."]
# ::lemmas ["this", "be", "what", "they", "be", "show", "."]
(c27-0 / show-01
       :ARG0 (c27-1 / they)
       :ARG1 (c27-2 / this))

# ::snt I think its fishy Never seen a robbery take place like that but w/e The cop didnt know about the robbery
# ::tokens ["I", "think", "its", "fishy", "Never", "seen", "a", "robbery", "take", "place", "like", "that", "but", "w", "/", "e", "The", "cop", "did", "nt", "know", "about", "the", "robbery"]
# ::lemmas ["i", "think", "its", "fishy", "never", "see", "a", "robbery", "take", "place", "like", "that", "but", "w", "/", "e", "the", "cop", "do", "not", "know", "about", "the", "robbery"]
(c28-12 / think-01
        :ARG0 (c28-4 / i)
        :ARG1 (c28-1 / fishy
                     :domain (c28-9 / it)
                     :ARG1-of (c28-8 / contrast-01
                                     :ARG2 (c28-11 / see-01
                                                   :ARG0 c28-4
                                                   :ARG1 (c28-7 / rob-01
                                                                :ARG1-of (c28-5 / resemble-01
                                                                                :ARG2 (c28-3 / rob-01)))
                                                   :time (c28-2 / ever)
                                                   :polarity -)))
        :condition (c28-6 / know-01
                          :ARG0 (c28-10 / cop)
                          :ARG1 (c28-0 / rob-01)
                          :polarity -))

# ::snt most likely the will have to be cancelled
# ::tokens ["most", "likely", "the", "will", "have", "to", "be", "cancelled"]
# ::lemmas ["most", "likely", "the", "will", "have", "to", "be", "cancel"]
(c29-1 / likely-01
       :ARG1 (c29-3 / obligate-01
                    :ARG2 (c29-5 / cancel-01
                                 :ARG1 (c29-4 / event)))
       :ARG2-of (c29-0 / have-degree-91
                       :ARG1 c29-3
                       :ARG3 (c29-2 / most)))

# ::snt COP says Mon Mikes friend wasnt there thats y he wasnt spoken at st now shows he was w Mike at store CATCH their lies FOCUS
# ::tokens ["COP", "says", "Mon", "Mikes", "friend", "was", "nt", "there", "that", "s", "y", "he", "was", "nt", "spoken", "at", "st", "now", "shows", "he", "was", "w", "Mike", "at", "store", "CATCH", "their", "lies", "FOCUS"]
# ::lemmas ["COP", "say", "Mon", "Mikes", "friend", "be", "not", "there", "that", "s", "y", "he", "be", "not", "speak", "at", "st", "now", "show", "he", "be", "w", "Mike", "at", "store", "CATCH", "their", "lie", "FOCUS"]
(c30-0 / multi-sentence
       :snt1 (c30-2 / say-01
                    :ARG0 (c30-1 / publication
                                 :name (c30-11 / name
                                               :op1 "COP"))
                    :ARG1 (c30-8 / be-located-at-91
                                 :ARG1 (c30-3 / person
                                              :ARG0-of (c30-4 / have-rel-role-91
                                                              :ARG1 (c30-7 / person
                                                                           :name (c30-15 / name
                                                                                         :op1 "Mon"
                                                                                         :op2 "Mikes"))
                                                              :ARG2 (c30-5 / friend)))
                                 :ARG2 (c30-18 / there)
                                 :polarity -))
       :snt2 (c30-10 / speak-01
                     :ARG1 c30-7
                     :location (c30-13 / store)
                     :ARG0-of (c30-9 / show-01
                                     :ARG1 c30-8
                                     :ARG1 c30-7
                                     :ARG2 c30-13)
                     :polarity -)
       :snt3 (c30-16 / catch-03
                     :ARG0 (c30-12 / you)
                     :ARG1 (c30-6 / lie-08
                                  :ARG0 (c30-17 / they))
                     :mod (c30-14 / fucking
                                  :mode expressive)
                     :mode imperative))

# ::snt one thing that makes no since is he supposedly stole a box of blunts it said was worth but last the last box of swishers
# ::tokens ["one", "thing", "that", "makes", "no", "since", "is", "he", "supposedly", "stole", "a", "box", "of", "blunts", "it", "said", "was", "worth", "but", "last", "the", "last", "box", "of", "swishers"]
# ::lemmas ["one", "thing", "that", "make", "no", "since", "be", "he", "supposedly", "steal", "a", "box", "of", "blunt", "it", "say", "be", "worth", "but", "last", "the", "last", "box", "of", "swisher"]
(c31-11 / contrast-01
        :ARG1 (c31-13 / steal-01
                      :ARG0 (c31-0 / he)
                      :ARG1 (c31-6 / box
                                   :ARG1-of (c31-1 / worth-01
                                                   :ARG2 (c31-12 / blunts
                                                                 :ARG1-of (c31-8 / say-01
                                                                                 :ARG0 c31-0))
                                                   :ARG1-of (c31-3 / suppose-01
                                                                   :ARG1 c31-13))))
        :ARG2 (c31-7 / steal-01
                     :ARG0 c31-0
                     :ARG1 (c31-14 / box
                                   :mod (c31-4 / last)
                                   :consist-of (c31-15 / thing
                                                       :ARG2-of (c31-9 / ishers-01))))
        :ARG0-of (c31-5 / make-01
                        :ARG1 (c31-10 / no)
                        :time (c31-2 / since)
                        :polarity -))

# ::snt I bought was so where do the cops get from cigars that cost less then bucks
# ::tokens ["I", "bought", "was", "so", "where", "do", "the", "cops", "get", "from", "cigars", "that", "cost", "less", "then", "bucks"]
# ::lemmas ["i", "buy", "be", "so", "where", "do", "the", "cop", "get", "from", "cigar", "that", "cost", "less", "then", "buck"]
(c32-6 / get-01
       :ARG0 (c32-5 / cop)
       :ARG2 (c32-4 / cigar
                    :ARG1-of (c32-8 / cost-01
                                    :ARG2 (c32-0 / less-than
                                                 :op1 (c32-1 / monetary-quantity
                                                             :unit (c32-7 / dollar)
                                                             :quant 1))))
       :ARG3 (c32-9 / amr-unknown)
       :ARG1-of (c32-2 / buy-01
                       :ARG0 (c32-3 / i)))

# ::snt Yeah. Apparently ..now he's a &amp; a ..
# ::tokens ["Yeah", ".", "Apparently", "..", "now", "he", "'s", "a", "&", "amp", ";", "a", ".."]
# ::lemmas ["yeah", ".", "apparently", "..", "now", "he", "be", "a", "&", "amp", ";", "a", ".."]
(c33-5 / and
       :op1 (c33-1 / affair-01
                   :ARG0 (c33-0 / he)
                   :time (c33-2 / now))
       :op2 (c33-3 / amphetamine
                   :domain c33-0
                   :time c33-2)
       :ARG1-of (c33-4 / appear-02))

# ::snt Typical..Let's dirty up the victim ..and by way excuse shooting and KILLING what was still...an UNARMED person.
# ::tokens ["Typical", "..", "Let", "'s", "dirty", "up", "the", "victim", "..", "and", "by", "way", "excuse", "shooting", "and", "KILLING", "what", "was", "still", "...", "an", "UNARMED", "person", "."]
# ::lemmas ["typical", "..", "let", "us", "dirty", "up", "the", "victim", "..", "and", "by", "way", "excuse", "shooting", "and", "kill", "what", "be", "still", "...", "an", "unarmed", "person", "."]
(c34-12 / typical-02
        :ARG1 (c34-13 / and
                      :op1 (c34-1 / let-01
                                  :ARG0 (c34-0 / we)
                                  :ARG1 (c34-10 / dirty-up-02
                                                :ARG0 c34-0
                                                :ARG1 (c34-8 / victim))
                                  :mode imperative)
                      :op2 (c34-4 / excuse-01
                                  :ARG0 c34-0
                                  :ARG1 (c34-6 / and
                                               :op1 (c34-11 / shoot-02
                                                            :ARG0 c34-0)
                                               :op2 (c34-7 / kill-01
                                                           :ARG0 c34-0
                                                           :ARG1 (c34-9 / person
                                                                        :ARG1-of (c34-5 / single-02
                                                                                        :polarity -)
                                                                        :mod (c34-2 / still)
                                                                        :domain c34-8)))
                                  :mod (c34-3 / by-the-way)
                                  :mode imperative)))

# ::snt How much more proof is needed that (a) all of us need to stay on like hawks (b) Police Chief must go.
# ::tokens ["How", "much", "more", "proof", "is", "needed", "that", "(", "a", ")", "all", "of", "us", "need", "to", "stay", "on", "like", "hawks", "(", "b", ")", "Police", "Chief", "must", "go", "."]
# ::lemmas ["how", "much", "more", "proof", "be", "need", "that", "(", "a", ")", "all", "of", "we", "need", "to", "stay", "on", "like", "hawk", "(", "b", ")", "Police", "Chief", "must", "go", "."]
(c35-6 / need-01
       :ARG1 (c35-8 / prove-01
                    :ARG1 (c35-7 / need-01
                                 :ARG0 (c35-1 / we
                                              :mod (c35-14 / all))
                                 :ARG1 (c35-12 / stay-on-02
                                               :ARG1 c35-1
                                               :ARG1-of (c35-9 / resemble-01
                                                               :ARG2 (c35-0 / hawk)))
                                 :li "a")
                    :ARG0-of (c35-4 / obligate-01
                                    :ARG2 (c35-11 / go-02
                                                  :ARG0 (c35-13 / person
                                                                :ARG0-of (c35-2 / have-org-role-91
                                                                                :ARG1 (c35-3 / police)
                                                                                :ARG2 (c35-10 / chief))))
                                    :li "b")
                    :quant (c35-5 / amr-unknown)))

# ::snt I thought you announced it was somebody else? What happened?
# ::tokens ["I", "thought", "you", "announced", "it", "was", "somebody", "else", "?", "What", "happened", "?"]
# ::lemmas ["i", "think", "you", "announce", "it", "be", "somebody", "else", "?", "what", "happen", "?"]
(c36-1 / multi-sentence
       :snt1 (c36-7 / think-01
                    :ARG0 (c36-5 / i)
                    :ARG1 (c36-8 / announce-01
                                 :ARG0 (c36-0 / you)
                                 :ARG1 (c36-6 / somebody
                                              :mod (c36-3 / else))))
       :snt2 (c36-2 / event
                    :mod (c36-4 / amr-unknown)))

# ::snt Why haven't you released information about the police? It's very hard to trust anonymous.
# ::tokens ["Why", "have", "n't", "you", "released", "information", "about", "the", "police", "?", "It", "'s", "very", "hard", "to", "trust", "anonymous", "."]
# ::lemmas ["why", "have", "not", "you", "release", "information", "about", "the", "police", "?", "it", "be", "very", "hard", "to", "trust", "anonymous", "."]
(c38-2 / multi-sentence
       :snt1 (c38-8 / cause-01
                    :ARG0 (c38-10 / amr-unknown)
                    :ARG1 (c38-7 / release-01
                                 :ARG0 (c38-1 / you)
                                 :ARG1 (c38-4 / information
                                              :topic (c38-6 / police))
                                 :polarity -))
       :snt2 (c38-0 / hard-02
                    :ARG1 (c38-9 / trust-02
                                 :ARG1 (c38-3 / anonymous))
                    :degree (c38-5 / very)))

# ::snt yes, that's what the eye witness walking with brown said.
# ::tokens ["yes", ",", "that", "'s", "what", "the", "eye", "witness", "walking", "with", "brown", "said", "."]
# ::lemmas ["yes", ",", "that", "be", "what", "the", "eye", "witness", "walk", "with", "brown", "say", "."]
(c39-5 / say-01
       :ARG0 (c39-4 / person
                    :ARG0-of (c39-0 / witness-01
                                    :manner (c39-1 / eye))
                    :ARG0-of (c39-2 / walk-01
                                    :accompanier (c39-7 / person
                                                        :name (c39-3 / name
                                                                     :op1 "Brown"))))
       :ARG1 (c39-6 / that))

# ::snt all the interviews I've seen said there wasn't cameras installed but i may be wrong
# ::tokens ["all", "the", "interviews", "I", "'ve", "seen", "said", "there", "was", "n't", "cameras", "installed", "but", "i", "may", "be", "wrong"]
# ::lemmas ["all", "the", "interview", "i", "'ve", "see", "say", "there", "be", "not", "camera", "instal", "but", "i", "may", "be", "wrong"]
(c40-0 / have-concession-91
       :ARG1 (c40-5 / possible-01
                    :ARG1 (c40-1 / wrong-04
                                 :ARG1 (c40-4 / i)))
       :ARG2 (c40-8 / say-01
                    :ARG0 (c40-7 / interview-01
                                 :ARG1-of (c40-3 / see-01
                                                 :ARG0 c40-4)
                                 :mod (c40-9 / all))
                    :ARG1 (c40-2 / install-01
                                 :ARG1 (c40-6 / camera)
                                 :polarity -)))

# ::snt Innocent people rob convenience stores? Weird
# ::tokens ["Innocent", "people", "rob", "convenience", "stores", "?", "Weird"]
# ::lemmas ["innocent", "people", "rob", "convenience", "store", "?", "weird"]
(c41-1 / multi-sentence
       :snt1 (c41-4 / rob-01
                    :ARG0 (c41-3 / person
                                 :ARG1-of (c41-2 / innocent-01))
                    :ARG1 (c41-6 / store
                                 :mod (c41-5 / convenience)))
       :snt2 (c41-0 / weird))

# ::snt : Full *Redacted* police report on and
# ::tokens [":", "Full", "*", "Redacted", "*", "police", "report", "on", "and"]
# ::lemmas [":", "full", "*", "redacted", "*", "police", "report", "on", "and"]
(c42-4 / and
       :op1 (c42-0 / full-09
                   :ARG1 (c42-3 / report-01
                                :ARG0 (c42-2 / police)))
       :op2 (c42-1 / redact-01
                   :ARG1 c42-3))

# ::snt Tell that to Amadou Diallo.
# ::tokens ["Tell", "that", "to", "Amadou", "Diallo", "."]
# ::lemmas ["tell", "that", "to", "Amadou", "Diallo", "."]
(c43-4 / tell-01
       :ARG0 (c43-0 / you)
       :ARG1 (c43-3 / that)
       :ARG2 (c43-2 / person
                    :name (c43-1 / name
                                 :op1 "Amadou"
                                 :op2 "Diallo"))
       :mode imperative)

# ::snt Full *Redacted* police report on and
# ::tokens ["Full", "*", "Redacted", "*", "police", "report", "on", "and"]
# ::lemmas ["full", "*", "redacted", "*", "police", "report", "on", "and"]
(c44-5 / and
       :op1 (c44-4 / report-01
                   :ARG0 (c44-3 / police)
                   :ARG1-of (c44-0 / full-09)
                   :ARG1-of (c44-2 / redact-01))
       :op2 (c44-1 / report-01
                   :ARG0 c44-3))
