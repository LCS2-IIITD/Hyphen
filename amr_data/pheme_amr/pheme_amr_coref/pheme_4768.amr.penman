# ::snt I'm not surprised IN THE SLIGHTEST .
# ::tokens ["I", "'m", "not", "surprised", "IN", "THE", "SLIGHTEST", "."]
# ::lemmas ["i", "be", "not", "surprised", "in", "the", "slightest", "."]
(c1-0 / surprise-01
      :ARG1 (c1-2 / i)
      :degree (c1-1 / quite)
      :polarity -)

# ::snt Dear , as a libertarian, what do you think of the use of militarized police shown above?
# ::tokens ["Dear", ",", "as", "a", "libertarian", ",", "what", "do", "you", "think", "of", "the", "use", "of", "militarized", "police", "shown", "above", "?"]
# ::lemmas ["dear", ",", "as", "a", "libertarian", ",", "what", "do", "you", "think", "of", "the", "use", "of", "militarize", "police", "show", "above", "?"]
(c2-8 / think-01
      :ARG0 (c2-0 / you
                  :mod (c2-6 / dear)
                  :prep-as (c2-1 / libertarian))
      :ARG1 (c2-9 / amr-unknown)
      :ARG2 (c2-3 / use-01
                  :ARG1 (c2-5 / police
                              :ARG1-of (c2-2 / militarize-01))
                  :ARG1-of (c2-7 / show-01
                                 :location (c2-4 / above))))

# ::snt Seig Heil Y'all, present your papers
# ::tokens ["Seig", "Heil", "Y'all", ",", "present", "your", "papers"]
# ::lemmas ["Seig", "Heil", "Y'all", ",", "present", "your", "paper"]
(c3-1 / present-01
      :ARG0 (c3-0 / you
                  :mod (c3-3 / all))
      :ARG1 (c3-2 / paper
                  :poss c3-0)
      :mode imperative)

# ::snt I saw an open carry gun nut refuse to show ID and officer let him walk.
# ::tokens ["I", "saw", "an", "open", "carry", "gun", "nut", "refuse", "to", "show", "ID", "and", "officer", "let", "him", "walk", "."]
# ::lemmas ["i", "see", "an", "open", "carry", "gun", "nut", "refuse", "to", "show", "ID", "and", "officer", "let", "he", "walk", "."]
(c4-12 / see-01
       :ARG0 (c4-5 / i)
       :ARG1 (c4-13 / and
                    :op1 (c4-7 / refuse-01
                               :ARG0 (c4-6 / nut
                                           :mod (c4-9 / gun
                                                      :ARG1-of (c4-8 / carry-01)
                                                      :ARG1-of (c4-3 / open-06)))
                               :ARG1 (c4-4 / show-01
                                           :ARG0 c4-6
                                           :ARG1 (c4-10 / document-01
                                                        :ARG1 (c4-11 / identity))))
                    :op2 (c4-1 / let-01
                               :ARG0 (c4-2 / officer)
                               :ARG1 (c4-0 / walk-01
                                           :ARG0 c4-6))))

# ::snt I thought you where going to say "started asking if the Mcrib was back on menu"
# ::tokens ["I", "thought", "you", "where", "going", "to", "say", "\"", "started", "asking", "if", "the", "Mcrib", "was", "back", "on", "menu", "\""]
# ::lemmas ["i", "think", "you", "where", "go", "to", "say", "\"", "start", "ask", "if", "the", "Mcrib", "be", "back", "on", "menu", "\""]
(c5-10 / think-01
       :ARG0 (c5-4 / i)
       :ARG1 (c5-9 / say-01
                   :ARG0 (c5-0 / you)
                   :ARG1 (c5-3 / start-01
                               :ARG0 c5-0
                               :ARG1 (c5-11 / ask-01
                                            :ARG0 c5-0
                                            :ARG1 (c5-8 / truth-value
                                                        :polarity-of (c5-2 / be-located-at-91
                                                                           :ARG1 (c5-6 / restaurant
                                                                                       :name (c5-5 / name
                                                                                                   :op1 "McDonald's"))
                                                                           :ARG2 (c5-1 / menu)
                                                                           :mod (c5-7 / back)))))))

# ::snt constitutional violations galore
# ::tokens ["constitutional", "violations", "galore"]
# ::lemmas ["constitutional", "violation", "galore"]
(c6-2 / galore
      :domain (c6-0 / violate-01
                    :ARG1 (c6-1 / constitution)))

# ::snt What country do we live in again really this is start- feel lke a communist country
# ::tokens ["What", "country", "do", "we", "live", "in", "again", "really", "this", "is", "start-", "feel", "lke", "a", "communist", "country"]
# ::lemmas ["what", "country", "do", "we", "live", "in", "again", "really", "this", "be", "start-", "feel", "lke", "a", "communist", "country"]
(c7-3 / multi-sentence
      :snt1 (c7-2 / live-01
                  :ARG0 (c7-0 / we)
                  :location (c7-9 / country
                                  :mod (c7-13 / amr-unknown))
                  :mod (c7-5 / again)
                  :ARG1-of (c7-8 / real-04))
      :snt2 (c7-11 / start-01
                   :domain (c7-12 / this))
      :snt3 (c7-4 / feel-01
                  :ARG0 (c7-1 / you)
                  :ARG1 (c7-10 / country
                               :mod (c7-7 / political-movement
                                          :name (c7-6 / name
                                                      :op1 "communism"))
                               :domain c7-1)
                  :mode imperative))

# ::snt Thugs
# ::tokens ["Thugs"]
# ::lemmas ["thug"]
(c8-1 / person
      :ARG0-of (c8-0 / hug-01))

# ::snt Probably the only time white guys get the 'Papers please' treatment. FPD seems to be a bunch of Brown Shrits
# ::tokens ["Probably", "the", "only", "time", "white", "guys", "get", "the", "'", "Papers", "please", "'", "treatment", ".", "FPD", "seems", "to", "be", "a", "bunch", "of", "Brown", "Shrits"]
# ::lemmas ["probably", "the", "only", "time", "white", "guy", "get", "the", "'", "Papers", "please", "'", "treatment", ".", "FPD", "seem", "to", "be", "a", "bunch", "of", "Brown", "Shrits"]
(c9-2 / multi-sentence
      :snt1 (c9-9 / probable
                  :domain (c9-13 / treat-03
                                 :ARG1 (c9-10 / guy
                                              :ARG1-of (c9-0 / white-02))
                                 :ARG2 (c9-14 / paper
                                              :polite +)
                                 :mod (c9-5 / only)))
      :snt2 (c9-11 / seem-01
                   :ARG1 (c9-3 / person
                               :ARG1-of (c9-1 / liberal-02)
                               :domain (c9-12 / person
                                              :name (c9-7 / name
                                                          :op1 "FPD"))
                               :quant (c9-4 / bunch)
                               :mod (c9-6 / person
                                          :name (c9-8 / name
                                                      :op1 "Brown")))))

# ::snt Thats not SWAT.
# ::tokens ["That", "s", "not", "SWAT", "."]
# ::lemmas ["that", "s", "not", "SWAT", "."]
(c10-1 / weapon
       :ARG1-of (c10-0 / special-02)
       :domain (c10-2 / that
                      :polarity -))

# ::snt SWAT police just entered a McDonald's in and started asking journalists for ID (via )
# ::tokens ["SWAT", "police", "just", "entered", "a", "McDonald", "'s", "in", "and", "started", "asking", "journalists", "for", "ID", "(", "via", ")"]
# ::lemmas ["SWAT", "police", "just", "enter", "a", "McDonald", "'s", "in", "and", "start", "ask", "journalist", "for", "ID", "(", "via", ")"]
(c11-12 / and
        :op1 (c11-2 / enter-01
                    :ARG0 (c11-8 / police
                                 :mod (c11-10 / shit
                                              :mode expressive))
                    :ARG1 (c11-1 / building
                                 :name (c11-6 / name
                                              :op1 "McDonald's"))
                    :time (c11-0 / just))
        :op2 (c11-3 / start-01
                    :ARG0 c11-8
                    :ARG1 (c11-4 / ask-02
                                 :ARG0 c11-8
                                 :ARG1 (c11-9 / document-01
                                              :ARG1 (c11-5 / identity))
                                 :ARG2 (c11-11 / journalist))
                    :manner (c11-7 / via)))

# ::snt Many courts have ruled people can video/film cops in public. No press pass needed. WTF are those cops doin?
# ::tokens ["Many", "courts", "have", "ruled", "people", "can", "video", "/", "film", "cops", "in", "public", ".", "No", "press", "pass", "needed", ".", "WTF", "are", "those", "cops", "doin", "?"]
# ::lemmas ["many", "court", "have", "rule", "people", "can", "video", "/", "film", "cop", "in", "public", ".", "no", "press", "pass", "need", ".", "WTF", "be", "those", "cop", "doin", "?"]
(c12-0 / multi-sentence
       :snt1 (c12-13 / rule-01
                     :ARG0 (c12-18 / court
                                   :quant (c12-12 / many))
                     :ARG3 (c12-2 / possible-01
                                  :ARG1 (c12-5 / slash
                                               :op1 (c12-1 / video-01
                                                           :ARG0 (c12-6 / person)
                                                           :ARG1 (c12-3 / cop))
                                               :op2 (c12-8 / film-01
                                                           :ARG0 c12-6
                                                           :ARG1 (c12-15 / cop))
                                               :ARG1-of (c12-9 / public-02))))
       :snt2 (c12-11 / need-01
                     :ARG1 (c12-14 / pass
                                   :mod (c12-10 / press))
                     :polarity -)
       :snt3 (c12-4 / do-02
                    :ARG0 (c12-16 / cop
                                  :mod (c12-19 / that))
                    :ARG1 (c12-7 / amr-unknown)
                    :mod (c12-17 / fuck
                                 :mode expressive)))

# ::snt sounds like marshall law
# ::tokens ["sounds", "like", "marshall", "law"]
# ::lemmas ["sound", "like", "marshall", "law"]
(c13-0 / sound-01
       :ARG2 (c13-2 / law
                    :name (c13-1 / name
                                 :op1 "Marshall")))

# ::snt First question out of anyone's mouth should be "AM I BEING DETAINED?"
# ::tokens ["First", "question", "out", "of", "anyone", "'s", "mouth", "should", "be", "\"", "AM", "I", "BEING", "DETAINED", "?", "\""]
# ::lemmas ["First", "question", "out", "of", "anyone", "'s", "mouth", "should", "be", "\"", "am", "i", "be", "detain", "?", "\""]
(c14-6 / recommend-01
       :ARG1 (c14-2 / question-01
                    :ord (c14-1 / ordinal-entity
                                :value 1)
                    :ARG1-of (c14-4 / include-91
                                    :ARG2 (c14-0 / mouth
                                                 :part-of (c14-7 / anyone)))
                    :ARG1-of (c14-3 / ask-01
                                    :ARG0 c14-7
                                    :ARG1-of (c14-5 / request-confirmation-91))))

# ::snt and a big Mac meal
# ::tokens ["and", "a", "big", "Mac", "meal"]
# ::lemmas ["and", "a", "big", "Mac", "meal"]
(c16-4 / and
       :op2 (c16-1 / meal
                   :mod (c16-0 / food
                               :name (c16-3 / name
                                            :op1 "Mac")
                               :mod (c16-2 / big))))

# ::snt and if the answer is no? No ID, no answers, no nothing?
# ::tokens ["and", "if", "the", "answer", "is", "no", "?", "No", "ID", ",", "no", "answers", ",", "no", "nothing", "?"]
# ::lemmas ["and", "if", "the", "answer", "be", "no", "?", "no", "ID", ",", "no", "answer", ",", "no", "nothing", "?"]
(c17-0 / multi-sentence
       :snt2 (c17-11 / and
                     :op1 (c17-7 / document-01
                                 :ARG1 (c17-3 / identity)
                                 :polarity -)
                     :op2 (c17-10 / thing
                                  :ARG2-of (c17-2 / answer-01)
                                  :polarity -)
                     :op3 (c17-8 / thing
                                 :ARG2-of (c17-5 / answer-01)
                                 :polarity -)
                     :op4 (c17-4 / nothing)
                     :polarity (c17-9 / amr-unknown)
                     :snt1-of c17-0)
       :op2 (c17-1 / answer-01
                   :ARG2 (c17-6 / no)))

# ::snt Luckily this would never happen at Michelin -Star gourmet restaurants because this is America.
# ::tokens ["Luckily", "this", "would", "never", "happen", "at", "Michelin", "-Star", "gourmet", "restaurants", "because", "this", "is", "America", "."]
# ::lemmas ["luckily", "this", "would", "never", "happen", "at", "Michelin", "-star", "gourmet", "restaurant", "because", "this", "be", "America", "."]
(c18-1 / be-located-at-91
       :ARG1 (c18-10 / this)
       :ARG2 (c18-5 / restaurant
                    :mod (c18-7 / gourmet)
                    :mod (c18-6 / company
                                :name (c18-3 / name
                                             :op1 "Michelin-Star")))
       :manner (c18-0 / lucky)
       :ARG1-of (c18-8 / cause-01
                       :ARG0 (c18-9 / country
                                    :name (c18-4 / name
                                                 :op1 "America")
                                    :domain c18-10))
       :time (c18-2 / ever)
       :polarity -)

# ::snt WTAF MT : SWAT police just entered a McDonald's in , asking journalists for ID (via )
# ::tokens ["WTAF", "MT", ":", "SWAT", "police", "just", "entered", "a", "McDonald", "'s", "in", ",", "asking", "journalists", "for", "ID", "(", "via", ")"]
# ::lemmas ["WTAF", "MT", ":", "SWAT", "police", "just", "enter", "a", "McDonald", "'s", "in", ",", "ask", "journalist", "for", "ID", "(", "via", ")"]
(c19-12 / say-01
        :ARG0 (c19-9 / publication
                     :name (c19-7 / name
                                  :op1 "WTAF"))
        :ARG1 (c19-14 / and
                      :op1 (c19-4 / enter-01
                                  :ARG0 (c19-13 / police
                                                :ARG0-of (c19-0 / have-03
                                                                :ARG1 (c19-1 / weapon)))
                                  :ARG1 (c19-3 / building
                                               :name (c19-8 / name
                                                            :op1 "McDonald's"))
                                  :time (c19-2 / just))
                      :op2 (c19-5 / ask-02
                                  :ARG0 c19-13
                                  :ARG1 (c19-6 / identity
                                               :poss (c19-11 / journalist
                                                             :ARG2-of c19-5)))
                      :medium (c19-10 / via)))

# ::snt is that even legal? do you have to show ID on demand w/ no reason?
# ::tokens ["is", "that", "even", "legal", "?", "do", "you", "have", "to", "show", "ID", "on", "demand", "w/", "no", "reason", "?"]
# ::lemmas ["be", "that", "even", "legal", "?", "do", "you", "have", "to", "show", "ID", "on", "demand", "w/", "no", "reason", "?"]
(c20-3 / multi-sentence
       :snt1 (c20-2 / legal-02
                    :polarity (c20-12 / amr-unknown)
                    :ARG1 (c20-11 / that)
                    :mod (c20-5 / even))
       :snt2 (c20-4 / obligate-01
                    :ARG1 (c20-0 / you)
                    :ARG2 (c20-10 / show-01
                                  :ARG0 c20-0
                                  :ARG1 (c20-7 / document-01
                                               :ARG1 (c20-6 / identity))
                                  :ARG1-of (c20-1 / demand-01)
                                  :ARG1-of (c20-8 / cause-01
                                                  :ARG0 (c20-9 / reason
                                                               :polarity -)))))

# ::snt EVERY DAY FROM NOW ON WILL BE LET THE MOVEMENT BEGINPLEASE RETWEET
# ::tokens ["EVERY", "DAY", "FROM", "NOW", "ON", "WILL", "BE", "LET", "THE", "MOVEMENT", "BEGINPLEASE", "RETWEET"]
# ::lemmas ["every", "day", "from", "now", "ON", "will", "be", "let", "the", "MOVEMENT", "beginplease", "retweet"]
(c21-1 / let-01
       :ARG0 (c21-0 / you)
       :ARG1 (c21-6 / continue-01
                    :ARG1 (c21-2 / move-01))
       :time (c21-8 / after
                    :op1 (c21-3 / now)
                    :quant (c21-4 / multiple
                                  :op1 (c21-7 / temporal-quantity
                                              :unit (c21-5 / day)
                                              :quant 1)))
       :mode imperative)

# ::snt don't show em ID!
# ::tokens ["do", "n't", "show", "em", "ID", "!"]
# ::lemmas ["do", "not", "show", "em", "ID", "!"]
(c22-3 / show-01
       :ARG0 (c22-0 / you)
       :ARG1 (c22-2 / document-01
                    :ARG1 (c22-1 / identity
                                 :poss (c22-4 / they
                                              :ARG2-of c22-3)))
       :mode imperative
       :polarity -)

# ::snt not without "reasonable cause" to believe they are committing a crime
# ::tokens ["not", "without", "\"", "reasonable", "cause", "\"", "to", "believe", "they", "are", "committing", "a", "crime"]
# ::lemmas ["not", "without", "\"", "reasonable", "cause", "\"", "to", "believe", "they", "be", "commit", "a", "crime"]
(c23-0 / have-03
       :ARG1 (c23-3 / cause-01
                    :ARG0 (c23-1 / believe-01
                                 :ARG1 (c23-2 / commit-02
                                              :ARG0 (c23-6 / they)
                                              :ARG1 (c23-5 / crime-02)))
                    :ARG1-of (c23-4 / reasonable-02))
       :polarity -)

# ::snt pretty sure that is illegal
# ::tokens ["pretty", "sure", "that", "is", "illegal"]
# ::lemmas ["pretty", "sure", "that", "be", "illegal"]
(c24-0 / sure-02
       :ARG1 (c24-2 / legal-02
                    :ARG1 (c24-3 / that)
                    :polarity -)
       :degree (c24-1 / pretty))

# ::snt Do they think that this is some kind of video game????
# ::tokens ["Do", "they", "think", "that", "this", "is", "some", "kind", "of", "video", "game", "?", "?", "?", "?"]
# ::lemmas ["do", "they", "think", "that", "this", "be", "some", "kind", "of", "video", "game", "?", "?", "?", "?"]
(c25-6 / think-01
       :polarity (c25-7 / amr-unknown)
       :ARG0 (c25-4 / they)
       :ARG1 (c25-3 / game
                    :mod (c25-1 / video)
                    :mod (c25-0 / kind
                                :mod (c25-5 / some))
                    :domain (c25-2 / this)))

# ::snt I would call that govt sanctioned terrorism
# ::tokens ["I", "would", "call", "that", "govt", "sanctioned", "terrorism"]
# ::lemmas ["i", "would", "call", "that", "govt", "sanction", "terrorism"]
(c26-2 / call-01
       :ARG0 (c26-0 / i)
       :ARG1 (c26-5 / sanction-01
                    :ARG0 (c26-3 / government-organization
                                 :ARG0-of (c26-1 / govern-01))
                    :ARG1 (c26-6 / terrorism)
                    :mod (c26-4 / that)))

# ::snt yikes
# ::tokens ["yikes"]
# ::lemmas ["yike"]
(c27-0 / yikes)

# ::snt Naturally MT : SWAT just entered a McDonald's in &amp; asking journalists for ID (via )
# ::tokens ["Naturally", "MT", ":", "SWAT", "just", "entered", "a", "McDonald", "'s", "in", "&", "amp", ";", "asking", "journalists", "for", "ID", "(", "via", ")"]
# ::lemmas ["naturally", "MT", ":", "SWAT", "just", "enter", "a", "McDonald", "'s", "in", "&", "amp", ";", "ask", "journalist", "for", "ID", "(", "via", ")"]
(c28-1 / multi-sentence
       :snt1 (c28-11 / enter-01
                     :ARG0 (c28-4 / person
                                  :ARG0-of (c28-8 / have-org-role-91
                                                  :ARG1 (c28-13 / military
                                                                :name (c28-12 / name
                                                                              :op1 "SWAT"))))
                     :ARG1 (c28-10 / building
                                   :name (c28-18 / name
                                                 :op1 "McDonald's")
                                   :location (c28-7 / and
                                                    :op1 (c28-15 / inside)
                                                    :op2 (c28-17 / outside)))
                     :time (c28-0 / just)
                     :ARG1-of (c28-2 / natural-03))
       :snt2 (c28-14 / ask-02
                     :ARG0 c28-4
                     :ARG1 (c28-5 / document-01
                                  :ARG1 (c28-16 / identity))
                     :ARG2 (c28-6 / journalist)
                     :medium (c28-9 / language
                                    :name (c28-3 / name
                                                 :op1 "MT"))))

# ::snt . Looks like the fat fuck riot cop at the back has come in for a top up of food!
# ::tokens [".", "Looks", "like", "the", "fat", "fuck", "riot", "cop", "at", "the", "back", "has", "come", "in", "for", "a", "top", "up", "of", "food", "!"]
# ::lemmas [".", "look", "like", "the", "fat", "fuck", "riot", "cop", "at", "the", "back", "have", "come", "in", "for", "a", "top", "up", "of", "food", "!"]
(c29-0 / look-02
       :ARG1 (c29-7 / come-01
                    :ARG1 (c29-5 / cop
                                 :ARG0-of (c29-6 / riot-01)
                                 :mod (c29-1 / fuck
                                             :mode expressive)
                                 :ARG1-of (c29-4 / fat-03)
                                 :location (c29-2 / back))
                    :purpose (c29-8 / top-up-05
                                    :ARG0 c29-5
                                    :ARG1 (c29-3 / food))))

# ::snt . since when did cops require SWAT gear to enter a mcdonalds
# ::tokens [".", "since", "when", "did", "cops", "require", "SWAT", "gear", "to", "enter", "a", "mcdonalds"]
# ::lemmas [".", "since", "when", "do", "cop", "require", "SWAT", "gear", "to", "enter", "a", "mcdonald"]
(c30-5 / require-01
       :ARG0 (c30-6 / cop)
       :ARG1 (c30-7 / gear
                    :purpose (c30-0 / weapon
                                    :ARG2-of (c30-8 / special-02)))
       :purpose (c30-2 / enter-01
                       :ARG0 c30-6
                       :ARG1 (c30-1 / building
                                    :name (c30-4 / name
                                                 :op1 "McDonalds")))
       :time (c30-3 / since
                    :op1 (c30-9 / amr-unknown)))

# ::snt If the answer is NO, then LEAVE..no ID, no answers, no nothing.
# ::tokens ["If", "the", "answer", "is", "NO", ",", "then", "LEAVE", "..", "no", "ID", ",", "no", "answers", ",", "no", "nothing", "."]
# ::lemmas ["if", "the", "answer", "be", "no", ",", "then", "leave", "..", "no", "ID", ",", "no", "answer", ",", "no", "nothing", "."]
(c31-2 / multi-sentence
       :snt1 (c31-1 / leave-11
                    :ARG0 (c31-0 / you)
                    :condition (c31-9 / answer-01
                                      :ARG2 (c31-5 / no))
                    :mode imperative)
       :snt2 (c31-3 / and
                    :op1 (c31-8 / document-01
                                :ARG1 (c31-4 / identity)
                                :polarity -)
                    :op2 (c31-6 / answer-01
                                :polarity -)
                    :op3 (c31-7 / nothing)))

# ::snt is this real holy shit
# ::tokens ["is", "this", "real", "holy", "shit"]
# ::lemmas ["be", "this", "real", "holy", "shit"]
(c32-2 / shit
       :polarity (c32-4 / amr-unknown)
       :mod (c32-0 / holy)
       :ARG1-of (c32-1 / real-04)
       :domain (c32-3 / this))

# ::snt Militarization of America!
# ::tokens ["Militarization", "of", "America", "!"]
# ::lemmas ["Militarization", "of", "America", "!"]
(c33-2 / militarize-01
       :ARG1 (c33-1 / country
                    :name (c33-0 / name
                                 :op1 "America")))

# ::snt Trying to shut down the press, not giving public servants name smells like a cover up at WhackArnolds
# ::tokens ["Trying", "to", "shut", "down", "the", "press", ",", "not", "giving", "public", "servants", "name", "smells", "like", "a", "cover", "up", "at", "WhackArnolds"]
# ::lemmas ["try", "to", "shut", "down", "the", "press", ",", "not", "give", "public", "servant", "name", "smell", "like", "a", "cover", "up", "at", "WhackArnolds"]
(c34-10 / smell-02
        :ARG1 (c34-13 / and
                      :op1 (c34-11 / try-01
                                   :ARG1 (c34-3 / shut-down-05
                                                :ARG1 (c34-6 / press)))
                      :op2 (c34-8 / give-01
                                  :ARG1 (c34-4 / name
                                               :poss (c34-12 / person
                                                             :ARG0-of (c34-0 / serve-01)
                                                             :ARG1-of (c34-2 / public-02)
                                                             :ARG2-of c34-8))
                                  :polarity -))
        :ARG2 (c34-9 / thing
                     :ARG1-of (c34-7 / cover-up-04))
        :location (c34-1 / location
                         :name (c34-5 / name
                                      :op1 "WhackArnolds")))

# ::snt what the heck? So much for keeping things calm...
# ::tokens ["what", "the", "heck", "?", "So", "much", "for", "keeping", "things", "calm", "..."]
# ::lemmas ["what", "the", "heck", "?", "so", "much", "for", "keep", "thing", "calm", "..."]
(c35-1 / multi-sentence
       :snt1 (c35-7 / amr-unknown
                    :mod (c35-0 / heck
                                :mode expressive))
       :snt2 (c35-2 / much
                    :degree (c35-4 / so)
                    :topic (c35-6 / keep-02
                                  :ARG1 (c35-3 / calm-03
                                               :ARG1 (c35-5 / thing)))))

# ::snt maybe can solve this? : SWAT enter McDonald's , asking jornos4ID (via )
# ::tokens ["maybe", "can", "solve", "this", "?", ":", "SWAT", "enter", "McDonald", "'s", ",", "asking", "jornos4ID", "(", "via", ")"]
# ::lemmas ["maybe", "can", "solve", "this", "?", ":", "SWAT", "enter", "McDonald", "'s", ",", "ask", "jornos4ID", "(", "via", ")"]
(c36-2 / multi-sentence
       :snt1 (c36-8 / possible-01
                    :ARG1 (c36-12 / solve-01
                                  :ARG1 (c36-13 / this))
                    :polarity (c36-15 / amr-unknown))
       :snt2 (c36-5 / and
                    :op1 (c36-4 / enter-01
                                :ARG0 (c36-14 / person
                                              :ARG0-of (c36-0 / have-org-role-91
                                                              :ARG2 (c36-1 / weapon)
                                                              :ARG3 (c36-11 / tactic)))
                                :ARG1 (c36-10 / company
                                              :name (c36-6 / name
                                                           :op1 "McDonald's")))
                    :op2 (c36-7 / ask-02
                                :ARG0 c36-14
                                :ARG2 (c36-3 / person
                                             :name (c36-9 / name
                                                          :op1 "jornos4ID")))))

# ::snt I think it should be compulsory "McDonalds"
# ::tokens ["I", "think", "it", "should", "be", "compulsory", "\"", "McDonalds", "\""]
# ::lemmas ["i", "think", "it", "should", "be", "compulsory", "\"", "McDonalds", "\""]
(c37-5 / think-01
       :ARG0 (c37-0 / i)
       :ARG1 (c37-2 / recommend-01
                    :ARG1 (c37-4 / thing
                                 :name (c37-1 / name
                                              :op1 "McDonalds")
                                 :ARG2-of (c37-3 / compel-01))))

# ::snt That's why I always eat at a bar if I have to travel on assignment.
# ::tokens ["That", "'s", "why", "I", "always", "eat", "at", "a", "bar", "if", "I", "have", "to", "travel", "on", "assignment", "."]
# ::lemmas ["that", "be", "why", "i", "always", "eat", "at", "a", "bar", "if", "i", "have", "to", "travel", "on", "assignment", "."]
(c38-5 / cause-01
       :ARG0 (c38-7 / that)
       :ARG1 (c38-2 / eat-01
                    :ARG0 (c38-4 / i)
                    :location (c38-0 / bar)
                    :time (c38-8 / always)
                    :condition (c38-1 / obligate-01
                                      :ARG1 c38-4
                                      :ARG2 (c38-6 / travel-01
                                                   :ARG0 c38-4
                                                   :manner (c38-3 / assign-01
                                                                  :ARG0 c38-4)))))

# ::snt So now a suspension of First Amendment Rights.
# ::tokens ["So", "now", "a", "suspension", "of", "First", "Amendment", "Rights", "."]
# ::lemmas ["so", "now", "a", "suspension", "of", "First", "Amendment", "Rights", "."]
(c39-4 / suspend-01
       :ARG1 (c39-3 / right-05
                    :mod (c39-0 / law
                                :name (c39-1 / name
                                             :op1 "First"
                                             :op2 "Amendment")))
       :time (c39-2 / now))
