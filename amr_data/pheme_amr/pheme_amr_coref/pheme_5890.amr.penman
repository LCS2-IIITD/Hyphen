# ::snt Leftie lynch MOB
# ::tokens ["Leftie", "lynch", "MOB"]
# ::lemmas ["Leftie", "lynch", "MOB"]
(c1-1 / mob
      :ARG0-of (c1-0 / lynch-01)
      :ARG1-of (c1-2 / left-19))

# ::snt :kind of my point, but yeah.
# ::tokens [":", "kind", "of", "my", "point", ",", "but", "yeah", "."]
# ::lemmas [":", "kind", "of", "my", "point", ",", "but", "yeah", "."]
(c2-3 / contrast-01
      :ARG1 (c2-2 / point-04
                  :ARG0 (c2-1 / i)
                  :degree (c2-4 / kind-of))
      :ARG2 (c2-0 / yeah))

# ::snt no prob. chars makes clarity difficult at times
# ::tokens ["no", "prob", ".", "chars", "makes", "clarity", "difficult", "at", "times"]
# ::lemmas ["no", "prob", ".", "chars", "make", "clarity", "difficult", "at", "time"]
(c3-0 / multi-sentence
      :snt1 (c3-2 / prob
                  :polarity -)
      :snt2 (c3-3 / make-02
                  :ARG0 (c3-6 / person
                              :name (c3-1 / name
                                          :op1 "charl"))
                  :ARG1 (c3-4 / difficult
                              :domain (c3-5 / clear-08))
                  :frequency (c3-7 / at-times)))

# ::snt This was a Trayvon-like smear so rightwingers can justify Mike Brown's murder.
# ::tokens ["This", "was", "a", "Trayvon", "-", "like", "smear", "so", "rightwingers", "can", "justify", "Mike", "Brown", "'s", "murder", "."]
# ::lemmas ["this", "be", "a", "Trayvon", "-", "like", "smear", "so", "rightwinger", "can", "justify", "Mike", "Brown", "'s", "murder", "."]
(c4-8 / smear-02
      :ARG1 (c4-10 / this)
      :ARG1-of (c4-7 / resemble-01
                     :ARG2 (c4-6 / person
                                 :name (c4-4 / name
                                             :op1 "Trayvon")))
      :purpose (c4-11 / possible-01
                      :ARG1 (c4-0 / justify-01
                                  :ARG0 (c4-2 / person
                                              :ARG1-of (c4-3 / right-08))
                                  :ARG1 (c4-1 / murder-01
                                              :ARG1 (c4-9 / person
                                                          :name (c4-5 / name
                                                                      :op1 "Mike"
                                                                      :op2 "Brown"))))))

# ::snt Name games Chucky? Really?.. Banana-Banna- (well, you know
# ::tokens ["Name", "games", "Chucky", "?", "Really", "?", "..", "Banana", "-", "Banna-", "(", "well", ",", "you", "know"]
# ::lemmas ["name", "game", "Chucky", "?", "really", "?", "..", "Banana", "-", "Banna-", "(", "well", ",", "you", "know"]
(c5-2 / multi-sentence
      :snt1 (c5-4 / name-01
                  :ARG1 (c5-9 / game)
                  :ARG2 (c5-6 / person
                              :name (c5-5 / name
                                          :op1 "Chucky"))
                  :polarity (c5-11 / amr-unknown))
      :snt2 (c5-7 / real-04
                  :polarity (c5-3 / amr-unknown)
                  :ARG1 c5-6
                  :name (c5-8 / name
                              :op1 "Banana-Banna"))
      :snt3 (c5-10 / know-06
                   :ARG0 (c5-0 / you)
                   :mod (c5-1 / well)))

# ::snt Murdered. The struggle with the officer can't possibly justify it.
# ::tokens ["Murdered", ".", "The", "struggle", "with", "the", "officer", "ca", "n't", "possibly", "justify", "it", "."]
# ::lemmas ["murder", ".", "the", "struggle", "with", "the", "officer", "can", "not", "possibly", "justify", "it", "."]
(c6-1 / multi-sentence
      :snt1 (c6-4 / murder-01)
      :snt2 (c6-5 / possible-01
                  :ARG1 (c6-0 / justify-01
                              :ARG0 (c6-6 / struggle-02
                                          :ARG1 (c6-2 / officer))
                              :ARG1 (c6-3 / it))
                  :polarity -))

# ::snt The Chief said nothing in his original statement about officers responding to a robbery. Nothing.
# ::tokens ["The", "Chief", "said", "nothing", "in", "his", "original", "statement", "about", "officers", "responding", "to", "a", "robbery", ".", "Nothing", "."]
# ::lemmas ["the", "Chief", "say", "nothing", "in", "his", "original", "statement", "about", "officer", "respond", "to", "a", "robbery", ".", "nothing", "."]
(c7-2 / multi-sentence
      :snt1 (c7-10 / say-01
                   :ARG0 (c7-7 / person
                               :ARG0-of (c7-0 / have-org-role-91
                                              :ARG2 (c7-9 / chief)))
                   :ARG1 (c7-6 / nothing)
                   :location (c7-4 / state-01
                                   :ARG0 c7-7
                                   :ARG1 (c7-8 / respond-01
                                               :ARG0 (c7-11 / person
                                                            :ARG0-of c7-0
                                                            :ARG2 (c7-3 / officer)))
                                   :ARG1 (c7-5 / rob-01))
                   :mod (c7-1 / original))
      :snt2 c7-6)

# ::snt oh sorry wasn't aware they found a gun on mike brown's person (source pls)
# ::tokens ["oh", "sorry", "was", "n't", "aware", "they", "found", "a", "gun", "on", "mike", "brown", "'s", "person", "(", "source", "pls", ")"]
# ::lemmas ["oh", "sorry", "be", "not", "aware", "they", "find", "a", "gun", "on", "mike", "brown", "'s", "person", "(", "source", "pls", ")"]
(c8-8 / sorry-01
      :ARG1 (c8-3 / i)
      :ARG2 (c8-6 / realize-01
                  :ARG0 c8-3
                  :ARG1 (c8-0 / find-01
                              :ARG0 (c8-9 / they)
                              :ARG1 (c8-7 / gun)
                              :location (c8-5 / person
                                              :name (c8-4 / name
                                                          :op1 "Mike"
                                                          :op2 "Brown")))
                  :polarity -)
      :mod (c8-1 / oh)
      :ARG1-of (c8-2 / source-01
                     :ARG2 (c8-10 / publication
                                  :name c8-4
                                  :op1 "pls")))

# ::snt Which only calls your perception into question.
# ::tokens ["Which", "only", "calls", "your", "perception", "into", "question", "."]
# ::lemmas ["which", "only", "call", "your", "perception", "into", "question", "."]
(c9-4 / call-01
      :ARG0 (c9-5 / thing)
      :ARG1 (c9-3 / perceive-01
                  :ARG0 (c9-0 / you))
      :ARG2 (c9-2 / question-03
                  :ARG1 c9-5)
      :mod (c9-1 / only))

# ::snt anytime you attack someone with a gun, it is a very likely outcome.
# ::tokens ["anytime", "you", "attack", "someone", "with", "a", "gun", ",", "it", "is", "a", "very", "likely", "outcome", "."]
# ::lemmas ["anytime", "you", "attack", "someone", "with", "a", "gun", ",", "it", "be", "a", "very", "likely", "outcome", "."]
(c10-1 / likely-01
       :degree (c10-4 / very)
       :ARG1 (c10-2 / outcome
                    :condition (c10-7 / attack-01
                                      :ARG0 (c10-0 / you)
                                      :ARG1 (c10-6 / someone)
                                      :instrument (c10-5 / gun)
                                      :time (c10-3 / anytime))))

# ::snt yeah, definitely!!
# ::tokens ["yeah", ",", "definitely", "!", "!"]
# ::lemmas ["yeah", ",", "definitely", "!", "!"]
(c11-1 / definite
       :mod (c11-0 / yeah)
       :mode expressive)

# ::snt I know, I tweeted in support of your point, sorry if it didn't sound that way
# ::tokens ["I", "know", ",", "I", "tweeted", "in", "support", "of", "your", "point", ",", "sorry", "if", "it", "did", "n't", "sound", "that", "way"]
# ::lemmas ["i", "know", ",", "i", "tweet", "in", "support", "of", "your", "point", ",", "sorry", "if", "it", "do", "not", "sound", "that", "way"]
(c12-10 / and
        :op1 (c12-5 / know-01
                    :ARG0 (c12-4 / i))
        :op2 (c12-9 / tweet-02
                    :ARG0 c12-4
                    :purpose (c12-8 / support-01
                                    :ARG0 c12-4
                                    :ARG1 (c12-6 / point-04
                                                 :ARG0 (c12-0 / you))))
        :op3 (c12-3 / sorry-01
                    :ARG1 c12-4
                    :ARG2 (c12-2 / sound-01
                                 :ARG1 c12-6
                                 :ARG2 (c12-1 / way
                                              :mod (c12-7 / that))
                                 :polarity -)))

# ::snt Obviously you can't recognize who holds the same position as you. Sorry for you!
# ::tokens ["Obviously", "you", "ca", "n't", "recognize", "who", "holds", "the", "same", "position", "as", "you", ".", "Sorry", "for", "you", "!"]
# ::lemmas ["obviously", "you", "can", "not", "recognize", "who", "hold", "the", "same", "position", "as", "you", ".", "sorry", "for", "you", "!"]
(c13-2 / multi-sentence
       :snt1 (c13-5 / obvious-01
                    :ARG1 (c13-9 / capable-01
                                 :ARG1 (c13-1 / you)
                                 :ARG2 (c13-8 / recognize-02
                                              :ARG0 c13-1
                                              :ARG1 (c13-7 / person
                                                           :ARG0-of (c13-0 / hold-01
                                                                           :ARG1 (c13-12 / position-01
                                                                                         :ARG1-of (c13-11 / same-01
                                                                                                          :ARG2 (c13-3 / position-01
                                                                                                                       :ARG1 c13-1))))))
                                 :polarity -))
       :snt2 (c13-6 / sorry-01
                    :ARG1 (c13-10 / you)
                    :ARG2 (c13-4 / you)))

# ::snt "beat the cop" highly disputed. "10 bullets in the body" not disputed, to my knowledge.
# ::tokens ["\"", "beat", "the", "cop", "\"", "highly", "disputed", ".", "\"", "10", "bullets", "in", "the", "body", "\"", "not", "disputed", ",", "to", "my", "knowledge", "."]
# ::lemmas ["\"", "beat", "the", "cop", "\"", "highly", "disputed", ".", "\"", "10", "bullet", "in", "the", "body", "\"", "not", "dispute", ",", "to", "my", "knowledge", "."]
(c14-2 / multi-sentence
       :snt1 (c14-5 / dispute-01
                    :ARG2 (c14-3 / beat-01
                                 :ARG1 (c14-6 / cop))
                    :degree (c14-0 / high-02))
       :snt2 (c14-1 / dispute-01
                    :ARG2 (c14-7 / bullet
                                 :location (c14-8 / body)
                                 :quant 10)
                    :ARG1-of (c14-9 / know-01
                                    :ARG0 (c14-4 / i))
                    :polarity -))

# ::snt as I don't yet know all the facts, I don't have a position.
# ::tokens ["as", "I", "do", "n't", "yet", "know", "all", "the", "facts", ",", "I", "do", "n't", "have", "a", "position", "."]
# ::lemmas ["as", "i", "do", "not", "yet", "know", "all", "the", "fact", ",", "i", "do", "not", "have", "a", "position", "."]
(c15-0 / have-03
       :ARG0 (c15-3 / i)
       :ARG1 (c15-4 / position-02)
       :ARG1-of (c15-5 / cause-01
                       :ARG0 (c15-6 / know-01
                                    :ARG0 c15-3
                                    :ARG1 (c15-2 / fact
                                                 :mod (c15-7 / all))
                                    :time (c15-1 / yet)
                                    :polarity -))
       :polarity -)

# ::snt "beat the cop" has NOT been proven AT ALL-it's claimed by the police
# ::tokens ["\"", "beat", "the", "cop", "\"", "has", "NOT", "been", "proven", "AT", "ALL", "-", "it", "'s", "claimed", "by", "the", "police"]
# ::lemmas ["\"", "beat", "the", "cop", "\"", "have", "not", "be", "prove", "AT", "ALL", "-", "it", "be", "claim", "by", "the", "police"]
(c16-1 / prove-01
       :ARG1 (c16-0 / beat-01
                    :ARG1 (c16-3 / cop))
       :degree (c16-6 / at-all)
       :ARG1-of (c16-2 / contrast-01
                       :ARG2 (c16-4 / claim-01
                                    :ARG0 (c16-5 / police)
                                    :ARG1 c16-0))
       :polarity -)

# ::snt didja miss the part where separate witnesses say he was unarmed with his hands up?
# ::tokens ["didja", "miss", "the", "part", "where", "separate", "witnesses", "say", "he", "was", "unarmed", "with", "his", "hands", "up", "?"]
# ::lemmas ["didja", "miss", "the", "part", "where", "separate", "witness", "say", "he", "be", "unarmed", "with", "his", "hand", "up", "?"]
(c17-4 / miss-02
       :ARG0 (c17-1 / you)
       :ARG1 (c17-8 / part
                    :subevent (c17-9 / say-01
                                     :ARG0 (c17-10 / person
                                                   :ARG0-of (c17-2 / witness-01)
                                                   :ARG1-of (c17-6 / separate-02)
                                                   :part (c17-0 / hand
                                                                :ARG1-of (c17-5 / up-03)))
                                     :ARG1 (c17-11 / arm-01
                                                   :ARG1 (c17-3 / he
                                                                :part c17-0)
                                                   :polarity -)))
       :polarity (c17-7 / amr-unknown))

# ::snt Yeah, stories they are a changin
# ::tokens ["Yeah", ",", "stories", "they", "are", "a", "changin"]
# ::lemmas ["yeah", ",", "story", "they", "be", "a", "changin"]
(c18-0 / story
       :ARG0-of (c18-1 / change-01))

# ::snt :Congratulations, you've found a level of evidence below hearsay. Garbled, confused, context-less.
# ::tokens [":", "Congratulations", ",", "you", "'ve", "found", "a", "level", "of", "evidence", "below", "hearsay", ".", "Garbled", ",", "confused", ",", "context", "-", "less", "."]
# ::lemmas [":", "congratulation", ",", "you", "'ve", "find", "a", "level", "of", "evidence", "below", "hearsay", ".", "garbled", ",", "confused", ",", "context", "-", "less", "."]
(c19-3 / multi-sentence
       :snt1 (c19-8 / congratulate-01
                    :ARG1 (c19-1 / you)
                    :ARG2 (c19-4 / find-01
                                 :ARG0 c19-1
                                 :ARG1 (c19-2 / level
                                              :quant-of (c19-6 / evidence-01))
                                 :location (c19-5 / below
                                                  :op1 (c19-0 / hearsay))))
       :snt2 (c19-11 / and
                     :op1 (c19-9 / garble-01)
                     :op2 (c19-7 / confuse-01)
                     :op3 (c19-10 / context
                                  :polarity -)))

# ::snt Dave, guessing reading isn't your thing here's a vid you need to see
# ::tokens ["Dave", ",", "guessing", "reading", "is", "n't", "your", "thing", "here", "'s", "a", "vid", "you", "need", "to", "see"]
# ::lemmas ["Dave", ",", "guess", "reading", "be", "not", "your", "thing", "here", "be", "a", "vid", "you", "need", "to", "see"]
(c20-10 / say-01
        :ARG0 (c20-3 / i)
        :ARG1 (c20-12 / and
                      :op1 (c20-9 / guess-01
                                  :ARG0 c20-3
                                  :ARG1 (c20-11 / thing
                                                :domain (c20-7 / read-01)
                                                :poss (c20-6 / person
                                                             :name (c20-4 / name
                                                                          :op1 "Dave"))
                                                :polarity -))
                      :op2 (c20-1 / be-located-at-91
                                  :ARG1 (c20-5 / video
                                               :ARG1-of (c20-2 / see-01
                                                               :ARG0 c20-6
                                                               :ARG1-of (c20-8 / need-01
                                                                               :ARG0 c20-6)))
                                  :ARG2 (c20-0 / here)))
        :ARG2 c20-6)

# ::snt :Here's the epitome of your position.Guilty,no need to be proven anything
# ::tokens [":", "Here", "'s", "the", "epitome", "of", "your", "position", ".", "Guilty", ",", "no", "need", "to", "be", "proven", "anything"]
# ::lemmas [":", "here", "be", "the", "epitome", "of", "your", "position", ".", "guilty", ",", "no", "need", "to", "be", "prove", "anything"]
(c21-2 / multi-sentence
       :snt1 (c21-3 / epitome-01
                    :ARG1 (c21-6 / position-02
                                 :ARG0 (c21-1 / you))
                    :location (c21-0 / here))
       :snt2 (c21-10 / and
                     :op1 (c21-7 / guilty-01
                                 :ARG1 (c21-8 / you))
                     :op2 (c21-5 / need-01
                                 :ARG1 (c21-9 / prove-01
                                              :ARG1 (c21-4 / anything))
                                 :polarity -)))

# ::snt :Three-minute justice! Unbelievable.
# ::tokens [":", "Three", "-", "minute", "justice", "!", "Unbelievable", "."]
# ::lemmas [":", "Three", "-", "minute", "justice", "!", "unbelievable", "."]
(c22-1 / multi-sentence
       :snt1 (c22-0 / justice
                    :duration (c22-5 / temporal-quantity
                                     :unit (c22-4 / minute)
                                     :quant 3))
       :snt2 (c22-3 / possible-01
                    :ARG1 (c22-2 / believe-01)
                    :polarity -))

# ::snt I said he attacked someone with a gun - the cop. Not that he had a gun. My bad choice of words.
# ::tokens ["I", "said", "he", "attacked", "someone", "with", "a", "gun", "-", "the", "cop", ".", "Not", "that", "he", "had", "a", "gun", ".", "My", "bad", "choice", "of", "words", "."]
# ::lemmas ["i", "say", "he", "attack", "someone", "with", "a", "gun", "-", "the", "cop", ".", "not", "that", "he", "have", "a", "gun", ".", "my", "bad", "choice", "of", "word", "."]
(c23-3 / multi-sentence
       :snt1 (c23-13 / say-01
                     :ARG0 (c23-6 / i)
                     :ARG1 (c23-14 / attack-01
                                   :ARG0 (c23-0 / he)
                                   :ARG1 (c23-5 / someone
                                                :ARG1-of (c23-8 / mean-01
                                                                :ARG2 (c23-10 / cop)))
                                   :instrument (c23-11 / gun)))
       :snt2 (c23-2 / have-03
                    :ARG0 (c23-7 / he)
                    :ARG1 c23-11
                    :polarity -)
       :snt3 (c23-9 / choose-01
                    :ARG0 (c23-12 / i)
                    :ARG1 (c23-1 / word)
                    :ARG1-of (c23-4 / bad-02)))

# ::snt except my tweets aren't "fo-fucky", as far as I can tell.
# ::tokens ["except", "my", "tweets", "are", "n't", "\"", "fo", "-", "fucky", "\"", ",", "as", "far", "as", "I", "can", "tell", "."]
# ::lemmas ["except", "my", "tweet", "be", "not", "\"", "fo", "-", "fucky", "\"", ",", "as", "far", "as", "i", "can", "tell", "."]
(c24-1 / except-01
       :ARG1 (c24-0 / lucky
                    :domain (c24-5 / tweet-01
                                   :ARG0 (c24-2 / i))
                    :concession (c24-6 / as-far-as
                                       :op1 (c24-3 / possible-01
                                                   :ARG1 (c24-4 / tell-02
                                                                :ARG0 c24-2)))
                    :polarity -))

# ::snt Here's a credible eyewitness account.
# ::tokens ["Here", "'s", "a", "credible", "eyewitness", "account", "."]
# ::lemmas ["here", "be", "a", "credible", "eyewitness", "account", "."]
(c25-3 / account-01
       :ARG0 (c25-1 / eyewitness)
       :mod (c25-2 / credible)
       :location (c25-0 / here))

# ::snt then perhaps he shouldn't have tried to get the cops gun. But thanks for playing.
# ::tokens ["then", "perhaps", "he", "should", "n't", "have", "tried", "to", "get", "the", "cops", "gun", ".", "But", "thanks", "for", "playing", "."]
# ::lemmas ["then", "perhaps", "he", "should", "not", "have", "try", "to", "get", "the", "cop", "gun", ".", "but", "thank", "for", "play", "."]
(c26-2 / multi-sentence
       :snt1 (c26-5 / possible-01
                    :ARG1 (c26-6 / recommend-01
                                 :ARG1 (c26-12 / try-01
                                               :ARG0 (c26-0 / he)
                                               :ARG1 (c26-8 / get-01
                                                            :ARG0 c26-0
                                                            :ARG1 (c26-7 / gun
                                                                         :poss (c26-9 / cop))))
                                 :mod (c26-10 / then)
                                 :polarity -))
       :snt2 (c26-11 / contrast-01
                     :ARG2 (c26-4 / thank-01
                                  :ARG0 (c26-3 / i)
                                  :ARG1 (c26-1 / you)
                                  :ARG2 (c26-13 / play-01
                                                :ARG0 c26-1))))

# ::snt the same police whose story keeps changing &amp; who've been already proven to be LIARS
# ::tokens ["the", "same", "police", "whose", "story", "keeps", "changing", "&", "amp", ";", "who", "'ve", "been", "already", "proven", "to", "be", "LIARS"]
# ::lemmas ["the", "same", "police", "whose", "story", "keep", "change", "&", "amp", ";", "who", "'ve", "be", "already", "prove", "to", "be", "LIARS"]
(c27-1 / police
       :ARG1-of (c27-3 / same-01)
       :ARG1-of (c27-2 / change-01
                       :ARG1-of (c27-4 / keep-02))
       :ARG0-of (c27-0 / lie-08
                       :ARG1-of (c27-5 / prove-01
                                       :time (c27-6 / already))))

# ::snt please no more death chants. No reason to stoop to this.
# ::tokens ["please", "no", "more", "death", "chants", ".", "No", "reason", "to", "stoop", "to", "this", "."]
# ::lemmas ["please", "no", "more", "death", "chant", ".", "no", "reason", "to", "stoop", "to", "this", "."]
(c28-1 / multi-sentence
       :snt1 (c28-4 / chant-01
                    :ARG0 (c28-0 / you)
                    :ARG1 (c28-3 / die-01)
                    :mod (c28-2 / more
                                :polarity -)
                    :polite +
                    :mode imperative)
       :snt2 (c28-5 / reason
                    :ARG0-of (c28-6 / cause-01
                                    :ARG1 (c28-8 / stoop-01
                                                 :ARG0 (c28-7 / you)
                                                 :prep-to (c28-9 / this)
                                                 :mode imperative))
                    :polarity -))

# ::snt LOL calling someone a fool while siding with ppl chanting death w/o trial,juryjudge
# ::tokens ["LOL", "calling", "someone", "a", "fool", "while", "siding", "with", "ppl", "chanting", "death", "w/o", "trial", ",", "juryjudge"]
# ::lemmas ["LOL", "call", "someone", "a", "fool", "while", "side", "with", "ppl", "chant", "death", "w/o", "trial", ",", "juryjudge"]
(c29-7 / call-01
       :ARG1 (c29-10 / someone)
       :ARG2 (c29-1 / fool)
       :time (c29-3 / side-01
                    :ARG0 c29-10
                    :ARG1 (c29-6 / chant-01
                                 :ARG0 (c29-5 / person
                                              :ARG0-of (c29-0 / judge-01
                                                              :ARG1 (c29-11 / try-02)))
                                 :ARG1 (c29-8 / die-01)))
       :ARG2-of (c29-2 / laugh-01
                       :ARG0 (c29-4 / i)
                       :manner (c29-9 / loud)
                       :mode expressive))

# ::snt "callow: adjective: inexperienced and immature"
# ::tokens ["\"", "callow", ":", "adjective", ":", "inexperienced", "and", "immature", "\""]
# ::lemmas ["\"", "callow", ":", "adjective", ":", "inexperienced", "and", "immature", "\""]
(c30-7 / call-01
       :ARG1 (c30-5 / person
                    :name (c30-4 / name
                                 :op1 "Callow"))
       :ARG2 (c30-0 / word
                    :mod (c30-8 / adjective)
                    :ARG1-of (c30-1 / mean-01
                                    :ARG2 (c30-3 / and
                                                 :op1 (c30-2 / experience-01
                                                             :polarity -)
                                                 :op2 (c30-6 / mature-02
                                                             :polarity -)))))

# ::snt I mean, I don't get people. Yes, stealing is wrong, but MURDER IS WORSE! This is a debate????
# ::tokens ["I", "mean", ",", "I", "do", "n't", "get", "people", ".", "Yes", ",", "stealing", "is", "wrong", ",", "but", "MURDER", "IS", "WORSE", "!", "This", "is", "a", "debate", "?", "?", "?", "?"]
# ::lemmas ["i", "mean", ",", "i", "do", "not", "get", "people", ".", "yes", ",", "stealing", "be", "wrong", ",", "but", "murder", "be", "bad", "!", "this", "be", "a", "debate", "?", "?", "?", "?"]
(c31-3 / multi-sentence
       :snt1 (c31-6 / mean-01
                    :ARG0 (c31-5 / i)
                    :ARG2 (c31-9 / get-30
                                 :ARG0 c31-5
                                 :ARG1 (c31-7 / person)
                                 :polarity -))
       :snt2 (c31-8 / contrast-01
                    :ARG1 (c31-1 / wrong-02
                                 :ARG1 (c31-12 / steal-01))
                    :ARG2 (c31-0 / have-degree-91
                                 :ARG1 (c31-2 / murder-01)
                                 :ARG2 (c31-4 / bad-07
                                              :ARG1 c31-2)
                                 :ARG3 (c31-10 / more)))
       :snt3 (c31-11 / debate-01
                     :polarity (c31-14 / amr-unknown)
                     :ARG1 (c31-13 / this)))

# ::snt no but i did miss the part where the punishment for shoplifting or assault is death
# ::tokens ["no", "but", "i", "did", "miss", "the", "part", "where", "the", "punishment", "for", "shoplifting", "or", "assault", "is", "death"]
# ::lemmas ["no", "but", "i", "do", "miss", "the", "part", "where", "the", "punishment", "for", "shoplifting", "or", "assault", "be", "death"]
(c32-5 / contrast-01
       :ARG2 (c32-0 / miss-02
                    :ARG0 (c32-2 / i)
                    :ARG1 (c32-3 / part
                                 :topic (c32-4 / die-01
                                               :ARG1-of (c32-6 / cause-01
                                                               :ARG0 (c32-8 / punish-01
                                                                            :ARG2 (c32-1 / or
                                                                                         :op1 (c32-7 / shoplift-01
                                                                                                     :ARG0 c32-2)
                                                                                         :op2 (c32-9 / assault-01
                                                                                                     :ARG0 c32-2))))))))

# ::snt I have no dog in this fight. Just said don't attack someone who is carrying a gun.
# ::tokens ["I", "have", "no", "dog", "in", "this", "fight", ".", "Just", "said", "do", "n't", "attack", "someone", "who", "is", "carrying", "a", "gun", "."]
# ::lemmas ["i", "have", "no", "dog", "in", "this", "fight", ".", "just", "say", "do", "not", "attack", "someone", "who", "be", "carry", "a", "gun", "."]
(c33-4 / multi-sentence
       :snt1 (c33-0 / have-03
                    :ARG0 (c33-6 / i)
                    :ARG1 (c33-7 / dog)
                    :location (c33-3 / fight-01
                                     :mod (c33-11 / this))
                    :polarity -)
       :snt2 (c33-10 / say-01
                     :ARG0 c33-6)
       :ARG1 (c33-12 / attack-01
                     :ARG0 (c33-1 / you)
                     :ARG1 (c33-5 / someone
                                  :ARG0-of (c33-8 / carry-01
                                                  :ARG1 (c33-9 / gun)))
                     :polarity -
                     :mode imperative)
       :mod (c33-2 / just))

# ::snt So a large Negro robbed a store and then the cops saw a large Negro.WHAT WERE THEY SUPPOSED TO DO?!?!Perhaps not execute him.
# ::tokens ["So", "a", "large", "Negro", "robbed", "a", "store", "and", "then", "the", "cops", "saw", "a", "large", "Negro", ".", "WHAT", "WERE", "THEY", "SUPPOSED", "TO", "DO?!?!Perhaps", "not", "execute", "him", "."]
# ::lemmas ["so", "a", "large", "Negro", "rob", "a", "store", "and", "then", "the", "cop", "see", "a", "large", "Negro", ".", "what", "be", "they", "suppose", "to", "do?!?!perhap", "not", "execute", "he", "."]
(c34-1 / multi-sentence
       :snt1 (c34-16 / and
                     :op1 (c34-8 / rob-01
                                 :ARG0 (c34-7 / person
                                              :mod (c34-0 / large)
                                              :mod (c34-5 / negro))
                                 :ARG1 (c34-12 / store))
                     :op2 (c34-3 / see-01
                                 :ARG0 (c34-9 / cop)
                                 :ARG1 c34-7
                                 :mod (c34-11 / large)
                                 :mod (c34-6 / negro))
                     :time (c34-14 / then))
       :snt2 (c34-2 / suppose-02
                    :ARG1 (c34-13 / they)
                    :ARG2 (c34-10 / do-02
                                  :ARG0 c34-13
                                  :ARG1 (c34-4 / amr-unknown
                                               :polarity-of c34-2)))
       :mod (c34-15 / perhaps))

# ::snt are they saying that it is him or that it just looks like him
# ::tokens ["are", "they", "saying", "that", "it", "is", "him", "or", "that", "it", "just", "looks", "like", "him"]
# ::lemmas ["be", "they", "say", "that", "it", "be", "he", "or", "that", "it", "just", "look", "like", "he"]
(c35-5 / say-01
       :polarity (c35-7 / amr-unknown)
       :ARG0 (c35-6 / they)
       :ARG1 (c35-3 / or
                    :op1 (c35-0 / he
                                :domain (c35-4 / it))
                    :op2 (c35-2 / look-02
                                :ARG0 c35-4
                                :ARG1 c35-0
                                :mod (c35-1 / just))))

# ::snt And right on cue, CNN ask if these allegations "change everything."
# ::tokens ["And", "right", "on", "cue", ",", "CNN", "ask", "if", "these", "allegations", "\"", "change", "everything", ".", "\""]
# ::lemmas ["and", "right", "on", "cue", ",", "CNN", "ask", "if", "these", "allegation", "\"", "change", "everything", ".", "\""]
(c36-11 / and
        :op2 (c36-1 / ask-01
                    :ARG0 (c36-4 / publication
                                 :name (c36-2 / name
                                              :op1 "CNN"))
                    :ARG1 (c36-10 / truth-value
                                  :polarity-of (c36-6 / change-01
                                                      :ARG0 (c36-9 / thing
                                                                   :ARG1-of (c36-3 / allege-01)
                                                                   :mod (c36-5 / this))
                                                      :ARG1 (c36-0 / everything)))
                    :manner (c36-7 / cue
                                   :mod (c36-8 / right))))

# ::snt You fool, you don't know what LYNCH means to Black Americans. cc
# ::tokens ["You", "fool", ",", "you", "do", "n't", "know", "what", "LYNCH", "means", "to", "Black", "Americans", ".", "cc"]
# ::lemmas ["you", "fool", ",", "you", "do", "not", "know", "what", "LYNCH", "mean", "to", "Black", "Americans", ".", "cc"]
(c37-10 / say-01
        :ARG0 (c37-5 / i)
        :ARG1 (c37-12 / know-01
                      :ARG0 (c37-1 / fool
                                   :domain (c37-0 / you))
                      :ARG1 (c37-11 / thing
                                    :ARG2-of (c37-2 / mean-01
                                                    :ARG1 (c37-3 / lynch-01)
                                                    :ARG3 (c37-8 / person
                                                                 :ARG1-of (c37-4 / black-05)
                                                                 :mod (c37-9 / country
                                                                             :name (c37-6 / name
                                                                                          :op1 "America"))
                                                                 :ARG2-of c37-10)))
                      :polarity -)
        :name (c37-7 / name
                     :op1 "CC"))

# ::snt :He struggled w/ cop. shot fired. Ran, cop pursued, shot in back. Turned, hands up, shot down.
# ::tokens [":", "He", "struggled", "w/", "cop", ".", "shot", "fired", ".", "Ran", ",", "cop", "pursued", ",", "shot", "in", "back", ".", "Turned", ",", "hands", "up", ",", "shot", "down", "."]
# ::lemmas [":", "he", "struggle", "w/", "cop", ".", "shot", "fire", ".", "Ran", ",", "cop", "pursue", ",", "shoot", "in", "back", ".", "turn", ",", "hand", "up", ",", "shoot", "down", "."]
(c38-2 / multi-sentence
       :snt1 (c38-15 / struggle-01
                     :ARG0 (c38-0 / he)
                     :ARG1 (c38-12 / cop))
       :snt2 (c38-1 / fire-01
                    :ARG1 (c38-8 / shoot-02))
       :snt3 (c38-17 / and
                     :op1 (c38-11 / Ran-01)
                     :op2 (c38-10 / pursue-01
                                  :ARG0 (c38-13 / cop))
                     :op3 (c38-3 / shoot-02
                                 :location (c38-5 / back)))
       :snt4 (c38-9 / and
                    :op1 (c38-16 / turn-01
                                 :ARG1 (c38-4 / hand))
                    :op2 (c38-6 / up-03
                                :ARG1 c38-4)
                    :op3 (c38-7 / shoot-02
                                :direction (c38-14 / down-03))))

# ::snt You still seem to be having a hard time getting 'ATTACKING AN OFFICER" That's hardly shoplifting
# ::tokens ["You", "still", "seem", "to", "be", "having", "a", "hard", "time", "getting", "'", "ATTACKING", "AN", "OFFICER", "\"", "That", "'s", "hardly", "shoplifting"]
# ::lemmas ["you", "still", "seem", "to", "be", "have", "a", "hard", "time", "get", "'", "ATTACKING", "an", "OFFICER", "\"", "that", "be", "hardly", "shoplift"]
(c39-10 / seem-01
        :ARG1 (c39-0 / have-03
                     :ARG0 (c39-1 / you)
                     :ARG1 (c39-12 / time
                                   :ARG1-of (c39-13 / hard-02)
                                   :time-of (c39-9 / get-04
                                                   :ARG0 c39-1
                                                   :ARG1 (c39-11 / attack-01
                                                                 :ARG0 c39-1
                                                                 :ARG1 (c39-8 / person
                                                                              :ARG0-of (c39-7 / have-org-role-91
                                                                                              :ARG2 (c39-5 / official)))))))
        :mod (c39-6 / still)
        :ARG1-of (c39-3 / mean-01
                        :ARG2 (c39-2 / shoplift-01
                                     :ARG0 c39-1
                                     :manner (c39-4 / hardly))))

# ::snt you still seem to be having a hard time getting that the penalty for 'ATTACKING AN OFFICER' is still not death
# ::tokens ["you", "still", "seem", "to", "be", "having", "a", "hard", "time", "getting", "that", "the", "penalty", "for", "'", "ATTACKING", "AN", "OFFICER", "'", "is", "still", "not", "death"]
# ::lemmas ["you", "still", "seem", "to", "be", "have", "a", "hard", "time", "get", "that", "the", "penalty", "for", "'", "ATTACKING", "an", "OFFICER", "'", "be", "still", "not", "death"]
(c40-9 / seem-01
       :ARG1 (c40-0 / have-03
                    :ARG0 (c40-1 / you)
                    :ARG1 (c40-11 / time
                                  :ARG1-of (c40-13 / hard-02)
                                  :purpose (c40-8 / get-04
                                                  :ARG0 c40-1
                                                  :ARG1 (c40-6 / die-01
                                                               :ARG1-of (c40-7 / cause-01
                                                                               :ARG0 (c40-5 / penalize-01
                                                                                            :ARG2 (c40-10 / attack-01
                                                                                                          :ARG1 (c40-12 / person
                                                                                                                        :ARG0-of (c40-4 / have-org-role-91
                                                                                                                                        :ARG2 (c40-2 / officer))))))
                                                               :mod (c40-3 / still
                                                                           :mod-of c40-9)
                                                               :polarity -)))))

# ::snt KILLER COP DID NOT KNOW ABOUT ANY ROBBERY he stopped car to close to MB and couldnt get out right away
# ::tokens ["KILLER", "COP", "DID", "NOT", "KNOW", "ABOUT", "ANY", "ROBBERY", "he", "stopped", "car", "to", "close", "to", "MB", "and", "could", "nt", "get", "out", "right", "away"]
# ::lemmas ["KILLER", "COP", "do", "not", "know", "about", "any", "ROBBERY", "he", "stop", "car", "to", "close", "to", "MB", "and", "could", "not", "get", "out", "right", "away"]
(c41-13 / know-01
        :ARG0 (c41-6 / person
                     :name (c41-4 / name
                                  :op1 "KILLER")
                     :ARG0-of (c41-0 / have-org-role-91
                                     :ARG2 (c41-8 / cop)))
        :ARG1 (c41-7 / rob-01
                     :mod (c41-15 / any)
                     :ARG1-of (c41-12 / stop-01
                                      :ARG0 c41-6
                                      :purpose (c41-9 / close-10
                                                      :ARG1 c41-6
                                                      :ARG2 (c41-14 / person
                                                                    :name (c41-5 / name
                                                                                 :op1 "MB"))))
                     :ARG0-of (c41-11 / cause-01
                                      :ARG1 (c41-1 / possible-01
                                                   :ARG1 (c41-10 / get-05
                                                                 :ARG1 c41-6
                                                                 :ARG2 (c41-2 / out)
                                                                 :time (c41-3 / right-away))
                                                   :polarity -)))
        :polarity -)

# ::snt Or was he just resisting being grabbed by the throat &amp; jerked toward the car; hardly "Attacking"
# ::tokens ["Or", "was", "he", "just", "resisting", "being", "grabbed", "by", "the", "throat", "&", "amp", ";", "jerked", "toward", "the", "car", ";", "hardly", "\"", "Attacking", "\""]
# ::lemmas ["or", "be", "he", "just", "resist", "be", "grab", "by", "the", "throat", "&", "amp", ";", "jerk", "toward", "the", "car", ";", "hardly", "\"", "attack", "\""]
(c42-4 / or
       :op2 (c42-11 / and
                    :op1 (c42-6 / resist-01
                                :ARG0 (c42-0 / he
                                             :part (c42-9 / throat)
                                             :part (c42-3 / mouth))
                                :ARG1 (c42-8 / grab-01
                                             :ARG1 c42-0)
                                :mod (c42-1 / just))
                    :op2 (c42-10 / jerk-01
                                 :ARG1 c42-0
                                 :direction (c42-7 / car))
                    :op3 (c42-5 / attack-01
                                :degree (c42-2 / hardly))))

# ::snt They're just trying find way justify what they did. There's NO WAY to, but they're stupid realize that.
# ::tokens ["They", "'re", "just", "trying", "find", "way", "justify", "what", "they", "did", ".", "There", "'s", "NO", "WAY", "to", ",", "but", "they", "'re", "stupid", "realize", "that", "."]
# ::lemmas ["they", "be", "just", "try", "find", "way", "justify", "what", "they", "do", ".", "there", "be", "no", "way", "to", ",", "but", "they", "be", "stupid", "realize", "that", "."]
(c43-4 / multi-sentence
       :snt1 (c43-14 / try-01
                     :ARG0 (c43-12 / they)
                     :ARG1 (c43-3 / find-01
                                  :ARG0 c43-12
                                  :ARG1 (c43-1 / way
                                               :manner-of (c43-0 / justify-01
                                                                 :ARG1 (c43-9 / thing
                                                                              :ARG1-of (c43-10 / do-02
                                                                                               :ARG0 (c43-6 / they)))))
                                  :mod (c43-15 / just))
                     :snt2 (c43-2 / have-concession-91
                                  :ARG1 (c43-7 / way
                                               :manner-of (c43-5 / way)
                                               :polarity -)
                                  :ARG2 (c43-11 / realize-01
                                                :ARG0 (c43-13 / stupid
                                                              :domain (c43-8 / they))
                                                :ARG1 c43-5))))

# ::snt Didja miss the part where he beat the cop?
# ::tokens ["Didja", "miss", "the", "part", "where", "he", "beat", "the", "cop", "?"]
# ::lemmas ["Didja", "miss", "the", "part", "where", "he", "beat", "the", "cop", "?"]
(c44-2 / miss-02
       :ARG0 (c44-1 / you)
       :ARG1 (c44-4 / part
                    :subevent-of (c44-3 / beat-01
                                        :ARG0 (c44-0 / he)
                                        :ARG1 (c44-5 / cop)))
       :polarity (c44-6 / amr-unknown))
