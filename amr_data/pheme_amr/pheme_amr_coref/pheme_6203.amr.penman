# ::snt why do cops need to have hrs to get their story straight. When they want us in the pen or grave within the st .
# ::tokens ["why", "do", "cops", "need", "to", "have", "hrs", "to", "get", "their", "story", "straight", ".", "When", "they", "want", "us", "in", "the", "pen", "or", "grave", "within", "the", "st", "."]
# ::lemmas ["why", "do", "cop", "need", "to", "have", "hrs", "to", "get", "their", "story", "straight", ".", "when", "they", "want", "we", "in", "the", "pen", "or", "grave", "within", "the", "st", "."]
(c1-0 / multi-sentence
      :snt1 (c1-18 / cause-01
                   :ARG0 (c1-6 / amr-unknown)
                   :ARG1 (c1-10 / need-01
                                :ARG0 (c1-3 / cop)
                                :ARG1 (c1-11 / multiple
                                             :op1 (c1-20 / temporal-quantity
                                                         :unit (c1-7 / hour)
                                                         :quant 1))
                                :purpose (c1-12 / get-04
                                                :ARG0 c1-3
                                                :ARG1 (c1-5 / straight-04
                                                            :ARG1 (c1-9 / story
                                                                        :poss c1-3)))))
      :snt2 (c1-8 / be-temporally-at-91
                  :ARG2 (c1-13 / want-01
                               :ARG0 (c1-19 / they)
                               :ARG1 (c1-15 / be-located-at-91
                                            :ARG1 (c1-1 / we)
                                            :ARG2 (c1-17 / or
                                                         :op1 (c1-2 / pen)
                                                         :op2 (c1-4 / grave)
                                                         :location (c1-14 / inside
                                                                          :op1 (c1-16 / st)))))))

# ::snt Cause it's all lies. Even if he was a suspect, you apprehend him. Not kill him. The police are liars.
# ::tokens ["Cause", "it", "'s", "all", "lies", ".", "Even", "if", "he", "was", "a", "suspect", ",", "you", "apprehend", "him", ".", "Not", "kill", "him", ".", "The", "police", "are", "liars", "."]
# ::lemmas ["cause", "it", "be", "all", "lie", ".", "even", "if", "he", "be", "a", "suspect", ",", "you", "apprehend", "he", ".", "not", "kill", "he", ".", "the", "police", "be", "liar", "."]
(c2-3 / multi-sentence
      :snt1 (c2-10 / cause-01
                   :ARG0 (c2-12 / thing
                                :ARG1-of (c2-2 / lie-08)
                                :mod (c2-14 / all)))
      :snt2 (c2-0 / have-concession-91
                  :ARG1 (c2-6 / apprehend-01
                              :ARG0 (c2-1 / you)
                              :ARG1 (c2-4 / he)
                              :polarity -)
                  :ARG2 (c2-5 / even-if
                              :op1 (c2-11 / suspect-01
                                          :ARG0 c2-4)))
      :snt3 (c2-7 / kill-01
                  :ARG0 c2-1
                  :ARG1 (c2-8 / he)
                  :polarity -)
      :snt4 (c2-9 / person
                  :ARG0-of c2-2)
      :domain (c2-13 / police))

# ::snt because probably right about now they can see that a riot is about to kick off
# ::tokens ["because", "probably", "right", "about", "now", "they", "can", "see", "that", "a", "riot", "is", "about", "to", "kick", "off"]
# ::lemmas ["because", "probably", "right", "about", "now", "they", "can", "see", "that", "a", "riot", "be", "about", "to", "kick", "off"]
(c3-6 / cause-01
      :ARG0 (c3-4 / possible-01
                  :ARG1 (c3-7 / see-01
                              :ARG0 (c3-8 / they)
                              :ARG1 (c3-1 / kick-off-04
                                          :ARG1 (c3-5 / riot-01)
                                          :time (c3-10 / about-to)))
                  :mod (c3-9 / probable)
                  :time (c3-0 / about
                              :op1 (c3-2 / now)
                              :mod (c3-3 / right))))

# ::snt its bullshit thats why
# ::tokens ["its", "bullshit", "that", "s", "why"]
# ::lemmas ["its", "bullshit", "that", "s", "why"]
(c4-0 / cause-01
      :ARG0 (c4-2 / bullshit-01
                  :ARG1 (c4-1 / it)))

# ::snt cuz they had to get their lie straight!! Geez
# ::tokens ["cuz", "they", "had", "to", "get", "their", "lie", "straight", "!", "!", "Geez"]
# ::lemmas ["cuz", "they", "have", "to", "get", "their", "lie", "straight", "!", "!", "geez"]
(c5-3 / cause-01
      :ARG0 (c5-2 / obligate-01
                  :ARG1 (c5-6 / they)
                  :ARG2 (c5-4 / get-04
                              :ARG0 c5-6
                              :ARG1 (c5-5 / straight-04
                                          :ARG1 (c5-1 / lie-08
                                                      :ARG0 c5-6))))
      :mod (c5-0 / jeez
                 :mode expressive))

# ::snt cuz they was coming up with a good lie
# ::tokens ["cuz", "they", "was", "coming", "up", "with", "a", "good", "lie"]
# ::lemmas ["cuz", "they", "be", "come", "up", "with", "a", "good", "lie"]
(c6-2 / cause-01
      :ARG0 (c6-1 / come-up-11
                  :ARG0 (c6-4 / they)
                  :ARG1 (c6-0 / lie-08
                              :ARG0 c6-4
                              :ARG1-of (c6-3 / good-02))))

# ::snt it must have been too peaceful for their tastes last night
# ::tokens ["it", "must", "have", "been", "too", "peaceful", "for", "their", "tastes", "last", "night"]
# ::lemmas ["it", "must", "have", "be", "too", "peaceful", "for", "their", "taste", "last", "night"]
(c7-2 / infer-01
      :ARG1 (c7-0 / have-degree-91
                  :ARG1 (c7-7 / it)
                  :ARG2 (c7-5 / peaceful)
                  :ARG3 (c7-9 / too)
                  :ARG6 (c7-8 / taste
                              :poss (c7-4 / they))
                  :time (c7-6 / date-entity
                              :dayperiod (c7-3 / night)
                              :mod (c7-1 / yesterday))))

# ::snt subdued by rhetoric imbued with disconnected views so witnesses confused by mismanagement get bamboozled and damaged
# ::tokens ["subdued", "by", "rhetoric", "imbued", "with", "disconnected", "views", "so", "witnesses", "confused", "by", "mismanagement", "get", "bamboozled", "and", "damaged"]
# ::lemmas ["subdue", "by", "rhetoric", "imbue", "with", "disconnected", "view", "so", "witness", "confuse", "by", "mismanagement", "get", "bamboozle", "and", "damage"]
(c8-8 / cause-01
      :ARG0 (c8-11 / subdue-01
                   :ARG0 (c8-7 / rhetoric
                               :ARG1-of (c8-4 / imbue-01
                                              :ARG2 (c8-5 / view-02
                                                          :ARG1-of (c8-9 / disconnect-01)))))
      :ARG1 (c8-12 / and
                   :op1 (c8-3 / bamboozle-01
                              :ARG1 (c8-6 / person
                                          :ARG0-of (c8-0 / witness-01)
                                          :ARG1-of (c8-10 / confuse-01
                                                          :ARG0 (c8-2 / mismanage-01))))
                   :op2 (c8-1 / damage-01
                              :ARG1 c8-6)))

# ::snt Whether or not he was a suspect we are afforded basic human rights like NOT BEING GUNNED DOWN while unarmed by police
# ::tokens ["Whether", "or", "not", "he", "was", "a", "suspect", "we", "are", "afforded", "basic", "human", "rights", "like", "NOT", "BEING", "GUNNED", "DOWN", "while", "unarmed", "by", "police"]
# ::lemmas ["whether", "or", "not", "he", "be", "a", "suspect", "we", "be", "afford", "basic", "human", "right", "like", "not", "be", "gunned", "down", "while", "unarmed", "by", "police"]
(c9-10 / afford-02
       :ARG1 (c9-7 / right-05
                   :ARG1 (c9-1 / we)
                   :mod (c9-0 / human)
                   :mod (c9-3 / basic)
                   :example (c9-8 / gun-down-00
                                  :ARG1 c9-1
                                  :time (c9-4 / arm-01
                                              :ARG0 (c9-6 / police)
                                              :ARG1 c9-1
                                              :polarity -)
                                  :polarity -))
       :ARG2 c9-1
       :ARG1-of (c9-5 / regardless-91
                      :ARG2 (c9-9 / suspect-01
                                  :ARG0 (c9-2 / he))))

# ::snt don't even think he was the robbery suspect
# ::tokens ["do", "n't", "even", "think", "he", "was", "the", "robbery", "suspect"]
# ::lemmas ["do", "not", "even", "think", "he", "be", "the", "robbery", "suspect"]
(c10-5 / think-01
       :ARG0 (c10-1 / you)
       :ARG1 (c10-4 / suspect-01
                    :ARG1 (c10-3 / rob-01
                                 :ARG0 (c10-0 / he
                                              :ARG2-of c10-4)))
       :mod (c10-2 / even)
       :polarity -)

# ::snt So when do police ask robbery suspects to walk on the sidewalk and to get out the street.
# ::tokens ["So", "when", "do", "police", "ask", "robbery", "suspects", "to", "walk", "on", "the", "sidewalk", "and", "to", "get", "out", "the", "street", "."]
# ::lemmas ["so", "when", "do", "police", "ask", "robbery", "suspect", "to", "walk", "on", "the", "sidewalk", "and", "to", "get", "out", "the", "street", "."]
(c11-11 / ask-02
        :ARG0 (c11-6 / police)
        :ARG1 (c11-4 / and
                     :op1 (c11-0 / walk-01
                                 :ARG0 (c11-10 / person
                                               :ARG2-of (c11-9 / suspect-01
                                                               :ARG1 (c11-7 / rob-01)))
                                 :ARG2 (c11-3 / sidewalk))
                     :op2 (c11-8 / get-05
                                 :ARG1 c11-10
                                 :ARG2 (c11-2 / out-06
                                              :ARG1 c11-10
                                              :ARG2 (c11-1 / street))))
        :ARG2 c11-10
        :time (c11-5 / amr-unknown))

# ::snt They needed something to muddy up and second-rate the announcement of the police officer's name. PR at work.
# ::tokens ["They", "needed", "something", "to", "muddy", "up", "and", "second", "-", "rate", "the", "announcement", "of", "the", "police", "officer", "'s", "name", ".", "PR", "at", "work", "."]
# ::lemmas ["they", "need", "something", "to", "muddy", "up", "and", "second", "-", "rate", "the", "announcement", "of", "the", "police", "officer", "'s", "name", ".", "pr", "at", "work", "."]
(c12-3 / multi-sentence
       :snt1 (c12-8 / need-01
                    :ARG0 (c12-14 / they)
                    :ARG1 (c12-13 / something
                                  :purpose (c12-16 / and
                                                   :op1 (c12-10 / muddy-up-00
                                                                :ARG0 c12-14)
                                                   :op2 (c12-11 / rate-01
                                                                :ARG0 c12-14
                                                                :ARG1 (c12-6 / announce-01
                                                                             :ARG1 (c12-9 / name-01
                                                                                          :ARG1 (c12-5 / officer
                                                                                                       :ARG2-of (c12-0 / have-org-role-91
                                                                                                                       :ARG1 (c12-12 / police)))))
                                                                :ord (c12-2 / ordinal-entity
                                                                            :value 2)))))
       :snt2 (c12-15 / person
                     :ARG0-of c12-0
                     :ARG1 c12-12
                     :ARG2 (c12-7 / relation-03
                                  :ARG2 (c12-4 / public)))
       :location (c12-1 / work-01))

# ::snt .: This is simple: IF was a robbery suspect, why didnt police say that on DAY ONE? Why wait six days?
# ::tokens [".", ":", "This", "is", "simple", ":", "IF", "was", "a", "robbery", "suspect", ",", "why", "did", "nt", "police", "say", "that", "on", "DAY", "ONE", "?", "Why", "wait", "six", "days", "?"]
# ::lemmas [".", ":", "this", "be", "simple", ":", "if", "be", "a", "robbery", "suspect", ",", "why", "do", "not", "police", "say", "that", "on", "DAY", "one", "?", "why", "wait", "six", "days", "?"]
(c13-4 / multi-sentence
       :snt1 (c13-15 / simple-02
                     :ARG1 (c13-16 / this))
       :snt2 (c13-0 / have-condition-91
                    :ARG1 (c13-11 / cause-01
                                  :ARG0 (c13-17 / amr-unknown)
                                  :ARG1 (c13-6 / say-01
                                               :ARG0 (c13-9 / police)
                                               :ARG1 (c13-14 / that)
                                               :time (c13-10 / day
                                                             :ord (c13-5 / ordinal-entity
                                                                         :value 1))
                                               :polarity -))
                    :ARG2 (c13-3 / suspect-01
                                 :ARG1 (c13-12 / rob-01)
                                 :ARG2 c13-9))
       :snt3 (c13-13 / cause-01
                     :ARG0 (c13-7 / amr-unknown)
                     :ARG1 (c13-1 / wait-01
                                  :ARG2 (c13-8 / temporal-quantity
                                               :unit (c13-2 / day)
                                               :quant 6))))

# ::snt Even if he was, that doesn't justify them killing him. Total abuse of police power.
# ::tokens ["Even", "if", "he", "was", ",", "that", "does", "n't", "justify", "them", "killing", "him", ".", "Total", "abuse", "of", "police", "power", "."]
# ::lemmas ["even", "if", "he", "be", ",", "that", "do", "not", "justify", "they", "kill", "he", ".", "total", "abuse", "of", "police", "power", "."]
(c14-2 / multi-sentence
       :snt1 (c14-0 / justify-01
                    :ARG0 (c14-9 / that)
                    :ARG1 (c14-4 / kill-01
                                 :ARG0 (c14-7 / they)
                                 :ARG1 (c14-1 / he))
                    :concession (c14-3 / even-if
                                       :op1 (c14-11 / he))
                    :polarity -)
       :snt2 (c14-8 / abuse-02
                    :ARG1 (c14-6 / power
                                 :mod (c14-10 / police))
                    :mod (c14-5 / total)))

# ::snt it takes time to put a story that all officers can learn. It,s just like learning lines for a big movie role.
# ::tokens ["it", "takes", "time", "to", "put", "a", "story", "that", "all", "officers", "can", "learn", ".", "It", ",", "s", "just", "like", "learning", "lines", "for", "a", "big", "movie", "role", "."]
# ::lemmas ["it", "take", "time", "to", "put", "a", "story", "that", "all", "officer", "can", "learn", ".", "it", ",", "s", "just", "like", "learn", "line", "for", "a", "big", "movie", "role", "."]
(c15-3 / multi-sentence
       :snt1 (c15-14 / take-10
                     :ARG0 (c15-8 / put-03
                                  :ARG1 (c15-13 / story
                                                :ARG1-of (c15-2 / learn-01
                                                                :ARG0 (c15-5 / officer
                                                                             :mod (c15-16 / all))
                                                                :ARG1-of (c15-15 / possible-01))))
                     :ARG1 (c15-12 / time))
       :snt2 (c15-9 / resemble-01
                    :ARG1 (c15-6 / it)
                    :ARG2 (c15-10 / line
                                  :mod (c15-0 / learn-01
                                              :ARG1 (c15-7 / role
                                                           :mod (c15-11 / movie
                                                                        :mod (c15-4 / big)))))
                    :mod (c15-1 / just)))

# ::snt Here it is!My dedication to MICHAEL BROWNPLEASE SHARE TO FIGHT AGINST POLICE BRUTALITY
# ::tokens ["Here", "it", "is!My", "dedication", "to", "MICHAEL", "BROWNPLEASE", "SHARE", "TO", "FIGHT", "AGINST", "POLICE", "BRUTALITY"]
# ::lemmas ["here", "it", "is!My", "dedication", "to", "MICHAEL", "BROWNPLEASE", "SHARE", "to", "fight", "aginst", "police", "BRUTALITY"]
(c16-2 / multi-sentence
       :snt1 (c16-4 / it
                    :location (c16-0 / here))
       :snt2 (c16-7 / dedicate-01
                    :ARG0 (c16-8 / i
                                 :ARG1-of c16-7)
                    :ARG2 (c16-9 / show-04
                                 :ARG0 (c16-6 / person
                                              :name (c16-5 / name
                                                           :op1 "Michael"
                                                           :op2 "Brown"))
                                 :ARG1 (c16-1 / fight-01
                                              :ARG0 c16-6
                                              :ARG1 (c16-3 / ban-01
                                                           :ARG1 (c16-10 / police)))
                                 :mode imperative)))

# ::snt it was said day one.
# ::tokens ["it", "was", "said", "day", "one", "."]
# ::lemmas ["it", "be", "say", "day", "one", "."]
(c17-0 / say-01
       :ARG1 (c17-3 / it)
       :time (c17-1 / day
                    :ord (c17-2 / ordinal-entity
                                :value 1)))

# ::snt TRAYVON MARTIN case all over again...! Bull..!!! To justify him bring killed unlawfully...he is now a SUSPECT...WTF
# ::tokens ["TRAYVON", "MARTIN", "case", "all", "over", "again", "...", "!", "Bull", "..", "!", "!", "!", "To", "justify", "him", "bring", "killed", "unlawfully", "...", "he", "is", "now", "a", "SUSPECT", "...", "WTF"]
# ::lemmas ["TRAYVON", "MARTIN", "case", "all", "over", "again", "...", "!", "bull", "..", "!", "!", "!", "to", "justify", "he", "bring", "kill", "unlawfully", "...", "he", "be", "now", "a", "SUSPECT", "...", "WTF"]
(c18-2 / multi-sentence
       :snt1 (c18-8 / case-03
                    :ARG2 (c18-7 / person
                                 :name (c18-5 / name
                                              :op1 "Rayvon"
                                              :op2 "Martin"))
                    :mod (c18-12 / again
                                 :mod (c18-4 / all-over)))
       :snt2 (c18-3 / bull)
       :snt3 (c18-0 / justify-01
                    :ARG1 (c18-9 / bring-01
                                 :ARG1 c18-7
                                 :ARG1-of (c18-11 / kill-01
                                                  :ARG1-of (c18-1 / legal-02
                                                                  :polarity -)))
                    :ARG2-of c18-2)
       :ARG1 c18-9
       :ARG1 c18-7
       :snt4 (c18-10 / shit
                     :time (c18-6 / now)
                     :mode expressive))

# ::snt I'm sooo proud to see people not buying into these lies! Let's keep pressure on them. Ask questions, retweet!
# ::tokens ["I", "'m", "sooo", "proud", "to", "see", "people", "not", "buying", "into", "these", "lies", "!", "Let", "'s", "keep", "pressure", "on", "them", ".", "Ask", "questions", ",", "retweet", "!"]
# ::lemmas ["i", "be", "sooo", "proud", "to", "see", "people", "not", "buy", "into", "these", "lie", "!", "let", "us", "keep", "pressure", "on", "they", ".", "ask", "question", ",", "retweet", "!"]
(c19-0 / multi-sentence
       :snt1 (c19-1 / pride-01
                    :ARG0 (c19-13 / i)
                    :ARG2 (c19-2 / see-01
                                 :ARG0 c19-13
                                 :ARG1 (c19-7 / buy-into-04
                                              :ARG0 (c19-3 / person)
                                              :ARG1 (c19-18 / thing
                                                            :ARG1-of (c19-5 / lie-08)
                                                            :mod (c19-17 / this))
                                              :polarity -))
                    :degree (c19-8 / so))
       :snt2 (c19-15 / keep-01
                     :ARG0 (c19-11 / we)
                     :ARG1 (c19-6 / pressure-01
                                  :ARG0 c19-11
                                  :ARG1 (c19-14 / they))
                     :mode imperative)
       :snt3 (c19-4 / and
                    :op1 (c19-12 / ask-01
                                 :ARG0 (c19-16 / you)
                                 :ARG1 (c19-9 / question-01
                                              :ARG0 c19-16)
                                 :mode imperative)
                    :op2 (c19-10 / retweet-01
                                 :ARG0 c19-16
                                 :mode imperative)))

# ::snt even still he was unarmed and posed no threat. Detain, an arrest. No need for a gun
# ::tokens ["even", "still", "he", "was", "unarmed", "and", "posed", "no", "threat", ".", "Detain", ",", "an", "arrest", ".", "No", "need", "for", "a", "gun"]
# ::lemmas ["even", "still", "he", "be", "unarmed", "and", "pose", "no", "threat", ".", "Detain", ",", "an", "arrest", ".", "no", "need", "for", "a", "gun"]
(c20-2 / multi-sentence
       :snt1 (c20-13 / and
                     :op1 (c20-4 / arm-01
                                 :ARG1 (c20-0 / he)
                                 :mod (c20-11 / still
                                              :mod (c20-3 / even))
                                 :polarity -)
                     :op2 (c20-7 / pose-02
                                 :ARG0 c20-0
                                 :ARG1 (c20-12 / threaten-01)
                                 :polarity -)
                     :snt2-of c20-2)
       :op1 (c20-8 / detain-01
                   :ARG1 (c20-1 / you))
       :op2 (c20-6 / arrest-01
                   :ARG1 (c20-10 / you))
       :snt3 (c20-5 / need-01
                    :ARG1 (c20-9 / gun)
                    :polarity -))
