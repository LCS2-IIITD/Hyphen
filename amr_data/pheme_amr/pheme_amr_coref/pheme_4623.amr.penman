# ::snt Fucking GODDDESS.
# ::tokens ["Fucking", "GODDDESS", "."]
# ::lemmas ["Fucking", "GODDDESS", "."]
(c1-1 / person
      :name (c1-0 / name
                  :op1 "GodDDESS")
      :mod (c1-2 / fucking)
      :mode expressive)

# ::snt IF YOU SEE ME NOTICE MY FRIEND PLEASE!!!! SHE'S FRENCH
# ::tokens ["IF", "YOU", "SEE", "ME", "NOTICE", "MY", "FRIEND", "PLEASE", "!", "!", "!", "!", "SHE", "'S", "FRENCH"]
# ::lemmas ["if", "you", "see", "i", "notice", "my", "friend", "please", "!", "!", "!", "!", "SHE", "be", "french"]
(c2-3 / multi-sentence
      :snt1 (c2-7 / notice-01
                  :ARG0 (c2-1 / you)
                  :ARG1 (c2-8 / person
                              :ARG0-of (c2-0 / have-rel-role-91
                                             :ARG1 (c2-5 / i)
                                             :ARG2 (c2-2 / friend)))
                  :condition (c2-9 / see-01
                                   :ARG0 c2-1
                                   :ARG1 c2-5)
                  :polite +
                  :mode imperative)
      :snt2 (c2-6 / fricken-01
                  :ARG1 (c2-4 / she)
                  :mode expressive))

# ::snt hiii miss u on grey's anatomy xx do u miss them?
# ::tokens ["hiii", "miss", "u", "on", "grey", "'s", "anatomy", "xx", "do", "u", "miss", "them", "?"]
# ::lemmas ["hiii", "miss", "u", "on", "grey", "'s", "anatomy", "xx", "do", "u", "miss", "they", "?"]
(c3-8 / and
      :op1 (c3-1 / miss-01
                 :ARG0 (c3-3 / i)
                 :ARG1 (c3-0 / you)
                 :topic (c3-2 / anatomy
                              :part-of (c3-6 / grey)))
      :op2 (c3-5 / miss-01
                 :ARG0 c3-0
                 :ARG1 (c3-7 / they)
                 :polarity (c3-4 / amr-unknown)))

# ::snt what happens?
# ::tokens ["what", "happens", "?"]
# ::lemmas ["what", "happen", "?"]
(c4-0 / event
      :mod (c4-1 / amr-unknown))

# ::snt i love you
# ::tokens ["i", "love", "you"]
# ::lemmas ["i", "love", "you"]
(c5-1 / love-01
      :ARG0 (c5-2 / i)
      :ARG1 (c5-0 / you))

# ::snt je t'aime
# ::tokens ["je", "t'aime"]
# ::lemmas ["je", "t'aime"]
(c6-0 / je-t-aime)

# ::snt Thank you Sandra....this is so scary!!
# ::tokens ["Thank", "you", "Sandra", "....", "this", "is", "so", "scary", "!", "!"]
# ::lemmas ["thank", "you", "Sandra", "....", "this", "be", "so", "scary", "!", "!"]
(c7-6 / say-01
      :ARG0 (c7-2 / i)
      :ARG1 (c7-7 / thank-01
                  :ARG0 c7-2
                  :ARG1 (c7-4 / person
                              :name (c7-3 / name
                                          :op1 "Sandra"))
                  :ARG2 (c7-1 / scary-03
                              :ARG0 (c7-5 / this)
                              :degree (c7-0 / so)))
      :ARG2 c7-4)

# ::snt and I send my love and support, too
# ::tokens ["and", "I", "send", "my", "love", "and", "support", ",", "too"]
# ::lemmas ["and", "i", "send", "my", "love", "and", "support", ",", "too"]
(c8-6 / and
      :op2 (c8-4 / send-01
                 :ARG0 (c8-3 / i)
                 :ARG1 (c8-2 / and
                             :op1 (c8-0 / love-01
                                        :ARG0 c8-3)
                             :op2 (c8-1 / support-01
                                        :ARG0 c8-3))
                 :mod (c8-5 / too)))

# ::snt ...Shooting in Ottawa
# ::tokens ["...", "Shooting", "in", "Ottawa"]
# ::lemmas ["...", "shoot", "in", "Ottawa"]
(c9-0 / shoot-02
      :location (c9-2 / city
                      :name (c9-1 / name
                                  :op1 "Ottawa")))

# ::snt Aw I hope they're okay &lt;3
# ::tokens ["Aw", "I", "hope", "they", "'re", "okay", "&", "lt;3"]
# ::lemmas ["aw", "i", "hope", "they", "be", "okay", "&", "lt;3"]
(c10-1 / multi-sentence
       :snt1 (c10-0 / hope-01
                    :ARG0 (c10-3 / i)
                    :ARG1 (c10-2 / okay-04
                                 :ARG1 (c10-6 / they))
                    :mod (c10-7 / aw
                                :mode expressive))
       :snt2 (c10-5 / person
                    :name (c10-4 / name
                                 :op1 "lt;3")))

# ::snt i voting for Cristina bc I miss her so much and miss u
# ::tokens ["i", "voting", "for", "Cristina", "bc", "I", "miss", "her", "so", "much", "and", "miss", "u"]
# ::lemmas ["i", "vote", "for", "Cristina", "bc", "i", "miss", "she", "so", "much", "and", "miss", "u"]
(c11-4 / vote-01
       :ARG0 (c11-2 / i)
       :ARG1 (c11-5 / person
                    :name (c11-3 / name
                                 :op1 "Cristina"))
       :ARG1-of (c11-7 / cause-01
                       :ARG0 (c11-9 / and
                                    :op1 (c11-1 / miss-01
                                                :ARG0 c11-2
                                                :ARG1 c11-5
                                                :degree (c11-6 / much
                                                               :degree (c11-8 / so)))
                                    :op2 (c11-0 / miss-01
                                                :ARG0 c11-2
                                                :ARG1 c11-5))))

# ::snt : Sending love &amp; support to my hometown Ottawa Canada. Pls everyone be safe, thinking of u all.
# ::tokens [":", "Sending", "love", "&", "amp", ";", "support", "to", "my", "hometown", "Ottawa", "Canada", ".", "Pls", "everyone", "be", "safe", ",", "thinking", "of", "u", "all", "."]
# ::lemmas [":", "send", "love", "&", "amp", ";", "support", "to", "my", "hometown", "Ottawa", "Canada", ".", "pls", "everyone", "be", "safe", ",", "think", "of", "u", "all", "."]
(c12-3 / multi-sentence
       :snt1 (c12-14 / send-01
                     :ARG1 (c12-16 / and
                                   :op1 (c12-2 / love-01)
                                   :op2 (c12-11 / person
                                                :name (c12-9 / name
                                                             :op1 "amp"))
                                   :op3 (c12-5 / support-01))
                     :ARG2 (c12-0 / hometown
                                  :poss (c12-8 / i)
                                  :location (c12-12 / country
                                                    :name (c12-10 / name
                                                                  :op1 "Ottawa"
                                                                  :op2 "Canada"))))
       :snt2 (c12-4 / safe-01
                    :ARG1 (c12-6 / everyone)
                    :mode imperative)
       :snt3 (c12-15 / think-01
                     :ARG0 (c12-1 / you)
                     :ARG1 (c12-13 / you
                                   :mod (c12-7 / all))
                     :mode imperative))

# ::snt i miss you on grey's
# ::tokens ["i", "miss", "you", "on", "grey", "'s"]
# ::lemmas ["i", "miss", "you", "on", "grey", "'s"]
(c13-1 / miss-01
       :ARG0 (c13-2 / i)
       :ARG1 (c13-0 / you)
       :medium (c13-4 / product
                      :name (c13-3 / name
                                   :op1 "Grey's")))

# ::snt Thinking of everyone there as I live &amp; hour away from ottawa
# ::tokens ["Thinking", "of", "everyone", "there", "as", "I", "live", "&", "amp", ";", "hour", "away", "from", "ottawa"]
# ::lemmas ["think", "of", "everyone", "there", "as", "i", "live", "&", "amp", ";", "hour", "away", "from", "ottawa"]
(c14-2 / multi-sentence
       :snt1 (c14-11 / think-01
                     :ARG0 (c14-5 / i)
                     :ARG1 (c14-4 / everyone
                                  :location (c14-10 / there))
                     :time (c14-1 / live-01
                                  :ARG0 c14-5))
       :snt2 (c14-3 / be-located-at-91
                    :ARG2 (c14-8 / relative-position
                                 :op1 (c14-9 / city
                                             :name (c14-6 / name
                                                          :op1 "Ottawa"))
                                 :quant (c14-7 / temporal-quantity
                                               :unit (c14-0 / hour)
                                               :quant 1))))

# ::snt oh my loveeee
# ::tokens ["oh", "my", "loveeee"]
# ::lemmas ["oh", "my", "loveeee"]
(c15-1 / person
       :ARG0-of (c15-2 / love-01)
       :poss (c15-3 / i)
       :mod (c15-0 / oh)
       :mode expressive)
