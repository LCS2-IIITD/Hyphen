# ::snt make sure they don't torture him. Play nice. Wouldn't want him to get upset
# ::tokens ["make", "sure", "they", "do", "n't", "torture", "him", ".", "Play", "nice", ".", "Would", "n't", "want", "him", "to", "get", "upset"]
# ::lemmas ["make", "sure", "they", "do", "not", "torture", "he", ".", "play", "nice", ".", "would", "not", "want", "he", "to", "get", "upset"]
(c1-3 / multi-sentence
      :snt1 (c1-5 / ensure-01
                  :ARG0 (c1-1 / you)
                  :ARG1 (c1-10 / torture-01
                               :ARG0 (c1-9 / they)
                               :ARG1 (c1-0 / he)
                               :polarity -))
      :snt2 (c1-8 / play-01
                  :ARG0 (c1-12 / you)
                  :ARG1-of (c1-7 / nice-01)
                  :mode imperative)
      :snt3 (c1-2 / want-01
                  :ARG0 (c1-6 / i)
                  :ARG1 (c1-4 / upset-01
                              :ARG1 (c1-11 / he))
                  :polarity -))

# ::snt one down resuc
# ::tokens ["one", "down", "resuc"]
# ::lemmas ["one", "down", "resuc"]
(c2-1 / down-01
      :ARG1 (c2-0 / one))

# ::snt : BREAKING : Sixth hostage escapes ()
# ::tokens [":", "BREAKING", ":", "Sixth", "hostage", "escapes", "(", ")"]
# ::lemmas [":", "break", ":", "Sixth", "hostage", "escape", "(", ")"]
(c3-3 / break-13
      :ARG1 (c3-1 / escape-01
                  :ARG0 (c3-0 / hostage
                              :ord (c3-2 / ordinal-entity
                                         :value 6))))

# ::snt Is that not auto/burst gunfire heard in background of escape footage?
# ::tokens ["Is", "that", "not", "auto", "/", "burst", "gunfire", "heard", "in", "background", "of", "escape", "footage", "?"]
# ::lemmas ["be", "that", "not", "auto", "/", "burst", "gunfire", "hear", "in", "background", "of", "escape", "footage", "?"]
(c4-0 / hear-01
      :ARG1 (c4-8 / slash
                  :op1 (c4-7 / gunfire
                             :mod (c4-9 / auto))
                  :op2 (c4-5 / gunfire
                             :ARG1-of (c4-2 / burst-02)))
      :location (c4-6 / background
                      :part-of (c4-1 / footage
                                     :topic (c4-3 / escape-01)))
      :polarity (c4-4 / amr-unknown)
      :polarity -)

# ::snt : BREAKING : Sixth hostage escapes from ()
# ::tokens [":", "BREAKING", ":", "Sixth", "hostage", "escapes", "from", "(", ")"]
# ::lemmas [":", "break", ":", "Sixth", "hostage", "escape", "from", "(", ")"]
(c5-2 / break-13
      :ARG1 (c5-4 / escape-01
                  :ARG0 (c5-0 / hostage
                              :ord (c5-3 / ordinal-entity
                                         :value 6))
                  :ARG1 (c5-1 / location
                              :name (c5-5 / name
                                          :op1 " ()"))))

# ::snt selfies
# ::tokens ["selfies"]
# ::lemmas ["selfie"]
(c6-0 / selfie)

# ::snt flash bangs stormed in
# ::tokens ["flash", "bangs", "stormed", "in"]
# ::lemmas ["flash", "bang", "storm", "in"]
(c7-0 / storm-02
      :ARG1 (c7-2 / bang
                  :mod (c7-1 / flash)))

# ::snt down
# ::tokens ["down"]
# ::lemmas ["down"]
(c8-0 / down-03)

# ::snt Yes. RT BREAKING Sixth hostage escapes from ()
# ::tokens ["Yes", ".", "RT", "BREAKING", "Sixth", "hostage", "escapes", "from", "(", ")"]
# ::lemmas ["yes", ".", "RT", "BREAKING", "Sixth", "hostage", "escape", "from", "(", ")"]
(c9-2 / multi-sentence
      :snt1 (c9-1 / yes)
      :snt2 (c9-3 / break-13
                  :ARG1 (c9-5 / escape-01
                              :ARG0 (c9-0 / hostage
                                          :ord (c9-4 / ordinal-entity
                                                     :value 6))
                              :ARG2 (c9-7 / person
                                          :name (c9-6 / name
                                                      :op1 " ()")))))

# ::snt : BREAKING : Sixth hostage escapes from ()
# ::tokens [":", "BREAKING", ":", "Sixth", "hostage", "escapes", "from", "(", ")"]
# ::lemmas [":", "break", ":", "Sixth", "hostage", "escape", "from", "(", ")"]
(c11-2 / break-13
       :ARG1 (c11-4 / escape-01
                    :ARG0 (c11-0 / hostage
                                 :ord (c11-3 / ordinal-entity
                                             :value 6))
                    :ARG1 (c11-1 / location
                                 :name (c11-5 / name
                                              :op1 " ()"))))
