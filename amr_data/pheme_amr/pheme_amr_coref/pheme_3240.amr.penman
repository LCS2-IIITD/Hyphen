# ::snt J'tais pas assez en colre.
# ::tokens ["J'tais", "pas", "assez", "en", "colre", "."]
# ::lemmas ["j'tais", "pas", "assez", "en", "colre", "."]
(c1-0 / sense-02
      :ARG1 (c1-2 / pas-01
                  :ARG0 (c1-1 / we)
                  :mod (c1-3 / assez-in-colre))
      :polarity -)

# ::snt &lt;3 &lt;3 &lt;3 &lt;3 &lt;3 &lt;3 &lt;3
# ::tokens ["&", "lt;3", "&", "lt;3", "&", "lt;3", "&", "lt;3", "&", "lt;3", "&", "lt;3", "&", "lt;3"]
# ::lemmas ["&", "lt;3", "&", "lt;3", "&", "lt;3", "&", "lt;3", "&", "lt;3", "&", "lt;3", "&", "lt;3"]
(c2-0 / string-entity
      :value "&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3")

# ::snt of ALL TIME! thank you
# ::tokens ["of", "ALL", "TIME", "!", "thank", "you"]
# ::lemmas ["of", "all", "TIME", "!", "thank", "you"]
(c3-1 / thank-01
      :ARG1 (c3-0 / you)
      :time (c3-3 / time
                  :mod (c3-2 / all))
      :mode expressive)

# ::snt Je sais pas pourquoi tu l'as pas trouve avant...
# ::tokens ["Je", "sais", "pas", "pourquoi", "tu", "l'as", "pas", "trouve", "avant", "..."]
# ::lemmas ["Je", "sais", "pas", "pourquoi", "tu", "l'as", "pas", "trouve", "avant", "..."]
(c4-1 / multi-sentence
      :snt1 (c4-8 / comment-01
                  :ARG0 (c4-4 / i)
                  :ARG1 (c4-9 / si))
      :snt2 (c4-6 / pourquoi
                  :polarity (c4-11 / amr-unknown)
                  :domain (c4-3 / et-cetera
                                :ARG1-of (c4-7 / mean-01
                                               :ARG2 (c4-2 / et-cetera))))
      :snt3 (c4-0 / et-cetera
                  :domain (c4-10 / person
                                 :name (c4-5 / name
                                             :op1 "Avant"))
                  :mode expressive))

# ::snt jtm
# ::tokens ["jtm"]
# ::lemmas ["jtm"]
(c5-1 / person
      :name (c5-0 / name
                  :op1 "Jtm"))

# ::snt cause de ton pseudo je l'ai lu avec la voix de Dracula. C'tait atroce.
# ::tokens ["cause", "de", "ton", "pseudo", "je", "l'ai", "lu", "avec", "la", "voix", "de", "Dracula", ".", "C'tait", "atroce", "."]
# ::lemmas ["cause", "de", "ton", "pseudo", "je", "l'ai", "lu", "avec", "la", "voix", "de", "Dracula", ".", "c'tait", "atroce", "."]
(c6-1 / multi-sentence
      :snt1 (c6-8 / cause-01
                  :ARG0 (c6-11 / amr-unknown)
                  :ARG1 (c6-0 / laugh-01
                              :ARG0 (c6-6 / person
                                          :quant (c6-9 / ton)
                                          :mod (c6-10 / pseudo))
                              :ARG2 (c6-2 / person
                                          :name (c6-4 / name
                                                      :op1 "Dracula"))
                              :mod (c6-5 / voix
                                         :poss c6-2)))
      :snt2 (c6-7 / c'tait
                  :mod (c6-3 / atroce-00)))

# ::snt a se surpasse ce matin.
# ::tokens ["a", "se", "surpasse", "ce", "matin", "."]
# ::lemmas ["a", "se", "surpasse", "ce", "matin", "."]
(c7-0 / surpasse-00
      :ARG1 (c7-1 / amr-unintelligible
                  :value "camein"))

# ::snt Mais bordel :'D
# ::tokens ["Mais", "bordel", ":", "'", "D"]
# ::lemmas ["Mais", "bordel", ":", "'", "d"]
(c8-0 / string-entity
      :value "Mais bordel:")

# ::snt Hurry up with my damn galette.
# ::tokens ["Hurry", "up", "with", "my", "damn", "galette", "."]
# ::lemmas ["hurry", "up", "with", "my", "damn", "galette", "."]
(c10-0 / hurry-01
       :ARG0 (c10-1 / you)
       :accompanier (c10-4 / galette
                           :poss (c10-2 / i)
                           :mod (c10-3 / damn
                                       :mode expressive))
       :mode imperative)

# ::snt GG je me suis touff avec ma tartine
# ::tokens ["GG", "je", "me", "suis", "touff", "avec", "ma", "tartine"]
# ::lemmas ["gg", "je", "i", "suis", "touff", "avec", "ma", "tartine"]
(c11-5 / say-01
       :ARG0 (c11-1 / i)
       :ARG1 (c11-0 / je-ff
                    :beneficiary (c11-4 / person
                                        :name (c11-2 / name
                                                     :op1 "GG"))
                    :domain (c11-6 / person
                                   :name (c11-3 / name
                                                :op1 "Suis"
                                                :op2 " touff"
                                                :op3 "a"
                                                :op4 "Tartine")
                                   :ARG2-of c11-5)
                    :mode expressive))

# ::snt Perharps the same could be said of all religions.
# ::tokens ["Perharps", "the", "same", "could", "be", "said", "of", "all", "religions", "."]
# ::lemmas ["perharps", "the", "same", "could", "be", "say", "of", "all", "religion", "."]
(c12-5 / say-01
       :ARG1 (c12-3 / possible-01
                    :ARG1 (c12-1 / say-01
                                 :ARG1 (c12-6 / thing
                                              :ARG1-of (c12-0 / same-01))
                                 :ARG3 (c12-4 / religion
                                              :mod (c12-8 / all))))
       :ARG2 (c12-7 / person
                    :name (c12-2 / name
                                 :op1 "Perhar")))

# ::snt a t'a marqu cette histoire de galette
# ::tokens ["a", "t'a", "marqu", "cette", "histoire", "de", "galette"]
# ::lemmas ["a", "t'a", "marqu", "cette", "histoire", "de", "galette"]
(c13-1 / case-03
       :ARG1 (c13-0 / name
                    :op1 "Cette"
                    :op2 "de"
                    :op3 "Galette"))
