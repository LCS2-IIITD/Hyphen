# ::snt Yes hear hear...multiculturalism at its best
# ::tokens ["Yes", "hear", "hear", "...", "multiculturalism", "at", "its", "best"]
# ::lemmas ["yes", "hear", "hear", "...", "multiculturalism", "at", "its", "good"]
(c1-3 / multi-sentence
      :snt1 (c1-0 / hear-01
                  :ARG0 (c1-1 / you)
                  :mode imperative)
      :snt2 (c1-4 / multiculturalism
                  :ARG1-of (c1-6 / have-degree-91
                                 :ARG2 (c1-5 / good-02
                                             :ARG1 c1-4)
                                 :ARG3 (c1-2 / most))))

# ::snt You don't Speak for anyone But your self Why don't you go &amp; be an exchange Hostage than Big Mouth! go On Mouth!
# ::tokens ["You", "do", "n't", "Speak", "for", "anyone", "But", "your", "self", "Why", "do", "n't", "you", "go", "&", "amp", ";", "be", "an", "exchange", "Hostage", "than", "Big", "Mouth", "!", "go", "On", "Mouth", "!"]
# ::lemmas ["you", "do", "not", "Speak", "for", "anyone", "but", "your", "self", "why", "do", "not", "you", "go", "&", "amp", ";", "be", "an", "exchange", "hostage", "than", "Big", "Mouth", "!", "go", "on", "Mouth", "!"]
(c2-0 / multi-sentence
      :snt1 (c2-5 / speak-01
                  :ARG0 (c2-20 / you)
                  :ARG2 (c2-7 / anyone)
                  :ARG1-of (c2-22 / contrast-01
                                  :ARG2 (c2-11 / self
                                               :poss c2-20))
                  :polarity -)
      :snt2 (c2-3 / cause-01
                  :ARG0 (c2-17 / amr-unknown)
                  :ARG1 (c2-14 / and
                               :op1 (c2-16 / go-02
                                           :ARG0 (c2-23 / you)
                                           :ARG4 c2-14
                                           :op1 (c2-19 / company
                                                       :name (c2-13 / name
                                                                    :op1 "&amp"))
                                           :op2 (c2-8 / hostage
                                                      :ARG1-of (c2-12 / exchange-01)
                                                      :ARG1-of (c2-6 / have-degree-91
                                                                     :ARG2 (c2-4 / good-02
                                                                                 :ARG1 c2-8)
                                                                     :ARG3 (c2-15 / more)
                                                                     :ARG4 (c2-9 / mouth
                                                                                 :mod (c2-10 / big))))
                                           :polarity -)))
      :snt3 (c2-2 / go-02
                  :ARG0 (c2-1 / you)
                  :ARG1 (c2-18 / mouth
                               :mod (c2-21 / on))
                  :mode imperative))

# ::snt Until the timocracy kicks in and she gets the boot...
# ::tokens ["Until", "the", "timocracy", "kicks", "in", "and", "she", "gets", "the", "boot", "..."]
# ::lemmas ["until", "the", "timocracy", "kick", "in", "and", "she", "get", "the", "boot", "..."]
(c3-1 / be-temporally-at-91
      :ARG2 (c3-0 / until
                  :op1 (c3-7 / and
                             :op1 (c3-2 / kick-in-02
                                        :ARG1 (c3-6 / timocracy))
                             :op2 (c3-4 / get-01
                                        :ARG0 (c3-5 / she)
                                        :ARG1 (c3-3 / boot)))))

# ::snt Just avoid Morrison's electorate. Cronulla.
# ::tokens ["Just", "avoid", "Morrison", "'s", "electorate", ".", "Cronulla", "."]
# ::lemmas ["just", "avoid", "Morrison", "'s", "electorate", ".", "Cronulla", "."]
(c4-2 / multi-sentence
      :snt1 (c4-8 / avoid-01
                  :ARG0 (c4-1 / you)
                  :ARG1 (c4-3 / electorate
                              :poss (c4-6 / person
                                          :name (c4-4 / name
                                                      :op1 "Morrison")))
                  :mod (c4-0 / just)
                  :mode imperative)
      :snt2 (c4-7 / city
                  :name (c4-5 / name
                              :op1 "Cronulla")))

# ::snt if you're interested, we've gathered news on multiculturalism from various medias around the world
# ::tokens ["if", "you", "'re", "interested", ",", "we", "'ve", "gathered", "news", "on", "multiculturalism", "from", "various", "medias", "around", "the", "world"]
# ::lemmas ["if", "you", "be", "interested", ",", "we", "'ve", "gather", "news", "on", "multiculturalism", "from", "various", "media", "around", "the", "world"]
(c5-8 / gather-01
      :ARG0 (c5-0 / we)
      :ARG1 (c5-5 / news
                  :topic (c5-2 / multiculturalism))
      :ARG2 (c5-7 / media
                  :mod (c5-6 / various)
                  :location (c5-9 / around
                                  :op1 (c5-4 / world)))
      :condition (c5-3 / interest-01
                       :ARG1 (c5-1 / you)))

# ::snt :Clover enough of the banal leftwing bullshit . If u really believe ur swill offer urself as replacement for of the hostages.
# ::tokens [":", "Clover", "enough", "of", "the", "banal", "leftwing", "bullshit", ".", "If", "u", "really", "believe", "ur", "swill", "offer", "urself", "as", "replacement", "for", "of", "the", "hostages", "."]
# ::lemmas [":", "clover", "enough", "of", "the", "banal", "leftwe", "bullshit", ".", "if", "u", "really", "believe", "ur", "swill", "offer", "urself", "as", "replacement", "for", "of", "the", "hostage", "."]
(c6-3 / multi-sentence
      :snt1 (c6-0 / have-quant-91
                  :ARG1 (c6-4 / bullshit
                              :mod (c6-9 / banal)
                              :ARG1-of (c6-2 / left-19))
                  :ARG3 (c6-6 / enough))
      :snt2 (c6-5 / offer-01
                  :ARG0 (c6-1 / you
                              :ARG1-of c6-5)
                  :ARG3 (c6-8 / replace-01
                              :ARG0 c6-1
                              :ARG1 c6-1
                              :ARG2 (c6-12 / hostage))
                  :condition (c6-11 / believe-01
                                    :ARG0 c6-1
                                    :ARG1 (c6-10 / swill-01
                                                 :ARG0 c6-1
                                                 :ARG1 c6-1)
                                    :ARG1-of (c6-7 / real-04))))

# ::snt Sad but not surprising. Independently-minded quality politicians are a threat to machine politics. Shows what's possible..
# ::tokens ["Sad", "but", "not", "surprising", ".", "Independently", "-", "minded", "quality", "politicians", "are", "a", "threat", "to", "machine", "politics", ".", "Shows", "what", "'s", "possible", ".."]
# ::lemmas ["sad", "but", "not", "surprising", ".", "independently", "-", "minded", "quality", "politician", "be", "a", "threat", "to", "machine", "politic", ".", "show", "what", "be", "possible", ".."]
(c7-2 / multi-sentence
      :snt1 (c7-9 / contrast-01
                  :ARG1 (c7-12 / sad-02)
                  :ARG2 (c7-5 / surprise-01
                              :polarity -))
      :snt2 (c7-13 / threaten-01
                   :ARG0 (c7-7 / politician
                               :mod (c7-6 / quality)
                               :ARG0-of (c7-0 / have-03
                                              :ARG1 (c7-8 / mind
                                                          :ARG0-of (c7-10 / depend-01
                                                                          :polarity -))))
                   :ARG2 (c7-14 / politics
                                :mod (c7-1 / machine)))
      :snt3 (c7-3 / show-01
                  :ARG1 (c7-11 / thing
                               :ARG1-of (c7-4 / possible-01))))

# ::snt except for those rubbish cycle paths
# ::tokens ["except", "for", "those", "rubbish", "cycle", "paths"]
# ::lemmas ["except", "for", "those", "rubbish", "cycle", "path"]
(c8-0 / except-01
      :ARG1 (c8-1 / path
                  :purpose (c8-3 / cycle-01)
                  :mod (c8-2 / rubbish)
                  :mod (c8-4 / that)))

# ::snt It's all part of the whole 'get Clover' thing that has been going on in Sydney ever since she became mayor.
# ::tokens ["It", "'s", "all", "part", "of", "the", "whole", "'", "get", "Clover", "'", "thing", "that", "has", "been", "going", "on", "in", "Sydney", "ever", "since", "she", "became", "mayor", "."]
# ::lemmas ["it", "be", "all", "part", "of", "the", "whole", "'", "get", "clover", "'", "thing", "that", "have", "be", "go", "on", "in", "Sydney", "ever", "since", "she", "become", "mayor", "."]
(c9-0 / have-part-91
      :ARG1 (c9-12 / thing
                   :name (c9-7 / name
                               :op1 "Get"
                               :op2 "Clover")
                   :mod (c9-1 / whole)
                   :ARG1-of (c9-10 / go-on-15
                                   :location (c9-9 / city
                                                   :name (c9-8 / name
                                                               :op1 "Sydney"))
                                   :time (c9-11 / since
                                                :op1 (c9-3 / become-01
                                                           :ARG1 (c9-4 / she)
                                                           :ARG2 (c9-2 / mayor))
                                                :mod (c9-5 / ever))))
      :ARG2 (c9-6 / it
                  :mod (c9-13 / all)))

# ::snt so u don't want to share a thought to the poor hostages???
# ::tokens ["so", "u", "do", "n't", "want", "to", "share", "a", "thought", "to", "the", "poor", "hostages", "?", "?", "?"]
# ::lemmas ["so", "u", "do", "not", "want", "to", "share", "a", "thought", "to", "the", "poor", "hostage", "?", "?", "?"]
(c10-1 / want-01
       :ARG0 (c10-2 / you)
       :ARG1 (c10-5 / share-01
                    :ARG0 c10-2
                    :ARG1 (c10-6 / think-01
                                 :ARG0 c10-2
                                 :ARG2 (c10-0 / hostage
                                              :mod (c10-3 / poor))))
       :ARG1-of (c10-4 / request-confirmation-91)
       :polarity -)

# ::snt Congrats on your tweet!
# ::tokens ["Congrats", "on", "your", "tweet", "!"]
# ::lemmas ["congrat", "on", "your", "tweet", "!"]
(c11-2 / congratulate-01
       :ARG1 (c11-1 / you)
       :ARG2 (c11-0 / tweet-01
                    :ARG0 c11-1))

# ::snt The Melbourne model for local gov is being exported to Sydney, i.e. business owners get to vote. Dunno when it kicks in.
# ::tokens ["The", "Melbourne", "model", "for", "local", "gov", "is", "being", "exported", "to", "Sydney", ",", "i.e.", "business", "owners", "get", "to", "vote", ".", "Dunno", "when", "it", "kicks", "in", "."]
# ::lemmas ["the", "Melbourne", "model", "for", "local", "gov", "be", "be", "export", "to", "Sydney", ",", "i.e.", "business", "owner", "get", "to", "vote", ".", "dunno", "when", "it", "kick", "in", "."]
(c12-0 / multi-sentence
       :snt1 (c12-10 / export-01
                     :ARG1 (c12-12 / model
                                   :mod (c12-18 / city
                                                :name (c12-11 / name
                                                              :op1 "Melbourne"))
                                   :mod (c12-13 / government-organization
                                                :ARG0-of (c12-4 / govern-01)
                                                :ARG1-of (c12-7 / local-02)))
                     :ARG2 (c12-5 / city
                                  :name (c12-17 / name
                                                :op1 "Sydney"))
                     :ARG1-of (c12-8 / mean-01
                                     :ARG2 (c12-1 / get-22
                                                  :ARG0 (c12-3 / person
                                                               :ARG0-of (c12-16 / own-01
                                                                                :ARG1 (c12-9 / business)))
                                                  :ARG1 (c12-2 / vote-01
                                                               :ARG0 c12-3))))
       :snt2 (c12-6 / have-polarity-91
                    :time (c12-15 / kick-in-02
                                  :ARG1 (c12-14 / it))
                    :ARG2 -))

# ::snt "Sydney is a safe &amp; welcoming city" Pigs Ass it is What about NoGo Mirgrant Areas! Shut ya Mouth "Duty of Care"
# ::tokens ["\"", "Sydney", "is", "a", "safe", "&", "amp", ";", "welcoming", "city", "\"", "Pigs", "Ass", "it", "is", "What", "about", "NoGo", "Mirgrant", "Areas", "!", "Shut", "ya", "Mouth", "\"", "Duty", "of", "Care", "\""]
# ::lemmas ["\"", "Sydney", "be", "a", "safe", "&", "amp", ";", "welcome", "city", "\"", "Pigs", "Ass", "it", "be", "what", "about", "NoGo", "Mirgrant", "Areas", "!", "Shut", "ya", "Mouth", "\"", "Duty", "of", "Care", "\""]
(c13-0 / multi-sentence
       :snt1 (c13-7 / and
                    :op1 (c13-13 / and
                                 :op1 (c13-6 / safe-01
                                             :ARG1 (c13-18 / city
                                                           :name (c13-9 / name
                                                                        :op1 "Sydney")))
                                 :op2 (c13-12 / warm-01
                                              :ARG1 c13-18))
                    :op2 (c13-1 / welcome-01
                                :ARG1 c13-18)
                    :domain (c13-10 / amr-unknown
                                    :topic (c13-19 / area
                                                   :name (c13-17 / name
                                                                 :op1 "NoGo"
                                                                 :op2 "Mirgrant"
                                                                 :op3 "Area"))))
       :snt2 (c13-8 / shut-01
                    :ARG0 (c13-14 / you
                                  :part (c13-11 / mouth
                                                :ARG1-of c13-8))
                    :topic (c13-4 / duty
                                  :mod (c13-5 / care-03))
                    :mode imperative)
       :snt3 (c13-15 / say-01
                     :ARG0 (c13-3 / person
                                  :name (c13-2 / name
                                               :op1 "Pigs"
                                               :op2 "Ass"))
                     :ARG1 (c13-16 / amr-unknown)))

# ::snt and fantastic bike paths! on those!
# ::tokens ["and", "fantastic", "bike", "paths", "!", "on", "those", "!"]
# ::lemmas ["and", "fantastic", "bike", "path", "!", "on", "those", "!"]
(c14-4 / and
       :op2 (c14-2 / path
                   :purpose (c14-1 / bike-01)
                   :ARG1-of (c14-0 / fantastic-02)
                   :location (c14-3 / that)))

# ::snt Amid fear, hype and tragedy, the kindly, intelligent voice of is sweet reason. Sydneysiders chose a great Mayor
# ::tokens ["Amid", "fear", ",", "hype", "and", "tragedy", ",", "the", "kindly", ",", "intelligent", "voice", "of", "is", "sweet", "reason", ".", "Sydneysiders", "chose", "a", "great", "Mayor"]
# ::lemmas ["amid", "fear", ",", "hype", "and", "tragedy", ",", "the", "kindly", ",", "intelligent", "voice", "of", "be", "sweet", "reason", ".", "sydneysider", "choose", "a", "great", "mayor"]
(c15-0 / multi-sentence
       :snt1 (c15-12 / reason
                     :ARG1-of (c15-4 / sweet-03)
                     :domain (c15-1 / voice
                                    :ARG1-of (c15-16 / kind-01)
                                    :ARG1-of (c15-15 / intelligent-01))
                     :ARG1-of (c15-7 / avoid-01
                                     :ARG2 (c15-14 / and
                                                   :op1 (c15-9 / fear-01)
                                                   :op2 (c15-8 / hype-01)
                                                   :op3 (c15-18 / tragedy))))
       :snt2 (c15-17 / choose-01
                     :ARG0 (c15-2 / person
                                  :mod (c15-3 / city
                                              :name (c15-10 / name
                                                            :op1 "Sydney")))
                     :ARG1 (c15-5 / person
                                  :ARG0-of (c15-6 / have-org-role-91
                                                  :ARG2 (c15-11 / mayor))
                                  :mod (c15-13 / great))))

# ::snt That sounds bad. I'm not a local - can you explain?
# ::tokens ["That", "sounds", "bad", ".", "I", "'m", "not", "a", "local", "-", "can", "you", "explain", "?"]
# ::lemmas ["that", "sound", "bad", ".", "i", "be", "not", "a", "local", "-", "can", "you", "explain", "?"]
(c16-2 / multi-sentence
       :snt1 (c16-8 / sound-01
                    :ARG1 (c16-9 / that)
                    :ARG2 (c16-3 / bad-07))
       :snt2 (c16-1 / local-02
                    :ARG1 (c16-5 / i)
                    :ARG0-of (c16-7 / cause-01
                                    :ARG1 (c16-6 / possible-01
                                                 :ARG1 (c16-4 / explain-01
                                                              :ARG0 (c16-0 / you)
                                                              :polarity (c16-10 / amr-unknown))))
                    :polarity -))

# ::snt As a proud Sydney sider I want to see real courage to show tolerance and fight violence.
# ::tokens ["As", "a", "proud", "Sydney", "sider", "I", "want", "to", "see", "real", "courage", "to", "show", "tolerance", "and", "fight", "violence", "."]
# ::lemmas ["as", "a", "proud", "Sydney", "sider", "i", "want", "to", "see", "real", "courage", "to", "show", "tolerance", "and", "fight", "violence", "."]
(c17-1 / want-01
       :ARG0 (c17-5 / i
                    :ARG0-of (c17-0 / have-org-role-91
                                    :ARG1 (c17-10 / city
                                                  :name (c17-6 / name
                                                               :op1 "Sydney"))
                                    :ARG2 (c17-12 / sider
                                                  :ARG0-of (c17-8 / pride-01))))
       :ARG1 (c17-4 / see-01
                    :ARG0 c17-5
                    :ARG1 (c17-9 / courage
                                 :ARG1-of (c17-11 / real-04)
                                 :purpose (c17-14 / and
                                                  :op1 (c17-2 / show-01
                                                              :ARG0 c17-5
                                                              :ARG1 (c17-13 / tolerate-01))
                                                  :op2 (c17-3 / fight-01
                                                              :ARG0 c17-5
                                                              :ARG1 (c17-7 / violence))))))

# ::snt encourage people to share their protected travel routes.
# ::tokens ["encourage", "people", "to", "share", "their", "protected", "travel", "routes", "."]
# ::lemmas ["encourage", "people", "to", "share", "their", "protect", "travel", "route", "."]
(c18-0 / encourage-01
       :ARG1 (c18-1 / person)
       :ARG2 (c18-3 / share-01
                    :ARG0 c18-1
                    :ARG1 (c18-2 / route
                                 :path-of (c18-4 / travel-01)
                                 :ARG1-of (c18-5 / protect-01)
                                 :poss c18-1)))

# ::snt also with families hostages police and man at centre that compassion and understanding wins thru
# ::tokens ["also", "with", "families", "hostages", "police", "and", "man", "at", "centre", "that", "compassion", "and", "understanding", "wins", "thru"]
# ::lemmas ["also", "with", "family", "hostage", "police", "and", "man", "at", "centre", "that", "compassion", "and", "understanding", "win", "thru"]
(c19-1 / win-01
       :ARG0 (c19-9 / and
                    :op1 (c19-8 / compassion)
                    :op2 (c19-4 / understand-01))
       :manner (c19-7 / center-02
                      :ARG1 (c19-5 / and
                                   :op1 (c19-0 / hostage
                                               :mod (c19-2 / family))
                                   :op2 (c19-3 / man)))
       :mod (c19-6 / also))

# ::snt Indeed.
# ::tokens ["Indeed", "."]
# ::lemmas ["indeed", "."]
(c20-0 / indeed)

# ::snt Hear hear
# ::tokens ["Hear", "hear"]
# ::lemmas ["hear", "hear"]
(c21-0 / hear-01
       :mod (c21-1 / hear-01))
