# ::snt ppl protest in the middle of the road/thoroughfares all the time... so that's not it.
# ::tokens ["ppl", "protest", "in", "the", "middle", "of", "the", "road", "/", "thoroughfares", "all", "the", "time", "...", "so", "that", "'s", "not", "it", "."]
# ::lemmas ["ppl", "protest", "in", "the", "middle", "of", "the", "road", "/", "thoroughfare", "all", "the", "time", "...", "so", "that", "be", "not", "it", "."]
(c1-4 / cause-01
      :ARG0 (c1-2 / protest-01
                  :location (c1-0 / middle
                                  :part-of (c1-6 / slash
                                                 :op1 (c1-3 / road)
                                                 :op2 (c1-7 / thoroughfare)))
                  :frequency (c1-5 / time
                                   :mod (c1-8 / all)))
      :ARG1 (c1-1 / be-it-06
                  :ARG1 c1-2
                  :polarity -))

# ::snt Police move in, telling people move or be arrested. People asking "What for?" "Just move"
# ::tokens ["Police", "move", "in", ",", "telling", "people", "move", "or", "be", "arrested", ".", "People", "asking", "\"", "What", "for", "?", "\"", "\"", "Just", "move", "\""]
# ::lemmas ["police", "move", "in", ",", "tell", "people", "move", "or", "be", "arrest", ".", "people", "ask", "\"", "what", "for", "?", "\"", "\"", "just", "move", "\""]
(c2-3 / multi-sentence
      :snt1 (c2-15 / and
                   :op1 (c2-9 / move-01
                              :ARG0 (c2-10 / police)
                              :ARG2 (c2-7 / inside))
                   :op2 (c2-13 / tell-01
                               :ARG0 c2-10
                               :ARG1 (c2-5 / or
                                           :op1 (c2-2 / move-01
                                                      :ARG0 (c2-14 / person))
                                           :op2 (c2-6 / arrest-01
                                                      :ARG1 c2-14))
                               :ARG2 c2-14))
      :snt2 (c2-8 / ask-01
                  :ARG0 (c2-4 / person)
                  :ARG1 (c2-12 / amr-unknown
                               :purpose-of (c2-11 / move-01
                                                  :ARG0 (c2-1 / you)
                                                  :mod (c2-0 / just)
                                                  :mode imperative))))

# ::snt so are they not allowed to protest peacefully? We're talking hundreds of people in a community &amp; they should
# ::tokens ["so", "are", "they", "not", "allowed", "to", "protest", "peacefully", "?", "We", "'re", "talking", "hundreds", "of", "people", "in", "a", "community", "&", "amp", ";", "they", "should"]
# ::lemmas ["so", "be", "they", "not", "allow", "to", "protest", "peacefully", "?", "we", "be", "talk", "hundreds", "of", "people", "in", "a", "community", "&", "amp", ";", "they", "should"]
(c3-2 / multi-sentence
      :snt1 (c3-7 / cause-01
                  :ARG1 (c3-13 / allow-01
                               :ARG1 (c3-5 / protest-01
                                           :ARG0 (c3-11 / they)
                                           :manner (c3-12 / peaceful))
                               :polarity (c3-4 / amr-unknown)
                               :polarity -))
      :snt2 (c3-10 / talk-01
                   :ARG0 (c3-0 / we)
                   :ARG1 (c3-3 / person
                               :quant (c3-6 / multiple
                                            :op1 100)
                               :location (c3-8 / community)
                               :ARG1-of (c3-1 / mean-01
                                              :ARG2 (c3-9 / recommend-01
                                                          :ARG1 c3-5)))))

# ::snt Protest is now illegal in the US - otherwise this would have been defused, not escalating
# ::tokens ["Protest", "is", "now", "illegal", "in", "the", "US", "-", "otherwise", "this", "would", "have", "been", "defused", ",", "not", "escalating"]
# ::lemmas ["protest", "be", "now", "illegal", "in", "the", "US", "-", "otherwise", "this", "would", "have", "be", "defuse", ",", "not", "escalate"]
(c4-10 / and
       :op1 (c4-1 / legal-02
                  :ARG1 (c4-6 / protest-01)
                  :time (c4-4 / now)
                  :location (c4-8 / country
                                  :name (c4-5 / name
                                              :op1 "US"))
                  :polarity -)
       :op2 (c4-3 / and
                  :op1 (c4-7 / defuse-01
                             :ARG1 (c4-9 / this))
                  :op2 (c4-2 / escalate-01
                             :ARG1 c4-9
                             :polarity -)
                  :condition (c4-0 / have-polarity-91
                                   :ARG1 c4-7
                                   :ARG2 -)))

# ::snt The land of the free ? Who turned it in a police state ?
# ::tokens ["The", "land", "of", "the", "free", "?", "Who", "turned", "it", "in", "a", "police", "state", "?"]
# ::lemmas ["the", "land", "of", "the", "free", "?", "who", "turn", "it", "in", "a", "police", "state", "?"]
(c5-1 / multi-sentence
      :snt1 (c5-0 / land
                  :poss (c5-4 / person
                              :ARG1-of (c5-2 / free-04)))
      :snt2 (c5-6 / turn-02
                  :ARG0 (c5-8 / amr-unknown)
                  :ARG1 (c5-3 / it)
                  :ARG2 (c5-5 / state
                              :mod (c5-7 / police))))

# ::snt All this because the people of Ferguson are asking for assurances that the murder of an unarmed teen be handled right.
# ::tokens ["All", "this", "because", "the", "people", "of", "Ferguson", "are", "asking", "for", "assurances", "that", "the", "murder", "of", "an", "unarmed", "teen", "be", "handled", "right", "."]
# ::lemmas ["all", "this", "because", "the", "people", "of", "Ferguson", "be", "ask", "for", "assurance", "that", "the", "murder", "of", "an", "unarmed", "teen", "be", "handle", "right", "."]
(c6-7 / cause-01
      :ARG0 (c6-12 / ask-02
                   :ARG0 (c6-5 / person
                               :mod (c6-6 / city
                                          :name (c6-3 / name
                                                      :op1 "Ferguson")))
                   :ARG1 (c6-2 / assure-01
                               :ARG1 c6-5
                               :ARG2 (c6-0 / handle-01
                                           :ARG1 (c6-1 / murder-01
                                                       :ARG1 (c6-11 / teen
                                                                    :ARG1-of (c6-4 / arm-01
                                                                                   :polarity -)))
                                           :ARG1-of (c6-8 / right-02))))
      :ARG1 (c6-9 / this
                  :mod (c6-10 / all)))

# ::snt if any gathering is illegal it's the military occupation force in
# ::tokens ["if", "any", "gathering", "is", "illegal", "it", "'s", "the", "military", "occupation", "force", "in"]
# ::lemmas ["if", "any", "gathering", "be", "illegal", "it", "be", "the", "military", "occupation", "force", "in"]
(c7-0 / force
      :ARG0-of (c7-3 / occupy-01)
      :mod (c7-1 / military)
      :condition (c7-2 / legal-02
                       :ARG1 (c7-4 / gather-01
                                   :mod (c7-5 / any))
                       :polarity -))

# ::snt But if you are on public property like that and told to move, probably should move. And if a young white male had...
# ::tokens ["But", "if", "you", "are", "on", "public", "property", "like", "that", "and", "told", "to", "move", ",", "probably", "should", "move", ".", "And", "if", "a", "young", "white", "male", "had", "..."]
# ::lemmas ["but", "if", "you", "be", "on", "public", "property", "like", "that", "and", "tell", "to", "move", ",", "probably", "should", "move", ".", "and", "if", "a", "young", "white", "male", "have", "..."]
(c8-4 / multi-sentence
      :snt1 (c8-10 / contrast-01
                   :ARG2 (c8-9 / recommend-01
                               :ARG1 (c8-8 / move-01
                                           :ARG1 (c8-1 / you))
                               :mod (c8-11 / probable)
                               :condition (c8-16 / and
                                                 :op1 (c8-6 / be-located-at-91
                                                            :ARG1 c8-1
                                                            :ARG2 (c8-15 / property
                                                                         :ARG1-of (c8-5 / public-02))
                                                            :ARG1-of (c8-7 / resemble-01
                                                                           :ARG2 (c8-14 / that)))
                                                 :op2 (c8-13 / tell-01
                                                             :ARG1 (c8-3 / move-01
                                                                         :ARG1 c8-1)
                                                             :ARG2 c8-1))))
      :snt2 c8-16
      :op2 (c8-0 / have-03
                 :ARG0 (c8-12 / male
                              :mod (c8-17 / young)
                              :ARG1-of (c8-2 / white-02))))

# ::snt If the police tell you to "move", then move. Pretty simple.
# ::tokens ["If", "the", "police", "tell", "you", "to", "\"", "move", "\"", ",", "then", "move", ".", "Pretty", "simple", "."]
# ::lemmas ["if", "the", "police", "tell", "you", "to", "\"", "move", "\"", ",", "then", "move", ".", "pretty", "simple", "."]
(c9-3 / multi-sentence
      :snt1 (c9-0 / have-condition-91
                  :ARG1 (c9-4 / move-01
                              :ARG0 (c9-1 / you)
                              :mode imperative)
                  :ARG2 (c9-7 / tell-01
                              :ARG0 (c9-5 / police)
                              :ARG1 (c9-2 / move-01
                                          :ARG0 c9-1)
                              :ARG2 c9-1))
      :snt2 (c9-6 / simple-02
                  :degree (c9-8 / pretty)))

# ::snt been shot by a black officer, you think we would still see the same reaction?
# ::tokens ["been", "shot", "by", "a", "black", "officer", ",", "you", "think", "we", "would", "still", "see", "the", "same", "reaction", "?"]
# ::lemmas ["be", "shoot", "by", "a", "black", "officer", ",", "you", "think", "we", "would", "still", "see", "the", "same", "reaction", "?"]
(c10-12 / and
        :op1 (c10-10 / shoot-02
                     :ARG0 (c10-4 / officer
                                  :ARG1-of (c10-3 / black-05)))
        :op2 (c10-11 / think-01
                     :ARG0 (c10-0 / you)
                     :ARG1 (c10-6 / see-01
                                  :ARG0 (c10-1 / we)
                                  :ARG1 (c10-9 / thing
                                               :ARG2-of (c10-8 / react-01)
                                               :ARG1-of (c10-2 / same-01))
                                  :mod (c10-5 / still))
                     :polarity (c10-7 / amr-unknown)))

# ::snt So, next time I hear our troops r protecting our freedoms I can actually laugh out loud at the fool who believes that.
# ::tokens ["So", ",", "next", "time", "I", "hear", "our", "troops", "r", "protecting", "our", "freedoms", "I", "can", "actually", "laugh", "out", "loud", "at", "the", "fool", "who", "believes", "that", "."]
# ::lemmas ["so", ",", "next", "time", "i", "hear", "our", "troop", "r", "protect", "our", "freedom", "i", "can", "actually", "laugh", "out", "loud", "at", "the", "fool", "who", "believe", "that", "."]
(c11-9 / cause-01
       :ARG1 (c11-8 / possible-01
                    :ARG1 (c11-2 / laugh-01
                                 :ARG0 (c11-5 / i)
                                 :ARG2 (c11-3 / fool
                                              :ARG0-of (c11-4 / believe-01
                                                              :ARG1 (c11-12 / that)))
                                 :manner (c11-10 / loud))
                    :time (c11-0 / hear-01
                                 :ARG0 c11-5
                                 :ARG1 (c11-13 / protect-01
                                               :ARG0 (c11-11 / troop
                                                             :poss (c11-1 / we))
                                               :ARG1 (c11-6 / free-04
                                                            :ARG1 c11-1))
                                 :mod (c11-7 / next))
                    :ARG1-of (c11-14 / actual-02)))

# ::snt protest from the sidewalks? Have you ever been part of a protest? It doesn't quite work that way.
# ::tokens ["protest", "from", "the", "sidewalks", "?", "Have", "you", "ever", "been", "part", "of", "a", "protest", "?", "It", "does", "n't", "quite", "work", "that", "way", "."]
# ::lemmas ["protest", "from", "the", "sidewalk", "?", "have", "you", "ever", "be", "part", "of", "a", "protest", "?", "it", "do", "not", "quite", "work", "that", "way", "."]
(c12-2 / multi-sentence
       :snt1 (c12-9 / protest-01
                    :location (c12-10 / sidewalk)
                    :polarity (c12-13 / amr-unknown))
       :snt2 (c12-12 / participate-01
                     :ARG0 (c12-0 / you)
                     :ARG1 (c12-3 / protest-01)
                     :time (c12-4 / ever)
                     :polarity (c12-6 / amr-unknown))
       :snt3 (c12-1 / work-09
                    :ARG1 (c12-7 / it)
                    :manner (c12-8 / way
                                   :mod (c12-11 / that))
                    :degree (c12-5 / quite)
                    :polarity -))

# ::snt Why do we have tanks on the streets? Reporters &amp; citizens denied fundamental rights. Nothing to see here, move along.
# ::tokens ["Why", "do", "we", "have", "tanks", "on", "the", "streets", "?", "Reporters", "&", "amp", ";", "citizens", "denied", "fundamental", "rights", ".", "Nothing", "to", "see", "here", ",", "move", "along", "."]
# ::lemmas ["why", "do", "we", "have", "tank", "on", "the", "street", "?", "Reporters", "&", "amp", ";", "citizen", "deny", "fundamental", "right", ".", "nothing", "to", "see", "here", ",", "move", "along", "."]
(c13-0 / multi-sentence
       :snt1 (c13-19 / cause-01
                     :ARG0 (c13-8 / amr-unknown)
                     :ARG1 (c13-9 / have-03
                                  :ARG0 (c13-16 / we)
                                  :ARG1 (c13-21 / tank)
                                  :location (c13-5 / street)))
       :snt2 (c13-17 / and
                     :op1 (c13-2 / person
                                 :ARG0-of (c13-15 / report-01))
                     :op2 (c13-6 / person
                                 :ARG0-of (c13-13 / amp-01))
                     :op3 (c13-3 / citizen
                                 :ARG1-of (c13-4 / deny-01
                                                 :ARG2 (c13-1 / right-05
                                                              :mod (c13-10 / fundamental)))))
       :snt3 (c13-12 / nothing
                     :ARG1-of (c13-11 / see-01
                                      :location (c13-7 / here)))
       :snt4 (c13-14 / move-01
                     :ARG0 (c13-18 / you)
                     :ARG2 (c13-20 / along)
                     :mode imperative))

# ::snt cuz their on the god damn road, Jesus people are stupid
# ::tokens ["cuz", "their", "on", "the", "god", "damn", "road", ",", "Jesus", "people", "are", "stupid"]
# ::lemmas ["cuz", "their", "on", "the", "god", "damn", "road", ",", "Jesus", "people", "be", "stupid"]
(c14-6 / cause-01
       :ARG0 (c14-8 / stupid
                    :domain (c14-4 / person
                                   :mod (c14-5 / religious-group
                                               :name (c14-2 / name
                                                            :op1 "Jesus")))
                    :ARG1-of c14-6
                    :ARG0 (c14-0 / be-located-at-91
                                 :ARG1 c14-4
                                 :ARG2 (c14-1 / road
                                              :mod (c14-7 / damn
                                                          :mode expressive)
                                              :poss (c14-9 / person
                                                           :name (c14-3 / name
                                                                        :op1 "God"))))))

# ::snt yes... THESE are the (non) freedoms they're "protecting"
# ::tokens ["yes", "...", "THESE", "are", "the", "(", "non", ")", "freedoms", "they", "'re", "\"", "protecting", "\""]
# ::lemmas ["yes", "...", "these", "be", "the", "(", "non", ")", "freedom", "they", "be", "\"", "protect", "\""]
(c15-1 / free-04
       :mod (c15-4 / this)
       :ARG1-of (c15-2 / protect-01
                       :ARG0 (c15-3 / they))
       :ARG1-of (c15-0 / have-polarity-91
                       :ARG2 -))
