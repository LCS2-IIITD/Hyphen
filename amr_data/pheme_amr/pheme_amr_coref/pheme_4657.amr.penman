# ::snt HE's going to have to - this is WAY beyond
# ::tokens ["HE", "'s", "going", "to", "have", "to", "-", "this", "is", "WAY", "beyond"]
# ::lemmas ["he", "be", "go", "to", "have", "to", "-", "this", "be", "WAY", "beyond"]
(c1-3 / obligate-01
      :ARG1 (c1-0 / he)
      :ARG1-of (c1-4 / cause-01
                     :ARG0 (c1-2 / beyond
                                 :degree (c1-1 / way)
                                 :domain (c1-5 / this))))

# ::snt Israel/Gaza? Iraq? Syria? Russia/Ukraine?
# ::tokens ["Israel", "/", "Gaza", "?", "Iraq", "?", "Syria", "?", "Russia", "/", "Ukraine", "?"]
# ::lemmas ["Israel", "/", "Gaza", "?", "Iraq", "?", "Syria", "?", "Russia", "/", "Ukraine", "?"]
(c2-15 / and
       :op1 (c2-14 / slash
                   :op1 (c2-11 / country
                               :name (c2-7 / name
                                           :op1 "Israel"))
                   :op2 (c2-4 / slash
                              :op1 (c2-10 / country
                                          :name (c2-8 / name
                                                      :op1 "Gaza"))
                              :op2 (c2-13 / country
                                          :name (c2-9 / name
                                                      :op1 "Iraq")))
                   :op2 (c2-1 / slash
                              :op1 (c2-16 / country
                                          :name (c2-12 / name
                                                       :op1 "Syria"))
                              :op2 (c2-2 / country
                                         :name (c2-5 / name
                                                     :op1 "Russia"))
                              :op3 (c2-3 / country
                                         :name (c2-0 / name
                                                     :op1 "Ukraine"))
                              :polarity (c2-6 / amr-unknown))))

# ::snt Ok! So ... Chair, Joint chiefs of staff? what do you have in mind?
# ::tokens ["Ok", "!", "So", "...", "Chair", ",", "Joint", "chiefs", "of", "staff", "?", "what", "do", "you", "have", "in", "mind", "?"]
# ::lemmas ["ok", "!", "so", "...", "Chair", ",", "Joint", "chief", "of", "staff", "?", "what", "do", "you", "have", "in", "mind", "?"]
(c3-4 / multi-sentence
      :snt1 (c3-5 / okay-01
                  :mode expressive)
      :snt2 (c3-0 / have-in-mind-13
                  :ARG0 (c3-1 / you)
                  :ARG1 (c3-13 / amr-unknown)
                  :ARG2 (c3-6 / and
                              :op1 (c3-8 / person
                                         :ARG0-of (c3-3 / have-org-role-91
                                                        :ARG2 (c3-10 / chair-01)))
                              :op2 (c3-12 / person
                                          :ARG0-of (c3-7 / have-org-role-91
                                                         :ARG2 (c3-9 / chief
                                                                     :mod (c3-2 / joint)
                                                                     :topic (c3-11 / staff)))))))

# ::snt Besides caring Ferguson CaptJohnson may know more things -case community &amp; situation -than you/me*shrug
# ::tokens ["Besides", "caring", "Ferguson", "CaptJohnson", "may", "know", "more", "things", "-case", "community", "&", "amp", ";", "situation", "-than", "you", "/", "me*shrug"]
# ::lemmas ["besides", "care", "Ferguson", "CaptJohnson", "may", "know", "more", "thing", "-case", "community", "&", "amp", ";", "situation", "-than", "you", "/", "me*shrug"]
(c4-1 / possible-01
      :ARG1 (c4-16 / know-02
                   :ARG0 (c4-4 / person
                               :name (c4-10 / name
                                            :op1 "Johnson")
                               :ARG0-of (c4-7 / have-org-role-91
                                              :ARG2 (c4-19 / captain)))
                   :ARG1 (c4-20 / thing
                                :ARG1-of (c4-0 / mean-01
                                               :ARG2 (c4-6 / and
                                                           :op1 (c4-2 / community)
                                                           :op2 (c4-12 / amp)
                                                           :op3 (c4-3 / situation)))
                                :ARG1-of (c4-5 / have-quant-91
                                               :ARG3 (c4-11 / more)
                                               :ARG4 (c4-9 / slash
                                                           :op1 (c4-17 / you)
                                                           :op2 (c4-13 / i))))
                   :mod (c4-8 / besides
                              :op1 (c4-15 / care-03
                                          :ARG0 c4-4
                                          :ARG1 (c4-14 / incident
                                                       :name (c4-18 / name
                                                                    :op1 "Ferguson"))))))

# ::snt and r point is?
# ::tokens ["and", "r", "point", "is", "?"]
# ::lemmas ["and", "r", "point", "be", "?"]
(c5-2 / and
      :op2 (c5-0 / point-04
                 :ARG1 (c5-1 / amr-unknown)))

# ::snt Yes.
# ::tokens ["Yes", "."]
# ::lemmas ["yes", "."]
(c6-0 / yes)

# ::snt some people could not get home at all.
# ::tokens ["some", "people", "could", "not", "get", "home", "at", "all", "."]
# ::lemmas ["some", "people", "could", "not", "get", "home", "at", "all", "."]
(c7-1 / possible-01
      :ARG1 (c7-2 / get-05
                  :ARG1 (c7-4 / person
                              :quant (c7-3 / some))
                  :ARG2 (c7-0 / home)
                  :mod (c7-5 / at-all))
      :polarity -)

# ::snt -I have NO idea, I just know the man is a true LEADER, and it seems that these days those are in short supply
# ::tokens ["-I", "have", "NO", "idea", ",", "I", "just", "know", "the", "man", "is", "a", "true", "LEADER", ",", "and", "it", "seems", "that", "these", "days", "those", "are", "in", "short", "supply"]
# ::lemmas ["-i", "have", "no", "idea", ",", "i", "just", "know", "the", "man", "be", "a", "true", "leader", ",", "and", "it", "seem", "that", "these", "day", "those", "be", "in", "short", "supply"]
(c8-14 / and
       :op1 (c8-0 / have-03
                  :ARG0 (c8-6 / i)
                  :ARG1 (c8-9 / idea)
                  :polarity -)
       :op2 (c8-12 / know-01
                   :ARG0 c8-6
                   :ARG1 (c8-7 / person
                               :ARG0-of (c8-2 / lead-02)
                               :ARG1-of (c8-11 / true-01)
                               :domain (c8-3 / man))
                   :mod (c8-1 / just))
       :op3 (c8-13 / seem-01
                   :ARG1 (c8-5 / supply-01
                               :ARG1 c8-7
                               :ARG1-of (c8-4 / short-07)
                               :time (c8-8 / day
                                           :mod (c8-10 / this)))))

# ::snt It looked like freaknik out there last night! catz were dancing in the streets. now this. Chess Not Checker!
# ::tokens ["It", "looked", "like", "freaknik", "out", "there", "last", "night", "!", "catz", "were", "dancing", "in", "the", "streets", ".", "now", "this", ".", "Chess", "Not", "Checker", "!"]
# ::lemmas ["it", "look", "like", "freaknik", "out", "there", "last", "night", "!", "catz", "be", "dance", "in", "the", "street", ".", "now", "this", ".", "Chess", "not", "Checker", "!"]
(c9-3 / multi-sentence
      :snt1 (c9-2 / look-02
                  :ARG0 (c9-6 / it)
                  :ARG1 (c9-4 / freaknik)
                  :location (c9-5 / out-there)
                  :time (c9-9 / date-entity
                              :dayperiod (c9-7 / night)
                              :mod (c9-0 / yesterday)))
      :snt2 (c9-1 / dance-01
                  :ARG0 (c9-10 / catz)
                  :location (c9-13 / street))
      :snt3 (c9-14 / this
                   :time (c9-8 / now))
      :snt4 (c9-11 / check-01
                   :ARG0 (c9-12 / chess)
                   :polarity -))

# ::snt 's not right &amp; diff from way cops do it here -NorthEastSorry it is happening &amp; again all of you are in my prayers
# ::tokens ["'s", "not", "right", "&", "amp", ";", "diff", "from", "way", "cops", "do", "it", "here", "-NorthEastSorry", "it", "is", "happening", "&", "amp", ";", "again", "all", "of", "you", "are", "in", "my", "prayers"]
# ::lemmas ["be", "not", "right", "&", "amp", ";", "diff", "from", "way", "cop", "do", "it", "here", "-northeastsorry", "it", "be", "happen", "&", "amp", ";", "again", "all", "of", "you", "be", "in", "my", "prayer"]
(c10-15 / and
        :op1 (c10-5 / and
                    :op1 (c10-10 / right-02
                                 :polarity -)
                    :op2 (c10-9 / differ-02
                                :ARG2 (c10-1 / way
                                             :manner-of (c10-2 / do-02
                                                               :ARG0 (c10-11 / cop)
                                                               :ARG1 (c10-6 / it)
                                                               :location (c10-0 / here)))))
        :op2 (c10-7 / and
                    :op1 (c10-13 / sorry-01
                                 :ARG1 c10-5)
                    :op2 (c10-8 / pray-01
                                :ARG0 (c10-12 / i)
                                :ARG1 (c10-3 / you
                                             :mod (c10-14 / all))
                                :mod (c10-4 / again))))

# ::snt : Captain Johnson: "I know we're scared and I know we've fallen. But I know He's going to pick us up."
# ::tokens [":", "Captain", "Johnson", ":", "\"", "I", "know", "we", "'re", "scared", "and", "I", "know", "we", "'ve", "fallen", ".", "But", "I", "know", "He", "'s", "going", "to", "pick", "us", "up", ".", "\""]
# ::lemmas [":", "Captain", "Johnson", ":", "\"", "i", "know", "we", "be", "scared", "and", "i", "know", "we", "'ve", "fall", ".", "but", "i", "know", "he", "be", "go", "to", "pick", "we", "up", ".", "\""]
(c11-8 / say-01
       :ARG0 (c11-6 / person
                    :name (c11-5 / name
                                 :op1 "Captain"
                                 :op2 "Johnson"))
       :ARG1 (c11-7 / contrast-01
                    :ARG1 (c11-10 / know-01
                                  :ARG0 c11-6
                                  :ARG1 (c11-12 / and
                                                :op1 (c11-3 / scare-01
                                                            :ARG1 (c11-1 / we))
                                                :op2 (c11-4 / know-01
                                                            :ARG0 c11-6
                                                            :ARG1 (c11-2 / fall-01
                                                                         :ARG1 c11-1))))
                    :ARG2 (c11-9 / know-01
                                 :ARG0 c11-6
                                 :ARG1 (c11-11 / pick-up-04
                                               :ARG0 (c11-0 / he)
                                               :ARG1 c11-1))))

# ::snt Getting in &amp; out, if you show ID the police wld let you in &amp; out no problem usually
# ::tokens ["Getting", "in", "&", "amp", ";", "out", ",", "if", "you", "show", "ID", "the", "police", "wld", "let", "you", "in", "&", "amp", ";", "out", "no", "problem", "usually"]
# ::lemmas ["get", "in", "&", "amp", ";", "out", ",", "if", "you", "show", "ID", "the", "police", "wld", "let", "you", "in", "&", "amp", ";", "out", "no", "problem", "usually"]
(c12-2 / multi-sentence
       :snt1 (c12-11 / get-05
                     :ARG2 (c12-15 / and
                                   :op1 (c12-8 / inside)
                                   :op2 (c12-6 / out)))
       :snt2 (c12-1 / let-01
                    :ARG0 (c12-9 / police)
                    :ARG1 (c12-7 / and
                                 :op1 (c12-12 / inside)
                                 :op2 (c12-3 / out))
                    :condition (c12-13 / show-01
                                       :ARG0 (c12-0 / you)
                                       :ARG1 (c12-10 / document-01
                                                     :ARG1 (c12-4 / identity))))
       :snt3 (c12-14 / problem
                     :mod (c12-5 / usual)
                     :polarity -))

# ::snt inspired by your witnessing &amp; reporting. wanted to share this letter I wrote to my -year-old son -
# ::tokens ["inspired", "by", "your", "witnessing", "&", "amp", ";", "reporting", ".", "wanted", "to", "share", "this", "letter", "I", "wrote", "to", "my", "-year", "-", "old", "son", "-"]
# ::lemmas ["inspire", "by", "your", "witnessing", "&", "amp", ";", "report", ".", "want", "to", "share", "this", "letter", "i", "write", "to", "my", "-year", "-", "old", "son", "-"]
(c13-4 / multi-sentence
       :snt1 (c13-8 / inspire-01
                    :ARG0 (c13-16 / and
                                  :op1 (c13-1 / witness-01
                                              :ARG0 (c13-2 / you))
                                  :op2 (c13-11 / report-01
                                               :ARG0 c13-2))
                    :ARG1 (c13-12 / i))
       :snt2 (c13-9 / want-01
                    :ARG0 (c13-3 / i)
                    :ARG1 (c13-14 / share-01
                                  :ARG0 c13-3
                                  :ARG1 (c13-5 / letter
                                               :mod (c13-15 / this)
                                               :ARG1-of (c13-6 / write-01
                                                               :ARG0 c13-3
                                                               :ARG2 (c13-10 / person
                                                                             :ARG0-of (c13-0 / have-rel-role-91
                                                                                             :ARG1 c13-3
                                                                                             :ARG2 (c13-7 / son))
                                                                             :age (c13-13 / temporal-quantity
                                                                                          :unit (c13-17 / year)
                                                                                          :quant 12)))))))

# ::snt Thanks.
# ::tokens ["Thanks", "."]
# ::lemmas ["thank", "."]
(c14-0 / thank-01)

# ::snt side eye
# ::tokens ["side", "eye"]
# ::lemmas ["side", "eye"]
(c15-1 / eye
       :mod (c15-0 / side))

# ::snt "He is going to pick us up" God?
# ::tokens ["\"", "He", "is", "going", "to", "pick", "us", "up", "\"", "God", "?"]
# ::lemmas ["\"", "he", "be", "go", "to", "pick", "we", "up", "\"", "God", "?"]
(c16-4 / say-01
       :ARG0 (c16-3 / person
                    :name (c16-2 / name
                                 :op1 "God"))
       :ARG1 (c16-5 / pick-up-04
                    :ARG0 (c16-0 / he)
                    :ARG1 (c16-1 / we))
       :polarity (c16-6 / amr-unknown))

# ::snt Honey every night my street was blocked by police and I had to try to figure out how I was going to get home. I can see it
# ::tokens ["Honey", "every", "night", "my", "street", "was", "blocked", "by", "police", "and", "I", "had", "to", "try", "to", "figure", "out", "how", "I", "was", "going", "to", "get", "home", ".", "I", "can", "see", "it"]
# ::lemmas ["Honey", "every", "night", "my", "street", "be", "block", "by", "police", "and", "i", "have", "to", "try", "to", "figure", "out", "how", "i", "be", "go", "to", "get", "home", ".", "i", "can", "see", "it"]
(c17-1 / multi-sentence
       :snt1 (c17-6 / and
                    :op1 (c17-9 / block-01
                                :ARG0 (c17-2 / police)
                                :ARG1 (c17-4 / street
                                             :poss (c17-14 / i))
                                :frequency (c17-12 / rate-entity-91
                                                   :ARG4 (c17-3 / date-entity
                                                                :dayperiod (c17-11 / night))))
                    :op2 (c17-16 / obligate-01
                                 :ARG1 (c17-15 / i)
                                 :ARG2 (c17-19 / try-01
                                               :ARG0 c17-15
                                               :ARG1 (c17-8 / figure-out-05
                                                            :ARG0 c17-15
                                                            :ARG1 (c17-18 / thing
                                                                          :manner-of (c17-13 / get-05
                                                                                             :ARG1 c17-15
                                                                                             :ARG2 (c17-7 / home)))))))
       :snt2 (c17-5 / possible-01
                    :ARG1 (c17-10 / see-01
                                  :ARG0 (c17-0 / i)
                                  :ARG1 (c17-17 / it))))

# ::snt Mine, too! For Chief of Homeland Security!
# ::tokens ["Mine", ",", "too", "!", "For", "Chief", "of", "Homeland", "Security", "!"]
# ::lemmas ["Mine", ",", "too", "!", "for", "Chief", "of", "Homeland", "Security", "!"]
(c18-1 / multi-sentence
       :snt1 (c18-2 / event
                    :mod (c18-8 / too)
                    :poss (c18-3 / i))
       :snt2 (c18-5 / person
                    :ARG0-of (c18-0 / have-org-role-91
                                    :ARG1 (c18-7 / government-organization
                                                 :name (c18-4 / name
                                                              :op1 "Homeland"
                                                              :op2 "Security"))
                                    :ARG2 (c18-6 / chief))
                    :mode expressive))

# ::snt CaptJohnson was referring to Jesus
# ::tokens ["CaptJohnson", "was", "referring", "to", "Jesus"]
# ::lemmas ["CaptJohnson", "be", "refer", "to", "Jesus"]
(c19-3 / refer-01
       :ARG0 (c19-2 / person
                    :name (c19-0 / name
                                 :op1 "CaptJohnson"))
       :ARG1 (c19-4 / person
                    :name (c19-1 / name
                                 :op1 "Jesus")))

# ::snt I think we need to think BIGGER about Captain Johnson's potential!!
# ::tokens ["I", "think", "we", "need", "to", "think", "BIGGER", "about", "Captain", "Johnson", "'s", "potential", "!", "!"]
# ::lemmas ["i", "think", "we", "need", "to", "think", "big", "about", "Captain", "Johnson", "'s", "potential", "!", "!"]
(c20-9 / think-01
       :ARG0 (c20-4 / i)
       :ARG1 (c20-5 / need-01
                    :ARG0 (c20-1 / we)
                    :ARG1 (c20-8 / think-01
                                 :ARG0 c20-1
                                 :ARG2 (c20-7 / potential
                                              :poss (c20-10 / person
                                                            :name (c20-6 / name
                                                                         :op1 "Captain"
                                                                         :op2 "Johnson")))
                                 :ARG1-of (c20-0 / have-degree-91
                                                 :ARG2 (c20-3 / big)
                                                 :ARG3 (c20-2 / more)))))

# ::snt MSM NEVER gives % truthWe cancelled local newspaper afterarticle "local manager innocently shot"Reality DrugDeal gone wrong
# ::tokens ["MSM", "NEVER", "gives", "%", "truthWe", "cancelled", "local", "newspaper", "afterarticle", "\"", "local", "manager", "innocently", "shot\"Reality", "DrugDeal", "gone", "wrong"]
# ::lemmas ["MSM", "NEVER", "give", "%", "truthWe", "cancel", "local", "newspaper", "afterarticle", "\"", "local", "manager", "innocently", "shot\"reality", "DrugDeal", "go", "wrong"]
(c21-0 / multi-sentence
       :snt1 (c21-13 / give-16
                     :ARG0 (c21-2 / person
                                  :name (c21-10 / name
                                                :op1 "MSM"))
                     :ARG1 (c21-20 / thing
                                   :ARG1-of (c21-19 / true-01))
                     :time (c21-9 / ever)
                     :polarity -)
       :snt2 (c21-18 / cancel-01
                     :ARG0 (c21-14 / we)
                     :ARG1 (c21-17 / newspaper
                                   :ARG1-of (c21-8 / local-02))
                     :time (c21-7 / after
                                  :op1 (c21-15 / article
                                               :topic (c21-5 / shoot-02
                                                             :ARG1 (c21-6 / person
                                                                          :ARG0-of (c21-11 / manage-01)
                                                                          :mod c21-8)
                                                             :ARG1-of (c21-16 / innocent-01)))))
       :snt3 (c21-3 / go-08
                    :ARG1 (c21-4 / deal-01
                                 :ARG2 (c21-12 / reality))
                    :ARG2 (c21-1 / wrong-04)))

# ::snt . anything on the "gentle giant"?
# ::tokens [".", "anything", "on", "the", "\"", "gentle", "giant", "\"", "?"]
# ::lemmas [".", "anything", "on", "the", "\"", "gentle", "giant", "\"", "?"]
(c22-3 / anything
       :polarity (c22-2 / amr-unknown)
       :topic (c22-0 / giant
                     :mod (c22-1 / gentle)))

# ::snt My prayers are4 ALL of you there!Just tried2 answer your ? Johnson being part of your community &amp; prob knows more wholeCase
# ::tokens ["My", "prayers", "are4", "ALL", "of", "you", "there!Just", "tried2", "answer", "your", "?", "Johnson", "being", "part", "of", "your", "community", "&", "amp", ";", "prob", "knows", "more", "wholeCase"]
# ::lemmas ["my", "prayer", "are4", "all", "of", "you", "there!just", "tried2", "answer", "your", "?", "Johnson", "be", "part", "of", "your", "community", "&", "amp", ";", "prob", "know", "more", "wholecase"]
(c23-1 / multi-sentence
       :snt1 (c23-3 / pray-01
                    :ARG0 (c23-16 / i)
                    :ARG1 (c23-19 / you
                                  :mod (c23-6 / all)
                                  :location (c23-23 / there)))
       :snt2 (c23-22 / try-01
                     :ARG0 (c23-18 / you)
                     :ARG1 (c23-15 / answer-01
                                   :ARG0 c23-18
                                   :ARG2 (c23-11 / and
                                                 :op1 (c23-5 / person
                                                             :name (c23-10 / name
                                                                           :op1 "Johnson")
                                                             :part-of (c23-21 / community
                                                                              :poss c23-18))
                                                 :op2 (c23-8 / person
                                                             :name (c23-20 / name
                                                                           :op1 "amp"))))
                     :mod (c23-0 / just)
                     :li 2)
       :snt3 (c23-13 / probable
                     :domain (c23-17 / know-01
                                     :ARG0 (c23-9 / person
                                                  :name (c23-2 / name
                                                               :op1 "Johnson"))
                                     :ARG1 (c23-4 / case
                                                  :mod (c23-14 / whole)
                                                  :ARG1-of (c23-7 / have-quant-91
                                                                  :ARG3 (c23-12 / more))))))

# ::snt Could you please help me understand why the body of was not taken away by ambulance, but by police SUV?
# ::tokens ["Could", "you", "please", "help", "me", "understand", "why", "the", "body", "of", "was", "not", "taken", "away", "by", "ambulance", ",", "but", "by", "police", "SUV", "?"]
# ::lemmas ["could", "you", "please", "help", "i", "understand", "why", "the", "body", "of", "be", "not", "take", "away", "by", "ambulance", ",", "but", "by", "police", "SUV", "?"]
(c24-7 / possible-01
       :polarity (c24-15 / amr-unknown)
       :ARG1 (c24-0 / help-01
                    :ARG0 (c24-1 / you)
                    :ARG1 (c24-2 / understand-01
                                 :ARG0 (c24-5 / i)
                                 :ARG1 (c24-13 / thing
                                               :ARG0-of (c24-9 / cause-01
                                                               :ARG1 (c24-8 / contrast-01
                                                                            :ARG1 (c24-11 / take-away-05
                                                                                          :ARG0 (c24-4 / ambulance)
                                                                                          :ARG1 (c24-3 / body
                                                                                                       :part-of (c24-14 / police))
                                                                                          :polarity -)
                                                                            :ARG2 (c24-6 / take-away-05
                                                                                         :ARG0 (c24-10 / vehicle
                                                                                                       :mod c24-14
                                                                                                       :mod (c24-12 / sport))
                                                                                         :ARG1 c24-3)))))
                    :ARG2 c24-5)
       :polite +)

# ::snt K forget it then No need for animosity
# ::tokens ["K", "forget", "it", "then", "No", "need", "for", "animosity"]
# ::lemmas ["k", "forget", "it", "then", "no", "need", "for", "animosity"]
(c25-4 / cause-01
       :ARG0 (c25-1 / forget-01
                    :ARG0 (c25-0 / you)
                    :ARG1 (c25-2 / it)
                    :time (c25-5 / then)
                    :mode imperative)
       :ARG1 (c25-3 / need-01
                    :ARG1 (c25-6 / animosity)
                    :polarity -))

# ::snt the TRUTH!So SICK of MSMs"truth" &amp; "facts"Again IDK what you&amp; your community is really going thru but prayingGodBless
# ::tokens ["the", "TRUTH!So", "SICK", "of", "MSMs\"truth", "\"", "&", "amp", ";", "\"", "facts\"Again", "IDK", "what", "you&amp", ";", "your", "community", "is", "really", "going", "thru", "but", "prayingGodBless"]
# ::lemmas ["the", "TRUTH!So", "SICK", "of", "MSMs\"truth", "\"", "&", "amp", ";", "\"", "facts\"again", "IDK", "what", "you&amp", ";", "your", "community", "be", "really", "go", "thru", "but", "prayinggodbles"]
(c26-19 / true-01
        :ARG1 (c26-5 / and
                     :op1 (c26-3 / sick-02
                                 :ARG0 (c26-1 / product
                                              :name (c26-8 / name
                                                           :op1 "MSN"))
                                 :ARG1 (c26-12 / and
                                               :op1 c26-19)
                                 :op2 (c26-6 / fact)))
        :op2 (c26-13 / IDK-01
                     :ARG0 (c26-14 / you)
                     :ARG1 (c26-17 / thing
                                   :ARG1-of (c26-0 / mean-01
                                                   :ARG2 (c26-9 / and
                                                                :op1 c26-19
                                                                :op2 c26-6)))
                     :mod (c26-18 / again))
        :op3 (c26-16 / contrast-01
                     :ARG1 (c26-11 / go-01
                                   :ARG1 (c26-2 / community
                                                :poss c26-14)
                                   :ARG2 (c26-4 / pray-01
                                                :ARG0 c26-14
                                                :ARG1 (c26-7 / person
                                                             :name (c26-15 / name
                                                                           :op1 "GodBless")))
                                   :ARG1-of (c26-10 / real-04))))

# ::snt they weren't letting u even show id or even come to ur car. We were on our own in finding a way to get home.
# ::tokens ["they", "were", "n't", "letting", "u", "even", "show", "i", "d", "or", "even", "come", "to", "ur", "car", ".", "We", "were", "on", "our", "own", "in", "finding", "a", "way", "to", "get", "home", "."]
# ::lemmas ["they", "be", "not", "let", "u", "even", "show", "i", "d", "or", "even", "come", "to", "ur", "car", ".", "we", "be", "on", "our", "own", "in", "find", "a", "way", "to", "get", "home", "."]
(c27-4 / multi-sentence
       :snt1 (c27-3 / let-01
                    :ARG0 (c27-16 / they)
                    :ARG1 (c27-7 / or
                                 :op1 (c27-15 / show-01
                                              :ARG0 (c27-1 / you)
                                              :ARG1 (c27-10 / id)
                                              :mod (c27-9 / even))
                                 :op2 (c27-13 / come-01
                                              :ARG1 c27-1
                                              :ARG4 (c27-12 / car
                                                            :poss c27-1)
                                              :mod (c27-6 / even)))
                    :polarity -)
       :snt2 (c27-8 / by-oneself
                    :domain (c27-2 / we)
                    :topic (c27-5 / find-01
                                  :ARG0 c27-2
                                  :ARG1 (c27-11 / way)
                                  :purpose (c27-14 / get-05
                                                   :ARG1 c27-2
                                                   :ARG2 (c27-0 / home)))))

# ::snt Please check out this site and support this movement that is going to change OURstory
# ::tokens ["Please", "check", "out", "this", "site", "and", "support", "this", "movement", "that", "is", "going", "to", "change", "OURstory"]
# ::lemmas ["please", "check", "out", "this", "site", "and", "support", "this", "movement", "that", "be", "go", "to", "change", "OURstory"]
(c28-10 / and
        :op1 (c28-6 / check-out-05
                    :ARG0 (c28-0 / you)
                    :ARG1 (c28-8 / site
                                 :mod (c28-9 / this))
                    :mode imperative
                    :polite +)
        :op2 (c28-4 / support-01
                    :ARG0 c28-0
                    :ARG1 (c28-3 / movement-07
                                 :ARG0 (c28-7 / this)
                                 :ARG0-of (c28-5 / change-01
                                                 :ARG1 (c28-2 / story
                                                              :poss (c28-1 / we))))
                    :mode imperative
                    :polite +))

# ::snt is Capt Johnson just here to keep blacks in the field calm but can't know what's going on. Smh
# ::tokens ["is", "Capt", "Johnson", "just", "here", "to", "keep", "blacks", "in", "the", "field", "calm", "but", "ca", "n't", "know", "what", "'s", "going", "on", ".", "Smh"]
# ::lemmas ["be", "Capt", "Johnson", "just", "here", "to", "keep", "black", "in", "the", "field", "calm", "but", "can", "not", "know", "what", "be", "go", "on", ".", "smh"]
(c29-3 / multi-sentence
       :snt1 (c29-5 / be-located-at-91
                    :ARG1 (c29-8 / person
                                 :name (c29-7 / name
                                              :op1 "Johnson")
                                 :ARG0-of (c29-0 / have-org-role-91
                                                 :ARG2 (c29-10 / captain)))
                    :ARG2 (c29-17 / here)
                    :mod (c29-1 / just)
                    :purpose (c29-15 / keep-02
                                     :ARG0 c29-8
                                     :ARG1 (c29-9 / calm-03
                                                  :ARG1 (c29-16 / person
                                                                :ARG1-of (c29-11 / black-05))
                                                  :location (c29-2 / field))
                                     :concession (c29-4 / possible-01
                                                        :ARG1 (c29-6 / know-01
                                                                     :ARG0 c29-8
                                                                     :ARG1 (c29-14 / thing
                                                                                   :ARG1-of (c29-12 / go-on-15)))
                                                        :polarity -)))
       :snt2 (c29-13 / sigh-02
                     :mode expressive))

# ::snt : Captain Johnson: "I know we're scared and I know we've fallen. But I know He's going to pick us up." -my new HERO
# ::tokens [":", "Captain", "Johnson", ":", "\"", "I", "know", "we", "'re", "scared", "and", "I", "know", "we", "'ve", "fallen", ".", "But", "I", "know", "He", "'s", "going", "to", "pick", "us", "up", ".", "\"", "-my", "new", "HERO"]
# ::lemmas [":", "Captain", "Johnson", ":", "\"", "i", "know", "we", "be", "scared", "and", "i", "know", "we", "'ve", "fall", ".", "but", "i", "know", "he", "be", "go", "to", "pick", "we", "up", ".", "\"", "-my", "new", "HERO"]
(c30-11 / say-01
        :ARG0 (c30-9 / person
                     :name (c30-7 / name
                                  :op1 "Captain"
                                  :op2 "Johnson"))
        :ARG1 (c30-10 / contrast-01
                      :ARG1 (c30-15 / and
                                    :op1 (c30-13 / know-01
                                                 :ARG0 c30-9
                                                 :ARG1 (c30-4 / scare-01
                                                              :ARG1 (c30-1 / we)))
                                    :op2 (c30-5 / know-01
                                                :ARG0 c30-9
                                                :ARG1 (c30-2 / fall-05
                                                             :ARG1 c30-1)))
                      :ARG2 (c30-12 / know-01
                                    :ARG0 c30-9
                                    :ARG1 (c30-14 / pick-up-04
                                                  :ARG0 (c30-0 / he)
                                                  :ARG1 c30-1)))
        :ARG2 (c30-3 / hero
                     :ARG1-of (c30-8 / new-01)
                     :poss (c30-6 / i)))

# ::snt FYI CaptJohnson grew up in Ferguson &amp; was out last night participating in protests
# ::tokens ["FYI", "CaptJohnson", "grew", "up", "in", "Ferguson", "&", "amp", ";", "was", "out", "last", "night", "participating", "in", "protests"]
# ::lemmas ["FYI", "CaptJohnson", "grow", "up", "in", "Ferguson", "&", "amp", ";", "be", "out", "last", "night", "participate", "in", "protest"]
(c31-12 / and
        :op1 (c31-9 / grow-up-04
                    :ARG1 (c31-6 / person
                                 :name (c31-4 / name
                                              :op1 "CaptJohnson"))
                    :location (c31-8 / city
                                     :name (c31-5 / name
                                                  :op1 "Ferguson"
                                                  :op2 "&"
                                                  :op3 "amp")))
        :op2 (c31-2 / out-06
                    :ARG1 c31-6
                    :time (c31-7 / date-entity
                                 :dayperiod (c31-10 / night)
                                 :mod (c31-0 / yesterday))
                    :ARG0-of (c31-11 / participate-01
                                     :ARG1 (c31-1 / protest-01)))
        :purpose (c31-3 / inform-01
                        :ARG1 c31-6))

# ::snt thank u but I only want to put out how it really is here cause the media is cut and pasting not giving the whole truth.
# ::tokens ["thank", "u", "but", "I", "only", "want", "to", "put", "out", "how", "it", "really", "is", "here", "cause", "the", "media", "is", "cut", "and", "pasting", "not", "giving", "the", "whole", "truth", "."]
# ::lemmas ["thank", "u", "but", "i", "only", "want", "to", "put", "out", "how", "it", "really", "be", "here", "cause", "the", "media", "be", "cut", "and", "paste", "not", "give", "the", "whole", "truth", "."]
(c32-10 / contrast-01
        :ARG1 (c32-16 / thank-01
                      :ARG0 (c32-5 / i)
                      :ARG1 (c32-1 / you))
        :ARG2 (c32-2 / want-01
                     :ARG0 c32-5
                     :ARG1 (c32-8 / put-out-10
                                  :ARG0 c32-5
                                  :ARG1 (c32-13 / thing
                                                :manner-of (c32-11 / it
                                                                   :location (c32-0 / here)
                                                                   :ARG1-of (c32-9 / real-04))))
                     :mod (c32-4 / only)
                     :ARG1-of (c32-12 / cause-01
                                      :ARG0 (c32-17 / and
                                                    :op1 (c32-14 / cut-and-past-00
                                                                 :ARG0 (c32-3 / media))
                                                    :op2 (c32-15 / give-16
                                                                 :ARG0 c32-3
                                                                 :ARG1 (c32-7 / truth
                                                                              :mod (c32-6 / whole))
                                                                 :polarity -)))))

# ::snt my question was one that u wouldn't understand or get the reference to
# ::tokens ["my", "question", "was", "one", "that", "u", "would", "n't", "understand", "or", "get", "the", "reference", "to"]
# ::lemmas ["my", "question", "be", "one", "that", "u", "would", "not", "understand", "or", "get", "the", "reference", "to"]
(c33-3 / question-01
       :ARG0 (c33-4 / i)
       :ARG1 (c33-2 / one
                    :ARG1-of (c33-5 / reference-04
                                    :ARG0 (c33-0 / you)
                                    :ARG1-of (c33-1 / understand-01
                                                    :ARG0 c33-0
                                                    :polarity -)
                                    :ARG1-of (c33-6 / get-01
                                                    :ARG0 c33-0
                                                    :polarity -))))
