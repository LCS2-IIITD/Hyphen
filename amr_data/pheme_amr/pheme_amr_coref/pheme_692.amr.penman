# ::snt : cops beat innocent man, then charged him with bleeding on their uniforms
# ::tokens [":", "cops", "beat", "innocent", "man", ",", "then", "charged", "him", "with", "bleeding", "on", "their", "uniforms"]
# ::lemmas [":", "cop", "beat", "innocent", "man", ",", "then", "charge", "he", "with", "bleed", "on", "their", "uniform"]
(c1-8 / and
      :op1 (c1-2 / beat-01
                 :ARG0 (c1-5 / cop)
                 :ARG1 (c1-0 / man
                             :ARG1-of (c1-3 / innocent-01)))
      :op2 (c1-4 / charge-05
                 :ARG0 c1-5
                 :ARG1 c1-0
                 :ARG2 (c1-6 / bleed-01
                             :location (c1-1 / uniform
                                             :poss c1-5))
                 :time (c1-7 / then)))

# ::snt this has gotta stop
# ::tokens ["this", "has", "got", "ta", "stop"]
# ::lemmas ["this", "have", "got", "to", "stop"]
(c2-0 / obligate-01
      :ARG2 (c2-2 / stop-01
                  :ARG1 (c2-1 / this)))

# ::snt And US spreads "democracy"?": cops beat innocent man,then charged him w/bleeding on their uniforms
# ::tokens ["And", "US", "spreads", "\"", "democracy", "\"", "?", "\"", ":", "cops", "beat", "innocent", "man", ",", "then", "charged", "him", "w", "/", "bleeding", "on", "their", "uniforms"]
# ::lemmas ["and", "US", "spread", "\"", "democracy", "\"", "?", "\"", ":", "cop", "beat", "innocent", "man", ",", "then", "charge", "he", "w", "/", "bleed", "on", "their", "uniform"]
(c3-0 / multi-sentence
      :snt1 (c3-14 / and
                   :op2 (c3-12 / spread-03
                               :ARG0 (c3-8 / country
                                           :name (c3-5 / name
                                                       :op1 "US"))
                               :ARG1 (c3-7 / democracy)
                               :polarity (c3-3 / amr-unknown))
                   :snt2-of c3-0)
      :op1 (c3-2 / beat-01
                 :ARG0 (c3-9 / cop)
                 :ARG1 (c3-6 / man
                             :ARG1-of (c3-4 / innocent-01)))
      :op2 (c3-11 / charge-05
                  :ARG0 c3-9
                  :ARG1 c3-6
                  :manner (c3-10 / bleed-01
                                 :location (c3-1 / uniform
                                                 :poss c3-9))
                  :time (c3-13 / then)))

# ::snt fascist state
# ::tokens ["fascist", "state"]
# ::lemmas ["fascist", "state"]
(c4-0 / state
      :mod (c4-1 / political-movement
                 :name (c4-2 / name
                             :op1 "Fascism")))

# ::snt Have you seen their dry cleaning bills?
# ::tokens ["Have", "you", "seen", "their", "dry", "cleaning", "bills", "?"]
# ::lemmas ["have", "you", "see", "their", "dry", "cleaning", "bill", "?"]
(c5-4 / see-01
      :ARG0 (c5-0 / you)
      :ARG1 (c5-1 / bill-01
                  :ARG2 (c5-5 / they)
                  :ARG3 (c5-3 / clean-01
                              :ARG1 c5-5
                              :manner (c5-2 / dry-08)))
      :polarity (c5-6 / amr-unknown))

# ::snt Wouldn't say complete innocent man.. but by no means did the man deserve to DIE
# ::tokens ["Would", "n't", "say", "complete", "innocent", "man", "..", "but", "by", "no", "means", "did", "the", "man", "deserve", "to", "DIE"]
# ::lemmas ["would", "not", "say", "complete", "innocent", "man", "..", "but", "by", "no", "means", "do", "the", "man", "deserve", "to", "DIE"]
(c6-5 / contrast-01
      :ARG1 (c6-7 / say-01
                  :ARG1 (c6-1 / man
                              :ARG1-of (c6-3 / innocent-01
                                             :ARG1-of (c6-4 / complete-02)))
                  :polarity -)
      :ARG2 (c6-6 / deserve-01
                  :ARG0 c6-1
                  :ARG1 (c6-0 / die-01
                              :ARG1 c6-1)
                  :mod (c6-2 / by-no-means)
                  :polarity -))

# ::snt At this point, it's just gotten so silly, I can't help laughing. Regardless of how serious it is.
# ::tokens ["At", "this", "point", ",", "it", "'s", "just", "gotten", "so", "silly", ",", "I", "ca", "n't", "help", "laughing", ".", "Regardless", "of", "how", "serious", "it", "is", "."]
# ::lemmas ["at", "this", "point", ",", "it", "be", "just", "get", "so", "silly", ",", "i", "can", "not", "help", "laugh", ".", "regardless", "of", "how", "serious", "it", "be", "."]
(c7-3 / multi-sentence
      :snt1 (c7-10 / get-03
                   :ARG1 (c7-7 / it)
                   :ARG2 (c7-12 / silly
                                :domain c7-7
                                :ARG2-of (c7-0 / have-degree-91
                                               :ARG1 c7-7
                                               :ARG3 (c7-6 / so)
                                               :ARG6 (c7-14 / help-02
                                                            :ARG0 (c7-11 / i)
                                                            :ARG1 (c7-2 / laugh-01
                                                                        :ARG0 c7-11)
                                                            :polarity -)))
                   :time (c7-8 / point
                               :mod (c7-13 / this))
                   :mod (c7-1 / just))
      :snt2 (c7-9 / regardless-91
                  :ARG2 (c7-4 / serious-02
                              :ARG1 (c7-5 / it)
                              :degree c7-6)))

# ::snt ru fucking kidding!!???
# ::tokens ["ru", "fucking", "kidding", "!", "!", "?", "?", "?"]
# ::lemmas ["ru", "fucking", "kidding", "!", "!", "?", "?", "?"]
(c8-2 / kid-01
      :ARG0 (c8-0 / you)
      :mod (c8-1 / fucking
                 :mode expressive)
      :polarity (c8-3 / amr-unknown))

# ::snt this must be a joke ahah USA what the fuck is wrong with you?
# ::tokens ["this", "must", "be", "a", "joke", "ahah", "USA", "what", "the", "fuck", "is", "wrong", "with", "you", "?"]
# ::lemmas ["this", "must", "be", "a", "joke", "ahah", "USA", "what", "the", "fuck", "be", "wrong", "with", "you", "?"]
(c9-4 / multi-sentence
      :snt1 (c9-5 / infer-01
                  :ARG1 (c9-0 / joke-01
                              :ARG2 (c9-8 / this)))
      :snt2 (c9-1 / wrong-02
                  :ARG1 (c9-9 / amr-unknown)
                  :ARG2 (c9-2 / you)
                  :mod (c9-3 / fuck
                             :mode expressive)
                  :mod (c9-7 / country
                             :name (c9-6 / name
                                         :op1 "USA"))))

# ::snt : cops beat innocent man, then charged him with bleeding on their uniforms
# ::tokens [":", "cops", "beat", "innocent", "man", ",", "then", "charged", "him", "with", "bleeding", "on", "their", "uniforms"]
# ::lemmas [":", "cop", "beat", "innocent", "man", ",", "then", "charge", "he", "with", "bleed", "on", "their", "uniform"]
(c10-8 / and
       :op1 (c10-2 / beat-01
                   :ARG0 (c10-5 / cop)
                   :ARG1 (c10-0 / man
                                :ARG1-of (c10-3 / innocent-01)))
       :op2 (c10-4 / charge-05
                   :ARG0 c10-5
                   :ARG1 c10-0
                   :ARG2 (c10-6 / bleed-01
                                :location (c10-1 / uniform
                                                 :poss c10-5))
                   :time (c10-7 / then)))

# ::snt AmeriKKKan police for ya
# ::tokens ["AmeriKKKan", "police", "for", "ya"]
# ::lemmas ["AmeriKKKan", "police", "for", "ya"]
(c11-2 / police
       :mod (c11-3 / person
                   :name (c11-0 / name
                                :op1 "AmeriKKKan"))
       :beneficiary (c11-1 / you))

# ::snt they should be arrested for abuse
# ::tokens ["they", "should", "be", "arrested", "for", "abuse"]
# ::lemmas ["they", "should", "be", "arrest", "for", "abuse"]
(c12-0 / recommend-01
       :ARG1 (c12-3 / arrest-01
                    :ARG1 (c12-1 / they)
                    :ARG2 (c12-2 / abuse-01
                                 :ARG0 c12-1)))

# ::snt That doesn't justify gunning down an unarmed, non threatening suspect whom the cops didn't know was the suspect.
# ::tokens ["That", "does", "n't", "justify", "gunning", "down", "an", "unarmed", ",", "non", "threatening", "suspect", "whom", "the", "cops", "did", "n't", "know", "was", "the", "suspect", "."]
# ::lemmas ["that", "do", "not", "justify", "gun", "down", "an", "unarmed", ",", "non", "threatening", "suspect", "whom", "the", "cop", "do", "not", "know", "be", "the", "suspect", "."]
(c13-0 / justify-01
       :ARG0 (c13-7 / that)
       :ARG1 (c13-4 / gun-down-02
                    :ARG1 (c13-2 / person
                                 :ARG2-of (c13-6 / suspect-01)
                                 :ARG1-of (c13-8 / arm-01
                                                 :polarity -)
                                 :ARG0-of (c13-5 / threaten-01
                                                 :polarity -)
                                 :ARG1-of (c13-1 / know-01
                                                 :ARG0 (c13-3 / cop)
                                                 :polarity -)))
       :polarity -)

# ::snt sounds fake
# ::tokens ["sounds", "fake"]
# ::lemmas ["sound", "fake"]
(c14-0 / sound-01
       :ARG1 (c14-1 / fake-02))

# ::snt yep it's the same here in the netherlands
# ::tokens ["yep", "it", "'s", "the", "same", "here", "in", "the", "netherlands"]
# ::lemmas ["yep", "it", "be", "the", "same", "here", "in", "the", "netherland"]
(c15-4 / same-01
       :ARG1 (c15-2 / it)
       :location (c15-0 / here
                        :location (c15-3 / netherlands))
       :mod (c15-1 / yep
                   :mode expressive))

# ::snt time to buy some guns before they take that right away from you...
# ::tokens ["time", "to", "buy", "some", "guns", "before", "they", "take", "that", "right", "away", "from", "you", "..."]
# ::lemmas ["time", "to", "buy", "some", "gun", "before", "they", "take", "that", "right", "away", "from", "you", "..."]
(c16-8 / time
       :time-of (c16-1 / buy-01
                       :ARG0 (c16-0 / you)
                       :ARG1 (c16-5 / gun
                                    :quant (c16-7 / some))
                       :time (c16-4 / before
                                    :op1 (c16-6 / take-away-05
                                                :ARG0 (c16-2 / they)
                                                :ARG1 c16-5
                                                :source c16-0
                                                :mod (c16-3 / right)))))

# ::snt Summer of
# ::tokens ["Summer", "of"]
# ::lemmas ["summer", "of"]
(c17-0 / summer)

# ::snt : cops beat innocent man, then charged him with bleeding on their uniforms
# ::tokens [":", "cops", "beat", "innocent", "man", ",", "then", "charged", "him", "with", "bleeding", "on", "their", "uniforms"]
# ::lemmas [":", "cop", "beat", "innocent", "man", ",", "then", "charge", "he", "with", "bleed", "on", "their", "uniform"]
(c18-8 / and
       :op1 (c18-2 / beat-01
                   :ARG0 (c18-5 / cop)
                   :ARG1 (c18-0 / man
                                :ARG1-of (c18-3 / innocent-01)))
       :op2 (c18-4 / charge-05
                   :ARG0 c18-5
                   :ARG1 c18-0
                   :ARG2 (c18-6 / bleed-01
                                :location (c18-1 / uniform
                                                 :poss c18-5))
                   :time (c18-7 / then)))

# ::snt is that true????..finding hard to believe you after all your lies about Ukraine
# ::tokens ["is", "that", "true????", "..", "finding", "hard", "to", "believe", "you", "after", "all", "your", "lies", "about", "Ukraine"]
# ::lemmas ["be", "that", "true????", "..", "find", "hard", "to", "believe", "you", "after", "all", "your", "lie", "about", "Ukraine"]
(c19-3 / multi-sentence
       :snt1 (c19-10 / true-01
                     :ARG1 (c19-9 / that)
                     :polarity (c19-11 / amr-unknown))
       :snt2 (c19-2 / find-01
                    :ARG1 (c19-0 / hard-02
                                 :ARG1 (c19-5 / believe-01
                                              :ARG1 (c19-1 / you))
                                 :concession (c19-4 / lie-08
                                                    :ARG0 c19-1
                                                    :ARG3 (c19-8 / country
                                                                 :name (c19-7 / name
                                                                              :op1 "Ukraine"))
                                                    :mod (c19-6 / all)))))

# ::snt : cops beat innocent man, then charged him with bleeding on their uniforms
# ::tokens [":", "cops", "beat", "innocent", "man", ",", "then", "charged", "him", "with", "bleeding", "on", "their", "uniforms"]
# ::lemmas [":", "cop", "beat", "innocent", "man", ",", "then", "charge", "he", "with", "bleed", "on", "their", "uniform"]
(c20-8 / and
       :op1 (c20-2 / beat-01
                   :ARG0 (c20-5 / cop)
                   :ARG1 (c20-0 / man
                                :ARG1-of (c20-3 / innocent-01)))
       :op2 (c20-4 / charge-05
                   :ARG0 c20-5
                   :ARG1 c20-0
                   :ARG2 (c20-6 / bleed-01
                                :location (c20-1 / uniform
                                                 :poss c20-5))
                   :time (c20-7 / then)))

# ::snt : cops beat innocent man, then charged him with bleeding on their uniforms
# ::tokens [":", "cops", "beat", "innocent", "man", ",", "then", "charged", "him", "with", "bleeding", "on", "their", "uniforms"]
# ::lemmas [":", "cop", "beat", "innocent", "man", ",", "then", "charge", "he", "with", "bleed", "on", "their", "uniform"]
(c21-8 / and
       :op1 (c21-2 / beat-01
                   :ARG0 (c21-5 / cop)
                   :ARG1 (c21-0 / man
                                :ARG1-of (c21-3 / innocent-01)))
       :op2 (c21-4 / charge-05
                   :ARG0 c21-5
                   :ARG1 c21-0
                   :ARG2 (c21-6 / bleed-01
                                :location (c21-1 / uniform
                                                 :poss c21-5))
                   :time (c21-7 / then)))

# ::snt : cops beat innocent man, then charged him with bleeding on their uniforms " that's just stupid
# ::tokens [":", "cops", "beat", "innocent", "man", ",", "then", "charged", "him", "with", "bleeding", "on", "their", "uniforms", "\"", "that", "'s", "just", "stupid"]
# ::lemmas [":", "cop", "beat", "innocent", "man", ",", "then", "charge", "he", "with", "bleed", "on", "their", "uniform", "\"", "that", "be", "just", "stupid"]
(c22-8 / stupid
       :domain (c22-10 / and
                       :op1 (c22-3 / beat-01
                                   :ARG0 (c22-6 / cop)
                                   :ARG1 (c22-1 / man
                                                :ARG1-of (c22-4 / innocent-01)))
                       :op2 (c22-5 / charge-05
                                   :ARG0 c22-6
                                   :ARG1 c22-1
                                   :ARG2 (c22-7 / bleed-01
                                                :location (c22-2 / uniform
                                                                 :poss c22-6))
                                   :time (c22-9 / then)))
       :mod (c22-0 / just))

# ::snt good move. Cleaning is expensive
# ::tokens ["good", "move", ".", "Cleaning", "is", "expensive"]
# ::lemmas ["good", "move", ".", "cleaning", "be", "expensive"]
(c23-0 / multi-sentence
       :snt1 (c23-2 / move-02
                    :ARG1-of (c23-4 / good-02))
       :snt2 (c23-1 / expensive
                    :domain (c23-3 / clean-01)))

# ::snt We are DONE|. with Police Chief THOMAS JACKSON ://
# ::tokens ["We", "are", "DONE|", ".", "with", "Police", "Chief", "THOMAS", "JACKSON", ":", "//"]
# ::lemmas ["we", "be", "DONE|", ".", "with", "Police", "Chief", "THOMAS", "JACKSON", ":", "//"]
(c24-2 / be-done-08
       :ARG1 (c24-1 / we)
       :accompanier (c24-4 / person
                           :name (c24-3 / name
                                        :op1 "ThOMAS"
                                        :op2 "Jackson")
                           :ARG0-of (c24-0 / have-org-role-91
                                           :ARG1 (c24-6 / police)
                                           :ARG2 (c24-5 / chief))))

# ::snt Where are the facts ? Video from robbed store show victim pushing employee &amp; stealing cigars, so let's get all the facts first, OK?
# ::tokens ["Where", "are", "the", "facts", "?", "Video", "from", "robbed", "store", "show", "victim", "pushing", "employee", "&", "amp", ";", "stealing", "cigars", ",", "so", "let", "'s", "get", "all", "the", "facts", "first", ",", "OK", "?"]
# ::lemmas ["where", "be", "the", "fact", "?", "video", "from", "rob", "store", "show", "victim", "push", "employee", "&", "amp", ";", "steal", "cigar", ",", "so", "let", "us", "get", "all", "the", "fact", "first", ",", "ok", "?"]
(c25-0 / multi-sentence
       :snt1 (c25-7 / fact
                    :location (c25-6 / amr-unknown))
       :snt2 (c25-4 / show-01
                    :ARG0 (c25-1 / video
                                 :source (c25-9 / store
                                                :ARG1-of (c25-12 / rob-01)))
                    :ARG1 (c25-16 / and
                                  :op1 (c25-2 / push-01
                                              :ARG0 (c25-5 / person
                                                           :ARG0-of (c25-15 / victimize-01))
                                              :ARG1 (c25-8 / person
                                                           :ARG0-of (c25-10 / employ-01)))
                                  :op2 (c25-17 / steal-01
                                               :ARG0 c25-5
                                               :ARG1 (c25-21 / cigar)))
                    :ARG0-of (c25-3 / cause-01
                                    :ARG1 (c25-13 / get-01
                                                  :ARG0 (c25-14 / we)
                                                  :ARG1 (c25-20 / fact
                                                                :mod (c25-11 / all))
                                                  :ord (c25-19 / ordinal-entity
                                                               :value 1)
                                                  :ARG1-of (c25-18 / okay-01)
                                                  :mode imperative))))

# ::snt let the police do their job...the media should be reporting the news,, not influencing it..shame on u.
# ::tokens ["let", "the", "police", "do", "their", "job", "...", "the", "media", "should", "be", "reporting", "the", "news", ",", ",", "not", "influencing", "it", "..", "shame", "on", "u."]
# ::lemmas ["let", "the", "police", "do", "their", "job", "...", "the", "medium", "should", "be", "report", "the", "news", ",", ",", "not", "influence", "it", "..", "shame", "on", "u."]
(c26-3 / multi-sentence
       :snt1 (c26-2 / let-01
                    :ARG0 (c26-1 / you)
                    :ARG1 (c26-8 / do-02
                                 :ARG0 (c26-7 / police)
                                 :ARG1 (c26-0 / job
                                              :poss c26-7))
                    :mode imperative)
       :snt2 (c26-9 / recommend-01
                    :ARG1 (c26-13 / and
                                  :op1 (c26-5 / report-01
                                              :ARG0 (c26-10 / media)
                                              :ARG1 (c26-6 / news))
                                  :op2 (c26-4 / influence-01
                                              :ARG0 c26-10
                                              :ARG1 c26-6
                                              :polarity -)))
       :snt3 (c26-12 / shame-01
                     :ARG1 (c26-11 / you)))

# ::snt &amp; !!!!
# ::tokens ["&", "amp", ";", "!", "!", "!", "!"]
# ::lemmas ["&", "amp", ";", "!", "!", "!", "!"]
(c27-1 / and
       :op2 (c27-0 / amp))

# ::snt The dark side of USA
# ::tokens ["The", "dark", "side", "of", "USA"]
# ::lemmas ["the", "dark", "side", "of", "USA"]
(c28-0 / side
       :ARG1-of (c28-2 / dark-02)
       :part-of (c28-3 / country
                       :name (c28-1 / name
                                    :op1 "USA")))

# ::snt : cops beat innocent man, then charged him w/bleeding on their uniforms
# ::tokens [":", "cops", "beat", "innocent", "man", ",", "then", "charged", "him", "w", "/", "bleeding", "on", "their", "uniforms"]
# ::lemmas [":", "cop", "beat", "innocent", "man", ",", "then", "charge", "he", "w", "/", "bleed", "on", "their", "uniform"]
(c29-8 / and
       :op1 (c29-2 / beat-01
                   :ARG0 (c29-5 / cop)
                   :ARG1 (c29-0 / man
                                :ARG1-of (c29-3 / innocent-01)))
       :op2 (c29-4 / charge-05
                   :ARG0 c29-5
                   :ARG1 c29-0
                   :ARG2 (c29-6 / bleed-01
                                :ARG0 c29-5
                                :location (c29-1 / uniform
                                                 :poss c29-5))
                   :time (c29-7 / then)))

# ::snt Is it too soon to rename Central?
# ::tokens ["Is", "it", "too", "soon", "to", "rename", "Central", "?"]
# ::lemmas ["be", "it", "too", "soon", "to", "rename", "Central", "?"]
(c30-4 / soon
       :polarity (c30-6 / amr-unknown)
       :ARG2-of (c30-0 / have-degree-91
                       :ARG1 (c30-3 / rename-01
                                    :ARG1 (c30-1 / facility
                                                 :name (c30-2 / name
                                                              :op1 "Central")))
                       :ARG3 (c30-5 / too)))

# ::snt Tell us all how Great Leader Putin, ended that movie theater seige? Didn't Herr Putin kill dozens of innocent victims in gas attack?
# ::tokens ["Tell", "us", "all", "how", "Great", "Leader", "Putin", ",", "ended", "that", "movie", "theater", "seige", "?", "Did", "n't", "Herr", "Putin", "kill", "dozens", "of", "innocent", "victims", "in", "gas", "attack", "?"]
# ::lemmas ["tell", "we", "all", "how", "Great", "Leader", "Putin", ",", "end", "that", "movie", "theater", "seige", "?", "do", "not", "Herr", "Putin", "kill", "dozens", "of", "innocent", "victim", "in", "gas", "attack", "?"]
(c31-0 / multi-sentence
       :snt1 (c31-21 / tell-01
                     :ARG0 (c31-19 / you)
                     :ARG1 (c31-6 / amr-unknown
                                  :manner-of (c31-10 / end-01
                                                     :ARG0 (c31-2 / person
                                                                  :name (c31-11 / name
                                                                                :op1 "Putin")
                                                                  :ARG0-of (c31-7 / lead-02
                                                                                  :ARG2 (c31-14 / great)))
                                                     :ARG1 (c31-4 / seige
                                                                  :mod (c31-20 / theater
                                                                               :mod (c31-13 / movie)))))
                     :ARG2 (c31-15 / we
                                   :mod (c31-16 / all))
                     :mode imperative)
       :snt2 (c31-18 / kill-01
                     :ARG0 (c31-5 / person
                                  :name c31-11
                                  :op1 "Herr"
                                  :op2 "Putin")
                     :polarity -)
       :ARG1 (c31-9 / person
                    :ARG1-of (c31-1 / victimize-01)
                    :ARG1-of (c31-17 / innocent-01)
                    :quant (c31-8 / multiple
                                  :op1 12))
       :ARG2 (c31-12 / attack-01
                     :ARG2 (c31-3 / gas))
       :polarity c31-6)

# ::snt great argument...you make a great argument for taking away the first amendment.
# ::tokens ["great", "argument", "...", "you", "make", "a", "great", "argument", "for", "taking", "away", "the", "first", "amendment", "."]
# ::lemmas ["great", "argument", "...", "you", "make", "a", "great", "argument", "for", "take", "away", "the", "first", "amendment", "."]
(c32-2 / multi-sentence
       :snt1 (c32-9 / argue-01
                    :ARG0 (c32-0 / you)
                    :mod (c32-6 / great))
       :snt2 (c32-3 / argue-01
                    :ARG0 (c32-7 / you)
                    :ARG1 (c32-8 / take-away-05
                                 :ARG1 (c32-1 / law
                                              :name (c32-4 / name
                                                           :op1 "First"
                                                           :op2 "Amendment")))
                    :mod (c32-5 / great)))

# ::snt they got infected by police, . shame
# ::tokens ["they", "got", "infected", "by", "police", ",", ".", "shame"]
# ::lemmas ["they", "got", "infect", "by", "police", ",", ".", "shame"]
(c33-3 / infect-01
       :ARG0 (c33-1 / police)
       :ARG1 (c33-2 / they)
       :ARG0-of (c33-0 / shame-02))

# ::snt Don't you and Alex Jones work together
# ::tokens ["Do", "n't", "you", "and", "Alex", "Jones", "work", "together"]
# ::lemmas ["do", "not", "you", "and", "Alex", "Jones", "work", "together"]
(c35-0 / work-01
       :ARG0 (c35-1 / you)
       :ARG3 (c35-3 / person
                    :name (c35-2 / name
                                 :op1 "Alex"
                                 :op2 "Jones"))
       :mod (c35-5 / together)
       :ARG1-of (c35-4 / request-confirmation-91))

# ::snt the whole state is fascist?
# ::tokens ["the", "whole", "state", "is", "fascist", "?"]
# ::lemmas ["the", "whole", "state", "be", "fascist", "?"]
(c36-2 / political-movement
       :polarity (c36-4 / amr-unknown)
       :name (c36-1 / name
                    :op1 "Fascism")
       :domain (c36-3 / state
                      :mod (c36-0 / whole)))

# ::snt Stop paying these psychopaths! Check their addresses +supply lines! Go for jury nullification if charged with anything!!!!
# ::tokens ["Stop", "paying", "these", "psychopaths", "!", "Check", "their", "addresses", "+", "supply", "lines", "!", "Go", "for", "jury", "nullification", "if", "charged", "with", "anything", "!", "!", "!", "!"]
# ::lemmas ["stop", "pay", "these", "psychopath", "!", "check", "their", "address", "+", "supply", "line", "!", "go", "for", "jury", "nullification", "if", "charge", "with", "anything", "!", "!", "!", "!"]
(c37-3 / multi-sentence
       :snt1 (c37-13 / stop-01
                     :ARG0 (c37-1 / you)
                     :ARG1 (c37-8 / pay-01
                                  :ARG0 c37-1
                                  :ARG2 (c37-15 / psychopath
                                                :mod (c37-14 / this)))
                     :mode imperative)
       :snt2 (c37-10 / check-01
                     :ARG0 (c37-12 / you)
                     :ARG1 (c37-16 / and
                                   :op1 (c37-5 / address
                                               :poss c37-15)
                                   :op2 (c37-2 / line
                                               :mod (c37-4 / supply-01)))
                     :mode imperative)
       :snt3 (c37-11 / go-06
                     :ARG0 c37-12
                     :ARG1 (c37-6 / nullify-01
                                  :ARG0 (c37-0 / jury))
                     :condition (c37-9 / charge-05
                                       :ARG1 c37-12
                                       :ARG2 (c37-7 / anything))
                     :mode imperative))

# ::snt smh
# ::tokens ["smh"]
# ::lemmas ["smh"]
(c38-0 / smh
       :mode expressive)

# ::snt : cops beat innocent man, then charged him with bleeding on their uniforms
# ::tokens [":", "cops", "beat", "innocent", "man", ",", "then", "charged", "him", "with", "bleeding", "on", "their", "uniforms"]
# ::lemmas [":", "cop", "beat", "innocent", "man", ",", "then", "charge", "he", "with", "bleed", "on", "their", "uniform"]
(c39-8 / and
       :op1 (c39-2 / beat-01
                   :ARG0 (c39-5 / cop)
                   :ARG1 (c39-0 / man
                                :ARG1-of (c39-3 / innocent-01)))
       :op2 (c39-4 / charge-05
                   :ARG0 c39-5
                   :ARG1 c39-0
                   :ARG2 (c39-6 / bleed-01
                                :location (c39-1 / uniform
                                                 :poss c39-5))
                   :time (c39-7 / then)))
