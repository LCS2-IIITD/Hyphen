# ::snt Wrong attribution. But the sentiment is there.
# ::tokens ["Wrong", "attribution", ".", "But", "the", "sentiment", "is", "there", "."]
# ::lemmas ["wrong", "attribution", ".", "but", "the", "sentiment", "be", "there", "."]
(c1-1 / multi-sentence
      :snt1 (c1-0 / wrong-04
                  :ARG2 (c1-5 / attribute-01))
      :snt2 (c1-2 / contrast-01
                  :ARG2 (c1-3 / sentiment
                              :location (c1-4 / there))))

# ::snt fuck
# ::tokens ["fuck"]
# ::lemmas ["fuck"]
(c2-0 / fuck-01)

# ::snt This idea can never be stated too many times.
# ::tokens ["This", "idea", "can", "never", "be", "stated", "too", "many", "times", "."]
# ::lemmas ["this", "idea", "can", "never", "be", "state", "too", "many", "time", "."]
(c3-4 / possible-01
      :ARG1 (c3-6 / state-01
                  :ARG1 (c3-3 / idea
                              :mod (c3-7 / this))
                  :time (c3-2 / ever)
                  :frequency (c3-0 / have-quant-91
                                   :ARG2 (c3-1 / many)
                                   :ARG3 (c3-5 / too)
                                   :ARG1 c3-6))
      :polarity -)

# ::snt Agree wholeheartedly with sentiment, &amp; apologies for pedantry, but FYI
# ::tokens ["Agree", "wholeheartedly", "with", "sentiment", ",", "&", "amp", ";", "apologies", "for", "pedantry", ",", "but", "FYI"]
# ::lemmas ["agree", "wholeheartedly", "with", "sentiment", ",", "&", "amp", ";", "apology", "for", "pedantry", ",", "but", "FYI"]
(c4-3 / multi-sentence
      :snt1 (c4-10 / agree-01
                   :ARG0 (c4-5 / i)
                   :ARG1 (c4-9 / sentiment)
                   :degree (c4-1 / wholehearted))
      :snt2 (c4-4 / and
                  :op1 (c4-6 / apologize-01
                             :ARG0 (c4-8 / i)
                             :ARG1 (c4-7 / pedantry))
                  :op2 (c4-0 / have-purpose-91
                             :ARG2 (c4-2 / inform-01
                                         :ARG1 c4-8))))

# ::snt Voltaire na jamais dit a.
# ::tokens ["Voltaire", "na", "jamais", "dit", "a."]
# ::lemmas ["voltaire", "na", "jamais", "dit", "a."]
(c5-2 / dit-a
      :mod (c5-1 / voila
                 :mode expressive)
      :mod (c5-0 / jamais)
      :mode expressive)

# ::snt . The quote was by Evelyn Beatrice Hall NOT Voltaire
# ::tokens [".", "The", "quote", "was", "by", "Evelyn", "Beatrice", "Hall", "NOT", "Voltaire"]
# ::lemmas [".", "the", "quote", "be", "by", "Evelyn", "Beatrice", "Hall", "NOT", "Voltaire"]
(c6-0 / quote-01
      :ARG0 (c6-4 / person
                  :name (c6-2 / name
                              :op1 "Evelyn"
                              :op2 "Beatrice"
                              :op3 "Hall")
                  :ARG1-of (c6-1 / instead-of-91
                                 :ARG2 (c6-5 / person
                                             :name (c6-3 / name
                                                         :op1 "Voltaire")))))

# ::snt Not at all.
# ::tokens ["Not", "at", "all", "."]
# ::lemmas ["not", "at", "all", "."]
(c7-0 / have-polarity-91
      :degree (c7-1 / at-all)
      :ARG2 -)

# ::snt merci
# ::tokens ["merci"]
# ::lemmas ["merci"]
(c8-1 / person
      :name (c8-0 / name
                  :op1 "Merci"))

# ::snt Very true we Mustn't let anything stop freedom of speech even if we disagree with what's said.
# ::tokens ["Very", "true", "we", "Must", "n't", "let", "anything", "stop", "freedom", "of", "speech", "even", "if", "we", "disagree", "with", "what", "'s", "said", "."]
# ::lemmas ["very", "true", "we", "must", "not", "let", "anything", "stop", "freedom", "of", "speech", "even", "if", "we", "disagree", "with", "what", "be", "say", "."]
(c9-11 / true-01
       :ARG1 (c9-4 / obligate-01
                   :ARG1 (c9-0 / we)
                   :ARG2 (c9-1 / let-01
                               :ARG0 c9-0
                               :ARG1 (c9-10 / stop-01
                                            :ARG0 (c9-12 / anything)
                                            :ARG1 (c9-2 / free-04
                                                        :ARG3 (c9-5 / speak-01))))
                   :concession (c9-6 / even-if
                                     :op1 (c9-8 / disagree-01
                                                :ARG0 c9-0
                                                :ARG2 (c9-9 / thing
                                                            :ARG1-of (c9-3 / say-01))))
                   :polarity -)
       :degree (c9-7 / very))
