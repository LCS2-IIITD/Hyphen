# ::snt Was this a 'make us look good' action by the law mob..? Why was this man, a charged murderer, allowed free..! Why...?
# ::tokens ["Was", "this", "a", "'", "make", "us", "look", "good", "'", "action", "by", "the", "law", "mob", "..", "?", "Why", "was", "this", "man", ",", "a", "charged", "murderer", ",", "allowed", "free", "..", "!", "Why", "...", "?"]
# ::lemmas ["be", "this", "a", "'", "make", "we", "look", "good", "'", "action", "by", "the", "law", "mob", "..", "?", "why", "be", "this", "man", ",", "a", "charge", "murderer", ",", "allow", "free", "..", "!", "why", "...", "?"]
(c1-0 / multi-sentence
      :snt1 (c1-2 / act-02
                  :ARG0 (c1-7 / mob
                              :mod (c1-4 / law))
                  :ARG1 (c1-3 / make-02
                              :ARG0 c1-7
                              :ARG1 (c1-17 / look-02
                                           :ARG0 (c1-9 / we)
                                           :ARG1 (c1-8 / good-02)))
                  :domain (c1-19 / this)
                  :polarity (c1-10 / amr-unknown))
      :snt2 (c1-16 / cause-01
                   :ARG0 (c1-6 / amr-unknown)
                   :ARG1 (c1-18 / allow-01
                                :ARG1 (c1-5 / free-04
                                            :ARG1 (c1-11 / man
                                                         :mod (c1-14 / this)
                                                         :ARG1-of (c1-1 / charge-05
                                                                        :ARG2 (c1-12 / murder-01))))))
      :snt3 (c1-13 / cause-01
                   :ARG0 (c1-15 / amr-unknown)))

# ::snt This action must bring into the light, that the cops are 'away' with power! Shakel them, under a bench of Judges and Academics
# ::tokens ["This", "action", "must", "bring", "into", "the", "light", ",", "that", "the", "cops", "are", "'", "away", "'", "with", "power", "!", "Shakel", "them", ",", "under", "a", "bench", "of", "Judges", "and", "Academics"]
# ::lemmas ["this", "action", "must", "bring", "into", "the", "light", ",", "that", "the", "cop", "be", "'", "away", "'", "with", "power", "!", "shakel", "they", ",", "under", "a", "bench", "of", "Judges", "and", "Academics"]
(c2-2 / multi-sentence
      :snt1 (c2-5 / obligate-01
                  :ARG1 (c2-16 / act-02
                               :mod (c2-14 / this))
                  :ARG2 (c2-12 / shed-light-10
                               :ARG0 c2-16
                               :ARG1 (c2-4 / be-located-at-91
                                           :ARG1 (c2-10 / cop)
                                           :ARG2 (c2-7 / away)
                                           :prep-with (c2-9 / power))))
      :snt2 (c2-6 / shake-01
                  :ARG0 (c2-1 / you)
                  :ARG1 c2-10
                  :prep-under (c2-11 / bench
                                     :consist-of (c2-8 / and
                                                       :op1 (c2-15 / person
                                                                   :ARG0-of (c2-0 / judge-01))
                                                       :op2 (c2-3 / person
                                                                  :mod (c2-13 / Academics))))
                  :mode imperative))

# ::snt Best thing I've read the past hours. Holy Jesus.
# ::tokens ["Best", "thing", "I", "'ve", "read", "the", "past", "hours", ".", "Holy", "Jesus", "."]
# ::lemmas ["good", "thing", "i", "'ve", "read", "the", "past", "hours", ".", "Holy", "Jesus", "."]
(c3-2 / multi-sentence
      :snt1 (c3-10 / good-02
                   :ARG1 (c3-13 / thing
                                :ARG1-of (c3-8 / read-01
                                               :ARG0 (c3-4 / i)
                                               :time (c3-3 / before
                                                           :op1 (c3-5 / now)
                                                           :duration (c3-7 / multiple
                                                                           :op1 (c3-12 / temporal-quantity
                                                                                       :unit (c3-0 / hour)
                                                                                       :quant 1)))))
                   :ARG2-of (c3-14 / have-degree-91
                                   :ARG1 c3-13
                                   :ARG3 (c3-1 / most)))
      :snt2 (c3-9 / person
                  :name (c3-6 / name
                              :op1 "Jesus")
                  :mod (c3-11 / holy)
                  :mode expressive))

# ::snt not really!..some pot Head hippy across the street will think this jerk is a cool Dude...
# ::tokens ["not", "really!", "..", "some", "pot", "Head", "hippy", "across", "the", "street", "will", "think", "this", "jerk", "is", "a", "cool", "Dude", "..."]
# ::lemmas ["not", "really!", "..", "some", "pot", "Head", "hippy", "across", "the", "street", "will", "think", "this", "jerk", "be", "a", "cool", "dude", "..."]
(c4-2 / multi-sentence
      :snt1 (c4-5 / real-04
                  :polarity -)
      :snt2 (c4-10 / think-01
                   :ARG0 (c4-0 / hippy
                               :mod (c4-4 / pothead)
                               :quant (c4-9 / some)
                               :location (c4-11 / across
                                                :op1 (c4-3 / street)))
                   :ARG1 (c4-6 / dude
                               :ARG1-of (c4-7 / cool-04)
                               :domain (c4-1 / jerk
                                             :mod (c4-8 / this)))))

# ::snt Police confirm has ended -
# ::tokens ["Police", "confirm", "has", "ended", "-"]
# ::lemmas ["police", "confirm", "have", "end", "-"]
(c5-2 / confirm-01
      :ARG0 (c5-1 / police)
      :ARG1 (c5-0 / end-01))

# ::snt Now let's have the truth..! Why was this guy let on the loose...? A copper 'Patsy' going some where 'to happen'...?
# ::tokens ["Now", "let", "'s", "have", "the", "truth", "..", "!", "Why", "was", "this", "guy", "let", "on", "the", "loose", "...", "?", "A", "copper", "'", "Patsy", "'", "going", "some", "where", "'", "to", "happen", "'", "...", "?"]
# ::lemmas ["now", "let", "us", "have", "the", "truth", "..", "!", "why", "be", "this", "guy", "let", "on", "the", "loose", "...", "?", "a", "copper", "'", "Patsy", "'", "go", "some", "where", "'", "to", "happen", "'", "...", "?"]
(c6-3 / multi-sentence
      :snt1 (c6-0 / have-03
                  :ARG0 (c6-1 / we)
                  :ARG1 (c6-14 / truth)
                  :time (c6-5 / now)
                  :mode imperative)
      :snt2 (c6-8 / cause-01
                  :ARG0 (c6-15 / amr-unknown)
                  :ARG1 (c6-2 / let-01
                              :ARG1 (c6-11 / loose-03
                                           :ARG1 (c6-9 / guy
                                                       :mod (c6-13 / this)))))
      :snt3 (c6-7 / go-02
                  :ARG0 (c6-6 / pussy
                              :mod (c6-10 / copper))
                  :ARG4 (c6-12 / some
                               :location-of (c6-4 / event))))

# ::snt OH THANK GOD RT : Police confirm has ended -
# ::tokens ["OH", "THANK", "GOD", "RT", ":", "Police", "confirm", "has", "ended", "-"]
# ::lemmas ["oh", "thank", "GOD", "rt", ":", "police", "confirm", "have", "end", "-"]
(c7-7 / and
      :op1 (c7-6 / thank-01
                 :ARG0 (c7-2 / i)
                 :ARG1 (c7-5 / god)
                 :mod (c7-0 / oh))
      :op2 (c7-4 / confirm-01
                 :ARG0 (c7-3 / police)
                 :ARG1 (c7-1 / end-01)))

# ::snt Syukurlah : Police confirm Sydney siege has ended -
# ::tokens ["Syukurlah", ":", "Police", "confirm", "Sydney", "siege", "has", "ended", "-"]
# ::lemmas ["Syukurlah", ":", "police", "confirm", "Sydney", "siege", "have", "end", "-"]
(c8-7 / say-01
      :ARG0 (c8-4 / person
                  :name (c8-2 / name
                              :op1 "Syukurlah"))
      :ARG1 (c8-6 / confirm-01
                  :ARG0 (c8-8 / police)
                  :ARG1 (c8-0 / end-01
                              :ARG1 (c8-1 / standoff
                                          :location (c8-5 / city
                                                          :name (c8-3 / name
                                                                      :op1 "Sydney"))))))

# ::snt : Police confirm Sydney siege has ended - so glad it's over, thinking of my Aus friends!
# ::tokens [":", "Police", "confirm", "Sydney", "siege", "has", "ended", "-", "so", "glad", "it", "'s", "over", ",", "thinking", "of", "my", "Aus", "friends", "!"]
# ::lemmas [":", "police", "confirm", "Sydney", "siege", "have", "end", "-", "so", "glad", "it", "be", "over", ",", "think", "of", "my", "Aus", "friend", "!"]
(c9-2 / multi-sentence
      :snt1 (c9-10 / confirm-01
                   :ARG0 (c9-8 / police)
                   :ARG1 (c9-4 / end-01
                               :ARG1 (c9-14 / standoff
                                            :location (c9-9 / city
                                                            :name (c9-6 / name
                                                                        :op1 "Sydney")))))
      :snt2 (c9-11 / glad-02
                   :ARG0 (c9-3 / over-01
                               :ARG1 (c9-5 / it))
                   :ARG1 (c9-12 / i)
                   :ARG1-of (c9-13 / cause-01
                                   :ARG0 (c9-15 / think-01
                                                :ARG0 c9-12
                                                :ARG1 (c9-16 / person
                                                             :mod (c9-17 / country
                                                                         :name (c9-7 / name
                                                                                     :op1 "Australia"))
                                                             :ARG0-of (c9-0 / have-rel-role-91
                                                                            :ARG1 c9-12
                                                                            :ARG2 (c9-1 / friend)))))))

# ::snt : Police confirm Sydney siege has ended -
# ::tokens [":", "Police", "confirm", "Sydney", "siege", "has", "ended", "-"]
# ::lemmas [":", "police", "confirm", "Sydney", "siege", "have", "end", "-"]
(c10-4 / confirm-01
       :ARG0 (c10-2 / police)
       :ARG1 (c10-0 / end-01
                    :ARG1 (c10-5 / standoff
                                 :location (c10-3 / city
                                                  :name (c10-1 / name
                                                               :op1 "Sydney")))))

# ::snt Aussie's have the same violence thrown at them by people they've takin in,welcome to our world !
# ::tokens ["Aussie", "'s", "have", "the", "same", "violence", "thrown", "at", "them", "by", "people", "they", "'ve", "takin", "in", ",", "welcome", "to", "our", "world", "!"]
# ::lemmas ["Aussie", "'s", "have", "the", "same", "violence", "throw", "at", "they", "by", "people", "they", "'ve", "takin", "in", ",", "welcome", "to", "our", "world", "!"]
(c11-0 / welcome-01
       :ARG1 (c11-5 / person
                    :mod (c11-7 / country
                                :name (c11-3 / name
                                             :op1 "Australia")))
       :ARG2 (c11-2 / world
                    :poss (c11-1 / we))
       :ARG1-of (c11-6 / cause-01
                       :ARG0 (c11-10 / throw-01
                                     :ARG0 (c11-11 / person
                                                   :ARG1-of (c11-8 / take-01
                                                                   :ARG0 c11-5))
                                     :ARG1 (c11-4 / violence
                                                  :ARG1-of (c11-9 / same-01))
                                     :ARG2 c11-5))
       :mode expressive)

# ::snt Cops must be instructed as 'screws' are, "Do as your told, officer, we will do the thinking &amp; investigation", The DAs..!
# ::tokens ["Cops", "must", "be", "instructed", "as", "'", "screws", "'", "are", ",", "\"", "Do", "as", "your", "told", ",", "officer", ",", "we", "will", "do", "the", "thinking", "&", "amp", ";", "investigation", "\"", ",", "The", "DAs", "..", "!"]
# ::lemmas ["cop", "must", "be", "instruct", "as", "'", "screw", "'", "be", ",", "\"", "do", "as", "your", "told", ",", "officer", ",", "we", "will", "do", "the", "thinking", "&", "amp", ";", "investigation", "\"", ",", "the", "da", "..", "!"]
(c12-4 / obligate-01
       :ARG1 (c12-7 / person
                    :ARG0-of (c12-0 / have-org-role-91
                                    :ARG2 (c12-3 / officer)))
       :ARG2 (c12-6 / instruct-01
                    :ARG1 c12-7
                    :ARG2 (c12-11 / screw-00
                                  :ARG1 (c12-8 / do-02
                                               :ARG0 (c12-1 / we)
                                               :ARG1 (c12-13 / and
                                                             :op1 (c12-12 / think-01
                                                                          :ARG0 c12-1)
                                                             :op2 (c12-5 / amp)
                                                             :op3 (c12-9 / investigate-01
                                                                         :ARG0 c12-1))
                                               :ARG1-of (c12-10 / tell-01
                                                                :ARG2 (c12-2 / you))))))
