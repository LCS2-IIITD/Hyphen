# ::snt that's awesome!
# ::tokens ["that", "'s", "awesome", "!"]
# ::lemmas ["that", "be", "awesome", "!"]
(c1-1 / awesome-02
      :ARG0 (c1-0 / that))

# ::snt sometimes it's hard to see that the world is full of good people when the arseholes are so damn loud
# ::tokens ["sometimes", "it", "'s", "hard", "to", "see", "that", "the", "world", "is", "full", "of", "good", "people", "when", "the", "arseholes", "are", "so", "damn", "loud"]
# ::lemmas ["sometimes", "it", "be", "hard", "to", "see", "that", "the", "world", "be", "full", "of", "good", "people", "when", "the", "arsehole", "be", "so", "damn", "loud"]
(c2-0 / hard-02
      :ARG1 (c2-9 / see-01
                  :ARG1 (c2-2 / fill-01
                              :ARG1 (c2-1 / world)
                              :ARG2 (c2-6 / person
                                          :ARG1-of (c2-8 / good-02))))
      :frequency (c2-5 / sometimes)
      :time (c2-3 / loud
                  :domain (c2-10 / asshole)
                  :degree (c2-7 / damn
                                :degree (c2-4 / so))))

# ::snt good on ya mate!
# ::tokens ["good", "on", "ya", "mate", "!"]
# ::lemmas ["good", "on", "ya", "mate", "!"]
(c3-0 / say-01
      :ARG0 (c3-3 / i)
      :ARG1 (c3-2 / good-02
                  :ARG2 (c3-1 / mate
                              :ARG2-of c3-0)
                  :mode expressive))

# ::snt I figure the truly good people don't need to barge in and announce themselves - they just show up and quietly do their stuff.
# ::tokens ["I", "figure", "the", "truly", "good", "people", "do", "n't", "need", "to", "barge", "in", "and", "announce", "themselves", "-", "they", "just", "show", "up", "and", "quietly", "do", "their", "stuff", "."]
# ::lemmas ["i", "figure", "the", "truly", "good", "people", "do", "not", "need", "to", "barge", "in", "and", "announce", "themselves", "-", "they", "just", "show", "up", "and", "quietly", "do", "their", "stuff", "."]
(c4-1 / figure-01
      :ARG0 (c4-7 / i)
      :ARG1 (c4-8 / need-01
                  :ARG0 (c4-10 / person
                               :ARG1-of (c4-12 / good-02
                                               :degree (c4-14 / truly)))
                  :ARG1 (c4-15 / and
                               :op1 (c4-3 / barge-01
                                          :ARG0 c4-10)
                               :op2 (c4-6 / announce-01
                                          :ARG0 c4-10
                                          :ARG1 c4-10))
                  :ARG1-of (c4-2 / mean-01
                                 :ARG2 (c4-9 / and
                                             :op1 (c4-13 / show-up-02
                                                         :ARG1 c4-10
                                                         :mod (c4-0 / just))
                                             :op2 (c4-11 / do-02
                                                         :ARG0 c4-10
                                                         :ARG1 (c4-4 / stuff
                                                                     :poss c4-10)
                                                         :ARG1-of (c4-5 / quiet-04))))
                  :polarity -))

# ::snt beautiful!
# ::tokens ["beautiful", "!"]
# ::lemmas ["beautiful", "!"]
(c5-0 / beautiful-02
      :mode expressive)

# ::snt You should get your train driver colleagues to announce in the trains tomorrow
# ::tokens ["You", "should", "get", "your", "train", "driver", "colleagues", "to", "announce", "in", "the", "trains", "tomorrow"]
# ::lemmas ["you", "should", "get", "your", "train", "driver", "colleague", "to", "announce", "in", "the", "train", "tomorrow"]
(c6-3 / recommend-01
      :ARG1 (c6-5 / get-04
                  :ARG0 (c6-1 / you)
                  :ARG1 (c6-9 / announce-01
                              :ARG0 (c6-2 / person
                                          :ARG0-of (c6-0 / have-rel-role-91
                                                         :ARG1 c6-1
                                                         :ARG2 (c6-4 / colleague))
                                          :ARG0-of (c6-6 / drive-01
                                                         :ARG1 (c6-8 / train
                                                                     :location-of c6-9)))
                              :time (c6-7 / tomorrow)))
      :ARG2 c6-1)

# ::snt lovely
# ::tokens ["lovely"]
# ::lemmas ["lovely"]
(c7-0 / love-01)

# ::snt You're what's known in these parts as a top bloke
# ::tokens ["You", "'re", "what", "'s", "known", "in", "these", "parts", "as", "a", "top", "bloke"]
# ::lemmas ["you", "be", "what", "be", "know", "in", "these", "part", "as", "a", "top", "bloke"]
(c8-1 / bloke
      :mod (c8-5 / top)
      :domain (c8-0 / you)
      :ARG1-of (c8-2 / know-02
                     :location (c8-3 / part
                                     :mod (c8-4 / this))))
