# ::snt They should have summarily executed him and buried him with pigs.
# ::tokens ["They", "should", "have", "summarily", "executed", "him", "and", "buried", "him", "with", "pigs", "."]
# ::lemmas ["they", "should", "have", "summarily", "execute", "he", "and", "bury", "he", "with", "pig", "."]
(c1-4 / recommend-01
      :ARG1 (c1-7 / and
                  :op1 (c1-2 / execute-01
                             :ARG0 (c1-6 / they)
                             :ARG1 (c1-0 / he)
                             :manner (c1-5 / summary))
                  :op2 (c1-1 / bury-01
                             :ARG0 c1-6
                             :ARG1 c1-0
                             :ARG2 (c1-3 / pig))))

# ::snt And yet our own administration wants to apologize for our interrogation 'tactics' against these animals. is spineless.
# ::tokens ["And", "yet", "our", "own", "administration", "wants", "to", "apologize", "for", "our", "interrogation", "'", "tactics", "'", "against", "these", "animals", ".", "is", "spineless", "."]
# ::lemmas ["and", "yet", "our", "own", "administration", "want", "to", "apologize", "for", "our", "interrogation", "'", "tactic", "'", "against", "these", "animal", ".", "be", "spineless", "."]
(c2-11 / and
       :op2 (c2-0 / have-concession-91
                  :ARG1 (c2-1 / want-01
                              :ARG0 (c2-6 / government-organization
                                          :ARG0-of (c2-2 / administrate-01)
                                          :poss (c2-4 / we))
                              :ARG1 (c2-5 / apologize-01
                                          :ARG0 c2-6
                                          :ARG1 (c2-10 / tactic
                                                       :instrument-of (c2-3 / interrogate-01)
                                                       :prep-against (c2-9 / animal
                                                                           :mod (c2-7 / this))
                                                       :poss c2-4)))
                  :ARG2 (c2-8 / spineless)))

# ::snt That means the police did it wrongThey aren't supposed to storm in like they did.They have to get the guy out of the building.
# ::tokens ["That", "means", "the", "police", "did", "it", "wrongThey", "are", "n't", "supposed", "to", "storm", "in", "like", "they", "did", ".", "They", "have", "to", "get", "the", "guy", "out", "of", "the", "building", "."]
# ::lemmas ["that", "mean", "the", "police", "do", "it", "wrongthey", "be", "not", "suppose", "to", "storm", "in", "like", "they", "do", ".", "they", "have", "to", "get", "the", "guy", "out", "of", "the", "building", "."]
(c3-2 / multi-sentence
      :snt1 (c3-9 / mean-01
                  :ARG1 (c3-17 / that)
                  :ARG2 (c3-10 / do-02
                               :ARG0 (c3-8 / police)
                               :ARG1 (c3-7 / it)
                               :ARG2-of (c3-0 / wrong-04
                                              :ARG1 c3-8)))
      :snt2 (c3-14 / suppose-02
                   :ARG1 (c3-6 / storm-01
                               :ARG0 c3-8
                               :direction (c3-11 / inside)
                               :ARG1-of (c3-12 / resemble-01
                                               :ARG2 (c3-1 / storm-01
                                                           :ARG0 c3-8)))
                   :polarity -)
      :snt3 (c3-5 / obligate-01
                  :ARG1 (c3-13 / they)
                  :ARG2 (c3-15 / get-05
                               :ARG0 c3-13
                               :ARG1 (c3-16 / guy)
                               :ARG2 (c3-3 / out-06
                                           :ARG1 c3-16
                                           :ARG2 (c3-4 / building)))))

# ::snt they just announced it is over!
# ::tokens ["they", "just", "announced", "it", "is", "over", "!"]
# ::lemmas ["they", "just", "announce", "it", "be", "over", "!"]
(c4-4 / announce-01
      :ARG0 (c4-3 / they)
      :ARG1 (c4-1 / over-01
                  :ARG1 (c4-2 / it))
      :time (c4-0 / just))

# ::snt Need responsible journaling. Found out from your tweet &amp; CNN about victims. Our local news reported all hostages walked free!
# ::tokens ["Need", "responsible", "journaling", ".", "Found", "out", "from", "your", "tweet", "&", "amp", ";", "CNN", "about", "victims", ".", "Our", "local", "news", "reported", "all", "hostages", "walked", "free", "!"]
# ::lemmas ["need", "responsible", "journale", ".", "find", "out", "from", "your", "tweet", "&", "amp", ";", "CNN", "about", "victim", ".", "our", "local", "news", "report", "all", "hostage", "walk", "free", "!"]
(c5-1 / multi-sentence
      :snt1 (c5-13 / need-01
                   :ARG1 (c5-0 / journal-01
                               :ARG1-of (c5-14 / responsible-02)))
      :snt2 (c5-11 / find-out-03
                   :ARG1 (c5-4 / victim)
                   :ARG2 (c5-9 / and
                               :op1 (c5-5 / publication
                                          :name (c5-18 / name
                                                       :op1 "Twitter"))
                               :op2 (c5-8 / publication
                                          :name (c5-3 / name
                                                      :op1 "CNN"))))
      :snt3 (c5-2 / report-01
                  :ARG0 (c5-6 / news
                              :ARG1-of (c5-12 / local-02)
                              :poss (c5-15 / we))
                  :ARG1 (c5-7 / walk-01
                              :ARG0 (c5-10 / hostage
                                           :mod (c5-16 / all))
                              :ARG2 (c5-17 / free-04
                                           :ARG1 c5-10))))

# ::snt Heavenly Father, please Heal the wounded Sidney Siege hostages.
# ::tokens ["Heavenly", "Father", ",", "please", "Heal", "the", "wounded", "Sidney", "Siege", "hostages", "."]
# ::lemmas ["Heavenly", "Father", ",", "please", "heal", "the", "wound", "Sidney", "Siege", "hostage", "."]
(c6-8 / say-01
      :ARG1 (c6-0 / heal-01
                  :ARG0 (c6-7 / person
                              :ARG0-of (c6-9 / have-rel-role-91
                                             :ARG2 (c6-2 / father
                                                         :mod (c6-6 / heaven))))
                  :ARG1 (c6-3 / hostage
                              :ARG1-of (c6-1 / wound-01)
                              :mod (c6-4 / incident
                                         :name (c6-5 / name
                                                     :op1 "Sidney"
                                                     :op2 "Siege")))
                  :mode imperative
                  :polite +)
      :ARG2 c6-7)

# ::snt Pray they come home safe and alive.
# ::tokens ["Pray", "they", "come", "home", "safe", "and", "alive", "."]
# ::lemmas ["pray", "they", "come", "home", "safe", "and", "alive", "."]
(c7-3 / pray-01
      :ARG0 (c7-1 / you)
      :ARG1 (c7-4 / come-01
                  :ARG1 (c7-6 / they)
                  :ARG4 (c7-0 / home)
                  :manner (c7-7 / and
                                :op1 (c7-5 / safe-01
                                           :ARG1 c7-6)
                                :op2 (c7-2 / live-01
                                           :ARG0 c7-6))))
