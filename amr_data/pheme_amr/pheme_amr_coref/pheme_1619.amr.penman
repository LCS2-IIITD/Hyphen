# ::snt that's not banksy.
# ::tokens ["that", "'s", "not", "banksy", "."]
# ::lemmas ["that", "be", "not", "banksy", "."]
(c1-1 / banky
      :domain (c1-0 / that)
      :polarity -)

# ::snt it's
# ::tokens ["it", "'s"]
# ::lemmas ["it", "be"]
(c2-0 / it)

# ::snt found out original was by Lucille Clerc
# ::tokens ["found", "out", "original", "was", "by", "Lucille", "Clerc"]
# ::lemmas ["find", "out", "original", "be", "by", "Lucille", "Clerc"]
(c3-3 / publication-91
      :ARG0 (c3-5 / person
                  :name (c3-2 / name
                              :op1 "Lucille"
                              :op2 "Clerc"))
      :ARG1 (c3-4 / thing
                  :mod (c3-1 / original)
                  :ARG1-of (c3-0 / find-out-03)))

# ::snt Banksy doesn't run that Instagram.
# ::tokens ["Banksy", "does", "n't", "run", "that", "Instagram", "."]
# ::lemmas ["Banksy", "do", "not", "run", "that", "Instagram", "."]
(c4-3 / run-01
      :ARG0 (c4-2 / person
                  :name (c4-0 / name
                              :op1 "Banksy"))
      :ARG1 (c4-5 / publication
                  :name (c4-1 / name
                              :op1 "Instagram")
                  :mod (c4-4 / that))
      :polarity -)

# ::snt Love it even if not Banksy. ": 's response to Hebdo murders
# ::tokens ["Love", "it", "even", "if", "not", "Banksy", ".", "\"", ":", "'s", "response", "to", "Hebdo", "murders"]
# ::lemmas ["love", "it", "even", "if", "not", "Banksy", ".", "\"", ":", "be", "response", "to", "Hebdo", "murder"]
(c5-0 / love-01
      :ARG1 (c5-6 / respond-01
                  :ARG0 (c5-5 / person
                              :name (c5-3 / name
                                          :op1 "Banksy"))
                  :ARG1 (c5-1 / murder-01
                              :ARG0 (c5-7 / magazine
                                          :name (c5-4 / name
                                                      :op1 " Hebdo"))))
      :concession (c5-2 / even-if
                        :op1 c5-5))
