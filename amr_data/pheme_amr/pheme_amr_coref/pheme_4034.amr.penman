# ::snt I know, I'm so sick of this fake CNN news.. The world is waking up!
# ::tokens ["I", "know", ",", "I", "'m", "so", "sick", "of", "this", "fake", "CNN", "news", "..", "The", "world", "is", "waking", "up", "!"]
# ::lemmas ["i", "know", ",", "i", "be", "so", "sick", "of", "this", "fake", "CNN", "news", "..", "the", "world", "be", "wake", "up", "!"]
(c1-2 / multi-sentence
      :snt1 (c1-11 / know-01
                   :ARG0 (c1-4 / i))
      :snt2 (c1-9 / sick-04
                  :ARG0 (c1-6 / news
                              :ARG1-of (c1-1 / fake-02)
                              :source (c1-8 / publication
                                            :name (c1-7 / name
                                                        :op1 "CNN"))
                              :mod (c1-10 / this))
                  :ARG1 c1-4
                  :degree (c1-3 / so))
      :snt3 (c1-0 / wake-up-02
                  :ARG1 (c1-5 / world)
                  :mode expressive))

# ::snt hoax?
# ::tokens ["hoax", "?"]
# ::lemmas ["hoax", "?"]
(c2-0 / hoax-01
      :polarity (c2-1 / amr-unknown))

# ::snt --ABSOLUTELY a haoax--see proof here -
# ::tokens ["--ABSOLUTELY", "a", "haoax", "--", "see", "proof", "here", "-"]
# ::lemmas ["--absolutely", "a", "haoax", "--", "see", "proof", "here", "-"]
(c3-3 / multi-sentence
      :snt1 (c3-0 / haoax
                  :mod (c3-7 / absolute))
      :snt2 (c3-5 / see-01
                  :ARG0 (c3-1 / you)
                  :ARG1 (c3-6 / thing
                              :ARG0-of (c3-4 / prove-01))
                  :location (c3-2 / here)
                  :mode imperative))

# ::snt hoax!
# ::tokens ["hoax", "!"]
# ::lemmas ["hoax", "!"]
(c4-0 / hoax-01)

# ::snt one of the brothers was in prison for terrorism in . And he's not there still why?
# ::tokens ["one", "of", "the", "brothers", "was", "in", "prison", "for", "terrorism", "in", ".", "And", "he", "'s", "not", "there", "still", "why", "?"]
# ::lemmas ["one", "of", "the", "brother", "be", "in", "prison", "for", "terrorism", "in", ".", "and", "he", "be", "not", "there", "still", "why", "?"]
(c5-2 / multi-sentence
      :snt1 (c5-6 / imprison-01
                  :ARG1 (c5-7 / person
                              :ARG1-of (c5-9 / include-91
                                             :ARG2 (c5-13 / person
                                                          :ARG0-of (c5-0 / have-rel-role-91
                                                                         :ARG2 (c5-4 / brother))))
                              :quant 1)
                  :ARG3 (c5-12 / terrorism)
                  :location (c5-3 / prison))
      :snt2 (c5-14 / and
                   :op2 (c5-8 / be-located-at-91
                              :ARG1 (c5-1 / he)
                              :ARG2 c5-3
                              :mod (c5-11 / still)
                              :ARG1-of (c5-10 / cause-01
                                              :ARG0 (c5-5 / amr-unknown))
                              :polarity -)))

# ::snt - Grand Theft Auto V Prank
# ::tokens ["-", "Grand", "Theft", "Auto", "V", "Prank"]
# ::lemmas ["-", "Grand", "Theft", "Auto", "v", "Prank"]
(c6-1 / thing
      :name (c6-0 / name
                  :op1 "Grand"
                  :op2 "Grand"
                  :op3 "Trip"
                  :op4 "Auto"
                  :op5 "V"
                  :op6 "Prank"))

# ::snt Your tweet makes my page better
# ::tokens ["Your", "tweet", "makes", "my", "page", "better"]
# ::lemmas ["your", "tweet", "make", "my", "page", "well"]
(c7-2 / make-02
      :ARG0 (c7-7 / tweet-02
                  :ARG0 (c7-1 / you))
      :ARG1 (c7-4 / page
                  :poss (c7-3 / i)
                  :ARG1-of (c7-0 / have-degree-91
                                 :ARG2 (c7-6 / good-02
                                             :ARG1 c7-4)
                                 :ARG3 (c7-5 / more))))

# ::snt :no what? Not clicking a link you suggest. What's a hoax?
# ::tokens [":", "no", "what", "?", "Not", "clicking", "a", "link", "you", "suggest", ".", "What", "'s", "a", "hoax", "?"]
# ::lemmas [":", "no", "what", "?", "not", "click", "a", "link", "you", "suggest", ".", "what", "be", "a", "hoax", "?"]
(c8-3 / multi-sentence
      :snt1 (c8-4 / no)
      :snt2 (c8-5 / click-01
                  :ARG1 (c8-2 / link
                              :ARG1-of (c8-6 / suggest-01
                                             :ARG0 (c8-1 / you)))
                  :polarity -)
      :snt3 (c8-0 / hoax-01
                  :ARG2 (c8-7 / amr-unknown)))

# ::snt one of the brothers was in prison for terrorism in . And he's not there still why?
# ::tokens ["one", "of", "the", "brothers", "was", "in", "prison", "for", "terrorism", "in", ".", "And", "he", "'s", "not", "there", "still", "why", "?"]
# ::lemmas ["one", "of", "the", "brother", "be", "in", "prison", "for", "terrorism", "in", ".", "and", "he", "be", "not", "there", "still", "why", "?"]
(c9-2 / multi-sentence
      :snt1 (c9-6 / imprison-01
                  :ARG1 (c9-7 / person
                              :ARG1-of (c9-9 / include-91
                                             :ARG2 (c9-13 / person
                                                          :ARG0-of (c9-0 / have-rel-role-91
                                                                         :ARG2 (c9-4 / brother))))
                              :quant 1)
                  :ARG3 (c9-12 / terrorism)
                  :location (c9-3 / prison))
      :snt2 (c9-14 / and
                   :op2 (c9-8 / be-located-at-91
                              :ARG1 (c9-1 / he)
                              :ARG2 c9-3
                              :mod (c9-11 / still)
                              :ARG1-of (c9-10 / cause-01
                                              :ARG0 (c9-5 / amr-unknown))
                              :polarity -)))

# ::snt When captured, perps will hire same Lawyer as for Treyvon &amp; Brown families. Jack Ruby will finally tell all-- HOAX!
# ::tokens ["When", "captured", ",", "perps", "will", "hire", "same", "Lawyer", "as", "for", "Treyvon", "&", "amp", ";", "Brown", "families", ".", "Jack", "Ruby", "will", "finally", "tell", "all--", "HOAX", "!"]
# ::lemmas ["when", "capture", ",", "perp", "will", "hire", "same", "Lawyer", "as", "for", "Treyvon", "&", "amp", ";", "Brown", "family", ".", "Jack", "Ruby", "will", "finally", "tell", "all--", "HOAX", "!"]
(c10-0 / multi-sentence
       :snt1 (c10-7 / hire-01
                    :ARG0 (c10-3 / perp)
                    :ARG1 (c10-8 / lawyer
                                 :ARG1-of (c10-4 / same-01
                                                 :ARG2 (c10-19 / lawyer
                                                               :beneficiary (c10-6 / and
                                                                                   :op1 (c10-5 / person
                                                                                               :name (c10-12 / name
                                                                                                             :op1 "Treyvon"))
                                                                                   :op2 (c10-10 / person
                                                                                                :name (c10-17 / name
                                                                                                              :op1 "amp"))
                                                                                   :op3 (c10-9 / family
                                                                                               :poss (c10-13 / person
                                                                                                             :name (c10-1 / name
                                                                                                                          :op1 "Brown")))))))
                    :time (c10-18 / capture-01
                                  :ARG1 c10-3))
       :snt2 (c10-20 / tell-01
                     :ARG0 (c10-11 / person
                                   :name (c10-2 / name
                                                :op1 "Jack"
                                                :op2 "RRuby"))
                     :ARG1 (c10-14 / all)
                     :mod (c10-15 / organization
                                  :name (c10-21 / name
                                                :op1 "HOAX"))
                     :mod (c10-16 / final)))
