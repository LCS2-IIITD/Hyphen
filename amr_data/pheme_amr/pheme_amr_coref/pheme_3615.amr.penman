# ::snt I did subsequently tweet to that effect.
# ::tokens ["I", "did", "subsequently", "tweet", "to", "that", "effect", "."]
# ::lemmas ["i", "do", "subsequently", "tweet", "to", "that", "effect", "."]
(c1-3 / tweet-01
      :ARG0 (c1-0 / i)
      :time (c1-2 / subsequent)
      :ARG2-of (c1-4 / affect-01
                     :ARG1 (c1-1 / that)))

# ::snt Unfortunately not all safe
# ::tokens ["Unfortunately", "not", "all", "safe"]
# ::lemmas ["unfortunately", "not", "all", "safe"]
(c2-0 / safe-01
      :ARG1 (c2-1 / person
                  :mod (c2-3 / all))
      :ARG2-of (c2-2 / fortunate-01
                     :polarity -)
      :polarity -)

# ::snt Was it my tweet that drew your attention to this!
# ::tokens ["Was", "it", "my", "tweet", "that", "drew", "your", "attention", "to", "this", "!"]
# ::lemmas ["be", "it", "my", "tweet", "that", "draw", "your", "attention", "to", "this", "!"]
(c3-3 / draw-02
      :ARG0 (c3-5 / tweet-01
                  :ARG0 (c3-2 / i))
      :ARG1 (c3-6 / attend-02
                  :ARG0 (c3-0 / you)
                  :ARG1 (c3-4 / this))
      :polarity (c3-1 / amr-unknown))

# ::snt Well done Paris, well done France! Hopefully France media will learn from this case!
# ::tokens ["Well", "done", "Paris", ",", "well", "done", "France", "!", "Hopefully", "France", "media", "will", "learn", "from", "this", "case", "!"]
# ::lemmas ["well", "do", "Paris", ",", "well", "do", "France", "!", "hopefully", "France", "medium", "will", "learn", "from", "this", "case", "!"]
(c4-3 / multi-sentence
      :snt1 (c4-12 / say-01
                   :ARG0 (c4-4 / i)
                   :ARG1 (c4-8 / do-02
                               :ARG0 (c4-9 / city
                                           :name (c4-5 / name
                                                       :op1 "Paris"))
                               :ARG1-of (c4-1 / well-09))
                   :ARG2 c4-9)
      :snt2 (c4-0 / hope-01
                  :ARG0 c4-4
                  :ARG1 (c4-2 / learn-01
                              :ARG0 (c4-7 / media
                                          :mod (c4-10 / country
                                                      :name (c4-6 / name
                                                                  :op1 "France")))
                              :ARG2 (c4-11 / case-03
                                           :mod (c4-13 / this)))))

# ::snt Viva LA liberte
# ::tokens ["Viva", "LA", "liberte"]
# ::lemmas ["Viva", "LA", "liberte"]
(c5-2 / liberte
      :mod (c5-1 / viva
                 :mode expressive)
      :location (c5-3 / city
                      :name (c5-0 / name
                                  :op1 "Los"
                                  :op2 "Angeles")))

# ::snt brilliant!
# ::tokens ["brilliant", "!"]
# ::lemmas ["brilliant", "!"]
(c6-0 / brilliant-01)

# ::snt Well done French Police. Hopefully these scum will go straight to hell. Je Sui Charlie
# ::tokens ["Well", "done", "French", "Police", ".", "Hopefully", "these", "scum", "will", "go", "straight", "to", "hell", ".", "Je", "Sui", "Charlie"]
# ::lemmas ["well", "do", "French", "Police", ".", "hopefully", "these", "scum", "will", "go", "straight", "to", "hell", ".", "Je", "Sui", "Charlie"]
(c7-2 / multi-sentence
      :snt1 (c7-7 / do-02
                  :ARG0 (c7-6 / police
                              :mod (c7-8 / country
                                         :name (c7-4 / name
                                                     :op1 "France")))
                  :ARG1-of (c7-1 / well-09))
      :snt2 (c7-0 / hope-01
                  :ARG1 (c7-9 / go-02
                              :ARG0 (c7-10 / scum
                                           :mod (c7-11 / this))
                              :ARG4 (c7-13 / hell)
                              :ARG1-of (c7-3 / straight-04)))
      :snt3 (c7-12 / person
                   :name (c7-5 / name
                               :op1 "Je"
                               :op2 "Sui"
                               :op3 "Charlie")))

# ::snt Relieved for the hostages and delighted all of these murderers are now off our planet !!
# ::tokens ["Relieved", "for", "the", "hostages", "and", "delighted", "all", "of", "these", "murderers", "are", "now", "off", "our", "planet", "!", "!"]
# ::lemmas ["relieve", "for", "the", "hostage", "and", "delight", "all", "of", "these", "murderer", "be", "now", "off", "our", "planet", "!", "!"]
(c8-12 / and
       :op1 (c8-8 / relieve-01
                  :ARG0 (c8-0 / hostage))
       :op2 (c8-9 / delight-01
                  :ARG0 (c8-3 / be-located-at-91
                              :ARG1 (c8-7 / person
                                          :ARG0-of (c8-2 / murder-01)
                                          :mod (c8-10 / this)
                                          :mod (c8-5 / all))
                              :ARG2 (c8-4 / off
                                          :op1 (c8-11 / planet
                                                      :poss (c8-1 / we)))
                              :time (c8-6 / now))))

# ::snt Thank God &amp; the police
# ::tokens ["Thank", "God", "&", "amp", ";", "the", "police"]
# ::lemmas ["thank", "God", "&", "amp", ";", "the", "police"]
(c9-4 / thank-01
      :ARG1 (c9-6 / and
                  :op1 (c9-3 / person
                             :name (c9-1 / name
                                         :op1 "God"))
                  :op2 (c9-5 / person
                             :name (c9-2 / name
                                         :op1 "amp")))
      :ARG2 (c9-0 / police))

# ::snt Via : Hostages at kosher supermarket in Paris seen leaving site following police assault
# ::tokens ["Via", ":", "Hostages", "at", "kosher", "supermarket", "in", "Paris", "seen", "leaving", "site", "following", "police", "assault"]
# ::lemmas ["Via", ":", "hostage", "at", "kosher", "supermarket", "in", "Paris", "see", "leave", "site", "follow", "police", "assault"]
(c10-9 / source-01
       :ARG2 (c10-5 / see-01
                    :ARG1 (c10-0 / hostage
                                 :location (c10-1 / supermarket
                                                  :mod (c10-10 / kosher)
                                                  :location (c10-8 / city
                                                                   :name (c10-6 / name
                                                                                :op1 "Paris"))))
                    :ARG2 (c10-2 / leave-11
                                 :ARG0 c10-0
                                 :ARG1 (c10-4 / site)
                                 :ARG1-of (c10-3 / follow-01
                                                 :ARG2 (c10-11 / assault-01
                                                               :ARG0 (c10-7 / police)
                                                               :ARG1 c10-0)))))

# ::snt thank goodness. Job well done by French security forces.
# ::tokens ["thank", "goodness", ".", "Job", "well", "done", "by", "French", "security", "forces", "."]
# ::lemmas ["thank", "goodness", ".", "Job", "well", "do", "by", "French", "security", "force", "."]
(c11-3 / multi-sentence
       :snt1 (c11-9 / thank-01
                    :ARG1 (c11-7 / goodness))
       :snt2 (c11-5 / do-02
                    :ARG0 (c11-2 / force
                                 :mod (c11-8 / security)
                                 :mod (c11-6 / country
                                             :name (c11-4 / name
                                                          :op1 "France")))
                    :ARG1 (c11-0 / job
                                 :ARG1-of (c11-1 / well-09))))

# ::snt why say that the hostages were already dead then???
# ::tokens ["why", "say", "that", "the", "hostages", "were", "already", "dead", "then", "?", "?", "?"]
# ::lemmas ["why", "say", "that", "the", "hostage", "be", "already", "dead", "then", "?", "?", "?"]
(c12-3 / cause-01
       :ARG0 (c12-5 / amr-unknown)
       :ARG1 (c12-4 / say-01
                    :ARG1 (c12-2 / die-01
                                 :ARG1 (c12-0 / hostage)
                                 :time (c12-1 / already))))

# ::snt Fair play to the French police if they got the hostages out safe.
# ::tokens ["Fair", "play", "to", "the", "French", "police", "if", "they", "got", "the", "hostages", "out", "safe", "."]
# ::lemmas ["fair", "play", "to", "the", "French", "police", "if", "they", "get", "the", "hostage", "out", "safe", "."]
(c13-4 / play-01
       :ARG2 (c13-8 / police
                    :mod (c13-5 / country
                                :name (c13-3 / name
                                             :op1 "France")))
       :ARG1-of (c13-1 / fair-01)
       :condition (c13-6 / get-04
                         :ARG0 c13-8
                         :ARG1 (c13-0 / hostage
                                      :ARG1-of (c13-7 / safe-01))
                         :ARG2 (c13-2 / out)))

# ::snt agreed! But let's go one stop further and try to respect the individual regardless of their beliefs or heritage.
# ::tokens ["agreed", "!", "But", "let", "'s", "go", "one", "stop", "further", "and", "try", "to", "respect", "the", "individual", "regardless", "of", "their", "beliefs", "or", "heritage", "."]
# ::lemmas ["agree", "!", "but", "let", "us", "go", "one", "stop", "far", "and", "try", "to", "respect", "the", "individual", "regardless", "of", "their", "belief", "or", "heritage", "."]
(c14-3 / multi-sentence
       :snt1 (c14-15 / agree-01
                     :mode expressive)
       :snt2 (c14-11 / contrast-01
                     :ARG2 (c14-2 / let-01
                                  :ARG1 (c14-7 / and
                                               :op1 (c14-12 / go-02
                                                            :ARG0 (c14-1 / we)
                                                            :ARG1 (c14-13 / stop-01
                                                                          :ARG0 c14-1
                                                                          :degree (c14-4 / further)
                                                                          :quant 1))
                                               :op2 (c14-14 / try-01
                                                            :ARG0 c14-1
                                                            :ARG1 (c14-10 / respect-01
                                                                          :ARG0 c14-1
                                                                          :ARG1 (c14-8 / individual)
                                                                          :ARG1-of (c14-9 / regardless-91
                                                                                          :ARG2 (c14-6 / or
                                                                                                       :op1 (c14-5 / believe-01
                                                                                                                   :ARG0 c14-8)
                                                                                                       :op2 (c14-0 / heritage
                                                                                                                   :poss c14-8)))))))))

# ::snt : Hostages held supermarket in eastern Paris seen leaving site following apparent police assault
# ::tokens [":", "Hostages", "held", "supermarket", "in", "eastern", "Paris", "seen", "leaving", "site", "following", "apparent", "police", "assault"]
# ::lemmas [":", "Hostages", "hold", "supermarket", "in", "eastern", "Paris", "see", "leave", "site", "follow", "apparent", "police", "assault"]
(c15-10 / see-01
        :ARG1 (c15-0 / hostage
                     :ARG0-of (c15-12 / hold-01
                                      :ARG1 (c15-4 / supermarket
                                                   :location (c15-5 / east
                                                                    :part-of (c15-9 / city
                                                                                    :name (c15-7 / name
                                                                                                 :op1 "Paris"))))))
        :ARG2 (c15-1 / leave-11
                     :ARG0 c15-0
                     :ARG1 (c15-2 / site)
                     :ARG1-of (c15-3 / follow-01
                                     :ARG2 (c15-11 / assault-01
                                                   :ARG0 (c15-8 / police)
                                                   :ARG1 c15-4
                                                   :ARG1-of (c15-6 / appear-02)))))

# ::snt don't mess with the French in situations like this..
# ::tokens ["do", "n't", "mess", "with", "the", "French", "in", "situations", "like", "this", ".."]
# ::lemmas ["do", "not", "mess", "with", "the", "French", "in", "situation", "like", "this", ".."]
(c16-1 / mess-01
       :ARG0 (c16-0 / you)
       :ARG1 (c16-3 / person
                    :mod (c16-5 / country
                                :name (c16-2 / name
                                             :op1 "France")))
       :condition (c16-6 / situation
                         :ARG1-of (c16-4 / resemble-01
                                         :ARG2 (c16-7 / this)))
       :mode imperative
       :polarity -)

# ::snt Great news. Some light at the end of this tragic affair.
# ::tokens ["Great", "news", ".", "Some", "light", "at", "the", "end", "of", "this", "tragic", "affair", "."]
# ::lemmas ["great", "news", ".", "some", "light", "at", "the", "end", "of", "this", "tragic", "affair", "."]
(c17-1 / multi-sentence
       :snt1 (c17-3 / news
                    :mod (c17-4 / great))
       :snt2 (c17-0 / light
                    :quant (c17-6 / some)
                    :time (c17-2 / end-01
                                 :ARG1 (c17-8 / affair-02
                                              :mod (c17-7 / this)
                                              :mod (c17-5 / tragic)))))

# ::snt good job French police. Zero tolerance to terrorism.
# ::tokens ["good", "job", "French", "police", ".", "Zero", "tolerance", "to", "terrorism", "."]
# ::lemmas ["good", "job", "French", "police", ".", "Zero", "tolerance", "to", "terrorism", "."]
(c18-1 / multi-sentence
       :snt1 (c18-0 / job
                    :ARG1-of (c18-5 / good-02)
                    :source (c18-3 / police
                                   :mod (c18-4 / country
                                               :name (c18-2 / name
                                                            :op1 "France"))))
       :snt2 (c18-7 / tolerate-01
                    :ARG1 (c18-6 / terrorism)
                    :polarity -))

# ::snt well done
# ::tokens ["well", "done"]
# ::lemmas ["well", "do"]
(c19-1 / do-02
       :ARG1-of (c19-0 / well-09))

# ::snt DO NOT mess with the French.
# ::tokens ["DO", "NOT", "mess", "with", "the", "French", "."]
# ::lemmas ["do", "not", "mess", "with", "the", "French", "."]
(c21-1 / mess-01
       :ARG0 (c21-0 / you)
       :ARG1 (c21-3 / person
                    :mod (c21-4 / country
                                :name (c21-2 / name
                                             :op1 "France")))
       :mode imperative
       :polarity -)

# ::snt Now arrest the imam of these three swine.
# ::tokens ["Now", "arrest", "the", "imam", "of", "these", "three", "swine", "."]
# ::lemmas ["now", "arrest", "the", "imam", "of", "these", "three", "swine", "."]
(c22-7 / arrest-01
       :ARG0 (c22-1 / you)
       :ARG1 (c22-4 / person
                    :ARG0-of (c22-0 / have-rel-role-91
                                    :ARG1 (c22-5 / swine
                                                 :mod (c22-6 / this)
                                                 :quant 3)
                                    :ARG2 (c22-2 / imam)))
       :time (c22-3 / now)
       :mode imperative)

# ::snt Nice job from the French police today.
# ::tokens ["Nice", "job", "from", "the", "French", "police", "today", "."]
# ::lemmas ["nice", "job", "from", "the", "French", "police", "today", "."]
(c23-0 / job
       :ARG1-of (c23-1 / nice-01)
       :time (c23-5 / today)
       :source (c23-3 / police
                      :mod (c23-4 / country
                                  :name (c23-2 / name
                                               :op1 "France"))))
