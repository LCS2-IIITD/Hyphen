# ::snt right, the full story is even more shameful for US
# ::tokens ["right", ",", "the", "full", "story", "is", "even", "more", "shameful", "for", "US"]
# ::lemmas ["right", ",", "the", "full", "story", "be", "even", "more", "shameful", "for", "US"]
(c1-6 / right-06
      :ARG2 (c1-8 / shame-02
                  :ARG0 (c1-3 / story
                              :ARG1-of (c1-1 / full-09))
                  :ARG1 (c1-7 / country
                              :name (c1-5 / name
                                          :op1 "US"))
                  :ARG2-of (c1-0 / have-degree-91
                                 :ARG1 c1-3
                                 :ARG3 (c1-2 / more
                                             :mod (c1-4 / even)))))

# ::snt one picture doesn't tell the whole story.
# ::tokens ["one", "picture", "does", "n't", "tell", "the", "whole", "story", "."]
# ::lemmas ["one", "picture", "do", "not", "tell", "the", "whole", "story", "."]
(c2-3 / tell-01
      :ARG0 (c2-2 / picture
                  :quant 1)
      :ARG1 (c2-0 / story
                  :mod (c2-1 / whole))
      :polarity -)

# ::snt Left: police that condemned under Yanukovych. Right: 's police in .
# ::tokens ["Left", ":", "police", "that", "condemned", "under", "Yanukovych", ".", "Right", ":", "'s", "police", "in", "."]
# ::lemmas ["leave", ":", "police", "that", "condemn", "under", "Yanukovych", ".", "right", ":", "'s", "police", "in", "."]
(c5-1 / multi-sentence
      :snt1 (c5-0 / left-19
                  :ARG1 (c5-4 / police
                              :ARG0-of (c5-6 / condemn-01
                                             :prep-under (c5-7 / person
                                                               :name (c5-3 / name
                                                                           :op1 "Yanukovych")))))
      :snt2 (c5-2 / police
                  :location (c5-5 / right-08)))

# ::snt there are two pictures there...
# ::tokens ["there", "are", "two", "pictures", "there", "..."]
# ::lemmas ["there", "be", "two", "picture", "there", "..."]
(c6-0 / picture
      :location (c6-1 / there)
      :quant 2)
