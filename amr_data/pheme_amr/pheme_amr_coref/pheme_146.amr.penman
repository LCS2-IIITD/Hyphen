# ::snt chief said the officer was unaware of any robbery &amp; stopped for jay walking.
# ::tokens ["chief", "said", "the", "officer", "was", "unaware", "of", "any", "robbery", "&", "amp", ";", "stopped", "for", "jay", "walking", "."]
# ::lemmas ["chief", "say", "the", "officer", "be", "unaware", "of", "any", "robbery", "&", "amp", ";", "stop", "for", "jay", "walking", "."]
(c1-12 / say-01
       :ARG0 (c1-8 / person
                   :ARG0-of (c1-0 / have-org-role-91
                                  :ARG2 (c1-10 / chief)))
       :ARG1 (c1-9 / realize-01
                   :ARG0 (c1-13 / person
                                :ARG0-of c1-0
                                :ARG2 (c1-3 / officer))
                   :polarity -)
       :ARG1 (c1-14 / and
                    :op1 (c1-6 / rob-01)
                    :op2 (c1-5 / amp)
                    :mod (c1-7 / any))
       :ARG1-of (c1-11 / cause-01
                       :ARG0 (c1-4 / stop-01
                                   :purpose (c1-1 / walk-01
                                                  :ARG0 c1-13
                                                  :mod (c1-2 / jay)))))

# ::snt jay walking is punishable by death without a TRIAL ???????
# ::tokens ["jay", "walking", "is", "punishable", "by", "death", "without", "a", "TRIAL", "?", "?", "?", "?", "?", "?", "?"]
# ::lemmas ["jay", "walking", "be", "punishable", "by", "death", "without", "a", "trial", "?", "?", "?", "?", "?", "?", "?"]
(c2-2 / punishable-02
      :polarity (c2-6 / amr-unknown)
      :ARG1 (c2-0 / walk-01
                  :ARG0 (c2-5 / person
                              :name (c2-1 / name
                                          :op1 "Jay")))
      :ARG2 (c2-3 / die-01)
      :manner (c2-4 / try-02
                    :polarity -))

# ::snt Thats even worse smh
# ::tokens ["That", "s", "even", "worse", "smh"]
# ::lemmas ["that", "s", "even", "bad", "smh"]
(c3-2 / bad-07
      :ARG1 (c3-5 / that)
      :mod (c3-3 / even)
      :ARG2-of (c3-0 / have-degree-91
                     :ARG1 c3-5
                     :ARG3 (c3-1 / more))
      :mod (c3-4 / smh
                 :mode expressive))

# ::snt chief said the officer was unaware of any robbery &amp; stopped for jay walking.
# ::tokens ["chief", "said", "the", "officer", "was", "unaware", "of", "any", "robbery", "&", "amp", ";", "stopped", "for", "jay", "walking", "."]
# ::lemmas ["chief", "say", "the", "officer", "be", "unaware", "of", "any", "robbery", "&", "amp", ";", "stop", "for", "jay", "walking", "."]
(c4-12 / say-01
       :ARG0 (c4-8 / person
                   :ARG0-of (c4-0 / have-org-role-91
                                  :ARG2 (c4-10 / chief)))
       :ARG1 (c4-9 / realize-01
                   :ARG0 (c4-13 / person
                                :ARG0-of c4-0
                                :ARG2 (c4-3 / officer))
                   :polarity -)
       :ARG1 (c4-14 / and
                    :op1 (c4-6 / rob-01)
                    :op2 (c4-5 / amp)
                    :mod (c4-7 / any))
       :ARG1-of (c4-11 / cause-01
                       :ARG0 (c4-4 / stop-01
                                   :purpose (c4-1 / walk-01
                                                  :ARG0 c4-13
                                                  :mod (c4-2 / jay)))))

# ::snt Ana Baby single Labels prodby
# ::tokens ["Ana", "Baby", "single", "Labels", "prodby"]
# ::lemmas ["Ana", "Baby", "single", "Labels", "prodby"]
(c5-1 / product
      :name (c5-0 / name
                  :op1 "Ana"
                  :op2 "Baby"
                  :op3 "Single"
                  :op4 "Labor"))

# ::snt Nice!
# ::tokens ["Nice", "!"]
# ::lemmas ["nice", "!"]
(c6-0 / nice-01
      :mode expressive)

# ::snt At some point they're going to stick to one story, right?
# ::tokens ["At", "some", "point", "they", "'re", "going", "to", "stick", "to", "one", "story", ",", "right", "?"]
# ::lemmas ["at", "some", "point", "they", "be", "go", "to", "stick", "to", "one", "story", ",", "right", "?"]
(c7-4 / stick-01
      :ARG1 (c7-5 / they)
      :ARG2 (c7-1 / story
                  :quant 1)
      :time (c7-2 / point
                  :mod (c7-0 / some))
      :ARG1-of (c7-3 / request-confirmation-91))

# ::snt yes ma'am sadd story shots tho i hope he dies
# ::tokens ["yes", "ma'am", "sadd", "story", "shots", "tho", "i", "hope", "he", "dies"]
# ::lemmas ["yes", "ma'am", "sadd", "story", "shot", "tho", "i", "hope", "he", "die"]
(c8-0 / have-concession-91
      :ARG1 (c8-5 / shoot-01
                  :ARG1 (c8-1 / story)
                  :ARG2 (c8-2 / i))
      :ARG2 (c8-6 / hope-01
                  :ARG0 c8-2
                  :ARG1 (c8-4 / die-01
                              :ARG1 (c8-3 / he))))

# ::snt : chief said the officer was unaware of any robbery &amp; stopped for jay walking.
# ::tokens [":", "chief", "said", "the", "officer", "was", "unaware", "of", "any", "robbery", "&", "amp", ";", "stopped", "for", "jay", "walking", "."]
# ::lemmas [":", "chief", "say", "the", "officer", "be", "unaware", "of", "any", "robbery", "&", "amp", ";", "stop", "for", "jay", "walking", "."]
(c9-14 / and
       :op1 (c9-11 / say-01
                   :ARG0 (c9-8 / person
                               :ARG0-of (c9-0 / have-org-role-91
                                              :ARG2 (c9-10 / chief)))
                   :ARG1 (c9-9 / realize-01
                               :ARG0 (c9-13 / person
                                            :ARG0-of c9-0
                                            :ARG2 (c9-3 / officer))
                               :polarity -)
                   :ARG1 (c9-5 / and
                               :op1 (c9-6 / rob-01)
                               :op2 (c9-7 / amp)
                               :mod (c9-12 / any)))
       :op2 (c9-4 / stop-01
                  :purpose (c9-1 / walk-01
                                 :ARG0 c9-13
                                 :mod (c9-2 / jay))))

# ::snt it's not even robbery.. it's simple theft. What under or about $100 in goods. Removed from store is theft. No weapons used
# ::tokens ["it", "'s", "not", "even", "robbery", "..", "it", "'s", "simple", "theft", ".", "What", "under", "or", "about", "$", "100", "in", "goods", ".", "Removed", "from", "store", "is", "theft", ".", "No", "weapons", "used"]
# ::lemmas ["it", "be", "not", "even", "robbery", "..", "it", "be", "simple", "theft", ".", "what", "under", "or", "about", "$", "100", "in", "good", ".", "remove", "from", "store", "be", "theft", ".", "no", "weapon", "use"]
(c10-0 / multi-sentence
       :snt1 (c10-17 / contrast-01
                     :ARG1 (c10-9 / rob-01
                                  :mod (c10-6 / even)
                                  :domain (c10-14 / it)
                                  :polarity -)
                     :ARG2 (c10-3 / steal-01
                                  :ARG1 (c10-10 / good
                                                :quant (c10-16 / or
                                                               :op1 (c10-13 / under
                                                                            :op1 (c10-8 / monetary-quantity
                                                                                        :unit (c10-2 / dollar)
                                                                                        :quant 100))
                                                               :op2 (c10-4 / about
                                                                           :op1 c10-8)))
                                  :ARG1-of (c10-7 / simple-02)))
       :snt2 (c10-15 / steal-01
                     :ARG1 (c10-18 / thing
                                   :ARG1-of (c10-1 / remove-01
                                                   :ARG2 (c10-5 / store))))
       :snt3 (c10-12 / weapon
                     :ARG1-of (c10-11 / use-01)
                     :polarity -))

# ::snt : chief said the officer was unaware of any robbery &amp; stopped for jay walking.
# ::tokens [":", "chief", "said", "the", "officer", "was", "unaware", "of", "any", "robbery", "&", "amp", ";", "stopped", "for", "jay", "walking", "."]
# ::lemmas [":", "chief", "say", "the", "officer", "be", "unaware", "of", "any", "robbery", "&", "amp", ";", "stop", "for", "jay", "walking", "."]
(c11-14 / and
        :op1 (c11-11 / say-01
                     :ARG0 (c11-8 / person
                                  :ARG0-of (c11-0 / have-org-role-91
                                                  :ARG2 (c11-10 / chief)))
                     :ARG1 (c11-9 / realize-01
                                  :ARG0 (c11-13 / person
                                                :ARG0-of c11-0
                                                :ARG2 (c11-3 / officer))
                                  :polarity -)
                     :ARG1 (c11-5 / and
                                  :op1 (c11-6 / rob-01)
                                  :op2 (c11-7 / amp)
                                  :mod (c11-12 / any)))
        :op2 (c11-4 / stop-01
                    :purpose (c11-1 / walk-01
                                    :ARG0 c11-13
                                    :mod (c11-2 / jay))))

# ::snt : chief said the officer was unaware of any robbery &amp; stopped for jay walking.
# ::tokens [":", "chief", "said", "the", "officer", "was", "unaware", "of", "any", "robbery", "&", "amp", ";", "stopped", "for", "jay", "walking", "."]
# ::lemmas [":", "chief", "say", "the", "officer", "be", "unaware", "of", "any", "robbery", "&", "amp", ";", "stop", "for", "jay", "walking", "."]
(c12-14 / and
        :op1 (c12-11 / say-01
                     :ARG0 (c12-8 / person
                                  :ARG0-of (c12-0 / have-org-role-91
                                                  :ARG2 (c12-10 / chief)))
                     :ARG1 (c12-9 / realize-01
                                  :ARG0 (c12-13 / person
                                                :ARG0-of c12-0
                                                :ARG2 (c12-3 / officer))
                                  :polarity -)
                     :ARG1 (c12-5 / and
                                  :op1 (c12-6 / rob-01)
                                  :op2 (c12-7 / amp)
                                  :mod (c12-12 / any)))
        :op2 (c12-4 / stop-01
                    :purpose (c12-1 / walk-01
                                    :ARG0 c12-13
                                    :mod (c12-2 / jay))))

# ::snt chief said the officer was unaware of any robbery &amp; stopped for jay walking.
# ::tokens ["chief", "said", "the", "officer", "was", "unaware", "of", "any", "robbery", "&", "amp", ";", "stopped", "for", "jay", "walking", "."]
# ::lemmas ["chief", "say", "the", "officer", "be", "unaware", "of", "any", "robbery", "&", "amp", ";", "stop", "for", "jay", "walking", "."]
(c13-12 / say-01
        :ARG0 (c13-8 / person
                     :ARG0-of (c13-0 / have-org-role-91
                                     :ARG2 (c13-10 / chief)))
        :ARG1 (c13-9 / realize-01
                     :ARG0 (c13-13 / person
                                   :ARG0-of c13-0
                                   :ARG2 (c13-3 / officer))
                     :polarity -)
        :ARG1 (c13-14 / and
                      :op1 (c13-6 / rob-01)
                      :op2 (c13-5 / amp)
                      :mod (c13-7 / any))
        :ARG1-of (c13-11 / cause-01
                         :ARG0 (c13-4 / stop-01
                                      :purpose (c13-1 / walk-01
                                                      :ARG0 c13-13
                                                      :mod (c13-2 / jay)))))

# ::snt Ana Baby single Labels prodby click here
# ::tokens ["Ana", "Baby", "single", "Labels", "prodby", "click", "here"]
# ::lemmas ["Ana", "Baby", "single", "Labels", "prodby", "click", "here"]
(c14-5 / click-01
       :ARG0 (c14-1 / you)
       :location (c14-0 / here)
       :instrument (c14-4 / product
                          :name (c14-3 / name
                                       :op1 "Ana"
                                       :op2 "Baby")
                          :ARG1-of (c14-6 / single-02)
                          :ARG0-of (c14-2 / label-01))
       :mode imperative)

# ::snt They beat the crap outta Tupac for Jay Walking.... smh
# ::tokens ["They", "beat", "the", "crap", "outta", "Tupac", "for", "Jay", "Walking", "....", "smh"]
# ::lemmas ["they", "beat", "the", "crap", "outta", "Tupac", "for", "Jay", "Walking", "....", "smh"]
(c15-0 / beat-03
       :ARG0 (c15-7 / they)
       :ARG1 (c15-3 / person
                    :name (c15-1 / name
                                 :op1 "Tupac"))
       :ARG2 (c15-5 / crap)
       :ARG1-of (c15-4 / cause-01
                       :ARG0 (c15-8 / person
                                    :name (c15-2 / name
                                                 :op1 "Jay"
                                                 :op2 "Walking")))
       :mod (c15-6 / smh
                   :mode expressive))

# ::snt : Thats even worse smh exactly, cuz that means he was just being racist from the start
# ::tokens [":", "That", "s", "even", "worse", "smh", "exactly", ",", "cuz", "that", "means", "he", "was", "just", "being", "racist", "from", "the", "start"]
# ::lemmas [":", "that", "s", "even", "bad", "smh", "exactly", ",", "cuz", "that", "mean", "he", "be", "just", "be", "racist", "from", "the", "start"]
(c16-4 / bad-07
       :ARG1 (c16-11 / that)
       :mod (c16-6 / exact)
       :ARG1-of (c16-9 / cause-01
                       :ARG0 (c16-3 / mean-01
                                    :ARG1 c16-11
                                    :ARG2 (c16-8 / racist
                                                 :domain (c16-0 / he)
                                                 :mod (c16-1 / just)
                                                 :time (c16-2 / from
                                                              :op1 (c16-10 / start-01)))))
       :ARG2-of (c16-12 / have-degree-91
                        :ARG1 c16-11
                        :ARG3 (c16-7 / more
                                     :mod (c16-5 / even))))

# ::snt : chief said the officer was unaware of any robbery &amp; stopped for jay walking.
# ::tokens [":", "chief", "said", "the", "officer", "was", "unaware", "of", "any", "robbery", "&", "amp", ";", "stopped", "for", "jay", "walking", "."]
# ::lemmas [":", "chief", "say", "the", "officer", "be", "unaware", "of", "any", "robbery", "&", "amp", ";", "stop", "for", "jay", "walking", "."]
(c17-14 / and
        :op1 (c17-11 / say-01
                     :ARG0 (c17-8 / person
                                  :ARG0-of (c17-0 / have-org-role-91
                                                  :ARG2 (c17-10 / chief)))
                     :ARG1 (c17-9 / realize-01
                                  :ARG0 (c17-13 / person
                                                :ARG0-of c17-0
                                                :ARG2 (c17-3 / officer))
                                  :polarity -)
                     :ARG1 (c17-5 / and
                                  :op1 (c17-6 / rob-01)
                                  :op2 (c17-7 / amp)
                                  :mod (c17-12 / any)))
        :op2 (c17-4 / stop-01
                    :purpose (c17-1 / walk-01
                                    :ARG0 c17-13
                                    :mod (c17-2 / jay))))

# ::snt : chief said the officer stopped for jay walking.
# ::tokens [":", "chief", "said", "the", "officer", "stopped", "for", "jay", "walking", "."]
# ::lemmas [":", "chief", "say", "the", "officer", "stop", "for", "jay", "walking", "."]
(c18-7 / say-01
       :ARG0 (c18-5 / person
                    :ARG0-of (c18-0 / have-org-role-91
                                    :ARG2 (c18-6 / chief)))
       :ARG1 (c18-4 / stop-01
                    :ARG0 (c18-3 / officer)
                    :purpose (c18-1 / walk-01
                                    :ARG0 c18-3
                                    :mod (c18-2 / jay))))

# ::snt But SCOTUS assures us there is no longer any race problems in America.
# ::tokens ["But", "SCOTUS", "assures", "us", "there", "is", "no", "longer", "any", "race", "problems", "in", "America", "."]
# ::lemmas ["but", "SCOTUS", "assure", "we", "there", "be", "no", "long", "any", "race", "problem", "in", "America", "."]
(c19-6 / contrast-01
       :ARG2 (c19-10 / assure-01
                     :ARG0 (c19-7 / government-organization
                                  :name (c19-2 / name
                                               :op1 "Supreme"
                                               :op2 "Court"
                                               :op3 "of"
                                               :op4 "the"
                                               :op5 "United"
                                               :op6 "States"))
                     :ARG1 (c19-0 / we)
                     :ARG2 (c19-4 / problem
                                  :topic (c19-5 / race)
                                  :mod (c19-1 / any)
                                  :location (c19-8 / country
                                                   :name (c19-3 / name
                                                                :op1 "America"))
                                  :time (c19-9 / no-longer))))
