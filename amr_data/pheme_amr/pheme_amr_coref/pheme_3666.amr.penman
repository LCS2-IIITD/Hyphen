# ::snt IN UKRAINE HAVE GIVEN THE NAZI COUP, SUPPORTED BY NATO AND MEDIA COMMUNICATION,AS SEE PHOTO.
# ::tokens ["IN", "UKRAINE", "HAVE", "GIVEN", "THE", "NAZI", "COUP", ",", "SUPPORTED", "BY", "NATO", "AND", "MEDIA", "COMMUNICATION", ",", "AS", "SEE", "PHOTO", "."]
# ::lemmas ["in", "UKRAINE", "have", "give", "the", "NAZI", "COUP", ",", "support", "by", "NATO", "and", "MEDIA", "COMMUNICATION", ",", "as", "SEE", "PHOTO", "."]
(c1-2 / multi-sentence
      :snt1 (c1-9 / give-01
                  :ARG0 (c1-8 / country
                              :name (c1-4 / name
                                          :op1 "UKRAINE"))
                  :ARG1 (c1-7 / coup-01
                              :mod (c1-6 / political-movement
                                         :name (c1-5 / name
                                                     :op1 "Nazi"))
                              :ARG1-of (c1-12 / support-01
                                              :ARG0 (c1-15 / and
                                                           :op1 (c1-10 / military
                                                                       :name (c1-11 / name
                                                                                    :op1 "NATO"))
                                                           :op2 (c1-13 / community
                                                                       :mod (c1-1 / media))))))
      :snt2 (c1-3 / see-01
                  :ARG0 (c1-0 / you)
                  :ARG1 (c1-14 / photograph)
                  :mode imperative))

# ::snt has been hijacked by barbarism &amp; vandalism. so
# ::tokens ["has", "been", "hijacked", "by", "barbarism", "&", "amp", ";", "vandalism", ".", "so"]
# ::lemmas ["have", "be", "hijack", "by", "barbarism", "&", "amp", ";", "vandalism", ".", "so"]
(c2-1 / multi-sentence
      :snt1 (c2-0 / hijack-01
                  :ARG0 (c2-6 / and
                              :op1 (c2-2 / barbarism)
                              :op2 (c2-3 / amp)))
      :snt2 (c2-4 / vandalize-01)
      :mod (c2-5 / so))

# ::snt Sipan Hemo, Trkiyede ID terristlerini eiten ok sayda kamp var!
# ::tokens ["Sipan", "Hemo", ",", "Trkiyede", "ID", "terristlerini", "eiten", "ok", "sayda", "kamp", "var", "!"]
# ::lemmas ["Sipan", "Hemo", ",", "Trkiyede", "ID", "terristlerini", "eiten", "ok", "sayda", "kamp", "var", "!"]
(c4-7 / say-01
      :ARG0 (c4-10 / and
                   :op1 (c4-4 / person
                              :name (c4-2 / name
                                          :op1 "Sipan"
                                          :op2 "Hemo"))
                   :op2 (c4-9 / person
                              :name (c4-3 / name
                                          :op1 "Tkiyede"
                                          :op2 "ID"))
                   :op3 (c4-0 / person
                              :name (c4-5 / name
                                          :op1 "Terristlerini")))
      :ARG1 (c4-1 / okay-04
                  :ARG0 c4-10
                  :ARG1 (c4-8 / kamp
                              :mod (c4-6 / var))
                  :ARG1 c4-7)
      :ARG2 c4-10)

# ::snt srailli Tmgeneral Aviv Koavi: Trkiyede El Kaide ss var!
# ::tokens ["srailli", "Tmgeneral", "Aviv", "Koavi", ":", "Trkiyede", "El", "Kaide", "ss", "var", "!"]
# ::lemmas ["srailli", "Tmgeneral", "Aviv", "Koavi", ":", "Trkiyede", "El", "Kaide", "ss", "var", "!"]
(c5-4 / person
      :name (c5-2 / name
                  :op1 "Aviv"
                  :op2 "Koavi")
      :ARG0-of (c5-0 / have-org-role-91
                     :ARG2 (c5-7 / general))
      :mod (c5-8 / person
                 :name (c5-3 / name
                             :op1 "Tmgeneral"
                             :op2 "Aviv"
                             :op3 "Koavi"))
      :mod (c5-1 / person
                 :name (c5-5 / name
                             :op1 "Tkiyede"
                             :op2 "El"
                             :op3 "Kaide"))
      :mod (c5-6 / var
                 :mode expressive))

# ::snt Glen's Condemnation Message of Terrorism
# ::tokens ["Glen", "'s", "Condemnation", "Message", "of", "Terrorism"]
# ::lemmas ["Glen", "'s", "Condemnation", "Message", "of", "Terrorism"]
(c6-0 / message-01
      :ARG0 (c6-2 / person
                  :name (c6-1 / name
                              :op1 "Glen"))
      :ARG1 (c6-3 / condemn-01
                  :ARG1 (c6-4 / terrorism)))

# ::snt Real Muslims Cannot be Terrorists
# ::tokens ["Real", "Muslims", "Can", "not", "be", "Terrorists"]
# ::lemmas ["real", "Muslims", "can", "not", "be", "Terrorists"]
(c8-2 / possible-01
      :ARG1 (c8-4 / terrorist
                  :domain (c8-5 / person
                                :mod (c8-3 / religious-group
                                           :name (c8-1 / name
                                                       :op1 "Islam"))
                                :ARG1-of (c8-0 / real-04)))
      :polarity -)

# ::snt JWF strongly condemns this terrorist attack on the Charlie Hebdo
# ::tokens ["JWF", "strongly", "condemns", "this", "terrorist", "attack", "on", "the", "Charlie", "Hebdo"]
# ::lemmas ["JWF", "strongly", "condemn", "this", "terrorist", "attack", "on", "the", "Charlie", "Hebdo"]
(c9-4 / condemn-01
      :ARG0 (c9-1 / organization
                  :name (c9-2 / name
                              :op1 "JWF"))
      :ARG1 (c9-8 / attack-01
                  :ARG0 (c9-7 / terrorist)
                  :ARG1 (c9-0 / magazine
                              :name (c9-3 / name
                                          :op1 "Charlie"
                                          :op2 "Ch Hebdo"))
                  :mod (c9-5 / this))
      :ARG1-of (c9-6 / strong-02))

# ::snt Real Muslims Cannot be Terrorists
# ::tokens ["Real", "Muslims", "Can", "not", "be", "Terrorists"]
# ::lemmas ["real", "Muslims", "can", "not", "be", "Terrorists"]
(c10-2 / possible-01
       :ARG1 (c10-4 / terrorist
                    :domain (c10-5 / person
                                   :mod (c10-3 / religious-group
                                               :name (c10-1 / name
                                                            :op1 "Islam"))
                                   :ARG1-of (c10-0 / real-04)))
       :polarity -)
