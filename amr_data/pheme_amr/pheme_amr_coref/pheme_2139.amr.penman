# ::snt Daily Terror would never let facts get in the way a headline.
# ::tokens ["Daily", "Terror", "would", "never", "let", "facts", "get", "in", "the", "way", "a", "headline", "."]
# ::lemmas ["Daily", "Terror", "would", "never", "let", "fact", "get", "in", "the", "way", "a", "headline", "."]
(c2-1 / let-01
      :ARG0 (c2-3 / broadcast-program
                  :name (c2-5 / name
                              :op1 "Daily"
                              :op2 "Terror"))
      :ARG1 (c2-0 / hinder-01
                  :ARG0 (c2-2 / fact)
                  :ARG1 (c2-6 / thing
                              :ARG2-of (c2-7 / headline-01)))
      :time (c2-4 / ever)
      :polarity -)

# ::snt Grow up and go hide under a rock
# ::tokens ["Grow", "up", "and", "go", "hide", "under", "a", "rock"]
# ::lemmas ["grow", "up", "and", "go", "hide", "under", "a", "rock"]
(c3-6 / and
      :op1 (c3-5 / grow-up-04
                 :ARG1 (c3-1 / you)
                 :mode imperative)
      :op2 (c3-3 / go-05
                 :ARG0 c3-1
                 :ARG1 (c3-0 / hide-01
                             :ARG0 c3-1
                             :location (c3-2 / under
                                             :op1 (c3-4 / rock)))
                 :mode imperative))

# ::snt . I feel the relatives of the hostages.
# ::tokens [".", "I", "feel", "the", "relatives", "of", "the", "hostages", "."]
# ::lemmas [".", "i", "feel", "the", "relative", "of", "the", "hostage", "."]
(c4-2 / feel-02
      :ARG0 (c4-3 / i)
      :ARG1 (c4-1 / relative
                  :poss (c4-0 / hostage)))

# ::snt Fortunly I do not buy or read this right wing biased Murdoch rag but not at all surprised. Boycott.
# ::tokens ["Fortunly", "I", "do", "not", "buy", "or", "read", "this", "right", "wing", "biased", "Murdoch", "rag", "but", "not", "at", "all", "surprised", ".", "Boycott", "."]
# ::lemmas ["fortunly", "i", "do", "not", "buy", "or", "read", "this", "right", "wing", "bias", "Murdoch", "rag", "but", "not", "at", "all", "surprised", ".", "Boycott", "."]
(c5-1 / multi-sentence
      :snt1 (c5-10 / contrast-01
                   :ARG1 (c5-3 / or
                               :op1 (c5-2 / buy-01
                                          :ARG0 (c5-5 / i)
                                          :ARG1 (c5-9 / rag
                                                      :mod (c5-8 / person
                                                                 :name (c5-7 / name
                                                                             :op1 "Murdoch"))
                                                      :ARG1-of (c5-11 / bias-01
                                                                      :ARG2 (c5-6 / right-08))
                                                      :mod (c5-14 / this))
                                          :polarity -)
                               :op2 (c5-4 / read-01
                                          :ARG0 c5-5
                                          :ARG1 c5-9
                                          :polarity -))
                   :ARG2 (c5-12 / surprise-01
                                :ARG1 c5-5
                                :degree (c5-15 / at-all)
                                :polarity -)
                   :ARG1-of (c5-0 / fortunate-01))
      :snt2 (c5-13 / boycott-01))

# ::snt said the egg
# ::tokens ["said", "the", "egg"]
# ::lemmas ["say", "the", "egg"]
(c6-0 / say-01
      :ARG0 (c6-1 / egg))

# ::snt Real test for media, do they run with audience grabbing speculation or wait for credible facts?
# ::tokens ["Real", "test", "for", "media", ",", "do", "they", "run", "with", "audience", "grabbing", "speculation", "or", "wait", "for", "credible", "facts", "?"]
# ::lemmas ["real", "test", "for", "medium", ",", "do", "they", "run", "with", "audience", "grab", "speculation", "or", "wait", "for", "credible", "fact", "?"]
(c7-10 / amr-choice
       :op1 (c7-5 / run-01
                  :ARG0 (c7-2 / media)
                  :prep-with (c7-8 / speculate-01
                                   :ARG0 c7-2
                                   :ARG0-of (c7-7 / grab-01
                                                  :ARG1 (c7-3 / audience))))
       :op2 (c7-0 / wait-01
                  :ARG1 c7-2
                  :ARG2 (c7-1 / fact
                              :mod (c7-6 / credible)))
       :ARG0-of (c7-9 / test-01
                      :ARG1 c7-2
                      :ARG1-of (c7-4 / real-04)))

# ::snt MT : Weep media credibility. Australian's tweets Ch reports of GB Ray Hadley's 'rumours.'
# ::tokens ["MT", ":", "Weep", "media", "credibility", ".", "Australian", "'s", "tweets", "Ch", "reports", "of", "GB", "Ray", "Hadley", "'s", "'", "rumours", ".", "'"]
# ::lemmas ["MT", ":", "weep", "medium", "credibility", ".", "Australian", "'s", "tweet", "Ch", "report", "of", "GB", "Ray", "Hadley", "'s", "'", "rumour", ".", "'"]
(c8-1 / multi-sentence
      :snt1 (c8-7 / credibility
                  :mod (c8-5 / media)
                  :ARG0-of (c8-0 / wheep-01))
      :snt2 (c8-10 / tweet-02
                   :ARG0 (c8-6 / person
                               :mod (c8-8 / country
                                          :name (c8-3 / name
                                                      :op1 "Australia")))
                   :ARG1 (c8-9 / report-01
                               :ARG1 (c8-2 / rumor-01
                                           :ARG1 (c8-11 / person
                                                        :name (c8-4 / name
                                                                    :op1 "GB"
                                                                    :op2 "Ray"
                                                                    :op3 "Hadley"))))))

# ::snt Why didn't Brandis' metadata know this was going happen
# ::tokens ["Why", "did", "n't", "Brandis", "'", "metadata", "know", "this", "was", "going", "happen"]
# ::lemmas ["why", "do", "not", "Brandis", "'", "metadata", "know", "this", "be", "go", "happen"]
(c9-3 / cause-01
      :ARG0 (c9-6 / amr-unknown)
      :ARG1 (c9-5 / know-01
                  :ARG0 (c9-0 / metadata
                              :poss (c9-2 / person
                                          :name (c9-1 / name
                                                      :op1 "Brandis")))
                  :ARG1 (c9-4 / this)
                  :polarity -))

# ::snt If they waited for credible facts, NewsCorp papers would be empty.
# ::tokens ["If", "they", "waited", "for", "credible", "facts", ",", "NewsCorp", "papers", "would", "be", "empty", "."]
# ::lemmas ["if", "they", "wait", "for", "credible", "fact", ",", "NewsCorp", "paper", "would", "be", "empty", "."]
(c10-2 / empty-02
       :ARG1 (c10-4 / paper
                    :poss (c10-6 / company
                                 :name (c10-3 / name
                                              :op1 "NewsCorp")))
       :condition (c10-0 / wait-01
                         :ARG1 (c10-7 / they)
                         :ARG2 (c10-1 / fact
                                      :mod (c10-5 / credible))))

# ::snt Similar small brains... or poorly connected synapses in both cases, mike
# ::tokens ["Similar", "small", "brains", "...", "or", "poorly", "connected", "synapses", "in", "both", "cases", ",", "mike"]
# ::lemmas ["similar", "small", "brain", "...", "or", "poorly", "connect", "synapsis", "in", "both", "case", ",", "mike"]
(c11-11 / say-01
        :ARG0 (c11-4 / i)
        :ARG1 (c11-7 / resemble-01
                     :ARG1 (c11-2 / or
                                  :op1 (c11-1 / brain
                                              :mod (c11-3 / small))
                                  :op2 (c11-0 / synapse
                                              :ARG1-of (c11-8 / connect-01
                                                              :manner (c11-6 / poor)))
                                  :time (c11-9 / case-04
                                               :mod (c11-10 / both))))
        :ARG2 (c11-12 / person
                      :name (c11-5 / name
                                   :op1 "Mike")))

# ::snt I think we all know the answer to that
# ::tokens ["I", "think", "we", "all", "know", "the", "answer", "to", "that"]
# ::lemmas ["i", "think", "we", "all", "know", "the", "answer", "to", "that"]
(c12-5 / think-01
       :ARG0 (c12-2 / i)
       :ARG1 (c12-3 / know-01
                    :ARG0 (c12-0 / we
                                 :mod (c12-6 / all))
                    :ARG1 (c12-1 / answer-01
                                 :ARG1 (c12-4 / that))))

# ::snt is Nicole really M.Devine-Brown?
# ::tokens ["is", "Nicole", "really", "M.Devine", "-", "Brown", "?"]
# ::lemmas ["be", "Nicole", "really", "M.Devine", "-", "Brown", "?"]
(c13-1 / person
       :polarity (c13-3 / amr-unknown)
       :name (c13-0 / name
                    :op1 "M."
                    :op2 "Devine-Brown")
       :domain c13-1
       :name c13-0
       :ARG1-of (c13-2 / real-04)
       :op1 "Nicole")

# ::snt I don't think we should be tweeting and re-tweeting these front page headlines!
# ::tokens ["I", "do", "n't", "think", "we", "should", "be", "tweeting", "and", "re", "-", "tweeting", "these", "front", "page", "headlines", "!"]
# ::lemmas ["i", "do", "not", "think", "we", "should", "be", "tweet", "and", "re", "-", "tweet", "these", "front", "page", "headline", "!"]
(c14-9 / think-01
       :ARG0 (c14-3 / i)
       :ARG1 (c14-7 / recommend-01
                    :ARG1 (c14-10 / and
                                  :op1 (c14-8 / tweet-02
                                              :ARG0 (c14-1 / we)
                                              :ARG1 (c14-0 / headline
                                                           :mod (c14-6 / page
                                                                       :mod (c14-2 / front))
                                                           :mod (c14-5 / this)))
                                  :op2 (c14-4 / reply-01
                                              :ARG0 c14-1
                                              :ARG1 c14-0)))
       :polarity -)

# ::snt Nothing that does has any credibility. I don't anything has been lost.
# ::tokens ["Nothing", "that", "does", "has", "any", "credibility", ".", "I", "do", "n't", "anything", "has", "been", "lost", "."]
# ::lemmas ["nothing", "that", "do", "have", "any", "credibility", ".", "i", "do", "not", "anything", "have", "be", "lose", "."]
(c15-1 / multi-sentence
       :snt1 (c15-5 / credibility
                    :domain (c15-3 / nothing
                                   :ARG0-of (c15-4 / do-02
                                                   :snt2-of c15-1))
                    :polarity -)
       :ARG0 (c15-2 / i)
       :ARG1 (c15-6 / anything
                    :ARG1-of (c15-0 / lose-02))
       :polarity -)

# ::snt Mediocre is putting it a bit high...
# ::tokens ["Mediocre", "is", "putting", "it", "a", "bit", "high", "..."]
# ::lemmas ["Mediocre", "be", "put", "it", "a", "bit", "high", "..."]
(c16-4 / put-01
       :ARG0 (c16-5 / product
                    :name (c16-3 / name
                                 :op1 "Mediocre"))
       :ARG1 (c16-2 / it)
       :ARG2 (c16-0 / high-02
                    :degree (c16-1 / bit)))

# ::snt Thats not true, Ch. received calls too. Hadley is just a loudmouth with a mediocre mind
# ::tokens ["That", "s", "not", "true", ",", "Ch", ".", "received", "calls", "too", ".", "Hadley", "is", "just", "a", "loudmouth", "with", "a", "mediocre", "mind"]
# ::lemmas ["that", "s", "not", "true", ",", "Ch", ".", "receive", "call", "too", ".", "Hadley", "be", "just", "a", "loudmouth", "with", "a", "mediocre", "mind"]
(c17-3 / multi-sentence
       :snt1 (c17-13 / true-01
                     :ARG1 (c17-12 / that)
                     :polarity -)
       :snt2 (c17-8 / receive-01
                    :ARG0 (c17-7 / person
                                 :name (c17-5 / name
                                              :op1 "Ch."))
                    :ARG1 (c17-9 / call-02
                                 :ARG1 c17-7)
                    :mod (c17-6 / too))
       :snt3 (c17-2 / loudmouth
                    :domain (c17-14 / person
                                    :name (c17-10 / name
                                                  :op1 "Hadley"))
                    :mod (c17-0 / just)
                    :ARG0-of (c17-1 / have-03
                                    :ARG1 (c17-11 / mind
                                                  :ARG1-of (c17-4 / mediocre-00)))))

# ::snt People that prefer to listen to Ray Hadley are generally classified as morons
# ::tokens ["People", "that", "prefer", "to", "listen", "to", "Ray", "Hadley", "are", "generally", "classified", "as", "morons"]
# ::lemmas ["people", "that", "prefer", "to", "listen", "to", "Ray", "Hadley", "be", "generally", "classify", "as", "moron"]
(c18-5 / classify-01
       :ARG1 (c18-4 / person
                    :ARG0-of (c18-7 / prefer-01
                                    :ARG1 (c18-0 / listen-01
                                                 :ARG0 c18-4
                                                 :ARG1 (c18-2 / person
                                                              :name (c18-3 / name
                                                                           :op1 "Ray"
                                                                           :op2 "Hadley")))))
       :ARG2 (c18-1 / moron)
       :ARG1-of (c18-6 / general-02))

# ::snt The Egg has followers. That is all.
# ::tokens ["The", "Egg", "has", "followers", ".", "That", "is", "all", "."]
# ::lemmas ["the", "Egg", "have", "follower", ".", "that", "be", "all", "."]
(c19-1 / multi-sentence
       :snt1 (c19-0 / follow-02
                    :ARG0 (c19-3 / egg))
       :snt2 (c19-2 / be-it-08
                    :ARG1 (c19-4 / that)))

# ::snt Go hide under a rock I would rather listen to Ray Hadley wake up to yourself
# ::tokens ["Go", "hide", "under", "a", "rock", "I", "would", "rather", "listen", "to", "Ray", "Hadley", "wake", "up", "to", "yourself"]
# ::lemmas ["go", "hide", "under", "a", "rock", "i", "would", "rather", "listen", "to", "Ray", "Hadley", "wake", "up", "to", "yourself"]
(c20-9 / go-05
       :ARG0 (c20-1 / you)
       :ARG1 (c20-0 / hide-01
                    :ARG0 c20-1
                    :location (c20-4 / under
                                     :op1 (c20-8 / rock)))
       :ARG1-of (c20-3 / listen-01
                       :ARG0 (c20-5 / i)
                       :ARG1 (c20-2 / wake-up-02
                                    :ARG1 (c20-7 / person
                                                 :name (c20-6 / name
                                                              :op1 "Ray"
                                                              :op2 "Hadley")))
                       :ARG1-of (c20-10 / prefer-01
                                        :ARG0 c20-5))
       :mode imperative)

# ::snt And the News Limited alarmist headlines do anything but help.
# ::tokens ["And", "the", "News", "Limited", "alarmist", "headlines", "do", "anything", "but", "help", "."]
# ::lemmas ["and", "the", "News", "Limited", "alarmist", "headline", "do", "anything", "but", "help", "."]
(c21-5 / and
       :op2 (c21-0 / help-01
                   :ARG0 (c21-6 / headline
                                :mod (c21-1 / alarmist)
                                :poss (c21-4 / company
                                             :name (c21-2 / name
                                                          :op1 "News"
                                                          :op2 "Limited")))
                   :mod (c21-3 / anything-but)))

# ::snt Thanks for the link.
# ::tokens ["Thanks", "for", "the", "link", "."]
# ::lemmas ["thank", "for", "the", "link", "."]
(c22-2 / thank-01
       :ARG0 (c22-3 / i)
       :ARG1 (c22-0 / you)
       :ARG2 (c22-1 / link))

# ::snt : Weep for media credibility. tweeting Channel reports of Hadley's 'rumours.'
# ::tokens [":", "Weep", "for", "media", "credibility", ".", "tweeting", "Channel", "reports", "of", "Hadley", "'s", "'", "rumours", ".", "'"]
# ::lemmas [":", "weep", "for", "media", "credibility", ".", "tweet", "Channel", "report", "of", "Hadley", "'s", "'", "rumour", ".", "'"]
(c23-1 / multi-sentence
       :snt1 (c23-0 / wheep-01
                    :purpose (c23-6 / credibility
                                    :mod (c23-4 / media)))
       :snt2 (c23-9 / tweet-02
                    :ARG1 (c23-5 / report-01
                                 :ARG0 (c23-7 / channel)
                                 :ARG1 (c23-2 / rumor-01
                                              :ARG1 (c23-8 / person
                                                           :name (c23-3 / name
                                                                        :op1 "Hadley"))))))

# ::snt Nicole!Do your self a fav, stop tweeting!!!!
# ::tokens ["Nicole!Do", "your", "self", "a", "fav", ",", "stop", "tweeting", "!", "!", "!", "!"]
# ::lemmas ["Nicole!Do", "your", "self", "a", "fav", ",", "stop", "tweet", "!", "!", "!", "!"]
(c24-6 / say-01
       :ARG0 (c24-2 / i)
       :ARG1 (c24-8 / and
                    :op1 (c24-5 / do-02
                                :ARG0 (c24-4 / person
                                             :name (c24-3 / name
                                                          :op1 "Nicole"))
                                :ARG1 (c24-0 / favor)
                                :ARG2 c24-4
                                :mode imperative)
                    :op2 (c24-1 / stop-01
                                :ARG0 c24-4
                                :ARG1 (c24-7 / tweet-02
                                             :ARG0 c24-4)
                                :mode imperative))
       :ARG2 c24-4
       :mode expressive)

# ::snt facts??? what have facts got to do with it?? SHAME Ms Markson SHAME
# ::tokens ["facts", "?", "?", "?", "what", "have", "facts", "got", "to", "do", "with", "it", "?", "?", "SHAME", "Ms", "Markson", "SHAME"]
# ::lemmas ["fact", "?", "?", "?", "what", "have", "fact", "get", "to", "do", "with", "it", "?", "?", "SHAME", "Ms", "Markson", "SHAME"]
(c25-2 / multi-sentence
       :snt1 (c25-1 / fact
                    :polarity (c25-9 / amr-unknown))
       :snt2 (c25-0 / have-to-do-with-04
                    :ARG0 (c25-6 / fact)
                    :ARG1 (c25-5 / it)
                    :ARG2 (c25-4 / amr-unknown))
       :snt3 (c25-3 / quote-01
                    :ARG2 (c25-8 / person
                                 :name (c25-7 / name
                                              :op1 "Ms"
                                              :op2 "Markson"))))

# ::snt The Australian and GB? They can't lose what they don't have.
# ::tokens ["The", "Australian", "and", "GB", "?", "They", "ca", "n't", "lose", "what", "they", "do", "n't", "have", "."]
# ::lemmas ["the", "Australian", "and", "GB", "?", "they", "can", "not", "lose", "what", "they", "do", "not", "have", "."]
(c26-2 / multi-sentence
       :snt1 (c26-13 / and
                     :op1 (c26-7 / person
                                 :mod (c26-9 / country
                                             :name (c26-5 / name
                                                          :op1 "Australia")))
                     :op2 (c26-12 / person
                                  :mod (c26-8 / country
                                              :name (c26-6 / name
                                                           :op1 "GB")))
                     :polarity (c26-4 / amr-unknown))
       :snt2 (c26-3 / possible-01
                    :ARG1 (c26-1 / lose-02
                                 :ARG0 (c26-11 / they)
                                 :ARG1 (c26-10 / thing
                                               :ARG1-of (c26-0 / have-03
                                                               :ARG0 c26-11
                                                               :polarity -)))
                    :polarity -))

# ::snt another day of misinformation
# ::tokens ["another", "day", "of", "misinformation"]
# ::lemmas ["another", "day", "of", "misinformation"]
(c27-0 / day
       :time-of (c27-1 / misinform-01)
       :mod (c27-2 / another))

# ::snt and the retweeded it. Amateurs!
# ::tokens ["and", "the", "retweeded", "it", ".", "Amateurs", "!"]
# ::lemmas ["and", "the", "retweede", "it", ".", "amateur", "!"]
(c28-0 / multi-sentence
       :snt1 (c28-4 / and
                    :op2 (c28-3 / recede-01
                                :ARG1 (c28-2 / it)))
       :snt2 (c28-1 / amateur
                    :mode expressive))

# ::snt And the winner of the Rebekah Brooks clone award
# ::tokens ["And", "the", "winner", "of", "the", "Rebekah", "Brooks", "clone", "award"]
# ::lemmas ["and", "the", "winner", "of", "the", "Rebekah", "Brooks", "clone", "award"]
(c29-4 / and
       :op2 (c29-3 / person
                   :ARG0-of (c29-0 / win-01
                                   :ARG1 (c29-1 / award
                                                :name (c29-2 / name
                                                             :op1 "Rebekah"
                                                             :op2 "Brooks"
                                                             :op3 "Cluster")))))

# ::snt :NO wonder people don't buy newspapers anymore.
# ::tokens [":", "NO", "wonder", "people", "do", "n't", "buy", "newspapers", "anymore", "."]
# ::lemmas [":", "no", "wonder", "people", "do", "not", "buy", "newspaper", "anymore", "."]
(c30-0 / wonder-02
       :ARG1 (c30-1 / buy-01
                    :ARG0 (c30-3 / person)
                    :ARG1 (c30-2 / newspaper)
                    :time (c30-4 / anymore)
                    :polarity -)
       :polarity -)

# ::snt something wrong with any one who listens to Hadley
# ::tokens ["something", "wrong", "with", "any", "one", "who", "listens", "to", "Hadley"]
# ::lemmas ["something", "wrong", "with", "any", "one", "who", "listen", "to", "Hadley"]
(c31-0 / wrong-02
       :ARG1 (c31-4 / something)
       :ARG2 (c31-5 / anyone
                    :ARG0-of (c31-1 / listen-01
                                    :ARG1 (c31-3 / person
                                                 :name (c31-2 / name
                                                              :op1 "Hadley")))))

# ::snt According to hostages phoned . Hadley was on air at right time, thats all
# ::tokens ["According", "to", "hostages", "phoned", ".", "Hadley", "was", "on", "air", "at", "right", "time", ",", "that", "s", "all"]
# ::lemmas ["accord", "to", "hostage", "phone", ".", "Hadley", "be", "on", "air", "at", "right", "time", ",", "that", "s", "all"]
(c32-1 / multi-sentence
       :snt1 (c32-7 / say-01
                    :ARG0 (c32-0 / hostage
                                 :ARG1-of (c32-5 / phone-01)))
       :snt2 (c32-2 / be-located-at-91
                    :ARG1 (c32-8 / person
                                 :name (c32-4 / name
                                              :op1 "Hadley"))
                    :ARG2 (c32-9 / air)
                    :time (c32-6 / right-03)
                    :mod (c32-3 / all)))

# ::snt I wonder why people who have members in the siege call Ray Hadley not other media
# ::tokens ["I", "wonder", "why", "people", "who", "have", "members", "in", "the", "siege", "call", "Ray", "Hadley", "not", "other", "media"]
# ::lemmas ["i", "wonder", "why", "people", "who", "have", "member", "in", "the", "siege", "call", "Ray", "Hadley", "not", "other", "medium"]
(c33-1 / wonder-01
       :ARG0 (c33-5 / i)
       :ARG1 (c33-13 / thing
                     :ARG0-of (c33-9 / cause-01
                                     :ARG1 (c33-8 / call-01
                                                  :ARG0 (c33-7 / person
                                                               :ARG0-of (c33-0 / have-org-role-91
                                                                               :ARG1 (c33-14 / person
                                                                                             :ARG0-of (c33-12 / siege-01))
                                                                               :ARG2 (c33-2 / member)))
                                                  :ARG1 (c33-3 / person
                                                               :name (c33-6 / name
                                                                            :op1 "Ray"
                                                                            :op2 "Hadley"))
                                                  :ARG1-of (c33-11 / contrast-01
                                                                   :ARG2 (c33-15 / call-01
                                                                                 :ARG0 (c33-10 / media
                                                                                               :mod (c33-4 / other))
                                                                                 :ARG1 c33-3
                                                                                 :polarity -))))))

# ::snt And yet, I still miss him on LBC
# ::tokens ["And", "yet", ",", "I", "still", "miss", "him", "on", "LBC"]
# ::lemmas ["and", "yet", ",", "i", "still", "miss", "he", "on", "LBC"]
(c34-7 / and
       :op2 (c34-2 / miss-01
                   :ARG0 (c34-3 / i)
                   :ARG1 (c34-0 / he)
                   :mod (c34-6 / still)
                   :location (c34-5 / publication
                                    :name (c34-4 / name
                                                 :op1 "LBC"))
                   :concession (c34-1 / yet)))

# ::snt Changed forever into what?
# ::tokens ["Changed", "forever", "into", "what", "?"]
# ::lemmas ["change", "forever", "into", "what", "?"]
(c35-1 / change-01
       :ARG2 (c35-2 / amr-unknown)
       :duration (c35-0 / forever))

# ::snt To be fair, it doesn't claim to be a peer reviewed journal
# ::tokens ["To", "be", "fair", ",", "it", "does", "n't", "claim", "to", "be", "a", "peer", "reviewed", "journal"]
# ::lemmas ["to", "be", "fair", ",", "it", "do", "not", "claim", "to", "be", "a", "peer", "review", "journal"]
(c36-5 / claim-01
       :ARG0 (c36-2 / it)
       :ARG1 (c36-0 / journal
                    :ARG1-of (c36-4 / review-01
                                    :ARG0 (c36-3 / peer))
                    :domain c36-2)
       :purpose (c36-1 / fair-01)
       :polarity -)

# ::snt nobody with an IQ &gt; actually listens to Ray Hadley, do they?
# ::tokens ["nobody", "with", "an", "IQ", "&", "gt", ";", "actually", "listens", "to", "Ray", "Hadley", ",", "do", "they", "?"]
# ::lemmas ["nobody", "with", "an", "IQ", "&", "gt", ";", "actually", "listen", "to", "Ray", "Hadley", ",", "do", "they", "?"]
(c37-1 / listen-01
       :ARG0 (c37-4 / nobody
                    :ARG0-of (c37-0 / have-03
                                    :ARG1 (c37-2 / quotient
                                                 :quant-of (c37-3 / intelligent-01))))
       :ARG1 (c37-6 / person
                    :name (c37-5 / name
                                 :op1 "Ray"
                                 :op2 "Hadley"))
       :ARG1-of (c37-8 / actual-02)
       :ARG1-of (c37-7 / request-confirmation-91))

# ::snt No sorry I bet you are a ABC lover Mike Carlton hanger on how sad what a Loser !!!!!!!!!!!
# ::tokens ["No", "sorry", "I", "bet", "you", "are", "a", "ABC", "lover", "Mike", "Carlton", "hanger", "on", "how", "sad", "what", "a", "Loser", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["no", "sorry", "i", "bet", "you", "be", "a", "ABC", "lover", "Mike", "Carlton", "hanger", "on", "how", "sad", "what", "a", "Loser", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]
(c38-3 / multi-sentence
       :snt1 (c38-13 / sorry-01
                     :ARG1 (c38-7 / i)
                     :polarity -)
       :snt2 (c38-5 / bet-01
                    :ARG0 c38-7
                    :ARG2 (c38-10 / person
                                  :name (c38-8 / name
                                               :op1 "Mike"
                                               :op2 "Carlton")
                                  :ARG0-of (c38-0 / have-rel-role-91
                                                  :ARG1 (c38-11 / broadcast-program
                                                                :name (c38-9 / name
                                                                             :op1 "ABC"))
                                                  :ARG2 (c38-2 / lover))
                                  :domain (c38-1 / you))
                    :topic (c38-6 / sad-02
                                  :ARG0 (c38-14 / person
                                                :ARG0-of (c38-12 / lose-03))
                                  :degree (c38-4 / so))))
