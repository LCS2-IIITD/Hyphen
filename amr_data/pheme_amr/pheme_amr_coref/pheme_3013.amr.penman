# ::snt .lol.....anything is possible.
# ::tokens [".lol", ".....", "anything", "is", "possible", "."]
# ::lemmas [".lol", ".....", "anything", "be", "possible", "."]
(c1-0 / possible-01
      :ARG1 (c1-2 / anything)
      :ARG2-of (c1-1 / laugh-01
                     :manner (c1-3 / loud)
                     :mode expressive))

# ::snt Gelukkig! : Hostages Escape Sydney Cafe Siege Live Updates From
# ::tokens ["Gelukkig", "!", ":", "Hostages", "Escape", "Sydney", "Cafe", "Siege", "Live", "Updates", "From"]
# ::lemmas ["Gelukkig", "!", ":", "Hostages", "Escape", "Sydney", "Cafe", "Siege", "Live", "Updates", "from"]
(c2-8 / say-01
      :ARG1 (c2-3 / escape-01
                  :ARG0 (c2-6 / person
                              :ARG0-of (c2-0 / host-01))
                  :ARG1 (c2-1 / location
                              :name (c2-4 / name
                                          :op1 "Sydney"
                                          :op2 "Cafe"
                                          :op3 "Siege"))
                  :source (c2-2 / update-02
                                :mod (c2-7 / live)))
      :ARG2 c2-6
      :name (c2-5 / name
                  :op1 "Gelukkig")
      :mode expressive)

# ::snt : Five Hostages Escape Sydney Cafe Siege Live Updates From
# ::tokens [":", "Five", "Hostages", "Escape", "Sydney", "Cafe", "Siege", "Live", "Updates", "From"]
# ::lemmas [":", "Five", "Hostages", "Escape", "Sydney", "Cafe", "Siege", "Live", "Updates", "from"]
(c3-3 / be-from-91
      :ARG1 (c3-2 / update-02
                  :ARG2 (c3-4 / escape-01
                              :ARG0 (c3-6 / person
                                          :ARG0-of (c3-0 / host-01)
                                          :quant 5)
                              :ARG1 (c3-7 / cafe
                                          :name (c3-5 / name
                                                      :op1 "Sydney"
                                                      :op2 "Cafe"
                                                      :op3 "Siege")))
                  :mod (c3-1 / live)))

# ::snt she's kinda cute considering she's all scared out of her mind and all.
# ::tokens ["she", "'s", "kinda", "cute", "considering", "she", "'s", "all", "scared", "out", "of", "her", "mind", "and", "all", "."]
# ::lemmas ["she", "be", "kinda", "cute", "consider", "she", "be", "all", "scared", "out", "of", "her", "mind", "and", "all", "."]
(c5-5 / cute
      :degree (c5-7 / kind-of)
      :domain (c5-6 / she
                    :part (c5-0 / mind))
      :ARG1-of (c5-4 / cause-01
                     :ARG0 (c5-8 / and
                                 :op1 (c5-2 / scare-01
                                            :ARG1 c5-6
                                            :ARG2 (c5-1 / out-06
                                                        :ARG1 c5-6
                                                        :ARG2 c5-0)
                                            :mod (c5-3 / all
                                                       :op2-of c5-8)))))

# ::snt Is she an actress? This photo makes my conspiracy senses tingle...ya' know?
# ::tokens ["Is", "she", "an", "actress", "?", "This", "photo", "makes", "my", "conspiracy", "senses", "tingle", "...", "ya", "'", "know", "?"]
# ::lemmas ["be", "she", "an", "actress", "?", "this", "photo", "make", "my", "conspiracy", "sense", "tingle", "...", "ya", "'", "know", "?"]
(c6-1 / multi-sentence
      :snt1 (c6-6 / person
                  :polarity (c6-13 / amr-unknown)
                  :ARG0-of (c6-3 / act-01)
                  :domain (c6-10 / she))
      :snt2 (c6-7 / make-02
                  :ARG0 (c6-12 / photo
                               :mod (c6-11 / this))
                  :ARG1 (c6-9 / tingle-01
                              :ARG1 (c6-2 / sense-01
                                          :mod (c6-8 / conspiracy)
                                          :poss (c6-4 / i))))
      :snt3 (c6-5 / know-01
                  :ARG0 (c6-0 / you)
                  :polarity c6-13))

# ::snt Whoa die vine. RT : Five Hostages Escape Sydney Cafe Siege
# ::tokens ["Whoa", "die", "vine", ".", "RT", ":", "Five", "Hostages", "Escape", "Sydney", "Cafe", "Siege"]
# ::lemmas ["whoa", "die", "vine", ".", "RT", ":", "Five", "Hostages", "Escape", "Sydney", "Cafe", "Siege"]
(c7-2 / multi-sentence
      :snt1 (c7-5 / vine
                  :mod (c7-7 / die-01)
                  :mod (c7-1 / whoa
                             :mode expressive))
      :snt2 (c7-6 / publication
                  :name (c7-4 / name
                              :op1 "RT"))
      :snt3 (c7-3 / escape-01
                  :ARG0 (c7-0 / Hostage
                              :quant 5)
                  :ARG1 (c7-11 / Siege
                               :mod (c7-8 / cafe
                                          :location (c7-9 / city
                                                          :name (c7-10 / name
                                                                       :op1 "Sydney"))))))

# ::snt this really saddens me. Why can't people just get along? Those people are innocent
# ::tokens ["this", "really", "saddens", "me", ".", "Why", "ca", "n't", "people", "just", "get", "along", "?", "Those", "people", "are", "innocent"]
# ::lemmas ["this", "really", "sadden", "i", ".", "why", "can", "not", "people", "just", "get", "along", "?", "those", "people", "be", "innocent"]
(c8-1 / multi-sentence
      :snt1 (c8-10 / sadden-01
                   :ARG0 (c8-11 / this)
                   :ARG1 (c8-3 / i)
                   :degree (c8-5 / really))
      :snt2 (c8-6 / cause-01
                  :ARG0 (c8-13 / amr-unknown)
                  :ARG1 (c8-4 / possible-01
                              :ARG1 (c8-7 / get-along-18
                                          :ARG1 (c8-12 / person)
                                          :mod (c8-0 / just))
                              :polarity -))
      :snt3 (c8-8 / innocent-01
                  :ARG1 (c8-2 / person
                              :mod (c8-9 / that))))
