# ::snt if there were a referendum in the uk on the death penalty i for one would vote yes.
# ::tokens ["if", "there", "were", "a", "referendum", "in", "the", "uk", "on", "the", "death", "penalty", "i", "for", "one", "would", "vote", "yes", "."]
# ::lemmas ["if", "there", "be", "a", "referendum", "in", "the", "uk", "on", "the", "death", "penalty", "i", "for", "one", "would", "vote", "yes", "."]
(c1-3 / vote-01
      :ARG0 (c1-1 / i)
      :ARG1 (c1-0 / yes)
      :condition (c1-5 / referendum
                       :location (c1-6 / country
                                       :name (c1-2 / name
                                                   :op1 "UK"))
                       :topic (c1-4 / penalize-01
                                    :manner (c1-7 / die-01))))

# ::snt dirty bastards,we need to crush them like cockroaches.
# ::tokens ["dirty", "bastards", ",", "we", "need", "to", "crush", "them", "like", "cockroaches", "."]
# ::lemmas ["dirty", "bastard", ",", "we", "need", "to", "crush", "they", "like", "cockroach", "."]
(c2-2 / need-01
      :ARG0 (c2-0 / we)
      :ARG1 (c2-4 / crush-01
                  :ARG0 c2-0
                  :ARG1 (c2-1 / bastard
                              :ARG1-of (c2-3 / dirty-02))
                  :ARG1-of (c2-5 / resemble-01
                                 :ARG2 (c2-6 / crush-01
                                             :ARG0 c2-0
                                             :ARG1 (c2-7 / cockroach)))))

# ::snt is it true?
# ::tokens ["is", "it", "true", "?"]
# ::lemmas ["be", "it", "true", "?"]
(c3-1 / true-01
      :ARG1 (c3-2 / it)
      :polarity (c3-0 / amr-unknown))

# ::snt what a world?surely now is the time to return the death sentence for murder.liberalism a step to far.
# ::tokens ["what", "a", "world?surely", "now", "is", "the", "time", "to", "return", "the", "death", "sentence", "for", "murder.liberalism", "a", "step", "to", "far", "."]
# ::lemmas ["what", "a", "world?surely", "now", "be", "the", "time", "to", "return", "the", "death", "sentence", "for", "murder.liberalism", "a", "step", "to", "far", "."]
(c6-2 / multi-sentence
      :snt1 (c6-0 / world
                  :mod (c6-12 / amr-unknown))
      :snt2 (c6-11 / time
                   :time-of (c6-8 / return-02
                                  :ARG1 (c6-10 / sentence-01
                                               :ARG2 (c6-9 / die-01)
                                               :ARG3 (c6-7 / murder-01)))
                   :ARG1-of (c6-5 / sure-02)
                   :time (c6-6 / now))
      :snt3 (c6-1 / step-01
                  :ARG1 (c6-3 / liberal-02)
                  :ARG2 (c6-4 / far)))

# ::snt cdn soldier confirmed dead. Sad day in Canada.
# ::tokens ["cdn", "soldier", "confirmed", "dead", ".", "Sad", "day", "in", "Canada", "."]
# ::lemmas ["cdn", "soldier", "confirm", "dead", ".", "Sad", "day", "in", "Canada", "."]
(c7-1 / multi-sentence
      :snt1 (c7-6 / confirm-01
                  :ARG1 (c7-5 / die-01
                              :ARG1 (c7-9 / soldier
                                          :mod (c7-7 / government-organization
                                                     :name (c7-3 / name
                                                                 :op1 "Conservative"
                                                                 :op2 "Party")))))
      :snt2 (c7-0 / day
                  :ARG0-of (c7-2 / sad-02)
                  :location (c7-8 / country
                                  :name (c7-4 / name
                                              :op1 "Canada"))))

# ::snt Our borders are secure? is gonna kill us. support !
# ::tokens ["Our", "borders", "are", "secure", "?", "is", "gon", "na", "kill", "us", ".", "support", "!"]
# ::lemmas ["our", "border", "be", "secure", "?", "be", "going", "to", "kill", "we", ".", "support", "!"]
(c8-1 / multi-sentence
      :snt1 (c8-5 / secure-02
                  :polarity (c8-7 / amr-unknown)
                  :ARG1 (c8-2 / border
                              :poss (c8-0 / we)))
      :snt2 (c8-6 / kill-01
                  :ARG0 (c8-3 / support-01)
                  :ARG1 (c8-4 / we)))

# ::snt My map app shows tweets from shooting site
# ::tokens ["My", "map", "app", "shows", "tweets", "from", "shooting", "site"]
# ::lemmas ["my", "map", "app", "show", "tweet", "from", "shoot", "site"]
(c9-4 / show-01
      :ARG0 (c9-6 / app
                  :mod (c9-1 / map)
                  :poss (c9-3 / i))
      :ARG1 (c9-5 / tweet-02
                  :source (c9-2 / site
                                :location-of (c9-0 / shoot-02))))

# ::snt : A Canadian soldier has been shot
# ::tokens [":", "A", "Canadian", "soldier", "has", "been", "shot"]
# ::lemmas [":", "a", "Canadian", "soldier", "have", "be", "shoot"]
(c11-0 / shoot-01
       :ARG2 (c11-1 / soldier
                    :mod (c11-2 / country
                                :name (c11-3 / name
                                             :op1 "Canada"))))

# ::snt Hang on. We don't know why and why yet.
# ::tokens ["Hang", "on", ".", "We", "do", "n't", "know", "why", "and", "why", "yet", "."]
# ::lemmas ["hang", "on", ".", "we", "do", "not", "know", "why", "and", "why", "yet", "."]
(c12-3 / multi-sentence
       :snt1 (c12-0 / hang-on-05
                    :ARG1 (c12-1 / you)
                    :mode imperative)
       :snt2 (c12-8 / know-01
                    :ARG0 (c12-2 / we)
                    :ARG1 (c12-9 / and
                                 :op1 (c12-7 / thing
                                             :ARG0-of (c12-5 / cause-01))
                                 :op2 (c12-6 / thing
                                             :ARG0-of (c12-4 / cause-01)))
                    :time (c12-10 / yet)
                    :polarity -))
