# ::snt This guy is % full of shit. The story just keeps changing.
# ::tokens ["This", "guy", "is", "%", "full", "of", "shit", ".", "The", "story", "just", "keeps", "changing", "."]
# ::lemmas ["this", "guy", "be", "%", "full", "of", "shit", ".", "the", "story", "just", "keep", "change", "."]
(c1-2 / multi-sentence
      :snt1 (c1-1 / fill-01
                  :ARG1 (c1-7 / guy
                              :mod (c1-9 / this))
                  :ARG2 (c1-8 / shit)
                  :degree (c1-5 / percentage-entity))
      :snt2 (c1-4 / keep-02
                  :ARG1 (c1-6 / change-01
                              :ARG1 (c1-3 / story))
                  :mod (c1-0 / just)))

# ::snt Only every time he opens his mouth.
# ::tokens ["Only", "every", "time", "he", "opens", "his", "mouth", "."]
# ::lemmas ["only", "every", "time", "he", "open", "his", "mouth", "."]
(c2-3 / open-01
      :ARG0 (c2-0 / he
                  :part (c2-2 / mouth
                              :ARG1-of c2-3))
      :frequency (c2-4 / rate-entity-91
                       :ARG0 c2-0
                       :ARG1 c2-2)
      :ARG4-of c2-4
      :mod (c2-1 / only))

# ::snt Thanks will try to get to it Gary lol all we do is read now, well I do anyway
# ::tokens ["Thanks", "will", "try", "to", "get", "to", "it", "Gary", "lol", "all", "we", "do", "is", "read", "now", ",", "well", "I", "do", "anyway"]
# ::lemmas ["thank", "will", "try", "to", "get", "to", "it", "Gary", "lol", "all", "we", "do", "be", "read", "now", ",", "well", "i", "do", "anyway"]
(c3-3 / say-01
      :ARG0 (c3-12 / i)
      :ARG1 (c3-4 / and
                  :op1 (c3-18 / thank-01
                              :ARG0 c3-12
                              :ARG1 (c3-1 / person
                                          :name (c3-6 / name
                                                      :op1 "Gary"))
                              :ARG2 (c3-17 / try-01
                                           :ARG0 c3-1
                                           :ARG1 (c3-9 / get-05
                                                       :ARG1 c3-1
                                                       :ARG2 (c3-14 / it))))
                  :op2 (c3-16 / contrast-01
                              :ARG1 (c3-2 / do-02
                                          :ARG0 (c3-10 / we)
                                          :ARG1 (c3-8 / read-01
                                                      :ARG0 c3-10
                                                      :time (c3-15 / now))
                                          :mod (c3-11 / all))
                              :ARG2 (c3-0 / do-02
                                          :ARG0 c3-12
                                          :mod (c3-7 / anyway)))
                  :ARG2 (c3-5 / laugh-01
                              :ARG0 c3-12
                              :manner (c3-13 / loud)))
      :ARG2 c3-1)

# ::snt interesting book "thinking fast &amp; slow" Kahneman details the thought processes very much worth a read
# ::tokens ["interesting", "book", "\"", "thinking", "fast", "&", "amp", ";", "slow", "\"", "Kahneman", "details", "the", "thought", "processes", "very", "much", "worth", "a", "read"]
# ::lemmas ["interesting", "book", "\"", "think", "fast", "&", "amp", ";", "slow", "\"", "Kahneman", "detail", "the", "thought", "process", "very", "much", "worth", "a", "read"]
(c4-7 / detail-01
      :ARG0 (c4-6 / person
                  :name (c4-4 / name
                              :op1 "Kahneman"))
      :ARG1 (c4-11 / process-02
                   :ARG1 (c4-10 / think-01)
                   :ARG1-of (c4-0 / worth-02
                                  :ARG2 (c4-8 / read-01
                                              :ARG1 (c4-2 / book
                                                          :name c4-4
                                                          :op1 "Think"
                                                          :op2 "and"
                                                          :op3 "amp")
                                              :ARG1-of (c4-3 / interest-01)))
                   :degree (c4-1 / much
                                 :degree (c4-5 / very)))
      :ARG1-of (c4-9 / title-01
                     :ARG2 c4-2))

# ::snt : Is the Police Chief in changing the story? Yep...
# ::tokens [":", "Is", "the", "Police", "Chief", "in", "changing", "the", "story", "?", "Yep", "..."]
# ::lemmas [":", "be", "the", "Police", "Chief", "in", "change", "the", "story", "?", "yep", "..."]
(c5-2 / multi-sentence
      :snt1 (c5-6 / change-01
                  :polarity (c5-9 / amr-unknown)
                  :ARG0 (c5-4 / person
                              :ARG0-of (c5-0 / have-org-role-91
                                             :ARG1 (c5-8 / police)
                                             :ARG2 (c5-5 / chief)))
                  :ARG1 (c5-7 / story)
                  :polarity (c5-3 / amr-unknown))
      :snt2 (c5-1 / yep))

# ::snt he just did
# ::tokens ["he", "just", "did"]
# ::lemmas ["he", "just", "do"]
(c6-2 / event
      :mod (c6-0 / he)
      :time (c6-1 / just))

# ::snt the availability heuristic applies to the cops decision making and now the crowds here is summary
# ::tokens ["the", "availability", "heuristic", "applies", "to", "the", "cops", "decision", "making", "and", "now", "the", "crowds", "here", "is", "summary"]
# ::lemmas ["the", "availability", "heuristic", "apply", "to", "the", "cop", "decision", "making", "and", "now", "the", "crowd", "here", "be", "summary"]
(c7-10 / and
       :op1 (c7-3 / apply-02
                  :ARG1 (c7-2 / uristic
                              :topic (c7-5 / available-02))
                  :ARG2 (c7-1 / make-18
                              :ARG0 (c7-7 / cop)
                              :ARG1 (c7-6 / decide-01)))
       :op2 (c7-9 / summarize-01
                  :ARG1 (c7-8 / crowd
                              :location (c7-0 / here)
                              :time (c7-4 / now))))

# ::snt again?
# ::tokens ["again", "?"]
# ::lemmas ["again", "?"]
(c8-0 / event
      :polarity (c8-2 / amr-unknown)
      :mod (c8-1 / again))

# ::snt So in conclusion, you're a selfish ass hole who doesn't care about anyone else's life but your own. Got it. Enjoy your day.
# ::tokens ["So", "in", "conclusion", ",", "you", "'re", "a", "selfish", "ass", "hole", "who", "does", "n't", "care", "about", "anyone", "else", "'s", "life", "but", "your", "own", ".", "Got", "it", ".", "Enjoy", "your", "day", "."]
# ::lemmas ["so", "in", "conclusion", ",", "you", "be", "a", "selfish", "ass", "hole", "who", "do", "not", "care", "about", "anyone", "else", "'s", "life", "but", "your", "own", ".", "get", "it", ".", "enjoy", "your", "day", "."]
(c9-4 / multi-sentence
      :snt1 (c9-11 / conclude-01
                   :ARG1 (c9-0 / hole
                               :mod (c9-16 / ass)
                               :mod (c9-15 / selfish)
                               :domain (c9-1 / you)
                               :ARG0-of (c9-10 / care-01
                                               :ARG1 (c9-3 / life
                                                           :poss (c9-8 / anyone
                                                                       :mod (c9-7 / else)))
                                               :ARG2-of (c9-5 / except-01
                                                              :ARG1 (c9-14 / life
                                                                           :poss c9-1))
                                               :polarity -)))
      :snt2 (c9-12 / get-02
                   :ARG0 (c9-17 / you)
                   :ARG1 (c9-9 / it))
      :snt3 (c9-2 / enjoy-01
                  :ARG0 (c9-6 / you)
                  :ARG1 (c9-13 / day
                               :poss c9-6)
                  :mode imperative))

# ::snt dont know any1 involved, not my community. Got my own problems here, y add stres of others that dont effect my life n slightest
# ::tokens ["do", "nt", "know", "any1", "involved", ",", "not", "my", "community", ".", "Got", "my", "own", "problems", "here", ",", "y", "add", "stres", "of", "others", "that", "do", "nt", "effect", "my", "life", "n", "slightest"]
# ::lemmas ["do", "not", "know", "any1", "involve", ",", "not", "my", "community", ".", "get", "my", "own", "problem", "here", ",", "y", "add", "stre", "of", "other", "that", "do", "not", "effect", "my", "life", "n", "slight"]
(c10-1 / multi-sentence
       :snt1 (c10-16 / know-01
                     :ARG0 (c10-14 / i)
                     :ARG1 (c10-6 / anyone
                                  :ARG1-of (c10-15 / involve-01)
                                  :ARG1-of (c10-19 / contrast-01
                                                   :ARG2 (c10-3 / community
                                                                :poss c10-14
                                                                :polarity -)))
                     :polarity -)
       :snt2 (c10-13 / and
                     :op1 (c10-12 / get-01
                                  :ARG0 (c10-0 / i)
                                  :ARG1 (c10-2 / problem
                                               :poss c10-0)
                                  :location (c10-7 / here))
                     :op2 (c10-10 / add-02
                                  :ARG0 (c10-17 / you)
                                  :ARG1 (c10-18 / other
                                                :quant (c10-11 / multiple
                                                               :op1 1)
                                                :ARG0-of (c10-20 / affect-01
                                                                 :ARG1 (c10-8 / life
                                                                              :poss c10-0)
                                                                 :ARG1-of (c10-5 / have-degree-91
                                                                                 :ARG2 (c10-4 / slight)
                                                                                 :ARG3 (c10-9 / most))
                                                                 :polarity -)))))

# ::snt it's ok world is full of fake people like u who would rather hear happy BS than hard truths to make themselves feel better
# ::tokens ["it", "'s", "ok", "world", "is", "full", "of", "fake", "people", "like", "u", "who", "would", "rather", "hear", "happy", "BS", "than", "hard", "truths", "to", "make", "themselves", "feel", "better"]
# ::lemmas ["it", "be", "ok", "world", "be", "full", "of", "fake", "people", "like", "u", "who", "would", "rather", "hear", "happy", "bs", "than", "hard", "truth", "to", "make", "themselves", "feel", "well"]
(c11-6 / okay-04
       :ARG1 (c11-3 / fill-01
                    :ARG1 (c11-1 / world)
                    :ARG2 (c11-10 / person
                                  :ARG1-of (c11-8 / fake-02)
                                  :ARG1-of (c11-11 / resemble-01
                                                   :ARG2 (c11-2 / you))
                                  :ARG0-of (c11-16 / prefer-01
                                                   :ARG1 (c11-0 / hear-01
                                                                :ARG0 c11-10
                                                                :ARG1 (c11-5 / bullshit
                                                                             :ARG1-of (c11-17 / happy-01))
                                                                :ARG2 (c11-15 / truth
                                                                              :ARG1-of (c11-9 / hard-02))
                                                                :purpose (c11-4 / make-02
                                                                                :ARG0 c11-10
                                                                                :ARG1 (c11-7 / feel-01
                                                                                             :ARG0 c11-10
                                                                                             :ARG1 (c11-13 / good-02
                                                                                                           :ARG2-of (c11-14 / have-degree-91
                                                                                                                            :ARG1 c11-7
                                                                                                                            :ARG3 (c11-12 / more))))))))))

# ::snt haha, u sound like my wife! I always mess that one up, thanks for the spell check!
# ::tokens ["haha", ",", "u", "sound", "like", "my", "wife", "!", "I", "always", "mess", "that", "one", "up", ",", "thanks", "for", "the", "spell", "check", "!"]
# ::lemmas ["haha", ",", "u", "sound", "like", "my", "wife", "!", "i", "always", "mess", "that", "one", "up", ",", "thank", "for", "the", "spell", "check", "!"]
(c12-3 / multi-sentence
       :snt1 (c12-13 / sound-01
                     :ARG1 (c12-1 / you)
                     :ARG2 (c12-8 / person
                                  :ARG0-of (c12-0 / have-rel-role-91
                                                  :ARG1 (c12-7 / i)
                                                  :ARG2 (c12-2 / wife)))
                     :mod (c12-16 / haha
                                  :mode expressive))
       :snt2 (c12-14 / and
                     :op1 (c12-9 / mess-up-02
                                 :ARG0 (c12-11 / i)
                                 :ARG1 (c12-4 / one
                                              :mod (c12-15 / that))
                                 :time (c12-6 / always))
                     :op2 (c12-12 / thank-01
                                  :ARG0 c12-11
                                  :ARG1 c12-1)
                     :ARG2 (c12-10 / check-01
                                   :ARG0 c12-1
                                   :ARG1 (c12-5 / spell-01))))

# ::snt doesn't sound good
# ::tokens ["does", "n't", "sound", "good"]
# ::lemmas ["do", "not", "sound", "good"]
(c13-0 / sound-01
       :ARG2 (c13-1 / good-02)
       :polarity -)

# ::snt Its youre
# ::tokens ["Its", "you", "re"]
# ::lemmas ["its", "you", "re"]
(c14-0 / you)

# ::snt I don't think you know what caring means. I'm not okay with wrongful vigilante justice and you shouldn't be either.
# ::tokens ["I", "do", "n't", "think", "you", "know", "what", "caring", "means", ".", "I", "'m", "not", "okay", "with", "wrongful", "vigilante", "justice", "and", "you", "should", "n't", "be", "either", "."]
# ::lemmas ["i", "do", "not", "think", "you", "know", "what", "care", "mean", ".", "i", "be", "not", "okay", "with", "wrongful", "vigilante", "justice", "and", "you", "should", "not", "be", "either", "."]
(c15-4 / multi-sentence
       :snt1 (c15-14 / think-01
                     :ARG0 (c15-6 / i)
                     :ARG1 (c15-7 / know-01
                                  :ARG0 (c15-1 / you)
                                  :ARG1 (c15-9 / mean-01
                                               :ARG1 (c15-11 / care-03)
                                               :ARG2 (c15-13 / thing)))
                     :polarity -)
       :snt2 (c15-15 / and
                     :op1 (c15-5 / okay-01
                                 :ARG0 (c15-12 / i)
                                 :ARG1 (c15-0 / justice
                                              :mod (c15-8 / vigilante)
                                              :ARG1-of (c15-2 / wrong-02))
                                 :polarity -)
                     :op2 (c15-10 / recommend-01
                                  :ARG1 (c15-3 / okay-01
                                               :ARG0 (c15-16 / you)
                                               :ARG1 c15-0
                                               :polarity -))))

# ::snt So you're cool with letting innocent people be killed? Nice man. That's something to be proud of.
# ::tokens ["So", "you", "'re", "cool", "with", "letting", "innocent", "people", "be", "killed", "?", "Nice", "man", ".", "That", "'s", "something", "to", "be", "proud", "of", "."]
# ::lemmas ["so", "you", "be", "cool", "with", "let", "innocent", "people", "be", "kill", "?", "nice", "man", ".", "that", "be", "something", "to", "be", "proud", "of", "."]
(c16-2 / multi-sentence
       :snt1 (c16-8 / cool
                    :polarity (c16-13 / amr-unknown)
                    :domain (c16-0 / you)
                    :topic (c16-1 / let-01
                                  :ARG1 (c16-11 / kill-01
                                                :ARG1 (c16-6 / person
                                                             :ARG1-of (c16-4 / innocent-01)))))
       :snt2 (c16-10 / say-01
                     :ARG1 (c16-12 / pride-01
                                   :ARG0 (c16-9 / i)
                                   :ARG1 (c16-3 / something
                                                :domain c16-1))
                     :ARG2 (c16-7 / man
                                  :ARG1-of (c16-5 / nice-01))))

# ::snt My column: ARREST DARREN WILSON ARREST HIM NOW!!:
# ::tokens ["My", "column", ":", "ARREST", "DARREN", "WILSON", "ARREST", "HIM", "NOW", "!", "!", ":"]
# ::lemmas ["my", "column", ":", "ARREST", "DARREN", "WILSON", "arrest", "him", "now", "!", "!", ":"]
(c17-1 / multi-sentence
       :snt1 (c17-6 / column
                    :poss (c17-2 / i))
       :snt2 (c17-7 / arrest-01
                    :ARG0 (c17-5 / person
                                 :name (c17-3 / name
                                              :op1 "Aaron"
                                              :op2 "DarrEN"
                                              :op3 "Wilson"))
                    :ARG1 (c17-0 / he)
                    :time (c17-4 / now)
                    :mode expressive))

# ::snt :until all the facts are out I'm not judging anymore. That whole justice thing in the constitution u know
# ::tokens [":", "until", "all", "the", "facts", "are", "out", "I", "'m", "not", "judging", "anymore", ".", "That", "whole", "justice", "thing", "in", "the", "constitution", "u", "know"]
# ::lemmas [":", "until", "all", "the", "fact", "be", "out", "i", "be", "not", "judge", "anymore", ".", "that", "whole", "justice", "thing", "in", "the", "constitution", "u", "know"]
(c18-4 / multi-sentence
       :snt1 (c18-0 / judge-01
                    :ARG0 (c18-8 / i)
                    :time (c18-14 / anymore)
                    :time (c18-5 / until
                                 :op1 (c18-6 / out-01
                                             :ARG1 (c18-3 / fact
                                                          :mod (c18-7 / all))))
                    :polarity -)
       :snt2 (c18-12 / know-01
                     :ARG0 (c18-1 / you)
                     :ARG1 (c18-11 / thing
                                   :mod (c18-13 / justice)
                                   :mod (c18-2 / whole)
                                   :location (c18-9 / constitution)
                                   :mod (c18-10 / that))))

# ::snt did you know any of them? R u losing sleep tonight because of them? Will u donate $ to support the community? Don't fake carein
# ::tokens ["did", "you", "know", "any", "of", "them", "?", "R", "u", "losing", "sleep", "tonight", "because", "of", "them", "?", "Will", "u", "donate", "$", "to", "support", "the", "community", "?", "Do", "n't", "fake", "carein"]
# ::lemmas ["do", "you", "know", "any", "of", "they", "?", "r", "u", "lose", "sleep", "tonight", "because", "of", "they", "?", "will", "u", "donate", "$", "to", "support", "the", "community", "?", "do", "not", "fake", "carein"]
(c19-1 / multi-sentence
       :snt1 (c19-19 / know-01
                     :ARG0 (c19-20 / you)
                     :ARG1 (c19-6 / any
                                  :ARG1-of (c19-14 / include-91
                                                   :ARG2 (c19-24 / they)))
                     :polarity (c19-13 / amr-unknown))
       :snt2 (c19-7 / lose-02
                    :ARG0 (c19-23 / you)
                    :ARG1 (c19-5 / sleep-01
                                 :ARG0 c19-23)
                    :time (c19-3 / date-entity
                                 :dayperiod (c19-10 / night)
                                 :mod (c19-18 / today))
                    :ARG1-of (c19-22 / cause-01
                                     :ARG0 (c19-15 / they)))
       :snt3 (c19-0 / donate-01
                    :ARG0 (c19-2 / you)
                    :ARG1 (c19-12 / monetary-quantity
                                  :quant (c19-21 / $)
                                  :purpose (c19-9 / support-01
                                                  :ARG0 c19-2
                                                  :ARG1 (c19-4 / community))
                                  :polarity (c19-11 / amr-unknown))
                    :snt4 (c19-8 / fake-02
                                 :ARG0 (c19-16 / you)
                                 :ARG1 (c19-17 / care-03)
                                 :mode imperative
                                 :polarity -)))

# ::snt Kid about to go to college robs cigars unarmed and then jay walks with cigars in his hand?! Yeah/Nah
# ::tokens ["Kid", "about", "to", "go", "to", "college", "robs", "cigars", "unarmed", "and", "then", "jay", "walks", "with", "cigars", "in", "his", "hand", "?", "!", "Yeah", "/", "Nah"]
# ::lemmas ["kid", "about", "to", "go", "to", "college", "rob", "cigar", "unarmed", "and", "then", "jay", "walks", "with", "cigar", "in", "his", "hand", "?", "!", "yeah", "/", "Nah"]
(c20-3 / multi-sentence
       :snt1 (c20-13 / and
                     :op1 (c20-7 / rob-01
                                 :ARG0 (c20-12 / kid
                                               :ARG0-of (c20-9 / go-02
                                                               :ARG4 (c20-8 / college)
                                                               :time (c20-4 / about-to))
                                               :part (c20-0 / hand))
                                 :ARG1 (c20-10 / cigar))
                     :op2 (c20-1 / walk-01
                                 :ARG0 c20-12
                                 :manner (c20-6 / arm-01
                                                :ARG1 c20-12
                                                :polarity -)
                                 :time (c20-11 / then))
                     :snt2-of c20-3)
       :op1 (c20-2 / yeah
                   :mode expressive)
       :op2 (c20-5 / nah
                   :mode expressive))

# ::snt best line yet, POLICE CHIEF =MALL COP
# ::tokens ["best", "line", "yet", ",", "POLICE", "CHIEF", "=", "MALL", "COP"]
# ::lemmas ["good", "line", "yet", ",", "POLICE", "CHIEF", "=", "MALL", "COP"]
(c21-3 / multi-sentence
       :snt1 (c21-2 / line
                    :ARG1-of (c21-0 / have-degree-91
                                    :ARG2 (c21-8 / good-02
                                                 :ARG1 c21-2)
                                    :ARG3 (c21-5 / most)
                                    :time (c21-1 / yet)))
       :snt2 (c21-4 / equal-01
                    :ARG1 (c21-7 / check-01
                                 :ARG0 (c21-6 / police))
                    :ARG2 (c21-9 / cop
                                 :mod (c21-10 / all))))

# ::snt People are being shot, tear gassed, &amp; unlawfully detained in the streets. That's not constitutional.
# ::tokens ["People", "are", "being", "shot", ",", "tear", "gassed", ",", "&", "amp", ";", "unlawfully", "detained", "in", "the", "streets", ".", "That", "'s", "not", "constitutional", "."]
# ::lemmas ["people", "be", "be", "shoot", ",", "tear", "gas", ",", "&", "amp", ";", "unlawfully", "detain", "in", "the", "street", ".", "that", "be", "not", "constitutional", "."]
(c22-0 / multi-sentence
       :snt1 (c22-10 / and
                     :op1 (c22-8 / shoot-02
                                 :ARG1 (c22-3 / person))
                     :op2 (c22-6 / gas-03
                                 :ARG1 c22-3
                                 :instrument (c22-9 / tear))
                     :op3 (c22-4 / detain-01
                                 :ARG1 c22-3
                                 :location (c22-1 / street)
                                 :ARG1-of (c22-2 / enforce-01
                                                 :polarity -)))
       :snt2 (c22-5 / constitutional
                    :domain (c22-7 / that)
                    :polarity -))

# ::snt again?
# ::tokens ["again", "?"]
# ::lemmas ["again", "?"]
(c23-0 / event
       :polarity (c23-2 / amr-unknown)
       :mod (c23-1 / again))

# ::snt bitch on twitter to make yourself feel like you care. But deep down, u really don't or you'd do something about it.
# ::tokens ["bitch", "on", "twitter", "to", "make", "yourself", "feel", "like", "you", "care", ".", "But", "deep", "down", ",", "u", "really", "do", "n't", "or", "you", "'d", "do", "something", "about", "it", "."]
# ::lemmas ["bitch", "on", "twitter", "to", "make", "yourself", "feel", "like", "you", "care", ".", "but", "deep", "down", ",", "u", "really", "do", "not", "or", "you", "would", "do", "something", "about", "it", "."]
(c24-3 / multi-sentence
       :snt1 (c24-4 / bitch
                    :medium (c24-7 / publication
                                   :name (c24-6 / name
                                                :op1 "Twitter"))
                    :purpose (c24-8 / make-02
                                    :ARG1 (c24-2 / feel-01
                                                 :ARG0 c24-4
                                                 :ARG1 (c24-9 / care-01
                                                              :ARG0 c24-4)))
                    :ARG0-of c24-8)
       :snt2 (c24-10 / contrast-01
                     :ARG2 (c24-11 / do-02
                                   :ARG0 (c24-0 / you)
                                   :ARG1 (c24-12 / something)
                                   :ARG2 (c24-5 / it)
                                   :condition c24-11
                                   :ARG0 c24-0
                                   :ARG1 c24-12
                                   :time (c24-1 / deep-down)
                                   :polarity -)))

# ::snt Nope. Saw cigars, Then heard call about a robbery at the store. Connected dots.
# ::tokens ["Nope", ".", "Saw", "cigars", ",", "Then", "heard", "call", "about", "a", "robbery", "at", "the", "store", ".", "Connected", "dots", "."]
# ::lemmas ["nope", ".", "Saw", "cigar", ",", "then", "hear", "call", "about", "a", "robbery", "at", "the", "store", ".", "connected", "dot", "."]
(c25-1 / multi-sentence
       :snt1 (c25-4 / nope)
       :snt2 (c25-12 / and
                     :op1 (c25-10 / see-01
                                  :ARG0 (c25-3 / i)
                                  :ARG1 (c25-6 / cigar))
                     :op2 (c25-0 / hear-01
                                 :ARG0 c25-3
                                 :ARG1 (c25-5 / call-02
                                              :topic (c25-7 / rob-01
                                                            :ARG1 (c25-2 / store)))
                                 :time (c25-11 / then)))
       :snt3 (c25-8 / dot
                    :ARG1-of (c25-9 / connect-01)))

# ::snt We call 'em rewrites in Hollywood. Hope he's using Final Draft.
# ::tokens ["We", "call", "'em", "rewrites", "in", "Hollywood", ".", "Hope", "he", "'s", "using", "Final", "Draft", "."]
# ::lemmas ["we", "call", "'em", "rewrite", "in", "Hollywood", ".", "hope", "he", "be", "use", "Final", "Draft", "."]
(c26-2 / multi-sentence
       :snt1 (c26-8 / call-01
                    :ARG0 (c26-1 / we)
                    :ARG1 (c26-10 / they)
                    :ARG2 (c26-7 / rewrite-01)
                    :location (c26-6 / market-sector
                                     :name (c26-4 / name
                                                  :op1 "Hollywood")))
       :snt2 (c26-0 / hope-01
                    :ARG1 (c26-3 / use-01
                                 :ARG0 (c26-11 / he)
                                 :ARG1 (c26-9 / thing
                                              :name (c26-5 / name
                                                           :op1 "Final"
                                                           :op2 "Draft")))))

# ::snt Yes, and it will change a few more times until he gets it just the way that he wants it.
# ::tokens ["Yes", ",", "and", "it", "will", "change", "a", "few", "more", "times", "until", "he", "gets", "it", "just", "the", "way", "that", "he", "wants", "it", "."]
# ::lemmas ["yes", ",", "and", "it", "will", "change", "a", "few", "more", "time", "until", "he", "get", "it", "just", "the", "way", "that", "he", "want", "it", "."]
(c27-9 / and
       :op2 (c27-7 / change-01
                   :ARG1 (c27-6 / it)
                   :frequency (c27-3 / few
                                     :quant (c27-4 / more))
                   :time (c27-5 / until
                                :op1 (c27-8 / get-01
                                            :ARG0 (c27-0 / he)
                                            :ARG1 c27-6
                                            :manner (c27-1 / want-01
                                                           :ARG0 c27-0
                                                           :ARG1 c27-6
                                                           :mod (c27-2 / just))))))

# ::snt about this kid?
# ::tokens ["about", "this", "kid", "?"]
# ::lemmas ["about", "this", "kid", "?"]
(c28-1 / concern-02
       :ARG1 (c28-3 / kid
                    :mod (c28-0 / this))
       :polarity (c28-2 / amr-unknown))

# ::snt chief is "speculating" in public and knows that the officer is listening to his speculation (coaching the witness)
# ::tokens ["chief", "is", "\"", "speculating", "\"", "in", "public", "and", "knows", "that", "the", "officer", "is", "listening", "to", "his", "speculation", "(", "coaching", "the", "witness", ")"]
# ::lemmas ["chief", "be", "\"", "speculate", "\"", "in", "public", "and", "know", "that", "the", "officer", "be", "listen", "to", "his", "speculation", "(", "coach", "the", "witness", ")"]
(c29-13 / and
        :op1 (c29-10 / speculate-01
                     :ARG0 (c29-7 / person
                                  :ARG0-of (c29-0 / have-org-role-91
                                                  :ARG2 (c29-9 / chief)))
                     :ARG1-of (c29-12 / public-02))
        :op2 (c29-11 / know-01
                     :ARG0 c29-7
                     :ARG1 (c29-2 / listen-01
                                  :ARG0 (c29-5 / officer)
                                  :ARG1 (c29-6 / speculate-01
                                               :ARG0 c29-7)
                                  :ARG1-of (c29-3 / mean-01
                                                  :ARG2 (c29-8 / coach-01
                                                               :ARG0 c29-5
                                                               :ARG1 (c29-4 / person
                                                                            :ARG0-of (c29-1 / witness-01)))))))

# ::snt nobody knows if he's innocent or not. Your assuming, and frankly no I dont. Doesn't effect my life at all
# ::tokens ["nobody", "knows", "if", "he", "'s", "innocent", "or", "not", ".", "Your", "assuming", ",", "and", "frankly", "no", "I", "do", "nt", ".", "Does", "n't", "effect", "my", "life", "at", "all"]
# ::lemmas ["nobody", "know", "if", "he", "be", "innocent", "or", "not", ".", "your", "assuming", ",", "and", "frankly", "no", "i", "do", "not", ".", "do", "not", "effect", "my", "life", "at", "all"]
(c30-3 / multi-sentence
       :snt1 (c30-8 / know-01
                    :ARG0 (c30-9 / nobody)
                    :ARG1 (c30-15 / truth-value
                                  :polarity-of (c30-7 / innocent-01
                                                      :ARG1 (c30-0 / he))))
       :snt2 (c30-13 / contrast-01
                     :ARG1 (c30-16 / assume-02
                                   :ARG0 (c30-1 / you)
                                   :ARG1 c30-7)
                     :ARG2 (c30-12 / do-02
                                   :ARG0 (c30-14 / i)
                                   :ARG1 (c30-10 / no)
                                   :manner (c30-2 / frank)
                                   :polarity -))
       :snt3 (c30-6 / affect-01
                    :ARG0 (c30-4 / it)
                    :ARG1 (c30-5 / life
                                 :poss c30-14)
                    :degree (c30-11 / at-all)
                    :polarity -))

# ::snt sorry meant anyone not anymore.
# ::tokens ["sorry", "meant", "anyone", "not", "anymore", "."]
# ::lemmas ["sorry", "mean", "anyone", "not", "anymore", "."]
(c31-1 / mean-01
       :ARG1 (c31-0 / sorry-01)
       :ARG2 (c31-3 / anyone
                    :time (c31-2 / anymore
                                 :polarity -)))

# ::snt same here so much be stuff being done here's a taste that's relevant to
# ::tokens ["same", "here", "so", "much", "be", "stuff", "being", "done", "here", "'s", "a", "taste", "that", "'s", "relevant", "to"]
# ::lemmas ["same", "here", "so", "much", "be", "stuff", "be", "do", "here", "be", "a", "taste", "that", "be", "relevant", "to"]
(c32-2 / multi-sentence
       :snt1 (c32-8 / same-01
                    :location (c32-0 / here))
       :snt2 (c32-6 / do-02
                    :ARG1 (c32-3 / stuff
                                 :ARG1-of (c32-7 / relevant-01
                                                 :ARG2 (c32-9 / taste)))
                    :location (c32-10 / here)
                    :ARG1-of (c32-4 / have-quant-91
                                    :ARG2 (c32-5 / much)
                                    :ARG3 (c32-1 / so))))

# ::snt so honestly long as it doesn't effect me or my life than no doesn't really bother me if other people have issues.
# ::tokens ["so", "honestly", "long", "as", "it", "does", "n't", "effect", "me", "or", "my", "life", "than", "no", "does", "n't", "really", "bother", "me", "if", "other", "people", "have", "issues", "."]
# ::lemmas ["so", "honestly", "long", "as", "it", "do", "not", "effect", "i", "or", "my", "life", "than", "no", "do", "not", "really", "bother", "i", "if", "other", "people", "have", "issue", "."]
(c33-4 / bother-01
       :ARG0 (c33-7 / it)
       :ARG1 (c33-10 / i)
       :ARG1-of (c33-9 / real-04)
       :condition (c33-1 / issue-02
                         :ARG0 (c33-8 / person
                                      :mod (c33-5 / other)))
       :condition (c33-11 / as-long-as
                          :op1 (c33-6 / affect-01
                                      :ARG0 c33-7
                                      :ARG1 (c33-2 / or
                                                   :op1 c33-10
                                                   :op2 (c33-3 / life
                                                               :poss c33-10))
                                      :polarity -))
       :ARG1-of (c33-0 / honest-01)
       :polarity -)

# ::snt . yep. pretty much true. cc
# ::tokens [".", "yep", ".", "pretty", "much", "true", ".", "cc"]
# ::lemmas [".", "yep", ".", "pretty", "much", "true", ".", "cc"]
(c34-1 / multi-sentence
       :snt1 (c34-0 / yep)
       :snt2 (c34-4 / true-01
                    :degree (c34-3 / pretty-much))
       :snt3 (c34-5 / person
                    :name (c34-2 / name
                                 :op1 "cc")))

# ::snt makes sense even if cop didn't know about the robbery. Why would the kid have a box of cigars? Stop him &amp; find out
# ::tokens ["makes", "sense", "even", "if", "cop", "did", "n't", "know", "about", "the", "robbery", ".", "Why", "would", "the", "kid", "have", "a", "box", "of", "cigars", "?", "Stop", "him", "&", "amp", ";", "find", "out"]
# ::lemmas ["make", "sense", "even", "if", "cop", "do", "not", "know", "about", "the", "robbery", ".", "why", "would", "the", "kid", "have", "a", "box", "of", "cigar", "?", "stop", "he", "&", "amp", ";", "find", "out"]
(c35-3 / multi-sentence
       :snt1 (c35-14 / sense-02
                     :concession (c35-5 / even-if
                                        :op1 (c35-15 / know-01
                                                     :ARG0 (c35-11 / cop)
                                                     :ARG1 (c35-10 / rob-01)
                                                     :polarity -)))
       :snt2 (c35-0 / have-03
                    :ARG0 (c35-6 / kid)
                    :ARG1 (c35-4 / box
                                 :ARG0-of (c35-12 / contain-01
                                                  :ARG1 (c35-13 / cigar)))
                    :ARG1-of (c35-17 / cause-01
                                     :ARG0 (c35-16 / amr-unknown)))
       :snt3 (c35-8 / and
                    :op1 (c35-7 / stop-01
                                :ARG0 (c35-1 / you)
                                :ARG1 c35-8
                                :op1 c35-6
                                :op2 (c35-9 / amp)
                                :mode imperative))
       :op2 (c35-2 / find-out-03
                   :ARG0 c35-1
                   :mode imperative))

# ::snt the answer to your question is "Yes, Constantly"
# ::tokens ["the", "answer", "to", "your", "question", "is", "\"", "Yes", ",", "Constantly", "\""]
# ::lemmas ["the", "answer", "to", "your", "question", "be", "\"", "yes", ",", "constantly", "\""]
(c36-4 / answer-01
       :ARG1 (c36-1 / question-01
                    :ARG0 (c36-0 / you))
       :ARG2 (c36-3 / yes
                    :manner (c36-2 / constant)))

# ::snt who cares? Not a of u knew the kid or family, zero effect on your lives ZERO!!!!
# ::tokens ["who", "cares", "?", "Not", "a", "of", "u", "knew", "the", "kid", "or", "family", ",", "zero", "effect", "on", "your", "lives", "ZERO", "!", "!", "!", "!"]
# ::lemmas ["who", "care", "?", "not", "a", "of", "u", "know", "the", "kid", "or", "family", ",", "zero", "effect", "on", "your", "life", "ZERO", "!", "!", "!", "!"]
(c37-2 / multi-sentence
       :snt1 (c37-8 / care-01
                    :ARG0 (c37-11 / amr-unknown))
       :snt2 (c37-6 / and
                    :op1 (c37-10 / know-02
                                 :ARG0 (c37-0 / you)
                                 :ARG1 (c37-4 / or
                                              :op1 (c37-5 / kid)
                                              :op2 (c37-1 / family))
                                 :polarity -)
                    :op2 (c37-7 / affect-01
                                :ARG1 (c37-3 / life
                                             :poss (c37-9 / you))
                                :quant 0)))

# ::snt I think this is chapter of the playbook
# ::tokens ["I", "think", "this", "is", "chapter", "of", "the", "playbook"]
# ::lemmas ["i", "think", "this", "be", "chapter", "of", "the", "playbook"]
(c38-5 / think-01
       :ARG0 (c38-1 / i)
       :ARG1 (c38-3 / chapter
                    :part-of (c38-0 / book
                                    :name (c38-2 / name
                                                 :op1 " playbook"))
                    :domain (c38-4 / this)))

# ::snt : Is the Police Chief in changing the story? can they just _stop_ already????
# ::tokens [":", "Is", "the", "Police", "Chief", "in", "changing", "the", "story", "?", "can", "they", "just", "_", "stop", "_", "already", "?", "?", "?", "?"]
# ::lemmas [":", "be", "the", "Police", "Chief", "in", "change", "the", "story", "?", "can", "they", "just", "_", "stop", "_", "already", "?", "?", "?", "?"]
(c39-2 / multi-sentence
       :snt1 (c39-9 / change-01
                    :ARG0 (c39-7 / person
                                 :ARG0-of (c39-0 / have-org-role-91
                                                 :ARG1 (c39-12 / police)
                                                 :ARG2 (c39-8 / chief)))
                    :ARG1 (c39-10 / story)
                    :polarity (c39-13 / amr-unknown))
       :snt2 (c39-3 / possible-01
                    :ARG1 (c39-4 / stop-01
                                 :ARG0 (c39-11 / they)
                                 :time (c39-5 / already)
                                 :mod (c39-1 / just))
                    :polarity (c39-6 / amr-unknown)))

# ::snt He changed the story five hours ago. , Brown Family Says!
# ::tokens ["He", "changed", "the", "story", "five", "hours", "ago", ".", ",", "Brown", "Family", "Says", "!"]
# ::lemmas ["he", "change", "the", "story", "five", "hours", "ago", ".", ",", "Brown", "Family", "Says", "!"]
(c40-7 / say-01
       :ARG0 (c40-1 / family
                    :name (c40-4 / name
                                 :op1 "Brown"))
       :ARG1 (c40-6 / change-01
                    :ARG0 (c40-0 / he)
                    :ARG1 (c40-3 / story)
                    :time (c40-2 / before
                                 :op1 (c40-5 / now)
                                 :quant (c40-8 / temporal-quantity
                                               :unit (c40-9 / hour)
                                               :quant 5))))

# ::snt u don't either my friend I just admit it. Like i said your not losing sleep, your not donating, not doing anything but.....
# ::tokens ["u", "do", "n't", "either", "my", "friend", "I", "just", "admit", "it", ".", "Like", "i", "said", "your", "not", "losing", "sleep", ",", "your", "not", "donating", ",", "not", "doing", "anything", "but", "....."]
# ::lemmas ["u", "do", "not", "either", "my", "friend", "i", "just", "admit", "it", ".", "like", "i", "say", "your", "not", "lose", "sleep", ",", "your", "not", "donate", ",", "not", "do", "anything", "but", "....."]
(c41-3 / multi-sentence
       :snt1 (c41-6 / say-01
                    :ARG0 (c41-16 / i)
                    :ARG1 (c41-5 / do-02
                                 :ARG0 (c41-18 / you)
                                 :ARG1 (c41-7 / anything)
                                 :polarity -)
                    :ARG2 (c41-4 / person
                                 :ARG0-of (c41-8 / have-rel-role-91
                                                 :ARG1 c41-16
                                                 :ARG2 (c41-9 / friend))))
       :snt2 (c41-15 / admit-01
                     :ARG0 (c41-17 / i)
                     :ARG1 (c41-2 / it)
                     :mod (c41-0 / just))
       :snt3 (c41-13 / resemble-01
                     :ARG2 (c41-11 / say-01
                                   :ARG0 (c41-20 / i)
                                   :ARG1 (c41-12 / and
                                                 :op1 (c41-10 / lose-02
                                                              :ARG0 (c41-21 / you)
                                                              :ARG1 (c41-19 / sleep-01
                                                                            :ARG0 c41-21)
                                                              :polarity -)
                                                 :op2 (c41-1 / donate-01
                                                             :ARG0 c41-21
                                                             :polarity -)
                                                 :op3 (c41-14 / do-02
                                                              :ARG0 c41-21
                                                              :ARG1 c41-7
                                                              :polarity -)))))

# ::snt It doesn't matter what he did. Nothing in the realm of possiblities justifies him being shot + times
# ::tokens ["It", "does", "n't", "matter", "what", "he", "did", ".", "Nothing", "in", "the", "realm", "of", "possiblities", "justifies", "him", "being", "shot", "+", "times"]
# ::lemmas ["it", "do", "not", "matter", "what", "he", "do", ".", "nothing", "in", "the", "realm", "of", "possiblitie", "justify", "he", "be", "shoot", "+", "time"]
(c42-2 / multi-sentence
       :snt1 (c42-4 / matter-01
                    :ARG1 (c42-10 / thing
                                  :ARG1-of (c42-5 / do-02
                                                  :ARG0 (c42-0 / he)))
                    :polarity -)
       :snt2 (c42-1 / justify-01
                    :ARG0 (c42-3 / nothing
                                 :prep-in (c42-6 / realm
                                                 :mod c42-10
                                                 :ARG1-of (c42-7 / possible-01))))
       :ARG1 (c42-9 / shoot-02
                    :ARG1 (c42-11 / he)
                    :frequency (c42-8 / times)))
