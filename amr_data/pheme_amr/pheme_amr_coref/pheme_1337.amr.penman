# ::snt check this
# ::tokens ["check", "this"]
# ::lemmas ["check", "this"]
(c1-2 / check-01
      :ARG0 (c1-1 / you)
      :ARG1 (c1-0 / this)
      :mode imperative)

# ::snt :Funny thing is, this exact idea came to mind last night. Nice to see such a good idea being put to use. :3
# ::tokens [":", "Funny", "thing", "is", ",", "this", "exact", "idea", "came", "to", "mind", "last", "night", ".", "Nice", "to", "see", "such", "a", "good", "idea", "being", "put", "to", "use", ".", ":3"]
# ::lemmas [":", "funny", "thing", "be", ",", "this", "exact", "idea", "come", "to", "mind", "last", "night", ".", "nice", "to", "see", "such", "a", "good", "idea", "be", "put", "to", "use", ".", ":3"]
(c2-2 / multi-sentence
      :snt1 (c2-11 / come-to-mind-09
                   :ARG2 (c2-6 / idea
                               :mod (c2-4 / exact)
                               :mod (c2-15 / this))
                   :time (c2-10 / date-entity
                                :dayperiod (c2-7 / night)
                                :mod (c2-0 / yesterday))
                   :mod (c2-1 / funny))
      :snt2 (c2-8 / nice-01
                  :ARG1 (c2-14 / see-01
                               :ARG1 (c2-9 / put-03
                                           :ARG1 (c2-12 / idea
                                                        :ARG1-of (c2-13 / good-02
                                                                        :degree (c2-5 / such)))
                                           :ARG2 (c2-3 / use-01
                                                       :ARG1 c2-12))))
      :snt3 3)

# ::snt : Students at Howard University show solidarity w Michael Brown and protestors in
# ::tokens [":", "Students", "at", "Howard", "University", "show", "solidarity", "w", "Michael", "Brown", "and", "protestors", "in"]
# ::lemmas [":", "student", "at", "Howard", "University", "show", "solidarity", "w", "Michael", "Brown", "and", "protestor", "in"]
(c3-7 / show-01
      :ARG0 (c3-6 / person
                  :ARG0-of (c3-3 / study-01)
                  :location (c3-1 / university
                                  :name (c3-4 / name
                                              :op1 "Howard"
                                              :op2 "University")))
      :ARG1 (c3-0 / solidarity)
      :ARG2 (c3-10 / and
                   :op1 (c3-9 / person
                              :name (c3-5 / name
                                          :op1 "Michael"
                                          :op2 "Brown"))
                   :op2 (c3-2 / person
                              :ARG0-of (c3-8 / protest-01))))

# ::snt Time to End Police Militarization Now!
# ::tokens ["Time", "to", "End", "Police", "Militarization", "Now", "!"]
# ::lemmas ["time", "to", "end", "Police", "Militarization", "now", "!"]
(c4-4 / time
      :time-of (c4-1 / end-01
                     :ARG1 (c4-0 / Militarization
                                 :mod (c4-3 / police))
                     :time (c4-2 / now)))

# ::snt So that is still usa?
# ::tokens ["So", "that", "is", "still", "usa", "?"]
# ::lemmas ["so", "that", "be", "still", "usa", "?"]
(c5-3 / cause-01
      :ARG1 (c5-0 / have-mod-91
                  :ARG1 (c5-5 / that)
                  :ARG2 (c5-2 / country
                              :name (c5-1 / name
                                          :op1 "USA"))
                  :mod (c5-4 / still)
                  :polarity (c5-6 / amr-unknown)))

# ::snt Why does this picture look like it was taken on the same day Fresh Prince of Bel Air aired it's Pilot?
# ::tokens ["Why", "does", "this", "picture", "look", "like", "it", "was", "taken", "on", "the", "same", "day", "Fresh", "Prince", "of", "Bel", "Air", "aired", "it", "'s", "Pilot", "?"]
# ::lemmas ["why", "do", "this", "picture", "look", "like", "it", "be", "take", "on", "the", "same", "day", "Fresh", "Prince", "of", "Bel", "Air", "air", "it", "be", "Pilot", "?"]
(c6-7 / cause-01
      :ARG0 (c6-11 / amr-unknown)
      :ARG1 (c6-0 / look-02
                  :ARG0 (c6-5 / picture
                              :mod (c6-9 / this))
                  :ARG1 (c6-8 / take-01
                              :ARG1 c6-5
                              :time (c6-6 / day
                                          :time-of (c6-3 / air-01
                                                         :ARG1 (c6-2 / broadcast-program
                                                                     :name (c6-4 / name
                                                                                 :op1 "Fresh"
                                                                                 :op2 "Prince"
                                                                                 :op3 "of"
                                                                                 :op4 "Bel"
                                                                                 :op5 "Air"))
                                                         :ARG2 (c6-10 / person
                                                                      :ARG0-of (c6-1 / pilot-01
                                                                                     :ARG1 c6-2)))))))
