# ::snt Cc : BREAKING: At least killed in hostage situation via
# ::tokens ["Cc", ":", "BREAKING", ":", "At", "least", "killed", "in", "hostage", "situation", "via"]
# ::lemmas ["cc", ":", "breaking", ":", "at", "least", "kill", "in", "hostage", "situation", "via"]
(c1-1 / break-13
      :ARG1 (c1-4 / report-01
                  :ARG1 (c1-6 / kill-01
                              :ARG1 (c1-3 / person
                                          :name (c1-2 / name
                                                      :op1 "Cc"))
                              :mod (c1-7 / at-least)
                              :time (c1-5 / situation
                                          :mod (c1-0 / hostage)))))

# ::snt Keep Rising up against them . protection
# ::tokens ["Keep", "Rising", "up", "against", "them", ".", "protection"]
# ::lemmas ["keep", "rise", "up", "against", "they", ".", "protection"]
(c2-1 / multi-sentence
      :snt1 (c2-5 / keep-02
                  :ARG0 (c2-0 / you)
                  :ARG1 (c2-3 / rise-01
                              :ARG1 c2-0
                              :ARG4 (c2-6 / against
                                          :op1 (c2-4 / they)))
                  :mode imperative)
      :snt2 (c2-2 / protect-01))

# ::snt Radicalism must NOT be tolerated. Deport or Shoot, before they shoot you. NO Trials Or Justice, for they do NOT know it.
# ::tokens ["Radicalism", "must", "NOT", "be", "tolerated", ".", "Deport", "or", "Shoot", ",", "before", "they", "shoot", "you", ".", "NO", "Trials", "Or", "Justice", ",", "for", "they", "do", "NOT", "know", "it", "."]
# ::lemmas ["radicalism", "must", "not", "be", "tolerate", ".", "Deport", "or", "Shoot", ",", "before", "they", "shoot", "you", ".", "NO", "Trials", "Or", "Justice", ",", "for", "they", "do", "not", "know", "it", "."]
(c3-3 / multi-sentence
      :snt1 (c3-6 / obligate-01
                  :ARG2 (c3-16 / tolerate-01
                               :ARG1 (c3-11 / political-movement
                                            :name (c3-9 / name
                                                        :op1 "Radicalism"))
                               :polarity -))
      :snt2 (c3-2 / or
                  :op1 (c3-12 / deport-01
                              :ARG0 (c3-1 / you)
                              :mode imperative)
                  :op2 (c3-15 / shoot-02
                              :ARG0 c3-1
                              :mode imperative)
                  :time (c3-5 / before
                              :op1 (c3-7 / shoot-02
                                         :ARG0 (c3-14 / they)
                                         :ARG1 c3-1)))
      :snt3 (c3-4 / or
                  :op1 (c3-10 / try-02
                              :polarity -)
                  :op2 (c3-0 / justice
                             :polarity -)
                  :ARG1-of (c3-13 / cause-01
                                  :ARG0 (c3-8 / know-01
                                              :ARG0 c3-14
                                              :ARG1 c3-4
                                              :polarity -))))

# ::snt "AlQuieda is on the run" "ISIS is a JV team". Oh wait......
# ::tokens ["\"", "AlQuieda", "is", "on", "the", "run", "\"", "\"", "ISIS", "is", "a", "JV", "team", "\"", ".", "Oh", "wait", "......"]
# ::lemmas ["\"", "AlQuieda", "be", "on", "the", "run", "\"", "\"", "ISIS", "be", "a", "JV", "team", "\"", ".", "oh", "wait", "......"]
(c4-2 / multi-sentence
      :snt1 (c4-7 / run-08
                  :ARG1 (c4-8 / criminal-organization
                              :name (c4-4 / name
                                          :op1 "AlQuieda")))
      :snt2 (c4-11 / team
                   :mod (c4-6 / military
                              :name (c4-5 / name
                                          :op1 "JV"))
                   :domain (c4-9 / criminal-organization
                                 :name (c4-10 / name
                                              :op1 "ISI")))
      :snt3 (c4-0 / wait-01
                  :ARG1 (c4-1 / you)
                  :mod (c4-3 / oh)))

# ::snt okiee time for me to leave paris now RT : BREAKING: At least killed in hostage situation via
# ::tokens ["okiee", "time", "for", "me", "to", "leave", "paris", "now", "RT", ":", "BREAKING", ":", "At", "least", "killed", "in", "hostage", "situation", "via"]
# ::lemmas ["okiee", "time", "for", "i", "to", "leave", "paris", "now", "RT", ":", "breaking", ":", "at", "least", "kill", "in", "hostage", "situation", "via"]
(c5-2 / multi-sentence
      :snt1 (c5-12 / time
                   :time-of (c5-1 / leave-11
                                  :ARG0 (c5-5 / i)
                                  :ARG1 (c5-9 / paris)
                                  :time (c5-7 / now))
                   :ARG1-of (c5-4 / okay-04))
      :snt2 (c5-3 / break-13
                  :ARG1 (c5-6 / kill-01
                              :ARG1-of (c5-10 / cause-01
                                              :ARG0 (c5-11 / situation
                                                           :mod (c5-0 / hostage)))
                              :mod (c5-14 / at-least)
                              :medium (c5-13 / publication
                                             :name (c5-8 / name
                                                         :op1 "RT")))))

# ::snt : BREAKING: At least killed in hostage situation via when will the craziness end?
# ::tokens [":", "BREAKING", ":", "At", "least", "killed", "in", "hostage", "situation", "via", "when", "will", "the", "craziness", "end", "?"]
# ::lemmas [":", "break", ":", "at", "least", "kill", "in", "hostage", "situation", "via", "when", "will", "the", "craziness", "end", "?"]
(c6-1 / break-13
      :ARG1 (c6-2 / end-01
                  :ARG1 (c6-4 / crazy-03)
                  :time (c6-7 / amr-unknown))
      :topic (c6-6 / kill-01
                   :ARG1 (c6-0 / hostage)
                   :mod (c6-3 / at-least)
                   :location (c6-5 / situation)))

# ::snt ": BREAKING: At least killed in hostage situation via "
# ::tokens ["\"", ":", "BREAKING", ":", "At", "least", "killed", "in", "hostage", "situation", "via", "\""]
# ::lemmas ["\"", ":", "breaking", ":", "at", "least", "kill", "in", "hostage", "situation", "via", "\""]
(c7-1 / break-01
      :ARG1 (c7-5 / kill-01
                  :ARG1 (c7-3 / person)
                  :mod (c7-7 / at-least)
                  :time (c7-4 / situation
                              :mod (c7-0 / hostage))
                  :medium (c7-6 / publication
                                :name (c7-2 / name
                                            :op1 "Breitbart"))))

# ::snt Oh my god..those terrorists are awful.
# ::tokens ["Oh", "my", "god", "..", "those", "terrorists", "are", "awful", "."]
# ::lemmas ["oh", "my", "god", "..", "those", "terrorist", "be", "awful", "."]
(c8-0 / multi-sentence
      :snt1 (c8-3 / god
                  :mod (c8-1 / oh)
                  :poss (c8-2 / i))
      :snt2 (c8-6 / awful
                  :domain (c8-5 / terrorist
                                :mod (c8-4 / that))))

# ::snt awesome!!!
# ::tokens ["awesome", "!", "!", "!"]
# ::lemmas ["awesome", "!", "!", "!"]
(c9-0 / awesome-02
      :mode expressive)

# ::snt Cowards!!!
# ::tokens ["Cowards", "!", "!", "!"]
# ::lemmas ["coward", "!", "!", "!"]
(c10-0 / coward)

# ::snt : BREAKING: At least killed in hostage situation via
# ::tokens [":", "BREAKING", ":", "At", "least", "killed", "in", "hostage", "situation", "via"]
# ::lemmas [":", "break", ":", "at", "least", "kill", "in", "hostage", "situation", "via"]
(c11-1 / break-AKING
       :ARG1 (c11-5 / kill-01
                    :ARG1 (c11-2 / person)
                    :mod (c11-6 / at-least)
                    :time (c11-3 / situation
                                 :mod (c11-0 / hostage))
                    :medium (c11-4 / thing)))

# ::snt : BREAKING: At least killed in hostage situation via Peace strikes again...
# ::tokens [":", "BREAKING", ":", "At", "least", "killed", "in", "hostage", "situation", "via", "Peace", "strikes", "again", "..."]
# ::lemmas [":", "break", ":", "at", "least", "kill", "in", "hostage", "situation", "via", "peace", "strike", "again", "..."]
(c12-1 / break-AKING
       :ARG1 (c12-6 / kill-01
                    :ARG1 (c12-4 / person
                                 :mod (c12-8 / at-least))
                    :location (c12-5 / situation
                                     :mod (c12-0 / hostage))
                    :manner (c12-2 / strike-01
                                   :ARG2 (c12-7 / peace))
                    :mod (c12-3 / again)))

# ::snt Now if only the citizens had a way to protect themselves. Like...oh I don't know...a weapon? Victor or Victim!
# ::tokens ["Now", "if", "only", "the", "citizens", "had", "a", "way", "to", "protect", "themselves", ".", "Like", "...", "oh", "I", "do", "n't", "know", "...", "a", "weapon", "?", "Victor", "or", "Victim", "!"]
# ::lemmas ["now", "if", "only", "the", "citizen", "have", "a", "way", "to", "protect", "themselves", ".", "like", "...", "oh", "i", "do", "not", "know", "...", "a", "weapon", "?", "Victor", "or", "Victim", "!"]
(c13-0 / multi-sentence
       :snt1 (c13-7 / have-condition-91
                    :ARG2 (c13-6 / have-03
                                 :ARG0 (c13-18 / citizen)
                                 :ARG1 (c13-12 / way
                                               :manner-of (c13-3 / protect-01
                                                                 :ARG0 c13-18
                                                                 :ARG1 c13-18))
                                 :mod (c13-17 / only))
                    :time (c13-9 / now))
       :snt2 (c13-10 / resemble-01
                     :ARG1 (c13-1 / weapon
                                  :polarity (c13-5 / amr-unknown))
                     :ARG2 (c13-16 / or
                                   :op1 (c13-4 / person
                                               :ARG0-of (c13-2 / Victor-01))
                                   :op2 (c13-8 / person
                                               :ARG1-of (c13-13 / victimize-01)))
                     :mod (c13-11 / oh
                                  :ARG1-of (c13-15 / know-01
                                                   :ARG0 (c13-14 / i)
                                                   :polarity -)
                                  :mode expressive)))
