# ::snt looks like differernt people
# ::tokens ["looks", "like", "differernt", "people"]
# ::lemmas ["look", "like", "differernt", "people"]
(c1-2 / look-02
      :ARG1 (c1-1 / person
                  :mod (c1-0 / differ-02)))

# ::snt how can anybody be so sure that Ahmed was a devoted Muslim? Get lost with these assumptions and RT's. You don't know!
# ::tokens ["how", "can", "anybody", "be", "so", "sure", "that", "Ahmed", "was", "a", "devoted", "Muslim", "?", "Get", "lost", "with", "these", "assumptions", "and", "RT", "'s", ".", "You", "do", "n't", "know", "!"]
# ::lemmas ["how", "can", "anybody", "be", "so", "sure", "that", "Ahmed", "be", "a", "devoted", "Muslim", "?", "get", "lose", "with", "these", "assumption", "and", "RT", "'s", ".", "you", "do", "not", "know", "!"]
(c2-0 / multi-sentence
      :snt1 (c2-2 / possible-01
                  :ARG1 (c2-4 / sure-02
                              :ARG0 (c2-6 / anybody)
                              :ARG1 (c2-3 / devote-01
                                          :ARG1 (c2-5 / person
                                                      :name (c2-10 / name
                                                                   :op1 "Ahmed"))
                                          :ARG2 (c2-12 / religious-group
                                                       :name (c2-16 / name
                                                                    :op1 "Muslim")))
                              :degree (c2-9 / so))
                  :manner (c2-13 / amr-unknown))
      :snt2 (c2-7 / lose-02
                  :ARG0 (c2-15 / you)
                  :ARG1-of (c2-17 / cause-01
                                  :ARG0 (c2-11 / and
                                               :op1 (c2-19 / assume-01)
                                               :op2 (c2-8 / publication
                                                          :name (c2-1 / name
                                                                      :op1 "RT"))
                                               :mod (c2-20 / this)))
                  :mode imperative)
      :snt3 (c2-14 / know-01
                   :ARG0 (c2-18 / you)
                   :polarity -))

# ::snt its because the tweet said 'he mocked his faith'.
# ::tokens ["its", "because", "the", "tweet", "said", "'", "he", "mocked", "his", "faith", "'", "."]
# ::lemmas ["its", "because", "the", "tweet", "say", "'", "he", "mock", "his", "faith", "'", "."]
(c3-4 / cause-01
      :ARG0 (c3-5 / say-01
                  :ARG0 (c3-6 / tweet-01)
                  :ARG1 (c3-2 / mock-01
                              :ARG0 (c3-0 / he)
                              :ARG1 (c3-1 / faith
                                          :poss c3-0)))
      :ARG1 (c3-3 / it))

# ::snt Happiness to that beautiful baby!
# ::tokens ["Happiness", "to", "that", "beautiful", "baby", "!"]
# ::lemmas ["happiness", "to", "that", "beautiful", "baby", "!"]
(c5-0 / happy-01
      :ARG1 (c5-3 / baby
                  :mod (c5-2 / that)
                  :ARG1-of (c5-1 / beautiful-02)))

# ::snt Thank you. I've looked further and cannot satisfy myself on the issue at this point. I will continue to observe.
# ::tokens ["Thank", "you", ".", "I", "'ve", "looked", "further", "and", "can", "not", "satisfy", "myself", "on", "the", "issue", "at", "this", "point", ".", "I", "will", "continue", "to", "observe", "."]
# ::lemmas ["thank", "you", ".", "i", "'ve", "look", "far", "and", "can", "not", "satisfy", "myself", "on", "the", "issue", "at", "this", "point", ".", "i", "will", "continue", "to", "observe", "."]
(c6-2 / multi-sentence
      :snt1 (c6-13 / thank-01
                   :ARG0 (c6-7 / i)
                   :ARG1 (c6-0 / you))
      :snt2 (c6-15 / and
                   :op1 (c6-1 / look-01
                              :ARG0 (c6-10 / i)
                              :ARG1-of (c6-3 / further-01))
                   :op2 (c6-8 / possible-01
                              :ARG1 (c6-12 / satisfy-01
                                           :ARG0 c6-10
                                           :ARG1 c6-10
                                           :topic (c6-4 / issue-02))
                              :time (c6-14 / point
                                           :mod (c6-11 / this))
                              :polarity -))
      :snt3 (c6-9 / continue-01
                  :ARG0 (c6-5 / i)
                  :ARG1 (c6-6 / observe-01
                              :ARG0 c6-5)))

# ::snt This still doesn't necessarily make him out to be devout or not..
# ::tokens ["This", "still", "does", "n't", "necessarily", "make", "him", "out", "to", "be", "devout", "or", "not", ".."]
# ::lemmas ["this", "still", "do", "not", "necessarily", "make", "he", "out", "to", "be", "devout", "or", "not", ".."]
(c7-2 / make-out-23
      :ARG0 (c7-7 / this)
      :ARG1 (c7-0 / he)
      :ARG2 (c7-3 / or
                  :op1 (c7-5 / devout
                             :domain c7-0)
                  :op2 (c7-1 / devout
                             :domain c7-0
                             :polarity -))
      :ARG1-of (c7-4 / need-01)
      :mod (c7-6 / still)
      :polarity -)

# ::snt : Drove to the attack. Got out of car, approached suspects Drew his gun. Shot at gunmen | WSJ
# ::tokens [":", "Drove", "to", "the", "attack", ".", "Got", "out", "of", "car", ",", "approached", "suspects", "Drew", "his", "gun", ".", "Shot", "at", "gunmen", "|", "WSJ"]
# ::lemmas [":", "drove", "to", "the", "attack", ".", "get", "out", "of", "car", ",", "approach", "suspect", "Drew", "his", "gun", ".", "Shot", "at", "gunman", "|", "WSJ"]
(c9-0 / multi-sentence
      :snt1 (c9-10 / go-02
                   :ARG0 (c9-4 / i)
                   :ARG4 (c9-16 / attack-01))
      :snt2 (c9-3 / and
                  :op1 (c9-8 / get-05
                             :ARG0 c9-4
                             :ARG1 c9-4
                             :ARG2 (c9-1 / out-06
                                         :ARG1 c9-4
                                         :ARG2 (c9-9 / car)))
                  :op2 (c9-6 / approach-01
                             :ARG0 c9-4
                             :ARG1 (c9-7 / person
                                         :ARG2-of (c9-13 / suspect-01)))
                  :op3 (c9-11 / Drew-02
                              :ARG0 c9-4
                              :ARG1 (c9-5 / gun
                                          :poss c9-4)))
      :snt3 (c9-2 / shoot-02
                  :ARG0 (c9-12 / gunman)
                  :ARG1 (c9-14 / newspaper
                               :name (c9-15 / name
                                            :op1 "WSJ"))))

# ::snt what media hasn't been telling us?
# ::tokens ["what", "media", "has", "n't", "been", "telling", "us", "?"]
# ::lemmas ["what", "medium", "have", "not", "be", "tell", "we", "?"]
(c10-2 / tell-01
       :ARG0 (c10-1 / media)
       :ARG1 (c10-3 / amr-unknown)
       :ARG2 (c10-0 / we)
       :polarity -)

# ::snt "Ahmed Merabet, member of the cycling team (...) patrolling in the area"
# ::tokens ["\"", "Ahmed", "Merabet", ",", "member", "of", "the", "cycling", "team", "(", "...", ")", "patrolling", "in", "the", "area", "\""]
# ::lemmas ["\"", "Ahmed", "Merabet", ",", "member", "of", "the", "cycling", "team", "(", "...", ")", "patrol", "in", "the", "area", "\""]
(c11-3 / patrol-01
       :ARG0 (c11-6 / person
                    :name (c11-2 / name
                                 :op1 "Ahmed"
                                 :op2 "Merabet")
                    :ARG0-of (c11-0 / have-org-role-91
                                    :ARG1 (c11-5 / team
                                                 :purpose (c11-4 / cycle-01))
                                    :ARG2 (c11-1 / member)))
       :ARG1 (c11-7 / area))

# ::snt Well said : RIP , a Muslim police offi murdered trying to save .
# ::tokens ["Well", "said", ":", "RIP", ",", "a", "Muslim", "police", "offi", "murdered", "trying", "to", "save", "."]
# ::lemmas ["well", "say", ":", "RIP", ",", "a", "Muslim", "police", "offi", "murder", "try", "to", "save", "."]
(c12-10 / say-01
        :ARG1 (c12-13 / and
                      :op1 (c12-1 / wish-01
                                  :ARG1 (c12-8 / rest-01
                                               :ARG1 (c12-7 / person
                                                            :ARG0-of (c12-0 / have-org-role-91
                                                                            :ARG1 (c12-12 / police
                                                                                          :mod (c12-4 / religious-group
                                                                                                      :name (c12-5 / name
                                                                                                                   :op1 "Muslim")))
                                                                            :ARG2 (c12-3 / officer))
                                                            :ARG1-of (c12-2 / murder-01
                                                                            :ARG1-of (c12-11 / try-01
                                                                                             :ARG0 c12-7))
                                                            :ARG0-of c12-2)))
                      :op2 (c12-9 / die-01
                                  :ARG1 c12-7))
        :manner (c12-6 / well-09))

# ::snt Ahmed was riding his police bike and was just in the neighbourhood, at the wrong moment.
# ::tokens ["Ahmed", "was", "riding", "his", "police", "bike", "and", "was", "just", "in", "the", "neighbourhood", ",", "at", "the", "wrong", "moment", "."]
# ::lemmas ["Ahmed", "be", "ride", "his", "police", "bike", "and", "be", "just", "in", "the", "neighbourhood", ",", "at", "the", "wrong", "moment", "."]
(c13-10 / and
        :op1 (c13-7 / ride-01
                    :ARG0 (c13-6 / person
                                 :name (c13-4 / name
                                              :op1 "Ahmed"))
                    :ARG1 (c13-3 / bike
                                 :mod (c13-9 / police)
                                 :poss c13-6))
        :op2 (c13-8 / be-located-at-91
                    :ARG1 c13-6
                    :ARG2 (c13-5 / neighborhood)
                    :mod (c13-0 / just)
                    :time (c13-2 / moment
                                 :ARG1-of (c13-1 / wrong-04))))

# ::snt I can give you way more if need | All French major news websites
# ::tokens ["I", "can", "give", "you", "way", "more", "if", "need", "|", "All", "French", "major", "news", "websites"]
# ::lemmas ["i", "can", "give", "you", "way", "more", "if", "need", "|", "all", "French", "major", "news", "website"]
(c15-3 / multi-sentence
       :snt1 (c15-8 / possible-01
                    :ARG1 (c15-11 / give-01
                                  :ARG0 (c15-4 / i)
                                  :ARG1 (c15-9 / more
                                               :quant (c15-0 / way))
                                  :ARG2 (c15-1 / you)
                                  :condition (c15-6 / need-01
                                                    :ARG0 c15-1)))
       :snt2 (c15-5 / website
                    :topic (c15-7 / news)
                    :mod (c15-10 / country
                                 :name (c15-12 / name
                                               :op1 "France"))
                    :ARG1-of (c15-2 / major-02)
                    :mod (c15-13 / all)))

# ::snt He was a Muslim, what difference does it make if he was devoted or not?
# ::tokens ["He", "was", "a", "Muslim", ",", "what", "difference", "does", "it", "make", "if", "he", "was", "devoted", "or", "not", "?"]
# ::lemmas ["he", "be", "a", "Muslim", ",", "what", "difference", "do", "it", "make", "if", "he", "be", "devoted", "or", "not", "?"]
(c16-7 / and
       :op1 (c16-5 / religious-group
                   :name (c16-4 / name
                                :op1 "Muslim")
                   :domain (c16-0 / he))
       :op2 (c16-6 / differ-02
                   :ARG1 c16-5
                   :ARG3 (c16-3 / amr-unknown)
                   :condition (c16-2 / or
                                     :op1 (c16-1 / devote-01
                                                 :ARG1 c16-0)
                                     :op2 (c16-8 / devote-01
                                                 :ARG1 c16-0
                                                 :polarity -))))

# ::snt Translated from French "Patrolling on a bike"
# ::tokens ["Translated", "from", "French", "\"", "Patrolling", "on", "a", "bike", "\""]
# ::lemmas ["translate", "from", "French", "\"", "patrolling", "on", "a", "bike", "\""]
(c17-5 / translate-01
       :ARG2 (c17-3 / person
                    :ARG0-of (c17-4 / stroll-01
                                    :manner (c17-1 / bike))
                    :mod (c17-0 / language
                                :name (c17-2 / name
                                             :op1 "French"))))

# ::snt that's why so much goes wrong; assumption, prejudice and conclusions. Sorry but that's my opinion.
# ::tokens ["that", "'s", "why", "so", "much", "goes", "wrong", ";", "assumption", ",", "prejudice", "and", "conclusions", ".", "Sorry", "but", "that", "'s", "my", "opinion", "."]
# ::lemmas ["that", "be", "why", "so", "much", "go", "wrong", ";", "assumption", ",", "prejudice", "and", "conclusion", ".", "sorry", "but", "that", "be", "my", "opinion", "."]
(c18-2 / multi-sentence
       :snt1 (c18-9 / cause-01
                    :ARG0 (c18-14 / that)
                    :ARG1 (c18-10 / go-08
                                  :ARG1 (c18-7 / much
                                               :degree (c18-13 / so))
                                  :ARG2 (c18-0 / wrong-04
                                               :ARG1-of (c18-1 / mean-01
                                                               :ARG2 (c18-15 / and
                                                                             :op1 (c18-5 / assume-01)
                                                                             :op2 (c18-8 / prejudice-01)
                                                                             :op3 (c18-11 / conclude-01))))))
       :snt2 (c18-4 / sorry-01
                    :ARG1 (c18-6 / i)
                    :concession (c18-3 / opine-01
                                       :ARG0 c18-6
                                       :ARG1 (c18-12 / that))))

# ::snt "Merabet was on patrol in the neighbourhood"
# ::tokens ["\"", "Merabet", "was", "on", "patrol", "in", "the", "neighbourhood", "\""]
# ::lemmas ["\"", "Merabet", "be", "on", "patrol", "in", "the", "neighbourhood", "\""]
(c19-1 / patrol-01
       :ARG0 (c19-3 / person
                    :name (c19-0 / name
                                 :op1 "Merabet"))
       :ARG1 (c19-2 / neighborhood))

# ::snt Thank you
# ::tokens ["Thank", "you"]
# ::lemmas ["thank", "you"]
(c20-1 / thank-01
       :ARG0 (c20-2 / i)
       :ARG1 (c20-0 / you))
