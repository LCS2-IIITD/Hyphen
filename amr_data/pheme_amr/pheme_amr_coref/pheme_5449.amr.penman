# ::snt ...and that's what human nature reacts the most for... Not Very clever messing up with that. (Not justifying)
# ::tokens ["...", "and", "that", "'s", "what", "human", "nature", "reacts", "the", "most", "for", "...", "Not", "Very", "clever", "messing", "up", "with", "that", ".", "(", "Not", "justifying", ")"]
# ::lemmas ["...", "and", "that", "be", "what", "human", "nature", "react", "the", "most", "for", "...", "not", "very", "clever", "mess", "up", "with", "that", ".", "(", "not", "justify", ")"]
(c1-3 / multi-sentence
      :snt1 (c1-13 / and
                   :op2 (c1-12 / thing
                               :ARG2-of (c1-8 / react-01
                                              :ARG0 (c1-5 / nature
                                                          :mod (c1-0 / human))
                                              :ARG1 (c1-11 / that)
                                              :ARG1-of (c1-2 / have-degree-91
                                                             :ARG2 (c1-7 / most)))))
      :snt2 (c1-9 / clever-01
                  :ARG1 (c1-4 / mess-up-02
                              :ARG1 (c1-6 / that))
                  :degree (c1-10 / very)
                  :polarity -)
      :snt3 (c1-1 / justify-01
                  :polarity -))

# ::snt That is not true. You are an good example of a person who generalizes and attributes guilt by association.
# ::tokens ["That", "is", "not", "true", ".", "You", "are", "an", "good", "example", "of", "a", "person", "who", "generalizes", "and", "attributes", "guilt", "by", "association", "."]
# ::lemmas ["that", "be", "not", "true", ".", "you", "be", "an", "good", "example", "of", "a", "person", "who", "generalize", "and", "attribute", "guilt", "by", "association", "."]
(c2-1 / multi-sentence
      :snt1 (c2-9 / true-01
                  :ARG1 (c2-8 / that)
                  :polarity -)
      :snt2 (c2-2 / exemplify-01
                  :ARG0 (c2-0 / you)
                  :ARG1 (c2-5 / person
                              :ARG0-of (c2-7 / generalize-01
                                             :ARG1 (c2-6 / guilt)
                                             :manner (c2-10 / associate-01))
                              :ARG0-of (c2-3 / attribute-01)
                              :ARG1-of (c2-4 / good-02))))

# ::snt what they get !!!
# ::tokens ["what", "they", "get", "!", "!", "!"]
# ::lemmas ["what", "they", "get", "!", "!", "!"]
(c3-0 / thing
      :ARG1-of (c3-1 / get-01
                     :ARG0 (c3-2 / they)))

# ::snt indeed. Nor should it matter if they decided to make fun of only one religion.
# ::tokens ["indeed", ".", "Nor", "should", "it", "matter", "if", "they", "decided", "to", "make", "fun", "of", "only", "one", "religion", "."]
# ::lemmas ["indeed", ".", "nor", "should", "it", "matter", "if", "they", "decide", "to", "make", "fun", "of", "only", "one", "religion", "."]
(c4-1 / multi-sentence
      :snt1 (c4-3 / indeed)
      :snt2 (c4-7 / recommend-01
                  :ARG1 (c4-5 / matter-01
                              :ARG1 (c4-6 / decide-01
                                          :ARG0 (c4-8 / they)
                                          :ARG1 (c4-0 / make-fun-04
                                                      :ARG0 c4-8
                                                      :ARG1 (c4-4 / religion
                                                                  :mod (c4-2 / only)
                                                                  :quant 1))))
                  :polarity -))

# ::snt They HAVE the right. That is the point
# ::tokens ["They", "HAVE", "the", "right", ".", "That", "is", "the", "point"]
# ::lemmas ["they", "have", "the", "right", ".", "that", "be", "the", "point"]
(c5-1 / multi-sentence
      :snt1 (c5-0 / have-03
                  :ARG0 (c5-5 / they)
                  :ARG1 (c5-3 / right-05
                              :ARG1 c5-5))
      :snt2 (c5-2 / point-03
                  :ARG2 (c5-4 / that)))

# ::snt What are they doing? Picking up the dead bodies? Thanks for your support
# ::tokens ["What", "are", "they", "doing", "?", "Picking", "up", "the", "dead", "bodies", "?", "Thanks", "for", "your", "support"]
# ::lemmas ["what", "be", "they", "do", "?", "pick", "up", "the", "dead", "body", "?", "thank", "for", "your", "support"]
(c6-2 / multi-sentence
      :snt1 (c6-8 / do-02
                  :ARG0 (c6-11 / they)
                  :ARG1 (c6-12 / amr-unknown))
      :snt2 (c6-7 / pick-up-04
                  :ARG0 (c6-9 / they)
                  :ARG1 (c6-3 / body
                              :ARG1-of (c6-1 / die-01))
                  :polarity (c6-4 / amr-unknown))
      :snt3 (c6-6 / thank-01
                  :ARG0 (c6-5 / i)
                  :ARG1 (c6-0 / you)
                  :ARG2 (c6-10 / support-01
                               :ARG0 c6-0)))

# ::snt beliefs is sin to play
# ::tokens ["beliefs", "is", "sin", "to", "play"]
# ::lemmas ["belief", "be", "sin", "to", "play"]
(c7-0 / sin
      :ARG1-of (c7-1 / play-08)
      :domain (c7-2 / believe-01))

# ::snt Christian reaction: prayer
# ::tokens ["Christian", "reaction", ":", "prayer"]
# ::lemmas ["Christian", "reaction", ":", "prayer"]
(c8-2 / react-01
      :ARG0 (c8-3 / religious-group
                  :name (c8-0 / name
                              :op1 "Christian"))
      :ARG2 (c8-1 / pray-01))

# ::snt I'll bet those equally horrible Christians killed people too, right?
# ::tokens ["I", "'ll", "bet", "those", "equally", "horrible", "Christians", "killed", "people", "too", ",", "right", "?"]
# ::lemmas ["i", "'ll", "bet", "those", "equally", "horrible", "Christians", "kill", "people", "too", ",", "right", "?"]
(c9-1 / bet-01
      :ARG0 (c9-3 / i)
      :ARG2 (c9-10 / kill-01
                   :ARG0 (c9-6 / person
                               :mod (c9-7 / religious-group
                                          :name (c9-5 / name
                                                      :op1 "Christian"))
                               :mod (c9-0 / horrible
                                          :ARG2-of (c9-2 / equal-01))
                               :mod (c9-9 / that))
                   :ARG1 (c9-11 / person)
                   :mod (c9-8 / too))
      :ARG1-of (c9-4 / request-confirmation-91
                     :ARG2 c9-3))

# ::snt of course they did of course Eleanor there is only one religion that kills you for mocking them, don't deny it.
# ::tokens ["of", "course", "they", "did", "of", "course", "Eleanor", "there", "is", "only", "one", "religion", "that", "kills", "you", "for", "mocking", "them", ",", "do", "n't", "deny", "it", "."]
# ::lemmas ["of", "course", "they", "do", "of", "course", "Eleanor", "there", "be", "only", "one", "religion", "that", "kill", "you", "for", "mock", "they", ",", "do", "not", "deny", "it", "."]
(c10-10 / say-01
        :ARG0 (c10-4 / i)
        :ARG1 (c10-12 / kill-01
                      :ARG0 (c10-7 / religion
                                   :mod (c10-3 / only)
                                   :quant 1)
                      :ARG1 (c10-0 / you)
                      :ARG1-of (c10-8 / cause-01
                                      :ARG0 (c10-2 / mock-01
                                                   :ARG0 c10-0
                                                   :ARG1 (c10-11 / they)))
                      :ARG1-of (c10-9 / deny-01
                                      :ARG0 c10-0
                                      :polarity -))
        :ARG2 (c10-6 / person
                     :name (c10-5 / name
                                  :op1 "Eleanor"))
        :mod (c10-1 / of-course))

# ::snt True but most religions have a sense of humor. Islam being the exception apparently
# ::tokens ["True", "but", "most", "religions", "have", "a", "sense", "of", "humor", ".", "Islam", "being", "the", "exception", "apparently"]
# ::lemmas ["true", "but", "most", "religion", "have", "a", "sense", "of", "humor", ".", "Islam", "be", "the", "exception", "apparently"]
(c11-1 / multi-sentence
       :snt1 (c11-8 / true-01
                    :concession-of (c11-7 / sense-01
                                          :ARG0 (c11-6 / religion
                                                       :quant (c11-5 / most))
                                          :ARG1 (c11-0 / humor)))
       :snt2 (c11-2 / except-01
                    :ARG1 (c11-3 / religious-group
                                 :name (c11-4 / name
                                              :op1 "Islam"))
                    :ARG1-of (c11-9 / appear-02)))

# ::snt No, I am a person who sees things and understands. Not a person who is silent Muslim community watches quietly
# ::tokens ["No", ",", "I", "am", "a", "person", "who", "sees", "things", "and", "understands", ".", "Not", "a", "person", "who", "is", "silent", "Muslim", "community", "watches", "quietly"]
# ::lemmas ["no", ",", "i", "be", "a", "person", "who", "see", "thing", "and", "understand", ".", "not", "a", "person", "who", "be", "silent", "Muslim", "community", "watch", "quietly"]
(c12-1 / multi-sentence
       :snt1 (c12-7 / person
                    :domain (c12-5 / i)
                    :ARG0-of (c12-10 / see-01
                                     :ARG1 (c12-11 / thing))
                    :ARG0-of (c12-2 / understand-01
                                    :ARG1 c12-11))
       :snt2 (c12-0 / watch-01
                    :ARG0 (c12-9 / community
                                 :mod (c12-8 / religious-group
                                             :name (c12-6 / name
                                                          :op1 "Muslim"))
                                 :mod (c12-3 / silent))
                    :manner (c12-4 / quiet-04)
                    :polarity -))

# ::snt Do a little search and you will find doing several things to stop violence, such as police, volunteers, doctors, etc
# ::tokens ["Do", "a", "little", "search", "and", "you", "will", "find", "doing", "several", "things", "to", "stop", "violence", ",", "such", "as", "police", ",", "volunteers", ",", "doctors", ",", "etc"]
# ::lemmas ["do", "a", "little", "search", "and", "you", "will", "find", "do", "several", "thing", "to", "stop", "violence", ",", "such", "as", "police", ",", "volunteer", ",", "doctor", ",", "etc"]
(c13-2 / find-01
       :ARG0 (c13-0 / you)
       :ARG1 (c13-10 / do-02
                     :ARG1 (c13-12 / thing
                                   :quant (c13-11 / several))
                     :ARG2 (c13-6 / stop-01
                                  :ARG0 c13-12
                                  :ARG1 (c13-8 / violence))
                     :example (c13-14 / and
                                      :op1 (c13-9 / police)
                                      :op2 (c13-13 / person
                                                   :ARG0-of (c13-5 / volunteer-01))
                                      :op3 (c13-1 / doctor)
                                      :op4 (c13-7 / et-cetera)))
       :condition (c13-3 / search-01
                         :ARG0 c13-0
                         :mod (c13-4 / little)))

# ::snt Hmmm. I am not seeing it. I'll keep looking though
# ::tokens ["Hmmm", ".", "I", "am", "not", "seeing", "it", ".", "I", "'ll", "keep", "looking", "though"]
# ::lemmas ["Hmmm", ".", "i", "be", "not", "see", "it", ".", "i", "'ll", "keep", "look", "though"]
(c14-2 / multi-sentence
       :snt1 (c14-6 / see-01
                    :ARG0 (c14-4 / i)
                    :ARG1 (c14-5 / it)
                    :mod (c14-0 / hmm
                                :mode expressive)
                    :polarity -)
       :snt2 (c14-7 / keep-02
                    :ARG0 (c14-1 / i)
                    :ARG1 (c14-3 / look-01
                                 :ARG0 c14-1)
                    :ARG1-of (c14-8 / have-concession-91)))

# ::snt Let's always keep in mind that no all react with violence. We cannot condem them all, but only the
# ::tokens ["Let", "'s", "always", "keep", "in", "mind", "that", "no", "all", "react", "with", "violence", ".", "We", "can", "not", "condem", "them", "all", ",", "but", "only", "the"]
# ::lemmas ["let", "us", "always", "keep", "in", "mind", "that", "no", "all", "react", "with", "violence", ".", "we", "can", "not", "condem", "they", "all", ",", "but", "only", "the"]
(c15-1 / multi-sentence
       :snt1 (c15-13 / keep-in-mind-08
                     :ARG1 (c15-0 / we)
                     :ARG2 (c15-7 / react-01
                                  :ARG0 (c15-15 / all)
                                  :ARG2 (c15-5 / violence)
                                  :polarity -)
                     :time (c15-3 / always)
                     :mode imperative)
       :snt2 (c15-8 / contrast-01
                    :ARG1 (c15-6 / possible-01
                                 :ARG1 (c15-9 / condemn-01
                                              :ARG0 (c15-4 / we)
                                              :ARG1 (c15-12 / they
                                                            :mod (c15-10 / all)))
                                 :polarity -)
                    :ARG2 (c15-14 / possible-01
                                  :ARG1 (c15-11 / condemn-01
                                                :ARG0 c15-4
                                                :ARG1 c15-12
                                                :mod (c15-2 / only)))))

# ::snt And I'm not planning a trip to Paris over it.
# ::tokens ["And", "I", "'m", "not", "planning", "a", "trip", "to", "Paris", "over", "it", "."]
# ::lemmas ["and", "i", "be", "not", "plan", "a", "trip", "to", "Paris", "over", "it", "."]
(c16-7 / and
       :op2 (c16-2 / plan-01
                   :ARG0 (c16-0 / i)
                   :ARG1 (c16-6 / trip-03
                                :ARG0 c16-0
                                :ARG1 (c16-4 / city
                                             :name (c16-1 / name
                                                          :op1 "Paris")))
                   :ARG1-of (c16-3 / cause-01
                                   :ARG0 (c16-5 / it))
                   :polarity -))

# ::snt Don't expect these people to think logically.
# ::tokens ["Do", "n't", "expect", "these", "people", "to", "think", "logically", "."]
# ::lemmas ["do", "not", "expect", "these", "people", "to", "think", "logically", "."]
(c17-2 / expect-01
       :ARG0 (c17-0 / you)
       :ARG1 (c17-5 / think-01
                    :ARG0 (c17-3 / person
                                 :mod (c17-4 / this))
                    :manner (c17-1 / logical))
       :polarity -)

# ::snt ...Islam has a proud history of tolerance. .Barack Obama. .
# ::tokens ["...", "Islam", "has", "a", "proud", "history", "of", "tolerance", ".", ".Barack", "Obama", ".", "."]
# ::lemmas ["...", "Islam", "have", "a", "proud", "history", "of", "tolerance", ".", ".barack", "Obama", ".", "."]
(c18-1 / multi-sentence
       :snt1 (c18-0 / have-03
                    :ARG0 (c18-5 / religious-group
                                 :name (c18-2 / name
                                              :op1 "Islam"))
                    :ARG1 (c18-8 / history
                                 :ARG0-of (c18-4 / pride-01
                                                 :ARG1 (c18-6 / tolerate-01))))
       :snt2 (c18-7 / person
                    :name (c18-3 / name
                                 :op1 "Barack"
                                 :op2 "Obama")))

# ::snt Freedom of expression and thought. You of all people (displaying a poppy) should understand this.
# ::tokens ["Freedom", "of", "expression", "and", "thought", ".", "You", "of", "all", "people", "(", "displaying", "a", "poppy", ")", "should", "understand", "this", "."]
# ::lemmas ["freedom", "of", "expression", "and", "think", ".", "you", "of", "all", "people", "(", "display", "a", "poppy", ")", "should", "understand", "this", "."]
(c19-2 / multi-sentence
       :snt1 (c19-1 / free-04
                    :ARG3 (c19-13 / and
                                  :op1 (c19-4 / express-01)
                                  :op2 (c19-11 / think-01)))
       :snt2 (c19-8 / recommend-01
                    :ARG1 (c19-3 / understand-01
                                 :ARG0 (c19-0 / you
                                              :ARG1-of (c19-6 / include-91
                                                              :ARG2 (c19-7 / person
                                                                           :mod (c19-5 / all)))
                                              :ARG0-of (c19-9 / display-01
                                                              :ARG1 (c19-12 / poppy)))
                                 :ARG1 (c19-10 / this))))

# ::snt Heard go out of their way to say this today. Almost like they want identity of killers to be a question.
# ::tokens ["Heard", "go", "out", "of", "their", "way", "to", "say", "this", "today", ".", "Almost", "like", "they", "want", "identity", "of", "killers", "to", "be", "a", "question", "."]
# ::lemmas ["hear", "go", "out", "of", "their", "way", "to", "say", "this", "today", ".", "almost", "like", "they", "want", "identity", "of", "killer", "to", "be", "a", "question", "."]
(c20-1 / multi-sentence
       :snt1 (c20-9 / go-out-of-way-00
                    :ARG0 (c20-12 / they)
                    :ARG1 (c20-11 / say-01
                                  :ARG0 c20-12
                                  :ARG1 (c20-10 / this)
                                  :time (c20-6 / today)))
       :snt2 (c20-8 / resemble-01
                    :ARG1 (c20-0 / want-01
                                 :ARG0 (c20-3 / they)
                                 :ARG1 (c20-2 / question-01
                                              :ARG1 (c20-4 / identity
                                                           :poss (c20-7 / person
                                                                        :ARG0-of (c20-5 / kill-01))))
                                 :mod (c20-13 / almost))))

# ::snt And does that mean they are right? : 's latest issue. They made fun of all religions...
# ::tokens ["And", "does", "that", "mean", "they", "are", "right", "?", ":", "'s", "latest", "issue", ".", "They", "made", "fun", "of", "all", "religions", "..."]
# ::lemmas ["and", "do", "that", "mean", "they", "be", "right", "?", ":", "'s", "late", "issue", ".", "they", "make", "fun", "of", "all", "religion", "..."]
(c21-1 / multi-sentence
       :snt1 (c21-13 / and
                     :op2 (c21-8 / mean-01
                                 :polarity (c21-4 / amr-unknown)
                                 :ARG1 (c21-12 / that)
                                 :ARG2 (c21-9 / right-06
                                              :ARG1 (c21-11 / they))))
       :snt2 (c21-5 / issue-02
                    :ARG0 (c21-7 / they)
                    :mod (c21-0 / last))
       :snt3 (c21-2 / make-fun-04
                    :ARG0 (c21-3 / they)
                    :ARG1 (c21-6 / religion
                                 :mod (c21-10 / all))))

# ::snt nobody was killed over this cartoon. We can take a joke. We know our Lord is not offended.
# ::tokens ["nobody", "was", "killed", "over", "this", "cartoon", ".", "We", "can", "take", "a", "joke", ".", "We", "know", "our", "Lord", "is", "not", "offended", "."]
# ::lemmas ["nobody", "be", "kill", "over", "this", "cartoon", ".", "we", "can", "take", "a", "joke", ".", "we", "know", "our", "Lord", "be", "not", "offend", "."]
(c22-2 / multi-sentence
       :snt1 (c22-12 / kill-01
                     :ARG1 (c22-6 / nobody)
                     :ARG1-of (c22-10 / cause-01
                                      :ARG0 (c22-9 / cartoon
                                                   :mod (c22-11 / this))))
       :snt2 (c22-8 / possible-01
                    :ARG1 (c22-0 / joke-01
                                 :ARG0 (c22-1 / we)))
       :snt3 (c22-4 / know-01
                    :ARG0 (c22-5 / we)
                    :ARG1 (c22-3 / offend-01
                                 :ARG1 (c22-13 / person
                                               :name (c22-7 / name
                                                            :op1 "Lord")
                                               :poss c22-5)
                                 :polarity -)))

# ::snt Muslims do nothing to stop the purging going on in this world.
# ::tokens ["Muslims", "do", "nothing", "to", "stop", "the", "purging", "going", "on", "in", "this", "world", "."]
# ::lemmas ["Muslims", "do", "nothing", "to", "stop", "the", "purging", "go", "on", "in", "this", "world", "."]
(c23-5 / do-02
       :ARG0 (c23-3 / person
                    :mod (c23-4 / religious-group
                                :name (c23-1 / name
                                             :op1 "Muslim")))
       :ARG1 (c23-2 / nothing)
       :ARG2 (c23-7 / stop-01
                    :ARG0 c23-3
                    :ARG1 (c23-9 / purge-01
                                 :ARG1-of (c23-6 / go-on-15
                                                 :location (c23-0 / world
                                                                  :mod (c23-8 / this))))))

# ::snt It should not matter. Even if they only attacked Islam. Should not matter.
# ::tokens ["It", "should", "not", "matter", ".", "Even", "if", "they", "only", "attacked", "Islam", ".", "Should", "not", "matter", "."]
# ::lemmas ["it", "should", "not", "matter", ".", "even", "if", "they", "only", "attack", "Islam", ".", "should", "not", "matter", "."]
(c24-1 / multi-sentence
       :snt1 (c24-8 / recommend-01
                    :ARG1 (c24-7 / matter-01
                                 :ARG1 (c24-4 / it)
                                 :polarity -))
       :snt2 (c24-5 / recommend-01
                    :ARG1 (c24-0 / matter-01
                                 :ARG1 (c24-10 / attack-01
                                               :ARG0 (c24-9 / they)
                                               :ARG1 (c24-3 / religious-group
                                                            :name (c24-6 / name
                                                                         :op1 "Islam"))
                                               :mod (c24-2 / only)))))

# ::snt Who funded/armed/trained gunmen?
# ::tokens ["Who", "funded", "/", "armed", "/", "trained", "gunmen", "?"]
# ::lemmas ["who", "fund", "/", "armed", "/", "train", "gunman", "?"]
(c25-4 / slash
       :op1 (c25-0 / fund-01
                   :ARG0 (c25-6 / amr-unknown)
                   :ARG1 (c25-3 / gunman))
       :op2 (c25-1 / arm-01
                   :ARG0 (c25-2 / amr-unknown)
                   :ARG1 c25-3)
       :op3 (c25-5 / train-01
                   :ARG0 c25-2
                   :ARG2 c25-3))
