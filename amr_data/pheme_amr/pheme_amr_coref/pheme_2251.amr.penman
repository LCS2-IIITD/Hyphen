# ::snt But Uber is still a company of jackals. Hope more countries follow Spain's example.
# ::tokens ["But", "Uber", "is", "still", "a", "company", "of", "jackals", ".", "Hope", "more", "countries", "follow", "Spain", "'s", "example", "."]
# ::lemmas ["but", "Uber", "be", "still", "a", "company", "of", "jackal", ".", "hope", "more", "country", "follow", "Spain", "'s", "example", "."]
(c1-3 / multi-sentence
      :snt1 (c1-11 / contrast-01
                   :ARG2 (c1-10 / company
                                :mod (c1-0 / jackal)
                                :domain (c1-12 / company
                                               :name (c1-7 / name
                                                           :op1 "Uber"))
                                :mod (c1-13 / still)))
      :snt2 (c1-1 / hope-01
                  :ARG0 (c1-6 / i)
                  :ARG1 (c1-2 / follow-02
                              :ARG0 (c1-14 / country
                                           :quant (c1-9 / more))
                              :ARG1 (c1-5 / example
                                          :poss (c1-4 / country
                                                      :name (c1-8 / name
                                                                  :op1 "Spain"))))))

# ::snt Sound of gears crashing into reverse...
# ::tokens ["Sound", "of", "gears", "crashing", "into", "reverse", "..."]
# ::lemmas ["sound", "of", "gear", "crash", "into", "reverse", "..."]
(c2-2 / crash-01
      :ARG1 (c2-0 / sound-01
                  :ARG1 (c2-3 / gear))
      :direction (c2-1 / reverse-01))

# ::snt Uber reverses course after story, offers free rides to people in downtown Sydney. Good call
# ::tokens ["Uber", "reverses", "course", "after", "story", ",", "offers", "free", "rides", "to", "people", "in", "downtown", "Sydney", ".", "Good", "call"]
# ::lemmas ["uber", "reverse", "course", "after", "story", ",", "offer", "free", "ride", "to", "people", "in", "downtown", "Sydney", ".", "good", "call"]
(c3-1 / multi-sentence
      :snt1 (c3-15 / and
                   :op1 (c3-8 / reverse-01
                              :ARG0 (c3-9 / company
                                          :name (c3-5 / name
                                                      :op1 "Uber"))
                              :ARG1 (c3-10 / course)
                              :time (c3-3 / after
                                          :op1 (c3-13 / story)))
                   :op2 (c3-2 / offer-01
                              :ARG0 c3-9
                              :ARG1 (c3-4 / ride-01
                                          :ARG0 c3-9
                                          :ARG1 (c3-7 / person
                                                      :location (c3-11 / downtown
                                                                       :part-of (c3-12 / city
                                                                                       :name (c3-6 / name
                                                                                                   :op1 "Sydney")))
                                                      :ARG1-of (c3-0 / free-03)))))
      :snt2 (c3-16 / call-10
                   :ARG1-of (c3-14 / good-02)))

# ::snt the best practice is drivers get paid from companies who organizes uber services rather than from riders.
# ::tokens ["the", "best", "practice", "is", "drivers", "get", "paid", "from", "companies", "who", "organizes", "uber", "services", "rather", "than", "from", "riders", "."]
# ::lemmas ["the", "good", "practice", "be", "driver", "get", "pay", "from", "company", "who", "organize", "uber", "service", "rather", "than", "from", "rider", "."]
(c4-7 / practice-01
      :ARG1 (c4-14 / pay-01
                   :ARG0 (c4-9 / company
                               :ARG0-of (c4-4 / organize-01
                                              :ARG1 (c4-12 / serve-01
                                                           :mod (c4-2 / uber))
                                              :ARG1-of (c4-6 / instead-of-91
                                                             :ARG2 (c4-3 / pay-01
                                                                         :ARG0 (c4-13 / person
                                                                                      :ARG0-of (c4-8 / ride-01)
                                                                                      :ARG2-of c4-3)))))
                   :ARG2 (c4-5 / person
                               :ARG0-of (c4-10 / drive-01)))
      :ARG1-of (c4-0 / have-degree-91
                     :ARG2 (c4-11 / good-02
                                  :ARG1 c4-7)
                     :ARG3 (c4-1 / most)))

# ::snt It was an algorithm not transhumanist heartless actions by pricks gets free rides too?
# ::tokens ["It", "was", "an", "algorithm", "not", "transhumanist", "heartless", "actions", "by", "pricks", "gets", "free", "rides", "too", "?"]
# ::lemmas ["it", "be", "an", "algorithm", "not", "transhumanist", "heartless", "action", "by", "prick", "get", "free", "ride", "too", "?"]
(c5-7 / contrast-01
      :ARG1 (c5-11 / algorithm
                   :domain (c5-3 / it))
      :ARG2 (c5-8 / get-01
                  :ARG0 (c5-2 / act-02
                              :ARG0 (c5-5 / prick)
                              :mod (c5-0 / heartless)
                              :mod (c5-10 / transhumanist))
                  :ARG1 (c5-6 / ride
                              :ARG1-of (c5-1 / free-03))
                  :mod (c5-9 / too)
                  :polarity (c5-4 / amr-unknown)
                  :polarity -))

# ::snt : Uber reverses course after story, now giving free rides to people downtown .
# ::tokens [":", "Uber", "reverses", "course", "after", "story", ",", "now", "giving", "free", "rides", "to", "people", "downtown", "."]
# ::lemmas [":", "uber", "reverse", "course", "after", "story", ",", "now", "give", "free", "ride", "to", "people", "downtown", "."]
(c6-12 / and
       :op1 (c6-6 / reverse-01
                  :ARG0 (c6-7 / company
                              :name (c6-3 / name
                                          :op1 " Uber"))
                  :ARG1 (c6-8 / course)
                  :time (c6-1 / after
                              :op1 (c6-11 / story)))
       :op2 (c6-9 / give-01
                  :ARG0 c6-7
                  :ARG1 (c6-2 / ride-01
                              :ARG0 c6-7
                              :ARG1-of (c6-0 / free-03))
                  :ARG2 (c6-5 / person
                              :location (c6-10 / downtown))
                  :time (c6-4 / now)))

# ::snt Because that's what's important here.
# ::tokens ["Because", "that", "'s", "what", "'s", "important", "here", "."]
# ::lemmas ["because", "that", "be", "what", "be", "important", "here", "."]
(c7-2 / cause-01
      :ARG0 (c7-1 / important-01
                  :ARG1 (c7-4 / thing
                              :domain (c7-3 / that))
                  :location (c7-0 / here)))
