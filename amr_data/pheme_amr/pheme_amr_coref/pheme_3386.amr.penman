# ::snt just heard your description of his charges ! What is he doing on bail!! I hope you ask some tough questions to the courts!
# ::tokens ["just", "heard", "your", "description", "of", "his", "charges", "!", "What", "is", "he", "doing", "on", "bail", "!", "!", "I", "hope", "you", "ask", "some", "tough", "questions", "to", "the", "courts", "!"]
# ::lemmas ["just", "hear", "your", "description", "of", "his", "charge", "!", "what", "be", "he", "do", "on", "bail", "!", "!", "i", "hope", "you", "ask", "some", "tough", "question", "to", "the", "court", "!"]
(c1-2 / multi-sentence
      :snt1 (c1-9 / hear-01
                  :ARG0 (c1-13 / i)
                  :ARG1 (c1-4 / describe-01
                              :ARG0 (c1-16 / you)
                              :ARG1 (c1-17 / charge-05
                                           :ARG1 (c1-8 / he)))
                  :time (c1-0 / just))
      :snt2 (c1-1 / do-02
                  :ARG0 (c1-3 / he)
                  :ARG1 (c1-7 / amr-unknown)
                  :time (c1-10 / bail-out-02
                               :ARG1 c1-3))
      :snt3 (c1-15 / hope-01
                   :ARG0 (c1-14 / i)
                   :ARG1 (c1-12 / ask-01
                                :ARG0 (c1-18 / you)
                                :ARG1 (c1-11 / question-01
                                             :ARG0 c1-18
                                             :ARG1-of (c1-19 / tough-02)
                                             :quant (c1-6 / some))
                                :ARG2 (c1-5 / court))))

# ::snt This Sydney siege is very convenient for Tony Abbott
# ::tokens ["This", "Sydney", "siege", "is", "very", "convenient", "for", "Tony", "Abbott"]
# ::lemmas ["this", "Sydney", "siege", "be", "very", "convenient", "for", "Tony", "Abbott"]
(c2-4 / convenient
      :domain (c2-6 / siege-01
                    :ARG1 (c2-3 / city
                                :name (c2-0 / name
                                            :op1 "Sydney"))
                    :mod (c2-7 / this))
      :degree (c2-1 / very)
      :beneficiary (c2-2 / person
                         :name (c2-5 / name
                                     :op1 "Tony"
                                     :op2 "Abbott")))

# ::snt I hope you have released that name with careful consideration.
# ::tokens ["I", "hope", "you", "have", "released", "that", "name", "with", "careful", "consideration", "."]
# ::lemmas ["i", "hope", "you", "have", "release", "that", "name", "with", "careful", "consideration", "."]
(c3-0 / hope-01
      :ARG0 (c3-2 / i)
      :ARG1 (c3-4 / release-01
                  :ARG0 (c3-1 / you)
                  :ARG1 (c3-3 / name
                              :mod (c3-7 / that))
                  :manner (c3-5 / consider-02
                                :ARG1-of (c3-6 / care-04))))

# ::snt : : The man at the centre of the has been named as Man Haron Monis
# ::tokens [":", ":", "The", "man", "at", "the", "centre", "of", "the", "has", "been", "named", "as", "Man", "Haron", "Monis"]
# ::lemmas [":", ":", "the", "man", "at", "the", "centre", "of", "the", "have", "be", "name", "as", "Man", "Haron", "Monis"]
(c4-2 / name-02
      :ARG1 (c4-1 / man
                  :ARG1-of (c4-5 / center-02
                                 :ARG2 (c4-4 / man)))
      :ARG2 (c4-0 / man
                  :name (c4-3 / name
                              :op1 "Haron"
                              :op2 "Monis")))

# ::snt his website still exists on
# ::tokens ["his", "website", "still", "exists", "on"]
# ::lemmas ["his", "website", "still", "exist", "on"]
(c5-2 / exist-01
      :ARG1 (c5-1 / website
                  :poss (c5-0 / he))
      :mod (c5-3 / still))

# ::snt That's one word for it
# ::tokens ["That", "'s", "one", "word", "for", "it"]
# ::lemmas ["that", "be", "one", "word", "for", "it"]
(c6-0 / word
      :domain (c6-1 / that)
      :topic (c6-2 / it)
      :quant 1)

# ::snt This guy: MT : : The man at the centre of the has been named as Man Haron Monis
# ::tokens ["This", "guy", ":", "MT", ":", ":", "The", "man", "at", "the", "centre", "of", "the", "has", "been", "named", "as", "Man", "Haron", "Monis"]
# ::lemmas ["this", "guy", ":", "MT", ":", ":", "the", "man", "at", "the", "centre", "of", "the", "have", "be", "name", "as", "Man", "Haron", "Monis"]
(c7-7 / say-01
      :ARG0 (c7-6 / guy
                  :mod (c7-8 / this))
      :ARG1 (c7-1 / name-02
                  :ARG1 (c7-0 / man
                              :ARG1-of (c7-5 / center-02
                                             :ARG2 (c7-3 / man)))
                  :ARG2 (c7-4 / person
                              :name (c7-2 / name
                                          :op1 "Haron"
                                          :op2 "Monis"))))

# ::snt : : The man at the centre of the has been named as Man Haron Monis
# ::tokens [":", ":", "The", "man", "at", "the", "centre", "of", "the", "has", "been", "named", "as", "Man", "Haron", "Monis"]
# ::lemmas [":", ":", "the", "man", "at", "the", "centre", "of", "the", "have", "be", "name", "as", "Man", "Haron", "Monis"]
(c8-2 / name-02
      :ARG1 (c8-1 / man
                  :ARG1-of (c8-5 / center-02
                                 :ARG2 (c8-4 / man)))
      :ARG2 (c8-0 / man
                  :name (c8-3 / name
                              :op1 "Haron"
                              :op2 "Monis")))

# ::snt This man proves how lawless Australian laws are. To be accused of all he has and still he walks free, absolutely crazy.
# ::tokens ["This", "man", "proves", "how", "lawless", "Australian", "laws", "are", ".", "To", "be", "accused", "of", "all", "he", "has", "and", "still", "he", "walks", "free", ",", "absolutely", "crazy", "."]
# ::lemmas ["this", "man", "prove", "how", "lawless", "Australian", "law", "be", ".", "to", "be", "accuse", "of", "all", "he", "have", "and", "still", "he", "walk", "free", ",", "absolutely", "crazy", "."]
(c9-3 / multi-sentence
      :snt1 (c9-9 / prove-01
                  :ARG0 (c9-10 / man
                               :mod (c9-16 / this))
                  :ARG1 (c9-2 / law
                              :manner-of (c9-13 / law
                                                :mod (c9-11 / country
                                                            :name (c9-7 / name
                                                                        :op1 "Australia"))
                                                :polarity -)))
      :snt2 (c9-12 / crazy-03
                   :ARG1 (c9-0 / he)
                   :degree (c9-17 / absolute)
                   :condition (c9-6 / and
                                    :op1 (c9-8 / accuse-01
                                               :ARG1 c9-0
                                               :ARG2 (c9-15 / all
                                                            :ARG1-of (c9-4 / have-03
                                                                           :ARG0 c9-0)))
                                    :op2 (c9-1 / walk-01
                                               :ARG0 c9-0
                                               :manner (c9-5 / free-04
                                                             :ARG1 c9-0)
                                               :mod (c9-14 / still)))))

# ::snt I hope the outcome will be peaceful
# ::tokens ["I", "hope", "the", "outcome", "will", "be", "peaceful"]
# ::lemmas ["i", "hope", "the", "outcome", "will", "be", "peaceful"]
(c10-0 / hope-01
       :ARG0 (c10-3 / i)
       :ARG1 (c10-1 / peaceful
                    :domain (c10-2 / outcome)))

# ::snt : : The man at the centre of the has been named as Man Haron Monis
# ::tokens [":", ":", "The", "man", "at", "the", "centre", "of", "the", "has", "been", "named", "as", "Man", "Haron", "Monis"]
# ::lemmas [":", ":", "the", "man", "at", "the", "centre", "of", "the", "have", "be", "name", "as", "Man", "Haron", "Monis"]
(c11-2 / name-02
       :ARG1 (c11-1 / man
                    :ARG1-of (c11-5 / center-02
                                    :ARG2 (c11-4 / man)))
       :ARG2 (c11-0 / man
                    :name (c11-3 / name
                                 :op1 "Haron"
                                 :op2 "Monis")))

# ::snt this should shame our justice system
# ::tokens ["this", "should", "shame", "our", "justice", "system"]
# ::lemmas ["this", "should", "shame", "our", "justice", "system"]
(c12-3 / recommend-01
       :ARG1 (c12-4 / shame-02
                    :ARG0 (c12-5 / this)
                    :ARG1 (c12-2 / system
                                 :mod (c12-0 / justice)
                                 :poss (c12-1 / we))))

# ::snt : : The man at the centre of the has been named as Man Haron Monis
# ::tokens [":", ":", "The", "man", "at", "the", "centre", "of", "the", "has", "been", "named", "as", "Man", "Haron", "Monis"]
# ::lemmas [":", ":", "the", "man", "at", "the", "centre", "of", "the", "have", "be", "name", "as", "Man", "Haron", "Monis"]
(c13-2 / name-02
       :ARG1 (c13-1 / man
                    :ARG1-of (c13-5 / center-02
                                    :ARG2 (c13-4 / man)))
       :ARG2 (c13-0 / man
                    :name (c13-3 / name
                                 :op1 "Haron"
                                 :op2 "Monis")))
