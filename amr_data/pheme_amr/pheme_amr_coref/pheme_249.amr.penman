# ::snt It's guaranteed in Oz that NO ONE in a crowd in public will be carrying, concealed or otherwise.
# ::tokens ["It", "'s", "guaranteed", "in", "Oz", "that", "NO", "ONE", "in", "a", "crowd", "in", "public", "will", "be", "carrying", ",", "concealed", "or", "otherwise", "."]
# ::lemmas ["it", "be", "guarantee", "in", "Oz", "that", "no", "one", "in", "a", "crowd", "in", "public", "will", "be", "carry", ",", "conceal", "or", "otherwise", "."]
(c1-8 / guarantee-01
      :ARG1 (c1-1 / or
                  :op1 (c1-7 / carry-01
                             :ARG0 (c1-3 / no-one
                                         :ARG1-of (c1-2 / include-91
                                                        :ARG2 (c1-6 / crowd
                                                                    :ARG1-of (c1-5 / public-02)))))
                  :op2 (c1-9 / conceal-01
                             :ARG0 c1-3)
                  :op3 (c1-10 / conceal-01
                              :ARG0 c1-3
                              :polarity -))
      :location (c1-0 / city
                      :name (c1-4 / name
                                  :op1 "Oz")))

# ::snt you don't mean that even if they take all guns away, criminals can still get them? I'm aghast!
# ::tokens ["you", "do", "n't", "mean", "that", "even", "if", "they", "take", "all", "guns", "away", ",", "criminals", "can", "still", "get", "them", "?", "I", "'m", "aghast", "!"]
# ::lemmas ["you", "do", "not", "mean", "that", "even", "if", "they", "take", "all", "gun", "away", ",", "criminal", "can", "still", "get", "they", "?", "i", "be", "aghast", "!"]
(c2-1 / multi-sentence
      :snt1 (c2-6 / mean-01
                  :ARG0 (c2-0 / you)
                  :ARG2 (c2-7 / possible-01
                              :ARG1 (c2-9 / get-01
                                          :ARG0 (c2-14 / person
                                                       :ARG2-of (c2-8 / criminal-03))
                                          :ARG1 (c2-10 / gun
                                                       :mod (c2-15 / all))
                                          :mod (c2-12 / still))
                              :concession (c2-2 / even-if
                                                :op1 (c2-13 / take-away-05
                                                            :ARG0 (c2-11 / they)
                                                            :ARG1 c2-10)))
                  :polarity (c2-3 / amr-unknown)
                  :polarity -)
      :snt2 (c2-5 / astound-01
                  :ARG0 (c2-4 / i)))

# ::snt they are not banned in Australia, they do have strict rules though.
# ::tokens ["they", "are", "not", "banned", "in", "Australia", ",", "they", "do", "have", "strict", "rules", "though", "."]
# ::lemmas ["they", "be", "not", "ban", "in", "Australia", ",", "they", "do", "have", "strict", "rule", "though", "."]
(c3-4 / contrast-01
      :ARG1 (c3-1 / ban-01
                  :ARG1 (c3-7 / they)
                  :location (c3-3 / country
                                  :name (c3-2 / name
                                              :op1 "Australia"))
                  :polarity -)
      :ARG2 (c3-0 / have-03
                  :ARG0 c3-7
                  :ARG1 (c3-5 / rule
                              :mod (c3-6 / strict))
                  :ARG1-of (c3-8 / have-concession-91)))

# ::snt omg you're so stupid, guns aren't banned here
# ::tokens ["omg", "you", "'re", "so", "stupid", ",", "guns", "are", "n't", "banned", "here"]
# ::lemmas ["omg", "you", "be", "so", "stupid", ",", "gun", "be", "not", "ban", "here"]
(c4-6 / stupid
      :domain (c4-1 / you)
      :ARG0-of (c4-4 / cause-01
                     :ARG1 (c4-2 / ban-01
                                 :ARG1 (c4-5 / gun)
                                 :location (c4-0 / here)
                                 :polarity -))
      :mod (c4-3 / oh-my-god
                 :mode expressive))

# ::snt Latest update; in Doylestown
# ::tokens ["Latest", "update", ";", "in", "Doylestown"]
# ::lemmas ["late", "update", ";", "in", "Doylestown"]
(c5-3 / update-02
      :mod (c5-1 / last)
      :location (c5-2 / city
                      :name (c5-0 / name
                                  :op1 "Doylestown")))

# ::snt :Considering that libtards START from "nuts", it's a short trip
# ::tokens [":", "Considering", "that", "libtards", "START", "from", "\"", "nuts", "\"", ",", "it", "'s", "a", "short", "trip"]
# ::lemmas [":", "consider", "that", "libtard", "START", "from", "\"", "nuts", "\"", ",", "it", "be", "a", "short", "trip"]
(c6-6 / trip-03
      :ARG1-of (c6-5 / short-07)
      :condition (c6-4 / consider-01
                       :ARG1 (c6-1 / start-01
                                   :ARG0 (c6-3 / person
                                               :ARG1-of (c6-0 / liberal-02))
                                   :ARG2 (c6-2 / nut))))

# ::snt Terrorists always attack where there is a No Gun Zone!
# ::tokens ["Terrorists", "always", "attack", "where", "there", "is", "a", "No", "Gun", "Zone", "!"]
# ::lemmas ["terrorist", "always", "attack", "where", "there", "be", "a", "No", "Gun", "Zone", "!"]
(c7-4 / attack-01
      :ARG0 (c7-3 / terrorist)
      :time (c7-1 / always)
      :location (c7-0 / zone
                      :mod (c7-2 / gun)
                      :polarity -))

# ::snt not disagreeing at all. Just fundamentally not "banned".
# ::tokens ["not", "disagreeing", "at", "all", ".", "Just", "fundamentally", "not", "\"", "banned", "\"", "."]
# ::lemmas ["not", "disagree", "at", "all", ".", "just", "fundamentally", "not", "\"", "ban", "\"", "."]
(c8-2 / multi-sentence
      :snt1 (c8-4 / disagree-01
                  :degree (c8-5 / at-all)
                  :polarity -)
      :snt2 (c8-3 / ban-01
                  :mod (c8-1 / fundamental)
                  :mod (c8-0 / just)
                  :polarity -))

# ::snt Being miles from those locations, I'm glad I have my arms just in case.
# ::tokens ["Being", "miles", "from", "those", "locations", ",", "I", "'m", "glad", "I", "have", "my", "arms", "just", "in", "case", "."]
# ::lemmas ["be", "mile", "from", "those", "location", ",", "i", "be", "glad", "i", "have", "my", "arm", "just", "in", "case", "."]
(c9-8 / glad-02
      :ARG0 (c9-0 / have-03
                  :ARG0 (c9-4 / i
                              :part (c9-11 / arm
                                           :ARG1-of c9-0))
                  :ARG1-of (c9-7 / cause-01
                                 :ARG0 (c9-3 / be-located-at-91
                                             :ARG1 c9-11
                                             :ARG2 (c9-6 / relative-position
                                                         :op1 (c9-1 / location
                                                                    :mod (c9-10 / that))
                                                         :quant (c9-2 / multiple
                                                                      :op1 (c9-9 / distance-quantity
                                                                                 :unit (c9-5 / mile)
                                                                                 :quant 1))))))
      :ARG1 c9-4)

# ::snt ... they're visibly armed and have taken hostages is NOT foolish. It's responsible.
# ::tokens ["...", "they", "'re", "visibly", "armed", "and", "have", "taken", "hostages", "is", "NOT", "foolish", ".", "It", "'s", "responsible", "."]
# ::lemmas ["...", "they", "be", "visibly", "armed", "and", "have", "take", "hostage", "be", "not", "foolish", ".", "it", "be", "responsible", "."]
(c10-2 / multi-sentence
       :snt1 (c10-1 / foolish
                    :domain (c10-9 / and
                                   :op1 (c10-3 / arm-01
                                               :ARG1 (c10-8 / they)
                                               :ARG1-of (c10-7 / see-01
                                                               :ARG0 c10-8))
                                   :op2 (c10-6 / take-01
                                               :ARG0 c10-8
                                               :ARG1 (c10-0 / hostage)))
                    :polarity -)
       :snt2 (c10-5 / responsible-01
                    :ARG0 (c10-4 / it)))

# ::snt :'(
# ::tokens [":'("]
# ::lemmas [":'("]
(c11-0 / amr-empty)

# ::snt Mmm hmmm. And million times a year a gun is used in the US to prevent a crime.
# ::tokens ["Mmm", "hmmm", ".", "And", "million", "times", "a", "year", "a", "gun", "is", "used", "in", "the", "US", "to", "prevent", "a", "crime", "."]
# ::lemmas ["mmm", "hmmm", ".", "and", "million", "time", "a", "year", "a", "gun", "be", "use", "in", "the", "US", "to", "prevent", "a", "crime", "."]
(c12-2 / multi-sentence
       :snt1 (c12-0 / hmm
                    :mode expressive)
       :snt2 (c12-11 / and
                     :op2 (c12-3 / use-01
                                 :ARG1 (c12-8 / gun)
                                 :ARG2 (c12-5 / prevent-01
                                              :ARG1 (c12-7 / crime-02))
                                 :frequency (c12-6 / rate-entity-91
                                                   :ARG2 (c12-10 / temporal-quantity
                                                                 :unit (c12-1 / year)
                                                                 :quant 1)
                                                   :ARG1 1000000)
                                 :location (c12-9 / country
                                                  :name (c12-4 / name
                                                               :op1 "US")))))

# ::snt LOLz!! You make that up?!?*scribbles note*
# ::tokens ["LOLz", "!", "!", "You", "make", "that", "up?!?*scribbles", "note", "*"]
# ::lemmas ["lolz", "!", "!", "you", "make", "that", "up?!?*scribbles", "note", "*"]
(c13-2 / multi-sentence
       :snt1 (c13-1 / laugh-01
                    :manner (c13-5 / loud)
                    :mode expressive)
       :snt2 (c13-4 / make-up-10
                    :ARG0 (c13-0 / you)
                    :ARG1 (c13-7 / that)
                    :polarity (c13-8 / amr-unknown))
       :snt3 (c13-3 / note-01
                    :ARG1-of (c13-6 / scribble-01)))

# ::snt Remember: If it all goes sideways, it's better to be judged by than carried by .
# ::tokens ["Remember", ":", "If", "it", "all", "goes", "sideways", ",", "it", "'s", "better", "to", "be", "judged", "by", "than", "carried", "by", "."]
# ::lemmas ["remember", ":", "if", "it", "all", "go", "sideways", ",", "it", "be", "well", "to", "be", "judge", "by", "than", "carry", "by", "."]
(c14-5 / remember-01
       :ARG0 (c14-1 / you)
       :ARG1 (c14-0 / have-degree-91
                    :ARG1 (c14-2 / judge-01
                                 :manner (c14-6 / carry-01))
                    :ARG2 (c14-7 / good-02
                                 :ARG1 c14-2)
                    :ARG3 (c14-3 / more)
                    :ARG4 (c14-10 / judge-01
                                  :manner c14-6))
       :condition (c14-8 / go-01
                         :ARG1 (c14-4 / it
                                      :mod (c14-11 / all))
                         :ARG2 (c14-9 / sideways))
       :mode imperative)

# ::snt And you're foolishly assuming. Of course not.But an armed bad guy w/ hostages? Yep.
# ::tokens ["And", "you", "'re", "foolishly", "assuming", ".", "Of", "course", "not", ".", "But", "an", "armed", "bad", "guy", "w/", "hostages", "?", "Yep", "."]
# ::lemmas ["and", "you", "be", "foolishly", "assume", ".", "of", "course", "not", ".", "but", "an", "armed", "bad", "guy", "w/", "hostage", "?", "yep", "."]
(c15-3 / multi-sentence
       :snt1 (c15-13 / and
                     :op2 (c15-7 / assume-02
                                 :ARG0 (c15-1 / you)
                                 :manner (c15-2 / foolish)))
       :snt2 (c15-0 / have-polarity-91
                    :mod (c15-6 / of-course)
                    :ARG1-of (c15-10 / contrast-01
                                     :ARG2 (c15-11 / guy
                                                   :ARG1-of (c15-5 / bad-07)
                                                   :ARG1-of (c15-8 / arm-01)
                                                   :ARG0-of (c15-4 / have-03
                                                                   :ARG1 (c15-9 / hostage))))
                    :polarity (c15-12 / amr-unknown)
                    :ARG2 -))

# ::snt If you really don't get that, maybe it's best Australia IS disarmed!We're different
# ::tokens ["If", "you", "really", "do", "n't", "get", "that", ",", "maybe", "it", "'s", "best", "Australia", "IS", "disarmed!We're", "different"]
# ::lemmas ["if", "you", "really", "do", "not", "get", "that", ",", "maybe", "it", "be", "good", "Australia", "be", "disarmed!we're", "different"]
(c16-4 / multi-sentence
       :snt1 (c16-6 / possible-01
                    :ARG1 (c16-9 / good-02
                                 :ARG1 (c16-7 / disarm-01
                                              :ARG1 (c16-8 / country
                                                           :name (c16-5 / name
                                                                        :op1 "Australia")))
                                 :ARG2-of (c16-0 / have-degree-91
                                                 :ARG1 c16-7
                                                 :ARG3 (c16-10 / most)))
                    :condition (c16-11 / get-30
                                       :ARG0 (c16-1 / you)
                                       :ARG1 (c16-13 / that)
                                       :ARG1-of (c16-12 / real-04)
                                       :polarity -))
       :snt2 (c16-2 / differ-02
                    :ARG1 (c16-3 / we)))

# ::snt I realise that dear, I compete &amp; am an SSAA member here
# ::tokens ["I", "realise", "that", "dear", ",", "I", "compete", "&", "amp", ";", "am", "an", "SSAA", "member", "here"]
# ::lemmas ["i", "realise", "that", "dear", ",", "i", "compete", "&", "amp", ";", "be", "an", "SSAA", "member", "here"]
(c17-2 / multi-sentence
       :snt1 (c17-9 / realize-01
                    :ARG0 (c17-6 / i)
                    :ARG1 (c17-13 / that)
                    :mod (c17-10 / dear))
       :snt2 (c17-14 / and
                     :op1 (c17-11 / compete-01
                                  :ARG0 (c17-12 / i))
                     :op2 (c17-5 / amp))
       :snt3 (c17-0 / have-org-role-91
                    :ARG0 (c17-1 / i)
                    :ARG1 (c17-4 / organization
                                 :name (c17-7 / name
                                              :op1 "SSAA"))
                    :ARG2 (c17-8 / member)
                    :location (c17-3 / here)))

# ::snt Oh gosh, I know exactly what you mean &amp;Talk to them long enough they'll drive u nuts
# ::tokens ["Oh", "gosh", ",", "I", "know", "exactly", "what", "you", "mean", "&", "amp;Talk", "to", "them", "long", "enough", "they", "'ll", "drive", "u", "nuts"]
# ::lemmas ["oh", "gosh", ",", "i", "know", "exactly", "what", "you", "mean", "&", "amp;talk", "to", "they", "long", "enough", "they", "'ll", "drive", "u", "nut"]
(c18-3 / multi-sentence
       :snt1 (c18-8 / know-01
                    :ARG0 (c18-7 / i)
                    :ARG1 (c18-14 / thing
                                  :ARG2-of (c18-11 / mean-01
                                                   :ARG0 (c18-1 / you))
                                  :mod (c18-6 / exact))
                    :mod (c18-5 / oh-gosh
                                :mode expressive))
       :snt2 (c18-13 / talk-01
                     :ARG0 (c18-15 / you)
                     :ARG2 (c18-10 / they)
                     :ARG1-of (c18-0 / have-degree-91
                                     :ARG2 (c18-2 / long-03
                                                  :ARG1 c18-13)
                                     :ARG3 (c18-4 / enough)
                                     :ARG6 (c18-12 / drive-02
                                                   :ARG0 c18-10
                                                   :ARG1 c18-15
                                                   :ARG2 (c18-9 / nuts
                                                                :domain c18-15)))
                     :mode imperative))

# ::snt Nuttier than squirrel turds...
# ::tokens ["Nuttier", "than", "squirrel", "turds", "..."]
# ::lemmas ["Nuttier", "than", "squirrel", "turd", "..."]
(c19-0 / have-degree-91
       :ARG2 (c19-2 / nasty)
       :ARG3 (c19-1 / more)
       :ARG4 (c19-4 / turd
                    :source (c19-3 / squirrel)))

# ::snt rewind, man walks in armed = armed citizen shoots, bomb doesn't go off or get set?
# ::tokens ["rewind", ",", "man", "walks", "in", "armed", "=", "armed", "citizen", "shoots", ",", "bomb", "does", "n't", "go", "off", "or", "get", "set", "?"]
# ::lemmas ["rewind", ",", "man", "walk", "in", "armed", "=", "armed", "citizen", "shoot", ",", "bomb", "do", "not", "go", "off", "or", "get", "set", "?"]
(c20-14 / and
        :op1 (c20-5 / event
                    :name (c20-8 / name
                                 :op1 "rewind"))
        :op2 (c20-0 / walk-01
                    :ARG0 (c20-1 / man
                                 :ARG1-of (c20-7 / arm-01)
                                 :ARG1-of (c20-2 / equal-01
                                                 :ARG2 (c20-12 / shoot-02
                                                               :ARG0 (c20-10 / citizen
                                                                             :ARG1-of (c20-9 / arm-01))))))
        :op3 (c20-3 / or
                    :op1 (c20-11 / go-off-16
                                 :ARG1 (c20-4 / bomb)
                                 :polarity -)
                    :op2 (c20-6 / set-02
                                :ARG1 c20-4
                                :polarity -)
                    :polarity (c20-13 / amr-unknown)))

# ::snt LOL - keep telling yourself that as the jihadis' attacks increase.
# ::tokens ["LOL", "-", "keep", "telling", "yourself", "that", "as", "the", "jihadis", "'", "attacks", "increase", "."]
# ::lemmas ["LOL", "-", "keep", "tell", "yourself", "that", "as", "the", "jihadi", "'", "attack", "increase", "."]
(c21-4 / keep-02
       :ARG0 (c21-1 / you)
       :ARG1 (c21-7 / tell-01
                    :ARG0 c21-1
                    :ARG1 (c21-6 / that)
                    :ARG2 c21-1
                    :time (c21-3 / increase-01
                                 :ARG1 (c21-8 / attack-01
                                              :ARG0 (c21-0 / jihadi))))
       :ARG2-of (c21-2 / laugh-01
                       :manner (c21-5 / loud)
                       :mode expressive))

# ::snt Neither am I I have to keep my firearm in my car and plan how to get to it.
# ::tokens ["Neither", "am", "I", "I", "have", "to", "keep", "my", "firearm", "in", "my", "car", "and", "plan", "how", "to", "get", "to", "it", "."]
# ::lemmas ["neither", "be", "i", "i", "have", "to", "keep", "my", "firearm", "in", "my", "car", "and", "plan", "how", "to", "get", "to", "it", "."]
(c22-8 / and
       :op1 (c22-1 / obligate-01
                   :ARG1 (c22-2 / i)
                   :ARG2 (c22-7 / keep-01
                                :ARG0 c22-2
                                :ARG1 (c22-0 / firearm
                                             :poss c22-2)
                                :location (c22-4 / car
                                                 :poss c22-2))
                   :polarity -)
       :op2 (c22-3 / plan-01
                   :ARG0 c22-2
                   :ARG1 (c22-6 / thing
                                :manner-of (c22-5 / get-05
                                                  :ARG0 c22-2
                                                  :ARG1 c22-0))))

# ::snt Wellalrightythen till, the effect is the same: Gun Free Zones everywhere.
# ::tokens ["Wellalrightythen", "till", ",", "the", "effect", "is", "the", "same", ":", "Gun", "Free", "Zones", "everywhere", "."]
# ::lemmas ["wellalrightythen", "till", ",", "the", "effect", "be", "the", "same", ":", "Gun", "Free", "Zones", "everywhere", "."]
(c23-6 / same-01
       :ARG2 (c23-7 / affect-01
                    :location (c23-2 / zone
                                     :ARG1-of (c23-1 / free-04
                                                     :ARG2 (c23-5 / gun))
                                     :location (c23-4 / everywhere)))
       :time (c23-3 / until
                    :op1 (c23-0 / well-09)))

# ::snt agreed, just looking out..libtards will go nuts
# ::tokens ["agreed", ",", "just", "looking", "out", "..", "libtards", "will", "go", "nuts"]
# ::lemmas ["agree", ",", "just", "look", "out", "..", "libtard", "will", "go", "nuts"]
(c24-3 / multi-sentence
       :snt1 (c24-9 / agree-01
                    :ARG1 (c24-4 / event))
       :snt2 (c24-2 / look-out-08
                    :ARG0 (c24-1 / you)
                    :mod (c24-0 / just)
                    :mode imperative)
       :snt3 (c24-7 / go-08
                    :ARG1 (c24-6 / person
                                 :ARG1-of (c24-8 / liberal-02))
                    :ARG2 (c24-5 / nuts)))

# ::snt would you put your hand up to shoot someone with rumoured bombs? What a hero
# ::tokens ["would", "you", "put", "your", "hand", "up", "to", "shoot", "someone", "with", "rumoured", "bombs", "?", "What", "a", "hero"]
# ::lemmas ["would", "you", "put", "your", "hand", "up", "to", "shoot", "someone", "with", "rumour", "bomb", "?", "what", "a", "hero"]
(c25-3 / multi-sentence
       :snt1 (c25-7 / put-01
                    :polarity (c25-10 / amr-unknown)
                    :ARG0 (c25-1 / you
                                 :part (c25-0 / hand
                                              :ARG1-of c25-7))
                    :ARG2 (c25-4 / up)
                    :purpose (c25-9 / shoot-02
                                    :ARG0 c25-1
                                    :ARG1 (c25-6 / someone)
                                    :ARG2 (c25-5 / bomb
                                                 :ARG1-of (c25-8 / rumor-01))))
       :snt2 (c25-2 / hero
                    :degree c25-10))

# ::snt if that sad event happened another x the death toll from gun violence would be an average USA day
# ::tokens ["if", "that", "sad", "event", "happened", "another", "x", "the", "death", "toll", "from", "gun", "violence", "would", "be", "an", "average", "USA", "day"]
# ::lemmas ["if", "that", "sad", "event", "happen", "another", "x", "the", "death", "toll", "from", "gun", "violence", "would", "be", "an", "average", "USA", "day"]
(c26-5 / day
       :mod (c26-6 / country
                   :name (c26-3 / name
                                :op1 "USA"))
       :ARG1-of (c26-11 / average-04)
       :condition (c26-1 / event
                         :ARG1-of (c26-9 / sad-02)
                         :mod (c26-2 / another))
       :domain (c26-10 / toll
                       :mod (c26-0 / die-01)
                       :ARG1-of (c26-7 / cause-01
                                       :ARG0 (c26-4 / violence
                                                    :instrument (c26-8 / gun)))))

# ::snt I wouldn't. But shooting someone over what he says is foolish.Shooting them because...
# ::tokens ["I", "would", "n't", ".", "But", "shooting", "someone", "over", "what", "he", "says", "is", "foolish", ".", "Shooting", "them", "because", "..."]
# ::lemmas ["i", "would", "not", ".", "but", "shoot", "someone", "over", "what", "he", "say", "be", "foolish", ".", "shoot", "they", "because", "..."]
(c27-2 / multi-sentence
       :snt1 (c27-0 / have-polarity-91
                    :ARG1 (c27-7 / i)
                    :polarity -)
       :snt2 (c27-9 / contrast-01
                    :ARG2 (c27-1 / foolish
                                 :domain (c27-10 / shoot-02
                                                 :ARG1 (c27-6 / someone)
                                                 :ARG2 (c27-4 / over
                                                              :op1 (c27-11 / thing
                                                                           :ARG1-of (c27-3 / say-01
                                                                                           :ARG0 (c27-12 / he)))))))
       :snt3 (c27-8 / cause-01
                    :ARG0 (c27-5 / shoot-02
                                 :ARG1 c27-6)))

# ::snt my tweet was not directed at you
# ::tokens ["my", "tweet", "was", "not", "directed", "at", "you"]
# ::lemmas ["my", "tweet", "be", "not", "direct", "at", "you"]
(c28-1 / direct-01
       :ARG1 (c28-2 / tweet-01
                    :ARG0 (c28-3 / i))
       :ARG2 (c28-0 / you)
       :polarity -)

# ::snt which is a really good thing.
# ::tokens ["which", "is", "a", "really", "good", "thing", "."]
# ::lemmas ["which", "be", "a", "really", "good", "thing", "."]
(c29-1 / thing
       :ARG1-of (c29-2 / good-02
                       :degree (c29-0 / really)))

# ::snt sorry how do you know he doesn't have explosives?
# ::tokens ["sorry", "how", "do", "you", "know", "he", "does", "n't", "have", "explosives", "?"]
# ::lemmas ["sorry", "how", "do", "you", "know", "he", "do", "not", "have", "explosive", "?"]
(c30-3 / sorry-01
       :ARG2 (c30-5 / know-01
                    :ARG0 (c30-1 / you)
                    :ARG1 (c30-0 / have-03
                                 :ARG0 (c30-6 / he)
                                 :ARG1 (c30-2 / explosive)
                                 :polarity -)
                    :manner (c30-4 / amr-unknown)))

# ::snt Yes, unless already set + dead man switch.But he has a pump shotgun. Takes both hands.
# ::tokens ["Yes", ",", "unless", "already", "set", "+", "dead", "man", "switch", ".", "But", "he", "has", "a", "pump", "shotgun", ".", "Takes", "both", "hands", "."]
# ::lemmas ["yes", ",", "unless", "already", "set", "+", "dead", "man", "switch", ".", "but", "he", "have", "a", "pump", "shotgun", ".", "take", "both", "hand", "."]
(c31-3 / multi-sentence
       :snt1 (c31-1 / yes)
       :snt2 (c31-10 / contrast-01
                     :ARG2 (c31-0 / have-03
                                  :ARG0 (c31-15 / he)
                                  :ARG1 (c31-12 / shotgun
                                                :mod (c31-8 / pump))))
       :snt3 (c31-14 / take-01
                     :ARG0 (c31-7 / he)
                     :ARG1 (c31-4 / hand
                                  :mod (c31-5 / both)))
       :condition (c31-13 / already
                          :op1 (c31-6 / set-01)
                          :op2 (c31-2 / switch-01
                                      :ARG1 (c31-9 / man
                                                   :ARG1-of (c31-11 / die-01)))
                          :polarity -))

# ::snt Saying something doesn't make it so.A visibly armed hostage taker IS so.
# ::tokens ["Saying", "something", "does", "n't", "make", "it", "so", ".", "A", "visibly", "armed", "hostage", "taker", "IS", "so", "."]
# ::lemmas ["say", "something", "do", "not", "make", "it", "so", ".", "a", "visibly", "armed", "hostage", "taker", "be", "so", "."]
(c32-3 / multi-sentence
       :snt1 (c32-6 / make-01
                    :ARG1 (c32-8 / so)
                    :ARG2 (c32-5 / say-01
                                 :ARG1 (c32-2 / something))
                    :polarity -)
       :snt2 (c32-4 / so
                    :domain (c32-7 / person
                                   :ARG0-of (c32-9 / taker-01
                                                   :ARG1 (c32-0 / hostage))
                                   :ARG1-of (c32-10 / arm-01
                                                    :ARG1-of (c32-1 / see-01)))))

# ::snt So when the bad guys - who, by definition, don't follow the law - have guns, there is no defense.
# ::tokens ["So", "when", "the", "bad", "guys", "-", "who", ",", "by", "definition", ",", "do", "n't", "follow", "the", "law", "-", "have", "guns", ",", "there", "is", "no", "defense", "."]
# ::lemmas ["so", "when", "the", "bad", "guy", "-", "who", ",", "by", "definition", ",", "do", "not", "follow", "the", "law", "-", "have", "gun", ",", "there", "be", "no", "defense", "."]
(c33-6 / cause-01
       :ARG1 (c33-5 / defend-01
                    :time (c33-0 / have-03
                                 :ARG0 (c33-7 / guy
                                              :ARG1-of (c33-4 / bad-07)
                                              :ARG0-of (c33-2 / follow-02
                                                              :ARG1 (c33-3 / law)
                                                              :ARG1-of (c33-1 / define-01)
                                                              :polarity -))
                                 :ARG1 (c33-8 / gun))
                    :polarity -))

# ::snt For all intents &amp; purposes they're banned, the restrictions are so tight.
# ::tokens ["For", "all", "intents", "&", "amp", ";", "purposes", "they", "'re", "banned", ",", "the", "restrictions", "are", "so", "tight", "."]
# ::lemmas ["for", "all", "intent", "&", "amp", ";", "purpose", "they", "be", "ban", ",", "the", "restriction", "be", "so", "tight", "."]
(c34-5 / tight-05
       :ARG1 (c34-2 / restrict-01)
       :degree (c34-4 / so)
       :purpose (c34-0 / ban-01
                       :ARG1 (c34-3 / they)
                       :purpose (c34-1 / intents
                                       :mod (c34-6 / all))))

# ::snt assuming what? That he has bombs? He said it Why would you think otherwise
# ::tokens ["assuming", "what", "?", "That", "he", "has", "bombs", "?", "He", "said", "it", "Why", "would", "you", "think", "otherwise"]
# ::lemmas ["assume", "what", "?", "that", "he", "have", "bomb", "?", "he", "say", "it", "why", "would", "you", "think", "otherwise"]
(c35-3 / multi-sentence
       :snt1 (c35-15 / assume-02
                     :polarity (c35-6 / amr-unknown)
                     :ARG1 (c35-14 / thing))
       :snt2 (c35-0 / have-03
                    :ARG0 (c35-2 / he)
                    :ARG1 (c35-4 / bomb)
                    :polarity (c35-8 / amr-unknown))
       :snt3 (c35-12 / say-01
                     :ARG0 (c35-9 / he)
                     :ARG1 (c35-7 / it))
       :snt4 (c35-10 / cause-01
                     :ARG0 (c35-13 / amr-unknown)
                     :ARG1 (c35-11 / think-01
                                   :ARG0 (c35-1 / you)
                                   :ARG1 (c35-5 / have-polarity-91
                                                :ARG2 -))))

# ::snt You prat, I'm a conservative with a gun licence but your tweet is as offensive as it is ill timed
# ::tokens ["You", "prat", ",", "I", "'m", "a", "conservative", "with", "a", "gun", "licence", "but", "your", "tweet", "is", "as", "offensive", "as", "it", "is", "ill", "timed"]
# ::lemmas ["you", "prat", ",", "i", "be", "a", "conservative", "with", "a", "gun", "licence", "but", "your", "tweet", "be", "as", "offensive", "as", "it", "be", "ill", "time"]
(c36-11 / say-01
        :ARG0 (c36-4 / i)
        :ARG1 (c36-7 / contrast-01
                     :ARG1 (c36-6 / conservative
                                  :domain c36-4
                                  :ARG0-of (c36-0 / have-03
                                                  :ARG1 (c36-2 / license
                                                               :mod (c36-8 / gun))))
                     :ARG2 (c36-3 / offend-01
                                  :ARG0 (c36-13 / tweet-01
                                                :ARG0 (c36-1 / you
                                                             :mod (c36-5 / prat)))
                                  :ARG1-of (c36-10 / cause-01
                                                   :ARG0 (c36-12 / time-02
                                                                 :ARG1 c36-13
                                                                 :ARG1-of (c36-9 / ill-02)))))
        :ARG2 c36-1)

# ::snt And they're dropping as firearms ownership - and carrying - are growing by leaps and bounds.
# ::tokens ["And", "they", "'re", "dropping", "as", "firearms", "ownership", "-", "and", "carrying", "-", "are", "growing", "by", "leaps", "and", "bounds", "."]
# ::lemmas ["and", "they", "be", "drop", "as", "firearm", "ownership", "-", "and", "carrying", "-", "be", "grow", "by", "leap", "and", "bound", "."]
(c37-10 / and
        :op2 (c37-6 / drop-01
                    :ARG1 (c37-9 / they)
                    :time (c37-8 / grow-01
                                 :ARG1 (c37-4 / and
                                              :op1 (c37-3 / own-01
                                                          :ARG1 (c37-0 / firearm))
                                              :op2 (c37-7 / carry-01))
                                 :ARG2 (c37-5 / and
                                              :op1 (c37-1 / leap-01)
                                              :op2 (c37-2 / bound-09)))))

# ::snt so if shooting him triggers the alleged explosives, s could die
# ::tokens ["so", "if", "shooting", "him", "triggers", "the", "alleged", "explosives", ",", "s", "could", "die"]
# ::lemmas ["so", "if", "shoot", "he", "trigger", "the", "allege", "explosive", ",", "s", "could", "die"]
(c38-4 / cause-01
       :ARG1 (c38-2 / possible-01
                    :ARG1 (c38-3 / die-01
                                 :ARG1 (c38-7 / they))
                    :condition (c38-5 / trigger-01
                                      :ARG0 (c38-6 / shoot-02
                                                   :ARG1 (c38-0 / he))
                                      :ARG1 (c38-1 / explosive
                                                   :ARG1-of (c38-8 / allege-01)))))

# ::snt yeah and I'm guessing they're not from Sydney. Not cool, up there with making sept11 jokes
# ::tokens ["yeah", "and", "I", "'m", "guessing", "they", "'re", "not", "from", "Sydney", ".", "Not", "cool", ",", "up", "there", "with", "making", "sept11", "jokes"]
# ::lemmas ["yeah", "and", "i", "be", "guess", "they", "be", "not", "from", "Sydney", ".", "not", "cool", ",", "up", "there", "with", "make", "sept11", "joke"]
(c39-1 / multi-sentence
       :snt1 (c39-14 / and
                     :op2 (c39-10 / guess-01
                                  :ARG0 (c39-4 / i)
                                  :ARG1 (c39-3 / be-from-91
                                               :ARG1 (c39-13 / they)
                                               :ARG2 (c39-9 / city
                                                            :name (c39-5 / name
                                                                         :op1 "Sydney"))
                                               :polarity -)))
       :snt2 (c39-8 / cool-04
                    :ARG1 (c39-7 / make-01
                                 :ARG1 (c39-0 / joke-01
                                              :ARG2 (c39-11 / incident
                                                            :name (c39-6 / name
                                                                         :op1 "Spt11")))
                                 :location (c39-2 / up-03
                                                  :ARG2 (c39-12 / there)))
                    :polarity -))

# ::snt James, I'd throw actual FBI stats at you, but you'd just deny.Our crime rates OF ALL KINDS are dropping.
# ::tokens ["James", ",", "I", "'d", "throw", "actual", "FBI", "stats", "at", "you", ",", "but", "you", "'d", "just", "deny", ".", "Our", "crime", "rates", "OF", "ALL", "KINDS", "are", "dropping", "."]
# ::lemmas ["James", ",", "i", "would", "throw", "actual", "FBI", "stat", "at", "you", ",", "but", "you", "would", "just", "deny", ".", "our", "crime", "rate", "of", "all", "KINDS", "be", "drop", "."]
(c40-3 / multi-sentence
       :snt1 (c40-15 / say-01
                     :ARG0 (c40-6 / i)
                     :ARG1 (c40-11 / contrast-01
                                   :ARG1 (c40-16 / throw-01
                                                 :ARG0 c40-6
                                                 :ARG1 (c40-4 / statistic
                                                              :source (c40-12 / government-organization
                                                                              :name (c40-7 / name
                                                                                           :op1 "FBI"))
                                                              :ARG1-of (c40-17 / actual-02))
                                                 :ARG2 (c40-9 / person
                                                              :name (c40-8 / name
                                                                           :op1 "James")))
                                   :ARG2 (c40-10 / deny-01
                                                 :ARG0 c40-9
                                                 :mod (c40-0 / just)))
                     :ARG2 c40-9)
       :snt2 (c40-2 / drop-01
                    :ARG1 (c40-13 / rate
                                  :mod (c40-14 / crime-02
                                               :ARG0 (c40-1 / we))
                                  :poss c40-9
                                  :mod (c40-5 / all))))

# ::snt further away from me!
# ::tokens ["further", "away", "from", "me", "!"]
# ::lemmas ["far", "away", "from", "i", "!"]
(c41-3 / away
       :op1 (c41-2 / i)
       :ARG1-of (c41-0 / have-quant-91
                       :ARG3 (c41-1 / more)))

# ::snt I stole it off of a bumper sticker I saw on a pickup truck
# ::tokens ["I", "stole", "it", "off", "of", "a", "bumper", "sticker", "I", "saw", "on", "a", "pickup", "truck"]
# ::lemmas ["i", "steal", "it", "off", "of", "a", "bumper", "sticker", "i", "see", "on", "a", "pickup", "truck"]
(c42-6 / steal-01
       :ARG0 (c42-3 / i)
       :ARG1 (c42-5 / it)
       :ARG2 (c42-2 / sticker
                    :mod (c42-1 / bumper)
                    :ARG1-of (c42-0 / see-01
                                    :ARG0 c42-3
                                    :location (c42-7 / truck
                                                     :mod (c42-4 / pickup)))))

# ::snt Get this book, James. It's current &amp; accurate, it's fully sourced, and it even talks about Australia
# ::tokens ["Get", "this", "book", ",", "James", ".", "It", "'s", "current", "&", "amp", ";", "accurate", ",", "it", "'s", "fully", "sourced", ",", "and", "it", "even", "talks", "about", "Australia"]
# ::lemmas ["get", "this", "book", ",", "James", ".", "it", "be", "current", "&", "amp", ";", "accurate", ",", "it", "be", "fully", "source", ",", "and", "it", "even", "talk", "about", "Australia"]
(c43-1 / multi-sentence
       :snt1 (c43-11 / get-01
                     :ARG0 (c43-8 / person
                                  :name (c43-6 / name
                                               :op1 "James"))
                     :ARG1 (c43-2 / book
                                  :mod (c43-14 / this))
                     :mode imperative)
       :snt2 (c43-15 / and
                     :op1 c43-15
                     :op1 (c43-10 / current)
                     :op2 (c43-4 / accurate)
                     :op3 (c43-13 / source-02
                                  :ARG1 (c43-5 / it)
                                  :ARG1-of (c43-0 / full-09))
                     :op4 (c43-12 / talk-01
                                  :ARG0 c43-5
                                  :ARG1 (c43-9 / country
                                               :name (c43-7 / name
                                                            :op1 "Australia"))
                                  :mod (c43-3 / even))))

# ::snt Sigh... I give up.And I'm glad I live in America
# ::tokens ["Sigh", "...", "I", "give", "up", ".", "And", "I", "'m", "glad", "I", "live", "in", "America"]
# ::lemmas ["sigh", "...", "i", "give", "up", ".", "and", "i", "be", "glad", "i", "live", "in", "America"]
(c44-7 / and
       :op1 (c44-6 / sigh-02
                   :ARG0 (c44-1 / i)
                   :mode expressive)
       :op2 (c44-5 / give-up-07
                   :ARG0 c44-1)
       :op3 (c44-3 / glad-02
                   :ARG0 (c44-0 / live-01
                                :ARG0 c44-1
                                :location (c44-4 / country
                                                 :name (c44-2 / name
                                                              :op1 "America")))
                   :ARG1 c44-1))

# ::snt Islamist terrorists have been holding hostages in Sydney cafe in Australia, idk if caught yet.
# ::tokens ["Islamist", "terrorists", "have", "been", "holding", "hostages", "in", "Sydney", "cafe", "in", "Australia", ",", "idk", "if", "caught", "yet", "."]
# ::lemmas ["Islamist", "terrorist", "have", "be", "hold", "hostage", "in", "Sydney", "cafe", "in", "Australia", ",", "idk", "if", "catch", "yet", "."]
(c45-0 / hold-01
       :ARG0 (c45-11 / terrorist
                     :mod (c45-6 / religious-group
                                 :name (c45-3 / name
                                              :op1 "Islamism")))
       :ARG1 (c45-12 / hostage)
       :location (c45-7 / cafe
                        :location (c45-8 / city
                                         :name (c45-4 / name
                                                      :op1 "Sydney"))
                        :location (c45-10 / country
                                          :name (c45-5 / name
                                                       :op1 "Australia")))
       :ARG1-of (c45-9 / have-condition-91
                       :ARG2 (c45-13 / catch-03
                                     :ARG1 c45-11
                                     :time (c45-1 / yet)))
       :ARG1-of (c45-2 / obvious-01))

# ::snt or we can say let's talk to them and work this out...everyone will be safe....
# ::tokens ["or", "we", "can", "say", "let", "'s", "talk", "to", "them", "and", "work", "this", "out", "...", "everyone", "will", "be", "safe", "...."]
# ::lemmas ["or", "we", "can", "say", "let", "us", "talk", "to", "they", "and", "work", "this", "out", "...", "everyone", "will", "be", "safe", "...."]
(c46-1 / or
       :op2 (c46-6 / possible-01
                   :ARG1 (c46-9 / say-01
                                :ARG0 (c46-0 / we)
                                :ARG1 (c46-11 / and
                                              :op1 (c46-10 / talk-01
                                                           :ARG0 c46-0
                                                           :ARG2 (c46-8 / they)
                                                           :mode imperative)
                                              :op2 (c46-4 / work-out-02
                                                          :ARG0 c46-0
                                                          :ARG1 (c46-5 / this)
                                                          :mode imperative)
                                              :ARG1-of (c46-7 / cause-01
                                                              :ARG0 (c46-2 / safe-01
                                                                           :ARG1 (c46-3 / everyone)))))))

# ::snt Well a number of people disagree. Thanks for your opinion but I'm not interested.
# ::tokens ["Well", "a", "number", "of", "people", "disagree", ".", "Thanks", "for", "your", "opinion", "but", "I", "'m", "not", "interested", "."]
# ::lemmas ["well", "a", "number", "of", "people", "disagree", ".", "thank", "for", "your", "opinion", "but", "i", "be", "not", "interested", "."]
(c47-2 / multi-sentence
       :snt1 (c47-7 / disagree-01
                    :ARG0 (c47-6 / person
                                 :quant (c47-5 / number))
                    :mod (c47-0 / well))
       :snt2 (c47-8 / contrast-01
                    :ARG1 (c47-11 / thank-01
                                  :ARG0 (c47-4 / i)
                                  :ARG1 (c47-1 / you)
                                  :ARG2 (c47-10 / thing
                                                :ARG1-of (c47-3 / opine-01
                                                                :ARG0 c47-1)))
                    :ARG2 (c47-9 / interest-01
                                 :ARG1 c47-4
                                 :polarity -)))

# ::snt The places where there IS gun violence are all places where gun laws are strictest. Always.
# ::tokens ["The", "places", "where", "there", "IS", "gun", "violence", "are", "all", "places", "where", "gun", "laws", "are", "strictest", ".", "Always", "."]
# ::lemmas ["the", "place", "where", "there", "be", "gun", "violence", "be", "all", "place", "where", "gun", "law", "be", "strictest", ".", "always", "."]
(c48-2 / multi-sentence
       :snt1 (c48-6 / place
                    :location-of (c48-5 / violence
                                        :mod (c48-9 / gun))
                    :domain (c48-11 / place
                                    :mod (c48-12 / all)
                                    :location-of (c48-10 / strict
                                                         :ARG2-of (c48-0 / have-degree-91
                                                                         :ARG1 (c48-1 / law
                                                                                      :mod (c48-7 / gun))
                                                                         :ARG3 (c48-8 / most)))))
       :snt2 (c48-3 / be-temporally-at-91
                    :ARG2 (c48-4 / always)))

# ::snt I work near there...unfortunately we are not allowed to be armed at work
# ::tokens ["I", "work", "near", "there", "...", "unfortunately", "we", "are", "not", "allowed", "to", "be", "armed", "at", "work"]
# ::lemmas ["i", "work", "near", "there", "...", "unfortunately", "we", "be", "not", "allow", "to", "be", "arm", "at", "work"]
(c49-2 / multi-sentence
       :snt1 (c49-0 / work-01
                    :ARG0 (c49-5 / i)
                    :ARG1-of (c49-7 / near-02
                                    :ARG2 (c49-8 / there)))
       :snt2 (c49-9 / allow-01
                    :ARG1 (c49-4 / arm-01
                                 :ARG1 (c49-6 / we))
                    :location (c49-3 / work-01)
                    :ARG2-of (c49-1 / fortunate-01
                                    :polarity -)
                    :polarity -))

# ::snt I'll leave you with this:a) dead man switchb) pump shotgunMutually exclusive.
# ::tokens ["I", "'ll", "leave", "you", "with", "this", ":", "a", ")", "dead", "man", "switchb", ")", "pump", "shotgunMutually", "exclusive", "."]
# ::lemmas ["i", "'ll", "leave", "you", "with", "this", ":", "a", ")", "dead", "man", "switchb", ")", "pump", "shotgunmutually", "exclusive", "."]
(c50-1 / leave-12
       :ARG0 (c50-5 / i)
       :ARG1 (c50-0 / you)
       :ARG2 (c50-10 / this
                     :mod (c50-9 / switch
                                 :mod (c50-2 / man
                                             :ARG1-of (c50-7 / die-01))
                                 :mod "b")
                     :mod (c50-3 / shotgun
                                 :mod (c50-6 / pump))
                     :ARG1-of (c50-4 / exclusive-02
                                     :manner (c50-8 / mutual))
                     :li "a"))
