# ::snt I just heard on the radio that they will not release the name.
# ::tokens ["I", "just", "heard", "on", "the", "radio", "that", "they", "will", "not", "release", "the", "name", "."]
# ::lemmas ["i", "just", "hear", "on", "the", "radio", "that", "they", "will", "not", "release", "the", "name", "."]
(c1-0 / hear-01
      :ARG0 (c1-2 / i)
      :ARG1 (c1-5 / release-01
                  :ARG0 (c1-7 / they)
                  :ARG1 (c1-6 / thing
                              :ARG2-of (c1-4 / name-01))
                  :polarity -)
      :ARG2 (c1-3 / radio)
      :time (c1-1 / just))

# ::snt . Hope they convict him.
# ::tokens [".", "Hope", "they", "convict", "him", "."]
# ::lemmas [".", "hope", "they", "convict", "he", "."]
(c3-0 / hope-01
      :ARG0 (c3-1 / i)
      :ARG1 (c3-2 / convict-01
                  :ARG0 (c3-3 / they)
                  :ARG1 (c3-4 / he)))

# ::snt now im confused ...
# ::tokens ["now", "i", "m", "confused", "..."]
# ::lemmas ["now", "i", "m", "confused", "..."]
(c4-1 / confuse-01
      :ARG1 (c4-2 / i)
      :time (c4-0 / now))

# ::snt I hope they don't. Until we know the facts why put his life in jeopardy.
# ::tokens ["I", "hope", "they", "do", "n't", ".", "Until", "we", "know", "the", "facts", "why", "put", "his", "life", "in", "jeopardy", "."]
# ::lemmas ["i", "hope", "they", "do", "not", ".", "until", "we", "know", "the", "fact", "why", "put", "his", "life", "in", "jeopardy", "."]
(c5-4 / multi-sentence
      :snt1 (c5-0 / hope-01
                  :ARG0 (c5-8 / i)
                  :ARG1 (c5-10 / do-02
                               :ARG0 (c5-11 / they)
                               :polarity -))
      :snt2 (c5-1 / jeopardize-01
                  :ARG0 (c5-12 / amr-unknown)
                  :ARG1 (c5-3 / life
                              :poss (c5-5 / he))
                  :time (c5-6 / until
                              :op1 (c5-9 / know-01
                                         :ARG0 (c5-2 / we)
                                         :ARG1 (c5-7 / fact)))))

# ::snt yall fools should worry bout wats going on in chicago. shot in weekend. But u dn't hear shit about it cuz it black on black
# ::tokens ["y", "all", "fools", "should", "worry", "bout", "wats", "going", "on", "in", "chicago", ".", "shot", "in", "weekend", ".", "But", "u", "dn't", "hear", "shit", "about", "it", "cuz", "it", "black", "on", "black"]
# ::lemmas ["you", "all", "fool", "should", "worry", "bout", "wat", "go", "on", "in", "chicago", ".", "shot", "in", "weekend", ".", "but", "u", "dn't", "hear", "shit", "about", "it", "cuz", "it", "black", "on", "black"]
(c6-4 / multi-sentence
      :snt1 (c6-10 / recommend-01
                   :ARG1 (c6-1 / worry-02
                               :ARG0 (c6-3 / fool
                                           :mod (c6-16 / all))
                               :ARG1 (c6-8 / wats
                                           :ARG1-of (c6-12 / go-on-15
                                                           :location (c6-11 / city
                                                                            :name (c6-9 / name
                                                                                        :op1 "Chicago")))))
                   :ARG2 c6-3)
      :snt2 (c6-15 / shoot-02
                   :time (c6-5 / weekend))
      :snt3 (c6-13 / contrast-01
                   :ARG2 (c6-0 / hear-01
                               :ARG0 (c6-2 / you)
                               :ARG1 (c6-7 / shit)
                               :ARG1-of (c6-14 / cause-01
                                               :ARG0 (c6-6 / black-on-black))
                               :polarity -)))

# ::snt they're waiting for him to go into hiding before they release his name.
# ::tokens ["they", "'re", "waiting", "for", "him", "to", "go", "into", "hiding", "before", "they", "release", "his", "name", "."]
# ::lemmas ["they", "be", "wait", "for", "he", "to", "go", "into", "hiding", "before", "they", "release", "his", "name", "."]
(c7-1 / wait-01
      :ARG1 (c7-6 / they)
      :ARG2 (c7-5 / go-01
                  :ARG1 (c7-0 / he)
                  :ARG4 (c7-7 / hide-01
                              :ARG0 c7-0)
                  :time (c7-2 / before
                              :op1 (c7-4 / release-01
                                         :ARG0 c7-6
                                         :ARG1 (c7-3 / name
                                                     :poss c7-0)))))

# ::snt the Conviction rate of o black people per week for yrs executed by those heathens %
# ::tokens ["the", "Conviction", "rate", "of", "o", "black", "people", "per", "week", "for", "yrs", "executed", "by", "those", "heathens", "%"]
# ::lemmas ["the", "Conviction", "rate", "of", "o", "black", "people", "per", "week", "for", "yr", "execute", "by", "those", "heathens", "%"]
(c8-5 / rate-entity-91
      :ARG1 (c8-4 / person
                  :ARG1-of (c8-2 / black-05))
      :ARG2 (c8-8 / temporal-quantity
                  :unit (c8-1 / week)
                  :quant 1)
      :ARG3 (c8-3 / execute-01
                  :ARG0 (c8-0 / heathen
                              :mod (c8-7 / that))
                  :ARG1 c8-4)
      :ARG4 (c8-6 / convict-01))

# ::snt ur mother does
# ::tokens ["ur", "mother", "does"]
# ::lemmas ["ur", "mother", "do"]
(c9-2 / do-02
      :ARG0 (c9-1 / person
                  :ARG0-of (c9-0 / have-rel-role-91
                                 :ARG2 (c9-3 / mother))))

# ::snt and the sad thing is he's probably already half away around the country in the witness protection
# ::tokens ["and", "the", "sad", "thing", "is", "he", "'s", "probably", "already", "half", "away", "around", "the", "country", "in", "the", "witness", "protection"]
# ::lemmas ["and", "the", "sad", "thing", "be", "he", "be", "probably", "already", "half", "away", "around", "the", "country", "in", "the", "witness", "protection"]
(c10-11 / and
        :op2 (c10-9 / sad-02
                    :ARG0 (c10-4 / be-located-at-91
                                 :ARG1 (c10-0 / he)
                                 :ARG2 (c10-5 / around
                                              :op1 (c10-8 / country))
                                 :time (c10-6 / already)
                                 :location (c10-7 / protect-01
                                                  :ARG1 (c10-10 / person
                                                                :ARG0-of (c10-1 / witness-01)))
                                 :extent (c10-2 / half)
                                 :mod (c10-3 / probable))))

# ::snt who gives a fuck bitch
# ::tokens ["who", "gives", "a", "fuck", "bitch"]
# ::lemmas ["who", "give", "a", "fuck", "bitch"]
(c11-1 / give-16
       :ARG0 (c11-2 / amr-unknown)
       :ARG1 (c11-3 / bitch)
       :ARG2 (c11-0 / fuck))

# ::snt yikes, now everyone gonna go after him
# ::tokens ["yikes", ",", "now", "everyone", "gon", "na", "go", "after", "him"]
# ::lemmas ["yike", ",", "now", "everyone", "going", "to", "go", "after", "he"]
(c12-4 / go-03
       :ARG0 (c12-2 / everyone)
       :ARG1 (c12-0 / he)
       :time (c12-3 / now)
       :mod (c12-1 / yikes))

# ::snt already did that
# ::tokens ["already", "did", "that"]
# ::lemmas ["already", "do", "that"]
(c13-1 / ready-02
       :ARG1 (c13-0 / do-02
                    :ARG1 (c13-2 / that)))

# ::snt : PD expected to release the name of officer who killed Mike Brown shortly. ThisssRT frm Unc Rush!! U go girl
# ::tokens [":", "PD", "expected", "to", "release", "the", "name", "of", "officer", "who", "killed", "Mike", "Brown", "shortly", ".", "ThisssRT", "frm", "Unc", "Rush", "!", "!", "U", "go", "girl"]
# ::lemmas [":", "PD", "expect", "to", "release", "the", "name", "of", "officer", "who", "kill", "Mike", "Brown", "shortly", ".", "thisssrt", "frm", "Unc", "Rush", "!", "!", "u", "go", "girl"]
(c14-0 / multi-sentence
       :snt1 (c14-9 / expect-01
                    :ARG1 (c14-12 / release-01
                                  :ARG0 (c14-13 / government-organization
                                                :name (c14-10 / name
                                                              :op1 "PD"))
                                  :ARG1 (c14-18 / thing
                                                :ARG2-of (c14-17 / name-01
                                                                 :ARG1 (c14-16 / officer
                                                                               :ARG0-of (c14-14 / kill-01
                                                                                                :ARG1 (c14-3 / person
                                                                                                             :name (c14-1 / name
                                                                                                                          :op1 "Mike"
                                                                                                                          :op2 "Brown"))))))
                                  :ARG1-of (c14-6 / short-07)))
       :snt2 (c14-7 / publication
                    :name (c14-2 / name
                                 :op1 "ThisssRT")
                    :ARG1-of (c14-11 / mean-01
                                     :ARG2 (c14-8 / person
                                                  :name (c14-19 / name
                                                                :op1 "Uncle"
                                                                :op2 "Rush"))))
       :snt3 (c14-4 / go-01
                    :ARG1 (c14-15 / you)
                    :mod (c14-5 / girl)
                    :mode imperative))

# ::snt lynch mob.
# ::tokens ["lynch", "mob", "."]
# ::lemmas ["lynch", "mob", "."]
(c15-1 / mob
       :ARG0-of (c15-0 / lynch-01))

# ::snt my mother does what? If you know where that bitch is she owes me milk
# ::tokens ["my", "mother", "does", "what", "?", "If", "you", "know", "where", "that", "bitch", "is", "she", "owes", "me", "milk"]
# ::lemmas ["my", "mother", "do", "what", "?", "if", "you", "know", "where", "that", "bitch", "be", "she", "owe", "i", "milk"]
(c16-3 / multi-sentence
       :snt1 (c16-10 / do-02
                     :ARG0 (c16-9 / person
                                  :ARG0-of (c16-0 / have-rel-role-91
                                                  :ARG1 (c16-7 / i)
                                                  :ARG2 (c16-11 / mother)))
                     :ARG1 (c16-14 / amr-unknown))
       :snt2 (c16-6 / owe-01
                    :ARG0 (c16-5 / bitch
                                 :mod (c16-13 / that))
                    :ARG2 (c16-12 / i)
                    :ARG3 (c16-2 / milk)
                    :condition (c16-8 / know-01
                                      :ARG0 (c16-1 / you)
                                      :ARG1 (c16-4 / location
                                                   :location-of c16-5))))

# ::snt Finally.
# ::tokens ["Finally", "."]
# ::lemmas ["finally", "."]
(c17-0 / final)

# ::snt so they'll know his name but will they convict him?
# ::tokens ["so", "they", "'ll", "know", "his", "name", "but", "will", "they", "convict", "him", "?"]
# ::lemmas ["so", "they", "'ll", "know", "his", "name", "but", "will", "they", "convict", "he", "?"]
(c18-4 / contrast-01
       :ARG1 (c18-1 / know-01
                    :ARG0 (c18-5 / they)
                    :ARG1 (c18-2 / name
                                 :poss (c18-0 / he)))
       :ARG2 (c18-3 / convict-01
                    :ARG0 c18-5
                    :ARG1 c18-0
                    :polarity (c18-6 / amr-unknown)))

# ::snt PD expected to release the name of officer who killed Mike Brown shortly. Watch here
# ::tokens ["PD", "expected", "to", "release", "the", "name", "of", "officer", "who", "killed", "Mike", "Brown", "shortly", ".", "Watch", "here"]
# ::lemmas ["PD", "expect", "to", "release", "the", "name", "of", "officer", "who", "kill", "Mike", "Brown", "shortly", ".", "watch", "here"]
(c19-3 / multi-sentence
       :snt1 (c19-5 / expect-01
                    :ARG0 (c19-8 / police)
                    :ARG1 (c19-9 / release-01
                                 :ARG0 c19-8
                                 :ARG1 (c19-6 / name
                                              :poss (c19-4 / officer
                                                           :ARG0-of (c19-11 / kill-01
                                                                            :ARG1 (c19-12 / person
                                                                                          :name (c19-7 / name
                                                                                                       :op1 "Mike"
                                                                                                       :op2 "Brown")))))
                                 :time (c19-10 / short-07)))
       :snt2 (c19-1 / watch-01
                    :ARG0 (c19-2 / you)
                    :location (c19-0 / here)
                    :mode imperative))
