# ::snt -
# ::tokens ["-"]
# ::lemmas ["-"]
(c1-0 / amr-empty)

# ::snt propaganda is the executive arm of the invisible govemment.
# ::tokens ["propaganda", "is", "the", "executive", "arm", "of", "the", "invisible", "govemment", "."]
# ::lemmas ["propaganda", "be", "the", "executive", "arm", "of", "the", "invisible", "govemment", "."]
(c2-6 / arm
      :ARG0-of (c2-0 / execute-02)
      :poss (c2-3 / government-organization
                  :ARG0-of (c2-2 / govern-01)
                  :ARG1-of (c2-4 / see-01
                                 :ARG1-of (c2-1 / possible-01
                                                :polarity -)))
      :domain (c2-5 / propaganda))

# ::snt "Released in "stable" condition?" What???
# ::tokens ["\"", "Released", "in", "\"", "stable", "\"", "condition", "?", "\"", "What", "?", "?", "?"]
# ::lemmas ["\"", "release", "in", "\"", "stable", "\"", "condition", "?", "\"", "what", "?", "?", "?"]
(c3-1 / release-01
      :polarity (c3-4 / amr-unknown)
      :manner (c3-2 / condition
                    :ARG1-of (c3-3 / stable-03))
      :polarity (c3-0 / amr-unknown))

# ::snt -
# ::tokens ["-"]
# ::lemmas ["-"]
(c4-0 / amr-empty)

# ::snt -
# ::tokens ["-"]
# ::lemmas ["-"]
(c5-0 / amr-empty)

# ::snt Are you guys gonna report on this for the next months like everything else
# ::tokens ["Are", "you", "guys", "gon", "na", "report", "on", "this", "for", "the", "next", "months", "like", "everything", "else"]
# ::lemmas ["be", "you", "guy", "going", "to", "report", "on", "this", "for", "the", "next", "months", "like", "everything", "else"]
(c6-7 / report-01
      :ARG0 (c6-0 / you
                  :mod (c6-8 / guy))
      :ARG1 (c6-9 / this)
      :polarity (c6-10 / amr-unknown)
      :time (c6-1 / month
                  :mod (c6-6 / next))
      :ARG1-of (c6-5 / resemble-01
                     :ARG2 (c6-4 / report-01
                                 :ARG0 (c6-3 / everything
                                             :mod (c6-2 / else))
                                 :ARG1 c6-9)))

# ::snt Muslim terrorist in Canada. Be on alert. Wake up!
# ::tokens ["Muslim", "terrorist", "in", "Canada", ".", "Be", "on", "alert", ".", "Wake", "up", "!"]
# ::lemmas ["Muslim", "terrorist", "in", "Canada", ".", "be", "on", "alert", ".", "wake", "up", "!"]
(c7-2 / multi-sentence
      :snt1 (c7-7 / terrorist
                  :mod (c7-5 / religious-group
                             :name (c7-3 / name
                                         :op1 "Muslim"))
                  :location (c7-6 / country
                                  :name (c7-4 / name
                                              :op1 "Canada")))
      :snt2 (c7-8 / alert-01
                  :ARG1 (c7-0 / you))
      :snt3 (c7-1 / wake-up-02
                  :ARG0 c7-0
                  :ARG1 c7-0
                  :mode imperative))

# ::snt news statement from cnn
# ::tokens ["news", "statement", "from", "cnn"]
# ::lemmas ["news", "statement", "from", "cnn"]
(c10-0 / state-01
       :ARG0 (c10-1 / publication
                    :name (c10-3 / name
                                 :op1 "CNN"))
       :ARG1 (c10-2 / news))

# ::snt I live in Ottawa and that was the craziest thing I have ever seen in my life. People running in all directions !! Mad screaming !!!
# ::tokens ["I", "live", "in", "Ottawa", "and", "that", "was", "the", "craziest", "thing", "I", "have", "ever", "seen", "in", "my", "life", ".", "People", "running", "in", "all", "directions", "!", "!", "Mad", "screaming", "!", "!", "!"]
# ::lemmas ["i", "live", "in", "Ottawa", "and", "that", "be", "the", "crazy", "thing", "i", "have", "ever", "see", "in", "my", "life", ".", "people", "run", "in", "all", "direction", "!", "!", "mad", "scream", "!", "!", "!"]
(c11-0 / multi-sentence
       :snt1 (c11-5 / and
                    :op1 (c11-7 / live-01
                                :ARG0 (c11-15 / i)
                                :location (c11-17 / city
                                                  :name (c11-11 / name
                                                                :op1 "Ottawa")))
                    :op2 (c11-2 / crazy-03
                                :ARG1 (c11-19 / thing
                                              :mod (c11-18 / that))
                                :ARG2-of (c11-6 / have-degree-91
                                                :ARG1 c11-19
                                                :ARG3 (c11-12 / most)
                                                :ARG5 c11-19
                                                :ARG1-of (c11-4 / see-01
                                                                :ARG0 (c11-16 / i)
                                                                :time (c11-9 / ever)
                                                                :time c11-7
                                                                :ARG0 c11-16))))
       :snt2 (c11-13 / run-02
                     :ARG0 (c11-1 / person)
                     :direction (c11-3 / direction
                                       :mod (c11-14 / all)))
       :snt3 (c11-10 / scream-01
                     :mod (c11-8 / mad)
                     :mode expressive))

# ::snt What is all this Muslim tweets saying
# ::tokens ["What", "is", "all", "this", "Muslim", "tweets", "saying"]
# ::lemmas ["what", "be", "all", "this", "Muslim", "tweet", "say"]
(c12-5 / amr-unknown
       :domain (c12-4 / tweet-01
                      :ARG0 (c12-2 / religious-group
                                   :name (c12-1 / name
                                                :op1 "Muslim"))
                      :mod (c12-3 / this)
                      :mod (c12-0 / all)))

# ::snt there were only two released..the third person that was brought to hospital died
# ::tokens ["there", "were", "only", "two", "released", "..", "the", "third", "person", "that", "was", "brought", "to", "hospital", "died"]
# ::lemmas ["there", "be", "only", "two", "release", "..", "the", "third", "person", "that", "be", "bring", "to", "hospital", "die"]
(c13-2 / multi-sentence
       :snt1 (c13-6 / release-01
                    :ARG1 (c13-5 / person
                                 :mod (c13-4 / only)
                                 :quant 2))
       :snt2 (c13-7 / die-01
                    :ARG1 (c13-8 / person
                                 :ord (c13-1 / ordinal-entity
                                             :value 3)
                                 :ARG1-of (c13-3 / bring-01
                                                 :ARG2 (c13-0 / hospital)))))

# ::snt -
# ::tokens ["-"]
# ::lemmas ["-"]
(c14-0 / amr-empty)
