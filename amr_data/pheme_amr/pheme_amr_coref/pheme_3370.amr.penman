# ::snt praise God!!!! Hallelujah
# ::tokens ["praise", "God", "!", "!", "!", "!", "Hallelujah"]
# ::lemmas ["praise", "God", "!", "!", "!", "!", "Hallelujah"]
(c1-3 / praise-01
      :ARG0 (c1-1 / you)
      :ARG1 (c1-4 / person
                  :name (c1-2 / name
                              :op1 "God"))
      :mod (c1-0 / hallelujah)
      :mode imperative)

# ::snt . This is in exceptionally poor taste. I have reported you to twitter &amp; may Allah have mercy on your soul. You are a lost man
# ::tokens [".", "This", "is", "in", "exceptionally", "poor", "taste", ".", "I", "have", "reported", "you", "to", "twitter", "&", "amp", ";", "may", "Allah", "have", "mercy", "on", "your", "soul", ".", "You", "are", "a", "lost", "man"]
# ::lemmas [".", "this", "be", "in", "exceptionally", "poor", "taste", ".", "i", "have", "report", "you", "to", "twitter", "&", "amp", ";", "may", "Allah", "have", "mercy", "on", "your", "soul", ".", "you", "be", "a", "lost", "man"]
(c2-0 / multi-sentence
      :snt1 (c2-19 / taste
                   :mod (c2-2 / poor
                              :degree (c2-9 / exceptional))
                   :domain (c2-18 / this))
      :snt2 (c2-5 / and
                  :op1 (c2-12 / report-01
                              :ARG0 (c2-14 / i)
                              :ARG1 (c2-16 / you)
                              :ARG2 (c2-4 / publication
                                          :name (c2-10 / name
                                                       :op1 "Twitter")))
                  :op2 (c2-13 / wish-01
                              :ARG0 c2-14
                              :ARG1 (c2-11 / mercy
                                           :beneficiary (c2-3 / soul
                                                              :poss (c2-15 / you))
                                           :beneficiary (c2-8 / person
                                                              :name (c2-17 / name
                                                                           :op1 "Allah")))))
      :snt3 (c2-6 / man
                  :ARG1-of (c2-7 / lose-02)
                  :domain (c2-1 / you)))

# ::snt : Two weeks before was killed he accepted Jesus Christ as his savior!
# ::tokens [":", "Two", "weeks", "before", "was", "killed", "he", "accepted", "Jesus", "Christ", "as", "his", "savior", "!"]
# ::lemmas [":", "Two", "weeks", "before", "be", "kill", "he", "accept", "Jesus", "Christ", "as", "his", "savior", "!"]
(c3-8 / accept-01
      :ARG0 (c3-0 / he)
      :ARG1 (c3-4 / person
                  :name (c3-3 / name
                              :op1 "Jesus"
                              :op2 "Christ"))
      :ARG2 (c3-5 / savior
                  :poss c3-0)
      :time (c3-2 / before
                  :op1 (c3-7 / kill-01
                             :ARG1 c3-0)
                  :quant (c3-6 / temporal-quantity
                               :unit (c3-1 / week)
                               :quant 2)))

# ::snt It's great to know he got saved,before his life was taken.
# ::tokens ["It", "'s", "great", "to", "know", "he", "got", "saved", ",", "before", "his", "life", "was", "taken", "."]
# ::lemmas ["it", "be", "great", "to", "know", "he", "got", "save", ",", "before", "his", "life", "be", "take", "."]
(c4-3 / great
      :domain (c4-6 / know-01
                    :ARG1 (c4-4 / save-02
                                :ARG1 (c4-0 / he)
                                :time (c4-2 / before
                                            :op1 (c4-5 / take-01
                                                       :ARG1 (c4-1 / life
                                                                   :poss c4-0))))))

# ::snt : Two weeks before was killed he accepted Jesus Christ as his savior! news I've heard today!!
# ::tokens [":", "Two", "weeks", "before", "was", "killed", "he", "accepted", "Jesus", "Christ", "as", "his", "savior", "!", "news", "I", "'ve", "heard", "today", "!", "!"]
# ::lemmas [":", "Two", "weeks", "before", "be", "kill", "he", "accept", "Jesus", "Christ", "as", "his", "savior", "!", "news", "i", "'ve", "hear", "today", "!", "!"]
(c5-3 / multi-sentence
      :snt1 (c5-15 / accept-01
                   :ARG0 (c5-0 / he)
                   :ARG1 (c5-8 / person
                               :name (c5-6 / name
                                           :op1 "Jesus"
                                           :op2 "Christ"))
                   :ARG3 (c5-14 / person
                                :ARG0-of (c5-2 / have-rel-role-91
                                               :ARG1 c5-0
                                               :ARG2 (c5-11 / savior)))
                   :time (c5-4 / before
                               :op1 (c5-13 / kill-01
                                           :ARG1 c5-0)
                               :quant (c5-12 / temporal-quantity
                                             :unit (c5-1 / week)
                                             :quant 2)))
      :snt2 (c5-7 / hear-01
                  :ARG0 (c5-5 / i)
                  :ARG1 (c5-9 / news)
                  :time (c5-10 / today)))

# ::snt I said earlier, I wonder what he is thinking of all this as he's looking down on us? I think he's proud of the peace tonight!
# ::tokens ["I", "said", "earlier", ",", "I", "wonder", "what", "he", "is", "thinking", "of", "all", "this", "as", "he", "'s", "looking", "down", "on", "us", "?", "I", "think", "he", "'s", "proud", "of", "the", "peace", "tonight", "!"]
# ::lemmas ["i", "say", "early", ",", "i", "wonder", "what", "he", "be", "think", "of", "all", "this", "as", "he", "be", "look", "down", "on", "we", "?", "i", "think", "he", "be", "proud", "of", "the", "peace", "tonight", "!"]
(c6-2 / multi-sentence
      :snt1 (c6-6 / say-01
                  :ARG0 (c6-15 / i)
                  :ARG1 (c6-14 / wonder-01
                               :ARG0 (c6-17 / i)
                               :ARG1 (c6-21 / thing
                                            :ARG1-of (c6-20 / think-01
                                                            :ARG0 (c6-10 / he)
                                                            :ARG2 (c6-16 / this
                                                                         :mod (c6-9 / all))
                                                            :time (c6-11 / look-01
                                                                         :ARG0 c6-10
                                                                         :ARG1 (c6-3 / we)
                                                                         :direction (c6-5 / down))))
                               :time (c6-12 / before))
                  :snt2 (c6-18 / think-01
                               :ARG0 (c6-1 / i)
                               :ARG1 (c6-4 / pride-01
                                           :ARG0 (c6-8 / he)
                                           :ARG1 (c6-7 / peace)
                                           :time (c6-0 / date-entity
                                                       :dayperiod (c6-13 / night)
                                                       :mod (c6-19 / today))))))

# ::snt Bless the Lord!
# ::tokens ["Bless", "the", "Lord", "!"]
# ::lemmas ["bless", "the", "Lord", "!"]
(c7-3 / bless-01
      :ARG0 (c7-1 / you)
      :ARG1 (c7-2 / person
                  :name (c7-0 / name
                              :op1 "Lord"))
      :mode imperative)

# ::snt I need that type of timing. RT : Two weeks before was killed he accepted Jesus Christ as his savior!
# ::tokens ["I", "need", "that", "type", "of", "timing", ".", "RT", ":", "Two", "weeks", "before", "was", "killed", "he", "accepted", "Jesus", "Christ", "as", "his", "savior", "!"]
# ::lemmas ["i", "need", "that", "type", "of", "timing", ".", "RT", ":", "Two", "weeks", "before", "be", "kill", "he", "accept", "Jesus", "Christ", "as", "his", "savior", "!"]
(c9-0 / multi-sentence
      :snt1 (c9-10 / need-01
                   :ARG0 (c9-12 / i)
                   :ARG1 (c9-18 / time-02
                                :mod (c9-17 / type
                                            :mod (c9-13 / that))))
      :snt2 (c9-3 / say-01
                  :ARG0 (c9-2 / publication
                              :name (c9-16 / name
                                           :op1 "RT"))
                  :ARG1 (c9-5 / accept-01
                              :ARG0 (c9-6 / he)
                              :ARG1 (c9-4 / person
                                          :name (c9-1 / name
                                                      :op1 "Jesus"
                                                      :op2 "Christ"))
                              :ARG2 (c9-7 / person
                                          :ARG0-of (c9-9 / save-02
                                                         :ARG1 c9-6))
                              :time (c9-8 / before
                                          :op1 (c9-14 / kill-01
                                                      :ARG1 c9-6)
                                          :quant (c9-15 / temporal-quantity
                                                        :unit (c9-11 / week)
                                                        :quant 2)))))

# ::snt Did Robin Williams do the same thing?
# ::tokens ["Did", "Robin", "Williams", "do", "the", "same", "thing", "?"]
# ::lemmas ["do", "Robin", "Williams", "do", "the", "same", "thing", "?"]
(c10-2 / do-02
       :ARG0 (c10-1 / person
                    :name (c10-0 / name
                                 :op1 "Robin"
                                 :op2 "Williams"))
       :ARG1 (c10-4 / thing
                    :ARG1-of (c10-3 / same-01))
       :polarity (c10-5 / amr-unknown))

# ::snt Check out Deamonte- For The Best (Official Video)
# ::tokens ["Check", "out", "Deamonte-", "For", "The", "Best", "(", "Official", "Video", ")"]
# ::lemmas ["check", "out", "Deamonte-", "for", "The", "Best", "(", "Official", "Video", ")"]
(c11-6 / check-out-05
       :ARG0 (c11-0 / you)
       :ARG1 (c11-2 / broadcast-program
                    :name (c11-4 / name
                                 :op1 "Deamonte")
                    :ARG1-of (c11-1 / mean-01
                                    :ARG2 (c11-5 / video
                                                 :mod (c11-3 / official)))))

# ::snt Thats great news.
# ::tokens ["That", "s", "great", "news", "."]
# ::lemmas ["that", "s", "great", "news", "."]
(c12-0 / news
       :mod (c12-2 / great)
       :domain (c12-1 / that))

# ::snt Thank You Jesus !! He got saved
# ::tokens ["Thank", "You", "Jesus", "!", "!", "He", "got", "saved"]
# ::lemmas ["thank", "you", "Jesus", "!", "!", "he", "got", "save"]
(c13-1 / multi-sentence
       :snt1 (c13-6 / thank-01
                    :ARG0 (c13-2 / i)
                    :ARG1 (c13-4 / person
                                 :name (c13-3 / name
                                              :op1 "Jesus")))
       :snt2 (c13-5 / save-02
                    :ARG1 (c13-0 / he)))

# ::snt Romans :28 at its best! Truly God WORKS in mysterious WAYS...Amen
# ::tokens ["Romans", ":", "28", "at", "its", "best", "!", "Truly", "God", "WORKS", "in", "mysterious", "WAYS", "...", "Amen"]
# ::lemmas ["Romans", ":", "28", "at", "its", "good", "!", "truly", "God", "work", "in", "mysterious", "WAYS", "...", "amen"]
(c14-1 / multi-sentence
       :snt1 (c14-4 / verse
                    :part-of (c14-7 / chapter
                                    :part-of (c14-2 / book
                                                    :name (c14-3 / name
                                                                 :op1 "Romans"))
                                    :mod 28)
                    :manner (c14-11 / at-best)
                    :mod 28)
       :snt2 (c14-0 / work-01
                    :ARG0 (c14-5 / person
                                 :name (c14-6 / name
                                              :op1 "God"))
                    :manner (c14-8 / mysterious)
                    :ARG1-of (c14-10 / true-01))
       :snt3 c14-5
       :name (c14-9 / name
                    :op1 "Amen"))

# ::snt Two weeks before was killed he accepted Jesus Christ as his savior!
# ::tokens ["Two", "weeks", "before", "was", "killed", "he", "accepted", "Jesus", "Christ", "as", "his", "savior", "!"]
# ::lemmas ["Two", "weeks", "before", "be", "kill", "he", "accept", "Jesus", "Christ", "as", "his", "savior", "!"]
(c15-8 / accept-01
       :ARG0 (c15-0 / he)
       :ARG1 (c15-4 / person
                    :name (c15-3 / name
                                 :op1 "Jesus"
                                 :op2 "Christ"))
       :ARG2 (c15-5 / savior
                    :poss c15-0)
       :time (c15-2 / before
                    :op1 (c15-7 / kill-01
                                :ARG1 c15-0)
                    :quant (c15-6 / temporal-quantity
                                  :unit (c15-1 / week)
                                  :quant 2)))

# ::snt : Two weeks before was killed he accepted Jesus Christ as his savior! Definitely won't be in the news
# ::tokens [":", "Two", "weeks", "before", "was", "killed", "he", "accepted", "Jesus", "Christ", "as", "his", "savior", "!", "Definitely", "wo", "n't", "be", "in", "the", "news"]
# ::lemmas [":", "Two", "weeks", "before", "be", "kill", "he", "accept", "Jesus", "Christ", "as", "his", "savior", "!", "definitely", "will", "not", "be", "in", "the", "news"]
(c16-2 / multi-sentence
       :snt1 (c16-12 / accept-01
                     :ARG0 (c16-0 / he)
                     :ARG1 (c16-6 / person
                                  :name (c16-4 / name
                                               :op1 "Jesus"
                                               :op2 "Christ"))
                     :ARG3 (c16-9 / savior
                                  :poss c16-0)
                     :time (c16-3 / before
                                  :op1 (c16-11 / kill-01
                                               :ARG1 c16-0)
                                  :quant (c16-10 / temporal-quantity
                                                 :unit (c16-1 / week)
                                                 :quant 2)))
       :snt2 (c16-8 / be-located-at-91
                    :ARG1 (c16-5 / news)
                    :ARG2 (c16-7 / definite)
                    :polarity -))

# ::snt : Two weeks before was killed he accepted Jesus Christ as his savior! all that matters. He's safe now
# ::tokens [":", "Two", "weeks", "before", "was", "killed", "he", "accepted", "Jesus", "Christ", "as", "his", "savior", "!", "all", "that", "matters", ".", "He", "'s", "safe", "now"]
# ::lemmas [":", "Two", "weeks", "before", "be", "kill", "he", "accept", "Jesus", "Christ", "as", "his", "savior", "!", "all", "that", "matter", ".", "he", "be", "safe", "now"]
(c17-3 / multi-sentence
       :snt1 (c17-17 / accept-01
                     :ARG0 (c17-0 / he)
                     :ARG1 (c17-10 / person
                                   :name (c17-8 / name
                                                :op1 "Jesus"
                                                :op2 "Christ"))
                     :ARG3 (c17-16 / person
                                   :ARG0-of (c17-2 / have-rel-role-91
                                                   :ARG1 c17-0
                                                   :ARG2 (c17-13 / savior)))
                     :time (c17-5 / before
                                  :op1 (c17-15 / kill-01
                                               :ARG1 c17-0)
                                  :quant (c17-14 / temporal-quantity
                                                 :unit (c17-1 / week)
                                                 :quant 2))
                     :ARG1-of (c17-11 / mean-01
                                      :ARG2 (c17-4 / matter-01
                                                   :ARG1 (c17-7 / all))))
       :snt2 (c17-6 / safe-01
                    :ARG1 (c17-9 / he)
                    :time (c17-12 / now)))

# ::snt U sure? : Two weeks before was killed he accepted Jesus Christ as his savior!
# ::tokens ["U", "sure", "?", ":", "Two", "weeks", "before", "was", "killed", "he", "accepted", "Jesus", "Christ", "as", "his", "savior", "!"]
# ::lemmas ["u", "sure", "?", ":", "Two", "weeks", "before", "be", "kill", "he", "accept", "Jesus", "Christ", "as", "his", "savior", "!"]
(c18-8 / sure-02
       :polarity (c18-11 / amr-unknown)
       :ARG0 (c18-1 / you)
       :ARG1 (c18-5 / accept-01
                    :ARG0 (c18-0 / he)
                    :ARG1 (c18-7 / person
                                 :name (c18-6 / name
                                              :op1 "Jesus"
                                              :op2 "Christ"))
                    :ARG2 (c18-4 / savior
                                 :poss c18-0)
                    :time (c18-3 / before
                                 :op1 (c18-10 / kill-01
                                              :ARG1 c18-0)
                                 :quant (c18-9 / temporal-quantity
                                               :unit (c18-2 / week)
                                               :quant 2))))

# ::snt Glory to God!!!! : Two weeks before was killed he accepted Jesus Christ as his savior!
# ::tokens ["Glory", "to", "God", "!", "!", "!", "!", ":", "Two", "weeks", "before", "was", "killed", "he", "accepted", "Jesus", "Christ", "as", "his", "savior", "!"]
# ::lemmas ["glory", "to", "God", "!", "!", "!", "!", ":", "Two", "weeks", "before", "be", "kill", "he", "accept", "Jesus", "Christ", "as", "his", "savior", "!"]
(c19-2 / multi-sentence
       :snt1 (c19-7 / glory
                    :beneficiary (c19-6 / person
                                        :name (c19-4 / name
                                                     :op1 "God")))
       :snt2 (c19-12 / accept-01
                     :ARG0 (c19-0 / he)
                     :ARG1 (c19-11 / person
                                   :name (c19-5 / name
                                                :op1 "Jesus"
                                                :op2 "Christ"))
                     :ARG3 (c19-8 / savior
                                  :poss c19-0)
                     :time (c19-3 / before
                                  :op1 (c19-10 / kill-01
                                               :ARG1 c19-0)
                                  :quant (c19-9 / temporal-quantity
                                                :unit (c19-1 / week)
                                                :quant 2))))
