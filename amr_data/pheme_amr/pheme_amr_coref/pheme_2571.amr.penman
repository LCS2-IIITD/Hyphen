# ::snt it was a coffee shop
# ::tokens ["it", "was", "a", "coffee", "shop"]
# ::lemmas ["it", "be", "a", "coffee", "shop"]
(c1-0 / shop
      :mod (c1-1 / coffee)
      :domain (c1-2 / it))

# ::snt uhh im not sure, maybe try searching it?? im sorry i dont know much about it
# ::tokens ["uhh", "i", "m", "not", "sure", ",", "maybe", "try", "searching", "it", "?", "?", "i", "m", "sorry", "i", "do", "nt", "know", "much", "about", "it"]
# ::lemmas ["uhh", "i", "m", "not", "sure", ",", "maybe", "try", "search", "it", "?", "?", "i", "m", "sorry", "i", "do", "not", "know", "much", "about", "it"]
(c2-2 / multi-sentence
      :snt1 (c2-12 / sure-02
                   :ARG0 (c2-7 / i)
                   :mod (c2-3 / uhh)
                   :polarity -)
      :snt2 (c2-9 / possible-01
                  :polarity (c2-14 / amr-unknown)
                  :ARG1 (c2-13 / try-01
                               :ARG0 (c2-0 / you)
                               :ARG1 (c2-6 / search-01
                                           :ARG0 c2-0
                                           :ARG1 (c2-11 / it))))
      :snt3 (c2-1 / sorry-01
                  :ARG1 (c2-4 / i)
                  :ARG2 (c2-8 / know-01
                              :ARG0 c2-4
                              :ARG1 (c2-10 / much
                                           :topic (c2-5 / it))
                              :polarity -)))

# ::snt Katy &amp; Bieber embrace Islam: Bible &amp; NASA embrace Islam: .
# ::tokens ["Katy", "&", "amp", ";", "Bieber", "embrace", "Islam", ":", "Bible", "&", "amp", ";", "NASA", "embrace", "Islam", ":", "."]
# ::lemmas ["Katy", "&", "amp", ";", "Bieber", "embrace", "Islam", ":", "Bible", "&", "amp", ";", "NASA", "embrace", "Islam", ":", "."]
(c3-10 / and
       :op1 (c3-2 / embrace-01
                  :ARG0 (c3-6 / person
                              :name (c3-4 / name
                                          :op1 "Bieber"))
                  :ARG1 (c3-7 / religious-group
                              :name (c3-5 / name
                                          :op1 "Islam")))
       :op2 (c3-1 / embrace-01
                  :ARG0 (c3-3 / research-institute
                              :name (c3-8 / name
                                          :op1 "Bible"))
                  :ARG1 c3-7)
       :op3 (c3-0 / embrace-01
                  :ARG0 c3-3
                  :name (c3-9 / name
                              :op1 "NASA"))
       :ARG1 c3-7)

# ::snt hostages at a cafe, i hope they'll be alright D
# ::tokens ["hostages", "at", "a", "cafe", ",", "i", "hope", "they", "'ll", "be", "alright", "D"]
# ::lemmas ["hostage", "at", "a", "cafe", ",", "i", "hope", "they", "'ll", "be", "alright", "d"]
(c4-0 / hope-01
      :ARG0 (c4-3 / i)
      :ARG1 (c4-6 / all-right
                  :domain (c4-4 / person
                                :ARG0-of (c4-1 / host-01
                                               :location (c4-5 / cafe))))
      :mod (c4-2 / emoticon
                 :value "D"))

# ::snt :plus that's where they'll stay when they are in sac
# ::tokens [":", "plus", "that", "'s", "where", "they", "'ll", "stay", "when", "they", "are", "in", "sac"]
# ::lemmas [":", "plus", "that", "be", "where", "they", "'ll", "stay", "when", "they", "be", "in", "sac"]
(c5-5 / and
      :op2 (c5-4 / that
                 :location-of (c5-3 / stay-01
                                    :ARG1 (c5-2 / they)
                                    :time (c5-0 / be-located-at-91
                                                :ARG1 c5-2
                                                :ARG2 (c5-1 / sac)))))

# ::snt its so scary my thoughts go to the hostages
# ::tokens ["its", "so", "scary", "my", "thoughts", "go", "to", "the", "hostages"]
# ::lemmas ["its", "so", "scary", "my", "thought", "go", "to", "the", "hostage"]
(c6-4 / scary-03
      :ARG0 (c6-3 / go-01
                  :ARG1 (c6-5 / think-01
                              :ARG0 (c6-2 / i))
                  :ARG4 (c6-0 / hostage))
      :degree (c6-1 / so))

# ::snt What happened?
# ::tokens ["What", "happened", "?"]
# ::lemmas ["what", "happen", "?"]
(c7-0 / event
      :polarity (c7-1 / amr-unknown))

# ::snt *extremist, there's only on guy so it seems. And yeah it's awful
# ::tokens ["*", "extremist", ",", "there", "'s", "only", "on", "guy", "so", "it", "seems", ".", "And", "yeah", "it", "'s", "awful"]
# ::lemmas ["*", "extremist", ",", "there", "be", "only", "on", "guy", "so", "it", "seem", ".", "and", "yeah", "it", "be", "awful"]
(c8-2 / multi-sentence
      :snt1 (c8-8 / seem-01
                  :ARG1 (c8-3 / on-01
                              :ARG1 (c8-7 / guy)
                              :mod (c8-1 / only))
                  :mod (c8-4 / extreme))
      :snt2 (c8-9 / and
                  :op2 (c8-5 / awful
                             :domain (c8-6 / it)
                             :mod (c8-0 / yeah))))

# ::snt what happened?
# ::tokens ["what", "happened", "?"]
# ::lemmas ["what", "happen", "?"]
(c9-0 / event
      :polarity (c9-1 / amr-unknown))

# ::snt omg D
# ::tokens ["omg", "D"]
# ::lemmas ["omg", "D"]
(c10-0 / opine-01
       :ARG0 (c10-2 / i)
       :mod (c10-1 / dumb))

# ::snt :what happened
# ::tokens [":", "what", "happened"]
# ::lemmas [":", "what", "happen"]
(c11-0 / event)

# ::snt ya that's why I was curious because hopefully they still film some in sacramento
# ::tokens ["ya", "that", "'s", "why", "I", "was", "curious", "because", "hopefully", "they", "still", "film", "some", "in", "sacramento"]
# ::lemmas ["ya", "that", "be", "why", "i", "be", "curious", "because", "hopefully", "they", "still", "film", "some", "in", "sacramento"]
(c12-6 / cause-01
       :ARG0 (c12-9 / that)
       :ARG1 (c12-5 / curious-01
                    :ARG1 (c12-4 / i)
                    :ARG1-of (c12-8 / cause-01
                                    :ARG0 (c12-0 / hope-01
                                                 :ARG1 (c12-1 / film-01
                                                              :ARG0 (c12-7 / they)
                                                              :ARG1 (c12-10 / some)
                                                              :time (c12-3 / sacramento)
                                                              :mod (c12-2 / still))))))

# ::snt Wow that's terrible.. I wish the best for them seriously :/
# ::tokens ["Wow", "that", "'s", "terrible", "..", "I", "wish", "the", "best", "for", "them", "seriously", ":/"]
# ::lemmas ["wow", "that", "be", "terrible", "..", "i", "wish", "the", "good", "for", "they", "seriously", ":/"]
(c13-2 / multi-sentence
       :snt1 (c13-11 / terrible-01
                     :ARG1 (c13-9 / that)
                     :mod (c13-1 / wow
                                 :mode expressive))
       :snt2 (c13-5 / wish-01
                    :ARG0 (c13-4 / i)
                    :ARG1 (c13-6 / thing
                                 :ARG1-of (c13-8 / good-02
                                                 :ARG2-of (c13-0 / have-degree-91
                                                                 :ARG1 c13-6
                                                                 :ARG3 (c13-7 / most))))
                    :ARG2 (c13-3 / they)
                    :ARG2-of (c13-10 / serious-01)))

# ::snt Why are you so cute and nice anD UGH
# ::tokens ["Why", "are", "you", "so", "cute", "and", "nice", "anD", "UGH"]
# ::lemmas ["why", "be", "you", "so", "cute", "and", "nice", "and", "UGH"]
(c14-10 / ask-01
        :ARG0 (c14-4 / i)
        :ARG1 (c14-8 / cause-01
                     :ARG0 (c14-3 / amr-unknown)
                     :ARG1 (c14-6 / and
                                  :op1 (c14-7 / cute
                                              :domain (c14-0 / you)
                                              :degree (c14-9 / so))
                                  :op2 (c14-5 / nice-01
                                              :ARG1 c14-0
                                              :degree (c14-2 / so)))
                     :mod (c14-1 / urgh
                                 :mode expressive))
        :ARG2 c14-0)

# ::snt yeah thats what i heard or at least something like that
# ::tokens ["yeah", "that", "s", "what", "i", "heard", "or", "at", "least", "something", "like", "that"]
# ::lemmas ["yeah", "that", "s", "what", "i", "hear", "or", "at", "least", "something", "like", "that"]
(c15-2 / or
       :op1 (c15-0 / hear-01
                   :ARG0 (c15-3 / i)
                   :ARG1 (c15-6 / that))
       :op2 (c15-5 / something
                   :ARG1-of (c15-4 / resemble-01
                                   :ARG2 c15-6)
                   :mod (c15-7 / at-least))
       :mod (c15-1 / yeah
                   :mode expressive))

# ::snt ok tru
# ::tokens ["ok", "tru"]
# ::lemmas ["ok", "tru"]
(c16-0 / okay-04)

# ::snt thanks ian.
# ::tokens ["thanks", "ian", "."]
# ::lemmas ["thank", "ian", "."]
(c17-2 / thank-01
       :ARG0 (c17-3 / i)
       :ARG1 (c17-1 / person
                    :name (c17-0 / name
                                 :op1 "ian")))

# ::snt because la is closer to basically everything and he won't have to keep going back and forth, I'm assuming he's getting his own
# ::tokens ["because", "la", "is", "closer", "to", "basically", "everything", "and", "he", "wo", "n't", "have", "to", "keep", "going", "back", "and", "forth", ",", "I", "'m", "assuming", "he", "'s", "getting", "his", "own"]
# ::lemmas ["because", "la", "be", "close", "to", "basically", "everything", "and", "he", "will", "not", "have", "to", "keep", "go", "back", "and", "forth", ",", "i", "be", "assume", "he", "be", "get", "his", "own"]
(c18-5 / assume-02
       :ARG0 (c18-14 / i)
       :ARG1 (c18-12 / get-01
                     :ARG0 (c18-6 / he)
                     :ARG1 (c18-19 / thing
                                   :poss c18-6))
       :ARG1-of (c18-18 / cause-01
                        :ARG0 (c18-13 / and
                                      :op1 (c18-2 / close-10
                                                  :ARG1 (c18-1 / person
                                                               :name (c18-10 / name
                                                                             :op1 "la"))
                                                  :ARG2 (c18-9 / everything
                                                               :mod (c18-8 / basic))
                                                  :ARG2-of (c18-4 / have-degree-91
                                                                  :ARG1 c18-1
                                                                  :ARG3 (c18-0 / more)))
                                      :op2 (c18-17 / obligate-01
                                                   :ARG1 c18-6
                                                   :ARG2 (c18-16 / keep-02
                                                                 :ARG0 c18-6
                                                                 :ARG1 (c18-3 / go-02
                                                                              :ARG0 c18-6
                                                                              :path (c18-11 / and
                                                                                            :op1 (c18-15 / back)
                                                                                            :op2 (c18-7 / forth))))
                                                   :polarity -))))

# ::snt What is going on?
# ::tokens ["What", "is", "going", "on", "?"]
# ::lemmas ["what", "be", "go", "on", "?"]
(c19-1 / amr-unknown
       :mod (c19-0 / event))

# ::snt lindt cafe yeah
# ::tokens ["lindt", "cafe", "yeah"]
# ::lemmas ["lindt", "cafe", "yeah"]
(c20-2 / cafe
       :name (c20-0 / name
                    :op1 "Lindt"
                    :op2 " cafe")
       :mod (c20-1 / yeah
                   :mode expressive))

# ::snt oh
# ::tokens ["oh"]
# ::lemmas ["oh"]
(c21-0 / oh
       :mode expressive)

# ::snt no longer will I live near him, will they keep the smosh house?
# ::tokens ["no", "longer", "will", "I", "live", "near", "him", ",", "will", "they", "keep", "the", "smosh", "house", "?"]
# ::lemmas ["no", "long", "will", "i", "live", "near", "he", ",", "will", "they", "keep", "the", "smosh", "house", "?"]
(c22-10 / and
        :op1 (c22-1 / live-01
                    :ARG0 (c22-4 / i)
                    :ARG1-of (c22-5 / near-02
                                    :ARG2 (c22-0 / he))
                    :time (c22-6 / no-longer))
        :op2 (c22-8 / keep-01
                    :ARG0 (c22-7 / they)
                    :ARG1 (c22-2 / house
                                 :mod (c22-9 / smosh))
                    :polarity (c22-3 / amr-unknown)))

# ::snt OMG BABE I LIVE IN SYDNEY its soo scary
# ::tokens ["OMG", "BABE", "I", "LIVE", "IN", "SYDNEY", "its", "soo", "scary"]
# ::lemmas ["OMG", "BABE", "i", "live", "in", "SYDNEY", "its", "soo", "scary"]
(c23-6 / scary-03
       :ARG0 (c23-0 / live-01
                    :ARG0 (c23-3 / i)
                    :location (c23-5 / city
                                     :name (c23-4 / name
                                                  :op1 "Sydney")))
       :degree (c23-2 / so)
       :mod (c23-1 / oh-my-god
                   :mode expressive))

# ::snt he's moving to la
# ::tokens ["he", "'s", "moving", "to", "la"]
# ::lemmas ["he", "be", "move", "to", "la"]
(c24-3 / move-01
       :ARG0 (c24-0 / he)
       :ARG2 (c24-2 / city
                    :name (c24-1 / name
                                 :op1 "la")))

# ::snt yeah no problem! &lt;3
# ::tokens ["yeah", "no", "problem", "!", "&", "lt;3"]
# ::lemmas ["yeah", "no", "problem", "!", "&", "lt;3"]
(c25-1 / problem
       :mod (c25-0 / yeah
                   :mode expressive)
       :polarity -)

# ::snt there is a siege and a Muslim I think has around people hostage in a cafe :3 and he is armed with a shotgun
# ::tokens ["there", "is", "a", "siege", "and", "a", "Muslim", "I", "think", "has", "around", "people", "hostage", "in", "a", "cafe", ":3", "and", "he", "is", "armed", "with", "a", "shotgun"]
# ::lemmas ["there", "be", "a", "siege", "and", "a", "Muslim", "i", "think", "have", "around", "people", "hostage", "in", "a", "cafe", ":3", "and", "he", "be", "arm", "with", "a", "shotgun"]
(c26-14 / and
        :op1 (c26-3 / and
                    :op1 (c26-11 / siege-01)
                    :op2 (c26-0 / hold-01
                                :ARG0 (c26-7 / person
                                             :mod (c26-8 / religious-group
                                                         :name (c26-5 / name
                                                                      :op1 "Muslim")))
                                :ARG1 (c26-13 / person
                                              :location (c26-9 / cafe))
                                :ARG3 (c26-1 / hostage)
                                :ARG1-of (c26-12 / think-01
                                                 :ARG0 (c26-4 / i))))
        :op2 (c26-6 / arm-01
                    :ARG1 (c26-10 / he)
                    :ARG2 (c26-2 / shotgun)))

# ::snt who's in Sydney?
# ::tokens ["who", "'s", "in", "Sydney", "?"]
# ::lemmas ["who", "be", "in", "Sydney", "?"]
(c27-1 / city
       :name (c27-0 / name
                    :op1 "Sydney")
       :location-of (c27-2 / amr-unknown))

# ::snt there's this terrorist siege and they're holding a number of hostages in this cafe in Central Sydney :/
# ::tokens ["there", "'s", "this", "terrorist", "siege", "and", "they", "'re", "holding", "a", "number", "of", "hostages", "in", "this", "cafe", "in", "Central", "Sydney", ":/"]
# ::lemmas ["there", "be", "this", "terrorist", "siege", "and", "they", "be", "hold", "a", "number", "of", "hostage", "in", "this", "cafe", "in", "Central", "Sydney", ":/"]
(c28-10 / and
        :op1 (c28-8 / siege-01
                    :ARG0 (c28-9 / terrorist)
                    :mod (c28-7 / this))
        :op2 (c28-0 / hold-01
                    :ARG0 c28-9
                    :ARG1 (c28-1 / hostage
                                 :quant (c28-3 / number))
                    :location (c28-6 / cafe
                                     :mod (c28-4 / this)
                                     :location (c28-2 / local-region
                                                      :name (c28-5 / name
                                                                   :op1 "Central"
                                                                   :op2 "Sydney")))))

# ::snt there are about people being held hostage in a shop by religious extremists. The surrounding towns are in lockdown
# ::tokens ["there", "are", "about", "people", "being", "held", "hostage", "in", "a", "shop", "by", "religious", "extremists", ".", "The", "surrounding", "towns", "are", "in", "lockdown"]
# ::lemmas ["there", "be", "about", "people", "be", "hold", "hostage", "in", "a", "shop", "by", "religious", "extremist", ".", "the", "surround", "town", "be", "in", "lockdown"]
(c29-2 / multi-sentence
       :snt1 (c29-9 / about
                    :op1 (c29-0 / hold-01
                                :ARG0 (c29-4 / extremist
                                             :mod (c29-6 / religious))
                                :ARG1 (c29-1 / hostage)
                                :location (c29-7 / shop)))
       :snt2 (c29-3 / lock-down-05
                    :ARG1 (c29-8 / town
                                 :ARG1-of (c29-5 / surround-01))))

# ::snt a gunman had hostages in a coffee shop for hours
# ::tokens ["a", "gunman", "had", "hostages", "in", "a", "coffee", "shop", "for", "hours"]
# ::lemmas ["a", "gunman", "have", "hostage", "in", "a", "coffee", "shop", "for", "hours"]
(c30-0 / have-03
       :ARG0 (c30-4 / gunman)
       :ARG1 (c30-7 / hostage)
       :location (c30-5 / shop
                        :mod (c30-3 / coffee))
       :duration (c30-1 / multiple
                        :op1 (c30-6 / temporal-quantity
                                    :unit (c30-2 / hour)
                                    :quant 1)))

# ::snt people are being held hostage in a candy shop or smthing
# ::tokens ["people", "are", "being", "held", "hostage", "in", "a", "candy", "shop", "or", "smthing"]
# ::lemmas ["people", "be", "be", "hold", "hostage", "in", "a", "candy", "shop", "or", "smthe"]
(c31-0 / hold-01
       :ARG1 (c31-6 / hostage
                    :domain (c31-3 / person))
       :location (c31-1 / or
                        :op1 (c31-5 / shop
                                    :mod (c31-4 / candy))
                        :op2 (c31-2 / smthing)))

# ::snt what's happened_?
# ::tokens ["what", "'s", "happened", "_", "?"]
# ::lemmas ["what", "be", "happen", "_", "?"]
(c32-0 / event
       :mod (c32-1 / amr-unknown))

# ::snt D
# ::tokens ["D"]
# ::lemmas ["d"]
(c33-0 / emoticon
       :value "D")

# ::snt :ian are you moving out of sacramento
# ::tokens [":", "ian", "are", "you", "moving", "out", "of", "sacramento"]
# ::lemmas [":", "ian", "be", "you", "move", "out", "of", "sacramento"]
(c34-6 / say-01
       :ARG1 (c34-1 / move-01
                    :ARG0 (c34-0 / you)
                    :ARG2 (c34-2 / out-06
                                 :ARG2 (c34-3 / sacramento))
                    :polarity (c34-7 / amr-unknown))
       :ARG2 (c34-5 / person
                    :name (c34-4 / name
                                 :op1 "Christian")))

# ::snt there is a siege happening right now
# ::tokens ["there", "is", "a", "siege", "happening", "right", "now"]
# ::lemmas ["there", "be", "a", "siege", "happen", "right", "now"]
(c35-0 / siege-01
       :time (c35-1 / now
                    :mod (c35-2 / right)))

# ::snt wait are you serious omg
# ::tokens ["wait", "are", "you", "serious", "omg"]
# ::lemmas ["wait", "be", "you", "serious", "omg"]
(c36-1 / wait-01
       :ARG1 (c36-0 / serious-01
                    :ARG1 (c36-2 / you))
       :mod (c36-3 / omg
                   :mode expressive))

# ::snt Makes sense. When and where did he announce it?
# ::tokens ["Makes", "sense", ".", "When", "and", "where", "did", "he", "announce", "it", "?"]
# ::lemmas ["make", "sense", ".", "when", "and", "where", "do", "he", "announce", "it", "?"]
(c37-1 / multi-sentence
       :snt1 (c37-5 / sense-02)
       :snt2 (c37-8 / announce-01
                    :ARG0 (c37-0 / he)
                    :ARG1 (c37-3 / it)
                    :time (c37-2 / and
                                 :op1 (c37-4 / amr-unknown)
                                 :op2 (c37-6 / amr-unknown))
                    :time (c37-7 / then)))

# ::snt don't apologize, you didn't do anything to me but thank you anyways
# ::tokens ["do", "n't", "apologize", ",", "you", "did", "n't", "do", "anything", "to", "me", "but", "thank", "you", "anyways"]
# ::lemmas ["do", "not", "apologize", ",", "you", "do", "not", "do", "anything", "to", "i", "but", "thank", "you", "anyways"]
(c38-8 / and
       :op1 (c38-1 / apologize-01
                   :ARG0 (c38-0 / you)
                   :polarity -
                   :mode imperative)
       :op2 (c38-5 / contrast-01
                   :ARG1 (c38-4 / do-02
                                :ARG0 c38-0
                                :ARG1 (c38-3 / anything)
                                :ARG2 (c38-2 / i)
                                :polarity -)
                   :ARG2 (c38-7 / thank-01
                                :ARG0 c38-2
                                :ARG1 c38-0
                                :mod (c38-6 / anyways))))

# ::snt How do you know he's moving to LA. Also is he getting his own place or a place with Anthony? Plz let me know D
# ::tokens ["How", "do", "you", "know", "he", "'s", "moving", "to", "LA", ".", "Also", "is", "he", "getting", "his", "own", "place", "or", "a", "place", "with", "Anthony", "?", "Plz", "let", "me", "know", "D"]
# ::lemmas ["how", "do", "you", "know", "he", "be", "move", "to", "LA", ".", "also", "be", "he", "get", "his", "own", "place", "or", "a", "place", "with", "Anthony", "?", "plz", "let", "i", "know", "d"]
(c39-0 / multi-sentence
       :snt1 (c39-15 / know-01
                     :ARG0 (c39-16 / you)
                     :ARG1 (c39-11 / move-01
                                   :ARG0 (c39-6 / he)
                                   :ARG2 (c39-19 / city
                                                 :name (c39-9 / name
                                                              :op1 "LA")))
                     :manner (c39-5 / amr-unknown))
       :snt2 (c39-12 / get-01
                     :ARG0 (c39-4 / he)
                     :ARG1 (c39-17 / or
                                   :op1 (c39-2 / place
                                               :poss c39-4)
                                   :op2 (c39-3 / place
                                               :poss c39-4))
                     :ARG4 (c39-8 / person
                                  :name (c39-18 / name
                                                :op1 "Anthony"))
                     :mod (c39-13 / also)
                     :polarity (c39-10 / amr-unknown))
       :snt3 (c39-7 / let-know-07
                    :ARG0 (c39-20 / you)
                    :ARG1 (c39-14 / i)
                    :ARG2 c39-8
                    :name (c39-1 / name
                                 :op1 "D")
                    :mode imperative
                    :polite +))

# ::snt :thanks babe
# ::tokens [":", "thanks", "babe"]
# ::lemmas [":", "thank", "babe"]
(c40-0 / say-01
       :ARG1 (c40-1 / thank-01)
       :ARG2 (c40-2 / babe))

# ::snt that's horrible
# ::tokens ["that", "'s", "horrible"]
# ::lemmas ["that", "be", "horrible"]
(c41-0 / horrible
       :domain (c41-1 / that))

# ::snt ily
# ::tokens ["ily"]
# ::lemmas ["ily"]
(c42-1 / person
       :name (c42-0 / name
                    :op1 "ily"))

# ::snt are you from Sydney? Be safe as well!!
# ::tokens ["are", "you", "from", "Sydney", "?", "Be", "safe", "as", "well", "!", "!"]
# ::lemmas ["be", "you", "from", "Sydney", "?", "be", "safe", "as", "well", "!", "!"]
(c43-1 / multi-sentence
       :snt1 (c43-0 / you
                    :source (c43-4 / city
                                   :name (c43-3 / name
                                                :op1 "Sydney"))
                    :polarity (c43-6 / amr-unknown))
       :snt2 (c43-5 / safe-01
                    :ARG1 c43-0
                    :mode imperative)
       :mod (c43-2 / as-well))

# ::snt I'm just glad it's over and that guy in hell where he belongs
# ::tokens ["I", "'m", "just", "glad", "it", "'s", "over", "and", "that", "guy", "in", "hell", "where", "he", "belongs"]
# ::lemmas ["i", "be", "just", "glad", "it", "be", "over", "and", "that", "guy", "in", "hell", "where", "he", "belong"]
(c44-6 / glad-02
       :ARG0 (c44-9 / and
                    :op1 (c44-3 / over-01
                                :ARG1 (c44-4 / it))
                    :op2 (c44-5 / guy
                                :mod (c44-8 / that)
                                :location (c44-0 / hell)
                                :ARG1-of (c44-2 / belong-01
                                                :ARG0 c44-5)))
       :ARG1 (c44-7 / i)
       :mod (c44-1 / just))

# ::snt (
# ::tokens ["("]
# ::lemmas ["("]
(c45-0 / amr-empty)

# ::snt :yeah. they haven't lived in the Smosh house for nearly years. They need it to film.
# ::tokens [":", "yeah", ".", "they", "have", "n't", "lived", "in", "the", "Smosh", "house", "for", "nearly", "years", ".", "They", "need", "it", "to", "film", "."]
# ::lemmas [":", "yeah", ".", "they", "have", "not", "live", "in", "the", "Smosh", "house", "for", "nearly", "years", ".", "they", "need", "it", "to", "film", "."]
(c46-3 / multi-sentence
       :snt1 (c46-1 / yeah
                    :mode expressive)
       :snt2 (c46-2 / live-01
                    :ARG0 (c46-12 / they)
                    :location (c46-0 / house
                                     :poss (c46-8 / person
                                                  :name (c46-6 / name
                                                               :op1 "Smosh")))
                    :duration (c46-7 / nearly
                                     :op1 (c46-11 / temporal-quantity
                                                  :unit (c46-13 / year)
                                                  :quant 1))
                    :polarity -)
       :snt3 (c46-9 / need-01
                    :ARG0 (c46-10 / they)
                    :ARG1 (c46-4 / film-01
                                 :ARG0 c46-10
                                 :ARG1 (c46-5 / it))))

# ::snt omg best wishes stay safe good luck
# ::tokens ["omg", "best", "wishes", "stay", "safe", "good", "luck"]
# ::lemmas ["omg", "good", "wish", "stay", "safe", "good", "luck"]
(c47-9 / stay-01
       :ARG1 (c47-1 / wish-01
                    :ARG1 (c47-2 / luck
                                 :ARG1-of (c47-8 / good-02))
                    :ARG1-of (c47-0 / have-degree-91
                                    :ARG2 (c47-7 / good-02
                                                 :ARG1 c47-1)
                                    :ARG3 (c47-3 / most)))
       :ARG3 (c47-5 / safe-01
                    :ARG1 (c47-6 / person))
       :mod (c47-4 / oh-my-god
                   :mode expressive))

# ::snt do we know why?
# ::tokens ["do", "we", "know", "why", "?"]
# ::lemmas ["do", "we", "know", "why", "?"]
(c48-1 / know-01
       :polarity (c48-4 / amr-unknown)
       :ARG0 (c48-0 / we)
       :ARG1 (c48-3 / thing
                    :ARG0-of (c48-2 / cause-01)))
