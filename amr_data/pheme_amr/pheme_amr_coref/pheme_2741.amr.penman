# ::snt when you light shit on fire and threaten to kill police... You are part of a mob.
# ::tokens ["when", "you", "light", "shit", "on", "fire", "and", "threaten", "to", "kill", "police", "...", "You", "are", "part", "of", "a", "mob", "."]
# ::lemmas ["when", "you", "light", "shit", "on", "fire", "and", "threaten", "to", "kill", "police", "...", "you", "be", "part", "of", "a", "mob", "."]
(c1-0 / have-part-91
      :ARG1 (c1-3 / mob)
      :ARG2 (c1-1 / you)
      :time (c1-8 / and
                  :op1 (c1-2 / light-on-fire-09
                             :ARG0 c1-1
                             :ARG1 (c1-6 / shit))
                  :op2 (c1-7 / threaten-01
                             :ARG0 c1-1
                             :ARG1 (c1-4 / kill-01
                                         :ARG0 c1-1
                                         :ARG1 (c1-5 / police)))))

# ::snt : calling the neighbors a mob = dehumanizing a community to justify all future wrongdoing.
# ::tokens [":", "calling", "the", "neighbors", "a", "mob", "=", "dehumanizing", "a", "community", "to", "justify", "all", "future", "wrongdoing", "."]
# ::lemmas [":", "call", "the", "neighbor", "a", "mob", "=", "dehumanize", "a", "community", "to", "you", "all", "future", "wrongdoing", "."]
(c2-4 / equal-01
      :ARG1 (c2-7 / call-01
                  :ARG1 (c2-5 / neighbor)
                  :ARG2 (c2-3 / mob))
      :ARG2 (c2-6 / dehumanize-01
                  :ARG1 (c2-8 / community)
                  :purpose (c2-0 / justify-01
                                 :ARG1 (c2-9 / thing
                                             :ARG1-of (c2-1 / do-02
                                                            :ARG0 c2-8
                                                            :time (c2-2 / future)
                                                            :ARG1 c2-9)
                                             :ARG0 c2-8)
                                 :mod (c2-10 / all))))

# ::snt That is the narrative to keep Blacks as either inhuman or lower form of humanity.
# ::tokens ["That", "is", "the", "narrative", "to", "keep", "Blacks", "as", "either", "inhuman", "or", "lower", "form", "of", "humanity", "."]
# ::lemmas ["that", "be", "the", "narrative", "to", "keep", "Blacks", "as", "either", "inhuman", "or", "low", "form", "of", "humanity", "."]
(c3-7 / narrate-01
      :ARG1 (c3-11 / keep-02
                   :ARG1 (c3-9 / person
                               :ARG1-of (c3-4 / black-05))
                   :ARG2 (c3-5 / or
                               :op1 (c3-0 / human
                                          :mod (c3-6 / inhuman))
                               :op2 (c3-12 / human
                                           :mod (c3-1 / form
                                                      :ARG1-of (c3-8 / have-degree-91
                                                                     :ARG2 (c3-2 / low-04
                                                                                 :ARG1 c3-1)
                                                                     :ARG3 (c3-3 / more))))))
      :domain (c3-10 / that))

# ::snt no. Calling the neighbors a mob because they're a mob. The response will be predictable because it's how you deal with mobs.
# ::tokens ["no", ".", "Calling", "the", "neighbors", "a", "mob", "because", "they", "'re", "a", "mob", ".", "The", "response", "will", "be", "predictable", "because", "it", "'s", "how", "you", "deal", "with", "mobs", "."]
# ::lemmas ["no", ".", "call", "the", "neighbor", "a", "mob", "because", "they", "be", "a", "mob", ".", "the", "response", "will", "be", "predictable", "because", "it", "be", "how", "you", "deal", "with", "mobs", "."]
(c4-2 / multi-sentence
      :snt1 (c4-4 / no)
      :snt2 (c4-8 / call-01
                  :ARG1 (c4-5 / neighbor)
                  :ARG2 (c4-6 / mob)
                  :ARG1-of (c4-7 / cause-01
                                 :ARG0 (c4-1 / mob
                                             :domain c4-5)))
      :snt3 (c4-9 / possible-01
                  :ARG1 (c4-15 / predict-01
                               :ARG1 (c4-14 / thing
                                            :ARG2-of (c4-10 / respond-01)))
                  :ARG1-of (c4-12 / cause-01
                                  :ARG0 (c4-11 / deal-01
                                               :ARG0 (c4-0 / you)
                                               :ARG2 (c4-13 / mob)
                                               :manner (c4-3 / it)))))

# ::snt Children of color lives have no worth in the eyes of those called to serve and protect them.
# ::tokens ["Children", "of", "color", "lives", "have", "no", "worth", "in", "the", "eyes", "of", "those", "called", "to", "serve", "and", "protect", "them", "."]
# ::lemmas ["child", "of", "color", "life", "have", "no", "worth", "in", "the", "eye", "of", "those", "call", "to", "serve", "and", "protect", "they", "."]
(c5-0 / worth-01
      :ARG1 (c5-1 / life
                  :mod (c5-5 / color))
      :ARG2 (c5-3 / person
                  :mod (c5-8 / that)
                  :ARG1-of (c5-4 / call-02
                                 :ARG2 (c5-10 / and
                                              :op1 (c5-7 / serve-01
                                                         :ARG0 c5-3
                                                         :ARG2 (c5-6 / child))
                                              :op2 (c5-9 / protect-01
                                                         :ARG0 c5-3
                                                         :ARG1 c5-6))))
      :ARG1-of (c5-2 / see-01
                     :ARG0 c5-6)
      :polarity -)

# ::snt : calling the neighbors a mob = dehumanizing a community to justify all future wrongdoing.
# ::tokens [":", "calling", "the", "neighbors", "a", "mob", "=", "dehumanizing", "a", "community", "to", "justify", "all", "future", "wrongdoing", "."]
# ::lemmas [":", "call", "the", "neighbor", "a", "mob", "=", "dehumanize", "a", "community", "to", "you", "all", "future", "wrongdoing", "."]
(c6-4 / equal-01
      :ARG1 (c6-7 / call-01
                  :ARG1 (c6-5 / neighbor)
                  :ARG2 (c6-3 / mob))
      :ARG2 (c6-6 / dehumanize-01
                  :ARG1 (c6-8 / community)
                  :purpose (c6-0 / justify-01
                                 :ARG1 (c6-9 / thing
                                             :ARG1-of (c6-1 / do-02
                                                            :ARG0 c6-8
                                                            :time (c6-2 / future)
                                                            :ARG1 c6-9)
                                             :ARG0 c6-8)
                                 :mod (c6-10 / all))))
