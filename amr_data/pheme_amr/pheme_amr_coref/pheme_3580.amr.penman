# ::snt ha well there's your answer then
# ::tokens ["ha", "well", "there", "'s", "your", "answer", "then"]
# ::lemmas ["ha", "well", "there", "be", "your", "answer", "then"]
(c1-4 / answer-01
      :ARG0 (c1-1 / you)
      :ARG2 (c1-3 / that)
      :mod (c1-0 / ha
                 :mode expressive)
      :mod (c1-2 / then))

# ::snt is the airport open?
# ::tokens ["is", "the", "airport", "open", "?"]
# ::lemmas ["be", "the", "airport", "open", "?"]
(c2-0 / open-01
      :ARG1 (c2-2 / airport)
      :polarity (c2-1 / amr-unknown))

# ::snt Of course. Because if they do before they are sure and they are wrong, people will be yelling at them for it.
# ::tokens ["Of", "course", ".", "Because", "if", "they", "do", "before", "they", "are", "sure", "and", "they", "are", "wrong", ",", "people", "will", "be", "yelling", "at", "them", "for", "it", "."]
# ::lemmas ["of", "course", ".", "because", "if", "they", "do", "before", "they", "be", "sure", "and", "they", "be", "wrong", ",", "people", "will", "be", "yell", "at", "they", "for", "it", "."]
(c3-3 / multi-sentence
      :snt1 (c3-5 / of-course)
      :snt2 (c3-9 / cause-01
                  :ARG0 (c3-0 / have-condition-91
                              :ARG1 (c3-1 / yell-01
                                          :ARG0 (c3-7 / person)
                                          :ARG2 (c3-12 / they)
                                          :ARG1-of c3-9
                                          :ARG0 (c3-6 / it)))
                  :ARG2 (c3-8 / do-02
                              :ARG0 (c3-10 / they)
                              :time (c3-4 / before
                                          :op1 (c3-11 / sure-02
                                                      :ARG0 c3-10)))
                  :time (c3-2 / wrong-04
                              :ARG1 c3-10)))

# ::snt Well if he WAS on the 'surveillance' list....perhaps we need to no longer "survey" these people!
# ::tokens ["Well", "if", "he", "WAS", "on", "the", "'", "surveillance", "'", "list", "....", "perhaps", "we", "need", "to", "no", "longer", "\"", "survey", "\"", "these", "people", "!"]
# ::lemmas ["well", "if", "he", "be", "on", "the", "'", "surveillance", "'", "list", "....", "perhaps", "we", "need", "to", "no", "long", "\"", "survey", "\"", "these", "people", "!"]
(c4-7 / possible-01
      :ARG1 (c4-5 / need-01
                  :ARG0 (c4-1 / we)
                  :ARG1 (c4-8 / surveil-01
                              :ARG1 (c4-10 / person
                                           :mod (c4-9 / this))
                              :time (c4-6 / no-longer)))
      :condition (c4-2 / list-01
                       :ARG1 (c4-0 / he)
                       :ARG2 (c4-3 / surveil-01))
      :mod (c4-4 / well))

# ::snt ET I suspect phrasing is innocuous and inadvertent, but of course they're not necessarily mutually exclusive.
# ::tokens ["ET", "I", "suspect", "phrasing", "is", "innocuous", "and", "inadvertent", ",", "but", "of", "course", "they", "'re", "not", "necessarily", "mutually", "exclusive", "."]
# ::lemmas ["ET", "i", "suspect", "phrasing", "be", "innocuous", "and", "inadvertent", ",", "but", "of", "course", "they", "be", "not", "necessarily", "mutually", "exclusive", "."]
(c5-0 / have-concession-91
      :ARG1 (c5-5 / possible-01
                  :ARG1 (c5-3 / exclusive-02
                              :ARG0 (c5-8 / they)
                              :manner (c5-2 / mutual))
                  :polarity -)
      :ARG2 (c5-7 / suspect-01
                  :ARG0 (c5-4 / i)
                  :ARG1 (c5-10 / and
                               :op1 (c5-6 / innocuous
                                          :domain (c5-9 / phrasing))
                               :op2 (c5-1 / inadvertent
                                          :domain c5-9))))

# ::snt ET There was a comma before the "or," though, which indicates a separate clause in a list, not variable states.
# ::tokens ["ET", "There", "was", "a", "comma", "before", "the", "\"", "or", ",", "\"", "though", ",", "which", "indicates", "a", "separate", "clause", "in", "a", "list", ",", "not", "variable", "states", "."]
# ::lemmas ["ET", "there", "be", "a", "comma", "before", "the", "\"", "or", ",", "\"", "though", ",", "which", "indicate", "a", "separate", "clause", "in", "a", "list", ",", "not", "variable", "state", "."]
(c6-0 / have-concession-91
      :ARG2 (c6-3 / be-located-at-91
                  :ARG1 (c6-9 / comma)
                  :ARG2 (c6-8 / before
                              :op1 (c6-11 / string-entity
                                          :value "or"))
                  :ARG0-of (c6-5 / indicate-01
                                 :ARG1 (c6-7 / clause
                                             :ARG1-of (c6-4 / separate-02)
                                             :location (c6-1 / list)
                                             :ARG1-of (c6-10 / contrast-01
                                                             :ARG2 (c6-2 / state
                                                                         :ARG1-of (c6-6 / vary-01
                                                                                        :polarity -)))))))

# ::snt they didn't even want to confirm if it was the same shooter at memorial and hill...we need answers
# ::tokens ["they", "did", "n't", "even", "want", "to", "confirm", "if", "it", "was", "the", "same", "shooter", "at", "memorial", "and", "hill", "...", "we", "need", "answers"]
# ::lemmas ["they", "do", "not", "even", "want", "to", "confirm", "if", "it", "be", "the", "same", "shooter", "at", "memorial", "and", "hill", "...", "we", "need", "answer"]
(c7-2 / multi-sentence
      :snt1 (c7-1 / want-01
                  :ARG0 (c7-14 / they)
                  :ARG1 (c7-11 / confirm-01
                               :ARG0 c7-14
                               :ARG1 (c7-13 / same-01
                                            :ARG1 (c7-6 / it)
                                            :ARG2 (c7-9 / person
                                                        :ARG0-of (c7-3 / shoot-02)
                                                        :location (c7-15 / and
                                                                         :op1 (c7-10 / memorial)
                                                                         :op2 (c7-0 / hill)))))
                  :mod (c7-4 / even)
                  :polarity -)
      :snt2 (c7-8 / need-01
                  :ARG0 (c7-7 / we)
                  :ARG1 (c7-12 / thing
                               :ARG2-of (c7-5 / answer-01))))

# ::snt Hate to say it but we "politically corrected" ourselves into this.
# ::tokens ["Hate", "to", "say", "it", "but", "we", "\"", "politically", "corrected", "\"", "ourselves", "into", "this", "."]
# ::lemmas ["hate", "to", "say", "it", "but", "we", "\"", "politically", "correct", "\"", "ourselves", "into", "this", "."]
(c8-5 / contrast-01
      :ARG1 (c8-0 / hate-01
                  :ARG0 (c8-2 / i)
                  :ARG1 (c8-7 / say-01
                              :ARG0 c8-2
                              :ARG1 (c8-6 / it)))
      :ARG2 (c8-4 / correct-01
                  :ARG0 (c8-1 / we
                              :ARG1-of c8-4)
                  :ARG2 (c8-8 / this)
                  :manner (c8-3 / politics)))

# ::snt Fair point. But it doesn't (much) help me read it in a way where there are no terror suspects who are Canadians.
# ::tokens ["Fair", "point", ".", "But", "it", "does", "n't", "(", "much", ")", "help", "me", "read", "it", "in", "a", "way", "where", "there", "are", "no", "terror", "suspects", "who", "are", "Canadians", "."]
# ::lemmas ["fair", "point", ".", "but", "it", "do", "not", "(", "much", ")", "help", "i", "read", "it", "in", "a", "way", "where", "there", "be", "no", "terror", "suspect", "who", "be", "Canadians", "."]
(c9-3 / multi-sentence
      :snt1 (c9-6 / point-04
                  :ARG1-of (c9-2 / fair-01))
      :snt2 (c9-8 / contrast-01
                  :ARG2 (c9-0 / help-01
                              :ARG0 (c9-4 / it)
                              :ARG1 (c9-7 / read-01
                                          :ARG0 (c9-9 / i)
                                          :ARG1 c9-4)
                              :manner (c9-1 / way
                                            :location-of (c9-14 / person
                                                                :ARG2-of (c9-12 / suspect-01
                                                                                :ARG1 (c9-13 / terror))
                                                                :mod (c9-10 / country
                                                                            :name (c9-5 / name
                                                                                        :op1 "Canada"))
                                                                :polarity -))
                              :polarity -)
                  :ARG2 c9-9
                  :degree (c9-11 / much)))

# ::snt : Pretty sure the shooter was Lee Harvey Oswald but there is a possibility there was a second shooter in the grassy nole
# ::tokens [":", "Pretty", "sure", "the", "shooter", "was", "Lee", "Harvey", "Oswald", "but", "there", "is", "a", "possibility", "there", "was", "a", "second", "shooter", "in", "the", "grassy", "nole"]
# ::lemmas [":", "pretty", "sure", "the", "shooter", "be", "Lee", "Harvey", "Oswald", "but", "there", "be", "a", "possibility", "there", "be", "a", "second", "shooter", "in", "the", "grassy", "nole"]
(c10-7 / contrast-01
       :ARG1 (c10-9 / sure-02
                    :ARG1 (c10-6 / person
                                 :name (c10-4 / name
                                              :op1 "Lee"
                                              :op2 "Harvey"
                                              :op3 "Oswald")
                                 :ARG0-of (c10-3 / shoot-02))
                    :degree (c10-11 / pretty))
       :ARG2 (c10-1 / possible-01
                    :ARG1 (c10-10 / person
                                  :ARG0-of (c10-0 / shoot-02)
                                  :ord (c10-2 / ordinal-entity
                                              :value 2)
                                  :location (c10-5 / nole
                                                   :mod (c10-8 / grassy)))))

# ::snt Reasonable assumption. Words are *very* important though. I hold professional news organizations to a high standard.
# ::tokens ["Reasonable", "assumption", ".", "Words", "are", "*", "very", "*", "important", "though", ".", "I", "hold", "professional", "news", "organizations", "to", "a", "high", "standard", "."]
# ::lemmas ["reasonable", "assumption", ".", "word", "be", "*", "very", "*", "important", "though", ".", "i", "hold", "professional", "news", "organization", "to", "a", "high", "standard", "."]
(c11-3 / multi-sentence
       :snt1 (c11-13 / assume-01
                     :ARG1-of (c11-9 / reasonable-02))
       :snt2 (c11-5 / important-01
                    :ARG1 (c11-1 / word)
                    :degree (c11-7 / very)
                    :ARG1-of (c11-0 / have-concession-91))
       :snt3 (c11-2 / hold-01
                    :ARG0 (c11-11 / i)
                    :ARG1 (c11-4 / organization
                                 :mod (c11-6 / news)
                                 :mod (c11-8 / professional))
                    :ARG2 (c11-12 / standard
                                  :ARG1-of (c11-10 / high-02))))

# ::snt perhaps we should eliminate the known terrorists
# ::tokens ["perhaps", "we", "should", "eliminate", "the", "known", "terrorists"]
# ::lemmas ["perhaps", "we", "should", "eliminate", "the", "know", "terrorist"]
(c12-3 / possible-01
       :ARG1 (c12-4 / recommend-01
                    :ARG1 (c12-1 / eliminate-01
                                 :ARG0 (c12-0 / we)
                                 :ARG1 (c12-5 / terrorist
                                              :ARG1-of (c12-2 / know-01)))))

# ::snt ET As we all should.
# ::tokens ["ET", "As", "we", "all", "should", "."]
# ::lemmas ["ET", "as", "we", "all", "should", "."]
(c13-1 / ET
       :ARG1-of (c13-2 / recommend-01
                       :ARG2 (c13-0 / we
                                    :mod (c13-3 / all))))

# ::snt Most or all of whom are 'Canadian citizens'?
# ::tokens ["Most", "or", "all", "of", "whom", "are", "'", "Canadian", "citizens", "'", "?"]
# ::lemmas ["most", "or", "all", "of", "whom", "be", "'", "Canadian", "citizen", "'", "?"]
(c14-5 / citizen
       :polarity (c14-6 / amr-unknown)
       :domain (c14-1 / or
                      :op1 (c14-0 / most)
                      :op2 (c14-2 / all))
       :mod (c14-4 / country
                   :name (c14-3 / name
                                :op1 "Canada")))

# ::snt - is it impossible to be both?
# ::tokens ["-", "is", "it", "impossible", "to", "be", "both", "?"]
# ::lemmas ["-", "be", "it", "impossible", "to", "be", "both", "?"]
(c15-0 / possible-01
       :ARG1 (c15-2 / both)
       :polarity (c15-1 / amr-unknown)
       :polarity -)

# ::snt What does it matter, sometimes the biggest traitors come within.
# ::tokens ["What", "does", "it", "matter", ",", "sometimes", "the", "biggest", "traitors", "come", "within", "."]
# ::lemmas ["what", "do", "it", "matter", ",", "sometimes", "the", "big", "traitor", "come", "within", "."]
(c16-2 / matter-01
       :ARG1 (c16-4 / it)
       :ARG1-of (c16-7 / cause-01
                       :ARG0 (c16-6 / come-01
                                    :ARG1 (c16-5 / person
                                                 :ARG0-of (c16-3 / betray-01)
                                                 :ARG1-of (c16-0 / have-degree-91
                                                                 :ARG2 (c16-8 / big)
                                                                 :ARG3 (c16-9 / most)))
                                    :ARG4 (c16-1 / within)
                                    :frequency (c16-10 / sometimes))))

# ::snt Prob is and IS now a member of ISIS....they are all over the place Its a startin.but gov't is searching them out in Canada yeah?
# ::tokens ["Prob", "is", "and", "IS", "now", "a", "member", "of", "ISIS", "....", "they", "are", "all", "over", "the", "place", "Its", "a", "startin.but", "gov't", "is", "searching", "them", "out", "in", "Canada", "yeah", "?"]
# ::lemmas ["Prob", "be", "and", "be", "now", "a", "member", "of", "ISIS", "....", "they", "be", "all", "over", "the", "place", "its", "a", "startin.but", "gov't", "be", "search", "they", "out", "in", "Canada", "yeah", "?"]
(c17-0 / multi-sentence
       :snt1 (c17-9 / and
                    :op1 (c17-3 / person
                                :ARG0-of (c17-10 / have-org-role-91
                                                 :ARG1 (c17-23 / criminal-organization
                                                               :name (c17-14 / name
                                                                             :op1 "Islamic"
                                                                             :op2 "organization"))
                                                 :ARG2 (c17-16 / member)
                                                 :time (c17-22 / now)))
                    :op2 (c17-7 / person
                                :ARG0-of (c17-8 / have-org-role-91
                                                :ARG1 c17-23
                                                :ARG2 (c17-11 / member)
                                                :time (c17-1 / now)))
                    :location (c17-18 / all-over
                                      :op1 (c17-12 / place)))
       :snt2 (c17-6 / start-01
                    :ARG1 (c17-19 / it))
       :snt3 (c17-4 / contrast-01
                    :ARG2 (c17-13 / search-01
                                  :ARG0 (c17-17 / government-organization
                                                :ARG0-of (c17-5 / govern-01))
                                  :ARG1 (c17-20 / country
                                                :name (c17-2 / name
                                                             :op1 "Canada"))
                                  :ARG2 (c17-24 / they)
                                  :mod (c17-21 / yeah
                                               :mode expressive)
                                  :polarity (c17-15 / amr-unknown))))
