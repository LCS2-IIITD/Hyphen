# ::snt Don't provoke resentment, promote peace.
# ::tokens ["Do", "n't", "provoke", "resentment", ",", "promote", "peace", "."]
# ::lemmas ["do", "not", "provoke", "resentment", ",", "promote", "peace", "."]
(c1-5 / and
      :op1 (c1-2 / provoke-01
                 :ARG0 (c1-0 / you)
                 :ARG1 (c1-3 / resent-01)
                 :polarity -
                 :mode imperative)
      :op2 (c1-4 / promote-02
                 :ARG0 c1-0
                 :ARG1 (c1-1 / peace)
                 :mode imperative
                 :polarity -))

# ::snt check my timeline. we've had eyes on the ground the whole time
# ::tokens ["check", "my", "timeline", ".", "we", "'ve", "had", "eyes", "on", "the", "ground", "the", "whole", "time"]
# ::lemmas ["check", "my", "timeline", ".", "we", "'ve", "have", "eye", "on", "the", "ground", "the", "whole", "time"]
(c2-3 / multi-sentence
      :snt1 (c2-7 / check-01
                  :ARG0 (c2-1 / you)
                  :ARG1 (c2-10 / timeline
                               :poss (c2-5 / i))
                  :mode imperative)
      :snt2 (c2-0 / have-06
                  :ARG0 (c2-2 / we)
                  :ARG1 (c2-4 / eye
                              :location (c2-8 / ground))
                  :duration (c2-9 / time
                                  :mod (c2-6 / whole))))

# ::snt it's &amp; battle. unlimited data plans are not common in
# ::tokens ["it", "'s", "&", "amp", ";", "battle", ".", "unlimited", "data", "plans", "are", "not", "common", "in"]
# ::lemmas ["it", "be", "&", "amp", ";", "battle", ".", "unlimited", "datum", "plan", "be", "not", "common", "in"]
(c3-1 / multi-sentence
      :snt1 (c3-7 / and
                  :op1 (c3-3 / it)
                  :op2 (c3-2 / battle-01))
      :snt2 (c3-6 / common
                  :domain (c3-4 / plan-01
                                :ARG1 (c3-5 / data)
                                :ARG1-of (c3-0 / limit-01
                                               :polarity -))
                  :polarity -))

# ::snt It's Saint Louis as a whole. Riots are all over the city. Ferguson is a city in Saint Louis County.
# ::tokens ["It", "'s", "Saint", "Louis", "as", "a", "whole", ".", "Riots", "are", "all", "over", "the", "city", ".", "Ferguson", "is", "a", "city", "in", "Saint", "Louis", "County", "."]
# ::lemmas ["it", "be", "Saint", "Louis", "as", "a", "whole", ".", "riot", "be", "all", "over", "the", "city", ".", "Ferguson", "be", "a", "city", "in", "Saint", "Louis", "County", "."]
(c4-1 / multi-sentence
      :snt1 (c4-0 / whole
                  :domain (c4-2 / it)
                  :poss (c4-7 / city
                              :name (c4-3 / name
                                          :op1 "Saint"
                                          :op2 "Louis")))
      :snt2 (c4-6 / riot-01
                  :location (c4-10 / all-over
                                   :op1 (c4-8 / city)))
      :snt3 (c4-9 / city
                  :name (c4-4 / name
                              :op1 "Ferguson")
                  :location (c4-11 / county
                                   :name (c4-5 / name
                                               :op1 "Saint"
                                               :op2 "Louis"
                                               :op3 "County"))))

# ::snt Who is in Ferguson? Who can livestream? Who can tweet? The world needs to know what is going on. Let's show them.
# ::tokens ["Who", "is", "in", "Ferguson", "?", "Who", "can", "livestream", "?", "Who", "can", "tweet", "?", "The", "world", "needs", "to", "know", "what", "is", "going", "on", ".", "Let", "'s", "show", "them", "."]
# ::lemmas ["who", "be", "in", "Ferguson", "?", "who", "can", "livestream", "?", "who", "can", "tweet", "?", "the", "world", "need", "to", "know", "what", "be", "go", "on", ".", "let", "us", "show", "they", "."]
(c5-2 / multi-sentence
      :snt1 (c5-3 / be-located-at-91
                  :ARG1 (c5-17 / amr-unknown)
                  :ARG2 (c5-11 / city
                               :name (c5-7 / name
                                           :op1 "Ferguson")))
      :snt2 (c5-9 / possible-01
                  :ARG1 (c5-1 / livestream-01
                              :ARG0 (c5-5 / amr-unknown)))
      :snt3 (c5-16 / possible-01
                   :ARG1 (c5-15 / tweet-02
                                :ARG0 (c5-8 / amr-unknown)))
      :snt4 (c5-10 / need-01
                   :ARG0 (c5-0 / world)
                   :ARG1 (c5-6 / know-01
                               :ARG0 c5-0
                               :ARG1 (c5-4 / event)))
      :snt5 (c5-14 / show-01
                   :ARG0 (c5-12 / we)
                   :ARG2 (c5-13 / they)
                   :mode imperative))

# ::snt &gt; ATTENTION CITIZENS OF - if you have a you can - download or app &amp; GO LIVE
# ::tokens ["&", "gt", ";", "ATTENTION", "CITIZENS", "OF", "-", "if", "you", "have", "a", "you", "can", "-", "download", "or", "app", "&", "amp", ";", "GO", "LIVE"]
# ::lemmas ["&", "gt", ";", "attention", "citizens", "of", "-", "if", "you", "have", "a", "you", "can", "-", "download", "or", "app", "&", "amp", ";", "GO", "live"]
(c6-14 / and
       :op2 (c6-0 / have-condition-91
                  :ARG1 (c6-8 / possible-01
                              :ARG1 (c6-4 / or
                                          :op1 (c6-9 / download-01
                                                     :ARG0 (c6-1 / you))
                                          :op2 (c6-5 / and
                                                     :op1 (c6-7 / app)
                                                     :op2 (c6-13 / thing
                                                                 :name (c6-6 / name
                                                                             :op1 "&amp")))))
                  :ARG2 (c6-2 / have-03
                              :ARG0 c6-1
                              :ARG1 (c6-11 / system
                                           :purpose (c6-12 / attend-02))))
       :op3 (c6-10 / go-02
                   :ARG0 c6-1
                   :ARG4 (c6-3 / live)
                   :mode imperative))

# ::snt Not so fast there
# ::tokens ["Not", "so", "fast", "there"]
# ::lemmas ["not", "so", "fast", "there"]
(c7-1 / fast-02
      :degree (c7-0 / so)
      :location (c7-2 / there)
      :polarity -)

# ::snt We Are Legion! We Are The Power
# ::tokens ["We", "Are", "Legion", "!", "We", "Are", "The", "Power"]
# ::lemmas ["we", "be", "Legion", "!", "we", "be", "the", "power"]
(c8-2 / multi-sentence
      :snt1 (c8-1 / Legion
                  :domain (c8-0 / we))
      :snt2 (c8-4 / power
                  :domain (c8-3 / we)))

# ::snt Show the whole story then. Show the looting and property destruction, not just the cops.
# ::tokens ["Show", "the", "whole", "story", "then", ".", "Show", "the", "looting", "and", "property", "destruction", ",", "not", "just", "the", "cops", "."]
# ::lemmas ["show", "the", "whole", "story", "then", ".", "show", "the", "looting", "and", "property", "destruction", ",", "not", "just", "the", "cop", "."]
(c9-4 / multi-sentence
      :snt1 (c9-13 / show-01
                   :ARG0 (c9-1 / you)
                   :ARG1 (c9-7 / story
                               :mod (c9-2 / whole))
                   :mod (c9-14 / then)
                   :mode imperative)
      :snt2 (c9-10 / contrast-01
                   :ARG1 (c9-3 / show-01
                               :ARG0 (c9-12 / you)
                               :ARG1 (c9-15 / and
                                            :op1 (c9-5 / loot-01)
                                            :op2 (c9-9 / destroy-01
                                                       :ARG1 (c9-8 / property)))
                               :mode imperative)
                   :ARG2 (c9-6 / show-01
                               :ARG0 c9-12
                               :ARG1 (c9-11 / cop
                                            :mod (c9-0 / just))
                               :mode imperative
                               :polarity -)))

# ::snt Show the people volunteering to clean up the damage. Show the people calling for peace.
# ::tokens ["Show", "the", "people", "volunteering", "to", "clean", "up", "the", "damage", ".", "Show", "the", "people", "calling", "for", "peace", "."]
# ::lemmas ["show", "the", "people", "volunteer", "to", "clean", "up", "the", "damage", ".", "show", "the", "people", "call", "for", "peace", "."]
(c10-1 / multi-sentence
       :snt1 (c10-10 / show-01
                     :ARG0 (c10-0 / you)
                     :ARG1 (c10-4 / volunteer-01
                                  :ARG0 (c10-5 / person)
                                  :ARG1 (c10-7 / clean-up-02
                                               :ARG0 c10-5
                                               :ARG1 (c10-6 / damage-01)))
                     :mode imperative)
       :snt2 (c10-3 / show-01
                    :ARG0 (c10-9 / you)
                    :ARG1 (c10-11 / person
                                  :ARG0-of (c10-8 / call-03
                                                  :ARG1 (c10-2 / peace)))
                    :mode imperative))

# ::snt where good opening up airwaves ports lol routers should b free Wi-Fi with the news there lol
# ::tokens ["where", "good", "opening", "up", "airwaves", "ports", "lol", "routers", "should", "b", "free", "Wi", "-", "Fi", "with", "the", "news", "there", "lol"]
# ::lemmas ["where", "good", "open", "up", "airwave", "port", "lol", "router", "should", "b", "free", "Wi", "-", "Fi", "with", "the", "news", "there", "lol"]
(c11-2 / multi-sentence
       :snt1 (c11-4 / be-located-at-91
                    :ARG1 (c11-5 / open-up-03
                                 :ARG1 (c11-8 / port
                                              :mod (c11-14 / airwave))
                                 :ARG1-of (c11-11 / good-02))
                    :ARG2 (c11-1 / location))
       :snt2 (c11-9 / recommend-01
                    :ARG1 (c11-3 / free-03
                                 :ARG1 (c11-10 / company
                                               :ARG0-of (c11-6 / routers-01))
                                 :ARG2 (c11-0 / Wi-Fi)
                                 :ARG1-of (c11-12 / cause-01
                                                  :ARG0 (c11-7 / news
                                                               :location (c11-13 / there))))
                    :ARG2 c11-10))

# ::snt Also , , , and a few others are actively tweeting when they can.
# ::tokens ["Also", ",", ",", ",", "and", "a", "few", "others", "are", "actively", "tweeting", "when", "they", "can", "."]
# ::lemmas ["also", ",", ",", ",", "and", "a", "few", "other", "be", "actively", "tweet", "when", "they", "can", "."]
(c12-5 / tweet-02
       :ARG0 (c12-7 / and
                    :op1 (c12-4 / person
                                :mod (c12-2 / also))
                    :op2 (c12-1 / other
                                :quant (c12-0 / few)))
       :manner (c12-3 / activity-06
                      :ARG0 c12-7)
       :time (c12-6 / possible-01)
       :mod c12-2)

# ::snt is in Ferguson, reporting.
# ::tokens ["is", "in", "Ferguson", ",", "reporting", "."]
# ::lemmas ["be", "in", "Ferguson", ",", "report", "."]
(c13-3 / be-located-at-91
       :ARG2 (c13-2 / city
                    :name (c13-0 / name
                                 :op1 "Ferguson"))
       :purpose (c13-1 / report-01))

# ::snt that's what journos are for! They're banned on the ground?! At least we have helicopters! Oh.....
# ::tokens ["that", "'s", "what", "journos", "are", "for", "!", "They", "'re", "banned", "on", "the", "ground", "?", "!", "At", "least", "we", "have", "helicopters", "!", "Oh", "....."]
# ::lemmas ["that", "be", "what", "journo", "be", "for", "!", "they", "be", "ban", "on", "the", "ground", "?", "!", "at", "least", "we", "have", "helicopter", "!", "oh", "....."]
(c14-4 / multi-sentence
       :snt1 (c14-0 / have-purpose-91
                    :ARG1 (c14-1 / journo)
                    :ARG2 (c14-11 / that))
       :snt2 (c14-5 / ban-01
                    :ARG1 (c14-10 / they)
                    :location (c14-9 / ground)
                    :polarity (c14-12 / amr-unknown))
       :snt3 (c14-3 / have-03
                    :ARG0 (c14-2 / we)
                    :ARG1 (c14-8 / helicopter)
                    :mod (c14-7 / at-least))
       :snt4 (c14-6 / oh
                    :mode expressive))

# ::snt has been posting tons of pics and video.
# ::tokens ["has", "been", "posting", "tons", "of", "pics", "and", "video", "."]
# ::lemmas ["have", "be", "post", "ton", "of", "pic", "and", "video", "."]
(c15-2 / post-01
       :ARG0 (c15-0 / he)
       :ARG1 (c15-5 / and
                    :op1 (c15-4 / pic)
                    :op2 (c15-1 / video)
                    :quant (c15-3 / ton)))

# ::snt I live here, you do not. I see both sides, you choose tweets that advance your agenda. There's more that needs to be shown.
# ::tokens ["I", "live", "here", ",", "you", "do", "not", ".", "I", "see", "both", "sides", ",", "you", "choose", "tweets", "that", "advance", "your", "agenda", ".", "There", "'s", "more", "that", "needs", "to", "be", "shown", "."]
# ::lemmas ["i", "live", "here", ",", "you", "do", "not", ".", "i", "see", "both", "side", ",", "you", "choose", "tweet", "that", "advance", "your", "agenda", ".", "there", "be", "more", "that", "need", "to", "be", "show", "."]
(c16-0 / multi-sentence
       :snt1 (c16-5 / live-01
                    :ARG0 (c16-14 / you)
                    :location (c16-4 / here)
                    :ARG1-of (c16-16 / contrast-01
                                     :ARG2 (c16-17 / live-01
                                                   :ARG0 c16-14
                                                   :polarity -)))
       :snt2 (c16-3 / and
                    :op1 (c16-2 / see-01
                                :ARG0 (c16-12 / i)
                                :ARG1 (c16-7 / side
                                             :mod (c16-6 / both)))
                    :op2 (c16-1 / choose-01
                                :ARG0 (c16-13 / you)
                                :ARG1 (c16-18 / tweet-01
                                              :ARG0-of (c16-11 / advance-01
                                                               :ARG1 (c16-9 / agenda
                                                                            :poss c16-13)))))
       :snt3 (c16-8 / need-01
                    :ARG1 (c16-15 / show-01
                                  :ARG1 (c16-10 / more))))

# ::snt sad as it sounds gonna be a rodney king repeat. we aint got justice in this god forbidden planet
# ::tokens ["sad", "as", "it", "sounds", "gon", "na", "be", "a", "rodney", "king", "repeat", ".", "we", "ai", "nt", "got", "justice", "in", "this", "god", "forbidden", "planet"]
# ::lemmas ["sad", "as", "it", "sounds", "going", "to", "be", "a", "rodney", "king", "repeat", ".", "we", "be", "not", "get", "justice", "in", "this", "god", "forbid", "planet"]
(c18-3 / multi-sentence
       :snt1 (c18-12 / sad-02
                     :ARG1-of (c18-5 / sound-01
                                     :ARG2 (c18-10 / repeat-01
                                                   :ARG0 (c18-9 / person
                                                                :name (c18-7 / name
                                                                             :op1 " rodney"))
                                                   :ARG1 (c18-6 / it))))
       :snt2 (c18-11 / get-01
                     :ARG0 (c18-1 / we)
                     :ARG1 (c18-0 / justice)
                     :location (c18-14 / planet
                                       :ARG1-of (c18-2 / forbid-01
                                                       :ARG0 (c18-4 / person
                                                                    :name (c18-8 / name
                                                                                 :op1 "God")))
                                       :mod (c18-13 / this))
                     :polarity -))

# ::snt heading to the ferguson police station now
# ::tokens ["heading", "to", "the", "ferguson", "police", "station", "now"]
# ::lemmas ["head", "to", "the", "ferguson", "police", "station", "now"]
(c19-0 / head-02
       :ARG1 (c19-5 / station
                    :mod (c19-3 / police)
                    :location (c19-4 / city
                                     :name (c19-1 / name
                                                  :op1 "Ferguson")))
       :time (c19-2 / now))
