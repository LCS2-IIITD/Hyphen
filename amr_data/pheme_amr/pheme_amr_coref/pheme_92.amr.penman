# ::snt . Spines of STEEL, these people.Mad respect, staring down the cops has to be terrifying.
# ::tokens [".", "Spines", "of", "STEEL", ",", "these", "people", ".", "Mad", "respect", ",", "staring", "down", "the", "cops", "has", "to", "be", "terrifying", "."]
# ::lemmas [".", "spine", "of", "STEEL", ",", "these", "people", ".", "mad", "respect", ",", "stare", "down", "the", "cop", "have", "to", "be", "terrify", "."]
(c1-1 / multi-sentence
      :snt1 (c1-4 / person
                  :mod (c1-10 / this)
                  :ARG1-of (c1-5 / mean-01
                                 :ARG2 (c1-9 / spine
                                             :consist-of (c1-3 / STEEL))))
      :snt2 (c1-2 / obligate-01
                  :ARG2 (c1-8 / terrify-01
                              :ARG0 (c1-0 / stare-01
                                          :ARG1 (c1-6 / cop)
                                          :direction (c1-7 / down)))))

# ::snt maybe this injustice is more important than a -5.
# ::tokens ["maybe", "this", "injustice", "is", "more", "important", "than", "a", "-5", "."]
# ::lemmas ["maybe", "this", "injustice", "be", "more", "important", "than", "a", "-5", "."]
(c2-4 / possible-01
      :ARG1 (c2-0 / have-degree-91
                  :ARG1 (c2-1 / justice
                              :mod (c2-6 / this)
                              :polarity -)
                  :ARG2 (c2-3 / important-01
                              :ARG1 c2-1)
                  :ARG3 (c2-2 / more)
                  :ARG4 (c2-5 / ratio-of
                              :op1 2
                              :op2 5)))

# ::snt Notice that nobody ever asks why open carry and anti-choice protesters aren't at work.
# ::tokens ["Notice", "that", "nobody", "ever", "asks", "why", "open", "carry", "and", "anti", "-", "choice", "protesters", "are", "n't", "at", "work", "."]
# ::lemmas ["notice", "that", "nobody", "ever", "ask", "why", "open", "carry", "and", "anti", "-", "choice", "protester", "be", "not", "at", "work", "."]
(c3-7 / notice-01
      :ARG0 (c3-0 / you)
      :ARG1 (c3-16 / ask-01
                   :ARG0 (c3-8 / nobody)
                   :ARG1 (c3-14 / thing
                                :ARG0-of (c3-11 / cause-01
                                                :ARG1 (c3-3 / be-located-at-91
                                                            :ARG1 (c3-6 / and
                                                                        :op1 (c3-9 / person
                                                                                   :ARG0-of (c3-15 / protest-01
                                                                                                   :ARG1 (c3-10 / carry-01
                                                                                                                :ARG1-of (c3-4 / open-01))))
                                                                        :op2 (c3-2 / person
                                                                                   :ARG0-of (c3-13 / protest-01
                                                                                                   :ARG1 (c3-12 / choose-01))))
                                                            :ARG2 (c3-1 / work-01)
                                                            :polarity -)))
                   :time (c3-5 / ever))
      :mode imperative)

# ::snt What about providing for a family...where is that on your list of priorities?
# ::tokens ["What", "about", "providing", "for", "a", "family", "...", "where", "is", "that", "on", "your", "list", "of", "priorities", "?"]
# ::lemmas ["what", "about", "provide", "for", "a", "family", "...", "where", "be", "that", "on", "your", "list", "of", "priority", "?"]
(c4-10 / and
       :op1 (c4-7 / concern-02
                  :ARG0 (c4-4 / amr-unknown)
                  :ARG1 (c4-6 / provide-01
                              :ARG2 (c4-1 / family)))
       :op2 (c4-3 / be-located-at-91
                  :ARG1 (c4-8 / that)
                  :ARG2 (c4-5 / amr-unknown
                              :ARG2-of (c4-2 / list-01
                                             :ARG0 (c4-0 / you)
                                             :ARG1 (c4-9 / priority)))))

# ::snt What about the welfare of a family that doesn't feel safe walking home? A day off might be worth it.
# ::tokens ["What", "about", "the", "welfare", "of", "a", "family", "that", "does", "n't", "feel", "safe", "walking", "home", "?", "A", "day", "off", "might", "be", "worth", "it", "."]
# ::lemmas ["what", "about", "the", "welfare", "of", "a", "family", "that", "do", "not", "feel", "safe", "walk", "home", "?", "a", "day", "off", "might", "be", "worth", "it", "."]
(c5-3 / multi-sentence
      :snt1 (c5-12 / amr-unknown
                   :topic (c5-1 / welfare
                                :poss (c5-2 / family
                                            :ARG0-of (c5-7 / feel-01
                                                           :ARG1 (c5-11 / safe-01)
                                                           :ARG2 (c5-8 / walk-01
                                                                       :ARG0 c5-2
                                                                       :ARG2 (c5-0 / home))
                                                           :polarity -))))
      :snt2 (c5-9 / possible-01
                  :ARG1 (c5-4 / worth-02
                              :ARG1 (c5-10 / day
                                           :mod (c5-5 / off))
                              :ARG2 (c5-6 / it))))

# ::snt In that case, why ask if you seem content answering your own questions?
# ::tokens ["In", "that", "case", ",", "why", "ask", "if", "you", "seem", "content", "answering", "your", "own", "questions", "?"]
# ::lemmas ["in", "that", "case", ",", "why", "ask", "if", "you", "seem", "content", "answer", "your", "own", "question", "?"]
(c6-6 / cause-01
      :ARG0 (c6-11 / amr-unknown)
      :ARG1 (c6-2 / ask-01
                  :ARG1 (c6-10 / truth-value
                               :polarity-of (c6-8 / seem-01
                                                  :ARG1 (c6-5 / content-02
                                                              :ARG0 (c6-3 / answer-01
                                                                          :ARG0 (c6-0 / you)
                                                                          :ARG1 (c6-7 / thing
                                                                                      :ARG1-of (c6-1 / question-01
                                                                                                     :ARG0 c6-0)))
                                                              :ARG1 c6-0)))
                  :condition (c6-9 / case-04
                                   :ARG1 (c6-4 / that))))

# ::snt . Does anyone have to be at work in the morning?
# ::tokens [".", "Does", "anyone", "have", "to", "be", "at", "work", "in", "the", "morning", "?"]
# ::lemmas [".", "do", "anyone", "have", "to", "be", "at", "work", "in", "the", "morning", "?"]
(c7-2 / obligate-01
      :polarity (c7-5 / amr-unknown)
      :ARG1 (c7-3 / anyone)
      :ARG2 (c7-0 / work-01
                  :ARG0 c7-3)
      :time (c7-4 / date-entity
                  :dayperiod (c7-1 / morning)))

# ::snt Frankly, listening to this scanner, I don't know how anyone feels safe walking in
# ::tokens ["Frankly", ",", "listening", "to", "this", "scanner", ",", "I", "do", "n't", "know", "how", "anyone", "feels", "safe", "walking", "in"]
# ::lemmas ["frankly", ",", "listen", "to", "this", "scanner", ",", "i", "do", "not", "know", "how", "anyone", "feel", "safe", "walk", "in"]
(c8-5 / know-01
      :ARG0 (c8-4 / i)
      :ARG1 (c8-10 / thing
                   :manner-of (c8-1 / feel-01
                                    :ARG0 (c8-11 / anyone)
                                    :ARG1 (c8-9 / safe-01
                                                :ARG0 (c8-0 / walk-01
                                                            :ARG0 c8-11
                                                            :ARG2 (c8-7 / inside)))))
      :manner (c8-2 / listen-01
                    :ARG0 c8-4
                    :ARG1 c8-10
                    :instrument-of (c8-3 / scan-01)
                    :mod (c8-8 / this))
      :mod (c8-6 / frank)
      :polarity -)

# ::snt I think Elizabeth answered my question perfectly..
# ::tokens ["I", "think", "Elizabeth", "answered", "my", "question", "perfectly", ".."]
# ::lemmas ["i", "think", "Elizabeth", "answer", "my", "question", "perfectly", ".."]
(c9-4 / think-01
      :ARG0 (c9-1 / i)
      :ARG1 (c9-6 / answer-01
                  :ARG0 (c9-3 / person
                              :name (c9-2 / name
                                          :op1 "Elizabeth"))
                  :ARG1 (c9-0 / question-01
                              :ARG0 c9-1)
                  :ARG1-of (c9-5 / perfect-02)))

# ::snt I have to get home and watch my kids, move dam it, it's a school night
# ::tokens ["I", "have", "to", "get", "home", "and", "watch", "my", "kids", ",", "move", "dam", "it", ",", "it", "'s", "a", "school", "night"]
# ::lemmas ["i", "have", "to", "get", "home", "and", "watch", "my", "kid", ",", "move", "dam", "it", ",", "it", "be", "a", "school", "night"]
(c10-5 / obligate-01
       :ARG1 (c10-6 / i)
       :ARG2 (c10-15 / and
                     :op1 (c10-11 / get-05
                                  :ARG1 c10-6
                                  :ARG2 (c10-0 / home))
                     :op2 (c10-1 / watch-01
                                 :ARG0 c10-6
                                 :ARG1 (c10-8 / person
                                              :ARG0-of (c10-3 / have-rel-role-91
                                                              :ARG1 c10-6
                                                              :ARG2 (c10-14 / kid))))
                     :op3 (c10-4 / move-01
                                 :ARG1 c10-6
                                 :manner (c10-9 / dam-01
                                                :ARG1 (c10-12 / it))))
       :ARG1-of (c10-10 / cause-01
                        :ARG0 (c10-2 / date-entity
                                     :dayperiod (c10-7 / night)
                                     :mod (c10-13 / school))))
