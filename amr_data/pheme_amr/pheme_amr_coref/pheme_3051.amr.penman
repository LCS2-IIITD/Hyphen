# ::snt Anyone who does such things cannot be called Canadian even if he was born here. Canada. Love it or leave it.
# ::tokens ["Anyone", "who", "does", "such", "things", "can", "not", "be", "called", "Canadian", "even", "if", "he", "was", "born", "here", ".", "Canada", ".", "Love", "it", "or", "leave", "it", "."]
# ::lemmas ["anyone", "who", "do", "such", "thing", "can", "not", "be", "call", "Canadian", "even", "if", "he", "be", "bear", "here", ".", "Canada", ".", "love", "it", "or", "leave", "it", "."]
(c1-2 / multi-sentence
      :snt1 (c1-7 / possible-01
                  :ARG1 (c1-9 / call-01
                              :ARG1 (c1-14 / anyone
                                           :ARG0-of (c1-8 / do-02
                                                          :ARG1 (c1-13 / thing
                                                                       :mod (c1-12 / such))))
                              :ARG2 (c1-10 / country
                                           :name (c1-6 / name
                                                       :op1 "Canada")))
                  :concession (c1-5 / even-if
                                    :op1 (c1-3 / bear-02
                                               :ARG1 c1-14
                                               :location c1-10))
                  :polarity -)
      :snt2 (c1-4 / or
                  :op1 (c1-1 / love-01
                             :ARG0 (c1-0 / you)
                             :ARG1 c1-10
                             :mode imperative)
                  :op2 (c1-11 / leave-15
                              :ARG0 c1-0
                              :ARG1 c1-10
                              :mode imperative)))

# ::snt Canadian born of Algerian descent like Marc Lepine. ISIS did the ID.
# ::tokens ["Canadian", "born", "of", "Algerian", "descent", "like", "Marc", "Lepine", ".", "ISIS", "did", "the", "ID", "."]
# ::lemmas ["Canadian", "bear", "of", "Algerian", "descent", "like", "Marc", "Lepine", ".", "ISIS", "do", "the", "ID", "."]
(c2-1 / multi-sentence
      :snt1 (c2-2 / bear-02
                  :ARG1 (c2-6 / person
                              :mod (c2-8 / country
                                         :name (c2-4 / name
                                                     :op1 "Canada"))
                              :ARG1-of (c2-7 / descend-01
                                             :ARG0 (c2-14 / person
                                                          :name (c2-5 / name
                                                                      :op1 "Marc"
                                                                      :op2 "Lepine"))
                                             :source (c2-9 / country
                                                           :name (c2-10 / name
                                                                        :op1 "Algeria"))))
                  :ARG1-of (c2-11 / resemble-01
                                  :ARG2 c2-14))
      :snt2 (c2-0 / do-02
                  :ARG0 (c2-12 / criminal-organization
                               :name (c2-13 / name
                                            :op1 "Islamic"
                                            :op2 "organization"))
                  :ARG1 (c2-15 / document-01
                               :ARG1 (c2-3 / identity))))

# ::snt shouldnt be paying any Attention to this guy at all.
# ::tokens ["should", "nt", "be", "paying", "any", "Attention", "to", "this", "guy", "at", "all", "."]
# ::lemmas ["should", "not", "be", "pay", "any", "Attention", "to", "this", "guy", "at", "all", "."]
(c3-3 / recommend-01
      :ARG1 (c3-6 / attend-02
                  :ARG0 (c3-1 / i)
                  :ARG1 (c3-4 / guy
                              :mod (c3-5 / this))
                  :mod (c3-0 / any)
                  :degree (c3-2 / at-all))
      :polarity -)

# ::snt My wish for him is that he rots in his grave wherever it be. RIP
# ::tokens ["My", "wish", "for", "him", "is", "that", "he", "rots", "in", "his", "grave", "wherever", "it", "be", ".", "RIP"]
# ::lemmas ["my", "wish", "for", "he", "be", "that", "he", "rot", "in", "his", "grave", "wherever", "it", "be", ".", "RIP"]
(c4-3 / multi-sentence
      :snt1 (c4-1 / wish-01
                  :ARG0 (c4-5 / i)
                  :ARG1 (c4-8 / rots-01
                              :ARG0 (c4-0 / he)
                              :location (c4-9 / grave
                                              :poss (c4-10 / he))
                              :ARG1-of (c4-6 / regardless-91))
                  :beneficiary c4-10)
      :snt2 (c4-4 / rest-01
                  :ARG1 (c4-2 / you)
                  :manner (c4-7 / peace)
                  :mode imperative))

# ::snt A recent convert to Islam I believe.
# ::tokens ["A", "recent", "convert", "to", "Islam", "I", "believe", "."]
# ::lemmas ["a", "recent", "convert", "to", "Islam", "i", "believe", "."]
(c5-0 / believe-01
      :ARG0 (c5-1 / i)
      :ARG1 (c5-5 / convert-01
                  :ARG2 (c5-4 / religious-group
                              :name (c5-3 / name
                                          :op1 "Islam"))
                  :time (c5-2 / recent)))

# ::snt Who cares about the murderer.
# ::tokens ["Who", "cares", "about", "the", "murderer", "."]
# ::lemmas ["who", "care", "about", "the", "murderer", "."]
(c6-2 / care-01
      :ARG0 (c6-3 / amr-unknown)
      :ARG1 (c6-1 / person
                  :ARG0-of (c6-0 / murder-01)))

# ::snt terrorist reportedly born in Canada, but of algerian descent.
# ::tokens ["terrorist", "reportedly", "born", "in", "Canada", ",", "but", "of", "algerian", "descent", "."]
# ::lemmas ["terrorist", "reportedly", "bear", "in", "Canada", ",", "but", "of", "algerian", "descent", "."]
(c7-0 / bear-02
      :ARG1 (c7-7 / terrorist
                  :ARG1-of (c7-3 / descend-01
                                 :ARG0 (c7-4 / country
                                             :name (c7-1 / name
                                                         :op1 "Algeria"))))
      :location (c7-5 / country
                      :name (c7-2 / name
                                  :op1 "Canada"))
      :ARG1-of (c7-6 / report-01))
