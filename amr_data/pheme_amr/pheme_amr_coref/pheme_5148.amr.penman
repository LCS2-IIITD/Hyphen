# ::snt Whoa...and if the pilot at the helm had an minute Aloha Snackbar mantra going would they admit it?
# ::tokens ["Whoa", "...", "and", "if", "the", "pilot", "at", "the", "helm", "had", "an", "minute", "Aloha", "Snackbar", "mantra", "going", "would", "they", "admit", "it", "?"]
# ::lemmas ["whoa", "...", "and", "if", "the", "pilot", "at", "the", "helm", "have", "an", "minute", "Aloha", "Snackbar", "mantra", "go", "would", "they", "admit", "it", "?"]
(c1-14 / and
       :op2 (c1-4 / admit-01
                  :ARG0 (c1-12 / they)
                  :ARG1 (c1-5 / it)
                  :polarity (c1-7 / amr-unknown)
                  :condition (c1-0 / have-03
                                   :ARG0 (c1-8 / person
                                               :ARG0-of (c1-13 / pilot-01
                                                               :location (c1-2 / helm)))
                                   :ARG1 (c1-3 / mantra
                                               :name (c1-6 / name
                                                           :op1 "Aloha"
                                                           :op2 "Snackbar")
                                               :duration (c1-11 / temporal-quantity
                                                                :unit (c1-9 / minute)
                                                                :quant 1)
                                               :ARG1-of (c1-10 / go-01))))
       :mod (c1-1 / whoa
                  :mode expressive))

# ::snt Sounds like pilot suicide/homicide.
# ::tokens ["Sounds", "like", "pilot", "suicide", "/", "homicide", "."]
# ::lemmas ["sound", "like", "pilot", "suicide", "/", "homicide", "."]
(c2-5 / sound-01
      :ARG2 (c2-3 / slash
                  :op1 (c2-1 / suicide
                             :mod (c2-4 / pilot-01))
                  :op2 (c2-2 / suicide
                             :mod (c2-0 / suicide))))

# ::snt horrible crash stories in the past year. i wonder if there's a company looking to co-locate flight recorders based on these events
# ::tokens ["horrible", "crash", "stories", "in", "the", "past", "year", ".", "i", "wonder", "if", "there", "'s", "a", "company", "looking", "to", "co", "-", "locate", "flight", "recorders", "based", "on", "these", "events"]
# ::lemmas ["horrible", "crash", "story", "in", "the", "past", "year", ".", "i", "wonder", "if", "there", "be", "a", "company", "look", "to", "co", "-", "locate", "flight", "recorder", "base", "on", "these", "event"]
(c3-0 / multi-sentence
      :snt1 (c3-2 / story
                  :topic (c3-16 / crash-01)
                  :mod (c3-3 / horrible)
                  :time (c3-6 / before
                              :op1 (c3-8 / now)
                              :duration (c3-18 / temporal-quantity
                                               :unit (c3-15 / year)
                                               :quant 1)))
      :snt2 (c3-10 / wonder-01
                   :ARG0 (c3-11 / i)
                   :ARG1 (c3-17 / truth-value
                                :polarity-of (c3-4 / look-04
                                                   :ARG0 (c3-1 / company)
                                                   :ARG1 (c3-14 / coocate-01
                                                                :ARG0 c3-1
                                                                :ARG1 (c3-9 / record-01
                                                                            :ARG1 (c3-5 / fly-01))
                                                                :ARG1-of (c3-13 / base-02
                                                                                :ARG2 (c3-7 / event
                                                                                            :mod (c3-12 / this))))))))

# ::snt why was pilot outside cockpit? Problem is these new anti terror doors have stopped pilot saving plane. What was other pilot doing?
# ::tokens ["why", "was", "pilot", "outside", "cockpit", "?", "Problem", "is", "these", "new", "anti", "terror", "doors", "have", "stopped", "pilot", "saving", "plane", ".", "What", "was", "other", "pilot", "doing", "?"]
# ::lemmas ["why", "be", "pilot", "outside", "cockpit", "?", "problem", "be", "these", "new", "anti", "terror", "door", "have", "stop", "pilot", "saving", "plane", ".", "what", "be", "other", "pilot", "do", "?"]
(c4-1 / multi-sentence
      :snt1 (c4-17 / cause-01
                   :ARG0 (c4-7 / amr-unknown)
                   :ARG1 (c4-2 / pilot-01
                               :location (c4-16 / outside
                                                :op1 (c4-3 / cockpit))))
      :snt2 (c4-6 / problem
                  :domain (c4-5 / stop-01
                                :ARG0 (c4-4 / door
                                            :ARG0-of (c4-14 / counter-01
                                                            :ARG1 (c4-19 / terror))
                                            :mod (c4-18 / this)
                                            :ARG1-of (c4-12 / new-01))
                                :ARG1 (c4-9 / pilot-01)
                                :ARG2 (c4-11 / save-02
                                             :ARG0 c4-9
                                             :ARG1 (c4-13 / plane))))
      :snt3 (c4-0 / do-02
                  :ARG0 (c4-10 / person
                               :mod (c4-15 / other)
                               :ARG0-of (c4-8 / pilot-01))
                  :ARG1 c4-7))

# ::snt wtf are airlines reliant on black boxes still?
# ::tokens ["wtf", "are", "airlines", "reliant", "on", "black", "boxes", "still", "?"]
# ::lemmas ["wtf", "be", "airline", "reliant", "on", "black", "box", "still", "?"]
(c5-2 / rely-01
      :ARG0 (c5-5 / airline)
      :ARG1 (c5-1 / box
                  :ARG1-of (c5-3 / black-07))
      :mod (c5-4 / still)
      :mod (c5-0 / fuck
                 :mod-of c5-2
                 :mode expressive)
      :mode expressive)

# ::snt That's Terrible if it's True? TTT
# ::tokens ["That", "'s", "Terrible", "if", "it", "'s", "True", "?", "TTT"]
# ::lemmas ["that", "be", "terrible", "if", "it", "be", "true", "?", "TTT"]
(c6-5 / say-01
      :ARG0 (c6-0 / i)
      :ARG1 (c6-6 / terrible-01
                  :ARG1 (c6-4 / that)
                  :condition (c6-2 / true-01
                                   :ARG1 c6-4))
      :ARG2 (c6-3 / person
                  :name (c6-1 / name
                              :op1 "TTT")))

# ::snt who needs more evidence that the pilote in the cockpit was neutralised ?
# ::tokens ["who", "needs", "more", "evidence", "that", "the", "pilote", "in", "the", "cockpit", "was", "neutralised", "?"]
# ::lemmas ["who", "need", "more", "evidence", "that", "the", "pilote", "in", "the", "cockpit", "be", "neutralise", "?"]
(c7-2 / need-01
      :ARG0 (c7-6 / amr-unknown)
      :ARG1 (c7-1 / evidence-01
                  :ARG1 (c7-3 / neutralize-01
                              :ARG1 (c7-4 / pilote
                                          :location (c7-5 / cockpit)))
                  :mod (c7-0 / more)))

# ::snt Yo it's red RT: Recovered black box shows a pilot was locked out of the Germanwings cockpit before the crash
# ::tokens ["Yo", "it", "'s", "red", "RT", ":", "Recovered", "black", "box", "shows", "a", "pilot", "was", "locked", "out", "of", "the", "Germanwings", "cockpit", "before", "the", "crash"]
# ::lemmas ["Yo", "it", "be", "red", "rt", ":", "recover", "black", "box", "show", "a", "pilot", "be", "lock", "out", "of", "the", "Germanwings", "cockpit", "before", "the", "crash"]
(c8-11 / say-01
       :ARG0 (c8-4 / i)
       :ARG1 (c8-3 / show-01
                   :ARG0 (c8-2 / box
                               :ARG1-of (c8-8 / black-07)
                               :ARG1-of (c8-7 / discover-01))
                   :ARG1 (c8-1 / lock-01
                               :ARG1 (c8-6 / person
                                           :ARG0-of (c8-14 / pilot-01))
                               :ARG2 (c8-9 / cockpit
                                           :part-of (c8-15 / aircraft-type
                                                           :name (c8-5 / name
                                                                       :op1 "Germanwings")))
                               :time (c8-12 / before
                                            :op1 (c8-10 / crash-01))))
       :ARG2 c8-6
       :ARG0-of (c8-13 / know-01)
       :mod (c8-0 / yo
                  :mode expressive))

# ::snt sounds like the pilot may have had a stroke/MI?
# ::tokens ["sounds", "like", "the", "pilot", "may", "have", "had", "a", "stroke", "/", "MI", "?"]
# ::lemmas ["sound", "like", "the", "pilot", "may", "have", "have", "a", "stroke", "/", "mi", "?"]
(c9-7 / sound-01
      :ARG1 (c9-6 / possible-01
                  :ARG1 (c9-0 / have-03
                              :ARG0 (c9-8 / person
                                          :ARG0-of (c9-2 / pilot-01))
                              :ARG1 (c9-3 / or
                                          :op1 (c9-4 / stroke-02
                                                     :ARG1 c9-2)
                                          :op2 (c9-1 / medical-condition
                                                     :name (c9-5 / name
                                                                 :op1 "MI")))))
      :polarity (c9-9 / amr-unknown))

# ::snt suicide and mass murder
# ::tokens ["suicide", "and", "mass", "murder"]
# ::lemmas ["suicide", "and", "mass", "murder"]
(c10-3 / and
       :op1 (c10-0 / suicide)
       :op2 (c10-2 / murder-01
                   :degree (c10-1 / mass)))

# ::snt I thought normal procedure is for a flight attendant to wait in the cockpit until the other pilot returns?
# ::tokens ["I", "thought", "normal", "procedure", "is", "for", "a", "flight", "attendant", "to", "wait", "in", "the", "cockpit", "until", "the", "other", "pilot", "returns", "?"]
# ::lemmas ["i", "think", "normal", "procedure", "be", "for", "a", "flight", "attendant", "to", "wait", "in", "the", "cockpit", "until", "the", "other", "pilot", "return", "?"]
(c11-13 / think-01
        :polarity (c11-15 / amr-unknown)
        :ARG0 (c11-7 / i)
        :ARG1 (c11-9 / procedure
                     :ARG1-of (c11-8 / normal-02)
                     :domain (c11-0 / wait-01
                                    :ARG1 (c11-14 / person
                                                  :ARG0-of (c11-6 / attend-02
                                                                  :ARG1 (c11-1 / fly-01)))
                                    :ARG2 (c11-4 / be-located-at-91
                                                 :ARG1 c11-14
                                                 :ARG2 (c11-11 / cockpit))
                                    :time (c11-2 / until
                                                 :op1 (c11-10 / return-01
                                                              :ARG1 (c11-3 / person
                                                                           :ARG0-of (c11-12 / pilot-01)
                                                                           :mod (c11-5 / other)))))))

# ::snt what
# ::tokens ["what"]
# ::lemmas ["what"]
(c12-0 / amr-unknown)

# ::snt : Recovered black box shows a pilot was locked out of the Germanwings cockpit
# ::tokens [":", "Recovered", "black", "box", "shows", "a", "pilot", "was", "locked", "out", "of", "the", "Germanwings", "cockpit"]
# ::lemmas [":", "recover", "black", "box", "show", "a", "pilot", "be", "lock", "out", "of", "the", "Germanwings", "cockpit"]
(c13-7 / show-01
       :ARG0 (c13-1 / box
                    :ARG1-of (c13-5 / black-07)
                    :ARG1-of (c13-4 / discover-01))
       :ARG1 (c13-0 / lock-01
                    :ARG1 (c13-3 / person
                                 :ARG0-of (c13-8 / pilot-01))
                    :ARG2 (c13-6 / cockpit
                                 :part-of (c13-9 / aircraft-type
                                                 :name (c13-2 / name
                                                              :op1 "Germanwings")))))

# ::snt agree. Most simple solution
# ::tokens ["agree", ".", "Most", "simple", "solution"]
# ::lemmas ["agree", ".", "most", "simple", "solution"]
(c14-1 / multi-sentence
       :snt1 (c14-5 / agree-01)
       :snt2 (c14-0 / have-degree-91
                    :ARG1 (c14-4 / solution)
                    :ARG2 (c14-2 / simple-02
                                 :ARG1 c14-4)
                    :ARG3 (c14-3 / most)))

# ::snt why are we still relying on on-board data recorders? Surely we could compact and steam key data via satellite.
# ::tokens ["why", "are", "we", "still", "relying", "on", "on", "-", "board", "data", "recorders", "?", "Surely", "we", "could", "compact", "and", "steam", "key", "data", "via", "satellite", "."]
# ::lemmas ["why", "be", "we", "still", "rely", "on", "on", "-", "board", "datum", "recorder", "?", "surely", "we", "could", "compact", "and", "steam", "key", "datum", "via", "satellite", "."]
(c15-3 / multi-sentence
       :snt1 (c15-12 / cause-01
                     :ARG0 (c15-17 / amr-unknown)
                     :ARG1 (c15-11 / rely-01
                                   :ARG0 (c15-0 / we)
                                   :ARG1 (c15-8 / record-01
                                                :ARG1 (c15-13 / data)
                                                :mod (c15-4 / on-board))
                                   :mod (c15-15 / still)))
       :snt2 (c15-10 / possible-01
                     :ARG1 (c15-7 / and
                                  :op1 (c15-14 / compact-01
                                               :ARG0 (c15-9 / we)
                                               :ARG1 (c15-1 / data
                                                            :ARG1-of (c15-16 / key-02)))
                                  :op2 (c15-6 / steam-02
                                              :ARG1 c15-1)
                                  :medium (c15-2 / satellite))
                     :ARG1-of (c15-5 / sure-02)))

# ::snt Terrifying, designed not to happen. Wtf?:...pilot was locked out of the Germanwings cockpit b/f the crash
# ::tokens ["Terrifying", ",", "designed", "not", "to", "happen", ".", "Wtf?:", "...", "pilot", "was", "locked", "out", "of", "the", "Germanwings", "cockpit", "b", "/", "f", "the", "crash"]
# ::lemmas ["Terrifying", ",", "design", "not", "to", "happen", ".", "wtf?:", "...", "pilot", "be", "lock", "out", "of", "the", "Germanwings", "cockpit", "b", "/", "f", "the", "crash"]
(c16-1 / multi-sentence
       :snt1 (c16-13 / and
                     :op1 (c16-11 / terrify-01)
                     :op2 (c16-6 / design-01
                                 :ARG1 (c16-3 / event)
                                 :polarity -))
       :snt2 (c16-0 / lock-01
                    :ARG1 (c16-5 / person
                                 :ARG0-of (c16-12 / pilot-01))
                    :ARG2 (c16-7 / cockpit
                                 :part-of (c16-8 / military
                                                 :name (c16-4 / name
                                                              :op1 "Germanwings")))
                    :ARG1-of (c16-9 / cause-01
                                    :ARG0 (c16-10 / crash-01))
                    :mod (c16-2 / fuck
                                :mode expressive)))
