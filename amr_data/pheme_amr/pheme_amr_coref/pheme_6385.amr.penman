# ::snt I'm from Newcastle. I understand your pain.
# ::tokens ["I", "'m", "from", "Newcastle", ".", "I", "understand", "your", "pain", "."]
# ::lemmas ["i", "be", "from", "Newcastle", ".", "i", "understand", "your", "pain", "."]
(c2-1 / multi-sentence
      :snt1 (c2-3 / i
                  :source (c2-6 / city
                                :name (c2-4 / name
                                            :op1 "Newcastle")))
      :snt2 (c2-2 / understand-01
                  :ARG0 (c2-7 / i)
                  :ARG1 (c2-5 / pain-01
                              :ARG1 (c2-0 / you))))

# ::snt Where is that hashtag? Oh wait, here it is
# ::tokens ["Where", "is", "that", "hashtag", "?", "Oh", "wait", ",", "here", "it", "is"]
# ::lemmas ["where", "be", "that", "hashtag", "?", "oh", "wait", ",", "here", "it", "be"]
(c3-3 / multi-sentence
      :snt1 (c3-4 / be-located-at-91
                  :ARG1 (c3-0 / hashtag)
                  :ARG2 (c3-7 / amr-unknown))
      :snt2 (c3-1 / wait-01
                  :mod (c3-5 / oh)
                  :mode expressive)
      :snt3 c3-4
      :ARG1 (c3-6 / it)
      :ARG2 (c3-2 / here))

# ::snt % probability they are from the shire.
# ::tokens ["%", "probability", "they", "are", "from", "the", "shire", "."]
# ::lemmas ["%", "probability", "they", "be", "from", "the", "shire", "."]
(c4-0 / likely-01
      :ARG1 (c4-1 / be-from-91
                  :ARG1 (c4-4 / they)
                  :ARG2 (c4-3 / shire))
      :degree (c4-2 / percentage-entity))

# ::snt Id say do a most idiotic gawkers at Martin Place piece but I think making them internet famous will only make them happy.
# ::tokens ["I", "d", "say", "do", "a", "most", "idiotic", "gawkers", "at", "Martin", "Place", "piece", "but", "I", "think", "making", "them", "internet", "famous", "will", "only", "make", "them", "happy", "."]
# ::lemmas ["i", "d", "say", "do", "a", "most", "idiotic", "gawker", "at", "Martin", "Place", "piece", "but", "i", "think", "make", "they", "internet", "famous", "will", "only", "make", "they", "happy", "."]
(c5-10 / contrast-01
       :ARG1 (c5-14 / say-01
                    :ARG0 (c5-6 / i)
                    :ARG1 (c5-9 / do-02
                                :ARG0 (c5-11 / gawker
                                             :location (c5-8 / piece
                                                             :location (c5-1 / location
                                                                             :name (c5-7 / name
                                                                                         :op1 "Martin"
                                                                                         :op2 "Place")))
                                             :ARG1-of (c5-0 / have-degree-91
                                                            :ARG2 (c5-12 / idiotic)
                                                            :ARG3 (c5-2 / most)))))
       :ARG2 (c5-15 / think-01
                    :ARG0 c5-6
                    :ARG1 (c5-13 / make-02
                                 :ARG0 c5-13
                                 :ARG1 (c5-3 / fame-01
                                             :ARG1 c5-11
                                             :medium (c5-4 / internet)))
                    :ARG1 (c5-16 / happy-01
                                 :ARG1 c5-11)
                    :mod (c5-5 / only)))

# ::snt Cronulla riots ?
# ::tokens ["Cronulla", "riots", "?"]
# ::lemmas ["Cronulla", "riot", "?"]
(c7-1 / riot-01
      :polarity (c7-3 / amr-unknown)
      :mod (c7-2 / city
                 :name (c7-0 / name
                             :op1 "Cronulla")))

# ::snt "report" some news you "reporter"....
# ::tokens ["\"", "report", "\"", "some", "news", "you", "\"", "reporter", "\"", "...."]
# ::lemmas ["\"", "report", "\"", "some", "news", "you", "\"", "reporter", "\"", "...."]
(c8-3 / report-01
      :ARG0 (c8-0 / you
                  :ARG0-of (c8-1 / report-01))
      :ARG1 (c8-2 / news
                  :mod (c8-4 / some)))

# ::snt good lord MT : Two young guys have arrived and are swigging from bottles of white wine.
# ::tokens ["good", "lord", "MT", ":", "Two", "young", "guys", "have", "arrived", "and", "are", "swigging", "from", "bottles", "of", "white", "wine", "."]
# ::lemmas ["good", "lord", "MT", ":", "Two", "young", "guy", "have", "arrive", "and", "be", "swig", "from", "bottle", "of", "white", "wine", "."]
(c9-11 / say-01
       :ARG1 (c9-12 / and
                    :op1 (c9-5 / arrive-01
                               :ARG1 (c9-10 / guy
                                            :mod (c9-0 / young)
                                            :quant 2))
                    :op2 (c9-4 / swig-01
                               :ARG0 c9-10
                               :ARG1 (c9-1 / wine
                                           :ARG1-of (c9-6 / white-03)
                                           :quant (c9-3 / bottle))))
       :ARG2 (c9-8 / person
                   :name (c9-7 / name
                               :op1 "MT")
                   :mod (c9-2 / lord
                              :ARG1-of (c9-9 / good-02)
                              :mode expressive)))

# ::snt Surprised they haven't started chanting Aussie Aussie Aussie
# ::tokens ["Surprised", "they", "have", "n't", "started", "chanting", "Aussie", "Aussie", "Aussie"]
# ::lemmas ["surprised", "they", "have", "not", "start", "chant", "Aussie", "Aussie", "Aussie"]
(c10-5 / surprise-01
       :ARG0 (c10-0 / start-01
                    :ARG0 (c10-6 / they)
                    :ARG1 (c10-4 / chant-01
                                 :ARG0 c10-6
                                 :ARG1 (c10-2 / person
                                              :mod (c10-3 / country
                                                          :name (c10-1 / name
                                                                       :op1 "Australia")
                                                          :mod-of c10-2)))
                    :polarity -))

# ::snt it's also Australia.
# ::tokens ["it", "'s", "also", "Australia", "."]
# ::lemmas ["it", "be", "also", "Australia", "."]
(c11-1 / country
       :name (c11-0 / name
                    :op1 "Australia")
       :mod (c11-3 / also)
       :domain (c11-2 / it))

# ::snt Oh my!
# ::tokens ["Oh", "my", "!"]
# ::lemmas ["oh", "my", "!"]
(c12-0 / oh-my-god
       :mode expressive)

# ::snt staying always classy
# ::tokens ["staying", "always", "classy"]
# ::lemmas ["stay", "always", "classy"]
(c14-0 / stay-01
       :ARG3 (c14-2 / classy-02
                    :ARG1 (c14-1 / you)
                    :time (c14-3 / always)))

# ::snt what the hell?? Ppl's lives are on the line and ppl are drinking and having fun watching it?? This is where we've come to
# ::tokens ["what", "the", "hell", "?", "?", "Ppl", "'s", "lives", "are", "on", "the", "line", "and", "ppl", "are", "drinking", "and", "having", "fun", "watching", "it", "?", "?", "This", "is", "where", "we", "'ve", "come", "to"]
# ::lemmas ["what", "the", "hell", "?", "?", "Ppl", "'s", "life", "be", "on", "the", "line", "and", "ppl", "be", "drink", "and", "have", "fun", "watch", "it", "?", "?", "this", "be", "where", "we", "'ve", "come", "to"]
(c15-3 / multi-sentence
       :snt1 (c15-14 / amr-unknown
                     :mod (c15-0 / hell
                                 :mode expressive))
       :snt2 (c15-5 / and
                    :op1 (c15-2 / line-up-02
                                :ARG1 (c15-11 / life
                                              :poss (c15-8 / person
                                                           :ARG0-of (c15-13 / post-01))))
                    :op2 (c15-9 / drink-01
                                :ARG0 c15-8)
                    :op3 (c15-4 / fun-01
                                :ARG0 c15-8
                                :ARG1 (c15-1 / watch-01
                                             :ARG0 c15-8
                                             :ARG1 (c15-6 / it))))
       :snt3 (c15-10 / come-01
                     :ARG1 (c15-7 / we)
                     :ARG4 (c15-12 / this)))

# ::snt I've heard of strange attractors before but yob attractors are new
# ::tokens ["I", "'ve", "heard", "of", "strange", "attractors", "before", "but", "yob", "attractors", "are", "new"]
# ::lemmas ["i", "'ve", "hear", "of", "strange", "attractor", "before", "but", "yob", "attractor", "be", "new"]
(c16-0 / hear-01
       :ARG0 (c16-4 / i)
       :ARG1 (c16-7 / attractor
                    :mod (c16-6 / strange))
       :time (c16-2 / before)
       :concession (c16-5 / new-01
                          :ARG1 (c16-3 / attractor
                                       :mod (c16-1 / yob))))

# ::snt its a bogan epidemic. Def not localised
# ::tokens ["its", "a", "bogan", "epidemic", ".", "Def", "not", "localised"]
# ::lemmas ["its", "a", "bogan", "epidemic", ".", "Def", "not", "localise"]
(c17-1 / multi-sentence
       :snt1 (c17-3 / epidemic
                    :mod (c17-2 / bogan)
                    :domain (c17-4 / it))
       :snt2 (c17-0 / localize-01
                    :ARG1-of (c17-5 / define-01)
                    :polarity -))

# ::snt I'm from the shire and nothing like it
# ::tokens ["I", "'m", "from", "the", "shire", "and", "nothing", "like", "it"]
# ::lemmas ["i", "be", "from", "the", "shire", "and", "nothing", "like", "it"]
(c18-4 / and
       :op1 (c18-0 / be-from-91
                   :ARG1 (c18-1 / i)
                   :ARG2 (c18-3 / shire))
       :op2 (c18-2 / resemble-01
                   :ARG1 c18-1
                   :ARG2 c18-3
                   :polarity -))

# ::snt morons who should be up against the wall when the revolution comes
# ::tokens ["morons", "who", "should", "be", "up", "against", "the", "wall", "when", "the", "revolution", "comes"]
# ::lemmas ["moron", "who", "should", "be", "up", "against", "the", "wall", "when", "the", "revolution", "come"]
(c19-1 / moron
       :ARG1-of (c19-4 / recommend-01
                       :ARG2 (c19-2 / up-03
                                    :ARG1 c19-1
                                    :ARG2 (c19-0 / wall)
                                    :time (c19-5 / come-01
                                                 :ARG1 (c19-3 / revolution-03)))))
