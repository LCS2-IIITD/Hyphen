# ::snt when I got them the export slicker on the parcel worryingly said just fascist pencils
# ::tokens ["when", "I", "got", "them", "the", "export", "slicker", "on", "the", "parcel", "worryingly", "said", "just", "fascist", "pencils"]
# ::lemmas ["when", "i", "get", "they", "the", "export", "slicker", "on", "the", "parcel", "worryingly", "say", "just", "fascist", "pencil"]
(c1-9 / say-01
      :ARG0 (c1-3 / stamp
                  :mod (c1-4 / export-01)
                  :location (c1-7 / parcel)
                  :ARG0-of (c1-1 / worry-01))
      :ARG1 (c1-11 / pencil
                   :mod (c1-2 / political-movement
                              :name (c1-6 / name
                                          :op1 "Fascism"))
                   :mod (c1-0 / just))
      :time (c1-8 / get-01
                  :ARG0 (c1-5 / i)
                  :ARG1 (c1-10 / they)))

# ::snt I prefer Pete Seeger's mantra.I think there is too much wish to kill,it solves nothing.
# ::tokens ["I", "prefer", "Pete", "Seeger", "'s", "mantra", ".", "I", "think", "there", "is", "too", "much", "wish", "to", "kill", ",", "it", "solves", "nothing", "."]
# ::lemmas ["i", "prefer", "Pete", "Seeger", "'s", "mantra", ".", "i", "think", "there", "be", "too", "much", "wish", "to", "kill", ",", "it", "solve", "nothing", "."]
(c2-3 / multi-sentence
      :snt1 (c2-8 / prefer-01
                  :ARG0 (c2-4 / i)
                  :ARG1 (c2-9 / mantra
                              :poss (c2-14 / person
                                           :name (c2-6 / name
                                                       :op1 "Pete"
                                                       :op2 "Seeger"))))
      :snt2 (c2-13 / think-01
                   :ARG0 (c2-10 / i)
                   :ARG1 (c2-1 / wish-01
                               :ARG1 (c2-5 / kill-01
                                           :ARG1-of (c2-0 / have-quant-91
                                                          :ARG2 (c2-2 / much)
                                                          :ARG3 (c2-11 / too)))
                               :ARG0-of (c2-12 / solve-01
                                               :ARG1 (c2-7 / nothing)))))

# ::snt Rule of thumb: anything on twitter claimed to be by Banksy is not by Banksy.
# ::tokens ["Rule", "of", "thumb", ":", "anything", "on", "twitter", "claimed", "to", "be", "by", "Banksy", "is", "not", "by", "Banksy", "."]
# ::lemmas ["rule", "of", "thumb", ":", "anything", "on", "twitter", "claim", "to", "be", "by", "Banksy", "be", "not", "by", "Banksy", "."]
(c3-3 / rule-01
      :ARG1 (c3-0 / have-mod-91
                  :ARG1 (c3-7 / anything
                              :ARG1-of (c3-4 / claim-01
                                             :ARG0 (c3-2 / publication
                                                         :name (c3-1 / name
                                                                     :op1 "Twitter"))))
                  :ARG2 (c3-6 / person
                              :name c3-1
                              :op1 "Banksy")
                  :polarity -)
      :mod (c3-5 / thumb))

# ::snt it's not and isn't real either, apparently.
# ::tokens ["it", "'s", "not", "and", "is", "n't", "real", "either", ",", "apparently", "."]
# ::lemmas ["it", "be", "not", "and", "be", "not", "real", "either", ",", "apparently", "."]
(c4-5 / appear-02
      :ARG1 (c4-1 / and
                  :op1 (c4-4 / real-04
                             :ARG1 (c4-2 / it)
                             :polarity -)
                  :op2 (c4-3 / real-04
                             :ARG1 c4-2
                             :polarity -)
                  :mod (c4-0 / either)))

# ::snt *gasp* you can actually buy them? I'm never going to write with anything else!
# ::tokens ["*", "gasp", "*", "you", "can", "actually", "buy", "them", "?", "I", "'m", "never", "going", "to", "write", "with", "anything", "else", "!"]
# ::lemmas ["*", "gasp", "*", "you", "can", "actually", "buy", "they", "?", "i", "be", "never", "go", "to", "write", "with", "anything", "else", "!"]
(c5-2 / multi-sentence
      :snt1 (c5-9 / possible-01
                  :ARG1 (c5-3 / buy-01
                              :ARG0 (c5-0 / you)
                              :ARG1 (c5-11 / they)
                              :ARG1-of (c5-12 / actual-02))
                  :polarity (c5-6 / amr-unknown)
                  :mod (c5-10 / gasp
                              :mode expressive))
      :snt2 (c5-1 / write-01
                  :ARG0 (c5-7 / i)
                  :time (c5-5 / ever)
                  :accompanier (c5-8 / anything
                                     :mod (c5-4 / else))
                  :polarity -))

# ::snt It was Pablo Picasso who said "Good artists copy, great artists steal."
# ::tokens ["It", "was", "Pablo", "Picasso", "who", "said", "\"", "Good", "artists", "copy", ",", "great", "artists", "steal", ".", "\""]
# ::lemmas ["it", "be", "Pablo", "Picasso", "who", "say", "\"", "good", "artist", "copy", ",", "great", "artist", "steal", ".", "\""]
(c6-8 / say-01
      :ARG0 (c6-4 / person
                  :name (c6-2 / name
                              :op1 "Pablo"
                              :op2 "Picasso"))
      :ARG1 (c6-9 / and
                  :op1 (c6-6 / copy-01
                             :ARG0 (c6-1 / artist
                                         :ARG1-of (c6-7 / good-02)))
                  :op2 (c6-0 / steal-01
                             :ARG0 (c6-3 / artist
                                         :mod (c6-5 / great)))))

# ::snt .. Do you? Join my hand
# ::tokens ["..", "Do", "you", "?", "Join", "my", "hand"]
# ::lemmas ["..", "do", "you", "?", "join", "my", "hand"]
(c7-3 / multi-sentence
      :snt1 (c7-5 / do-02
                  :polarity (c7-7 / amr-unknown)
                  :ARG0 (c7-1 / you))
      :snt2 (c7-0 / join-in-05
                  :ARG0 (c7-6 / you)
                  :ARG1 (c7-2 / hand
                              :part-of (c7-4 / i))
                  :mode imperative))

# ::snt :It's not by . tweeted it before he did and the pencils are by Oliver Jeffers I believe.
# ::tokens [":", "It", "'s", "not", "by", ".", "tweeted", "it", "before", "he", "did", "and", "the", "pencils", "are", "by", "Oliver", "Jeffers", "I", "believe", "."]
# ::lemmas [":", "it", "be", "not", "by", ".", "tweet", "it", "before", "he", "do", "and", "the", "pencil", "be", "by", "Oliver", "Jeffers", "i", "believe", "."]
(c8-1 / believe-01
      :ARG0 (c8-2 / i)
      :ARG1 (c8-10 / and
                   :op1 (c8-8 / tweet-02
                              :ARG0 (c8-4 / person
                                          :name (c8-3 / name
                                                      :op1 "Oliver"
                                                      :op2 "Jeffers"))
                              :ARG1 (c8-6 / it)
                              :time (c8-5 / before
                                          :op1 (c8-7 / tweet-02
                                                     :ARG0 (c8-0 / he)
                                                     :ARG1 c8-6))
                              :polarity -)
                   :op2 (c8-9 / pencil
                              :domain c8-4)))

# ::snt theyre real pencils you can (could?) buy. I have some too
# ::tokens ["they", "re", "real", "pencils", "you", "can", "(", "could", "?", ")", "buy", ".", "I", "have", "some", "too"]
# ::lemmas ["they", "re", "real", "pencil", "you", "can", "(", "could", "?", ")", "buy", ".", "i", "have", "some", "too"]
(c9-2 / multi-sentence
      :snt1 (c9-6 / pencil
                  :ARG1-of (c9-7 / real-04)
                  :domain (c9-10 / they)
                  :ARG1-of (c9-4 / buy-01
                                 :ARG0 (c9-1 / you)
                                 :ARG1-of (c9-11 / possible-01
                                                 :polarity (c9-12 / amr-unknown)
                                                 :ARG1 c9-4)))
      :snt2 (c9-0 / have-03
                  :ARG0 (c9-5 / i)
                  :ARG1 (c9-3 / pencil
                              :quant (c9-9 / some))
                  :mod (c9-8 / too)))
