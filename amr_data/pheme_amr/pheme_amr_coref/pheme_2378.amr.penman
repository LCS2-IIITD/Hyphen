# ::snt He's a bit incoherent, but more data points is fine with me. The sure as hell ain't rushing to explain anything
# ::tokens ["He", "'s", "a", "bit", "incoherent", ",", "but", "more", "data", "points", "is", "fine", "with", "me", ".", "The", "sure", "as", "hell", "ai", "n't", "rushing", "to", "explain", "anything"]
# ::lemmas ["he", "be", "a", "bit", "incoherent", ",", "but", "more", "data", "point", "be", "fine", "with", "i", ".", "the", "sure", "as", "hell", "be", "not", "rush", "to", "explain", "anything"]
(c1-2 / multi-sentence
      :snt1 (c1-9 / contrast-01
                  :ARG1 (c1-8 / cohere-01
                              :ARG1 (c1-0 / he)
                              :degree (c1-3 / bit)
                              :polarity -)
                  :ARG2 (c1-1 / fine-04
                              :ARG1 (c1-7 / point
                                          :mod (c1-10 / data)
                                          :quant (c1-11 / more))
                              :ARG2 (c1-6 / i)))
      :snt2 (c1-12 / rush-01
                   :ARG1 (c1-4 / explain-01
                               :ARG1 (c1-14 / anything))
                   :ARG1-of (c1-13 / sure-02
                                   :degree (c1-5 / as-hell))
                   :polarity -))

# ::snt none the less he is! good day.
# ::tokens ["none", "the", "less", "he", "is", "!", "good", "day", "."]
# ::lemmas ["none", "the", "less", "he", "be", "!", "good", "day", "."]
(c2-2 / multi-sentence
      :snt1 (c2-1 / less
                  :domain (c2-0 / he)
                  :polarity -)
      :snt2 (c2-3 / day
                  :ARG1-of (c2-4 / good-02)))

# ::snt it doesn't matter the dead. The end
# ::tokens ["it", "does", "n't", "matter", "the", "dead", ".", "The", "end"]
# ::lemmas ["it", "do", "not", "matter", "the", "dead", ".", "the", "end"]
(c3-0 / multi-sentence
      :snt1 (c3-2 / matter-01
                  :ARG1 (c3-4 / person
                              :ARG1-of (c3-3 / die-01))
                  :polarity -)
      :snt2 (c3-1 / end-01))

# ::snt ICYMI: The info given today seems to line up with this witness account, even the alleged theft
# ::tokens ["ICYMI", ":", "The", "info", "given", "today", "seems", "to", "line", "up", "with", "this", "witness", "account", ",", "even", "the", "alleged", "theft"]
# ::lemmas ["ICYMI", ":", "the", "info", "give", "today", "seem", "to", "line", "up", "with", "this", "witness", "account", ",", "even", "the", "allege", "theft"]
(c4-13 / say-01
       :ARG0 (c4-5 / i)
       :ARG1 (c4-2 / seem-01
                   :ARG1 (c4-1 / line-up-02
                               :ARG1 (c4-10 / information
                                            :ARG1-of (c4-11 / give-01
                                                            :time (c4-14 / today)))
                               :ARG2 (c4-15 / and
                                            :op1 (c4-4 / account-01
                                                       :ARG0 (c4-8 / person
                                                                   :ARG0-of (c4-0 / witness-01))
                                                       :mod (c4-12 / this))
                                            :op2 (c4-7 / thieve-01
                                                       :ARG1-of (c4-9 / allege-01)
                                                       :mod (c4-3 / even)))))
       :ARG2 c4-8
       :name (c4-6 / name
                   :op1 "ICYMI"))

# ::snt :he could of robbed stores, can't shoot him if he's unarmed. I was a cop, I know
# ::tokens [":", "he", "could", "of", "robbed", "stores", ",", "ca", "n't", "shoot", "him", "if", "he", "'s", "unarmed", ".", "I", "was", "a", "cop", ",", "I", "know"]
# ::lemmas [":", "he", "could", "of", "rob", "store", ",", "can", "not", "shoot", "he", "if", "he", "be", "unarmed", ".", "i", "be", "a", "cop", ",", "i", "know"]
(c5-2 / multi-sentence
      :snt1 (c5-6 / possible-01
                  :ARG1 (c5-11 / and
                               :op1 (c5-7 / rob-01
                                          :ARG0 (c5-0 / he)
                                          :ARG1 (c5-9 / store))
                               :op2 (c5-3 / shoot-02
                                          :ARG0 c5-0
                                          :ARG1 (c5-1 / he)
                                          :condition (c5-4 / arm-01
                                                           :ARG1 c5-1
                                                           :polarity -))))
      :snt2 (c5-10 / know-01
                   :ARG0 (c5-5 / i)
                   :ARG1 (c5-8 / cop
                               :domain c5-5)))

# ::snt if you leave our side, we'll be alone. knowwhatiwannasaynext
# ::tokens ["if", "you", "leave", "our", "side", ",", "we", "'ll", "be", "alone", ".", "knowwhatiwannasaynext"]
# ::lemmas ["if", "you", "leave", "our", "side", ",", "we", "'ll", "be", "alone", ".", "knowwhatiwannasaynext"]
(c6-3 / multi-sentence
      :snt1 (c6-5 / alone
                  :domain (c6-0 / we)
                  :condition (c6-2 / leave-11
                                   :ARG0 (c6-1 / you)
                                   :ARG1 (c6-4 / side
                                               :poss c6-0))))

# ::snt doesn't matter can't shoot him. You have to follow the use of force continuum
# ::tokens ["does", "n't", "matter", "ca", "n't", "shoot", "him", ".", "You", "have", "to", "follow", "the", "use", "of", "force", "continuum"]
# ::lemmas ["do", "not", "matter", "can", "not", "shoot", "he", ".", "you", "have", "to", "follow", "the", "use", "of", "force", "continuum"]
(c7-3 / multi-sentence
      :snt1 (c7-7 / matter-01
                  :ARG1 (c7-8 / possible-01
                              :ARG1 (c7-10 / shoot-02
                                           :ARG1 (c7-0 / he))
                              :polarity -)
                  :polarity -)
      :snt2 (c7-5 / obligate-01
                  :ARG1 (c7-1 / you)
                  :ARG2 (c7-2 / follow-02
                              :ARG0 c7-1
                              :ARG1 (c7-9 / continuum
                                          :mod (c7-4 / use-01
                                                     :ARG1 (c7-6 / force))))))

# ::snt you miss my point entirely. He's dead.
# ::tokens ["you", "miss", "my", "point", "entirely", ".", "He", "'s", "dead", "."]
# ::lemmas ["you", "miss", "my", "point", "entirely", ".", "he", "be", "dead", "."]
(c8-2 / multi-sentence
      :snt1 (c8-5 / miss-02
                  :ARG0 (c8-1 / you)
                  :ARG1 (c8-6 / point-04
                              :ARG0 (c8-4 / i))
                  :degree (c8-3 / entire))
      :snt2 (c8-7 / die-01
                  :ARG1 (c8-0 / he)))

# ::snt Bruh could he be any more incoherent?
# ::tokens ["Bruh", "could", "he", "be", "any", "more", "incoherent", "?"]
# ::lemmas ["Bruh", "could", "he", "be", "any", "more", "incoherent", "?"]
(c9-4 / possible-01
      :ARG1 (c9-5 / cohere-01
                  :ARG1 (c9-0 / he)
                  :mod (c9-1 / more
                             :mod (c9-6 / any))
                  :polarity -)
      :polarity (c9-3 / amr-unknown)
      :mod (c9-2 / buh
                 :mode expressive))

# ::snt he should have never have attempted to grab officers gun thru the car window after assaulting a store owner committing theft
# ::tokens ["he", "should", "have", "never", "have", "attempted", "to", "grab", "officers", "gun", "thru", "the", "car", "window", "after", "assaulting", "a", "store", "owner", "committing", "theft"]
# ::lemmas ["he", "should", "have", "never", "have", "attempt", "to", "grab", "officer", "gun", "thru", "the", "car", "window", "after", "assault", "a", "store", "owner", "commit", "theft"]
(c10-8 / recommend-01
       :ARG1 (c10-15 / attempt-01
                     :ARG0 (c10-0 / he)
                     :ARG1 (c10-10 / grab-01
                                   :ARG0 c10-0
                                   :ARG1 (c10-9 / gun
                                                :poss (c10-3 / officer))
                                   :path (c10-1 / window
                                                :part-of (c10-11 / car)))
                     :time (c10-4 / ever)
                     :time (c10-5 / after
                                  :op1 (c10-6 / assault-01
                                              :ARG0 c10-0
                                              :ARG1 (c10-7 / person
                                                           :ARG0-of (c10-2 / own-01
                                                                           :ARG1 (c10-13 / store)))
                                              :ARG0-of (c10-12 / commit-02
                                                               :ARG1 (c10-14 / thieve-01
                                                                             :ARG0 c10-7))))
                     :polarity -))

# ::snt I still don't see the admission of theft here.
# ::tokens ["I", "still", "do", "n't", "see", "the", "admission", "of", "theft", "here", "."]
# ::lemmas ["i", "still", "do", "not", "see", "the", "admission", "of", "theft", "here", "."]
(c11-4 / see-01
       :ARG0 (c11-3 / i)
       :ARG1 (c11-5 / admit-01
                    :ARG1 (c11-2 / steal-01)
                    :location (c11-0 / here))
       :mod (c11-1 / still)
       :polarity -)

# ::snt he's dead and damn sure won't be robbing anyone else.
# ::tokens ["he", "'s", "dead", "and", "damn", "sure", "wo", "n't", "be", "robbing", "anyone", "else", "."]
# ::lemmas ["he", "be", "dead", "and", "damn", "sure", "will", "not", "be", "rob", "anyone", "else", "."]
(c12-7 / and
       :op1 (c12-5 / die-01
                   :ARG1 (c12-0 / he))
       :op2 (c12-4 / rob-01
                   :ARG0 c12-0
                   :ARG1 (c12-3 / anyone
                                :mod (c12-2 / else))
                   :ARG1-of (c12-6 / sure-02
                                   :degree (c12-1 / damn))
                   :polarity -))

# ::snt he never lied about the theft Clear reason this case shouldn't have no problems in court. Seems He told the truth on his part
# ::tokens ["he", "never", "lied", "about", "the", "theft", "Clear", "reason", "this", "case", "should", "n't", "have", "no", "problems", "in", "court", ".", "Seems", "He", "told", "the", "truth", "on", "his", "part"]
# ::lemmas ["he", "never", "lie", "about", "the", "theft", "Clear", "reason", "this", "case", "should", "not", "have", "no", "problem", "in", "court", ".", "seem", "he", "tell", "the", "truth", "on", "his", "part"]
(c13-1 / multi-sentence
       :snt1 (c13-9 / lie-08
                    :ARG0 (c13-8 / he)
                    :ARG3 (c13-6 / steal-01)
                    :time (c13-10 / ever)
                    :ARG1-of (c13-16 / clear-06)
                    :ARG0-of (c13-5 / cause-01
                                    :ARG1 (c13-12 / recommend-01
                                                  :ARG1 (c13-7 / have-03
                                                               :ARG0 (c13-14 / case-03
                                                                             :mod (c13-18 / this))
                                                               :ARG1 (c13-4 / problem)
                                                               :location (c13-15 / court)
                                                               :polarity -)
                                                  :ARG1-of (c13-0 / cause-01
                                                                  :ARG0 (c13-2 / reason
                                                                               :ARG1-of c13-16))))
                    :polarity -)
       :snt2 (c13-11 / seem-01
                     :ARG1 (c13-17 / tell-01
                                   :ARG0 (c13-3 / he)
                                   :ARG1 (c13-13 / truth)
                                   :ARG2 c13-3)))

# ::snt Too right. No trial. No estab guilt. Officer was unaware of alleged theft. Can't execute.
# ::tokens ["Too", "right", ".", "No", "trial", ".", "No", "estab", "guilt", ".", "Officer", "was", "unaware", "of", "alleged", "theft", ".", "Ca", "n't", "execute", "."]
# ::lemmas ["too", "right", ".", "no", "trial", ".", "no", "estab", "guilt", ".", "officer", "be", "unaware", "of", "allege", "theft", ".", "can", "not", "execute", "."]
(c14-1 / multi-sentence
       :snt1 (c14-0 / have-degree-91
                    :ARG2 (c14-6 / right-06)
                    :ARG3 (c14-10 / too))
       :snt2 (c14-8 / try-02
                    :polarity -)
       :snt3 (c14-7 / guilty-01
                    :ARG1 (c14-2 / officer)
                    :polarity -)
       :snt4 (c14-4 / realize-01
                    :ARG0 c14-2
                    :ARG1 (c14-9 / steal-01
                                 :ARG1-of (c14-11 / allege-01))
                    :polarity -)
       :snt5 (c14-5 / possible-01
                    :ARG1 (c14-3 / execute-02
                                 :ARG1 c14-2)
                    :polarity -))

# ::snt you miss my point ; he shouldn't be dead
# ::tokens ["you", "miss", "my", "point", ";", "he", "should", "n't", "be", "dead"]
# ::lemmas ["you", "miss", "my", "point", ";", "he", "should", "not", "be", "dead"]
(c15-2 / miss-02
       :ARG0 (c15-1 / you)
       :ARG1 (c15-4 / point-04
                    :ARG0 (c15-3 / i)
                    :ARG1 (c15-5 / recommend-01
                                 :ARG1 (c15-6 / die-01
                                              :ARG1 (c15-0 / he)
                                              :polarity -))))

# ::snt A bit unclear. Is he admitting to the theft? Also, he says store clerk didn't call police but how could he know that?
# ::tokens ["A", "bit", "unclear", ".", "Is", "he", "admitting", "to", "the", "theft", "?", "Also", ",", "he", "says", "store", "clerk", "did", "n't", "call", "police", "but", "how", "could", "he", "know", "that", "?"]
# ::lemmas ["a", "bit", "unclear", ".", "be", "he", "admit", "to", "the", "theft", "?", "also", ",", "he", "say", "store", "clerk", "do", "not", "call", "police", "but", "how", "could", "he", "know", "that", "?"]
(c16-2 / multi-sentence
       :snt1 (c16-10 / clear-06
                     :degree (c16-3 / bit)
                     :polarity -)
       :snt2 (c16-16 / admit-01
                     :ARG0 (c16-0 / he)
                     :ARG1 (c16-14 / thieve-01
                                   :ARG0 c16-0)
                     :polarity (c16-5 / amr-unknown))
       :snt3 (c16-9 / contrast-01
                    :ARG1 (c16-12 / say-01
                                  :ARG0 (c16-1 / he)
                                  :ARG1 (c16-11 / call-02
                                                :ARG0 (c16-17 / clerk
                                                              :mod (c16-4 / store))
                                                :ARG1 (c16-8 / police)
                                                :polarity -)
                                  :mod (c16-7 / also))
                    :ARG2 (c16-15 / possible-01
                                  :ARG1 (c16-6 / know-01
                                               :ARG0 c16-1
                                               :ARG1 c16-11
                                               :manner (c16-13 / amr-unknown)))))

# ::snt if he feels his life is in danger, he has right as a citizen to shoot, no?
# ::tokens ["if", "he", "feels", "his", "life", "is", "in", "danger", ",", "he", "has", "right", "as", "a", "citizen", "to", "shoot", ",", "no", "?"]
# ::lemmas ["if", "he", "feel", "his", "life", "be", "in", "danger", ",", "he", "have", "right", "as", "a", "citizen", "to", "shoot", ",", "no", "?"]
(c17-5 / right-05
       :ARG1 (c17-0 / he)
       :ARG2 (c17-6 / shoot-01
                    :ARG0 c17-0)
       :condition (c17-1 / feel-02
                         :ARG0 c17-0
                         :ARG1 (c17-3 / endanger-01
                                      :ARG0 (c17-2 / life
                                                   :poss c17-0)))
       :ARG1-of (c17-4 / request-confirmation-91))

# ::snt shouldn't have assaulted the cop, leaving him injured.
# ::tokens ["should", "n't", "have", "assaulted", "the", "cop", ",", "leaving", "him", "injured", "."]
# ::lemmas ["should", "not", "have", "assault", "the", "cop", ",", "leave", "he", "injure", "."]
(c18-2 / recommend-01
       :ARG1 (c18-4 / assault-01
                    :ARG1 (c18-3 / cop)
                    :ARG0-of (c18-0 / leave-13
                                    :ARG1 (c18-1 / injure-01
                                                 :ARG1 c18-3)))
       :polarity -)
