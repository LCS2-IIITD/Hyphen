# ::snt 's goal which he cldn't pull off, was to take guns away from citizens. creating laws? NOT
# ::tokens ["'s", "goal", "which", "he", "cldn't", "pull", "off", ",", "was", "to", "take", "guns", "away", "from", "citizens", ".", "creating", "laws", "?", "NOT"]
# ::lemmas ["'s", "goal", "which", "he", "cldn't", "pull", "off", ",", "be", "to", "take", "gun", "away", "from", "citizen", ".", "create", "law", "?", "not"]
(c1-10 / and
       :op1 (c1-5 / goal
                  :ARG1-of (c1-2 / pull-off-03
                                 :ARG0 (c1-0 / he)
                                 :ARG1-of (c1-9 / possible-01)
                                 :polarity -)
                  :domain (c1-8 / take-away-05
                                :ARG0 c1-0
                                :ARG1 (c1-3 / gun)
                                :source (c1-4 / citizen)))
       :op2 (c1-6 / create-01
                  :ARG1 (c1-1 / law)
                  :ARG1-of (c1-7 / request-confirmation-91)
                  :polarity -))

# ::snt To tell the truth, every morning wondered, is it today? They kicked off in Canada because no .
# ::tokens ["To", "tell", "the", "truth", ",", "every", "morning", "wondered", ",", "is", "it", "today", "?", "They", "kicked", "off", "in", "Canada", "because", "no", "."]
# ::lemmas ["to", "tell", "the", "truth", ",", "every", "morning", "wonder", ",", "be", "it", "today", "?", "they", "kick", "off", "in", "Canada", "because", "no", "."]
(c2-1 / multi-sentence
      :snt1 (c2-0 / wonder-01
                  :ARG1 (c2-12 / truth)
                  :time (c2-7 / date-entity
                              :dayperiod (c2-6 / morning)
                              :mod (c2-2 / every))
                  :purpose (c2-11 / tell-01
                                  :ARG1 c2-12))
      :snt2 (c2-3 / kick-off-04
                  :ARG0 (c2-5 / they)
                  :location (c2-8 / country
                                  :name (c2-4 / name
                                              :op1 "Canada"))
                  :ARG1-of (c2-9 / cause-01
                                 :ARG0 (c2-10 / no))))

# ::snt WAKE UP Folks... it's on the way!!!
# ::tokens ["WAKE", "UP", "Folks", "...", "it", "'s", "on", "the", "way", "!", "!", "!"]
# ::lemmas ["WAKE", "UP", "Folks", "...", "it", "be", "on", "the", "way", "!", "!", "!"]
(c3-6 / say-01
      :ARG0 (c3-3 / i)
      :ARG1 (c3-0 / wake-up-02
                  :ARG0 (c3-1 / folk
                              :ARG1-of c3-0)
                  :ARG1-of (c3-4 / cause-01
                                 :ARG0 (c3-2 / on-the-way
                                             :domain (c3-5 / it)))
                  :mode imperative)
      :ARG2 c3-1)

# ::snt Testing the waters... but for sure, they are getting ready here. LOTS of insurgents here thanks ...
# ::tokens ["Testing", "the", "waters", "...", "but", "for", "sure", ",", "they", "are", "getting", "ready", "here", ".", "LOTS", "of", "insurgents", "here", "thanks", "..."]
# ::lemmas ["test", "the", "water", "...", "but", "for", "sure", ",", "they", "be", "get", "ready", "here", ".", "LOTS", "of", "insurgent", "here", "thank", "..."]
(c4-4 / multi-sentence
      :snt1 (c4-8 / contrast-01
                  :ARG1 (c4-11 / test-01
                               :ARG1 (c4-1 / water))
                  :ARG2 (c4-7 / ready-02
                              :ARG1 (c4-9 / they)
                              :location (c4-0 / here)
                              :ARG1-of (c4-10 / sure-02)))
      :snt2 (c4-5 / insurgent
                  :quant (c4-3 / lot)
                  :location (c4-12 / here)
                  :ARG2-of (c4-6 / thank-01
                                 :ARG1 (c4-2 / you))))

# ::snt Why must there be shooting in US everytime
# ::tokens ["Why", "must", "there", "be", "shooting", "in", "US", "everytime"]
# ::lemmas ["why", "must", "there", "be", "shoot", "in", "US", "everytime"]
(c5-3 / cause-01
      :ARG0 (c5-7 / amr-unknown)
      :ARG1 (c5-0 / obligate-01
                  :ARG2 (c5-5 / shoot-01
                              :location (c5-2 / country
                                              :name (c5-1 / name
                                                          :op1 "US"))
                              :frequency (c5-4 / rate-entity-91
                                               :ARG4 (c5-6 / time)))))

# ::snt Dressed in Black with a covered face... guess.
# ::tokens ["Dressed", "in", "Black", "with", "a", "covered", "face", "...", "guess", "."]
# ::lemmas ["dress", "in", "Black", "with", "a", "cover", "face", "...", "guess", "."]
(c6-5 / and
      :op1 (c6-2 / dress-01
                 :ARG2 (c6-1 / black))
      :op2 (c6-0 / face
                 :ARG1-of (c6-3 / cover-02))
      :ARG1-of (c6-4 / guess-01))

# ::snt they did raise their terror warning in the past hours so they must've gotten word of this
# ::tokens ["they", "did", "raise", "their", "terror", "warning", "in", "the", "past", "hours", "so", "they", "must", "'ve", "gotten", "word", "of", "this"]
# ::lemmas ["they", "do", "raise", "their", "terror", "warn", "in", "the", "past", "hours", "so", "they", "must", "'ve", "get", "word", "of", "this"]
(c7-9 / raise-01
      :ARG0 (c7-13 / they)
      :ARG1 (c7-1 / warn-01
                  :ARG0 c7-13
                  :ARG1 (c7-12 / terror))
      :time (c7-3 / before
                  :op1 (c7-7 / now)
                  :duration (c7-2 / multiple
                                  :op1 (c7-8 / temporal-quantity
                                             :unit (c7-0 / hour)
                                             :quant 1)))
      :ARG0-of (c7-10 / cause-01
                      :ARG1 (c7-5 / infer-01
                                  :ARG1 (c7-11 / get-01
                                               :ARG0 c7-13
                                               :ARG1 (c7-6 / word-01
                                                           :ARG1 (c7-4 / this))))))

# ::snt Doesn't sound like a coincidence to me, at all. Looking forward to finding out more.
# ::tokens ["Does", "n't", "sound", "like", "a", "coincidence", "to", "me", ",", "at", "all", ".", "Looking", "forward", "to", "finding", "out", "more", "."]
# ::lemmas ["do", "not", "sound", "like", "a", "coincidence", "to", "i", ",", "at", "all", ".", "look", "forward", "to", "find", "out", "more", "."]
(c8-1 / multi-sentence
      :snt1 (c8-6 / sound-01
                  :ARG1 (c8-5 / coincidence)
                  :ARG2 (c8-3 / i)
                  :degree (c8-7 / at-all)
                  :polarity -)
      :snt2 (c8-0 / look-forward-03
                  :ARG0 c8-3
                  :ARG1 (c8-2 / find-out-03
                              :ARG0 c8-3
                              :ARG1 (c8-4 / more))))

# ::snt i hope everyone is ok
# ::tokens ["i", "hope", "everyone", "is", "ok"]
# ::lemmas ["i", "hope", "everyone", "be", "ok"]
(c9-0 / hope-01
      :ARG0 (c9-3 / i)
      :ARG1 (c9-2 / okay-04
                  :ARG1 (c9-1 / everyone)))

# ::snt jtf is on they're ass now.
# ::tokens ["jtf", "is", "on", "they", "'re", "ass", "now", "."]
# ::lemmas ["jtf", "be", "on", "they", "be", "ass", "now", "."]
(c10-1 / on-01
       :ARG1 (c10-4 / ass
                    :part-of (c10-3 / they))
       :mod (c10-0 / fucking
                   :mode expressive)
       :time (c10-2 / now))

# ::snt Hey, , how'd'ya like those open borders now? Your heads will roll, same as everyone else!
# ::tokens ["Hey", ",", ",", "how'd'ya", "like", "those", "open", "borders", "now", "?", "Your", "heads", "will", "roll", ",", "same", "as", "everyone", "else", "!"]
# ::lemmas ["hey", ",", ",", "how'd'ya", "like", "those", "open", "border", "now", "?", "your", "head", "will", "roll", ",", "same", "as", "everyone", "else", "!"]
(c11-3 / multi-sentence
       :snt1 (c11-2 / like-01
                    :ARG0 (c11-1 / you)
                    :ARG1 (c11-4 / border
                                 :ARG1-of (c11-5 / open-01)
                                 :mod (c11-13 / that))
                    :mod (c11-0 / hey
                                :mode expressive)
                    :time (c11-9 / now))
       :snt2 (c11-10 / roll-01
                     :ARG1 (c11-14 / head
                                   :part-of (c11-11 / you))
                     :ARG1-of (c11-12 / same-01
                                      :ARG2 (c11-8 / roll-01
                                                   :ARG1 (c11-7 / everyone
                                                                :mod (c11-6 / else))))))

# ::snt muslims?
# ::tokens ["muslims", "?"]
# ::lemmas ["muslim", "?"]
(c12-1 / person
       :polarity (c12-3 / amr-unknown)
       :mod (c12-2 / religious-group
                   :name (c12-0 / name
                                :op1 "Islam")))

# ::snt Who is "they" that you're referring to ?
# ::tokens ["Who", "is", "\"", "they", "\"", "that", "you", "'re", "referring", "to", "?"]
# ::lemmas ["who", "be", "\"", "they", "\"", "that", "you", "be", "refer", "to", "?"]
(c13-2 / they
       :domain (c13-3 / amr-unknown)
       :ARG1-of (c13-1 / refer-01
                       :ARG0 (c13-0 / you)))

# ::snt This time it is Canada not US
# ::tokens ["This", "time", "it", "is", "Canada", "not", "US"]
# ::lemmas ["this", "time", "it", "be", "Canada", "not", "US"]
(c14-6 / and
       :op1 (c14-3 / country
                   :name (c14-0 / name
                                :op1 "Canada"))
       :op2 (c14-2 / country
                   :name (c14-1 / name
                                :op1 "US")
                   :polarity -)
       :time (c14-5 / time
                    :mod (c14-4 / this)))

# ::snt : Ottawa police confirm separate shooting incidents today; on Parliament Hill, at War Memorial and near area mall
# ::tokens [":", "Ottawa", "police", "confirm", "separate", "shooting", "incidents", "today", ";", "on", "Parliament", "Hill", ",", "at", "War", "Memorial", "and", "near", "area", "mall"]
# ::lemmas [":", "Ottawa", "police", "confirm", "separate", "shooting", "incident", "today", ";", "on", "Parliament", "Hill", ",", "at", "War", "Memorial", "and", "near", "area", "mall"]
(c16-8 / confirm-01
       :ARG0 (c16-6 / police
                    :mod (c16-7 / city
                                :name (c16-4 / name
                                             :op1 "Ottawa")))
       :ARG1 (c16-3 / incident
                    :ARG1-of (c16-12 / separate-02)
                    :mod (c16-1 / shoot-02)
                    :location (c16-15 / and
                                      :op1 (c16-9 / government-organization
                                                  :name (c16-5 / name
                                                               :op1 "Parliament"
                                                               :op2 "Hill"))
                                      :op2 (c16-10 / government-organization
                                                   :name (c16-11 / name
                                                                 :op1 "War"
                                                                 :op2 "Memorial"))
                                      :op3 (c16-13 / near-02
                                                   :ARG2 (c16-0 / mall
                                                                :mod (c16-2 / area)))))
       :time (c16-14 / today))
