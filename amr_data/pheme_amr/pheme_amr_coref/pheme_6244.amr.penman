# ::snt great photo. All our thoughts are with the folk in that cafe. Evil actions bring out the best in good people &amp; unite them
# ::tokens ["great", "photo", ".", "All", "our", "thoughts", "are", "with", "the", "folk", "in", "that", "cafe", ".", "Evil", "actions", "bring", "out", "the", "best", "in", "good", "people", "&", "amp", ";", "unite", "them"]
# ::lemmas ["great", "photo", ".", "all", "our", "thought", "be", "with", "the", "folk", "in", "that", "cafe", ".", "evil", "action", "bring", "out", "the", "good", "in", "good", "people", "&", "amp", ";", "unite", "they"]
(c1-0 / multi-sentence
      :snt1 (c1-1 / photo
                  :mod (c1-11 / great))
      :snt2 (c1-20 / think-01
                   :ARG0 (c1-13 / we)
                   :ARG2 (c1-5 / folk
                               :location (c1-17 / cafe
                                                :mod (c1-18 / that)))
                   :mod (c1-4 / all))
      :snt3 (c1-15 / and
                   :op1 (c1-7 / bring-01
                              :ARG0 (c1-10 / act-02
                                           :mod (c1-8 / evil))
                              :ARG1 (c1-3 / person
                                          :ARG1-of (c1-2 / good-02))
                              :ARG2 (c1-19 / and
                                           :op1 (c1-6 / person
                                                      :ARG1-of c1-2))
                              :op2 (c1-12 / person
                                          :name (c1-9 / name
                                                      :op1 "amp")))
                   :direction (c1-16 / out))
      :op2 (c1-14 / unite-01
                  :ARG0 c1-10
                  :ARG1 c1-19))

# ::snt I'm rather disturbed that three of them are smiling.
# ::tokens ["I", "'m", "rather", "disturbed", "that", "three", "of", "them", "are", "smiling", "."]
# ::lemmas ["i", "be", "rather", "disturbed", "that", "three", "of", "they", "be", "smile", "."]
(c2-2 / disturb-01
      :ARG0 (c2-5 / smile-01
                  :ARG0 (c2-1 / person
                              :ARG1-of (c2-0 / include-91
                                             :ARG2 (c2-6 / they))
                              :quant 3))
      :ARG1 (c2-4 / i)
      :degree (c2-3 / rather))

# ::snt Islam is a religion of peace. I guess that's why Saudi Arabia's flag has two swords on it
# ::tokens ["Islam", "is", "a", "religion", "of", "peace", ".", "I", "guess", "that", "'s", "why", "Saudi", "Arabia", "'s", "flag", "has", "two", "swords", "on", "it"]
# ::lemmas ["Islam", "be", "a", "religion", "of", "peace", ".", "i", "guess", "that", "be", "why", "Saudi", "Arabia", "'s", "flag", "have", "two", "sword", "on", "it"]
(c3-2 / multi-sentence
      :snt1 (c3-8 / religion
                  :mod (c3-7 / peace)
                  :domain (c3-4 / religious-group
                                :name (c3-5 / name
                                            :op1 "Islam")))
      :snt2 (c3-10 / guess-01
                   :ARG0 (c3-3 / i)
                   :ARG1 (c3-9 / cause-01
                               :ARG0 (c3-13 / that)
                               :ARG1 (c3-0 / have-03
                                           :ARG0 (c3-1 / flag
                                                       :poss (c3-11 / country
                                                                    :name (c3-6 / name
                                                                                :op1 "Saudi"
                                                                                :op2 "Arabia")))
                                           :ARG1 (c3-12 / sword
                                                        :quant 2)
                                           :location c3-1))))

# ::snt So funny. I guess it was a Jewish false flag operation ? You are deluded, or deep in Taqqiya
# ::tokens ["So", "funny", ".", "I", "guess", "it", "was", "a", "Jewish", "false", "flag", "operation", "?", "You", "are", "deluded", ",", "or", "deep", "in", "Taqqiya"]
# ::lemmas ["so", "funny", ".", "i", "guess", "it", "be", "a", "Jewish", "false", "flag", "operation", "?", "you", "be", "delude", ",", "or", "deep", "in", "Taqqiya"]
(c4-3 / multi-sentence
      :snt1 (c4-2 / funny-02
                  :degree (c4-16 / so))
      :snt2 (c4-13 / guess-01
                   :ARG0 (c4-7 / i)
                   :ARG1 (c4-5 / operate-01
                               :ARG1 (c4-8 / flag
                                           :mod (c4-6 / false))
                               :mod (c4-11 / religious-group
                                           :name (c4-9 / name
                                                       :op1 "Jew"))
                               :domain (c4-14 / it))
                   :polarity (c4-17 / amr-unknown))
      :snt3 (c4-4 / or
                  :op1 (c4-12 / delude-01
                              :ARG1 (c4-0 / you))
                  :op2 (c4-1 / deep-02
                             :ARG1 c4-0
                             :ARG2 (c4-15 / city
                                          :name (c4-10 / name
                                                       :op1 "Taqqiya")))))

# ::snt Of course they did....read the book, it's all there.
# ::tokens ["Of", "course", "they", "did", "....", "read", "the", "book", ",", "it", "'s", "all", "there", "."]
# ::lemmas ["of", "course", "they", "do", "....", "read", "the", "book", ",", "it", "be", "all", "there", "."]
(c5-1 / multi-sentence
      :snt1 (c5-4 / event
                  :mod (c5-8 / they)
                  :mod (c5-3 / of-course))
      :snt2 (c5-5 / read-01
                  :ARG0 (c5-0 / you)
                  :ARG1 (c5-2 / book)
                  :ARG1-of (c5-6 / cause-01
                                 :ARG0 (c5-7 / be-located-at-91
                                             :ARG1 (c5-9 / all)
                                             :ARG2 c5-2))
                  :mode imperative))

# ::snt Then out come the lefties &amp;their pack of muzzie liars tell us that this isn't islam
# ::tokens ["Then", "out", "come", "the", "lefties", "&", "amp;their", "pack", "of", "muzzie", "liars", "tell", "us", "that", "this", "is", "n't", "islam"]
# ::lemmas ["then", "out", "come", "the", "lefty", "&", "amp;their", "pack", "of", "muzzie", "liar", "tell", "we", "that", "this", "be", "not", "islam"]
(c6-2 / multi-sentence
      :snt1 (c6-9 / come-01
                  :ARG1 (c6-17 / and
                               :op1 (c6-7 / person
                                          :ARG1-of (c6-1 / left-19))
                               :op2 (c6-16 / person
                                           :name (c6-5 / name
                                                       :op1 "amp")))
                  :ARG4 (c6-4 / out)
                  :time (c6-15 / then))
      :snt2 (c6-12 / tell-01
                   :ARG0 (c6-3 / pack
                               :consist-of (c6-14 / person
                                                  :ARG0-of (c6-8 / lie-08)
                                                  :mod (c6-10 / muzzie))
                               :poss c6-17)
                   :ARG1 (c6-11 / religious-group
                                :name (c6-6 / name
                                            :op1 "Islam")
                                :domain (c6-13 / this)
                                :polarity -)
                   :ARG2 (c6-0 / we)))

# ::snt . and those Palestinians partying after /11 were what religion ?
# ::tokens [".", "and", "those", "Palestinians", "partying", "after", "/11", "were", "what", "religion", "?"]
# ::lemmas [".", "and", "those", "Palestinians", "party", "after", "/11", "be", "what", "religion", "?"]
(c7-5 / religion
      :domain (c7-10 / and
                     :op1 (c7-4 / person
                                :mod (c7-6 / country
                                           :name (c7-2 / name
                                                       :op1 "Palestine"))
                                :ARG0-of (c7-9 / party-01
                                               :time (c7-0 / after
                                                           :op1 (c7-1 / incident
                                                                      :name (c7-3 / name
                                                                                  :op1 "9/11"))))
                                :mod (c7-8 / that))
                     :op2 (c7-7 / amr-unknown)))

# ::snt truth hurts doesn't it
# ::tokens ["truth", "hurts", "does", "n't", "it"]
# ::lemmas ["truth", "hurt", "do", "not", "it"]
(c8-0 / hurt-01
      :ARG0 (c8-2 / truth)
      :ARG1-of (c8-1 / request-confirmation-91))

# ::snt Photo op for Jewish Rabbi who is totally unconnected with current situation re falling chocolate sales.
# ::tokens ["Photo", "op", "for", "Jewish", "Rabbi", "who", "is", "totally", "unconnected", "with", "current", "situation", "re", "falling", "chocolate", "sales", "."]
# ::lemmas ["photo", "op", "for", "Jewish", "Rabbi", "who", "be", "totally", "unconnected", "with", "current", "situation", "re", "fall", "chocolate", "sale", "."]
(c9-1 / opine-01
      :ARG0 (c9-4 / person
                  :mod (c9-5 / religious-group
                             :name (c9-3 / name
                                         :op1 "Jew"))
                  :ARG1-of (c9-6 / connect-01
                                 :ARG2 (c9-9 / situation
                                             :time (c9-7 / current)
                                             :topic (c9-2 / sell-01
                                                          :ARG1 (c9-8 / chocolate)
                                                          :ARG1-of (c9-0 / fall-01)))
                                 :degree (c9-10 / total)
                                 :polarity -))
      :mod (c9-11 / photo))

# ::snt Spot the man practicing taqiyya
# ::tokens ["Spot", "the", "man", "practicing", "taqiyya"]
# ::lemmas ["spot", "the", "man", "practice", "taqiyya"]
(c10-3 / spot-01
       :ARG0 (c10-0 / you)
       :ARG1 (c10-1 / man
                    :ARG0-of (c10-2 / practice-01
                                    :ARG1 (c10-4 / taqiyya)))
       :mode imperative)

# ::snt Before I mute you, know that we'll stand against your hate and will not accept it.
# ::tokens ["Before", "I", "mute", "you", ",", "know", "that", "we", "'ll", "stand", "against", "your", "hate", "and", "will", "not", "accept", "it", "."]
# ::lemmas ["before", "i", "mute", "you", ",", "know", "that", "we", "'ll", "stand", "against", "your", "hate", "and", "will", "not", "accept", "it", "."]
(c11-9 / know-01
       :ARG0 (c11-1 / you)
       :ARG1 (c11-10 / and
                     :op1 (c11-8 / stand-11
                                 :ARG0 (c11-2 / we)
                                 :ARG1 (c11-5 / oppose-01
                                              :ARG0 c11-2
                                              :ARG1 (c11-0 / hate-01
                                                           :ARG0 c11-1)))
                     :op2 (c11-6 / accept-01
                                 :ARG0 c11-2
                                 :ARG1 c11-0
                                 :polarity -))
       :time (c11-4 / before
                    :op1 (c11-3 / mute-01
                                :ARG0 (c11-7 / i)
                                :ARG1 c11-1))
       :mode imperative)

# ::snt 's Scheuer on apparent motive for as well
# ::tokens ["'s", "Scheuer", "on", "apparent", "motive", "for", "as", "well"]
# ::lemmas ["be", "Scheuer", "on", "apparent", "motive", "for", "as", "well"]
(c12-3 / person
       :name (c12-2 / name
                    :op1 "Scheuer")
       :topic (c12-0 / motive
                     :ARG1-of (c12-4 / appear-02)
                     :mod (c12-1 / as-well)))

# ::snt :Muslims are fucking liarsKoran teaches to lie to non-Muslims://
# ::tokens [":", "Muslims", "are", "fucking", "liarsKoran", "teaches", "to", "lie", "to", "non", "-", "Muslims://"]
# ::lemmas [":", "Muslims", "be", "fucking", "liarsKoran", "teach", "to", "lie", "to", "non", "-", "muslims://"]
(c13-9 / teach-01
       :ARG0 (c13-6 / person
                    :name (c13-4 / name
                                 :op1 "Koran"))
       :ARG1 (c13-0 / lie-08
                    :ARG0 (c13-10 / person
                                  :mod (c13-7 / religious-group
                                              :name (c13-5 / name
                                                           :op1 "Muslim")))
                    :ARG2 (c13-2 / person
                                 :mod (c13-3 / religious-group
                                             :name (c13-8 / name
                                                          :op1 "Islam")
                                             :polarity -)))
       :mod (c13-1 / fucking))

# ::snt I am not any religion, look back in history and find a peaceful religion, I wish you luck
# ::tokens ["I", "am", "not", "any", "religion", ",", "look", "back", "in", "history", "and", "find", "a", "peaceful", "religion", ",", "I", "wish", "you", "luck"]
# ::lemmas ["i", "be", "not", "any", "religion", ",", "look", "back", "in", "history", "and", "find", "a", "peaceful", "religion", ",", "i", "wish", "you", "luck"]
(c14-12 / and
        :op1 (c14-10 / religion
                     :domain (c14-7 / i)
                     :polarity -)
        :op2 (c14-6 / and
                    :op1 (c14-3 / look-01
                                :ARG0 (c14-1 / you)
                                :ARG1 (c14-0 / history)
                                :direction (c14-5 / back)
                                :mode imperative)
                    :op2 (c14-4 / find-01
                                :ARG0 c14-1
                                :ARG1 (c14-8 / religion
                                             :mod (c14-9 / peaceful))
                                :mode imperative))
        :op3 (c14-2 / wish-01
                    :ARG0 c14-7
                    :ARG1 (c14-11 / luck)
                    :ARG2 c14-1))

# ::snt This could be sorted by these man if they ALL TOGETHER WALKED IN FREE and asked for the justification for doing this!!
# ::tokens ["This", "could", "be", "sorted", "by", "these", "man", "if", "they", "ALL", "TOGETHER", "WALKED", "IN", "FREE", "and", "asked", "for", "the", "justification", "for", "doing", "this", "!", "!"]
# ::lemmas ["this", "could", "be", "sort", "by", "these", "man", "if", "you", "all", "together", "walked", "in", "FREE", "and", "ask", "for", "the", "justification", "for", "do", "this", "!", "!"]
(c15-8 / possible-01
       :ARG1 (c15-12 / sort-01
                     :ARG0 (c15-3 / man
                                  :mod (c15-13 / this))
                     :ARG1 (c15-11 / this))
       :condition (c15-14 / and
                          :op1 (c15-1 / walk-01
                                      :ARG0 (c15-7 / they
                                                   :mod (c15-5 / all))
                                      :manner (c15-2 / free-04))
                          :op2 (c15-9 / ask-01
                                      :ARG0 c15-7
                                      :ARG1 (c15-4 / thing
                                                   :ARG2-of (c15-0 / justify-01
                                                                   :ARG1 (c15-10 / do-02
                                                                                 :ARG1 (c15-6 / this)))))))

# ::snt look at horror on their faces? Some are smiling
# ::tokens ["look", "at", "horror", "on", "their", "faces", "?", "Some", "are", "smiling"]
# ::lemmas ["look", "at", "horror", "on", "their", "face", "?", "some", "be", "smile"]
(c16-3 / multi-sentence
       :snt1 (c16-2 / look-01
                    :polarity (c16-8 / amr-unknown)
                    :ARG0 (c16-1 / you)
                    :ARG1 (c16-0 / horror
                                 :location (c16-4 / face
                                                  :part-of (c16-7 / they))))
       :snt2 (c16-6 / smile-01
                    :ARG0 (c16-5 / some)))

# ::snt you mean the fake archive video that some news agencies showed ?
# ::tokens ["you", "mean", "the", "fake", "archive", "video", "that", "some", "news", "agencies", "showed", "?"]
# ::lemmas ["you", "mean", "the", "fake", "archive", "video", "that", "some", "news", "agency", "show", "?"]
(c17-2 / mean-01
       :polarity (c17-9 / amr-unknown)
       :ARG0 (c17-0 / you)
       :ARG2 (c17-6 / video
                    :ARG1-of (c17-1 / fake-02)
                    :mod (c17-4 / archive)
                    :ARG1-of (c17-8 / show-01
                                    :ARG0 (c17-7 / agency
                                                 :mod (c17-5 / news)
                                                 :quant (c17-3 / some)))))

# ::snt Crocodile tears?
# ::tokens ["Crocodile", "tears", "?"]
# ::lemmas ["Crocodile", "tear", "?"]
(c18-1 / tear
       :polarity (c18-2 / amr-unknown)
       :mod (c18-0 / rocodile))

# ::snt This will never satisfy like Ray Hadley,Alan Jones, Graham Gilbert, Andrew Bolt etc
# ::tokens ["This", "will", "never", "satisfy", "like", "Ray", "Hadley", ",", "Alan", "Jones", ",", "Graham", "Gilbert", ",", "Andrew", "Bolt", "etc"]
# ::lemmas ["this", "will", "never", "satisfy", "like", "Ray", "Hadley", ",", "Alan", "Jones", ",", "Graham", "Gilbert", ",", "Andrew", "Bolt", "etc"]
(c20-9 / satisfy-01
       :ARG0 (c20-11 / this)
       :ARG1-of (c20-6 / resemble-01
                       :ARG2 (c20-13 / and
                                     :op1 (c20-5 / person
                                                 :name (c20-3 / name
                                                              :op1 "Ray"
                                                              :op2 "Hadley"))
                                     :op2 (c20-12 / person
                                                  :name (c20-4 / name
                                                               :op1 "Alan"
                                                               :op2 "Jones"))
                                     :op3 (c20-0 / person
                                                 :name (c20-7 / name
                                                              :op1 "Graham"
                                                              :op2 "Gilbert"))
                                     :op4 (c20-10 / person
                                                  :name (c20-8 / name
                                                               :op1 "Andrew"
                                                               :op2 "Bolt"))
                                     :op5 (c20-2 / et-cetera)))
       :time (c20-1 / ever)
       :polarity -)
