# ::snt To prove how wrong" their political enemies are.
# ::tokens ["To", "prove", "how", "wrong", "\"", "their", "political", "enemies", "are", "."]
# ::lemmas ["to", "prove", "how", "wrong", "\"", "their", "political", "enemy", "be", "."]
(c1-2 / prove-01
      :ARG1 (c1-0 / wrong-04
                  :ARG1 (c1-1 / enemy
                              :mod (c1-5 / politics)
                              :poss (c1-4 / they))
                  :degree (c1-3 / so)))

# ::snt Always common ground somewhere. Wish wed focus on that more in our national conversations.
# ::tokens ["Always", "common", "ground", "somewhere", ".", "Wish", "we", "d", "focus", "on", "that", "more", "in", "our", "national", "conversations", "."]
# ::lemmas ["always", "common", "ground", "somewhere", ".", "wish", "we", "d", "focus", "on", "that", "more", "in", "our", "national", "conversation", "."]
(c2-3 / multi-sentence
      :snt1 (c2-11 / ground
                   :mod (c2-10 / common)
                   :location (c2-12 / somewhere)
                   :time (c2-14 / always))
      :snt2 (c2-1 / wish-01
                  :ARG0 (c2-5 / i)
                  :ARG1 (c2-2 / focus-01
                              :ARG0 (c2-6 / wed)
                              :ARG2 (c2-13 / that)
                              :location (c2-9 / converse-01
                                              :ARG0 (c2-4 / we)
                                              :mod (c2-7 / nation))
                              :ARG1-of (c2-0 / have-quant-91
                                             :ARG3 (c2-8 / more)))))

# ::snt Yes, proving conservatives wrong is way more important that human lives to liberals.
# ::tokens ["Yes", ",", "proving", "conservatives", "wrong", "is", "way", "more", "important", "that", "human", "lives", "to", "liberals", "."]
# ::lemmas ["yes", ",", "prove", "conservative", "wrong", "be", "way", "more", "important", "that", "human", "life", "to", "liberal", "."]
(c3-0 / have-degree-91
      :ARG1 (c3-7 / prove-01
                  :ARG1 (c3-1 / wrong-04
                              :ARG1 (c3-10 / person
                                           :mod (c3-8 / conservative))))
      :ARG2 (c3-5 / important-01
                  :ARG1 c3-7)
      :ARG3 (c3-3 / more
                  :quant (c3-6 / way))
      :ARG4 (c3-2 / live-01
                  :ARG0 (c3-4 / person
                              :ARG1-of (c3-9 / liberal-02))
                  :mod (c3-11 / human)))

# ::snt Joel
# ::tokens ["Joel"]
# ::lemmas ["Joel"]
(c4-1 / person
      :name (c4-0 / name
                  :op1 "Joel"))

# ::snt Easy prediction: If ever one Am ISIS fighters returned to the U.S. and slaughtered people here, the NRA would get blamed.
# ::tokens ["Easy", "prediction", ":", "If", "ever", "one", "Am", "ISIS", "fighters", "returned", "to", "the", "U.S.", "and", "slaughtered", "people", "here", ",", "the", "NRA", "would", "get", "blamed", "."]
# ::lemmas ["easy", "prediction", ":", "if", "ever", "one", "be", "ISIS", "fighter", "return", "to", "the", "U.S.", "and", "slaughter", "people", "here", ",", "the", "NRA", "would", "get", "blame", "."]
(c5-8 / predict-01
      :ARG1 (c5-3 / blame-01
                  :ARG1 (c5-4 / organization
                              :name (c5-6 / name
                                          :op1 "NRA"))
                  :condition (c5-15 / and
                                    :op1 (c5-9 / return-01
                                               :ARG1 (c5-14 / person
                                                            :ARG0-of (c5-1 / fight-01)
                                                            :ARG0-of (c5-0 / have-org-role-91
                                                                           :ARG1 (c5-10 / criminal-organization
                                                                                        :name (c5-7 / name
                                                                                                    :op1 "ISIS"))))
                                               :ARG4 (c5-11 / country
                                                            :name (c5-12 / name
                                                                         :op1 "U.S.")))
                                    :op2 (c5-13 / slaughter-01
                                                :ARG0 c5-14
                                                :ARG1 (c5-2 / person)
                                                :location c5-11)))
      :ARG1-of (c5-5 / easy-05))

# ::snt Its self-destructive. Its what they do. (Abortion, Debt, Family, Marriage, Country . . .)
# ::tokens ["Its", "self", "-", "destructive", ".", "Its", "what", "they", "do", ".", "(", "Abortion", ",", "Debt", ",", "Family", ",", "Marriage", ",", "Country", ".", ".", ".", ")"]
# ::lemmas ["its", "self", "-", "destructive", ".", "its", "what", "they", "do", ".", "(", "abortion", ",", "Debt", ",", "Family", ",", "Marriage", ",", "Country", ".", ".", ".", ")"]
(c6-2 / multi-sentence
      :snt1 (c6-6 / destroy-01
                  :ARG0 (c6-4 / it
                              :ARG1-of c6-6))
      :snt2 (c6-0 / do-02
                  :ARG0 (c6-9 / they)
                  :ARG1 (c6-8 / thing
                              :example (c6-10 / and
                                              :op1 (c6-3 / ortion-01)
                                              :op2 (c6-11 / debt)
                                              :op3 (c6-1 / family)
                                              :op4 (c6-5 / marry-01)
                                              :op5 (c6-7 / country)))))

# ::snt It would be nice. Sadly it doesn't seem to make for great ratings on the news channels.
# ::tokens ["It", "would", "be", "nice", ".", "Sadly", "it", "does", "n't", "seem", "to", "make", "for", "great", "ratings", "on", "the", "news", "channels", "."]
# ::lemmas ["it", "would", "be", "nice", ".", "sadly", "it", "do", "not", "seem", "to", "make", "for", "great", "rating", "on", "the", "news", "channel", "."]
(c7-1 / multi-sentence
      :snt1 (c7-3 / nice-01
                  :ARG1 (c7-2 / it))
      :snt2 (c7-10 / seem-01
                   :ARG1 (c7-5 / make-18
                               :ARG0 (c7-8 / it)
                               :ARG1 (c7-6 / rate-01
                                           :mod (c7-9 / great)
                                           :location (c7-7 / channel
                                                           :mod (c7-4 / news))))
                   :ARG2-of (c7-0 / fortunate-01
                                  :polarity -)
                   :polarity -))

# ::snt Great idea.
# ::tokens ["Great", "idea", "."]
# ::lemmas ["great", "idea", "."]
(c8-1 / idea
      :mod (c8-0 / great))

# ::snt The libs especially Bozo does not want to offend these people they are still trying to appease.
# ::tokens ["The", "libs", "especially", "Bozo", "does", "not", "want", "to", "offend", "these", "people", "they", "are", "still", "trying", "to", "appease", "."]
# ::lemmas ["the", "lib", "especially", "Bozo", "do", "not", "want", "to", "offend", "these", "people", "they", "be", "still", "try", "to", "appease", "."]
(c9-0 / want-01
      :ARG0 (c9-5 / person
                  :ARG1-of (c9-1 / liberal-02)
                  :mod (c9-3 / especially)
                  :name (c9-4 / name
                              :op1 "Bozo"))
      :ARG1 (c9-2 / offend-01
                  :ARG0 c9-5
                  :ARG1 (c9-9 / person
                              :mod (c9-8 / this)
                              :ARG1-of (c9-10 / appease-01
                                              :ARG0 c9-5
                                              :ARG1-of (c9-6 / try-01
                                                             :ARG0 c9-5
                                                             :mod (c9-7 / still)))))
      :polarity -)

# ::snt Yes, thats another point. Remember OWS? God help us if they gain power. Oh . . .
# ::tokens ["Yes", ",", "that", "s", "another", "point", ".", "Remember", "OWS", "?", "God", "help", "us", "if", "they", "gain", "power", ".", "Oh", ".", ".", "."]
# ::lemmas ["yes", ",", "that", "s", "another", "point", ".", "remember", "ows", "?", "God", "help", "we", "if", "they", "gain", "power", ".", "oh", ".", ".", "."]
(c10-3 / multi-sentence
       :snt1 (c10-9 / point-04
                    :mod (c10-15 / another)
                    :domain (c10-13 / that)
                    :mod (c10-1 / yes))
       :snt2 (c10-10 / remember-01
                     :ARG1 (c10-14 / political-movement
                                   :name (c10-7 / name
                                                :op1 "OWS"))
                     :polarity (c10-6 / amr-unknown))
       :snt3 (c10-0 / help-01
                    :ARG0 (c10-4 / person
                                 :name (c10-8 / name
                                              :op1 "God"))
                    :ARG2 (c10-2 / we)
                    :condition (c10-11 / gain-02
                                       :ARG0 c10-14
                                       :ARG1 (c10-12 / power)))
       :snt4 (c10-5 / oh
                    :mode expressive))

# ::snt Mr President can you also stop releasing the terrorist we already have in Gitmo. This is not rocket science
# ::tokens ["Mr", "President", "can", "you", "also", "stop", "releasing", "the", "terrorist", "we", "already", "have", "in", "Gitmo", ".", "This", "is", "not", "rocket", "science"]
# ::lemmas ["Mr", "President", "can", "you", "also", "stop", "release", "the", "terrorist", "we", "already", "have", "in", "Gitmo", ".", "this", "be", "not", "rocket", "science"]
(c11-3 / multi-sentence
       :snt1 (c11-9 / possible-01
                    :ARG1 (c11-13 / stop-01
                                  :ARG0 (c11-15 / person
                                                :name (c11-7 / name
                                                             :op1 "Mr"
                                                             :op2 "President"))
                                  :ARG1 (c11-10 / release-01
                                                :ARG0 c11-15
                                                :ARG1 (c11-14 / terrorist
                                                              :ARG1-of (c11-0 / have-03
                                                                              :ARG0 (c11-1 / we)
                                                                              :location (c11-2 / facility
                                                                                               :name (c11-8 / name
                                                                                                            :op1 "Gitmo"))
                                                                              :time (c11-16 / already))))
                                  :mod (c11-5 / also))
                    :polarity (c11-11 / amr-unknown))
       :snt2 (c11-4 / science
                    :mod (c11-6 / rocket)
                    :domain (c11-12 / this)))

# ::snt I knew that. I'm sorry. First cup of Joe (not Joel)
# ::tokens ["I", "knew", "that", ".", "I", "'m", "sorry", ".", "First", "cup", "of", "Joe", "(", "not", "Joel", ")"]
# ::lemmas ["i", "know", "that", ".", "i", "be", "sorry", ".", "First", "cup", "of", "Joe", "(", "not", "Joel", ")"]
(c12-1 / multi-sentence
       :snt1 (c12-4 / know-01
                    :ARG0 (c12-3 / i)
                    :ARG1 (c12-11 / that))
       :snt2 (c12-10 / sorry-01
                     :ARG1 (c12-9 / i))
       :snt3 (c12-8 / cup
                    :ord (c12-2 / ordinal-entity
                                :value 1)
                    :consist-of (c12-7 / person
                                       :name (c12-5 / name
                                                    :op1 "Joe")
                                       :ARG1-of (c12-0 / instead-of-91
                                                       :ARG2 (c12-12 / person
                                                                     :name (c12-6 / name
                                                                                  :op1 "Joel"))))))

# ::snt Heh. That's a good bet Joe.
# ::tokens ["Heh", ".", "That", "'s", "a", "good", "bet", "Joe", "."]
# ::lemmas ["heh", ".", "that", "be", "a", "good", "bet", "Joe", "."]
(c13-6 / say-01
       :ARG0 (c13-2 / i)
       :ARG1 (c13-1 / bet-01
                    :ARG1 (c13-7 / that)
                    :ARG1-of (c13-5 / good-02))
       :ARG2 (c13-4 / person
                    :name (c13-3 / name
                                 :op1 "Joe"))
       :mod (c13-0 / heh
                   :mode expressive))

# ::snt Noooooo.... that would be profiling &amp; profiling is WRONG!
# ::tokens ["Noooooo", "....", "that", "would", "be", "profiling", "&", "amp", ";", "profiling", "is", "WRONG", "!"]
# ::lemmas ["Noooooo", "....", "that", "would", "be", "profile", "&", "amp", ";", "profiling", "be", "wrong", "!"]
(c14-6 / and
       :op1 (c14-2 / and
                   :op1 (c14-3 / profile-01)
                   :op2 (c14-5 / profile-01)
                   :domain (c14-4 / that))
       :op2 (c14-0 / wrong-02
                   :ARG1 (c14-1 / profile-01)))

# ::snt ... and stop releasing the ones we already have in Gitmo. This is not rocket science.
# ::tokens ["...", "and", "stop", "releasing", "the", "ones", "we", "already", "have", "in", "Gitmo", ".", "This", "is", "not", "rocket", "science", "."]
# ::lemmas ["...", "and", "stop", "release", "the", "one", "we", "already", "have", "in", "Gitmo", ".", "this", "be", "not", "rocket", "science", "."]
(c15-4 / multi-sentence
       :snt1 (c15-14 / and
                     :op2 (c15-12 / stop-01
                                  :ARG0 (c15-1 / you)
                                  :ARG1 (c15-10 / release-01
                                                :ARG0 c15-1
                                                :ARG1 (c15-13 / thing
                                                              :quant (c15-9 / multiple
                                                                            :op1 1)
                                                              :ARG1-of (c15-0 / have-03
                                                                              :ARG0 (c15-2 / we)
                                                                              :location (c15-3 / facility
                                                                                               :name (c15-8 / name
                                                                                                            :op1 "Gitmo"))
                                                                              :time (c15-6 / already))))
                                  :mode imperative))
       :snt2 (c15-5 / science
                    :mod (c15-7 / rocket)
                    :domain (c15-11 / this)
                    :polarity -))

# ::snt Ugh. I hate agreeing with you. Why do you have to be right occasionally?
# ::tokens ["Ugh", ".", "I", "hate", "agreeing", "with", "you", ".", "Why", "do", "you", "have", "to", "be", "right", "occasionally", "?"]
# ::lemmas ["Ugh", ".", "i", "hate", "agree", "with", "you", ".", "why", "do", "you", "have", "to", "be", "right", "occasionally", "?"]
(c16-3 / multi-sentence
       :snt1 (c16-4 / ugh
                    :mode expressive)
       :snt2 (c16-0 / hate-01
                    :ARG0 (c16-7 / i)
                    :ARG1 (c16-11 / agree-01
                                  :ARG0 c16-7
                                  :ARG2 (c16-1 / you)))
       :snt3 (c16-9 / cause-01
                    :ARG0 (c16-6 / amr-unknown)
                    :ARG1 (c16-5 / obligate-01
                                 :ARG1 (c16-10 / you)
                                 :ARG2 (c16-8 / right-06
                                              :ARG1 c16-10
                                              :frequency (c16-2 / occasional)))))

# ::snt No. We will NOT revoke terrorist passports. Sincerely, Valerie Jarret.
# ::tokens ["No", ".", "We", "will", "NOT", "revoke", "terrorist", "passports", ".", "Sincerely", ",", "Valerie", "Jarret", "."]
# ::lemmas ["no", ".", "we", "will", "not", "revoke", "terrorist", "passport", ".", "sincerely", ",", "Valerie", "Jarret", "."]
(c17-1 / multi-sentence
       :snt1 (c17-4 / no)
       :snt2 (c17-7 / revoke-01
                    :ARG0 (c17-0 / we)
                    :ARG1 (c17-6 / passport
                                 :mod (c17-9 / terrorist))
                    :polarity -)
       :snt3 (c17-8 / say-01
                    :ARG0 (c17-3 / i)
                    :ARG1 (c17-2 / sincere)
                    :ARG2 (c17-10 / person
                                  :name (c17-5 / name
                                               :op1 "Valerie"
                                               :op2 "J Jarret"))))

# ::snt That might hurt there feelings if he did that. Also it might be racial profiling. Lol
# ::tokens ["That", "might", "hurt", "there", "feelings", "if", "he", "did", "that", ".", "Also", "it", "might", "be", "racial", "profiling", ".", "Lol"]
# ::lemmas ["that", "might", "hurt", "there", "feeling", "if", "he", "do", "that", ".", "also", "it", "might", "be", "racial", "profiling", ".", "Lol"]
(c18-2 / multi-sentence
       :snt1 (c18-6 / possible-01
                    :ARG1 (c18-0 / hurt-01
                                 :ARG0 (c18-12 / that)
                                 :ARG1 (c18-1 / feel-01
                                              :ARG0 (c18-10 / they))
                                 :condition (c18-7 / do-02
                                                   :ARG0 (c18-14 / he)
                                                   :ARG1 (c18-5 / that))))
       :snt2 (c18-13 / possible-01
                     :ARG1 (c18-4 / profile-01
                                  :mod (c18-8 / race))
                     :mod (c18-11 / also))
       :snt3 (c18-3 / laugh-01
                    :manner (c18-9 / loud)
                    :mode expressive))

# ::snt Liberals could screw up a vacant lot but think they should make decisions for everyone else.
# ::tokens ["Liberals", "could", "screw", "up", "a", "vacant", "lot", "but", "think", "they", "should", "make", "decisions", "for", "everyone", "else", "."]
# ::lemmas ["liberal", "could", "screw", "up", "a", "vacant", "lot", "but", "think", "they", "should", "make", "decision", "for", "everyone", "else", "."]
(c19-6 / contrast-01
       :ARG1 (c19-4 / possible-01
                    :ARG1 (c19-9 / screw-up-01
                                 :ARG0 (c19-11 / person
                                               :ARG1-of (c19-0 / liberal-02))
                                 :ARG1 (c19-8 / lot
                                              :mod (c19-3 / vacant))))
       :ARG2 (c19-10 / think-01
                     :ARG0 c19-11
                     :ARG1 (c19-5 / recommend-01
                                  :ARG1 (c19-7 / decide-01
                                               :ARG0 c19-11
                                               :ARG2 (c19-2 / everyone
                                                            :mod (c19-1 / else))))))
