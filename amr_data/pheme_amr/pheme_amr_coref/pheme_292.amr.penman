# ::snt i just hope (and suspect) there are many of our folks out there doing this work for us who think and act just like you
# ::tokens ["i", "just", "hope", "(", "and", "suspect", ")", "there", "are", "many", "of", "our", "folks", "out", "there", "doing", "this", "work", "for", "us", "who", "think", "and", "act", "just", "like", "you"]
# ::lemmas ["i", "just", "hope", "(", "and", "suspect", ")", "there", "be", "many", "of", "our", "folk", "out", "there", "do", "this", "work", "for", "we", "who", "think", "and", "act", "just", "like", "you"]
(c1-16 / and
       :op1 (c1-0 / hope-01
                  :ARG0 (c1-8 / i)
                  :ARG1 (c1-11 / do-02
                               :ARG0 (c1-3 / folk
                                           :quant (c1-4 / many)
                                           :poss (c1-1 / we)
                                           :location (c1-6 / out-there))
                               :ARG1 (c1-9 / work-01
                                           :ARG0 c1-3
                                           :ARG1 (c1-15 / this)
                                           :ARG2 c1-1)))
       :op2 (c1-14 / suspect-01
                   :ARG0 c1-8
                   :ARG1 (c1-7 / and
                               :op1 (c1-13 / think-01
                                           :ARG0 c1-3)
                               :op2 (c1-10 / act-01
                                           :ARG0 c1-3)
                               :ARG1-of (c1-12 / resemble-01
                                               :ARG2 (c1-2 / you)
                                               :mod (c1-5 / just
                                                          :mod-of c1-16)))))

# ::snt Obama and team are still talking about what they may recommend Australia Police do about Terrorists Hostages
# ::tokens ["Obama", "and", "team", "are", "still", "talking", "about", "what", "they", "may", "recommend", "Australia", "Police", "do", "about", "Terrorists", "Hostages"]
# ::lemmas ["Obama", "and", "team", "be", "still", "talk", "about", "what", "they", "may", "recommend", "Australia", "police", "do", "about", "Terrorists", "Hostages"]
(c2-11 / talk-01
       :ARG0 (c2-13 / and
                    :op1 (c2-5 / person
                               :name (c2-3 / name
                                           :op1 "Obama"))
                    :op2 (c2-9 / team))
       :ARG1 (c2-4 / thing
                   :ARG1-of (c2-6 / recommend-01
                                  :ARG0 c2-13
                                  :ARG2 (c2-12 / police
                                               :mod (c2-7 / country
                                                          :name (c2-8 / name
                                                                      :op1 "Australia")))
                                  :ARG3 (c2-0 / Hostage
                                              :mod (c2-2 / terrorist))
                                  :ARG1-of (c2-1 / possible-01)))
       :mod (c2-10 / still))

# ::snt send in the bad asses and send out some dead bad guys! Center mass MB! Happy Holidays to you and the family.
# ::tokens ["send", "in", "the", "bad", "asses", "and", "send", "out", "some", "dead", "bad", "guys", "!", "Center", "mass", "MB", "!", "Happy", "Holidays", "to", "you", "and", "the", "family", "."]
# ::lemmas ["send", "in", "the", "bad", "ass", "and", "send", "out", "some", "dead", "bad", "guy", "!", "center", "mass", "MB", "!", "Happy", "Holidays", "to", "you", "and", "the", "family", "."]
(c3-0 / multi-sentence
      :snt1 (c3-4 / and
                  :op1 (c3-2 / send-01
                             :ARG0 (c3-15 / you)
                             :ARG1 (c3-13 / ass
                                          :ARG1-of (c3-7 / bad-07))
                             :mode imperative)
                  :op2 (c3-8 / send-01
                             :ARG0 c3-15
                             :ARG1 (c3-12 / guy
                                          :ARG1-of (c3-1 / die-01)
                                          :ARG1-of (c3-14 / bad-07)
                                          :quant (c3-16 / some))
                             :ARG2 (c3-17 / out)
                             :mode imperative))
      :snt2 (c3-11 / mass
                   :mod (c3-6 / facility
                              :name (c3-9 / name
                                          :op1 "Center")))
      :snt3 (c3-5 / happy-01
                  :ARG1 (c3-3 / holiday
                              :beneficiary (c3-10 / and
                                                  :op1 (c3-19 / you)
                                                  :op2 (c3-18 / family)))))

# ::snt step remind everyone just because the tangos are Isis this isn't Islamic.
# ::tokens ["step", "remind", "everyone", "just", "because", "the", "tangos", "are", "Isis", "this", "is", "n't", "Islamic", "."]
# ::lemmas ["step", "remind", "everyone", "just", "because", "the", "tangos", "be", "Isis", "this", "be", "not", "Islamic", "."]
(c4-6 / remind-01
      :ARG1 (c4-7 / cause-01
                  :ARG0 (c4-9 / tango
                              :domain (c4-3 / religious-group
                                            :name (c4-4 / name
                                                        :op1 "Isis")))
                  :ARG1 (c4-2 / religious-group
                              :name (c4-5 / name
                                          :op1 "Islam")
                              :domain (c4-8 / this)
                              :polarity -)
                  :mod (c4-0 / just))
      :ARG2 (c4-1 / everyone))

# ::snt nd step: tell the hostage takers exactly what they wont do to stop them
# ::tokens ["nd", "step", ":", "tell", "the", "hostage", "takers", "exactly", "what", "they", "wo", "nt", "do", "to", "stop", "them"]
# ::lemmas ["nd", "step", ":", "tell", "the", "hostage", "taker", "exactly", "what", "they", "will", "not", "do", "to", "stop", "they"]
(c5-8 / step-01
      :ARG2 (c5-9 / tell-01
                  :ARG1 (c5-7 / thing
                              :ARG1-of (c5-6 / do-02
                                             :ARG0 (c5-5 / person
                                                         :ARG0-of (c5-4 / take-01
                                                                        :ARG1 (c5-0 / hostage)))
                                             :purpose (c5-2 / stop-01
                                                            :ARG0 c5-5
                                                            :ARG1 c5-5)
                                             :polarity -)
                              :mod (c5-3 / exact))
                  :ARG2 c5-5)
      :ord (c5-1 / ordinal-entity
                 :value 2))

# ::snt yes I think the new handbook dictates warm coco and a foot rub we need project compassion and build rapport
# ::tokens ["yes", "I", "think", "the", "new", "handbook", "dictates", "warm", "coco", "and", "a", "foot", "rub", "we", "need", "project", "compassion", "and", "build", "rapport"]
# ::lemmas ["yes", "i", "think", "the", "new", "handbook", "dictate", "warm", "coco", "and", "a", "foot", "rub", "we", "need", "project", "compassion", "and", "build", "rapport"]
(c6-10 / think-01
       :ARG0 (c6-3 / i)
       :ARG1 (c6-7 / dictate-01
                   :ARG0 (c6-0 / handbook
                               :ARG1-of (c6-4 / new-01))
                   :ARG1 (c6-5 / need-01
                               :ARG0 (c6-1 / we)
                               :ARG1 (c6-11 / and
                                            :op1 (c6-8 / compassion
                                                       :mod (c6-6 / project))
                                            :op2 (c6-2 / build-02
                                                       :ARG0 c6-1
                                                       :ARG1 (c6-9 / rapport))))))

# ::snt wrong...ignore it and eventually it'll go away.
# ::tokens ["wrong", "...", "ignore", "it", "and", "eventually", "it", "'ll", "go", "away", "."]
# ::lemmas ["wrong", "...", "ignore", "it", "and", "eventually", "it", "'ll", "go", "away", "."]
(c7-3 / multi-sentence
      :snt1 (c7-0 / wrong-02)
      :snt2 (c7-9 / and
                  :op1 (c7-6 / ignore-01
                             :ARG0 (c7-1 / you)
                             :ARG1 (c7-7 / it)
                             :mode imperative)
                  :op2 (c7-8 / go-01
                             :ARG1 (c7-2 / it)
                             :direction (c7-5 / away)
                             :time (c7-4 / eventual))))

# ::snt And certainly don't use a gun to defend yourself.
# ::tokens ["And", "certainly", "do", "n't", "use", "a", "gun", "to", "defend", "yourself", "."]
# ::lemmas ["and", "certainly", "do", "not", "use", "a", "gun", "to", "defend", "yourself", "."]
(c8-5 / and
      :op2 (c8-1 / use-01
                 :ARG0 (c8-0 / you)
                 :ARG1 (c8-4 / gun)
                 :ARG2 (c8-2 / defend-01
                             :ARG0 c8-0
                             :ARG1 c8-0)
                 :mod (c8-3 / certain)
                 :polarity -))

# ::snt first try to find out what we did to make them feel so mad &amp; aggrieved that they feel the need to take hostages.
# ::tokens ["first", "try", "to", "find", "out", "what", "we", "did", "to", "make", "them", "feel", "so", "mad", "&", "amp", ";", "aggrieved", "that", "they", "feel", "the", "need", "to", "take", "hostages", "."]
# ::lemmas ["first", "try", "to", "find", "out", "what", "we", "do", "to", "make", "they", "feel", "so", "mad", "&", "amp", ";", "aggrieve", "that", "they", "feel", "the", "need", "to", "take", "hostage", "."]
(c9-3 / and
      :op1 (c9-19 / try-01
                  :ARG0 (c9-12 / i)
                  :ARG1 (c9-5 / find-out-03
                              :ARG0 c9-12
                              :ARG1 (c9-17 / thing
                                           :ARG1-of (c9-1 / do-02
                                                          :ARG0 (c9-9 / we)
                                                          :purpose (c9-0 / make-02
                                                                         :ARG0 c9-9
                                                                         :ARG1 (c9-16 / feel-01
                                                                                      :ARG0 (c9-13 / they)
                                                                                      :ARG1 (c9-11 / and
                                                                                                   :op1 (c9-8 / mad-04
                                                                                                              :ARG1 c9-13
                                                                                                              :degree (c9-2 / so))
                                                                                                   :op2 (c9-7 / amp))))))
                              :ord (c9-14 / ordinal-entity
                                          :value 1)))
      :op2 (c9-18 / aggrieve-01
                  :ARG0 (c9-10 / feel-01
                               :ARG0 c9-13
                               :ARG1 (c9-6 / need-01
                                           :ARG0 c9-13
                                           :ARG1 (c9-15 / take-01
                                                        :ARG0 c9-13
                                                        :ARG1 (c9-4 / hostage))))
                  :ARG1 c9-13))

# ::snt This political climate has got to really piss you off
# ::tokens ["This", "political", "climate", "has", "got", "to", "really", "piss", "you", "off"]
# ::lemmas ["this", "political", "climate", "have", "get", "to", "really", "piss", "you", "off"]
(c10-1 / obligate-01
       :ARG2 (c10-2 / piss-off-02
                    :ARG0 (c10-4 / climate
                                 :mod (c10-6 / politics)
                                 :mod (c10-5 / this))
                    :ARG1 (c10-0 / you)
                    :ARG1-of (c10-3 / real-04)))

# ::snt bring in "encounter group force" to dialog on root causes.
# ::tokens ["bring", "in", "\"", "encounter", "group", "force", "\"", "to", "dialog", "on", "root", "causes", "."]
# ::lemmas ["bring", "in", "\"", "encounter", "group", "force", "\"", "to", "dialog", "on", "root", "cause", "."]
(c11-1 / bring-01
       :ARG1 (c11-0 / force-04
                    :ARG2 (c11-5 / group)
                    :ARG0-of (c11-2 / encounter-01))
       :ARG2 (c11-3 / dialogue-01
                    :ARG1 (c11-4 / cause
                                 :mod (c11-6 / root))))

# ::snt Sit down for a chocolate ot two.
# ::tokens ["Sit", "down", "for", "a", "chocolate", "ot", "two", "."]
# ::lemmas ["sit", "down", "for", "a", "chocolate", "ot", "two", "."]
(c12-4 / say-01
       :ARG1 (c12-2 / sit-down-02
                    :ARG1 (c12-0 / you)
                    :ARG2 (c12-3 / chocolate)
                    :mod (c12-1 / ot
                                :op1 2)
                    :mode imperative)
       :ARG2 c12-0)

# ::snt step - apologize to them
# ::tokens ["step", "-", "apologize", "to", "them"]
# ::lemmas ["step", "-", "apologize", "to", "they"]
(c13-4 / and
       :op1 (c13-2 / step-01)
       :op2 (c13-0 / apologize-01
                   :ARG0 (c13-1 / i)
                   :ARG2 (c13-3 / they)))

# ::snt and then ask really nicely for their cooperation. Maybe please's in the sentence to show our sincerity
# ::tokens ["and", "then", "ask", "really", "nicely", "for", "their", "cooperation", ".", "Maybe", "please", "'s", "in", "the", "sentence", "to", "show", "our", "sincerity"]
# ::lemmas ["and", "then", "ask", "really", "nicely", "for", "their", "cooperation", ".", "maybe", "please", "be", "in", "the", "sentence", "to", "show", "our", "sincerity"]
(c14-2 / multi-sentence
       :snt1 (c14-15 / and
                     :op2 (c14-5 / ask-02
                                 :ARG0 (c14-0 / we)
                                 :ARG1 (c14-10 / cooperate-01
                                               :ARG0 (c14-13 / they
                                                             :ARG2-of c14-5))
                                 :ARG1-of (c14-7 / nice-01
                                                 :degree (c14-9 / really))
                                 :time (c14-11 / then)))
       :snt2 (c14-8 / possible-01
                    :ARG1 (c14-3 / be-located-at-91
                                 :ARG1 (c14-14 / please-01)
                                 :ARG2 (c14-12 / sentence)
                                 :purpose (c14-4 / show-01
                                                 :ARG0 (c14-6 / we)
                                                 :ARG1 (c14-1 / sincerity
                                                              :poss c14-6)))))

# ::snt make em some coco and have a nice chat... is a fucking cunt...
# ::tokens ["make", "em", "some", "coco", "and", "have", "a", "nice", "chat", "...", "is", "a", "fucking", "cunt", "..."]
# ::lemmas ["make", "em", "some", "coco", "and", "have", "a", "nice", "chat", "...", "be", "a", "fucking", "cunt", "..."]
(c15-9 / and
       :op1 (c15-2 / make-01
                   :ARG0 (c15-0 / you)
                   :ARG1 (c15-5 / coco
                                :mod (c15-7 / some))
                   :ARG2 (c15-8 / they)
                   :mode imperative)
       :op2 (c15-4 / chat-01
                   :ARG0 c15-0
                   :ARG1-of (c15-3 / nice-01)
                   :mode imperative)
       :domain (c15-6 / cunt
                      :mod (c15-1 / fucking
                                  :mode expressive)))

# ::snt wait I thought was to blame on any YouTube video
# ::tokens ["wait", "I", "thought", "was", "to", "blame", "on", "any", "YouTube", "video"]
# ::lemmas ["wait", "i", "think", "be", "to", "blame", "on", "any", "YouTube", "video"]
(c16-0 / wait-01
       :ARG1 (c16-2 / i)
       :ARG2 (c16-1 / blame-01
                    :ARG1 (c16-4 / video
                                 :medium (c16-5 / publication
                                                :name (c16-3 / name
                                                             :op1 "YouTube"))
                                 :mod (c16-7 / any))
                    :ARG1-of (c16-6 / think-01
                                    :ARG0 c16-2)))

# ::snt LOL, that is good. Not actually funny, but you are so right about their stupidity.
# ::tokens ["LOL", ",", "that", "is", "good", ".", "Not", "actually", "funny", ",", "but", "you", "are", "so", "right", "about", "their", "stupidity", "."]
# ::lemmas ["LOL", ",", "that", "be", "good", ".", "not", "actually", "funny", ",", "but", "you", "be", "so", "right", "about", "their", "stupidity", "."]
(c17-2 / multi-sentence
       :snt1 (c17-6 / good-02
                    :ARG1 (c17-10 / that)
                    :mod (c17-1 / laugh-01
                                :manner (c17-7 / loud)
                                :mode expressive))
       :snt2 (c17-3 / funny-02
                    :ARG1-of (c17-11 / actual-02)
                    :concession-of (c17-5 / right-06
                                          :ARG1 (c17-0 / you)
                                          :ARG2 (c17-8 / stupidity
                                                       :poss (c17-9 / they))
                                          :degree (c17-4 / so))
                    :polarity -))

# ::snt Come on - sing along "All we are saying is - give idiocy a chance". It's ridiculous Mike.
# ::tokens ["Come", "on", "-", "sing", "along", "\"", "All", "we", "are", "saying", "is", "-", "give", "idiocy", "a", "chance", "\"", ".", "It", "'s", "ridiculous", "Mike", "."]
# ::lemmas ["come", "on", "-", "sing", "along", "\"", "all", "we", "be", "say", "be", "-", "give", "idiocy", "a", "chance", "\"", ".", "it", "be", "ridiculous", "Mike", "."]
(c18-2 / multi-sentence
       :snt1 (c18-8 / come-on-25
                    :ARG1 (c18-6 / person
                                 :name (c18-5 / name
                                              :op1 "Mike"))
                    :mode imperative)
       :snt2 (c18-12 / sing-along-00
                     :ARG0 (c18-0 / you)
                     :ARG1 (c18-3 / say-01
                                  :ARG0 (c18-1 / we)
                                  :ARG1 (c18-9 / give-01
                                               :ARG1 (c18-4 / idiocy)
                                               :ARG2 (c18-7 / chance-02))
                                  :mod (c18-14 / all))
                     :mode imperative)
       :snt3 (c18-10 / ridiculous-02
                     :ARG1 (c18-11 / it)
                     :ARG2 (c18-13 / person
                                   :name c18-5
                                   :op1 "Mike")))
