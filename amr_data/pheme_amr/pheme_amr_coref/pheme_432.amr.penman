# ::snt That doesn't sound normal.
# ::tokens ["That", "does", "n't", "sound", "normal", "."]
# ::lemmas ["that", "do", "not", "sound", "normal", "."]
(c1-0 / sound-01
      :ARG1 (c1-2 / that)
      :ARG2 (c1-1 / normal-02)
      :polarity -)

# ::snt French officials say one of the alleged gunman left ID in getaway car after attack perfect via
# ::tokens ["French", "officials", "say", "one", "of", "the", "alleged", "gunman", "left", "ID", "in", "getaway", "car", "after", "attack", "perfect", "via"]
# ::lemmas ["French", "official", "say", "one", "of", "the", "allege", "gunman", "leave", "ID", "in", "getaway", "car", "after", "attack", "perfect", "via"]
(c2-14 / say-01
       :ARG0 (c2-8 / person
                   :ARG0-of (c2-0 / have-org-role-91
                                  :ARG1 (c2-10 / country
                                               :name (c2-6 / name
                                                           :op1 "France"))
                                  :ARG2 (c2-3 / official)))
       :ARG1 (c2-1 / leave-15
                   :ARG0 (c2-16 / person
                                :ARG1-of (c2-5 / include-91
                                               :ARG2 (c2-11 / gunman
                                                            :ARG2-of (c2-17 / allege-01)))
                                :quant 1)
                   :ARG1 (c2-9 / document-01
                               :ARG1 (c2-12 / identity))
                   :location (c2-13 / car
                                    :ARG1-of (c2-15 / get-away-08))
                   :time (c2-4 / after
                               :op1 (c2-7 / attack-01))
                   :manner (c2-2 / perfect-02)))

# ::snt yeah; course he did.
# ::tokens ["yeah", ";", "course", "he", "did", "."]
# ::lemmas ["yeah", ";", "course", "he", "do", "."]
(c3-2 / do-02
      :ARG0 (c3-0 / he)
      :mod (c3-3 / of-course)
      :mod (c3-1 / yeah
                 :mode expressive))

# ::snt Not as organized as we thought.
# ::tokens ["Not", "as", "organized", "as", "we", "thought", "."]
# ::lemmas ["not", "as", "organize", "as", "we", "think", "."]
(c4-0 / have-degree-91
      :ARG2 (c4-2 / organize-01)
      :ARG3 (c4-3 / equal)
      :ARG4 (c4-4 / think-01
                  :ARG0 (c4-1 / we))
      :polarity -)

# ::snt set up?
# ::tokens ["set", "up", "?"]
# ::lemmas ["set", "up", "?"]
(c5-0 / set-up-03
      :polarity (c5-1 / amr-unknown))

# ::snt like Dorner's wallet survived the fire?
# ::tokens ["like", "Dorner", "'s", "wallet", "survived", "the", "fire", "?"]
# ::lemmas ["like", "Dorner", "'s", "wallet", "survive", "the", "fire", "?"]
(c6-4 / resemble-01
      :polarity (c6-6 / amr-unknown)
      :ARG2 (c6-5 / survive-01
                  :ARG0 (c6-0 / wallet
                              :poss (c6-3 / person
                                          :name (c6-2 / name
                                                      :op1 "Dorner")))
                  :ARG1 (c6-1 / fire)))

# ::snt yeah I know right.
# ::tokens ["yeah", "I", "know", "right", "."]
# ::lemmas ["yeah", "i", "know", "right", "."]
(c7-2 / know-01
      :ARG0 (c7-3 / i)
      :ARG1-of (c7-1 / right-06)
      :mod (c7-0 / yeah
                 :mode expressive))

# ::snt ikiz kule saldrlarnda da pilot pasaportunu drmt...ayn kapya kyor
# ::tokens ["ikiz", "kule", "saldrlarnda", "da", "pilot", "pasaportunu", "drmt", "...", "ayn", "kapya", "kyor"]
# ::lemmas ["ikiz", "kule", "saldrlarnda", "da", "pilot", "pasaportunu", "drmt", "...", "ayn", "kapya", "kyor"]
(c8-11 / and
       :op1 (c8-7 / person
                  :name (c8-5 / name
                              :op1 "ikiz"
                              :op2 "kule"))
       :op2 (c8-10 / person
                   :name (c8-6 / name
                               :op1 "Saldrlarnda"))
       :op3 (c8-0 / person
                  :ARG0-of (c8-9 / pilot-01))
       :op4 (c8-1 / ortunu
                  :mod (c8-2 / person
                             :name (c8-8 / name
                                         :op1 "Drmt")))
       :op5 (c8-4 / kapya
                  :mod (c8-3 / kyor)))

# ::snt So convenient... Has happened too often since /11
# ::tokens ["So", "convenient", "...", "Has", "happened", "too", "often", "since", "/11"]
# ::lemmas ["so", "convenient", "...", "have", "happen", "too", "often", "since", "/11"]
(c9-5 / convenient
      :domain (c9-2 / event)
      :ARG1-of (c9-0 / have-degree-91
                     :ARG2 (c9-1 / often)
                     :ARG3 (c9-7 / too))
      :time (c9-6 / since
                  :op1 (c9-3 / incident
                             :name (c9-4 / name
                                         :op1 "9/11"))))

# ::snt : French officials say one of the alleged gunman left ID in getaway car after attack
# ::tokens [":", "French", "officials", "say", "one", "of", "the", "alleged", "gunman", "left", "ID", "in", "getaway", "car", "after", "attack"]
# ::lemmas [":", "French", "official", "say", "one", "of", "the", "allege", "gunman", "leave", "ID", "in", "getaway", "car", "after", "attack"]
(c10-13 / say-01
        :ARG0 (c10-7 / person
                     :ARG0-of (c10-0 / have-org-role-91
                                     :ARG1 (c10-9 / country
                                                  :name (c10-5 / name
                                                               :op1 "France"))
                                     :ARG2 (c10-2 / official)))
        :ARG1 (c10-1 / leave-11
                     :ARG0 (c10-15 / person
                                   :ARG1-of (c10-4 / include-91
                                                   :ARG2 (c10-10 / gunman
                                                                 :ARG1-of (c10-16 / allege-01)))
                                   :quant 1)
                     :ARG1 (c10-8 / document-01
                                  :ARG1 (c10-11 / identity))
                     :location (c10-12 / car
                                       :ARG4-of (c10-14 / get-away-08))
                     :time (c10-3 / after
                                  :op1 (c10-6 / attack-01
                                              :ARG1 c10-15))))

# ::snt Where is the critisism? It sounds weird to leave an ID behind. And somehow the suspects have been identified even they have used masks.
# ::tokens ["Where", "is", "the", "critisism", "?", "It", "sounds", "weird", "to", "leave", "an", "ID", "behind", ".", "And", "somehow", "the", "suspects", "have", "been", "identified", "even", "they", "have", "used", "masks", "."]
# ::lemmas ["where", "be", "the", "critisism", "?", "it", "sound", "weird", "to", "leave", "an", "ID", "behind", ".", "and", "somehow", "the", "suspect", "have", "be", "identify", "even", "they", "have", "use", "mask", "."]
(c11-2 / multi-sentence
       :snt1 (c11-12 / critisism
                     :location (c11-16 / amr-unknown))
       :snt2 (c11-15 / sound-01
                     :ARG1 (c11-1 / leave-12
                                  :ARG1 (c11-11 / document-01
                                                :ARG1 (c11-9 / identity))
                                  :ARG2 (c11-5 / behind))
                     :ARG2 (c11-0 / weird))
       :snt3 (c11-8 / and
                    :op2 (c11-13 / identify-01
                                 :ARG1 (c11-10 / person
                                               :ARG2-of (c11-6 / suspect-01))
                                 :manner (c11-3 / somehow))
                    :op3 (c11-4 / use-01
                                :ARG0 c11-10
                                :ARG1 (c11-14 / mask)
                                :mod (c11-7 / even))))

# ::snt would they be stupid to firstly carry their own id &amp; secondly leave it behind To distract
# ::tokens ["would", "they", "be", "stupid", "to", "firstly", "carry", "their", "own", "i", "d", "&", "amp", ";", "secondly", "leave", "it", "behind", "To", "distract"]
# ::lemmas ["would", "they", "be", "stupid", "to", "firstly", "carry", "their", "own", "i", "d", "&", "amp", ";", "secondly", "leave", "it", "behind", "to", "distract"]
(c12-7 / stupid
       :domain (c12-8 / they)
       :condition (c12-9 / and
                         :op1 (c12-5 / carry-01
                                     :ARG0 c12-8
                                     :ARG1 (c12-6 / thing
                                                  :name (c12-3 / name
                                                               :op1 "ID&amp")
                                                  :poss c12-8)
                                     :li 1)
                         :op2 (c12-0 / leave-behind-18
                                     :ARG0 c12-8
                                     :ARG1 (c12-2 / it)
                                     :purpose (c12-4 / distract-01
                                                     :ARG0 c12-2)
                                     :li 2))
       :polarity (c12-1 / amr-unknown))

# ::snt Dumb Criminals
# ::tokens ["Dumb", "Criminals"]
# ::lemmas ["Dumb", "criminal"]
(c13-0 / person
       :ARG2-of (c13-2 / criminal-03)
       :mod (c13-1 / dumb))

# ::snt : French officials say one of the alleged gunman left ID in getaway car after attack convenient
# ::tokens [":", "French", "officials", "say", "one", "of", "the", "alleged", "gunman", "left", "ID", "in", "getaway", "car", "after", "attack", "convenient"]
# ::lemmas [":", "French", "official", "say", "one", "of", "the", "allege", "gunman", "leave", "ID", "in", "getaway", "car", "after", "attack", "convenient"]
(c14-13 / say-01
        :ARG0 (c14-7 / person
                     :ARG0-of (c14-0 / have-org-role-91
                                     :ARG1 (c14-9 / country
                                                  :name (c14-5 / name
                                                               :op1 "France"))
                                     :ARG2 (c14-2 / official)))
        :ARG1 (c14-1 / leave-11
                     :ARG0 (c14-16 / person
                                   :ARG1-of (c14-4 / include-91
                                                   :ARG2 (c14-10 / gunman
                                                                 :ARG1-of (c14-17 / allege-01)))
                                   :quant 1)
                     :ARG1 (c14-8 / document-01
                                  :ARG1 (c14-11 / identity))
                     :location (c14-12 / car
                                       :ARG4-of (c14-14 / get-away-08))
                     :time (c14-3 / after
                                  :op1 (c14-6 / attack-01))
                     :mod (c14-15 / convenient)))

# ::snt Terrorist "masterminds" RT officials say one of alleged gunman left ID in getaway car after attack
# ::tokens ["Terrorist", "\"", "masterminds", "\"", "RT", "officials", "say", "one", "of", "alleged", "gunman", "left", "ID", "in", "getaway", "car", "after", "attack"]
# ::lemmas ["terrorist", "\"", "mastermind", "\"", "RT", "official", "say", "one", "of", "allege", "gunman", "leave", "ID", "in", "getaway", "car", "after", "attack"]
(c15-4 / say-01
       :ARG0 (c15-1 / person
                    :ARG0-of (c15-7 / have-org-role-91
                                    :ARG1 (c15-5 / publication
                                                 :name (c15-10 / name
                                                               :op1 "RT"))
                                    :ARG2 (c15-16 / official)
                                    :ARG0 c15-1)
                    :ARG1 c15-5
                    :ARG3 (c15-0 / masterminds
                                 :mod (c15-18 / terrorist)))
       :ARG1 (c15-8 / leave-11
                    :ARG0 (c15-9 / person
                                 :ARG1-of (c15-14 / include-91
                                                  :ARG2 (c15-12 / gunman
                                                                :ARG1-of (c15-6 / allege-01)))
                                 :quant 1)
                    :ARG1 (c15-2 / document-01
                                 :ARG1 (c15-15 / identity))
                    :location (c15-17 / car
                                      :ARG1-of (c15-3 / get-away-08))
                    :time (c15-13 / after
                                  :op1 (c15-11 / attack-01))))

# ::snt BWAHAHAHAHAHA
# ::tokens ["BWAHAHAHAHAHA"]
# ::lemmas ["BWAHAHAHAHAHA"]
(c16-0 / bwahaha
       :mode expressive)

# ::snt Who carries ID when going on a murderous callous rampage
# ::tokens ["Who", "carries", "ID", "when", "going", "on", "a", "murderous", "callous", "rampage"]
# ::lemmas ["who", "carry", "ID", "when", "go", "on", "a", "murderous", "callous", "rampage"]
(c17-4 / carry-01
       :ARG0 (c17-6 / amr-unknown)
       :ARG1 (c17-3 / document-01
                    :ARG1 (c17-1 / identity))
       :time (c17-2 / rampage-01
                    :ARG0 c17-6
                    :mod (c17-5 / callous)
                    :ARG0-of (c17-0 / murder-01)))

# ::snt What a dumbasss!
# ::tokens ["What", "a", "dumbasss", "!"]
# ::lemmas ["what", "a", "dumbasss", "!"]
(c18-1 / dumbass
       :degree (c18-0 / so))

# ::snt /11 in france? again within hours was found all terrorists... bullshit
# ::tokens ["/11", "in", "france", "?", "again", "within", "hours", "was", "found", "all", "terrorists", "...", "bullshit"]
# ::lemmas ["/11", "in", "france", "?", "again", "within", "hours", "be", "find", "all", "terrorist", "...", "bullshit"]
(c19-2 / multi-sentence
       :snt1 (c19-1 / find-01
                    :polarity (c19-12 / amr-unknown)
                    :ARG1 (c19-11 / terrorist
                                  :mod (c19-4 / all))
                    :location (c19-8 / country
                                     :name (c19-5 / name
                                                  :op1 "France"))
                    :mod (c19-6 / again)
                    :time (c19-10 / after
                                  :quant (c19-7 / multiple
                                                :op1 (c19-9 / temporal-quantity
                                                            :unit (c19-0 / hour)
                                                            :quant 1))))
       :snt2 (c19-3 / bullshit-01))

# ::snt look for the only people in Paris who are not crying.
# ::tokens ["look", "for", "the", "only", "people", "in", "Paris", "who", "are", "not", "crying", "."]
# ::lemmas ["look", "for", "the", "only", "people", "in", "Paris", "who", "be", "not", "cry", "."]
(c20-1 / look-01
       :ARG0 (c20-0 / you)
       :ARG1 (c20-4 / person
                    :mod (c20-2 / only)
                    :location (c20-6 / city
                                     :name (c20-3 / name
                                                  :op1 "Paris"))
                    :ARG0-of (c20-5 / cry-02
                                    :polarity -))
       :mode imperative)
