# ::snt | We demand the Congress of the USA pass the "Mike Brown Law" to set strict nationwide standards for police conduct.
# ::tokens ["|", "We", "demand", "the", "Congress", "of", "the", "USA", "pass", "the", "\"", "Mike", "Brown", "Law", "\"", "to", "set", "strict", "nationwide", "standards", "for", "police", "conduct", "."]
# ::lemmas ["|", "we", "demand", "the", "Congress", "of", "the", "USA", "pass", "the", "\"", "Mike", "Brown", "Law", "\"", "to", "set", "strict", "nationwide", "standard", "for", "police", "conduct", "."]
(c1-7 / demand-01
      :ARG0 (c1-0 / we)
      :ARG1 (c1-6 / pass-01
                  :ARG0 (c1-9 / government-organization
                              :name (c1-4 / name
                                          :op1 "Congress")
                              :mod (c1-8 / country
                                         :name (c1-5 / name
                                                     :op1 "USA")))
                  :ARG1 (c1-1 / law
                              :name (c1-10 / name
                                           :op1 "Mike"
                                           :op2 "Brown"
                                           :op3 "Law"))
                  :purpose (c1-12 / set-02
                                  :ARG0 c1-1
                                  :ARG1 (c1-3 / standard
                                              :mod (c1-2 / strict)
                                              :mod (c1-11 / nationwide)
                                              :topic (c1-13 / conduct-02
                                                            :ARG0 (c1-14 / police))))))

# ::snt They were suspended not too long ago. So....
# ::tokens ["They", "were", "suspended", "not", "too", "long", "ago", ".", "So", "...."]
# ::lemmas ["they", "be", "suspend", "not", "too", "long", "ago", ".", "so", "...."]
(c2-2 / multi-sentence
      :snt1 (c2-7 / suspend-01
                  :ARG1 (c2-8 / they)
                  :time (c2-3 / before
                              :op1 (c2-5 / now)
                              :quant (c2-1 / long-03
                                           :ARG2-of (c2-0 / have-degree-91
                                                          :ARG1 c2-3
                                                          :ARG3 (c2-6 / too)
                                                          :polarity -))))
      :snt2 (c2-4 / infer-01))

# ::snt Didn't u hear? Cops said the teen earned his bullets by resisting arrest. Obvious
# ::tokens ["Did", "n't", "u", "hear", "?", "Cops", "said", "the", "teen", "earned", "his", "bullets", "by", "resisting", "arrest", ".", "Obvious"]
# ::lemmas ["do", "not", "u", "hear", "?", "cop", "say", "the", "teen", "earn", "his", "bullet", "by", "resist", "arrest", ".", "obvious"]
(c3-2 / multi-sentence
      :snt1 (c3-0 / hear-01
                  :ARG0 (c3-1 / you)
                  :polarity (c3-11 / amr-unknown)
                  :polarity -)
      :snt2 (c3-9 / say-01
                  :ARG0 (c3-8 / cop)
                  :ARG1 (c3-5 / earn-01
                              :ARG0 (c3-10 / teen)
                              :ARG1 (c3-3 / bullet
                                          :poss c3-10)
                              :ARG3 (c3-7 / resist-01
                                          :ARG0 c3-10
                                          :ARG1 (c3-6 / arrest-01
                                                      :ARG1 c3-10))))
      :snt3 (c3-4 / Obvious))

# ::snt All the murders of all races by cops this year...why this one getting so much attention?
# ::tokens ["All", "the", "murders", "of", "all", "races", "by", "cops", "this", "year", "...", "why", "this", "one", "getting", "so", "much", "attention", "?"]
# ::lemmas ["all", "the", "murder", "of", "all", "race", "by", "cop", "this", "year", "...", "why", "this", "one", "get", "so", "much", "attention", "?"]
(c4-15 / and
       :op1 (c4-2 / murder-01
                  :ARG0 (c4-9 / cop)
                  :ARG1 (c4-8 / race
                              :mod (c4-5 / all))
                  :time (c4-1 / year
                              :mod (c4-14 / this))
                  :mod (c4-6 / all))
       :op2 (c4-10 / get-01
                   :ARG0 (c4-3 / one
                               :mod c4-14))
       :ARG1 (c4-13 / attend-02
                    :ARG1 c4-3
                    :ARG1-of (c4-0 / have-quant-91
                                   :ARG2 (c4-7 / much)
                                   :ARG3 (c4-12 / so)))
       :ARG1-of (c4-11 / cause-01
                       :ARG0 (c4-4 / amr-unknown)))

# ::snt &lt;~~~~~~~~~ same here.
# ::tokens ["&", "lt;~~~~~~~~~", "same", "here", "."]
# ::lemmas ["&", "lt;~~~~~~~~~", "same", "here", "."]
(c5-0 / same-01
      :location (c5-1 / here))

# ::snt What Anonymous Is Capable Of
# ::tokens ["What", "Anonymous", "Is", "Capable", "Of"]
# ::lemmas ["what", "Anonymous", "be", "capable", "of"]
(c6-1 / possible-01
      :ARG1 (c6-2 / Capable-01
                  :ARG1 (c6-3 / thing
                              :domain (c6-4 / person
                                            :name (c6-0 / name
                                                        :op1 "Anonymous")))))

# ::snt People will ask "how?" May I suggest taking away cops pistols, rifles, shotguns, attack dogs, tracked vehicles.
# ::tokens ["People", "will", "ask", "\"", "how", "?", "\"", "May", "I", "suggest", "taking", "away", "cops", "pistols", ",", "rifles", ",", "shotguns", ",", "attack", "dogs", ",", "tracked", "vehicles", "."]
# ::lemmas ["people", "will", "ask", "\"", "how", "?", "\"", "may", "i", "suggest", "take", "away", "cop", "pistol", ",", "rifle", ",", "shotgun", ",", "attack", "dog", ",", "track", "vehicle", "."]
(c7-15 / ask-01
       :ARG0 (c7-5 / person)
       :ARG1 (c7-2 / amr-unknown)
       :ARG2 (c7-11 / suggest-01
                    :ARG0 (c7-3 / i)
                    :ARG1 (c7-13 / take-away-05
                                 :ARG1 (c7-4 / and
                                             :op1 (c7-14 / pistol)
                                             :op2 (c7-6 / rifle)
                                             :op3 (c7-1 / shotgun)
                                             :op4 (c7-7 / dog
                                                        :ARG0-of (c7-12 / attack-01))
                                             :op5 (c7-8 / vehicle
                                                        :ARG1-of (c7-10 / track-01))
                                             :poss (c7-9 / cop)))
                    :polarity (c7-0 / amr-unknown)))

# ::snt &lt;~ I'm blocked and not sure why
# ::tokens ["&", "lt;~", "I", "'m", "blocked", "and", "not", "sure", "why"]
# ::lemmas ["&", "lt;~", "i", "be", "block", "and", "not", "sure", "why"]
(c8-5 / and
      :op1 (c8-0 / block-01
                 :ARG1 (c8-1 / i))
      :op2 (c8-3 / sure-02
                 :ARG0 c8-1
                 :ARG1 (c8-4 / thing
                             :ARG0-of (c8-2 / cause-01
                                            :ARG1 c8-0))
                 :polarity -))

# ::snt Damn right!
# ::tokens ["Damn", "right", "!"]
# ::lemmas ["damn", "right", "!"]
(c9-1 / right-06
      :mod (c9-0 / damn)
      :mode expressive)

# ::snt at the police academies training has shifted; cops are now being taught to shoot to kill, &amp; empty their magazines
# ::tokens ["at", "the", "police", "academies", "training", "has", "shifted", ";", "cops", "are", "now", "being", "taught", "to", "shoot", "to", "kill", ",", "&", "amp", ";", "empty", "their", "magazines"]
# ::lemmas ["at", "the", "police", "academy", "training", "have", "shift", ";", "cop", "be", "now", "be", "teach", "to", "shoot", "to", "kill", ",", "&", "amp", ";", "empty", "their", "magazine"]
(c10-13 / and
        :op1 (c10-10 / shift-01
                     :ARG1 (c10-12 / train-01
                                   :ARG2 (c10-3 / academy
                                                :mod (c10-7 / police))))
        :op2 (c10-9 / teach-01
                    :ARG1 (c10-6 / and
                                 :op1 (c10-1 / shoot-02
                                             :ARG0 (c10-8 / cop)
                                             :purpose (c10-4 / kill-01
                                                             :ARG0 c10-8))
                                 :op2 (c10-11 / amp))
                    :ARG2 c10-8
                    :time (c10-5 / now))
        :op3 (c10-2 / empty-01
                    :ARG0 c10-8
                    :ARG1 (c10-0 / magazine
                                 :poss c10-8)))

# ::snt  Not sure what the message to is going to be exactly but you can count on one.Support
# ::tokens [" ", "Not", "sure", "what", "the", "message", "to", "is", "going", "to", "be", "exactly", "but", "you", "can", "count", "on", "one", ".", "Support"]
# ::lemmas [" ", "not", "sure", "what", "the", "message", "to", "be", "go", "to", "be", "exactly", "but", "you", "can", "count", "on", "one", ".", "support"]
(c13-7 / contrast-01
       :ARG1 (c13-8 / sure-02
                    :ARG0 (c13-4 / i)
                    :ARG1 (c13-1 / message-01
                                 :ARG2 (c13-3 / exact))
                    :polarity -)
       :ARG2 (c13-5 / possible-01
                    :ARG1 (c13-6 / count-03
                                 :ARG0 (c13-0 / you)
                                 :ARG1 (c13-2 / one))))

# ::snt Yes, you can definitely count on one.
# ::tokens ["Yes", ",", "you", "can", "definitely", "count", "on", "one", "."]
# ::lemmas ["yes", ",", "you", "can", "definitely", "count", "on", "one", "."]
(c14-2 / possible-01
       :ARG1 (c14-4 / count-03
                    :ARG0 (c14-0 / you)
                    :ARG1 (c14-1 / one)
                    :mod (c14-3 / definite)))

# ::snt me too
# ::tokens ["me", "too"]
# ::lemmas ["i", "too"]
(c15-1 / i
       :mod (c15-0 / too))

# ::snt I know what it's going to be. Loud.
# ::tokens ["I", "know", "what", "it", "'s", "going", "to", "be", ".", "Loud", "."]
# ::lemmas ["i", "know", "what", "it", "be", "go", "to", "be", ".", "loud", "."]
(c16-1 / multi-sentence
       :snt1 (c16-3 / know-01
                    :ARG0 (c16-2 / i)
                    :ARG1 (c16-5 / thing
                                 :domain (c16-4 / it)))
       :snt2 (c16-0 / loud))

# ::snt Add the hash. Locals identify as City/County and then by area or city. (Socially by school district.)
# ::tokens ["Add", "the", "hash", ".", "Locals", "identify", "as", "City", "/", "County", "and", "then", "by", "area", "or", "city", ".", "(", "Socially", "by", "school", "district", ".", ")"]
# ::lemmas ["add", "the", "hash", ".", "local", "identify", "as", "City", "/", "County", "and", "then", "by", "area", "or", "city", ".", "(", "socially", "by", "school", "district", ".", ")"]
(c17-1 / multi-sentence
       :snt1 (c17-6 / add-02
                    :ARG0 (c17-14 / you)
                    :ARG1 (c17-7 / hash)
                    :mode imperative)
       :snt2 (c17-10 / and
                     :op1 (c17-11 / identify-01
                                  :ARG0 (c17-2 / person
                                               :ARG1-of c17-11)
                                  :ARG2 (c17-5 / slash
                                               :op1 (c17-17 / city)
                                               :op2 (c17-3 / county)))
                     :op2 (c17-12 / identify-01
                                  :ARG0 c17-2
                                  :ARG1 c17-2
                                  :ARG2 (c17-16 / or
                                                :op1 (c17-9 / area)
                                                :op2 (c17-13 / city))
                                  :time (c17-18 / then)))
       :snt3 (c17-0 / identify-01
                    :ARG0 (c17-4 / district
                                 :mod (c17-8 / school))
                    :ARG1 c17-2
                    :manner (c17-15 / social)))

# ::snt I do know they were taken down awhile ago, so maybe that has something to do with it.
# ::tokens ["I", "do", "know", "they", "were", "taken", "down", "awhile", "ago", ",", "so", "maybe", "that", "has", "something", "to", "do", "with", "it", "."]
# ::lemmas ["i", "do", "know", "they", "be", "take", "down", "awhile", "ago", ",", "so", "maybe", "that", "have", "something", "to", "do", "with", "it", "."]
(c19-3 / know-01
       :ARG0 (c19-2 / i)
       :ARG1 (c19-10 / take-down-27
                     :ARG1 (c19-8 / they)
                     :time (c19-1 / before
                                  :op1 (c19-4 / now)
                                  :quant (c19-11 / awhile)))
       :ARG0-of (c19-6 / cause-01
                       :ARG1 (c19-5 / possible-01
                                    :ARG1 (c19-0 / have-to-do-with-04
                                                 :ARG0 c19-10
                                                 :ARG1 (c19-7 / it)
                                                 :ARG2 (c19-9 / something)))))

# ::snt Amen and amen! Black males are legal citizens of this country and get lit up, lawbr (...)
# ::tokens ["Amen", "and", "amen", "!", "Black", "males", "are", "legal", "citizens", "of", "this", "country", "and", "get", "lit", "up", ",", "lawbr", "(", "...", ")"]
# ::lemmas ["amen", "and", "amen", "!", "black", "male", "be", "legal", "citizen", "of", "this", "country", "and", "get", "light", "up", ",", "lawbr", "(", "...", ")"]
(c20-2 / multi-sentence
       :snt1 (c20-14 / and
                     :op1 (c20-5 / and
                                 :op1 (c20-6 / amen
                                             :op2-of c20-5)))
       :snt2 (c20-12 / and
                     :op1 (c20-9 / citizen
                                 :ARG1-of (c20-1 / legal-02)
                                 :domain (c20-7 / male
                                                :ARG1-of (c20-3 / black-05))
                                 :poss (c20-8 / country
                                              :mod (c20-13 / this)))
                     :op2 (c20-10 / get-03
                                  :ARG1 c20-7
                                  :ARG2 (c20-11 / lit-up-02
                                                :ARG1 c20-7)))
       :snt3 (c20-0 / law
                    :mod (c20-4 / law)))

# ::snt Not sure what the message to is going to be exactly but you can count on one.Support
# ::tokens ["Not", "sure", "what", "the", "message", "to", "is", "going", "to", "be", "exactly", "but", "you", "can", "count", "on", "one", ".", "Support"]
# ::lemmas ["not", "sure", "what", "the", "message", "to", "be", "go", "to", "be", "exactly", "but", "you", "can", "count", "on", "one", ".", "support"]
(c21-7 / contrast-01
       :ARG1 (c21-8 / sure-02
                    :ARG0 (c21-4 / i)
                    :ARG1 (c21-1 / message-01
                                 :ARG2 (c21-3 / exact))
                    :polarity -)
       :ARG2 (c21-5 / possible-01
                    :ARG1 (c21-6 / count-03
                                 :ARG0 (c21-0 / you)
                                 :ARG1 (c21-2 / one))))

# ::snt Done RT Not sure what the message to is going to be exactly but you can count on one. Support
# ::tokens ["Done", "RT", "Not", "sure", "what", "the", "message", "to", "is", "going", "to", "be", "exactly", "but", "you", "can", "count", "on", "one", ".", "Support"]
# ::lemmas ["do", "RT", "not", "sure", "what", "the", "message", "to", "be", "go", "to", "be", "exactly", "but", "you", "can", "count", "on", "one", ".", "support"]
(c22-1 / multi-sentence
       :snt1 (c22-7 / do-02)
       :snt2 (c22-8 / contrast-01
                    :ARG1 (c22-11 / sure-02
                                  :ARG0 (c22-5 / i)
                                  :ARG1 (c22-6 / message-01
                                               :ARG2 (c22-3 / exact))
                                  :polarity -)
                    :ARG2 (c22-9 / possible-01
                                 :ARG1 (c22-10 / count-03
                                               :ARG0 (c22-0 / you)
                                               :ARG1 (c22-2 / one))))
       :snt3 (c22-4 / support-01))

# ::snt You don't even know where to stand, but you promise to make a stand.
# ::tokens ["You", "do", "n't", "even", "know", "where", "to", "stand", ",", "but", "you", "promise", "to", "make", "a", "stand", "."]
# ::lemmas ["you", "do", "not", "even", "know", "where", "to", "stand", ",", "but", "you", "promise", "to", "make", "a", "stand", "."]
(c23-6 / contrast-01
       :ARG1 (c23-8 / know-01
                    :ARG0 (c23-0 / you)
                    :ARG1 (c23-1 / location
                                 :ARG2-of (c23-7 / stand-11
                                                 :ARG0 c23-0))
                    :mod (c23-3 / even)
                    :polarity -)
       :ARG2 (c23-5 / promise-01
                    :ARG0 c23-0
                    :ARG1 (c23-2 / make-01
                                 :ARG0 c23-0
                                 :ARG1 (c23-4 / stand-11
                                              :ARG0 c23-0))))

# ::snt My feelings in an edition towards massacre in &gt;
# ::tokens ["My", "feelings", "in", "an", "edition", "towards", "massacre", "in", "&", "gt", ";"]
# ::lemmas ["my", "feeling", "in", "an", "edition", "towards", "massacre", "in", "&", "gt", ";"]
(c24-0 / feel-01
       :ARG0 (c24-3 / i)
       :location (c24-2 / edition
                        :topic (c24-1 / massacre-01)
                        :ARG1-of (c24-6 / describe-01
                                        :ARG0 (c24-5 / publication
                                                     :name (c24-4 / name
                                                                  :op1 "&gt")))))

# ::snt | The message will be that this has to stop. Not just justice for this teen, but national legislation to STOP this shit.
# ::tokens ["|", "The", "message", "will", "be", "that", "this", "has", "to", "stop", ".", "Not", "just", "justice", "for", "this", "teen", ",", "but", "national", "legislation", "to", "STOP", "this", "shit", "."]
# ::lemmas ["|", "the", "message", "will", "be", "that", "this", "have", "to", "stop", ".", "not", "just", "justice", "for", "this", "teen", ",", "but", "national", "legislation", "to", "stop", "this", "shit", "."]
(c25-2 / multi-sentence
       :snt1 (c25-4 / obligate-01
                    :ARG2 (c25-11 / stop-01
                                  :ARG1 (c25-12 / this)))
       :snt2 (c25-9 / contrast-01
                    :ARG1 (c25-0 / justice
                                 :mod (c25-13 / just
                                              :polarity -)
                                 :beneficiary (c25-10 / teen
                                                      :mod (c25-8 / this)))
                    :ARG2 (c25-1 / legislate-01
                                 :mod (c25-7 / nation)
                                 :ARG0-of (c25-5 / stop-01
                                                 :ARG1 (c25-3 / shit
                                                              :mod (c25-6 / this))))))

# ::snt Absofuckinlutely!
# ::tokens ["Absofuckinlutely", "!"]
# ::lemmas ["absofuckinlutely", "!"]
(c26-0 / Absofuckinlutely
       :mode expressive)

# ::snt that's my home town, I want in.
# ::tokens ["that", "'s", "my", "home", "town", ",", "I", "want", "in", "."]
# ::lemmas ["that", "be", "my", "home", "town", ",", "i", "want", "in", "."]
(c27-5 / and
       :op1 (c27-4 / town
                   :mod (c27-0 / home)
                   :domain (c27-3 / that)
                   :poss (c27-2 / i))
       :op2 (c27-1 / want-01
                   :ARG0 c27-2
                   :ARG1 c27-4))
