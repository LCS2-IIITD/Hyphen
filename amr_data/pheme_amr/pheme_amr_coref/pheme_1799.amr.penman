# ::snt you're right would only take one for me
# ::tokens ["you", "'re", "right", "would", "only", "take", "one", "for", "me"]
# ::lemmas ["you", "be", "right", "would", "only", "take", "one", "for", "i"]
(c1-4 / right-06
      :ARG1 (c1-0 / you)
      :ARG2 (c1-5 / take-01
                  :ARG0 (c1-3 / i)
                  :ARG1 (c1-2 / one)
                  :mod (c1-1 / only)))

# ::snt does the bullet count matter? He still took someone's life.
# ::tokens ["does", "the", "bullet", "count", "matter", "?", "He", "still", "took", "someone", "'s", "life", "."]
# ::lemmas ["do", "the", "bullet", "count", "matter", "?", "he", "still", "take", "someone", "'s", "life", "."]
(c2-2 / multi-sentence
      :snt1 (c2-5 / matter-01
                  :polarity (c2-9 / amr-unknown)
                  :ARG1 (c2-6 / count-04
                              :ARG1 (c2-3 / bullet)))
      :snt2 (c2-8 / take-01
                  :ARG0 (c2-0 / he)
                  :ARG1 (c2-1 / life
                              :poss (c2-7 / someone))
                  :mod (c2-4 / still)))

# ::snt It's a distraction. And why didn't the pd call in the shooting?
# ::tokens ["It", "'s", "a", "distraction", ".", "And", "why", "did", "n't", "the", "pd", "call", "in", "the", "shooting", "?"]
# ::lemmas ["it", "be", "a", "distraction", ".", "and", "why", "do", "not", "the", "pd", "call", "in", "the", "shooting", "?"]
(c3-0 / multi-sentence
      :snt1 (c3-4 / distract-01
                  :ARG0 (c3-2 / it))
      :snt2 (c3-9 / and
                  :op2 (c3-5 / cause-01
                             :ARG0 (c3-1 / amr-unknown)
                             :ARG1 (c3-6 / call-in-04
                                         :ARG0 (c3-7 / government-organization
                                                     :name (c3-3 / name
                                                                 :op1 "PD"))
                                         :ARG1 (c3-8 / shoot-02)
                                         :polarity -))))

# ::snt Yes we do. I have been saying that all day. There would tapes between officer &amp; dispatch about the suspects.
# ::tokens ["Yes", "we", "do", ".", "I", "have", "been", "saying", "that", "all", "day", ".", "There", "would", "tapes", "between", "officer", "&", "amp", ";", "dispatch", "about", "the", "suspects", "."]
# ::lemmas ["yes", "we", "do", ".", "i", "have", "be", "say", "that", "all", "day", ".", "there", "would", "tape", "between", "officer", "&", "amp", ";", "dispatch", "about", "the", "suspect", "."]
(c4-1 / multi-sentence
      :snt1 (c4-3 / do-02
                  :ARG0 (c4-12 / we)
                  :mod (c4-15 / yes))
      :snt2 (c4-4 / say-01
                  :ARG0 (c4-14 / i)
                  :ARG1 (c4-18 / that)
                  :duration (c4-0 / day
                                  :mod (c4-6 / all)))
      :snt3 (c4-13 / and
                   :op1 (c4-17 / tape-02
                               :ARG0 (c4-8 / between
                                           :op1 (c4-16 / officer)
                                           :op2 (c4-2 / person
                                                      :ARG0-of (c4-7 / have-org-role-91
                                                                     :ARG2 (c4-10 / amp)))))
                   :op2 (c4-11 / dispatch-01
                               :ARG2 (c4-5 / person
                                           :ARG2-of (c4-9 / suspect-01)))))

# ::snt I don't, you're right. But , , or ?? Those are all a bit excessive for anyone who took cigars from a convenience store.
# ::tokens ["I", "do", "n't", ",", "you", "'re", "right", ".", "But", ",", ",", "or", "?", "?", "Those", "are", "all", "a", "bit", "excessive", "for", "anyone", "who", "took", "cigars", "from", "a", "convenience", "store", "."]
# ::lemmas ["i", "do", "not", ",", "you", "be", "right", ".", "but", ",", ",", "or", "?", "?", "those", "be", "all", "a", "bit", "excessive", "for", "anyone", "who", "take", "cigar", "from", "a", "convenience", "store", "."]
(c5-1 / multi-sentence
      :snt1 (c5-7 / do-02
                  :ARG0 (c5-5 / i)
                  :polarity -)
      :snt2 (c5-6 / right-06
                  :ARG1 (c5-0 / you))
      :snt3 (c5-8 / contrast-01
                  :ARG2 (c5-3 / excessive-02
                              :ARG1 (c5-13 / that
                                           :mod (c5-14 / all))
                              :degree (c5-2 / bit)
                              :beneficiary (c5-4 / anyone
                                                 :ARG0-of (c5-10 / take-01
                                                                 :ARG1 (c5-9 / cigar)
                                                                 :ARG2 (c5-11 / store
                                                                              :mod (c5-12 / convenience)))))))

# ::snt first it's then its now it's show me the proof I'll be waiting cuz I know you don't have any
# ::tokens ["first", "it", "'s", "then", "its", "now", "it", "'s", "show", "me", "the", "proof", "I", "'ll", "be", "waiting", "cuz", "I", "know", "you", "do", "n't", "have", "any"]
# ::lemmas ["first", "it", "be", "then", "its", "now", "it", "be", "show", "i", "the", "proof", "i", "'ll", "be", "wait", "cuz", "i", "know", "you", "do", "not", "have", "any"]
(c6-13 / and
       :op1 (c6-5 / it
                  :time (c6-12 / then))
       :op2 (c6-11 / show-01
                   :ARG0 (c6-10 / it)
                   :ARG1 (c6-8 / prove-01
                               :ARG1 (c6-1 / wait-01
                                           :ARG1 (c6-3 / i
                                                       :ARG2-of c6-11)))
                   :time (c6-7 / now)
                   :ARG1-of (c6-9 / cause-01
                                  :ARG0 (c6-6 / know-01
                                              :ARG0 c6-3
                                              :ARG1 (c6-0 / have-03
                                                          :ARG0 (c6-2 / you)
                                                          :ARG1 (c6-4 / any)
                                                          :polarity -)))))

# ::snt I'll tell you the kid is a criminal belongs the jail you must think its okay for them to say she was a pretty boy works way
# ::tokens ["I", "'ll", "tell", "you", "the", "kid", "is", "a", "criminal", "belongs", "the", "jail", "you", "must", "think", "its", "okay", "for", "them", "to", "say", "she", "was", "a", "pretty", "boy", "works", "way"]
# ::lemmas ["i", "'ll", "tell", "you", "the", "kid", "be", "a", "criminal", "belong", "the", "jail", "you", "must", "think", "its", "okay", "for", "they", "to", "say", "she", "be", "a", "pretty", "boy", "work", "way"]
(c7-14 / and
       :op1 (c7-13 / tell-01
                   :ARG0 (c7-5 / i)
                   :ARG1 (c7-10 / criminal-03
                                :ARG2 (c7-6 / kid))
                   :ARG2 (c7-0 / you))
       :op2 (c7-4 / obligate-01
                  :ARG1 c7-0
                  :ARG2 (c7-11 / think-01
                               :ARG0 c7-0
                               :ARG1 (c7-2 / okay-04
                                           :ARG1 (c7-12 / say-01
                                                        :ARG0 (c7-8 / they)
                                                        :ARG1 (c7-3 / boy
                                                                    :mod (c7-9 / pretty)
                                                                    :domain c7-6)))))
       :op3 (c7-1 / way
                  :manner-of (c7-7 / work-01)))

# ::snt To taint the jury IF they are forced to charge Wilson.
# ::tokens ["To", "taint", "the", "jury", "IF", "they", "are", "forced", "to", "charge", "Wilson", "."]
# ::lemmas ["to", "taint", "the", "jury", "if", "they", "be", "force", "to", "charge", "Wilson", "."]
(c8-0 / have-purpose-91
      :ARG2 (c8-6 / taint-01
                  :ARG1 (c8-1 / jury))
      :condition (c8-2 / force-01
                       :ARG1 c8-1
                       :ARG2 (c8-5 / charge-05
                                   :ARG0 c8-1
                                   :ARG1 (c8-4 / person
                                               :name (c8-3 / name
                                                           :op1 "Wilson")))))

# ::snt Yes we do to smear his image. Get people to say see he was dangerous, etc
# ::tokens ["Yes", "we", "do", "to", "smear", "his", "image", ".", "Get", "people", "to", "say", "see", "he", "was", "dangerous", ",", "etc"]
# ::lemmas ["yes", "we", "do", "to", "smear", "his", "image", ".", "get", "people", "to", "say", "see", "he", "be", "dangerous", ",", "etc"]
(c9-4 / multi-sentence
      :snt1 (c9-11 / do-02
                   :ARG0 (c9-1 / we)
                   :ARG1 (c9-13 / smear-02
                                :ARG0 c9-1
                                :ARG1 (c9-8 / image
                                            :poss (c9-0 / he)))
                   :mod (c9-2 / yes))
      :snt2 (c9-12 / get-04
                   :ARG0 (c9-9 / we)
                   :ARG1 (c9-6 / say-01
                               :ARG0 (c9-10 / person)
                               :ARG1 (c9-14 / and
                                            :op1 (c9-7 / endanger-01
                                                       :ARG0 (c9-3 / he))
                                            :op2 (c9-5 / et-cetera)))))

# ::snt : criminals belong in jail. But he's not in jail. He's dead. By eight bullets.
# ::tokens [":", "criminals", "belong", "in", "jail", ".", "But", "he", "'s", "not", "in", "jail", ".", "He", "'s", "dead", ".", "By", "eight", "bullets", "."]
# ::lemmas [":", "criminal", "belong", "in", "jail", ".", "but", "he", "be", "not", "in", "jail", ".", "he", "be", "dead", ".", "by", "eight", "bullet", "."]
(c10-2 / multi-sentence
       :snt1 (c10-3 / belong-01
                    :ARG0 (c10-4 / person
                                 :ARG2-of (c10-6 / criminal-03))
                    :ARG1 (c10-0 / jail))
       :snt2 (c10-5 / contrast-01
                    :ARG2 (c10-10 / jail
                                  :domain (c10-1 / he)
                                  :polarity -))
       :snt3 (c10-7 / die-01
                    :ARG1 (c10-11 / he)
                    :ARG1-of (c10-9 / cause-01
                                    :ARG0 (c10-8 / bullet
                                                 :quant 8))))

# ::snt So since we now know the officer knew nothing abt a robbery, we must ask why those tapes were released? . But we know why.
# ::tokens ["So", "since", "we", "now", "know", "the", "officer", "knew", "nothing", "abt", "a", "robbery", ",", "we", "must", "ask", "why", "those", "tapes", "were", "released", "?", ".", "But", "we", "know", "why", "."]
# ::lemmas ["so", "since", "we", "now", "know", "the", "officer", "know", "nothing", "abt", "a", "robbery", ",", "we", "must", "ask", "why", "those", "tape", "be", "release", "?", ".", "but", "we", "know", "why", "."]
(c11-0 / multi-sentence
       :snt1 (c11-14 / obligate-01
                     :polarity (c11-4 / amr-unknown)
                     :ARG1 (c11-7 / we)
                     :ARG2 (c11-9 / ask-01
                                  :ARG0 c11-7
                                  :ARG1 (c11-19 / thing
                                                :ARG0-of (c11-17 / cause-01
                                                                 :ARG1 (c11-6 / release-01
                                                                              :ARG1 (c11-18 / tape
                                                                                            :mod (c11-10 / that))))))
                     :ARG1-of (c11-3 / cause-01
                                     :ARG0 (c11-12 / know-01
                                                   :ARG0 c11-7
                                                   :ARG1 (c11-5 / nothing
                                                                :topic (c11-2 / rob-01))
                                                   :time (c11-16 / now))))
       :snt2 (c11-11 / contrast-01
                     :ARG2 (c11-8 / know-01
                                  :ARG0 (c11-1 / we)
                                  :ARG1 (c11-15 / thing
                                                :ARG0-of (c11-13 / cause-01
                                                                 :ARG1 c11-6)))))

# ::snt handcuffs, not just guns.
# ::tokens ["handcuffs", ",", "not", "just", "guns", "."]
# ::lemmas ["handcuff", ",", "not", "just", "gun", "."]
(c12-3 / and
       :op1 (c12-0 / hand-01)
       :op2 (c12-2 / gun
                   :mod (c12-1 / just
                               :polarity -)))

# ::snt criminals belong in jail.
# ::tokens ["criminals", "belong", "in", "jail", "."]
# ::lemmas ["criminal", "belong", "in", "jail", "."]
(c13-3 / belong-01
       :ARG0 (c13-1 / person
                    :ARG2-of (c13-2 / criminal-03))
       :ARG1 (c13-0 / jail))

# ::snt sit down and shut up stupid
# ::tokens ["sit", "down", "and", "shut", "up", "stupid"]
# ::lemmas ["sit", "down", "and", "shut", "up", "stupid"]
(c14-4 / and
       :op1 (c14-3 / sit-down-02
                   :ARG1 (c14-0 / you)
                   :mode imperative)
       :op2 (c14-2 / shut-up-06
                   :ARG0 c14-0
                   :ARG1 c14-0
                   :mod (c14-1 / stupid)
                   :mode imperative))

# ::snt . attacking Brown's character to confuse the public and win the PR war?
# ::tokens [".", "attacking", "Brown", "'s", "character", "to", "confuse", "the", "public", "and", "win", "the", "PR", "war", "?"]
# ::lemmas [".", "attack", "Brown", "'s", "character", "to", "confuse", "the", "public", "and", "win", "the", "pr", "war", "?"]
(c15-10 / attack-01
        :ARG1 (c15-8 / character
                     :poss (c15-6 / person
                                  :name (c15-4 / name
                                               :op1 "Brown")))
        :polarity (c15-2 / amr-unknown)
        :purpose (c15-5 / and
                        :op1 (c15-7 / confuse-01
                                    :ARG1 (c15-9 / public))
                        :op2 (c15-0 / win-01
                                    :ARG1 (c15-3 / war
                                                 :mod (c15-1 / proportional)))))

# ::snt ~Because the press asked for it
# ::tokens ["~Because", "the", "press", "asked", "for", "it"]
# ::lemmas ["~because", "the", "press", "ask", "for", "it"]
(c16-1 / cause-01
       :ARG0 (c16-3 / ask-02
                    :ARG0 (c16-0 / press)
                    :ARG1 (c16-2 / it)))

# ::snt all I'm trying to say is that taking replaceable items from a convenience store should not require deadly shots. Officers have
# ::tokens ["all", "I", "'m", "trying", "to", "say", "is", "that", "taking", "replaceable", "items", "from", "a", "convenience", "store", "should", "not", "require", "deadly", "shots", ".", "Officers", "have"]
# ::lemmas ["all", "i", "be", "try", "to", "say", "be", "that", "take", "replaceable", "item", "from", "a", "convenience", "store", "should", "not", "require", "deadly", "shot", ".", "officer", "have"]
(c17-0 / multi-sentence
       :snt1 (c17-18 / try-01
                     :ARG0 (c17-11 / i)
                     :ARG1 (c17-3 / say-01
                                  :ARG0 c17-11
                                  :ARG1 (c17-10 / recommend-01
                                                :ARG1 (c17-1 / require-01
                                                             :ARG0 (c17-17 / take-01
                                                                           :ARG1 (c17-12 / item
                                                                                         :ARG1-of (c17-9 / replace-01
                                                                                                         :ARG1-of (c17-2 / possible-01)))
                                                                           :ARG2 (c17-8 / store
                                                                                        :mod (c17-16 / convenience)))
                                                             :ARG1 (c17-14 / shoot-01
                                                                           :ARG0 c17-17
                                                                           :ARG0-of (c17-13 / kill-01)))
                                                :polarity -)
                                  :mod (c17-6 / all)))
       :snt2 (c17-7 / have-03
                    :ARG0 (c17-4 / person
                                 :ARG0-of (c17-5 / have-org-role-91
                                                 :ARG2 (c17-15 / officer)))))
