# ::snt No mention of Africa the boot is on the other foot now who are the racists now?
# ::tokens ["No", "mention", "of", "Africa", "the", "boot", "is", "on", "the", "other", "foot", "now", "who", "are", "the", "racists", "now", "?"]
# ::lemmas ["no", "mention", "of", "Africa", "the", "boot", "be", "on", "the", "other", "foot", "now", "who", "be", "the", "racist", "now", "?"]
(c1-8 / and
      :op1 (c1-0 / mention-01
                 :ARG1 (c1-7 / continent
                             :name (c1-3 / name
                                         :op1 "Africa"))
                 :polarity -)
      :op2 (c1-6 / racist
                 :domain (c1-2 / amr-unknown)
                 :time (c1-4 / now)
                 :location (c1-1 / boot)
                 :time (c1-5 / now)))

# ::snt what has brought us to this COPS against CITIZENS its due to power hungry CIRCLEWAGON
# ::tokens ["what", "has", "brought", "us", "to", "this", "COPS", "against", "CITIZENS", "its", "due", "to", "power", "hungry", "CIRCLEWAGON"]
# ::lemmas ["what", "have", "bring", "we", "to", "this", "cop", "against", "CITIZENS", "its", "due", "to", "power", "hungry", "CIRCLEWAGON"]
(c2-2 / bring-01
      :ARG0 (c2-6 / coalition
                  :name (c2-3 / name
                              :op1 "CIRCLEWAGON")
                  :ARG0-of (c2-0 / hunger-01
                                 :ARG1 (c2-4 / power)))
      :ARG1 (c2-1 / we)
      :ARG2 (c2-8 / protest-01
                  :ARG0 c2-6
                  :ARG1 (c2-5 / country
                              :name c2-3
                              :op1 "CITIZENS"))
      :mod (c2-7 / this))

# ::snt Welcome to America!
# ::tokens ["Welcome", "to", "America", "!"]
# ::lemmas ["welcome", "to", "America", "!"]
(c3-1 / welcome-01
      :ARG1 (c3-3 / you)
      :ARG2 (c3-2 / country
                  :name (c3-0 / name
                              :op1 "America")))

# ::snt What???
# ::tokens ["What", "?", "?", "?"]
# ::lemmas ["what", "?", "?", "?"]
(c4-0 / amr-unknown)

# ::snt maybe he's just got a guilty conscious
# ::tokens ["maybe", "he", "'s", "just", "got", "a", "guilty", "conscious"]
# ::lemmas ["maybe", "he", "be", "just", "get", "a", "guilty", "conscious"]
(c5-2 / possible-01
      :ARG1 (c5-5 / get-02
                  :ARG0 (c5-0 / he)
                  :ARG1 (c5-4 / conscious
                              :mod (c5-3 / guilty-01))
                  :mod (c5-1 / just)))

# ::snt Yes it does in Tennessee. State is more racist today than in s.
# ::tokens ["Yes", "it", "does", "in", "Tennessee", ".", "State", "is", "more", "racist", "today", "than", "in", "s."]
# ::lemmas ["yes", "it", "do", "in", "Tennessee", ".", "state", "be", "more", "racist", "today", "than", "in", "s."]
(c6-3 / multi-sentence
      :snt1 (c6-9 / do-02
                  :ARG0 (c6-6 / it)
                  :location (c6-11 / state
                                   :name (c6-7 / name
                                               :op1 "Tennessee"))
                  :mod (c6-1 / yes))
      :snt2 (c6-0 / have-degree-91
                  :ARG1 (c6-5 / state)
                  :ARG2 (c6-10 / racist)
                  :ARG3 (c6-8 / more)
                  :ARG4 (c6-2 / state
                              :location (c6-4 / s))
                  :time (c6-12 / today)))

# ::snt sad and tragic
# ::tokens ["sad", "and", "tragic"]
# ::lemmas ["sad", "and", "tragic"]
(c7-2 / and
      :op1 (c7-0 / sad-02)
      :op2 (c7-1 / tragic))

# ::snt Should Brown have obeyed the law and stepped to the sidewalk? If he hadn't been a punk he'd be alive.
# ::tokens ["Should", "Brown", "have", "obeyed", "the", "law", "and", "stepped", "to", "the", "sidewalk", "?", "If", "he", "had", "n't", "been", "a", "punk", "he", "'d", "be", "alive", "."]
# ::lemmas ["should", "Brown", "have", "obey", "the", "law", "and", "step", "to", "the", "sidewalk", "?", "if", "he", "have", "not", "be", "a", "punk", "he", "would", "be", "alive", "."]
(c8-2 / multi-sentence
      :snt1 (c8-7 / recommend-01
                  :ARG1 (c8-11 / and
                               :op1 (c8-3 / obeyed-01
                                          :ARG0 (c8-6 / person
                                                      :name (c8-5 / name
                                                                  :op1 "Brown"))
                                          :ARG1 (c8-1 / law))
                               :op2 (c8-9 / step-01
                                          :ARG1 c8-6
                                          :ARG2 (c8-4 / sidewalk))))
      :snt2 (c8-8 / live-01
                  :ARG0 (c8-0 / he)
                  :condition (c8-10 / punk
                                    :domain c8-0
                                    :polarity -)))

# ::snt Sadly accurate
# ::tokens ["Sadly", "accurate"]
# ::lemmas ["sadly", "accurate"]
(c9-1 / accurate
      :ARG0-of (c9-0 / sad-02))

# ::snt ok I will goodie ,there is a but, and you in your mind what that is.
# ::tokens ["ok", "I", "will", "goodie", ",", "there", "is", "a", "but", ",", "and", "you", "in", "your", "mind", "what", "that", "is", "."]
# ::lemmas ["ok", "i", "will", "goodie", ",", "there", "be", "a", "but", ",", "and", "you", "in", "your", "mind", "what", "that", "be", "."]
(c10-9 / say-01
       :ARG0 (c10-4 / i)
       :ARG1 (c10-11 / and
                     :op1 (c10-7 / contrast-01
                                 :ARG2 (c10-0 / have-mod-91
                                              :ARG1 (c10-10 / that)))
                     :op2 (c10-2 / be-located-at-91
                                 :ARG1 (c10-8 / thing)
                                 :ARG2 (c10-1 / mind
                                              :part-of (c10-6 / person
                                                              :name (c10-5 / name
                                                                           :op1 "Goodie")
                                                              :ARG2-of c10-9))))
       :ARG1-of (c10-3 / okay-04))

# ::snt Mandelas passing and the looming threat of race war
# ::tokens ["Mandelas", "passing", "and", "the", "looming", "threat", "of", "race", "war"]
# ::lemmas ["Mandelas", "pass", "and", "the", "loom", "threat", "of", "race", "war"]
(c11-7 / and
       :op1 (c11-3 / pass-03
                   :ARG1 (c11-6 / person
                                :name (c11-2 / name
                                             :op1 "Mandelas")))
       :op2 (c11-5 / threaten-01
                   :ARG1 (c11-0 / war-01
                                :ARG2 (c11-4 / race))
                   :ARG1-of (c11-1 / loom-01)))

# ::snt expect for him to be like what the hell is this guys problem he has his hands up for no reason
# ::tokens ["expect", "for", "him", "to", "be", "like", "what", "the", "hell", "is", "this", "guys", "problem", "he", "has", "his", "hands", "up", "for", "no", "reason"]
# ::lemmas ["expect", "for", "he", "to", "be", "like", "what", "the", "hell", "be", "this", "guy", "problem", "he", "have", "his", "hand", "up", "for", "no", "reason"]
(c12-2 / expect-01
       :ARG1 (c12-5 / resemble-01
                    :ARG1 (c12-0 / he
                                 :part (c12-10 / hand))
                    :ARG2 (c12-4 / problem
                                 :poss (c12-7 / guy
                                              :mod (c12-8 / this))
                                 :mod (c12-3 / hell
                                             :mode expressive)
                                 :ARG1-of (c12-6 / cause-01
                                                 :ARG0 (c12-1 / up-03
                                                              :ARG1 c12-10
                                                              :ARG1-of (c12-9 / possible-01
                                                                              :polarity -))))))

# ::snt Oh, Austin. Now I'm going to have to drop you. Read up on the full story.
# ::tokens ["Oh", ",", "Austin", ".", "Now", "I", "'m", "going", "to", "have", "to", "drop", "you", ".", "Read", "up", "on", "the", "full", "story", "."]
# ::lemmas ["oh", ",", "Austin", ".", "now", "i", "be", "go", "to", "have", "to", "drop", "you", ".", "read", "up", "on", "the", "full", "story", "."]
(c13-2 / multi-sentence
       :snt1 (c13-4 / oh
                    :mod (c13-8 / person
                                :name (c13-6 / name
                                             :op1 "Austin"))
                    :mode expressive)
       :snt2 (c13-1 / obligate-01
                    :ARG1 (c13-5 / i)
                    :ARG2 (c13-9 / drop-05
                                 :ARG0 c13-5
                                 :ARG1 c13-8)
                    :time (c13-7 / now))
       :snt3 (c13-10 / read-up-02
                     :ARG0 (c13-0 / you)
                     :ARG1 (c13-11 / story
                                   :ARG1-of (c13-3 / full-09))
                     :mode imperative))

# ::snt you need to give me at site to Google
# ::tokens ["you", "need", "to", "give", "me", "at", "site", "to", "Google"]
# ::lemmas ["you", "need", "to", "give", "i", "at", "site", "to", "Google"]
(c14-1 / obligate-01
       :ARG1 (c14-0 / you)
       :ARG2 (c14-5 / give-01
                    :ARG0 c14-0
                    :ARG1 (c14-2 / i)
                    :ARG2 (c14-4 / company
                                 :name (c14-3 / name
                                              :op1 "Google"))
                    :location (c14-6 / site)))

# ::snt y tobuy what am I Googling?
# ::tokens ["y", "tobuy", "what", "am", "I", "Googling", "?"]
# ::lemmas ["y", "tobuy", "what", "be", "i", "google", "?"]
(c15-2 / google-01
       :ARG0 (c15-3 / i)
       :ARG1 (c15-1 / amr-unknown)
       :mod (c15-0 / yep
                   :mode expressive))

# ::snt via Chattanooga Times Free Press
# ::tokens ["via", "Chattanooga", "Times", "Free", "Press"]
# ::lemmas ["via", "Chattanooga", "Times", "Free", "Press"]
(c16-2 / byline-91
       :ARG0 (c16-0 / newspaper
                    :name (c16-1 / name
                                 :op1 "Chattanooga"
                                 :op2 "Times"
                                 :op3 "Free"
                                 :op4 "Press")))

# ::snt sad times in
# ::tokens ["sad", "times", "in"]
# ::lemmas ["sad", "time", "in"]
(c17-1 / time
       :ARG1-of (c17-0 / sad-02))

# ::snt the sad thing is it's not a joke, this is life for many ppl in this country.
# ::tokens ["the", "sad", "thing", "is", "it", "'s", "not", "a", "joke", ",", "this", "is", "life", "for", "many", "ppl", "in", "this", "country", "."]
# ::lemmas ["the", "sad", "thing", "be", "it", "be", "not", "a", "joke", ",", "this", "be", "life", "for", "many", "ppl", "in", "this", "country", "."]
(c18-8 / sad-02
       :ARG0 (c18-6 / contrast-01
                    :ARG1 (c18-0 / joke-01
                                 :ARG2 (c18-3 / it)
                                 :polarity -)
                    :ARG2 (c18-1 / life
                                 :domain (c18-9 / this)
                                 :beneficiary (c18-4 / person
                                                     :quant (c18-2 / many)
                                                     :location (c18-5 / country
                                                                      :mod (c18-7 / this))))))

# ::snt . . .
# ::tokens [".", ".", "."]
# ::lemmas [".", ".", "."]
(c19-0)

# ::snt boom. We have a caption winner
# ::tokens ["boom", ".", "We", "have", "a", "caption", "winner"]
# ::lemmas ["boom", ".", "we", "have", "a", "caption", "winner"]
(c20-2 / multi-sentence
       :snt1 (c20-3 / boom
                    :mode expressive)
       :snt2 (c20-0 / have-03
                    :ARG0 (c20-1 / we)
                    :ARG1 (c20-5 / person
                                 :ARG0-of (c20-4 / win-01
                                                 :ARG1 (c20-7 / thing
                                                              :ARG0-of (c20-6 / caption-01))))))

# ::snt Congrats on your tweet!
# ::tokens ["Congrats", "on", "your", "tweet", "!"]
# ::lemmas ["congrat", "on", "your", "tweet", "!"]
(c21-2 / congratulate-01
       :ARG1 (c21-1 / you)
       :ARG2 (c21-0 / tweet-01
                    :ARG0 c21-1))

# ::snt Slaughter of white farmers &amp; oppression of whites in Africa
# ::tokens ["Slaughter", "of", "white", "farmers", "&", "amp", ";", "oppression", "of", "whites", "in", "Africa"]
# ::lemmas ["slaughter", "of", "white", "farmers", "&", "amp", ";", "oppression", "of", "white", "in", "Africa"]
(c22-11 / and
        :op1 (c22-4 / and
                    :op1 (c22-9 / kill-01
                                :ARG1 (c22-7 / person
                                             :ARG0-of (c22-1 / farm-01)
                                             :ARG1-of (c22-0 / white-02)))
                    :op2 (c22-10 / pill))
        :op2 (c22-3 / oppress-01
                    :ARG1 (c22-2 / person
                                 :ARG1-of (c22-5 / white-02))
                    :location (c22-8 / continent
                                     :name (c22-6 / name
                                                  :op1 "Africa"))))

# ::snt Google it?
# ::tokens ["Google", "it", "?"]
# ::lemmas ["Google", "it", "?"]
(c23-2 / google-01
       :ARG0 (c23-0 / you)
       :ARG1 (c23-3 / it)
       :polarity (c23-1 / amr-unknown))

# ::snt Did not understand your tweet?
# ::tokens ["Did", "not", "understand", "your", "tweet", "?"]
# ::lemmas ["do", "not", "understand", "your", "tweet", "?"]
(c24-2 / understand-01
       :ARG1 (c24-1 / tweet-01
                    :ARG0 (c24-0 / you))
       :polarity (c24-3 / amr-unknown)
       :polarity -)

# ::snt that is heartbreaking! Things should have never been this way, but dammit its people.
# ::tokens ["that", "is", "heartbreaking", "!", "Things", "should", "have", "never", "been", "this", "way", ",", "but", "dammit", "its", "people", "."]
# ::lemmas ["that", "be", "heartbreaking", "!", "thing", "should", "have", "never", "be", "this", "way", ",", "but", "dammit", "its", "people", "."]
(c25-2 / multi-sentence
       :snt1 (c25-3 / break-heart-31
                    :ARG0 (c25-11 / that))
       :snt2 (c25-8 / contrast-01
                    :ARG1 (c25-7 / recommend-01
                                 :ARG1 (c25-0 / way
                                              :mod (c25-10 / this)
                                              :domain (c25-5 / thing)
                                              :time (c25-4 / ever)
                                              :polarity -))
                    :ARG2 (c25-9 / damn-01
                                 :ARG0 (c25-1 / you)
                                 :ARG1 (c25-6 / person
                                              :domain c25-5)
                                 :mode imperative)))

# ::snt only thing missing is the Open Carry RWNJ with a rifle slug over their arm
# ::tokens ["only", "thing", "missing", "is", "the", "Open", "Carry", "RWNJ", "with", "a", "rifle", "slug", "over", "their", "arm"]
# ::lemmas ["only", "thing", "miss", "be", "the", "Open", "Carry", "RWNJ", "with", "a", "rifle", "slug", "over", "their", "arm"]
(c26-2 / miss-01
       :ARG1 (c26-5 / publication
                    :name (c26-4 / name
                                 :op1 "Open"
                                 :op2 "Carry")
                    :ARG0-of (c26-7 / carry-01)
                    :part (c26-9 / arm)
                    :ARG0-of (c26-0 / have-03
                                    :ARG1 (c26-8 / slug
                                                 :mod (c26-6 / rifle)
                                                 :location (c26-3 / over
                                                                  :op1 c26-9))))
       :mod (c26-1 / only))

# ::snt That's not what I meant you need to tell me what I'm looking for besides slaughter in Africa.
# ::tokens ["That", "'s", "not", "what", "I", "meant", "you", "need", "to", "tell", "me", "what", "I", "'m", "looking", "for", "besides", "slaughter", "in", "Africa", "."]
# ::lemmas ["that", "be", "not", "what", "i", "mean", "you", "need", "to", "tell", "i", "what", "i", "be", "look", "for", "besides", "slaughter", "in", "Africa", "."]
(c27-2 / mean-01
       :ARG0 (c27-4 / i)
       :ARG2 (c27-5 / need-01
                    :ARG0 (c27-0 / you)
                    :ARG1 (c27-10 / tell-01
                                  :ARG0 c27-0
                                  :ARG1 (c27-8 / thing
                                               :ARG1-of (c27-1 / look-01
                                                               :ARG0 c27-4)
                                               :ARG2-of (c27-3 / except-01
                                                               :ARG1 (c27-9 / slaughter-01
                                                                            :location (c27-7 / continent
                                                                                             :name (c27-6 / name
                                                                                                          :op1 "Africa")))))
                                  :ARG2 c27-4))
       :polarity -)

# ::snt : This Cartoon Says It All: via via Chattanooga Times
# ::tokens [":", "This", "Cartoon", "Says", "It", "All", ":", "via", "via", "Chattanooga", "Times"]
# ::lemmas [":", "this", "Cartoon", "say", "it", "all", ":", "via", "via", "Chattanooga", "Times"]
(c28-4 / say-01
       :ARG0 (c28-3 / cartoon
                    :mod (c28-5 / this))
       :ARG1 (c28-0 / it
                    :mod (c28-6 / all))
       :medium (c28-1 / newspaper
                      :name (c28-2 / name
                                   :op1 "Chattanooga"
                                   :op2 "Times")))

# ::snt what did u not understand ?
# ::tokens ["what", "did", "u", "not", "understand", "?"]
# ::lemmas ["what", "do", "u", "not", "understand", "?"]
(c29-1 / understand-01
       :ARG0 (c29-0 / you)
       :ARG1 (c29-2 / amr-unknown)
       :polarity -)

# ::snt The police consider that "armed".
# ::tokens ["The", "police", "consider", "that", "\"", "armed", "\"", "."]
# ::lemmas ["the", "police", "consider", "that", "\"", "armed", "\"", "."]
(c30-2 / consider-01
       :ARG0 (c30-1 / police)
       :ARG1 (c30-3 / arm-01
                    :ARG1 (c30-0 / that)))

# ::snt If only he were draped in a rainbow flag, too!
# ::tokens ["If", "only", "he", "were", "draped", "in", "a", "rainbow", "flag", ",", "too", "!"]
# ::lemmas ["if", "only", "he", "be", "drape", "in", "a", "rainbow", "flag", ",", "too", "!"]
(c31-0 / have-condition-91
       :ARG2 (c31-4 / draped-01
                    :ARG1 (c31-6 / he)
                    :ARG2 (c31-1 / flag
                                 :mod (c31-3 / rainbow))
                    :mod (c31-5 / too))
       :mod (c31-2 / only))

# ::snt *conscience - and looks to me like you could use one
# ::tokens ["*", "conscience", "-", "and", "looks", "to", "me", "like", "you", "could", "use", "one"]
# ::lemmas ["*", "conscience", "-", "and", "look", "to", "i", "like", "you", "could", "use", "one"]
(c32-7 / and
       :op1 (c32-6 / cience)
       :op2 (c32-1 / look-02
                   :ARG0cience (c32-5 / possible-01
                                      :ARG1 (c32-2 / use-01
                                                   :ARG0 (c32-0 / you)
                                                   :ARG1 (c32-3 / one)))
                   :ARG2 (c32-4 / i)))

# ::snt I already have.
# ::tokens ["I", "already", "have", "."]
# ::lemmas ["i", "already", "have", "."]
(c33-0 / event
       :mod (c33-2 / i)
       :time (c33-1 / already))

# ::snt You sounds as though you doubted me what I've have told you is true it's not well publicised yet
# ::tokens ["You", "sounds", "as", "though", "you", "doubted", "me", "what", "I", "'ve", "have", "told", "you", "is", "true", "it", "'s", "not", "well", "publicised", "yet"]
# ::lemmas ["you", "sound", "as", "though", "you", "doubt", "i", "what", "i", "'ve", "have", "tell", "you", "be", "true", "it", "be", "not", "well", "publicise", "yet"]
(c34-7 / sound-01
       :ARG1 (c34-0 / you)
       :ARG2 (c34-4 / doubt-01
                    :ARG0 c34-0
                    :ARG1 (c34-2 / i)
                    :ARG1-of (c34-8 / true-01))
       :concession (c34-3 / publicize-01
                          :ARG1 (c34-5 / it)
                          :manner (c34-1 / well-09)
                          :time (c34-6 / yet)
                          :polarity -))

# ::snt man that's the most suspicious thing you could ever do when a cop drives by
# ::tokens ["man", "that", "'s", "the", "most", "suspicious", "thing", "you", "could", "ever", "do", "when", "a", "cop", "drives", "by"]
# ::lemmas ["man", "that", "be", "the", "most", "suspicious", "thing", "you", "could", "ever", "do", "when", "a", "cop", "drive", "by"]
(c35-10 / say-01
        :ARG0 (c35-5 / i)
        :ARG1 (c35-11 / thing
                      :ARG1-of (c35-7 / do-02
                                      :ARG0 (c35-2 / man)
                                      :ARG1-of (c35-6 / possible-01)
                                      :time (c35-1 / drive-01
                                                   :ARG0 (c35-8 / cop))
                                      :time (c35-3 / ever))
                      :ARG1-of (c35-0 / have-degree-91
                                      :ARG2 (c35-4 / suspicious-02
                                                   :ARG0 c35-11)
                                      :ARG3 (c35-9 / most)))
        :ARG2 c35-2)
