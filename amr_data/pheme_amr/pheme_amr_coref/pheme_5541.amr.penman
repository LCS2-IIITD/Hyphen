# ::snt : Our thoughts are with all the passengers and crew members on board flight and their loved ones.
# ::tokens [":", "Our", "thoughts", "are", "with", "all", "the", "passengers", "and", "crew", "members", "on", "board", "flight", "and", "their", "loved", "ones", "."]
# ::lemmas [":", "our", "thought", "be", "with", "all", "the", "passenger", "and", "crew", "member", "on", "board", "flight", "and", "their", "loved", "one", "."]
(c1-11 / think-01
       :ARG0 (c1-1 / we)
       :ARG2 (c1-13 / and
                    :op1 (c1-7 / and
                               :op1 (c1-9 / passenger)
                               :op2 (c1-12 / person
                                           :ARG0-of (c1-0 / have-org-role-91
                                                          :ARG1 (c1-10 / crew)
                                                          :ARG2 (c1-3 / member)))
                               :mod (c1-8 / all)
                               :ARG0-of (c1-6 / board-01
                                              :ARG1 (c1-2 / fly-01
                                                          :ARG1 c1-7)))
                    :op2 (c1-5 / person
                               :ARG1-of (c1-4 / love-01
                                              :ARG0 c1-7))))

# ::snt my thoughts go to FBW engineering/maintenance plus pilot training against malfunctions that may occur.
# ::tokens ["my", "thoughts", "go", "to", "FBW", "engineering", "/", "maintenance", "plus", "pilot", "training", "against", "malfunctions", "that", "may", "occur", "."]
# ::lemmas ["my", "thought", "go", "to", "FBW", "engineering", "/", "maintenance", "plus", "pilot", "training", "against", "malfunction", "that", "may", "occur", "."]
(c2-8 / go-01
      :ARG1 (c2-11 / thing
                   :ARG1-of (c2-9 / think-01
                                  :ARG0 (c2-3 / i)))
      :ARG4 (c2-13 / and
                   :op1 (c2-10 / slash
                               :op1 (c2-2 / engineer-01)
                               :op2 (c2-0 / maintain-01)
                               :mod (c2-1 / organization
                                          :name (c2-4 / name
                                                      :op1 "BFW")))
                   :op2 (c2-5 / train-01
                              :ARG1 (c2-6 / malfunction-01
                                          :ARG1-of (c2-7 / possible-01))
                              :ARG2 c2-3
                              :mod (c2-12 / pilot))))

# ::snt : Our thoughts are with all the passengers and crew members on board flight and their loved ones.
# ::tokens [":", "Our", "thoughts", "are", "with", "all", "the", "passengers", "and", "crew", "members", "on", "board", "flight", "and", "their", "loved", "ones", "."]
# ::lemmas [":", "our", "thought", "be", "with", "all", "the", "passenger", "and", "crew", "member", "on", "board", "flight", "and", "their", "loved", "one", "."]
(c3-11 / think-01
       :ARG0 (c3-1 / we)
       :ARG2 (c3-13 / and
                    :op1 (c3-7 / and
                               :op1 (c3-9 / passenger)
                               :op2 (c3-12 / person
                                           :ARG0-of (c3-0 / have-org-role-91
                                                          :ARG1 (c3-10 / crew)
                                                          :ARG2 (c3-3 / member)))
                               :mod (c3-8 / all)
                               :ARG0-of (c3-6 / board-01
                                              :ARG1 (c3-2 / fly-01
                                                          :ARG1 c3-7)))
                    :op2 (c3-5 / person
                               :ARG1-of (c3-4 / love-01
                                              :ARG0 c3-7))))

# ::snt Unser tief empfundenes mitgefhl gilt allen Angehrigen &amp; Freunden der Passagiere und der besatzung
# ::tokens ["Unser", "tief", "empfundenes", "mitgefhl", "gilt", "allen", "Angehrigen", "&", "amp", ";", "Freunden", "der", "Passagiere", "und", "der", "besatzung"]
# ::lemmas ["unser", "tief", "empfundene", "mitgefhl", "gild", "allen", "Angehrigen", "&", "amp", ";", "Freunden", "der", "passagiere", "und", "der", "besatzung"]
(c4-0 / multi-sentence
      :snt1 (c4-10 / gilt-01
                   :ARG1 (c4-8 / person
                               :name (c4-6 / name
                                           :op1 "Angehrigen"
                                           :op2 "&"
                                           :op3 "amp")
                               :mod (c4-12 / all))
                   :ARG2 (c4-11 / person
                                :name (c4-7 / name
                                            :op1 "Mitgefhl")
                                :mod (c4-4 / empfund)
                                :mod c4-12))
      :mod (c4-1 / unser)
      :snt2 (c4-5 / and
                  :op1 (c4-2 / person
                             :name (c4-9 / name
                                         :op1 "Freunden"
                                         :op2 "der"
                                         :op3 "Passagiere"))
                  :op2 (c4-3 / besatzung)))

# ::snt ne yazyor burda
# ::tokens ["ne", "yazyor", "burda"]
# ::lemmas ["ne", "yazyor", "burda"]
(c5-1 / person
      :name (c5-0 / name
                  :op1 "B burda")
      :mod (c5-2 / lazy)
      :polarity -)

# ::snt . Please inform, if you follow procedure, that authorized persons must be present in cockpit at all times during a flight?
# ::tokens [".", "Please", "inform", ",", "if", "you", "follow", "procedure", ",", "that", "authorized", "persons", "must", "be", "present", "in", "cockpit", "at", "all", "times", "during", "a", "flight", "?"]
# ::lemmas [".", "please", "inform", ",", "if", "you", "follow", "procedure", ",", "that", "authorize", "person", "must", "be", "present", "in", "cockpit", "at", "all", "time", "during", "a", "flight", "?"]
(c6-5 / inform-01
      :ARG0 (c6-0 / you
                  :ARG1-of c6-5)
      :ARG2 (c6-3 / obligate-01
                  :ARG1 (c6-8 / present-02
                              :ARG1 (c6-10 / person
                                           :ARG1-of (c6-11 / authorize-01))
                              :ARG2 (c6-9 / cockpit)
                              :time (c6-4 / all)
                              :time (c6-1 / fly-01))
                  :condition (c6-6 / follow-02
                                   :ARG0 c6-0
                                   :ARG1 (c6-2 / procedure)))
      :polarity (c6-7 / amr-unknown)
      :polite +
      :mode imperative)

# ::snt Rest in Peace
# ::tokens ["Rest", "in", "Peace"]
# ::lemmas ["rest", "in", "Peace"]
(c7-1 / rest-01
      :manner (c7-0 / peace))
