# ::snt God Bless and sympathies to those that know and love him
# ::tokens ["God", "Bless", "and", "sympathies", "to", "those", "that", "know", "and", "love", "him"]
# ::lemmas ["God", "Bless", "and", "sympathie", "to", "those", "that", "know", "and", "love", "he"]
(c1-7 / and
      :op1 (c1-1 / bless-01
                 :ARG0 (c1-3 / person
                             :name (c1-2 / name
                                         :op1 "God")))
      :op2 (c1-4 / sympathize-01
                 :ARG0 c1-3)
      :beneficiary (c1-6 / person
                         :ARG0-of (c1-5 / know-01
                                        :ARG1 c1-3)
                         :ARG0-of (c1-0 / love-01
                                        :ARG1 c1-3)))

# ::snt I wonder if France's police will blame everyone BUT the shooters. Like NYPD.
# ::tokens ["I", "wonder", "if", "France", "'s", "police", "will", "blame", "everyone", "BUT", "the", "shooters", ".", "Like", "NYPD", "."]
# ::lemmas ["i", "wonder", "if", "France", "'s", "police", "will", "blame", "everyone", "but", "the", "shooter", ".", "like", "NYPD", "."]
(c2-1 / multi-sentence
      :snt1 (c2-0 / wonder-01
                  :ARG0 (c2-5 / i)
                  :ARG1 (c2-13 / truth-value
                               :polarity-of (c2-2 / blame-01
                                                  :ARG0 (c2-8 / police
                                                              :mod (c2-10 / country
                                                                          :name (c2-6 / name
                                                                                      :op1 "France")))
                                                  :ARG1 (c2-4 / everyone
                                                              :ARG2-of (c2-3 / except-01
                                                                             :ARG1 (c2-14 / person
                                                                                          :ARG0-of (c2-12 / shoot-02)))))))
      :snt2 (c2-9 / resemble-01
                  :ARG2 c2-8
                  :mod (c2-11 / city
                              :name (c2-7 / name
                                          :op1 "NYPD"))))

# ::snt : Meet Ahmed Merabet, first officer on scene to die at ,
# ::tokens [":", "Meet", "Ahmed", "Merabet", ",", "first", "officer", "on", "scene", "to", "die", "at", ","]
# ::lemmas [":", "Meet", "Ahmed", "Merabet", ",", "first", "officer", "on", "scene", "to", "die", "at", ","]
(c3-3 / meet-02
      :ARG0 (c3-1 / you)
      :ARG1 (c3-6 / person
                  :name (c3-5 / name
                              :op1 "Ahmed"
                              :op2 "Merabet")
                  :ARG0-of (c3-0 / have-org-role-91
                                 :ARG2 (c3-4 / officer))
                  :ARG1-of (c3-7 / die-01
                                 :location (c3-8 / scene))
                  :ord (c3-2 / ordinal-entity
                             :value 1))
      :mode imperative)

# ::snt nasty comment to make about an officer dying in the line of duty. Condolences to all the families of victims.
# ::tokens ["nasty", "comment", "to", "make", "about", "an", "officer", "dying", "in", "the", "line", "of", "duty", ".", "Condolences", "to", "all", "the", "families", "of", "victims", "."]
# ::lemmas ["nasty", "comment", "to", "make", "about", "an", "officer", "die", "in", "the", "line", "of", "duty", ".", "condolence", "to", "all", "the", "family", "of", "victim", "."]
(c4-3 / multi-sentence
      :snt1 (c4-9 / comment-01
                  :ARG1 (c4-8 / die-01
                              :ARG1 (c4-4 / officer)
                              :ARG1-of (c4-10 / cause-01
                                              :ARG0 (c4-1 / duty)))
                  :mod (c4-5 / nasty))
      :snt2 (c4-11 / Condolence
                   :beneficiary (c4-2 / family
                                      :ARG1-of (c4-0 / have-rel-role-91
                                                     :ARG0 (c4-6 / victim)
                                                     :ARG2 (c4-7 / member))
                                      :mod (c4-12 / all))))

# ::snt Killed in the line of duty.May God have mercy on your soul.
# ::tokens ["Killed", "in", "the", "line", "of", "duty", ".", "May", "God", "have", "mercy", "on", "your", "soul", "."]
# ::lemmas ["kill", "in", "the", "line", "of", "duty", ".", "may", "God", "have", "mercy", "on", "your", "soul", "."]
(c5-3 / multi-sentence
      :snt1 (c5-9 / kill-01
                  :ARG1-of (c5-2 / line-01
                                 :ARG2 (c5-6 / duty)))
      :snt2 (c5-0 / wish-01
                  :ARG1 (c5-5 / mercy
                              :beneficiary (c5-8 / soul
                                                 :part-of (c5-1 / you))
                              :beneficiary (c5-7 / person
                                                 :name (c5-4 / name
                                                             :op1 "God")))
                  :ARG2 c5-1))

# ::snt the problem is Islam, it matters not a jot if Muslims are amongst the victims
# ::tokens ["the", "problem", "is", "Islam", ",", "it", "matters", "not", "a", "jot", "if", "Muslims", "are", "amongst", "the", "victims"]
# ::lemmas ["the", "problem", "be", "Islam", ",", "it", "matter", "not", "a", "jot", "if", "Muslims", "be", "amongst", "the", "victim"]
(c6-8 / and
      :op1 (c6-5 / problem
                 :domain (c6-6 / religious-group
                               :name (c6-3 / name
                                           :op1 "Islam")))
      :op2 (c6-1 / matter-01
                 :ARG1 (c6-2 / include-01
                             :ARG1 (c6-7 / person
                                         :mod c6-6)
                             :ARG2 (c6-4 / victim))
                 :degree (c6-0 / jot)
                 :polarity -))

# ::snt proving not all Muslims are terrorists...but these were.
# ::tokens ["proving", "not", "all", "Muslims", "are", "terrorists", "...", "but", "these", "were", "."]
# ::lemmas ["prove", "not", "all", "Muslims", "be", "terrorist", "...", "but", "these", "be", "."]
(c7-3 / contrast-01
      :ARG1 (c7-1 / prove-01
                  :ARG1 (c7-5 / terrorist
                              :domain (c7-6 / person
                                            :mod (c7-2 / religious-group
                                                       :name (c7-0 / name
                                                                   :op1 "Islam"))
                                            :mod (c7-7 / all
                                                       :polarity -))))
      :ARG2 (c7-4 / this))

# ::snt Awwww...
# ::tokens ["Awwww", "..."]
# ::lemmas ["Awwww", "..."]
(c8-0 / aw
      :mode expressive)

# ::snt Ironically tragic. He was a Muslim.
# ::tokens ["Ironically", "tragic", ".", "He", "was", "a", "Muslim", "."]
# ::lemmas ["ironically", "tragic", ".", "he", "be", "a", "Muslim", "."]
(c9-1 / multi-sentence
      :snt1 (c9-5 / tragic
                  :mod (c9-2 / ironic))
      :snt2 (c9-4 / religious-group
                  :name (c9-3 / name
                              :op1 "Muslim")
                  :domain (c9-0 / he)))

# ::snt A muslim victim of deranged muslims. RIP Ahmed Merabet!
# ::tokens ["A", "muslim", "victim", "of", "deranged", "muslims", ".", "RIP", "Ahmed", "Merabet", "!"]
# ::lemmas ["a", "muslim", "victim", "of", "derange", "muslim", ".", "RIP", "Ahmed", "Merabet", "!"]
(c10-1 / multi-sentence
       :snt1 (c10-5 / victim
                    :domain (c10-6 / person
                                   :mod (c10-7 / religious-group
                                               :name (c10-4 / name
                                                            :op1 "Islam")))
                    :ARG1-of (c10-8 / cause-01
                                    :ARG0 (c10-12 / person
                                                  :mod c10-7
                                                  :ARG1-of (c10-9 / derange-01))))
       :snt2 (c10-0 / wish-01
                    :ARG1 (c10-3 / rest-01
                                 :ARG1 (c10-2 / person
                                              :name (c10-10 / name
                                                            :op1 "Ahmed"
                                                            :op2 "Merabet"))
                                 :manner (c10-11 / peace))))

# ::snt Ahmed Merabet. May God honour you.There is only one God. To think that God can be diminished means that one's faith is weak.
# ::tokens ["Ahmed", "Merabet", ".", "May", "God", "honour", "you", ".", "There", "is", "only", "one", "God", ".", "To", "think", "that", "God", "can", "be", "diminished", "means", "that", "one", "'s", "faith", "is", "weak", "."]
# ::lemmas ["Ahmed", "Merabet", ".", "may", "God", "honour", "you", ".", "there", "be", "only", "one", "God", ".", "to", "think", "that", "God", "can", "be", "diminish", "mean", "that", "one", "'s", "faith", "be", "weak", "."]
(c11-4 / multi-sentence
       :snt1 (c11-11 / person
                     :name (c11-9 / name
                                  :op1 "Ahmed"
                                  :op2 "Merabet"))
       :snt2 (c11-1 / wish-01
                    :ARG1 (c11-0 / honor-01
                                 :ARG0 (c11-16 / person
                                               :name (c11-10 / name
                                                             :op1 "God"))
                                 :ARG1 (c11-2 / you)))
       :snt3 (c11-14 / god
                     :mod (c11-7 / only)
                     :quant 1)
       :snt4 (c11-12 / mean-01
                     :ARG1 (c11-15 / think-01
                                   :ARG1 (c11-6 / possible-01
                                                :ARG1 (c11-13 / diminish-01
                                                              :ARG1 c11-16)))
                     :ARG2 (c11-8 / weak-02
                                  :ARG1 (c11-3 / faith
                                               :poss (c11-5 / one)))))

# ::snt May he rest in peace.
# ::tokens ["May", "he", "rest", "in", "peace", "."]
# ::lemmas ["May", "he", "rest", "in", "peace", "."]
(c12-1 / wish-01
       :ARG1 (c12-3 / rest-01
                    :ARG1 (c12-0 / he)
                    :manner (c12-2 / peace)))

# ::snt the problem is hate/intolerance. If not religion the psychos will find something else to kill over - like race
# ::tokens ["the", "problem", "is", "hate", "/", "intolerance", ".", "If", "not", "religion", "the", "psychos", "will", "find", "something", "else", "to", "kill", "over", "-", "like", "race"]
# ::lemmas ["the", "problem", "be", "hate", "/", "intolerance", ".", "if", "not", "religion", "the", "psychos", "will", "find", "something", "else", "to", "kill", "over", "-", "like", "race"]
(c13-2 / multi-sentence
       :snt1 (c13-8 / problem
                    :domain (c13-10 / slash
                                    :op1 (c13-0 / hate-01)
                                    :op2 (c13-11 / tolerate-01
                                                 :polarity -)))
       :snt2 (c13-1 / find-01
                    :ARG0 (c13-12 / psycho)
                    :ARG1 (c13-3 / something
                                 :mod (c13-4 / else)
                                 :ARG1-of (c13-6 / kill-01
                                                 :ARG0 c13-12
                                                 :ARG1-of (c13-5 / instead-of-91
                                                                 :ARG2 (c13-9 / race))))
                    :condition (c13-7 / religion
                                      :polarity -)))
