# ::snt : Gendarmerie arrive at the hostage taking in Dammartin-en-Goele. That's a stock photo, taken from the in !
# ::tokens [":", "Gendarmerie", "arrive", "at", "the", "hostage", "taking", "in", "Dammartin", "-", "en", "-", "Goele", ".", "That", "'s", "a", "stock", "photo", ",", "taken", "from", "the", "in", "!"]
# ::lemmas [":", "Gendarmerie", "arrive", "at", "the", "hostage", "taking", "in", "Dammartin", "-", "en", "-", "Goele", ".", "that", "be", "a", "stock", "photo", ",", "take", "from", "the", "in", "!"]
(c1-1 / multi-sentence
      :snt1 (c1-11 / arrive-01
                   :ARG1 (c1-5 / military
                               :name (c1-3 / name
                                           :op1 "Gendarmerie"))
                   :ARG4 (c1-10 / take-01
                                :ARG1 (c1-0 / hostage)
                                :location (c1-7 / city-district
                                                :name (c1-4 / name
                                                            :op1 "Dammartin-en-Goele"))))
      :snt2 (c1-6 / photo
                  :mod (c1-9 / stock)
                  :domain (c1-8 / that)
                  :ARG1-of c1-10
                  :ARG3 (c1-2 / in)))

# ::snt : Gendarmerie arrive at the hostage taking in Dammartin-en-Goele. Latest
# ::tokens [":", "Gendarmerie", "arrive", "at", "the", "hostage", "taking", "in", "Dammartin", "-", "en", "-", "Goele", ".", "Latest"]
# ::lemmas [":", "Gendarmerie", "arrive", "at", "the", "hostage", "taking", "in", "Dammartin", "-", "en", "-", "Goele", ".", "late"]
(c2-2 / multi-sentence
      :snt1 (c2-9 / arrive-01
                  :ARG1 (c2-6 / military
                              :name (c2-4 / name
                                          :op1 "Gendarmerie"))
                  :ARG4 (c2-8 / take-01
                              :ARG1 (c2-0 / hostage)
                              :location (c2-7 / city
                                              :name (c2-5 / name
                                                          :op1 "Dammartin-en-Goele"))))
      :snt2 (c2-1 / have-mod-91
                  :ARG2 (c2-3 / last)))

# ::snt :lets just crush the ridiculous ones.
# ::tokens [":", "lets", "just", "crush", "the", "ridiculous", "ones", "."]
# ::lemmas [":", "lets", "just", "crush", "the", "ridiculous", "one", "."]
(c3-4 / crush-01
      :ARG0 (c3-1 / we)
      :ARG1 (c3-2 / one
                  :ARG1-of (c3-3 / ridiculous-02))
      :mod (c3-0 / just)
      :mode imperative)

# ::snt Poor hostages
# ::tokens ["Poor", "hostages"]
# ::lemmas ["poor", "hostage"]
(c4-0 / hostage
      :mod (c4-1 / poor))

# ::snt crush all fundamentals
# ::tokens ["crush", "all", "fundamentals"]
# ::lemmas ["crush", "all", "fundamental"]
(c5-2 / crush-01
      :ARG0 (c5-0 / you)
      :ARG1 (c5-1 / fundamental
                  :mod (c5-3 / all))
      :mode imperative)

# ::snt The are using it too!
# ::tokens ["The", "are", "using", "it", "too", "!"]
# ::lemmas ["the", "be", "use", "it", "too", "!"]
(c6-1 / use-01
      :ARG0 (c6-0 / they)
      :ARG1 (c6-2 / it)
      :mod (c6-3 / too))

# ::snt : Gendarmerie arrive at the hostage taking in Dammartin-en-Goele. Latest
# ::tokens [":", "Gendarmerie", "arrive", "at", "the", "hostage", "taking", "in", "Dammartin", "-", "en", "-", "Goele", ".", "Latest"]
# ::lemmas [":", "Gendarmerie", "arrive", "at", "the", "hostage", "taking", "in", "Dammartin", "-", "en", "-", "Goele", ".", "late"]
(c7-2 / multi-sentence
      :snt1 (c7-9 / arrive-01
                  :ARG1 (c7-6 / military
                              :name (c7-4 / name
                                          :op1 "Gendarmerie"))
                  :ARG4 (c7-8 / take-01
                              :ARG1 (c7-0 / hostage)
                              :location (c7-7 / city
                                              :name (c7-5 / name
                                                          :op1 "Dammartin-en-Goele"))))
      :snt2 (c7-1 / have-mod-91
                  :ARG2 (c7-3 / last)))

# ::snt :Sipan Hemo, Trkiyede ID terristlerini eiten ok sayda kamp var!
# ::tokens [":", "Sipan", "Hemo", ",", "Trkiyede", "ID", "terristlerini", "eiten", "ok", "sayda", "kamp", "var", "!"]
# ::lemmas [":", "Sipan", "Hemo", ",", "Trkiyede", "ID", "terristlerini", "eiten", "ok", "sayda", "kamp", "var", "!"]
(c8-6 / say-01
      :ARG0 (c8-9 / and
                  :op1 (c8-4 / person
                             :name (c8-2 / name
                                         :op1 "Sipan"
                                         :op2 "Hemo"))
                  :op2 (c8-8 / person
                             :name (c8-3 / name
                                         :op1 "Tkiyede"
                                         :op2 "ID"))
                  :op3 (c8-0 / person
                             :name (c8-5 / name
                                         :op1 "Terristlerini")))
      :ARG1 (c8-1 / okay-04
                  :ARG0 c8-9
                  :ARG1 (c8-7 / kamp)
                  :ARG1 c8-6)
      :ARG2 c8-9)

# ::snt must eliminate terror &amp; its supporters but not specify terrorist has no religion
# ::tokens ["must", "eliminate", "terror", "&", "amp", ";", "its", "supporters", "but", "not", "specify", "terrorist", "has", "no", "religion"]
# ::lemmas ["must", "eliminate", "terror", "&", "amp", ";", "its", "supporter", "but", "not", "specify", "terrorist", "have", "no", "religion"]
(c9-5 / contrast-01
      :ARG1 (c9-1 / obligate-01
                  :ARG2 (c9-2 / eliminate-01
                              :ARG1 (c9-9 / and
                                          :op1 (c9-8 / terror)
                                          :op2 (c9-3 / amp))))
      :ARG2 (c9-7 / specify-01
                  :ARG1 (c9-0 / have-03
                              :ARG0 (c9-6 / terrorist)
                              :ARG1 (c9-4 / religion)
                              :polarity -)
                  :polarity -))

# ::snt this particular brand of terrorism undeniably has a religion. There is no getting away from that i'm afraid.
# ::tokens ["this", "particular", "brand", "of", "terrorism", "undeniably", "has", "a", "religion", ".", "There", "is", "no", "getting", "away", "from", "that", "i", "'m", "afraid", "."]
# ::lemmas ["this", "particular", "brand", "of", "terrorism", "undeniably", "have", "a", "religion", ".", "there", "be", "no", "get", "away", "from", "that", "i", "be", "afraid", "."]
(c10-2 / multi-sentence
       :snt1 (c10-0 / have-03
                    :ARG0 (c10-3 / brand-01
                                 :ARG1 (c10-11 / terrorism)
                                 :mod (c10-6 / particular)
                                 :mod (c10-10 / this))
                    :ARG1 (c10-7 / religion)
                    :ARG1-of (c10-8 / deny-01
                                    :ARG1-of (c10-12 / possible-01
                                                     :polarity -)))
       :snt2 (c10-1 / fear-01
                    :ARG0 (c10-4 / i)
                    :ARG1 (c10-9 / get-05
                                 :ARG2 (c10-13 / away
                                               :op1 (c10-5 / that))
                                 :polarity -)))

# ::snt srailli Tmgeneral Aviv Koavi: Trkiyede El Kaide ss var!
# ::tokens ["srailli", "Tmgeneral", "Aviv", "Koavi", ":", "Trkiyede", "El", "Kaide", "ss", "var", "!"]
# ::lemmas ["srailli", "Tmgeneral", "Aviv", "Koavi", ":", "Trkiyede", "El", "Kaide", "ss", "var", "!"]
(c11-4 / person
       :name (c11-2 / name
                    :op1 "Aviv"
                    :op2 "Koavi")
       :ARG0-of (c11-0 / have-org-role-91
                       :ARG2 (c11-7 / general))
       :mod (c11-8 / person
                   :name (c11-3 / name
                                :op1 "Tmgeneral"
                                :op2 "Aviv"
                                :op3 "Koavi"))
       :mod (c11-1 / person
                   :name (c11-5 / name
                                :op1 "Tkiyede"
                                :op2 "El"
                                :op3 "Kaide"))
       :mod (c11-6 / var
                   :mode expressive))

# ::snt Glen's Condemnation Message of Terrorism
# ::tokens ["Glen", "'s", "Condemnation", "Message", "of", "Terrorism"]
# ::lemmas ["Glen", "'s", "Condemnation", "Message", "of", "Terrorism"]
(c12-0 / message-01
       :ARG0 (c12-2 / person
                    :name (c12-1 / name
                                 :op1 "Glen"))
       :ARG1 (c12-3 / condemn-01
                    :ARG1 (c12-4 / terrorism)))

# ::snt the problem with fundamentalism, is the fundamentals.
# ::tokens ["the", "problem", "with", "fundamentalism", ",", "is", "the", "fundamentals", "."]
# ::lemmas ["the", "problem", "with", "fundamentalism", ",", "be", "the", "fundamental", "."]
(c13-0 / problem
       :topic (c13-1 / fundamentalism
                     :domain-of c13-0))

# ::snt Real Muslims Cannot be Terrorists
# ::tokens ["Real", "Muslims", "Can", "not", "be", "Terrorists"]
# ::lemmas ["real", "Muslims", "can", "not", "be", "Terrorists"]
(c14-2 / possible-01
       :ARG1 (c14-4 / terrorist
                    :domain (c14-5 / person
                                   :mod (c14-3 / religious-group
                                               :name (c14-1 / name
                                                            :op1 "Islam"))
                                   :ARG1-of (c14-0 / real-04)))
       :polarity -)

# ::snt a Saudi Bedouin form of Islam is main cause of terror
# ::tokens ["a", "Saudi", "Bedouin", "form", "of", "Islam", "is", "main", "cause", "of", "terror"]
# ::lemmas ["a", "Saudi", "Bedouin", "form", "of", "Islam", "be", "main", "cause", "of", "terror"]
(c15-5 / cause-01
       :ARG0 (c15-0 / form
                    :mod (c15-4 / religious-group
                                :name (c15-2 / name
                                             :op1 "Islam"))
                    :mod (c15-6 / country
                                :name (c15-3 / name
                                             :op1 "Saudi"
                                             :op2 "Arabia")))
       :ARG1 (c15-7 / terror-02)
       :mod (c15-1 / main))
