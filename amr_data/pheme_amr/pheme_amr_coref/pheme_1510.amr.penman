# ::snt His bio says "professionally funny." He must be dumb just as a hobby.
# ::tokens ["His", "bio", "says", "\"", "professionally", "funny", ".", "\"", "He", "must", "be", "dumb", "just", "as", "a", "hobby", "."]
# ::lemmas ["his", "bio", "say", "\"", "professionally", "funny", ".", "\"", "he", "must", "be", "dumb", "just", "as", "a", "hobby", "."]
(c1-3 / multi-sentence
      :snt1 (c1-9 / say-01
                  :ARG0 (c1-4 / bio
                              :poss (c1-0 / he))
                  :ARG1 (c1-2 / funny-02
                              :ARG1 c1-0
                              :manner (c1-7 / professional)))
      :snt2 (c1-5 / infer-01
                  :ARG1 (c1-8 / dumb
                              :domain (c1-10 / he)
                              :prep-as (c1-6 / hobby
                                             :mod (c1-1 / just)))))

# ::snt If the kid points a gun at the officer. Their I just named one. You didn't say name one crime this kid did.
# ::tokens ["If", "the", "kid", "points", "a", "gun", "at", "the", "officer", ".", "Their", "I", "just", "named", "one", ".", "You", "did", "n't", "say", "name", "one", "crime", "this", "kid", "did", "."]
# ::lemmas ["if", "the", "kid", "point", "a", "gun", "at", "the", "officer", ".", "their", "i", "just", "name", "one", ".", "you", "do", "not", "say", "name", "one", "crime", "this", "kid", "do", "."]
(c2-4 / multi-sentence
      :snt1 (c2-0 / have-condition-91
                  :ARG2 (c2-10 / point-01
                               :ARG0 (c2-15 / kid)
                               :ARG1 (c2-12 / gun)
                               :ARG2 (c2-5 / officer)))
      :snt2 (c2-8 / name-01
                  :ARG0 (c2-7 / i)
                  :ARG1 (c2-14 / they)
                  :ARG2 (c2-3 / one)
                  :mod (c2-1 / just))
      :snt3 (c2-16 / say-01
                   :ARG0 (c2-2 / you)
                   :ARG1 (c2-9 / name-01
                               :ARG0 c2-2
                               :ARG1 (c2-11 / crime-02
                                            :ARG0 (c2-6 / kid
                                                        :mod (c2-13 / this))
                                            :quant 1))
                   :polarity -))

# ::snt love all these nigger CSI experts
# ::tokens ["love", "all", "these", "nigger", "CSI", "experts"]
# ::lemmas ["love", "all", "these", "nigger", "CSI", "expert"]
(c3-1 / love-01
      :ARG1 (c3-6 / person
                  :ARG0-of (c3-0 / have-org-role-91
                                 :ARG1 (c3-2 / organization
                                             :name (c3-4 / name
                                                         :op1 "CSI"))
                                 :ARG2 c3-6
                                 :mod (c3-5 / nigger)))
      :mod (c3-7 / this)
      :mod (c3-8 / all)
      :ARG1-of (c3-3 / expert-01))

# ::snt I am Groot
# ::tokens ["I", "am", "Groot"]
# ::lemmas ["i", "be", "Groot"]
(c4-1 / person
      :name (c4-0 / name
                  :op1 "Groot")
      :domain (c4-2 / i))

# ::snt Here it is!My dedication to MICHAEL BROWNPLEASE SHARE TO FIGHT AGINST POLICE BRUTALITY
# ::tokens ["Here", "it", "is!My", "dedication", "to", "MICHAEL", "BROWNPLEASE", "SHARE", "TO", "FIGHT", "AGINST", "POLICE", "BRUTALITY"]
# ::lemmas ["here", "it", "is!My", "dedication", "to", "MICHAEL", "BROWNPLEASE", "SHARE", "to", "fight", "aginst", "police", "BRUTALITY"]
(c5-2 / multi-sentence
      :snt1 (c5-4 / it
                  :location (c5-0 / here))
      :snt2 (c5-7 / dedicate-01
                  :ARG0 (c5-8 / i
                              :ARG1-of c5-7)
                  :ARG2 (c5-9 / show-01
                              :ARG0 (c5-6 / person
                                          :name (c5-5 / name
                                                      :op1 "Michael"
                                                      :op2 "Brown"))
                              :ARG1 (c5-1 / fight-01
                                          :ARG0 c5-6
                                          :ARG1 (c5-3 / ban-01
                                                      :ARG1 (c5-10 / police)))
                              :mode imperative)))

# ::snt You are blocked.
# ::tokens ["You", "are", "blocked", "."]
# ::lemmas ["you", "be", "block", "."]
(c6-1 / block-01
      :ARG1 (c6-0 / you))

# ::snt amen
# ::tokens ["amen"]
# ::lemmas ["amen"]
(c7-0 / amen)

# ::snt i am Groot
# ::tokens ["i", "am", "Groot"]
# ::lemmas ["i", "be", "Groot"]
(c8-1 / person
      :name (c8-0 / name
                  :op1 "Groot")
      :domain (c8-2 / i))

# ::snt Oh, so it's selective innocent until proven guilty. Got it.
# ::tokens ["Oh", ",", "so", "it", "'s", "selective", "innocent", "until", "proven", "guilty", ".", "Got", "it", "."]
# ::lemmas ["oh", ",", "so", "it", "be", "selective", "innocent", "until", "prove", "guilty", ".", "get", "it", "."]
(c9-0 / multi-sentence
      :snt1 (c9-3 / innocent-01
                  :ARG1 (c9-6 / it)
                  :mod (c9-8 / selective)
                  :time (c9-1 / until
                              :op1 (c9-4 / prove-01
                                         :ARG1 (c9-7 / guilty-01
                                                     :ARG1 c9-6)))
                  :mod (c9-2 / oh
                             :mode expressive))
      :snt2 (c9-5 / get-02
                  :ARG1 c9-6))

# ::snt unfortunately you are correct.
# ::tokens ["unfortunately", "you", "are", "correct", "."]
# ::lemmas ["unfortunately", "you", "be", "correct", "."]
(c10-1 / fortunate-01
       :ARG2 (c10-2 / correct-02
                    :ARG1 (c10-0 / you))
       :polarity -)

# ::snt . get your racist ass out of here 'punk thug'
# ::tokens [".", "get", "your", "racist", "ass", "out", "of", "here", "'", "punk", "thug", "'"]
# ::lemmas [".", "get", "your", "racist", "ass", "out", "of", "here", "'", "punk", "thug", "'"]
(c11-7 / say-01
       :ARG0 (c11-3 / i)
       :ARG1 (c11-6 / get-05
                    :ARG0 (c11-1 / you
                                 :mod (c11-8 / thug
                                             :mod (c11-4 / punk))
                                 :mod (c11-9 / ass
                                             :mod (c11-5 / racist))
                                 :ARG1-of c11-6)
                    :ARG2 (c11-2 / out-06
                                 :ARG1 c11-1
                                 :ARG2 (c11-0 / here))
                    :mode imperative)
       :ARG2 c11-1)

# ::snt You can say what you want about but that doesn't make him guilty. That police officer though? He killed him.
# ::tokens ["You", "can", "say", "what", "you", "want", "about", "but", "that", "does", "n't", "make", "him", "guilty", ".", "That", "police", "officer", "though", "?", "He", "killed", "him", "."]
# ::lemmas ["you", "can", "say", "what", "you", "want", "about", "but", "that", "do", "not", "make", "he", "guilty", ".", "that", "police", "officer", "though", "?", "he", "kill", "he", "."]
(c12-0 / multi-sentence
       :snt1 (c12-16 / contrast-01
                     :ARG1 (c12-2 / possible-01
                                  :ARG1 (c12-3 / say-01
                                               :ARG0 (c12-14 / you)
                                               :ARG1 (c12-18 / thing
                                                             :ARG1-of (c12-11 / want-01
                                                                              :ARG0 c12-14))))
                     :ARG2 (c12-9 / make-02
                                  :ARG0 c12-3
                                  :ARG1 (c12-10 / guilty-01
                                                :ARG1 (c12-7 / he))
                                  :polarity -))
       :snt2 (c12-6 / have-concession-91
                    :ARG1 (c12-13 / kill-01
                                  :ARG0 (c12-4 / person
                                               :ARG0-of (c12-1 / have-org-role-91
                                                               :ARG1 (c12-8 / police)
                                                               :ARG2 (c12-15 / officer))
                                               :mod (c12-17 / that))
                                  :ARG1 (c12-12 / he))
                    :polarity (c12-5 / amr-unknown)))

# ::snt You sir, are a deluded idiot.
# ::tokens ["You", "sir", ",", "are", "a", "deluded", "idiot", "."]
# ::lemmas ["you", "sir", ",", "be", "a", "delude", "idiot", "."]
(c13-3 / idiot
       :domain (c13-1 / you
                      :mod (c13-0 / sir))
       :ARG1-of (c13-2 / delude-01))

# ::snt The same "argument" from proPals. NOTHING exonerates Israel. NOTHING makes Gazan's guilty. Israel killed them
# ::tokens ["The", "same", "\"", "argument", "\"", "from", "proPals", ".", "NOTHING", "exonerates", "Israel", ".", "NOTHING", "makes", "Gazan", "'s", "guilty", ".", "Israel", "killed", "them"]
# ::lemmas ["the", "same", "\"", "argument", "\"", "from", "propal", ".", "nothing", "exonerate", "Israel", ".", "nothing", "make", "Gazan", "'s", "guilty", ".", "Israel", "kill", "they"]
(c14-0 / multi-sentence
       :snt1 (c14-7 / argue-01
                    :ARG0 (c14-3 / person
                                 :ARG0-of (c14-8 / favor-01
                                                 :ARG1 (c14-6 / person
                                                              :name (c14-11 / name
                                                                            :op1 "Pals"))))
                    :ARG1-of (c14-5 / same-01))
       :snt2 (c14-10 / exonerate-01
                     :ARG0 (c14-16 / nothing)
                     :ARG1 (c14-17 / country
                                   :name (c14-1 / name
                                                :op1 "Israel")))
       :snt3 (c14-12 / make-02
                     :ARG0 c14-16)
       :ARG1 (c14-13 / guilty-01
                     :ARG1 (c14-9 / person
                                  :mod (c14-4 / country
                                              :name (c14-2 / name
                                                           :op1 "Gazan"))))
       :snt4 (c14-15 / kill-01
                     :ARG0 (c14-14 / country
                                   :name (c14-19 / name
                                                 :op1 "Israel"))
                     :ARG1 (c14-18 / they)))

# ::snt alleged
# ::tokens ["alleged"]
# ::lemmas ["allege"]
(c15-0 / thing
       :ARG1-of (c15-1 / allege-01))

# ::snt Fat guy, entry hole is small, fat can close up. Blood pools down after all. Not saying either way but not imposs.
# ::tokens ["Fat", "guy", ",", "entry", "hole", "is", "small", ",", "fat", "can", "close", "up", ".", "Blood", "pools", "down", "after", "all", ".", "Not", "saying", "either", "way", "but", "not", "imposs", "."]
# ::lemmas ["Fat", "guy", ",", "entry", "hole", "be", "small", ",", "fat", "can", "close", "up", ".", "blood", "pool", "down", "after", "all", ".", "not", "say", "either", "way", "but", "not", "imposs", "."]
(c16-3 / multi-sentence
       :snt1 (c16-17 / and
                     :op1 (c16-13 / guy
                                  :mod (c16-2 / fat))
                     :op2 (c16-15 / small
                                  :domain (c16-0 / hole
                                                 :ARG2-of (c16-6 / enter-01)))
                     :op3 (c16-10 / possible-01
                                  :ARG1 (c16-12 / close-up-04
                                                :ARG1 c16-13)))
       :snt2 (c16-16 / pool-01
                     :ARG1 (c16-4 / blood)
                     :mod (c16-11 / down)
                     :concession (c16-8 / after-all))
       :snt3 (c16-14 / contrast-01
                     :ARG1 (c16-7 / say-01
                                  :ARG1 (c16-1 / way
                                               :mod (c16-5 / either))
                                  :polarity -)
                     :ARG2 (c16-9 / imposs-01)))

# ::snt HaHa. Can't be racist. I am a minority. I guess you are mad because you are proven wrong. The kid was crminal. You sound mad.
# ::tokens ["HaHa", ".", "Ca", "n't", "be", "racist", ".", "I", "am", "a", "minority", ".", "I", "guess", "you", "are", "mad", "because", "you", "are", "proven", "wrong", ".", "The", "kid", "was", "crminal", ".", "You", "sound", "mad", "."]
# ::lemmas ["HaHa", ".", "can", "not", "be", "racist", ".", "i", "be", "a", "minority", ".", "i", "guess", "you", "be", "mad", "because", "you", "be", "prove", "wrong", ".", "the", "kid", "be", "crminal", ".", "you", "sound", "mad", "."]
(c17-3 / multi-sentence
       :snt1 (c17-5 / possible-01
                    :ARG1 (c17-6 / racist)
                    :polarity -)
       :snt2 (c17-7 / minority
                    :domain (c17-4 / i))
       :snt3 (c17-8 / guess-01
                    :ARG0 c17-4
                    :ARG1 (c17-2 / mad-04
                                 :ARG1 (c17-0 / you)
                                 :ARG1-of (c17-9 / cause-01
                                                 :ARG0 (c17-14 / prove-01
                                                               :ARG1 (c17-1 / wrong-04
                                                                            :ARG1 c17-0)))))
       :snt4 (c17-10 / crminal
                     :domain (c17-13 / kid))
       :snt5 (c17-11 / sound-01
                     :ARG1 (c17-15 / you)
                     :ARG2 (c17-12 / mad-04
                                   :ARG1 c17-15)))

# ::snt sorry, I didn't realize I was engaging some chump who follows his phone company.
# ::tokens ["sorry", ",", "I", "did", "n't", "realize", "I", "was", "engaging", "some", "chump", "who", "follows", "his", "phone", "company", "."]
# ::lemmas ["sorry", ",", "i", "do", "not", "realize", "i", "be", "engage", "some", "chump", "who", "follow", "his", "phone", "company", "."]
(c18-8 / sorry-01
       :ARG1 (c18-3 / i)
       :ARG2 (c18-5 / realize-01
                    :ARG0 c18-3
                    :ARG1 (c18-1 / engage-01
                                 :ARG0 c18-3
                                 :ARG1 (c18-6 / chump
                                              :mod (c18-2 / some)
                                              :ARG0-of (c18-0 / follow-02
                                                              :ARG1 (c18-7 / company
                                                                           :mod (c18-4 / phone)
                                                                           :poss c18-6))))
                    :polarity -))

# ::snt I don't see any blood on his back. Did physics reverse when he was shot? Something ain't right.
# ::tokens ["I", "do", "n't", "see", "any", "blood", "on", "his", "back", ".", "Did", "physics", "reverse", "when", "he", "was", "shot", "?", "Something", "ai", "n't", "right", "."]
# ::lemmas ["i", "do", "not", "see", "any", "blood", "on", "his", "back", ".", "do", "physics", "reverse", "when", "he", "be", "shoot", "?", "something", "be", "not", "right", "."]
(c19-2 / multi-sentence
       :snt1 (c19-12 / see-01
                     :ARG0 (c19-7 / i)
                     :ARG1 (c19-4 / blood
                                  :mod (c19-13 / any)
                                  :location (c19-11 / back
                                                    :part-of (c19-0 / he)))
                     :polarity -)
       :snt2 (c19-10 / reverse-01
                     :polarity (c19-6 / amr-unknown)
                     :ARG1 (c19-9 / physics)
                     :time (c19-5 / shoot-02
                                  :ARG1 (c19-1 / he)))
       :snt3 (c19-8 / right-06
                    :ARG1 (c19-3 / something)
                    :polarity -))

# ::snt Doesn't make the cop guilty either. Were you there? Didn't think so. You keep trying.
# ::tokens ["Does", "n't", "make", "the", "cop", "guilty", "either", ".", "Were", "you", "there", "?", "Did", "n't", "think", "so", ".", "You", "keep", "trying", "."]
# ::lemmas ["do", "not", "make", "the", "cop", "guilty", "either", ".", "be", "you", "there", "?", "do", "not", "think", "so", ".", "you", "keep", "try", "."]
(c20-1 / multi-sentence
       :snt1 (c20-7 / make-02
                    :ARG1 (c20-9 / guilty-01
                                 :ARG1 (c20-8 / cop))
                    :mod (c20-3 / either)
                    :polarity -)
       :snt2 (c20-2 / be-located-at-91
                    :polarity (c20-13 / amr-unknown)
                    :ARG1 (c20-0 / you)
                    :ARG2 (c20-12 / there))
       :snt3 (c20-10 / think-01
                     :ARG0 (c20-4 / i)
                     :ARG1 (c20-11 / so)
                     :polarity -)
       :snt4 (c20-5 / keep-02
                    :ARG0 (c20-14 / you)
                    :ARG1 (c20-6 / try-01
                                 :ARG0 c20-14)))

# ::snt Actually going for an officers gun, and trying to disarm him ....probably would make him guilty. dont you think?
# ::tokens ["Actually", "going", "for", "an", "officers", "gun", ",", "and", "trying", "to", "disarm", "him", "....", "probably", "would", "make", "him", "guilty", ".", "do", "nt", "you", "think", "?"]
# ::lemmas ["actually", "go", "for", "an", "officer", "gun", ",", "and", "try", "to", "disarm", "he", "....", "probably", "would", "make", "he", "guilty", ".", "do", "not", "you", "think", "?"]
(c21-2 / multi-sentence
       :snt1 (c21-15 / and
                     :op1 (c21-10 / go-03
                                  :ARG1 (c21-8 / gun
                                               :poss (c21-7 / person
                                                            :ARG0-of (c21-0 / have-org-role-91
                                                                            :ARG2 (c21-3 / officer))))
                                  :ARG1-of (c21-4 / actual-02))
                     :op2 (c21-13 / try-01
                                  :ARG1 (c21-9 / disarm-01
                                               :ARG1 c21-7))
                     :ARG0-of (c21-11 / make-02
                                      :ARG1 (c21-5 / guilty-01
                                                   :ARG1 c21-7)
                                      :mod (c21-14 / probable)))
       :snt2 (c21-12 / think-01
                     :ARG0 (c21-1 / you)
                     :ARG1 (c21-6 / amr-unknown)
                     :polarity -))

# ::snt The alleged theft isn't justification for the shooting, but we do now know that they weren't stopped for walking in the street.
# ::tokens ["The", "alleged", "theft", "is", "n't", "justification", "for", "the", "shooting", ",", "but", "we", "do", "now", "know", "that", "they", "were", "n't", "stopped", "for", "walking", "in", "the", "street", "."]
# ::lemmas ["the", "allege", "theft", "be", "not", "justification", "for", "the", "shooting", ",", "but", "we", "do", "now", "know", "that", "they", "be", "not", "stop", "for", "walk", "in", "the", "street", "."]
(c22-8 / contrast-01
       :ARG1 (c22-0 / justify-01
                    :ARG1 (c22-9 / shoot-02)
                    :ARG2 (c22-4 / steal-01
                                 :ARG1-of (c22-12 / allege-01))
                    :polarity -)
       :ARG2 (c22-11 / know-01
                     :ARG0 (c22-1 / we)
                     :ARG1 (c22-2 / stop-01
                                  :ARG1 (c22-10 / they)
                                  :ARG1-of (c22-7 / cause-01
                                                  :ARG0 (c22-5 / walk-01
                                                               :ARG0 c22-10
                                                               :ARG2 (c22-3 / street)))
                                  :polarity -)
                     :time (c22-6 / now)))

# ::snt Phone company?
# ::tokens ["Phone", "company", "?"]
# ::lemmas ["phone", "company", "?"]
(c23-1 / company
       :polarity (c23-2 / amr-unknown)
       :mod (c23-0 / phone))

# ::snt If Michael Brown was shot in the back, why isn't there blood on the back of his shirt?
# ::tokens ["If", "Michael", "Brown", "was", "shot", "in", "the", "back", ",", "why", "is", "n't", "there", "blood", "on", "the", "back", "of", "his", "shirt", "?"]
# ::lemmas ["if", "Michael", "Brown", "be", "shoot", "in", "the", "back", ",", "why", "be", "not", "there", "blood", "on", "the", "back", "of", "his", "shirt", "?"]
(c24-0 / blood
       :location (c24-4 / back
                        :part-of (c24-6 / shirt
                                        :poss (c24-3 / person
                                                     :name (c24-2 / name
                                                                  :op1 "Michael"
                                                                  :op2 "Brown")
                                                     :part (c24-7 / back))))
       :ARG1-of (c24-5 / cause-01
                       :ARG0 (c24-8 / amr-unknown))
       :condition (c24-1 / shoot-02
                         :ARG1 c24-3
                         :location c24-7)
       :polarity -)

# ::snt I am Groot
# ::tokens ["I", "am", "Groot"]
# ::lemmas ["i", "be", "Groot"]
(c25-1 / person
       :name (c25-0 / name
                    :op1 "Groot")
       :domain (c25-2 / i))

# ::snt Here it is!My dedication to MICHAEL BROWNPLEASE SHARE TO FIGHT AGINST POLICE BRUTALITY
# ::tokens ["Here", "it", "is!My", "dedication", "to", "MICHAEL", "BROWNPLEASE", "SHARE", "TO", "FIGHT", "AGINST", "POLICE", "BRUTALITY"]
# ::lemmas ["here", "it", "is!My", "dedication", "to", "MICHAEL", "BROWNPLEASE", "SHARE", "to", "fight", "aginst", "police", "BRUTALITY"]
(c26-2 / multi-sentence
       :snt1 (c26-4 / it
                    :location (c26-0 / here))
       :snt2 (c26-7 / dedicate-01
                    :ARG0 (c26-8 / i
                                 :ARG1-of c26-7)
                    :ARG2 (c26-9 / show-01
                                 :ARG0 (c26-6 / person
                                              :name (c26-5 / name
                                                           :op1 "Michael"
                                                           :op2 "Brown"))
                                 :ARG1 (c26-1 / fight-01
                                              :ARG0 c26-6
                                              :ARG1 (c26-3 / ban-01
                                                           :ARG1 (c26-10 / police)))
                                 :mode imperative)))

# ::snt . Context matters.
# ::tokens [".", "Context", "matters", "."]
# ::lemmas [".", "context", "matter", "."]
(c27-1 / matter-01
       :ARG1 (c27-0 / context))

# ::snt Here it is!My dedication to MICHAEL BROWNPLEASE SHARE TO FIGHT AGINST POLICE BRUTALITY
# ::tokens ["Here", "it", "is!My", "dedication", "to", "MICHAEL", "BROWNPLEASE", "SHARE", "TO", "FIGHT", "AGINST", "POLICE", "BRUTALITY"]
# ::lemmas ["here", "it", "is!My", "dedication", "to", "MICHAEL", "BROWNPLEASE", "SHARE", "to", "fight", "aginst", "police", "BRUTALITY"]
(c28-2 / multi-sentence
       :snt1 (c28-4 / it
                    :location (c28-0 / here))
       :snt2 (c28-7 / dedicate-01
                    :ARG0 (c28-8 / i
                                 :ARG1-of c28-7)
                    :ARG2 (c28-9 / show-01
                                 :ARG0 (c28-6 / person
                                              :name (c28-5 / name
                                                           :op1 "Michael"
                                                           :op2 "Brown"))
                                 :ARG1 (c28-1 / fight-01
                                              :ARG0 c28-6
                                              :ARG1 (c28-3 / ban-01
                                                           :ARG1 (c28-10 / police)))
                                 :mode imperative)))

# ::snt . America's Grievance Industry doesn't tolerate open minds.
# ::tokens [".", "America", "'s", "Grievance", "Industry", "does", "n't", "tolerate", "open", "minds", "."]
# ::lemmas [".", "America", "'s", "Grievance", "Industry", "do", "not", "tolerate", "open", "mind", "."]
(c29-6 / tolerate-01
       :ARG0 (c29-2 / industry
                    :mod (c29-5 / Grievance)
                    :mod (c29-4 / country
                                :name (c29-3 / name
                                             :op1 "America")))
       :ARG1 (c29-0 / mind
                    :ARG1-of (c29-1 / open-05))
       :polarity -)

# ::snt lol legal expert : NOTHING makes guilty, and NOTHING exonerates the cop
# ::tokens ["lol", "legal", "expert", ":", "NOTHING", "makes", "guilty", ",", "and", "NOTHING", "exonerates", "the", "cop"]
# ::lemmas ["lol", "legal", "expert", ":", "nothing", "make", "guilty", ",", "and", "NOTHING", "exonerate", "the", "cop"]
(c30-11 / say-01
        :ARG1 (c30-12 / and
                      :op1 (c30-2 / make-02
                                  :ARG0 (c30-5 / nothing)
                                  :ARG1 (c30-9 / guilty-01))
                      :op2 (c30-4 / exonerate-01
                                  :ARG0 (c30-6 / nothing)
                                  :ARG1 (c30-8 / cop)))
        :ARG2 (c30-7 / person
                     :ARG1-of (c30-3 / expert-01
                                     :ARG2 (c30-1 / law))
                     :mod (c30-10 / laugh-01
                                  :manner (c30-0 / loud)
                                  :mode expressive)))

# ::snt :oh ok so no matter what he's innocent and no matter what the cop is guilty, even before the facts come out? Open your mind.
# ::tokens [":", "oh", "ok", "so", "no", "matter", "what", "he", "'s", "innocent", "and", "no", "matter", "what", "the", "cop", "is", "guilty", ",", "even", "before", "the", "facts", "come", "out", "?", "Open", "your", "mind", "."]
# ::lemmas [":", "oh", "ok", "so", "no", "matter", "what", "he", "be", "innocent", "and", "no", "matter", "what", "the", "cop", "be", "guilty", ",", "even", "before", "the", "fact", "come", "out", "?", "open", "your", "mind", "."]
(c31-11 / cause-01
        :ARG1 (c31-6 / open-01
                     :ARG0 (c31-0 / you
                                  :part (c31-2 / mind
                                               :ARG1-of c31-6))
                     :polarity (c31-15 / amr-unknown)
                     :concession (c31-10 / regardless-91
                                         :ARG2 (c31-8 / and
                                                      :op1 (c31-9 / innocent-01
                                                                  :ARG1 (c31-12 / cop))
                                                      :op2 (c31-13 / guilty-01
                                                                   :ARG1 c31-12))
                                         :time (c31-5 / before
                                                      :op1 (c31-14 / come-out-09
                                                                   :ARG1 (c31-1 / fact))
                                                      :mod (c31-7 / even))))
        :mod (c31-3 / oh
                    :mode expressive)
        :ARG1-of (c31-4 / okay-04))

# ::snt lol!
# ::tokens ["lol", "!"]
# ::lemmas ["lol", "!"]
(c32-0 / laugh-01
       :ARG0 (c32-1 / i)
       :manner (c32-2 / loud)
       :mode expressive)

# ::snt The right man walked away from that incident thankfully
# ::tokens ["The", "right", "man", "walked", "away", "from", "that", "incident", "thankfully"]
# ::lemmas ["the", "right", "man", "walk", "away", "from", "that", "incident", "thankfully"]
(c33-0 / walk-01
       :ARG0 (c33-1 / man
                    :ARG1-of (c33-3 / right-08))
       :direction (c33-6 / away
                         :op1 (c33-2 / incident
                                     :mod (c33-5 / that)))
       :ARG2-of (c33-4 / thankful-02
                       :ARG0 c33-1))

# ::snt Well isn't that special.
# ::tokens ["Well", "is", "n't", "that", "special", "."]
# ::lemmas ["well", "be", "not", "that", "special", "."]
(c34-0 / special-02
       :degree (c34-2 / that)
       :mod (c34-1 / well
                   :mode expressive)
       :polarity -)

# ::snt I am Groot
# ::tokens ["I", "am", "Groot"]
# ::lemmas ["i", "be", "Groot"]
(c35-1 / person
       :name (c35-0 / name
                    :op1 "Groot")
       :domain (c35-2 / i))

# ::snt name a crime that justifies shooting a kid seven times in the street, I'll wait
# ::tokens ["name", "a", "crime", "that", "justifies", "shooting", "a", "kid", "seven", "times", "in", "the", "street", ",", "I", "'ll", "wait"]
# ::lemmas ["name", "a", "crime", "that", "justify", "shoot", "a", "kid", "seven", "time", "in", "the", "street", ",", "i", "'ll", "wait"]
(c36-1 / wait-01
       :ARG1 (c36-3 / i)
       :ARG2 (c36-4 / name-01
                    :ARG0 c36-3
                    :ARG1 (c36-5 / crime-02
                                 :ARG0-of (c36-0 / justify-01
                                                 :ARG1 (c36-6 / shoot-02
                                                              :ARG1 (c36-7 / kid)
                                                              :location (c36-2 / street)
                                                              :frequency 7)))))

# ::snt I am Groot
# ::tokens ["I", "am", "Groot"]
# ::lemmas ["i", "be", "Groot"]
(c37-1 / person
       :name (c37-0 / name
                    :op1 "Groot")
       :domain (c37-2 / i))

# ::snt In their eyes, no. And then they wonder why they constantly get profiled &amp; harrassed. AA's need an image consultant
# ::tokens ["In", "their", "eyes", ",", "no", ".", "And", "then", "they", "wonder", "why", "they", "constantly", "get", "profiled", "&", "amp", ";", "harrassed", ".", "AA", "'s", "need", "an", "image", "consultant"]
# ::lemmas ["in", "their", "eye", ",", "no", ".", "and", "then", "they", "wonder", "why", "they", "constantly", "get", "profile", "&", "amp", ";", "harrassed", ".", "AA", "'s", "need", "an", "image", "consultant"]
(c38-0 / multi-sentence
       :snt1 (c38-8 / no
                    :prep-in (c38-7 / eye
                                    :poss (c38-19 / they)))
       :snt2 (c38-5 / and
                    :op2 (c38-9 / wonder-01
                                :ARG0 (c38-18 / they)
                                :ARG1 (c38-12 / thing
                                              :ARG0-of (c38-17 / cause-01
                                                               :ARG1 (c38-10 / and
                                                                             :op1 (c38-3 / disgrace-01
                                                                                         :ARG1 c38-18)
                                                                             :op2 (c38-6 / embarrass-01
                                                                                         :ARG1 c38-18)
                                                                             :frequency (c38-4 / constant))))
                                :time (c38-15 / then)))
       :snt3 (c38-16 / need-01
                     :ARG0 (c38-14 / organization
                                   :name (c38-1 / name
                                                :op1 "AA"))
                     :ARG1 (c38-2 / person
                                  :ARG0-of (c38-13 / consult-01
                                                   :ARG2 (c38-11 / image)))))

# ::snt You sound angry. The criminal kid doesn't fit your agenda?
# ::tokens ["You", "sound", "angry", ".", "The", "criminal", "kid", "does", "n't", "fit", "your", "agenda", "?"]
# ::lemmas ["you", "sound", "angry", ".", "the", "criminal", "kid", "do", "not", "fit", "your", "agenda", "?"]
(c39-2 / multi-sentence
       :snt1 (c39-7 / sound-01
                    :ARG1 (c39-0 / you)
                    :ARG2 (c39-9 / angry))
       :snt2 (c39-1 / fit-06
                    :ARG1 (c39-8 / kid
                                 :ARG2-of (c39-5 / criminal-03))
                    :ARG2 (c39-3 / agenda
                                 :poss (c39-6 / you))
                    :polarity (c39-4 / amr-unknown)
                    :polarity -))

# ::snt I am Groot
# ::tokens ["I", "am", "Groot"]
# ::lemmas ["i", "be", "Groot"]
(c40-1 / person
       :name (c40-0 / name
                    :op1 "Groot")
       :domain (c40-2 / i))

# ::snt I.... Am Groot
# ::tokens ["I", "....", "Am", "Groot"]
# ::lemmas ["i", "....", "Am", "Groot"]
(c41-1 / person
       :name (c41-0 / name
                    :op1 "I")
       :mod (c41-2 / Groot))

# ::snt You can say what you want about but that doesn't make him guilty. Mike Brown though? He robbed a store
# ::tokens ["You", "can", "say", "what", "you", "want", "about", "but", "that", "does", "n't", "make", "him", "guilty", ".", "Mike", "Brown", "though", "?", "He", "robbed", "a", "store"]
# ::lemmas ["you", "can", "say", "what", "you", "want", "about", "but", "that", "do", "not", "make", "he", "guilty", ".", "Mike", "Brown", "though", "?", "he", "rob", "a", "store"]
(c42-3 / multi-sentence
       :snt1 (c42-8 / contrast-01
                    :ARG1 (c42-6 / possible-01
                                 :ARG1 (c42-11 / say-01
                                               :ARG0 (c42-1 / you)
                                               :ARG1 (c42-13 / thing
                                                             :ARG1-of (c42-2 / want-01
                                                                             :ARG0 c42-1))))
                    :ARG2 (c42-7 / make-02
                                 :ARG0 c42-11
                                 :ARG1 (c42-9 / guilty-01
                                              :ARG1 (c42-0 / he))
                                 :polarity -))
       :snt2 (c42-14 / have-concession-91
                     :ARG1 (c42-10 / rob-01
                                   :ARG0 (c42-5 / he)
                                   :ARG1 (c42-4 / store))
                     :polarity (c42-12 / amr-unknown)))

# ::snt I will wait for you to show me where I said it justified the punk thug being shot. Yes he is a criminal.
# ::tokens ["I", "will", "wait", "for", "you", "to", "show", "me", "where", "I", "said", "it", "justified", "the", "punk", "thug", "being", "shot", ".", "Yes", "he", "is", "a", "criminal", "."]
# ::lemmas ["i", "will", "wait", "for", "you", "to", "show", "i", "where", "i", "say", "it", "justify", "the", "punk", "thug", "be", "shoot", ".", "yes", "he", "be", "a", "criminal", "."]
(c43-4 / multi-sentence
       :snt1 (c43-1 / wait-01
                    :ARG1 (c43-8 / i)
                    :ARG2 (c43-13 / show-01
                                  :ARG0 (c43-2 / you)
                                  :ARG1 (c43-14 / thing
                                                :location-of (c43-0 / justify-01
                                                                    :ARG0 (c43-11 / it)
                                                                    :ARG1 (c43-7 / shoot-02
                                                                                 :ARG1 (c43-12 / thug
                                                                                               :mod (c43-9 / punk)))
                                                                    :ARG1-of (c43-3 / say-01
                                                                                    :ARG0 (c43-5 / i
                                                                                                 :ARG2-of c43-13))))))
       :snt2 (c43-10 / criminal-03
                     :ARG2 (c43-6 / he)
                     :mod (c43-15 / yes)))

# ::snt I am Groot
# ::tokens ["I", "am", "Groot"]
# ::lemmas ["i", "be", "Groot"]
(c44-1 / person
       :name (c44-0 / name
                    :op1 "Groot")
       :domain (c44-2 / i))

# ::snt I never said it justified him being shot at all, but you weren't there at the shooting. YOU KNOW NOTHING of what happ
# ::tokens ["I", "never", "said", "it", "justified", "him", "being", "shot", "at", "all", ",", "but", "you", "were", "n't", "there", "at", "the", "shooting", ".", "YOU", "KNOW", "NOTHING", "of", "what", "happ"]
# ::lemmas ["i", "never", "say", "it", "justify", "he", "be", "shoot", "at", "all", ",", "but", "you", "be", "not", "there", "at", "the", "shooting", ".", "you", "know", "nothing", "of", "what", "happ"]
(c45-4 / multi-sentence
       :snt1 (c45-11 / contrast-01
                     :ARG1 (c45-14 / say-01
                                   :ARG0 (c45-8 / i)
                                   :ARG1 (c45-0 / justify-01
                                                :ARG0 (c45-12 / it)
                                                :ARG1 (c45-6 / shoot-02
                                                             :ARG1 (c45-1 / he))
                                                :degree (c45-17 / at-all))
                                   :time (c45-7 / ever)
                                   :polarity -)
                     :ARG2 (c45-5 / be-located-at-91
                                  :ARG1 (c45-2 / you)
                                  :ARG2 (c45-16 / there)
                                  :time (c45-3 / shoot-02)
                                  :polarity -))
       :snt2 (c45-9 / know-01
                    :ARG0 (c45-13 / you)
                    :ARG1 (c45-10 / nothing)
                    :topic (c45-15 / thing)))

# ::snt that's a good point
# ::tokens ["that", "'s", "a", "good", "point"]
# ::lemmas ["that", "be", "a", "good", "point"]
(c46-0 / point-04
       :ARG1-of (c46-2 / good-02)
       :domain (c46-1 / that))

# ::snt what if investigation shows that it was justified shooting? still guilty? why so quick to jump to conclusions?
# ::tokens ["what", "if", "investigation", "shows", "that", "it", "was", "justified", "shooting", "?", "still", "guilty", "?", "why", "so", "quick", "to", "jump", "to", "conclusions", "?"]
# ::lemmas ["what", "if", "investigation", "show", "that", "it", "be", "justify", "shoot", "?", "still", "guilty", "?", "why", "so", "quick", "to", "jump", "to", "conclusion", "?"]
(c47-3 / multi-sentence
       :snt1 (c47-0 / have-condition-91
                    :ARG1 (c47-13 / amr-unknown)
                    :ARG2 (c47-11 / show-01
                                  :ARG0 (c47-7 / investigate-01)
                                  :ARG1 (c47-1 / justify-01
                                               :ARG1 (c47-5 / shoot-02))))
       :snt2 (c47-10 / guilty-01
                     :mod (c47-2 / still))
       :snt3 (c47-9 / cause-01
                    :ARG0 c47-13)
       :ARG1 (c47-6 / quick-02
                    :ARG1 (c47-12 / jump-02
                                  :ARG2 (c47-8 / conclude-01))
                    :degree (c47-4 / so)))
