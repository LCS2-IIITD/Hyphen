# ::snt someone should tell him to go pray, then will catch the scum
# ::tokens ["someone", "should", "tell", "him", "to", "go", "pray", ",", "then", "will", "catch", "the", "scum"]
# ::lemmas ["someone", "should", "tell", "he", "to", "go", "pray", ",", "then", "will", "catch", "the", "scum"]
(c1-9 / and
      :op1 (c1-3 / recommend-01
                 :ARG1 (c1-8 / tell-01
                             :ARG0 (c1-7 / someone)
                             :ARG1 (c1-5 / go-05
                                         :ARG0 (c1-0 / he)
                                         :ARG1 (c1-2 / pray-01
                                                     :ARG0 c1-0))
                             :ARG2 c1-0)
                 :ARG2 c1-7)
      :op2 (c1-4 / catch-01
                 :ARG1 (c1-1 / scum)
                 :time (c1-6 / then)))

# ::snt Wendy do you have a link to a live feed outside the cafe? Please and thank you!
# ::tokens ["Wendy", "do", "you", "have", "a", "link", "to", "a", "live", "feed", "outside", "the", "cafe", "?", "Please", "and", "thank", "you", "!"]
# ::lemmas ["Wendy", "do", "you", "have", "a", "link", "to", "a", "live", "feed", "outside", "the", "cafe", "?", "please", "and", "thank", "you", "!"]
(c2-4 / multi-sentence
      :snt1 (c2-0 / have-03
                  :ARG0 (c2-1 / you)
                  :ARG1 (c2-3 / link-01
                              :ARG2 (c2-5 / feed-01
                                          :mod (c2-9 / live)
                                          :location (c2-6 / outside
                                                          :op1 (c2-8 / cafe))))
                  :polarity (c2-11 / amr-unknown)
                  :mod (c2-2 / weird))
      :snt2 (c2-7 / and
                  :op1 (c2-10 / thank-01
                              :ARG1 (c2-12 / you)
                              :op2-of c2-7)
                  :ARG1 c2-12
                  :polite +))

# ::snt isn't it the th hour?
# ::tokens ["is", "n't", "it", "the", "th", "hour", "?"]
# ::lemmas ["be", "not", "it", "the", "th", "hour", "?"]
(c3-0 / hour
      :polarity (c3-1 / amr-unknown))

# ::snt what happened to this world
# ::tokens ["what", "happened", "to", "this", "world"]
# ::lemmas ["what", "happen", "to", "this", "world"]
(c4-1 / event
      :mod (c4-0 / world
                 :mod (c4-2 / this)))

# ::snt yes it is not the th
# ::tokens ["yes", "it", "is", "not", "the", "th"]
# ::lemmas ["yes", "it", "be", "not", "the", "th"]
(c5-0 / th
      :polarity -)

# ::snt if you promise this nutcase a girl he can marry he might give up?
# ::tokens ["if", "you", "promise", "this", "nutcase", "a", "girl", "he", "can", "marry", "he", "might", "give", "up", "?"]
# ::lemmas ["if", "you", "promise", "this", "nutcase", "a", "girl", "he", "can", "marry", "he", "might", "give", "up", "?"]
(c6-0 / have-condition-91
      :ARG1 (c6-5 / possible-01
                  :ARG1 (c6-7 / give-up-07
                              :ARG0 (c6-4 / nutcase
                                          :mod (c6-8 / this)))
                  :polarity (c6-10 / amr-unknown))
      :ARG2 (c6-9 / promise-01
                  :ARG0 (c6-1 / you)
                  :ARG1 c6-4
                  :ARG2 (c6-6 / girl
                              :ARG1-of (c6-2 / marry-01
                                             :ARG1 c6-4
                                             :ARG1-of (c6-3 / possible-01)))))
