# ::snt Do you know what 'confirmed' means? Finding out you were right after a claim doesn't vindicate you.
# ::tokens ["Do", "you", "know", "what", "'", "confirmed", "'", "means", "?", "Finding", "out", "you", "were", "right", "after", "a", "claim", "does", "n't", "vindicate", "you", "."]
# ::lemmas ["do", "you", "know", "what", "'", "confirm", "'", "mean", "?", "find", "out", "you", "be", "right", "after", "a", "claim", "do", "not", "vindicate", "you", "."]
(c1-2 / multi-sentence
      :snt1 (c1-5 / know-01
                  :ARG0 (c1-0 / you)
                  :ARG1 (c1-13 / thing
                               :ARG2-of (c1-8 / mean-01
                                              :ARG1-of (c1-10 / confirm-01)
                                              :ARG1 c1-13)))
      :polarity (c1-14 / amr-unknown)
      :snt2 (c1-1 / fact
                  :topic (c1-6 / find-out-03
                               :ARG0 (c1-12 / you)
                               :ARG1 (c1-3 / be-temporally-at-91
                                           :ARG1 c1-12
                                           :ARG2 (c1-4 / after
                                                       :op1 (c1-9 / claim-01)
                                                       :mod (c1-11 / right)))
                               :ARG0-of (c1-7 / vindicate-01
                                              :ARG1 c1-12
                                              :polarity -))))

# ::snt Not confirmed, now retracted. You credulous moron. Believe every blurb that comes out of a developing situation?
# ::tokens ["Not", "confirmed", ",", "now", "retracted", ".", "You", "credulous", "moron", ".", "Believe", "every", "blurb", "that", "comes", "out", "of", "a", "developing", "situation", "?"]
# ::lemmas ["not", "confirm", ",", "now", "retract", ".", "you", "credulous", "moron", ".", "believe", "every", "blurb", "that", "come", "out", "of", "a", "develop", "situation", "?"]
(c2-1 / multi-sentence
      :snt1 (c2-14 / and
                   :op1 (c2-8 / confirm-01
                              :polarity -)
                   :op2 (c2-7 / retract-01
                              :time (c2-5 / now)
                              :polarity -))
      :snt2 (c2-6 / moron
                  :mod (c2-9 / credulous)
                  :domain (c2-0 / you))
      :snt3 (c2-2 / believe-01
                  :polarity (c2-4 / amr-unknown)
                  :ARG0 c2-0
                  :ARG1 (c2-10 / blurb
                               :mod (c2-3 / every)
                               :ARG1-of (c2-12 / come-out-09
                                               :ARG2 (c2-13 / situation
                                                            :ARG1-of (c2-11 / develop-02))))))

# ::snt Enough? Im not your fucking research assistant.
# ::tokens ["Enough", "?", "I", "m", "not", "your", "fucking", "research", "assistant", "."]
# ::lemmas ["enough", "?", "i", "m", "not", "your", "fucking", "research", "assistant", "."]
(c3-3 / multi-sentence
      :snt1 (c3-0 / have-quant-91
                  :ARG3 (c3-4 / enough)
                  :polarity (c3-9 / amr-unknown))
      :snt2 (c3-7 / person
                  :ARG0-of (c3-5 / assist-01
                                 :ARG1 (c3-1 / you)
                                 :ARG2 (c3-8 / research-01))
                  :domain (c3-6 / i)
                  :mod (c3-2 / fucking
                             :mode expressive)
                  :polarity -))

# ::snt Congrats on your tweet!
# ::tokens ["Congrats", "on", "your", "tweet", "!"]
# ::lemmas ["congrat", "on", "your", "tweet", "!"]
(c4-2 / congratulate-01
      :ARG1 (c4-1 / you)
      :ARG2 (c4-0 / tweet-01
                  :ARG0 c4-1))

# ::snt Who died? The gunman? "Dear mother of gunman, I'm sorry your son decided to get himself killed."
# ::tokens ["Who", "died", "?", "The", "gunman", "?", "\"", "Dear", "mother", "of", "gunman", ",", "I", "'m", "sorry", "your", "son", "decided", "to", "get", "himself", "killed", ".", "\""]
# ::lemmas ["who", "die", "?", "the", "gunman", "?", "\"", "dear", "mother", "of", "gunman", ",", "i", "be", "sorry", "your", "son", "decide", "to", "get", "himself", "kill", ".", "\""]
(c5-3 / multi-sentence
      :snt1 (c5-8 / die-01
                  :ARG1 (c5-15 / amr-unknown))
      :snt2 (c5-10 / gunman)
      :snt3 (c5-12 / say-01
                   :ARG0 (c5-7 / person
                               :ARG0-of (c5-0 / have-rel-role-91
                                              :ARG1 (c5-9 / gunman)
                                              :ARG2 (c5-11 / mother))
                               :mod (c5-1 / dear))
                   :ARG1 (c5-4 / sorry-01
                               :ARG1 (c5-5 / i)
                               :ARG2 (c5-16 / decide-01
                                            :ARG0 (c5-14 / person
                                                         :ARG0-of c5-0
                                                         :ARG1 c5-9
                                                         :ARG2 (c5-2 / son)))
                               :ARG1 (c5-6 / get-04
                                           :ARG0 c5-14
                                           :ARG1 (c5-13 / kill-01
                                                        :ARG1 c5-14))))
      :ARG2 c5-14)

# ::snt WOW! So you still don't believe numerous reports that people have lost their lives! You poor misguided soul...
# ::tokens ["WOW", "!", "So", "you", "still", "do", "n't", "believe", "numerous", "reports", "that", "people", "have", "lost", "their", "lives", "!", "You", "poor", "misguided", "soul", "..."]
# ::lemmas ["WOW", "!", "so", "you", "still", "do", "not", "believe", "numerous", "report", "that", "people", "have", "lose", "their", "life", "!", "you", "poor", "misguided", "soul", "..."]
(c6-3 / multi-sentence
      :snt1 (c6-0 / wow
                  :mode expressive)
      :snt2 (c6-9 / cause-01
                  :ARG1 (c6-4 / believe-01
                              :ARG0 (c6-1 / you
                                          :mod (c6-12 / soul
                                                      :ARG1-of (c6-7 / misguide-01)
                                                      :mod (c6-8 / poor)))
                              :ARG1 (c6-10 / report-01
                                           :ARG1 (c6-2 / lose-02
                                                       :ARG0 (c6-13 / person)
                                                       :ARG1 (c6-11 / life
                                                                    :poss c6-13))
                                           :quant (c6-6 / numerous))
                              :mod (c6-5 / still)
                              :polarity -)))

# ::snt legends
# ::tokens ["legends"]
# ::lemmas ["legend"]
(c7-0 / legacy)

# ::snt CNN : people feared dead. My condolences to their families and loved ones.
# ::tokens ["CNN", ":", "people", "feared", "dead", ".", "My", "condolences", "to", "their", "families", "and", "loved", "ones", "."]
# ::lemmas ["CNN", ":", "people", "fear", "dead", ".", "my", "condolence", "to", "their", "family", "and", "loved", "one", "."]
(c8-2 / multi-sentence
      :snt1 (c8-12 / say-01
                   :ARG0 (c8-8 / publication
                               :name (c8-7 / name
                                           :op1 "CNN"))
                   :ARG1 (c8-1 / fear-01
                               :ARG1 (c8-9 / die-01
                                           :ARG1 (c8-14 / person))))
      :snt2 (c8-10 / condolence
                   :poss (c8-5 / i)
                   :beneficiary (c8-15 / and
                                       :op1 (c8-6 / family
                                                  :ARG1-of (c8-0 / have-org-role-91
                                                                 :ARG0 (c8-13 / they)
                                                                 :ARG2 (c8-11 / member)))
                                       :op2 (c8-4 / one
                                                  :ARG1-of (c8-3 / love-01)))))

# ::snt I didn't say you retracted anything. I said the unconfirmed report of deaths has been retracted. Read much?
# ::tokens ["I", "did", "n't", "say", "you", "retracted", "anything", ".", "I", "said", "the", "unconfirmed", "report", "of", "deaths", "has", "been", "retracted", ".", "Read", "much", "?"]
# ::lemmas ["i", "do", "not", "say", "you", "retract", "anything", ".", "i", "say", "the", "unconfirmed", "report", "of", "death", "have", "be", "retract", ".", "read", "much", "?"]
(c9-2 / multi-sentence
      :snt1 (c9-13 / say-01
                   :ARG0 (c9-6 / i)
                   :ARG1 (c9-9 / retract-01
                               :ARG0 (c9-1 / you)
                               :ARG1 (c9-14 / anything))
                   :polarity -)
      :snt2 (c9-3 / say-01
                  :ARG0 (c9-11 / i)
                  :ARG1 (c9-7 / retract-01
                              :ARG1 (c9-4 / report-01
                                          :ARG1 (c9-10 / die-01)
                                          :ARG1-of (c9-12 / confirm-01
                                                          :polarity -))))
      :snt3 (c9-0 / read-01
                  :ARG1 (c9-8 / much)
                  :polarity (c9-5 / amr-unknown)))

# ::snt Yes, I read those too. I don't need research assistants from the likes of you. Still waiting for more
# ::tokens ["Yes", ",", "I", "read", "those", "too", ".", "I", "do", "n't", "need", "research", "assistants", "from", "the", "likes", "of", "you", ".", "Still", "waiting", "for", "more"]
# ::lemmas ["yes", ",", "i", "read", "those", "too", ".", "i", "do", "not", "need", "research", "assistant", "from", "the", "like", "of", "you", ".", "still", "wait", "for", "more"]
(c10-2 / multi-sentence
       :snt1 (c10-8 / read-01
                    :ARG0 (c10-4 / i)
                    :ARG1 (c10-13 / that)
                    :mod (c10-11 / too))
       :snt2 (c10-6 / need-01
                    :ARG0 (c10-10 / i)
                    :ARG1 (c10-7 / person
                                 :ARG0-of (c10-14 / assist-01
                                                  :ARG2 (c10-5 / research-01))
                                 :ARG1-of (c10-3 / resemble-01
                                                 :ARG2 (c10-0 / you)))
                    :polarity -)
       :snt3 (c10-1 / wait-01
                    :ARG1 c10-10
                    :ARG2 (c10-9 / more)
                    :mod (c10-12 / still)))

# ::snt You couldnt afford a research assistant from the likes of me. Piss off you obnoxious American.
# ::tokens ["You", "could", "nt", "afford", "a", "research", "assistant", "from", "the", "likes", "of", "me", ".", "Piss", "off", "you", "obnoxious", "American", "."]
# ::lemmas ["you", "could", "not", "afford", "a", "research", "assistant", "from", "the", "like", "of", "i", ".", "piss", "off", "you", "obnoxious", "American", "."]
(c11-1 / multi-sentence
       :snt1 (c11-8 / possible-01
                    :ARG1 (c11-14 / afford-01
                                  :ARG0 (c11-0 / you)
                                  :ARG1 (c11-13 / person
                                                :ARG0-of (c11-4 / assist-01
                                                                :ARG1 (c11-9 / research-01))
                                                :source (c11-2 / person
                                                               :ARG1-of (c11-6 / resemble-01
                                                                               :ARG2 (c11-5 / i)))))
                    :polarity -)
       :snt2 (c11-12 / piss-off-02
                     :ARG0 (c11-11 / you
                                   :mod (c11-10 / country
                                                :name (c11-7 / name
                                                             :op1 "America"))
                                   :mod (c11-3 / obnoxious)
                                   :ARG1-of c11-12)
                     :mode imperative))

# ::snt pretty sure they have been trying for the last + hours?
# ::tokens ["pretty", "sure", "they", "have", "been", "trying", "for", "the", "last", "+", "hours", "?"]
# ::lemmas ["pretty", "sure", "they", "have", "be", "try", "for", "the", "last", "+", "hours", "?"]
(c12-7 / sure-02
       :polarity (c12-9 / amr-unknown)
       :ARG0 (c12-3 / i)
       :ARG1 (c12-8 / try-01
                    :ARG0 (c12-6 / they)
                    :duration (c12-2 / over
                                     :op1 (c12-4 / temporal-quantity
                                                 :unit (c12-0 / hour)
                                                 :quant 1)
                                     :mod (c12-1 / last)))
       :degree (c12-5 / pretty))

# ::snt - Insensitive moron me?
# ::tokens ["-", "Insensitive", "moron", "me", "?"]
# ::lemmas ["-", "insensitive", "moron", "i", "?"]
(c13-0 / sensitive-03
       :polarity (c13-3 / amr-unknown)
       :ARG0 (c13-1 / moron
                    :domain (c13-2 / i)))

# ::snt : Sydney siege is over. More details to follow. What a relief! Thoughts with the hostages.
# ::tokens [":", "Sydney", "siege", "is", "over", ".", "More", "details", "to", "follow", ".", "What", "a", "relief", "!", "Thoughts", "with", "the", "hostages", "."]
# ::lemmas [":", "Sydney", "siege", "be", "over", ".", "more", "detail", "to", "follow", ".", "what", "a", "relief", "!", "thought", "with", "the", "hostage", "."]
(c14-2 / multi-sentence
       :snt1 (c14-3 / over-01
                    :ARG1 (c14-10 / standoff
                                  :location (c14-8 / city
                                                   :name (c14-5 / name
                                                                :op1 "Sydney"))))
       :snt2 (c14-7 / detail
                    :mod (c14-6 / more)
                    :ARG1-of (c14-1 / follow-01))
       :snt3 (c14-9 / relieve-01
                    :degree (c14-4 / so))
       :snt4 (c14-11 / think-01
                     :ARG1 (c14-0 / hostage)))

# ::snt Thank you.
# ::tokens ["Thank", "you", "."]
# ::lemmas ["thank", "you", "."]
(c15-1 / thank-01
       :ARG0 (c15-2 / i)
       :ARG1 (c15-0 / you))

# ::snt How gracious of you. You're the alarmist and blaming police over gunman, but I'm the one who crawled out from under a rock...
# ::tokens ["How", "gracious", "of", "you", ".", "You", "'re", "the", "alarmist", "and", "blaming", "police", "over", "gunman", ",", "but", "I", "'m", "the", "one", "who", "crawled", "out", "from", "under", "a", "rock", "..."]
# ::lemmas ["how", "gracious", "of", "you", ".", "you", "be", "the", "alarmist", "and", "blame", "police", "over", "gunman", ",", "but", "i", "be", "the", "one", "who", "crawl", "out", "from", "under", "a", "rock", "..."]
(c17-1 / multi-sentence
       :snt1 (c17-10 / gracious-01
                     :ARG1 (c17-0 / you)
                     :degree (c17-13 / so))
       :snt2 (c17-9 / contrast-01
                    :ARG1 (c17-15 / and
                                  :op1 (c17-5 / alarmist
                                              :domain (c17-12 / you))
                                  :op2 (c17-3 / blame-01
                                              :ARG0 c17-12
                                              :ARG1 (c17-7 / police)
                                              :ARG2 (c17-8 / gunman)))
                    :ARG2 (c17-11 / crawl-01
                                  :ARG0 (c17-6 / i)
                                  :ARG1 (c17-4 / out-06
                                               :ARG2 (c17-2 / under
                                                            :op1 (c17-14 / rock))))))

# ::snt : Sydney siege is over. More details to follow.
# ::tokens [":", "Sydney", "siege", "is", "over", ".", "More", "details", "to", "follow", "."]
# ::lemmas [":", "Sydney", "siege", "be", "over", ".", "more", "detail", "to", "follow", "."]
(c18-1 / multi-sentence
       :snt1 (c18-2 / over-01
                    :ARG1 (c18-7 / standoff
                                 :location (c18-6 / city
                                                  :name (c18-3 / name
                                                               :op1 "Sydney"))))
       :snt2 (c18-5 / detail
                    :mod (c18-4 / more)
                    :ARG1-of (c18-0 / follow-01)))

# ::snt And for you,I have every reason to believe for they have people on the ground with up-to-date info!
# ::tokens ["And", "for", "you", ",", "I", "have", "every", "reason", "to", "believe", "for", "they", "have", "people", "on", "the", "ground", "with", "up", "-", "to", "-", "date", "info", "!"]
# ::lemmas ["and", "for", "you", ",", "i", "have", "every", "reason", "to", "believe", "for", "they", "have", "people", "on", "the", "ground", "with", "up", "-", "to", "-", "date", "info", "!"]
(c19-14 / and
        :op2 (c19-0 / have-03
                    :ARG0 (c19-6 / i)
                    :ARG1 (c19-9 / reason
                                 :mod (c19-5 / every)
                                 :purpose (c19-4 / believe-01
                                                 :ARG0 c19-6))
                    :beneficiary (c19-1 / you)
                    :ARG1-of (c19-10 / cause-01
                                     :ARG0 (c19-2 / have-03
                                                  :ARG0 (c19-13 / they)
                                                  :ARG1 (c19-8 / person
                                                               :location (c19-11 / ground)
                                                               :ARG0-of (c19-7 / have-03
                                                                               :ARG1 (c19-12 / information
                                                                                             :ARG1-of (c19-3 / up-to-date))))))))

# ::snt My tweet stated that the reports of deaths of hostages are unconfirmed. That was and remains a fact.
# ::tokens ["My", "tweet", "stated", "that", "the", "reports", "of", "deaths", "of", "hostages", "are", "unconfirmed", ".", "That", "was", "and", "remains", "a", "fact", "."]
# ::lemmas ["my", "tweet", "state", "that", "the", "report", "of", "death", "of", "hostage", "be", "unconfirmed", ".", "that", "be", "and", "remain", "a", "fact", "."]
(c20-2 / multi-sentence
       :snt1 (c20-10 / state-01
                     :ARG0 (c20-11 / tweet-01
                                   :ARG0 (c20-3 / i))
                     :ARG1 (c20-7 / confirm-01
                                  :ARG1 (c20-6 / report-01
                                               :ARG1 (c20-8 / die-01
                                                            :ARG1 (c20-0 / hostage)))
                                  :polarity -))
       :snt2 (c20-12 / and
                     :op1 (c20-1 / fact
                                 :domain (c20-9 / that))
                     :op2 (c20-4 / remain-01
                                 :ARG1 (c20-5 / fact
                                              :domain c20-9))))

# ::snt You have a link to a confirmed report that nobody else seems to know about? Feel free to share.
# ::tokens ["You", "have", "a", "link", "to", "a", "confirmed", "report", "that", "nobody", "else", "seems", "to", "know", "about", "?", "Feel", "free", "to", "share", "."]
# ::lemmas ["you", "have", "a", "link", "to", "a", "confirmed", "report", "that", "nobody", "else", "seem", "to", "know", "about", "?", "feel", "free", "to", "share", "."]
(c21-3 / multi-sentence
       :snt1 (c21-0 / have-03
                    :polarity (c21-14 / amr-unknown)
                    :ARG0 (c21-1 / you)
                    :ARG1 (c21-2 / link-01
                                 :ARG2 (c21-9 / report-01
                                              :ARG1-of (c21-10 / confirm-01)
                                              :ARG1-of (c21-13 / know-01
                                                               :ARG0 (c21-8 / nobody
                                                                            :mod (c21-5 / else))
                                                               :ARG1-of (c21-12 / seem-01)))))
       :snt2 (c21-4 / feel-01
                    :ARG0 (c21-11 / you)
                    :ARG1 (c21-7 / free-04
                                 :ARG1 c21-11
                                 :ARG3 (c21-6 / share-01
                                              :ARG0 c21-11))))

# ::snt such incredible work today
# ::tokens ["such", "incredible", "work", "today"]
# ::lemmas ["such", "incredible", "work", "today"]
(c22-1 / work-01
       :time (c22-2 / today)
       :mod (c22-3 / incredible
                   :degree (c22-0 / such)))

# ::snt You should be the one admitting that you were just plain slow in keeping up with reality!
# ::tokens ["You", "should", "be", "the", "one", "admitting", "that", "you", "were", "just", "plain", "slow", "in", "keeping", "up", "with", "reality", "!"]
# ::lemmas ["you", "should", "be", "the", "one", "admit", "that", "you", "be", "just", "plain", "slow", "in", "keep", "up", "with", "reality", "!"]
(c23-4 / recommend-01
       :ARG1 (c23-3 / person
                    :domain (c23-1 / you)
                    :ARG0-of (c23-8 / admit-01
                                    :ARG1 (c23-5 / slow-05
                                                 :ARG1 c23-1
                                                 :ARG2 (c23-6 / keep-up-05
                                                              :ARG0 c23-1
                                                              :ARG1 (c23-2 / reality))
                                                 :mod (c23-7 / plain
                                                             :mod (c23-0 / just))))))

# ::snt Would you please shut the hell up you bloody senseless moron! Your input is worthless!
# ::tokens ["Would", "you", "please", "shut", "the", "hell", "up", "you", "bloody", "senseless", "moron", "!", "Your", "input", "is", "worthless", "!"]
# ::lemmas ["would", "you", "please", "shut", "the", "hell", "up", "you", "bloody", "senseless", "moron", "!", "your", "input", "be", "worthless", "!"]
(c24-3 / multi-sentence
       :snt1 (c24-9 / shut-up-06
                    :ARG0 (c24-1 / you
                                 :mod (c24-7 / moron
                                             :ARG1-of (c24-5 / sense-02
                                                             :mod (c24-4 / bloody)
                                                             :polarity -))
                                 :ARG1-of c24-9)
                    :mod (c24-0 / hell
                                :mode expressive)
                    :mode imperative
                    :polite +)
       :snt2 (c24-2 / worthless
                    :domain (c24-6 / input
                                   :poss (c24-8 / you))))

# ::snt Are you daft? We'll know for sure today. You have Chris Reason saying are dead. And he..
# ::tokens ["Are", "you", "daft", "?", "We", "'ll", "know", "for", "sure", "today", ".", "You", "have", "Chris", "Reason", "saying", "are", "dead", ".", "And", "he", ".."]
# ::lemmas ["be", "you", "daft", "?", "we", "'ll", "know", "for", "sure", "today", ".", "you", "have", "Chris", "Reason", "say", "be", "dead", ".", "and", "he", ".."]
(c25-4 / multi-sentence
       :snt1 (c25-10 / daft
                     :polarity (c25-16 / amr-unknown)
                     :domain (c25-1 / you))
       :snt2 (c25-15 / know-01
                     :ARG0 (c25-2 / we)
                     :ARG1-of (c25-12 / sure-02)
                     :time (c25-13 / today))
       :snt3 (c25-0 / have-03
                    :ARG0 (c25-11 / you)
                    :ARG1 (c25-6 / say-01
                                 :ARG0 (c25-9 / person
                                              :name (c25-8 / name
                                                           :op1 "Chris"
                                                           :op2 "Reason"))
                                 :ARG1 (c25-3 / die-01
                                              :ARG1 (c25-14 / they))))
       :snt4 (c25-7 / and
                    :op2 (c25-5 / he)))

# ::snt : Sydney siege is over. More details to follow.
# ::tokens [":", "Sydney", "siege", "is", "over", ".", "More", "details", "to", "follow", "."]
# ::lemmas [":", "Sydney", "siege", "be", "over", ".", "more", "detail", "to", "follow", "."]
(c26-1 / multi-sentence
       :snt1 (c26-2 / over-01
                    :ARG1 (c26-7 / standoff
                                 :location (c26-6 / city
                                                  :name (c26-3 / name
                                                               :op1 "Sydney"))))
       :snt2 (c26-5 / detail
                    :mod (c26-4 / more)
                    :ARG1-of (c26-0 / follow-01)))

# ::snt dead, seriously injured you insensitive moron!
# ::tokens ["dead", ",", "seriously", "injured", "you", "insensitive", "moron", "!"]
# ::lemmas ["dead", ",", "seriously", "injure", "you", "insensitive", "moron", "!"]
(c27-6 / say-01
       :ARG1 (c27-7 / and
                    :op1 (c27-5 / die-01
                                :ARG1 (c27-0 / you
                                             :mod (c27-2 / moron)))
                    :op2 (c27-4 / injure-01
                                :ARG1 c27-0
                                :ARG1-of (c27-3 / serious-02)))
       :ARG2 c27-0
       :ARG0-of (c27-1 / sensitive-03
                       :polarity -))

# ::snt And even if it turns out that a hostage was killed, you lay blame at the feet of the police...
# ::tokens ["And", "even", "if", "it", "turns", "out", "that", "a", "hostage", "was", "killed", ",", "you", "lay", "blame", "at", "the", "feet", "of", "the", "police", "..."]
# ::lemmas ["and", "even", "if", "it", "turn", "out", "that", "a", "hostage", "be", "kill", ",", "you", "lay", "blame", "at", "the", "foot", "of", "the", "police", "..."]
(c28-7 / and
       :op2 (c28-2 / blame-01
                   :ARG0 (c28-1 / you)
                   :ARG1 (c28-5 / police)
                   :concession (c28-3 / even-if
                                      :op1 (c28-6 / turn-out-11
                                                  :ARG1 (c28-4 / kill-01
                                                               :ARG1 (c28-0 / hostage))))))

# ::snt Now crawl back to whichever rock you hatched under.
# ::tokens ["Now", "crawl", "back", "to", "whichever", "rock", "you", "hatched", "under", "."]
# ::lemmas ["now", "crawl", "back", "to", "whichever", "rock", "you", "hatch", "under", "."]
(c29-6 / crawl-01
       :ARG0 (c29-2 / you)
       :ARG1 (c29-5 / rock
                    :mod (c29-1 / whichever)
                    :ARG1-of (c29-0 / hatch-01
                                    :ARG0 c29-2))
       :direction (c29-3 / back)
       :time (c29-4 / now)
       :mode imperative)

# ::snt What happened to your commitment to a peaceful outcome?
# ::tokens ["What", "happened", "to", "your", "commitment", "to", "a", "peaceful", "outcome", "?"]
# ::lemmas ["what", "happen", "to", "your", "commitment", "to", "a", "peaceful", "outcome", "?"]
(c30-4 / amr-unknown
       :topic (c30-3 / commit-01
                     :ARG0 (c30-0 / you)
                     :ARG2 (c30-1 / outcome
                                  :mod (c30-2 / peaceful))))

# ::snt Not offering an opinion, at least any more than you are. Stating a fact. Still unconfirmed.
# ::tokens ["Not", "offering", "an", "opinion", ",", "at", "least", "any", "more", "than", "you", "are", ".", "Stating", "a", "fact", ".", "Still", "unconfirmed", "."]
# ::lemmas ["not", "offer", "an", "opinion", ",", "at", "least", "any", "more", "than", "you", "be", ".", "state", "a", "fact", ".", "still", "unconfirmed", "."]
(c31-3 / multi-sentence
       :snt1 (c31-5 / offer-01
                    :ARG0 (c31-1 / you)
                    :ARG1 (c31-11 / thing
                                  :ARG1-of (c31-2 / opine-01
                                                  :ARG0 c31-1))
                    :ARG1-of (c31-0 / have-quant-91
                                    :ARG3 (c31-7 / more
                                                 :mod (c31-13 / at-least))
                                    :ARG4 (c31-9 / thing
                                                 :ARG1-of (c31-10 / opine-01
                                                                  :ARG0 c31-1)))
                    :polarity -)
       :snt2 (c31-12 / stating-01
                     :ARG1 (c31-4 / fact))
       :snt3 (c31-8 / confirm-01
                    :mod (c31-6 / still)
                    :polarity -))

# ::snt The news Sydney has been waiting for RT : Sydney siege is over. More details to follow.
# ::tokens ["The", "news", "Sydney", "has", "been", "waiting", "for", "RT", ":", "Sydney", "siege", "is", "over", ".", "More", "details", "to", "follow", "."]
# ::lemmas ["the", "news", "Sydney", "have", "be", "wait", "for", "RT", ":", "Sydney", "siege", "be", "over", ".", "more", "detail", "to", "follow", "."]
(c32-2 / multi-sentence
       :snt1 (c32-0 / wait-01
                    :ARG1 (c32-8 / city
                                 :name (c32-4 / name
                                              :op1 "Sydney"))
                    :ARG2 (c32-6 / publication
                                 :name (c32-5 / name
                                              :op1 "RT")))
       :snt2 (c32-3 / over-01
                    :ARG1 (c32-10 / standoff
                                  :location c32-8))
       :snt3 (c32-7 / detail
                    :mod (c32-9 / more)
                    :ARG1-of (c32-1 / follow-01)))

# ::snt Booooring.
# ::tokens ["Booooring", "."]
# ::lemmas ["boooore", "."]
(c33-0 / boohoo
       :mode expressive)

# ::snt So you accuse me of jumping it just because I was being attentive unlike you?
# ::tokens ["So", "you", "accuse", "me", "of", "jumping", "it", "just", "because", "I", "was", "being", "attentive", "unlike", "you", "?"]
# ::lemmas ["so", "you", "accuse", "i", "of", "jump", "it", "just", "because", "i", "be", "be", "attentive", "unlike", "you", "?"]
(c34-9 / accuse-01
       :polarity (c34-2 / amr-unknown)
       :ARG0 (c34-1 / you)
       :ARG1 (c34-3 / i)
       :ARG2 (c34-0 / jump-03
                    :ARG0 c34-3
                    :ARG1 (c34-7 / it)
                    :ARG1-of (c34-6 / cause-01
                                    :ARG0 (c34-4 / attend-02
                                                 :ARG0 c34-3
                                                 :ARG1-of (c34-5 / resemble-01
                                                                 :ARG2 c34-1
                                                                 :polarity -))
                                    :mod (c34-8 / just))))

# ::snt Ar least one hostage was killed. Maybe you should be better informed before you offer an opinion.
# ::tokens ["Ar", "least", "one", "hostage", "was", "killed", ".", "Maybe", "you", "should", "be", "better", "informed", "before", "you", "offer", "an", "opinion", "."]
# ::lemmas ["ar", "least", "one", "hostage", "be", "kill", ".", "maybe", "you", "should", "be", "well", "inform", "before", "you", "offer", "an", "opinion", "."]
(c36-3 / multi-sentence
       :snt1 (c36-12 / kill-01
                     :ARG1 (c36-0 / hostage
                                  :quant (c36-13 / at-least
                                                 :op1 1)))
       :snt2 (c36-8 / possible-01
                    :ARG1 (c36-9 / recommend-01
                                 :ARG1 (c36-7 / inform-01
                                              :ARG1 (c36-1 / you)
                                              :time (c36-5 / before
                                                           :op1 (c36-6 / offer-01
                                                                       :ARG0 c36-1
                                                                       :ARG1 (c36-2 / opine-01
                                                                                    :ARG0 c36-1)))
                                              :ARG1-of (c36-4 / have-degree-91
                                                              :ARG2 (c36-11 / good-02
                                                                            :ARG1 c36-7)
                                                              :ARG3 (c36-10 / more))))))

# ::snt ill-informed*
# ::tokens ["ill", "-", "informed", "*"]
# ::lemmas ["ill", "-", "inform", "*"]
(c37-1 / inform-01
       :ARG1-of (c37-0 / ill-09))

# ::snt good job to the NSW police. You should all be very proud tonight
# ::tokens ["good", "job", "to", "the", "NSW", "police", ".", "You", "should", "all", "be", "very", "proud", "tonight"]
# ::lemmas ["good", "job", "to", "the", "NSW", "police", ".", "you", "should", "all", "be", "very", "proud", "tonight"]
(c38-2 / multi-sentence
       :snt1 (c38-0 / job
                    :ARG1-of (c38-8 / good-02)
                    :beneficiary (c38-5 / police
                                        :mod (c38-10 / state
                                                     :name (c38-3 / name
                                                                  :op1 "NSW"))))
       :snt2 (c38-6 / recommend-01
                    :ARG1 (c38-12 / pride-01
                                  :ARG0 (c38-1 / you
                                               :mod (c38-13 / all))
                                  :time (c38-7 / date-entity
                                               :dayperiod (c38-4 / night)
                                               :mod (c38-11 / today))
                                  :degree (c38-9 / very))
                    :ARG2 c38-1))

# ::snt great work guys ! My thoughts are with everyone involved !
# ::tokens ["great", "work", "guys", "!", "My", "thoughts", "are", "with", "everyone", "involved", "!"]
# ::lemmas ["great", "work", "guy", "!", "my", "thought", "be", "with", "everyone", "involve", "!"]
(c39-1 / multi-sentence
       :snt1 (c39-7 / say-01
                    :ARG1 (c39-0 / work-01
                                 :mod (c39-5 / great))
                    :ARG2 (c39-4 / guy)
                    :mode expressive)
       :snt2 (c39-8 / think-01
                    :ARG0 (c39-3 / i)
                    :ARG2 (c39-2 / everyone
                                 :ARG1-of (c39-6 / involve-01))))

# ::snt - Haven't seen any video footage here yet either.
# ::tokens ["-", "Have", "n't", "seen", "any", "video", "footage", "here", "yet", "either", "."]
# ::lemmas ["-", "have", "not", "see", "any", "video", "footage", "here", "yet", "either", "."]
(c40-6 / see-01
       :ARG0 (c40-4 / i)
       :ARG1 (c40-2 / footage
                    :mod (c40-5 / video))
       :location (c40-0 / here)
       :mod (c40-3 / either)
       :time (c40-1 / yet)
       :polarity -)

# ::snt "trouble with reading comprehension" eh? Sounds vividly similar to you!
# ::tokens ["\"", "trouble", "with", "reading", "comprehension", "\"", "eh", "?", "Sounds", "vividly", "similar", "to", "you", "!"]
# ::lemmas ["\"", "trouble", "with", "read", "comprehension", "\"", "eh", "?", "sound", "vividly", "similar", "to", "you", "!"]
(c41-1 / multi-sentence
       :snt1 (c41-9 / tough-02
                    :ARG2 (c41-7 / comprehend-01
                                 :ARG1 (c41-6 / read-01))
                    :ARG1-of (c41-4 / request-confirmation-91))
       :snt2 (c41-8 / sound-01
                    :ARG1 (c41-3 / it)
                    :ARG2 (c41-2 / resemble-01
                                 :ARG1 c41-3
                                 :ARG2 (c41-0 / you)
                                 :degree (c41-5 / vivid))))

# ::snt - That was my original point. People like the hostage taker are unpredictable, don't always end well.
# ::tokens ["-", "That", "was", "my", "original", "point", ".", "People", "like", "the", "hostage", "taker", "are", "unpredictable", ",", "do", "n't", "always", "end", "well", "."]
# ::lemmas ["-", "that", "be", "my", "original", "point", ".", "people", "like", "the", "hostage", "taker", "be", "unpredictable", ",", "do", "not", "always", "end", "well", "."]
(c42-2 / multi-sentence
       :snt1 (c42-10 / point-04
                     :ARG0 (c42-9 / i)
                     :ARG1 (c42-14 / that)
                     :mod (c42-5 / original))
       :snt2 (c42-16 / and
                     :op1 (c42-15 / possible-01
                                  :ARG1 (c42-3 / predict-01
                                               :ARG1 (c42-13 / person
                                                             :ARG1-of (c42-11 / resemble-01
                                                                              :ARG2 (c42-6 / person
                                                                                           :ARG0-of (c42-12 / take-01
                                                                                                            :ARG1 (c42-0 / hostage))))))
                                  :polarity -)
                     :op2 (c42-7 / end-01
                                 :ARG1 (c42-4 / person)
                                 :ARG2 (c42-1 / well-09)
                                 :time (c42-8 / always)
                                 :polarity -)))

# ::snt acaba de dar por terminada la toma de rehenes en
# ::tokens ["acaba", "de", "dar", "por", "terminada", "la", "toma", "de", "rehenes", "en"]
# ::lemmas ["acaba", "de", "dar", "por", "terminada", "la", "toma", "de", "rehenes", "en"]
(c43-0 / multi-sentence
       :snt1 (c43-6 / acaba-de-dar-00
                    :ARG1 (c43-1 / die-01)
                    :ARG1-of (c43-2 / cause-01
                                    :ARG0 (c43-5 / terminada)))
       :snt2 (c43-4 / toma
                    :mod (c43-3 / rehenes)))

# ::snt Anyways, have fun trying to make sense of a relatively simple conclusion! "2 people lost their lives!!!"
# ::tokens ["Anyways", ",", "have", "fun", "trying", "to", "make", "sense", "of", "a", "relatively", "simple", "conclusion", "!", "\"", "2", "people", "lost", "their", "lives", "!", "!", "!", "\""]
# ::lemmas ["anyway", ",", "have", "fun", "try", "to", "make", "sense", "of", "a", "relatively", "simple", "conclusion", "!", "\"", "2", "people", "lose", "their", "life", "!", "!", "!", "\""]
(c44-1 / fun-01
       :ARG0 (c44-0 / you)
       :ARG1 (c44-9 / try-01
                    :ARG0 c44-0
                    :ARG1 (c44-8 / sense-02
                                 :ARG0 c44-0
                                 :ARG1 (c44-6 / conclude-01
                                              :ARG1 (c44-2 / lose-02
                                                           :ARG0 (c44-4 / person
                                                                        :quant 2)
                                                           :ARG1 (c44-7 / life
                                                                        :poss c44-4))
                                              :ARG1-of (c44-3 / simple-02
                                                              :ARG2-of (c44-5 / relative-05)))))
       :mod (c44-10 / anyways)
       :mode imperative)

# ::snt Who died? The gunman? Dear mother of gunman, Im sorry your son decided to get himself killed. Was not a statement of fact
# ::tokens ["Who", "died", "?", "The", "gunman", "?", "Dear", "mother", "of", "gunman", ",", "I", "m", "sorry", "your", "son", "decided", "to", "get", "himself", "killed", ".", "Was", "not", "a", "statement", "of", "fact"]
# ::lemmas ["who", "die", "?", "the", "gunman", "?", "dear", "mother", "of", "gunman", ",", "i", "m", "sorry", "your", "son", "decide", "to", "get", "himself", "kill", ".", "be", "not", "a", "statement", "of", "fact"]
(c45-1 / multi-sentence
       :snt1 (c45-4 / die-01
                    :ARG1 (c45-9 / amr-unknown))
       :snt2 (c45-15 / gunman)
       :snt3 (c45-6 / say-01
                    :ARG0 (c45-17 / i)
                    :ARG1 (c45-13 / sorry-01
                                  :ARG1 c45-17
                                  :ARG2 (c45-0 / decide-01
                                               :ARG0 (c45-3 / person
                                                            :ARG0-of (c45-10 / have-rel-role-91
                                                                             :ARG1 (c45-5 / gunman)
                                                                             :ARG2 (c45-19 / son)))
                                               :ARG1 (c45-2 / get-04
                                                            :ARG0 c45-3
                                                            :ARG1 (c45-18 / kill-01
                                                                          :ARG0 c45-3
                                                                          :ARG1 c45-3))))
                    :ARG2 (c45-7 / person
                                 :ARG0-of (c45-8 / have-rel-role-91
                                                 :ARG1 c45-5
                                                 :ARG2 (c45-14 / mother))
                                 :mod (c45-16 / dear)))
       :snt4 (c45-12 / state-01
                     :ARG1 (c45-11 / fact)
                     :polarity -))

# ::snt ...says the dead hostage was killed by the gunman. Yet dipshit Sean blames police.
# ::tokens ["...", "says", "the", "dead", "hostage", "was", "killed", "by", "the", "gunman", ".", "Yet", "dipshit", "Sean", "blames", "police", "."]
# ::lemmas ["...", "say", "the", "dead", "hostage", "be", "kill", "by", "the", "gunman", ".", "yet", "dipshit", "Sean", "blame", "police", "."]
(c46-2 / multi-sentence
       :snt1 (c46-10 / say-01
                     :ARG0 (c46-7 / person
                                  :name (c46-5 / name
                                               :op1 "Sean")
                                  :mod (c46-8 / dipshit))
                     :ARG1 (c46-11 / kill-01
                                   :ARG0 (c46-9 / gunman)
                                   :ARG1 (c46-0 / hostage
                                                :ARG1-of (c46-1 / die-01))))
       :snt2 (c46-13 / have-concession-91
                     :ARG1 (c46-4 / blame-01
                                  :ARG0 (c46-12 / person
                                                :name (c46-6 / name
                                                             :op1 "Sean"))
                                  :ARG1 (c46-3 / police))))

# ::snt I don't think even confirmation from God can convince a deluded twat like you!
# ::tokens ["I", "do", "n't", "think", "even", "confirmation", "from", "God", "can", "convince", "a", "deluded", "twat", "like", "you", "!"]
# ::lemmas ["i", "do", "not", "think", "even", "confirmation", "from", "God", "can", "convince", "a", "deluded", "twat", "like", "you", "!"]
(c47-10 / think-01
        :ARG0 (c47-2 / i)
        :ARG1 (c47-4 / possible-01
                     :ARG1 (c47-6 / convince-01
                                  :ARG0 (c47-5 / confirm-01
                                               :ARG0 (c47-11 / person
                                                             :name (c47-3 / name
                                                                          :op1 "God"))
                                               :mod (c47-1 / even))
                                  :ARG1 (c47-9 / twat
                                               :ARG1-of (c47-7 / delude-01)
                                               :ARG1-of (c47-8 / resemble-01
                                                               :ARG2 (c47-0 / you)))))
        :polarity -)

# ::snt And were I American, you think it clever to use nationality as a disparaging term? Typical Aussie...
# ::tokens ["And", "were", "I", "American", ",", "you", "think", "it", "clever", "to", "use", "nationality", "as", "a", "disparaging", "term", "?", "Typical", "Aussie", "..."]
# ::lemmas ["and", "be", "i", "American", ",", "you", "think", "it", "clever", "to", "use", "nationality", "as", "a", "disparaging", "term", "?", "Typical", "Aussie", "..."]
(c48-1 / multi-sentence
       :snt1 (c48-17 / and
                     :op2 (c48-15 / think-01
                                  :ARG0 (c48-0 / you)
                                  :ARG1 (c48-9 / clever-01
                                               :ARG1 (c48-2 / use-01
                                                            :ARG0 c48-0
                                                            :ARG1 (c48-5 / nationality)
                                                            :ARG2 (c48-12 / term-01
                                                                          :ARG0-of (c48-8 / disparage-01))))
                                  :condition (c48-7 / person
                                                    :mod (c48-10 / country
                                                                 :name (c48-6 / name
                                                                              :op1 "America"))
                                                    :domain (c48-4 / i))
                                  :polarity (c48-3 / amr-unknown)))
       :snt2 (c48-16 / person
                     :mod (c48-13 / country
                                  :name (c48-11 / name
                                                :op1 "Australia"))
                     :ARG1-of (c48-14 / typical-02)))

# ::snt Listen up deluded one, I'm not gonna waste my time putting up with your ridiculous banter.
# ::tokens ["Listen", "up", "deluded", "one", ",", "I", "'m", "not", "gon", "na", "waste", "my", "time", "putting", "up", "with", "your", "ridiculous", "banter", "."]
# ::lemmas ["listen", "up", "delude", "one", ",", "i", "be", "not", "going", "to", "waste", "my", "time", "put", "up", "with", "your", "ridiculous", "banter", "."]
(c49-7 / say-01
       :ARG0 (c49-3 / i)
       :ARG1 (c49-0 / waste-01
                    :ARG0 c49-3
                    :ARG1 (c49-8 / time
                                 :poss c49-3)
                    :ARG2 (c49-4 / put-up-12
                                 :ARG0 c49-3
                                 :ARG1 (c49-2 / banter-01
                                              :ARG0 (c49-1 / you)
                                              :ARG1-of (c49-5 / ridiculous-02)))
                    :polarity -)
       :ARG2 (c49-6 / deluded
                    :domain c49-1))

# ::snt I'm amazed you've lost the plot on this conversation. You've gone full potato.
# ::tokens ["I", "'m", "amazed", "you", "'ve", "lost", "the", "plot", "on", "this", "conversation", ".", "You", "'ve", "gone", "full", "potato", "."]
# ::lemmas ["i", "be", "amazed", "you", "'ve", "lose", "the", "plot", "on", "this", "conversation", ".", "you", "'ve", "go", "full", "potato", "."]
(c50-2 / multi-sentence
       :snt1 (c50-11 / amaze-01
                     :ARG0 (c50-1 / lose-02
                                  :ARG0 (c50-0 / you)
                                  :ARG1 (c50-5 / plot
                                               :topic (c50-6 / converse-01
                                                             :mod (c50-9 / this))))
                     :ARG1 (c50-4 / i))
       :snt2 (c50-7 / go-08
                    :ARG1 (c50-8 / you)
                    :ARG2 (c50-10 / potato
                                  :ARG1-of (c50-3 / full-09))))
