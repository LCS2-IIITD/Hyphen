# ::snt well done Aussies!
# ::tokens ["well", "done", "Aussies", "!"]
# ::lemmas ["well", "do", "Aussies", "!"]
(c1-5 / say-01
      :ARG1 (c1-3 / do-02
                  :ARG1-of (c1-0 / well-09))
      :ARG2 (c1-2 / person
                  :mod (c1-4 / country
                             :name (c1-1 / name
                                         :op1 "Australia"))))

# ::snt Just goes to show EVIL will NEVER WIN
# ::tokens ["Just", "goes", "to", "show", "EVIL", "will", "NEVER", "WIN"]
# ::lemmas ["just", "go", "to", "show", "EVIL", "will", "NEVER", "WIN"]
(c2-4 / go-11
      :ARG2 (c2-5 / show-01
                  :ARG1 (c2-1 / win-01
                              :ARG0 (c2-3 / evil)
                              :time (c2-2 / ever)
                              :polarity -))
      :mod (c2-0 / just))

# ::snt At least the Aussies restrict Muslim immigration, unlike the sheeple in Europe..
# ::tokens ["At", "least", "the", "Aussies", "restrict", "Muslim", "immigration", ",", "unlike", "the", "sheeple", "in", "Europe", ".."]
# ::lemmas ["at", "least", "the", "Aussies", "restrict", "Muslim", "immigration", ",", "unlike", "the", "sheeple", "in", "Europe", ".."]
(c3-6 / restrict-01
      :ARG0 (c3-5 / person
                  :mod (c3-7 / country
                             :name (c3-3 / name
                                         :op1 "Australia")))
      :ARG1 (c3-1 / immigrate-01
                  :ARG0 c3-5
                  :mod (c3-2 / religious-group
                             :name (c3-4 / name
                                         :op1 "Muslim")))
      :mod (c3-12 / at-least)
      :ARG1-of (c3-0 / resemble-01
                     :ARG2 (c3-8 / immigrate-01
                                 :ARG0 (c3-11 / sheeple)
                                 :location (c3-9 / continent
                                                 :name (c3-10 / name
                                                              :op1 "Europe")))
                     :polarity -))

# ::snt well done Sydney
# ::tokens ["well", "done", "Sydney"]
# ::lemmas ["well", "do", "Sydney"]
(c4-4 / say-01
      :ARG1 (c4-3 / do-02
                  :ARG1-of (c4-0 / well-09))
      :ARG2 (c4-2 / person
                  :name (c4-1 / name
                              :op1 "Sydney")))

# ::snt unless action is taken people are going to have to get used to coming together like this. More will come
# ::tokens ["unless", "action", "is", "taken", "people", "are", "going", "to", "have", "to", "get", "used", "to", "coming", "together", "like", "this", ".", "More", "will", "come"]
# ::lemmas ["unless", "action", "be", "take", "people", "be", "go", "to", "have", "to", "get", "use", "to", "come", "together", "like", "this", ".", "more", "will", "come"]
(c5-0 / multi-sentence
      :snt1 (c5-2 / obligate-01
                  :ARG1 (c5-3 / person)
                  :ARG2 (c5-6 / get-03
                              :ARG1 c5-3
                              :ARG2 (c5-1 / use-02
                                          :ARG0 c5-3
                                          :ARG1 (c5-5 / come-01
                                                      :ARG1 c5-3
                                                      :manner (c5-9 / together)
                                                      :ARG1-of (c5-4 / resemble-01
                                                                     :ARG2 (c5-8 / this)))))
                  :condition (c5-10 / act-02
                                    :polarity -))
      :snt2 c5-5
      :ARG1 (c5-7 / more))
