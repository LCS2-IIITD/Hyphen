# ::snt If you are for free speech then this is for you support buy it now
# ::tokens ["If", "you", "are", "for", "free", "speech", "then", "this", "is", "for", "you", "support", "buy", "it", "now"]
# ::lemmas ["if", "you", "be", "for", "free", "speech", "then", "this", "be", "for", "you", "support", "buy", "it", "now"]
(c1-5 / support-01
      :ARG0 (c1-0 / you)
      :ARG1 (c1-2 / buy-01
                  :ARG0 c1-0
                  :ARG1 (c1-6 / this)
                  :time (c1-4 / now)
                  :mode imperative)
      :condition c1-5
      :ARG0 c1-0
      :ARG1 (c1-3 / speak-01
                  :ARG3-of (c1-1 / free-04)))

# ::snt - thanks for the clarification !
# ::tokens ["-", "thanks", "for", "the", "clarification", "!"]
# ::lemmas ["-", "thank", "for", "the", "clarification", "!"]
(c2-2 / thank-01
      :ARG1 (c2-0 / you)
      :ARG2 (c2-1 / clarify-10
                  :ARG0 c2-0)
      :mode expressive)

# ::snt Not Banksy. It is
# ::tokens ["Not", "Banksy", ".", "It", "is"]
# ::lemmas ["not", "Banksy", ".", "it", "be"]
(c3-0 / multi-sentence
      :snt1 (c3-2 / Banksy
                  :polarity -)
      :snt2 (c3-1 / it))

# ::snt Not Banksy. Lucille Clerc.
# ::tokens ["Not", "Banksy", ".", "Lucille", "Clerc", "."]
# ::lemmas ["not", "Banksy", ".", "Lucille", "Clerc", "."]
(c4-2 / multi-sentence
      :snt1 (c4-3 / Banksy
                  :polarity -)
      :snt2 (c4-1 / person
                  :name (c4-0 / name
                              :op1 "Lucille"
                              :op2 "Clerc")))

# ::snt banksy. That's a drawing by a female illustrator
# ::tokens ["banksy", ".", "That", "'s", "a", "drawing", "by", "a", "female", "illustrator"]
# ::lemmas ["banksy", ".", "that", "be", "a", "drawing", "by", "a", "female", "illustrator"]
(c5-1 / multi-sentence
      :snt1 (c5-6 / say-01
                  :ARG1 (c5-2 / sketch-01
                              :ARG0 (c5-0 / female
                                          :ARG0-of (c5-3 / illustrate-01))
                              :ARG1 (c5-7 / that))
                  :ARG2 (c5-5 / person
                              :name (c5-4 / name
                                          :op1 "banksy")))
      :snt2 c5-7)

# ::snt that's not a bank at illustration
# ::tokens ["that", "'s", "not", "a", "bank", "at", "illustration"]
# ::lemmas ["that", "be", "not", "a", "bank", "at", "illustration"]
(c6-2 / bank
      :domain (c6-0 / that)
      :location (c6-1 / illustrate-01)
      :polarity -)

# ::snt it's by
# ::tokens ["it", "'s", "by"]
# ::lemmas ["it", "be", "by"]
(c7-0 / by-oneself)

# ::snt : You can try to break the pencil but it will multiply...
# ::tokens [":", "You", "can", "try", "to", "break", "the", "pencil", "but", "it", "will", "multiply", "..."]
# ::lemmas [":", "you", "can", "try", "to", "break", "the", "pencil", "but", "it", "will", "multiply", "..."]
(c8-4 / contrast-01
      :ARG1 (c8-3 / possible-01
                  :ARG1 (c8-5 / try-01
                              :ARG0 (c8-0 / you)
                              :ARG1 (c8-2 / break-01
                                          :ARG0 c8-0
                                          :ARG1 (c8-6 / pencil))))
      :ARG2 (c8-1 / multiply-01
                  :ARG1 c8-6))
