# ::snt Interesting, but I do not agree.
# ::tokens ["Interesting", ",", "but", "I", "do", "not", "agree", "."]
# ::lemmas ["interesting", ",", "but", "i", "do", "not", "agree", "."]
(c1-1 / contrast-01
      :ARG1 (c1-3 / interest-01)
      :ARG2 (c1-0 / agree-01
                  :ARG0 (c1-2 / i)
                  :polarity -))

# ::snt Dear shd know dat thr r phases..1comes &amp; othe goes away.. tho laws based onTruth r Constant &amp; Unchangeable v adjust..it seems
# ::tokens ["Dear", "shd", "know", "dat", "thr", "r", "phases", "..", "1comes", "&", "amp", ";", "othe", "goes", "away", "..", "tho", "laws", "based", "onTruth", "r", "Constant", "&", "amp", ";", "Unchangeable", "v", "adjust", "..", "it", "seems"]
# ::lemmas ["dear", "shd", "know", "dat", "thr", "r", "phase", "..", "1comes", "&", "amp", ";", "othe", "go", "away", "..", "tho", "law", "base", "onTruth", "r", "Constant", "&", "amp", ";", "unchangeable", "v", "adjust", "..", "it", "seem"]
(c2-15 / know-01
       :ARG0 (c2-1 / person
                   :mod (c2-2 / dear))
       :ARG1 (c2-7 / and
                   :op1 (c2-18 / come-01
                               :ARG1 (c2-6 / phase))
                   :op2 (c2-16 / out-06
                               :ARG1 c2-6)
                   :op3 (c2-12 / go-02
                               :ARG0 c2-6)
                   :op4 (c2-3 / go-01
                              :ARG1 c2-6
                              :ARG4 (c2-13 / away)))
       :concession (c2-11 / and
                          :op1 (c2-10 / base-02
                                      :ARG1 (c2-8 / law)
                                      :ARG2 (c2-20 / truth))
                          :op2 (c2-19 / and
                                      :op1 (c2-4 / constant)
                                      :op2 (c2-17 / amp))
                          :op3 (c2-9 / possible-01
                                     :ARG1 (c2-14 / change-01)
                                     :polarity -)
                          :op4 (c2-0 / adjust-01))
       :ARG1-of (c2-5 / seem-01))

# ::snt Man: The question is where one draws the line?" Bill Hicks: There are no lines, I say: erase all the lines.
# ::tokens ["Man", ":", "The", "question", "is", "where", "one", "draws", "the", "line", "?", "\"", "Bill", "Hicks", ":", "There", "are", "no", "lines", ",", "I", "say", ":", "erase", "all", "the", "lines", "."]
# ::lemmas ["man", ":", "the", "question", "be", "where", "one", "draw", "the", "line", "?", "\"", "Bill", "Hicks", ":", "there", "be", "no", "line", ",", "i", "say", ":", "erase", "all", "the", "line", "."]
(c3-11 / say-01
       :ARG0 (c3-1 / man)
       :ARG1 (c3-3 / question-01
                   :ARG1 (c3-9 / draw-line-07
                               :location (c3-12 / amr-unknown)))
       :ARG2 (c3-8 / person
                   :name (c3-7 / name
                               :op1 "Bill"
                               :op2 "Hicks"))
       :ARG3 (c3-0 / line
                   :ARG1-of (c3-2 / say-01
                                  :ARG0 (c3-6 / i)
                                  :ARG3 (c3-4 / erase-01
                                              :ARG1 (c3-10 / line
                                                           :mod (c3-5 / all))))
                   :polarity -))

# ::snt the most genius
# ::tokens ["the", "most", "genius"]
# ::lemmas ["the", "most", "genius"]
(c4-0 / have-degree-91
      :ARG2 (c4-2 / genius)
      :ARG3 (c4-1 / most))

# ::snt Don't smoke, it's bad for your health (free speech/satire).
# ::tokens ["Do", "n't", "smoke", ",", "it", "'s", "bad", "for", "your", "health", "(", "free", "speech", "/", "satire", ")", "."]
# ::lemmas ["do", "not", "smoke", ",", "it", "be", "bad", "for", "your", "health", "(", "free", "speech", "/", "satire", ")", "."]
(c6-9 / smoke-02
      :ARG0 (c6-1 / you)
      :ARG1-of (c6-8 / cause-01
                     :ARG0 (c6-3 / bad-04
                                 :ARG1 c6-9
                                 :ARG2 (c6-0 / healthy
                                             :domain c6-1
                                             :example (c6-4 / or
                                                            :op1 (c6-5 / speak-01
                                                                       :ARG3-of (c6-2 / free-04))
                                                            :op2 (c6-6 / newspaper
                                                                       :name (c6-7 / name
                                                                                   :op1 "satire"))))))
      :polarity -
      :mode imperative)

# ::snt Still miss u old friend. Still relevant! MT Bill Hicks on what really means
# ::tokens ["Still", "miss", "u", "old", "friend", ".", "Still", "relevant", "!", "MT", "Bill", "Hicks", "on", "what", "really", "means"]
# ::lemmas ["still", "miss", "u", "old", "friend", ".", "still", "relevant", "!", "MT", "Bill", "Hicks", "on", "what", "really", "mean"]
(c7-2 / multi-sentence
      :snt1 (c7-9 / miss-01
                  :ARG0 (c7-6 / i)
                  :ARG1 (c7-10 / person
                               :ARG0-of (c7-0 / have-rel-role-91
                                              :ARG1 c7-6
                                              :ARG2 (c7-1 / friend))
                               :mod (c7-4 / old))
                  :mod (c7-13 / still))
      :snt2 (c7-11 / relevant-01
                   :ARG1 (c7-15 / person
                                :name (c7-8 / name
                                            :op1 "Bill"
                                            :op2 "Hicks")
                                :ARG0-of (c7-16 / have-org-role-91
                                                :ARG2 (c7-3 / MT)))
                   :topic (c7-14 / thing
                                 :ARG2-of (c7-12 / mean-01
                                                 :ARG1-of (c7-7 / real-04)))
                   :mod (c7-5 / still)))

# ::snt Bill Hicks is missed
# ::tokens ["Bill", "Hicks", "is", "missed"]
# ::lemmas ["Bill", "Hicks", "be", "miss"]
(c8-2 / miss-01
      :ARG1 (c8-1 / person
                  :name (c8-0 / name
                              :op1 "Bill"
                              :op2 "Hicks")))
