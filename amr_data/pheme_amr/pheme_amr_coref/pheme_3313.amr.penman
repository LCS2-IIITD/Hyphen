# ::snt : Yes, people are taking selfies as dozens are held hostage at a Sydney cafe nearby this is disgusting
# ::tokens [":", "Yes", ",", "people", "are", "taking", "selfies", "as", "dozens", "are", "held", "hostage", "at", "a", "Sydney", "cafe", "nearby", "this", "is", "disgusting"]
# ::lemmas [":", "yes", ",", "people", "be", "take", "selfie", "as", "dozens", "be", "hold", "hostage", "at", "a", "Sydney", "cafe", "nearby", "this", "be", "disgusting"]
(c1-13 / and
       :op1 (c1-7 / photograph-01
                  :ARG0 (c1-12 / person))
       :op2 (c1-0 / hold-01
                  :ARG1 (c1-4 / person
                              :quant (c1-3 / multiple
                                           :op1 12))
                  :ARG2 (c1-2 / hostage)
                  :location (c1-9 / cafe
                                  :location (c1-8 / city
                                                  :name (c1-5 / name
                                                              :op1 "Sydney"))
                                  :ARG1-of (c1-6 / near-02
                                                 :ARG2 (c1-11 / this))))
       :mod (c1-1 / yes)
       :ARG0-of (c1-10 / disgust-01))

# ::snt Sites like yours reporting on it instead of ignoring them are the reason they will continue to do so. Hypocrite.
# ::tokens ["Sites", "like", "yours", "reporting", "on", "it", "instead", "of", "ignoring", "them", "are", "the", "reason", "they", "will", "continue", "to", "do", "so", ".", "Hypocrite", "."]
# ::lemmas ["site", "like", "yours", "report", "on", "it", "instead", "of", "ignore", "they", "be", "the", "reason", "they", "will", "continue", "to", "do", "so", ".", "hypocrite", "."]
(c2-3 / multi-sentence
      :snt1 (c2-6 / cause-01
                  :ARG0 (c2-4 / instead-of-91
                              :ARG1 (c2-5 / report-01
                                          :ARG0 (c2-1 / you)
                                          :ARG1 (c2-7 / it))
                              :ARG2 (c2-2 / ignore-01
                                          :ARG0 c2-1
                                          :ARG1 c2-7))
                  :ARG1 (c2-8 / continue-01
                              :ARG0 (c2-11 / they)
                              :ARG1 (c2-9 / do-02
                                          :ARG0 c2-11
                                          :ARG1 (c2-10 / so))))
      :snt2 (c2-0 / hypocrite))

# ::snt : Yes, people are taking selfies as dozens are held hostage at a Sydney cafe nearby hate society
# ::tokens [":", "Yes", ",", "people", "are", "taking", "selfies", "as", "dozens", "are", "held", "hostage", "at", "a", "Sydney", "cafe", "nearby", "hate", "society"]
# ::lemmas [":", "yes", ",", "people", "be", "take", "selfie", "as", "dozens", "be", "hold", "hostage", "at", "a", "Sydney", "cafe", "nearby", "hate", "society"]
(c3-11 / take-01
       :ARG0 (c3-6 / person)
       :ARG1 (c3-10 / selfie)
       :time (c3-0 / hold-01
                   :ARG1 (c3-12 / person
                                :quant (c3-2 / multiple
                                             :op1 12))
                   :ARG2 (c3-13 / hostage)
                   :location (c3-8 / cafe
                                   :location (c3-7 / city
                                                   :name (c3-4 / name
                                                               :op1 "Sydney"))
                                   :mod (c3-5 / nearby)
                                   :mod (c3-3 / society
                                              :ARG0-of (c3-9 / hate-01))))
       :mod (c3-1 / yes))

# ::snt ***Smh***Disgusting...
# ::tokens ["*", "*", "*", "Smh***Disgusting", "..."]
# ::lemmas ["*", "*", "*", "smh***disguste", "..."]
(c4-0 / disgust-01
      :mode expressive)

# ::snt its day time in sydney? wtf
# ::tokens ["its", "day", "time", "in", "sydney", "?", "wtf"]
# ::lemmas ["its", "day", "time", "in", "sydney", "?", "wtf"]
(c5-1 / multi-sentence
      :snt1 (c5-2 / be-temporally-at-91
                  :ARG2 (c5-5 / day)
                  :location (c5-6 / city
                                  :name (c5-4 / name
                                              :op1 "Sydney"))
                  :polarity (c5-7 / amr-unknown))
      :snt2 (c5-3 / amr-unknown
                  :mod (c5-0 / fuck
                             :mode expressive)))

# ::snt Fuck these heartless jerks : Yes, people are taking selfies as dozens are held hostage at Sydney cafe nearby
# ::tokens ["Fuck", "these", "heartless", "jerks", ":", "Yes", ",", "people", "are", "taking", "selfies", "as", "dozens", "are", "held", "hostage", "at", "Sydney", "cafe", "nearby"]
# ::lemmas ["fuck", "these", "heartless", "jerk", ":", "yes", ",", "people", "be", "take", "selfie", "as", "dozens", "be", "hold", "hostage", "at", "Sydney", "cafe", "nearby"]
(c6-16 / and
       :op1 (c6-3 / fuck-01
                  :ARG1 (c6-0 / jerk
                              :mod (c6-14 / this)
                              :mod (c6-1 / heartless))
                  :mode expressive)
       :op2 (c6-12 / take-01
                   :ARG0 (c6-8 / person)
                   :ARG1 (c6-13 / selfie)
                   :time (c6-4 / hold-01
                               :ARG1 (c6-15 / person
                                            :quant (c6-5 / multiple
                                                         :op1 12))
                               :ARG2 (c6-7 / hostage)
                               :location (c6-10 / cafe
                                                :location (c6-9 / city
                                                                :name (c6-6 / name
                                                                            :op1 "Sydney"))
                                                :location (c6-11 / nearby)))
                   :mod (c6-2 / yes)))

# ::snt scum of the earth
# ::tokens ["scum", "of", "the", "earth"]
# ::lemmas ["scum", "of", "the", "earth"]
(c7-0 / scum
      :poss (c7-1 / earth))

# ::snt Thats fair. PEACE if only.
# ::tokens ["That", "s", "fair", ".", "PEACE", "if", "only", "."]
# ::lemmas ["that", "s", "fair", ".", "PEACE", "if", "only", "."]
(c8-2 / multi-sentence
      :snt1 (c8-1 / fair-01
                  :ARG1 (c8-5 / that))
      :snt2 (c8-0 / have-condition-91
                  :ARG1 (c8-4 / peace)
                  :ARG2 (c8-3 / only)))

# ::snt moron
# ::tokens ["moron"]
# ::lemmas ["moron"]
(c9-0 / moron)

# ::snt Selfies near a human crisis? Wow, people! What is WRONG with this?!!
# ::tokens ["Selfies", "near", "a", "human", "crisis", "?", "Wow", ",", "people", "!", "What", "is", "WRONG", "with", "this", "?", "!", "!"]
# ::lemmas ["selfie", "near", "a", "human", "crisis", "?", "wow", ",", "people", "!", "what", "be", "wrong", "with", "this", "?", "!", "!"]
(c10-2 / multi-sentence
       :snt1 (c10-7 / selfish
                    :location (c10-4 / near-02
                                     :ARG2 (c10-6 / crisis
                                                  :mod (c10-0 / human))))
       :snt2 (c10-5 / person
                    :mod (c10-1 / wow
                                :mode expressive))
       :snt3 (c10-3 / wrong-02
                    :ARG1 (c10-9 / amr-unknown)
                    :ARG2 (c10-8 / this)
                    :polarity c10-9))

# ::snt hey believe what you believe let others do the same.... never shall those roads met then*
# ::tokens ["hey", "believe", "what", "you", "believe", "let", "others", "do", "the", "same", "....", "never", "shall", "those", "roads", "met", "then", "*"]
# ::lemmas ["hey", "believe", "what", "you", "believe", "let", "other", "do", "the", "same", "....", "never", "shall", "those", "road", "meet", "then", "*"]
(c11-2 / multi-sentence
       :snt1 (c11-3 / believe-01
                    :ARG0 (c11-0 / you)
                    :ARG1 (c11-15 / thing
                                  :ARG1-of (c11-10 / believe-01
                                                   :ARG0 c11-0))
                    :mode imperative)
       :snt2 (c11-1 / let-01
                    :ARG0 (c11-12 / you)
                    :ARG1 (c11-9 / do-02
                                 :ARG0 (c11-4 / other)
                                 :ARG1 (c11-14 / thing
                                               :ARG1-of (c11-13 / same-01)))
                    :mode imperative)
       :snt3 (c11-8 / meet-03
                    :ARG1 (c11-11 / road
                                  :mod (c11-7 / that))
                    :time (c11-5 / ever)
                    :mod (c11-6 / then)
                    :polarity -))

# ::snt because there ain't no god. not B.C.People need to get a grip
# ::tokens ["because", "there", "ai", "n't", "no", "god", ".", "not", "B.C.People", "need", "to", "get", "a", "grip"]
# ::lemmas ["because", "there", "be", "not", "no", "god", ".", "not", "b.c.people", "need", "to", "get", "a", "grip"]
(c12-4 / cause-01
       :ARG0 (c12-3 / contrast-01
                    :ARG1 (c12-5 / god
                                 :polarity -)
                    :ARG2 (c12-7 / country
                                 :name (c12-0 / name
                                              :op1 "B.C.")
                                 :polarity -))
       :ARG1 (c12-1 / need-01
                    :ARG0 (c12-2 / person)
                    :ARG1 (c12-6 / grip-01
                                 :ARG0 c12-2)))

# ::snt would that be the Christian, Jewish or Muslim god.ffs
# ::tokens ["would", "that", "be", "the", "Christian", ",", "Jewish", "or", "Muslim", "god.ffs"]
# ::lemmas ["would", "that", "be", "the", "Christian", ",", "Jewish", "or", "Muslim", "god.ff"]
(c13-8 / god
       :domain (c13-9 / that)
       :mod (c13-1 / or
                   :op1 (c13-7 / religious-group
                               :name (c13-4 / name
                                            :op1 "Christianity"))
                   :op2 (c13-3 / religious-group
                               :name (c13-5 / name
                                            :op1 "Jew"))
                   :op3 (c13-2 / religious-group
                               :name (c13-6 / name
                                            :op1 "Muslim")))
       :mod (c13-0 / off))

# ::snt : our societal issues summed up in one picture.
# ::tokens [":", "our", "societal", "issues", "summed", "up", "in", "one", "picture", "."]
# ::lemmas [":", "our", "societal", "issue", "sum", "up", "in", "one", "picture", "."]
(c14-4 / sum-up-01
       :ARG0 (c14-3 / picture
                    :quant 1)
       :ARG1 (c14-2 / issue-02
                    :ARG1 (c14-1 / society
                                 :poss (c14-0 / we))))

# ::snt Yes
# ::tokens ["Yes"]
# ::lemmas ["yes"]
(c15-0 / yes)

# ::snt : Yes, people are taking selfies as dozens are held hostage at a Sydney cafe nearby are a Sick World
# ::tokens [":", "Yes", ",", "people", "are", "taking", "selfies", "as", "dozens", "are", "held", "hostage", "at", "a", "Sydney", "cafe", "nearby", "are", "a", "Sick", "World"]
# ::lemmas [":", "yes", ",", "people", "be", "take", "selfie", "as", "dozens", "be", "hold", "hostage", "at", "a", "Sydney", "cafe", "nearby", "be", "a", "Sick", "world"]
(c17-13 / and
        :op1 (c17-8 / photograph-01
                    :ARG0 (c17-12 / person))
        :op2 (c17-0 / hold-01
                    :ARG1 (c17-5 / person
                                 :quant (c17-4 / multiple
                                               :op1 12))
                    :ARG2 (c17-3 / hostage)
                    :location (c17-10 / cafe
                                      :location (c17-6 / nearby)
                                      :mod (c17-9 / city
                                                  :name (c17-7 / name
                                                               :op1 "Sydney"))))
        :mod (c17-1 / yes)
        :mod (c17-2 / world
                    :ARG0-of (c17-11 / sick-05)))

# ::snt why would you ask such a question??
# ::tokens ["why", "would", "you", "ask", "such", "a", "question", "?", "?"]
# ::lemmas ["why", "would", "you", "ask", "such", "a", "question", "?", "?"]
(c18-5 / ask-01
       :ARG0 (c18-0 / you)
       :ARG1 (c18-4 / thing
                    :ARG1-of (c18-1 / question-01)
                    :mod (c18-3 / such))
       :purpose (c18-2 / amr-unknown))

# ::snt Disgusting.
# ::tokens ["Disgusting", "."]
# ::lemmas ["disgusting", "."]
(c19-0 / disgust-01)

# ::snt our societal issues summed up in one picture.
# ::tokens ["our", "societal", "issues", "summed", "up", "in", "one", "picture", "."]
# ::lemmas ["our", "societal", "issue", "sum", "up", "in", "one", "picture", "."]
(c20-4 / sum-up-01
       :ARG0 (c20-3 / picture
                    :quant 1)
       :ARG1 (c20-2 / issue-02
                    :ARG1 (c20-1 / society
                                 :poss (c20-0 / we))))

# ::snt : Yes, people are taking selfies as dozens are held hostage at a Sydney cafe nearby wrong with people?
# ::tokens [":", "Yes", ",", "people", "are", "taking", "selfies", "as", "dozens", "are", "held", "hostage", "at", "a", "Sydney", "cafe", "nearby", "wrong", "with", "people", "?"]
# ::lemmas [":", "yes", ",", "people", "be", "take", "selfie", "as", "dozens", "be", "hold", "hostage", "at", "a", "Sydney", "cafe", "nearby", "wrong", "with", "people", "?"]
(c21-12 / take-01
        :ARG0 (c21-7 / person)
        :ARG1 (c21-10 / selfie)
        :mod (c21-1 / yes)
        :time (c21-0 / hold-01
                     :ARG1 (c21-13 / person
                                   :quant (c21-3 / multiple
                                                 :op1 12))
                     :ARG2 (c21-14 / hostage)
                     :location (c21-9 / cafe
                                      :location (c21-8 / city
                                                       :name (c21-5 / name
                                                                    :op1 "Sydney"))
                                      :location (c21-6 / nearby)))
        :ARG1-of (c21-2 / wrong-02
                        :ARG2 (c21-4 / person)
                        :polarity (c21-11 / amr-unknown)))

# ::snt I think He left the building already
# ::tokens ["I", "think", "He", "left", "the", "building", "already"]
# ::lemmas ["i", "think", "he", "leave", "the", "building", "already"]
(c22-4 / think-01
       :ARG0 (c22-3 / i)
       :ARG1 (c22-1 / leave-11
                    :ARG0 (c22-0 / he)
                    :ARG1 (c22-2 / building)
                    :time (c22-5 / already)))

# ::snt got me
# ::tokens ["got", "me"]
# ::lemmas ["get", "i"]
(c23-1 / get-01
       :ARG0 (c23-0 / you)
       :ARG1 (c23-2 / i))

# ::snt : Yes, people are taking selfies as dozens are held hostage at a Sydney cafe nearby Disgusting
# ::tokens [":", "Yes", ",", "people", "are", "taking", "selfies", "as", "dozens", "are", "held", "hostage", "at", "a", "Sydney", "cafe", "nearby", "Disgusting"]
# ::lemmas [":", "yes", ",", "people", "be", "take", "selfie", "as", "dozens", "be", "hold", "hostage", "at", "a", "Sydney", "cafe", "nearby", "Disgusting"]
(c24-9 / take-01
       :ARG0 (c24-4 / person)
       :ARG1 (c24-8 / selfie)
       :time (c24-0 / hold-01
                    :ARG1 (c24-10 / person
                                  :quant (c24-1 / multiple
                                                :op1 12))
                    :ARG2 (c24-11 / hostage)
                    :location (c24-6 / cafe
                                     :name (c24-2 / name
                                                  :op1 "Disgusting")
                                     :location (c24-3 / nearby)
                                     :location (c24-5 / city
                                                      :name (c24-7 / name
                                                                   :op1 "Sydney")))))

# ::snt they should be the hostages
# ::tokens ["they", "should", "be", "the", "hostages"]
# ::lemmas ["they", "should", "be", "the", "hostage"]
(c25-1 / recommend-01
       :ARG1 (c25-0 / hostage
                    :domain (c25-2 / they)))

# ::snt what a selfie madness
# ::tokens ["what", "a", "selfie", "madness"]
# ::lemmas ["what", "a", "selfie", "madness"]
(c26-2 / madness
       :mod (c26-0 / selfie)
       :degree (c26-1 / so))
