# ::snt We are monitoring all twitter feeds and will pass on information as we get it. You can follow as well
# ::tokens ["We", "are", "monitoring", "all", "twitter", "feeds", "and", "will", "pass", "on", "information", "as", "we", "get", "it", ".", "You", "can", "follow", "as", "well"]
# ::lemmas ["we", "be", "monitor", "all", "twitter", "feed", "and", "will", "pass", "on", "information", "as", "we", "get", "it", ".", "you", "can", "follow", "as", "well"]
(c1-3 / multi-sentence
      :snt1 (c1-14 / and
                   :op1 (c1-10 / monitor-01
                               :ARG0 (c1-0 / we)
                               :ARG1 (c1-2 / feed
                                           :mod (c1-11 / publication
                                                       :name (c1-8 / name
                                                                   :op1 "Twitter"))
                                           :mod (c1-5 / all)))
                   :op2 (c1-13 / pass-on-09
                               :ARG0 c1-0
                               :ARG1 (c1-6 / information)
                               :time (c1-12 / get-01
                                            :ARG0 c1-0
                                            :ARG1 c1-6)))
      :snt2 (c1-4 / possible-01
                  :ARG1 (c1-7 / follow-02
                              :ARG0 (c1-1 / you)
                              :mod (c1-9 / as-well))))

# ::snt exactly! We tested the emergency alert system yesterday! Why haven't we got a notification?
# ::tokens ["exactly", "!", "We", "tested", "the", "emergency", "alert", "system", "yesterday", "!", "Why", "have", "n't", "we", "got", "a", "notification", "?"]
# ::lemmas ["exactly", "!", "we", "test", "the", "emergency", "alert", "system", "yesterday", "!", "why", "have", "not", "we", "get", "a", "notification", "?"]
(c2-2 / multi-sentence
      :snt1 (c2-4 / exact
                  :mode expressive)
      :snt2 (c2-10 / test-01
                   :ARG0 (c2-0 / we)
                   :ARG1 (c2-9 / system
                               :ARG0-of (c2-11 / alert-01
                                               :ARG2 (c2-3 / emergency)))
                   :time (c2-1 / yesterday))
      :snt3 (c2-8 / cause-01
                  :ARG0 (c2-5 / amr-unknown)
                  :ARG1 (c2-7 / notify-01
                              :ARG1 (c2-6 / we)
                              :polarity -)))

# ::snt why hasn't the university sent an emergency notification? Should have a while ago.
# ::tokens ["why", "has", "n't", "the", "university", "sent", "an", "emergency", "notification", "?", "Should", "have", "a", "while", "ago", "."]
# ::lemmas ["why", "have", "not", "the", "university", "send", "an", "emergency", "notification", "?", "should", "have", "a", "while", "ago", "."]
(c3-1 / multi-sentence
      :snt1 (c3-9 / cause-01
                  :ARG0 (c3-11 / amr-unknown)
                  :ARG1 (c3-10 / send-01
                               :ARG0 (c3-2 / university)
                               :ARG1 (c3-6 / notification
                                           :mod (c3-4 / emergency))
                               :polarity -))
      :snt2 (c3-8 / recommend-01
                  :ARG1 (c3-5 / send-01
                              :ARG1 c3-6
                              :time (c3-3 / before
                                          :op1 (c3-7 / now)
                                          :quant (c3-0 / while)))))

# ::snt We are monitoring all uOttawa and City of Ottawa social media pages and will pass on information as we get it
# ::tokens ["We", "are", "monitoring", "all", "uOttawa", "and", "City", "of", "Ottawa", "social", "media", "pages", "and", "will", "pass", "on", "information", "as", "we", "get", "it"]
# ::lemmas ["we", "be", "monitor", "all", "uOttawa", "and", "City", "of", "Ottawa", "social", "medium", "page", "and", "will", "pass", "on", "information", "as", "we", "get", "it"]
(c4-14 / and
       :op1 (c4-1 / monitor-01
                  :ARG0 (c4-0 / we)
                  :ARG1 (c4-6 / page
                              :mod (c4-7 / media
                                         :mod (c4-12 / social))
                              :part-of (c4-2 / and
                                             :op1 (c4-8 / city
                                                        :name (c4-4 / name
                                                                    :op1 "UOttawa"))
                                             :op2 (c4-9 / city
                                                        :name (c4-5 / name
                                                                    :op1 "City"
                                                                    :op2 "of"
                                                                    :op3 "Ottawa")))
                              :mod (c4-10 / all)))
       :op2 (c4-13 / pass-on-09
                   :ARG0 c4-0
                   :ARG1 (c4-3 / information)
                   :time (c4-11 / get-01
                                :ARG0 c4-0
                                :ARG1 c4-3)))

# ::snt Avoid Rideau Center and surroundings, Protection monitoring ~AJ
# ::tokens ["Avoid", "Rideau", "Center", "and", "surroundings", ",", "Protection", "monitoring", "~AJ"]
# ::lemmas ["Avoid", "Rideau", "Center", "and", "surrounding", ",", "protection", "monitoring", "~aj"]
(c5-11 / and
       :op1 (c5-3 / avoid-01
                  :ARG0 (c5-0 / you)
                  :ARG1 (c5-5 / and
                              :op1 (c5-1 / facility
                                         :name (c5-4 / name
                                                     :op1 "Rideau"
                                                     :op2 "Center"))
                              :op2 (c5-9 / thing
                                         :ARG0-of (c5-8 / surround-01
                                                        :ARG1 c5-1)))
                  :mode imperative)
       :op2 (c5-2 / monitor-01
                  :ARG0 (c5-6 / product
                              :name (c5-7 / name
                                          :op1 "AJ"))
                  :ARG1 (c5-10 / protect-01)))
