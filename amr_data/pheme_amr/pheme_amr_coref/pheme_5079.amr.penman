# ::snt no but I live like half an hour away I'm watching live on the news!
# ::tokens ["no", "but", "I", "live", "like", "half", "an", "hour", "away", "I", "'m", "watching", "live", "on", "the", "news", "!"]
# ::lemmas ["no", "but", "i", "live", "like", "half", "an", "hour", "away", "i", "be", "watch", "live", "on", "the", "news", "!"]
(c1-7 / contrast-01
      :ARG2 (c1-3 / live-01
                  :ARG0 (c1-4 / i)
                  :ARG1 (c1-1 / watch-01
                              :ARG0 c1-4
                              :ARG1 (c1-5 / news)
                              :manner (c1-8 / live))
                  :location (c1-9 / away
                                  :op1 (c1-6 / distance-quantity
                                             :unit (c1-0 / hour)
                                             :quant 0.5)
                                  :quant (c1-2 / like))))

# ::snt I'm scared something rash is going to happen while on live television
# ::tokens ["I", "'m", "scared", "something", "rash", "is", "going", "to", "happen", "while", "on", "live", "television"]
# ::lemmas ["i", "be", "scared", "something", "rash", "be", "go", "to", "happen", "while", "on", "live", "television"]
(c2-5 / scare-01
      :ARG0 (c2-6 / television
                  :mod (c2-0 / live))
      :ARG1 (c2-3 / i)
      :ARG2 (c2-1 / event
                  :mod (c2-4 / rash
                             :mod (c2-2 / something))
                  :time c2-6))

# ::snt wait where you there?
# ::tokens ["wait", "where", "you", "there", "?"]
# ::lemmas ["wait", "where", "you", "there", "?"]
(c3-0 / wait-01
      :ARG1 (c3-2 / you)
      :location (c3-1 / there)
      :polarity (c3-3 / amr-unknown))

# ::snt what time is it there? like am?
# ::tokens ["what", "time", "is", "it", "there", "?", "like", "am", "?"]
# ::lemmas ["what", "time", "be", "it", "there", "?", "like", "am", "?"]
(c4-0 / multi-sentence
      :snt1 (c4-1 / be-temporally-at-91
                  :ARG2 (c4-6 / amr-unknown)
                  :location (c4-5 / there))
      :snt2 (c4-3 / resemble-01
                  :ARG1 (c4-4 / be-temporally-at-91
                              :ARG2 (c4-2 / amr-unknown))))

# ::snt of the hostages died, wounded and the bad guy is now dead
# ::tokens ["of", "the", "hostages", "died", ",", "wounded", "and", "the", "bad", "guy", "is", "now", "dead"]
# ::lemmas ["of", "the", "hostage", "die", ",", "wound", "and", "the", "bad", "guy", "be", "now", "dead"]
(c5-8 / and
      :op1 (c5-6 / die-01
                 :ARG1 (c5-0 / hostage
                             :ARG1-of (c5-4 / include-91
                                            :ARG2 c5-0)))
      :op2 (c5-1 / wound-01
                 :ARG1 c5-0)
      :op3 (c5-2 / die-01
                 :ARG1 (c5-7 / guy
                             :ARG1-of (c5-3 / bad-07))
                 :time (c5-5 / now)))

# ::snt what happened?
# ::tokens ["what", "happened", "?"]
# ::lemmas ["what", "happen", "?"]
(c6-0 / event
      :polarity (c6-1 / amr-unknown))

# ::snt oh no
# ::tokens ["oh", "no"]
# ::lemmas ["oh", "no"]
(c7-0 / oh-no
      :mode expressive)

# ::snt really omg.. I'm really scared, apparently some stuff has been reported in other suburbs in Sydney
# ::tokens ["really", "omg", "..", "I", "'m", "really", "scared", ",", "apparently", "some", "stuff", "has", "been", "reported", "in", "other", "suburbs", "in", "Sydney"]
# ::lemmas ["really", "omg", "..", "i", "be", "really", "scared", ",", "apparently", "some", "stuff", "have", "be", "report", "in", "other", "suburb", "in", "Sydney"]
(c8-10 / scare-01
       :ARG0 (c8-8 / report-01
                   :ARG1 (c8-4 / stuff
                               :mod (c8-0 / some))
                   :location (c8-3 / suburb
                                   :mod (c8-2 / other)
                                   :location (c8-9 / city
                                                   :name (c8-7 / name
                                                               :op1 "Sydney")))
                   :ARG1-of (c8-11 / appear-02))
       :ARG1 (c8-5 / i)
       :degree (c8-6 / really)
       :mod (c8-1 / oh-my-god
                  :mode expressive))

# ::snt there is a person in a cafe holding people hostage etc.
# ::tokens ["there", "is", "a", "person", "in", "a", "cafe", "holding", "people", "hostage", "etc", "."]
# ::lemmas ["there", "be", "a", "person", "in", "a", "cafe", "hold", "people", "hostage", "etc", "."]
(c9-4 / and
      :op1 (c9-0 / hold-01
                 :ARG0 (c9-2 / person)
                 :ARG1 (c9-5 / person)
                 :ARG3 (c9-6 / hostage))
      :op2 (c9-1 / et-cetera)
      :location (c9-3 / cafe))

# ::snt okay sorry geez I just read it
# ::tokens ["okay", "sorry", "geez", "I", "just", "read", "it"]
# ::lemmas ["okay", "sorry", "geez", "i", "just", "read", "it"]
(c10-2 / multi-sentence
       :snt1 (c10-7 / sorry-01
                    :ARG1 (c10-4 / i)
                    :ARG1-of (c10-3 / okay-04))
       :snt2 (c10-5 / read-01
                    :ARG0 (c10-6 / i)
                    :ARG1 (c10-1 / it)
                    :time (c10-0 / just)
                    :mod (c10-8 / jeez
                                :mode expressive)))

# ::snt he should be following us already...
# ::tokens ["he", "should", "be", "following", "us", "already", "..."]
# ::lemmas ["he", "should", "be", "follow", "we", "already", "..."]
(c11-2 / likely-01
       :ARG1 (c11-3 / follow-02
                    :ARG0 (c11-0 / he)
                    :ARG1 (c11-1 / we)
                    :time (c11-4 / already)))

# ::snt omgg Brooke what the hell
# ::tokens ["omgg", "Brooke", "what", "the", "hell"]
# ::lemmas ["omgg", "Brooke", "what", "the", "hell"]
(c12-4 / say-01
       :ARG1 (c12-5 / amr-unknown
                    :mod (c12-0 / hell
                                :mode expressive))
       :ARG2 (c12-3 / person
                    :name (c12-2 / name
                                 :op1 "Brooke")
                    :mod (c12-1 / old)))

# ::snt why have you not followed me yet friend
# ::tokens ["why", "have", "you", "not", "followed", "me", "yet", "friend"]
# ::lemmas ["why", "have", "you", "not", "follow", "i", "yet", "friend"]
(c13-7 / say-01
       :ARG0 (c13-3 / i)
       :ARG1 (c13-2 / follow-02
                    :ARG0 (c13-5 / person
                                 :ARG0-of (c13-0 / have-rel-role-91
                                                 :ARG2 (c13-4 / friend)))
                    :ARG1 c13-3
                    :time (c13-1 / yet)
                    :ARG1-of (c13-6 / cause-01
                                    :ARG0 (c13-8 / amr-unknown))
                    :polarity -)
       :ARG2 c13-5)

# ::snt I know thoughts are with them
# ::tokens ["I", "know", "thoughts", "are", "with", "them"]
# ::lemmas ["i", "know", "thought", "be", "with", "they"]
(c14-1 / know-01
       :ARG0 (c14-0 / i)
       :ARG1 (c14-4 / thing
                    :ARG1-of (c14-3 / think-01
                                    :ARG2 (c14-2 / they))))

# ::snt ayyeee troye hello
# ::tokens ["ayyeee", "troye", "hello"]
# ::lemmas ["ayyeee", "troye", "hello"]
(c15-4 / say-01
       :ARG0 (c15-1 / i)
       :ARG1 (c15-0 / hello)
       :ARG2 (c15-3 / person
                    :name (c15-2 / name
                                 :op1 "ayyeee"
                                 :op2 "troye")))

# ::snt same
# ::tokens ["same"]
# ::lemmas ["same"]
(c16-0 / same-01)

# ::snt what is going to happen to the people in the cafe omg ?!?
# ::tokens ["what", "is", "going", "to", "happen", "to", "the", "people", "in", "the", "cafe", "omg", "?", "!", "?"]
# ::lemmas ["what", "be", "go", "to", "happen", "to", "the", "people", "in", "the", "cafe", "omg", "?", "!", "?"]
(c17-1 / event
       :mod (c17-4 / amr-unknown)
       :beneficiary (c17-2 / person
                           :location (c17-3 / cafe))
       :mod (c17-0 / oh-my-god
                   :mode expressive))

# ::snt its so scary
# ::tokens ["its", "so", "scary"]
# ::lemmas ["its", "so", "scary"]
(c18-0 / scary-03
       :ARG0 (c18-2 / it)
       :degree (c18-1 / so))

# ::snt the police have been raiding houses suspected of being terrorist
# ::tokens ["the", "police", "have", "been", "raiding", "houses", "suspected", "of", "being", "terrorist"]
# ::lemmas ["the", "police", "have", "be", "raid", "house", "suspect", "of", "be", "terrorist"]
(c19-2 / raid-01
       :ARG0 (c19-1 / police)
       :ARG1 (c19-0 / house
                    :ARG2-of (c19-3 / suspect-01
                                    :ARG1 (c19-4 / terrorist))))

# ::snt ahhh I know!! this is just so gaidjsjak!!
# ::tokens ["ahhh", "I", "know", "!", "!", "this", "is", "just", "so", "gaidjsjak", "!", "!"]
# ::lemmas ["ahhh", "i", "know", "!", "!", "this", "be", "just", "so", "gaidjsjak", "!", "!"]
(c20-1 / multi-sentence
       :snt1 (c20-5 / know-01
                    :ARG0 (c20-2 / i)
                    :mod (c20-7 / ah
                                :mode expressive))
       :snt2 (c20-3 / gaid-jak
                    :domain (c20-4 / this)
                    :mod (c20-0 / just)
                    :degree (c20-6 / so)
                    :mode expressive))

# ::snt stay safe love &lt;3
# ::tokens ["stay", "safe", "love", "&", "lt;3"]
# ::lemmas ["stay", "safe", "love", "&", "lt;3"]
(c21-4 / and
       :op1 (c21-3 / stay-01
                   :ARG1 (c21-0 / you)
                   :ARG3 (c21-2 / safe-01
                                :ARG1 c21-0)
                   :mode imperative)
       :op2 (c21-1 / string-entity
                   :value "&lt;3"))

# ::snt this is terrifying
# ::tokens ["this", "is", "terrifying"]
# ::lemmas ["this", "be", "terrify"]
(c22-0 / terrify-01
       :ARG0 (c22-1 / this))

# ::snt like in david jones
# ::tokens ["like", "in", "david", "jones"]
# ::lemmas ["like", "in", "david", "jones"]
(c23-2 / resemble-01
       :ARG2 (c23-1 / person
                    :name (c23-0 / name
                                 :op1 "David"
                                 :op2 "Jones")))

# ::snt like an attack! People aren't allowed on trains, planes aren't allowed to fly!!
# ::tokens ["like", "an", "attack", "!", "People", "are", "n't", "allowed", "on", "trains", ",", "planes", "are", "n't", "allowed", "to", "fly", "!", "!"]
# ::lemmas ["like", "an", "attack", "!", "people", "be", "not", "allow", "on", "train", ",", "plane", "be", "not", "allow", "to", "fly", "!", "!"]
(c24-1 / multi-sentence
       :snt1 (c24-5 / resemble-01
                    :ARG2 (c24-8 / attack-01))
       :snt2 (c24-2 / and
                    :op1 (c24-3 / allow-01
                                :ARG1 (c24-7 / train)
                                :polarity -)
                    :op2 (c24-6 / allow-01
                                :ARG1 (c24-0 / fly-01
                                             :ARG1 (c24-4 / plane)))))

# ::snt no planes can leave and no trains boarded and no cars allowed to leave or come into the city
# ::tokens ["no", "planes", "can", "leave", "and", "no", "trains", "boarded", "and", "no", "cars", "allowed", "to", "leave", "or", "come", "into", "the", "city"]
# ::lemmas ["no", "plane", "can", "leave", "and", "no", "train", "board", "and", "no", "car", "allow", "to", "leave", "or", "come", "into", "the", "city"]
(c25-11 / and
        :op1 (c25-4 / possible-01
                    :ARG1 (c25-0 / leave-11
                                 :ARG0 (c25-10 / plane))
                    :polarity -)
        :op2 (c25-1 / board-01
                    :ARG1 (c25-9 / train)
                    :polarity -)
        :op3 (c25-3 / allow-01
                    :ARG1 (c25-2 / or
                                 :op1 (c25-7 / leave-11
                                             :ARG0 (c25-6 / car))
                                 :op2 (c25-5 / come-01
                                             :ARG1 c25-6
                                             :ARG4 (c25-8 / city)))
                    :polarity -))

# ::snt yeah
# ::tokens ["yeah"]
# ::lemmas ["yeah"]
(c26-0 / yeah)

# ::snt oh okay, stay safe Brooke x
# ::tokens ["oh", "okay", ",", "stay", "safe", "Brooke", "x"]
# ::lemmas ["oh", "okay", ",", "stay", "safe", "Brooke", "x"]
(c27-7 / say-01
       :ARG0 (c27-4 / i)
       :ARG1 (c27-8 / and
                    :op1 (c27-2 / okay-04)
                    :op2 (c27-3 / stay-01
                                :ARG1 (c27-6 / person
                                             :name (c27-5 / name
                                                          :op1 "Brooke"))
                                :ARG3 (c27-0 / safe-01
                                             :ARG1 c27-6))
                    :mod (c27-1 / oh
                                :mode expressive))
       :ARG2 c27-6)

# ::snt somebody has a gun to his head apparently oh gosh
# ::tokens ["somebody", "has", "a", "gun", "to", "his", "head", "apparently", "oh", "gosh"]
# ::lemmas ["somebody", "have", "a", "gun", "to", "his", "head", "apparently", "oh", "gosh"]
(c28-1 / multi-sentence
       :snt1 (c28-0 / have-03
                    :ARG0 (c28-4 / somebody
                                 :part (c28-6 / head))
                    :ARG1 (c28-3 / gun)
                    :location c28-6
                    :ARG1-of (c28-5 / appear-02))
       :snt2 (c28-2 / oh-gosh
                    :mode expressive))

# ::snt n sydney there are terriosts who have taken people and keepingg them as hostages
# ::tokens ["n", "sydney", "there", "are", "terriosts", "who", "have", "taken", "people", "and", "keepingg", "them", "as", "hostages"]
# ::lemmas ["n", "sydney", "there", "be", "terriost", "who", "have", "take", "people", "and", "keepingg", "they", "as", "hostage"]
(c29-7 / say-01
       :ARG0 (c29-1 / i)
       :ARG1 (c29-9 / and
                    :op1 (c29-8 / take-01
                                :ARG0 (c29-6 / government-organization
                                             :ARG0-of (c29-5 / govern-01))
                                :ARG1 (c29-4 / person))
                    :op2 (c29-2 / keep-01
                                :ARG0 c29-6
                                :ARG1 c29-4
                                :prep-as (c29-0 / hostage)))
       :ARG2 c29-4
       :name (c29-3 / name
                    :op1 "ney"))

# ::snt it's so scary
# ::tokens ["it", "'s", "so", "scary"]
# ::lemmas ["it", "be", "so", "scary"]
(c30-0 / scary-03
       :ARG0 (c30-2 / it)
       :degree (c30-1 / so))

# ::snt yes!
# ::tokens ["yes", "!"]
# ::lemmas ["yes", "!"]
(c31-0 / yes)

# ::snt no like suburbs.. Kembah I think they said
# ::tokens ["no", "like", "suburbs", "..", "Kembah", "I", "think", "they", "said"]
# ::lemmas ["no", "like", "suburb", "..", "Kembah", "i", "think", "they", "say"]
(c32-0 / multi-sentence
       :snt1 (c32-6 / suburb
                    :polarity -)
       :snt2 (c32-1 / say-01
                    :ARG0 (c32-7 / they)
                    :ARG1 (c32-4 / city
                                 :name (c32-3 / name
                                              :op1 "Kembah"))
                    :ARG1-of (c32-5 / think-01
                                    :ARG0 (c32-2 / i))))

# ::snt of the hostages died, wounded and the bad guy is now dead
# ::tokens ["of", "the", "hostages", "died", ",", "wounded", "and", "the", "bad", "guy", "is", "now", "dead"]
# ::lemmas ["of", "the", "hostage", "die", ",", "wound", "and", "the", "bad", "guy", "be", "now", "dead"]
(c33-8 / and
       :op1 (c33-6 / die-01
                   :ARG1 (c33-0 / hostage
                                :ARG1-of (c33-4 / include-91
                                                :ARG2 c33-0)))
       :op2 (c33-1 / wound-01
                   :ARG1 c33-0)
       :op3 (c33-2 / die-01
                   :ARG1 (c33-7 / guy
                                :ARG1-of (c33-3 / bad-07))
                   :time (c33-5 / now)))

# ::snt what happened?
# ::tokens ["what", "happened", "?"]
# ::lemmas ["what", "happen", "?"]
(c34-0 / event
       :polarity (c34-1 / amr-unknown))

# ::snt there is a siege and people are being held hostage in the city!! I'm freaking out!
# ::tokens ["there", "is", "a", "siege", "and", "people", "are", "being", "held", "hostage", "in", "the", "city", "!", "!", "I", "'m", "freaking", "out", "!"]
# ::lemmas ["there", "be", "a", "siege", "and", "people", "be", "be", "hold", "hostage", "in", "the", "city", "!", "!", "i", "be", "freak", "out", "!"]
(c35-2 / multi-sentence
       :snt1 (c35-7 / and
                    :op1 (c35-6 / siege-01)
                    :op2 (c35-0 / hold-01
                                :ARG1 (c35-8 / hostage)
                                :ARG2 (c35-4 / person)
                                :location (c35-5 / city)))
       :snt2 (c35-1 / freak-out-02
                    :ARG1 (c35-3 / i)))

# ::snt my thoughts are with them
# ::tokens ["my", "thoughts", "are", "with", "them"]
# ::lemmas ["my", "thought", "be", "with", "they"]
(c36-0 / think-01
       :ARG0 (c36-1 / i)
       :ARG2 (c36-2 / they))

# ::snt I think everything is going to be ok
# ::tokens ["I", "think", "everything", "is", "going", "to", "be", "ok"]
# ::lemmas ["i", "think", "everything", "be", "go", "to", "be", "ok"]
(c37-2 / think-01
       :ARG0 (c37-3 / i)
       :ARG1 (c37-0 / okay-04
                    :ARG1 (c37-1 / everything)))

# ::snt omg. I just got out of school... Just imagine what the families of the three dead are going through. crazy things happen
# ::tokens ["omg", ".", "I", "just", "got", "out", "of", "school", "...", "Just", "imagine", "what", "the", "families", "of", "the", "three", "dead", "are", "going", "through", ".", "crazy", "things", "happen"]
# ::lemmas ["omg", ".", "i", "just", "get", "out", "of", "school", "...", "just", "imagine", "what", "the", "family", "of", "the", "three", "dead", "be", "go", "through", ".", "crazy", "thing", "happen"]
(c38-3 / multi-sentence
       :snt1 (c38-6 / oh-my-god
                    :mode expressive)
       :snt2 (c38-12 / get-05
                     :ARG1 (c38-8 / i)
                     :ARG2 (c38-2 / out-06
                                  :ARG1 c38-8
                                  :ARG2 (c38-15 / school))
                     :mod (c38-0 / just))
       :snt3 (c38-13 / imagine-01
                     :ARG0 (c38-1 / you)
                     :ARG1 (c38-16 / thing
                                   :ARG1-of (c38-10 / go-through-20
                                                    :ARG0 (c38-4 / family
                                                                 :ARG1-of (c38-5 / include-91
                                                                                 :ARG2 (c38-9 / person
                                                                                              :ARG1-of (c38-11 / die-01)
                                                                                              :quant 3)))))
                     :mod (c38-17 / just)
                     :mode imperative)
       :snt4 (c38-7 / event
                    :ARG1-of (c38-14 / crazy-03)))

# ::snt i'm watching RN
# ::tokens ["i", "'m", "watching", "RN"]
# ::lemmas ["i", "be", "watch", "RN"]
(c39-1 / watch-01
       :ARG0 (c39-2 / i)
       :ARG1 (c39-3 / broadcast-program
                    :name (c39-0 / name
                                 :op1 "RN")))

# ::snt Tony's a butt. But he does ok
# ::tokens ["Tony", "'s", "a", "butt", ".", "But", "he", "does", "ok"]
# ::lemmas ["Tony", "'s", "a", "butt", ".", "but", "he", "do", "ok"]
(c40-1 / multi-sentence
       :snt1 (c40-2 / butt
                    :domain (c40-5 / person
                                   :name (c40-4 / name
                                                :op1 "Tony")))
       :snt2 (c40-6 / contrast-01
                    :ARG2 (c40-3 / okay-04
                                 :ARG1 (c40-0 / he))))

# ::snt they're not doing that, we don't know if they are Isis, and their not threatening that
# ::tokens ["they", "'re", "not", "doing", "that", ",", "we", "do", "n't", "know", "if", "they", "are", "Isis", ",", "and", "their", "not", "threatening", "that"]
# ::lemmas ["they", "be", "not", "do", "that", ",", "we", "do", "not", "know", "if", "they", "be", "Isis", ",", "and", "their", "not", "threaten", "that"]
(c41-9 / and
       :op1 (c41-5 / do-02
                   :ARG0 (c41-8 / they)
                   :ARG1 (c41-7 / that)
                   :polarity -)
       :op2 (c41-2 / know-01
                   :ARG0 (c41-0 / we)
                   :ARG1 (c41-4 / truth-value
                                :polarity-of (c41-6 / religious-group
                                                    :name (c41-3 / name
                                                                 :op1 "Isis")
                                                    :domain c41-8))
                   :polarity -)
       :op3 (c41-1 / threaten-01
                   :ARG0 c41-8
                   :ARG1 c41-7
                   :polarity -))

# ::snt what happened?
# ::tokens ["what", "happened", "?"]
# ::lemmas ["what", "happen", "?"]
(c42-0 / event
       :polarity (c42-1 / amr-unknown))

# ::snt well I hope you're okay, are your family worried?
# ::tokens ["well", "I", "hope", "you", "'re", "okay", ",", "are", "your", "family", "worried", "?"]
# ::lemmas ["well", "i", "hope", "you", "be", "okay", ",", "be", "your", "family", "worry", "?"]
(c43-4 / multi-sentence
       :snt1 (c43-0 / hope-01
                    :ARG0 (c43-7 / i)
                    :ARG1 (c43-6 / okay-04
                                 :ARG1 (c43-1 / you))
                    :mod (c43-2 / well))
       :snt2 (c43-8 / worry-02
                    :polarity (c43-11 / amr-unknown)
                    :ARG0 (c43-3 / family
                                 :ARG1-of (c43-5 / have-org-role-91
                                                 :ARG0 (c43-10 / you)
                                                 :ARG2 (c43-9 / member)))))

# ::snt follow me
# ::tokens ["follow", "me"]
# ::lemmas ["follow", "i"]
(c44-1 / follow-02
       :ARG0 (c44-0 / you)
       :ARG1 (c44-2 / i)
       :mode imperative)

# ::snt I'm scared
# ::tokens ["I", "'m", "scared"]
# ::lemmas ["i", "be", "scared"]
(c45-0 / scare-01
       :ARG1 (c45-1 / i))

# ::snt n sydney there are terriosts who have taken people and keepingg them as hostages
# ::tokens ["n", "sydney", "there", "are", "terriosts", "who", "have", "taken", "people", "and", "keepingg", "them", "as", "hostages"]
# ::lemmas ["n", "sydney", "there", "be", "terriost", "who", "have", "take", "people", "and", "keepingg", "they", "as", "hostage"]
(c46-7 / say-01
       :ARG0 (c46-1 / i)
       :ARG1 (c46-9 / and
                    :op1 (c46-8 / take-01
                                :ARG0 (c46-6 / government-organization
                                             :ARG0-of (c46-5 / govern-01))
                                :ARG1 (c46-4 / person))
                    :op2 (c46-2 / keep-01
                                :ARG0 c46-6
                                :ARG1 c46-4
                                :prep-as (c46-0 / hostage)))
       :ARG2 c46-4
       :name (c46-3 / name
                    :op1 "ney"))

# ::snt what happened??
# ::tokens ["what", "happened", "?", "?"]
# ::lemmas ["what", "happen", "?", "?"]
(c47-0 / amr-unknown)

# ::snt it is..I'm watching it on the news right now
# ::tokens ["it", "is", "..", "I'm", "watching", "it", "on", "the", "news", "right", "now"]
# ::lemmas ["it", "be", "..", "i'm", "watch", "it", "on", "the", "news", "right", "now"]
(c48-1 / multi-sentence
       :snt1 (c48-2 / it)
       :snt2 (c48-0 / watch-01
                    :ARG0 (c48-6 / i)
                    :ARG1 c48-2
                    :medium (c48-3 / news)
                    :time (c48-4 / now
                                 :mod (c48-5 / right))))

# ::snt i feel sorry for them &amp; all the other innocent people being held in hostage
# ::tokens ["i", "feel", "sorry", "for", "them", "&", "amp", ";", "all", "the", "other", "innocent", "people", "being", "held", "in", "hostage"]
# ::lemmas ["i", "feel", "sorry", "for", "they", "&", "amp", ";", "all", "the", "other", "innocent", "people", "be", "hold", "in", "hostage"]
(c49-1 / feel-01
       :ARG0 (c49-5 / i)
       :ARG1 (c49-9 / sorry-01
                    :ARG1 c49-5
                    :ARG2 (c49-12 / and
                                  :op1 (c49-10 / they)
                                  :op2 (c49-7 / person
                                              :name (c49-6 / name
                                                           :op1 "amp"))))
       :ARG2 (c49-11 / person
                     :ARG1-of (c49-8 / innocent-01)
                     :mod (c49-3 / other)
                     :mod (c49-4 / all)
                     :ARG1-of (c49-0 / hold-01
                                     :ARG2 (c49-2 / hostage))))

# ::snt ?
# ::tokens ["?"]
# ::lemmas ["?"]
(c50-0 / request-confirmation-91)
