# ::snt No idea how tickets would be handled: probably at the Hall or at the door? He does random stuff like this.
# ::tokens ["No", "idea", "how", "tickets", "would", "be", "handled", ":", "probably", "at", "the", "Hall", "or", "at", "the", "door", "?", "He", "does", "random", "stuff", "like", "this", "."]
# ::lemmas ["no", "idea", "how", "ticket", "would", "be", "handle", ":", "probably", "at", "the", "Hall", "or", "at", "the", "door", "?", "he", "do", "random", "stuff", "like", "this", "."]
(c1-2 / multi-sentence
      :snt1 (c1-4 / idea
                  :topic (c1-0 / handle-01
                               :ARG1 (c1-13 / ticket)
                               :ARG1-of (c1-7 / mean-01
                                              :ARG2 (c1-3 / or
                                                          :op1 (c1-14 / hall)
                                                          :op2 (c1-8 / door)
                                                          :mod (c1-9 / probable))))
                  :polarity -)
      :snt2 (c1-1 / do-02
                  :ARG0 (c1-6 / he)
                  :ARG1 (c1-12 / stuff
                               :mod (c1-10 / random)
                               :ARG1-of (c1-5 / resemble-01
                                              :ARG2 (c1-11 / this)))))

# ::snt Uh, what where how?
# ::tokens ["Uh", ",", "what", "where", "how", "?"]
# ::lemmas ["uh", ",", "what", "where", "how", "?"]
(c2-1 / amr-unknown
      :location c2-1
      :mod (c2-0 / uh
                 :mode expressive))

# ::snt WANT TO GOOOO ": Surprise Prince show hitting Toronto tonight? My brain just melted.
# ::tokens ["WANT", "TO", "GOOOO", "\"", ":", "Surprise", "Prince", "show", "hitting", "Toronto", "tonight", "?", "My", "brain", "just", "melted", "."]
# ::lemmas ["want", "to", "goooo", "\"", ":", "Surprise", "Prince", "show", "hit", "Toronto", "tonight", "?", "my", "brain", "just", "melt", "."]
(c3-3 / multi-sentence
      :snt1 (c3-1 / want-01
                  :ARG0 (c3-5 / i)
                  :ARG1 (c3-11 / gosh
                               :mode expressive))
      :snt2 (c3-0 / hit-02
                  :ARG1 (c3-10 / city
                               :name (c3-6 / name
                                           :op1 "Toronto"))
                  :ARG2 (c3-14 / show
                               :name (c3-7 / name
                                           :op1 "Surprise"
                                           :op2 "Prince"))
                  :time (c3-9 / date-entity
                              :dayperiod (c3-8 / night)
                              :mod (c3-15 / today)))
      :snt3 (c3-12 / melt-01
                   :ARG1 (c3-4 / brain
                               :part-of (c3-13 / i))
                   :mod (c3-2 / just)))

# ::snt he must be feeling restless, or smt.
# ::tokens ["he", "must", "be", "feeling", "restless", ",", "or", "smt", "."]
# ::lemmas ["he", "must", "be", "feel", "restless", ",", "or", "smt", "."]
(c4-3 / infer-01
      :ARG1 (c4-2 / or
                  :op1 (c4-1 / feel-01
                             :ARG0 (c4-0 / he)
                             :ARG1 (c4-4 / restless
                                         :domain c4-0))
                  :op2 (c4-6 / have-rel-role-91
                             :ARG0 c4-0
                             :ARG2 (c4-5 / sister))))

# ::snt Follow : signs are pointing to nights at Massey Hall tonight and tomorrow.
# ::tokens ["Follow", ":", "signs", "are", "pointing", "to", "nights", "at", "Massey", "Hall", "tonight", "and", "tomorrow", "."]
# ::lemmas ["follow", ":", "sign", "be", "point", "to", "night", "at", "Massey", "Hall", "tonight", "and", "tomorrow", "."]
(c5-14 / and
       :op1 (c5-2 / follow-02
                  :ARG0 (c5-0 / you)
                  :mode imperative)
       :op2 (c5-7 / point-01
                  :ARG1 (c5-12 / sign)
                  :ARG2 (c5-5 / night)
                  :location (c5-3 / building
                                  :name (c5-6 / name
                                              :op1 "Massey"
                                              :op2 "Hall"))
                  :time (c5-4 / and
                              :op1 (c5-8 / date-entity
                                         :dayperiod (c5-9 / night)
                                         :mod (c5-13 / today))
                              :op2 (c5-1 / date-entity
                                         :dayperiod (c5-10 / night)
                                         :mod (c5-11 / tomorrow)))))

# ::snt On it.
# ::tokens ["On", "it", "."]
# ::lemmas ["on", "it", "."]
(c6-0 / on-01
      :ARG1 (c6-1 / it))

# ::snt Follow : signs are pointing to nights at Massey Hall tonight and tomorrow.
# ::tokens ["Follow", ":", "signs", "are", "pointing", "to", "nights", "at", "Massey", "Hall", "tonight", "and", "tomorrow", "."]
# ::lemmas ["follow", ":", "sign", "be", "point", "to", "night", "at", "Massey", "Hall", "tonight", "and", "tomorrow", "."]
(c7-14 / and
       :op1 (c7-2 / follow-02
                  :ARG0 (c7-0 / you)
                  :mode imperative)
       :op2 (c7-7 / point-01
                  :ARG1 (c7-12 / sign)
                  :ARG2 (c7-5 / night)
                  :location (c7-3 / building
                                  :name (c7-6 / name
                                              :op1 "Massey"
                                              :op2 "Hall"))
                  :time (c7-4 / and
                              :op1 (c7-8 / date-entity
                                         :dayperiod (c7-9 / night)
                                         :mod (c7-13 / today))
                              :op2 (c7-1 / date-entity
                                         :dayperiod (c7-10 / night)
                                         :mod (c7-11 / tomorrow)))))
