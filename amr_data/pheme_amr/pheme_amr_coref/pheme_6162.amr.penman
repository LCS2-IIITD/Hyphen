# ::snt /2 wasn't that thanks to Prince Charles, &amp; what an islamophyte is he! He shd never be king
# ::tokens ["/2", "was", "n't", "that", "thanks", "to", "Prince", "Charles", ",", "&", "amp", ";", "what", "an", "islamophyte", "is", "he", "!", "He", "shd", "never", "be", "king"]
# ::lemmas ["/2", "be", "not", "that", "thank", "to", "Prince", "Charles", ",", "&", "amp", ";", "what", "an", "islamophyte", "be", "he", "!", "he", "shd", "never", "be", "king"]
(c2-2 / multi-sentence
      :snt1 (c2-14 / that
                   :ARG2-of (c2-12 / thank-01
                                   :ARG1 (c2-16 / and
                                                :op1 (c2-8 / person
                                                           :name (c2-6 / name
                                                                       :op1 "Charles")
                                                           :ARG0-of (c2-0 / have-rel-role-91
                                                                          :ARG2 (c2-15 / prince)))
                                                :op2 (c2-3 / person
                                                           :name (c2-7 / name
                                                                       :op1 "&amp"))
                                                :snt2-of c2-2))
                   :polarity -)
      :op1 (c2-9 / religious-group
                 :name (c2-10 / name
                              :op1 "Islam")
                 :domain (c2-1 / he)
                 :degree (c2-13 / so))
      :op2 (c2-11 / have-rel-role-91
                  :ARG0 c2-1
                  :ARG2 (c2-5 / king)
                  :time (c2-4 / ever)
                  :polarity -))

# ::snt SO SENSELESS !! ThIs is how they treat a HOST country !!!!!! Wake up Canadians
# ::tokens ["SO", "SENSELESS", "!", "!", "ThIs", "is", "how", "they", "treat", "a", "HOST", "country", "!", "!", "!", "!", "!", "!", "Wake", "up", "Canadians"]
# ::lemmas ["so", "SENSELESS", "!", "!", "this", "be", "how", "they", "treat", "a", "HOST", "country", "!", "!", "!", "!", "!", "!", "wake", "up", "Canadians"]
(c3-2 / multi-sentence
      :snt1 (c3-10 / senseless
                   :mode expressive)
      :snt2 (c3-11 / treat-01
                   :ARG0 (c3-9 / they)
                   :ARG1 (c3-7 / country
                               :mod (c3-5 / most))
                   :ARG2 (c3-4 / this))
      :snt3 (c3-0 / wake-up-02
                  :ARG0 (c3-1 / you)
                  :ARG1 (c3-6 / person
                              :mod (c3-8 / country
                                         :name (c3-3 / name
                                                     :op1 "Canada")))
                  :mode imperative))

# ::snt RIP
# ::tokens ["RIP"]
# ::lemmas ["RIP"]
(c4-2 / rest-01
      :ARG1 (c4-0 / you)
      :manner (c4-1 / peace))

# ::snt Sorry that was Britains real monarch. Oops my mistake. Try Youtube for 'Common Purpose'.
# ::tokens ["Sorry", "that", "was", "Britains", "real", "monarch", ".", "Oops", "my", "mistake", ".", "Try", "Youtube", "for", "'", "Common", "Purpose", "'", "."]
# ::lemmas ["sorry", "that", "be", "Britains", "real", "monarch", ".", "oops", "my", "mistake", ".", "Try", "Youtube", "for", "'", "Common", "Purpose", "'", "."]
(c5-2 / multi-sentence
      :snt1 (c5-12 / sorry-01
                   :ARG1 (c5-3 / i)
                   :ARG2 (c5-6 / monarch
                               :domain (c5-15 / that)
                               :ARG1-of (c5-7 / real-04)
                               :poss (c5-8 / person
                                           :mod (c5-9 / country
                                                      :name (c5-4 / name
                                                                  :op1 "Britain"))))
                   :snt2-of c5-2)
      :ARG1 (c5-10 / i)
      :ARG2 (c5-1 / mistake-01
                  :ARG0 c5-10
                  :ARG1 c5-6)
      :snt3 (c5-11 / try-01
                   :ARG0 (c5-0 / you)
                   :ARG1 (c5-16 / publication
                                :name (c5-5 / name
                                            :op1 "YouTube"))
                   :ARG3 (c5-13 / thing
                                :name (c5-14 / name
                                             :op1 "Common"
                                             :op2 "Purpose"))
                   :mode imperative))

# ::snt &amp; UK, think the newsreader nearly choked trying to say it 'might' be a muslim attack
# ::tokens ["&", "amp", ";", "UK", ",", "think", "the", "newsreader", "nearly", "choked", "trying", "to", "say", "it", "'", "might", "'", "be", "a", "muslim", "attack"]
# ::lemmas ["&", "amp", ";", "UK", ",", "think", "the", "newsreader", "nearly", "choke", "try", "to", "say", "it", "'", "might", "'", "be", "a", "muslim", "attack"]
(c6-15 / and
       :op2 (c6-13 / think-01
                   :ARG0 (c6-7 / country
                               :name (c6-3 / name
                                           :op1 "UK"))
                   :ARG1 (c6-6 / choke-01
                               :ARG1 (c6-5 / person
                                           :ARG0-of (c6-8 / read-01
                                                          :ARG1 (c6-4 / news)))
                               :degree (c6-9 / near)
                               :manner (c6-10 / try-01
                                              :ARG0 c6-5
                                              :ARG1 (c6-11 / say-01
                                                           :ARG0 c6-5
                                                           :ARG1 (c6-14 / possible-01
                                                                        :ARG1 (c6-0 / attack-01
                                                                                    :ARG0 (c6-2 / religious-group
                                                                                                :name (c6-12 / name
                                                                                                             :op1 "Muslim"))
                                                                                    :ARG1 (c6-1 / it))))))))

# ::snt HERE THEY ARE ... See them ???
# ::tokens ["HERE", "THEY", "ARE", "...", "See", "them", "?", "?", "?"]
# ::lemmas ["here", "they", "be", "...", "see", "they", "?", "?", "?"]
(c7-2 / multi-sentence
      :snt1 (c7-5 / they
                  :location (c7-0 / here))
      :snt2 (c7-4 / see-01
                  :ARG0 (c7-1 / you)
                  :ARG1 (c7-3 / they)
                  :polarity (c7-6 / amr-unknown)
                  :mode imperative))

# ::snt On behalf of the Belgian twitter community, our sincere condoleances to Nathan Frank Cirillo's family and friends
# ::tokens ["On", "behalf", "of", "the", "Belgian", "twitter", "community", ",", "our", "sincere", "condoleances", "to", "Nathan", "Frank", "Cirillo", "'s", "family", "and", "friends"]
# ::lemmas ["on", "behalf", "of", "the", "Belgian", "twitter", "community", ",", "our", "sincere", "condoleance", "to", "Nathan", "Frank", "Cirillo", "'s", "family", "and", "friend"]
(c8-11 / condole-01
       :ARG0 (c8-1 / we)
       :ARG1 (c8-16 / and
                    :op1 (c8-2 / family
                               :ARG1-of (c8-0 / have-org-role-91
                                              :ARG0 (c8-9 / person
                                                          :name (c8-7 / name
                                                                      :op1 "Nathan"
                                                                      :op2 "Frank"
                                                                      :op3 "Cirillo"))
                                              :ARG2 (c8-3 / member)))
                    :op2 (c8-15 / person
                                :ARG0-of (c8-4 / have-rel-role-91
                                               :ARG1 c8-9
                                               :ARG2 (c8-6 / friend))))
       :manner (c8-14 / sincere)
       :beneficiary (c8-10 / community
                           :mod (c8-5 / publication
                                      :name (c8-8 / name
                                                  :op1 "Twitter"))
                           :mod (c8-13 / country
                                       :name (c8-12 / name
                                                    :op1 "Belgium"))))

# ::snt TY Tony!
# ::tokens ["TY", "Tony", "!"]
# ::lemmas ["TY", "Tony", "!"]
(c9-0 / say-01
      :ARG1 (c9-2 / TY)
      :ARG2 (c9-1 / person
                  :name (c9-3 / name
                              :op1 "Tony"))
      :mode expressive)

# ::snt Just after /11 they were collecting outside St Johns Wood, London mosque for the attackers.
# ::tokens ["Just", "after", "/11", "they", "were", "collecting", "outside", "St", "Johns", "Wood", ",", "London", "mosque", "for", "the", "attackers", "."]
# ::lemmas ["just", "after", "/11", "they", "be", "collect", "outside", "St", "Johns", "Wood", ",", "London", "mosque", "for", "the", "attacker", "."]
(c10-9 / collect-01
       :ARG0 (c10-11 / they)
       :ARG2 (c10-7 / person
                    :ARG0-of (c10-12 / attack-01))
       :time (c10-3 / after
                    :op1 (c10-4 / incident
                                :name (c10-5 / name
                                             :op1 "9/11"))
                    :mod (c10-0 / just))
       :location (c10-2 / outside
                        :op1 (c10-1 / mosque
                                    :name (c10-6 / name
                                                 :op1 "St"
                                                 :op2 "Johns"
                                                 :op3 "Wood")
                                    :location (c10-8 / city
                                                     :name (c10-10 / name
                                                                   :op1 "London")))))

# ::snt And Canadian gov calls a spade a spade -TERRORISM. Instead of the utter bollocks obama spews
# ::tokens ["And", "Canadian", "gov", "calls", "a", "spade", "a", "spade", "-TERRORISM", ".", "Instead", "of", "the", "utter", "bollocks", "obama", "spews"]
# ::lemmas ["and", "Canadian", "gov", "call", "a", "spade", "a", "spade", "-terrorism", ".", "instead", "of", "the", "utter", "bollock", "obama", "spews"]
(c11-1 / multi-sentence
       :snt1 (c11-16 / and
                     :op2 (c11-10 / call-01
                                  :ARG0 (c11-11 / government-organization
                                                :ARG0-of (c11-9 / govern-01
                                                                :ARG1 (c11-12 / country
                                                                              :name (c11-6 / name
                                                                                           :op1 "Canada"))))
                                  :ARG1 (c11-14 / spade)
                                  :ARG2 (c11-15 / terrorism)))
       :snt2 (c11-5 / instead-of-91
                    :ARG1 (c11-4 / spew-01
                                 :ARG0 (c11-8 / person
                                              :name (c11-7 / name
                                                           :op1 "Obama"))
                                 :ARG1 (c11-3 / bollock
                                              :mod (c11-2 / utter)))
                    :ARG2 (c11-0 / spew-01
                                 :ARG0 c11-8
                                 :name (c11-13 / name
                                               :op1 "Obama"))))

# ::snt With muslims in it.
# ::tokens ["With", "muslims", "in", "it", "."]
# ::lemmas ["with", "muslims", "in", "it", "."]
(c12-0 / be-located-at-91
       :ARG1 (c12-3 / person
                    :mod (c12-4 / religious-group
                                :name (c12-2 / name
                                             :op1 "Islam")))
       :ARG2 (c12-1 / it))

# ::snt oh yes, &amp; just wait a minute, I think I can hear them too
# ::tokens ["oh", "yes", ",", "&", "amp", ";", "just", "wait", "a", "minute", ",", "I", "think", "I", "can", "hear", "them", "too"]
# ::lemmas ["oh", "yes", ",", "&", "amp", ";", "just", "wait", "a", "minute", ",", "i", "think", "i", "can", "hear", "they", "too"]
(c13-14 / and
        :op1 (c13-2 / yes)
        :op2 (c13-6 / and
                    :op2 (c13-1 / wait-01
                                :ARG1 (c13-11 / you)
                                :duration (c13-13 / temporal-quantity
                                                  :unit (c13-4 / minute)
                                                  :quant 1)
                                :mod (c13-0 / just)
                                :ARG1-of (c13-10 / cause-01
                                                 :ARG0 (c13-12 / think-01
                                                               :ARG0 (c13-7 / i)
                                                               :ARG1 (c13-9 / possible-01
                                                                            :ARG1 (c13-3 / hear-01
                                                                                         :ARG0 c13-7
                                                                                         :ARG2 (c13-8 / they)
                                                                                         :mod (c13-5 / too)))))
                                :mode imperative)))

# ::snt Correct !! ASAP
# ::tokens ["Correct", "!", "!", "ASAP"]
# ::lemmas ["correct", "!", "!", "asap"]
(c14-0 / correct-02
       :time (c14-1 / immediate)
       :mode expressive)

# ::snt YVW have a look at others there from Brian Gerrish. Well worth it
# ::tokens ["YVW", "have", "a", "look", "at", "others", "there", "from", "Brian", "Gerrish", ".", "Well", "worth", "it"]
# ::lemmas ["yvw", "have", "a", "look", "at", "other", "there", "from", "Brian", "Gerrish", ".", "well", "worth", "it"]
(c15-2 / multi-sentence
       :snt1 (c15-1 / look-01
                    :ARG0 (c15-8 / person
                                 :name (c15-6 / name
                                              :op1 "YVW"))
                    :ARG1 (c15-3 / other
                                 :location (c15-9 / there))
                    :source (c15-10 / person
                                    :name (c15-7 / name
                                                 :op1 "Brian"
                                                 :op2 "Gerrish")))
       :snt2 (c15-0 / worth-02
                    :ARG2 (c15-4 / it)
                    :degree (c15-5 / well)))

# ::snt Bewildered pup will b mourning : Nathan Frank Cirillo soldier killed in Ottawa
# ::tokens ["Bewildered", "pup", "will", "b", "mourning", ":", "Nathan", "Frank", "Cirillo", "soldier", "killed", "in", "Ottawa"]
# ::lemmas ["Bewildered", "pup", "will", "b", "mourning", ":", "Nathan", "Frank", "Cirillo", "soldier", "kill", "in", "Ottawa"]
(c16-6 / cause-01
       :ARG0 (c16-8 / kill-01
                    :ARG1 (c16-7 / soldier
                                 :name (c16-2 / name
                                              :op1 "Nathan"
                                              :op2 "Frank"
                                              :op3 "Cirillo"))
                    :location (c16-5 / city
                                     :name (c16-3 / name
                                                  :op1 "Ottawa")))
       :ARG1 (c16-0 / mourn-01
                    :ARG0 (c16-4 / pup
                                 :ARG1-of (c16-1 / bewilder-01))))

# ::snt . Well there's one little guy who'll miss his daddy. Gosh what a bummer. How sad.
# ::tokens [".", "Well", "there", "'s", "one", "little", "guy", "who", "'ll", "miss", "his", "daddy", ".", "Gosh", "what", "a", "bummer", ".", "How", "sad", "."]
# ::lemmas [".", "well", "there", "be", "one", "little", "guy", "who", "'ll", "miss", "his", "daddy", ".", "gosh", "what", "a", "bummer", ".", "how", "sad", "."]
(c17-3 / multi-sentence
       :snt1 (c17-7 / miss-01
                    :ARG0 (c17-9 / guy
                                 :mod (c17-2 / little)
                                 :quant 1)
                    :ARG1 (c17-6 / person
                                 :ARG0-of (c17-0 / have-rel-role-91
                                                 :ARG1 c17-9
                                                 :ARG2 (c17-8 / daddy)))
                    :mod (c17-1 / well))
       :snt2 (c17-4 / bummer
                    :degree (c17-11 / so)
                    :mod (c17-10 / gosh
                                 :mode expressive))
       :snt3 (c17-5 / sad-02
                    :degree c17-11))

# ::snt Yes, very sad.
# ::tokens ["Yes", ",", "very", "sad", "."]
# ::lemmas ["yes", ",", "very", "sad", "."]
(c18-0 / sad-02
       :degree (c18-1 / very))

# ::snt CANADA dId ..Even Murderer was called an Islamic convert Moslem GOOD FOR CANADA TELLING TRUTH
# ::tokens ["CANADA", "dId", "..", "Even", "Murderer", "was", "called", "an", "Islamic", "convert", "Moslem", "GOOD", "FOR", "CANADA", "TELLING", "TRUTH"]
# ::lemmas ["CANADA", "dId", "..", "even", "Murderer", "be", "call", "an", "Islamic", "convert", "Moslem", "good", "for", "CANADA", "TELLING", "TRUTH"]
(c19-14 / and
        :op1 (c19-2 / question-03
                    :ARG0 (c19-7 / country
                                 :name (c19-3 / name
                                              :op1 "Canada"))
                    :ARG1 (c19-6 / call-01
                                 :ARG1 (c19-5 / person
                                              :ARG0-of (c19-0 / murder-01)
                                              :mod (c19-1 / even))
                                 :ARG2 (c19-13 / person
                                               :mod (c19-8 / religious-group
                                                           :name (c19-4 / name
                                                                        :op1 "Moslem"))
                                               :ARG1-of (c19-11 / convert-01))
                                 :ARG1-of (c19-9 / good-04
                                                 :ARG2 (c19-12 / tell-01
                                                               :ARG0 c19-7
                                                               :ARG1 (c19-10 / true-01
                                                                             :ARG1 c19-6)))))
        :op2 c19-6)

# ::snt Where's the clerics denouncing the attacks?! The . Moslems are the enemy
# ::tokens ["Where", "'s", "the", "clerics", "denouncing", "the", "attacks", "?", "!", "The", ".", "Moslems", "are", "the", "enemy"]
# ::lemmas ["where", "be", "the", "cleric", "denounce", "the", "attack", "?", "!", "the", ".", "Moslems", "be", "the", "enemy"]
(c20-0 / multi-sentence
       :snt1 (c20-1 / be-located-at-91
                    :ARG1 (c20-6 / cleric
                                 :ARG0-of (c20-5 / denounce-01
                                                 :ARG1 (c20-8 / attack-01)))
                    :ARG2 (c20-3 / amr-unknown))
       :snt2 (c20-2 / enemy
                    :domain (c20-7 / religious-group
                                   :name (c20-4 / name
                                                :op1 "Muslim"))))

# ::snt For every terror attack there has to be pay back. You attack us we burn down a mosque.
# ::tokens ["For", "every", "terror", "attack", "there", "has", "to", "be", "pay", "back", ".", "You", "attack", "us", "we", "burn", "down", "a", "mosque", "."]
# ::lemmas ["for", "every", "terror", "attack", "there", "have", "to", "be", "pay", "back", ".", "you", "attack", "we", "we", "burn", "down", "a", "mosque", "."]
(c21-2 / multi-sentence
       :snt1 (c21-4 / obligate-01
                    :ARG2 (c21-7 / pay-01
                                 :mod (c21-3 / back)
                                 :frequency (c21-8 / rate-entity-91
                                                   :ARG3 (c21-12 / attack-01
                                                                 :mod (c21-11 / terror)))))
       :snt2 (c21-5 / and
                    :op1 (c21-6 / attack-01
                                :ARG0 (c21-0 / you)
                                :ARG1 (c21-1 / we))
                    :op2 (c21-9 / burn-01
                                :ARG0 c21-1
                                :ARG1 (c21-10 / mosque))))

# ::snt If you get the chance, see Time Team's 'Britain's real Monarch', very revealing !!
# ::tokens ["If", "you", "get", "the", "chance", ",", "see", "Time", "Team", "'s", "'", "Britain", "'s", "real", "Monarch", "'", ",", "very", "revealing", "!", "!"]
# ::lemmas ["if", "you", "get", "the", "chance", ",", "see", "Time", "Team", "'s", "'", "Britain", "'s", "real", "Monarch", "'", ",", "very", "revealing", "!", "!"]
(c22-11 / see-01
        :ARG0 (c22-0 / you)
        :ARG1 (c22-2 / broadcast-program
                     :name (c22-4 / name
                                  :op1 "Time"
                                  :op2 "Team")
                     :topic (c22-1 / monarch
                                   :ARG1-of (c22-7 / real-04)
                                   :poss (c22-8 / country
                                                :name (c22-5 / name
                                                             :op1 "Britain")))
                     :ARG0-of (c22-3 / reveal-01
                                     :degree (c22-6 / very)))
        :condition (c22-9 / get-01
                          :ARG0 c22-0
                          :ARG1 (c22-10 / chance-02
                                        :ARG0 c22-0
                                        :ARG1 c22-11))
        :mode imperative)

# ::snt Despicable!!!RIP&gt;~&gt;
# ::tokens ["Despicable!!!RIP&gt;~&gt", ";"]
# ::lemmas ["Despicable!!!RIP&gt;~&gt", ";"]
(c23-0 / despicable
       :mode expressive)

# ::snt they probably have s leader who had a brain and a spine
# ::tokens ["they", "probably", "have", "s", "leader", "who", "had", "a", "brain", "and", "a", "spine"]
# ::lemmas ["they", "probably", "have", "s", "leader", "who", "have", "a", "brain", "and", "a", "spine"]
(c24-3 / probable
       :domain (c24-0 / have-03
                      :ARG0 (c24-6 / they)
                      :ARG1 (c24-7 / person
                                   :ARG0-of (c24-1 / lead-02)
                                   :ARG0-of (c24-8 / have-03
                                                   :ARG1 (c24-5 / and
                                                                :op1 (c24-2 / brain)
                                                                :op2 (c24-4 / spine))))))

# ::snt HARPER is a good leader
# ::tokens ["HARPER", "is", "a", "good", "leader"]
# ::lemmas ["harper", "be", "a", "good", "leader"]
(c25-2 / person
       :ARG0-of (c25-0 / lead-02)
       :ARG1-of (c25-3 / good-02)
       :domain (c25-4 / person
                      :name (c25-1 / name
                                   :op1 "HarPER")))

# ::snt Totally agree .. All need to protect themselves &amp; families against this evil in the world .. CANADA GRIEVES
# ::tokens ["Totally", "agree", "..", "All", "need", "to", "protect", "themselves", "&", "amp", ";", "families", "against", "this", "evil", "in", "the", "world", "..", "CANADA", "GRIEVES"]
# ::lemmas ["totally", "agree", "..", "all", "need", "to", "protect", "themselves", "&", "amp", ";", "family", "against", "this", "evil", "in", "the", "world", "..", "CANADA", "GRIEVES"]
(c26-2 / multi-sentence
       :snt1 (c26-16 / agree-01
                     :ARG0 (c26-6 / i)
                     :degree (c26-15 / total))
       :snt2 (c26-7 / need-01
                    :ARG0 (c26-5 / all)
                    :ARG1 (c26-9 / protect-01
                                 :ARG0 c26-5
                                 :ARG1 (c26-8 / and
                                              :op1 c26-5
                                              :op2 (c26-14 / amp)
                                              :op3 (c26-1 / family)
                                              :ARG0-of (c26-11 / counter-01
                                                               :ARG1 (c26-4 / evil
                                                                            :mod (c26-13 / this)
                                                                            :location (c26-0 / world))))))
       :snt3 (c26-3 / benefit-01
                    :ARG1 (c26-10 / country
                                  :name (c26-12 / name
                                                :op1 "Canada"))))

# ::snt there really aren't words - nowhere is safe &amp; the cancer continues to spread, wake up world!
# ::tokens ["there", "really", "are", "n't", "words", "-", "nowhere", "is", "safe", "&", "amp", ";", "the", "cancer", "continues", "to", "spread", ",", "wake", "up", "world", "!"]
# ::lemmas ["there", "really", "be", "not", "word", "-", "nowhere", "be", "safe", "&", "amp", ";", "the", "cancer", "continue", "to", "spread", ",", "wake", "up", "world", "!"]
(c27-0 / word-01
       :ARG1 (c27-13 / and
                     :op1 (c27-12 / safe-01
                                  :location (c27-5 / nowhere))
                     :op2 (c27-3 / amp))
       :ARG1-of (c27-8 / real-04)
       :ARG1-of (c27-9 / cause-01
                       :ARG0 (c27-6 / and
                                    :op1 (c27-10 / continue-01
                                                 :ARG1 (c27-2 / spread-02
                                                              :ARG1 (c27-11 / disease
                                                                            :name (c27-7 / name
                                                                                         :op1 "cancer"))))
                                    :op2 (c27-4 / wake-up-02
                                                :ARG0 (c27-1 / world
                                                             :ARG1-of c27-4)
                                                :mode imperative)))
       :polarity -)

# ::snt Terror attacks on NA soil and there's catch phrases fired instead of bullets. Storm the mosques!
# ::tokens ["Terror", "attacks", "on", "NA", "soil", "and", "there", "'s", "catch", "phrases", "fired", "instead", "of", "bullets", ".", "Storm", "the", "mosques", "!"]
# ::lemmas ["terror", "attack", "on", "NA", "soil", "and", "there", "be", "catch", "phrase", "fire", "instead", "of", "bullet", ".", "storm", "the", "mosque", "!"]
(c28-2 / multi-sentence
       :snt1 (c28-14 / and
                     :op1 (c28-5 / attack-01
                                 :ARG1 (c28-12 / soil
                                               :location (c28-10 / country
                                                                 :name (c28-7 / name
                                                                              :op1 "NA")))
                                 :mod (c28-13 / terrorism))
                     :op2 (c28-1 / fire-01
                                 :ARG1 (c28-8 / phrase
                                              :ARG2-of (c28-9 / catch-03))
                                 :ARG1-of (c28-6 / instead-of-91
                                                 :ARG2 (c28-3 / bullet))))
       :snt2 (c28-4 / storm-01
                    :ARG0 (c28-0 / you)
                    :ARG1 (c28-11 / mosque)
                    :mode imperative))

# ::snt Tragic &amp; heartbreaking to lose this young courageous soldier.
# ::tokens ["Tragic", "&", "amp", ";", "heartbreaking", "to", "lose", "this", "young", "courageous", "soldier", "."]
# ::lemmas ["Tragic", "&", "amp", ";", "heartbreake", "to", "lose", "this", "young", "courageous", "soldier", "."]
(c29-7 / and
       :op1 c29-7
       :op1 (c29-6 / tragic)
       :op2 (c29-2 / break-heart-31
                   :op2-of c29-7)
       :ARG0 (c29-1 / lose-02
                    :ARG1 (c29-5 / soldier
                                 :mod (c29-3 / courage)
                                 :mod (c29-0 / young)
                                 :mod (c29-4 / this))))

# ::snt Well CANADIANS have no problem MOSLEM TERRORIST MURDERED Canadian Solider in Cold Blood today
# ::tokens ["Well", "CANADIANS", "have", "no", "problem", "MOSLEM", "TERRORIST", "MURDERED", "Canadian", "Solider", "in", "Cold", "Blood", "today"]
# ::lemmas ["well", "canadian", "have", "no", "problem", "MOSLEM", "TERRORIST", "MURDERED", "Canadian", "Solider", "in", "Cold", "Blood", "today"]
(c30-1 / multi-sentence
       :snt1 (c30-0 / have-03
                    :ARG0 (c30-6 / person
                                 :mod (c30-8 / country
                                             :name (c30-4 / name
                                                          :op1 "Canada")))
                    :ARG1 (c30-14 / problem)
                    :polarity -)
       :snt2 (c30-7 / murder-01
                    :ARG0 (c30-13 / terrorist)
                    :ARG1 (c30-2 / person
                                 :ARG0-of (c30-15 / have-org-role-91
                                                  :ARG1 (c30-9 / country
                                                               :name (c30-5 / name
                                                                            :op1 "Canada"))
                                                  :ARG2 (c30-12 / soldier)))
                    :time (c30-11 / today)
                    :medium (c30-3 / broadcast-program
                                   :name (c30-10 / name
                                                 :op1 "Cold"
                                                 :op2 "Blood"))))

# ::snt ok just googled, I think I can get it on youtube - will check it out tomorrow ty for heads up
# ::tokens ["ok", "just", "googled", ",", "I", "think", "I", "can", "get", "it", "on", "youtube", "-", "will", "check", "it", "out", "tomorrow", "ty", "for", "heads", "up"]
# ::lemmas ["ok", "just", "google", ",", "i", "think", "i", "can", "get", "it", "on", "youtube", "-", "will", "check", "it", "out", "tomorrow", "ty", "for", "head", "up"]
(c31-3 / multi-sentence
       :snt1 (c31-11 / google-01
                     :ARG0 (c31-6 / i)
                     :ARG1 (c31-14 / think-01
                                   :ARG0 c31-6
                                   :ARG1 (c31-8 / possible-01
                                                :ARG1 (c31-9 / get-01
                                                             :ARG0 c31-6
                                                             :ARG1 (c31-12 / it)
                                                             :ARG2 (c31-15 / publication
                                                                           :name (c31-7 / name
                                                                                        :op1 "YouTube")))))
                     :mod (c31-0 / just)
                     :ARG1-of (c31-4 / okay-04))
       :snt2 (c31-10 / check-out-05
                     :ARG0 (c31-2 / i)
                     :ARG1 (c31-5 / it)
                     :time (c31-13 / tomorrow)
                     :purpose (c31-1 / heads-up)))

# ::snt SICK! I can't understand why we are taking this shit, its got to end! &amp; a mosque in SJW wtf .... /2
# ::tokens ["SICK", "!", "I", "ca", "n't", "understand", "why", "we", "are", "taking", "this", "shit", ",", "its", "got", "to", "end", "!", "&", "amp", ";", "a", "mosque", "in", "SJW", "wtf", "....", "/2"]
# ::lemmas ["SICK", "!", "i", "can", "not", "understand", "why", "we", "be", "take", "this", "shit", ",", "its", "get", "to", "end", "!", "&", "amp", ";", "a", "mosque", "in", "SJW", "wtf", "....", "/2"]
(c32-0 / multi-sentence
       :snt1 (c32-3 / sick-02
                    :mode expressive)
       :snt2 (c32-1 / possible-01
                    :ARG1 (c32-11 / understand-01
                                  :ARG0 (c32-13 / i)
                                  :ARG1 (c32-18 / thing
                                                :ARG0-of (c32-16 / cause-01
                                                                 :ARG1 (c32-17 / take-01
                                                                               :ARG0 (c32-10 / we)
                                                                               :ARG1 (c32-6 / shit
                                                                                            :mod (c32-14 / this)))
                                                                 :ARG1 c32-1)))
                    :ARG0 (c32-15 / obligate-01
                                  :ARG2 (c32-7 / end-01
                                               :ARG1 c32-6))
                    :polarity -)
       :snt3 (c32-4 / and
                    :op1 (c32-9 / mosque
                                :location (c32-2 / city
                                                 :name (c32-8 / name
                                                              :op1 "SJW")))
                    :op2 (c32-12 / amr-unknown
                                 :mod (c32-5 / fuck
                                             :mode expressive)))
       :snt4 2)
