# ::snt if out was him, and he was picked up. How much time would he have gotten? , first (cont)
# ::tokens ["if", "out", "was", "him", ",", "and", "he", "was", "picked", "up", ".", "How", "much", "time", "would", "he", "have", "gotten", "?", ",", "first", "(", "cont", ")"]
# ::lemmas ["if", "out", "be", "he", ",", "and", "he", "be", "pick", "up", ".", "how", "much", "time", "would", "he", "have", "get", "?", ",", "first", "(", "cont", ")"]
(c1-1 / multi-sentence
      :snt1 (c1-0 / have-condition-91
                  :ARG2 (c1-9 / and
                              :op1 (c1-5 / pick-up-06
                                         :ARG1 (c1-12 / he))
                              :op2 (c1-11 / pick-up-04
                                          :ARG1 c1-12)))
      :snt2 (c1-8 / get-01
                  :ARG0 (c1-4 / he)
                  :ARG1 (c1-10 / time
                               :quant (c1-3 / amr-unknown))
                  :ord (c1-2 / ordinal-entity
                             :value 1)
                  :ARG1-of (c1-6 / mean-01
                                 :ARG2 (c1-7 / continue-01))))

# ::snt one thing I disagree with that guy in that video about is Brown didnt look like he did nothing. Grabbed clerk...
# ::tokens ["one", "thing", "I", "disagree", "with", "that", "guy", "in", "that", "video", "about", "is", "Brown", "did", "nt", "look", "like", "he", "did", "nothing", ".", "Grabbed", "clerk", "..."]
# ::lemmas ["one", "thing", "i", "disagree", "with", "that", "guy", "in", "that", "video", "about", "be", "Brown", "do", "not", "look", "like", "he", "do", "nothing", ".", "Grabbed", "clerk", "..."]
(c2-2 / multi-sentence
      :snt1 (c2-7 / disagree-01
                  :ARG0 (c2-3 / i)
                  :ARG1 (c2-9 / guy
                              :mod (c2-13 / that)
                              :location (c2-5 / video
                                              :mod (c2-11 / that)))
                  :ARG2 (c2-1 / look-02
                              :ARG0 (c2-6 / person
                                          :name (c2-4 / name
                                                      :op1 "Brown"))
                              :ARG1 (c2-0 / do-02
                                          :ARG0 c2-6
                                          :ARG1 (c2-8 / nothing))
                              :polarity -))
      :snt2 (c2-10 / clerk
                   :ARG1-of (c2-12 / grab-01)))

# ::snt so I instead of chasing someone for a Jay walking citation (cont)
# ::tokens ["so", "I", "instead", "of", "chasing", "someone", "for", "a", "Jay", "walking", "citation", "(", "cont", ")"]
# ::lemmas ["so", "i", "instead", "of", "chase", "someone", "for", "a", "Jay", "walking", "citation", "(", "cont", ")"]
(c3-5 / cause-01
      :ARG1 (c3-4 / chase-01
                  :ARG0 (c3-1 / i)
                  :ARG1 (c3-7 / someone)
                  :purpose (c3-6 / cite-01
                                 :ARG1 (c3-0 / walk-01
                                             :ARG0 (c3-3 / person
                                                         :name (c3-2 / name
                                                                     :op1 "Jay")))
                                 :ARG2 c3-1
                                 :ARG1-of (c3-8 / continue-01))))

# ::snt yea Police chief admitted Wilson didnt know about the robbery.
# ::tokens ["yea", "Police", "chief", "admitted", "Wilson", "did", "nt", "know", "about", "the", "robbery", "."]
# ::lemmas ["yea", "Police", "chief", "admit", "Wilson", "do", "not", "know", "about", "the", "robbery", "."]
(c4-10 / admit-01
       :ARG0 (c4-4 / person
                   :ARG0-of (c4-0 / have-org-role-91
                                  :ARG1 (c4-9 / police
                                              :mod (c4-6 / county
                                                         :name (c4-2 / name
                                                                     :op1 "Texas")))
                                  :ARG2 (c4-5 / chief)))
       :ARG1 (c4-8 / know-01
                   :ARG0 (c4-1 / person
                               :name (c4-3 / name
                                           :op1 "Wilson"))
                   :ARG1 (c4-7 / rob-01)
                   :polarity -))

# ::snt wouldn't be so bad if they weren't already under federal interest cases
# ::tokens ["would", "n't", "be", "so", "bad", "if", "they", "were", "n't", "already", "under", "federal", "interest", "cases"]
# ::lemmas ["would", "not", "be", "so", "bad", "if", "they", "be", "not", "already", "under", "federal", "interest", "case"]
(c5-1 / bad-07
      :ARG1 (c5-3 / case-03
                  :ARG0 (c5-0 / federal)
                  :ARG1 (c5-5 / they)
                  :mod (c5-2 / interest)
                  :time (c5-6 / already)
                  :polarity -)
      :degree (c5-4 / so)
      :polarity -)

# ::snt no. The witness said he was at the corner store, not at the QT. Watch again...
# ::tokens ["no", ".", "The", "witness", "said", "he", "was", "at", "the", "corner", "store", ",", "not", "at", "the", "QT", ".", "Watch", "again", "..."]
# ::lemmas ["no", ".", "the", "witness", "say", "he", "be", "at", "the", "corner", "store", ",", "not", "at", "the", "QT", ".", "watch", "again", "..."]
(c6-2 / multi-sentence
      :snt1 (c6-6 / no)
      :snt2 (c6-12 / say-01
                   :ARG0 (c6-8 / person
                               :ARG0-of (c6-0 / witness-01))
                   :ARG1 (c6-10 / contrast-01
                                :ARG1 (c6-3 / be-located-at-91
                                            :ARG1 c6-8
                                            :ARG2 (c6-4 / store
                                                        :mod (c6-9 / corner)))
                                :ARG2 (c6-11 / be-located-at-91
                                             :ARG1 c6-8
                                             :ARG2 (c6-1 / facility
                                                         :name (c6-7 / name
                                                                     :op1 "QT"))
                                             :polarity -)))
      :snt3 (c6-5 / watch-01
                  :mod (c6-13 / again)))

# ::snt from what I understand the FBI has taken over
# ::tokens ["from", "what", "I", "understand", "the", "FBI", "has", "taken", "over"]
# ::lemmas ["from", "what", "i", "understand", "the", "FBI", "have", "take", "over"]
(c7-0 / understand-01
      :ARG0 (c7-1 / i)
      :ARG1 (c7-4 / take-over-12
                  :ARG0 (c7-3 / government-organization
                              :name (c7-2 / name
                                          :op1 "FBI"))))

# ::snt Then why did that officer have contact
# ::tokens ["Then", "why", "did", "that", "officer", "have", "contact"]
# ::lemmas ["then", "why", "do", "that", "officer", "have", "contact"]
(c8-2 / contact-01
      :ARG0 (c8-0 / officer
                  :mod (c8-3 / that))
      :ARG1-of (c8-1 / cause-01
                     :ARG0 (c8-4 / amr-unknown)))

# ::snt he said at first he shot into the car, Brown got out and knelt, then cop shot him times.
# ::tokens ["he", "said", "at", "first", "he", "shot", "into", "the", "car", ",", "Brown", "got", "out", "and", "knelt", ",", "then", "cop", "shot", "him", "times", "."]
# ::lemmas ["he", "say", "at", "first", "he", "shoot", "into", "the", "car", ",", "Brown", "get", "out", "and", "knelt", ",", "then", "cop", "shoot", "he", "time", "."]
(c9-12 / say-01
       :ARG0 (c9-0 / he)
       :ARG1 (c9-15 / and
                    :op1 (c9-3 / shoot-02
                               :ARG0 c9-0
                               :ARG2 (c9-9 / car)
                               :time (c9-4 / at-first))
                    :op2 (c9-6 / and
                               :op1 (c9-10 / get-05
                                           :ARG1 (c9-7 / person
                                                       :name (c9-5 / name
                                                                   :op1 "Brown"))
                                           :ARG2 (c9-2 / out))
                               :op2 (c9-14 / knelt-01
                                           :ARG0 c9-7))
                    :op3 (c9-1 / shoot-02
                               :ARG0 (c9-8 / cop)
                               :ARG1 c9-7
                               :frequency (c9-13 / time)
                               :time (c9-11 / then))))

# ::snt that's BS too imo
# ::tokens ["that", "'s", "BS", "too", "imo"]
# ::lemmas ["that", "be", "BS", "too", "imo"]
(c10-1 / opine-01
       :ARG0 (c10-2 / i)
       :ARG1 (c10-0 / bullshit-01
                    :ARG1 (c10-4 / that)
                    :mod (c10-3 / too)))

# ::snt especially if he did nothing wrong... Why wouldn't he write it and give his story while fresh
# ::tokens ["especially", "if", "he", "did", "nothing", "wrong", "...", "Why", "would", "n't", "he", "write", "it", "and", "give", "his", "story", "while", "fresh"]
# ::lemmas ["especially", "if", "he", "do", "nothing", "wrong", "...", "why", "would", "not", "he", "write", "it", "and", "give", "his", "story", "while", "fresh"]
(c11-12 / and
        :op1 (c11-1 / write-01
                    :ARG0 (c11-0 / he)
                    :ARG1 (c11-5 / it)
                    :polarity -)
        :op2 (c11-10 / give-01
                     :ARG0 c11-0
                     :ARG1 (c11-11 / story
                                   :poss c11-0)
                     :time (c11-2 / fresh-04
                                  :ARG1 c11-0)
                     :polarity -)
        :ARG1-of (c11-9 / cause-01
                        :ARG0 (c11-4 / amr-unknown))
        :condition (c11-8 / do-02
                          :ARG0 c11-0
                          :ARG1 (c11-7 / anything
                                       :ARG1-of (c11-6 / wrong-02)))
        :mod (c11-3 / especially))

# ::snt I mean witnesses. Did anyone hear Wilson say anything?
# ::tokens ["I", "mean", "witnesses", ".", "Did", "anyone", "hear", "Wilson", "say", "anything", "?"]
# ::lemmas ["i", "mean", "witness", ".", "do", "anyone", "hear", "Wilson", "say", "anything", "?"]
(c12-2 / multi-sentence
       :snt1 (c12-7 / mean-01
                    :ARG0 (c12-4 / i)
                    :ARG2 (c12-8 / person
                                 :ARG0-of (c12-1 / witness-01)))
       :snt2 (c12-0 / hear-01
                    :ARG0 (c12-11 / anyone)
                    :ARG1 (c12-9 / say-01
                                 :ARG0 (c12-10 / person
                                               :name (c12-5 / name
                                                            :op1 "Wilson"))
                                 :ARG1 (c12-3 / anything))
                    :polarity (c12-6 / amr-unknown)))

# ::snt just have a judge Dred society?
# ::tokens ["just", "have", "a", "judge", "Dred", "society", "?"]
# ::lemmas ["just", "have", "a", "judge", "Dred", "society", "?"]
(c13-0 / have-03
       :polarity (c13-6 / amr-unknown)
       :ARG0 (c13-4 / society
                    :ARG1-of (c13-3 / red-02))
       :ARG1 (c13-2 / person
                    :ARG0-of (c13-1 / judge-01))
       :mod (c13-5 / just))

# ::snt police report has zip code of robbery as . Only quik trips in the area are
# ::tokens ["police", "report", "has", "zip", "code", "of", "robbery", "as", ".", "Only", "quik", "trips", "in", "the", "area", "are"]
# ::lemmas ["police", "report", "have", "zip", "code", "of", "robbery", "as", ".", "only", "quik", "trip", "in", "the", "area", "be"]
(c14-1 / multi-sentence
       :snt1 (c14-0 / have-03
                    :ARG0 (c14-7 / report-01
                                 :ARG0 (c14-6 / police))
                    :ARG1 (c14-8 / code
                                 :mod (c14-2 / zip)
                                 :topic (c14-5 / rob-01)))
       :snt2 (c14-9 / trip-03
                    :mod (c14-3 / only)
                    :location (c14-10 / area)
                    :mod (c14-4 / quik)))

# ::snt clearly says he was at Ferguson Market...
# ::tokens ["clearly", "says", "he", "was", "at", "Ferguson", "Market", "..."]
# ::lemmas ["clearly", "say", "he", "be", "at", "Ferguson", "Market", "..."]
(c15-4 / say-01
       :ARG1 (c15-0 / he
                    :location (c15-1 / market
                                     :name (c15-2 / name
                                                  :op1 "Ferguson"
                                                  :op2 "Market")))
       :ARG1-of (c15-3 / clear-06))

# ::snt was there also, seen in video, identified as Dorian Johnson.
# ::tokens ["was", "there", "also", ",", "seen", "in", "video", ",", "identified", "as", "Dorian", "Johnson", "."]
# ::lemmas ["be", "there", "also", ",", "see", "in", "video", ",", "identify", "as", "Dorian", "Johnson", "."]
(c16-0 / be-located-at-91
       :ARG1 (c16-4 / person
                    :ARG1-of (c16-1 / identify-01
                                    :ARG2 (c16-2 / name
                                                 :op1 "Dorian"
                                                 :op2 "Johnson"))
                    :ARG1-of (c16-5 / see-01
                                    :ARG0 (c16-3 / video)))
       :ARG2 (c16-6 / there)
       :mod (c16-7 / also))

# ::snt if the feds could surveil the entire US and world, there would never be any fugitives.
# ::tokens ["if", "the", "feds", "could", "surveil", "the", "entire", "US", "and", "world", ",", "there", "would", "never", "be", "any", "fugitives", "."]
# ::lemmas ["if", "the", "fed", "could", "surveil", "the", "entire", "US", "and", "world", ",", "there", "would", "never", "be", "any", "fugitive", "."]
(c17-7 / person
       :ARG1-of (c17-2 / fugitive-03)
       :time (c17-4 / ever)
       :condition (c17-11 / possible-01
                          :ARG1 (c17-10 / surveil-01
                                        :ARG0 (c17-9 / government-organization
                                                     :name (c17-5 / name
                                                                  :op1 "Federal"
                                                                  :op2 "Government"))
                                        :ARG1 (c17-12 / and
                                                      :op1 (c17-8 / country
                                                                  :name (c17-6 / name
                                                                               :op1 "US")
                                                                  :mod (c17-3 / entire))
                                                      :op2 (c17-0 / world
                                                                  :mod (c17-1 / entire)))))
       :polarity -)

# ::snt I'm wondering if that maybe contributed to the struggle starting? Of course we'll never know the answer for sure.
# ::tokens ["I", "'m", "wondering", "if", "that", "maybe", "contributed", "to", "the", "struggle", "starting", "?", "Of", "course", "we", "'ll", "never", "know", "the", "answer", "for", "sure", "."]
# ::lemmas ["i", "be", "wonder", "if", "that", "maybe", "contribute", "to", "the", "struggle", "start", "?", "of", "course", "we", "'ll", "never", "know", "the", "answer", "for", "sure", "."]
(c18-2 / multi-sentence
       :snt1 (c18-0 / wonder-01
                    :ARG0 (c18-6 / i)
                    :ARG1 (c18-13 / truth-value
                                  :polarity-of (c18-9 / possible-01
                                                      :ARG1 (c18-10 / contribute-01
                                                                    :ARG0 (c18-11 / that)
                                                                    :ARG2 (c18-12 / start-01
                                                                                  :ARG1 (c18-4 / struggle-02))))))
       :snt2 (c18-7 / know-01
                    :ARG0 (c18-8 / we)
                    :ARG1 (c18-14 / answer-01)
                    :mod (c18-3 / of-course)
                    :time (c18-5 / ever)
                    :ARG1-of (c18-1 / sure-02
                                    :ARG0 c18-8)
                    :polarity -))

# ::snt by the shirt and shoved him, clerk was trying to stop him. But that doesnt justify death by any means.
# ::tokens ["by", "the", "shirt", "and", "shoved", "him", ",", "clerk", "was", "trying", "to", "stop", "him", ".", "But", "that", "does", "nt", "justify", "death", "by", "any", "means", "."]
# ::lemmas ["by", "the", "shirt", "and", "shove", "he", ",", "clerk", "be", "try", "to", "stop", "he", ".", "but", "that", "do", "not", "justify", "death", "by", "any", "mean", "."]
(c19-3 / multi-sentence
       :snt1 (c19-13 / and
                     :op1 (c19-11 / shove-01
                                  :ARG0 (c19-8 / clerk)
                                  :ARG1 (c19-0 / he)
                                  :ARG2 (c19-6 / shirt))
                     :op2 (c19-12 / try-01
                                  :ARG0 c19-8
                                  :ARG1 (c19-2 / stop-01
                                               :ARG0 c19-8
                                               :ARG1 (c19-4 / he))))
       :snt2 (c19-7 / contrast-01
                    :ARG2 (c19-1 / justify-01
                                 :ARG0 (c19-10 / that)
                                 :ARG1 (c19-9 / die-01)
                                 :manner (c19-5 / by-no-means)
                                 :polarity -)))

# ::snt th amendment, but right, that's why there's NO legal statement / account about anything...
# ::tokens ["th", "amendment", ",", "but", "right", ",", "that", "'s", "why", "there", "'s", "NO", "legal", "statement", "/", "account", "about", "anything", "..."]
# ::lemmas ["th", "amendment", ",", "but", "right", ",", "that", "be", "why", "there", "be", "no", "legal", "statement", "/", "account", "about", "anything", "..."]
(c20-5 / contrast-01
       :ARG2 (c20-4 / right-06
                    :ARG2 (c20-3 / cause-01
                                 :ARG0 (c20-7 / that)
                                 :ARG1 (c20-1 / or
                                              :op1 (c20-6 / state-01
                                                          :ARG1 (c20-8 / anything)
                                                          :ARG1-of (c20-0 / legal-02))
                                              :op2 (c20-2 / account-01
                                                          :ARG1 c20-8)
                                              :polarity -))))

# ::snt witness from the video admitted Brown was there. That much I didnt misunderstand lol
# ::tokens ["witness", "from", "the", "video", "admitted", "Brown", "was", "there", ".", "That", "much", "I", "did", "nt", "misunderstand", "lol"]
# ::lemmas ["witness", "from", "the", "video", "admit", "Brown", "be", "there", ".", "that", "much", "i", "do", "not", "misunderstand", "lol"]
(c21-2 / multi-sentence
       :snt1 (c21-13 / admit-01
                     :ARG0 (c21-0 / witness-01
                                  :source (c21-7 / video))
                     :ARG1 (c21-4 / be-located-at-91
                                  :ARG1 (c21-8 / person
                                               :name (c21-6 / name
                                                            :op1 "Brown"))
                                  :ARG2 (c21-12 / there)))
       :snt2 (c21-9 / misunderstand-01
                    :ARG0 (c21-5 / i)
                    :ARG1 (c21-1 / much
                                 :mod (c21-11 / that))
                    :ARG2-of (c21-3 / laugh-01
                                    :ARG0 c21-5
                                    :manner (c21-10 / loud)
                                    :mode expressive)
                    :polarity -))

# ::snt wouldn't open. But I saw witnesses that said different
# ::tokens ["would", "n't", "open", ".", "But", "I", "saw", "witnesses", "that", "said", "different"]
# ::lemmas ["would", "not", "open", ".", "but", "i", "see", "witness", "that", "say", "different"]
(c22-1 / multi-sentence
       :snt1 (c22-2 / open-01
                    :polarity -)
       :snt2 (c22-7 / contrast-01
                    :ARG2 (c22-8 / see-01
                                 :ARG0 (c22-4 / i)
                                 :ARG1 (c22-5 / person
                                              :ARG0-of (c22-0 / witness-01)
                                              :ARG0-of (c22-3 / say-01
                                                              :ARG1 (c22-9 / thing
                                                                           :ARG1-of (c22-6 / differ-02)))))))

# ::snt ok yea but I see how I misunderstood
# ::tokens ["ok", "yea", "but", "I", "see", "how", "I", "misunderstood"]
# ::lemmas ["ok", "yea", "but", "i", "see", "how", "i", "misunderstood"]
(c23-3 / contrast-01
       :ARG1 (c23-1 / okay-04)
       :ARG2 (c23-4 / see-01
                    :ARG0 (c23-2 / i)
                    :ARG1 (c23-5 / thing
                                 :manner-of (c23-0 / misunderstand-01
                                                   :ARG0 c23-2))))

# ::snt the witness accounts I've read all say the same thing. Only different one is the cops
# ::tokens ["the", "witness", "accounts", "I", "'ve", "read", "all", "say", "the", "same", "thing", ".", "Only", "different", "one", "is", "the", "cops"]
# ::lemmas ["the", "witness", "account", "i", "'ve", "read", "all", "say", "the", "same", "thing", ".", "only", "different", "one", "be", "the", "cop"]
(c24-2 / multi-sentence
       :snt1 (c24-11 / say-01
                     :ARG0 (c24-13 / account
                                   :mod (c24-7 / person
                                               :ARG0-of (c24-0 / witness-01))
                                   :ARG1-of (c24-8 / read-01
                                                   :ARG0 (c24-6 / i)
                                                   :mod (c24-5 / all)))
                     :ARG1 (c24-12 / thing
                                   :ARG1-of (c24-4 / same-01)))
       :snt2 (c24-9 / differ-02
                    :ARG1 (c24-10 / cop
                                  :domain (c24-3 / one
                                                 :mod (c24-1 / only)))))

# ::snt goes back to stealing cigars shouldn't equal being shot dead, especially since officer had no idea about that...
# ::tokens ["goes", "back", "to", "stealing", "cigars", "should", "n't", "equal", "being", "shot", "dead", ",", "especially", "since", "officer", "had", "no", "idea", "about", "that", "..."]
# ::lemmas ["go", "back", "to", "steal", "cigar", "should", "not", "equal", "be", "shoot", "dead", ",", "especially", "since", "officer", "have", "no", "idea", "about", "that", "..."]
(c25-9 / go-back-19
       :ARG2 (c25-10 / steal-01
                     :ARG1 (c25-8 / cigar)
                     :ARG1-of (c25-4 / equal-01
                                     :ARG2 (c25-3 / shoot-02
                                                  :ARG1 (c25-6 / person
                                                               :ARG0-of (c25-0 / have-org-role-91
                                                                               :ARG2 (c25-2 / officer)))
                                                  :ARG0-of (c25-7 / cause-01
                                                                  :ARG1 (c25-11 / have-03
                                                                                :ARG0 c25-6
                                                                                :ARG1 (c25-5 / idea
                                                                                             :topic c25-3)
                                                                                :mod (c25-1 / especially)
                                                                                :polarity -)))
                                     :polarity -)))

# ::snt so wouldn't the police car be close to the body in the pics? Or he move the car?
# ::tokens ["so", "would", "n't", "the", "police", "car", "be", "close", "to", "the", "body", "in", "the", "pics", "?", "Or", "he", "move", "the", "car", "?"]
# ::lemmas ["so", "would", "not", "the", "police", "car", "be", "close", "to", "the", "body", "in", "the", "pic", "?", "or", "he", "move", "the", "car", "?"]
(c26-1 / multi-sentence
       :snt1 (c26-7 / close-10
                    :ARG1 (c26-6 / car
                                 :mod (c26-5 / police))
                    :ARG2 (c26-2 / body
                                 :location (c26-10 / picture))
                    :polarity (c26-11 / amr-unknown)
                    :ARG1-of (c26-9 / cause-01)
                    :polarity -)
       :snt2 (c26-3 / or
                    :op2 (c26-8 / move-01
                                :ARG0 (c26-0 / he)
                                :ARG1 (c26-12 / car)
                                :polarity (c26-4 / amr-unknown))))

# ::snt that's what I wonder, but this guy says Brown was in the car
# ::tokens ["that", "'s", "what", "I", "wonder", ",", "but", "this", "guy", "says", "Brown", "was", "in", "the", "car"]
# ::lemmas ["that", "be", "what", "i", "wonder", ",", "but", "this", "guy", "say", "Brown", "be", "in", "the", "car"]
(c27-6 / contrast-01
       :ARG1 (c27-0 / wonder-01
                    :ARG0 (c27-2 / i)
                    :ARG1 (c27-10 / that))
       :ARG2 (c27-9 / say-01
                    :ARG0 (c27-7 / guy
                                 :mod (c27-8 / this))
                    :ARG1 (c27-1 / be-located-at-91
                                 :ARG1 (c27-4 / person
                                              :name (c27-3 / name
                                                           :op1 "Brown"))
                                 :ARG2 (c27-5 / car))))

# ::snt this is the witness that said that
# ::tokens ["this", "is", "the", "witness", "that", "said", "that"]
# ::lemmas ["this", "be", "the", "witness", "that", "say", "that"]
(c28-2 / person
       :ARG0-of (c28-1 / witness-01)
       :domain (c28-3 / this)
       :ARG0-of (c28-0 / say-01))

# ::snt I will never put any physical property over human loss. Even a car wreck, I say, well at least you're alive.
# ::tokens ["I", "will", "never", "put", "any", "physical", "property", "over", "human", "loss", ".", "Even", "a", "car", "wreck", ",", "I", "say", ",", "well", "at", "least", "you", "'re", "alive", "."]
# ::lemmas ["i", "will", "never", "put", "any", "physical", "property", "over", "human", "loss", ".", "even", "a", "car", "wreck", ",", "i", "say", ",", "well", "at", "least", "you", "be", "alive", "."]
(c29-4 / multi-sentence
       :snt1 (c29-11 / put-01
                     :ARG0 (c29-9 / i)
                     :ARG1 (c29-15 / property
                                   :mod (c29-5 / physical)
                                   :mod (c29-16 / any))
                     :ARG2 (c29-3 / lose-02
                                  :ARG0 (c29-0 / human))
                     :time (c29-7 / ever)
                     :polarity -)
       :snt2 (c29-14 / say-01
                     :ARG0 c29-9
                     :ARG1 (c29-13 / live-01
                                   :ARG0 (c29-1 / you)
                                   :mod (c29-8 / at-least)
                                   :mod (c29-2 / well)
                                   :mod (c29-6 / even)
                                   :condition (c29-10 / wreck-01
                                                      :ARG1 (c29-12 / car)))))

# ::snt no I get that
# ::tokens ["no", "I", "get", "that"]
# ::lemmas ["no", "i", "get", "that"]
(c30-1 / get-01
       :ARG0 (c30-2 / i)
       :ARG1 (c30-0 / that)
       :polarity -)

# ::snt insurance covers a building and the goods inside.
# ::tokens ["insurance", "covers", "a", "building", "and", "the", "goods", "inside", "."]
# ::lemmas ["insurance", "cover", "a", "building", "and", "the", "good", "inside", "."]
(c31-2 / cover-01
       :ARG0 (c31-1 / insure-02)
       :ARG1 (c31-5 / and
                    :op1 (c31-0 / building)
                    :op2 (c31-3 / good
                                :location (c31-4 / inside
                                                 :op1 c31-0))))

# ::snt wait for lawyers to help write verbiage ... but that's just what I recall, could be wrong
# ::tokens ["wait", "for", "lawyers", "to", "help", "write", "verbiage", "...", "but", "that", "'s", "just", "what", "I", "recall", ",", "could", "be", "wrong"]
# ::lemmas ["wait", "for", "lawyer", "to", "help", "write", "verbiage", "...", "but", "that", "be", "just", "what", "i", "recall", ",", "could", "be", "wrong"]
(c32-10 / contrast-01
        :ARG1 (c32-1 / wait-01
                     :ARG1 (c32-3 / lawyer)
                     :ARG2 (c32-0 / help-01
                                  :ARG0 c32-3
                                  :ARG1 (c32-6 / write-01
                                               :ARG0 c32-3
                                               :ARG1 (c32-7 / verbiage))))
        :ARG2 (c32-9 / recall-02
                     :ARG0 (c32-5 / i)
                     :ARG1 (c32-11 / and
                                   :op1 c32-1
                                   :op2 (c32-8 / possible-01
                                               :ARG1 (c32-4 / wrong-04
                                                            :ARG1 c32-1)))
                     :mod (c32-2 / just)))

# ::snt I walk in flip flops everyday, that looks like about - blocks or more, no way that's done in minutes walking.
# ::tokens ["I", "walk", "in", "flip", "flops", "everyday", ",", "that", "looks", "like", "about", "-", "blocks", "or", "more", ",", "no", "way", "that", "'s", "done", "in", "minutes", "walking", "."]
# ::lemmas ["i", "walk", "in", "flip", "flop", "everyday", ",", "that", "look", "like", "about", "-", "block", "or", "more", ",", "no", "way", "that", "be", "do", "in", "minutes", "walk", "."]
(c33-0 / walk-01
       :ARG0 (c33-8 / i)
       :manner (c33-2 / flipflop)
       :frequency (c33-12 / rate-entity-91
                          :ARG3 (c33-15 / temporal-quantity
                                        :unit (c33-13 / day)
                                        :quant 1))
       :ARG1-of (c33-9 / resemble-01
                       :ARG2 (c33-6 / or
                                    :op1 (c33-16 / about
                                                 :op1 (c33-5 / block))
                                    :op2 (c33-3 / more-than
                                                :op1 c33-5)))
       :ARG1-of (c33-1 / do-02
                       :time (c33-7 / after
                                    :op1 (c33-10 / walk-01
                                                 :ARG0 c33-8)
                                    :quant (c33-11 / multiple
                                                   :op1 (c33-14 / temporal-quantity
                                                                :unit (c33-4 / minute)
                                                                :quant 1)))
                       :polarity -))

# ::snt in the report at point it says a box, another point it says a few packs. (cont)
# ::tokens ["in", "the", "report", "at", "point", "it", "says", "a", "box", ",", "another", "point", "it", "says", "a", "few", "packs", ".", "(", "cont", ")"]
# ::lemmas ["in", "the", "report", "at", "point", "it", "say", "a", "box", ",", "another", "point", "it", "say", "a", "few", "pack", ".", "(", "cont", ")"]
(c34-7 / contrast-01
       :ARG1 (c34-9 / say-01
                    :ARG0 (c34-4 / it)
                    :ARG1 (c34-2 / box)
                    :location (c34-6 / report-01)
                    :time (c34-5 / point
                                 :mod (c34-11 / another)))
       :ARG2 (c34-3 / say-01
                    :ARG0 (c34-8 / it)
                    :ARG1 (c34-10 / pack
                                  :quant (c34-0 / few))
                    :location (c34-1 / point
                                     :mod c34-11)))

# ::snt every single witness account is exact same. Only different is the cop
# ::tokens ["every", "single", "witness", "account", "is", "exact", "same", ".", "Only", "different", "is", "the", "cop"]
# ::lemmas ["every", "single", "witness", "account", "be", "exact", "same", ".", "only", "different", "be", "the", "cop"]
(c35-1 / multi-sentence
       :snt1 (c35-9 / same-01
                    :ARG1 (c35-10 / account-01
                                  :ARG0 (c35-6 / person
                                               :ARG0-of (c35-0 / witness-01))
                                  :ARG1-of (c35-4 / single-02
                                                  :mod (c35-5 / every)))
                    :degree (c35-2 / exact))
       :snt2 (c35-7 / differ-02
                    :ARG1 (c35-8 / cop)
                    :mod (c35-3 / only)))

# ::snt police report says clerk indicated the suspect left and walked TOWARDS quick trip.
# ::tokens ["police", "report", "says", "clerk", "indicated", "the", "suspect", "left", "and", "walked", "TOWARDS", "quick", "trip", "."]
# ::lemmas ["police", "report", "say", "clerk", "indicate", "the", "suspect", "leave", "and", "walk", "towards", "quick", "trip", "."]
(c36-10 / say-01
        :ARG0 (c36-8 / report-01
                     :ARG0 (c36-7 / police))
        :ARG1 (c36-4 / indicate-01
                     :ARG0 (c36-9 / clerk)
                     :ARG1 (c36-12 / and
                                   :op1 (c36-1 / leave-11
                                               :ARG0 (c36-11 / person
                                                             :ARG2-of (c36-2 / suspect-01)))
                                   :op2 (c36-0 / walk-01
                                               :ARG0 c36-11
                                               :ARG2 (c36-5 / road
                                                            :name (c36-6 / name
                                                                         :op1 "TOWARDS"))
                                               :ARG1-of (c36-3 / quick-02)))))

# ::snt Yeah, he was saying it was a different store...
# ::tokens ["Yeah", ",", "he", "was", "saying", "it", "was", "a", "different", "store", "..."]
# ::lemmas ["yeah", ",", "he", "be", "say", "it", "be", "a", "different", "store", "..."]
(c37-0 / say-01
       :ARG0 (c37-1 / he)
       :ARG1 (c37-2 / differ-02
                    :ARG1 (c37-3 / store)))

# ::snt only thing I dispute is that the police were called, and were looking for him. But Wilson didnt know about that.
# ::tokens ["only", "thing", "I", "dispute", "is", "that", "the", "police", "were", "called", ",", "and", "were", "looking", "for", "him", ".", "But", "Wilson", "did", "nt", "know", "about", "that", "."]
# ::lemmas ["only", "thing", "i", "dispute", "be", "that", "the", "police", "be", "call", ",", "and", "be", "look", "for", "he", ".", "but", "Wilson", "do", "not", "know", "about", "that", "."]
(c38-2 / multi-sentence
       :snt1 (c38-7 / dispute-01
                    :ARG0 (c38-4 / i)
                    :ARG2 (c38-13 / and
                                  :op1 (c38-8 / call-02
                                              :ARG1 (c38-6 / police))
                                  :op2 (c38-1 / look-01
                                              :ARG0 c38-6
                                              :ARG1 (c38-0 / he)))
                    :mod (c38-3 / only))
       :snt2 (c38-9 / contrast-01
                    :ARG2 (c38-11 / know-01
                                  :ARG0 (c38-12 / person
                                                :name (c38-5 / name
                                                             :op1 "Wilson"))
                                  :ARG1 (c38-10 / that)
                                  :polarity -)))

# ::snt I'm not sure th applies to police reports. pretty sure they are required to write incident report
# ::tokens ["I", "'m", "not", "sure", "th", "applies", "to", "police", "reports", ".", "pretty", "sure", "they", "are", "required", "to", "write", "incident", "report"]
# ::lemmas ["i", "be", "not", "sure", "th", "apply", "to", "police", "report", ".", "pretty", "sure", "they", "be", "require", "to", "write", "incident", "report"]
(c39-1 / multi-sentence
       :snt1 (c39-10 / sure-02
                     :ARG0 (c39-4 / i)
                     :ARG1 (c39-13 / apply-02
                                   :ARG1 (c39-11 / this)
                                   :ARG2 (c39-7 / report-01
                                                :ARG0 (c39-6 / police)))
                     :polarity -)
       :snt2 (c39-2 / sure-02
                    :ARG0 c39-4)
       :ARG1 (c39-5 / require-01
                    :ARG1 (c39-0 / write-01
                                 :ARG0 (c39-9 / they)
                                 :ARG1 (c39-3 / report-01
                                              :ARG1 (c39-8 / incident)))
                    :ARG2 c39-9)
       :degree (c39-12 / pretty))

# ::snt if the guy got shot and fled, where did the dead body come from?
# ::tokens ["if", "the", "guy", "got", "shot", "and", "fled", ",", "where", "did", "the", "dead", "body", "come", "from", "?"]
# ::lemmas ["if", "the", "guy", "got", "shoot", "and", "flee", ",", "where", "do", "the", "dead", "body", "come", "from", "?"]
(c40-4 / come-01
       :ARG1 (c40-1 / body
                    :ARG1-of (c40-3 / die-01))
       :ARG3 (c40-7 / amr-unknown)
       :condition (c40-2 / and
                         :op1 (c40-6 / shoot-02
                                     :ARG1 (c40-5 / guy))
                         :op2 (c40-0 / flee-05
                                     :ARG0 c40-5)))

# ::snt it's a bad situation in many ways. Other innocents affected.
# ::tokens ["it", "'s", "a", "bad", "situation", "in", "many", "ways", ".", "Other", "innocents", "affected", "."]
# ::lemmas ["it", "be", "a", "bad", "situation", "in", "many", "way", ".", "other", "innocent", "affect", "."]
(c41-1 / multi-sentence
       :snt1 (c41-2 / bad-07
                    :ARG1 (c41-7 / situation)
                    :manner (c41-0 / way
                                   :quant (c41-5 / many)))
       :snt2 (c41-8 / affect-01
                    :ARG1 (c41-6 / person
                                 :ARG1-of (c41-4 / innocent-01)
                                 :mod (c41-3 / other))))

# ::snt they said today He didn't even write incident report. Which was weird in itself. Everyone should be fired
# ::tokens ["they", "said", "today", "He", "did", "n't", "even", "write", "incident", "report", ".", "Which", "was", "weird", "in", "itself", ".", "Everyone", "should", "be", "fired"]
# ::lemmas ["they", "say", "today", "he", "do", "not", "even", "write", "incident", "report", ".", "which", "be", "weird", "in", "itself", ".", "everyone", "should", "be", "fire"]
(c42-3 / multi-sentence
       :snt1 (c42-12 / say-01
                     :ARG0 (c42-13 / they)
                     :ARG1 (c42-1 / write-01
                                  :ARG0 (c42-0 / he)
                                  :ARG1 (c42-10 / report-01
                                                :ARG1 (c42-7 / incident))
                                  :mod (c42-6 / even)
                                  :polarity -)
                     :time (c42-11 / today))
       :snt2 (c42-8 / weird
                    :mod (c42-4 / by-oneself))
       :snt3 (c42-9 / recommend-01
                    :ARG1 (c42-2 / fire-02
                                 :ARG1 (c42-5 / everyone))))

# ::snt how many bullets did Mike Brown take - like or ? No pictures of an ambulance on the scene either
# ::tokens ["how", "many", "bullets", "did", "Mike", "Brown", "take", "-", "like", "or", "?", "No", "pictures", "of", "an", "ambulance", "on", "the", "scene", "either"]
# ::lemmas ["how", "many", "bullet", "do", "Mike", "Brown", "take", "-", "like", "or", "?", "no", "picture", "of", "an", "ambulance", "on", "the", "scene", "either"]
(c44-0 / multi-sentence
       :snt1 (c44-2 / or
                    :op1 (c44-9 / take-01
                                :ARG0 (c44-6 / person
                                             :name (c44-5 / name
                                                          :op1 "Mike"
                                                          :op2 "Brown"))
                                :ARG1 (c44-1 / bullet
                                             :quant (c44-11 / amr-unknown)))
                    :op2 (c44-7 / resemble-01
                                :ARG2 c44-1))
       :snt2 (c44-10 / picture-01
                     :ARG1 (c44-4 / ambulance
                                  :location (c44-8 / scene))
                     :mod (c44-3 / either)
                     :polarity -))

# ::snt IDK officers responding to the theft say they never found suspect until he was dead, identified him as Brown and his friend...
# ::tokens ["IDK", "officers", "responding", "to", "the", "theft", "say", "they", "never", "found", "suspect", "until", "he", "was", "dead", ",", "identified", "him", "as", "Brown", "and", "his", "friend", "..."]
# ::lemmas ["IDK", "officer", "respond", "to", "the", "theft", "say", "they", "never", "find", "suspect", "until", "he", "be", "dead", ",", "identify", "he", "as", "Brown", "and", "his", "friend", "..."]
(c45-5 / and
       :op1 (c45-3 / say-01
                   :ARG0 (c45-1 / person
                                :ARG0-of (c45-7 / have-org-role-91
                                                :ARG1 (c45-2 / department
                                                             :mod (c45-4 / police))
                                                :ARG2 (c45-20 / officer))
                                :ARG0-of (c45-14 / respond-01
                                                 :ARG1 (c45-11 / steal-01)))
                   :ARG1 (c45-8 / find-01
                                :ARG0 c45-1
                                :ARG1 (c45-9 / person
                                             :ARG2-of (c45-19 / suspect-01))
                                :time (c45-12 / ever)
                                :time (c45-16 / until
                                              :op1 (c45-0 / die-01
                                                          :ARG1 c45-9))
                                :polarity -))
       :op2 (c45-18 / identify-01
                    :ARG0 c45-1
                    :ARG1 c45-9
                    :ARG2 (c45-17 / and
                                  :op1 (c45-15 / person
                                               :name (c45-13 / name
                                                             :op1 "Brown"))
                                  :op2 (c45-10 / person
                                               :ARG0-of (c45-6 / have-rel-role-91
                                                               :ARG1 c45-9
                                                               :ARG2 (c45-21 / friend))))))

# ::snt It does happen ... happened here in HI years ago on street, cop just got off this week, nothing.
# ::tokens ["It", "does", "happen", "...", "happened", "here", "in", "HI", "years", "ago", "on", "street", ",", "cop", "just", "got", "off", "this", "week", ",", "nothing", "."]
# ::lemmas ["it", "do", "happen", "...", "happen", "here", "in", "HI", "years", "ago", "on", "street", ",", "cop", "just", "get", "off", "this", "week", ",", "nothing", "."]
(c46-17 / and
        :op1 (c46-6 / event
                    :mod (c46-8 / it)
                    :location (c46-0 / here
                                     :location (c46-15 / state
                                                       :name (c46-9 / name
                                                                    :op1 "Hawaii")))
                    :time (c46-5 / before
                                 :op1 (c46-10 / now)
                                 :quant (c46-4 / multiple
                                               :op1 (c46-16 / temporal-quantity
                                                            :unit (c46-1 / year)
                                                            :quant 1)))
                    :location (c46-7 / street))
        :op2 (c46-13 / get-off-23
                     :ARG1 (c46-12 / cop)
                     :time (c46-2 / week
                                  :mod (c46-14 / this))
                     :mod (c46-3 / just))
        :op3 (c46-11 / nothing))

# ::snt yes, that's what I understood
# ::tokens ["yes", ",", "that", "'s", "what", "I", "understood"]
# ::lemmas ["yes", ",", "that", "be", "what", "i", "understand"]
(c47-1 / understand-01
       :ARG0 (c47-2 / i)
       :ARG1 (c47-0 / that))

# ::snt but that's me. If I'm wrong then I can live with that.
# ::tokens ["but", "that", "'s", "me", ".", "If", "I", "'m", "wrong", "then", "I", "can", "live", "with", "that", "."]
# ::lemmas ["but", "that", "be", "i", ".", "if", "i", "be", "wrong", "then", "i", "can", "live", "with", "that", "."]
(c48-2 / multi-sentence
       :snt1 (c48-5 / contrast-01
                    :ARG2 (c48-3 / i))
       :snt2 (c48-4 / possible-01
                    :ARG1 (c48-1 / live-02
                                 :ARG0 (c48-6 / i)
                                 :ARG1 (c48-7 / that)
                                 :condition (c48-0 / wrong-04
                                                   :ARG1 c48-6))))

# ::snt Who shot into the car? I took it that the cop shot into his own car while trying to get out, causing Brown to kneel
# ::tokens ["Who", "shot", "into", "the", "car", "?", "I", "took", "it", "that", "the", "cop", "shot", "into", "his", "own", "car", "while", "trying", "to", "get", "out", ",", "causing", "Brown", "to", "kneel"]
# ::lemmas ["who", "shoot", "into", "the", "car", "?", "i", "take", "it", "that", "the", "cop", "shoot", "into", "his", "own", "car", "while", "try", "to", "get", "out", ",", "cause", "Brown", "to", "kneel"]
(c49-0 / multi-sentence
       :snt1 (c49-11 / shoot-02
                     :ARG0 (c49-14 / amr-unknown)
                     :destination (c49-8 / car))
       :snt2 (c49-13 / take-04
                     :ARG0 (c49-3 / i)
                     :ARG1 (c49-2 / shoot-02
                                  :ARG0 (c49-7 / cop)
                                  :destination (c49-10 / car
                                                       :poss c49-7)
                                  :time (c49-12 / try-01
                                                :ARG0 c49-7
                                                :ARG1 (c49-9 / get-05
                                                             :ARG1 c49-7
                                                             :ARG2 (c49-1 / out)))
                                  :ARG0-of (c49-15 / cause-01
                                                   :ARG1 (c49-4 / kneel-01
                                                                :ARG0 (c49-6 / person
                                                                             :name (c49-5 / name
                                                                                          :op1 "Brown")))))))

# ::snt Yup, I watched that ... absolutely crazy shit
# ::tokens ["Yup", ",", "I", "watched", "that", "...", "absolutely", "crazy", "shit"]
# ::lemmas ["yup", ",", "i", "watch", "that", "...", "absolutely", "crazy", "shit"]
(c50-1 / multi-sentence
       :snt1 (c50-0 / watch-01
                    :ARG0 (c50-2 / i)
                    :ARG1 (c50-5 / that))
       :snt2 (c50-4 / shit
                    :ARG1-of (c50-3 / crazy-03
                                    :degree (c50-6 / absolute))))
