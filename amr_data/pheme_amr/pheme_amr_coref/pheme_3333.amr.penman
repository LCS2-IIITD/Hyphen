# ::snt amem
# ::tokens ["amem"]
# ::lemmas ["amem"]
(c1-0 / amem)

# ::snt what city i like big cities
# ::tokens ["what", "city", "i", "like", "big", "cities"]
# ::lemmas ["what", "city", "i", "like", "big", "city"]
(c2-0 / like-01
      :ARG0 (c2-2 / i)
      :ARG1 (c2-1 / city
                  :mod (c2-3 / big)))

# ::snt saudades dessa tua cara
# ::tokens ["saudades", "dessa", "tua", "cara"]
# ::lemmas ["saudade", "dessa", "tua", "cara"]
(c3-1 / event
      :name (c3-0 / name
                  :op1 "saudades"
                  :op2 "dessa"
                  :op3 "ua"
                  :op4 "cara"))

# ::snt keep praying. Amen.
# ::tokens ["keep", "praying", ".", "Amen", "."]
# ::lemmas ["keep", "pray", ".", "amen", "."]
(c4-1 / multi-sentence
      :snt1 (c4-3 / keep-02
                  :ARG0 (c4-0 / you)
                  :ARG1 (c4-2 / pray-01
                              :ARG0 c4-0)
                  :mode imperative)
      :snt2 (c4-4 / Amen))

# ::snt yeah like buffalo new york or somethinf is TOO cold
# ::tokens ["yeah", "like", "buffalo", "new", "york", "or", "somethinf", "is", "TOO", "cold"]
# ::lemmas ["yeah", "like", "buffalo", "new", "york", "or", "somethinf", "be", "TOO", "cold"]
(c5-4 / cold-02
      :ARG1 (c5-1 / or
                  :op1 (c5-3 / person
                             :name (c5-2 / name
                                         :op1 "Buffalo"
                                         :op2 "New"
                                         :op3 "York"))
                  :op2 (c5-5 / something))
      :degree (c5-6 / too)
      :mod (c5-0 / yeah
                 :mode expressive))

# ::snt ur a power ranger
# ::tokens ["ur", "a", "power", "ranger"]
# ::lemmas ["ur", "a", "power", "ranger"]
(c6-1 / ranger
      :mod (c6-0 / power))

# ::snt i love you
# ::tokens ["i", "love", "you"]
# ::lemmas ["i", "love", "you"]
(c7-1 / love-01
      :ARG0 (c7-2 / i)
      :ARG1 (c7-0 / you))

# ::snt i call black
# ::tokens ["i", "call", "black"]
# ::lemmas ["i", "call", "black"]
(c8-2 / call-01
      :ARG0 (c8-3 / i)
      :ARG1 (c8-1 / person
                  :name (c8-0 / name
                              :op1 "Black")))

# ::snt you choose a city and ill choose one
# ::tokens ["you", "choose", "a", "city", "and", "ill", "choose", "one"]
# ::lemmas ["you", "choose", "a", "city", "and", "ill", "choose", "one"]
(c9-6 / and
      :op1 (c9-3 / choose-01
                 :ARG0 (c9-0 / you)
                 :ARG1 (c9-2 / city))
      :op2 (c9-5 / choose-01
                 :ARG0 (c9-1 / i)
                 :ARG1 (c9-7 / city)
                 :ARG1-of (c9-4 / ill-02)))

# ::snt where is Paul??
# ::tokens ["where", "is", "Paul", "?", "?"]
# ::lemmas ["where", "be", "Paul", "?", "?"]
(c10-1 / person
       :name (c10-0 / name
                    :op1 "Paul")
       :location (c10-2 / amr-unknown))

# ::snt c
# ::tokens ["c"]
# ::lemmas ["c"]
(c11-1 / person
       :name (c11-0 / name
                    :op1 "c"))

# ::snt m
# ::tokens ["m"]
# ::lemmas ["m"]
(c12-0 / amr-empty)

# ::snt yes idc where it can even be international if you want
# ::tokens ["yes", "idc", "where", "it", "can", "even", "be", "international", "if", "you", "want"]
# ::lemmas ["yes", "idc", "where", "it", "can", "even", "be", "international", "if", "you", "want"]
(c13-4 / possible-01
       :ARG1 (c13-3 / international
                    :domain (c13-5 / it)
                    :mod (c13-2 / even))
       :condition (c13-0 / want-01
                         :ARG0 (c13-1 / you)
                         :ARG1 c13-3)
       :mod (c13-6 / yes))

# ::snt thanks yoda
# ::tokens ["thanks", "yoda"]
# ::lemmas ["thank", "yoda"]
(c14-1 / thank-01
       :ARG0 (c14-2 / i)
       :ARG1 (c14-0 / you))

# ::snt please
# ::tokens ["please"]
# ::lemmas ["please"]
(c15-0 / please
       :polite +)

# ::snt love you
# ::tokens ["love", "you"]
# ::lemmas ["love", "you"]
(c17-1 / love-01
       :ARG0 (c17-2 / i)
       :ARG1 (c17-0 / you))

# ::snt ily
# ::tokens ["ily"]
# ::lemmas ["ily"]
(c19-1 / person
       :name (c19-0 / name
                    :op1 "ily"))

# ::snt out. And just heard, maybe another one. Xx
# ::tokens ["out", ".", "And", "just", "heard", ",", "maybe", "another", "one", ".", "Xx"]
# ::lemmas ["out", ".", "and", "just", "hear", ",", "maybe", "another", "one", ".", "Xx"]
(c20-2 / multi-sentence
       :snt1 (c20-3 / out-06)
       :snt2 (c20-9 / and
                    :op2 (c20-0 / hear-01
                                :ARG0 (c20-5 / i)
                                :mod (c20-1 / just)
                                :ARG1-of (c20-7 / possible-01
                                                :ARG2 (c20-4 / another))))
       :snt3 (c20-8 / person
                    :name (c20-6 / name
                                 :op1 "Xx")))

# ::snt YES ON THE COLD but not too cold that my nose falls off
# ::tokens ["YES", "ON", "THE", "COLD", "but", "not", "too", "cold", "that", "my", "nose", "falls", "off"]
# ::lemmas ["yes", "on", "the", "COLD", "but", "not", "too", "cold", "that", "my", "nose", "fall", "off"]
(c21-7 / contrast-01
       :ARG1 (c21-3 / on-the-cOLD)
       :ARG2 (c21-0 / have-degree-91
                    :ARG2 (c21-6 / cold-01)
                    :ARG3 (c21-8 / too)
                    :ARG6 (c21-1 / fall-01
                                 :ARG1 (c21-5 / nose
                                              :part-of (c21-4 / i))
                                 :ARG4 (c21-2 / off))
                    :polarity -))

# ::snt i hate money can i just walk to your house and hand make your christmas gifts
# ::tokens ["i", "hate", "money", "can", "i", "just", "walk", "to", "your", "house", "and", "hand", "make", "your", "christmas", "gifts"]
# ::lemmas ["i", "hate", "money", "can", "i", "just", "walk", "to", "your", "house", "and", "hand", "make", "your", "christmas", "gift"]
(c22-4 / multi-sentence
       :snt1 (c22-0 / hate-01
                    :ARG0 (c22-8 / i)
                    :ARG1 (c22-11 / money))
       :snt2 (c22-12 / possible-01
                     :ARG1 (c22-15 / and
                                   :op1 (c22-1 / walk-01
                                               :ARG0 (c22-13 / i)
                                               :ARG2 (c22-3 / house
                                                            :poss (c22-2 / you))
                                               :mod (c22-5 / just))
                                   :op2 (c22-6 / make-01
                                               :ARG0 c22-13
                                               :ARG1 (c22-14 / gift
                                                             :mod (c22-7 / festival
                                                                         :name (c22-9 / name
                                                                                      :op1 "Christmas"))
                                                             :poss c22-2)
                                               :manner (c22-10 / hand)))))

# ::snt i have to think thouvh
# ::tokens ["i", "have", "to", "think", "thouvh"]
# ::lemmas ["i", "have", "to", "think", "thouvh"]
(c23-0 / obligate-01
       :ARG1 (c23-2 / i)
       :ARG2 (c23-1 / think-01
                    :ARG0 c23-2))

# ::snt i love you
# ::tokens ["i", "love", "you"]
# ::lemmas ["i", "love", "you"]
(c24-1 / love-01
       :ARG0 (c24-2 / i)
       :ARG1 (c24-0 / you))

# ::snt still praying for everyone I hope they get out safely
# ::tokens ["still", "praying", "for", "everyone", "I", "hope", "they", "get", "out", "safely"]
# ::lemmas ["still", "pray", "for", "everyone", "i", "hope", "they", "get", "out", "safely"]
(c25-8 / and
       :op1 (c25-5 / pray-01
                   :ARG0 (c25-4 / i)
                   :ARG1 (c25-2 / everyone)
                   :mod (c25-7 / still))
       :op2 (c25-0 / hope-01
                   :ARG0 c25-4
                   :ARG1 (c25-6 / get-05
                                :ARG1 c25-2
                                :ARG2 (c25-1 / out)
                                :ARG1-of (c25-3 / safe-01))))

# ::snt yes really like REALLY REALLY REALLY LOVE YOU
# ::tokens ["yes", "really", "like", "REALLY", "REALLY", "REALLY", "LOVE", "YOU"]
# ::lemmas ["yes", "really", "like", "REALLY", "REALLY", "really", "love", "you"]
(c26-2 / like-01
       :ARG1 (c26-0 / you)
       :degree (c26-1 / really)
       :degree (c26-3 / really))

# ::snt really
# ::tokens ["really"]
# ::lemmas ["really"]
(c27-0 / real-04)

# ::snt so much i do
# ::tokens ["so", "much", "i", "do"]
# ::lemmas ["so", "much", "i", "do"]
(c28-0 / have-quant-91
       :ARG1 (c28-3 / do-02
                    :ARG0 (c28-2 / i))
       :ARG2 (c28-1 / much)
       :ARG3 (c28-4 / so))

# ::snt i hate insomnia
# ::tokens ["i", "hate", "insomnia"]
# ::lemmas ["i", "hate", "insomnia"]
(c29-0 / hate-01
       :ARG0 (c29-2 / i)
       :ARG1 (c29-1 / insomnia))

# ::snt lets go apartment hunting soon
# ::tokens ["lets", "go", "apartment", "hunting", "soon"]
# ::lemmas ["let", "go", "apartment", "hunt", "soon"]
(c30-2 / go-05
       :ARG0 (c30-1 / we)
       :ARG1 (c30-0 / hunt-01
                    :ARG0 c30-1
                    :ARG1 (c30-4 / apartment))
       :time (c30-3 / soon)
       :mode imperative)

# ::snt with lots of art and cold weather and nice coffee shops and loudness
# ::tokens ["with", "lots", "of", "art", "and", "cold", "weather", "and", "nice", "coffee", "shops", "and", "loudness"]
# ::lemmas ["with", "lot", "of", "art", "and", "cold", "weather", "and", "nice", "coffee", "shop", "and", "loudness"]
(c31-9 / accompany-01
       :ARG1 (c31-2 / and
                    :op1 (c31-4 / art
                                :quant (c31-1 / lot))
                    :op2 (c31-0 / weather
                                :ARG1-of (c31-6 / cold-01))
                    :op3 (c31-8 / shop
                                :mod (c31-5 / coffee)
                                :ARG1-of (c31-3 / nice-01))
                    :op4 (c31-7 / loudness)))

# ::snt so scary
# ::tokens ["so", "scary"]
# ::lemmas ["so", "scary"]
(c32-0 / scary-03
       :degree (c32-1 / so))

# ::snt hi Phoebe ur so awesome and a great actress i just wanted to know if u will ever come to Slovakia one day xoxo Krissi
# ::tokens ["hi", "Phoebe", "ur", "so", "awesome", "and", "a", "great", "actress", "i", "just", "wanted", "to", "know", "if", "u", "will", "ever", "come", "to", "Slovakia", "one", "day", "xoxo", "Krissi"]
# ::lemmas ["hi", "Phoebe", "ur", "so", "awesome", "and", "a", "great", "actress", "i", "just", "want", "to", "know", "if", "u", "will", "ever", "come", "to", "Slovakia", "one", "day", "xoxo", "Krissi"]
(c33-1 / multi-sentence
       :snt1 (c33-5 / say-01
                    :ARG0 (c33-16 / i)
                    :ARG1 (c33-8 / hi)
                    :ARG2 (c33-2 / person
                                 :name (c33-11 / name
                                               :op1 "Phoebe")))
       :snt2 (c33-7 / and
                    :op1 (c33-15 / awesome-03
                                 :ARG1 (c33-19 / you))
                    :op2 (c33-6 / person
                                :ARG0-of (c33-12 / act-01)
                                :mod (c33-13 / great))
                    :degree (c33-9 / so))
       :snt3 (c33-14 / want-01
                     :ARG0 (c33-17 / i)
                     :ARG1 (c33-18 / know-01
                                   :ARG0 c33-17
                                   :ARG1 (c33-24 / truth-value
                                                 :polarity-of (c33-22 / come-01
                                                                      :ARG1 (c33-23 / you)
                                                                      :ARG4 (c33-3 / country
                                                                                   :name (c33-21 / name
                                                                                                 :op1 "Slovakia"))
                                                                      :time (c33-10 / ever)
                                                                      :time (c33-4 / day
                                                                                   :mod (c33-20 / one)))))
                     :mod (c33-0 / just)))
