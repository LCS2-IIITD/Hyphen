# ::snt May God be with their loved ones in yet another tragic plane crash.
# ::tokens ["May", "God", "be", "with", "their", "loved", "ones", "in", "yet", "another", "tragic", "plane", "crash", "."]
# ::lemmas ["may", "God", "be", "with", "their", "love", "one", "in", "yet", "another", "tragic", "plane", "crash", "."]
(c1-0 / wish-01
      :ARG1 (c1-12 / accompany-01
                   :ARG0 (c1-6 / person
                               :name (c1-5 / name
                                           :op1 "God"))
                   :ARG1 (c1-11 / person
                                :ARG1-of (c1-2 / love-01
                                               :ARG0 (c1-10 / they)))
                   :ARG1-of (c1-8 / cause-01
                                  :ARG0 (c1-7 / crash-01
                                              :ARG1 (c1-3 / plane)
                                              :mod (c1-4 / another
                                                         :mod (c1-1 / yet))
                                              :mod (c1-9 / tragic)))))

# ::snt the sad thing is that some one will get the blame for this one just like the other one
# ::tokens ["the", "sad", "thing", "is", "that", "some", "one", "will", "get", "the", "blame", "for", "this", "one", "just", "like", "the", "other", "one"]
# ::lemmas ["the", "sad", "thing", "be", "that", "some", "one", "will", "get", "the", "blame", "for", "this", "one", "just", "like", "the", "other", "one"]
(c2-6 / sad-02
      :ARG1-of (c2-5 / resemble-01
                     :ARG2 (c2-3 / blame-01
                                 :ARG1 (c2-4 / one
                                             :mod (c2-1 / other))
                                 :ARG2 (c2-2 / one
                                             :mod (c2-7 / this)))
                     :mod (c2-0 / just)))

# ::snt That wud be Obvious!
# ::tokens ["That", "wud", "be", "Obvious", "!"]
# ::lemmas ["that", "wud", "be", "obvious", "!"]
(c4-0 / obvious
      :domain (c4-1 / wud
                    :mod (c4-2 / that)))

# ::snt .: All people on a plane which crashed in the Alps are thought to...
# ::tokens [".", ":", "All", "people", "on", "a", "plane", "which", "crashed", "in", "the", "Alps", "are", "thought", "to", "..."]
# ::lemmas [".", ":", "all", "people", "on", "a", "plane", "which", "crash", "in", "the", "Alps", "be", "think", "to", "..."]
(c5-5 / think-01
      :ARG1 (c5-1 / event
                  :mod (c5-3 / person
                             :mod (c5-7 / all)
                             :location (c5-6 / plane
                                             :ARG1-of (c5-4 / crash-01
                                                            :location (c5-0 / mountain
                                                                            :name (c5-2 / name
                                                                                        :op1 "Alps")))))))

# ::snt gosh that is so terrible!! may they rest in peace
# ::tokens ["gosh", "that", "is", "so", "terrible", "!", "!", "may", "they", "rest", "in", "peace"]
# ::lemmas ["gosh", "that", "be", "so", "terrible", "!", "!", "may", "they", "rest", "in", "peace"]
(c6-1 / multi-sentence
      :snt1 (c6-8 / terrible-01
                  :ARG1 (c6-6 / that)
                  :degree (c6-7 / so)
                  :mod (c6-5 / gosh
                             :mode expressive))
      :snt2 (c6-0 / wish-01
                  :ARG1 (c6-4 / rest-01
                              :ARG1 (c6-2 / they)
                              :manner (c6-3 / peace))))

# ::snt may they R I P
# ::tokens ["may", "they", "R", "I", "P"]
# ::lemmas ["may", "they", "r", "i", "p"]
(c7-0 / wish-01
      :ARG0 (c7-1 / i)
      :ARG1 (c7-4 / they)
      :ARG2 (c7-3 / person
                  :name (c7-2 / name
                              :op1 "RI"
                              :op2 "P")))

# ::snt why no flight number on screen
# ::tokens ["why", "no", "flight", "number", "on", "screen"]
# ::lemmas ["why", "no", "flight", "number", "on", "screen"]
(c8-2 / cause-01
      :ARG0 (c8-4 / amr-unknown)
      :ARG1 (c8-1 / number
                  :mod (c8-0 / fly-01)
                  :location (c8-3 / screen)
                  :polarity -))
