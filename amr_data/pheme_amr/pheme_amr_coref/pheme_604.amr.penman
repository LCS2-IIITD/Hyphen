# ::snt Ah Sorry, I thought you referring to needing them when UK 'fix' the vote?!
# ::tokens ["Ah", "Sorry", ",", "I", "thought", "you", "referring", "to", "needing", "them", "when", "UK", "'", "fix", "'", "the", "vote", "?", "!"]
# ::lemmas ["ah", "sorry", ",", "i", "think", "you", "refer", "to", "need", "they", "when", "UK", "'", "fix", "'", "the", "vote", "?", "!"]
(c1-10 / sorry-01
       :ARG1 (c1-3 / i)
       :ARG2 (c1-11 / think-01
                    :ARG0 c1-3
                    :ARG1 (c1-7 / refer-01
                                :ARG0 (c1-0 / you)
                                :ARG1 (c1-4 / need-01
                                            :ARG1 (c1-9 / they)
                                            :time (c1-1 / fix-02
                                                        :ARG0 (c1-8 / country
                                                                    :name (c1-5 / name
                                                                                :op1 "UK"))
                                                        :ARG1 (c1-6 / vote-01)))
                                :polarity (c1-12 / amr-unknown)))
       :mod (c1-2 / ah
                  :mode expressive))

# ::snt Q: How many registers does it take to carry the ?A: None! The ALU doesn't have direct access to data registers!
# ::tokens ["Q", ":", "How", "many", "registers", "does", "it", "take", "to", "carry", "the", "?", "A", ":", "None", "!", "The", "ALU", "does", "n't", "have", "direct", "access", "to", "data", "registers", "!"]
# ::lemmas ["q", ":", "how", "many", "register", "do", "it", "take", "to", "carry", "the", "?", "a", ":", "none", "!", "the", "ALU", "do", "not", "have", "direct", "access", "to", "data", "register", "!"]
(c2-1 / multi-sentence
      :snt1 (c2-2 / question-01
                  :ARG1 (c2-11 / take-10
                               :ARG0 (c2-9 / carry-01
                                           :ARG1 (c2-7 / product
                                                       :name (c2-5 / name
                                                                   :op1 "A")))
                               :ARG1 (c2-8 / register
                                           :quant (c2-13 / amr-unknown))))
      :snt2 (c2-3 / access-01
                  :ARG0 (c2-12 / product
                               :name (c2-6 / name
                                           :op1 "ALU"))
                  :ARG1 (c2-4 / register
                              :mod (c2-10 / data))
                  :ARG1-of (c2-0 / direct-02)
                  :polarity -))

# ::snt my glass is overflowing ma man. Americans have guns they should use them. What I said. We need protected from cops
# ::tokens ["my", "glass", "is", "overflowing", "ma", "man", ".", "Americans", "have", "guns", "they", "should", "use", "them", ".", "What", "I", "said", ".", "We", "need", "protected", "from", "cops"]
# ::lemmas ["my", "glass", "be", "overflow", "ma", "man", ".", "Americans", "have", "gun", "they", "should", "use", "they", ".", "what", "i", "say", ".", "we", "need", "protect", "from", "cop"]
(c4-1 / multi-sentence
      :snt1 (c4-6 / say-01
                  :ARG0 (c4-15 / i)
                  :ARG1 (c4-18 / overflow-01
                               :ARG1 (c4-12 / glass
                                            :poss c4-15)))
      :snt2 (c4-9 / say-01
                  :ARG0 (c4-16 / i)
                  :ARG1 (c4-10 / need-01
                               :ARG0 (c4-13 / we)
                               :ARG1 (c4-3 / protect-01
                                           :ARG1 c4-13
                                           :ARG2 (c4-20 / cop))))
      :snt3 (c4-8 / have-03
                  :ARG0 (c4-7 / person
                              :mod (c4-4 / country
                                         :name (c4-19 / name
                                                      :op1 "America")))
                  :ARG1 (c4-5 / gun
                              :ARG1-of (c4-14 / use-01
                                              :ARG0 c4-7
                                              :ARG1-of (c4-11 / recommend-01))))
      :snt4 (c4-17 / say-01
                   :ARG0 (c4-0 / i)
                   :ARG1 (c4-2 / need-01
                               :ARG0 c4-13
                               :ARG1 c4-3
                               :ARG1 c4-13
                               :ARG2 c4-20)))

# ::snt they failed to include anything about freedom to riot and loot
# ::tokens ["they", "failed", "to", "include", "anything", "about", "freedom", "to", "riot", "and", "loot"]
# ::lemmas ["they", "fail", "to", "include", "anything", "about", "freedom", "to", "riot", "and", "loot"]
(c5-0 / fail-01
      :ARG1 (c5-6 / they)
      :ARG2 (c5-3 / include-01
                  :ARG0 c5-6
                  :ARG1 (c5-7 / anything
                              :topic (c5-4 / free-04
                                           :ARG3 (c5-2 / and
                                                       :op1 (c5-5 / riot-01)
                                                       :op2 (c5-1 / loot-01))))))

# ::snt ALU or ACLU
# ::tokens ["ALU", "or", "ACLU"]
# ::lemmas ["alu", "or", "ACLU"]
(c6-1 / or
      :op1 (c6-0 / organization
                 :name (c6-2 / name
                             :op1 "ALU"))
      :op2 (c6-4 / organization
                 :name (c6-3 / name
                             :op1 "ACLU")))

# ::snt If it's in the Bill of Rights instead of the Constitution, they didn't.
# ::tokens ["If", "it", "'s", "in", "the", "Bill", "of", "Rights", "instead", "of", "the", "Constitution", ",", "they", "did", "n't", "."]
# ::lemmas ["if", "it", "be", "in", "the", "Bill", "of", "Rights", "instead", "of", "the", "Constitution", ",", "they", "do", "not", "."]
(c7-5 / do-02
      :ARG0 (c7-9 / they)
      :condition (c7-1 / be-located-at-91
                       :ARG1 (c7-2 / it)
                       :ARG2 (c7-0 / law
                                   :name (c7-3 / name
                                               :op1 "Bill"
                                               :op2 "of"
                                               :op3 "Rights")
                                   :ARG1-of (c7-7 / instead-of-91
                                                  :ARG2 (c7-6 / be-located-at-91
                                                              :ARG1 c7-2
                                                              :ARG2 (c7-8 / law
                                                                          :name (c7-4 / name
                                                                                      :op1 "Constitution"))))))
      :polarity -)

# ::snt Google Time, place, manner restrictions for your next Vox article.
# ::tokens ["Google", "Time", ",", "place", ",", "manner", "restrictions", "for", "your", "next", "Vox", "article", "."]
# ::lemmas ["Google", "Time", ",", "place", ",", "manner", "restriction", "for", "your", "next", "Vox", "article", "."]
(c8-6 / restrict-01
      :ARG0 (c8-7 / company
                  :name (c8-3 / name
                              :op1 "Google"))
      :ARG1 (c8-11 / and
                   :op1 (c8-9 / time)
                   :op2 (c8-5 / place)
                   :op3 (c8-1 / manner))
      :beneficiary (c8-2 / article
                         :poss (c8-0 / you)
                         :mod (c8-4 / next)
                         :mod (c8-10 / publication
                                     :name (c8-8 / name
                                                 :op1 "Vox"))))

# ::snt like Motorola specs
# ::tokens ["like", "Motorola", "specs"]
# ::lemmas ["like", "Motorola", "spec"]
(c9-2 / resemble-01
      :ARG2 (c9-0 / specification
                  :poss (c9-3 / company
                              :name (c9-1 / name
                                          :op1 "Motorola"))))

# ::snt : : Sir, The US Constitution's First Amendment addresses this very topic. wiki link
# ::tokens [":", ":", "Sir", ",", "The", "US", "Constitution", "'s", "First", "Amendment", "addresses", "this", "very", "topic", ".", "wiki", "link"]
# ::lemmas [":", ":", "Sir", ",", "The", "US", "Constitution", "'s", "First", "Amendment", "address", "this", "very", "topic", ".", "wiki", "link"]
(c10-2 / multi-sentence
       :snt1 (c10-12 / address-02
                     :ARG0 (c10-1 / law
                                  :name (c10-3 / name
                                               :op1 "First"
                                               :op2 "Amendment")
                                  :part-of (c10-7 / constitution
                                                  :mod (c10-6 / country
                                                              :name (c10-4 / name
                                                                           :op1 "US"))))
                     :ARG1 (c10-11 / topic
                                   :mod (c10-9 / this)
                                   :mod (c10-5 / very))
                     :mod (c10-10 / Sir))
       :snt2 (c10-8 / link
                    :mod (c10-0 / wiki)))

# ::snt :Apparently that only applies to white people protesting nine year olds from Central America.
# ::tokens [":", "Apparently", "that", "only", "applies", "to", "white", "people", "protesting", "nine", "year", "olds", "from", "Central", "America", "."]
# ::lemmas [":", "apparently", "that", "only", "apply", "to", "white", "people", "protest", "nine", "year", "olds", "from", "Central", "America", "."]
(c11-11 / apply-02
        :ARG1 (c11-9 / that)
        :ARG2 (c11-7 / person
                     :ARG1-of (c11-0 / white-02)
                     :ARG0-of (c11-10 / protest-01
                                      :ARG1 (c11-2 / person
                                                   :age (c11-8 / temporal-quantity
                                                               :unit (c11-1 / year)
                                                               :quant 9)
                                                   :source (c11-5 / world-region
                                                                  :name (c11-6 / name
                                                                               :op1 "Central"
                                                                               :op2 "America")))))
        :manner (c11-4 / apparent)
        :mod (c11-3 / only))

# ::snt Journalists, PLEASE show up PD to express intent to sue re. violation of st amend.
# ::tokens ["Journalists", ",", "PLEASE", "show", "up", "PD", "to", "express", "intent", "to", "sue", "re", ".", "violation", "of", "st", "amend", "."]
# ::lemmas ["journalist", ",", "please", "show", "up", "PD", "to", "express", "intent", "to", "sue", "re", ".", "violation", "of", "st", "amend", "."]
(c12-9 / show-up-02
       :ARG1 (c12-0 / journalist)
       :location (c12-8 / department
                        :mod (c12-7 / police))
       :purpose (c12-2 / express-01
                       :ARG0 c12-0
                       :ARG1 (c12-4 / intend-01
                                    :ARG0 c12-0
                                    :ARG1 (c12-3 / sue-02
                                                 :ARG0 c12-0
                                                 :ARG2 (c12-6 / violate-01
                                                              :ARG1 (c12-1 / law
                                                                           :name (c12-5 / name
                                                                                        :op1 "St"
                                                                                        :op2 "Amendment"))))))
       :mode imperative
       :polite +)

# ::snt Fairynuff Rab, you be as glass hauf empty as you like, just so long as it don't stop you voting !
# ::tokens ["Fairynuff", "Rab", ",", "you", "be", "as", "glass", "hauf", "empty", "as", "you", "like", ",", "just", "so", "long", "as", "it", "do", "n't", "stop", "you", "voting", "!"]
# ::lemmas ["Fairynuff", "Rab", ",", "you", "be", "as", "glass", "hauf", "empty", "as", "you", "like", ",", "just", "so", "long", "as", "it", "do", "not", "stop", "you", "vote", "!"]
(c13-8 / say-01
       :ARG1 (c13-2 / empty-02
                    :ARG1 (c13-6 / person
                                 :name (c13-4 / name
                                              :op1 "Rab"))
                    :condition (c13-9 / as-long-as
                                      :op1 (c13-1 / like-01
                                                  :ARG0 c13-6)
                                      :degree (c13-7 / glass)
                                      :condition-of c13-2)
                    :op1 (c13-3 / stop-01
                                :ARG0 c13-2
                                :ARG1 (c13-5 / vote-01
                                             :ARG0 c13-6)
                                :polarity -)
                    :mod (c13-0 / just))
       :ARG2 c13-6)

# ::snt positive my arse.
# ::tokens ["positive", "my", "arse", "."]
# ::lemmas ["positive", "my", "arse", "."]
(c14-0 / positive
       :domain (c14-2 / ass
                      :part-of (c14-1 / i)))

# ::snt no just with our force now arming. We need at minimum the same right to arm.
# ::tokens ["no", "just", "with", "our", "force", "now", "arming", ".", "We", "need", "at", "minimum", "the", "same", "right", "to", "arm", "."]
# ::lemmas ["no", "just", "with", "our", "force", "now", "arm", ".", "we", "need", "at", "minimum", "the", "same", "right", "to", "arm", "."]
(c15-3 / multi-sentence
       :snt1 (c15-11 / arm-01
                     :ARG1 (c15-2 / force
                                  :poss (c15-1 / we))
                     :mod (c15-0 / just)
                     :time (c15-6 / now)
                     :polarity -)
       :snt2 (c15-7 / need-01
                    :ARG0 (c15-5 / we)
                    :ARG1 (c15-9 / right-05
                                 :ARG1 c15-5
                                 :ARG2 (c15-4 / arm-01
                                              :ARG0 c15-5)
                                 :ARG1-of (c15-10 / same-01)
                                 :mod (c15-8 / at-least))))

# ::snt If the founding fathers had wanted people to have freedom of assembly, they'd have put something about it in the bill of rights.
# ::tokens ["If", "the", "founding", "fathers", "had", "wanted", "people", "to", "have", "freedom", "of", "assembly", ",", "they", "'d", "have", "put", "something", "about", "it", "in", "the", "bill", "of", "rights", "."]
# ::lemmas ["if", "the", "found", "father", "have", "want", "people", "to", "have", "freedom", "of", "assembly", ",", "they", "would", "have", "put", "something", "about", "it", "in", "the", "bill", "of", "right", "."]
(c16-5 / put-01
       :ARG0 (c16-8 / person
                    :name (c16-4 / name
                                 :op1 "Founding"
                                 :op2 "Fathers"))
       :ARG1 (c16-7 / something)
       :ARG2 (c16-3 / bill
                    :topic (c16-6 / right-05))
       :condition (c16-0 / want-01
                         :ARG0 c16-8
                         :ARG1 (c16-1 / free-04
                                      :ARG1 (c16-2 / person)
                                      :ARG3 (c16-9 / assemble-02))))

# ::snt I thought this was going to be a programming joke
# ::tokens ["I", "thought", "this", "was", "going", "to", "be", "a", "programming", "joke"]
# ::lemmas ["i", "think", "this", "be", "go", "to", "be", "a", "programming", "joke"]
(c17-4 / think-01
       :ARG0 (c17-1 / i)
       :ARG1 (c17-0 / joke-01
                    :ARG2 (c17-2 / program-01)
                    :domain (c17-3 / this)))

# ::snt americans all have guns. They can take the cops on at their own game. Soon it will be needed in scotland.
# ::tokens ["americans", "all", "have", "guns", ".", "They", "can", "take", "the", "cops", "on", "at", "their", "own", "game", ".", "Soon", "it", "will", "be", "needed", "in", "scotland", "."]
# ::lemmas ["americans", "all", "have", "gun", ".", "they", "can", "take", "the", "cop", "on", "at", "their", "own", "game", ".", "soon", "it", "will", "be", "need", "in", "scotland", "."]
(c18-1 / multi-sentence
       :snt1 (c18-0 / have-03
                    :ARG0 (c18-5 / person
                                 :mod (c18-7 / country
                                             :name (c18-3 / name
                                                          :op1 "America"))
                                 :mod (c18-16 / all))
                    :ARG1 (c18-8 / gun))
       :snt2 (c18-15 / possible-01
                     :ARG1 (c18-14 / take-on-09
                                   :ARG0 (c18-10 / they)
                                   :ARG1 (c18-6 / cop)
                                   :manner (c18-9 / game
                                                  :poss c18-10)))
       :snt3 (c18-4 / need-01
                    :ARG1 (c18-2 / it)
                    :time (c18-11 / soon)
                    :location (c18-12 / country
                                      :name (c18-13 / name
                                                    :op1 "Scotland"))))

# ::snt lets keep it positive Rab? At least till the fat lady's singing.
# ::tokens ["lets", "keep", "it", "positive", "Rab", "?", "At", "least", "till", "the", "fat", "lady", "'s", "singing", "."]
# ::lemmas ["let", "keep", "it", "positive", "rab", "?", "at", "least", "till", "the", "fat", "lady", "'s", "singing", "."]
(c19-9 / say-01
       :ARG1 (c19-10 / keep-02
                     :ARG0 (c19-0 / we)
                     :ARG1 (c19-8 / positive
                                  :domain (c19-6 / it))
                     :polarity (c19-12 / amr-unknown)
                     :time (c19-3 / until
                                  :op1 (c19-4 / sing-01
                                              :ARG0 (c19-1 / lady
                                                           :ARG1-of (c19-2 / fat-03)))
                                  :mod (c19-5 / at-least))
                     :mode imperative)
       :ARG2 (c19-11 / person
                     :name (c19-7 / name
                                  :op1 "Rab")))
