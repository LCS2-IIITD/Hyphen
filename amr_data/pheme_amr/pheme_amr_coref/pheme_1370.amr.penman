# ::snt just the distraction that Hockey needed from his budget blowout hypocritical excuses
# ::tokens ["just", "the", "distraction", "that", "Hockey", "needed", "from", "his", "budget", "blowout", "hypocritical", "excuses"]
# ::lemmas ["just", "the", "distraction", "that", "Hockey", "need", "from", "his", "budget", "blowout", "hypocritical", "excuse"]
(c1-7 / distract-01
      :ARG0 (c1-8 / thing
                  :ARG2-of (c1-3 / excuse-02)
                  :mod (c1-0 / hypocritical)
                  :ARG1-of (c1-2 / budget-01
                                 :ARG0 (c1-6 / person
                                             :name (c1-4 / name
                                                         :op1 "Hockey")
                                             :ARG1-of c1-7)))
      :mod (c1-1 / just)
      :ARG1-of (c1-5 / need-01
                     :ARG0 c1-6))

# ::snt Apparently the SAS have been sent in... not sure how that will pan out but hopefully well!!
# ::tokens ["Apparently", "the", "SAS", "have", "been", "sent", "in", "...", "not", "sure", "how", "that", "will", "pan", "out", "but", "hopefully", "well", "!", "!"]
# ::lemmas ["apparently", "the", "SAS", "have", "be", "send", "in", "...", "not", "sure", "how", "that", "will", "pan", "out", "but", "hopefully", "well", "!", "!"]
(c2-2 / multi-sentence
      :snt1 (c2-11 / send-01
                   :ARG1 (c2-6 / military
                               :name (c2-5 / name
                                           :op1 "SAS"))
                   :ARG2 (c2-4 / inside)
                   :manner (c2-13 / apparent))
      :snt2 (c2-8 / contrast-01
                  :ARG1 (c2-3 / sure-02
                              :ARG0 (c2-9 / i)
                              :ARG1 (c2-12 / thing
                                           :manner-of (c2-7 / pan-out-02
                                                            :ARG1 (c2-10 / that)))
                              :polarity -)
                  :ARG2 (c2-0 / hope-01
                              :ARG1 (c2-1 / well))))

# ::snt . Jeez.How bad was the chocolate?
# ::tokens [".", "Jeez", ".", "How", "bad", "was", "the", "chocolate", "?"]
# ::lemmas [".", "jeez", ".", "how", "bad", "be", "the", "chocolate", "?"]
(c3-1 / multi-sentence
      :snt1 (c3-0 / jeez
                  :mode expressive)
      :snt2 (c3-2 / bad-07
                  :ARG1 (c3-3 / chocolate)
                  :degree (c3-4 / amr-unknown)))

# ::snt austrailian security ..didnt see this one... eh
# ::tokens ["austrailian", "security", "..", "did", "nt", "see", "this", "one", "...", "eh"]
# ::lemmas ["austrailian", "security", "..", "do", "not", "see", "this", "one", "...", "eh"]
(c4-0 / multi-sentence
      :snt1 (c4-7 / security
                  :mod (c4-6 / country
                             :name (c4-5 / name
                                         :op1 "Australia")))
      :snt2 (c4-2 / see-01
                  :ARG0 (c4-4 / i)
                  :ARG1 (c4-1 / one
                              :mod (c4-8 / this))
                  :polarity -)
      :snt3 (c4-3 / eh
                  :mode expressive))

# ::snt I can't believe you showed their faces.
# ::tokens ["I", "ca", "n't", "believe", "you", "showed", "their", "faces", "."]
# ::lemmas ["i", "can", "not", "believe", "you", "show", "their", "face", "."]
(c5-4 / possible-01
      :ARG1 (c5-2 / believe-01
                  :ARG0 (c5-3 / i)
                  :ARG1 (c5-5 / show-01
                              :ARG0 (c5-0 / you)
                              :ARG1 (c5-1 / face
                                          :part-of (c5-6 / they))))
      :polarity -)

# ::snt can't see how it could end well - suicide terrorists (by nature) have no fear!
# ::tokens ["ca", "n't", "see", "how", "it", "could", "end", "well", "-", "suicide", "terrorists", "(", "by", "nature", ")", "have", "no", "fear", "!"]
# ::lemmas ["can", "not", "see", "how", "it", "could", "end", "well", "-", "suicide", "terrorist", "(", "by", "nature", ")", "have", "no", "fear", "!"]
(c6-2 / multi-sentence
      :snt1 (c6-7 / possible-01
                  :ARG1 (c6-9 / see-01
                              :ARG1 (c6-10 / thing
                                           :manner-of (c6-11 / possible-01
                                                             :ARG1 (c6-3 / end-01
                                                                         :ARG1 (c6-5 / it)
                                                                         :ARG1-of (c6-0 / well-09)))))
                  :polarity -)
      :snt2 (c6-1 / fear-01
                  :ARG0 (c6-8 / terrorist
                              :mod (c6-4 / suicide)
                              :mod (c6-6 / nature))
                  :polarity -))

# ::snt ! MT Siege at Sydney's Martin Place underway for an hour. Hostages remain inside.
# ::tokens ["!", "MT", "Siege", "at", "Sydney", "'s", "Martin", "Place", "underway", "for", "an", "hour", ".", "Hostages", "remain", "inside", "."]
# ::lemmas ["!", "MT", "Siege", "at", "Sydney", "'s", "Martin", "Place", "underway", "for", "an", "hour", ".", "hostage", "remain", "inside", "."]
(c7-1 / multi-sentence
      :snt1 (c7-2 / underway
                  :domain (c7-9 / Siege
                                :location (c7-3 / building
                                                :name (c7-5 / name
                                                            :op1 "Martin"
                                                            :op2 "Place")
                                                :location (c7-8 / city
                                                                :name (c7-6 / name
                                                                            :op1 "Sydney"))))
                  :duration (c7-10 / temporal-quantity
                                   :unit (c7-0 / hour)
                                   :quant 1))
      :snt2 (c7-7 / remain-01
                  :ARG1 (c7-11 / hostage)
                  :ARG3 (c7-4 / inside)))

# ::snt Apparently a suspicious package found at the Opera House now! This isn't right
# ::tokens ["Apparently", "a", "suspicious", "package", "found", "at", "the", "Opera", "House", "now", "!", "This", "is", "n't", "right"]
# ::lemmas ["apparently", "a", "suspicious", "package", "find", "at", "the", "Opera", "House", "now", "!", "this", "be", "not", "right"]
(c8-1 / multi-sentence
      :snt1 (c8-0 / find-01
                  :ARG1 (c8-5 / package
                              :ARG1-of (c8-7 / suspicious-03))
                  :location (c8-2 / building
                                  :name (c8-3 / name
                                              :op1 "Opera"
                                              :op2 "House"))
                  :time (c8-4 / now)
                  :ARG1-of (c8-9 / appear-02))
      :snt2 (c8-6 / right-06
                  :ARG1 (c8-8 / this)
                  :polarity -))

# ::snt live updates on bbc!
# ::tokens ["live", "updates", "on", "bbc", "!"]
# ::lemmas ["live", "update", "on", "bbc", "!"]
(c9-2 / update-02
      :ARG2 (c9-3 / broadcast-program
                  :name (c9-0 / name
                              :op1 "BSNBC"))
      :mod (c9-1 / live))

# ::snt they just asking for the anti-terrorist squad to come and take EM out
# ::tokens ["they", "just", "asking", "for", "the", "anti", "-", "terrorist", "squad", "to", "come", "and", "take", "EM", "out"]
# ::lemmas ["they", "just", "ask", "for", "the", "anti", "-", "terrorist", "squad", "to", "come", "and", "take", "EM", "out"]
(c10-10 / ask-02
        :ARG0 (c10-9 / they)
        :ARG1 (c10-1 / and
                     :op1 (c10-6 / come-01
                                 :ARG1 (c10-8 / squad
                                              :ARG0-of (c10-5 / counter-01
                                                              :ARG1 (c10-7 / terrorist))))
                     :op2 (c10-3 / take-out-11
                                 :ARG0 c10-8
                                 :ARG1 (c10-4 / person
                                              :name (c10-2 / name
                                                           :op1 "EM"))))
        :mod (c10-0 / just))

# ::snt This really is awful. It's bloody christmas as well!
# ::tokens ["This", "really", "is", "awful", ".", "It", "'s", "bloody", "christmas", "as", "well", "!"]
# ::lemmas ["this", "really", "be", "awful", ".", "it", "be", "bloody", "christma", "as", "well", "!"]
(c11-1 / multi-sentence
       :snt1 (c11-6 / awful
                    :domain (c11-5 / this)
                    :ARG1-of (c11-4 / real-04))
       :snt2 (c11-0 / festival
                    :name (c11-3 / name
                                 :op1 "Blood"
                                 :op2 "Christmas")
                    :mod (c11-2 / as-well)))

# ::snt the flag being displayed may be the one on the right ?!!
# ::tokens ["the", "flag", "being", "displayed", "may", "be", "the", "one", "on", "the", "right", "?", "!", "!"]
# ::lemmas ["the", "flag", "being", "display", "may", "be", "the", "one", "on", "the", "right", "?", "!", "!"]
(c12-3 / possible-01
       :polarity (c12-6 / amr-unknown)
       :ARG1 (c12-1 / be-from-91
                    :ARG1 (c12-0 / flag
                                 :ARG1-of (c12-4 / display-01))
                    :ARG2 (c12-2 / flag
                                 :ARG1-of (c12-5 / right-04))))

# ::snt Got family or friends in Oz, Rory?
# ::tokens ["Got", "family", "or", "friends", "in", "Oz", ",", "Rory", "?"]
# ::lemmas ["got", "family", "or", "friend", "in", "Oz", ",", "Rory", "?"]
(c13-12 / ask-01
        :ARG0 (c13-4 / i)
        :ARG1 (c13-10 / get-02
                      :ARG0 (c13-8 / person
                                   :name (c13-6 / name
                                                :op1 "Rory"))
                      :ARG1 (c13-2 / or
                                   :op1 (c13-1 / family)
                                   :op2 (c13-11 / person
                                                :ARG0-of (c13-0 / have-rel-role-91
                                                                :ARG1 c13-8
                                                                :ARG2 (c13-5 / friend))))
                      :location (c13-9 / country-region
                                       :name (c13-7 / name
                                                    :op1 "Oz"))
                      :polarity (c13-3 / amr-unknown))
        :ARG2 c13-8)

# ::snt sana safe sila nqaun
# ::tokens ["sana", "safe", "sila", "nqaun"]
# ::lemmas ["sana", "safe", "sila", "nqaun"]
(c15-5 / say-01
       :ARG0 (c15-2 / i)
       :ARG1 (c15-6 / and
                    :op1 (c15-1 / sana)
                    :op2 (c15-0 / safe-01))
       :ARG2 (c15-4 / person
                    :name (c15-3 / name
                                 :op1 "Sila"
                                 :op2 "nqaun")))

# ::snt yea they're evacuating - bloody terrifying
# ::tokens ["yea", "they", "'re", "evacuating", "-", "bloody", "terrifying"]
# ::lemmas ["yea", "they", "be", "evacuate", "-", "bloody", "terrifying"]
(c16-2 / evacuate-01
       :ARG2 (c16-4 / they)
       :ARG0-of (c16-3 / terrify-01
                       :mod (c16-1 / bloody))
       :mod (c16-0 / yeh
                   :mode expressive))

# ::snt : Siege at Sydney's Martin Place has now been underway for an hour. Hostages remain inside pray!!
# ::tokens [":", "Siege", "at", "Sydney", "'s", "Martin", "Place", "has", "now", "been", "underway", "for", "an", "hour", ".", "Hostages", "remain", "inside", "pray", "!", "!"]
# ::lemmas [":", "siege", "at", "Sydney", "'s", "Martin", "Place", "have", "now", "be", "underway", "for", "an", "hour", ".", "hostage", "remain", "inside", "pray", "!", "!"]
(c17-1 / multi-sentence
       :snt1 (c17-2 / underway
                    :domain (c17-11 / Siege
                                    :location (c17-3 / building
                                                     :name (c17-5 / name
                                                                  :op1 "Martin"
                                                                  :op2 "Place")
                                                     :location (c17-9 / city
                                                                      :name (c17-6 / name
                                                                                   :op1 "Sydney"))))
                    :duration (c17-12 / temporal-quantity
                                      :unit (c17-0 / hour)
                                      :quant 1)
                    :time (c17-7 / now))
       :snt2 (c17-8 / remain-01
                    :ARG1 (c17-13 / hostage)
                    :ARG3 (c17-4 / inside
                                 :op1 (c17-10 / pray-01))))

# ::snt sad
# ::tokens ["sad"]
# ::lemmas ["sad"]
(c18-0 / sad-02)

# ::snt : Siege at Sydney's Martin Place underway for an hour. Hostages remain inside.
# ::tokens [":", "Siege", "at", "Sydney", "'s", "Martin", "Place", "underway", "for", "an", "hour", ".", "Hostages", "remain", "inside", "."]
# ::lemmas [":", "siege", "at", "Sydney", "'s", "Martin", "Place", "underway", "for", "an", "hour", ".", "hostage", "remain", "inside", "."]
(c19-1 / multi-sentence
       :snt1 (c19-2 / underway
                    :domain (c19-9 / Siege
                                   :location (c19-3 / building
                                                    :name (c19-5 / name
                                                                 :op1 "Martin"
                                                                 :op2 "Place")
                                                    :location (c19-8 / city
                                                                     :name (c19-6 / name
                                                                                  :op1 "Sydney"))))
                    :duration (c19-10 / temporal-quantity
                                      :unit (c19-0 / hour)
                                      :quant 1))
       :snt2 (c19-7 / remain-01
                    :ARG1 (c19-11 / hostage)
                    :ARG3 (c19-4 / inside)))

# ::snt just give them the choc, i mean : chop!
# ::tokens ["just", "give", "them", "the", "choc", ",", "i", "mean", ":", "chop", "!"]
# ::lemmas ["just", "give", "they", "the", "choc", ",", "i", "mean", ":", "chop", "!"]
(c20-6 / give-01
       :ARG0 (c20-1 / you)
       :ARG1 (c20-5 / choc)
       :ARG2 (c20-7 / they)
       :mod (c20-0 / just)
       :ARG1-of (c20-2 / mean-01
                       :ARG0 (c20-3 / i)
                       :ARG2 (c20-4 / chop-01
                                    :mode expressive))
       :mode imperative)
