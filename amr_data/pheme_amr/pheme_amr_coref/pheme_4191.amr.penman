# ::snt road is blocked off by police. No cars can get through.
# ::tokens ["road", "is", "blocked", "off", "by", "police", ".", "No", "cars", "can", "get", "through", "."]
# ::lemmas ["road", "be", "block", "off", "by", "police", ".", "no", "car", "can", "get", "through", "."]
(c1-0 / multi-sentence
      :snt1 (c1-1 / block-01
                  :ARG0 (c1-3 / police)
                  :ARG1 (c1-4 / road)
                  :direction (c1-2 / off))
      :snt2 (c1-7 / possible-01
                  :ARG1 (c1-6 / get-through-12
                              :ARG0 (c1-5 / car))
                  :polarity -))

# ::snt i would list ridiculous reasons, but i'm not giving them ideas
# ::tokens ["i", "would", "list", "ridiculous", "reasons", ",", "but", "i", "'m", "not", "giving", "them", "ideas"]
# ::lemmas ["i", "would", "list", "ridiculous", "reason", ",", "but", "i", "be", "not", "give", "they", "idea"]
(c2-4 / contrast-01
      :ARG1 (c2-0 / list-01
                  :ARG0 (c2-1 / i)
                  :ARG1 (c2-3 / reason
                              :ARG1-of (c2-2 / ridiculous-02)))
      :ARG2 (c2-5 / give-01
                  :ARG0 c2-1
                  :ARG1 (c2-6 / idea)
                  :ARG2 (c2-7 / they)
                  :polarity -))

# ::snt gotcha
# ::tokens ["gotcha"]
# ::lemmas ["gotcha"]
(c3-1 / get-02
      :ARG0 (c3-2 / i)
      :ARG1 (c3-0 / it))

# ::snt beautiful resistance where u there?
# ::tokens ["beautiful", "resistance", "where", "u", "there", "?"]
# ::lemmas ["beautiful", "resistance", "where", "u", "there", "?"]
(c4-0 / resist-01
      :ARG1-of (c4-2 / beautiful-02)
      :location (c4-1 / amr-unknown))

# ::snt end of this empire r u awake yet ,, ?
# ::tokens ["end", "of", "this", "empire", "r", "u", "awake", "yet", ",", ",", "?"]
# ::lemmas ["end", "of", "this", "empire", "r", "u", "awake", "yet", ",", ",", "?"]
(c5-7 / awake-03
      :polarity (c5-3 / amr-unknown)
      :ARG1 (c5-0 / you)
      :time (c5-5 / yet)
      :ARG1-of (c5-4 / cause-01
                     :ARG0 (c5-2 / end-01
                                 :ARG1 (c5-1 / empire
                                             :mod (c5-6 / this)))))

# ::snt was that last night? saw one person being loaded. didn't know why. saw others gassed in their yard
# ::tokens ["was", "that", "last", "night", "?", "saw", "one", "person", "being", "loaded", ".", "did", "n't", "know", "why", ".", "saw", "others", "gassed", "in", "their", "yard"]
# ::lemmas ["be", "that", "last", "night", "?", "see", "one", "person", "be", "load", ".", "do", "not", "know", "why", ".", "see", "other", "gas", "in", "their", "yard"]
(c6-0 / multi-sentence
      :snt1 (c6-18 / that
                   :time (c6-2 / date-entity
                               :dayperiod (c6-8 / night)
                               :mod (c6-14 / yesterday))
                   :polarity (c6-5 / amr-unknown))
      :snt2 (c6-3 / see-01
                  :ARG0 (c6-10 / i)
                  :ARG1 (c6-6 / load-01
                              :ARG1 (c6-1 / person
                                          :quant 1)))
      :snt3 (c6-12 / know-01
                   :ARG0 c6-10
                   :ARG1 (c6-17 / thing
                                :ARG0-of (c6-16 / cause-01
                                                :ARG1 c6-6))
                   :polarity -)
      :snt4 (c6-7 / see-01
                  :ARG0 c6-10
                  :ARG1 (c6-9 / gas-03
                              :ARG1 (c6-4 / person
                                          :mod (c6-15 / other))
                              :location (c6-13 / yard
                                               :poss (c6-11 / they)))))

# ::snt : entrepreneur front and center
# ::tokens [":", "entrepreneur", "front", "and", "center"]
# ::lemmas [":", "entrepreneur", "front", "and", "center"]
(c7-3 / and
      :op1 (c7-1 / front)
      :op2 (c7-2 / center)
      :mod (c7-0 / entrepreneur))

# ::snt Me neither.Didn't they already get protester w/ a tear gas canister? I saw him put in2 ambulance
# ::tokens ["Me", "neither", ".", "Didn't", "they", "already", "get", "protester", "w/", "a", "tear", "gas", "canister", "?", "I", "saw", "him", "put", "in2", "ambulance"]
# ::lemmas ["i", "neither", ".", "didn't", "they", "already", "get", "protester", "w/", "a", "tear", "gas", "canister", "?", "i", "see", "he", "put", "in2", "ambulance"]
(c8-2 / multi-sentence
      :snt1 (c8-5 / i
                  :polarity -)
      :snt2 (c8-10 / get-01
                   :ARG0 (c8-14 / they)
                   :ARG1 (c8-7 / person
                               :ARG0-of (c8-15 / protest-01)
                               :ARG0-of (c8-0 / have-03
                                              :ARG1 (c8-9 / canister
                                                          :consist-of (c8-8 / gas
                                                                            :mod (c8-12 / tear)))))
                   :time (c8-16 / already)
                   :polarity (c8-4 / amr-unknown)
                   :polarity -)
      :snt3 (c8-13 / see-01
                   :ARG0 (c8-11 / i)
                   :ARG1 (c8-3 / put-01
                               :ARG1 (c8-1 / he)
                               :ARG2 (c8-6 / ambulance
                                           :quant 2))))

# ::snt RBG!
# ::tokens ["RBG", "!"]
# ::lemmas ["RBG", "!"]
(c9-0 / bwahaha
      :mode expressive)

# ::snt : Police told protesters to get out of street, they instead got on knees love the cheerleading sign hahaha
# ::tokens [":", "Police", "told", "protesters", "to", "get", "out", "of", "street", ",", "they", "instead", "got", "on", "knees", "love", "the", "cheerleading", "sign", "hahaha"]
# ::lemmas [":", "police", "tell", "protester", "to", "get", "out", "of", "street", ",", "they", "instead", "get", "on", "knee", "love", "the", "cheerleading", "sign", "hahaha"]
(c10-12 / and
        :op1 (c10-10 / tell-01
                     :ARG0 (c10-6 / police)
                     :ARG1 (c10-8 / get-05
                                  :ARG1 (c10-11 / person
                                                :ARG0-of (c10-1 / protest-01))
                                  :ARG2 (c10-2 / out-06
                                               :ARG1 c10-11
                                               :ARG2 (c10-9 / street)))
                     :ARG2 c10-11)
        :op2 (c10-5 / kneel-01
                    :ARG0 c10-11
                    :ARG1-of (c10-4 / instead-of-91
                                    :ARG2 (c10-3 / sign
                                                 :mod (c10-7 / cheerlead-01)))
                    :mod (c10-0 / haha
                                :mode expressive)))

# ::snt smart kids who were telling folks to sit down.
# ::tokens ["smart", "kids", "who", "were", "telling", "folks", "to", "sit", "down", "."]
# ::lemmas ["smart", "kid", "who", "be", "tell", "folk", "to", "sit", "down", "."]
(c11-2 / kid
       :ARG1-of (c11-3 / smart-06)
       :ARG0-of (c11-4 / tell-01
                       :ARG1 (c11-1 / sit-down-02
                                    :ARG1 (c11-0 / folk
                                                 :ARG2-of c11-4))))

# ::snt don't be shocked if they do I know damn well police isn't going to fire upon all those people with their hands up?
# ::tokens ["do", "n't", "be", "shocked", "if", "they", "do", "I", "know", "damn", "well", "police", "is", "n't", "going", "to", "fire", "upon", "all", "those", "people", "with", "their", "hands", "up", "?"]
# ::lemmas ["do", "not", "be", "shock", "if", "they", "do", "i", "know", "damn", "well", "police", "be", "not", "go", "to", "fire", "upon", "all", "those", "people", "with", "their", "hand", "up", "?"]
(c12-14 / shock-01
        :ARG0 (c12-11 / do-02
                      :ARG0 (c12-15 / they))
        :ARG1 (c12-1 / you)
        :ARG1-of (c12-12 / cause-01
                         :ARG0 (c12-9 / know-01
                                      :ARG0 (c12-8 / i)
                                      :ARG1 (c12-3 / fire-02
                                                   :ARG0 (c12-10 / police)
                                                   :destination (c12-16 / person
                                                                        :mod (c12-17 / all)
                                                                        :mod (c12-13 / that)
                                                                        :ARG0-of (c12-0 / have-03
                                                                                        :ARG1 (c12-4 / hand
                                                                                                     :ARG1-of (c12-5 / up-03)
                                                                                                     :part-of c12-16)))
                                                   :manner (c12-2 / well
                                                                  :degree (c12-6 / damn))
                                                   :polarity -)
                                      :polarity (c12-7 / amr-unknown)))
        :polarity -
        :mode imperative)

# ::snt FPD-Think: If they can make up excuses shoot, they'll make them up after shooting....
# ::tokens ["FPD", "-", "Think", ":", "If", "they", "can", "make", "up", "excuses", "shoot", ",", "they", "'ll", "make", "them", "up", "after", "shooting", "...."]
# ::lemmas ["FPD", "-", "Think", ":", "if", "they", "can", "make", "up", "excuse", "shoot", ",", "they", "'ll", "make", "they", "up", "after", "shoot", "...."]
(c13-8 / think-01
       :ARG0 (c13-4 / person
                    :name (c13-3 / name
                                 :op1 "FPD"))
       :ARG1 (c13-0 / have-condition-91
                    :ARG1 (c13-1 / make-up-10
                                 :ARG0 (c13-6 / they)
                                 :ARG1 (c13-2 / excuse-02)
                                 :time (c13-10 / after
                                               :op1 (c13-7 / shoot-02)))
                    :ARG2 (c13-9 / possible-01
                                 :ARG1 (c13-5 / make-up-10
                                              :ARG0 c13-6
                                              :ARG1 c13-2))))

# ::snt gotta love the lady in the front row advertising for cheerleaders.
# ::tokens ["got", "ta", "love", "the", "lady", "in", "the", "front", "row", "advertising", "for", "cheerleaders", "."]
# ::lemmas ["got", "to", "love", "the", "lady", "in", "the", "front", "row", "advertising", "for", "cheerleader", "."]
(c14-2 / obligate-01
       :ARG1 (c14-0 / love-01
                    :ARG1 (c14-5 / lady
                                 :location (c14-3 / row
                                                  :mod (c14-1 / front))
                                 :ARG0-of (c14-6 / advertise-01
                                                 :ARG1 (c14-4 / cheerleader)))))

# ::snt I'm all for the protest, but the love of god, don't sit in the middle of a road. That's just dangerous and begging trouble
# ::tokens ["I", "'m", "all", "for", "the", "protest", ",", "but", "the", "love", "of", "god", ",", "do", "n't", "sit", "in", "the", "middle", "of", "a", "road", ".", "That", "'s", "just", "dangerous", "and", "begging", "trouble"]
# ::lemmas ["i", "be", "all", "for", "the", "protest", ",", "but", "the", "love", "of", "god", ",", "do", "not", "sit", "in", "the", "middle", "of", "a", "road", ".", "that", "be", "just", "dangerous", "and", "beg", "trouble"]
(c15-2 / multi-sentence
       :snt1 (c15-11 / contrast-01
                     :ARG1 (c15-14 / support-01
                                   :ARG0 (c15-7 / i)
                                   :ARG1 (c15-9 / protest-01)
                                   :degree (c15-17 / all))
                     :ARG2 (c15-4 / sit-01
                                  :ARG1 (c15-1 / love-01
                                               :ARG1 (c15-16 / person
                                                             :name (c15-8 / name
                                                                          :op1 "God")))
                                  :ARG2 (c15-10 / middle
                                                :part-of (c15-12 / road))
                                  :polarity -
                                  :mode imperative))
       :snt2 (c15-6 / and
                    :op1 (c15-5 / endanger-01
                                :ARG0 (c15-15 / that)
                                :mod (c15-0 / just))
                    :op2 (c15-13 / trouble-05
                                 :ARG0 c15-15
                                 :ARG1 c15-1
                                 :manner (c15-3 / beg-01
                                                :ARG0 c15-1))))

# ::snt Police told protesters to get out of street, they instead got on knees and said, "Hands up! Don't shoot!"
# ::tokens ["Police", "told", "protesters", "to", "get", "out", "of", "street", ",", "they", "instead", "got", "on", "knees", "and", "said", ",", "\"", "Hands", "up", "!", "Do", "n't", "shoot", "!", "\""]
# ::lemmas ["police", "tell", "protester", "to", "get", "out", "of", "street", ",", "they", "instead", "get", "on", "knee", "and", "say", ",", "\"", "hand", "up", "!", "do", "not", "shoot", "!", "\""]
(c16-14 / and
        :op1 (c16-12 / tell-01
                     :ARG0 (c16-9 / police)
                     :ARG1 (c16-10 / get-05
                                   :ARG1 (c16-13 / person
                                                 :ARG0-of (c16-2 / protest-01))
                                   :ARG2 (c16-3 / out-06
                                                :ARG1 c16-13
                                                :ARG2 (c16-11 / street)))
                     :ARG2 c16-13)
        :op2 (c16-5 / and
                    :op1 (c16-7 / kneel-01
                                :ARG0 c16-13)
                    :op2 (c16-4 / say-01
                                :ARG0 c16-13
                                :ARG1 (c16-8 / and
                                             :op1 (c16-0 / hands-up-00
                                                         :ARG0 c16-13
                                                         :mode imperative)
                                             :op2 (c16-1 / shoot-02
                                                         :ARG0 c16-13
                                                         :polarity -
                                                         :mode imperative)))
                    :ARG1-of (c16-6 / instead-of-91)))

# ::snt they wont shoot them that way, as they might with an approach of crowd.
# ::tokens ["they", "wo", "nt", "shoot", "them", "that", "way", ",", "as", "they", "might", "with", "an", "approach", "of", "crowd", "."]
# ::lemmas ["they", "will", "not", "shoot", "they", "that", "way", ",", "as", "they", "might", "with", "an", "approach", "of", "crowd", "."]
(c17-7 / shoot-02
       :ARG0 (c17-8 / they)
       :ARG1 (c17-6 / they)
       :manner (c17-0 / way
                      :mod (c17-2 / that))
       :ARG1-of (c17-4 / resemble-01
                       :ARG2 (c17-3 / possible-01
                                    :ARG1 (c17-1 / shoot-02
                                                 :ARG0 c17-8
                                                 :manner (c17-9 / approach-01
                                                                :ARG1 (c17-5 / crowd)))))
       :polarity -)

# ::snt get some free stuff
# ::tokens ["get", "some", "free", "stuff"]
# ::lemmas ["get", "some", "free", "stuff"]
(c18-3 / get-01
       :ARG0 (c18-0 / you)
       :ARG1 (c18-4 / stuff
                    :ARG1-of (c18-1 / free-03)
                    :quant (c18-2 / some))
       :mode imperative)

# ::snt I know damn well police isn't going to fire upon all those people with their hands up?
# ::tokens ["I", "know", "damn", "well", "police", "is", "n't", "going", "to", "fire", "upon", "all", "those", "people", "with", "their", "hands", "up", "?"]
# ::lemmas ["i", "know", "damn", "well", "police", "be", "not", "go", "to", "fire", "upon", "all", "those", "people", "with", "their", "hand", "up", "?"]
(c19-10 / know-01
        :ARG0 (c19-5 / i)
        :ARG1 (c19-2 / fire-01
                     :ARG0 (c19-7 / police)
                     :destination (c19-11 / person
                                          :mod (c19-12 / all)
                                          :mod (c19-9 / that)
                                          :ARG1-of (c19-4 / arm-01
                                                          :ARG2 (c19-3 / up))
                                          :part (c19-0 / hand))
                     :polarity (c19-6 / amr-unknown)
                     :mod (c19-1 / well
                                 :degree (c19-8 / damn))
                     :polarity -))
