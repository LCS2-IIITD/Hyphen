# ::snt lol read my heading. I don't concern myself with your opinion. Your a sheep.
# ::tokens ["lol", "read", "my", "heading", ".", "I", "do", "n't", "concern", "myself", "with", "your", "opinion", ".", "Your", "a", "sheep", "."]
# ::lemmas ["lol", "read", "my", "heading", ".", "i", "do", "not", "concern", "myself", "with", "your", "opinion", ".", "your", "a", "sheep", "."]
(c1-3 / multi-sentence
      :snt1 (c1-6 / read-01
                  :ARG0 (c1-1 / you)
                  :ARG1 (c1-0 / heading
                              :poss (c1-5 / i))
                  :manner (c1-2 / laugh-01
                                :ARG0 c1-5
                                :manner (c1-9 / loud))
                  :mode expressive)
      :snt2 (c1-7 / concern-01
                  :ARG0 (c1-8 / i
                              :ARG1-of c1-7)
                  :ARG2 (c1-11 / thing
                               :ARG1-of (c1-4 / opine-01
                                              :ARG0 (c1-12 / you)))
                  :polarity -)
      :snt3 (c1-10 / sheep
                   :domain c1-12))

# ::snt They killed themselves, Thugs are thugs whatever color they are.
# ::tokens ["They", "killed", "themselves", ",", "Thugs", "are", "thugs", "whatever", "color", "they", "are", "."]
# ::lemmas ["they", "kill", "themselves", ",", "thug", "be", "thug", "whatever", "color", "they", "be", "."]
(c2-5 / and
      :op1 (c2-0 / kill-01
                 :ARG0 (c2-4 / they
                             :ARG1-of c2-0))
      :op2 (c2-3 / thug
                 :domain c2-3)
      :ARG1-of (c2-1 / regardless-91
                     :ARG2 (c2-2 / color
                                 :domain c2-3)))

# ::snt if the officer did his job he would be arrested not murdered. Still the point.
# ::tokens ["if", "the", "officer", "did", "his", "job", "he", "would", "be", "arrested", "not", "murdered", ".", "Still", "the", "point", "."]
# ::lemmas ["if", "the", "officer", "do", "his", "job", "he", "would", "be", "arrest", "not", "murder", ".", "still", "the", "point", "."]
(c3-1 / multi-sentence
      :snt1 (c3-8 / arrest-01
                  :ARG1 (c3-2 / officer)
                  :condition (c3-4 / do-02
                                   :ARG0 c3-2
                                   :ARG1 (c3-0 / job
                                               :poss c3-2))
                  :ARG1-of (c3-5 / contrast-01
                                 :ARG2 (c3-3 / murder-01
                                             :ARG1 c3-2
                                             :polarity -)))
      :snt2 (c3-6 / point-03
                  :mod (c3-7 / still)))

# ::snt you're one sick racist bitch
# ::tokens ["you", "'re", "one", "sick", "racist", "bitch"]
# ::lemmas ["you", "be", "one", "sick", "racist", "bitch"]
(c4-3 / bitch
      :domain (c4-1 / you)
      :mod (c4-2 / racist)
      :ARG1-of (c4-0 / sick-02))

# ::snt James Holmes is still alive. So is the guy who shot a congresswomen in Az.
# ::tokens ["James", "Holmes", "is", "still", "alive", ".", "So", "is", "the", "guy", "who", "shot", "a", "congresswomen", "in", "Az", "."]
# ::lemmas ["James", "Holmes", "be", "still", "alive", ".", "so", "be", "the", "guy", "who", "shoot", "a", "congresswoman", "in", "Az", "."]
(c5-3 / multi-sentence
      :snt1 (c5-2 / live-01
                  :ARG0 (c5-8 / person
                              :name (c5-6 / name
                                          :op1 "James"
                                          :op2 "Holmes"))
                  :mod (c5-13 / still))
      :snt2 (c5-12 / live-01
                   :ARG0 (c5-11 / guy
                                :ARG0-of (c5-5 / shoot-02
                                               :ARG1 (c5-1 / woman
                                                           :ARG0-of (c5-0 / have-org-role-91
                                                                          :ARG1 (c5-9 / government-organization
                                                                                      :name (c5-7 / name
                                                                                                  :op1 "Congress"))))
                                               :location (c5-4 / state
                                                               :name (c5-10 / name
                                                                            :op1 "Az"))))))

# ::snt no I'm sure the violent felon put his hands right up and the evil policeman after yrs of service decided to kill fun!
# ::tokens ["no", "I", "'m", "sure", "the", "violent", "felon", "put", "his", "hands", "right", "up", "and", "the", "evil", "policeman", "after", "yrs", "of", "service", "decided", "to", "kill", "fun", "!"]
# ::lemmas ["no", "i", "be", "sure", "the", "violent", "felon", "put", "his", "hand", "right", "up", "and", "the", "evil", "policeman", "after", "yrs", "of", "service", "decide", "to", "kill", "fun", "!"]
(c6-13 / sure-02
       :ARG0 (c6-7 / i)
       :ARG1 (c6-17 / and
                    :op1 (c6-10 / put-01
                                :ARG0 (c6-2 / felon
                                            :mod (c6-9 / violent)
                                            :part (c6-0 / hand
                                                        :ARG1-of c6-10))
                                :ARG2 (c6-4 / up
                                            :mod (c6-11 / right)))
                    :op2 (c6-12 / decide-01
                                :ARG0 (c6-16 / policeman
                                             :mod (c6-5 / evil))
                                :ARG1 (c6-15 / kill-01
                                             :ARG0 c6-16
                                             :ARG1 (c6-8 / fun-01))
                                :time (c6-6 / after
                                            :quant (c6-3 / multiple
                                                         :op1 (c6-14 / temporal-quantity
                                                                     :unit (c6-1 / year)
                                                                     :quant 1))))))

# ::snt That is the victim man handling the clerk. The SAME clothes and shoes. Not saying its ok to murder but everything...
# ::tokens ["That", "is", "the", "victim", "man", "handling", "the", "clerk", ".", "The", "SAME", "clothes", "and", "shoes", ".", "Not", "saying", "its", "ok", "to", "murder", "but", "everything", "..."]
# ::lemmas ["that", "be", "the", "victim", "man", "handle", "the", "clerk", ".", "the", "same", "clothe", "and", "shoe", ".", "not", "say", "its", "ok", "to", "murder", "but", "everything", "..."]
(c7-2 / multi-sentence
      :snt1 (c7-8 / man
                  :ARG1-of (c7-7 / victimize-01)
                  :ARG0-of (c7-0 / handle-01
                                 :ARG1 (c7-10 / clerk))
                  :domain (c7-13 / that))
      :snt2 (c7-12 / same-01
                   :ARG1 (c7-14 / and
                                :op1 (c7-9 / clothes)
                                :op2 (c7-5 / shoe)))
      :snt3 (c7-11 / contrast-01
                   :ARG1 (c7-1 / say-01
                               :ARG1 (c7-4 / okay-04
                                           :ARG1 (c7-3 / murder-01))
                               :polarity -)
                   :ARG2 (c7-6 / everything)))

# ::snt is that Mike Brown? the guy in these pics looks a lot bigger than the pics of Mike Brown in prior still photos released?
# ::tokens ["is", "that", "Mike", "Brown", "?", "the", "guy", "in", "these", "pics", "looks", "a", "lot", "bigger", "than", "the", "pics", "of", "Mike", "Brown", "in", "prior", "still", "photos", "released", "?"]
# ::lemmas ["be", "that", "Mike", "Brown", "?", "the", "guy", "in", "these", "pic", "look", "a", "lot", "big", "than", "the", "pic", "of", "Mike", "Brown", "in", "prior", "still", "photo", "release", "?"]
(c9-0 / multi-sentence
      :snt1 (c9-1 / person
                  :name (c9-10 / name
                               :op1 "Mike"
                               :op2 "Brown")
                  :domain (c9-18 / that)
                  :polarity (c9-4 / amr-unknown))
      :snt2 (c9-6 / look-02
                  :ARG0 (c9-13 / guy
                               :location (c9-3 / pic
                                               :mod (c9-16 / this)))
                  :ARG1 (c9-8 / big
                              :ARG2-of (c9-5 / have-degree-91
                                             :ARG1 c9-13
                                             :ARG3 (c9-11 / more
                                                          :quant (c9-17 / lot))
                                             :ARG4 (c9-7 / picture
                                                         :topic c9-1
                                                         :time (c9-14 / prior
                                                                      :op1 (c9-12 / release-01
                                                                                  :ARG1 (c9-9 / photo
                                                                                              :mod (c9-2 / still)))))))
                  :polarity (c9-15 / amr-unknown)))

# ::snt Call me "dumb" all you want. Just realize that probably makes your tawdry, feeble-minded ass stupid (at best) in comparison.
# ::tokens ["Call", "me", "\"", "dumb", "\"", "all", "you", "want", ".", "Just", "realize", "that", "probably", "makes", "your", "tawdry", ",", "feeble", "-", "minded", "ass", "stupid", "(", "at", "best", ")", "in", "comparison", "."]
# ::lemmas ["call", "i", "\"", "dumb", "\"", "all", "you", "want", ".", "just", "realize", "that", "probably", "make", "your", "tawdry", ",", "feeble", "-", "minded", "ass", "stupid", "(", "at", "well", ")", "in", "comparison", "."]
(c10-1 / multi-sentence
       :snt1 (c10-17 / call-01
                     :ARG0 (c10-16 / you)
                     :ARG1 (c10-14 / i)
                     :ARG2 (c10-3 / dumb)
                     :ARG1-of (c10-12 / want-01
                                      :ARG0 c10-16
                                      :degree (c10-6 / all))
                     :mode imperative)
       :snt2 (c10-11 / realize-01
                     :ARG0 (c10-18 / you)
                     :ARG1 (c10-2 / probable
                                  :domain (c10-10 / make-02
                                                  :ARG0 (c10-19 / that)
                                                  :ARG1 (c10-5 / stupid
                                                               :domain (c10-13 / ass
                                                                               :part-of c10-18
                                                                               :mod (c10-15 / tawdry)
                                                                               :part (c10-7 / mind
                                                                                            :mod (c10-8 / feeble)))
                                                               :ARG1-of (c10-4 / compare-01
                                                                               :ARG2 c10-13))
                                                  :degree (c10-9 / at-best)))
                     :mod (c10-0 / just)
                     :mode imperative))

# ::snt Are there reports of the officer receiving injuries?
# ::tokens ["Are", "there", "reports", "of", "the", "officer", "receiving", "injuries", "?"]
# ::lemmas ["be", "there", "report", "of", "the", "officer", "receive", "injury", "?"]
(c11-1 / report-01
       :polarity (c11-3 / amr-unknown)
       :ARG1 (c11-2 / injure-01
                    :ARG1 (c11-0 / officer)))

# ::snt you do a lot of bitching and whining, but never make any points.
# ::tokens ["you", "do", "a", "lot", "of", "bitching", "and", "whining", ",", "but", "never", "make", "any", "points", "."]
# ::lemmas ["you", "do", "a", "lot", "of", "bitching", "and", "whining", ",", "but", "never", "make", "any", "point", "."]
(c12-7 / contrast-01
       :ARG1 (c12-6 / do-02
                    :ARG0 (c12-0 / you)
                    :ARG1 (c12-8 / and
                                 :op1 (c12-3 / bitch-01
                                             :ARG0 c12-0)
                                 :op2 (c12-1 / whine-01
                                             :ARG0 c12-0)
                                 :quant (c12-2 / lot)))
       :ARG2 (c12-5 / point-04
                    :ARG0 c12-0
                    :time (c12-4 / ever)
                    :polarity -))

# ::snt Waiting to see an outpouring of sympathy for the owner of the store that was attacked. Not holding my breath.
# ::tokens ["Waiting", "to", "see", "an", "outpouring", "of", "sympathy", "for", "the", "owner", "of", "the", "store", "that", "was", "attacked", ".", "Not", "holding", "my", "breath", "."]
# ::lemmas ["wait", "to", "see", "an", "outpouring", "of", "sympathy", "for", "the", "owner", "of", "the", "store", "that", "be", "attack", ".", "not", "hold", "my", "breath", "."]
(c14-3 / multi-sentence
       :snt1 (c14-1 / wait-01
                    :ARG1 (c14-8 / i)
                    :ARG2 (c14-11 / see-01
                                  :ARG0 c14-8
                                  :ARG1 (c14-6 / outpour-00
                                               :ARG1 (c14-7 / sympathy
                                                            :beneficiary (c14-9 / person
                                                                                :ARG0-of (c14-2 / own-01
                                                                                                :ARG1 (c14-4 / store
                                                                                                             :ARG1-of (c14-12 / attack-01))))))))
       :snt2 (c14-0 / hold-01
                    :ARG0 (c14-10 / i)
                    :ARG1 (c14-5 / breathe-01
                                 :ARG0 c14-10)
                    :polarity -))

# ::snt Aaaaand this
# ::tokens ["Aaaaand", "this"]
# ::lemmas ["Aaaaand", "this"]
(c15-1 / and
       :op2 (c15-0 / this))

# ::snt :oh well that just justifies everything doesn't it.
# ::tokens [":", "oh", "well", "that", "just", "justifies", "everything", "does", "n't", "it", "."]
# ::lemmas [":", "oh", "well", "that", "just", "justify", "everything", "do", "not", "it", "."]
(c16-0 / justify-01
       :ARG0 (c16-3 / that)
       :ARG1 (c16-1 / everything)
       :mod (c16-4 / just)
       :ARG1-of (c16-2 / request-confirmation-91))

# ::snt Release of the dispatch recordings might come out as well.
# ::tokens ["Release", "of", "the", "dispatch", "recordings", "might", "come", "out", "as", "well", "."]
# ::lemmas ["release", "of", "the", "dispatch", "recording", "might", "come", "out", "as", "well", "."]
(c17-1 / possible-01
       :ARG1 (c17-3 / release-01
                    :ARG1 (c17-0 / record-01
                                 :ARG1 (c17-2 / dispatch-01))
                    :mod (c17-4 / as-well)))

# ::snt YES, it was JUSTIFIED
# ::tokens ["YES", ",", "it", "was", "JUSTIFIED"]
# ::lemmas ["yes", ",", "it", "be", "JUSTIFIED"]
(c18-0 / justify-01
       :ARG0 (c18-1 / it))

# ::snt my brother played, I'm familiar with their size
# ::tokens ["my", "brother", "played", ",", "I", "'m", "familiar", "with", "their", "size"]
# ::lemmas ["my", "brother", "play", ",", "i", "be", "familiar", "with", "their", "size"]
(c19-8 / and
       :op1 (c19-4 / play-01
                   :ARG0 (c19-7 / person
                                :ARG0-of (c19-0 / have-rel-role-91
                                                :ARG1 (c19-3 / i)
                                                :ARG2 (c19-2 / brother))))
       :op2 (c19-1 / familiarize-01
                   :ARG1 c19-3
                   :ARG2 (c19-5 / size
                                :poss (c19-6 / they))))

# ::snt That person does not look . It actually looks a lot like a looter with their face covered that was photographed by
# ::tokens ["That", "person", "does", "not", "look", ".", "It", "actually", "looks", "a", "lot", "like", "a", "looter", "with", "their", "face", "covered", "that", "was", "photographed", "by"]
# ::lemmas ["that", "person", "do", "not", "look", ".", "it", "actually", "look", "a", "lot", "like", "a", "looter", "with", "their", "face", "cover", "that", "be", "photograph", "by"]
(c20-2 / multi-sentence
       :snt1 (c20-1 / look-02
                    :ARG0 (c20-7 / person
                                 :mod (c20-11 / that))
                    :polarity -)
       :snt2 (c20-9 / look-02
                    :ARG0 (c20-6 / it)
                    :ARG1 (c20-12 / person
                                  :ARG0-of (c20-0 / loot-01)
                                  :part (c20-3 / face
                                               :ARG1-of (c20-8 / cover-02)
                                               :part-of c20-12)
                                  :part-of (c20-4 / photograph-01
                                                  :ARG0 (c20-10 / person)))
                    :ARG1-of (c20-13 / actual-02)
                    :degree (c20-5 / lot)))

# ::snt I think is saying: tough guy in pic is low life scum whether it's the late Mr. Brown or not
# ::tokens ["I", "think", "is", "saying", ":", "tough", "guy", "in", "pic", "is", "low", "life", "scum", "whether", "it", "'s", "the", "late", "Mr.", "Brown", "or", "not"]
# ::lemmas ["i", "think", "be", "say", ":", "tough", "guy", "in", "pic", "be", "low", "life", "scum", "whether", "it", "be", "the", "late", "Mr.", "Brown", "or", "not"]
(c21-11 / think-01
        :ARG0 (c21-4 / i)
        :ARG1 (c21-10 / say-01
                      :ARG1 (c21-3 / scum
                                   :ARG1-of (c21-0 / low-life-00)
                                   :domain (c21-8 / guy
                                                  :location (c21-6 / pic))
                                   :ARG1-of (c21-7 / regardless-91
                                                   :ARG2 (c21-2 / or
                                                                :op1 (c21-12 / person
                                                                             :name (c21-5 / name
                                                                                          :op1 "Mr."
                                                                                          :op2 "Brown")
                                                                             :ARG1-of (c21-9 / late-03))
                                                                :op2 (c21-1 / person
                                                                            :name c21-5
                                                                            :polarity -
                                                                            :op1 "Mr."
                                                                            :op2 "Brown"))))))

# ::snt low life scum I think
# ::tokens ["low", "life", "scum", "I", "think"]
# ::lemmas ["low", "life", "scum", "i", "think"]
(c22-4 / think-01
       :ARG0 (c22-1 / i)
       :ARG1 (c22-3 / scum
                    :mod (c22-0 / life
                                :ARG1-of (c22-2 / low-04))))

# ::snt yes. I like your points. "Your a racist! your a racist!" Grow a brain.
# ::tokens ["yes", ".", "I", "like", "your", "points", ".", "\"", "Your", "a", "racist", "!", "your", "a", "racist", "!", "\"", "Grow", "a", "brain", "."]
# ::lemmas ["yes", ".", "i", "like", "your", "point", ".", "\"", "your", "a", "racist", "!", "your", "a", "racist", "!", "\"", "grow", "a", "brain", "."]
(c23-2 / multi-sentence
       :snt1 (c23-0 / yes)
       :snt2 (c23-1 / like-01
                    :ARG0 (c23-5 / i)
                    :ARG1 (c23-7 / point-04
                                 :ARG0 (c23-11 / you)))
       :snt3 (c23-12 / and
                     :op1 (c23-8 / racist
                                 :domain (c23-3 / you))
                     :op2 (c23-6 / racist
                                 :domain c23-3))
       :snt4 (c23-9 / grow-03
                    :ARG0 (c23-10 / you
                                  :part (c23-4 / brain
                                               :ARG1-of c23-9))
                    :mode imperative))

# ::snt race doesn't matter to me nor should it matter to this case. You are the racist. Facts don't matter u Just blindly follow the herd.
# ::tokens ["race", "does", "n't", "matter", "to", "me", "nor", "should", "it", "matter", "to", "this", "case", ".", "You", "are", "the", "racist", ".", "Facts", "do", "n't", "matter", "u", "Just", "blindly", "follow", "the", "herd", "."]
# ::lemmas ["race", "do", "not", "matter", "to", "i", "nor", "should", "it", "matter", "to", "this", "case", ".", "you", "be", "the", "racist", ".", "fact", "do", "not", "matter", "u", "just", "blindly", "follow", "the", "herd", "."]
(c24-4 / multi-sentence
       :snt1 (c24-16 / and
                     :op1 (c24-11 / matter-01
                                  :ARG1 (c24-12 / race)
                                  :ARG2 (c24-8 / i)
                                  :polarity -)
                     :op2 (c24-9 / recommend-01
                                 :ARG1 (c24-3 / matter-01
                                              :ARG1 c24-12
                                              :ARG2 (c24-13 / case-04
                                                            :ARG1 (c24-15 / this)))
                                 :polarity -))
       :snt2 (c24-7 / racist
                    :domain (c24-1 / you))
       :snt3 (c24-14 / matter-01
                     :ARG1 (c24-5 / fact)
                     :ARG2 c24-1
                     :polarity -)
       :snt4 (c24-10 / follow-02
                     :ARG0 c24-1)
       :ARG1 (c24-0 / herd)
       :manner (c24-6 / blind)
       :mod (c24-2 / just))

# ::snt then what's the relevance?
# ::tokens ["then", "what", "'s", "the", "relevance", "?"]
# ::lemmas ["then", "what", "be", "the", "relevance", "?"]
(c25-0 / relevant-01
       :ARG1 (c25-2 / amr-unknown)
       :time (c25-1 / then))

# ::snt Gentle Giant, RIGHT. Go arrest that partner he had too.
# ::tokens ["Gentle", "Giant", ",", "RIGHT", ".", "Go", "arrest", "that", "partner", "he", "had", "too", "."]
# ::lemmas ["Gentle", "Giant", ",", "RIGHT", ".", "go", "arrest", "that", "partner", "he", "have", "too", "."]
(c26-3 / multi-sentence
       :snt1 (c26-7 / right-06
                    :ARG2 (c26-6 / person
                                 :name (c26-5 / name
                                              :op1 "Gentle"
                                              :op2 "Giant")))
       :snt2 (c26-8 / go-05
                    :ARG0 (c26-1 / you)
                    :ARG1 (c26-12 / arrest-01
                                  :ARG0 c26-1
                                  :ARG1 (c26-11 / person
                                                :ARG0-of (c26-0 / have-rel-role-91
                                                                :ARG1 (c26-2 / he)
                                                                :ARG2 (c26-4 / partner))
                                                :mod (c26-10 / that)
                                                :mod (c26-9 / too)))
                    :mode imperative))

# ::snt doesn't excuse murder
# ::tokens ["does", "n't", "excuse", "murder"]
# ::lemmas ["do", "not", "excuse", "murder"]
(c27-0 / excuse-01
       :ARG2 (c27-1 / murder-01)
       :polarity -)

# ::snt If this is real, I feel one of those moments coming on both sides, the neighborhood and the police.
# ::tokens ["If", "this", "is", "real", ",", "I", "feel", "one", "of", "those", "moments", "coming", "on", "both", "sides", ",", "the", "neighborhood", "and", "the", "police", "."]
# ::lemmas ["if", "this", "be", "real", ",", "i", "feel", "one", "of", "those", "moment", "come", "on", "both", "side", ",", "the", "neighborhood", "and", "the", "police", "."]
(c28-0 / feel-01
       :ARG0 (c28-3 / i)
       :ARG1 (c28-7 / come-01
                    :ARG1 (c28-1 / moment
                                 :ARG1-of (c28-8 / include-91
                                                 :ARG2 (c28-5 / moment
                                                              :mod (c28-12 / that))))
                    :ARG4 (c28-13 / and
                                  :op1 (c28-11 / side
                                               :mod (c28-2 / both))
                                  :op2 (c28-4 / neighborhood)
                                  :op3 (c28-6 / police)))
       :condition (c28-9 / real-04
                         :ARG1 (c28-10 / this)))

# ::snt I haven't but I just think it turns into a he said he/she said without them.
# ::tokens ["I", "have", "n't", "but", "I", "just", "think", "it", "turns", "into", "a", "he", "said", "he", "/", "she", "said", "without", "them", "."]
# ::lemmas ["i", "have", "not", "but", "i", "just", "think", "it", "turn", "into", "a", "he", "say", "he", "/", "she", "say", "without", "they", "."]
(c30-9 / contrast-01
       :ARG1 (c30-4 / event
                    :mod (c30-7 / i)
                    :polarity -)
       :ARG2 (c30-13 / think-01
                     :ARG0 c30-7
                     :ARG1 (c30-11 / turn-02
                                   :ARG1 (c30-10 / it)
                                   :ARG2 (c30-12 / say-01
                                                 :ARG0 (c30-5 / slash
                                                              :op1 (c30-0 / he)
                                                              :op2 (c30-2 / she))
                                                 :ARG1 (c30-8 / thing
                                                              :ARG1-of (c30-3 / say-01
                                                                              :ARG0 c30-5))
                                                 :manner (c30-14 / accompany-01
                                                                 :ARG0 (c30-6 / they)
                                                                 :polarity -)))
                     :mod (c30-1 / just)))

# ::snt I didn't head you
# ::tokens ["I", "did", "n't", "head", "you"]
# ::lemmas ["i", "do", "not", "head", "you"]
(c31-0 / head-01
       :ARG0 (c31-2 / i)
       :ARG1 (c31-1 / you)
       :polarity -)

# ::snt poor baby "he din do nuffin" lol
# ::tokens ["poor", "baby", "\"", "he", "din", "do", "nuffin", "\"", "lol"]
# ::lemmas ["poor", "baby", "\"", "he", "din", "do", "nuffin", "\"", "lol"]
(c32-8 / say-01
       :ARG0 (c32-2 / baby
                    :mod (c32-5 / poor))
       :ARG1 (c32-6 / do-02
                    :ARG0 (c32-0 / he)
                    :ARG1 (c32-4 / nuffin)
                    :polarity -)
       :ARG2-of (c32-1 / laugh-01
                       :ARG0 (c32-3 / i)
                       :manner (c32-7 / loud)
                       :mode expressive))

# ::snt check your facts and the pics from what he was wearing when he was gunned down, smh
# ::tokens ["check", "your", "facts", "and", "the", "pics", "from", "what", "he", "was", "wearing", "when", "he", "was", "gunned", "down", ",", "smh"]
# ::lemmas ["check", "your", "fact", "and", "the", "pic", "from", "what", "he", "be", "wear", "when", "he", "be", "gun", "down", ",", "smh"]
(c33-6 / check-01
       :ARG0 (c33-1 / you)
       :ARG1 (c33-9 / and
                    :op1 (c33-3 / fact
                                :poss c33-1)
                    :op2 (c33-5 / picture
                                :source (c33-8 / thing
                                               :ARG1-of (c33-2 / wear-01
                                                               :ARG0 (c33-0 / he)
                                                               :time (c33-7 / shoot-down-05
                                                                            :ARG1 c33-0)))))
       :mod (c33-4 / smh
                   :mode expressive)
       :mode imperative)

# ::snt I said teen not child but again, how is the pic relevant?
# ::tokens ["I", "said", "teen", "not", "child", "but", "again", ",", "how", "is", "the", "pic", "relevant", "?"]
# ::lemmas ["i", "say", "teen", "not", "child", "but", "again", ",", "how", "be", "the", "pic", "relevant", "?"]
(c34-4 / contrast-01
       :ARG1 (c34-6 / say-01
                    :ARG0 (c34-1 / i)
                    :ARG1 (c34-3 / child
                                 :domain (c34-7 / teen)
                                 :polarity -))
       :ARG2 (c34-5 / relevant-01
                    :ARG1 (c34-2 / pic)
                    :manner (c34-8 / amr-unknown)
                    :mod (c34-0 / again)))

# ::snt Wait, so why didn't we shoot down the ARMED (white) men who shot up theaters and schools?
# ::tokens ["Wait", ",", "so", "why", "did", "n't", "we", "shoot", "down", "the", "ARMED", "(", "white", ")", "men", "who", "shot", "up", "theaters", "and", "schools", "?"]
# ::lemmas ["wait", ",", "so", "why", "do", "not", "we", "shoot", "down", "the", "ARMED", "(", "white", ")", "man", "who", "shoot", "up", "theater", "and", "school", "?"]
(c35-7 / infer-01
       :ARG1 (c35-13 / amr-unknown
                     :ARG0-of (c35-10 / cause-01
                                      :ARG1 (c35-11 / shoot-down-05
                                                    :ARG0 (c35-0 / we)
                                                    :ARG1 (c35-3 / man
                                                                 :ARG1-of (c35-6 / arm-01)
                                                                 :ARG1-of (c35-8 / white-02)
                                                                 :ARG0-of (c35-5 / shoot-down-05
                                                                                 :ARG1 (c35-9 / and
                                                                                              :op1 (c35-12 / theater)
                                                                                              :op2 (c35-2 / school))))
                                                    :polarity -)))
       :ARG2 (c35-4 / wait-01
                    :ARG1 (c35-1 / you)
                    :mode imperative))

# ::snt JUSTICE FOR THE POLICE DEPT. they were doing their job &amp; protecting your sorry butts.
# ::tokens ["JUSTICE", "FOR", "THE", "POLICE", "DEPT", ".", "they", "were", "doing", "their", "job", "&", "amp", ";", "protecting", "your", "sorry", "butts", "."]
# ::lemmas ["justice", "for", "the", "police", "dept", ".", "they", "be", "do", "their", "job", "&", "amp", ";", "protect", "your", "sorry", "butts", "."]
(c36-3 / multi-sentence
       :snt2 (c36-10 / and
                     :op1 (c36-7 / do-02
                                 :ARG0 (c36-9 / they)
                                 :ARG1 (c36-0 / job
                                              :poss c36-9))
                     :op2 (c36-6 / protect-01
                                 :ARG0 c36-9
                                 :ARG1 (c36-4 / butt
                                              :part-of (c36-1 / you)
                                              :ARG1-of (c36-8 / sorry-01))))
       :snt1 (c36-2 / law
                    :name (c36-5 / name
                                 :op1 "Justices"
                                 :op2 "for"
                                 :op3 "the"
                                 :op4 "POLICE")))

# ::snt I see, and I'm sure she saw what she did. She did come in after the start. However, the store vid clearly shows....
# ::tokens ["I", "see", ",", "and", "I", "'m", "sure", "she", "saw", "what", "she", "did", ".", "She", "did", "come", "in", "after", "the", "start", ".", "However", ",", "the", "store", "vid", "clearly", "shows", "...."]
# ::lemmas ["i", "see", ",", "and", "i", "be", "sure", "she", "see", "what", "she", "do", ".", "she", "do", "come", "in", "after", "the", "start", ".", "however", ",", "the", "store", "vid", "clearly", "show", "...."]
(c37-0 / multi-sentence
       :snt1 (c37-7 / and
                    :op1 (c37-6 / see-01
                                :ARG0 (c37-12 / i))
                    :op2 (c37-10 / sure-02
                                 :ARG0 (c37-13 / i)
                                 :ARG1 (c37-16 / see-01
                                               :ARG0 (c37-9 / she)
                                               :ARG1 (c37-18 / thing
                                                             :ARG1-of (c37-4 / do-02
                                                                             :ARG0 c37-9)))))
       :snt2 (c37-17 / come-01
                     :ARG1 (c37-15 / she)
                     :time (c37-11 / after
                                   :op1 (c37-1 / start-01)))
       :snt3 (c37-5 / contrast-01
                    :ARG2 (c37-8 / show-01
                                 :ARG0 (c37-3 / video
                                              :mod (c37-2 / store))
                                 :ARG1-of (c37-14 / clear-06))))

# ::snt good piece of evidence to bad the officer was still wrong for murdering a strong armed robbery
# ::tokens ["good", "piece", "of", "evidence", "to", "bad", "the", "officer", "was", "still", "wrong", "for", "murdering", "a", "strong", "armed", "robbery"]
# ::lemmas ["good", "piece", "of", "evidence", "to", "bad", "the", "officer", "be", "still", "wrong", "for", "murder", "a", "strong", "armed", "robbery"]
(c38-11 / and
        :op1 (c38-7 / piece
                    :ARG1-of (c38-9 / good-02)
                    :consist-of (c38-4 / evidence-01))
        :op2 (c38-0 / wrong-04
                    :ARG1 (c38-3 / officer)
                    :ARG2 (c38-1 / murder-01
                                 :ARG0 c38-3
                                 :ARG1 (c38-8 / rob-01
                                              :ARG0 c38-3
                                              :ARG1-of (c38-6 / arm-01)
                                              :ARG1-of (c38-10 / strong-02)))
                    :mod (c38-5 / still))
        :ARG1-of (c38-2 / bad-07))

# ::snt are you justifying the murder of an unarmed ADULT?
# ::tokens ["are", "you", "justifying", "the", "murder", "of", "an", "unarmed", "ADULT", "?"]
# ::lemmas ["be", "you", "justify", "the", "murder", "of", "an", "unarmed", "adult", "?"]
(c39-0 / justify-01
       :polarity (c39-6 / amr-unknown)
       :ARG0 (c39-1 / you)
       :ARG1 (c39-2 / murder-01
                    :ARG1 (c39-5 / person
                                 :ARG1-of (c39-4 / innocent-01)
                                 :ARG1-of (c39-3 / arm-01
                                                 :polarity -))))

# ::snt red hat?
# ::tokens ["red", "hat", "?"]
# ::lemmas ["red", "hat", "?"]
(c40-0 / hat
       :polarity (c40-2 / amr-unknown)
       :ARG1-of (c40-1 / red-02))

# ::snt what point are you making about the photo?
# ::tokens ["what", "point", "are", "you", "making", "about", "the", "photo", "?"]
# ::lemmas ["what", "point", "be", "you", "make", "about", "the", "photo", "?"]
(c41-1 / point-04
       :ARG0 (c41-0 / you)
       :ARG1 (c41-2 / photograph-01)
       :ARG2 (c41-3 / amr-unknown))

# ::snt you are saying that's mike brown in the picture? It's not. Two events unconnected. What's your point?
# ::tokens ["you", "are", "saying", "that", "'s", "mike", "brown", "in", "the", "picture", "?", "It", "'s", "not", ".", "Two", "events", "unconnected", ".", "What", "'s", "your", "point", "?"]
# ::lemmas ["you", "be", "say", "that", "be", "mike", "brown", "in", "the", "picture", "?", "it", "be", "not", ".", "Two", "event", "unconnected", ".", "what", "be", "your", "point", "?"]
(c42-2 / multi-sentence
       :snt1 (c42-11 / say-01
                     :ARG0 (c42-1 / you)
                     :ARG1 (c42-4 / be-located-at-91
                                  :ARG1 (c42-8 / person
                                               :name (c42-7 / name
                                                            :op1 "Mike"
                                                            :op2 "Brown"))
                                  :ARG2 (c42-12 / picture)))
       :snt2 (c42-0 / have-polarity-91
                    :ARG1 (c42-6 / it)
                    :ARG2 -)
       :snt3 (c42-5 / event
                    :ARG1-of (c42-9 / connect-01
                                    :polarity -)
                    :quant 2)
       :snt4 (c42-3 / point-04
                    :ARG0 (c42-10 / you)
                    :ARG1 (c42-13 / amr-unknown)))

# ::snt A black cop shot Mr. Brown if he is charged (it will be racist) there will be more riots.
# ::tokens ["A", "black", "cop", "shot", "Mr.", "Brown", "if", "he", "is", "charged", "(", "it", "will", "be", "racist", ")", "there", "will", "be", "more", "riots", "."]
# ::lemmas ["a", "black", "cop", "shoot", "Mr.", "Brown", "if", "he", "be", "charge", "(", "it", "will", "be", "racist", ")", "there", "will", "be", "more", "riot", "."]
(c43-9 / and
       :op1 (c43-8 / shoot-02
                   :ARG0 (c43-6 / cop
                                :ARG1-of (c43-1 / black-05))
                   :ARG1 (c43-4 / person
                                :name (c43-3 / name
                                             :op1 "Mr."
                                             :op2 "Brown"))
                   :condition (c43-5 / charge-05
                                     :ARG1 c43-4
                                     :ARG2 (c43-7 / racism)))
       :op2 (c43-2 / riot-01
                   :quant (c43-0 / more)))

# ::snt He is large. In the store photos you have some prospective unlike the still photos.
# ::tokens ["He", "is", "large", ".", "In", "the", "store", "photos", "you", "have", "some", "prospective", "unlike", "the", "still", "photos", "."]
# ::lemmas ["he", "be", "large", ".", "in", "the", "store", "photo", "you", "have", "some", "prospective", "unlike", "the", "still", "photo", "."]
(c44-3 / multi-sentence
       :snt1 (c44-2 / large
                    :domain (c44-0 / he))
       :snt2 (c44-11 / have-03
                     :ARG0 (c44-1 / you)
                     :ARG1 (c44-7 / prospective
                                  :mod (c44-9 / some))
                     :location (c44-10 / photo
                                       :mod (c44-6 / store))
                     :ARG1-of (c44-8 / resemble-01
                                     :ARG2 (c44-5 / photo
                                                  :mod (c44-4 / still))
                                     :polarity -)))

# ::snt I'm looking for his read hat and his flip flops can you find them?
# ::tokens ["I", "'m", "looking", "for", "his", "read", "hat", "and", "his", "flip", "flops", "can", "you", "find", "them", "?"]
# ::lemmas ["i", "be", "look", "for", "his", "read", "hat", "and", "his", "flip", "flop", "can", "you", "find", "they", "?"]
(c45-3 / multi-sentence
       :snt1 (c45-2 / look-01
                    :ARG0 (c45-7 / i)
                    :ARG1 (c45-12 / and
                                  :op1 (c45-0 / hat
                                              :purpose (c45-11 / read-01)
                                              :poss (c45-4 / he))
                                  :op2 (c45-5 / flipflop
                                              :poss (c45-9 / he))))
       :snt2 (c45-10 / possible-01
                     :polarity (c45-6 / amr-unknown)
                     :ARG1 (c45-8 / find-01
                                  :ARG0 (c45-1 / you)
                                  :ARG1 c45-12)))

# ::snt In no cameras?? That's a shame. I see the cams as a form of protection for both parties.
# ::tokens ["In", "no", "cameras", "?", "?", "That", "'s", "a", "shame", ".", "I", "see", "the", "cams", "as", "a", "form", "of", "protection", "for", "both", "parties", "."]
# ::lemmas ["in", "no", "camera", "?", "?", "that", "be", "a", "shame", ".", "i", "see", "the", "cam", "as", "a", "form", "of", "protection", "for", "both", "party", "."]
(c46-1 / multi-sentence
       :snt1 (c46-8 / shame
                    :polarity (c46-10 / amr-unknown)
                    :domain (c46-7 / camera
                                   :polarity -))
       :snt2 (c46-3 / see-01
                    :ARG0 (c46-4 / i)
                    :ARG1 (c46-6 / camera)
                    :ARG2 (c46-0 / form
                                 :ARG0-of (c46-5 / protect-01
                                                 :ARG1 (c46-9 / party
                                                              :mod (c46-2 / both))))))

# ::snt Gentle giant.
# ::tokens ["Gentle", "giant", "."]
# ::lemmas ["gentle", "giant", "."]
(c47-1 / giant
       :ARG1-of (c47-0 / gentle-01))

# ::snt the officer did not stop him because the store incident so this is all actually void. Don't you think?
# ::tokens ["the", "officer", "did", "not", "stop", "him", "because", "the", "store", "incident", "so", "this", "is", "all", "actually", "void", ".", "Do", "n't", "you", "think", "?"]
# ::lemmas ["the", "officer", "do", "not", "stop", "he", "because", "the", "store", "incident", "so", "this", "be", "all", "actually", "void", ".", "do", "not", "you", "think", "?"]
(c48-2 / multi-sentence
       :snt1 (c48-12 / stop-01
                     :ARG0 (c48-3 / officer)
                     :ARG1 (c48-0 / he)
                     :ARG1-of (c48-10 / cause-01
                                      :ARG0 (c48-6 / incident
                                                   :mod (c48-4 / store)
                                                   :ARG0-of (c48-9 / cause-01
                                                                   :ARG1 (c48-7 / void-02
                                                                                :ARG1 (c48-13 / this
                                                                                              :mod (c48-14 / all))
                                                                                :ARG1-of (c48-5 / actual-02)))))
                     :polarity -)
       :snt2 (c48-11 / think-01
                     :polarity (c48-8 / amr-unknown)
                     :ARG0 (c48-1 / you)))

# ::snt this is mike brown stop lying and get your facts straight next time you insult another HUMANS life
# ::tokens ["this", "is", "mike", "brown", "stop", "lying", "and", "get", "your", "facts", "straight", "next", "time", "you", "insult", "another", "HUMANS", "life"]
# ::lemmas ["this", "be", "mike", "brown", "stop", "lie", "and", "get", "your", "fact", "straight", "next", "time", "you", "insult", "another", "HUMANS", "life"]
(c49-12 / say-01
        :ARG0 (c49-6 / i)
        :ARG1 (c49-14 / and
                      :op1 (c49-4 / stop-01
                                  :ARG0 (c49-9 / person
                                               :name (c49-7 / name
                                                            :op1 "Mike"
                                                            :op2 "Brown"))
                                  :ARG1 (c49-1 / lie-08
                                               :ARG0 c49-9)
                                  :mode imperative)
                      :op2 (c49-2 / straighten-01
                                  :ARG0 c49-9
                                  :ARG1 (c49-3 / fact
                                               :poss c49-9)
                                  :mode imperative)
                      :time (c49-10 / insult-01
                                    :ARG0 c49-9
                                    :ARG1 (c49-11 / life
                                                  :poss (c49-13 / person
                                                                :mod (c49-0 / human)
                                                                :mod (c49-5 / another)))
                                    :mod (c49-8 / next)))
        :ARG2 c49-9)

# ::snt Thanks for that. I want to see photos if they were taken. They should have been.
# ::tokens ["Thanks", "for", "that", ".", "I", "want", "to", "see", "photos", "if", "they", "were", "taken", ".", "They", "should", "have", "been", "."]
# ::lemmas ["thank", "for", "that", ".", "i", "want", "to", "see", "photo", "if", "they", "be", "take", ".", "they", "should", "have", "be", "."]
(c50-2 / multi-sentence
       :snt1 (c50-11 / thank-01
                     :ARG0 (c50-4 / i)
                     :ARG1 (c50-0 / you)
                     :ARG2 (c50-9 / that))
       :snt2 (c50-1 / want-01
                    :ARG0 (c50-8 / i)
                    :ARG1 (c50-10 / see-01
                                  :ARG0 c50-8
                                  :ARG1 (c50-6 / photo)
                                  :condition (c50-5 / take-01
                                                    :ARG1 c50-6)))
       :snt3 (c50-7 / recommend-01
                    :ARG1 (c50-3 / take-01
                                 :ARG1 c50-6)))
