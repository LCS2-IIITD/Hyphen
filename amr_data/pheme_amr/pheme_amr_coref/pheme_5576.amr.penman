# ::snt is an act of treason, root of all evils Pl.RT to wake ppl &amp; help curb
# ::tokens ["is", "an", "act", "of", "treason", ",", "root", "of", "all", "evils", "Pl", ".", "RT", "to", "wake", "ppl", "&", "amp", ";", "help", "curb"]
# ::lemmas ["be", "an", "act", "of", "treason", ",", "root", "of", "all", "evil", "pl", ".", "RT", "to", "wake", "ppl", "&", "amp", ";", "help", "curb"]
(c2-2 / multi-sentence
      :snt1 (c2-14 / act-02
                   :ARG1 (c2-4 / betray-01)
                   :ARG1-of (c2-10 / root-02
                                   :ARG2 (c2-6 / evil
                                               :mod (c2-7 / all))))
      :snt2 (c2-8 / and
                  :op1 (c2-1 / wake-01
                             :ARG1 (c2-12 / and
                                          :op1 (c2-9 / person
                                                     :ARG0-of (c2-13 / post-01
                                                                     :mod (c2-5 / original)))
                                          :op2 (c2-3 / person
                                                     :ARG0-of c2-13
                                                     :mod c2-5))))
      :op2 (c2-0 / help-01
                 :ARG1 (c2-11 / curb-01)))

# ::snt Fucking Muslims!All you can do is to kill people and fuck goats!
# ::tokens ["Fucking", "Muslims!All", "you", "can", "do", "is", "to", "kill", "people", "and", "fuck", "goats", "!"]
# ::lemmas ["Fucking", "Muslims!All", "you", "can", "do", "be", "to", "kill", "people", "and", "fuck", "goat", "!"]
(c3-4 / possible-01
      :ARG1 (c3-5 / do-02
                  :ARG0 (c3-0 / you)
                  :ARG1 (c3-9 / and
                              :op1 (c3-7 / kill-01
                                         :ARG0 c3-0
                                         :ARG1 (c3-8 / person))
                              :op2 (c3-1 / fuck-01
                                         :ARG0 c3-0
                                         :ARG1 (c3-6 / goat)))
                  :mod (c3-2 / all))
      :mod (c3-3 / fucking
                 :mode expressive))

# ::snt Ty so much
# ::tokens ["Ty", "so", "much"]
# ::lemmas ["ty", "so", "much"]
(c5-1 / person
      :name (c5-0 / name
                  :op1 "Ty")
      :degree (c5-2 / much
                    :degree (c5-3 / so)))

# ::snt : more people have fled from Sydney cafe where hostages are being held.
# ::tokens [":", "more", "people", "have", "fled", "from", "Sydney", "cafe", "where", "hostages", "are", "being", "held", "."]
# ::lemmas [":", "more", "people", "have", "flee", "from", "Sydney", "cafe", "where", "hostage", "be", "be", "hold", "."]
(c6-1 / flee-05
      :ARG0 (c6-4 / person
                  :quant (c6-2 / more))
      :ARG2 (c6-6 / cafe
                  :location (c6-5 / city
                                  :name (c6-3 / name
                                              :op1 "Sydney"))
                  :location-of (c6-0 / hold-01
                                     :ARG1 (c6-7 / hostage))))

# ::snt Let's hope for the best outcome!
# ::tokens ["Let", "'s", "hope", "for", "the", "best", "outcome", "!"]
# ::lemmas ["let", "us", "hope", "for", "the", "good", "outcome", "!"]
(c7-0 / hope-01
      :ARG0 (c7-1 / we)
      :ARG1 (c7-3 / outcome
                  :ARG1-of (c7-5 / have-degree-91
                                 :ARG2 (c7-4 / good-02
                                             :ARG1 c7-3)
                                 :ARG3 (c7-2 / most)))
      :mode imperative)

# ::snt I MADE THIS YOU B/C I LOVE YOU LISTEN!!!
# ::tokens ["I", "MADE", "THIS", "YOU", "B", "/", "C", "I", "LOVE", "YOU", "LISTEN", "!", "!", "!"]
# ::lemmas ["i", "make", "this", "YOU", "B", "/", "C", "i", "love", "YOU", "LISTEN", "!", "!", "!"]
(c8-2 / multi-sentence
      :snt1 (c8-5 / make-02
                  :ARG0 (c8-4 / i)
                  :ARG1 (c8-10 / this)
                  :ARG2 (c8-0 / you))
      :snt2 (c8-9 / say-01
                  :ARG0 (c8-7 / i)
                  :ARG1 (c8-1 / love-01
                              :ARG0 c8-7
                              :ARG1 (c8-8 / you
                                          :ARG2-of c8-9)))
      :snt3 (c8-6 / listen-01
                  :ARG0 (c8-3 / you)
                  :mode imperative))

# ::snt hope they kill the hostage taker..get rid of the plague
# ::tokens ["hope", "they", "kill", "the", "hostage", "taker", "..", "get", "rid", "of", "the", "plague"]
# ::lemmas ["hope", "they", "kill", "the", "hostage", "taker", "..", "get", "rid", "of", "the", "plague"]
(c9-2 / multi-sentence
      :snt1 (c9-0 / hope-01
                  :ARG0 (c9-3 / i)
                  :ARG1 (c9-4 / kill-01
                              :ARG0 (c9-10 / they)
                              :ARG1 (c9-6 / person
                                          :ARG0-of (c9-9 / take-01
                                                         :ARG1 (c9-11 / hostage)))))
      :snt2 (c9-7 / rid-01
                  :ARG0 (c9-1 / you)
                  :ARG1 (c9-8 / disease
                              :name (c9-5 / name
                                          :op1 "Plague"))
                  :mode imperative))

# ::snt get rid of the pilon live in tv reporting if you want to serious. Gun laws so tight seeing someone walk would raise alert? Fuck
# ::tokens ["get", "rid", "of", "the", "pilon", "live", "in", "tv", "reporting", "if", "you", "want", "to", "serious", ".", "Gun", "laws", "so", "tight", "seeing", "someone", "walk", "would", "raise", "alert", "?", "Fuck"]
# ::lemmas ["get", "rid", "of", "the", "pilon", "live", "in", "tv", "report", "if", "you", "want", "to", "serious", ".", "gun", "law", "so", "tight", "see", "someone", "walk", "would", "raise", "alert", "?", "fuck"]
(c10-3 / multi-sentence
       :snt1 (c10-12 / rid-01
                     :ARG0 (c10-0 / you)
                     :ARG1 (c10-11 / pilon
                                   :location (c10-15 / television)
                                   :ARG0-of (c10-9 / report-01))
                     :condition (c10-1 / want-01
                                       :ARG0 c10-0
                                       :ARG1 (c10-14 / serious-01
                                                     :ARG1 c10-0))
                     :mode imperative)
       :snt2 (c10-7 / raise-01
                    :ARG0 (c10-6 / see-01
                                 :ARG1 (c10-10 / walk-01
                                               :ARG0 (c10-2 / someone)))
                    :ARG1 (c10-16 / alert-01)
                    :ARG1-of (c10-13 / tight-05
                                     :degree (c10-5 / so))
                    :polarity (c10-8 / amr-unknown))
       :snt3 (c10-4 / fuck
                    :mode expressive))

# ::snt I MADE THIS YOU B/C I LOVE YOU LISTEN!!!
# ::tokens ["I", "MADE", "THIS", "YOU", "B", "/", "C", "I", "LOVE", "YOU", "LISTEN", "!", "!", "!"]
# ::lemmas ["i", "make", "this", "YOU", "B", "/", "C", "i", "love", "YOU", "LISTEN", "!", "!", "!"]
(c11-2 / multi-sentence
       :snt1 (c11-5 / make-02
                    :ARG0 (c11-4 / i)
                    :ARG1 (c11-10 / this)
                    :ARG2 (c11-0 / you))
       :snt2 (c11-9 / say-01
                    :ARG0 (c11-7 / i)
                    :ARG1 (c11-1 / love-01
                                 :ARG0 c11-7
                                 :ARG1 (c11-8 / you
                                              :ARG2-of c11-9)))
       :snt3 (c11-6 / listen-01
                    :ARG0 (c11-3 / you)
                    :mode imperative))

# ::snt I MADE THIS YOU B/C I LOVE YOU LISTEN!!!
# ::tokens ["I", "MADE", "THIS", "YOU", "B", "/", "C", "I", "LOVE", "YOU", "LISTEN", "!", "!", "!"]
# ::lemmas ["i", "make", "this", "YOU", "B", "/", "C", "i", "love", "YOU", "LISTEN", "!", "!", "!"]
(c12-2 / multi-sentence
       :snt1 (c12-5 / make-02
                    :ARG0 (c12-4 / i)
                    :ARG1 (c12-10 / this)
                    :ARG2 (c12-0 / you))
       :snt2 (c12-9 / say-01
                    :ARG0 (c12-7 / i)
                    :ARG1 (c12-1 / love-01
                                 :ARG0 c12-7
                                 :ARG1 (c12-8 / you
                                              :ARG2-of c12-9)))
       :snt3 (c12-6 / listen-01
                    :ARG0 (c12-3 / you)
                    :mode imperative))

# ::snt I MADE THIS YOU B/C I LOVE YOU LISTEN!!!
# ::tokens ["I", "MADE", "THIS", "YOU", "B", "/", "C", "I", "LOVE", "YOU", "LISTEN", "!", "!", "!"]
# ::lemmas ["i", "make", "this", "YOU", "B", "/", "C", "i", "love", "YOU", "LISTEN", "!", "!", "!"]
(c13-2 / multi-sentence
       :snt1 (c13-5 / make-02
                    :ARG0 (c13-4 / i)
                    :ARG1 (c13-10 / this)
                    :ARG2 (c13-0 / you))
       :snt2 (c13-9 / say-01
                    :ARG0 (c13-7 / i)
                    :ARG1 (c13-1 / love-01
                                 :ARG0 c13-7
                                 :ARG1 (c13-8 / you
                                              :ARG2-of c13-9)))
       :snt3 (c13-6 / listen-01
                    :ARG0 (c13-3 / you)
                    :mode imperative))

# ::snt Amen
# ::tokens ["Amen"]
# ::lemmas ["amen"]
(c14-0 / man)

# ::snt I MADE THIS YOU B/C I LOVE YOU LISTEN!!!
# ::tokens ["I", "MADE", "THIS", "YOU", "B", "/", "C", "I", "LOVE", "YOU", "LISTEN", "!", "!", "!"]
# ::lemmas ["i", "make", "this", "YOU", "B", "/", "C", "i", "love", "YOU", "LISTEN", "!", "!", "!"]
(c15-2 / multi-sentence
       :snt1 (c15-5 / make-02
                    :ARG0 (c15-4 / i)
                    :ARG1 (c15-10 / this)
                    :ARG2 (c15-0 / you))
       :snt2 (c15-9 / say-01
                    :ARG0 (c15-7 / i)
                    :ARG1 (c15-1 / love-01
                                 :ARG0 c15-7
                                 :ARG1 (c15-8 / you
                                              :ARG2-of c15-9)))
       :snt3 (c15-6 / listen-01
                    :ARG0 (c15-3 / you)
                    :mode imperative))

# ::snt : more people have fled from Sydney cafe where hostages are being held.
# ::tokens [":", "more", "people", "have", "fled", "from", "Sydney", "cafe", "where", "hostages", "are", "being", "held", "."]
# ::lemmas [":", "more", "people", "have", "flee", "from", "Sydney", "cafe", "where", "hostage", "be", "be", "hold", "."]
(c17-1 / flee-05
       :ARG0 (c17-4 / person
                    :quant (c17-2 / more))
       :ARG2 (c17-6 / cafe
                    :location (c17-5 / city
                                     :name (c17-3 / name
                                                  :op1 "Sydney"))
                    :location-of (c17-0 / hold-01
                                        :ARG1 (c17-7 / hostage))))

# ::snt -
# ::tokens ["-"]
# ::lemmas ["-"]
(c18-0 / amr-empty)
