# ::snt This is a tragic moment, Girl runs for life, holds the arm of a Policeman for security.Replay &amp; See body language of Both
# ::tokens ["This", "is", "a", "tragic", "moment", ",", "Girl", "runs", "for", "life", ",", "holds", "the", "arm", "of", "a", "Policeman", "for", "security", ".", "Replay", "&", "amp", ";", "See", "body", "language", "of", "Both"]
# ::lemmas ["this", "be", "a", "tragic", "moment", ",", "girl", "run", "for", "life", ",", "hold", "the", "arm", "of", "a", "Policeman", "for", "security", ".", "Replay", "&", "amp", ";", "see", "body", "language", "of", "both"]
(c1-0 / multi-sentence
      :snt1 (c1-13 / moment
                   :mod (c1-21 / tragic)
                   :domain (c1-20 / this)
                   :ARG1-of (c1-7 / mean-01
                                  :ARG2 (c1-5 / and
                                              :op1 (c1-14 / run-02
                                                          :ARG0 (c1-15 / girl)
                                                          :purpose (c1-8 / life))
                                              :op2 (c1-6 / hold-01
                                                         :ARG0 c1-15
                                                         :ARG1 (c1-16 / arm
                                                                      :part-of (c1-1 / person
                                                                                     :ARG0-of (c1-4 / have-org-role-91
                                                                                                    :ARG2 (c1-3 / policeman))))
                                                         :purpose (c1-2 / security))
                                              :snt2-of c1-0)))
      :op1 (c1-9 / play-01)
      :op2 (c1-12 / amp)
      :snt3 (c1-11 / see-01
                   :ARG0 (c1-19 / you)
                   :ARG1 (c1-17 / language
                                :mod (c1-10 / body)
                                :poss (c1-18 / both))
                   :mode imperative))

# ::snt they making movies.
# ::tokens ["they", "making", "movies", "."]
# ::lemmas ["they", "make", "movie", "."]
(c2-2 / make-01
      :ARG0 (c2-0 / they)
      :ARG1 (c2-1 / movie))

# ::snt Demanding IS flag is a very bad sign.
# ::tokens ["Demanding", "IS", "flag", "is", "a", "very", "bad", "sign", "."]
# ::lemmas ["demand", "be", "flag", "be", "a", "very", "bad", "sign", "."]
(c3-6 / signal-07
      :ARG0 (c3-0 / want-01
                  :ARG1 (c3-1 / flag
                              :mod (c3-5 / religious-group
                                         :name (c3-3 / name
                                                     :op1 "Islam"))))
      :ARG1-of (c3-2 / bad-07
                     :degree (c3-4 / very)))

# ::snt ISIS is a group of traitors from their countries who don't want to follow the law. Bunch of sissies that "can't" show their faces.
# ::tokens ["ISIS", "is", "a", "group", "of", "traitors", "from", "their", "countries", "who", "do", "n't", "want", "to", "follow", "the", "law", ".", "Bunch", "of", "sissies", "that", "\"", "ca", "n't", "\"", "show", "their", "faces", "."]
# ::lemmas ["ISIS", "be", "a", "group", "of", "traitor", "from", "their", "country", "who", "do", "not", "want", "to", "follow", "the", "law", ".", "bunch", "of", "sissy", "that", "\"", "can", "not", "\"", "show", "their", "face", "."]
(c4-2 / multi-sentence
      :snt1 (c4-11 / group
                   :consist-of (c4-8 / person
                                     :ARG0-of (c4-4 / betray-01)
                                     :source (c4-10 / country
                                                    :poss c4-8)
                                     :ARG0-of (c4-0 / want-01
                                                    :ARG1 (c4-1 / follow-02
                                                                :ARG0 c4-8
                                                                :ARG1 (c4-3 / law))
                                                    :polarity -))
                   :domain (c4-9 / criminal-organization
                                 :name (c4-7 / name
                                             :op1 "ISI")))
      :snt2 (c4-12 / bitch
                   :consist-of (c4-13 / sissie)
                   :ARG0-of (c4-5 / show-01
                                  :ARG1 (c4-6 / face)
                                  :ARG1-of (c4-14 / possible-01
                                                  :polarity -))
                   :part c4-6))

# ::snt send the gunman to Fucken hell
# ::tokens ["send", "the", "gunman", "to", "Fucken", "hell"]
# ::lemmas ["send", "the", "gunman", "to", "Fucken", "hell"]
(c5-4 / send-03
      :ARG0 (c5-1 / you)
      :ARG1 (c5-3 / gunman)
      :ARG2 (c5-2 / fuck-01
                  :ARG1 (c5-0 / hell))
      :mode imperative)

# ::snt STOP the "JOURNALISTIC BULL SHIT" and just say that hostages were RELEASED not escaped. RT should learn ENGLISH.
# ::tokens ["STOP", "the", "\"", "JOURNALISTIC", "BULL", "SHIT", "\"", "and", "just", "say", "that", "hostages", "were", "RELEASED", "not", "escaped", ".", "RT", "should", "learn", "ENGLISH", "."]
# ::lemmas ["stop", "the", "\"", "JOURNALISTIC", "BULL", "SHIT", "\"", "and", "just", "say", "that", "hostage", "be", "RELEASED", "not", "escape", ".", "RT", "should", "learn", "ENGLISH", "."]
(c6-4 / multi-sentence
      :snt1 (c6-14 / and
                   :op1 (c6-13 / stop-01
                               :ARG0 (c6-1 / you)
                               :ARG1 (c6-6 / bullshit-01
                                           :mod (c6-3 / fraudulent))
                               :mode imperative)
                   :op2 (c6-8 / say-01
                              :ARG0 c6-1
                              :ARG1 c6-14
                              :op1 (c6-11 / release-01
                                          :ARG1 (c6-0 / hostage))
                              :op2 (c6-9 / escape-01
                                         :ARG1 c6-0
                                         :polarity -)
                              :mode imperative)
                   :mod (c6-2 / just))
      :snt2 (c6-10 / recommend-01
                   :ARG1 (c6-5 / learn-01
                               :ARG0 (c6-12 / you)
                               :ARG1 (c6-7 / ENGLISH))))

# ::snt All this doing for treatning own nation, and to get more money from the budget for tightning security and to realise own needs.
# ::tokens ["All", "this", "doing", "for", "treatning", "own", "nation", ",", "and", "to", "get", "more", "money", "from", "the", "budget", "for", "tightning", "security", "and", "to", "realise", "own", "needs", "."]
# ::lemmas ["all", "this", "do", "for", "treatne", "own", "nation", ",", "and", "to", "get", "more", "money", "from", "the", "budget", "for", "tightne", "security", "and", "to", "realise", "own", "need", "."]
(c7-7 / do-02
      :ARG0 (c7-14 / this)
      :ARG1 (c7-15 / and
                   :op1 (c7-11 / treat-03
                               :ARG1 (c7-4 / nation
                                           :poss (c7-5 / they)))
                   :op2 (c7-9 / get-01
                              :ARG1 (c7-0 / money
                                          :mod (c7-6 / more))
                              :ARG2 (c7-1 / budget)
                              :purpose (c7-3 / and
                                             :op1 (c7-2 / tight-05
                                                        :ARG1 (c7-12 / security))
                                             :op2 (c7-8 / realize-02
                                                        :ARG1 (c7-10 / need-01
                                                                     :ARG0 c7-5)))))
      :mod (c7-13 / all))

# ::snt . Isis are seriously sick minded, we gotta step up to the plate, and release HELL upon them !
# ::tokens [".", "Isis", "are", "seriously", "sick", "minded", ",", "we", "got", "ta", "step", "up", "to", "the", "plate", ",", "and", "release", "HELL", "upon", "them", "!"]
# ::lemmas [".", "isis", "be", "seriously", "sick", "minded", ",", "we", "got", "to", "step", "up", "to", "the", "plate", ",", "and", "release", "HELL", "upon", "they", "!"]
(c8-12 / and
       :op1 (c8-3 / mind
                  :ARG1-of (c8-11 / sick-05
                                  :degree (c8-5 / serious-02))
                  :domain (c8-10 / religious-group
                                 :name (c8-8 / name
                                             :op1 "Isis")))
       :op2 (c8-4 / obligate-01
                  :ARG2 (c8-6 / and
                              :op1 (c8-2 / step-01
                                         :ARG1 (c8-1 / we)
                                         :ARG2 (c8-9 / plate))
                              :op2 (c8-7 / release-01
                                         :ARG0 c8-1
                                         :ARG1 (c8-0 / hell)
                                         :ARG2 c8-10))))

# ::snt It's not ISIS.
# ::tokens ["It", "'s", "not", "ISIS", "."]
# ::lemmas ["it", "be", "not", "ISIS", "."]
(c9-0 / have-polarity-91
      :ARG1 (c9-2 / criminal-organization
                  :name (c9-1 / name
                              :op1 "ISIS"))
      :ARG2 -)

# ::snt showtime bad movie director
# ::tokens ["showtime", "bad", "movie", "director"]
# ::lemmas ["showtime", "bad", "movie", "director"]
(c10-3 / person
       :ARG0-of (c10-0 / have-org-role-91
                       :ARG2 (c10-4 / director)
                       :ARG3 (c10-1 / movie))
       :ARG1-of (c10-2 / bad-07)
       :time (c10-5 / show-04))

# ::snt Is there only one gunman/terrorist?
# ::tokens ["Is", "there", "only", "one", "gunman", "/", "terrorist", "?"]
# ::lemmas ["be", "there", "only", "one", "gunman", "/", "terrorist", "?"]
(c11-2 / slash
       :polarity (c11-4 / amr-unknown)
       :op1 (c11-1 / gunman)
       :op2 (c11-3 / terrorist)
       :mod (c11-0 / only))

# ::snt He apparently said he has two more guys in the city with bombs.
# ::tokens ["He", "apparently", "said", "he", "has", "two", "more", "guys", "in", "the", "city", "with", "bombs", "."]
# ::lemmas ["he", "apparently", "say", "he", "have", "two", "more", "guy", "in", "the", "city", "with", "bomb", "."]
(c12-6 / appear-02
       :ARG1 (c12-5 / say-01
                    :ARG0 (c12-0 / he)
                    :ARG1 (c12-7 / have-03
                                 :ARG0 c12-0
                                 :ARG1 (c12-4 / guy
                                              :mod (c12-1 / more)
                                              :ARG0-of c12-7
                                              :ARG1 (c12-2 / bomb)
                                              :quant 2)
                                 :location (c12-3 / city))))

# ::snt you said before... so did sky news... why?
# ::tokens ["you", "said", "before", "...", "so", "did", "sky", "news", "...", "why", "?"]
# ::lemmas ["you", "say", "before", "...", "so", "do", "sky", "news", "...", "why", "?"]
(c13-1 / multi-sentence
       :snt1 (c13-7 / say-01
                    :ARG0 (c13-0 / you)
                    :time (c13-2 / before))
       :snt2 (c13-3 / say-01
                    :ARG0 (c13-5 / broadcast-program
                                 :name (c13-4 / name
                                              :op1 "Sky"
                                              :op2 "News"))
                    :time c13-2)
       :snt3 (c13-6 / cause-01
                    :ARG0 (c13-8 / amr-unknown)))

# ::snt Better for coordination. Sigh.
# ::tokens ["Better", "for", "coordination", ".", "Sigh", "."]
# ::lemmas ["well", "for", "coordination", ".", "Sigh", "."]
(c15-1 / multi-sentence
       :snt1 (c15-0 / have-degree-91
                    :ARG2 (c15-4 / good-04
                                 :ARG1 (c15-3 / coordinate-01))
                    :ARG3 (c15-2 / more))
       :snt2 (c15-5 / sigh-02))

# ::snt send in the pigs IS love em
# ::tokens ["send", "in", "the", "pigs", "IS", "love", "em"]
# ::lemmas ["send", "in", "the", "pig", "be", "love", "em"]
(c16-0 / send-01
       :ARG0 (c16-1 / you)
       :ARG1 (c16-2 / pig)
       :ARG2-of (c16-3 / love-01
                       :ARG0 c16-1
                       :ARG1 c16-2)
       :mode imperative)

# ::snt Replay many times and see, Then you'll understand the difference between a and a Policeman
# ::tokens ["Replay", "many", "times", "and", "see", ",", "Then", "you", "'ll", "understand", "the", "difference", "between", "a", "and", "a", "Policeman"]
# ::lemmas ["replay", "many", "time", "and", "see", ",", "then", "you", "'ll", "understand", "the", "difference", "between", "a", "and", "a", "Policeman"]
(c17-14 / and
        :op1 (c17-7 / and
                    :op1 (c17-8 / play-01
                                :ARG0 (c17-1 / you)
                                :frequency (c17-3 / many)
                                :mode imperative)
                    :op2 (c17-10 / see-01
                                 :ARG0 c17-1
                                 :mode imperative))
        :op2 (c17-4 / understand-01
                    :ARG0 c17-1
                    :ARG1 (c17-9 / differ-02
                                 :ARG1 (c17-13 / person
                                               :ARG0-of (c17-0 / have-org-role-91
                                                               :ARG2 (c17-5 / policeman)))
                                 :ARG2 (c17-12 / person
                                               :ARG0-of (c17-2 / have-org-role-91
                                                               :ARG2 (c17-6 / policeman))))
                    :mod (c17-11 / then)))

# ::snt quite safe in English caffs with bacon and black pudding on the menu.
# ::tokens ["quite", "safe", "in", "English", "caffs", "with", "bacon", "and", "black", "pudding", "on", "the", "menu", "."]
# ::lemmas ["quite", "safe", "in", "English", "caff", "with", "bacon", "and", "black", "pudding", "on", "the", "menu", "."]
(c18-8 / safe-01
       :degree (c18-2 / quite)
       :location (c18-6 / caff
                        :mod (c18-5 / country
                                    :name (c18-3 / name
                                                 :op1 "England"))
                        :accompanier (c18-9 / and
                                            :op1 (c18-1 / bacon)
                                            :op2 (c18-4 / pudding
                                                        :ARG1-of (c18-7 / black-04))
                                            :ARG2-of (c18-0 / menu-01))))

# ::snt we still don't know for sure
# ::tokens ["we", "still", "do", "n't", "know", "for", "sure"]
# ::lemmas ["we", "still", "do", "not", "know", "for", "sure"]
(c19-3 / know-01
       :ARG0 (c19-1 / we)
       :mod (c19-0 / still)
       :ARG1-of (c19-2 / sure-02)
       :polarity -)
