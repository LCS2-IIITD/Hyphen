# ::snt guess we'll find out if the tapes are leaked to the public. I imagine ppl who lost loved s are going to investigate on their own
# ::tokens ["guess", "we", "'ll", "find", "out", "if", "the", "tapes", "are", "leaked", "to", "the", "public", ".", "I", "imagine", "ppl", "who", "lost", "loved", "s", "are", "going", "to", "investigate", "on", "their", "own"]
# ::lemmas ["guess", "we", "'ll", "find", "out", "if", "the", "tape", "be", "leak", "to", "the", "public", ".", "i", "imagine", "ppl", "who", "lose", "love", "s", "be", "go", "to", "investigate", "on", "their", "own"]
(c1-3 / multi-sentence
      :snt1 (c1-11 / guess-01
                   :ARG0 (c1-9 / i)
                   :ARG1 (c1-2 / find-out-03
                               :ARG0 (c1-1 / we)
                               :ARG1 (c1-4 / leak-01
                                           :ARG1 (c1-14 / tape)
                                           :ARG2 (c1-10 / public))))
      :snt2 (c1-12 / imagine-01
                   :ARG0 (c1-5 / i)
                   :ARG1 (c1-7 / investigate-01
                               :ARG0 (c1-15 / person
                                            :ARG0-of (c1-13 / lose-02
                                                            :ARG1 (c1-6 / person
                                                                        :ARG1-of (c1-0 / love-01))))
                               :mod (c1-8 / by-oneself))))

# ::snt they have all his info &amp;background as an employee..they refuse to divulge more. Deliberate act suicide/murder.
# ::tokens ["they", "have", "all", "his", "info", "&", "amp;background", "as", "an", "employee", "..", "they", "refuse", "to", "divulge", "more", ".", "Deliberate", "act", "suicide", "/", "murder", "."]
# ::lemmas ["they", "have", "all", "his", "info", "&", "amp;background", "as", "an", "employee", "..", "they", "refuse", "to", "divulge", "more", ".", "Deliberate", "act", "suicide", "/", "murder", "."]
(c2-1 / multi-sentence
      :snt1 (c2-6 / have-03
                  :ARG0 (c2-18 / they)
                  :ARG1 (c2-5 / and
                              :op1 (c2-15 / information
                                          :mod (c2-14 / all)
                                          :poss (c2-4 / he))
                              :op2 (c2-8 / background
                                         :mod (c2-11 / all)
                                         :poss c2-4))
                  :ARG1-of (c2-16 / cause-01
                                  :ARG0 (c2-9 / employ-01
                                              :ARG0 c2-18)))
      :snt2 (c2-13 / refuse-01
                   :ARG0 (c2-17 / they)
                   :ARG1 (c2-2 / divulge-01
                               :ARG0 c2-17
                               :ARG1 (c2-12 / more)))
      :snt3 (c2-3 / slash
                  :op1 (c2-10 / suicide)
                  :op2 (c2-7 / murder-01)
                  :mod (c2-0 / deliberate)))

# ::snt hubby thinks it was a malfunction &amp; blaming it on the co-pilot so as not to damage Airbus future sales.
# ::tokens ["hubby", "thinks", "it", "was", "a", "malfunction", "&", "amp", ";", "blaming", "it", "on", "the", "co", "-", "pilot", "so", "as", "not", "to", "damage", "Airbus", "future", "sales", "."]
# ::lemmas ["hubby", "think", "it", "be", "a", "malfunction", "&", "amp", ";", "blame", "it", "on", "the", "co", "-", "pilot", "so", "as", "not", "to", "damage", "Airbus", "future", "sale", "."]
(c3-2 / multi-sentence
      :snt1 (c3-13 / think-01
                   :ARG0 (c3-0 / hubby)
                   :ARG1 (c3-15 / and
                                :op1 (c3-7 / malfunction-01)
                                :op2 (c3-4 / amp)
                                :domain (c3-5 / it)))
      :snt2 (c3-3 / blame-01
                  :ARG1 (c3-8 / person
                              :ARG0-of (c3-14 / pilot-01)
                              :mod (c3-9 / co-pilot))
                  :purpose (c3-10 / damage-01
                                  :ARG1 (c3-12 / sell-01
                                               :ARG0 (c3-11 / company
                                                            :name (c3-6 / name
                                                                        :op1 "Airbus"))
                                               :time (c3-1 / future))
                                  :polarity -)))

# ::snt It's the airline that has all the info; they'll have to get lawyers to get access. Don't know how that works.
# ::tokens ["It", "'s", "the", "airline", "that", "has", "all", "the", "info", ";", "they", "'ll", "have", "to", "get", "lawyers", "to", "get", "access", ".", "Do", "n't", "know", "how", "that", "works", "."]
# ::lemmas ["it", "be", "the", "airline", "that", "have", "all", "the", "info", ";", "they", "'ll", "have", "to", "get", "lawyer", "to", "get", "access", ".", "do", "not", "know", "how", "that", "work", "."]
(c4-3 / multi-sentence
      :snt1 (c4-0 / have-03
                  :ARG0 (c4-13 / airline)
                  :ARG1 (c4-6 / information
                              :mod (c4-5 / all)))
      :snt2 (c4-4 / obligate-01
                  :ARG2 (c4-8 / get-01
                              :ARG0 c4-13
                              :ARG1 (c4-2 / lawyer)
                              :purpose (c4-7 / access-01
                                             :ARG0 c4-2)))
      :snt3 (c4-12 / know-01
                   :ARG0 (c4-9 / i)
                   :ARG1 (c4-11 / thing
                                :manner-of (c4-1 / work-09
                                                 :ARG1 (c4-10 / that)))
                   :polarity -))

# ::snt what nationality ?
# ::tokens ["what", "nationality", "?"]
# ::lemmas ["what", "nationality", "?"]
(c5-0 / nationality
      :domain (c5-1 / amr-unknown))

# ::snt scroll down --&gt;
# ::tokens ["scroll", "down", "--&gt", ";"]
# ::lemmas ["scroll", "down", "--&gt", ";"]
(c6-3 / and
      :op1 (c6-0 / scroll-01
                 :direction (c6-1 / down))
      :op2 (c6-2 / gt-00))

# ::snt it is really not necessary to publish his name
# ::tokens ["it", "is", "really", "not", "necessary", "to", "publish", "his", "name"]
# ::lemmas ["it", "be", "really", "not", "necessary", "to", "publish", "his", "name"]
(c7-1 / need-01
      :ARG1 (c7-3 / publish-01
                  :ARG1 (c7-2 / name
                              :poss (c7-0 / he)))
      :ARG1-of (c7-4 / real-04)
      :polarity -)
