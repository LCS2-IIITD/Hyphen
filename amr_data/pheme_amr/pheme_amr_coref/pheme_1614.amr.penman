# ::snt It is now reported that French special forces have stormed the printing plant. Gunshots, explosions and smoke are visible
# ::tokens ["It", "is", "now", "reported", "that", "French", "special", "forces", "have", "stormed", "the", "printing", "plant", ".", "Gunshots", ",", "explosions", "and", "smoke", "are", "visible"]
# ::lemmas ["it", "be", "now", "report", "that", "French", "special", "force", "have", "storm", "the", "print", "plant", ".", "gunshot", ",", "explosion", "and", "smoke", "be", "visible"]
(c1-2 / multi-sentence
      :snt1 (c1-11 / report-01
                   :ARG1 (c1-13 / storm-02
                                :ARG0 (c1-1 / force
                                            :ARG1-of (c1-6 / special-02)
                                            :mod (c1-12 / country
                                                        :name (c1-8 / name
                                                                    :op1 "France")))
                                :ARG1 (c1-10 / plant
                                             :ARG0-of (c1-14 / print-01)))
                   :time (c1-9 / now))
      :snt2 (c1-4 / possible-01
                  :ARG1 (c1-3 / see-01
                              :ARG1 (c1-15 / and
                                           :op1 (c1-5 / shoot-02)
                                           :op2 (c1-7 / explode-01)
                                           :op3 (c1-0 / smoke)))))

# ::snt ! MT : Paris gunman vows to kill hostages if France storms printing plant w/ hunted down brothers
# ::tokens ["!", "MT", ":", "Paris", "gunman", "vows", "to", "kill", "hostages", "if", "France", "storms", "printing", "plant", "w/", "hunted", "down", "brothers"]
# ::lemmas ["!", "MT", ":", "Paris", "gunman", "vow", "to", "kill", "hostage", "if", "France", "storm", "print", "plant", "w/", "hunt", "down", "brother"]
(c4-17 / and
       :op1 (c4-6 / publication
                  :name (c4-4 / name
                              :op1 "MT"))
       :op2 (c4-5 / vow-01
                  :ARG0 (c4-9 / gunman
                              :location (c4-8 / city
                                              :name (c4-7 / name
                                                          :op1 "Paris")))
                  :ARG1 (c4-15 / kill-01
                               :ARG0 c4-9
                               :ARG1 (c4-0 / hostage)
                               :condition (c4-12 / storm-01
                                                 :ARG0 (c4-10 / country
                                                              :name (c4-11 / name
                                                                           :op1 "France"))
                                                 :ARG1 (c4-16 / plant
                                                              :ARG0-of (c4-2 / print-01))
                                                 :manner (c4-1 / hunt-01
                                                               :ARG0 c4-10
                                                               :ARG1 (c4-14 / person
                                                                            :ARG0-of (c4-13 / have-rel-role-91
                                                                                            :ARG1 c4-9
                                                                                            :ARG2 (c4-3 / brother))))))))

# ::snt :it's just been stormed tho
# ::tokens [":", "it", "'s", "just", "been", "stormed", "tho"]
# ::lemmas [":", "it", "be", "just", "be", "storm", "tho"]
(c5-0 / have-concession-91
      :ARG1 (c5-2 / storm-01
                  :ARG1 (c5-3 / it)
                  :time (c5-1 / just)))

# ::snt : gunman vows to kill if France storms printing plant
# ::tokens [":", "gunman", "vows", "to", "kill", "if", "France", "storms", "printing", "plant"]
# ::lemmas [":", "gunman", "vow", "to", "kill", "if", "France", "storm", "print", "plant"]
(c6-1 / vow-01
      :ARG0 (c6-4 / gunman)
      :ARG1 (c6-6 / kill-01
                  :ARG0 c6-4
                  :condition (c6-5 / storm-02
                                   :ARG0 (c6-3 / country
                                               :name (c6-0 / name
                                                           :op1 "France"))
                                   :ARG1 (c6-2 / plant
                                               :ARG0-of (c6-7 / print-01)))))

# ::snt :Schoten nu...
# ::tokens [":", "Schoten", "nu", "..."]
# ::lemmas [":", "Schoten", "nu", "..."]
(c7-0 / string-entity
      :value "Schoten nu")

# ::snt You cant show any weakness never negotiate out of fear
# ::tokens ["You", "ca", "nt", "show", "any", "weakness", "never", "negotiate", "out", "of", "fear"]
# ::lemmas ["you", "can", "not", "show", "any", "weakness", "never", "negotiate", "out", "of", "fear"]
(c8-9 / and
      :op1 (c8-6 / possible-01
                 :ARG1 (c8-8 / show-01
                             :ARG0 (c8-0 / you)
                             :ARG1 (c8-1 / weak-02
                                         :ARG1 c8-0
                                         :mod (c8-4 / any)))
                 :polarity -)
      :op2 (c8-5 / negotiate-01
                 :ARG0 c8-0
                 :time (c8-3 / ever)
                 :ARG1-of (c8-7 / cause-01
                                :ARG0 (c8-2 / fear-01))
                 :polarity -))

# ::snt they are going to kill the hostages anyway so get into both at the same time, if the French can't do it there's some boys in Hereford
# ::tokens ["they", "are", "going", "to", "kill", "the", "hostages", "anyway", "so", "get", "into", "both", "at", "the", "same", "time", ",", "if", "the", "French", "ca", "n't", "do", "it", "there", "'s", "some", "boys", "in", "Hereford"]
# ::lemmas ["they", "be", "go", "to", "kill", "the", "hostage", "anyway", "so", "get", "into", "both", "at", "the", "same", "time", ",", "if", "the", "French", "can", "not", "do", "it", "there", "be", "some", "boy", "in", "Hereford"]
(c9-6 / and
      :op1 (c9-14 / kill-01
                  :ARG0 (c9-18 / they)
                  :ARG1 (c9-7 / hostage)
                  :mod (c9-12 / anyway)
                  :ARG0-of (c9-16 / cause-01
                                  :ARG1 (c9-11 / get-05
                                               :ARG0 (c9-15 / you
                                                            :ARG1-of c9-11)
                                               :ARG2 (c9-8 / both)
                                               :time (c9-17 / time
                                                            :ARG1-of (c9-3 / same-01))
                                               :mode imperative)))
      :op2 (c9-13 / boy
                  :quant (c9-9 / some)
                  :location (c9-5 / hereford)
                  :condition (c9-0 / possible-01
                                   :ARG1 (c9-1 / do-02
                                               :ARG0 (c9-4 / person
                                                           :mod (c9-2 / country
                                                                      :name (c9-10 / name
                                                                                   :op1 "France")))
                                               :ARG1 c9-14)
                                   :polarity -)))

# ::snt take them all out at the same time!
# ::tokens ["take", "them", "all", "out", "at", "the", "same", "time", "!"]
# ::lemmas ["take", "they", "all", "out", "at", "the", "same", "time", "!"]
(c11-4 / take-out-11
       :ARG0 (c11-0 / you)
       :ARG1 (c11-2 / they
                    :mod (c11-5 / all))
       :time (c11-1 / time
                    :ARG1-of (c11-3 / same-01))
       :mode imperative)

# ::snt They're not martyrs to a cause; they're easily manipulated idiots and murderers.
# ::tokens ["They", "'re", "not", "martyrs", "to", "a", "cause", ";", "they", "'re", "easily", "manipulated", "idiots", "and", "murderers", "."]
# ::lemmas ["they", "be", "not", "martyr", "to", "a", "cause", ";", "they", "be", "easily", "manipulate", "idiot", "and", "murderer", "."]
(c13-6 / contrast-01
       :ARG1 (c13-1 / martyr-01
                    :ARG1 (c13-8 / they)
                    :beneficiary (c13-5 / cause)
                    :polarity -)
       :ARG2 (c13-9 / and
                    :op1 (c13-3 / idiot)
                    :op2 (c13-4 / person
                                :ARG0-of (c13-7 / murder-01))
                    :domain c13-8
                    :ARG1-of (c13-0 / manipulate-01
                                    :ARG1-of (c13-2 / easy-05))))

# ::snt Take them out.
# ::tokens ["Take", "them", "out", "."]
# ::lemmas ["take", "they", "out", "."]
(c14-1 / take-out-11
       :ARG0 (c14-0 / you)
       :ARG1 (c14-2 / they)
       :mode imperative)

# ::snt from what I've heard, France has very good equivalent to SWAT. Hostages should be ok
# ::tokens ["from", "what", "I", "'ve", "heard", ",", "France", "has", "very", "good", "equivalent", "to", "SWAT", ".", "Hostages", "should", "be", "ok"]
# ::lemmas ["from", "what", "i", "'ve", "hear", ",", "France", "have", "very", "good", "equivalent", "to", "SWAT", ".", "Hostages", "should", "be", "ok"]
(c15-1 / multi-sentence
       :snt1 (c15-0 / have-03
                    :ARG0 (c15-9 / country
                                 :name (c15-5 / name
                                              :op1 "France"))
                    :ARG1 (c15-3 / equivalent
                                 :ARG1-of (c15-10 / good-02
                                                  :degree (c15-6 / very))
                                 :ARG1-of (c15-11 / say-01
                                                  :ARG0 (c15-12 / thing
                                                                :ARG1-of (c15-13 / hear-01
                                                                                 :ARG0 (c15-4 / i))))))
       :snt2 (c15-8 / recommend-01
                    :ARG1 (c15-2 / okay-04
                                 :ARG1 (c15-7 / hostage))))

# ::snt Ik hoop niet dat dit uitkomt Paris gunman vows to kill hostages if France storms printing plant with brothers accused of attacking CH
# ::tokens ["Ik", "hoop", "niet", "dat", "dit", "uitkomt", "Paris", "gunman", "vows", "to", "kill", "hostages", "if", "France", "storms", "printing", "plant", "with", "brothers", "accused", "of", "attacking", "CH"]
# ::lemmas ["Ik", "hoop", "niet", "dat", "dit", "uitkomt", "Paris", "gunman", "vow", "to", "kill", "hostage", "if", "France", "storm", "print", "plant", "with", "brother", "accuse", "of", "attack", "CH"]
(c16-5 / vow-01
       :ARG0 (c16-9 / gunman
                    :location (c16-8 / city
                                     :name (c16-4 / name
                                                  :op1 "Paris")))
       :ARG1 (c16-14 / kill-01
                     :ARG0 c16-9
                     :ARG1 (c16-0 / hostage))
       :condition (c16-12 / storm-02
                          :ARG0 (c16-7 / country
                                       :name (c16-6 / name
                                                    :op1 "France"))
                          :ARG1 (c16-10 / plant
                                        :ARG0-of (c16-15 / print-01))
                          :accompanier (c16-2 / brother
                                              :ARG1-of (c16-16 / accuse-01
                                                               :ARG2 (c16-3 / attack-01
                                                                            :ARG0 c16-2
                                                                            :ARG1 c16-7
                                                                            :name (c16-11 / name
                                                                                          :op1 "CH")))))
       :ARG1-of (c16-1 / make-02
                       :ARG0 (c16-13 / amr-unintelligible
                                     :value "Ik"
                                     :op2 "Hoop")))

# ::snt - So true.
# ::tokens ["-", "So", "true", "."]
# ::lemmas ["-", "so", "true", "."]
(c17-1 / true-01
       :degree (c17-0 / so))

# ::snt Is the printing plant the one that printed the Charles Hebdo magazine?
# ::tokens ["Is", "the", "printing", "plant", "the", "one", "that", "printed", "the", "Charles", "Hebdo", "magazine", "?"]
# ::lemmas ["be", "the", "print", "plant", "the", "one", "that", "print", "the", "Charles", "Hebdo", "magazine", "?"]
(c18-3 / plant
       :polarity (c18-6 / amr-unknown)
       :ARG0-of (c18-5 / print-01)
       :domain (c18-1 / plant
                      :ARG0-of (c18-4 / print-01
                                      :ARG1 (c18-0 / magazine
                                                   :name (c18-2 / name
                                                                :op1 "Charles"
                                                                :op2 "Be Hebdo")))))

# ::snt Seize both locations at the same time.
# ::tokens ["Seize", "both", "locations", "at", "the", "same", "time", "."]
# ::lemmas ["seize", "both", "location", "at", "the", "same", "time", "."]
(c19-4 / see-01
       :ARG0 (c19-0 / you)
       :ARG1 (c19-1 / location
                    :mod (c19-2 / both))
       :time (c19-5 / time
                    :ARG1-of (c19-3 / same-01))
       :mode imperative)

# ::snt need to rewrite that post-misplaced modifier
# ::tokens ["need", "to", "rewrite", "that", "post", "-", "misplaced", "modifier"]
# ::lemmas ["need", "to", "rewrite", "that", "post", "-", "misplaced", "modifier"]
(c20-1 / need-01
       :ARG1 (c20-3 / rewrite-01
                    :ARG1 (c20-5 / thing
                                 :ARG0-of (c20-0 / modify-01)
                                 :time (c20-6 / after
                                              :op1 (c20-2 / place-01
                                                          :ARG1 c20-5))
                                 :mod (c20-4 / that))))
