# ::snt it's disgusting
# ::tokens ["it", "'s", "disgusting"]
# ::lemmas ["it", "be", "disgusting"]
(c1-0 / disgust-01
      :ARG0 (c1-1 / it))

# ::snt KEEGS HAHAHA
# ::tokens ["KEEGS", "HAHAHA"]
# ::lemmas ["KEEGS", "HAHAHA"]
(c2-0 / haha
      :mode expressive)

# ::snt Were women allowed to pray in same area as men?
# ::tokens ["Were", "women", "allowed", "to", "pray", "in", "same", "area", "as", "men", "?"]
# ::lemmas ["be", "woman", "allow", "to", "pray", "in", "same", "area", "as", "man", "?"]
(c3-7 / allow-01
      :polarity (c3-2 / amr-unknown)
      :ARG1 (c3-4 / pray-01
                  :ARG0 (c3-0 / woman)
                  :location (c3-3 / area
                                  :ARG1-of (c3-5 / same-01
                                                 :ARG2 (c3-6 / pray-01
                                                             :ARG0 (c3-1 / man))))))

# ::snt this warms my heart im so happy despite of all the bad things
# ::tokens ["this", "warms", "my", "heart", "i", "m", "so", "happy", "despite", "of", "all", "the", "bad", "things"]
# ::lemmas ["this", "warm", "my", "heart", "i", "m", "so", "happy", "despite", "of", "all", "the", "bad", "thing"]
(c4-0 / happy-01
      :ARG0 (c4-6 / this)
      :ARG1 (c4-7 / heart
                  :part-of (c4-2 / i))
      :degree (c4-4 / so)
      :concession (c4-3 / thing
                        :mod (c4-5 / all)
                        :ARG1-of (c4-1 / bad-07)))

# ::snt its a gesture Libby &amp; an admirable one at that
# ::tokens ["its", "a", "gesture", "Libby", "&", "amp", ";", "an", "admirable", "one", "at", "that"]
# ::lemmas ["its", "a", "gesture", "Libby", "&", "amp", ";", "an", "admirable", "one", "at", "that"]
(c5-5 / gesture-01
      :ARG0 (c5-7 / and
                  :op1 (c5-4 / person
                             :name (c5-2 / name
                                         :op1 "Libby"
                                         :op2 "&"
                                         :op3 "amp"))
                  :op2 (c5-6 / person
                             :name c5-2
                             :op1 "Libby"))
      :ARG1 (c5-1 / it)
      :ARG1-of (c5-0 / admirable-02
                     :degree (c5-3 / at-that)))

# ::snt haha
# ::tokens ["haha"]
# ::lemmas ["haha"]
(c6-0 / haha
      :mode expressive)

# ::snt I don't think anybody said it wasn't multi gender, you're projecting
# ::tokens ["I", "do", "n't", "think", "anybody", "said", "it", "was", "n't", "multi", "gender", ",", "you", "'re", "projecting"]
# ::lemmas ["i", "do", "not", "think", "anybody", "say", "it", "be", "not", "multi", "gender", ",", "you", "be", "project"]
(c7-9 / think-01
      :ARG0 (c7-3 / i)
      :ARG1 (c7-5 / contrast-01
                  :ARG1 (c7-8 / say-01
                              :ARG0 (c7-10 / anybody)
                              :ARG1 (c7-0 / have-polarity-91
                                          :ARG1 (c7-6 / it)
                                          :mod (c7-7 / gender
                                                     :quant (c7-2 / multi))
                                          :ARG2 -))
                  :ARG2 (c7-4 / project-02
                              :ARG0 (c7-1 / you)))
      :polarity -)

# ::snt oh go boil your head
# ::tokens ["oh", "go", "boil", "your", "head"]
# ::lemmas ["oh", "go", "boil", "your", "head"]
(c8-3 / boil-01
      :ARG0 (c8-1 / you
                  :part (c8-0 / head
                              :ARG1-of c8-3))
      :mod (c8-2 / oh
                 :mode expressive)
      :mode imperative)

# ::snt Try hard and see better results! Love ya stuff Keegs!
# ::tokens ["Try", "hard", "and", "see", "better", "results", "!", "Love", "ya", "stuff", "Keegs", "!"]
# ::lemmas ["try", "hard", "and", "see", "well", "result", "!", "love", "ya", "stuff", "Keegs", "!"]
(c9-3 / multi-sentence
      :snt1 (c9-16 / and
                   :op1 (c9-15 / try-01
                               :ARG0 (c9-1 / you)
                               :ARG1-of (c9-0 / hard-02)
                               :mode imperative)
                   :op2 (c9-14 / see-01
                               :ARG0 c9-1
                               :ARG1 (c9-10 / result
                                            :ARG1-of (c9-2 / have-degree-91
                                                           :ARG2 (c9-12 / good-02
                                                                        :ARG1 c9-10)
                                                           :ARG3 (c9-9 / more)))
                               :mode imperative))
      :snt2 (c9-6 / say-01
                  :ARG0 (c9-7 / i)
                  :ARG1 (c9-4 / love-01
                              :ARG0 c9-7
                              :ARG1 (c9-13 / you
                                           :mod (c9-5 / stuff)))
                  :ARG2 (c9-11 / person
                               :name (c9-8 / name
                                           :op1 "Keegs"))))

# ::snt your a gun
# ::tokens ["your", "a", "gun"]
# ::lemmas ["your", "a", "gun"]
(c10-1 / gun
       :domain (c10-0 / you))

# ::snt : I'll be honest, the multi-faith prayer vigil is making me a little teary.
# ::tokens [":", "I", "'ll", "be", "honest", ",", "the", "multi", "-", "faith", "prayer", "vigil", "is", "making", "me", "a", "little", "teary", "."]
# ::lemmas [":", "i", "'ll", "be", "honest", ",", "the", "multi", "-", "faith", "prayer", "vigil", "be", "make", "i", "a", "little", "teary", "."]
(c11-0 / honest-01
       :ARG0 (c11-4 / i)
       :ARG1 (c11-2 / make-02
                    :ARG0 (c11-5 / vigil
                                 :purpose (c11-6 / pray-01)
                                 :mod (c11-1 / faith
                                             :quant (c11-7 / multi)))
                    :ARG1 (c11-8 / teary-03
                                 :ARG1 c11-4
                                 :degree (c11-3 / little))))

# ::snt That's what I wanted to know. Not admirable unless all-inclusive.
# ::tokens ["That", "'s", "what", "I", "wanted", "to", "know", ".", "Not", "admirable", "unless", "all", "-", "inclusive", "."]
# ::lemmas ["that", "be", "what", "i", "want", "to", "know", ".", "not", "admirable", "unless", "all", "-", "inclusive", "."]
(c12-1 / multi-sentence
       :snt1 (c12-0 / want-01
                    :ARG0 (c12-3 / i)
                    :ARG1 (c12-4 / know-01
                                 :ARG0 c12-3
                                 :ARG1 (c12-6 / that)))
       :snt2 (c12-7 / admirable-02
                    :condition (c12-5 / include-01
                                      :ARG2 c12-7
                                      :degree (c12-2 / all)
                                      :polarity -)
                    :polarity -))

# ::snt Oh. That makes it fine and dandy. Multi-faith and bugger multi-gender.
# ::tokens ["Oh", ".", "That", "makes", "it", "fine", "and", "dandy", ".", "Multi", "-", "faith", "and", "bugger", "multi", "-", "gender", "."]
# ::lemmas ["oh", ".", "that", "make", "it", "fine", "and", "dandy", ".", "multi", "-", "faith", "and", "bugger", "multi", "-", "gender", "."]
(c13-1 / multi-sentence
       :snt1 (c13-4 / oh
                    :mode expressive)
       :snt2 (c13-8 / make-02
                    :ARG0 (c13-11 / that)
                    :ARG1 (c13-12 / and
                                  :op1 (c13-0 / fine-04
                                              :ARG1 (c13-6 / it))
                                  :op2 (c13-9 / dandy
                                              :domain c13-6)))
       :snt3 (c13-5 / and
                    :op1 (c13-7 / faith
                                :quant (c13-2 / multiple))
                    :op2 (c13-3 / bugger
                                :quant (c13-10 / multiple))))

# ::snt shhh, shhh... you're done now.
# ::tokens ["shhh", ",", "shhh", "...", "you", "'re", "done", "now", "."]
# ::lemmas ["shhh", ",", "shhh", "...", "you", "be", "do", "now", "."]
(c14-3 / be-done-08
       :ARG0 (c14-1 / you)
       :time (c14-0 / now)
       :mod (c14-2 / shhh
                   :mode expressive))

# ::snt I'm very confused with this person, Keegs.
# ::tokens ["I", "'m", "very", "confused", "with", "this", "person", ",", "Keegs", "."]
# ::lemmas ["i", "be", "very", "confused", "with", "this", "person", ",", "Keegs", "."]
(c15-5 / say-01
       :ARG0 (c15-0 / i)
       :ARG1 (c15-4 / confuse-01
                    :ARG1 c15-0
                    :ARG2 (c15-3 / person
                                 :mod (c15-6 / this))
                    :degree (c15-2 / very))
       :ARG2 (c15-7 / person
                    :name (c15-1 / name
                                 :op1 "Keegs")))

# ::snt disgusting.
# ::tokens ["disgusting", "."]
# ::lemmas ["disgusting", "."]
(c16-0 / disgust-01)

# ::snt not until the values of Hume, Spinoza, the Germans and the Greeks are restored to their proper place
# ::tokens ["not", "until", "the", "values", "of", "Hume", ",", "Spinoza", ",", "the", "Germans", "and", "the", "Greeks", "are", "restored", "to", "their", "proper", "place"]
# ::lemmas ["not", "until", "the", "value", "of", "Hume", ",", "Spinoza", ",", "the", "Germans", "and", "the", "Greeks", "be", "restore", "to", "their", "proper", "place"]
(c17-2 / be-temporally-at-91
       :ARG2 (c17-0 / until
                    :op1 (c17-7 / restore-02
                                :ARG1 (c17-5 / value
                                             :poss (c17-15 / and
                                                           :op1 (c17-6 / person
                                                                       :name (c17-4 / name
                                                                                    :op1 "Hume"))
                                                           :op2 (c17-14 / person
                                                                        :name (c17-8 / name
                                                                                     :op1 "Spinoza"))
                                                           :op3 (c17-1 / person
                                                                       :mod (c17-9 / country
                                                                                   :name (c17-10 / name
                                                                                                 :op1 "Germany")))
                                                           :op4 (c17-13 / person
                                                                        :mod c17-9
                                                                        :name (c17-11 / name
                                                                                      :op1 "Greece")))))
                    :ARG2 (c17-3 / place
                                 :poss c17-15
                                 :mod (c17-12 / proper)))
       :polarity -)

# ::snt appeaser
# ::tokens ["appeaser"]
# ::lemmas ["appeaser"]
(c18-1 / person
       :name (c18-0 / name
                    :op1 "appeaser"))

# ::snt have you taken your meds today?
# ::tokens ["have", "you", "taken", "your", "meds", "today", "?"]
# ::lemmas ["have", "you", "take", "your", "med", "today", "?"]
(c19-3 / take-01
       :polarity (c19-4 / amr-unknown)
       :ARG0 (c19-0 / you)
       :ARG1 (c19-1 / medication
                    :poss c19-0)
       :time (c19-2 / today))

# ::snt this warms my heart. Shattered it's taken this situation but nice to see some good like this
# ::tokens ["this", "warms", "my", "heart", ".", "Shattered", "it", "'s", "taken", "this", "situation", "but", "nice", "to", "see", "some", "good", "like", "this"]
# ::lemmas ["this", "warm", "my", "heart", ".", "shatter", "it", "be", "take", "this", "situation", "but", "nice", "to", "see", "some", "good", "like", "this"]
(c20-3 / multi-sentence
       :snt1 (c20-1 / warms-01
                    :ARG0 (c20-14 / this)
                    :ARG1 (c20-0 / heart
                                 :part-of (c20-6 / i)))
       :snt2 (c20-10 / contrast-01
                     :ARG1 (c20-12 / take-01
                                   :ARG1 (c20-13 / situation
                                                 :mod (c20-8 / this)))
                     :ARG2 (c20-7 / nice-01
                                  :ARG1 (c20-4 / see-01
                                               :ARG1 (c20-11 / good-02
                                                             :quant (c20-2 / some)
                                                             :ARG1-of (c20-9 / resemble-01
                                                                             :ARG2 (c20-5 / this)))))))

# ::snt this blokes a nuffy
# ::tokens ["this", "blokes", "a", "nuffy"]
# ::lemmas ["this", "bloke", "a", "nuffy"]
(c21-2 / bloke-01
       :ARG0 (c21-1 / this)
       :ARG1 (c21-0 / nuffy))

# ::snt Me to &amp; Im an atheist : I'll be honest, the multi-faith prayer vigil is making me a little teary.
# ::tokens ["Me", "to", "&", "amp", ";", "I", "m", "an", "atheist", ":", "I", "'ll", "be", "honest", ",", "the", "multi", "-", "faith", "prayer", "vigil", "is", "making", "me", "a", "little", "teary", "."]
# ::lemmas ["i", "to", "&", "amp", ";", "i", "m", "an", "atheist", ":", "i", "'ll", "be", "honest", ",", "the", "multi", "-", "faith", "prayer", "vigil", "be", "make", "i", "a", "little", "teary", "."]
(c22-2 / multi-sentence
       :snt1 (c22-11 / and
                     :op2 (c22-5 / atheist
                                 :domain (c22-6 / i)))
       :snt2 (c22-0 / honest-01
                    :ARG0 c22-6
                    :ARG1 (c22-8 / make-02
                                 :ARG0 (c22-7 / vigil
                                              :purpose (c22-9 / pray-01)
                                              :mod (c22-1 / faith
                                                          :quant (c22-3 / multi)))
                                 :ARG1 (c22-10 / teary-03
                                               :ARG1 c22-6
                                               :degree (c22-4 / little)))))

# ::snt Hey now! I don't want both your followers to turn against me.: keegs the try hard......try harder u fkin try hard lolzzzzz
# ::tokens ["Hey", "now", "!", "I", "do", "n't", "want", "both", "your", "followers", "to", "turn", "against", "me", ".", ":", "keegs", "the", "try", "hard", "......", "try", "harder", "u", "fkin", "try", "hard", "lolzzzzz"]
# ::lemmas ["hey", "now", "!", "i", "do", "not", "want", "both", "your", "follower", "to", "turn", "against", "i", ".", ":", "keegs", "the", "try", "hard", "......", "try", "hard", "u", "fkin", "try", "hard", "lolzzzzz"]
(c23-0 / multi-sentence
       :snt1 (c23-11 / want-01
                     :ARG0 (c23-12 / i)
                     :ARG1 (c23-21 / turn-01
                                   :ARG1 (c23-2 / person
                                                :ARG0-of (c23-6 / follow-02
                                                                :ARG1 (c23-18 / you))
                                                :mod (c23-8 / both))
                                   :prep-against c23-12)
                     :time (c23-9 / now)
                     :mod (c23-5 / hey
                                 :mode expressive)
                     :polarity -)
       :snt2 (c23-4 / and
                    :op1 (c23-20 / try-01
                                 :ARG0 (c23-17 / you)
                                 :ARG1-of (c23-3 / hard-02)
                                 :mode imperative)
                    :op2 (c23-13 / try-01
                                 :ARG0 c23-17
                                 :ARG1-of (c23-1 / hard-02
                                                 :ARG2-of (c23-16 / have-degree-91
                                                                  :ARG1 c23-13
                                                                  :ARG3 (c23-10 / more)))
                                 :mode imperative)
                    :op3 (c23-19 / try-01
                                 :ARG0 c23-17
                                 :ARG1-of (c23-7 / laugh-01
                                                 :ARG0 (c23-15 / i)
                                                 :manner (c23-14 / loud)
                                                 :mode expressive)
                                 :mode imperative)))

# ::snt It's okay. It just made no sense.
# ::tokens ["It", "'s", "okay", ".", "It", "just", "made", "no", "sense", "."]
# ::lemmas ["it", "be", "okay", ".", "it", "just", "make", "no", "sense", "."]
(c24-1 / multi-sentence
       :snt1 (c24-2 / okay-04
                    :ARG1 (c24-3 / it))
       :snt2 (c24-5 / sense-02
                    :ARG1 (c24-4 / it)
                    :mod (c24-0 / just)
                    :polarity -))

# ::snt . I'll be honest, t multi faith vigil with fancy dress grinning false martyr rabbis is making me a bit sick, f off &amp; get indoors ffs
# ::tokens [".", "I", "'ll", "be", "honest", ",", "t", "multi", "faith", "vigil", "with", "fancy", "dress", "grinning", "false", "martyr", "rabbis", "is", "making", "me", "a", "bit", "sick", ",", "f", "off", "&", "amp", ";", "get", "indoors", "ffs"]
# ::lemmas [".", "i", "'ll", "be", "honest", ",", "t", "multi", "faith", "vigil", "with", "fancy", "dress", "grin", "false", "martyr", "rabbis", "be", "make", "i", "a", "bit", "sick", ",", "f", "off", "&", "amp", ";", "get", "indoors", "ff"]
(c25-0 / multi-sentence
       :snt1 (c25-8 / honest-01
                    :ARG0 (c25-17 / i)
                    :ARG1 (c25-13 / make-02
                                  :ARG0 (c25-1 / vigil
                                               :mod (c25-9 / faith
                                                           :quant (c25-10 / multi))
                                               :accompanier (c25-3 / dress
                                                                   :mod (c25-20 / fancy))
                                               :mod (c25-2 / person
                                                           :mod (c25-16 / false)
                                                           :mod (c25-14 / religious-group
                                                                        :name (c25-12 / name
                                                                                      :op1 "Rabbi"))
                                                           :ARG0-of (c25-15 / grin-01)))
                                  :ARG1 (c25-5 / sick-05
                                               :ARG0 c25-1
                                               :ARG1 c25-17
                                               :degree (c25-11 / bit))))
       :snt2 (c25-7 / and
                    :op1 (c25-6 / f-off-and-amp)
                    :op2 (c25-4 / get-05
                                :ARG0 (c25-19 / you)
                                :ARG2 (c25-18 / indoors)
                                :mode imperative)))

# ::snt I apologise that they're including you in their tweet.
# ::tokens ["I", "apologise", "that", "they", "'re", "including", "you", "in", "their", "tweet", "."]
# ::lemmas ["i", "apologise", "that", "they", "be", "include", "you", "in", "their", "tweet", "."]
(c26-5 / apologize-01
       :ARG0 (c26-1 / i)
       :ARG1 (c26-2 / include-01
                    :ARG0 (c26-4 / they)
                    :ARG1 (c26-0 / you)
                    :ARG2 (c26-3 / tweet-01
                                 :ARG0 c26-4)))

# ::snt : I'll be honest, the multi-faith prayer vigil is making me a little teary. lip just quivered
# ::tokens [":", "I", "'ll", "be", "honest", ",", "the", "multi", "-", "faith", "prayer", "vigil", "is", "making", "me", "a", "little", "teary", ".", "lip", "just", "quivered"]
# ::lemmas [":", "i", "'ll", "be", "honest", ",", "the", "multi", "-", "faith", "prayer", "vigil", "be", "make", "i", "a", "little", "teary", ".", "lip", "just", "quiver"]
(c27-3 / multi-sentence
       :snt1 (c27-0 / honest-01
                    :ARG0 (c27-7 / i)
                    :ARG1 (c27-9 / make-02
                                 :ARG0 (c27-8 / vigil
                                              :purpose (c27-10 / pray-01)
                                              :mod (c27-2 / faith
                                                          :quant (c27-4 / multiple)))
                                 :ARG1 (c27-12 / teary-03
                                               :ARG1 c27-7
                                               :degree (c27-5 / little))))
       :snt2 (c27-6 / quiver-01
                    :ARG1 (c27-11 / lip)
                    :mod (c27-1 / just)))

# ::snt Not sure what's worse, your lack of humanity, or misspelling "you're": your not fooling anyone and islam is still toxic.
# ::tokens ["Not", "sure", "what", "'s", "worse", ",", "your", "lack", "of", "humanity", ",", "or", "misspelling", "\"", "you", "'re", "\"", ":", "your", "not", "fooling", "anyone", "and", "islam", "is", "still", "toxic", "."]
# ::lemmas ["not", "sure", "what", "be", "bad", ",", "your", "lack", "of", "humanity", ",", "or", "misspell", "\"", "you", "be", "\"", ":", "your", "not", "fool", "anyone", "and", "islam", "be", "still", "toxic", "."]
(c28-0 / multi-sentence
       :snt1 (c28-2 / sure-02
                    :ARG0 (c28-15 / i)
                    :ARG1 (c28-5 / have-degree-91
                                 :ARG1 (c28-17 / or
                                               :op1 (c28-6 / lack-01
                                                           :ARG0 (c28-16 / you)
                                                           :ARG1 (c28-4 / humanity))
                                               :op2 (c28-12 / misspelling-00
                                                            :ARG0 c28-16
                                                            :ARG1 (c28-18 / you)))
                                 :ARG2 (c28-9 / bad-07
                                              :ARG1 c28-17)
                                 :ARG3 (c28-7 / more))
                    :polarity -)
       :snt2 (c28-3 / and
                    :op1 (c28-8 / fool-01
                                :ARG0 (c28-1 / you)
                                :ARG1 (c28-14 / anyone)
                                :polarity -)
                    :op2 (c28-19 / toxic
                                 :domain (c28-13 / religious-group
                                                 :name (c28-11 / name
                                                               :op1 "Islam"))
                                 :mod (c28-10 / still))))

# ::snt what?
# ::tokens ["what", "?"]
# ::lemmas ["what", "?"]
(c29-0 / amr-unknown)
