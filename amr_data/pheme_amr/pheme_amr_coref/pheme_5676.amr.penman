# ::snt can someone please use a Polaroid lens filter, to take that glare out, so the image is clear?
# ::tokens ["can", "someone", "please", "use", "a", "Polaroid", "lens", "filter", ",", "to", "take", "that", "glare", "out", ",", "so", "the", "image", "is", "clear", "?"]
# ::lemmas ["can", "someone", "please", "use", "a", "Polaroid", "lens", "filter", ",", "to", "take", "that", "glare", "out", ",", "so", "the", "image", "be", "clear", "?"]
(c1-5 / possible-01
      :polarity (c1-12 / amr-unknown)
      :ARG1 (c1-2 / use-01
                  :ARG0 (c1-9 / someone)
                  :ARG1 (c1-0 / filter-02
                              :ARG2 (c1-1 / lens
                                          :mod (c1-11 / Polaroid)))
                  :ARG2 (c1-10 / take-out-11
                               :ARG0 c1-9
                               :ARG1 (c1-8 / thing
                                           :ARG0-of (c1-7 / glare-01)
                                           :mod (c1-4 / that))
                               :purpose (c1-6 / clear-08
                                              :ARG1 (c1-3 / image))))
      :polite +)

# ::snt looks like a goat fucker too me
# ::tokens ["looks", "like", "a", "goat", "fucker", "too", "me"]
# ::lemmas ["look", "like", "a", "goat", "fucker", "too", "i"]
(c2-1 / look-02
      :ARG1 (c2-0 / he)
      :ARG2 (c2-4 / person
                  :ARG0-of (c2-2 / fuck-01
                                 :ARG1 (c2-5 / goat)))
      :ARG3 (c2-3 / i)
      :mod (c2-6 / too))

# ::snt Probably a Muslim Nutter running solo?
# ::tokens ["Probably", "a", "Muslim", "Nutter", "running", "solo", "?"]
# ::lemmas ["probably", "a", "Muslim", "Nutter", "run", "solo", "?"]
(c3-3 / probable
      :domain (c3-4 / run-02
                    :ARG0 (c3-6 / person
                                :name (c3-1 / name
                                            :op1 "Nutter")
                                :mod (c3-0 / religious-group
                                           :name (c3-2 / name
                                                       :op1 "Muslim")))
                    :manner (c3-5 / solo))
      :polarity (c3-7 / amr-unknown))

# ::snt u would know would u?
# ::tokens ["u", "would", "know", "would", "u", "?"]
# ::lemmas ["u", "would", "know", "would", "u", "?"]
(c4-1 / know-01
      :ARG0 (c4-0 / you)
      :polarity (c4-2 / amr-unknown))

# ::snt just pure evilness!
# ::tokens ["just", "pure", "evilness", "!"]
# ::lemmas ["just", "pure", "evilness", "!"]
(c5-1 / evil
      :mod (c5-0 / just)
      :ARG1-of (c5-2 / pure-02)
      :mode expressive)

# ::snt seems like anyones dad or grandparent. All he has done is undone all the work minority groups have gained.
# ::tokens ["seems", "like", "anyones", "dad", "or", "grandparent", ".", "All", "he", "has", "done", "is", "undone", "all", "the", "work", "minority", "groups", "have", "gained", "."]
# ::lemmas ["seem", "like", "anyone", "dad", "or", "grandparent", ".", "all", "he", "have", "do", "be", "undo", "all", "the", "work", "minority", "group", "have", "gain", "."]
(c6-3 / multi-sentence
      :snt1 (c6-15 / seem-01
                   :ARG1 (c6-5 / or
                               :op1 (c6-9 / person
                                          :ARG0-of (c6-0 / have-rel-role-91
                                                         :ARG1 (c6-17 / anyone)
                                                         :ARG2 (c6-10 / dad)))
                               :op2 (c6-16 / person
                                           :ARG0-of (c6-2 / have-rel-role-91
                                                          :ARG1 c6-17
                                                          :ARG2 (c6-12 / grandparent)))))
      :snt2 (c6-4 / undo-01
                  :ARG1 (c6-1 / work-01
                              :ARG0 (c6-8 / he)
                              :mod (c6-6 / all)
                              :ARG1-of (c6-11 / gain-02
                                              :ARG0 (c6-7 / group
                                                          :mod (c6-13 / minority))))
                  :mod (c6-14 / all)))

# ::snt sniper the stucker. Can anyone shoot in Australia?
# ::tokens ["sniper", "the", "stucker", ".", "Can", "anyone", "shoot", "in", "Australia", "?"]
# ::lemmas ["sniper", "the", "stucker", ".", "can", "anyone", "shoot", "in", "Australia", "?"]
(c7-1 / multi-sentence
      :snt1 (c7-7 / sniper
                  :ARG1-of (c7-2 / stick-01))
      :snt2 (c7-5 / possible-01
                  :ARG1 (c7-0 / shoot-01
                              :ARG0 (c7-8 / anyone)
                              :location (c7-6 / country
                                              :name (c7-4 / name
                                                          :op1 "Australia")))
                  :polarity (c7-3 / amr-unknown)))

# ::snt I'm so ticked I can't think straight! Surely the US can borrow Australia a sniper and shot the this guy. Send a message!
# ::tokens ["I", "'m", "so", "ticked", "I", "ca", "n't", "think", "straight", "!", "Surely", "the", "US", "can", "borrow", "Australia", "a", "sniper", "and", "shot", "the", "this", "guy", ".", "Send", "a", "message", "!"]
# ::lemmas ["i", "be", "so", "tick", "i", "can", "not", "think", "straight", "!", "surely", "the", "US", "can", "borrow", "Australia", "a", "sniper", "and", "shoot", "the", "this", "guy", ".", "send", "a", "message", "!"]
(c8-0 / multi-sentence
      :snt1 (c8-21 / tick-03
                   :ARG0 (c8-1 / possible-01
                               :ARG1 (c8-20 / think-01
                                            :ARG0 (c8-13 / i)
                                            :ARG1-of (c8-3 / straight-04))
                               :polarity -)
                   :ARG1 c8-13
                   :ARG2-of (c8-6 / have-degree-91
                                  :ARG1 c8-13
                                  :ARG3 (c8-9 / so)
                                  :ARG6 (c8-4 / possible-01
                                              :ARG1 (c8-5 / and
                                                          :op1 (c8-7 / borrow-01
                                                                     :ARG0 (c8-19 / country
                                                                                  :name (c8-10 / name
                                                                                               :op1 "US"))
                                                                     :ARG1 (c8-17 / sniper)
                                                                     :ARG2 (c8-2 / country
                                                                                 :name (c8-18 / name
                                                                                              :op1 "Australia")))
                                                          :op2 (c8-8 / shoot-02
                                                                     :ARG0 c8-19
                                                                     :ARG1 (c8-12 / guy
                                                                                  :mod (c8-14 / this))))
                                              :polarity -)))
      :snt2 (c8-15 / send-01
                   :ARG0 (c8-16 / you)
                   :ARG1 (c8-11 / message-01)
                   :mode imperative))

# ::snt we can't call him a terrorist yet he dress like one and acts like one.
# ::tokens ["we", "ca", "n't", "call", "him", "a", "terrorist", "yet", "he", "dress", "like", "one", "and", "acts", "like", "one", "."]
# ::lemmas ["we", "can", "not", "call", "he", "a", "terrorist", "yet", "he", "dress", "like", "one", "and", "act", "like", "one", "."]
(c9-5 / contrast-01
      :ARG1 (c9-3 / possible-01
                  :ARG1 (c9-4 / call-01
                              :ARG0 (c9-1 / we)
                              :ARG1 (c9-0 / he)
                              :ARG2 (c9-7 / terrorist))
                  :polarity -)
      :ARG2 (c9-8 / and
                  :op1 (c9-6 / dress-01
                             :ARG0 c9-0
                             :ARG2 c9-7)
                  :op2 (c9-2 / act-01
                             :ARG0 c9-0
                             :ARG1 c9-7)))

# ::snt Put a bullet in him
# ::tokens ["Put", "a", "bullet", "in", "him"]
# ::lemmas ["put", "a", "bullet", "in", "he"]
(c10-2 / put-01
       :ARG0 (c10-1 / you)
       :ARG1 (c10-3 / bullet)
       :ARG2 (c10-0 / he)
       :mode imperative)

# ::snt you mean he's the hostage-taker, right?
# ::tokens ["you", "mean", "he", "'s", "the", "hostage", "-", "taker", ",", "right", "?"]
# ::lemmas ["you", "mean", "he", "be", "the", "hostage", "-", "taker", ",", "right", "?"]
(c11-2 / mean-01
       :ARG0 (c11-1 / you)
       :ARG2 (c11-3 / person
                    :ARG0-of (c11-5 / take-01
                                    :ARG1 (c11-0 / hostage))
                    :domain (c11-6 / he)
                    :ARG1-of (c11-4 / request-confirmation-91
                                    :ARG2 c11-1)))

# ::snt Looks like the barista staff member that "escaped"
# ::tokens ["Looks", "like", "the", "barista", "staff", "member", "that", "\"", "escaped", "\""]
# ::lemmas ["look", "like", "the", "barista", "staff", "member", "that", "\"", "escape", "\""]
(c12-1 / look-02
       :ARG1 (c12-5 / person
                    :ARG0-of (c12-0 / have-org-role-91
                                    :ARG1 (c12-3 / barista)
                                    :ARG2 (c12-2 / member
                                                 :ARG2-of (c12-6 / staff-01)))
                    :ARG0-of (c12-4 / escape-01)))

# ::snt Grainy pic yes of the hostage taker. What are the demands?
# ::tokens ["Grainy", "pic", "yes", "of", "the", "hostage", "taker", ".", "What", "are", "the", "demands", "?"]
# ::lemmas ["Grainy", "pic", "yes", "of", "the", "hostage", "taker", ".", "what", "be", "the", "demand", "?"]
(c13-1 / multi-sentence
       :snt1 (c13-3 / picture
                    :mod (c13-5 / country
                                :name (c13-2 / name
                                             :op1 "Grainy"))
                    :topic (c13-7 / person
                                  :ARG0-of (c13-6 / taker-01
                                                  :ARG1 (c13-0 / hostage))))
       :snt2 (c13-4 / demand-01
                    :ARG1 (c13-8 / amr-unknown)))

# ::snt did he come here on a illegal boat?
# ::tokens ["did", "he", "come", "here", "on", "a", "illegal", "boat", "?"]
# ::lemmas ["do", "he", "come", "here", "on", "a", "illegal", "boat", "?"]
(c14-4 / come-01
       :ARG1 (c14-0 / he)
       :ARG4 (c14-1 / here)
       :polarity (c14-5 / amr-unknown)
       :manner (c14-3 / boat
                      :ARG1-of (c14-2 / legal-02
                                      :polarity -)))

# ::snt doing what he is doing I'd say most definantly
# ::tokens ["doing", "what", "he", "is", "doing", "I", "'d", "say", "most", "definantly"]
# ::lemmas ["do", "what", "he", "be", "do", "i", "would", "say", "most", "definantly"]
(c15-4 / do-02
       :ARG0 (c15-0 / he)
       :ARG1 (c15-6 / thing
                    :ARG1-of (c15-1 / do-02
                                    :ARG0 c15-0))
       :ARG1-of (c15-7 / have-degree-91
                       :ARG2 (c15-8 / definite)
                       :ARG3 (c15-2 / most)
                       :ARG1-of (c15-5 / say-01
                                       :ARG0 (c15-3 / i))))

# ::snt what and no marksman.
# ::tokens ["what", "and", "no", "marksman", "."]
# ::lemmas ["what", "and", "no", "marksman", "."]
(c16-2 / and
       :op1 (c16-1 / thing)
       :op2 (c16-0 / marksman
                   :polarity -))

# ::snt That face is definitely .I know, " 's not stereotype "
# ::tokens ["That", "face", "is", "definitely", ".I", "know", ",", "\"", "'s", "not", "stereotype", "\""]
# ::lemmas ["that", "face", "be", "definitely", ".i", "know", ",", "\"", "be", "not", "stereotype", "\""]
(c17-2 / definite
       :domain (c17-3 / stereotype-01
                      :ARG2 (c17-4 / that)
                      :polarity -)
       :ARG1-of (c17-1 / know-01
                       :ARG0 (c17-0 / i)))

# ::snt cos u would know?
# ::tokens ["cos", "u", "would", "know", "?"]
# ::lemmas ["cos", "u", "would", "know", "?"]
(c18-1 / know-01
       :polarity (c18-2 / amr-unknown)
       :ARG0 (c18-0 / you))
