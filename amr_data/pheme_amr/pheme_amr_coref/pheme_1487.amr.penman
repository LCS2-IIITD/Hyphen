# ::snt Sydney thought they were safe. Apparently any nation that backs US interests in Middle East are not!
# ::tokens ["Sydney", "thought", "they", "were", "safe", ".", "Apparently", "any", "nation", "that", "backs", "US", "interests", "in", "Middle", "East", "are", "not", "!"]
# ::lemmas ["Sydney", "think", "they", "be", "safe", ".", "apparently", "any", "nation", "that", "back", "US", "interest", "in", "Middle", "East", "be", "not", "!"]
(c1-2 / multi-sentence
      :snt1 (c1-14 / think-01
                   :ARG0 (c1-8 / person
                               :name (c1-6 / name
                                           :op1 "Sydney"))
                   :ARG1 (c1-13 / safe-01
                                :ARG1 (c1-12 / they)))
      :snt2 (c1-0 / have-polarity-91
                  :ARG1 (c1-7 / nation
                              :mod (c1-15 / any)
                              :ARG0-of (c1-3 / back-01
                                             :ARG1 (c1-5 / interest-01
                                                         :ARG1 (c1-10 / country
                                                                      :name (c1-9 / name
                                                                                  :op1 "US"))
                                                         :ARG2 (c1-1 / world-region
                                                                     :name (c1-11 / name
                                                                                  :op1 "Middle"
                                                                                  :op2 "East")))))
                  :ARG1-of (c1-4 / appear-02)
                  :ARG2 -))

# ::snt looks like a bitch
# ::tokens ["looks", "like", "a", "bitch"]
# ::lemmas ["look", "like", "a", "bitch"]
(c2-0 / look-02
      :ARG1 (c2-1 / bitch))

# ::snt There is no Iranian refugee holding hostages in Australia since President Obama says there is no Islamic terrorism. ISIL on the run
# ::tokens ["There", "is", "no", "Iranian", "refugee", "holding", "hostages", "in", "Australia", "since", "President", "Obama", "says", "there", "is", "no", "Islamic", "terrorism", ".", "ISIL", "on", "the", "run"]
# ::lemmas ["there", "be", "no", "Iranian", "refugee", "hold", "hostage", "in", "Australia", "since", "President", "Obama", "say", "there", "be", "no", "Islamic", "terrorism", ".", "isil", "on", "the", "run"]
(c4-0 / multi-sentence
      :snt1 (c4-10 / hold-01
                   :ARG0 (c4-13 / refugee
                                :mod (c4-17 / country
                                            :name (c4-12 / name
                                                         :op1 "Iran")))
                   :ARG1 (c4-9 / hostage)
                   :location (c4-5 / country
                                   :name (c4-16 / name
                                                :op1 "Australia"))
                   :ARG1-of (c4-14 / cause-01
                                   :ARG0 (c4-7 / say-01
                                               :ARG0 (c4-4 / person
                                                           :name (c4-2 / name
                                                                       :op1 "Obama")
                                                           :ARG0-of (c4-3 / have-org-role-91
                                                                          :ARG2 (c4-8 / president)))
                                               :ARG1 (c4-18 / terrorism
                                                            :mod (c4-1 / religious-group
                                                                       :name (c4-6 / name
                                                                                   :op1 "Islamic"))
                                                            :polarity -)))
                   :polarity -)
      :snt2 (c4-11 / run-16
                   :ARG0 (c4-15 / criminal-organization
                                :name (c4-19 / name
                                             :op1 "ISI"))))

# ::snt pretty sure if some muslim POS tried this in my town he would deal with armed citizens.
# ::tokens ["pretty", "sure", "if", "some", "muslim", "POS", "tried", "this", "in", "my", "town", "he", "would", "deal", "with", "armed", "citizens", "."]
# ::lemmas ["pretty", "sure", "if", "some", "muslim", "POS", "try", "this", "in", "my", "town", "he", "would", "deal", "with", "armed", "citizen", "."]
(c5-11 / sure-02
       :ARG0 (c5-3 / i)
       :ARG1 (c5-8 / deal-01
                   :ARG0 (c5-6 / person
                               :mod (c5-7 / religious-group
                                          :name (c5-4 / name
                                                      :op1 "Muslim"))
                               :mod (c5-2 / some)
                               :ARG0-of (c5-13 / post-01
                                               :manner (c5-1 / original)))
                   :ARG1 (c5-9 / citizen
                               :ARG1-of (c5-14 / arm-01))
                   :condition (c5-12 / try-01
                                     :ARG0 c5-6
                                     :ARG1 (c5-10 / this)
                                     :location (c5-5 / town
                                                     :poss c5-3)))
       :degree (c5-0 / pretty))

# ::snt ugh, another bearded piece of shit.
# ::tokens ["ugh", ",", "another", "bearded", "piece", "of", "shit", "."]
# ::lemmas ["ugh", ",", "another", "bearded", "piece", "of", "shit", "."]
(c6-2 / piece
      :mod (c6-3 / shit)
      :ARG1-of (c6-1 / beard-01)
      :mod (c6-4 / another)
      :mod (c6-0 / ugh
                 :mode expressive))

# ::snt treated the way they must be treated...take a lesson from the Aussies...kill barbarians...keep the peace...they aren't "peaceful".
# ::tokens ["treated", "the", "way", "they", "must", "be", "treated", "...", "take", "a", "lesson", "from", "the", "Aussies", "...", "kill", "barbarians", "...", "keep", "the", "peace", "...", "they", "are", "n't", "\"", "peaceful", "\"", "."]
# ::lemmas ["treat", "the", "way", "they", "must", "be", "treat", "...", "take", "a", "lesson", "from", "the", "Aussies", "...", "kill", "barbarian", "...", "keep", "the", "peace", "...", "they", "be", "not", "\"", "peaceful", "\"", "."]
(c7-15 / and
       :op1 (c7-13 / treat-01
                   :ARG1 (c7-12 / they)
                   :manner (c7-0 / way
                                 :ARG2-of (c7-9 / treat-01
                                                :ARG1 c7-12
                                                :ARG2-of (c7-4 / obligate-01))))
       :op2 (c7-6 / take-01
                  :ARG0 (c7-1 / you)
                  :ARG1 (c7-2 / lesson)
                  :ARG2 (c7-10 / person
                               :mod (c7-11 / country
                                           :name (c7-8 / name
                                                       :op1 "Australia")))
                  :mode imperative)
       :op3 (c7-7 / kill-01
                  :ARG0 c7-1
                  :ARG1 (c7-3 / barbarian)
                  :mode imperative)
       :op4 (c7-5 / keep-02
                  :ARG0 c7-1
                  :ARG1 (c7-14 / peace
                               :op5-of c7-15)
                  :mode imperative)
       :domain c7-12)

# ::snt hang his ass
# ::tokens ["hang", "his", "ass"]
# ::lemmas ["hang", "his", "ass"]
(c8-0 / hang-01
      :ARG1 (c8-2 / ass
                  :part-of (c8-1 / he)))

# ::snt Really another slimey Islamist! ?
# ::tokens ["Really", "another", "slimey", "Islamist", "!", "?"]
# ::lemmas ["really", "another", "slimey", "Islamist", "!", "?"]
(c9-3 / person
      :polarity (c9-6 / amr-unknown)
      :mod (c9-4 / religious-group
                 :name (c9-2 / name
                             :op1 "Islamism"))
      :mod (c9-0 / another)
      :mod (c9-5 / slimey)
      :ARG1-of (c9-1 / real-04))

# ::snt . "With ties to ISIS". Took long enough to get that out.
# ::tokens [".", "\"", "With", "ties", "to", "ISIS", "\"", ".", "Took", "long", "enough", "to", "get", "that", "out", "."]
# ::lemmas [".", "\"", "with", "tie", "to", "ISIS", "\"", ".", "take", "long", "enough", "to", "get", "that", "out", "."]
(c10-2 / multi-sentence
       :snt1 (c10-10 / tie-01
                     :ARG2 (c10-7 / criminal-organization
                                  :name (c10-5 / name
                                               :op1 "Islamic"
                                               :op2 "organization")))
       :snt2 (c10-9 / take-10
                    :ARG0 (c10-8 / get-05
                                 :ARG1 (c10-6 / that)
                                 :ARG2 (c10-3 / out))
                    :ARG1 (c10-1 / long-03
                                 :ARG2-of (c10-0 / have-degree-91
                                                 :ARG1 c10-8
                                                 :ARG3 (c10-4 / enough)))))

# ::snt Sniper take him out.
# ::tokens ["Sniper", "take", "him", "out", "."]
# ::lemmas ["sniper", "take", "he", "out", "."]
(c11-2 / take-out-11
       :ARG0 (c11-0 / sniper)
       :ARG1 (c11-1 / he))

# ::snt Gee isn't he cute,quick someone call the terrorist needs some empathy
# ::tokens ["Gee", "is", "n't", "he", "cute", ",", "quick", "someone", "call", "the", "terrorist", "needs", "some", "empathy"]
# ::lemmas ["Gee", "be", "not", "he", "cute", ",", "quick", "someone", "call", "the", "terrorist", "need", "some", "empathy"]
(c12-10 / and
        :op1 (c12-6 / cute
                    :domain (c12-0 / he)
                    :mod (c12-7 / gee
                                :mode expressive)
                    :polarity -)
        :op2 (c12-4 / need-01
                    :ARG0 (c12-8 / someone
                                 :ARG0-of (c12-5 / call-02
                                                 :ARG1 (c12-9 / terrorist))
                                 :ARG1-of (c12-2 / quick-02))
                    :ARG1 (c12-1 / empathize-01
                                 :ARG0 c12-8
                                 :quant (c12-3 / some))))

# ::snt Give this Son of A Goat Humper a One Way Ticket To His Virgin Goats.
# ::tokens ["Give", "this", "Son", "of", "A", "Goat", "Humper", "a", "One", "Way", "Ticket", "To", "His", "Virgin", "Goats", "."]
# ::lemmas ["give", "this", "Son", "of", "A", "Goat", "Humper", "a", "One", "way", "ticket", "to", "his", "Virgin", "Goats", "."]
(c14-7 / give-01
       :ARG0 (c14-1 / you)
       :ARG1 (c14-10 / ticket
                     :mod (c14-2 / one-way))
       :ARG2 (c14-5 / person
                    :ARG0-of (c14-0 / have-rel-role-91
                                    :ARG1 (c14-11 / Humper
                                                  :mod (c14-6 / goat))
                                    :ARG2 (c14-9 / son))
                    :mod (c14-8 / this))
       :ARG3 (c14-3 / goat
                    :mod (c14-4 / virgin)
                    :poss c14-5)
       :mode imperative)

# ::snt : Man Haron Monis ID'd as gunman holding captives in . PINK MIST!
# ::tokens [":", "Man", "Haron", "Monis", "ID'd", "as", "gunman", "holding", "captives", "in", ".", "PINK", "MIST", "!"]
# ::lemmas [":", "man", "Haron", "Monis", "id'd", "as", "gunman", "hold", "captive", "in", ".", "PINK", "MIST", "!"]
(c15-1 / multi-sentence
       :snt1 (c15-2 / identify-01
                    :ARG1 (c15-4 / man
                                 :name (c15-3 / name
                                              :op1 "Haron"
                                              :op2 "Monis"))
                    :ARG2 (c15-7 / gunman
                                 :ARG0-of (c15-0 / hold-01
                                                 :ARG1 (c15-6 / captive)
                                                 :location (c15-8 / inside))))
       :snt2 (c15-5 / pussy
                    :mode expressive))

# ::snt why didn't they snipe him? They had clear shots
# ::tokens ["why", "did", "n't", "they", "snipe", "him", "?", "They", "had", "clear", "shots"]
# ::lemmas ["why", "do", "not", "they", "snipe", "he", "?", "they", "have", "clear", "shot"]
(c16-2 / multi-sentence
       :snt1 (c16-5 / cause-01
                    :ARG0 (c16-9 / amr-unknown)
                    :ARG1 (c16-7 / snipe-01
                                 :ARG0 (c16-8 / they)
                                 :ARG1 (c16-0 / he)
                                 :polarity -))
       :snt2 (c16-1 / have-03
                    :ARG0 (c16-6 / they)
                    :ARG1 (c16-3 / shoot-01
                                 :ARG1-of (c16-4 / clear-06))))

# ::snt thank you gun control, law abiding people defenseless. ISIS will never survive in a free &amp; armed Amdt state. God Bless America.
# ::tokens ["thank", "you", "gun", "control", ",", "law", "abiding", "people", "defenseless", ".", "ISIS", "will", "never", "survive", "in", "a", "free", "&", "amp", ";", "armed", "Amdt", "state", ".", "God", "Bless", "America", "."]
# ::lemmas ["thank", "you", "gun", "control", ",", "law", "abide", "people", "defenseless", ".", "ISIS", "will", "never", "survive", "in", "a", "free", "&", "amp", ";", "armed", "Amdt", "state", ".", "God", "Bless", "America", "."]
(c17-0 / multi-sentence
       :snt1 (c17-20 / thank-01
                     :ARG0 (c17-14 / i)
                     :ARG1 (c17-17 / you)
                     :ARG2 (c17-19 / control-01
                                   :ARG0 c17-17
                                   :ARG1 (c17-12 / gun)))
       :snt2 (c17-5 / survive-01
                    :ARG0 (c17-4 / criminal-organization
                                 :name (c17-11 / name
                                               :op1 "Islamic"
                                               :op2 "organization"))
                    :time (c17-9 / ever)
                    :location (c17-10 / state
                                      :ARG1-of (c17-7 / free-04)
                                      :mod (c17-6 / amp)
                                      :ARG1-of (c17-13 / arm-01)
                                      :location (c17-15 / city
                                                        :name (c17-18 / name
                                                                      :op1 "Amdt")
                                                        :location (c17-16 / country
                                                                          :name (c17-1 / name
                                                                                       :op1 "America"))))
                    :polarity -)
       :snt3 (c17-8 / bless-01
                    :ARG0 (c17-3 / person
                                 :name (c17-2 / name
                                              :op1 "God"))
                    :ARG1 c17-16
                    :name (c17-21 / name
                                  :op1 "America")))

# ::snt : Man Haron Monis ID'd as gunman holding captives in . DETAILS
# ::tokens [":", "Man", "Haron", "Monis", "ID'd", "as", "gunman", "holding", "captives", "in", ".", "DETAILS"]
# ::lemmas [":", "man", "Haron", "Monis", "id'd", "as", "gunman", "hold", "captive", "in", ".", "DETAILS"]
(c18-1 / multi-sentence
       :snt1 (c18-2 / identify-01
                    :ARG1 (c18-4 / man
                                 :name (c18-3 / name
                                              :op1 "Haron"
                                              :op2 "Monis"))
                    :ARG2 (c18-7 / gunman
                                 :ARG0-of (c18-0 / hold-01
                                                 :ARG1 (c18-6 / captive))))
       :snt2 (c18-8 / thing
                    :ARG2-of (c18-5 / ditch-01)))

# ::snt :Why the background dark but its light in his glasses.
# ::tokens [":", "Why", "the", "background", "dark", "but", "its", "light", "in", "his", "glasses", "."]
# ::lemmas [":", "why", "the", "background", "dark", "but", "its", "light", "in", "his", "glass", "."]
(c19-5 / cause-01
       :ARG0 (c19-7 / amr-unknown)
       :ARG1 (c19-4 / dark-02
                    :ARG1 (c19-2 / background)
                    :ARG1-of (c19-3 / contrast-01
                                    :ARG2 (c19-1 / light
                                                 :location (c19-6 / glasses
                                                                  :poss (c19-0 / he))
                                                 :domain c19-2))))
