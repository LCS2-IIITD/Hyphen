# ::snt Everyone always wants to blame the cops. Cops are usually right.
# ::tokens ["Everyone", "always", "wants", "to", "blame", "the", "cops", ".", "Cops", "are", "usually", "right", "."]
# ::lemmas ["everyone", "always", "want", "to", "blame", "the", "cop", ".", "cop", "be", "usually", "right", "."]
(c1-1 / multi-sentence
      :snt1 (c1-0 / want-01
                  :ARG0 (c1-4 / everyone)
                  :ARG1 (c1-3 / blame-01
                              :ARG0 c1-4
                              :ARG1 (c1-6 / cop))
                  :time (c1-8 / always))
      :snt2 (c1-5 / right-06
                  :ARG1 (c1-7 / cop)
                  :mod (c1-2 / usual)))

# ::snt I imagine it's kind of nerve racking
# ::tokens ["I", "imagine", "it", "'s", "kind", "of", "nerve", "racking"]
# ::lemmas ["i", "imagine", "it", "be", "kind", "of", "nerve", "racking"]
(c2-2 / imagine-01
      :ARG0 (c2-4 / i)
      :ARG1 (c2-0 / wrack-01
                  :ARG1 (c2-3 / nerve)
                  :degree (c2-5 / kind-of)
                  :domain (c2-1 / it)))

# ::snt Look, he stole $50 box of cigars and was stopped by a black cop walking down the middle of street. That so bad?
# ::tokens ["Look", ",", "he", "stole", "$", "50", "box", "of", "cigars", "and", "was", "stopped", "by", "a", "black", "cop", "walking", "down", "the", "middle", "of", "street", ".", "That", "so", "bad", "?"]
# ::lemmas ["look", ",", "he", "steal", "$", "50", "box", "of", "cigar", "and", "be", "stop", "by", "a", "black", "cop", "walk", "down", "the", "middle", "of", "street", ".", "that", "so", "bad", "?"]
(c3-0 / multi-sentence
      :snt1 (c3-6 / look-01
                  :ARG0 (c3-14 / you)
                  :ARG1 (c3-4 / and
                              :op1 (c3-3 / steal-01
                                         :ARG0 (c3-5 / he)
                                         :ARG1 (c3-16 / cigar
                                                      :quant (c3-7 / box
                                                                   :quant 50)))
                              :op2 (c3-9 / stop-01
                                         :ARG0 (c3-1 / cop
                                                     :ARG1-of (c3-13 / black-05)
                                                     :ARG0-of (c3-11 / walk-01
                                                                     :ARG2 (c3-15 / street
                                                                                  :mod (c3-10 / middle))
                                                                     :direction (c3-2 / down)))
                                         :ARG1 c3-5))
                  :mode imperative)
      :snt2 (c3-17 / bad-07
                   :ARG1 (c3-18 / that)
                   :degree (c3-8 / so)
                   :polarity (c3-12 / amr-unknown)))

# ::snt lets finish this convo once the FBI/DOJ/local investigations have ended.
# ::tokens ["lets", "finish", "this", "convo", "once", "the", "FBI", "/", "DOJ", "/", "local", "investigations", "have", "ended", "."]
# ::lemmas ["let", "finish", "this", "convo", "once", "the", "FBI", "/", "DOJ", "/", "local", "investigation", "have", "end", "."]
(c4-1 / finish-01
      :ARG0 (c4-0 / we)
      :ARG1 (c4-8 / converse-01
                  :ARG0 c4-0
                  :mod (c4-11 / this))
      :time (c4-3 / end-01
                  :ARG1 (c4-4 / investigate-01
                              :ARG0 (c4-10 / slash
                                           :op1 (c4-9 / government-organization
                                                      :name (c4-5 / name
                                                                  :op1 "FBI"))
                                           :op2 (c4-7 / government-organization
                                                      :name (c4-6 / name
                                                                  :op1 "DOJ"))
                                           :op3 (c4-2 / local-02))))
      :mode imperative)

# ::snt Mike Brown was '4 and nearly lbs. We don't know how big the officer was.It may have been the only option
# ::tokens ["Mike", "Brown", "was", "'", "4", "and", "nearly", "lbs", ".", "We", "do", "n't", "know", "how", "big", "the", "officer", "was", ".", "It", "may", "have", "been", "the", "only", "option"]
# ::lemmas ["Mike", "Brown", "be", "'", "4", "and", "nearly", "lb", ".", "we", "do", "not", "know", "how", "big", "the", "officer", "be", ".", "it", "may", "have", "be", "the", "only", "option"]
(c5-0 / multi-sentence
      :snt1 (c5-4 / and
                  :op1 (c5-19 / tall
                              :quant (c5-8 / nearly
                                           :op1 (c5-9 / mass-quantity
                                                      :unit (c5-2 / pound)
                                                      :quant 4))
                              :domain (c5-3 / person
                                            :name (c5-17 / name
                                                         :op1 "Mike"
                                                         :op2 "Brown")))
                  :op2 (c5-12 / weigh-01
                              :ARG1 c5-3
                              :ARG3 c5-8
                              :op1 (c5-5 / mass-quantity
                                         :unit (c5-6 / pound)
                                         :quant 1)))
      :snt2 (c5-14 / know-01
                   :ARG0 (c5-1 / we)
                   :ARG1 (c5-18 / thing
                                :degree-of (c5-7 / big
                                                 :domain (c5-16 / officer)))
                   :polarity -)
      :snt3 (c5-11 / possible-01
                   :ARG1 (c5-15 / option
                                :mod (c5-10 / only)
                                :domain (c5-13 / it))))

# ::snt I'm sure that was the plan until a very large man assaulted, ran, and then charged him again.
# ::tokens ["I", "'m", "sure", "that", "was", "the", "plan", "until", "a", "very", "large", "man", "assaulted", ",", "ran", ",", "and", "then", "charged", "him", "again", "."]
# ::lemmas ["i", "be", "sure", "that", "be", "the", "plan", "until", "a", "very", "large", "man", "assault", ",", "run", ",", "and", "then", "charge", "he", "again", "."]
(c6-11 / sure-02
       :ARG0 (c6-4 / i)
       :ARG1 (c6-6 / plan-01
                   :ARG1 (c6-12 / that)
                   :time (c6-2 / until
                               :op1 (c6-13 / and
                                           :op1 (c6-3 / assault-01
                                                      :ARG1 (c6-1 / man
                                                                  :mod (c6-0 / large
                                                                             :degree (c6-5 / very))))
                                           :op2 (c6-7 / run-02
                                                      :ARG0 c6-1)
                                           :op3 (c6-8 / charge-05
                                                      :ARG0 c6-1
                                                      :ARG1 c6-1
                                                      :mod (c6-9 / again)
                                                      :time (c6-10 / then))))))

# ::snt Kid was a dumb thug but stealing cigars shouldn't get him the death penalty
# ::tokens ["Kid", "was", "a", "dumb", "thug", "but", "stealing", "cigars", "should", "n't", "get", "him", "the", "death", "penalty"]
# ::lemmas ["Kid", "be", "a", "dumb", "thug", "but", "steal", "cigar", "should", "not", "get", "he", "the", "death", "penalty"]
(c7-5 / contrast-01
      :ARG1 (c7-6 / thug
                  :mod (c7-4 / dumb)
                  :domain (c7-1 / kid))
      :ARG2 (c7-3 / recommend-01
                  :ARG1 (c7-2 / penalize-01
                              :ARG0 c7-1
                              :manner (c7-0 / die-01))
                  :polarity -))

# ::snt What are you talking about? If you attack a cop, the cop has to right to defend himself.
# ::tokens ["What", "are", "you", "talking", "about", "?", "If", "you", "attack", "a", "cop", ",", "the", "cop", "has", "to", "right", "to", "defend", "himself", "."]
# ::lemmas ["what", "be", "you", "talk", "about", "?", "if", "you", "attack", "a", "cop", ",", "the", "cop", "have", "to", "right", "to", "defend", "himself", "."]
(c8-1 / multi-sentence
      :snt1 (c8-7 / talk-01
                  :ARG0 (c8-0 / you)
                  :ARG1 (c8-8 / amr-unknown))
      :snt2 (c8-2 / obligate-01
                  :ARG1 (c8-5 / cop)
                  :ARG2 (c8-4 / defend-01
                              :ARG0 c8-5
                              :ARG1 c8-5)
                  :condition (c8-3 / attack-01
                                   :ARG0 (c8-6 / you)
                                   :ARG1 c8-5)))

# ::snt Thank you Alexis!
# ::tokens ["Thank", "you", "Alexis", "!"]
# ::lemmas ["thank", "you", "Alexis", "!"]
(c9-3 / say-01
      :ARG1 (c9-4 / thank-01
                  :ARG0 (c9-0 / i)
                  :ARG1 (c9-2 / person
                              :name (c9-1 / name
                                          :op1 "Alexis")
                              :ARG2-of c9-3)))

# ::snt The thug should not have tried to take the cops gun.
# ::tokens ["The", "thug", "should", "not", "have", "tried", "to", "take", "the", "cops", "gun", "."]
# ::lemmas ["the", "thug", "should", "not", "have", "try", "to", "take", "the", "cop", "gun", "."]
(c10-1 / recommend-01
       :ARG1 (c10-5 / try-01
                    :ARG0 (c10-4 / thug)
                    :ARG1 (c10-0 / take-01
                                 :ARG0 c10-4
                                 :ARG1 (c10-3 / gun
                                              :poss (c10-2 / cop))))
       :polarity -)

# ::snt I didn't know robbery was justified by shooting him + times while he was unarmed????
# ::tokens ["I", "did", "n't", "know", "robbery", "was", "justified", "by", "shooting", "him", "+", "times", "while", "he", "was", "unarmed", "?", "?", "?", "?"]
# ::lemmas ["i", "do", "not", "know", "robbery", "be", "justify", "by", "shoot", "he", "+", "time", "while", "he", "be", "unarmed", "?", "?", "?", "?"]
(c11-7 / know-01
       :ARG0 (c11-4 / i)
       :ARG1 (c11-0 / justify-01
                    :ARG1 (c11-5 / rob-01)
                    :ARG2 (c11-6 / shoot-02
                                 :ARG1 (c11-1 / he)
                                 :quant (c11-2 / more-than
                                               :op1 1)
                                 :time (c11-8 / arm-01
                                              :ARG1 c11-1
                                              :polarity -)))
       :polarity (c11-3 / amr-unknown)
       :polarity -)

# ::snt have you tried arresting a lb primate charging you with a lit cigar lately?
# ::tokens ["have", "you", "tried", "arresting", "a", "lb", "primate", "charging", "you", "with", "a", "lit", "cigar", "lately", "?"]
# ::lemmas ["have", "you", "try", "arrest", "a", "lb", "primate", "charge", "you", "with", "a", "light", "cigar", "lately", "?"]
(c12-8 / try-01
       :ARG0 (c12-0 / you)
       :ARG1 (c12-10 / arrest-01
                     :ARG0 c12-0
                     :ARG1 (c12-4 / primate
                                  :quant (c12-2 / mass-quantity
                                                :unit (c12-9 / pound)
                                                :quant 1))
                     :ARG2 (c12-6 / charge-01
                                  :ARG0 c12-4
                                  :ARG1 c12-0
                                  :ARG2 (c12-5 / cigar
                                               :ARG1-of (c12-1 / light-06))))
       :polarity (c12-3 / amr-unknown)
       :time (c12-7 / lately))

# ::snt Going for an officer's gun should...
# ::tokens ["Going", "for", "an", "officer", "'s", "gun", "should", "..."]
# ::lemmas ["go", "for", "an", "officer", "'s", "gun", "should", "..."]
(c13-2 / recommend-01
       :ARG1 (c13-4 / go-03
                    :ARG1 (c13-0 / you)
                    :ARG4 (c13-3 / gun
                                 :poss (c13-1 / officer))))

# ::snt if they do it will be with class. Nieman Marcus watch out!
# ::tokens ["if", "they", "do", "it", "will", "be", "with", "class", ".", "Nieman", "Marcus", "watch", "out", "!"]
# ::lemmas ["if", "they", "do", "it", "will", "be", "with", "class", ".", "Nieman", "Marcus", "watch", "out", "!"]
(c14-1 / multi-sentence
       :snt1 (c14-2 / it
                    :condition (c14-5 / do-02
                                      :ARG0 (c14-7 / they))
                    :accompanier (c14-6 / class))
       :snt2 (c14-0 / watch-out-02
                    :ARG0 (c14-4 / person
                                 :name (c14-3 / name
                                              :op1 "Nieman"
                                              :op2 "Marcus"))
                    :mode imperative))

# ::snt He charged a cop, according to an eyewitness.
# ::tokens ["He", "charged", "a", "cop", ",", "according", "to", "an", "eyewitness", "."]
# ::lemmas ["he", "charge", "a", "cop", ",", "accord", "to", "an", "eyewitness", "."]
(c15-4 / say-01
       :ARG0 (c15-1 / eyewitness)
       :ARG1 (c15-3 / charge-05
                    :ARG0 (c15-0 / he)
                    :ARG1 (c15-2 / cop)))

# ::snt if white ppl do riot you can bet it won't be burning their own neighborhood.
# ::tokens ["if", "white", "ppl", "do", "riot", "you", "can", "bet", "it", "wo", "n't", "be", "burning", "their", "own", "neighborhood", "."]
# ::lemmas ["if", "white", "ppl", "do", "riot", "you", "can", "bet", "it", "will", "not", "be", "burn", "their", "own", "neighborhood", "."]
(c16-4 / possible-01
       :ARG1 (c16-2 / bet-01
                    :ARG0 (c16-0 / you)
                    :ARG2 (c16-6 / burn-01
                                 :ARG1 (c16-3 / neighborhood
                                              :poss (c16-7 / person
                                                           :ARG1-of (c16-1 / white-02)))
                                 :polarity -)
                    :condition (c16-5 / riot-01
                                      :ARG0 c16-7)))

# ::snt lol. Really fucking nice
# ::tokens ["lol", ".", "Really", "fucking", "nice"]
# ::lemmas ["lol", ".", "really", "fuck", "nice"]
(c17-3 / nice-01
       :ARG1 (c17-2 / event)
       :degree (c17-4 / really)
       :mod (c17-1 / fucking
                   :mode expressive)
       :ARG2-of (c17-0 / laugh-01
                       :manner (c17-5 / loud)))

# ::snt that doesn't mean you shoot him dead and leave him in the street?! you arrest him&amp;let him have a fair trial????
# ::tokens ["that", "does", "n't", "mean", "you", "shoot", "him", "dead", "and", "leave", "him", "in", "the", "street", "?", "!", "you", "arrest", "him&amp;let", "him", "have", "a", "fair", "trial", "?", "?", "?", "?"]
# ::lemmas ["that", "do", "not", "mean", "you", "shoot", "he", "dead", "and", "leave", "he", "in", "the", "street", "?", "!", "you", "arrest", "him&amp;let", "he", "have", "a", "fair", "trial", "?", "?", "?", "?"]
(c18-0 / multi-sentence
       :snt1 (c18-14 / mean-01
                     :ARG1 (c18-23 / that)
                     :ARG2 (c18-7 / and
                                  :op1 (c18-5 / shoot-02
                                              :ARG0 (c18-19 / you)
                                              :ARG1 (c18-8 / he)
                                              :ARG2 (c18-4 / die-01
                                                           :ARG1 c18-8))
                                  :op2 (c18-9 / leave-12
                                              :ARG0 c18-19
                                              :ARG1 c18-8
                                              :location (c18-11 / street)))
                     :polarity (c18-15 / amr-unknown)
                     :polarity -)
       :snt2 (c18-13 / and
                     :op1 (c18-22 / arrest-01
                                  :ARG0 (c18-18 / you)
                                  :ARG1 (c18-20 / and
                                                :op1 (c18-6 / he)
                                                :op2 (c18-3 / person
                                                            :name (c18-12 / name
                                                                          :op1 "amp"))))
                     :op2 (c18-21 / let-01
                                  :ARG0 c18-18
                                  :ARG1 (c18-2 / have-03
                                               :ARG0 (c18-16 / he)
                                               :ARG1 (c18-17 / try-02
                                                             :ARG1 c18-16
                                                             :ARG1-of (c18-10 / fair-01))))
                     :polarity (c18-1 / amr-unknown)))

# ::snt lolololololol assaulting a Cop does. And nobody knows for sure the number of shots, that hasn't been released
# ::tokens ["lolololololol", "assaulting", "a", "Cop", "does", ".", "And", "nobody", "knows", "for", "sure", "the", "number", "of", "shots", ",", "that", "has", "n't", "been", "released"]
# ::lemmas ["lolololololol", "assault", "a", "Cop", "do", ".", "and", "nobody", "know", "for", "sure", "the", "number", "of", "shot", ",", "that", "have", "not", "be", "release"]
(c19-1 / multi-sentence
       :snt1 (c19-6 / do-02
                    :ARG0 (c19-13 / assault-01
                                  :ARG1 (c19-7 / cop))
                    :ARG1 (c19-12 / thing
                                  :ARG1-of (c19-0 / laugh-01
                                                  :manner (c19-9 / loud))))
       :snt2 (c19-3 / and
                    :op2 (c19-4 / know-01
                                :ARG0 (c19-5 / nobody)
                                :ARG1 (c19-11 / thing
                                              :quant-of (c19-10 / shoot-02)
                                              :ARG1-of (c19-8 / release-01
                                                              :polarity -))
                                :ARG1-of (c19-2 / sure-02))))

# ::snt HEY BIG MIKEY JUST AN UNDERPRIVILEGED TEDDY BEAR RIGHT
# ::tokens ["HEY", "BIG", "MIKEY", "JUST", "AN", "UNDERPRIVILEGED", "TEDDY", "BEAR", "RIGHT"]
# ::lemmas ["HEY", "big", "MIKEY", "just", "an", "UNDERPRIVILEGED", "TEDDY", "BEAR", "RIGHT"]
(c20-4 / right-06
       :ARG2 (c20-3 / product
                    :name (c20-2 / name
                                 :op1 "TED")
                    :ARG1-of (c20-1 / bring-01
                                    :ARG1-of (c20-5 / practical-02
                                                    :polarity -)))
       :mod (c20-0 / just))

# ::snt good thing the cop was tried by a jury to find out if he is guilty too right??
# ::tokens ["good", "thing", "the", "cop", "was", "tried", "by", "a", "jury", "to", "find", "out", "if", "he", "is", "guilty", "too", "right", "?", "?"]
# ::lemmas ["good", "thing", "the", "cop", "be", "try", "by", "a", "jury", "to", "find", "out", "if", "he", "be", "guilty", "too", "right", "?", "?"]
(c21-4 / good-02
       :ARG1 (c21-7 / try-02
                    :ARG0 (c21-0 / jury)
                    :ARG1 (c21-3 / cop)
                    :purpose (c21-1 / find-out-03
                                    :ARG0 c21-0
                                    :ARG1 (c21-2 / guilty-01
                                                 :ARG1 c21-3
                                                 :mod (c21-6 / too))))
       :ARG1-of (c21-5 / request-confirmation-91))

# ::snt Cops always get the blame. Problem with that is that the cops are usually right.
# ::tokens ["Cops", "always", "get", "the", "blame", ".", "Problem", "with", "that", "is", "that", "the", "cops", "are", "usually", "right", "."]
# ::lemmas ["cop", "always", "get", "the", "blame", ".", "problem", "with", "that", "be", "that", "the", "cop", "be", "usually", "right", "."]
(c22-0 / multi-sentence
       :snt1 (c22-2 / blame-01
                    :ARG1 (c22-5 / cop)
                    :time (c22-8 / always))
       :snt2 (c22-3 / problem
                    :topic (c22-4 / right-06
                                  :ARG1 (c22-6 / cop)
                                  :mod (c22-1 / usual))
                    :domain (c22-7 / that)))

# ::snt Real asset to society. Such a loss.
# ::tokens ["Real", "asset", "to", "society", ".", "Such", "a", "loss", "."]
# ::lemmas ["real", "asset", "to", "society", ".", "such", "a", "loss", "."]
(c23-1 / multi-sentence
       :snt1 (c23-5 / asset
                    :ARG1-of (c23-3 / real-04)
                    :beneficiary (c23-4 / society))
       :snt2 (c23-0 / lose-02
                    :degree (c23-2 / such)))

# ::snt oh wow , now watch the white people are not going to riot. How boring!
# ::tokens ["oh", "wow", ",", "now", "watch", "the", "white", "people", "are", "not", "going", "to", "riot", ".", "How", "boring", "!"]
# ::lemmas ["oh", "wow", ",", "now", "watch", "the", "white", "people", "be", "not", "go", "to", "riot", ".", "how", "boring", "!"]
(c24-2 / multi-sentence
       :snt1 (c24-0 / watch-01
                    :ARG0 (c24-1 / you)
                    :ARG1 (c24-9 / riot-01
                                 :ARG0 (c24-8 / person
                                              :ARG1-of (c24-6 / white-02))
                                 :polarity -)
                    :time (c24-7 / now)
                    :mod (c24-3 / wow
                                :mod (c24-4 / oh)
                                :mode expressive)
                    :mode imperative)
       :snt2 (c24-5 / bore-02
                    :degree (c24-10 / so)
                    :mode expressive))

# ::snt I just adore you Plugs
# ::tokens ["I", "just", "adore", "you", "Plugs"]
# ::lemmas ["i", "just", "adore", "you", "plug"]
(c25-4 / say-01
       :ARG1 (c25-5 / adore-01
                    :ARG0 (c25-1 / i)
                    :ARG1 (c25-3 / person
                                 :name (c25-2 / name
                                              :op1 "Plugs"))
                    :mod (c25-0 / just))
       :ARG2 c25-3)

# ::snt they were upset about an unarmed person being gunned down by an over zealous officer. Dick
# ::tokens ["they", "were", "upset", "about", "an", "unarmed", "person", "being", "gunned", "down", "by", "an", "over", "zealous", "officer", ".", "Dick"]
# ::lemmas ["they", "be", "upset", "about", "an", "unarmed", "person", "be", "gun", "down", "by", "an", "over", "zealous", "officer", ".", "Dick"]
(c26-2 / multi-sentence
       :snt1 (c26-3 / upset-01
                    :ARG0 (c26-7 / shoot-down-05
                                 :ARG0 (c26-4 / officer
                                              :ARG1-of (c26-1 / zealous-01
                                                              :degree (c26-0 / over)))
                                 :ARG1 (c26-6 / person
                                              :ARG1-of (c26-10 / arm-01
                                                               :polarity -)))
                    :ARG1 (c26-8 / they))
       :snt2 (c26-9 / person
                    :name (c26-5 / name
                                 :op1 "Dick")))

# ::snt Try stopping a lb man without shooting. The average sized officer can't either.
# ::tokens ["Try", "stopping", "a", "lb", "man", "without", "shooting", ".", "The", "average", "sized", "officer", "ca", "n't", "either", "."]
# ::lemmas ["try", "stop", "a", "lb", "man", "without", "shoot", ".", "the", "average", "sized", "officer", "can", "not", "either", "."]
(c27-2 / multi-sentence
       :snt1 (c27-10 / try-01
                     :ARG0 (c27-0 / you)
                     :ARG1 (c27-9 / stop-01
                                  :ARG0 c27-0
                                  :ARG1 (c27-7 / man
                                               :quant (c27-1 / mass-quantity
                                                             :unit (c27-8 / pound)
                                                             :quant 1))
                                  :manner (c27-5 / shoot-02
                                                 :ARG0 c27-0
                                                 :polarity -))
                     :mode imperative)
       :snt2 (c27-11 / possible-01
                     :ARG1 (c27-4 / officer
                                  :ARG1-of (c27-3 / size-01
                                                  :ARG2 (c27-12 / average)))
                     :mod (c27-6 / either)
                     :polarity -))

# ::snt good thing he was tried by a jury if his peers to determine his alleged guilt!
# ::tokens ["good", "thing", "he", "was", "tried", "by", "a", "jury", "if", "his", "peers", "to", "determine", "his", "alleged", "guilt", "!"]
# ::lemmas ["good", "thing", "he", "be", "try", "by", "a", "jury", "if", "his", "peer", "to", "determine", "his", "alleged", "guilt", "!"]
(c28-5 / good-02
       :ARG1 (c28-6 / try-02
                    :ARG0 (c28-0 / jury)
                    :ARG1 (c28-1 / he)
                    :condition (c28-3 / determine-01
                                      :ARG0 (c28-2 / peer
                                                   :poss c28-1)
                                      :ARG1 (c28-4 / guilty-01
                                                   :ARG1 c28-1
                                                   :ARG1-of (c28-7 / allege-01)))))

# ::snt that will certainly kill the mood...
# ::tokens ["that", "will", "certainly", "kill", "the", "mood", "..."]
# ::lemmas ["that", "will", "certainly", "kill", "the", "mood", "..."]
(c29-3 / kill-01
       :ARG0 (c29-0 / that)
       :ARG1 (c29-1 / mood)
       :mod (c29-2 / certain))

# ::snt This ordeal probably saved some lives.
# ::tokens ["This", "ordeal", "probably", "saved", "some", "lives", "."]
# ::lemmas ["this", "ordeal", "probably", "save", "some", "life", "."]
(c30-4 / save-01
       :ARG0 (c30-1 / ordeal
                    :mod (c30-5 / this))
       :ARG1 (c30-0 / life
                    :quant (c30-2 / some))
       :mod (c30-3 / probable))

# ::snt lets wait till the FBI/DOJ investigation is complete before we say what he did. Innocent until proven guilty and all.
# ::tokens ["lets", "wait", "till", "the", "FBI", "/", "DOJ", "investigation", "is", "complete", "before", "we", "say", "what", "he", "did", ".", "Innocent", "until", "proven", "guilty", "and", "all", "."]
# ::lemmas ["lets", "wait", "till", "the", "FBI", "/", "DOJ", "investigation", "be", "complete", "before", "we", "say", "what", "he", "do", ".", "Innocent", "until", "prove", "guilty", "and", "all", "."]
(c31-0 / multi-sentence
       :snt1 (c31-14 / wait-01
                     :ARG1 (c31-1 / we)
                     :ARG2 (c31-19 / complete-01
                                   :ARG1 (c31-16 / investigate-01
                                                 :ARG0 (c31-6 / slash
                                                              :op1 (c31-13 / government-organization
                                                                           :name (c31-12 / name
                                                                                         :op1 "FBI"))
                                                              :op2 (c31-4 / government-organization
                                                                          :name (c31-18 / name
                                                                                        :op1 "DOJ")))))
                     :time (c31-10 / before
                                   :op1 (c31-11 / say-01
                                                :ARG0 c31-1
                                                :ARG1 (c31-20 / thing
                                                              :ARG1-of (c31-5 / do-02
                                                                              :ARG0 (c31-9 / he)))))
                     :mode imperative)
       :snt2 (c31-17 / innocent-01
                     :time (c31-15 / until
                                   :op1 (c31-3 / prove-01
                                               :ARG1 (c31-2 / guilty-01
                                                            :ARG1 (c31-7 / he))))
                     :snt3 (c31-8 / all)))

# ::snt Won't matter. They didn't let the facts get in the way with St. Skittles...
# ::tokens ["Wo", "n't", "matter", ".", "They", "did", "n't", "let", "the", "facts", "get", "in", "the", "way", "with", "St.", "Skittles", "..."]
# ::lemmas ["will", "not", "matter", ".", "they", "do", "not", "let", "the", "fact", "get", "in", "the", "way", "with", "St.", "Skittles", "..."]
(c32-2 / multi-sentence
       :snt1 (c32-6 / matter-01
                    :ARG1 (c32-4 / event)
                    :polarity -)
       :snt2 (c32-1 / let-01
                    :ARG0 (c32-8 / they)
                    :ARG1 (c32-0 / hinder-01
                                 :ARG0 (c32-3 / fact)
                                 :ARG1 (c32-7 / thing
                                              :name (c32-5 / name
                                                           :op1 "St."
                                                           :op2 "Skittles")))
                    :polarity -))

# ::snt He was running away when he got shot though so the threat (if there even was one) was gone. I don't really care though lol
# ::tokens ["He", "was", "running", "away", "when", "he", "got", "shot", "though", "so", "the", "threat", "(", "if", "there", "even", "was", "one", ")", "was", "gone", ".", "I", "do", "n't", "really", "care", "though", "lol"]
# ::lemmas ["he", "be", "run", "away", "when", "he", "got", "shoot", "though", "so", "the", "threat", "(", "if", "there", "even", "be", "one", ")", "be", "go", ".", "i", "do", "not", "really", "care", "though", "lol"]
(c33-2 / multi-sentence
       :snt1 (c33-0 / have-concession-91
                    :ARG1 (c33-7 / run-02
                                 :ARG0 (c33-1 / he)
                                 :direction (c33-14 / away)
                                 :time (c33-12 / shoot-02
                                               :ARG1 c33-1)
                                 :ARG0-of (c33-8 / cause-01
                                                 :ARG1 (c33-9 / go-02
                                                              :ARG0 (c33-13 / threaten-01
                                                                            :mod (c33-4 / even))))))
       :snt2 (c33-10 / care-01
                     :ARG0 (c33-5 / i)
                     :ARG1-of (c33-6 / real-04)
                     :ARG2-of (c33-3 / laugh-01
                                     :ARG0 c33-5
                                     :manner (c33-11 / loud)
                                     :mode expressive)
                     :polarity -))

# ::snt Ahhh Karma ....
# ::tokens ["Ahhh", "Karma", "...."]
# ::lemmas ["Ahhh", "Karma", "...."]
(c34-1 / person
       :name (c34-0 / name
                    :op1 "Karma")
       :mod (c34-2 / ah
                   :mode expressive))

# ::snt Everybody was orgasming about a white cop killing an "innocent" black kid. Reality kicked them in the nuts.
# ::tokens ["Everybody", "was", "orgasming", "about", "a", "white", "cop", "killing", "an", "\"", "innocent", "\"", "black", "kid", ".", "Reality", "kicked", "them", "in", "the", "nuts", "."]
# ::lemmas ["everybody", "be", "orgasme", "about", "a", "white", "cop", "kill", "an", "\"", "innocent", "\"", "black", "kid", ".", "reality", "kick", "they", "in", "the", "nut", "."]
(c35-1 / multi-sentence
       :snt1 (c35-12 / argue-02
                     :ARG0 (c35-3 / everybody)
                     :ARG2 (c35-11 / kill-01
                                   :ARG0 (c35-8 / cop
                                                :ARG1-of (c35-0 / white-02))
                                   :ARG1 (c35-4 / kid
                                                :ARG1-of (c35-2 / black-05)
                                                :ARG1-of (c35-5 / innocent-01))))
       :snt2 (c35-10 / kick-01
                     :ARG0 (c35-7 / reality)
                     :ARG1 (c35-9 / they)
                     :ARG2 (c35-6 / nuts)))

# ::snt when have Libs &amp; MSM acknowledged reality Plugs? This pic isn't real &amp; if it was who cares? The Indian guys a racist.
# ::tokens ["when", "have", "Libs", "&", "amp", ";", "MSM", "acknowledged", "reality", "Plugs", "?", "This", "pic", "is", "n't", "real", "&", "amp", ";", "if", "it", "was", "who", "cares", "?", "The", "Indian", "guys", "a", "racist", "."]
# ::lemmas ["when", "have", "Libs", "&", "amp", ";", "MSM", "acknowledge", "reality", "Plugs", "?", "this", "pic", "be", "not", "real", "&", "amp", ";", "if", "it", "be", "who", "care", "?", "the", "Indian", "guy", "a", "racist", "."]
(c36-0 / multi-sentence
       :snt1 (c36-6 / and
                    :op1 (c36-3 / person
                                :ARG1-of (c36-7 / liberal-02))
                    :op2 (c36-5 / person
                                :name (c36-10 / name
                                              :op1 "amp"))
                    :time (c36-15 / amr-unknown))
       :snt2 (c36-11 / acknowledge-01
                     :ARG0 (c36-8 / publication
                                  :name (c36-18 / name
                                                :op1 "MSM"))
                     :ARG1 (c36-12 / reality))
       :snt3 (c36-20 / and
                     :op1 (c36-1 / real-04
                                 :ARG1 (c36-14 / pic
                                               :mod (c36-21 / this))
                                 :polarity -)
                     :op2 (c36-19 / care-01
                                  :ARG0 (c36-17 / amr-unknown)
                                  :condition (c36-16 / it)))
       :snt4 (c36-9 / racist
                    :domain (c36-13 / guy
                                    :mod (c36-4 / country
                                                :name (c36-2 / name
                                                             :op1 "India")))))

# ::snt but it illuminates the context
# ::tokens ["but", "it", "illuminates", "the", "context"]
# ::lemmas ["but", "it", "illuminate", "the", "context"]
(c37-1 / contrast-01
       :ARG2 (c37-3 / illuminate-01
                    :ARG0 (c37-2 / it)
                    :ARG1 (c37-0 / context)))

# ::snt Can you imagine how this dude would have turned out if he got away with beating a policeman?
# ::tokens ["Can", "you", "imagine", "how", "this", "dude", "would", "have", "turned", "out", "if", "he", "got", "away", "with", "beating", "a", "policeman", "?"]
# ::lemmas ["can", "you", "imagine", "how", "this", "dude", "would", "have", "turn", "out", "if", "he", "get", "away", "with", "beat", "a", "policeman", "?"]
(c38-4 / possible-01
       :ARG1 (c38-2 / imagine-01
                    :ARG0 (c38-0 / you)
                    :ARG1 (c38-8 / thing
                                 :manner-of (c38-7 / turn-out-11
                                                   :ARG1 (c38-5 / dude
                                                                :mod (c38-3 / this))
                                                   :condition (c38-6 / get-away-08
                                                                     :ARG0 c38-5
                                                                     :ARG1 (c38-1 / beat-01
                                                                                  :ARG0 c38-5
                                                                                  :ARG1 (c38-9 / policeman))))))
       :polarity (c38-10 / amr-unknown))

# ::snt by shooting him?! what happened to simply arresting him?!
# ::tokens ["by", "shooting", "him", "?", "!", "what", "happened", "to", "simply", "arresting", "him", "?", "!"]
# ::lemmas ["by", "shoot", "he", "?", "!", "what", "happen", "to", "simply", "arrest", "he", "?", "!"]
(c39-2 / multi-sentence
       :snt1 (c39-3 / event
                    :manner (c39-6 / shoot-02
                                   :ARG1 (c39-0 / he))
                    :mode expressive)
       :snt2 (c39-7 / arrest-01
                    :ARG1 (c39-1 / he)
                    :ARG1-of (c39-4 / simple-02)
                    :mod (c39-5 / amr-unknown)))
