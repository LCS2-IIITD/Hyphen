# ::snt there is
# ::tokens ["there", "is"]
# ::lemmas ["there", "be"]
(c1-0 / event)

# ::snt sad thing is that they kill because they are unable to laugh
# ::tokens ["sad", "thing", "is", "that", "they", "kill", "because", "they", "are", "unable", "to", "laugh"]
# ::lemmas ["sad", "thing", "be", "that", "they", "kill", "because", "they", "be", "unable", "to", "laugh"]
(c2-4 / sad-02
      :ARG1 (c2-1 / kill-01
                  :ARG0 (c2-5 / they)
                  :ARG1-of (c2-3 / cause-01
                                 :ARG0 (c2-2 / capable-01
                                             :ARG1 c2-5
                                             :ARG2 (c2-0 / laugh-01
                                                         :ARG0 c2-5)
                                             :polarity -))))

# ::snt aveBrownToons sentiments pour les lches cons responsables de tuerie
# ::tokens ["aveBrownToons", "sentiments", "pour", "les", "lches", "cons", "responsables", "de", "tuerie"]
# ::lemmas ["avebrowntoons", "sentiment", "pour", "le", "lche", "cons", "responsable", "de", "tuerie"]
(c3-3 / pour-03
      :ARG1 (c3-6 / sentiment
                  :poss (c3-8 / person
                              :name (c3-2 / name
                                          :op1 "BrownToons")))
      :ARG2 (c3-0 / lch
                  :mod (c3-5 / conscient)
                  :mod (c3-1 / person
                             :ARG0-of (c3-4 / responsible-03
                                            :ARG1 (c3-7 / tuerie)))))

# ::snt Be calm. Be calm, Dear Paris. Resist to be calm.
# ::tokens ["Be", "calm", ".", "Be", "calm", ",", "Dear", "Paris", ".", "Resist", "to", "be", "calm", "."]
# ::lemmas ["be", "calm", ".", "be", "calm", ",", "Dear", "Paris", ".", "resist", "to", "be", "calm", "."]
(c4-1 / multi-sentence
      :snt1 (c4-7 / calm-03
                  :ARG1 (c4-0 / you)
                  :mode imperative)
      :snt2 (c4-11 / say-01
                   :ARG0 (c4-3 / i)
                   :ARG1 (c4-6 / calm-03
                               :ARG1 (c4-10 / you)
                               :mode imperative)
                   :ARG2 (c4-5 / person
                               :name (c4-4 / name
                                           :op1 "Paris")
                               :mod (c4-8 / dear)))
      :snt3 (c4-9 / resist-01
                  :ARG0 (c4-2 / you)
                  :ARG1 (c4-12 / calm-03
                               :ARG1 c4-2)
                  :mode imperative))

# ::snt L'Amrique se tient avec la France.
# ::tokens ["L'Amrique", "se", "tient", "avec", "la", "France", "."]
# ::lemmas ["L'Amrique", "se", "tient", "avec", "la", "France", "."]
(c5-4 / tient-of
      :ARG1 (c5-3 / city
                  :name (c5-0 / name
                              :op1 "L'Amrique"))
      :ARG3 (c5-2 / country
                  :name (c5-1 / name
                              :op1 "France")))

# ::snt A big F/U to the cowards: RT : Today's cartoon, by .
# ::tokens ["A", "big", "F", "/", "U", "to", "the", "cowards", ":", "RT", ":", "Today", "'s", "cartoon", ",", "by", "."]
# ::lemmas ["a", "big", "F", "/", "U", "to", "the", "coward", ":", "RT", ":", "Today", "'s", "cartoon", ",", "by", "."]
(c6-6 / say-01
      :ARG0 (c6-3 / publication
                  :name (c6-2 / name
                              :op1 "RT"))
      :ARG1 (c6-5 / cartoon
                  :time (c6-7 / today)
                  :mod (c6-1 / big)
                  :mod (c6-0 / fuck
                             :mode expressive)
                  :beneficiary (c6-4 / coward)))

# ::snt : Today's cartoon, by .
# ::tokens [":", "Today", "'s", "cartoon", ",", "by", "."]
# ::lemmas [":", "Today", "'s", "cartoon", ",", "by", "."]
(c8-2 / byline-91
      :ARG1 (c8-1 / cartoon
                  :time (c8-0 / today)))

# ::snt You couldn't print this in Queens-Land...
# ::tokens ["You", "could", "n't", "print", "this", "in", "Queens", "-", "Land", "..."]
# ::lemmas ["you", "could", "not", "print", "this", "in", "Queens", "-", "Land", "..."]
(c10-2 / possible-01
       :ARG1 (c10-5 / print-01
                    :ARG0 (c10-0 / you)
                    :ARG1 (c10-4 / this)
                    :location (c10-3 / city-district
                                     :name (c10-1 / name
                                                  :op1 "Queens-Land")))
       :polarity -)

# ::snt with no comment
# ::tokens ["with", "no", "comment"]
# ::lemmas ["with", "no", "comment"]
(c11-0 / comment-01
       :polarity -)

# ::snt you have let us all down. Should have printed a CH cartoon.
# ::tokens ["you", "have", "let", "us", "all", "down", ".", "Should", "have", "printed", "a", "CH", "cartoon", "."]
# ::lemmas ["you", "have", "let", "we", "all", "down", ".", "should", "have", "print", "a", "CH", "cartoon", "."]
(c13-3 / multi-sentence
       :snt1 (c13-2 / let-down-04
                    :ARG0 (c13-1 / you)
                    :ARG1 (c13-0 / we
                                 :mod (c13-10 / all)))
       :snt2 (c13-6 / recommend-01
                    :ARG1 (c13-5 / print-01
                                 :ARG0 (c13-8 / you)
                                 :ARG1 (c13-7 / cartoon
                                              :mod (c13-9 / publication
                                                          :name (c13-4 / name
                                                                       :op1 "CH"))))))
