# ::snt terminate him.doing this innocent ppl.give the coward a uniform&amput him on battlefield see how tough he is
# ::tokens ["terminate", "him.doing", "this", "innocent", "ppl.give", "the", "coward", "a", "uniform&amput", "him", "on", "battlefield", "see", "how", "tough", "he", "is"]
# ::lemmas ["terminate", "him.doe", "this", "innocent", "ppl.give", "the", "coward", "a", "uniform&amput", "he", "on", "battlefield", "see", "how", "tough", "he", "be"]
(c1-0 / multi-sentence
      :snt1 (c1-20 / terminate-01
                   :ARG0 (c1-17 / you)
                   :ARG1 (c1-7 / he)
                   :mode imperative)
      :snt2 (c1-2 / do-02
                  :ARG0 (c1-19 / you)
                  :ARG1 (c1-16 / this)
                  :ARG1-of (c1-13 / innocent-01))
      :snt3 (c1-5 / and
                  :op1 (c1-10 / give-01
                              :ARG0 (c1-1 / you)
                              :ARG1 (c1-11 / uniform)
                              :ARG2 (c1-18 / coward)
                              :mode imperative)
                  :op2 (c1-12 / amput-00
                              :ARG0 c1-1
                              :ARG2 (c1-3 / coward)
                              :location (c1-8 / battlefield)
                              :mode imperative)
                  :ARG0-of (c1-15 / cause-01
                                  :ARG1 (c1-4 / see-01
                                              :ARG0 c1-1
                                              :ARG1 (c1-14 / tough-03
                                                           :ARG1 (c1-6 / he)
                                                           :degree (c1-9 / so))))))

# ::snt Source from Ray Hadley shows confirmed same report of gunman claiming there are four packages around Sydney
# ::tokens ["Source", "from", "Ray", "Hadley", "shows", "confirmed", "same", "report", "of", "gunman", "claiming", "there", "are", "four", "packages", "around", "Sydney"]
# ::lemmas ["source", "from", "Ray", "Hadley", "show", "confirm", "same", "report", "of", "gunman", "claim", "there", "be", "four", "package", "around", "Sydney"]
(c2-5 / confirm-01
      :ARG0 (c2-10 / thing
                   :ARG1-of (c2-9 / source-01
                                  :ARG2 (c2-3 / person
                                              :name (c2-1 / name
                                                          :op1 "Ray"
                                                          :op2 "Hadley"))))
      :ARG1 (c2-4 / report-01
                  :ARG1 (c2-6 / claim-01
                              :ARG0 (c2-7 / gunman)
                              :ARG1 (c2-11 / package
                                           :location (c2-12 / around
                                                            :op1 (c2-8 / city
                                                                       :name (c2-2 / name
                                                                                   :op1 "Sydney")))
                                           :quant 4))
                  :ARG1-of (c2-0 / same-01)))

# ::snt Yay Tony will save the day
# ::tokens ["Yay", "Tony", "will", "save", "the", "day"]
# ::lemmas ["Yay", "Tony", "will", "save", "the", "day"]
(c3-4 / save-02
      :ARG0 (c3-2 / person
                  :name (c3-1 / name
                              :op1 "Tony"))
      :ARG1 (c3-3 / day)
      :mod (c3-0 / yay))

# ::snt Very frightening terrible day feel for everyone involved &amp; our country
# ::tokens ["Very", "frightening", "terrible", "day", "feel", "for", "everyone", "involved", "&", "amp", ";", "our", "country"]
# ::lemmas ["very", "frightening", "terrible", "day", "feel", "for", "everyone", "involve", "&", "amp", ";", "our", "country"]
(c4-1 / feel-01
      :ARG0 (c4-9 / and
                  :op1 (c4-2 / everyone
                             :ARG1-of (c4-3 / involve-01))
                  :op2 (c4-7 / country
                             :poss (c4-0 / we)))
      :ARG1 (c4-6 / day
                  :ARG1-of (c4-8 / terrible-01))
      :ARG2 c4-9
      :ARG0-of (c4-4 / frighten-01
                     :degree (c4-5 / very)))

# ::snt is this same as the "call" to Ray Hadley by "POI" from am? Or new info?
# ::tokens ["is", "this", "same", "as", "the", "\"", "call", "\"", "to", "Ray", "Hadley", "by", "\"", "POI", "\"", "from", "am", "?", "Or", "new", "info", "?"]
# ::lemmas ["be", "this", "same", "as", "the", "\"", "call", "\"", "to", "Ray", "Hadley", "by", "\"", "POI", "\"", "from", "am", "?", "or", "new", "info", "?"]
(c5-0 / multi-sentence
      :snt1 (c5-9 / same-01
                  :polarity (c5-11 / amr-unknown)
                  :ARG1 (c5-10 / this)
                  :ARG2 (c5-7 / call-02
                              :ARG0 (c5-8 / government-organization
                                          :name (c5-3 / name
                                                      :op1 "OPI"))
                              :ARG1 (c5-5 / person
                                          :name (c5-4 / name
                                                      :op1 "Ray"
                                                      :op2 "Hadley"))
                              :ARG2 c5-8))
      :snt2 (c5-1 / or
                  :op2 (c5-2 / information
                             :ARG1-of (c5-6 / new-01))
                  :polarity c5-11))

# ::snt pathetic islamist coward
# ::tokens ["pathetic", "islamist", "coward"]
# ::lemmas ["pathetic", "islamist", "coward"]
(c6-3 / coward
      :mod (c6-2 / religious-group
                 :name (c6-0 / name
                             :op1 "Islamism"))
      :mod (c6-1 / pathetic))

# ::snt Thoughts can only be with those terrified souls in the cafe. I was there few months back.. A total nightmare.
# ::tokens ["Thoughts", "can", "only", "be", "with", "those", "terrified", "souls", "in", "the", "cafe", ".", "I", "was", "there", "few", "months", "back", "..", "A", "total", "nightmare", "."]
# ::lemmas ["thought", "can", "only", "be", "with", "those", "terrified", "soul", "in", "the", "cafe", ".", "i", "be", "there", "few", "month", "back", "..", "a", "total", "nightmare", "."]
(c7-0 / multi-sentence
      :snt1 (c7-1 / possible-01
                  :ARG1 (c7-3 / accompany-01
                              :ARG0 (c7-18 / thing
                                           :ARG1-of (c7-11 / think-01))
                              :ARG1 (c7-2 / soul
                                          :ARG1-of (c7-9 / terrify-01)
                                          :location (c7-16 / cafe))
                              :mod (c7-13 / only)))
      :snt2 (c7-5 / be-located-at-91
                  :ARG1 (c7-8 / i)
                  :ARG2 (c7-14 / there)
                  :time (c7-10 / before
                               :op1 (c7-6 / now)
                               :quant (c7-4 / few
                                            :op1 (c7-17 / temporal-quantity
                                                        :unit (c7-7 / month)
                                                        :quant 1))))
      :snt3 (c7-15 / nightmare
                   :degree (c7-12 / total)))

# ::snt take the shot...
# ::tokens ["take", "the", "shot", "..."]
# ::lemmas ["take", "the", "shot", "..."]
(c8-0 / shoot-02
      :ARG0 (c8-1 / you)
      :mode imperative)

# ::snt You based in Sydney John?
# ::tokens ["You", "based", "in", "Sydney", "John", "?"]
# ::lemmas ["you", "base", "in", "Sydney", "John", "?"]
(c9-1 / base-01
      :ARG1 (c9-0 / you)
      :polarity (c9-4 / amr-unknown)
      :location (c9-3 / city
                      :name (c9-2 / name
                                  :op1 "Sydney"
                                  :op2 "John")))

# ::snt you are a clever, intelligent man. Who is the other guy. I forgot
# ::tokens ["you", "are", "a", "clever", ",", "intelligent", "man", ".", "Who", "is", "the", "other", "guy", ".", "I", "forgot"]
# ::lemmas ["you", "be", "a", "clever", ",", "intelligent", "man", ".", "who", "be", "the", "other", "guy", ".", "i", "forget"]
(c10-2 / multi-sentence
       :snt1 (c10-5 / man
                    :ARG1-of (c10-6 / clever-01)
                    :ARG1-of (c10-4 / intelligent-01)
                    :domain (c10-0 / you))
       :snt2 (c10-7 / guy
                    :mod (c10-3 / other)
                    :domain (c10-9 / amr-unknown))
       :snt3 (c10-1 / forget-01
                    :ARG0 (c10-8 / i)))

# ::snt Glad he's safe anyway. Who would have imagined this.
# ::tokens ["Glad", "he", "'s", "safe", "anyway", ".", "Who", "would", "have", "imagined", "this", "."]
# ::lemmas ["Glad", "he", "be", "safe", "anyway", ".", "who", "would", "have", "imagine", "this", "."]
(c11-1 / multi-sentence
       :snt1 (c11-4 / glad-02
                    :ARG0 (c11-5 / safe-01
                                 :ARG1 (c11-0 / he))
                    :mod (c11-7 / anyway))
       :snt2 (c11-3 / imagine-01
                    :ARG0 (c11-2 / amr-unknown)
                    :ARG1 (c11-6 / this)))

# ::snt &amp; really an flag? Surely when packing his shot gun, that would be the first item he'd pack!
# ::tokens ["&", "amp", ";", "really", "an", "flag", "?", "Surely", "when", "packing", "his", "shot", "gun", ",", "that", "would", "be", "the", "first", "item", "he", "'d", "pack", "!"]
# ::lemmas ["&", "amp", ";", "really", "an", "flag", "?", "surely", "when", "pack", "his", "shot", "gun", ",", "that", "would", "be", "the", "first", "item", "he", "would", "pack", "!"]
(c13-2 / multi-sentence
       :snt1 (c13-14 / and
                     :op2 (c13-1 / flag
                                 :ARG1-of (c13-10 / real-04)
                                 :polarity (c13-6 / amr-unknown)))
       :snt2 (c13-0 / have-condition-91
                    :ARG1 (c13-9 / pack-01
                                 :ARG0 (c13-3 / he)
                                 :ARG1 (c13-7 / item
                                              :ord (c13-4 / ordinal-entity
                                                          :value 1))
                                 :ARG1-of (c13-12 / sure-02))
                    :ARG2 (c13-13 / pack-01
                                  :ARG0 c13-3
                                  :ARG1 (c13-11 / gun
                                                :ARG1-of (c13-5 / shoot-02)
                                                :poss c13-3))
                    :polarity (c13-8 / amr-unknown)))

# ::snt Deliver him the Australian SAS instead.
# ::tokens ["Deliver", "him", "the", "Australian", "SAS", "instead", "."]
# ::lemmas ["deliver", "he", "the", "Australian", "SAS", "instead", "."]
(c14-5 / deliver-01
       :ARG0 (c14-1 / you)
       :ARG1 (c14-2 / military
                    :name (c14-4 / name
                                 :op1 "Australian"
                                 :op2 "SAS"))
       :ARG2 (c14-0 / he)
       :ARG1-of (c14-3 / instead-of-91)
       :mode imperative)

# ::snt Weson, your president is a fucking bad man. He was defaulted in paying service charge due to accountancy firm in HK
# ::tokens ["Weson", ",", "your", "president", "is", "a", "fucking", "bad", "man", ".", "He", "was", "defaulted", "in", "paying", "service", "charge", "due", "to", "accountancy", "firm", "in", "HK"]
# ::lemmas ["Weson", ",", "your", "president", "be", "a", "fucking", "bad", "man", ".", "he", "be", "default", "in", "pay", "service", "charge", "due", "to", "accountancy", "firm", "in", "HK"]
(c15-0 / multi-sentence
       :snt1 (c15-4 / say-01
                    :ARG1 (c15-14 / man
                                  :ARG1-of (c15-11 / bad-07
                                                   :mod (c15-9 / fucking))
                                  :domain (c15-1 / person
                                                 :name (c15-13 / name
                                                               :op1 "Weson")
                                                 :ARG0-of (c15-8 / have-org-role-91
                                                                 :ARG1 (c15-16 / you)
                                                                 :ARG2 (c15-5 / president))
                                                 :ARG2-of c15-4)))
       :snt2 (c15-2 / default-01
                    :ARG1 (c15-7 / he)
                    :ARG2 (c15-10 / pay-01
                                  :ARG0 c15-7
                                  :ARG1 (c15-19 / charge-01
                                                :ARG3 (c15-12 / serve-01)))
                    :ARG1-of (c15-3 / cause-01
                                    :ARG0 (c15-17 / firm
                                                  :mod (c15-6 / accountancy)
                                                  :location (c15-15 / country
                                                                    :name (c15-18 / name
                                                                                  :op1 "HK"))))))

# ::snt haha getting your news from is like watching Looney Tunes for Social skills ha
# ::tokens ["haha", "getting", "your", "news", "from", "is", "like", "watching", "Looney", "Tunes", "for", "Social", "skills", "ha"]
# ::lemmas ["haha", "get", "your", "news", "from", "be", "like", "watch", "Looney", "Tunes", "for", "Social", "skill", "ha"]
(c16-7 / resemble-01
       :ARG1 (c16-8 / get-01
                    :ARG0 (c16-1 / you)
                    :ARG1 (c16-5 / news)
                    :ARG2 (c16-10 / amr-unknown))
       :ARG2 (c16-2 / watch-01
                    :ARG0 c16-1
                    :ARG1 (c16-3 / broadcast-program
                                 :name (c16-6 / name
                                              :op1 "Looney"
                                              :op2 "Tunes"))
                    :purpose (c16-9 / skill
                                    :topic (c16-4 / social-03)))
       :mod (c16-0 / haha))

# ::snt fool bought the wrong flag with him.
# ::tokens ["fool", "bought", "the", "wrong", "flag", "with", "him", "."]
# ::lemmas ["fool", "buy", "the", "wrong", "flag", "with", "he", "."]
(c17-3 / buy-01
       :ARG0 (c17-2 / fool)
       :ARG1 (c17-4 / flag
                    :ARG1-of (c17-1 / wrong-04))
       :ARG4 (c17-0 / he))

# ::snt the fucking PM is a liar, admiring Japanese weapons used in WWII, he killed whales in -2014 by indulging Jap
# ::tokens ["the", "fucking", "PM", "is", "a", "liar", ",", "admiring", "Japanese", "weapons", "used", "in", "WWII", ",", "he", "killed", "whales", "in", "-2014", "by", "indulging", "Jap"]
# ::lemmas ["the", "fucking", "pm", "be", "a", "liar", ",", "admire", "Japanese", "weapon", "use", "in", "WWII", ",", "he", "kill", "whale", "in", "-2014", "by", "indulge", "Jap"]
(c18-7 / and
       :op1 (c18-9 / lie-08
                   :ARG0 (c18-4 / person
                                :ARG0-of (c18-8 / have-org-role-91
                                                :ARG2 (c18-0 / minister
                                                             :mod (c18-6 / prime)))
                                :mod (c18-10 / fucking)))
       :op2 (c18-15 / admire-01
                    :ARG0 c18-4
                    :ARG1 (c18-13 / weapon
                                  :mod (c18-19 / country
                                               :name (c18-12 / name
                                                             :op1 "Japan"))
                                  :ARG1-of (c18-14 / use-01
                                                   :time (c18-2 / war
                                                                :name (c18-18 / name
                                                                              :op1 "WWII")))))
       :op3 (c18-17 / kill-01
                    :ARG0 c18-4
                    :ARG1 (c18-1 / whale)
                    :time (c18-5 / date-entity
                                 :year 2014)
                    :manner (c18-16 / indulge-01
                                    :ARG0 c18-4
                                    :ARG1 (c18-11 / person
                                                  :name (c18-3 / name
                                                               :op1 "Jap")))))

# ::snt YES
# ::tokens ["YES"]
# ::lemmas ["yes"]
(c19-0 / yes)

# ::snt Absolutely Mike can't imagine that fear! Must seem surreal when you have been in there
# ::tokens ["Absolutely", "Mike", "ca", "n't", "imagine", "that", "fear", "!", "Must", "seem", "surreal", "when", "you", "have", "been", "in", "there"]
# ::lemmas ["absolutely", "Mike", "can", "not", "imagine", "that", "fear", "!", "must", "seem", "surreal", "when", "you", "have", "be", "in", "there"]
(c20-2 / multi-sentence
       :snt1 (c20-8 / possible-01
                    :ARG1 (c20-6 / imagine-01
                                 :ARG0 (c20-12 / person
                                               :name (c20-7 / name
                                                            :op1 "Mike"))
                                 :ARG1 (c20-1 / fear-01
                                              :mod (c20-11 / that)))
                    :mod (c20-13 / absolute)
                    :polarity -)
       :snt2 (c20-4 / obligate-01
                    :ARG2 (c20-10 / seem-01
                                  :ARG1 (c20-5 / surreal)
                                  :time (c20-3 / be-located-at-91
                                               :ARG1 (c20-0 / you)
                                               :ARG2 (c20-9 / there)))))

# ::snt four packages better get Lambie on the case are they large ?
# ::tokens ["four", "packages", "better", "get", "Lambie", "on", "the", "case", "are", "they", "large", "?"]
# ::lemmas ["four", "package", "well", "get", "Lambie", "on", "the", "case", "be", "they", "large", "?"]
(c21-2 / multi-sentence
       :snt1 (c21-0 / have-degree-91
                    :ARG1 (c21-7 / get-01
                                 :ARG1 (c21-6 / case-03
                                              :ARG0 (c21-4 / person
                                                           :name (c21-3 / name
                                                                        :op1 "Lambie")))
                                 :ARG2 (c21-9 / package
                                              :quant 4))
                    :ARG2 (c21-5 / good-02
                                 :ARG1 c21-7)
                    :ARG3 (c21-8 / more))
       :snt2 (c21-1 / large
                    :domain c21-9
                    :polarity (c21-10 / amr-unknown)))
