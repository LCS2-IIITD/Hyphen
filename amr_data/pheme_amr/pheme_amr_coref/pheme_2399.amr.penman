# ::snt Talk about putting a country in debt...
# ::tokens ["Talk", "about", "putting", "a", "country", "in", "debt", "..."]
# ::lemmas ["talk", "about", "put", "a", "country", "in", "debt", "..."]
(c1-3 / talk-01
      :ARG1 (c1-1 / put-03
                  :ARG1 (c1-2 / country)
                  :ARG2 (c1-0 / debt)))

# ::snt must be stopped, now. Military grade weaponry must be confiscated by Fed, sold to allies or scrap.
# ::tokens ["must", "be", "stopped", ",", "now", ".", "Military", "grade", "weaponry", "must", "be", "confiscated", "by", "Fed", ",", "sold", "to", "allies", "or", "scrap", "."]
# ::lemmas ["must", "be", "stop", ",", "now", ".", "military", "grade", "weaponry", "must", "be", "confiscate", "by", "Fed", ",", "sell", "to", "ally", "or", "scrap", "."]
(c2-2 / multi-sentence
      :snt1 (c2-4 / obligate-01
                  :ARG2 (c2-13 / stop-01
                               :time (c2-7 / now)))
      :snt2 (c2-1 / obligate-01
                  :ARG2 (c2-14 / and
                               :op1 (c2-11 / confiscate-01
                                           :ARG0 (c2-12 / government-organization
                                                        :name (c2-8 / name
                                                                    :op1 "Fed"))
                                           :ARG1 (c2-0 / weaponry
                                                       :mod (c2-10 / grade
                                                                   :mod (c2-9 / military))))
                               :op2 (c2-5 / sell-01
                                          :ARG1 c2-0
                                          :ARG2 (c2-6 / ally))
                               :op3 (c2-3 / scrap-01
                                          :ARG1 c2-0))))

# ::snt Many for $0. Nobody affected was nearly white enough.
# ::tokens ["Many", "for", "$", "0", ".", "Nobody", "affected", "was", "nearly", "white", "enough", "."]
# ::lemmas ["many", "for", "$", "0", ".", "nobody", "affect", "be", "nearly", "white", "enough", "."]
(c3-3 / multi-sentence
      :snt1 (c3-7 / many
                  :ARG1-of (c3-9 / cost-01
                                 :ARG2 (c3-2 / monetary-quantity
                                             :unit (c3-8 / dollar)
                                             :quant 0)))
      :snt2 (c3-1 / white-02
                  :ARG1 (c3-5 / nobody
                              :ARG1-of (c3-10 / affect-01))
                  :ARG2-of (c3-0 / have-degree-91
                                 :ARG1 c3-5
                                 :ARG3 (c3-4 / enough))
                  :degree (c3-6 / near)))

# ::snt let's just say the U.S. will be taking out a second mortgage from China
# ::tokens ["let", "'s", "just", "say", "the", "U.S.", "will", "be", "taking", "out", "a", "second", "mortgage", "from", "China"]
# ::lemmas ["let", "us", "just", "say", "the", "U.S.", "will", "be", "take", "out", "a", "second", "mortgage", "from", "China"]
(c4-8 / say-01
      :ARG0 (c4-1 / we)
      :ARG1 (c4-9 / take-out-11
                  :ARG0 (c4-7 / country
                              :name (c4-4 / name
                                          :op1 "U.S."))
                  :ARG1 (c4-2 / mortgage-01
                              :ord (c4-3 / ordinal-entity
                                         :value 2))
                  :ARG2 (c4-6 / country
                              :name (c4-5 / name
                                          :op1 "China")))
      :mod (c4-0 / just)
      :mode imperative)

# ::snt they'll probably: pay a settlementarrest more peopleseize their assets???Profit
# ::tokens ["they", "'ll", "probably", ":", "pay", "a", "settlementarrest", "more", "peopleseize", "their", "assets???Profit"]
# ::lemmas ["they", "'ll", "probably", ":", "pay", "a", "settlementarrest", "more", "peopleseize", "their", "assets???profit"]
(c5-4 / probable
      :domain (c5-2 / obligate-01
                    :ARG1 (c5-6 / they)
                    :ARG2 (c5-7 / pay-01
                                :ARG0 c5-6
                                :ARG1 (c5-5 / settle-02)
                                :ARG2 (c5-1 / person
                                            :quant (c5-0 / more))
                                :ARG3 (c5-8 / asset
                                            :poss c5-6))
                    :polarity (c5-3 / amr-unknown)))

# ::snt How many lawsuits totalling how much $$$ are going to come out of the recent events in ?
# ::tokens ["How", "many", "lawsuits", "totalling", "how", "much", "$", "$", "$", "are", "going", "to", "come", "out", "of", "the", "recent", "events", "in", "?"]
# ::lemmas ["how", "many", "lawsuit", "total", "how", "much", "$", "$", "$", "be", "go", "to", "come", "out", "of", "the", "recent", "event", "in", "?"]
(c6-4 / come-out-09
      :ARG1 (c6-1 / event
                  :time (c6-3 / recent))
      :ARG2 (c6-5 / sue-02
                  :quant (c6-7 / amr-unknown)
                  :ARG0-of (c6-6 / tot-01
                                 :ARG1 (c6-0 / monetary-quantity
                                             :quant (c6-2 / amr-unknown)))))

# ::snt Seems a global thing, constant auhtority messes, then cover ups, only to be followed by lawsuits. Time for change
# ::tokens ["Seems", "a", "global", "thing", ",", "constant", "auhtority", "messes", ",", "then", "cover", "ups", ",", "only", "to", "be", "followed", "by", "lawsuits", ".", "Time", "for", "change"]
# ::lemmas ["seem", "a", "global", "thing", ",", "constant", "auhtority", "mess", ",", "then", "cover", "up", ",", "only", "to", "be", "follow", "by", "lawsuit", ".", "time", "for", "change"]
(c7-1 / multi-sentence
      :snt1 (c7-11 / seem-01
                   :ARG1 (c7-13 / thing
                                :mod (c7-9 / globe)
                                :domain (c7-14 / and
                                               :op1 (c7-6 / mess-up-02
                                                          :mod (c7-4 / auhtority)
                                                          :mod (c7-8 / constant))
                                               :op2 (c7-7 / cover-up-04
                                                          :time (c7-10 / then))
                                               :op3 (c7-0 / follow-01
                                                          :ARG1 (c7-3 / sue-02)
                                                          :mod (c7-2 / only)))))
      :snt2 (c7-5 / time
                  :purpose (c7-12 / change-01)))

# ::snt Go ahead, admit you are a copyright troll and paid crisis shill for the purpose of panning out false flags whether good or not
# ::tokens ["Go", "ahead", ",", "admit", "you", "are", "a", "copyright", "troll", "and", "paid", "crisis", "shill", "for", "the", "purpose", "of", "panning", "out", "false", "flags", "whether", "good", "or", "not"]
# ::lemmas ["go", "ahead", ",", "admit", "you", "be", "a", "copyright", "troll", "and", "pay", "crisis", "shill", "for", "the", "purpose", "of", "pan", "out", "false", "flag", "whether", "good", "or", "not"]
(c8-17 / and
       :op1 (c8-10 / go-06
                   :ARG0 (c8-0 / you)
                   :ARG2 (c8-3 / ahead)
                   :mode imperative)
       :op2 (c8-6 / admit-01
                  :ARG0 c8-0
                  :ARG1 (c8-14 / and
                               :op1 (c8-15 / troll-01
                                           :ARG2 (c8-9 / copyright-01))
                               :op2 (c8-7 / pay-01
                                          :ARG0 c8-0
                                          :ARG1 (c8-13 / shill
                                                       :mod (c8-8 / crisis))
                                          :purpose (c8-16 / pan-out-02
                                                          :ARG0 c8-0
                                                          :ARG1 (c8-1 / flag
                                                                      :mod (c8-4 / false))
                                                          :ARG1-of (c8-11 / regardless-91
                                                                          :ARG2 (c8-2 / or
                                                                                      :op1 (c8-12 / good-02)
                                                                                      :op2 (c8-5 / good-02
                                                                                                 :polarity -))))))
                  :mode imperative))

# ::snt , St Louis County will have to sell all them fancy toys they got for free (1033 program) to make a down payment.
# ::tokens [",", "St", "Louis", "County", "will", "have", "to", "sell", "all", "them", "fancy", "toys", "they", "got", "for", "free", "(", "1033", "program", ")", "to", "make", "a", "down", "payment", "."]
# ::lemmas [",", "St", "Louis", "County", "will", "have", "to", "sell", "all", "they", "fancy", "toy", "they", "get", "for", "free", "(", "1033", "program", ")", "to", "make", "a", "down", "payment", "."]
(c9-2 / obligate-01
      :ARG1 (c9-7 / county
                  :name (c9-4 / name
                              :op1 "St"
                              :op2 "Louis"
                              :op3 "County"))
      :ARG2 (c9-10 / sell-01
                   :ARG0 c9-7
                   :ARG1 (c9-11 / toy
                                :mod (c9-0 / fancy)
                                :mod (c9-13 / all)
                                :ARG1-of (c9-8 / get-01
                                               :ARG0 (c9-9 / they)
                                               :ARG3 (c9-3 / free-03
                                                           :ARG1-of (c9-1 / mean-01
                                                                          :ARG2 (c9-5 / program
                                                                                      :name c9-4
                                                                                      :op1 "1033"))))))
      :purpose (c9-12 / pay-01
                      :ARG0 c9-9
                      :ARG1 (c9-6 / down)))

# ::snt Tons man, and its sad.
# ::tokens ["Tons", "man", ",", "and", "its", "sad", "."]
# ::lemmas ["ton", "man", ",", "and", "its", "sad", "."]
(c10-4 / and
       :op1 (c10-2 / person
                   :name (c10-1 / name
                                :op1 "Tons"
                                :op2 "man"))
       :op2 (c10-3 / sad-02
                   :ARG0 (c10-0 / it)))

# ::snt lets just say every one might be rich there they just went through some crazy shit
# ::tokens ["lets", "just", "say", "every", "one", "might", "be", "rich", "there", "they", "just", "went", "through", "some", "crazy", "shit"]
# ::lemmas ["lets", "just", "say", "every", "one", "might", "be", "rich", "there", "they", "just", "go", "through", "some", "crazy", "shit"]
(c11-10 / say-01
        :ARG0 (c11-1 / we)
        :ARG1 (c11-5 / possible-01
                     :ARG1 (c11-6 / rich
                                  :domain (c11-3 / everyone)
                                  :location (c11-11 / there)))
        :mod (c11-0 / just)
        :ARG1-of (c11-7 / cause-01
                        :ARG0 (c11-8 / go-through-20
                                     :ARG0 c11-3
                                     :ARG1 (c11-4 / shit
                                                  :ARG1-of (c11-9 / crazy-03)
                                                  :mod (c11-2 / some))
                                     :mod c11-0))
        :mode imperative)

# ::snt Help me destroy the U.S Gov't sign my petition
# ::tokens ["Help", "me", "destroy", "the", "U.S", "Gov't", "sign", "my", "petition"]
# ::lemmas ["help", "i", "destroy", "the", "U.S", "Gov't", "sign", "my", "petition"]
(c12-0 / help-01
       :ARG0 (c12-1 / you)
       :ARG1 (c12-5 / destroy-01
                    :ARG0 (c12-2 / i)
                    :ARG1 (c12-7 / government-organization
                                 :ARG0-of (c12-6 / govern-01
                                                 :ARG1 (c12-8 / country
                                                              :name (c12-3 / name
                                                                           :op1 "U.S.")))))
       :ARG2 (c12-9 / sign-01
                    :ARG0 c12-1
                    :ARG1 (c12-4 / petition-01
                                 :ARG0 c12-2)
                    :mode imperative)
       :mode imperative)

# ::snt : How many lawsuits totalling how much $$$ are going to come out of the recent events in ?0 and $
# ::tokens [":", "How", "many", "lawsuits", "totalling", "how", "much", "$", "$", "$", "are", "going", "to", "come", "out", "of", "the", "recent", "events", "in", "?", "0", "and", "$"]
# ::lemmas [":", "how", "many", "lawsuit", "total", "how", "much", "$", "$", "$", "be", "go", "to", "come", "out", "of", "the", "recent", "event", "in", "?", "0", "and", "$"]
(c13-11 / and
        :op1 (c13-9 / sue-02
                    :quant (c13-2 / amr-unknown)
                    :ARG0-of (c13-10 / tot-01
                                     :ARG1 (c13-0 / monetary-quantity
                                                  :ARG1-of (c13-7 / come-out-09
                                                                  :ARG2 (c13-1 / event
                                                                               :time (c13-6 / recent)))))
                    :op2-of c13-11)
        :quant (c13-4 / amr-unknown)
        :ARG0-of (c13-3 / represent-01
                        :ARG1 (c13-5 / monetary-quantity
                                     :unit (c13-8 / dollar)
                                     :quant 0)))

# ::snt I think after all this is done the police will have way better gear next time, shoot maybe even Robocops.
# ::tokens ["I", "think", "after", "all", "this", "is", "done", "the", "police", "will", "have", "way", "better", "gear", "next", "time", ",", "shoot", "maybe", "even", "Robocops", "."]
# ::lemmas ["i", "think", "after", "all", "this", "be", "do", "the", "police", "will", "have", "way", "well", "gear", "next", "time", ",", "shoot", "maybe", "even", "Robocops", "."]
(c14-20 / think-01
        :ARG0 (c14-17 / i)
        :ARG1 (c14-6 / and
                     :op1 (c14-7 / have-03
                                 :ARG0 (c14-1 / police)
                                 :ARG1 (c14-14 / gear
                                               :ARG1-of (c14-5 / have-degree-91
                                                               :ARG2 (c14-2 / good-02
                                                                            :ARG1 c14-14)
                                                               :ARG3 (c14-0 / more
                                                                            :quant (c14-15 / way))))
                                 :time (c14-19 / time
                                               :mod (c14-11 / next)))
                     :op2 (c14-3 / shoot-02
                                 :ARG0 c14-1
                                 :ARG2 (c14-4 / person
                                              :ARG0-of (c14-13 / rob-01)
                                              :mod (c14-10 / even)
                                              :ARG1-of (c14-8 / possible-01)))
                     :time (c14-16 / after
                                   :op1 (c14-9 / be-done-08
                                               :ARG1 (c14-18 / this
                                                             :mod (c14-12 / all))))))

# ::snt How about you admit Occupy and Anonymous filmed all that last year?
# ::tokens ["How", "about", "you", "admit", "Occupy", "and", "Anonymous", "filmed", "all", "that", "last", "year", "?"]
# ::lemmas ["how", "about", "you", "admit", "Occupy", "and", "Anonymous", "film", "all", "that", "last", "year", "?"]
(c15-8 / possible-01
       :ARG1 (c15-13 / admit-01
                     :ARG0 (c15-0 / you)
                     :ARG1 (c15-1 / film-01
                                  :ARG0 (c15-5 / and
                                               :op1 (c15-4 / event
                                                           :name (c15-6 / name
                                                                        :op1 "Occupy"
                                                                        :op2 "Oakland"))
                                               :op2 (c15-3 / organization
                                                           :name (c15-7 / name
                                                                        :op1 "Anonymous")))
                                  :ARG1 (c15-12 / that
                                                :mod (c15-9 / all))
                                  :time (c15-10 / year
                                                :mod (c15-2 / last))))
       :polarity (c15-11 / amr-unknown))

# ::snt I hope that the lawsuits will be countless but, sadly, I doubt that any structural changes Williams occur
# ::tokens ["I", "hope", "that", "the", "lawsuits", "will", "be", "countless", "but", ",", "sadly", ",", "I", "doubt", "that", "any", "structural", "changes", "Williams", "occur"]
# ::lemmas ["i", "hope", "that", "the", "lawsuit", "will", "be", "countless", "but", ",", "sadly", ",", "i", "doubt", "that", "any", "structural", "change", "Williams", "occur"]
(c16-7 / contrast-01
       :ARG1 (c16-0 / hope-01
                    :ARG0 (c16-3 / i)
                    :ARG1 (c16-6 / countless
                                 :domain (c16-10 / sue-02)))
       :ARG2 (c16-8 / doubt-01
                    :ARG0 c16-3
                    :ARG1 (c16-9 / change-01
                                 :ARG0 (c16-5 / person
                                              :name (c16-4 / name
                                                           :op1 "Williams"))
                                 :ARG1 (c16-2 / structure)
                                 :mod (c16-11 / any))
                    :ARG0-of (c16-1 / sad-02)))

# ::snt Maybe someday it won't be about lawsuits but rather change and justice
# ::tokens ["Maybe", "someday", "it", "wo", "n't", "be", "about", "lawsuits", "but", "rather", "change", "and", "justice"]
# ::lemmas ["maybe", "someday", "it", "will", "not", "be", "about", "lawsuit", "but", "rather", "change", "and", "justice"]
(c17-3 / possible-01
       :ARG1 (c17-5 / concern-02
                    :ARG0 (c17-2 / it)
                    :ARG1 (c17-7 / sue-02)
                    :time (c17-1 / someday)
                    :ARG1-of (c17-4 / contrast-01
                                    :ARG2 (c17-6 / concern-02
                                                 :ARG0 c17-2
                                                 :ARG1 (c17-8 / and
                                                              :op1 (c17-9 / change-01)
                                                              :op2 (c17-0 / justice))))
                    :polarity -))

# ::snt No. Anon. How long will you wait past the glamor and the glory for the Mike Brown's law you promised? USA needs it.
# ::tokens ["No", ".", "Anon", ".", "How", "long", "will", "you", "wait", "past", "the", "glamor", "and", "the", "glory", "for", "the", "Mike", "Brown", "'s", "law", "you", "promised", "?", "USA", "needs", "it", "."]
# ::lemmas ["no", ".", "Anon", ".", "how", "long", "will", "you", "wait", "past", "the", "glamor", "and", "the", "glory", "for", "the", "Mike", "Brown", "'s", "law", "you", "promise", "?", "USA", "need", "it", "."]
(c18-3 / multi-sentence
       :snt1 (c18-6 / no)
       :snt2 (c18-14 / say-01
                     :ARG1 (c18-0 / wait-01
                                  :ARG1 (c18-1 / you)
                                  :ARG2 (c18-8 / past
                                               :op1 (c18-16 / and
                                                            :op1 (c18-11 / glamor)
                                                            :op2 (c18-9 / glory)
                                                            :beneficiary (c18-2 / law
                                                                                :poss (c18-15 / person
                                                                                              :name (c18-7 / name
                                                                                                           :op1 "Mike"
                                                                                                           :op2 "Brown"))
                                                                                :ARG1-of (c18-4 / promise-01
                                                                                                :ARG0 c18-1))))
                                  :duration (c18-5 / amr-unknown))
                     :ARG2 c18-15
                     :name (c18-10 / name
                                   :op1 "Anon"))
       :snt3 (c18-12 / need-01
                     :ARG0 (c18-13 / country
                                   :name (c18-17 / name
                                                 :op1 "USA"))
                     :ARG1 c18-2))

# ::snt many, a lot, respectively
# ::tokens ["many", ",", "a", "lot", ",", "respectively"]
# ::lemmas ["many", ",", "a", "lot", ",", "respectively"]
(c19-2 / and
       :op1 (c19-1 / many)
       :op2 (c19-0 / lot))
