# ::snt l'avion aurait dcroch mi parcours ?
# ::tokens ["l'avion", "aurait", "dcroch", "mi", "parcours", "?"]
# ::lemmas ["l'avion", "aurait", "dcroch", "mi", "parcour", "?"]
(c1-0 / amr-unintelligible
      :value "l'avion aurait dcroch mi parcours")

# ::snt Ja, zit nu te kijken op de replay en je ziet hem inderdaad al een pak op voorhand dalen
# ::tokens ["Ja", ",", "zit", "nu", "te", "kijken", "op", "de", "replay", "en", "je", "ziet", "hem", "inderdaad", "al", "een", "pak", "op", "voorhand", "dalen"]
# ::lemmas ["Ja", ",", "zit", "nu", "te", "kijken", "op", "de", "replay", "en", "je", "ziet", "hem", "inderdaad", "al", "een", "pak", "op", "voorhand", "dalen"]
(c2-11 / say-01
       :ARG0 (c2-4 / i)
       :ARG1 (c2-14 / and
                    :op1 (c2-12 / kijken
                                :ARG1-of (c2-2 / op-02
                                               :ARG0 (c2-8 / replay-01))
                                :polarity -)
                    :op2 (c2-1 / ziet-01
                               :ARG1 (c2-0 / hem)
                               :ARG2 (c2-10 / inderdaad
                                            :mod (c2-3 / al-een))
                               :op3-of c2-14)
                    :ARG1 c2-0
                    :ARG2 (c2-7 / pak
                                :mod (c2-6 / van
                                           :location (c2-9 / city
                                                           :name (c2-5 / name
                                                                       :op1 "Voorhand")))))
       :ARG2 (c2-13 / person
                    :name c2-5
                    :op1 "Ja"))

# ::snt :that's a crash in a mountain.
# ::tokens [":", "that", "'s", "a", "crash", "in", "a", "mountain", "."]
# ::lemmas [":", "that", "be", "a", "crash", "in", "a", "mountain", "."]
(c3-2 / crash-01
      :ARG1 (c3-1 / mountain)
      :domain (c3-0 / that))

# ::snt Don`t know. They said decent rate would be like a normal decetn for landing. my Point of view: don`t think so. pretty fast decend
# ::tokens ["Don`t", "know", ".", "They", "said", "decent", "rate", "would", "be", "like", "a", "normal", "decetn", "for", "landing", ".", "my", "Point", "of", "view", ":", "don`t", "think", "so", ".", "pretty", "fast", "decend"]
# ::lemmas ["don`t", "know", ".", "they", "say", "decent", "rate", "would", "be", "like", "a", "normal", "decetn", "for", "landing", ".", "my", "Point", "of", "view", ":", "don`t", "think", "so", ".", "pretty", "fast", "decend"]
(c4-3 / multi-sentence
      :snt1 (c4-7 / know-01
                  :ARG0 (c4-6 / i)
                  :polarity -)
      :snt2 (c4-15 / say-01
                   :ARG0 (c4-16 / they)
                   :ARG1 (c4-11 / resemble-01
                                :ARG1 (c4-8 / rate
                                            :mod (c4-12 / decent))
                                :ARG2 (c4-1 / decet-00
                                            :ARG1-of (c4-9 / normal-02)
                                            :purpose (c4-2 / land-01))))
      :snt3 (c4-0 / have-point-of-view-08
                  :ARG0 (c4-13 / i)
                  :ARG2 (c4-14 / think-01
                               :ARG0 c4-13
                               :ARG1 (c4-5 / so)
                               :polarity -))
      :snt4 (c4-17 / decend-01
                   :ARG1-of (c4-4 / fast-02
                                  :degree (c4-10 / pretty))))

# ::snt I got a bad bout of hypoxia once but it didnt makeme crash a plane into a mountain
# ::tokens ["I", "got", "a", "bad", "bout", "of", "hypoxia", "once", "but", "it", "did", "nt", "makeme", "crash", "a", "plane", "into", "a", "mountain"]
# ::lemmas ["i", "get", "a", "bad", "bout", "of", "hypoxia", "once", "but", "it", "do", "not", "makeme", "crash", "a", "plane", "into", "a", "mountain"]
(c6-7 / contrast-01
      :ARG1 (c6-8 / get-01
                  :ARG0 (c6-3 / i)
                  :ARG1 (c6-2 / bout
                              :ARG1-of (c6-6 / bad-07)
                              :mod (c6-0 / hypoxia))
                  :frequency 1)
      :ARG2 (c6-1 / make-02
                  :ARG0 c6-0
                  :ARG1 (c6-5 / crash-01
                              :ARG0 c6-3
                              :ARG1 (c6-4 / plane)
                              :destination (c6-9 / mountain))
                  :polarity -))

# ::snt you clearly don't. Disgusting.
# ::tokens ["you", "clearly", "do", "n't", ".", "Disgusting", "."]
# ::lemmas ["you", "clearly", "do", "not", ".", "Disgusting", "."]
(c7-2 / multi-sentence
      :snt1 (c7-3 / do-02
                  :ARG0 (c7-0 / you)
                  :ARG1-of (c7-4 / clear-06)
                  :polarity -)
      :snt2 (c7-1 / disgust-01))

# ::snt But the FACTS are that he did shove it into a mountain.
# ::tokens ["But", "the", "FACTS", "are", "that", "he", "did", "shove", "it", "into", "a", "mountain", "."]
# ::lemmas ["but", "the", "FACTS", "be", "that", "he", "do", "shove", "it", "into", "a", "mountain", "."]
(c8-4 / contrast-01
      :ARG2 (c8-1 / fact
                  :domain (c8-5 / shove-01
                                :ARG0 (c8-0 / he)
                                :ARG1 (c8-3 / it)
                                :ARG2 (c8-2 / mountain))))

# ::snt The captain had yrs hours with Germanwings &amp; Lufthansa, which is extremely experienced /2
# ::tokens ["The", "captain", "had", "yrs", "hours", "with", "Germanwings", "&", "amp", ";", "Lufthansa", ",", "which", "is", "extremely", "experienced", "/2"]
# ::lemmas ["the", "captain", "have", "yrs", "hours", "with", "Germanwings", "&", "amp", ";", "Lufthansa", ",", "which", "be", "extremely", "experienced", "/2"]
(c9-13 / and
       :op1 (c9-0 / have-03
                  :ARG0 (c9-8 / person
                              :ARG0-of (c9-15 / have-org-role-91
                                              :ARG2 (c9-10 / captain)))
                  :ARG1 (c9-2 / multiple
                              :op1 (c9-14 / temporal-quantity
                                          :unit (c9-7 / hour)
                                          :quant 1))
                  :accompanier (c9-5 / and
                                     :op1 (c9-9 / company
                                                :name (c9-6 / name
                                                            :op1 "Germanwings"
                                                            :op2 "&"
                                                            :op3 "amp"))
                                     :op2 (c9-12 / company
                                                 :name (c9-11 / name
                                                              :op1 "Lufthansa")
                                                 :ARG1-of (c9-4 / experience-01
                                                                :degree (c9-3 / extreme))))
                  :op2-of c9-13)
       :ARG0 c9-8
       :ARG1 c9-2
       :duration-of (c9-1 / work-01
                          :ARG0 c9-8))

# ::snt How do you know? It may have been that the windscreen craccked causign hypoxia. (1/2)
# ::tokens ["How", "do", "you", "know", "?", "It", "may", "have", "been", "that", "the", "windscreen", "craccked", "causign", "hypoxia", ".", "(", "1/2", ")"]
# ::lemmas ["how", "do", "you", "know", "?", "it", "may", "have", "be", "that", "the", "windscreen", "craccked", "causign", "hypoxia", ".", "(", "1/2", ")"]
(c10-3 / multi-sentence
       :snt1 (c10-8 / know-01
                    :ARG0 (c10-1 / you)
                    :manner (c10-10 / amr-unknown))
       :snt2 (c10-4 / possible-01
                    :ARG1 (c10-0 / hypoxia
                                 :mod (c10-7 / symptom)
                                 :ARG1-of (c10-6 / cramp-01
                                                 :ARG0 (c10-2 / windscreen))))
       :snt3 (c10-9 / publication
                    :ARG1-of (c10-5 / cite-01
                                    :ARG2 "1/2")))

# ::snt very strange
# ::tokens ["very", "strange"]
# ::lemmas ["very", "strange"]
(c11-0 / strange
       :degree (c11-1 / very))

# ::snt ?
# ::tokens ["?"]
# ::lemmas ["?"]
(c12-0 / request-confirmation-91)

# ::snt The last minutes.
# ::tokens ["The", "last", "minutes", "."]
# ::lemmas ["The", "last", "minutes", "."]
(c13-1 / minute
       :mod (c13-0 / last))

# ::snt D-AIPX dropped considerable altitude in the mins prior to losing signal.
# ::tokens ["D", "-", "AIPX", "dropped", "considerable", "altitude", "in", "the", "mins", "prior", "to", "losing", "signal", "."]
# ::lemmas ["d", "-", "aipx", "drop", "considerable", "altitude", "in", "the", "min", "prior", "to", "lose", "signal", "."]
(c14-5 / drop-01
       :ARG0 (c14-4 / product
                    :name (c14-3 / name
                                 :op1 "D-AIPX"))
       :ARG1 (c14-9 / altitude
                    :degree (c14-6 / considerable))
       :time (c14-2 / before
                    :op1 (c14-0 / lose-02
                                :ARG0 c14-4
                                :ARG1 (c14-7 / signal))
                    :duration (c14-8 / temporal-quantity
                                     :unit (c14-1 / minute)
                                     :quant 1)))

# ::snt Grow up, mate.
# ::tokens ["Grow", "up", ",", "mate", "."]
# ::lemmas ["grow", "up", ",", "mate", "."]
(c16-1 / grow-up-04
       :ARG1 (c16-0 / mate)
       :mode imperative)

# ::snt ft are also the surrd'g mountains. So, the radar contact interrupted at this height. The Crash site is lower.
# ::tokens ["ft", "are", "also", "the", "surrd'g", "mountains", ".", "So", ",", "the", "radar", "contact", "interrupted", "at", "this", "height", ".", "The", "Crash", "site", "is", "lower", "."]
# ::lemmas ["ft", "be", "also", "the", "surrd'g", "mountain", ".", "so", ",", "the", "radar", "contact", "interrupt", "at", "this", "height", ".", "the", "Crash", "site", "be", "low", "."]
(c17-2 / multi-sentence
       :snt1 (c17-8 / mountain
                    :mod (c17-1 / mountain
                                :name (c17-7 / name
                                             :op1 "Surnd'g"))
                    :domain (c17-3 / ft)
                    :mod (c17-16 / also))
       :snt2 (c17-6 / interrupt-01
                    :ARG1 (c17-10 / contact-01
                                  :ARG0 (c17-9 / radar))
                    :time (c17-0 / high-02
                                 :mod (c17-15 / this))
                    :ARG0-of (c17-11 / cause-01))
       :snt3 (c17-4 / have-degree-91
                    :ARG1 (c17-14 / site
                                  :mod (c17-13 / crash-01))
                    :ARG2 (c17-5 / low-04
                                 :ARG1 c17-14)
                    :ARG3 (c17-12 / more)))

# ::snt My god!
# ::tokens ["My", "god", "!"]
# ::lemmas ["my", "god", "!"]
(c18-1 / person
       :name (c18-0 / name
                    :op1 "God")
       :poss (c18-2 / i)
       :mode expressive)

# ::snt was about to say that... feet above Alps..
# ::tokens ["was", "about", "to", "say", "that", "...", "feet", "above", "Alps", ".."]
# ::lemmas ["be", "about", "to", "say", "that", "...", "foot", "above", "Alps", ".."]
(c19-5 / say-01
       :ARG1 (c19-6 / that)
       :time (c19-7 / about-to)
       :location (c19-2 / above
                        :op1 (c19-1 / mountain
                                    :name (c19-3 / name
                                                 :op1 "Alps"))
                        :quant (c19-4 / distance-quantity
                                      :unit (c19-0 / foot)
                                      :quant 1)))

# ::snt Is the red dotted line the route it should've taken?
# ::tokens ["Is", "the", "red", "dotted", "line", "the", "route", "it", "should", "'ve", "taken", "?"]
# ::lemmas ["be", "the", "red", "dot", "line", "the", "route", "it", "should", "'ve", "take", "?"]
(c20-4 / route
       :polarity (c20-6 / amr-unknown)
       :ARG1-of (c20-5 / take-01
                       :ARG0 (c20-2 / it)
                       :ARG1-of (c20-3 / recommend-01))
       :ARG1-of (c20-1 / red-02)
       :ARG2-of (c20-0 / line-01))

# ::snt "FACTS"? Show me!
# ::tokens ["\"", "FACTS", "\"", "?", "Show", "me", "!"]
# ::lemmas ["\"", "FACTS", "\"", "?", "show", "i", "!"]
(c21-3 / show-01
       :ARG0 (c21-0 / you)
       :ARG1 (c21-1 / fact)
       :ARG2 (c21-2 / i)
       :polarity (c21-4 / amr-unknown)
       :mode imperative)

# ::snt the Germans will blame us. Putin will order them over the channel ffs
# ::tokens ["the", "Germans", "will", "blame", "us", ".", "Putin", "will", "order", "them", "over", "the", "channel", "ffs"]
# ::lemmas ["the", "Germans", "will", "blame", "we", ".", "Putin", "will", "order", "they", "over", "the", "channel", "ff"]
(c22-2 / multi-sentence
       :snt1 (c22-3 / blame-01
                    :ARG0 (c22-7 / person
                                 :mod (c22-9 / country
                                             :name (c22-5 / name
                                                          :op1 "Germany")))
                    :ARG1 (c22-0 / we))
       :snt2 (c22-4 / order-01
                    :ARG0 (c22-11 / person
                                  :name (c22-6 / name
                                               :op1 "Putin"))
                    :ARG1 (c22-10 / they)
                    :medium (c22-8 / channel
                                   :mod (c22-1 / fucking
                                               :mode expressive))))

# ::snt hahahaha!
# ::tokens ["hahahaha", "!"]
# ::lemmas ["hahahaha", "!"]
(c23-0 / haha
       :mode expressive)

# ::snt carked it in the mountains. Hairy.
# ::tokens ["carked", "it", "in", "the", "mountains", ".", "Hairy", "."]
# ::lemmas ["cark", "it", "in", "the", "mountain", ".", "Hairy", "."]
(c24-1 / multi-sentence
       :snt1 (c24-4 / spark-01
                    :ARG0 (c24-2 / it)
                    :location (c24-3 / mountain))
       :snt2 (c24-0 / haha))

# ::snt look at its decent rate at the top... It's final steps
# ::tokens ["look", "at", "its", "decent", "rate", "at", "the", "top", "...", "It", "'s", "final", "steps"]
# ::lemmas ["look", "at", "its", "decent", "rate", "at", "the", "top", "...", "it", "be", "final", "step"]
(c25-2 / multi-sentence
       :snt1 (c25-1 / look-01
                    :ARG0 (c25-0 / you)
                    :ARG1 (c25-6 / rate
                                 :mod (c25-5 / decent)
                                 :poss (c25-4 / it)
                                 :location (c25-9 / top))
                    :mode imperative)
       :snt2 (c25-8 / step-01
                    :ARG4 (c25-7 / it)
                    :mod (c25-3 / final)))

# ::snt totall madness on board?
# ::tokens ["totall", "madness", "on", "board", "?"]
# ::lemmas ["totall", "madness", "on", "board", "?"]
(c26-0 / madness
       :polarity (c26-2 / amr-unknown)
       :mod (c26-1 / all)
       :prep-on (c26-3 / board))

# ::snt Could be a glitch, but look at the path colour. Whatever happened it started long before..
# ::tokens ["Could", "be", "a", "glitch", ",", "but", "look", "at", "the", "path", "colour", ".", "Whatever", "happened", "it", "started", "long", "before", ".."]
# ::lemmas ["could", "be", "a", "glitch", ",", "but", "look", "at", "the", "path", "colour", ".", "whatever", "happen", "it", "start", "long", "before", ".."]
(c27-2 / multi-sentence
       :snt1 (c27-7 / contrast-01
                    :ARG1 (c27-5 / possible-01
                                 :ARG1 (c27-8 / glitch))
                    :ARG2 (c27-1 / look-01
                                 :ARG0 (c27-0 / you)
                                 :ARG1 (c27-6 / color
                                              :mod (c27-11 / path))
                                 :mode imperative))
       :snt2 (c27-10 / start-01
                     :ARG1 (c27-4 / it)
                     :time (c27-3 / before
                                  :quant (c27-9 / long))))

# ::snt Tell me more whilst I put this carrier bag over my head.
# ::tokens ["Tell", "me", "more", "whilst", "I", "put", "this", "carrier", "bag", "over", "my", "head", "."]
# ::lemmas ["tell", "i", "more", "whilst", "i", "put", "this", "carrier", "bag", "over", "my", "head", "."]
(c28-10 / tell-01
        :ARG0 (c28-1 / you)
        :ARG1 (c28-9 / thing
                     :quant (c28-2 / more))
        :ARG2 (c28-5 / i
                     :part (c28-0 / head))
        :time (c28-7 / put-01
                     :ARG0 c28-5
                     :ARG1 (c28-3 / bag
                                  :ARG0-of (c28-8 / carry-01)
                                  :mod (c28-6 / this))
                     :ARG2 (c28-4 / over
                                  :op1 c28-0))
        :mode imperative)

# ::snt ahahhahaha
# ::tokens ["ahahhahaha"]
# ::lemmas ["ahahhahaha"]
(c29-0 / haha
       :mode expressive)

# ::snt Wha???
# ::tokens ["Wha", "?", "?", "?"]
# ::lemmas ["Wha", "?", "?", "?"]
(c30-0 / wha
       :mode expressive)

# ::snt : Last position of Germanwings flight at :40 UTC
# ::tokens [":", "Last", "position", "of", "Germanwings", "flight", "at", ":", "40", "UTC"]
# ::lemmas [":", "last", "position", "of", "Germanwings", "flight", "at", ":", "40", "UTC"]
(c31-3 / position-01
       :ARG1 (c31-0 / fly-01
                    :ARG0 (c31-5 / company
                                 :name (c31-2 / name
                                              :op1 "Germanwings")))
       :ARG2 (c31-1 / last)
       :time (c31-4 / date-entity
                    :time "0:40"
                    :timezone "UTC"))

# ::snt please read the report from the voice recorder before digging yourself into a grave
# ::tokens ["please", "read", "the", "report", "from", "the", "voice", "recorder", "before", "digging", "yourself", "into", "a", "grave"]
# ::lemmas ["please", "read", "the", "report", "from", "the", "voice", "recorder", "before", "dig", "yourself", "into", "a", "grave"]
(c32-6 / read-01
       :ARG0 (c32-0 / you)
       :ARG1 (c32-3 / report-01
                    :ARG0 (c32-5 / person
                                 :ARG0-of (c32-2 / record-01
                                                 :ARG1 (c32-4 / voice))))
       :time (c32-1 / before
                    :op1 (c32-7 / dig-01
                                :ARG0 c32-0
                                :ARG1 c32-0
                                :ARG4 (c32-8 / grave)))
       :mode imperative
       :polite +)

# ::snt Pilot has binned it up the side of a mountain because he's ISIS.
# ::tokens ["Pilot", "has", "binned", "it", "up", "the", "side", "of", "a", "mountain", "because", "he", "'s", "ISIS", "."]
# ::lemmas ["pilot", "have", "bin", "it", "up", "the", "side", "of", "a", "mountain", "because", "he", "be", "ISIS", "."]
(c33-3 / bin-01
       :ARG0 (c33-7 / person
                    :name (c33-5 / name
                                 :op1 "Pilot"))
       :ARG1 (c33-4 / it)
       :direction (c33-2 / up-03
                         :ARG2 (c33-10 / side
                                       :part-of (c33-1 / mountain)))
       :ARG1-of (c33-9 / cause-01
                       :ARG0 (c33-0 / have-org-role-91
                                    :ARG0 c33-7
                                    :ARG1 (c33-8 / criminal-organization
                                                 :name (c33-6 / name
                                                              :op1 "Islamic"
                                                              :op2 "organization")))))

# ::snt obviously not that experienced.
# ::tokens ["obviously", "not", "that", "experienced", "."]
# ::lemmas ["obviously", "not", "that", "experienced", "."]
(c34-1 / experience-01
       :ARG0 (c34-3 / i)
       :degree (c34-2 / that
                      :polarity -)
       :ARG1-of (c34-0 / obvious-01))

# ::snt ft/min is the minimum unpowered rate (ie optimal glide path with engines off).
# ::tokens ["ft", "/", "min", "is", "the", "minimum", "unpowered", "rate", "(", "ie", "optimal", "glide", "path", "with", "engines", "off", ")", "."]
# ::lemmas ["ft", "/", "min", "be", "the", "minimum", "unpowered", "rate", "(", "ie", "optimal", "glide", "path", "with", "engine", "off", ")", "."]
(c35-9 / rate
       :ARG1-of (c35-8 / power-01
                       :polarity -)
       :mod (c35-1 / minimum)
       :ARG1-of (c35-10 / mean-01
                        :ARG2 (c35-14 / path
                                      :purpose (c35-11 / glide-01)
                                      :mod (c35-5 / optimal)
                                      :condition (c35-4 / be-located-at-91
                                                        :ARG1 (c35-6 / engine)
                                                        :ARG2 (c35-0 / off))))
       :domain (c35-7 / rate-entity-91
                      :ARG1 (c35-12 / distance-quantity
                                    :unit (c35-2 / foot)
                                    :quant 1)
                      :ARG2 (c35-13 / temporal-quantity
                                    :unit (c35-3 / minute)
                                    :quant 1)))

# ::snt Where was the pilot? How come he didn't use the crash axe and go all Ken Bigley on the co-pilot?
# ::tokens ["Where", "was", "the", "pilot", "?", "How", "come", "he", "did", "n't", "use", "the", "crash", "axe", "and", "go", "all", "Ken", "Bigley", "on", "the", "co", "-", "pilot", "?"]
# ::lemmas ["where", "be", "the", "pilot", "?", "how", "come", "he", "do", "not", "use", "the", "crash", "axe", "and", "go", "all", "Ken", "Bigley", "on", "the", "co", "-", "pilot", "?"]
(c36-0 / multi-sentence
       :snt1 (c36-1 / person
                    :ARG0-of (c36-3 / pilot-01)
                    :location (c36-5 / amr-unknown))
       :snt2 (c36-17 / cause-01
                     :ARG0 (c36-14 / amr-unknown)
                     :ARG1 (c36-10 / and
                                   :op1 (c36-13 / use-01
                                                :ARG0 (c36-6 / he)
                                                :ARG1 (c36-18 / axe
                                                              :mod (c36-2 / crash-01))
                                                :polarity -)
                                   :op2 (c36-11 / go-02
                                                :ARG0 c36-6
                                                :ARG1 (c36-7 / person
                                                             :name (c36-9 / name
                                                                          :op1 "Ken"
                                                                          :op2 "Bigley")
                                                             :ARG0-of (c36-12 / pilot-01)
                                                             :mod (c36-16 / all))
                                                :manner (c36-8 / person
                                                               :ARG0-of (c36-4 / have-org-role-91
                                                                               :ARG2 (c36-15 / coilot)))
                                                :polarity -))))

# ::snt looks like it was having issues long before it lost signal.
# ::tokens ["looks", "like", "it", "was", "having", "issues", "long", "before", "it", "lost", "signal", "."]
# ::lemmas ["look", "like", "it", "be", "have", "issue", "long", "before", "it", "lose", "signal", "."]
(c37-2 / look-02
       :ARG1 (c37-0 / have-03
                    :ARG0 (c37-4 / it)
                    :ARG1 (c37-5 / issue-02
                                 :ARG1 c37-4)
                    :time (c37-3 / before
                                 :op1 (c37-6 / lose-02
                                             :ARG0 c37-4
                                             :ARG1 (c37-7 / signal))
                                 :quant (c37-1 / long))))

# ::snt Mate. You're a plane spotter. Have you ever kissed a girl?
# ::tokens ["Mate", ".", "You", "'re", "a", "plane", "spotter", ".", "Have", "you", "ever", "kissed", "a", "girl", "?"]
# ::lemmas ["mate", ".", "you", "be", "a", "plane", "spotter", ".", "have", "you", "ever", "kiss", "a", "girl", "?"]
(c38-2 / multi-sentence
       :snt1 (c38-4 / person
                    :ARG0-of (c38-0 / have-rel-role-91
                                    :ARG2 (c38-5 / mate)))
       :snt2 (c38-8 / spotter
                    :location (c38-10 / plane)
                    :domain (c38-1 / you))
       :snt3 (c38-9 / kiss-01
                    :ARG0 (c38-7 / you)
                    :ARG1 (c38-6 / girl)
                    :time (c38-3 / ever)
                    :polarity (c38-11 / amr-unknown)))

# ::snt Maybe you should. At leaat I have respect for the victims...
# ::tokens ["Maybe", "you", "should", ".", "At", "leaat", "I", "have", "respect", "for", "the", "victims", "..."]
# ::lemmas ["maybe", "you", "should", ".", "at", "leaat", "i", "have", "respect", "for", "the", "victim", "..."]
(c39-1 / multi-sentence
       :snt1 (c39-7 / possible-01
                    :ARG1 (c39-8 / recommend-01
                                 :ARG2 (c39-0 / you)))
       :snt2 (c39-4 / respect-01
                    :ARG0 (c39-3 / i)
                    :ARG1 (c39-6 / victim)
                    :location (c39-2 / university
                                     :name (c39-5 / name
                                                  :op1 "Leaat"))))

# ::snt Yeah Im an Aviation Enthusiast &amp;have flying hours myself. And no I havent kissed a girl, I've kissed a guy tho...
# ::tokens ["Yeah", "I", "m", "an", "Aviation", "Enthusiast", "&", "amp;have", "flying", "hours", "myself", ".", "And", "no", "I", "have", "nt", "kissed", "a", "girl", ",", "I", "'ve", "kissed", "a", "guy", "tho", "..."]
# ::lemmas ["yeah", "i", "m", "an", "Aviation", "Enthusiast", "&", "amp;have", "fly", "hours", "myself", ".", "and", "no", "i", "have", "not", "kiss", "a", "girl", ",", "i", "'ve", "kiss", "a", "guy", "tho", "..."]
(c40-0 / multi-sentence
       :snt1 (c40-3 / and
                    :op1 (c40-7 / enthusiastic-03
                                :ARG0 (c40-14 / i)
                                :ARG1 (c40-13 / aviation))
                    :op2 (c40-9 / affair-01
                                :ARG0 c40-14
                                :ARG1 (c40-1 / person
                                             :name (c40-8 / name
                                                          :op1 "amp")))
                    :op3 (c40-6 / fly-01
                                :ARG1 c40-14
                                :duration (c40-10 / multiple
                                                  :op1 (c40-19 / temporal-quantity
                                                               :unit (c40-5 / hour)
                                                               :quant 1)))
                    :mod (c40-17 / yeah))
       :snt2 (c40-18 / and
                     :op2 (c40-16 / kiss-01
                                  :ARG0 (c40-15 / i)
                                  :ARG1 (c40-11 / girl)
                                  :polarity -)
                     :op3 (c40-12 / kiss-01
                                  :ARG0 c40-15
                                  :ARG1 (c40-2 / guy)
                                  :ARG1-of (c40-4 / have-concession-91))))

# ::snt those exact words. I read the report
# ::tokens ["those", "exact", "words", ".", "I", "read", "the", "report"]
# ::lemmas ["those", "exact", "word", ".", "i", "read", "the", "report"]
(c41-1 / multi-sentence
       :snt1 (c41-0 / word
                    :mod (c41-2 / exact)
                    :mod (c41-6 / that))
       :snt2 (c41-5 / read-01
                    :ARG0 (c41-3 / i)
                    :ARG1 (c41-4 / report)))

# ::snt I think K feet is the tip of the alps already?
# ::tokens ["I", "think", "K", "feet", "is", "the", "tip", "of", "the", "alps", "already", "?"]
# ::lemmas ["i", "think", "K", "foot", "be", "the", "tip", "of", "the", "alp", "already", "?"]
(c42-5 / think-01
       :ARG0 (c42-2 / i)
       :ARG1 (c42-4 / tip
                    :domain (c42-0 / foot
                                   :part-of (c42-6 / alps))
                    :time (c42-1 / already))
       :polarity (c42-3 / amr-unknown))

# ::snt More likely that at this altitude the plane hit a mountain which go up to feet and more and this area.
# ::tokens ["More", "likely", "that", "at", "this", "altitude", "the", "plane", "hit", "a", "mountain", "which", "go", "up", "to", "feet", "and", "more", "and", "this", "area", "."]
# ::lemmas ["more", "likely", "that", "at", "this", "altitude", "the", "plane", "hit", "a", "mountain", "which", "go", "up", "to", "foot", "and", "more", "and", "this", "area", "."]
(c43-1 / likely-01
       :ARG1 (c43-0 / hit-01
                    :ARG0 (c43-8 / plane)
                    :ARG1 (c43-2 / mountain
                                 :ARG1-of (c43-6 / increase-01
                                                 :ARG4 (c43-13 / and
                                                               :op1 (c43-9 / distance-quantity
                                                                           :unit (c43-3 / foot)
                                                                           :quant 1)
                                                               :op2 (c43-5 / area
                                                                           :mod (c43-12 / this)))))
                    :location (c43-7 / altitude
                                     :mod (c43-11 / this)))
       :ARG2-of (c43-4 / have-degree-91
                       :ARG1 c43-0
                       :ARG3 (c43-10 / more)))

# ::snt Check, but there must a reason wich created an emergency. I've seen several A320 with cracked windshields in the past
# ::tokens ["Check", ",", "but", "there", "must", "a", "reason", "wich", "created", "an", "emergency", ".", "I", "'ve", "seen", "several", "A320", "with", "cracked", "windshields", "in", "the", "past"]
# ::lemmas ["check", ",", "but", "there", "must", "a", "reason", "wich", "create", "an", "emergency", ".", "i", "'ve", "see", "several", "A320", "with", "crack", "windshield", "in", "the", "past"]
(c44-2 / multi-sentence
       :snt1 (c44-10 / check-01
                     :concession-of (c44-3 / obligate-01
                                           :ARG2 (c44-9 / reason
                                                        :ARG0-of (c44-11 / cause-01
                                                                         :ARG1 (c44-12 / create-01
                                                                                       :ARG0 (c44-13 / they)
                                                                                       :ARG1 (c44-4 / emergency))))))
       :snt2 (c44-14 / see-01
                     :ARG0 (c44-6 / i)
                     :ARG1 (c44-15 / aircraft-type
                                   :name (c44-7 / name
                                                :op1 "A320")
                                   :ARG0-of (c44-0 / have-03
                                                   :ARG1 (c44-1 / windshield
                                                                :ARG1-of (c44-16 / crack-01)))
                                   :quant (c44-5 / several))
                     :time (c44-8 / past)))

# ::snt no that is your problem. My problem is shithousery existing.
# ::tokens ["no", "that", "is", "your", "problem", ".", "My", "problem", "is", "shithousery", "existing", "."]
# ::lemmas ["no", "that", "be", "your", "problem", ".", "my", "problem", "be", "shithousery", "exist", "."]
(c45-1 / multi-sentence
       :snt1 (c45-4 / problem
                    :poss (c45-0 / you)
                    :domain (c45-6 / that
                                   :polarity -))
       :snt2 (c45-7 / problem
                    :poss (c45-3 / i)
                    :domain (c45-5 / shithousery
                                   :ARG1-of (c45-2 / exist-01))))

# ::snt .: Last position of Germanwings flight at :40 UTC
# ::tokens [".", ":", "Last", "position", "of", "Germanwings", "flight", "at", ":", "40", "UTC"]
# ::lemmas [".", ":", "last", "position", "of", "Germanwings", "flight", "at", ":", "40", "UTC"]
(c46-3 / position-01
       :ARG1 (c46-0 / fly-01
                    :ARG0 (c46-5 / company
                                 :name (c46-2 / name
                                              :op1 "Germanwings")))
       :ARG2 (c46-1 / last)
       :time (c46-4 / date-entity
                    :time "0:40"
                    :timezone "UTC"))

# ::snt ft is low for the Alps, yes? Last position of Germanwings flight ://
# ::tokens ["ft", "is", "low", "for", "the", "Alps", ",", "yes", "?", "Last", "position", "of", "Germanwings", "flight", ":", "//"]
# ::lemmas ["ft", "be", "low", "for", "the", "Alps", ",", "yes", "?", "last", "position", "of", "Germanwings", "flight", ":", "//"]
(c47-2 / multi-sentence
       :snt1 (c47-1 / low-04
                    :ARG1 (c47-9 / distance-quantity
                                 :unit (c47-3 / foot)
                                 :quant 1)
                    :ARG2 (c47-8 / mountain
                                 :name (c47-6 / name
                                              :op1 "Alps"))
                    :mod (c47-0 / yes))
       :snt2 (c47-10 / position
                     :ord (c47-4 / ordinal-entity
                                 :value "-1")
                     :poss (c47-5 / fly-01
                                  :ARG0 (c47-11 / company
                                                :name (c47-7 / name
                                                             :op1 "Germanwings")))))

# ::snt Dernire position de l'A320 via at :40 UTC
# ::tokens ["Dernire", "position", "de", "l'A320", "via", "at", ":", "40", "UTC"]
# ::lemmas ["Dernire", "position", "de", "l'A320", "via", "at", ":", "40", "UTC"]
(c48-2 / position
       :mod (c48-4 / aircraft-type
                   :name (c48-1 / name
                                :op1 "L'A320"))
       :mod (c48-3 / definite)
       :time (c48-0 / date-entity
                    :time "0:40"
                    :timezone "UTC"))

# ::snt Seriously? This was an experienced pilot who also lost his life! you really have no shame! -_-
# ::tokens ["Seriously", "?", "This", "was", "an", "experienced", "pilot", "who", "also", "lost", "his", "life", "!", "you", "really", "have", "no", "shame", "!", "-_-"]
# ::lemmas ["seriously", "?", "this", "be", "an", "experienced", "pilot", "who", "also", "lose", "his", "life", "!", "you", "really", "have", "no", "shame", "!", "-_-"]
(c49-2 / multi-sentence
       :snt1 (c49-9 / serious-01
                    :polarity (c49-13 / amr-unknown))
       :snt2 (c49-6 / person
                    :ARG0-of (c49-12 / pilot-01)
                    :ARG0-of (c49-3 / experience-01)
                    :ARG0-of (c49-1 / lose-02
                                    :ARG1 (c49-11 / thing
                                                  :ARG1-of (c49-8 / live-01
                                                                  :ARG0 c49-6))
                                    :mod (c49-5 / also))
                    :domain (c49-10 / this))
       :snt3 (c49-4 / shame-02
                    :ARG1 (c49-0 / you)
                    :ARG1-of (c49-7 / real-04)
                    :polarity -
                    :mode expressive))

# ::snt line is interesting - ??
# ::tokens ["line", "is", "interesting", "-", "?", "?"]
# ::lemmas ["line", "be", "interesting", "-", "?", "?"]
(c50-1 / interest-01
       :ARG2 (c50-0 / line))
