# ::snt You could get killed walking in the middle of the street! Oh wait.
# ::tokens ["You", "could", "get", "killed", "walking", "in", "the", "middle", "of", "the", "street", "!", "Oh", "wait", "."]
# ::lemmas ["you", "could", "get", "kill", "walk", "in", "the", "middle", "of", "the", "street", "!", "oh", "wait", "."]
(c1-2 / multi-sentence
      :snt1 (c1-5 / possible-01
                  :ARG1 (c1-8 / kill-01
                              :ARG1 (c1-1 / you)
                              :ARG2 (c1-0 / walk-01
                                          :ARG0 c1-1
                                          :ARG2 (c1-6 / middle
                                                      :part-of (c1-7 / street)))))
      :snt2 (c1-4 / wait-01
                  :mod (c1-3 / oh)))

# ::snt Once upon a time streets were a free-for-all.
# ::tokens ["Once", "upon", "a", "time", "streets", "were", "a", "free", "-", "for", "-", "all", "."]
# ::lemmas ["once", "upon", "a", "time", "street", "be", "a", "free", "-", "for", "-", "all", "."]
(c2-0 / street
      :ARG3-of (c2-1 / free-04
                     :ARG3 (c2-3 / all))
      :mod (c2-2 / once-upon-a-time))

# ::snt Walking down the middle the street is pretty common in most neighborhoods in North city. Not a reason to be shot
# ::tokens ["Walking", "down", "the", "middle", "the", "street", "is", "pretty", "common", "in", "most", "neighborhoods", "in", "North", "city", ".", "Not", "a", "reason", "to", "be", "shot"]
# ::lemmas ["walk", "down", "the", "middle", "the", "street", "be", "pretty", "common", "in", "most", "neighborhood", "in", "North", "city", ".", "not", "a", "reason", "to", "be", "shoot"]
(c3-2 / multi-sentence
      :snt1 (c3-7 / common
                  :domain (c3-0 / walk-01
                                :ARG2 (c3-5 / middle)
                                :direction (c3-6 / down))
                  :degree (c3-8 / pretty)
                  :location (c3-3 / neighborhood
                                  :quant (c3-1 / most)
                                  :location (c3-9 / city
                                                  :part (c3-4 / north))))
      :snt2 (c3-10 / reason
                   :purpose (c3-11 / shoot-02)
                   :polarity -))

# ::snt ": Q: Why did he stop Michael Brown? "Because he was walking down the middle of the street," chief says."
# ::tokens ["\"", ":", "Q", ":", "Why", "did", "he", "stop", "Michael", "Brown", "?", "\"", "Because", "he", "was", "walking", "down", "the", "middle", "of", "the", "street", ",", "\"", "chief", "says", ".", "\""]
# ::lemmas ["\"", ":", "q", ":", "why", "do", "he", "stop", "Michael", "Brown", "?", "\"", "because", "he", "be", "walk", "down", "the", "middle", "of", "the", "street", ",", "\"", "chief", "say", ".", "\""]
(c4-2 / multi-sentence
      :snt1 (c4-13 / ask-01
                   :ARG1 (c4-12 / thing
                                :ARG0-of (c4-7 / cause-01
                                               :ARG1 (c4-11 / stop-01
                                                            :ARG0 (c4-6 / chief)
                                                            :ARG1 (c4-5 / person
                                                                        :name (c4-4 / name
                                                                                    :op1 "Michael"
                                                                                    :op2 "Brown")))))
                   :ARG2 c4-6)
      :snt2 (c4-3 / say-01
                  :ARG0 c4-6
                  :ARG1 (c4-10 / cause-01
                               :ARG0 (c4-0 / walk-01
                                           :ARG0 c4-5
                                           :ARG2 (c4-8 / middle
                                                       :part-of (c4-1 / street))
                                           :direction (c4-9 / down)))))

# ::snt If you stopped every teenager who walked on the road you'd never get anything else done.
# ::tokens ["If", "you", "stopped", "every", "teenager", "who", "walked", "on", "the", "road", "you", "'d", "never", "get", "anything", "else", "done", "."]
# ::lemmas ["if", "you", "stop", "every", "teenager", "who", "walk", "on", "the", "road", "you", "would", "never", "get", "anything", "else", "do", "."]
(c5-0 / have-condition-91
      :ARG1 (c5-8 / get-04
                  :ARG0 (c5-1 / you)
                  :ARG1 (c5-6 / do-02
                              :ARG1 (c5-11 / anything
                                           :mod (c5-5 / else)))
                  :time (c5-4 / ever)
                  :polarity -)
      :ARG2 (c5-9 / stop-01
                  :ARG0 c5-1
                  :ARG1 (c5-10 / teenager
                               :mod (c5-2 / every)
                               :ARG0-of (c5-3 / walk-01
                                              :ARG1 (c5-7 / road)))))

# ::snt Q: Why did he stop Michael Brown? "Because he was walking down the middle of the street," chief says.
# ::tokens ["Q", ":", "Why", "did", "he", "stop", "Michael", "Brown", "?", "\"", "Because", "he", "was", "walking", "down", "the", "middle", "of", "the", "street", ",", "\"", "chief", "says", "."]
# ::lemmas ["q", ":", "why", "do", "he", "stop", "Michael", "Brown", "?", "\"", "because", "he", "be", "walk", "down", "the", "middle", "of", "the", "street", ",", "\"", "chief", "say", "."]
(c6-2 / multi-sentence
      :snt1 (c6-4 / question-01
                  :ARG1 (c6-8 / cause-01
                              :ARG0 (c6-13 / amr-unknown)
                              :ARG1 (c6-12 / stop-01
                                           :ARG0 (c6-7 / chief)
                                           :ARG1 (c6-6 / person
                                                       :name (c6-5 / name
                                                                   :op1 "Michael"
                                                                   :op2 "Brown")))))
      :snt2 (c6-3 / say-01
                  :ARG0 c6-7
                  :ARG1 (c6-11 / cause-01
                               :ARG0 (c6-0 / walk-01
                                           :ARG0 c6-6
                                           :ARG2 (c6-9 / middle
                                                       :part-of (c6-1 / street))
                                           :direction (c6-10 / down)))))

# ::snt Q: Why did he shoot Michael Brown?
# ::tokens ["Q", ":", "Why", "did", "he", "shoot", "Michael", "Brown", "?"]
# ::lemmas ["q", ":", "why", "do", "he", "shoot", "Michael", "Brown", "?"]
(c7-1 / question-01
      :ARG1 (c7-4 / cause-01
                  :ARG0 (c7-6 / amr-unknown)
                  :ARG1 (c7-5 / shoot-02
                              :ARG0 (c7-0 / he)
                              :ARG1 (c7-3 / person
                                          :name (c7-2 / name
                                                      :op1 "Michael"
                                                      :op2 "Brown")))))

# ::snt BLOCKING TRAFFIC is what he said
# ::tokens ["BLOCKING", "TRAFFIC", "is", "what", "he", "said"]
# ::lemmas ["BLOCKING", "TRAFFIC", "be", "what", "he", "say"]
(c8-0 / say-01
      :ARG0 (c8-1 / he)
      :ARG1 (c8-3 / bust-01
                  :ARG1 (c8-2 / TRAFFIC)))

# ::snt Why not just honk the freaking horn instead of shooting him several times?
# ::tokens ["Why", "not", "just", "honk", "the", "freaking", "horn", "instead", "of", "shooting", "him", "several", "times", "?"]
# ::lemmas ["why", "not", "just", "honk", "the", "freak", "horn", "instead", "of", "shoot", "he", "several", "time", "?"]
(c9-7 / cause-01
      :ARG0 (c9-9 / amr-unknown)
      :ARG1 (c9-0 / honk-01
                  :ARG0 (c9-1 / you)
                  :ARG1 (c9-10 / horn
                               :mod (c9-3 / freaking
                                          :mode expressive))
                  :mod (c9-2 / just)
                  :ARG1-of (c9-5 / instead-of-91
                                 :ARG2 (c9-8 / shoot-02
                                             :ARG0 c9-1
                                             :ARG1 (c9-6 / he)
                                             :frequency (c9-4 / several)))
                  :polarity -))

# ::snt Well that changes everything. MT : Q: Why did he stop ? Because he was walking down the middle of the street
# ::tokens ["Well", "that", "changes", "everything", ".", "MT", ":", "Q", ":", "Why", "did", "he", "stop", "?", "Because", "he", "was", "walking", "down", "the", "middle", "of", "the", "street"]
# ::lemmas ["well", "that", "change", "everything", ".", "MT", ":", "q", ":", "why", "do", "he", "stop", "?", "because", "he", "be", "walk", "down", "the", "middle", "of", "the", "street"]
(c10-2 / multi-sentence
       :snt1 (c10-11 / change-01
                     :ARG0 (c10-16 / that)
                     :ARG1 (c10-3 / everything)
                     :mod (c10-1 / well))
       :snt2 (c10-17 / ask-01
                     :ARG0 (c10-9 / person
                                  :name (c10-7 / name
                                               :op1 "MT"))
                     :ARG1 (c10-5 / and
                                  :op1 (c10-10 / cause-01
                                               :ARG0 (c10-8 / amr-unknown)
                                               :ARG1 (c10-15 / stop-01
                                                             :ARG0 (c10-0 / he)))
                                  :op2 (c10-14 / cause-01
                                               :ARG0 (c10-6 / walk-01
                                                            :ARG0 c10-0
                                                            :ARG2 (c10-12 / middle
                                                                          :part-of (c10-4 / street))
                                                            :direction (c10-13 / down))))))

# ::snt We have walking in the middle of the street as an entirely other category. This happens everywhere &amp; sidewalks are there.
# ::tokens ["We", "have", "walking", "in", "the", "middle", "of", "the", "street", "as", "an", "entirely", "other", "category", ".", "This", "happens", "everywhere", "&", "amp", ";", "sidewalks", "are", "there", "."]
# ::lemmas ["we", "have", "walk", "in", "the", "middle", "of", "the", "street", "as", "an", "entirely", "other", "category", ".", "this", "happen", "everywhere", "&", "amp", ";", "sidewalk", "be", "there", "."]
(c11-2 / multi-sentence
       :snt1 (c11-0 / have-03
                    :ARG0 (c11-1 / we)
                    :ARG1 (c11-8 / walk-01
                                 :location (c11-9 / middle
                                                  :part-of (c11-13 / street))
                                 :prep-as (c11-10 / category
                                                  :mod (c11-4 / other
                                                              :degree (c11-6 / entire)))))
       :snt2 (c11-15 / and
                     :op1 (c11-3 / be-located-at-91
                                 :ARG1 (c11-14 / this)
                                 :ARG2 (c11-5 / everywhere))
                     :op2 (c11-11 / be-located-at-91
                                  :ARG1 (c11-7 / sidewalk)
                                  :ARG2 (c11-12 / there))))

# ::snt : Q: Why did he stop Michael Brown? "Because he was walking down the middle of the street," chief says.
# ::tokens [":", "Q", ":", "Why", "did", "he", "stop", "Michael", "Brown", "?", "\"", "Because", "he", "was", "walking", "down", "the", "middle", "of", "the", "street", ",", "\"", "chief", "says", "."]
# ::lemmas [":", "q", ":", "why", "do", "he", "stop", "Michael", "Brown", "?", "\"", "because", "he", "be", "walk", "down", "the", "middle", "of", "the", "street", ",", "\"", "chief", "say", "."]
(c12-2 / multi-sentence
       :snt1 (c12-13 / ask-01
                     :ARG1 (c12-12 / thing
                                   :ARG0-of (c12-7 / cause-01
                                                   :ARG1 (c12-11 / stop-01
                                                                 :ARG0 (c12-6 / chief)
                                                                 :ARG1 (c12-5 / person
                                                                              :name (c12-4 / name
                                                                                           :op1 "Michael"
                                                                                           :op2 "Brown")))))
                     :ARG2 c12-6)
       :snt2 (c12-3 / say-01
                    :ARG0 c12-6
                    :ARG1 (c12-10 / cause-01
                                  :ARG0 (c12-0 / walk-01
                                               :ARG0 c12-5
                                               :ARG2 (c12-8 / middle
                                                            :part-of (c12-1 / street))
                                               :direction (c12-9 / down)))))

# ::snt j walking is not walking down the middle of the street. He needs to get his act together before next announcement.
# ::tokens ["j", "walking", "is", "not", "walking", "down", "the", "middle", "of", "the", "street", ".", "He", "needs", "to", "get", "his", "act", "together", "before", "next", "announcement", "."]
# ::lemmas ["j", "walking", "be", "not", "walk", "down", "the", "middle", "of", "the", "street", ".", "he", "need", "to", "get", "his", "act", "together", "before", "next", "announcement", "."]
(c13-2 / multi-sentence
       :snt1 (c13-1 / walk-01
                    :ARG0 (c13-7 / person
                                 :name (c13-5 / name
                                              :op1 "J"))
                    :direction (c13-8 / down
                                      :op1 (c13-9 / middle
                                                  :part-of (c13-12 / street)))
                    :polarity -)
       :snt2 (c13-6 / need-01
                    :ARG0 (c13-0 / he)
                    :ARG1 (c13-10 / get-04
                                  :ARG0 c13-0
                                  :ARG1 (c13-13 / together
                                                :domain (c13-14 / act-01
                                                                :ARG0 c13-0))
                                  :time (c13-3 / before
                                               :op1 (c13-4 / announce-01
                                                           :mod (c13-11 / next))))))
