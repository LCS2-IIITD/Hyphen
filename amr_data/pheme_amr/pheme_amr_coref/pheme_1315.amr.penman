# ::snt - I knew it, those DAMN COFFEE EXTREMISTS! When will this caffeine madness end!
# ::tokens ["-", "I", "knew", "it", ",", "those", "DAMN", "COFFEE", "EXTREMISTS", "!", "When", "will", "this", "caffeine", "madness", "end", "!"]
# ::lemmas ["-", "i", "know", "it", ",", "those", "damn", "coffee", "EXTREMISTS", "!", "when", "will", "this", "caffeine", "madness", "end", "!"]
(c1-0 / multi-sentence
      :snt1 (c1-7 / know-01
                  :ARG0 (c1-2 / i)
                  :ARG1 (c1-5 / it))
      :snt2 (c1-1 / end-01
                  :ARG1 (c1-3 / madness
                              :mod (c1-4 / caffeine)
                              :mod (c1-6 / this))
                  :time (c1-8 / amr-unknown)))

# ::snt Thanks, gents.
# ::tokens ["Thanks", ",", "gents", "."]
# ::lemmas ["thank", ",", "gent", "."]
(c2-0 / thank-01
      :ARG0 (c2-2 / i)
      :ARG1 (c2-1 / gent))

# ::snt "Coffee tax needed to control terrorist atrocities says charity" - Mother State needs that money Comrade
# ::tokens ["\"", "Coffee", "tax", "needed", "to", "control", "terrorist", "atrocities", "says", "charity", "\"", "-", "Mother", "State", "needs", "that", "money", "Comrade"]
# ::lemmas ["\"", "coffee", "tax", "need", "to", "control", "terrorist", "atrocity", "say", "charity", "\"", "-", "Mother", "State", "need", "that", "money", "Comrade"]
(c3-7 / say-01
      :ARG0 (c3-2 / i)
      :ARG1 (c3-9 / and
                  :op1 (c3-3 / need-01
                             :ARG0 (c3-1 / state
                                         :mod (c3-0 / mother))
                             :ARG1 (c3-5 / money
                                         :mod (c3-8 / that)))
                  :op2 (c3-4 / need-01
                             :ARG0 c3-1
                             :ARG1 c3-5))
      :ARG2 (c3-6 / comrade))

# ::snt not funny
# ::tokens ["not", "funny"]
# ::lemmas ["not", "funny"]
(c4-0 / funny
      :polarity -)

# ::snt ROTFL....so true
# ::tokens ["ROTFL", "....", "so", "true"]
# ::lemmas ["ROTFL", "....", "so", "true"]
(c5-7 / and
      :op1 (c5-3 / roll-01
                 :ARG2 (c5-1 / floor)
                 :manner (c5-0 / laugh-01
                               :ARG0 (c5-2 / i)
                               :manner (c5-4 / loud)))
      :op2 (c5-6 / true-01
                 :degree (c5-5 / so)))

# ::snt Just add hostages "blame budget cuts"John Prescot "blames tory middle Eastern aggression "
# ::tokens ["Just", "add", "hostages", "\"", "blame", "budget", "cuts\"John", "Prescot", "\"", "blames", "tory", "middle", "Eastern", "aggression", "\""]
# ::lemmas ["just", "add", "hostage", "\"", "blame", "budget", "cuts\"John", "Prescot", "\"", "blame", "tory", "middle", "Eastern", "aggression", "\""]
(c7-15 / add-01
       :ARG0 (c7-5 / i)
       :ARG1 (c7-4 / and
                   :op1 (c7-3 / blame-01
                              :ARG0 (c7-0 / hostage)
                              :ARG1 (c7-10 / cut-02
                                           :ARG1 (c7-11 / budget)))
                   :op2 (c7-13 / blame-01
                               :ARG0 (c7-8 / person
                                           :name (c7-6 / name
                                                       :op1 "John"
                                                       :op2 "Prescot"))
                               :ARG1 (c7-7 / aggression
                                           :mod (c7-1 / world-region
                                                      :name (c7-9 / name
                                                                  :op1 "Middle"
                                                                  :op2 "East"))
                                           :mod (c7-14 / political-party
                                                       :name (c7-12 / name
                                                                    :op1 "Tory")))))
       :mod (c7-2 / just))

# ::snt that would make a good headline. They have the same Leftist hive-mind as BBC
# ::tokens ["that", "would", "make", "a", "good", "headline", ".", "They", "have", "the", "same", "Leftist", "hive", "-", "mind", "as", "BBC"]
# ::lemmas ["that", "would", "make", "a", "good", "headline", ".", "they", "have", "the", "same", "Leftist", "hive", "-", "mind", "as", "BBC"]
(c8-2 / multi-sentence
      :snt1 (c8-6 / make-02
                  :ARG0 (c8-11 / that)
                  :ARG1 (c8-0 / headline
                              :ARG1-of (c8-8 / good-02)))
      :snt2 (c8-12 / have-03
                   :ARG0 (c8-9 / they)
                   :ARG1 (c8-1 / mind
                               :ARG1-of (c8-3 / left-19)
                               :ARG1-of (c8-5 / hive-mind-00)
                               :ARG1-of (c8-10 / same-01
                                               :ARG2 (c8-7 / publication
                                                           :name (c8-4 / name
                                                                       :op1 "BBC"))))))

# ::snt : BBC ideal headline"Devout Muslim trapped by coffee extremists in Sydney"" Haha
# ::tokens [":", "BBC", "ideal", "headline\"Devout", "Muslim", "trapped", "by", "coffee", "extremists", "in", "Sydney", "\"", "\"", "Haha"]
# ::lemmas [":", "BBC", "ideal", "headline\"devout", "Muslim", "trap", "by", "coffee", "extremist", "in", "Sydney", "\"", "\"", "haha"]
(c9-0 / headline-01
      :ARG0 (c9-6 / publication
                  :name (c9-4 / name
                              :op1 "BBC"))
      :ARG2 (c9-11 / trap-01
                   :ARG0 (c9-2 / extremist
                               :mod (c9-8 / coffee))
                   :ARG1 (c9-12 / person
                                :mod (c9-7 / religious-group
                                           :name (c9-5 / name
                                                       :op1 "Islam"))
                                :mod (c9-1 / out))
                   :location (c9-9 / city
                                   :name (c9-10 / name
                                                :op1 "Sydney")))
      :mod (c9-3 / ideal)
      :mod (c9-13 / haha
                  :mode expressive))

# ::snt Lindfidels?
# ::tokens ["Lindfidels", "?"]
# ::lemmas ["Lindfidels", "?"]
(c10-1 / person
       :polarity (c10-2 / amr-unknown)
       :name (c10-0 / name
                    :op1 "Lindfidels"))

# ::snt Brilliant: BBC ideal headline"Devout Muslim trapped by coffee extremists in Sydney"
# ::tokens ["Brilliant", ":", "BBC", "ideal", "headline\"Devout", "Muslim", "trapped", "by", "coffee", "extremists", "in", "Sydney", "\""]
# ::lemmas ["brilliant", ":", "BBC", "ideal", "headline\"devout", "Muslim", "trap", "by", "coffee", "extremist", "in", "Sydney", "\""]
(c11-14 / and
        :op1 (c11-1 / brilliant-01)
        :op2 (c11-0 / headline-01
                    :ARG0 (c11-6 / publication
                                 :name (c11-4 / name
                                              :op1 "BBC"))
                    :ARG2 (c11-12 / trap-01
                                  :ARG0 (c11-2 / extremist
                                               :mod (c11-8 / coffee))
                                  :ARG1 (c11-13 / person
                                                :mod (c11-7 / religious-group
                                                            :name (c11-5 / name
                                                                         :op1 "Islam")
                                                            :mod-of c11-13)
                                                :name (c11-9 / name
                                                             :op1 "Devout")))
                    :location (c11-10 / city
                                      :name (c11-11 / name
                                                    :op1 "Sydney")))
        :mod (c11-3 / ideal))

# ::snt American version uv Australian stand-off: Devout Muzlim trapd in WH by GOP congress &amp; gun-bearin militia
# ::tokens ["American", "version", "uv", "Australian", "stand", "-", "off", ":", "Devout", "Muzlim", "trapd", "in", "WH", "by", "GOP", "congress", "&", "amp", ";", "gun", "-", "bearin", "militia"]
# ::lemmas ["American", "version", "uv", "Australian", "stand", "-", "off", ":", "Devout", "Muzlim", "trapd", "in", "WH", "by", "GOP", "congress", "&", "amp", ";", "gun", "-", "bearin", "militia"]
(c12-8 / and
       :op1 (c12-2 / version
                   :mod (c12-17 / country
                                :name (c12-13 / name
                                              :op1 "United"
                                              :op2 "States"))
                   :mod (c12-4 / country
                               :name (c12-16 / name
                                             :op1 "Australia")))
       :op2 (c12-18 / trap-01
                    :op1 (c12-3 / person
                                :name (c12-1 / name
                                             :op1 "Congress")
                                :mod (c12-7 / political-party
                                            :name (c12-5 / name
                                                         :op1 "GOP")))
                    :op2 (c12-10 / person
                                 :name (c12-19 / name
                                               :op1 "amp"))
                    :ARG0 c12-8)
       :ARG1 (c12-15 / person
                     :name (c12-9 / name
                                  :op1 "Muzlim"))
       :location (c12-14 / government-organization
                         :name (c12-12 / name
                                       :op1 "White"
                                       :op2 "House"))
       :op3 (c12-0 / militia
                   :ARG0-of (c12-11 / bear-01
                                    :ARG1 (c12-6 / gun))))

# ::snt I shouldn't laugh given the seriousness.... But that is ...
# ::tokens ["I", "should", "n't", "laugh", "given", "the", "seriousness", "....", "But", "that", "is", "..."]
# ::lemmas ["i", "should", "not", "laugh", "give", "the", "seriousness", "....", "but", "that", "be", "..."]
(c13-1 / multi-sentence
       :snt1 (c13-3 / recommend-01
                    :ARG1 (c13-0 / laugh-01
                                 :ARG0 (c13-2 / i)
                                 :ARG1-of (c13-4 / cause-01
                                                 :ARG0 (c13-6 / serious-01))
                                 :polarity -))
       :snt2 (c13-5 / contrast-01
                    :ARG2 (c13-7 / that)))

# ::snt would be shocked if they didn't.
# ::tokens ["would", "be", "shocked", "if", "they", "did", "n't", "."]
# ::lemmas ["would", "be", "shock", "if", "they", "do", "not", "."]
(c14-0 / shock-01
       :ARG0 (c14-1 / event
                    :mod (c14-2 / they)
                    :condition-of c14-0
                    :polarity -))

# ::snt You forgot the bit about how Israel is to blame!
# ::tokens ["You", "forgot", "the", "bit", "about", "how", "Israel", "is", "to", "blame", "!"]
# ::lemmas ["you", "forgot", "the", "bit", "about", "how", "Israel", "be", "to", "blame", "!"]
(c15-1 / forget-01
       :ARG0 (c15-0 / you)
       :ARG1 (c15-2 / bit
                    :topic (c15-5 / blame-01
                                  :ARG1 (c15-4 / country
                                               :name (c15-3 / name
                                                            :op1 "Israel"))
                                  :manner (c15-6 / amr-unknown))))

# ::snt Give it hrs and the terrorist will be the 'victim'
# ::tokens ["Give", "it", "hrs", "and", "the", "terrorist", "will", "be", "the", "'", "victim", "'"]
# ::lemmas ["give", "it", "hrs", "and", "the", "terrorist", "will", "be", "the", "'", "victim", "'"]
(c17-5 / give-01
       :ARG0 (c17-1 / you)
       :ARG1 (c17-2 / multiple
                    :op1 (c17-7 / temporal-quantity
                                :unit (c17-0 / hour)
                                :quant 1))
       :ARG2 (c17-3 / it)
       :condition-of (c17-4 / victim
                            :domain (c17-6 / terrorist))
       :mode imperative)
