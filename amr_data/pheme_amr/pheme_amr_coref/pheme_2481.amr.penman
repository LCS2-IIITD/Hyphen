# ::snt it's a supermarket not a synagogue !!
# ::tokens ["it", "'s", "a", "supermarket", "not", "a", "synagogue", "!", "!"]
# ::lemmas ["it", "be", "a", "supermarket", "not", "a", "synagogue", "!", "!"]
(c1-2 / contrast-01
      :ARG1 (c1-0 / supermarket
                  :domain (c1-3 / it))
      :ARG2 (c1-1 / synagogue
                  :domain c1-3
                  :polarity -))

# ::snt Hypercacher23 Avenue de la Porte de Vincennes75020 ParisFrancia+33
# ::tokens ["Hypercacher23", "Avenue", "de", "la", "Porte", "de", "Vincennes75020", "ParisFrancia+33"]
# ::lemmas ["Hypercacher23", "Avenue", "de", "la", "Porte", "de", "Vincennes75020", "parisfrancia+33"]
(c2-0 / hypercacher23
      :ARG1 (c2-4 / road
                  :name (c2-1 / name
                              :op1 "Avenue"
                              :op2 "de"
                              :op3 "la"
                              :op4 "Porte"
                              :op5 "de"
                              :op6 "Vincennes"))
      :time (c2-6 / date-entity
                  :day 20
                  :month 3
                  :year 2007)
      :location (c2-5 / city
                      :name (c2-2 / name
                                  :op1 "Paris"))
      :ARG4-of (c2-7 / add-02
                     :ARG1 (c2-3 / phone-number-entity
                                 :value "Francia+33")))

# ::snt : At least two reportedly killed in hostage drama in Paris-area kosher synagogue
# ::tokens [":", "At", "least", "two", "reportedly", "killed", "in", "hostage", "drama", "in", "Paris", "-", "area", "kosher", "synagogue"]
# ::lemmas [":", "At", "least", "two", "reportedly", "kill", "in", "hostage", "drama", "in", "Paris", "-", "area", "kosher", "synagogue"]
(c3-9 / kill-01
      :ARG1 (c3-4 / person
                  :quant (c3-10 / at-least
                                :op1 2))
      :ARG1-of (c3-6 / report-01)
      :time (c3-5 / drama
                  :mod (c3-0 / hostage))
      :location (c3-8 / synagogue
                      :mod (c3-1 / kosher)
                      :location (c3-2 / area
                                      :mod (c3-7 / city
                                                 :name (c3-3 / name
                                                             :op1 "Paris")))))

# ::snt Are there any Halal abattoirs in Paris by any chance, what with all this muslim slaughter insanity going on?
# ::tokens ["Are", "there", "any", "Halal", "abattoirs", "in", "Paris", "by", "any", "chance", ",", "what", "with", "all", "this", "muslim", "slaughter", "insanity", "going", "on", "?"]
# ::lemmas ["be", "there", "any", "Halal", "abattoir", "in", "Paris", "by", "any", "chance", ",", "what", "with", "all", "this", "muslim", "slaughter", "insanity", "go", "on", "?"]
(c4-14 / abattoir
       :mod (c4-0 / halal)
       :location (c4-7 / city
                       :name (c4-3 / name
                                   :op1 "Paris"))
       :ARG1-of (c4-6 / chance-02
                      :mod (c4-1 / any))
       :ARG1-of (c4-10 / cause-01
                       :ARG0 (c4-2 / insanity
                                   :mod (c4-13 / slaughter-01
                                               :ARG1 (c4-5 / person
                                                           :mod (c4-8 / religious-group
                                                                      :name (c4-4 / name
                                                                                  :op1 "Islam"))))
                                   :mod (c4-12 / this)
                                   :mod (c4-9 / all)))
       :polarity (c4-11 / amr-unknown))

# ::snt perhaps u mean Kosher supermarket?
# ::tokens ["perhaps", "u", "mean", "Kosher", "supermarket", "?"]
# ::lemmas ["perhaps", "u", "mean", "Kosher", "supermarket", "?"]
(c5-3 / possible-01
      :ARG1 (c5-1 / mean-01
                  :ARG0 (c5-0 / you)
                  :ARG2 (c5-5 / supermarket
                              :mod (c5-4 / country-region
                                         :name (c5-2 / name
                                                     :op1 "Kosher"))))
      :polarity (c5-6 / amr-unknown))

# ::snt grocery****
# ::tokens ["grocery", "*", "*", "*", "*"]
# ::lemmas ["grocery", "*", "*", "*", "*"]
(c6-0 / rocery****)

# ::snt Supermarket?
# ::tokens ["Supermarket", "?"]
# ::lemmas ["supermarket", "?"]
(c7-1 / market
      :polarity (c7-2 / amr-unknown)
      :mod (c7-0 / super))

# ::snt Europa moet de grenzen vandaag nog sluiten!
# ::tokens ["Europa", "moet", "de", "grenzen", "vandaag", "nog", "sluiten", "!"]
# ::lemmas ["Europa", "moet", "de", "grenzen", "vandaag", "nog", "sluiten", "!"]
(c8-5 / and
      :op1 (c8-0 / moet-de-
                 :location (c8-3 / continent
                                 :name (c8-1 / name
                                             :op1 "Europa")))
      :op2 (c8-2 / nog
                 :op1 (c8-4 / sluiten))
      :mode expressive)

# ::snt a kosher synagogue even.
# ::tokens ["a", "kosher", "synagogue", "even", "."]
# ::lemmas ["a", "kosher", "synagogue", "even", "."]
(c9-0 / synagogue
      :mod (c9-2 / kosher)
      :mod (c9-1 / even))

# ::snt I'm sad to know about this. More bad news. Enough violence and killing!
# ::tokens ["I", "'m", "sad", "to", "know", "about", "this", ".", "More", "bad", "news", ".", "Enough", "violence", "and", "killing", "!"]
# ::lemmas ["i", "be", "sad", "to", "know", "about", "this", ".", "more", "bad", "news", ".", "enough", "violence", "and", "kill", "!"]
(c10-2 / multi-sentence
       :snt1 (c10-11 / sad-02
                     :ARG0 (c10-7 / know-01
                                  :ARG0 (c10-6 / i)
                                  :ARG1 (c10-12 / this))
                     :ARG1 c10-6)
       :snt2 (c10-8 / news
                    :ARG1-of (c10-0 / have-degree-91
                                    :ARG2 (c10-3 / bad-07)
                                    :ARG3 (c10-10 / more)))
       :snt3 (c10-13 / and
                     :op1 (c10-9 / violence)
                     :op2 (c10-4 / kill-01)
                     :ARG1-of (c10-1 / have-quant-91
                                     :ARG3 (c10-5 / enough))))

# ::snt Kosher synagogue?
# ::tokens ["Kosher", "synagogue", "?"]
# ::lemmas ["Kosher", "synagogue", "?"]
(c11-1 / worship-place
       :polarity (c11-2 / amr-unknown)
       :name (c11-0 / name
                    :op1 "Kosher"
                    :op2 " synagogue"))

# ::snt may be double check this tweet
# ::tokens ["may", "be", "double", "check", "this", "tweet"]
# ::lemmas ["may", "be", "double", "check", "this", "tweet"]
(c12-2 / possible-01
       :ARG1 (c12-4 / check-01
                    :ARG0 (c12-0 / you)
                    :ARG1 (c12-6 / thing
                                 :ARG1-of (c12-5 / tweet-01)
                                 :mod (c12-1 / this))
                    :ARG1-of (c12-3 / double-01)
                    :mode imperative))
