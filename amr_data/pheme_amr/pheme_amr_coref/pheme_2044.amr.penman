# ::snt Being bullied is not the same as being offended.
# ::tokens ["Being", "bullied", "is", "not", "the", "same", "as", "being", "offended", "."]
# ::lemmas ["be", "bully", "be", "not", "the", "same", "as", "be", "offend", "."]
(c1-0 / same-01
      :ARG1 (c1-2 / bully-01)
      :ARG2 (c1-1 / offend-01)
      :polarity -)

# ::snt actually make that offending every major belief system
# ::tokens ["actually", "make", "that", "offending", "every", "major", "belief", "system"]
# ::lemmas ["actually", "make", "that", "offend", "every", "major", "belief", "system"]
(c2-0 / make-02
      :ARG1 (c2-2 / offend-01
                  :ARG1 (c2-5 / system
                              :mod (c2-1 / believe-01)
                              :ARG1-of (c2-4 / major-02)
                              :mod (c2-3 / every))
                  :mod (c2-6 / that))
      :ARG1-of (c2-7 / actual-02))

# ::snt Good idea, I'm in. And quite happy if they want to try offending me right back!
# ::tokens ["Good", "idea", ",", "I", "'m", "in", ".", "And", "quite", "happy", "if", "they", "want", "to", "try", "offending", "me", "right", "back", "!"]
# ::lemmas ["good", "idea", ",", "i", "be", "in", ".", "and", "quite", "happy", "if", "they", "want", "to", "try", "offend", "i", "right", "back", "!"]
(c3-2 / multi-sentence
      :snt1 (c3-3 / be-located-at-91
                  :ARG1 (c3-6 / i)
                  :ARG2 (c3-10 / idea
                               :ARG1-of (c3-9 / good-02)))
      :snt2 (c3-13 / and
                   :op2 (c3-0 / happy-01
                              :ARG0 (c3-1 / want-01
                                          :ARG0 (c3-12 / they)
                                          :ARG1 (c3-11 / try-01
                                                       :ARG0 c3-12
                                                       :ARG1 (c3-4 / offend-01
                                                                   :ARG0 c3-12
                                                                   :ARG1 c3-6
                                                                   :mod (c3-8 / back
                                                                              :mod (c3-7 / right)))))
                              :degree (c3-5 / quite))))

# ::snt same!
# ::tokens ["same", "!"]
# ::lemmas ["same", "!"]
(c4-0 / same-01
      :mode expressive)

# ::snt I'm seriously thinking all supporters of free speech should launch an annual holiday aimed at offending every religion
# ::tokens ["I", "'m", "seriously", "thinking", "all", "supporters", "of", "free", "speech", "should", "launch", "an", "annual", "holiday", "aimed", "at", "offending", "every", "religion"]
# ::lemmas ["i", "be", "seriously", "think", "all", "supporter", "of", "free", "speech", "should", "launch", "an", "annual", "holiday", "aim", "at", "offend", "every", "religion"]
(c5-16 / think-01
       :ARG0 (c5-10 / i)
       :ARG1 (c5-13 / recommend-01
                    :ARG1 (c5-2 / launch-01
                                :ARG0 (c5-12 / person
                                             :ARG0-of (c5-15 / support-01
                                                             :ARG1 (c5-6 / speak-01
                                                                         :ARG3-of (c5-3 / free-04)))
                                             :mod (c5-17 / all))
                                :ARG1 (c5-0 / holiday
                                            :ARG1-of (c5-9 / aim-02
                                                           :ARG2 (c5-5 / offend-01
                                                                       :ARG1 (c5-11 / religion
                                                                                    :mod (c5-7 / every))))
                                            :frequency (c5-8 / rate-entity-91
                                                             :ARG3 (c5-14 / temporal-quantity
                                                                          :unit (c5-1 / year)
                                                                          :quant 1)))))
       :ARG2-of (c5-4 / serious-01))

# ::snt can we count the bullied young kids that committed suicided has being offended and died?
# ::tokens ["can", "we", "count", "the", "bullied", "young", "kids", "that", "committed", "suicided", "has", "being", "offended", "and", "died", "?"]
# ::lemmas ["can", "we", "count", "the", "bully", "young", "kid", "that", "committed", "suicide", "have", "be", "offend", "and", "die", "?"]
(c6-5 / possible-01
      :polarity (c6-11 / amr-unknown)
      :ARG1 (c6-7 / count-03
                  :ARG0 (c6-0 / we)
                  :ARG1 (c6-4 / and
                              :op1 (c6-3 / offend-01
                                         :ARG1 (c6-10 / kid
                                                      :mod (c6-1 / young)
                                                      :ARG0-of (c6-2 / bully-01)
                                                      :ARG0-of (c6-6 / commit-02
                                                                     :ARG1 (c6-9 / suicide))))
                              :op2 (c6-8 / die-01
                                         :ARG1 c6-10))))

# ::snt &lt;--for example what I understand you meant is that cyborgs only have moving parts, not feelings.
# ::tokens ["&", "lt;--for", "example", "what", "I", "understand", "you", "meant", "is", "that", "cyborgs", "only", "have", "moving", "parts", ",", "not", "feelings", "."]
# ::lemmas ["&", "lt;--for", "example", "what", "i", "understand", "you", "mean", "be", "that", "cyborgs", "only", "have", "move", "part", ",", "not", "feeling", "."]
(c7-6 / exemplify-01
      :ARG0 (c7-4 / understand-01
                  :ARG0 (c7-7 / i)
                  :ARG1 (c7-3 / mean-01
                              :ARG0 (c7-1 / you)
                              :ARG2 (c7-10 / contrast-01
                                           :ARG1 (c7-0 / have-03
                                                       :ARG0 (c7-9 / cyborg)
                                                       :ARG1 (c7-8 / part
                                                                   :ARG1-of (c7-11 / move-01))
                                                       :mod (c7-5 / only))
                                           :ARG2 (c7-12 / have-03
                                                        :ARG0 c7-9
                                                        :ARG1 (c7-2 / feel-01)
                                                        :polarity -)))))
