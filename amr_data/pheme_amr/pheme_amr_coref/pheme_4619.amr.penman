# ::snt is it suspected, or proven?
# ::tokens ["is", "it", "suspected", ",", "or", "proven", "?"]
# ::lemmas ["be", "it", "suspect", ",", "or", "prove", "?"]
(c1-0 / or
      :op1 (c1-3 / suspect-01
                 :ARG1 (c1-1 / it))
      :op2 (c1-2 / prove-01
                 :ARG1 c1-1)
      :polarity (c1-4 / amr-unknown))

# ::snt what do we know about him?that he's a nasty shit.he should be killed
# ::tokens ["what", "do", "we", "know", "about", "him?that", "he", "'s", "a", "nasty", "shit.he", "should", "be", "killed"]
# ::lemmas ["what", "do", "we", "know", "about", "him?that", "he", "be", "a", "nasty", "shit.he", "should", "be", "kill"]
(c2-3 / multi-sentence
      :snt1 (c2-9 / know-01
                  :ARG0 (c2-1 / we)
                  :ARG1 (c2-10 / amr-unknown
                               :topic (c2-0 / he)))
      :snt2 (c2-8 / shit
                  :mod (c2-5 / nasty)
                  :domain (c2-2 / he))
      :snt3 (c2-7 / recommend-01
                  :ARG1 (c2-4 / kill-01
                              :ARG1 (c2-6 / he))))

# ::snt YUP!! Only way to deal wth these types
# ::tokens ["YUP", "!", "!", "Only", "way", "to", "deal", "wth", "these", "types"]
# ::lemmas ["yup", "!", "!", "only", "way", "to", "deal", "wth", "these", "type"]
(c3-0 / way
      :mod (c3-2 / only)
      :manner-of (c3-3 / deal-01
                       :ARG2 (c3-5 / type
                                   :mod (c3-4 / this)))
      :domain (c3-1 / yup
                    :mode expressive)
      :mode expressive)

# ::snt A fake 'Sheikh'..Self styled,cardboard gangster using religion as a front.Why dont they just take him out
# ::tokens ["A", "fake", "'", "Sheikh'", "..", "Self", "styled", ",", "cardboard", "gangster", "using", "religion", "as", "a", "front", ".", "Why", "do", "nt", "they", "just", "take", "him", "out"]
# ::lemmas ["a", "fake", "'", "sheikh'", "..", "self", "style", ",", "cardboard", "gangster", "use", "religion", "as", "a", "front", ".", "why", "do", "not", "they", "just", "take", "he", "out"]
(c4-3 / multi-sentence
      :snt1 (c4-8 / person
                  :mod (c4-9 / religious-group
                             :name (c4-6 / name
                                         :op1 "Sheikh"))
                  :ARG1-of (c4-2 / fake-02))
      :snt2 (c4-4 / use-01
                  :ARG0 (c4-11 / gangster
                               :mod (c4-10 / cardboard)
                               :ARG1-of (c4-14 / style-01
                                               :ARG2 c4-11))
                  :ARG1 (c4-5 / religion)
                  :ARG2 (c4-7 / front))
      :snt3 (c4-12 / cause-01
                   :ARG0 (c4-16 / amr-unknown)
                   :ARG1 (c4-15 / take-out-11
                                :ARG0 (c4-13 / they)
                                :ARG1 (c4-0 / he)
                                :mod (c4-1 / just)
                                :polarity -)))

# ::snt boom
# ::tokens ["boom"]
# ::lemmas ["boom"]
(c5-0 / boom
      :mode expressive)

# ::snt Heavenly Father, please continue the release of the Sidney siege hostages.
# ::tokens ["Heavenly", "Father", ",", "please", "continue", "the", "release", "of", "the", "Sidney", "siege", "hostages", "."]
# ::lemmas ["Heavenly", "Father", ",", "please", "continue", "the", "release", "of", "the", "Sidney", "siege", "hostage", "."]
(c6-7 / say-01
      :ARG1 (c6-5 / continue-01
                  :ARG0 (c6-3 / person
                              :name (c6-1 / name
                                          :op1 "Heavenly"
                                          :op2 "Father"))
                  :ARG1 (c6-4 / release-01
                              :ARG0 c6-3
                              :ARG1 (c6-0 / hostage
                                          :ARG1-of (c6-8 / hold-01
                                                         :location (c6-6 / city
                                                                         :name (c6-2 / name
                                                                                     :op1 "Sidney")))))
                  :mode imperative
                  :polite +)
      :ARG2 c6-3)

# ::snt Hopefully that he's a dead man.
# ::tokens ["Hopefully", "that", "he", "'s", "a", "dead", "man", "."]
# ::lemmas ["hopefully", "that", "he", "be", "a", "dead", "man", "."]
(c7-0 / hopeful-03
      :ARG1 (c7-2 / man
                  :ARG1-of (c7-1 / die-01)
                  :domain (c7-3 / he)))

# ::snt The illusion
# ::tokens ["The", "illusion"]
# ::lemmas ["the", "illusion"]
(c8-0 / illusion)

# ::snt it's proven...
# ::tokens ["it", "'s", "proven", "..."]
# ::lemmas ["it", "be", "prove", "..."]
(c9-0 / prove-01
      :ARG1 (c9-1 / it))

# ::snt : What we know about Sheikh Haron, the suspected hostage taker in
# ::tokens [":", "What", "we", "know", "about", "Sheikh", "Haron", ",", "the", "suspected", "hostage", "taker", "in"]
# ::lemmas [":", "what", "we", "know", "about", "Sheikh", "Haron", ",", "the", "suspect", "hostage", "taker", "in"]
(c10-3 / know-01
       :ARG0 (c10-1 / we)
       :ARG1 (c10-8 / thing
                    :topic (c10-5 / person
                                  :name (c10-4 / name
                                               :op1 "Sheikh"
                                               :op2 "Haron")
                                  :ARG0-of (c10-6 / taker-01
                                                  :ARG1 (c10-0 / hostage)
                                                  :ARG2-of (c10-7 / suspect-01))
                                  :location (c10-2 / location))))

# ::snt hes not a real sheikh so why say he is ?
# ::tokens ["he", "s", "not", "a", "real", "sheikh", "so", "why", "say", "he", "is", "?"]
# ::lemmas ["he", "s", "not", "a", "real", "sheikh", "so", "why", "say", "he", "be", "?"]
(c11-3 / cause-01
       :ARG0 (c11-5 / amr-unknown)
       :ARG1 (c11-4 / say-01
                    :ARG1 (c11-1 / sheikh
                                 :ARG1-of (c11-2 / real-04)
                                 :domain (c11-0 / he)
                                 :polarity -)))

# ::snt shoot him in the head with bullets dipped in pigs blood
# ::tokens ["shoot", "him", "in", "the", "head", "with", "bullets", "dipped", "in", "pigs", "blood"]
# ::lemmas ["shoot", "he", "in", "the", "head", "with", "bullet", "dip", "in", "pig", "blood"]
(c12-6 / shoot-02
       :ARG0 (c12-1 / you)
       :ARG1 (c12-0 / he
                    :part (c12-7 / head
                                 :ARG2-of c12-6))
       :instrument (c12-2 / bullet
                          :ARG1-of (c12-4 / dip-01
                                          :ARG2 (c12-5 / blood
                                                       :poss (c12-3 / pig))))
       :mode imperative)

# ::snt when was the last time a catholic priest held anyone hostage??
# ::tokens ["when", "was", "the", "last", "time", "a", "catholic", "priest", "held", "anyone", "hostage", "?", "?"]
# ::lemmas ["when", "be", "the", "last", "time", "a", "catholic", "priest", "hold", "anyone", "hostage", "?", "?"]
(c13-0 / hold-01
       :ARG0 (c13-4 / priest
                    :mod (c13-5 / religious-group
                                :name (c13-3 / name
                                             :op1 "Catholic")))
       :ARG1 (c13-7 / hostage
                    :domain (c13-6 / anyone))
       :time (c13-2 / amr-unknown
                    :mod (c13-1 / last)))

# ::snt a) He's a shitheadb) He's deadc) He's now in hell.
# ::tokens ["a", ")", "He", "'s", "a", "shitheadb", ")", "He", "'s", "deadc", ")", "He", "'s", "now", "in", "hell", "."]
# ::lemmas ["a", ")", "he", "be", "a", "shitheadb", ")", "he", "be", "deadc", ")", "he", "be", "now", "in", "hell", "."]
(c14-6 / and
       :op1 (c14-5 / shithead
                   :domain (c14-0 / he)
                   :li "a")
       :op2 (c14-4 / die-01
                   :ARG1 c14-0
                   :li "b")
       :op3 (c14-2 / be-located-at-91
                   :ARG1 c14-0
                   :ARG2 (c14-1 / hell)
                   :time (c14-3 / now)
                   :li "c"))

# ::snt Loves v Hatreds
# ::tokens ["Loves", "v", "Hatreds"]
# ::lemmas ["love", "v", "hatred"]
(c15-2 / and
       :op1 (c15-1 / love-01)
       :op2 (c15-0 / hate-01))

# ::snt Nasik &amp; Mansuik. Copy &amp; delete. Hide &amp; seek.
# ::tokens ["Nasik", "&", "amp", ";", "Mansuik", ".", "Copy", "&", "amp", ";", "delete", ".", "Hide", "&", "amp", ";", "seek", "."]
# ::lemmas ["Nasik", "&", "amp", ";", "Mansuik", ".", "Copy", "&", "amp", ";", "delete", ".", "Hide", "&", "amp", ";", "seek", "."]
(c16-1 / multi-sentence
       :snt1 (c16-12 / and
                     :op1 (c16-6 / person
                                 :name (c16-4 / name
                                              :op1 "Nasik"))
                     :op2 (c16-11 / person
                                  :name (c16-5 / name
                                               :op1 "Mansuik")))
       :snt2 (c16-3 / and
                    :op1 (c16-8 / copy-01)
                    :op2 (c16-7 / delete-01))
       :snt3 (c16-9 / and
                    :op1 (c16-0 / hide-01)
                    :op2 (c16-2 / edit-01))
       :snt4 (c16-10 / seek-01))

# ::snt WAIT AND SEE THEN Zara!
# ::tokens ["WAIT", "AND", "SEE", "THEN", "Zara", "!"]
# ::lemmas ["wait", "and", "SEE", "then", "Zara", "!"]
(c17-5 / say-01
       :ARG0 (c17-2 / i)
       :ARG1 (c17-7 / and
                    :op1 (c17-0 / wake-01
                                :ARG0 (c17-4 / person
                                             :name (c17-3 / name
                                                          :op1 "Zara"))
                                :mode imperative)
                    :op2 (c17-1 / see-01
                                :ARG0 c17-4
                                :time (c17-6 / then)
                                :mode imperative))
       :ARG2 c17-4)

# ::snt : What we know about Sheikh Haron, the suspected hostage taker in
# ::tokens [":", "What", "we", "know", "about", "Sheikh", "Haron", ",", "the", "suspected", "hostage", "taker", "in"]
# ::lemmas [":", "what", "we", "know", "about", "Sheikh", "Haron", ",", "the", "suspect", "hostage", "taker", "in"]
(c18-3 / know-01
       :ARG0 (c18-1 / we)
       :ARG1 (c18-8 / thing
                    :topic (c18-5 / person
                                  :name (c18-4 / name
                                               :op1 "Sheikh"
                                               :op2 "Haron")
                                  :ARG0-of (c18-6 / taker-01
                                                  :ARG1 (c18-0 / hostage)
                                                  :ARG2-of (c18-7 / suspect-01))
                                  :location (c18-2 / location))))

# ::snt . Why would 'ian demand flag? This does not fit together.
# ::tokens [".", "Why", "would", "'", "ian", "demand", "flag", "?", "This", "does", "not", "fit", "together", "."]
# ::lemmas [".", "why", "would", "'", "ian", "demand", "flag", "?", "this", "do", "not", "fit", "together", "."]
(c19-1 / multi-sentence
       :snt1 (c19-5 / cause-01
                    :ARG0 (c19-9 / amr-unknown)
                    :ARG1 (c19-4 / demand-01
                                 :ARG0 (c19-6 / country
                                              :name (c19-3 / name
                                                           :op1 "Iran"))
                                 :ARG1 (c19-0 / flag)))
       :snt2 (c19-2 / fit-06
                    :ARG1 (c19-8 / this)
                    :ARG2 (c19-7 / together)
                    :polarity -))

# ::snt hang him by the balls, if he has any...
# ::tokens ["hang", "him", "by", "the", "balls", ",", "if", "he", "has", "any", "..."]
# ::lemmas ["hang", "he", "by", "the", "ball", ",", "if", "he", "have", "any", "..."]
(c20-0 / have-condition-91
       :ARG1 (c20-5 / hang-01
                    :ARG0 (c20-1 / you)
                    :ARG1 (c20-3 / he)
                    :ARG2 (c20-2 / ball)
                    :mode imperative)
       :ARG2 (c20-4 / have-03
                    :ARG0 c20-3
                    :ARG1 c20-2))

# ::snt His identity was confirmed to us by an intelligence source.
# ::tokens ["His", "identity", "was", "confirmed", "to", "us", "by", "an", "intelligence", "source", "."]
# ::lemmas ["his", "identity", "be", "confirm", "to", "we", "by", "an", "intelligence", "source", "."]
(c21-3 / confirm-01
       :ARG0 (c21-5 / source
                    :mod (c21-2 / intelligence))
       :ARG1 (c21-4 / identity
                    :poss (c21-0 / he))
       :ARG2 (c21-1 / we))
