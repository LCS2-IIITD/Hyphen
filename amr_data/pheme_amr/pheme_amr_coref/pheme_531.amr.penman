# ::snt Cf tweet prcdent
# ::tokens ["Cf", "tweet", "prcdent"]
# ::lemmas ["Cf", "tweet", "prcdent"]
(c1-3 / say-01
      :ARG0 (c1-0 / i)
      :ARG1 (c1-4 / tweet-01
                  :ARG0 (c1-2 / person
                              :name (c1-1 / name
                                          :op1 "PCF")
                              :ARG2-of c1-3)))

# ::snt No flights landing - more flying past, but a few taking off
# ::tokens ["No", "flights", "landing", "-", "more", "flying", "past", ",", "but", "a", "few", "taking", "off"]
# ::lemmas ["no", "flight", "land", "-", "more", "fly", "past", ",", "but", "a", "few", "take", "off"]
(c2-1 / multi-sentence
      :snt1 (c2-0 / land-01
                  :ARG1 (c2-2 / fly-01)
                  :polarity -)
      :snt2 (c2-7 / contrast-01
                  :ARG1 (c2-4 / fly-01
                              :ARG1 (c2-5 / more)
                              :path (c2-6 / past))
                  :ARG2 (c2-9 / take-off-19
                              :ARG1 (c2-3 / fly-01
                                          :quant (c2-8 / few)))))

# ::snt AF1695 just went around
# ::tokens ["AF1695", "just", "went", "around"]
# ::lemmas ["AF1695", "just", "go", "around"]
(c3-3 / go-01
      :ARG1 (c3-1 / military
                  :name (c3-2 / name
                              :op1 "AF1695"))
      :ARG4 (c3-4 / around)
      :mod (c3-0 / just))

# ::snt Here,the weather is not a problem for landing
# ::tokens ["Here", ",", "the", "weather", "is", "not", "a", "problem", "for", "landing"]
# ::lemmas ["here", ",", "the", "weather", "be", "not", "a", "problem", "for", "land"]
(c4-1 / problem
      :domain (c4-0 / weather)
      :purpose (c4-2 / land-01)
      :polarity -)

# ::snt three in a row have had go-arounds just now
# ::tokens ["three", "in", "a", "row", "have", "had", "go", "-", "arounds", "just", "now"]
# ::lemmas ["three", "in", "a", "row", "have", "have", "go", "-", "around", "just", "now"]
(c6-0 / have-06
      :ARG0 (c6-4 / person
                  :mod (c6-2 / in-a-row)
                  :quant 3)
      :ARG1 (c6-5 / go-out-17)
      :time (c6-3 / now
                  :mod (c6-1 / just)))

# ::snt Strani giri degli aerei all'areoporto parigino. E km da l si spara
# ::tokens ["Strani", "giri", "degli", "aerei", "all'areoporto", "parigino", ".", "E", "km", "da", "l", "si", "spara"]
# ::lemmas ["Strani", "giri", "degli", "aerei", "all'areoporto", "parigino", ".", "e", "km", "da", "l", "si", "spara"]
(c7-0 / multi-sentence
      :snt1 (c7-8 / and
                  :op1 (c7-6 / giri
                             :mod c7-6))
      :op2 (c7-4 / degli
                 :mod (c7-2 / all))
      :op3 (c7-3 / parigino
                 :mod c7-2)
      :snt2 (c7-5 / cause-01
                  :ARG0 (c7-7 / string-entity
                              :mod c7-7
                              :value "E"
                              :value "k km"))
      :ARG1 (c7-1 / spara
                  :mode expressive))

# ::snt :think I might want to divert from CDG ..
# ::tokens [":", "think", "I", "might", "want", "to", "divert", "from", "CDG", ".."]
# ::lemmas [":", "think", "i", "might", "want", "to", "divert", "from", "CDG", ".."]
(c8-5 / think-01
      :ARG0 (c8-1 / i)
      :ARG1 (c8-3 / possible-01
                  :ARG1 (c8-0 / want-01
                              :ARG0 c8-1
                              :ARG1 (c8-4 / divert-01
                                          :ARG0 c8-1
                                          :ARG2 (c8-6 / product
                                                      :name (c8-2 / name
                                                                  :op1 "CDG"))))))

# ::snt yes, the police has confirmed they're armed with AK-47 and a RPG.
# ::tokens ["yes", ",", "the", "police", "has", "confirmed", "they", "'re", "armed", "with", "AK-47", "and", "a", "RPG", "."]
# ::lemmas ["yes", ",", "the", "police", "have", "confirm", "they", "be", "armed", "with", "AK-47", "and", "a", "RPG", "."]
(c9-5 / confirm-01
      :ARG0 (c9-4 / police)
      :ARG1 (c9-8 / arm-01
                  :ARG1 (c9-6 / they)
                  :ARG2 (c9-1 / and
                              :op1 (c9-7 / product
                                         :name (c9-2 / name
                                                     :op1 "AK-47"))
                              :op2 (c9-0 / product
                                         :name (c9-3 / name
                                                     :op1 " RPG")))))

# ::snt CNN reporting people being stopped going to an airport. Must be this one.
# ::tokens ["CNN", "reporting", "people", "being", "stopped", "going", "to", "an", "airport", ".", "Must", "be", "this", "one", "."]
# ::lemmas ["CNN", "report", "people", "be", "stop", "go", "to", "an", "airport", ".", "must", "be", "this", "one", "."]
(c10-2 / multi-sentence
       :snt1 (c10-6 / report-01
                    :ARG0 (c10-5 / publication
                                 :name (c10-4 / name
                                              :op1 "CNN"))
                    :ARG1 (c10-8 / stop-01
                                 :ARG1 (c10-10 / person)
                                 :ARG2 (c10-7 / go-02
                                              :ARG0 c10-10
                                              :ARG4 (c10-11 / airport))))
       :snt2 (c10-3 / obligate-01
                    :ARG2 (c10-1 / one
                                 :mod (c10-9 / this)
                                 :domain (c10-0 / you))))

# ::snt Static incident ongoing near CDG airport
# ::tokens ["Static", "incident", "ongoing", "near", "CDG", "airport"]
# ::lemmas ["static", "incident", "ongoing", "near", "CDG", "airport"]
(c11-3 / go-on-15
       :ARG1 (c11-0 / incident
                    :mod (c11-4 / static))
       :ARG1-of (c11-1 / near-02
                       :ARG2 (c11-5 / airport
                                    :name (c11-2 / name
                                                 :op1 "CDG"))))

# ::snt the two killers have taken hostages near from CDG. choppers and GIGN are surrounding them.
# ::tokens ["the", "two", "killers", "have", "taken", "hostages", "near", "from", "CDG", ".", "choppers", "and", "GIGN", "are", "surrounding", "them", "."]
# ::lemmas ["the", "two", "killer", "have", "take", "hostage", "near", "from", "CDG", ".", "chopper", "and", "GIGN", "be", "surround", "they", "."]
(c12-10 / take-01
        :ARG0 (c12-4 / person
                     :ARG0-of (c12-1 / kill-01)
                     :quant 2)
        :ARG1 (c12-0 / hostage
                     :ARG1-of (c12-2 / near-02
                                     :ARG2 (c12-6 / company
                                                  :name (c12-3 / name
                                                               :op1 "CDG"))))
        :ARG2 (c12-9 / surround-01
                     :ARG1 (c12-11 / and
                                   :op1 (c12-5 / chopper)
                                   :op2 (c12-8 / company
                                               :name (c12-7 / name
                                                            :op1 "GIGN")))
                     :ARG2 c12-4))

# ::snt One of the runways has been closed because was to close of the attack zone (Dammary-en-Gole)
# ::tokens ["One", "of", "the", "runways", "has", "been", "closed", "because", "was", "to", "close", "of", "the", "attack", "zone", "(", "Dammary", "-", "en", "-", "Gole", ")"]
# ::lemmas ["One", "of", "the", "runway", "have", "be", "close", "because", "be", "to", "close", "of", "the", "attack", "zone", "(", "Dammary", "-", "en", "-", "Gole", ")"]
(c13-5 / cause-01
       :ARG0 (c13-4 / close-01
                    :ARG1 (c13-0 / zone
                                 :location-of (c13-9 / attack-01)
                                 :ARG1-of (c13-1 / mean-01
                                                 :ARG2 (c13-8 / string-entity
                                                              :value "Dammary-en-Gole"))))
       :ARG1 (c13-7 / close-01
                    :ARG1 (c13-6 / runway
                                 :ARG1-of (c13-2 / include-91
                                                 :ARG2 (c13-3 / runway))
                                 :quant 1)))
