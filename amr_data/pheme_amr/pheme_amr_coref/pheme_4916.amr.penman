# ::snt That's almost certainly false. But only Uber has data say, so at least your assertion is unfounded
# ::tokens ["That", "'s", "almost", "certainly", "false", ".", "But", "only", "Uber", "has", "data", "say", ",", "so", "at", "least", "your", "assertion", "is", "unfounded"]
# ::lemmas ["that", "be", "almost", "certainly", "false", ".", "but", "only", "Uber", "have", "datum", "say", ",", "so", "at", "least", "your", "assertion", "be", "unfounded"]
(c1-3 / multi-sentence
      :snt1 (c1-2 / false
                  :domain (c1-13 / that)
                  :mod (c1-10 / certain
                              :mod (c1-15 / almost)))
      :snt2 (c1-9 / contrast-01
                  :ARG2 (c1-0 / have-03
                              :ARG0 (c1-12 / company
                                           :name (c1-7 / name
                                                       :op1 " Uber"))
                              :ARG1 (c1-11 / data
                                           :ARG0-of (c1-14 / say-01))
                              :mod (c1-4 / only)
                              :ARG0-of (c1-16 / cause-01
                                              :ARG1 (c1-6 / found-01
                                                          :ARG1 (c1-5 / assert-02
                                                                      :ARG0 (c1-1 / you))
                                                          :mod (c1-8 / at-least)
                                                          :polarity -)))))

# ::snt And by the way, people are free to do that in Sydney RIGHT NOW. Uber's prices will drop immediately in response.
# ::tokens ["And", "by", "the", "way", ",", "people", "are", "free", "to", "do", "that", "in", "Sydney", "RIGHT", "NOW", ".", "Uber", "'s", "prices", "will", "drop", "immediately", "in", "response", "."]
# ::lemmas ["and", "by", "the", "way", ",", "people", "be", "free", "to", "do", "that", "in", "Sydney", "right", "now", ".", "Uber", "'s", "price", "will", "drop", "immediately", "in", "response", "."]
(c2-2 / multi-sentence
      :snt1 (c2-16 / and
                   :op2 (c2-1 / free-04
                              :ARG1 (c2-8 / person)
                              :ARG3 (c2-9 / do-02
                                          :ARG0 c2-8
                                          :ARG1 (c2-14 / that))
                              :location (c2-10 / city
                                               :name (c2-6 / name
                                                           :op1 "Sydney"))
                              :time (c2-7 / now
                                          :mod (c2-11 / right)))
                   :mod (c2-3 / by-the-way))
      :snt2 (c2-0 / drop-01
                  :ARG1 (c2-15 / price-01
                               :ARG0 (c2-12 / company
                                            :name (c2-13 / name
                                                         :op1 "Uber")))
                  :time (c2-4 / immediate)
                  :ARG2-of (c2-5 / respond-01
                                 :ARG1 c2-0)))

# ::snt guess it has elements of price gouging, but at least uber's price surges increase supply. also not "essential" good/service
# ::tokens ["guess", "it", "has", "elements", "of", "price", "gouging", ",", "but", "at", "least", "uber", "'s", "price", "surges", "increase", "supply", ".", "also", "not", "\"", "essential", "\"", "good", "/", "service"]
# ::lemmas ["guess", "it", "have", "element", "of", "price", "gouging", ",", "but", "at", "least", "uber", "'s", "price", "surge", "increase", "supply", ".", "also", "not", "\"", "essential", "\"", "good", "/", "service"]
(c3-0 / multi-sentence
      :snt1 (c3-13 / guess-01
                   :ARG1 (c3-7 / have-03
                               :ARG0 (c3-15 / it)
                               :ARG1 (c3-10 / element
                                            :mod (c3-3 / gouge-02
                                                       :ARG2 (c3-2 / price)))))
      :snt2 (c3-16 / increase-01
                   :ARG0 (c3-4 / surge-01
                               :ARG1 (c3-5 / price)
                               :poss (c3-18 / company
                                            :name (c3-12 / name
                                                         :op1 " uber")))
                   :ARG1 (c3-11 / supply-01)
                   :mod (c3-6 / at-least))
      :snt3 (c3-17 / slash
                   :op1 (c3-1 / good-02)
                   :op2 (c3-9 / serve-02)
                   :mod (c3-8 / essential
                              :polarity -)
                   :mod (c3-14 / also)))

# ::snt *are* lives at stake?
# ::tokens ["*", "are", "*", "lives", "at", "stake", "?"]
# ::lemmas ["*", "be", "*", "life", "at", "stake", "?"]
(c4-0 / stake-01
      :polarity (c4-2 / amr-unknown)
      :ARG1 (c4-1 / life))

# ::snt Surge pricing is great. Using and then bragging about it when lives are at stake is disgusting.
# ::tokens ["Surge", "pricing", "is", "great", ".", "Using", "and", "then", "bragging", "about", "it", "when", "lives", "are", "at", "stake", "is", "disgusting", "."]
# ::lemmas ["surge", "pricing", "be", "great", ".", "use", "and", "then", "brag", "about", "it", "when", "life", "be", "at", "stake", "be", "disgusting", "."]
(c5-1 / multi-sentence
      :snt1 (c5-7 / great
                  :domain (c5-5 / price-01
                                :ARG1 (c5-8 / Surge-01)))
      :snt2 (c5-6 / disgust-01
                  :ARG0 (c5-10 / and
                               :op1 (c5-2 / use-01
                                          :ARG1 c5-5)
                               :op2 (c5-3 / brag-01
                                          :ARG1 c5-5
                                          :time (c5-4 / stake-01
                                                      :ARG2 (c5-0 / life))
                                          :time (c5-9 / then)))))

# ::snt all Uber has to do is not take their % cut in theseSituations.
# ::tokens ["all", "Uber", "has", "to", "do", "is", "not", "take", "their", "%", "cut", "in", "theseSituations", "."]
# ::lemmas ["all", "Uber", "have", "to", "do", "be", "not", "take", "their", "%", "cut", "in", "thesesituation", "."]
(c6-0 / obligate-01
      :ARG1 (c6-4 / company
                  :name (c6-1 / name
                              :op1 "Uber"))
      :ARG2 (c6-3 / do-02
                  :ARG0 c6-4
                  :ARG1 (c6-8 / take-01
                              :ARG0 c6-4
                              :ARG1 (c6-5 / cut-02
                                          :ARG0 c6-4
                                          :ARG1 (c6-2 / percentage)
                                          :location (c6-7 / situation
                                                          :mod (c6-6 / this)))
                              :polarity -)
                  :mod (c6-9 / all)))

# ::snt and by your argument wouldn't impact supply at all.
# ::tokens ["and", "by", "your", "argument", "would", "n't", "impact", "supply", "at", "all", "."]
# ::lemmas ["and", "by", "your", "argument", "would", "not", "impact", "supply", "at", "all", "."]
(c7-6 / and
      :op2 (c7-2 / impact-01
                 :ARG0 (c7-5 / thing
                             :ARG1-of (c7-1 / argue-01
                                            :ARG0 (c7-0 / you)))
                 :ARG1 (c7-4 / supply-01)
                 :degree (c7-3 / at-all)
                 :polarity -))

# ::snt No more confident than you are. I'm also done arguing about a company making extra profit in a crisis.
# ::tokens ["No", "more", "confident", "than", "you", "are", ".", "I", "'m", "also", "done", "arguing", "about", "a", "company", "making", "extra", "profit", "in", "a", "crisis", "."]
# ::lemmas ["no", "more", "confident", "than", "you", "be", ".", "i", "be", "also", "do", "argue", "about", "a", "company", "make", "extra", "profit", "in", "a", "crisis", "."]
(c8-2 / multi-sentence
      :snt1 (c8-0 / have-degree-91
                  :ARG2 (c8-9 / confident-01)
                  :ARG3 (c8-7 / more)
                  :ARG4 (c8-8 / confident-01
                              :ARG1 (c8-1 / you))
                  :polarity -)
      :snt2 (c8-3 / be-done-08
                  :ARG0 (c8-6 / i)
                  :ARG1 (c8-12 / argue-02
                               :ARG0 c8-6
                               :ARG2 (c8-11 / company
                                            :ARG0-of (c8-10 / profit-01
                                                            :mod (c8-4 / extra)
                                                            :time (c8-13 / crisis))))
                  :mod (c8-5 / also)))

# ::snt In an emergency, you need a system to encourage drivers on the road and make sure only the really needy grab cabs.
# ::tokens ["In", "an", "emergency", ",", "you", "need", "a", "system", "to", "encourage", "drivers", "on", "the", "road", "and", "make", "sure", "only", "the", "really", "needy", "grab", "cabs", "."]
# ::lemmas ["in", "an", "emergency", ",", "you", "need", "a", "system", "to", "encourage", "driver", "on", "the", "road", "and", "make", "sure", "only", "the", "really", "needy", "grab", "cab", "."]
(c9-6 / need-01
      :ARG0 (c9-0 / you)
      :ARG1 (c9-13 / system
                   :purpose (c9-15 / and
                                   :op1 (c9-4 / encourage-01
                                              :ARG1 (c9-8 / person
                                                          :ARG0-of (c9-9 / drive-01))
                                              :location (c9-10 / road))
                                   :op2 (c9-2 / ensure-01
                                              :ARG1 (c9-11 / grab-01
                                                           :ARG0 (c9-14 / person
                                                                        :ARG0-of (c9-7 / need-01
                                                                                       :degree (c9-5 / really))
                                                                        :mod (c9-3 / only))
                                                           :ARG1 (c9-12 / cab)))))
      :condition (c9-1 / emergency))

# ::snt But then why would they provide a service if they're not making any money?
# ::tokens ["But", "then", "why", "would", "they", "provide", "a", "service", "if", "they", "'re", "not", "making", "any", "money", "?"]
# ::lemmas ["but", "then", "why", "would", "they", "provide", "a", "service", "if", "they", "be", "not", "make", "any", "money", "?"]
(c10-4 / contrast-01
       :ARG2 (c10-3 / cause-01
                    :ARG0 (c10-8 / amr-unknown)
                    :ARG1 (c10-2 / provide-01
                                 :ARG0 (c10-7 / they)
                                 :ARG1 (c10-6 / serve-01
                                              :ARG0 c10-7)
                                 :condition (c10-0 / make-05
                                                   :ARG0 c10-7
                                                   :ARG1 (c10-5 / money
                                                                :mod (c10-1 / any))
                                                   :polarity -))))

# ::snt Some very nice people do charity work for free. But expect every business to provide free products and despair.
# ::tokens ["Some", "very", "nice", "people", "do", "charity", "work", "for", "free", ".", "But", "expect", "every", "business", "to", "provide", "free", "products", "and", "despair", "."]
# ::lemmas ["some", "very", "nice", "people", "do", "charity", "work", "for", "free", ".", "but", "expect", "every", "business", "to", "provide", "free", "product", "and", "despair", "."]
(c11-3 / multi-sentence
       :snt1 (c11-0 / work-01
                    :ARG0 (c11-11 / person
                                  :ARG1-of (c11-9 / nice-01
                                                  :degree (c11-10 / very))
                                  :quant (c11-15 / some))
                    :ARG1 (c11-13 / charity)
                    :ARG1-of (c11-2 / free-03))
       :snt2 (c11-12 / contrast-01
                     :ARG2 (c11-7 / expect-01
                                  :ARG0 (c11-1 / you)
                                  :ARG1 (c11-16 / provide-01
                                                :ARG0 (c11-5 / business
                                                             :mod (c11-6 / every))
                                                :ARG1 (c11-17 / and
                                                              :op1 (c11-4 / product
                                                                          :ARG1-of (c11-8 / free-03))
                                                              :op2 (c11-14 / despair-01)))
                                  :mode imperative)))

# ::snt bruce, what is the alternative? Better to have expensive transportation than none at all
# ::tokens ["bruce", ",", "what", "is", "the", "alternative", "?", "Better", "to", "have", "expensive", "transportation", "than", "none", "at", "all"]
# ::lemmas ["bruce", ",", "what", "be", "the", "alternative", "?", "well", "to", "have", "expensive", "transportation", "than", "none", "at", "all"]
(c12-2 / multi-sentence
       :snt1 (c12-14 / ask-01
                     :ARG1 (c12-4 / alternative
                                  :domain (c12-6 / amr-unknown))
                     :ARG2 (c12-7 / person
                                  :name (c12-5 / name
                                               :op1 "Bruce")))
       :snt2 (c12-10 / good-02
                     :ARG1 (c12-0 / have-03
                                  :ARG1 (c12-13 / transport-01
                                                :mod (c12-3 / expensive)))
                     :ARG2-of (c12-1 / have-degree-91
                                     :ARG1 c12-0
                                     :ARG3 (c12-8 / more)
                                     :ARG4 (c12-9 / have-03
                                                  :ARG1 (c12-11 / transport-01
                                                                :mod (c12-12 / at-all))))))

# ::snt yes...because only the ppl with the $$ are the "really needy"...such a non real life way to look at things
# ::tokens ["yes", "...", "because", "only", "the", "ppl", "with", "the", "$", "$", "are", "the", "\"", "really", "needy\"", "...", "such", "a", "non", "real", "life", "way", "to", "look", "at", "things"]
# ::lemmas ["yes", "...", "because", "only", "the", "ppl", "with", "the", "$", "$", "be", "the", "\"", "really", "needy\"", "...", "such", "a", "non", "real", "life", "way", "to", "look", "at", "thing"]
(c13-9 / cause-01
       :ARG0 (c13-6 / need-01
                    :ARG0 (c13-7 / person
                                 :mod (c13-4 / only)
                                 :ARG0-of (c13-0 / have-03
                                                 :ARG1 (c13-8 / dollar)))
                    :degree (c13-10 / really)
                    :manner (c13-1 / way
                                   :manner-of (c13-3 / look-01
                                                     :ARG1 (c13-13 / thing))
                                   :mod (c13-11 / life
                                                :ARG1-of (c13-5 / real-04)
                                                :polarity -)
                                   :mod (c13-12 / such)))
       :ARG1 (c13-2 / yes))

# ::snt And the beauty of surge pricing is that it immediately gets a bunch of people in a car, and then prices will drop.
# ::tokens ["And", "the", "beauty", "of", "surge", "pricing", "is", "that", "it", "immediately", "gets", "a", "bunch", "of", "people", "in", "a", "car", ",", "and", "then", "prices", "will", "drop", "."]
# ::lemmas ["and", "the", "beauty", "of", "surge", "pricing", "be", "that", "it", "immediately", "get", "a", "bunch", "of", "people", "in", "a", "car", ",", "and", "then", "price", "will", "drop", "."]
(c14-13 / and
        :op2 (c14-1 / beauty
                    :domain (c14-2 / and
                                   :op1 (c14-7 / get-05
                                               :ARG0 (c14-4 / price-01
                                                            :ARG1-of (c14-9 / surge-01))
                                               :ARG1 (c14-12 / person
                                                             :quant (c14-6 / bunch))
                                               :ARG2 (c14-8 / car)
                                               :time (c14-3 / immediate))
                                   :op2 (c14-5 / drop-01
                                               :ARG1 (c14-0 / price-01)
                                               :time (c14-11 / then)))
                    :poss (c14-10 / price-01
                                  :ARG1-of c14-9)))

# ::snt do you think they are garbage for encouraging more drivers to get to the area to get people out? More drivers &gt; less drivers
# ::tokens ["do", "you", "think", "they", "are", "garbage", "for", "encouraging", "more", "drivers", "to", "get", "to", "the", "area", "to", "get", "people", "out", "?", "More", "drivers", "&", "gt", ";", "less", "drivers"]
# ::lemmas ["do", "you", "think", "they", "be", "garbage", "for", "encourage", "more", "driver", "to", "get", "to", "the", "area", "to", "get", "people", "out", "?", "more", "driver", "&", "gt", ";", "less", "driver"]
(c15-1 / multi-sentence
       :snt1 (c15-22 / think-01
                     :ARG0 (c15-18 / you)
                     :ARG1 (c15-15 / garbage
                                   :domain (c15-21 / they)
                                   :ARG1-of (c15-20 / cause-01
                                                    :ARG0 (c15-12 / encourage-01
                                                                  :ARG0 c15-21
                                                                  :ARG1 (c15-3 / person
                                                                               :ARG0-of (c15-4 / drive-01)
                                                                               :quant (c15-14 / more))
                                                                  :ARG2 (c15-5 / get-05
                                                                               :ARG0 c15-3
                                                                               :ARG1 c15-3
                                                                               :ARG2 (c15-7 / area)
                                                                               :purpose c15-5
                                                                               :ARG0 c15-3
                                                                               :ARG1 (c15-6 / person
                                                                                            :ARG1-of (c15-19 / out-06)))))))
       :polarity (c15-17 / amr-unknown)
       :snt2 (c15-13 / and
                     :op1 (c15-11 / person
                                  :ARG0-of (c15-0 / drive-01)
                                  :quant (c15-9 / more))
                     :op2 (c15-16 / person
                                  :ARG0-of (c15-8 / have-org-role-91
                                                  :ARG2 (c15-2 / gt))
                                  :quant (c15-10 / less))))

# ::snt The hostages certainly are. This isn't New Year's Eve or a broken train.
# ::tokens ["The", "hostages", "certainly", "are", ".", "This", "is", "n't", "New", "Year", "'s", "Eve", "or", "a", "broken", "train", "."]
# ::lemmas ["the", "hostage", "certainly", "be", ".", "this", "be", "not", "New", "Year", "'s", "Eve", "or", "a", "broken", "train", "."]
(c16-2 / multi-sentence
       :snt1 (c16-0 / hostage
                    :mod (c16-6 / certain))
       :snt2 (c16-4 / or
                    :op1 (c16-1 / festival
                                :name (c16-5 / name
                                             :op1 "New"
                                             :op2 "Year's"
                                             :op3 "Eve"))
                    :op2 (c16-8 / train
                                :ARG1-of (c16-3 / break-01))
                    :domain (c16-7 / this)
                    :polarity -))

# ::snt ppl love the market until it negatively impacts them...
# ::tokens ["ppl", "love", "the", "market", "until", "it", "negatively", "impacts", "them", "..."]
# ::lemmas ["ppl", "love", "the", "market", "until", "it", "negatively", "impact", "they", "..."]
(c17-0 / love-01
       :ARG0 (c17-6 / person
                    :name (c17-4 / name
                                 :op1 "ppl"))
       :ARG1 (c17-1 / market)
       :time (c17-2 / until
                    :op1 (c17-3 / impact-01
                                :ARG0 c17-1
                                :ARG1 c17-6
                                :ARG2 (c17-5 / negative-02))))

# ::snt If you haven't already deleted the app: : Uber is a pile of garbage.
# ::tokens ["If", "you", "have", "n't", "already", "deleted", "the", "app", ":", ":", "Uber", "is", "a", "pile", "of", "garbage", "."]
# ::lemmas ["if", "you", "have", "not", "already", "delete", "the", "app", ":", ":", "Uber", "be", "a", "pile", "of", "garbage", "."]
(c18-0 / have-condition-91
       :ARG1 (c18-4 / pile
                    :consist-of (c18-7 / garbage)
                    :domain (c18-6 / company
                                   :name (c18-3 / name
                                                :op1 "Uber")))
       :ARG2 (c18-5 / delete-01
                    :ARG0 (c18-1 / you)
                    :ARG1 (c18-8 / app)
                    :time (c18-2 / already)
                    :polarity -))

# ::snt Because when a terrorist attack happens, there's a huge surge in demand, and drivers want to stay home. Big shortage.
# ::tokens ["Because", "when", "a", "terrorist", "attack", "happens", ",", "there", "'s", "a", "huge", "surge", "in", "demand", ",", "and", "drivers", "want", "to", "stay", "home", ".", "Big", "shortage", "."]
# ::lemmas ["because", "when", "a", "terrorist", "attack", "happen", ",", "there", "be", "a", "huge", "surge", "in", "demand", ",", "and", "driver", "want", "to", "stay", "home", ".", "big", "shortage", "."]
(c19-4 / multi-sentence
       :snt1 (c19-11 / cause-01
                     :ARG0 (c19-14 / and
                                   :op1 (c19-12 / surge-01
                                                :ARG1 (c19-10 / demand-01)
                                                :mod (c19-0 / huge)
                                                :time (c19-8 / attack-01
                                                             :ARG0 (c19-13 / terrorist)))
                                   :op2 (c19-1 / want-01
                                               :ARG0 (c19-9 / person
                                                            :ARG0-of (c19-2 / drive-01))
                                               :ARG1 (c19-7 / stay-01
                                                            :ARG1 c19-9
                                                            :ARG3 (c19-3 / home)))))
       :snt2 (c19-5 / short-06
                    :mod (c19-6 / big)))

# ::snt In NYC, the gov't has a strict cab limit. The result is that yellow cabs only hang out near rich, white people.
# ::tokens ["In", "NYC", ",", "the", "gov't", "has", "a", "strict", "cab", "limit", ".", "The", "result", "is", "that", "yellow", "cabs", "only", "hang", "out", "near", "rich", ",", "white", "people", "."]
# ::lemmas ["in", "NYC", ",", "the", "gov't", "have", "a", "strict", "cab", "limit", ".", "the", "result", "be", "that", "yellow", "cab", "only", "hang", "out", "near", "rich", ",", "white", "people", "."]
(c20-4 / multi-sentence
       :snt1 (c20-0 / have-03
                    :ARG0 (c20-11 / government-organization
                                  :ARG0-of (c20-9 / govern-01))
                    :ARG1 (c20-3 / limit-01
                                 :ARG1 (c20-10 / cab)
                                 :mod (c20-14 / strict))
                    :location (c20-12 / city
                                      :name (c20-6 / name
                                                   :op1 "NYC")))
       :snt2 (c20-13 / result-01
                     :ARG2 (c20-16 / hang-out-06
                                   :ARG1 (c20-15 / cab
                                                 :ARG1-of (c20-1 / yellow-02))
                                   :ARG2 (c20-7 / near-02
                                                :ARG1 c20-15
                                                :ARG2 (c20-8 / person
                                                             :ARG1-of (c20-2 / white-02)))
                                   :mod (c20-5 / only))))

# ::snt I just deleted the ap. This is BS.
# ::tokens ["I", "just", "deleted", "the", "ap", ".", "This", "is", "BS", "."]
# ::lemmas ["i", "just", "delete", "the", "ap", ".", "this", "be", "BS", "."]
(c21-1 / multi-sentence
       :snt1 (c21-6 / delete-01
                    :ARG0 (c21-3 / i)
                    :ARG1 (c21-5 / publication
                                 :name (c21-4 / name
                                              :op1 "AP"))
                    :time (c21-0 / just))
       :snt2 (c21-2 / bullshit-01
                    :ARG1 (c21-7 / this)))

# ::snt Assuming yes, for sake of argument, who's morally culpable: or drivers who base decisions upon it?
# ::tokens ["Assuming", "yes", ",", "for", "sake", "of", "argument", ",", "who", "'s", "morally", "culpable", ":", "or", "drivers", "who", "base", "decisions", "upon", "it", "?"]
# ::lemmas ["assume", "yes", ",", "for", "sake", "of", "argument", ",", "who", "be", "morally", "culpable", ":", "or", "driver", "who", "base", "decision", "upon", "it", "?"]
(c22-8 / culpable-01
       :ARG1 (c22-9 / amr-choice
                    :op1 (c22-6 / person
                                :ARG0-of (c22-7 / drive-01)
                                :ARG0-of (c22-2 / base-02
                                                :ARG1 (c22-0 / decide-01
                                                             :ARG0 c22-6)
                                                :ARG2 (c22-4 / it))
                                :op2-of c22-9))
       :manner (c22-1 / moral-02)
       :ARG1-of (c22-3 / assume-02)
       :purpose (c22-5 / argue-01))

# ::snt no
# ::tokens ["no"]
# ::lemmas ["no"]
(c23-0 / no)

# ::snt Pulling... what? It's a simple example of what happens when you remove price mechanisms.
# ::tokens ["Pulling", "...", "what", "?", "It", "'s", "a", "simple", "example", "of", "what", "happens", "when", "you", "remove", "price", "mechanisms", "."]
# ::lemmas ["pull", "...", "what", "?", "it", "be", "a", "simple", "example", "of", "what", "happen", "when", "you", "remove", "price", "mechanism", "."]
(c24-1 / multi-sentence
       :snt1 (c24-5 / pull-01)
       :snt2 (c24-3 / exemplify-01
                    :ARG0 (c24-4 / it)
                    :ARG1 (c24-2 / event
                                 :condition (c24-6 / remove-01
                                                   :ARG0 (c24-0 / you)
                                                   :ARG1 (c24-7 / mechanism
                                                                :mod (c24-9 / price-01))))
                    :ARG1-of (c24-8 / simple-02)))

# ::snt Except the irony is that the people helped by the surge pricing are the people Jonah thinks it hurts: The consumers.
# ::tokens ["Except", "the", "irony", "is", "that", "the", "people", "helped", "by", "the", "surge", "pricing", "are", "the", "people", "Jonah", "thinks", "it", "hurts", ":", "The", "consumers", "."]
# ::lemmas ["except", "the", "irony", "be", "that", "the", "people", "help", "by", "the", "surge", "pricing", "be", "the", "people", "Jonah", "think", "it", "hurt", ":", "the", "consumer", "."]
(c25-3 / except-01
       :ARG1 (c25-4 / irony
                    :domain (c25-0 / help-01
                                   :ARG0 (c25-6 / price-01
                                                :ARG4 (c25-8 / surge-01))
                                   :ARG1 (c25-11 / person
                                                 :ARG1-of (c25-1 / mean-01
                                                                 :ARG2 (c25-2 / person
                                                                              :ARG0-of (c25-7 / consume-01))
                                                                 :ARG1-of (c25-10 / think-01
                                                                                  :ARG0 (c25-9 / person
                                                                                               :name (c25-5 / name
                                                                                                            :op1 "Jonah"))))))))

# ::snt Driver probably wants to be w/ his or her family. But if price is high he/she might decide otherwise
# ::tokens ["Driver", "probably", "wants", "to", "be", "w/", "his", "or", "her", "family", ".", "But", "if", "price", "is", "high", "he", "/", "she", "might", "decide", "otherwise"]
# ::lemmas ["Driver", "probably", "want", "to", "be", "w/", "his", "or", "her", "family", ".", "but", "if", "price", "be", "high", "he", "/", "she", "might", "decide", "otherwise"]
(c26-1 / multi-sentence
       :snt1 (c26-17 / want-01
                     :ARG0 (c26-3 / person
                                  :ARG0-of (c26-4 / drive-01))
                     :ARG1 (c26-12 / be-located-at-91
                                   :ARG1 c26-3
                                   :ARG2 (c26-20 / or
                                                 :op1 (c26-6 / person
                                                             :ARG0-of (c26-9 / have-rel-role-91
                                                                             :ARG1 c26-3
                                                                             :ARG2 (c26-10 / family)))
                                                 :op2 (c26-11 / person
                                                              :ARG0-of (c26-7 / have-rel-role-91
                                                                              :ARG1 c26-3
                                                                              :ARG2 (c26-15 / member)))))
                     :mod (c26-16 / probable))
       :snt2 (c26-21 / contrast-01
                     :ARG2 (c26-13 / possible-01
                                   :ARG1 (c26-0 / decide-01
                                                :ARG0 (c26-5 / slash
                                                             :op1 (c26-2 / he)
                                                             :op2 (c26-14 / she))
                                                :ARG1 (c26-18 / have-polarity-91
                                                              :ARG2 -)
                                                :condition (c26-19 / high-02
                                                                   :ARG1 (c26-22 / thing
                                                                                 :ARG2-of (c26-8 / price-01)))))))

# ::snt And it only took you tweets to say that.
# ::tokens ["And", "it", "only", "took", "you", "tweets", "to", "say", "that", "."]
# ::lemmas ["and", "it", "only", "take", "you", "tweet", "to", "say", "that", "."]
(c27-6 / and
       :op2 (c27-5 / take-10
                   :ARG0 (c27-4 / say-01
                                :ARG0 (c27-0 / you)
                                :ARG1 (c27-3 / that))
                   :ARG1 (c27-2 / tweet-02
                                :ARG0 c27-0)
                   :mod (c27-1 / only)))

# ::snt it's like when all those doctors without borders do what the market says and donates their supplies to poor ppl
# ::tokens ["it", "'s", "like", "when", "all", "those", "doctors", "without", "borders", "do", "what", "the", "market", "says", "and", "donates", "their", "supplies", "to", "poor", "ppl"]
# ::lemmas ["it", "be", "like", "when", "all", "those", "doctor", "without", "border", "do", "what", "the", "market", "say", "and", "donate", "their", "supply", "to", "poor", "ppl"]
(c28-9 / resemble-01
       :ARG1 (c28-6 / it)
       :ARG2 (c28-14 / and
                     :op1 (c28-8 / do-02
                                 :ARG0 (c28-0 / doctor
                                              :mod (c28-5 / all)
                                              :mod (c28-12 / that)
                                              :ARG1-of (c28-3 / border-01
                                                              :polarity -))
                                 :ARG1 (c28-10 / thing
                                               :ARG1-of (c28-11 / say-01
                                                                :ARG0 (c28-1 / market))))
                     :op2 (c28-15 / donate-01
                                  :ARG0 c28-0
                                  :ARG1 c28-10
                                  :ARG1-of (c28-4 / supply-01
                                                  :ARG0 c28-0))
                     :ARG2 (c28-7 / person
                                  :mod (c28-13 / poor)
                                  :ARG0-of (c28-2 / ppl-01))))

# ::snt This does not increase the supply of drivers, only raises the piece for scared riders.
# ::tokens ["This", "does", "not", "increase", "the", "supply", "of", "drivers", ",", "only", "raises", "the", "piece", "for", "scared", "riders", "."]
# ::lemmas ["this", "do", "not", "increase", "the", "supply", "of", "driver", ",", "only", "raise", "the", "piece", "for", "scared", "rider", "."]
(c29-7 / contrast-01
       :ARG1 (c29-3 / increase-01
                    :ARG0 (c29-10 / this)
                    :ARG1 (c29-9 / supply-01
                                 :ARG1 (c29-5 / person
                                              :ARG0-of (c29-6 / drive-01)))
                    :polarity -)
       :ARG2 (c29-8 / raise-01
                    :ARG0 c29-10
                    :ARG1 (c29-11 / piece)
                    :beneficiary (c29-0 / person
                                        :ARG0-of (c29-4 / ride-01)
                                        :ARG1-of (c29-2 / scare-01))
                    :mod (c29-1 / only)))

# ::snt The only way to do that is with pricing mechanisms (i.e. "surge pricing"). It's not immoral, it's amoral.
# ::tokens ["The", "only", "way", "to", "do", "that", "is", "with", "pricing", "mechanisms", "(", "i.e.", "\"", "surge", "pricing", "\"", ")", ".", "It", "'s", "not", "immoral", ",", "it", "'s", "amoral", "."]
# ::lemmas ["the", "only", "way", "to", "do", "that", "be", "with", "pricing", "mechanism", "(", "i.e.", "\"", "surge", "pricing", "\"", ")", ".", "it", "be", "not", "immoral", ",", "it", "be", "amoral", "."]
(c30-2 / multi-sentence
       :snt1 (c30-0 / way
                    :mod (c30-3 / only)
                    :manner-of (c30-6 / do-02
                                      :ARG1 (c30-10 / that))
                    :domain (c30-5 / mechanism
                                   :instrument-of (c30-7 / price-01)
                                   :ARG1-of (c30-1 / mean-01
                                                   :ARG2 (c30-11 / price-01
                                                                 :ARG1-of (c30-9 / surge-01)))))
       :snt2 (c30-12 / and
                     :op1 (c30-8 / moral-02
                                 :ARG1 (c30-4 / it)
                                 :op2-of c30-12
                                 :polarity -)
                     :ARG1 c30-4
                     :polarity -))

# ::snt If you know a way to drop Uber fares by % without a supply shortage, start an Uber alternative. Make a business.
# ::tokens ["If", "you", "know", "a", "way", "to", "drop", "Uber", "fares", "by", "%", "without", "a", "supply", "shortage", ",", "start", "an", "Uber", "alternative", ".", "Make", "a", "business", "."]
# ::lemmas ["if", "you", "know", "a", "way", "to", "drop", "uber", "fare", "by", "%", "without", "a", "supply", "shortage", ",", "start", "an", "Uber", "alternative", ".", "make", "a", "business", "."]
(c31-3 / multi-sentence
       :snt1 (c31-13 / start-01
                     :ARG0 (c31-0 / you)
                     :ARG1 (c31-15 / alternative
                                   :mod (c31-10 / company
                                                :name (c31-7 / name
                                                             :op1 " Uber")))
                     :condition (c31-14 / know-01
                                        :ARG0 c31-0
                                        :ARG1 (c31-1 / way
                                                     :manner-of (c31-9 / drop-01
                                                                       :ARG0 c31-0
                                                                       :ARG1 (c31-2 / fare
                                                                                    :mod c31-10)
                                                                       :ARG2 (c31-8 / percentage-entity)
                                                                       :manner (c31-6 / short-06
                                                                                      :ARG2 (c31-4 / supply-01)
                                                                                      :polarity -)))))
       :snt2 (c31-11 / make-01
                     :ARG0 (c31-12 / you)
                     :ARG1 (c31-5 / business)))

# ::snt Nope, wrong because you ignore supply. More drivers are not going to appear because fares are higher.
# ::tokens ["Nope", ",", "wrong", "because", "you", "ignore", "supply", ".", "More", "drivers", "are", "not", "going", "to", "appear", "because", "fares", "are", "higher", "."]
# ::lemmas ["nope", ",", "wrong", "because", "you", "ignore", "supply", ".", "more", "driver", "be", "not", "go", "to", "appear", "because", "fare", "be", "high", "."]
(c32-4 / multi-sentence
       :snt1 (c32-1 / wrong-04
                    :ARG1 (c32-2 / you)
                    :ARG1-of (c32-10 / cause-01
                                     :ARG0 (c32-7 / ignore-01
                                                  :ARG0 c32-2
                                                  :ARG1 (c32-13 / supply-01))))
       :snt2 (c32-14 / appear-01
                     :ARG1 (c32-8 / person
                                  :ARG0-of (c32-9 / drive-01)
                                  :quant (c32-11 / more))
                     :ARG1-of (c32-12 / cause-01
                                      :ARG0 (c32-0 / have-degree-91
                                                   :ARG1 (c32-3 / fare)
                                                   :ARG2 (c32-5 / high-02
                                                                :ARG1 c32-3)
                                                   :ARG3 (c32-6 / more)))
                     :polarity -))

# ::snt If they all voluntarily went and did their jobs, there would be no shortage of demand and no surge in prices.
# ::tokens ["If", "they", "all", "voluntarily", "went", "and", "did", "their", "jobs", ",", "there", "would", "be", "no", "shortage", "of", "demand", "and", "no", "surge", "in", "prices", "."]
# ::lemmas ["if", "you", "all", "voluntarily", "go", "and", "do", "their", "job", ",", "there", "would", "be", "no", "shortage", "of", "demand", "and", "no", "surge", "in", "price", "."]
(c33-11 / and
        :op1 (c33-9 / short-06
                    :ARG2 (c33-6 / demand-01)
                    :polarity -)
        :op2 (c33-2 / surge-01
                    :ARG1 (c33-5 / price-01)
                    :polarity -)
        :condition (c33-3 / and
                          :op1 (c33-8 / go-02
                                      :ARG0 (c33-10 / they
                                                    :mod (c33-4 / all))
                                      :ARG1-of (c33-7 / volunteer-01
                                                      :ARG0 c33-10))
                          :op2 (c33-1 / do-02
                                      :ARG0 c33-10
                                      :ARG1 (c33-0 / job
                                                   :poss c33-10))))

# ::snt All good. And debate is a good thing.
# ::tokens ["All", "good", ".", "And", "debate", "is", "a", "good", "thing", "."]
# ::lemmas ["all", "good", ".", "and", "debate", "be", "a", "good", "thing", "."]
(c34-0 / multi-sentence
       :snt1 (c34-4 / good-02
                    :ARG1 (c34-5 / all))
       :snt2 (c34-1 / and
                    :op2 (c34-2 / good-02
                                :ARG1 (c34-3 / debate-01))))

# ::snt : Uber is a pile of garbage. people hate on Uber but people keep using the service.
# ::tokens [":", "Uber", "is", "a", "pile", "of", "garbage", ".", "people", "hate", "on", "Uber", "but", "people", "keep", "using", "the", "service", "."]
# ::lemmas [":", "uber", "be", "a", "pile", "of", "garbage", ".", "people", "hate", "on", "Uber", "but", "people", "keep", "use", "the", "service", "."]
(c35-1 / multi-sentence
       :snt1 (c35-5 / pile
                    :consist-of (c35-8 / garbage)
                    :domain (c35-7 / company
                                   :name (c35-4 / name
                                                :op1 "Uber")))
       :snt2 (c35-6 / contrast-01
                    :ARG1 (c35-0 / hate-01
                                 :ARG0 (c35-11 / person)
                                 :ARG1 c35-7)
                    :ARG2 (c35-10 / keep-02
                                  :ARG0 (c35-3 / person)
                                  :ARG1 (c35-2 / use-01
                                               :ARG0 c35-3
                                               :ARG1 (c35-9 / service
                                                            :mod c35-7)))))

# ::snt You are really, really passionate about Uber's marginal revenue in the midst of a crisis.
# ::tokens ["You", "are", "really", ",", "really", "passionate", "about", "Uber", "'s", "marginal", "revenue", "in", "the", "midst", "of", "a", "crisis", "."]
# ::lemmas ["you", "be", "really", ",", "really", "passionate", "about", "Uber", "'s", "marginal", "revenue", "in", "the", "midst", "of", "a", "crisis", "."]
(c36-5 / passionate
       :degree (c36-6 / really
                      :degree (c36-3 / really))
       :domain (c36-0 / you)
       :topic (c36-2 / revenue
                     :poss (c36-7 / company
                                  :name (c36-4 / name
                                               :op1 " Uber"))
                     :ARG1-of (c36-1 / marginal-02)
                     :time (c36-8 / crisis)))

# ::snt Im not sure I understand what there is to disagree w/. As your article says fares automatically increase when supply&ltemand
# ::tokens ["I", "m", "not", "sure", "I", "understand", "what", "there", "is", "to", "disagree", "w/.", "As", "your", "article", "says", "fares", "automatically", "increase", "when", "supply&ltemand"]
# ::lemmas ["i", "m", "not", "sure", "i", "understand", "what", "there", "be", "to", "disagree", "w/.", "as", "your", "article", "say", "fare", "automatically", "increase", "when", "supply&ltemand"]
(c37-2 / multi-sentence
       :snt1 (c37-12 / sure-02
                     :ARG0 (c37-8 / i)
                     :ARG1 (c37-3 / understand-01
                                  :ARG0 c37-8
                                  :ARG1 (c37-10 / disagree-01
                                                :ARG2 (c37-13 / thing)))
                     :polarity -)
       :snt2 (c37-6 / say-01
                    :ARG0 (c37-14 / article
                                  :poss (c37-0 / you))
                    :ARG1 (c37-11 / increase-01
                                  :ARG1 (c37-1 / fare)
                                  :manner (c37-7 / automatic)
                                  :time (c37-9 / and
                                               :op1 (c37-4 / supply-01)
                                               :op2 (c37-5 / lease-01)))))

# ::snt Why are you so confident about this? People respond to incentives in so many situations
# ::tokens ["Why", "are", "you", "so", "confident", "about", "this", "?", "People", "respond", "to", "incentives", "in", "so", "many", "situations"]
# ::lemmas ["why", "be", "you", "so", "confident", "about", "this", "?", "people", "respond", "to", "incentive", "in", "so", "many", "situation"]
(c38-2 / multi-sentence
       :snt1 (c38-7 / cause-01
                    :ARG0 (c38-13 / amr-unknown)
                    :ARG1 (c38-6 / confident-01
                                 :ARG1 (c38-0 / you)
                                 :ARG2 (c38-12 / this)
                                 :degree (c38-11 / so)))
       :snt2 (c38-8 / respond-01
                    :ARG0 (c38-5 / person)
                    :ARG1 (c38-10 / thing
                                  :ARG0-of (c38-4 / incentivize-01))
                    :ARG2 (c38-3 / situation
                                 :quant (c38-9 / many
                                               :degree (c38-1 / so)))))

# ::snt I'll give you a hint: it's probably not the impoverished minority. It's the rich, white guy in a business suit.
# ::tokens ["I", "'ll", "give", "you", "a", "hint", ":", "it", "'s", "probably", "not", "the", "impoverished", "minority", ".", "It", "'s", "the", "rich", ",", "white", "guy", "in", "a", "business", "suit", "."]
# ::lemmas ["i", "'ll", "give", "you", "a", "hint", ":", "it", "be", "probably", "not", "the", "impoverished", "minority", ".", "it", "be", "the", "rich", ",", "white", "guy", "in", "a", "business", "suit", "."]
(c39-4 / multi-sentence
       :snt1 (c39-0 / hint-01
                    :ARG0 (c39-7 / i)
                    :ARG1 (c39-9 / probable
                                 :domain (c39-10 / minority
                                                 :ARG1-of (c39-12 / impoverish-01
                                                                  :polarity -)
                                                 :domain (c39-3 / it)))
                    :ARG2 (c39-1 / you))
       :snt2 (c39-13 / guy
                     :mod (c39-11 / rich)
                     :ARG1-of (c39-2 / white-02)
                     :ARG0-of (c39-8 / wear-01
                                     :ARG1 (c39-14 / suit
                                                   :mod (c39-5 / business)))
                     :domain (c39-6 / it)))

# ::snt Encourage people to do as much charity as possible, then let the marketplace fill in the gaps.
# ::tokens ["Encourage", "people", "to", "do", "as", "much", "charity", "as", "possible", ",", "then", "let", "the", "marketplace", "fill", "in", "the", "gaps", "."]
# ::lemmas ["encourage", "people", "to", "do", "as", "much", "charity", "as", "possible", ",", "then", "let", "the", "marketplace", "fill", "in", "the", "gap", "."]
(c40-14 / and
        :op1 (c40-6 / encourage-01
                    :ARG0 (c40-1 / you)
                    :ARG1 (c40-7 / person)
                    :ARG2 (c40-8 / do-02
                                 :ARG0 c40-7
                                 :ARG1 (c40-9 / charity
                                              :ARG1-of (c40-0 / have-quant-91
                                                              :ARG2 (c40-3 / much)
                                                              :ARG3 (c40-5 / equal)
                                                              :ARG4 (c40-13 / possible-01))))
                    :mode imperative)
        :op2 (c40-2 / let-01
                    :ARG0 c40-1
                    :ARG1 (c40-4 / fill-in-05
                                 :ARG0 (c40-10 / marketplace)
                                 :ARG1 (c40-11 / gap))
                    :time (c40-12 / then)
                    :mode imperative))

# ::snt Both are the same to economists: A supply shortage due to an external intervention in the market.
# ::tokens ["Both", "are", "the", "same", "to", "economists", ":", "A", "supply", "shortage", "due", "to", "an", "external", "intervention", "in", "the", "market", "."]
# ::lemmas ["both", "be", "the", "same", "to", "economist", ":", "a", "supply", "shortage", "due", "to", "an", "external", "intervention", "in", "the", "market", "."]
(c41-8 / same-01
       :ARG1 (c41-2 / both)
       :ARG2 (c41-4 / economist)
       :ARG3 (c41-5 / short-06
                    :ARG2 (c41-0 / supply-01)
                    :ARG1-of (c41-7 / cause-01
                                    :ARG0 (c41-6 / intervene-01
                                                 :ARG0 (c41-3 / external)
                                                 :ARG1 (c41-1 / market)))))

# ::snt This seems mostly like a computer automated thing...
# ::tokens ["This", "seems", "mostly", "like", "a", "computer", "automated", "thing", "..."]
# ::lemmas ["this", "seem", "mostly", "like", "a", "computer", "automate", "thing", "..."]
(c42-4 / seem-01
       :ARG1 (c42-1 / resemble-01
                    :ARG1 (c42-5 / this)
                    :ARG2 (c42-3 / thing
                                 :ARG1-of (c42-6 / automate-01
                                                 :ARG0 (c42-2 / computer)))
                    :mod (c42-0 / most)))

# ::snt yes
# ::tokens ["yes"]
# ::lemmas ["yes"]
(c43-0 / yes)

# ::snt Poor people won't be able to get a cab when there's a supply shortage either. That's what you have to understand.
# ::tokens ["Poor", "people", "wo", "n't", "be", "able", "to", "get", "a", "cab", "when", "there", "'s", "a", "supply", "shortage", "either", ".", "That", "'s", "what", "you", "have", "to", "understand", "."]
# ::lemmas ["poor", "people", "will", "not", "be", "able", "to", "get", "a", "cab", "when", "there", "be", "a", "supply", "shortage", "either", ".", "that", "be", "what", "you", "have", "to", "understand", "."]
(c44-1 / multi-sentence
       :snt1 (c44-7 / possible-01
                    :ARG1 (c44-9 / get-01
                                 :ARG0 (c44-12 / person
                                               :mod (c44-3 / poor))
                                 :ARG1 (c44-8 / cab))
                    :time (c44-10 / short-06
                                  :ARG2 (c44-5 / supply-01)
                                  :mod (c44-6 / either))
                    :polarity -)
       :snt2 (c44-4 / obligate-01
                    :ARG1 (c44-0 / you)
                    :ARG2 (c44-2 / understand-01
                                 :ARG0 c44-0
                                 :ARG1 (c44-11 / that))))

# ::snt I don't give a shit about their marginal revenue. I think ur proposal makes scared people worse off
# ::tokens ["I", "do", "n't", "give", "a", "shit", "about", "their", "marginal", "revenue", ".", "I", "think", "ur", "proposal", "makes", "scared", "people", "worse", "off"]
# ::lemmas ["i", "do", "not", "give", "a", "shit", "about", "their", "marginal", "revenue", ".", "i", "think", "ur", "proposal", "make", "scared", "people", "bad", "off"]
(c45-3 / multi-sentence
       :snt1 (c45-10 / give-16
                     :ARG0 (c45-5 / i)
                     :ARG1 (c45-13 / shit)
                     :ARG2 (c45-8 / revenue
                                  :poss (c45-15 / they)
                                  :ARG1-of (c45-7 / marginal-02))
                     :polarity -)
       :snt2 (c45-12 / think-01
                     :ARG0 (c45-11 / i)
                     :ARG1 (c45-2 / make-02
                                  :ARG0 (c45-6 / thing
                                               :ARG1-of (c45-9 / propose-01
                                                               :ARG0 (c45-1 / you)))
                                  :ARG1 (c45-4 / bad-off-06
                                               :ARG1 (c45-16 / person)
                                               :ARG2-of (c45-0 / have-degree-91
                                                               :ARG1 c45-16
                                                               :ARG3 (c45-14 / more))))))

# ::snt Could uber offer to give a free ride to relatives of the hostages who want to get to safety? sure
# ::tokens ["Could", "uber", "offer", "to", "give", "a", "free", "ride", "to", "relatives", "of", "the", "hostages", "who", "want", "to", "get", "to", "safety", "?", "sure"]
# ::lemmas ["could", "uber", "offer", "to", "give", "a", "free", "ride", "to", "relative", "of", "the", "hostage", "who", "want", "to", "get", "to", "safety", "?", "sure"]
(c46-7 / possible-01
       :ARG1 (c46-4 / offer-01
                    :ARG1 (c46-8 / ride-01
                                 :ARG1-of (c46-2 / free-03))
                    :ARG3 (c46-12 / person
                                  :ARG0-of (c46-0 / have-rel-role-91
                                                  :ARG1 (c46-13 / hostage
                                                                :ARG0-of (c46-1 / want-01
                                                                                :ARG1 (c46-9 / get-05
                                                                                             :ARG1 c46-13
                                                                                             :ARG2 (c46-10 / safe-01
                                                                                                           :ARG1 c46-13))))
                                                  :ARG2 (c46-6 / relative)))
                    :mod (c46-3 / uber))
       :ARG1-of (c46-5 / sure-02)
       :polarity (c46-11 / amr-unknown))

# ::snt While not achieving any of the egalitarian objectives you think it accomplishes
# ::tokens ["While", "not", "achieving", "any", "of", "the", "egalitarian", "objectives", "you", "think", "it", "accomplishes"]
# ::lemmas ["while", "not", "achieve", "any", "of", "the", "egalitarian", "objective", "you", "think", "it", "accomplish"]
(c47-9 / achieve-01
       :ARG0 (c47-5 / it)
       :ARG1 (c47-2 / objective
                    :ARG1-of (c47-7 / include-91
                                    :ARG2 (c47-1 / objective
                                                 :mod (c47-3 / egalitarian)))
                    :mod (c47-4 / any))
       :concession (c47-8 / think-01
                          :ARG0 (c47-0 / you)
                          :ARG1 (c47-6 / accomplish-01
                                       :ARG0 c47-5
                                       :ARG1 c47-2))
       :polarity -)

# ::snt The high prices will create a surge in supply. Or we can go back to your plan, where no poor people ever get picked up
# ::tokens ["The", "high", "prices", "will", "create", "a", "surge", "in", "supply", ".", "Or", "we", "can", "go", "back", "to", "your", "plan", ",", "where", "no", "poor", "people", "ever", "get", "picked", "up"]
# ::lemmas ["the", "high", "price", "will", "create", "a", "surge", "in", "supply", ".", "or", "we", "can", "go", "back", "to", "your", "plan", ",", "where", "no", "poor", "people", "ever", "get", "pick", "up"]
(c48-3 / multi-sentence
       :snt1 (c48-10 / create-01
                     :ARG0 (c48-9 / price-01
                                  :ARG1-of (c48-0 / high-02))
                     :ARG1 (c48-12 / surge-01
                                   :ARG1 (c48-7 / supply-01)))
       :snt2 (c48-5 / or
                    :op2 (c48-15 / possible-01
                                 :ARG1 (c48-11 / go-back-19
                                               :ARG1 (c48-1 / we)
                                               :ARG2 (c48-4 / plan
                                                            :poss (c48-2 / you)
                                                            :location-of (c48-14 / pick-up-04
                                                                                 :ARG1 (c48-6 / person
                                                                                              :mod (c48-13 / poor))
                                                                                 :time (c48-8 / ever)
                                                                                 :polarity -))))))

# ::snt arguing that moral info doesn't impact human decisions is extremely naive.
# ::tokens ["arguing", "that", "moral", "info", "does", "n't", "impact", "human", "decisions", "is", "extremely", "naive", "."]
# ::lemmas ["argue", "that", "moral", "info", "do", "not", "impact", "human", "decision", "be", "extremely", "naive", "."]
(c49-4 / naive
       :degree (c49-2 / extreme)
       :domain (c49-7 / argue-01
                      :ARG1 (c49-3 / impact-01
                                   :ARG0 (c49-6 / information
                                                :ARG1-of (c49-1 / moral-02))
                                   :ARG1 (c49-5 / decide-01
                                                :ARG0 (c49-0 / human))
                                   :polarity -)))

# ::snt Yellow cab drivers are refusing to go pick people up because they won't get paid extra for it. What's your solution?
# ::tokens ["Yellow", "cab", "drivers", "are", "refusing", "to", "go", "pick", "people", "up", "because", "they", "wo", "n't", "get", "paid", "extra", "for", "it", ".", "What", "'s", "your", "solution", "?"]
# ::lemmas ["yellow", "cab", "driver", "be", "refuse", "to", "go", "pick", "people", "up", "because", "they", "will", "not", "get", "pay", "extra", "for", "it", ".", "what", "be", "your", "solution", "?"]
(c50-1 / multi-sentence
       :snt1 (c50-7 / refuse-01
                    :ARG0 (c50-4 / person
                                 :ARG0-of (c50-5 / drive-01
                                                 :ARG1 (c50-6 / cab
                                                              :ARG1-of (c50-0 / yellow-02))))
                    :ARG1 (c50-8 / go-05
                                 :ARG0 c50-4
                                 :ARG1 (c50-12 / pick-up-04
                                               :ARG0 c50-4
                                               :ARG1 (c50-2 / person)))
                    :ARG1-of (c50-9 / cause-01
                                    :ARG0 (c50-11 / pay-01
                                                  :ARG2 c50-4
                                                  :ARG3 c50-12
                                                  :mod (c50-3 / extra)
                                                  :polarity -)))
       :snt2 (c50-10 / solve-01
                     :ARG0 (c50-14 / you)
                     :ARG2 (c50-13 / amr-unknown)))
