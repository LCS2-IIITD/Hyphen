# ::snt it doesn't matter... He's a human being. Despite his prior actions, he didn't deserve his outcome ...
# ::tokens ["it", "does", "n't", "matter", "...", "He", "'s", "a", "human", "being", ".", "Despite", "his", "prior", "actions", ",", "he", "did", "n't", "deserve", "his", "outcome", "..."]
# ::lemmas ["it", "do", "not", "matter", "...", "he", "be", "a", "human", "being", ".", "despite", "his", "prior", "action", ",", "he", "do", "not", "deserve", "his", "outcome", "..."]
(c1-1 / multi-sentence
      :snt1 (c1-6 / matter-01
                  :ARG1 (c1-4 / it)
                  :polarity -)
      :snt2 (c1-2 / being
                  :mod (c1-0 / human)
                  :domain (c1-10 / he))
      :snt3 (c1-7 / deserve-01
                  :ARG0 (c1-5 / he)
                  :ARG1 (c1-3 / outcome
                              :poss c1-5)
                  :concession (c1-9 / act-02
                                    :ARG0 c1-5
                                    :time (c1-8 / prior))
                  :polarity -))

# ::snt Trust me,...the protest will lose some fervor.
# ::tokens ["Trust", "me,", "...", "the", "protest", "will", "lose", "some", "fervor", "."]
# ::lemmas ["Trust", "me,", "...", "the", "protest", "will", "lose", "some", "fervor", "."]
(c2-6 / trust-01
      :ARG0 (c2-0 / you)
      :ARG1 (c2-3 / i)
      :topic (c2-1 / lose-02
                   :ARG0 (c2-4 / protest-01)
                   :ARG1 (c2-2 / fervor
                               :mod (c2-5 / some)))
      :mode imperative)

# ::snt let me guess, the solution is bigger government?
# ::tokens ["let", "me", "guess", ",", "the", "solution", "is", "bigger", "government", "?"]
# ::lemmas ["let", "i", "guess", ",", "the", "solution", "be", "big", "government", "?"]
(c3-2 / let-01
      :ARG0 (c3-1 / you)
      :ARG1 (c3-8 / guess-01
                  :ARG0 (c3-5 / i)
                  :ARG1 (c3-9 / solve-01
                              :ARG2 (c3-7 / government-organization
                                          :ARG0-of (c3-6 / govern-01)
                                          :ARG1-of (c3-0 / have-degree-91
                                                         :ARG2 (c3-4 / big)
                                                         :ARG3 (c3-3 / more)))))
      :polarity (c3-10 / amr-unknown))

# ::snt great question, we afikans r all victims, r some of us more deserving in living than others, no, our conditioning is from them
# ::tokens ["great", "question", ",", "we", "afikans", "r", "all", "victims", ",", "r", "some", "of", "us", "more", "deserving", "in", "living", "than", "others", ",", "no", ",", "our", "conditioning", "is", "from", "them"]
# ::lemmas ["great", "question", ",", "we", "afikan", "r", "all", "victim", ",", "r", "some", "of", "we", "more", "deserving", "in", "living", "than", "other", ",", "no", ",", "our", "conditioning", "be", "from", "they"]
(c4-5 / question-01
      :ARG1 (c4-17 / and
                   :op1 (c4-9 / victim
                              :domain (c4-1 / we
                                            :mod (c4-12 / country
                                                        :name (c4-8 / name
                                                                    :op1 "Africa")))
                              :mod (c4-6 / all))
                   :op2 (c4-11 / deserve-01
                               :ARG0 (c4-10 / person
                                            :ARG1-of (c4-7 / include-91
                                                           :ARG2 c4-1
                                                           :ARG3 (c4-15 / some)))
                               :ARG1 (c4-2 / live-01
                                           :ARG0 c4-10)
                               :ARG2-of (c4-0 / have-degree-91
                                              :ARG1 c4-10
                                              :ARG3 (c4-3 / more)
                                              :ARG4 (c4-16 / person
                                                           :mod (c4-4 / other))))
                   :op3 (c4-13 / conditioning
                               :source c4-10))
      :mod (c4-14 / great))

# ::snt Sherrilyn: Yes I can. Angels are in heaven and humans are down here figuring out how to get up there!
# ::tokens ["Sherrilyn", ":", "Yes", "I", "can", ".", "Angels", "are", "in", "heaven", "and", "humans", "are", "down", "here", "figuring", "out", "how", "to", "get", "up", "there", "!"]
# ::lemmas ["Sherrilyn", ":", "yes", "i", "can", ".", "angel", "be", "in", "heaven", "and", "human", "be", "down", "here", "figure", "out", "how", "to", "get", "up", "there", "!"]
(c5-1 / multi-sentence
      :snt1 (c5-5 / say-01
                  :ARG0 (c5-3 / person
                              :name (c5-12 / name
                                           :op1 "Sherrilyn"))
                  :ARG1 (c5-6 / possible-01
                              :ARG1 (c5-4 / do-02
                                          :ARG0 (c5-16 / i))
                              :mod (c5-17 / yes)))
      :snt2 (c5-8 / and
                  :op1 (c5-11 / be-located-at-91
                              :ARG1 (c5-15 / angel)
                              :ARG2 (c5-9 / heaven))
                  :op2 (c5-7 / human
                             :location (c5-2 / here
                                             :direction (c5-0 / down))
                             :ARG0-of (c5-10 / figure-out-05
                                             :ARG1 (c5-18 / thing
                                                          :manner-of (c5-13 / get-05
                                                                            :ARG1 c5-7
                                                                            :ARG2 (c5-14 / up-03
                                                                                         :ARG1 c5-7
                                                                                         :ARG2 c5-9)))))))

# ::snt regardless of any supposed theft , the punishment is not being shot -7 times in the street for not walking in a sidewalk.
# ::tokens ["regardless", "of", "any", "supposed", "theft", ",", "the", "punishment", "is", "not", "being", "shot", "-7", "times", "in", "the", "street", "for", "not", "walking", "in", "a", "sidewalk", "."]
# ::lemmas ["regardless", "of", "any", "suppose", "theft", ",", "the", "punishment", "be", "not", "be", "shoot", "-7", "time", "in", "the", "street", "for", "not", "walk", "in", "a", "sidewalk", "."]
(c6-0 / have-concession-91
      :ARG1 (c6-6 / punish-01
                  :ARG2 (c6-8 / shoot-01
                              :location (c6-5 / street)
                              :ARG1-of (c6-7 / cause-01
                                             :ARG0 (c6-1 / walk-01
                                                         :ARG0 (c6-10 / person)
                                                         :ARG2 (c6-3 / sidewalk)
                                                         :polarity -))
                              :polarity -
                              :frequency 7))
      :ARG2 (c6-9 / thing
                  :ARG1-of (c6-4 / steal-01
                                 :ARG1-of (c6-2 / suppose-01))
                  :mod (c6-11 / any)))

# ::snt yes. Stealing from a store doesn't mean a death sentence. *Rest In Peace to Michael Brown*
# ::tokens ["yes", ".", "Stealing", "from", "a", "store", "does", "n't", "mean", "a", "death", "sentence", ".", "*", "Rest", "In", "Peace", "to", "Michael", "Brown", "*"]
# ::lemmas ["yes", ".", "steal", "from", "a", "store", "do", "not", "mean", "a", "death", "sentence", ".", "*", "rest", "in", "Peace", "to", "Michael", "Brown", "*"]
(c7-2 / multi-sentence
      :snt1 (c7-0 / yes)
      :snt2 (c7-5 / mean-01
                  :ARG1 (c7-9 / steal-01
                              :ARG2 (c7-3 / store))
                  :ARG2 (c7-1 / sentence-01
                              :ARG2 (c7-6 / die-01))
                  :polarity -)
      :snt3 (c7-7 / rest-01
                  :ARG1 (c7-8 / person
                              :name (c7-4 / name
                                          :op1 "Michael"
                                          :op2 "Brown"))
                  :manner (c7-10 / peace)))

# ::snt since when is shooting a thief a justification to riot and loot...
# ::tokens ["since", "when", "is", "shooting", "a", "thief", "a", "justification", "to", "riot", "and", "loot", "..."]
# ::lemmas ["since", "when", "be", "shoot", "a", "thief", "a", "justification", "to", "riot", "and", "loot", "..."]
(c8-8 / thing
      :ARG2-of (c8-0 / justify-01
                     :ARG1 (c8-9 / and
                                 :op1 (c8-6 / riot-01)
                                 :op2 (c8-1 / loot-01)))
      :domain (c8-7 / shoot-02
                    :ARG1 (c8-5 / person
                                :ARG0-of (c8-3 / steal-01)))
      :time (c8-2 / since
                  :op1 (c8-4 / amr-unknown)))

# ::snt Ok, America,this is when we are tested.Can you sustain yr interest in the killing of an unarmed black teen if he wasn't an angel?
# ::tokens ["Ok", ",", "America", ",", "this", "is", "when", "we", "are", "tested", ".", "Can", "you", "sustain", "yr", "interest", "in", "the", "killing", "of", "an", "unarmed", "black", "teen", "if", "he", "was", "n't", "an", "angel", "?"]
# ::lemmas ["ok", ",", "America", ",", "this", "be", "when", "we", "be", "test", ".", "can", "you", "sustain", "yr", "interest", "in", "the", "killing", "of", "an", "unarmed", "black", "teen", "if", "he", "be", "not", "an", "angel", "?"]
(c9-3 / multi-sentence
      :snt1 (c9-5 / okay-01
                  :ARG1 (c9-13 / country
                               :name (c9-9 / name
                                           :op1 "America")))
      :snt2 (c9-16 / test-01
                   :ARG1 (c9-1 / we)
                   :time (c9-14 / this))
      :snt3 (c9-11 / possible-01
                   :ARG1 (c9-15 / sustain-01
                                :ARG0 (c9-2 / you)
                                :ARG1 (c9-7 / interest-01
                                            :ARG1 c9-2
                                            :ARG2 (c9-8 / kill-01
                                                        :ARG1 (c9-10 / teen
                                                                     :ARG1-of (c9-4 / black-05)
                                                                     :ARG1-of (c9-17 / arm-01
                                                                                     :polarity -))))
                                :condition (c9-6 / angel
                                                 :domain (c9-0 / he)
                                                 :polarity -))
                   :polarity (c9-12 / amr-unknown)))

# ::snt He was someone's son, cherished and loved. That's more than enough to care.
# ::tokens ["He", "was", "someone", "'s", "son", ",", "cherished", "and", "loved", ".", "That", "'s", "more", "than", "enough", "to", "care", "."]
# ::lemmas ["he", "be", "someone", "'s", "son", ",", "cherish", "and", "love", ".", "that", "be", "more", "than", "enough", "to", "care", "."]
(c10-2 / multi-sentence
       :snt1 (c10-13 / and
                     :op1 (c10-8 / person
                                 :ARG0-of (c10-0 / have-rel-role-91
                                                 :ARG1 (c10-11 / someone)
                                                 :ARG2 (c10-4 / son))
                                 :domain (c10-1 / he))
                     :op2 (c10-10 / cherish-01
                                  :ARG0 c10-1)
                     :op3 (c10-3 / love-01
                                 :ARG0 c10-1))
       :snt2 (c10-7 / have-quant-91
                    :ARG1 (c10-12 / that)
                    :ARG3 (c10-5 / enough)
                    :ARG6 (c10-9 / care-01
                                 :ARG0 (c10-6 / i))))

# ::snt %. It makes zero freaking difference.
# ::tokens ["%", ".", "It", "makes", "zero", "freaking", "difference", "."]
# ::lemmas ["%", ".", "it", "make", "zero", "freak", "difference", "."]
(c11-1 / make-01
       :ARG0 (c11-3 / it)
       :ARG1 (c11-0 / differ-02
                    :mod (c11-2 / freaking
                                :mode expressive)
                    :quant 0))

# ::snt YES!!!
# ::tokens ["YES", "!", "!", "!"]
# ::lemmas ["yes", "!", "!", "!"]
(c12-0 / yes)

# ::snt Stealing vile cigars is not, under MO law, a capital offense. Nor is jaywalking, or I'd have been shot dead by now
# ::tokens ["Stealing", "vile", "cigars", "is", "not", ",", "under", "MO", "law", ",", "a", "capital", "offense", ".", "Nor", "is", "jaywalking", ",", "or", "I", "'d", "have", "been", "shot", "dead", "by", "now"]
# ::lemmas ["steal", "vile", "cigar", "be", "not", ",", "under", "MO", "law", ",", "a", "capital", "offense", ".", "nor", "be", "jaywalk", ",", "or", "i", "would", "have", "be", "shoot", "dead", "by", "now"]
(c13-2 / multi-sentence
       :snt1 (c13-6 / offend-03
                    :ARG1 (c13-16 / steal-01
                                  :ARG1 (c13-13 / cigar
                                                :ARG1-of (c13-10 / vile-02)))
                    :mod (c13-12 / capital)
                    :prep-under (c13-1 / law
                                       :mod (c13-7 / state
                                                   :name (c13-9 / name
                                                                :op1 "Missouri")))
                    :polarity -)
       :snt2 (c13-3 / or
                    :op1 (c13-0 / jaywalk-00
                                :polarity -)
                    :op2 (c13-4 / shoot-02
                                :ARG1 (c13-8 / i)
                                :time (c13-5 / by
                                             :op1 (c13-11 / now))
                                :ARG0-of (c13-15 / cause-01
                                                 :ARG1 (c13-14 / die-01
                                                               :ARG1 c13-8))
                                :polarity -)))

# ::snt Okay. Chief should not speak anymore. Get someone to speak to the community and media. He's a racist deep in his heart.
# ::tokens ["Okay", ".", "Chief", "should", "not", "speak", "anymore", ".", "Get", "someone", "to", "speak", "to", "the", "community", "and", "media", ".", "He", "'s", "a", "racist", "deep", "in", "his", "heart", "."]
# ::lemmas ["okay", ".", "Chief", "should", "not", "speak", "anymore", ".", "get", "someone", "to", "speak", "to", "the", "community", "and", "medium", ".", "he", "be", "a", "racist", "deep", "in", "his", "heart", "."]
(c14-3 / multi-sentence
       :snt1 (c14-5 / okay-04)
       :snt2 (c14-10 / recommend-01
                     :ARG1 (c14-15 / speak-01
                                   :ARG0 (c14-11 / chief)
                                   :time (c14-16 / anymore)
                                   :polarity -))
       :snt3 (c14-12 / get-05
                     :ARG0 (c14-1 / you)
                     :ARG1 (c14-6 / someone)
                     :ARG2 (c14-2 / speak-01
                                  :ARG0 c14-6
                                  :ARG2 (c14-7 / and
                                               :op1 (c14-13 / community)
                                               :op2 (c14-9 / media)))
                     :mode imperative)
       :snt4 (c14-8 / racist
                    :location (c14-0 / heart
                                     :part-of (c14-4 / he))
                    :ARG1-of (c14-14 / deep-02)))

# ::snt is what the FBI counts on for US.
# ::tokens ["is", "what", "the", "FBI", "counts", "on", "for", "US", "."]
# ::lemmas ["be", "what", "the", "FBI", "count", "on", "for", "US", "."]
(c15-3 / count-03
       :ARG0 (c15-4 / government-organization
                    :name (c15-0 / name
                                 :op1 "FBI"))
       :ARG1 (c15-5 / thing)
       :beneficiary (c15-2 / country
                           :name (c15-1 / name
                                        :op1 "US")))

# ::snt If the cop gets away with this, anyone is fair game.
# ::tokens ["If", "the", "cop", "gets", "away", "with", "this", ",", "anyone", "is", "fair", "game", "."]
# ::lemmas ["if", "the", "cop", "get", "away", "with", "this", ",", "anyone", "be", "fair", "game", "."]
(c16-3 / game
       :ARG1-of (c16-0 / fair-01)
       :domain (c16-5 / anyone)
       :condition (c16-1 / get-away-08
                         :ARG0 (c16-2 / cop)
                         :ARG1 (c16-4 / this)))

# ::snt I can, and I will.
# ::tokens ["I", "can", ",", "and", "I", "will", "."]
# ::lemmas ["i", "can", ",", "and", "i", "will", "."]
(c17-3 / and
       :op1 (c17-0 / possible-01
                   :ARG1 (c17-1 / event
                                :mod (c17-2 / i)
                                :op2-of c17-3)))

# ::snt a box a cigarillos ain't worth ur life all part of the demonize the victim plot
# ::tokens ["a", "box", "a", "cigarillos", "ai", "n't", "worth", "ur", "life", "all", "part", "of", "the", "demonize", "the", "victim", "plot"]
# ::lemmas ["a", "box", "a", "cigarillos", "be", "not", "worth", "ur", "life", "all", "part", "of", "the", "demonize", "the", "victim", "plot"]
(c18-0 / worth-02
       :ARG1 (c18-3 / box
                    :mod (c18-7 / cigarillos))
       :ARG2 (c18-2 / live-01
                    :ARG0 (c18-1 / you))
       :part-of (c18-5 / plot-01
                       :ARG1 (c18-6 / demonize-01
                                    :ARG1 (c18-4 / victim)))
       :polarity -)

# ::snt My thoughts, exactly!
# ::tokens ["My", "thoughts", ",", "exactly", "!"]
# ::lemmas ["my", "thought", ",", "exactly", "!"]
(c19-1 / thing
       :ARG1-of (c19-3 / think-01
                       :ARG0 (c19-2 / i))
       :mod (c19-0 / exact))

# ::snt yes
# ::tokens ["yes"]
# ::lemmas ["yes"]
(c20-0 / yes)
