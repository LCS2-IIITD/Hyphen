# ::snt qu horror
# ::tokens ["qu", "horror"]
# ::lemmas ["qu", "horror"]
(c1-0 / horror
      :mode expressive)

# ::snt : Journalists, policemen are victims in the attack. " / France should reinstate death penalty.
# ::tokens [":", "Journalists", ",", "policemen", "are", "victims", "in", "the", "attack", ".", "\"", "/", "France", "should", "reinstate", "death", "penalty", "."]
# ::lemmas [":", "journalist", ",", "policeman", "be", "victim", "in", "the", "attack", ".", "\"", "/", "France", "should", "reinstate", "death", "penalty", "."]
(c2-1 / multi-sentence
      :snt1 (c2-5 / victim
                  :domain (c2-11 / and
                                 :op1 (c2-0 / journalist)
                                 :op2 (c2-6 / policeman))
                  :location (c2-2 / attack-01))
      :snt2 (c2-7 / recommend-01
                  :ARG1 (c2-3 / reinstate-01
                              :ARG0 (c2-8 / country
                                          :name (c2-4 / name
                                                      :op1 "France"))
                              :ARG1 (c2-10 / penalty
                                           :mod (c2-9 / die-01)))))

# ::snt I hope they catch the bastrads and cut their nutz off!
# ::tokens ["I", "hope", "they", "catch", "the", "bastrads", "and", "cut", "their", "nutz", "off", "!"]
# ::lemmas ["i", "hope", "they", "catch", "the", "bastrad", "and", "cut", "their", "nutz", "off", "!"]
(c3-0 / hope-01
      :ARG0 (c3-2 / i)
      :ARG1 (c3-7 / and
                  :op1 (c3-5 / catch-01
                             :ARG0 (c3-6 / they)
                             :ARG1 (c3-1 / bastard))
                  :op2 (c3-4 / cut-off-04
                             :ARG0 c3-6
                             :ARG1 (c3-3 / nutz
                                         :poss c3-1)))
      :mode expressive)

# ::snt Please support &amp; follow
# ::tokens ["Please", "support", "&", "amp", ";", "follow"]
# ::lemmas ["please", "support", "&", "amp", ";", "follow"]
(c4-8 / and
      :op1 (c4-6 / support-01
                 :ARG0 (c4-0 / you)
                 :ARG1 (c4-2 / and
                             :op1 (c4-5 / person
                                        :name (c4-3 / name
                                                    :op1 "&"
                                                    :op2 "amp"))
                             :op2 (c4-7 / person
                                        :name (c4-4 / name
                                                    :op1 "You")))
                 :mode imperative
                 :polite +)
      :op2 (c4-1 / follow-02
                 :ARG0 c4-0
                 :mode imperative
                 :polite +))

# ::snt more urderous Muslims. Hunt them like dogs.
# ::tokens ["more", "urderous", "Muslims", ".", "Hunt", "them", "like", "dogs", "."]
# ::lemmas ["more", "urderous", "Muslims", ".", "hunt", "they", "like", "dog", "."]
(c5-2 / multi-sentence
      :snt1 (c5-6 / person
                  :mod (c5-7 / religious-group
                             :name (c5-5 / name
                                         :op1 "Islam"))
                  :ARG1-of (c5-3 / urderous
                                 :quant (c5-8 / more)))
      :snt2 (c5-0 / hunt-01
                  :ARG0 (c5-1 / you)
                  :ARG1 (c5-10 / they)
                  :ARG1-of (c5-4 / resemble-01
                                 :ARG2 (c5-9 / dog))
                  :mode imperative))

# ::snt It's easy to figure out who did this.just look for MOssad.
# ::tokens ["It", "'s", "easy", "to", "figure", "out", "who", "did", "this.just", "look", "for", "MOssad", "."]
# ::lemmas ["it", "be", "easy", "to", "figure", "out", "who", "do", "this.just", "look", "for", "MOssad", "."]
(c6-3 / multi-sentence
      :snt1 (c6-5 / easy-05
                  :ARG1 (c6-2 / figure-out-05
                              :ARG1 (c6-7 / person
                                          :ARG0-of (c6-8 / do-02
                                                         :ARG1 (c6-9 / this)))))
      :snt2 (c6-4 / look-01
                  :ARG0 (c6-1 / you)
                  :ARG1 (c6-10 / person
                               :name (c6-6 / name
                                           :op1 "Madsad"))
                  :mod (c6-0 / just)
                  :mode imperative))

# ::snt it is rong way why press repoter kill
# ::tokens ["it", "is", "rong", "way", "why", "press", "repoter", "kill"]
# ::lemmas ["it", "be", "rong", "way", "why", "press", "repoter", "kill"]
(c8-3 / cause-01
      :ARG0 (c8-7 / amr-unknown)
      :ARG1 (c8-5 / kill-01
                  :ARG0 (c8-1 / person
                              :ARG0-of (c8-2 / represent-01
                                             :ARG1 (c8-6 / press))))
      :manner (c8-0 / way
                    :mod (c8-4 / this)))

# ::snt what about this pic
# ::tokens ["what", "about", "this", "pic"]
# ::lemmas ["what", "about", "this", "pic"]
(c9-2 / amr-unknown
      :topic (c9-0 / pic
                   :mod (c9-1 / this)))

# ::snt oye sharabi number kuttay
# ::tokens ["oye", "sharabi", "number", "kuttay"]
# ::lemmas ["oye", "sharabi", "number", "kuttay"]
(c10-0 / number
       :name (c10-1 / name
                    :op1 "oye"
                    :op2 " sharabi"))

# ::snt prayers for France! USA SUPPORTS FREEDOM OF THE PRESS!
# ::tokens ["prayers", "for", "France", "!", "USA", "SUPPORTS", "FREEDOM", "OF", "THE", "PRESS", "!"]
# ::lemmas ["prayer", "for", "France", "!", "USA", "SUPPORTS", "FREEDOM", "OF", "THE", "PRESS", "!"]
(c11-1 / multi-sentence
       :snt1 (c11-4 / pray-01
                    :beneficiary (c11-6 / country
                                        :name (c11-2 / name
                                                     :op1 "France")))
       :snt2 (c11-7 / supply-01
                    :ARG0 (c11-5 / country
                                 :name (c11-3 / name
                                              :op1 "USA"))
                    :ARG1 (c11-0 / free-04
                                 :ARG1 (c11-8 / press))))

# ::snt It's a deliberate act of coordinated terrorist attack on Paris
# ::tokens ["It", "'s", "a", "deliberate", "act", "of", "coordinated", "terrorist", "attack", "on", "Paris"]
# ::lemmas ["it", "be", "a", "deliberate", "act", "of", "coordinated", "terrorist", "attack", "on", "Paris"]
(c12-6 / act-02
       :ARG1 (c12-0 / attack-01
                    :ARG0 (c12-5 / terrorist)
                    :ARG1 (c12-3 / city
                                 :name (c12-1 / name
                                              :op1 "Paris"))
                    :ARG1-of (c12-2 / coordinate-01))
       :ARG1-of (c12-4 / deliberate-01))

# ::snt pls RT!!!!! Love u
# ::tokens ["pls", "RT", "!", "!", "!", "!", "!", "Love", "u"]
# ::lemmas ["pls", "RT", "!", "!", "!", "!", "!", "love", "u"]
(c13-2 / multi-sentence
       :snt1 (c13-5 / publication
                    :name (c13-4 / name
                                 :op1 "RT")
                    :poss (c13-6 / person))
       :snt2 (c13-1 / love-01
                    :ARG0 (c13-3 / i)
                    :ARG1 (c13-0 / you)))

# ::snt isis is islam
# ::tokens ["isis", "is", "islam"]
# ::lemmas ["isis", "be", "islam"]
(c14-1 / religious-group
       :name (c14-0 / name
                    :op1 "Islam"))

# ::snt It wasn't a minute attack.In Central Paris,and the police didn't even show up.Attackers didn't even have to use a get away driver.
# ::tokens ["It", "was", "n't", "a", "minute", "attack", ".", "In", "Central", "Paris", ",", "and", "the", "police", "did", "n't", "even", "show", "up", ".", "Attackers", "did", "n't", "even", "have", "to", "use", "a", "get", "away", "driver", "."]
# ::lemmas ["it", "be", "not", "a", "minute", "attack", ".", "in", "Central", "Paris", ",", "and", "the", "police", "do", "not", "even", "show", "up", ".", "attacker", "do", "not", "even", "have", "to", "use", "a", "get", "away", "driver", "."]
(c15-0 / multi-sentence
       :snt1 (c15-6 / attack-01
                    :duration (c15-18 / temporal-quantity
                                      :unit (c15-12 / minute)
                                      :quant 1)
                    :polarity -)
       :snt2 (c15-15 / and
                     :op1 (c15-4 / show-up-02
                                 :ARG1 (c15-2 / police)
                                 :mod (c15-9 / even)
                                 :location (c15-7 / local-region
                                                  :name (c15-10 / name
                                                                :op1 "Central"
                                                                :op2 "Paris"))
                                 :polarity -)
                     :op2 (c15-16 / obligate-01
                                  :ARG1 (c15-5 / person
                                               :ARG0-of (c15-11 / attack-01))
                                  :ARG2 (c15-14 / use-01
                                                :ARG0 c15-5
                                                :ARG1 (c15-1 / vehicle
                                                             :ARG0-of (c15-3 / drive-01)
                                                             :purpose (c15-13 / get-05
                                                                              :ARG1 c15-5
                                                                              :ARG2 (c15-17 / away))))
                                  :mod (c15-8 / even)
                                  :polarity -)))

# ::snt very provocative. Unlimited freedom to hurt others. Naive not to expect any retaliation. Mad mad world.
# ::tokens ["very", "provocative", ".", "Unlimited", "freedom", "to", "hurt", "others", ".", "Naive", "not", "to", "expect", "any", "retaliation", ".", "Mad", "mad", "world", "."]
# ::lemmas ["very", "provocative", ".", "unlimited", "freedom", "to", "hurt", "other", ".", "naive", "not", "to", "expect", "any", "retaliation", ".", "mad", "mad", "world", "."]
(c16-3 / multi-sentence
       :snt1 (c16-9 / provoke-01
                    :degree (c16-8 / very))
       :snt2 (c16-2 / free-04
                    :ARG3 (c16-0 / hurt-01
                                 :ARG1 (c16-5 / other))
                    :ARG1-of (c16-4 / limit-01
                                    :polarity -))
       :snt3 (c16-10 / realistic-03
                     :ARG1 (c16-6 / expect-01
                                  :ARG1 (c16-7 / retaliate-01
                                               :mod (c16-12 / any))
                                  :polarity -)
                     :polarity -)
       :snt4 (c16-1 / world
                    :ARG1-of (c16-11 / mad-04)))

# ::snt At least killed in shooting at office of French satirical: Charlie Hebdo
# ::tokens ["At", "least", "killed", "in", "shooting", "at", "office", "of", "French", "satirical", ":", "Charlie", "Hebdo"]
# ::lemmas ["at", "least", "kill", "in", "shooting", "at", "office", "of", "French", "satirical", ":", "Charlie", "Hebdo"]
(c17-8 / kill-01
       :ARG1 (c17-4 / person
                    :mod (c17-10 / at-least))
       :ARG1-of (c17-6 / cause-01
                       :ARG0 (c17-7 / shoot-02
                                    :location (c17-0 / office
                                                     :poss (c17-9 / publication
                                                                  :name (c17-2 / name
                                                                               :op1 "Charlie"
                                                                               :op2 "Ch Hebdo")
                                                                  :mod (c17-1 / satire)
                                                                  :mod (c17-5 / country
                                                                              :name (c17-3 / name
                                                                                           :op1 "France")))))))

# ::snt Call to register for this site and gain new job
# ::tokens ["Call", "to", "register", "for", "this", "site", "and", "gain", "new", "job"]
# ::lemmas ["call", "to", "register", "for", "this", "site", "and", "gain", "new", "job"]
(c18-4 / call-02
       :ARG0 (c18-1 / you)
       :purpose (c18-8 / and
                       :op1 (c18-3 / register-02
                                   :ARG0 c18-1
                                   :ARG2 (c18-6 / site
                                                :mod (c18-7 / this)))
                       :op2 (c18-5 / gain-02
                                   :ARG0 c18-1
                                   :ARG1 (c18-0 / job
                                                :ARG1-of (c18-2 / new-01))))
       :mode imperative)
