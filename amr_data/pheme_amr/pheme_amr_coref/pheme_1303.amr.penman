# ::snt when you first became aware of the situation you tweeted that prices will increase.
# ::tokens ["when", "you", "first", "became", "aware", "of", "the", "situation", "you", "tweeted", "that", "prices", "will", "increase", "."]
# ::lemmas ["when", "you", "first", "become", "aware", "of", "the", "situation", "you", "tweet", "that", "price", "will", "increase", "."]
(c1-6 / tweet-01
      :ARG0 (c1-0 / you)
      :ARG1 (c1-2 / increase-01
                  :ARG1 (c1-3 / price-01))
      :time (c1-4 / realize-01
                  :ARG0 c1-0
                  :ARG1 (c1-5 / situation)
                  :ord (c1-1 / ordinal-entity
                             :value 1)))

# ::snt but you do Uber for trying to increase drivers. My work here is done your honour.
# ::tokens ["but", "you", "do", "Uber", "for", "trying", "to", "increase", "drivers", ".", "My", "work", "here", "is", "done", "your", "honour", "."]
# ::lemmas ["but", "you", "do", "Uber", "for", "try", "to", "increase", "driver", ".", "my", "work", "here", "be", "do", "your", "honour", "."]
(c2-4 / multi-sentence
      :snt1 (c2-9 / contrast-01
                  :ARG2 (c2-8 / do-02
                              :ARG0 (c2-1 / you)
                              :ARG1 (c2-10 / company
                                           :name (c2-6 / name
                                                       :op1 " Uber"))
                              :ARG1-of (c2-13 / cause-01
                                              :ARG0 (c2-14 / try-01
                                                           :ARG0 c2-1
                                                           :ARG1 (c2-5 / increase-01
                                                                       :ARG0 c2-1
                                                                       :ARG1 (c2-7 / person
                                                                                   :ARG0-of (c2-2 / drive-01)))))))
      :snt2 (c2-16 / do-02
                   :ARG0 (c2-11 / i)
                   :ARG1 (c2-3 / work-01
                               :ARG0 c2-11
                               :location (c2-0 / here))
                   :ARG2 (c2-15 / honor-01
                                :ARG1 (c2-12 / you))))

# ::snt cut the BS they wanted to surge price now back tracking
# ::tokens ["cut", "the", "BS", "they", "wanted", "to", "surge", "price", "now", "back", "tracking"]
# ::lemmas ["cut", "the", "BS", "they", "want", "to", "surge", "price", "now", "back", "tracking"]
(c3-5 / cut-03
      :ARG0 (c3-1 / you)
      :ARG1 (c3-2 / bullshit-01
                  :ARG1 (c3-0 / want-01
                              :ARG0 (c3-9 / they)
                              :ARG1 (c3-8 / surge-01
                                          :ARG0 c3-9
                                          :ARG1 (c3-4 / price-01))))
      :time (c3-3 / now)
      :manner (c3-6 / back-02
                    :ARG1 (c3-7 / track-01))
      :mode imperative)

# ::snt Uber is covering the cost of all rides, Uber is still paying drivers higher fares to encourage them to pickup riders.
# ::tokens ["Uber", "is", "covering", "the", "cost", "of", "all", "rides", ",", "Uber", "is", "still", "paying", "drivers", "higher", "fares", "to", "encourage", "them", "to", "pickup", "riders", "."]
# ::lemmas ["Uber", "be", "cover", "the", "cost", "of", "all", "ride", ",", "Uber", "be", "still", "pay", "driver", "high", "fare", "to", "encourage", "they", "to", "pickup", "rider", "."]
(c4-17 / and
       :op1 (c4-11 / cover-01
                   :ARG0 (c4-10 / company
                                :name (c4-8 / name
                                            :op1 "Uber"))
                   :ARG1 (c4-15 / cost-01
                                :ARG1 (c4-12 / ride-01
                                             :mod (c4-6 / all))))
       :op2 (c4-9 / pay-01
                  :ARG0 c4-10
                  :ARG1 (c4-1 / fare
                              :ARG1-of (c4-0 / have-degree-91
                                             :ARG2 (c4-2 / high-02)
                                             :ARG3 (c4-3 / more)))
                  :ARG2 (c4-16 / person
                               :ARG0-of (c4-13 / drive-01))
                  :mod (c4-14 / still)
                  :purpose (c4-5 / encourage-01
                                 :ARG0 c4-10
                                 :ARG1 c4-16
                                 :ARG2 (c4-7 / ride-01
                                             :ARG0 c4-16
                                             :mod (c4-4 / pickup)))))

# ::snt Uber trips out of the CBD today are free to help Sydneysiders get home safely. See
# ::tokens ["Uber", "trips", "out", "of", "the", "CBD", "today", "are", "free", "to", "help", "Sydneysiders", "get", "home", "safely", ".", "See"]
# ::lemmas ["uber", "trip", "out", "of", "the", "CBD", "today", "be", "free", "to", "help", "sydneysider", "get", "home", "safely", ".", "see"]
(c5-2 / multi-sentence
      :snt1 (c5-1 / free-03
                  :ARG1 (c5-14 / trip-03
                               :ARG0 (c5-9 / company
                                           :name (c5-5 / name
                                                       :op1 "Uber"))
                               :time (c5-12 / today)
                               :direction (c5-3 / out-of
                                                :op1 (c5-8 / city-district
                                                           :name (c5-6 / name
                                                                       :op1 "CBD"))))
                  :purpose (c5-0 / help-01
                                 :ARG0 c5-14
                                 :ARG1 (c5-10 / get-05
                                              :ARG1 (c5-7 / person
                                                          :mod c5-8
                                                          :name (c5-11 / name
                                                                       :op1 "Sydney")))
                                 :ARG2 (c5-15 / home)
                                 :ARG1-of (c5-13 / safe-01))
                  :ARG2 c5-7)
      :snt2 (c5-4 / see-01))

# ::snt didn't make it very clear in the beginning.
# ::tokens ["did", "n't", "make", "it", "very", "clear", "in", "the", "beginning", "."]
# ::lemmas ["do", "not", "make", "it", "very", "clear", "in", "the", "beginning", "."]
(c7-0 / make-02
      :ARG1 (c7-4 / clear-06
                  :ARG1 (c7-2 / it)
                  :degree (c7-3 / very))
      :time (c7-1 / begin-01)
      :polarity -)

# ::snt so our GOVERNMENT is making money from people trying to get out of a hostage situation but you don't shout and yell at them...
# ::tokens ["so", "our", "GOVERNMENT", "is", "making", "money", "from", "people", "trying", "to", "get", "out", "of", "a", "hostage", "situation", "but", "you", "do", "n't", "shout", "and", "yell", "at", "them", "..."]
# ::lemmas ["so", "our", "government", "be", "make", "money", "from", "people", "try", "to", "get", "out", "of", "a", "hostage", "situation", "but", "you", "do", "not", "shout", "and", "yell", "at", "they", "..."]
(c8-6 / infer-01
      :ARG1 (c8-3 / make-05
                  :ARG0 (c8-11 / government-organization
                               :ARG0-of (c8-9 / govern-01)
                               :poss (c8-1 / we))
                  :ARG1 (c8-8 / money)
                  :ARG2 (c8-10 / person
                               :ARG0-of (c8-14 / try-01
                                               :ARG1 (c8-7 / get-05
                                                           :ARG1 c8-10
                                                           :ARG2 (c8-4 / out-06
                                                                       :ARG1 c8-10
                                                                       :ARG2 (c8-13 / situation
                                                                                    :mod (c8-0 / hostage))))))
                  :concession-of (c8-15 / and
                                        :op1 (c8-5 / shout-01
                                                   :ARG0 (c8-2 / you)
                                                   :ARG2 c8-10
                                                   :polarity -)
                                        :op2 (c8-12 / yell-01
                                                    :ARG0 c8-2
                                                    :ARG2 c8-10
                                                    :polarity -))))

# ::snt Yeah I think so. They're getting $100+, riders aren't wearing diff. Good gesture. Poor message transmission
# ::tokens ["Yeah", "I", "think", "so", ".", "They", "'re", "getting", "$", "100", "+", ",", "riders", "are", "n't", "wearing", "diff", ".", "Good", "gesture", ".", "Poor", "message", "transmission"]
# ::lemmas ["yeah", "i", "think", "so", ".", "they", "be", "get", "$", "100", "+", ",", "rider", "be", "not", "wear", "diff", ".", "good", "gesture", ".", "poor", "message", "transmission"]
(c9-2 / multi-sentence
      :snt1 (c9-13 / think-01
                   :ARG0 (c9-4 / i)
                   :ARG1 (c9-12 / so)
                   :mod (c9-0 / yeah))
      :snt2 (c9-1 / wear-01
                  :ARG0 (c9-6 / person
                              :ARG0-of (c9-7 / ride-01))
                  :ARG1 (c9-14 / product
                               :name (c9-5 / name
                                           :op1 "Diff"))
                  :polarity -)
      :snt3 (c9-9 / gesture-01
                  :ARG1-of (c9-8 / good-02))
      :snt4 (c9-11 / transmit-01
                   :ARG1 (c9-10 / message)
                   :mod (c9-3 / poor)))

# ::snt Faster backflip than Tony Abbott!
# ::tokens ["Faster", "backflip", "than", "Tony", "Abbott", "!"]
# ::lemmas ["fast", "backflip", "than", "Tony", "Abbott", "!"]
(c10-0 / have-degree-91
       :ARG1 (c10-3 / backflip)
       :ARG2 (c10-1 / fast-02)
       :ARG3 (c10-2 / more)
       :ARG4 (c10-5 / person
                    :name (c10-4 / name
                                 :op1 "Tony"
                                 :op2 "Abbott"))
       :mode expressive)

# ::snt . That initial tweet was on point. Their customers, and the outraged, should have been smarter.
# ::tokens [".", "That", "initial", "tweet", "was", "on", "point", ".", "Their", "customers", ",", "and", "the", "outraged", ",", "should", "have", "been", "smarter", "."]
# ::lemmas [".", "that", "initial", "tweet", "be", "on", "point", ".", "their", "customer", ",", "and", "the", "outraged", ",", "should", "have", "be", "smart", "."]
(c11-2 / multi-sentence
       :snt1 (c11-3 / on-point
                    :domain (c11-12 / tweet-01
                                    :mod (c11-4 / initial)
                                    :mod (c11-10 / that)))
       :snt2 (c11-7 / recommend-01
                    :ARG1 (c11-11 / smart-06
                                  :ARG1 (c11-13 / and
                                                :op1 (c11-8 / customer
                                                            :poss (c11-5 / they))
                                                :op2 (c11-6 / person
                                                            :ARG1-of (c11-1 / outrage-01)))
                                  :ARG2-of (c11-0 / have-degree-91
                                                  :ARG1 c11-13
                                                  :ARG3 (c11-9 / more)))))

# ::snt Thanks for the free ride home today. I felt very safe and got home efficiently.
# ::tokens ["Thanks", "for", "the", "free", "ride", "home", "today", ".", "I", "felt", "very", "safe", "and", "got", "home", "efficiently", "."]
# ::lemmas ["thank", "for", "the", "free", "ride", "home", "today", ".", "i", "feel", "very", "safe", "and", "get", "home", "efficiently", "."]
(c12-3 / multi-sentence
       :snt1 (c12-13 / thank-01
                     :ARG0 (c12-5 / i)
                     :ARG1 (c12-1 / you)
                     :ARG2 (c12-8 / ride-01
                                  :ARG0 c12-1
                                  :ARG1 (c12-0 / home)
                                  :ARG1-of (c12-2 / free-03)
                                  :time (c12-11 / today)))
       :snt2 (c12-14 / and
                     :op1 (c12-6 / feel-01
                                 :ARG0 (c12-9 / i)
                                 :ARG1 (c12-12 / safe-01
                                               :ARG1 c12-9
                                               :degree (c12-7 / very)))
                     :op2 (c12-10 / get-05
                                  :ARG1 c12-9
                                  :ARG2 c12-0
                                  :manner (c12-4 / efficient-01))))

# ::snt who's paying then?
# ::tokens ["who", "'s", "paying", "then", "?"]
# ::lemmas ["who", "be", "pay", "then", "?"]
(c13-0 / pay-01
       :ARG0 (c13-2 / amr-unknown)
       :time (c13-1 / then))

# ::snt for sure
# ::tokens ["for", "sure"]
# ::lemmas ["for", "sure"]
(c14-0 / sure-02)

# ::snt What is the wait time for a ride out of the Sydney CBD?
# ::tokens ["What", "is", "the", "wait", "time", "for", "a", "ride", "out", "of", "the", "Sydney", "CBD", "?"]
# ::lemmas ["what", "be", "the", "wait", "time", "for", "a", "ride", "out", "of", "the", "Sydney", "CBD", "?"]
(c15-0 / wait-01
       :ARG2 (c15-3 / ride-01
                    :ARG1 (c15-1 / out-06
                                 :ARG2 (c15-4 / city-district
                                              :name (c15-2 / name
                                                           :op1 "Sydney"
                                                           :op2 "CBD"))))
       :ARG3 (c15-5 / amr-unknown))

# ::snt hikes prices during the . How is that helping? Giving away free rides would help.
# ::tokens ["hikes", "prices", "during", "the", ".", "How", "is", "that", "helping", "?", "Giving", "away", "free", "rides", "would", "help", "."]
# ::lemmas ["hike", "price", "during", "the", ".", "how", "be", "that", "help", "?", "give", "away", "free", "ride", "would", "help", "."]
(c16-2 / multi-sentence
       :snt1 (c16-5 / dislike-01
                    :ARG1 (c16-4 / price-01)
                    :time (c16-3 / event))
       :snt2 (c16-0 / help-01
                    :ARG0 (c16-7 / give-away-02
                                 :ARG1 (c16-6 / ride-01
                                              :ARG1-of (c16-1 / free-03)))
                    :manner (c16-8 / amr-unknown)))

# ::snt what does this mean?
# ::tokens ["what", "does", "this", "mean", "?"]
# ::lemmas ["what", "do", "this", "mean", "?"]
(c17-1 / mean-01
       :ARG1 (c17-0 / this)
       :ARG2 (c17-2 / amr-unknown))

# ::snt This is a ubers drivers forum, not sponsored by uber. Read what it's like in a mature uber market.
# ::tokens ["This", "is", "a", "ubers", "drivers", "forum", ",", "not", "sponsored", "by", "uber", ".", "Read", "what", "it", "'s", "like", "in", "a", "mature", "uber", "market", "."]
# ::lemmas ["this", "be", "a", "uber", "driver", "forum", ",", "not", "sponsor", "by", "uber", ".", "read", "what", "it", "be", "like", "in", "a", "mature", "uber", "market", "."]
(c18-2 / multi-sentence
       :snt1 (c18-1 / forum
                    :domain (c18-13 / this)
                    :topic (c18-6 / person
                                  :ARG0-of (c18-7 / drive-01)
                                  :mod (c18-8 / company
                                              :name (c18-5 / name
                                                           :op1 "United"
                                                           :op2 "Kingdom")))
                    :ARG1-of (c18-12 / sponsor-01
                                     :ARG0 c18-8
                                     :polarity -))
       :snt2 (c18-9 / read-01
                    :ARG0 (c18-0 / you)
                    :ARG1 (c18-11 / thing
                                  :ARG2-of (c18-4 / resemble-01
                                                  :ARG1 (c18-10 / market
                                                                :mod c18-8
                                                                :ARG1-of (c18-3 / mature-02))))
                    :mode imperative))

# ::snt wait, does 'higher rate' mean what is paying drivers?
# ::tokens ["wait", ",", "does", "'", "higher", "rate", "'", "mean", "what", "is", "paying", "drivers", "?"]
# ::lemmas ["wait", ",", "do", "'", "high", "rate", "'", "mean", "what", "be", "pay", "driver", "?"]
(c19-4 / multi-sentence
       :snt1 (c19-1 / wait-01
                    :ARG1 (c19-2 / you)
                    :mode imperative)
       :snt2 (c19-5 / mean-01
                    :ARG1 (c19-6 / rate
                                 :ARG1-of (c19-0 / have-degree-91
                                                 :ARG2 (c19-11 / high-02
                                                               :ARG1 c19-6)
                                                 :ARG3 (c19-3 / more)))
                    :ARG2 (c19-9 / amr-unknown
                                 :ARG0-of (c19-7 / pay-01
                                                 :ARG2 (c19-10 / person
                                                               :ARG0-of (c19-8 / drive-01))))))

# ::snt don't know if your being sarcastic or going of topic
# ::tokens ["do", "n't", "know", "if", "your", "being", "sarcastic", "or", "going", "of", "topic"]
# ::lemmas ["do", "not", "know", "if", "your", "be", "sarcastic", "or", "go", "of", "topic"]
(c20-6 / know-01
       :ARG0 (c20-2 / i)
       :ARG1 (c20-1 / or
                    :op1 (c20-4 / sarcasm
                                :domain (c20-0 / you))
                    :op2 (c20-3 / go-06
                                :ARG0 c20-0
                                :ARG2 (c20-5 / topic)))
       :polarity -)

# ::snt Uber trips out of the CBD today are free to help Sydneysiders get home safely. See
# ::tokens ["Uber", "trips", "out", "of", "the", "CBD", "today", "are", "free", "to", "help", "Sydneysiders", "get", "home", "safely", ".", "See"]
# ::lemmas ["uber", "trip", "out", "of", "the", "CBD", "today", "be", "free", "to", "help", "sydneysider", "get", "home", "safely", ".", "see"]
(c21-2 / multi-sentence
       :snt1 (c21-1 / free-03
                    :ARG1 (c21-14 / trip-03
                                  :ARG0 (c21-9 / company
                                               :name (c21-5 / name
                                                            :op1 "Uber"))
                                  :time (c21-12 / today)
                                  :direction (c21-3 / out-of
                                                    :op1 (c21-8 / city-district
                                                                :name (c21-6 / name
                                                                             :op1 "CBD"))))
                    :purpose (c21-0 / help-01
                                    :ARG0 c21-14
                                    :ARG1 (c21-10 / get-05
                                                  :ARG1 (c21-7 / person
                                                               :mod c21-8
                                                               :name (c21-11 / name
                                                                             :op1 "Sydney")))
                                    :ARG2 (c21-15 / home)
                                    :ARG1-of (c21-13 / safe-01))
                    :ARG2 c21-7)
       :snt2 (c21-4 / see-01))

# ::snt Uber trips out of the CBD today are free to help Sydneysiders get home safely. See
# ::tokens ["Uber", "trips", "out", "of", "the", "CBD", "today", "are", "free", "to", "help", "Sydneysiders", "get", "home", "safely", ".", "See"]
# ::lemmas ["uber", "trip", "out", "of", "the", "CBD", "today", "be", "free", "to", "help", "sydneysider", "get", "home", "safely", ".", "see"]
(c22-2 / multi-sentence
       :snt1 (c22-1 / free-03
                    :ARG1 (c22-14 / trip-03
                                  :ARG0 (c22-9 / company
                                               :name (c22-5 / name
                                                            :op1 "Uber"))
                                  :time (c22-12 / today)
                                  :direction (c22-3 / out-of
                                                    :op1 (c22-8 / city-district
                                                                :name (c22-6 / name
                                                                             :op1 "CBD"))))
                    :purpose (c22-0 / help-01
                                    :ARG0 c22-14
                                    :ARG1 (c22-10 / get-05
                                                  :ARG1 (c22-7 / person
                                                               :mod c22-8
                                                               :name (c22-11 / name
                                                                             :op1 "Sydney")))
                                    :ARG2 (c22-15 / home)
                                    :ARG1-of (c22-13 / safe-01))
                    :ARG2 c22-7)
       :snt2 (c22-4 / see-01))

# ::snt nope. I respect them for making the rides free, I can also see how they wanted to get more drivers in
# ::tokens ["nope", ".", "I", "respect", "them", "for", "making", "the", "rides", "free", ",", "I", "can", "also", "see", "how", "they", "wanted", "to", "get", "more", "drivers", "in"]
# ::lemmas ["nope", ".", "i", "respect", "they", "for", "make", "the", "ride", "free", ",", "i", "can", "also", "see", "how", "they", "want", "to", "get", "more", "driver", "in"]
(c23-0 / multi-sentence
       :snt1 (c23-9 / nope)
       :snt2 (c23-16 / contrast-01
                     :ARG1 (c23-11 / respect-01
                                   :ARG0 (c23-14 / i)
                                   :ARG1 (c23-18 / they)
                                   :ARG2 (c23-10 / make-02
                                                 :ARG0 c23-18
                                                 :ARG1 (c23-7 / free-03
                                                              :ARG1 (c23-1 / ride))))
                     :ARG2 (c23-2 / possible-01
                                  :ARG1 (c23-4 / see-01
                                               :ARG0 (c23-15 / i)
                                               :ARG1 (c23-13 / want-01
                                                             :ARG0 (c23-17 / they)
                                                             :ARG1 (c23-12 / get-05
                                                                           :ARG0 c23-17
                                                                           :ARG1 (c23-5 / person
                                                                                        :ARG0-of (c23-3 / drive-01)
                                                                                        :quant (c23-8 / more))))
                                               :mod (c23-6 / also)))))

# ::snt What do you pay your drivers?
# ::tokens ["What", "do", "you", "pay", "your", "drivers", "?"]
# ::lemmas ["what", "do", "you", "pay", "your", "driver", "?"]
(c25-1 / pay-01
       :ARG0 (c25-0 / you)
       :ARG1 (c25-4 / amr-unknown)
       :ARG2 (c25-3 / person
                    :ARG0-of (c25-2 / drive-01
                                    :ARG1 c25-0)))

# ::snt reports around the world flooding in of your % fare increase in response to a siege situation, smart.
# ::tokens ["reports", "around", "the", "world", "flooding", "in", "of", "your", "%", "fare", "increase", "in", "response", "to", "a", "siege", "situation", ",", "smart", "."]
# ::lemmas ["report", "around", "the", "world", "flooding", "in", "of", "your", "%", "fare", "increase", "in", "response", "to", "a", "siege", "situation", ",", "smart", "."]
(c26-11 / say-01
        :ARG1 (c26-10 / report-01
                      :ARG1 (c26-2 / flood-01
                                   :ARG1 (c26-12 / around
                                                 :op1 (c26-0 / world))
                                   :ARG2 (c26-6 / increase-01
                                                :ARG1 (c26-7 / fare
                                                             :poss (c26-1 / you))
                                                :ARG2 (c26-9 / percentage))
                                   :ARG2-of (c26-8 / respond-01
                                                   :ARG1 (c26-5 / situation
                                                                :mod (c26-3 / siege-01))))
                      :ARG1-of (c26-4 / smart-06))
        :ARG2 c26-1)

# ::snt . Every can take a M40 $30 discount voucher. But then isn't public transport.
# ::tokens [".", "Every", "can", "take", "a", "M40", "$", "30", "discount", "voucher", ".", "But", "then", "is", "n't", "public", "transport", "."]
# ::lemmas [".", "every", "can", "take", "a", "M40", "$", "30", "discount", "voucher", ".", "but", "then", "be", "not", "public", "transport", "."]
(c27-1 / multi-sentence
       :snt1 (c27-4 / possible-01
                    :ARG1 (c27-10 / take-01
                                  :ARG0 (c27-2 / every)
                                  :ARG1 (c27-3 / voucher
                                               :mod (c27-5 / discount-01
                                                           :ARG3 (c27-6 / monetary-quantity
                                                                        :unit (c27-0 / dollar)
                                                                        :quant 30)))))
       :snt2 (c27-7 / contrast-01
                    :ARG2 (c27-9 / transport
                                 :ARG1-of (c27-11 / public-02)
                                 :domain (c27-8 / then)
                                 :polarity -)))

# ::snt Uber is covering the cost of all rides.
# ::tokens ["Uber", "is", "covering", "the", "cost", "of", "all", "rides", "."]
# ::lemmas ["Uber", "be", "cover", "the", "cost", "of", "all", "ride", "."]
(c28-3 / cover-01
       :ARG0 (c28-2 / company
                    :name (c28-0 / name
                                 :op1 "Uber"))
       :ARG1 (c28-4 / cost-01
                    :ARG1 (c28-1 / ride-01
                                 :mod (c28-5 / all))))

# ::snt Uber is covering the cost of all rides, Uber is still paying drivers higher fares to encourage them to pickup riders.
# ::tokens ["Uber", "is", "covering", "the", "cost", "of", "all", "rides", ",", "Uber", "is", "still", "paying", "drivers", "higher", "fares", "to", "encourage", "them", "to", "pickup", "riders", "."]
# ::lemmas ["Uber", "be", "cover", "the", "cost", "of", "all", "ride", ",", "Uber", "be", "still", "pay", "driver", "high", "fare", "to", "encourage", "they", "to", "pickup", "rider", "."]
(c29-17 / and
        :op1 (c29-11 / cover-01
                     :ARG0 (c29-10 / company
                                   :name (c29-8 / name
                                                :op1 "Uber"))
                     :ARG1 (c29-15 / cost-01
                                   :ARG1 (c29-12 / ride-01
                                                 :mod (c29-6 / all))))
        :op2 (c29-9 / pay-01
                    :ARG0 c29-10
                    :ARG1 (c29-1 / fare
                                 :ARG1-of (c29-0 / have-degree-91
                                                 :ARG2 (c29-2 / high-02)
                                                 :ARG3 (c29-3 / more)))
                    :ARG2 (c29-16 / person
                                  :ARG0-of (c29-13 / drive-01))
                    :mod (c29-14 / still)
                    :purpose (c29-5 / encourage-01
                                    :ARG0 c29-10
                                    :ARG1 c29-16
                                    :ARG2 (c29-7 / ride-01
                                                 :ARG0 c29-16
                                                 :mod (c29-4 / pickup)))))

# ::snt The rides are free. will be paying the drivers the increased rate out of their own pocket.
# ::tokens ["The", "rides", "are", "free", ".", "will", "be", "paying", "the", "drivers", "the", "increased", "rate", "out", "of", "their", "own", "pocket", "."]
# ::lemmas ["the", "ride", "be", "free", ".", "will", "be", "pay", "the", "driver", "the", "increase", "rate", "out", "of", "their", "own", "pocket", "."]
(c30-1 / multi-sentence
       :snt1 (c30-0 / free-03
                    :ARG1 (c30-7 / ride-01))
       :snt2 (c30-6 / pay-01
                    :ARG1 (c30-5 / rate
                                 :ARG1-of (c30-4 / increase-01))
                    :ARG2 (c30-9 / person
                                 :ARG0-of (c30-8 / drive-01))
                    :manner (c30-3 / out-of
                                   :op1 (c30-2 / pocket
                                               :poss c30-9))))

# ::snt Being literate in economics is out of favor these days. Bad for politics.
# ::tokens ["Being", "literate", "in", "economics", "is", "out", "of", "favor", "these", "days", ".", "Bad", "for", "politics", "."]
# ::lemmas ["be", "literate", "in", "economics", "be", "out", "of", "favor", "these", "days", ".", "bad", "for", "politic", "."]
(c31-1 / multi-sentence
       :snt1 (c31-0 / favor-01
                    :ARG1 (c31-2 / literate
                                 :topic (c31-4 / economics)
                                 :domain (c31-5 / person))
                    :time (c31-6 / day
                                 :mod (c31-7 / this))
                    :polarity -)
       :snt2 (c31-3 / bad-04
                    :ARG2 (c31-8 / politics)))

# ::snt Thanks
# ::tokens ["Thanks"]
# ::lemmas ["thank"]
(c32-1 / thank-01
       :ARG0 (c32-2 / i)
       :ARG1 (c32-0 / you))

# ::snt Listen up dum-dum. They ARE paying the drivers more. Reading is a skill.
# ::tokens ["Listen", "up", "dum", "-", "dum", ".", "They", "ARE", "paying", "the", "drivers", "more", ".", "Reading", "is", "a", "skill", "."]
# ::lemmas ["listen", "up", "dum", "-", "dum", ".", "they", "be", "pay", "the", "driver", "more", ".", "reading", "be", "a", "skill", "."]
(c33-3 / multi-sentence
       :snt1 (c33-2 / listen-up-02
                    :ARG0 (c33-0 / you)
                    :ARG1 (c33-5 / dum-dum)
                    :mode imperative)
       :snt2 (c33-4 / pay-01
                    :ARG0 (c33-9 / they)
                    :ARG1 (c33-6 / more)
                    :ARG2 (c33-10 / person
                                  :ARG0-of (c33-1 / drive-01)))
       :snt3 (c33-8 / skill
                    :domain (c33-7 / read-01)))

# ::snt Ah that makes sense then thanks
# ::tokens ["Ah", "that", "makes", "sense", "then", "thanks"]
# ::lemmas ["ah", "that", "make", "sense", "then", "thank"]
(c34-3 / sense-02
       :ARG1 (c34-4 / that)
       :mod (c34-5 / ah
                   :mode expressive)
       :ARG2-of (c34-2 / thank-01
                       :ARG0 (c34-1 / i)
                       :ARG1 (c34-0 / you)))

# ::snt Only after backlash. Kinda like getting your hand caught in the cookie jar. ?
# ::tokens ["Only", "after", "backlash", ".", "Kinda", "like", "getting", "your", "hand", "caught", "in", "the", "cookie", "jar", ".", "?"]
# ::lemmas ["only", "after", "backlash", ".", "Kinda", "like", "get", "your", "hand", "catch", "in", "the", "cookie", "jar", ".", "?"]
(c35-3 / multi-sentence
       :snt1 (c35-12 / after
                     :op1 (c35-4 / backlash-01)
                     :mod (c35-5 / only))
       :snt2 (c35-7 / resemble-01
                    :ARG2 (c35-9 / get-04
                                 :ARG1 (c35-8 / catch-01
                                              :ARG1 (c35-0 / hand
                                                           :part-of (c35-1 / you))
                                              :ARG2 (c35-10 / be-located-at-91
                                                            :ARG1 c35-0
                                                            :ARG2 (c35-2 / jar
                                                                         :mod (c35-11 / cookie)))))
                    :ARG1-of (c35-6 / request-confirmation-91)))

# ::snt how about you fuck off back to your corner of the internet where your opinion matters and I'll do the same.
# ::tokens ["how", "about", "you", "fuck", "off", "back", "to", "your", "corner", "of", "the", "internet", "where", "your", "opinion", "matters", "and", "I", "'ll", "do", "the", "same", "."]
# ::lemmas ["how", "about", "you", "fuck", "off", "back", "to", "your", "corner", "of", "the", "internet", "where", "your", "opinion", "matter", "and", "i", "'ll", "do", "the", "same", "."]
(c36-12 / and
        :op1 (c36-1 / fuck-off-03
                    :ARG0 (c36-0 / you)
                    :location (c36-8 / corner
                                     :poss c36-0
                                     :mod (c36-6 / internet)
                                     :location-of (c36-2 / matter-01
                                                         :ARG1 (c36-11 / thing
                                                                       :ARG1-of (c36-4 / opine-01
                                                                                       :ARG0 c36-0))))
                    :mod (c36-3 / off))
        :op2 (c36-7 / do-02
                    :ARG0 (c36-9 / i)
                    :ARG1 c36-11
                    :ARG1-of (c36-10 / same-01
                                     :ARG2 c36-1))
        :mod (c36-5 / amr-unknown))

# ::snt Well that's not true. First, you tweeted an explanation about why you were gouging customers.
# ::tokens ["Well", "that", "'s", "not", "true", ".", "First", ",", "you", "tweeted", "an", "explanation", "about", "why", "you", "were", "gouging", "customers", "."]
# ::lemmas ["well", "that", "be", "not", "true", ".", "First", ",", "you", "tweet", "an", "explanation", "about", "why", "you", "be", "gouge", "customer", "."]
(c37-2 / multi-sentence
       :snt1 (c37-11 / true-01
                     :ARG1 (c37-10 / that)
                     :mod (c37-0 / well)
                     :polarity -)
       :snt2 (c37-6 / tweet-02
                    :ARG0 (c37-1 / you)
                    :ARG1 (c37-4 / explain-01
                                 :ARG0 c37-1
                                 :ARG1 (c37-5 / thing
                                              :ARG0-of (c37-8 / cause-01
                                                              :ARG1 (c37-9 / gouge-02
                                                                           :ARG0 c37-1
                                                                           :ARG1 (c37-7 / customer)))))
                    :ord (c37-3 / ordinal-entity
                                :value 1)))

# ::snt It is an illegal bloody service. Why don't you thank regular taxi drivers?Encouraging theft are we?
# ::tokens ["It", "is", "an", "illegal", "bloody", "service", ".", "Why", "do", "n't", "you", "thank", "regular", "taxi", "drivers?Encouraging", "theft", "are", "we", "?"]
# ::lemmas ["it", "be", "an", "illegal", "bloody", "service", ".", "why", "do", "not", "you", "thank", "regular", "taxi", "drivers?encouraging", "theft", "be", "we", "?"]
(c38-3 / multi-sentence
       :snt1 (c38-14 / service
                     :mod (c38-4 / bloody)
                     :ARG1-of (c38-2 / legal-02
                                     :polarity -)
                     :domain (c38-7 / it))
       :snt2 (c38-11 / cause-01
                     :ARG0 (c38-16 / amr-unknown)
                     :ARG1 (c38-15 / thank-01
                                   :ARG0 (c38-0 / you)
                                   :ARG1 (c38-9 / person
                                                :ARG0-of (c38-10 / drive-01
                                                                 :ARG1 (c38-13 / taxi))
                                                :ARG1-of (c38-12 / regular-03))
                                   :polarity -))
       :snt3 (c38-5 / encourage-01
                    :ARG0 (c38-1 / we)
                    :ARG2 (c38-6 / steal-01)
                    :ARG1-of (c38-8 / request-confirmation-91)))

# ::snt I see your point. Maybe should make transport free from the CBD today.
# ::tokens ["I", "see", "your", "point", ".", "Maybe", "should", "make", "transport", "free", "from", "the", "CBD", "today", "."]
# ::lemmas ["i", "see", "your", "point", ".", "maybe", "should", "make", "transport", "free", "from", "the", "CBD", "today", "."]
(c39-2 / multi-sentence
       :snt1 (c39-10 / see-01
                     :ARG0 (c39-3 / i)
                     :ARG1 (c39-5 / point-04
                                  :ARG0 (c39-0 / you)))
       :snt2 (c39-12 / possible-01
                     :ARG1 (c39-6 / recommend-01
                                  :ARG1 (c39-7 / make-02
                                               :ARG1 (c39-1 / free-03
                                                            :ARG1 (c39-11 / transport-01)
                                                            :source (c39-8 / city-district
                                                                           :name (c39-4 / name
                                                                                        :op1 "CBD")))
                                               :time (c39-9 / today)))))

# ::snt Uber is covering the cost of all rides, Uber is still paying drivers higher fares to encourage them to do pickups
# ::tokens ["Uber", "is", "covering", "the", "cost", "of", "all", "rides", ",", "Uber", "is", "still", "paying", "drivers", "higher", "fares", "to", "encourage", "them", "to", "do", "pickups"]
# ::lemmas ["Uber", "be", "cover", "the", "cost", "of", "all", "ride", ",", "Uber", "be", "still", "pay", "driver", "high", "fare", "to", "encourage", "they", "to", "do", "pickup"]
(c40-17 / and
        :op1 (c40-11 / cover-01
                     :ARG0 (c40-10 / company
                                   :name (c40-8 / name
                                                :op1 "Uber"))
                     :ARG1 (c40-15 / cost-01
                                   :ARG1 (c40-12 / ride-01
                                                 :mod (c40-7 / all))))
        :op2 (c40-9 / pay-01
                    :ARG0 c40-10
                    :ARG1 (c40-2 / fare
                                 :ARG1-of (c40-0 / have-degree-91
                                                 :ARG2 (c40-3 / high-02)
                                                 :ARG3 (c40-4 / more)))
                    :ARG2 (c40-16 / person
                                  :ARG0-of (c40-13 / drive-01))
                    :mod (c40-14 / still)
                    :purpose (c40-6 / encourage-01
                                    :ARG0 c40-10
                                    :ARG1 c40-16
                                    :ARG2 (c40-1 / do-02
                                                 :ARG0 c40-16
                                                 :ARG1 (c40-5 / pickup)))))

# ::snt U don't pay extra for PT at desperate . My apologies if I got the issue confused. I agree PT for everyone regardless of class.
# ::tokens ["U", "do", "n't", "pay", "extra", "for", "PT", "at", "desperate", ".", "My", "apologies", "if", "I", "got", "the", "issue", "confused", ".", "I", "agree", "PT", "for", "everyone", "regardless", "of", "class", "."]
# ::lemmas ["u", "do", "not", "pay", "extra", "for", "PT", "at", "desperate", ".", "my", "apology", "if", "i", "get", "the", "issue", "confuse", ".", "i", "agree", "PT", "for", "everyone", "regardless", "of", "class", "."]
(c41-1 / multi-sentence
       :snt1 (c41-7 / pay-01
                    :ARG0 (c41-0 / you)
                    :ARG1 (c41-3 / extra)
                    :ARG3 (c41-14 / thing
                                  :name (c41-6 / name
                                               :op1 "PT"))
                    :ARG1-of (c41-8 / desperate-02)
                    :polarity -)
       :snt2 (c41-15 / apologize-01
                     :ARG0 (c41-5 / i)
                     :condition (c41-9 / confuse-01
                                       :ARG1 c41-5
                                       :ARG2 (c41-12 / thing
                                                     :ARG0-of (c41-10 / issue-02))))
       :snt3 (c41-4 / agree-01
                    :ARG0 c41-5
                    :ARG1 c41-14
                    :ARG2 (c41-2 / everyone)
                    :ARG1-of (c41-11 / regardless-91
                                     :ARG2 (c41-13 / class))))

# ::snt I'm baffled by how few of its customers actually know how Uber works.
# ::tokens ["I", "'m", "baffled", "by", "how", "few", "of", "its", "customers", "actually", "know", "how", "Uber", "works", "."]
# ::lemmas ["i", "be", "baffle", "by", "how", "few", "of", "its", "customer", "actually", "know", "how", "Uber", "work", "."]
(c42-2 / baffle-01
       :ARG0 (c42-11 / know-01
                     :ARG0 (c42-6 / customer
                                  :quant (c42-1 / few
                                                :degree (c42-9 / so))
                                  :ARG1-of (c42-3 / include-91
                                                  :ARG2 (c42-5 / customer
                                                               :poss (c42-8 / company
                                                                            :name (c42-4 / name
                                                                                         :op1 " Uber")))))
                     :ARG1 (c42-10 / thing
                                   :manner-of (c42-0 / work-09
                                                     :ARG1 c42-8))
                     :ARG1-of (c42-12 / actual-02))
       :ARG1 (c42-7 / i))

# ::snt So are rides free or more expensive? Your tweet is very unclear
# ::tokens ["So", "are", "rides", "free", "or", "more", "expensive", "?", "Your", "tweet", "is", "very", "unclear"]
# ::lemmas ["so", "be", "ride", "free", "or", "more", "expensive", "?", "your", "tweet", "be", "very", "unclear"]
(c43-3 / multi-sentence
       :snt1 (c43-10 / amr-choice
                     :op1 (c43-2 / free-03
                                 :ARG1 (c43-7 / ride))
                     :op2 (c43-0 / have-degree-91
                                 :ARG1 c43-7
                                 :ARG2 (c43-4 / expensive)
                                 :ARG3 (c43-6 / more)))
       :snt2 (c43-8 / clear-06
                    :ARG1 (c43-9 / tweet-01
                                 :ARG0 (c43-1 / you))
                    :degree (c43-5 / very)
                    :polarity -))

# ::snt thx.
# ::tokens ["thx", "."]
# ::lemmas ["thx", "."]
(c44-0 / string-entity
       :value "thx")

# ::snt you really gotta stop the swarm model or at least have someone actually look at WHY an area is swarming.
# ::tokens ["you", "really", "got", "ta", "stop", "the", "swarm", "model", "or", "at", "least", "have", "someone", "actually", "look", "at", "WHY", "an", "area", "is", "swarming", "."]
# ::lemmas ["you", "really", "got", "to", "stop", "the", "swarm", "model", "or", "at", "least", "have", "someone", "actually", "look", "at", "why", "an", "area", "be", "swarm", "."]
(c45-6 / or
       :op1 (c45-2 / obligate-01
                   :ARG1 (c45-1 / you)
                   :ARG2 (c45-13 / stop-01
                                 :ARG0 c45-1
                                 :ARG1 (c45-3 / model-01
                                              :ARG1 (c45-8 / swarm-01)))
                   :ARG1-of (c45-11 / real-04))
       :op2 (c45-0 / have-04
                   :ARG0 c45-1
                   :ARG1 (c45-4 / look-01
                                :ARG0 (c45-5 / someone)
                                :ARG1 (c45-14 / thing
                                              :ARG0-of (c45-12 / cause-01
                                                               :ARG1 (c45-7 / swarm-01
                                                                            :ARG1 (c45-15 / area))))
                                :mod (c45-9 / at-least)
                                :ARG1-of (c45-10 / actual-02))))

# ::snt . Seems. A global marketing disaster Uber is trying to fix.
# ::tokens [".", "Seems", ".", "A", "global", "marketing", "disaster", "Uber", "is", "trying", "to", "fix", "."]
# ::lemmas [".", "seem", ".", "a", "global", "marketing", "disaster", "Uber", "be", "try", "to", "fix", "."]
(c46-6 / seem-01
       :ARG1 (c46-7 / try-01
                    :ARG0 (c46-4 / company
                                 :name (c46-2 / name
                                              :op1 " Uber"))
                    :ARG1 (c46-0 / fix-02
                                 :ARG0 c46-4
                                 :ARG1 (c46-3 / disaster
                                              :topic (c46-1 / market-01
                                                            :mod (c46-5 / globe))))))

# ::snt I'm kinda new to (active) twitter but I can see the praises of a knee jerk reaction. It highlights the collective mind issues.
# ::tokens ["I", "'m", "kinda", "new", "to", "(", "active", ")", "twitter", "but", "I", "can", "see", "the", "praises", "of", "a", "knee", "jerk", "reaction", ".", "It", "highlights", "the", "collective", "mind", "issues", "."]
# ::lemmas ["i", "be", "kinda", "new", "to", "(", "active", ")", "twitter", "but", "i", "can", "see", "the", "praise", "of", "a", "knee", "jerk", "reaction", ".", "it", "highlight", "the", "collective", "mind", "issue", "."]
(c47-3 / multi-sentence
       :snt1 (c47-7 / new-02
                    :ARG1 (c47-6 / i)
                    :ARG2 (c47-9 / publication
                                 :name (c47-8 / name
                                              :op1 "Twitter")
                                 :mod (c47-17 / active))
                    :degree (c47-15 / kind-of)
                    :concession-of (c47-16 / possible-01
                                           :ARG1 (c47-14 / see-01
                                                         :ARG0 c47-6
                                                         :ARG1 (c47-4 / praise-01
                                                                      :ARG1 (c47-10 / react-01
                                                                                    :manner (c47-0 / jerk-01
                                                                                                   :ARG1 (c47-5 / knee)))))))
       :snt2 (c47-1 / highlight-01
                    :ARG0 (c47-12 / it)
                    :ARG1 (c47-2 / issue-02
                                 :ARG0 (c47-11 / mind)
                                 :mod (c47-13 / collective))))

# ::snt still looks like a PR issue to me, look at the backlash. Never assume the customer has same knowledge you do .
# ::tokens ["still", "looks", "like", "a", "PR", "issue", "to", "me", ",", "look", "at", "the", "backlash", ".", "Never", "assume", "the", "customer", "has", "same", "knowledge", "you", "do", "."]
# ::lemmas ["still", "look", "like", "a", "pr", "issue", "to", "i", ",", "look", "at", "the", "backlash", ".", "never", "assume", "the", "customer", "have", "same", "knowledge", "you", "do", "."]
(c48-2 / multi-sentence
       :snt1 (c48-1 / look-01
                    :ARG0 (c48-7 / i)
                    :ARG1 (c48-10 / issue-02
                                  :ARG0 (c48-8 / public-02)
                                  :ARG1 c48-7
                                  :mod (c48-12 / still))
                    :snt2-of c48-2)
       :ARG0 (c48-0 / you)
       :ARG1 (c48-3 / backlash-01)
       :snt3 (c48-14 / assume-02
                     :ARG0 (c48-11 / you)
                     :ARG1 (c48-13 / know-01
                                   :ARG0 (c48-9 / customer)
                                   :ARG1-of (c48-4 / same-01
                                                   :ARG2 (c48-5 / know-01
                                                                :ARG0 c48-11)))
                     :time (c48-6 / ever)
                     :polarity -
                     :mode imperative)
       :mode imperative)

# ::snt FWIW I think they're communicating fine now, that initial tweet was a grenade they should've rewritten.
# ::tokens ["FWIW", "I", "think", "they", "'re", "communicating", "fine", "now", ",", "that", "initial", "tweet", "was", "a", "grenade", "they", "should", "'ve", "rewritten", "."]
# ::lemmas ["fwiw", "i", "think", "they", "be", "communicate", "fine", "now", ",", "that", "initial", "tweet", "be", "a", "grenade", "they", "should", "'ve", "rewrite", "."]
(c49-13 / and
        :op1 (c49-12 / think-01
                     :ARG0 (c49-3 / i)
                     :ARG1 (c49-8 / communicate-01
                                  :ARG0 (c49-11 / they)
                                  :ARG1-of (c49-1 / fine-04)
                                  :time (c49-5 / now)))
        :op2 (c49-9 / grenade
                    :domain (c49-6 / tweet-01
                                   :mod (c49-10 / initial)
                                   :mod (c49-2 / that))
                    :ARG1-of (c49-7 / rewrite-01
                                    :ARG0 c49-11
                                    :ARG1-of (c49-4 / recommend-01
                                                    :ARG2 c49-11)))
        :ARG1-of (c49-0 / honest-01
                        :ARG0 c49-3))

# ::snt Uber is covering the cost of all rides, Uber is paying drivers higher fares to get into the CBD.
# ::tokens ["Uber", "is", "covering", "the", "cost", "of", "all", "rides", ",", "Uber", "is", "paying", "drivers", "higher", "fares", "to", "get", "into", "the", "CBD", "."]
# ::lemmas ["Uber", "be", "cover", "the", "cost", "of", "all", "ride", ",", "Uber", "be", "pay", "driver", "high", "fare", "to", "get", "into", "the", "CBD", "."]
(c50-15 / and
        :op1 (c50-9 / cover-01
                    :ARG0 (c50-8 / company
                                 :name (c50-5 / name
                                              :op1 "Uber"))
                    :ARG1 (c50-13 / cost-01
                                  :ARG1 (c50-10 / ride-01
                                                :mod (c50-4 / all))))
        :op2 (c50-7 / pay-01
                    :ARG0 c50-8
                    :ARG1 (c50-1 / fare
                                 :ARG1-of (c50-0 / have-degree-91
                                                 :ARG2 (c50-2 / high-02)
                                                 :ARG3 (c50-3 / more)))
                    :ARG2 (c50-14 / person
                                  :ARG0-of (c50-11 / drive-01))
                    :purpose (c50-12 / get-05
                                     :ARG1 c50-14
                                     :ARG2 (c50-16 / city-district
                                                   :name (c50-6 / name
                                                                :op1 "CBD")))))
