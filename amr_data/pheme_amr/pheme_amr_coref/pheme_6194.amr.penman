# ::snt the news here is Aus is speculating two dead our hearts are breaking!
# ::tokens ["the", "news", "here", "is", "Aus", "is", "speculating", "two", "dead", "our", "hearts", "are", "breaking", "!"]
# ::lemmas ["the", "news", "here", "be", "Aus", "be", "speculate", "two", "dead", "our", "heart", "be", "break", "!"]
(c1-6 / speculate-01
      :ARG0 (c1-3 / news
                  :location (c1-0 / here)
                  :domain (c1-5 / country
                                :name (c1-4 / name
                                            :op1 "Australia")))
      :ARG1 (c1-2 / break-01
                  :ARG1 (c1-7 / heart
                              :part-of (c1-1 / we))))

# ::snt : Hope all hostages get out this cafe ok! Just seen the gun fire footage in Sydney! Scary
# ::tokens [":", "Hope", "all", "hostages", "get", "out", "this", "cafe", "ok", "!", "Just", "seen", "the", "gun", "fire", "footage", "in", "Sydney", "!", "Scary"]
# ::lemmas [":", "hope", "all", "hostage", "get", "out", "this", "cafe", "ok", "!", "just", "see", "the", "gun", "fire", "footage", "in", "Sydney", "!", "scary"]
(c2-1 / multi-sentence
      :snt1 (c2-7 / hope-01
                  :ARG0 (c2-12 / i)
                  :ARG1 (c2-11 / get-05
                               :ARG1 (c2-6 / hostage
                                           :mod (c2-5 / all))
                               :ARG2 (c2-15 / out-06
                                            :ARG1 c2-6
                                            :ARG2 (c2-17 / cafe
                                                         :mod (c2-18 / this)))
                               :ARG1-of (c2-14 / okay-04)))
      :snt2 (c2-4 / see-01
                  :ARG0 (c2-13 / i)
                  :ARG1 (c2-8 / footage
                              :topic (c2-16 / fire-01
                                            :ARG1 (c2-2 / gun)))
                  :time (c2-0 / just)
                  :location (c2-3 / city
                                  :name (c2-10 / name
                                               :op1 "Sydney"))
                  :ARG0-of (c2-9 / scare-01)))

# ::snt : Hope all hostages get out this cafe ok! Just seen the gun fire footage in Sydney! at least we will be safe x
# ::tokens [":", "Hope", "all", "hostages", "get", "out", "this", "cafe", "ok", "!", "Just", "seen", "the", "gun", "fire", "footage", "in", "Sydney", "!", "at", "least", "we", "will", "be", "safe", "x"]
# ::lemmas [":", "hope", "all", "hostage", "get", "out", "this", "cafe", "ok", "!", "just", "see", "the", "gun", "fire", "footage", "in", "Sydney", "!", "at", "least", "we", "will", "be", "safe", "x"]
(c3-1 / multi-sentence
      :snt1 (c3-7 / hope-01
                  :ARG0 (c3-14 / i)
                  :ARG1 (c3-11 / get-05
                               :ARG1 (c3-6 / hostage
                                           :mod (c3-5 / all))
                               :ARG2 (c3-16 / out-06
                                            :ARG1 c3-6
                                            :ARG2 (c3-18 / cafe
                                                         :mod (c3-19 / this)))
                               :ARG1-of (c3-15 / okay-04)))
      :snt2 (c3-4 / see-01
                  :ARG0 c3-14
                  :ARG1 (c3-8 / footage
                              :topic (c3-17 / fire-01
                                            :ARG1 (c3-2 / gun)))
                  :time (c3-0 / just)
                  :location (c3-3 / city
                                  :name (c3-10 / name
                                               :op1 "Sydney")))
      :snt3 (c3-9 / safe-01
                  :ARG1 (c3-12 / we)
                  :mod (c3-13 / at-least)))

# ::snt what's being told now hun? I'm deverstated
# ::tokens ["what", "'s", "being", "told", "now", "hun", "?", "I", "'m", "deverstated"]
# ::lemmas ["what", "be", "be", "tell", "now", "hun", "?", "i", "be", "deverstate"]
(c4-1 / multi-sentence
      :snt1 (c4-5 / tell-01
                  :ARG1 (c4-6 / amr-unknown)
                  :time (c4-3 / now))
      :snt2 (c4-4 / deverstate-01
                  :ARG1 (c4-2 / i))
      :mod (c4-0 / hun))

# ::snt by the sounds have died but not confirmed so not sure, let's hope they are all alright
# ::tokens ["by", "the", "sounds", "have", "died", "but", "not", "confirmed", "so", "not", "sure", ",", "let", "'s", "hope", "they", "are", "all", "alright"]
# ::lemmas ["by", "the", "sound", "have", "die", "but", "not", "confirm", "so", "not", "sure", ",", "let", "us", "hope", "they", "be", "all", "alright"]
(c5-2 / multi-sentence
      :snt1 (c5-5 / contrast-01
                  :ARG1 (c5-4 / die-01
                              :ARG1-of (c5-6 / cause-01
                                             :ARG0 (c5-8 / sound-02)))
                  :ARG2 (c5-7 / confirm-01
                              :ARG1 c5-4
                              :ARG0-of (c5-11 / cause-01
                                              :ARG1 (c5-3 / sure-02
                                                          :ARG1 c5-4
                                                          :polarity -))
                              :polarity -))
      :snt2 (c5-0 / hope-01
                  :ARG0 (c5-1 / we)
                  :ARG1 (c5-10 / all-right
                               :domain (c5-9 / they))
                  :mode imperative))

# ::snt dead.. injured
# ::tokens ["dead", "..", "injured"]
# ::lemmas ["dead", "..", "injure"]
(c6-2 / and
      :op1 (c6-0 / die-01)
      :op2 (c6-1 / injure-01))

# ::snt Awful! Can't believe I watched that live happen in my city! Those poor hostages and their families
# ::tokens ["Awful", "!", "Ca", "n't", "believe", "I", "watched", "that", "live", "happen", "in", "my", "city", "!", "Those", "poor", "hostages", "and", "their", "families"]
# ::lemmas ["awful", "!", "can", "not", "believe", "i", "watch", "that", "live", "happen", "in", "my", "city", "!", "those", "poor", "hostage", "and", "their", "family"]
(c7-3 / multi-sentence
      :snt1 (c7-13 / awful
                   :mode expressive)
      :snt2 (c7-8 / possible-01
                  :ARG1 (c7-5 / believe-01
                              :ARG0 (c7-7 / i)
                              :ARG1 (c7-1 / watch-01
                                          :ARG0 c7-7
                                          :ARG1 (c7-11 / that)
                                          :manner (c7-2 / live)
                                          :location (c7-9 / city
                                                          :poss c7-7)))
                  :polarity -)
      :snt3 (c7-6 / and
                  :op1 (c7-0 / hostage
                             :mod (c7-12 / poor)
                             :mod (c7-10 / that))
                  :op2 (c7-4 / family
                             :poss c7-0)))

# ::snt p
# ::tokens ["p"]
# ::lemmas ["p"]
(c8-1 / person
      :name (c8-0 / name
                  :op1 "p"))

# ::snt : Hope all hostages get out this cafe ok! Just seen the gun fire footage in Sydney! I don't think is an appropriate emoji
# ::tokens [":", "Hope", "all", "hostages", "get", "out", "this", "cafe", "ok", "!", "Just", "seen", "the", "gun", "fire", "footage", "in", "Sydney", "!", "I", "do", "n't", "think", "is", "an", "appropriate", "emoji"]
# ::lemmas [":", "hope", "all", "hostage", "get", "out", "this", "cafe", "ok", "!", "just", "see", "the", "gun", "fire", "footage", "in", "Sydney", "!", "i", "do", "not", "think", "be", "an", "appropriate", "emoji"]
(c9-2 / multi-sentence
      :snt1 (c9-8 / hope-01
                  :ARG0 (c9-14 / i)
                  :ARG1 (c9-12 / get-05
                               :ARG1 (c9-7 / hostage
                                           :mod (c9-6 / all))
                               :ARG2 (c9-17 / out-06
                                            :ARG1 c9-7
                                            :ARG2 (c9-19 / cafe
                                                         :mod (c9-21 / this)))
                               :ARG1-of (c9-16 / okay-04)))
      :snt2 (c9-5 / see-01
                  :ARG0 (c9-15 / i)
                  :ARG1 (c9-9 / footage
                              :topic (c9-18 / fire-01
                                            :ARG1 (c9-3 / gun))
                              :location (c9-4 / city
                                              :name (c9-11 / name
                                                           :op1 "Sydney")))
                  :mod (c9-0 / just))
      :snt3 (c9-20 / think-01
                   :ARG0 (c9-1 / i)
                   :ARG1 (c9-10 / emote-01
                                :ARG1-of (c9-13 / appropriate-02))
                   :polarity -))

# ::snt bless you Jay!!!
# ::tokens ["bless", "you", "Jay", "!", "!", "!"]
# ::lemmas ["bless", "you", "Jay", "!", "!", "!"]
(c10-4 / say-01
       :ARG0 (c10-1 / i)
       :ARG1 (c10-0 / bless-01
                    :ARG0 c10-1
                    :ARG1 (c10-3 / person
                                 :name (c10-2 / name
                                              :op1 "Jay")
                                 :ARG2-of c10-4)))

# ::snt Up to dead right now Jay. dead confirmed and that doesnt include the terrorist. critically injured
# ::tokens ["Up", "to", "dead", "right", "now", "Jay", ".", "dead", "confirmed", "and", "that", "does", "nt", "include", "the", "terrorist", ".", "critically", "injured"]
# ::lemmas ["up", "to", "dead", "right", "now", "Jay", ".", "dead", "confirm", "and", "that", "do", "not", "include", "the", "terrorist", ".", "critically", "injure"]
(c11-2 / multi-sentence
       :snt1 (c11-12 / say-01
                     :ARG0 (c11-4 / i)
                     :ARG1 (c11-14 / and
                                   :op1 (c11-8 / die-01
                                               :ARG1 (c11-7 / person
                                                            :name (c11-5 / name
                                                                         :op1 "Jay"))
                                               :time (c11-6 / now
                                                            :mod (c11-9 / right))
                                               :quant (c11-3 / up-to))
                                   :op2 (c11-10 / include-01
                                                :ARG1 (c11-13 / terrorist)
                                                :ARG2 (c11-0 / die-01)
                                                :polarity -))
                     :ARG2 c11-7)
       :snt2 (c11-1 / injure-01
                    :ARG1 c11-7
                    :ARG1-of (c11-11 / critical-03)))

# ::snt nooooo! And I'm guessing they killed they guy when going in?
# ::tokens ["nooooo", "!", "And", "I", "'m", "guessing", "they", "killed", "they", "guy", "when", "going", "in", "?"]
# ::lemmas ["nooooo", "!", "and", "i", "be", "guess", "they", "kill", "they", "guy", "when", "go", "in", "?"]
(c12-0 / multi-sentence
       :snt1 (c12-3 / no)
       :snt2 (c12-10 / and
                     :op2 (c12-6 / guess-01
                                 :ARG0 (c12-2 / i)
                                 :ARG1 (c12-9 / kill-01
                                              :ARG0 (c12-8 / they)
                                              :ARG1 (c12-5 / guy
                                                           :poss c12-8)
                                              :time (c12-4 / go-02
                                                           :ARG0 c12-8
                                                           :ARG4 (c12-7 / inside)))
                                 :polarity (c12-1 / amr-unknown))))

# ::snt not too sure yet, the police are going to make a press realise in about half an hour! Its am on aus, we are all wide awake
# ::tokens ["not", "too", "sure", "yet", ",", "the", "police", "are", "going", "to", "make", "a", "press", "realise", "in", "about", "half", "an", "hour", "!", "Its", "am", "on", "aus", ",", "we", "are", "all", "wide", "awake"]
# ::lemmas ["not", "too", "sure", "yet", ",", "the", "police", "be", "go", "to", "make", "a", "press", "realise", "in", "about", "half", "an", "hour", "!", "its", "am", "on", "aus", ",", "we", "be", "all", "wide", "awake"]
(c13-0 / multi-sentence
       :snt1 (c13-3 / sure-02
                    :time (c13-17 / yet)
                    :ARG2-of (c13-7 / have-degree-91
                                    :ARG1 (c13-2 / police
                                                 :ARG3 (c13-21 / too)))
                    :snt2 (c13-12 / make-02
                                  :ARG0 c13-2)
                    :ARG1 (c13-13 / realize-01
                                  :ARG0 (c13-4 / press)
                                  :time (c13-6 / after
                                               :op1 (c13-10 / now)
                                               :quant (c13-15 / about
                                                              :op1 (c13-19 / temporal-quantity
                                                                           :unit (c13-5 / hour)
                                                                           :quant 0.5))))
                    :polarity -)
       :snt3 (c13-9 / be-located-at-91
                    :ARG1 (c13-16 / it)
                    :ARG2 (c13-8 / planet
                                 :name (c13-18 / name
                                               :op1 "Aus")))
       :snt4 (c13-11 / awake-03
                     :ARG1 (c13-14 / we
                                   :mod (c13-20 / all))
                     :degree (c13-1 / wide)))
