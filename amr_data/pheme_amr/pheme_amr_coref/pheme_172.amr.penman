# ::snt well it is Sydney - the selfie absorbed capital of Australia.
# ::tokens ["well", "it", "is", "Sydney", "-", "the", "selfie", "absorbed", "capital", "of", "Australia", "."]
# ::lemmas ["well", "it", "be", "Sydney", "-", "the", "selfie", "absorb", "capital", "of", "Australia", "."]
(c1-5 / city
      :name (c1-2 / name
                  :op1 "Sydney")
      :domain (c1-1 / it)
      :ARG1-of (c1-8 / absorb-01
                     :ARG0 (c1-7 / selfie))
      :ARG0-of (c1-0 / have-org-role-91
                     :ARG1 (c1-4 / country
                                 :name (c1-3 / name
                                             :op1 "Australia"))
                     :ARG2 (c1-6 / capital)))

# ::snt IKR !! And I'm afraid to say they are Aussies
# ::tokens ["IKR", "!", "!", "And", "I", "'m", "afraid", "to", "say", "they", "are", "Aussies"]
# ::lemmas ["IKR", "!", "!", "and", "i", "be", "afraid", "to", "say", "they", "be", "Aussies"]
(c2-1 / multi-sentence
      :snt1 (c2-5 / person
                  :name (c2-3 / name
                              :op1 "IKR"))
      :snt2 (c2-9 / and
                  :op2 (c2-0 / fear-01
                             :ARG0 (c2-2 / i)
                             :ARG1 (c2-7 / say-01
                                         :ARG0 c2-2
                                         :ARG1 c2-5
                                         :domain (c2-8 / they)
                                         :mod (c2-6 / country
                                                    :name (c2-4 / name
                                                                :op1 "Australia"))))))

# ::snt that is awful but unfortunately not surprising.
# ::tokens ["that", "is", "awful", "but", "unfortunately", "not", "surprising", "."]
# ::lemmas ["that", "be", "awful", "but", "unfortunately", "not", "surprising", "."]
(c3-1 / contrast-01
      :ARG1 (c3-4 / awful
                  :domain (c3-3 / that))
      :ARG2 (c3-2 / surprise-01
                  :ARG2 c3-3
                  :ARG2-of (c3-0 / fortunate-01
                                 :polarity -)
                  :polarity -))

# ::snt I'm more perturbed by the bumbag...
# ::tokens ["I", "'m", "more", "perturbed", "by", "the", "bumbag", "..."]
# ::lemmas ["i", "be", "more", "perturb", "by", "the", "bumbag", "..."]
(c4-4 / perturbed-01
      :ARG0 (c4-2 / bumbag)
      :ARG1 (c4-3 / i)
      :ARG2-of (c4-0 / have-degree-91
                     :ARG1 c4-3
                     :ARG3 (c4-1 / more)))

# ::snt it's disgusting !!
# ::tokens ["it", "'s", "disgusting", "!", "!"]
# ::lemmas ["it", "be", "disgusting", "!", "!"]
(c5-0 / disgust-01
      :ARG0 (c5-1 / it))

# ::snt what selfish, self centred dickheads
# ::tokens ["what", "selfish", ",", "self", "centred", "dickheads"]
# ::lemmas ["what", "selfish", ",", "self", "centre", "dickhead"]
(c6-2 / dickhead
      :mod (c6-0 / selfish
                 :degree (c6-1 / so))
      :ARG1-of (c6-3 / center-01
                     :ARG2 c6-2))

# ::snt what absolute muppets, sick behaviour
# ::tokens ["what", "absolute", "muppets", ",", "sick", "behaviour"]
# ::lemmas ["what", "absolute", "muppet", ",", "sick", "behaviour"]
(c7-5 / and
      :op1 (c7-0 / muppet
                 :degree (c7-3 / absolute)
                 :degree (c7-4 / so))
      :op2 (c7-1 / behave-01
                 :ARG1 (c7-2 / sick-05)))

# ::snt it's a sad world we live in sometimes.
# ::tokens ["it", "'s", "a", "sad", "world", "we", "live", "in", "sometimes", "."]
# ::lemmas ["it", "be", "a", "sad", "world", "we", "live", "in", "sometimes", "."]
(c8-0 / world
      :ARG0-of (c8-4 / sad-02)
      :ARG2-of (c8-1 / live-01
                     :ARG0 (c8-3 / we)
                     :frequency (c8-2 / sometimes)))

# ::snt Yeah sorry I saw it about times after I saw this one
# ::tokens ["Yeah", "sorry", "I", "saw", "it", "about", "times", "after", "I", "saw", "this", "one"]
# ::lemmas ["yeah", "sorry", "i", "see", "it", "about", "time", "after", "i", "see", "this", "one"]
(c9-7 / sorry-01
      :ARG1 (c9-5 / i)
      :ARG2 (c9-3 / see-01
                  :ARG0 c9-5
                  :ARG1 (c9-6 / it)
                  :time (c9-9 / after
                              :op1 (c9-1 / see-01
                                         :ARG0 c9-5
                                         :ARG1 (c9-2 / one
                                                     :mod (c9-8 / this))))
                  :frequency (c9-4 / about
                                   :op1 1))
      :mod (c9-0 / yeah
                 :mode expressive))

# ::snt shocked nah ,saw a guy walk around times to get back into channel live TV cross !
# ::tokens ["shocked", "nah", ",", "saw", "a", "guy", "walk", "around", "times", "to", "get", "back", "into", "channel", "live", "TV", "cross", "!"]
# ::lemmas ["shock", "nah", ",", "see", "a", "guy", "walk", "around", "time", "to", "get", "back", "into", "channel", "live", "tv", "cross", "!"]
(c10-10 / see-01
        :ARG0 (c10-3 / i)
        :ARG1 (c10-7 / guy
                     :ARG0-of (c10-0 / walk-01
                                     :ARG2 (c10-12 / around)
                                     :frequency (c10-11 / time)
                                     :purpose (c10-5 / get-back-10
                                                     :ARG1 c10-7
                                                     :ARG2 (c10-6 / cross
                                                                  :mod (c10-8 / channel
                                                                              :mod (c10-1 / live)
                                                                              :mod (c10-9 / television))))))
        :ARG1-of (c10-2 / shock-01)
        :mod (c10-4 / nah)
        :mode expressive)

# ::snt Not sure I see too much of a difference though if ya know what I mean
# ::tokens ["Not", "sure", "I", "see", "too", "much", "of", "a", "difference", "though", "if", "ya", "know", "what", "I", "mean"]
# ::lemmas ["not", "sure", "i", "see", "too", "much", "of", "a", "difference", "though", "if", "ya", "know", "what", "i", "mean"]
(c11-0 / have-concession-91
       :ARG1 (c11-9 / sure-02
                    :ARG0 (c11-4 / i)
                    :ARG1 (c11-3 / see-01
                                 :ARG0 c11-4
                                 :ARG1 (c11-7 / differ-02
                                              :ARG1-of (c11-11 / have-quant-91
                                                               :ARG2 (c11-2 / much)
                                                               :ARG3 (c11-10 / too))))
                    :condition (c11-5 / know-01
                                      :ARG0 (c11-1 / you)
                                      :ARG1 (c11-8 / thing
                                                   :ARG2-of (c11-6 / mean-01
                                                                   :ARG0 c11-4)))
                    :polarity -))

# ::snt I didn't take the photo? I live in Scotland...
# ::tokens ["I", "did", "n't", "take", "the", "photo", "?", "I", "live", "in", "Scotland", "..."]
# ::lemmas ["i", "do", "not", "take", "the", "photo", "?", "i", "live", "in", "Scotland", "..."]
(c12-1 / multi-sentence
       :snt1 (c12-4 / photograph-01
                    :ARG0 (c12-2 / i)
                    :polarity -)
       :snt2 (c12-0 / live-01
                    :ARG0 (c12-6 / i)
                    :location (c12-5 / country
                                     :name (c12-3 / name
                                                  :op1 "Scotland"))))

# ::snt shame on them, shame
# ::tokens ["shame", "on", "them", ",", "shame"]
# ::lemmas ["shame", "on", "they", ",", "shame"]
(c13-0 / shame-01
       :ARG1 (c13-1 / they))

# ::snt I don't understand people I just hope and pray they all get out safely
# ::tokens ["I", "do", "n't", "understand", "people", "I", "just", "hope", "and", "pray", "they", "all", "get", "out", "safely"]
# ::lemmas ["i", "do", "not", "understand", "people", "i", "just", "hope", "and", "pray", "you", "all", "get", "out", "safely"]
(c14-10 / and
        :op1 (c14-2 / understand-01
                    :ARG0 (c14-5 / i)
                    :ARG1 (c14-6 / person)
                    :polarity -)
        :op2 (c14-0 / hope-01
                    :ARG0 c14-5
                    :ARG1 (c14-7 / get-05
                                 :ARG1 (c14-9 / they
                                              :mod (c14-4 / all))
                                 :ARG2 (c14-3 / out)
                                 :manner (c14-8 / safe-01
                                                :ARG1 c14-9))
                    :mod (c14-1 / just)))

# ::snt look so what people take selfies all the time they were probably waiting around and thought what the heck.
# ::tokens ["look", "so", "what", "people", "take", "selfies", "all", "the", "time", "they", "were", "probably", "waiting", "around", "and", "thought", "what", "the", "heck", "."]
# ::lemmas ["look", "so", "what", "people", "take", "selfie", "all", "the", "time", "they", "be", "probably", "wait", "around", "and", "think", "what", "the", "heck", "."]
(c15-12 / and
        :op1 (c15-3 / look-01
                    :ARG0 (c15-1 / you)
                    :ARG1 (c15-8 / so)
                    :mode imperative)
        :op2 (c15-4 / and
                    :op1 (c15-2 / wait-01
                                :ARG1 (c15-6 / person)
                                :mod (c15-11 / probable)
                                :location (c15-5 / around))
                    :op2 (c15-10 / think-01
                                 :ARG0 c15-6
                                 :ARG1 (c15-0 / heck
                                              :mode expressive)))
        :time (c15-7 / time
                     :mod (c15-9 / all)))

# ::snt And you thought take a photo of someone taking a selfie?
# ::tokens ["And", "you", "thought", "take", "a", "photo", "of", "someone", "taking", "a", "selfie", "?"]
# ::lemmas ["and", "you", "think", "take", "a", "photo", "of", "someone", "take", "a", "selfie", "?"]
(c16-7 / and
       :op2 (c16-6 / think-01
                   :ARG0 (c16-0 / you)
                   :ARG1 (c16-3 / photograph-01
                                :ARG0 c16-0
                                :ARG1 (c16-5 / someone
                                             :ARG0-of (c16-4 / take-01
                                                             :ARG1 (c16-1 / selfie))))
                   :polarity (c16-2 / amr-unknown)))
