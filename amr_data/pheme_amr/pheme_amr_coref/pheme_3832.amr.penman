# ::snt how do you do a minute press conference after an officer killed an unarmed kid
# ::tokens ["how", "do", "you", "do", "a", "minute", "press", "conference", "after", "an", "officer", "killed", "an", "unarmed", "kid"]
# ::lemmas ["how", "do", "you", "do", "a", "minute", "press", "conference", "after", "an", "officer", "kill", "an", "unarmed", "kid"]
(c1-8 / do-02
      :ARG0 (c1-0 / you)
      :ARG1 (c1-9 / conference
                  :duration (c1-10 / temporal-quantity
                                   :unit (c1-1 / minute)
                                   :quant 1)
                  :mod (c1-7 / press))
      :time (c1-11 / after
                   :op1 (c1-5 / kill-01
                              :ARG0 (c1-2 / officer)
                              :ARG1 (c1-3 / kid
                                          :ARG1-of (c1-4 / arm-01
                                                         :polarity -))))
      :manner (c1-6 / amr-unknown))

# ::snt T.J. would you answer a question if I were yelling it at you? You won't answer. Typical journalist, stir up the pot. Then go.
# ::tokens ["T.J.", "would", "you", "answer", "a", "question", "if", "I", "were", "yelling", "it", "at", "you", "?", "You", "wo", "n't", "answer", ".", "Typical", "journalist", ",", "stir", "up", "the", "pot", ".", "Then", "go", "."]
# ::lemmas ["T.J.", "would", "you", "answer", "a", "question", "if", "i", "be", "yell", "it", "at", "you", "?", "you", "will", "not", "answer", ".", "typical", "journalist", ",", "stir", "up", "the", "pot", ".", "then", "go", "."]
(c2-1 / multi-sentence
      :snt1 (c2-6 / answer-01
                  :ARG0 (c2-3 / person
                              :name (c2-8 / name
                                          :op1 "T.J."))
                  :ARG1 (c2-18 / thing
                               :ARG1-of (c2-7 / question-01))
                  :polarity (c2-11 / amr-unknown)
                  :condition (c2-16 / yell-01
                                    :ARG0 (c2-12 / i)
                                    :ARG1 c2-18
                                    :ARG2 c2-3))
      :snt2 (c2-9 / answer-01
                  :ARG0 (c2-17 / you)
                  :polarity -)
      :snt3 (c2-4 / stir-up-04
                  :ARG0 (c2-2 / you
                              :mod (c2-0 / journalist
                                         :ARG1-of (c2-15 / typical-02)))
                  :ARG1 (c2-5 / pot)
                  :mode imperative)
      :snt4 (c2-10 / go-02
                   :ARG0 (c2-14 / you)
                   :time (c2-13 / then)
                   :mode imperative))

# ::snt I would too if just committed perjury, falsification of documents, homicide and slander all on the record.
# ::tokens ["I", "would", "too", "if", "just", "committed", "perjury", ",", "falsification", "of", "documents", ",", "homicide", "and", "slander", "all", "on", "the", "record", "."]
# ::lemmas ["i", "would", "too", "if", "just", "commit", "perjury", ",", "falsification", "of", "document", ",", "homicide", "and", "slander", "all", "on", "the", "record", "."]
(c3-6 / do-02
      :ARG0 (c3-4 / i)
      :mod (c3-10 / too)
      :condition (c3-7 / commit-02
                       :ARG0 c3-4
                       :ARG1 (c3-11 / and
                                    :op1 (c3-5 / perjure-01
                                               :ARG0 c3-4)
                                    :op2 (c3-3 / falsify-01
                                               :ARG0 c3-4
                                               :ARG1 (c3-2 / document))
                                    :op3 (c3-0 / homicide)
                                    :op4 (c3-9 / slander-01
                                               :ARG0 c3-4))
                       :mod (c3-1 / just)
                       :location (c3-8 / record)))

# ::snt Well b/c I saw officers behind him telling him to do so, wonder why? Go back to the last mins of the press conf. &amp; you'll see
# ::tokens ["Well", "b", "/", "c", "I", "saw", "officers", "behind", "him", "telling", "him", "to", "do", "so", ",", "wonder", "why", "?", "Go", "back", "to", "the", "last", "mins", "of", "the", "press", "conf", ".", "&", "amp", ";", "you", "'ll", "see"]
# ::lemmas ["well", "b", "/", "c", "i", "see", "officer", "behind", "he", "tell", "he", "to", "do", "so", ",", "wonder", "why", "?", "go", "back", "to", "the", "last", "min", "of", "the", "press", "conf", ".", "&", "amp", ";", "you", "'ll", "see"]
(c4-0 / multi-sentence
      :snt1 (c4-19 / cause-01
                   :ARG0 (c4-5 / see-01
                               :ARG0 (c4-13 / i)
                               :ARG1 (c4-21 / tell-01
                                            :ARG0 (c4-18 / officer
                                                         :location (c4-8 / behind
                                                                         :op1 (c4-6 / he)))
                                            :ARG1 (c4-3 / do-02
                                                        :ARG1 (c4-9 / so))
                                            :ARG2 c4-6))
                   :ARG1 (c4-12 / wonder-01
                                :ARG0 c4-13
                                :ARG1 (c4-20 / thing
                                             :ARG0-of (c4-4 / cause-01
                                                            :ARG1 c4-21)))
                   :mod (c4-1 / well))
      :snt2 (c4-11 / go-back-19
                   :ARG1 (c4-16 / you)
                   :ARG2 (c4-10 / minute
                                :mod (c4-7 / last)
                                :part-of (c4-14 / conf.
                                                :mod (c4-2 / press)))
                   :ARG1-of (c4-15 / cause-01
                                   :ARG0 (c4-17 / see-01
                                                :ARG0 c4-16))
                   :mode imperative))

# ::snt he needs to dust of that resume cause clearly he will be looking for another job.
# ::tokens ["he", "needs", "to", "dust", "of", "that", "resume", "cause", "clearly", "he", "will", "be", "looking", "for", "another", "job", "."]
# ::lemmas ["he", "need", "to", "dust", "of", "that", "resume", "cause", "clearly", "he", "will", "be", "look", "for", "another", "job", "."]
(c5-3 / need-01
      :ARG0 (c5-0 / he)
      :ARG1 (c5-5 / dust-01
                  :ARG0 c5-0
                  :ARG1 (c5-4 / resume
                              :mod (c5-8 / that)))
      :ARG1-of (c5-6 / cause-01
                     :ARG0 (c5-2 / look-01
                                 :ARG0 c5-0
                                 :ARG1 (c5-1 / job
                                             :mod (c5-9 / another))
                                 :ARG1-of (c5-7 / clear-06))))

# ::snt It was a bit hasty. That presser did NOT go well.
# ::tokens ["It", "was", "a", "bit", "hasty", ".", "That", "presser", "did", "NOT", "go", "well", "."]
# ::lemmas ["it", "be", "a", "bit", "hasty", ".", "that", "presser", "do", "not", "go", "well", "."]
(c6-2 / multi-sentence
      :snt1 (c6-0 / hasty
                  :degree (c6-3 / bit)
                  :domain (c6-4 / it))
      :snt2 (c6-6 / go-09
                  :ARG1 (c6-5 / presser
                              :mod (c6-7 / that))
                  :ARG2 (c6-1 / well-09)
                  :polarity -))

# ::snt Still won't answer key questions. Guess they still need more time to CONCOCT an excuse for killing an un-armed man.
# ::tokens ["Still", "wo", "n't", "answer", "key", "questions", ".", "Guess", "they", "still", "need", "more", "time", "to", "CONCOCT", "an", "excuse", "for", "killing", "an", "un", "-", "armed", "man", "."]
# ::lemmas ["still", "will", "not", "answer", "key", "question", ".", "guess", "they", "still", "need", "more", "time", "to", "concoct", "an", "excuse", "for", "kill", "an", "un", "-", "armed", "man", "."]
(c7-1 / multi-sentence
      :snt1 (c7-15 / answer-01
                   :ARG1 (c7-3 / question-01
                               :ARG1-of (c7-14 / key-02))
                   :mod (c7-12 / still)
                   :polarity -)
      :snt2 (c7-10 / guess-01
                   :ARG1 (c7-7 / need-01
                               :ARG0 (c7-13 / they)
                               :ARG1 (c7-11 / time
                                            :mod (c7-8 / more))
                               :purpose (c7-9 / conspire-01
                                              :ARG1 (c7-2 / excuse-02
                                                          :ARG1 (c7-4 / kill-01
                                                                      :ARG1 (c7-0 / man
                                                                                  :ARG1-of (c7-5 / arm-01
                                                                                                 :polarity -)))))
                               :mod (c7-6 / still))))
