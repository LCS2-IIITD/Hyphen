# ::snt I don't deal in what ifs. Further, the fact that it took a week to tell us something makes me more suspicous.
# ::tokens ["I", "do", "n't", "deal", "in", "what", "ifs", ".", "Further", ",", "the", "fact", "that", "it", "took", "a", "week", "to", "tell", "us", "something", "makes", "me", "more", "suspicous", "."]
# ::lemmas ["i", "do", "not", "deal", "in", "what", "ifs", ".", "far", ",", "the", "fact", "that", "it", "take", "a", "week", "to", "tell", "we", "something", "make", "i", "more", "suspicous", "."]
(c1-3 / multi-sentence
      :snt1 (c1-11 / deal-01
                   :ARG0 (c1-7 / i)
                   :ARG2 (c1-14 / suppose-01)
                   :polarity -)
      :snt2 (c1-10 / make-02
                   :ARG0 (c1-15 / take-10
                                :ARG0 (c1-13 / tell-01
                                             :ARG1 (c1-6 / something)
                                             :ARG2 (c1-1 / we))
                                :ARG1 (c1-9 / temporal-quantity
                                            :unit (c1-8 / week)
                                            :quant 1))
                   :ARG1 (c1-0 / have-degree-91
                               :ARG1 (c1-12 / i)
                               :ARG2 (c1-2 / suspicous)
                               :ARG3 (c1-4 / more))
                   :mod (c1-5 / further)))

# ::snt VERY SLICK PASTOR!
# ::tokens ["VERY", "SLICK", "PASTOR", "!"]
# ::lemmas ["very", "slick", "PASTOR", "!"]
(c2-2 / champion
      :ARG1-of (c2-0 / slick-03)
      :mod (c2-1 / every))

# ::snt he just admitted on national TV that Michael Brown was racially profiled
# ::tokens ["he", "just", "admitted", "on", "national", "TV", "that", "Michael", "Brown", "was", "racially", "profiled"]
# ::lemmas ["he", "just", "admit", "on", "national", "tv", "that", "Michael", "Brown", "be", "racially", "profile"]
(c3-8 / admit-01
      :ARG0 (c3-0 / he)
      :ARG1 (c3-4 / profile-01
                  :ARG1 (c3-7 / person
                              :name (c3-2 / name
                                          :op1 "Michael"
                                          :op2 "Brown"))
                  :manner (c3-5 / race))
      :time (c3-1 / just)
      :medium (c3-6 / television
                    :mod (c3-3 / nation)))

# ::snt Chief should go to Hollywood &amp; write suspense thrillers!
# ::tokens ["Chief", "should", "go", "to", "Hollywood", "&", "amp", ";", "write", "suspense", "thrillers", "!"]
# ::lemmas ["chief", "should", "go", "to", "Hollywood", "&", "amp", ";", "write", "suspense", "thriller", "!"]
(c4-2 / multi-sentence
      :snt1 (c4-6 / recommend-01
                  :ARG1 (c4-8 / go-01
                              :ARG1 (c4-7 / chief)
                              :ARG4 (c4-12 / and
                                           :op1 (c4-5 / market-sector
                                                      :name (c4-3 / name
                                                                  :op1 "Hollywood"))
                                           :op2 (c4-9 / company
                                                      :name (c4-4 / name
                                                                  :op1 "&amp")))))
      :snt2 (c4-0 / write-01
                  :ARG0 (c4-1 / you)
                  :ARG1 (c4-11 / thriller
                               :mod (c4-10 / suspense))
                  :mode imperative))

# ::snt into custody
# ::tokens ["into", "custody"]
# ::lemmas ["into", "custody"]
(c5-1 / take-01
      :ARG3 (c5-0 / custody))

# ::snt these pics show an altercation in a store NOT a robbery!
# ::tokens ["these", "pics", "show", "an", "altercation", "in", "a", "store", "NOT", "a", "robbery", "!"]
# ::lemmas ["these", "pic", "show", "an", "altercation", "in", "a", "store", "not", "a", "robbery", "!"]
(c6-4 / show-01
      :ARG0 (c6-2 / pic
                  :mod (c6-5 / this))
      :ARG1 (c6-6 / and
                  :op1 (c6-0 / fight-01
                             :location (c6-1 / store))
                  :op2 (c6-3 / rob-01
                             :location c6-1
                             :polarity -)))

# ::snt u r right! We don't kno what happened, but your overwhelming desire to believe the police, whew!
# ::tokens ["u", "r", "right", "!", "We", "do", "n't", "kno", "what", "happened", ",", "but", "your", "overwhelming", "desire", "to", "believe", "the", "police", ",", "whew", "!"]
# ::lemmas ["u", "r", "right", "!", "we", "do", "not", "kno", "what", "happen", ",", "but", "your", "overwhelming", "desire", "to", "believe", "the", "police", ",", "whew", "!"]
(c7-2 / multi-sentence
      :snt1 (c7-8 / right-06
                  :ARG1 (c7-0 / you))
      :snt2 (c7-9 / contrast-01
                  :ARG1 (c7-12 / kno-polarity
                               :ARG0 (c7-1 / we)
                               :ARG1 (c7-5 / event))
                  :ARG2 (c7-10 / desire-01
                               :ARG0 (c7-11 / you)
                               :ARG1 (c7-3 / believe-01
                                           :ARG0 c7-11
                                           :ARG1 (c7-7 / police))
                               :ARG0-of (c7-4 / overwhelm-01))
                  :mod (c7-6 / whew
                             :mode expressive)))

# ::snt SHOPLIFTING &amp; Robbery are different things! BOGUS! Where's the call about a "robbery"????
# ::tokens ["SHOPLIFTING", "&", "amp", ";", "Robbery", "are", "different", "things", "!", "BOGUS", "!", "Where", "'s", "the", "call", "about", "a", "\"", "robbery", "\"", "?", "?", "?", "?"]
# ::lemmas ["SHOPLIFTING", "&", "amp", ";", "Robbery", "be", "different", "thing", "!", "bogus", "!", "where", "be", "the", "call", "about", "a", "\"", "robbery", "\"", "?", "?", "?", "?"]
(c8-0 / multi-sentence
      :snt1 (c8-8 / and
                  :op1 (c8-7 / shit-01)
                  :op2 (c8-1 / booze))
      :snt2 (c8-4 / differ-02
                  :ARG1 (c8-5 / rob-01))
      :snt3 (c8-6 / call-03
                  :ARG1 (c8-3 / rob-01)
                  :location (c8-2 / amr-unknown)))

# ::snt That was very "SLICK" of the Police Chief to create a narrative that was a "suspect" in a robbery!
# ::tokens ["That", "was", "very", "\"", "SLICK", "\"", "of", "the", "Police", "Chief", "to", "create", "a", "narrative", "that", "was", "a", "\"", "suspect", "\"", "in", "a", "robbery", "!"]
# ::lemmas ["that", "be", "very", "\"", "slick", "\"", "of", "the", "Police", "Chief", "to", "create", "a", "narrative", "that", "be", "a", "\"", "suspect", "\"", "in", "a", "robbery", "!"]
(c9-8 / sick-02
      :ARG0 (c9-6 / create-01
                  :ARG1 (c9-2 / narrate-01
                              :ARG1 (c9-4 / person
                                          :ARG1-of (c9-1 / suspect-01
                                                         :time (c9-5 / rob-01))
                                          :ARG1-of c9-8)))
      :ARG0-of (c9-0 / have-org-role-91
                     :ARG1 (c9-9 / police)
                     :ARG2 (c9-7 / chief))
      :degree (c9-3 / very))

# ::snt : That was very "SLICK" of the Police Chief to create a narrative that was a "suspect" in a robbery!
# ::tokens [":", "That", "was", "very", "\"", "SLICK", "\"", "of", "the", "Police", "Chief", "to", "create", "a", "narrative", "that", "was", "a", "\"", "suspect", "\"", "in", "a", "robbery", "!"]
# ::lemmas [":", "that", "be", "very", "\"", "slick", "\"", "of", "the", "Police", "Chief", "to", "create", "a", "narrative", "that", "be", "a", "\"", "suspect", "\"", "in", "a", "robbery", "!"]
(c10-1 / lucky
       :degree (c10-3 / very)
       :domain (c10-4 / person
                      :ARG0-of (c10-0 / have-org-role-91
                                      :ARG1 (c10-9 / police)
                                      :ARG2 (c10-6 / chief)))
       :purpose (c10-5 / create-01
                       :ARG0 c10-4
                       :ARG1 (c10-2 / narrate-01
                                    :ARG1 c10-9
                                    :ARG1-of (c10-8 / suspect-01
                                                    :time (c10-7 / rob-01)))))

# ::snt if that's what makes you feel better about 's murder.....
# ::tokens ["if", "that", "'s", "what", "makes", "you", "feel", "better", "about", "'s", "murder", "....."]
# ::lemmas ["if", "that", "be", "what", "make", "you", "feel", "well", "about", "be", "murder", "....."]
(c11-0 / have-condition-91
       :ARG2 (c11-3 / make-02
                    :ARG0 (c11-8 / that)
                    :ARG1 (c11-2 / feel-01
                                 :ARG0 (c11-1 / you)
                                 :ARG1 (c11-7 / good-02
                                              :ARG2-of (c11-9 / have-degree-91
                                                              :ARG1 c11-2
                                                              :ARG3 (c11-5 / more)))
                                 :ARG2 (c11-4 / murder-01
                                              :ARG1 (c11-6 / person)))))

# ::snt ALWAYS FILM COPS! Even if u dont know the person being arrested, exercise ur RIGHT and FILM!
# ::tokens ["ALWAYS", "FILM", "COPS", "!", "Even", "if", "u", "do", "nt", "know", "the", "person", "being", "arrested", ",", "exercise", "ur", "RIGHT", "and", "FILM", "!"]
# ::lemmas ["ALWAYS", "FILM", "COPS", "!", "even", "if", "u", "do", "not", "know", "the", "person", "be", "arrest", ",", "exercise", "ur", "right", "and", "FILM", "!"]
(c12-4 / multi-sentence
       :snt1 (c12-3 / file-01
                    :ARG0 (c12-1 / you)
                    :ARG1 (c12-11 / cop)
                    :ARG1-of (c12-6 / easy-05)
                    :mode imperative)
       :snt2 (c12-0 / have-concession-91
                    :ARG1 (c12-14 / and
                                  :op1 (c12-5 / exercise-01
                                              :ARG0 (c12-12 / you)
                                              :ARG1 (c12-10 / right-05
                                                            :ARG1 c12-12)
                                              :mode imperative)
                                  :op2 (c12-8 / file-01
                                              :ARG0 c12-12
                                              :mode imperative))
                    :ARG2 (c12-2 / even-if
                                 :op1 (c12-13 / know-01
                                              :ARG0 c12-12
                                              :ARG1 (c12-7 / arrest-01
                                                           :ARG1 (c12-9 / person))
                                              :polarity -))))

# ::snt not the same - the st the guy is muscle the last he big boy - just doesn't look the same to me
# ::tokens ["not", "the", "same", "-", "the", "st", "the", "guy", "is", "muscle", "the", "last", "he", "big", "boy", "-", "just", "does", "n't", "look", "the", "same", "to", "me"]
# ::lemmas ["not", "the", "same", "-", "the", "st", "the", "guy", "be", "muscle", "the", "last", "he", "big", "boy", "-", "just", "do", "not", "look", "the", "same", "to", "i"]
(c13-11 / and
        :op1 (c13-10 / same-01
                     :polarity -)
        :op2 (c13-2 / muscle
                    :domain (c13-7 / guy)
                    :ARG1-of (c13-6 / compare-01
                                    :ARG2 (c13-3 / boy
                                                 :mod (c13-8 / big)
                                                 :mod (c13-1 / last)
                                                 :domain c13-7)))
        :op3 (c13-9 / look-02
                    :ARG1 (c13-4 / same-01)
                    :ARG2 (c13-5 / i)
                    :mod (c13-0 / just)
                    :polarity -))

# ::snt : That was very "SLICK" of the Police Chief to create a narrative that was a "suspect" in a robbery!
# ::tokens [":", "That", "was", "very", "\"", "SLICK", "\"", "of", "the", "Police", "Chief", "to", "create", "a", "narrative", "that", "was", "a", "\"", "suspect", "\"", "in", "a", "robbery", "!"]
# ::lemmas [":", "that", "be", "very", "\"", "slick", "\"", "of", "the", "Police", "Chief", "to", "create", "a", "narrative", "that", "be", "a", "\"", "suspect", "\"", "in", "a", "robbery", "!"]
(c14-1 / lucky
       :degree (c14-3 / very)
       :domain (c14-4 / person
                      :ARG0-of (c14-0 / have-org-role-91
                                      :ARG1 (c14-9 / police)
                                      :ARG2 (c14-6 / chief)))
       :purpose (c14-5 / create-01
                       :ARG0 c14-4
                       :ARG1 (c14-2 / narrate-01
                                    :ARG1 c14-9
                                    :ARG1-of (c14-8 / suspect-01
                                                    :time (c14-7 / rob-01)))))

# ::snt because he committed a crime he was deserving to be murdered? So we gonna go out and kill wallSt?
# ::tokens ["because", "he", "committed", "a", "crime", "he", "was", "deserving", "to", "be", "murdered", "?", "So", "we", "gon", "na", "go", "out", "and", "kill", "wallSt", "?"]
# ::lemmas ["because", "he", "commit", "a", "crime", "he", "be", "deserve", "to", "be", "murder", "?", "so", "we", "going", "to", "go", "out", "and", "kill", "wallSt", "?"]
(c15-2 / multi-sentence
       :snt1 (c15-8 / cause-01
                    :ARG0 (c15-7 / commit-02
                                 :ARG0 (c15-0 / he)
                                 :ARG1 (c15-12 / crime-02
                                               :ARG0 c15-0
                                               :ARG0-of (c15-9 / deserve-01
                                                               :ARG1 (c15-6 / murder-01
                                                                            :ARG1 c15-0))))
                    :polarity (c15-14 / amr-unknown))
       :snt2 (c15-15 / cause-01
                     :ARG0 (c15-3 / and
                                  :op1 (c15-10 / go-out-17
                                               :ARG0 (c15-1 / we))
                                  :op2 (c15-13 / kill-01
                                               :ARG0 c15-1
                                               :ARG1 (c15-11 / person
                                                             :name (c15-4 / name
                                                                          :op1 "WallSt")))
                                  :polarity (c15-5 / amr-unknown))))

# ::snt : I've seen the video...Brown and Johnson robbed a store. OK!I'd like to see it too
# ::tokens [":", "I", "'ve", "seen", "the", "video", "...", "Brown", "and", "Johnson", "robbed", "a", "store", ".", "OK!I'd", "like", "to", "see", "it", "too"]
# ::lemmas [":", "i", "'ve", "see", "the", "video", "...", "Brown", "and", "Johnson", "rob", "a", "store", ".", "ok!i'd", "like", "to", "see", "it", "too"]
(c16-0 / multi-sentence
       :snt1 (c16-10 / see-01
                     :ARG0 (c16-3 / i)
                     :ARG1 (c16-5 / video
                                  :topic (c16-7 / rob-01
                                                :ARG0 (c16-12 / and
                                                              :op1 (c16-6 / person
                                                                          :name (c16-4 / name
                                                                                       :op1 "Brown"))
                                                              :op2 (c16-11 / person
                                                                           :name (c16-8 / name
                                                                                        :op1 "Johnson")))
                                                :ARG1 (c16-2 / store))))
       :snt2 (c16-1 / okay-01
                    :ARG1 (c16-9 / i)
                    :mode expressive))

# ::snt I get that but the body types are different in the images/my son dad is '4- muscle boys vs big boys
# ::tokens ["I", "get", "that", "but", "the", "body", "types", "are", "different", "in", "the", "images", "/", "my", "son", "dad", "is", "'", "4-", "muscle", "boys", "vs", "big", "boys"]
# ::lemmas ["i", "get", "that", "but", "the", "body", "type", "be", "different", "in", "the", "image", "/", "my", "son", "dad", "be", "'", "4-", "muscle", "boy", "vs", "big", "boy"]
(c17-7 / contrast-01
       :ARG1 (c17-8 / get-01
                    :ARG0 (c17-4 / i)
                    :ARG1 (c17-14 / that))
       :ARG2 (c17-6 / differ-02
                    :ARG1 (c17-10 / type
                                  :mod (c17-2 / body))
                    :location (c17-9 / image))
       :ARG1-of (c17-11 / cause-01
                        :ARG0 (c17-12 / compare-01
                                      :ARG1 (c17-13 / boy
                                                    :mod (c17-1 / muscle)
                                                    :quant 4)
                                      :ARG2 (c17-3 / boy
                                                   :mod (c17-16 / big))
                                      :domain (c17-5 / person
                                                     :ARG0-of (c17-0 / have-rel-role-91
                                                                     :ARG1 c17-4
                                                                     :ARG2 (c17-15 / son))))))

# ::snt he was racially profiled because he fit the description of a strong arm robber?
# ::tokens ["he", "was", "racially", "profiled", "because", "he", "fit", "the", "description", "of", "a", "strong", "arm", "robber", "?"]
# ::lemmas ["he", "be", "racially", "profile", "because", "he", "fit", "the", "description", "of", "a", "strong", "arm", "robber", "?"]
(c18-4 / profil-01
       :polarity (c18-10 / amr-unknown)
       :ARG1 (c18-0 / he)
       :manner (c18-5 / race)
       :ARG1-of (c18-6 / cause-01
                       :ARG0 (c18-1 / fit-06
                                    :ARG1 c18-0
                                    :ARG2 (c18-7 / describe-01
                                                 :ARG1 c18-0
                                                 :ARG2 (c18-9 / person
                                                              :ARG0-of (c18-3 / rob-01
                                                                              :manner (c18-2 / arm
                                                                                             :ARG1-of (c18-8 / strong-02))))))))

# ::snt of course because they want to try and make black people look as bad as possible and worth them killing.
# ::tokens ["of", "course", "because", "they", "want", "to", "try", "and", "make", "black", "people", "look", "as", "bad", "as", "possible", "and", "worth", "them", "killing", "."]
# ::lemmas ["of", "course", "because", "they", "want", "to", "try", "and", "make", "black", "people", "look", "as", "bad", "as", "possible", "and", "worth", "they", "kill", "."]
(c19-10 / cause-01
        :ARG0 (c19-1 / want-01
                     :ARG0 (c19-13 / they)
                     :ARG1 (c19-15 / and
                                   :op1 (c19-12 / try-01
                                                :ARG0 c19-13
                                                :ARG1 (c19-3 / make-02
                                                             :ARG0 c19-13
                                                             :ARG1 (c19-2 / look-02
                                                                          :ARG0 (c19-9 / person
                                                                                       :ARG1-of (c19-4 / black-05))
                                                                          :ARG1 (c19-11 / bad-07
                                                                                        :ARG2-of (c19-0 / have-degree-91
                                                                                                        :ARG1 c19-9
                                                                                                        :ARG3 (c19-6 / equal)
                                                                                                        :ARG4 (c19-14 / possible-01
                                                                                                                      :ARG1 c19-2)))))
                                                :op2 (c19-7 / worth-02
                                                            :ARG1 c19-9
                                                            :ARG2 (c19-8 / kill-01
                                                                         :ARG1 c19-9))))
                     :mod (c19-5 / of-course)))

# ::snt Yeah...I caught that too. "VERY SLICK" Seeing the framing of the lie starting now!
# ::tokens ["Yeah", "...", "I", "caught", "that", "too", ".", "\"", "VERY", "SLICK", "\"", "Seeing", "the", "framing", "of", "the", "lie", "starting", "now", "!"]
# ::lemmas ["yeah", "...", "i", "catch", "that", "too", ".", "\"", "very", "slick", "\"", "see", "the", "framing", "of", "the", "lie", "start", "now", "!"]
(c20-2 / multi-sentence
       :snt1 (c20-8 / catch-02
                    :ARG0 (c20-6 / i)
                    :ARG1 (c20-11 / that)
                    :mod (c20-9 / too))
       :snt2 (c20-10 / slap-01
                     :degree (c20-0 / hardly))
       :snt3 (c20-5 / see-01
                    :ARG1 (c20-1 / frame-06
                                 :ARG1 (c20-3 / lie-08))
                    :ARG1-of (c20-4 / start-01
                                    :time (c20-7 / now))))

# ::snt I'm sorry that is not the same person on all those pic - body types are totally different
# ::tokens ["I", "'m", "sorry", "that", "is", "not", "the", "same", "person", "on", "all", "those", "pic", "-", "body", "types", "are", "totally", "different"]
# ::lemmas ["i", "be", "sorry", "that", "be", "not", "the", "same", "person", "on", "all", "those", "pic", "-", "body", "type", "be", "totally", "different"]
(c21-0 / multi-sentence
       :snt1 (c21-9 / sorry-01
                    :ARG1 (c21-4 / i)
                    :ARG2 (c21-2 / same-01
                                 :ARG1 (c21-10 / that)
                                 :ARG2 (c21-6 / person)
                                 :topic (c21-11 / picture
                                                :mod (c21-8 / that)
                                                :mod (c21-12 / all))
                                 :polarity -))
       :snt2 (c21-7 / differ-02
                    :ARG1 (c21-5 / type
                                 :mod (c21-1 / body))
                    :degree (c21-3 / total)))

# ::snt Come on now.......
# ::tokens ["Come", "on", "now", "......."]
# ::lemmas ["come", "on", "now", "......."]
(c22-2 / come-on-25
       :ARG1 (c22-1 / you)
       :time (c22-0 / now)
       :mode imperative)

# ::snt exactly my point a muscle bound guy shows chest-wise /big guy has softer shoulders round in belly
# ::tokens ["exactly", "my", "point", "a", "muscle", "bound", "guy", "shows", "chest", "-", "wise", "/big", "guy", "has", "softer", "shoulders", "round", "in", "belly"]
# ::lemmas ["exactly", "my", "point", "a", "muscle", "bind", "guy", "show", "chest", "-", "wise", "/big", "guy", "have", "soft", "shoulder", "round", "in", "belly"]
(c23-3 / point-04
       :ARG0 (c23-16 / i)
       :ARG1 (c23-5 / show-01
                    :ARG0 (c23-15 / guy
                                  :ARG1-of (c23-9 / bind-01
                                                  :ARG2 (c23-0 / muscle)))
                    :ARG1 (c23-11 / slash
                                  :op1 (c23-7 / have-03
                                              :ARG0 (c23-4 / guy
                                                           :mod (c23-17 / big))
                                              :ARG1 (c23-20 / shoulder
                                                            :ARG1-of (c23-6 / have-degree-91
                                                                            :ARG2 (c23-10 / soft-02
                                                                                          :ARG1 c23-20)
                                                                            :ARG3 (c23-13 / more))))
                                  :op2 (c23-2 / have-03
                                              :ARG0 c23-4
                                              :ARG1 (c23-19 / shoulder
                                                            :ARG1-of (c23-18 / have-degree-91
                                                                             :ARG2 (c23-1 / soft-02
                                                                                          :ARG1 c23-19)
                                                                             :ARG3 (c23-8 / more)))
                                              :location (c23-14 / round
                                                                :op1 (c23-21 / belly)))))
       :mod (c23-12 / exact))

# ::snt if they were both suspects in a robbery, why wasn't JOHNSON arrested or taken inti custody?
# ::tokens ["if", "they", "were", "both", "suspects", "in", "a", "robbery", ",", "why", "was", "n't", "JOHNSON", "arrested", "or", "taken", "inti", "custody", "?"]
# ::lemmas ["if", "they", "be", "both", "suspect", "in", "a", "robbery", ",", "why", "be", "not", "JOHNSON", "arrest", "or", "take", "inti", "custody", "?"]
(c24-1 / or
       :op1 (c24-12 / arrest-01
                    :ARG1 (c24-5 / person
                                 :name (c24-4 / name
                                              :op1 "JOHNSON"))
                    :polarity -)
       :op2 (c24-11 / take-01
                    :ARG1 c24-5
                    :ARG3 (c24-7 / custody
                                 :mod (c24-3 / inti))
                    :polarity -)
       :condition (c24-10 / suspect-01
                          :ARG1 (c24-9 / they
                                       :mod (c24-0 / both))
                          :ARG2 (c24-6 / rob-01))
       :ARG1-of (c24-8 / cause-01
                       :ARG0 (c24-2 / amr-unknown)))

# ::snt are the still pictures are at the Quicktrip about some cigars/candy or the liquor store?
# ::tokens ["are", "the", "still", "pictures", "are", "at", "the", "Quicktrip", "about", "some", "cigars", "/", "candy", "or", "the", "liquor", "store", "?"]
# ::lemmas ["be", "the", "still", "picture", "be", "at", "the", "Quicktrip", "about", "some", "cigar", "/", "candy", "or", "the", "liquor", "store", "?"]
(c25-3 / be-located-at-91
       :ARG1 (c25-8 / picture-01
                    :ARG1 (c25-4 / or
                                 :op1 (c25-10 / cigar
                                              :mod (c25-11 / some))
                                 :op2 (c25-9 / candy
                                             :mod (c25-6 / some))
                                 :op3 (c25-0 / store
                                             :mod (c25-1 / liquor)))
                    :mod (c25-5 / still))
       :ARG2 (c25-2 / facility
                    :name (c25-7 / name
                                 :op1 "Quicktrip"))
       :polarity (c25-12 / amr-unknown))

# ::snt I don't care if he had a rap sheet a mile long! Does that mean he can then be gunned down?
# ::tokens ["I", "do", "n't", "care", "if", "he", "had", "a", "rap", "sheet", "a", "mile", "long", "!", "Does", "that", "mean", "he", "can", "then", "be", "gunned", "down", "?"]
# ::lemmas ["i", "do", "not", "care", "if", "he", "have", "a", "rap", "sheet", "a", "mile", "long", "!", "do", "that", "mean", "he", "can", "then", "be", "gun", "down", "?"]
(c26-2 / multi-sentence
       :snt1 (c26-9 / care-01
                    :ARG0 (c26-5 / i)
                    :ARG1 (c26-15 / truth-value
                                  :polarity-of (c26-0 / have-03
                                                      :ARG0 (c26-16 / he)
                                                      :ARG1 (c26-13 / sheet
                                                                    :mod (c26-8 / rap)
                                                                    :ARG1-of (c26-1 / long-03
                                                                                    :ARG2 (c26-10 / distance-quantity
                                                                                                  :unit (c26-7 / mile)
                                                                                                  :quant 1)))))
                    :polarity -)
       :snt2 (c26-3 / mean-01
                    :polarity (c26-14 / amr-unknown)
                    :ARG1 c26-0
                    :ARG2 (c26-11 / possible-01
                                  :ARG1 (c26-4 / shoot-down-05
                                               :ARG1 (c26-6 / he)
                                               :time (c26-12 / then)))))

# ::snt exactly..Not saying I can't be wrong but I know big guys/ kiddo dad is muscle big- it's different guys
# ::tokens ["exactly", "..", "Not", "saying", "I", "ca", "n't", "be", "wrong", "but", "I", "know", "big", "guys/", "kiddo", "dad", "is", "muscle", "big-", "it", "'s", "different", "guys"]
# ::lemmas ["exactly", "..", "not", "say", "i", "can", "not", "be", "wrong", "but", "i", "know", "big", "guys/", "kiddo", "dad", "be", "muscle", "big-", "it", "be", "different", "guy"]
(c27-1 / multi-sentence
       :snt1 (c27-9 / exact)
       :snt2 (c27-18 / contrast-01
                     :ARG1 (c27-5 / say-01
                                  :ARG0 (c27-15 / i)
                                  :ARG1 (c27-2 / possible-01
                                               :ARG1 (c27-13 / wrong-04
                                                             :ARG1 c27-15)
                                               :polarity -)
                                  :polarity -)
                     :ARG2 (c27-17 / know-01
                                   :ARG0 c27-15
                                   :ARG1 (c27-11 / muscle
                                                 :mod (c27-8 / big)
                                                 :domain (c27-10 / slash
                                                                 :op1 (c27-12 / guy
                                                                              :mod (c27-16 / big))
                                                                 :op2 (c27-6 / person
                                                                             :ARG0-of (c27-7 / have-rel-role-91
                                                                                             :ARG1 c27-15
                                                                                             :ARG2 (c27-3 / dad))
                                                                             :mod (c27-14 / kid))))))
       :snt3 (c27-0 / differ-02
                    :ARG1 (c27-4 / guy)))

# ::snt I totally agree!!!
# ::tokens ["I", "totally", "agree", "!", "!", "!"]
# ::lemmas ["i", "totally", "agree", "!", "!", "!"]
(c28-2 / agree-01
       :ARG0 (c28-1 / i)
       :degree (c28-0 / total)
       :mode expressive)

# ::snt We need b careful of jumping conclusions. Waiting to see this videotape.
# ::tokens ["We", "need", "b", "careful", "of", "jumping", "conclusions", ".", "Waiting", "to", "see", "this", "videotape", "."]
# ::lemmas ["we", "need", "b", "careful", "of", "jump", "conclusion", ".", "wait", "to", "see", "this", "videotape", "."]
(c29-2 / multi-sentence
       :snt1 (c29-5 / need-01
                    :ARG0 (c29-1 / we)
                    :ARG1 (c29-8 / care-04
                                 :ARG0 c29-1
                                 :ARG1 (c29-7 / conclude-01
                                              :ARG0 c29-1
                                              :ARG1-of (c29-0 / jump-03
                                                              :ARG0 c29-1))))
       :snt2 (c29-4 / wait-01
                    :ARG1 (c29-3 / i)
                    :ARG2 (c29-9 / see-01
                                 :ARG0 c29-3
                                 :ARG1 (c29-6 / videotape
                                              :mod (c29-10 / this)))))

# ::snt he knew what he was doing. Smh!
# ::tokens ["he", "knew", "what", "he", "was", "doing", ".", "Smh", "!"]
# ::lemmas ["he", "know", "what", "he", "be", "do", ".", "Smh", "!"]
(c30-1 / multi-sentence
       :snt1 (c30-2 / know-01
                    :ARG0 (c30-0 / he)
                    :ARG1 (c30-5 / thing
                                 :ARG1-of (c30-3 / do-02
                                                 :ARG0 (c30-6 / he))))
       :snt2 (c30-4 / smh
                    :mode expressive))

# ::snt key word: create...if that were true, that could've been released Sunday...smh
# ::tokens ["key", "word", ":", "create", "...", "if", "that", "were", "true", ",", "that", "could", "'ve", "been", "released", "Sunday", "...", "smh"]
# ::lemmas ["key", "word", ":", "create", "...", "if", "that", "be", "true", ",", "that", "could", "'ve", "be", "release", "Sunday", "...", "smh"]
(c31-0 / word
       :ARG1-of (c31-9 / key-02)
       :domain (c31-5 / create-01)
       :ARG1-of (c31-1 / mean-01
                       :ARG2 (c31-3 / possible-01
                                    :ARG1 (c31-4 / release-01
                                                 :ARG1 c31-5
                                                 :time (c31-6 / date-entity
                                                              :weekday (c31-7 / sunday)))
                                    :condition (c31-8 / true-01
                                                      :ARG1 c31-5)))
       :mod (c31-2 / smh
                   :mode expressive))

# ::snt CRAZY
# ::tokens ["CRAZY"]
# ::lemmas ["crazy"]
(c32-0 / routine)

# ::snt so the ? Becomes, why is this impt to his murder? Less innocent=kool to kill?
# ::tokens ["so", "the", "?", "Becomes", ",", "why", "is", "this", "impt", "to", "his", "murder", "?", "Less", "innocent", "=", "kool", "to", "kill", "?"]
# ::lemmas ["so", "the", "?", "become", ",", "why", "be", "this", "impt", "to", "his", "murder", "?", "less", "innocent", "=", "kool", "to", "kill", "?"]
(c33-2 / multi-sentence
       :snt1 (c33-11 / so)
       :snt2 (c33-10 / cause-01
                     :ARG0 (c33-13 / amr-unknown)
                     :ARG1 (c33-9 / commit-01
                                  :ARG1 (c33-12 / this)
                                  :ARG2 (c33-8 / murder-01
                                               :ARG1 (c33-0 / he))))
       :snt3 (c33-4 / equal-01
                    :ARG1 (c33-6 / innocent-01
                                 :ARG1-of (c33-1 / have-quant-91
                                                 :ARG3 (c33-3 / less)))
                    :ARG2 (c33-7 / kool
                                 :purpose (c33-5 / kill-01))))

# ::snt So they shot him times because he was a "suspect"? Still doesn't make any sense.
# ::tokens ["So", "they", "shot", "him", "times", "because", "he", "was", "a", "\"", "suspect", "\"", "?", "Still", "does", "n't", "make", "any", "sense", "."]
# ::lemmas ["so", "they", "shoot", "he", "time", "because", "he", "be", "a", "\"", "suspect", "\"", "?", "still", "do", "not", "make", "any", "sense", "."]
(c34-2 / multi-sentence
       :snt1 (c34-8 / shoot-02
                    :ARG0 (c34-9 / they)
                    :ARG1 (c34-0 / he)
                    :frequency (c34-7 / time)
                    :ARG1-of (c34-6 / cause-01
                                    :ARG0 (c34-5 / police
                                                 :domain c34-0)))
       :snt2 (c34-3 / sense-02
                    :ARG1 (c34-4 / it)
                    :mod (c34-1 / still)
                    :polarity -))

# ::snt so youve seen the video no one else has seen?
# ::tokens ["so", "you", "ve", "seen", "the", "video", "no", "one", "else", "has", "seen", "?"]
# ::lemmas ["so", "you", "ve", "see", "the", "video", "no", "one", "else", "have", "see", "?"]
(c35-5 / see-01
       :polarity (c35-6 / amr-unknown)
       :ARG0 (c35-0 / you)
       :ARG1 (c35-4 / video
                    :ARG1-of (c35-1 / see-01
                                    :ARG0 (c35-3 / no-one
                                                 :mod (c35-2 / else)))))

# ::snt Thanks! I'll check it out!
# ::tokens ["Thanks", "!", "I", "'ll", "check", "it", "out", "!"]
# ::lemmas ["thank", "!", "i", "'ll", "check", "it", "out", "!"]
(c36-1 / multi-sentence
       :snt1 (c36-5 / thank-01
                    :ARG0 (c36-2 / i)
                    :ARG1 (c36-0 / you)
                    :mode expressive)
       :snt2 (c36-3 / check-out-05
                    :ARG0 c36-2
                    :ARG1 (c36-4 / it)))

# ::snt I thought Mike Brown was "struggling" for the cops gun? Total lies by police chief
# ::tokens ["I", "thought", "Mike", "Brown", "was", "\"", "struggling", "\"", "for", "the", "cops", "gun", "?", "Total", "lies", "by", "police", "chief"]
# ::lemmas ["i", "think", "Mike", "Brown", "be", "\"", "struggle", "\"", "for", "the", "cop", "gun", "?", "total", "lie", "by", "police", "chief"]
(c37-2 / multi-sentence
       :snt1 (c37-13 / think-01
                     :ARG0 (c37-4 / i)
                     :ARG1 (c37-12 / struggle-02
                                   :ARG0 (c37-7 / person
                                                :name (c37-5 / name
                                                             :op1 "Mike"
                                                             :op2 "Brown"))
                                   :ARG2 (c37-10 / gun
                                                 :poss (c37-9 / cop))))
       :snt2 (c37-11 / thing
                     :ARG1-of (c37-1 / lie-08
                                     :ARG0 (c37-14 / person
                                                   :ARG0-of (c37-0 / have-org-role-91
                                                                   :ARG1 (c37-3 / police
                                                                                :ARG2 (c37-8 / chief)))
                                                   :mod (c37-6 / total)))))

# ::snt Ok
# ::tokens ["Ok"]
# ::lemmas ["ok"]
(c38-0 / okay-01)
