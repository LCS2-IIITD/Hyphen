# ::snt Wow if only as much space was spent on crimes commited by POTUS!!
# ::tokens ["Wow", "if", "only", "as", "much", "space", "was", "spent", "on", "crimes", "commited", "by", "POTUS", "!", "!"]
# ::lemmas ["wow", "if", "only", "as", "much", "space", "be", "spend", "on", "crime", "commit", "by", "POTUS", "!", "!"]
(c1-0 / have-condition-91
      :ARG2 (c1-12 / spend-02
                   :ARG1 (c1-10 / crime-02
                                :ARG1-of (c1-9 / commit-02
                                               :ARG0 (c1-8 / person
                                                           :ARG0-of (c1-14 / have-org-role-91
                                                                           :ARG1 (c1-11 / country
                                                                                        :name (c1-6 / name
                                                                                                    :op1 "United"
                                                                                                    :op2 "States"))
                                                                           :ARG2 (c1-13 / president)))))
                   :ARG2 (c1-4 / space
                               :ARG1-of (c1-7 / have-quant-91
                                              :ARG2 (c1-2 / much)
                                              :ARG3 (c1-5 / equal
                                                          :mod (c1-3 / only)))))
      :mod (c1-1 / wow
                 :mode expressive))

# ::snt . What a cozy little pocket of racism in how many like it across the country?
# ::tokens [".", "What", "a", "cozy", "little", "pocket", "of", "racism", "in", "how", "many", "like", "it", "across", "the", "country", "?"]
# ::lemmas [".", "what", "a", "cozy", "little", "pocket", "of", "racism", "in", "how", "many", "like", "it", "across", "the", "country", "?"]
(c2-5 / pocket
      :polarity (c2-9 / amr-unknown)
      :mod (c2-0 / little)
      :mod (c2-7 / cozy)
      :mod (c2-6 / racism)
      :ARG1-of (c2-3 / resemble-01
                     :ARG2 (c2-2 / it)
                     :location (c2-1 / across
                                     :op1 (c2-8 / country))
                     :quant (c2-4 / amr-unknown)))

# ::snt Report: police beat up wrong suspect then charged him for getting blood on uniforms in
# ::tokens ["Report", ":", "police", "beat", "up", "wrong", "suspect", "then", "charged", "him", "for", "getting", "blood", "on", "uniforms", "in"]
# ::lemmas ["report", ":", "police", "beat", "up", "wrong", "suspect", "then", "charge", "he", "for", "get", "blood", "on", "uniform", "in"]
(c3-4 / report-01
      :ARG1 (c3-11 / and
                   :op1 (c3-2 / beat-up-05
                              :ARG0 (c3-3 / police)
                              :ARG1 (c3-10 / person
                                           :ARG2-of (c3-8 / suspect-01)
                                           :ARG1-of (c3-0 / wrong-04)))
                   :op2 (c3-5 / charge-05
                              :ARG0 c3-3
                              :ARG1 c3-10
                              :ARG2 (c3-6 / get-01
                                          :ARG0 c3-10
                                          :ARG1 (c3-7 / blood
                                                      :location (c3-1 / uniform)))
                              :time (c3-9 / then))))

# ::snt This story is why I would NEVER trust police version of a anything in .
# ::tokens ["This", "story", "is", "why", "I", "would", "NEVER", "trust", "police", "version", "of", "a", "anything", "in", "."]
# ::lemmas ["this", "story", "be", "why", "i", "would", "NEVER", "trust", "police", "version", "of", "a", "anything", "in", "."]
(c4-4 / cause-01
      :ARG0 (c4-7 / story
                  :mod (c4-8 / this))
      :ARG1 (c4-6 / trust-02
                  :ARG0 (c4-1 / i)
                  :ARG1 (c4-2 / version
                              :mod (c4-3 / police)
                              :mod (c4-9 / anything
                                         :location (c4-5 / inside)))
                  :time (c4-0 / ever)
                  :polarity -))
