# ::snt Terrorists are probably doing it. After all, Terrorists are NOT Muslims at all. They're dumbasses is what they really are.
# ::tokens ["Terrorists", "are", "probably", "doing", "it", ".", "After", "all", ",", "Terrorists", "are", "NOT", "Muslims", "at", "all", ".", "They", "'re", "dumbasses", "is", "what", "they", "really", "are", "."]
# ::lemmas ["terrorist", "be", "probably", "do", "it", ".", "after", "all", ",", "Terrorists", "be", "not", "Muslims", "at", "all", ".", "they", "be", "dumbass", "be", "what", "they", "really", "be", "."]
(c1-1 / multi-sentence
      :snt1 (c1-7 / probable
                  :domain (c1-8 / do-02
                                :ARG0 (c1-11 / terrorist)
                                :ARG1 (c1-3 / it)))
      :snt2 (c1-12 / person
                   :mod (c1-9 / religious-group
                              :name (c1-5 / name
                                          :op1 "Islam"))
                   :domain (c1-10 / terrorist)
                   :mod (c1-13 / at-all)
                   :mod (c1-2 / after-all)
                   :polarity -)
      :snt3 (c1-0 / dumbass
                  :domain (c1-6 / they)
                  :ARG1-of (c1-4 / real-04)))

# ::snt : PARIS HOSTAGE SITUATIONS:-At printing house-Holding hostage-At kosher supermarket-Holding hostages
# ::tokens [":", "PARIS", "HOSTAGE", "SITUATIONS:-At", "printing", "house", "-", "Holding", "hostage", "-", "At", "kosher", "supermarket", "-", "Holding", "hostages"]
# ::lemmas [":", "PARIS", "HOSTAGE", "SITUATIONS:-At", "print", "house", "-", "hold", "hostage", "-", "at", "kosher", "supermarket", "-", "hold", "hostage"]
(c2-9 / situate-01
      :ARG1 (c2-8 / government-organization
                  :name (c2-5 / name
                              :op1 "Parliament"))
      :ARG2 (c2-11 / and
                   :op1 (c2-0 / hold-01
                              :ARG1 (c2-1 / hostage)
                              :location (c2-6 / house
                                              :ARG1-of (c2-7 / print-01)))
                   :op2 (c2-3 / hold-01
                              :ARG1 c2-1
                              :location (c2-4 / supermarket
                                              :mod (c2-10 / kosher)))
                   :op3 (c2-2 / hold-01
                              :ARG1 c2-1)))

# ::snt PARIS HOSTAGE SITUATIONS:-At printing house-Holding hostage-At kosher supermarket-Holding hostagesStay with for the latest
# ::tokens ["PARIS", "HOSTAGE", "SITUATIONS:-At", "printing", "house", "-", "Holding", "hostage", "-", "At", "kosher", "supermarket", "-", "Holding", "hostagesStay", "with", "for", "the", "latest"]
# ::lemmas ["PARIS", "HOSTAGE", "SITUATIONS:-At", "print", "house", "-", "hold", "hostage", "-", "at", "kosher", "supermarket", "-", "hold", "hostagesstay", "with", "for", "the", "late"]
(c3-11 / situate-01
       :ARG1 (c3-10 / city
                    :name (c3-7 / name
                                :op1 "Paris"))
       :ARG2 (c3-14 / and
                    :op1 (c3-0 / hold-01
                               :ARG1 (c3-2 / hostage)
                               :location (c3-8 / house
                                               :ARG1-of (c3-9 / print-01)))
                    :op2 (c3-5 / hold-01
                               :ARG1 c3-2
                               :location (c3-6 / supermarket
                                               :mod (c3-13 / kosher)))
                    :op3 (c3-3 / stay-01
                               :ARG1 (c3-1 / you)
                               :purpose (c3-12 / thing
                                               :mod (c3-4 / last)))))

# ::snt bring your tazer!
# ::tokens ["bring", "your", "tazer", "!"]
# ::lemmas ["bring", "your", "tazer", "!"]
(c4-2 / bring-01
      :ARG0 (c4-0 / you)
      :ARG1 (c4-1 / tazer)
      :mode imperative)

# ::snt Couldn't be more right. Do Christians have to apologize every time one nut job kills someone? Of course not. Not defining
# ::tokens ["Could", "n't", "be", "more", "right", ".", "Do", "Christians", "have", "to", "apologize", "every", "time", "one", "nut", "job", "kills", "someone", "?", "Of", "course", "not", ".", "Not", "defining"]
# ::lemmas ["could", "not", "be", "more", "right", ".", "do", "Christians", "have", "to", "apologize", "every", "time", "one", "nut", "job", "kill", "someone", "?", "of", "course", "not", ".", "not", "define"]
(c5-2 / multi-sentence
      :snt1 (c5-9 / possible-01
                  :ARG1 (c5-10 / right-06
                               :ARG2-of (c5-0 / have-degree-91
                                              :ARG1 c5-9
                                              :ARG3 (c5-11 / more)))
                  :polarity -)
      :snt2 (c5-3 / obligate-01
                  :polarity (c5-16 / amr-unknown)
                  :ARG1 (c5-15 / person
                               :mod (c5-6 / religious-group
                                          :name (c5-7 / name
                                                      :op1 "Christian")))
                  :ARG2 (c5-5 / apologize-01
                              :ARG0 c5-15
                              :frequency (c5-4 / rate-entity-91
                                               :ARG4 (c5-14 / kill-01
                                                            :ARG0 (c5-8 / nutjob
                                                                        :quant 1)
                                                            :ARG1 (c5-13 / someone))))
                  :polarity c5-16)
      :mod (c5-1 / of-course
                 :polarity -)
      :snt3 (c5-12 / define-01
                   :polarity -))

# ::snt Va ituacin de rehenes en Pars-En Imprenta1 rehn-En Supermercado kosher6 rehenes
# ::tokens ["Va", "ituacin", "de", "rehenes", "en", "Pars", "-", "En", "Imprenta1", "rehn", "-", "En", "Supermercado", "kosher6", "rehenes"]
# ::lemmas ["Va", "ituacin", "de", "rehenes", "en", "Pars", "-", "En", "Imprenta1", "rehn", "-", "en", "Supermercado", "kosher6", "rehene"]
(c6-0 / multi-sentence
      :snt1 (c6-3 / Va
                  :location (c6-6 / city
                                  :name (c6-2 / name
                                              :op1 "Hershenes"))
                  :mode expressive)
      :snt2 (c6-5 / rehenes
                  :location (c6-7 / city
                                  :name (c6-4 / name
                                              :op1 "Pars-En"
                                              :op2 "Imprenta1")))
      :snt3 (c6-1 / rehenes
                  :location (c6-10 / city
                                   :name (c6-8 / name
                                               :op1 "Supermercado")
                                   :location (c6-11 / city
                                                    :name (c6-9 / name
                                                                :op1 "Kirkland")))))

# ::snt Sad. May anyone who does such violence acts get their ass shot by police and burn in hell.
# ::tokens ["Sad", ".", "May", "anyone", "who", "does", "such", "violence", "acts", "get", "their", "ass", "shot", "by", "police", "and", "burn", "in", "hell", "."]
# ::lemmas ["sad", ".", "may", "anyone", "who", "do", "such", "violence", "act", "get", "their", "ass", "shoot", "by", "police", "and", "burn", "in", "hell", "."]
(c7-3 / multi-sentence
      :snt1 (c7-11 / sad-02)
      :snt2 (c7-1 / wish-01
                  :ARG1 (c7-13 / and
                               :op1 (c7-10 / get-04
                                           :ARG1 (c7-5 / shoot-02
                                                       :ARG0 (c7-8 / police)
                                                       :ARG1 (c7-6 / ass
                                                                   :part-of (c7-7 / anyone
                                                                                  :ARG0-of (c7-12 / act-02
                                                                                                  :ARG1 (c7-9 / violence
                                                                                                              :mod (c7-2 / such))))))
                                           :op2 (c7-4 / burn-01
                                                      :ARG1 c7-7
                                                      :location (c7-0 / hell))))))
