# ::snt That's the spirit! Plutt mourir que se rendre !
# ::tokens ["That", "'s", "the", "spirit", "!", "Plutt", "mourir", "que", "se", "rendre", "!"]
# ::lemmas ["that", "be", "the", "spirit", "!", "plutt", "mourir", "que", "se", "rendre", "!"]
(c1-1 / multi-sentence
      :snt1 (c1-4 / spirit
                  :domain (c1-5 / that))
      :snt2 (c1-2 / say-01
                  :ARG1 (c1-3 / rendre-01
                              :ARG0 (c1-0 / you
                                          :ARG1-of c1-3)
                              :mode imperative)
                  :ARG2 c1-0))

# ::snt sauver la France vote NF
# ::tokens ["sauver", "la", "France", "vote", "NF"]
# ::lemmas ["sauver", "la", "France", "vote", "NF"]
(c2-1 / vote-01
      :ARG0 (c2-4 / country
                  :name (c2-0 / name
                              :op1 "sauver"
                              :op2 "la"
                              :op3 "France"))
      :ARG1 (c2-2 / political-party
                  :name (c2-3 / name
                              :op1 "NF")))

# ::snt now is splited in semi countries
# ::tokens ["now", "is", "splited", "in", "semi", "countries"]
# ::lemmas ["now", "be", "split", "in", "semi", "country"]
(c4-0 / splite-01
      :ARG1 (c4-2 / now)
      :location (c4-3 / country
                      :mod (c4-1 / semi)))

# ::snt boom, bif, and thwonk yes so it takes the old to show people that some things just carnt go unanswered. ??
# ::tokens ["boom", ",", "bif", ",", "and", "thwonk", "yes", "so", "it", "takes", "the", "old", "to", "show", "people", "that", "some", "things", "just", "carnt", "go", "unanswered", ".", "?", "?"]
# ::lemmas ["boom", ",", "bif", ",", "and", "thwonk", "yes", "so", "it", "take", "the", "old", "to", "show", "people", "that", "some", "thing", "just", "carnt", "go", "unanswered", ".", "?", "?"]
(c5-14 / and
       :op1 (c5-2 / boom)
       :op2 (c5-9 / bif)
       :op3 (c5-12 / thwonk)
       :ARG0-of (c5-8 / cause-01
                      :ARG1 (c5-10 / take-10
                                   :ARG0 (c5-11 / show-01
                                                :ARG0 (c5-7 / person
                                                            :mod (c5-3 / old))
                                                :ARG1 (c5-13 / possible-01
                                                             :ARG1 (c5-5 / answer-01
                                                                         :ARG1 (c5-6 / thing
                                                                                     :mod (c5-4 / some)))
                                                             :mod (c5-0 / just)
                                                             :polarity -)
                                                :ARG2 (c5-1 / person)))))

# ::snt Every boy loves Asterix! Better than a history lesson.
# ::tokens ["Every", "boy", "loves", "Asterix", "!", "Better", "than", "a", "history", "lesson", "."]
# ::lemmas ["every", "boy", "love", "Asterix", "!", "well", "than", "a", "history", "lesson", "."]
(c6-2 / multi-sentence
      :snt1 (c6-1 / love-01
                  :ARG0 (c6-3 / boy
                              :mod (c6-4 / every))
                  :ARG1 (c6-6 / product
                              :name (c6-5 / name
                                          :op1 "Aerix")))
      :snt2 (c6-0 / have-degree-91
                  :ARG1 (c6-9 / lesson
                              :topic (c6-10 / history))
                  :ARG2 (c6-8 / good-02)
                  :ARG3 (c6-7 / more)
                  :ARG4 c6-9))

# ::snt he's so whack!! Maybe he should stay in retirement
# ::tokens ["he", "'s", "so", "whack", "!", "!", "Maybe", "he", "should", "stay", "in", "retirement"]
# ::lemmas ["he", "be", "so", "whack", "!", "!", "maybe", "he", "should", "stay", "in", "retirement"]
(c7-2 / multi-sentence
      :snt1 (c7-1 / whack-01
                  :ARG0 (c7-0 / he)
                  :degree (c7-7 / so)
                  :mode expressive)
      :snt2 (c7-5 / possible-01
                  :ARG1 (c7-6 / recommend-01
                              :ARG1 (c7-3 / stay-01
                                          :ARG1 (c7-8 / he)
                                          :time (c7-4 / retire-01
                                                      :ARG0 c7-8)))))

# ::snt please translate moi aussu je suis un charlie. mergsi
# ::tokens ["please", "translate", "moi", "aussu", "je", "suis", "un", "charlie", ".", "mergsi"]
# ::lemmas ["please", "translate", "moi", "aussu", "je", "suis", "un", "charlie", ".", "mergsi"]
(c8-3 / multi-sentence
      :snt1 (c8-9 / translate-01
                  :ARG0 (c8-1 / you)
                  :ARG1 (c8-2 / language
                              :name (c8-4 / name
                                          :op1 "Mali"
                                          :op2 "Aussu"))
                  :mode imperative
                  :polite +)
      :snt2 (c8-0 / have-mod-91
                  :ARG1 (c8-6 / person
                              :name (c8-5 / name
                                          :op1 "Mergsi"))
                  :ARG2 (c8-8 / language
                              :name (c8-7 / name
                                          :op1 "un"
                                          :op2 " charlie"))))

# ::snt and then you get people like this
# ::tokens ["and", "then", "you", "get", "people", "like", "this"]
# ::lemmas ["and", "then", "you", "get", "people", "like", "this"]
(c9-6 / and
      :op2 (c9-3 / get-01
                 :ARG0 (c9-0 / you)
                 :ARG1 (c9-1 / person
                             :ARG1-of (c9-2 / resemble-01
                                            :ARG2 (c9-5 / this)))
                 :time (c9-4 / then)))

# ::snt awesome - that is brilliant
# ::tokens ["awesome", "-", "that", "is", "brilliant"]
# ::lemmas ["awesome", "-", "that", "be", "brilliant"]
(c10-2 / brilliant-01
       :ARG1 (c10-0 / that)
       :mod (c10-1 / awe
                   :mode expressive))

# ::snt Wow! Good for him! Always love Asterix.
# ::tokens ["Wow", "!", "Good", "for", "him", "!", "Always", "love", "Asterix", "."]
# ::lemmas ["wow", "!", "good", "for", "he", "!", "always", "love", "Asterix", "."]
(c11-3 / multi-sentence
       :snt1 (c11-1 / wow-01
                    :mode expressive)
       :snt2 (c11-6 / good-04
                    :ARG2 (c11-0 / he))
       :snt3 (c11-2 / love-01
                    :ARG1 (c11-5 / person
                                 :name (c11-4 / name
                                              :op1 "Asterix"))
                    :time (c11-7 / always)))

# ::snt It is. Asterix a childhood favourite.
# ::tokens ["It", "is", ".", "Asterix", "a", "childhood", "favourite", "."]
# ::lemmas ["it", "be", ".", "asterix", "a", "childhood", "favourite", "."]
(c12-1 / multi-sentence
       :snt1 (c12-2 / it)
       :snt2 (c12-0 / favorite
                    :domain (c12-4 / person
                                   :name (c12-3 / name
                                                :op1 "Asterix"))
                    :time (c12-5 / childhood)))

# ::snt ASTERIX PONE FUERA DE COMBATE A TERRORISTAS.ES EL LENGUAJE UNICO QUE EXISTE PARA TRATAR A ESAS BESTIAS.VIVE LE FRANCE
# ::tokens ["ASTERIX", "PONE", "FUERA", "DE", "COMBATE", "A", "TERRORISTAS.ES", "EL", "LENGUAJE", "UNICO", "QUE", "EXISTE", "PARA", "TRATAR", "A", "ESAS", "BESTIAS.VIVE", "LE", "FRANCE"]
# ::lemmas ["ASTERIX", "PONE", "FUERA", "DE", "COMBATE", "A", "TERRORISTAS.ES", "EL", "LENGUAJE", "UNICO", "QUE", "EXISTE", "PARA", "TRATAR", "a", "ESAS", "BESTIAS.VIVE", "LE", "FRANCE"]
(c13-0 / multi-sentence
       :snt1 (c13-8 / agree-01
                    :ARG0 (c13-3 / person
                                 :name (c13-14 / name
                                               :op1 "Al-Qaeda"))
                    :ARG1 (c13-19 / come-01
                                  :ARG1 (c13-7 / person
                                               :name (c13-18 / name
                                                             :op1 "one"
                                                             :op2 "Fujer"))
                                  :ARG4 (c13-4 / criminal-organization
                                               :name (c13-1 / name
                                                            :op1 "TERRORist"))))
       :snt2 (c13-13 / question-03
                     :ARG0 (c13-10 / person
                                   :name (c13-2 / name
                                                :op1 "El"
                                                :op2 "LenguaJE"
                                                :op3 "Unico"))
                     :ARG1 (c13-15 / person
                                   :ARG0-of (c13-12 / escape-01
                                                    :ARG1 c13-4))
                     :ARG1-of (c13-5 / say-01
                                     :ARG0 (c13-16 / i)))
       :snt3 (c13-11 / possible-01
                     :ARG1 (c13-9 / flee-05
                                  :ARG0 (c13-6 / person)
                                  :ARG1 (c13-17 / country
                                                :name (c13-20 / name
                                                              :op1 "France")))))

# ::snt thanks MizQue , i dont trust google translae lol
# ::tokens ["thanks", "MizQue", ",", "i", "do", "nt", "trust", "google", "translae", "lol"]
# ::lemmas ["thank", "MizQue", ",", "i", "do", "not", "trust", "google", "translae", "lol"]
(c14-9 / and
       :op1 (c14-8 / thank-01
                   :ARG0 (c14-1 / i)
                   :ARG1 (c14-4 / person
                                :name (c14-2 / name
                                             :op1 "MizQue")))
       :op2 (c14-7 / trust-02
                   :ARG0 c14-1
                   :ARG1 (c14-6 / company
                                :name (c14-3 / name
                                             :op1 "Google"))
                   :ARG2-of (c14-0 / laugh-01
                                   :ARG0 c14-1
                                   :manner (c14-5 / loud)
                                   :mode expressive)
                   :polarity -))

# ::snt have introduced male Pym Jr to Asterix - he loves him too
# ::tokens ["have", "introduced", "male", "Pym", "Jr", "to", "Asterix", "-", "he", "loves", "him", "too"]
# ::lemmas ["have", "introduce", "male", "Pym", "Jr", "to", "Asterix", "-", "he", "love", "he", "too"]
(c15-2 / introduce-01
       :ARG0 (c15-7 / i)
       :ARG1 (c15-5 / person
                    :name (c15-3 / name
                                 :op1 "Pym"
                                 :op2 "Jr")
                    :mod (c15-1 / male))
       :ARG2 (c15-9 / person
                    :name (c15-4 / name
                                 :op1 "Asterix"))
       :ARG0-of (c15-6 / cause-01
                       :ARG1 (c15-0 / love-01
                                    :ARG0 c15-5
                                    :ARG1 c15-9
                                    :mod (c15-8 / too))))

# ::snt bravo... You are the best... We have missed you.
# ::tokens ["bravo", "...", "You", "are", "the", "best", "...", "We", "have", "missed", "you", "."]
# ::lemmas ["bravo", "...", "you", "be", "the", "good", "...", "we", "have", "miss", "you", "."]
(c16-4 / multi-sentence
       :snt1 (c16-5 / bravo)
       :snt2 (c16-0 / have-degree-91
                    :ARG1 (c16-1 / you)
                    :ARG2 (c16-7 / good-02
                                 :ARG1 c16-1)
                    :ARG3 (c16-6 / most))
       :snt3 (c16-3 / miss-01
                    :ARG0 (c16-2 / we)
                    :ARG1 (c16-8 / you)))

# ::snt Me too, I am Charlie is what it means.
# ::tokens ["Me", "too", ",", "I", "am", "Charlie", "is", "what", "it", "means", "."]
# ::lemmas ["i", "too", ",", "i", "be", "Charlie", "be", "what", "it", "mean", "."]
(c17-0 / multi-sentence
       :snt1 (c17-1 / i
                    :mod (c17-6 / too))
       :snt2 (c17-3 / person
                    :name (c17-2 / name
                                 :op1 "Charlie")
                    :domain c17-1)
       :snt3 (c17-4 / mean-01
                    :ARG1 (c17-5 / it)))

# ::snt My favorite cartoon - Asterix.
# ::tokens ["My", "favorite", "cartoon", "-", "Asterix", "."]
# ::lemmas ["my", "favorite", "cartoon", "-", "Asterix", "."]
(c18-2 / cartoon
       :name (c18-0 / name
                    :op1 "Asterix")
       :ARG1-of (c18-1 / favor-01
                       :ARG0 (c18-3 / i)))

# ::snt fair fucking play! Nice touch!
# ::tokens ["fair", "fucking", "play", "!", "Nice", "touch", "!"]
# ::lemmas ["fair", "fucking", "play", "!", "nice", "touch", "!"]
(c19-1 / multi-sentence
       :snt1 (c19-4 / play-01
                    :ARG1-of (c19-0 / fair-01)
                    :mod (c19-2 / fucking
                                :mode expressive))
       :snt2 (c19-5 / touch-01
                    :ARG1-of (c19-3 / nice-01)))

# ::snt "I too am a charlie". I used Google translate.
# ::tokens ["\"", "I", "too", "am", "a", "charlie", "\"", ".", "I", "used", "Google", "translate", "."]
# ::lemmas ["\"", "i", "too", "be", "a", "charlie", "\"", ".", "i", "use", "Google", "translate", "."]
(c20-0 / multi-sentence
       :snt1 (c20-5 / charlie
                    :domain (c20-2 / i)
                    :mod (c20-8 / too))
       :snt2 (c20-1 / use-01
                    :ARG0 (c20-6 / i)
                    :ARG1 (c20-7 / translate-01
                                 :medium (c20-4 / company
                                                :name (c20-3 / name
                                                             :op1 "Google")))))
