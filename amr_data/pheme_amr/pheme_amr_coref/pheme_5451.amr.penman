# ::snt Don't just be a , come take a stand -
# ::tokens ["Do", "n't", "just", "be", "a", ",", "come", "take", "a", "stand", "-"]
# ::lemmas ["do", "not", "just", "be", "a", ",", "come", "take", "a", "stand", "-"]
(c1-3 / come-01
      :ARG1 (c1-1 / you)
      :ARG4 (c1-0 / stand-11
                  :ARG0 c1-1)
      :mod (c1-2 / just)
      :mode imperative
      :polarity -)

# ::snt Yes, up the arse of the nearest muslim.
# ::tokens ["Yes", ",", "up", "the", "arse", "of", "the", "nearest", "muslim", "."]
# ::lemmas ["yes", ",", "up", "the", "arse", "of", "the", "near", "muslim", "."]
(c2-2 / up-03
      :ARG1 (c2-7 / ass
                  :poss (c2-5 / person
                              :mod (c2-6 / religious-group
                                         :name (c2-3 / name
                                                     :op1 "Islam"))
                              :ARG1-of (c2-0 / have-degree-91
                                             :ARG2 (c2-4 / near-02
                                                         :ARG1 c2-5
                                                         :ARG2 c2-6)
                                             :ARG3 (c2-1 / most)))))

# ::snt with a thick piece of lead on the end.
# ::tokens ["with", "a", "thick", "piece", "of", "lead", "on", "the", "end", "."]
# ::lemmas ["with", "a", "thick", "piece", "of", "lead", "on", "the", "end", "."]
(c4-0 / end-01
      :ARG2 (c4-1 / piece
                  :consist-of (c4-3 / lead)
                  :ARG1-of (c4-2 / thick-03)))

# ::snt *yawn* --&gt;
# ::tokens ["*", "yawn", "*", "--&gt", ";"]
# ::lemmas ["*", "yawn", "*", "--&gt", ";"]
(c5-2 / and
      :op1 (c5-0 / yawn-01)
      :op2 (c5-1 / gt;))

# ::snt just featured you on my
# ::tokens ["just", "featured", "you", "on", "my"]
# ::lemmas ["just", "feature", "you", "on", "my"]
(c6-2 / feature-01
      :ARG0 (c6-3 / i)
      :ARG1 (c6-1 / you)
      :location c6-3
      :time (c6-0 / just))

# ::snt So sad : - a brilliant image by . Let's all stick our pencils up in defiance.
# ::tokens ["So", "sad", ":", "-", "a", "brilliant", "image", "by", ".", "Let", "'s", "all", "stick", "our", "pencils", "up", "in", "defiance", "."]
# ::lemmas ["so", "sad", ":", "-", "a", "brilliant", "image", "by", ".", "let", "us", "all", "stick", "our", "pencil", "up", "in", "defiance", "."]
(c7-2 / multi-sentence
      :snt1 (c7-9 / sad-02
                  :degree (c7-5 / so))
      :snt2 (c7-6 / image
                  :ARG1-of (c7-4 / brilliant-01)
                  :source-of (c7-0 / we
                                   :mod (c7-10 / all)))
      :snt3 (c7-1 / stick-01
                  :ARG0 c7-0
                  :ARG1 (c7-7 / pencil
                              :poss c7-0)
                  :ARG2 (c7-3 / up)
                  :manner (c7-8 / defy-01
                                :ARG0 c7-0)
                  :mode imperative))

# ::snt Exactly! No one will curtail our liberty of expression.
# ::tokens ["Exactly", "!", "No", "one", "will", "curtail", "our", "liberty", "of", "expression", "."]
# ::lemmas ["exactly", "!", "no", "one", "will", "curtail", "our", "liberty", "of", "expression", "."]
(c8-2 / multi-sentence
      :snt1 (c8-4 / exact
                  :mode expressive)
      :snt2 (c8-6 / curtail-01
                  :ARG0 (c8-5 / no-one)
                  :ARG1 (c8-1 / liberty
                              :topic (c8-3 / express-01
                                           :ARG0 (c8-0 / we)))))

# ::snt L'Amrique se tient avec la France.
# ::tokens ["L'Amrique", "se", "tient", "avec", "la", "France", "."]
# ::lemmas ["L'Amrique", "se", "tient", "avec", "la", "France", "."]
(c9-4 / tient-of
      :ARG1 (c9-3 / city
                  :name (c9-0 / name
                              :op1 "L'Amrique"))
      :ARG3 (c9-2 / country
                  :name (c9-1 / name
                              :op1 "France")))
