# ::snt Of course, because the wall-to-wall proliferation of guns in the US has prevented any massacres there :/
# ::tokens ["Of", "course", ",", "because", "the", "wall", "-", "to", "-", "wall", "proliferation", "of", "guns", "in", "the", "US", "has", "prevented", "any", "massacres", "there", ":/"]
# ::lemmas ["of", "course", ",", "because", "the", "wall", "-", "to", "-", "wall", "proliferation", "of", "gun", "in", "the", "US", "have", "prevent", "any", "massacre", "there", ":/"]
(c1-7 / cause-01
      :ARG0 (c1-5 / prevent-01
                  :ARG0 (c1-9 / proliferate-01
                              :ARG0 (c1-8 / gun)
                              :location (c1-6 / country
                                              :name (c1-4 / name
                                                          :op1 "US"))
                              :manner (c1-0 / wall
                                            :prep-to (c1-3 / wall)))
                  :ARG1 (c1-1 / massacre-01
                              :mod (c1-10 / any)
                              :location c1-6))
      :mod (c1-2 / of-course))

# ::snt You are a moron, Mr, Horn. Is that why all the police took off on their BICYCLES and poor police on sidewalk SHOT?
# ::tokens ["You", "are", "a", "moron", ",", "Mr", ",", "Horn", ".", "Is", "that", "why", "all", "the", "police", "took", "off", "on", "their", "BICYCLES", "and", "poor", "police", "on", "sidewalk", "SHOT", "?"]
# ::lemmas ["you", "be", "a", "moron", ",", "Mr", ",", "Horn", ".", "be", "that", "you", "all", "the", "police", "take", "off", "on", "their", "bicycle", "and", "poor", "police", "on", "sidewalk", "shot", "?"]
(c2-1 / multi-sentence
      :snt1 (c2-13 / say-01
                   :ARG0 (c2-6 / i)
                   :ARG1 (c2-9 / moron
                               :domain (c2-10 / person
                                              :name (c2-7 / name
                                                          :op1 "Mr."
                                                          :op2 "Horn")
                                              :ARG2-of c2-13)))
      :snt2 (c2-11 / cause-01
                   :ARG0 (c2-15 / that)
                   :ARG1 (c2-17 / and
                                :op1 (c2-12 / take-off-19
                                            :ARG0 (c2-16 / police
                                                         :mod (c2-5 / all))
                                            :ARG1 (c2-3 / business
                                                        :poss c2-16))
                                :op2 (c2-4 / shit-01
                                           :ARG0 (c2-2 / police
                                                       :mod (c2-14 / poor))
                                           :location (c2-0 / sidewalk)))
                   :polarity (c2-8 / amr-unknown)))

# ::snt Good gun laws (and effective enforcement) make it harder for ANYONE to get -- and to use -- them.
# ::tokens ["Good", "gun", "laws", "(", "and", "effective", "enforcement", ")", "make", "it", "harder", "for", "ANYONE", "to", "get", "--", "and", "to", "use", "--", "them", "."]
# ::lemmas ["good", "gun", "law", "(", "and", "effective", "enforcement", ")", "make", "it", "hard", "for", "ANYONE", "to", "get", "--", "and", "to", "use", "--", "they", "."]
(c3-2 / make-02
      :ARG0 (c3-13 / and
                   :op1 (c3-1 / law
                              :topic (c3-12 / gun)
                              :ARG1-of (c3-11 / good-02))
                   :op2 (c3-6 / enforce-01
                              :ARG1-of (c3-5 / effective-04)))
      :ARG1 (c3-0 / hard-02
                  :ARG1 (c3-7 / and
                              :op1 (c3-8 / get-01
                                         :ARG0 (c3-9 / anyone)
                                         :ARG1 c3-12)
                              :op2 (c3-3 / use-01
                                         :ARG0 c3-9
                                         :ARG1 c3-12))
                  :ARG2-of (c3-4 / have-degree-91
                                 :ARG1 c3-7
                                 :ARG3 (c3-10 / more))))

# ::snt And he is blind to the freedom that allows him to make a jackass of himself!
# ::tokens ["And", "he", "is", "blind", "to", "the", "freedom", "that", "allows", "him", "to", "make", "a", "jackass", "of", "himself", "!"]
# ::lemmas ["and", "he", "be", "blind", "to", "the", "freedom", "that", "allow", "he", "to", "make", "a", "jackass", "of", "himself", "!"]
(c4-6 / and
      :op2 (c4-4 / blind-02
                 :ARG1 (c4-0 / he)
                 :ARG2 (c4-2 / free-04
                             :ARG0-of (c4-5 / allow-01
                                            :ARG1 (c4-3 / make-01
                                                        :ARG0 c4-0
                                                        :ARG1 (c4-1 / jackass
                                                                    :domain c4-0))))))

# ::snt But what he said is TRUE&gt; especially in the case of the poor bastard lying on the side walk WITH HIS HANDS UP. Of course.
# ::tokens ["But", "what", "he", "said", "is", "TRUE&gt", ";", "especially", "in", "the", "case", "of", "the", "poor", "bastard", "lying", "on", "the", "side", "walk", "WITH", "HIS", "HANDS", "UP", ".", "Of", "course", "."]
# ::lemmas ["but", "what", "he", "say", "be", "TRUE&gt", ";", "especially", "in", "the", "case", "of", "the", "poor", "bastard", "lie", "on", "the", "side", "walk", "with", "his", "hand", "UP", ".", "of", "course", "."]
(c5-3 / multi-sentence
      :snt1 (c5-11 / contrast-01
                   :ARG2 (c5-17 / and
                                :op1 (c5-16 / true-01
                                            :ARG1 (c5-14 / thing
                                                         :ARG1-of (c5-15 / say-01
                                                                         :ARG0 (c5-0 / he))))
                                :op2 (c5-12 / gt
                                            :domain c5-14)))
      :snt2 (c5-10 / case-04
                   :ARG1 (c5-2 / lie-07
                               :ARG1 (c5-5 / bastard
                                           :mod (c5-9 / poor))
                               :ARG2 (c5-7 / side
                                           :part-of (c5-1 / walk))
                               :manner (c5-4 / up-03
                                             :ARG1 c5-5
                                             :ARG2 (c5-13 / blood)))
                   :mod (c5-8 / especially))
      :mod (c5-6 / of-course))

# ::snt He was labeled a moron before he said that.
# ::tokens ["He", "was", "labeled", "a", "moron", "before", "he", "said", "that", "."]
# ::lemmas ["he", "be", "label", "a", "moron", "before", "he", "say", "that", "."]
(c6-1 / label-01
      :ARG1 (c6-0 / he)
      :ARG2 (c6-2 / moron)
      :time (c6-3 / before
                  :op1 (c6-4 / say-01
                             :ARG0 c6-0
                             :ARG1 (c6-5 / that))))

# ::snt I've visited France lots of times. Police are armed. People like Donald Trump fortunately aren't.
# ::tokens ["I", "'ve", "visited", "France", "lots", "of", "times", ".", "Police", "are", "armed", ".", "People", "like", "Donald", "Trump", "fortunately", "are", "n't", "."]
# ::lemmas ["i", "'ve", "visit", "France", "lot", "of", "time", ".", "police", "be", "armed", ".", "people", "like", "Donald", "Trump", "fortunately", "be", "not", "."]
(c7-1 / multi-sentence
      :snt1 (c7-6 / visit-01
                  :ARG0 (c7-4 / i)
                  :ARG1 (c7-9 / country
                              :name (c7-5 / name
                                          :op1 "France"))
                  :frequency (c7-11 / time
                                    :quant (c7-0 / lot)))
      :snt2 (c7-13 / arm-01
                   :ARG1 (c7-7 / police))
      :snt3 (c7-2 / fortunate-01
                  :ARG2 (c7-12 / person
                               :ARG1-of (c7-8 / resemble-01
                                              :ARG2 (c7-3 / person
                                                          :name (c7-10 / name
                                                                       :op1 "Donald"
                                                                       :op2 "Trump"))))
                  :polarity -))

# ::snt 'moron' is kind for Trump....
# ::tokens ["'", "moron", "'", "is", "kind", "for", "Trump", "...."]
# ::lemmas ["'", "moron", "'", "be", "kind", "for", "Trump", "...."]
(c8-3 / kind-01
      :ARG0 (c8-1 / moron)
      :ARG2 (c8-2 / person
                  :name (c8-0 / name
                              :op1 "Trump")))

# ::snt but,for Muslims like Obama???
# ::tokens ["but", ",", "for", "Muslims", "like", "Obama", "?", "?", "?"]
# ::lemmas ["but", ",", "for", "Muslims", "like", "Obama", "?", "?", "?"]
(c9-6 / contrast-01
      :ARG2 (c9-0 / event
                  :polarity (c9-7 / amr-unknown)
                  :mod (c9-5 / religious-group
                             :name (c9-2 / name
                                         :op1 "Muslim"))
                  :ARG1-of (c9-1 / resemble-01
                                 :ARG2 (c9-4 / person
                                             :name (c9-3 / name
                                                         :op1 "Obama")))))

# ::snt He's a moron for many other reasons too.
# ::tokens ["He", "'s", "a", "moron", "for", "many", "other", "reasons", "too", "."]
# ::lemmas ["he", "be", "a", "moron", "for", "many", "other", "reason", "too", "."]
(c10-1 / moron
       :domain (c10-0 / he)
       :ARG1-of (c10-5 / cause-01
                       :ARG0 (c10-4 / reason
                                    :mod (c10-2 / other)
                                    :quant (c10-3 / many))
                       :mod (c10-6 / too)))

# ::snt Umm...If there really were a true "lack of guns" in France, maybe the shooters wouldn't have been able to kill people...
# ::tokens ["Umm", "...", "If", "there", "really", "were", "a", "true", "\"", "lack", "of", "guns", "\"", "in", "France", ",", "maybe", "the", "shooters", "would", "n't", "have", "been", "able", "to", "kill", "people", "..."]
# ::lemmas ["Umm", "...", "if", "there", "really", "be", "a", "true", "\"", "lack", "of", "gun", "\"", "in", "France", ",", "maybe", "the", "shooter", "would", "not", "have", "be", "able", "to", "kill", "people", "..."]
(c11-4 / possible-01
       :ARG1 (c11-10 / kill-01
                     :ARG0 (c11-11 / person
                                   :ARG0-of (c11-8 / shoot-02))
                     :ARG1 (c11-2 / person))
       :condition (c11-0 / lack-01
                         :ARG1 (c11-7 / gun)
                         :ARG1-of (c11-9 / true-01)
                         :location (c11-6 / country
                                          :name (c11-3 / name
                                                       :op1 "France"))
                         :ARG1-of (c11-5 / real-04))
       :mod (c11-1 / umm
                   :mode expressive)
       :polarity -)

# ::snt grew up as a rich brat % - he knows only how to "take" whatever he wants &amp; mock anyone not like him
# ::tokens ["grew", "up", "as", "a", "rich", "brat", "%", "-", "he", "knows", "only", "how", "to", "\"", "take", "\"", "whatever", "he", "wants", "&", "amp", ";", "mock", "anyone", "not", "like", "him"]
# ::lemmas ["grow", "up", "as", "a", "rich", "brat", "%", "-", "he", "know", "only", "how", "to", "\"", "take", "\"", "whatever", "he", "want", "&", "amp", ";", "mock", "anyone", "not", "like", "he"]
(c12-14 / and
        :op1 (c12-10 / grow-up-04
                     :ARG1 (c12-0 / he)
                     :prep-as (c12-3 / brat
                                     :mod (c12-9 / rich)))
        :op2 (c12-13 / know-01
                     :ARG0 c12-0
                     :ARG1 (c12-5 / and
                                  :op1 (c12-11 / take-01
                                               :ARG0 c12-0
                                               :ARG1 (c12-1 / whatever
                                                            :ARG1-of (c12-6 / want-01
                                                                            :ARG0 c12-0)))
                                  :op2 (c12-8 / amp))
                     :mod (c12-4 / only))
        :op3 (c12-2 / mock-01
                    :ARG0 c12-0
                    :ARG1 (c12-12 / anyone
                                  :ARG1-of (c12-7 / resemble-01
                                                  :ARG2 c12-0
                                                  :polarity -))))

# ::snt as always said... GUn laws only keep guns from law abiding citizens. Viva Austria !
# ::tokens ["as", "always", "said", "...", "GUn", "laws", "only", "keep", "guns", "from", "law", "abiding", "citizens", ".", "Viva", "Austria", "!"]
# ::lemmas ["as", "always", "say", "...", "GUn", "law", "only", "keep", "gun", "from", "law", "abide", "citizen", ".", "Viva", "Austria", "!"]
(c13-1 / multi-sentence
       :snt1 (c13-11 / say-01
                     :ARG1 (c13-12 / keep-04
                                   :ARG0 (c13-0 / law
                                                :name (c13-4 / name
                                                             :op1 "GUn"))
                                   :ARG1 (c13-9 / gun)
                                   :ARG2 (c13-8 / citizen
                                                :ARG0-of (c13-13 / abide-01
                                                                 :ARG1 (c13-10 / law)))
                                   :mod (c13-2 / only))
                     :time (c13-3 / always))
       :snt2 (c13-5 / viva
                    :mod (c13-7 / country
                                :name (c13-6 / name
                                             :op1 "Austria"))
                    :mode expressive))

# ::snt That's mild- Donald Trump labelled a 'moron' for blaming attacks on France's lack of guns
# ::tokens ["That", "'s", "mild-", "Donald", "Trump", "labelled", "a", "'", "moron", "'", "for", "blaming", "attacks", "on", "France", "'s", "lack", "of", "guns"]
# ::lemmas ["that", "be", "mild-", "Donald", "Trump", "label", "a", "'", "moron", "'", "for", "blame", "attack", "on", "France", "'s", "lack", "of", "gun"]
(c14-1 / multi-sentence
       :snt1 (c14-7 / mild
                    :domain (c14-11 / that))
       :snt2 (c14-0 / label-01
                    :ARG0 (c14-6 / person
                                 :name (c14-4 / name
                                              :op1 "Donald"
                                              :op2 "Trump")
                                 :ARG1-of c14-0)
                    :ARG2 (c14-2 / moron)
                    :ARG3 (c14-3 / blame-01
                                 :ARG0 c14-6
                                 :ARG1 (c14-12 / attack-01
                                               :ARG1 (c14-10 / lack-01
                                                             :ARG0 (c14-8 / country
                                                                          :name (c14-5 / name
                                                                                       :op1 "France"))
                                                             :ARG1 (c14-9 / gun))))))

# ::snt he is a moron... enough said
# ::tokens ["he", "is", "a", "moron", "...", "enough", "said"]
# ::lemmas ["he", "be", "a", "moron", "...", "enough", "say"]
(c15-1 / multi-sentence
       :snt1 (c15-3 / moron
                    :domain (c15-0 / he))
       :snt2 (c15-4 / say-01
                    :ARG1 (c15-5 / thing
                                 :ARG1-of (c15-6 / have-quant-91
                                                 :ARG3 (c15-2 / enough)))))

# ::snt : Trump labelled 'moron' for blaming attack on France lack of guns
# ::tokens [":", "Trump", "labelled", "'", "moron", "'", "for", "blaming", "attack", "on", "France", "lack", "of", "guns"]
# ::lemmas [":", "Trump", "label", "'", "moron", "'", "for", "blame", "attack", "on", "France", "lack", "of", "gun"]
(c16-0 / label-01
       :ARG0 (c16-5 / person
                    :name (c16-3 / name
                                 :op1 "Trump")
                    :ARG1-of c16-0)
       :ARG2 (c16-1 / moron)
       :ARG3 (c16-2 / blame-01
                    :ARG0 c16-5
                    :ARG1 (c16-9 / attack-01
                                 :ARG1 (c16-8 / lack-01
                                              :ARG0 (c16-6 / country
                                                           :name (c16-4 / name
                                                                        :op1 "France"))
                                              :ARG1 (c16-7 / gun)))))

# ::snt Another one that thinks guns solve every problem! Cretin!
# ::tokens ["Another", "one", "that", "thinks", "guns", "solve", "every", "problem", "!", "Cretin", "!"]
# ::lemmas ["another", "one", "that", "think", "gun", "solve", "every", "problem", "!", "Cretin", "!"]
(c17-0 / multi-sentence
       :snt1 (c17-1 / one
                    :mod (c17-8 / another)
                    :ARG0-of (c17-7 / think-01
                                    :ARG1 (c17-6 / solve-01
                                                 :ARG0 (c17-5 / gun)
                                                 :ARG1 (c17-3 / problem
                                                              :mod (c17-2 / every)))))
       :snt2 (c17-4 / censin
                    :mode expressive))

# ::snt - as always!
# ::tokens ["-", "as", "always", "!"]
# ::lemmas ["-", "as", "always", "!"]
(c18-0 / as
       :mode expressive)

# ::snt He IS a moron!
# ::tokens ["He", "IS", "a", "moron", "!"]
# ::lemmas ["he", "be", "a", "moron", "!"]
(c19-1 / moron
       :domain (c19-0 / he))

# ::snt French police are not on bicycles, and they are armed. Try leaving Gaaad's country occasionally. Moron.
# ::tokens ["French", "police", "are", "not", "on", "bicycles", ",", "and", "they", "are", "armed", ".", "Try", "leaving", "Gaaad", "'s", "country", "occasionally", ".", "Moron", "."]
# ::lemmas ["French", "police", "be", "not", "on", "bicycle", ",", "and", "they", "be", "armed", ".", "try", "leave", "Gaaad", "'s", "country", "occasionally", ".", "Moron", "."]
(c20-2 / multi-sentence
       :snt1 (c20-14 / and
                     :op1 (c20-3 / bicycle
                                 :poss (c20-8 / police
                                              :mod (c20-10 / country
                                                           :name (c20-6 / name
                                                                        :op1 "France")))
                                 :polarity -)
                     :op2 (c20-5 / arm-01
                                 :ARG1 c20-8))
       :snt2 (c20-12 / try-01
                     :ARG0 (c20-0 / you)
                     :ARG1 (c20-1 / leave-11
                                  :ARG0 c20-0
                                  :ARG1 (c20-9 / country
                                               :poss (c20-13 / person
                                                             :name (c20-7 / name
                                                                          :op1 "Gaaad")))
                                  :frequency (c20-4 / occasional))
                     :mode imperative)
       :snt3 (c20-11 / moron))
