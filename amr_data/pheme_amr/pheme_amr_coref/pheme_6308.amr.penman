# ::snt As far as I know, only if you're arrested. You are legally allowed to record their activities, but if they can make a case...
# ::tokens ["As", "far", "as", "I", "know", ",", "only", "if", "you", "'re", "arrested", ".", "You", "are", "legally", "allowed", "to", "record", "their", "activities", ",", "but", "if", "they", "can", "make", "a", "case", "..."]
# ::lemmas ["as", "far", "as", "i", "know", ",", "only", "if", "you", "be", "arrest", ".", "you", "be", "legally", "allow", "to", "record", "their", "activity", ",", "but", "if", "they", "can", "make", "a", "case", "..."]
(c1-0 / multi-sentence
      :snt1 (c1-5 / have-condition-91
                  :ARG2 (c1-4 / arrest-01
                              :ARG1 (c1-13 / you))
                  :mod (c1-14 / only)
                  :concession (c1-10 / as-far-as
                                     :op1 (c1-12 / know-01
                                                 :ARG0 (c1-11 / i))))
      :snt2 (c1-15 / contrast-01
                   :ARG1 (c1-7 / allow-01
                               :ARG1 (c1-9 / record-01
                                           :ARG0 (c1-16 / you)
                                           :ARG1 (c1-17 / activity-06
                                                        :ARG0 (c1-18 / they)))
                               :manner (c1-6 / law))
                   :ARG2 (c1-3 / have-condition-91
                               :ARG2 (c1-1 / possible-01
                                           :ARG1 (c1-8 / make-01
                                                       :ARG0 c1-18
                                                       :ARG1 (c1-2 / case-03
                                                                   :ARG0 c1-18))))))

# ::snt Excellent suggestion.
# ::tokens ["Excellent", "suggestion", "."]
# ::lemmas ["excellent", "suggestion", "."]
(c3-0 / suggest-01
      :ARG1-of (c3-1 / excellent-02))

# ::snt its
# ::tokens ["its"]
# ::lemmas ["its"]
(c4-0 / it)

# ::snt now I know that is true. Smh....
# ::tokens ["now", "I", "know", "that", "is", "true", ".", "Smh", "...."]
# ::lemmas ["now", "i", "know", "that", "be", "true", ".", "Smh", "...."]
(c5-0 / multi-sentence
      :snt1 (c5-2 / know-01
                  :ARG0 (c5-1 / i)
                  :ARG1 (c5-6 / true-01
                              :ARG1 (c5-4 / that))
                  :time (c5-3 / now))
      :snt2 (c5-5 / smh
                  :mode expressive))

# ::snt Please stay safe and be careful.
# ::tokens ["Please", "stay", "safe", "and", "be", "careful", "."]
# ::lemmas ["please", "stay", "safe", "and", "be", "careful", "."]
(c6-4 / and
      :op1 (c6-3 / stay-01
                 :ARG1 (c6-0 / you)
                 :ARG3 (c6-1 / safe-01
                             :ARG1 c6-0)
                 :mode imperative)
      :op2 (c6-2 / care-04
                 :ARG0 c6-0
                 :mode imperative)
      :polite +)

# ::snt And cops have been known to delete videos and pics, even if it's not by the book.
# ::tokens ["And", "cops", "have", "been", "known", "to", "delete", "videos", "and", "pics", ",", "even", "if", "it", "'s", "not", "by", "the", "book", "."]
# ::lemmas ["and", "cop", "have", "be", "know", "to", "delete", "video", "and", "pic", ",", "even", "if", "it", "be", "not", "by", "the", "book", "."]
(c7-8 / and
      :op2 (c7-7 / know-01
                 :ARG1 (c7-5 / delete-01
                             :ARG0 (c7-6 / cop)
                             :ARG1 (c7-2 / and
                                         :op1 (c7-3 / video)
                                         :op2 (c7-4 / pic))
                             :concession (c7-1 / even-if
                                               :op1 (c7-0 / book
                                                          :polarity -)))))

# ::snt OR the Stop &amp; Frisk Watch App or Police Tape or Fi-Vo orUStream
# ::tokens ["OR", "the", "Stop", "&", "amp", ";", "Frisk", "Watch", "App", "or", "Police", "Tape", "or", "Fi", "-", "Vo", "orUStream"]
# ::lemmas ["or", "the", "Stop", "&", "amp", ";", "Frisk", "Watch", "App", "or", "Police", "Tape", "or", "Fi", "-", "Vo", "orustream"]
(c8-0 / or
      :op1 (c8-9 / thing
                 :name (c8-3 / name
                             :op1 "Stop"
                             :op2 "&"
                             :op3 "amp"))
      :op2 (c8-8 / thing
                 :name (c8-4 / name
                             :op1 "Frisk"
                             :op2 "Watch"
                             :op3 "App"))
      :op3 (c8-5 / thing
                 :name (c8-6 / name
                             :op1 "Police"
                             :op2 "Tape"))
      :op4 (c8-1 / thing
                 :name (c8-7 / name
                             :op1 "Fi-Vo"))
      :op5 (c8-2 / thing
                 :name (c8-10 / name
                              :op1 "UStream")))

# ::snt That your doing so is obstructing police business, then they can arrest you and seize your device.
# ::tokens ["That", "your", "doing", "so", "is", "obstructing", "police", "business", ",", "then", "they", "can", "arrest", "you", "and", "seize", "your", "device", "."]
# ::lemmas ["that", "your", "do", "so", "be", "obstruct", "police", "business", ",", "then", "they", "can", "arrest", "you", "and", "seize", "your", "device", "."]
(c9-2 / obstruct-01
      :ARG0 (c9-0 / you)
      :ARG1 (c9-1 / business
                  :poss (c9-4 / police))
      :ARG0-of (c9-6 / cause-01
                     :ARG1 (c9-9 / possible-01
                                 :ARG1 (c9-10 / and
                                              :op1 (c9-3 / arrest-01
                                                         :ARG0 c9-4
                                                         :ARG1 c9-0)
                                              :op2 (c9-7 / seize-01
                                                         :ARG0 c9-4
                                                         :ARG1 (c9-5 / device
                                                                     :poss c9-0)))
                                 :time (c9-8 / then))))

# ::snt Again MT : If you're recording in video , please use apps like Bambuser that record to a server so it can't be deleted
# ::tokens ["Again", "MT", ":", "If", "you", "'re", "recording", "in", "video", ",", "please", "use", "apps", "like", "Bambuser", "that", "record", "to", "a", "server", "so", "it", "ca", "n't", "be", "deleted"]
# ::lemmas ["again", "MT", ":", "if", "you", "be", "record", "in", "video", ",", "please", "use", "app", "like", "Bambuser", "that", "record", "to", "a", "server", "so", "it", "can", "not", "be", "delete"]
(c10-13 / say-01
        :ARG1 (c10-1 / use-01
                     :ARG0 (c10-0 / you)
                     :ARG1 (c10-15 / app
                                   :ARG1-of (c10-10 / resemble-01
                                                    :ARG2 (c10-9 / product
                                                                 :name (c10-7 / name
                                                                              :op1 "Bambuser")))
                                   :ARG0-of (c10-6 / record-01
                                                   :ARG2 (c10-3 / server)
                                                   :purpose (c10-14 / possible-01
                                                                    :ARG1 (c10-11 / delete-01
                                                                                  :ARG1 c10-6)
                                                                    :polarity -)))
                     :condition (c10-4 / record-01
                                       :ARG0 c10-0
                                       :medium (c10-8 / video))
                     :mode imperative
                     :polite +)
        :ARG2 (c10-2 / person
                     :name (c10-12 / name
                                   :op1 "MT"))
        :mod (c10-5 / again))

# ::snt I am trying my very best. Honestly, I don't think it's up to us any more though. We did everything right last night and....
# ::tokens ["I", "am", "trying", "my", "very", "best", ".", "Honestly", ",", "I", "do", "n't", "think", "it", "'s", "up", "to", "us", "any", "more", "though", ".", "We", "did", "everything", "right", "last", "night", "and", "...."]
# ::lemmas ["i", "be", "try", "my", "very", "good", ".", "honestly", ",", "i", "do", "not", "think", "it", "be", "up", "to", "we", "any", "more", "though", ".", "we", "do", "everything", "right", "last", "night", "and", "...."]
(c11-1 / multi-sentence
       :snt1 (c11-20 / try-01
                     :ARG0 (c11-16 / i)
                     :manner (c11-13 / good-03
                                     :ARG1 c11-16
                                     :degree (c11-4 / very)))
       :snt2 (c11-19 / think-01
                     :ARG0 c11-16
                     :ARG1 (c11-12 / responsible-03
                                   :ARG0 (c11-14 / we)
                                   :ARG1 (c11-17 / it)
                                   :time (c11-7 / anymore))
                     :ARG1-of (c11-8 / have-concession-91)
                     :ARG1-of (c11-6 / honest-01)
                     :polarity -)
       :snt3 (c11-15 / and
                     :op1 (c11-5 / do-02
                                 :ARG0 (c11-2 / we)
                                 :ARG1 (c11-10 / everything)
                                 :time (c11-0 / date-entity
                                              :dayperiod (c11-11 / night)
                                              :mod (c11-18 / yesterday))
                                 :mod (c11-3 / right))
                     :op2 (c11-9 / et-cetera)))

# ::snt "thats ok officer, we do too. Its already up &amp; going viral as we speak!" NFC &amp; Android bump can play musical chairs w data too!
# ::tokens ["\"", "that", "s", "ok", "officer", ",", "we", "do", "too", ".", "Its", "already", "up", "&", "amp", ";", "going", "viral", "as", "we", "speak", "!", "\"", "NFC", "&", "amp", ";", "Android", "bump", "can", "play", "musical", "chairs", "w", "data", "too", "!"]
# ::lemmas ["\"", "that", "s", "ok", "officer", ",", "we", "do", "too", ".", "its", "already", "up", "&", "amp", ";", "go", "viral", "as", "we", "speak", "!", "\"", "NFC", "&", "amp", ";", "Android", "bump", "can", "play", "musical", "chair", "w", "datum", "too", "!"]
(c12-0 / multi-sentence
       :snt1 (c12-21 / okay-04
                     :ARG1 (c12-25 / that)
                     :ARG2 (c12-20 / officer)
                     :mod (c12-24 / too))
       :snt2 (c12-10 / and
                     :op1 (c12-16 / up-01
                                  :ARG1 (c12-18 / it)
                                  :time (c12-17 / already))
                     :op2 (c12-14 / go-08
                                  :ARG1 c12-18
                                  :ARG2 (c12-2 / viral)
                                  :time (c12-8 / speak-01
                                               :ARG0 (c12-15 / we))))
       :snt3 (c12-13 / and
                     :op1 (c12-23 / company
                                  :name (c12-12 / name
                                                :op1 "NFC"))
                     :op2 (c12-4 / company
                                 :name (c12-22 / name
                                               :op1 "Mobile"
                                               :op2 "Bump"))
                     :op4 (c12-3 / possible-01
                                 :ARG1 (c12-9 / play-01
                                              :ARG0 (c12-11 / bump
                                                            :mod (c12-19 / company
                                                                         :name (c12-1 / name
                                                                                      :op1 "Android")))
                                              :ARG1 (c12-5 / game
                                                           :name (c12-6 / name
                                                                        :op1 "Musical"
                                                                        :op2 "Chairs"))
                                              :ARG3 (c12-7 / data)
                                              :mod c12-24))))

# ::snt thank you. That's what I thought. I know there was actually a recent lawsuit in St Charles county over that very issue.
# ::tokens ["thank", "you", ".", "That", "'s", "what", "I", "thought", ".", "I", "know", "there", "was", "actually", "a", "recent", "lawsuit", "in", "St", "Charles", "county", "over", "that", "very", "issue", "."]
# ::lemmas ["thank", "you", ".", "that", "be", "what", "i", "think", ".", "i", "know", "there", "be", "actually", "a", "recent", "lawsuit", "in", "St", "Charles", "county", "over", "that", "very", "issue", "."]
(c13-2 / multi-sentence
       :snt1 (c13-15 / thank-01
                     :ARG0 (c13-5 / i)
                     :ARG1 (c13-0 / you))
       :snt2 (c13-13 / think-01
                     :ARG0 (c13-12 / i)
                     :ARG1 (c13-8 / that))
       :snt3 (c13-6 / know-01
                    :ARG0 (c13-1 / i)
                    :ARG1 (c13-14 / sue-02
                                  :ARG1 (c13-11 / county
                                                :name (c13-7 / name
                                                             :op1 "St"
                                                             :op2 "Charles"))
                                  :ARG2 (c13-3 / issue-02
                                               :mod (c13-4 / that)
                                               :mod (c13-9 / very))
                                  :time (c13-10 / recent)
                                  :ARG1-of (c13-16 / actual-02))))

# ::snt I am not sure what came of it though....
# ::tokens ["I", "am", "not", "sure", "what", "came", "of", "it", "though", "...."]
# ::lemmas ["i", "be", "not", "sure", "what", "come", "of", "it", "though", "...."]
(c14-0 / have-concession-91
       :ARG1 (c14-4 / sure-02
                    :ARG0 (c14-1 / i)
                    :ARG1 (c14-5 / thing
                                 :ARG1-of (c14-2 / come-03
                                                 :ARG2 (c14-3 / it)))
                    :polarity -))

# ::snt they cant legally seize our phones can they?
# ::tokens ["they", "ca", "nt", "legally", "seize", "our", "phones", "can", "they", "?"]
# ::lemmas ["they", "can", "not", "legally", "seize", "our", "phone", "can", "they", "?"]
(c15-2 / possible-01
       :ARG1 (c15-4 / seize-01
                    :ARG0 (c15-5 / they)
                    :ARG1 (c15-6 / phone
                                 :poss (c15-0 / we))
                    :ARG1-of (c15-1 / legal-02))
       :ARG1-of (c15-3 / request-confirmation-91)
       :polarity -)
