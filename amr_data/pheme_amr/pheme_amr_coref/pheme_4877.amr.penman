# ::snt yes indeed we are! Our thoughts &amp; prayers are with the hostages hoping this situation is resolved peacefully.
# ::tokens ["yes", "indeed", "we", "are", "!", "Our", "thoughts", "&", "amp", ";", "prayers", "are", "with", "the", "hostages", "hoping", "this", "situation", "is", "resolved", "peacefully", "."]
# ::lemmas ["yes", "indeed", "we", "be", "!", "our", "thought", "&", "amp", ";", "prayer", "be", "with", "the", "hostage", "hope", "this", "situation", "be", "resolve", "peacefully", "."]
(c1-4 / multi-sentence
      :snt1 (c1-2 / yes
                  :domain (c1-1 / we)
                  :mod (c1-7 / indeed))
      :snt2 (c1-16 / and
                   :op1 (c1-14 / thing
                               :ARG1-of (c1-12 / think-01
                                               :ARG0 (c1-8 / we)))
                   :op2 (c1-9 / thing
                              :ARG1-of (c1-6 / amp-00)))
      :snt3 (c1-10 / pray-01
                   :ARG0 (c1-0 / hostage
                               :ARG0-of (c1-3 / hope-01
                                              :ARG1 (c1-11 / resolve-01
                                                           :ARG1 (c1-13 / situation
                                                                        :mod (c1-5 / this))
                                                           :manner (c1-15 / peaceful))))))

# ::snt stay safe
# ::tokens ["stay", "safe"]
# ::lemmas ["stay", "safe"]
(c2-0 / stay-01
      :ARG1 (c2-1 / you)
      :ARG3 (c2-2 / safe-01
                  :ARG1 c2-1)
      :mode imperative)

# ::snt why is that?
# ::tokens ["why", "is", "that", "?"]
# ::lemmas ["why", "be", "that", "?"]
(c3-1 / cause-01
      :ARG0 (c3-2 / amr-unknown)
      :ARG1 (c3-0 / that))

# ::snt we are!!!
# ::tokens ["we", "are", "!", "!", "!"]
# ::lemmas ["we", "be", "!", "!", "!"]
(c4-0 / we)

# ::snt I'm surprisingly proud of the police today, not as bad as I thought they were tbh...
# ::tokens ["I", "'m", "surprisingly", "proud", "of", "the", "police", "today", ",", "not", "as", "bad", "as", "I", "thought", "they", "were", "tbh", "..."]
# ::lemmas ["i", "be", "surprisingly", "proud", "of", "the", "police", "today", ",", "not", "as", "bad", "as", "i", "think", "they", "be", "tbh", "..."]
(c5-4 / pride-01
      :ARG0 (c5-3 / i)
      :ARG1 (c5-8 / police)
      :time (c5-7 / today)
      :ARG0-of (c5-6 / surprise-01)
      :ARG1-of (c5-0 / have-degree-91
                     :ARG2 (c5-1 / bad-07
                                 :ARG1 c5-8)
                     :ARG3 (c5-2 / equal)
                     :ARG4 (c5-5 / think-01
                                 :ARG0 c5-3
                                 :ARG1 c5-1)
                     :polarity -)
      :ARG1-of (c5-9 / honest-01))

# ::snt good job folks, stay safe and shoot straight.
# ::tokens ["good", "job", "folks", ",", "stay", "safe", "and", "shoot", "straight", "."]
# ::lemmas ["good", "job", "folk", ",", "stay", "safe", "and", "shoot", "straight", "."]
(c6-5 / say-01
      :ARG1 (c6-6 / and
                  :op1 (c6-4 / stay-01
                             :ARG1 (c6-1 / folk)
                             :ARG3 (c6-2 / safe-01
                                         :ARG1 c6-1))
                  :op2 (c6-3 / shoot-02
                             :ARG0 c6-1
                             :ARG1-of (c6-0 / straight-04)))
      :ARG2 c6-1)

# ::snt a job well done to every police officer! thank you for what you do!!!
# ::tokens ["a", "job", "well", "done", "to", "every", "police", "officer", "!", "thank", "you", "for", "what", "you", "do", "!", "!", "!"]
# ::lemmas ["a", "job", "well", "do", "to", "every", "police", "officer", "!", "thank", "you", "for", "what", "you", "do", "!", "!", "!"]
(c7-4 / multi-sentence
      :snt1 (c7-8 / do-02
                  :ARG1 (c7-0 / job
                              :ARG1-of (c7-1 / well-09))
                  :ARG2 (c7-5 / officer
                              :mod (c7-7 / police)
                              :mod (c7-6 / every)))
      :snt2 (c7-10 / thank-01
                   :ARG1 (c7-2 / you)
                   :ARG2 (c7-9 / thing
                               :ARG1-of (c7-3 / do-02
                                              :ARG0 c7-2))))

# ::snt I understand being proud of the popo but there are still hostages inside and the job isn't done.
# ::tokens ["I", "understand", "being", "proud", "of", "the", "popo", "but", "there", "are", "still", "hostages", "inside", "and", "the", "job", "is", "n't", "done", "."]
# ::lemmas ["i", "understand", "be", "proud", "of", "the", "popo", "but", "there", "be", "still", "hostage", "inside", "and", "the", "job", "be", "not", "do", "."]
(c8-6 / contrast-01
      :ARG1 (c8-2 / understand-01
                  :ARG0 (c8-4 / i)
                  :ARG1 (c8-5 / pride-01
                              :ARG0 c8-4
                              :ARG1 (c8-9 / popo)))
      :ARG2 (c8-10 / and
                   :op1 (c8-0 / hostage
                              :location (c8-7 / inside)
                              :mod (c8-8 / still))
                   :op2 (c8-3 / be-done-08
                              :ARG1 (c8-1 / job)
                              :polarity -)))

# ::snt Yeh we cd uze em in Ferguson
# ::tokens ["Yeh", "we", "cd", "uze", "em", "in", "Ferguson"]
# ::lemmas ["Yeh", "we", "cd", "uze", "em", "in", "Ferguson"]
(c9-3 / possible-01
      :ARG1 (c9-1 / be-located-at-91
                  :ARG1 (c9-5 / they)
                  :ARG2 (c9-4 / city
                              :name (c9-2 / name
                                          :op1 "Ferguson")))
      :mod (c9-0 / yeh
                 :mode expressive))

# ::snt . doing what they are trained do &amp; are paid for? Or maybe we should be proud that once they haven't shot &amp; killed some1?
# ::tokens [".", "doing", "what", "they", "are", "trained", "do", "&", "amp", ";", "are", "paid", "for", "?", "Or", "maybe", "we", "should", "be", "proud", "that", "once", "they", "have", "n't", "shot", "&", "amp", ";", "killed", "some1", "?"]
# ::lemmas [".", "do", "what", "they", "be", "train", "do", "&", "amp", ";", "be", "pay", "for", "?", "or", "maybe", "we", "should", "be", "proud", "that", "once", "they", "have", "not", "shoot", "&", "amp", ";", "kill", "some1", "?"]
(c10-0 / multi-sentence
       :snt1 (c10-5 / and
                    :op1 (c10-2 / do-02
                                :ARG0 (c10-21 / they)
                                :ARG1 (c10-14 / thing
                                              :ARG1-of (c10-13 / train-01)))
                    :op2 (c10-1 / pay-01
                                :ARG2 c10-21)
                    :polarity (c10-12 / amr-unknown))
       :snt2 (c10-17 / or
                     :op2 (c10-4 / possible-01
                                 :ARG1 (c10-10 / recommend-01
                                               :ARG1 (c10-6 / pride-01
                                                            :ARG0 (c10-11 / we)
                                                            :ARG2 (c10-9 / and
                                                                         :op1 (c10-3 / shoot-02
                                                                                     :ARG0 (c10-18 / they)
                                                                                     :ARG1 (c10-19 / thing
                                                                                                   :name (c10-8 / name
                                                                                                                :op1 "Some1"))
                                                                                     :polarity -)
                                                                         :op2 (c10-15 / kill-01
                                                                                      :ARG0 c10-18
                                                                                      :ARG1 (c10-7 / some1)
                                                                                      :polarity -))
                                                            :time (c10-16 / once
                                                                          :op1 c10-3
                                                                          :ARG0 c10-18
                                                                          :ARG1 c10-19
                                                                          :polarity -)))
                                 :polarity (c10-20 / amr-unknown))))

# ::snt : Every Australian should be very proud of their police force today.
# ::tokens [":", "Every", "Australian", "should", "be", "very", "proud", "of", "their", "police", "force", "today", "."]
# ::lemmas [":", "every", "Australian", "should", "be", "very", "proud", "of", "their", "police", "force", "today", "."]
(c11-6 / recommend-01
       :ARG1 (c11-5 / pride-01
                    :ARG0 (c11-9 / person
                                 :mod (c11-7 / country
                                             :name (c11-3 / name
                                                          :op1 "Australia"))
                                 :mod (c11-2 / every))
                    :ARG1 (c11-0 / force
                                 :mod (c11-1 / police)
                                 :poss c11-9)
                    :degree (c11-4 / very)
                    :time (c11-8 / today)))

# ::snt because??
# ::tokens ["because", "?", "?"]
# ::lemmas ["because", "?", "?"]
(c12-0 / cause-01
       :ARG0 (c12-1 / amr-unknown))

# ::snt News Corpse suck up
# ::tokens ["News", "Corpse", "suck", "up"]
# ::lemmas ["News", "Corpse", "suck", "up"]
(c13-0 / suck-up-04
       :ARG0 (c13-2 / corpse
                    :mod (c13-1 / news)))

# ::snt why is today so special?
# ::tokens ["why", "is", "today", "so", "special", "?"]
# ::lemmas ["why", "be", "today", "so", "special", "?"]
(c14-1 / cause-01
       :ARG0 (c14-4 / amr-unknown)
       :ARG1 (c14-2 / special-02
                    :ARG1 (c14-3 / today)
                    :degree (c14-0 / so)))

# ::snt cops and goons are synonymous
# ::tokens ["cops", "and", "goons", "are", "synonymous"]
# ::lemmas ["cop", "and", "goon", "be", "synonymous"]
(c15-0 / synonymous
       :domain (c15-1 / cop)
       :domain (c15-2 / goon))

# ::snt : Every Australian should be very proud of their police force today. hell yeah we are
# ::tokens [":", "Every", "Australian", "should", "be", "very", "proud", "of", "their", "police", "force", "today", ".", "hell", "yeah", "we", "are"]
# ::lemmas [":", "every", "Australian", "should", "be", "very", "proud", "of", "their", "police", "force", "today", ".", "hell", "yeah", "we", "be"]
(c16-4 / multi-sentence
       :snt1 (c16-10 / recommend-01
                     :ARG1 (c16-9 / pride-01
                                  :ARG0 (c16-14 / person
                                                :mod (c16-11 / country
                                                             :name (c16-7 / name
                                                                          :op1 "Australia"))
                                                :mod (c16-6 / every))
                                  :ARG1 (c16-3 / force
                                               :mod (c16-5 / police)
                                               :poss c16-14)
                                  :degree (c16-8 / very)
                                  :time (c16-13 / today)))
       :snt2 (c16-12 / pride-01
                     :ARG0 (c16-1 / we)
                     :ARG1 c16-3
                     :mod (c16-2 / yeah
                                 :mod (c16-0 / hell)
                                 :mode expressive)))

# ::snt always proud!
# ::tokens ["always", "proud", "!"]
# ::lemmas ["always", "proud", "!"]
(c17-0 / pride-01
       :time (c17-1 / always)
       :mode expressive)

# ::snt If only we could say something similar about Murdoch's sensationalist media.
# ::tokens ["If", "only", "we", "could", "say", "something", "similar", "about", "Murdoch", "'s", "sensationalist", "media", "."]
# ::lemmas ["if", "only", "we", "could", "say", "something", "similar", "about", "Murdoch", "'s", "sensationalist", "medium", "."]
(c18-6 / possible-01
       :ARG1 (c18-8 / say-01
                    :ARG0 (c18-0 / we)
                    :ARG1 (c18-4 / something
                                 :ARG1-of (c18-7 / resemble-01
                                                 :ARG2 (c18-2 / media
                                                              :ARG3-of c18-4))
                                 :mod (c18-1 / sensationalist)
                                 :poss (c18-9 / person
                                              :name (c18-5 / name
                                                           :op1 "Murdoch"))))
       :mod (c18-3 / only))

# ::snt I say it ALL the time:
# ::tokens ["I", "say", "it", "ALL", "the", "time", ":"]
# ::lemmas ["i", "say", "it", "all", "the", "time", ":"]
(c19-2 / say-01
       :ARG0 (c19-0 / i)
       :ARG1 (c19-1 / it)
       :frequency (c19-3 / time
                         :mod (c19-4 / all)))
