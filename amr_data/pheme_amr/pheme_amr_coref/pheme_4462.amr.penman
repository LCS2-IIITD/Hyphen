# ::snt it's a joke that this even needs to be said!
# ::tokens ["it", "'s", "a", "joke", "that", "this", "even", "needs", "to", "be", "said", "!"]
# ::lemmas ["it", "be", "a", "joke", "that", "this", "even", "need", "to", "be", "say", "!"]
(c1-0 / joke-01
      :ARG2 (c1-2 / need-01
                  :ARG1 (c1-3 / say-01
                              :ARG1 (c1-4 / this))
                  :mod (c1-1 / even)))

# ::snt it's turned into a spectacle. Truly immoral and disgusting, yet predictable. Humanity...
# ::tokens ["it", "'s", "turned", "into", "a", "spectacle", ".", "Truly", "immoral", "and", "disgusting", ",", "yet", "predictable", ".", "Humanity", "..."]
# ::lemmas ["it", "be", "turn", "into", "a", "spectacle", ".", "truly", "immoral", "and", "disgusting", ",", "yet", "predictable", ".", "humanity", "..."]
(c2-1 / multi-sentence
      :snt1 (c2-8 / turn-02
                  :ARG1 (c2-2 / it)
                  :ARG2 (c2-7 / spectacle))
      :snt2 (c2-10 / and
                   :op1 (c2-3 / moral-02
                              :degree (c2-6 / truly)
                              :polarity -)
                   :op2 (c2-4 / disgust-01
                              :degree c2-6)
                   :concession (c2-5 / predict-01
                                     :ARG1 c2-2
                                     :ARG1-of (c2-9 / possible-01)))
      :snt3 (c2-0 / humanity))

# ::snt the fuck? What's wrong with people
# ::tokens ["the", "fuck", "?", "What", "'s", "wrong", "with", "people"]
# ::lemmas ["the", "fuck", "?", "what", "be", "wrong", "with", "people"]
(c4-2 / multi-sentence
      :snt1 (c4-0 / wrong-02
                  :ARG1 (c4-4 / amr-unknown)
                  :ARG2 (c4-3 / person)
                  :mod (c4-1 / fuck
                             :mode expressive)
                  :snt2-of c4-2)
      :ARG1 c4-4
      :ARG2 c4-3)

# ::snt As if you needed to be told.....
# ::tokens ["As", "if", "you", "needed", "to", "be", "told", "....."]
# ::lemmas ["as", "if", "you", "need", "to", "be", "tell", "....."]
(c5-2 / resemble-01
      :ARG2 (c5-0 / need-01
                  :ARG0 (c5-1 / you)
                  :ARG1 (c5-3 / tell-01
                              :ARG2 c5-1)))

# ::snt I really hope so. Those poor hostages!
# ::tokens ["I", "really", "hope", "so", ".", "Those", "poor", "hostages", "!"]
# ::lemmas ["i", "really", "hope", "so", ".", "those", "poor", "hostage", "!"]
(c6-1 / multi-sentence
      :snt1 (c6-0 / hope-01
                  :ARG0 (c6-2 / i)
                  :ARG1 (c6-5 / so)
                  :degree (c6-4 / really))
      :snt2 (c6-7 / hostage
                  :mod (c6-3 / poor)
                  :mod (c6-6 / that)))

# ::snt hmm I totally wasnt saying this hours ago
# ::tokens ["hmm", "I", "totally", "was", "nt", "saying", "this", "hours", "ago"]
# ::lemmas ["hmm", "i", "totally", "be", "not", "say", "this", "hours", "ago"]
(c7-7 / say-01
      :ARG0 (c7-3 / i)
      :ARG1 (c7-8 / this)
      :time (c7-2 / before
                  :op1 (c7-4 / now)
                  :quant (c7-1 / multiple
                               :op1 (c7-6 / temporal-quantity
                                          :unit (c7-0 / hour)
                                          :quant 1)))
      :mod (c7-5 / total)
      :mod (c7-9 / hmm
                 :mode expressive)
      :polarity -)

# ::snt I can't believe this is happening at home! So worried
# ::tokens ["I", "ca", "n't", "believe", "this", "is", "happening", "at", "home", "!", "So", "worried"]
# ::lemmas ["i", "can", "not", "believe", "this", "be", "happen", "at", "home", "!", "so", "worried"]
(c8-2 / multi-sentence
      :snt1 (c8-6 / possible-01
                  :ARG1 (c8-3 / believe-01
                              :ARG0 (c8-5 / i)
                              :ARG1 (c8-4 / event
                                          :mod (c8-8 / this)
                                          :location (c8-0 / home)))
                  :polarity -)
      :snt2 (c8-1 / worry-01
                  :degree (c8-7 / so)))

# ::snt they wanted to say if you're in the Sydney cbd to check out the seige, you're a knob, take a look at yourself and go home
# ::tokens ["they", "wanted", "to", "say", "if", "you", "'re", "in", "the", "Sydney", "cbd", "to", "check", "out", "the", "seige", ",", "you", "'re", "a", "knob", ",", "take", "a", "look", "at", "yourself", "and", "go", "home"]
# ::lemmas ["they", "want", "to", "say", "if", "you", "be", "in", "the", "Sydney", "cbd", "to", "check", "out", "the", "seige", ",", "you", "be", "a", "knob", ",", "take", "a", "look", "at", "yourself", "and", "go", "home"]
(c9-1 / want-01
      :ARG0 (c9-14 / they)
      :ARG1 (c9-13 / say-01
                   :ARG0 c9-14
                   :ARG1 (c9-0 / have-condition-91
                               :ARG1 (c9-15 / and
                                            :op1 (c9-6 / knob
                                                       :domain (c9-2 / you))
                                            :op2 (c9-3 / look-01
                                                       :ARG0 c9-2
                                                       :ARG1 c9-2)
                                            :op3 (c9-11 / go-02
                                                        :ARG0 c9-2
                                                        :ARG4 (c9-4 / home)))
                               :ARG2 (c9-5 / be-located-at-91
                                           :ARG1 c9-2
                                           :ARG2 (c9-10 / city
                                                        :name (c9-7 / name
                                                                    :op1 "Sydney"))
                                           :purpose (c9-9 / check-out-05
                                                          :ARG0 c9-2
                                                          :ARG1 (c9-12 / company
                                                                       :name (c9-8 / name
                                                                                   :op1 "Sydney"
                                                                                   :op2 "Commercial"
                                                                                   :op3 "BBD")))))))

# ::snt Thank you for a total % clear instruction that takes stupidity into consideration...
# ::tokens ["Thank", "you", "for", "a", "total", "%", "clear", "instruction", "that", "takes", "stupidity", "into", "consideration", "..."]
# ::lemmas ["thank", "you", "for", "a", "total", "%", "clear", "instruction", "that", "take", "stupidity", "into", "consideration", "..."]
(c10-8 / thank-01
       :ARG0 (c10-1 / i)
       :ARG1 (c10-0 / you)
       :ARG2 (c10-5 / instruct-01
                    :ARG1-of (c10-4 / clear-06
                                    :degree (c10-3 / percentage-entity
                                                   :mod (c10-6 / total)
                                                   :value 10))
                    :ARG0-of (c10-2 / take-into-account-04
                                    :ARG1 (c10-7 / stupidity))))

# ::snt Yeah its very scary! Hopefully we end up with a positive outcome but.
# ::tokens ["Yeah", "its", "very", "scary", "!", "Hopefully", "we", "end", "up", "with", "a", "positive", "outcome", "but", "."]
# ::lemmas ["yeah", "its", "very", "scary", "!", "hopefully", "we", "end", "up", "with", "a", "positive", "outcome", "but", "."]
(c11-3 / multi-sentence
       :snt1 (c11-10 / scary-03
                     :ARG0 (c11-6 / it)
                     :degree (c11-7 / very)
                     :mod (c11-1 / yeah))
       :snt2 (c11-0 / hope-01
                    :ARG1 (c11-5 / end-up-03
                                 :ARG1 (c11-2 / we)
                                 :ARG2 (c11-4 / outcome
                                              :mod (c11-8 / positive)))
                    :ARG1-of (c11-9 / contrast-01)))

# ::snt Yeah i feel so bad for them. So innocent.
# ::tokens ["Yeah", "i", "feel", "so", "bad", "for", "them", ".", "So", "innocent", "."]
# ::lemmas ["yeah", "i", "feel", "so", "bad", "for", "they", ".", "so", "innocent", "."]
(c12-1 / multi-sentence
       :snt1 (c12-0 / feel-01
                    :ARG0 (c12-4 / i)
                    :ARG1 (c12-2 / bad-07
                                 :degree (c12-6 / so))
                    :ARG2 (c12-7 / they))
       :snt2 (c12-5 / innocent-01
                    :degree (c12-3 / so)))

# ::snt I know right!!
# ::tokens ["I", "know", "right", "!", "!"]
# ::lemmas ["i", "know", "right", "!", "!"]
(c13-1 / know-01
       :ARG0 (c13-2 / i)
       :ARG1-of (c13-0 / right-02))
