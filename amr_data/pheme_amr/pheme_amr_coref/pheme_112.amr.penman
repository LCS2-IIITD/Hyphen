# ::snt They are. Major fail, 'Murica.
# ::tokens ["They", "are", ".", "Major", "fail", ",", "'", "Murica", "."]
# ::lemmas ["they", "be", ".", "major", "fail", ",", "'", "Murica", "."]
(c1-1 / multi-sentence
      :snt1 (c1-7 / they)
      :snt2 (c1-0 / fail-01
                  :ARG1-of (c1-4 / major-02))
      :snt3 (c1-6 / say-01
                  :ARG0 (c1-2 / i)
                  :ARG2 (c1-5 / person
                              :name (c1-3 / name
                                          :op1 "Murica"))))

# ::snt If you take the dollar well take the gas.
# ::tokens ["If", "you", "take", "the", "dollar", "well", "take", "the", "gas", "."]
# ::lemmas ["if", "you", "take", "the", "dollar", "well", "take", "the", "gas", "."]
(c2-5 / take-01
      :ARG0 (c2-0 / you)
      :ARG1 (c2-3 / gas)
      :condition (c2-4 / take-01
                       :ARG0 c2-0
                       :ARG1 (c2-2 / dollar))
      :mod (c2-1 / well)
      :mode imperative)

# ::snt A state working as designed, with the mystical bullshit stripped away.
# ::tokens ["A", "state", "working", "as", "designed", ",", "with", "the", "mystical", "bullshit", "stripped", "away", "."]
# ::lemmas ["a", "state", "work", "as", "design", ",", "with", "the", "mystical", "bullshit", "strip", "away", "."]
(c3-0 / work-09
      :ARG1 (c3-5 / state)
      :manner (c3-4 / design-01
                    :ARG1 c3-5)
      :manner (c3-3 / strip-01
                    :ARG1 (c3-2 / bullshit
                                :mod (c3-1 / mystical))
                    :ARG2 (c3-6 / away)))

# ::snt For so many it is indeed: not failing...failed state.
# ::tokens ["For", "so", "many", "it", "is", "indeed", ":", "not", "failing", "...", "failed", "state", "."]
# ::lemmas ["for", "so", "many", "it", "be", "indeed", ":", "not", "fail", "...", "fail", "state", "."]
(c4-8 / and
      :op1 (c4-1 / fail-01
                 :ARG1 (c4-7 / state)
                 :polarity -)
      :op2 (c4-5 / fail-01
                 :ARG1 c4-7)
      :domain (c4-4 / it)
      :ARG1-of (c4-0 / have-quant-91
                     :ARG2 (c4-2 / many)
                     :ARG3 (c4-3 / so))
      :mod (c4-6 / indeed))

# ::snt The astonishing pictures coming out of --snipers and tanks trained on civilians--look like they're straight out of a failing state.
# ::tokens ["The", "astonishing", "pictures", "coming", "out", "of", "--snipers", "and", "tanks", "trained", "on", "civilians", "--", "look", "like", "they", "'re", "straight", "out", "of", "a", "failing", "state", "."]
# ::lemmas ["the", "astonishing", "picture", "come", "out", "of", "--snipers", "and", "tank", "train", "on", "civilian", "--", "look", "like", "they", "be", "straight", "out", "of", "a", "fail", "state", "."]
(c5-0 / look-02
      :ARG0 (c5-7 / picture
                  :ARG1-of (c5-9 / come-03
                                 :ARG2 (c5-4 / out-06
                                             :ARG1 (c5-13 / and
                                                          :op1 (c5-11 / sniper)
                                                          :op2 (c5-12 / tank)
                                                          :ARG1-of (c5-10 / train-01
                                                                          :ARG2 (c5-8 / civilian)))))
                  :ARG0-of (c5-6 / astonish-01))
      :ARG1 (c5-3 / be-from-91
                  :ARG1 c5-13
                  :ARG2 (c5-5 / state
                              :ARG1-of (c5-1 / fail-01))
                  :ARG1-of (c5-2 / straight-04)))

# ::snt They are pictures from a failing state.
# ::tokens ["They", "are", "pictures", "from", "a", "failing", "state", "."]
# ::lemmas ["they", "be", "picture", "from", "a", "fail", "state", "."]
(c6-1 / picture
      :source (c6-0 / state
                    :ARG1-of (c6-2 / fail-01))
      :domain (c6-3 / they))

# ::snt Uh, well...
# ::tokens ["Uh", ",", "well", "..."]
# ::lemmas ["uh", ",", "well", "..."]
(c7-0 / uh-huh)

# ::snt a failing state first becomes a police state.
# ::tokens ["a", "failing", "state", "first", "becomes", "a", "police", "state", "."]
# ::lemmas ["a", "fail", "state", "first", "become", "a", "police", "state", "."]
(c8-1 / become-01
      :ARG1 (c8-5 / state
                  :ARG1-of (c8-0 / fail-01))
      :ARG2 (c8-3 / state
                  :mod (c8-4 / police))
      :ord (c8-2 / ordinal-entity
                 :value 1))

# ::snt Tiananmen Square in Ferguson.
# ::tokens ["Tiananmen", "Square", "in", "Ferguson", "."]
# ::lemmas ["Tiananmen", "Square", "in", "Ferguson", "."]
(c9-0 / square
      :name (c9-1 / name
                  :op1 "Tiananmen"
                  :op2 "Square")
      :location (c9-2 / city
                      :name (c9-3 / name
                                  :op1 "Ferguson")))

# ::snt *ahem*
# ::tokens ["*", "ahem", "*"]
# ::lemmas ["*", "ahem", "*"]
(c10-0 / hem
       :mode expressive)

# ::snt I've always lived here. It's always been the most racist place I can possibly imagine.
# ::tokens ["I", "'ve", "always", "lived", "here", ".", "It", "'s", "always", "been", "the", "most", "racist", "place", "I", "can", "possibly", "imagine", "."]
# ::lemmas ["i", "'ve", "always", "live", "here", ".", "it", "be", "always", "be", "the", "most", "racist", "place", "i", "can", "possibly", "imagine", "."]
(c11-2 / multi-sentence
       :snt1 (c11-1 / live-01
                    :ARG0 (c11-7 / i)
                    :location (c11-0 / here)
                    :time (c11-13 / always))
       :snt2 (c11-8 / place
                    :time (c11-6 / always)
                    :domain (c11-11 / it)
                    :ARG1-of (c11-3 / imagine-01
                                    :ARG0 (c11-5 / i)
                                    :ARG1-of (c11-12 / possible-01))
                    :ARG1-of (c11-4 / have-degree-91
                                    :ARG2 (c11-9 / racist)
                                    :ARG3 (c11-10 / most))))

# ::snt How much of a failing state is the USA?
# ::tokens ["How", "much", "of", "a", "failing", "state", "is", "the", "USA", "?"]
# ::lemmas ["how", "much", "of", "a", "fail", "state", "be", "the", "USA", "?"]
(c12-0 / have-mod-91
       :ARG1 (c12-3 / country
                    :name (c12-2 / name
                                 :op1 "USA"))
       :ARG2 (c12-4 / state
                    :ARG1-of (c12-1 / fail-01)
                    :quant (c12-5 / amr-unknown)))

# ::snt because it is a failed state. Anyone thinking about bringing another life into this world can't see the trajectory.
# ::tokens ["because", "it", "is", "a", "failed", "state", ".", "Anyone", "thinking", "about", "bringing", "another", "life", "into", "this", "world", "ca", "n't", "see", "the", "trajectory", "."]
# ::lemmas ["because", "it", "be", "a", "fail", "state", ".", "anyone", "think", "about", "bring", "another", "life", "into", "this", "world", "can", "not", "see", "the", "trajectory", "."]
(c13-2 / multi-sentence
       :snt1 (c13-9 / cause-01
                    :ARG0 (c13-11 / state
                                  :ARG1-of (c13-1 / fail-01)))
       :snt2 (c13-8 / possible-01
                    :ARG1 (c13-5 / see-01
                                 :ARG0 (c13-13 / anyone
                                               :ARG0-of (c13-12 / think-01
                                                                :ARG1 (c13-4 / bring-01
                                                                             :ARG0 c13-13
                                                                             :ARG1 (c13-3 / life
                                                                                          :mod (c13-6 / another))
                                                                             :ARG2 (c13-0 / world
                                                                                          :mod (c13-10 / this)))))
                                 :ARG1 (c13-7 / trajectory))
                    :polarity -))

# ::snt EXACTLY..
# ::tokens ["EXACTLY", ".."]
# ::lemmas ["exactly", ".."]
(c14-0 / exact)

# ::snt They're not. They're out of a very successful "state". This is the point of states.
# ::tokens ["They", "'re", "not", ".", "They", "'re", "out", "of", "a", "very", "successful", "\"", "state", "\"", ".", "This", "is", "the", "point", "of", "states", "."]
# ::lemmas ["they", "be", "not", ".", "they", "be", "out", "of", "a", "very", "successful", "\"", "state", "\"", ".", "this", "be", "the", "point", "of", "state", "."]
(c15-1 / multi-sentence
       :snt1 (c15-9 / they
                    :polarity -)
       :snt2 (c15-2 / out-05
                    :ARG1 (c15-7 / they)
                    :ARG2 (c15-8 / state
                                 :ARG0-of (c15-3 / succeed-01
                                                 :degree (c15-4 / very))))
       :snt3 (c15-5 / point-03
                    :ARG1 (c15-0 / state)
                    :ARG2 (c15-6 / this)))

# ::snt yeah, well this is what has been happening since /11. Every major city where Occupy was active looked like .
# ::tokens ["yeah", ",", "well", "this", "is", "what", "has", "been", "happening", "since", "/11", ".", "Every", "major", "city", "where", "Occupy", "was", "active", "looked", "like", "."]
# ::lemmas ["yeah", ",", "well", "this", "be", "what", "have", "be", "happen", "since", "/11", ".", "every", "major", "city", "where", "Occupy", "be", "active", "look", "like", "."]
(c16-3 / multi-sentence
       :snt1 (c16-12 / this
                     :time (c16-11 / since
                                   :op1 (c16-5 / incident
                                               :name (c16-6 / name
                                                            :op1 "9/11")))
                     :mod (c16-0 / yeah
                                 :mode expressive)
                     :mod (c16-1 / well))
       :snt2 (c16-2 / look-02
                    :ARG0 (c16-10 / city
                                  :ARG1-of (c16-8 / major-02)
                                  :mod (c16-4 / every)
                                  :location-of (c16-13 / activity-06
                                                       :ARG0 (c16-9 / political-movement
                                                                    :name (c16-7 / name
                                                                                 :op1 "Occupy"
                                                                                 :op2 "Oakland"))))))

# ::snt Pictures of a state that has failed us
# ::tokens ["Pictures", "of", "a", "state", "that", "has", "failed", "us"]
# ::lemmas ["picture", "of", "a", "state", "that", "have", "fail", "we"]
(c17-2 / picture
       :topic (c17-0 / state
                     :ARG1-of (c17-3 / fail-01
                                     :ARG2 (c17-1 / we))))

# ::snt exactly what america is.
# ::tokens ["exactly", "what", "america", "is", "."]
# ::lemmas ["exactly", "what", "america", "be", "."]
(c18-3 / thing
       :domain (c18-2 / country
                      :name (c18-0 / name
                                   :op1 "America"))
       :mod (c18-1 / exact))

# ::snt the state has failed black people since its inception.
# ::tokens ["the", "state", "has", "failed", "black", "people", "since", "its", "inception", "."]
# ::lemmas ["the", "state", "have", "fail", "black", "people", "since", "its", "inception", "."]
(c19-0 / fail-01
       :ARG1 (c19-5 / state)
       :ARG2 (c19-4 / person
                    :ARG1-of (c19-1 / black-05))
       :time (c19-2 / since
                    :op1 (c19-3 / inception
                                :poss c19-5)))
