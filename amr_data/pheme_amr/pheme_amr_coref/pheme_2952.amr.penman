# ::snt That cartoon could go down in history.
# ::tokens ["That", "cartoon", "could", "go", "down", "in", "history", "."]
# ::lemmas ["that", "cartoon", "could", "go", "down", "in", "history", "."]
(c1-1 / possible-01
      :ARG1 (c1-4 / go-01
                  :ARG1 (c1-3 / cartoon
                              :mod (c1-5 / that))
                  :ARG4 (c1-2 / down
                              :op1 (c1-0 / history))))

# ::snt To protect free speech all media, TV, papers, magazines should print &amp; show all the cartoons!!!!!!NOW!!!!
# ::tokens ["To", "protect", "free", "speech", "all", "media", ",", "TV", ",", "papers", ",", "magazines", "should", "print", "&", "amp", ";", "show", "all", "the", "cartoons!!!!!!NOW", "!", "!", "!", "!"]
# ::lemmas ["to", "protect", "free", "speech", "all", "medium", ",", "tv", ",", "paper", ",", "magazine", "should", "print", "&", "amp", ";", "show", "all", "the", "cartoons!!!!!!now", "!", "!", "!", "!"]
(c2-1 / multi-sentence
      :snt1 (c2-10 / recommend-01
                   :ARG1 (c2-17 / and
                                :op1 (c2-9 / print-01
                                           :ARG1 (c2-6 / and
                                                       :op1 (c2-11 / media)
                                                       :op2 (c2-15 / television)
                                                       :op3 (c2-16 / paper)
                                                       :op4 (c2-0 / magazine)
                                                       :mod (c2-8 / all)))
                                :op2 (c2-14 / amp-00
                                            :ARG1 c2-6)
                                :purpose (c2-3 / protect-01
                                               :ARG1 (c2-13 / speak-01
                                                            :ARG3-of (c2-2 / free-04)))))
      :snt2 (c2-5 / show-01
                  :ARG1 (c2-12 / cartoon
                               :mod (c2-4 / all))
                  :time (c2-7 / now)))

# ::snt religion should be off topic cause you'll get crazy people killing.
# ::tokens ["religion", "should", "be", "off", "topic", "cause", "you", "'ll", "get", "crazy", "people", "killing", "."]
# ::lemmas ["religion", "should", "be", "off", "topic", "cause", "you", "'ll", "get", "crazy", "people", "kill", "."]
(c3-4 / recommend-01
      :ARG1 (c3-1 / off-topic
                  :domain (c3-2 / religion)
                  :ARG1-of (c3-5 / cause-01
                                 :ARG0 (c3-6 / get-04
                                             :ARG0 (c3-0 / you)
                                             :ARG1 (c3-8 / kill-01
                                                         :ARG0 (c3-3 / person
                                                                     :ARG1-of (c3-7 / crazy-03)))))))

# ::snt don't let a few nutcases intimidate the way we do things or dampen our ability to have a sense of humor
# ::tokens ["do", "n't", "let", "a", "few", "nutcases", "intimidate", "the", "way", "we", "do", "things", "or", "dampen", "our", "ability", "to", "have", "a", "sense", "of", "humor"]
# ::lemmas ["do", "not", "let", "a", "few", "nutcase", "intimidate", "the", "way", "we", "do", "thing", "or", "dampen", "our", "ability", "to", "have", "a", "sense", "of", "humor"]
(c4-3 / let-01
      :ARG0 (c4-1 / you)
      :ARG1 (c4-6 / or
                  :op1 (c4-7 / intimidate-01
                             :ARG0 (c4-9 / nutcase
                                         :quant (c4-4 / few))
                             :ARG1 (c4-2 / way
                                         :manner-of (c4-10 / do-02
                                                           :ARG0 (c4-8 / we)
                                                           :ARG1 (c4-13 / thing))))
                  :op2 (c4-5 / dampen-01
                             :ARG0 c4-9
                             :ARG1 (c4-11 / capable-01
                                          :ARG1 c4-8
                                          :ARG2 (c4-12 / sense-01
                                                       :ARG0 c4-8
                                                       :ARG1 (c4-0 / humor)))))
      :polarity -
      :mode imperative)

# ::snt south park managed include images&amp; humor about Muhammad in the early episodes. Humor is gud the soul.
# ::tokens ["south", "park", "managed", "include", "images&amp", ";", "humor", "about", "Muhammad", "in", "the", "early", "episodes", ".", "Humor", "is", "gud", "the", "soul", "."]
# ::lemmas ["south", "park", "manage", "include", "images&amp", ";", "humor", "about", "Muhammad", "in", "the", "early", "episode", ".", "Humor", "be", "gud", "the", "soul", "."]
(c5-1 / multi-sentence
      :snt1 (c5-5 / include-01
                  :ARG1 (c5-14 / and
                               :op1 (c5-10 / image)
                               :op2 (c5-4 / amp))
                  :ARG2 (c5-0 / humor
                              :topic (c5-8 / person
                                           :name (c5-6 / name
                                                       :op1 "Muhammad"))
                              :time (c5-3 / episode
                                          :mod (c5-2 / early)))
                  :ARG1-of (c5-9 / manage-01
                                 :ARG0 (c5-13 / park
                                              :name (c5-7 / name
                                                          :op1 "South"
                                                          :op2 "Park"))))
      :snt2 (c5-11 / gud
                   :domain c5-0)
      :beneficiary (c5-12 / soul))

# ::snt TERRORIST IS ISLAM NO. PHYSCO YES...
# ::tokens ["TERRORIST", "IS", "ISLAM", "NO", ".", "PHYSCO", "YES", "..."]
# ::lemmas ["terrorist", "be", "ISLAM", "NO", ".", "physco", "yes", "..."]
(c6-1 / multi-sentence
      :snt1 (c6-2 / no
                  :domain (c6-7 / terrorist)
                  :mod (c6-5 / religious-group
                             :name (c6-3 / name
                                         :op1 "Islam")))
      :snt2 (c6-0 / yes
                  :mod (c6-4 / person
                             :name (c6-6 / name
                                         :op1 "Philly"))
                  :mode expressive))
