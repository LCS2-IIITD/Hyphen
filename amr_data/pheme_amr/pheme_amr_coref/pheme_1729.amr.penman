# ::snt yep, even the repulsive Tulsa married cops who killed their daughter's Black bf are in jail while on PAID LEAVE.
# ::tokens ["yep", ",", "even", "the", "repulsive", "Tulsa", "married", "cops", "who", "killed", "their", "daughter", "'s", "Black", "bf", "are", "in", "jail", "while", "on", "PAID", "LEAVE", "."]
# ::lemmas ["yep", ",", "even", "the", "repulsive", "Tulsa", "marry", "cop", "who", "kill", "their", "daughter", "'s", "Black", "bf", "be", "in", "jail", "while", "on", "PAID", "LEAVE", "."]
(c1-0 / jail-01
      :ARG1 (c1-12 / cop
                   :mod (c1-11 / city
                               :name (c1-8 / name
                                           :op1 "Tulsa"))
                   :mod (c1-10 / repulsive)
                   :ARG1-of (c1-4 / marry-01)
                   :ARG0-of (c1-15 / kill-01
                                   :ARG1 (c1-9 / person
                                               :ARG0-of (c1-1 / have-rel-role-91
                                                              :ARG1 (c1-16 / person
                                                                           :ARG0-of (c1-17 / have-rel-role-91
                                                                                           :ARG1 c1-12
                                                                                           :ARG2 (c1-13 / girlfriend
                                                                                                        :ARG1-of (c1-6 / black-05))))
                                                              :ARG2 (c1-14 / daughter)))
                                   :time (c1-3 / leave-11
                                               :ARG0 c1-12
                                               :ARG1-of (c1-5 / pretend-01)))
                   :mod (c1-7 / even))
      :mod (c1-2 / yep))

# ::snt Its sad. : The cop who shot is on paid leave. Shoot a black kid, get a paid vacation.
# ::tokens ["Its", "sad", ".", ":", "The", "cop", "who", "shot", "is", "on", "paid", "leave", ".", "Shoot", "a", "black", "kid", ",", "get", "a", "paid", "vacation", "."]
# ::lemmas ["its", "sad", ".", ":", "the", "cop", "who", "shoot", "be", "on", "pay", "leave", ".", "shoot", "a", "black", "kid", ",", "get", "a", "pay", "vacation", "."]
(c2-2 / multi-sentence
      :snt1 (c2-11 / sad-02
                   :ARG0 (c2-6 / it))
      :snt2 (c2-1 / leave-15
                  :ARG1 (c2-9 / cop
                              :ARG0-of (c2-5 / shoot-02))
                  :ARG2 (c2-8 / pay-01
                              :ARG2 c2-9))
      :snt3 (c2-14 / and
                   :op1 (c2-3 / shoot-02
                              :ARG0 (c2-0 / you)
                              :ARG1 (c2-12 / kid
                                           :ARG1-of (c2-4 / black-05))
                              :mode imperative)
                   :op2 (c2-10 / get-01
                               :ARG0 c2-0
                               :ARG1 (c2-7 / vacation-01
                                           :ARG0 c2-0
                                           :ARG1-of (c2-13 / pay-01))
                               :mode imperative)))

# ::snt wish I could speak on this! Read up on this on
# ::tokens ["wish", "I", "could", "speak", "on", "this", "!", "Read", "up", "on", "this", "on"]
# ::lemmas ["wish", "i", "could", "speak", "on", "this", "!", "read", "up", "on", "this", "on"]
(c3-2 / multi-sentence
      :snt1 (c3-0 / wish-01
                  :ARG0 (c3-3 / i)
                  :ARG1 (c3-4 / possible-01
                              :ARG1 (c3-7 / speak-01
                                          :ARG0 c3-3
                                          :ARG1 (c3-8 / this))))
      :snt2 (c3-5 / read-up-02
                  :ARG0 (c3-1 / you)
                  :ARG1 (c3-6 / this)
                  :mode imperative))

# ::snt MT: The cop who shot is on paid leave. Shoot a black kid, get a paid vacation.
# ::tokens ["MT", ":", "The", "cop", "who", "shot", "is", "on", "paid", "leave", ".", "Shoot", "a", "black", "kid", ",", "get", "a", "paid", "vacation", "."]
# ::lemmas ["MT", ":", "the", "cop", "who", "shoot", "be", "on", "pay", "leave", ".", "shoot", "a", "black", "kid", ",", "get", "a", "pay", "vacation", "."]
(c4-2 / multi-sentence
      :snt1 (c4-12 / say-01
                   :ARG0 (c4-9 / person
                               :name (c4-7 / name
                                           :op1 "MT"))
                   :ARG1 (c4-1 / leave-15
                               :ARG1 (c4-10 / cop
                                            :ARG0-of (c4-6 / shoot-02))
                               :ARG3 (c4-14 / pay-01
                                            :ARG2 c4-10)))
      :snt2 (c4-15 / and
                   :op1 (c4-3 / shoot-02
                              :ARG0 (c4-0 / you)
                              :ARG1 (c4-13 / kid
                                           :ARG1-of (c4-5 / black-05))
                              :mode imperative)
                   :op2 (c4-11 / get-01
                               :ARG0 c4-0
                               :ARG1 (c4-8 / vacation-01
                                           :ARG1-of (c4-4 / pay-01))
                               :mode imperative)))

# ::snt : The cop who shot is on paid leave. Shoot a black kid, get a paid vacation.
# ::tokens [":", "The", "cop", "who", "shot", "is", "on", "paid", "leave", ".", "Shoot", "a", "black", "kid", ",", "get", "a", "paid", "vacation", "."]
# ::lemmas [":", "the", "cop", "who", "shoot", "be", "on", "pay", "leave", ".", "shoot", "a", "black", "kid", ",", "get", "a", "pay", "vacation", "."]
(c5-2 / multi-sentence
      :snt1 (c5-1 / leave-15
                  :ARG1 (c5-7 / cop
                              :ARG0-of (c5-9 / shoot-02))
                  :ARG2 (c5-6 / pay-01
                              :ARG2 c5-7))
      :snt2 (c5-12 / and
                   :op1 (c5-4 / shoot-02
                              :ARG0 (c5-0 / you)
                              :ARG1 (c5-10 / kid
                                           :ARG1-of (c5-3 / black-05))
                              :mode imperative)
                   :op2 (c5-8 / get-01
                              :ARG0 c5-0
                              :ARG1 (c5-5 / vacation
                                          :ARG1-of (c5-11 / pay-01
                                                          :ARG2 c5-0))
                              :mode imperative)))

# ::snt any ID on said cop? seems like that is vital information
# ::tokens ["any", "ID", "on", "said", "cop", "?", "seems", "like", "that", "is", "vital", "information"]
# ::lemmas ["any", "ID", "on", "said", "cop", "?", "seem", "like", "that", "be", "vital", "information"]
(c6-6 / seem-01
      :polarity (c6-7 / amr-unknown)
      :ARG1 (c6-2 / information
                  :mod (c6-3 / vital)
                  :domain (c6-4 / document-01
                                :ARG1 (c6-5 / cop
                                            :ARG1-of (c6-0 / say-01))
                                :mod (c6-1 / any))))

# ::snt It's awful in how typical it is. These guys are violent killers basically being rewarded instead of being brought to justice.
# ::tokens ["It", "'s", "awful", "in", "how", "typical", "it", "is", ".", "These", "guys", "are", "violent", "killers", "basically", "being", "rewarded", "instead", "of", "being", "brought", "to", "justice", "."]
# ::lemmas ["it", "be", "awful", "in", "how", "typical", "it", "be", ".", "these", "guy", "be", "violent", "killer", "basically", "be", "reward", "instead", "of", "be", "bring", "to", "justice", "."]
(c7-2 / multi-sentence
      :snt1 (c7-14 / awful
                   :domain (c7-4 / it)
                   :topic (c7-13 / typical-02
                                 :ARG1 (c7-10 / it)))
      :snt2 (c7-7 / person
                  :ARG0-of (c7-5 / kill-01
                                 :manner (c7-6 / violent))
                  :domain (c7-11 / guy
                                 :mod (c7-12 / this))
                  :ARG1-of (c7-8 / reward-01
                                 :mod (c7-3 / basic)
                                 :ARG1-of (c7-1 / instead-of-91
                                                :ARG2 (c7-9 / bring-01
                                                            :ARG1 c7-11
                                                            :ARG2 (c7-0 / justice))))))

# ::snt that's what happens when you're represented by a union.
# ::tokens ["that", "'s", "what", "happens", "when", "you", "'re", "represented", "by", "a", "union", "."]
# ::lemmas ["that", "be", "what", "happen", "when", "you", "be", "represent", "by", "a", "union", "."]
(c8-2 / event
      :mod (c8-4 / that)
      :time (c8-3 / represent-01
                  :ARG0 (c8-1 / union)
                  :ARG1 (c8-0 / you)))

# ::snt yeah :-/
# ::tokens ["yeah", ":-/"]
# ::lemmas ["yeah", ":-/"]
(c9-0 / yeah
      :mode expressive)

# ::snt lmao. I dont think that's how it works
# ::tokens ["lmao", ".", "I", "do", "nt", "think", "that", "'s", "how", "it", "works"]
# ::lemmas ["lmao", ".", "i", "do", "not", "think", "that", "be", "how", "it", "work"]
(c10-2 / multi-sentence
       :snt1 (c10-1 / laugh-01
                    :ARG0 (c10-4 / i)
                    :manner (c10-6 / loud))
       :snt2 (c10-8 / think-01
                    :ARG0 (c10-5 / i)
                    :ARG1 (c10-7 / that
                                 :manner-of (c10-0 / work-09
                                                   :ARG1 (c10-3 / it)))
                    :polarity -))

# ::snt that is fucked up... as is this fucking country... I gotta get out of here!!!
# ::tokens ["that", "is", "fucked", "up", "...", "as", "is", "this", "fucking", "country", "...", "I", "got", "ta", "get", "out", "of", "here", "!", "!", "!"]
# ::lemmas ["that", "be", "fuck", "up", "...", "as", "be", "this", "fucking", "country", "...", "i", "got", "to", "get", "out", "of", "here", "!", "!", "!"]
(c11-12 / and
        :op1 (c11-1 / fuck-up-02
                    :ARG1 (c11-11 / that))
        :op2 (c11-6 / fuck-up-02
                    :ARG1 (c11-8 / country
                                 :mod (c11-10 / this)
                                 :ARG0-of (c11-4 / fuck-01)))
        :ARG0-of (c11-7 / cause-01
                        :ARG1 (c11-3 / obligate-01
                                     :ARG2 (c11-9 / get-05
                                                  :ARG1 (c11-5 / i)
                                                  :ARG2 (c11-2 / out-06
                                                               :ARG1 c11-5
                                                               :ARG2 (c11-0 / here))))))

# ::snt G Zimmerman killed Travon Martin and became a millionaire through fund raising alone...
# ::tokens ["G", "Zimmerman", "killed", "Travon", "Martin", "and", "became", "a", "millionaire", "through", "fund", "raising", "alone", "..."]
# ::lemmas ["G", "Zimmerman", "kill", "Travon", "Martin", "and", "become", "a", "millionaire", "through", "fund", "raise", "alone", "..."]
(c12-10 / and
        :op1 (c12-8 / kill-01
                    :ARG0 (c12-6 / person
                                 :name (c12-4 / name
                                              :op1 "George"
                                              :op2 "Zimmerman"))
                    :ARG1 (c12-9 / person
                                 :name (c12-5 / name
                                              :op1 "Travon"
                                              :op2 "Martin")))
        :op2 (c12-2 / become-01
                    :ARG1 c12-6
                    :ARG2 (c12-1 / millionaire)
                    :manner (c12-7 / raise-02
                                   :ARG0 c12-6
                                   :ARG1 (c12-0 / fund)
                                   :mod (c12-3 / alone))))

# ::snt &amp; isn't that cop who was videoed beating up that lady here on desk duty...
# ::tokens ["&", "amp", ";", "is", "n't", "that", "cop", "who", "was", "videoed", "beating", "up", "that", "lady", "here", "on", "desk", "duty", "..."]
# ::lemmas ["&", "amp", ";", "be", "not", "that", "cop", "who", "be", "videoe", "beat", "up", "that", "lady", "here", "on", "desk", "duty", "..."]
(c13-9 / and
       :op2 (c13-6 / cop
                   :mod (c13-8 / that)
                   :ARG0-of (c13-3 / beat-up-05
                                   :ARG1 (c13-2 / lady
                                                :mod (c13-7 / that))
                                   :location (c13-0 / here)
                                   :time (c13-5 / duty
                                                :mod (c13-1 / desk)))
                   :ARG1-of (c13-4 / video-01)
                   :polarity -))

# ::snt That would be the appropriate protocol for any police officer shooting rather its white or black or no matter what race.
# ::tokens ["That", "would", "be", "the", "appropriate", "protocol", "for", "any", "police", "officer", "shooting", "rather", "its", "white", "or", "black", "or", "no", "matter", "what", "race", "."]
# ::lemmas ["that", "would", "be", "the", "appropriate", "protocol", "for", "any", "police", "officer", "shoot", "rather", "its", "white", "or", "black", "or", "no", "matter", "what", "race", "."]
(c14-6 / protocol
       :ARG1-of (c14-11 / appropriate-02)
       :purpose (c14-8 / shoot-02
                       :ARG0 (c14-3 / officer
                                    :mod (c14-10 / police)
                                    :mod (c14-4 / any)))
       :domain (c14-9 / that)
       :ARG1-of (c14-7 / regardless-91
                       :ARG2 (c14-1 / or
                                    :op1 (c14-0 / white-02
                                                :ARG1 c14-3)
                                    :op2 (c14-2 / black-05
                                                :ARG1 c14-3)
                                    :op3 c14-7
                                    :ARG2 (c14-5 / race))))

# ::snt The cop who shot is on paid leave. Shoot a black kid, get a paid vacation.
# ::tokens ["The", "cop", "who", "shot", "is", "on", "paid", "leave", ".", "Shoot", "a", "black", "kid", ",", "get", "a", "paid", "vacation", "."]
# ::lemmas ["the", "cop", "who", "shoot", "be", "on", "pay", "leave", ".", "shoot", "a", "black", "kid", ",", "get", "a", "pay", "vacation", "."]
(c15-2 / multi-sentence
       :snt1 (c15-1 / leave-15
                    :ARG1 (c15-7 / cop
                                 :ARG0-of (c15-9 / shoot-02))
                    :ARG2 (c15-6 / pay-01
                                 :ARG1 c15-1))
       :snt2 (c15-12 / and
                     :op1 (c15-4 / shoot-02
                                 :ARG0 (c15-0 / you)
                                 :ARG1 (c15-10 / kid
                                               :ARG1-of (c15-3 / black-05))
                                 :mode imperative)
                     :op2 (c15-8 / get-01
                                 :ARG0 c15-0
                                 :ARG1 (c15-5 / vacation-01
                                              :ARG1-of (c15-11 / pay-01))
                                 :mode imperative)))

# ::snt Lets reword this.. Cop who shot unarmed teenager TIMES is on paid leave. Shoot a black kid, get a paid vacation.
# ::tokens ["Lets", "reword", "this", "..", "Cop", "who", "shot", "unarmed", "teenager", "TIMES", "is", "on", "paid", "leave", ".", "Shoot", "a", "black", "kid", ",", "get", "a", "paid", "vacation", "."]
# ::lemmas ["let", "reword", "this", "..", "Cop", "who", "shoot", "unarmed", "teenager", "TIMES", "be", "on", "pay", "leave", ".", "shoot", "a", "black", "kid", ",", "get", "a", "pay", "vacation", "."]
(c16-0 / multi-sentence
       :snt1 (c16-10 / reword-00
                     :ARG0 (c16-12 / we)
                     :ARG1 (c16-19 / this)
                     :mode imperative)
       :snt2 (c16-7 / leave-11
                    :ARG0 (c16-17 / cop
                                  :ARG0-of (c16-4 / shoot-02
                                                  :ARG1 (c16-18 / teenager
                                                                :ARG1-of (c16-6 / arm-01
                                                                                :polarity -))
                                                  :frequency (c16-1 / rate-entity-91
                                                                    :ARG3 (c16-14 / times))))
                    :ARG2 (c16-3 / pay-01
                                 :ARG2 c16-17))
       :snt3 (c16-13 / and
                     :op1 (c16-9 / shoot-02
                                 :ARG0 (c16-16 / you)
                                 :ARG1 (c16-15 / kid
                                               :ARG1-of (c16-8 / black-05))
                                 :mode imperative)
                     :op2 (c16-11 / get-01
                                  :ARG0 c16-16
                                  :ARG1 (c16-2 / vacation-01
                                               :ARG1-of (c16-5 / pay-01
                                                               :ARG2 c16-16))
                                  :mode imperative)))
