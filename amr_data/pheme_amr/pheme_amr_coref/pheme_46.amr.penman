# ::snt Look on liveleak Becky and make up your own mind. its clear enough to me.
# ::tokens ["Look", "on", "liveleak", "Becky", "and", "make", "up", "your", "own", "mind", ".", "its", "clear", "enough", "to", "me", "."]
# ::lemmas ["look", "on", "liveleak", "Becky", "and", "make", "up", "your", "own", "mind", ".", "its", "clear", "enough", "to", "i", "."]
(c1-3 / multi-sentence
      :snt1 (c1-12 / and
                   :op1 (c1-2 / look-01
                              :ARG0 (c1-1 / you)
                              :ARG1 (c1-7 / person
                                          :name (c1-6 / name
                                                      :op1 "Becky"))
                              :location (c1-11 / liveleak-00
                                               :ARG0 c1-1)
                              :mode imperative)
                   :op2 (c1-8 / make-up-mind-12
                              :ARG0 c1-1
                              :mode imperative))
      :snt2 (c1-9 / clear-06
                  :ARG1 (c1-5 / it)
                  :ARG2-of (c1-0 / have-degree-91
                                 :ARG1 c1-5
                                 :ARG3 (c1-4 / enough)
                                 :ARG6 (c1-10 / i))))

# ::snt I understand ,but it was obvious (to me anyway)from the outset who was responsible
# ::tokens ["I", "understand", ",", "but", "it", "was", "obvious", "(", "to", "me", "anyway)from", "the", "outset", "who", "was", "responsible"]
# ::lemmas ["i", "understand", ",", "but", "it", "be", "obvious", "(", "to", "i", "anyway)from", "the", "outset", "who", "be", "responsible"]
(c2-6 / contrast-01
      :ARG1 (c2-1 / understand-01
                  :ARG0 (c2-4 / i))
      :ARG2 (c2-2 / obvious-01
                  :ARG1 (c2-5 / responsible-01
                              :ARG0 (c2-7 / amr-unknown))
                  :ARG2 c2-4
                  :time (c2-0 / outset)
                  :mod (c2-3 / anyway)))

# ::snt hi wanker x
# ::tokens ["hi", "wanker", "x"]
# ::lemmas ["hi", "wanker", "x"]
(c3-0 / say-01
      :ARG1 (c3-1 / hi)
      :ARG2 (c3-2 / person
                  :name (c3-3 / name
                              :op1 "Wanker")))

# ::snt dont hold your breath tommy ,he could have said where's the snackbar he might have been hungry after murder
# ::tokens ["do", "nt", "hold", "your", "breath", "tommy", ",", "he", "could", "have", "said", "where", "'s", "the", "snackbar", "he", "might", "have", "been", "hungry", "after", "murder"]
# ::lemmas ["do", "not", "hold", "your", "breath", "tommy", ",", "he", "could", "have", "say", "where", "be", "the", "snackbar", "he", "might", "have", "be", "hungry", "after", "murder"]
(c4-12 / say-01
       :ARG0 (c4-7 / i)
       :ARG1 (c4-0 / hold-01
                   :ARG0 (c4-9 / person
                               :name (c4-8 / name
                                           :op1 "Tommy"))
                   :ARG1 (c4-4 / breathe-01
                               :ARG0 c4-9)
                   :ARG1-of (c4-10 / cause-01
                                   :ARG0 (c4-14 / possible-01
                                                :ARG1 (c4-5 / say-01
                                                            :ARG0 c4-9
                                                            :ARG1 (c4-11 / be-located-at-91
                                                                         :ARG1 (c4-1 / snackbar
                                                                                     :ARG1-of (c4-15 / hunger-01
                                                                                                     :ARG0 c4-9
                                                                                                     :ARG1-of (c4-3 / possible-01)
                                                                                                     :time (c4-13 / after
                                                                                                                  :op1 (c4-2 / murder-01))))
                                                                         :ARG2 (c4-6 / amr-unknown)))))
                   :polarity -
                   :mode imperative)
       :ARG2 c4-9)

# ::snt clearly didnt read my tweet did you arsehole and FYI my sister inlaw is muslim
# ::tokens ["clearly", "did", "nt", "read", "my", "tweet", "did", "you", "arsehole", "and", "FYI", "my", "sister", "inlaw", "is", "muslim"]
# ::lemmas ["clearly", "do", "not", "read", "my", "tweet", "do", "you", "arsehole", "and", "FYI", "my", "sister", "inlaw", "be", "muslim"]
(c5-12 / and
       :op1 (c5-8 / read-01
                  :ARG0 (c5-1 / you
                              :mod (c5-3 / arsehole))
                  :ARG1 (c5-11 / tweet-01
                               :ARG0 (c5-4 / i))
                  :ARG1-of (c5-9 / clear-06)
                  :ARG1-of (c5-5 / request-confirmation-91
                                 :ARG2 c5-1)
                  :polarity -)
       :op2 (c5-7 / person
                  :mod (c5-2 / religious-group
                             :name (c5-6 / name
                                         :op1 "Muslim"))
                  :domain c5-7
                  :ARG0-of (c5-0 / have-rel-role-91
                                 :ARG1 c5-4
                                 :ARG2 (c5-10 / sister-in-law))))

# ::snt oh let me guess..
# ::tokens ["oh", "let", "me", "guess", ".."]
# ::lemmas ["oh", "let", "i", "guess", ".."]
(c6-1 / let-01
      :ARG1 (c6-2 / guess-01
                  :ARG0 (c6-3 / i))
      :mod (c6-0 / oh
                 :mode expressive))

# ::snt long untill its on your doorstep ? wake up !!
# ::tokens ["long", "untill", "its", "on", "your", "doorstep", "?", "wake", "up", "!", "!"]
# ::lemmas ["long", "untill", "its", "on", "your", "doorstep", "?", "wake", "up", "!", "!"]
(c7-0 / wake-up-02
      :ARG0 (c7-1 / you
                  :ARG1-of c7-0)
      :polarity (c7-7 / amr-unknown)
      :time (c7-3 / until
                  :op1 (c7-4 / be-located-at-91
                             :ARG1 (c7-5 / it)
                             :ARG2 (c7-6 / doorstep
                                         :poss c7-1)
                             :ARG1-of (c7-2 / long-03)))
      :mode imperative)

# ::snt who said i hated muslims ya pleb show me ?
# ::tokens ["who", "said", "i", "hated", "muslims", "ya", "pleb", "show", "me", "?"]
# ::lemmas ["who", "say", "i", "hate", "muslims", "ya", "pleb", "show", "i", "?"]
(c8-7 / show-01
      :ARG0 (c8-1 / you
                  :mod (c8-5 / pleb))
      :ARG1 (c8-8 / truth-value
                  :polarity-of (c8-2 / say-01
                                     :ARG0 (c8-10 / amr-unknown)
                                     :ARG1 (c8-0 / hate-01
                                                 :ARG0 (c8-3 / i)
                                                 :ARG1 (c8-9 / person
                                                             :mod (c8-6 / religious-group
                                                                        :name (c8-4 / name
                                                                                    :op1 "Islam"))))))
      :ARG2 c8-3)

# ::snt hey dickhead fuck off ! and swivel on my middle finger !
# ::tokens ["hey", "dickhead", "fuck", "off", "!", "and", "swivel", "on", "my", "middle", "finger", "!"]
# ::lemmas ["hey", "dickhead", "fuck", "off", "!", "and", "swivel", "on", "my", "middle", "finger", "!"]
(c9-7 / and
      :op1 (c9-1 / fuck-off-03
                 :ARG0 (c9-5 / dickhead)
                 :mode expressive)
      :op2 (c9-6 / swivel-01
                 :ARG0 c9-5
                 :location (c9-4 / finger
                                 :part-of (c9-3 / i)
                                 :mod (c9-2 / middle))
                 :mode expressive)
      :mod (c9-0 / hey
                 :mode expressive)
      :mode expressive)

# ::snt that's my only point. It appears they were probably extremist muslims, however that doesn't justify Tommys assumptions
# ::tokens ["that", "'s", "my", "only", "point", ".", "It", "appears", "they", "were", "probably", "extremist", "muslims", ",", "however", "that", "does", "n't", "justify", "Tommys", "assumptions"]
# ::lemmas ["that", "be", "my", "only", "point", ".", "it", "appear", "they", "be", "probably", "extremist", "muslim", ",", "however", "that", "do", "not", "justify", "Tommys", "assumption"]
(c10-1 / multi-sentence
       :snt1 (c10-9 / point-04
                    :ARG0 (c10-6 / i)
                    :mod (c10-3 / only)
                    :domain (c10-15 / that))
       :snt2 (c10-11 / contrast-01
                     :ARG1 (c10-17 / appear-02
                                   :ARG1 (c10-16 / person
                                                 :mod (c10-10 / religious-group
                                                              :name (c10-7 / name
                                                                           :op1 "Islam"))
                                                 :mod (c10-4 / extremism)
                                                 :domain (c10-13 / they)
                                                 :mod (c10-2 / probable)))
                     :ARG2 (c10-0 / justify-01
                                  :ARG0 c10-17
                                  :ARG1 (c10-8 / thing
                                               :ARG1-of (c10-5 / assume-02
                                                               :ARG0 (c10-14 / person
                                                                             :name (c10-12 / name
                                                                                           :op1 "Tommys"))))
                                  :polarity -)))

# ::snt Never done a line before?
# ::tokens ["Never", "done", "a", "line", "before", "?"]
# ::lemmas ["never", "do", "a", "line", "before", "?"]
(c11-0 / line-01
       :time (c11-2 / before)
       :polarity (c11-1 / amr-unknown)
       :polarity -)

# ::snt news just reported it wasn't clear who was doing the shouting
# ::tokens ["news", "just", "reported", "it", "was", "n't", "clear", "who", "was", "doing", "the", "shouting"]
# ::lemmas ["news", "just", "report", "it", "be", "not", "clear", "who", "be", "do", "the", "shouting"]
(c12-3 / report-01
       :ARG0 (c12-1 / news)
       :ARG1 (c12-4 / clear-06
                    :ARG1 (c12-2 / person
                                 :ARG0-of (c12-5 / shout-01))
                    :polarity -)
       :mod (c12-0 / just))

# ::snt all I'm saying is that within minutes of the shooting being reported, Tommy blamed islam. Bit low
# ::tokens ["all", "I", "'m", "saying", "is", "that", "within", "minutes", "of", "the", "shooting", "being", "reported", ",", "Tommy", "blamed", "islam", ".", "Bit", "low"]
# ::lemmas ["all", "i", "be", "say", "be", "that", "within", "minutes", "of", "the", "shooting", "be", "report", ",", "Tommy", "blame", "islam", ".", "bit", "low"]
(c13-1 / multi-sentence
       :snt1 (c13-15 / say-01
                     :ARG0 (c13-7 / i)
                     :ARG1 (c13-4 / blame-01
                                  :ARG0 (c13-11 / person
                                                :name (c13-9 / name
                                                             :op1 "Tommy"
                                                             :op2 "Robinson"))
                                  :ARG1 (c13-12 / religious-group
                                                :name (c13-10 / name
                                                              :op1 "Islam"))
                                  :time (c13-17 / after
                                                :op1 (c13-8 / report-01
                                                            :ARG1 (c13-5 / shoot-02))
                                                :quant (c13-2 / up-to
                                                              :op1 (c13-13 / multiple
                                                                           :op1 (c13-16 / temporal-quantity
                                                                                        :unit (c13-0 / minute)
                                                                                        :quant 1)))))
                     :mod (c13-6 / all))
       :snt2 (c13-3 / low-04
                    :degree (c13-14 / bit)))

# ::snt if you dont want to be involved dont get involved its that simple untagging ya !
# ::tokens ["if", "you", "do", "nt", "want", "to", "be", "involved", "do", "nt", "get", "involved", "its", "that", "simple", "untagging", "ya", "!"]
# ::lemmas ["if", "you", "do", "not", "want", "to", "be", "involve", "do", "not", "get", "involve", "its", "that", "simple", "untagge", "ya", "!"]
(c14-3 / involve-01
       :ARG0 (c14-1 / you)
       :condition (c14-0 / want-01
                         :ARG0 c14-1
                         :ARG1 (c14-5 / involve-01
                                      :ARG1 c14-1)
                         :polarity -)
       :ARG1-of (c14-6 / simple-02
                       :degree (c14-7 / that))
       :ARG0-of (c14-4 / cause-01
                       :ARG1 (c14-2 / untag-01
                                    :ARG1 c14-1
                                    :ARG1-of c14-6
                                    :polarity -))
       :polarity -
       :mode imperative)

# ::snt and says the same as me twatstick !
# ::tokens ["and", "says", "the", "same", "as", "me", "twatstick", "!"]
# ::lemmas ["and", "say", "the", "same", "as", "i", "twatstick", "!"]
(c15-6 / and
       :op2 (c15-4 / say-01
                   :ARG0 (c15-0 / he)
                   :ARG1-of (c15-2 / same-01
                                   :ARG2 (c15-1 / say-01
                                                :ARG0 (c15-3 / i
                                                             :mod (c15-5 / twatstick))))))

# ::snt Look get a room and leave me out of your conversation please.
# ::tokens ["Look", "get", "a", "room", "and", "leave", "me", "out", "of", "your", "conversation", "please", "."]
# ::lemmas ["look", "get", "a", "room", "and", "leave", "i", "out", "of", "your", "conversation", "please", "."]
(c16-7 / and
       :op1 (c16-1 / look-01
                   :ARG0 (c16-0 / you)
                   :ARG1 (c16-5 / get-01
                                :ARG0 c16-0
                                :ARG1 (c16-3 / room))
                   :mode imperative
                   :polite +)
       :op2 (c16-6 / leave-out-03
                   :ARG0 c16-0
                   :ARG1 (c16-2 / i)
                   :ARG2 (c16-4 / converse-01
                                :ARG0 c16-0)
                   :mode imperative
                   :polite +))

# ::snt Well, tbf she's got a better brain that Mr Robinson here. And that's a fact.
# ::tokens ["Well", ",", "tbf", "she", "'s", "got", "a", "better", "brain", "that", "Mr", "Robinson", "here", ".", "And", "that", "'s", "a", "fact", "."]
# ::lemmas ["well", ",", "tbf", "she", "be", "get", "a", "well", "brain", "that", "Mr", "Robinson", "here", ".", "and", "that", "be", "a", "fact", "."]
(c17-3 / multi-sentence
       :snt1 (c17-0 / have-03
                    :ARG0 (c17-7 / person
                                 :name (c17-5 / name
                                              :op1 "tbf"))
                    :ARG1 (c17-4 / brain
                                 :ARG1-of (c17-15 / have-degree-91
                                                  :ARG2 (c17-10 / good-02
                                                                :ARG1 c17-4)
                                                  :ARG3 (c17-8 / more)
                                                  :ARG4 (c17-9 / brain
                                                               :part-of (c17-14 / person
                                                                                :name (c17-6 / name
                                                                                             :op1 "Mr"
                                                                                             :op2 "Robinson"))
                                                               :location (c17-11 / here))))
                    :mod (c17-1 / well))
       :snt2 (c17-12 / and
                     :op2 (c17-2 / fact
                                 :domain (c17-13 / that))))

# ::snt he knew the back story about the cartoon Mohammaed the printed,so not a full assumption
# ::tokens ["he", "knew", "the", "back", "story", "about", "the", "cartoon", "Mohammaed", "the", "printed", ",", "so", "not", "a", "full", "assumption"]
# ::lemmas ["he", "know", "the", "back", "story", "about", "the", "cartoon", "Mohammaed", "the", "print", ",", "so", "not", "a", "full", "assumption"]
(c18-7 / know-01
       :ARG0 (c18-0 / he)
       :ARG1 (c18-6 / story
                    :mod (c18-2 / back)
                    :topic (c18-5 / cartoon)
                    :ARG1-of (c18-3 / print-01))
       :ARG0-of (c18-4 / cause-01
                       :ARG1 (c18-8 / assume-01
                                    :degree (c18-1 / full)
                                    :polarity -)))

# ::snt anyway he got it bang on again! He's good at predicting things lol, tom any chance of this SATs lotto numbers
# ::tokens ["anyway", "he", "got", "it", "bang", "on", "again", "!", "He", "'s", "good", "at", "predicting", "things", "lol", ",", "tom", "any", "chance", "of", "this", "SATs", "lotto", "numbers"]
# ::lemmas ["anyway", "he", "get", "it", "bang", "on", "again", "!", "he", "be", "good", "at", "predict", "thing", "lol", ",", "tom", "any", "chance", "of", "this", "sats", "lotto", "number"]
(c19-0 / multi-sentence
       :snt1 (c19-12 / get-on-21
                     :ARG0 (c19-7 / he)
                     :ARG1 (c19-14 / it)
                     :mod (c19-6 / again
                                 :mod (c19-9 / bang))
                     :mod (c19-13 / anyway))
       :snt2 (c19-3 / good-03
                    :ARG1 (c19-5 / he)
                    :ARG2 (c19-2 / predict-01
                                 :ARG0 c19-5
                                 :ARG1 (c19-21 / thing))
                    :ARG2-of (c19-8 / laugh-01
                                    :ARG0 (c19-16 / i)
                                    :manner (c19-20 / loud)
                                    :mode expressive))
       :snt3 (c19-19 / chance-02
                     :ARG0 (c19-4 / person
                                  :name (c19-10 / name
                                                :op1 "Tom"))
                     :ARG1 c19-19
                     :ARG1 (c19-18 / number
                                   :mod (c19-17 / team
                                                :name (c19-1 / name
                                                             :op1 "SAT"))
                                   :mod (c19-15 / this)))
       :mod (c19-11 / any))

# ::snt seen the video it's horrific.Shot a man who begged for his life.Monsters screaming allah akbar.Not muslims?
# ::tokens ["seen", "the", "video", "it", "'s", "horrific", ".", "Shot", "a", "man", "who", "begged", "for", "his", "life", ".", "Monsters", "screaming", "allah", "akbar", ".", "Not", "muslims", "?"]
# ::lemmas ["see", "the", "video", "it", "be", "horrific", ".", "shot", "a", "man", "who", "beg", "for", "his", "life", ".", "monster", "scream", "allah", "akbar", ".", "not", "muslim", "?"]
(c20-3 / multi-sentence
       :snt1 (c20-16 / see-01
                     :ARG0 (c20-1 / you)
                     :ARG1 (c20-10 / video)
                     :ARG2 (c20-0 / horrific
                                  :domain (c20-8 / it))
                     :mode imperative)
       :snt2 (c20-6 / shoot-02
                    :ARG1 (c20-11 / man
                                  :ARG0-of (c20-5 / beg-01
                                                  :ARG2 (c20-2 / life
                                                               :poss c20-11))))
       :snt3 (c20-4 / scream-01
                    :ARG0 (c20-13 / cop)
                    :ARG3 (c20-17 / allah
                                  :mod (c20-7 / akbar)))
       :snt4 (c20-12 / person
                     :mod (c20-14 / religious-group
                                  :name (c20-9 / name
                                               :op1 "Islam"))
                     :polarity (c20-15 / amr-unknown)
                     :polarity -))

# ::snt hey dickhead x
# ::tokens ["hey", "dickhead", "x"]
# ::lemmas ["hey", "dickhead", "x"]
(c21-0 / say-01
       :ARG0 (c21-3 / i)
       :ARG1 (c21-1 / hey)
       :ARG2 (c21-2 / dickhead))

# ::snt you fucking simpleton
# ::tokens ["you", "fucking", "simpleton"]
# ::lemmas ["you", "fucking", "simpleton"]
(c22-0 / simpleton
       :domain (c22-1 / you)
       :mod (c22-2 / fucking
                   :mode expressive))

# ::snt but they said they cannot confirm where the shouting was coming from
# ::tokens ["but", "they", "said", "they", "can", "not", "confirm", "where", "the", "shouting", "was", "coming", "from"]
# ::lemmas ["but", "they", "say", "they", "can", "not", "confirm", "where", "the", "shouting", "be", "come", "from"]
(c23-3 / contrast-01
       :ARG2 (c23-5 / say-01
                    :ARG0 (c23-7 / they)
                    :ARG1 (c23-1 / possible-01
                                 :ARG1 (c23-2 / confirm-01
                                              :ARG0 c23-7
                                              :ARG1 (c23-4 / thing
                                                           :ARG2-of (c23-6 / come-03
                                                                           :ARG1 (c23-0 / shout-01))))
                                 :polarity -)))

# ::snt becky come on that's weak ,everyone is wrong once in a while
# ::tokens ["becky", "come", "on", "that", "'s", "weak", ",", "everyone", "is", "wrong", "once", "in", "a", "while"]
# ::lemmas ["becky", "come", "on", "that", "be", "weak", ",", "everyone", "be", "wrong", "once", "in", "a", "while"]
(c24-8 / and
       :op1 (c24-7 / come-on-25
                   :ARG1 (c24-5 / person
                                :name (c24-4 / name
                                             :op1 "Becky"))
                   :ARG2 (c24-0 / weak-02
                                :ARG1 c24-5)
                   :mode imperative)
       :op2 (c24-3 / wrong-04
                   :ARG1 (c24-2 / everyone)
                   :frequency (c24-6 / rate-entity-91
                                     :ARG2 (c24-1 / while)
                                     :ARG1 1)))

# ::snt and get a gram up your nose ya mong might wake you up !
# ::tokens ["and", "get", "a", "gram", "up", "your", "nose", "ya", "mong", "might", "wake", "you", "up", "!"]
# ::lemmas ["and", "get", "a", "gram", "up", "your", "nose", "ya", "mong", "might", "wake", "you", "up", "!"]
(c26-7 / and
       :op2 (c26-6 / get-04
                   :ARG0 (c26-0 / you
                                :part (c26-3 / nose))
                   :ARG1 (c26-5 / gram)
                   :ARG2 (c26-2 / up-03
                                :ARG1 c26-5
                                :ARG2 c26-3)
                   :ARG0-of (c26-1 / wake-up-02
                                   :ARG1 c26-0
                                   :ARG1-of (c26-4 / possible-01))
                   :mode imperative))

# ::snt or look at CNN amature footage , you dont have to condemn all muslims to condemn islamists how
# ::tokens ["or", "look", "at", "CNN", "amature", "footage", ",", "you", "do", "nt", "have", "to", "condemn", "all", "muslims", "to", "condemn", "islamists", "how"]
# ::lemmas ["or", "look", "at", "CNN", "amature", "footage", ",", "you", "do", "not", "have", "to", "condemn", "all", "muslims", "to", "condemn", "islamist", "how"]
(c27-6 / or
       :op2 (c27-1 / look-01
                   :ARG0 (c27-0 / you)
                   :ARG1 (c27-3 / footage
                                :ARG1-of (c27-2 / mature-02
                                                :polarity -)
                                :source (c27-10 / publication
                                                :name (c27-8 / name
                                                             :op1 "CNN")))
                   :ARG1-of (c27-12 / cause-01
                                    :ARG0 (c27-4 / obligate-01
                                                 :ARG1 c27-0
                                                 :ARG2 (c27-11 / condemn-01
                                                               :ARG0 c27-0
                                                               :ARG1 (c27-15 / person
                                                                             :mod (c27-13 / religious-group
                                                                                          :name (c27-9 / name
                                                                                                       :op1 "Islam"))
                                                                             :mod (c27-16 / all))
                                                               :purpose (c27-14 / condemn-01
                                                                                :ARG0 c27-0
                                                                                :ARG1 (c27-5 / person
                                                                                             :mod c27-13))
                                                               :manner (c27-7 / amr-unknown))
                                                 :polarity -))
                   :mode imperative))

# ::snt Leave me out of your conversation - thanks
# ::tokens ["Leave", "me", "out", "of", "your", "conversation", "-", "thanks"]
# ::lemmas ["leave", "i", "out", "of", "your", "conversation", "-", "thank"]
(c28-2 / multi-sentence
       :snt1 (c28-1 / leave-14
                    :ARG0 (c28-0 / you)
                    :ARG1 (c28-4 / i)
                    :ARG2 (c28-3 / out-06
                                 :ARG1 c28-4
                                 :ARG2 (c28-5 / converse-01
                                              :ARG0 c28-0))
                    :mode imperative)
       :snt2 (c28-7 / thank-01
                    :ARG0 c28-4)
       :ARG1 (c28-6 / you))

# ::snt : Fact that the Gunmen were shouting "Allah Hu Akbar" while shootingFact: decided by Tommy Robinson
# ::tokens [":", "Fact", "that", "the", "Gunmen", "were", "shouting", "\"", "Allah", "Hu", "Akbar", "\"", "while", "shootingFact", ":", "decided", "by", "Tommy", "Robinson"]
# ::lemmas [":", "fact", "that", "the", "Gunmen", "be", "shout", "\"", "Allah", "Hu", "Akbar", "\"", "while", "shootingfact", ":", "decide", "by", "Tommy", "Robinson"]
(c29-0 / fact
       :topic (c29-7 / shout-01
                     :ARG0 (c29-6 / gunman)
                     :ARG1 (c29-4 / person
                                  :name (c29-2 / name
                                               :op1 "Allah"
                                               :op2 "Hu"
                                               :op3 "Akbar"))
                     :time (c29-1 / shoot-02))
       :ARG1-of (c29-5 / decide-01
                       :ARG0 c29-4
                       :name (c29-3 / name
                                    :op1 "Tommy"
                                    :op2 "Robinson")))

# ::snt there are live videos showing that ..
# ::tokens ["there", "are", "live", "videos", "showing", "that", ".."]
# ::lemmas ["there", "be", "live", "video", "show", "that", ".."]
(c30-0 / show-01
       :ARG0 (c30-1 / video
                    :mod (c30-2 / live))
       :ARG1 (c30-3 / that))

# ::snt I'm never going to deny anything that's clear. However within about of the news breaking, he'd blamed islam.
# ::tokens ["I", "'m", "never", "going", "to", "deny", "anything", "that", "'s", "clear", ".", "However", "within", "about", "of", "the", "news", "breaking", ",", "he", "'d", "blamed", "islam", "."]
# ::lemmas ["i", "be", "never", "go", "to", "deny", "anything", "that", "be", "clear", ".", "however", "within", "about", "of", "the", "news", "breaking", ",", "he", "have", "blame", "islam", "."]
(c31-1 / multi-sentence
       :snt1 (c31-8 / deny-01
                    :ARG0 (c31-5 / i)
                    :ARG1 (c31-13 / anything
                                  :ARG1-of (c31-9 / clear-06))
                    :time (c31-3 / ever)
                    :polarity -)
       :snt2 (c31-10 / contrast-01
                     :ARG2 (c31-2 / blame-01
                                  :ARG0 (c31-0 / he)
                                  :ARG1 (c31-11 / religious-group
                                                :name (c31-6 / name
                                                             :op1 "Islam"))
                                  :time (c31-4 / about
                                               :op1 (c31-12 / break-13
                                                            :ARG1 (c31-7 / news))))))

# ::snt have u watched the video yet to see I was % correct, it's ok I accept your apology becky
# ::tokens ["have", "u", "watched", "the", "video", "yet", "to", "see", "I", "was", "%", "correct", ",", "it", "'s", "ok", "I", "accept", "your", "apology", "becky"]
# ::lemmas ["have", "u", "watch", "the", "video", "yet", "to", "see", "i", "be", "%", "correct", ",", "it", "be", "ok", "i", "accept", "your", "apology", "becky"]
(c32-2 / multi-sentence
       :snt1 (c32-0 / watch-01
                    :ARG0 (c32-1 / you)
                    :ARG1 (c32-7 / video)
                    :polarity (c32-16 / amr-unknown)
                    :time (c32-13 / yet)
                    :purpose (c32-14 / see-01
                                     :ARG0 c32-1
                                     :ARG1 (c32-10 / correct-02
                                                   :ARG1 (c32-6 / i)
                                                   :degree (c32-8 / percentage))))
       :snt2 (c32-4 / okay-04
                    :ARG1 (c32-5 / accept-01
                                 :ARG0 (c32-11 / i)
                                 :ARG1 (c32-9 / apologize-01
                                              :ARG0 (c32-3 / you)))
                    :ARG1-of (c32-12 / cause-01
                                     :ARG0 (c32-15 / ky))))
