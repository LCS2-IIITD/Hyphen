# ::snt I know, what a happy situation to remember by with a picture!
# ::tokens ["I", "know", ",", "what", "a", "happy", "situation", "to", "remember", "by", "with", "a", "picture", "!"]
# ::lemmas ["i", "know", ",", "what", "a", "happy", "situation", "to", "remember", "by", "with", "a", "picture", "!"]
(c1-6 / know-01
      :ARG0 (c1-2 / i)
      :ARG1 (c1-0 / happy-01
                  :ARG0 (c1-4 / remember-01
                              :ARG0 c1-2
                              :ARG1 (c1-5 / situation)
                              :instrument (c1-3 / picture))
                  :degree (c1-1 / so)))

# ::snt it's so disrespectful
# ::tokens ["it", "'s", "so", "disrespectful"]
# ::lemmas ["it", "be", "so", "disrespectful"]
(c2-1 / disrespect-01
      :ARG1 (c2-2 / it)
      :degree (c2-0 / so))

# ::snt Wow seriously? People's lives are at stake and all they can think of is
# ::tokens ["Wow", "seriously", "?", "People", "'s", "lives", "are", "at", "stake", "and", "all", "they", "can", "think", "of", "is"]
# ::lemmas ["wow", "seriously", "?", "people", "'s", "life", "be", "at", "stake", "and", "all", "they", "can", "think", "of", "be"]
(c3-2 / multi-sentence
      :snt1 (c3-9 / serious-01
                  :ARG2-of (c3-0 / have-degree-91
                                 :ARG3 (c3-6 / more)))
      :snt2 (c3-12 / and
                   :op1 (c3-3 / stake-01
                              :ARG1 (c3-1 / life
                                          :poss (c3-7 / person)))
                   :op2 (c3-10 / thing
                               :ARG1-of (c3-8 / think-01
                                              :ARG0 (c3-5 / they)
                                              :ARG1-of (c3-11 / possible-01))
                               :mod (c3-4 / all))))

# ::snt will get them...
# ::tokens ["will", "get", "them", "..."]
# ::lemmas ["will", "get", "they", "..."]
(c4-1 / get-01
      :ARG1 (c4-0 / they))

# ::snt : People being held as hostages does seem a perfect selfie moment . Absolute morons!
# ::tokens [":", "People", "being", "held", "as", "hostages", "does", "seem", "a", "perfect", "selfie", "moment", ".", "Absolute", "morons", "!"]
# ::lemmas [":", "people", "be", "hold", "as", "hostage", "do", "seem", "a", "perfect", "selfie", "moment", ".", "absolute", "moron", "!"]
(c5-2 / multi-sentence
      :snt1 (c5-6 / seem-01
                  :ARG1 (c5-4 / moment
                              :ARG1-of (c5-5 / perfect-02)
                              :mod (c5-3 / selfie)
                              :domain (c5-0 / hold-01
                                            :ARG1 (c5-8 / person)
                                            :ARG3 (c5-9 / hostage))))
      :snt2 (c5-1 / moron
                  :degree (c5-7 / absolute)))

# ::snt one word... cuntishness
# ::tokens ["one", "word", "...", "cuntishness"]
# ::lemmas ["one", "word", "...", "cuntishness"]
(c6-0 / word
      :ARG1-of (c6-2 / mean-01
                     :ARG2 (c6-1 / cunt))
      :quant 1)

# ::snt I know right jfc
# ::tokens ["I", "know", "right", "jfc"]
# ::lemmas ["i", "know", "right", "jfc"]
(c7-4 / say-01
      :ARG0 (c7-0 / i)
      :ARG1 (c7-5 / know-01
                  :ARG0 c7-0
                  :ARG1-of (c7-3 / right-02))
      :ARG2 (c7-2 / person
                  :name (c7-1 / name
                              :op1 "Jfc")))

# ::snt Twitter famous now aren't you
# ::tokens ["Twitter", "famous", "now", "are", "n't", "you"]
# ::lemmas ["twitter", "famous", "now", "be", "not", "you"]
(c8-0 / fame-01
      :ARG1 (c8-3 / publication
                  :name (c8-1 / name
                              :op1 "Twitter"))
      :time (c8-2 / now)
      :ARG1-of (c8-4 / request-confirmation-91))

# ::snt wow.
# ::tokens ["wow", "."]
# ::lemmas ["wow", "."]
(c9-0 / wow
      :mode expressive)

# ::snt They should just be grateful they're not inside the cafe looking out!
# ::tokens ["They", "should", "just", "be", "grateful", "they", "'re", "not", "inside", "the", "cafe", "looking", "out", "!"]
# ::lemmas ["they", "should", "just", "be", "grateful", "they", "be", "not", "inside", "the", "cafe", "look", "out", "!"]
(c10-4 / recommend-01
       :ARG1 (c10-7 / appreciate-02
                    :ARG0 (c10-6 / they)
                    :ARG1 (c10-2 / be-located-at-91
                                 :ARG1 c10-6
                                 :ARG2 (c10-3 / inside
                                              :op1 (c10-5 / cafe))
                                 :manner (c10-1 / look-01
                                                :ARG0 c10-6)
                                 :polarity -)
                    :mod (c10-0 / just)))

# ::snt morons like them should get a fucking life. forgive me for saying this, they should be the ones held hostage inside.
# ::tokens ["morons", "like", "them", "should", "get", "a", "fucking", "life", ".", "forgive", "me", "for", "saying", "this", ",", "they", "should", "be", "the", "ones", "held", "hostage", "inside", "."]
# ::lemmas ["moron", "like", "they", "should", "get", "a", "fucking", "life", ".", "forgive", "i", "for", "say", "this", ",", "they", "should", "be", "the", "one", "hold", "hostage", "inside", "."]
(c11-3 / multi-sentence
       :snt1 (c11-11 / recommend-01
                     :ARG1 (c11-12 / get-01
                                   :ARG0 (c11-10 / moron
                                                 :ARG1-of (c11-7 / resemble-01
                                                                 :ARG2 (c11-16 / they)))
                                   :ARG1 (c11-2 / life
                                                :mod (c11-4 / fucking))))
       :snt2 (c11-8 / forgive-01
                    :ARG0 (c11-1 / you)
                    :ARG1 (c11-6 / i)
                    :ARG2 (c11-15 / say-01
                                  :ARG0 c11-6
                                  :ARG1 (c11-14 / this))
                    :mode imperative)
       :snt3 (c11-5 / recommend-01
                    :ARG1 (c11-0 / hold-01
                                 :ARG1 (c11-17 / hostage
                                               :domain (c11-9 / they))
                                 :location (c11-13 / inside))))

# ::snt How disrespectful is this!!!!! Innocent lives are in jeopardy &amp; idiots near the caf take selfies, they should be ashamed!!
# ::tokens ["How", "disrespectful", "is", "this", "!", "!", "!", "!", "!", "Innocent", "lives", "are", "in", "jeopardy", "&", "amp", ";", "idiots", "near", "the", "caf", "take", "selfies", ",", "they", "should", "be", "ashamed", "!", "!"]
# ::lemmas ["how", "disrespectful", "be", "this", "!", "!", "!", "!", "!", "innocent", "life", "be", "in", "jeopardy", "&", "amp", ";", "idiot", "near", "the", "caf", "take", "selfie", ",", "they", "should", "be", "ashamed", "!", "!"]
(c12-2 / multi-sentence
       :snt1 (c12-7 / disrespect-01
                    :ARG0 (c12-12 / this)
                    :degree (c12-11 / so)
                    :mode expressive)
       :snt2 (c12-13 / and
                     :op1 (c12-0 / jeopardize-01
                                 :ARG1 (c12-1 / life
                                              :ARG1-of (c12-5 / innocent-01)))
                     :op2 (c12-4 / amp))
       :snt3 (c12-8 / recommend-01
                    :ARG1 (c12-3 / shame-02
                                 :ARG1 (c12-9 / idiot
                                              :ARG1-of (c12-6 / near-02
                                                              :ARG2 (c12-10 / cafeteria))
                                              :ARG2-of c12-8))))

# ::snt how about asking the hostage-taker to swap hostages for these morons!
# ::tokens ["how", "about", "asking", "the", "hostage", "-", "taker", "to", "swap", "hostages", "for", "these", "morons", "!"]
# ::lemmas ["how", "about", "ask", "the", "hostage", "-", "taker", "to", "swap", "hostage", "for", "these", "moron", "!"]
(c13-8 / amr-unknown
       :topic (c13-3 / ask-01
                     :ARG1 (c13-6 / swap-01
                                  :ARG0 (c13-4 / person
                                               :ARG0-of (c13-7 / take-01
                                                               :ARG1 (c13-0 / hostage)))
                                  :ARG1 (c13-1 / hostage)
                                  :ARG2 (c13-2 / moron
                                               :mod (c13-5 / this)))
                     :ARG2 c13-4))

# ::snt wtf???
# ::tokens ["wtf", "?", "?", "?"]
# ::lemmas ["wtf", "?", "?", "?"]
(c14-1 / amr-unknown
       :mod (c14-0 / fuck))

# ::snt this people are sick! How could you take a selfie in a situation like this .. Fuck tarts
# ::tokens ["this", "people", "are", "sick", "!", "How", "could", "you", "take", "a", "selfie", "in", "a", "situation", "like", "this", "..", "Fuck", "tarts"]
# ::lemmas ["this", "people", "be", "sick", "!", "how", "could", "you", "take", "a", "selfie", "in", "a", "situation", "like", "this", "..", "fuck", "tart"]
(c15-2 / multi-sentence
       :snt1 (c15-10 / sick-05
                     :ARG1 (c15-7 / person
                                  :mod (c15-11 / this)))
       :snt2 (c15-12 / possible-01
                     :ARG1 (c15-9 / take-01
                                  :ARG0 (c15-0 / you)
                                  :ARG1 (c15-4 / selfie)
                                  :ARG2 (c15-1 / situation
                                               :ARG1-of (c15-8 / resemble-01
                                                               :ARG2 (c15-6 / this))))
                     :manner (c15-13 / amr-unknown))
       :snt3 (c15-3 / fuck-01
                    :ARG1 (c15-5 / tart)
                    :mode expressive))

# ::snt they are smiling too !
# ::tokens ["they", "are", "smiling", "too", "!"]
# ::lemmas ["they", "be", "smile", "too", "!"]
(c16-0 / smile-01
       :ARG0 (c16-1 / they)
       :mod (c16-2 / too))

# ::snt wankers!!
# ::tokens ["wankers", "!", "!"]
# ::lemmas ["wanker", "!", "!"]
(c17-0 / person
       :ARG0-of (c17-1 / fuck-01)
       :mode expressive)

# ::snt Karma will get'em.
# ::tokens ["Karma", "will", "get'em", "."]
# ::lemmas ["Karma", "will", "get'em", "."]
(c18-3 / get-01
       :ARG0 (c18-1 / person
                    :name (c18-0 / name
                                 :op1 "Karma"))
       :ARG1 (c18-2 / they))
