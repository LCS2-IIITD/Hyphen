# ::snt Anybody in that town have a day job? Just sayin'.
# ::tokens ["Anybody", "in", "that", "town", "have", "a", "day", "job", "?", "Just", "sayin", "'", "."]
# ::lemmas ["anybody", "in", "that", "town", "have", "a", "day", "job", "?", "just", "sayin", "'", "."]
(c1-0 / have-03
      :polarity (c1-8 / amr-unknown)
      :ARG0 (c1-2 / anybody
                  :location (c1-6 / town
                                  :mod (c1-4 / that)))
      :ARG1 (c1-1 / job
                  :mod (c1-3 / day))
      :ARG1-of (c1-5 / say-01
                     :mod (c1-7 / just)))

# ::snt The people of proved McCulloch wrong, didn't they! Also, completely legal move by Gov. McC shloud know that
# ::tokens ["The", "people", "of", "proved", "McCulloch", "wrong", ",", "did", "n't", "they", "!", "Also", ",", "completely", "legal", "move", "by", "Gov.", "McC", "shloud", "know", "that"]
# ::lemmas ["the", "people", "of", "proved", "McCulloch", "wrong", ",", "do", "not", "they", "!", "also", ",", "completely", "legal", "move", "by", "Gov.", "McC", "shloud", "know", "that"]
(c2-0 / multi-sentence
      :snt1 (c2-1 / prove-01
                  :ARG0 (c2-2 / person
                              :ARG0-of (c2-5 / have-org-role-91
                                             :ARG2 (c2-13 / governor)))
                  :ARG1 (c2-15 / wrong-04
                               :ARG1 (c2-8 / person
                                           :name (c2-10 / name
                                                        :op1 "McCulloch")))
                  :ARG1-of (c2-12 / request-confirmation-91))
      :snt2 (c2-16 / know-01
                   :ARG0 (c2-14 / person
                                :ARG0-of (c2-4 / have-org-role-91
                                               :ARG2 (c2-11 / member)))
                   :ARG1 (c2-6 / move-02
                               :ARG0 (c2-9 / person
                                           :name c2-10
                                           :op1 "McCulloch"))
                   :ARG1-of (c2-7 / legal-02
                                  :ARG1-of (c2-17 / complete-02))
                   :mod (c2-3 / also)
                   :mod (c2-18 / loud)))

# ::snt Exactly. He's up for re-election in . The people of &amp; MO should remember ignored them &amp; ate funnel cake.
# ::tokens ["Exactly", ".", "He", "'s", "up", "for", "re", "-", "election", "in", ".", "The", "people", "of", "&", "amp", ";", "MO", "should", "remember", "ignored", "them", "&", "amp", ";", "ate", "funnel", "cake", "."]
# ::lemmas ["exactly", ".", "he", "be", "up", "for", "re", "-", "election", "in", ".", "the", "people", "of", "&", "amp", ";", "MO", "should", "remember", "ignore", "they", "&", "amp", ";", "eat", "funnel", "cake", "."]
(c3-0 / multi-sentence
      :snt1 (c3-10 / exact)
      :snt2 (c3-15 / up-03
                   :ARG1 (c3-7 / he)
                   :ARG2 (c3-14 / reelect-01
                                :ARG1 c3-7))
      :snt3 (c3-1 / recommend-01
                  :ARG1 (c3-11 / remember-01
                               :ARG0 (c3-6 / and
                                           :op1 (c3-2 / person
                                                      :poss (c3-16 / and
                                                                   :op1 (c3-19 / city
                                                                               :name (c3-12 / name
                                                                                            :op1 "New"
                                                                                            :op2 "Orleans"))
                                                                   :op2 (c3-4 / state
                                                                              :name (c3-18 / name
                                                                                           :op1 "Missouri"))))
                                           :op2 (c3-5 / person
                                                      :poss c3-16))
                               :ARG1 (c3-13 / and
                                            :op1 (c3-17 / ignore-01
                                                        :ARG0 c3-16
                                                        :ARG1 c3-16)
                                            :op2 (c3-9 / eat-01
                                                       :ARG0 c3-16
                                                       :ARG1 (c3-3 / cake
                                                                   :mod (c3-8 / funnel)))))))

# ::snt example Israelis n &amp; ; brute force; suppression/ never the answer
# ::tokens ["example", "Israelis", "n", "&", "amp", ";", ";", "brute", "force", ";", "suppression/", "never", "the", "answer"]
# ::lemmas ["example", "Israelis", "n", "&", "amp", ";", ";", "brute", "force", ";", "suppression/", "never", "the", "answer"]
(c4-9 / and
      :op1 (c4-6 / person
                 :mod (c4-7 / country
                            :name (c4-4 / name
                                        :op1 "Israel"))
                 :example-of (c4-5 / nigger))
      :op2 (c4-0 / force-04
                 :mod (c4-1 / brute))
      :op3 (c4-8 / suppress-01
                 :ARG2-of (c4-3 / answer-01
                                :time (c4-2 / ever)
                                :polarity -)))

# ::snt No, what a difference a police departments response makes!
# ::tokens ["No", ",", "what", "a", "difference", "a", "police", "departments", "response", "makes", "!"]
# ::lemmas ["no", ",", "what", "a", "difference", "a", "police", "department", "response", "make", "!"]
(c5-6 / and
      :op1 (c5-0 / have-polarity-91
                 :ARG2 -)
      :op2 (c5-4 / differ-02
                 :ARG1 (c5-3 / respond-01
                             :ARG0 (c5-1 / department
                                         :mod (c5-2 / police)))
                 :degree (c5-5 / so)))

# ::snt : What a difference not
# ::tokens [":", "What", "a", "difference", "not"]
# ::lemmas [":", "what", "a", "difference", "not"]
(c6-0 / differ-02
      :degree (c6-1 / amr-unknown)
      :polarity -)

# ::snt it not a day making a difference its the Capt. Hes talking and respecting the pple of Ferguson. I think hes a hero
# ::tokens ["it", "not", "a", "day", "making", "a", "difference", "its", "the", "Capt", ".", "He", "s", "talking", "and", "respecting", "the", "pple", "of", "Ferguson", ".", "I", "think", "he", "s", "a", "hero"]
# ::lemmas ["it", "not", "a", "day", "make", "a", "difference", "its", "the", "Capt", ".", "he", "s", "talk", "and", "respect", "the", "pple", "of", "Ferguson", ".", "i", "think", "he", "s", "a", "hero"]
(c7-1 / multi-sentence
      :snt1 (c7-8 / contrast-01
                  :ARG1 (c7-6 / make-01
                              :ARG1 (c7-7 / differ-02)
                              :ARG2 (c7-13 / talk-01
                                           :ARG0 (c7-9 / person
                                                       :ARG0-of (c7-0 / have-org-role-91
                                                                      :ARG2 (c7-10 / captain))))
                              :polarity -)
                  :ARG2 (c7-11 / respect-01
                               :ARG0 c7-9
                               :ARG1 (c7-14 / person
                                            :name (c7-4 / name
                                                        :op1 "Ferguson")
                                            :quant (c7-2 / ple))))
      :snt2 (c7-12 / think-01
                   :ARG0 (c7-3 / i)
                   :ARG1 (c7-15 / hero
                                :domain (c7-5 / he))))

# ::snt there was still several shootings and injured, plus property damage overnigjt in .
# ::tokens ["there", "was", "still", "several", "shootings", "and", "injured", ",", "plus", "property", "damage", "overnigjt", "in", "."]
# ::lemmas ["there", "be", "still", "several", "shooting", "and", "injure", ",", "plus", "property", "damage", "overnigjt", "in", "."]
(c8-8 / and
      :op1 (c8-3 / and
                 :op1 (c8-7 / shoot-02)
                 :op2 (c8-4 / injure-01)
                 :quant (c8-2 / several)
                 :mod (c8-0 / still))
      :op2 (c8-6 / damage-01
                 :ARG1 (c8-5 / property)
                 :quant (c8-1 / over)))

# ::snt What a difference showing respect and talking to people makes.
# ::tokens ["What", "a", "difference", "showing", "respect", "and", "talking", "to", "people", "makes", "."]
# ::lemmas ["what", "a", "difference", "show", "respect", "and", "talk", "to", "people", "make", "."]
(c9-3 / differ-02
      :ARG1 (c9-4 / show-01
                  :ARG1 (c9-2 / respect-01))
      :ARG2 (c9-5 / talk-01
                  :ARG2 (c9-1 / person))
      :degree (c9-0 / so))

# ::snt He was enjoying the State Fair from what I heard.
# ::tokens ["He", "was", "enjoying", "the", "State", "Fair", "from", "what", "I", "heard", "."]
# ::lemmas ["he", "be", "enjoy", "the", "State", "Fair", "from", "what", "i", "hear", "."]
(c10-2 / enjoy-01
       :ARG0 (c10-0 / he)
       :ARG1 (c10-1 / event
                    :name (c10-4 / name
                                 :op1 "State"
                                 :op2 "Fair"))
       :source (c10-5 / thing
                      :ARG1-of (c10-6 / hear-01
                                      :ARG0 (c10-3 / i))))

# ::snt Well, yeah. When there are no criminal activities like looting or arson going on. Forgot about the obligatory riot.
# ::tokens ["Well", ",", "yeah", ".", "When", "there", "are", "no", "criminal", "activities", "like", "looting", "or", "arson", "going", "on", ".", "Forgot", "about", "the", "obligatory", "riot", "."]
# ::lemmas ["well", ",", "yeah", ".", "when", "there", "be", "no", "criminal", "activity", "like", "looting", "or", "arson", "go", "on", ".", "forget", "about", "the", "obligatory", "riot", "."]
(c11-3 / multi-sentence
       :snt1 (c11-1 / yeah
                    :mod (c11-0 / well)
                    :mode expressive)
       :snt2 (c11-6 / be-temporally-at-91
                    :ARG2 (c11-11 / activity-06
                                  :ARG1-of (c11-10 / criminal-03)
                                  :example (c11-7 / or
                                                  :op1 (c11-2 / loot-01)
                                                  :op2 (c11-8 / arson-01))
                                  :polarity -))
       :snt3 (c11-4 / forget-01
                    :ARG1 (c11-9 / riot-01
                                 :ARG2-of (c11-5 / obligate-01))))

# ::snt What a difference made by taking police OUT! Also there hugging ppl. Where was ??
# ::tokens ["What", "a", "difference", "made", "by", "taking", "police", "OUT", "!", "Also", "there", "hugging", "ppl", ".", "Where", "was", "?", "?"]
# ::lemmas ["what", "a", "difference", "make", "by", "take", "police", "out", "!", "also", "there", "hug", "ppl", ".", "where", "be", "?", "?"]
(c12-1 / multi-sentence
       :snt1 (c12-6 / differ-02
                    :ARG1 (c12-10 / take-out-11
                                  :ARG1 (c12-5 / police))
                    :degree (c12-8 / so))
       :snt2 (c12-0 / hug-01
                    :ARG1 (c12-11 / person
                                  :ARG0-of (c12-12 / have-org-role-91
                                                   :ARG2 (c12-2 / ppl)))
                    :location (c12-7 / there)
                    :mod (c12-9 / also))
       :snt3 (c12-3 / be-located-at-91
                    :ARG1 (c12-4 / amr-unknown)))

# ::snt What a difference a new police officer makes.
# ::tokens ["What", "a", "difference", "a", "new", "police", "officer", "makes", "."]
# ::lemmas ["what", "a", "difference", "a", "new", "police", "officer", "make", "."]
(c13-3 / differ-02
       :ARG1 (c13-0 / officer
                    :mod (c13-2 / police)
                    :ARG1-of (c13-1 / new-01))
       :degree (c13-4 / so))

# ::snt What a difference a day makes. via
# ::tokens ["What", "a", "difference", "a", "day", "makes", ".", "via"]
# ::lemmas ["what", "a", "difference", "a", "day", "make", ".", "via"]
(c14-3 / make-02
       :ARG0 (c14-2 / day)
       :ARG1 (c14-1 / differ-02
                    :degree (c14-0 / so)))

# ::snt Time to End Police Militarization Now!
# ::tokens ["Time", "to", "End", "Police", "Militarization", "Now", "!"]
# ::lemmas ["time", "to", "end", "Police", "Militarization", "now", "!"]
(c15-4 / time
       :time-of (c15-1 / end-01
                       :ARG1 (c15-0 / Militarization
                                    :mod (c15-3 / police))
                       :time (c15-2 / now)))

# ::snt Agreed. ANd what about Bob McCulloch?
# ::tokens ["Agreed", ".", "ANd", "what", "about", "Bob", "McCulloch", "?"]
# ::lemmas ["agree", ".", "and", "what", "about", "Bob", "McCulloch", "?"]
(c16-0 / multi-sentence
       :snt1 (c16-6 / agree-01
                    :ARG1 (c16-1 / event))
       :snt2 (c16-2 / ask-01
                    :ARG1 (c16-4 / amr-unknown
                                 :topic (c16-5 / person
                                               :name (c16-3 / name
                                                            :op1 "Bob"
                                                            :op2 "McCulloch")
                                               :ARG2-of c16-2))))

# ::snt Sad press didn't cover War Policing at by Quan &amp; HS of protesters b4 Scott Olsen was shot
# ::tokens ["Sad", "press", "did", "n't", "cover", "War", "Policing", "at", "by", "Quan", "&", "amp", ";", "HS", "of", "protesters", "b4", "Scott", "Olsen", "was", "shot"]
# ::lemmas ["sad", "press", "do", "not", "cover", "War", "Policing", "at", "by", "Quan", "&", "amp", ";", "HS", "of", "protester", "b4", "Scott", "Olsen", "be", "shoot"]
(c17-2 / multi-sentence
       :snt1 (c17-10 / cover-03
                     :ARG0 (c17-8 / press)
                     :ARG1 (c17-13 / Policing
                                   :mod (c17-1 / war-01)
                                   :source (c17-9 / company
                                                  :name (c17-6 / name
                                                               :op1 "Quan"
                                                               :op2 "&"
                                                               :op3 "amp")))
                     :ARG1-of (c17-11 / sad-02)
                     :polarity -)
       :snt2 (c17-5 / shoot-02
                    :ARG1 (c17-3 / person
                                 :ARG0-of (c17-12 / protest-01)
                                 :mod (c17-0 / high-school
                                             :poss (c17-4 / person
                                                          :name (c17-7 / name
                                                                       :op1 "Scott"
                                                                       :op2 "Olsen"))))))
