# ::snt This scene takes place after the attack of
# ::tokens ["This", "scene", "takes", "place", "after", "the", "attack", "of"]
# ::lemmas ["this", "scene", "take", "place", "after", "the", "attack", "of"]
(c1-0 / scene
      :mod (c1-1 / this)
      :time (c1-3 / after
                  :op1 (c1-2 / attack-01)))

# ::snt Deeply condemn the attack! No one has right to kill the others in the name of Islam. Horrific barbaric attack!
# ::tokens ["Deeply", "condemn", "the", "attack", "!", "No", "one", "has", "right", "to", "kill", "the", "others", "in", "the", "name", "of", "Islam", ".", "Horrific", "barbaric", "attack", "!"]
# ::lemmas ["deeply", "condemn", "the", "attack", "!", "no", "one", "have", "right", "to", "kill", "the", "other", "in", "the", "name", "of", "Islam", ".", "horrific", "barbaric", "attack", "!"]
(c2-2 / multi-sentence
      :snt1 (c2-10 / condemn-01
                   :ARG0 (c2-1 / you)
                   :ARG1 (c2-13 / attack-01)
                   :manner (c2-9 / deep-02)
                   :mode imperative)
      :snt2 (c2-11 / right-05
                   :ARG1 (c2-7 / no-one)
                   :ARG2 (c2-12 / kill-01
                                :ARG0 c2-7
                                :ARG1 (c2-4 / other)
                                :beneficiary (c2-6 / religious-group
                                                   :name (c2-8 / name
                                                               :op1 "Islam"))))
      :snt3 (c2-5 / attack-01
                  :mod (c2-3 / barbaric)
                  :mod (c2-0 / Horrific)))

# ::snt and the second one wasn't. Point?
# ::tokens ["and", "the", "second", "one", "was", "n't", ".", "Point", "?"]
# ::lemmas ["and", "the", "second", "one", "be", "not", ".", "point", "?"]
(c3-2 / multi-sentence
      :snt1 (c3-6 / and
                  :op2 (c3-3 / one
                             :ord (c3-1 / ordinal-entity
                                        :value 2)
                             :ARG1-of (c3-0 / have-polarity-91
                                            :ARG2 -)))
      :snt2 (c3-5 / point-03
                  :polarity (c3-4 / amr-unknown)))

# ::snt where's the blood?
# ::tokens ["where", "'s", "the", "blood", "?"]
# ::lemmas ["where", "be", "the", "blood", "?"]
(c4-2 / be-located-at-91
      :ARG1 (c4-0 / blood)
      :ARG2 (c4-1 / amr-unknown))

# ::snt terrorist has no Religion Parisattackers
# ::tokens ["terrorist", "has", "no", "Religion", "Parisattackers"]
# ::lemmas ["terrorist", "have", "no", "Religion", "Parisattackers"]
(c5-0 / have-03
      :ARG0 (c5-4 / terrorist)
      :ARG1 (c5-2 / religion)
      :location (c5-3 / city
                      :name (c5-1 / name
                                  :op1 "Paris"))
      :polarity -)

# ::snt from the attackers point of view it would not matter, if anything it sealed his fate.
# ::tokens ["from", "the", "attackers", "point", "of", "view", "it", "would", "not", "matter", ",", "if", "anything", "it", "sealed", "his", "fate", "."]
# ::lemmas ["from", "the", "attacker", "point", "of", "view", "it", "would", "not", "matter", ",", "if", "anything", "it", "seal", "his", "fate", "."]
(c6-9 / and
      :op1 (c6-2 / matter-01
                 :ARG1 (c6-5 / it)
                 :ARG1-of (c6-0 / have-point-of-view-08
                                :ARG0 (c6-7 / person
                                            :ARG0-of (c6-4 / attack-01)))
                 :polarity -)
      :op2 (c6-8 / seal-01
                 :ARG0 c6-5
                 :ARG1 (c6-1 / fate
                             :poss (c6-3 / he))
                 :condition (c6-6 / anything)))

# ::snt Came about seconds after the still when he was actually killed m8
# ::tokens ["Came", "about", "seconds", "after", "the", "still", "when", "he", "was", "actually", "killed", "m8"]
# ::lemmas ["come", "about", "seconds", "after", "the", "still", "when", "he", "be", "actually", "kill", "m8"]
(c7-1 / be-temporally-at-91
      :ARG2 (c7-8 / after
                  :op1 (c7-5 / still)
                  :time-of (c7-7 / kill-01
                                 :ARG1 (c7-0 / he)
                                 :ARG1-of (c7-3 / actual-02))
                  :quant (c7-4 / about
                               :op1 (c7-6 / temporal-quantity
                                          :unit (c7-2 / second)
                                          :quant 1))))

# ::snt inspiring wot most of us dont want in our societies, haters, feeding off haters
# ::tokens ["inspiring", "wot", "most", "of", "us", "do", "nt", "want", "in", "our", "societies", ",", "haters", ",", "feeding", "off", "haters"]
# ::lemmas ["inspiring", "wot", "most", "of", "we", "do", "not", "want", "in", "our", "society", ",", "hater", ",", "feed", "off", "hater"]
(c8-12 / awe-01
       :ARG0 (c8-1 / want-01
                   :ARG0 (c8-9 / person
                               :ARG1-of (c8-7 / include-91
                                              :ARG2 (c8-8 / we)
                                              :ARG3 (c8-3 / most)))
                   :ARG1 (c8-6 / and
                               :op1 (c8-11 / person
                                           :ARG0-of (c8-0 / hate-01))
                               :op2 (c8-2 / feed-off-02
                                          :ARG1 (c8-5 / person
                                                      :ARG0-of (c8-4 / hate-01))))
                   :location (c8-10 / society
                                    :poss c8-8)
                   :polarity -))

# ::snt The last* person.
# ::tokens ["The", "last", "*", "person", "."]
# ::lemmas ["the", "last", "*", "person", "."]
(c9-1 / person
      :ord (c9-0 / ordinal-entity
                 :value "-1"))

# ::snt My heart is heavy with sorrow for those innocent victims, their mourning families and friends, colleagues alike!
# ::tokens ["My", "heart", "is", "heavy", "with", "sorrow", "for", "those", "innocent", "victims", ",", "their", "mourning", "families", "and", "friends", ",", "colleagues", "alike", "!"]
# ::lemmas ["my", "heart", "be", "heavy", "with", "sorrow", "for", "those", "innocent", "victim", ",", "their", "mourning", "family", "and", "friend", ",", "colleague", "alike", "!"]
(c10-10 / heavy
        :domain (c10-9 / heart
                       :part-of (c10-13 / i))
        :ARG1-of (c10-17 / cause-01
                         :ARG0 (c10-6 / sorrow-01
                                      :ARG0 (c10-2 / victim
                                                   :ARG1-of (c10-14 / innocent-01)
                                                   :mod (c10-18 / that)
                                                   :ARG2-of (c10-0 / include-91
                                                                   :ARG1 (c10-8 / and
                                                                                :op1 (c10-11 / family
                                                                                             :ARG1-of (c10-1 / mourn-01
                                                                                                             :ARG0 c10-2))
                                                                                :op2 (c10-3 / person
                                                                                            :ARG0-of (c10-4 / have-rel-role-91
                                                                                                            :ARG1 c10-2
                                                                                                            :ARG2 (c10-16 / friend)))
                                                                                :op3 (c10-7 / person
                                                                                            :ARG0-of (c10-15 / have-rel-role-91
                                                                                                             :ARG1 c10-2
                                                                                                             :ARG2 (c10-5 / colleague)))
                                                                                :ARG2-of (c10-12 / alike-05
                                                                                                 :ARG1 c10-8)))))))

# ::snt first person killed in Charlie Hebdo attacks was Muslim police officer bastards
# ::tokens ["first", "person", "killed", "in", "Charlie", "Hebdo", "attacks", "was", "Muslim", "police", "officer", "bastards"]
# ::lemmas ["first", "person", "kill", "in", "Charlie", "Hebdo", "attack", "be", "Muslim", "police", "officer", "bastard"]
(c11-3 / bastard
       :domain (c11-7 / person
                      :ord (c11-4 / ordinal-entity
                                  :value 1)
                      :ARG1-of (c11-9 / kill-01
                                      :time (c11-11 / attack-01
                                                    :ARG1 (c11-2 / magazine
                                                                 :name (c11-5 / name
                                                                              :op1 "Charlie"
                                                                              :op2 "Ch Hebdo"))))
                      :mod (c11-8 / religious-group
                                  :name (c11-6 / name
                                               :op1 "Muslim"))
                      :ARG0-of (c11-0 / have-org-role-91
                                      :ARG1 (c11-10 / police)
                                      :ARG2 (c11-1 / officer))))

# ::snt slam adna katliam yapmak cinayettir, terrn ta kendisidir. Paris saldrsnda hayatn kaybeden ilk polis bir Mslman.
# ::tokens ["slam", "adna", "katliam", "yapmak", "cinayettir", ",", "terrn", "ta", "kendisidir", ".", "Paris", "saldrsnda", "hayatn", "kaybeden", "ilk", "polis", "bir", "Mslman", "."]
# ::lemmas ["slam", "adna", "katliam", "yapmak", "cinayettir", ",", "terrn", "ta", "kendisidir", ".", "Paris", "saldrsnda", "hayatn", "kaybeden", "ilk", "polis", "bir", "Mslman", "."]
(c12-0 / multi-sentence
       :snt1 (c12-10 / and
                     :op1 (c12-7 / slam-02
                                 :ARG1 (c12-4 / person
                                              :mod (c12-14 / religious-group
                                                           :name (c12-13 / name
                                                                         :op1 "Islam"))))
                     :op2 (c12-11 / have-mod-91
                                  :ARG1 c12-4
                                  :ARG2 (c12-8 / person
                                               :mod (c12-1 / religious-group
                                                           :name (c12-21 / name
                                                                         :op1 "Christian"))))
                     :op3 (c12-9 / have-mod-91
                                 :ARG1 c12-4
                                 :ARG2 (c12-22 / cinayettir))
                     :op4 (c12-3 / have-mod-91
                                 :ARG1 (c12-23 / terrn)
                                 :ARG2 (c12-19 / kendisidir)))
       :snt2 (c12-18 / have-mod-91
                     :ARG1 (c12-5 / city
                                  :name (c12-2 / name
                                               :op1 "Paris"))
                     :ARG2 (c12-20 / hayatn
                                   :ARG1-of (c12-17 / kayak-01)))
       :snt3 (c12-15 / have-mod-91
                     :ARG1 (c12-12 / person
                                   :name (c12-6 / name
                                                :op1 "Mslman"))
                     :ARG2 (c12-16 / politician)))

# ::snt alahh akbar alahh akbar alahh akbar alahh akbar alahh akbar alahh akbar alahh akbar alahh akbar alahh akbar alahh akbar alahh
# ::tokens ["alahh", "akbar", "alahh", "akbar", "alahh", "akbar", "alahh", "akbar", "alahh", "akbar", "alahh", "akbar", "alahh", "akbar", "alahh", "akbar", "alahh", "akbar", "alahh", "akbar", "alahh"]
# ::lemmas ["alahh", "akbar", "alahh", "akbar", "alahh", "akbar", "alahh", "akbar", "alahh", "akbar", "alahh", "akbar", "alahh", "akbar", "alahh", "akbar", "alahh", "akbar", "alahh", "akbar", "alahh"]
(c13-7 / and
       :op1 (c13-4 / criminal-organization
                   :name (c13-0 / name
                                :op1 "alahh"
                                :op2 "Allah"))
       :op2 (c13-3 / criminal-organization
                   :name (c13-1 / name
                                :op1 "alahh"
                                :op2 "Allah"))
       :op3 (c13-6 / criminal-organization
                   :name (c13-2 / name
                                :op1 "alahh"
                                :op2 "Allah"))
       :op4 (c13-8 / criminal-organization
                   :name (c13-5 / name
                                :op1 "alahh"
                                :op2 "Allah")))

# ::snt : The first person killed in Charlie Hebdo attacks was Muslim police officer
# ::tokens [":", "The", "first", "person", "killed", "in", "Charlie", "Hebdo", "attacks", "was", "Muslim", "police", "officer"]
# ::lemmas [":", "the", "first", "person", "kill", "in", "Charlie", "Hebdo", "attack", "be", "Muslim", "police", "officer"]
(c14-8 / kill-01
       :ARG1 (c14-6 / person
                    :mod (c14-7 / religious-group
                                :name (c14-4 / name
                                             :op1 "Muslim"))
                    :ARG0-of (c14-0 / have-org-role-91
                                    :ARG1 (c14-9 / police)
                                    :ARG2 (c14-3 / officer)))
       :location (c14-10 / attack-01
                         :ARG1 (c14-2 / magazine
                                      :name (c14-5 / name
                                                   :op1 "Charlie"
                                                   :op2 "Ch Hebdo")))
       :ord (c14-1 / ordinal-entity
                   :value 1))

# ::snt EVIL SCUM
# ::tokens ["EVIL", "SCUM"]
# ::lemmas ["EVIL", "SCUM"]
(c15-0 / scum
       :mode expressive)

# ::snt Yet - the timeline as put forward by the French Police says that Police Officer was killed as they left the building to flee.
# ::tokens ["Yet", "-", "the", "timeline", "as", "put", "forward", "by", "the", "French", "Police", "says", "that", "Police", "Officer", "was", "killed", "as", "they", "left", "the", "building", "to", "flee", "."]
# ::lemmas ["yet", "-", "the", "timeline", "as", "put", "forward", "by", "the", "French", "Police", "say", "that", "Police", "Officer", "be", "kill", "as", "they", "leave", "the", "building", "to", "flee", "."]
(c16-0 / have-concession-91
       :ARG2 (c16-11 / say-01
                     :ARG0 (c16-12 / timeline
                                   :ARG1-of (c16-9 / put-01
                                                   :ARG0 (c16-13 / police
                                                                 :mod (c16-10 / country
                                                                              :name (c16-7 / name
                                                                                           :op1 "France")))
                                                   :ARG2 (c16-1 / forward)))
                     :ARG1 (c16-6 / kill-01
                                  :ARG1 (c16-3 / person
                                               :ARG0-of (c16-14 / have-org-role-91
                                                                :ARG1 c16-13
                                                                :ARG2 (c16-5 / officer)))
                                  :time (c16-2 / leave-11
                                               :ARG0 c16-3
                                               :ARG1 (c16-4 / building)
                                               :purpose (c16-8 / flee-05
                                                               :ARG0 c16-3)))))

# ::snt : The first person killed in Charlie Hebdo attacks was Muslim police officer
# ::tokens [":", "The", "first", "person", "killed", "in", "Charlie", "Hebdo", "attacks", "was", "Muslim", "police", "officer"]
# ::lemmas [":", "the", "first", "person", "kill", "in", "Charlie", "Hebdo", "attack", "be", "Muslim", "police", "officer"]
(c17-8 / kill-01
       :ARG1 (c17-6 / person
                    :mod (c17-7 / religious-group
                                :name (c17-4 / name
                                             :op1 "Muslim"))
                    :ARG0-of (c17-0 / have-org-role-91
                                    :ARG1 (c17-9 / police)
                                    :ARG2 (c17-3 / officer)))
       :location (c17-10 / attack-01
                         :ARG1 (c17-2 / magazine
                                      :name (c17-5 / name
                                                   :op1 "Charlie"
                                                   :op2 "Ch Hebdo")))
       :ord (c17-1 / ordinal-entity
                   :value 1))

# ::snt murderers using religion to hide behind.
# ::tokens ["murderers", "using", "religion", "to", "hide", "behind", "."]
# ::lemmas ["murderer", "use", "religion", "to", "hide", "behind", "."]
(c18-2 / use-01
       :ARG0 (c18-4 / person
                    :ARG0-of (c18-1 / murder-01))
       :ARG1 (c18-5 / religion)
       :ARG2 (c18-0 / hide-01
                    :ARG0 c18-4
                    :location (c18-3 / behind)))

# ::snt Full VT should have been shown to prove how barbaric these 'people' were. The world needs to see the full extent of their deeds
# ::tokens ["Full", "VT", "should", "have", "been", "shown", "to", "prove", "how", "barbaric", "these", "'", "people", "'", "were", ".", "The", "world", "needs", "to", "see", "the", "full", "extent", "of", "their", "deeds"]
# ::lemmas ["full", "VT", "should", "have", "be", "show", "to", "prove", "how", "barbaric", "these", "'", "people", "'", "be", ".", "the", "world", "need", "to", "see", "the", "full", "extent", "of", "their", "deed"]
(c19-2 / multi-sentence
       :snt1 (c19-11 / recommend-01
                     :ARG1 (c19-14 / show-01
                                   :ARG1 (c19-5 / state
                                                :name (c19-8 / name
                                                             :op1 "Vermont")
                                                :degree (c19-1 / full))
                                   :purpose (c19-10 / prove-01
                                                    :ARG0 c19-5
                                                    :ARG1 (c19-4 / barbaric
                                                                 :domain (c19-16 / person
                                                                                 :mod (c19-15 / this))))))
       :snt2 (c19-9 / need-01
                    :ARG0 (c19-0 / world)
                    :ARG1 (c19-3 / see-01
                                 :ARG0 c19-0
                                 :ARG1 (c19-6 / extent
                                              :degree-of (c19-12 / deed
                                                                 :poss (c19-13 / they))
                                              :degree (c19-7 / full)))))
