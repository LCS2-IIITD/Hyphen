# ::snt holy shit
# ::tokens ["holy", "shit"]
# ::lemmas ["holy", "shit"]
(c1-0 / shit
      :mod (c1-1 / holy)
      :mode expressive)

# ::snt these barbarians need to be taken out.
# ::tokens ["these", "barbarians", "need", "to", "be", "taken", "out", "."]
# ::lemmas ["these", "barbarian", "need", "to", "be", "take", "out", "."]
(c2-0 / obligate-01
      :ARG2 (c2-2 / take-out-11
                  :ARG1 (c2-3 / barbarian
                              :mod (c2-1 / this))))

# ::snt Also, Israeli PM Netanyahu warned France that siding with Palestinians joining ICC would be a grave mistake.
# ::tokens ["Also", ",", "Israeli", "PM", "Netanyahu", "warned", "France", "that", "siding", "with", "Palestinians", "joining", "ICC", "would", "be", "a", "grave", "mistake", "."]
# ::lemmas ["also", ",", "Israeli", "pm", "Netanyahu", "warn", "France", "that", "side", "with", "Palestinians", "join", "ICC", "would", "be", "a", "grave", "mistake", "."]
(c3-13 / warn-01
       :ARG0 (c3-4 / person
                   :name (c3-10 / name
                                :op1 "Netanyahu")
                   :ARG0-of (c3-9 / have-org-role-91
                                  :ARG1 (c3-17 / country
                                               :name (c3-16 / name
                                                            :op1 "Israel"))
                                  :ARG2 (c3-1 / minister
                                              :mod (c3-7 / prime))))
       :ARG1 (c3-11 / mistake-02
                    :ARG1 (c3-6 / side-01
                                :ARG1 (c3-5 / country
                                            :name (c3-2 / name
                                                        :op1 "Palestine"))
                                :ARG2 (c3-0 / join-01
                                            :ARG0 c3-5
                                            :ARG1 (c3-15 / organization
                                                         :name (c3-3 / name
                                                                     :op1 "ICC"))))
                    :mod (c3-12 / grave))
       :ARG2 (c3-14 / country
                    :name (c3-18 / name
                                 :op1 "France"))
       :mod (c3-8 / also))

# ::snt Nope. The Qu'ran specifically says no hostages taken or kept.
# ::tokens ["Nope", ".", "The", "Qu'ran", "specifically", "says", "no", "hostages", "taken", "or", "kept", "."]
# ::lemmas ["nope", ".", "the", "Qu'ran", "specifically", "say", "no", "hostage", "take", "or", "keep", "."]
(c4-1 / multi-sentence
      :snt1 (c4-5 / nope)
      :snt2 (c4-8 / say-01
                  :ARG0 (c4-7 / religious-group
                              :name (c4-6 / name
                                          :op1 "Qu'ran"))
                  :ARG1 (c4-2 / or
                              :op1 (c4-9 / take-01
                                         :ARG1 (c4-0 / hostage)
                                         :polarity -)
                              :op2 (c4-4 / keep-01
                                         :ARG1 c4-0
                                         :polarity -))
                  :ARG1-of (c4-3 / specific-02)))

# ::snt french police should get snippers
# ::tokens ["french", "police", "should", "get", "snippers"]
# ::lemmas ["french", "police", "should", "get", "snipper"]
(c5-1 / recommend-01
      :ARG1 (c5-3 / get-01
                  :ARG0 (c5-0 / police
                              :mod (c5-2 / gut))
                  :ARG1 (c5-4 / snip)))

# ::snt He's going to kill them anyway. The police shouldn't be waiting.
# ::tokens ["He", "'s", "going", "to", "kill", "them", "anyway", ".", "The", "police", "should", "n't", "be", "waiting", "."]
# ::lemmas ["he", "be", "go", "to", "kill", "they", "anyway", ".", "the", "police", "should", "not", "be", "wait", "."]
(c6-2 / multi-sentence
      :snt1 (c6-3 / kill-01
                  :ARG0 (c6-0 / he)
                  :ARG1 (c6-6 / they)
                  :mod (c6-7 / anyway))
      :snt2 (c6-5 / recommend-01
                  :ARG1 (c6-1 / wait-01
                              :ARG1 (c6-4 / police))
                  :polarity -))

# ::snt It's a damn shame the gunmen didn't take you hostage with the same threat. But then who would be Israel's mouthpiece?
# ::tokens ["It", "'s", "a", "damn", "shame", "the", "gunmen", "did", "n't", "take", "you", "hostage", "with", "the", "same", "threat", ".", "But", "then", "who", "would", "be", "Israel", "'s", "mouthpiece", "?"]
# ::lemmas ["it", "be", "a", "damn", "shame", "the", "gunman", "do", "not", "take", "you", "hostage", "with", "the", "same", "threat", ".", "but", "then", "who", "would", "be", "Israel", "'s", "mouthpiece", "?"]
(c7-2 / multi-sentence
      :snt1 (c7-12 / shame-02
                   :ARG0 (c7-14 / take-01
                                :ARG0 (c7-9 / gunman)
                                :ARG1 (c7-1 / you)
                                :ARG3 (c7-0 / hostage)
                                :ARG1-of (c7-8 / cause-01
                                               :ARG0 (c7-11 / threaten-01
                                                            :ARG1-of (c7-3 / same-01)))
                                :polarity -)
                   :mod (c7-7 / damn))
      :snt2 (c7-10 / contrast-01
                   :ARG2 (c7-6 / mouthpiece
                               :poss (c7-13 / country
                                            :name (c7-4 / name
                                                        :op1 "Israel"))
                               :domain (c7-15 / amr-unknown)
                               :time (c7-5 / then))))

# ::snt umm kinda burying the lead. It's a kosher market. This is an attack on Jews.
# ::tokens ["umm", "kinda", "burying", "the", "lead", ".", "It", "'s", "a", "kosher", "market", ".", "This", "is", "an", "attack", "on", "Jews", "."]
# ::lemmas ["umm", "kinda", "bury", "the", "lead", ".", "it", "be", "a", "kosher", "market", ".", "this", "be", "an", "attack", "on", "Jews", "."]
(c8-1 / multi-sentence
      :snt1 (c8-2 / bury-01
                  :ARG0 (c8-4 / i)
                  :ARG1 (c8-0 / lead-01)
                  :degree (c8-10 / kind-of))
      :snt2 (c8-6 / market
                  :mod (c8-3 / kosher)
                  :domain (c8-8 / it))
      :snt3 (c8-11 / attack-01
                   :ARG1 (c8-7 / religious-group
                               :name (c8-5 / name
                                           :op1 "Jew"))
                   :domain (c8-9 / this)))

# ::snt And as we all know, Netanyahu's shit don't stink. Right?
# ::tokens ["And", "as", "we", "all", "know", ",", "Netanyahu", "'s", "shit", "do", "n't", "stink", ".", "Right", "?"]
# ::lemmas ["and", "as", "we", "all", "know", ",", "Netanyahu", "'s", "shit", "do", "not", "stink", ".", "right", "?"]
(c9-8 / and
      :op2 (c9-6 / stink-01
                 :ARG1 (c9-1 / shit
                             :poss (c9-4 / person
                                         :name (c9-3 / name
                                                     :op1 "Netanyahu")))
                 :ARG1-of (c9-7 / know-01
                                :ARG0 (c9-0 / we
                                            :mod (c9-2 / all)))
                 :polarity -)
      :ARG1-of (c9-5 / request-confirmation-91))

# ::snt Lovely Christians, already judging without knowing a damn thing. Your Jesus has red skin and stinks of sulphur.
# ::tokens ["Lovely", "Christians", ",", "already", "judging", "without", "knowing", "a", "damn", "thing", ".", "Your", "Jesus", "has", "red", "skin", "and", "stinks", "of", "sulphur", "."]
# ::lemmas ["lovely", "Christians", ",", "already", "judge", "without", "know", "a", "damn", "thing", ".", "your", "Jesus", "have", "red", "skin", "and", "stink", "of", "sulphur", "."]
(c10-1 / multi-sentence
       :snt1 (c10-3 / person
                    :mod (c10-12 / religious-group
                                 :name (c10-11 / name
                                               :op1 "Christian"))
                    :ARG0-of (c10-9 / love-01)
                    :ARG0-of (c10-0 / judge-01
                                    :time (c10-7 / already)
                                    :manner (c10-14 / know-01
                                                    :ARG0 c10-3
                                                    :ARG1 (c10-18 / thing
                                                                  :mod (c10-4 / damn))
                                                    :polarity -)))
       :snt2 (c10-13 / and
                     :op1 (c10-8 / have-03
                                 :ARG0 (c10-6 / person
                                              :name (c10-17 / name
                                                            :op1 "Jesus")
                                              :poss (c10-15 / you))
                                 :ARG1 (c10-5 / skin
                                              :ARG1-of (c10-2 / red-02)))
                     :op2 (c10-10 / stink-01
                                  :ARG1 c10-6
                                  :ARG2 (c10-16 / sulphur))))

# ::snt Then that rules out Muslims, they don't take hostages as it's forbidden in the Qu'ran. It's Mossad.
# ::tokens ["Then", "that", "rules", "out", "Muslims", ",", "they", "do", "n't", "take", "hostages", "as", "it", "'s", "forbidden", "in", "the", "Qu'ran", ".", "It", "'s", "Mossad", "."]
# ::lemmas ["then", "that", "rule", "out", "Muslims", ",", "they", "do", "not", "take", "hostage", "as", "it", "be", "forbid", "in", "the", "Qu'ran", ".", "it", "be", "Mossad", "."]
(c11-2 / multi-sentence
       :snt1 (c11-8 / rule-out-02
                    :ARG0 (c11-14 / that)
                    :ARG1 (c11-7 / person
                                 :mod (c11-4 / religious-group
                                             :name (c11-5 / name
                                                          :op1 "Islam")))
                    :mod (c11-12 / then))
       :snt2 (c11-6 / take-01
                    :ARG0 (c11-3 / they)
                    :ARG1 (c11-0 / hostage)
                    :ARG1-of (c11-9 / cause-01
                                    :ARG0 (c11-1 / forbid-01
                                                 :ARG0 (c11-10 / court-decision
                                                               :name (c11-11 / name
                                                                             :op1 "Qu'ran"))
                                                 :ARG1 c11-6))
                    :polarity -)
       :snt3 (c11-15 / person
                     :name (c11-13 / name
                                   :op1 "Mossad")))

# ::snt THE PARIS MOVIE HAS ALREADY BEEN PLAYED.
# ::tokens ["THE", "PARIS", "MOVIE", "HAS", "ALREADY", "BEEN", "PLAYED", "."]
# ::lemmas ["the", "PARIS", "movie", "have", "already", "be", "PLAYED", "."]
(c12-1 / play-01
       :ARG1 (c12-2 / movie
                    :name (c12-0 / name
                                 :op1 "Paris"))
       :time (c12-3 / already))

# ::snt Someone should find a way to make killers believe they will not get to"heaven" by some means. They will not be martyrs.
# ::tokens ["Someone", "should", "find", "a", "way", "to", "make", "killers", "believe", "they", "will", "not", "get", "to\"heaven", "\"", "by", "some", "means", ".", "They", "will", "not", "be", "martyrs", "."]
# ::lemmas ["someone", "should", "find", "a", "way", "to", "make", "killer", "believe", "they", "will", "not", "get", "to\"heaven", "\"", "by", "some", "mean", ".", "they", "will", "not", "be", "martyr", "."]
(c14-3 / multi-sentence
       :snt1 (c14-8 / recommend-01
                    :ARG1 (c14-2 / find-01
                                 :ARG0 (c14-11 / someone)
                                 :ARG1 (c14-1 / way)
                                 :purpose (c14-7 / make-02
                                                 :ARG0 c14-11
                                                 :ARG1 (c14-5 / believe-01
                                                              :ARG0 (c14-9 / person
                                                                           :ARG0-of (c14-13 / kill-01))
                                                              :ARG1 (c14-10 / get-05
                                                                            :ARG1 c14-9
                                                                            :ARG2 (c14-0 / heaven)
                                                                            :manner (c14-6 / somehow)
                                                                            :polarity -)))))
       :snt2 (c14-4 / martyr-01
                    :ARG1 (c14-12 / they)
                    :polarity -))

# ::snt Any sniper gets a visual...TAKE A HEAD SHOT
# ::tokens ["Any", "sniper", "gets", "a", "visual", "...", "TAKE", "A", "HEAD", "SHOT"]
# ::lemmas ["any", "sniper", "get", "a", "visual", "...", "take", "a", "HEAD", "shot"]
(c15-2 / multi-sentence
       :snt1 (c15-5 / get-01
                    :ARG0 (c15-6 / sniper
                                 :mod (c15-7 / any))
                    :ARG1 (c15-4 / visual))
       :snt2 (c15-3 / shake-01
                    :ARG0 (c15-1 / you)
                    :ARG1 (c15-0 / head)
                    :mode imperative))

# ::snt I'm sure they'll be killed regardless so the officers should watch for the right time and make a move to take the Islamonazis out!
# ::tokens ["I", "'m", "sure", "they", "'ll", "be", "killed", "regardless", "so", "the", "officers", "should", "watch", "for", "the", "right", "time", "and", "make", "a", "move", "to", "take", "the", "Islamonazis", "out", "!"]
# ::lemmas ["i", "be", "sure", "they", "'ll", "be", "kill", "regardless", "so", "the", "officer", "should", "watch", "for", "the", "right", "time", "and", "make", "a", "move", "to", "take", "the", "Islamonazis", "out", "!"]
(c16-3 / sure-02
       :ARG0 (c16-12 / i)
       :ARG1 (c16-14 / kill-01
                     :ARG1 (c16-18 / they)
                     :ARG1-of (c16-9 / regardless-91))
       :ARG0-of (c16-16 / cause-01
                        :ARG1 (c16-1 / recommend-01
                                     :ARG1 (c16-5 / and
                                                  :op1 (c16-11 / watch-01
                                                               :ARG0 (c16-2 / person
                                                                            :ARG0-of (c16-6 / have-org-role-91
                                                                                            :ARG2 (c16-15 / officer)))
                                                               :ARG1 (c16-17 / time
                                                                             :ARG1-of (c16-7 / right-03)))
                                                  :op2 (c16-0 / move-02
                                                              :ARG0 c16-2
                                                              :ARG1 (c16-13 / take-out-11
                                                                            :ARG0 c16-2
                                                                            :ARG1 (c16-4 / person
                                                                                         :mod (c16-10 / religious-group
                                                                                                      :name (c16-8 / name
                                                                                                                   :op1 "Islam"))))))
                                     :ARG2 c16-2)))

# ::snt : Gunman at Paris grocery store threatens to kill hostages if police storm the brothers.
# ::tokens [":", "Gunman", "at", "Paris", "grocery", "store", "threatens", "to", "kill", "hostages", "if", "police", "storm", "the", "brothers", "."]
# ::lemmas [":", "Gunman", "at", "Paris", "grocery", "store", "threaten", "to", "kill", "hostage", "if", "police", "storm", "the", "brother", "."]
(c17-10 / threaten-01
        :ARG0 (c17-8 / gunman
                     :location (c17-9 / store
                                      :mod (c17-6 / grocery)
                                      :location (c17-7 / city
                                                       :name (c17-4 / name
                                                                    :op1 "Paris"))))
        :ARG1 (c17-3 / kill-01
                     :ARG0 c17-8
                     :ARG1 (c17-0 / hostage)
                     :condition (c17-2 / storm-02
                                       :ARG0 (c17-5 / police)
                                       :ARG1 (c17-11 / person
                                                     :ARG0-of (c17-12 / have-rel-role-91
                                                                      :ARG2 (c17-1 / brother))))))

# ::snt Who, Mossad? The GOP? "Fox &amp; Friends"?
# ::tokens ["Who", ",", "Mossad", "?", "The", "GOP", "?", "\"", "Fox", "&", "amp", ";", "Friends", "\"", "?"]
# ::lemmas ["who", ",", "Mossad", "?", "the", "GOP", "?", "\"", "Fox", "&", "amp", ";", "Friends", "\"", "?"]
(c18-1 / multi-sentence
       :snt1 (c18-6 / person
                    :name (c18-4 / name
                                 :op1 "Mossad"))
       :snt2 (c18-8 / political-party
                    :name (c18-5 / name
                                 :op1 "GOP"))
       :snt3 (c18-2 / broadcast-program
                    :name (c18-7 / name
                                 :op1 "Fox"
                                 :op2 "&amp"))
       :snt4 (c18-0 / friend)
       :polarity (c18-9 / amr-unknown)
       :polarity (c18-3 / amr-unknown))

# ::snt That's what they do! They're cold blooded killers and neither know nor care for human life. Not even their own.
# ::tokens ["That", "'s", "what", "they", "do", "!", "They", "'re", "cold", "blooded", "killers", "and", "neither", "know", "nor", "care", "for", "human", "life", ".", "Not", "even", "their", "own", "."]
# ::lemmas ["that", "be", "what", "they", "do", "!", "they", "be", "cold", "blooded", "killer", "and", "neither", "know", "nor", "care", "for", "human", "life", ".", "not", "even", "their", "own", "."]
(c19-2 / multi-sentence
       :snt1 (c19-11 / do-02
                     :ARG0 (c19-16 / they)
                     :ARG1 (c19-15 / that))
       :snt2 (c19-17 / and
                     :op1 (c19-10 / person
                                  :ARG0-of (c19-8 / kill-01)
                                  :ARG1-of (c19-3 / blood-02
                                                  :ARG1-of (c19-12 / cold-02))
                                  :domain (c19-9 / they))
                     :op2 (c19-4 / or
                                 :op1 (c19-5 / know-01
                                             :ARG0 c19-9
                                             :ARG1 (c19-1 / life
                                                          :poss (c19-0 / human))
                                             :polarity -)
                                 :op2 (c19-13 / care-01
                                              :ARG0 c19-9
                                              :ARG1 (c19-14 / life
                                                            :poss (c19-7 / they)
                                                            :mod (c19-6 / even
                                                                        :polarity -))
                                              :polarity -))))

# ::snt Take 'em out, Paris gendarmes. TAKE THEM OUT!
# ::tokens ["Take", "'em", "out", ",", "Paris", "gendarmes", ".", "TAKE", "THEM", "OUT", "!"]
# ::lemmas ["take", "'em", "out", ",", "Paris", "gendarme", ".", "take", "they", "out", "!"]
(c20-1 / multi-sentence
       :snt1 (c20-9 / say-01
                    :ARG0 (c20-3 / i)
                    :ARG1 (c20-10 / take-out-11
                                  :ARG0 (c20-6 / city
                                               :name (c20-4 / name
                                                            :op1 "Paris"))
                                  :ARG1 (c20-8 / they)
                                  :mode imperative)
                    :ARG2 (c20-7 / gendarmes))
       :snt2 (c20-5 / take-out-11
                    :ARG0 (c20-0 / you)
                    :ARG1 (c20-2 / they)
                    :mode imperative))

# ::snt Your mothers were hamsters and your fathers smelled of elderberries! I fart in your general directions!
# ::tokens ["Your", "mothers", "were", "hamsters", "and", "your", "fathers", "smelled", "of", "elderberries", "!", "I", "fart", "in", "your", "general", "directions", "!"]
# ::lemmas ["your", "mother", "be", "hamster", "and", "your", "father", "smell", "of", "elderberry", "!", "i", "fart", "in", "your", "general", "direction", "!"]
(c21-3 / multi-sentence
       :snt1 (c21-14 / and
                     :op1 (c21-0 / hamster
                                 :domain (c21-8 / person
                                                :ARG0-of (c21-16 / have-rel-role-91
                                                                 :ARG1 (c21-1 / you)
                                                                 :ARG2 (c21-9 / mother))))
                     :op2 (c21-13 / smell-01
                                  :ARG0 (c21-15 / person
                                                :ARG0-of (c21-7 / have-rel-role-91
                                                                :ARG1 c21-1
                                                                :ARG2 (c21-2 / father)))
                                  :ARG1 (c21-4 / elderberry)))
       :snt2 (c21-6 / fart-01
                    :ARG0 (c21-5 / i)
                    :manner (c21-10 / direct-01
                                    :ARG0 (c21-12 / you)
                                    :ARG1 c21-5
                                    :ARG1-of (c21-11 / general-02))))

# ::snt hope that's sarcasm
# ::tokens ["hope", "that", "'s", "sarcasm"]
# ::lemmas ["hope", "that", "be", "sarcasm"]
(c22-0 / hope-01
       :ARG0 (c22-3 / i)
       :ARG1 (c22-2 / sarcasm
                    :domain (c22-1 / that)))

# ::snt Two are Dead !! Police Confirm French TV MONDE online
# ::tokens ["Two", "are", "Dead", "!", "!", "Police", "Confirm", "French", "TV", "MONDE", "online"]
# ::lemmas ["Two", "be", "dead", "!", "!", "police", "confirm", "French", "tv", "monde", "online"]
(c23-0 / multi-sentence
       :snt1 (c23-5 / die-01
                    :ARG1 (c23-4 / person
                                 :quant 2))
       :snt2 (c23-6 / confirm-01
                    :ARG0 (c23-7 / police)
                    :ARG1 (c23-1 / broadcast-program
                                 :name (c23-3 / name
                                              :op1 "French"
                                              :op2 "TV"
                                              :op3 "Monette"))
                    :medium (c23-2 / online)))
