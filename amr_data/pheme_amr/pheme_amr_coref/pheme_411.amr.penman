# ::snt dumbass.
# ::tokens ["dumbass", "."]
# ::lemmas ["dumbass", "."]
(c1-1 / dumbass
      :domain (c1-0 / you))

# ::snt everyone already admitted as much. Also, that whole hive held off for days before that is amazing.
# ::tokens ["everyone", "already", "admitted", "as", "much", ".", "Also", ",", "that", "whole", "hive", "held", "off", "for", "days", "before", "that", "is", "amazing", "."]
# ::lemmas ["everyone", "already", "admit", "as", "much", ".", "also", ",", "that", "whole", "hive", "hold", "off", "for", "days", "before", "that", "be", "amazing", "."]
(c2-0 / multi-sentence
      :snt1 (c2-4 / admit-01
                  :ARG0 (c2-9 / everyone)
                  :ARG1 (c2-11 / much
                               :ARG1-of (c2-5 / have-quant-91
                                              :ARG3 (c2-7 / equal)
                                              :ARG4 (c2-18 / that)))
                  :time (c2-13 / already))
      :snt2 (c2-10 / amaze-01
                   :ARG0 (c2-3 / hold-off-05
                               :ARG1 (c2-1 / hive
                                           :mod (c2-12 / whole)
                                           :mod (c2-16 / that))
                               :duration (c2-6 / multiple
                                               :op1 (c2-14 / temporal-quantity
                                                           :unit (c2-2 / day)
                                                           :quant 1))
                               :time (c2-8 / before
                                           :op1 (c2-15 / that))
                               :mod (c2-17 / also))))

# ::snt you must live in a real shithole cause I don't believe anything the police w/o verification
# ::tokens ["you", "must", "live", "in", "a", "real", "shithole", "cause", "I", "do", "n't", "believe", "anything", "the", "police", "w/o", "verification"]
# ::lemmas ["you", "must", "live", "in", "a", "real", "shithole", "cause", "i", "do", "not", "believe", "anything", "the", "police", "w/o", "verification"]
(c3-3 / obligate-01
      :ARG1 (c3-0 / you)
      :ARG2 (c3-1 / live-01
                  :ARG0 c3-0
                  :location (c3-9 / shithole
                                  :ARG1-of (c3-7 / real-04)))
      :ARG1-of (c3-8 / cause-01
                     :ARG0 (c3-2 / believe-01
                                 :ARG0 (c3-4 / i)
                                 :ARG1 (c3-10 / anything
                                              :source (c3-6 / police)
                                              :manner (c3-5 / verify-01
                                                            :ARG0 c3-6
                                                            :ARG1 c3-10
                                                            :polarity -))
                                 :polarity -)))

# ::snt Don't assault clerk +don't rob store + buy ur cigars + comply to police when questioned= alive + at home + smoking cigar
# ::tokens ["Do", "n't", "assault", "clerk", "+", "do", "n't", "rob", "store", "+", "buy", "ur", "cigars", "+", "comply", "to", "police", "when", "questioned=", "alive", "+", "at", "home", "+", "smoking", "cigar"]
# ::lemmas ["do", "not", "assault", "clerk", "+", "do", "not", "rob", "store", "+", "buy", "ur", "cigar", "+", "comply", "to", "police", "when", "questioned=", "alive", "+", "at", "home", "+", "smoking", "cigar"]
(c4-15 / and
       :op1 (c4-6 / assault-01
                  :ARG0 (c4-1 / you)
                  :ARG1 (c4-7 / person
                              :ARG0-of (c4-9 / clerk-01))
                  :polarity -
                  :mode imperative)
       :op2 (c4-8 / rob-01
                  :ARG0 c4-1
                  :ARG1 (c4-13 / store)
                  :polarity -
                  :mode imperative)
       :op3 (c4-3 / buy-01
                  :ARG0 c4-1
                  :ARG1 (c4-10 / cigar
                               :poss c4-1)
                  :mode imperative
                  :polarity -)
       :op4 (c4-12 / comply-01
                   :ARG0 c4-1
                   :ARG1 (c4-14 / police)
                   :time (c4-5 / question-01
                               :ARG2 c4-1)
                   :mode imperative)
       :op5 (c4-2 / live-01
                  :ARG0 c4-1
                  :mode imperative)
       :op6 (c4-11 / be-located-at-91
                   :ARG1 c4-1
                   :ARG2 (c4-0 / home)
                   :mode imperative)
       :op7 (c4-4 / smoke-01
                  :ARG0 c4-1
                  :ARG1 (c4-16 / cigar
                               :poss c4-1)
                  :mode imperative))

# ::snt you make zero sense and sound dumb making such comments
# ::tokens ["you", "make", "zero", "sense", "and", "sound", "dumb", "making", "such", "comments"]
# ::lemmas ["you", "make", "zero", "sense", "and", "sound", "dumb", "make", "such", "comment"]
(c5-6 / and
      :op1 (c5-5 / sense-02
                 :ARG1 (c5-0 / you)
                 :polarity -)
      :op2 (c5-2 / sound-01
                 :ARG1 c5-0
                 :ARG2 (c5-3 / dumb)
                 :ARG3 (c5-4 / comment-01
                             :ARG0 c5-0
                             :mod (c5-1 / such))))

# ::snt I hope that's sarcastic, but we do have lots of asinine laws!
# ::tokens ["I", "hope", "that", "'s", "sarcastic", ",", "but", "we", "do", "have", "lots", "of", "asinine", "laws", "!"]
# ::lemmas ["i", "hope", "that", "be", "sarcastic", ",", "but", "we", "do", "have", "lot", "of", "asinine", "law", "!"]
(c6-4 / contrast-01
      :ARG1 (c6-0 / hope-01
                  :ARG0 (c6-3 / i)
                  :ARG1 (c6-6 / sarcastic
                              :domain (c6-8 / that)))
      :ARG2 (c6-9 / have-03
                  :ARG0 (c6-1 / we)
                  :ARG1 (c6-2 / law
                              :mod (c6-7 / asinine)
                              :quant (c6-5 / lot))))

# ::snt you realize how dangerous and out of control realizing that name was tho, like the opposite of what is right &amp; just.
# ::tokens ["you", "realize", "how", "dangerous", "and", "out", "of", "control", "realizing", "that", "name", "was", "tho", ",", "like", "the", "opposite", "of", "what", "is", "right", "&", "amp", ";", "just", "."]
# ::lemmas ["you", "realize", "how", "dangerous", "and", "out", "of", "control", "realize", "that", "name", "be", "tho", ",", "like", "the", "opposite", "of", "what", "be", "right", "&", "amp", ";", "just", "."]
(c7-0 / have-concession-91
      :ARG1 (c7-11 / realize-01
                   :ARG0 (c7-1 / you)
                   :ARG1 (c7-17 / and
                                :op1 (c7-12 / dangerous
                                            :degree (c7-15 / so))
                                :op2 (c7-5 / out-06
                                           :ARG1 c7-1
                                           :ARG2 (c7-13 / control-01
                                                        :ARG1 c7-1))
                                :domain (c7-9 / name
                                              :mod (c7-16 / that))
                                :ARG1-of (c7-8 / resemble-01
                                               :ARG2 (c7-7 / and
                                                           :op1 (c7-3 / opposite-01
                                                                      :ARG1 (c7-14 / thing
                                                                                   :ARG1-of (c7-6 / right-08))
                                                                      :ARG2 (c7-10 / thing
                                                                                   :ARG1-of c7-6)))
                                               :op2 (c7-4 / opposite-01
                                                          :ARG1 c7-10
                                                          :ARG2 (c7-2 / just-02))))))

# ::snt am a filmmaker. The time stamp lines up on the pics released. What doesn't is that being Mike Brown.
# ::tokens ["am", "a", "filmmaker", ".", "The", "time", "stamp", "lines", "up", "on", "the", "pics", "released", ".", "What", "does", "n't", "is", "that", "being", "Mike", "Brown", "."]
# ::lemmas ["be", "a", "filmmaker", ".", "the", "time", "stamp", "line", "up", "on", "the", "pic", "release", ".", "what", "do", "not", "be", "that", "be", "Mike", "Brown", "."]
(c8-1 / multi-sentence
      :snt1 (c8-6 / person
                  :ARG0-of (c8-7 / make-01
                                 :ARG1 (c8-0 / film))
                  :domain (c8-4 / i))
      :snt2 (c8-2 / line-up-02
                  :ARG1 (c8-10 / stamp
                               :mod (c8-11 / time))
                  :location (c8-12 / picture
                                   :ARG1-of (c8-8 / release-01)))
      :snt3 (c8-3 / person
                  :name (c8-5 / name
                              :op1 "Mike"
                              :op2 "Brown")
                  :domain (c8-9 / that
                                :polarity -)))

# ::snt a) stealing cigars isn't a summary execution offense b) proof that's Michael c) doesn't square w/previous PD tales.
# ::tokens ["a", ")", "stealing", "cigars", "is", "n't", "a", "summary", "execution", "offense", "b", ")", "proof", "that", "'s", "Michael", "c", ")", "does", "n't", "square", "w", "/", "previous", "PD", "tales", "."]
# ::lemmas ["a", ")", "steal", "cigar", "be", "not", "a", "summary", "execution", "offense", "b", ")", "proof", "that", "be", "Michael", "c", ")", "do", "not", "square", "w", "/", "previous", "PD", "tale", "."]
(c10-13 / and
        :op1 (c10-2 / offend-03
                    :ARG1 (c10-10 / steal-01
                                  :ARG1 (c10-8 / cigar))
                    :manner (c10-3 / execute-01
                                   :manner (c10-4 / summary))
                    :polarity -
                    :li "a")
        :op2 (c10-7 / prove-01
                    :ARG1 (c10-0 / square-01
                                 :ARG0 (c10-12 / person
                                               :name (c10-5 / name
                                                            :op1 "Michael"))
                                 :manner (c10-11 / tale
                                                 :topic (c10-9 / government-organization
                                                               :name (c10-6 / name
                                                                            :op1 "PD"))
                                                 :ARG1-of (c10-1 / precede-01))
                                 :polarity -
                                 :li "c")
                    :li "b"))

# ::snt not just the ones u feel like following or hiding behind.
# ::tokens ["not", "just", "the", "ones", "u", "feel", "like", "following", "or", "hiding", "behind", "."]
# ::lemmas ["not", "just", "the", "one", "u", "feel", "like", "follow", "or", "hide", "behind", "."]
(c11-3 / feel-06
       :ARG0 (c11-1 / you)
       :ARG1 (c11-6 / or
                    :op1 (c11-7 / follow-02
                                :ARG0 c11-1
                                :ARG1 (c11-4 / one
                                             :mod (c11-0 / just
                                                         :polarity -)))
                    :op2 (c11-2 / hide-01
                                :ARG0 c11-1
                                :location (c11-5 / behind))))

# ::snt i don't disagree, wrongs don't make a right. They should have release the name soon, &amp; anon should have facts.
# ::tokens ["i", "do", "n't", "disagree", ",", "wrongs", "do", "n't", "make", "a", "right", ".", "They", "should", "have", "release", "the", "name", "soon", ",", "&", "amp", ";", "anon", "should", "have", "facts", "."]
# ::lemmas ["i", "do", "not", "disagree", ",", "wrong", "do", "not", "make", "a", "right", ".", "they", "should", "have", "release", "the", "name", "soon", ",", "&", "amp", ";", "anon", "should", "have", "fact", "."]
(c12-4 / multi-sentence
       :snt1 (c12-11 / disagree-01
                     :ARG0 (c12-7 / i)
                     :polarity -)
       :snt2 (c12-10 / make-01
                     :ARG0 (c12-1 / wrong-02)
                     :ARG1 (c12-12 / right-02)
                     :polarity -)
       :snt3 (c12-16 / and
                     :op1 (c12-8 / recommend-01
                                 :ARG1 (c12-5 / release-01
                                              :ARG0 (c12-15 / they)
                                              :ARG1 (c12-13 / thing
                                                            :ARG2-of (c12-9 / name-01))
                                              :time (c12-14 / soon)))
                     :op2 (c12-0 / recommend-01
                                 :ARG1 (c12-2 / have-03
                                              :ARG0 (c12-6 / amr-unknown)
                                              :ARG1 (c12-3 / fact)))))

# ::snt we're all on the same side here, just maybe disagree about approach and tactics, I want the truth, not guesses
# ::tokens ["we", "'re", "all", "on", "the", "same", "side", "here", ",", "just", "maybe", "disagree", "about", "approach", "and", "tactics", ",", "I", "want", "the", "truth", ",", "not", "guesses"]
# ::lemmas ["we", "be", "all", "on", "the", "same", "side", "here", ",", "just", "maybe", "disagree", "about", "approach", "and", "tactic", ",", "i", "want", "the", "truth", ",", "not", "guess"]
(c13-6 / and
       :op1 (c13-8 / be-located-at-91
                   :ARG1 (c13-12 / we
                                 :mod (c13-13 / all))
                   :ARG2 (c13-5 / side
                                :ARG1-of (c13-9 / same-01))
                   :location (c13-7 / here))
       :op2 (c13-3 / possible-01
                   :ARG1 (c13-4 / disagree-01
                                :ARG0 c13-12
                                :ARG2 (c13-10 / and
                                              :op1 (c13-17 / approach-02)
                                              :op2 (c13-18 / tactic)))
                   :mod (c13-0 / just))
       :op3 (c13-15 / contrast-01
                    :ARG1 (c13-2 / want-01
                                 :ARG0 (c13-14 / i)
                                 :ARG1 (c13-16 / truth))
                    :ARG2 (c13-1 / want-01
                                 :ARG0 c13-14
                                 :ARG1 (c13-11 / guess-01)
                                 :polarity -)))

# ::snt anon is a collection of individuals. That anon has been denounced thoroughly, unlike way your cops circle wagons.
# ::tokens ["anon", "is", "a", "collection", "of", "individuals", ".", "That", "anon", "has", "been", "denounced", "thoroughly", ",", "unlike", "way", "your", "cops", "circle", "wagons", "."]
# ::lemmas ["anon", "be", "a", "collection", "of", "individual", ".", "that", "anon", "have", "be", "denounce", "thoroughly", ",", "unlike", "way", "your", "cop", "circle", "wagon", "."]
(c14-2 / multi-sentence
       :snt1 (c14-7 / collect-01
                    :ARG1 (c14-4 / individual)
                    :domain (c14-12 / anon))
       :snt2 (c14-6 / denounce-01
                    :ARG1 (c14-3 / anon)
                    :manner (c14-11 / thorough)
                    :ARG1-of (c14-8 / resemble-01
                                    :ARG2 (c14-0 / way
                                                 :manner-of (c14-9 / circle-01
                                                                   :ARG0 (c14-10 / cop
                                                                                 :poss (c14-1 / you))
                                                                   :ARG1 (c14-5 / wagon)))
                                    :polarity -)))

# ::snt you would've seen they all told that specific anon. member it was a terrible idea to release that name
# ::tokens ["you", "would", "'ve", "seen", "they", "all", "told", "that", "specific", "anon", ".", "member", "it", "was", "a", "terrible", "idea", "to", "release", "that", "name"]
# ::lemmas ["you", "would", "'ve", "see", "you", "all", "tell", "that", "specific", "anon", ".", "member", "it", "be", "a", "terrible", "idea", "to", "release", "that", "name"]
(c15-12 / see-01
        :ARG0 (c15-1 / you)
        :ARG1 (c15-13 / tell-01
                      :ARG0 (c15-11 / they
                                    :mod (c15-14 / all))
                      :ARG1 (c15-5 / idea
                                   :ARG1-of (c15-8 / terrible-01)
                                   :domain (c15-10 / release-01
                                                   :ARG1 (c15-7 / name
                                                                :mod (c15-4 / that))))
                      :ARG2 (c15-9 / person
                                   :ARG0-of (c15-0 / have-org-role-91
                                                   :ARG2 (c15-2 / member))
                                   :ARG1-of (c15-3 / specific-02)
                                   :mod (c15-6 / that))))

# ::snt this is also true. Regardless, anon is exposing this shit and it's amazing. The movement gets full marks from me.
# ::tokens ["this", "is", "also", "true", ".", "Regardless", ",", "anon", "is", "exposing", "this", "shit", "and", "it", "'s", "amazing", ".", "The", "movement", "gets", "full", "marks", "from", "me", "."]
# ::lemmas ["this", "be", "also", "true", ".", "regardless", ",", "anon", "be", "expose", "this", "shit", "and", "it", "be", "amazing", ".", "the", "movement", "get", "full", "mark", "from", "i", "."]
(c16-2 / multi-sentence
       :snt1 (c16-14 / true-01
                     :ARG1 (c16-12 / this)
                     :mod (c16-15 / also))
       :snt2 (c16-0 / have-concession-91
                    :ARG1 (c16-6 / and
                                 :op1 (c16-5 / expose-01
                                             :ARG0 (c16-4 / on)
                                             :ARG1 (c16-13 / shit
                                                           :mod (c16-8 / this)))
                                 :op2 (c16-9 / amaze-01
                                             :ARG0 c16-5))
                    :snt3 (c16-11 / get-01
                                  :ARG0 (c16-10 / movement-07)
                                  :ARG1 (c16-1 / mark
                                               :ARG1-of (c16-3 / full-09))
                                  :ARG2 (c16-7 / i))))

# ::snt just because person of anon. says something doesn't mean they all agree. If you read some...
# ::tokens ["just", "because", "person", "of", "anon", ".", "says", "something", "does", "n't", "mean", "they", "all", "agree", ".", "If", "you", "read", "some", "..."]
# ::lemmas ["just", "because", "person", "of", "anon", ".", "say", "something", "do", "not", "mean", "you", "all", "agree", ".", "if", "you", "read", "some", "..."]
(c17-4 / multi-sentence
       :snt1 (c17-10 / cause-01
                     :ARG0 (c17-12 / say-01
                                   :ARG0 (c17-8 / person
                                                :mod (c17-14 / anon))
                                   :ARG1 (c17-5 / something))
                     :ARG1 (c17-9 / mean-01
                                  :ARG1 c17-12
                                  :ARG2 (c17-6 / agree-01
                                               :ARG0 (c17-13 / they
                                                             :mod (c17-7 / all)))
                                  :polarity -)
                     :mod (c17-0 / just))
       :snt2 (c17-1 / have-condition-91
                    :ARG2 (c17-11 / read-01
                                  :ARG0 (c17-2 / you)
                                  :ARG1 (c17-3 / some))))

# ::snt you can't be the truth seekers when you report false information, period.
# ::tokens ["you", "ca", "n't", "be", "the", "truth", "seekers", "when", "you", "report", "false", "information", ",", "period", "."]
# ::lemmas ["you", "can", "not", "be", "the", "truth", "seeker", "when", "you", "report", "false", "information", ",", "period", "."]
(c18-4 / possible-01
       :ARG1 (c18-8 / person
                    :ARG0-of (c18-6 / seek-01
                                    :ARG1 (c18-7 / truth))
                    :domain (c18-0 / you))
       :time (c18-5 / report-01
                    :ARG0 c18-0
                    :ARG1 (c18-3 / information
                                 :mod (c18-1 / false)))
       :mod (c18-2 / period)
       :polarity -)

# ::snt of course you'll b dead after day Of opening ur disrespectful liberal mouth.
# ::tokens ["of", "course", "you", "'ll", "b", "dead", "after", "day", "Of", "opening", "ur", "disrespectful", "liberal", "mouth", "."]
# ::lemmas ["of", "course", "you", "'ll", "b", "dead", "after", "day", "of", "open", "ur", "disrespectful", "liberal", "mouth", "."]
(c19-6 / die-01
       :ARG1 (c19-0 / you
                    :part (c19-3 / mouth
                                 :ARG1-of (c19-2 / liberal-02)
                                 :ARG0-of (c19-1 / disrespect-01)))
       :mod (c19-5 / of-course)
       :time (c19-7 / after
                    :op1 (c19-8 / day))
       :time (c19-4 / open-01
                    :ARG0 c19-0
                    :ARG1 c19-3))

# ::snt that's a great solution from a moron. We'll get Andy and Barney Fife to take their place. Then Mayberry will b kosher again!
# ::tokens ["that", "'s", "a", "great", "solution", "from", "a", "moron", ".", "We", "'ll", "get", "Andy", "and", "Barney", "Fife", "to", "take", "their", "place", ".", "Then", "Mayberry", "will", "b", "kosher", "again", "!"]
# ::lemmas ["that", "be", "a", "great", "solution", "from", "a", "moron", ".", "we", "'ll", "get", "Andy", "and", "Barney", "Fife", "to", "take", "their", "place", ".", "then", "Mayberry", "will", "b", "kosher", "again", "!"]
(c20-1 / multi-sentence
       :snt1 (c20-13 / solve-01
                     :ARG0 (c20-7 / moron)
                     :ARG2 (c20-15 / that)
                     :mod (c20-10 / great))
       :snt2 (c20-8 / get-04
                    :ARG0 (c20-0 / we)
                    :ARG1 (c20-9 / replace-01
                                 :ARG0 (c20-17 / and
                                               :op1 (c20-11 / person
                                                            :name (c20-5 / name
                                                                         :op1 "Andy"))
                                               :op2 (c20-16 / person
                                                            :name (c20-6 / name
                                                                         :op1 "Barney"
                                                                         :op2 "Fife"))
                                               :ARG1-of c20-9)))
       :snt3 (c20-4 / kosher
                    :domain (c20-2 / person
                                   :name (c20-12 / name
                                                 :op1 "Mayberry"))
                    :mod (c20-3 / again)
                    :time (c20-14 / then)))

# ::snt no one said that. But keep regurgitating the shit you swallow.
# ::tokens ["no", "one", "said", "that", ".", "But", "keep", "regurgitating", "the", "shit", "you", "swallow", "."]
# ::lemmas ["no", "one", "say", "that", ".", "but", "keep", "regurgitate", "the", "shit", "you", "swallow", "."]
(c21-2 / multi-sentence
       :snt1 (c21-8 / say-01
                    :ARG0 (c21-5 / no-one)
                    :ARG1 (c21-9 / that))
       :snt2 (c21-7 / contrast-01
                    :ARG2 (c21-4 / keep-02
                                 :ARG0 (c21-0 / you)
                                 :ARG1 (c21-6 / regurgitate-01
                                              :ARG0 c21-0
                                              :ARG1 (c21-3 / shit
                                                           :ARG1-of (c21-1 / swallow-01
                                                                           :ARG0 c21-0)))
                                 :mode imperative)))

# ::snt no, not all. Though that particular Anon has little and had little.
# ::tokens ["no", ",", "not", "all", ".", "Though", "that", "particular", "Anon", "has", "little", "and", "had", "little", "."]
# ::lemmas ["no", ",", "not", "all", ".", "though", "that", "particular", "Anon", "have", "little", "and", "have", "little", "."]
(c22-2 / multi-sentence
       :snt1 (c22-8 / all
                    :polarity -)
       :snt2 (c22-0 / have-concession-91
                    :ARG2 (c22-3 / and
                                 :op1 (c22-11 / have-03
                                              :ARG0 (c22-6 / person
                                                           :name (c22-4 / name
                                                                        :op1 "Anon")
                                                           :mod (c22-10 / particular)
                                                           :mod (c22-9 / that))
                                              :ARG1 (c22-1 / little))
                                 :op2 (c22-5 / have-03
                                             :ARG0 c22-6
                                             :ARG1 (c22-7 / little)))))

# ::snt yo! Anonymous before you attack facts, realize you misidentified the officer, facts go both ways, you're a mess.
# ::tokens ["yo", "!", "Anonymous", "before", "you", "attack", "facts", ",", "realize", "you", "misidentified", "the", "officer", ",", "facts", "go", "both", "ways", ",", "you", "'re", "a", "mess", "."]
# ::lemmas ["yo", "!", "Anonymous", "before", "you", "attack", "fact", ",", "realize", "you", "misidentifie", "the", "officer", ",", "fact", "go", "both", "way", ",", "you", "be", "a", "mess", "."]
(c23-4 / multi-sentence
       :snt1 (c23-1 / yo
                    :mode expressive)
       :snt2 (c23-11 / realize-01
                     :ARG0 (c23-10 / person
                                   :mod (c23-17 / anonymous))
                     :ARG1 (c23-8 / identify-01
                                  :ARG0 c23-10
                                  :ARG1 (c23-16 / person
                                                :ARG0-of (c23-0 / have-org-role-91
                                                                :ARG2 (c23-6 / officer))))
                     :time (c23-5 / before
                                  :op1 (c23-7 / attack-01
                                              :ARG0 c23-10
                                              :ARG1 (c23-3 / fact)))
                     :ARG1-of (c23-12 / cause-01
                                      :ARG0 (c23-13 / go-01
                                                    :ARG1 (c23-9 / fact)
                                                    :ARG4 (c23-2 / way
                                                                 :mod (c23-14 / both)))
                                      :ARG1 (c23-15 / mess
                                                    :domain c23-10))
                     :mode imperative))

# ::snt I agree it's WAY worse killing an unarmed teen but you lose all credibility when you do shit like realize the wrong name.
# ::tokens ["I", "agree", "it", "'s", "WAY", "worse", "killing", "an", "unarmed", "teen", "but", "you", "lose", "all", "credibility", "when", "you", "do", "shit", "like", "realize", "the", "wrong", "name", "."]
# ::lemmas ["i", "agree", "it", "be", "WAY", "worse", "kill", "an", "unarmed", "teen", "but", "you", "lose", "all", "credibility", "when", "you", "do", "shit", "like", "realize", "the", "wrong", "name", "."]
(c24-17 / contrast-01
        :ARG1 (c24-5 / agree-01
                     :ARG0 (c24-14 / i)
                     :ARG1 (c24-6 / have-degree-91
                                  :ARG1 (c24-15 / kill-01
                                                :ARG1 (c24-18 / teen
                                                              :ARG1-of (c24-13 / arm-01
                                                                               :polarity -)))
                                  :ARG2 (c24-8 / bad-07
                                               :ARG1 c24-15)
                                  :ARG3 (c24-0 / more
                                               :quant (c24-12 / way))))
        :ARG2 (c24-7 / lose-02
                     :ARG0 (c24-16 / you)
                     :ARG1 (c24-2 / credibility
                                  :mod (c24-10 / all))
                     :condition (c24-3 / do-02
                                       :ARG0 c24-16
                                       :ARG1 (c24-4 / shit
                                                    :example (c24-11 / realize-01
                                                                     :ARG0 c24-16
                                                                     :ARG1 (c24-1 / wrong-04
                                                                                  :ARG2 (c24-9 / name)))))))

# ::snt If the Officer knew of the robbery why didnt he get out car &amp; arrest suspect Why wasn't the nd suspect arrested
# ::tokens ["If", "the", "Officer", "knew", "of", "the", "robbery", "why", "did", "nt", "he", "get", "out", "car", "&", "amp", ";", "arrest", "suspect", "Why", "was", "n't", "the", "nd", "suspect", "arrested"]
# ::lemmas ["if", "the", "Officer", "know", "of", "the", "robbery", "why", "do", "not", "he", "get", "out", "car", "&", "amp", ";", "arrest", "suspect", "why", "be", "not", "the", "nd", "suspect", "arrest"]
(c25-15 / and
        :op1 (c25-9 / get-05
                    :ARG0 (c25-1 / officer)
                    :ARG2 (c25-0 / out
                                 :op1 (c25-4 / and
                                             :op1 (c25-8 / car)
                                             :op2 (c25-5 / amp)))
                    :ARG1-of (c25-7 / cause-01
                                    :ARG0 (c25-13 / amr-unknown))
                    :condition (c25-14 / know-01
                                       :ARG0 c25-1
                                       :ARG1 (c25-10 / rob-01))
                    :polarity -)
        :op2 (c25-2 / arrest-01
                    :ARG0 c25-1
                    :ARG1 (c25-6 / person
                                 :ARG2-of (c25-12 / suspect-01))
                    :ARG1-of (c25-11 / cause-01
                                     :ARG0 (c25-3 / amr-unknown))
                    :polarity -))

# ::snt I have bitch. If u dint like it here move to a Muslim country and try that freedom of speech shit there. All laws r equal
# ::tokens ["I", "have", "bitch", ".", "If", "u", "dint", "like", "it", "here", "move", "to", "a", "Muslim", "country", "and", "try", "that", "freedom", "of", "speech", "shit", "there", ".", "All", "laws", "r", "equal"]
# ::lemmas ["i", "have", "bitch", ".", "if", "u", "dint", "like", "it", "here", "move", "to", "a", "Muslim", "country", "and", "try", "that", "freedom", "of", "speech", "shit", "there", ".", "all", "law", "r", "equal"]
(c26-0 / multi-sentence
       :snt1 (c26-4 / have-03
                    :ARG0 (c26-14 / i)
                    :ARG1 (c26-7 / bitch))
       :snt2 (c26-3 / and
                    :op1 (c26-11 / move-01
                                 :ARG0 (c26-17 / you
                                               :ARG1-of c26-11)
                                 :ARG2 (c26-18 / country
                                               :mod (c26-12 / religious-group
                                                            :name (c26-10 / name
                                                                          :op1 "Muslim")))
                                 :mode imperative)
                    :op2 (c26-20 / try-01
                                 :ARG0 c26-17
                                 :ARG1 (c26-1 / shit
                                              :topic (c26-5 / free-04
                                                            :ARG3 (c26-8 / speak-01))
                                              :mod (c26-19 / that))
                                 :location c26-18
                                 :mode imperative)
                    :condition (c26-6 / like-01
                                      :ARG0 c26-17
                                      :ARG1 (c26-16 / it)
                                      :location (c26-2 / here)
                                      :polarity -))
       :snt3 (c26-9 / equal-01
                    :ARG1 (c26-15 / law
                                  :mod (c26-13 / all))))

# ::snt Exactly, thank you.
# ::tokens ["Exactly", ",", "thank", "you", "."]
# ::lemmas ["exactly", ",", "thank", "you", "."]
(c27-2 / thank-01
       :ARG1 (c27-0 / you)
       :mod (c27-1 / exact))

# ::snt the police aren't supposed to b godly dipshit. Watch another conspiracy movie. Then move to Iraq and let then teach u lesson.
# ::tokens ["the", "police", "are", "n't", "supposed", "to", "b", "godly", "dipshit", ".", "Watch", "another", "conspiracy", "movie", ".", "Then", "move", "to", "Iraq", "and", "let", "then", "teach", "u", "lesson", "."]
# ::lemmas ["the", "police", "be", "not", "suppose", "to", "b", "godly", "dipshit", ".", "watch", "another", "conspiracy", "movie", ".", "then", "move", "to", "Iraq", "and", "let", "then", "teach", "u", "lesson", "."]
(c28-3 / multi-sentence
       :snt1 (c28-13 / suppose-02
                     :ARG1 (c28-8 / police)
                     :ARG2 (c28-5 / bullshit-01
                                  :ARG0 c28-8)
                     :polarity -)
       :snt2 (c28-0 / watch-01
                    :ARG1 (c28-9 / movie
                                 :mod (c28-10 / conspiracy)
                                 :mod (c28-16 / another)))
       :snt3 (c28-6 / and
                    :op1 (c28-2 / move-01
                                :ARG0 (c28-1 / you)
                                :ARG2 (c28-11 / country
                                              :name (c28-7 / name
                                                           :op1 "Iraq"))
                                :mode imperative)
                    :op2 (c28-4 / let-01
                                :ARG0 c28-1
                                :ARG1 (c28-15 / teach-01
                                              :ARG0 c28-1
                                              :ARG1 (c28-12 / lesson)
                                              :ARG2 c28-1)
                                :time (c28-14 / then)
                                :mode imperative)))

# ::snt so you don't lose credibility when you report incorrect facts? We'll stop there then.
# ::tokens ["so", "you", "do", "n't", "lose", "credibility", "when", "you", "report", "incorrect", "facts", "?", "We", "'ll", "stop", "there", "then", "."]
# ::lemmas ["so", "you", "do", "not", "lose", "credibility", "when", "you", "report", "incorrect", "fact", "?", "we", "'ll", "stop", "there", "then", "."]
(c29-3 / multi-sentence
       :snt1 (c29-6 / cause-01
                    :ARG1 (c29-2 / lose-02
                                 :ARG0 (c29-0 / you)
                                 :ARG1 (c29-5 / credibility)
                                 :time (c29-7 / report-01
                                              :ARG0 c29-0
                                              :ARG1 (c29-4 / fact
                                                           :ARG1-of (c29-9 / correct-02
                                                                           :polarity -)))
                                 :polarity (c29-12 / amr-unknown)
                                 :polarity -))
       :snt2 (c29-11 / stop-01
                     :ARG0 (c29-1 / we)
                     :ARG1 (c29-10 / there)
                     :time (c29-8 / then)))

# ::snt you meant don't
# ::tokens ["you", "meant", "do", "n't"]
# ::lemmas ["you", "mean", "do", "not"]
(c30-2 / mean-01
       :ARG0 (c30-0 / you)
       :ARG2 (c30-1 / do-02
                    :polarity -))

# ::snt it was wrong. Much much less worse than what cops did to Mike Brown and the whole city.
# ::tokens ["it", "was", "wrong", ".", "Much", "much", "less", "worse", "than", "what", "cops", "did", "to", "Mike", "Brown", "and", "the", "whole", "city", "."]
# ::lemmas ["it", "be", "wrong", ".", "much", "much", "less", "bad", "than", "what", "cop", "do", "to", "Mike", "Brown", "and", "the", "whole", "city", "."]
(c31-3 / multi-sentence
       :snt1 (c31-1 / wrong-02
                    :ARG1 (c31-5 / it))
       :snt2 (c31-0 / have-degree-91
                    :ARG1 (c31-14 / thing)
                    :ARG2 (c31-4 / bad-07
                                 :ARG1 c31-14)
                    :ARG3 (c31-2 / less
                                 :quant (c31-8 / much))
                    :ARG4 (c31-13 / thing
                                  :ARG1-of (c31-9 / do-02
                                                  :ARG0 (c31-10 / cop)
                                                  :ARG2 (c31-15 / and
                                                                :op1 (c31-11 / person
                                                                             :name (c31-7 / name
                                                                                          :op1 "Mike"
                                                                                          :op2 "Brown"))
                                                                :op2 (c31-12 / city
                                                                             :mod (c31-6 / whole)))))))

# ::snt I'd like to see video (Date, Time?) It took them almost a week to, come up with that STORY
# ::tokens ["I", "'d", "like", "to", "see", "video", "(", "Date", ",", "Time", "?", ")", "It", "took", "them", "almost", "a", "week", "to", ",", "come", "up", "with", "that", "STORY"]
# ::lemmas ["i", "would", "like", "to", "see", "video", "(", "date", ",", "Time", "?", ")", "it", "take", "they", "almost", "a", "week", "to", ",", "come", "up", "with", "that", "STORY"]
(c32-1 / like-02
       :ARG0 (c32-5 / i)
       :ARG1 (c32-14 / see-01
                     :ARG0 c32-5
                     :ARG1 (c32-7 / video
                                  :example (c32-16 / and
                                                   :op1 (c32-9 / date)
                                                   :op2 (c32-15 / time
                                                                :polarity (c32-4 / amr-unknown)))))
       :ARG1-of (c32-10 / cause-01
                        :ARG0 (c32-13 / take-10
                                      :ARG0 (c32-11 / come-up-11
                                                    :ARG1 (c32-2 / story
                                                                 :mod (c32-8 / that)))
                                      :ARG1 (c32-12 / almost
                                                    :op1 (c32-3 / temporal-quantity
                                                                :unit (c32-0 / week)
                                                                :quant 1))
                                      :ARG2 (c32-6 / they))))

# ::snt nope. Fire em all.
# ::tokens ["nope", ".", "Fire", "em", "all", "."]
# ::lemmas ["nope", ".", "fire", "em", "all", "."]
(c33-2 / multi-sentence
       :snt1 (c33-3 / nope)
       :snt2 (c33-1 / fire-02
                    :ARG0 (c33-0 / you)
                    :ARG1 (c33-4 / they
                                 :mod (c33-5 / all))
                    :mode imperative))

# ::snt you don't think police/government has never done that? They lie and give false info every fucking day.
# ::tokens ["you", "do", "n't", "think", "police", "/", "government", "has", "never", "done", "that", "?", "They", "lie", "and", "give", "false", "info", "every", "fucking", "day", "."]
# ::lemmas ["you", "do", "not", "think", "police", "/", "government", "have", "never", "do", "that", "?", "they", "lie", "and", "give", "false", "info", "every", "fucking", "day", "."]
(c34-1 / multi-sentence
       :snt1 (c34-19 / think-01
                     :ARG0 (c34-15 / you)
                     :ARG1 (c34-4 / do-02
                                  :ARG0 (c34-6 / slash
                                               :op1 (c34-3 / police)
                                               :op2 (c34-12 / government-organization
                                                            :ARG0-of (c34-5 / govern-01)))
                                  :ARG1 (c34-18 / that)
                                  :time (c34-10 / ever)
                                  :polarity -)
                     :polarity -)
       :snt2 (c34-7 / and
                    :op1 (c34-8 / lie-08
                                :ARG0 (c34-14 / they))
                    :op2 (c34-2 / give-01
                                :ARG0 c34-14
                                :ARG1 (c34-13 / information
                                              :mod (c34-9 / false)))
                    :frequency (c34-11 / rate-entity-91
                                       :ARG3 (c34-16 / temporal-quantity
                                                     :unit (c34-0 / day)
                                                     :mod (c34-17 / fucking
                                                                  :mode expressive)
                                                     :quant 1))))

# ::snt bullshit. Everyone makes mistakes. It's how you handle em.
# ::tokens ["bullshit", ".", "Everyone", "makes", "mistakes", ".", "It", "'s", "how", "you", "handle", "em", "."]
# ::lemmas ["bullshit", ".", "everyone", "make", "mistake", ".", "it", "be", "how", "you", "handle", "em", "."]
(c35-2 / multi-sentence
       :snt1 (c35-3 / bullshit-01)
       :snt2 (c35-5 / mistake-02
                    :ARG0 (c35-4 / everyone))
       :snt3 (c35-0 / handle-01
                    :ARG0 (c35-1 / you)
                    :ARG1 (c35-7 / they)
                    :ARG2 (c35-6 / thing)))

# ::snt story is so full of holes it takes the American media in order to not simply be laughed to hell.
# ::tokens ["story", "is", "so", "full", "of", "holes", "it", "takes", "the", "American", "media", "in", "order", "to", "not", "simply", "be", "laughed", "to", "hell", "."]
# ::lemmas ["story", "be", "so", "full", "of", "hole", "it", "take", "the", "American", "medium", "in", "order", "to", "not", "simply", "be", "laugh", "to", "hell", "."]
(c36-1 / fill-01
       :ARG1 (c36-9 / story)
       :ARG2 (c36-0 / hole)
       :ARG2-of (c36-11 / have-degree-91
                        :ARG1 c36-9
                        :ARG3 (c36-5 / so)
                        :ARG6 (c36-10 / take-10
                                      :ARG0 (c36-2 / laugh-01
                                                   :ARG2 (c36-3 / media
                                                                :mod (c36-8 / country
                                                                            :name (c36-6 / name
                                                                                         :op1 "America")))
                                                   :ARG1-of (c36-4 / simple-02
                                                                   :polarity -))
                                      :ARG1 c36-3
                                      :ARG2 (c36-7 / hell))))

# ::snt everyone. It was reversed w/in an hour and a half. By that way, that cop shot someone else, most likely.
# ::tokens ["everyone", ".", "It", "was", "reversed", "w", "/", "in", "an", "hour", "and", "a", "half", ".", "By", "that", "way", ",", "that", "cop", "shot", "someone", "else", ",", "most", "likely", "."]
# ::lemmas ["everyone", ".", "it", "be", "reverse", "w", "/", "in", "an", "hour", "and", "a", "half", ".", "by", "that", "way", ",", "that", "cop", "shoot", "someone", "else", ",", "most", "likely", "."]
(c37-2 / multi-sentence
       :snt1 (c37-5 / everyone)
       :snt2 (c37-10 / reverse-01
                     :ARG1 (c37-7 / it)
                     :frequency (c37-8 / rate-entity-91
                                       :ARG2 (c37-14 / temporal-quantity
                                                     :unit (c37-0 / hour)
                                                     :quant 1.5)
                                       :ARG1 1))
       :snt3 (c37-13 / shoot-02
                     :ARG0 (c37-11 / cop
                                   :mod (c37-12 / that))
                     :ARG1 (c37-6 / someone
                                  :mod (c37-3 / else))
                     :mod (c37-4 / by-the-way)
                     :ARG1-of (c37-1 / likely-01
                                     :ARG2-of (c37-15 / have-degree-91
                                                      :ARG1 c37-13
                                                      :ARG3 (c37-9 / most)))))

# ::snt u dont attack the whole police dept because one cop shot a stupid thug. U respect the police because they have a job to do.
# ::tokens ["u", "do", "nt", "attack", "the", "whole", "police", "dept", "because", "one", "cop", "shot", "a", "stupid", "thug", ".", "U", "respect", "the", "police", "because", "they", "have", "a", "job", "to", "do", "."]
# ::lemmas ["u", "do", "nt", "attack", "the", "whole", "police", "dept", "because", "one", "cop", "shoot", "a", "stupid", "thug", ".", "u", "respect", "the", "police", "because", "they", "have", "a", "job", "to", "do", "."]
(c38-4 / multi-sentence
       :snt1 (c38-16 / attack-01
                     :ARG0 (c38-1 / you)
                     :ARG1 (c38-8 / department
                                  :mod (c38-7 / police)
                                  :mod (c38-2 / whole))
                     :ARG1-of (c38-9 / cause-01
                                     :ARG0 (c38-13 / shoot-02
                                                   :ARG0 (c38-10 / cop
                                                                 :quant 1)
                                                   :ARG1 (c38-14 / thug
                                                                 :mod (c38-6 / stupid))))
                     :polarity -)
       :snt2 (c38-12 / cause-01
                     :ARG0 (c38-0 / have-03
                                  :ARG0 (c38-15 / police)
                                  :ARG1 (c38-3 / job
                                               :ARG1-of (c38-5 / do-02
                                                               :ARG0 c38-15)))
                     :ARG1 (c38-11 / respect-01
                                   :ARG0 (c38-17 / you)
                                   :ARG1 c38-15)))

# ::snt US, Canada, Britain... we love us some cops, loooooong time.
# ::tokens ["US", ",", "Canada", ",", "Britain", "...", "we", "love", "us", "some", "cops", ",", "loooooong", "time", "."]
# ::lemmas ["US", ",", "Canada", ",", "Britain", "...", "we", "love", "we", "some", "cop", ",", "loooooong", "time", "."]
(c39-1 / love-01
       :ARG0 (c39-0 / we)
       :ARG1 (c39-7 / cop
                    :quant (c39-9 / some))
       :time (c39-10 / time
                     :mod (c39-2 / many))
       :example (c39-11 / and
                        :op1 (c39-6 / country
                                    :name (c39-3 / name
                                                 :op1 "US"))
                        :op2 (c39-8 / country
                                    :name (c39-4 / name
                                                 :op1 "Canada"))
                        :op3 (c39-12 / country
                                     :name (c39-5 / name
                                                  :op1 "Britain"))))

# ::snt didnt you know its impossible for police to lie or do anything wrong in general
# ::tokens ["did", "nt", "you", "know", "its", "impossible", "for", "police", "to", "lie", "or", "do", "anything", "wrong", "in", "general"]
# ::lemmas ["do", "not", "you", "know", "its", "impossible", "for", "police", "to", "lie", "or", "do", "anything", "wrong", "in", "general"]
(c40-8 / know-01
       :ARG0 (c40-0 / you)
       :ARG1 (c40-5 / possible-01
                    :ARG1 (c40-3 / or
                                 :op1 (c40-2 / lie-08
                                             :ARG0 (c40-9 / police))
                                 :op2 (c40-6 / do-02
                                             :ARG0 c40-9
                                             :ARG1 (c40-10 / anything
                                                           :ARG1-of (c40-1 / wrong-02)))
                                 :ARG1-of (c40-7 / general-02))
                    :polarity -)
       :polarity (c40-4 / amr-unknown))

# ::snt police are an ungodly, violent cult that keeps secrets, jails, racializes, lies, and protects its own at all costs.
# ::tokens ["police", "are", "an", "ungodly", ",", "violent", "cult", "that", "keeps", "secrets", ",", "jails", ",", "racializes", ",", "lies", ",", "and", "protects", "its", "own", "at", "all", "costs", "."]
# ::lemmas ["police", "be", "an", "ungodly", ",", "violent", "cult", "that", "keep", "secret", ",", "jail", ",", "racialize", ",", "lie", ",", "and", "protect", "its", "own", "at", "all", "cost", "."]
(c41-7 / cult
       :domain (c41-5 / police)
       :mod (c41-4 / violent)
       :ARG0-of (c41-10 / keep-01
                        :ARG1 (c41-12 / and
                                      :op1 (c41-9 / secret)
                                      :op2 (c41-0 / jail)
                                      :op3 (c41-6 / racialize-01)
                                      :op4 (c41-1 / lie-08)))
       :ARG0-of (c41-11 / protect-01
                        :ARG1 (c41-2 / own-01
                                     :ARG0 c41-7)
                        :degree (c41-3 / at-all-cost))
       :mod (c41-8 / god
                   :polarity -))

# ::snt immediately corrected by multiple major anon accounts. No one complaining about account suspension.
# ::tokens ["immediately", "corrected", "by", "multiple", "major", "anon", "accounts", ".", "No", "one", "complaining", "about", "account", "suspension", "."]
# ::lemmas ["immediately", "correct", "by", "multiple", "major", "anon", "account", ".", "no", "one", "complain", "about", "account", "suspension", "."]
(c42-1 / multi-sentence
       :snt1 (c42-8 / correct-01
                    :ARG0 (c42-10 / account
                                  :mod (c42-2 / on)
                                  :quant (c42-6 / multiple)
                                  :ARG1-of (c42-0 / major-02))
                    :time (c42-4 / immediate))
       :snt2 (c42-7 / complain-01
                    :ARG0 (c42-5 / no-one)
                    :ARG1 (c42-9 / suspend-01
                                 :ARG1 (c42-3 / account))))

# ::snt I read it, thanks for the link. Still disagree with the tactic &amp; support the overall mission. It's okay to disagree
# ::tokens ["I", "read", "it", ",", "thanks", "for", "the", "link", ".", "Still", "disagree", "with", "the", "tactic", "&", "amp", ";", "support", "the", "overall", "mission", ".", "It", "'s", "okay", "to", "disagree"]
# ::lemmas ["i", "read", "it", ",", "thank", "for", "the", "link", ".", "still", "disagree", "with", "the", "tactic", "&", "amp", ";", "support", "the", "overall", "mission", ".", "it", "be", "okay", "to", "disagree"]
(c43-3 / multi-sentence
       :snt1 (c43-16 / and
                     :op1 (c43-10 / read-01
                                  :ARG0 (c43-8 / i)
                                  :ARG1 (c43-12 / it))
                     :op2 (c43-15 / thank-01
                                  :ARG0 c43-8
                                  :ARG1 (c43-0 / you)
                                  :ARG2 (c43-2 / link)))
       :snt2 (c43-7 / and
                    :op1 (c43-11 / disagree-01
                                 :ARG2 (c43-13 / tactic)
                                 :mod (c43-14 / still))
                    :op2 (c43-6 / support-01
                                :ARG1 (c43-9 / mission-01
                                             :mod (c43-5 / overall))))
       :snt3 (c43-4 / okay-04
                    :ARG1 (c43-1 / disagree-01)))

# ::snt Did I?
# ::tokens ["Did", "I", "?"]
# ::lemmas ["do", "i", "?"]
(c44-0 / event
       :polarity (c44-2 / amr-unknown)
       :mod (c44-1 / i))

# ::snt could have been anyone?
# ::tokens ["could", "have", "been", "anyone", "?"]
# ::lemmas ["could", "have", "be", "anyone", "?"]
(c45-0 / possible-01
       :ARG1 (c45-2 / anyone)
       :polarity (c45-1 / amr-unknown))

# ::snt Can you cite this statute?
# ::tokens ["Can", "you", "cite", "this", "statute", "?"]
# ::lemmas ["can", "you", "cite", "this", "statute", "?"]
(c46-1 / possible-01
       :polarity (c46-5 / amr-unknown)
       :ARG1 (c46-2 / cite-01
                    :ARG0 (c46-0 / you)
                    :ARG1 (c46-3 / statute
                                 :mod (c46-4 / this))))

# ::snt this is true. But who released that info specifically. Because anon is more of a collective than an "agency".
# ::tokens ["this", "is", "true", ".", "But", "who", "released", "that", "info", "specifically", ".", "Because", "anon", "is", "more", "of", "a", "collective", "than", "an", "\"", "agency", "\"", "."]
# ::lemmas ["this", "be", "true", ".", "but", "who", "release", "that", "info", "specifically", ".", "because", "anon", "be", "more", "of", "a", "collective", "than", "an", "\"", "agency", "\"", "."]
(c47-1 / multi-sentence
       :snt1 (c47-14 / true-01
                     :ARG1 (c47-11 / this))
       :snt2 (c47-9 / contrast-01
                    :ARG2 (c47-8 / release-01
                                 :ARG0 (c47-15 / amr-unknown)
                                 :ARG1 (c47-4 / information
                                              :mod (c47-6 / that))
                                 :manner (c47-12 / specific-02)))
       :snt3 (c47-10 / cause-01
                     :ARG0 (c47-0 / have-degree-91
                                  :ARG1 (c47-2 / organization
                                               :name (c47-5 / name
                                                            :op1 "Anon"))
                                  :ARG2 (c47-13 / collective)
                                  :ARG3 (c47-7 / more)
                                  :ARG4 (c47-3 / agency))))

# ::snt In the USA, if a cop says something, it automatically becomes fact. By law media must report it as fact no matter how outrageous.
# ::tokens ["In", "the", "USA", ",", "if", "a", "cop", "says", "something", ",", "it", "automatically", "becomes", "fact", ".", "By", "law", "media", "must", "report", "it", "as", "fact", "no", "matter", "how", "outrageous", "."]
# ::lemmas ["in", "the", "USA", ",", "if", "a", "cop", "say", "something", ",", "it", "automatically", "become", "fact", ".", "by", "law", "medium", "must", "report", "it", "as", "fact", "no", "matter", "how", "outrageous", "."]
(c48-1 / multi-sentence
       :snt1 (c48-4 / become-01
                    :ARG1 (c48-15 / say-01
                                  :ARG0 (c48-13 / cop)
                                  :ARG1 (c48-6 / something))
                    :ARG2 (c48-0 / fact)
                    :manner (c48-17 / automatic)
                    :location (c48-12 / country
                                      :name (c48-9 / name
                                                   :op1 "USA")))
       :snt2 (c48-5 / obligate-01
                    :ARG1 (c48-11 / media)
                    :ARG2 (c48-14 / report-01
                                  :ARG0 c48-11
                                  :ARG1 (c48-7 / it)
                                  :ARG3 (c48-8 / fact)
                                  :ARG1-of (c48-10 / regardless-91
                                                   :ARG2 (c48-16 / thing
                                                                 :degree-of (c48-2 / outrageous-02))))
                    :source (c48-3 / law)))

# ::snt the whole department and many beyond have participated in cover up, years of racial profiling, and massive rights violations
# ::tokens ["the", "whole", "department", "and", "many", "beyond", "have", "participated", "in", "cover", "up", ",", "years", "of", "racial", "profiling", ",", "and", "massive", "rights", "violations"]
# ::lemmas ["the", "whole", "department", "and", "many", "beyond", "have", "participate", "in", "cover", "up", ",", "years", "of", "racial", "profiling", ",", "and", "massive", "right", "violation"]
(c49-8 / participate-01
       :ARG0 (c49-15 / and
                     :op1 (c49-9 / department
                                 :mod (c49-0 / whole))
                     :op2 (c49-4 / beyond
                                 :quant (c49-3 / many)))
       :ARG1 (c49-5 / and
                    :op1 (c49-10 / cover-up-04)
                    :op2 (c49-14 / profile-01
                                 :mod (c49-11 / race)
                                 :duration (c49-12 / multiple
                                                   :op1 (c49-13 / temporal-quantity
                                                                :unit (c49-1 / year)
                                                                :quant 1)))
                    :op3 (c49-7 / violate-01
                                :ARG1 (c49-6 / right-05)
                                :degree (c49-2 / massive))))

# ::snt the police have a job TO DO and a RIGHT to defend themselves &amp; innocent people that aren't stupid enough to attack police.
# ::tokens ["the", "police", "have", "a", "job", "TO", "DO", "and", "a", "RIGHT", "to", "defend", "themselves", "&", "amp", ";", "innocent", "people", "that", "are", "n't", "stupid", "enough", "to", "attack", "police", "."]
# ::lemmas ["the", "police", "have", "a", "job", "to", "DO", "and", "a", "right", "to", "defend", "themselves", "&", "amp", ";", "innocent", "people", "that", "be", "not", "stupid", "enough", "to", "attack", "police", "."]
(c50-4 / multi-sentence
       :snt1 (c50-0 / have-03
                    :ARG0 (c50-9 / police)
                    :ARG1 (c50-14 / and
                                  :op1 (c50-1 / job
                                              :ARG1-of (c50-10 / do-02
                                                               :ARG0 c50-9))
                                  :op2 (c50-11 / right-05
                                               :ARG1 c50-9
                                               :ARG2 (c50-2 / defend-01
                                                            :ARG0 c50-9
                                                            :ARG1 c50-9))))
       :snt2 (c50-13 / person
                     :ARG1-of (c50-8 / innocent-01)
                     :ARG1-of (c50-3 / have-degree-91
                                     :ARG2 (c50-12 / stupid)
                                     :ARG3 (c50-6 / enough)
                                     :ARG6 (c50-7 / attack-01
                                                  :ARG0 c50-13
                                                  :ARG1 (c50-5 / police))
                                     :polarity -)))
