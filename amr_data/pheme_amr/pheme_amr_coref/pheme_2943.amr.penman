# ::snt Guilt by body language.
# ::tokens ["Guilt", "by", "body", "language", "."]
# ::lemmas ["guilt", "by", "body", "language", "."]
(c1-1 / guilt
      :manner (c1-0 / language
                    :mod (c1-2 / body)))

# ::snt Dear America. .......are you really sure this gun thing you've got going is working?
# ::tokens ["Dear", "America", ".", ".......", "are", "you", "really", "sure", "this", "gun", "thing", "you", "'ve", "got", "going", "is", "working", "?"]
# ::lemmas ["Dear", "America", ".", ".......", "be", "you", "really", "sure", "this", "gun", "thing", "you", "'ve", "got", "go", "be", "work", "?"]
(c2-8 / say-01
      :ARG1 (c2-1 / sure-02
                  :ARG0 (c2-4 / country
                              :name (c2-2 / name
                                          :op1 "America")
                              :mod (c2-3 / dear))
                  :ARG1 (c2-0 / work-09
                              :ARG1 (c2-10 / thing
                                           :mod (c2-5 / gun)
                                           :ARG1-of (c2-6 / go-06
                                                          :ARG0 c2-4)
                                           :mod (c2-7 / this)))
                  :polarity (c2-11 / amr-unknown)
                  :ARG1-of (c2-9 / real-04))
      :ARG2 c2-4)

# ::snt they dress like war! its wrong and aggressive!ppl should'nt listen to lies anymore, politicians cause conflict
# ::tokens ["they", "dress", "like", "war", "!", "its", "wrong", "and", "aggressive!ppl", "should'nt", "listen", "to", "lies", "anymore", ",", "politicians", "cause", "conflict"]
# ::lemmas ["they", "dress", "like", "war", "!", "its", "wrong", "and", "aggressive!ppl", "should'nt", "listen", "to", "lie", "anymore", ",", "politician", "cause", "conflict"]
(c3-0 / multi-sentence
      :snt1 (c3-4 / dress-01
                  :ARG1 (c3-19 / they)
                  :ARG2 (c3-13 / resemble-01
                               :ARG2 (c3-14 / war)))
      :snt2 (c3-7 / and
                  :op1 (c3-1 / wrong-02
                             :ARG1 (c3-16 / it))
                  :op2 (c3-15 / aggressive
                              :domain c3-16)
                  :mode expressive)
      :snt3 (c3-2 / recommend-01
                  :ARG1 (c3-9 / listen-01
                              :ARG0 (c3-3 / person
                                          :ARG0-of (c3-8 / have-org-role-91
                                                         :ARG1 (c3-6 / political-party
                                                                     :name (c3-11 / name
                                                                                  :op1 "PPL"))))
                              :ARG1 (c3-18 / lie-08)
                              :time (c3-12 / anymore)
                              :polarity -))
      :snt4 (c3-17 / cause-01
                   :ARG0 (c3-10 / politician)
                   :ARG1 (c3-5 / conflict-01)))

# ::snt Good luck passing any gun-control laws after all of this. reminds ppl why nd amedment is important
# ::tokens ["Good", "luck", "passing", "any", "gun", "-", "control", "laws", "after", "all", "of", "this", ".", "reminds", "ppl", "why", "nd", "amedment", "is", "important"]
# ::lemmas ["good", "luck", "pass", "any", "gun", "-", "control", "law", "after", "all", "of", "this", ".", "remind", "ppl", "why", "nd", "amedment", "be", "important"]
(c4-0 / multi-sentence
      :snt1 (c4-6 / luck
                  :ARG1-of (c4-12 / good-02)
                  :topic (c4-1 / pass-01
                               :ARG1 (c4-17 / law
                                            :ARG0-of (c4-16 / control-01
                                                            :ARG1 (c4-2 / gun))
                                            :mod (c4-5 / any))
                               :time (c4-13 / after
                                            :op1 (c4-18 / this
                                                        :mod (c4-9 / all)))))
      :snt2 (c4-11 / remind-01
                   :ARG1 (c4-15 / thing
                                :ARG0-of (c4-3 / cause-01
                                               :ARG1 (c4-14 / important-01
                                                            :ARG1 (c4-10 / military
                                                                         :name (c4-8 / name
                                                                                     :op1 "Nd"
                                                                                     :op2 "Army")))))
                   :ARG2 (c4-4 / person
                               :quant (c4-7 / multiple))))

# ::snt Pitiful! What a farce!
# ::tokens ["Pitiful", "!", "What", "a", "farce", "!"]
# ::lemmas ["pitiful", "!", "what", "a", "farce", "!"]
(c5-2 / multi-sentence
      :snt1 (c5-3 / beautiful-02)
      :snt2 (c5-1 / farce
                  :degree (c5-0 / so)))

# ::snt Or burnt to a crisp.
# ::tokens ["Or", "burnt", "to", "a", "crisp", "."]
# ::lemmas ["or", "burn", "to", "a", "crisp", "."]
(c6-0 / or
      :op2 (c6-2 / burn-01
                 :degree (c6-1 / crisp-01)))

# ::snt when the police chief admits that was stopped for walking in the road.
# ::tokens ["when", "the", "police", "chief", "admits", "that", "was", "stopped", "for", "walking", "in", "the", "road", "."]
# ::lemmas ["when", "the", "police", "chief", "admit", "that", "be", "stop", "for", "walk", "in", "the", "road", "."]
(c7-2 / be-temporally-at-91
      :ARG2 (c7-9 / admit-01
                  :ARG0 (c7-3 / person
                              :ARG0-of (c7-0 / have-org-role-91
                                             :ARG1 (c7-8 / police)
                                             :ARG2 (c7-5 / chief)))
                  :ARG1 (c7-7 / stop-01
                              :ARG1 c7-3
                              :ARG1-of (c7-4 / cause-01
                                             :ARG0 (c7-1 / walk-01
                                                         :ARG0 c7-3
                                                         :ARG2 (c7-6 / road))))))

# ::snt : when the police chief admits that was stopped for walking in the road.
# ::tokens [":", "when", "the", "police", "chief", "admits", "that", "was", "stopped", "for", "walking", "in", "the", "road", "."]
# ::lemmas [":", "when", "the", "police", "chief", "admit", "that", "be", "stop", "for", "walk", "in", "the", "road", "."]
(c8-2 / be-temporally-at-91
      :ARG2 (c8-9 / admit-01
                  :ARG0 (c8-3 / person
                              :ARG0-of (c8-0 / have-org-role-91
                                             :ARG1 (c8-8 / police)
                                             :ARG2 (c8-5 / chief)))
                  :ARG1 (c8-7 / stop-01
                              :ARG1 c8-3
                              :ARG1-of (c8-4 / cause-01
                                             :ARG0 (c8-1 / walk-01
                                                         :ARG0 c8-3
                                                         :ARG2 (c8-6 / road))))))

# ::snt I had no idea that resisting arrest for walking in the street can get u shot to death
# ::tokens ["I", "had", "no", "idea", "that", "resisting", "arrest", "for", "walking", "in", "the", "street", "can", "get", "u", "shot", "to", "death"]
# ::lemmas ["i", "have", "no", "idea", "that", "resist", "arrest", "for", "walk", "in", "the", "street", "can", "get", "u", "shoot", "to", "death"]
(c9-0 / have-03
      :ARG0 (c9-4 / i)
      :ARG1 (c9-9 / idea
                  :topic (c9-5 / possible-01
                               :ARG1 (c9-8 / get-04
                                           :ARG0 (c9-6 / resist-01
                                                       :ARG0 (c9-1 / you)
                                                       :ARG1 (c9-11 / arrest-01
                                                                    :ARG1 c9-1
                                                                    :ARG2 (c9-2 / walk-01
                                                                                :ARG0 c9-1
                                                                                :ARG2 (c9-10 / street))))
                                           :ARG1 (c9-3 / shoot-01
                                                       :ARG1 c9-1
                                                       :degree (c9-7 / die-01
                                                                     :ARG1 c9-1)))))
      :polarity -)

# ::snt Only in America...
# ::tokens ["Only", "in", "America", "..."]
# ::lemmas ["only", "in", "America", "..."]
(c10-3 / be-located-at-91
       :ARG2 (c10-1 / country
                    :name (c10-0 / name
                                 :op1 "America")
                    :mod (c10-2 / only)))

# ::snt time to retire. That day
# ::tokens ["time", "to", "retire", ".", "That", "day"]
# ::lemmas ["time", "to", "retire", ".", "that", "day"]
(c11-0 / multi-sentence
       :snt1 (c11-4 / time
                    :time-of (c11-1 / retire-01))
       :snt2 (c11-2 / day
                    :mod (c11-3 / that)))

# ::snt "I'm showing you videos, don't conflate them"
# ::tokens ["\"", "I", "'m", "showing", "you", "videos", ",", "do", "n't", "conflate", "them", "\""]
# ::lemmas ["\"", "i", "be", "show", "you", "video", ",", "do", "not", "conflate", "they", "\""]
(c12-5 / show-01
       :ARG0 (c12-2 / i)
       :ARG1 (c12-3 / video)
       :ARG2 (c12-0 / you)
       :ARG0-of (c12-1 / mean-01
                       :ARG1 (c12-4 / conflate-01
                                    :ARG0 c12-0
                                    :ARG1 c12-3
                                    :polarity -
                                    :mode imperative)))

# ::snt WhatTheFuck back2the pre- 's in Mississippi or Alabama.
# ::tokens ["WhatTheFuck", "back2the", "pre-", "'s", "in", "Mississippi", "or", "Alabama", "."]
# ::lemmas ["WhatTheFuck", "back2the", "pre-", "be", "in", "Mississippi", "or", "Alabama", "."]
(c13-1 / back2
       :op1 (c13-9 / thing
                   :time (c13-6 / before
                                :op1 (c13-8 / be-located-at-91
                                            :ARG2 (c13-2 / or
                                                         :op1 (c13-7 / state
                                                                     :name (c13-4 / name
                                                                                  :op1 "Mississippi"))
                                                         :op2 (c13-3 / state
                                                                     :name (c13-5 / name
                                                                                  :op1 "Alabama"))))))
       :mod (c13-0 / fuck
                   :mode expressive))

# ::snt I'm glad people are finely starting to see through the medias and cops BS and leis
# ::tokens ["I", "'m", "glad", "people", "are", "finely", "starting", "to", "see", "through", "the", "medias", "and", "cops", "BS", "and", "leis"]
# ::lemmas ["i", "be", "glad", "people", "be", "finely", "start", "to", "see", "through", "the", "media", "and", "cop", "BS", "and", "leis"]
(c14-7 / glad-02
       :ARG0 (c14-8 / start-01
                    :ARG0 (c14-5 / person)
                    :ARG1 (c14-3 / see-01
                                 :ARG0 c14-5
                                 :path (c14-10 / and
                                               :op1 (c14-9 / psychiatrist)
                                               :op2 (c14-2 / bullshit-01
                                                           :ARG0 (c14-6 / cop))
                                               :op3 (c14-0 / leis)))
                    :manner (c14-1 / fine-03))
       :ARG1 (c14-4 / i))

# ::snt I guess we should just sit and let anyone kill us. Like fish in a barrel - we can't even SURRENDER WTH!
# ::tokens ["I", "guess", "we", "should", "just", "sit", "and", "let", "anyone", "kill", "us", ".", "Like", "fish", "in", "a", "barrel", "-", "we", "ca", "n't", "even", "SURRENDER", "WTH", "!"]
# ::lemmas ["i", "guess", "we", "should", "just", "sit", "and", "let", "anyone", "kill", "we", ".", "like", "fish", "in", "a", "barrel", "-", "we", "can", "not", "even", "surrender", "WTH", "!"]
(c15-3 / multi-sentence
       :snt1 (c15-14 / guess-01
                     :ARG0 (c15-9 / i)
                     :ARG1 (c15-13 / recommend-01
                                   :ARG1 (c15-17 / and
                                                 :op1 (c15-15 / sit-01
                                                              :ARG1 (c15-1 / we)
                                                              :mod (c15-0 / just))
                                                 :op2 (c15-2 / let-01
                                                             :ARG0 c15-1
                                                             :ARG1 (c15-16 / kill-01
                                                                           :ARG0 (c15-8 / anyone)
                                                                           :ARG1 c15-1)))))
       :snt2 (c15-12 / possible-01
                     :ARG1 (c15-6 / storm-01
                                  :ARG0 (c15-10 / we)
                                  :mod (c15-7 / even))
                     :ARG1-of (c15-11 / resemble-01
                                      :ARG2 (c15-4 / fish
                                                   :location (c15-5 / barrel)))
                     :polarity -))

# ::snt so how does that justify murder? corruption from within! dont let em fool ya!
# ::tokens ["so", "how", "does", "that", "justify", "murder", "?", "corruption", "from", "within", "!", "do", "nt", "let", "em", "fool", "ya", "!"]
# ::lemmas ["so", "how", "do", "that", "justify", "murder", "?", "corruption", "from", "within", "!", "do", "not", "let", "em", "fool", "ya", "!"]
(c16-4 / multi-sentence
       :snt1 (c16-0 / justify-01
                    :ARG1 (c16-6 / murder-01)
                    :ARG2 (c16-9 / that)
                    :manner (c16-10 / amr-unknown))
       :snt2 (c16-7 / corrupt-01
                    :source (c16-1 / within))
       :snt3 (c16-3 / let-01
                    :ARG0 (c16-2 / you)
                    :ARG1 (c16-5 / fool-01
                                 :ARG0 (c16-8 / they)
                                 :ARG1 c16-2)
                    :polarity -
                    :mode imperative))

# ::snt Lol! And this is the moment when he realised nobody requested the video to be released!
# ::tokens ["Lol", "!", "And", "this", "is", "the", "moment", "when", "he", "realised", "nobody", "requested", "the", "video", "to", "be", "released", "!"]
# ::lemmas ["Lol", "!", "and", "this", "be", "the", "moment", "when", "he", "realise", "nobody", "request", "the", "video", "to", "be", "release", "!"]
(c17-2 / multi-sentence
       :snt1 (c17-1 / laugh-01
                    :manner (c17-9 / loud)
                    :mode expressive)
       :snt2 (c17-11 / and
                     :op2 (c17-7 / moment
                                 :domain (c17-10 / this)
                                 :time-of (c17-8 / realize-01
                                                 :ARG0 (c17-0 / he)
                                                 :ARG1 (c17-4 / request-01
                                                              :ARG0 (c17-5 / nobody)
                                                              :ARG1 (c17-3 / release-01
                                                                           :ARG1 (c17-6 / video)))))))
