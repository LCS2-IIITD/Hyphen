# ::snt Hadley is an idiot. Could have lost lives due to his stupidity.
# ::tokens ["Hadley", "is", "an", "idiot", ".", "Could", "have", "lost", "lives", "due", "to", "his", "stupidity", "."]
# ::lemmas ["Hadley", "be", "an", "idiot", ".", "could", "have", "lose", "life", "due", "to", "his", "stupidity", "."]
(c1-2 / multi-sentence
      :snt1 (c1-3 / idiot
                  :domain (c1-5 / person
                                :name (c1-4 / name
                                            :op1 "Hadley")))
      :snt2 (c1-9 / possible-01
                  :ARG1 (c1-1 / lose-02
                              :ARG0 (c1-0 / he)
                              :ARG1 (c1-7 / life))
                  :ARG1-of (c1-6 / cause-01
                                 :ARG0 (c1-8 / stupidity
                                             :poss c1-0))))

# ::snt Just an appalling human being really
# ::tokens ["Just", "an", "appalling", "human", "being", "really"]
# ::lemmas ["just", "an", "appalling", "human", "be", "really"]
(c2-2 / being
      :mod (c2-0 / human)
      :ARG0-of (c2-4 / appall-01)
      :mod (c2-1 / just)
      :ARG1-of (c2-3 / real-04))

# ::snt he was on CNN going on how he had been on air for hrs he is a wanker of the highest order
# ::tokens ["he", "was", "on", "CNN", "going", "on", "how", "he", "had", "been", "on", "air", "for", "hrs", "he", "is", "a", "wanker", "of", "the", "highest", "order"]
# ::lemmas ["he", "be", "on", "CNN", "go", "on", "how", "he", "have", "be", "on", "air", "for", "hrs", "he", "be", "a", "wanker", "of", "the", "high", "order"]
(c3-3 / be-located-at-91
      :ARG1 (c3-0 / he
                  :mod (c3-1 / wanker
                             :ARG1-of (c3-4 / order-03
                                            :ARG1-of (c3-14 / have-degree-91
                                                            :ARG2 (c3-6 / high-02)
                                                            :ARG3 (c3-2 / most)))))
      :ARG2 (c3-7 / publication
                  :name (c3-5 / name
                              :op1 "CNN")
                  :ARG0-of (c3-9 / go-on-15
                                 :ARG1 (c3-13 / thing
                                              :manner-of (c3-12 / air-01
                                                                :ARG1 c3-0
                                                                :duration (c3-8 / multiple
                                                                                :op1 (c3-10 / temporal-quantity
                                                                                            :unit (c3-11 / hour)
                                                                                            :quant 1)))))))

# ::snt Oh gee, he Jones &amp; Bolt will be having a field day fearmongering &amp; spreading hate. /2
# ::tokens ["Oh", "gee", ",", "he", "Jones", "&", "amp", ";", "Bolt", "will", "be", "having", "a", "field", "day", "fearmongering", "&", "amp", ";", "spreading", "hate", ".", "/2"]
# ::lemmas ["oh", "gee", ",", "he", "Jones", "&", "amp", ";", "Bolt", "will", "be", "have", "a", "field", "day", "fearmongere", "&", "amp", ";", "spread", "hate", ".", "/2"]
(c4-2 / multi-sentence
      :snt1 (c4-16 / and
                   :op1 (c4-5 / and
                              :op1 (c4-9 / person
                                         :name (c4-7 / name
                                                     :op1 "Jones"))
                              :op2 (c4-15 / person
                                          :name (c4-8 / name
                                                      :op1 "amp"))
                              :mod (c4-12 / gee
                                          :mode expressive))
                   :op2 (c4-0 / have-03
                              :ARG0 (c4-4 / person
                                          :name (c4-10 / name
                                                       :op1 "Bolt"))
                              :ARG1 (c4-11 / and
                                           :op1 (c4-1 / fearmonger-00
                                                      :ARG0 c4-4)
                                           :op2 (c4-14 / spread-01
                                                       :ARG0 c4-4
                                                       :ARG1 (c4-3 / hate-01))
                                           :mod (c4-6 / field)
                                           :dayperiod (c4-13 / day))))
      :snt2 2)

# ::snt did any one expect anything different from him???
# ::tokens ["did", "any", "one", "expect", "anything", "different", "from", "him", "?", "?", "?"]
# ::lemmas ["do", "any", "one", "expect", "anything", "different", "from", "he", "?", "?", "?"]
(c5-1 / expect-01
      :polarity (c5-5 / amr-unknown)
      :ARG0 (c5-2 / anyone)
      :ARG1 (c5-3 / anything
                  :ARG1-of (c5-4 / differ-02
                                 :ARG2 (c5-0 / he))))

# ::snt Bolt must be devastated his show has wrapped for the year. /2
# ::tokens ["Bolt", "must", "be", "devastated", "his", "show", "has", "wrapped", "for", "the", "year", ".", "/2"]
# ::lemmas ["Bolt", "must", "be", "devastate", "his", "show", "have", "wrap", "for", "the", "year", ".", "/2"]
(c6-2 / multi-sentence
      :snt1 (c6-3 / obligate-01
                  :ARG2 (c6-6 / devastate-01
                              :ARG1 (c6-5 / person
                                          :name (c6-4 / name
                                                      :op1 "Bolt")))
                  :ARG1-of (c6-7 / cause-01
                                 :ARG0 (c6-0 / wrap-01
                                             :ARG1 (c6-8 / show
                                                         :poss c6-5)
                                             :ARG2 (c6-1 / year))))
      :snt2 2)

# ::snt drongo
# ::tokens ["drongo"]
# ::lemmas ["drongo"]
(c7-1 / person
      :name (c7-0 / name
                  :op1 "Drongo"))

# ::snt Shharrii Muckson was adding inflammatory speculation also
# ::tokens ["Shharrii", "Muckson", "was", "adding", "inflammatory", "speculation", "also"]
# ::lemmas ["Shharrii", "Muckson", "be", "add", "inflammatory", "speculation", "also"]
(c8-5 / add-01
      :ARG0 (c8-3 / person
                  :name (c8-2 / name
                              :op1 "Shharrii"
                              :op2 "Muckson"))
      :ARG1 (c8-4 / speculate-01
                  :ARG1-of (c8-1 / inflame-01))
      :mod (c8-0 / also))

# ::snt you can talk
# ::tokens ["you", "can", "talk"]
# ::lemmas ["you", "can", "talk"]
(c9-1 / possible-01
      :ARG1 (c9-2 / talk-01
                  :ARG0 (c9-0 / you)))

# ::snt carat ASSHOLE
# ::tokens ["carat", "ASSHOLE"]
# ::lemmas ["carat", "ASSHOLE"]
(c10-1 / person
       :name (c10-0 / name
                    :op1 "Carat")
       :mod (c10-2 / apparent))

# ::snt should be shut down.
# ::tokens ["should", "be", "shut", "down", "."]
# ::lemmas ["should", "be", "shut", "down", "."]
(c11-2 / recommend-01
       :ARG1 (c11-0 / shut-down-05
                    :ARG1 (c11-1 / store)))

# ::snt Ray Hadley is appalling full stop!
# ::tokens ["Ray", "Hadley", "is", "appalling", "full", "stop", "!"]
# ::lemmas ["Ray", "Hadley", "be", "appal", "full", "stop", "!"]
(c12-4 / appall-01
       :ARG0 (c12-2 / person
                    :name (c12-1 / name
                                 :op1 "Ray"
                                 :op2 "Hadley"))
       :mod (c12-3 / stop
                   :mod (c12-0 / full)))

# ::snt I've been incommunicado, what did Hadley say?
# ::tokens ["I", "'ve", "been", "incommunicado", ",", "what", "did", "Hadley", "say", "?"]
# ::lemmas ["i", "'ve", "be", "incommunicado", ",", "what", "do", "Hadley", "say", "?"]
(c13-6 / and
       :op1 (c13-4 / cover-01
                   :ARG1 (c13-1 / i)
                   :polarity -)
       :op2 (c13-5 / say-01
                   :ARG0 (c13-3 / person
                                :name (c13-2 / name
                                             :op1 "Hadley"))
                   :ARG1 (c13-0 / amr-unknown)))

# ::snt You clearly have your priorities straight. Sigh
# ::tokens ["You", "clearly", "have", "your", "priorities", "straight", ".", "Sigh"]
# ::lemmas ["you", "clearly", "have", "your", "priority", "straight", ".", "sigh"]
(c14-4 / straighten-01
       :ARG0 (c14-0 / you)
       :ARG1 (c14-5 / thing
                    :ARG1-of (c14-2 / prioritize-01
                                    :ARG0 c14-0))
       :ARG1-of (c14-3 / clear-06)
       :mod (c14-1 / sigh-02
                   :mode expressive))

# ::snt his fear mongering about bombs around Sydney caused many false reports bill the bastard
# ::tokens ["his", "fear", "mongering", "about", "bombs", "around", "Sydney", "caused", "many", "false", "reports", "bill", "the", "bastard"]
# ::lemmas ["his", "fear", "monger", "about", "bomb", "around", "Sydney", "cause", "many", "false", "report", "bill", "the", "bastard"]
(c15-7 / cause-01
       :ARG0 (c15-1 / monger
                    :mod (c15-0 / fear-01)
                    :topic (c15-2 / bomb)
                    :location (c15-10 / around
                                      :op1 (c15-6 / city
                                                  :name (c15-4 / name
                                                               :op1 "Sydney")))
                    :poss (c15-8 / bastard))
       :ARG1 (c15-9 / report-01
                    :quant (c15-5 / many)
                    :mod (c15-3 / false)))

# ::snt Sydney's own village idiot
# ::tokens ["Sydney", "'s", "own", "village", "idiot"]
# ::lemmas ["Sydney", "'s", "own", "village", "idiot"]
(c16-3 / idiot
       :mod (c16-1 / village)
       :poss (c16-2 / person
                    :name (c16-0 / name
                                 :op1 "Sydney")))

# ::snt Agree, absolutely appalling!
# ::tokens ["Agree", ",", "absolutely", "appalling", "!"]
# ::lemmas ["agree", ",", "absolutely", "appalling", "!"]
(c18-3 / agree-01
       :ARG0 (c18-2 / i)
       :ARG1 (c18-1 / appall-01
                    :degree (c18-0 / absolute)))

# ::snt It has nothing in common with journalism. NOTHING.
# ::tokens ["It", "has", "nothing", "in", "common", "with", "journalism", ".", "NOTHING", "."]
# ::lemmas ["it", "have", "nothing", "in", "common", "with", "journalism", ".", "nothing", "."]
(c19-1 / multi-sentence
       :snt1 (c19-4 / common-00
                    :ARG1 (c19-2 / it)
                    :ARG2 (c19-0 / journalism)
                    :polarity -)
       :snt2 (c19-3 / nothing))

# ::snt Hadley is a flea. He is not a jurnos backside
# ::tokens ["Hadley", "is", "a", "flea", ".", "He", "is", "not", "a", "jurnos", "backside"]
# ::lemmas ["Hadley", "be", "a", "flea", ".", "he", "be", "not", "a", "jurnos", "backside"]
(c20-3 / multi-sentence
       :snt1 (c20-2 / flea
                    :domain (c20-6 / person
                                   :name (c20-5 / name
                                                :op1 "Hadley")))
       :snt2 (c20-4 / backside
                    :mod (c20-0 / jurnos)
                    :domain (c20-1 / he)
                    :polarity -))

# ::snt Ray Hadley is grub... Hardly a surprise
# ::tokens ["Ray", "Hadley", "is", "grub", "...", "Hardly", "a", "surprise"]
# ::lemmas ["Ray", "Hadley", "be", "grub", "...", "hardly", "a", "surprise"]
(c21-1 / multi-sentence
       :snt1 (c21-4 / grub
                    :domain (c21-3 / person
                                   :name (c21-2 / name
                                                :op1 "Ray"
                                                :op2 "Hadley")))
       :snt2 (c21-5 / surprise-01
                    :degree (c21-0 / hardly)))
