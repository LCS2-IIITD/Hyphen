# ::snt warren Ellis yes
# ::tokens ["warren", "Ellis", "yes"]
# ::lemmas ["warren", "Ellis", "yes"]
(c1-2 / person
      :name (c1-0 / name
                  :op1 "Warren"
                  :op2 "Ellis")
      :mod (c1-1 / yes))

# ::snt you know the kind. Horrid looks, worrying, then they show you why you should be best friends.
# ::tokens ["you", "know", "the", "kind", ".", "Horrid", "looks", ",", "worrying", ",", "then", "they", "show", "you", "why", "you", "should", "be", "best", "friends", "."]
# ::lemmas ["you", "know", "the", "kind", ".", "Horrid", "look", ",", "worry", ",", "then", "they", "show", "you", "why", "you", "should", "be", "good", "friend", "."]
(c2-0 / multi-sentence
      :snt1 (c2-14 / know-01
                   :ARG0 (c2-16 / you)
                   :ARG1 (c2-12 / kind))
      :snt2 (c2-5 / look-02
                  :ARG0 (c2-1 / person
                              :name (c2-7 / name
                                          :op1 "Horrid"))
                  :ARG1 (c2-11 / worry-01
                               :ARG1 c2-1))
      :snt3 (c2-2 / show-01
                  :ARG0 (c2-19 / they)
                  :ARG1 (c2-18 / thing
                               :ARG0-of (c2-17 / cause-01
                                               :ARG1 (c2-9 / recommend-01
                                                           :ARG1 (c2-4 / have-rel-role-91
                                                                       :ARG0 (c2-15 / you
                                                                                    :ARG1-of c2-4)
                                                                       :ARG2 (c2-6 / friend
                                                                                   :ARG1-of (c2-3 / have-degree-91
                                                                                                  :ARG2 (c2-10 / good-02
                                                                                                               :ARG1 c2-6)
                                                                                                  :ARG3 (c2-8 / most)))))))
                  :ARG2 c2-15
                  :time (c2-13 / then)))

# ::snt it became a no fly zone to ward off journalists...
# ::tokens ["it", "became", "a", "no", "fly", "zone", "to", "ward", "off", "journalists", "..."]
# ::lemmas ["it", "become", "a", "no", "fly", "zone", "to", "ward", "off", "journalist", "..."]
(c3-4 / become-01
      :ARG1 (c3-5 / it)
      :ARG2 (c3-3 / zone
                  :purpose (c3-2 / fly-01)
                  :polarity -)
      :purpose (c3-1 / ward-off-02
                     :ARG0 c3-5
                     :ARG1 (c3-0 / journalist)))

# ::snt why do you think they want it so badly?
# ::tokens ["why", "do", "you", "think", "they", "want", "it", "so", "badly", "?"]
# ::lemmas ["why", "do", "you", "think", "they", "want", "it", "so", "badly", "?"]
(c4-4 / cause-01
      :ARG0 (c4-8 / amr-unknown)
      :ARG1 (c4-7 / think-01
                  :ARG0 (c4-0 / you)
                  :ARG1 (c4-1 / want-01
                              :ARG0 (c4-5 / they)
                              :ARG1 (c4-3 / it)
                              :ARG1-of (c4-2 / bad-05
                                             :degree (c4-6 / so)))))

# ::snt Wow. From responses, it seems people only know about what's happening in from web. What happens when gov ends net neutrality?
# ::tokens ["Wow", ".", "From", "responses", ",", "it", "seems", "people", "only", "know", "about", "what", "'s", "happening", "in", "from", "web", ".", "What", "happens", "when", "gov", "ends", "net", "neutrality", "?"]
# ::lemmas ["wow", ".", "from", "response", ",", "it", "seem", "people", "only", "know", "about", "what", "be", "happen", "in", "from", "web", ".", "what", "happen", "when", "gov", "end", "net", "neutrality", "?"]
(c5-2 / multi-sentence
      :snt1 (c5-0 / wow
                  :mode expressive)
      :snt2 (c5-13 / seem-01
                   :ARG1 (c5-14 / know-01
                                :ARG0 (c5-9 / person)
                                :ARG1 (c5-5 / event
                                            :location (c5-6 / web))
                                :mod (c5-4 / only))
                   :source (c5-10 / respond-01))
      :snt3 (c5-3 / event
                  :mod (c5-15 / amr-unknown)
                  :time (c5-1 / end-01
                              :ARG0 (c5-12 / government-organization
                                           :ARG0-of (c5-11 / govern-01))
                              :ARG1 (c5-7 / neutral-02
                                          :mod (c5-8 / net)))))

# ::snt maybe we stop getting bs rumors and pics retweeted thousands of times by people too ready to listen to anything
# ::tokens ["maybe", "we", "stop", "getting", "bs", "rumors", "and", "pics", "retweeted", "thousands", "of", "times", "by", "people", "too", "ready", "to", "listen", "to", "anything"]
# ::lemmas ["maybe", "we", "stop", "get", "b", "rumor", "and", "pic", "retweete", "thousands", "of", "time", "by", "people", "too", "ready", "to", "listen", "to", "anything"]
(c6-8 / possible-01
      :ARG1 (c6-11 / stop-01
                   :ARG0 (c6-0 / we)
                   :ARG1 (c6-10 / get-04
                                :ARG0 c6-0
                                :ARG1 (c6-14 / and
                                             :op1 (c6-9 / rumor-01
                                                        :mod (c6-4 / bullshit))
                                             :op2 (c6-13 / picture)
                                             :ARG1-of (c6-7 / retweet-01
                                                            :ARG0 (c6-3 / person
                                                                        :ARG1-of (c6-5 / ready-02
                                                                                       :ARG2 (c6-1 / listen-01
                                                                                                   :ARG0 c6-3
                                                                                                   :ARG1 (c6-6 / anything))
                                                                                       :mod (c6-12 / too)))
                                                            :frequency (c6-2 / multiple
                                                                             :op1 1000))))))

# ::snt TV? what's that?
# ::tokens ["TV", "?", "what", "'s", "that", "?"]
# ::lemmas ["tv", "?", "what", "be", "that", "?"]
(c7-1 / multi-sentence
      :snt1 (c7-0 / television)
      :snt2 (c7-2 / amr-unknown
                  :domain (c7-3 / that)))

# ::snt Simple, we all become sheeple unless we start surfing the darkweb and listening to Spider Jerusalem types.
# ::tokens ["Simple", ",", "we", "all", "become", "sheeple", "unless", "we", "start", "surfing", "the", "darkweb", "and", "listening", "to", "Spider", "Jerusalem", "types", "."]
# ::lemmas ["simple", ",", "we", "all", "become", "sheeple", "unless", "we", "start", "surf", "the", "darkweb", "and", "listen", "to", "Spider", "Jerusalem", "type", "."]
(c8-10 / simple-02
       :ARG1 (c8-3 / become-01
                   :ARG1 (c8-0 / we
                               :mod (c8-12 / all))
                   :ARG2 (c8-5 / sheeple)
                   :condition (c8-1 / start-01
                                    :ARG0 c8-0
                                    :ARG1 (c8-6 / and
                                                :op1 (c8-4 / surf-01
                                                           :ARG0 c8-0
                                                           :ARG1 (c8-9 / darkweb))
                                                :op2 (c8-2 / listen-01
                                                           :ARG0 c8-0
                                                           :ARG1 (c8-11 / type
                                                                        :mod (c8-8 / person
                                                                                   :name (c8-7 / name
                                                                                               :op1 "Spider"
                                                                                               :op2 "Jerusalem")))))
                                    :polarity -)))

# ::snt cops won't kill minorities ever again.
# ::tokens ["cops", "wo", "n't", "kill", "minorities", "ever", "again", "."]
# ::lemmas ["cop", "will", "not", "kill", "minority", "ever", "again", "."]
(c9-3 / kill-01
      :ARG0 (c9-2 / cop)
      :ARG1 (c9-0 / minority)
      :mod (c9-4 / again
                 :mod (c9-1 / ever))
      :polarity -)

# ::snt This is what really bugs me re: net neutrality; most of my news comes from the net. The TV isn't worth dirt.
# ::tokens ["This", "is", "what", "really", "bugs", "me", "re", ":", "net", "neutrality", ";", "most", "of", "my", "news", "comes", "from", "the", "net", ".", "The", "TV", "is", "n't", "worth", "dirt", "."]
# ::lemmas ["this", "be", "what", "really", "bug", "i", "re", ":", "net", "neutrality", ";", "most", "of", "my", "news", "come", "from", "the", "net", ".", "the", "tv", "be", "not", "worth", "dirt", "."]
(c10-1 / multi-sentence
       :snt1 (c10-2 / bug-01
                    :ARG0 (c10-13 / this)
                    :ARG1 (c10-3 / i)
                    :ARG2 (c10-4 / net)
                    :degree (c10-7 / really))
       :snt2 (c10-8 / come-01
                    :ARG1 (c10-5 / news
                                 :poss (c10-9 / i)
                                 :quant (c10-6 / most))
                    :ARG3 (c10-10 / net))
       :snt3 (c10-0 / worth-01
                    :ARG1 (c10-11 / television)
                    :ARG2 (c10-12 / dirt)
                    :polarity -))

# ::snt In my barrio [east LA/Echo Park] you generally DIDN'T think of calling the police, because you might become the target.
# ::tokens ["In", "my", "barrio", "[", "east", "LA", "/", "Echo", "Park", "]", "you", "generally", "DIDN'T", "think", "of", "calling", "the", "police", ",", "because", "you", "might", "become", "the", "target", "."]
# ::lemmas ["in", "my", "barrio", "[", "east", "LA", "/", "Echo", "Park", "]", "you", "generally", "didn't", "think", "of", "call", "the", "police", ",", "because", "you", "might", "become", "the", "target", "."]
(c11-16 / think-01
        :ARG0 (c11-0 / you)
        :ARG1 (c11-9 / call-02
                     :ARG0 c11-0
                     :ARG1 (c11-7 / police))
        :ARG1-of (c11-10 / general-02)
        :ARG1-of (c11-8 / cause-01
                        :ARG0 (c11-17 / possible-01
                                      :ARG1 (c11-1 / become-01
                                                   :ARG1 c11-0
                                                   :ARG2 (c11-12 / target))))
        :location (c11-11 / barrio
                          :poss (c11-3 / i)
                          :location (c11-13 / relative-position
                                            :op1 (c11-14 / city-district
                                                         :name (c11-5 / name
                                                                      :op1 "LA"))
                                            :direction (c11-2 / east)
                                            :direction (c11-15 / intersect-01
                                                               :ARG1 (c11-4 / road
                                                                            :name (c11-6 / name
                                                                                         :op1 "Echo"
                                                                                         :op2 "Park")))))
        :polarity -)

# ::snt ... and that's where the gangs &amp; affiliations walk in, to that hole; there is some stability there. &amp; it's cops' own fault.
# ::tokens ["...", "and", "that", "'s", "where", "the", "gangs", "&", "amp", ";", "affiliations", "walk", "in", ",", "to", "that", "hole", ";", "there", "is", "some", "stability", "there", ".", "&", "amp", ";", "it", "'s", "cops", "'", "own", "fault", "."]
# ::lemmas ["...", "and", "that", "be", "where", "the", "gangs", "&", "amp", ";", "affiliation", "walk", "in", ",", "to", "that", "hole", ";", "there", "be", "some", "stability", "there", ".", "&", "amp", ";", "it", "be", "cop", "'", "own", "fault", "."]
(c12-3 / multi-sentence
       :snt1 (c12-13 / and
                     :op2 (c12-1 / walk-01
                                 :ARG0 (c12-5 / and
                                              :op1 (c12-9 / gang)
                                              :op2 (c12-7 / affiliate-01))
                                 :ARG2 (c12-0 / hole
                                              :mod (c12-12 / that))))
       :snt2 (c12-11 / stability
                     :location (c12-10 / there)
                     :quant (c12-4 / some))
       :snt3 (c12-2 / fault-01
                    :ARG1 (c12-8 / cop)
                    :ARG2 (c12-6 / it)))

# ::snt it's like the old snap about corrupt police goes. "If you really want to get out of trouble, don't call the police."
# ::tokens ["it", "'s", "like", "the", "old", "snap", "about", "corrupt", "police", "goes", ".", "\"", "If", "you", "really", "want", "to", "get", "out", "of", "trouble", ",", "do", "n't", "call", "the", "police", ".", "\""]
# ::lemmas ["it", "be", "like", "the", "old", "snap", "about", "corrupt", "police", "go", ".", "\"", "if", "you", "really", "want", "to", "get", "out", "of", "trouble", ",", "do", "not", "call", "the", "police", ".", "\""]
(c13-7 / resemble-01
       :ARG1 (c13-4 / it)
       :ARG2 (c13-9 / go-23
                    :ARG0 (c13-12 / snap-04
                                  :ARG1 (c13-6 / police
                                               :ARG1-of (c13-8 / corrupt-01))
                                  :mod (c13-3 / old))
                    :ARG1 (c13-10 / call-02
                                  :ARG0 (c13-0 / you)
                                  :ARG1 c13-6
                                  :condition (c13-1 / want-01
                                                    :ARG0 c13-0
                                                    :ARG1 (c13-11 / get-03
                                                                  :ARG1 c13-0
                                                                  :ARG2 (c13-2 / out-06
                                                                               :ARG1 c13-0
                                                                               :ARG2 (c13-13 / in-trouble-02
                                                                                             :ARG1 c13-0))
                                                                  :ARG1-of (c13-5 / real-04)))
                                  :mode imperative
                                  :polarity -)))

# ::snt we fight at dawn?
# ::tokens ["we", "fight", "at", "dawn", "?"]
# ::lemmas ["we", "fight", "at", "dawn", "?"]
(c14-2 / fight-01
       :polarity (c14-4 / amr-unknown)
       :ARG0 (c14-0 / we)
       :time (c14-3 / date-entity
                    :dayperiod (c14-1 / dawn)))

# ::snt we all lose real news and live off of apps and netflix
# ::tokens ["we", "all", "lose", "real", "news", "and", "live", "off", "of", "apps", "and", "netflix"]
# ::lemmas ["we", "all", "lose", "real", "news", "and", "live", "off", "of", "app", "and", "netflix"]
(c15-10 / and
        :op1 (c15-1 / lose-02
                    :ARG0 (c15-0 / we
                                 :mod (c15-2 / all))
                    :ARG1 (c15-3 / news
                                 :ARG1-of (c15-6 / real-04)))
        :op2 (c15-8 / live-01
                    :ARG0 c15-0
                    :source (c15-4 / and
                                   :op1 (c15-9 / app)
                                   :op2 (c15-7 / company
                                               :name (c15-5 / name
                                                            :op1 "Netflix")))))

# ::snt It's already ended! We've got one rule left: Transparency about throttling, and the big carriers are allegedly violating it
# ::tokens ["It", "'s", "already", "ended", "!", "We", "'ve", "got", "one", "rule", "left", ":", "Transparency", "about", "throttling", ",", "and", "the", "big", "carriers", "are", "allegedly", "violating", "it"]
# ::lemmas ["it", "be", "already", "end", "!", "we", "'ve", "get", "one", "rule", "leave", ":", "transparency", "about", "throttling", ",", "and", "the", "big", "carrier", "be", "allegedly", "violate", "it"]
(c16-2 / multi-sentence
       :snt1 (c16-4 / end-01
                    :ARG1 (c16-6 / it)
                    :time (c16-13 / already))
       :snt2 (c16-5 / and
                    :op1 (c16-0 / have-03
                                :ARG0 (c16-1 / we)
                                :ARG1 (c16-9 / rule-01
                                             :ARG1 (c16-12 / transparent
                                                           :topic (c16-11 / throttle-01))
                                             :quant 1))
                    :op2 (c16-7 / violate-01
                                :ARG0 (c16-10 / carrier
                                              :mod (c16-3 / big))
                                :ARG1 c16-12
                                :ARG1-of (c16-8 / allege-01))))

# ::snt When your solution is a problem and the problem becomes the solution, you done goofed up. Not sure if or
# ::tokens ["When", "your", "solution", "is", "a", "problem", "and", "the", "problem", "becomes", "the", "solution", ",", "you", "done", "goofed", "up", ".", "Not", "sure", "if", "or"]
# ::lemmas ["when", "your", "solution", "be", "a", "problem", "and", "the", "problem", "become", "the", "solution", ",", "you", "done", "goof", "up", ".", "not", "sure", "if", "or"]
(c17-2 / multi-sentence
       :snt1 (c17-8 / goof-up-01
                    :ARG0 (c17-0 / you)
                    :time (c17-11 / and
                                  :op1 (c17-7 / problem
                                              :domain (c17-9 / solve-01
                                                             :ARG0 c17-0))
                                  :op2 (c17-3 / become-01
                                              :ARG1 (c17-10 / problem)
                                              :ARG2 (c17-5 / solve-01))))
       :snt2 (c17-1 / sure-02
                    :ARG0 (c17-6 / i)
                    :ARG1 (c17-4 / or)
                    :polarity -))
