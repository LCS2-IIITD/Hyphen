# ::snt slick comeback Joe Dirt
# ::tokens ["slick", "comeback", "Joe", "Dirt"]
# ::lemmas ["slick", "comeback", "Joe", "Dirt"]
(c1-2 / comeback-01
      :ARG0 (c1-1 / person
                  :name (c1-0 / name
                              :op1 "Joe"
                              :op2 "Dirt"))
      :ARG1-of (c1-3 / sick-05))

# ::snt gay
# ::tokens ["gay"]
# ::lemmas ["gay"]
(c2-0 / person
      :ARG1-of (c2-1 / gay-01))

# ::snt nice dirt stash you fucking grocery stick. Someone clearly lacks respect
# ::tokens ["nice", "dirt", "stash", "you", "fucking", "grocery", "stick", ".", "Someone", "clearly", "lacks", "respect"]
# ::lemmas ["nice", "dirt", "stash", "you", "fucking", "grocery", "stick", ".", "someone", "clearly", "lack", "respect"]
(c3-2 / multi-sentence
      :snt1 (c3-11 / stash-01
                   :ARG0 (c3-0 / you
                               :mod (c3-5 / stick
                                          :mod (c3-9 / grocery)
                                          :mod (c3-1 / fucking)))
                   :ARG1 (c3-7 / dirt)
                   :ARG1-of (c3-6 / nice-01))
      :snt2 (c3-3 / lack-01
                  :ARG0 (c3-4 / someone)
                  :ARG1 (c3-8 / respect-01
                              :ARG1 c3-4)
                  :ARG1-of (c3-10 / clear-06)))

# ::snt Go fuck yourself, fucking prick.
# ::tokens ["Go", "fuck", "yourself", ",", "fucking", "prick", "."]
# ::lemmas ["go", "fuck", "yourself", ",", "fucking", "prick", "."]
(c4-5 / say-01
      :ARG0 (c4-1 / i)
      :ARG1 (c4-4 / go-05
                  :ARG0 (c4-3 / prick
                              :mod (c4-0 / fucking
                                         :mode expressive))
                  :ARG1 (c4-2 / fuck-01
                              :ARG0 c4-3
                              :ARG1 c4-3)
                  :mode imperative)
      :ARG2 c4-3)

# ::snt I second that go suck a big fat elephant dick
# ::tokens ["I", "second", "that", "go", "suck", "a", "big", "fat", "elephant", "dick"]
# ::lemmas ["i", "second", "that", "go", "suck", "a", "big", "fat", "elephant", "dick"]
(c5-8 / second-01
      :ARG0 (c5-5 / i)
      :ARG1 (c5-7 / go-05
                  :ARG0 (c5-0 / you)
                  :ARG1 (c5-3 / suck-01
                              :ARG0 c5-0
                              :ARG1 (c5-6 / dick
                                          :part-of (c5-4 / elephant)
                                          :mod (c5-2 / big)
                                          :ARG1-of (c5-1 / fat-03)))
                  :mode imperative))

# ::snt agree...go fuck yourself twice
# ::tokens ["agree", "...", "go", "fuck", "yourself", "twice"]
# ::lemmas ["agree", "...", "go", "fuck", "yourself", "twice"]
(c6-5 / and
      :op1 (c6-2 / agree-01
                 :ARG0 (c6-3 / i))
      :op2 (c6-4 / go-05
                 :ARG0 (c6-0 / you)
                 :ARG1 (c6-1 / fuck-01
                             :ARG0 c6-0
                             :ARG1 c6-0
                             :frequency 2)
                 :mode imperative))

# ::snt you need to learn some respect.
# ::tokens ["you", "need", "to", "learn", "some", "respect", "."]
# ::lemmas ["you", "need", "to", "learn", "some", "respect", "."]
(c7-2 / obligate-01
      :ARG1 (c7-0 / you)
      :ARG2 (c7-1 / learn-01
                  :ARG0 c7-0
                  :ARG1 (c7-3 / respect-01
                              :quant (c7-4 / some))))

# ::snt have some respect you fucking prick
# ::tokens ["have", "some", "respect", "you", "fucking", "prick"]
# ::lemmas ["have", "some", "respect", "you", "fucking", "prick"]
(c8-6 / say-01
      :ARG0 (c8-3 / i)
      :ARG1 (c8-5 / respect-01
                  :ARG0 c8-3
                  :ARG1 (c8-0 / you
                              :mod (c8-4 / prick
                                         :ARG0-of (c8-1 / fuck-01)))
                  :quant (c8-2 / some))
      :ARG2 c8-0)

# ::snt can I get a go fuck yourself for this douche?
# ::tokens ["can", "I", "get", "a", "go", "fuck", "yourself", "for", "this", "douche", "?"]
# ::lemmas ["can", "i", "get", "a", "go", "fuck", "yourself", "for", "this", "douche", "?"]
(c9-3 / possible-01
      :polarity (c9-8 / amr-unknown)
      :ARG1 (c9-6 / get-22
                  :ARG0 (c9-2 / i)
                  :ARG1 (c9-1 / fuck-01
                              :ARG0 c9-2
                              :ARG1 (c9-0 / you)
                              :ARG1-of (c9-5 / cause-01
                                             :ARG0 (c9-4 / douche
                                                         :mod (c9-7 / this))))))

# ::snt message me you fucking fag
# ::tokens ["message", "me", "you", "fucking", "fag"]
# ::lemmas ["message", "i", "you", "fucking", "fag"]
(c10-2 / message-01
       :ARG0 (c10-0 / you
                    :mod (c10-1 / fucking
                                :mode expressive))
       :ARG2 (c10-3 / i)
       :mode imperative)

# ::snt . go fuck yourself
# ::tokens [".", "go", "fuck", "yourself"]
# ::lemmas [".", "go", "fuck", "yourself"]
(c11-2 / go-05
       :ARG0 (c11-0 / you)
       :ARG1 (c11-1 / fuck-01
                    :ARG0 c11-0
                    :ARG1 c11-0)
       :mode imperative)

# ::snt : nice dirt stash you fucking grocery stick. Someone clearly lacks respectian slide out my mentions
# ::tokens [":", "nice", "dirt", "stash", "you", "fucking", "grocery", "stick", ".", "Someone", "clearly", "lacks", "respectian", "slide", "out", "my", "mentions"]
# ::lemmas [":", "nice", "dirt", "stash", "you", "fucking", "grocery", "stick", ".", "someone", "clearly", "lack", "respectian", "slide", "out", "my", "mention"]
(c12-3 / multi-sentence
       :snt1 (c12-15 / say-01
                     :ARG1 (c12-7 / stash-01
                                  :ARG0 (c12-1 / you
                                               :mod (c12-2 / stick
                                                           :mod (c12-13 / grocery)
                                                           :mod (c12-4 / fucking
                                                                       :mode expressive)))
                                  :ARG1 (c12-11 / dirt)
                                  :ARG1-of (c12-9 / nice-01))
                     :ARG2 c12-1)
       :snt2 (c12-5 / lack-01
                    :ARG0 (c12-6 / someone)
                    :ARG1 (c12-0 / slide-01
                                 :ARG0 (c12-8 / i)
                                 :ARG1 (c12-10 / mention-01
                                               :ARG0 c12-8)
                                 :mod (c12-12 / respectian))
                    :ARG1-of (c12-14 / clear-06)))

# ::snt stfu you look like a tic tac with hair
# ::tokens ["stfu", "you", "look", "like", "a", "tic", "tac", "with", "hair"]
# ::lemmas ["stfu", "you", "look", "like", "a", "tic", "tac", "with", "hair"]
(c13-2 / look-02
       :ARG0 (c13-1 / you)
       :ARG1 (c13-5 / tic-
                    :ARG0-of (c13-0 / have-03
                                    :ARG1 (c13-6 / hair)))
       :mod (c13-4 / thing
                   :name (c13-3 / name
                                :op1 "stfu")
                   :mode expressive))

# ::snt If the people you care about got shot I don't think that this would be your answer fuck face.
# ::tokens ["If", "the", "people", "you", "care", "about", "got", "shot", "I", "do", "n't", "think", "that", "this", "would", "be", "your", "answer", "fuck", "face", "."]
# ::lemmas ["if", "the", "people", "you", "care", "about", "got", "shoot", "i", "do", "not", "think", "that", "this", "would", "be", "your", "answer", "fuck", "face", "."]
(c14-6 / think-01
       :ARG0 (c14-2 / i)
       :ARG1 (c14-7 / answer-01
                    :ARG0 (c14-0 / you)
                    :ARG2 (c14-5 / shoot-02
                                 :ARG1 (c14-3 / person
                                              :ARG1-of (c14-4 / care-01
                                                              :ARG0 c14-0)))
                    :mod (c14-1 / fuck
                                :mode expressive))
       :condition c14-5
       :polarity -)

# ::snt faggot
# ::tokens ["faggot"]
# ::lemmas ["faggot"]
(c15-1 / person
       :name (c15-0 / name
                    :op1 "Faggot"))

# ::snt you are an idiot! Grow up and learn some respect!
# ::tokens ["you", "are", "an", "idiot", "!", "Grow", "up", "and", "learn", "some", "respect", "!"]
# ::lemmas ["you", "be", "an", "idiot", "!", "grow", "up", "and", "learn", "some", "respect", "!"]
(c16-2 / multi-sentence
       :snt1 (c16-3 / idiot
                    :domain (c16-0 / you))
       :snt2 (c16-8 / and
                    :op1 (c16-5 / grow-up-04
                                :ARG1 (c16-6 / you)
                                :mode imperative)
                    :op2 (c16-1 / learn-01
                                :ARG0 c16-6
                                :ARG1 (c16-4 / respect-01
                                             :ARG1 c16-6
                                             :quant (c16-7 / some))
                                :mode imperative)))

# ::snt A soldier gets shot dead and you use a homophobic slur to insult it, complete lack of respect.
# ::tokens ["A", "soldier", "gets", "shot", "dead", "and", "you", "use", "a", "homophobic", "slur", "to", "insult", "it", ",", "complete", "lack", "of", "respect", "."]
# ::lemmas ["a", "soldier", "gets", "shoot", "dead", "and", "you", "use", "a", "homophobic", "slur", "to", "insult", "it", ",", "complete", "lack", "of", "respect", "."]
(c17-13 / and
        :op1 (c17-12 / shoot-02
                     :ARG2 (c17-5 / soldier)
                     :ARG0-of (c17-8 / cause-01
                                     :ARG1 (c17-7 / die-01
                                                  :ARG1 c17-5)))
        :op2 (c17-4 / use-01
                    :ARG0 (c17-1 / you)
                    :ARG1 (c17-2 / slur
                                 :mod (c17-0 / homophobia))
                    :ARG2 (c17-6 / insult-01
                                 :ARG0 c17-1
                                 :ARG1 c17-5)
                    :ARG0-of (c17-9 / cause-01
                                    :ARG1 (c17-3 / lack-01
                                                 :ARG1 (c17-10 / respect-01)
                                                 :ARG1-of (c17-11 / complete-02)))))

# ::snt smh
# ::tokens ["smh"]
# ::lemmas ["smh"]
(c18-0 / smh
       :mode expressive)
