# ::snt this all about to change bitch we coming for ur muslim ass. Get your berka out and your bags packed bitch
# ::tokens ["this", "all", "about", "to", "change", "bitch", "we", "coming", "for", "ur", "muslim", "ass", ".", "Get", "your", "berka", "out", "and", "your", "bags", "packed", "bitch"]
# ::lemmas ["this", "all", "about", "to", "change", "bitch", "we", "come", "for", "ur", "muslim", "ass", ".", "get", "your", "berka", "out", "and", "your", "bag", "packed", "bitch"]
(c1-0 / multi-sentence
      :snt1 (c1-15 / change-01
                   :ARG0 (c1-18 / this
                                :mod (c1-3 / all))
                   :ARG1 (c1-4 / bitch)
                   :ARG1-of (c1-2 / cause-01
                                  :ARG0 (c1-12 / come-01
                                               :ARG1 (c1-9 / we)
                                               :ARG4 (c1-10 / ass
                                                            :mod (c1-7 / religious-group
                                                                       :name (c1-5 / name
                                                                                   :op1 "Muslim"))
                                                            :poss (c1-13 / you)))))
      :snt2 (c1-6 / and
                  :op1 (c1-8 / get-05
                             :ARG0 (c1-16 / you)
                             :ARG1 (c1-11 / berka
                                          :poss c1-16)
                             :ARG2 (c1-14 / out)
                             :mode imperative)
                  :op2 (c1-1 / pack-01
                             :ARG0 c1-16
                             :ARG1 (c1-17 / bag
                                          :poss c1-16)
                             :mode imperative)))

# ::snt bitch plz i will say nth cuz all what u r saying isnt right sgfys
# ::tokens ["bitch", "plz", "i", "will", "say", "nth", "cuz", "all", "what", "u", "r", "saying", "is", "nt", "right", "sgfys"]
# ::lemmas ["bitch", "plz", "i", "will", "say", "nth", "cuz", "all", "what", "u", "r", "saying", "be", "not", "right", "sgfys"]
(c2-8 / say-01
      :ARG0 (c2-3 / i)
      :ARG1 (c2-7 / cause-01
                  :ARG0 (c2-6 / right-06
                              :ARG1 (c2-9 / thing
                                          :mod (c2-10 / all)
                                          :ARG1-of (c2-1 / say-01
                                                         :ARG0 (c2-5 / person
                                                                     :name (c2-4 / name
                                                                                 :op1 "bitch"))))
                              :polarity -)
                  :ARG1 (c2-0 / say-01
                              :ARG0 c2-3
                              :ARG1 (c2-2 / amr-unknown)))
      :ARG2 c2-5)

# ::snt so u can jst send and send and send and say and say
# ::tokens ["so", "u", "can", "jst", "send", "and", "send", "and", "send", "and", "say", "and", "say"]
# ::lemmas ["so", "u", "can", "jst", "send", "and", "send", "and", "send", "and", "say", "and", "say"]
(c3-3 / possible-01
      :ARG1 (c3-5 / and
                  :op1 (c3-4 / send-01
                             :ARG0 (c3-0 / you)
                             :op2-of c3-5)
                  :ARG0 c3-0)
      :op3 (c3-2 / say-01
                 :ARG0 c3-0)
      :mod (c3-1 / so))

# ::snt And you're more outraged by that than Boko Haram?
# ::tokens ["And", "you", "'re", "more", "outraged", "by", "that", "than", "Boko", "Haram", "?"]
# ::lemmas ["and", "you", "be", "more", "outraged", "by", "that", "than", "Boko", "Haram", "?"]
(c4-8 / and
      :op2 (c4-0 / have-degree-91
                 :ARG1 (c4-1 / you)
                 :ARG2 (c4-4 / outrage-01
                             :ARG0 (c4-7 / that)
                             :ARG1 c4-1)
                 :ARG3 (c4-3 / more)
                 :ARG4 (c4-2 / organization
                             :name (c4-6 / name
                                         :op1 "Baijan"
                                         :op2 "Haramas"))
                 :polarity (c4-5 / amr-unknown)))

# ::snt prove it u dummy FACTS FACTS FACTS love them
# ::tokens ["prove", "it", "u", "dummy", "FACTS", "FACTS", "FACTS", "love", "them"]
# ::lemmas ["prove", "it", "u", "dummy", "fact", "fact", "fact", "love", "they"]
(c5-3 / prove-01
      :ARG0 (c5-0 / you)
      :ARG1 (c5-1 / love-01
                  :ARG0 (c5-2 / fact
                              :mod (c5-4 / dummy)
                              :ARG1-of c5-1))
      :mode imperative)

# ::snt while she defends ISLAM. This muslim WOMEN
# ::tokens ["while", "she", "defends", "ISLAM", ".", "This", "muslim", "WOMEN"]
# ::lemmas ["while", "she", "defend", "ISLAM", ".", "this", "muslim", "WOMEN"]
(c6-1 / multi-sentence
      :snt1 (c6-7 / contrast-01
                  :ARG2 (c6-5 / defend-01
                              :ARG0 (c6-8 / she)
                              :ARG1 (c6-6 / religious-group
                                          :name (c6-3 / name
                                                      :op1 "Islam"))))
      :snt2 (c6-0 / woman
                  :mod (c6-2 / religious-group
                             :name (c6-4 / name
                                         :op1 "Islam"))
                  :mod (c6-9 / this)))

# ::snt all muslims should be dead.
# ::tokens ["all", "muslims", "should", "be", "dead", "."]
# ::lemmas ["all", "muslims", "should", "be", "dead", "."]
(c7-4 / recommend-01
      :ARG1 (c7-3 / die-01
                  :ARG1 (c7-2 / person
                              :mod (c7-0 / religious-group
                                         :name (c7-1 / name
                                                     :op1 "Islam"))
                              :mod (c7-5 / all))))

# ::snt why u not wearing this bitch
# ::tokens ["why", "u", "not", "wearing", "this", "bitch"]
# ::lemmas ["why", "u", "not", "wear", "this", "bitch"]
(c8-3 / cause-01
      :ARG0 (c8-5 / amr-unknown)
      :ARG1 (c8-0 / wear-01
                  :ARG0 (c8-1 / you)
                  :ARG1 (c8-2 / bitch
                              :mod (c8-4 / this))
                  :polarity -))

# ::snt hhh she hasn't figured out yet
# ::tokens ["hhh", "she", "has", "n't", "figured", "out", "yet"]
# ::lemmas ["hhh", "she", "have", "not", "figure", "out", "yet"]
(c9-3 / figure-out-05
      :ARG0 (c9-0 / she)
      :time (c9-1 / yet)
      :mod (c9-2 / hhh
                 :mode expressive)
      :polarity -)

# ::snt the whacky Taliban slaughtered kids othr week.But from Naila all we have is hush until someone draws a cartoon
# ::tokens ["the", "whacky", "Taliban", "slaughtered", "kids", "othr", "week", ".", "But", "from", "Naila", "all", "we", "have", "is", "hush", "until", "someone", "draws", "a", "cartoon"]
# ::lemmas ["the", "whacky", "Taliban", "slaughter", "kid", "othr", "week", ".", "but", "from", "Naila", "all", "we", "have", "be", "hush", "until", "someone", "draw", "a", "cartoon"]
(c11-10 / contrast-01
        :ARG1 (c11-13 / slaughter-01
                      :ARG0 (c11-9 / criminal-organization
                                   :name (c11-6 / name
                                                :op1 "Taliban")
                                   :mod (c11-1 / whacky))
                      :ARG1 (c11-16 / kid)
                      :time (c11-5 / week
                                   :mod (c11-14 / this)))
        :ARG2 (c11-0 / have-03
                     :ARG0 (c11-3 / we)
                     :ARG1 (c11-17 / hush-01
                                   :time (c11-2 / until
                                                :op1 (c11-11 / draw-01
                                                             :ARG0 (c11-4 / someone)
                                                             :ARG1 (c11-12 / cartoon)))
                                   :mod (c11-15 / all))
                     :source (c11-8 / person
                                    :name (c11-7 / name
                                                 :op1 "Naila"))))

# ::snt u dummy.
# ::tokens ["u", "dummy", "."]
# ::lemmas ["u", "dummy", "."]
(c12-1 / dummy
       :domain (c12-0 / you))

# ::snt but every terrorist today is a Muslim. Are you denying that.
# ::tokens ["but", "every", "terrorist", "today", "is", "a", "Muslim", ".", "Are", "you", "denying", "that", "."]
# ::lemmas ["but", "every", "terrorist", "today", "be", "a", "Muslim", ".", "be", "you", "deny", "that", "."]
(c13-1 / multi-sentence
       :snt1 (c13-5 / contrast-01
                    :ARG2 (c13-4 / religious-group
                                 :name (c13-3 / name
                                              :op1 "Muslim")
                                 :domain (c13-8 / terrorist
                                                :mod (c13-2 / every)
                                                :time (c13-7 / today))))
       :snt2 (c13-6 / deny-01
                    :ARG0 (c13-0 / you)
                    :ARG1 c13-4
                    :polarity (c13-9 / amr-unknown)))

# ::snt stupid uneducated raped cunt. She look happy
# ::tokens ["stupid", "uneducated", "raped", "cunt", ".", "She", "look", "happy"]
# ::lemmas ["stupid", "uneducated", "raped", "cunt", ".", "she", "look", "happy"]
(c14-2 / multi-sentence
       :snt1 (c14-6 / cunt
                    :ARG1-of (c14-3 / educate-01
                                    :polarity -)
                    :ARG1-of (c14-5 / rape-01)
                    :mod (c14-7 / stupid))
       :snt2 (c14-1 / look-02
                    :ARG0 (c14-4 / she)
                    :ARG1 (c14-0 / happy-01
                                 :ARG1 c14-4)))

# ::snt lmao who's the terrorist now? Filth.
# ::tokens ["lmao", "who", "'s", "the", "terrorist", "now", "?", "Filth", "."]
# ::lemmas ["lmao", "who", "be", "the", "terrorist", "now", "?", "Filth", "."]
(c15-1 / multi-sentence
       :snt1 (c15-0 / laugh-01
                    :ARG0 (c15-3 / i)
                    :manner (c15-5 / loud)
                    :mode expressive)
       :snt2 (c15-2 / filth)
       :snt3 (c15-6 / terrorist
                    :domain (c15-7 / amr-unknown)
                    :time (c15-4 / now)))

# ::snt Haha , He forgot the bomb on muhammad u prick. So plz dont talk about charlie.. ppl died , its sad.thats it
# ::tokens ["Haha", ",", "He", "forgot", "the", "bomb", "on", "muhammad", "u", "prick", ".", "So", "plz", "do", "nt", "talk", "about", "charlie", "..", "ppl", "died", ",", "its", "sad.thats", "it"]
# ::lemmas ["Haha", ",", "he", "forget", "the", "bomb", "on", "muhammad", "u", "prick", ".", "so", "plz", "do", "not", "talk", "about", "charlie", "..", "ppl", "die", ",", "its", "sad.thats", "it"]
(c16-3 / multi-sentence
       :snt1 (c16-2 / forget-01
                    :ARG0 (c16-0 / he)
                    :ARG1 (c16-5 / bomb-01
                                 :ARG1 (c16-9 / person
                                              :name (c16-7 / name
                                                           :op1 "Muhammad")))
                    :ARG2 (c16-1 / you
                                 :mod (c16-15 / prick))
                    :mod (c16-16 / haha
                                 :mode expressive))
       :snt2 (c16-11 / cause-01
                     :ARG1 (c16-14 / talk-01
                                   :ARG0 c16-1
                                   :polarity -
                                   :mode imperative)
                     :ARG1 (c16-4 / person
                                  :name (c16-8 / name
                                               :op1 "Charlie")))
       :snt3 (c16-10 / die-01
                     :ARG1 (c16-12 / they))
       :snt4 (c16-13 / sad-02
                     :ARG1 (c16-6 / it)))

# ::snt where is your berka?
# ::tokens ["where", "is", "your", "berka", "?"]
# ::lemmas ["where", "be", "your", "berka", "?"]
(c17-2 / berka
       :location (c17-1 / amr-unknown)
       :poss (c17-0 / you))

# ::snt By laughing. Christianity is made fun of every single day all over the world. doesn't effect me one bit
# ::tokens ["By", "laughing", ".", "Christianity", "is", "made", "fun", "of", "every", "single", "day", "all", "over", "the", "world", ".", "does", "n't", "effect", "me", "one", "bit"]
# ::lemmas ["by", "laugh", ".", "Christianity", "be", "make", "fun", "of", "every", "single", "you", "all", "over", "the", "world", ".", "do", "not", "effect", "i", "one", "bit"]
(c18-2 / multi-sentence
       :snt1 (c18-10 / cause-01
                     :ARG0 (c18-1 / laugh-01))
       :snt2 (c18-8 / make-fun-04
                    :ARG1 (c18-9 / religious-group
                                 :name (c18-7 / name
                                              :op1 "Christianity"))
                    :time (c18-11 / day
                                  :ARG1-of (c18-13 / single-02)
                                  :mod (c18-4 / every))
                    :location (c18-14 / all-over
                                      :op1 (c18-0 / world)))
       :snt3 (c18-5 / affect-01
                    :ARG0 (c18-6 / it)
                    :ARG1 (c18-12 / i)
                    :degree (c18-3 / bit
                                   :quant 1)
                    :polarity -))

# ::snt But they won't be right
# ::tokens ["But", "they", "wo", "n't", "be", "right"]
# ::lemmas ["but", "they", "will", "not", "be", "right"]
(c20-2 / contrast-01
       :ARG2 (c20-1 / right-06
                    :ARG1 (c20-0 / they)
                    :polarity -))

# ::snt not enough. U all deserve to die cunt
# ::tokens ["not", "enough", ".", "U", "all", "deserve", "to", "die", "cunt"]
# ::lemmas ["not", "enough", ".", "u", "all", "deserve", "to", "die", "cunt"]
(c21-3 / multi-sentence
       :snt1 (c21-0 / have-quant-91
                    :ARG3 (c21-4 / enough)
                    :polarity -)
       :snt2 (c21-5 / deserve-01
                    :ARG0 (c21-1 / you
                                 :mod (c21-7 / all))
                    :ARG1 (c21-2 / die-01
                                 :ARG1 c21-1))
       :snt3 (c21-6 / cunt
                    :mode expressive))

# ::snt it.
# ::tokens ["it", "."]
# ::lemmas ["it", "."]
(c22-0 / it)

# ::snt How's your family?
# ::tokens ["How", "'s", "your", "family", "?"]
# ::lemmas ["how", "be", "your", "family", "?"]
(c23-0 / have-rel-role-91
       :ARG0 (c23-3 / amr-unknown)
       :ARG1 (c23-1 / you)
       :ARG2 (c23-2 / family))

# ::snt islam has nothing to do with terrorism
# ::tokens ["islam", "has", "nothing", "to", "do", "with", "terrorism"]
# ::lemmas ["islam", "have", "nothing", "to", "do", "with", "terrorism"]
(c24-0 / have-to-do-with-04
       :ARG0 (c24-3 / religious-group
                    :name (c24-1 / name
                                 :op1 "Islam"))
       :ARG1 (c24-4 / terrorism)
       :ARG2 (c24-2 / nothing))

# ::snt why
# ::tokens ["why"]
# ::lemmas ["why"]
(c25-0 / cause-01
       :ARG0 (c25-1 / amr-unknown))

# ::snt Needs a lethal injection.
# ::tokens ["Needs", "a", "lethal", "injection", "."]
# ::lemmas ["need", "a", "lethal", "injection", "."]
(c28-0 / need-01
       :ARG1 (c28-2 / inject-01
                    :mod (c28-1 / lethal)))

# ::snt true
# ::tokens ["true"]
# ::lemmas ["true"]
(c29-0 / true-01)

# ::snt sure it isn't. Brainwashed little dummy
# ::tokens ["sure", "it", "is", "n't", ".", "Brainwashed", "little", "dummy"]
# ::lemmas ["sure", "it", "be", "not", ".", "brainwash", "little", "dummy"]
(c31-2 / multi-sentence
       :snt1 (c31-6 / sure-02
                    :ARG0 (c31-4 / i)
                    :ARG1 (c31-0 / have-polarity-91
                                 :ARG2 -))
       :snt2 (c31-5 / dummy
                    :ARG1-of (c31-3 / brainwash-01)
                    :mod (c31-1 / little)))

# ::snt its slang for psychopath.
# ::tokens ["its", "slang", "for", "psychopath", "."]
# ::lemmas ["its", "slang", "for", "psychopath", "."]
(c33-0 / slang
       :domain (c33-2 / it)
       :topic (c33-1 / psychopath))

# ::snt Israel and ISIS two
# ::tokens ["Israel", "and", "ISIS", "two"]
# ::lemmas ["Israel", "and", "ISIS", "two"]
(c35-4 / and
       :op1 (c35-3 / country
                   :name (c35-0 / name
                                :op1 "Israel"))
       :op2 (c35-2 / country
                   :name (c35-1 / name
                                :op1 "ISIS"))
       :quant 2)

# ::snt Equine cocoa and ball syndrome is no laughing matter!
# ::tokens ["Equine", "cocoa", "and", "ball", "syndrome", "is", "no", "laughing", "matter", "!"]
# ::lemmas ["equine", "cocoa", "and", "ball", "syndrome", "be", "no", "laugh", "matter", "!"]
(c36-2 / matter
       :topic (c36-1 / laugh-01)
       :domain (c36-6 / and
                      :op1 (c36-5 / disease
                                  :name (c36-3 / name
                                               :op1 "Equine"
                                               :op2 "Cocoa"))
                      :op2 (c36-0 / disease
                                  :name (c36-4 / name
                                               :op1 "Ball"
                                               :op2 "Syndrome")))
       :polarity -)

# ::snt I didn't delete any post you nutter
# ::tokens ["I", "did", "n't", "delete", "any", "post", "you", "nutter"]
# ::lemmas ["i", "do", "not", "delete", "any", "post", "you", "nutter"]
(c38-5 / say-01
       :ARG0 (c38-1 / i)
       :ARG1 (c38-4 / delete-01
                    :ARG0 c38-1
                    :ARG1 (c38-3 / post-01
                                 :mod (c38-6 / any))
                    :polarity -)
       :ARG2 (c38-0 / you
                    :mod (c38-2 / nutter)))

# ::snt go and fuck myself for posting out the facts you're a liar and uneducated. Wow I am flattered you phyco
# ::tokens ["go", "and", "fuck", "myself", "for", "posting", "out", "the", "facts", "you", "'re", "a", "liar", "and", "uneducated", ".", "Wow", "I", "am", "flattered", "you", "phyco"]
# ::lemmas ["go", "and", "fuck", "myself", "for", "post", "out", "the", "fact", "you", "be", "a", "liar", "and", "uneducated", ".", "wow", "i", "be", "flatter", "you", "phyco"]
(c39-3 / multi-sentence
       :snt1 (c39-14 / and
                     :op1 (c39-11 / go-05
                                  :ARG0 (c39-0 / you)
                                  :mode imperative)
                     :op2 (c39-2 / fuck-01
                                 :ARG0 c39-0
                                 :ARG1 c39-0
                                 :ARG1-of (c39-10 / cause-01
                                                  :ARG0 (c39-9 / post-01
                                                               :ARG0 c39-0
                                                               :ARG1 (c39-8 / fact
                                                                            :ARG0-of (c39-4 / lie-08)
                                                                            :ARG1-of (c39-6 / educate-01
                                                                                            :polarity -))))
                                 :mode imperative))
       :snt2 (c39-5 / flat-04
                    :ARG1 (c39-7 / i)
                    :ARG2 (c39-12 / you
                                  :mod (c39-13 / phyco))
                    :mod (c39-1 / wow
                                :mode expressive)))

# ::snt i guess u got nth else to answer expt insulting ?
# ::tokens ["i", "guess", "u", "got", "nth", "else", "to", "answer", "expt", "insulting", "?"]
# ::lemmas ["i", "guess", "u", "get", "nth", "else", "to", "answer", "expt", "insult", "?"]
(c40-6 / guess-01
       :ARG0 (c40-4 / i)
       :ARG1 (c40-5 / get-02
                    :ARG0 (c40-0 / you)
                    :ARG1 (c40-8 / answer-01
                                 :ARG0 c40-0
                                 :ARG2 (c40-7 / insult-01
                                              :ARG0 c40-0
                                              :mod (c40-2 / expt)))
                    :mod (c40-1 / else)
                    :polarity -)
       :polarity (c40-3 / amr-unknown))

# ::snt and Allah U Akbar
# ::tokens ["and", "Allah", "U", "Akbar"]
# ::lemmas ["and", "Allah", "U", "Akbar"]
(c41-2 / and
       :op2 (c41-1 / person
                   :name (c41-0 / name
                                :op1 "Allah"
                                :op2 "U"
                                :op3 "Akbar")))

# ::snt Amy will you nurse me back to health? (-_-)(-_- )(-_-)(-_-)
# ::tokens ["Amy", "will", "you", "nurse", "me", "back", "to", "health", "?", "(", "-_-)(-_-", ")", "(", "-_-)(-_-", ")"]
# ::lemmas ["Amy", "will", "you", "nurse", "i", "back", "to", "health", "?", "(", "-_-)(-_-", ")", "(", "-_-)(-_-", ")"]
(c42-3 / nurse-01
       :ARG0 (c42-5 / person
                    :name (c42-4 / name
                                 :op1 "Amy"))
       :ARG1 (c42-2 / i)
       :ARG3 (c42-0 / health)
       :mod (c42-1 / back)
       :polarity (c42-6 / amr-unknown))

# ::snt R these muslim sold by weights or hight?
# ::tokens ["R", "these", "muslim", "sold", "by", "weights", "or", "hight", "?"]
# ::lemmas ["r", "these", "muslim", "sell", "by", "weight", "or", "hight", "?"]
(c44-6 / request-confirmation-91
       :ARG1 (c44-7 / sell-01
                    :ARG1 (c44-5 / person
                                 :mod (c44-3 / religious-group
                                             :name (c44-4 / name
                                                          :op1 "Islam"))
                                 :mod (c44-8 / this))
                    :manner (c44-2 / or
                                   :op1 (c44-1 / weight)
                                   :op2 (c44-0 / hight))))

# ::snt our religion is against killing officially we'r not all terrorist and the one who r killing r nt muslms
# ::tokens ["our", "religion", "is", "against", "killing", "officially", "we'r", "not", "all", "terrorist", "and", "the", "one", "who", "r", "killing", "r", "nt", "muslms"]
# ::lemmas ["our", "religion", "be", "against", "kill", "officially", "we'r", "not", "all", "terrorist", "and", "the", "one", "who", "r", "kill", "r", "not", "muslm"]
(c45-2 / oppose-01
       :ARG0 (c45-8 / religion
                    :poss (c45-0 / we))
       :ARG1 (c45-11 / kill-01)
       :manner (c45-1 / official)
       :ARG1-of (c45-9 / cause-01
                       :ARG0 (c45-12 / and
                                     :op1 (c45-10 / terrorist
                                                  :mod (c45-4 / all)
                                                  :domain c45-0
                                                  :polarity -)
                                     :op2 (c45-7 / person
                                                 :ARG0-of (c45-3 / kill-01
                                                                 :ARG1 (c45-5 / religious-group
                                                                              :name (c45-6 / name
                                                                                           :op1 "Islam")))))))

# ::snt . RD, THERE IS NO "PALESTINE". YOU CAN CALL WATER DRY BUT THAT DOES NOT MAKE IT SO...TREAD CAREFULLY
# ::tokens [".", "RD", ",", "THERE", "IS", "NO", "\"", "PALESTINE", "\"", ".", "YOU", "CAN", "CALL", "WATER", "DRY", "BUT", "THAT", "DOES", "NOT", "MAKE", "IT", "SO", "...", "TREAD", "CAREFULLY"]
# ::lemmas [".", "RD", ",", "there", "be", "no", "\"", "PALESTINE", "\"", ".", "you", "can", "call", "water", "DRY", "but", "that", "do", "not", "make", "it", "so", "...", "TREAD", "CAREFULLY"]
(c47-3 / multi-sentence
       :snt1 (c47-2 / list-01
                    :ARG1 (c47-11 / there)
                    :polarity -)
       :snt2 (c47-5 / possible-01
                    :ARG1 (c47-7 / call-01
                                 :ARG0 (c47-0 / you)
                                 :ARG1 (c47-1 / water)
                                 :ARG2 (c47-6 / dry-08))
                    :concession-of (c47-8 / make-02
                                          :ARG0 c47-6
                                          :ARG1 (c47-4 / it)
                                          :ARG2 c47-6
                                          :polarity -))
       :snt3 (c47-9 / read-01
                    :ARG0 c47-0
                    :manner (c47-10 / careful)
                    :mode imperative))

# ::snt FUCK PALESWINE
# ::tokens ["FUCK", "PALESWINE"]
# ::lemmas ["FUCK", "PALESWINE"]
(c49-2 / fuck-01
       :ARG1 (c49-1 / person
                    :name (c49-0 / name
                                 :op1 "Palestine"))
       :mode expressive)

# ::snt Any people who think another group of people must be destroyed are thinking in terms of genocide.
# ::tokens ["Any", "people", "who", "think", "another", "group", "of", "people", "must", "be", "destroyed", "are", "thinking", "in", "terms", "of", "genocide", "."]
# ::lemmas ["any", "people", "who", "think", "another", "group", "of", "people", "must", "be", "destroy", "be", "think", "in", "term", "of", "genocide", "."]
(c50-7 / think-01
       :ARG0 (c50-2 / person
                    :mod (c50-9 / any)
                    :ARG0-of (c50-6 / think-01
                                    :ARG1 (c50-0 / obligate-01
                                                 :ARG2 (c50-3 / destroy-01
                                                              :ARG1 (c50-5 / group
                                                                           :mod (c50-1 / another)
                                                                           :consist-of (c50-8 / person))))))
       :ARG2 (c50-4 / genocide-01))
