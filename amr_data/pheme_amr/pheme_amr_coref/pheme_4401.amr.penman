# ::snt : So in , robbing a convenience carries the death penalty. Got it. Heighten Marshall Law?
# ::tokens [":", "So", "in", ",", "robbing", "a", "convenience", "carries", "the", "death", "penalty", ".", "Got", "it", ".", "Heighten", "Marshall", "Law", "?"]
# ::lemmas [":", "so", "in", ",", "rob", "a", "convenience", "carry", "the", "death", "penalty", ".", "get", "it", ".", "Heighten", "Marshall", "Law", "?"]
(c1-2 / multi-sentence
      :snt1 (c1-3 / infer-01
                  :ARG1 (c1-8 / carry-01
                              :ARG0 (c1-7 / rob-01
                                          :ARG1 (c1-6 / convenience))
                              :ARG1 (c1-5 / penalize-01
                                          :manner (c1-9 / die-01))))
      :snt2 (c1-10 / get-01
                   :ARG1 (c1-11 / it))
      :snt3 (c1-0 / heighten-01
                  :ARG1 (c1-1 / law
                              :name (c1-4 / name
                                          :op1 "Marshall"
                                          :op2 "Law"))
                  :polarity (c1-12 / amr-unknown)))

# ::snt and we all learned a lesson about not jumping to conclusions when the cops kill sum1 saying "don't shoot I don't have a gun!"
# ::tokens ["and", "we", "all", "learned", "a", "lesson", "about", "not", "jumping", "to", "conclusions", "when", "the", "cops", "kill", "sum1", "saying", "\"", "do", "n't", "shoot", "I", "do", "n't", "have", "a", "gun", "!", "\""]
# ::lemmas ["and", "we", "all", "learn", "a", "lesson", "about", "not", "jump", "to", "conclusion", "when", "the", "cop", "kill", "sum1", "say", "\"", "do", "not", "shoot", "i", "do", "not", "have", "a", "gun", "!", "\""]
(c2-16 / and
       :op2 (c2-3 / learn-01
                  :ARG0 (c2-1 / we
                              :mod (c2-6 / all))
                  :ARG1 (c2-12 / lesson
                               :topic (c2-0 / jump-03
                                            :ARG1 c2-1
                                            :ARG2 (c2-10 / conclude-01
                                                         :ARG0 c2-1)
                                            :polarity -))
                  :time (c2-15 / kill-01
                               :ARG0 (c2-9 / cop)
                               :ARG1 (c2-8 / person
                                           :name (c2-7 / name
                                                       :op1 "Sum1")
                                           :ARG0-of (c2-13 / say-01
                                                           :ARG1 (c2-5 / shoot-02
                                                                       :ARG0 (c2-2 / you
                                                                                   :ARG1-of (c2-14 / cause-01
                                                                                                   :ARG0 (c2-4 / have-03
                                                                                                               :ARG0 c2-9
                                                                                                               :ARG1 (c2-11 / gun)
                                                                                                               :polarity -)))
                                                                       :polarity -
                                                                       :mode imperative))))))

# ::snt With a nonsensical ID to boot. The only thing that made him a suspect was his race.
# ::tokens ["With", "a", "nonsensical", "ID", "to", "boot", ".", "The", "only", "thing", "that", "made", "him", "a", "suspect", "was", "his", "race", "."]
# ::lemmas ["with", "a", "nonsensical", "ID", "to", "boot", ".", "the", "only", "thing", "that", "make", "he", "a", "suspect", "be", "his", "race", "."]
(c3-1 / multi-sentence
      :snt1 (c3-0 / have-03
                  :ARG0 (c3-11 / he)
                  :ARG1 (c3-8 / document-01
                              :ARG1 (c3-4 / identity
                                          :mod (c3-5 / nonsense))
                              :destination (c3-2 / boot)))
      :snt2 (c3-9 / race
                  :domain (c3-6 / he)
                  :mod (c3-3 / only)
                  :ARG0-of (c3-7 / make-02
                                 :ARG1 (c3-10 / suspect-01
                                              :ARG1 c3-6))))

# ::snt seems so
# ::tokens ["seems", "so"]
# ::lemmas ["seem", "so"]
(c4-0 / seem-01
      :mod (c4-1 / so))

# ::snt Well, only if you are a young black male - if you are white, not so much.
# ::tokens ["Well", ",", "only", "if", "you", "are", "a", "young", "black", "male", "-", "if", "you", "are", "white", ",", "not", "so", "much", "."]
# ::lemmas ["well", ",", "only", "if", "you", "be", "a", "young", "black", "male", "-", "if", "you", "be", "white", ",", "not", "so", "much", "."]
(c5-8 / contrast-01
      :ARG1 (c5-0 / have-condition-91
                  :ARG2 (c5-3 / male
                              :mod (c5-1 / young)
                              :ARG1-of (c5-4 / black-05)
                              :domain (c5-9 / you))
                  :mod (c5-5 / only))
      :ARG2 (c5-11 / have-condition-91
                   :ARG2 (c5-2 / white-02
                               :ARG1 c5-9)
                   :ARG1-of (c5-6 / have-quant-91
                                  :ARG2 (c5-7 / much)
                                  :ARG3 (c5-10 / so)
                                  :polarity -)))

# ::snt Don't get in Missouri, u can also rape a girl, leave her in freezing cold and have no consequence.
# ::tokens ["Do", "n't", "get", "in", "Missouri", ",", "u", "can", "also", "rape", "a", "girl", ",", "leave", "her", "in", "freezing", "cold", "and", "have", "no", "consequence", "."]
# ::lemmas ["do", "not", "get", "in", "Missouri", ",", "u", "can", "also", "rape", "a", "girl", ",", "leave", "she", "in", "freeze", "cold", "and", "have", "no", "consequence", "."]
(c6-13 / and
       :op1 (c6-9 / get-05
                  :ARG0 (c6-0 / you)
                  :ARG2 (c6-12 / state
                               :name (c6-4 / name
                                           :op1 "Missouri"))
                  :polarity -
                  :mode imperative)
       :op2 (c6-6 / possible-01
                  :ARG1 (c6-3 / and
                              :op1 (c6-7 / rape-01
                                         :ARG0 c6-0
                                         :ARG1 (c6-8 / girl))
                              :op2 (c6-1 / leave-12
                                         :ARG0 c6-0
                                         :ARG1 c6-8
                                         :ARG2 (c6-10 / cold-01
                                                      :ARG1 c6-8
                                                      :ARG2-of (c6-2 / freeze-01)))
                              :op3 (c6-11 / consequence-03
                                          :ARG1 c6-0
                                          :ARG3 c6-7
                                          :polarity -))
                  :mod (c6-5 / also)))

# ::snt Unarmed, no less. So much here I'm not buying. They shoot one suspect, let other walk away? Seriously?
# ::tokens ["Unarmed", ",", "no", "less", ".", "So", "much", "here", "I", "'m", "not", "buying", ".", "They", "shoot", "one", "suspect", ",", "let", "other", "walk", "away", "?", "Seriously", "?"]
# ::lemmas ["Unarmed", ",", "no", "less", ".", "so", "much", "here", "i", "be", "not", "buy", ".", "they", "shoot", "one", "suspect", ",", "let", "other", "walk", "away", "?", "seriously", "?"]
(c7-0 / multi-sentence
      :snt1 (c7-5 / arm-01
                  :mod (c7-7 / less
                             :polarity -)
                  :polarity -)
      :snt2 (c7-8 / buy-05
                  :ARG0 (c7-15 / i)
                  :location (c7-6 / here)
                  :ARG1-of (c7-4 / have-quant-91
                                 :ARG2 (c7-12 / much)
                                 :ARG3 (c7-2 / so))
                  :polarity -)
      :snt3 (c7-14 / and
                   :op1 (c7-10 / shoot-02
                               :ARG0 (c7-20 / they)
                               :ARG1 (c7-1 / person
                                           :ARG2-of (c7-16 / suspect-01)
                                           :quant 1))
                   :op2 (c7-18 / let-01
                               :ARG0 c7-20
                               :ARG1 (c7-13 / walk-01
                                            :ARG0 (c7-3 / person
                                                        :mod (c7-17 / other))
                                            :direction (c7-11 / away))))
      :snt4 (c7-9 / serious-01
                  :polarity (c7-19 / amr-unknown)))

# ::snt simply being suspected of robbery carries a death penalty
# ::tokens ["simply", "being", "suspected", "of", "robbery", "carries", "a", "death", "penalty"]
# ::lemmas ["simply", "be", "suspect", "of", "robbery", "carry", "a", "death", "penalty"]
(c8-2 / penalize-01
      :ARG2 (c8-5 / suspect-01
                  :ARG1 (c8-3 / rob-01)
                  :ARG2 (c8-0 / you)
                  :ARG1-of (c8-1 / simple-02))
      :manner (c8-4 / die-01))

# ::snt No death penalty was issued by any court.
# ::tokens ["No", "death", "penalty", "was", "issued", "by", "any", "court", "."]
# ::lemmas ["no", "death", "penalty", "be", "issue", "by", "any", "court", "."]
(c9-0 / issue-01
      :ARG0 (c9-3 / court
                  :mod (c9-4 / any))
      :ARG1 (c9-1 / penalty
                  :mod (c9-2 / die-01))
      :polarity -)

# ::snt but not if you are white &amp; commit robbery in Hollywood
# ::tokens ["but", "not", "if", "you", "are", "white", "&", "amp", ";", "commit", "robbery", "in", "Hollywood"]
# ::lemmas ["but", "not", "if", "you", "be", "white", "&", "amp", ";", "commit", "robbery", "in", "Hollywood"]
(c10-6 / contrast-01
       :ARG2 (c10-8 / and
                    :op1 (c10-0 / white-02
                                :ARG1 (c10-1 / you)
                                :polarity -)
                    :op2 (c10-3 / affair-01
                                :ARG1 c10-1
                                :polarity -)
                    :op3 (c10-5 / commit-02
                                :ARG0 c10-1
                                :ARG1 (c10-7 / rob-01
                                             :ARG0 c10-1)
                                :location (c10-2 / market
                                                 :name (c10-4 / name
                                                              :op1 "Hollywood")))))

# ::snt My sister works at macys. She says white folks stealing all day long. They live
# ::tokens ["My", "sister", "works", "at", "macys", ".", "She", "says", "white", "folks", "stealing", "all", "day", "long", ".", "They", "live"]
# ::lemmas ["my", "sister", "work", "at", "macys", ".", "she", "say", "white", "folk", "steal", "all", "day", "long", ".", "they", "live"]
(c11-3 / multi-sentence
       :snt1 (c11-1 / work-01
                    :ARG0 (c11-11 / person
                                  :ARG0-of (c11-0 / have-rel-role-91
                                                  :ARG1 (c11-8 / i)
                                                  :ARG2 (c11-14 / sister)))
                    :ARG2 (c11-13 / company
                                  :name (c11-10 / name
                                                :op1 "Macys")))
       :snt2 (c11-7 / say-01
                    :ARG0 (c11-2 / she)
                    :ARG1 (c11-6 / steal-01
                                 :ARG0 (c11-4 / folk
                                              :ARG1-of (c11-9 / white-02))
                                 :duration (c11-12 / day
                                                   :mod (c11-16 / all))))
       :snt3 (c11-5 / live-01
                    :ARG0 (c11-15 / they)))

# ::snt So in , robbing a convenience carries the death penalty. Got it.
# ::tokens ["So", "in", ",", "robbing", "a", "convenience", "carries", "the", "death", "penalty", ".", "Got", "it", "."]
# ::lemmas ["so", "in", ",", "rob", "a", "convenience", "carry", "the", "death", "penalty", ".", "get", "it", "."]
(c12-0 / multi-sentence
       :snt1 (c12-1 / infer-01
                    :ARG1 (c12-2 / penalize-01
                                 :manner (c12-4 / die-01)
                                 :condition (c12-3 / rob-01
                                                   :ARG1 (c12-5 / convenience))))
       :snt2 (c12-6 / get-02
                    :ARG1 (c12-7 / it)))

# ::snt VIA THE LITTLE KNOWN EXTRA-JUDICIAL CLAUSE IN THE CONSTITUTION.
# ::tokens ["VIA", "THE", "LITTLE", "KNOWN", "EXTRA", "-", "JUDICIAL", "CLAUSE", "IN", "THE", "CONSTITUTION", "."]
# ::lemmas ["VIA", "the", "little", "KNOWN", "EXTRA", "-", "judicial", "clause", "in", "the", "CONSTITUTION", "."]
(c13-4 / claim-01
       :ARG1 (c13-0 / law
                    :name (c13-2 / name
                                 :op1 "extra-juda")
                    :ARG1-of (c13-1 / black-04))
       :location (c13-3 / constitution))

# ::snt Wow. The kid is automatically guilty of stealing cigars? We just know he robbed a cigar store? He actually did it?
# ::tokens ["Wow", ".", "The", "kid", "is", "automatically", "guilty", "of", "stealing", "cigars", "?", "We", "just", "know", "he", "robbed", "a", "cigar", "store", "?", "He", "actually", "did", "it", "?"]
# ::lemmas ["wow", ".", "the", "kid", "be", "automatically", "guilty", "of", "steal", "cigar", "?", "we", "just", "know", "he", "rob", "a", "cigar", "store", "?", "he", "actually", "do", "it", "?"]
(c14-3 / multi-sentence
       :snt1 (c14-1 / wow
                    :mode expressive)
       :snt2 (c14-12 / guilty-01
                     :polarity (c14-17 / amr-unknown)
                     :ARG1 (c14-16 / kid)
                     :ARG2 (c14-14 / steal-01
                                   :ARG0 c14-16
                                   :ARG1 (c14-11 / cigar))
                     :manner (c14-6 / automatic))
       :snt3 (c14-4 / know-01
                    :ARG0 (c14-8 / we)
                    :ARG1 (c14-10 / rob-01
                                  :ARG0 (c14-0 / he)
                                  :ARG1 (c14-5 / store
                                               :mod c14-11))
                    :mod (c14-2 / just)
                    :polarity (c14-9 / amr-unknown))
       :snt4 (c14-13 / do-02
                     :ARG0 c14-0
                     :ARG1 (c14-7 / it)
                     :ARG1-of (c14-15 / actual-02)))

# ::snt In *America* RT : So in , robbing a convenience carries the death penalty. Got it.
# ::tokens ["In", "*", "America", "*", "RT", ":", "So", "in", ",", "robbing", "a", "convenience", "carries", "the", "death", "penalty", ".", "Got", "it", "."]
# ::lemmas ["in", "*", "America", "*", "RT", ":", "so", "in", ",", "rob", "a", "convenience", "carry", "the", "death", "penalty", ".", "get", "it", "."]
(c15-0 / multi-sentence
       :snt1 (c15-10 / say-01
                     :ARG0 (c15-4 / publication
                                  :name (c15-2 / name
                                               :op1 "RT"))
                     :ARG1 (c15-1 / infer-01
                                  :ARG1 (c15-12 / penalize-01
                                                :ARG2 (c15-5 / rob-01
                                                             :ARG1 (c15-6 / convenience))
                                                :manner (c15-7 / die-01)))
                     :location (c15-8 / country
                                      :name (c15-3 / name
                                                   :op1 "America")))
       :snt2 (c15-9 / get-02
                    :ARG1 (c15-11 / it)))

# ::snt why you were there Harry? Doubt it. Doubt you have ever taken a walk when the sun goes down in any "ferguson"Monday morning Qb
# ::tokens ["why", "you", "were", "there", "Harry", "?", "Doubt", "it", ".", "Doubt", "you", "have", "ever", "taken", "a", "walk", "when", "the", "sun", "goes", "down", "in", "any", "\"", "ferguson\"Monday", "morning", "Qb"]
# ::lemmas ["why", "you", "be", "there", "Harry", "?", "Doubt", "it", ".", "Doubt", "you", "have", "ever", "take", "a", "walk", "when", "the", "sun", "go", "down", "in", "any", "\"", "ferguson\"Monday", "morning", "Qb"]
(c16-1 / multi-sentence
       :snt1 (c16-6 / say-01
                    :ARG1 (c16-22 / cause-01
                                  :ARG0 (c16-7 / amr-unknown)
                                  :ARG1 (c16-10 / be-located-at-91
                                                :ARG1 (c16-3 / person
                                                             :name (c16-13 / name
                                                                           :op1 "Harry"))
                                                :ARG2 (c16-23 / there)))
                    :ARG2 c16-3)
       :snt2 (c16-4 / doubt-01
                    :ARG1 (c16-19 / it))
       :snt3 (c16-0 / doubt-01
                    :ARG1 (c16-17 / walk-01
                                  :ARG0 (c16-20 / you)
                                  :time (c16-11 / ever)
                                  :time (c16-15 / go-01
                                                :ARG1 (c16-12 / sun)
                                                :ARG4 (c16-16 / down)
                                                :location (c16-8 / location
                                                                 :mod (c16-5 / city
                                                                             :name (c16-21 / name
                                                                                           :op1 "Gibraltar"))
                                                                 :mod (c16-18 / any))
                                                :time (c16-2 / date-entity
                                                             :weekday (c16-14 / monday)
                                                             :dayperiod (c16-9 / morning))))))

# ::snt So robbed the store then leisurely walked down the street?
# ::tokens ["So", "robbed", "the", "store", "then", "leisurely", "walked", "down", "the", "street", "?"]
# ::lemmas ["so", "rob", "the", "store", "then", "leisurely", "walk", "down", "the", "street", "?"]
(c17-5 / cause-01
       :ARG1 (c17-4 / rob-01
                    :ARG1 (c17-7 / store))
       :polarity (c17-8 / amr-unknown)
       :time-of (c17-0 / walk-01
                       :ARG0 (c17-1 / you)
                       :ARG2 (c17-3 / street)
                       :direction (c17-6 / down)
                       :manner (c17-2 / leisure)))

# ::snt Given the cop hadn't even spoken to the clerk or seen video, it would seem being suspected of theft is a death sentence.
# ::tokens ["Given", "the", "cop", "had", "n't", "even", "spoken", "to", "the", "clerk", "or", "seen", "video", ",", "it", "would", "seem", "being", "suspected", "of", "theft", "is", "a", "death", "sentence", "."]
# ::lemmas ["give", "the", "cop", "have", "not", "even", "speak", "to", "the", "clerk", "or", "see", "video", ",", "it", "would", "seem", "be", "suspect", "of", "theft", "be", "a", "death", "sentence", "."]
(c18-12 / seem-01
        :ARG1 (c18-4 / sentence-01
                     :ARG2 (c18-8 / die-01)
                     :ARG3 (c18-1 / suspect-01
                                  :ARG1 (c18-3 / steal-01)))
        :ARG1-of (c18-9 / cause-01
                        :ARG0 (c18-2 / or
                                     :op1 (c18-0 / speak-01
                                                 :ARG0 (c18-10 / cop)
                                                 :ARG2 (c18-11 / clerk)
                                                 :mod (c18-5 / even)
                                                 :polarity -)
                                     :op2 (c18-6 / see-01
                                                 :ARG0 c18-10
                                                 :ARG1 (c18-7 / video)
                                                 :polarity -))))

# ::snt I still can't believe that they're claiming that he pushed the cop back in the car.
# ::tokens ["I", "still", "ca", "n't", "believe", "that", "they", "'re", "claiming", "that", "he", "pushed", "the", "cop", "back", "in", "the", "car", "."]
# ::lemmas ["i", "still", "can", "not", "believe", "that", "they", "be", "claim", "that", "he", "push", "the", "cop", "back", "in", "the", "car", "."]
(c19-3 / possible-01
       :ARG1 (c19-1 / believe-01
                    :ARG0 (c19-2 / i)
                    :ARG1 (c19-5 / claim-01
                                 :ARG0 (c19-9 / they)
                                 :ARG1 (c19-10 / push-01
                                               :ARG0 (c19-0 / he)
                                               :ARG1 (c19-4 / cop)
                                               :ARG2 (c19-6 / back
                                                            :op1 (c19-8 / car))))
                    :mod (c19-7 / still))
       :polarity -)
