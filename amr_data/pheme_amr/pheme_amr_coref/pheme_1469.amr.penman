# ::snt and this Jewish website thinks its Mossad also
# ::tokens ["and", "this", "Jewish", "website", "thinks", "its", "Mossad", "also"]
# ::lemmas ["and", "this", "Jewish", "website", "think", "its", "Mossad", "also"]
(c1-7 / and
      :op2 (c1-6 / think-01
                 :ARG0 (c1-0 / website
                             :mod (c1-4 / religious-group
                                        :name (c1-2 / name
                                                    :op1 "Jew"))
                             :mod (c1-5 / this))
                 :ARG1 (c1-3 / name
                             :op1 "Mossad")
                 :mod (c1-1 / also)))

# ::snt Automatic now to assume everything they and the media say is a lie
# ::tokens ["Automatic", "now", "to", "assume", "everything", "they", "and", "the", "media", "say", "is", "a", "lie"]
# ::lemmas ["automatic", "now", "to", "assume", "everything", "they", "and", "the", "medium", "say", "be", "a", "lie"]
(c2-8 / automatic
      :domain (c2-3 / assume-02
                    :ARG1 (c2-2 / everything
                                :ARG1-of (c2-6 / say-01
                                               :ARG0 (c2-5 / and
                                                           :op1 (c2-7 / they)
                                                           :op2 (c2-1 / media)))
                                :ARG1-of (c2-0 / lie-08)))
      :time (c2-4 / now))

# ::snt it totally looks like imperial strategy. Last Thierry Mesan article is eye-opening.
# ::tokens ["it", "totally", "looks", "like", "imperial", "strategy", ".", "Last", "Thierry", "Mesan", "article", "is", "eye", "-", "opening", "."]
# ::lemmas ["it", "totally", "look", "like", "imperial", "strategy", ".", "last", "Thierry", "Mesan", "article", "be", "eye", "-", "opening", "."]
(c3-1 / multi-sentence
      :snt1 (c3-0 / look-02
                  :ARG0 (c3-5 / it)
                  :ARG1 (c3-9 / strategy
                              :mod (c3-4 / empire))
                  :degree (c3-10 / total))
      :snt2 (c3-3 / open-01
                  :ARG0 (c3-11 / article
                               :mod (c3-8 / last)
                               :poss (c3-7 / person
                                           :name (c3-6 / name
                                                       :op1 "Thierry"
                                                       :op2 "Mesan")))
                  :ARG1 (c3-2 / eye)))

# ::snt False flag?Conspiracy theory?So cynical and so sad.
# ::tokens ["False", "flag?Conspiracy", "theory?So", "cynical", "and", "so", "sad", "."]
# ::lemmas ["false", "flag?conspiracy", "theory?so", "cynical", "and", "so", "sad", "."]
(c4-9 / and
      :op1 (c4-6 / cynical
                 :degree (c4-7 / so))
      :op2 (c4-2 / sad-02
                 :degree (c4-0 / so))
      :polarity (c4-3 / amr-unknown)
      :domain (c4-1 / flag
                    :mod (c4-4 / false))
      :op3 (c4-8 / theory
                 :topic (c4-5 / conspire-01)))

# ::snt Remember that in U.S. human microchip implant was approved by FDA
# ::tokens ["Remember", "that", "in", "U.S.", "human", "microchip", "implant", "was", "approved", "by", "FDA"]
# ::lemmas ["remember", "that", "in", "U.S.", "human", "microchip", "implant", "be", "approve", "by", "FDA"]
(c5-6 / remember-01
      :ARG0 (c5-1 / you)
      :ARG1 (c5-9 / approve-01
                  :ARG0 (c5-8 / government-organization
                              :name (c5-4 / name
                                          :op1 "FDA"))
                  :ARG1 (c5-3 / implant-01
                              :ARG1 (c5-2 / microchip
                                          :mod (c5-0 / human))
                              :location (c5-7 / country
                                              :name (c5-5 / name
                                                          :op1 "U.S."))))
      :mode imperative)

# ::snt Typical knee jerk reaction. Or an excuse for more protection for the elite
# ::tokens ["Typical", "knee", "jerk", "reaction", ".", "Or", "an", "excuse", "for", "more", "protection", "for", "the", "elite"]
# ::lemmas ["typical", "knee", "jerk", "reaction", ".", "or", "an", "excuse", "for", "more", "protection", "for", "the", "elite"]
(c6-1 / multi-sentence
      :snt1 (c6-7 / react-01
                  :manner (c6-0 / jerk-01
                                :ARG1 (c6-5 / knee))
                  :ARG1-of (c6-9 / typical-02))
      :snt2 (c6-3 / or
                  :op2 (c6-4 / excuse-02
                             :ARG1 (c6-6 / protect-01
                                         :ARG1 (c6-2 / elite)
                                         :quant (c6-8 / more)))))

# ::snt Ramping up the scareometer on terrorism allows fUK govts to pushmore surveillance and monitoring of the public
# ::tokens ["Ramping", "up", "the", "scareometer", "on", "terrorism", "allows", "fUK", "govts", "to", "pushmore", "surveillance", "and", "monitoring", "of", "the", "public"]
# ::lemmas ["ramp", "up", "the", "scareometer", "on", "terrorism", "allow", "fuk", "govts", "to", "pushmore", "surveillance", "and", "monitoring", "of", "the", "public"]
(c7-14 / allow-01
       :ARG0 (c7-5 / ramp-up-01
                   :ARG1 (c7-12 / thing
                                :ARG0-of (c7-10 / scare-01
                                                :ARG1 (c7-9 / terrorism))))
       :ARG1 (c7-4 / push-01
                   :ARG0 (c7-7 / government-organization
                               :ARG0-of (c7-6 / govern-01
                                              :ARG1 (c7-8 / country
                                                          :name (c7-3 / name
                                                                      :op1 "UK"))))
                   :ARG1 (c7-2 / and
                               :op1 (c7-1 / surveil-01
                                          :ARG1 (c7-13 / public))
                               :op2 (c7-0 / monitor-01
                                          :ARG1 c7-13)
                               :quant (c7-11 / more))))

# ::snt ...to be used against us!
# ::tokens ["...", "to", "be", "used", "against", "us", "!"]
# ::lemmas ["...", "to", "be", "use", "against", "we", "!"]
(c8-2 / use-01
      :ARG2 (c8-0 / oppose-01
                  :ARG1 (c8-1 / we)))

# ::snt . wants to spy on citizens without suspicion.
# ::tokens [".", "wants", "to", "spy", "on", "citizens", "without", "suspicion", "."]
# ::lemmas [".", "want", "to", "spy", "on", "citizen", "without", "suspicion", "."]
(c9-1 / want-01
      :ARG1 (c9-0 / spy-01
                  :ARG1 (c9-3 / citizen)
                  :manner (c9-2 / suspect-01
                                :ARG1 c9-3
                                :polarity -)))

# ::snt This actually suits them well then. Like it suits Israel and Mossad, and the USA. France just recognised Palestine
# ::tokens ["This", "actually", "suits", "them", "well", "then", ".", "Like", "it", "suits", "Israel", "and", "Mossad", ",", "and", "the", "USA", ".", "France", "just", "recognised", "Palestine"]
# ::lemmas ["this", "actually", "suit", "they", "well", "then", ".", "like", "it", "suit", "Israel", "and", "Mossad", ",", "and", "the", "USA", ".", "France", "just", "recognise", "Palestine"]
(c10-1 / multi-sentence
       :snt1 (c10-6 / suit-01
                    :ARG1 (c10-20 / this)
                    :ARG2 (c10-19 / they)
                    :ARG1-of (c10-7 / actual-02)
                    :mod (c10-13 / then)
                    :ARG1-of (c10-11 / well-09))
       :snt2 (c10-10 / resemble-01
                     :ARG2 (c10-8 / suit-01
                                  :ARG1 c10-20
                                  :ARG2 (c10-12 / and
                                                :op1 (c10-18 / country
                                                             :name (c10-9 / name
                                                                          :op1 "Israel"))
                                                :op2 (c10-16 / organization
                                                             :name (c10-17 / name
                                                                           :op1 "Mossad"))
                                                :op3 (c10-5 / country
                                                            :name (c10-3 / name
                                                                         :op1 "USA")))))
       :snt3 (c10-2 / recognize-02
                    :ARG0 (c10-14 / country
                                  :name (c10-4 / name
                                               :op1 "France"))
                    :ARG1 (c10-15 / country
                                  :name (c10-21 / name
                                                :op1 "Palestine"))
                    :mod (c10-0 / just)))

# ::snt one could be forgiven for thinking it's one giant fabrication
# ::tokens ["one", "could", "be", "forgiven", "for", "thinking", "it", "'s", "one", "giant", "fabrication"]
# ::lemmas ["one", "could", "be", "forgive", "for", "think", "it", "be", "one", "giant", "fabrication"]
(c11-4 / possible-01
       :ARG1 (c11-0 / forgive-01
                    :ARG1 (c11-1 / one)
                    :ARG2 (c11-6 / think-01
                                 :ARG0 c11-1
                                 :ARG1 (c11-3 / fabricate-01
                                              :ARG1 (c11-2 / it)
                                              :mod (c11-5 / giant)
                                              :quant 1))))

# ::snt Just all too convenient for them.
# ::tokens ["Just", "all", "too", "convenient", "for", "them", "."]
# ::lemmas ["just", "all", "too", "convenient", "for", "they", "."]
(c12-0 / have-degree-91
       :ARG1 (c12-4 / they)
       :ARG2 (c12-2 / convenient
                    :beneficiary c12-4)
       :ARG3 (c12-3 / too
                    :mod (c12-1 / just)))

# ::snt immediately request more powers using
# ::tokens ["immediately", "request", "more", "powers", "using"]
# ::lemmas ["immediately", "request", "more", "power", "use"]
(c13-4 / request-01
       :ARG1 (c13-1 / use-01
                    :ARG1 (c13-3 / power
                                 :quant (c13-0 / more)))
       :time (c13-2 / immediate))

# ::snt and I now look back down the decades and wonder if anything we were told was true...
# ::tokens ["and", "I", "now", "look", "back", "down", "the", "decades", "and", "wonder", "if", "anything", "we", "were", "told", "was", "true", "..."]
# ::lemmas ["and", "i", "now", "look", "back", "down", "the", "decades", "and", "wonder", "if", "anything", "we", "be", "tell", "be", "true", "..."]
(c14-12 / and
        :op2 (c14-3 / and
                    :op1 (c14-2 / look-01
                                :ARG0 (c14-4 / i)
                                :ARG1 (c14-9 / decade)
                                :direction (c14-1 / down))
                    :op2 (c14-0 / wonder-01
                                :ARG0 c14-4
                                :ARG1 (c14-11 / truth-value
                                              :polarity-of (c14-10 / true-01
                                                                   :ARG1 (c14-7 / anything
                                                                                :ARG1-of (c14-8 / tell-01
                                                                                                :ARG2 (c14-5 / we))))))
                    :time (c14-6 / now)))

# ::snt what a surprise!
# ::tokens ["what", "a", "surprise", "!"]
# ::lemmas ["what", "a", "surprise", "!"]
(c15-0 / surprise-01
       :mode expressive)

# ::snt that's what the show was all about
# ::tokens ["that", "'s", "what", "the", "show", "was", "all", "about"]
# ::lemmas ["that", "be", "what", "the", "show", "be", "all", "about"]
(c16-2 / concern-02
       :ARG0 (c16-0 / show)
       :ARG1 (c16-1 / that)
       :degree (c16-3 / all))

# ::snt Shame on Harper Gov using to solicit funds via emails
# ::tokens ["Shame", "on", "Harper", "Gov", "using", "to", "solicit", "funds", "via", "emails"]
# ::lemmas ["shame", "on", "Harper", "Gov", "use", "to", "solicit", "fund", "via", "email"]
(c17-9 / shame-01
       :ARG2 (c17-2 / use-01
                    :ARG0 (c17-6 / person
                                 :ARG0-of (c17-0 / have-org-role-91
                                                 :ARG1 (c17-7 / city
                                                              :name (c17-5 / name
                                                                           :op1 "Harper"))
                                                 :ARG2 (c17-8 / governor)))
                    :ARG1 (c17-1 / fund-01)
                    :ARG2 (c17-3 / solicit-01
                                 :ARG0 c17-6
                                 :ARG1 c17-1
                                 :medium (c17-4 / email-01))))

# ::snt Surprised?
# ::tokens ["Surprised", "?"]
# ::lemmas ["Surprised", "?"]
(c18-0 / surprise-01
       :polarity (c18-1 / amr-unknown))

# ::snt MI5 chief says he currently can't guarantee we won't all be killed... Sounds like blackmail
# ::tokens ["MI5", "chief", "says", "he", "currently", "ca", "n't", "guarantee", "we", "wo", "n't", "all", "be", "killed", "...", "Sounds", "like", "blackmail"]
# ::lemmas ["MI5", "chief", "say", "he", "currently", "can", "not", "guarantee", "we", "will", "not", "all", "be", "kill", "...", "sound", "like", "blackmail"]
(c19-2 / multi-sentence
       :snt1 (c19-11 / say-01
                     :ARG0 (c19-6 / person
                                  :ARG0-of (c19-0 / have-org-role-91
                                                  :ARG1 (c19-9 / government-organization
                                                               :name (c19-5 / name
                                                                            :op1 "MI5"))
                                                  :ARG2 (c19-8 / chief)))
                     :ARG1 (c19-13 / possible-01
                                   :ARG1 (c19-7 / guarantee-01
                                                :ARG0 c19-6
                                                :ARG1 (c19-12 / kill-01
                                                              :ARG1 (c19-1 / we
                                                                           :mod (c19-14 / all))
                                                              :polarity -))
                                   :time (c19-10 / current)
                                   :polarity -))
       :snt2 (c19-4 / sound-01
                    :ARG1 (c19-3 / blackmail-01)))
