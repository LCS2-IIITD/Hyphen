# ::snt what if it was an emergency?
# ::tokens ["what", "if", "it", "was", "an", "emergency", "?"]
# ::lemmas ["what", "if", "it", "be", "an", "emergency", "?"]
(c1-0 / have-condition-91
      :ARG1 (c1-2 / amr-unknown)
      :ARG2 (c1-1 / emergency))

# ::snt it's about right for engine out glide too. is very high for an A320. I'm thinking pressurization failure and passed out
# ::tokens ["it", "'s", "about", "right", "for", "engine", "out", "glide", "too", ".", "is", "very", "high", "for", "an", "A320", ".", "I", "'m", "thinking", "pressurization", "failure", "and", "passed", "out"]
# ::lemmas ["it", "be", "about", "right", "for", "engine", "out", "glide", "too", ".", "be", "very", "high", "for", "an", "A320", ".", "i", "be", "think", "pressurization", "failure", "and", "pass", "out"]
(c2-0 / multi-sentence
      :snt1 (c2-10 / right-06
                   :ARG1 (c2-13 / it)
                   :degree (c2-4 / about)
                   :topic (c2-12 / and
                                 :op1 (c2-7 / engine
                                            :ARG1-of (c2-15 / out-06))
                                 :op2 (c2-11 / glide-01
                                             :mod c2-7)))
      :mod (c2-18 / too)
      :snt2 (c2-5 / high-02
                  :ARG1 (c2-9 / aircraft-type
                              :name (c2-8 / name
                                          :op1 "A320"))
                  :degree (c2-1 / very))
      :snt3 (c2-16 / think-01
                   :ARG0 (c2-14 / i)
                   :ARG1 (c2-17 / and
                                :op1 (c2-6 / fail-01
                                           :ARG1 (c2-2 / pressurize-01))
                                :op2 (c2-3 / pass-out-11))))

# ::snt The plane had issued a distress call at :47 (09:47 GMT), according to sources quoted by AFP news agency.
# ::tokens ["The", "plane", "had", "issued", "a", "distress", "call", "at", ":", "47", "(", "09:47", "GMT", ")", ",", "according", "to", "sources", "quoted", "by", "AFP", "news", "agency", "."]
# ::lemmas ["the", "plane", "have", "issue", "a", "distress", "call", "at", ":", "47", "(", "09:47", "GMT", ")", ",", "accord", "to", "source", "quote", "by", "AFP", "news", "agency", "."]
(c3-8 / say-01
      :ARG0 (c3-1 / source
                  :ARG1-of (c3-2 / quote-01
                                 :ARG0 (c3-9 / agency
                                             :name (c3-3 / name
                                                         :op1 "AFP")
                                             :mod (c3-4 / news))))
      :ARG1 (c3-7 / call-03
                  :ARG0 (c3-5 / plane)
                  :ARG1 (c3-6 / distress-01)
                  :time (c3-0 / date-entity
                              :time "0:47"
                              :timezone "09:47"
                              :timezone "GMT")))

# ::snt Not at ft with terrain at + ft.
# ::tokens ["Not", "at", "ft", "with", "terrain", "at", "+", "ft", "."]
# ::lemmas ["not", "at", "ft", "with", "terrain", "at", "+", "ft", "."]
(c4-0 / have-degree-91
      :ARG2 (c4-5 / distance-quantity
                  :unit (c4-2 / foot)
                  :quant 1)
      :ARG3 (c4-3 / equal)
      :ARG4 (c4-1 / distance-quantity
                  :unit (c4-4 / foot)
                  :quant 1)
      :polarity -)

# ::snt The squawk doesn't show any sign of Mayday, could have been only vocal
# ::tokens ["The", "squawk", "does", "n't", "show", "any", "sign", "of", "Mayday", ",", "could", "have", "been", "only", "vocal"]
# ::lemmas ["the", "squawk", "do", "not", "show", "any", "sign", "of", "Mayday", ",", "could", "have", "be", "only", "vocal"]
(c5-9 / and
      :op1 (c5-8 / show-01
                 :ARG0 (c5-3 / squawk)
                 :ARG1 (c5-0 / signal-07
                             :ARG0 c5-3
                             :ARG1 (c5-1 / festival
                                         :name (c5-5 / name
                                                     :op1 "Mayday"))
                             :mod (c5-4 / any))
                 :polarity -)
      :op2 (c5-7 / possible-01
                 :ARG1 (c5-6 / vocal
                             :domain c5-3
                             :mod (c5-2 / only))))

# ::snt Yes they did ( french media )
# ::tokens ["Yes", "they", "did", "(", "french", "media", ")"]
# ::lemmas ["yes", "they", "do", "(", "french", "medium", ")"]
(c6-2 / do-02
      :ARG0 (c6-3 / media
                  :mod (c6-1 / country
                             :name (c6-0 / name
                                         :op1 "France"))))

# ::snt well almost every report is quoting ATC saying they received a distress call at apologies if I'm wrong
# ::tokens ["well", "almost", "every", "report", "is", "quoting", "ATC", "saying", "they", "received", "a", "distress", "call", "at", "apologies", "if", "I", "'m", "wrong"]
# ::lemmas ["well", "almost", "every", "report", "be", "quote", "atc", "say", "they", "receive", "a", "distress", "call", "at", "apology", "if", "i", "be", "wrong"]
(c7-3 / quote-01
      :ARG0 (c7-8 / report-01
                  :mod (c7-2 / every
                             :mod (c7-12 / almost)))
      :ARG1 (c7-11 / say-01
                   :ARG0 (c7-1 / organization
                               :name (c7-7 / name
                                           :op1 "ATC"))
                   :ARG1 (c7-6 / receive-01
                               :ARG0 c7-1
                               :ARG1 (c7-9 / call-02
                                           :ARG0 c7-1
                                           :ARG1 (c7-10 / distress-01)
                                           :ARG2 (c7-4 / apologize-01
                                                       :ARG0 c7-1))
                               :condition (c7-0 / wrong-04
                                                :ARG1 (c7-5 / i))))
      :ARG2 c7-1)

# ::snt You're telling me a decent into an airport approach at /4000ft is standard? You'd better do some research matey.
# ::tokens ["You", "'re", "telling", "me", "a", "decent", "into", "an", "airport", "approach", "at", "/4000", "ft", "is", "standard", "?", "You", "'d", "better", "do", "some", "research", "matey", "."]
# ::lemmas ["you", "be", "tell", "i", "a", "decent", "into", "an", "airport", "approach", "at", "/4000", "ft", "be", "standard", "?", "you", "would", "well", "do", "some", "research", "matey", "."]
(c8-3 / multi-sentence
      :snt1 (c8-12 / tell-01
                   :ARG0 (c8-0 / you)
                   :ARG1 (c8-11 / standard-02
                                :ARG1 (c8-8 / decent)
                                :ARG2 (c8-13 / approach-01
                                             :ARG1 (c8-5 / airport)
                                             :ARG2 (c8-1 / distance-quantity
                                                         :unit (c8-2 / foot)
                                                         :quant 4000)))
                   :ARG2 (c8-6 / i))
      :snt2 (c8-9 / recommend-01
                  :ARG1 (c8-14 / do-02
                               :ARG0 (c8-10 / you)
                               :ARG1 (c8-7 / research-01
                                           :ARG0 c8-10
                                           :quant (c8-4 / some)))
                  :ARG2 c8-10))

# ::snt You're wrong, I've sat in the cockpit many times and we have exceeded fpm... it is normal, but not throughout
# ::tokens ["You", "'re", "wrong", ",", "I", "'ve", "sat", "in", "the", "cockpit", "many", "times", "and", "we", "have", "exceeded", "fpm", "...", "it", "is", "normal", ",", "but", "not", "throughout"]
# ::lemmas ["you", "be", "wrong", ",", "i", "'ve", "sit", "in", "the", "cockpit", "many", "time", "and", "we", "have", "exceed", "fpm", "...", "it", "be", "normal", ",", "but", "not", "throughout"]
(c9-0 / wrong-04
      :ARG1 (c9-1 / you)
      :ARG1-of (c9-10 / cause-01
                      :ARG0 (c9-16 / and
                                   :op1 (c9-13 / sit-01
                                               :ARG1 (c9-4 / i)
                                               :ARG2 (c9-9 / cockpit)
                                               :frequency (c9-2 / many))
                                   :op2 (c9-3 / exceed-01
                                              :ARG0 (c9-5 / we)
                                              :ARG1 (c9-15 / temporal-quantity
                                                           :unit (c9-8 / minute)
                                                           :quant 1))
                                   :op3 (c9-12 / contrast-01
                                               :ARG1 (c9-6 / normal-02
                                                           :ARG1 (c9-11 / it))
                                               :ARG2 (c9-7 / normal-02
                                                           :ARG1 c9-11
                                                           :duration (c9-14 / throughout)
                                                           :polarity -)))))

# ::snt Yes this puzzels me a bit. Seems like they have been very occupied with something important...
# ::tokens ["Yes", "this", "puzzels", "me", "a", "bit", ".", "Seems", "like", "they", "have", "been", "very", "occupied", "with", "something", "important", "..."]
# ::lemmas ["yes", "this", "puzzel", "i", "a", "bit", ".", "seem", "like", "they", "have", "be", "very", "occupied", "with", "something", "important", "..."]
(c10-1 / multi-sentence
       :snt1 (c10-7 / puzzle-01
                    :ARG0 (c10-11 / this)
                    :ARG1 (c10-5 / i)
                    :degree (c10-2 / bit)
                    :mod (c10-0 / yes))
       :snt2 (c10-10 / seem-01
                     :ARG1 (c10-3 / occupy-01
                                  :ARG0 (c10-4 / something
                                               :ARG1-of (c10-8 / important-01))
                                  :ARG1 (c10-9 / they)
                                  :degree (c10-6 / very))))

# ::snt all I saw was that ATC "received" the distress call at ft. Utterly baffling
# ::tokens ["all", "I", "saw", "was", "that", "ATC", "\"", "received", "\"", "the", "distress", "call", "at", "ft", ".", "Utterly", "baffling"]
# ::lemmas ["all", "i", "see", "be", "that", "ATC", "\"", "receive", "\"", "the", "distress", "call", "at", "ft", ".", "utterly", "baffling"]
(c11-8 / see-01
       :ARG0 (c11-1 / i)
       :ARG1 (c11-4 / receive-01
                    :ARG0 (c11-5 / company
                                 :name (c11-2 / name
                                              :op1 "ATC"))
                    :ARG1 (c11-6 / call-03
                                 :ARG1 (c11-7 / distress-01))
                    :location (c11-0 / facility
                                     :name (c11-3 / name
                                                  :op1 "FT."
                                                  :op2 "Utterly"
                                                  :op3 " baffle")))
       :mod (c11-9 / all))

# ::snt CNN discussing this right now.
# ::tokens ["CNN", "discussing", "this", "right", "now", "."]
# ::lemmas ["CNN", "discuss", "this", "right", "now", "."]
(c12-3 / discuss-01
       :ARG0 (c12-2 / publication
                    :name (c12-0 / name
                                 :op1 "CNN"))
       :ARG1 (c12-5 / this)
       :time (c12-1 / now
                    :mod (c12-4 / right)))

# ::snt also heading of plane kept constant degrees during last minutes.
# ::tokens ["also", "heading", "of", "plane", "kept", "constant", "degrees", "during", "last", "minutes", "."]
# ::lemmas ["also", "head", "of", "plane", "keep", "constant", "degree", "during", "last", "minutes", "."]
(c13-3 / keep-02
       :ARG0 (c13-0 / heading-01
                    :ARG1 (c13-4 / plane))
       :ARG1 (c13-6 / temperature
                    :mod (c13-5 / constant))
       :mod (c13-7 / also)
       :time (c13-2 / minute
                    :mod (c13-1 / last)))

# ::snt Wow - that is strange. not heard that yet so thank you. Adds another layer of mystery
# ::tokens ["Wow", "-", "that", "is", "strange", ".", "not", "heard", "that", "yet", "so", "thank", "you", ".", "Adds", "another", "layer", "of", "mystery"]
# ::lemmas ["wow", "-", "that", "be", "strange", ".", "not", "hear", "that", "yet", "so", "thank", "you", ".", "add", "another", "layer", "of", "mystery"]
(c14-4 / multi-sentence
       :snt1 (c14-11 / strange
                     :domain (c14-12 / that)
                     :mod (c14-1 / wow
                                 :mode expressive))
       :snt2 (c14-0 / hear-01
                    :ARG0 (c14-6 / i)
                    :ARG1 (c14-10 / that)
                    :time (c14-2 / yet)
                    :ARG0-of (c14-9 / cause-01
                                    :ARG1 (c14-7 / thank-01
                                                 :ARG0 c14-6
                                                 :ARG1 (c14-14 / you)))
                    :polarity -)
       :snt3 (c14-13 / add-02
                     :ARG1 (c14-3 / layer
                                  :consist-of (c14-8 / mystery)
                                  :mod (c14-5 / another))))

# ::snt no squawk change but mayday sent
# ::tokens ["no", "squawk", "change", "but", "mayday", "sent"]
# ::lemmas ["no", "squawk", "change", "but", "mayday", "send"]
(c15-3 / contrast-01
       :ARG1 (c15-2 / change-01
                    :ARG1 (c15-4 / squawk)
                    :polarity -)
       :ARG2 (c15-0 / send-01
                    :ARG1 (c15-5 / thing
                                 :name (c15-1 / name
                                              :op1 "Mayday"))))

# ::snt Not really
# ::tokens ["Not", "really"]
# ::lemmas ["not", "really"]
(c16-0 / real-04
       :polarity -)

# ::snt Thks!
# ::tokens ["Thks", "!"]
# ::lemmas ["Thks", "!"]
(c17-0 / ks
       :mode expressive)

# ::snt yes there was a mayday apparently but no squawk
# ::tokens ["yes", "there", "was", "a", "mayday", "apparently", "but", "no", "squawk"]
# ::lemmas ["yes", "there", "be", "a", "mayday", "apparently", "but", "no", "squawk"]
(c18-2 / contrast-01
       :ARG1 (c18-1 / mayday
                    :ARG1-of (c18-3 / appear-02))
       :ARG2 (c18-0 / squawk-01
                    :polarity -))

# ::snt Thanks!
# ::tokens ["Thanks", "!"]
# ::lemmas ["thank", "!"]
(c19-1 / thank-01
       :ARG1 (c19-0 / you)
       :mode expressive)

# ::snt Emergency descent is about ft/min in that aircraft yeah. It's not "standard" for an airport approach.
# ::tokens ["Emergency", "descent", "is", "about", "ft", "/", "min", "in", "that", "aircraft", "yeah", ".", "It", "'s", "not", "\"", "standard", "\"", "for", "an", "airport", "approach", "."]
# ::lemmas ["emergency", "descent", "be", "about", "ft", "/", "min", "in", "that", "aircraft", "yeah", ".", "it", "be", "not", "\"", "standard", "\"", "for", "an", "airport", "approach", "."]
(c20-3 / multi-sentence
       :snt1 (c20-8 / descend-01
                    :mod (c20-4 / emergency)
                    :quant (c20-12 / about
                                   :op1 (c20-1 / distance-quantity
                                               :unit (c20-2 / foot)
                                               :quant 1))
                    :location (c20-5 / aircraft
                                     :mod (c20-11 / that))
                    :mod (c20-0 / yeah
                                :mode expressive))
       :snt2 (c20-9 / standard-02
                    :ARG1 (c20-6 / it)
                    :ARG2 (c20-7 / approach-01
                                 :ARG2 (c20-10 / airport))
                    :polarity -))

# ::snt are we sure mayday sent at ft at last second?
# ::tokens ["are", "we", "sure", "mayday", "sent", "at", "ft", "at", "last", "second", "?"]
# ::lemmas ["be", "we", "sure", "mayday", "send", "at", "ft", "at", "last", "second", "?"]
(c21-7 / sure-02
       :ARG0 (c21-0 / we)
       :ARG1 (c21-4 / send-01
                    :ARG1 (c21-6 / person
                                 :name (c21-5 / name
                                              :op1 "Mayday"))
                    :ARG2 (c21-1 / foot)
                    :time (c21-2 / second
                                 :mod (c21-3 / last)))
       :polarity (c21-8 / amr-unknown))

# ::snt did the squawk code change to ?
# ::tokens ["did", "the", "squawk", "code", "change", "to", "?"]
# ::lemmas ["do", "the", "squawk", "code", "change", "to", "?"]
(c22-2 / change-01
       :polarity (c22-3 / amr-unknown)
       :ARG1 (c22-1 / code
                    :mod (c22-0 / squawk)))

# ::snt Thanks.
# ::tokens ["Thanks", "."]
# ::lemmas ["thank", "."]
(c23-0 / thank-01)

# ::snt Yes, I read that later. Well, thxs anyhow!
# ::tokens ["Yes", ",", "I", "read", "that", "later", ".", "Well", ",", "thxs", "anyhow", "!"]
# ::lemmas ["yes", ",", "i", "read", "that", "later", ".", "well", ",", "thxs", "anyhow", "!"]
(c24-2 / multi-sentence
       :snt1 (c24-5 / read-01
                    :ARG0 (c24-4 / i)
                    :ARG1 (c24-6 / that)
                    :time (c24-7 / after)
                    :mod (c24-0 / yes))
       :snt2 (c24-3 / anyhow
                    :mod (c24-1 / well)))

# ::snt That is NO WHERE NEAR standard. Typically around ft/min at lower levels.
# ::tokens ["That", "is", "NO", "WHERE", "NEAR", "standard", ".", "Typically", "around", "ft", "/", "min", "at", "lower", "levels", "."]
# ::lemmas ["that", "be", "no", "where", "near", "standard", ".", "typically", "around", "ft", "/", "min", "at", "low", "level", "."]
(c25-2 / multi-sentence
       :snt1 (c25-13 / standard-02
                     :ARG1 (c25-14 / that
                                   :location (c25-6 / nowhere))
                     :ARG1-of (c25-5 / near-02
                                     :polarity -))
       :snt2 (c25-12 / typical-02
                     :ARG1 (c25-8 / rate-entity-91
                                  :ARG1 (c25-15 / around
                                                :op1 (c25-9 / distance-quantity
                                                            :unit (c25-1 / foot)
                                                            :quant 1))
                                  :ARG2 (c25-7 / temporal-quantity
                                               :unit (c25-0 / hour)
                                               :quant 1))
                     :ARG2 (c25-3 / level
                                  :ARG1-of (c25-4 / have-degree-91
                                                  :ARG2 (c25-10 / low-04
                                                                :ARG1 c25-3)
                                                  :ARG3 (c25-11 / more)))))

# ::snt Flight U9525 was descending at a rate of about -4000 feet per minute, which is quite standard for an airport approach -
# ::tokens ["Flight", "U9525", "was", "descending", "at", "a", "rate", "of", "about", "-4000", "feet", "per", "minute", ",", "which", "is", "quite", "standard", "for", "an", "airport", "approach", "-"]
# ::lemmas ["Flight", "U9525", "be", "descend", "at", "a", "rate", "of", "about", "-4000", "feet", "per", "minute", ",", "which", "be", "quite", "standard", "for", "an", "airport", "approach", "-"]
(c26-9 / descend-01
       :ARG0 (c26-1 / fly-01
                    :mod (c26-13 / aircraft-type
                                 :name (c26-6 / name
                                              :op1 "U9525")))
       :manner (c26-8 / rate-entity-91
                      :ARG1 (c26-4 / about
                                   :op1 (c26-0 / distance-quantity
                                               :unit (c26-5 / foot)
                                               :quant 4000))
                      :ARG2 (c26-12 / temporal-quantity
                                    :unit (c26-2 / minute)
                                    :quant 1)
                      :ARG1-of (c26-10 / standard-02
                                       :ARG2 (c26-7 / approach-01
                                                    :ARG1 (c26-11 / airport))
                                       :degree (c26-3 / quite))))

# ::snt initial descent rate usually passes fpm
# ::tokens ["initial", "descent", "rate", "usually", "passes", "fpm"]
# ::lemmas ["initial", "descent", "rate", "usually", "pass", "fpm"]
(c27-4 / pass-03
       :ARG1 (c27-6 / rate
                    :mod (c27-5 / descend-01
                                :manner (c27-3 / initial)))
       :ARG2 (c27-1 / monetary-quantity
                    :quant (c27-0 / fpm)
                    :mod (c27-2 / usual)))

# ::snt Squawk ?
# ::tokens ["Squawk", "?"]
# ::lemmas ["Squawk", "?"]
(c29-0 / squawk-01
       :polarity (c29-1 / amr-unknown))

# ::snt Well- in my opinion it's rather steep. And this is a long time before the approach in DUS. Any MAYDAY call?
# ::tokens ["Well-", "in", "my", "opinion", "it", "'s", "rather", "steep", ".", "And", "this", "is", "a", "long", "time", "before", "the", "approach", "in", "DUS", ".", "Any", "MAYDAY", "call", "?"]
# ::lemmas ["Well-", "in", "my", "opinion", "it", "be", "rather", "steep", ".", "and", "this", "be", "a", "long", "time", "before", "the", "approach", "in", "DUS", ".", "any", "MAYDAY", "call", "?"]
(c30-0 / multi-sentence
       :snt1 (c30-14 / opine-01
                     :ARG0 (c30-12 / i)
                     :ARG1 (c30-3 / steep
                                  :domain (c30-13 / it)
                                  :degree (c30-9 / rather))
                     :mod (c30-10 / well))
       :snt2 (c30-4 / and
                    :op2 (c30-19 / time
                                 :ARG1-of (c30-5 / long-03)
                                 :time (c30-6 / before
                                              :op1 (c30-11 / approach-01
                                                           :ARG2 (c30-16 / country
                                                                         :name (c30-7 / name
                                                                                      :op1 "US"))))
                                 :domain (c30-17 / this)))
       :snt3 (c30-1 / call-02
                    :time (c30-2 / date-entity
                                 :dayperiod (c30-15 / night)
                                 :mod (c30-8 / any)
                                 :month 5)
                    :polarity (c30-18 / amr-unknown)))

# ::snt No need to apologise just as confused as anyone! As far as I heard contact was lost at ft
# ::tokens ["No", "need", "to", "apologise", "just", "as", "confused", "as", "anyone", "!", "As", "far", "as", "I", "heard", "contact", "was", "lost", "at", "ft"]
# ::lemmas ["no", "need", "to", "apologise", "just", "as", "confuse", "as", "anyone", "!", "as", "far", "as", "i", "hear", "contact", "be", "lose", "at", "ft"]
(c31-3 / multi-sentence
       :snt1 (c31-9 / need-01
                    :ARG1 (c31-14 / apologize-01)
                    :ARG1-of (c31-12 / cause-01
                                     :ARG0 (c31-11 / confuse-01
                                                   :ARG1 (c31-7 / anyone)
                                                   :ARG2-of (c31-0 / have-degree-91
                                                                   :ARG1 c31-7
                                                                   :ARG3 (c31-6 / equal)
                                                                   :ARG4 c31-7))
                                     :mod (c31-1 / just))
                    :polarity -)
       :snt2 (c31-2 / hear-01
                    :ARG0 (c31-8 / i)
                    :ARG1 (c31-4 / lose-02
                                 :ARG1 (c31-13 / contact-01)
                                 :location (c31-5 / facility
                                                  :name (c31-10 / name
                                                                :op1 "FT")))))

# ::snt at am
# ::tokens ["at", "am"]
# ::lemmas ["at", "be"]
(c32-0 / am)

# ::snt TV-News said there was a mayday call.
# ::tokens ["TV", "-", "News", "said", "there", "was", "a", "mayday", "call", "."]
# ::lemmas ["tv", "-", "News", "say", "there", "be", "a", "mayday", "call", "."]
(c33-5 / say-01
       :ARG0 (c33-1 / broadcast-program
                    :name (c33-2 / name
                                 :op1 "TV-News"))
       :ARG1 (c33-4 / call-02
                    :time (c33-3 / date-entity
                                 :dayperiod (c33-0 / mayday))))

# ::snt So they were wrong, they did not use MAYDAY at anytime... Marseille controler
# ::tokens ["So", "they", "were", "wrong", ",", "they", "did", "not", "use", "MAYDAY", "at", "anytime", "...", "Marseille", "controler"]
# ::lemmas ["so", "they", "be", "wrong", ",", "they", "do", "not", "use", "MAYDAY", "at", "anytime", "...", "Marseille", "controler"]
(c34-1 / multi-sentence
       :snt1 (c34-0 / wrong-04
                    :ARG1 (c34-10 / they))
       :snt2 (c34-2 / use-01
                    :ARG0 (c34-9 / they)
                    :time (c34-6 / date-entity
                                 :dayperiod (c34-3 / night)
                                 :month 5)
                    :time (c34-11 / anytime)
                    :polarity -)
       :snt3 (c34-5 / person
                    :ARG0-of (c34-7 / control-01
                                    :ARG1 (c34-8 / city
                                                 :name (c34-4 / name
                                                              :op1 "Marseille")))))

# ::snt hmmm the aircraft climbed to then descended at -4000ft per min then sent distress call at ft
# ::tokens ["hmmm", "the", "aircraft", "climbed", "to", "then", "descended", "at", "-4000", "ft", "per", "min", "then", "sent", "distress", "call", "at", "ft"]
# ::lemmas ["hmmm", "the", "aircraft", "climb", "to", "then", "descend", "at", "-4000", "ft", "per", "min", "then", "send", "distress", "call", "at", "ft"]
(c35-12 / and
        :op1 (c35-7 / climb-01
                    :ARG0 (c35-4 / aircraft))
        :op2 (c35-6 / descend-01
                    :ARG0 c35-4
                    :manner (c35-5 / rate-entity-91
                                   :ARG1 (c35-1 / distance-quantity
                                                :unit (c35-2 / foot)
                                                :quant 4000)
                                   :ARG2 (c35-11 / temporal-quantity
                                                 :unit (c35-3 / minute)
                                                 :quant 1)))
        :op3 (c35-10 / send-01
                     :ARG0 c35-4
                     :ARG1 (c35-8 / call-03
                                  :ARG1 (c35-13 / distress-01))
                     :manner c35-1
                     :unit c35-2
                     :quant 1)
        :time (c35-9 / then)
        :mod (c35-0 / hmm
                    :mode expressive))

# ::snt ok, thanks
# ::tokens ["ok", ",", "thanks"]
# ::lemmas ["ok", ",", "thank"]
(c36-2 / thank-01
       :ARG0 (c36-3 / i)
       :ARG1 (c36-1 / you)
       :ARG1-of (c36-0 / okay-04))

# ::snt mayday broadcast, unknown if verbal or digital
# ::tokens ["mayday", "broadcast", ",", "unknown", "if", "verbal", "or", "digital"]
# ::lemmas ["mayday", "broadcast", ",", "unknown", "if", "verbal", "or", "digital"]
(c37-0 / broadcast-program
       :name (c37-2 / name
                    :op1 "Mayday")
       :ARG1-of (c37-5 / know-01
                       :ARG0 (c37-1 / or
                                    :op1 (c37-3 / verbal)
                                    :op2 (c37-4 / digital))
                       :polarity -))
