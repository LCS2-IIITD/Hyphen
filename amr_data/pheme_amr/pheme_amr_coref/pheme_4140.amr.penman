# ::snt an eye for an eye-methinks
# ::tokens ["an", "eye", "for", "an", "eye", "-", "methinks"]
# ::lemmas ["an", "eye", "for", "an", "eye", "-", "methink"]
(c1-0 / have-purpose-91
      :ARG1 (c1-1 / eye)
      :ARG2 (c1-3 / eye
                  :part-of (c1-2 / person)))

# ::snt Ahahahahahah
# ::tokens ["Ahahahahahah"]
# ::lemmas ["ahahahahahah"]
(c2-0 / ah
      :mode expressive)

# ::snt It does save a lot of taxpayers money if these eviel people are killed.
# ::tokens ["It", "does", "save", "a", "lot", "of", "taxpayers", "money", "if", "these", "eviel", "people", "are", "killed", "."]
# ::lemmas ["it", "do", "save", "a", "lot", "of", "taxpayer", "money", "if", "these", "eviel", "people", "be", "kill", "."]
(c3-8 / save-01
      :ARG0 (c3-4 / it)
      :ARG1 (c3-1 / money
                  :source (c3-6 / person
                                :ARG0-of (c3-10 / pay-01
                                                :ARG1 (c3-9 / tax-01)))
                  :quant (c3-0 / lot))
      :condition (c3-5 / kill-01
                       :ARG1 (c3-2 / person
                                   :mod (c3-7 / this)
                                   :ARG0-of (c3-3 / evade-01))))

# ::snt GET YOURSELF SOMETHING CALLED life
# ::tokens ["GET", "YOURSELF", "SOMETHING", "CALLED", "life"]
# ::lemmas ["get", "yourself", "something", "call", "life"]
(c4-3 / get-01
      :ARG0 (c4-0 / you)
      :ARG1 (c4-4 / something
                  :ARG1-of (c4-2 / call-01
                                 :ARG2 (c4-1 / life)))
      :mode imperative)

# ::snt :I can't answer that question '. Sorry lol
# ::tokens [":", "I", "ca", "n't", "answer", "that", "question", "'", ".", "Sorry", "lol"]
# ::lemmas [":", "i", "can", "not", "answer", "that", "question", "'", ".", "sorry", "lol"]
(c6-1 / multi-sentence
      :snt1 (c6-4 / possible-01
                  :ARG1 (c6-10 / answer-01
                               :ARG0 (c6-3 / i)
                               :ARG1 (c6-9 / thing
                                           :ARG1-of (c6-2 / question-01)
                                           :mod (c6-7 / that)))
                  :polarity -)
      :snt2 (c6-8 / sorry-01
                  :ARG1 (c6-6 / i)
                  :ARG2-of (c6-0 / laugh-01
                                 :ARG0 c6-6
                                 :manner (c6-5 / loud))))

# ::snt If you are for free speech then this is for you support buy it now
# ::tokens ["If", "you", "are", "for", "free", "speech", "then", "this", "is", "for", "you", "support", "buy", "it", "now"]
# ::lemmas ["if", "you", "be", "for", "free", "speech", "then", "this", "be", "for", "you", "support", "buy", "it", "now"]
(c7-5 / support-01
      :ARG0 (c7-0 / you)
      :ARG1 (c7-2 / buy-01
                  :ARG0 c7-0
                  :ARG1 (c7-6 / this)
                  :time (c7-4 / now)
                  :mode imperative)
      :condition c7-5
      :ARG0 c7-0
      :ARG1 (c7-3 / speak-01
                  :ARG3-of (c7-1 / free-04)))

# ::snt Gagged since years by the Press for breaking the silence on corruption
# ::tokens ["Gagged", "since", "years", "by", "the", "Press", "for", "breaking", "the", "silence", "on", "corruption"]
# ::lemmas ["gag", "since", "years", "by", "the", "Press", "for", "break", "the", "silence", "on", "corruption"]
(c8-6 / gag-01
      :ARG0 (c8-4 / press
                  :ARG1-of c8-6)
      :ARG2 (c8-2 / break-18
                  :ARG0 c8-4
                  :ARG1 (c8-7 / silence-01
                              :ARG1 (c8-5 / corrupt-01)))
      :time (c8-3 / since
                  :op1 (c8-1 / multiple
                             :op1 (c8-8 / temporal-quantity
                                        :unit (c8-0 / year)
                                        :quant 1))))

# ::snt I wonder how they're finding those virgins in paradise?
# ::tokens ["I", "wonder", "how", "they", "'re", "finding", "those", "virgins", "in", "paradise", "?"]
# ::lemmas ["i", "wonder", "how", "they", "be", "find", "those", "virgin", "in", "paradise", "?"]
(c10-0 / wonder-01
       :ARG0 (c10-2 / i)
       :ARG1 (c10-7 / thing
                    :manner-of (c10-1 / find-01
                                      :ARG0 (c10-6 / they)
                                      :ARG1 (c10-3 / virgin
                                                   :mod (c10-4 / that))
                                      :location (c10-5 / paradise))))

# ::snt no, better they are killed fast,like in Ottawa, Australia and the U.S.,then they cannot have fans
# ::tokens ["no", ",", "better", "they", "are", "killed", "fast", ",", "like", "in", "Ottawa", ",", "Australia", "and", "the", "U.S.,then", "they", "can", "not", "have", "fans"]
# ::lemmas ["no", ",", "well", "they", "be", "kill", "fast", ",", "like", "in", "Ottawa", ",", "Australia", "and", "the", "u.s.,then", "they", "can", "not", "have", "fan"]
(c11-0 / have-condition-91
       :ARG1 (c11-5 / possible-01
                    :ARG1 (c11-13 / have-03
                                  :ARG0 (c11-12 / they)
                                  :ARG1 (c11-1 / fan))
                    :polarity -)
       :ARG2 (c11-2 / kill-01
                    :ARG1 c11-12
                    :ARG1-of (c11-3 / fast-02)
                    :example (c11-11 / and
                                     :op1 (c11-7 / city
                                                 :name (c11-4 / name
                                                              :op1 "Ottawa"))
                                     :op2 (c11-6 / city
                                                 :name (c11-8 / name
                                                              :op1 "Australia"))
                                     :op3 (c11-10 / city
                                                  :name (c11-9 / name
                                                               :op1 "U.S.")))))

# ::snt Neither can them fuckers!
# ::tokens ["Neither", "can", "them", "fuckers", "!"]
# ::lemmas ["neither", "can", "they", "fucker", "!"]
(c12-0 / possible-01
       :ARG1 (c12-3 / person
                    :ARG0-of (c12-1 / fuck-01)
                    :domain (c12-2 / they))
       :polarity -)
