# ::snt thnx
# ::tokens ["thnx"]
# ::lemmas ["thnx"]
(c1-1 / person
      :name (c1-0 / name
                  :op1 "thnx"))

# ::snt They call themselves 'AQ-yemen'? cuz i don't speak french.
# ::tokens ["They", "call", "themselves", "'", "AQ", "-", "yemen", "'", "?", "cuz", "i", "do", "n't", "speak", "french", "."]
# ::lemmas ["they", "call", "themselves", "'", "AQ", "-", "yemen", "'", "?", "cuz", "i", "do", "not", "speak", "french", "."]
(c2-6 / call-01
      :ARG0 (c2-8 / they
                  :ARG1-of c2-6)
      :ARG2 (c2-4 / person
                  :mod (c2-5 / country
                             :name (c2-2 / name
                                         :op1 "AQ-Yemen")))
      :polarity (c2-10 / amr-unknown)
      :ARG1-of (c2-7 / cause-01
                     :ARG0 (c2-9 / speak-01
                                 :ARG0 (c2-1 / i)
                                 :ARG3 (c2-0 / language
                                             :name (c2-3 / name
                                                         :op1 "French"))
                                 :polarity -)))

# ::snt , page
# ::tokens [",", "page"]
# ::lemmas [",", "page"]
(c3-0 / page)

# ::snt ": "
# ::tokens ["\"", ":", "\""]
# ::lemmas ["\"", ":", "\""]
(c4-0 / quote-01)

# ::snt Thanks.
# ::tokens ["Thanks", "."]
# ::lemmas ["thank", "."]
(c5-0 / thank-01)

# ::snt which issue?10th or th
# ::tokens ["which", "issue?10th", "or", "th"]
# ::lemmas ["which", "issue?10th", "or", "th"]
(c6-2 / issue-02
      :ARG0 (c6-1 / amr-unknown)
      :ord (c6-0 / ordinal-entity
                 :value (c6-3 / or
                              :op1 10
                              :op2 28)))

# ::snt mh soo are them terrorists Yankees iki
# ::tokens ["mh", "soo", "are", "them", "terrorists", "Yankees", "iki"]
# ::lemmas ["mh", "soo", "be", "they", "terrorist", "Yankees", "iki"]
(c7-7 / say-01
      :ARG0 (c7-2 / i)
      :ARG1 (c7-8 / terrorist
                  :domain (c7-6 / they)
                  :mod (c7-5 / person
                             :name (c7-3 / name
                                         :op1 "Yankees")))
      :ARG2 (c7-9 / person
                  :name (c7-4 / name
                              :op1 "Iiki"))
      :mod (c7-1 / so)
      :mod (c7-0 / hmm
                 :mode expressive))

# ::snt AQ have mentioned it but still hard say AQ is responsible for current attack. need to wait for more infors
# ::tokens ["AQ", "have", "mentioned", "it", "but", "still", "hard", "say", "AQ", "is", "responsible", "for", "current", "attack", ".", "need", "to", "wait", "for", "more", "infors"]
# ::lemmas ["AQ", "have", "mention", "it", "but", "still", "hard", "say", "AQ", "be", "responsible", "for", "current", "attack", ".", "need", "to", "wait", "for", "more", "infor"]
(c8-3 / multi-sentence
      :snt1 (c8-10 / contrast-01
                   :ARG1 (c8-8 / mention-01
                               :ARG0 (c8-9 / criminal-organization
                                           :name (c8-6 / name
                                                       :op1 "AQ"))
                               :ARG1 (c8-5 / it))
                   :ARG2 (c8-14 / say-01
                                :ARG1 (c8-11 / responsible-01
                                             :ARG0 c8-9
                                             :ARG1 (c8-15 / attack-01
                                                          :time (c8-13 / current)))
                                :ARG1-of (c8-0 / hard-02)
                                :mod (c8-4 / still)))
      :snt2 (c8-7 / need-01
                  :ARG1 (c8-1 / wait-01
                              :ARG2 (c8-12 / infuriate-01
                                           :quant (c8-2 / more)))))

# ::snt Lone wolf attack or part of a wider plot?
# ::tokens ["Lone", "wolf", "attack", "or", "part", "of", "a", "wider", "plot", "?"]
# ::lemmas ["Lone", "wolf", "attack", "or", "part", "of", "a", "wide", "plot", "?"]
(c9-8 / amr-choice
      :op1 (c9-4 / attack-01
                 :ARG0 (c9-1 / wolf
                             :mod (c9-2 / lone)))
      :op2 (c9-6 / part
                 :part-of (c9-7 / plot-01
                                :ARG1-of (c9-0 / have-degree-91
                                               :ARG2 (c9-5 / wide-02
                                                           :ARG1 c9-7)
                                               :ARG3 (c9-3 / more)))))

# ::snt I hope that idiot pastor will receive the same thing
# ::tokens ["I", "hope", "that", "idiot", "pastor", "will", "receive", "the", "same", "thing"]
# ::lemmas ["i", "hope", "that", "idiot", "pastor", "will", "receive", "the", "same", "thing"]
(c10-0 / hope-01
       :ARG0 (c10-1 / i)
       :ARG1 (c10-3 / receive-01
                    :ARG0 (c10-2 / pastor
                                 :mod (c10-4 / idiot)
                                 :mod (c10-7 / that))
                    :ARG1 (c10-5 / thing
                                 :ARG1-of (c10-6 / same-01))))
