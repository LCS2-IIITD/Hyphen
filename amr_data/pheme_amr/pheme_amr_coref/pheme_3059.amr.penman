# ::snt - not the footprints of catastrophic failure ?
# ::tokens ["-", "not", "the", "footprints", "of", "catastrophic", "failure", "?"]
# ::lemmas ["-", "not", "the", "footprint", "of", "catastrophic", "failure", "?"]
(c1-0 / footprint
      :poss (c1-3 / fail-01
                  :mod (c1-1 / catastrophic))
      :polarity (c1-2 / amr-unknown)
      :polarity -)

# ::snt that's what this chart shows
# ::tokens ["that", "'s", "what", "this", "chart", "shows"]
# ::lemmas ["that", "be", "what", "this", "chart", "show"]
(c2-0 / show-01
      :ARG0 (c2-2 / chart
                  :mod (c2-1 / this))
      :ARG1 (c2-3 / that))

# ::snt m/s equals jump from a hight of meters.
# ::tokens ["m", "/", "s", "equals", "jump", "from", "a", "hight", "of", "meters", "."]
# ::lemmas ["m", "/", "s", "equals", "jump", "from", "a", "hight", "of", "meters", "."]
(c3-3 / equal-01
      :ARG1 (c3-6 / rate-entity-91
                  :ARG1 (c3-5 / distance-quantity
                              :unit (c3-2 / millimeter)
                              :quant 1)
                  :ARG2 (c3-8 / temporal-quantity
                              :unit (c3-7 / second)
                              :quant 1))
      :ARG2 (c3-0 / jump-01
                  :ARG3 (c3-1 / distance-quantity
                              :unit (c3-4 / meter)
                              :quant 1)))

# ::snt Not dramatically - ca. m/s
# ::tokens ["Not", "dramatically", "-", "ca", ".", "m", "/", "s"]
# ::lemmas ["not", "dramatically", "-", "can", ".", "m", "/", "s"]
(c4-0 / have-manner-91
      :ARG2 (c4-4 / dramatic)
      :ARG1-of (c4-1 / mean-01
                     :ARG2 (c4-2 / possible-01
                                 :ARG1 (c4-3 / respond-01
                                             :ARG2 (c4-6 / signal-07
                                                         :ARG1 (c4-5 / computer)))))
      :polarity -)

# ::snt We likely would have seen a pause between power loss and APU start up in the ADS-B feed. And if APU on, why no control
# ::tokens ["We", "likely", "would", "have", "seen", "a", "pause", "between", "power", "loss", "and", "APU", "start", "up", "in", "the", "ADS", "-", "B", "feed", ".", "And", "if", "APU", "on", ",", "why", "no", "control"]
# ::lemmas ["we", "likely", "would", "have", "see", "a", "pause", "between", "power", "loss", "and", "APU", "start", "up", "in", "the", "ADS", "-", "b", "feed", ".", "and", "if", "APU", "on", ",", "why", "no", "control"]
(c5-2 / multi-sentence
      :snt1 (c5-1 / likely-01
                  :ARG1 (c5-13 / see-01
                               :ARG0 (c5-0 / we)
                               :ARG1 (c5-10 / pause-01
                                            :ARG1 (c5-12 / lose-02
                                                         :ARG1 (c5-14 / power))
                                            :ARG2 (c5-6 / start-up-05
                                                        :ARG1 (c5-3 / feed-01
                                                                    :ARG2 (c5-4 / product
                                                                                :name (c5-8 / name
                                                                                            :op1 "ADS-B")))))))
      :snt2 (c5-15 / and
                   :op2 (c5-11 / control-01
                               :ARG0 (c5-7 / amr-unknown)
                               :condition (c5-5 / on-01
                                                :ARG1 c5-4
                                                :name (c5-9 / name
                                                            :op1 "APU"))
                               :polarity -)))

# ::snt good graphic
# ::tokens ["good", "graphic"]
# ::lemmas ["good", "graphic"]
(c6-1 / graphic
      :ARG1-of (c6-0 / good-02))

# ::snt Maybe all else did fail!
# ::tokens ["Maybe", "all", "else", "did", "fail", "!"]
# ::lemmas ["you", "all", "else", "do", "fail", "!"]
(c7-0 / possible-01
      :ARG1 (c7-1 / fail-01
                  :ARG1 (c7-3 / all
                              :mod (c7-2 / else))))

# ::snt The A320 should have a RAT, but would be used when all else fails
# ::tokens ["The", "A320", "should", "have", "a", "RAT", ",", "but", "would", "be", "used", "when", "all", "else", "fails"]
# ::lemmas ["the", "A320", "should", "have", "a", "RAT", ",", "but", "would", "be", "use", "when", "all", "else", "fail"]
(c8-10 / contrast-01
       :ARG1 (c8-9 / recommend-01
                   :ARG1 (c8-0 / have-03
                               :ARG0 (c8-11 / aircraft-type
                                            :name (c8-8 / name
                                                        :op1 "A320"))
                               :ARG1 (c8-7 / rate-entity-91
                                           :ARG2 (c8-2 / monetary-quantity
                                                       :ARG1-of (c8-5 / rare-02)))))
       :ARG2 (c8-3 / use-01
                   :ARG1 c8-11
                   :condition (c8-1 / fail-01
                                    :ARG1 (c8-6 / all
                                                :mod (c8-4 / else)))))

# ::snt looks like a cabin depressurisation and emerg descent below MSA unfortunately!
# ::tokens ["looks", "like", "a", "cabin", "depressurisation", "and", "emerg", "descent", "below", "MSA", "unfortunately", "!"]
# ::lemmas ["look", "like", "a", "cabin", "depressurisation", "and", "emerg", "descent", "below", "MSA", "unfortunately", "!"]
(c9-1 / look-02
      :ARG1 (c9-9 / and
                  :op1 (c9-7 / depressurize-01
                             :ARG1 (c9-8 / cabin))
                  :op2 (c9-0 / descend-01
                             :ARG1 (c9-4 / below
                                         :op1 (c9-2 / mountain
                                                    :name (c9-6 / name
                                                                :op1 "MSA")))
                             :mod (c9-5 / emergent)))
      :ARG2-of (c9-3 / fortunate-01
                     :polarity -))

# ::snt Because it has onboard generator (APU?) that can give power to instruments and transponders.
# ::tokens ["Because", "it", "has", "onboard", "generator", "(", "APU", "?", ")", "that", "can", "give", "power", "to", "instruments", "and", "transponders", "."]
# ::lemmas ["because", "it", "have", "onboard", "generator", "(", "APU", "?", ")", "that", "can", "give", "power", "to", "instrument", "and", "transponder", "."]
(c10-5 / cause-01
       :ARG0 (c10-0 / have-03
                    :ARG0 (c10-2 / it)
                    :ARG1 (c10-6 / generator
                                 :mod (c10-1 / onboard)
                                 :ARG0-of (c10-4 / give-01
                                                 :ARG1 (c10-3 / power)
                                                 :ARG2 (c10-10 / and
                                                               :op1 (c10-7 / instrument)
                                                               :op2 (c10-8 / transponder))
                                                 :ARG1-of (c10-9 / possible-01)))))

# ::snt And it was really really fast. Doesn't seem to be a controlled descent.
# ::tokens ["And", "it", "was", "really", "really", "fast", ".", "Does", "n't", "seem", "to", "be", "a", "controlled", "descent", "."]
# ::lemmas ["and", "it", "be", "really", "really", "fast", ".", "do", "not", "seem", "to", "be", "a", "control", "descent", "."]
(c11-1 / multi-sentence
       :snt1 (c11-7 / and
                    :op2 (c11-0 / fast-02
                                :ARG1 (c11-2 / it)
                                :degree (c11-3 / really)))
       :snt2 (c11-6 / seem-01
                    :ARG1 (c11-4 / descend-01
                                 :ARG1-of (c11-5 / control-01))
                    :polarity -))

# ::snt the must have been gliding ie no engine power. It had a speed of kts whilst descending ft/ mins ratio :10
# ::tokens ["the", "must", "have", "been", "gliding", "ie", "no", "engine", "power", ".", "It", "had", "a", "speed", "of", "kts", "whilst", "descending", "ft/", "mins", "ratio", ":", "10"]
# ::lemmas ["the", "must", "have", "be", "glide", "ie", "no", "engine", "power", ".", "it", "have", "a", "speed", "of", "kts", "whilst", "descend", "ft/", "min", "ratio", ":", "10"]
(c12-1 / multi-sentence
       :snt1 (c12-2 / obligate-01
                    :ARG2 (c12-9 / glide-01
                                 :ARG1 (c12-5 / it)
                                 :ARG1-of (c12-6 / mean-01
                                                 :ARG2 (c12-7 / power-01
                                                              :ARG0 (c12-3 / engine)
                                                              :polarity -))))
       :snt2 (c12-11 / speed-01
                     :ARG1 (c12-10 / it)
                     :ARG2 (c12-4 / speed-quantity
                                  :unit (c12-0 / mile-per-hour)
                                  :quant 10)
                     :time (c12-8 / descend-01
                                  :ARG0 c12-10)))

# ::snt Scary altitude &amp; speed chart of . Aircraft entered a steep but constant descent.
# ::tokens ["Scary", "altitude", "&", "amp", ";", "speed", "chart", "of", ".", "Aircraft", "entered", "a", "steep", "but", "constant", "descent", "."]
# ::lemmas ["scary", "altitude", "&", "amp", ";", "speed", "chart", "of", ".", "aircraft", "enter", "a", "steep", "but", "constant", "descent", "."]
(c13-1 / multi-sentence
       :snt1 (c13-12 / and
                     :op1 (c13-4 / altitude
                                 :ARG1-of (c13-10 / scary-03))
                     :op2 (c13-5 / amp))
       :snt2 (c13-7 / chart-01
                    :ARG1 (c13-2 / speed))
       :snt3 (c13-3 / enter-01
                    :ARG0 (c13-11 / aircraft)
                    :ARG1 (c13-6 / descend-01
                                 :ARG0 c13-11
                                 :ARG1-of (c13-0 / steep-02
                                                 :ARG1-of (c13-8 / contrast-01
                                                                 :ARG2 (c13-9 / constant))))))

# ::snt Many questions to be answered here. If gliding (no engine power), how did transponder keep transmitting ADS-B. APU? RAT?
# ::tokens ["Many", "questions", "to", "be", "answered", "here", ".", "If", "gliding", "(", "no", "engine", "power", ")", ",", "how", "did", "transponder", "keep", "transmitting", "ADS", "-", "B.", "APU", "?", "RAT", "?"]
# ::lemmas ["many", "question", "to", "be", "answer", "here", ".", "if", "gliding", "(", "no", "engine", "power", ")", ",", "how", "do", "transponder", "keep", "transmit", "ADS", "-", "B.", "APU", "?", "RAT", "?"]
(c14-0 / multi-sentence
       :snt1 (c14-5 / answer-01
                    :ARG1 (c14-10 / question-01
                                  :quant (c14-13 / many))
                    :location (c14-6 / here))
       :snt2 (c14-4 / have-condition-91
                    :ARG1 (c14-16 / keep-02
                                  :ARG0 (c14-19 / transponder)
                                  :ARG1 (c14-18 / transmit-01
                                                :ARG0 c14-19
                                                :ARG1 (c14-2 / product
                                                             :name (c14-11 / name
                                                                           :op1 "ADS-B")))
                                  :manner (c14-15 / amr-unknown))
                    :ARG2 (c14-7 / fly-01
                                 :ARG1 c14-19
                                 :ARG1-of (c14-3 / power-01
                                                 :ARG0 (c14-9 / engine)
                                                 :polarity -)))
       :snt3 (c14-12 / and
                     :op1 (c14-8 / product
                                 :name (c14-17 / name
                                               :op1 "APU"))
                     :op2 (c14-14 / product
                                  :name (c14-1 / name
                                               :op1 "RAT"))))

# ::snt not sure if A320 has ram air turbine and not use APU.
# ::tokens ["not", "sure", "if", "A320", "has", "ram", "air", "turbine", "and", "not", "use", "APU", "."]
# ::lemmas ["not", "sure", "if", "A320", "have", "ram", "air", "turbine", "and", "not", "use", "APU", "."]
(c15-8 / sure-02
       :ARG1 (c15-10 / and
                     :op1 (c15-0 / have-03
                                 :ARG0 (c15-2 / aircraft-type
                                              :name (c15-3 / name
                                                           :op1 "A320"))
                                 :ARG1 (c15-9 / turbine
                                              :mod (c15-4 / air)
                                              :ARG1-of (c15-6 / ram-02)))
                     :op2 (c15-1 / use-01
                                 :ARG0 c15-2
                                 :ARG1 (c15-5 / product
                                              :name (c15-7 / name
                                                           :op1 "APU"))
                                 :polarity -))
       :polarity -)

# ::snt :altitude &amp; speed chart of . Plane was in steep descent via /
# ::tokens [":", "altitude", "&", "amp", ";", "speed", "chart", "of", ".", "Plane", "was", "in", "steep", "descent", "via", "/"]
# ::lemmas [":", "altitude", "&", "amp", ";", "speed", "chart", "of", ".", "Plane", "be", "in", "steep", "descent", "via", "/"]
(c16-1 / multi-sentence
       :snt1 (c16-9 / and
                    :op1 (c16-3 / altitude)
                    :op2 (c16-4 / amp)
                    :op3 (c16-7 / chart-01
                                :ARG1 (c16-8 / speed)))
       :snt2 (c16-6 / descend-01
                    :ARG0 (c16-5 / plane)
                    :manner (c16-2 / steep)
                    :path (c16-0 / slash)))

# ::snt MORE: altitude &amp; speed chart of . Plane was in a steep, constant descent. via /
# ::tokens ["MORE", ":", "altitude", "&", "amp", ";", "speed", "chart", "of", ".", "Plane", "was", "in", "a", "steep", ",", "constant", "descent", ".", "via", "/"]
# ::lemmas ["more", ":", "altitude", "&", "amp", ";", "speed", "chart", "of", ".", "Plane", "be", "in", "a", "steep", ",", "constant", "descent", ".", "via", "/"]
(c17-0 / multi-sentence
       :snt1 (c17-12 / and
                     :op1 (c17-2 / altitude)
                     :op2 (c17-3 / amp)
                     :op3 (c17-6 / chart-01
                                 :ARG1 (c17-10 / speed))
                     :mod (c17-4 / more))
       :snt2 (c17-5 / descend-01
                    :ARG0 (c17-7 / plane)
                    :ARG1-of (c17-1 / steep-02)
                    :mod (c17-8 / constant))
       :snt3 (c17-9 / via
                    :op2 (c17-11 / thing)))

# ::snt Terminal speed shows no acceleration or deceleration while altitude drops dramatically. Thoughts ?
# ::tokens ["Terminal", "speed", "shows", "no", "acceleration", "or", "deceleration", "while", "altitude", "drops", "dramatically", ".", "Thoughts", "?"]
# ::lemmas ["terminal", "speed", "show", "no", "acceleration", "or", "deceleration", "while", "altitude", "drop", "dramatically", ".", "thought", "?"]
(c18-1 / multi-sentence
       :snt1 (c18-8 / show-01
                    :ARG0 (c18-3 / speed
                                 :mod (c18-9 / terminal))
                    :ARG1 (c18-2 / or
                                 :op1 (c18-10 / accelerate-01)
                                 :op2 (c18-6 / decelerate-01)
                                 :polarity -)
                    :time (c18-0 / drop-01
                                 :ARG1 (c18-4 / altitude)
                                 :manner (c18-11 / dramatic)))
       :snt2 (c18-7 / think-01
                    :polarity (c18-5 / amr-unknown)))

# ::snt according graphics the plane entered a decent after minutes, not minutes
# ::tokens ["according", "graphics", "the", "plane", "entered", "a", "decent", "after", "minutes", ",", "not", "minutes"]
# ::lemmas ["accord", "graphic", "the", "plane", "enter", "a", "decent", "after", "minutes", ",", "not", "minute"]
(c19-10 / say-01
        :ARG0 (c19-7 / graphics)
        :ARG1 (c19-2 / enter-01
                     :ARG0 (c19-4 / plane)
                     :ARG1 (c19-5 / decent)
                     :time (c19-12 / after
                                   :op1 (c19-3 / and
                                               :op1 (c19-1 / multiple
                                                           :op1 (c19-11 / temporal-quantity
                                                                        :unit (c19-6 / minute)
                                                                        :quant 1))
                                               :op2 (c19-0 / multiple
                                                           :op1 (c19-9 / temporal-quantity
                                                                       :unit (c19-8 / minute)
                                                                       :quant 1))))))

# ::snt that's such an odd drop...
# ::tokens ["that", "'s", "such", "an", "odd", "drop", "..."]
# ::lemmas ["that", "be", "such", "an", "odd", "drop", "..."]
(c20-1 / drop
       :mod (c20-0 / odd
                   :degree (c20-3 / such))
       :domain (c20-2 / that))

# ::snt It's m/s...
# ::tokens ["It", "'s", "m", "/", "s", "..."]
# ::lemmas ["it", "be", "m", "/", "s", "..."]
(c21-1 / thing
       :name (c21-0 / name
                    :op1 "M/S"))

# ::snt quick, not catastrophic ?
# ::tokens ["quick", ",", "not", "catastrophic", "?"]
# ::lemmas ["quick", ",", "not", "catastrophic", "?"]
(c22-2 / contrast-01
       :polarity (c22-3 / amr-unknown)
       :ARG1 (c22-1 / quick-02)
       :ARG2 (c22-0 / catastrophic
                    :polarity -))
