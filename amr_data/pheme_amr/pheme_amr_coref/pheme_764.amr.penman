# ::snt It will have to be after dark when emerges; vampires hate direct sunlight.
# ::tokens ["It", "will", "have", "to", "be", "after", "dark", "when", "emerges", ";", "vampires", "hate", "direct", "sunlight", "."]
# ::lemmas ["it", "will", "have", "to", "be", "after", "dark", "when", "emerge", ";", "vampire", "hate", "direct", "sunlight", "."]
(c1-2 / multi-sentence
      :snt1 (c1-4 / obligate-01
                  :ARG2 (c1-3 / be-temporally-at-91
                              :ARG2 (c1-9 / after
                                          :op1 (c1-7 / darken-01))
                              :time-of (c1-5 / emerge-01)))
      :snt2 (c1-0 / hate-01
                  :ARG0 (c1-6 / vulture)
                  :ARG1 (c1-8 / sunlight
                              :ARG1-of (c1-1 / direct-02))))

# ::snt time to be cautious for all near him in case he emerges again tomorrow
# ::tokens ["time", "to", "be", "cautious", "for", "all", "near", "him", "in", "case", "he", "emerges", "again", "tomorrow"]
# ::lemmas ["time", "to", "be", "cautious", "for", "all", "near", "he", "in", "case", "he", "emerge", "again", "tomorrow"]
(c2-6 / time
      :purpose (c2-4 / cautious-02
                     :ARG0 (c2-7 / all
                                 :ARG1-of (c2-3 / near-02
                                                :ARG2 (c2-0 / he)))
                     :condition (c2-1 / emerge-01
                                      :ARG0 c2-0
                                      :mod (c2-2 / again)
                                      :time (c2-5 / tomorrow))))

# ::snt If alive, am wondering if realises that millions wish he was not.
# ::tokens ["If", "alive", ",", "am", "wondering", "if", "realises", "that", "millions", "wish", "he", "was", "not", "."]
# ::lemmas ["if", "alive", ",", "be", "wonder", "if", "realise", "that", "millions", "wish", "he", "be", "not", "."]
(c3-1 / wonder-01
      :ARG0 (c3-4 / i)
      :ARG1 (c3-8 / truth-value
                  :polarity-of (c3-7 / realize-01
                                     :ARG0 c3-4
                                     :ARG1 (c3-5 / wish-01
                                                 :ARG0 (c3-6 / person
                                                             :quant (c3-3 / multiple
                                                                          :op1 1000000))
                                                 :ARG1 (c3-0 / have-polarity-91
                                                             :ARG1 (c3-9 / he)
                                                             :ARG2 -))))
      :condition (c3-2 / live-01
                       :ARG0 c3-4))

# ::snt Photoshopped probably. No info though. No one knows if he is alive or dead.
# ::tokens ["Photoshopped", "probably", ".", "No", "info", "though", ".", "No", "one", "knows", "if", "he", "is", "alive", "or", "dead", "."]
# ::lemmas ["Photoshopped", "probably", ".", "no", "info", "though", ".", "no", "one", "know", "if", "he", "be", "alive", "or", "dead", "."]
(c4-2 / multi-sentence
      :snt1 (c4-6 / photoshop-01
                  :mod (c4-10 / probable))
      :snt2 (c4-0 / have-concession-91
                  :ARG1 (c4-4 / information
                              :polarity -))
      :snt3 (c4-9 / know-01
                  :ARG0 (c4-5 / no-one)
                  :ARG1 (c4-8 / truth-value
                              :polarity-of (c4-3 / or
                                                 :op1 (c4-1 / live-01
                                                            :ARG0 (c4-11 / he))
                                                 :op2 (c4-7 / die-01
                                                            :ARG1 c4-11)))))

# ::snt since your last post I don't know if you are alive or dead. What does that prove
# ::tokens ["since", "your", "last", "post", "I", "do", "n't", "know", "if", "you", "are", "alive", "or", "dead", ".", "What", "does", "that", "prove"]
# ::lemmas ["since", "your", "last", "post", "i", "do", "not", "know", "if", "you", "be", "alive", "or", "dead", ".", "what", "do", "that", "prove"]
(c5-2 / multi-sentence
      :snt1 (c5-5 / know-01
                  :ARG0 (c5-4 / i)
                  :ARG1 (c5-11 / truth-value
                               :polarity-of (c5-3 / or
                                                  :op1 (c5-1 / live-01
                                                             :ARG0 (c5-0 / you))
                                                  :op2 (c5-7 / die-01
                                                             :ARG1 c5-0)))
                  :time (c5-9 / since
                              :op1 (c5-6 / post-01
                                         :ARG0 c5-0
                                         :mod (c5-8 / last)))
                  :polarity -)
      :snt2 (c5-12 / prove-01
                   :ARG0 (c5-10 / that)
                   :ARG1 (c5-13 / amr-unknown)))

# ::snt They would never bury in a wood casket you idiots. PUTIN LIVES
# ::tokens ["They", "would", "never", "bury", "in", "a", "wood", "casket", "you", "idiots", ".", "PUTIN", "LIVES"]
# ::lemmas ["they", "would", "never", "bury", "in", "a", "wood", "casket", "you", "idiot", ".", "PUTIN", "live"]
(c6-3 / multi-sentence
      :snt1 (c6-4 / bury-01
                  :ARG0 (c6-8 / they)
                  :ARG1 (c6-0 / you
                              :mod (c6-6 / idiot))
                  :ARG2 (c6-7 / casket
                              :consist-of (c6-1 / wood))
                  :time (c6-5 / ever)
                  :polarity -)
      :snt2 (c6-2 / live-01
                  :ARG0 c6-0
                  :mode imperative))
