# ::snt ia that's them. And I've seen enough of it to have an opinion
# ::tokens ["ia", "that", "'s", "them", ".", "And", "I", "'ve", "seen", "enough", "of", "it", "to", "have", "an", "opinion"]
# ::lemmas ["ia", "that", "be", "they", ".", "and", "i", "'ve", "see", "enough", "of", "it", "to", "have", "an", "opinion"]
(c1-1 / multi-sentence
      :snt1 (c1-7 / they
                  :domain (c1-6 / that))
      :snt2 (c1-8 / and
                  :op2 (c1-0 / have-quant-91
                             :ARG1 (c1-4 / it)
                             :ARG3 (c1-3 / enough)
                             :ARG6 (c1-2 / opine-01
                                         :ARG0 (c1-5 / i)))))

# ::snt Info penting!! RT Important things to remember during - thanks to
# ::tokens ["Info", "penting", "!", "!", "RT", "Important", "things", "to", "remember", "during", "-", "thanks", "to"]
# ::lemmas ["info", "penting", "!", "!", "RT", "Important", "thing", "to", "remember", "during", "-", "thank", "to"]
(c2-1 / multi-sentence
      :snt1 (c2-4 / pent-up-02
                  :ARG1 (c2-3 / information))
      :snt2 (c2-8 / thank-01
                  :ARG1 (c2-0 / you)
                  :ARG2 (c2-7 / thing
                              :ARG1-of (c2-6 / important-01)
                              :ARG1-of (c2-5 / remember-01
                                             :time (c2-2 / event)))))

# ::snt : Important things to remember during - thanks to
# ::tokens [":", "Important", "things", "to", "remember", "during", "-", "thanks", "to"]
# ::lemmas [":", "important", "thing", "to", "remember", "during", "-", "thank", "to"]
(c3-5 / thing
      :ARG1-of (c3-2 / important-01)
      :ARG1-of (c3-3 / remember-01
                     :time (c3-1 / event))
      :ARG2-of (c3-4 / thank-01
                     :ARG1 (c3-0 / you)))

# ::snt the purpose of the self-censoring meme is to disbelieve your own eyes and groupthink
# ::tokens ["the", "purpose", "of", "the", "self", "-", "censoring", "meme", "is", "to", "disbelieve", "your", "own", "eyes", "and", "groupthink"]
# ::lemmas ["the", "purpose", "of", "the", "self", "-", "censor", "meme", "be", "to", "disbelieve", "your", "own", "eye", "and", "groupthink"]
(c4-0 / have-purpose-91
      :ARG1 (c4-2 / meme
                  :ARG0-of (c4-5 / censor-01
                                 :ARG1 (c4-7 / self)))
      :ARG2 (c4-4 / disbelieve-01
                  :ARG0 (c4-1 / you
                              :part (c4-3 / eye))
                  :ARG1 (c4-8 / and
                              :op1 c4-3
                              :op2 (c4-6 / groupthink))))

# ::snt Thanks, Connor!
# ::tokens ["Thanks", ",", "Connor", "!"]
# ::lemmas ["thank", ",", "Connor", "!"]
(c5-3 / say-01
      :ARG0 (c5-0 / i)
      :ARG1 (c5-4 / thank-01
                  :ARG0 c5-0
                  :ARG1 (c5-2 / person
                              :name (c5-1 / name
                                          :op1 "Connor")
                              :ARG2-of c5-3)))

# ::snt Cheat sheet for self-censoring is big with equalists who need all the help to deny human differences
# ::tokens ["Cheat", "sheet", "for", "self", "-", "censoring", "is", "big", "with", "equalists", "who", "need", "all", "the", "help", "to", "deny", "human", "differences"]
# ::lemmas ["cheat", "sheet", "for", "self", "-", "censoring", "be", "big", "with", "equalist", "who", "need", "all", "the", "help", "to", "deny", "human", "difference"]
(c6-2 / big
      :domain (c6-9 / sheet
                    :mod (c6-7 / cheese)
                    :purpose (c6-6 / censor-01
                                   :ARG1 (c6-3 / self)))
      :prep-with (c6-4 / equalist
                       :ARG0-of (c6-5 / need-01
                                      :ARG1 (c6-0 / help-01
                                                  :ARG1 (c6-8 / deny-01
                                                              :ARG1 (c6-1 / differ-02
                                                                          :ARG1 (c6-11 / human)))
                                                  :ARG2 c6-4
                                                  :mod (c6-10 / all)))))

# ::snt font is almost unreadable.
# ::tokens ["font", "is", "almost", "unreadable", "."]
# ::lemmas ["font", "be", "almost", "unreadable", "."]
(c7-0 / possible-01
      :ARG1 (c7-1 / decipher-01
                  :ARG1 (c7-2 / font))
      :mod (c7-3 / almost)
      :polarity -)

# ::snt yes....but how else will you get this information?
# ::tokens ["yes", "....", "but", "how", "else", "will", "you", "get", "this", "information", "?"]
# ::lemmas ["yes", "....", "but", "how", "else", "will", "you", "get", "this", "information", "?"]
(c8-3 / contrast-01
      :ARG1 (c8-0 / yes)
      :ARG2 (c8-4 / get-01
                  :ARG0 (c8-5 / you)
                  :ARG1 (c8-2 / information
                              :mod (c8-6 / this))
                  :ARG3 (c8-7 / amr-unknown
                              :mod (c8-1 / else))))

# ::snt I guess just take special interest/notes of the official police or govt statements?
# ::tokens ["I", "guess", "just", "take", "special", "interest", "/", "notes", "of", "the", "official", "police", "or", "govt", "statements", "?"]
# ::lemmas ["i", "guess", "just", "take", "special", "interest", "/", "note", "of", "the", "official", "police", "or", "govt", "statement", "?"]
(c9-12 / guess-01
       :ARG0 (c9-6 / i)
       :ARG1 (c9-14 / take-01
                    :ARG1 (c9-4 / or
                                :op1 (c9-11 / interest-01
                                            :ARG1-of (c9-13 / special-02))
                                :op2 (c9-7 / note)
                                :topic (c9-1 / or
                                             :op1 (c9-5 / state-01
                                                        :ARG0 (c9-9 / police
                                                                    :mod (c9-3 / official)))
                                             :op2 (c9-2 / state-01
                                                        :ARG0 (c9-10 / government-organization
                                                                     :ARG0-of (c9-8 / govern-01)))))
                    :mod (c9-0 / just)
                    :polarity (c9-15 / amr-unknown)))

# ::snt : Important things to remember during - thanks to food for thought!
# ::tokens [":", "Important", "things", "to", "remember", "during", "-", "thanks", "to", "food", "for", "thought", "!"]
# ::lemmas [":", "important", "thing", "to", "remember", "during", "-", "thank", "to", "food", "for", "thought", "!"]
(c10-6 / thing
       :ARG1-of (c10-2 / important-01)
       :ARG1-of (c10-4 / remember-01
                       :time (c10-1 / event))
       :ARG2-of (c10-5 / thank-01
                       :ARG1 (c10-0 / food
                                    :purpose (c10-3 / think-01))))

# ::snt I've been lucky to spend a bit of time in Australia &amp; always find Aussies to be good buggers proves it again!
# ::tokens ["I", "'ve", "been", "lucky", "to", "spend", "a", "bit", "of", "time", "in", "Australia", "&", "amp", ";", "always", "find", "Aussies", "to", "be", "good", "buggers", "proves", "it", "again", "!"]
# ::lemmas ["i", "'ve", "be", "lucky", "to", "spend", "a", "bit", "of", "time", "in", "Australia", "&", "amp", ";", "always", "find", "Aussies", "to", "be", "good", "bugger", "prove", "it", "again", "!"]
(c11-0 / multi-sentence
       :snt1 (c11-6 / lucky
                    :domain (c11-3 / spend-02
                                   :ARG0 (c11-13 / i)
                                   :ARG1 (c11-19 / time
                                                 :quant (c11-8 / bit))
                                   :ARG2 (c11-14 / be-located-at-91
                                                 :ARG1 c11-13
                                                 :ARG2 (c11-5 / and
                                                              :op1 (c11-17 / country
                                                                           :name (c11-9 / name
                                                                                        :op1 "Australia"))
                                                              :op2 (c11-2 / country
                                                                          :name (c11-16 / name
                                                                                        :op1 "Australia"))))))
       :snt2 (c11-1 / prove-01
                    :ARG0 (c11-7 / find-01
                                 :ARG0 c11-13
                                 :ARG1 (c11-4 / person
                                              :mod c11-17
                                              :ARG1-of (c11-11 / good-03
                                                               :ARG2 (c11-18 / bugger)))
                                 :time (c11-12 / always))
                    :ARG1 (c11-15 / it)
                    :mod (c11-10 / again)))

# ::snt here's the web version
# ::tokens ["here", "'s", "the", "web", "version"]
# ::lemmas ["here", "be", "the", "web", "version"]
(c12-1 / version
       :mod (c12-0 / web)
       :location (c12-2 / here))

# ::snt :full write-up of it here
# ::tokens [":", "full", "write", "-", "up", "of", "it", "here"]
# ::lemmas [":", "full", "write", "-", "up", "of", "it", "here"]
(c13-3 / be-located-at-91
       :ARG1 (c13-1 / write-up-07
                    :ARG1 (c13-4 / it)
                    :mod (c13-2 / full))
       :ARG2 (c13-0 / here))

# ::snt :Can you expand/zoom in? Try saving the pic and expanding it?
# ::tokens [":", "Can", "you", "expand", "/", "zoom", "in", "?", "Try", "saving", "the", "pic", "and", "expanding", "it", "?"]
# ::lemmas [":", "can", "you", "expand", "/", "zoom", "in", "?", "try", "save", "the", "pic", "and", "expand", "it", "?"]
(c14-1 / multi-sentence
       :snt1 (c14-8 / possible-01
                    :ARG1 (c14-10 / slash
                                  :op1 (c14-4 / expand-01
                                              :ARG0 (c14-0 / you))
                                  :op2 (c14-2 / zoom-01
                                              :ARG0 c14-0))
                    :polarity (c14-13 / amr-unknown))
       :snt2 (c14-11 / try-01
                     :ARG0 (c14-9 / you)
                     :ARG1 (c14-6 / and
                                  :op1 (c14-5 / save-02
                                              :ARG0 c14-9
                                              :ARG1 (c14-12 / picture))
                                  :op2 (c14-3 / expand-01
                                              :ARG0 c14-9
                                              :ARG1 c14-12))
                     :polarity (c14-7 / amr-unknown)
                     :mode imperative))

# ::snt that is marvellous
# ::tokens ["that", "is", "marvellous"]
# ::lemmas ["that", "be", "marvellous"]
(c15-1 / marvellous
       :domain (c15-0 / that))

# ::snt Via RT : Important things to remember during - thanks to
# ::tokens ["Via", "RT", ":", "Important", "things", "to", "remember", "during", "-", "thanks", "to"]
# ::lemmas ["via", "RT", ":", "important", "thing", "to", "remember", "during", "-", "thank", "to"]
(c16-1 / multi-sentence
       :snt1 (c16-2 / byline-91
                    :ARG0 (c16-6 / publication
                                 :name (c16-5 / name
                                              :op1 "RT")))
       :snt2 (c16-9 / thing
                    :ARG1-of (c16-4 / important-01)
                    :ARG1-of (c16-7 / remember-01
                                    :time (c16-3 / event)
                                    :ARG2-of (c16-8 / thank-01
                                                    :ARG1 (c16-0 / you)))))

# ::snt dead on!
# ::tokens ["dead", "on", "!"]
# ::lemmas ["dead", "on", "!"]
(c17-0 / on-01
       :degree (c17-1 / die-01)
       :mode expressive)

# ::snt yea I was able to make it work. Just thought it'd be helpful to point it out.
# ::tokens ["yea", "I", "was", "able", "to", "make", "it", "work", ".", "Just", "thought", "it", "'d", "be", "helpful", "to", "point", "it", "out", "."]
# ::lemmas ["yea", "i", "be", "able", "to", "make", "it", "work", ".", "just", "think", "it", "would", "be", "helpful", "to", "point", "it", "out", "."]
(c18-4 / multi-sentence
       :snt1 (c18-8 / possible-01
                    :ARG1 (c18-9 / make-02
                                 :ARG0 (c18-7 / i)
                                 :ARG1 (c18-1 / work-09
                                              :ARG1 (c18-10 / it)))
                    :mod (c18-2 / yea
                                :mode expressive))
       :snt2 (c18-11 / think-01
                     :ARG0 (c18-3 / i)
                     :ARG1 (c18-0 / helpful-04
                                  :ARG0 (c18-12 / point-out-02
                                                :ARG0 c18-3
                                                :ARG1 (c18-6 / it)))
                     :mod (c18-5 / just)))
