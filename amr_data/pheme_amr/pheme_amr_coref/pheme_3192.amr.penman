# ::snt well said Dan...
# ::tokens ["well", "said", "Dan", "..."]
# ::lemmas ["well", "say", "Dan", "..."]
(c1-4 / say-01
      :ARG0 (c1-1 / i)
      :ARG1 c1-4
      :ARG0 (c1-3 / person
                  :name (c1-2 / name
                              :op1 "Dan"))
      :mod (c1-0 / well))

# ::snt . nothing changes that or how proud I am to be a Canadian.
# ::tokens [".", "nothing", "changes", "that", "or", "how", "proud", "I", "am", "to", "be", "a", "Canadian", "."]
# ::lemmas [".", "nothing", "change", "that", "or", "how", "proud", "i", "be", "to", "be", "a", "Canadian", "."]
(c2-6 / change-01
      :ARG0 (c2-2 / nothing)
      :ARG1 (c2-0 / or
                  :op1 (c2-8 / that)
                  :op2 (c2-7 / thing
                             :degree-of (c2-4 / pride-01
                                              :ARG0 (c2-1 / i)
                                              :ARG1 (c2-9 / person
                                                          :mod (c2-5 / country
                                                                     :name (c2-3 / name
                                                                                 :op1 "Canada"))
                                                          :domain c2-1)))))

# ::snt : Ottawa is one of the world's great cities. Today's events do not change this. Amen sir.
# ::tokens [":", "Ottawa", "is", "one", "of", "the", "world", "'s", "great", "cities", ".", "Today", "'s", "events", "do", "not", "change", "this", ".", "Amen", "sir", "."]
# ::lemmas [":", "Ottawa", "be", "one", "of", "the", "world", "'s", "great", "city", ".", "Today", "'s", "event", "do", "not", "change", "this", ".", "amen", "sir", "."]
(c3-1 / multi-sentence
      :snt1 (c3-4 / include-91
                  :ARG1 (c3-7 / city
                              :name (c3-5 / name
                                          :op1 "Ottawa"))
                  :ARG2 (c3-6 / city
                              :mod (c3-8 / great)
                              :location (c3-0 / world)))
      :snt2 (c3-10 / change-01
                   :ARG0 (c3-2 / event
                               :time (c3-11 / today))
                   :ARG1 (c3-9 / this)
                   :polarity -)
      :snt3 (c3-12 / say-01
                   :ARG1 (c3-13 / Amen)
                   :ARG2 (c3-3 / sir)))

# ::snt Sad day, but we won't flinch.
# ::tokens ["Sad", "day", ",", "but", "we", "wo", "n't", "flinch", "."]
# ::lemmas ["sad", "day", ",", "but", "we", "will", "not", "flinch", "."]
(c4-0 / have-concession-91
      :ARG1 (c4-2 / flinch-01
                  :ARG1 (c4-1 / we)
                  :polarity -)
      :ARG2 (c4-3 / day
                  :ARG0-of (c4-4 / sad-02)))

# ::snt Thank you for that
# ::tokens ["Thank", "you", "for", "that"]
# ::lemmas ["thank", "you", "for", "that"]
(c5-1 / thank-01
      :ARG0 (c5-2 / i)
      :ARG1 (c5-0 / you)
      :ARG2 (c5-3 / that))

# ::snt They will never win. Ever
# ::tokens ["They", "will", "never", "win", ".", "Ever"]
# ::lemmas ["they", "will", "never", "win", ".", "ever"]
(c6-1 / multi-sentence
      :snt1 (c6-0 / win-01
                  :ARG0 (c6-5 / they)
                  :time (c6-4 / ever)
                  :polarity -)
      :snt2 (c6-2 / be-temporally-at-91
                  :ARG2 (c6-3 / ever)))

# ::snt Hell yeah!
# ::tokens ["Hell", "yeah", "!"]
# ::lemmas ["hell", "yeah", "!"]
(c7-1 / yeah
      :mod (c7-0 / hell)
      :mode expressive)

# ::snt yes Ottawa and Canada will only get stronger from this.
# ::tokens ["yes", "Ottawa", "and", "Canada", "will", "only", "get", "stronger", "from", "this", "."]
# ::lemmas ["yes", "Ottawa", "and", "Canada", "will", "only", "get", "strong", "from", "this", "."]
(c8-5 / strengthen-01
      :ARG0 (c8-6 / this)
      :ARG1 (c8-7 / and
                  :op1 (c8-4 / city
                             :name (c8-1 / name
                                         :op1 "Ottawa"))
                  :op2 (c8-3 / country
                             :name (c8-2 / name
                                         :op1 "Canada")))
      :mod (c8-0 / only))

# ::snt fuckin right Danny
# ::tokens ["fuckin", "right", "Danny"]
# ::lemmas ["fuckin", "right", "Danny"]
(c9-5 / say-01
      :ARG0 (c9-1 / i)
      :ARG1 (c9-4 / right-06
                  :ARG1 c9-1
                  :mod (c9-0 / fuck))
      :ARG2 (c9-3 / person
                  :name (c9-2 / name
                              :op1 "Danny")))

# ::snt Hell Yeah, Toolsie! Miss you guys.
# ::tokens ["Hell", "Yeah", ",", "Toolsie", "!", "Miss", "you", "guys", "."]
# ::lemmas ["Hell", "yeah", ",", "Toolsie", "!", "miss", "you", "guy", "."]
(c10-2 / multi-sentence
       :snt1 (c10-9 / say-01
                    :ARG0 (c10-3 / i)
                    :ARG1 (c10-1 / yeah
                                 :mod (c10-0 / hell)
                                 :mode expressive)
                    :ARG2 (c10-5 / person
                                 :name (c10-4 / name
                                              :op1 "Toolsie")))
       :snt2 (c10-6 / miss-01
                    :ARG0 c10-3
                    :ARG1 (c10-8 / you
                                 :mod (c10-7 / guy))
                    :mode expressive))

# ::snt this happened to Ottawa it is not Ottawa
# ::tokens ["this", "happened", "to", "Ottawa", "it", "is", "not", "Ottawa"]
# ::lemmas ["this", "happen", "to", "Ottawa", "it", "be", "not", "Ottawa"]
(c11-0 / be-located-at-91
       :ARG1 (c11-5 / this)
       :ARG2 (c11-3 / city
                    :name (c11-2 / name
                                 :op1 "Ottawa")
                    :ARG1-of (c11-1 / instead-of-91
                                    :ARG2 (c11-4 / be-located-at-91
                                                 :ARG1 c11-5
                                                 :ARG2 c11-3))))

# ::snt you're wrong dan. It makes us not only a stronger and great city but as a country brings us closer and makes us stronger
# ::tokens ["you", "'re", "wrong", "dan", ".", "It", "makes", "us", "not", "only", "a", "stronger", "and", "great", "city", "but", "as", "a", "country", "brings", "us", "closer", "and", "makes", "us", "stronger"]
# ::lemmas ["you", "be", "wrong", "dan", ".", "it", "make", "we", "not", "only", "a", "strong", "and", "great", "city", "but", "as", "a", "country", "bring", "we", "close", "and", "make", "we", "strong"]
(c12-5 / say-01
       :ARG0 (c12-16 / i)
       :ARG1 (c12-14 / wrong-04
                     :ARG1 (c12-3 / person
                                  :name (c12-11 / name
                                                :op1 "Dan")
                                  :ARG2-of c12-5))
       :topic (c12-7 / and
                     :op1 (c12-0 / make-02
                                 :ARG0 (c12-19 / it)
                                 :ARG1 (c12-15 / and
                                               :op1 (c12-8 / have-degree-91
                                                           :ARG1 (c12-21 / city)
                                                           :ARG2 (c12-10 / strong-02
                                                                         :ARG1 c12-21)
                                                           :ARG3 (c12-12 / more))
                                               :op2 (c12-6 / have-degree-91
                                                           :ARG1 c12-21
                                                           :ARG2 (c12-13 / great)
                                                           :ARG3 (c12-9 / more)))
                                 :op2 (c12-17 / make-02
                                              :ARG0 c12-19
                                              :ARG1 (c12-2 / have-degree-91
                                                           :ARG1 (c12-1 / we)
                                                           :ARG2 (c12-20 / strong-02
                                                                         :ARG1 c12-1)
                                                           :ARG3 (c12-18 / more))
                                              :manner (c12-4 / country)))))
