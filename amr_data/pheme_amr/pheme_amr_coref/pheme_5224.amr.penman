# ::snt But if a wounded beast nowadays!
# ::tokens ["But", "if", "a", "wounded", "beast", "nowadays", "!"]
# ::lemmas ["but", "if", "a", "wound", "beast", "nowadays", "!"]
(c1-4 / contrast-01
      :ARG2 (c1-0 / have-condition-91
                  :ARG2 (c1-2 / beast
                              :ARG1-of (c1-1 / wound-01))
                  :time (c1-3 / nowadays)))

# ::snt I hope
# ::tokens ["I", "hope"]
# ::lemmas ["i", "hope"]
(c2-0 / hope-01
      :ARG0 (c2-1 / i))

# ::snt Photoshop.
# ::tokens ["Photoshop", "."]
# ::lemmas ["Photoshop", "."]
(c3-1 / product
      :name (c3-0 / name
                  :op1 "Photoshop"))

# ::snt One can only hope!
# ::tokens ["One", "can", "only", "hope", "!"]
# ::lemmas ["one", "can", "only", "hope", "!"]
(c4-1 / possible-01
      :ARG1 (c4-0 / hope-01
                  :ARG0 (c4-3 / one)
                  :mod (c4-2 / only)))

# ::snt I'm hoping they raise a white flag
# ::tokens ["I", "'m", "hoping", "they", "raise", "a", "white", "flag"]
# ::lemmas ["i", "be", "hope", "they", "raise", "a", "white", "flag"]
(c5-0 / hope-01
      :ARG0 (c5-3 / i)
      :ARG1 (c5-4 / raise-01
                  :ARG0 (c5-5 / they)
                  :ARG1 (c5-2 / flag
                              :ARG1-of (c5-1 / white-02))))

# ::snt wouldn't it be grand if true!
# ::tokens ["would", "n't", "it", "be", "grand", "if", "true", "!"]
# ::lemmas ["would", "not", "it", "be", "grand", "if", "true", "!"]
(c6-2 / grand
      :domain (c6-3 / it)
      :condition (c6-1 / true-01
                       :ARG1 c6-3)
      :ARG1-of (c6-0 / request-confirmation-91))

# ::snt I did think it....
# ::tokens ["I", "did", "think", "it", "...."]
# ::lemmas ["i", "do", "think", "it", "...."]
(c7-0 / think-01
      :ARG0 (c7-2 / i)
      :ARG1 (c7-1 / it))

# ::snt I think we have a good idea! Clueespot!!!
# ::tokens ["I", "think", "we", "have", "a", "good", "idea", "!", "Clueespot", "!", "!", "!"]
# ::lemmas ["i", "think", "we", "have", "a", "good", "idea", "!", "clueespot", "!", "!", "!"]
(c8-3 / multi-sentence
      :snt1 (c8-7 / think-01
                  :ARG0 (c8-4 / i)
                  :ARG1 (c8-0 / have-03
                              :ARG0 (c8-1 / we)
                              :ARG1 (c8-5 / idea
                                          :ARG1-of (c8-6 / good-02))))
      :snt2 (c8-2 / lepreespot
                  :mode expressive))

# ::snt Cancer had one job and it failed
# ::tokens ["Cancer", "had", "one", "job", "and", "it", "failed"]
# ::lemmas ["Cancer", "have", "one", "job", "and", "it", "fail"]
(c9-5 / and
      :op1 (c9-0 / have-03
                 :ARG0 (c9-3 / person
                             :ARG0-of (c9-4 / care-03))
                 :ARG1 (c9-1 / job
                             :quant 1))
      :op2 (c9-2 / fail-01
                 :ARG1 c9-3
                 :ARG2 c9-1))

# ::snt Maybe its a deception being played on the Western MSM?
# ::tokens ["Maybe", "its", "a", "deception", "being", "played", "on", "the", "Western", "MSM", "?"]
# ::lemmas ["maybe", "its", "a", "deception", "be", "play", "on", "the", "western", "MSM", "?"]
(c10-3 / possible-01
       :ARG1 (c10-4 / deceive-01
                    :ARG1 (c10-1 / media
                                 :mod (c10-0 / world-region
                                             :name (c10-2 / name
                                                          :op1 "West")))
                    :ARG1-of (c10-5 / play-08
                                    :ARG0 c10-1))
       :polarity (c10-6 / amr-unknown))

# ::snt But we dont know who or what would fill the vacuum.......
# ::tokens ["But", "we", "do", "nt", "know", "who", "or", "what", "would", "fill", "the", "vacuum", "......."]
# ::lemmas ["but", "we", "do", "not", "know", "who", "or", "what", "would", "fill", "the", "vacuum", "......."]
(c11-5 / contrast-01
       :ARG2 (c11-7 / know-01
                    :ARG0 (c11-0 / we)
                    :ARG1 (c11-2 / or
                                 :op1 (c11-4 / person)
                                 :op2 (c11-6 / thing)
                                 :ARG0-of (c11-1 / fill-01
                                                 :ARG1 (c11-3 / vacuum)))
                    :polarity -))

# ::snt change for soviet flag?
# ::tokens ["change", "for", "soviet", "flag", "?"]
# ::lemmas ["change", "for", "soviet", "flag", "?"]
(c12-3 / change-01
       :polarity (c12-4 / amr-unknown)
       :ARG1 (c12-0 / flag
                    :mod (c12-2 / country
                                :name (c12-1 / name
                                             :op1 "Scotland"))))

# ::snt Now they've removed the red ellipse from the sky!
# ::tokens ["Now", "they", "'ve", "removed", "the", "red", "ellipse", "from", "the", "sky", "!"]
# ::lemmas ["now", "they", "'ve", "remove", "the", "red", "ellipse", "from", "the", "sky", "!"]
(c13-3 / remove-01
       :ARG0 (c13-5 / they)
       :ARG1 (c13-0 / ellipse
                    :ARG1-of (c13-1 / red-02))
       :ARG2 (c13-4 / sky)
       :time (c13-2 / now))

# ::snt hes had a baby with his girlfriend apparently thats why he hasnt been seen
# ::tokens ["he", "s", "had", "a", "baby", "with", "his", "girlfriend", "apparently", "that", "s", "why", "he", "has", "nt", "been", "seen"]
# ::lemmas ["he", "s", "have", "a", "baby", "with", "his", "girlfriend", "apparently", "that", "s", "why", "he", "have", "not", "be", "see"]
(c14-4 / cause-01
       :ARG0 (c14-0 / have-05
                    :ARG0 (c14-8 / he)
                    :ARG1 (c14-1 / baby)
                    :accompanier (c14-3 / person
                                        :ARG0-of (c14-2 / have-rel-role-91
                                                        :ARG1 c14-8
                                                        :ARG2 (c14-5 / girlfriend))))
       :ARG1 (c14-6 / see-01
                    :ARG1 c14-8
                    :polarity -)
       :ARG1-of (c14-7 / appear-02))

# ::snt Exactly the commissars will be beside themselves!
# ::tokens ["Exactly", "the", "commissars", "will", "be", "beside", "themselves", "!"]
# ::lemmas ["exactly", "the", "commissar", "will", "be", "beside", "themselves", "!"]
(c15-2 / beside-oneself
       :domain (c15-1 / commissar)
       :mod (c15-0 / exact))

# ::snt Not sure, but something is up. Lots of trucks outside the Kremlin putting up a stage etc
# ::tokens ["Not", "sure", ",", "but", "something", "is", "up", ".", "Lots", "of", "trucks", "outside", "the", "Kremlin", "putting", "up", "a", "stage", "etc"]
# ::lemmas ["not", "sure", ",", "but", "something", "be", "up", ".", "lot", "of", "truck", "outside", "the", "Kremlin", "put", "up", "a", "stage", "etc"]
(c16-1 / multi-sentence
       :snt1 (c16-9 / contrast-01
                    :ARG1 (c16-11 / sure-02
                                  :polarity -)
                    :ARG2 (c16-2 / up-03
                                 :ARG1 (c16-5 / something)))
       :snt2 (c16-12 / truck
                     :quant (c16-0 / lot)
                     :location (c16-4 / outside
                                      :op1 (c16-10 / government-organization
                                                   :name (c16-7 / name
                                                                :op1 "Kremlin")))
                     :ARG0-of (c16-8 / put-up-13
                                     :ARG1 (c16-3 / stage))
                     :mod (c16-6 / et-cetera)))

# ::snt nothing I like more than a power struggle in the Kremlin
# ::tokens ["nothing", "I", "like", "more", "than", "a", "power", "struggle", "in", "the", "Kremlin"]
# ::lemmas ["nothing", "i", "like", "more", "than", "a", "power", "struggle", "in", "the", "Kremlin"]
(c17-0 / have-degree-91
       :ARG1 (c17-4 / nothing)
       :ARG2 (c17-1 / like-01
                    :ARG0 (c17-3 / i))
       :ARG3 (c17-2 / more)
       :ARG4 (c17-8 / struggle-01
                    :ARG2 (c17-6 / power)
                    :location (c17-7 / government-organization
                                     :name (c17-5 / name
                                                  :op1 "Kremlin"))))

# ::snt no, they'll probably raise a black flag, looool
# ::tokens ["no", ",", "they", "'ll", "probably", "raise", "a", "black", "flag", ",", "looool"]
# ::lemmas ["no", ",", "they", "'ll", "probably", "raise", "a", "black", "flag", ",", "looool"]
(c18-6 / say-01
       :ARG0 (c18-3 / i)
       :ARG1 (c18-5 / raise-01
                    :ARG0 (c18-7 / they)
                    :ARG1 (c18-0 / flag
                                 :ARG1-of (c18-2 / black-04))
                    :mod (c18-4 / probable))
       :ARG2 (c18-1 / looool))

# ::snt Putin is a zombie.
# ::tokens ["Putin", "is", "a", "zombie", "."]
# ::lemmas ["Putin", "be", "a", "zombie", "."]
(c19-2 / zombie
       :domain (c19-1 / person
                      :name (c19-0 / name
                                   :op1 "Putin")))

# ::snt Hmm...interesting times, I am very curious!
# ::tokens ["Hmm", "...", "interesting", "times", ",", "I", "am", "very", "curious", "!"]
# ::lemmas ["hmm", "...", "interesting", "time", ",", "i", "be", "very", "curious", "!"]
(c20-6 / and
       :op1 (c20-5 / time
                   :ARG2-of (c20-1 / interest-01))
       :op2 (c20-3 / curious-01
                   :ARG1 (c20-4 / i)
                   :degree (c20-2 / very))
       :mod (c20-0 / hmm
                   :mode expressive))

# ::snt Probably as thats all they know....
# ::tokens ["Probably", "as", "that", "s", "all", "they", "know", "...."]
# ::lemmas ["probably", "as", "that", "s", "all", "they", "know", "...."]
(c21-1 / probable
       :domain (c21-0 / know-01
                      :ARG0 (c21-3 / they)
                      :ARG1 (c21-2 / that)
                      :mod (c21-4 / all)))

# ::snt Flag is flying again.
# ::tokens ["Flag", "is", "flying", "again", "."]
# ::lemmas ["flag", "be", "fly", "again", "."]
(c22-0 / fly-01
       :ARG1 (c22-2 / flag)
       :mod (c22-1 / again))

# ::snt . dont get your hopes up, remember when that bastard ayatollah was supposed to be on his death bed.
# ::tokens [".", "do", "nt", "get", "your", "hopes", "up", ",", "remember", "when", "that", "bastard", "ayatollah", "was", "supposed", "to", "be", "on", "his", "death", "bed", "."]
# ::lemmas [".", "do", "not", "get", "your", "hope", "up", ",", "remember", "when", "that", "bastard", "ayatollah", "be", "suppose", "to", "be", "on", "his", "death", "bed", "."]
(c23-11 / and
        :op1 (c23-6 / get-04
                    :ARG0 (c23-1 / you)
                    :ARG1 (c23-0 / hopeful-03
                                 :ARG0 c23-1)
                    :polarity -
                    :mode imperative)
        :op2 (c23-4 / remember-01
                    :ARG0 c23-1
                    :ARG1 (c23-8 / suppose-02
                                 :ARG1 (c23-3 / ayatollah
                                              :mod (c23-2 / bastard)
                                              :mod (c23-10 / that))
                                 :ARG2 (c23-5 / be-located-at-91
                                              :ARG1 c23-3
                                              :ARG2 (c23-9 / bed
                                                           :mod (c23-7 / die-01
                                                                       :ARG1 c23-3))))
                    :mode imperative))
