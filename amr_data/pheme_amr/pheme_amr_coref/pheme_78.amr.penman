# ::snt send them back home. Out of Australia.
# ::tokens ["send", "them", "back", "home", ".", "Out", "of", "Australia", "."]
# ::lemmas ["send", "they", "back", "home", ".", "out", "of", "Australia", "."]
(c1-2 / multi-sentence
      :snt1 (c1-7 / send-01
                  :ARG0 (c1-1 / you)
                  :ARG1 (c1-8 / they)
                  :ARG2 (c1-3 / back-02
                              :ARG1 c1-8
                              :ARG3 (c1-0 / home))
                  :mode imperative)
      :snt2 (c1-4 / out-06
                  :ARG2 (c1-6 / country
                              :name (c1-5 / name
                                          :op1 "Australia"))))

# ::snt Hopefully the tax payors won't have to cover the SOB'S for the next !
# ::tokens ["Hopefully", "the", "tax", "payors", "wo", "n't", "have", "to", "cover", "the", "SOB", "'S", "for", "the", "next", "!"]
# ::lemmas ["hopefully", "the", "tax", "payor", "will", "not", "have", "to", "cover", "the", "SOB", "'S", "for", "the", "next", "!"]
(c2-0 / hope-01
      :ARG1 (c2-1 / obligate-01
                  :ARG1 (c2-3 / person
                              :ARG0-of (c2-7 / pay-01
                                             :ARG1 (c2-6 / tax)))
                  :ARG2 (c2-4 / cover-01
                              :ARG0 c2-3
                              :ARG1 (c2-5 / son-of-a-bitch)
                              :time (c2-2 / next))
                  :polarity -)
      :mode expressive)

# ::snt If only Australia still had the death penalty..
# ::tokens ["If", "only", "Australia", "still", "had", "the", "death", "penalty", ".."]
# ::lemmas ["if", "only", "Australia", "still", "have", "the", "death", "penalty", ".."]
(c3-0 / have-condition-91
      :ARG2 (c3-7 / have-03
                  :ARG0 (c3-5 / country
                              :name (c3-2 / name
                                          :op1 "Australia"))
                  :ARG1 (c3-3 / penalty
                              :mod (c3-4 / die-01))
                  :mod (c3-6 / still))
      :mod (c3-1 / only))

# ::snt I'd like them to also get rounds in a ring with your good self mate. Terrible news, hope everyone escapes unharmed.
# ::tokens ["I", "'d", "like", "them", "to", "also", "get", "rounds", "in", "a", "ring", "with", "your", "good", "self", "mate", ".", "Terrible", "news", ",", "hope", "everyone", "escapes", "unharmed", "."]
# ::lemmas ["i", "would", "like", "they", "to", "also", "get", "round", "in", "a", "ring", "with", "your", "good", "self", "mate", ".", "terrible", "news", ",", "hope", "everyone", "escape", "unharmed", "."]
(c4-0 / multi-sentence
      :snt1 (c4-9 / like-02
                  :ARG0 (c4-16 / i)
                  :ARG1 (c4-15 / get-01
                               :ARG0 (c4-19 / they)
                               :ARG1 (c4-14 / round)
                               :mod (c4-7 / also)
                               :location (c4-1 / ring)
                               :accompanier (c4-3 / person
                                                  :ARG0-of (c4-8 / have-rel-role-91
                                                                 :ARG1 (c4-17 / you)
                                                                 :ARG2 (c4-13 / mate
                                                                              :ARG1-of (c4-4 / good-02)
                                                                              :mod (c4-5 / self))))))
      :snt2 (c4-12 / news
                   :mod (c4-18 / terrible))
      :snt3 (c4-6 / hope-01
                  :ARG0 c4-16)
      :ARG1 (c4-11 / escape-01
                   :ARG0 (c4-10 / everyone)
                   :ARG1-of (c4-2 / harmed-01
                                  :polarity -)))

# ::snt haha life imprisonment.. That will never happen in Aus
# ::tokens ["haha", "life", "imprisonment", "..", "That", "will", "never", "happen", "in", "Aus"]
# ::lemmas ["haha", "life", "imprisonment", "..", "that", "will", "never", "happen", "in", "Aus"]
(c5-2 / multi-sentence
      :snt1 (c5-5 / imprison-01
                  :ARG2 (c5-1 / life)
                  :mod (c5-0 / haha
                             :mode expressive))
      :snt2 (c5-3 / be-located-at-91
                  :ARG1 (c5-8 / that)
                  :ARG2 (c5-7 / country
                              :name (c5-6 / name
                                          :op1 "Australia"))
                  :time (c5-4 / ever)
                  :polarity -))

# ::snt not looking good ATM big fella. Scary stuff
# ::tokens ["not", "looking", "good", "ATM", "big", "fella", ".", "Scary", "stuff"]
# ::lemmas ["not", "look", "good", "ATM", "big", "fella", ".", "scary", "stuff"]
(c6-2 / multi-sentence
      :snt1 (c6-1 / look-02
                  :ARG0 (c6-7 / i)
                  :ARG1 (c6-10 / good-02)
                  :ARG2 (c6-9 / person
                              :mod (c6-3 / fella)
                              :mod (c6-4 / big)
                              :ARG0-of (c6-0 / have-org-role-91
                                             :ARG1 (c6-5 / organization
                                                         :name (c6-8 / name
                                                                     :op1 "ATM"))))
                  :polarity -)
      :snt2 (c6-11 / scary-03
                   :ARG1 (c6-6 / stuff)))

# ::snt life in jail isnt enough for these assholes
# ::tokens ["life", "in", "jail", "is", "nt", "enough", "for", "these", "assholes"]
# ::lemmas ["life", "in", "jail", "be", "not", "enough", "for", "these", "asshole"]
(c7-0 / have-quant-91
      :ARG1 (c7-2 / life
                  :location (c7-1 / jail))
      :ARG3 (c7-3 / enough)
      :ARG6 (c7-5 / asshole
                  :mod (c7-4 / this))
      :polarity -)

# ::snt Life in prison is way to easy. These scum hate the Western way of life.
# ::tokens ["Life", "in", "prison", "is", "way", "to", "easy", ".", "These", "scum", "hate", "the", "Western", "way", "of", "life", "."]
# ::lemmas ["life", "in", "prison", "be", "way", "to", "easy", ".", "these", "scum", "hate", "the", "western", "way", "of", "life", "."]
(c8-3 / multi-sentence
      :snt1 (c8-4 / easy-05
                  :ARG1 (c8-2 / live-01
                              :location (c8-7 / prison))
                  :degree (c8-1 / way))
      :snt2 (c8-0 / hate-01
                  :ARG0 (c8-9 / scum
                              :mod (c8-10 / this))
                  :ARG1 c8-1
                  :mod (c8-5 / world-region
                             :name (c8-6 / name
                                         :op1 "West"))
                  :manner-of (c8-8 / live-01)))

# ::snt hang the pricks
# ::tokens ["hang", "the", "pricks"]
# ::lemmas ["hang", "the", "prick"]
(c9-0 / hang-01
      :ARG0 (c9-1 / you)
      :ARG1 (c9-2 / prick)
      :mode imperative)

# ::snt totally agree. Couldn't have said it any better.
# ::tokens ["totally", "agree", ".", "Could", "n't", "have", "said", "it", "any", "better", "."]
# ::lemmas ["totally", "agree", ".", "could", "not", "have", "say", "it", "any", "well", "."]
(c10-2 / multi-sentence
       :snt1 (c10-10 / agree-01
                     :ARG0 (c10-3 / i)
                     :degree (c10-9 / total))
       :snt2 (c10-4 / possible-01
                    :ARG1 (c10-8 / say-01
                                 :ARG0 (c10-6 / i)
                                 :ARG1 (c10-1 / it)
                                 :manner (c10-7 / good-02
                                                :ARG2-of (c10-0 / have-degree-91
                                                                :ARG1 c10-8
                                                                :ARG3 (c10-5 / more))))
                    :polarity -))

# ::snt How about public execution? It's the only these thugs deserve.
# ::tokens ["How", "about", "public", "execution", "?", "It", "'s", "the", "only", "these", "thugs", "deserve", "."]
# ::lemmas ["how", "about", "public", "execution", "?", "it", "be", "the", "only", "these", "thug", "deserve", "."]
(c11-0 / multi-sentence
       :snt1 (c11-7 / amr-unknown
                    :topic (c11-2 / execute-01
                                  :ARG1-of (c11-3 / public-02)))
       :snt2 (c11-4 / deserve-01
                    :ARG0 (c11-6 / thug
                                 :mod (c11-5 / this)
                                 :mod (c11-1 / only))
                    :ARG1 c11-2))

# ::snt amen to that, thoughtless bastards , thoughts and atheistic prayers to folks in Sydney
# ::tokens ["amen", "to", "that", ",", "thoughtless", "bastards", ",", "thoughts", "and", "atheistic", "prayers", "to", "folks", "in", "Sydney"]
# ::lemmas ["amen", "to", "that", ",", "thoughtless", "bastard", ",", "thought", "and", "atheistic", "prayer", "to", "folk", "in", "Sydney"]
(c12-9 / amen
       :beneficiary (c12-2 / and
                           :op1 (c12-1 / bastard
                                       :ARG0-of (c12-8 / think-01
                                                       :polarity -))
                           :op2 (c12-7 / think-01)
                           :op3 (c12-5 / pray-01
                                       :mod (c12-4 / atheism)))
       :beneficiary (c12-0 / folk
                           :location (c12-6 / city
                                            :name (c12-3 / name
                                                         :op1 "Sydney"))))

# ::snt Hopefully the snipers take them out.
# ::tokens ["Hopefully", "the", "snipers", "take", "them", "out", "."]
# ::lemmas ["hopefully", "the", "sniper", "take", "they", "out", "."]
(c13-0 / hope-01
       :ARG1 (c13-1 / take-out-11
                    :ARG0 (c13-2 / sniper)
                    :ARG1 (c13-3 / they)))

# ::snt it's been about hours and nothing has even remotely been done.. Scary shit!
# ::tokens ["it", "'s", "been", "about", "hours", "and", "nothing", "has", "even", "remotely", "been", "done", "..", "Scary", "shit", "!"]
# ::lemmas ["it", "be", "be", "about", "hours", "and", "nothing", "have", "even", "remotely", "be", "do", "..", "scary", "shit", "!"]
(c14-2 / multi-sentence
       :snt1 (c14-12 / and
                     :op1 (c14-1 / last-01
                                 :ARG1 (c14-5 / it)
                                 :ARG2 (c14-4 / about
                                              :op1 (c14-7 / multiple
                                                          :op1 (c14-11 / temporal-quantity
                                                                       :unit (c14-0 / hour)
                                                                       :quant 1))))
                     :op2 (c14-8 / do-02
                                 :ARG1 (c14-6 / anything)
                                 :mod (c14-9 / remote)
                                 :mod (c14-3 / even)
                                 :polarity -))
       :snt2 (c14-10 / scary-03
                     :mode expressive))

# ::snt could be soon the Armyu (SAS) will be called in to take just from national Nine news
# ::tokens ["could", "be", "soon", "the", "Armyu", "(", "SAS", ")", "will", "be", "called", "in", "to", "take", "just", "from", "national", "Nine", "news"]
# ::lemmas ["could", "be", "soon", "the", "Armyu", "(", "SAS", ")", "will", "be", "call", "in", "to", "take", "just", "from", "national", "Nine", "news"]
(c15-4 / possible-01
       :ARG1 (c15-6 / call-in-04
                    :ARG1 (c15-1 / military
                                 :name (c15-2 / name
                                              :op1 "Armyu"))
                    :purpose (c15-8 / take-01
                                    :ARG0 c15-1
                                    :ARG2 (c15-3 / news
                                                 :mod c15-3
                                                 :mod (c15-5 / nation)
                                                 :quant 9))
                    :mod (c15-0 / just))
       :time (c15-7 / soon))

# ::snt this is not good ISIS
# ::tokens ["this", "is", "not", "good", "ISIS"]
# ::lemmas ["this", "be", "not", "good", "ISIS"]
(c16-4 / say-01
       :ARG0 (c16-0 / i)
       :ARG1 (c16-3 / good-02
                    :ARG1 (c16-5 / this)
                    :polarity -)
       :ARG2 (c16-2 / person
                    :name (c16-1 / name
                                 :op1 "ISIS")))

# ::snt ..Islam xtremist ...wearing ISIS bandanna...not looking good for hostages.
# ::tokens ["..", "Islam", "xtremist", "...", "wearing", "ISIS", "bandanna", "...", "not", "looking", "good", "for", "hostages", "."]
# ::lemmas ["..", "Islam", "xtremist", "...", "wear", "ISIS", "bandanna", "...", "not", "look", "good", "for", "hostage", "."]
(c17-11 / and
        :op1 (c17-8 / person
                    :mod (c17-9 / religious-group
                                :name (c17-6 / name
                                             :op1 "Islam"))
                    :mod (c17-5 / extreme))
        :op2 (c17-1 / wear-01
                    :ARG0 c17-8
                    :ARG1 (c17-3 / bandanna
                                 :mod (c17-4 / organization
                                             :name (c17-7 / name
                                                          :op1 "Islamic"
                                                          :op2 "Forces"))))
        :op3 (c17-2 / look-02
                    :ARG0 c17-8
                    :ARG1 (c17-10 / good-02
                                  :ARG2 (c17-0 / hostage))
                    :polarity -))

# ::snt we got to catch them first big fella
# ::tokens ["we", "got", "to", "catch", "them", "first", "big", "fella"]
# ::lemmas ["we", "get", "to", "catch", "they", "first", "big", "fella"]
(c18-4 / catch-02
       :ARG0 (c18-0 / we)
       :ARG1 (c18-5 / they)
       :ord (c18-3 / ordinal-entity
                   :value 1)
       :mod (c18-1 / fella
                   :mod (c18-2 / big)))

# ::snt prayers up
# ::tokens ["prayers", "up"]
# ::lemmas ["prayer", "up"]
(c19-0 / pray-01
       :mod (c19-1 / up))
