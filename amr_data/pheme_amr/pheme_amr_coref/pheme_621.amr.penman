# ::snt Let's be clear, PD never said Officer Darren Wilson was responding to robbery call before contact w/ until today.
# ::tokens ["Let", "'s", "be", "clear", ",", "PD", "never", "said", "Officer", "Darren", "Wilson", "was", "responding", "to", "robbery", "call", "before", "contact", "w/", "until", "today", "."]
# ::lemmas ["let", "us", "be", "clear", ",", "PD", "never", "say", "Officer", "Darren", "Wilson", "be", "respond", "to", "robbery", "call", "before", "contact", "w/", "until", "today", "."]
(c1-10 / clear-06
       :ARG0 (c1-1 / we)
       :ARG1 (c1-14 / say-01
                    :ARG0 (c1-9 / department
                                :mod (c1-8 / police))
                    :ARG1 (c1-11 / respond-01
                                 :ARG0 (c1-16 / person
                                              :name (c1-7 / name
                                                          :op1 "Darren"
                                                          :op2 "Wilson")
                                              :ARG0-of (c1-0 / have-org-role-91
                                                             :ARG2 (c1-4 / officer)))
                                 :ARG1 (c1-12 / call-02
                                              :ARG1 (c1-6 / rob-01))
                                 :time (c1-3 / before
                                             :op1 (c1-13 / contact-01))
                                 :time (c1-5 / ever)
                                 :time (c1-2 / until
                                             :op1 (c1-15 / today)))
                    :polarity -)
       :mode imperative)

# ::snt I just tweeted that IMHO ferguson pd has been on a cya mission and not an investigation since the shooting.
# ::tokens ["I", "just", "tweeted", "that", "IMHO", "ferguson", "pd", "has", "been", "on", "a", "cya", "mission", "and", "not", "an", "investigation", "since", "the", "shooting", "."]
# ::lemmas ["i", "just", "tweet", "that", "IMHO", "ferguson", "pd", "have", "be", "on", "a", "cya", "mission", "and", "not", "an", "investigation", "since", "the", "shooting", "."]
(c2-11 / tweet-02
       :ARG0 (c2-5 / i)
       :ARG1 (c2-13 / and
                    :op1 (c2-2 / mission-01
                               :ARG0 (c2-7 / person
                                           :name (c2-6 / name
                                                       :op1 "Ferguson")
                                           :mod (c2-12 / politics))
                               :mod (c2-8 / cya))
                    :op2 (c2-9 / investigate-01
                               :ARG0 c2-7
                               :time (c2-10 / since
                                            :op1 (c2-4 / shoot-02))
                               :polarity -)
                    :ARG1-of (c2-3 / opine-01
                                   :ARG0 c2-5
                                   :ARG1-of (c2-0 / humble-01)))
       :time (c2-1 / just))

# ::snt Sounds like typical scramble to 'backfill facts' after a crime.
# ::tokens ["Sounds", "like", "typical", "scramble", "to", "'", "backfill", "facts", "'", "after", "a", "crime", "."]
# ::lemmas ["sound", "like", "typical", "scramble", "to", "'", "backfill", "fact", "'", "after", "a", "crime", "."]
(c3-4 / sound-01
      :ARG2 (c3-2 / scramble-01
                  :ARG1 (c3-1 / backfill-01
                              :ARG1 (c3-0 / fact)
                              :time (c3-6 / after
                                          :op1 (c3-3 / crime-02)))
                  :ARG1-of (c3-5 / typical-02)))

# ::snt Fox propaganda machine planting doubt &amp; suspicion in racist minds.
# ::tokens ["Fox", "propaganda", "machine", "planting", "doubt", "&", "amp", ";", "suspicion", "in", "racist", "minds", "."]
# ::lemmas ["Fox", "propaganda", "machine", "planting", "doubt", "&", "amp", ";", "suspicion", "in", "racist", "mind", "."]
(c4-11 / and
       :op1 (c4-5 / plant-01
                  :ARG0 (c4-0 / machine
                              :mod (c4-10 / propaganda)
                              :poss (c4-1 / broadcast-program
                                          :name (c4-3 / name
                                                      :op1 "Fox")))
                  :ARG1 (c4-2 / and
                              :op1 (c4-6 / doubt-01)
                              :op2 (c4-4 / amp)))
       :op2 (c4-9 / suspect-01
                  :location (c4-7 / mind
                                  :mod (c4-8 / racist))))

# ::snt police claims
# ::tokens ["police", "claims"]
# ::lemmas ["police", "claim"]
(c5-1 / claim-01
      :ARG0 (c5-0 / police))

# ::snt we had an officer involved shooting last month. We knew details within an hour!!! Video eventually released to corroborate...
# ::tokens ["we", "had", "an", "officer", "involved", "shooting", "last", "month", ".", "We", "knew", "details", "within", "an", "hour", "!", "!", "!", "Video", "eventually", "released", "to", "corroborate", "..."]
# ::lemmas ["we", "have", "an", "officer", "involve", "shoot", "last", "month", ".", "we", "know", "detail", "within", "an", "hour", "!", "!", "!", "video", "eventually", "release", "to", "corroborate", "..."]
(c6-0 / multi-sentence
      :snt1 (c6-15 / involve-01
                   :ARG1 (c6-2 / person
                               :ARG0-of (c6-7 / have-org-role-91
                                              :ARG2 (c6-17 / officer)))
                   :ARG2 (c6-4 / shoot-02
                               :ARG0 c6-2)
                   :time (c6-11 / month
                                :mod (c6-8 / last)))
      :snt2 (c6-16 / know-01
                   :ARG0 (c6-13 / we)
                   :ARG1 (c6-3 / detail)
                   :time (c6-6 / after
                               :op1 (c6-10 / now)
                               :quant (c6-14 / up-to
                                             :op1 (c6-19 / temporal-quantity
                                                         :unit (c6-5 / hour)
                                                         :quant 1))))
      :snt3 (c6-12 / release-01
                   :ARG1 (c6-1 / video)
                   :time (c6-9 / eventual)
                   :purpose (c6-18 / corroborate-01
                                   :ARG0 c6-1)))

# ::snt When I heard that Officer Wilson was I stopped listening. What does he do when he's angry?
# ::tokens ["When", "I", "heard", "that", "Officer", "Wilson", "was", "I", "stopped", "listening", ".", "What", "does", "he", "do", "when", "he", "'s", "angry", "?"]
# ::lemmas ["when", "i", "hear", "that", "Officer", "Wilson", "be", "i", "stop", "listen", ".", "what", "do", "he", "do", "when", "he", "be", "angry", "?"]
(c7-2 / multi-sentence
      :snt1 (c7-10 / stop-01
                   :ARG0 (c7-5 / i)
                   :ARG1 (c7-1 / listen-01
                               :ARG0 c7-5)
                   :time (c7-0 / hear-01
                               :ARG0 c7-5
                               :ARG1 (c7-8 / person
                                           :name (c7-6 / name
                                                       :op1 "Wilson")
                                           :ARG0-of (c7-12 / have-org-role-91
                                                           :ARG2 (c7-3 / officer)))))
      :snt2 (c7-9 / do-02
                  :ARG0 (c7-7 / he)
                  :ARG1 (c7-11 / amr-unknown)
                  :time (c7-4 / anger-01
                              :ARG1 c7-7)))

# ::snt they did but at first he said he robbed the quiktrip. Which is why it's burned down now. But now it's a convenience
# ::tokens ["they", "did", "but", "at", "first", "he", "said", "he", "robbed", "the", "quiktrip", ".", "Which", "is", "why", "it", "'s", "burned", "down", "now", ".", "But", "now", "it", "'s", "a", "convenience"]
# ::lemmas ["they", "do", "but", "at", "first", "he", "say", "he", "rob", "the", "quiktrip", ".", "which", "be", "why", "it", "be", "burn", "down", "now", ".", "but", "now", "it", "be", "a", "convenience"]
(c8-1 / multi-sentence
      :snt1 (c8-10 / contrast-01
                   :ARG1 (c8-3 / event
                               :mod (c8-14 / they))
                   :ARG2 (c8-13 / say-01
                                :ARG0 (c8-0 / he)
                                :ARG1 (c8-9 / rob-01
                                            :ARG0 c8-0
                                            :ARG1 (c8-4 / quiktrip))
                                :time (c8-15 / at-first)))
      :snt2 (c8-11 / cause-01
                   :ARG0 (c8-5 / amr-unknown)
                   :ARG1 (c8-2 / burn-01
                               :ARG1 (c8-6 / it)
                               :time (c8-7 / now)))
      :snt3 (c8-12 / contrast-01
                   :ARG2 (c8-16 / convenience
                                :time (c8-8 / now))))

# ::snt Don't let your mind jump conclusions about Officer Darren Wilson's injuries. Hving wounds doesn't = being attached by
# ::tokens ["Do", "n't", "let", "your", "mind", "jump", "conclusions", "about", "Officer", "Darren", "Wilson", "'s", "injuries", ".", "Hving", "wounds", "does", "n't", "=", "being", "attached", "by"]
# ::lemmas ["do", "not", "let", "your", "mind", "jump", "conclusion", "about", "Officer", "Darren", "Wilson", "'s", "injury", ".", "hving", "wound", "do", "not", "=", "be", "attach", "by"]
(c9-4 / multi-sentence
      :snt1 (c9-3 / let-01
                  :ARG0 (c9-1 / you)
                  :ARG1 (c9-0 / jump-03
                              :ARG0 (c9-14 / you
                                           :part (c9-11 / mind))
                              :ARG1 (c9-13 / conclude-01
                                           :ARG0 c9-14
                                           :ARG1 (c9-9 / injure-01
                                                       :ARG1 (c9-12 / person
                                                                    :name (c9-10 / name
                                                                                 :op1 "Darren"
                                                                                 :op2 "Wilson")
                                                                    :ARG0-of (c9-2 / have-org-role-91
                                                                                   :ARG2 (c9-7 / officer))))))
                  :mode imperative
                  :polarity -)
      :snt2 (c9-8 / equal-01
                  :ARG1 (c9-5 / wound-01
                              :ARG2 (c9-6 / murder-01))
                  :ARG2 (c9-15 / attach-01
                               :ARG2 c9-5)
                  :polarity -))

# ::snt " PD never said Officer Darren Wilson was responding to robbery call before contact w/ until today." -
# ::tokens ["\"", "PD", "never", "said", "Officer", "Darren", "Wilson", "was", "responding", "to", "robbery", "call", "before", "contact", "w/", "until", "today", ".", "\"", "-"]
# ::lemmas ["\"", "PD", "never", "say", "Officer", "Darren", "Wilson", "be", "respond", "to", "robbery", "call", "before", "contact", "w/", "until", "today", ".", "\"", "-"]
(c10-12 / say-01
        :ARG0 (c10-9 / department
                     :mod (c10-7 / police))
        :ARG1 (c10-8 / respond-01
                     :ARG0 (c10-14 / person
                                   :name (c10-6 / name
                                                :op1 "Darren"
                                                :op2 "Wilson")
                                   :ARG0-of (c10-0 / have-org-role-91
                                                   :ARG2 (c10-3 / officer)))
                     :ARG1 (c10-10 / call-02
                                   :ARG1 (c10-5 / rob-01))
                     :time (c10-2 / before
                                  :op1 (c10-11 / contact-01))
                     :time (c10-1 / until
                                  :op1 (c10-13 / today)))
        :time (c10-4 / ever)
        :polarity -)

# ::snt You mean "get out of the street" isn't the first thing you say to a robbery suspect?
# ::tokens ["You", "mean", "\"", "get", "out", "of", "the", "street", "\"", "is", "n't", "the", "first", "thing", "you", "say", "to", "a", "robbery", "suspect", "?"]
# ::lemmas ["you", "mean", "\"", "get", "out", "of", "the", "street", "\"", "be", "not", "the", "first", "thing", "you", "say", "to", "a", "robbery", "suspect", "?"]
(c11-2 / mean-01
       :ARG0 (c11-0 / you)
       :ARG2 (c11-8 / get-05
                    :ARG2 (c11-4 / out-06
                                 :ARG2 (c11-9 / street))
                    :ARG1-of (c11-5 / say-01
                                    :ARG0 c11-0
                                    :ARG2 (c11-6 / person
                                                 :ARG2-of (c11-1 / suspect-01
                                                                 :ARG1 (c11-7 / rob-01)))
                                    :ord (c11-3 / ordinal-entity
                                                :value 1)))
       :polarity (c11-10 / amr-unknown))

# ::snt never shoot unless you fear for your life. Injuries heal.
# ::tokens ["never", "shoot", "unless", "you", "fear", "for", "your", "life", ".", "Injuries", "heal", "."]
# ::lemmas ["never", "shoot", "unless", "you", "fear", "for", "your", "life", ".", "injury", "heal", "."]
(c12-3 / multi-sentence
       :snt1 (c12-7 / shoot-02
                    :ARG0 (c12-1 / you)
                    :time (c12-5 / ever)
                    :condition (c12-2 / fear-01
                                      :ARG0 c12-1
                                      :ARG1 (c12-4 / life
                                                   :poss c12-1)
                                      :polarity -)
                    :polarity -
                    :mode imperative)
       :snt2 (c12-0 / heal-01
                    :ARG1 (c12-6 / injure-01)))

# ::snt didn't say much of anything and continue to withhold information which only fuels more confusion.
# ::tokens ["did", "n't", "say", "much", "of", "anything", "and", "continue", "to", "withhold", "information", "which", "only", "fuels", "more", "confusion", "."]
# ::lemmas ["do", "not", "say", "much", "of", "anything", "and", "continue", "to", "withhold", "information", "which", "only", "fuel", "more", "confusion", "."]
(c13-10 / and
        :op1 (c13-9 / say-01
                    :ARG1 (c13-4 / anything
                                 :quant (c13-2 / much))
                    :polarity -)
        :op2 (c13-8 / continue-01
                    :ARG1 (c13-0 / withhold-01
                                 :ARG1 (c13-5 / information))
                    :ARG0-of (c13-1 / fuel-01
                                    :ARG1 (c13-7 / confuse-01
                                                 :mod (c13-6 / more))
                                    :mod (c13-3 / only))
                    :polarity -))

# ::snt This is obviously contrived. The is doing what they can to save face.
# ::tokens ["This", "is", "obviously", "contrived", ".", "The", "is", "doing", "what", "they", "can", "to", "save", "face", "."]
# ::lemmas ["this", "be", "obviously", "contrive", ".", "the", "be", "do", "what", "they", "can", "to", "save", "face", "."]
(c14-1 / multi-sentence
       :snt1 (c14-6 / contrived-01
                    :ARG1 (c14-9 / this)
                    :ARG1-of (c14-2 / obvious-01))
       :snt2 (c14-5 / do-02
                    :ARG0 (c14-7 / they)
                    :ARG1 (c14-3 / thing
                                 :ARG1-of (c14-4 / possible-01))
                    :ARG2 (c14-8 / save-02
                                 :ARG0 c14-7
                                 :ARG1 (c14-0 / face))))

# ::snt exactly...see what a few appearances on Hannity can do?
# ::tokens ["exactly", "...", "see", "what", "a", "few", "appearances", "on", "Hannity", "can", "do", "?"]
# ::lemmas ["exactly", "...", "see", "what", "a", "few", "appearance", "on", "Hannity", "can", "do", "?"]
(c15-8 / see-01
       :ARG0 (c15-0 / you)
       :ARG1 (c15-9 / thing
                    :ARG1-of (c15-7 / do-02
                                    :ARG0 (c15-10 / appear-01
                                                  :ARG2 (c15-2 / show
                                                               :name (c15-5 / name
                                                                            :op1 "Hannity"))
                                                  :quant (c15-1 / few))
                                    :ARG1-of (c15-6 / possible-01)))
       :polarity (c15-4 / amr-unknown)
       :mod (c15-3 / exact))

# ::snt ~"Things that make you go . . . hmm".
# ::tokens ["~\"Things", "that", "make", "you", "go", ".", ".", ".", "hmm", "\"", "."]
# ::lemmas ["~\"things", "that", "make", "you", "go", ".", ".", ".", "hmm", "\"", "."]
(c16-1 / thing
       :ARG0-of (c16-0 / make-02
                       :ARG1 (c16-2 / go-01
                                    :ARG1 (c16-3 / you))))
