# ::snt : State Senator asks the police chief if she's going to be gassed again. damn!
# ::tokens [":", "State", "Senator", "asks", "the", "police", "chief", "if", "she", "'s", "going", "to", "be", "gassed", "again", ".", "damn", "!"]
# ::lemmas [":", "state", "Senator", "ask", "the", "police", "chief", "if", "she", "be", "go", "to", "be", "gas", "again", ".", "damn", "!"]
(c1-2 / multi-sentence
      :snt1 (c1-13 / ask-01
                   :ARG0 (c1-6 / person
                               :ARG0-of (c1-0 / have-org-role-91
                                              :ARG1 (c1-10 / state)
                                              :ARG2 (c1-4 / senator)))
                   :ARG1 (c1-11 / truth-value
                                :polarity-of (c1-9 / gas-03
                                                   :ARG1 (c1-12 / person
                                                                :ARG0-of (c1-1 / have-org-role-91
                                                                               :ARG1 (c1-3 / police)
                                                                               :ARG2 (c1-8 / chief)))
                                                   :mod (c1-5 / again)))
                   :ARG2 c1-12)
      :snt2 (c1-7 / damn-01
                  :mode expressive))

# ::snt Figure when he said "I hope not" it didn't occur that he meant they'd arrest her first.
# ::tokens ["Figure", "when", "he", "said", "\"", "I", "hope", "not", "\"", "it", "did", "n't", "occur", "that", "he", "meant", "they", "'d", "arrest", "her", "first", "."]
# ::lemmas ["figure", "when", "he", "say", "\"", "i", "hope", "not", "\"", "it", "do", "not", "occur", "that", "he", "mean", "they", "would", "arrest", "she", "first", "."]
(c2-2 / figure-01
      :ARG0 (c2-1 / you)
      :ARG1 (c2-3 / mean-01
                  :ARG0 (c2-0 / he)
                  :ARG2 (c2-9 / arrest-01
                              :ARG0 (c2-8 / they)
                              :ARG1 (c2-7 / she)
                              :ord (c2-5 / ordinal-entity
                                         :value 1))
                  :time (c2-6 / say-01
                              :ARG0 c2-0
                              :ARG1 (c2-4 / hope-01
                                          :ARG0 c2-0
                                          :ARG1 c2-9
                                          :polarity -)))
      :mode imperative)

# ::snt She literally was arrested.
# ::tokens ["She", "literally", "was", "arrested", "."]
# ::lemmas ["she", "literally", "be", "arrest", "."]
(c3-2 / arrest-01
      :ARG1 (c3-0 / she)
      :mod (c3-1 / literal))

# ::snt apparently she or another state senator has since been arrested.
# ::tokens ["apparently", "she", "or", "another", "state", "senator", "has", "since", "been", "arrested", "."]
# ::lemmas ["apparently", "she", "or", "another", "state", "senator", "have", "since", "be", "arrest", "."]
(c4-9 / arrest-01
      :ARG1 (c4-2 / or
                  :op1 (c4-8 / she)
                  :op2 (c4-7 / person
                             :ARG0-of (c4-0 / have-org-role-91
                                            :ARG1 (c4-4 / state)
                                            :ARG2 (c4-1 / senator))
                             :mod (c4-5 / another)))
      :time (c4-3 / since)
      :ARG1-of (c4-6 / appear-02))

# ::snt uh what RT : State Senator asks the police chief if she's going to be gassed again.
# ::tokens ["uh", "what", "RT", ":", "State", "Senator", "asks", "the", "police", "chief", "if", "she", "'s", "going", "to", "be", "gassed", "again", "."]
# ::lemmas ["uh", "what", "rt", ":", "state", "Senator", "ask", "the", "police", "chief", "if", "she", "be", "go", "to", "be", "gas", "again", "."]
(c5-14 / ask-01
       :ARG0 (c5-6 / person
                   :ARG0-of (c5-0 / have-org-role-91
                                  :ARG1 (c5-10 / state)
                                  :ARG2 (c5-3 / senator)))
       :ARG1 (c5-12 / truth-value
                    :polarity-of (c5-9 / gas-03
                                       :ARG1 (c5-13 / person
                                                    :ARG0-of (c5-1 / have-org-role-91
                                                                   :ARG1 (c5-2 / police)
                                                                   :ARG2 (c5-8 / chief)))
                                       :mod (c5-4 / again)))
       :ARG2 c5-13
       :ARG1-of (c5-7 / describe-01
                      :ARG0 (c5-11 / publication
                                   :name (c5-5 / name
                                               :op1 "RT"))))

# ::snt : State Senator asks the police chief if she's going to be gassed again.
# ::tokens [":", "State", "Senator", "asks", "the", "police", "chief", "if", "she", "'s", "going", "to", "be", "gassed", "again", "."]
# ::lemmas [":", "state", "Senator", "ask", "the", "police", "chief", "if", "she", "be", "go", "to", "be", "gas", "again", "."]
(c6-11 / ask-01
       :ARG0 (c6-5 / person
                   :ARG0-of (c6-0 / have-org-role-91
                                  :ARG1 (c6-8 / state)
                                  :ARG2 (c6-3 / senator)))
       :ARG1 (c6-9 / truth-value
                   :polarity-of (c6-7 / gas-03
                                      :ARG1 (c6-10 / person
                                                   :ARG0-of (c6-1 / have-org-role-91
                                                                  :ARG1 (c6-2 / police)
                                                                  :ARG2 (c6-6 / chief)))
                                      :mod (c6-4 / again)))
       :ARG2 c6-10)

# ::snt God, I hope so. I'll gas her!
# ::tokens ["God", ",", "I", "hope", "so", ".", "I", "'ll", "gas", "her", "!"]
# ::lemmas ["God", ",", "i", "hope", "so", ".", "i", "'ll", "gas", "she", "!"]
(c7-1 / multi-sentence
      :snt1 (c7-0 / hope-01
                  :ARG0 (c7-3 / i)
                  :ARG1 (c7-8 / so)
                  :mod (c7-5 / person
                             :name (c7-4 / name
                                         :op1 "God")
                             :mode expressive))
      :snt2 (c7-6 / gas-03
                  :ARG0 (c7-7 / i)
                  :ARG1 (c7-2 / she)))

# ::snt good lord.
# ::tokens ["good", "lord", "."]
# ::lemmas ["good", "lord", "."]
(c8-0 / lord
      :ARG1-of (c8-1 / good-02))

# ::snt who is she?????
# ::tokens ["who", "is", "she", "?", "?", "?", "?", "?"]
# ::lemmas ["who", "be", "she", "?", "?", "?", "?", "?"]
(c9-0 / she
      :domain (c9-1 / amr-unknown))

# ::snt : State Senator asks the police chief if she's going to be gassed again. crazy
# ::tokens [":", "State", "Senator", "asks", "the", "police", "chief", "if", "she", "'s", "going", "to", "be", "gassed", "again", ".", "crazy"]
# ::lemmas [":", "state", "Senator", "ask", "the", "police", "chief", "if", "she", "be", "go", "to", "be", "gas", "again", ".", "crazy"]
(c10-2 / multi-sentence
       :snt1 (c10-13 / ask-01
                     :ARG0 (c10-6 / person
                                  :ARG0-of (c10-0 / have-org-role-91
                                                  :ARG1 (c10-10 / state)
                                                  :ARG2 (c10-4 / senator)))
                     :ARG1 (c10-11 / truth-value
                                   :polarity-of (c10-9 / gas-03
                                                       :ARG1 (c10-12 / person
                                                                     :ARG0-of (c10-1 / have-org-role-91
                                                                                     :ARG1 (c10-3 / police)
                                                                                     :ARG2 (c10-8 / chief)))
                                                       :mod (c10-5 / again)))
                     :ARG2 c10-12)
       :snt2 (c10-7 / crazy-03))

# ::snt Yeah, I saw her tweet she wasn't arrested.
# ::tokens ["Yeah", ",", "I", "saw", "her", "tweet", "she", "was", "n't", "arrested", "."]
# ::lemmas ["yeah", ",", "i", "see", "her", "tweet", "she", "be", "not", "arrest", "."]
(c11-3 / see-01
       :ARG0 (c11-2 / i)
       :ARG1 (c11-4 / tweet-01
                    :ARG0 (c11-1 / she)
                    :ARG1 (c11-5 / arrest-01
                                 :ARG1 c11-1
                                 :polarity -))
       :mod (c11-0 / yeah
                   :mode expressive))

# ::snt This. : State Senator asks the police chief if she's going to be gassed again.
# ::tokens ["This", ".", ":", "State", "Senator", "asks", "the", "police", "chief", "if", "she", "'s", "going", "to", "be", "gassed", "again", "."]
# ::lemmas ["this", ".", ":", "state", "Senator", "ask", "the", "police", "chief", "if", "she", "be", "go", "to", "be", "gas", "again", "."]
(c12-2 / multi-sentence
       :snt1 (c12-11 / this)
       :snt2 (c12-13 / ask-01
                     :ARG0 (c12-6 / person
                                  :ARG0-of (c12-0 / have-org-role-91
                                                  :ARG1 (c12-10 / state)
                                                  :ARG2 (c12-4 / senator)))
                     :ARG1 (c12-9 / truth-value
                                  :polarity-of (c12-8 / gas-03
                                                      :ARG1 (c12-12 / person
                                                                    :ARG0-of (c12-1 / have-org-role-91
                                                                                    :ARG1 (c12-3 / police)
                                                                                    :ARG2 (c12-7 / chief)))
                                                      :mod (c12-5 / again)))
                     :ARG2 c12-12))

# ::snt I have heard from multiple sources she was just arrested again for not moving for the tanks?
# ::tokens ["I", "have", "heard", "from", "multiple", "sources", "she", "was", "just", "arrested", "again", "for", "not", "moving", "for", "the", "tanks", "?"]
# ::lemmas ["i", "have", "hear", "from", "multiple", "source", "she", "be", "just", "arrest", "again", "for", "not", "move", "for", "the", "tank", "?"]
(c13-0 / hear-01
       :ARG0 (c13-5 / i)
       :ARG1 (c13-10 / arrest-01
                     :polarity (c13-4 / amr-unknown)
                     :ARG1 (c13-8 / she)
                     :ARG2 (c13-2 / move-01
                                  :ARG0 c13-8
                                  :purpose (c13-9 / tank)
                                  :polarity -)
                     :mod (c13-1 / just)
                     :mod (c13-6 / again))
       :ARG2 (c13-3 / source
                    :quant (c13-7 / multiple)))

# ::snt DRAG HIM : State Senator asks the police chief if she's going to be gassed again.
# ::tokens ["DRAG", "HIM", ":", "State", "Senator", "asks", "the", "police", "chief", "if", "she", "'s", "going", "to", "be", "gassed", "again", "."]
# ::lemmas ["DRAG", "HIM", ":", "state", "Senator", "ask", "the", "police", "chief", "if", "she", "be", "go", "to", "be", "gas", "again", "."]
(c14-7 / RAG-01
       :ARG0 (c14-13 / ask-01
                     :ARG0 (c14-6 / person
                                  :ARG0-of (c14-0 / have-org-role-91
                                                  :ARG1 (c14-10 / state)
                                                  :ARG2 (c14-3 / senator)))
                     :ARG1 (c14-11 / truth-value
                                   :polarity-of (c14-9 / gas-03
                                                       :ARG1 (c14-12 / person
                                                                     :ARG0-of (c14-1 / have-org-role-91
                                                                                     :ARG1 (c14-2 / police)
                                                                                     :ARG2 (c14-8 / chief)))
                                                       :mod (c14-4 / again)))
                     :ARG2 c14-12)
       :ARG1 (c14-5 / he))

# ::snt What other options are there?
# ::tokens ["What", "other", "options", "are", "there", "?"]
# ::lemmas ["what", "other", "option", "be", "there", "?"]
(c15-0 / option
       :mod (c15-1 / other)
       :mod (c15-3 / amr-unknown)
       :location (c15-2 / there))

# ::snt Has been corrected. She tweeted she wasn't arrested.
# ::tokens ["Has", "been", "corrected", ".", "She", "tweeted", "she", "was", "n't", "arrested", "."]
# ::lemmas ["have", "be", "correct", ".", "she", "tweet", "she", "be", "not", "arrest", "."]
(c16-0 / multi-sentence
       :snt1 (c16-2 / correct-01
                    :polarity -)
       :snt2 (c16-4 / tweet-01
                    :ARG0 (c16-3 / she)
                    :ARG1 (c16-5 / arrest-01
                                 :ARG1 (c16-1 / she)
                                 :polarity -)))

# ::snt Missouri must really hate their state senators
# ::tokens ["Missouri", "must", "really", "hate", "their", "state", "senators"]
# ::lemmas ["Missouri", "must", "really", "hate", "their", "state", "senator"]
(c17-3 / infer-01
       :ARG1 (c17-0 / hate-01
                    :ARG0 (c17-7 / state
                                 :name (c17-4 / name
                                              :op1 "Missouri"))
                    :ARG1 (c17-5 / person
                                 :ARG0-of (c17-8 / have-org-role-91
                                                 :ARG1 (c17-2 / state)
                                                 :ARG2 (c17-1 / senator))
                                 :poss c17-7)
                    :degree (c17-6 / really)))

# ::snt shes my new hero!!
# ::tokens ["she", "s", "my", "new", "hero", "!", "!"]
# ::lemmas ["she", "s", "my", "new", "hero", "!", "!"]
(c18-0 / hero
       :ARG1-of (c18-1 / new-01)
       :poss (c18-2 / i))

# ::snt Don't retreat. : State Senator asks the police chief if she's going to be gassed again.
# ::tokens ["Do", "n't", "retreat", ".", ":", "State", "Senator", "asks", "the", "police", "chief", "if", "she", "'s", "going", "to", "be", "gassed", "again", "."]
# ::lemmas ["do", "not", "retreat", ".", ":", "state", "Senator", "ask", "the", "police", "chief", "if", "she", "be", "go", "to", "be", "gas", "again", "."]
(c19-3 / multi-sentence
       :snt1 (c19-8 / retreat-01
                    :ARG0 (c19-1 / you)
                    :mode imperative
                    :polarity -)
       :snt2 (c19-14 / ask-01
                     :ARG0 (c19-7 / person
                                  :ARG0-of (c19-0 / have-org-role-91
                                                  :ARG1 (c19-11 / state)
                                                  :ARG2 (c19-5 / senator)))
                     :ARG1 (c19-12 / truth-value
                                   :polarity-of (c19-10 / gas-03
                                                        :ARG1 (c19-13 / person
                                                                      :ARG0-of (c19-2 / have-org-role-91
                                                                                      :ARG1 (c19-4 / police)
                                                                                      :ARG2 (c19-9 / chief)))
                                                        :mod (c19-6 / again)))
                     :ARG2 c19-13))

# ::snt Don't suppose you have his reply?
# ::tokens ["Do", "n't", "suppose", "you", "have", "his", "reply", "?"]
# ::lemmas ["do", "not", "suppose", "you", "have", "his", "reply", "?"]
(c20-3 / suppose-01
       :ARG0 (c20-1 / you)
       :ARG1 (c20-0 / have-03
                    :ARG0 c20-1
                    :ARG1 (c20-2 / reply-01
                                 :ARG0 (c20-5 / he)))
       :polarity (c20-4 / amr-unknown)
       :polarity -)

# ::snt Senator Maria Chappelle Nadal. She was just arrested again for not moving.
# ::tokens ["Senator", "Maria", "Chappelle", "Nadal", ".", "She", "was", "just", "arrested", "again", "for", "not", "moving", "."]
# ::lemmas ["Senator", "Maria", "Chappelle", "Nadal", ".", "she", "be", "just", "arrest", "again", "for", "not", "move", "."]
(c21-2 / multi-sentence
       :snt1 (c21-6 / person
                    :name (c21-5 / name
                                 :op1 "Maria"
                                 :op2 "Chappelle"
                                 :op3 "Nadal")
                    :ARG0-of (c21-0 / have-org-role-91
                                    :ARG2 (c21-8 / senator)))
       :snt2 (c21-9 / arrest-01
                    :ARG1 (c21-3 / she)
                    :ARG2 (c21-7 / move-01
                                 :ARG1 c21-3
                                 :polarity -)
                    :mod (c21-4 / again)
                    :mod (c21-1 / just)))
