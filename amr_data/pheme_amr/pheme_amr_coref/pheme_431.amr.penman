# ::snt it's fine!
# ::tokens ["it", "'s", "fine", "!"]
# ::lemmas ["it", "be", "fine", "!"]
(c1-0 / fine-04
      :ARG1 (c1-1 / it))

# ::snt it just means there's a siege in Sydney mate, no big deal, really.
# ::tokens ["it", "just", "means", "there", "'s", "a", "siege", "in", "Sydney", "mate", ",", "no", "big", "deal", ",", "really", "."]
# ::lemmas ["it", "just", "mean", "there", "be", "a", "siege", "in", "Sydney", "mate", ",", "no", "big", "deal", ",", "really", "."]
(c2-11 / say-01
       :ARG0 (c2-4 / i)
       :ARG1 (c2-1 / mean-01
                   :ARG1 (c2-9 / it)
                   :ARG2 (c2-3 / siege-01
                               :location (c2-8 / city
                                               :name (c2-5 / name
                                                           :op1 "Sydney")))
                   :mod (c2-7 / deal
                              :mod (c2-2 / big)
                              :ARG1-of (c2-10 / real-04)
                              :polarity -)
                   :mod (c2-0 / just))
       :ARG2 (c2-6 / mate))

# ::snt word siege has been used here in Oz for hostage situations before. We probably use it wrong. Maybe should be
# ::tokens ["word", "siege", "has", "been", "used", "here", "in", "Oz", "for", "hostage", "situations", "before", ".", "We", "probably", "use", "it", "wrong", ".", "Maybe", "should", "be"]
# ::lemmas ["word", "siege", "have", "be", "use", "here", "in", "Oz", "for", "hostage", "situation", "before", ".", "we", "probably", "use", "it", "wrong", ".", "maybe", "should", "be"]
(c3-2 / multi-sentence
      :snt1 (c3-3 / use-01
                  :ARG1 (c3-1 / word)
                  :ARG2 (c3-12 / situation
                               :mod (c3-0 / hostage))
                  :location (c3-15 / here
                                   :location (c3-11 / country-region
                                                    :name (c3-8 / name
                                                                :op1 "Oz")))
                  :time (c3-4 / before))
      :snt2 (c3-9 / probable
                  :domain (c3-13 / use-01
                                 :ARG0 (c3-7 / we)
                                 :ARG1 (c3-6 / it)
                                 :ARG2-of (c3-5 / wrong-04
                                                :ARG1 c3-7)))
      :snt3 (c3-14 / possible-01
                   :ARG1 (c3-10 / recommend-01
                                :ARG1 c3-13)))

# ::snt totally true but it's not a cool alliteration that suggests a siege by Islamic militants
# ::tokens ["totally", "true", "but", "it", "'s", "not", "a", "cool", "alliteration", "that", "suggests", "a", "siege", "by", "Islamic", "militants"]
# ::lemmas ["totally", "true", "but", "it", "be", "not", "a", "cool", "alliteration", "that", "suggest", "a", "siege", "by", "Islamic", "militant"]
(c4-4 / contrast-01
      :ARG1 (c4-8 / true-01
                  :degree (c4-6 / total))
      :ARG2 (c4-7 / suggest-01
                  :ARG0 (c4-9 / alliterate
                              :ARG1-of (c4-3 / cool-04))
                  :ARG1 (c4-1 / besiege-01
                              :ARG0 (c4-0 / militant
                                          :mod (c4-5 / religious-group
                                                     :name (c4-2 / name
                                                                 :op1 "Islam"))))
                  :polarity -))

# ::snt a siege is when you cut off supplied by blockading a city or sovereign for a long period of time
# ::tokens ["a", "siege", "is", "when", "you", "cut", "off", "supplied", "by", "blockading", "a", "city", "or", "sovereign", "for", "a", "long", "period", "of", "time"]
# ::lemmas ["a", "siege", "be", "when", "you", "cut", "off", "supply", "by", "blockade", "a", "city", "or", "sovereign", "for", "a", "long", "period", "of", "time"]
(c5-2 / mean-01
      :ARG1 (c5-9 / siege-01)
      :ARG2 (c5-8 / cut-off-04
                  :ARG0 (c5-0 / you)
                  :manner (c5-3 / block-01
                                :ARG0 c5-0
                                :ARG1 (c5-4 / or
                                            :op1 (c5-7 / city)
                                            :op2 (c5-5 / sovereign))
                                :duration (c5-6 / period
                                                :ARG1-of (c5-1 / long-03)))))

# ::snt don't take this away from
# ::tokens ["do", "n't", "take", "this", "away", "from"]
# ::lemmas ["do", "not", "take", "this", "away", "from"]
(c6-1 / take-away-05
      :ARG0 (c6-0 / you)
      :ARG1 (c6-2 / this)
      :polarity -
      :mode imperative)

# ::snt thank you for your definition cos my attention to such details have gone out of the window~
# ::tokens ["thank", "you", "for", "your", "definition", "cos", "my", "attention", "to", "such", "details", "have", "gone", "out", "of", "the", "window~"]
# ::lemmas ["thank", "you", "for", "your", "definition", "cos", "my", "attention", "to", "such", "detail", "have", "go", "out", "of", "the", "window~"]
(c7-9 / thank-01
      :ARG0 (c7-4 / i)
      :ARG1 (c7-0 / you)
      :ARG2 (c7-5 / define-01
                  :ARG0 c7-0)
      :ARG1-of (c7-6 / cause-01
                     :ARG0 (c7-7 / go-01
                                 :ARG1 (c7-10 / attend-02
                                              :ARG0 c7-4
                                              :ARG1 (c7-1 / detail
                                                          :mod (c7-8 / such)))
                                 :direction (c7-3 / out-of
                                                  :op1 (c7-2 / window)))))

# ::snt thank you for that technical point. Using hashtag to keep updated re this issue.
# ::tokens ["thank", "you", "for", "that", "technical", "point", ".", "Using", "hashtag", "to", "keep", "updated", "re", "this", "issue", "."]
# ::lemmas ["thank", "you", "for", "that", "technical", "point", ".", "use", "hashtag", "to", "keep", "update", "re", "this", "issue", "."]
(c8-2 / multi-sentence
      :snt1 (c8-11 / thank-01
                   :ARG1 (c8-1 / you)
                   :ARG2 (c8-8 / point-04
                               :ARG0 c8-1
                               :mod (c8-9 / technical)
                               :mod (c8-7 / that)))
      :snt2 (c8-3 / use-01
                  :ARG1 (c8-0 / hashtag)
                  :ARG2 (c8-6 / keep-02
                              :ARG1 (c8-10 / update-02
                                           :ARG1 (c8-5 / issue-02
                                                       :mod (c8-4 / this))))))

# ::snt : coz it's such an unlikely place to be under siege...esp in a Chocolatier
# ::tokens [":", "coz", "it", "'s", "such", "an", "unlikely", "place", "to", "be", "under", "siege", "...", "esp", "in", "a", "Chocolatier"]
# ::lemmas [":", "coz", "it", "be", "such", "an", "unlikely", "place", "to", "be", "under", "siege", "...", "esp", "in", "a", "Chocolatier"]
(c9-6 / cause-01
      :ARG0 (c9-4 / place
                  :ARG1-of (c9-0 / likely-01
                                 :degree (c9-7 / such)
                                 :polarity -)
                  :ARG1-of (c9-5 / resemble-01
                                 :ARG2 (c9-1 / be-located-at-91
                                             :ARG2 (c9-2 / restaurant
                                                         :name (c9-3 / name
                                                                     :op1 "Chocolatier"))))))

# ::snt sarcasm pls
# ::tokens ["sarcasm", "pls"]
# ::lemmas ["sarcasm", "pls"]
(c10-0 / sarcasm
       :mode expressive)

# ::snt coz it's such an unlikely place to be under siege...esp in a Chocolatier
# ::tokens ["coz", "it", "'s", "such", "an", "unlikely", "place", "to", "be", "under", "siege", "...", "esp", "in", "a", "Chocolatier"]
# ::lemmas ["coz", "it", "be", "such", "an", "unlikely", "place", "to", "be", "under", "siege", "...", "esp", "in", "a", "Chocolatier"]
(c11-6 / cause-01
       :ARG0 (c11-4 / place
                    :ARG1-of (c11-0 / likely-01
                                    :degree (c11-7 / such)
                                    :polarity -)
                    :location-of (c11-1 / under
                                        :op1 (c11-2 / iege-01))
                    :example (c11-5 / restaurant
                                    :name (c11-3 / name
                                                 :op1 "Chocolatier"))))

# ::snt Blumenthal also thinks the Taliban children massacre was a day in the park.
# ::tokens ["Blumenthal", "also", "thinks", "the", "Taliban", "children", "massacre", "was", "a", "day", "in", "the", "park", "."]
# ::lemmas ["Blumenthal", "also", "think", "the", "Taliban", "child", "massacre", "be", "a", "day", "in", "the", "park", "."]
(c12-7 / think-01
       :ARG0 (c12-3 / person
                    :name (c12-1 / name
                                 :op1 "Blumenthal"))
       :ARG1 (c12-4 / day
                    :location (c12-8 / park)
                    :domain (c12-0 / massacre-01
                                   :ARG1 (c12-5 / child
                                                :mod (c12-6 / criminal-organization
                                                            :name (c12-2 / name
                                                                         :op1 "Taliban")))))
       :mod (c12-9 / also))

# ::snt for australia, it's also this
# ::tokens ["for", "australia", ",", "it", "'s", "also", "this"]
# ::lemmas ["for", "australia", ",", "it", "be", "also", "this"]
(c13-2 / this
       :beneficiary (c13-1 / country
                           :name (c13-0 / name
                                        :op1 "Australia"))
       :mod (c13-3 / also))

# ::snt :they need this
# ::tokens [":", "they", "need", "this"]
# ::lemmas [":", "they", "need", "this"]
(c14-0 / need-01
       :ARG0 (c14-1 / they)
       :ARG1 (c14-2 / this))

# ::snt ... For the same damn thing.
# ::tokens ["...", "For", "the", "same", "damn", "thing", "."]
# ::lemmas ["...", "for", "the", "same", "damn", "thing", "."]
(c15-0 / have-purpose-91
       :ARG2 (c15-2 / thing
                    :ARG1-of (c15-3 / same-01)
                    :mod (c15-1 / damn)))

# ::snt thank you
# ::tokens ["thank", "you"]
# ::lemmas ["thank", "you"]
(c16-1 / thank-01
       :ARG0 (c16-2 / i)
       :ARG1 (c16-0 / you))

# ::snt You r such a shmuck, it is really unbelievable.
# ::tokens ["You", "r", "such", "a", "shmuck", ",", "it", "is", "really", "unbelievable", "."]
# ::lemmas ["you", "r", "such", "a", "shmuck", ",", "it", "be", "really", "unbelievable", "."]
(c17-7 / and
       :op1 (c17-6 / shit
                   :domain (c17-0 / you)
                   :degree (c17-2 / such)
                   :mode expressive)
       :op2 (c17-4 / possible-01
                   :ARG1 (c17-1 / believe-01
                                :ARG1 (c17-3 / it)
                                :degree (c17-5 / really))
                   :polarity -))

# ::snt then, this event is a mini-siege
# ::tokens ["then", ",", "this", "event", "is", "a", "mini", "-", "siege"]
# ::lemmas ["then", ",", "this", "event", "be", "a", "mini", "-", "siege"]
(c18-2 / iege-01
       :ARG0 (c18-1 / event
                    :mod (c18-4 / this))
       :mod (c18-0 / mini)
       :time (c18-3 / then))

# ::snt after all, that's what hashtag is for. No point changing the TRENDING or having lots of ..
# ::tokens ["after", "all", ",", "that", "'s", "what", "hashtag", "is", "for", ".", "No", "point", "changing", "the", "TRENDING", "or", "having", "lots", "of", ".."]
# ::lemmas ["after", "all", ",", "that", "be", "what", "hashtag", "be", "for", ".", "no", "point", "change", "the", "trending", "or", "have", "lot", "of", ".."]
(c19-2 / multi-sentence
       :snt1 (c19-0 / have-purpose-91
                    :ARG1 (c19-1 / hashtag)
                    :ARG2 (c19-11 / that)
                    :mod (c19-12 / after-all))
       :snt2 (c19-7 / point-03
                    :ARG1 (c19-4 / or
                                 :op1 (c19-9 / change-01
                                             :ARG1 (c19-10 / thing
                                                           :ARG1-of (c19-6 / TR-01)))
                                 :op2 (c19-8 / have-03
                                             :ARG1 (c19-5 / thing
                                                          :quant (c19-3 / lot))))
                    :polarity -))

# ::snt no
# ::tokens ["no"]
# ::lemmas ["no"]
(c20-0 / no)

# ::snt First mover advantage. First catchy tag line wins.
# ::tokens ["First", "mover", "advantage", ".", "First", "catchy", "tag", "line", "wins", "."]
# ::lemmas ["First", "mover", "advantage", ".", "First", "catchy", "tag", "line", "win", "."]
(c21-2 / multi-sentence
       :snt1 (c21-8 / advantage-01
                    :ARG2 (c21-5 / mover)
                    :ord (c21-4 / ordinal-entity
                                :value 1))
       :snt2 (c21-0 / win-01
                    :ARG0 (c21-1 / line
                                 :mod (c21-7 / tag)
                                 :ARG1-of (c21-6 / catchy-00)
                                 :ord (c21-3 / ordinal-entity
                                             :value 1))))

# ::snt I know and agree, but was simply explaining
# ::tokens ["I", "know", "and", "agree", ",", "but", "was", "simply", "explaining"]
# ::lemmas ["i", "know", "and", "agree", ",", "but", "be", "simply", "explain"]
(c22-3 / contrast-01
       :ARG1 (c22-6 / and
                    :op1 (c22-5 / know-01
                                :ARG0 (c22-2 / i))
                    :op2 (c22-1 / agree-01
                                :ARG0 c22-2))
       :ARG2 (c22-0 / explain-01
                    :ARG0 c22-2
                    :ARG1-of (c22-4 / simple-02)))

# ::snt im sorry, i didnt intend for that to sound sarcastic i didnt want to be sarcastic!
# ::tokens ["i", "m", "sorry", ",", "i", "did", "nt", "intend", "for", "that", "to", "sound", "sarcastic", "i", "did", "nt", "want", "to", "be", "sarcastic", "!"]
# ::lemmas ["i", "m", "sorry", ",", "i", "do", "not", "intend", "for", "that", "to", "sound", "sarcastic", "i", "do", "not", "want", "to", "be", "sarcastic", "!"]
(c23-8 / and
       :op1 (c23-6 / sorry-01
                   :ARG1 (c23-4 / i))
       :op2 (c23-5 / intend-01
                   :ARG0 c23-4
                   :ARG1 (c23-3 / sound-01
                                :ARG1 (c23-7 / that)
                                :ARG2 (c23-1 / sarcastic))
                   :polarity -)
       :op3 (c23-0 / want-01
                   :ARG0 c23-4
                   :ARG1 (c23-2 / sarcastic
                                :domain c23-4)
                   :polarity -))

# ::snt White people live in Sydney
# ::tokens ["White", "people", "live", "in", "Sydney"]
# ::lemmas ["white", "people", "live", "in", "Sydney"]
(c24-1 / live-01
       :ARG0 (c24-3 / person
                    :ARG1-of (c24-0 / white-02))
       :location (c24-4 / city
                        :name (c24-2 / name
                                     :op1 "Sydney")))

# ::snt Hey. Nice point. Maybe when your head comes out of your ass you'll make another one.
# ::tokens ["Hey", ".", "Nice", "point", ".", "Maybe", "when", "your", "head", "comes", "out", "of", "your", "ass", "you", "'ll", "make", "another", "one", "."]
# ::lemmas ["hey", ".", "nice", "point", ".", "maybe", "when", "your", "head", "come", "out", "of", "your", "ass", "you", "'ll", "make", "another", "one", "."]
(c25-2 / multi-sentence
       :snt1 (c25-6 / point-04
                    :ARG1-of (c25-5 / nice-01)
                    :mod (c25-0 / hey
                                :mode expressive))
       :snt2 (c25-10 / possible-01
                     :ARG1 (c25-7 / make-01
                                  :ARG0 (c25-1 / you
                                               :part (c25-11 / head)
                                               :part (c25-9 / ass))
                                  :ARG1 (c25-3 / one
                                               :mod (c25-4 / another))
                                  :time (c25-8 / come-out-09
                                               :ARG1 c25-11))))

# ::snt Np!
# ::tokens ["Np", "!"]
# ::lemmas ["np", "!"]
(c26-1 / post-scriptum
       :domain (c26-0 / you))
