# ::snt the gunman is still on the loose.
# ::tokens ["the", "gunman", "is", "still", "on", "the", "loose", "."]
# ::lemmas ["the", "gunman", "be", "still", "on", "the", "loose", "."]
(c1-2 / gunman
      :ARG1-of (c1-1 / loose-04
                     :mod (c1-0 / still)))

# ::snt Stated as fact before news outlets even suggested.Still uncertain.Leave news to news pros.Done here.
# ::tokens ["Stated", "as", "fact", "before", "news", "outlets", "even", "suggested", ".", "Still", "uncertain", ".", "Leave", "news", "to", "news", "pros", ".", "Done", "here", "."]
# ::lemmas ["state", "as", "fact", "before", "news", "outlet", "even", "suggest", ".", "still", "uncertain", ".", "leave", "news", "to", "news", "pro", ".", "do", "here", "."]
(c2-2 / multi-sentence
      :snt1 (c2-15 / state-01
                   :ARG1 (c2-1 / fact)
                   :time (c2-5 / before
                               :op1 (c2-7 / suggest-01
                                          :ARG0 (c2-6 / outlet
                                                      :mod (c2-9 / news))
                                          :mod (c2-8 / even))))
      :snt2 (c2-13 / certain
                   :mod (c2-3 / still)
                   :polarity -)
      :snt3 (c2-4 / leave-02
                  :ARG1 (c2-10 / news)
                  :ARG2 (c2-11 / professional
                               :mod (c2-12 / news)))
      :snt4 (c2-14 / do-02
                   :location (c2-0 / here)))

# ::snt yes from her newly decorated LA living room. Just like Egypt.
# ::tokens ["yes", "from", "her", "newly", "decorated", "LA", "living", "room", ".", "Just", "like", "Egypt", "."]
# ::lemmas ["yes", "from", "her", "newly", "decorate", "LA", "living", "room", ".", "just", "like", "Egypt", "."]
(c3-3 / multi-sentence
      :snt1 (c3-1 / yes
                  :source (c3-9 / room
                                :mod (c3-2 / living)
                                :ARG1-of (c3-8 / decorate-01
                                               :ARG2 (c3-12 / she)
                                               :ARG1-of (c3-5 / new-01))
                                :location (c3-10 / city
                                                 :name (c3-6 / name
                                                             :op1 "LA"))))
      :snt2 (c3-4 / resemble-01
                  :ARG2 (c3-11 / country
                               :name (c3-7 / name
                                           :op1 "Egypt"))
                  :mod (c3-0 / just)))

# ::snt agreed
# ::tokens ["agreed"]
# ::lemmas ["agree"]
(c4-0 / agree-01)

# ::snt please wait on this. Also sounds like multiple suspects. People need to stay vigilant.
# ::tokens ["please", "wait", "on", "this", ".", "Also", "sounds", "like", "multiple", "suspects", ".", "People", "need", "to", "stay", "vigilant", "."]
# ::lemmas ["please", "wait", "on", "this", ".", "also", "sound", "like", "multiple", "suspect", ".", "people", "need", "to", "stay", "vigilant", "."]
(c5-3 / multi-sentence
      :snt1 (c5-0 / wait-01
                  :ARG1 (c5-1 / you)
                  :ARG2 (c5-11 / this)
                  :polite +)
      :snt2 (c5-10 / sound-01
                   :ARG1 (c5-8 / person)
                   :ARG2 (c5-12 / person
                                :ARG2-of (c5-5 / suspect-01)
                                :quant (c5-9 / multiple))
                   :mod (c5-13 / also))
      :snt3 (c5-6 / need-01
                  :ARG0 (c5-4 / person)
                  :ARG1 (c5-2 / stay-01
                              :ARG1 c5-4
                              :ARG3 (c5-7 / vigilant-01
                                          :ARG0 c5-4))))

# ::snt you managed to confirm before any other news outlet in Canada. Bravo.
# ::tokens ["you", "managed", "to", "confirm", "before", "any", "other", "news", "outlet", "in", "Canada", ".", "Bravo", "."]
# ::lemmas ["you", "manage", "to", "confirm", "before", "any", "other", "news", "outlet", "in", "Canada", ".", "Bravo", "."]
(c6-2 / multi-sentence
      :snt1 (c6-7 / manage-02
                  :ARG0 (c6-0 / you)
                  :ARG1 (c6-9 / confirm-01
                              :ARG0 c6-0
                              :location (c6-3 / before
                                              :op1 (c6-4 / outlet
                                                         :mod (c6-5 / news)
                                                         :mod (c6-1 / other)
                                                         :mod (c6-11 / any)
                                                         :location (c6-8 / country
                                                                         :name (c6-6 / name
                                                                                     :op1 "Canada"))))))
      :snt2 (c6-10 / bravo
                   :mode expressive))

# ::snt It's Harper's Canada though
# ::tokens ["It", "'s", "Harper", "'s", "Canada", "though"]
# ::lemmas ["it", "be", "Harper", "'s", "Canada", "though"]
(c7-0 / have-concession-91
      :ARG1 (c7-3 / country
                  :name (c7-1 / name
                              :op1 "Canada")
                  :poss (c7-2 / person
                              :name c7-1
                              :op1 "Harper")))

# ::snt what's your source? That's not confirmed!
# ::tokens ["what", "'s", "your", "source", "?", "That", "'s", "not", "confirmed", "!"]
# ::lemmas ["what", "be", "your", "source", "?", "that", "be", "not", "confirm", "!"]
(c8-1 / multi-sentence
      :snt1 (c8-3 / source-01
                  :ARG0 (c8-0 / you)
                  :ARG2 (c8-5 / amr-unknown))
      :snt2 (c8-2 / confirm-01
                  :ARG1 (c8-4 / that)
                  :polarity -))

# ::snt great response bro.
# ::tokens ["great", "response", "bro", "."]
# ::lemmas ["great", "response", "bro", "."]
(c9-0 / say-01
      :ARG1 (c9-1 / respond-01
                  :mod (c9-2 / great))
      :ARG2 (c9-3 / bro))

# ::snt I know what I'm doing here, thanks.
# ::tokens ["I", "know", "what", "I", "'m", "doing", "here", ",", "thanks", "."]
# ::lemmas ["i", "know", "what", "i", "be", "do", "here", ",", "thank", "."]
(c10-7 / and
       :op1 (c10-3 / know-01
                   :ARG0 (c10-2 / i)
                   :ARG1 (c10-6 / thing
                                :ARG1-of (c10-4 / do-02
                                                :ARG0 c10-2
                                                :location (c10-0 / here))))
       :op2 (c10-5 / thank-01
                   :ARG0 c10-2
                   :ARG1 (c10-1 / you)))

# ::snt seeing as though I was % correct, yes.
# ::tokens ["seeing", "as", "though", "I", "was", "%", "correct", ",", "yes", "."]
# ::lemmas ["see", "as", "though", "i", "be", "%", "correct", ",", "yes", "."]
(c11-0 / see-01
       :ARG1 (c11-2 / correct-02
                    :ARG1 (c11-3 / i)
                    :degree (c11-1 / percentage-entity)))

# ::snt maybe people shouldn't look to the tweets of comedy writers for their news facts?
# ::tokens ["maybe", "people", "should", "n't", "look", "to", "the", "tweets", "of", "comedy", "writers", "for", "their", "news", "facts", "?"]
# ::lemmas ["maybe", "people", "should", "not", "look", "to", "the", "tweet", "of", "comedy", "writer", "for", "their", "news", "fact", "?"]
(c12-5 / possible-01
       :ARG1 (c12-6 / recommend-01
                    :ARG1 (c12-1 / look-01
                                 :ARG0 (c12-9 / person)
                                 :ARG1 (c12-8 / tweet-02
                                              :ARG0 (c12-3 / person
                                                           :ARG0-of (c12-0 / write-01
                                                                           :ARG1 (c12-7 / comedy))))
                                 :ARG2 (c12-2 / fact
                                              :topic (c12-4 / news)
                                              :poss c12-3))
                    :polarity -)
       :polarity (c12-10 / amr-unknown))

# ::snt hey kid, go enjoy this weird sense of power I've afforded you this morning. Spend it wisely!!
# ::tokens ["hey", "kid", ",", "go", "enjoy", "this", "weird", "sense", "of", "power", "I", "'ve", "afforded", "you", "this", "morning", ".", "Spend", "it", "wisely", "!", "!"]
# ::lemmas ["hey", "kid", ",", "go", "enjoy", "this", "weird", "sense", "of", "power", "i", "'ve", "afford", "you", "this", "morning", ".", "spend", "it", "wisely", "!", "!"]
(c13-3 / multi-sentence
       :snt1 (c13-12 / say-01
                     :ARG0 (c13-6 / i)
                     :ARG1 (c13-11 / go-05
                                   :ARG0 (c13-14 / kid)
                                   :ARG1 (c13-4 / enjoy-01
                                                :ARG0 c13-14
                                                :ARG1 (c13-5 / sense-01
                                                             :ARG0 c13-14
                                                             :ARG1 (c13-8 / power)
                                                             :mod (c13-0 / weird)
                                                             :ARG1-of (c13-15 / afford-02
                                                                              :ARG0 c13-6
                                                                              :ARG2 c13-14
                                                                              :time (c13-9 / date-entity
                                                                                           :dayperiod (c13-10 / morning)
                                                                                           :mod (c13-13 / today)))))
                                   :mode imperative)
                     :ARG2 c13-14)
       :snt2 (c13-2 / spend-01
                    :ARG0 (c13-1 / you)
                    :ARG3 c13-5
                    :manner (c13-7 / wise)
                    :mode imperative))

# ::snt Perhaps all of Twitter should follow HDM so we can learn the proper ways of Tweeting responsibly.
# ::tokens ["Perhaps", "all", "of", "Twitter", "should", "follow", "HDM", "so", "we", "can", "learn", "the", "proper", "ways", "of", "Tweeting", "responsibly", "."]
# ::lemmas ["perhaps", "all", "of", "Twitter", "should", "follow", "HDM", "so", "we", "can", "learn", "the", "proper", "way", "of", "tweet", "responsibly", "."]
(c14-8 / possible-01
       :ARG1 (c14-9 / recommend-01
                    :ARG1 (c14-1 / follow-02
                                 :ARG0 (c14-13 / publication
                                               :name (c14-6 / name
                                                            :op1 "Twitter")
                                               :mod (c14-14 / all))
                                 :ARG1 (c14-3 / publication
                                              :name (c14-7 / name
                                                           :op1 "HDM"))
                                 :purpose (c14-12 / possible-01
                                                  :ARG1 (c14-2 / learn-01
                                                               :ARG0 (c14-0 / we)
                                                               :ARG1 (c14-5 / way
                                                                            :mod (c14-4 / proper)
                                                                            :manner-of (c14-11 / tweet-01
                                                                                               :ARG1-of (c14-10 / responsible-02))))))))

# ::snt Thanks, that was considerate of you! All the best.
# ::tokens ["Thanks", ",", "that", "was", "considerate", "of", "you", "!", "All", "the", "best", "."]
# ::lemmas ["thank", ",", "that", "be", "considerate", "of", "you", "!", "all", "the", "good", "."]
(c15-3 / multi-sentence
       :snt1 (c15-10 / thank-01
                     :ARG0 (c15-4 / i)
                     :ARG1 (c15-1 / you)
                     :ARG2 (c15-7 / considerate-00
                                  :ARG0 c15-1
                                  :ARG1 (c15-9 / that)))
       :snt2 (c15-2 / wish-01
                    :ARG1 (c15-5 / thing
                                 :mod (c15-11 / all)
                                 :ARG1-of (c15-0 / have-degree-91
                                                 :ARG2 (c15-8 / good-02
                                                              :ARG1 c15-5)
                                                 :ARG3 (c15-6 / most)))))

# ::snt exactly, because they are "journalists" and "dems the rules" Kelly is a "comedic writer" no rules. Go police journalists
# ::tokens ["exactly", ",", "because", "they", "are", "\"", "journalists", "\"", "and", "\"", "dems", "the", "rules", "\"", "Kelly", "is", "a", "\"", "comedic", "writer", "\"", "no", "rules", ".", "Go", "police", "journalists"]
# ::lemmas ["exactly", ",", "because", "they", "be", "\"", "journalist", "\"", "and", "\"", "dem", "the", "rule", "\"", "Kelly", "be", "a", "\"", "comedic", "writer", "\"", "no", "rule", ".", "go", "police", "journalist"]
(c16-2 / multi-sentence
       :snt1 (c16-19 / cause-01
                     :ARG0 (c16-9 / and
                                  :op1 (c16-0 / journalist
                                              :domain (c16-20 / they))
                                  :op2 (c16-6 / state-01
                                              :ARG1 (c16-14 / rule-01)))
                     :ARG1 (c16-17 / and
                                   :op1 (c16-8 / journalist
                                               :domain c16-20)
                                   :op2 c16-6
                                   :ARG1 (c16-3 / rule-01)))
       :mod (c16-11 / exact)
       :snt2 (c16-4 / person
                    :ARG0-of (c16-16 / write-01
                                     :manner (c16-5 / comedian))
                    :domain (c16-7 / person
                                   :name (c16-13 / name
                                                 :op1 "Kelly"))
                    :ARG1-of (c16-12 / rule-01
                                     :polarity -))
       :snt3 (c16-15 / go-03
                     :ARG0 (c16-18 / you)
                     :ARG1 (c16-1 / journalist
                                  :mod (c16-10 / police))
                     :mode imperative))

# ::snt I can get confirmation and video from witnesses and pass info along without a news producer. Simple stuff.
# ::tokens ["I", "can", "get", "confirmation", "and", "video", "from", "witnesses", "and", "pass", "info", "along", "without", "a", "news", "producer", ".", "Simple", "stuff", "."]
# ::lemmas ["i", "can", "get", "confirmation", "and", "video", "from", "witness", "and", "pass", "info", "along", "without", "a", "news", "producer", ".", "simple", "stuff", "."]
(c17-1 / multi-sentence
       :snt1 (c17-8 / possible-01
                    :ARG1 (c17-16 / and
                                  :op1 (c17-11 / get-01
                                               :ARG0 (c17-5 / i)
                                               :ARG1 (c17-4 / and
                                                            :op1 (c17-10 / confirm-01
                                                                         :ARG0 (c17-15 / person
                                                                                       :ARG0-of (c17-0 / witness-01)))
                                                            :op2 (c17-7 / video)))
                                  :op2 (c17-2 / pass-along-18
                                              :ARG0 c17-5
                                              :ARG1 (c17-12 / information)
                                              :manner (c17-9 / accompany-01
                                                             :ARG0 c17-15
                                                             :ARG0-of (c17-14 / produce-01
                                                                              :ARG1 (c17-6 / news))
                                                             :polarity -)
                                              :ARG1 c17-12)))
       :snt2 (c17-13 / stuff
                     :ARG1-of (c17-3 / simple-02)))

# ::snt Kudos to your relaying of second-hand information! Do you have an app?
# ::tokens ["Kudos", "to", "your", "relaying", "of", "second", "-", "hand", "information", "!", "Do", "you", "have", "an", "app", "?"]
# ::lemmas ["kudo", "to", "your", "relaying", "of", "second", "-", "hand", "information", "!", "do", "you", "have", "an", "app", "?"]
(c18-2 / multi-sentence
       :snt1 (c18-8 / kudos
                    :beneficiary (c18-5 / relay-01
                                        :ARG0 (c18-1 / you)
                                        :ARG1 (c18-4 / information
                                                     :mod (c18-7 / second-hand))))
       :snt2 (c18-0 / have-03
                    :polarity (c18-9 / amr-unknown)
                    :ARG0 (c18-6 / you)
                    :ARG1 (c18-3 / app)))

# ::snt I try. Unfortunately I dont think itd protect me against bullets
# ::tokens ["I", "try", ".", "Unfortunately", "I", "do", "nt", "think", "it", "d", "protect", "me", "against", "bullets"]
# ::lemmas ["i", "try", ".", "unfortunately", "i", "do", "not", "think", "it", "d", "protect", "i", "against", "bullet"]
(c19-1 / multi-sentence
       :snt1 (c19-8 / try-01
                    :ARG0 (c19-4 / i))
       :snt2 (c19-7 / think-01
                    :ARG0 (c19-6 / i)
                    :ARG1 (c19-5 / protect-01
                                 :ARG0 (c19-0 / it)
                                 :ARG1 c19-6
                                 :ARG2 (c19-3 / bullet))
                    :ARG2-of (c19-2 / fortunate-01
                                    :polarity -)
                    :polarity -))

# ::snt might want to actually confirm shit like that before tweeting.
# ::tokens ["might", "want", "to", "actually", "confirm", "shit", "like", "that", "before", "tweeting", "."]
# ::lemmas ["might", "want", "to", "actually", "confirm", "shit", "like", "that", "before", "tweet", "."]
(c20-3 / possible-01
       :ARG1 (c20-0 / want-01
                    :ARG1 (c20-5 / confirm-01
                                 :ARG1 (c20-7 / shit
                                              :ARG1-of (c20-4 / resemble-01
                                                              :ARG2 (c20-8 / that)))
                                 :ARG1-of (c20-9 / actual-02)
                                 :time (c20-1 / before
                                              :op1 (c20-6 / tweet-02
                                                          :ARG0 (c20-2 / i))))))

# ::snt I had heard the same before I saw you &amp; many others tweet.
# ::tokens ["I", "had", "heard", "the", "same", "before", "I", "saw", "you", "&", "amp", ";", "many", "others", "tweet", "."]
# ::lemmas ["i", "have", "hear", "the", "same", "before", "i", "see", "you", "&", "amp", ";", "many", "other", "tweet", "."]
(c21-2 / multi-sentence
       :snt1 (c21-0 / hear-01
                    :ARG0 (c21-6 / i)
                    :ARG1 (c21-12 / thing
                                  :ARG1-of (c21-11 / same-01))
                    :time (c21-3 / before
                                 :op1 (c21-5 / see-01
                                             :ARG0 c21-6
                                             :ARG1 (c21-13 / and
                                                           :op1 (c21-1 / you)
                                                           :op2 (c21-8 / person
                                                                       :name (c21-7 / name
                                                                                    :op1 "amp"))))))
       :snt2 (c21-10 / tweet-02
                     :ARG0 (c21-4 / other
                                  :quant (c21-9 / many))))

# ::snt the news report I'm watching currently reported the same thing before Kelly tweeted it.
# ::tokens ["the", "news", "report", "I", "'m", "watching", "currently", "reported", "the", "same", "thing", "before", "Kelly", "tweeted", "it", "."]
# ::lemmas ["the", "news", "report", "i", "be", "watch", "currently", "report", "the", "same", "thing", "before", "Kelly", "tweet", "it", "."]
(c22-6 / report-01
       :ARG0 (c22-3 / news
                    :ARG1-of (c22-0 / watch-01
                                    :ARG0 (c22-2 / i)))
       :ARG1 (c22-10 / thing
                     :ARG1-of (c22-9 / same-01))
       :time (c22-7 / current)
       :time (c22-1 / before
                    :op1 (c22-8 / tweet-02
                                :ARG0 (c22-5 / person
                                             :name (c22-4 / name
                                                          :op1 "Kelly"))
                                :ARG1 c22-10)))

# ::snt CBC news is reporting the gunman has been shot. Are you bitching at them also?
# ::tokens ["CBC", "news", "is", "reporting", "the", "gunman", "has", "been", "shot", ".", "Are", "you", "bitching", "at", "them", "also", "?"]
# ::lemmas ["CBC", "news", "be", "report", "the", "gunman", "have", "be", "shoot", ".", "be", "you", "bitch", "at", "they", "also", "?"]
(c23-1 / multi-sentence
       :snt1 (c23-5 / report-01
                    :ARG0 (c23-2 / broadcast-program
                                 :name (c23-4 / name
                                              :op1 "CBC"
                                              :op2 "News"))
                    :ARG1 (c23-8 / shoot-02
                                 :ARG1 (c23-7 / gunman)))
       :snt2 (c23-6 / bitch-01
                    :ARG0 (c23-0 / you)
                    :ARG1 (c23-9 / they)
                    :polarity (c23-10 / amr-unknown)
                    :mod (c23-3 / also)))

# ::snt my thoughts also
# ::tokens ["my", "thoughts", "also"]
# ::lemmas ["my", "thought", "also"]
(c24-1 / think-01
       :ARG0 (c24-2 / i)
       :mod (c24-0 / also))

# ::snt Was it your Canada when that guy beheaded that other guy on the bus? Shit happens, but we're mostly still fine up here
# ::tokens ["Was", "it", "your", "Canada", "when", "that", "guy", "beheaded", "that", "other", "guy", "on", "the", "bus", "?", "Shit", "happens", ",", "but", "we", "'re", "mostly", "still", "fine", "up", "here"]
# ::lemmas ["be", "it", "your", "Canada", "when", "that", "guy", "behead", "that", "other", "guy", "on", "the", "bus", "?", "shit", "happen", ",", "but", "we", "be", "mostly", "still", "fine", "up", "here"]
(c25-0 / multi-sentence
       :snt1 (c25-17 / country
                     :name (c25-9 / name
                                  :op1 "Canada")
                     :poss (c25-15 / you)
                     :time (c25-7 / behead-01
                                  :ARG0 (c25-11 / guy
                                                :mod (c25-19 / that))
                                  :ARG1 (c25-1 / guy
                                               :mod (c25-16 / other)
                                               :mod (c25-18 / that))
                                  :location (c25-14 / bus))
                     :polarity (c25-4 / amr-unknown))
       :snt2 (c25-2 / contrast-01
                    :ARG1 (c25-3 / shit-01)
                    :ARG2 (c25-6 / fine-04
                                 :ARG1 (c25-12 / we)
                                 :mod (c25-8 / still)
                                 :location (c25-5 / here
                                                  :mod (c25-13 / up))
                                 :mod (c25-10 / most))))

# ::snt why shouldn't a private citizen make a comment on a news event?
# ::tokens ["why", "should", "n't", "a", "private", "citizen", "make", "a", "comment", "on", "a", "news", "event", "?"]
# ::lemmas ["why", "should", "not", "a", "private", "citizen", "make", "a", "comment", "on", "a", "news", "event", "?"]
(c26-5 / cause-01
       :ARG0 (c26-7 / amr-unknown)
       :ARG1 (c26-4 / recommend-01
                    :ARG1 (c26-3 / comment-01
                                 :ARG0 (c26-6 / citizen
                                              :ARG1-of (c26-2 / private-02))
                                 :ARG3 (c26-0 / event
                                              :mod (c26-1 / news)))
                    :polarity -))

# ::snt they confirm facts before 'reporting'.
# ::tokens ["they", "confirm", "facts", "before", "'", "reporting", "'", "."]
# ::lemmas ["they", "confirm", "fact", "before", "'", "report", "'", "."]
(c27-3 / confirm-01
       :ARG0 (c27-4 / they)
       :ARG1 (c27-0 / fact)
       :time (c27-1 / before
                    :op1 (c27-2 / report-01
                                :ARG0 c27-4)))

# ::snt where's the "(sigh) I give up" emoticon? Do you not understand twitter?
# ::tokens ["where", "'s", "the", "\"", "(", "sigh", ")", "I", "give", "up", "\"", "emoticon", "?", "Do", "you", "not", "understand", "twitter", "?"]
# ::lemmas ["where", "be", "the", "\"", "(", "sigh", ")", "i", "give", "up", "\"", "emoticon", "?", "do", "you", "not", "understand", "twitter", "?"]
(c28-1 / multi-sentence
       :snt1 (c28-3 / emoticon
                    :location (c28-8 / amr-unknown)
                    :mod (c28-7 / give-up-07
                                :ARG0 (c28-4 / i)))
       :snt2 (c28-2 / understand-01
                    :ARG0 (c28-0 / you)
                    :ARG1 (c28-6 / publication
                                 :name (c28-5 / name
                                              :op1 "Twitter"))
                    :polarity -))

# ::snt I had confirmed the first gunman was dead when I tweeted.
# ::tokens ["I", "had", "confirmed", "the", "first", "gunman", "was", "dead", "when", "I", "tweeted", "."]
# ::lemmas ["i", "have", "confirm", "the", "first", "gunman", "be", "dead", "when", "i", "tweet", "."]
(c29-3 / confirm-01
       :ARG0 (c29-1 / i)
       :ARG1 (c29-2 / die-01
                    :ARG1 (c29-4 / gunman
                                 :ord (c29-0 / ordinal-entity
                                             :value 1)))
       :time (c29-5 / tweet-02
                    :ARG0 c29-1))

# ::snt there has been zero confirmation that gunman is down. Maybe let news outlets on scene handle the reporting.
# ::tokens ["there", "has", "been", "zero", "confirmation", "that", "gunman", "is", "down", ".", "Maybe", "let", "news", "outlets", "on", "scene", "handle", "the", "reporting", "."]
# ::lemmas ["there", "have", "be", "zero", "confirmation", "that", "gunman", "be", "down", ".", "maybe", "let", "news", "outlet", "on", "scene", "handle", "the", "reporting", "."]
(c30-2 / multi-sentence
       :snt1 (c30-7 / confirm-01
                    :ARG1 (c30-6 / down-01
                                 :ARG1 (c30-8 / gunman))
                    :polarity -)
       :snt2 (c30-5 / possible-01
                    :ARG1 (c30-1 / let-01
                                 :ARG1 (c30-0 / handle-01
                                              :ARG0 (c30-3 / outlet
                                                           :mod (c30-4 / news)
                                                           :location (c30-10 / scene))
                                              :ARG1 (c30-9 / report-01)))))

# ::snt No, you're right. We should follow comedic writers and trust their sources. That's my first instinct.
# ::tokens ["No", ",", "you", "'re", "right", ".", "We", "should", "follow", "comedic", "writers", "and", "trust", "their", "sources", ".", "That", "'s", "my", "first", "instinct", "."]
# ::lemmas ["no", ",", "you", "be", "right", ".", "we", "should", "follow", "comedic", "writer", "and", "trust", "their", "source", ".", "that", "be", "my", "first", "instinct", "."]
(c31-3 / multi-sentence
       :snt1 (c31-9 / right-06
                    :ARG1 (c31-0 / you))
       :snt2 (c31-6 / recommend-01
                    :ARG1 (c31-15 / and
                                  :op1 (c31-2 / follow-02
                                              :ARG0 (c31-1 / we)
                                              :ARG1 (c31-8 / person
                                                           :ARG0-of (c31-7 / write-01
                                                                           :manner (c31-10 / comedy))))
                                  :op2 (c31-14 / trust-01
                                               :ARG0 c31-1
                                               :ARG1 (c31-13 / source
                                                             :poss c31-8)))
                    :ARG2 c31-1)
       :snt3 (c31-5 / instinct
                    :ord (c31-4 / ordinal-entity
                                :value 1)
                    :poss (c31-11 / i)
                    :domain (c31-12 / that)))

# ::snt maybe you should have a news crew on retainer just in case. Rapid deploy anywhere breaking news happens.
# ::tokens ["maybe", "you", "should", "have", "a", "news", "crew", "on", "retainer", "just", "in", "case", ".", "Rapid", "deploy", "anywhere", "breaking", "news", "happens", "."]
# ::lemmas ["maybe", "you", "should", "have", "a", "news", "crew", "on", "retainer", "just", "in", "case", ".", "Rapid", "deploy", "anywhere", "break", "news", "happen", "."]
(c32-3 / multi-sentence
       :snt1 (c32-9 / possible-01
                    :ARG1 (c32-10 / recommend-01
                                  :ARG1 (c32-0 / have-03
                                               :ARG0 (c32-1 / you)
                                               :ARG1 (c32-14 / person
                                                             :ARG0-of (c32-11 / crew-01
                                                                              :ARG1 (c32-7 / news))
                                                             :prep-on (c32-6 / retainer))
                                               :condition (c32-12 / case-04
                                                                  :mod (c32-2 / just)
                                                                  :ARG1 c32-0))))
       :snt2 (c32-13 / deploy-01
                     :manner (c32-5 / rapid)
                     :location (c32-15 / anywhere
                                       :location-of (c32-8 / news
                                                           :ARG1-of (c32-4 / break-13)))))

# ::snt Oh Canada.
# ::tokens ["Oh", "Canada", "."]
# ::lemmas ["oh", "Canada", "."]
(c33-1 / country
       :name (c33-0 / name
                    :op1 "Canada")
       :mod (c33-2 / oh
                   :mode expressive))

# ::snt THANK YOU.
# ::tokens ["THANK", "YOU", "."]
# ::lemmas ["thank", "you", "."]
(c34-1 / thank-01
       :ARG0 (c34-2 / i)
       :ARG1 (c34-0 / you))

# ::snt Not a comment. Stated gunman had been neutralized.Simply not true. Over k followers.Irresponsible.
# ::tokens ["Not", "a", "comment", ".", "Stated", "gunman", "had", "been", "neutralized", ".", "Simply", "not", "true", ".", "Over", "k", "followers", ".", "Irresponsible", "."]
# ::lemmas ["not", "a", "comment", ".", "state", "gunman", "have", "be", "neutralize", ".", "simply", "not", "true", ".", "over", "k", "follower", ".", "irresponsible", "."]
(c35-1 / multi-sentence
       :snt1 (c35-7 / comment-01
                    :polarity -)
       :snt2 (c35-4 / neutralize-01
                    :ARG1 (c35-8 / gunman
                                 :ARG1-of (c35-5 / plate-01)))
       :snt3 (c35-10 / true-01
                     :manner (c35-9 / simple)
                     :polarity -)
       :snt4 (c35-11 / person
                     :ARG0-of (c35-0 / follow-01)
                     :mod (c35-2 / over
                                 :op1 (c35-3 / k)))
       :snt5 (c35-6 / responsible-01
                    :polarity -))
