# ::snt !!!!! : The live stream from is back up and running. Watch here while you can
# ::tokens ["!", "!", "!", "!", "!", ":", "The", "live", "stream", "from", "is", "back", "up", "and", "running", ".", "Watch", "here", "while", "you", "can"]
# ::lemmas ["!", "!", "!", "!", "!", ":", "the", "live", "stream", "from", "be", "back", "up", "and", "run", ".", "watch", "here", "while", "you", "can"]
(c1-4 / multi-sentence
      :snt1 (c1-10 / and
                   :op1 (c1-5 / up-04
                              :ARG1 (c1-9 / stream-03
                                          :mod (c1-3 / live)))
                   :op2 (c1-8 / run-01
                              :ARG1 c1-9)
                   :mod (c1-6 / back))
      :snt2 (c1-1 / watch-01
                  :ARG0 (c1-2 / you)
                  :location (c1-0 / here)
                  :time (c1-7 / possible-01
                              :ARG1 c1-1)
                  :mode imperative))

# ::snt :flash player on ipod... Nope
# ::tokens [":", "flash", "player", "on", "ipod", "...", "Nope"]
# ::lemmas [":", "flash", "player", "on", "ipod", "...", "nope"]
(c2-2 / multi-sentence
      :snt1 (c2-6 / play-11
                  :ARG0 (c2-7 / disc
                              :mod (c2-0 / digital)
                              :mod (c2-5 / versatile))
                  :mod (c2-1 / flash)
                  :medium (c2-3 / ipod))
      :snt2 (c2-4 / nope))

# ::snt Jeoff
# ::tokens ["Jeoff"]
# ::lemmas ["jeoff"]
(c3-1 / person
      :name (c3-0 / name
                  :op1 "Jeoff"))

# ::snt : The live stream from is back up and running. Watch here while you can
# ::tokens [":", "The", "live", "stream", "from", "is", "back", "up", "and", "running", ".", "Watch", "here", "while", "you", "can"]
# ::lemmas [":", "the", "live", "stream", "from", "be", "back", "up", "and", "run", ".", "watch", "here", "while", "you", "can"]
(c4-4 / multi-sentence
      :snt1 (c4-10 / and
                   :op1 (c4-5 / up-04
                              :ARG1 (c4-9 / stream-03
                                          :mod (c4-3 / live)))
                   :op2 (c4-8 / run-01
                              :ARG1 c4-9)
                   :mod (c4-6 / back))
      :snt2 (c4-1 / watch-01
                  :ARG0 (c4-2 / you)
                  :location (c4-0 / here)
                  :time (c4-7 / possible-01
                              :ARG1 c4-1)))

# ::snt :ugh!!! Missed it
# ::tokens [":", "ugh", "!", "!", "!", "Missed", "it"]
# ::lemmas [":", "ugh", "!", "!", "!", "miss", "it"]
(c5-0 / miss-02
      :ARG0 (c5-2 / i)
      :ARG1 (c5-1 / it)
      :mode expressive)

# ::snt Thank you!
# ::tokens ["Thank", "you", "!"]
# ::lemmas ["thank", "you", "!"]
(c6-1 / thank-01
      :ARG0 (c6-2 / i)
      :ARG1 (c6-0 / you)
      :mode expressive)

# ::snt The live stream from is back up and running. Watch here while you can
# ::tokens ["The", "live", "stream", "from", "is", "back", "up", "and", "running", ".", "Watch", "here", "while", "you", "can"]
# ::lemmas ["the", "live", "stream", "from", "be", "back", "up", "and", "run", ".", "watch", "here", "while", "you", "can"]
(c7-4 / multi-sentence
      :snt1 (c7-10 / and
                   :op1 (c7-5 / up-04
                              :ARG1 (c7-9 / stream-03
                                          :mod (c7-3 / live)))
                   :op2 (c7-8 / run-01
                              :ARG1 c7-9)
                   :mod (c7-6 / back))
      :snt2 (c7-1 / watch-01
                  :ARG0 (c7-2 / you)
                  :location (c7-0 / here)
                  :time (c7-7 / possible-01
                              :ARG1 c7-1)
                  :mode imperative))

# ::snt :SCIENTIST RECEIVED A DEEP SPACE TRANSMISSION TODAY, ,
# ::tokens [":", "SCIENTIST", "RECEIVED", "A", "DEEP", "SPACE", "TRANSMISSION", "TODAY", ",", ","]
# ::lemmas [":", "scientist", "RECEIVED", "a", "deep", "SPACE", "transmission", "today", ",", ","]
(c8-2 / release-01
      :ARG0 (c8-1 / person
                  :mod (c8-5 / science))
      :ARG1 (c8-6 / transmit-01
                  :ARG0 c8-1
                  :ARG1 (c8-0 / space
                              :ARG1-of (c8-3 / deplete-01)))
      :time (c8-4 / today))

# ::snt WTF, seriously what in God's name is this world coming to, stupid question Troy you know what.
# ::tokens ["WTF", ",", "seriously", "what", "in", "God", "'s", "name", "is", "this", "world", "coming", "to", ",", "stupid", "question", "Troy", "you", "know", "what", "."]
# ::lemmas ["WTF", ",", "seriously", "what", "in", "God", "'s", "name", "be", "this", "world", "come", "to", ",", "stupid", "question", "Troy", "you", "know", "what", "."]
(c9-17 / ask-01
       :ARG0 (c9-5 / i)
       :ARG1 (c9-4 / and
                   :op1 (c9-11 / come-04
                               :ARG1 (c9-0 / world
                                           :mod (c9-15 / this))
                               :ARG2 (c9-8 / amr-unknown
                                           :prep-in (c9-7 / name
                                                          :poss (c9-9 / person
                                                                      :name (c9-10 / name
                                                                                   :op1 "God"))))
                               :ARG1-of (c9-14 / serious-01)
                               :mod (c9-1 / fuck
                                          :mode expressive))
                   :op2 (c9-3 / say-01
                              :ARG0 c9-5
                              :ARG1 (c9-6 / know-01
                                          :ARG0 (c9-16 / person
                                                       :name (c9-12 / name
                                                                    :op1 "Troy"))
                                          :ARG1 (c9-13 / thing))
                              :ARG2 c9-16
                              :mod (c9-2 / stupid)))
       :ARG2 c9-16)

# ::snt won't run here...NZ
# ::tokens ["wo", "n't", "run", "here", "...", "NZ"]
# ::lemmas ["will", "not", "run", "here", "...", "nz"]
(c10-1 / run-02
       :location (c10-0 / here)
       :ARG1-of (c10-2 / say-01
                       :ARG0 (c10-3 / i))
       :polarity -)

# ::snt SCIENTIST RECEIVED A DEEP SPACE TRANSMISSION TODAY, ,
# ::tokens ["SCIENTIST", "RECEIVED", "A", "DEEP", "SPACE", "TRANSMISSION", "TODAY", ",", ","]
# ::lemmas ["scientist", "RECEIVED", "a", "deep", "SPACE", "transmission", "today", ",", ","]
(c11-2 / release-01
       :ARG0 (c11-1 / person
                    :mod (c11-5 / science))
       :ARG1 (c11-6 / transmit-01
                    :ARG0 c11-1
                    :ARG1 (c11-0 / space
                                 :ARG1-of (c11-3 / deplete-01)))
       :time (c11-4 / today))

# ::snt : The live stream from is back up and running. Watch here while you can: WATCH THIS
# ::tokens [":", "The", "live", "stream", "from", "is", "back", "up", "and", "running", ".", "Watch", "here", "while", "you", "can", ":", "WATCH", "THIS"]
# ::lemmas [":", "the", "live", "stream", "from", "be", "back", "up", "and", "run", ".", "watch", "here", "while", "you", "can", ":", "watch", "this"]
(c12-4 / multi-sentence
       :snt1 (c12-11 / and
                     :op1 (c12-5 / up-04
                                 :ARG1 (c12-9 / stream-03
                                              :mod (c12-3 / live)))
                     :op2 (c12-8 / run-01
                                 :ARG1 c12-9))
       :snt2 (c12-1 / watch-01
                    :ARG0 (c12-2 / you)
                    :location (c12-0 / here)
                    :time (c12-7 / possible-01
                                 :ARG1 (c12-6 / watch-01
                                              :ARG0 c12-2
                                              :ARG1 (c12-10 / this)))
                    :mode imperative))

# ::snt Tell the people NAME THE SHAME
# ::tokens ["Tell", "the", "people", "NAME", "THE", "SHAME"]
# ::lemmas ["tell", "the", "people", "name", "the", "shame"]
(c13-4 / tell-01
       :ARG0 (c13-0 / you)
       :ARG1 (c13-1 / name
                    :poss (c13-2 / person)
                    :ARG1-of (c13-3 / same-01))
       :ARG2 c13-2
       :mode imperative)
