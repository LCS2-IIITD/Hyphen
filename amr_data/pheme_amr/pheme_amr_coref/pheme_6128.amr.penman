# ::snt Even though he's in Australia you Muppet!
# ::tokens ["Even", "though", "he", "'s", "in", "Australia", "you", "Muppet", "!"]
# ::lemmas ["even", "though", "he", "be", "in", "Australia", "you", "Muppet", "!"]
(c1-7 / say-01
      :ARG0 (c1-4 / i)
      :ARG1 (c1-0 / have-concession-91
                  :ARG2 (c1-3 / be-located-at-91
                              :ARG1 (c1-8 / he)
                              :ARG2 (c1-6 / country
                                          :name (c1-5 / name
                                                      :op1 "Australia"))))
      :ARG2 (c1-1 / you
                  :mod (c1-2 / muppet))
      :mode expressive)

# ::snt bbcsport
# ::tokens ["bbcsport"]
# ::lemmas ["bbcsport"]
(c2-1 / publication
      :name (c2-0 / name
                  :op1 "bbcsport"))

# ::snt a refugee from Iran lol. The islamization of Europe begins to bear fruits
# ::tokens ["a", "refugee", "from", "Iran", "lol", ".", "The", "islamization", "of", "Europe", "begins", "to", "bear", "fruits"]
# ::lemmas ["a", "refugee", "from", "Iran", "lol", ".", "the", "islamization", "of", "Europe", "begin", "to", "bear", "fruit"]
(c3-1 / multi-sentence
      :snt1 (c3-7 / refugee
                  :source (c3-8 / country
                                :name (c3-4 / name
                                            :op1 "Iran"))
                  :ARG2-of (c3-0 / laugh-01
                                 :manner (c3-11 / loud)
                                 :mode expressive))
      :snt2 (c3-3 / begin-01
                  :ARG0 (c3-6 / political-movement
                              :name (c3-5 / name
                                          :op1 "Islamization")
                              :mod (c3-9 / continent
                                         :name (c3-10 / name
                                                      :op1 "Europe")))
                  :ARG1 (c3-12 / bear-01
                               :ARG0 c3-6
                               :ARG1 (c3-2 / fruit))))

# ::snt Isnt " sheikh man monis " arabic slang for throwing the spam javalin
# ::tokens ["Is", "nt", "\"", "sheikh", "man", "monis", "\"", "arabic", "slang", "for", "throwing", "the", "spam", "javalin"]
# ::lemmas ["be", "nt", "\"", "sheikh", "man", "monis", "\"", "arabic", "slang", "for", "throw", "the", "spam", "javalin"]
(c4-3 / slang
      :mod (c4-2 / religious-group
                 :name (c4-1 / name
                             :op1 "Arabic"))
      :domain (c4-4 / throw-01
                    :ARG1 (c4-0 / javalin))
      :polarity -)

# ::snt close enough
# ::tokens ["close", "enough"]
# ::lemmas ["close", "enough"]
(c5-2 / close-10
      :ARG2-of (c5-0 / have-degree-91
                     :ARG3 (c5-1 / enough)))

# ::snt They should just call him Big Jerk .
# ::tokens ["They", "should", "just", "call", "him", "Big", "Jerk", "."]
# ::lemmas ["they", "should", "just", "call", "he", "Big", "Jerk", "."]
(c6-3 / recommend-01
      :ARG1 (c6-4 / call-01
                  :ARG0 (c6-5 / they)
                  :ARG1 (c6-0 / he)
                  :ARG2 (c6-2 / name
                              :op1 "Big"
                              :op2 "Jerk")
                  :mod (c6-1 / just)))

# ::snt With same characteristics as ISIS. Devout muslim, convicted murder and peodophile.
# ::tokens ["With", "same", "characteristics", "as", "ISIS", ".", "Devout", "muslim", ",", "convicted", "murder", "and", "peodophile", "."]
# ::lemmas ["with", "same", "characteristic", "as", "ISIS", ".", "devout", "muslim", ",", "convict", "murder", "and", "peodophile", "."]
(c7-0 / multi-sentence
      :snt1 (c7-5 / resemble-01
                  :ARG1 (c7-11 / thing)
                  :ARG2 (c7-9 / thing
                              :ARG2-of (c7-6 / characterize-01
                                             :ARG1 (c7-7 / criminal-organization
                                                         :name (c7-2 / name
                                                                     :op1 "Islamic")))))
      :snt2 (c7-13 / and
                   :op1 (c7-4 / person
                              :mod (c7-1 / religious-group
                                         :name (c7-3 / name
                                                     :op1 "Muslim"))
                              :ARG1-of (c7-10 / convict-01
                                              :ARG2 (c7-8 / murder-01)))
                   :op2 (c7-12 / pedophile)))

# ::snt What's that got to do with this story though? ....christ you talk shite.
# ::tokens ["What", "'s", "that", "got", "to", "do", "with", "this", "story", "though", "?", "....", "christ", "you", "talk", "shite", "."]
# ::lemmas ["what", "be", "that", "get", "to", "do", "with", "this", "story", "though", "?", "....", "christ", "you", "talk", "shite", "."]
(c8-3 / multi-sentence
      :snt1 (c8-0 / have-concession-91
                  :ARG2 (c8-2 / have-to-do-with-04
                              :ARG0 (c8-11 / amr-unknown)
                              :ARG1 (c8-9 / story
                                          :mod (c8-10 / this))))
      :snt2 (c8-5 / say-01
                  :ARG1 (c8-8 / talk-01
                              :ARG0 (c8-1 / you)
                              :mod (c8-4 / shit
                                         :mode expressive)
                              :mode expressive)
                  :ARG2 (c8-7 / person
                              :name (c8-6 / name
                                          :op1 "Christ"))))

# ::snt interesting suggestion that all media outlets confirmed to not repost the videos - not the case - at least one GC outlet reposted
# ::tokens ["interesting", "suggestion", "that", "all", "media", "outlets", "confirmed", "to", "not", "repost", "the", "videos", "-", "not", "the", "case", "-", "at", "least", "one", "GC", "outlet", "reposted"]
# ::lemmas ["interesting", "suggestion", "that", "all", "medium", "outlet", "confirm", "to", "not", "repost", "the", "video", "-", "not", "the", "case", "-", "at", "least", "one", "GC", "outlet", "reposte"]
(c9-12 / suggest-01
       :ARG1 (c9-13 / and
                    :op1 (c9-10 / confirm-01
                                :ARG0 (c9-2 / outlet
                                            :mod (c9-1 / media)
                                            :mod (c9-3 / all))
                                :ARG1 (c9-9 / repost-01
                                            :ARG0 c9-2
                                            :ARG1 (c9-7 / video)
                                            :polarity -))
                    :op2 (c9-5 / repost-01
                               :ARG0 (c9-0 / outlet
                                           :mod (c9-8 / publication
                                                      :name (c9-6 / name
                                                                  :op1 "General"
                                                                  :op2 "Certificate"
                                                                  :op3 "of"
                                                                  :op4 "Secondary"
                                                                  :op5 "Education"))
                                           :quant (c9-11 / at-least
                                                         :op1 1))
                               :ARG1 c9-7)
                    :ARG0-of (c9-4 / interest-01)))

# ::snt RACIST!!!!!!
# ::tokens ["RACIST", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["racist", "!", "!", "!", "!", "!", "!"]
(c10-0 / racist
       :mode expressive)

# ::snt man city's owner??
# ::tokens ["man", "city", "'s", "owner", "?", "?"]
# ::lemmas ["man", "city", "'s", "owner", "?", "?"]
(c11-2 / person
       :polarity (c11-4 / amr-unknown)
       :ARG0-of (c11-1 / own-01
                       :ARG1 (c11-3 / city
                                    :mod (c11-0 / man))))

# ::snt how many terrorists are there as there seem to be different names reported
# ::tokens ["how", "many", "terrorists", "are", "there", "as", "there", "seem", "to", "be", "different", "names", "reported"]
# ::lemmas ["how", "many", "terrorist", "be", "there", "as", "there", "seem", "to", "be", "different", "name", "report"]
(c13-3 / cause-01
       :ARG0 (c13-5 / seem-01
                    :ARG1 (c13-0 / name
                                 :ARG1-of (c13-2 / differ-02)
                                 :ARG1-of (c13-1 / report-01)))
       :ARG1 (c13-6 / terrorist
                    :quant (c13-7 / amr-unknown)
                    :location (c13-4 / there)))

# ::snt doesn't he own Man City????
# ::tokens ["does", "n't", "he", "own", "Man", "City", "?", "?", "?", "?"]
# ::lemmas ["do", "not", "he", "own", "Man", "City", "?", "?", "?", "?"]
(c15-1 / own-01
       :ARG0 (c15-0 / he)
       :ARG1 (c15-3 / city
                    :name (c15-2 / name
                                 :op1 "Man"
                                 :op2 "City"))
       :polarity (c15-4 / amr-unknown)
       :polarity -)

# ::snt you need to add he's out on bail for murdering a woman too.
# ::tokens ["you", "need", "to", "add", "he", "'s", "out", "on", "bail", "for", "murdering", "a", "woman", "too", "."]
# ::lemmas ["you", "need", "to", "add", "he", "be", "out", "on", "bail", "for", "murder", "a", "woman", "too", "."]
(c16-5 / need-01
       :ARG0 (c16-1 / you)
       :ARG1 (c16-8 / add-01
                    :ARG0 c16-1
                    :ARG1 (c16-4 / bail-out-02
                                 :ARG1 (c16-0 / he)
                                 :ARG1-of (c16-6 / cause-01
                                                 :ARG0 (c16-3 / murder-01
                                                              :ARG0 c16-0
                                                              :ARG1 (c16-2 / woman)
                                                              :mod (c16-7 / too))))))

# ::snt Sheik Yerbouti is a better name
# ::tokens ["Sheik", "Yerbouti", "is", "a", "better", "name"]
# ::lemmas ["Sheik", "Yerbouti", "be", "a", "well", "name"]
(c17-2 / name
       :domain (c17-4 / person
                      :name (c17-3 / name
                                   :op1 "Sheik"
                                   :op2 "Yerbouti"))
       :ARG1-of (c17-0 / have-degree-91
                       :ARG2 (c17-5 / good-02
                                    :ARG1 c17-2)
                       :ARG3 (c17-1 / more)))

# ::snt does that translate to skunk lover?!
# ::tokens ["does", "that", "translate", "to", "skunk", "lover", "?", "!"]
# ::lemmas ["do", "that", "translate", "to", "skunk", "lover", "?", "!"]
(c18-4 / translate-01
       :polarity (c18-5 / amr-unknown)
       :ARG1 (c18-2 / that)
       :ARG2 (c18-1 / person
                    :ARG0-of (c18-0 / love-01
                                    :ARG1 (c18-3 / skunk))))

# ::snt So now you're saying Iran is in Europe.....Hahaha fuckin hell....brilliant.
# ::tokens ["So", "now", "you", "'re", "saying", "Iran", "is", "in", "Europe", ".....", "Hahaha", "fuckin", "hell", "....", "brilliant", "."]
# ::lemmas ["so", "now", "you", "be", "say", "Iran", "be", "in", "Europe", ".....", "Hahaha", "fuckin", "hell", "....", "brilliant", "."]
(c19-3 / multi-sentence
       :snt1 (c19-11 / say-01
                     :ARG0 (c19-1 / you)
                     :ARG1 (c19-4 / be-located-at-91
                                  :ARG1 (c19-9 / country
                                               :name (c19-5 / name
                                                            :op1 "Iran"))
                                  :ARG2 (c19-8 / continent
                                               :name (c19-6 / name
                                                            :op1 "Europe")))
                     :time (c19-7 / now))
       :snt2 (c19-0 / hell
                    :mod (c19-2 / fuckin)
                    :mod (c19-12 / haha
                                 :mode expressive)
                    :mode expressive)
       :snt3 (c19-10 / brilliant-01))

# ::snt : The hostage-taker has been named as Sheikh Man Monis.Rubbish name. They should've called him Angry Brett.
# ::tokens [":", "The", "hostage", "-", "taker", "has", "been", "named", "as", "Sheikh", "Man", "Monis", ".", "Rubbish", "name", ".", "They", "should", "'ve", "called", "him", "Angry", "Brett", "."]
# ::lemmas [":", "the", "hostage", "-", "taker", "have", "be", "name", "as", "Sheikh", "Man", "Monis", ".", "rubbish", "name", ".", "they", "should", "'ve", "call", "he", "Angry", "Brett", "."]
(c20-1 / multi-sentence
       :snt1 (c20-4 / name-01
                    :ARG1 (c20-6 / person
                                 :ARG0-of (c20-12 / take-01
                                                  :ARG1 (c20-0 / hostage)))
                    :ARG2 (c20-13 / person
                                  :name (c20-5 / name
                                               :op1 "Sheikh"
                                               :op2 "Man"
                                               :op3 "Monis")))
       :snt2 (c20-7 / name
                    :mod (c20-8 / rubbish))
       :snt3 (c20-3 / recommend-01
                    :ARG1 (c20-9 / call-01
                                 :ARG0 (c20-11 / they)
                                 :ARG1 (c20-14 / he)
                                 :ARG2 (c20-2 / person
                                              :name (c20-10 / name
                                                            :op1 "Angry"
                                                            :op2 "Brett")))))

# ::snt lol close enough
# ::tokens ["lol", "close", "enough"]
# ::lemmas ["lol", "close", "enough"]
(c21-3 / close-10
       :ARG2-of (c21-0 / have-degree-91
                       :ARG3 (c21-1 / enough))
       :manner (c21-2 / loud)
       :mode expressive)

# ::snt was born in Iran and came to Australia as either a refugee or immigrant
# ::tokens ["was", "born", "in", "Iran", "and", "came", "to", "Australia", "as", "either", "a", "refugee", "or", "immigrant"]
# ::lemmas ["be", "bear", "in", "Iran", "and", "come", "to", "Australia", "as", "either", "a", "refugee", "or", "immigrant"]
(c22-11 / and
        :op1 (c22-1 / bear-02
                    :ARG1 (c22-0 / he)
                    :location (c22-8 / country
                                     :name (c22-4 / name
                                                  :op1 "Iran")))
        :op2 (c22-7 / come-01
                    :ARG1 c22-0
                    :ARG4 (c22-10 / country
                                  :name (c22-5 / name
                                               :op1 "Australia"))
                    :manner (c22-2 / or
                                   :op1 (c22-9 / refugee)
                                   :op2 (c22-6 / person
                                               :ARG0-of (c22-3 / immigrate-01)))))

# ::snt Joseph is obviously an intelligent troll Hahaha!
# ::tokens ["Joseph", "is", "obviously", "an", "intelligent", "troll", "Hahaha", "!"]
# ::lemmas ["Joseph", "be", "obviously", "an", "intelligent", "troll", "Hahaha", "!"]
(c23-1 / obvious-01
       :ARG1 (c23-2 / intelligent-01
                    :ARG1 (c23-5 / troll
                                 :domain (c23-4 / person
                                                :name (c23-3 / name
                                                             :op1 "Joseph"))))
       :mod (c23-0 / haha
                   :mode expressive))

# ::snt Dude, you make absolutely no sense....you said Islamisation of Europe....no connection to Europe whatsoever
# ::tokens ["Dude", ",", "you", "make", "absolutely", "no", "sense", "....", "you", "said", "Islamisation", "of", "Europe", "....", "no", "connection", "to", "Europe", "whatsoever"]
# ::lemmas ["dude", ",", "you", "make", "absolutely", "no", "sense", "....", "you", "say", "Islamisation", "of", "Europe", "....", "no", "connection", "to", "Europe", "whatsoever"]
(c24-11 / say-01
        :ARG0 (c24-5 / i)
        :ARG1 (c24-2 / sense-02
                     :ARG1 c24-2
                     :ARG1 (c24-7 / dude)
                     :degree (c24-12 / absolute)
                     :polarity -)
        :ARG2 c24-7
        :ARG1-of (c24-8 / cause-01
                        :ARG0 (c24-1 / say-01
                                     :ARG0 c24-7
                                     :ARG1 (c24-4 / and
                                                  :op1 (c24-3 / eliminate-01
                                                              :ARG1 (c24-9 / continent
                                                                           :name (c24-6 / name
                                                                                        :op1 "Europe")))
                                                  :op2 (c24-10 / connect-01
                                                               :ARG2 c24-9
                                                               :degree (c24-0 / whatsoever)
                                                               :polarity -)))))
