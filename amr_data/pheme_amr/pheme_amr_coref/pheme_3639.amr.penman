# ::snt got no info on that mate! Who knows!
# ::tokens ["got", "no", "info", "on", "that", "mate", "!", "Who", "knows", "!"]
# ::lemmas ["get", "no", "info", "on", "that", "mate", "!", "who", "know", "!"]
(c1-0 / multi-sentence
      :snt1 (c1-6 / say-01
                  :ARG0 (c1-1 / i)
                  :ARG1 (c1-5 / get-01
                              :ARG0 c1-1
                              :ARG1 (c1-4 / information
                                          :topic (c1-7 / that))
                              :polarity -)
                  :ARG2 (c1-3 / mate))
      :snt2 (c1-2 / know-01
                  :ARG0 (c1-8 / amr-unknown)))

# ::snt [Hangs head in the shame of lack of knowledge]
# ::tokens ["[", "Hangs", "head", "in", "the", "shame", "of", "lack", "of", "knowledge", "]"]
# ::lemmas ["[", "Hangs", "head", "in", "the", "shame", "of", "lack", "of", "knowledge", "]"]
(c2-0 / hang-01
      :ARG1 (c2-4 / head)
      :ARG2 (c2-2 / shame-02
                  :ARG0 (c2-1 / lack-01
                              :ARG1 (c2-3 / know-01))
                  :ARG1 c2-4))

# ::snt Did you not see Dr. FB's backwards Tweet about Victoria?
# ::tokens ["Did", "you", "not", "see", "Dr.", "FB", "'s", "backwards", "Tweet", "about", "Victoria", "?"]
# ::lemmas ["do", "you", "not", "see", "Dr.", "FB", "'s", "backwards", "Tweet", "about", "Victoria", "?"]
(c3-6 / see-01
      :ARG0 (c3-0 / you)
      :ARG1 (c3-7 / thing
                  :ARG1-of (c3-5 / tweet-01
                                 :ARG0 (c3-4 / person
                                             :name (c3-2 / name
                                                         :op1 "Dr."
                                                         :op2 "Foster"))
                                 :topic (c3-8 / person
                                              :name (c3-3 / name
                                                          :op1 "Victoria"))
                                 :direction (c3-1 / backwards)))
      :polarity (c3-9 / amr-unknown)
      :polarity -)

# ::snt TBF there's no shame in that!!!
# ::tokens ["TBF", "there", "'s", "no", "shame", "in", "that", "!", "!", "!"]
# ::lemmas ["TBF", "there", "be", "no", "shame", "in", "that", "!", "!", "!"]
(c4-0 / shame-02
      :ARG0 (c4-2 / that)
      :mod (c4-1 / fucking
                 :mode expressive)
      :polarity -)

# ::snt Or one tonight, one tomorrow? And then off to Victoria?
# ::tokens ["Or", "one", "tonight", ",", "one", "tomorrow", "?", "And", "then", "off", "to", "Victoria", "?"]
# ::lemmas ["or", "one", "tonight", ",", "one", "tomorrow", "?", "and", "then", "off", "to", "Victoria", "?"]
(c5-1 / multi-sentence
      :snt1 (c5-2 / or
                  :op1 (c5-0 / one
                             :time (c5-7 / date-entity
                                         :dayperiod (c5-4 / night)
                                         :mod (c5-12 / today)))
                  :op2 (c5-11 / one
                              :time (c5-10 / tomorrow)))
      :snt2 (c5-13 / and
                   :op2 (c5-6 / off
                              :op1 (c5-8 / person
                                         :name (c5-5 / name
                                                     :op1 "Victoria"))
                              :time (c5-9 / then)
                              :polarity (c5-3 / amr-unknown))))

# ::snt Can't wait to see the setlist! Hopefully pulling from both albums...
# ::tokens ["Ca", "n't", "wait", "to", "see", "the", "setlist", "!", "Hopefully", "pulling", "from", "both", "albums", "..."]
# ::lemmas ["can", "not", "wait", "to", "see", "the", "setlist", "!", "hopefully", "pull", "from", "both", "album", "..."]
(c6-2 / multi-sentence
      :snt1 (c6-1 / wait-01
                  :ARG1 (c6-5 / i)
                  :ARG2 (c6-7 / see-01
                              :ARG0 c6-5
                              :ARG1 (c6-4 / setlist)))
      :snt2 (c6-6 / pull-01
                  :ARG2 (c6-8 / album
                              :mod (c6-3 / both))
                  :ARG1-of (c6-0 / hope-01)))

# ::snt yes mate although venue's on Victoria St...
# ::tokens ["yes", "mate", "although", "venue", "'s", "on", "Victoria", "St", "..."]
# ::lemmas ["yes", "mate", "although", "venue", "'s", "on", "Victoria", "St", "..."]
(c7-6 / say-01
      :ARG0 (c7-3 / i)
      :ARG1 (c7-0 / yes)
      :ARG2 (c7-1 / mate)
      :concession (c7-5 / venue
                        :location (c7-2 / street
                                        :name (c7-4 / name
                                                    :op1 "Victoria"
                                                    :op2 "St"))))
