# ::snt They just going to cleanse the neighbourhood of blacks and 'black sympathisers' so no-one can complain??
# ::tokens ["They", "just", "going", "to", "cleanse", "the", "neighbourhood", "of", "blacks", "and", "'", "black", "sympathisers", "'", "so", "no", "-", "one", "can", "complain", "?", "?"]
# ::lemmas ["they", "just", "go", "to", "cleanse", "the", "neighbourhood", "of", "black", "and", "'", "black", "sympathiser", "'", "so", "no", "-", "one", "can", "complain", "?", "?"]
(c1-8 / cleanse-01
      :ARG0 (c1-13 / they)
      :ARG1 (c1-4 / neighborhood
                  :location-of (c1-15 / and
                                      :op1 (c1-6 / person
                                                 :ARG1-of (c1-2 / black-05))
                                      :op2 (c1-14 / person
                                                  :ARG0-of (c1-11 / sympathize-01
                                                                  :ARG1 (c1-1 / person
                                                                              :ARG1-of (c1-9 / black-05))))))
      :ARG0-of (c1-7 / cause-01
                     :ARG1 (c1-12 / possible-01
                                  :ARG1 (c1-10 / complain-01
                                               :ARG0 (c1-5 / no-one))
                                  :polarity (c1-3 / amr-unknown)))
      :mod (c1-0 / just))

# ::snt Be careful
# ::tokens ["Be", "careful"]
# ::lemmas ["be", "careful"]
(c2-1 / care-04
      :ARG0 (c2-0 / you))

# ::snt not good, State or Feds need to step in and bring some integrity &amp; accountibility
# ::tokens ["not", "good", ",", "State", "or", "Feds", "need", "to", "step", "in", "and", "bring", "some", "integrity", "&", "amp", ";", "accountibility"]
# ::lemmas ["not", "good", ",", "State", "or", "Feds", "need", "to", "step", "in", "and", "bring", "some", "integrity", "&", "amp", ";", "accountibility"]
(c3-1 / multi-sentence
      :snt1 (c3-11 / good-02
                   :polarity -)
      :snt2 (c3-7 / need-01
                  :ARG0 (c3-3 / or
                              :op1 (c3-10 / government-organization
                                          :ARG0-of (c3-8 / govern-01))
                              :op2 (c3-0 / fed))
                  :ARG1 (c3-14 / and
                               :op1 (c3-12 / step-in-02
                                           :ARG1 c3-3)
                               :op2 (c3-2 / bring-01
                                          :ARG0 c3-3
                                          :ARG1 (c3-5 / and
                                                      :op1 (c3-6 / integrity
                                                                 :mod (c3-4 / some))
                                                      :op2 (c3-9 / amp)
                                                      :op3 (c3-13 / accountibility))))))

# ::snt here's the official release
# ::tokens ["here", "'s", "the", "official", "release"]
# ::lemmas ["here", "be", "the", "official", "release"]
(c4-2 / release-01
      :mod (c4-0 / official)
      :location (c4-1 / here))

# ::snt Smells like
# ::tokens ["Smells", "like"]
# ::lemmas ["smell", "like"]
(c5-0 / smell-02
      :ARG1-of (c5-1 / resemble-01))

# ::snt : Another Gaza in America.
# ::tokens [":", "Another", "Gaza", "in", "America", "."]
# ::lemmas [":", "another", "Gaza", "in", "America", "."]
(c6-0 / be-located-at-91
      :ARG1 (c6-4 / city
                  :name (c6-1 / name
                              :op1 "Gaza")
                  :mod (c6-5 / another))
      :ARG2 (c6-3 / country
                  :name (c6-2 / name
                              :op1 "America")))

# ::snt They don't want us seeing this! Police shoot at unarmed civilians in their own yard!!
# ::tokens ["They", "do", "n't", "want", "us", "seeing", "this", "!", "Police", "shoot", "at", "unarmed", "civilians", "in", "their", "own", "yard", "!", "!"]
# ::lemmas ["they", "do", "not", "want", "we", "see", "this", "!", "police", "shoot", "at", "unarmed", "civilian", "in", "their", "own", "yard", "!", "!"]
(c7-2 / multi-sentence
      :snt1 (c7-0 / want-01
                  :ARG0 (c7-10 / they)
                  :ARG1 (c7-9 / see-01
                              :ARG0 (c7-4 / we)
                              :ARG1 (c7-8 / this))
                  :polarity -)
      :snt2 (c7-3 / shoot-02
                  :ARG0 (c7-6 / police)
                  :ARG1 (c7-7 / civilian
                              :ARG1-of (c7-11 / arm-01
                                              :polarity -))
                  :location (c7-1 / yard
                                  :poss (c7-5 / they))))

# ::snt It shouldn't be, but in a police state it is.
# ::tokens ["It", "should", "n't", "be", ",", "but", "in", "a", "police", "state", "it", "is", "."]
# ::lemmas ["it", "should", "not", "be", ",", "but", "in", "a", "police", "state", "it", "be", "."]
(c8-3 / contrast-01
      :ARG1 (c8-2 / recommend-01
                  :ARG1 (c8-0 / it)
                  :polarity -)
      :ARG2 (c8-4 / state
                  :mod (c8-1 / police)))

# ::snt the only thing i can think is, is this even legal
# ::tokens ["the", "only", "thing", "i", "can", "think", "is", ",", "is", "this", "even", "legal"]
# ::lemmas ["the", "only", "thing", "i", "can", "think", "be", ",", "be", "this", "even", "legal"]
(c9-4 / possible-01
      :ARG1 (c9-6 / think-01
                  :ARG0 (c9-3 / i)
                  :ARG1 (c9-0 / legal-02
                              :ARG1 (c9-5 / this)
                              :mod (c9-2 / even))
                  :mod (c9-1 / only)))

# ::snt Channel and Channel have reporters right with the protesters, word of a CNN truck around earlier as well
# ::tokens ["Channel", "and", "Channel", "have", "reporters", "right", "with", "the", "protesters", ",", "word", "of", "a", "CNN", "truck", "around", "earlier", "as", "well"]
# ::lemmas ["Channel", "and", "Channel", "have", "reporter", "right", "with", "the", "protester", ",", "word", "of", "a", "CNN", "truck", "around", "early", "as", "well"]
(c10-15 / and
        :op1 (c10-8 / right-06
                    :ARG1 (c10-4 / and
                                 :op1 (c10-7 / publication
                                             :name (c10-5 / name
                                                          :op1 "Channel"))
                                 :op2 (c10-14 / publication
                                              :name (c10-6 / name
                                                           :op1 "Channel")))
                    :ARG2 (c10-1 / person
                                 :ARG0-of (c10-13 / protest-01)))
        :op2 (c10-0 / word-01
                    :ARG0 (c10-11 / truck
                                  :poss (c10-3 / publication
                                               :name (c10-9 / name
                                                            :op1 "CNN")))
                    :location (c10-10 / around)
                    :time (c10-2 / before)
                    :mod (c10-12 / as-well)))

# ::snt How can they identify a journalist?
# ::tokens ["How", "can", "they", "identify", "a", "journalist", "?"]
# ::lemmas ["how", "can", "they", "identify", "a", "journalist", "?"]
(c11-2 / possible-01
       :ARG1 (c11-1 / identify-01
                    :ARG0 (c11-3 / they)
                    :ARG1 (c11-0 / journalist)
                    :manner (c11-4 / amr-unknown)))

# ::snt : is completely shut down. No journalists allowed. sus
# ::tokens [":", "is", "completely", "shut", "down", ".", "No", "journalists", "allowed", ".", "sus"]
# ::lemmas [":", "be", "completely", "shut", "down", ".", "no", "journalist", "allow", ".", "sus"]
(c12-1 / multi-sentence
       :snt1 (c12-5 / shut-down-05
                    :ARG1 (c12-2 / broadcast-program
                                 :name (c12-3 / name
                                              :op1 ":"))
                    :ARG1-of (c12-4 / complete-02))
       :snt2 (c12-6 / allow-01
                    :ARG1 (c12-0 / journalist)
                    :polarity -))

# ::snt FAA just closed off Ferguson to all news helicopters too
# ::tokens ["FAA", "just", "closed", "off", "Ferguson", "to", "all", "news", "helicopters", "too"]
# ::lemmas ["FAA", "just", "close", "off", "Ferguson", "to", "all", "news", "helicopter", "too"]
(c13-6 / close-off-05
       :ARG0 (c13-7 / government-organization
                    :name (c13-2 / name
                                 :op1 "FAA"))
       :ARG1 (c13-5 / city
                    :name (c13-3 / name
                                 :op1 "Ferguson"))
       :ARG2 (c13-0 / helicopter
                    :mod (c13-4 / news)
                    :mod (c13-9 / all)
                    :mod (c13-8 / too))
       :time (c13-1 / just))

# ::snt that's where citizen journalists come in. many have a phone w/a camera. if they can stop looting long enough to do so
# ::tokens ["that", "'s", "where", "citizen", "journalists", "come", "in", ".", "many", "have", "a", "phone", "w", "/", "a", "camera", ".", "if", "they", "can", "stop", "looting", "long", "enough", "to", "do", "so"]
# ::lemmas ["that", "be", "where", "citizen", "journalist", "come", "in", ".", "many", "have", "a", "phone", "w", "/", "a", "camera", ".", "if", "they", "can", "stop", "loot", "long", "enough", "to", "do", "so"]
(c14-3 / multi-sentence
       :snt1 (c14-8 / come-in-07
                    :ARG1 (c14-0 / journalist
                                 :mod (c14-7 / citizen))
                    :location (c14-13 / that))
       :snt2 (c14-1 / have-03
                    :ARG0 c14-0
                    :quant (c14-6 / many))
       :ARG1 (c14-9 / phone
                    :prep-with (c14-12 / camera))
       :snt3 (c14-15 / have-condition-91
                     :ARG2 (c14-14 / possible-01
                                   :ARG1 (c14-10 / stop-01
                                                 :ARG0 c14-0
                                                 :ARG1 (c14-2 / loot-01)
                                                 :ARG1-of (c14-11 / long-03
                                                                  :ARG2-of (c14-5 / have-degree-91
                                                                                  :ARG1 c14-10
                                                                                  :ARG3 (c14-4 / enough)
                                                                                  :ARG6 c14-10))))))

# ::snt Wouldn't want an objective voice there: : is completely shut down. No journalists allowed.
# ::tokens ["Would", "n't", "want", "an", "objective", "voice", "there", ":", ":", "is", "completely", "shut", "down", ".", "No", "journalists", "allowed", "."]
# ::lemmas ["would", "not", "want", "an", "objective", "voice", "there", ":", ":", "be", "completely", "shut", "down", ".", "no", "journalist", "allow", "."]
(c15-2 / multi-sentence
       :snt1 (c15-1 / want-01
                    :ARG1 (c15-5 / voice
                                 :mod (c15-3 / objective)
                                 :location (c15-8 / there))
                    :polarity -)
       :snt2 (c15-7 / shut-down-05
                    :ARG1 (c15-4 / it)
                    :ARG1-of (c15-6 / complete-02))
       :snt3 (c15-9 / allow-01
                    :ARG1 (c15-0 / journalist)
                    :polarity -))

# ::snt See now that right there is some scary shit! Black out time &amp; anything goes with having answer it.
# ::tokens ["See", "now", "that", "right", "there", "is", "some", "scary", "shit", "!", "Black", "out", "time", "&", "amp", ";", "anything", "goes", "with", "having", "answer", "it", "."]
# ::lemmas ["see", "now", "that", "right", "there", "be", "some", "scary", "shit", "!", "black", "out", "time", "&", "amp", ";", "anything", "go", "with", "having", "answer", "it", "."]
(c16-2 / multi-sentence
       :snt1 (c16-13 / see-01
                     :ARG0 (c16-0 / you)
                     :ARG1 (c16-6 / shit
                                  :ARG0-of (c16-1 / scary-03)
                                  :mod (c16-5 / some)
                                  :location (c16-15 / there
                                                    :mod (c16-11 / right)))
                     :time (c16-9 / now))
       :snt2 (c16-16 / and
                     :op1 (c16-3 / black-out-03)
                     :op2 (c16-7 / amp))
       :snt3 (c16-12 / go-22
                     :ARG1 (c16-10 / anything)
                     :ARG2 (c16-4 / obligate-01
                                  :ARG2 (c16-14 / answer-01
                                                :ARG1 (c16-8 / it)))))

# ::snt : is completely shut down. No journalists allowed. And so it begins
# ::tokens [":", "is", "completely", "shut", "down", ".", "No", "journalists", "allowed", ".", "And", "so", "it", "begins"]
# ::lemmas [":", "be", "completely", "shut", "down", ".", "no", "journalist", "allow", ".", "and", "so", "it", "begin"]
(c17-2 / multi-sentence
       :snt1 (c17-7 / shut-down-05
                    :ARG1 (c17-1 / facility)
                    :ARG1-of (c17-6 / complete-02))
       :snt2 (c17-8 / allow-01
                    :ARG1 (c17-0 / journalist)
                    :polarity -)
       :snt3 (c17-4 / and
                    :op2 (c17-3 / begin-01
                                :ARG1 (c17-5 / it))))

# ::snt Unacceptable
# ::tokens ["Unacceptable"]
# ::lemmas ["unacceptable"]
(c18-0 / possible-01
       :ARG1 (c18-1 / accept-01)
       :polarity -)

# ::snt : is completely shut down. No journalists allowed. unreal. what the fuck kind of freedom is that?
# ::tokens [":", "is", "completely", "shut", "down", ".", "No", "journalists", "allowed", ".", "unreal", ".", "what", "the", "fuck", "kind", "of", "freedom", "is", "that", "?"]
# ::lemmas [":", "be", "completely", "shut", "down", ".", "no", "journalist", "allow", ".", "unreal", ".", "what", "the", "fuck", "kind", "of", "freedom", "be", "that", "?"]
(c19-2 / multi-sentence
       :snt1 (c19-8 / shut-down-05
                    :ARG1 (c19-10 / and
                                  :op1 (c19-0 / journalist
                                              :polarity -)
                                  :op2 (c19-3 / allow-01
                                              :polarity -))
                    :ARG1-of (c19-7 / complete-02))
       :snt2 (c19-6 / real-04
                    :ARG1 (c19-1 / free-04
                                 :mod (c19-9 / kind
                                             :mod (c19-5 / amr-unknown)
                                             :mod (c19-4 / fuck
                                                         :mode expressive)))
                    :polarity -))

# ::snt aka Marshall Law in full effect. This is why everyone needs to own a gun.
# ::tokens ["aka", "Marshall", "Law", "in", "full", "effect", ".", "This", "is", "why", "everyone", "needs", "to", "own", "a", "gun", "."]
# ::lemmas ["aka", "Marshall", "Law", "in", "full", "effect", ".", "this", "be", "why", "everyone", "need", "to", "own", "a", "gun", "."]
(c20-1 / multi-sentence
       :snt1 (c20-0 / law
                    :name (c20-6 / name
                                 :op1 "Marshall"
                                 :op2 "Law")
                    :ARG1-of (c20-5 / effect-03
                                    :degree (c20-2 / full)))
       :snt2 (c20-8 / cause-01
                    :ARG0 (c20-10 / this)
                    :ARG1 (c20-7 / need-01
                                 :ARG0 (c20-3 / everyone)
                                 :ARG1 (c20-4 / own-01
                                              :ARG0 c20-3
                                              :ARG1 (c20-9 / gun)))))

# ::snt shut down how?
# ::tokens ["shut", "down", "how", "?"]
# ::lemmas ["shut", "down", "how", "?"]
(c21-0 / shut-down-05
       :ARG0 (c21-1 / you)
       :manner (c21-2 / amr-unknown)
       :mode imperative)

# ::snt fucking disgusting.
# ::tokens ["fucking", "disgusting", "."]
# ::lemmas ["fuck", "disgusting", "."]
(c22-0 / disgust-01
       :mod (c22-1 / fucking))
