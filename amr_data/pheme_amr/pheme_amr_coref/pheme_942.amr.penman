# ::snt Ridiculous! ..police trying to cover up for a botched shooting.
# ::tokens ["Ridiculous", "!", "..", "police", "trying", "to", "cover", "up", "for", "a", "botched", "shooting", "."]
# ::lemmas ["ridiculous", "!", "..", "police", "try", "to", "cover", "up", "for", "a", "botched", "shooting", "."]
(c1-2 / ridiculous-02
      :ARG1 (c1-5 / try-01
                  :ARG0 (c1-1 / police)
                  :ARG1 (c1-3 / cover-up-04
                              :ARG0 c1-1
                              :ARG1 (c1-4 / shoot-02
                                          :ARG1-of (c1-0 / botch-01))))
      :mode expressive)

# ::snt police are trigger-happy racist butchers
# ::tokens ["police", "are", "trigger", "-", "happy", "racist", "butchers"]
# ::lemmas ["police", "be", "trigger", "-", "happy", "racist", "butcher"]
(c2-3 / butcher
      :mod (c2-1 / racist)
      :ARG1-of (c2-2 / trigger-happy-03)
      :domain (c2-0 / police))

# ::snt he was guilty of being BLACK...Only reason he was shot by the police....
# ::tokens ["he", "was", "guilty", "of", "being", "BLACK", "...", "Only", "reason", "he", "was", "shot", "by", "the", "police", "...."]
# ::lemmas ["he", "be", "guilty", "of", "be", "BLACK", "...", "only", "reason", "he", "be", "shoot", "by", "the", "police", "...."]
(c3-1 / multi-sentence
      :snt1 (c3-7 / guilty-01
                  :ARG1 (c3-0 / he)
                  :ARG2 (c3-2 / black-05
                              :ARG1 c3-0))
      :snt2 (c3-5 / reason
                  :mod (c3-3 / only)
                  :ARG0-of (c3-6 / cause-01
                                 :ARG1 (c3-8 / shoot-02
                                             :ARG0 (c3-4 / police)
                                             :ARG1 (c3-9 / he)))))

# ::snt New law Save Time: 'shoot to kill all suspects of an alleged crime'
# ::tokens ["New", "law", "Save", "Time", ":", "'", "shoot", "to", "kill", "all", "suspects", "of", "an", "alleged", "crime", "'"]
# ::lemmas ["new", "law", "Save", "time", ":", "'", "shoot", "to", "kill", "all", "suspect", "of", "an", "alleged", "crime", "'"]
(c4-8 / say-01
      :ARG0 (c4-0 / law
                  :name (c4-4 / name
                              :op1 "Save"
                              :op2 "Time")
                  :ARG1-of (c4-5 / new-01))
      :ARG1 (c4-2 / shoot-02
                  :purpose (c4-9 / kill-01
                                 :ARG1 (c4-6 / person
                                             :ARG2-of (c4-1 / suspect-01
                                                            :ARG1 (c4-7 / crime-02
                                                                        :ARG1-of (c4-10 / allege-01)))
                                             :mod (c4-3 / all)))))

# ::snt police say shooting death of Michael Brown came after teen was suspect in robbery
# ::tokens ["police", "say", "shooting", "death", "of", "Michael", "Brown", "came", "after", "teen", "was", "suspect", "in", "robbery"]
# ::lemmas ["police", "say", "shoot", "death", "of", "Michael", "Brown", "come", "after", "teen", "be", "suspect", "in", "robbery"]
(c5-7 / say-01
      :ARG0 (c5-3 / police)
      :ARG1 (c5-5 / come-03
                  :ARG1 (c5-4 / die-01
                              :ARG1 (c5-9 / person
                                          :name (c5-2 / name
                                                      :op1 "Michael"
                                                      :op2 "Brown"))
                              :manner (c5-1 / shoot-02))
                  :time (c5-10 / after
                               :op1 (c5-0 / suspect-01
                                          :ARG1 (c5-8 / teen)
                                          :ARG2 (c5-6 / rob-01
                                                      :ARG0 c5-8)))))

# ::snt :did not wait for the facts to come out .... this was his first response...
# ::tokens [":", "did", "not", "wait", "for", "the", "facts", "to", "come", "out", "....", "this", "was", "his", "first", "response", "..."]
# ::lemmas [":", "do", "not", "wait", "for", "the", "fact", "to", "come", "out", "....", "this", "be", "his", "first", "response", "..."]
(c6-7 / and
      :op1 (c6-1 / wait-01
                 :ARG1 (c6-0 / he)
                 :ARG2 (c6-5 / come-out-09
                             :ARG1 (c6-2 / fact))
                 :polarity -)
      :op2 (c6-4 / respond-01
                 :ARG0 c6-0
                 :ARG2 (c6-6 / this)
                 :ord (c6-3 / ordinal-entity
                            :value 1)))

# ::snt Ferguson police chief should be removed from office.
# ::tokens ["Ferguson", "police", "chief", "should", "be", "removed", "from", "office", "."]
# ::lemmas ["Ferguson", "police", "chief", "should", "be", "remove", "from", "office", "."]
(c7-5 / recommend-01
      :ARG1 (c7-2 / remove-01
                  :ARG1 (c7-4 / person
                              :ARG0-of (c7-0 / have-org-role-91
                                             :ARG1 (c7-8 / police
                                                         :mod (c7-6 / city
                                                                    :name (c7-3 / name
                                                                                :op1 "Ferguson")))
                                             :ARG2 (c7-7 / chief)))
                  :ARG2 (c7-1 / office)))

# ::snt Sounds curiously like desperate, trumped up, not believable garbage, and even if true does not justify homicide.
# ::tokens ["Sounds", "curiously", "like", "desperate", ",", "trumped", "up", ",", "not", "believable", "garbage", ",", "and", "even", "if", "true", "does", "not", "justify", "homicide", "."]
# ::lemmas ["sound", "curiously", "like", "desperate", ",", "trump", "up", ",", "not", "believable", "garbage", ",", "and", "even", "if", "true", "do", "not", "justify", "homicide", "."]
(c8-9 / sound-01
      :ARG2 (c8-11 / and
                   :op1 (c8-5 / desperate-02)
                   :op2 (c8-10 / trump-up-01)
                   :op3 (c8-7 / garbage
                              :ARG1-of (c8-4 / possible-01
                                             :polarity -)
                              :ARG1-of (c8-2 / believable-03))
                   :op4 (c8-0 / justify-01
                              :ARG0 (c8-8 / true-01)
                              :ARG1 (c8-1 / homicide)
                              :concession (c8-3 / even-if
                                                :op1 c8-8)
                              :polarity -))
      :manner (c8-6 / curious-02))
