# ::snt Because there is only one hostage taker, he will need to sleep, eventually.
# ::tokens ["Because", "there", "is", "only", "one", "hostage", "taker", ",", "he", "will", "need", "to", "sleep", ",", "eventually", "."]
# ::lemmas ["because", "there", "be", "only", "one", "hostage", "taker", ",", "he", "will", "need", "to", "sleep", ",", "eventually", "."]
(c1-5 / cause-01
      :ARG0 (c1-4 / person
                  :ARG0-of (c1-7 / take-01
                                 :ARG1 (c1-0 / hostage))
                  :mod (c1-1 / only)
                  :quant 1)
      :ARG1 (c1-3 / need-01
                  :ARG0 (c1-8 / he)
                  :ARG1 (c1-6 / sleep-01
                              :ARG0 c1-8)
                  :time (c1-2 / eventual)))

# ::snt prayers for everyone and stay safe Zak
# ::tokens ["prayers", "for", "everyone", "and", "stay", "safe", "Zak"]
# ::lemmas ["prayer", "for", "everyone", "and", "stay", "safe", "zak"]
(c2-6 / say-01
      :ARG0 (c2-3 / i)
      :ARG1 (c2-8 / and
                  :op1 (c2-5 / pray-01
                             :ARG0 c2-3
                             :ARG1 (c2-1 / everyone))
                  :op2 (c2-2 / stay-01
                             :ARG1 c2-1
                             :ARG3 (c2-0 / safe-01
                                         :ARG1 c2-1)))
      :ARG2 (c2-7 / person
                  :name (c2-4 / name
                              :op1 "Zak")))

# ::snt excuse me Sydney Morning herald your maps wrong George street should be Pitt
# ::tokens ["excuse", "me", "Sydney", "Morning", "herald", "your", "maps", "wrong", "George", "street", "should", "be", "Pitt"]
# ::lemmas ["excuse", "i", "Sydney", "Morning", "herald", "your", "map", "wrong", "George", "street", "should", "be", "Pitt"]
(c3-5 / excuse-01
      :ARG0 (c3-1 / you)
      :ARG1 (c3-6 / i)
      :ARG2 (c3-0 / herald-01
                  :ARG0 (c3-4 / broadcast-program
                              :name (c3-7 / name
                                          :op1 "Sydney"
                                          :op2 "Morning"))
                  :ARG1 (c3-3 / map
                              :poss c3-1
                              :ARG1-of (c3-2 / wrong-04
                                             :ARG2 (c3-10 / recommend-01
                                                          :ARG1 (c3-11 / city-district
                                                                       :name (c3-8 / name
                                                                                   :op1 "Pitt")
                                                                       :domain (c3-12 / street
                                                                                      :name (c3-9 / name
                                                                                                  :op1 "George"
                                                                                                  :op2 "Street")))))))
      :mode imperative)

# ::snt : A map of the loc. at Martin Place in Sydney's CBD, and some of the surrounding prominent bldgs.
# ::tokens [":", "A", "map", "of", "the", "loc", ".", "at", "Martin", "Place", "in", "Sydney", "'s", "CBD", ",", "and", "some", "of", "the", "surrounding", "prominent", "bldgs", "."]
# ::lemmas [":", "a", "map", "of", "the", "loc", ".", "at", "Martin", "Place", "in", "Sydney", "'s", "CBD", ",", "and", "some", "of", "the", "surround", "prominent", "bldgs", "."]
(c4-1 / map
      :mod (c4-0 / location
                 :name (c4-5 / name
                             :op1 "Martin"
                             :op2 "Place")
                 :location (c4-9 / city-district
                                 :name (c4-6 / name
                                             :op1 "CBD")
                                 :part-of (c4-8 / city
                                                :name (c4-7 / name
                                                            :op1 "Sydney"))))
      :mod (c4-11 / some
                  :ARG1-of (c4-4 / include-91
                                 :ARG2 (c4-2 / bldg
                                             :mod (c4-10 / prominent)
                                             :ARG1-of (c4-3 / surround-01
                                                            :ARG2 c4-9)))))

# ::snt where is batman???
# ::tokens ["where", "is", "batman", "?", "?", "?"]
# ::lemmas ["where", "be", "batman", "?", "?", "?"]
(c5-3 / be-located-at-91
      :ARG1 (c5-1 / person
                  :name (c5-0 / name
                              :op1 "Batman"))
      :ARG2 (c5-2 / amr-unknown))

# ::snt : Map location in 's CBD, and surrounding prominent buildings
# ::tokens [":", "Map", "location", "in", "'s", "CBD", ",", "and", "surrounding", "prominent", "buildings"]
# ::lemmas [":", "Map", "location", "in", "'s", "CBD", ",", "and", "surround", "prominent", "building"]
(c6-0 / location
      :location-of (c6-8 / and
                         :op1 (c6-6 / city-district
                                    :name (c6-3 / name
                                                :op1 "CBD")
                                    :part-of (c6-5 / city))
                         :op2 (c6-2 / building
                                    :mod (c6-4 / prominent)
                                    :ARG1-of (c6-7 / surround-01
                                                   :ARG2 c6-6)))
      :ARG2-of (c6-1 / map-01))

# ::snt RT A map of the location at Martin Place in Sydney's CBD
# ::tokens ["RT", "A", "map", "of", "the", "location", "at", "Martin", "Place", "in", "Sydney", "'s", "CBD"]
# ::lemmas ["RT", "A", "map", "of", "the", "location", "at", "Martin", "Place", "in", "Sydney", "'s", "CBD"]
(c7-1 / map
      :source (c7-5 / publication
                    :name (c7-3 / name
                                :op1 "RT"))
      :topic (c7-0 / location
                   :location (c7-10 / street-address-91
                                    :ARG2 (c7-2 / street
                                                :name (c7-4 / name
                                                            :op1 "Martin"
                                                            :op2 "Place"))
                                    :ARG4 (c7-7 / city-district
                                                :name (c7-6 / name
                                                            :op1 "CBD")
                                                :part-of (c7-8 / city
                                                               :name (c7-9 / name
                                                                           :op1 "Sydney"))))))

# ::snt also pretty sure CBA hasn't been in that position since they moved to Darling Quarter in .
# ::tokens ["also", "pretty", "sure", "CBA", "has", "n't", "been", "in", "that", "position", "since", "they", "moved", "to", "Darling", "Quarter", "in", "."]
# ::lemmas ["also", "pretty", "sure", "CBA", "have", "not", "be", "in", "that", "position", "since", "they", "move", "to", "Darling", "Quarter", "in", "."]
(c8-7 / sure-02
      :ARG1 (c8-4 / position-01
                  :ARG1 (c8-6 / company
                              :name (c8-2 / name
                                          :op1 "CBA"))
                  :ARG2 (c8-8 / that)
                  :time (c8-1 / since
                              :op1 (c8-0 / move-01
                                         :ARG0 c8-6
                                         :ARG2 (c8-5 / city-district
                                                     :name (c8-3 / name
                                                                 :op1 "Darling"
                                                                 :op2 " Quarter"))))
                  :polarity -)
      :degree (c8-9 / pretty)
      :mod (c8-10 / also))

# ::snt Does the RBA keep any gold in the vault? Maybe it's a distraction from an epic heist?
# ::tokens ["Does", "the", "RBA", "keep", "any", "gold", "in", "the", "vault", "?", "Maybe", "it", "'s", "a", "distraction", "from", "an", "epic", "heist", "?"]
# ::lemmas ["do", "the", "RBA", "keep", "any", "gold", "in", "the", "vault", "?", "maybe", "it", "be", "a", "distraction", "from", "an", "epic", "heist", "?"]
(c9-1 / multi-sentence
      :snt1 (c9-11 / keep-01
                   :polarity (c9-12 / amr-unknown)
                   :ARG0 (c9-2 / organization
                               :name (c9-6 / name
                                           :op1 "RBA"))
                   :ARG1 (c9-10 / gold
                                :mod (c9-4 / any))
                   :location (c9-7 / vault))
      :snt2 (c9-8 / possible-01
                  :ARG1 (c9-9 / distract-01
                              :ARG0 (c9-5 / it)
                              :ARG2 (c9-0 / heist
                                          :mod (c9-3 / epic)))
                  :polarity c9-12))

# ::snt I pine for Sydney of the 's and 's.
# ::tokens ["I", "pine", "for", "Sydney", "of", "the", "'s", "and", "'", "s."]
# ::lemmas ["i", "pine", "for", "Sydney", "of", "the", "'s", "and", "'", "s."]
(c10-3 / pine-01
       :ARG0 (c10-1 / i)
       :ARG1 (c10-5 / city
                    :name (c10-2 / name
                                 :op1 "Sydney")
                    :time (c10-6 / and
                                 :op1 (c10-4 / date-entity
                                             :decade 1980)
                                 :op2 (c10-0 / date-entity
                                             :decade 2000))))

# ::snt Awww almost made Opera House how cute...can see why he's a "lone wolf" "lone douche" more like it...
# ::tokens ["Awww", "almost", "made", "Opera", "House", "how", "cute", "...", "can", "see", "why", "he", "'s", "a", "\"", "lone", "wolf", "\"", "\"", "lone", "douche", "\"", "more", "like", "it", "..."]
# ::lemmas ["Awww", "almost", "make", "Opera", "House", "how", "cute", "...", "can", "see", "why", "he", "be", "a", "\"", "lone", "wolf", "\"", "\"", "lone", "douche", "\"", "more", "like", "it", "..."]
(c11-16 / and
        :op1 (c11-2 / make-02
                    :ARG1 (c11-8 / cute
                                 :degree (c11-12 / so))
                    :ARG2 (c11-7 / company
                                 :name (c11-5 / name
                                              :op1 "Opera"
                                              :op2 "House"))
                    :mod (c11-4 / almost))
        :op2 (c11-6 / possible-01
                    :ARG1 (c11-3 / see-01
                                 :ARG1 (c11-15 / thing
                                               :ARG0-of (c11-11 / cause-01
                                                                :ARG1 (c11-9 / douche
                                                                             :mod (c11-1 / lone)
                                                                             :domain (c11-0 / he)
                                                                             :ARG1-of (c11-10 / resemble-01
                                                                                              :mod (c11-13 / lone)
                                                                                              :ARG2 c11-9)
                                                                             :mod (c11-14 / more)))))))

# ::snt Yes, they're after the lawyers too. (seriously tho). We haven't seen anything happen yet Positivity
# ::tokens ["Yes", ",", "they", "'re", "after", "the", "lawyers", "too", ".", "(", "seriously", "tho", ")", ".", "We", "have", "n't", "seen", "anything", "happen", "yet", "Positivity"]
# ::lemmas ["yes", ",", "they", "be", "after", "the", "lawyer", "too", ".", "(", "seriously", "tho", ")", ".", "we", "have", "not", "see", "anything", "happen", "yet", "positivity"]
(c12-4 / multi-sentence
       :snt1 (c12-3 / look-after-07
                    :ARG0 (c12-9 / they)
                    :ARG1 (c12-6 / lawyer)
                    :mod (c12-7 / too)
                    :ARG2-of (c12-8 / serious-01))
       :snt2 (c12-5 / see-01
                    :ARG0 (c12-1 / we)
                    :ARG1 (c12-10 / anything)
                    :time (c12-2 / yet)
                    :polarity -)
       :snt3 (c12-0 / hopeful-03))

# ::snt Your map labels Pitt St as George St.
# ::tokens ["Your", "map", "labels", "Pitt", "St", "as", "George", "St."]
# ::lemmas ["your", "map", "label", "Pitt", "St", "as", "George", "St."]
(c13-1 / label-01
       :ARG0 (c13-2 / map
                    :poss (c13-0 / you))
       :ARG1 (c13-6 / street
                    :name (c13-4 / name
                                 :op1 "Pitt"
                                 :op2 "St"))
       :ARG2 (c13-3 / street
                    :name (c13-5 / name
                                 :op1 "George"
                                 :op2 "St.")))

# ::snt when he gets The PM Chocolate Craving he may lapse into sugar overload coma.
# ::tokens ["when", "he", "gets", "The", "PM", "Chocolate", "Craving", "he", "may", "lapse", "into", "sugar", "overload", "coma", "."]
# ::lemmas ["when", "he", "get", "The", "PM", "Chocolate", "Craving", "he", "may", "lapse", "into", "sugar", "overload", "coma", "."]
(c14-4 / possible-01
       :ARG1 (c14-1 / lapse-01
                    :ARG1 (c14-0 / he)
                    :ARG4 (c14-5 / coma
                                 :mod (c14-2 / overload-01
                                             :ARG0 (c14-7 / sugar))))
       :time (c14-6 / get-01
                    :ARG0 c14-0
                    :ARG1 (c14-8 / thing
                                 :name (c14-3 / name
                                              :op1 "The"
                                              :op2 "PM"
                                              :op3 "Chocolate"
                                              :op4 "Craving"))))

# ::snt : A map of the location at Martin Place Notice the remarkable proximity to Channel
# ::tokens [":", "A", "map", "of", "the", "location", "at", "Martin", "Place", "Notice", "the", "remarkable", "proximity", "to", "Channel"]
# ::lemmas [":", "a", "map", "of", "the", "location", "at", "Martin", "Place", "Notice", "the", "remarkable", "proximity", "to", "Channel"]
(c15-2 / notice-01
       :ARG0 (c15-1 / map
                    :topic (c15-0 / location
                                  :location (c15-7 / street
                                                   :name (c15-3 / name
                                                                :op1 "Martin"
                                                                :op2 "Place"))))
       :ARG1 (c15-5 / close-10
                    :ARG1 (c15-4 / channel)
                    :ARG1-of (c15-6 / remarkable-02)))

# ::snt I'm all good not in Sydney until later this week. Thoughts with the people in there and may peace be the resolve
# ::tokens ["I", "'m", "all", "good", "not", "in", "Sydney", "until", "later", "this", "week", ".", "Thoughts", "with", "the", "people", "in", "there", "and", "may", "peace", "be", "the", "resolve"]
# ::lemmas ["i", "be", "all", "good", "not", "in", "Sydney", "until", "later", "this", "week", ".", "thought", "with", "the", "people", "in", "there", "and", "may", "peace", "be", "the", "resolve"]
(c16-2 / multi-sentence
       :snt1 (c16-12 / good-02
                     :ARG1 (c16-6 / i)
                     :mod (c16-17 / all)
                     :location (c16-11 / city
                                       :name (c16-7 / name
                                                    :op1 "Sydney"))
                     :time (c16-3 / until
                                  :op1 (c16-1 / late
                                              :op1 (c16-0 / week
                                                          :mod (c16-15 / this))
                                              :degree (c16-14 / somewhat))))
       :snt2 (c16-5 / and
                    :op1 (c16-13 / think-01
                                 :ARG2 (c16-9 / person
                                              :location (c16-8 / there)))
                    :op2 (c16-16 / possible-01
                                 :ARG1 (c16-10 / resolve-01
                                               :ARG2 (c16-4 / peace)))))
