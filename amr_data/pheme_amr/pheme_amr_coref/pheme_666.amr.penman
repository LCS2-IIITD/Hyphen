# ::snt : Fear and relief as these two hostages escape - LIVE
# ::tokens [":", "Fear", "and", "relief", "as", "these", "two", "hostages", "escape", "-", "LIVE"]
# ::lemmas [":", "fear", "and", "relief", "as", "these", "two", "hostage", "escape", "-", "live"]
(c1-6 / and
      :op1 (c1-1 / fear-01)
      :op2 (c1-4 / relieve-01)
      :time (c1-3 / escape-01
                  :ARG0 (c1-0 / hostage
                              :mod (c1-5 / this)
                              :quant 2))
      :medium (c1-2 / live))

# ::snt :This footage breaks my heart.
# ::tokens [":", "This", "footage", "breaks", "my", "heart", "."]
# ::lemmas [":", "this", "footage", "break", "my", "heart", "."]
(c2-2 / break-heart-31
      :ARG0 (c2-1 / footage
                  :mod (c2-4 / this))
      :ARG1 (c2-0 / heart
                  :part-of (c2-3 / i)))

# ::snt he does not want the asians. He wants the whites.
# ::tokens ["he", "does", "not", "want", "the", "asians", ".", "He", "wants", "the", "whites", "."]
# ::lemmas ["he", "do", "not", "want", "the", "asian", ".", "he", "want", "the", "white", "."]
(c3-2 / multi-sentence
      :snt1 (c3-1 / want-01
                  :ARG0 (c3-0 / he)
                  :ARG1 (c3-6 / person
                              :mod (c3-7 / continent
                                         :name (c3-5 / name
                                                     :op1 "Asia")))
                  :polarity -)
      :snt2 (c3-4 / want-01
                  :ARG0 (c3-9 / he)
                  :ARG1 (c3-8 / person
                              :ARG1-of (c3-3 / white-02))))

# ::snt Are they employees? Koreans? Not surprised!
# ::tokens ["Are", "they", "employees", "?", "Koreans", "?", "Not", "surprised", "!"]
# ::lemmas ["be", "they", "employee", "?", "Koreans", "?", "not", "surprised", "!"]
(c4-0 / multi-sentence
      :snt1 (c4-1 / employ-01
                  :polarity (c4-7 / amr-unknown)
                  :ARG1 (c4-6 / they))
      :snt2 (c4-5 / surprise-01
                  :ARG1 (c4-3 / person
                              :source (c4-4 / country
                                            :name (c4-2 / name
                                                        :op1 "Korea")))
                  :polarity -))

# ::snt LOL Not even terrorists!
# ::tokens ["LOL", "Not", "even", "terrorists", "!"]
# ::lemmas ["lol", "not", "even", "terrorist", "!"]
(c5-2 / terrorist
      :mod (c5-0 / even)
      :ARG2-of (c5-1 / laugh-01
                     :manner (c5-3 / loud)
                     :mode expressive)
      :polarity -)

# ::snt Fear and relief as these two hostages escape
# ::tokens ["Fear", "and", "relief", "as", "these", "two", "hostages", "escape"]
# ::lemmas ["fear", "and", "relief", "as", "these", "two", "hostage", "escape"]
(c6-5 / and
      :op1 (c6-1 / fear-01)
      :op2 (c6-3 / relieve-01)
      :time (c6-2 / escape-01
                  :ARG0 (c6-0 / hostage
                              :mod (c6-4 / this)
                              :quant 2)))

# ::snt Stupid fellows, they will achieve nothing by holding hostages or being violent.
# ::tokens ["Stupid", "fellows", ",", "they", "will", "achieve", "nothing", "by", "holding", "hostages", "or", "being", "violent", "."]
# ::lemmas ["stupid", "fellow", ",", "they", "will", "achieve", "nothing", "by", "hold", "hostage", "or", "be", "violent", "."]
(c7-7 / achieve-01
      :ARG0 (c7-1 / fellow
                  :mod (c7-6 / stupid))
      :ARG1 (c7-4 / nothing)
      :ARG3 (c7-3 / or
                  :op1 (c7-0 / hold-01
                             :ARG0 c7-1
                             :ARG1 (c7-2 / hostage))
                  :op2 (c7-5 / violent
                             :domain c7-1)))

# ::snt What do MEN do though? They escape at their first chance. Cowards
# ::tokens ["What", "do", "MEN", "do", "though", "?", "They", "escape", "at", "their", "first", "chance", ".", "Cowards"]
# ::lemmas ["what", "do", "man", "do", "though", "?", "they", "escape", "at", "their", "first", "chance", ".", "coward"]
(c8-1 / multi-sentence
      :snt1 (c8-0 / have-concession-91
                  :ARG2 (c8-5 / do-02
                              :ARG0 (c8-4 / man)
                              :ARG1 (c8-9 / amr-unknown)))
      :snt2 (c8-3 / escape-01
                  :ARG0 (c8-8 / they)
                  :time (c8-6 / chance-02
                              :ARG0 c8-8
                              :ord (c8-2 / ordinal-entity
                                         :value 1)))
      :snt3 (c8-7 / coward))

# ::snt : Fear and relief as these two hostages escape - LIVE
# ::tokens [":", "Fear", "and", "relief", "as", "these", "two", "hostages", "escape", "-", "LIVE"]
# ::lemmas [":", "fear", "and", "relief", "as", "these", "two", "hostage", "escape", "-", "live"]
(c9-6 / and
      :op1 (c9-1 / fear-01)
      :op2 (c9-4 / relieve-01)
      :time (c9-3 / escape-01
                  :ARG0 (c9-0 / hostage
                              :mod (c9-5 / this)
                              :quant 2))
      :medium (c9-2 / live))

# ::snt :feels like the world is going to end there are so many horrible things happening one after the other
# ::tokens [":", "feels", "like", "the", "world", "is", "going", "to", "end", "there", "are", "so", "many", "horrible", "things", "happening", "one", "after", "the", "other"]
# ::lemmas [":", "feel", "like", "the", "world", "be", "go", "to", "end", "there", "be", "so", "many", "horrible", "thing", "happen", "one", "after", "the", "other"]
(c10-2 / feel-06
       :ARG1 (c10-5 / end-01
                    :ARG1 (c10-1 / world))
       :ARG1-of (c10-6 / cause-01
                       :ARG0 (c10-8 / thing
                                    :mod (c10-0 / horrible)
                                    :ARG1-of (c10-9 / have-quant-91
                                                    :ARG2 (c10-3 / many)
                                                    :ARG3 (c10-7 / so))
                                    :manner (c10-4 / one-after-another))))

# ::snt : Fear and relief as these two hostages escape - LIVE: UP??
# ::tokens [":", "Fear", "and", "relief", "as", "these", "two", "hostages", "escape", "-", "LIVE", ":", "UP", "?", "?"]
# ::lemmas [":", "fear", "and", "relief", "as", "these", "two", "hostage", "escape", "-", "live", ":", "up", "?", "?"]
(c11-2 / multi-sentence
       :snt1 (c11-9 / and
                    :op1 (c11-1 / fear-01)
                    :op2 (c11-7 / relieve-01)
                    :time (c11-5 / escape-01
                                 :ARG0 (c11-0 / hostage
                                              :mod (c11-8 / this)
                                              :quant 2)))
       :snt2 (c11-3 / live
                    :mod (c11-4 / up)
                    :polarity (c11-6 / amr-unknown)
                    :mode expressive))

# ::snt There is guy w/1 or more guns, so sad there's nobody there with balls. -3 guys rush him, one goes down, game over.
# ::tokens ["There", "is", "guy", "w/1", "or", "more", "guns", ",", "so", "sad", "there", "'s", "nobody", "there", "with", "balls", ".", "-3", "guys", "rush", "him", ",", "one", "goes", "down", ",", "game", "over", "."]
# ::lemmas ["there", "be", "guy", "w/1", "or", "more", "gun", ",", "so", "sad", "there", "be", "nobody", "there", "with", "ball", ".", "-3", "guy", "rush", "he", ",", "one", "go", "down", ",", "game", "over", "."]
(c12-0 / multi-sentence
       :snt1 (c12-13 / guy
                     :prep-without (c12-19 / or
                                           :op1 (c12-2 / gun
                                                       :quant 1)
                                           :op2 (c12-1 / gun
                                                       :quant (c12-11 / more)))
                     :ARG0-of (c12-20 / cause-01
                                      :ARG1 (c12-5 / sad-02
                                                   :ARG0 (c12-10 / nobody
                                                                 :location (c12-21 / there)
                                                                 :ARG0-of (c12-8 / have-03
                                                                                 :ARG1 (c12-9 / ball)))
                                                   :ARG1 c12-13)))
       :snt2 (c12-7 / and
                    :op1 (c12-12 / rush-01
                                 :ARG0 (c12-14 / guy
                                               :quant 3)
                                 :ARG1 (c12-6 / he))
                    :op2 (c12-17 / go-01
                                 :ARG1 (c12-18 / one)
                                 :ARG4 (c12-3 / down))
                    :ARG0-of (c12-4 / cause-01
                                    :ARG1 (c12-15 / over-01
                                                  :ARG1 (c12-16 / game)))))

# ::snt wow! : Fear and relief as these two hostages escape - LIVE
# ::tokens ["wow", "!", ":", "Fear", "and", "relief", "as", "these", "two", "hostages", "escape", "-", "LIVE"]
# ::lemmas ["wow", "!", ":", "fear", "and", "relief", "as", "these", "two", "hostage", "escape", "-", "live"]
(c13-7 / and
       :op1 (c13-2 / fear-01)
       :op2 (c13-5 / relieve-01)
       :time (c13-4 / escape-01
                    :ARG0 (c13-0 / hostage
                                 :mod (c13-6 / this)
                                 :quant 2))
       :medium (c13-3 / live)
       :mod (c13-1 / wow
                   :mode expressive))

# ::snt :people have been in hostage since this morning and i dont think its done yet its scary
# ::tokens [":", "people", "have", "been", "in", "hostage", "since", "this", "morning", "and", "i", "do", "nt", "think", "its", "done", "yet", "its", "scary"]
# ::lemmas [":", "people", "have", "be", "in", "hostage", "since", "this", "morning", "and", "i", "do", "not", "think", "its", "do", "yet", "its", "scary"]
(c14-11 / and
        :op1 (c14-0 / hostage
                    :domain (c14-6 / person)
                    :time (c14-9 / since
                                 :op1 (c14-7 / date-entity
                                             :dayperiod (c14-2 / morning)
                                             :mod (c14-10 / today))))
        :op2 (c14-8 / think-01
                    :ARG0 (c14-5 / i)
                    :ARG1 (c14-3 / be-done-08
                                 :ARG1 c14-0
                                 :time (c14-1 / yet))
                    :polarity -)
        :ARG0-of (c14-4 / scary-03))

# ::snt yeh i saw shit like hrs are u in sydney fuck this is so scary!
# ::tokens ["yeh", "i", "saw", "shit", "like", "hrs", "are", "u", "in", "sydney", "fuck", "this", "is", "so", "scary", "!"]
# ::lemmas ["yeh", "i", "see", "shit", "like", "hrs", "be", "u", "in", "sydney", "fuck", "this", "be", "so", "scary", "!"]
(c15-9 / see-01
       :ARG0 (c15-5 / i)
       :ARG1 (c15-4 / shit
                    :ARG1-of (c15-7 / resemble-01
                                    :ARG2 (c15-0 / hour)))
       :location (c15-8 / city
                        :name (c15-6 / name
                                     :op1 "Sydney"))
       :mod (c15-1 / fuck
                   :ARG0-of (c15-2 / scare-01
                                   :degree (c15-3 / so))
                   :mode expressive))

# ::snt : Fear and relief as these two hostages escape - LIVE
# ::tokens [":", "Fear", "and", "relief", "as", "these", "two", "hostages", "escape", "-", "LIVE"]
# ::lemmas [":", "fear", "and", "relief", "as", "these", "two", "hostage", "escape", "-", "live"]
(c16-6 / and
       :op1 (c16-1 / fear-01)
       :op2 (c16-4 / relieve-01)
       :time (c16-3 / escape-01
                    :ARG0 (c16-0 / hostage
                                 :mod (c16-5 / this)
                                 :quant 2))
       :medium (c16-2 / live))

# ::snt :it is and its really unpredictable as well like everything is so vague
# ::tokens [":", "it", "is", "and", "its", "really", "unpredictable", "as", "well", "like", "everything", "is", "so", "vague"]
# ::lemmas [":", "it", "be", "and", "its", "really", "unpredictable", "as", "well", "like", "everything", "be", "so", "vague"]
(c18-7 / and
       :op1 (c18-3 / possible-01
                   :ARG1 (c18-6 / predict-01
                                :ARG1 (c18-2 / it))
                   :degree (c18-4 / really)
                   :mod (c18-1 / as-well)
                   :polarity -)
       :op2 (c18-0 / possible-01
                   :ARG1 c18-6
                   :degree (c18-5 / so)
                   :polarity -))

# ::snt The terror on their faces is just awful: : two hostages escape - LIVE
# ::tokens ["The", "terror", "on", "their", "faces", "is", "just", "awful", ":", ":", "two", "hostages", "escape", "-", "LIVE"]
# ::lemmas ["the", "terror", "on", "their", "face", "be", "just", "awful", ":", ":", "two", "hostage", "escape", "-", "live"]
(c19-7 / awful
       :mod (c19-0 / just)
       :domain (c19-6 / terror
                      :location (c19-2 / face
                                       :part-of (c19-5 / they)))
       :example (c19-4 / escape-01
                       :ARG0 (c19-1 / hostage
                                    :quant 2)
                       :medium (c19-3 / live)))

# ::snt :The emotion RT: : Fear and relief as these two hostages escape - LIVE:
# ::tokens [":", "The", "emotion", "RT", ":", ":", "Fear", "and", "relief", "as", "these", "two", "hostages", "escape", "-", "LIVE", ":"]
# ::lemmas [":", "the", "emotion", "rt", ":", ":", "fear", "and", "relief", "as", "these", "two", "hostage", "escape", "-", "live", ":"]
(c20-5 / emotion
       :ARG1-of (c20-7 / publication-91
                       :ARG4 (c20-10 / publication
                                     :name (c20-6 / name
                                                  :op1 "RT")))
       :ARG1-of (c20-2 / mean-01
                       :ARG2 (c20-11 / and
                                     :op1 (c20-1 / fear-01)
                                     :op2 (c20-8 / relieve-01)
                                     :time (c20-4 / escape-01
                                                  :ARG0 (c20-0 / hostage
                                                               :mod (c20-9 / this)
                                                               :quant 2))))
       :medium (c20-3 / live))
