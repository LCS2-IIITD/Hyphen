# ::snt : At :00 police will release the name of the officer who shot Michael Brown.
# ::tokens [":", "At", ":", "00", "police", "will", "release", "the", "name", "of", "the", "officer", "who", "shot", "Michael", "Brown", "."]
# ::lemmas [":", "at", ":", "00", "police", "will", "release", "the", "name", "of", "the", "officer", "who", "shoot", "Michael", "Brown", "."]
(c1-3 / release-01
      :ARG0 (c1-2 / police)
      :ARG1 (c1-1 / name
                  :poss (c1-0 / officer
                              :ARG0-of (c1-5 / shoot-02
                                             :ARG1 (c1-6 / person
                                                         :name c1-1
                                                         :op1 "Michael"
                                                         :op2 "Brown"))))
      :time (c1-4 / date-entity
                  :time ":00"))

# ::snt :02 "Nope, changed out mind again. Thought you had a friend."
# ::tokens [":", "02", "\"", "Nope", ",", "changed", "out", "mind", "again", ".", "Thought", "you", "had", "a", "friend", ".", "\""]
# ::lemmas [":", "02", "\"", "Nope", ",", "change", "out", "mind", "again", ".", "thought", "you", "have", "a", "friend", ".", "\""]
(c2-3 / multi-sentence
      :snt1 (c2-6 / nope)
      :snt2 (c2-8 / change-out-mind-09
                  :ARG0 (c2-5 / i
                              :ARG1-of c2-8)
                  :mod (c2-10 / again))
      :snt3 (c2-9 / think-01
                  :ARG0 c2-5
                  :ARG1 (c2-0 / have-03
                              :ARG0 (c2-1 / you)
                              :ARG1 (c2-7 / person
                                          :ARG0-of (c2-2 / have-rel-role-91
                                                         :ARG1 c2-1
                                                         :ARG2 (c2-4 / friend)))))
      :li 2)

# ::snt At :00 police will release the name of the officer who shot Michael Brown.
# ::tokens ["At", ":", "00", "police", "will", "release", "the", "name", "of", "the", "officer", "who", "shot", "Michael", "Brown", "."]
# ::lemmas ["at", ":", "00", "police", "will", "release", "the", "name", "of", "the", "officer", "who", "shoot", "Michael", "Brown", "."]
(c3-3 / release-01
      :ARG0 (c3-2 / police)
      :ARG1 (c3-1 / name
                  :poss (c3-0 / officer
                              :ARG0-of (c3-5 / shoot-02
                                             :ARG1 (c3-6 / person
                                                         :name c3-1
                                                         :op1 "Michael"
                                                         :op2 "Brown"))))
      :time (c3-4 / date-entity
                  :time "00"))

# ::snt if anyone have the chance ask when he'll be arrested?
# ::tokens ["if", "anyone", "have", "the", "chance", "ask", "when", "he", "'ll", "be", "arrested", "?"]
# ::lemmas ["if", "anyone", "have", "the", "chance", "ask", "when", "he", "'ll", "be", "arrest", "?"]
(c4-7 / ask-01
      :ARG0 (c4-2 / anyone)
      :ARG1 (c4-6 / time
                  :time-of (c4-3 / arrest-01
                                 :ARG1 (c4-0 / he)))
      :condition (c4-1 / have-03
                       :ARG0 c4-2
                       :ARG1 (c4-4 / chance-02
                                   :ARG0 c4-2
                                   :ARG1 c4-7))
      :polarity (c4-5 / amr-unknown)
      :mode imperative)

# ::snt At :00 police will release the name of the officer who shot Michael Brown.
# ::tokens ["At", ":", "00", "police", "will", "release", "the", "name", "of", "the", "officer", "who", "shot", "Michael", "Brown", "."]
# ::lemmas ["at", ":", "00", "police", "will", "release", "the", "name", "of", "the", "officer", "who", "shoot", "Michael", "Brown", "."]
(c5-3 / release-01
      :ARG0 (c5-2 / police)
      :ARG1 (c5-1 / name
                  :poss (c5-0 / officer
                              :ARG0-of (c5-5 / shoot-02
                                             :ARG1 (c5-6 / person
                                                         :name c5-1
                                                         :op1 "Michael"
                                                         :op2 "Brown"))))
      :time (c5-4 / date-entity
                  :time "00"))

# ::snt : At :00 police will release the name of the officer who shot Michael Brown.
# ::tokens [":", "At", ":", "00", "police", "will", "release", "the", "name", "of", "the", "officer", "who", "shot", "Michael", "Brown", "."]
# ::lemmas [":", "at", ":", "00", "police", "will", "release", "the", "name", "of", "the", "officer", "who", "shoot", "Michael", "Brown", "."]
(c6-3 / release-01
      :ARG0 (c6-2 / police)
      :ARG1 (c6-1 / name
                  :poss (c6-0 / officer
                              :ARG0-of (c6-5 / shoot-02
                                             :ARG1 (c6-6 / person
                                                         :name c6-1
                                                         :op1 "Michael"
                                                         :op2 "Brown"))))
      :time (c6-4 / date-entity
                  :time ":00"))

# ::snt they're an hour behind us so mins we should know the shooter
# ::tokens ["they", "'re", "an", "hour", "behind", "us", "so", "mins", "we", "should", "know", "the", "shooter"]
# ::lemmas ["they", "be", "an", "hour", "behind", "we", "so", "min", "we", "should", "know", "the", "shooter"]
(c7-3 / be-located-at-91
      :ARG1 (c7-12 / they)
      :ARG2 (c7-8 / behind
                  :op1 (c7-1 / we)
                  :duration (c7-10 / temporal-quantity
                                   :unit (c7-0 / hour)
                                   :quant 1))
      :ARG0-of (c7-9 / cause-01
                     :ARG1 (c7-7 / recommend-01
                                 :ARG1 (c7-4 / know-01
                                             :ARG0 c7-1
                                             :ARG1 (c7-6 / person
                                                         :ARG0-of (c7-11 / shoot-02))
                                             :duration (c7-5 / temporal-quantity
                                                             :unit (c7-2 / minute)
                                                             :quant 1)))))

# ::snt i hope they tell the truth
# ::tokens ["i", "hope", "they", "tell", "the", "truth"]
# ::lemmas ["i", "hope", "they", "tell", "the", "truth"]
(c8-0 / hope-01
      :ARG0 (c8-1 / i)
      :ARG1 (c8-4 / tell-01
                  :ARG0 (c8-3 / they)
                  :ARG1 (c8-2 / truth)))

# ::snt : At :00 police will release the name of the officer who shot Michael Brown.
# ::tokens [":", "At", ":", "00", "police", "will", "release", "the", "name", "of", "the", "officer", "who", "shot", "Michael", "Brown", "."]
# ::lemmas [":", "at", ":", "00", "police", "will", "release", "the", "name", "of", "the", "officer", "who", "shoot", "Michael", "Brown", "."]
(c9-3 / release-01
      :ARG0 (c9-2 / police)
      :ARG1 (c9-1 / name
                  :poss (c9-0 / officer
                              :ARG0-of (c9-5 / shoot-02
                                             :ARG1 (c9-6 / person
                                                         :name c9-1
                                                         :op1 "Michael"
                                                         :op2 "Brown"))))
      :time (c9-4 / date-entity
                  :time ":00"))

# ::snt Any sense if they will release other info, like autopsy results?
# ::tokens ["Any", "sense", "if", "they", "will", "release", "other", "info", ",", "like", "autopsy", "results", "?"]
# ::lemmas ["any", "sense", "if", "they", "will", "release", "other", "info", ",", "like", "autopsy", "result", "?"]
(c10-7 / sense-02
       :ARG1 (c10-5 / release-01
                    :ARG0 (c10-8 / they)
                    :ARG1 (c10-2 / information
                                 :mod (c10-0 / other)
                                 :example (c10-6 / thing
                                                 :ARG2-of (c10-3 / result-01
                                                                 :ARG1 (c10-9 / autopsy-01)))))
       :polarity (c10-1 / amr-unknown)
       :mod (c10-4 / any))

# ::snt : At :00 police will release the name of the officer who shot Michael Brown.
# ::tokens [":", "At", ":", "00", "police", "will", "release", "the", "name", "of", "the", "officer", "who", "shot", "Michael", "Brown", "."]
# ::lemmas [":", "at", ":", "00", "police", "will", "release", "the", "name", "of", "the", "officer", "who", "shoot", "Michael", "Brown", "."]
(c11-3 / release-01
       :ARG0 (c11-2 / police)
       :ARG1 (c11-1 / name
                    :poss (c11-0 / officer
                                 :ARG0-of (c11-5 / shoot-02
                                                 :ARG1 (c11-6 / person
                                                              :name c11-1
                                                              :op1 "Michael"
                                                              :op2 "Brown"))))
       :time (c11-4 / date-entity
                    :time ":00"))

# ::snt What time is it in Missouri?: At :00 police will release the name of the officer who shot Michael Brown.
# ::tokens ["What", "time", "is", "it", "in", "Missouri", "?", ":", "At", ":", "00", "police", "will", "release", "the", "name", "of", "the", "officer", "who", "shot", "Michael", "Brown", "."]
# ::lemmas ["what", "time", "be", "it", "in", "Missouri", "?", ":", "at", ":", "00", "police", "will", "release", "the", "name", "of", "the", "officer", "who", "shoot", "Michael", "Brown", "."]
(c12-0 / multi-sentence
       :snt1 (c12-1 / be-temporally-at-91
                    :ARG1 (c12-4 / it)
                    :ARG2 (c12-11 / state
                                  :name (c12-5 / name
                                               :op1 "Missouri"))
                    :time (c12-8 / date-entity
                                 :time "20:00"))
       :snt2 (c12-9 / release-01
                    :ARG0 (c12-7 / police)
                    :ARG1 (c12-12 / thing
                                  :ARG2-of (c12-6 / name-01
                                                  :ARG1 (c12-2 / officer
                                                               :ARG0-of (c12-3 / shoot-02
                                                                               :ARG1 (c12-13 / person
                                                                                             :name (c12-10 / name
                                                                                                           :op1 "Michael"
                                                                                                           :op2 "Brown"))))))))

# ::snt Too little to late.
# ::tokens ["Too", "little", "to", "late", "."]
# ::lemmas ["too", "little", "to", "late", "."]
(c13-0 / have-degree-91
       :ARG2 (c13-1 / little)
       :ARG3 (c13-2 / too)
       :ARG6 (c13-3 / late))

# ::snt : At :00 police will release the name of the officer who shot Michael Brown.
# ::tokens [":", "At", ":", "00", "police", "will", "release", "the", "name", "of", "the", "officer", "who", "shot", "Michael", "Brown", "."]
# ::lemmas [":", "at", ":", "00", "police", "will", "release", "the", "name", "of", "the", "officer", "who", "shoot", "Michael", "Brown", "."]
(c14-3 / release-01
       :ARG0 (c14-2 / police)
       :ARG1 (c14-1 / name
                    :poss (c14-0 / officer
                                 :ARG0-of (c14-5 / shoot-02
                                                 :ARG1 (c14-6 / person
                                                              :name c14-1
                                                              :op1 "Michael"
                                                              :op2 "Brown"))))
       :time (c14-4 / date-entity
                    :time ":00"))

# ::snt finally.
# ::tokens ["finally", "."]
# ::lemmas ["finally", "."]
(c15-0 / final)

# ::snt It's a start.
# ::tokens ["It", "'s", "a", "start", "."]
# ::lemmas ["it", "be", "a", "start", "."]
(c16-0 / start-01
       :ARG2 (c16-1 / it))
