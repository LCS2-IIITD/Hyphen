# ::snt I believe Twitter hs reported tht Sydney authorities say report of th escapee is unsubstantiated.
# ::tokens ["I", "believe", "Twitter", "hs", "reported", "tht", "Sydney", "authorities", "say", "report", "of", "th", "escapee", "is", "unsubstantiated", "."]
# ::lemmas ["i", "believe", "Twitter", "hs", "report", "tht", "Sydney", "authority", "say", "report", "of", "th", "escapee", "be", "unsubstantiated", "."]
(c1-0 / believe-01
      :ARG0 (c1-3 / i)
      :ARG1 (c1-8 / report-01
                  :ARG0 (c1-7 / publication
                              :name (c1-5 / name
                                          :op1 "Twitter"))
                  :ARG1 (c1-10 / say-01
                               :ARG0 (c1-12 / authority
                                            :mod (c1-9 / city
                                                       :name (c1-6 / name
                                                                   :op1 "Sydney")))
                               :ARG1 (c1-1 / substantiate-01
                                           :ARG1 (c1-4 / report-01
                                                       :ARG1 (c1-2 / escape-01
                                                                   :ARG0 (c1-11 / person)))
                                           :polarity -))))

# ::snt look and put Sydney in as location to see all social media on Sydney siege.
# ::tokens ["look", "and", "put", "Sydney", "in", "as", "location", "to", "see", "all", "social", "media", "on", "Sydney", "siege", "."]
# ::lemmas ["look", "and", "put", "Sydney", "in", "as", "location", "to", "see", "all", "social", "medium", "on", "Sydney", "siege", "."]
(c2-11 / and
       :op1 (c2-1 / look-01
                  :ARG0 (c2-0 / you)
                  :ARG1 (c2-8 / city
                              :name (c2-6 / name
                                          :op1 "Sydney"))
                  :mode imperative)
       :op2 (c2-7 / put-01
                  :ARG0 c2-0
                  :ARG1 c2-8
                  :ARG2 (c2-9 / location)
                  :mode imperative)
       :purpose (c2-10 / see-01
                       :ARG0 c2-0
                       :ARG1 (c2-2 / media
                                   :mod (c2-4 / social)
                                   :mod (c2-5 / all)
                                   :topic (c2-3 / siege
                                                :location c2-8))))

# ::snt this is very irresponsible journalism-don't these people have any right to privacy?
# ::tokens ["this", "is", "very", "irresponsible", "journalism", "-", "don't", "these", "people", "have", "any", "right", "to", "privacy", "?"]
# ::lemmas ["this", "be", "very", "irresponsible", "journalism", "-", "don't", "these", "people", "have", "any", "right", "to", "privacy", "?"]
(c3-2 / multi-sentence
      :snt1 (c3-0 / journalism
                  :ARG1-of (c3-7 / responsible-02
                                 :degree (c3-5 / very)
                                 :polarity -)
                  :domain (c3-9 / this))
      :snt2 (c3-1 / have-03
                  :ARG0 (c3-6 / person
                              :mod (c3-8 / this))
                  :ARG1 (c3-4 / right-05
                              :ARG1 c3-6
                              :ARG2 (c3-10 / private-02
                                           :ARG1 c3-6)
                              :mod (c3-11 / any))
                  :ARG1-of (c3-3 / request-confirmation-91)))

# ::snt definitely adding that tweet to my
# ::tokens ["definitely", "adding", "that", "tweet", "to", "my"]
# ::lemmas ["definitely", "add", "that", "tweet", "to", "my"]
(c4-5 / add-02
      :ARG1 (c4-4 / thing
                  :ARG1-of (c4-3 / tweet-01)
                  :mod (c4-1 / that))
      :ARG2 (c4-0 / i)
      :mod (c4-2 / definite))

# ::snt yes but then it will be their choice
# ::tokens ["yes", "but", "then", "it", "will", "be", "their", "choice"]
# ::lemmas ["yes", "but", "then", "it", "will", "be", "their", "choice"]
(c5-3 / contrast-01
      :ARG1 (c5-0 / yes)
      :ARG2 (c5-2 / choose-01
                  :ARG0 (c5-5 / they)
                  :ARG1 (c5-1 / it)
                  :time (c5-4 / then)))

# ::snt there were unconfirmed reports during the night so I'm only giving info from main sources at the mo.
# ::tokens ["there", "were", "unconfirmed", "reports", "during", "the", "night", "so", "I", "'m", "only", "giving", "info", "from", "main", "sources", "at", "the", "mo", "."]
# ::lemmas ["there", "be", "unconfirmed", "report", "during", "the", "night", "so", "i", "be", "only", "give", "info", "from", "main", "source", "at", "the", "mo", "."]
(c6-7 / cause-01
      :ARG0 (c6-6 / report-01
                  :ARG1-of (c6-5 / confirm-01
                                 :polarity -)
                  :time (c6-8 / date-entity
                              :dayperiod (c6-3 / night)))
      :ARG1 (c6-9 / give-01
                  :ARG0 (c6-2 / i)
                  :ARG1 (c6-10 / information)
                  :ARG2 (c6-11 / source
                               :mod (c6-0 / main)
                               :location (c6-4 / mo))
                  :mod (c6-1 / only)))

# ::snt when this is resolved Im sure some of them will be telling their story to the media face and all
# ::tokens ["when", "this", "is", "resolved", "I", "m", "sure", "some", "of", "them", "will", "be", "telling", "their", "story", "to", "the", "media", "face", "and", "all"]
# ::lemmas ["when", "this", "be", "resolve", "i", "m", "sure", "some", "of", "they", "will", "be", "tell", "their", "story", "to", "the", "medium", "face", "and", "all"]
(c7-11 / sure-02
       :ARG0 (c7-5 / i)
       :ARG1 (c7-12 / tell-01
                    :ARG0 (c7-7 / person
                                :quant (c7-3 / some)
                                :ARG1-of (c7-9 / include-91
                                               :ARG2 (c7-10 / they)))
                    :ARG1 (c7-0 / story
                                :poss c7-7)
                    :ARG2 (c7-13 / and
                                 :op1 (c7-1 / face
                                            :mod (c7-2 / media))
                                 :op2 (c7-4 / all))
                    :time (c7-8 / resolve-01
                                :ARG1 (c7-6 / this))))

# ::snt My heart go for those Asian female Lindt staff hostages who were flee or escaped lately. Pray for those remaining hostages.
# ::tokens ["My", "heart", "go", "for", "those", "Asian", "female", "Lindt", "staff", "hostages", "who", "were", "flee", "or", "escaped", "lately", ".", "Pray", "for", "those", "remaining", "hostages", "."]
# ::lemmas ["my", "heart", "go", "for", "those", "Asian", "female", "Lindt", "staff", "hostage", "who", "be", "flee", "or", "escape", "lately", ".", "pray", "for", "those", "remain", "hostage", "."]
(c8-0 / multi-sentence
      :snt1 (c8-12 / go-10
                   :ARG1 (c8-6 / heart
                               :part-of (c8-13 / i))
                   :ARG2 (c8-5 / hostage
                               :ARG1-of (c8-4 / staff-01
                                              :ARG0 (c8-17 / company
                                                           :name (c8-10 / name
                                                                        :op1 "Lindt")))
                               :mod (c8-3 / continent
                                          :name (c8-16 / name
                                                       :op1 "Asia"))
                               :mod (c8-7 / female)
                               :mod (c8-19 / that)
                               :ARG0-of (c8-15 / flee-05
                                               :time (c8-8 / lately))
                               :ARG0-of (c8-9 / escape-01
                                              :time c8-8)))
      :snt2 (c8-2 / pray-01
                  :ARG0 (c8-14 / you)
                  :beneficiary (c8-1 / hostage
                                     :ARG1-of (c8-11 / remain-01)
                                     :mod (c8-18 / that))))

# ::snt Per Twitter, total have now escaped.
# ::tokens ["Per", "Twitter", ",", "total", "have", "now", "escaped", "."]
# ::lemmas ["per", "Twitter", ",", "total", "have", "now", "escape", "."]
(c9-4 / say-01
      :ARG0 (c9-3 / publication
                  :name (c9-1 / name
                              :op1 "Twitter"))
      :ARG1 (c9-0 / escape-01
                  :ARG0 (c9-6 / person
                              :ARG1-of (c9-5 / total-01))
                  :time (c9-2 / now)))
