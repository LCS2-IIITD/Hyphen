# ::snt and it is completely automatic based on number of cars on road vs requests
# ::tokens ["and", "it", "is", "completely", "automatic", "based", "on", "number", "of", "cars", "on", "road", "vs", "requests"]
# ::lemmas ["and", "it", "be", "completely", "automatic", "base", "on", "number", "of", "car", "on", "road", "vs", "request"]
(c1-9 / and
      :op2 (c1-0 / base-02
                 :ARG1 (c1-2 / it)
                 :ARG2 (c1-5 / versus
                             :op1 (c1-4 / number
                                        :quant-of (c1-7 / car
                                                        :location (c1-6 / road)))
                             :op2 (c1-3 / request-01))
                 :mod (c1-1 / automatic
                            :ARG1-of (c1-8 / complete-02))))

# ::snt charming folk...
# ::tokens ["charming", "folk", "..."]
# ::lemmas ["charming", "folk", "..."]
(c2-0 / folk
      :ARG0-of (c2-1 / charm-01))

# ::snt how awful of uber!!!!
# ::tokens ["how", "awful", "of", "uber", "!", "!", "!", "!"]
# ::lemmas ["how", "awful", "of", "uber", "!", "!", "!", "!"]
(c3-2 / awful
      :degree (c3-0 / so)
      :mod (c3-1 / uber))

# ::snt it is an automated algorithm.
# ::tokens ["it", "is", "an", "automated", "algorithm", "."]
# ::lemmas ["it", "be", "an", "automated", "algorithm", "."]
(c4-2 / algorithm
      :ARG1-of (c4-1 / automate-01)
      :domain (c4-0 / it))

# ::snt Really?!?
# ::tokens ["Really", "?", "!", "?"]
# ::lemmas ["really", "?", "!", "?"]
(c5-0 / real-04
      :polarity (c5-1 / amr-unknown))

# ::snt : Uber introduces $100 minimum surge pricing during
# ::tokens [":", "Uber", "introduces", "$", "100", "minimum", "surge", "pricing", "during"]
# ::lemmas [":", "uber", "introduce", "$", "100", "minimum", "surge", "pricing", "during"]
(c6-2 / introduce-02
      :ARG0 (c6-6 / company
                  :name (c6-3 / name
                              :op1 " Uber"))
      :ARG1 (c6-4 / price-01
                  :ARG1 (c6-0 / minimum
                              :op1 (c6-5 / monetary-quantity
                                         :unit (c6-7 / dollar)
                                         :quant 100))
                  :ARG3 (c6-8 / surge-01))
      :time (c6-1 / event))

# ::snt Yes REALLY. It is determined by supply and demand to decrease wait times.
# ::tokens ["Yes", "REALLY", ".", "It", "is", "determined", "by", "supply", "and", "demand", "to", "decrease", "wait", "times", "."]
# ::lemmas ["yes", "really", ".", "it", "be", "determine", "by", "supply", "and", "demand", "to", "decrease", "wait", "time", "."]
(c7-3 / multi-sentence
      :snt1 (c7-0 / yes
                  :ARG1-of (c7-5 / real-04))
      :snt2 (c7-4 / determine-01
                  :ARG0 (c7-8 / and
                              :op1 (c7-6 / supply-01)
                              :op2 (c7-1 / demand-01))
                  :ARG1 (c7-9 / decrease-01
                              :ARG0 c7-8
                              :ARG1 (c7-7 / time
                                          :duration-of (c7-2 / wait-01)))))

# ::snt uber is doing a shit job explaining it for sure, but there is no manual surge in place.
# ::tokens ["uber", "is", "doing", "a", "shit", "job", "explaining", "it", "for", "sure", ",", "but", "there", "is", "no", "manual", "surge", "in", "place", "."]
# ::lemmas ["uber", "be", "do", "a", "shit", "job", "explain", "it", "for", "sure", ",", "but", "there", "be", "no", "manual", "surge", "in", "place", "."]
(c8-9 / contrast-01
      :ARG1 (c8-8 / do-02
                  :ARG0 (c8-7 / person
                              :name (c8-6 / name
                                          :op1 "uber"))
                  :ARG1 (c8-0 / job
                              :mod (c8-11 / shit))
                  :ARG2 (c8-3 / explain-01
                              :ARG0 c8-7
                              :ARG1 (c8-5 / it))
                  :ARG1-of (c8-4 / sure-02))
      :ARG2 (c8-1 / surge-01
                  :manner (c8-2 / manual)
                  :mod (c8-10 / in-place)
                  :polarity -))

# ::snt : Uber introduces $100 minimum surge pricing
# ::tokens [":", "Uber", "introduces", "$", "100", "minimum", "surge", "pricing"]
# ::lemmas [":", "uber", "introduce", "$", "100", "minimum", "surge", "pricing"]
(c9-1 / introduce-02
      :ARG0 (c9-5 / company
                  :name (c9-2 / name
                              :op1 "Uber"))
      :ARG1 (c9-3 / price-01
                  :ARG1 (c9-0 / monetary-quantity
                              :unit (c9-4 / dollar)
                              :quant 100)
                  :ARG3 (c9-7 / surge-01)
                  :mod (c9-6 / minimum)))

# ::snt it's as if they're trying to be odious in as many ways as possible.
# ::tokens ["it", "'s", "as", "if", "they", "'re", "trying", "to", "be", "odious", "in", "as", "many", "ways", "as", "possible", "."]
# ::lemmas ["it", "be", "as", "if", "they", "be", "try", "to", "be", "odious", "in", "as", "many", "way", "as", "possible", "."]
(c10-4 / resemble-01
       :ARG1 (c10-2 / it)
       :ARG2 (c10-6 / try-01
                    :ARG0 (c10-5 / they)
                    :ARG1 (c10-1 / odious
                                 :domain c10-5
                                 :manner (c10-0 / way
                                                :quant (c10-7 / as-many-as
                                                              :op1 (c10-3 / possible-01
                                                                          :ARG1 c10-1))))))

# ::snt . seriously :|
# ::tokens [".", "seriously", ":|"]
# ::lemmas [".", "seriously", ":|"]
(c11-0 / serious-01)

# ::snt surge pricing encourages drivers on the road, and discourages commuters who may not need an uber.
# ::tokens ["surge", "pricing", "encourages", "drivers", "on", "the", "road", ",", "and", "discourages", "commuters", "who", "may", "not", "need", "an", "uber", "."]
# ::lemmas ["surge", "pricing", "encourage", "driver", "on", "the", "road", ",", "and", "discourage", "commuter", "who", "may", "not", "need", "an", "uber", "."]
(c12-12 / and
        :op1 (c12-3 / encourage-02
                    :ARG0 (c12-5 / price-01
                                 :ARG1 (c12-9 / surge-01))
                    :ARG1 (c12-11 / person
                                  :ARG0-of (c12-6 / drive-01)
                                  :location (c12-7 / road)))
        :op2 (c12-0 / discourage-01
                    :ARG0 c12-5
                    :ARG1 (c12-2 / person
                                 :ARG0-of (c12-8 / commute-01)
                                 :ARG0-of (c12-4 / need-01
                                                 :ARG1 (c12-1 / uber)
                                                 :ARG1-of (c12-10 / possible-01)
                                                 :polarity -))))

# ::snt I bet that tweet is automated too?
# ::tokens ["I", "bet", "that", "tweet", "is", "automated", "too", "?"]
# ::lemmas ["i", "bet", "that", "tweet", "be", "automate", "too", "?"]
(c13-0 / bet-01
       :polarity (c13-6 / amr-unknown)
       :ARG0 (c13-2 / i)
       :ARG2 (c13-1 / automate-01
                    :ARG1 (c13-5 / tweet
                                 :mod (c13-4 / that))
                    :mod (c13-3 / too)))

# ::snt If only there was some kind of regulation in place... err... right...
# ::tokens ["If", "only", "there", "was", "some", "kind", "of", "regulation", "in", "place", "...", "err", "...", "right", "..."]
# ::lemmas ["if", "only", "there", "be", "some", "kind", "of", "regulation", "in", "place", "...", "err", "...", "right", "..."]
(c14-0 / have-condition-91
       :ARG2 (c14-3 / in-place
                    :domain (c14-5 / regulate-01
                                   :mod (c14-7 / kind
                                               :mod (c14-6 / some)))
                    :mod (c14-1 / only))
       :ARG1-of (c14-2 / err-01)
       :ARG2-of (c14-4 / right-06))

# ::snt Absolutely ABSURD! how can you take advantage of people trying to get to safety at this time??
# ::tokens ["Absolutely", "ABSURD", "!", "how", "can", "you", "take", "advantage", "of", "people", "trying", "to", "get", "to", "safety", "at", "this", "time", "?", "?"]
# ::lemmas ["absolutely", "ABSURD", "!", "how", "can", "you", "take", "advantage", "of", "people", "try", "to", "get", "to", "safety", "at", "this", "time", "?", "?"]
(c15-1 / multi-sentence
       :snt1 (c15-10 / absolute
                     :mode expressive)
       :snt2 (c15-4 / possible-01
                    :ARG1 (c15-8 / take-advantage-02
                                 :ARG0 (c15-0 / you)
                                 :ARG1 (c15-6 / try-01
                                              :ARG0 (c15-9 / person)
                                              :ARG1 (c15-5 / get-05
                                                           :ARG1 c15-9
                                                           :ARG2 (c15-7 / safe-01
                                                                        :ARG1 c15-9))
                                              :time (c15-3 / this))
                                 :manner (c15-2 / amr-unknown))))

# ::snt What the actual fuck?
# ::tokens ["What", "the", "actual", "fuck", "?"]
# ::lemmas ["what", "the", "actual", "fuck", "?"]
(c16-0 / fuck
       :ARG1-of (c16-2 / actual-02)
       :mod (c16-1 / amr-unknown)
       :mode expressive)

# ::snt Grossssss
# ::tokens ["Grossssss"]
# ::lemmas ["Grossssss"]
(c17-1 / gross
       :domain (c17-0 / person))

# ::snt guys guys, its an automated system that adjusts to demand. Give them time to fix
# ::tokens ["guys", "guys", ",", "its", "an", "automated", "system", "that", "adjusts", "to", "demand", ".", "Give", "them", "time", "to", "fix"]
# ::lemmas ["guy", "guy", ",", "its", "an", "automate", "system", "that", "adjust", "to", "demand", ".", "give", "they", "time", "to", "fix"]
(c18-2 / multi-sentence
       :snt1 (c18-9 / say-01
                    :ARG0 (c18-5 / i)
                    :ARG1 (c18-3 / system
                                 :ARG1-of (c18-11 / automate-01)
                                 :ARG0-of (c18-4 / adjust-01
                                                 :ARG1 (c18-6 / demand-01)))
                    :ARG2 (c18-8 / guy))
       :snt2 (c18-7 / give-01
                    :ARG0 (c18-0 / you)
                    :ARG1 (c18-10 / time
                                  :purpose (c18-1 / fix-02
                                                  :ARG0 c18-8))
                    :ARG2 c18-8
                    :mode imperative))

# ::snt as bad as gouging on ice during a crisis. Awful.
# ::tokens ["as", "bad", "as", "gouging", "on", "ice", "during", "a", "crisis", ".", "Awful", "."]
# ::lemmas ["as", "bad", "as", "gouge", "on", "ice", "during", "a", "crisis", ".", "awful", "."]
(c19-1 / multi-sentence
       :snt1 (c19-2 / bad-07
                    :ARG2-of (c19-0 / have-degree-91
                                    :ARG3 (c19-3 / equal)
                                    :ARG4 (c19-6 / gouge-02
                                                 :ARG1 (c19-4 / ice)
                                                 :time (c19-5 / crisis))))
       :snt2 (c19-7 / awful))
