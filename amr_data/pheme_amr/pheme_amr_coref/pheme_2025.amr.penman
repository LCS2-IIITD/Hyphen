# ::snt Not just killer cop. An expression of pathological refusal face reality - blacks in the original are better than non-
# ::tokens ["Not", "just", "killer", "cop", ".", "An", "expression", "of", "pathological", "refusal", "face", "reality", "-", "blacks", "in", "the", "original", "are", "better", "than", "non-"]
# ::lemmas ["not", "just", "killer", "cop", ".", "an", "expression", "of", "pathological", "refusal", "face", "reality", "-", "black", "in", "the", "original", "be", "well", "than", "non-"]
(c1-3 / multi-sentence
      :snt1 (c1-11 / cop
                   :ARG0-of (c1-15 / kill-01)
                   :mod (c1-0 / just
                              :polarity -))
      :snt2 (c1-2 / face-01
                  :ARG0 (c1-7 / express-01
                              :ARG1 (c1-10 / refuse-01
                                           :manner (c1-9 / pathology)))
                  :ARG1 (c1-8 / reality))
      :snt3 (c1-12 / good-02
                   :ARG1 (c1-16 / person
                                :ARG1-of (c1-5 / black-05)
                                :location (c1-6 / original))
                   :ARG2-of (c1-1 / have-degree-91
                                  :ARG1 c1-16
                                  :ARG3 (c1-13 / more)
                                  :ARG4 (c1-4 / person
                                              :ARG1-of (c1-14 / black-05
                                                              :polarity -)))))

# ::snt I'd be mad too if a child killer was loose. RT A few feet from where MichaelBrown was killed
# ::tokens ["I", "'d", "be", "mad", "too", "if", "a", "child", "killer", "was", "loose", ".", "RT", "A", "few", "feet", "from", "where", "MichaelBrown", "was", "killed"]
# ::lemmas ["i", "would", "be", "mad", "too", "if", "a", "child", "killer", "be", "loose", ".", "RT", "A", "few", "foot", "from", "where", "MichaelBrown", "be", "kill"]
(c2-1 / multi-sentence
      :snt1 (c2-10 / mad-04
                   :ARG1 (c2-5 / i)
                   :condition (c2-0 / loose-03
                                    :ARG1 (c2-9 / person
                                                :ARG0-of (c2-16 / kill-01
                                                                :ARG1 (c2-11 / child))))
                   :mod (c2-15 / too))
      :snt2 (c2-17 / publication
                   :name (c2-7 / name
                               :op1 "RT")
                   :location (c2-12 / relative-position
                                    :op1 (c2-14 / location
                                                :location-of (c2-4 / kill-01
                                                                   :ARG1 (c2-3 / person
                                                                               :name (c2-8 / name
                                                                                           :op1 "MichaelBrown"))))
                                    :quant (c2-2 / few
                                                 :op1 (c2-13 / distance-quantity
                                                             :unit (c2-6 / foot)
                                                             :quant 1)))))

# ::snt :omg I cant even begin to understand how this feels. Im so sorry for the pain and the lack of safety they feel
# ::tokens [":", "omg", "I", "ca", "nt", "even", "begin", "to", "understand", "how", "this", "feels", ".", "I", "m", "so", "sorry", "for", "the", "pain", "and", "the", "lack", "of", "safety", "they", "feel"]
# ::lemmas [":", "omg", "i", "can", "not", "even", "begin", "to", "understand", "how", "this", "feel", ".", "i", "m", "so", "sorry", "for", "the", "pain", "and", "the", "lack", "of", "safety", "they", "feel"]
(c3-0 / multi-sentence
      :snt1 (c3-1 / possible-01
                  :ARG1 (c3-8 / begin-01
                              :ARG0 (c3-12 / i)
                              :ARG1 (c3-11 / understand-01
                                           :ARG0 c3-12
                                           :ARG1 (c3-18 / thing
                                                        :manner-of (c3-6 / feel-01
                                                                         :ARG1 (c3-17 / this))))
                              :mod (c3-9 / even))
                  :mod (c3-16 / oh-my-god
                              :mode expressive)
                  :polarity -)
      :snt2 (c3-5 / have-degree-91
                  :ARG1 (c3-14 / i)
                  :ARG2 (c3-2 / sorry-01
                              :ARG1 c3-14
                              :ARG2 (c3-4 / and
                                          :op1 (c3-3 / pain-01
                                                     :ARG1 (c3-13 / they))
                                          :op2 (c3-7 / lack-01
                                                     :ARG0 c3-13
                                                     :ARG1 (c3-10 / safe-01))))
                  :ARG3 (c3-15 / so)))

# ::snt fuuuuck...
# ::tokens ["fuuuuck", "..."]
# ::lemmas ["fuuuuck", "..."]
(c5-0 / fuck-01
      :mode expressive)

# ::snt why did swat team clear McD's? Just to get rid of ?
# ::tokens ["why", "did", "swat", "team", "clear", "McD", "'s", "?", "Just", "to", "get", "rid", "of", "?"]
# ::lemmas ["why", "do", "swat", "team", "clear", "McD", "'s", "?", "just", "to", "get", "rid", "of", "?"]
(c6-1 / multi-sentence
      :snt1 (c6-5 / cause-01
                  :ARG0 (c6-9 / amr-unknown)
                  :ARG1 (c6-4 / clear-01
                              :ARG0 (c6-8 / team)
                              :ARG1 (c6-7 / company
                                          :name (c6-3 / name
                                                      :op1 "McD's"))))
      :snt2 (c6-6 / rid-01
                  :ARG1 (c6-2 / it)
                  :mod (c6-0 / just)))

# ::snt A few feet from where was killed
# ::tokens ["A", "few", "feet", "from", "where", "was", "killed"]
# ::lemmas ["A", "few", "feet", "from", "where", "be", "kill"]
(c8-2 / be-located-at-91
      :ARG2 (c8-4 / relative-position
                  :op1 (c8-1 / location
                             :location-of (c8-6 / kill-01))
                  :quant (c8-0 / few
                               :op1 (c8-5 / distance-quantity
                                          :unit (c8-3 / foot)
                                          :quant 1))))

# ::snt :Please get all the pictures you can of what their doing in Viewers depend on real investigative reporting
# ::tokens [":", "Please", "get", "all", "the", "pictures", "you", "can", "of", "what", "their", "doing", "in", "Viewers", "depend", "on", "real", "investigative", "reporting"]
# ::lemmas [":", "please", "get", "all", "the", "picture", "you", "can", "of", "what", "their", "do", "in", "Viewers", "depend", "on", "real", "investigative", "reporting"]
(c9-9 / get-01
      :ARG0 (c9-0 / you)
      :ARG1 (c9-6 / picture
                  :mod (c9-13 / all)
                  :topic (c9-11 / thing
                                :ARG1-of (c9-7 / do-02
                                               :ARG0 (c9-10 / they)
                                               :location (c9-12 / person
                                                                :ARG0-of (c9-5 / view-01)))
                                :ARG0-of (c9-1 / depend-01
                                               :ARG1 (c9-8 / report-01
                                                           :ARG0 c9-12
                                                           :ARG1-of (c9-4 / real-04)
                                                           :purpose (c9-3 / investigate-01))))
                  :ARG1-of (c9-2 / possible-01))
      :mode imperative
      :polite +)

# ::snt sigue este link
# ::tokens ["sigue", "este", "link"]
# ::lemmas ["sigue", "este", "link"]
(c10-1 / link-01
       :mod (c10-0 / sigue
                   :poss (c10-2 / amr-unintelligible
                                :value "sante este")))

# ::snt : A few feet from where was killed
# ::tokens [":", "A", "few", "feet", "from", "where", "was", "killed"]
# ::lemmas [":", "A", "few", "feet", "from", "where", "be", "kill"]
(c11-2 / be-located-at-91
       :ARG2 (c11-4 / relative-position
                    :op1 (c11-1 / location
                                :location-of (c11-6 / kill-01))
                    :quant (c11-0 / few
                                  :op1 (c11-5 / distance-quantity
                                              :unit (c11-3 / foot)
                                              :quant 1))))

# ::snt  A few feet from where was killed
# ::tokens [" ", "A", "few", "feet", "from", "where", "was", "killed"]
# ::lemmas [" ", "A", "few", "feet", "from", "where", "be", "kill"]
(c13-4 / relative-position
       :op1 (c13-5 / thing
                   :location-of (c13-1 / kill-01))
       :quant (c13-0 / few
                     :op1 (c13-3 / distance-quantity
                                 :unit (c13-2 / foot)
                                 :quant 1)))

# ::snt :and yet nobody saw the "Beware Children: Bum Rushing store robber cop attackers may be close by" sign.
# ::tokens [":", "and", "yet", "nobody", "saw", "the", "\"", "Beware", "Children", ":", "Bum", "Rushing", "store", "robber", "cop", "attackers", "may", "be", "close", "by", "\"", "sign", "."]
# ::lemmas [":", "and", "yet", "nobody", "see", "the", "\"", "Beware", "Children", ":", "Bum", "Rushing", "store", "robber", "cop", "attacker", "may", "be", "close", "by", "\"", "sign", "."]
(c14-13 / and
        :op2 (c14-11 / see-01
                     :ARG0 (c14-5 / nobody)
                     :ARG1 (c14-3 / sign
                                  :ARG1-of (c14-2 / mean-01
                                                  :ARG2 (c14-7 / possible-01
                                                               :ARG1 (c14-9 / close-10
                                                                            :ARG1 (c14-12 / person
                                                                                          :ARG0-of (c14-4 / attack-01)
                                                                                          :ARG0-of (c14-8 / rob-01
                                                                                                          :ARG1 (c14-1 / store))
                                                                                          :mod (c14-10 / cop)
                                                                                          :ARG2-of c14-9)
                                                                            :name (c14-6 / name
                                                                                         :op1 "Bum"
                                                                                         :op2 "Rushing"))))))
        :mod (c14-0 / yet))

# ::snt Like this from Miami - epidemic /RT ": Have you seen this man? We are looking for him. "
# ::tokens ["Like", "this", "from", "Miami", "-", "epidemic", "/RT", "\"", ":", "Have", "you", "seen", "this", "man", "?", "We", "are", "looking", "for", "him", ".", "\""]
# ::lemmas ["like", "this", "from", "Miami", "-", "epidemic", "/rt", "\"", ":", "have", "you", "see", "this", "man", "?", "we", "be", "look", "for", "he", ".", "\""]
(c15-11 / say-01
        :ARG0 (c15-8 / publication
                     :name (c15-6 / name
                                  :op1 "Miami- epidemic")
                     :ARG1-of (c15-9 / resemble-01
                                     :ARG2 (c15-13 / publication
                                                   :name (c15-7 / name
                                                                :op1 "RT"))))
        :ARG1 (c15-14 / and
                      :op1 (c15-4 / see-01
                                  :ARG0 (c15-0 / you)
                                  :ARG1 (c15-3 / man
                                               :mod (c15-12 / this))
                                  :polarity (c15-5 / amr-unknown))
                      :op2 (c15-2 / look-01
                                  :ARG0 (c15-1 / we)
                                  :ARG1 c15-3
                                  :polarity (c15-10 / amr-unknown))))

# ::snt definitely adding that tweet to my site.
# ::tokens ["definitely", "adding", "that", "tweet", "to", "my", "site", "."]
# ::lemmas ["definitely", "add", "that", "tweet", "to", "my", "site", "."]
(c16-6 / add-02
       :ARG1 (c16-5 / thing
                    :ARG1-of (c16-3 / tweet-01)
                    :mod (c16-1 / that))
       :ARG2 (c16-4 / site
                    :poss (c16-0 / i))
       :mod (c16-2 / definite))

# ::snt THE POLICE DEPARTMENT THINKS ITS A JOKE
# ::tokens ["THE", "POLICE", "DEPARTMENT", "THINKS", "ITS", "A", "JOKE"]
# ::lemmas ["THE", "POLICE", "DEPARTMENT", "THINKS", "ITS", "A", "JOKE"]
(c17-4 / think-01
       :ARG0 (c17-3 / government-organization
                    :name (c17-2 / name
                                 :op1 "POLICE"
                                 :op2 "DePARTMENT"))
       :ARG1 (c17-1 / it)
       :ARG2 (c17-0 / job))

# ::snt Huh? Its been let go kiddo. I said my piece and kept it moving. Bye.
# ::tokens ["Huh", "?", "Its", "been", "let", "go", "kiddo", ".", "I", "said", "my", "piece", "and", "kept", "it", "moving", ".", "Bye", "."]
# ::lemmas ["huh", "?", "its", "be", "let", "go", "kiddo", ".", "i", "say", "my", "piece", "and", "keep", "it", "move", ".", "Bye", "."]
(c18-2 / multi-sentence
       :snt1 (c18-1 / let-01
                    :ARG1 (c18-7 / go-01
                                 :ARG1 (c18-4 / it))
                    :mod (c18-0 / huh
                                :mode expressive))
       :snt2 (c18-11 / and
                     :op1 (c18-9 / say-01
                                 :ARG0 (c18-8 / i)
                                 :ARG1 (c18-5 / piece
                                              :poss c18-8))
                     :op2 (c18-10 / keep-02
                                  :ARG0 c18-8
                                  :ARG1 (c18-6 / move-01
                                               :ARG1 c18-5)))
       :snt3 (c18-3 / bye))

# ::snt this sign is dumb.
# ::tokens ["this", "sign", "is", "dumb", "."]
# ::lemmas ["this", "sign", "be", "dumb", "."]
(c19-1 / dumb
       :domain (c19-0 / signal-07
                      :mod (c19-2 / this)))

# ::snt I dare you to tell me this asshole was not involved in the beating of the hot dog vendor outside home depot last year! him and
# ::tokens ["I", "dare", "you", "to", "tell", "me", "this", "asshole", "was", "not", "involved", "in", "the", "beating", "of", "the", "hot", "dog", "vendor", "outside", "home", "depot", "last", "year", "!", "him", "and"]
# ::lemmas ["i", "dare", "you", "to", "tell", "i", "this", "asshole", "be", "not", "involve", "in", "the", "beating", "of", "the", "hot", "dog", "vendor", "outside", "home", "depot", "last", "year", "!", "he", "and"]
(c20-9 / dare-01
       :ARG0 (c20-5 / i)
       :ARG1 (c20-1 / you)
       :ARG2 (c20-13 / tell-01
                     :ARG0 c20-1
                     :ARG1 (c20-11 / involve-01
                                   :ARG1 (c20-14 / asshole
                                                 :mod (c20-12 / this))
                                   :ARG2 (c20-3 / beat-01
                                                :ARG1 (c20-8 / person
                                                             :ARG0-of (c20-7 / vend-01
                                                                             :ARG1 (c20-0 / hot-dog)))
                                                :location (c20-4 / outside
                                                                 :op1 (c20-10 / company
                                                                              :name (c20-6 / name
                                                                                           :op1 "Home"
                                                                                           :op2 "Depot")))
                                                :time (c20-15 / year
                                                              :mod (c20-2 / last)))
                                   :polarity -)
                     :ARG2 c20-5))

# ::snt Yup
# ::tokens ["Yup"]
# ::lemmas ["yup"]
(c21-0 / yup)

# ::snt : A few feet from where was killed
# ::tokens [":", "A", "few", "feet", "from", "where", "was", "killed"]
# ::lemmas [":", "A", "few", "feet", "from", "where", "be", "kill"]
(c22-2 / be-located-at-91
       :ARG2 (c22-4 / relative-position
                    :op1 (c22-1 / location
                                :location-of (c22-6 / kill-01))
                    :quant (c22-0 / few
                                  :op1 (c22-5 / distance-quantity
                                              :unit (c22-3 / foot)
                                              :quant 1))))

# ::snt :If you libshits in the media say he had no prior law contact then prove me wrong!
# ::tokens [":", "If", "you", "libshits", "in", "the", "media", "say", "he", "had", "no", "prior", "law", "contact", "then", "prove", "me", "wrong", "!"]
# ::lemmas [":", "if", "you", "libshit", "in", "the", "medium", "say", "he", "have", "no", "prior", "law", "contact", "then", "prove", "i", "wrong", "!"]
(c23-6 / prove-01
       :ARG0 (c23-2 / you
                    :ARG1-of (c23-3 / liberal-02)
                    :location (c23-4 / media))
       :ARG1 (c23-1 / wrong-04
                    :ARG1 (c23-5 / i))
       :condition (c23-9 / say-01
                         :ARG0 c23-2
                         :ARG1 (c23-7 / contact-01
                                      :ARG0 (c23-0 / he)
                                      :ARG1 (c23-8 / law
                                                   :time (c23-10 / prior))
                                      :polarity -))
       :mode imperative)

# ::snt You are dumb. There.
# ::tokens ["You", "are", "dumb", ".", "There", "."]
# ::lemmas ["you", "be", "dumb", ".", "there", "."]
(c24-3 / multi-sentence
       :snt1 (c24-2 / dumb
                    :domain (c24-1 / you))
       :snt2 (c24-0 / there))

# ::snt : A few feet from where was killed: Chilling.
# ::tokens [":", "A", "few", "feet", "from", "where", "was", "killed", ":", "Chilling", "."]
# ::lemmas [":", "A", "few", "feet", "from", "where", "be", "kill", ":", "Chilling", "."]
(c25-4 / chill-01
       :location (c25-3 / relative-position
                        :op1 (c25-6 / thing
                                    :location-of (c25-1 / kill-01))
                        :quant (c25-0 / few
                                      :op1 (c25-5 / distance-quantity
                                                  :unit (c25-2 / foot)
                                                  :quant 1))))

# ::snt other people attacked a hot dog vendor outside a Home Depot robbed him with a hammer . Prove me wrong! I dare you!
# ::tokens ["other", "people", "attacked", "a", "hot", "dog", "vendor", "outside", "a", "Home", "Depot", "robbed", "him", "with", "a", "hammer", ".", "Prove", "me", "wrong", "!", "I", "dare", "you", "!"]
# ::lemmas ["other", "people", "attack", "a", "hot", "dog", "vendor", "outside", "a", "Home", "Depot", "rob", "he", "with", "a", "hammer", ".", "prove", "i", "wrong", "!", "i", "dare", "you", "!"]
(c26-4 / multi-sentence
       :snt1 (c26-16 / attack-01
                     :ARG0 (c26-11 / person
                                   :mod (c26-7 / other))
                     :ARG1 (c26-15 / person
                                   :ARG0-of (c26-10 / vend-01
                                                    :ARG1 (c26-0 / hot-dog))
                                   :location (c26-3 / outside
                                                    :op1 (c26-13 / company
                                                                 :name (c26-9 / name
                                                                              :op1 "Home"
                                                                              :op2 "Depot"))))
                     :instrument (c26-5 / hammer))
       :snt2 (c26-6 / prove-01
                    :ARG0 (c26-1 / you)
                    :ARG1 (c26-2 / wrong-04
                                 :ARG1 c26-1)
                    :mode imperative)
       :snt3 (c26-12 / dare-01
                     :ARG0 (c26-8 / i)
                     :ARG1 (c26-14 / you)))

# ::snt Brilliant. We need to set up a registry like they do with sex offenders. Inform the neighbors
# ::tokens ["Brilliant", ".", "We", "need", "to", "set", "up", "a", "registry", "like", "they", "do", "with", "sex", "offenders", ".", "Inform", "the", "neighbors"]
# ::lemmas ["brilliant", ".", "we", "need", "to", "set", "up", "a", "registry", "like", "they", "do", "with", "sex", "offender", ".", "inform", "the", "neighbor"]
(c27-4 / multi-sentence
       :snt1 (c27-5 / brilliant-01)
       :snt2 (c27-10 / need-01
                     :ARG0 (c27-1 / we)
                     :ARG1 (c27-14 / set-up-03
                                   :ARG0 c27-1
                                   :ARG1 (c27-13 / registry)
                                   :ARG1-of (c27-9 / resemble-01
                                                   :ARG2 (c27-7 / set-up-03
                                                                :ARG0 c27-1
                                                                :ARG1 (c27-12 / person
                                                                              :ARG0-of (c27-6 / offend-03
                                                                                              :ARG1 (c27-3 / sex-01)))))))
       :snt3 (c27-8 / inform-01
                    :ARG0 (c27-2 / you)
                    :ARG1 (c27-15 / person
                                  :ARG0-of (c27-0 / have-rel-role-91
                                                  :ARG1 c27-2
                                                  :ARG2 (c27-11 / neighbor)))
                    :mode imperative))

# ::snt : A few feet from where was killed: follow him for live accounts in
# ::tokens [":", "A", "few", "feet", "from", "where", "was", "killed", ":", "follow", "him", "for", "live", "accounts", "in"]
# ::lemmas [":", "A", "few", "feet", "from", "where", "be", "kill", ":", "follow", "he", "for", "live", "account", "in"]
(c28-2 / follow-02
       :ARG0 (c28-1 / you)
       :ARG1 (c28-8 / kill-01
                    :location (c28-6 / relative-position
                                     :quant (c28-5 / few
                                                   :op1 (c28-7 / distance-quantity
                                                               :unit (c28-4 / foot)
                                                               :quant 1))))
       :ARG2 (c28-0 / he)
       :purpose (c28-9 / account-01
                       :ARG0 (c28-3 / live))
       :mode imperative)

# ::snt multiply this by a &amp; you get to know how Palestinians feel on a daily basis! Imported Israeli best practices. Next drones!
# ::tokens ["multiply", "this", "by", "a", "&", "amp", ";", "you", "get", "to", "know", "how", "Palestinians", "feel", "on", "a", "daily", "basis", "!", "Imported", "Israeli", "best", "practices", ".", "Next", "drones", "!"]
# ::lemmas ["multiply", "this", "by", "a", "&", "amp", ";", "you", "get", "to", "know", "how", "Palestinians", "feel", "on", "a", "daily", "basis", "!", "import", "Israeli", "good", "practice", ".", "next", "drone", "!"]
(c29-1 / multi-sentence
       :snt1 (c29-13 / multiply-00
                     :ARG1 (c29-24 / this)
                     :manner (c29-8 / and
                                    :op1 (c29-20 / operate-01)
                                    :op2 (c29-15 / get-22
                                                 :ARG0 (c29-19 / you)
                                                 :ARG1 (c29-18 / know-01
                                                               :ARG0 c29-19
                                                               :ARG1 (c29-23 / thing
                                                                             :ARG1-of (c29-10 / feel-01
                                                                                              :ARG0 (c29-3 / person
                                                                                                           :mod (c29-22 / country
                                                                                                                        :name (c29-12 / name
                                                                                                                                      :op1 "Palestine")))
                                                                                              :frequency (c29-14 / rate-entity-91
                                                                                                                 :ARG3 (c29-17 / temporal-quantity
                                                                                                                               :unit (c29-4 / day)
                                                                                                                               :quant 1)))))))
                     :snt2 (c29-7 / practice-01
                                  :ARG0 (c29-5 / country
                                               :name (c29-21 / name
                                                             :op1 "Israel"))
                                  :ARG1-of (c29-16 / import-01)
                                  :ARG1-of (c29-9 / have-degree-91
                                                  :ARG2 (c29-6 / good-02
                                                               :ARG1 c29-7)
                                                  :ARG3 (c29-11 / most)))
                     :snt3 (c29-0 / drone
                                  :mod (c29-2 / next))))

# ::snt sigue este link
# ::tokens ["sigue", "este", "link"]
# ::lemmas ["sigue", "este", "link"]
(c30-1 / link-01
       :mod (c30-0 / sigue
                   :poss (c30-2 / amr-unintelligible
                                :value "sante este")))

# ::snt Stupid. Let it go.
# ::tokens ["Stupid", ".", "Let", "it", "go", "."]
# ::lemmas ["stupid", ".", "let", "it", "go", "."]
(c31-2 / multi-sentence
       :snt1 (c31-5 / stupid)
       :snt2 (c31-1 / let-01
                    :ARG0 (c31-0 / you)
                    :ARG1 (c31-4 / go-01
                                 :ARG1 (c31-3 / it))
                    :mode imperative))

# ::snt : A few feet from where was killed
# ::tokens [":", "A", "few", "feet", "from", "where", "was", "killed"]
# ::lemmas [":", "A", "few", "feet", "from", "where", "be", "kill"]
(c32-2 / be-located-at-91
       :ARG2 (c32-4 / relative-position
                    :op1 (c32-1 / location
                                :location-of (c32-6 / kill-01))
                    :quant (c32-0 / few
                                  :op1 (c32-5 / distance-quantity
                                              :unit (c32-3 / foot)
                                              :quant 1))))

# ::snt :A few feet from where was killed
# ::tokens [":", "A", "few", "feet", "from", "where", "was", "killed"]
# ::lemmas [":", "A", "few", "feet", "from", "where", "be", "kill"]
(c33-2 / be-located-at-91
       :ARG2 (c33-4 / relative-position
                    :op1 (c33-1 / location
                                :location-of (c33-6 / kill-01))
                    :quant (c33-0 / few
                                  :op1 (c33-5 / distance-quantity
                                              :unit (c33-3 / foot)
                                              :quant 1))))

# ::snt  A few feet from where was killed
# ::tokens [" ", "A", "few", "feet", "from", "where", "was", "killed"]
# ::lemmas [" ", "A", "few", "feet", "from", "where", "be", "kill"]
(c35-4 / relative-position
       :op1 (c35-5 / thing
                   :location-of (c35-1 / kill-01))
       :quant (c35-0 / few
                     :op1 (c35-3 / distance-quantity
                                 :unit (c35-2 / foot)
                                 :quant 1)))

# ::snt :so sad!
# ::tokens [":", "so", "sad", "!"]
# ::lemmas [":", "so", "sad", "!"]
(c36-0 / sad-02
       :degree (c36-1 / so))

# ::snt That sign shows how vast the space is between the Police and the community.
# ::tokens ["That", "sign", "shows", "how", "vast", "the", "space", "is", "between", "the", "Police", "and", "the", "community", "."]
# ::lemmas ["that", "sign", "show", "how", "vast", "the", "space", "be", "between", "the", "Police", "and", "the", "community", "."]
(c37-7 / show-01
       :ARG0 (c37-3 / sign
                    :mod (c37-8 / that))
       :ARG1 (c37-4 / vast
                    :domain (c37-0 / space
                                   :mod (c37-1 / between
                                               :op1 (c37-5 / police)
                                               :op2 (c37-6 / community)))
                    :degree (c37-2 / so)))

# ::snt : A few feet from where was killed: so sad dude ..
# ::tokens [":", "A", "few", "feet", "from", "where", "was", "killed", ":", "so", "sad", "dude", ".."]
# ::lemmas [":", "A", "few", "feet", "from", "where", "be", "kill", ":", "so", "sad", "dude", ".."]
(c38-9 / say-01
       :ARG1 (c38-4 / be-located-at-91
                    :ARG2 (c38-7 / relative-position
                                 :op1 (c38-1 / location
                                             :ARG1-of (c38-10 / kill-01))
                                 :quant (c38-2 / few
                                               :op1 (c38-8 / distance-quantity
                                                           :unit (c38-6 / foot)
                                                           :quant 1)))
                    :ARG0-of (c38-5 / sad-02
                                    :degree (c38-3 / so)))
       :ARG2 (c38-0 / dude))

# ::snt can you check on this guy
# ::tokens ["can", "you", "check", "on", "this", "guy"]
# ::lemmas ["can", "you", "check", "on", "this", "guy"]
(c39-1 / possible-01
       :polarity (c39-5 / amr-unknown)
       :ARG1 (c39-2 / check-01
                    :ARG0 (c39-0 / you)
                    :ARG1 (c39-3 / guy
                                 :mod (c39-4 / this))))

# ::snt A few feet from where was killed:
# ::tokens ["A", "few", "feet", "from", "where", "was", "killed", ":"]
# ::lemmas ["A", "few", "feet", "from", "where", "be", "kill", ":"]
(c40-4 / relative-position
       :op1 (c40-5 / thing
                   :location-of (c40-1 / kill-01))
       :quant (c40-0 / few
                     :op1 (c40-3 / distance-quantity
                                 :unit (c40-2 / foot)
                                 :quant 1)))
