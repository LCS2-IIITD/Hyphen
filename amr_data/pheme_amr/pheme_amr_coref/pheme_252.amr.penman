# ::snt . &gt; RT Charlie Hebdo staff vow to publish next week with m print run
# ::tokens [".", "&", "gt", ";", "RT", "Charlie", "Hebdo", "staff", "vow", "to", "publish", "next", "week", "with", "m", "print", "run"]
# ::lemmas [".", "&", "gt", ";", "RT", "Charlie", "Hebdo", "staff", "vow", "to", "publish", "next", "week", "with", "m", "print", "run"]
(c1-5 / vow-01
      :ARG0 (c1-6 / person
                  :ARG0-of (c1-0 / have-org-role-91
                                 :ARG1 (c1-11 / publication
                                              :name (c1-4 / name
                                                          :op1 "Charlie"
                                                          :op2 " Hebdo"))
                                 :ARG2 (c1-9 / staff)))
      :ARG1 (c1-2 / publish-01
                  :ARG0 c1-6
                  :time (c1-1 / week
                              :mod (c1-7 / next))
                  :manner (c1-8 / run-13
                                :ARG1 (c1-10 / print)))
      :ARG1-of (c1-3 / quote-01
                     :ARG2 c1-11
                     :name c1-4
                     :op1 "RT"))

# ::snt Hope Charlie HebdoMagazine does reprint in as many world languages as possible
# ::tokens ["Hope", "Charlie", "HebdoMagazine", "does", "reprint", "in", "as", "many", "world", "languages", "as", "possible"]
# ::lemmas ["hope", "Charlie", "HebdoMagazine", "do", "reprint", "in", "as", "many", "world", "language", "as", "possible"]
(c2-0 / hope-01
      :ARG1 (c2-7 / reprint-01
                  :ARG0 (c2-3 / magazine
                              :name (c2-5 / name
                                          :op1 "Charlie"
                                          :op2 "Charity"
                                          :op3 "Magazine"))
                  :medium (c2-2 / language
                                :mod (c2-1 / world)
                                :ARG1-of (c2-9 / have-quant-91
                                               :ARG2 (c2-6 / many)
                                               :ARG3 (c2-4 / equal)
                                               :ARG4 (c2-8 / possible-01
                                                           :ARG1 c2-7)))))

# ::snt !!!!
# ::tokens ["!", "!", "!", "!"]
# ::lemmas ["!", "!", "!", "!"]
(c3-0 / thing
      :mode expressive)

# ::snt I will buy several copies online and encourage everyone else to do so, increase the demand for several million prints!!
# ::tokens ["I", "will", "buy", "several", "copies", "online", "and", "encourage", "everyone", "else", "to", "do", "so", ",", "increase", "the", "demand", "for", "several", "million", "prints", "!", "!"]
# ::lemmas ["i", "will", "buy", "several", "copy", "online", "and", "encourage", "everyone", "else", "to", "do", "so", ",", "increase", "the", "demand", "for", "several", "million", "print", "!", "!"]
(c4-13 / and
       :op1 (c4-1 / buy-01
                  :ARG0 (c4-6 / i)
                  :ARG1 (c4-12 / thing
                               :ARG1-of (c4-9 / copy-01)
                               :quant (c4-11 / several))
                  :medium (c4-2 / online))
       :op2 (c4-4 / encourage-01
                  :ARG0 c4-6
                  :ARG1 (c4-3 / everyone
                              :mod (c4-0 / else))
                  :ARG2 c4-1)
       :op3 (c4-10 / increase-01
                   :ARG0 c4-6
                   :ARG1 (c4-8 / demand-01
                               :ARG1 (c4-7 / print
                                           :quant (c4-5 / several
                                                        :op1 1000000)))))

# ::snt that's the spirit.
# ::tokens ["that", "'s", "the", "spirit", "."]
# ::lemmas ["that", "be", "the", "spirit", "."]
(c5-0 / spirit
      :domain (c5-1 / that))

# ::snt I'm glad. The pressure is on to make it as poignant as possible.
# ::tokens ["I", "'m", "glad", ".", "The", "pressure", "is", "on", "to", "make", "it", "as", "poignant", "as", "possible", "."]
# ::lemmas ["i", "be", "glad", ".", "the", "pressure", "be", "on", "to", "make", "it", "as", "poignant", "as", "possible", "."]
(c6-1 / multi-sentence
      :snt1 (c6-8 / glad-02
                  :ARG1 (c6-5 / i))
      :snt2 (c6-3 / on-01
                  :ARG1 (c6-6 / pressure-01
                              :ARG2 (c6-7 / make-02
                                          :ARG1 (c6-0 / have-degree-91
                                                      :ARG1 (c6-9 / it)
                                                      :ARG2 (c6-10 / poignant)
                                                      :ARG3 (c6-4 / equal)
                                                      :ARG4 (c6-2 / possible-01
                                                                  :ARG1 c6-9))))))

# ::snt Hebdo staff to publish nxt week with m print run&gt;To show solidarity everyone who denounces cowardly act should buy copy
# ::tokens ["Hebdo", "staff", "to", "publish", "nxt", "week", "with", "m", "print", "run&gt;To", "show", "solidarity", "everyone", "who", "denounces", "cowardly", "act", "should", "buy", "copy"]
# ::lemmas ["hebdo", "staff", "to", "publish", "nxt", "week", "with", "m", "print", "run&gt;to", "show", "solidarity", "everyone", "who", "denounce", "cowardly", "act", "should", "buy", "copy"]
(c7-0 / multi-sentence
      :snt1 (c7-12 / recommend-01
                   :ARG1 (c7-5 / staff-01
                               :ARG0 (c7-8 / he)
                               :ARG1 (c7-2 / publish-01
                                           :ARG0 c7-8
                                           :ARG1 (c7-14 / week
                                                        :mod (c7-18 / this))
                                           :manner (c7-7 / and
                                                         :op1 (c7-1 / run-01
                                                                    :ARG0 c7-8
                                                                    :mod (c7-6 / print))
                                                         :op2 (c7-13 / gt))))
                   :snt2-of c7-0)
      :ARG1 (c7-9 / buy-01
                  :ARG0 (c7-10 / everyone
                               :ARG0-of (c7-3 / denounce-01
                                              :ARG1 (c7-15 / act-02
                                                           :mod (c7-17 / coward))))
                  :ARG1 (c7-4 / copy))
      :purpose (c7-11 / show-01
                      :ARG0 c7-10
                      :ARG1 (c7-16 / solidarity)))

# ::snt good
# ::tokens ["good"]
# ::lemmas ["good"]
(c8-0 / good-02)

# ::snt why can't the Guardian get a deal to run copies here in UK I'd buy it?
# ::tokens ["why", "ca", "n't", "the", "Guardian", "get", "a", "deal", "to", "run", "copies", "here", "in", "UK", "I", "'d", "buy", "it", "?"]
# ::lemmas ["why", "can", "not", "the", "Guardian", "get", "a", "deal", "to", "run", "copy", "here", "in", "UK", "i", "would", "buy", "it", "?"]
(c10-7 / cause-01
       :ARG0 (c10-14 / amr-unknown)
       :ARG1 (c10-5 / possible-01
                    :ARG1 (c10-8 / get-01
                                 :ARG0 (c10-3 / newspaper
                                              :name (c10-4 / name
                                                           :op1 "Guardian"))
                                 :ARG1 (c10-6 / deal-01
                                              :ARG2 (c10-9 / run-01
                                                           :ARG0 c10-3
                                                           :ARG1 (c10-13 / thing
                                                                         :ARG2-of (c10-10 / copy-01))
                                                           :location (c10-0 / here
                                                                            :location (c10-11 / country
                                                                                              :name (c10-12 / name
                                                                                                            :op1 "UK"))))))
                    :polarity -)
       :condition-of (c10-1 / buy-01
                            :ARG0 (c10-2 / i)
                            :ARG1 c10-13))

# ::snt .You can publish ten billion print but Don't insult any PROPHET because if all followers becomes angry then it will be Disastrous.
# ::tokens [".You", "can", "publish", "ten", "billion", "print", "but", "Do", "n't", "insult", "any", "PROPHET", "because", "if", "all", "followers", "becomes", "angry", "then", "it", "will", "be", "Disastrous", "."]
# ::lemmas [".you", "can", "publish", "ten", "billion", "print", "but", "do", "not", "insult", "any", "PROPHET", "because", "if", "all", "follower", "become", "angry", "then", "it", "will", "be", "Disastrous", "."]
(c11-10 / contrast-01
        :ARG1 (c11-8 / possible-01
                     :ARG1 (c11-15 / publish-01
                                   :ARG0 (c11-1 / you)
                                   :ARG1 (c11-3 / print
                                                :quant 1000000000)))
        :ARG2 (c11-6 / insult-01
                     :ARG0 c11-1
                     :ARG1 (c11-9 / reputation
                                  :mod (c11-16 / any))
                     :ARG1-of (c11-11 / cause-01
                                      :ARG0 (c11-0 / have-condition-91
                                                   :ARG1 (c11-12 / disaster
                                                                 :domain (c11-13 / it))
                                                   :ARG2 (c11-4 / become-01
                                                                :ARG1 (c11-14 / person
                                                                              :ARG0-of (c11-2 / follow-02)
                                                                              :mod (c11-5 / all))
                                                                :ARG2 (c11-7 / anger-01
                                                                             :ARG1 c11-14))))
                     :polarity -
                     :mode imperative))

# ::snt organiser of the flotilla says was the fault of the Israelis! You cldn't make it up!
# ::tokens ["organiser", "of", "the", "flotilla", "says", "was", "the", "fault", "of", "the", "Israelis", "!", "You", "cldn't", "make", "it", "up", "!"]
# ::lemmas ["organiser", "of", "the", "flotilla", "say", "be", "the", "fault", "of", "the", "Israelis", "!", "you", "cldn't", "make", "it", "up", "!"]
(c12-2 / multi-sentence
       :snt1 (c12-10 / say-01
                     :ARG0 (c12-7 / person
                                  :ARG0-of (c12-3 / organize-01
                                                  :ARG1 (c12-1 / flotilla)))
                     :ARG1 (c12-5 / fault-01
                                  :ARG1 (c12-11 / person
                                                :mod (c12-9 / country
                                                            :name (c12-6 / name
                                                                         :op1 "Israel")))
                                  :ARG2 (c12-4 / it)))
       :snt2 (c12-8 / make-up-10
                    :ARG0 (c12-0 / you)
                    :ARG1 c12-4
                    :polarity -))

# ::snt Boa MT : Charlie Hebdo staff vow to publish next week with m print run
# ::tokens ["Boa", "MT", ":", "Charlie", "Hebdo", "staff", "vow", "to", "publish", "next", "week", "with", "m", "print", "run"]
# ::lemmas ["Boa", "MT", ":", "Charlie", "Hebdo", "staff", "vow", "to", "publish", "next", "week", "with", "m", "print", "run"]
(c13-1 / multi-sentence
       :snt1 (c13-3 / byline-91
                    :location (c13-7 / publication
                                     :name (c13-5 / name
                                                  :op1 "Boa"
                                                  :op2 "MT")))
       :snt2 (c13-6 / vow-01
                    :ARG0 (c13-13 / person
                                  :ARG2-of (c13-11 / staff-01
                                                   :ARG1 (c13-2 / publication
                                                                :name (c13-8 / name
                                                                             :op1 "Charlie"
                                                                             :op2 "Ch Hebdo"))))
                    :ARG1 (c13-12 / publish-01
                                  :ARG0 c13-13
                                  :time (c13-0 / week
                                               :mod (c13-9 / next))
                                  :manner (c13-10 / run-13
                                                  :ARG1 (c13-4 / print)))))

# ::snt Leftists' bullshit
# ::tokens ["Leftists", "'", "bullshit"]
# ::lemmas ["leftist", "'", "bullshit"]
(c14-2 / bullshit
       :poss (c14-0 / person
                    :ARG1-of (c14-1 / left-19)))

# ::snt : Charlie Hebdo staff vow to publish next week with m print run wonderful! They're not silenced.
# ::tokens [":", "Charlie", "Hebdo", "staff", "vow", "to", "publish", "next", "week", "with", "m", "print", "run", "wonderful", "!", "They", "'re", "not", "silenced", "."]
# ::lemmas [":", "Charlie", "Hebdo", "staff", "vow", "to", "publish", "next", "week", "with", "m", "print", "run", "wonderful", "!", "they", "be", "not", "silence", "."]
(c15-1 / multi-sentence
       :snt1 (c15-6 / vow-01
                    :ARG0 (c15-7 / person
                                 :ARG2-of (c15-11 / staff-01
                                                  :ARG1 (c15-8 / magazine
                                                               :name (c15-5 / name
                                                                            :op1 "Charlie"
                                                                            :op2 " Hebdo"))))
                    :ARG1 (c15-13 / publish-01
                                  :ARG0 c15-7
                                  :time (c15-0 / week
                                               :mod (c15-9 / next))
                                  :manner (c15-4 / wonderful-03
                                                 :ARG1 (c15-10 / run-13
                                                               :ARG1 (c15-2 / print)))))
       :snt2 (c15-3 / silence-01
                    :ARG1 (c15-12 / they)
                    :polarity -))

# ::snt that is amazing indeed
# ::tokens ["that", "is", "amazing", "indeed"]
# ::lemmas ["that", "be", "amazing", "indeed"]
(c16-2 / amaze-01
       :ARG0 (c16-0 / that)
       :mod (c16-1 / indeed))

# ::snt Breaking religious taboos is risky.Is Hebdo prepared to take the risk of further attack by continuing provoking extremist?
# ::tokens ["Breaking", "religious", "taboos", "is", "risky", ".", "Is", "Hebdo", "prepared", "to", "take", "the", "risk", "of", "further", "attack", "by", "continuing", "provoking", "extremist", "?"]
# ::lemmas ["break", "religious", "taboo", "be", "risky", ".", "be", "hebdo", "prepare", "to", "take", "the", "risk", "of", "further", "attack", "by", "continue", "provoke", "extremist", "?"]
(c17-1 / multi-sentence
       :snt1 (c17-9 / risky-02
                    :ARG1 (c17-2 / break-01
                                 :ARG1 (c17-12 / taboo-01
                                               :ARG2 (c17-6 / religion))))
       :snt2 (c17-8 / prepare-02
                    :ARG1 (c17-10 / magazine
                                  :name (c17-7 / name
                                               :op1 "Charlie Hebdo"))
                    :ARG2 (c17-4 / risk-01
                                 :ARG0 c17-10
                                 :ARG2 (c17-14 / attack-01
                                               :ARG0 c17-10
                                               :mod (c17-0 / further))
                                 :manner (c17-11 / continue-01
                                                 :ARG0 c17-10
                                                 :ARG1 (c17-13 / provoke-01
                                                               :ARG0 c17-10
                                                               :ARG1 (c17-3 / extremist))))
                    :polarity (c17-5 / amr-unknown)))
