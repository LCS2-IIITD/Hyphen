# ::snt It wouldn't matter if he'd assaulted or battered every single person in the Walmart...
# ::tokens ["It", "would", "n't", "matter", "if", "he", "'d", "assaulted", "or", "battered", "every", "single", "person", "in", "the", "Walmart", "..."]
# ::lemmas ["it", "would", "not", "matter", "if", "he", "have", "assault", "or", "batter", "every", "single", "person", "in", "the", "Walmart", "..."]
(c1-1 / matter-01
      :ARG1 (c1-3 / or
                  :op1 (c1-9 / assault-01
                             :ARG0 (c1-0 / he)
                             :ARG1 (c1-6 / person
                                         :ARG1-of (c1-8 / single-02)
                                         :mod (c1-4 / every)
                                         :location (c1-7 / company
                                                         :name (c1-5 / name
                                                                     :op1 "Walmart"))))
                  :op2 (c1-2 / batter-01
                             :ARG0 c1-0
                             :ARG1 c1-6))
      :polarity -)

# ::snt Yeah. I stole a pack of gum when I was . Bet everybody has, once. Guess that means we should all be shot like animals. Damn.
# ::tokens ["Yeah", ".", "I", "stole", "a", "pack", "of", "gum", "when", "I", "was", ".", "Bet", "everybody", "has", ",", "once", ".", "Guess", "that", "means", "we", "should", "all", "be", "shot", "like", "animals", ".", "Damn", "."]
# ::lemmas ["yeah", ".", "i", "steal", "a", "pack", "of", "gum", "when", "i", "be", ".", "bet", "everybody", "have", ",", "once", ".", "guess", "that", "mean", "we", "should", "all", "be", "shoot", "like", "animal", ".", "damn", "."]
(c2-1 / multi-sentence
      :snt1 (c2-6 / steal-01
                  :ARG0 (c2-16 / i)
                  :ARG1 (c2-3 / pack
                              :consist-of (c2-13 / gum))
                  :time (c2-17 / i))
      :snt2 (c2-8 / bet-01
                  :ARG0 (c2-0 / i)
                  :ARG2 (c2-9 / steal-01
                              :ARG0 (c2-10 / everybody)
                              :frequency 1))
      :snt3 (c2-4 / guess-01
                  :ARG0 (c2-19 / i)
                  :ARG1 (c2-11 / mean-01
                               :ARG1 (c2-20 / that)
                               :ARG2 (c2-12 / recommend-01
                                            :ARG1 (c2-18 / shoot-02
                                                         :ARG1 (c2-14 / we
                                                                      :mod (c2-7 / all))
                                                         :ARG1-of (c2-2 / resemble-01
                                                                        :ARG2 (c2-15 / animal))))))
      :snt4 (c2-5 / damn-01))

# ::snt MY son is . Had he'd been black, he would have been gunned down by police numerous times. He FINALLY grew up!
# ::tokens ["MY", "son", "is", ".", "Had", "he", "'d", "been", "black", ",", "he", "would", "have", "been", "gunned", "down", "by", "police", "numerous", "times", ".", "He", "FINALLY", "grew", "up", "!"]
# ::lemmas ["my", "son", "be", ".", "have", "he", "have", "be", "black", ",", "he", "would", "have", "be", "gun", "down", "by", "police", "numerous", "time", ".", "he", "finally", "grow", "up", "!"]
(c3-2 / multi-sentence
      :snt1 (c3-10 / person
                   :ARG0-of (c3-0 / have-rel-role-91
                                  :ARG1 (c3-7 / i)
                                  :ARG2 (c3-12 / son))
                   :domain (c3-14 / he))
      :snt2 (c3-9 / have-condition-91
                  :ARG1 (c3-6 / shoot-down-05
                              :ARG0 (c3-13 / police)
                              :ARG1 (c3-4 / he)
                              :frequency (c3-8 / numerous))
                  :ARG2 (c3-5 / black-05
                              :ARG1 c3-4))
      :snt3 (c3-11 / grow-up-04
                   :ARG1 (c3-3 / he)
                   :mod (c3-1 / final)))

# ::snt are you tempted to replace it now?
# ::tokens ["are", "you", "tempted", "to", "replace", "it", "now", "?"]
# ::lemmas ["be", "you", "tempt", "to", "replace", "it", "now", "?"]
(c4-4 / tempt-01
      :polarity (c4-5 / amr-unknown)
      :ARG1 (c4-0 / you)
      :ARG3 (c4-3 / replace-01
                  :ARG0 c4-0
                  :ARG1 (c4-1 / it)
                  :time (c4-2 / now)))

# ::snt I stole pantyhose from Kmart when I was .
# ::tokens ["I", "stole", "pantyhose", "from", "Kmart", "when", "I", "was", "."]
# ::lemmas ["i", "steal", "pantyhose", "from", "Kmart", "when", "i", "be", "."]
(c5-4 / steal-01
      :ARG0 (c5-0 / i)
      :ARG1 (c5-2 / pantyhose)
      :ARG2 (c5-3 / company
                  :name (c5-1 / name
                              :op1 "Kmart"))
      :time c5-0)

# ::snt If anyone's looking for a reason to murder me execution-style in the street, I stole a coke from a Walmart when I was .
# ::tokens ["If", "anyone", "'s", "looking", "for", "a", "reason", "to", "murder", "me", "execution", "-", "style", "in", "the", "street", ",", "I", "stole", "a", "coke", "from", "a", "Walmart", "when", "I", "was", "."]
# ::lemmas ["if", "anyone", "be", "look", "for", "a", "reason", "to", "murder", "i", "execution", "-", "style", "in", "the", "street", ",", "i", "steal", "a", "coke", "from", "a", "Walmart", "when", "i", "be", "."]
(c6-10 / steal-01
       :ARG0 (c6-4 / i)
       :ARG1 (c6-7 / coke)
       :ARG2 (c6-6 / company
                   :name (c6-5 / name
                               :op1 "Walmart"))
       :condition (c6-0 / look-01
                        :ARG0 (c6-11 / anyone)
                        :ARG1 (c6-8 / reason
                                    :ARG0-of (c6-9 / cause-01
                                                   :ARG1 (c6-1 / murder-01
                                                               :ARG0 c6-11
                                                               :ARG1 c6-4
                                                               :manner (c6-2 / execute-01
                                                                             :ARG0 c6-11
                                                                             :ARG1 c6-4)
                                                               :location (c6-3 / street)))))
       :time c6-4)

# ::snt how many people did you have to assault batter and intimidate to get that coke?
# ::tokens ["how", "many", "people", "did", "you", "have", "to", "assault", "batter", "and", "intimidate", "to", "get", "that", "coke", "?"]
# ::lemmas ["how", "many", "people", "do", "you", "have", "to", "assault", "batter", "and", "intimidate", "to", "get", "that", "coke", "?"]
(c7-2 / obligate-01
      :ARG1 (c7-0 / you)
      :ARG2 (c7-10 / and
                   :op1 (c7-3 / assault-01
                              :ARG0 c7-0
                              :ARG1 (c7-6 / person
                                          :ARG0-of (c7-1 / batter-01)))
                   :op2 (c7-4 / intimidate-01
                              :ARG0 c7-0
                              :ARG1 c7-6))
      :purpose (c7-8 / get-01
                     :ARG0 c7-0
                     :ARG1 (c7-7 / coke
                                 :mod (c7-9 / that)))
      :quant (c7-5 / amr-unknown))
