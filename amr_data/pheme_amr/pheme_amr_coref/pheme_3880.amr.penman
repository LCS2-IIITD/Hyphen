# ::snt people hear TFR, but don't see the size/location of it on the map!
# ::tokens ["people", "hear", "TFR", ",", "but", "do", "n't", "see", "the", "size", "/", "location", "of", "it", "on", "the", "map", "!"]
# ::lemmas ["people", "hear", "TFR", ",", "but", "do", "not", "see", "the", "size", "/", "location", "of", "it", "on", "the", "map", "!"]
(c1-7 / contrast-01
      :ARG1 (c1-0 / hear-01
                  :ARG0 (c1-6 / person)
                  :ARG1 (c1-9 / thing
                              :name (c1-5 / name
                                          :op1 "TFR")))
      :ARG2 (c1-8 / see-01
                  :ARG0 c1-6
                  :ARG1 (c1-4 / slash
                              :op1 (c1-1 / size
                                         :poss c1-9)
                              :op2 (c1-2 / location
                                         :poss c1-9))
                  :location (c1-3 / map)
                  :polarity -))

# ::snt amin
# ::tokens ["amin"]
# ::lemmas ["amin"]
(c2-1 / person
      :name (c2-0 / name
                  :op1 "amin"))

# ::snt ouate de phoque
# ::tokens ["ouate", "de", "phoque"]
# ::lemmas ["ouate", "de", "phoque"]
(c3-0 / please
      :mod (c3-1 / phoque))

# ::snt they are usually tiny blips on the map
# ::tokens ["they", "are", "usually", "tiny", "blips", "on", "the", "map"]
# ::lemmas ["they", "be", "usually", "tiny", "blip", "on", "the", "map"]
(c4-2 / blip
      :mod (c4-4 / tiny)
      :location (c4-0 / map)
      :mod (c4-1 / usual)
      :domain (c4-3 / they))

# ::snt les false flag ont toujours le vent en poupe.Qui va ramasser les coups,le pkinois(nous).
# ::tokens ["les", "false", "flag", "ont", "toujours", "le", "vent", "en", "poupe", ".", "Qui", "va", "ramasser", "les", "coups", ",", "le", "pkinois(nous", ")", "."]
# ::lemmas ["les", "false", "flag", "ont", "toujour", "le", "vent", "en", "poupe", ".", "Qui", "va", "ramasser", "les", "coup", ",", "le", "pkinois(nous", ")", "."]
(c6-2 / multi-sentence
      :snt1 (c6-7 / pursue-01
                  :ARG0 (c6-1 / flag
                              :mod (c6-4 / false))
                  :ARG1 (c6-6 / vent
                              :location (c6-9 / city
                                              :name (c6-5 / name
                                                          :op1 "Poupe"))))
      :snt2 (c6-14 / and
                   :op1 (c6-13 / try-01
                               :ARG0 (c6-0 / you)
                               :ARG1 (c6-8 / ramasser-00
                                           :ARG0 c6-0
                                           :ARG1 (c6-10 / coupe)))
                   :op2 (c6-3 / oppose-01
                              :ARG0 c6-0
                              :ARG1 (c6-12 / country
                                           :name (c6-11 / name
                                                        :op1 "France")))))

# ::snt zapewne
# ::tokens ["zapewne"]
# ::lemmas ["zapewne"]
(c7-1 / person
      :name (c7-0 / name
                  :op1 "zapewne"))

# ::snt y
# ::tokens ["y"]
# ::lemmas ["y"]
(c8-1 / person
      :name (c8-0 / name
                  :op1 "y"))

# ::snt a Panu z twita wierzymy bo? To zwyky Pan. A Pan moe si bezkarnie myli. Moe te posa prawd oczywicie.
# ::tokens ["a", "Panu", "z", "twita", "wierzymy", "bo", "?", "To", "zwyky", "Pan", ".", "A", "Pan", "moe", "si", "bezkarnie", "myli", ".", "Moe", "te", "posa", "prawd", "oczywicie", "."]
# ::lemmas ["a", "Panu", "z", "twita", "wierzymy", "bo", "?", "to", "zwyky", "Pan", ".", "a", "Pan", "moe", "si", "bezkarnie", "myli", ".", "Moe", "te", "posa", "prawd", "oczywicie", "."]
(c9-1 / multi-sentence
      :snt1 (c9-15 / and
                   :op1 (c9-7 / person
                              :name (c9-5 / name
                                          :op1 "Panu"))
                   :op2 (c9-14 / person
                               :name (c9-6 / name
                                           :op1 "twita"
                                           :op2 "wierzymy"
                                           :op3 "bo"))
                   :op3 (c9-2 / person
                              :name (c9-8 / name
                                          :op1 "To"
                                          :op2 "Zwyky"
                                          :op3 "Pan"))
                   :snt2-of c9-1)
      :op1 (c9-13 / person
                  :name (c9-9 / name
                              :op1 "Pan"))
      :op2 (c9-3 / person
                 :name (c9-16 / name
                              :op1 "Bezkarnie"
                              :op2 "myli"))
      :op3 (c9-12 / person
                  :name (c9-0 / name
                              :op1 "Moe"))
      :op4 (c9-10 / person
                  :name (c9-4 / name
                              :op1 "Moe"))
      :op5 (c9-11 / posa))

# ::snt also, usually very minimal AGL altitude restrictions. Unless right off end of active runway, not going to make impact!
# ::tokens ["also", ",", "usually", "very", "minimal", "AGL", "altitude", "restrictions", ".", "Unless", "right", "off", "end", "of", "active", "runway", ",", "not", "going", "to", "make", "impact", "!"]
# ::lemmas ["also", ",", "usually", "very", "minimal", "AGL", "altitude", "restriction", ".", "unless", "right", "off", "end", "of", "active", "runway", ",", "not", "go", "to", "make", "impact", "!"]
(c10-1 / multi-sentence
       :snt1 (c10-13 / restrict-01
                     :ARG1 (c10-16 / altitude)
                     :ARG2 (c10-12 / product
                                   :name (c10-10 / name
                                                 :op1 "AGL"))
                     :ARG1-of (c10-14 / minimal-02
                                      :degree (c10-11 / very)
                                      :mod (c10-2 / usual))
                     :mod (c10-7 / also))
       :snt2 (c10-8 / impact-01
                    :ARG0 (c10-0 / you)
                    :condition (c10-3 / be-located-at-91
                                      :ARG2 (c10-5 / end
                                                   :mod (c10-4 / off
                                                               :mod (c10-9 / right))
                                                   :part-of (c10-6 / runway
                                                                   :ARG0-of (c10-15 / activity-06)))
                                      :polarity -)
                    :polarity -
                    :mode imperative))

# ::snt this have to do with the Lindt cafe situation?
# ::tokens ["this", "have", "to", "do", "with", "the", "Lindt", "cafe", "situation", "?"]
# ::lemmas ["this", "have", "to", "do", "with", "the", "Lindt", "cafe", "situation", "?"]
(c11-0 / have-to-do-with-04
       :ARG0 (c11-4 / this)
       :ARG1 (c11-3 / situation
                    :mod (c11-2 / cafe
                                :name (c11-1 / name
                                             :op1 "Lindt")))
       :polarity (c11-5 / amr-unknown))

# ::snt SYD still seems to be operating as normal
# ::tokens ["SYD", "still", "seems", "to", "be", "operating", "as", "normal"]
# ::lemmas ["SYD", "still", "seem", "to", "be", "operate", "as", "normal"]
(c12-5 / seem-01
       :ARG1 (c12-1 / operate-01
                    :ARG1 (c12-2 / system
                                 :name (c12-3 / name
                                              :op1 "SYD"))
                    :ARG1-of (c12-4 / normal-02))
       :mod (c12-0 / still))

# ::snt No, it's not. Only a TFR over a small area over the current hostage situation. SYD open and active RT SYDNEY AIRSPACE CLOSED
# ::tokens ["No", ",", "it", "'s", "not", ".", "Only", "a", "TFR", "over", "a", "small", "area", "over", "the", "current", "hostage", "situation", ".", "SYD", "open", "and", "active", "RT", "SYDNEY", "AIRSPACE", "CLOSED"]
# ::lemmas ["no", ",", "it", "be", "not", ".", "only", "a", "TFR", "over", "a", "small", "area", "over", "the", "current", "hostage", "situation", ".", "SYD", "open", "and", "active", "RT", "SYDNEY", "AIRSPACE", "CLOSED"]
(c13-0 / multi-sentence
       :snt1 (c13-4 / no)
       :snt2 (c13-8 / concern-02
                    :ARG0 (c13-3 / it)
                    :mod (c13-1 / only)
                    :polarity -)
       :snt3 (c13-7 / close-01
                    :ARG1 (c13-12 / airport
                                  :name (c13-5 / name
                                               :op1 "SYD"))
                    :ARG1-of (c13-2 / activity-06)
                    :snt4-of c13-0)
       :ARG1 (c13-6 / airport
                    :name (c13-9 / name
                                 :op1 "RT"))
       :location (c13-11 / city
                         :name (c13-10 / name
                                       :op1 "Sydney")))

# ::snt Think of the amount of trouble and cost that causes.
# ::tokens ["Think", "of", "the", "amount", "of", "trouble", "and", "cost", "that", "causes", "."]
# ::lemmas ["think", "of", "the", "amount", "of", "trouble", "and", "cost", "that", "cause", "."]
(c14-5 / think-01
       :ARG0 (c14-0 / you)
       :ARG1 (c14-6 / amount
                    :quant-of (c14-1 / and
                                     :op1 (c14-4 / trouble-05)
                                     :op2 (c14-3 / cost-01)
                                     :ARG0-of (c14-2 / cause-01)))
       :mode imperative)

# ::snt C'est clair... Quelle poque trouble subhana Llah
# ::tokens ["C'est", "clair", "...", "Quelle", "poque", "trouble", "subhana", "Llah"]
# ::lemmas ["c'", "clair", "...", "Quelle", "poque", "trouble", "subhana", "Llah"]
(c15-1 / multi-sentence
       :snt1 (c15-0 / have-degree-91
                    :ARG1 (c15-5 / person
                                 :name (c15-3 / name
                                              :op1 "Clair"))
                    :ARG2 (c15-7 / clair)
                    :ARG3 (c15-6 / most))
       :snt2 (c15-8 / say-01
                    :ARG1 (c15-9 / trouble-01
                                 :ARG1 (c15-10 / person
                                               :name (c15-4 / name
                                                            :op1 "Subhana"
                                                            :op2 "Llah"))
                                 :mod (c15-2 / quelle-polarity))
                    :ARG2 c15-10))

# ::snt bon apparemment la tv australienne est dessus... c'est pas du fake...
# ::tokens ["bon", "apparemment", "la", "tv", "australienne", "est", "dessus", "...", "c'est", "pas", "du", "fake", "..."]
# ::lemmas ["bon", "apparemment", "la", "tv", "australienne", "est", "dessus", "...", "c'est", "pas", "du", "fake", "..."]
(c16-1 / multi-sentence
       :snt1 (c16-5 / propose-01
                    :ARG0 (c16-7 / person
                                 :name (c16-4 / name
                                              :op1 "La"
                                              :op2 "TV"
                                              :op3 " australienne"))
                    :ARG1 (c16-3 / est-dessus)
                    :mod (c16-2 / bon))
       :snt2 (c16-6 / sense-02
                    :ARG1 (c16-8 / amr-unknown)
                    :ARG2 (c16-0 / fake-02)
                    :polarity -))

# ::snt Is this a coincidence or is this related to Lindt Hostage Sitch? : SYDNEY AIRSPACE CLOSED
# ::tokens ["Is", "this", "a", "coincidence", "or", "is", "this", "related", "to", "Lindt", "Hostage", "Sitch", "?", ":", "SYDNEY", "AIRSPACE", "CLOSED"]
# ::lemmas ["be", "this", "a", "coincidence", "or", "be", "this", "related", "to", "Lindt", "Hostage", "Sitch", "?", ":", "sydney", "AIRSPACE", "close"]
(c17-6 / close-01
       :ARG1 (c17-10 / airport
                     :name (c17-2 / name
                                  :op1 "Sydney"
                                  :op2 "Airport"))
       :polarity (c17-1 / amr-unknown)
       :ARG1-of (c17-5 / cause-01
                       :ARG0 (c17-0 / or
                                    :op1 (c17-8 / coincidence
                                                :domain (c17-9 / this))
                                    :op2 (c17-7 / relate-01
                                                :ARG1 c17-9
                                                :ARG2 (c17-4 / person
                                                             :name (c17-3 / name
                                                                          :op1 "Lindt"
                                                                          :op2 "hostage"
                                                                          :op3 "Sitch"))))))

# ::snt : SYDNEY AIRSPACE CLOSED
# ::tokens [":", "SYDNEY", "AIRSPACE", "CLOSED"]
# ::lemmas [":", "sydney", "AIRSPACE", "close"]
(c18-1 / close-01
       :ARG1 (c18-2 / airport
                    :name (c18-0 / name
                                 :op1 "Sydney")))

# ::snt Ale sytuacja miertelnie powana. : SYDNEY AIRSPACE CLOSED
# ::tokens ["Ale", "sytuacja", "miertelnie", "powana", ".", ":", "SYDNEY", "AIRSPACE", "CLOSED"]
# ::lemmas ["Ale", "sytuacja", "miertelnie", "powana", ".", ":", "sydney", "AIRSPACE", "close"]
(c19-3 / close-01
       :ARG1 (c19-5 / airport
                    :name (c19-0 / name
                                 :op1 "Sydney"
                                 :op2 "Airport"))
       :ARG1-of (c19-4 / say-01
                       :ARG0 (c19-2 / person
                                    :name (c19-1 / name
                                                 :op1 "Ale"
                                                 :op2 "Sytuacja"))))

# ::snt eee tam
# ::tokens ["eee", "tam"]
# ::lemmas ["eee", "tam"]
(c20-1 / tam
       :mod (c20-0 / eeee
                   :mode expressive))

# ::snt jest tylko ostrzeenie wydane i zakaz lotw na niskim poziomie w okolicy. Pewnie by heliTv nie przeszkadzay
# ::tokens ["jest", "tylko", "ostrzeenie", "wydane", "i", "zakaz", "lotw", "na", "niskim", "poziomie", "w", "okolicy", ".", "Pewnie", "by", "heliTv", "nie", "przeszkadzay"]
# ::lemmas ["jest", "tylko", "ostrzeenie", "wydane", "i", "zakaz", "lotw", "na", "niskim", "poziomie", "w", "okolicy", ".", "Pewnie", "by", "heliTv", "nie", "przeszkadzay"]
(c21-3 / multi-sentence
       :snt1 (c21-2 / zakaz
                    :mod (c21-1 / lot)
                    :mod (c21-9 / poziomie
                                :mod (c21-5 / okolicy))
                    :domain (c21-13 / person
                                    :name (c21-7 / name
                                                 :op1 "Tylko"))
                    :manner (c21-0 / wydane))
       :snt2 (c21-4 / person
                    :name (c21-8 / name
                                 :op1 "HeliTv"))
       :snt3 (c21-12 / person
                     :name (c21-10 / name
                                   :op1 " przeszkadzay")
                     :domain (c21-6 / person
                                    :name (c21-11 / name
                                                  :op1 "Pewnie"))))

# ::snt ALLAH y hafd
# ::tokens ["ALLAH", "y", "hafd"]
# ::lemmas ["ALLAH", "y", "hafd"]
(c22-0 / allah
       :mode expressive)

# ::snt apparemment ils parlent d'un exercice... lol
# ::tokens ["apparemment", "ils", "parlent", "d'un", "exercice", "...", "lol"]
# ::lemmas ["apparemment", "il", "parlent", "d'un", "exercice", "...", "lol"]
(c23-7 / and
       :op1 (c23-2 / appear-02
                   :ARG1 (c23-4 / parlent
                                :domain (c23-3 / il)
                                :topic (c23-1 / exercise-02
                                              :polarity -)))
       :op2 (c23-0 / laugh-01
                   :ARG0 (c23-5 / i)
                   :manner (c23-6 / loud)
                   :mode expressive))

# ::snt only over the CBD. No big deal.
# ::tokens ["only", "over", "the", "CBD", ".", "No", "big", "deal", "."]
# ::lemmas ["only", "over", "the", "CBD", ".", "no", "big", "deal", "."]
(c24-1 / multi-sentence
       :snt1 (c24-3 / over
                    :op1 (c24-6 / city-district
                                :name (c24-4 / name
                                             :op1 "CBD"))
                    :mod (c24-0 / only))
       :snt2 (c24-5 / deal-03
                    :mod (c24-2 / big
                                :polarity -)))

# ::snt ce monde part en live total
# ::tokens ["ce", "monde", "part", "en", "live", "total"]
# ::lemmas ["ce", "monde", "part", "en", "live", "total"]
(c25-0 / part
       :mod (c25-1 / live)
       :mod (c25-2 / total)
       :domain (c25-3 / amr-unknown))

# ::snt oo
# ::tokens ["oo"]
# ::lemmas ["oo"]
(c26-0 / ooo
       :mode expressive)

# ::snt wite sowa
# ::tokens ["wite", "sowa"]
# ::lemmas ["wite", "sowa"]
(c27-1 / wish-01
       :ARG1 (c27-2 / thing
                    :name (c27-0 / name
                                 :op1 "Wite"
                                 :op2 "Sowa")))

# ::snt o i sam wpadem w sida
# ::tokens ["o", "i", "sam", "wpadem", "w", "sida"]
# ::lemmas ["o", "i", "sam", "wpadem", "w", "sida"]
(c28-0 / sam-01
       :ARG0 (c28-3 / i)
       :ARG1 (c28-1 / wadem
                    :mod (c28-2 / sida)))

# ::snt nie, to z komunikatu
# ::tokens ["nie", ",", "to", "z", "komunikatu"]
# ::lemmas ["nie", ",", "to", "z", "komunikatu"]
(c29-2 / komunikatu
       :mod (c29-0 / z)
       :mod (c29-1 / nie))

# ::snt WTF LES MECS SONT AU SOL ?! : SYDNEY AIRSPACE CLOSED
# ::tokens ["WTF", "LES", "MECS", "SONT", "AU", "SOL", "?", "!", ":", "SYDNEY", "AIRSPACE", "CLOSED"]
# ::lemmas ["WTF", "LES", "MECS", "SONT", "AU", "SOL", "?", "!", ":", "sydney", "AIRSPACE", "close"]
(c30-4 / close-01
       :ARG1 (c30-5 / airport
                    :name (c30-2 / name
                                 :op1 "Sydney"
                                 :op2 "Airport"))
       :mod (c30-0 / fuck
                   :mode expressive)
       :ARG1-of (c30-3 / cause-01
                       :ARG0 (c30-1 / amr-unknown)))

# ::snt maybe
# ::tokens ["maybe"]
# ::lemmas ["maybe"]
(c31-0 / possible-01)

# ::snt Wierzy nie trzeba ale rne rda mona sprawdzi.
# ::tokens ["Wierzy", "nie", "trzeba", "ale", "rne", "rda", "mona", "sprawdzi", "."]
# ::lemmas ["Wierzy", "nie", "trzeba", "ale", "rne", "rda", "mona", "sprawdzi", "."]
(c32-0 / want-01
       :ARG0 (c32-4 / person
                    :name (c32-2 / name
                                 :op1 "Wierzy")
                    :mod (c32-6 / person
                                :name (c32-3 / name
                                             :op1 "Trzeba")))
       :ARG1 (c32-1 / person
                    :name (c32-5 / name
                                 :op1 "Rne"
                                 :op2 "da"
                                 :op3 "mona"
                                 :op4 "sprawdzi")))

# ::snt great can't land now
# ::tokens ["great", "ca", "n't", "land", "now"]
# ::lemmas ["great", "can", "not", "land", "now"]
(c33-1 / possible-01
       :ARG1 (c33-2 / land-01
                    :ARG1 (c33-3 / great)
                    :time (c33-0 / now))
       :polarity -)
