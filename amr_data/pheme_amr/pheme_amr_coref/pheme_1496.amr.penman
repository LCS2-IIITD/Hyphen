# ::snt MT : A tribute to the lives lost in crash set to music from &amp;
# ::tokens ["MT", ":", "A", "tribute", "to", "the", "lives", "lost", "in", "crash", "set", "to", "music", "from", "&", "amp", ";"]
# ::lemmas ["MT", ":", "a", "tribute", "to", "the", "life", "lose", "in", "crash", "set", "to", "music", "from", "&", "amp", ";"]
(c1-11 / tribute
       :topic (c1-0 / life
                    :ARG1-of (c1-8 / lose-02
                                   :ARG1-of (c1-7 / cause-01
                                                  :ARG0 (c1-6 / crash-01))))
       :ARG1-of (c1-9 / set-02
                      :ARG2 (c1-1 / music
                                  :source (c1-10 / company
                                                 :name (c1-3 / name
                                                             :op1 "&amp"))))
       :ARG1-of (c1-2 / say-01
                      :ARG0 (c1-5 / publication
                                  :name (c1-4 / name
                                              :op1 "MT"))))

# ::snt R.I.P.WingedLives. Thinking of all of you tonight and of the fact that you WILL be remembered by millions.
# ::tokens ["R.I.P.WingedLives", ".", "Thinking", "of", "all", "of", "you", "tonight", "and", "of", "the", "fact", "that", "you", "WILL", "be", "remembered", "by", "millions", "."]
# ::lemmas ["r.i.p.wingedlive", ".", "think", "of", "all", "of", "you", "tonight", "and", "of", "the", "fact", "that", "you", "will", "be", "remember", "by", "millions", "."]
(c2-2 / multi-sentence
      :snt1 (c2-6 / person
                  :name (c2-4 / name
                              :op1 "R.I.P."
                              :op2 "WingedLives"))
      :snt2 (c2-11 / think-01
                   :ARG1 (c2-12 / and
                                :op1 (c2-0 / you
                                           :mod (c2-3 / all)
                                           :time (c2-7 / date-entity
                                                       :dayperiod (c2-5 / night)
                                                       :mod (c2-10 / today)))
                                :op2 (c2-1 / fact
                                           :topic (c2-8 / remember-01
                                                        :ARG1 c2-0
                                                        :quant (c2-9 / multiple
                                                                     :op1 1000000))))))

# ::snt A tribute lives lost in crash to music &amp;
# ::tokens ["A", "tribute", "lives", "lost", "in", "crash", "to", "music", "&", "amp", ";"]
# ::lemmas ["a", "tribute", "life", "lose", "in", "crash", "to", "music", "&", "amp", ";"]
(c3-0 / lose-02
      :ARG1 (c3-5 / life
                  :mod (c3-6 / tribute))
      :ARG1-of (c3-4 / cause-01
                     :ARG0 (c3-3 / crash-01
                                 :ARG1 (c3-1 / music
                                             :name (c3-2 / name
                                                         :op1 "&amp")))))

# ::snt Here is a song for you. Real straight men claiming to be brave so I give them pyche test.
# ::tokens ["Here", "is", "a", "song", "for", "you", ".", "Real", "straight", "men", "claiming", "to", "be", "brave", "so", "I", "give", "them", "pyche", "test", "."]
# ::lemmas ["here", "be", "a", "song", "for", "you", ".", "real", "straight", "man", "claim", "to", "be", "brave", "so", "i", "give", "they", "pyche", "test", "."]
(c4-2 / multi-sentence
      :snt1 (c4-11 / song
                   :beneficiary (c4-1 / you)
                   :location (c4-0 / here))
      :snt2 (c4-8 / claim-01
                  :ARG0 (c4-6 / man
                              :ARG1-of (c4-4 / straight-05)
                              :ARG1-of (c4-7 / real-04))
                  :ARG1 (c4-3 / brave-02
                              :ARG0 c4-6)
                  :ARG0-of (c4-9 / cause-01
                                 :ARG1 (c4-12 / test-01
                                              :ARG0 (c4-5 / i)
                                              :ARG1 c4-6
                                              :mod (c4-10 / pyche)))))

# ::snt prayers out those scared souls who died by an evil man on a mission,Ontario Canada grieves with U &amp; will ever keep U N our prayers
# ::tokens ["prayers", "out", "those", "scared", "souls", "who", "died", "by", "an", "evil", "man", "on", "a", "mission", ",", "Ontario", "Canada", "grieves", "with", "U", "&", "amp", ";", "will", "ever", "keep", "U", "N", "our", "prayers"]
# ::lemmas ["prayer", "out", "those", "scared", "soul", "who", "die", "by", "an", "evil", "man", "on", "a", "mission", ",", "Ontario", "Canada", "grieve", "with", "U", "&", "amp", ";", "will", "ever", "keep", "U", "N", "our", "prayer"]
(c5-0 / multi-sentence
      :snt1 (c5-4 / pray-01
                  :ARG0 (c5-16 / we)
                  :ARG1 (c5-7 / soul
                              :ARG1-of (c5-11 / scare-01)
                              :ARG1-of (c5-5 / die-01
                                             :ARG0 (c5-14 / man
                                                          :mod (c5-12 / evil)
                                                          :ARG0-of (c5-9 / mission-01)))
                              :mod (c5-21 / that))
                  :direction (c5-18 / out))
      :snt2 (c5-15 / grieve-01
                   :ARG0 (c5-20 / country
                                :name (c5-13 / name
                                             :op1 "Ontario"
                                             :op2 "Canada"))
                   :accompanier (c5-6 / company
                                      :name (c5-19 / name
                                                   :op1 "U&amp")))
      :snt3 (c5-17 / keep-01
                   :ARG0 (c5-2 / we)
                   :ARG1 c5-4
                   :ARG0 (c5-1 / we)
                   :ARG1 (c5-8 / person
                               :name (c5-3 / name
                                           :op1 "U"
                                           :op2 "N")))
      :time (c5-10 / ever))

# ::snt Yes Indeed may they R.I.P..
# ::tokens ["Yes", "Indeed", "may", "they", "R.I.P", ".."]
# ::lemmas ["yes", "indeed", "may", "they", "R.I.P", ".."]
(c6-1 / possible-01
      :ARG1 (c6-2 / person
                  :name (c6-0 / name
                              :op1 "R.I.P."))
      :mod (c6-3 / indeed))
