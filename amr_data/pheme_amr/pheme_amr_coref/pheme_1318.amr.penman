# ::snt not playing for me.
# ::tokens ["not", "playing", "for", "me", "."]
# ::lemmas ["not", "play", "for", "i", "."]
(c1-0 / play-01
      :ARG0 (c1-1 / i)
      :polarity -)

# ::snt You have to watch it on Youtube to see the video so click the link.
# ::tokens ["You", "have", "to", "watch", "it", "on", "Youtube", "to", "see", "the", "video", "so", "click", "the", "link", "."]
# ::lemmas ["you", "have", "to", "watch", "it", "on", "Youtube", "to", "see", "the", "video", "so", "click", "the", "link", "."]
(c2-9 / cause-01
      :ARG0 (c2-3 / obligate-01
                  :ARG1 (c2-0 / you)
                  :ARG2 (c2-1 / watch-01
                              :ARG0 c2-0
                              :ARG1 (c2-4 / it)
                              :medium (c2-7 / publication
                                            :name (c2-5 / name
                                                        :op1 "YouTube"))
                              :condition-of (c2-10 / see-01
                                                   :ARG0 c2-0
                                                   :ARG1 (c2-6 / video))))
      :ARG1 (c2-8 / click-01
                  :ARG0 c2-0
                  :ARG1 (c2-2 / link)
                  :mode imperative))

# ::snt Police just see any black man walk by and it's....get on the ground...you're dead!
# ::tokens ["Police", "just", "see", "any", "black", "man", "walk", "by", "and", "it's", "....", "get", "on", "the", "ground", "...", "you're", "dead", "!"]
# ::lemmas ["police", "just", "see", "any", "black", "man", "walk", "by", "and", "it's", "....", "get", "on", "the", "ground", "...", "you're", "dead", "!"]
(c3-12 / and
       :op1 (c3-11 / see-01
                   :ARG0 (c3-6 / police)
                   :ARG1 (c3-1 / walk-01
                               :ARG0 (c3-3 / man
                                           :ARG1-of (c3-4 / black-05)
                                           :mod (c3-5 / any))
                               :ARG2 (c3-8 / by))
                   :mod (c3-0 / just))
       :op2 c3-12
       :op1 (c3-9 / get-05
                  :ARG0 (c3-2 / you)
                  :ARG2 (c3-7 / ground)
                  :mode imperative)
       :op2 (c3-10 / die-01
                   :ARG1 c3-2))

# ::snt check this out. trying to catalogue some of the best coverage (including yours!)
# ::tokens ["check", "this", "out", ".", "trying", "to", "catalogue", "some", "of", "the", "best", "coverage", "(", "including", "yours", "!", ")"]
# ::lemmas ["check", "this", "out", ".", "try", "to", "catalogue", "some", "of", "the", "good", "coverage", "(", "include", "yours", "!", ")"]
(c5-2 / multi-sentence
      :snt1 (c5-6 / check-out-05
                  :ARG0 (c5-1 / you)
                  :ARG1 (c5-10 / this)
                  :mode imperative)
      :snt2 (c5-8 / try-01
                  :ARG1 (c5-5 / catalogue-01
                              :ARG1 (c5-9 / cover-03
                                          :ARG1-of (c5-3 / include-01
                                                         :ARG2 (c5-12 / cover-03
                                                                      :ARG1-of (c5-0 / have-degree-91
                                                                                     :ARG2 (c5-7 / good-02
                                                                                                 :ARG1 c5-12)
                                                                                     :ARG3 (c5-4 / most))))
                                          :quant (c5-11 / some)))))

# ::snt :oh thanks
# ::tokens [":", "oh", "thanks"]
# ::lemmas [":", "oh", "thank"]
(c6-1 / thank-01
      :ARG0 (c6-2 / i)
      :mod (c6-0 / oh))

# ::snt no prob.
# ::tokens ["no", "prob", "."]
# ::lemmas ["no", "prob", "."]
(c7-0 / prob
      :polarity -)

# ::snt for every action there's an equal an opposite'reaction'This chaos needs to be under control and sometimes this has to be done
# ::tokens ["for", "every", "action", "there", "'s", "an", "equal", "an", "opposite'reaction'This", "chaos", "needs", "to", "be", "under", "control", "and", "sometimes", "this", "has", "to", "be", "done"]
# ::lemmas ["for", "every", "action", "there", "be", "an", "equal", "an", "opposite'reaction'this", "chaos", "need", "to", "be", "under", "control", "and", "sometimes", "this", "have", "to", "be", "do"]
(c8-4 / cause-01
      :ARG0 (c8-5 / act-02
                  :ARG1-of (c8-2 / equal-01)
                  :mod (c8-0 / every))
      :ARG1 (c8-3 / act-02
                  :ARG1-of (c8-1 / opposite-01)))

# ::snt A witness describes the use of tear gas tonight.
# ::tokens ["A", "witness", "describes", "the", "use", "of", "tear", "gas", "tonight", "."]
# ::lemmas ["a", "witness", "describe", "the", "use", "of", "tear", "gas", "tonight", "."]
(c9-5 / describe-01
      :ARG0 (c9-4 / person
                  :ARG0-of (c9-0 / witness-01))
      :ARG1 (c9-2 / use-01
                  :ARG1 (c9-6 / gas-03
                              :ARG2 (c9-8 / tear))
                  :time (c9-1 / date-entity
                              :dayperiod (c9-3 / night)
                              :mod (c9-7 / today))))

# ::snt Don't rub it into your skin and especially your eyes, it makes it worse.
# ::tokens ["Do", "n't", "rub", "it", "into", "your", "skin", "and", "especially", "your", "eyes", ",", "it", "makes", "it", "worse", "."]
# ::lemmas ["do", "not", "rub", "it", "into", "your", "skin", "and", "especially", "your", "eye", ",", "it", "make", "it", "bad", "."]
(c10-5 / rub-01
       :ARG0 (c10-0 / you
                    :part (c10-6 / skin)
                    :part (c10-3 / eye
                                 :mod (c10-2 / especially)))
       :ARG1 (c10-4 / it)
       :ARG2 (c10-7 / and
                    :ARG0-of (c10-1 / worsen-01))
       :polarity -
       :mode imperative)

# ::snt police scanner just reported another police shooting. Police advised to be on "high alert"
# ::tokens ["police", "scanner", "just", "reported", "another", "police", "shooting", ".", "Police", "advised", "to", "be", "on", "\"", "high", "alert", "\""]
# ::lemmas ["police", "scanner", "just", "report", "another", "police", "shooting", ".", "police", "advise", "to", "be", "on", "\"", "high", "alert", "\""]
(c11-2 / multi-sentence
       :snt1 (c11-8 / report-01
                    :ARG0 (c11-10 / thing
                                  :instrument-of (c11-9 / scan-01
                                                        :ARG0 (c11-7 / police)))
                    :ARG1 (c11-4 / shoot-02
                                 :ARG0 (c11-11 / police)
                                 :mod (c11-12 / another))
                    :time (c11-0 / just))
       :snt2 (c11-5 / advise-01
                    :ARG1 (c11-3 / police)
                    :ARG2 (c11-6 / alert-01
                                 :ARG1 c11-3
                                 :ARG1-of (c11-1 / high-02))))

# ::snt video is unavailable
# ::tokens ["video", "is", "unavailable"]
# ::lemmas ["video", "be", "unavailable"]
(c12-1 / available-02
       :ARG2 (c12-0 / video)
       :polarity -)

# ::snt This is unreal. The police is crazy as hell.
# ::tokens ["This", "is", "unreal", ".", "The", "police", "is", "crazy", "as", "hell", "."]
# ::lemmas ["this", "be", "unreal", ".", "the", "police", "be", "crazy", "as", "hell", "."]
(c13-0 / multi-sentence
       :snt1 (c13-2 / realistic-03
                    :ARG1 (c13-4 / this)
                    :polarity -)
       :snt2 (c13-3 / crazy-03
                    :ARG1 (c13-1 / police)
                    :degree (c13-5 / as-hell)))
