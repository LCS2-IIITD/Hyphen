# ::snt lets hope
# ::tokens ["lets", "hope"]
# ::lemmas ["let", "hope"]
(c1-0 / hope-01
      :ARG0 (c1-1 / we)
      :mode imperative)

# ::snt so glad they can't hurt or kill anyone else
# ::tokens ["so", "glad", "they", "ca", "n't", "hurt", "or", "kill", "anyone", "else"]
# ::lemmas ["so", "glad", "they", "can", "not", "hurt", "or", "kill", "anyone", "else"]
(c2-5 / glad-02
      :ARG0 (c2-4 / possible-01
                  :ARG1 (c2-1 / or
                              :op1 (c2-0 / hurt-01
                                         :ARG0 (c2-7 / they)
                                         :ARG1 (c2-8 / anyone
                                                     :mod (c2-2 / else)))
                              :op2 (c2-3 / kill-01
                                         :ARG0 c2-7
                                         :ARG1 c2-8))
                  :polarity -)
      :degree (c2-6 / so))

# ::snt Wow! The French Police are good. That's twice that those two brothers have been killed in two days.
# ::tokens ["Wow", "!", "The", "French", "Police", "are", "good", ".", "That", "'s", "twice", "that", "those", "two", "brothers", "have", "been", "killed", "in", "two", "days", "."]
# ::lemmas ["wow", "!", "The", "French", "Police", "be", "good", ".", "that", "be", "twice", "that", "those", "two", "brother", "have", "be", "kill", "in", "two", "days", "."]
(c3-2 / multi-sentence
      :snt1 (c3-9 / good-02
                  :ARG1 (c3-6 / police
                              :mod (c3-8 / country
                                         :name (c3-4 / name
                                                     :op1 "France")))
                  :mod (c3-1 / wow
                             :mode expressive)
                  :mode expressive)
      :snt2 (c3-13 / kill-01
                   :ARG1 (c3-3 / brother
                               :mod (c3-12 / that)
                               :quant 2)
                   :time (c3-14 / after
                                :op1 (c3-5 / now)
                                :quant (c3-11 / temporal-quantity
                                              :unit (c3-7 / day)
                                              :quant 2))
                   :ARG2-of (c3-0 / have-degree-91
                                  :ARG3 (c3-10 / times
                                               :quant 2)
                                  :ARG1 c3-13)))

# ::snt . YAY! they get to be now. It worked out for everyone.
# ::tokens [".", "YAY", "!", "they", "get", "to", "be", "now", ".", "It", "worked", "out", "for", "everyone", "."]
# ::lemmas [".", "YAY", "!", "they", "get", "to", "be", "now", ".", "it", "work", "out", "for", "everyone", "."]
(c4-2 / multi-sentence
      :snt1 (c4-0 / yay
                  :mode expressive)
      :snt2 (c4-6 / get-05
                  :ARG1 (c4-7 / they)
                  :time (c4-5 / now))
      :snt3 (c4-1 / work-out-02
                  :ARG1 (c4-4 / it)
                  :beneficiary (c4-3 / everyone)))

# ::snt Details..just details. I recall that we may... or may not ...have slipped bacon in on a few once. What you dont know....right?
# ::tokens ["Details", "..", "just", "details", ".", "I", "recall", "that", "we", "may", "...", "or", "may", "not", "...", "have", "slipped", "bacon", "in", "on", "a", "few", "once", ".", "What", "you", "do", "nt", "know", "....", "right", "?"]
# ::lemmas ["Details", "..", "just", "detail", ".", "i", "recall", "that", "we", "may", "...", "or", "may", "not", "...", "have", "slip", "bacon", "in", "on", "a", "few", "once", ".", "what", "you", "do", "not", "know", "....", "right", "?"]
(c5-4 / multi-sentence
      :snt1 (c5-16 / and
                   :op1 (c5-11 / detail
                               :mod (c5-0 / just)
                               :op2-of c5-16)
                   :mod c5-0)
      :snt2 (c5-10 / recall-02
                   :ARG0 (c5-7 / i)
                   :ARG1 (c5-6 / or
                               :op1 (c5-9 / possible-01
                                          :ARG1 (c5-12 / slip-in-02
                                                       :ARG0 (c5-1 / we)
                                                       :ARG1 (c5-5 / bacon)
                                                       :frequency (c5-3 / few)))
                               :op2 (c5-15 / possible-01
                                           :ARG1 c5-12
                                           :polarity -)))
      :snt3 (c5-14 / know-01
                   :ARG0 (c5-2 / you)
                   :ARG1 (c5-13 / thing)
                   :ARG1-of (c5-8 / request-confirmation-91)
                   :polarity -))

# ::snt good. fucking cunts.
# ::tokens ["good", ".", "fucking", "cunts", "."]
# ::lemmas ["good", ".", "fucking", "cunt", "."]
(c6-0 / person
      :mod (c6-2 / cunt)
      :ARG1-of (c6-3 / good-02)
      :mod (c6-1 / fucking
                 :mode expressive))

# ::snt At least God recognizes that I'm doing my part....
# ::tokens ["At", "least", "God", "recognizes", "that", "I", "'m", "doing", "my", "part", "...."]
# ::lemmas ["at", "least", "God", "recognize", "that", "i", "be", "do", "my", "part", "...."]
(c7-3 / recognize-02
      :ARG0 (c7-2 / person
                  :name (c7-1 / name
                              :op1 "God"))
      :ARG1 (c7-4 / do-02
                  :ARG0 (c7-0 / i)
                  :ARG1 (c7-5 / part
                              :poss c7-0))
      :mod (c7-6 / at-least))

# ::snt Not so fast. In a deli? May have been too close to the swine to collect their eternal reward.
# ::tokens ["Not", "so", "fast", ".", "In", "a", "deli", "?", "May", "have", "been", "too", "close", "to", "the", "swine", "to", "collect", "their", "eternal", "reward", "."]
# ::lemmas ["not", "so", "fast", ".", "in", "a", "deli", "?", "may", "have", "be", "too", "close", "to", "the", "swine", "to", "collect", "their", "eternal", "reward", "."]
(c8-2 / multi-sentence
      :snt1 (c8-1 / fast-02
                  :degree (c8-12 / so)
                  :polarity -)
      :snt2 (c8-3 / be-located-at-91
                  :ARG2 (c8-8 / deli)
                  :polarity (c8-14 / amr-unknown))
      :snt3 (c8-7 / possible-01
                  :ARG1 (c8-0 / have-degree-91
                              :ARG1 (c8-6 / i)
                              :ARG2 (c8-9 / close-10
                                          :ARG1 c8-6
                                          :ARG2 (c8-4 / swine))
                              :ARG3 (c8-13 / too)
                              :ARG6 (c8-10 / collect-01
                                           :ARG0 c8-6
                                           :ARG1 (c8-11 / reward-01
                                                        :ARG1 c8-4
                                                        :mod (c8-5 / eternal))))))

# ::snt looks like dead
# ::tokens ["looks", "like", "dead"]
# ::lemmas ["look", "like", "dead"]
(c9-1 / look-02
      :ARG1 (c9-0 / die-01))

# ::snt PRAISE GOD. : Suspects in Charlie Hebdo attack killed after hostage situation northeast of Paris - ,
# ::tokens ["PRAISE", "GOD", ".", ":", "Suspects", "in", "Charlie", "Hebdo", "attack", "killed", "after", "hostage", "situation", "northeast", "of", "Paris", "-", ","]
# ::lemmas ["praise", "GOD", ".", ":", "suspect", "in", "Charlie", "Hebdo", "attack", "kill", "after", "hostage", "situation", "northeast", "of", "Paris", "-", ","]
(c10-2 / multi-sentence
       :snt1 (c10-8 / praise-01
                    :ARG0 (c10-1 / you)
                    :ARG1 (c10-16 / person
                                  :name (c10-6 / name
                                               :op1 "God"))
                    :mode imperative)
       :snt2 (c10-15 / kill-01
                     :ARG1 (c10-3 / person
                                  :ARG2-of (c10-14 / suspect-01
                                                   :ARG1 (c10-17 / attack-01
                                                                 :ARG1 (c10-9 / magazine
                                                                              :name (c10-7 / name
                                                                                           :op1 "Charlie"
                                                                                           :op2 "Ch Hebdo")))))
                     :time (c10-5 / after
                                  :op1 (c10-4 / situation
                                              :mod (c10-0 / hostage)
                                              :location (c10-10 / relative-position
                                                                :op1 (c10-11 / city
                                                                             :name (c10-12 / name
                                                                                           :op1 "Paris"))
                                                                :direction (c10-13 / northeast))))))

# ::snt great news! Hey losers, get ur virgins yet? HAHA no well u won't. Burn in hell!
# ::tokens ["great", "news", "!", "Hey", "losers", ",", "get", "ur", "virgins", "yet", "?", "HAHA", "no", "well", "u", "wo", "n't", ".", "Burn", "in", "hell", "!"]
# ::lemmas ["great", "news", "!", "hey", "loser", ",", "get", "ur", "virgin", "yet", "?", "haha", "no", "well", "u", "will", "not", ".", "burn", "in", "hell", "!"]
(c12-4 / multi-sentence
       :snt1 (c12-8 / news
                    :mod (c12-13 / great))
       :snt2 (c12-11 / get-01
                     :ARG0 (c12-1 / you
                                  :ARG0-of (c12-3 / lose-03))
                     :ARG1 (c12-9 / virgin
                                  :domain c12-1)
                     :time (c12-14 / yet)
                     :polarity (c12-15 / amr-unknown)
                     :mod (c12-0 / hey
                                 :mode expressive)
                     :mode imperative)
       :snt3 (c12-10 / get-01
                     :ARG0 (c12-6 / you)
                     :ARG1 (c12-5 / hah
                                  :mode expressive)
                     :mod (c12-2 / well
                                 :mode expressive)
                     :polarity -
                     :mode imperative)
       :snt4 (c12-7 / burn-01
                    :location (c12-12 / hell)))

# ::snt any of them who want to martyrs I'll will gradly give then the honor
# ::tokens ["any", "of", "them", "who", "want", "to", "martyrs", "I", "'ll", "will", "gradly", "give", "then", "the", "honor"]
# ::lemmas ["any", "of", "they", "who", "want", "to", "martyr", "i", "'ll", "will", "gradly", "give", "then", "the", "honor"]
(c13-6 / give-01
       :ARG0 (c13-3 / i)
       :ARG1 (c13-0 / honor-01)
       :ARG2 (c13-8 / any
                    :ARG1-of (c13-5 / include-91
                                    :ARG2 (c13-7 / they
                                                 :ARG0-of (c13-1 / want-01
                                                                 :ARG1 (c13-2 / martyr-01
                                                                              :ARG0 c13-8
                                                                              :ARG1 c13-7)))))
       :manner (c13-4 / graduate))

# ::snt just don't worry about that so much
# ::tokens ["just", "do", "n't", "worry", "about", "that", "so", "much"]
# ::lemmas ["just", "do", "not", "worry", "about", "that", "so", "much"]
(c14-1 / worry-01
       :ARG0 (c14-5 / that)
       :ARG1 (c14-2 / you)
       :mod (c14-0 / just)
       :degree (c14-3 / much
                      :degree (c14-4 / so))
       :polarity -)

# ::snt just what i thought
# ::tokens ["just", "what", "i", "thought"]
# ::lemmas ["just", "what", "i", "think"]
(c15-1 / thing
       :ARG1-of (c15-3 / think-01
                       :ARG0 (c15-2 / i))
       :mod (c15-0 / just))

# ::snt Not today though right? Its just the two peaceful Muslim terrorists right?
# ::tokens ["Not", "today", "though", "right", "?", "Its", "just", "the", "two", "peaceful", "Muslim", "terrorists", "right", "?"]
# ::lemmas ["not", "today", "though", "right", "?", "its", "just", "the", "two", "peaceful", "Muslim", "terrorist", "right", "?"]
(c16-2 / multi-sentence
       :snt1 (c16-0 / have-concession-91
                    :ARG2 (c16-8 / today
                                 :polarity -)
                    :ARG1-of (c16-6 / request-confirmation-91))
       :snt2 (c16-7 / terrorist
                    :mod (c16-3 / religious-group
                                :name (c16-4 / name
                                             :op1 "Islam"))
                    :mod (c16-5 / peaceful)
                    :mod (c16-1 / just)
                    :quant 2))

# ::snt Hell, I'd be broadcasting that! In fact, I'd pass out pig blood laced bullets to the troops &amp; announce it on CNN, FOX, etc.
# ::tokens ["Hell", ",", "I", "'d", "be", "broadcasting", "that", "!", "In", "fact", ",", "I", "'d", "pass", "out", "pig", "blood", "laced", "bullets", "to", "the", "troops", "&", "amp", ";", "announce", "it", "on", "CNN", ",", "FOX", ",", "etc", "."]
# ::lemmas ["hell", ",", "i", "would", "be", "broadcast", "that", "!", "in", "fact", ",", "i", "would", "pass", "out", "pig", "blood", "laced", "bullet", "to", "the", "troop", "&", "amp", ";", "announce", "it", "on", "CNN", ",", "FOX", ",", "etc", "."]
(c17-1 / multi-sentence
       :snt1 (c17-8 / broadcast-01
                    :ARG0 (c17-14 / i)
                    :ARG1 (c17-23 / that)
                    :mod (c17-5 / hell
                                :mode expressive))
       :snt2 (c17-4 / and
                    :op1 (c17-2 / pass-out-11
                                :ARG0 (c17-16 / i)
                                :ARG1 (c17-15 / bullet
                                              :ARG1-of (c17-6 / lace-01
                                                              :ARG2 (c17-19 / blood
                                                                            :source (c17-3 / pig))))
                                :ARG2 (c17-13 / and
                                              :op1 (c17-21 / troop)
                                              :op2 (c17-11 / amp)))
                    :op2 (c17-22 / announce-01
                                 :ARG0 c17-16
                                 :ARG1 (c17-0 / it)
                                 :medium (c17-18 / and
                                                 :op1 (c17-7 / publication
                                                             :name (c17-10 / name
                                                                           :op1 "CNN"))
                                                 :op2 (c17-12 / publication
                                                              :name (c17-20 / name
                                                                            :op1 "FOX"))
                                                 :op3 (c17-9 / et-cetera)))
                    :mod (c17-17 / in-fact)))

# ::snt Way to go France!: Suspects in Charlie Hebdo attack killed after hostage situation northeast of Paris, police sources say "
# ::tokens ["Way", "to", "go", "France", "!", ":", "Suspects", "in", "Charlie", "Hebdo", "attack", "killed", "after", "hostage", "situation", "northeast", "of", "Paris", ",", "police", "sources", "say", "\""]
# ::lemmas ["way", "to", "go", "France", "!", ":", "suspect", "in", "Charlie", "Hebdo", "attack", "kill", "after", "hostage", "situation", "northeast", "of", "Paris", ",", "police", "source", "say", "\""]
(c18-0 / multi-sentence
       :snt1 (c18-15 / way
                     :manner-of (c18-14 / go-06
                                        :ARG1 (c18-20 / country
                                                      :name (c18-11 / name
                                                                    :op1 "France"))))
       :snt2 (c18-17 / kill-01
                     :ARG1 (c18-3 / person
                                  :ARG0-of (c18-5 / suspect-01
                                                  :ARG1 (c18-7 / attack-01
                                                               :ARG1 (c18-12 / magazine
                                                                             :name (c18-19 / name
                                                                                           :op1 "Charlie"
                                                                                           :op2 "Charity"
                                                                                           :op3 "Journal")))))
                     :time (c18-16 / after
                                   :op1 (c18-10 / situation
                                                :mod (c18-8 / hostage)
                                                :location (c18-13 / relative-position
                                                                  :op1 (c18-4 / city
                                                                              :name (c18-1 / name
                                                                                           :op1 "Paris"))
                                                                  :direction (c18-2 / northeast)))))
       :ARG1-of (c18-18 / say-01
                        :ARG0 (c18-9 / source
                                     :mod (c18-6 / police))))

# ::snt police did you expect them to live
# ::tokens ["police", "did", "you", "expect", "them", "to", "live"]
# ::lemmas ["police", "do", "you", "expect", "they", "to", "live"]
(c19-2 / expect-01
       :polarity (c19-5 / amr-unknown)
       :ARG0 (c19-0 / you)
       :ARG1 (c19-1 / live-01
                    :ARG0 (c19-4 / they))
       :source (c19-3 / police))

# ::snt uhh except the innocent people with all the holes in them
# ::tokens ["uhh", "except", "the", "innocent", "people", "with", "all", "the", "holes", "in", "them"]
# ::lemmas ["uhh", "except", "the", "innocent", "people", "with", "all", "the", "hole", "in", "they"]
(c20-2 / except-01
       :ARG1 (c20-4 / person
                    :ARG1-of (c20-3 / innocent-01)
                    :poss-of (c20-0 / hole
                                    :mod (c20-5 / all)))
       :mod (c20-1 / uhh))
