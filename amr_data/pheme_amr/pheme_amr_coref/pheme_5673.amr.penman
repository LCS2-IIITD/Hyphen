# ::snt I want catch a secret show! That exist? Hope fans r ok
# ::tokens ["I", "want", "catch", "a", "secret", "show", "!", "That", "exist", "?", "Hope", "fans", "r", "ok"]
# ::lemmas ["i", "want", "catch", "a", "secret", "show", "!", "that", "exist", "?", "hope", "fan", "r", "ok"]
(c2-3 / multi-sentence
      :snt1 (c2-1 / want-01
                  :ARG0 (c2-7 / i)
                  :ARG1 (c2-8 / catch-01
                              :ARG0 c2-7
                              :ARG1 (c2-9 / show-04
                                          :mod (c2-5 / secret))))
      :snt2 (c2-6 / exist-01
                  :ARG1 (c2-10 / that)
                  :polarity (c2-11 / amr-unknown))
      :snt3 (c2-0 / hope-01
                  :ARG0 c2-7
                  :ARG1 (c2-4 / okay-04
                              :ARG1 (c2-2 / fan))))

# ::snt I'm no longer sure that Prince deserves his fans after that misleading tweet about Toronto. Shameful.
# ::tokens ["I", "'m", "no", "longer", "sure", "that", "Prince", "deserves", "his", "fans", "after", "that", "misleading", "tweet", "about", "Toronto", ".", "Shameful", "."]
# ::lemmas ["i", "be", "no", "long", "sure", "that", "Prince", "deserve", "his", "fan", "after", "that", "mislead", "tweet", "about", "Toronto", ".", "shameful", "."]
(c3-1 / multi-sentence
      :snt1 (c3-12 / sure-02
                   :ARG0 (c3-3 / i)
                   :ARG1 (c3-7 / deserve-01
                               :ARG0 (c3-6 / person
                                           :name (c3-4 / name
                                                       :op1 "Prince"))
                               :ARG1 (c3-0 / fan
                                           :poss c3-6)
                               :time (c3-5 / no-longer))
                   :time (c3-14 / after
                                :op1 (c3-13 / tweet-01
                                            :topic (c3-8 / city
                                                         :name (c3-9 / name
                                                                     :op1 "Toronto"))
                                            :ARG0-of (c3-10 / mislead-01)
                                            :mod (c3-11 / that))))
      :snt2 (c3-2 / shame-02))

# ::snt Blame it on the "purple rain"
# ::tokens ["Blame", "it", "on", "the", "\"", "purple", "rain", "\""]
# ::lemmas ["blame", "it", "on", "the", "\"", "purple", "rain", "\""]
(c4-1 / blame-01
      :ARG0 (c4-0 / you)
      :ARG1 (c4-2 / it)
      :ARG2 (c4-4 / rain-01
                  :ARG1-of (c4-3 / purple-02))
      :mode imperative)

# ::snt :/
# ::tokens [":/"]
# ::lemmas [":/"]
(c5-0 / amr-empty)

# ::snt where will be performing tonight?
# ::tokens ["where", "will", "be", "performing", "tonight", "?"]
# ::lemmas ["where", "will", "be", "perform", "tonight", "?"]
(c6-1 / perform-01
      :location (c6-4 / amr-unknown)
      :time (c6-2 / date-entity
                  :dayperiod (c6-0 / night)
                  :mod (c6-3 / today)))

# ::snt Is that the sound of doves crying? : Sorry, fans. Prince will not be performing at Massey Hall tonight:
# ::tokens ["Is", "that", "the", "sound", "of", "doves", "crying", "?", ":", "Sorry", ",", "fans", ".", "Prince", "will", "not", "be", "performing", "at", "Massey", "Hall", "tonight", ":"]
# ::lemmas ["be", "that", "the", "sound", "of", "dove", "cry", "?", ":", "sorry", ",", "fan", ".", "Prince", "will", "not", "be", "perform", "at", "Massey", "Hall", "tonight", ":"]
(c7-2 / multi-sentence
      :snt1 (c7-12 / sound-01
                   :ARG1 (c7-13 / that)
                   :ARG2 (c7-9 / cry-02
                               :ARG0 (c7-8 / dove))
                   :polarity (c7-15 / amr-unknown))
      :snt2 (c7-4 / sorry-01
                  :ARG1 (c7-1 / fan))
      :snt3 (c7-7 / perform-01
                  :ARG0 (c7-14 / person
                               :name (c7-5 / name
                                           :op1 "Prince"))
                  :location (c7-3 / building
                                  :name (c7-6 / name
                                              :op1 "Massey"
                                              :op2 "Hall"))
                  :time (c7-0 / date-entity
                              :dayperiod (c7-10 / night)
                              :mod (c7-11 / today))
                  :polarity -))
