# ::snt : JUST IN: police identify officer who shot Michael Brown Which isn't solving anything.
# ::tokens [":", "JUST", "IN", ":", "police", "identify", "officer", "who", "shot", "Michael", "Brown", "Which", "is", "n't", "solving", "anything", "."]
# ::lemmas [":", "just", "in", ":", "police", "identify", "officer", "who", "shoot", "Michael", "Brown", "Which", "be", "not", "solve", "anything", "."]
(c1-3 / identify-01
      :ARG0 (c1-5 / police)
      :ARG1 (c1-1 / officer
                  :ARG0-of (c1-7 / shoot-02
                                 :ARG1 (c1-8 / person
                                             :name (c1-4 / name
                                                         :op1 "Michael"
                                                         :op2 "Brown"))))
      :ARG0-of (c1-2 / solve-01
                     :ARG1 (c1-9 / anything)
                     :polarity -)
      :mod (c1-0 / just)
      :location (c1-6 / inside))

# ::snt Brown robbed &amp; strong armed a store owner.
# ::tokens ["Brown", "robbed", "&", "amp", ";", "strong", "armed", "a", "store", "owner", "."]
# ::lemmas ["Brown", "rob", "&", "amp", ";", "strong", "arm", "a", "store", "owner", "."]
(c2-10 / and
       :op1 (c2-7 / rob-01
                  :ARG0 (c2-6 / person
                              :name (c2-4 / name
                                          :op1 "Brown"))
                  :ARG1 (c2-3 / and
                              :op1 (c2-9 / person
                                         :name c2-4
                                         :op1 "&"
                                         :op2 "amp"))
                  :op2 (c2-0 / person
                             :ARG0-of (c2-1 / own-01
                                            :ARG1 (c2-8 / store))))
       :op2 (c2-5 / arm-01
                  :ARG1 c2-0
                  :ARG1-of (c2-2 / strong-02)))

# ::snt via : JUST IN: police identify officer who shot Michael Brown
# ::tokens ["via", ":", "JUST", "IN", ":", "police", "identify", "officer", "who", "shot", "Michael", "Brown"]
# ::lemmas ["via", ":", "just", "in", ":", "police", "identify", "officer", "who", "shoot", "Michael", "Brown"]
(c3-2 / identify-01
      :ARG0 (c3-4 / police)
      :ARG1 (c3-1 / officer
                  :ARG0-of (c3-6 / shoot-02
                                 :ARG1 (c3-7 / person
                                             :name (c3-3 / name
                                                         :op1 "Michael"
                                                         :op2 "Brown"))))
      :source (c3-5 / inside
                    :mod (c3-0 / just)))

# ::snt . RT JUST IN: police identify officer who shot Michael Brown
# ::tokens [".", "RT", "JUST", "IN", ":", "police", "identify", "officer", "who", "shot", "Michael", "Brown"]
# ::lemmas [".", "RT", "just", "in", ":", "police", "identify", "officer", "who", "shoot", "Michael", "Brown"]
(c4-10 / and
       :op1 (c4-6 / publication
                  :name (c4-4 / name
                              :op1 "RT")
                  :location (c4-3 / inside
                                  :mod (c4-0 / just)))
       :op2 (c4-7 / identify-01
                  :ARG0 (c4-9 / police)
                  :ARG1 (c4-2 / officer
                              :ARG0-of (c4-8 / shoot-02
                                             :ARG1 (c4-1 / person
                                                         :name (c4-5 / name
                                                                     :op1 "Michael"
                                                                     :op2 "Brown"))))))

# ::snt how many lives does it take to learn Don't break the law, don't steal Please kids Stop, THINK And.parents Too!
# ::tokens ["how", "many", "lives", "does", "it", "take", "to", "learn", "Do", "n't", "break", "the", "law", ",", "do", "n't", "steal", "Please", "kids", "Stop", ",", "THINK", "And.parents", "Too", "!"]
# ::lemmas ["how", "many", "life", "do", "it", "take", "to", "learn", "do", "not", "break", "the", "law", ",", "do", "not", "steal", "please", "kid", "stop", ",", "think", "and.parent", "too", "!"]
(c5-13 / take-10
       :ARG0 (c5-3 / learn-01
                   :ARG1 (c5-15 / and
                                :op1 (c5-4 / break-18
                                           :ARG0 (c5-1 / you)
                                           :ARG1 (c5-10 / law)
                                           :polarity -
                                           :mode imperative)
                                :op2 (c5-11 / steal-01
                                            :ARG0 c5-1
                                            :polarity -
                                            :mode imperative)
                                :op3 (c5-5 / stop-01
                                           :ARG0 c5-1
                                           :ARG1 (c5-7 / kid)
                                           :mode imperative)
                                :op4 (c5-12 / think-01
                                            :ARG0 c5-1
                                            :mode imperative)
                                :op5 (c5-9 / person
                                           :ARG0-of (c5-0 / have-rel-role-91
                                                          :ARG2 (c5-14 / parent))
                                           :mod (c5-8 / too))))
       :ARG1 (c5-2 / life
                   :quant (c5-6 / amr-unknown)))

# ::snt He must be brought to justice and pay for his crime, he has robbed a family and the nation of a potential great citizen
# ::tokens ["He", "must", "be", "brought", "to", "justice", "and", "pay", "for", "his", "crime", ",", "he", "has", "robbed", "a", "family", "and", "the", "nation", "of", "a", "potential", "great", "citizen"]
# ::lemmas ["he", "must", "be", "bring", "to", "justice", "and", "pay", "for", "his", "crime", ",", "he", "have", "rob", "a", "family", "and", "the", "nation", "of", "a", "potential", "great", "citizen"]
(c6-3 / multi-sentence
      :snt1 (c6-6 / obligate-01
                  :ARG2 (c6-15 / and
                               :op1 (c6-5 / bring-01
                                          :ARG1 (c6-0 / he)
                                          :ARG2 (c6-1 / justice))
                               :op2 (c6-9 / pay-01
                                          :ARG0 c6-0
                                          :ARG3 (c6-11 / crime-02
                                                       :ARG0 c6-0))))
      :snt2 (c6-10 / rob-01
                   :ARG0 (c6-2 / he)
                   :ARG1 (c6-7 / and
                               :op1 (c6-4 / family)
                               :op2 (c6-8 / nation)
                               :poss (c6-12 / citizen
                                            :mod (c6-14 / potential)
                                            :mod (c6-13 / great)))))

# ::snt : JUST IN: police identify officer who shot Michael Brown they been known tf!!!
# ::tokens [":", "JUST", "IN", ":", "police", "identify", "officer", "who", "shot", "Michael", "Brown", "they", "been", "known", "tf", "!", "!", "!"]
# ::lemmas [":", "just", "in", ":", "police", "identify", "officer", "who", "shoot", "Michael", "Brown", "they", "been", "know", "tf", "!", "!", "!"]
(c7-2 / multi-sentence
      :snt1 (c7-3 / be-located-at-91
                  :ARG2 (c7-5 / inside)
                  :mod (c7-0 / just))
      :snt2 (c7-8 / identify-01
                  :ARG0 (c7-7 / police)
                  :ARG1 (c7-4 / officer
                              :ARG0-of (c7-9 / shoot-02
                                             :ARG1 (c7-12 / person
                                                          :name (c7-6 / name
                                                                      :op1 "Michael"
                                                                      :op2 "Brown")))))
      :snt3 (c7-11 / know-02
                   :ARG1 (c7-10 / they)
                   :mod (c7-1 / fuck
                              :mode expressive)))

# ::snt JUST IN: police identify officer who shot Michael Brown
# ::tokens ["JUST", "IN", ":", "police", "identify", "officer", "who", "shot", "Michael", "Brown"]
# ::lemmas ["just", "in", ":", "police", "identify", "officer", "who", "shoot", "Michael", "Brown"]
(c8-2 / identify-01
      :ARG0 (c8-4 / police)
      :ARG1 (c8-1 / officer
                  :ARG0-of (c8-5 / shoot-02
                                 :ARG1 (c8-6 / person
                                             :name (c8-3 / name
                                                         :op1 "Michael"
                                                         :op2 "Brown"))))
      :time (c8-0 / just-in))

# ::snt : JUST IN: police identify officer who shot Michael Brown
# ::tokens [":", "JUST", "IN", ":", "police", "identify", "officer", "who", "shot", "Michael", "Brown"]
# ::lemmas [":", "just", "in", ":", "police", "identify", "officer", "who", "shoot", "Michael", "Brown"]
(c9-2 / identify-01
      :ARG0 (c9-4 / police)
      :ARG1 (c9-1 / officer
                  :ARG0-of (c9-6 / shoot-02
                                 :ARG1 (c9-7 / person
                                             :name (c9-3 / name
                                                         :op1 "Michael"
                                                         :op2 "Brown"))))
      :location (c9-5 / inside
                      :mod (c9-0 / just)))
