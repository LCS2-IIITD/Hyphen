# ::snt I.e. False flags
# ::tokens ["I.e.", "False", "flags"]
# ::lemmas ["I.e.", "false", "flag"]
(c1-0 / exemplify-01
      :ARG1 (c1-1 / flag
                  :ARG1-of (c1-2 / false-02)))

# ::snt Ann what if they're country of origin is Canada?
# ::tokens ["Ann", "what", "if", "they", "'re", "country", "of", "origin", "is", "Canada", "?"]
# ::lemmas ["Ann", "what", "if", "they", "be", "country", "of", "origin", "be", "Canada", "?"]
(c2-0 / have-condition-91
      :ARG1 (c2-5 / amr-unknown)
      :ARG2 (c2-3 / country
                  :name (c2-2 / name
                              :op1 "Canada")
                  :domain (c2-4 / they)
                  :ARG2-of (c2-1 / originate-01)))

# ::snt we can only combat these propaganda efforts by shining the brightest light possible on them &amp; keeping eyes on them now.
# ::tokens ["we", "can", "only", "combat", "these", "propaganda", "efforts", "by", "shining", "the", "brightest", "light", "possible", "on", "them", "&", "amp", ";", "keeping", "eyes", "on", "them", "now", "."]
# ::lemmas ["we", "can", "only", "combat", "these", "propaganda", "effort", "by", "shine", "the", "bright", "light", "possible", "on", "they", "&", "amp", ";", "keep", "eye", "on", "they", "now", "."]
(c3-1 / possible-01
      :ARG1 (c3-17 / combat-01
                   :ARG0 (c3-12 / we)
                   :ARG1 (c3-10 / effort-01
                                :ARG1 (c3-3 / propaganda)
                                :mod (c3-19 / this))
                   :manner (c3-5 / and
                                 :op1 (c3-2 / shine-01
                                            :ARG0 c3-12
                                            :ARG1 (c3-7 / light
                                                        :ARG1-of (c3-6 / have-degree-91
                                                                       :ARG2 (c3-9 / bright-03
                                                                                   :ARG1 c3-7)
                                                                       :ARG3 (c3-0 / most)
                                                                       :ARG5 (c3-18 / light
                                                                                    :ARG1-of (c3-8 / possible-01)))
                                                        :ARG2 c3-5
                                                        :op1 (c3-14 / they)
                                                        :op2 (c3-13 / amp))))
                   :op2 (c3-15 / keep-01
                               :ARG0 c3-12
                               :ARG1 (c3-4 / have-eye-on-05
                                           :ARG0 c3-12
                                           :ARG1 c3-5)
                               :time (c3-11 / now)))
      :mod (c3-16 / only))

# ::snt story had more holes than Swiss Cheese due to HISTORIC Cover-up in UK
# ::tokens ["story", "had", "more", "holes", "than", "Swiss", "Cheese", "due", "to", "HISTORIC", "Cover", "-", "up", "in", "UK"]
# ::lemmas ["story", "have", "more", "hole", "than", "Swiss", "Cheese", "due", "to", "HISTORIC", "Cover", "-", "up", "in", "UK"]
(c4-10 / story
       :ARG0-of (c4-0 / have-03
                      :ARG1 (c4-11 / hole
                                   :ARG1-of (c4-5 / have-quant-91
                                                  :ARG3 (c4-2 / more)
                                                  :ARG4 (c4-8 / cheese
                                                              :mod (c4-7 / country
                                                                         :name (c4-4 / name
                                                                                     :op1 "Switzerland"))))))
       :ARG1-of (c4-9 / cause-01
                      :ARG0 (c4-12 / cover-up-04
                                   :mod (c4-3 / horror)
                                   :location (c4-1 / country
                                                   :name (c4-6 / name
                                                               :op1 "UK")))))

# ::snt Biggest German TV (Program Frontal21) showing how corrupt is WHO to fight . here is the video
# ::tokens ["Biggest", "German", "TV", "(", "Program", "Frontal21", ")", "showing", "how", "corrupt", "is", "WHO", "to", "fight", ".", "here", "is", "the", "video"]
# ::lemmas ["big", "german", "tv", "(", "Program", "Frontal21", ")", "show", "how", "corrupt", "be", "who", "to", "fight", ".", "here", "be", "the", "video"]
(c5-2 / multi-sentence
      :snt1 (c5-13 / show-01
                   :ARG0 (c5-4 / broadcast-program
                               :name (c5-6 / name
                                           :op1 "German"
                                           :op2 "TV")
                               :ARG1-of (c5-8 / mean-01
                                              :ARG2 (c5-10 / broadcast-program
                                                           :name (c5-7 / name
                                                                       :op1 "Program"
                                                                       :op2 "Frontal21")))
                               :ARG1-of (c5-0 / have-degree-91
                                              :ARG2 (c5-14 / big)
                                              :ARG3 (c5-1 / most)))
                   :ARG1 (c5-9 / person
                               :ARG0-of (c5-3 / fight-01
                                              :manner (c5-11 / corrupt-01
                                                             :degree (c5-5 / so)))))
      :snt2 (c5-12 / video
                   :location (c5-15 / here)))

# ::snt :only if you're a young muslim male.
# ::tokens [":", "only", "if", "you", "'re", "a", "young", "muslim", "male", "."]
# ::lemmas [":", "only", "if", "you", "be", "a", "young", "muslim", "male", "."]
(c6-0 / have-condition-91
      :ARG2 (c6-2 / male
                  :mod (c6-5 / religious-group
                             :name (c6-4 / name
                                         :op1 "Muslim"))
                  :mod (c6-1 / young)
                  :domain (c6-6 / you))
      :mod (c6-3 / only))

# ::snt Tell that to Andrew Neil. Big it up, dumb us down.
# ::tokens ["Tell", "that", "to", "Andrew", "Neil", ".", "Big", "it", "up", ",", "dumb", "us", "down", "."]
# ::lemmas ["tell", "that", "to", "Andrew", "Neil", ".", "big", "it", "up", ",", "dumb", "we", "down", "."]
(c7-2 / multi-sentence
      :snt1 (c7-9 / tell-01
                  :ARG0 (c7-0 / you)
                  :ARG1 (c7-8 / that)
                  :ARG2 (c7-6 / person
                              :name (c7-5 / name
                                          :op1 "Andrew"
                                          :op2 "Neil"))
                  :mode imperative)
      :snt2 (c7-10 / and
                   :op1 (c7-3 / big-02
                              :ARG0 (c7-11 / you)
                              :ARG1 (c7-4 / it))
                   :op2 (c7-7 / dumb-down-00
                              :ARG0 c7-11
                              :ARG1 (c7-1 / we))))

# ::snt What about the Muslims who were BORN in Canada?
# ::tokens ["What", "about", "the", "Muslims", "who", "were", "BORN", "in", "Canada", "?"]
# ::lemmas ["what", "about", "the", "Muslims", "who", "be", "bear", "in", "Canada", "?"]
(c8-6 / amr-unknown
      :topic (c8-3 / person
                   :mod (c8-4 / religious-group
                              :name (c8-1 / name
                                          :op1 "Muslim"))
                   :ARG1-of (c8-0 / bear-02
                                  :location (c8-5 / country
                                                  :name (c8-2 / name
                                                              :op1 "Canada")))))

# ::snt Situao t pegando em Otawa...
# ::tokens ["Situao", "t", "pegando", "em", "Otawa", "..."]
# ::lemmas ["Situao", "t", "pegando", "em", "Otawa", "..."]
(c9-2 / peg-03
      :ARG0 (c9-5 / person
                  :name (c9-0 / name
                              :op1 "Situao"))
      :ARG1 (c9-4 / they)
      :ARG2 (c9-3 / city
                  :name (c9-1 / name
                              :op1 "Otisawa")))

# ::snt hey Einstein he was a white boy born and bred in Canada! U want to expel him where?
# ::tokens ["hey", "Einstein", "he", "was", "a", "white", "boy", "born", "and", "bred", "in", "Canada", "!", "U", "want", "to", "expel", "him", "where", "?"]
# ::lemmas ["hey", "Einstein", "he", "be", "a", "white", "boy", "bear", "and", "breed", "in", "Canada", "!", "u", "want", "to", "expel", "he", "where", "?"]
(c10-4 / multi-sentence
       :snt1 (c10-14 / say-01
                     :ARG1 (c10-0 / hey
                                  :mode expressive)
                     :ARG2 (c10-11 / person
                                   :name (c10-9 / name
                                                :op1 "Einstein")))
       :snt2 (c10-16 / and
                     :op1 (c10-5 / bear-02
                                 :ARG1 (c10-12 / boy
                                               :ARG1-of (c10-1 / white-02))
                                 :location (c10-13 / country
                                                   :name (c10-10 / name
                                                                 :op1 "Canada")))
                     :op2 (c10-15 / breed-01
                                  :ARG1 c10-12
                                  :location c10-13))
       :snt3 (c10-8 / want-01
                    :ARG0 (c10-2 / you)
                    :ARG1 (c10-6 / expel-01
                                 :ARG0 c10-2
                                 :ARG1 (c10-3 / he)
                                 :ARG2 (c10-7 / amr-unknown))))

# ::snt Absolutely.
# ::tokens ["Absolutely", "."]
# ::lemmas ["absolutely", "."]
(c11-0 / absolute)

# ::snt Of course not. However, it should be a pretext for the immediate expulsion of Muslims from Canada back to their country of origin.
# ::tokens ["Of", "course", "not", ".", "However", ",", "it", "should", "be", "a", "pretext", "for", "the", "immediate", "expulsion", "of", "Muslims", "from", "Canada", "back", "to", "their", "country", "of", "origin", "."]
# ::lemmas ["of", "course", "not", ".", "however", ",", "it", "should", "be", "a", "pretext", "for", "the", "immediate", "expulsion", "of", "Muslims", "from", "Canada", "back", "to", "their", "country", "of", "origin", "."]
(c12-2 / multi-sentence
       :snt1 (c12-0 / have-polarity-91
                    :mod (c12-3 / of-course)
                    :ARG2 -)
       :snt2 (c12-11 / contrast-01
                     :ARG2 (c12-10 / recommend-01
                                   :ARG1 (c12-9 / pretext
                                                :domain (c12-5 / it)
                                                :purpose (c12-4 / expel-01
                                                                :ARG1 (c12-15 / person
                                                                              :mod (c12-6 / religious-group
                                                                                          :name (c12-7 / name
                                                                                                       :op1 "Muslim")))
                                                                :ARG2 (c12-12 / country
                                                                              :ARG2-of (c12-1 / originate-01
                                                                                              :ARG1 c12-15))
                                                                :time (c12-13 / immediate)
                                                                :source (c12-14 / country
                                                                                :name (c12-8 / name
                                                                                             :op1 "Canada")))))))

# ::snt racist and xenophobic nitwit at work , everyone
# ::tokens ["racist", "and", "xenophobic", "nitwit", "at", "work", ",", "everyone"]
# ::lemmas ["racist", "and", "xenophobic", "nitwit", "at", "work", ",", "everyone"]
(c13-6 / say-01
       :ARG0 (c13-3 / i)
       :ARG1 (c13-4 / nitwit
                    :mod (c13-5 / racism)
                    :mod (c13-2 / xenophobia)
                    :location (c13-0 / work-01))
       :ARG2 (c13-1 / everyone))

# ::snt lord I hope not but what's the reality gonna be? Hopefully decision waits until election ...
# ::tokens ["lord", "I", "hope", "not", "but", "what", "'s", "the", "reality", "gon", "na", "be", "?", "Hopefully", "decision", "waits", "until", "election", "..."]
# ::lemmas ["lord", "i", "hope", "not", "but", "what", "be", "the", "reality", "going", "to", "be", "?", "hopefully", "decision", "wait", "until", "election", "..."]
(c14-2 / multi-sentence
       :snt1 (c14-8 / contrast-01
                    :ARG1 (c14-0 / hope-01
                                 :ARG0 (c14-5 / i)
                                 :polarity -)
                    :ARG2 (c14-12 / hope-01
                                  :ARG0 c14-5
                                  :ARG1 (c14-7 / reality
                                               :domain (c14-11 / amr-unknown))))
       :snt2 (c14-6 / hope-01
                    :ARG0 (c14-9 / i)
                    :ARG1 (c14-1 / wait-01
                                 :ARG1 (c14-10 / decide-01)
                                 :ARG2 (c14-3 / until
                                              :op1 (c14-4 / elect-01)))))

# ::snt But it will be
# ::tokens ["But", "it", "will", "be"]
# ::lemmas ["but", "it", "will", "be"]
(c15-0 / contrast-01
       :ARG2 (c15-1 / it))

# ::snt . this is the true terror threat.
# ::tokens [".", "this", "is", "the", "true", "terror", "threat", "."]
# ::lemmas [".", "this", "be", "the", "true", "terror", "threat", "."]
(c16-2 / threaten-01
       :ARG1 (c16-3 / terror)
       :ARG1-of (c16-0 / true-01)
       :domain (c16-1 / this))

# ::snt Oh, but it will.
# ::tokens ["Oh", ",", "but", "it", "will", "."]
# ::lemmas ["oh", ",", "but", "it", "will", "."]
(c17-1 / contrast-01
       :ARG2 (c17-2 / it)
       :mod (c17-0 / oh
                   :mode expressive))

# ::snt It should be a pretext to force every muslim to migrate to the Middle East. Even converts. Immediate loss of citizenship &amp; deported!
# ::tokens ["It", "should", "be", "a", "pretext", "to", "force", "every", "muslim", "to", "migrate", "to", "the", "Middle", "East", ".", "Even", "converts", ".", "Immediate", "loss", "of", "citizenship", "&", "amp", ";", "deported", "!"]
# ::lemmas ["it", "should", "be", "a", "pretext", "to", "force", "every", "muslim", "to", "migrate", "to", "the", "Middle", "East", ".", "even", "convert", ".", "immediate", "loss", "of", "citizenship", "&", "amp", ";", "deport", "!"]
(c18-0 / multi-sentence
       :snt1 (c18-14 / recommend-01
                     :ARG1 (c18-2 / pretext
                                  :purpose (c18-7 / force-01
                                                  :ARG1 (c18-5 / person
                                                               :mod (c18-1 / religious-group
                                                                           :name (c18-12 / name
                                                                                         :op1 "Muslim"))
                                                               :mod (c18-11 / every))
                                                  :ARG2 (c18-13 / migrate-01
                                                                :ARG0 c18-5
                                                                :ARG2 (c18-16 / world-region
                                                                              :name (c18-19 / name
                                                                                            :op1 "Middle"
                                                                                            :op2 "East"))))))
       :snt2 (c18-9 / person
                    :ARG1-of (c18-20 / convert-01)
                    :mod (c18-10 / even))
       :snt3 (c18-8 / lose-02
                    :ARG1 (c18-6 / and
                                 :op1 (c18-3 / citizenship)
                                 :op2 (c18-17 / amp))
                    :degree (c18-18 / immediate))
       :snt4 (c18-4 / deport-01
                    :ARG1 (c18-15 / person
                                  :mod c18-1)))

# ::snt exactly. We need to avoid same mistakes that gave us Patriot Act &amp; other freedom stripping laws passed under guise of protecting us.
# ::tokens ["exactly", ".", "We", "need", "to", "avoid", "same", "mistakes", "that", "gave", "us", "Patriot", "Act", "&", "amp", ";", "other", "freedom", "stripping", "laws", "passed", "under", "guise", "of", "protecting", "us", "."]
# ::lemmas ["exactly", ".", "we", "need", "to", "avoid", "same", "mistake", "that", "give", "we", "Patriot", "Act", "&", "amp", ";", "other", "freedom", "strip", "law", "pass", "under", "guise", "of", "protect", "we", "."]
(c19-2 / multi-sentence
       :snt1 (c19-5 / exact)
       :snt2 (c19-8 / need-01
                    :ARG0 (c19-0 / we)
                    :ARG1 (c19-17 / avoid-01
                                  :ARG0 c19-0
                                  :ARG1 (c19-10 / mistake-02
                                                :ARG0 c19-0
                                                :ARG1-of (c19-15 / same-01
                                                                 :ARG2 (c19-7 / and
                                                                              :op1 (c19-1 / law
                                                                                          :name (c19-9 / name
                                                                                                       :op1 "Patriot"
                                                                                                       :op2 "Act"))
                                                                              :op2 (c19-14 / law
                                                                                           :name (c19-11 / name
                                                                                                         :op1 "Amendment"))
                                                                              :mod (c19-4 / other)
                                                                              :ARG0-of (c19-6 / strip-01
                                                                                              :ARG1 (c19-3 / free-04))
                                                                              :ARG1-of (c19-12 / pass-01
                                                                                               :ARG1-of (c19-13 / disguise-01
                                                                                                                :ARG2 (c19-16 / protect-01
                                                                                                                              :ARG1 c19-0)))))))))

# ::snt Stripping away civil liberties? Like in... Russia? Kidding! Love ya RT!
# ::tokens ["Stripping", "away", "civil", "liberties", "?", "Like", "in", "...", "Russia", "?", "Kidding", "!", "Love", "ya", "RT", "!"]
# ::lemmas ["strip", "away", "civil", "liberty", "?", "like", "in", "...", "Russia", "?", "kid", "!", "love", "ya", "RT", "!"]
(c20-3 / multi-sentence
       :snt1 (c20-14 / strip-01
                     :ARG1 (c20-2 / liberty
                                  :mod (c20-10 / civil))
                     :direction (c20-15 / away)
                     :polarity (c20-4 / amr-unknown)
                     :ARG1-of (c20-9 / resemble-01
                                     :ARG2 (c20-11 / country
                                                   :name (c20-6 / name
                                                                :op1 "Russia")
                                                   :polarity (c20-7 / amr-unknown))))
       :snt2 (c20-0 / joke-01
                    :ARG0 (c20-5 / i)
                    :mode expressive)
       :snt3 (c20-13 / love-01
                     :ARG0 (c20-1 / you)
                     :ARG1 (c20-8 / publication
                                  :name (c20-12 / name
                                                :op1 "RT"))
                     :mode expressive))

# ::snt There should be a law that prosecute all these crazy religious radicals; their constitutional right should not even be considered.
# ::tokens ["There", "should", "be", "a", "law", "that", "prosecute", "all", "these", "crazy", "religious", "radicals", ";", "their", "constitutional", "right", "should", "not", "even", "be", "considered", "."]
# ::lemmas ["there", "should", "be", "a", "law", "that", "prosecute", "all", "these", "crazy", "religious", "radical", ";", "their", "constitutional", "right", "should", "not", "even", "be", "consider", "."]
(c21-2 / multi-sentence
       :snt1 (c21-7 / recommend-01
                    :ARG1 (c21-6 / prosecute-01
                                 :ARG0 (c21-1 / law)
                                 :ARG1 (c21-14 / person
                                               :ARG1-of (c21-5 / radical-02
                                                               :mod (c21-4 / religion))
                                               :ARG1-of (c21-8 / crazy-03)
                                               :mod (c21-15 / all)
                                               :mod (c21-13 / this))))
       :snt2 (c21-0 / recommend-01
                    :ARG1 (c21-9 / consider-02
                                 :ARG1 (c21-12 / right-05
                                               :ARG1 (c21-10 / they)
                                               :mod (c21-11 / constitution))
                                 :mod (c21-3 / even)
                                 :polarity -)))

# ::snt But will be.
# ::tokens ["But", "will", "be", "."]
# ::lemmas ["but", "will", "be", "."]
(c22-1 / contrast-01
       :ARG2 (c22-0 / event))
