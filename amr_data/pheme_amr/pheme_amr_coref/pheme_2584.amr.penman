# ::snt : Police chief said officer who shot Brown didn't know about any robbery
# ::tokens [":", "Police", "chief", "said", "officer", "who", "shot", "Brown", "did", "n't", "know", "about", "any", "robbery"]
# ::lemmas [":", "police", "chief", "say", "officer", "who", "shoot", "Brown", "do", "not", "know", "about", "any", "robbery"]
(c1-8 / say-01
      :ARG0 (c1-5 / person
                  :ARG0-of (c1-0 / have-org-role-91
                                 :ARG1 (c1-10 / police)
                                 :ARG2 (c1-7 / chief)))
      :ARG1 (c1-9 / know-01
                  :ARG0 (c1-2 / officer
                              :ARG0-of (c1-3 / shoot-02
                                             :ARG1 (c1-1 / person
                                                         :name (c1-4 / name
                                                                     :op1 "Brown"))))
                  :ARG1 (c1-6 / rob-01
                              :mod (c1-11 / any))
                  :polarity -))

# ::snt . Uglier and uglier!
# ::tokens [".", "Uglier", "and", "uglier", "!"]
# ::lemmas [".", "uglier", "and", "uglier", "!"]
(c2-0 / have-degree-91
      :ARG2 (c2-4 / and
                  :op1 (c2-2 / ugly)
                  :op2 (c2-3 / ugly))
      :ARG3 (c2-1 / more)
      :mode expressive)

# ::snt they've actually offered no substantiated proof that he did.
# ::tokens ["they", "'ve", "actually", "offered", "no", "substantiated", "proof", "that", "he", "did", "."]
# ::lemmas ["they", "'ve", "actually", "offer", "no", "substantiate", "proof", "that", "he", "do", "."]
(c3-1 / offer-01
      :ARG0 (c3-6 / they)
      :ARG1 (c3-4 / thing
                  :ARG0-of (c3-2 / prove-01
                                 :ARG1 (c3-3 / do-02
                                             :ARG0 (c3-0 / he)))
                  :ARG1-of (c3-5 / substantiate-01))
      :ARG1-of (c3-7 / actual-02)
      :polarity -)

# ::snt So what was the reason he shot Michael Brown?
# ::tokens ["So", "what", "was", "the", "reason", "he", "shot", "Michael", "Brown", "?"]
# ::lemmas ["so", "what", "be", "the", "reason", "he", "shoot", "Michael", "Brown", "?"]
(c4-3 / cause-01
      :ARG0 (c4-5 / amr-unknown)
      :ARG1 (c4-4 / shoot-02
                  :ARG0 (c4-0 / he)
                  :ARG1 (c4-2 / person
                              :name (c4-1 / name
                                          :op1 "Michael"
                                          :op2 "Brown"))))

# ::snt THAT MAKES IT WORSE!!!!!
# ::tokens ["THAT", "MAKES", "IT", "WORSE", "!", "!", "!", "!", "!"]
# ::lemmas ["that", "MAKES", "it", "worse", "!", "!", "!", "!", "!"]
(c5-1 / make-02
      :ARG0 (c5-5 / that)
      :ARG1 (c5-0 / have-degree-91
                  :ARG1 (c5-3 / it)
                  :ARG2 (c5-2 / bad-07
                              :ARG1 c5-3)
                  :ARG3 (c5-4 / more))
      :mode expressive)

# ::snt seemed like you were saying Brown had a reason to instigate. If not, my bad.
# ::tokens ["seemed", "like", "you", "were", "saying", "Brown", "had", "a", "reason", "to", "instigate", ".", "If", "not", ",", "my", "bad", "."]
# ::lemmas ["seem", "like", "you", "be", "say", "Brown", "have", "a", "reason", "to", "instigate", ".", "if", "not", ",", "my", "bad", "."]
(c6-2 / multi-sentence
      :snt1 (c6-11 / seem-01
                   :ARG1 (c6-4 / say-01
                               :ARG0 (c6-1 / you)
                               :ARG1 (c6-0 / have-03
                                           :ARG0 (c6-7 / person
                                                       :name (c6-6 / name
                                                                   :op1 "Brown"))
                                           :ARG1 (c6-8 / reason
                                                       :ARG0-of (c6-9 / cause-01
                                                                      :ARG1 (c6-5 / instigate-01
                                                                                  :ARG0 c6-7))))))
      :snt2 (c6-3 / bad-04
                  :ARG1 (c6-10 / i)
                  :condition (c6-12 / have-polarity-91
                                    :ARG2 -)))

# ::snt this justifies killing someone as they turn around and put their hands up?
# ::tokens ["this", "justifies", "killing", "someone", "as", "they", "turn", "around", "and", "put", "their", "hands", "up", "?"]
# ::lemmas ["this", "justifie", "kill", "someone", "as", "they", "turn", "around", "and", "put", "their", "hand", "up", "?"]
(c7-0 / justify-01
      :polarity (c7-10 / amr-unknown)
      :ARG0 (c7-9 / this)
      :ARG1 (c7-4 / kill-01
                  :ARG1 (c7-8 / someone)
                  :time (c7-3 / and
                              :op1 (c7-7 / turn-01
                                         :ARG0 c7-8
                                         :direction (c7-5 / around))
                              :op2 (c7-6 / put-01
                                         :ARG0 c7-8
                                         :ARG1 (c7-1 / hand
                                                     :location (c7-2 / up
                                                                     :ARG2-of c7-6))))))

# ::snt Police chief said officer who shot Mike Brown didn't know about any robbery, reports.
# ::tokens ["Police", "chief", "said", "officer", "who", "shot", "Mike", "Brown", "did", "n't", "know", "about", "any", "robbery", ",", "reports", "."]
# ::lemmas ["police", "chief", "say", "officer", "who", "shoot", "Mike", "Brown", "do", "not", "know", "about", "any", "robbery", ",", "report", "."]
(c8-7 / report-01
      :ARG1 (c8-9 / say-01
                  :ARG0 (c8-6 / person
                              :ARG0-of (c8-0 / have-org-role-91
                                             :ARG1 (c8-11 / police)
                                             :ARG2 (c8-8 / chief)))
                  :ARG1 (c8-10 / know-01
                               :ARG0 (c8-2 / officer
                                           :ARG0-of (c8-3 / shoot-02
                                                          :ARG1 (c8-1 / person
                                                                      :name (c8-5 / name
                                                                                  :op1 "Mike"
                                                                                  :op2 "Brown"))))
                               :ARG1 (c8-4 / rob-01
                                           :mod (c8-12 / any))
                               :polarity -)))

# ::snt Brown Knew? so you have already concluded that he's no longer the suspect but the perpetrator ?!
# ::tokens ["Brown", "Knew", "?", "so", "you", "have", "already", "concluded", "that", "he", "'s", "no", "longer", "the", "suspect", "but", "the", "perpetrator", "?", "!"]
# ::lemmas ["Brown", "know", "?", "so", "you", "have", "already", "conclude", "that", "he", "be", "no", "long", "the", "suspect", "but", "the", "perpetrator", "?", "!"]
(c9-10 / know-01
       :polarity (c9-12 / amr-unknown)
       :ARG0 (c9-6 / person
                   :name (c9-4 / name
                               :op1 "Brown"))
       :ARG0-of (c9-8 / cause-01
                      :ARG1 (c9-7 / conclude-01
                                  :ARG0 (c9-0 / you)
                                  :ARG1 (c9-9 / contrast-01
                                              :ARG1 (c9-11 / suspect-01
                                                           :ARG1 c9-6
                                                           :time (c9-5 / no-longer))
                                              :ARG2 (c9-2 / person
                                                          :ARG0-of (c9-1 / perpetrate-01)
                                                          :domain c9-6))
                                  :time (c9-3 / already))))

# ::snt : Police chief said officer who shot Brown didn't know about any robbery smh
# ::tokens [":", "Police", "chief", "said", "officer", "who", "shot", "Brown", "did", "n't", "know", "about", "any", "robbery", "smh"]
# ::lemmas [":", "police", "chief", "say", "officer", "who", "shoot", "Brown", "do", "not", "know", "about", "any", "robbery", "smh"]
(c10-9 / say-01
       :ARG0 (c10-6 / person
                    :ARG0-of (c10-0 / have-org-role-91
                                    :ARG1 (c10-11 / police)
                                    :ARG2 (c10-8 / chief)))
       :ARG1 (c10-10 / know-01
                     :ARG0 (c10-3 / officer
                                  :ARG0-of (c10-4 / shoot-02
                                                  :ARG1 (c10-2 / person
                                                               :name (c10-5 / name
                                                                            :op1 "Brown"))))
                     :ARG1 (c10-7 / rob-01
                                  :mod (c10-12 / any))
                     :polarity -)
       :mod (c10-1 / smh
                   :mode expressive))

# ::snt he did rob a store right?
# ::tokens ["he", "did", "rob", "a", "store", "right", "?"]
# ::lemmas ["he", "do", "rob", "a", "store", "right", "?"]
(c11-1 / rob-01
       :ARG0 (c11-0 / he)
       :ARG1 (c11-2 / store)
       :ARG1-of (c11-3 / request-confirmation-91))

# ::snt Why would you ask me that?
# ::tokens ["Why", "would", "you", "ask", "me", "that", "?"]
# ::lemmas ["why", "would", "you", "ask", "i", "that", "?"]
(c12-4 / ask-01
       :ARG0 (c12-0 / you)
       :ARG1 (c12-3 / that)
       :ARG2 (c12-2 / i)
       :purpose (c12-1 / amr-unknown))

# ::snt Police chief said officer who shot Brown didn't know about any robbery
# ::tokens ["Police", "chief", "said", "officer", "who", "shot", "Brown", "did", "n't", "know", "about", "any", "robbery"]
# ::lemmas ["police", "chief", "say", "officer", "who", "shoot", "Brown", "do", "not", "know", "about", "any", "robbery"]
(c13-8 / say-01
       :ARG0 (c13-5 / person
                    :ARG0-of (c13-0 / have-org-role-91
                                    :ARG1 (c13-10 / police)
                                    :ARG2 (c13-7 / chief)))
       :ARG1 (c13-9 / know-01
                    :ARG0 (c13-2 / officer
                                 :ARG0-of (c13-3 / shoot-02
                                                 :ARG1 (c13-1 / person
                                                              :name (c13-4 / name
                                                                           :op1 "Brown"))))
                    :ARG1 (c13-6 / rob-01
                                 :mod (c13-11 / any))
                    :polarity -))

# ::snt : Police chief said officer who shot Brown didn't know about any robbery &lt; WOW not surprised though
# ::tokens [":", "Police", "chief", "said", "officer", "who", "shot", "Brown", "did", "n't", "know", "about", "any", "robbery", "&", "lt", ";", "WOW", "not", "surprised", "though"]
# ::lemmas [":", "police", "chief", "say", "officer", "who", "shoot", "Brown", "do", "not", "know", "about", "any", "robbery", "&", "lt", ";", "WOW", "not", "surprise", "though"]
(c14-2 / multi-sentence
       :snt1 (c14-12 / say-01
                     :ARG0 (c14-9 / person
                                  :ARG0-of (c14-0 / have-org-role-91
                                                  :ARG1 (c14-15 / police)
                                                  :ARG2 (c14-11 / chief)))
                     :ARG1 (c14-14 / know-01
                                   :ARG0 (c14-5 / officer
                                                :ARG0-of (c14-6 / shoot-02
                                                                :ARG1 (c14-4 / person
                                                                             :name (c14-8 / name
                                                                                          :op1 "Brown"))))
                                   :ARG1 (c14-16 / about
                                                 :op1 (c14-10 / rob-01
                                                              :mod (c14-7 / any)))
                                   :polarity -))
       :snt2 (c14-1 / surprise-01
                    :ARG0 c14-1
                    :polarity -)
       :ARG1 (c14-13 / person)
       :ARG1-of (c14-3 / have-concession-91))

# ::snt Yeah he got shot for jaywalking...oh, yeah that's worse. Pffft. This only gets better and better. Let me get my boots.
# ::tokens ["Yeah", "he", "got", "shot", "for", "jaywalking", "...", "oh", ",", "yeah", "that", "'s", "worse", ".", "Pffft", ".", "This", "only", "gets", "better", "and", "better", ".", "Let", "me", "get", "my", "boots", "."]
# ::lemmas ["yeah", "he", "got", "shoot", "for", "jaywalking", "...", "oh", ",", "yeah", "that", "be", "bad", ".", "Pffft", ".", "this", "only", "get", "well", "and", "well", ".", "let", "i", "get", "my", "boot", "."]
(c15-1 / multi-sentence
       :snt1 (c15-6 / shoot-02
                    :ARG1 (c15-8 / he)
                    :ARG1-of (c15-19 / cause-01
                                     :ARG0 (c15-0 / jaywalk-00
                                                  :ARG0 c15-8))
                    :ARG1-of (c15-7 / have-degree-91
                                    :ARG2 (c15-11 / bad-07
                                                  :ARG1 c15-6)
                                    :ARG3 (c15-12 / more)
                                    :mod (c15-18 / oh
                                                 :mode expressive)))
       :snt2 (c15-4 / pffft
                    :mode expressive)
       :snt3 (c15-13 / get-03
                     :ARG1 (c15-20 / this)
                     :ARG2 (c15-3 / have-degree-91
                                  :ARG1 c15-20
                                  :ARG2 (c15-5 / good-02
                                               :ARG1 c15-20)
                                  :ARG3 (c15-9 / more))
                     :mod (c15-17 / only))
       :snt4 (c15-10 / let-01
                     :ARG0 (c15-16 / you)
                     :ARG1 (c15-2 / get-01
                                  :ARG0 (c15-14 / i)
                                  :ARG1 (c15-15 / boot
                                                :poss c15-14))
                     :mode imperative))

# ::snt : Police chief said officer who shot Brown didn't know about any robbery then why is it being brought up?
# ::tokens [":", "Police", "chief", "said", "officer", "who", "shot", "Brown", "did", "n't", "know", "about", "any", "robbery", "then", "why", "is", "it", "being", "brought", "up", "?"]
# ::lemmas [":", "police", "chief", "say", "officer", "who", "shoot", "Brown", "do", "not", "know", "about", "any", "robbery", "then", "why", "be", "it", "be", "bring", "up", "?"]
(c16-15 / and
        :op1 (c16-12 / say-01
                     :ARG0 (c16-8 / person
                                  :ARG0-of (c16-0 / have-org-role-91
                                                  :ARG1 (c16-14 / police)
                                                  :ARG2 (c16-10 / chief)))
                     :ARG1 (c16-13 / know-01
                                   :ARG0 (c16-3 / officer
                                                :ARG0-of (c16-4 / shoot-02
                                                                :ARG1 (c16-1 / person
                                                                             :name (c16-6 / name
                                                                                          :op1 "Brown"))))
                                   :ARG1 (c16-9 / rob-01
                                                :mod (c16-5 / any))
                                   :polarity -))
        :op2 (c16-2 / bring-up-02
                    :ARG1 c16-9
                    :ARG1-of (c16-11 / cause-01
                                     :ARG0 (c16-7 / amr-unknown))))

# ::snt -------&gt;&gt;&gt;&gt;&gt; RT : Police chief said officer who shot Brown didn't know about any robbery
# ::tokens ["-------&gt;&gt;&gt;&gt;&gt", ";", "RT", ":", "Police", "chief", "said", "officer", "who", "shot", "Brown", "did", "n't", "know", "about", "any", "robbery"]
# ::lemmas ["-------&gt;&gt;&gt;&gt;&gt", ";", "RT", ":", "Police", "chief", "say", "officer", "who", "shoot", "Brown", "do", "not", "know", "about", "any", "robbery"]
(c17-10 / say-01
        :ARG0 (c17-7 / person
                     :ARG0-of (c17-0 / have-org-role-91
                                     :ARG1 (c17-13 / police)
                                     :ARG2 (c17-9 / chief))
                     :ARG0-of c17-10
                     :ARG1 (c17-12 / know-01
                                   :ARG0 (c17-3 / officer
                                                :ARG0-of (c17-4 / shoot-02
                                                                :ARG1 (c17-2 / person
                                                                             :name (c17-6 / name
                                                                                          :op1 "Brown")))
                                                :ARG0-of (c17-14 / have-org-role-91
                                                                 :ARG1 c17-13
                                                                 :ARG2 c17-3))
                                   :polarity -)
                     :ARG1 (c17-8 / rob-01
                                  :mod (c17-11 / any)))
        :ARG1 (c17-5 / and
                     :op1 (c17-1 / string-entity
                                 :op2-of c17-5
                                 :value "-------")))

# ::snt : Police chief said officer who shot Brown didn't know about any robbery
# ::tokens [":", "Police", "chief", "said", "officer", "who", "shot", "Brown", "did", "n't", "know", "about", "any", "robbery"]
# ::lemmas [":", "police", "chief", "say", "officer", "who", "shoot", "Brown", "do", "not", "know", "about", "any", "robbery"]
(c18-8 / say-01
       :ARG0 (c18-5 / person
                    :ARG0-of (c18-0 / have-org-role-91
                                    :ARG1 (c18-10 / police)
                                    :ARG2 (c18-7 / chief)))
       :ARG1 (c18-9 / know-01
                    :ARG0 (c18-2 / officer
                                 :ARG0-of (c18-3 / shoot-02
                                                 :ARG1 (c18-1 / person
                                                              :name (c18-4 / name
                                                                           :op1 "Brown"))))
                    :ARG1 (c18-6 / rob-01
                                 :mod (c18-11 / any))
                    :polarity -))

# ::snt that's not the point.. Brown knew and probably thought the cop did too
# ::tokens ["that", "'s", "not", "the", "point", "..", "Brown", "knew", "and", "probably", "thought", "the", "cop", "did", "too"]
# ::lemmas ["that", "be", "not", "the", "point", "..", "Brown", "know", "and", "probably", "think", "the", "cop", "do", "too"]
(c19-0 / multi-sentence
       :snt1 (c19-5 / point-03
                    :ARG1 (c19-9 / that)
                    :polarity -)
       :snt2 (c19-11 / and
                     :op1 (c19-2 / know-01
                                 :ARG0 (c19-10 / person
                                               :name (c19-3 / name
                                                            :op1 "Brown"))
                                 :ARG1 (c19-6 / do-02
                                              :ARG0 (c19-7 / cop)
                                              :mod (c19-8 / too)))
                     :op2 (c19-1 / probable
                                 :domain (c19-4 / think-01
                                                :ARG0 c19-10
                                                :ARG1 c19-6))))
