# ::snt no he didn't do some research even the store owner denied it. His murder is unjustifiable so stop trying to justify it.
# ::tokens ["no", "he", "did", "n't", "do", "some", "research", "even", "the", "store", "owner", "denied", "it", ".", "His", "murder", "is", "unjustifiable", "so", "stop", "trying", "to", "justify", "it", "."]
# ::lemmas ["no", "he", "do", "not", "do", "some", "research", "even", "the", "store", "owner", "deny", "it", ".", "his", "murder", "be", "unjustifiable", "so", "stop", "try", "to", "justify", "it", "."]
(c1-4 / multi-sentence
      :snt1 (c1-10 / research-01
                   :ARG0 (c1-0 / he)
                   :quant (c1-14 / some)
                   :polarity -)
      :snt2 (c1-11 / deny-01
                   :ARG0 (c1-9 / person
                               :ARG0-of (c1-5 / own-01
                                              :ARG1 (c1-6 / store))
                               :mod (c1-7 / even))
                   :ARG1 (c1-8 / it))
      :snt3 (c1-12 / cause-01
                   :ARG0 (c1-16 / possible-01
                                :ARG1 (c1-1 / justify-01
                                            :ARG0 (c1-2 / you)
                                            :ARG1 (c1-13 / murder-01
                                                         :ARG0 (c1-17 / he)))
                                :polarity -)
                   :ARG1 (c1-3 / stop-01
                               :ARG0 c1-2
                               :ARG1 (c1-15 / try-01
                                            :ARG0 c1-2
                                            :ARG1 c1-1)
                               :mode imperative)))

# ::snt and the world lost a criminal....
# ::tokens ["and", "the", "world", "lost", "a", "criminal", "...."]
# ::lemmas ["and", "the", "world", "lose", "a", "criminal", "...."]
(c2-4 / and
      :op2 (c2-1 / lose-02
                 :ARG0 (c2-0 / world)
                 :ARG1 (c2-2 / person
                             :ARG2-of (c2-3 / criminal-03))))

# ::snt Good thing that did nothing wrong. Why did he attach the store clerk?
# ::tokens ["Good", "thing", "that", "did", "nothing", "wrong", ".", "Why", "did", "he", "attach", "the", "store", "clerk", "?"]
# ::lemmas ["good", "thing", "that", "do", "nothing", "wrong", ".", "why", "do", "he", "attach", "the", "store", "clerk", "?"]
(c3-2 / multi-sentence
      :snt1 (c3-11 / thing
                   :ARG1-of (c3-8 / good-02)
                   :ARG0-of (c3-6 / do-02
                                  :ARG1 (c3-12 / anything
                                               :ARG1-of (c3-1 / wrong-02))))
      :snt2 (c3-3 / attach-01
                  :ARG0 (c3-0 / he)
                  :ARG1 (c3-5 / person
                              :ARG0-of (c3-7 / clerk-01
                                             :ARG1 (c3-10 / store)))
                  :ARG1-of (c3-9 / cause-01
                                 :ARG0 (c3-4 / amr-unknown))))

# ::snt Baby pictures. Right on. Now show the pic of him grabbing the front of the shirt of the man half his size. Stop lying. Face in
# ::tokens ["Baby", "pictures", ".", "Right", "on", ".", "Now", "show", "the", "pic", "of", "him", "grabbing", "the", "front", "of", "the", "shirt", "of", "the", "man", "half", "his", "size", ".", "Stop", "lying", ".", "Face", "in"]
# ::lemmas ["baby", "picture", ".", "right", "on", ".", "now", "show", "the", "pic", "of", "he", "grab", "the", "front", "of", "the", "shirt", "of", "the", "man", "half", "his", "size", ".", "stop", "lie", ".", "face", "in"]
(c4-3 / multi-sentence
      :snt1 (c4-12 / picture-01
                   :ARG1 (c4-6 / baby))
      :snt2 (c4-7 / on-01
                  :mod (c4-13 / right))
      :snt3 (c4-16 / show-01
                   :ARG0 (c4-1 / you)
                   :ARG1 c4-12
                   :ARG1 (c4-15 / grab-01
                                :ARG0 (c4-0 / he)
                                :ARG1 (c4-2 / front
                                            :part-of (c4-9 / shirt
                                                           :poss (c4-14 / man
                                                                        :ARG1-of (c4-4 / size-01
                                                                                       :ARG2 (c4-17 / half))))))
                   :time (c4-11 / now)
                   :mode imperative)
      :snt4 (c4-8 / stop-01
                  :ARG0 c4-1
                  :ARG1 (c4-5 / lie-08
                              :ARG0 c4-1)
                  :mode imperative)
      :snt5 (c4-10 / face-in-00))

# ::snt clearly, you're an idiot. yeah, the cop is no doubt LYING about Mike going for his gun right? oh please
# ::tokens ["clearly", ",", "you", "'re", "an", "idiot", ".", "yeah", ",", "the", "cop", "is", "no", "doubt", "LYING", "about", "Mike", "going", "for", "his", "gun", "right", "?", "oh", "please"]
# ::lemmas ["clearly", ",", "you", "be", "an", "idiot", ".", "yeah", ",", "the", "cop", "be", "no", "doubt", "lie", "about", "Mike", "go", "for", "his", "gun", "right", "?", "oh", "please"]
(c5-2 / multi-sentence
      :snt1 (c5-4 / idiot
                  :domain (c5-0 / you)
                  :ARG1-of (c5-8 / clear-06))
      :snt2 (c5-7 / doubt-01
                  :ARG1 (c5-1 / lie-08
                              :ARG0 (c5-9 / cop)
                              :ARG3 (c5-10 / go-03
                                           :ARG0 (c5-6 / person
                                                       :name (c5-5 / name
                                                                   :op1 "Mike"))
                                           :ARG1 (c5-11 / gun
                                                        :poss c5-6)))
                  :mod (c5-13 / yeah)
                  :ARG1-of (c5-12 / request-confirmation-91)
                  :polarity -)
      :snt3 (c5-3 / oh
                  :mode expressive))

# ::snt are you so stupid that you cannot have a simple conversation with someone with out having it be an ad hominem argument.
# ::tokens ["are", "you", "so", "stupid", "that", "you", "can", "not", "have", "a", "simple", "conversation", "with", "someone", "with", "out", "having", "it", "be", "an", "ad", "hominem", "argument", "."]
# ::lemmas ["be", "you", "so", "stupid", "that", "you", "can", "not", "have", "a", "simple", "conversation", "with", "someone", "with", "out", "have", "it", "be", "an", "ad", "hominem", "argument", "."]
(c6-0 / have-degree-91
      :ARG1 (c6-1 / you)
      :ARG2 (c6-9 / stupid)
      :ARG3 (c6-4 / so)
      :ARG6 (c6-7 / possible-01
                  :ARG1 (c6-8 / converse-01
                              :ARG0 c6-1
                              :ARG2 (c6-2 / someone)
                              :ARG1-of (c6-3 / simple-02)
                              :manner (c6-11 / have-03
                                             :ARG0 c6-1
                                             :ARG1 (c6-10 / argument
                                                          :mod (c6-5 / ad-hominem))
                                             :polarity -))
                  :polarity -)
      :polarity (c6-6 / amr-unknown))

# ::snt and, people like you barely escaped retardation.
# ::tokens ["and", ",", "people", "like", "you", "barely", "escaped", "retardation", "."]
# ::lemmas ["and", ",", "people", "like", "you", "barely", "escape", "retardation", "."]
(c7-6 / and
      :op2 (c7-2 / escape-01
                 :ARG0 (c7-4 / person
                             :ARG1-of (c7-5 / resemble-01
                                            :ARG2 (c7-0 / you)))
                 :ARG1 (c7-3 / retard-01)
                 :degree (c7-1 / barely)))

# ::snt "Everybody in the community knows he wasn't a thug."
# ::tokens ["\"", "Everybody", "in", "the", "community", "knows", "he", "was", "n't", "a", "thug", ".", "\""]
# ::lemmas ["\"", "everybody", "in", "the", "community", "know", "he", "be", "not", "a", "thug", ".", "\""]
(c8-2 / know-01
      :ARG0 (c8-1 / everybody
                  :location (c8-3 / community))
      :ARG1 (c8-4 / thug
                  :domain (c8-0 / he)
                  :polarity -))

# ::snt except he didn't do that
# ::tokens ["except", "he", "did", "n't", "do", "that"]
# ::lemmas ["except", "he", "do", "not", "do", "that"]
(c9-1 / except-01
      :ARG1 (c9-2 / do-02
                  :ARG0 (c9-0 / he)
                  :ARG1 (c9-3 / that)
                  :polarity -))

# ::snt you forgot to mention the part where he robbed a store and manhandled the store clerk.
# ::tokens ["you", "forgot", "to", "mention", "the", "part", "where", "he", "robbed", "a", "store", "and", "manhandled", "the", "store", "clerk", "."]
# ::lemmas ["you", "forgot", "to", "mention", "the", "part", "where", "he", "rob", "a", "store", "and", "manhandle", "the", "store", "clerk", "."]
(c10-2 / forget-01
       :ARG0 (c10-1 / you)
       :ARG1 (c10-3 / mention-01
                    :ARG0 c10-1
                    :ARG1 (c10-4 / part
                                 :subevent (c10-10 / and
                                                   :op1 (c10-5 / rob-01
                                                               :ARG0 (c10-0 / he)
                                                               :ARG1 (c10-8 / store))
                                                   :op2 (c10-6 / manhandle-01
                                                               :ARG0 c10-0
                                                               :ARG1 (c10-9 / person
                                                                            :ARG0-of (c10-7 / clerk-01
                                                                                            :ARG1 c10-8)))))))

# ::snt Come on. Would this little fella grab for a cop's gun?
# ::tokens ["Come", "on", ".", "Would", "this", "little", "fella", "grab", "for", "a", "cop", "'s", "gun", "?"]
# ::lemmas ["come", "on", ".", "would", "this", "little", "fella", "grab", "for", "a", "cop", "'s", "gun", "?"]
(c11-2 / multi-sentence
       :snt1 (c11-5 / come-on-25
                    :ARG1 (c11-0 / you)
                    :mode imperative)
       :snt2 (c11-6 / grab-01
                    :ARG0 (c11-1 / fella
                                 :mod (c11-3 / little)
                                 :mod (c11-8 / this))
                    :ARG1 (c11-4 / gun
                                 :poss (c11-7 / cop))
                    :polarity (c11-9 / amr-unknown)))

# ::snt so sad
# ::tokens ["so", "sad"]
# ::lemmas ["so", "sad"]
(c12-0 / sad-02
       :degree (c12-1 / so))

# ::snt A criminal scumbag lost his life.
# ::tokens ["A", "criminal", "scumbag", "lost", "his", "life", "."]
# ::lemmas ["a", "criminal", "scumbag", "lose", "his", "life", "."]
(c13-0 / lose-02
       :ARG0 (c13-3 / scumbag
                    :ARG2-of (c13-1 / criminal-03))
       :ARG1 (c13-4 / thing
                    :ARG1-of (c13-2 / live-01
                                    :ARG0 c13-3)))

# ::snt TY SHARING..I HAVE SONS2!! . !!!
# ::tokens ["TY", "SHARING", "..", "I", "HAVE", "SONS2", "!", "!", ".", "!", "!", "!"]
# ::lemmas ["ty", "sharing", "..", "i", "have", "sons2", "!", "!", ".", "!", "!", "!"]
(c14-2 / multi-sentence
       :snt1 (c14-0 / share-01
                    :ARG0 (c14-3 / i)
                    :mode expressive)
       :snt2 (c14-1 / have-03
                    :ARG0 c14-3))

# ::snt Sign and share! Congress, Co-Sponsor Stop Militarizing Law Enforcement Act" By Rep.Hank Johnson GA
# ::tokens ["Sign", "and", "share", "!", "Congress", ",", "Co", "-", "Sponsor", "Stop", "Militarizing", "Law", "Enforcement", "Act", "\"", "By", "Rep.", "Hank", "Johnson", "GA"]
# ::lemmas ["sign", "and", "share", "!", "Congress", ",", "co", "-", "Sponsor", "stop", "Militarizing", "Law", "Enforcement", "Act", "\"", "by", "Rep.", "Hank", "Johnson", "GA"]
(c15-12 / and
        :op1 (c15-10 / sign-01
                     :ARG0 (c15-1 / you)
                     :ARG1 (c15-2 / law
                                  :name (c15-6 / name
                                               :op1 "Stop"
                                               :op2 "Militarizing"
                                               :op3 "Law"
                                               :op4 "Enforcement"
                                               :op5 "Act")
                                  :source (c15-8 / person
                                                 :name (c15-7 / name
                                                              :op1 "Hank"
                                                              :op2 "Johnson")
                                                 :ARG0-of (c15-0 / have-org-role-91
                                                                 :ARG1 (c15-11 / political-party
                                                                               :name (c15-9 / name
                                                                                            :op1 "Republican"))
                                                                 :ARG2 (c15-3 / member)))
                                  :ARG0-of (c15-5 / sponsor-01
                                                  :ARG1 c15-2))
                     :mode imperative)
        :op2 (c15-4 / share-01
                    :ARG0 c15-1
                    :ARG1 c15-2
                    :mode imperative))

# ::snt Thank you!
# ::tokens ["Thank", "you", "!"]
# ::lemmas ["thank", "you", "!"]
(c16-1 / thank-01
       :ARG0 (c16-2 / i)
       :ARG1 (c16-0 / you)
       :mode expressive)

# ::snt would that little fella rob a store and strong-arm clerk? oh yeah, that's right, he would!
# ::tokens ["would", "that", "little", "fella", "rob", "a", "store", "and", "strong", "-", "arm", "clerk", "?", "oh", "yeah", ",", "that", "'s", "right", ",", "he", "would", "!"]
# ::lemmas ["would", "that", "little", "fella", "rob", "a", "store", "and", "strong", "-", "arm", "clerk", "?", "oh", "yeah", ",", "that", "be", "right", ",", "he", "would", "!"]
(c18-2 / multi-sentence
       :snt1 (c18-9 / rob-01
                    :polarity (c18-12 / amr-unknown)
                    :ARG0 (c18-3 / fella
                                 :mod (c18-1 / little))
                    :ARG1 (c18-6 / and
                                 :op1 (c18-11 / store)
                                 :op2 (c18-10 / clerk
                                              :mod (c18-8 / arm
                                                          :ARG1-of (c18-5 / strong-02)))))
       :snt2 (c18-7 / right-06
                    :ARG2 (c18-0 / he)
                    :mod (c18-4 / oh-yeah
                                :mode expressive)))

# ::snt Clearly a capital offense.
# ::tokens ["Clearly", "a", "capital", "offense", "."]
# ::lemmas ["clearly", "a", "capital", "offense", "."]
(c19-0 / offend-03
       :mod (c19-2 / capital)
       :ARG1-of (c19-1 / clear-06))

# ::snt " How it feels to be a black man in America "
# ::tokens ["\"", "How", "it", "feels", "to", "be", "a", "black", "man", "in", "America", "\""]
# ::lemmas ["\"", "how", "it", "feel", "to", "be", "a", "black", "man", "in", "America", "\""]
(c20-0 / feel-05
       :ARG1 (c20-1 / man
                    :ARG1-of (c20-2 / black-05)
                    :location (c20-4 / country
                                     :name (c20-3 / name
                                                  :op1 "America")))
       :ARG2 (c20-5 / amr-unknown))

# ::snt Sign and share! Congress, Co-Sponsor Stop Militarizing Law Enforcement Act" By Rep.Hank Johnson GA
# ::tokens ["Sign", "and", "share", "!", "Congress", ",", "Co", "-", "Sponsor", "Stop", "Militarizing", "Law", "Enforcement", "Act", "\"", "By", "Rep.", "Hank", "Johnson", "GA"]
# ::lemmas ["sign", "and", "share", "!", "Congress", ",", "co", "-", "Sponsor", "stop", "Militarizing", "Law", "Enforcement", "Act", "\"", "by", "Rep.", "Hank", "Johnson", "GA"]
(c21-12 / and
        :op1 (c21-10 / sign-01
                     :ARG0 (c21-1 / you)
                     :ARG1 (c21-2 / law
                                  :name (c21-6 / name
                                               :op1 "Stop"
                                               :op2 "Militarizing"
                                               :op3 "Law"
                                               :op4 "Enforcement"
                                               :op5 "Act")
                                  :source (c21-8 / person
                                                 :name (c21-7 / name
                                                              :op1 "Hank"
                                                              :op2 "Johnson")
                                                 :ARG0-of (c21-0 / have-org-role-91
                                                                 :ARG1 (c21-11 / political-party
                                                                               :name (c21-9 / name
                                                                                            :op1 "Republican"))
                                                                 :ARG2 (c21-3 / member)))
                                  :ARG0-of (c21-5 / sponsor-01
                                                  :ARG1 c21-2))
                     :mode imperative)
        :op2 (c21-4 / share-01
                    :ARG0 c21-1
                    :ARG1 c21-2
                    :mode imperative))

# ::snt I have son. We know he was wrong, but he is someone's son regardless. He didn't deserve to die.
# ::tokens ["I", "have", "son", ".", "We", "know", "he", "was", "wrong", ",", "but", "he", "is", "someone", "'s", "son", "regardless", ".", "He", "did", "n't", "deserve", "to", "die", "."]
# ::lemmas ["i", "have", "son", ".", "we", "know", "he", "be", "wrong", ",", "but", "he", "be", "someone", "'s", "son", "regardless", ".", "he", "do", "not", "deserve", "to", "die", "."]
(c22-1 / multi-sentence
       :snt1 (c22-8 / have-03
                    :ARG0 (c22-13 / i)
                    :ARG1 (c22-4 / person
                                 :ARG0-of (c22-7 / have-rel-role-91
                                                 :ARG1 c22-13
                                                 :ARG2 (c22-6 / son))))
       :snt2 (c22-18 / contrast-01
                     :ARG1 (c22-15 / know-01
                                   :ARG0 (c22-12 / we)
                                   :ARG1 (c22-2 / wrong-04
                                                :ARG1 (c22-3 / he)))
                     :ARG2 (c22-14 / have-rel-role-91
                                   :ARG0 (c22-9 / someone)
                                   :ARG1 (c22-17 / he)
                                   :ARG2 (c22-16 / son)
                                   :ARG1-of (c22-10 / regardless-91)))
       :snt3 (c22-5 / deserve-01
                    :ARG0 (c22-11 / he)
                    :ARG1 (c22-0 / die-01
                                 :ARG1 c22-11)
                    :polarity -))

# ::snt Why are you showing this? The guy was a thug who hours earlier robbed a store. He then assaulted a cop. gtfo
# ::tokens ["Why", "are", "you", "showing", "this", "?", "The", "guy", "was", "a", "thug", "who", "hours", "earlier", "robbed", "a", "store", ".", "He", "then", "assaulted", "a", "cop", ".", "gtfo"]
# ::lemmas ["why", "be", "you", "show", "this", "?", "the", "guy", "be", "a", "thug", "who", "hour", "early", "rob", "a", "store", ".", "he", "then", "assault", "a", "cop", ".", "gtfo"]
(c23-0 / multi-sentence
       :snt1 (c23-18 / cause-01
                     :ARG0 (c23-5 / amr-unknown)
                     :ARG1 (c23-3 / show-01
                                  :ARG0 (c23-15 / you)
                                  :ARG1 (c23-20 / this)))
       :snt2 (c23-19 / thug
                     :domain (c23-12 / guy)
                     :ARG0-of (c23-11 / rob-01
                                      :ARG1 (c23-8 / store)
                                      :time (c23-7 / before
                                                   :op1 (c23-9 / now)
                                                   :quant (c23-10 / multiple
                                                                  :op1 (c23-14 / temporal-quantity
                                                                               :unit (c23-6 / hour)
                                                                               :quant 1)))))
       :snt3 (c23-13 / assault-01
                     :ARG0 (c23-4 / he)
                     :ARG1 (c23-2 / cop)
                     :time (c23-16 / then))
       :snt4 (c23-1 / person
                    :name (c23-17 / name
                                  :op1 "tfo")))

# ::snt A store attendant lost his trust in people. God help him too. And the police officer who was blind-sided.
# ::tokens ["A", "store", "attendant", "lost", "his", "trust", "in", "people", ".", "God", "help", "him", "too", ".", "And", "the", "police", "officer", "who", "was", "blind", "-", "sided", "."]
# ::lemmas ["a", "store", "attendant", "lose", "his", "trust", "in", "people", ".", "God", "help", "he", "too", ".", "and", "the", "police", "officer", "who", "be", "blind", "-", "sided", "."]
(c24-2 / multi-sentence
       :snt1 (c24-1 / lose-02
                    :ARG0 (c24-11 / person
                                  :ARG0-of (c24-17 / attend-01
                                                   :ARG1 (c24-13 / store)))
                    :ARG1 (c24-15 / trust-01
                                  :ARG0 c24-11
                                  :ARG1 (c24-16 / person)))
       :snt2 (c24-0 / help-01
                    :ARG0 (c24-4 / person
                                 :name (c24-9 / name
                                              :op1 "God"))
                    :ARG2 (c24-3 / he)
                    :mod (c24-12 / too))
       :snt3 (c24-8 / and
                    :op2 (c24-14 / person
                                 :ARG0-of (c24-10 / have-org-role-91
                                                  :ARG1 (c24-7 / police)
                                                  :ARG2 (c24-6 / officer))
                                 :ARG1-of (c24-5 / blindside-01))))

# ::snt you're dumb. your hero, Mike, struggled w/ the cop after a robbery. Mike would never do that though right?
# ::tokens ["you", "'re", "dumb", ".", "your", "hero", ",", "Mike", ",", "struggled", "w/", "the", "cop", "after", "a", "robbery", ".", "Mike", "would", "never", "do", "that", "though", "right", "?"]
# ::lemmas ["you", "be", "dumb", ".", "your", "hero", ",", "Mike", ",", "struggle", "w/", "the", "cop", "after", "a", "robbery", ".", "Mike", "would", "never", "do", "that", "though", "right", "?"]
(c26-3 / multi-sentence
       :snt1 (c26-8 / dumb
                    :domain (c26-1 / you))
       :snt2 (c26-12 / struggle-02
                     :ARG0 (c26-0 / hero
                                  :poss (c26-11 / you)
                                  :domain (c26-7 / person
                                                 :name (c26-6 / name
                                                              :op1 "Mike")))
                     :ARG1 (c26-9 / cop)
                     :time (c26-14 / after
                                   :op1 (c26-10 / rob-01
                                                :ARG0 c26-0)))
       :snt3 (c26-2 / do-02
                    :ARG0 c26-7
                    :name c26-6
                    :polarity -
                    :op1 "Mike")
       :ARG1 (c26-13 / that)
       :time (c26-4 / ever)
       :ARG1-of (c26-5 / request-confirmation-91))

# ::snt probably manhandled the cop just like he did to the store clerk. Cop was in fear if his life with a big guy like that.
# ::tokens ["probably", "manhandled", "the", "cop", "just", "like", "he", "did", "to", "the", "store", "clerk", ".", "Cop", "was", "in", "fear", "if", "his", "life", "with", "a", "big", "guy", "like", "that", "."]
# ::lemmas ["probably", "manhandle", "the", "cop", "just", "like", "he", "do", "to", "the", "store", "clerk", ".", "Cop", "be", "in", "fear", "if", "his", "life", "with", "a", "big", "guy", "like", "that", "."]
(c27-2 / multi-sentence
       :snt1 (c27-7 / manhandle-01
                    :ARG0 (c27-9 / cop)
                    :ARG1 (c27-8 / clerk
                                 :mod (c27-13 / store))
                    :mod (c27-10 / probable)
                    :ARG1-of (c27-11 / resemble-01
                                     :ARG2 (c27-1 / manhandle-01
                                                  :ARG0 c27-9
                                                  :ARG1 c27-8
                                                  :mod (c27-0 / just))))
       :snt2 (c27-3 / fear-01
                    :ARG0 (c27-12 / cop)
                    :condition (c27-4 / life
                                      :poss c27-12
                                      :accompanier (c27-14 / guy
                                                           :mod (c27-5 / big)
                                                           :ARG1-of (c27-6 / resemble-01
                                                                           :ARG2 (c27-15 / that))))))

# ::snt and a community lost a violent rampaging hostile resident
# ::tokens ["and", "a", "community", "lost", "a", "violent", "rampaging", "hostile", "resident"]
# ::lemmas ["and", "a", "community", "lose", "a", "violent", "rampage", "hostile", "resident"]
(c28-6 / and
       :op2 (c28-1 / lose-02
                   :ARG0 (c28-5 / community)
                   :ARG1 (c28-3 / person
                                :ARG0-of (c28-4 / reside-01)
                                :mod (c28-0 / hostile)
                                :ARG0-of (c28-2 / rampage-01))))

# ::snt . SHUT THE FUCK UP, YOU IGNORANT FOOL! yeah, CNN doctored the videotape, right? choke on your idiocy.
# ::tokens [".", "SHUT", "THE", "FUCK", "UP", ",", "YOU", "IGNORANT", "FOOL", "!", "yeah", ",", "CNN", "doctored", "the", "videotape", ",", "right", "?", "choke", "on", "your", "idiocy", "."]
# ::lemmas [".", "SHUT", "the", "FUCK", "up", ",", "you", "ignorant", "fool", "!", "yeah", ",", "CNN", "doctor", "the", "videotape", ",", "right", "?", "choke", "on", "your", "idiocy", "."]
(c29-2 / multi-sentence
       :snt1 (c29-13 / shut-up-06
                     :ARG0 (c29-0 / you
                                  :mod (c29-1 / FOOL
                                              :ARG1-of (c29-3 / ignorant-02))
                                  :ARG1-of c29-13)
                     :mod (c29-4 / fuck
                                 :mode expressive)
                     :mode imperative)
       :snt2 (c29-14 / and
                     :op1 (c29-8 / doctore-00
                                 :ARG0 (c29-7 / publication
                                              :name (c29-5 / name
                                                           :op1 "CNN"))
                                 :ARG1 (c29-6 / videotape))
                     :op2 (c29-9 / request-confirmation-91
                                 :ARG1 (c29-10 / choke-on-04
                                               :ARG0 (c29-12 / you)
                                               :ARG1 (c29-11 / idiocy
                                                             :poss c29-12)
                                               :mode imperative))))

# ::snt stupidity level exposed bye
# ::tokens ["stupidity", "level", "exposed", "bye"]
# ::lemmas ["stupidity", "level", "expose", "bye"]
(c30-1 / expose-01
       :ARG1 (c30-2 / level
                    :mod (c30-0 / stupid))
       :manner (c30-3 / bye))

# ::snt I can have a conversation with none idiots. but, you see, there's a problem when it comes to conversing with you. you are one.
# ::tokens ["I", "can", "have", "a", "conversation", "with", "none", "idiots", ".", "but", ",", "you", "see", ",", "there", "'s", "a", "problem", "when", "it", "comes", "to", "conversing", "with", "you", ".", "you", "are", "one", "."]
# ::lemmas ["i", "can", "have", "a", "conversation", "with", "none", "idiot", ".", "but", ",", "you", "see", ",", "there", "be", "a", "problem", "when", "it", "come", "to", "converse", "with", "you", ".", "you", "be", "one", "."]
(c31-6 / contrast-01
       :ARG1 (c31-4 / possible-01
                    :ARG1 (c31-5 / converse-01
                                 :ARG0 (c31-2 / i)
                                 :ARG2 (c31-7 / idiot
                                              :quant (c31-3 / none))))
       :ARG2 (c31-11 / and
                     :op1 (c31-10 / problem
                                  :topic (c31-9 / converse-01
                                                :ARG0 c31-2
                                                :ARG2 (c31-0 / you)))
                     :op2 (c31-1 / one
                                 :domain c31-0)
                     :mod (c31-8 / see-03
                                 :ARG0 c31-0)))

# ::snt Sign and share! Congress, Co-Sponsor Stop Militarizing Law Enforcement Act" By Rep.Hank Johnson GA
# ::tokens ["Sign", "and", "share", "!", "Congress", ",", "Co", "-", "Sponsor", "Stop", "Militarizing", "Law", "Enforcement", "Act", "\"", "By", "Rep.", "Hank", "Johnson", "GA"]
# ::lemmas ["sign", "and", "share", "!", "Congress", ",", "co", "-", "Sponsor", "stop", "Militarizing", "Law", "Enforcement", "Act", "\"", "by", "Rep.", "Hank", "Johnson", "GA"]
(c32-12 / and
        :op1 (c32-10 / sign-01
                     :ARG0 (c32-1 / you)
                     :ARG1 (c32-2 / law
                                  :name (c32-6 / name
                                               :op1 "Stop"
                                               :op2 "Militarizing"
                                               :op3 "Law"
                                               :op4 "Enforcement"
                                               :op5 "Act")
                                  :source (c32-8 / person
                                                 :name (c32-7 / name
                                                              :op1 "Hank"
                                                              :op2 "Johnson")
                                                 :ARG0-of (c32-0 / have-org-role-91
                                                                 :ARG1 (c32-11 / political-party
                                                                               :name (c32-9 / name
                                                                                            :op1 "Republican"))
                                                                 :ARG2 (c32-3 / member)))
                                  :ARG0-of (c32-5 / sponsor-01
                                                  :ARG1 c32-2))
                     :mode imperative)
        :op2 (c32-4 / share-01
                    :ARG0 c32-1
                    :ARG1 c32-2
                    :mode imperative))

# ::snt ur right, he didnt...cop will b found guilty of MURDER. not an IMMINENT threat. !
# ::tokens ["ur", "right", ",", "he", "didnt", "...", "cop", "will", "b", "found", "guilty", "of", "MURDER", ".", "not", "an", "IMMINENT", "threat", ".", "!"]
# ::lemmas ["ur", "right", ",", "he", "didnt", "...", "cop", "will", "b", "find", "guilty", "of", "MURDER", ".", "not", "an", "imminent", "threat", ".", "!"]
(c33-2 / multi-sentence
       :snt1 (c33-5 / right-06
                    :ARG1 (c33-0 / he))
       :snt2 (c33-6 / contrast-01
                    :ARG1 (c33-1 / find-02
                                 :ARG1 (c33-7 / guilty-01
                                              :ARG1 (c33-8 / cop)
                                              :ARG2 (c33-4 / murder-01)))
                    :ARG2 (c33-9 / threaten-01
                                 :ARG1-of (c33-3 / minimal-02)
                                 :polarity -)))

# ::snt YOU = MORON
# ::tokens ["YOU", "=", "MORON"]
# ::lemmas ["you", "=", "moron"]
(c34-1 / equal-01
       :ARG1 (c34-0 / you)
       :ARG2 (c34-2 / moron))

# ::snt Thank you for noting the most important part of this tragedy. Prayers for the family.
# ::tokens ["Thank", "you", "for", "noting", "the", "most", "important", "part", "of", "this", "tragedy", ".", "Prayers", "for", "the", "family", "."]
# ::lemmas ["thank", "you", "for", "note", "the", "most", "important", "part", "of", "this", "tragedy", ".", "prayer", "for", "the", "family", "."]
(c35-3 / multi-sentence
       :snt1 (c35-10 / thank-01
                     :ARG1 (c35-1 / you)
                     :ARG2 (c35-5 / note-01
                                  :ARG0 c35-1
                                  :ARG1 (c35-7 / part
                                               :part-of (c35-9 / tragedy
                                                               :mod (c35-6 / this))
                                               :ARG1-of (c35-0 / have-degree-91
                                                               :ARG2 (c35-4 / important-01
                                                                            :ARG1 c35-7)
                                                               :ARG3 (c35-8 / most)))))
       :snt2 (c35-11 / Pray-01
                     :ARG1 (c35-2 / family)))

# ::snt I know racist &amp; gun nuts THINK u can kill at will but u cant..Must b an IMMINENT threat.
# ::tokens ["I", "know", "racist", "&", "amp", ";", "gun", "nuts", "THINK", "u", "can", "kill", "at", "will", "but", "u", "cant", "..", "Must", "b", "an", "IMMINENT", "threat", "."]
# ::lemmas ["i", "know", "racist", "&", "amp", ";", "gun", "nuts", "think", "u", "can", "kill", "at", "will", "but", "u", "cant", "..", "must", "b", "an", "imminent", "threat", "."]
(c36-0 / multi-sentence
       :snt1 (c36-12 / know-01
                     :ARG0 (c36-10 / i)
                     :ARG1 (c36-18 / think-01
                                   :ARG0 (c36-3 / and
                                                :op1 (c36-6 / racist)
                                                :op2 (c36-1 / person
                                                            :name (c36-5 / name
                                                                         :op1 "amp"))
                                                :mod (c36-14 / nuts
                                                             :topic (c36-7 / gun)))
                                   :ARG1 (c36-2 / possible-01
                                                :ARG1 (c36-8 / kill-01
                                                             :ARG0 c36-3
                                                             :mod (c36-9 / at-will))
                                                :ARG1-of (c36-15 / contrast-01
                                                                 :ARG2 (c36-4 / possible-01
                                                                              :ARG1 (c36-17 / kill-01
                                                                                            :ARG0 c36-3
                                                                                            :mod c36-9)
                                                                              :polarity -)))))
       :snt2 (c36-13 / obligate-01
                     :ARG2 (c36-16 / threaten-01
                                   :ARG1-of (c36-11 / intend-01))))

# ::snt people like you are a threat to society
# ::tokens ["people", "like", "you", "are", "a", "threat", "to", "society"]
# ::lemmas ["people", "like", "you", "be", "a", "threat", "to", "society"]
(c37-4 / threaten-01
       :ARG0 (c37-1 / person
                    :ARG1-of (c37-2 / resemble-01
                                    :ARG2 (c37-0 / you)))
       :ARG2 (c37-3 / society))

# ::snt was he executed? I haven't see an investigation report yet.
# ::tokens ["was", "he", "executed", "?", "I", "have", "n't", "see", "an", "investigation", "report", "yet", "."]
# ::lemmas ["be", "he", "execute", "?", "i", "have", "not", "see", "an", "investigation", "report", "yet", "."]
(c38-2 / multi-sentence
       :snt1 (c38-3 / execute-01
                    :polarity (c38-8 / amr-unknown)
                    :ARG1 (c38-0 / he))
       :snt2 (c38-7 / see-01
                    :ARG0 (c38-4 / i)
                    :ARG1 (c38-5 / report-01
                                 :ARG1 (c38-6 / investigate-01))
                    :time (c38-1 / yet)
                    :polarity -))

# ::snt and yes this was a tragedy. Nobody deserve to die for cigars
# ::tokens ["and", "yes", "this", "was", "a", "tragedy", ".", "Nobody", "deserve", "to", "die", "for", "cigars"]
# ::lemmas ["and", "yes", "this", "be", "a", "tragedy", ".", "nobody", "deserve", "to", "die", "for", "cigar"]
(c39-1 / multi-sentence
       :snt1 (c39-7 / and
                    :op2 (c39-6 / tragedy
                                :domain (c39-5 / this)))
       :snt2 (c39-3 / deserve-01
                    :ARG0 (c39-2 / nobody)
                    :ARG1 (c39-0 / die-01
                                 :ARG1 c39-2
                                 :purpose (c39-4 / cigar))))

# ::snt What an awesome collage of pictures of a wonderful young man...thank you for this! Media will never show these!
# ::tokens ["What", "an", "awesome", "collage", "of", "pictures", "of", "a", "wonderful", "young", "man", "...", "thank", "you", "for", "this", "!", "Media", "will", "never", "show", "these", "!"]
# ::lemmas ["what", "an", "awesome", "collage", "of", "picture", "of", "a", "wonderful", "young", "man", "...", "thank", "you", "for", "this", "!", "medium", "will", "never", "show", "these", "!"]
(c40-3 / multi-sentence
       :snt1 (c40-10 / collage
                     :ARG0-of (c40-15 / awe-01
                                      :degree (c40-12 / so))
                     :consist-of (c40-8 / picture
                                        :topic (c40-9 / man
                                                      :mod (c40-0 / young)
                                                      :ARG1-of (c40-1 / wonderful-03))))
       :snt2 (c40-14 / thank-01
                     :ARG0 (c40-6 / i)
                     :ARG1 (c40-11 / you)
                     :ARG2 (c40-13 / this))
       :snt3 (c40-4 / show-01
                    :ARG0 (c40-2 / media)
                    :ARG1 (c40-7 / this)
                    :time (c40-5 / ever)
                    :polarity -))

# ::snt All caps response = nut job
# ::tokens ["All", "caps", "response", "=", "nut", "job"]
# ::lemmas ["all", "cap", "response", "=", "nut", "job"]
(c41-1 / equal-01
       :ARG1 (c41-3 / respond-01
                    :mod (c41-4 / cap
                                :mod (c41-5 / all)))
       :ARG2 (c41-0 / job
                    :mod (c41-2 / nut)))

# ::snt Bullshit the store owner got manhandled by . Deny that or not it still happened.
# ::tokens ["Bullshit", "the", "store", "owner", "got", "manhandled", "by", ".", "Deny", "that", "or", "not", "it", "still", "happened", "."]
# ::lemmas ["bullshit", "the", "store", "owner", "got", "manhandle", "by", ".", "deny", "that", "or", "not", "it", "still", "happen", "."]
(c42-3 / multi-sentence
       :snt1 (c42-4 / bullshit-01
                    :ARG1 (c42-7 / manhandle-01
                                 :ARG0 (c42-8 / person
                                              :ARG0-of (c42-5 / own-01
                                                              :ARG1 (c42-10 / store))
                                              :ARG1-of c42-7)))
       :snt2 (c42-2 / or
                    :op1 (c42-9 / deny-01
                                :ARG0 (c42-0 / you)
                                :ARG1 (c42-11 / that))
                    :op2 (c42-1 / deny-01
                                :ARG0 c42-0
                                :ARG1 c42-7
                                :mod (c42-6 / still)
                                :polarity -)))

# ::snt . It IS possible that there were multiple wrongs here, of course.
# ::tokens [".", "It", "IS", "possible", "that", "there", "were", "multiple", "wrongs", "here", ",", "of", "course", "."]
# ::lemmas [".", "it", "be", "possible", "that", "there", "be", "multiple", "wrong", "here", ",", "of", "course", "."]
(c44-4 / possible-01
       :ARG1 (c44-1 / wrong-04
                    :quant (c44-2 / multiple)
                    :location (c44-0 / here))
       :mod (c44-3 / of-course))

# ::snt A mother lost her child. A father lost his son. A young man lost his life.
# ::tokens ["A", "mother", "lost", "her", "child", ".", "A", "father", "lost", "his", "son", ".", "A", "young", "man", "lost", "his", "life", "."]
# ::lemmas ["a", "mother", "lose", "her", "child", ".", "a", "father", "lose", "his", "son", ".", "a", "young", "man", "lose", "his", "life", "."]
(c45-1 / multi-sentence
       :snt1 (c45-9 / lose-02
                    :ARG0 (c45-3 / person
                                 :ARG0-of (c45-8 / have-rel-role-91
                                                 :ARG1 (c45-5 / person
                                                              :ARG0-of (c45-7 / have-rel-role-91
                                                                              :ARG2 (c45-13 / mother)))
                                                 :ARG2 (c45-17 / child)))
                    :ARG1 c45-5)
       :snt2 (c45-18 / lose-02
                     :ARG0 (c45-12 / person
                                   :ARG0-of (c45-2 / have-rel-role-91
                                                   :ARG1 (c45-14 / person
                                                                 :ARG0-of (c45-15 / have-rel-role-91
                                                                                  :ARG1 c45-12
                                                                                  :ARG2 (c45-10 / father)))
                                                   :ARG2 (c45-4 / son)))
                     :ARG1 c45-14)
       :snt3 (c45-0 / lose-02
                    :ARG0 (c45-11 / man
                                  :mod (c45-16 / young))
                    :ARG1 (c45-6 / life
                                 :poss c45-11)))

# ::snt time will tell.
# ::tokens ["time", "will", "tell", "."]
# ::lemmas ["time", "will", "tell", "."]
(c46-0 / tell-01
       :ARG0 (c46-1 / time))

# ::snt if thats the case he's ARRESTED not executed n the streets. Guess cigars worth a life u?
# ::tokens ["if", "that", "s", "the", "case", "he", "'s", "ARRESTED", "not", "executed", "n", "the", "streets", ".", "Guess", "cigars", "worth", "a", "life", "u", "?"]
# ::lemmas ["if", "that", "s", "the", "case", "he", "be", "arrest", "not", "execute", "n", "the", "street", ".", "guess", "cigar", "worth", "a", "life", "u", "?"]
(c47-4 / multi-sentence
       :snt1 (c47-0 / have-condition-91
                    :ARG1 (c47-5 / execute-01
                                 :ARG1 (c47-11 / he)
                                 :location (c47-8 / street)
                                 :polarity -)
                    :ARG2 (c47-10 / that))
       :snt2 (c47-7 / guess-01
                    :ARG0 (c47-1 / you)
                    :ARG1 (c47-6 / cigar
                                 :ARG1-of (c47-2 / worth-01
                                                 :ARG2 (c47-3 / life)))
                    :polarity (c47-9 / amr-unknown)))
