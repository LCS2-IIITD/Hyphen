# ::snt yea because nothing says freedom like a racist POTUS who throws a tantrum because he didn't get candy
# ::tokens ["yea", "because", "nothing", "says", "freedom", "like", "a", "racist", "POTUS", "who", "throws", "a", "tantrum", "because", "he", "did", "n't", "get", "candy"]
# ::lemmas ["yea", "because", "nothing", "say", "freedom", "like", "a", "racist", "POTUS", "who", "throw", "a", "tantrum", "because", "he", "do", "not", "get", "candy"]
(c1-8 / cause-01
      :ARG0 (c1-12 / say-01
                   :ARG0 (c1-4 / nothing)
                   :ARG1 (c1-2 / free-04)
                   :ARG1-of (c1-7 / resemble-01
                                  :ARG2 (c1-14 / throw-01
                                               :ARG0 (c1-6 / person
                                                           :ARG0-of (c1-0 / have-org-role-91
                                                                          :ARG1 (c1-9 / country
                                                                                      :name (c1-5 / name
                                                                                                  :op1 "United"
                                                                                                  :op2 "States"))
                                                                          :ARG2 (c1-15 / president))
                                                           :mod (c1-3 / racist))
                                               :ARG1 (c1-11 / tantrum)
                                               :ARG1-of (c1-13 / cause-01
                                                               :ARG0 (c1-10 / get-01
                                                                            :ARG0 c1-6
                                                                            :ARG1 (c1-16 / candy)
                                                                            :polarity -))))
                   :polarity -)
      :ARG1 (c1-1 / yea))

# ::snt I think if we wait for the facts, the truth will come out. But that doesn't work for some peoeple
# ::tokens ["I", "think", "if", "we", "wait", "for", "the", "facts", ",", "the", "truth", "will", "come", "out", ".", "But", "that", "does", "n't", "work", "for", "some", "peoeple"]
# ::lemmas ["i", "think", "if", "we", "wait", "for", "the", "fact", ",", "the", "truth", "will", "come", "out", ".", "but", "that", "do", "not", "work", "for", "some", "peoeple"]
(c2-2 / multi-sentence
      :snt1 (c2-12 / think-01
                   :ARG0 (c2-4 / i)
                   :ARG1 (c2-9 / come-out-09
                               :ARG1 (c2-10 / truth)
                               :condition (c2-0 / wait-01
                                                :ARG1 (c2-5 / we)
                                                :ARG2 (c2-1 / fact))))
      :snt2 (c2-8 / contrast-01
                  :ARG2 (c2-3 / work-09
                              :ARG1 (c2-6 / that)
                              :ARG2 (c2-7 / peoeple
                                          :mod (c2-11 / some))
                              :polarity -)))

# ::snt Police should only release information that meets the narrative.
# ::tokens ["Police", "should", "only", "release", "information", "that", "meets", "the", "narrative", "."]
# ::lemmas ["police", "should", "only", "release", "information", "that", "meet", "the", "narrative", "."]
(c3-6 / recommend-01
      :ARG1 (c3-3 / release-01
                  :ARG0 (c3-5 / police)
                  :ARG1 (c3-2 / information
                              :ARG0-of (c3-0 / meet-01
                                             :ARG1 (c3-4 / narrate-01)))
                  :mod (c3-1 / only)))

# ::snt you assume that seeing one black teen in a video means any black teen is suspect?
# ::tokens ["you", "assume", "that", "seeing", "one", "black", "teen", "in", "a", "video", "means", "any", "black", "teen", "is", "suspect", "?"]
# ::lemmas ["you", "assume", "that", "see", "one", "black", "teen", "in", "a", "video", "mean", "any", "black", "teen", "be", "suspect", "?"]
(c4-11 / assume-02
       :polarity (c4-4 / amr-unknown)
       :ARG0 (c4-0 / you)
       :ARG1 (c4-1 / mean-01
                   :ARG1 (c4-9 / see-01
                               :ARG0 c4-0
                               :ARG1 (c4-10 / teen
                                            :ARG1-of (c4-2 / black-05)
                                            :quant 1)
                               :medium (c4-5 / video))
                   :ARG2 (c4-3 / suspect-01
                               :ARG2 (c4-8 / teen
                                           :mod (c4-6 / any)
                                           :ARG1-of (c4-7 / black-05)))))

# ::snt if you don't want to be a threat to the cops, don't act like a threat. They're just trying to get home too.
# ::tokens ["if", "you", "do", "n't", "want", "to", "be", "a", "threat", "to", "the", "cops", ",", "do", "n't", "act", "like", "a", "threat", ".", "They", "'re", "just", "trying", "to", "get", "home", "too", "."]
# ::lemmas ["if", "you", "do", "not", "want", "to", "be", "a", "threat", "to", "the", "cop", ",", "do", "not", "act", "like", "a", "threat", ".", "they", "be", "just", "try", "to", "get", "home", "too", "."]
(c5-4 / multi-sentence
      :snt1 (c5-12 / act-01
                   :ARG0 (c5-1 / you)
                   :ARG1 (c5-11 / threaten-01
                                :ARG0 c5-1
                                :ARG2 (c5-8 / cop))
                   :condition (c5-2 / want-01
                                    :ARG0 c5-1
                                    :ARG1 (c5-10 / threaten-01
                                                 :ARG0 c5-1
                                                 :ARG2 c5-8)
                                    :polarity -)
                   :polarity -
                   :mode imperative)
      :snt2 (c5-7 / try-01
                  :ARG0 (c5-5 / they)
                  :ARG1 (c5-9 / get-05
                              :ARG1 c5-5
                              :ARG2 (c5-0 / home)
                              :mod (c5-6 / too))
                  :mod (c5-3 / just)))

# ::snt um are you blind
# ::tokens ["um", "are", "you", "blind"]
# ::lemmas ["um", "be", "you", "blind"]
(c6-2 / blind-02
      :polarity (c6-1 / amr-unknown)
      :ARG1 (c6-0 / you))

# ::snt And now we learn that the cop wasn't even aware of a robbery when he stopped Brown. Oy.
# ::tokens ["And", "now", "we", "learn", "that", "the", "cop", "was", "n't", "even", "aware", "of", "a", "robbery", "when", "he", "stopped", "Brown", ".", "Oy", "."]
# ::lemmas ["and", "now", "we", "learn", "that", "the", "cop", "be", "not", "even", "aware", "of", "a", "robbery", "when", "he", "stop", "Brown", ".", "Oy", "."]
(c7-2 / multi-sentence
      :snt1 (c7-12 / and
                   :op2 (c7-1 / learn-01
                              :ARG0 (c7-0 / we)
                              :ARG1 (c7-9 / realize-01
                                          :ARG0 (c7-10 / cop)
                                          :ARG1 (c7-5 / rob-01)
                                          :mod (c7-4 / even)
                                          :time (c7-11 / stop-01
                                                       :ARG0 c7-10
                                                       :ARG1 (c7-8 / person
                                                                   :name (c7-6 / name
                                                                               :op1 "Brown")))
                                          :polarity -)
                              :time (c7-7 / now)))
      :snt2 (c7-3 / oy
                  :mode expressive))

# ::snt That's what is wrong with the country, people take no responsibility for their own actions. Seemed like an 'innocent" kid
# ::tokens ["That", "'s", "what", "is", "wrong", "with", "the", "country", ",", "people", "take", "no", "responsibility", "for", "their", "own", "actions", ".", "Seemed", "like", "an", "'", "innocent", "\"", "kid"]
# ::lemmas ["that", "be", "what", "be", "wrong", "with", "the", "country", ",", "people", "take", "no", "responsibility", "for", "their", "own", "action", ".", "seem", "like", "an", "'", "innocent", "\"", "kid"]
(c8-1 / multi-sentence
      :snt1 (c8-0 / wrong-02
                  :ARG1 (c8-8 / that)
                  :ARG2 (c8-6 / country))
      :snt2 (c8-5 / responsible-01
                  :ARG0 (c8-4 / person)
                  :ARG1 (c8-9 / act-02
                              :ARG0 c8-4)
                  :polarity -)
      :snt3 (c8-7 / seem-01
                  :ARG1 (c8-3 / kid
                              :ARG1-of (c8-2 / innocent-01))))

# ::snt you have no idea who that is. are you really this sick?
# ::tokens ["you", "have", "no", "idea", "who", "that", "is", ".", "are", "you", "really", "this", "sick", "?"]
# ::lemmas ["you", "have", "no", "idea", "who", "that", "be", ".", "be", "you", "really", "this", "sick", "?"]
(c9-2 / multi-sentence
      :snt1 (c9-0 / have-03
                  :ARG0 (c9-1 / you)
                  :ARG1 (c9-3 / idea
                              :topic (c9-4 / person
                                           :domain (c9-9 / that)))
                  :polarity -)
      :snt2 (c9-7 / sick-02
                  :polarity (c9-10 / amr-unknown)
                  :ARG1 (c9-6 / you)
                  :degree (c9-8 / this)
                  :ARG1-of (c9-5 / real-04)))

# ::snt But Brown was aware of it.
# ::tokens ["But", "Brown", "was", "aware", "of", "it", "."]
# ::lemmas ["but", "Brown", "be", "aware", "of", "it", "."]
(c10-4 / contrast-01
       :ARG2 (c10-3 / realize-01
                    :ARG0 (c10-2 / person
                                 :name (c10-1 / name
                                              :op1 "Brown"))
                    :ARG1 (c10-0 / it)))

# ::snt you are blocked &amp; reported ass-wipe. followers haha
# ::tokens ["you", "are", "blocked", "&", "amp", ";", "reported", "ass", "-", "wipe", ".", "followers", "haha"]
# ::lemmas ["you", "be", "block", "&", "amp", ";", "report", "ass", "-", "wipe", ".", "follower", "haha"]
(c11-3 / multi-sentence
       :snt1 (c11-8 / and
                    :op1 (c11-4 / block-01
                                :ARG1 (c11-1 / you))
                    :op2 (c11-5 / affect-01
                                :ARG1 c11-1))
       :snt2 (c11-7 / report-01
                    :ARG1 (c11-6 / asswipe
                                 :ARG0-of (c11-2 / follow-01)))
       :snt3 (c11-0 / haha
                    :mode expressive))

# ::snt You don't know them very well . .
# ::tokens ["You", "do", "n't", "know", "them", "very", "well", ".", "."]
# ::lemmas ["you", "do", "not", "know", "they", "very", "well", ".", "."]
(c12-2 / know-02
       :ARG0 (c12-0 / you)
       :ARG1 (c12-4 / they)
       :degree (c12-1 / well
                      :degree (c12-3 / very))
       :polarity -)

# ::snt He was not attacking when he was shot in the back... or was he? Da daah daaaaaah
# ::tokens ["He", "was", "not", "attacking", "when", "he", "was", "shot", "in", "the", "back", "...", "or", "was", "he", "?", "Da", "daah", "daaaaaah"]
# ::lemmas ["he", "be", "not", "attack", "when", "he", "be", "shoot", "in", "the", "back", "...", "or", "be", "he", "?", "Da", "daah", "daaaaaah"]
(c13-2 / multi-sentence
       :snt1 (c13-7 / attack-01
                    :ARG0 (c13-0 / he)
                    :time (c13-6 / shoot-02
                                 :ARG1 (c13-8 / he)
                                 :location (c13-3 / back))
                    :ARG1-of (c13-4 / request-confirmation-91)
                    :polarity -)
       :snt2 (c13-5 / da
                    :mod (c13-1 / da
                                :mode expressive)
                    :mode expressive))

# ::snt I agree it's a diversion
# ::tokens ["I", "agree", "it", "'s", "a", "diversion"]
# ::lemmas ["i", "agree", "it", "be", "a", "diversion"]
(c14-3 / agree-01
       :ARG0 (c14-2 / i)
       :ARG1 (c14-0 / divert-01
                    :ARG0 (c14-1 / it)))

# ::snt then you'll wish you had people like me willing to fight for pussies like you who think gov't is the answer
# ::tokens ["then", "you", "'ll", "wish", "you", "had", "people", "like", "me", "willing", "to", "fight", "for", "pussies", "like", "you", "who", "think", "gov't", "is", "the", "answer"]
# ::lemmas ["then", "you", "'ll", "wish", "you", "have", "people", "like", "i", "willing", "to", "fight", "for", "pussy", "like", "you", "who", "think", "gov't", "be", "the", "answer"]
(c15-1 / wish-01
       :ARG0 (c15-2 / you)
       :ARG1 (c15-0 / have-03
                    :ARG0 c15-2
                    :ARG1 (c15-7 / person
                                 :ARG1-of (c15-8 / resemble-01
                                                 :ARG2 (c15-4 / i))
                                 :ARG0-of (c15-5 / will-02
                                                 :ARG1 (c15-3 / fight-01
                                                              :ARG0 c15-7
                                                              :beneficiary (c15-13 / pussy
                                                                                   :ARG1-of (c15-6 / resemble-01
                                                                                                   :ARG2 c15-2)
                                                                                   :ARG0-of (c15-12 / think-01
                                                                                                    :ARG1 (c15-10 / government-organization
                                                                                                                  :ARG0-of (c15-9 / govern-01)
                                                                                                                  :ARG2-of (c15-14 / answer-01))))))))
       :time (c15-11 / then))

# ::snt I'd like to know the point of releasing the cops name. To make him and his family a target for the "compassionate left"?
# ::tokens ["I", "'d", "like", "to", "know", "the", "point", "of", "releasing", "the", "cops", "name", ".", "To", "make", "him", "and", "his", "family", "a", "target", "for", "the", "\"", "compassionate", "left", "\"", "?"]
# ::lemmas ["i", "would", "like", "to", "know", "the", "point", "of", "release", "the", "cop", "name", ".", "to", "make", "he", "and", "his", "family", "a", "target", "for", "the", "\"", "compassionate", "left", "\"", "?"]
(c16-2 / multi-sentence
       :snt1 (c16-1 / like-02
                    :ARG0 (c16-5 / i)
                    :ARG1 (c16-13 / know-01
                                  :ARG0 c16-5
                                  :ARG1 (c16-7 / point-03
                                               :ARG1 (c16-8 / release-01
                                                            :ARG1 (c16-6 / name
                                                                         :poss (c16-9 / cop))))))
       :snt2 (c16-12 / target-01
                     :ARG0 (c16-11 / left-19
                                   :mod (c16-10 / compassion))
                     :ARG1 (c16-14 / and
                                   :op1 (c16-0 / he)
                                   :op2 (c16-3 / family
                                               :poss c16-0))
                     :polarity (c16-4 / amr-unknown)))

# ::snt That he was stopped for being in the street. Not robbery. So yeah he was murdered. No justification
# ::tokens ["That", "he", "was", "stopped", "for", "being", "in", "the", "street", ".", "Not", "robbery", ".", "So", "yeah", "he", "was", "murdered", ".", "No", "justification"]
# ::lemmas ["that", "he", "be", "stop", "for", "be", "in", "the", "street", ".", "not", "robbery", ".", "so", "yeah", "he", "be", "murder", ".", "no", "justification"]
(c17-2 / multi-sentence
       :snt1 (c17-9 / stop-01
                    :ARG1 (c17-0 / he)
                    :ARG1-of (c17-8 / cause-01
                                    :ARG0 (c17-3 / be-located-at-91
                                                 :ARG1 c17-0
                                                 :ARG2 (c17-4 / street))))
       :snt2 (c17-7 / rob-01
                    :polarity -)
       :snt3 (c17-5 / infer-01
                    :ARG1 (c17-6 / murder-01
                                 :ARG1 (c17-10 / he)))
       :snt4 (c17-1 / justify-01
                    :polarity -))

# ::snt Don't be disingenuous. What they released today was some bullshit and most everyone knows that.
# ::tokens ["Do", "n't", "be", "disingenuous", ".", "What", "they", "released", "today", "was", "some", "bullshit", "and", "most", "everyone", "knows", "that", "."]
# ::lemmas ["do", "not", "be", "disingenuous", ".", "what", "they", "release", "today", "be", "some", "bullshit", "and", "most", "everyone", "know", "that", "."]
(c18-1 / multi-sentence
       :snt1 (c18-7 / disingenuous
                    :domain (c18-0 / you)
                    :polarity -
                    :mode imperative)
       :snt2 (c18-12 / and
                     :op1 (c18-2 / bullshit
                                 :domain (c18-11 / thing
                                                 :ARG1-of (c18-8 / release-01
                                                                 :ARG0 (c18-9 / they)
                                                                 :time (c18-5 / today)))
                                 :mod (c18-10 / some))
                     :op2 (c18-4 / know-01
                                 :ARG0 (c18-3 / everyone
                                              :quant (c18-6 / most))
                                 :ARG1 c18-2)))

# ::snt Ahh, Obama's America
# ::tokens ["Ahh", ",", "Obama", "'s", "America"]
# ::lemmas ["Ahh", ",", "Obama", "'s", "America"]
(c19-3 / country
       :name (c19-0 / name
                    :op1 "America")
       :poss (c19-2 / person
                    :name (c19-1 / name
                                 :op1 "Obama"))
       :mod (c19-4 / ah
                   :mode expressive))

# ::snt Having it both ways not issue. is not getting benefit of due process that we will all be urged to give his shooter
# ::tokens ["Having", "it", "both", "ways", "not", "issue", ".", "is", "not", "getting", "benefit", "of", "due", "process", "that", "we", "will", "all", "be", "urged", "to", "give", "his", "shooter"]
# ::lemmas ["have", "it", "both", "way", "not", "issue", ".", "be", "not", "get", "benefit", "of", "due", "process", "that", "we", "will", "all", "be", "urge", "to", "give", "his", "shooter"]
(c20-3 / multi-sentence
       :snt1 (c20-6 / issue-02
                    :ARG0 (c20-0 / have-03
                                 :ARG1 (c20-11 / it
                                               :manner (c20-1 / way
                                                              :mod (c20-5 / both))))
                    :polarity -)
       :snt2 (c20-12 / get-01
                     :ARG0 (c20-7 / we
                                  :mod (c20-16 / all))
                     :ARG1 (c20-10 / benefit-01
                                   :ARG0 (c20-9 / due-process)
                                   :ARG1 c20-7)
                     :ARG1-of (c20-13 / cause-01
                                      :ARG0 (c20-4 / urge-01
                                                   :ARG1 c20-7
                                                   :ARG2 (c20-14 / give-01
                                                                 :ARG0 c20-7
                                                                 :ARG1 (c20-8 / person
                                                                              :ARG0-of (c20-15 / shoot-02))
                                                                 :ARG2 (c20-2 / he))))
                     :polarity -))

# ::snt should we execute now since we know he took money illegally?
# ::tokens ["should", "we", "execute", "now", "since", "we", "know", "he", "took", "money", "illegally", "?"]
# ::lemmas ["should", "we", "execute", "now", "since", "we", "know", "he", "take", "money", "illegally", "?"]
(c21-6 / recommend-01
       :polarity (c21-10 / amr-unknown)
       :ARG1 (c21-4 / execute-01
                    :ARG0 (c21-1 / we)
                    :time (c21-5 / now))
       :ARG1-of (c21-7 / cause-01
                       :ARG0 (c21-9 / know-01
                                    :ARG0 c21-1
                                    :ARG1 (c21-8 / take-01
                                                 :ARG0 (c21-0 / he)
                                                 :ARG1 (c21-3 / money)
                                                 :ARG1-of (c21-2 / legal-02
                                                                 :polarity -)))))

# ::snt Bullshit = facts that I don't like . . .
# ::tokens ["Bullshit", "=", "facts", "that", "I", "do", "n't", "like", ".", ".", "."]
# ::lemmas ["bullshit", "=", "fact", "that", "i", "do", "not", "like", ".", ".", "."]
(c22-2 / equal-01
       :ARG1 (c22-1 / bullshit)
       :ARG2 (c22-0 / fact
                    :ARG1-of (c22-4 / dislike-01
                                    :ARG0 (c22-3 / i))))

# ::snt regardless what story ends up right - to bad kid is dead whether innocent or stupid. If he was innocent Cop will be in jail.
# ::tokens ["regardless", "what", "story", "ends", "up", "right", "-", "to", "bad", "kid", "is", "dead", "whether", "innocent", "or", "stupid", ".", "If", "he", "was", "innocent", "Cop", "will", "be", "in", "jail", "."]
# ::lemmas ["regardless", "what", "story", "end", "up", "right", "-", "to", "bad", "kid", "be", "dead", "whether", "innocent", "or", "stupid", ".", "if", "he", "be", "innocent", "Cop", "will", "be", "in", "jail", "."]
(c23-1 / multi-sentence
       :snt1 (c23-8 / regardless-91
                    :ARG2 (c23-4 / end-up-03
                                 :ARG1 (c23-12 / story)
                                 :ARG2 (c23-7 / right-06
                                              :ARG1 c23-12)))
       :snt2 (c23-9 / die-01
                    :ARG1 (c23-13 / kid
                                  :ARG1-of (c23-2 / bad-07))
                    :condition (c23-3 / or
                                      :op1 (c23-6 / innocent-01
                                                  :ARG1 c23-13)
                                      :op2 (c23-5 / stupid
                                                  :domain c23-13)))
       :snt3 (c23-0 / jail-01
                    :ARG1 (c23-10 / cop)
                    :condition (c23-11 / innocent-01
                                       :ARG1 c23-10)))

# ::snt Shut your mouth you piece of trash. You know jack shit. Go away and let the adults talk you cunt.
# ::tokens ["Shut", "your", "mouth", "you", "piece", "of", "trash", ".", "You", "know", "jack", "shit", ".", "Go", "away", "and", "let", "the", "adults", "talk", "you", "cunt", "."]
# ::lemmas ["shut", "your", "mouth", "you", "piece", "of", "trash", ".", "you", "know", "jack", "shit", ".", "go", "away", "and", "let", "the", "adult", "talk", "you", "cunt", "."]
(c24-3 / multi-sentence
       :snt1 (c24-14 / shut-01
                     :ARG0 (c24-1 / you
                                  :mod (c24-9 / piece
                                              :consist-of (c24-16 / trash))
                                  :part (c24-10 / mouth
                                                :ARG1-of c24-14))
                     :mode imperative)
       :snt2 (c24-7 / know-01
                    :ARG0 (c24-13 / you)
                    :ARG1 (c24-5 / shit
                                 :mod (c24-0 / jack-shit
                                             :mode expressive)))
       :snt3 (c24-17 / and
                     :op1 (c24-12 / go-02
                                  :ARG0 (c24-4 / you
                                               :mod (c24-11 / cunt))
                                  :ARG4 (c24-6 / away)
                                  :mode imperative)
                     :op2 (c24-2 / let-01
                                 :ARG0 c24-4
                                 :ARG1 (c24-15 / talk-01
                                               :ARG0 (c24-8 / adult)
                                               :ARG2 c24-4)
                                 :mode imperative)))

# ::snt White ppl will say ANYTHING to justify the murder of Black people
# ::tokens ["White", "ppl", "will", "say", "ANYTHING", "to", "justify", "the", "murder", "of", "Black", "people"]
# ::lemmas ["white", "ppl", "will", "say", "anything", "to", "justify", "the", "murder", "of", "black", "people"]
(c25-7 / say-01
       :ARG0 (c25-6 / person
                    :ARG1-of (c25-1 / white-02)
                    :ARG0-of (c25-0 / have-org-role-91
                                    :ARG2 (c25-8 / ppl)))
       :ARG1 (c25-9 / anything)
       :purpose (c25-2 / justify-01
                       :ARG0 c25-6
                       :ARG1 (c25-3 / murder-01
                                    :ARG1 (c25-4 / person
                                                 :ARG1-of (c25-5 / black-05)))))

# ::snt These people probably consider themselves "pro-life" as well (unless it's a black person)
# ::tokens ["These", "people", "probably", "consider", "themselves", "\"", "pro", "-", "life", "\"", "as", "well", "(", "unless", "it", "'s", "a", "black", "person", ")"]
# ::lemmas ["these", "people", "probably", "consider", "themselves", "\"", "pro", "-", "life", "\"", "as", "well", "(", "unless", "it", "be", "a", "black", "person", ")"]
(c26-5 / consider-01
       :ARG0 (c26-4 / person
                    :mod (c26-6 / this))
       :ARG1 (c26-0 / favor-01
                    :ARG0 c26-4
                    :ARG1 (c26-1 / life))
       :mod (c26-7 / probable)
       :condition (c26-2 / person
                         :ARG1-of (c26-3 / black-05)
                         :polarity -)
       :mod (c26-8 / as-well))

# ::snt Dorian Johnson confirmed that he and Brown were in that video. So - fact, yes?
# ::tokens ["Dorian", "Johnson", "confirmed", "that", "he", "and", "Brown", "were", "in", "that", "video", ".", "So", "-", "fact", ",", "yes", "?"]
# ::lemmas ["Dorian", "Johnson", "confirm", "that", "he", "and", "Brown", "be", "in", "that", "video", ".", "so", "-", "fact", ",", "yes", "?"]
(c27-3 / multi-sentence
       :snt1 (c27-10 / confirm-01
                     :ARG0 (c27-8 / person
                                  :name (c27-6 / name
                                               :op1 "Dorian"
                                               :op2 "Johnson"))
                     :ARG1 (c27-4 / be-located-at-91
                                  :ARG1 (c27-13 / and
                                                :op1 (c27-0 / he)
                                                :op2 (c27-12 / person
                                                             :name (c27-7 / name
                                                                          :op1 "Brown")))
                                  :ARG2 (c27-9 / video
                                               :mod (c27-11 / that))))
       :snt2 (c27-2 / fact
                    :mod (c27-1 / yes)
                    :polarity (c27-5 / amr-unknown)))

# ::snt No proof he robbed the store?
# ::tokens ["No", "proof", "he", "robbed", "the", "store", "?"]
# ::lemmas ["no", "proof", "he", "rob", "the", "store", "?"]
(c28-1 / prove-01
       :ARG1 (c28-2 / rob-01
                    :ARG0 (c28-0 / he)
                    :ARG1 (c28-3 / store))
       :polarity (c28-4 / amr-unknown)
       :polarity -)

# ::snt You're a moron. Bye bye.
# ::tokens ["You", "'re", "a", "moron", ".", "Bye", "bye", "."]
# ::lemmas ["you", "be", "a", "moron", ".", "bye", "bye", "."]
(c29-2 / multi-sentence
       :snt1 (c29-1 / moron
                    :domain (c29-0 / you))
       :snt2 (c29-3 / bye
                    :mode expressive))

# ::snt They aren't facts. JFC They haven't proven shit yet. All we do know for FACT is that Mike Brown was unarmed.
# ::tokens ["They", "are", "n't", "facts", ".", "JFC", "They", "have", "n't", "proven", "shit", "yet", ".", "All", "we", "do", "know", "for", "FACT", "is", "that", "Mike", "Brown", "was", "unarmed", "."]
# ::lemmas ["they", "be", "not", "fact", ".", "JFC", "they", "have", "not", "prove", "shit", "yet", ".", "all", "we", "do", "know", "for", "FACT", "be", "that", "Mike", "Brown", "be", "unarmed", "."]
(c30-3 / multi-sentence
       :snt1 (c30-2 / fact
                    :domain (c30-12 / they)
                    :polarity -)
       :snt2 (c30-9 / prove-01
                    :ARG0 (c30-10 / they)
                    :ARG1 (c30-11 / shit)
                    :time (c30-0 / yet)
                    :source (c30-13 / publication
                                    :name (c30-7 / name
                                                 :op1 "JFC"))
                    :polarity -)
       :snt3 (c30-6 / know-01
                    :ARG0 (c30-1 / we)
                    :ARG1 (c30-14 / arm-01
                                  :ARG1 (c30-4 / person
                                               :name (c30-8 / name
                                                            :op1 "Mike"
                                                            :op2 "Brown"))
                                  :polarity -)
                    :mod (c30-5 / only)
                    :purpose c30-2))

# ::snt You can't be angry at the truth? Ok...
# ::tokens ["You", "ca", "n't", "be", "angry", "at", "the", "truth", "?", "Ok", "..."]
# ::lemmas ["you", "can", "not", "be", "angry", "at", "the", "truth", "?", "ok", "..."]
(c31-1 / multi-sentence
       :snt1 (c31-5 / possible-01
                    :ARG1 (c31-7 / anger-01
                                 :ARG0 (c31-6 / truth)
                                 :ARG1 (c31-0 / you))
                    :polarity (c31-3 / amr-unknown)
                    :polarity (c31-4 / amr-unknown)
                    :polarity -)
       :snt2 (c31-2 / okay-01))

# ::snt SO Brown knew so it would explain why he would hit the cop &amp; try and get away.
# ::tokens ["SO", "Brown", "knew", "so", "it", "would", "explain", "why", "he", "would", "hit", "the", "cop", "&", "amp", ";", "try", "and", "get", "away", "."]
# ::lemmas ["SO", "Brown", "know", "so", "it", "would", "explain", "why", "he", "would", "hit", "the", "cop", "&", "amp", ";", "try", "and", "get", "away", "."]
(c32-3 / infer-01
       :ARG1 (c32-14 / know-01
                     :ARG0 (c32-6 / person
                                  :name (c32-4 / name
                                               :op1 "Brown"))
                     :purpose (c32-1 / explain-01
                                     :ARG0 (c32-9 / it)
                                     :ARG1 (c32-12 / thing
                                                   :ARG0-of (c32-8 / cause-01
                                                                   :ARG1 (c32-15 / and
                                                                                 :op1 (c32-0 / hit-01
                                                                                             :ARG0 c32-6
                                                                                             :ARG1 (c32-2 / and
                                                                                                          :op1 (c32-7 / cop)
                                                                                                          :op2 (c32-5 / amp)))
                                                                                 :op2 (c32-11 / try-01
                                                                                              :ARG0 c32-6
                                                                                              :ARG1 (c32-10 / get-05
                                                                                                            :ARG0 c32-6
                                                                                                            :ARG2 (c32-13 / away)))))))))

# ::snt So, many of those calling for transparency yesterday are condemning police for what they released today. Cant have it both ways.
# ::tokens ["So", ",", "many", "of", "those", "calling", "for", "transparency", "yesterday", "are", "condemning", "police", "for", "what", "they", "released", "today", ".", "Ca", "nt", "have", "it", "both", "ways", "."]
# ::lemmas ["so", ",", "many", "of", "those", "call", "for", "transparency", "yesterday", "be", "condemn", "police", "for", "what", "they", "release", "today", ".", "can", "not", "have", "it", "both", "way", "."]
(c33-0 / multi-sentence
       :snt1 (c33-16 / condemn-01
                     :ARG0 (c33-1 / person
                                  :quant (c33-7 / many)
                                  :ARG1-of (c33-11 / include-91
                                                   :ARG2 (c33-3 / person
                                                                :mod (c33-18 / that)
                                                                :ARG0-of (c33-2 / call-03
                                                                                :ARG1 (c33-17 / transparency)
                                                                                :time (c33-14 / yesterday)))))
                     :ARG1 (c33-5 / police)
                     :ARG2 (c33-12 / thing
                                   :ARG1-of (c33-8 / release-01
                                                   :ARG0 c33-5
                                                   :time (c33-15 / today))))
       :snt2 (c33-9 / possible-01
                    :ARG1 (c33-4 / have-03
                                 :ARG1 (c33-13 / it)
                                 :manner (c33-10 / way
                                                 :mod (c33-6 / both)))
                    :polarity -))

# ::snt you don't seem to have a grasp on the general reaction
# ::tokens ["you", "do", "n't", "seem", "to", "have", "a", "grasp", "on", "the", "general", "reaction"]
# ::lemmas ["you", "do", "not", "seem", "to", "have", "a", "grasp", "on", "the", "general", "reaction"]
(c34-4 / seem-01
       :ARG1 (c34-3 / grasp-01
                    :ARG0 (c34-0 / you)
                    :ARG1 (c34-1 / react-01
                                 :ARG1-of (c34-2 / general-02))
                    :polarity -))

# ::snt and cops will do anything to get away w murder.
# ::tokens ["and", "cops", "will", "do", "anything", "to", "get", "away", "w", "murder", "."]
# ::lemmas ["and", "cop", "will", "do", "anything", "to", "get", "away", "w", "murder", "."]
(c35-5 / and
       :op2 (c35-2 / do-02
                   :ARG0 (c35-3 / cop)
                   :ARG1 (c35-1 / anything)
                   :purpose (c35-4 / get-away-08
                                   :ARG0 c35-3
                                   :ARG1 (c35-0 / murder-01))))

# ::snt his friend said that he took cigars. The PC said in press conf. That the officer didn't know that.
# ::tokens ["his", "friend", "said", "that", "he", "took", "cigars", ".", "The", "PC", "said", "in", "press", "conf", ".", "That", "the", "officer", "did", "n't", "know", "that", "."]
# ::lemmas ["his", "friend", "say", "that", "he", "take", "cigar", ".", "the", "pc", "say", "in", "press", "conf", ".", "that", "the", "officer", "do", "not", "know", "that", "."]
(c36-2 / multi-sentence
       :snt1 (c36-12 / say-01
                     :ARG0 (c36-8 / person
                                  :ARG0-of (c36-0 / have-rel-role-91
                                                  :ARG1 (c36-16 / he)
                                                  :ARG2 (c36-1 / friend)))
                     :ARG1 (c36-14 / take-01
                                   :ARG0 c36-16
                                   :ARG1 (c36-10 / cigar)))
       :snt2 (c36-5 / say-01
                    :ARG0 (c36-15 / person
                                  :ARG0-of (c36-7 / have-org-role-91
                                                  :ARG2 (c36-3 / PC)))
                    :location (c36-9 / conf
                                     :mod (c36-13 / press)))
       :snt3 (c36-6 / know-01
                    :ARG0 (c36-4 / officer)
                    :ARG1 (c36-11 / that)
                    :polarity -))

# ::snt I don't know what article you are talking about. I just watched the local and national news conference.
# ::tokens ["I", "do", "n't", "know", "what", "article", "you", "are", "talking", "about", ".", "I", "just", "watched", "the", "local", "and", "national", "news", "conference", "."]
# ::lemmas ["i", "do", "not", "know", "what", "article", "you", "be", "talk", "about", ".", "i", "just", "watch", "the", "local", "and", "national", "news", "conference", "."]
(c37-4 / multi-sentence
       :snt1 (c37-6 / know-01
                    :ARG0 (c37-5 / i)
                    :ARG1 (c37-12 / article
                                  :ARG1-of (c37-11 / talk-01
                                                   :ARG0 (c37-1 / you)))
                    :polarity -)
       :snt2 (c37-2 / watch-01
                    :ARG0 (c37-10 / i)
                    :ARG1 (c37-9 / conference
                                 :mod (c37-7 / news)
                                 :ARG1-of (c37-3 / local-02)
                                 :mod (c37-8 / nation))
                    :time (c37-0 / just)))

# ::snt And please remember there is no proof he has his hands up..
# ::tokens ["And", "please", "remember", "there", "is", "no", "proof", "he", "has", "his", "hands", "up", ".."]
# ::lemmas ["and", "please", "remember", "there", "be", "no", "proof", "he", "have", "his", "hand", "up", ".."]
(c38-6 / and
       :op2 (c38-5 / remember-01
                   :ARG0 (c38-1 / you)
                   :ARG1 (c38-4 / prove-01
                                :ARG1 (c38-3 / up-03
                                             :ARG1 (c38-0 / hand
                                                          :part-of (c38-2 / he)))
                                :polarity -)
                   :mode imperative
                   :polite +))

# ::snt When you attack an officer
# ::tokens ["When", "you", "attack", "an", "officer"]
# ::lemmas ["when", "you", "attack", "an", "officer"]
(c39-3 / be-temporally-at-91
       :ARG2 (c39-2 / attack-01
                    :ARG0 (c39-1 / you)
                    :ARG1 (c39-0 / officer)))

# ::snt ) there is no proof robbed the store. ) The police claimed originally the issue was jaywalking
# ::tokens [")", "there", "is", "no", "proof", "robbed", "the", "store", ".", ")", "The", "police", "claimed", "originally", "the", "issue", "was", "jaywalking"]
# ::lemmas [")", "there", "be", "no", "proof", "rob", "the", "store", ".", ")", "the", "police", "claim", "originally", "the", "issue", "be", "jaywalk"]
(c40-1 / multi-sentence
       :snt1 (c40-8 / thing
                    :ARG0-of (c40-4 / prove-01
                                    :ARG1 (c40-5 / rob-01
                                                 :ARG1 (c40-7 / store))
                                    :polarity -))
       :snt2 (c40-6 / claim-01
                    :ARG0 (c40-9 / police)
                    :ARG1 (c40-3 / issue-02
                                 :ARG0 (c40-0 / jaywalking)
                                 :mod (c40-2 / original))))

# ::snt if he put his hands up I agree he shouldn't have been shot.Still more investigating to be done-many diff stories
# ::tokens ["if", "he", "put", "his", "hands", "up", "I", "agree", "he", "should", "n't", "have", "been", "shot", ".", "Still", "more", "investigating", "to", "be", "done", "-", "many", "diff", "stories"]
# ::lemmas ["if", "he", "put", "his", "hand", "up", "i", "agree", "he", "should", "not", "have", "be", "shoot", ".", "still", "more", "investigate", "to", "be", "do", "-", "many", "diff", "story"]
(c41-2 / multi-sentence
       :snt1 (c41-16 / agree-01
                     :ARG0 (c41-8 / i)
                     :ARG1 (c41-10 / recommend-01
                                   :ARG1 (c41-15 / shoot-02
                                                 :ARG1 (c41-0 / he
                                                              :part (c41-1 / hand)))
                                   :condition (c41-9 / put-01
                                                     :ARG0 c41-0
                                                     :ARG1 c41-1
                                                     :ARG2 (c41-3 / up))
                                   :polarity -))
       :snt2 (c41-12 / investigate-01
                     :ARG1-of (c41-11 / do-02)
                     :mod (c41-7 / still)
                     :quant (c41-13 / more)
                     :ARG0-of (c41-14 / cause-01
                                      :ARG1 (c41-4 / story
                                                   :quant (c41-5 / many)
                                                   :ARG0-of (c41-6 / oppose-01)))))

# ::snt : can you send me a link to this confirmation?"ask CNN and MSNBC for the link.
# ::tokens [":", "can", "you", "send", "me", "a", "link", "to", "this", "confirmation?\"ask", "CNN", "and", "MSNBC", "for", "the", "link", "."]
# ::lemmas [":", "can", "you", "send", "i", "a", "link", "to", "this", "confirmation?\"ask", "CNN", "and", "MSNBC", "for", "the", "link", "."]
(c42-12 / ask-01
        :ARG0 (c42-3 / i)
        :ARG1 (c42-6 / possible-01
                     :ARG1 (c42-9 / send-01
                                  :ARG0 (c42-2 / and
                                               :op1 (c42-11 / publication
                                                            :name (c42-4 / name
                                                                         :op1 "CNN"))
                                               :op2 (c42-1 / publication
                                                           :name (c42-5 / name
                                                                        :op1 "MSNBC")))
                                  :ARG1 (c42-0 / link-01
                                               :ARG2 (c42-8 / confirm-01
                                                            :mod (c42-10 / this)))
                                  :ARG2 c42-3)
                     :polarity (c42-7 / amr-unknown))
        :ARG2 c42-2)

# ::snt No idea, but if your going to commit a felony be prepared for consequences
# ::tokens ["No", "idea", ",", "but", "if", "your", "going", "to", "commit", "a", "felony", "be", "prepared", "for", "consequences"]
# ::lemmas ["no", "idea", ",", "but", "if", "your", "go", "to", "commit", "a", "felony", "be", "prepare", "for", "consequence"]
(c43-5 / contrast-01
       :ARG1 (c43-2 / idea
                    :polarity -)
       :ARG2 (c43-3 / prepare-02
                    :ARG1 (c43-0 / you)
                    :ARG2 (c43-4 / consequence-03
                                 :ARG2 c43-0)
                    :condition (c43-6 / commit-02
                                      :ARG0 c43-0
                                      :ARG1 (c43-1 / felony))))

# ::snt and you were there huh, that from his "Felon friend"
# ::tokens ["and", "you", "were", "there", "huh", ",", "that", "from", "his", "\"", "Felon", "friend", "\""]
# ::lemmas ["and", "you", "be", "there", "huh", ",", "that", "from", "his", "\"", "Felon", "friend", "\""]
(c44-9 / and
       :op2 (c44-1 / you
                   :location (c44-7 / there)
                   :ARG1-of (c44-6 / request-confirmation-91)
                   :source (c44-5 / person
                                  :ARG0-of (c44-0 / have-rel-role-91
                                                  :ARG1 (c44-2 / he)
                                                  :ARG2 (c44-3 / friend))
                                  :mod (c44-8 / person
                                              :name (c44-4 / name
                                                           :op1 "Felon")))))

# ::snt reports are now that the officer was responding to the call, I thought...
# ::tokens ["reports", "are", "now", "that", "the", "officer", "was", "responding", "to", "the", "call", ",", "I", "thought", "..."]
# ::lemmas ["report", "be", "now", "that", "the", "officer", "be", "respond", "to", "the", "call", ",", "i", "think", "..."]
(c45-6 / think-01
       :ARG0 (c45-1 / i)
       :ARG1 (c45-4 / report-01
                    :ARG1 (c45-2 / respond-01
                                 :ARG0 (c45-0 / officer)
                                 :ARG1 (c45-5 / call-02))
                    :time (c45-3 / now)))

# ::snt You'd be a perfect little soldier in North Korea. Book your ticket since you prefer living in a police state.
# ::tokens ["You", "'d", "be", "a", "perfect", "little", "soldier", "in", "North", "Korea", ".", "Book", "your", "ticket", "since", "you", "prefer", "living", "in", "a", "police", "state", "."]
# ::lemmas ["you", "would", "be", "a", "perfect", "little", "soldier", "in", "North", "Korea", ".", "book", "your", "ticket", "since", "you", "prefer", "live", "in", "a", "police", "state", "."]
(c46-2 / multi-sentence
       :snt1 (c46-12 / soldier
                     :domain (c46-0 / you)
                     :ARG1-of (c46-7 / perfect-02)
                     :mod (c46-1 / little)
                     :location (c46-9 / country
                                      :name (c46-6 / name
                                                   :op1 "North"
                                                   :op2 "Korea")))
       :snt2 (c46-4 / book-03
                    :ARG0 (c46-11 / you)
                    :ARG1 (c46-13 / ticket
                                  :poss c46-11)
                    :ARG1-of (c46-8 / cause-01
                                    :ARG0 (c46-14 / prefer-01
                                                  :ARG0 c46-11
                                                  :ARG1 (c46-10 / live-01
                                                                :ARG0 c46-11
                                                                :location (c46-5 / state
                                                                                 :mod (c46-3 / police)))))
                    :mode imperative))

# ::snt Shows what you know. "Having it both ways" is the modus operandi of the American Liberal Grievance Industry.
# ::tokens ["Shows", "what", "you", "know", ".", "\"", "Having", "it", "both", "ways", "\"", "is", "the", "modus", "operandi", "of", "the", "American", "Liberal", "Grievance", "Industry", "."]
# ::lemmas ["show", "what", "you", "know", ".", "\"", "have", "it", "both", "way", "\"", "be", "the", "modus", "operandi", "of", "the", "American", "Liberal", "Grievance", "Industry", "."]
(c47-4 / multi-sentence
       :snt1 (c47-13 / show-01
                     :ARG1 (c47-14 / thing
                                   :ARG1-of (c47-7 / know-01
                                                   :ARG0 (c47-1 / you))))
       :snt2 (c47-9 / modus-operandi
                    :domain (c47-0 / have-03
                                   :ARG1 (c47-6 / it)
                                   :manner (c47-2 / way
                                                  :mod (c47-5 / both)))
                    :poss (c47-11 / industry
                                  :mod (c47-12 / Grievance)
                                  :mod (c47-10 / country
                                               :name (c47-8 / name
                                                            :op1 "America"))
                                  :ARG1-of (c47-3 / liberal-02))))

# ::snt you clearly have a limited understanding both of transparency and accountability.
# ::tokens ["you", "clearly", "have", "a", "limited", "understanding", "both", "of", "transparency", "and", "accountability", "."]
# ::lemmas ["you", "clearly", "have", "a", "limited", "understanding", "both", "of", "transparency", "and", "accountability", "."]
(c48-2 / understand-01
       :ARG0 (c48-0 / you)
       :ARG1 (c48-6 / and
                    :op1 (c48-5 / transparency)
                    :op2 (c48-3 / accountable-02))
       :ARG1-of (c48-1 / limit-01)
       :ARG1-of (c48-4 / clear-06))

# ::snt lmao at you thinking those are mutually exclusive
# ::tokens ["lmao", "at", "you", "thinking", "those", "are", "mutually", "exclusive"]
# ::lemmas ["lmao", "at", "you", "think", "those", "be", "mutually", "exclusive"]
(c49-1 / laugh-01
       :ARG0 (c49-5 / i)
       :ARG1 (c49-0 / you)
       :ARG2 (c49-8 / think-01
                    :ARG0 c49-0
                    :ARG1 (c49-4 / exclusive-02
                                 :ARG0 (c49-7 / that)
                                 :manner (c49-2 / mutual)))
       :mod (c49-3 / off)
       :mod c49-1
       :ARG0 c49-5
       :manner (c49-6 / loud))

# ::snt exactly. Anything to keep us distracted.
# ::tokens ["exactly", ".", "Anything", "to", "keep", "us", "distracted", "."]
# ::lemmas ["exactly", ".", "anything", "to", "keep", "we", "distracted", "."]
(c50-1 / multi-sentence
       :snt1 (c50-2 / exact)
       :snt2 (c50-5 / anything
                    :ARG0-of (c50-4 / keep-02
                                    :ARG1 (c50-3 / distract-01
                                                 :ARG1 (c50-0 / we)))))
