# ::snt read ur Bible if Christian it also says defend when attacked again read drop prohibisions
# ::tokens ["read", "ur", "Bible", "if", "Christian", "it", "also", "says", "defend", "when", "attacked", "again", "read", "drop", "prohibisions"]
# ::lemmas ["read", "ur", "Bible", "if", "Christian", "it", "also", "say", "defend", "when", "attack", "again", "read", "drop", "prohibision"]
(c1-2 / multi-sentence
      :snt1 (c1-12 / read-01
                   :ARG0 (c1-0 / you)
                   :ARG1 (c1-3 / book
                               :name (c1-9 / name
                                           :op1 "Bible")
                               :poss (c1-15 / you))
                   :condition (c1-8 / religious-group
                                    :name (c1-10 / name
                                                 :op1 "Christian"))
                   :mode imperative)
      :snt2 (c1-16 / say-01
                   :ARG0 (c1-7 / it)
                   :ARG1 (c1-13 / defend-01
                                :condition (c1-17 / attack-01
                                                  :ARG1 c1-15
                                                  :mod (c1-6 / again)))
                   :mod (c1-11 / also))
      :snt3 (c1-5 / read-01
                  :ARG0 (c1-4 / you)
                  :ARG1 (c1-14 / prohibitive-02
                               :ARG1 (c1-1 / drop))
                  :mode imperative))

# ::snt Allowed have sex with dead bodies goats children wifes, temporary marriages,no Antibiotics
# ::tokens ["Allowed", "have", "sex", "with", "dead", "bodies", "goats", "children", "wifes", ",", "temporary", "marriages", ",", "no", "Antibiotics"]
# ::lemmas ["allow", "have", "sex", "with", "dead", "body", "goat", "child", "wife", ",", "temporary", "marriage", ",", "no", "Antibiotics"]
(c2-10 / and
       :op1 (c2-0 / have-06
                  :ARG1 (c2-8 / sex-01
                              :ARG1 (c2-3 / body
                                          :ARG1-of (c2-6 / die-01))))
       :op2 (c2-1 / wifes
                  :mod (c2-7 / child))
       :op3 (c2-2 / marry-01
                  :mod (c2-9 / temporary))
       :op4 (c2-4 / Antibiotic
                  :polarity -)
       :ARG1-of (c2-5 / allow-01))

# ::snt haha we are so full of Libtards masquerading as journos and repeating verbatim that we are not surprised in India
# ::tokens ["haha", "we", "are", "so", "full", "of", "Libtards", "masquerading", "as", "journos", "and", "repeating", "verbatim", "that", "we", "are", "not", "surprised", "in", "India"]
# ::lemmas ["haha", "we", "be", "so", "full", "of", "Libtards", "masquerade", "as", "journo", "and", "repeat", "verbatim", "that", "we", "be", "not", "surprised", "in", "India"]
(c3-3 / full-09
      :ARG1 (c3-1 / we)
      :ARG2 (c3-8 / person
                  :ARG1-of (c3-5 / liberal-02)
                  :ARG0-of (c3-4 / masquerade-01
                                 :ARG2 (c3-0 / journo))
                  :ARG0-of (c3-9 / repeat-01
                                 :manner (c3-7 / verbatim)))
      :ARG0-of (c3-10 / cause-01
                      :ARG1 (c3-12 / surprise-01
                                   :ARG1 c3-1
                                   :location (c3-11 / country
                                                    :name (c3-6 / name
                                                                :op1 "India"))
                                   :polarity -))
      :mod (c3-2 / haha
                 :mode expressive))

# ::snt do u know when syphillis started &amp; where &amp; u think u r Einstein
# ::tokens ["do", "u", "know", "when", "syphillis", "started", "&", "amp", ";", "where", "&", "amp", ";", "u", "think", "u", "r", "Einstein"]
# ::lemmas ["do", "u", "know", "when", "syphillis", "started", "&", "amp", ";", "where", "&", "amp", ";", "u", "think", "u", "r", "Einstein"]
(c4-3 / know-01
      :ARG0 (c4-0 / you)
      :ARG1 (c4-11 / and
                   :op1 (c4-9 / time
                              :time-of (c4-8 / start-01
                                             :ARG1 (c4-6 / program
                                                         :name (c4-4 / name
                                                                     :op1 "Syphillis"))))
                   :op2 (c4-1 / be-located-at-91
                              :ARG1 c4-6
                              :op3-of c4-11)
                   :ARG1 c4-6)
      :op4 (c4-7 / think-01
                 :ARG0 c4-0
                 :ARG1 (c4-10 / person
                              :name (c4-5 / name
                                          :op1 "Einstein")
                              :domain c4-0))
      :polarity (c4-2 / amr-unknown))

# ::snt perhaps in bad words
# ::tokens ["perhaps", "in", "bad", "words"]
# ::lemmas ["perhaps", "in", "bad", "word"]
(c5-1 / possible-01
      :ARG1 (c5-0 / word-01
                  :ARG1-of (c5-2 / bad-07)))

# ::snt Message to LEFT ( ) from No More Tolerance + No More Political Correctness
# ::tokens ["Message", "to", "LEFT", "(", ")", "from", "No", "More", "Tolerance", "+", "No", "More", "Political", "Correctness"]
# ::lemmas ["message", "to", "LEFT", "(", ")", "from", "no", "more", "tolerance", "+", "no", "more", "political", "correctness"]
(c6-2 / message-01
      :ARG1 (c6-1 / LEFT-19)
      :ARG2 (c6-9 / and
                  :op1 (c6-8 / tolerate-01
                             :ARG1-of (c6-0 / have-quant-91
                                            :ARG3 (c6-5 / more))
                             :polarity -)
                  :op2 (c6-7 / correct-02
                             :ARG1 (c6-6 / politics)
                             :ARG1-of (c6-3 / have-quant-91
                                            :ARG3 (c6-4 / more))
                             :polarity -)))

# ::snt No he sucks up to Islam in Canada for votes. He doesn't give one shit about us infidels they wish to kill!
# ::tokens ["No", "he", "sucks", "up", "to", "Islam", "in", "Canada", "for", "votes", ".", "He", "does", "n't", "give", "one", "shit", "about", "us", "infidels", "they", "wish", "to", "kill", "!"]
# ::lemmas ["no", "he", "suck", "up", "to", "Islam", "in", "Canada", "for", "vote", ".", "he", "do", "not", "give", "one", "shit", "about", "we", "infidel", "they", "wish", "to", "kill", "!"]
(c7-2 / multi-sentence
      :snt1 (c7-6 / no)
      :snt2 (c7-13 / suck-up-04
                   :ARG0 (c7-0 / he)
                   :ARG1 (c7-9 / religious-group
                               :name (c7-7 / name
                                           :op1 "Islam"))
                   :location (c7-10 / country
                                    :name (c7-8 / name
                                                :op1 "Canada"))
                   :purpose (c7-11 / vote-01))
      :snt3 (c7-12 / give-16
                   :ARG0 (c7-16 / he)
                   :ARG1 (c7-3 / shit
                               :quant 1)
                   :ARG2 (c7-4 / infidel
                               :domain (c7-1 / we)
                               :ARG1-of (c7-15 / kill-01
                                               :ARG0 (c7-14 / they)
                                               :ARG1-of (c7-5 / wish-01
                                                              :ARG0 c7-14)))
                   :polarity -))

# ::snt As expected, pretty boy just did not have the guts to call a 'Jihadi Terrorist' attack.
# ::tokens ["As", "expected", ",", "pretty", "boy", "just", "did", "not", "have", "the", "guts", "to", "call", "a", "'", "Jihadi", "Terrorist", "'", "attack", "."]
# ::lemmas ["as", "expect", ",", "pretty", "boy", "just", "do", "not", "have", "the", "gut", "to", "call", "a", "'", "Jihadi", "Terrorist", "'", "attack", "."]
(c8-0 / have-03
      :ARG0 (c8-2 / boy
                  :mod (c8-4 / pretty))
      :ARG1 (c8-6 / gut)
      :mod (c8-1 / just)
      :ARG1-of (c8-3 / expect-01)
      :purpose (c8-5 / call-01
                     :ARG0 c8-2
                     :ARG1 (c8-8 / attack-01
                                 :mod (c8-7 / terrorist)
                                 :ARG2-of c8-5))
      :polarity -)

# ::snt omg judging by the replies to this tweet by the terrorists sympthazing twits I think JT already inducted by
# ::tokens ["omg", "judging", "by", "the", "replies", "to", "this", "tweet", "by", "the", "terrorists", "sympthazing", "twits", "I", "think", "JT", "already", "inducted", "by"]
# ::lemmas ["omg", "judge", "by", "the", "reply", "to", "this", "tweet", "by", "the", "terrorist", "sympthaze", "twit", "i", "think", "JT", "already", "induct", "by"]
(c9-1 / opine-01
      :ARG0 (c9-4 / i)
      :ARG1 (c9-14 / think-01
                   :ARG0 c9-4
                   :ARG1 (c9-11 / induct-02
                                :ARG1 (c9-8 / person
                                            :name (c9-6 / name
                                                        :op1 "JT"))
                                :time (c9-15 / already)))
      :ARG1-of (c9-10 / cause-01
                      :ARG0 (c9-0 / judge-01
                                  :ARG0 c9-4
                                  :ARG2 (c9-9 / reply-01
                                              :ARG0 (c9-12 / twit
                                                           :ARG0-of (c9-3 / aze-01
                                                                          :ARG2 (c9-13 / sympthaze-01))
                                                           :mod (c9-7 / terrorist))
                                              :ARG1 (c9-2 / tweet-01
                                                          :mod (c9-5 / this))))))

# ::snt Dipshit is a name not cursing, it means dimwit,idiot,moron, Buy a Dicitionary if ur allowed
# ::tokens ["Dipshit", "is", "a", "name", "not", "cursing", ",", "it", "means", "dimwit", ",", "idiot", ",", "moron", ",", "Buy", "a", "Dicitionary", "if", "ur", "allowed"]
# ::lemmas ["Dipshit", "be", "a", "name", "not", "curse", ",", "it", "mean", "dimwit", ",", "idiot", ",", "moron", ",", "buy", "a", "Dicitionary", "if", "ur", "allow"]
(c10-12 / and
        :op1 (c10-2 / mean-01
                    :ARG1 (c10-6 / name-01
                                 :ARG1 (c10-11 / shit
                                               :mod (c10-9 / dipshit))
                                 :ARG2 (c10-4 / and
                                              :op1 (c10-5 / idiot)
                                              :op2 (c10-8 / moron)
                                              :op3 (c10-3 / buy-01
                                                          :ARG0 (c10-0 / you)
                                                          :ARG1 (c10-1 / diary)
                                                          :condition (c10-7 / allow-01
                                                                            :ARG0 c10-0)
                                                          :mode imperative)
                                              :mod (c10-13 / dimwit))
                                 :ARG2-of c10-2))
        :op2 (c10-10 / curse-02
                     :ARG1 c10-6
                     :polarity -))

# ::snt have u read about him or about Islam
# ::tokens ["have", "u", "read", "about", "him", "or", "about", "Islam"]
# ::lemmas ["have", "u", "read", "about", "he", "or", "about", "Islam"]
(c12-5 / read-01
       :ARG0 (c12-1 / you)
       :ARG3 (c12-2 / or
                    :op1 (c12-0 / he)
                    :op2 (c12-3 / religious-group
                                :name (c12-4 / name
                                             :op1 "Islam")))
       :polarity (c12-6 / amr-unknown))

# ::snt LOL! Actually i was talking abt the paid media and save liberation genre of India. Guess d r everywhr
# ::tokens ["LOL", "!", "Actually", "i", "was", "talking", "abt", "the", "paid", "media", "and", "save", "liberation", "genre", "of", "India", ".", "Guess", "d", "r", "everywhr"]
# ::lemmas ["LOL", "!", "actually", "i", "be", "talk", "abt", "the", "pay", "medium", "and", "save", "liberation", "genre", "of", "India", ".", "guess", "d", "r", "everywhr"]
(c13-3 / multi-sentence
       :snt1 (c13-2 / laugh-01
                    :ARG0 (c13-6 / i)
                    :manner (c13-13 / loud)
                    :mode expressive)
       :snt2 (c13-14 / talk-01
                     :ARG0 c13-6
                     :ARG1 (c13-15 / and
                                   :op1 (c13-8 / media
                                               :ARG3-of (c13-9 / pay-01))
                                   :op2 (c13-11 / genre
                                                :ARG0-of (c13-0 / liberate-01)
                                                :mod (c13-10 / country
                                                             :name (c13-7 / name
                                                                          :op1 "India"))))
                     :ARG1-of (c13-5 / actual-02))
       :snt3 (c13-12 / guess-01
                     :ARG0 (c13-1 / you)
                     :ARG1 (c13-4 / everywhr)
                     :mode imperative))

# ::snt slant anything to get votes/ sell his soul to give Trudeau dynasty another shot at finishing off destroying CDN
# ::tokens ["slant", "anything", "to", "get", "votes/", "sell", "his", "soul", "to", "give", "Trudeau", "dynasty", "another", "shot", "at", "finishing", "off", "destroying", "CDN"]
# ::lemmas ["slant", "anything", "to", "get", "votes/", "sell", "his", "soul", "to", "give", "Trudeau", "dynasty", "another", "shot", "at", "finish", "off", "destroy", "cdn"]
(c14-16 / slash
        :op1 (c14-7 / slap-01
                    :ARG1 (c14-17 / anything)
                    :purpose (c14-14 / get-01
                                     :ARG1 (c14-10 / vote-01
                                                   :ARG1 c14-17)))
        :op2 (c14-3 / sell-01
                    :ARG1 (c14-6 / soul
                                 :poss (c14-0 / he)))
        :purpose (c14-12 / give-01
                         :ARG1 (c14-1 / shot
                                      :mod (c14-8 / another)
                                      :instrument-of (c14-4 / finish-off-05
                                                            :ARG1 (c14-13 / destroy-01
                                                                          :ARG1 (c14-5 / organization
                                                                                       :name (c14-9 / name
                                                                                                    :op1 "CDN")))))
                         :ARG2 (c14-2 / dynasty
                                      :mod (c14-11 / person
                                                   :name (c14-15 / name
                                                                 :op1 "Truman")))))

# ::snt If he thinks I am afraid to say how I feel in front of Government then he is delusional!
# ::tokens ["If", "he", "thinks", "I", "am", "afraid", "to", "say", "how", "I", "feel", "in", "front", "of", "Government", "then", "he", "is", "delusional", "!"]
# ::lemmas ["if", "he", "think", "i", "be", "afraid", "to", "say", "how", "i", "feel", "in", "front", "of", "Government", "then", "he", "be", "delusional", "!"]
(c15-4 / delusional
       :domain (c15-0 / he)
       :condition (c15-10 / think-01
                          :ARG0 c15-0
                          :ARG1 (c15-1 / fear-01
                                       :ARG0 (c15-2 / i)
                                       :ARG1 (c15-9 / say-01
                                                    :ARG0 c15-2
                                                    :ARG1 (c15-8 / thing
                                                                 :ARG1-of (c15-3 / feel-01
                                                                                 :ARG0 c15-2
                                                                                 :location (c15-6 / in-front-of
                                                                                                  :op1 (c15-7 / government-organization
                                                                                                              :ARG0-of (c15-5 / govern-01)))))))))

# ::snt . I guess he fears petite blondes as well. Wow shameful
# ::tokens [".", "I", "guess", "he", "fears", "petite", "blondes", "as", "well", ".", "Wow", "shameful"]
# ::lemmas [".", "i", "guess", "he", "fear", "petite", "blonde", "as", "well", ".", "wow", "shameful"]
(c16-3 / multi-sentence
       :snt1 (c16-8 / guess-01
                    :ARG0 (c16-6 / i)
                    :ARG1 (c16-2 / fear-01
                                 :ARG0 (c16-0 / he)
                                 :ARG1 (c16-5 / blonde
                                              :mod (c16-7 / petite))
                                 :mod (c16-10 / as-well)))
       :snt2 (c16-9 / shame-02
                    :ARG0 (c16-4 / he)
                    :mod (c16-1 / wow
                                :mode expressive)
                    :mode expressive))

# ::snt . you are a disturbed man quit pestering Party leaders with your nonsense
# ::tokens [".", "you", "are", "a", "disturbed", "man", "quit", "pestering", "Party", "leaders", "with", "your", "nonsense"]
# ::lemmas [".", "you", "be", "a", "disturb", "man", "quit", "pester", "Party", "leader", "with", "your", "nonsense"]
(c17-2 / man
       :ARG1-of (c17-5 / disturb-01)
       :domain (c17-0 / you)
       :ARG0-of (c17-4 / pester-01
                       :ARG1 (c17-8 / person
                                    :ARG0-of (c17-1 / lead-02
                                                    :ARG1 (c17-3 / party)))
                       :ARG1-of (c17-6 / cause-01
                                       :ARG0 (c17-7 / sense-02
                                                    :ARG1 c17-0
                                                    :polarity -))))

# ::snt Keep showing your true damn faces to the world! You Denounce your Jihad / ShariaLaws / Victory Prayer!
# ::tokens ["Keep", "showing", "your", "true", "damn", "faces", "to", "the", "world", "!", "You", "Denounce", "your", "Jihad", "/", "ShariaLaws", "/", "Victory", "Prayer", "!"]
# ::lemmas ["keep", "show", "your", "true", "damn", "face", "to", "the", "world", "!", "you", "denounce", "your", "Jihad", "/", "ShariaLaws", "/", "Victory", "Prayer", "!"]
(c18-4 / multi-sentence
       :snt1 (c18-15 / keep-02
                     :ARG0 (c18-1 / you)
                     :ARG1 (c18-13 / show-01
                                   :ARG0 c18-1
                                   :ARG1 (c18-3 / face
                                                :ARG1-of (c18-14 / true-01)
                                                :mod (c18-11 / damn))
                                   :ARG2 (c18-2 / world))
                     :mode imperative)
       :snt2 (c18-5 / deny-01
                    :ARG0 (c18-12 / you)
                    :ARG1 (c18-7 / slash
                                 :op1 (c18-0 / jihad
                                             :poss c18-12)
                                 :op2 (c18-6 / law
                                             :name (c18-9 / name
                                                          :op1 "ShariaLaws"))
                                 :op3 (c18-10 / pray-01
                                              :ARG1 (c18-8 / win-01)))))

# ::snt That nutbar is a anti-USA / anti-Isreali dick.head &gt;&gt; &lt;&lt;&lt;
# ::tokens ["That", "nutbar", "is", "a", "anti", "-", "USA", "/", "anti", "-", "Isreali", "dick.head", "&", "gt;&gt", ";", "&", "lt;&lt;&lt", ";"]
# ::lemmas ["that", "nutbar", "be", "a", "anti", "-", "usa", "/", "anti", "-", "Isreali", "dick.head", "&", "gt;&gt", ";", "&", "lt;&lt;&lt", ";"]
(c19-6 / slash
       :op1 (c19-1 / oppose-01
                   :ARG0 (c19-2 / nutbar
                                :mod (c19-7 / that))
                   :ARG1 (c19-5 / country
                                :name (c19-3 / name
                                             :op1 "USA")))
       :op2 (c19-0 / oppose-01
                   :ARG0 c19-2
                   :ARG1 c19-5
                   :name (c19-4 / name
                                :op1 "Israel")))

# ::snt petty attacks like this make former CPC voters like me more like to vote for . Keep up the good work.
# ::tokens ["petty", "attacks", "like", "this", "make", "former", "CPC", "voters", "like", "me", "more", "like", "to", "vote", "for", ".", "Keep", "up", "the", "good", "work", "."]
# ::lemmas ["petty", "attack", "like", "this", "make", "former", "CPC", "voter", "like", "i", "more", "like", "to", "vote", "for", ".", "keep", "up", "the", "good", "work", "."]
(c20-0 / multi-sentence
       :snt1 (c20-12 / make-02
                     :ARG0 (c20-5 / attack-01
                                  :mod (c20-2 / petty)
                                  :ARG1-of (c20-13 / resemble-01
                                                   :ARG2 (c20-20 / this)))
                     :ARG1 (c20-7 / like-01
                                  :ARG0 (c20-4 / person
                                               :ARG0-of (c20-1 / vote-01
                                                               :ARG1 (c20-14 / government-organization
                                                                             :name (c20-11 / name
                                                                                           :op1 "CPC"))
                                                               :time (c20-8 / former))
                                               :ARG1-of c20-13
                                               :ARG2 (c20-17 / i)))
                     :ARG1 (c20-16 / vote-01
                                   :ARG0 c20-4
                                   :ARG1 (c20-10 / person))
                     :ARG2-of (c20-6 / have-degree-91
                                     :ARG1 c20-4
                                     :ARG3 (c20-9 / more)))
       :snt2 (c20-18 / keep-up-10
                     :ARG0 (c20-19 / you)
                     :ARG1 (c20-15 / work-01
                                   :ARG1-of (c20-3 / good-02))))

# ::snt deep, man. Real deep.
# ::tokens ["deep", ",", "man", ".", "Real", "deep", "."]
# ::lemmas ["deep", ",", "man", ".", "real", "deep", "."]
(c21-1 / multi-sentence
       :snt1 (c21-4 / deep-02
                    :ARG1 (c21-2 / man))
       :snt2 (c21-0 / deep-02
                    :ARG1-of (c21-3 / real-04)))

# ::snt go back Germany
# ::tokens ["go", "back", "Germany"]
# ::lemmas ["go", "back", "Germany"]
(c22-2 / go-02
       :ARG0 (c22-1 / country
                    :name (c22-0 / name
                                 :op1 "Germany"))
       :direction (c22-3 / back)
       :mode imperative)

# ::snt Hey Palestinian Terrorist, you can't even speak English. "They only chickens..." LOL LOL LOL. Go pray to Allah you jerk.
# ::tokens ["Hey", "Palestinian", "Terrorist", ",", "you", "ca", "n't", "even", "speak", "English", ".", "\"", "They", "only", "chickens", "...", "\"", "LOL", "LOL", "LOL", ".", "Go", "pray", "to", "Allah", "you", "jerk", "."]
# ::lemmas ["hey", "Palestinian", "Terrorist", ",", "you", "can", "not", "even", "speak", "English", ".", "\"", "they", "only", "chicken", "...", "\"", "lol", "LOL", "LOL", ".", "go", "pray", "to", "Allah", "you", "jerk", "."]
(c23-2 / multi-sentence
       :snt1 (c23-6 / say-01
                    :ARG0 (c23-15 / i)
                    :ARG1 (c23-4 / possible-01
                                 :ARG1 (c23-11 / speak-01
                                               :ARG0 (c23-24 / terrorist
                                                             :mod (c23-22 / country
                                                                          :name (c23-13 / name
                                                                                        :op1 "Palestine")))
                                               :ARG3 (c23-9 / language
                                                            :name (c23-21 / name
                                                                          :op1 "English"))
                                               :mod (c23-12 / even))
                                 :polarity -)
                    :ARG2 c23-24
                    :mod (c23-8 / hey
                                :mode expressive))
       :snt2 (c23-19 / say-01
                     :ARG0 (c23-16 / i)
                     :ARG1 (c23-5 / chicken
                                  :mod (c23-20 / only)
                                  :domain (c23-17 / they))
                     :ARG2-of (c23-23 / laugh-01
                                      :ARG0 c23-16
                                      :manner (c23-0 / loud)))
       :snt3 (c23-14 / go-05
                     :ARG0 (c23-18 / you
                                   :mod (c23-1 / jerk))
                     :ARG1 (c23-7 / pray-01
                                  :ARG0 c23-18
                                  :ARG2 (c23-10 / person
                                                :name (c23-3 / name
                                                             :op1 "Allah")))
                     :mode imperative))

# ::snt Show your face before you call others disturbed. Are you a chicken or a masked terrorist? Should I lock my doors?
# ::tokens ["Show", "your", "face", "before", "you", "call", "others", "disturbed", ".", "Are", "you", "a", "chicken", "or", "a", "masked", "terrorist", "?", "Should", "I", "lock", "my", "doors", "?"]
# ::lemmas ["show", "your", "face", "before", "you", "call", "other", "disturb", ".", "be", "you", "a", "chicken", "or", "a", "mask", "terrorist", "?", "should", "i", "lock", "my", "door", "?"]
(c24-1 / multi-sentence
       :snt1 (c24-5 / show-01
                    :ARG0 (c24-13 / you
                                  :part (c24-7 / face
                                               :ARG1-of c24-5))
                    :time (c24-9 / before
                                 :op1 (c24-16 / call-01
                                              :ARG0 c24-13
                                              :ARG1 (c24-2 / person
                                                           :mod (c24-15 / other))
                                              :ARG2 (c24-3 / disturb-01)))
                    :mode imperative)
       :snt2 (c24-14 / or
                     :op1 (c24-4 / chicken
                                 :domain (c24-17 / you))
                     :op2 (c24-18 / terrorist
                                  :ARG1-of (c24-10 / mask-01)
                                  :domain c24-17)
                     :polarity (c24-6 / amr-unknown))
       :snt3 (c24-11 / recommend-01
                     :ARG1 (c24-8 / lock-01
                                  :ARG0 (c24-12 / i)
                                  :ARG1 (c24-0 / door
                                               :poss c24-12))
                     :polarity c24-6))

# ::snt why even use this word use nice intelligent wrds convince
# ::tokens ["why", "even", "use", "this", "word", "use", "nice", "intelligent", "wrds", "convince"]
# ::lemmas ["why", "even", "use", "this", "word", "use", "nice", "intelligent", "wrd", "convince"]
(c25-1 / multi-sentence
       :snt1 (c25-8 / cause-01
                    :ARG0 (c25-11 / amr-unknown)
                    :ARG1 (c25-2 / use-01
                                 :ARG1 (c25-0 / word
                                              :mod (c25-10 / this))
                                 :mod (c25-3 / even)))
       :snt2 (c25-9 / use-01
                    :ARG1 (c25-5 / wrds
                                 :ARG1-of (c25-4 / intelligent-01)
                                 :ARG1-of (c25-6 / nice-01))
                    :ARG2 (c25-7 / convince-01)))

# ::snt r u Zionist Jew?
# ::tokens ["r", "u", "Zionist", "Jew", "?"]
# ::lemmas ["r", "u", "Zionist", "Jew", "?"]
(c26-2 / person
       :polarity (c26-4 / amr-unknown)
       :mod (c26-3 / religious-group
                   :name (c26-1 / name
                                :op1 "Zionism"))
       :domain (c26-0 / you))

# ::snt such a whimp call it what it is, maybe his party feels Liable for the attacks in Canada letting them in.
# ::tokens ["such", "a", "whimp", "call", "it", "what", "it", "is", ",", "maybe", "his", "party", "feels", "Liable", "for", "the", "attacks", "in", "Canada", "letting", "them", "in", "."]
# ::lemmas ["such", "a", "whimp", "call", "it", "what", "it", "be", ",", "maybe", "his", "party", "feel", "liable", "for", "the", "attack", "in", "Canada", "let", "they", "in", "."]
(c27-7 / possible-01
       :ARG1 (c27-3 / feel-01
                    :ARG0 (c27-13 / party
                                  :poss (c27-0 / he))
                    :ARG1 (c27-2 / liable-01
                                 :ARG1 c27-13
                                 :ARG2 (c27-14 / attack-01
                                               :location (c27-9 / country
                                                                :name (c27-6 / name
                                                                             :op1 "Canada"))
                                               :ARG0-of (c27-10 / let-01
                                                                :ARG1 (c27-4 / enter-01
                                                                             :ARG0 c27-13)))))
       :condition (c27-8 / call-01
                         :ARG0 (c27-1 / whimp
                                      :mod (c27-11 / such))
                         :ARG1 (c27-5 / it)
                         :ARG2 (c27-12 / thing
                                       :domain c27-5)))

# ::snt People r waking up and reading &amp; knowing the truth thats why people dont want it here.,
# ::tokens ["People", "r", "waking", "up", "and", "reading", "&", "amp", ";", "knowing", "the", "truth", "that", "s", "why", "people", "do", "nt", "want", "it", "here", ".", ","]
# ::lemmas ["people", "r", "wake", "up", "and", "read", "&", "amp", ";", "know", "the", "truth", "that", "s", "why", "people", "do", "not", "want", "it", "here", ".", ","]
(c28-11 / and
        :op1 (c28-2 / and
                    :op1 (c28-1 / wake-up-02
                                :ARG1 (c28-5 / person))
                    :op2 (c28-6 / read-01
                                :ARG0 c28-5))
        :op2 (c28-9 / know-01
                    :ARG0 c28-5
                    :ARG1 (c28-8 / truth))
        :ARG0-of (c28-7 / cause-01
                        :ARG1 (c28-4 / want-01
                                     :ARG0 (c28-10 / person)
                                     :ARG1 (c28-3 / it)
                                     :location (c28-0 / here)
                                     :polarity -)))

# ::snt so this is all u know? Prhaps if u take ur mind+head off human+animal waste maybe learn more
# ::tokens ["so", "this", "is", "all", "u", "know", "?", "Prhaps", "if", "u", "take", "ur", "mind+head", "off", "human+animal", "waste", "maybe", "learn", "more"]
# ::lemmas ["so", "this", "be", "all", "u", "know", "?", "prhap", "if", "u", "take", "ur", "mind+head", "off", "human+animal", "waste", "maybe", "learn", "more"]
(c29-0 / multi-sentence
       :snt1 (c29-17 / cause-01
                     :ARG1 (c29-4 / all
                                  :ARG1-of (c29-15 / know-01
                                                   :ARG0 (c29-16 / you))
                                  :domain (c29-19 / this)))
       :snt2 (c29-5 / hope-01
                    :ARG0 (c29-12 / i)
                    :ARG1 (c29-2 / possible-01
                                 :ARG1 (c29-6 / learn-01
                                              :ARG0 (c29-18 / you)
                                              :ARG1-of (c29-3 / have-quant-91
                                                              :ARG3 (c29-9 / more)))
                                 :condition (c29-14 / take-01
                                                    :ARG0 c29-18
                                                    :ARG1 (c29-11 / and
                                                                  :op1 (c29-7 / mind
                                                                              :poss c29-18)
                                                                  :op2 (c29-1 / head
                                                                              :part-of (c29-13 / human))
                                                                  :op3 (c29-10 / waste
                                                                               :source (c29-8 / animal)))
                                                    :ARG2 c29-18))))

# ::snt I have read. He must have had syphilis that would explain the degeneration of his mind.
# ::tokens ["I", "have", "read", ".", "He", "must", "have", "had", "syphilis", "that", "would", "explain", "the", "degeneration", "of", "his", "mind", "."]
# ::lemmas ["i", "have", "read", ".", "he", "must", "have", "have", "syphili", "that", "would", "explain", "the", "degeneration", "of", "his", "mind", "."]
(c30-2 / multi-sentence
       :snt1 (c30-8 / read-01
                    :ARG0 (c30-4 / i))
       :snt2 (c30-10 / infer-01
                     :ARG1 (c30-0 / have-03
                                  :ARG0 (c30-11 / he)
                                  :ARG1 (c30-9 / disease
                                               :name (c30-5 / name
                                                            :op1 "syphilis")
                                               :ARG0-of (c30-3 / explain-01
                                                               :ARG1 (c30-1 / degenerate-01
                                                                            :ARG1 (c30-7 / mind
                                                                                         :poss (c30-6 / he))))))))

# ::snt They're misunderstood, go a Mosk &amp; prostrate U Infidel snort
# ::tokens ["They", "'re", "misunderstood", ",", "go", "a", "Mosk", "&", "amp", ";", "prostrate", "U", "Infidel", "snort"]
# ::lemmas ["they", "be", "misunderstood", ",", "go", "a", "Mosk", "&", "amp", ";", "prostrate", "U", "Infidel", "snort"]
(c31-1 / multi-sentence
       :snt1 (c31-6 / misunderstand-01
                    :ARG1 (c31-11 / they))
       :snt2 (c31-8 / go-03
                    :ARG0 (c31-0 / you)
                    :ARG1 (c31-13 / and
                                  :op1 (c31-2 / ethnic-group
                                              :name (c31-4 / name
                                                           :op1 "Mosk"))
                                  :op2 (c31-3 / amp))
                    :mode imperative)
       :snt3 (c31-7 / prostrate-01
                    :ARG0 (c31-9 / you)
                    :ARG1 (c31-10 / snort-01
                                  :ARG0 (c31-12 / person
                                                :name (c31-5 / name
                                                             :op1 "U"
                                                             :op2 "Infidel")))
                    :mode imperative))

# ::snt I read about him and the Quran,
# ::tokens ["I", "read", "about", "him", "and", "the", "Quran", ","]
# ::lemmas ["i", "read", "about", "he", "and", "the", "Quran", ","]
(c32-4 / read-01
       :ARG0 (c32-2 / i)
       :ARG3 (c32-5 / and
                    :op1 (c32-0 / he)
                    :op2 (c32-1 / book
                                :name (c32-3 / name
                                             :op1 "Quran"))))

# ::snt Starts out all peace then gets violent and more Perversions no wonder he needed body guards.
# ::tokens ["Starts", "out", "all", "peace", "then", "gets", "violent", "and", "more", "Perversions", "no", "wonder", "he", "needed", "body", "guards", "."]
# ::lemmas ["start", "out", "all", "peace", "then", "get", "violent", "and", "more", "perversion", "no", "wonder", "he", "need", "body", "guard", "."]
(c33-3 / multi-sentence
       :snt1 (c33-14 / start-out-05
                     :ARG0 (c33-0 / he)
                     :ARG1 (c33-8 / peace
                                  :mod (c33-16 / all)))
       :snt2 (c33-5 / and
                    :op1 (c33-11 / get-03
                                 :ARG1 (c33-2 / he)
                                 :ARG2 (c33-7 / violent))
                    :op2 (c33-15 / pervert-01
                                 :ARG1-of (c33-9 / have-quant-91
                                                 :ARG3 (c33-10 / more)))
                    :ARG0-of (c33-12 / cause-01
                                     :ARG1 (c33-1 / wonder-02
                                                  :ARG1 (c33-6 / need-01
                                                               :ARG0 c33-2
                                                               :ARG1 (c33-13 / guard-01
                                                                             :ARG1 (c33-4 / body)))
                                                  :polarity -))))

# ::snt Its Turn the other cheek &amp; let he who is without sin cast the first stone
# ::tokens ["Its", "Turn", "the", "other", "cheek", "&", "amp", ";", "let", "he", "who", "is", "without", "sin", "cast", "the", "first", "stone"]
# ::lemmas ["its", "turn", "the", "other", "cheek", "&", "amp", ";", "let", "he", "who", "be", "without", "sin", "cast", "the", "first", "stone"]
(c34-3 / multi-sentence
       :snt1 (c34-11 / turn-01
                     :ARG0 (c34-1 / you)
                     :ARG1 (c34-8 / cheek
                                  :mod (c34-5 / other))
                     :mode imperative)
       :snt2 (c34-2 / let-01
                    :ARG0 (c34-9 / you)
                    :ARG1 (c34-7 / cast-01
                                 :ARG0 (c34-0 / he
                                              :ARG0-of (c34-10 / sin-01
                                                               :polarity -))
                                 :ARG1 (c34-6 / stone
                                              :ord (c34-4 / ordinal-entity
                                                          :value 1)))
                    :mode imperative))

# ::snt politicians are manufactured in the same "assembly line" across the world.Can't call spade a spade
# ::tokens ["politicians", "are", "manufactured", "in", "the", "same", "\"", "assembly", "line", "\"", "across", "the", "world", ".", "Can't", "call", "spade", "a", "spade"]
# ::lemmas ["politician", "be", "manufacture", "in", "the", "same", "\"", "assembly", "line", "\"", "across", "the", "world", ".", "can't", "call", "spade", "a", "spade"]
(c35-2 / multi-sentence
       :snt1 (c35-5 / manufacture-01
                    :ARG1 (c35-6 / politician)
                    :location (c35-1 / line
                                     :location-of (c35-10 / assemble-01)
                                     :ARG1-of (c35-8 / same-01))
                    :path (c35-4 / across
                                 :op1 (c35-0 / world)))
       :snt2 (c35-9 / possible-01
                    :ARG1 (c35-7 / call-01
                                 :ARG1 (c35-3 / spade
                                              :ARG2-of c35-7))
                    :polarity -))

# ::snt r u pro-Israel Zionist Jew?
# ::tokens ["r", "u", "pro", "-", "Israel", "Zionist", "Jew", "?"]
# ::lemmas ["r", "u", "pro", "-", "Israel", "Zionist", "Jew", "?"]
(c36-1 / favor-01
       :ARG0 (c36-0 / you)
       :ARG1 (c36-4 / person
                    :mod (c36-5 / religious-group
                                :name (c36-2 / name
                                             :op1 "Zionism")
                                :mod-of c36-4)
                    :name (c36-3 / name
                                 :op1 "Jew"))
       :polarity (c36-6 / amr-unknown))

# ::snt what r u
# ::tokens ["what", "r", "u"]
# ::lemmas ["what", "r", "u"]
(c37-1 / amr-unknown
       :ARG1-of (c37-0 / request-confirmation-91))

# ::snt He won't get the chance! He will not run this Country.
# ::tokens ["He", "wo", "n't", "get", "the", "chance", "!", "He", "will", "not", "run", "this", "Country", "."]
# ::lemmas ["he", "will", "not", "get", "the", "chance", "!", "he", "will", "not", "run", "this", "Country", "."]
(c38-1 / multi-sentence
       :snt1 (c38-3 / chance-02
                    :ARG0 (c38-0 / he)
                    :polarity -)
       :snt2 (c38-2 / run-02
                    :ARG0 (c38-6 / he)
                    :ARG1 (c38-4 / country
                                 :mod (c38-5 / this))
                    :polarity -))

# ::snt I guess that means I won!
# ::tokens ["I", "guess", "that", "means", "I", "won", "!"]
# ::lemmas ["i", "guess", "that", "mean", "i", "win", "!"]
(c39-3 / guess-01
       :ARG0 (c39-2 / i)
       :ARG1 (c39-1 / mean-01
                    :ARG1 (c39-4 / that)
                    :ARG2 (c39-0 / win-01
                                 :ARG0 c39-2)))

# ::snt ISLAMIC TERRORIST ATTACK You Moron!! You go to Radical Mosques to get their votes!!
# ::tokens ["ISLAMIC", "TERRORIST", "ATTACK", "You", "Moron", "!", "!", "You", "go", "to", "Radical", "Mosques", "to", "get", "their", "votes", "!", "!"]
# ::lemmas ["ISLAMIC", "TERRORIST", "ATTACK", "You", "Moron", "!", "!", "you", "go", "to", "Radical", "Mosques", "to", "get", "their", "vote", "!", "!"]
(c40-2 / multi-sentence
       :snt1 (c40-12 / attack-01
                     :ARG0 (c40-11 / terrorist
                                   :mod (c40-7 / religious-group
                                               :name (c40-4 / name
                                                            :op1 "Islam")))
                     :ARG1 (c40-0 / you
                                  :mod (c40-6 / moron)))
       :snt2 (c40-9 / go-02
                    :ARG0 (c40-10 / you)
                    :ARG4 (c40-1 / mosque
                                 :ARG1-of (c40-3 / radical-02))
                    :purpose (c40-8 / get-01
                                    :ARG0 c40-10
                                    :ARG1 (c40-5 / vote-01
                                                 :ARG0 c40-1))))

# ::snt Maybe the People should get a class action Lawsuit going, it's the Governments job protect the People.
# ::tokens ["Maybe", "the", "People", "should", "get", "a", "class", "action", "Lawsuit", "going", ",", "it", "'s", "the", "Governments", "job", "protect", "the", "People", "."]
# ::lemmas ["maybe", "the", "People", "should", "get", "a", "class", "action", "Lawsuit", "go", ",", "it", "be", "the", "Governments", "job", "protect", "the", "People", "."]
(c41-5 / contrast-01
       :ARG1 (c41-3 / possible-01
                    :ARG1 (c41-4 / recommend-01
                                 :ARG1 (c41-6 / get-01
                                              :ARG0 (c41-10 / people)
                                              :ARG1 (c41-9 / sue-02
                                                           :mod (c41-7 / class-action)))))
       :ARG2 (c41-1 / protect-01
                    :ARG0 (c41-0 / job
                                 :poss (c41-8 / government-organization
                                              :ARG0-of (c41-2 / govern-01)))
                    :ARG1 c41-10))

# ::snt which is an insult to dunces everywhere...
# ::tokens ["which", "is", "an", "insult", "to", "dunces", "everywhere", "..."]
# ::lemmas ["which", "be", "an", "insult", "to", "dunce", "everywhere", "..."]
(c42-3 / insult-01
       :ARG0 (c42-2 / it)
       :ARG1 (c42-1 / dunce
                    :location (c42-0 / everywhere)))

# ::snt how did you know?
# ::tokens ["how", "did", "you", "know", "?"]
# ::lemmas ["how", "do", "you", "know", "?"]
(c43-1 / know-01
       :ARG0 (c43-0 / you)
       :manner (c43-2 / amr-unknown))

# ::snt Shame on SUN columnist Fatah using Paris shooting to attack Trudeau
# ::tokens ["Shame", "on", "SUN", "columnist", "Fatah", "using", "Paris", "shooting", "to", "attack", "Trudeau"]
# ::lemmas ["shame", "on", "SUN", "columnist", "Fatah", "use", "Paris", "shoot", "to", "attack", "Trudeau"]
(c44-10 / shame-01
        :ARG2 (c44-1 / use-01
                     :ARG0 (c44-5 / person
                                  :name (c44-3 / name
                                               :op1 "Fatah")
                                  :ARG0-of (c44-0 / have-org-role-91
                                                  :ARG1 (c44-4 / newspaper
                                                               :name (c44-6 / name
                                                                            :op1 "SUN"))
                                                  :ARG2 (c44-7 / columnist)))
                     :ARG1 (c44-2 / shoot-02
                                  :location (c44-8 / city
                                                   :name (c44-9 / name
                                                                :op1 "Paris")))
                     :ARG2 (c44-12 / attack-01
                                   :ARG0 c44-5
                                   :ARG1 (c44-11 / person
                                                 :name (c44-13 / name
                                                               :op1 "Trudeau")))))

# ::snt u continue use degrading wrds prove ur point not intilectually hve u read about him
# ::tokens ["u", "continue", "use", "degrading", "wrds", "prove", "ur", "point", "not", "intilectually", "hve", "u", "read", "about", "him"]
# ::lemmas ["u", "continue", "use", "degrading", "wrd", "prove", "ur", "point", "not", "intilectually", "hve", "u", "read", "about", "he"]
(c45-10 / and
        :op1 (c45-7 / continue-01
                    :ARG0 (c45-2 / you)
                    :ARG1 (c45-3 / use-01
                                 :ARG0 c45-2
                                 :ARG1 (c45-1 / wrd
                                              :ARG0-of (c45-6 / degrade-01))))
        :op2 (c45-5 / prove-01
                    :ARG0 c45-2
                    :ARG1 (c45-9 / point-04
                                 :ARG0 c45-2)
                    :manner (c45-4 / anal
                                   :polarity -))
        :op3 (c45-8 / read-01
                    :ARG0 c45-2
                    :ARG1 (c45-0 / he)))

# ::snt All those peaceful quotes no longer apply because of the later violent text over ride them.
# ::tokens ["All", "those", "peaceful", "quotes", "no", "longer", "apply", "because", "of", "the", "later", "violent", "text", "over", "ride", "them", "."]
# ::lemmas ["all", "those", "peaceful", "quote", "no", "long", "apply", "because", "of", "the", "later", "violent", "text", "over", "ride", "they", "."]
(c46-9 / apply-02
       :ARG1 (c46-1 / quote-01
                    :mod (c46-5 / peace)
                    :mod (c46-2 / all))
       :time (c46-3 / no-longer)
       :ARG1-of (c46-7 / cause-01
                       :ARG0 (c46-8 / text-01
                                    :mod (c46-4 / violent)
                                    :time (c46-6 / after
                                                 :op1 c46-1)
                                    :ARG0-of (c46-0 / override-01
                                                    :ARG1 c46-1))))

# ::snt I know where I am. I live in a Free country with Education, Free Thinking &amp; Free Speech..
# ::tokens ["I", "know", "where", "I", "am", ".", "I", "live", "in", "a", "Free", "country", "with", "Education", ",", "Free", "Thinking", "&", "amp", ";", "Free", "Speech", ".."]
# ::lemmas ["i", "know", "where", "i", "be", ".", "i", "live", "in", "a", "free", "country", "with", "Education", ",", "Free", "Thinking", "&", "amp", ";", "Free", "Speech", ".."]
(c48-2 / multi-sentence
       :snt1 (c48-14 / know-01
                     :ARG0 (c48-8 / i)
                     :ARG1 (c48-1 / location
                                  :location-of (c48-11 / i)))
       :snt2 (c48-12 / live-01
                     :ARG0 (c48-3 / i)
                     :location (c48-10 / country
                                       :ARG1-of (c48-4 / free-04)
                                       :ARG0-of (c48-0 / have-03
                                                       :ARG1 (c48-16 / and
                                                                     :op1 (c48-6 / educate-01)
                                                                     :op2 (c48-13 / think-01
                                                                                  :ARG1-of (c48-9 / free-04))
                                                                     :op3 (c48-7 / amp)
                                                                     :op4 (c48-15 / speak-01
                                                                                  :ARG3-of (c48-5 / free-04)))))))

# ::snt not as deep as you are shovelling it . Read some of your liberal luving tweets
# ::tokens ["not", "as", "deep", "as", "you", "are", "shovelling", "it", ".", "Read", "some", "of", "your", "liberal", "luving", "tweets"]
# ::lemmas ["not", "as", "deep", "as", "you", "be", "shovel", "it", ".", "read", "some", "of", "your", "liberal", "luving", "tweet"]
(c49-3 / multi-sentence
       :snt1 (c49-0 / have-degree-91
                    :ARG2 (c49-7 / deep-02)
                    :ARG3 (c49-4 / equal)
                    :ARG4 (c49-12 / shove-01
                                  :ARG0 (c49-1 / you)
                                  :ARG1 (c49-6 / it))
                    :polarity -)
       :snt2 (c49-8 / read-01
                    :ARG0 (c49-11 / you)
                    :ARG1 (c49-13 / tweet-01
                                  :ARG0 c49-11
                                  :ARG1-of (c49-9 / include-91
                                                  :ARG0 c49-11
                                                  :ARG0-of (c49-2 / liberate-01)
                                                  :ARG1-of (c49-10 / liberal-02)
                                                  :ARG2 c49-13)
                                  :quant (c49-5 / some))
                    :mode imperative))

# ::snt so what do u believe in &amp; who taught u this vulgar language?
# ::tokens ["so", "what", "do", "u", "believe", "in", "&", "amp", ";", "who", "taught", "u", "this", "vulgar", "language", "?"]
# ::lemmas ["so", "what", "do", "u", "believe", "in", "&", "amp", ";", "who", "teach", "u", "this", "vulgar", "language", "?"]
(c50-2 / multi-sentence
       :snt1 (c50-3 / believe-01
                    :ARG0 (c50-0 / you)
                    :ARG1 (c50-8 / amr-unknown))
       :snt2 (c50-7 / teach-01
                    :ARG0 (c50-4 / amr-unknown)
                    :ARG1 (c50-1 / language
                                 :mod (c50-5 / vulgar)
                                 :mod (c50-6 / this))
                    :ARG2 (c50-9 / you)))
