# ::snt what happend? :0
# ::tokens ["what", "happend", "?", ":0"]
# ::lemmas ["what", "happend", "?", ":0"]
(c1-0 / amr-unknown)

# ::snt What happened there?
# ::tokens ["What", "happened", "there", "?"]
# ::lemmas ["what", "happen", "there", "?"]
(c2-0 / event
      :polarity (c2-2 / amr-unknown)
      :location (c2-1 / there))

# ::snt someone is holding people hostage
# ::tokens ["someone", "is", "holding", "people", "hostage"]
# ::lemmas ["someone", "be", "hold", "people", "hostage"]
(c3-0 / hold-01
      :ARG0 (c3-2 / someone)
      :ARG1 (c3-3 / hostage
                  :domain (c3-1 / person)))

# ::snt r they ok
# ::tokens ["r", "they", "ok"]
# ::lemmas ["r", "they", "ok"]
(c4-0 / okay-04
      :ARG1 (c4-1 / they)
      :polarity (c4-2 / amr-unknown))

# ::snt : If you're from Sydney please stay safe! all the love. xx
# ::tokens [":", "If", "you", "'re", "from", "Sydney", "please", "stay", "safe", "!", "all", "the", "love", ".", "xx"]
# ::lemmas [":", "if", "you", "be", "from", "Sydney", "please", "stay", "safe", "!", "all", "the", "love", ".", "xx"]
(c5-2 / multi-sentence
      :snt1 (c5-7 / stay-01
                  :ARG1 (c5-0 / you)
                  :ARG3 (c5-4 / safe-01
                              :ARG1 c5-0)
                  :condition (c5-3 / be-from-91
                                   :ARG1 c5-0
                                   :ARG2 (c5-6 / city
                                               :name (c5-5 / name
                                                           :op1 "Sydney")))
                  :mode imperative
                  :polite +)
      :snt2 (c5-1 / love-01
                  :mod (c5-8 / all)))

# ::snt yea it's bad
# ::tokens ["yea", "it", "'s", "bad"]
# ::lemmas ["yea", "it", "be", "bad"]
(c6-1 / bad-07
      :ARG1 (c6-0 / it))

# ::snt What happened????
# ::tokens ["What", "happened", "?", "?", "?", "?"]
# ::lemmas ["what", "happen", "?", "?", "?", "?"]
(c7-0 / amr-unknown)

# ::snt in a cafe
# ::tokens ["in", "a", "cafe"]
# ::lemmas ["in", "a", "cafe"]
(c8-1 / they
      :location (c8-0 / cafe))

# ::snt Oh my god
# ::tokens ["Oh", "my", "god"]
# ::lemmas ["oh", "my", "god"]
(c9-1 / god
      :mod (c9-0 / oh)
      :poss (c9-2 / i))
