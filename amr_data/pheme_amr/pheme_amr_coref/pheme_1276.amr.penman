# ::snt : In case the world is wondering : what we're used to seeing on Parliament Hill cc
# ::tokens [":", "In", "case", "the", "world", "is", "wondering", ":", "what", "we", "'re", "used", "to", "seeing", "on", "Parliament", "Hill", "cc"]
# ::lemmas [":", "in", "case", "the", "world", "be", "wonder", ":", "what", "we", "be", "use", "to", "see", "on", "Parliament", "Hill", "cc"]
(c1-0 / have-condition-91
      :ARG2 (c1-1 / wonder-01
                  :ARG0 (c1-5 / world)
                  :ARG1 (c1-9 / thing
                              :ARG1-of (c1-8 / see-01
                                             :ARG0 (c1-3 / we)
                                             :ARG2-of (c1-2 / use-02
                                                            :ARG0 c1-3)
                                             :location (c1-7 / government-organization
                                                             :name (c1-6 / name
                                                                         :op1 "Parliament"
                                                                         :op2 "Hill")))))
      :mod (c1-4 / in-case))

# ::snt ha ha
# ::tokens ["ha", "ha"]
# ::lemmas ["ha", "ha"]
(c2-0 / ha
      :mode expressive)

# ::snt : If wondering, this is more what we're used to seeing on Parliament Hill.
# ::tokens [":", "If", "wondering", ",", "this", "is", "more", "what", "we", "'re", "used", "to", "seeing", "on", "Parliament", "Hill", "."]
# ::lemmas [":", "if", "wonder", ",", "this", "be", "more", "what", "we", "be", "use", "to", "see", "on", "Parliament", "Hill", "."]
(c3-0 / have-condition-91
      :ARG1 (c3-6 / resemble-01
                  :ARG1 (c3-10 / this)
                  :ARG2 (c3-8 / thing
                              :ARG1-of (c3-9 / see-01
                                             :ARG0 (c3-1 / we)
                                             :ARG2-of (c3-3 / use-02
                                                            :ARG0 c3-1)
                                             :location (c3-7 / government-organization
                                                             :name (c3-5 / name
                                                                         :op1 "Parliament"
                                                                         :op2 "Hill"))))
                  :mod (c3-2 / more))
      :ARG2 (c3-4 / wonder-01
                  :ARG0 c3-1))

# ::snt all of you are in my prayers
# ::tokens ["all", "of", "you", "are", "in", "my", "prayers"]
# ::lemmas ["all", "of", "you", "be", "in", "my", "prayer"]
(c4-1 / be-located-at-91
      :ARG1 (c4-0 / you
                  :mod (c4-4 / all))
      :ARG2 (c4-3 / pray-01
                  :ARG0 (c4-2 / i)
                  :ARG1 c4-0))

# ::snt had we more of this, we could prevent attacks ......
# ::tokens ["had", "we", "more", "of", "this", ",", "we", "could", "prevent", "attacks", "......"]
# ::lemmas ["have", "we", "more", "of", "this", ",", "we", "could", "prevent", "attack", "......"]
(c5-3 / possible-01
      :ARG1 (c5-5 / prevent-01
                  :ARG0 (c5-1 / we)
                  :ARG1 (c5-6 / attack-01))
      :condition (c5-0 / have-03
                       :ARG0 c5-1
                       :ARG1 (c5-4 / this
                                   :mod (c5-2 / more))))

# ::snt one more thing harper will fuck up ... no doubt
# ::tokens ["one", "more", "thing", "harper", "will", "fuck", "up", "...", "no", "doubt"]
# ::lemmas ["one", "more", "thing", "harper", "will", "fuck", "up", "...", "no", "doubt"]
(c6-4 / thing
      :mod (c6-2 / more)
      :ARG1-of (c6-1 / fuck-up-02
                     :ARG0 (c6-0 / harper))
      :ARG1-of (c6-3 / doubt-01
                     :polarity -)
      :quant 1)

# ::snt Truth RT : In case the world is wondering, this is more what were used to seeing on Parliament Hill.
# ::tokens ["Truth", "RT", ":", "In", "case", "the", "world", "is", "wondering", ",", "this", "is", "more", "what", "were", "used", "to", "seeing", "on", "Parliament", "Hill", "."]
# ::lemmas ["truth", "RT", ":", "in", "case", "the", "world", "be", "wonder", ",", "this", "be", "more", "what", "be", "use", "to", "see", "on", "Parliament", "Hill", "."]
(c7-11 / say-01
       :ARG1 (c7-0 / have-mod-91
                   :ARG1 (c7-12 / this)
                   :ARG2 (c7-10 / thing
                                :ARG1-of (c7-5 / see-01
                                               :ARG0 (c7-1 / world)
                                               :ARG2-of (c7-3 / use-02)
                                               :location (c7-4 / building
                                                               :name (c7-7 / name
                                                                           :op1 "Parliament"
                                                                           :op2 "Hill"))))
                   :mod (c7-2 / more)
                   :condition (c7-6 / wonder-01
                                    :ARG0 c7-1))
       :ARG2 (c7-9 / publication
                   :name (c7-8 / name
                               :op1 "Truth"
                               :op2 "RT")))

# ::snt that's fucked up
# ::tokens ["that", "'s", "fucked", "up"]
# ::lemmas ["that", "be", "fuck", "up"]
(c8-0 / fuck-up-02
      :ARG1 (c8-1 / that))

# ::snt NIGHTMARE OF TERRORISM IN CANADA
# ::tokens ["NIGHTMARE", "OF", "TERRORISM", "IN", "CANADA"]
# ::lemmas ["NIGHTMARE", "of", "TERRORISM", "in", "CANADA"]
(c9-0 / warn-01
      :ARG1 (c9-4 / terrorism)
      :location (c9-3 / country
                      :name (c9-2 / name
                                  :op1 "Canada"))
      :quant (c9-1 / multiple))

# ::snt In case the world is wondering this is what we're used to seeing on Parliament Hill
# ::tokens ["In", "case", "the", "world", "is", "wondering", "this", "is", "what", "we", "'re", "used", "to", "seeing", "on", "Parliament", "Hill"]
# ::lemmas ["in", "case", "the", "world", "be", "wonder", "this", "be", "what", "we", "be", "use", "to", "see", "on", "Parliament", "Hill"]
(c10-0 / have-condition-91
       :ARG2 (c10-1 / wonder-01
                    :ARG0 (c10-5 / world)
                    :ARG1 (c10-9 / thing
                                 :ARG1-of (c10-8 / see-01
                                                 :ARG0 (c10-3 / we)
                                                 :ARG2-of (c10-2 / use-02
                                                                 :ARG0 c10-3)
                                                 :location (c10-4 / building
                                                                  :name (c10-6 / name
                                                                               :op1 "Parliament"
                                                                               :op2 "Hill")))
                                 :domain (c10-7 / this))))

# ::snt are all those women exercising on a mat? Doesn't that constitute a structure? Call the Police!
# ::tokens ["are", "all", "those", "women", "exercising", "on", "a", "mat", "?", "Does", "n't", "that", "constitute", "a", "structure", "?", "Call", "the", "Police", "!"]
# ::lemmas ["be", "all", "those", "woman", "exercise", "on", "a", "mat", "?", "do", "not", "that", "constitute", "a", "structure", "?", "call", "the", "police", "!"]
(c11-2 / multi-sentence
       :snt1 (c11-3 / exercise-01
                    :polarity (c11-12 / amr-unknown)
                    :ARG0 (c11-0 / woman
                                 :mod (c11-4 / all)
                                 :mod (c11-11 / that))
                    :location (c11-5 / mat))
       :snt2 (c11-7 / constitute-01
                    :ARG0 (c11-9 / that)
                    :ARG1 (c11-10 / structure)
                    :polarity c11-12
                    :polarity -)
       :snt3 (c11-6 / call-02
                    :ARG0 (c11-1 / you)
                    :ARG1 (c11-8 / police)
                    :mode imperative))

# ::snt or this...
# ::tokens ["or", "this", "..."]
# ::lemmas ["or", "this", "..."]
(c12-0 / or
       :op2 (c12-1 / this))

# ::snt very very true !!!!
# ::tokens ["very", "very", "true", "!", "!", "!", "!"]
# ::lemmas ["very", "very", "true", "!", "!", "!", "!"]
(c13-1 / true-01
       :degree (c13-0 / very))

# ::snt ...and let's hope we can continue the practice.
# ::tokens ["...", "and", "let", "'s", "hope", "we", "can", "continue", "the", "practice", "."]
# ::lemmas ["...", "and", "let", "us", "hope", "we", "can", "continue", "the", "practice", "."]
(c14-5 / and
       :op2 (c14-0 / hope-01
                   :ARG0 (c14-1 / we)
                   :ARG1 (c14-2 / possible-01
                                :ARG1 (c14-3 / continue-01
                                             :ARG0 c14-1
                                             :ARG1 (c14-4 / practice-01
                                                          :ARG0 c14-1)))
                   :mode imperative))

# ::snt Used to play frisbee there w/friends when I was in high school to see how many tourists would take our photo.
# ::tokens ["Used", "to", "play", "frisbee", "there", "w", "/", "friends", "when", "I", "was", "in", "high", "school", "to", "see", "how", "many", "tourists", "would", "take", "our", "photo", "."]
# ::lemmas ["use", "to", "play", "frisbee", "there", "w", "/", "friend", "when", "i", "be", "in", "high", "school", "to", "see", "how", "many", "tourist", "would", "take", "our", "photo", "."]
(c15-8 / play-01
       :ARG0 (c15-5 / i)
       :ARG1 (c15-2 / frisbee)
       :ARG4 (c15-13 / person
                     :ARG0-of (c15-0 / have-rel-role-91
                                     :ARG1 c15-5
                                     :ARG2 (c15-6 / friend)))
       :location (c15-12 / there)
       :time (c15-14 / high-school)
       :purpose (c15-10 / see-01
                        :ARG0 c15-5
                        :ARG1 (c15-7 / number
                                     :quant-of (c15-4 / person
                                                      :ARG0-of (c15-9 / tour-01)
                                                      :ARG0-of (c15-11 / photograph-01
                                                                       :ARG1 (c15-1 / we)))))
       :time (c15-3 / use-03))

# ::snt Need to be sure that we when all this is over.
# ::tokens ["Need", "to", "be", "sure", "that", "we", "when", "all", "this", "is", "over", "."]
# ::lemmas ["need", "to", "be", "sure", "that", "we", "when", "all", "this", "be", "over", "."]
(c16-3 / need-01
       :ARG0 (c16-0 / we)
       :ARG1 (c16-2 / ensure-01
                    :ARG0 c16-0
                    :time (c16-1 / over-01
                                 :ARG1 (c16-4 / this
                                              :mod (c16-5 / all)))))

# ::snt Yes! THIS is our Ottawa.
# ::tokens ["Yes", "!", "THIS", "is", "our", "Ottawa", "."]
# ::lemmas ["yes", "!", "this", "be", "our", "Ottawa", "."]
(c18-3 / city
       :name (c18-0 / name
                    :op1 "Ottawa")
       :domain (c18-2 / this)
       :poss (c18-1 / we))

# ::snt Lol
# ::tokens ["Lol"]
# ::lemmas ["Lol"]
(c19-0 / laugh-01
       :manner (c19-1 / loud)
       :mode expressive)
