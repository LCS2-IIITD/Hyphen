# ::snt They did that with Iran bringing a terrorist shah into power. Didn't sting them then. In fact, they now have the besty mullahs
# ::tokens ["They", "did", "that", "with", "Iran", "bringing", "a", "terrorist", "shah", "into", "power", ".", "Did", "n't", "sting", "them", "then", ".", "In", "fact", ",", "they", "now", "have", "the", "besty", "mullahs"]
# ::lemmas ["they", "do", "that", "with", "Iran", "bring", "a", "terrorist", "shah", "into", "power", ".", "do", "not", "ste", "they", "then", ".", "in", "fact", ",", "they", "now", "have", "the", "besty", "mullah"]
(c1-0 / multi-sentence
      :snt1 (c1-2 / do-02
                  :ARG0 (c1-20 / they)
                  :ARG1 (c1-14 / that)
                  :ARG3 (c1-7 / bring-01
                              :ARG0 (c1-18 / country
                                           :name (c1-9 / name
                                                       :op1 "Iran"))
                              :ARG1 (c1-3 / shah
                                          :mod (c1-13 / terrorist))
                              :ARG2 (c1-1 / power)))
      :snt2 (c1-8 / sting-01
                  :ARG1 (c1-16 / they)
                  :time (c1-19 / then)
                  :polarity -)
      :snt3 (c1-5 / have-03
                  :ARG0 (c1-15 / they)
                  :ARG1 (c1-10 / mullah
                               :ARG1-of (c1-4 / have-degree-91
                                              :ARG2 (c1-11 / good-02
                                                           :ARG1 c1-10)
                                              :ARG3 (c1-6 / most)))
                  :mod (c1-12 / in-fact)
                  :time (c1-17 / now)))

# ::snt Well done you
# ::tokens ["Well", "done", "you"]
# ::lemmas ["well", "do", "you"]
(c2-0 / say-01
      :ARG1 (c2-2 / do-02
                  :ARG1-of (c2-1 / well-09))
      :ARG2 (c2-3 / you))

# ::snt and in Hat-Model- calls 's president a "Satan"
# ::tokens ["and", "in", "Hat", "-", "Model-", "calls", "'s", "president", "a", "\"", "Satan", "\""]
# ::lemmas ["and", "in", "Hat", "-", "Model-", "call", "'s", "president", "a", "\"", "Satan", "\""]
(c3-8 / and
      :op2 (c3-4 / call-01
                 :ARG0 (c3-3 / person
                             :name (c3-2 / name
                                         :op1 "Hat-Model"))
                 :ARG1 (c3-7 / person
                             :ARG0-of (c3-0 / have-org-role-91
                                            :ARG2 (c3-1 / president)))
                 :ARG2 (c3-6 / person
                             :mod (c3-5 / Satan))))

# ::snt Who funded/armed/trained gunmen? Jeffrey Epstein also in CFR+Trilateral Commission
# ::tokens ["Who", "funded", "/", "armed", "/", "trained", "gunmen", "?", "Jeffrey", "Epstein", "also", "in", "CFR+Trilateral", "Commission"]
# ::lemmas ["who", "fund", "/", "armed", "/", "train", "gunman", "?", "Jeffrey", "Epstein", "also", "in", "CFR+Trilateral", "Commission"]
(c4-2 / multi-sentence
      :snt1 (c4-11 / slash
                   :op1 (c4-1 / fund-01
                              :ARG0 (c4-13 / amr-unknown)
                              :ARG1 (c4-10 / gunman))
                   :op2 (c4-5 / arm-01
                              :ARG0 c4-13
                              :ARG1 c4-10)
                   :op3 (c4-12 / train-01
                               :ARG0 c4-13
                               :ARG2 c4-10))
      :snt2 (c4-0 / have-org-role-91
                  :ARG0 (c4-8 / person
                              :name (c4-6 / name
                                          :op1 "Jeffrey"
                                          :op2 "Epstein"))
                  :ARG1 (c4-4 / organization
                              :name (c4-7 / name
                                          :op1 "CFR+Trilateral"
                                          :op2 "Commission"))
                  :ARG2 (c4-3 / officer
                              :mod (c4-9 / also))))

# ::snt precisely. It's a shame they never learnt from previous wars
# ::tokens ["precisely", ".", "It", "'s", "a", "shame", "they", "never", "learnt", "from", "previous", "wars"]
# ::lemmas ["precisely", ".", "it", "be", "a", "shame", "they", "never", "learn", "from", "previous", "war"]
(c5-2 / multi-sentence
      :snt1 (c5-4 / precise)
      :snt2 (c5-5 / shame-02
                  :ARG0 (c5-1 / learn-01
                              :ARG0 (c5-6 / they)
                              :ARG2 (c5-0 / war
                                          :time (c5-7 / previous))
                              :time (c5-3 / ever)
                              :polarity -)))

# ::snt Of course Samantha, but in are not , they them!
# ::tokens ["Of", "course", "Samantha", ",", "but", "in", "are", "not", ",", "they", "them", "!"]
# ::lemmas ["of", "course", "Samantha", ",", "but", "in", "be", "not", ",", "they", "they", "!"]
(c6-3 / contrast-01
      :ARG1 (c6-2 / person
                  :name (c6-1 / name
                              :op1 "Samantha")
                  :mod (c6-0 / of-course))
      :ARG2 (c6-4 / they
                  :domain c6-2
                  :polarity -))

# ::snt I was against trying to Mossad the Assad.
# ::tokens ["I", "was", "against", "trying", "to", "Mossad", "the", "Assad", "."]
# ::lemmas ["i", "be", "against", "try", "to", "Mossad", "the", "Assad", "."]
(c7-0 / oppose-01
      :ARG0 (c7-1 / i)
      :ARG1 (c7-4 / try-01
                  :ARG1 (c7-3 / person
                              :name (c7-2 / name
                                          :op1 "Mossad"
                                          :op2 "Assad"))))

# ::snt pwnt
# ::tokens ["pwnt"]
# ::lemmas ["pwnt"]
(c8-1 / person
      :name (c8-0 / name
                  :op1 "nt"))

# ::snt why can't Syria ask for Russian help to fight terrorist intruders?
# ::tokens ["why", "ca", "n't", "Syria", "ask", "for", "Russian", "help", "to", "fight", "terrorist", "intruders", "?"]
# ::lemmas ["why", "can", "not", "Syria", "ask", "for", "Russian", "help", "to", "fight", "terrorist", "intruder", "?"]
(c9-8 / cause-01
      :ARG0 (c9-11 / amr-unknown)
      :ARG1 (c9-6 / possible-01
                  :ARG1 (c9-2 / ask-02
                              :ARG0 (c9-7 / country
                                          :name (c9-4 / name
                                                      :op1 "Syria"))
                              :ARG1 (c9-0 / help-01
                                          :ARG0 (c9-9 / country
                                                      :name (c9-5 / name
                                                                  :op1 "Russia"))
                                          :ARG1 (c9-1 / fight-01
                                                      :ARG1 (c9-3 / intrude-01
                                                                  :ARG0 (c9-10 / terrorist)))
                                          :ARG2 c9-7))
                  :polarity -))

# ::snt hear hear
# ::tokens ["hear", "hear"]
# ::lemmas ["hear", "hear"]
(c10-0 / hear-01
       :mod (c10-1 / hear-01))

# ::snt Syria should be nuked and be done with it!
# ::tokens ["Syria", "should", "be", "nuked", "and", "be", "done", "with", "it", "!"]
# ::lemmas ["Syria", "should", "be", "nuke", "and", "be", "do", "with", "it", "!"]
(c11-3 / recommend-01
       :ARG1 (c11-5 / and
                    :op1 (c11-1 / nuke-01
                                :ARG1 (c11-4 / country
                                             :name (c11-2 / name
                                                          :op1 "Syria")))
                    :op2 (c11-0 / be-done-08
                                :ARG0 c11-4
                                :ARG1 c11-1)))

# ::snt How many weapons fuelling conflict sold by Prince Andrew? Assad almost given knighthood
# ::tokens ["How", "many", "weapons", "fuelling", "conflict", "sold", "by", "Prince", "Andrew", "?", "Assad", "almost", "given", "knighthood"]
# ::lemmas ["how", "many", "weapon", "fuel", "conflict", "sell", "by", "Prince", "Andrew", "?", "Assad", "almost", "give", "knighthood"]
(c12-2 / multi-sentence
       :snt1 (c12-0 / weapon
                    :quant (c12-12 / amr-unknown)
                    :ARG0-of (c12-1 / fuel-01
                                    :ARG1 (c12-7 / conflict-01))
                    :ARG1-of (c12-9 / sell-01
                                    :ARG0 (c12-6 / person
                                                 :name (c12-4 / name
                                                              :op1 "Prince"
                                                              :op2 "Andrew"))))
       :snt2 (c12-8 / give-01
                    :ARG1 (c12-10 / knighthood)
                    :ARG2 (c12-11 / person
                                  :name (c12-5 / name
                                               :op1 "Assad"))
                    :mod (c12-3 / almost)))

# ::snt what governments say to each other will never explain to me how such acts are meant to improve anything.
# ::tokens ["what", "governments", "say", "to", "each", "other", "will", "never", "explain", "to", "me", "how", "such", "acts", "are", "meant", "to", "improve", "anything", "."]
# ::lemmas ["what", "government", "say", "to", "each", "other", "will", "never", "explain", "to", "i", "how", "such", "act", "be", "mean", "to", "improve", "anything", "."]
(c13-4 / explain-01
       :ARG0 (c13-13 / thing
                     :ARG1-of (c13-12 / say-01
                                      :ARG0 (c13-9 / government-organization
                                                   :ARG0-of (c13-8 / govern-01))
                                      :ARG2 (c13-3 / other
                                                   :mod (c13-2 / each))))
       :ARG1 (c13-11 / thing
                     :manner-of (c13-1 / mean-02
                                       :ARG1 (c13-14 / act-02
                                                     :mod (c13-5 / such))
                                       :ARG2 (c13-7 / improve-01
                                                    :ARG0 c13-14
                                                    :ARG1 (c13-6 / anything))))
       :ARG2 (c13-10 / i)
       :time (c13-0 / ever)
       :polarity -)

# ::snt West need to stop funding wars against these countries and invading their space. Problem solved
# ::tokens ["West", "need", "to", "stop", "funding", "wars", "against", "these", "countries", "and", "invading", "their", "space", ".", "Problem", "solved"]
# ::lemmas ["west", "need", "to", "stop", "fund", "war", "against", "these", "country", "and", "invade", "their", "space", ".", "Problem", "solve"]
(c14-2 / multi-sentence
       :snt1 (c14-7 / need-01
                    :ARG0 (c14-0 / world-region
                                 :name (c14-8 / name
                                              :op1 "West"))
                    :ARG1 (c14-11 / stop-01
                                  :ARG0 c14-0
                                  :ARG1 (c14-13 / and
                                                :op1 (c14-1 / fund-01
                                                            :ARG0 c14-0
                                                            :ARG1 (c14-6 / war-01
                                                                         :ARG1 (c14-10 / country
                                                                                       :mod (c14-12 / this))))
                                                :op2 (c14-5 / invade-01
                                                            :ARG0 c14-0
                                                            :ARG1 (c14-4 / space
                                                                         :poss c14-0)))))
       :snt2 (c14-3 / solve-01
                    :ARG1 (c14-9 / problem)))

# ::snt Unless we, the start to hold them accountable they won't learn &amp; won't stop us Samantha!
# ::tokens ["Unless", "we", ",", "the", "start", "to", "hold", "them", "accountable", "they", "wo", "n't", "learn", "&", "amp", ";", "wo", "n't", "stop", "us", "Samantha", "!"]
# ::lemmas ["unless", "we", ",", "the", "start", "to", "hold", "they", "accountable", "they", "will", "not", "learn", "&", "amp", ";", "will", "not", "stop", "we", "Samantha", "!"]
(c15-9 / say-01
       :ARG0 (c15-6 / i)
       :ARG1 (c15-11 / and
                     :op1 (c15-2 / learn-01
                                 :ARG0 (c15-10 / they)
                                 :polarity -)
                     :op2 (c15-0 / help-01
                                 :ARG0 c15-10
                                 :polarity -)
                     :condition (c15-4 / start-01
                                       :ARG0 (c15-1 / we)
                                       :ARG1 (c15-3 / hold-02
                                                    :ARG0 c15-1
                                                    :ARG1 (c15-5 / accountable-02
                                                                 :ARG0 c15-10))
                                       :polarity -))
       :ARG2 (c15-8 / person
                    :name (c15-7 / name
                                 :op1 "Samantha")))
