# ::snt Red's BBQ I'm sure appreciates the free advertisement
# ::tokens ["Red", "'s", "BBQ", "I", "'m", "sure", "appreciates", "the", "free", "advertisement"]
# ::lemmas ["Red", "'s", "BBQ", "i", "be", "sure", "appreciate", "the", "free", "advertisement"]
(c1-3 / sure-02
      :ARG0 (c1-2 / i)
      :ARG1 (c1-4 / appreciate-02
                  :ARG0 c1-2
                  :ARG1 (c1-1 / advertise-01
                              :ARG1-of (c1-0 / free-03))))

# ::snt Better Family life out here in the community offering therapy for the residents of Canfield
# ::tokens ["Better", "Family", "life", "out", "here", "in", "the", "community", "offering", "therapy", "for", "the", "residents", "of", "Canfield"]
# ::lemmas ["Better", "Family", "life", "out", "here", "in", "the", "community", "offer", "therapy", "for", "the", "resident", "of", "Canfield"]
(c2-4 / offer-01
      :ARG0 (c2-1 / life
                  :mod (c2-2 / family
                             :ARG1-of (c2-0 / have-degree-91
                                            :ARG2 (c2-9 / good-02
                                                        :ARG1 c2-1)
                                            :ARG3 (c2-3 / more)))
                  :location (c2-12 / here
                                   :op1 (c2-8 / community)))
      :ARG1 (c2-11 / therapy)
      :ARG3 (c2-6 / person
                  :ARG0-of (c2-7 / reside-01
                                 :ARG1 (c2-10 / city
                                              :name (c2-5 / name
                                                          :op1 "Canfield")))))

# ::snt how do I help? I really want to, any way I can.
# ::tokens ["how", "do", "I", "help", "?", "I", "really", "want", "to", ",", "any", "way", "I", "can", "."]
# ::lemmas ["how", "do", "i", "help", "?", "i", "really", "want", "to", ",", "any", "way", "i", "can", "."]
(c3-2 / multi-sentence
      :snt1 (c3-0 / help-01
                  :ARG0 (c3-4 / i)
                  :manner (c3-9 / amr-unknown))
      :snt2 (c3-1 / want-01
                  :ARG0 (c3-8 / i)
                  :ARG1 c3-0
                  :ARG1-of (c3-7 / real-04)
                  :manner (c3-5 / way
                                :mod (c3-3 / any)
                                :manner-of (c3-6 / possible-01
                                                 :ARG1 c3-0))))
