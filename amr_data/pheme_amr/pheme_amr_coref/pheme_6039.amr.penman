# ::snt Omigish My Capitol city will never be the same!
# ::tokens ["Omigish", "My", "Capitol", "city", "will", "never", "be", "the", "same", "!"]
# ::lemmas ["omigish", "my", "Capitol", "city", "will", "never", "be", "the", "same", "!"]
(c1-5 / same-01
      :ARG1 (c1-4 / city
                  :name (c1-3 / name
                              :op1 "Capitol")
                  :poss (c1-2 / i))
      :time (c1-1 / ever)
      :mod (c1-0 / omigish)
      :polarity -
      :mode expressive)

# ::snt multiple shooting in Ottawa parliament
# ::tokens ["multiple", "shooting", "in", "Ottawa", "parliament"]
# ::lemmas ["multiple", "shooting", "in", "Ottawa", "parliament"]
(c2-0 / shoot-02
      :quant (c2-2 / multiple)
      :location (c2-3 / government-organization
                      :name (c2-1 / name
                                  :op1 "Ottawa"
                                  :op2 "Parliament")))

# ::snt ": Global News camera man reporting shots fired by Chateau Laurier hotel
# ::tokens ["\"", ":", "Global", "News", "camera", "man", "reporting", "shots", "fired", "by", "Chateau", "Laurier", "hotel"]
# ::lemmas ["\"", ":", "Global", "News", "camera", "man", "report", "shot", "fire", "by", "Chateau", "Laurier", "hotel"]
(c3-6 / report-01
      :ARG0 (c3-2 / man
                  :ARG0-of (c3-0 / have-org-role-91
                                 :ARG1 (c3-3 / broadcast-program
                                             :name (c3-4 / name
                                                         :op1 "Global"
                                                         :op2 "News"))
                                 :ARG3 (c3-7 / camera)))
      :ARG1 (c3-8 / shoot-02
                  :ARG1-of (c3-1 / fire-01
                                 :ARG0 (c3-9 / hotel
                                             :name (c3-5 / name
                                                         :op1 "Chateau"
                                                         :op2 "Laurier")))))

# ::snt warning shots as reported on CNN to get people to stay away to sort people out
# ::tokens ["warning", "shots", "as", "reported", "on", "CNN", "to", "get", "people", "to", "stay", "away", "to", "sort", "people", "out"]
# ::lemmas ["warning", "shot", "as", "report", "on", "CNN", "to", "get", "people", "to", "stay", "away", "to", "sort", "people", "out"]
(c4-7 / shoot-01
      :ARG0-of (c4-0 / warn-01)
      :ARG1-of (c4-5 / report-01
                     :ARG0 (c4-4 / publication
                                 :name (c4-3 / name
                                             :op1 "CNN")))
      :purpose (c4-6 / get-04
                     :ARG1 (c4-2 / stay-01
                                 :ARG1 (c4-8 / person)
                                 :ARG3 (c4-9 / away)
                                 :purpose (c4-1 / sort-out-02
                                                :ARG1 c4-8)))
      :ARG0-of c4-6)

# ::snt Global News camera man reporting shots fired by Chateau Laurier hotel
# ::tokens ["Global", "News", "camera", "man", "reporting", "shots", "fired", "by", "Chateau", "Laurier", "hotel"]
# ::lemmas ["Global", "News", "camera", "man", "report", "shot", "fire", "by", "Chateau", "Laurier", "hotel"]
(c5-6 / report-01
      :ARG0 (c5-5 / person
                  :ARG0-of (c5-0 / have-org-role-91
                                 :ARG1 (c5-2 / broadcast-program
                                             :name (c5-3 / name
                                                         :op1 "Global"
                                                         :op2 "News"))
                                 :ARG2 (c5-7 / cameraman)))
      :ARG1 (c5-8 / shoot-02
                  :ARG1-of (c5-1 / fire-01
                                 :ARG0 (c5-9 / hotel
                                             :name (c5-4 / name
                                                         :op1 "Chateau"
                                                         :op2 "Laurier")))))
