# ::snt he gave like media interviews before he was even questioned. He wasn't hiding.
# ::tokens ["he", "gave", "like", "media", "interviews", "before", "he", "was", "even", "questioned", ".", "He", "was", "n't", "hiding", "."]
# ::lemmas ["he", "give", "like", "medium", "interview", "before", "he", "be", "even", "question", ".", "he", "be", "not", "hide", "."]
(c1-1 / multi-sentence
      :snt1 (c1-9 / give-01
                  :ARG0 (c1-0 / he)
                  :ARG1-of (c1-8 / resemble-01
                                 :ARG2 (c1-5 / interview-01
                                             :ARG0 (c1-7 / media)
                                             :ARG1 c1-0
                                             :time (c1-2 / before
                                                         :op1 (c1-4 / question-01
                                                                    :ARG2 c1-0
                                                                    :mod (c1-3 / even))))))
      :snt2 (c1-10 / hide-01
                   :ARG0 (c1-6 / he)
                   :polarity -))

# ::snt Amen. Why isnt he in Jail ? Because the police report is a load of crap
# ::tokens ["Amen", ".", "Why", "is", "nt", "he", "in", "Jail", "?", "Because", "the", "police", "report", "is", "a", "load", "of", "crap"]
# ::lemmas ["amen", ".", "why", "be", "not", "he", "in", "Jail", "?", "because", "the", "police", "report", "be", "a", "load", "of", "crap"]
(c2-3 / multi-sentence
      :snt1 (c2-4 / man
                  :mode expressive)
      :snt2 (c2-6 / cause-01
                  :ARG0 (c2-11 / amr-unknown)
                  :ARG1 (c2-0 / jail-01
                              :ARG1 (c2-1 / he)
                              :polarity -))
      :snt3 (c2-5 / cause-01
                  :ARG0 (c2-10 / thing
                               :ARG1-of (c2-7 / report-01
                                              :ARG0 (c2-8 / police))
                               :mod (c2-2 / load)
                               :ARG1-of (c2-9 / crap-01))))

# ::snt Question of the day. They will tell you there were busy with the riot.
# ::tokens ["Question", "of", "the", "day", ".", "They", "will", "tell", "you", "there", "were", "busy", "with", "the", "riot", "."]
# ::lemmas ["question", "of", "the", "day", ".", "they", "will", "tell", "you", "there", "be", "busy", "with", "the", "riot", "."]
(c3-1 / multi-sentence
      :snt1 (c3-3 / question-01
                  :time (c3-4 / day))
      :snt2 (c3-7 / tell-01
                  :ARG0 (c3-6 / they)
                  :ARG1 (c3-2 / busy-01
                              :ARG1 (c3-5 / riot-01)
                              :ARG2 (c3-0 / you
                                          :ARG2-of c3-7))))

# ::snt and wait for day to speak to him
# ::tokens ["and", "wait", "for", "day", "to", "speak", "to", "him"]
# ::lemmas ["and", "wait", "for", "day", "to", "speak", "to", "he"]
(c4-5 / and
      :op2 (c4-1 / wait-01
                 :ARG2 (c4-3 / speak-01
                             :ARG2 (c4-0 / he))
                 :duration (c4-4 / temporal-quantity
                                 :unit (c4-2 / day)
                                 :quant 1)))

# ::snt Because they are making this up as they go!
# ::tokens ["Because", "they", "are", "making", "this", "up", "as", "they", "go", "!"]
# ::lemmas ["because", "they", "be", "make", "this", "up", "as", "they", "go", "!"]
(c5-1 / cause-01
      :ARG0 (c5-0 / make-up-10
                  :ARG0 (c5-4 / they)
                  :ARG1 (c5-3 / this)
                  :time (c5-2 / go-01
                              :ARG1 c5-4)))

# ::snt BOOM! Exactly.
# ::tokens ["BOOM", "!", "Exactly", "."]
# ::lemmas ["BOOM", "!", "exactly", "."]
(c6-1 / boom
      :mod (c6-0 / exact)
      :mode expressive)

# ::snt my exact thought. They had to discredit both of these kids so when they get to court they can cut away at their character. Ugh
# ::tokens ["my", "exact", "thought", ".", "They", "had", "to", "discredit", "both", "of", "these", "kids", "so", "when", "they", "get", "to", "court", "they", "can", "cut", "away", "at", "their", "character", ".", "Ugh"]
# ::lemmas ["my", "exact", "thought", ".", "they", "have", "to", "discredit", "both", "of", "these", "kid", "so", "when", "they", "get", "to", "court", "they", "can", "cut", "away", "at", "their", "character", ".", "ugh"]
(c7-0 / multi-sentence
      :snt1 (c7-15 / think-01
                   :ARG0 (c7-5 / i)
                   :ARG1 (c7-4 / exact))
      :snt2 (c7-3 / obligate-01
                  :ARG1 (c7-13 / they)
                  :ARG2 (c7-9 / discredit-01
                              :ARG0 c7-13
                              :ARG1 (c7-6 / kid
                                          :mod (c7-7 / this)
                                          :mod (c7-2 / both))
                              :purpose (c7-8 / possible-01
                                             :ARG1 (c7-10 / cut-away-04
                                                          :ARG0 c7-13
                                                          :ARG1 (c7-11 / character
                                                                       :poss c7-6)
                                                          :time (c7-12 / get-05
                                                                       :ARG1 c7-13
                                                                       :ARG2 (c7-14 / court))))))
      :snt3 (c7-1 / ugh
                  :mode expressive))

# ::snt when he was questioned, they would have arrested him.
# ::tokens ["when", "he", "was", "questioned", ",", "they", "would", "have", "arrested", "him", "."]
# ::lemmas ["when", "he", "be", "question", ",", "they", "would", "have", "arrest", "he", "."]
(c8-3 / arrest-01
      :ARG0 (c8-2 / they)
      :ARG1 (c8-0 / he)
      :time (c8-1 / question-01
                  :ARG2 c8-0))

# ::snt Exactly, I just said that.
# ::tokens ["Exactly", ",", "I", "just", "said", "that", "."]
# ::lemmas ["exactly", ",", "i", "just", "say", "that", "."]
(c9-3 / say-01
      :ARG0 (c9-2 / i)
      :ARG1 (c9-4 / that)
      :mod (c9-1 / exact)
      :time (c9-0 / just))

# ::snt n why did he focus in on mike brown. Why not the supposed robbery suspect standing right there.
# ::tokens ["n", "why", "did", "he", "focus", "in", "on", "mike", "brown", ".", "Why", "not", "the", "supposed", "robbery", "suspect", "standing", "right", "there", "."]
# ::lemmas ["n", "why", "do", "he", "focus", "in", "on", "mike", "brown", ".", "why", "not", "the", "suppose", "robbery", "suspect", "stand", "right", "there", "."]
(c10-2 / multi-sentence
       :snt1 (c10-1 / focus-01
                    :ARG0 (c10-0 / he)
                    :ARG2 (c10-8 / person
                                 :name (c10-7 / name
                                              :op1 "Mike"
                                              :op2 "Brown"))
                    :ARG1-of (c10-10 / cause-01
                                     :ARG0 (c10-14 / amr-unknown)))
       :snt2 (c10-9 / cause-01
                    :ARG0 (c10-5 / amr-unknown)
                    :ARG1 (c10-12 / stand-01
                                  :ARG1 c10-8
                                  :ARG2-of (c10-4 / suspect-01
                                                  :ARG1 (c10-11 / rob-01)
                                                  :ARG1-of (c10-3 / suppose-01))
                                  :polarity -)
                    :ARG2 (c10-13 / there
                                  :mod (c10-6 / right))))

# ::snt I asked the very same thing on facebook minutes ago.
# ::tokens ["I", "asked", "the", "very", "same", "thing", "on", "facebook", "minutes", "ago", "."]
# ::lemmas ["i", "ask", "the", "very", "same", "thing", "on", "facebook", "minute", "ago", "."]
(c11-11 / ask-01
        :ARG0 (c11-2 / i)
        :ARG1 (c11-10 / thing
                      :ARG1-of (c11-9 / same-01
                                      :degree (c11-4 / very)))
        :medium (c11-5 / publication
                       :name (c11-3 / name
                                    :op1 "Facebook"))
        :time (c11-1 / before
                     :op1 (c11-6 / now)
                     :quant (c11-0 / multiple
                                   :op1 (c11-8 / temporal-quantity
                                               :unit (c11-7 / minute)
                                               :quant 1))))

# ::snt Dorian wasn't on film roughing up the clerk.
# ::tokens ["Dorian", "was", "n't", "on", "film", "roughing", "up", "the", "clerk", "."]
# ::lemmas ["Dorian", "be", "not", "on", "film", "rough", "up", "the", "clerk", "."]
(c12-0 / film-01
       :ARG1 (c12-3 / rough-up-02
                    :ARG0 (c12-2 / person
                                 :name (c12-1 / name
                                              :op1 "Dorian"))
                    :ARG1 (c12-4 / clerk))
       :polarity -)

# ::snt oh believe me they getting warrant drafted now.
# ::tokens ["oh", "believe", "me", "they", "getting", "warrant", "drafted", "now", "."]
# ::lemmas ["oh", "believe", "i", "they", "get", "warrant", "draft", "now", "."]
(c13-2 / believe-01
       :ARG0 (c13-0 / you)
       :ARG1 (c13-4 / i)
       :mod (c13-3 / oh
                   :mode expressive)
       :topic (c13-6 / draft-01
                     :ARG0 (c13-7 / they)
                     :ARG1 (c13-1 / warrant)
                     :time (c13-5 / now))
       :mode imperative)

# ::snt Exactly what I was thinking...he gave interviews to media -4 days before even talking to police
# ::tokens ["Exactly", "what", "I", "was", "thinking", "...", "he", "gave", "interviews", "to", "media", "-4", "days", "before", "even", "talking", "to", "police"]
# ::lemmas ["exactly", "what", "i", "be", "think", "...", "he", "give", "interview", "to", "medium", "-4", "days", "before", "even", "talk", "to", "police"]
(c15-12 / think-01
        :ARG0 (c15-6 / i)
        :ARG1 (c15-10 / interview-01
                      :ARG0 (c15-0 / he)
                      :ARG1 (c15-1 / media)
                      :time (c15-3 / before
                                   :op1 (c15-11 / talk-01
                                                :ARG0 c15-0
                                                :ARG2 (c15-8 / police)
                                                :mod (c15-5 / even))
                                   :quant (c15-2 / up-to
                                                 :op1 (c15-7 / temporal-quantity
                                                             :unit (c15-9 / day)
                                                             :quant 4))))
        :manner (c15-4 / exact))

# ::snt Why wasn't this info released earlier? Now the situation is totally confusing and has heightened this tense problem
# ::tokens ["Why", "was", "n't", "this", "info", "released", "earlier", "?", "Now", "the", "situation", "is", "totally", "confusing", "and", "has", "heightened", "this", "tense", "problem"]
# ::lemmas ["why", "be", "not", "this", "info", "release", "earlier", "?", "now", "the", "situation", "be", "totally", "confusing", "and", "have", "heighten", "this", "tense", "problem"]
(c16-1 / multi-sentence
       :snt1 (c16-10 / cause-01
                     :ARG0 (c16-15 / amr-unknown)
                     :ARG1 (c16-9 / release-01
                                  :ARG1 (c16-5 / information
                                               :mod (c16-14 / this))
                                  :time (c16-2 / before)
                                  :polarity -))
       :snt2 (c16-4 / and
                    :op1 (c16-11 / confuse-01
                                 :ARG0 (c16-13 / situation)
                                 :degree (c16-12 / total)
                                 :time (c16-6 / now))
                    :op2 (c16-0 / heighten-01
                                :ARG0 c16-13
                                :ARG1 (c16-8 / problem
                                             :mod (c16-7 / tense)
                                             :mod (c16-3 / this)))))

# ::snt All of this over some stupid cigars
# ::tokens ["All", "of", "this", "over", "some", "stupid", "cigars"]
# ::lemmas ["all", "of", "this", "over", "some", "stupid", "cigar"]
(c17-4 / this
       :mod (c17-5 / all)
       :location (c17-0 / over
                        :op1 (c17-2 / cigar
                                    :mod (c17-3 / stupid)
                                    :quant (c17-1 / some))))
