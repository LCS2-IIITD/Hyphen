# ::snt thank u so much
# ::tokens ["thank", "u", "so", "much"]
# ::lemmas ["thank", "u", "so", "much"]
(c1-4 / thank-01
      :ARG1 (c1-1 / you)
      :ARG1-of (c1-0 / have-quant-91
                     :ARG2 (c1-2 / much)
                     :ARG3 (c1-3 / so)))

# ::snt ;-; i love this account so much
# ::tokens [";", "-", ";", "i", "love", "this", "account", "so", "much"]
# ::lemmas [";", "-", ";", "i", "love", "this", "account", "so", "much"]
(c2-0 / love-01
      :ARG0 (c2-2 / i)
      :ARG1 (c2-5 / account
                  :mod (c2-4 / this))
      :degree (c2-1 / much
                    :degree (c2-3 / so)))

# ::snt not all of us think all Muslims are terrorists
# ::tokens ["not", "all", "of", "us", "think", "all", "Muslims", "are", "terrorists"]
# ::lemmas ["not", "all", "of", "we", "think", "all", "Muslims", "be", "terrorist"]
(c3-6 / think-01
      :ARG0 (c3-0 / we
                  :mod (c3-7 / all))
      :ARG1 (c3-5 / terrorist
                  :domain (c3-3 / person
                                :mod (c3-4 / religious-group
                                           :name (c3-2 / name
                                                       :op1 "Muslim"))
                                :mod (c3-1 / all)))
      :polarity -)

# ::snt We don't need to tell everytime what wearen't, whats wrong is wrong
# ::tokens ["We", "do", "n't", "need", "to", "tell", "everytime", "what", "wearen't", ",", "what", "s", "wrong", "is", "wrong"]
# ::lemmas ["we", "do", "not", "need", "to", "tell", "everytime", "what", "wearen't", ",", "what", "s", "wrong", "be", "wrong"]
(c4-2 / need-01
      :ARG0 (c4-0 / we)
      :ARG1 (c4-7 / tell-01
                  :ARG0 c4-0
                  :ARG1 (c4-1 / wrong-02
                              :ARG1 (c4-6 / thing))
                  :frequency (c4-4 / rate-entity-91
                                   :ARG4 (c4-3 / thing
                                               :ARG1-of (c4-5 / do-02
                                                              :ARG0 c4-0)
                                               :polarity -)))
      :polarity -)

# ::snt thank u so much
# ::tokens ["thank", "u", "so", "much"]
# ::lemmas ["thank", "u", "so", "much"]
(c5-4 / thank-01
      :ARG1 (c5-1 / you)
      :ARG1-of (c5-0 / have-quant-91
                     :ARG2 (c5-2 / much)
                     :ARG3 (c5-3 / so)))

# ::snt lmao omg in like a minute it had rts wow u win haha
# ::tokens ["lmao", "omg", "in", "like", "a", "minute", "it", "had", "rts", "wow", "u", "win", "haha"]
# ::lemmas ["lmao", "omg", "in", "like", "a", "minute", "it", "have", "rt", "wow", "u", "win", "haha"]
(c6-12 / and
       :op1 (c6-3 / laugh-01
                  :ARG0 (c6-7 / i)
                  :manner (c6-10 / loud)
                  :mode expressive)
       :op2 (c6-1 / wow-01
                  :ARG0 (c6-8 / win-01
                              :ARG0 (c6-2 / you))
                  :ARG1 c6-7
                  :mod (c6-0 / haha
                             :mode expressive)
                  :time (c6-6 / after
                              :op1 (c6-9 / now)
                              :quant (c6-4 / like
                                           :op1 (c6-11 / temporal-quantity
                                                       :unit (c6-5 / minute)
                                                       :quant 1)))
                  :mode expressive))

# ::snt Yes
# ::tokens ["Yes"]
# ::lemmas ["yes"]
(c7-0 / yes)

# ::snt LOL thank u
# ::tokens ["LOL", "thank", "u"]
# ::lemmas ["LOL", "thank", "u"]
(c8-4 / thank-01
      :ARG0 (c8-2 / i)
      :ARG1 (c8-0 / you)
      :ARG2-of (c8-1 / laugh-01
                     :ARG0 c8-2
                     :manner (c8-3 / loud)
                     :mode expressive))

# ::snt where are you from?
# ::tokens ["where", "are", "you", "from", "?"]
# ::lemmas ["where", "be", "you", "from", "?"]
(c9-2 / be-from-91
      :ARG1 (c9-0 / you)
      :ARG2 (c9-1 / amr-unknown))

# ::snt muslims are special.and you are special.
# ::tokens ["muslims", "are", "special.and", "you", "are", "special", "."]
# ::lemmas ["muslims", "be", "special.and", "you", "be", "special", "."]
(c10-5 / and
       :op1 (c10-4 / special-02
                   :ARG1 (c10-2 / person
                                :mod (c10-3 / religious-group
                                            :name (c10-1 / name
                                                         :op1 "Islam")))
                   :op2-of c10-5)
       :ARG1 (c10-0 / you))

# ::snt Algeria but moving to canada soon
# ::tokens ["Algeria", "but", "moving", "to", "canada", "soon"]
# ::lemmas ["Algeria", "but", "move", "to", "canada", "soon"]
(c11-4 / contrast-01
       :ARG1 (c11-3 / country
                    :name (c11-1 / name
                                 :op1 "Algeria"))
       :ARG2 (c11-0 / move-01
                    :ARG2 (c11-5 / country
                                 :name (c11-2 / name
                                              :op1 "Canada"))
                    :time (c11-6 / soon)))

# ::snt its sad when people think we are all the same
# ::tokens ["its", "sad", "when", "people", "think", "we", "are", "all", "the", "same"]
# ::lemmas ["its", "sad", "when", "people", "think", "we", "be", "all", "the", "same"]
(c12-3 / sad-02
       :ARG0 (c12-4 / think-01
                    :ARG0 (c12-2 / person)
                    :ARG1 (c12-1 / same-01
                                 :ARG1 (c12-0 / we
                                              :mod (c12-5 / all)))))
