# ::snt not true whatsoever. thats why its quoted. its a self-referential.
# ::tokens ["not", "true", "whatsoever", ".", "that", "s", "why", "its", "quoted", ".", "its", "a", "self", "-", "referential", "."]
# ::lemmas ["not", "true", "whatsoever", ".", "that", "s", "why", "its", "quote", ".", "its", "a", "self", "-", "referential", "."]
(c1-1 / multi-sentence
      :snt1 (c1-8 / true-01
                  :degree (c1-0 / whatsoever)
                  :polarity -)
      :snt2 (c1-5 / cause-01
                  :ARG0 (c1-7 / that)
                  :ARG1 (c1-3 / quote-01
                              :ARG1 (c1-4 / it)))
      :snt3 (c1-2 / erential-02
                  :ARG1 (c1-6 / it
                              :ARG2-of c1-2)))

# ::snt Wale : "Da man wit the chips" in the iconic photo from Ferguson has been identified
# ::tokens ["Wale", ":", "\"", "Da", "man", "wit", "the", "chips", "\"", "in", "the", "iconic", "photo", "from", "Ferguson", "has", "been", "identified"]
# ::lemmas ["wale", ":", "\"", "Da", "man", "wit", "the", "chip", "\"", "in", "the", "iconic", "photo", "from", "Ferguson", "have", "be", "identify"]
(c2-9 / say-01
      :ARG0 (c2-5 / person
                  :name (c2-3 / name
                              :op1 "Wale"))
      :ARG1 (c2-2 / identify-01
                  :ARG1 (c2-1 / string-entity
                              :location (c2-10 / photo
                                               :mod (c2-8 / iconic)
                                               :source (c2-7 / city
                                                             :name (c2-4 / name
                                                                         :op1 "Ferguson")))
                              :mod (c2-0 / wit
                                         :op1 (c2-6 / chip))
                              :value "Da man")))

# ::snt Gotta be some brand out there willing to give him chips for life.
# ::tokens ["Got", "ta", "be", "some", "brand", "out", "there", "willing", "to", "give", "him", "chips", "for", "life", "."]
# ::lemmas ["got", "to", "be", "some", "brand", "out", "there", "willing", "to", "give", "he", "chip", "for", "life", "."]
(c4-5 / obligate-01
      :ARG2 (c4-4 / brand
                  :mod (c4-8 / some)
                  :location (c4-2 / out-there)
                  :ARG0-of (c4-1 / will-02
                                 :ARG1 (c4-7 / give-01
                                             :ARG0 c4-4
                                             :ARG1 (c4-6 / chip)
                                             :ARG2 (c4-0 / he)
                                             :duration (c4-3 / life)))))

# ::snt yep that's way we quoted it.
# ::tokens ["yep", "that", "'s", "way", "we", "quoted", "it", "."]
# ::lemmas ["yep", "that", "be", "way", "we", "quote", "it", "."]
(c5-0 / way
      :mod (c5-5 / that)
      :manner-of (c5-2 / quote-01
                       :ARG0 (c5-4 / we)
                       :ARG1 (c5-3 / it))
      :mod (c5-1 / yep
                 :mode expressive))

# ::snt hahahahaha looks like we have an internet legend on our hands
# ::tokens ["hahahahaha", "looks", "like", "we", "have", "an", "internet", "legend", "on", "our", "hands"]
# ::lemmas ["hahahahaha", "look", "like", "we", "have", "an", "internet", "legend", "on", "our", "hand"]
(c6-2 / look-02
      :ARG1 (c6-0 / have-03
                  :ARG0 (c6-1 / we)
                  :ARG1 (c6-5 / legend
                              :mod (c6-3 / internet)
                              :location (c6-6 / hand)))
      :mod (c6-4 / haha
                 :mode expressive))

# ::snt trust methats a mile and a half better than his screen name. (He described himself as da man wit the chips also)
# ::tokens ["trust", "methats", "a", "mile", "and", "a", "half", "better", "than", "his", "screen", "name", ".", "(", "He", "described", "himself", "as", "da", "man", "wit", "the", "chips", "also", ")"]
# ::lemmas ["trust", "methat", "a", "mile", "and", "a", "half", "well", "than", "his", "screen", "name", ".", "(", "he", "describe", "himself", "as", "da", "man", "wit", "the", "chip", "also", ")"]
(c7-3 / multi-sentence
      :snt1 (c7-14 / trust-01
                   :ARG1 (c7-0 / have-degree-91
                               :ARG1 (c7-8 / distance-quantity
                                           :unit (c7-7 / mile)
                                           :quant 1.5)
                               :ARG2 (c7-10 / good-02
                                            :ARG1 c7-8)
                               :ARG3 (c7-2 / more)
                               :ARG4 (c7-5 / name
                                           :mod (c7-12 / screen)
                                           :poss (c7-15 / he))))
      :snt2 (c7-1 / describe-01
                  :ARG0 (c7-6 / he
                              :ARG1-of c7-1)
                  :ARG2 (c7-9 / man
                              :mod (c7-16 / da)
                              :ARG0-of (c7-4 / have-03
                                             :ARG1 (c7-11 / chip)))
                  :mod (c7-13 / also)))

# ::snt . It was Wale...
# ::tokens [".", "It", "was", "Wale", "..."]
# ::lemmas [".", "it", "be", "Wale", "..."]
(c8-1 / county
      :name (c8-0 / name
                  :op1 "Wale"))

# ::snt If he wants to remain anonymous let him. No need to cheapen the reason he was there!
# ::tokens ["If", "he", "wants", "to", "remain", "anonymous", "let", "him", ".", "No", "need", "to", "cheapen", "the", "reason", "he", "was", "there", "!"]
# ::lemmas ["if", "he", "want", "to", "remain", "anonymous", "let", "he", ".", "no", "need", "to", "cheapen", "the", "reason", "he", "be", "there", "!"]
(c9-4 / multi-sentence
      :snt1 (c9-3 / let-01
                  :ARG0 (c9-1 / you)
                  :ARG1 (c9-9 / remain-01
                              :ARG1 (c9-0 / he)
                              :ARG3 (c9-13 / anonymous))
                  :condition (c9-2 / want-01
                                   :ARG0 c9-0
                                   :ARG1 c9-9)
                  :mode imperative)
      :snt2 (c9-8 / need-01
                  :ARG1 (c9-10 / cheapen-01
                               :ARG1 (c9-7 / reason
                                           :ARG0-of (c9-11 / cause-01
                                                           :ARG1 (c9-6 / be-located-at-91
                                                                       :ARG1 (c9-5 / he)
                                                                       :ARG2 (c9-12 / there)))))
                  :polarity -))

# ::snt yea, I guess you're right bro. I can't upload a Chainz photo right now. LMAO
# ::tokens ["yea", ",", "I", "guess", "you", "'re", "right", "bro", ".", "I", "ca", "n't", "upload", "a", "Chainz", "photo", "right", "now", ".", "LMAO"]
# ::lemmas ["yea", ",", "i", "guess", "you", "be", "right", "bro", ".", "i", "can", "not", "upload", "a", "Chainz", "photo", "right", "now", ".", "lmao"]
(c10-2 / multi-sentence
       :snt1 (c10-12 / guess-01
                     :ARG0 (c10-5 / i)
                     :ARG1 (c10-10 / right-06
                                   :ARG1 (c10-0 / you))
                     :mod (c10-14 / yea))
       :snt2 (c10-9 / possible-01
                    :ARG1 (c10-3 / upload-01
                                 :ARG0 (c10-13 / i)
                                 :ARG1 (c10-15 / photo
                                               :mod (c10-4 / person
                                                           :name (c10-7 / name
                                                                        :op1 "Chruz")))
                                 :time (c10-8 / now
                                              :mod (c10-6 / right)))
                    :mod (c10-1 / laugh-01
                                :ARG0 c10-13
                                :manner (c10-11 / loud)
                                :mode expressive)
                    :polarity -))

# ::snt I didn't say it was. This is about how people of color are framed in the media. Was it necessary to use that as a headline? No.
# ::tokens ["I", "did", "n't", "say", "it", "was", ".", "This", "is", "about", "how", "people", "of", "color", "are", "framed", "in", "the", "media", ".", "Was", "it", "necessary", "to", "use", "that", "as", "a", "headline", "?", "No", "."]
# ::lemmas ["i", "do", "not", "say", "it", "be", ".", "this", "be", "about", "how", "people", "of", "color", "be", "frame", "in", "the", "medium", ".", "be", "it", "necessary", "to", "use", "that", "as", "a", "headline", "?", "no", "."]
(c11-2 / multi-sentence
       :snt1 (c11-14 / say-01
                     :ARG0 (c11-5 / i)
                     :ARG1 (c11-11 / it)
                     :polarity -)
       :snt2 (c11-10 / concern-02
                     :ARG0 (c11-15 / this)
                     :ARG1 (c11-0 / have-manner-91
                                  :ARG1 (c11-1 / frame-06
                                               :ARG1 (c11-8 / person
                                                            :ARG1-of (c11-9 / color-01))
                                               :location (c11-12 / media))))
       :snt3 (c11-6 / need-01
                    :polarity (c11-16 / amr-unknown)
                    :ARG1 (c11-3 / use-01
                                 :ARG1 (c11-13 / that)
                                 :ARG2 (c11-7 / thing
                                              :ARG2-of (c11-4 / headline-01)))
                    :polarity c11-16))

# ::snt Seriously?!?! You know that wouldn't be the case. Stop it! Have a productive day.
# ::tokens ["Seriously", "?", "!", "?", "!", "You", "know", "that", "would", "n't", "be", "the", "case", ".", "Stop", "it", "!", "Have", "a", "productive", "day", "."]
# ::lemmas ["seriously", "?", "!", "?", "!", "you", "know", "that", "would", "not", "be", "the", "case", ".", "stop", "it", "!", "have", "a", "productive", "day", "."]
(c12-2 / multi-sentence
       :snt1 (c12-8 / serious-01
                    :polarity (c12-9 / amr-unknown)
                    :mode expressive)
       :snt2 (c12-3 / stop-01
                    :ARG0 (c12-1 / you)
                    :ARG1 (c12-4 / it)
                    :mode imperative)
       :snt3 (c12-0 / have-03
                    :ARG0 (c12-7 / you)
                    :ARG1 (c12-6 / day
                                 :ARG0-of (c12-5 / productive-03))
                    :mode imperative))

# ::snt Then it would help if black people would stop with the poor English, poor Grammar &amp; ridiculous Euphemisms
# ::tokens ["Then", "it", "would", "help", "if", "black", "people", "would", "stop", "with", "the", "poor", "English", ",", "poor", "Grammar", "&", "amp", ";", "ridiculous", "Euphemisms"]
# ::lemmas ["then", "it", "would", "help", "if", "black", "people", "would", "stop", "with", "the", "poor", "English", ",", "poor", "Grammar", "&", "amp", ";", "ridiculous", "Euphemisms"]
(c13-5 / help-01
       :ARG0 (c13-15 / it)
       :condition (c13-1 / stop-01
                         :ARG0 (c13-0 / person
                                      :ARG1-of (c13-7 / black-05))
                         :ARG1 (c13-4 / and
                                      :op1 (c13-3 / person
                                                  :mod (c13-17 / country
                                                               :name (c13-10 / name
                                                                             :op1 "England"))
                                                  :mod (c13-6 / poor))
                                      :op2 (c13-14 / person
                                                   :mod (c13-8 / poor)
                                                   :mod (c13-13 / grammar))
                                      :op3 (c13-2 / person
                                                  :name (c13-16 / name
                                                                :op1 "amp")
                                                  :mod (c13-11 / poor))
                                      :op4 (c13-9 / Euphemism
                                                  :ARG1-of (c13-12 / ridiculous-02))))
       :time (c13-18 / then))

# ::snt that's Chainz
# ::tokens ["that", "'s", "Chainz"]
# ::lemmas ["that", "be", "Chainz"]
(c14-1 / person
       :name (c14-0 / name
                    :op1 "Chainz")
       :domain (c14-2 / that))

# ::snt : "Da man wit the chips" in this iconic photo from has been identified.
# ::tokens [":", "\"", "Da", "man", "wit", "the", "chips", "\"", "in", "this", "iconic", "photo", "from", "has", "been", "identified", "."]
# ::lemmas [":", "\"", "Da", "man", "wit", "the", "chip", "\"", "in", "this", "iconic", "photo", "from", "have", "be", "identify", "."]
(c16-0 / identify-01
       :ARG1 (c16-2 / person
                    :name (c16-1 / name
                                 :op1 "Da"
                                 :op2 "man"
                                 :op3 "wit"
                                 :op4 "the"
                                 :op5 "chip")
                    :part-of (c16-5 / photo
                                    :source (c16-4 / this)
                                    :mod (c16-3 / iconic))))

# ::snt LOL OMG K speech lest
# ::tokens ["LOL", "OMG", "K", "speech", "lest"]
# ::lemmas ["LOL", "OMG", "K", "speech", "lest"]
(c17-6 / and
       :op1 (c17-0 / laugh-01
                   :ARG0 (c17-1 / i)
                   :manner (c17-4 / loud)
                   :mode expressive)
       :op2 (c17-5 / speak-01
                   :ARG0 (c17-3 / person
                                :name (c17-2 / name
                                             :op1 "K"))
                   :manner c17-4))

# ::snt : "Da man wit the chips" in this iconic photo from has been identified.
# ::tokens [":", "\"", "Da", "man", "wit", "the", "chips", "\"", "in", "this", "iconic", "photo", "from", "has", "been", "identified", "."]
# ::lemmas [":", "\"", "Da", "man", "wit", "the", "chip", "\"", "in", "this", "iconic", "photo", "from", "have", "be", "identify", "."]
(c18-0 / identify-01
       :ARG1 (c18-2 / person
                    :name (c18-1 / name
                                 :op1 "Da"
                                 :op2 "man"
                                 :op3 "wit"
                                 :op4 "the"
                                 :op5 "chip")
                    :part-of (c18-5 / photo
                                    :source (c18-4 / this)
                                    :mod (c18-3 / iconic))))

# ::snt TF RT : "Da man wit the chips" in this photo from has been identified.
# ::tokens ["TF", "RT", ":", "\"", "Da", "man", "wit", "the", "chips", "\"", "in", "this", "photo", "from", "has", "been", "identified", "."]
# ::lemmas ["TF", "RT", ":", "\"", "Da", "man", "wit", "the", "chip", "\"", "in", "this", "photo", "from", "have", "be", "identify", "."]
(c19-7 / say-01
       :ARG0 (c19-4 / publication
                    :name (c19-3 / name
                                 :op1 "RT"))
       :ARG1 (c19-2 / identify-01
                    :ARG0 (c19-1 / man
                                 :mod (c19-5 / da))
                    :ARG1 (c19-6 / chip)
                    :location (c19-9 / photo
                                     :mod (c19-8 / this))
                    :ARG1 c19-7)
       :mod (c19-0 / fuck
                   :mode expressive))

# ::snt haha see i'm not the only one
# ::tokens ["haha", "see", "i", "'m", "not", "the", "only", "one"]
# ::lemmas ["haha", "see", "i", "be", "not", "the", "only", "one"]
(c20-4 / see-01
       :ARG0 (c20-3 / i)
       :ARG1 (c20-2 / one
                    :mod (c20-1 / only
                                :polarity -)
                    :domain c20-3)
       :mod (c20-0 / haha
                   :mode expressive))

# ::snt "Da man wit the chips" in this iconic photo from has been identified.
# ::tokens ["\"", "Da", "man", "wit", "the", "chips", "\"", "in", "this", "iconic", "photo", "from", "has", "been", "identified", "."]
# ::lemmas ["\"", "Da", "man", "wit", "the", "chip", "\"", "in", "this", "iconic", "photo", "from", "have", "be", "identify", "."]
(c21-1 / identify-01
       :ARG1 (c21-6 / say-01
                    :ARG0 (c21-0 / man
                                 :mod (c21-3 / da))
                    :ARG1 (c21-4 / chip)
                    :location (c21-2 / photo
                                     :source (c21-7 / this)
                                     :mod (c21-5 / iconic))))

# ::snt "Iconic"? How about "hyperbolical"?
# ::tokens ["\"", "Iconic", "\"", "?", "How", "about", "\"", "hyperbolical", "\"", "?"]
# ::lemmas ["\"", "iconic", "\"", "?", "how", "about", "\"", "hyperbolical", "\"", "?"]
(c22-1 / multi-sentence
       :snt1 (c22-3 / iconic
                    :polarity (c22-4 / amr-unknown))
       :snt2 (c22-0 / hyperbolical
                    :polarity (c22-2 / amr-unknown)))

# ::snt "Can you not" RT : "Da man wit the chips" in this iconic photo from has been identified.
# ::tokens ["\"", "Can", "you", "not", "\"", "RT", ":", "\"", "Da", "man", "wit", "the", "chips", "\"", "in", "this", "iconic", "photo", "from", "has", "been", "identified", "."]
# ::lemmas ["\"", "can", "you", "not", "\"", "RT", ":", "\"", "Da", "man", "wit", "the", "chip", "\"", "in", "this", "iconic", "photo", "from", "have", "be", "identify", "."]
(c23-11 / say-01
        :ARG0 (c23-6 / publication
                     :name (c23-5 / name
                                  :op1 "RT"))
        :ARG1 (c23-4 / identify-01
                     :ARG1 (c23-3 / say-01
                                  :ARG1 (c23-1 / man
                                               :mod (c23-7 / da)
                                               :ARG0-of (c23-0 / have-03
                                                               :ARG1 (c23-8 / chip)))
                                  :location (c23-13 / photo
                                                    :mod (c23-9 / iconic)
                                                    :source (c23-12 / this)))
                     :ARG1-of (c23-2 / possible-01
                                     :ARG1-of (c23-10 / request-confirmation-91)
                                     :polarity -)))

# ::snt hey hey those aren't my/our words! they his
# ::tokens ["hey", "hey", "those", "are", "n't", "my", "/", "our", "words", "!", "they", "his"]
# ::lemmas ["hey", "hey", "those", "be", "not", "my", "/", "our", "word", "!", "they", "his"]
(c24-2 / multi-sentence
       :snt1 (c24-0 / hey
                    :mode expressive)
       :snt2 (c24-1 / word-01
                    :ARG0 (c24-6 / slash
                                 :op1 (c24-4 / i)
                                 :op2 (c24-5 / we))
                    :ARG1 (c24-7 / that)
                    :polarity -)
       :snt3 (c24-3 / word-01
                    :ARG0 (c24-8 / he)
                    :ARG1 c24-7
                    :polarity -))

# ::snt :it really is a great image
# ::tokens [":", "it", "really", "is", "a", "great", "image"]
# ::lemmas [":", "it", "really", "be", "a", "great", "image"]
(c25-3 / image
       :domain (c25-2 / it)
       :mod (c25-1 / great)
       :ARG1-of (c25-0 / real-04))

# ::snt Irregardless. If a white person said those same words, it wouldn't have been printed that way.
# ::tokens ["Irregardless", ".", "If", "a", "white", "person", "said", "those", "same", "words", ",", "it", "would", "n't", "have", "been", "printed", "that", "way", "."]
# ::lemmas ["Irregardless", ".", "if", "a", "white", "person", "say", "those", "same", "word", ",", "it", "would", "not", "have", "be", "print", "that", "way", "."]
(c26-2 / multi-sentence
       :snt1 (c26-8 / regardless-91)
       :snt2 (c26-0 / have-condition-91
                    :ARG1 (c26-7 / print-01
                                 :ARG1 (c26-5 / it)
                                 :manner (c26-1 / way
                                                :mod (c26-11 / that))
                                 :polarity -)
                    :ARG2 (c26-10 / say-01
                                  :ARG0 (c26-12 / person
                                                :ARG1-of (c26-6 / white-02))
                                  :ARG1 (c26-3 / word
                                               :ARG1-of (c26-4 / same-01)
                                               :mod (c26-9 / that)))))

# ::snt Ridiculous! He was there for better reason then to get chip sponsorship! This is serious.
# ::tokens ["Ridiculous", "!", "He", "was", "there", "for", "better", "reason", "then", "to", "get", "chip", "sponsorship", "!", "This", "is", "serious", "."]
# ::lemmas ["ridiculous", "!", "he", "be", "there", "for", "well", "reason", "then", "to", "get", "chip", "sponsorship", "!", "this", "be", "serious", "."]
(c27-1 / multi-sentence
       :snt1 (c27-6 / ridiculous-02)
       :snt2 (c27-2 / be-located-at-91
                    :ARG1 (c27-0 / he)
                    :ARG2 (c27-13 / there)
                    :ARG1-of (c27-7 / cause-01
                                    :ARG0 (c27-4 / reason
                                                 :ARG1-of (c27-14 / have-degree-91
                                                                  :ARG2 (c27-8 / good-02
                                                                               :ARG1 c27-4)
                                                                  :ARG3 (c27-5 / more)
                                                                  :ARG4 (c27-9 / get-01
                                                                               :ARG0 c27-0
                                                                               :ARG1 (c27-11 / sponsor-01
                                                                                             :mod (c27-10 / chip)))))))
       :snt3 (c27-3 / serious-02
                    :ARG1 (c27-12 / this)))

# ::snt I assure you if a white man called himself "da man wit the chips" that's exactly how I would've written that headline.
# ::tokens ["I", "assure", "you", "if", "a", "white", "man", "called", "himself", "\"", "da", "man", "wit", "the", "chips", "\"", "that", "'s", "exactly", "how", "I", "would", "'ve", "written", "that", "headline", "."]
# ::lemmas ["i", "assure", "you", "if", "a", "white", "man", "call", "himself", "\"", "da", "man", "wit", "the", "chip", "\"", "that", "be", "exactly", "how", "i", "would", "'ve", "write", "that", "headline", "."]
(c28-13 / assure-01
        :ARG0 (c28-6 / i)
        :ARG1 (c28-1 / you)
        :ARG2 (c28-0 / have-manner-91
                     :ARG1 (c28-2 / write-01
                                  :ARG0 c28-6
                                  :ARG1 (c28-3 / headline
                                               :mod (c28-12 / that)))
                     :ARG2 (c28-10 / call-01
                                   :ARG0 (c28-4 / man
                                                :ARG1-of (c28-7 / white-02)
                                                :ARG1-of c28-10
                                                :ARG2-of c28-10)
                                   :mod (c28-9 / da)
                                   :ARG0-of (c28-8 / have-03
                                                   :ARG1 (c28-11 / chip))))
        :mod (c28-5 / exact))

# ::snt Oh my god, his twitter handle MT man in this iconic photo has been identified.
# ::tokens ["Oh", "my", "god", ",", "his", "twitter", "handle", "MT", "man", "in", "this", "iconic", "photo", "has", "been", "identified", "."]
# ::lemmas ["oh", "my", "god", ",", "his", "twitter", "handle", "MT", "man", "in", "this", "iconic", "photo", "have", "be", "identify", "."]
(c29-3 / identify-01
       :ARG1 (c29-6 / person
                    :name (c29-4 / name
                                 :op1 "MT"
                                 :op2 "Man")
                    :ARG0-of (c29-0 / handle-01
                                    :ARG1 (c29-10 / publication
                                                  :name (c29-5 / name
                                                               :op1 "Twitter")))
                    :part-of (c29-2 / photo
                                    :mod (c29-7 / iconic)
                                    :mod (c29-9 / this)))
       :mod (c29-8 / god
                   :poss (c29-1 / i)
                   :mode expressive))

# ::snt This could be a photo from . How have we come full circle. Both sides frustrated, programs, money, marches, where do we go now
# ::tokens ["This", "could", "be", "a", "photo", "from", ".", "How", "have", "we", "come", "full", "circle", ".", "Both", "sides", "frustrated", ",", "programs", ",", "money", ",", "marches", ",", "where", "do", "we", "go", "now"]
# ::lemmas ["this", "could", "be", "a", "photo", "from", ".", "how", "have", "we", "come", "full", "circle", ".", "both", "side", "frustrate", ",", "program", ",", "money", ",", "marche", ",", "where", "do", "we", "go", "now"]
(c30-0 / multi-sentence
       :snt1 (c30-2 / possible-01
                    :ARG1 (c30-5 / photo
                                 :source (c30-19 / this)))
       :snt2 (c30-18 / come-01
                     :ARG1 (c30-15 / we)
                     :ARG4 (c30-3 / circle
                                  :mod (c30-7 / full))
                     :manner (c30-6 / amr-unknown))
       :snt3 (c30-17 / frustrate-01
                     :ARG1 (c30-4 / side
                                  :mod (c30-10 / both)))
       :snt4 (c30-16 / and
                     :op1 (c30-9 / program)
                     :op2 (c30-13 / money)
                     :op3 (c30-8 / march-01))
       :snt5 (c30-14 / go-02
                     :ARG0 (c30-1 / we)
                     :ARG4 (c30-12 / amr-unknown)
                     :time (c30-11 / now)))

# ::snt "Da Man Wit"?? RT : "Da man wit the chips" in this iconic photo from has been identified
# ::tokens ["\"", "Da", "Man", "Wit", "\"", "?", "?", "RT", ":", "\"", "Da", "man", "wit", "the", "chips", "\"", "in", "this", "iconic", "photo", "from", "has", "been", "identified"]
# ::lemmas ["\"", "Da", "Man", "Wit", "\"", "?", "?", "RT", ":", "\"", "Da", "man", "wit", "the", "chip", "\"", "in", "this", "iconic", "photo", "from", "have", "be", "identify"]
(c31-1 / multi-sentence
       :snt1 (c31-7 / person
                    :name (c31-5 / name
                                 :op1 "Da"
                                 :op2 "Man"
                                 :op3 "Wit")
                    :polarity (c31-15 / amr-unknown))
       :snt2 (c31-4 / identify-01
                    :ARG1 (c31-12 / say-01
                                  :ARG0 (c31-14 / publication
                                                :name (c31-6 / name
                                                             :op1 "RT"))
                                  :ARG1 (c31-8 / man
                                               :mod (c31-9 / da)
                                               :ARG0-of (c31-0 / have-03
                                                               :ARG1 (c31-10 / chip)))
                                  :location (c31-2 / photo
                                                   :mod (c31-11 / iconic)
                                                   :source (c31-13 / this)))
                    :polarity (c31-3 / amr-unknown)))

# ::snt "Da Man wit the chips"?! Are you serious?! Black doesn't = ghetto. SMMFH!
# ::tokens ["\"", "Da", "Man", "wit", "the", "chips", "\"", "?", "!", "Are", "you", "serious", "?", "!", "Black", "does", "n't", "=", "ghetto", ".", "SMMFH", "!"]
# ::lemmas ["\"", "Da", "Man", "wit", "the", "chip", "\"", "?", "!", "be", "you", "serious", "?", "!", "Black", "do", "not", "=", "ghetto", ".", "SMMFH", "!"]
(c32-2 / multi-sentence
       :snt1 (c32-7 / serious-01
                    :polarity (c32-8 / amr-unknown)
                    :ARG1 (c32-0 / you))
       :snt2 (c32-4 / equal-01
                    :ARG1 (c32-3 / black-05)
                    :ARG2 (c32-6 / ghetto)
                    :polarity -)
       :snt3 (c32-5 / shit
                    :mod (c32-1 / fucking
                                :mode expressive)
                    :mode expressive))

# ::snt Dyslexics that only read photo captions will be severely misinformed by your "A demonstrator throws BACK a tear gas container" BS
# ::tokens ["Dyslexics", "that", "only", "read", "photo", "captions", "will", "be", "severely", "misinformed", "by", "your", "\"", "A", "demonstrator", "throws", "BACK", "a", "tear", "gas", "container", "\"", "BS"]
# ::lemmas ["dyslexic", "that", "only", "read", "photo", "caption", "will", "be", "severely", "misinform", "by", "your", "\"", "a", "demonstrator", "throw", "BACK", "a", "tear", "gas", "container", "\"", "BS"]
(c33-2 / misinform-01
       :ARG0 (c33-3 / bullshit-01
                    :ARG0 (c33-0 / you)
                    :ARG1 (c33-14 / throw-01
                                  :ARG0 (c33-5 / person
                                               :ARG0-of (c33-6 / demonstrate-01))
                                  :ARG1 (c33-7 / container
                                               :consist-of (c33-8 / gas
                                                                  :ARG2-of (c33-10 / tear-01)))
                                  :direction (c33-9 / back)))
       :ARG1 (c33-1 / democrat
                    :ARG0-of (c33-11 / read-01
                                     :ARG1 (c33-12 / caption
                                                   :mod (c33-15 / photo))
                                     :mod (c33-4 / only)))
       :degree (c33-13 / severe))

# ::snt yeah, I peeped the screen name. Hilarious.
# ::tokens ["yeah", ",", "I", "peeped", "the", "screen", "name", ".", "Hilarious", "."]
# ::lemmas ["yeah", ",", "i", "peep", "the", "screen", "name", ".", "Hilarious", "."]
(c34-2 / multi-sentence
       :snt1 (c34-5 / peep-01
                    :ARG0 (c34-3 / i)
                    :ARG1 (c34-4 / name
                                 :mod (c34-6 / screen))
                    :mod (c34-1 / yeah
                                :mode expressive))
       :snt2 (c34-0 / hilarious))
