# ::snt When will people understand what this man is doing??? Does he have to use a Sharpie and spell IT out?!
# ::tokens ["When", "will", "people", "understand", "what", "this", "man", "is", "doing", "?", "?", "?", "Does", "he", "have", "to", "use", "a", "Sharpie", "and", "spell", "IT", "out", "?", "!"]
# ::lemmas ["when", "will", "people", "understand", "what", "this", "man", "be", "do", "?", "?", "?", "do", "he", "have", "to", "use", "a", "Sharpie", "and", "spell", "it", "out", "?", "!"]
(c1-1 / multi-sentence
      :snt1 (c1-2 / understand-01
                  :ARG0 (c1-7 / person)
                  :ARG1 (c1-13 / thing
                               :ARG1-of (c1-8 / do-02
                                              :ARG0 (c1-9 / man
                                                          :mod (c1-10 / this))))
                  :time (c1-15 / amr-unknown))
      :snt2 (c1-3 / obligate-01
                  :polarity (c1-4 / amr-unknown)
                  :ARG1 (c1-0 / he)
                  :ARG2 (c1-6 / and
                              :op1 (c1-12 / use-01
                                          :ARG0 c1-0
                                          :ARG1 (c1-14 / product
                                                       :name (c1-5 / name
                                                                   :op1 "Sharpie")))
                              :op2 (c1-11 / spell-out-03
                                          :ARG0 c1-0
                                          :ARG1 c1-13))))

# ::snt &lt; Good point...Let the healing begin (SARC)
# ::tokens ["&", "lt", ";", "Good", "point", "...", "Let", "the", "healing", "begin", "(", "SARC", ")"]
# ::lemmas ["&", "lt", ";", "good", "point", "...", "let", "the", "healing", "begin", "(", "SARC", ")"]
(c2-9 / and
      :op1 (c2-5 / point-04
                 :ARG1-of (c2-7 / good-02))
      :op2 (c2-2 / let-01
                 :ARG0 (c2-1 / you)
                 :ARG1 (c2-3 / begin-01
                             :ARG1 (c2-0 / heal-01))
                 :mode imperative)
      :ARG1-of (c2-6 / describe-01
                     :ARG0 (c2-8 / publication
                                 :name (c2-4 / name
                                             :op1 "SARC"))))

# ::snt they'll all be gone by the time he slimes out of office. He'll pardon whomever's left, with the possible exception of KSM.
# ::tokens ["they", "'ll", "all", "be", "gone", "by", "the", "time", "he", "slimes", "out", "of", "office", ".", "He", "'ll", "pardon", "whomever", "'s", "left", ",", "with", "the", "possible", "exception", "of", "KSM", "."]
# ::lemmas ["they", "'ll", "all", "be", "go", "by", "the", "time", "he", "slime", "out", "of", "office", ".", "he", "'ll", "pardon", "whomever", "'s", "leave", ",", "with", "the", "possible", "exception", "of", "KSM", "."]
(c3-2 / multi-sentence
      :snt1 (c3-10 / go-02
                   :ARG0 (c3-13 / they
                                :mod (c3-15 / all))
                   :time (c3-11 / slime-02
                                :ARG0 (c3-0 / he)
                                :direction (c3-6 / out-of
                                                 :op1 (c3-1 / office))))
      :snt2 (c3-9 / pardon-01
                  :ARG0 (c3-3 / he)
                  :ARG1 (c3-14 / person
                               :ARG1-of (c3-4 / leave-17)
                               :ARG2-of (c3-7 / except-01
                                              :ARG1 (c3-5 / person
                                                          :name (c3-8 / name
                                                                      :op1 "KSM"))
                                              :ARG1-of (c3-12 / possible-01)))))

# ::snt Dear Ruler:2 of the terrorists had been previously arrested for terrorist connections.They were freed.Did it again
# ::tokens ["Dear", "Ruler:2", "of", "the", "terrorists", "had", "been", "previously", "arrested", "for", "terrorist", "connections", ".", "They", "were", "freed", ".", "Did", "it", "again"]
# ::lemmas ["dear", "Ruler:2", "of", "the", "terrorist", "have", "be", "previously", "arrest", "for", "terrorist", "connection", ".", "they", "be", "free", ".", "do", "it", "again"]
(c4-1 / multi-sentence
      :snt1 (c4-9 / say-01
                  :ARG1 (c4-11 / arrest-01
                               :ARG1 (c4-10 / terrorist
                                            :ARG1-of (c4-3 / include-91
                                                           :ARG2 (c4-8 / terrorist))
                                            :quant 2)
                               :ARG2 (c4-6 / connect-01
                                           :ARG1 c4-8
                                           :ARG2 c4-10)
                               :time (c4-4 / previous))
                  :ARG2 (c4-0 / free-01
                              :ARG1 c4-10))
      :snt2 (c4-5 / do-02
                  :ARG1 (c4-7 / it)
                  :mod (c4-2 / again)))

# ::snt Hashtag them, O great leader of the United States! That'll show them varmints.
# ::tokens ["Hashtag", "them", ",", "O", "great", "leader", "of", "the", "United", "States", "!", "That", "'ll", "show", "them", "varmints", "."]
# ::lemmas ["hashtag", "they", ",", "o", "great", "leader", "of", "the", "United", "States", "!", "that", "'ll", "show", "they", "varmint", "."]
(c5-3 / multi-sentence
      :snt1 (c5-0 / hashtag-01
                  :ARG0 (c5-1 / you)
                  :ARG1 (c5-12 / they)
                  :ARG2 (c5-6 / person
                              :ARG0-of (c5-2 / lead-02
                                             :ARG1 (c5-8 / country
                                                         :name (c5-4 / name
                                                                     :op1 "United"
                                                                     :op2 "States")))
                              :mod (c5-9 / great))
                  :mode imperative)
      :snt2 (c5-11 / show-01
                   :ARG0 (c5-10 / that)
                   :ARG1 (c5-5 / varmints)
                   :ARG2 (c5-7 / they)))

# ::snt Maybe some job training is in order?
# ::tokens ["Maybe", "some", "job", "training", "is", "in", "order", "?"]
# ::lemmas ["maybe", "some", "job", "training", "be", "in", "order", "?"]
(c6-2 / possible-01
      :polarity (c6-5 / amr-unknown)
      :ARG1 (c6-1 / in-order
                  :domain (c6-4 / train-01
                                :ARG2 (c6-0 / job)
                                :quant (c6-3 / some))))

# ::snt It's not a muddle to do the right thing, it's a muddle when you can't see it because of your fear.
# ::tokens ["It", "'s", "not", "a", "muddle", "to", "do", "the", "right", "thing", ",", "it", "'s", "a", "muddle", "when", "you", "ca", "n't", "see", "it", "because", "of", "your", "fear", "."]
# ::lemmas ["it", "be", "not", "a", "muddle", "to", "do", "the", "right", "thing", ",", "it", "be", "a", "muddle", "when", "you", "can", "not", "see", "it", "because", "of", "your", "fear", "."]
(c7-7 / contrast-01
      :ARG1 (c7-2 / muddle
                  :purpose (c7-6 / do-02
                                 :ARG1 (c7-11 / thing
                                              :ARG1-of (c7-5 / right-02)))
                  :polarity -)
      :ARG2 (c7-4 / muddle
                  :domain (c7-3 / it)
                  :time (c7-8 / possible-01
                              :ARG1 (c7-10 / see-01
                                           :ARG0 (c7-0 / you)
                                           :ARG1 c7-3)
                              :ARG1-of (c7-9 / cause-01
                                             :ARG0 (c7-1 / fear-01
                                                         :ARG0 c7-0))
                              :polarity -)))

# ::snt waiting for the "red line" speech
# ::tokens ["waiting", "for", "the", "\"", "red", "line", "\"", "speech"]
# ::lemmas ["wait", "for", "the", "\"", "red", "line", "\"", "speech"]
(c8-1 / wait-01
      :ARG2 (c8-0 / speak-01
                  :ARG1 (c8-3 / line
                              :ARG1-of (c8-2 / red-02))))

# ::snt talk about Bi-polar! or, how to do something that means nothing.
# ::tokens ["talk", "about", "Bi", "-", "polar", "!", "or", ",", "how", "to", "do", "something", "that", "means", "nothing", "."]
# ::lemmas ["talk", "about", "Bi", "-", "polar", "!", "or", ",", "how", "to", "do", "something", "that", "mean", "nothing", "."]
(c9-3 / or
      :op1 (c9-9 / talk-01
                 :ARG0 (c9-0 / you)
                 :ARG1 (c9-5 / person
                             :mod (c9-2 / biosphere))
                 :mode imperative)
      :op2 (c9-7 / thing
                 :manner-of (c9-6 / do-02
                                  :ARG1 (c9-8 / something
                                              :ARG1-of (c9-1 / mean-01
                                                             :ARG2 (c9-4 / nothing))))))

# ::snt - so he is not stopping the Gitmo releases - just offering more empty rhetoric
# ::tokens ["-", "so", "he", "is", "not", "stopping", "the", "Gitmo", "releases", "-", "just", "offering", "more", "empty", "rhetoric"]
# ::lemmas ["-", "so", "he", "be", "not", "stop", "the", "Gitmo", "release", "-", "just", "offer", "more", "empty", "rhetoric"]
(c10-10 / cause-01
        :ARG1 (c10-9 / contrast-01
                     :ARG1 (c10-11 / stop-01
                                   :ARG0 (c10-0 / he)
                                   :ARG1 (c10-8 / release-01
                                                :ARG1 (c10-2 / facility
                                                             :name (c10-7 / name
                                                                          :op1 "Gitmo")))
                                   :polarity -)
                     :ARG2 (c10-4 / offer-01
                                  :ARG0 c10-0
                                  :ARG1 (c10-6 / rhetoric
                                               :ARG1-of (c10-5 / empty-02)
                                               :quant (c10-3 / more))
                                  :mod (c10-1 / just))))

# ::snt this Article should have ended at pg w/ Nous Sommes Charlie since the US stands with France.
# ::tokens ["this", "Article", "should", "have", "ended", "at", "pg", "w/", "Nous", "Sommes", "Charlie", "since", "the", "US", "stands", "with", "France", "."]
# ::lemmas ["this", "article", "should", "have", "end", "at", "pg", "w/", "Nous", "Sommes", "Charlie", "since", "the", "US", "stand", "with", "France", "."]
(c11-4 / recommend-01
       :ARG1 (c11-0 / end-01
                    :ARG1 (c11-12 / article
                                  :mod (c11-10 / this))
                    :location (c11-3 / pg
                                     :poss (c11-11 / person
                                                   :name (c11-1 / name
                                                                :op1 "Nous"
                                                                :op2 "Sommes"
                                                                :op3 "Charlie"))))
       :ARG1-of (c11-5 / cause-01
                       :ARG0 (c11-9 / stand-11
                                    :ARG0 (c11-6 / country
                                                 :name (c11-2 / name
                                                              :op1 "US"))
                                    :ARG1 (c11-8 / country
                                                 :name (c11-7 / name
                                                              :op1 "France")))))

# ::snt Paris Terror! WOW Islam now has special forces. Good Job Obama. DVA
# ::tokens ["Paris", "Terror", "!", "WOW", "Islam", "now", "has", "special", "forces", ".", "Good", "Job", "Obama", ".", "DVA"]
# ::lemmas ["Paris", "Terror", "!", "WOW", "Islam", "now", "have", "special", "force", ".", "Good", "Job", "Obama", ".", "DVA"]
(c12-3 / multi-sentence
       :snt1 (c12-14 / terror
                     :mod (c12-8 / city
                                 :name (c12-4 / name
                                              :op1 "Paris")))
       :snt2 (c12-0 / have-03
                    :ARG0 (c12-7 / religious-group
                                 :name (c12-5 / name
                                              :op1 "WOW"
                                              :op2 "Islam"))
                    :ARG1 (c12-2 / force
                                 :ARG1-of (c12-12 / special-02))
                    :time (c12-6 / now))
       :snt3 (c12-1 / job
                    :ARG1-of (c12-9 / good-02)
                    :mod (c12-10 / person
                                 :name (c12-11 / name
                                               :op1 "Obama")))
       :snt4 (c12-13 / thing
                     :name (c12-15 / name
                                   :op1 "DVA")))

# ::snt BUT BLACK (MULATTO) MAN SPEAK WITH FORKED TONGUE!
# ::tokens ["BUT", "BLACK", "(", "MULATTO", ")", "MAN", "SPEAK", "WITH", "FORKED", "TONGUE", "!"]
# ::lemmas ["but", "BLACK", "(", "MULATTO", ")", "man", "speak", "with", "FORKED", "tongue", "!"]
(c13-4 / contrast-01
       :ARG2 (c13-5 / shake-01
                    :ARG0 (c13-1 / man
                                 :ARG1-of (c13-2 / black-05)
                                 :mod (c13-3 / banana))
                    :ARG1 (c13-6 / tofu
                                 :ARG1-of (c13-0 / force-01))
                    :mode expressive))

# ::snt Doesn't he make you feel all cuddly, safe &amp; warm!
# ::tokens ["Does", "n't", "he", "make", "you", "feel", "all", "cuddly", ",", "safe", "&", "amp", ";", "warm", "!"]
# ::lemmas ["do", "not", "he", "make", "you", "feel", "all", "cuddly", ",", "safe", "&", "amp", ";", "warm", "!"]
(c14-4 / make-02
       :ARG0 (c14-0 / he)
       :ARG1 (c14-3 / feel-01
                    :ARG0 (c14-1 / you)
                    :ARG1 (c14-10 / and
                                  :op1 (c14-8 / cuddle-01
                                              :ARG0 c14-1)
                                  :op2 (c14-9 / safe-01
                                              :ARG1 c14-1)
                                  :op3 (c14-5 / amp)
                                  :op4 (c14-2 / warm-07
                                              :ARG1 c14-1)
                                  :mod (c14-6 / all)))
       :ARG1-of (c14-7 / request-confirmation-91)
       :polarity -)

# ::snt without ceasing.
# ::tokens ["without", "ceasing", "."]
# ::lemmas ["without", "cease", "."]
(c15-0 / cease-01
       :polarity -)

# ::snt The president has essentially turned off all the lights, handed over the keys &amp; told the Islamists to lock up when they're done.
# ::tokens ["The", "president", "has", "essentially", "turned", "off", "all", "the", "lights", ",", "handed", "over", "the", "keys", "&", "amp", ";", "told", "the", "Islamists", "to", "lock", "up", "when", "they", "'re", "done", "."]
# ::lemmas ["the", "president", "have", "essentially", "turn", "off", "all", "the", "light", ",", "hand", "over", "the", "key", "&", "amp", ";", "tell", "the", "Islamists", "to", "lock", "up", "when", "they", "be", "do", "."]
(c16-16 / and
        :op1 (c16-14 / turn-off-07
                     :ARG0 (c16-10 / person
                                   :ARG0-of (c16-0 / have-org-role-91
                                                   :ARG2 (c16-15 / president)))
                     :ARG1 (c16-1 / light
                                  :mod (c16-6 / all))
                     :mod (c16-5 / essential))
        :op2 (c16-2 / hand-over-02
                    :ARG0 c16-10
                    :ARG1 c16-16
                    :op1 (c16-7 / key)
                    :op2 (c16-9 / amp))
        :op3 (c16-13 / tell-01
                     :ARG0 c16-10
                     :ARG1 (c16-11 / lock-up-03
                                   :ARG1 (c16-3 / person
                                                :mod (c16-12 / religious-group
                                                             :name (c16-8 / name
                                                                          :op1 "Islamism")))
                                   :time (c16-4 / be-done-08
                                                :ARG0 c16-3))
                     :ARG2 c16-3))

# ::snt Word is Obama wants the shooters captured so he can them put in Gitmo for "recycling"
# ::tokens ["Word", "is", "Obama", "wants", "the", "shooters", "captured", "so", "he", "can", "them", "put", "in", "Gitmo", "for", "\"", "recycling", "\""]
# ::lemmas ["Word", "be", "Obama", "want", "the", "shooter", "capture", "so", "he", "can", "they", "put", "in", "Gitmo", "for", "\"", "recycling", "\""]
(c17-0 / word-01
       :ARG1 (c17-3 / want-01
                    :ARG0 (c17-6 / person
                                 :name (c17-4 / name
                                              :op1 "Obama"))
                    :ARG1 (c17-8 / capture-01
                                 :ARG1 (c17-12 / person
                                               :ARG0-of (c17-10 / shoot-02)))
                    :purpose (c17-2 / possible-01
                                    :ARG1 (c17-11 / put-01
                                                  :ARG0 c17-6
                                                  :ARG1 c17-12
                                                  :ARG2 (c17-1 / facility
                                                               :name (c17-5 / name
                                                                            :op1 "Gitmo"))
                                                  :ARG1-of (c17-7 / cause-01
                                                                  :ARG0 (c17-9 / recycle-01
                                                                               :ARG0 c17-12))))))

# ::snt Why are we holding candles and singing koombuyyah? Bombs, drones, soldiers. End the scourge.
# ::tokens ["Why", "are", "we", "holding", "candles", "and", "singing", "koombuyyah", "?", "Bombs", ",", "drones", ",", "soldiers", ".", "End", "the", "scourge", "."]
# ::lemmas ["why", "be", "we", "hold", "candle", "and", "singing", "koombuyyah", "?", "bomb", ",", "drone", ",", "soldier", ".", "end", "the", "scourge", "."]
(c18-4 / multi-sentence
       :snt1 (c18-10 / cause-01
                     :ARG0 (c18-14 / amr-unknown)
                     :ARG1 (c18-8 / and
                                  :op1 (c18-0 / hold-01
                                              :ARG0 (c18-1 / we)
                                              :ARG1 (c18-9 / candle))
                                  :op2 (c18-12 / sing-01
                                               :ARG0 c18-1
                                               :ARG1 (c18-13 / koombuyyah))
                                  :snt2-of c18-4))
       :op1 (c18-5 / bomb)
       :op2 (c18-11 / drone)
       :op3 (c18-6 / soldier)
       :snt3 (c18-7 / end-01
                    :ARG0 (c18-2 / you)
                    :ARG1 (c18-3 / scourge)
                    :mode imperative))

# ::snt 's borders are fricken wide open.
# ::tokens ["'s", "borders", "are", "fricken", "wide", "open", "."]
# ::lemmas ["'s", "border", "be", "fricken", "wide", "open", "."]
(c19-2 / open-01
       :ARG1 (c19-1 / border
                    :poss (c19-4 / country
                                 :name (c19-3 / name
                                              :op1 "Georgia")))
       :ARG1-of (c19-0 / wide-02))
