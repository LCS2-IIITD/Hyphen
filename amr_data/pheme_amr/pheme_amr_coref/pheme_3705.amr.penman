# ::snt Exactly. Why release the video if stopping Mike Brown was not related to the robbery? JESUS CHRIST THIS IS BAD.
# ::tokens ["Exactly", ".", "Why", "release", "the", "video", "if", "stopping", "Mike", "Brown", "was", "not", "related", "to", "the", "robbery", "?", "JESUS", "CHRIST", "THIS", "IS", "BAD", "."]
# ::lemmas ["exactly", ".", "why", "release", "the", "video", "if", "stop", "Mike", "Brown", "be", "not", "relate", "to", "the", "robbery", "?", "JESUS", "CHRIST", "this", "be", "bad", "."]
(c1-0 / multi-sentence
      :snt1 (c1-2 / exact)
      :snt2 (c1-9 / cause-01
                  :ARG0 (c1-13 / amr-unknown)
                  :ARG1 (c1-8 / release-01
                              :ARG1 (c1-6 / video)
                              :condition (c1-4 / relate-01
                                               :ARG1 (c1-11 / stop-01
                                                            :ARG1 (c1-7 / person
                                                                        :name (c1-5 / name
                                                                                    :op1 "Mike"
                                                                                    :op2 "Brown")))
                                               :ARG2 (c1-3 / rob-01)
                                               :polarity -)))
      :snt3 (c1-1 / bad-07
                  :ARG1 (c1-12 / this)
                  :ARG2 c1-7
                  :name (c1-10 / name
                               :op1 "Jesus")))

# ::snt he was stopped because they were in the middle of the street, told to get out of the street, words exchanged. Then the....
# ::tokens ["he", "was", "stopped", "because", "they", "were", "in", "the", "middle", "of", "the", "street", ",", "told", "to", "get", "out", "of", "the", "street", ",", "words", "exchanged", ".", "Then", "the", "...."]
# ::lemmas ["he", "be", "stop", "because", "they", "be", "in", "the", "middle", "of", "the", "street", ",", "tell", "to", "get", "out", "of", "the", "street", ",", "word", "exchange", ".", "then", "the", "...."]
(c2-3 / multi-sentence
      :snt1 (c2-13 / stop-01
                   :ARG1 (c2-0 / he)
                   :ARG1-of (c2-10 / cause-01
                                   :ARG0 (c2-4 / be-located-at-91
                                               :ARG1 (c2-14 / they)
                                               :ARG2 (c2-9 / middle
                                                           :part-of (c2-6 / street)))))
      :snt2 (c2-12 / tell-01
                   :ARG1 (c2-11 / get-05
                                :ARG2 (c2-5 / out-06
                                            :ARG2 (c2-2 / street)))
                   :ARG2 c2-0)
      :snt3 (c2-7 / exchange-01
                  :ARG1 (c2-1 / word)
                  :time (c2-8 / then)))

# ::snt report came over about the robbery. He has similar characteristics, approached again and scuffle happened and shot rang out.
# ::tokens ["report", "came", "over", "about", "the", "robbery", ".", "He", "has", "similar", "characteristics", ",", "approached", "again", "and", "scuffle", "happened", "and", "shot", "rang", "out", "."]
# ::lemmas ["report", "come", "over", "about", "the", "robbery", ".", "he", "have", "similar", "characteristic", ",", "approach", "again", "and", "scuffle", "happen", "and", "shoot", "ring", "out", "."]
(c3-2 / multi-sentence
      :snt1 (c3-10 / come-over-26
                   :ARG1 (c3-9 / report-01
                               :topic (c3-7 / rob-01)))
      :snt2 (c3-13 / and
                   :op1 (c3-5 / resemble-01
                              :ARG1 (c3-0 / he))
                   :op2 (c3-6 / and
                              :op1 (c3-8 / approach-01
                                         :ARG1 c3-0
                                         :mod (c3-12 / again))
                              :op2 (c3-3 / and
                                         :op1 (c3-11 / scuffle-02
                                                     :ARG0 c3-0)
                                         :op2 (c3-4 / shoot-02
                                                    :ARG0 c3-0)))
                   :op3 (c3-1 / ring-out-03
                              :ARG1 c3-4)))

# ::snt then they ran he pursued. Rest is history.
# ::tokens ["then", "they", "ran", "he", "pursued", ".", "Rest", "is", "history", "."]
# ::lemmas ["then", "they", "run", "he", "pursue", ".", "rest", "be", "history", "."]
(c4-1 / multi-sentence
      :snt1 (c4-3 / run-10
                  :ARG0 (c4-5 / they)
                  :time (c4-4 / then))
      :snt2 (c4-0 / history
                  :domain (c4-2 / rest-01)))

# ::snt Chief says "Media requested it"; media has no idea it existed
# ::tokens ["Chief", "says", "\"", "Media", "requested", "it", "\"", ";", "media", "has", "no", "idea", "it", "existed"]
# ::lemmas ["chief", "say", "\"", "medium", "request", "it", "\"", ";", "medium", "have", "no", "idea", "it", "exist"]
(c5-2 / multi-sentence
      :snt1 (c5-11 / say-01
                   :ARG0 (c5-6 / person
                               :mod (c5-8 / chief))
                   :ARG1 (c5-7 / request-01
                               :ARG0 (c5-9 / media)
                               :ARG1 (c5-5 / it)))
      :snt2 (c5-0 / have-03
                  :ARG0 (c5-1 / media)
                  :ARG1 (c5-10 / idea
                               :topic (c5-4 / exist-01
                                            :ARG1 (c5-3 / it)))
                  :polarity -))

# ::snt Maybe it would tell us that Michael was a thug who just might assault a cop. Was the stop I related? We don't know.
# ::tokens ["Maybe", "it", "would", "tell", "us", "that", "Michael", "was", "a", "thug", "who", "just", "might", "assault", "a", "cop", ".", "Was", "the", "stop", "I", "related", "?", "We", "do", "n't", "know", "."]
# ::lemmas ["maybe", "it", "would", "tell", "we", "that", "Michael", "be", "a", "thug", "who", "just", "might", "assault", "a", "cop", ".", "be", "the", "stop", "i", "relate", "?", "we", "do", "not", "know", "."]
(c6-1 / multi-sentence
      :snt1 (c6-4 / possible-01
                  :ARG1 (c6-18 / tell-01
                               :ARG0 (c6-13 / it)
                               :ARG1 (c6-17 / thug
                                            :domain (c6-6 / person
                                                          :name (c6-9 / name
                                                                      :op1 "Michael"))
                                            :ARG0-of (c6-7 / assault-01
                                                           :ARG1 (c6-16 / cop)
                                                           :ARG1-of (c6-8 / possible-01
                                                                          :mod (c6-0 / just))))
                               :ARG2 (c6-11 / we)))
      :snt2 (c6-10 / relate-01
                   :polarity (c6-12 / amr-unknown)
                   :ARG1 (c6-5 / stop-01
                               :ARG0 (c6-14 / i))
                   :ARG2 (c6-3 / we))
      :snt3 (c6-15 / know-01
                   :ARG0 (c6-2 / we)
                   :polarity -))

# ::snt Not exactly. He could have shot him dead for blocking traffic.
# ::tokens ["Not", "exactly", ".", "He", "could", "have", "shot", "him", "dead", "for", "blocking", "traffic", "."]
# ::lemmas ["not", "exactly", ".", "he", "could", "have", "shoot", "he", "dead", "for", "block", "traffic", "."]
(c7-1 / multi-sentence
      :snt1 (c7-3 / exact
                  :polarity -)
      :snt2 (c7-4 / possible-01
                  :ARG1 (c7-7 / shoot-02
                              :ARG0 (c7-0 / he)
                              :ARG1 (c7-9 / he)
                              :ARG2 (c7-5 / die-01
                                          :ARG1 c7-9)
                              :ARG1-of (c7-6 / cause-01
                                             :ARG0 (c7-2 / block-01
                                                         :ARG0 c7-9
                                                         :ARG1 (c7-8 / traffic))))))

# ::snt The fact that a leading witness to the shooting was also complicit in the robbery is pertinent, too.
# ::tokens ["The", "fact", "that", "a", "leading", "witness", "to", "the", "shooting", "was", "also", "complicit", "in", "the", "robbery", "is", "pertinent", ",", "too", "."]
# ::lemmas ["the", "fact", "that", "a", "lead", "witness", "to", "the", "shooting", "be", "also", "complicit", "in", "the", "robbery", "be", "pertinent", ",", "too", "."]
(c8-4 / relevant-01
      :ARG1 (c8-5 / complicit
                  :domain (c8-3 / person
                                :ARG0-of (c8-0 / witness-01
                                               :ARG1 (c8-6 / shoot-02)
                                               :ARG0-of (c8-1 / lead-01)))
                  :topic (c8-2 / rob-01)
                  :mod (c8-8 / also))
      :mod (c8-7 / too))

# ::snt : Exactly. Why release the video if stopping Mike Brown was not related to the robbery? JESUS CHRIST THIS IS BAD.
# ::tokens [":", "Exactly", ".", "Why", "release", "the", "video", "if", "stopping", "Mike", "Brown", "was", "not", "related", "to", "the", "robbery", "?", "JESUS", "CHRIST", "THIS", "IS", "BAD", "."]
# ::lemmas [":", "exactly", ".", "why", "release", "the", "video", "if", "stop", "Mike", "Brown", "be", "not", "relate", "to", "the", "robbery", "?", "JESUS", "CHRIST", "this", "be", "bad", "."]
(c9-0 / multi-sentence
      :snt1 (c9-2 / exact)
      :snt2 (c9-9 / cause-01
                  :ARG0 (c9-13 / amr-unknown)
                  :ARG1 (c9-8 / release-01
                              :ARG1 (c9-6 / video)
                              :condition (c9-4 / relate-01
                                               :ARG1 (c9-11 / stop-01
                                                            :ARG1 (c9-7 / person
                                                                        :name (c9-5 / name
                                                                                    :op1 "Mike"
                                                                                    :op2 "Brown")))
                                               :ARG2 (c9-3 / rob-01)
                                               :polarity -)))
      :snt3 (c9-1 / bad-07
                  :ARG1 (c9-12 / this)
                  :ARG2 c9-7
                  :name (c9-10 / name
                               :op1 "Jesus"
                               :op2 "Christ")))

# ::snt It speaks to his character, and to his state of mind ten minutes later.
# ::tokens ["It", "speaks", "to", "his", "character", ",", "and", "to", "his", "state", "of", "mind", "ten", "minutes", "later", "."]
# ::lemmas ["it", "speak", "to", "his", "character", ",", "and", "to", "his", "state", "of", "mind", "ten", "minutes", "later", "."]
(c10-7 / speak-01
       :ARG0 (c10-4 / it)
       :ARG1 (c10-9 / and
                    :op1 (c10-6 / character
                                :poss (c10-0 / he))
                    :op2 (c10-2 / state
                                :mod (c10-1 / mind)
                                :poss c10-0))
       :time (c10-3 / after
                    :quant (c10-8 / temporal-quantity
                                  :unit (c10-5 / minute)
                                  :quant 10)))

# ::snt They must've been full of glee when they DID connect that it was Mike in the video and could pin it all on him.
# ::tokens ["They", "must", "'ve", "been", "full", "of", "glee", "when", "they", "DID", "connect", "that", "it", "was", "Mike", "in", "the", "video", "and", "could", "pin", "it", "all", "on", "him", "."]
# ::lemmas ["they", "must", "'ve", "be", "full", "of", "glee", "when", "they", "DID", "connect", "that", "it", "be", "Mike", "in", "the", "video", "and", "could", "pin", "it", "all", "on", "he", "."]
(c11-3 / infer-01
       :ARG1 (c11-0 / fill-01
                    :ARG1 (c11-10 / they)
                    :ARG2 (c11-8 / glee)
                    :time (c11-7 / connect-01
                                 :ARG0 c11-10
                                 :ARG1 (c11-12 / and
                                               :op1 (c11-6 / person
                                                           :name (c11-4 / name
                                                                        :op1 "Mike")
                                                           :location (c11-5 / video))
                                               :op2 (c11-11 / possible-01
                                                            :ARG1 (c11-1 / pin-01
                                                                         :ARG0 c11-10
                                                                         :ARG1 (c11-9 / it
                                                                                      :mod (c11-2 / all))
                                                                         :ARG2 c11-6))))))

# ::snt uh I know what that is. I have a JD. The reporters at the presser were saying they didn't request it, hence the tweet.
# ::tokens ["uh", "I", "know", "what", "that", "is", ".", "I", "have", "a", "JD", ".", "The", "reporters", "at", "the", "presser", "were", "saying", "they", "did", "n't", "request", "it", ",", "hence", "the", "tweet", "."]
# ::lemmas ["uh", "i", "know", "what", "that", "be", ".", "i", "have", "a", "JD", ".", "the", "reporter", "at", "the", "presser", "be", "say", "they", "do", "not", "request", "it", ",", "hence", "the", "tweet", "."]
(c12-2 / multi-sentence
       :snt1 (c12-5 / know-01
                    :ARG0 (c12-4 / i)
                    :ARG1 (c12-15 / thing
                                  :domain (c12-13 / that)))
       :snt2 (c12-0 / have-03
                    :ARG0 (c12-11 / i)
                    :ARG1 (c12-8 / product
                                 :name (c12-6 / name
                                              :op1 "JD")))
       :snt3 (c12-14 / say-01
                     :ARG0 (c12-16 / person
                                   :ARG0-of (c12-9 / report-01)
                                   :location (c12-3 / presser))
                     :ARG1 (c12-7 / request-01
                                  :ARG0 c12-16
                                  :ARG1 (c12-1 / it)
                                  :polarity -)
                     :ARG0-of (c12-10 / cause-01
                                      :ARG1 (c12-12 / tweet-02))))

# ::snt Because people who commit robberies are less likely to deal on friendly terms with police.
# ::tokens ["Because", "people", "who", "commit", "robberies", "are", "less", "likely", "to", "deal", "on", "friendly", "terms", "with", "police", "."]
# ::lemmas ["because", "people", "who", "commit", "robbery", "be", "less", "likely", "to", "deal", "on", "friendly", "term", "with", "police", "."]
(c13-6 / cause-01
       :ARG0 (c13-1 / likely-01
                    :ARG1 (c13-4 / deal-01
                                 :ARG0 (c13-3 / person
                                              :ARG0-of (c13-5 / rob-01))
                                 :ARG1 (c13-9 / police)
                                 :ARG2 (c13-8 / term
                                              :ARG1-of (c13-2 / friendly-01)))
                    :ARG2-of (c13-0 / have-degree-91
                                    :ARG1 c13-3
                                    :ARG3 (c13-7 / less))))

# ::snt they claim they released the tape because it was a FOIA request *enters side eye*
# ::tokens ["they", "claim", "they", "released", "the", "tape", "because", "it", "was", "a", "FOIA", "request", "*", "enters", "side", "eye", "*"]
# ::lemmas ["they", "claim", "they", "release", "the", "tape", "because", "it", "be", "a", "FOIA", "request", "*", "enter", "side", "eye", "*"]
(c14-0 / multi-sentence
       :snt1 (c14-7 / claim-01
                    :ARG0 (c14-12 / they)
                    :ARG1 (c14-6 / release-01
                                 :ARG0 c14-12
                                 :ARG1 (c14-10 / tape)
                                 :ARG1-of (c14-8 / cause-01
                                                 :ARG0 (c14-3 / request-01
                                                              :ARG0 (c14-9 / government-organization
                                                                           :name (c14-4 / name
                                                                                        :op1 "FOIA"))
                                                              :ARG1 c14-10))))
       :snt2 (c14-2 / eye
                    :mod (c14-11 / side)
                    :poss (c14-5 / person
                                 :ARG0-of (c14-1 / enter-01))))

# ::snt Look up the Freedom of Information Act (FOIA). Media must understand media law.
# ::tokens ["Look", "up", "the", "Freedom", "of", "Information", "Act", "(", "FOIA", ")", ".", "Media", "must", "understand", "media", "law", "."]
# ::lemmas ["look", "up", "the", "Freedom", "of", "Information", "Act", "(", "FOIA", ")", ".", "medium", "must", "understand", "medium", "law", "."]
(c15-3 / multi-sentence
       :snt1 (c15-2 / look-up-05
                    :ARG0 (c15-1 / you)
                    :ARG1 (c15-9 / law
                                 :name (c15-7 / name
                                              :op1 "Freedom"
                                              :op2 "of"
                                              :op3 "Information"
                                              :op4 "Act"))
                    :mode imperative)
       :snt2 (c15-6 / obligate-01
                    :ARG1 (c15-8 / media)
                    :ARG2 (c15-4 / understand-01
                                 :ARG0 c15-8
                                 :ARG1 (c15-0 / law
                                              :mod (c15-5 / media)))))

# ::snt But that means officer had no legitimate reason to interact with , don't you think?
# ::tokens ["But", "that", "means", "officer", "had", "no", "legitimate", "reason", "to", "interact", "with", ",", "do", "n't", "you", "think", "?"]
# ::lemmas ["but", "that", "mean", "officer", "have", "no", "legitimate", "reason", "to", "interact", "with", ",", "do", "not", "you", "think", "?"]
(c16-7 / contrast-01
       :ARG2 (c16-2 / mean-01
                    :ARG1 (c16-8 / that)
                    :ARG2 (c16-0 / have-03
                                 :ARG0 (c16-3 / officer)
                                 :ARG1 (c16-6 / reason
                                              :ARG1-of (c16-1 / legitimate-02)
                                              :purpose (c16-4 / interact-01
                                                              :ARG0 c16-3))
                                 :polarity -)
                    :ARG1-of (c16-5 / request-confirmation-91)))

# ::snt It goes to state of mind of the deceased. He robs a place, then sees a policeman.
# ::tokens ["It", "goes", "to", "state", "of", "mind", "of", "the", "deceased", ".", "He", "robs", "a", "place", ",", "then", "sees", "a", "policeman", "."]
# ::lemmas ["it", "go", "to", "state", "of", "mind", "of", "the", "deceased", ".", "he", "rob", "a", "place", ",", "then", "see", "a", "policeman", "."]
(c17-1 / multi-sentence
       :snt1 (c17-8 / go-01
                    :ARG1 (c17-4 / it)
                    :ARG4 (c17-10 / state
                                  :mod (c17-5 / mind)
                                  :poss (c17-6 / person
                                               :ARG1-of (c17-7 / decease-01))))
       :snt2 (c17-13 / and
                     :op1 (c17-9 / robs-01
                                 :ARG0 (c17-0 / he)
                                 :ARG1 (c17-12 / place))
                     :op2 (c17-3 / see-01
                                 :ARG0 c17-0
                                 :ARG1 (c17-2 / policeman)
                                 :time (c17-11 / then))))

# ::snt WE'VE GOT2KEEP R EYE'S ON THE PRIZE (JUSTICE MICHAEL)&ampEBUNK LIES AS THEY TRY2ASSASSINATE MICHEAL VIA MEDIA!
# ::tokens ["WE'VE", "GOT2KEEP", "R", "EYE", "'S", "ON", "THE", "PRIZE", "(", "JUSTICE", "MICHAEL)&ampEBUNK", "LIES", "AS", "THEY", "TRY2ASSASSINATE", "MICHEAL", "VIA", "MEDIA", "!"]
# ::lemmas ["we've", "GOT2KEEP", "R", "EYE", "'s", "on", "the", "PRIZE", "(", "JUSTICE", "MICHAEL)&ampEBUNK", "lie", "as", "THEY", "try2assassinate", "micheal", "VIA", "MEDIA", "!"]
(c18-10 / get-02
        :ARG0 (c18-0 / we)
        :ARG1 (c18-14 / and
                      :op1 (c18-12 / keep-01
                                   :ARG0 c18-0
                                   :ARG1 (c18-3 / eye-01
                                                :ARG1 (c18-4 / and
                                                             :op1 (c18-8 / person
                                                                         :name (c18-6 / name
                                                                                      :op1 "JustICE"
                                                                                      :op2 "Michael"))
                                                             :op2 (c18-13 / press))))
                      :op2 (c18-1 / lie-08
                                  :ARG0 c18-4))
        :ARG1-of (c18-9 / cause-01
                        :ARG0 (c18-11 / try-01
                                      :ARG0 c18-4
                                      :ARG1 (c18-2 / media
                                                   :mod c18-2
                                                   :mod (c18-5 / industry))
                                      :ARG1-of (c18-7 / ASSinate-01))))

# ::snt MT : "The police should've covered up Mike Brown's robbery!"
# ::tokens ["MT", ":", "\"", "The", "police", "should", "'ve", "covered", "up", "Mike", "Brown", "'s", "robbery", "!", "\""]
# ::lemmas ["MT", ":", "\"", "the", "police", "should", "'ve", "cover", "up", "Mike", "Brown", "'s", "robbery", "!", "\""]
(c19-7 / say-01
       :ARG0 (c19-4 / person
                    :name (c19-2 / name
                                 :op1 "MT"))
       :ARG1 (c19-5 / recommend-01
                    :ARG1 (c19-6 / cover-up-04
                                 :ARG0 (c19-8 / police)
                                 :ARG1 (c19-1 / rob-01
                                              :ARG0 (c19-0 / person
                                                           :name (c19-3 / name
                                                                        :op1 "Mike"
                                                                        :op2 "Brown"))))))

# ::snt the day isn't done unless a white person calls a person of color a "thug." Ridiculous.
# ::tokens ["the", "day", "is", "n't", "done", "unless", "a", "white", "person", "calls", "a", "person", "of", "color", "a", "\"", "thug", ".", "\"", "Ridiculous", "."]
# ::lemmas ["the", "day", "be", "not", "do", "unless", "a", "white", "person", "call", "a", "person", "of", "color", "a", "\"", "thug", ".", "\"", "ridiculous", "."]
(c20-2 / multi-sentence
       :snt1 (c20-4 / do-02
                    :ARG1 (c20-1 / day)
                    :condition (c20-5 / call-01
                                      :ARG0 (c20-3 / person
                                                   :ARG1-of (c20-0 / white-02))
                                      :ARG1 (c20-9 / person
                                                   :mod (c20-6 / color))
                                      :ARG2 (c20-8 / thug)
                                      :polarity -)
                    :polarity -)
       :snt2 (c20-7 / ridiculous-02))

# ::snt , FYI RT : Some journos at press conference seem to lack grasp of FOI/Sunshine requests, think PC simply...
# ::tokens [",", "FYI", "RT", ":", "Some", "journos", "at", "press", "conference", "seem", "to", "lack", "grasp", "of", "FOI", "/", "Sunshine", "requests", ",", "think", "PC", "simply", "..."]
# ::lemmas [",", "FYI", "RT", ":", "some", "journo", "at", "press", "conference", "seem", "to", "lack", "grasp", "of", "FOI", "/", "Sunshine", "request", ",", "think", "pc", "simply", "..."]
(c21-4 / say-01
       :ARG1 (c21-6 / and
                    :op1 (c21-10 / seem-01
                                 :ARG1 (c21-7 / lack-01
                                              :ARG0 (c21-0 / journalist
                                                           :quant (c21-19 / some)
                                                           :location (c21-21 / conference
                                                                             :mod (c21-2 / press)))
                                              :ARG1 (c21-14 / grasp-01
                                                            :ARG0 c21-0
                                                            :ARG1 (c21-13 / request-01
                                                                          :ARG1 (c21-16 / and
                                                                                        :op1 (c21-5 / publication
                                                                                                    :name (c21-12 / name
                                                                                                                  :op1 "FOI"))
                                                                                        :op2 (c21-8 / publication
                                                                                                    :name (c21-20 / name
                                                                                                                  :op1 "Sunshine")))))))
                    :op2 (c21-22 / think-01
                                 :ARG0 c21-0
                                 :ARG1 (c21-3 / correct-02
                                              :mod (c21-15 / politics))
                                 :ARG1-of (c21-9 / simple-02)))
       :ARG2 (c21-11 / publication
                     :name (c21-1 / name
                                  :op1 "RT"))
       :purpose (c21-17 / inform-01
                        :ARG1 (c21-18 / you)))

# ::snt EXACTLY.
# ::tokens ["EXACTLY", "."]
# ::lemmas ["exactly", "."]
(c22-0 / exact)
