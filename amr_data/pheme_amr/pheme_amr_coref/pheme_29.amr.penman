# ::snt Why take over a chocolate factory/cafe ?????
# ::tokens ["Why", "take", "over", "a", "chocolate", "factory", "/", "cafe", "?", "?", "?", "?", "?"]
# ::lemmas ["why", "take", "over", "a", "chocolate", "factory", "/", "cafe", "?", "?", "?", "?", "?"]
(c1-5 / take-over-12
      :ARG1 (c1-4 / slash
                  :op1 (c1-0 / factory
                             :mod (c1-2 / chocolate))
                  :op2 (c1-1 / cafe
                             :mod c1-2))
      :ARG1-of (c1-3 / cause-01
                     :ARG0 (c1-6 / amr-unknown)))

# ::snt Pulp Fiction?
# ::tokens ["Pulp", "Fiction", "?"]
# ::lemmas ["Pulp", "Fiction", "?"]
(c2-0 / fiction
      :polarity (c2-2 / amr-unknown)
      :mod (c2-1 / ulp))

# ::snt one day yes just one day my friend peace
# ::tokens ["one", "day", "yes", "just", "one", "day", "my", "friend", "peace"]
# ::lemmas ["one", "day", "yes", "just", "one", "day", "my", "friend", "peace"]
(c3-7 / peace
      :time (c3-8 / day
                  :mod (c3-5 / one))
      :poss (c3-9 / person
                  :ARG0-of (c3-0 / have-rel-role-91
                                 :ARG1 (c3-6 / i)
                                 :ARG2 (c3-3 / friend)))
      :mod (c3-1 / yes)
      :mod (c3-2 / just)
      :time (c3-4 / day
                  :mod c3-5))

# ::snt : Reports are coming in of a hostage situation at a cafe in the Australian city of Sydney
# ::tokens [":", "Reports", "are", "coming", "in", "of", "a", "hostage", "situation", "at", "a", "cafe", "in", "the", "Australian", "city", "of", "Sydney"]
# ::lemmas [":", "report", "be", "come", "in", "of", "a", "hostage", "situation", "at", "a", "cafe", "in", "the", "Australian", "city", "of", "Sydney"]
(c4-4 / come-03
      :ARG1 (c4-3 / report-01
                  :ARG1 (c4-7 / situation
                              :mod (c4-0 / hostage)
                              :location (c4-5 / cafe
                                              :location (c4-6 / city
                                                              :name (c4-1 / name
                                                                          :op1 "Sydney")
                                                              :location (c4-8 / country
                                                                              :name (c4-2 / name
                                                                                          :op1 "Australia")))))))

# ::snt Yup. And all of this is in the name of religion.
# ::tokens ["Yup", ".", "And", "all", "of", "this", "is", "in", "the", "name", "of", "religion", "."]
# ::lemmas ["yup", ".", "and", "all", "of", "this", "be", "in", "the", "name", "of", "religion", "."]
(c5-1 / multi-sentence
      :snt1 (c5-0 / yup)
      :snt2 (c5-5 / and
                  :op2 (c5-4 / this
                             :mod (c5-2 / all)
                             :beneficiary (c5-3 / religion))))

# ::snt Oh right. I just pray there will be no casualties.
# ::tokens ["Oh", "right", ".", "I", "just", "pray", "there", "will", "be", "no", "casualties", "."]
# ::lemmas ["oh", "right", ".", "i", "just", "pray", "there", "will", "be", "no", "casualty", "."]
(c6-1 / multi-sentence
      :snt1 (c6-5 / right-06
                  :mod (c6-2 / oh
                             :mode expressive))
      :snt2 (c6-4 / pray-01
                  :ARG0 (c6-3 / i)
                  :ARG1 (c6-6 / casualty
                              :polarity -)
                  :mod (c6-0 / just)))

# ::snt Was the food really that bad get the chef lol
# ::tokens ["Was", "the", "food", "really", "that", "bad", "get", "the", "chef", "lol"]
# ::lemmas ["be", "the", "food", "really", "that", "bad", "get", "the", "chef", "lol"]
(c7-9 / say-01
      :ARG0 (c7-3 / i)
      :ARG1 (c7-2 / bad-07
                  :ARG1 (c7-0 / food)
                  :degree (c7-10 / that)
                  :ARG1-of (c7-4 / real-04)
                  :ARG0-of (c7-5 / cause-01
                                 :ARG1 (c7-6 / get-01
                                             :ARG0 c7-3
                                             :ARG1 (c7-7 / chef)))
                  :ARG2-of (c7-1 / laugh-01
                                 :ARG0 c7-3
                                 :manner (c7-8 / loud)
                                 :mode expressive))
      :ARG2 c7-7)

# ::snt Why take over a chocolate factory/care ?
# ::tokens ["Why", "take", "over", "a", "chocolate", "factory", "/", "care", "?"]
# ::lemmas ["why", "take", "over", "a", "chocolate", "factory", "/", "care", "?"]
(c8-5 / take-over-12
      :ARG1 (c8-4 / slash
                  :op1 (c8-0 / factory
                             :mod (c8-2 / chocolate))
                  :op2 (c8-1 / care-03
                             :mod c8-2))
      :ARG1-of (c8-3 / cause-01
                     :ARG0 (c8-6 / amr-unknown)))

# ::snt Really bbc??!You couldn't translate the 'Arabic writing'?' ": Reports are coming in of a hostage situation at a cafe in Sydney"
# ::tokens ["Really", "bbc??!You", "could", "n't", "translate", "the", "'", "Arabic", "writing", "'", "?", "'", "\"", ":", "Reports", "are", "coming", "in", "of", "a", "hostage", "situation", "at", "a", "cafe", "in", "Sydney", "\""]
# ::lemmas ["really", "bbc??!you", "could", "not", "translate", "the", "'", "Arabic", "writing", "'", "?", "'", "\"", ":", "report", "be", "come", "in", "of", "a", "hostage", "situation", "at", "a", "cafe", "in", "Sydney", "\""]
(c9-4 / multi-sentence
      :snt1 (c9-9 / possible-01
                  :ARG1 (c9-14 / translate-01
                               :ARG0 (c9-1 / you)
                               :ARG1 (c9-2 / write-01
                                           :mod (c9-3 / language
                                                      :name (c9-7 / name
                                                                  :op1 "Arabic"))))
                  :polarity (c9-15 / amr-unknown)
                  :ARG1-of (c9-10 / real-04)
                  :polarity (c9-5 / amr-unknown)
                  :polarity -)
      :snt2 (c9-6 / report-01
                  :ARG1 (c9-13 / situation
                               :mod (c9-0 / hostage)
                               :location (c9-11 / cafe
                                                :location (c9-12 / city
                                                                 :name (c9-8 / name
                                                                             :op1 "Sydney"))))))

# ::snt : Reports are coming in of a hostage situation at a cafe in the Australian city of Sydney
# ::tokens [":", "Reports", "are", "coming", "in", "of", "a", "hostage", "situation", "at", "a", "cafe", "in", "the", "Australian", "city", "of", "Sydney"]
# ::lemmas [":", "report", "be", "come", "in", "of", "a", "hostage", "situation", "at", "a", "cafe", "in", "the", "Australian", "city", "of", "Sydney"]
(c10-4 / come-03
       :ARG1 (c10-3 / report-01
                    :ARG1 (c10-7 / situation
                                 :mod (c10-0 / hostage)
                                 :location (c10-5 / cafe
                                                  :location (c10-6 / city
                                                                   :name (c10-1 / name
                                                                                :op1 "Sydney")
                                                                   :location (c10-8 / country
                                                                                    :name (c10-2 / name
                                                                                                 :op1 "Australia")))))))

# ::snt Not an ISIS flag, must be another group of loveable Fascists.
# ::tokens ["Not", "an", "ISIS", "flag", ",", "must", "be", "another", "group", "of", "loveable", "Fascists", "."]
# ::lemmas ["not", "an", "ISIS", "flag", ",", "must", "be", "another", "group", "of", "loveable", "Fascists", "."]
(c11-3 / infer-01
       :ARG1 (c11-8 / group
                    :consist-of (c11-6 / person
                                       :mod (c11-9 / political-movement
                                                   :name (c11-4 / name
                                                                :op1 "Fascism"))
                                       :ARG1-of (c11-0 / love-01
                                                       :ARG1-of (c11-2 / possible-01)))
                    :mod (c11-10 / another)
                    :domain (c11-1 / flag
                                   :mod (c11-7 / religious-group
                                               :name (c11-5 / name
                                                            :op1 "ISIS"))
                                   :polarity -)))

# ::snt don't know please don't go out today!
# ::tokens ["do", "n't", "know", "please", "do", "n't", "go", "out", "today", "!"]
# ::lemmas ["do", "not", "know", "please", "do", "not", "go", "out", "today", "!"]
(c12-2 / know-01
       :ARG0 (c12-1 / i)
       :ARG1 (c12-3 / go-out-17
                    :ARG0 (c12-0 / you)
                    :time (c12-4 / today)
                    :mode imperative
                    :polite +
                    :polarity -)
       :polarity -)

# ::snt I'll know who to blame then if it ends badly.
# ::tokens ["I", "'ll", "know", "who", "to", "blame", "then", "if", "it", "ends", "badly", "."]
# ::lemmas ["i", "'ll", "know", "who", "to", "blame", "then", "if", "it", "end", "badly", "."]
(c13-6 / know-01
       :ARG0 (c13-2 / i)
       :ARG1 (c13-3 / person
                    :ARG1-of (c13-0 / blame-01))
       :condition (c13-1 / end-01
                         :ARG1 (c13-5 / it)
                         :ARG1-of (c13-4 / bad-07)))

# ::snt Saw some story last week that they're making a monument to that event. Spirt and humour can be great unifiers.
# ::tokens ["Saw", "some", "story", "last", "week", "that", "they", "'re", "making", "a", "monument", "to", "that", "event", ".", "Spirt", "and", "humour", "can", "be", "great", "unifiers", "."]
# ::lemmas ["saw", "some", "story", "last", "week", "that", "they", "be", "make", "a", "monument", "to", "that", "event", ".", "Spirt", "and", "humour", "can", "be", "great", "unifier", "."]
(c14-3 / multi-sentence
       :snt1 (c14-15 / see-01
                     :ARG0 (c14-10 / i)
                     :ARG1 (c14-8 / story
                                  :mod (c14-2 / some)
                                  :topic (c14-11 / make-01
                                                 :ARG0 (c14-16 / they)
                                                 :ARG1 (c14-4 / monument
                                                              :prep-to (c14-9 / event
                                                                              :mod (c14-14 / that)))))
                     :time (c14-1 / week
                                  :mod (c14-5 / last)))
       :snt2 (c14-12 / possible-01
                     :ARG1 (c14-6 / unify-01
                                  :ARG0 (c14-17 / and
                                                :op1 (c14-7 / spirt)
                                                :op2 (c14-0 / humor))
                                  :mod (c14-13 / great))))

# ::snt fair enough. Fair point. Still think it may be too soon but your view at least tells me your not one of those tools sans feeling
# ::tokens ["fair", "enough", ".", "Fair", "point", ".", "Still", "think", "it", "may", "be", "too", "soon", "but", "your", "view", "at", "least", "tells", "me", "your", "not", "one", "of", "those", "tools", "sans", "feeling"]
# ::lemmas ["fair", "enough", ".", "fair", "point", ".", "still", "think", "it", "may", "be", "too", "soon", "but", "your", "view", "at", "least", "tell", "i", "your", "not", "one", "of", "those", "tool", "san", "feel"]
(c15-1 / multi-sentence
       :snt1 (c15-9 / fair-01
                    :ARG2-of (c15-8 / have-degree-91
                                    :ARG3 (c15-10 / enough)))
       :snt2 (c15-3 / point-04
                    :ARG1-of (c15-18 / fair-01))
       :snt3 (c15-20 / contrast-01
                     :ARG1 (c15-22 / think-01
                                   :ARG0 (c15-13 / i)
                                   :ARG1 (c15-5 / possible-01
                                                :ARG1 (c15-4 / soon
                                                             :ARG2-of (c15-6 / have-degree-91
                                                                             :ARG1 (c15-15 / it)
                                                                             :ARG3 (c15-21 / too))))
                                   :mod (c15-11 / still))
                     :ARG2 (c15-14 / tell-01
                                   :ARG0 (c15-2 / view-02
                                                :ARG0 (c15-16 / you))
                                   :ARG1 (c15-0 / include-91
                                                :ARG1 c15-16
                                                :ARG2 (c15-17 / tool
                                                              :mod (c15-19 / that))
                                                :polarity -)
                                   :ARG2 c15-13
                                   :mod (c15-7 / at-least)
                                   :manner (c15-12 / feel-01
                                                   :ARG0 c15-16
                                                   :polarity -))))

# ::snt **Winnfield
# ::tokens ["*", "*", "Winnfield"]
# ::lemmas ["*", "*", "Winnfield"]
(c16-1 / person
       :name (c16-0 / name
                    :op1 "Winnfield"))

# ::snt lol, jokes aside there is a fully armed police force surrounding the building
# ::tokens ["lol", ",", "jokes", "aside", "there", "is", "a", "fully", "armed", "police", "force", "surrounding", "the", "building"]
# ::lemmas ["lol", ",", "joke", "aside", "there", "be", "a", "fully", "armed", "police", "force", "surround", "the", "building"]
(c17-6 / surround-01
       :ARG1 (c17-1 / force
                    :mod (c17-5 / police)
                    :ARG1-of (c17-7 / arm-01
                                    :ARG1-of (c17-4 / full-09)))
       :ARG2 (c17-3 / building)
       :concession (c17-0 / joke-01
                          :manner (c17-2 / loud)))

# ::snt Hey man, it's ISIS. What happened to their other hostages. I can't help but fear the worst. Just keep hope I guess
# ::tokens ["Hey", "man", ",", "it", "'s", "ISIS", ".", "What", "happened", "to", "their", "other", "hostages", ".", "I", "ca", "n't", "help", "but", "fear", "the", "worst", ".", "Just", "keep", "hope", "I", "guess"]
# ::lemmas ["hey", "man", ",", "it", "be", "ISIS", ".", "what", "happen", "to", "their", "other", "hostage", ".", "i", "can", "not", "help", "but", "fear", "the", "bad", ".", "just", "keep", "hope", "i", "guess"]
(c18-2 / multi-sentence
       :snt1 (c18-5 / say-01
                    :ARG0 (c18-14 / i)
                    :ARG1 (c18-15 / it)
                    :ARG2 (c18-12 / man)
                    :mod (c18-7 / hey
                                :mode expressive))
       :snt2 (c18-11 / event
                     :topic (c18-6 / hostage
                                   :poss (c18-22 / they)
                                   :mod (c18-19 / other)))
       :snt3 (c18-4 / possible-01
                    :ARG1 (c18-3 / help-02
                                 :ARG0 (c18-1 / i)
                                 :ARG1 (c18-8 / fear-01
                                              :ARG0 c18-1
                                              :ARG1 (c18-21 / thing
                                                            :ARG1-of (c18-10 / bad-04
                                                                             :ARG2-of (c18-16 / have-degree-91
                                                                                              :ARG1 c18-21
                                                                                              :ARG3 (c18-9 / most))))))
                    :polarity -)
       :snt4 (c18-17 / keep-02
                     :ARG0 (c18-20 / i)
                     :ARG1 (c18-18 / hope-01
                                   :ARG0 c18-20)
                     :mod (c18-0 / just)
                     :ARG1-of (c18-13 / guess-01
                                      :ARG0 c18-20)))

# ::snt : Reports are coming in of a hostage situation at a cafe in the Australian city of Sydney
# ::tokens [":", "Reports", "are", "coming", "in", "of", "a", "hostage", "situation", "at", "a", "cafe", "in", "the", "Australian", "city", "of", "Sydney"]
# ::lemmas [":", "report", "be", "come", "in", "of", "a", "hostage", "situation", "at", "a", "cafe", "in", "the", "Australian", "city", "of", "Sydney"]
(c19-4 / come-03
       :ARG1 (c19-3 / report-01
                    :ARG1 (c19-7 / situation
                                 :mod (c19-0 / hostage)
                                 :location (c19-5 / cafe
                                                  :location (c19-6 / city
                                                                   :name (c19-1 / name
                                                                                :op1 "Sydney")
                                                                   :location (c19-8 / country
                                                                                    :name (c19-2 / name
                                                                                                 :op1 "Australia")))))))

# ::snt Watching news with my Dad we hope all gets sorted we joke to help us deal with things that's all no harm meant
# ::tokens ["Watching", "news", "with", "my", "Dad", "we", "hope", "all", "gets", "sorted", "we", "joke", "to", "help", "us", "deal", "with", "things", "that", "'s", "all", "no", "harm", "meant"]
# ::lemmas ["watch", "news", "with", "my", "dad", "we", "hope", "all", "get", "sort", "we", "joke", "to", "help", "we", "deal", "with", "thing", "that", "be", "all", "no", "harm", "mean"]
(c20-13 / and
        :op1 (c20-1 / watch-01
                    :ARG0 (c20-8 / we)
                    :ARG1 (c20-9 / news)
                    :accompanier (c20-10 / person
                                         :ARG0-of (c20-0 / have-rel-role-91
                                                         :ARG1 (c20-7 / i)
                                                         :ARG2 (c20-11 / dad))))
        :op2 (c20-2 / joke-01
                    :ARG0 c20-8
                    :ARG2 (c20-3 / help-01
                                 :ARG0 c20-8
                                 :ARG1 (c20-4 / deal-01
                                              :ARG0 c20-8
                                              :ARG2 (c20-12 / thing
                                                            :ARG1-of (c20-5 / mean-02
                                                                            :mod (c20-6 / all)
                                                                            :polarity -)))
                                 :ARG2 c20-8)))

# ::snt which cafe??
# ::tokens ["which", "cafe", "?", "?"]
# ::lemmas ["which", "cafe", "?", "?"]
(c21-0 / cafe
       :mod (c21-1 / amr-unknown))

# ::snt if we all just smile maybe just maybe we can have a more peaceful world - never cry or fear
# ::tokens ["if", "we", "all", "just", "smile", "maybe", "just", "maybe", "we", "can", "have", "a", "more", "peaceful", "world", "-", "never", "cry", "or", "fear"]
# ::lemmas ["if", "we", "all", "just", "smile", "maybe", "just", "maybe", "we", "can", "have", "a", "more", "peaceful", "world", "-", "never", "cry", "or", "fear"]
(c22-9 / possible-01
       :ARG1 (c22-0 / have-03
                    :ARG0 (c22-1 / we
                                 :mod (c22-14 / all))
                    :ARG1 (c22-8 / world
                                 :ARG1-of (c22-3 / have-degree-91
                                                 :ARG2 (c22-13 / peaceful)
                                                 :ARG3 (c22-4 / more))))
       :condition (c22-12 / smile-01
                          :ARG0 c22-1
                          :mod (c22-2 / just))
       :ARG1-of (c22-10 / mean-01
                        :ARG2 (c22-6 / or
                                     :op1 (c22-11 / cry-02
                                                  :ARG0 c22-1
                                                  :polarity -)
                                     :op2 (c22-5 / fear-01
                                                 :ARG0 c22-1
                                                 :polarity -)
                                     :time (c22-7 / ever))))

# ::snt For Only $25 You Can Buy K Followers
# ::tokens ["For", "Only", "$", "25", "You", "Can", "Buy", "K", "Followers"]
# ::lemmas ["for", "Only", "$", "25", "you", "can", "buy", "K", "follower"]
(c23-5 / possible-01
       :ARG1 (c23-3 / buy-01
                    :ARG0 (c23-0 / you)
                    :ARG1 (c23-7 / person
                                 :ARG0-of (c23-1 / follow-01))
                    :ARG3 (c23-2 / monetary-quantity
                                 :unit (c23-6 / dollar)
                                 :mod (c23-4 / only)
                                 :quant 25)))

# ::snt Sounds like responsible coverage. Any word on the odds of it ending in a fatality?
# ::tokens ["Sounds", "like", "responsible", "coverage", ".", "Any", "word", "on", "the", "odds", "of", "it", "ending", "in", "a", "fatality", "?"]
# ::lemmas ["sound", "like", "responsible", "coverage", ".", "any", "word", "on", "the", "odd", "of", "it", "end", "in", "a", "fatality", "?"]
(c24-2 / multi-sentence
       :snt1 (c24-9 / sound-01
                    :ARG2 (c24-8 / cover-03
                                 :ARG1-of (c24-7 / responsible-02)))
       :snt2 (c24-0 / word-01
                    :ARG1 (c24-3 / odds
                                 :topic (c24-4 / end-01
                                               :ARG1 (c24-6 / it)
                                               :ARG2 (c24-1 / fatality)))
                    :mod (c24-10 / any)
                    :polarity (c24-5 / amr-unknown)))

# ::snt yup. Get it. Glad you clarified it. And humour is omnipresent with me.
# ::tokens ["yup", ".", "Get", "it", ".", "Glad", "you", "clarified", "it", ".", "And", "humour", "is", "omnipresent", "with", "me", "."]
# ::lemmas ["yup", ".", "get", "it", ".", "glad", "you", "clarify", "it", ".", "and", "humour", "be", "omnipresent", "with", "i", "."]
(c25-3 / multi-sentence
       :snt1 (c25-1 / yup)
       :snt2 (c25-9 / get-30
                    :ARG0 (c25-11 / you)
                    :ARG1 (c25-6 / it)
                    :mode imperative)
       :snt3 (c25-7 / glad-02
                    :ARG0 (c25-8 / clarify-10
                                 :ARG0 (c25-4 / you)
                                 :ARG1 (c25-10 / it)))
       :snt4 (c25-12 / and
                     :op2 (c25-5 / omnipresent
                                 :domain (c25-0 / humor)
                                 :beneficiary (c25-2 / i))))

# ::snt Yes true jokes aside hope all gets sorted peacefully send in the C.I.A
# ::tokens ["Yes", "true", "jokes", "aside", "hope", "all", "gets", "sorted", "peacefully", "send", "in", "the", "C.I.A"]
# ::lemmas ["yes", "true", "joke", "aside", "hope", "all", "gets", "sort", "peacefully", "send", "in", "the", "C.I.A"]
(c26-0 / hope-01
       :ARG1 (c26-7 / sort-01
                    :ARG1 (c26-9 / all)
                    :manner (c26-6 / peaceful))
       :concession (c26-4 / aside
                          :op1 (c26-1 / joke-01
                                      :ARG1-of (c26-8 / true-01)))
       :ARG1-of (c26-3 / send-01
                       :ARG2 (c26-2 / organization
                                    :name (c26-5 / name
                                                 :op1 "C.I.A."))))

# ::snt Good God... Hopefully there's a Jules Winnifeild type character there to save them all
# ::tokens ["Good", "God", "...", "Hopefully", "there", "'s", "a", "Jules", "Winnifeild", "type", "character", "there", "to", "save", "them", "all"]
# ::lemmas ["good", "God", "...", "hopefully", "there", "be", "a", "Jules", "Winnifeild", "type", "character", "there", "to", "save", "they", "all"]
(c28-1 / multi-sentence
       :snt1 (c28-7 / god
                    :ARG1-of (c28-5 / good-02))
       :snt2 (c28-0 / hope-01
                    :ARG1 (c28-6 / character
                                 :ARG1-of (c28-10 / type-03
                                                  :ARG2 (c28-4 / person
                                                               :name (c28-2 / name
                                                                            :op1 "Jules"
                                                                            :op2 "Winnifeild")))
                                 :location (c28-8 / there)
                                 :purpose (c28-9 / save-02
                                                 :ARG1 (c28-3 / they
                                                              :mod (c28-11 / all))
                                                 :ARG0 c28-6))))

# ::snt My Dad just said on Xmas day the Germans and English played a football match truce match
# ::tokens ["My", "Dad", "just", "said", "on", "Xmas", "day", "the", "Germans", "and", "English", "played", "a", "football", "match", "truce", "match"]
# ::lemmas ["my", "Dad", "just", "say", "on", "Xmas", "day", "the", "Germans", "and", "English", "play", "a", "football", "match", "truce", "match"]
(c29-13 / say-01
        :ARG0 (c29-8 / person
                     :ARG0-of (c29-0 / have-rel-role-91
                                     :ARG1 (c29-5 / i)
                                     :ARG2 (c29-9 / dad)))
        :ARG1 (c29-16 / play-01
                      :ARG0 (c29-4 / person
                                   :mod (c29-10 / country
                                                :name (c29-6 / name
                                                             :op1 "Germany")))
                      :ARG1 (c29-3 / match-03
                                   :mod (c29-15 / truce))
                      :ARG2 (c29-14 / person
                                    :mod (c29-11 / country
                                                 :name (c29-7 / name
                                                              :op1 "England")))
                      :time (c29-2 / festival
                                   :name (c29-12 / name
                                                 :op1 "Xmas"
                                                 :op2 "Day")))
        :mod (c29-1 / just))

# ::snt news
# ::tokens ["news"]
# ::lemmas ["news"]
(c30-0 / news)

# ::snt Great timing for humour.
# ::tokens ["Great", "timing", "for", "humour", "."]
# ::lemmas ["great", "timing", "for", "humour", "."]
(c31-1 / time-02
       :ARG1 (c31-0 / humor)
       :mod (c31-2 / great))

# ::snt yes its ISIS - do keep up
# ::tokens ["yes", "its", "ISIS", "-", "do", "keep", "up"]
# ::lemmas ["yes", "its", "ISIS", "-", "do", "keep", "up"]
(c32-4 / keep-up-05
       :ARG0 (c32-0 / you)
       :ARG1 (c32-3 / criminal-organization
                    :name (c32-2 / name
                                 :op1 "Islamic"
                                 :op2 "organization")
                    :domain (c32-1 / it))
       :mode imperative)

# ::snt Was the food really that bad then ???
# ::tokens ["Was", "the", "food", "really", "that", "bad", "then", "?", "?", "?"]
# ::lemmas ["be", "the", "food", "really", "that", "bad", "then", "?", "?", "?"]
(c33-2 / infer-01
       :polarity (c33-5 / amr-unknown)
       :ARG1 (c33-1 / bad-07
                    :ARG1 (c33-0 / food)
                    :degree (c33-4 / that)
                    :ARG1-of (c33-3 / real-04)))

# ::snt Lindt cafe in Martin Place
# ::tokens ["Lindt", "cafe", "in", "Martin", "Place"]
# ::lemmas ["Lindt", "cafe", "in", "Martin", "Place"]
(c34-3 / cafe
       :name (c34-0 / name
                    :op1 "Lindt")
       :location (c34-4 / street-address-91
                        :ARG2 (c34-2 / city-district
                                     :name (c34-1 / name
                                                  :op1 "Martin"
                                                  :op2 "Place"))))
