# ::snt . Did they get those" BOYS "who lashed oUt against the C.H. artist?
# ::tokens [".", "Did", "they", "get", "those", "\"", "BOYS", "\"", "who", "lashed", "oUt", "against", "the", "C.H.", "artist", "?"]
# ::lemmas [".", "do", "they", "get", "those", "\"", "boy", "\"", "who", "lash", "out", "against", "the", "C.H.", "artist", "?"]
(c1-6 / get-01
      :ARG0 (c1-8 / they)
      :ARG1 (c1-2 / boy
                  :mod (c1-7 / that)
                  :ARG0-of (c1-1 / lash-01
                                 :ARG1 (c1-5 / person
                                             :ARG0-of (c1-0 / work-of-art
                                                            :name (c1-4 / name
                                                                        :op1 "C.H.")))
                                 :ARG2 (c1-3 / ounter)))
      :polarity (c1-9 / amr-unknown))

# ::snt sweet they are finally with Allah
# ::tokens ["sweet", "they", "are", "finally", "with", "Allah"]
# ::lemmas ["sweet", "they", "be", "finally", "with", "Allah"]
(c2-4 / sweet-02
      :ARG1 (c2-1 / be-with-10
                  :ARG0 (c2-5 / they)
                  :ARG1 (c2-3 / person
                              :name (c2-2 / name
                                          :op1 "Allah"))
                  :time (c2-0 / final)))

# ::snt Great News!!! Take no prisoners. These bastards need to be exterminated on sight
# ::tokens ["Great", "News", "!", "!", "!", "Take", "no", "prisoners", ".", "These", "bastards", "need", "to", "be", "exterminated", "on", "sight"]
# ::lemmas ["Great", "News", "!", "!", "!", "take", "no", "prisoner", ".", "these", "bastard", "need", "to", "be", "exterminate", "on", "sight"]
(c4-1 / multi-sentence
      :snt1 (c4-5 / news
                  :mod (c4-8 / great))
      :snt2 (c4-11 / take-01
                   :ARG0 (c4-0 / you)
                   :ARG1 (c4-7 / person
                               :ARG1-of (c4-4 / imprison-01))
                   :polarity -
                   :mode imperative)
      :snt3 (c4-6 / need-01
                  :ARG0 (c4-2 / bastard
                              :mod (c4-9 / this))
                  :ARG1 (c4-3 / exterminate-01
                              :ARG1 c4-2
                              :location (c4-10 / sight-01))))

# ::snt good
# ::tokens ["good"]
# ::lemmas ["good"]
(c5-0 / good-02)

# ::snt bad. They should have been captured alive for a proper trial.
# ::tokens ["bad", ".", "They", "should", "have", "been", "captured", "alive", "for", "a", "proper", "trial", "."]
# ::lemmas ["bad", ".", "they", "should", "have", "be", "capture", "alive", "for", "a", "proper", "trial", "."]
(c6-1 / multi-sentence
      :snt1 (c6-2 / bad-07)
      :snt2 (c6-4 / recommend-01
                  :ARG1 (c6-5 / capture-01
                              :ARG1 (c6-7 / they)
                              :manner (c6-0 / live-01
                                            :ARG0 c6-7)
                              :purpose (c6-6 / try-02
                                             :ARG1 c6-7
                                             :mod (c6-3 / proper)))))

# ::snt : : Both Charlie Hebdo suspects killed as police storm building (police sources) http
# ::tokens [":", ":", "Both", "Charlie", "Hebdo", "suspects", "killed", "as", "police", "storm", "building", "(", "police", "sources", ")", "http"]
# ::lemmas [":", ":", "both", "Charlie", "Hebdo", "suspect", "kill", "as", "police", "storm", "build", "(", "police", "source", ")", "http"]
(c7-8 / kill-01
      :ARG1 (c7-5 / person
                  :ARG2-of (c7-7 / suspect-01
                                 :ARG1 (c7-9 / publication
                                             :name (c7-4 / name
                                                         :op1 "Charlie"
                                                         :op2 "Ch Hebdo")))
                  :mod (c7-2 / both))
      :time (c7-3 / storm-01
                  :ARG0 (c7-1 / police)
                  :ARG1 (c7-6 / building))
      :ARG1-of (c7-0 / source-01
                     :ARG2 c7-1))

# ::snt : Both Charlie Hebdo suspects killed as police storm building (police sources)
# ::tokens [":", "Both", "Charlie", "Hebdo", "suspects", "killed", "as", "police", "storm", "building", "(", "police", "sources", ")"]
# ::lemmas [":", "both", "Charlie", "Hebdo", "suspect", "kill", "as", "police", "storm", "build", "(", "police", "source", ")"]
(c8-8 / kill-01
      :ARG1 (c8-5 / person
                  :ARG2-of (c8-7 / suspect-01
                                 :ARG1 (c8-1 / magazine
                                             :name (c8-4 / name
                                                         :op1 "Charlie"
                                                         :op2 "Charity"
                                                         :op3 "Journal")))
                  :mod (c8-2 / both))
      :time (c8-3 / storm-01
                  :ARG0 (c8-9 / police)
                  :ARG1 (c8-6 / building))
      :ARG1-of (c8-0 / source-01
                     :ARG2 c8-9))

# ::snt Great job!!
# ::tokens ["Great", "job", "!", "!"]
# ::lemmas ["great", "job", "!", "!"]
(c9-0 / job
      :mod (c9-1 / great)
      :mode expressive)

# ::snt MNNER UND POLIZEI/POLIZEI/POLIZEI/POLIZEI/POLIZEI UND TAGE/TAGE/TAGE/TAGELANG FREE: HAHAHA
# ::tokens ["MNNER", "UND", "POLIZEI", "/", "POLIZEI", "/", "POLIZEI", "/", "POLIZEI", "/", "POLIZEI", "UND", "TAGE", "/", "TAGE", "/", "TAGE", "/", "TAGELANG", "FREE", ":", "HAHAHA"]
# ::lemmas ["MNNER", "UND", "POLIZEI", "/", "POLIZEI", "/", "POLIZEI", "/", "POLIZEI", "/", "POLIZEI", "UND", "TAGE", "/", "TAGE", "/", "TAGE", "/", "tagelang", "free", ":", "HAHAHA"]
(c10-2 / multi-sentence
       :snt1 (c10-13 / and
                     :op1 (c10-1 / limit-01
                                 :ARG1 (c10-10 / size)
                                 :polarity -)
                     :op2 (c10-9 / limit-01
                                 :ARG1 (c10-8 / polizei)
                                 :polarity -)
                     :op3 (c10-0 / limit-01
                                 :ARG1 c10-10
                                 :polarity -))
       :op4 (c10-4 / limit-01
                   :ARG1 c10-10
                   :polarity -)
       :op5 (c10-3 / limit-01
                   :ARG1 c10-10)
       :op6 (c10-5 / limit-01
                   :ARG1 (c10-12 / tag-01)
                   :polarity -)
       :snt2 (c10-11 / laugh-01
                     :ARG0 (c10-6 / i)
                     :manner (c10-7 / loud)
                     :mode expressive))

# ::snt For the record this pic. is the other hostage site, the CharlieHebdo murderers were taken outside Paris: Dammartin
# ::tokens ["For", "the", "record", "this", "pic", ".", "is", "the", "other", "hostage", "site", ",", "the", "CharlieHebdo", "murderers", "were", "taken", "outside", "Paris", ":", "Dammartin"]
# ::lemmas ["for", "the", "record", "this", "pic", ".", "be", "the", "other", "hostage", "site", ",", "the", "CharlieHebdo", "murderer", "be", "take", "outside", "Paris", ":", "Dammartin"]
(c11-2 / multi-sentence
       :snt1 (c11-13 / site
                     :mod (c11-0 / hostage)
                     :mod (c11-4 / other)
                     :domain (c11-7 / pic
                                    :mod (c11-15 / this))
                     :purpose (c11-8 / record-01))
       :snt2 (c11-12 / take-01
                     :ARG1 (c11-16 / person
                                   :ARG0-of (c11-9 / murder-01
                                                   :ARG1 (c11-3 / person
                                                                :name (c11-5 / name
                                                                             :op1 "CharlieHebdo"))))
                     :location (c11-1 / outside
                                      :op1 (c11-10 / city
                                                   :name (c11-6 / name
                                                                :op1 "Paris"))))
       :snt3 (c11-14 / person
                     :name (c11-11 / name
                                   :op1 "Dammartin")))

# ::snt Yes, but think it was too dangerous.
# ::tokens ["Yes", ",", "but", "think", "it", "was", "too", "dangerous", "."]
# ::lemmas ["yes", ",", "but", "think", "it", "be", "too", "dangerous", "."]
(c12-3 / contrast-01
       :ARG2 (c12-5 / think-01
                    :ARG1 (c12-0 / have-degree-91
                                 :ARG1 (c12-1 / it)
                                 :ARG2 (c12-2 / dangerous)
                                 :ARG3 (c12-4 / too))))
