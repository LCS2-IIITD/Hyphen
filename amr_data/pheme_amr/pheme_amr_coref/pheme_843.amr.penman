# ::snt I know. Talking about the whole nation. We don't know the details there anyway. /50 so far
# ::tokens ["I", "know", ".", "Talking", "about", "the", "whole", "nation", ".", "We", "do", "n't", "know", "the", "details", "there", "anyway", ".", "/50", "so", "far"]
# ::lemmas ["i", "know", ".", "talk", "about", "the", "whole", "nation", ".", "we", "do", "not", "know", "the", "detail", "there", "anyway", ".", "/50", "so", "far"]
(c1-1 / multi-sentence
      :snt1 (c1-5 / know-01
                  :ARG0 (c1-4 / i))
      :snt2 (c1-11 / talk-01
                   :ARG1 (c1-6 / nation
                               :mod (c1-0 / whole)))
      :snt3 (c1-2 / know-01
                  :ARG0 (c1-7 / we)
                  :ARG1 (c1-8 / detail)
                  :location (c1-9 / there)
                  :mod (c1-12 / anyway)
                  :polarity -)
      :snt4 (c1-10 / so-far
                   :op1 (c1-3 / event)))

# ::snt Thank you Mr Dorsey!!
# ::tokens ["Thank", "you", "Mr", "Dorsey", "!", "!"]
# ::lemmas ["thank", "you", "Mr", "Dorsey", "!", "!"]
(c2-3 / say-01
      :ARG1 (c2-4 / thank-01
                  :ARG0 (c2-0 / i)
                  :ARG1 (c2-2 / person
                              :name (c2-1 / name
                                          :op1 "Mr"
                                          :op2 "Dorsey")
                              :ARG2-of c2-3)))

# ::snt Funny how Libs start name calling when in some kind of debate. Never fails. Lol
# ::tokens ["Funny", "how", "Libs", "start", "name", "calling", "when", "in", "some", "kind", "of", "debate", ".", "Never", "fails", ".", "Lol"]
# ::lemmas ["funny", "how", "Libs", "start", "name", "call", "when", "in", "some", "kind", "of", "debate", ".", "never", "fail", ".", "Lol"]
(c3-2 / multi-sentence
      :snt1 (c3-1 / funny
                  :domain (c3-15 / thing
                                 :manner-of (c3-14 / start-01
                                                   :ARG0 (c3-10 / person
                                                                :ARG1-of (c3-3 / liberal-02))
                                                   :ARG1 (c3-12 / call-01
                                                                :ARG0 c3-10
                                                                :ARG1 (c3-8 / name))
                                                   :time (c3-11 / debate-01
                                                                :mod (c3-7 / kind
                                                                           :mod (c3-4 / some))))))
      :snt2 (c3-9 / fail-01
                  :ARG1 (c3-6 / i)
                  :time (c3-5 / ever)
                  :polarity -)
      :snt3 (c3-13 / laugh-01
                   :ARG0 c3-6
                   :manner (c3-0 / loud)
                   :mode expressive))

# ::snt Enjoy your night dude... Hopefully more facts come out soon.
# ::tokens ["Enjoy", "your", "night", "dude", "...", "Hopefully", "more", "facts", "come", "out", "soon", "."]
# ::lemmas ["enjoy", "your", "night", "dude", "...", "hopefully", "more", "fact", "come", "out", "soon", "."]
(c4-2 / multi-sentence
      :snt1 (c4-9 / say-01
                  :ARG1 (c4-3 / enjoy-01
                              :ARG0 (c4-7 / dude)
                              :ARG1 (c4-5 / night)
                              :mode imperative)
                  :ARG2 c4-7)
      :snt2 (c4-0 / hope-01
                  :ARG1 (c4-8 / come-out-09
                              :ARG1 (c4-1 / fact
                                          :quant (c4-6 / more))
                              :time (c4-4 / soon))))

# ::snt The little yellow bus that takes him there, does not provide Happy Meal monies
# ::tokens ["The", "little", "yellow", "bus", "that", "takes", "him", "there", ",", "does", "not", "provide", "Happy", "Meal", "monies"]
# ::lemmas ["the", "little", "yellow", "bus", "that", "take", "he", "there", ",", "do", "not", "provide", "Happy", "Meal", "monie"]
(c5-6 / provide-01
      :ARG0 (c5-4 / bus
                  :mod (c5-2 / little)
                  :ARG1-of (c5-1 / yellow-02)
                  :ARG0-of (c5-8 / take-01
                                 :ARG1 (c5-0 / he)
                                 :ARG3 (c5-7 / there)))
      :ARG1 (c5-3 / monetary-quantity
                  :name (c5-5 / name
                              :op1 "Happy"
                              :op2 "Meal"))
      :polarity -)

# ::snt Oooooook. I was a infant during the 's. I'll take your word on that
# ::tokens ["Oooooook", ".", "I", "was", "a", "infant", "during", "the", "'", "s.", "I", "'ll", "take", "your", "word", "on", "that"]
# ::lemmas ["Oooooook", ".", "i", "be", "a", "infant", "during", "the", "'", "s.", "i", "'ll", "take", "your", "word", "on", "that"]
(c6-2 / multi-sentence
      :snt1 (c6-3 / oooook
                  :mode expressive)
      :snt2 (c6-4 / infant
                  :domain (c6-6 / i)
                  :time (c6-5 / date-entity
                              :decade 1950))
      :snt3 (c6-8 / take-01
                  :ARG0 c6-6
                  :ARG1 (c6-0 / word
                              :poss (c6-1 / you)
                              :topic (c6-7 / that))))

# ::snt This makes the US awesome. MT : Protesting? Know your rights.
# ::tokens ["This", "makes", "the", "US", "awesome", ".", "MT", ":", "Protesting", "?", "Know", "your", "rights", "."]
# ::lemmas ["this", "make", "the", "US", "awesome", ".", "MT", ":", "protest", "?", "know", "your", "right", "."]
(c7-1 / multi-sentence
      :snt1 (c7-5 / make-02
                  :ARG0 (c7-10 / this)
                  :ARG1 (c7-11 / awe-01
                               :ARG0 (c7-7 / country
                                           :name (c7-4 / name
                                                       :op1 "US"))))
      :snt2 (c7-9 / state-01
                  :ARG1 (c7-2 / amr-unknown
                              :topic (c7-6 / protest-01)))
      :snt3 (c7-3 / know-01
                  :ARG0 (c7-0 / you)
                  :ARG1 (c7-8 / right-05
                              :ARG1 c7-0)))

# ::snt Ever seen my blog?
# ::tokens ["Ever", "seen", "my", "blog", "?"]
# ::lemmas ["ever", "see", "my", "blog", "?"]
(c8-4 / see-01
      :ARG0 (c8-0 / you)
      :ARG1 (c8-1 / blog-01
                  :ARG0 (c8-3 / i))
      :polarity (c8-5 / amr-unknown)
      :time (c8-2 / ever))

# ::snt thief, heathen. Degenerate.
# ::tokens ["thief", ",", "heathen", ".", "Degenerate", "."]
# ::lemmas ["thief", ",", "heathen", ".", "degenerate", "."]
(c9-1 / multi-sentence
      :snt1 (c9-0 / folk
                  :domain (c9-3 / person
                                :name (c9-2 / name
                                            :op1 "Heathen")))
      :snt2 (c9-5 / person
                  :ARG1-of (c9-4 / degenerate-00)))

# ::snt Good to know- Thank you my friend. Are you watching ?
# ::tokens ["Good", "to", "know-", "Thank", "you", "my", "friend", ".", "Are", "you", "watching", "?"]
# ::lemmas ["good", "to", "know-", "thank", "you", "my", "friend", ".", "be", "you", "watch", "?"]
(c10-4 / multi-sentence
       :snt1 (c10-8 / good-02
                    :ARG1 (c10-6 / know-01))
       :snt2 (c10-9 / thank-01
                    :ARG0 (c10-5 / i)
                    :ARG1 (c10-7 / person
                                 :ARG0-of (c10-0 / have-rel-role-91
                                                 :ARG1 c10-5
                                                 :ARG2 (c10-3 / friend))))
       :snt3 (c10-1 / watch-01
                    :polarity (c10-10 / amr-unknown)
                    :ARG0 (c10-2 / you)))

# ::snt We're going to use Panera for ops going forward anyways.
# ::tokens ["We", "'re", "going", "to", "use", "Panera", "for", "ops", "going", "forward", "anyways", "."]
# ::lemmas ["we", "be", "go", "to", "use", "Panera", "for", "op", "go", "forward", "anyways", "."]
(c11-2 / use-01
       :ARG0 (c11-0 / we)
       :ARG1 (c11-5 / company
                    :name (c11-4 / name
                                 :op1 "Panera"))
       :ARG2 (c11-3 / operate-01
                    :ARG0 c11-0
                    :time (c11-1 / forward))
       :mod (c11-6 / anyways))

# ::snt : Going to a protest? Know your rights.
# ::tokens [":", "Going", "to", "a", "protest", "?", "Know", "your", "rights", "."]
# ::lemmas [":", "go", "to", "a", "protest", "?", "know", "your", "right", "."]
(c12-1 / multi-sentence
       :snt1 (c12-5 / go-02
                    :polarity (c12-8 / amr-unknown)
                    :ARG4 (c12-3 / protest-01))
       :snt2 (c12-7 / know-01
                    :ARG0 (c12-0 / you)
                    :ARG1 (c12-6 / thing
                                 :ARG2-of (c12-4 / right-05
                                                 :ARG1 c12-0))
                    :polarity (c12-2 / amr-unknown)))

# ::snt Pulling our the RACE card when someone disagrees with you. You are a blind coward. Thought better of you
# ::tokens ["Pulling", "our", "the", "RACE", "card", "when", "someone", "disagrees", "with", "you", ".", "You", "are", "a", "blind", "coward", ".", "Thought", "better", "of", "you"]
# ::lemmas ["pull", "our", "the", "RACE", "card", "when", "someone", "disagree", "with", "you", ".", "you", "be", "a", "blind", "coward", ".", "think", "well", "of", "you"]
(c13-2 / multi-sentence
       :snt1 (c13-5 / pull-01
                    :ARG0 (c13-1 / you)
                    :ARG1 (c13-7 / card
                                 :mod (c13-6 / race))
                    :time (c13-8 / disagree-01
                                 :ARG0 (c13-11 / someone)
                                 :ARG1 c13-1))
       :snt2 (c13-9 / coward
                    :ARG1-of (c13-3 / blind-02)
                    :domain (c13-10 / you))
       :snt3 (c13-15 / think-01
                     :ARG0 (c13-4 / i)
                     :ARG1 (c13-14 / thing
                                   :ARG1-of (c13-0 / have-degree-91
                                                   :ARG2 (c13-12 / good-02
                                                                 :ARG1 c13-14)
                                                   :ARG3 (c13-13 / more)))
                     :ARG2 c13-10))

# ::snt . It is a very small minority of Blacks who are looting in ,etc. Most condemn it.
# ::tokens [".", "It", "is", "a", "very", "small", "minority", "of", "Blacks", "who", "are", "looting", "in", ",", "etc", ".", "Most", "condemn", "it", "."]
# ::lemmas [".", "it", "be", "a", "very", "small", "minority", "of", "Blacks", "who", "be", "loot", "in", ",", "etc", ".", "most", "condemn", "it", "."]
(c14-1 / multi-sentence
       :snt1 (c14-7 / minority
                    :domain (c14-8 / person
                                   :ARG1-of (c14-3 / black-05))
                    :mod (c14-10 / small
                                 :degree (c14-6 / very))
                    :ARG0-of (c14-0 / loot-01
                                    :location (c14-12 / and
                                                      :op1 (c14-4 / et-cetera))))
       :snt2 (c14-9 / condemn-01
                    :ARG0 (c14-11 / person
                                  :quant (c14-2 / most))
                    :ARG1 (c14-5 / it)))

# ::snt : Going to a protest? Know your rights.
# ::tokens [":", "Going", "to", "a", "protest", "?", "Know", "your", "rights", "."]
# ::lemmas [":", "go", "to", "a", "protest", "?", "know", "your", "right", "."]
(c15-1 / multi-sentence
       :snt1 (c15-5 / go-02
                    :polarity (c15-8 / amr-unknown)
                    :ARG4 (c15-3 / protest-01))
       :snt2 (c15-7 / know-01
                    :ARG0 (c15-0 / you)
                    :ARG1 (c15-6 / thing
                                 :ARG2-of (c15-4 / right-05
                                                 :ARG1 c15-0))
                    :polarity (c15-2 / amr-unknown)))

# ::snt Might want to make certain and every other that KILL VICTIMS this and the list of
# ::tokens ["Might", "want", "to", "make", "certain", "and", "every", "other", "that", "KILL", "VICTIMS", "this", "and", "the", "list", "of"]
# ::lemmas ["might", "want", "to", "make", "certain", "and", "every", "other", "that", "KILL", "victim", "this", "and", "the", "list", "of"]
(c16-7 / possible-01
       :ARG1 (c16-0 / want-01
                    :ARG1 (c16-2 / make-02
                                 :ARG1 (c16-12 / and
                                               :op1 (c16-8 / certain)
                                               :op2 (c16-3 / other
                                                           :mod (c16-4 / every)
                                                           :ARG0-of (c16-10 / kill-01
                                                                            :ARG1 (c16-11 / person
                                                                                          :ARG1-of (c16-6 / victimize-01))
                                                                            :ARG2 (c16-5 / and
                                                                                         :op1 (c16-9 / this)
                                                                                         :op2 (c16-1 / list))))))))

# ::snt : Going to a protest?Know your rights.
# ::tokens [":", "Going", "to", "a", "protest?Know", "your", "rights", "."]
# ::lemmas [":", "go", "to", "a", "protest?know", "your", "right", "."]
(c17-4 / know-01
       :polarity (c17-5 / amr-unknown)
       :ARG0 (c17-0 / you)
       :ARG1 (c17-2 / right-05
                    :ARG1 c17-0)
       :condition (c17-3 / go-02
                         :ARG0 c17-0
                         :ARG4 (c17-1 / protest-01
                                      :ARG0 c17-0)))

# ::snt Yes but.If your city has ordinances unconstitutional you will still get arrested &amp; have to fight your rites.Long process
# ::tokens ["Yes", "but", ".", "If", "your", "city", "has", "ordinances", "unconstitutional", "you", "will", "still", "get", "arrested", "&", "amp", ";", "have", "to", "fight", "your", "rites", ".", "Long", "process"]
# ::lemmas ["yes", "but", ".", "if", "your", "city", "have", "ordinance", "unconstitutional", "you", "will", "still", "get", "arrest", "&", "amp", ";", "have", "to", "fight", "your", "rite", ".", "long", "process"]
(c18-3 / multi-sentence
       :snt1 (c18-10 / contrast-01
                     :ARG2 (c18-1 / yes))
       :snt2 (c18-14 / and
                     :op1 (c18-7 / arrest-01
                                 :ARG1 (c18-12 / you)
                                 :mod (c18-13 / still)
                                 :condition (c18-0 / have-03
                                                   :ARG0 (c18-9 / city
                                                                :poss c18-12)
                                                   :ARG1 (c18-6 / ordain-01
                                                                :polarity -)))
                     :op2 (c18-2 / obligate-01
                                 :ARG1 c18-12
                                 :ARG2 (c18-4 / fight-01
                                              :ARG0 c18-12
                                              :ARG2 (c18-11 / rites
                                                            :poss c18-12))))
       :snt3 (c18-8 / process-02
                    :ARG1-of (c18-5 / long-03)))

# ::snt TY. the reminder and especially for all the great work you do!
# ::tokens ["TY", ".", "the", "reminder", "and", "especially", "for", "all", "the", "great", "work", "you", "do", "!"]
# ::lemmas ["ty", ".", "the", "reminder", "and", "especially", "for", "all", "the", "great", "work", "you", "do", "!"]
(c19-7 / and
       :op1 (c19-6 / thing
                   :ARG0-of (c19-4 / remind-01))
       :op2 (c19-0 / work-01
                   :ARG0 (c19-1 / you)
                   :mod (c19-5 / great)
                   :mod (c19-3 / all)
                   :mod (c19-2 / especially)))

# ::snt Confusion here. Who's talking to who..
# ::tokens ["Confusion", "here", ".", "Who", "'s", "talking", "to", "who", ".."]
# ::lemmas ["confusion", "here", ".", "who", "be", "talk", "to", "who", ".."]
(c20-1 / multi-sentence
       :snt1 (c20-3 / confine-01
                    :location (c20-0 / here))
       :snt2 (c20-4 / talk-01
                    :ARG0 (c20-5 / amr-unknown)
                    :ARG2 (c20-2 / amr-unknown)))

# ::snt Miss placed. When the black community cleans up its own act, it would be more believable. Sad Truth
# ::tokens ["Miss", "placed", ".", "When", "the", "black", "community", "cleans", "up", "its", "own", "act", ",", "it", "would", "be", "more", "believable", ".", "Sad", "Truth"]
# ::lemmas ["Miss", "place", ".", "when", "the", "black", "community", "clean", "up", "its", "own", "act", ",", "it", "would", "be", "more", "believable", ".", "Sad", "Truth"]
(c21-2 / multi-sentence
       :snt1 (c21-5 / miss-01
                    :ARG1 (c21-6 / person))
       :snt2 (c21-12 / possible-01
                     :ARG1 (c21-3 / believe-01
                                  :ARG1 (c21-4 / it))
                     :time (c21-7 / clean-up-02
                                  :ARG0 (c21-8 / community
                                               :ARG1-of (c21-9 / black-05))
                                  :ARG1 (c21-13 / act-02
                                                :ARG0 c21-8))
                     :ARG2-of (c21-0 / have-degree-91
                                     :ARG1 c21-4
                                     :ARG3 (c21-1 / more)))
       :snt3 (c21-11 / true-01
                     :ARG1-of (c21-10 / sad-02)))

# ::snt Taking Us Back To The 's and 's. ENOUGH !!!
# ::tokens ["Taking", "Us", "Back", "To", "The", "'s", "and", "'", "s.", "ENOUGH", "!", "!", "!"]
# ::lemmas ["take", "Us", "back", "to", "the", "'", "and", "'", "s.", "ENOUGH", "!", "!", "!"]
(c22-5 / take-01
       :ARG0 (c22-1 / you)
       :ARG1 (c22-0 / we)
       :ARG3 (c22-6 / and
                    :op1 (c22-4 / date-entity
                                :year 2000)
                    :op2 (c22-2 / date-entity
                                :year 2000))
       :ARG4 (c22-3 / back)
       :mode imperative)

# ::snt unless your town becomes North Korea and institutes a curfew
# ::tokens ["unless", "your", "town", "becomes", "North", "Korea", "and", "institutes", "a", "curfew"]
# ::lemmas ["unless", "your", "town", "become", "North", "Korea", "and", "institute", "a", "curfew"]
(c23-0 / have-condition-91
       :ARG2 (c23-8 / and
                    :op1 (c23-2 / become-01
                                :ARG1 (c23-7 / town
                                             :poss (c23-1 / you))
                                :ARG2 (c23-6 / country
                                             :name (c23-4 / name
                                                          :op1 "North"
                                                          :op2 "Korea")))
                    :op2 (c23-3 / institute-01
                                :ARG0 c23-7
                                :ARG1 (c23-5 / curfew))))

# ::snt : but when the gov ignores u rights, u have none! Take Matters into Ur Own Hands! Ur Right! AS A PROTESTER!EACE
# ::tokens [":", "but", "when", "the", "gov", "ignores", "u", "rights", ",", "u", "have", "none", "!", "Take", "Matters", "into", "Ur", "Own", "Hands", "!", "Ur", "Right", "!", "AS", "A", "PROTESTER!EACE"]
# ::lemmas [":", "but", "when", "the", "gov", "ignore", "u", "right", ",", "u", "have", "none", "!", "take", "matter", "into", "Ur", "Own", "Hands", "!", "ur", "right", "!", "as", "a", "protester!eace"]
(c24-2 / multi-sentence
       :snt1 (c24-9 / contrast-01
                    :ARG2 (c24-0 / have-03
                                 :ARG0 (c24-1 / you)
                                 :ARG1 (c24-6 / none)
                                 :time (c24-4 / ignore-01
                                              :ARG0 (c24-10 / government-organization
                                                            :ARG0-of (c24-8 / govern-01))
                                              :ARG1 (c24-11 / right-05
                                                            :ARG1 c24-1))
                                 :polarity -))
       :snt2 (c24-15 / take-01
                     :ARG0 (c24-12 / you)
                     :ARG1 (c24-7 / matter)
                     :ARG3 (c24-13 / in-ones-hands-04
                                   :ARG0 c24-12)
                     :mode imperative)
       :snt3 (c24-5 / right-05
                    :ARG1 (c24-3 / you)
                    :mod (c24-17 / as
                                 :op1 (c24-14 / protest-01)))
       :snt4 (c24-16 / sake))

# ::snt There are million black people in USA. Very sad you can't see a problem in lumping them all together.
# ::tokens ["There", "are", "million", "black", "people", "in", "USA", ".", "Very", "sad", "you", "ca", "n't", "see", "a", "problem", "in", "lumping", "them", "all", "together", "."]
# ::lemmas ["there", "be", "million", "black", "people", "in", "USA", ".", "very", "sad", "you", "can", "not", "see", "a", "problem", "in", "lump", "they", "all", "together", "."]
(c25-2 / multi-sentence
       :snt1 (c25-8 / person
                    :ARG1-of (c25-4 / black-05)
                    :location (c25-9 / country
                                     :name (c25-6 / name
                                                  :op1 "USA"))
                    :quant 1000000)
       :snt2 (c25-11 / sad-02
                     :ARG0 (c25-13 / possible-01
                                   :ARG1 (c25-5 / see-01
                                                :ARG0 (c25-0 / you)
                                                :ARG1 (c25-3 / problem
                                                             :topic (c25-1 / lump-01
                                                                           :ARG1 (c25-12 / they
                                                                                         :mod (c25-14 / all))
                                                                           :mod (c25-10 / together))))
                                   :degree (c25-7 / very)
                                   :polarity -)))

# ::snt Loot and burn stores, throw bottles &amp; Molotov cocktails at cops, shoot at helicopters. Did I miss anything??
# ::tokens ["Loot", "and", "burn", "stores", ",", "throw", "bottles", "&", "amp", ";", "Molotov", "cocktails", "at", "cops", ",", "shoot", "at", "helicopters", ".", "Did", "I", "miss", "anything", "?", "?"]
# ::lemmas ["loot", "and", "burn", "store", ",", "throw", "bottle", "&", "amp", ";", "Molotov", "cocktail", "at", "cop", ",", "shoot", "at", "helicopter", ".", "do", "i", "miss", "anything", "?", "?"]
(c26-0 / multi-sentence
       :snt1 (c26-4 / and
                    :op1 (c26-12 / and
                                 :op1 (c26-3 / shoot-02
                                             :ARG0 (c26-15 / you)
                                             :ARG2 (c26-10 / anything)
                                             :mode imperative)
                                 :op2 (c26-6 / loot-01
                                             :ARG0 c26-15
                                             :ARG1 (c26-8 / store)
                                             :mode imperative)
                                 :op2 (c26-7 / burn-01
                                             :ARG0 c26-15
                                             :ARG1 c26-8
                                             :mode imperative)
                                 :op3 (c26-20 / throw-01
                                              :ARG0 c26-15
                                              :ARG1 (c26-19 / and
                                                            :op1 (c26-14 / bottle)
                                                            :op2 (c26-2 / product
                                                                        :name (c26-9 / name
                                                                                     :op1 "Molotov"
                                                                                     :op2 "Juvenile")))
                                              :ARG2 (c26-18 / cop)
                                              :mode imperative)
                                 :op4 (c26-16 / shoot-02
                                              :ARG0 c26-15
                                              :ARG2 (c26-5 / helicopter)
                                              :mode imperative))
                    :snt2 (c26-11 / miss-02
                                  :ARG0 (c26-13 / i)
                                  :ARG1 (c26-17 / anything)
                                  :polarity (c26-1 / amr-unknown))))

# ::snt and NO right to disobey or attack police, loot, break things, or burn things down. Sorry, "protestors."
# ::tokens ["and", "NO", "right", "to", "disobey", "or", "attack", "police", ",", "loot", ",", "break", "things", ",", "or", "burn", "things", "down", ".", "Sorry", ",", "\"", "protestors", ".", "\""]
# ::lemmas ["and", "no", "right", "to", "disobey", "or", "attack", "police", ",", "loot", ",", "break", "thing", ",", "or", "burn", "thing", "down", ".", "sorry", ",", "\"", "protestor", ".", "\""]
(c27-1 / multi-sentence
       :snt1 (c27-14 / and
                     :op2 (c27-7 / right-05
                                 :ARG2 (c27-4 / or
                                              :op1 (c27-8 / disobey-01
                                                          :ARG1 (c27-6 / police))
                                              :op2 (c27-5 / attack-01
                                                          :ARG1 c27-6)
                                              :op3 (c27-0 / loot-01
                                                          :ARG1 (c27-12 / thing))
                                              :op4 (c27-3 / break-01
                                                          :ARG1 (c27-10 / thing))
                                              :op5 (c27-9 / burn-01
                                                          :ARG1 c27-10))
                                 :polarity -))
       :snt2 (c27-11 / sorry-01
                     :ARG1 (c27-13 / person
                                   :ARG0-of (c27-2 / protest-01))))

# ::snt : Going to a protest? Know your rights. EVERYONE
# ::tokens [":", "Going", "to", "a", "protest", "?", "Know", "your", "rights", ".", "EVERYONE"]
# ::lemmas [":", "go", "to", "a", "protest", "?", "know", "your", "right", ".", "everyone"]
(c28-1 / multi-sentence
       :snt1 (c28-6 / go-02
                    :polarity (c28-8 / amr-unknown)
                    :ARG4 (c28-4 / protest-01))
       :snt2 (c28-7 / know-01
                    :ARG0 (c28-0 / you)
                    :ARG1 (c28-5 / right-05
                                 :ARG1 c28-0)
                    :polarity (c28-3 / amr-unknown))
       :snt3 (c28-2 / everyone))

# ::snt OK. I'm dumb. Just like the millions who aren't marching.
# ::tokens ["OK", ".", "I", "'m", "dumb", ".", "Just", "like", "the", "millions", "who", "are", "n't", "marching", "."]
# ::lemmas ["ok", ".", "i", "be", "dumb", ".", "just", "like", "the", "million", "who", "be", "not", "march", "."]
(c29-2 / multi-sentence
       :snt1 (c29-3 / okay-01)
       :snt2 (c29-7 / dumb
                    :domain (c29-4 / i))
       :snt3 (c29-6 / resemble-01
                    :ARG2 (c29-5 / person
                                 :quant (c29-8 / multiple
                                               :op1 1000000)
                                 :ARG0-of (c29-1 / march-01
                                                 :polarity -))
                    :mod (c29-0 / just)))

# ::snt I guess.
# ::tokens ["I", "guess", "."]
# ::lemmas ["i", "guess", "."]
(c30-0 / guess-01
       :ARG0 (c30-1 / i))

# ::snt Its , The Race card is worn out and nobody believes you anymore. Your Vic was wilding out too
# ::tokens ["Its", ",", "The", "Race", "card", "is", "worn", "out", "and", "nobody", "believes", "you", "anymore", ".", "Your", "Vic", "was", "wilding", "out", "too"]
# ::lemmas ["its", ",", "the", "Race", "card", "be", "wear", "out", "and", "nobody", "believe", "you", "anymore", ".", "your", "Vic", "be", "wilde", "out", "too"]
(c31-2 / multi-sentence
       :snt1 (c31-13 / and
                     :op1 (c31-0 / wear-out-03
                                 :ARG1 (c31-10 / card
                                               :mod (c31-9 / race)))
                     :op2 (c31-3 / believe-01
                                 :ARG0 (c31-6 / nobody)
                                 :ARG1 (c31-1 / you)
                                 :time (c31-4 / anymore)))
       :snt2 (c31-5 / wild-out-03
                    :ARG1 (c31-8 / person
                                 :name (c31-7 / name
                                              :op1 "Vic")
                                 :poss (c31-11 / you))
                    :mod (c31-12 / too)))

# ::snt so you are saying the cops are number brutalizer of the black community in the country? Nothing from within? Ok
# ::tokens ["so", "you", "are", "saying", "the", "cops", "are", "number", "brutalizer", "of", "the", "black", "community", "in", "the", "country", "?", "Nothing", "from", "within", "?", "Ok"]
# ::lemmas ["so", "you", "be", "say", "the", "cop", "be", "number", "brutalizer", "of", "the", "black", "community", "in", "the", "country", "?", "nothing", "from", "within", "?", "ok"]
(c32-2 / multi-sentence
       :snt1 (c32-12 / say-01
                     :ARG0 (c32-0 / you)
                     :ARG1 (c32-3 / brutalize-01
                                  :ARG0 (c32-9 / cop)
                                  :ARG1 (c32-8 / community
                                               :ARG1-of (c32-10 / black-05)
                                               :location (c32-11 / country))
                                  :quant (c32-6 / number))
                     :polarity (c32-13 / amr-unknown))
       :snt2 (c32-7 / nothing
                    :source (c32-1 / within)
                    :ARG1-of (c32-4 / okay-04)
                    :polarity (c32-5 / amr-unknown)))

# ::snt then dont act voilent disrecpectfull or criminally. Simple really
# ::tokens ["then", "do", "nt", "act", "voilent", "disrecpectfull", "or", "criminally", ".", "Simple", "really"]
# ::lemmas ["then", "do", "not", "act", "voilent", "disrecpectfull", "or", "criminally", ".", "simple", "really"]
(c33-1 / multi-sentence
       :snt1 (c33-9 / act-02
                    :ARG0 (c33-0 / you)
                    :ARG1 (c33-2 / or
                                 :op1 (c33-4 / disrespect-01
                                             :ARG0 c33-0
                                             :mod (c33-3 / vital))
                                 :op2 (c33-5 / criminal-03
                                             :ARG0 c33-0))
                    :time (c33-8 / then)
                    :polarity -
                    :mode imperative)
       :snt2 (c33-7 / simple-02
                    :ARG1-of (c33-6 / real-04)))

# ::snt ": Going to a protest? Know your rights.
# ::tokens ["\"", ":", "Going", "to", "a", "protest", "?", "Know", "your", "rights", "."]
# ::lemmas ["\"", ":", "go", "to", "a", "protest", "?", "know", "your", "right", "."]
(c34-1 / multi-sentence
       :snt1 (c34-5 / go-02
                    :polarity (c34-7 / amr-unknown)
                    :ARG4 (c34-3 / protest-01))
       :snt2 (c34-6 / know-01
                    :ARG0 (c34-0 / you)
                    :ARG1 (c34-4 / right-05
                                 :ARG1 c34-0)
                    :polarity (c34-2 / amr-unknown)))

# ::snt : Going to a protest? Know your rights.
# ::tokens [":", "Going", "to", "a", "protest", "?", "Know", "your", "rights", "."]
# ::lemmas [":", "go", "to", "a", "protest", "?", "know", "your", "right", "."]
(c35-1 / multi-sentence
       :snt1 (c35-5 / go-02
                    :polarity (c35-8 / amr-unknown)
                    :ARG4 (c35-3 / protest-01))
       :snt2 (c35-7 / know-01
                    :ARG0 (c35-0 / you)
                    :ARG1 (c35-6 / thing
                                 :ARG2-of (c35-4 / right-05
                                                 :ARG1 c35-0))
                    :polarity (c35-2 / amr-unknown)))

# ::snt Mike Brown had a right to walk on the streets without being killed
# ::tokens ["Mike", "Brown", "had", "a", "right", "to", "walk", "on", "the", "streets", "without", "being", "killed"]
# ::lemmas ["Mike", "Brown", "have", "a", "right", "to", "walk", "on", "the", "street", "without", "be", "kill"]
(c36-3 / right-05
       :ARG1 (c36-2 / person
                    :name (c36-1 / name
                                 :op1 "Mike"
                                 :op2 "Brown"))
       :ARG2 (c36-0 / walk-01
                    :ARG0 c36-2
                    :ARG2 (c36-4 / street)
                    :manner (c36-5 / kill-01
                                   :ARG1 c36-2
                                   :polarity -)))

# ::snt Come on... Its what have you done for me lately. Always has been.
# ::tokens ["Come", "on", "...", "Its", "what", "have", "you", "done", "for", "me", "lately", ".", "Always", "has", "been", "."]
# ::lemmas ["come", "on", "...", "its", "what", "have", "you", "do", "for", "i", "lately", ".", "always", "have", "be", "."]
(c37-2 / multi-sentence
       :snt1 (c37-6 / come-on-25
                    :ARG1 (c37-0 / you)
                    :mode imperative)
       :snt2 (c37-5 / do-02
                    :ARG0 (c37-8 / you)
                    :ARG1 (c37-4 / it)
                    :ARG2 (c37-7 / i)
                    :time (c37-1 / lately))
       :snt3 (c37-3 / be-temporally-at-91
                    :ARG1 c37-8
                    :ARG2 (c37-9 / always)))

# ::snt Do let us know when members of "the black community" have earned the right not to be brutalized.
# ::tokens ["Do", "let", "us", "know", "when", "members", "of", "\"", "the", "black", "community", "\"", "have", "earned", "the", "right", "not", "to", "be", "brutalized", "."]
# ::lemmas ["do", "let", "we", "know", "when", "member", "of", "\"", "the", "black", "community", "\"", "have", "earn", "the", "right", "not", "to", "be", "brutalize", "."]
(c38-2 / let-know-07
       :ARG0 (c38-1 / you)
       :ARG1 (c38-0 / we)
       :ARG2 (c38-9 / time
                    :time-of (c38-5 / earn-01
                                    :ARG0 (c38-3 / member
                                                 :part-of (c38-7 / community
                                                                 :ARG1-of (c38-4 / black-05)))
                                    :ARG1 (c38-6 / right-05
                                                 :ARG1 c38-3
                                                 :ARG2 (c38-8 / brutalize-01
                                                              :ARG1 c38-3)
                                                 :polarity -)))
       :mode imperative)

# ::snt Void where prohibited by law,eg Egypt Qatar : Going to a protest? Know your rights.
# ::tokens ["Void", "where", "prohibited", "by", "law", ",", "eg", "Egypt", "Qatar", ":", "Going", "to", "a", "protest", "?", "Know", "your", "rights", "."]
# ::lemmas ["Void", "where", "prohibit", "by", "law", ",", "eg", "Egypt", "Qatar", ":", "go", "to", "a", "protest", "?", "know", "your", "right", "."]
(c39-2 / multi-sentence
       :snt1 (c39-4 / ignore-01
                    :ARG1 (c39-7 / prohibit-01
                                 :ARG0 (c39-1 / law)
                                 :ARG1 (c39-9 / country
                                              :name (c39-5 / name
                                                           :op1 "Egypt")
                                              :ARG1-of (c39-8 / mean-01
                                                              :ARG2 (c39-10 / country
                                                                            :name (c39-6 / name
                                                                                         :op1 "Qatar"))))))
       :snt2 (c39-11 / go-02
                     :polarity (c39-15 / amr-unknown)
                     :ARG4 (c39-14 / protest-01)
                     :polarity (c39-3 / amr-unknown))
       :snt3 (c39-13 / know-01
                     :ARG0 (c39-0 / you)
                     :ARG1 (c39-12 / right-05
                                   :ARG1 c39-0)))

# ::snt - you can't be that stupid...it's free for their customers...just like millions of businesses
# ::tokens ["-", "you", "ca", "n't", "be", "that", "stupid", "...", "it", "'s", "free", "for", "their", "customers", "...", "just", "like", "millions", "of", "businesses"]
# ::lemmas ["-", "you", "can", "not", "be", "that", "stupid", "...", "it", "be", "free", "for", "their", "customer", "...", "just", "like", "millions", "of", "business"]
(c40-6 / possible-01
       :ARG1 (c40-11 / stupid
                     :domain (c40-1 / you)
                     :degree (c40-12 / that))
       :ARG1-of (c40-8 / cause-01
                       :ARG0 (c40-2 / free-03
                                    :ARG1 (c40-5 / it)
                                    :ARG3 (c40-7 / customer
                                                 :poss (c40-10 / they))
                                    :ARG1-of (c40-9 / resemble-01
                                                    :ARG2 (c40-4 / business
                                                                 :quant (c40-3 / multiple
                                                                               :op1 1000000))
                                                    :mod (c40-0 / just))))
       :polarity -)

# ::snt When you tweet or write articles that everyone can see, you're gonna get different opinions.
# ::tokens ["When", "you", "tweet", "or", "write", "articles", "that", "everyone", "can", "see", ",", "you", "'re", "gon", "na", "get", "different", "opinions", "."]
# ::lemmas ["when", "you", "tweet", "or", "write", "article", "that", "everyone", "can", "see", ",", "you", "be", "going", "to", "get", "different", "opinion", "."]
(c41-3 / opine-01
       :ARG0 (c41-0 / you)
       :ARG1-of (c41-6 / differ-02)
       :time (c41-2 / or
                    :op1 (c41-8 / tweet-02
                                :ARG0 c41-0)
                    :op2 (c41-1 / write-01
                                :ARG0 c41-0
                                :ARG1 (c41-9 / article
                                             :ARG1-of (c41-7 / see-01
                                                             :ARG0 (c41-4 / everyone)
                                                             :ARG1-of (c41-5 / possible-01))))))

# ::snt but only after you spill hot coffee on yourself
# ::tokens ["but", "only", "after", "you", "spill", "hot", "coffee", "on", "yourself"]
# ::lemmas ["but", "only", "after", "you", "spill", "hot", "coffee", "on", "yourself"]
(c42-4 / contrast-01
       :ARG2 (c42-6 / after
                    :op1 (c42-5 / spill-01
                                :ARG0 (c42-1 / you)
                                :ARG1 (c42-3 / coffee
                                             :ARG1-of (c42-0 / hot-05))
                                :ARG2 c42-1)
                    :mod (c42-2 / only)))

# ::snt You too. Have a great weekend.
# ::tokens ["You", "too", ".", "Have", "a", "great", "weekend", "."]
# ::lemmas ["you", "too", ".", "have", "a", "great", "weekend", "."]
(c43-3 / multi-sentence
       :snt1 (c43-1 / you
                    :mod (c43-5 / too))
       :snt2 (c43-0 / have-03
                    :ARG0 c43-1
                    :mode imperative)
       :ARG1 (c43-2 / weekend
                    :mod (c43-4 / great)))

# ::snt To be honest.. I could careless about that town. So, its a wasted argument at this point.
# ::tokens ["To", "be", "honest", "..", "I", "could", "careless", "about", "that", "town", ".", "So", ",", "its", "a", "wasted", "argument", "at", "this", "point", "."]
# ::lemmas ["to", "be", "honest", "..", "i", "could", "careless", "about", "that", "town", ".", "so", ",", "its", "a", "waste", "argument", "at", "this", "point", "."]
(c44-2 / multi-sentence
       :snt1 (c44-5 / possible-01
                    :ARG1 (c44-6 / careless-01
                                 :ARG0 (c44-3 / i)
                                 :ARG1 (c44-8 / town
                                              :mod (c44-7 / that)))
                    :ARG1-of (c44-0 / honest-01))
       :snt2 (c44-10 / argue-01
                     :ARG1-of (c44-1 / waste-01)
                     :time (c44-9 / point
                                  :mod (c44-4 / this))))

# ::snt But it says "FREE WIFI"...I just don't get this. To start, it's false advertising.
# ::tokens ["But", "it", "says", "\"", "FREE", "WIFI\"", "...", "I", "just", "do", "n't", "get", "this", ".", "To", "start", ",", "it", "'s", "false", "advertising", "."]
# ::lemmas ["but", "it", "say", "\"", "FREE", "WIFI\"", "...", "i", "just", "do", "not", "get", "this", ".", "to", "start", ",", "it", "be", "false", "advertising", "."]
(c45-2 / multi-sentence
       :snt1 (c45-8 / contrast-01
                    :ARG2 (c45-11 / say-01
                                  :ARG0 (c45-6 / it)
                                  :ARG1 (c45-1 / free-03
                                               :ARG1 (c45-9 / income))))
       :snt2 (c45-10 / get-30
                     :ARG0 (c45-3 / i)
                     :ARG1 (c45-12 / this)
                     :mod (c45-0 / just)
                     :polarity -)
       :snt3 (c45-13 / advertise-01
                     :ARG0 (c45-4 / it)
                     :mod (c45-7 / false)
                     :purpose (c45-5 / start-01)))

# ::snt Going to a protest? Know your rights.
# ::tokens ["Going", "to", "a", "protest", "?", "Know", "your", "rights", "."]
# ::lemmas ["go", "to", "a", "protest", "?", "know", "your", "right", "."]
(c46-1 / multi-sentence
       :snt1 (c46-4 / go-02
                    :polarity (c46-6 / amr-unknown)
                    :ARG4 (c46-2 / protest-01))
       :snt2 (c46-5 / know-01
                    :ARG0 (c46-0 / you)
                    :ARG1 (c46-3 / right-05
                                 :ARG1 c46-0)))

# ::snt Yeah... I read when I see something interesting. Not all the time. I confess. Know some of your background.
# ::tokens ["Yeah", "...", "I", "read", "when", "I", "see", "something", "interesting", ".", "Not", "all", "the", "time", ".", "I", "confess", ".", "Know", "some", "of", "your", "background", "."]
# ::lemmas ["yeah", "...", "i", "read", "when", "i", "see", "something", "interesting", ".", "not", "all", "the", "time", ".", "i", "confess", ".", "know", "some", "of", "your", "background", "."]
(c47-2 / multi-sentence
       :snt1 (c47-9 / read-01
                    :ARG0 (c47-7 / i)
                    :time (c47-12 / see-01
                                  :ARG0 c47-7
                                  :ARG1 (c47-6 / something
                                               :ARG2-of (c47-11 / interest-01))))
       :snt2 (c47-13 / time
                     :mod (c47-14 / all)
                     :ARG1-of (c47-10 / confess-01
                                      :ARG0 (c47-1 / i))
                     :polarity -)
       :snt3 (c47-8 / know-01
                    :ARG0 (c47-5 / i)
                    :ARG1 (c47-4 / background
                                 :poss (c47-0 / you)
                                 :quant (c47-3 / some))))

# ::snt Go on and cry like did. Youll at least get some attention
# ::tokens ["Go", "on", "and", "cry", "like", "did", ".", "You", "ll", "at", "least", "get", "some", "attention"]
# ::lemmas ["go", "on", "and", "cry", "like", "do", ".", "you", "ll", "at", "least", "get", "some", "attention"]
(c48-1 / multi-sentence
       :snt1 (c48-10 / and
                     :op1 (c48-6 / go-on-15)
                     :op2 (c48-5 / cry-02)
                     :ARG1-of (c48-4 / resemble-01
                                     :ARG2 (c48-7 / cry-02
                                                  :ARG0 (c48-0 / you))))
       :snt2 (c48-8 / get-01
                    :ARG0 (c48-11 / you)
                    :ARG1 (c48-2 / attend-02
                                 :ARG1 c48-11
                                 :quant (c48-9 / some))
                    :mod (c48-3 / at-least)))

# ::snt Cok tanidik degil mi? ": Going to a protest? Know your rights.
# ::tokens ["Cok", "tanidik", "degil", "mi", "?", "\"", ":", "Going", "to", "a", "protest", "?", "Know", "your", "rights", "."]
# ::lemmas ["Cok", "tanidik", "degil", "mi", "?", "\"", ":", "go", "to", "a", "protest", "?", "know", "your", "right", "."]
(c49-7 / say-01
       :ARG0 (c49-2 / i)
       :ARG1 (c49-10 / and
                     :op1 (c49-6 / go-02
                                 :ARG0 (c49-0 / you)
                                 :ARG4 (c49-4 / protest-01))
                     :op2 (c49-8 / know-01
                                 :ARG0 c49-0
                                 :ARG1 (c49-5 / right-05
                                              :ARG1 c49-0))
                     :polarity (c49-1 / amr-unknown))
       :ARG2 (c49-9 / person
                    :name (c49-3 / name
                                 :op1 "Tanidik"
                                 :op2 "Degil"
                                 :op3 "Mi")))

# ::snt Black People Have Always Cleaned Up Their Own Act. The Result, Rosewood, Tulsa's Black Wall Street etc....White Riots.
# ::tokens ["Black", "People", "Have", "Always", "Cleaned", "Up", "Their", "Own", "Act", ".", "The", "Result", ",", "Rosewood", ",", "Tulsa", "'s", "Black", "Wall", "Street", "etc", "....", "White", "Riots", "."]
# ::lemmas ["black", "people", "have", "always", "clean", "up", "their", "own", "Act", ".", "the", "Result", ",", "Rosewood", ",", "Tulsa", "'s", "Black", "Wall", "Street", "etc", "....", "White", "Riots", "."]
(c50-1 / multi-sentence
       :snt1 (c50-10 / clean-up-02
                     :ARG0 (c50-8 / person
                                  :ARG1-of (c50-2 / black-05))
                     :ARG1 (c50-16 / act-02
                                   :ARG0 c50-8)
                     :time (c50-4 / always))
       :snt2 (c50-9 / riot-01
                    :ARG1-of (c50-0 / white-02)
                    :ARG2-of (c50-5 / result-01
                                    :ARG1 (c50-7 / and
                                                 :op1 (c50-11 / city
                                                              :name (c50-6 / name
                                                                           :op1 "Rosewood"))
                                                 :op2 (c50-14 / city
                                                              :name (c50-12 / name
                                                                            :op1 "Tulsa"))
                                                 :op3 (c50-13 / market-sector
                                                              :name (c50-15 / name
                                                                            :op1 "Black"
                                                                            :op2 "Wall"
                                                                            :op3 "Street"))
                                                 :op4 (c50-3 / et-cetera)))))
