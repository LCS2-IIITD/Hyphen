# ::snt I suppose you think poor people can stop being poor if you tell them to as well
# ::tokens ["I", "suppose", "you", "think", "poor", "people", "can", "stop", "being", "poor", "if", "you", "tell", "them", "to", "as", "well"]
# ::lemmas ["i", "suppose", "you", "think", "poor", "people", "can", "stop", "be", "poor", "if", "you", "tell", "they", "to", "as", "well"]
(c1-6 / suppose-01
      :ARG0 (c1-3 / i)
      :ARG1 (c1-7 / think-01
                  :ARG0 (c1-0 / you)
                  :ARG1 (c1-4 / possible-01
                              :ARG1 (c1-2 / stop-01
                                          :ARG0 (c1-8 / person
                                                      :mod (c1-1 / poor
                                                                 :ARG1-of c1-2))
                                          :condition (c1-5 / tell-01
                                                           :ARG0 c1-0
                                                           :ARG1 c1-2
                                                           :ARG2 c1-8)
                                          :mod (c1-9 / as-well)))))

# ::snt man in the photo is
# ::tokens ["man", "in", "the", "photo", "is"]
# ::lemmas ["man", "in", "the", "photo", "be"]
(c2-1 / man
      :location (c2-0 / photo))

# ::snt One of the great photos of American history taken by . Things much more peaceful in last night.
# ::tokens ["One", "of", "the", "great", "photos", "of", "American", "history", "taken", "by", ".", "Things", "much", "more", "peaceful", "in", "last", "night", "."]
# ::lemmas ["One", "of", "the", "great", "photo", "of", "American", "history", "take", "by", ".", "thing", "much", "more", "peaceful", "in", "last", "night", "."]
(c3-3 / multi-sentence
      :snt1 (c3-8 / photograph-01
                  :ARG1-of (c3-5 / include-91
                                 :ARG2 (c3-16 / photograph-01
                                              :ARG1 (c3-0 / history
                                                          :mod (c3-10 / country
                                                                      :name (c3-6 / name
                                                                                  :op1 "America")))
                                              :mod (c3-11 / great)
                                              :ARG1-of (c3-15 / take-01
                                                              :ARG0 (c3-4 / person))))
                  :quant 1)
      :snt2 (c3-14 / peaceful
                   :domain (c3-13 / thing)
                   :time (c3-9 / date-entity
                               :dayperiod (c3-7 / night)
                               :mod (c3-1 / yesterday))
                   :ARG2-of (c3-17 / have-degree-91
                                   :ARG1 c3-13
                                   :ARG3 (c3-12 / more
                                                :quant (c3-2 / much)))))

# ::snt I think this image will be used for a long time as the "Remember when American police were barbaric"?
# ::tokens ["I", "think", "this", "image", "will", "be", "used", "for", "a", "long", "time", "as", "the", "\"", "Remember", "when", "American", "police", "were", "barbaric", "\"", "?"]
# ::lemmas ["i", "think", "this", "image", "will", "be", "use", "for", "a", "long", "time", "as", "the", "\"", "remember", "when", "American", "police", "be", "barbaric", "\"", "?"]
(c5-11 / think-01
       :ARG0 (c5-3 / i)
       :ARG1 (c5-1 / use-01
                   :ARG1 (c5-9 / image
                               :mod (c5-10 / this))
                   :ARG1-of (c5-0 / long-03)
                   :ARG1-of (c5-7 / resemble-01
                                  :ARG2 (c5-4 / remember-01
                                              :ARG1 (c5-2 / barbaric
                                                          :domain (c5-6 / police
                                                                        :mod (c5-8 / country
                                                                                   :name (c5-5 / name
                                                                                               :op1 "America")))
                                                          :time (c5-12 / amr-unknown))))))

# ::snt And I hope people connect this barbarism with where they got their training...
# ::tokens ["And", "I", "hope", "people", "connect", "this", "barbarism", "with", "where", "they", "got", "their", "training", "..."]
# ::lemmas ["and", "i", "hope", "people", "connect", "this", "barbarism", "with", "where", "they", "get", "their", "training", "..."]
(c6-9 / and
      :op2 (c6-0 / hope-01
                 :ARG0 (c6-3 / i)
                 :ARG1 (c6-5 / connect-01
                             :ARG0 (c6-4 / person)
                             :ARG1 (c6-2 / barbarism
                                         :mod (c6-8 / this))
                             :ARG2 (c6-1 / location
                                         :location-of (c6-6 / get-01
                                                            :ARG0 c6-4
                                                            :ARG1 (c6-7 / train-01
                                                                        :ARG2 c6-4))))))

# ::snt another thing that makes that video great is that he's holding a bag of chips in the other hand. Lol
# ::tokens ["another", "thing", "that", "makes", "that", "video", "great", "is", "that", "he", "'s", "holding", "a", "bag", "of", "chips", "in", "the", "other", "hand", ".", "Lol"]
# ::lemmas ["another", "thing", "that", "make", "that", "video", "great", "be", "that", "he", "be", "hold", "a", "bag", "of", "chip", "in", "the", "other", "hand", ".", "Lol"]
(c7-2 / multi-sentence
      :snt1 (c7-13 / thing
                   :mod (c7-14 / another)
                   :ARG0-of (c7-7 / make-02
                                  :ARG1 (c7-10 / great
                                               :domain (c7-6 / video
                                                             :mod (c7-12 / that))))
                   :domain (c7-0 / hold-01
                                 :ARG0 (c7-1 / he)
                                 :ARG1 (c7-4 / bag
                                             :consist-of (c7-9 / chip))
                                 :manner (c7-8 / hand
                                               :mod (c7-5 / other))))
      :snt2 (c7-3 / laugh-01
                  :manner (c7-11 / loud)
                  :mode expressive))

# ::snt anybody notice the bag of chips in the opposite hand lol.
# ::tokens ["anybody", "notice", "the", "bag", "of", "chips", "in", "the", "opposite", "hand", "lol", "."]
# ::lemmas ["anybody", "notice", "the", "bag", "of", "chip", "in", "the", "opposite", "hand", "lol", "."]
(c8-5 / notice-01
      :ARG0 (c8-8 / anybody)
      :ARG1 (c8-2 / bag
                  :consist-of (c8-6 / chip)
                  :location (c8-0 / hand
                                  :ARG1-of (c8-3 / opposite-01)))
      :ARG2-of (c8-1 / laugh-01
                     :ARG0 (c8-4 / i)
                     :manner (c8-7 / loud)
                     :mode expressive))

# ::snt definitely not a pleasant night
# ::tokens ["definitely", "not", "a", "pleasant", "night"]
# ::lemmas ["definitely", "not", "a", "pleasant", "night"]
(c9-0 / night
      :ARG1-of (c9-1 / pleasant-02
                     :mod (c9-2 / definite)
                     :polarity -))

# ::snt is this what it is like to know the pulitzer ahead of time?
# ::tokens ["is", "this", "what", "it", "is", "like", "to", "know", "the", "pulitzer", "ahead", "of", "time", "?"]
# ::lemmas ["be", "this", "what", "it", "be", "like", "to", "know", "the", "pulitzer", "ahead", "of", "time", "?"]
(c10-3 / resemble-01
       :polarity (c10-6 / amr-unknown)
       :ARG1 (c10-5 / this)
       :ARG2 (c10-1 / know-04
                    :ARG1 (c10-2 / pulitzer)
                    :time (c10-0 / ahead-of
                                 :op1 (c10-4 / time))))

# ::snt not sure they all have a CHOICE in the matter. You must think they do.
# ::tokens ["not", "sure", "they", "all", "have", "a", "CHOICE", "in", "the", "matter", ".", "You", "must", "think", "they", "do", "."]
# ::lemmas ["not", "sure", "you", "all", "have", "a", "choice", "in", "the", "matter", ".", "you", "must", "think", "they", "do", "."]
(c11-3 / multi-sentence
       :snt1 (c11-8 / sure-02
                    :ARG1 (c11-0 / have-03
                                 :ARG0 (c11-9 / they
                                              :mod (c11-10 / all))
                                 :ARG1 (c11-6 / choose-01
                                              :topic (c11-5 / matter)))
                    :polarity -)
       :snt2 (c11-4 / obligate-01
                    :ARG1 (c11-1 / you)
                    :ARG2 (c11-7 / think-01
                                 :ARG0 c11-1
                                 :ARG1 (c11-2 / have-03
                                              :ARG0 c11-9
                                              :ARG1 c11-6))))

# ::snt EXACTLY
# ::tokens ["EXACTLY"]
# ::lemmas ["exactly"]
(c12-0 / exact)

# ::snt those poor PalestiniansBeing used ashuman shields2garner sympathy for terrorists.
# ::tokens ["those", "poor", "PalestiniansBeing", "used", "ashuman", "shields2garner", "sympathy", "for", "terrorists", "."]
# ::lemmas ["those", "poor", "PalestiniansBeing", "use", "ashuman", "shields2garner", "sympathy", "for", "terrorist", "."]
(c13-10 / sympathy
        :mod (c13-6 / person
                    :name (c13-4 / name
                                 :op1 "2garner"))
        :beneficiary (c13-11 / terrorist)
        :ARG1-of (c13-8 / cause-01
                        :ARG0 (c13-1 / use-01
                                     :ARG1 (c13-12 / person
                                                   :mod (c13-2 / poor)
                                                   :mod (c13-7 / country
                                                               :name (c13-5 / name
                                                                            :op1 "Palestine"))
                                                   :mod (c13-9 / that))
                                     :ARG2 (c13-3 / shield
                                                  :mod (c13-0 / human))))
        :quant 2)
