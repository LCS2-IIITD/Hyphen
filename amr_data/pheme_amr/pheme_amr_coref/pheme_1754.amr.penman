# ::snt : Soldier shot by gunman outside Canada parliament dies, minister says, as police search for multiple suspects
# ::tokens [":", "Soldier", "shot", "by", "gunman", "outside", "Canada", "parliament", "dies", ",", "minister", "says", ",", "as", "police", "search", "for", "multiple", "suspects"]
# ::lemmas [":", "Soldier", "shoot", "by", "gunman", "outside", "Canada", "parliament", "die", ",", "minister", "say", ",", "as", "police", "search", "for", "multiple", "suspect"]
(c1-14 / say-01
       :ARG0 (c1-2 / minister)
       :ARG1 (c1-9 / die-01
                   :ARG1 (c1-5 / soldier
                               :ARG1-of (c1-1 / shoot-02
                                              :ARG0 (c1-11 / gunman)
                                              :location (c1-3 / outside
                                                              :op1 (c1-10 / government-organization
                                                                          :name (c1-6 / name
                                                                                      :op1 "Parliament")
                                                                          :mod (c1-12 / country
                                                                                      :name (c1-7 / name
                                                                                                  :op1 "Canada"))))))
                   :time (c1-4 / search-01
                               :ARG0 (c1-8 / police)
                               :ARG2 (c1-15 / person
                                            :ARG2-of (c1-0 / suspect-01)
                                            :quant (c1-13 / multiple)))))

# ::snt Nice work btw &amp; the for sharing.
# ::tokens ["Nice", "work", "btw", "&", "amp", ";", "the", "for", "sharing", "."]
# ::lemmas ["nice", "work", "btw", "&", "amp", ";", "the", "for", "share", "."]
(c2-1 / multi-sentence
      :snt1 (c2-0 / work-01
                  :ARG1-of (c2-3 / nice-01)
                  :mod (c2-2 / by-the-way))
      :snt2 (c2-4 / share-01))

# ::snt : Soldier shot by gunman outside Canada parliament dies, minister says, as police search for multiple suspects
# ::tokens [":", "Soldier", "shot", "by", "gunman", "outside", "Canada", "parliament", "dies", ",", "minister", "says", ",", "as", "police", "search", "for", "multiple", "suspects"]
# ::lemmas [":", "Soldier", "shoot", "by", "gunman", "outside", "Canada", "parliament", "die", ",", "minister", "say", ",", "as", "police", "search", "for", "multiple", "suspect"]
(c3-14 / say-01
       :ARG0 (c3-2 / minister)
       :ARG1 (c3-9 / die-01
                   :ARG1 (c3-5 / soldier
                               :ARG1-of (c3-1 / shoot-02
                                              :ARG0 (c3-11 / gunman)
                                              :location (c3-3 / outside
                                                              :op1 (c3-10 / government-organization
                                                                          :name (c3-6 / name
                                                                                      :op1 "Parliament")
                                                                          :mod (c3-12 / country
                                                                                      :name (c3-7 / name
                                                                                                  :op1 "Canada"))))))
                   :time (c3-4 / search-01
                               :ARG0 (c3-8 / police)
                               :ARG2 (c3-15 / person
                                            :ARG2-of (c3-0 / suspect-01)
                                            :quant (c3-13 / multiple)))))

# ::snt He is still alive. Send prayers. That was a mis-tweet by our MP.
# ::tokens ["He", "is", "still", "alive", ".", "Send", "prayers", ".", "That", "was", "a", "mis", "-", "tweet", "by", "our", "MP", "."]
# ::lemmas ["he", "be", "still", "alive", ".", "send", "prayer", ".", "that", "be", "a", "mis", "-", "tweet", "by", "our", "MP", "."]
(c4-4 / multi-sentence
      :snt1 (c4-3 / live-01
                  :ARG0 (c4-0 / he)
                  :mod (c4-11 / still))
      :snt2 (c4-7 / send-01
                  :ARG0 (c4-1 / you)
                  :ARG1 (c4-8 / pray-01)
                  :mode imperative)
      :snt3 (c4-12 / thing
                   :ARG1-of (c4-9 / mistweet-00
                                  :ARG0 (c4-13 / person
                                               :ARG0-of (c4-14 / have-org-role-91
                                                               :ARG1 (c4-6 / parliament)
                                                               :ARG2 (c4-5 / member))
                                               :poss (c4-2 / we)))
                   :domain (c4-10 / that)))

# ::snt you disgusting, deluded individual
# ::tokens ["you", "disgusting", ",", "deluded", "individual"]
# ::lemmas ["you", "disgusting", ",", "delude", "individual"]
(c5-3 / individual
      :domain (c5-0 / you)
      :ARG0-of (c5-2 / disgust-01)
      :ARG1-of (c5-1 / delude-01))

# ::snt Please STOP your reporting on Canadian Soldier, 'til anything's been confirmed by Canadian Army or PMHarper's Office.
# ::tokens ["Please", "STOP", "your", "reporting", "on", "Canadian", "Soldier", ",", "'", "til", "anything", "'s", "been", "confirmed", "by", "Canadian", "Army", "or", "PMHarper", "'s", "Office", "."]
# ::lemmas ["please", "stop", "your", "reporting", "on", "Canadian", "Soldier", ",", "'", "til", "anything", "be", "be", "confirm", "by", "Canadian", "Army", "or", "PMHarper", "'s", "office", "."]
(c6-11 / stop-01
       :ARG0 (c6-0 / you)
       :ARG1 (c6-7 / report-01
                   :ARG0 c6-0
                   :ARG1 (c6-6 / person
                               :name (c6-4 / name
                                           :op1 "Canadian"
                                           :op2 "Soldier")))
       :time (c6-2 / until
                   :op1 (c6-8 / confirm-01
                              :ARG0 (c6-3 / or
                                          :op1 (c6-1 / military
                                                     :name (c6-5 / name
                                                                 :op1 "Canadian"
                                                                 :op2 "Army"))
                                          :op2 (c6-9 / government-organization
                                                     :name (c6-10 / name
                                                                  :op1 "PMHarper's"
                                                                  :op2 "Office")))
                              :ARG1 (c6-12 / anything)))
       :mode imperative
       :polite +)

# ::snt THIS HAS NOT BEEN CONFIRMED! has not confirmed! Stop reporting until you have the facts!!!
# ::tokens ["THIS", "HAS", "NOT", "BEEN", "CONFIRMED", "!", "has", "not", "confirmed", "!", "Stop", "reporting", "until", "you", "have", "the", "facts", "!", "!", "!"]
# ::lemmas ["this", "have", "not", "be", "CONFIRMED", "!", "have", "not", "confirm", "!", "stop", "report", "until", "you", "have", "the", "fact", "!", "!", "!"]
(c7-3 / multi-sentence
      :snt1 (c7-10 / and
                   :op1 (c7-6 / confirm-01
                              :ARG1 (c7-9 / this)
                              :polarity -)
                   :op2 (c7-5 / confirm-01
                              :ARG1 c7-9
                              :polarity -))
      :snt2 (c7-8 / stop-01
                  :ARG0 (c7-1 / you)
                  :ARG1 (c7-7 / report-01
                              :ARG0 c7-1)
                  :time (c7-4 / until
                              :op1 (c7-0 / have-03
                                         :ARG0 c7-1
                                         :ARG1 (c7-2 / fact)))
                  :mode imperative))

# ::snt Not confirmed.
# ::tokens ["Not", "confirmed", "."]
# ::lemmas ["not", "confirm", "."]
(c8-0 / confirm-01
      :polarity -)

# ::snt : Soldier shot by gunman outside Canada parliament dies, minister says, as police search for multiple suspects Terrible news
# ::tokens [":", "Soldier", "shot", "by", "gunman", "outside", "Canada", "parliament", "dies", ",", "minister", "says", ",", "as", "police", "search", "for", "multiple", "suspects", "Terrible", "news"]
# ::lemmas [":", "Soldier", "shoot", "by", "gunman", "outside", "Canada", "parliament", "die", ",", "minister", "say", ",", "as", "police", "search", "for", "multiple", "suspect", "terrible", "news"]
(c9-0 / multi-sentence
      :snt1 (c9-5 / say-01
                  :ARG0 (c9-11 / minister)
                  :ARG1 (c9-3 / die-01
                              :ARG1 (c9-9 / soldier
                                          :ARG1-of (c9-14 / shoot-02
                                                          :ARG0 (c9-12 / gunman)
                                                          :location (c9-15 / outside
                                                                           :op1 (c9-4 / government-organization
                                                                                      :name (c9-10 / name
                                                                                                   :op1 "Parliament")
                                                                                      :mod (c9-17 / country
                                                                                                  :name (c9-16 / name
                                                                                                               :op1 "Canada"))))))
                              :time (c9-8 / search-01
                                          :ARG0 (c9-2 / police)
                                          :ARG2 (c9-6 / person
                                                      :ARG2-of (c9-13 / suspect-01)
                                                      :quant (c9-7 / multiple)))))
      :snt2 (c9-1 / news
                  :mod (c9-18 / terrible)))

# ::snt MPs are saying it according to CNN
# ::tokens ["MPs", "are", "saying", "it", "according", "to", "CNN"]
# ::lemmas ["mp", "be", "say", "it", "accord", "to", "CNN"]
(c10-5 / say-01
       :ARG0 (c10-4 / publication
                    :name (c10-3 / name
                                 :op1 "CNN"))
       :ARG1 (c10-1 / say-01
                    :ARG0 (c10-6 / person
                                 :ARG0-of (c10-0 / MP-01))
                    :ARG1 (c10-2 / it)))

# ::snt I just saying what BBC is saying
# ::tokens ["I", "just", "saying", "what", "BBC", "is", "saying"]
# ::lemmas ["i", "just", "say", "what", "BBC", "be", "say"]
(c11-5 / say-01
       :ARG0 (c11-2 / i)
       :ARG1 (c11-6 / thing
                    :ARG1-of (c11-1 / say-01
                                    :ARG0 (c11-4 / publication
                                                 :name (c11-3 / name
                                                              :op1 "BBC"))))
       :mod (c11-0 / just))

# ::snt That is not confirmed yet.
# ::tokens ["That", "is", "not", "confirmed", "yet", "."]
# ::lemmas ["that", "be", "not", "confirm", "yet", "."]
(c12-2 / confirm-01
       :ARG1 (c12-0 / that)
       :time (c12-1 / yet)
       :polarity -)

# ::snt that's what happen when you give space to muslims.
# ::tokens ["that", "'s", "what", "happen", "when", "you", "give", "space", "to", "muslims", "."]
# ::lemmas ["that", "be", "what", "happen", "when", "you", "give", "space", "to", "muslim", "."]
(c13-1 / be-temporally-at-91
       :ARG1 (c13-7 / that)
       :ARG2 (c13-5 / give-01
                    :ARG0 (c13-0 / you)
                    :ARG1 (c13-6 / space)
                    :ARG2 (c13-3 / person
                                 :mod (c13-4 / religious-group
                                             :name (c13-2 / name
                                                          :op1 "Muslim")))))

# ::snt stop retweeting this. He has not died. Send prayers!
# ::tokens ["stop", "retweeting", "this", ".", "He", "has", "not", "died", ".", "Send", "prayers", "!"]
# ::lemmas ["stop", "retweete", "this", ".", "he", "have", "not", "die", ".", "send", "prayer", "!"]
(c14-2 / multi-sentence
       :snt1 (c14-8 / stop-01
                    :ARG0 (c14-1 / you)
                    :ARG1 (c14-5 / retweet-01
                                 :ARG0 c14-1
                                 :ARG1 (c14-9 / this))
                    :mode imperative)
       :snt2 (c14-6 / die-01
                    :ARG1 (c14-0 / he)
                    :polarity -)
       :snt3 (c14-3 / send-01
                    :ARG0 (c14-7 / you)
                    :ARG1 (c14-4 / pray-01
                                 :ARG0 c14-7)
                    :mode imperative))

# ::snt ..... shame! I was hoping he would survive. R.I.P
# ::tokens [".....", "shame", "!", "I", "was", "hoping", "he", "would", "survive", ".", "R.I.P"]
# ::lemmas [".....", "shame", "!", "i", "be", "hope", "he", "would", "survive", ".", "R.I.P"]
(c15-1 / multi-sentence
       :snt1 (c15-6 / shame-01
                    :mode expressive)
       :snt2 (c15-0 / hope-01
                    :ARG0 (c15-3 / i)
                    :ARG1 (c15-2 / survive-01
                                 :ARG0 (c15-7 / he)))
       :snt3 (c15-5 / person
                    :name (c15-4 / name
                                 :op1 "R.I.P.")))

# ::snt I understand...I won't acknowledge the rumor until confirmed by medical or police.
# ::tokens ["I", "understand", "...", "I", "wo", "n't", "acknowledge", "the", "rumor", "until", "confirmed", "by", "medical", "or", "police", "."]
# ::lemmas ["i", "understand", "...", "i", "will", "not", "acknowledge", "the", "rumor", "until", "confirm", "by", "medical", "or", "police", "."]
(c16-0 / multi-sentence
       :snt1 (c16-1 / understand-01
                    :ARG0 (c16-3 / i))
       :snt2 (c16-10 / acknowledge-01
                     :ARG0 (c16-7 / i)
                     :ARG1 (c16-5 / rumor-01)
                     :time (c16-9 / until
                                  :op1 (c16-6 / confirm-01
                                              :ARG0 (c16-2 / or
                                                           :op1 (c16-8 / doctor)
                                                           :op2 (c16-4 / police))
                                              :ARG1 c16-5))
                     :polarity -))

# ::snt The reported too.
# ::tokens ["The", "reported", "too", "."]
# ::lemmas ["the", "report", "too", "."]
(c17-0 / report-01
       :mod (c17-1 / too))

# ::snt This has not been confirmed. An MP misunderstood a tweet and retweeted. Our soldier is still alive.
# ::tokens ["This", "has", "not", "been", "confirmed", ".", "An", "MP", "misunderstood", "a", "tweet", "and", "retweeted", ".", "Our", "soldier", "is", "still", "alive", "."]
# ::lemmas ["this", "have", "not", "be", "confirm", ".", "an", "MP", "misunderstood", "a", "tweet", "and", "retweete", ".", "our", "soldier", "be", "still", "alive", "."]
(c18-3 / multi-sentence
       :snt1 (c18-9 / confirm-01
                    :ARG1 (c18-13 / this)
                    :polarity -)
       :snt2 (c18-15 / and
                     :op1 (c18-7 / misunderstand-01
                                 :ARG0 (c18-8 / person
                                              :ARG0-of (c18-0 / have-org-role-91
                                                              :ARG1 (c18-14 / parliament)
                                                              :ARG2 (c18-2 / member)))
                                 :ARG1 (c18-11 / thing
                                               :ARG1-of (c18-6 / tweet-01)))
                     :op2 (c18-10 / retweet-01
                                  :ARG0 c18-8
                                  :ARG1 c18-11))
       :snt3 (c18-4 / live-01
                    :ARG0 (c18-12 / soldier
                                  :poss (c18-1 / we))
                    :mod (c18-5 / still)))

# ::snt : Soldier shot by gunman outside Canada parliament dies, minister says, as police search for multiple suspects
# ::tokens [":", "Soldier", "shot", "by", "gunman", "outside", "Canada", "parliament", "dies", ",", "minister", "says", ",", "as", "police", "search", "for", "multiple", "suspects"]
# ::lemmas [":", "Soldier", "shoot", "by", "gunman", "outside", "Canada", "parliament", "die", ",", "minister", "say", ",", "as", "police", "search", "for", "multiple", "suspect"]
(c19-14 / say-01
        :ARG0 (c19-2 / minister)
        :ARG1 (c19-9 / die-01
                     :ARG1 (c19-5 / soldier
                                  :ARG1-of (c19-1 / shoot-02
                                                  :ARG0 (c19-11 / gunman)
                                                  :location (c19-3 / outside
                                                                   :op1 (c19-10 / government-organization
                                                                                :name (c19-6 / name
                                                                                             :op1 "Parliament")
                                                                                :mod (c19-12 / country
                                                                                             :name (c19-7 / name
                                                                                                          :op1 "Canada"))))))
                     :time (c19-4 / search-01
                                  :ARG0 (c19-8 / police)
                                  :ARG2 (c19-15 / person
                                                :ARG2-of (c19-0 / suspect-01)
                                                :quant (c19-13 / multiple)))))

# ::snt this is not confirmed.
# ::tokens ["this", "is", "not", "confirmed", "."]
# ::lemmas ["this", "be", "not", "confirm", "."]
(c20-1 / confirm-01
       :ARG1 (c20-0 / this)
       :polarity -)

# ::snt Look within their Corrupt system. Cops have been arresting people that are innocent!
# ::tokens ["Look", "within", "their", "Corrupt", "system", ".", "Cops", "have", "been", "arresting", "people", "that", "are", "innocent", "!"]
# ::lemmas ["look", "within", "their", "corrupt", "system", ".", "cop", "have", "be", "arrest", "people", "that", "be", "innocent", "!"]
(c21-3 / multi-sentence
       :snt1 (c21-2 / look-01
                    :ARG0 (c21-1 / you)
                    :ARG1 (c21-0 / within
                                 :op1 (c21-8 / system
                                             :ARG1-of (c21-7 / corrupt-01)
                                             :poss (c21-9 / they)))
                    :mode imperative)
       :snt2 (c21-10 / arrest-01
                     :ARG0 (c21-6 / cop)
                     :ARG1 (c21-5 / person
                                  :ARG1-of (c21-4 / innocent-01))))

# ::snt , thank goodness for that.... Prayers are with him and his family.
# ::tokens [",", "thank", "goodness", "for", "that", "....", "Prayers", "are", "with", "him", "and", "his", "family", "."]
# ::lemmas [",", "thank", "goodness", "for", "that", "....", "prayer", "be", "with", "he", "and", "his", "family", "."]
(c22-2 / multi-sentence
       :snt1 (c22-8 / thank-01
                    :ARG1 (c22-6 / goodness)
                    :ARG2 (c22-7 / that))
       :snt2 (c22-4 / pray-01
                    :accompanier (c22-9 / and
                                        :op1 (c22-0 / he)
                                        :op2 (c22-1 / family
                                                    :ARG1-of (c22-3 / have-org-role-91
                                                                    :ARG0 c22-0
                                                                    :ARG2 (c22-5 / member))))))

# ::snt : Soldier shot by gunman outside Canada parliament dies, minister says, as police search for multiple suspects
# ::tokens [":", "Soldier", "shot", "by", "gunman", "outside", "Canada", "parliament", "dies", ",", "minister", "says", ",", "as", "police", "search", "for", "multiple", "suspects"]
# ::lemmas [":", "Soldier", "shoot", "by", "gunman", "outside", "Canada", "parliament", "die", ",", "minister", "say", ",", "as", "police", "search", "for", "multiple", "suspect"]
(c23-14 / say-01
        :ARG0 (c23-2 / minister)
        :ARG1 (c23-9 / die-01
                     :ARG1 (c23-5 / soldier
                                  :ARG1-of (c23-1 / shoot-02
                                                  :ARG0 (c23-11 / gunman)
                                                  :location (c23-3 / outside
                                                                   :op1 (c23-10 / government-organization
                                                                                :name (c23-6 / name
                                                                                             :op1 "Parliament")
                                                                                :mod (c23-12 / country
                                                                                             :name (c23-7 / name
                                                                                                          :op1 "Canada"))))))
                     :time (c23-4 / search-01
                                  :ARG0 (c23-8 / police)
                                  :ARG2 (c23-15 / person
                                                :ARG2-of (c23-0 / suspect-01)
                                                :quant (c23-13 / multiple)))))

# ::snt heartbreaking
# ::tokens ["heartbreaking"]
# ::lemmas ["heartbreake"]
(c24-0 / break-heart-31)

# ::snt Yeah just heard was hoping it was wrong.
# ::tokens ["Yeah", "just", "heard", "was", "hoping", "it", "was", "wrong", "."]
# ::lemmas ["yeah", "just", "hear", "be", "hope", "it", "be", "wrong", "."]
(c25-0 / hear-01
       :ARG0 (c25-3 / i)
       :ARG1 (c25-5 / hope-01
                    :ARG0 c25-3
                    :ARG1 (c25-1 / wrong-04
                                 :ARG1 (c25-4 / it)))
       :mod (c25-2 / just))

# ::snt Yea same. And no worries!
# ::tokens ["Yea", "same", ".", "And", "no", "worries", "!"]
# ::lemmas ["yea", "same", ".", "and", "no", "worry", "!"]
(c26-2 / multi-sentence
       :snt1 (c26-3 / same-01
                    :ARG1 (c26-0 / yea))
       :snt2 (c26-4 / and
                    :op2 (c26-1 / worry-02
                                :polarity -)))

# ::snt This is not confirmed. This tweet was an error by our Minister. Our soldier is alive.
# ::tokens ["This", "is", "not", "confirmed", ".", "This", "tweet", "was", "an", "error", "by", "our", "Minister", ".", "Our", "soldier", "is", "alive", "."]
# ::lemmas ["this", "be", "not", "confirm", ".", "this", "tweet", "be", "an", "error", "by", "our", "Minister", ".", "our", "soldier", "be", "alive", "."]
(c27-3 / multi-sentence
       :snt1 (c27-9 / confirm-01
                    :ARG1 (c27-12 / this)
                    :polarity -)
       :snt2 (c27-4 / err-01
                    :ARG0 (c27-7 / person
                                 :ARG0-of (c27-0 / have-org-role-91
                                                 :ARG1 (c27-1 / we)
                                                 :ARG2 (c27-8 / minister)))
                    :domain (c27-10 / tweet-01
                                    :mod (c27-6 / this)))
       :snt3 (c27-2 / live-01
                    :ARG0 (c27-11 / soldier
                                  :poss (c27-5 / we))))

# ::snt : Soldier shot by gunman outside Canada parliament dies, minister says, as police search for multiple suspects
# ::tokens [":", "Soldier", "shot", "by", "gunman", "outside", "Canada", "parliament", "dies", ",", "minister", "says", ",", "as", "police", "search", "for", "multiple", "suspects"]
# ::lemmas [":", "Soldier", "shoot", "by", "gunman", "outside", "Canada", "parliament", "die", ",", "minister", "say", ",", "as", "police", "search", "for", "multiple", "suspect"]
(c28-14 / say-01
        :ARG0 (c28-2 / minister)
        :ARG1 (c28-9 / die-01
                     :ARG1 (c28-5 / soldier
                                  :ARG1-of (c28-1 / shoot-02
                                                  :ARG0 (c28-11 / gunman)
                                                  :location (c28-3 / outside
                                                                   :op1 (c28-10 / government-organization
                                                                                :name (c28-6 / name
                                                                                             :op1 "Parliament")
                                                                                :mod (c28-12 / country
                                                                                             :name (c28-7 / name
                                                                                                          :op1 "Canada"))))))
                     :time (c28-4 / search-01
                                  :ARG0 (c28-8 / police)
                                  :ARG2 (c28-15 / person
                                                :ARG2-of (c28-0 / suspect-01)
                                                :quant (c28-13 / multiple)))))
