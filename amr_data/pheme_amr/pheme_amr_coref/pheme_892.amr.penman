# ::snt Ja. Vldigt obehagligt.
# ::tokens ["Ja", ".", "Vldigt", "obehagligt", "."]
# ::lemmas ["Ja", ".", "Vldigt", "obehagligt", "."]
(c1-1 / person
      :name (c1-0 / name
                  :op1 "Ja."
                  :op2 "Vldigt"
                  :op3 "Obehagligt"))

# ::snt do we have to live like this, not knowing when the next muslim will get radicalised and attack us?
# ::tokens ["do", "we", "have", "to", "live", "like", "this", ",", "not", "knowing", "when", "the", "next", "muslim", "will", "get", "radicalised", "and", "attack", "us", "?"]
# ::lemmas ["do", "we", "have", "to", "live", "like", "this", ",", "not", "know", "when", "the", "next", "muslim", "will", "get", "radicalise", "and", "attack", "we", "?"]
(c2-2 / obligate-01
      :polarity (c2-14 / amr-unknown)
      :ARG1 (c2-0 / we)
      :ARG2 (c2-1 / live-01
                  :ARG0 c2-0
                  :ARG1-of (c2-9 / resemble-01
                                 :ARG2 (c2-13 / this))
                  :manner (c2-5 / know-01
                                :ARG0 c2-0
                                :ARG1 (c2-12 / time
                                             :time-of (c2-4 / and
                                                            :op1 (c2-6 / radicalize-01
                                                                       :ARG1 (c2-8 / person
                                                                                   :mod (c2-3 / religious-group
                                                                                              :name (c2-7 / name
                                                                                                          :op1 "Islam"))
                                                                                   :mod (c2-10 / next)))
                                                            :op2 (c2-11 / attack-01
                                                                        :ARG0 c2-8
                                                                        :ARG1 c2-0)))
                                :polarity -)))

# ::snt Nervewrecking
# ::tokens ["Nervewrecking"]
# ::lemmas ["nervewrecke"]
(c3-0 / wreck-01)

# ::snt is this all to justify more Aussy troops to Iraq or tightening up immigration? FALSE FLAG
# ::tokens ["is", "this", "all", "to", "justify", "more", "Aussy", "troops", "to", "Iraq", "or", "tightening", "up", "immigration", "?", "FALSE", "FLAG"]
# ::lemmas ["be", "this", "all", "to", "justify", "more", "Aussy", "troop", "to", "Iraq", "or", "tighten", "up", "immigration", "?", "false", "flag"]
(c4-3 / multi-sentence
      :snt1 (c4-0 / have-purpose-91
                  :ARG1 (c4-14 / this
                               :mod (c4-15 / all))
                  :ARG2 (c4-4 / or
                              :op1 (c4-1 / justify-01
                                         :ARG0 c4-14
                                         :ARG1 (c4-13 / troop
                                                      :mod (c4-10 / pussy)
                                                      :quant (c4-11 / more)
                                                      :destination (c4-12 / country
                                                                          :name (c4-8 / name
                                                                                      :op1 "Iraq"))))
                              :op2 (c4-9 / tighten-01
                                         :ARG0 c4-14
                                         :ARG1 (c4-6 / immigrate-01)))
                  :polarity (c4-5 / amr-unknown))
      :snt2 (c4-2 / flag
                  :ARG1-of (c4-7 / false-03)))

# ::snt Yes.
# ::tokens ["Yes", "."]
# ::lemmas ["yes", "."]
(c5-0 / yes)

# ::snt Allts, om man vill jmfra: som om ngon tagit gisslan i caf vid Gustav Adolfs Torg i Gbg; samma typ av byggnader runt om.
# ::tokens ["Allts", ",", "om", "man", "vill", "jmfra", ":", "som", "om", "ngon", "tagit", "gisslan", "i", "caf", "vid", "Gustav", "Adolfs", "Torg", "i", "Gbg", ";", "samma", "typ", "av", "byggnader", "runt", "om", "."]
# ::lemmas ["allt", ",", "om", "man", "vill", "jmfra", ":", "som", "om", "ngon", "tagit", "gisslan", "i", "caf", "vid", "Gustav", "Adolfs", "Torg", "i", "Gbg", ";", "samma", "typ", "av", "byggnader", "runt", "om", "."]
(c6-0 / multi-sentence
      :snt1 (c6-7 / all)
      :snt2 (c6-16 / and
                   :op1 (c6-10 / be-located-at-91
                               :ARG1 (c6-4 / person
                                           :name (c6-13 / name
                                                        :op1 "Allts"))
                               :ARG2 (c6-20 / city
                                            :name (c6-19 / name
                                                         :op1 "Man"
                                                         :op2 "Vill"
                                                         :op3 "Jmfra")))
                   :op2 (c6-17 / be-located-at-91
                               :ARG1 (c6-6 / person
                                           :name (c6-2 / name
                                                       :op1 "Gustav"
                                                       :op2 "Adolfs"
                                                       :op3 "Torg"))
                               :ARG2 (c6-5 / city-district
                                           :name (c6-3 / name
                                                       :op1 "Copenhagen")))
                   :op3 (c6-21 / be-located-at-91
                               :ARG1 (c6-9 / person
                                           :name (c6-1 / name
                                                       :op1 "Gustav"
                                                       :op2 "Adolfs"
                                                       :op3 "Torg"))
                               :ARG2 c6-20
                               :name (c6-8 / name
                                           :op1 "Gbg")))
      :op4 (c6-22 / be-located-at-91
                  :ARG1 (c6-14 / run-01
                               :ARG0 (c6-15 / person
                                            :ARG0-of (c6-18 / oppose-01
                                                            :ARG1 (c6-11 / person
                                                                         :name (c6-12 / name
                                                                                      :op1 "Hitler")))))
                  :ARG2 c6-20))

# ::snt : : Contact made with gunman police report
# ::tokens [":", ":", "Contact", "made", "with", "gunman", "police", "report"]
# ::lemmas [":", ":", "contact", "make", "with", "gunman", "police", "report"]
(c7-2 / contact-01
      :ARG1 (c7-1 / report-01
                  :ARG0 (c7-0 / police
                              :mod (c7-3 / gunman))))

# ::snt : : Contact made w gunman police report Close to you, ?
# ::tokens [":", ":", "Contact", "made", "w", "gunman", "police", "report", "Close", "to", "you", ",", "?"]
# ::lemmas [":", ":", "contact", "make", "w", "gunman", "police", "report", "close", "to", "you", ",", "?"]
(c8-4 / contact-01
      :ARG1 (c8-1 / police
                  :mod (c8-5 / gunman))
      :ARG1-of (c8-3 / report-01
                     :ARG0 c8-1)
      :ARG1-of (c8-2 / close-10
                     :ARG2 (c8-0 / you)
                     :polarity (c8-6 / amr-unknown)))

# ::snt Frstr. Hatar snt hr fr det finns bara frlorare. ven om man klarar livhanken r det pts i bakvattnet..
# ::tokens ["Frstr", ".", "Hatar", "snt", "hr", "fr", "det", "finns", "bara", "frlorare", ".", "ven", "om", "man", "klarar", "livhanken", "r", "det", "pts", "i", "bakvattnet", ".."]
# ::lemmas ["Frstr", ".", "Hatar", "snt", "hr", "fr", "det", "finns", "bara", "frlorare", ".", "ven", "om", "man", "klarar", "livhanken", "r", "det", "pt", "i", "bakvattnet", ".."]
(c9-2 / multi-sentence
      :snt1 (c9-9 / and
                  :op1 (c9-0 / have-polarity-91
                             :ARG1 (c9-5 / person
                                         :name (c9-3 / name
                                                     :op1 "Hatar"))
                             :op2-of c9-9
                             :ARG2 -)
                  :ARG1 c9-5
                  :ARG2 -)
      :op3 c9-0
      :ARG1 c9-5
      :op4 c9-0
      :op5 c9-0
      :op6 c9-0
      :op7 c9-0
      :op8 (c9-1 / have-part-91
                 :ARG1 (c9-7 / city
                             :name (c9-4 / name
                                         :op1 "Bara"))
                 :ARG2 -)
      :op9 c9-0
      :op10 c9-1
      :ARG1 (c9-8 / government-organization
                  :name (c9-6 / name
                              :op1 "Bakvattnet"))
      :ARG2 -
      :ARG2 -
      :ARG2 -
      :ARG2 -
      :ARG2 -
      :ARG2 -
      :ARG2 -)

# ::snt It's in CBD (Central Business District) so not really; it's relatively close (say, -1 km) to where dr woo works, obviously.
# ::tokens ["It", "'s", "in", "CBD", "(", "Central", "Business", "District", ")", "so", "not", "really", ";", "it", "'s", "relatively", "close", "(", "say", ",", "-1", "km", ")", "to", "where", "dr", "woo", "works", ",", "obviously", "."]
# ::lemmas ["it", "be", "in", "CBD", "(", "Central", "Business", "District", ")", "so", "not", "really", ";", "it", "be", "relatively", "close", "(", "say", ",", "-1", "km", ")", "to", "where", "dr", "woo", "work", ",", "obviously", "."]
(c10-3 / multi-sentence
       :snt1 (c10-12 / cause-01
                     :ARG0 (c10-4 / be-located-at-91
                                  :ARG1 (c10-6 / it)
                                  :ARG2 (c10-11 / city-district
                                                :name (c10-8 / name
                                                             :op1 "Central"
                                                             :op2 "Business"
                                                             :op3 "District")))
                     :ARG1 (c10-13 / real-04
                                   :polarity -))
       :snt2 (c10-16 / close-06
                     :ARG1 (c10-14 / it)
                     :ARG2 (c10-2 / location
                                  :location-of (c10-0 / work-01
                                                      :ARG0 (c10-15 / doctor
                                                                    :name (c10-9 / name
                                                                                 :op1 " woo"))))
                     :ARG2-of (c10-7 / relative-05)
                     :ARG1-of (c10-10 / mean-01
                                      :ARG2 (c10-1 / distance-quantity
                                                   :unit (c10-17 / kilometer)
                                                   :quant 1))
                     :ARG1-of (c10-5 / obvious-01)))

# ::snt heavy boys are in ! Thats one dead man
# ::tokens ["heavy", "boys", "are", "in", "!", "That", "s", "one", "dead", "man"]
# ::lemmas ["heavy", "boy", "be", "in", "!", "that", "s", "one", "dead", "man"]
(c11-1 / multi-sentence
       :snt1 (c11-2 / be-located-at-91
                    :ARG1 (c11-5 / boy
                                 :mod (c11-0 / heavy)))
       :snt2 (c11-3 / man
                    :ARG1-of (c11-4 / die-01)
                    :domain (c11-6 / that)
                    :quant 1))

# ::snt : : Contact made with gunman police report lol relax terminator
# ::tokens [":", ":", "Contact", "made", "with", "gunman", "police", "report", "lol", "relax", "terminator"]
# ::lemmas [":", ":", "contact", "make", "with", "gunman", "police", "report", "lol", "relax", "terminator"]
(c12-1 / multi-sentence
       :snt1 (c12-6 / contact-01
                    :ARG1 (c12-5 / report-01
                                 :ARG0 (c12-4 / police
                                              :mod (c12-7 / gunman)))
                    :mod (c12-0 / laugh-01
                                :ARG0 (c12-2 / i)
                                :manner (c12-8 / loud)
                                :mode expressive))
       :snt2 (c12-10 / person
                     :ARG0-of (c12-9 / terminate-01)
                     :ARG0-of (c12-3 / relax-01)))
