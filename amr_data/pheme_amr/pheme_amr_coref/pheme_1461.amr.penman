# ::snt so why are you on Twitter then bellend ?
# ::tokens ["so", "why", "are", "you", "on", "Twitter", "then", "bellend", "?"]
# ::lemmas ["so", "why", "be", "you", "on", "Twitter", "then", "bellend", "?"]
(c1-1 / bellend-01
      :ARG0 (c1-0 / you)
      :ARG1-of (c1-4 / cause-01
                     :ARG0 (c1-6 / amr-unknown))
      :medium (c1-3 / publication
                    :name (c1-2 / name
                                :op1 "Twitter"))
      :mod (c1-5 / then))

# ::snt someone own tweets proves they are not as they claim law abiding citizen.
# ::tokens ["someone", "own", "tweets", "proves", "they", "are", "not", "as", "they", "claim", "law", "abiding", "citizen", "."]
# ::lemmas ["someone", "own", "tweet", "prove", "they", "be", "not", "as", "they", "claim", "law", "abide", "citizen", "."]
(c2-2 / prove-01
      :ARG0 (c2-7 / tweet-02
                  :ARG0 (c2-6 / someone))
      :ARG1 (c2-0 / have-mod-91
                  :ARG1 (c2-5 / they)
                  :ARG2 (c2-4 / citizen
                              :ARG0-of (c2-8 / abide-01
                                             :ARG1 (c2-1 / law))
                              :ARG1-of (c2-3 / claim-01
                                             :ARG0 c2-5))
                  :polarity -))

# ::snt and you mean the Muslim extremists
# ::tokens ["and", "you", "mean", "the", "Muslim", "extremists"]
# ::lemmas ["and", "you", "mean", "the", "Muslim", "extremist"]
(c3-5 / and
      :op2 (c3-1 / mean-01
                 :ARG0 (c3-0 / you)
                 :ARG2 (c3-2 / extremist
                             :mod (c3-4 / religious-group
                                        :name (c3-3 / name
                                                    :op1 "Muslim")))))

# ::snt u father her own mother and then Nation started
# ::tokens ["u", "father", "her", "own", "mother", "and", "then", "Nation", "started"]
# ::lemmas ["u", "father", "her", "own", "mother", "and", "then", "Nation", "start"]
(c4-9 / and
      :op1 (c4-6 / person
                 :ARG0-of (c4-0 / have-rel-role-91
                                :ARG1 (c4-7 / she)
                                :ARG2 (c4-2 / mother))
                 :ARG0-of (c4-1 / have-rel-role-91
                                :ARG1 c4-7
                                :ARG2 (c4-3 / father)))
      :op2 (c4-4 / start-01
                 :ARG1 (c4-5 / nation)
                 :time (c4-8 / then)))

# ::snt is that the best you've got? And we're not asking for more pay u absolute fucking bellend!
# ::tokens ["is", "that", "the", "best", "you", "'ve", "got", "?", "And", "we", "'re", "not", "asking", "for", "more", "pay", "u", "absolute", "fucking", "bellend", "!"]
# ::lemmas ["be", "that", "the", "good", "you", "'ve", "get", "?", "and", "we", "be", "not", "ask", "for", "more", "pay", "u", "absolute", "fucking", "bellend", "!"]
(c5-4 / multi-sentence
      :snt1 (c5-0 / have-degree-91
                  :ARG1 (c5-15 / that)
                  :ARG2 (c5-11 / good-02
                               :ARG1 c5-15)
                  :ARG3 (c5-9 / most)
                  :ARG5 (c5-16 / have-03
                               :ARG0 (c5-1 / you))
                  :polarity (c5-14 / amr-unknown))
      :snt2 (c5-7 / and
                  :op2 (c5-8 / ask-02
                             :ARG0 (c5-2 / we)
                             :ARG1 (c5-10 / pay-01
                                          :mod (c5-3 / more))
                             :ARG2 (c5-12 / you
                                          :mod (c5-6 / bellend
                                                     :mod (c5-13 / absolute)
                                                     :mod (c5-5 / fucking
                                                                :mode expressive)))
                             :polarity -)))

# ::snt No. Why don't you.
# ::tokens ["No", ".", "Why", "do", "n't", "you", "."]
# ::lemmas ["no", ".", "why", "do", "not", "you", "."]
(c6-1 / multi-sentence
      :snt1 (c6-2 / no)
      :snt2 (c6-4 / cause-01
                  :ARG0 (c6-5 / amr-unknown)
                  :ARG1 (c6-3 / do-02
                              :ARG0 (c6-0 / you)
                              :polarity -)))

# ::snt he means the vast majority who stand by and Watch it happen and then cheer
# ::tokens ["he", "means", "the", "vast", "majority", "who", "stand", "by", "and", "Watch", "it", "happen", "and", "then", "cheer"]
# ::lemmas ["he", "mean", "the", "vast", "majority", "who", "stand", "by", "and", "watch", "it", "happen", "and", "then", "cheer"]
(c7-2 / mean-01
      :ARG0 (c7-0 / he)
      :ARG2 (c7-5 / majority
                  :mod (c7-4 / vast)
                  :ARG0-of (c7-7 / stand-11
                                 :ARG1 (c7-9 / and
                                             :op1 (c7-1 / watch-01
                                                        :ARG0 c7-5
                                                        :ARG1 (c7-3 / it))
                                             :op2 (c7-6 / cheer-02
                                                        :ARG0 c7-5
                                                        :time (c7-8 / then))))))

# ::snt Can't face facts, abuse and name call.
# ::tokens ["Ca", "n't", "face", "facts", ",", "abuse", "and", "name", "call", "."]
# ::lemmas ["can", "not", "face", "fact", ",", "abuse", "and", "name", "call", "."]
(c8-4 / possible-01
      :ARG1 (c8-0 / face-01
                  :ARG1 (c8-6 / and
                              :op1 (c8-2 / fact)
                              :op2 (c8-1 / abuse-01)
                              :op3 (c8-5 / call-01
                                         :ARG2 (c8-3 / name))))
      :polarity -)

# ::snt Tony I understand your hate . . . being a WestHamfan..you had&amp;'ll have painfull day..
# ::tokens ["Tony", "I", "understand", "your", "hate", ".", ".", ".", "being", "a", "WestHamfan", "..", "you", "had&amp;'ll", "have", "painfull", "day", ".."]
# ::lemmas ["Tony", "i", "understand", "your", "hate", ".", ".", ".", "be", "a", "WestHamfan", "..", "you", "had&amp;'ll", "have", "painfull", "day", ".."]
(c9-10 / say-01
       :ARG0 (c9-4 / i)
       :ARG1 (c9-2 / understand-01
                   :ARG0 c9-4
                   :ARG1 (c9-0 / hate-01
                               :ARG0 (c9-7 / person
                                           :name (c9-5 / name
                                                       :op1 "Tony"))
                               :ARG1-of (c9-9 / cause-01
                                              :ARG0 (c9-13 / and
                                                           :op1 (c9-1 / have-03
                                                                      :ARG0 c9-7
                                                                      :ARG1 (c9-11 / thing
                                                                                   :name (c9-6 / name
                                                                                               :op1 "WestHamfan")))
                                                           :op2 (c9-8 / have-03
                                                                      :ARG0 c9-7
                                                                      :ARG1 c9-13
                                                                      :op1 (c9-12 / pain-01)
                                                                      :op2 (c9-3 / amp))))))
       :ARG2 c9-7)

# ::snt TK in drugshandel? Onderzoek het zelf!
# ::tokens ["TK", "in", "drugshandel", "?", "Onderzoek", "het", "zelf", "!"]
# ::lemmas ["TK", "in", "drugshandel", "?", "onderzoek", "het", "zelf", "!"]
(c10-0 / multi-sentence
       :snt1 (c10-2 / be-located-at-91
                    :ARG1 (c10-5 / person
                                 :name (c10-3 / name
                                              :op1 "TK"))
                    :ARG2 (c10-6 / drugshandel)
                    :polarity (c10-8 / amr-unknown))
       :snt2 (c10-1 / zelf
                    :domain (c10-7 / person
                                   :name (c10-4 / name
                                                :op1 "Onderzoek"))))

# ::snt da Fuck you saying bro?
# ::tokens ["da", "Fuck", "you", "saying", "bro", "?"]
# ::lemmas ["da", "Fuck", "you", "say", "bro", "?"]
(c11-2 / fuck-01
       :ARG1 (c11-5 / say-01
                    :ARG0 (c11-1 / you)
                    :ARG2 (c11-4 / person
                                 :ARG0-of (c11-0 / have-rel-role-91
                                                 :ARG2 (c11-3 / bro))))
       :polarity (c11-6 / amr-unknown))

# ::snt Like the cockroaches they are..they need wiped out! Nothing but parasites
# ::tokens ["Like", "the", "cockroaches", "they", "are", "..", "they", "need", "wiped", "out", "!", "Nothing", "but", "parasites"]
# ::lemmas ["like", "the", "cockroach", "they", "be", "..", "they", "need", "wipe", "out", "!", "nothing", "but", "parasite"]
(c12-1 / multi-sentence
       :snt1 (c12-5 / resemble-01
                    :ARG1 (c12-8 / they)
                    :ARG2 (c12-6 / cockroach
                                 :domain c12-8))
       :snt2 (c12-2 / need-01
                    :ARG1 (c12-0 / wipe-out-02
                                 :ARG1 (c12-7 / they)))
       :snt3 (c12-4 / parasite
                    :mod (c12-3 / nothing-but)))

# ::snt are you a member of the EDL by any chance...?
# ::tokens ["are", "you", "a", "member", "of", "the", "EDL", "by", "any", "chance", "...", "?"]
# ::lemmas ["be", "you", "a", "member", "of", "the", "EDL", "by", "any", "chance", "...", "?"]
(c13-2 / member
       :polarity (c13-7 / amr-unknown)
       :ARG2-of (c13-0 / have-org-role-91
                       :ARG1 (c13-3 / organization
                                    :name (c13-5 / name
                                                 :op1 "EDL")))
       :domain (c13-1 / you)
       :ARG1-of (c13-6 / chance-02
                       :mod (c13-4 / any)))

# ::snt loll. Why don't you pull your damn troops out of our country and then I'll go. And spreading hate in mosques?
# ::tokens ["loll", ".", "Why", "do", "n't", "you", "pull", "your", "damn", "troops", "out", "of", "our", "country", "and", "then", "I", "'ll", "go", ".", "And", "spreading", "hate", "in", "mosques", "?"]
# ::lemmas ["loll", ".", "why", "do", "not", "you", "pull", "your", "damn", "troop", "out", "of", "our", "country", "and", "then", "i", "'ll", "go", ".", "and", "spread", "hate", "in", "mosques", "?"]
(c14-4 / multi-sentence
       :snt1 (c14-3 / loll
                    :mode expressive)
       :snt2 (c14-10 / cause-01
                     :ARG0 (c14-17 / amr-unknown)
                     :ARG1 (c14-5 / and
                                  :op1 (c14-8 / pull-out-02
                                              :ARG0 (c14-1 / you)
                                              :ARG1 (c14-16 / troop
                                                            :poss c14-1
                                                            :mod (c14-9 / damn))
                                              :ARG2 (c14-11 / country
                                                            :poss (c14-2 / we))
                                              :polarity -)
                                  :op2 (c14-12 / go-02
                                               :ARG0 (c14-6 / i)
                                               :time (c14-13 / then))))
       :snt3 (c14-7 / and
                    :op2 (c14-14 / spread-03
                                 :ARG1 (c14-0 / hate-01)
                                 :location (c14-15 / mosque))))

# ::snt the only good thing that came from India is fucking Bollywood. Fucking slaves.
# ::tokens ["the", "only", "good", "thing", "that", "came", "from", "India", "is", "fucking", "Bollywood", ".", "Fucking", "slaves", "."]
# ::lemmas ["the", "only", "good", "thing", "that", "come", "from", "India", "be", "fucking", "Bollywood", ".", "fucking", "slave", "."]
(c15-1 / multi-sentence
       :snt1 (c15-10 / thing
                     :ARG1-of (c15-8 / good-02)
                     :mod (c15-2 / only)
                     :ARG1-of (c15-7 / come-01
                                     :ARG3 (c15-6 / country
                                                  :name (c15-3 / name
                                                               :op1 "India")))
                     :domain (c15-5 / market-sector
                                    :name (c15-4 / name
                                                 :op1 "Bollywood")
                                    :mod (c15-0 / fucking)))
       :snt2 (c15-9 / slave
                    :mod c15-0))

# ::snt Tony, sit down and shut the fuck up!! You're coming across as stupid now.
# ::tokens ["Tony", ",", "sit", "down", "and", "shut", "the", "fuck", "up", "!", "!", "You", "'re", "coming", "across", "as", "stupid", "now", "."]
# ::lemmas ["Tony", ",", "sit", "down", "and", "shut", "the", "fuck", "up", "!", "!", "you", "be", "come", "across", "as", "stupid", "now", "."]
(c16-1 / multi-sentence
       :snt1 (c16-10 / say-01
                     :ARG0 (c16-5 / i)
                     :ARG1 (c16-11 / and
                                   :op1 (c16-4 / sit-down-02
                                               :ARG1 (c16-8 / person
                                                            :name (c16-6 / name
                                                                         :op1 "Tony"))
                                               :mode imperative)
                                   :op2 (c16-0 / shut-up-06
                                               :ARG0 c16-8
                                               :ARG1 c16-8
                                               :mod (c16-2 / fuck
                                                           :mode expressive)
                                               :mode imperative))
                     :ARG2 c16-8)
       :snt2 (c16-9 / come-across-15
                    :ARG1 (c16-3 / stupid
                                 :domain c16-8)
                    :time (c16-7 / now)))

# ::snt you should, you'd totally fit right in! Anyway I'll leave you with this "As-salamu alaykum"
# ::tokens ["you", "should", ",", "you", "'d", "totally", "fit", "right", "in", "!", "Anyway", "I", "'ll", "leave", "you", "with", "this", "\"", "As", "-", "salamu", "alaykum", "\""]
# ::lemmas ["you", "should", ",", "you", "would", "totally", "fit", "right", "in", "!", "anyway", "i", "'ll", "leave", "you", "with", "this", "\"", "as", "-", "salamu", "alaykum", "\""]
(c17-2 / multi-sentence
       :snt1 (c17-8 / recommend-01
                    :ARG2 (c17-0 / you)
                    :ARG1-of (c17-9 / cause-01
                                    :ARG0 (c17-1 / fit-in-02
                                                 :ARG1 c17-0
                                                 :ARG1-of (c17-6 / right-03)
                                                 :mod (c17-12 / total))))
       :snt2 (c17-3 / leave-12
                    :ARG0 (c17-5 / i)
                    :ARG1 (c17-10 / you)
                    :ARG2 (c17-13 / alaykum
                                  :mod (c17-11 / this)
                                  :mod (c17-4 / as-salamu))
                    :mod (c17-7 / anyway)))

# ::snt such a happy smiling face. Can't get him out of my head today. Can only hope he's in a good place.
# ::tokens ["such", "a", "happy", "smiling", "face", ".", "Ca", "n't", "get", "him", "out", "of", "my", "head", "today", ".", "Can", "only", "hope", "he", "'s", "in", "a", "good", "place", "."]
# ::lemmas ["such", "a", "happy", "smile", "face", ".", "can", "not", "get", "he", "out", "of", "my", "head", "today", ".", "can", "only", "hope", "he", "be", "in", "a", "good", "place", "."]
(c18-0 / multi-sentence
       :snt1 (c18-8 / face
                    :ARG0-of (c18-4 / smile-01)
                    :ARG1-of (c18-7 / happy-02
                                    :degree (c18-11 / such)))
       :snt2 (c18-2 / possible-01
                    :ARG1 (c18-12 / get-05
                                  :ARG1 (c18-6 / he)
                                  :ARG2 (c18-17 / out-06
                                                :ARG1 c18-6
                                                :ARG2 (c18-1 / head
                                                             :part-of (c18-13 / i)))
                                  :time (c18-18 / today))
                    :polarity -)
       :snt3 (c18-5 / possible-01
                    :ARG1 (c18-14 / hope-01
                                  :ARG1 (c18-10 / be-located-at-91
                                                :ARG1 (c18-16 / he)
                                                :ARG2 (c18-9 / place
                                                             :ARG1-of (c18-3 / good-02)))
                                  :mod (c18-15 / only))))

# ::snt so you're the whole religion based on this stupid video that doesn't represent Islam at all
# ::tokens ["so", "you", "'re", "the", "whole", "religion", "based", "on", "this", "stupid", "video", "that", "does", "n't", "represent", "Islam", "at", "all"]
# ::lemmas ["so", "you", "be", "the", "whole", "religion", "base", "on", "this", "stupid", "video", "that", "do", "not", "represent", "Islam", "at", "all"]
(c19-4 / infer-01
       :ARG1 (c19-8 / religion
                    :domain (c19-1 / you)
                    :mod (c19-0 / whole)
                    :ARG1-of (c19-2 / base-02
                                    :ARG2 (c19-7 / video
                                                 :mod (c19-9 / stupid)
                                                 :mod (c19-10 / this)
                                                 :ARG0-of (c19-5 / represent-01
                                                                 :ARG1 (c19-3 / religious-group
                                                                              :name (c19-6 / name
                                                                                           :op1 "Islam"))
                                                                 :degree (c19-11 / at-all)
                                                                 :polarity -)))))

# ::snt you red dot muthafucka.
# ::tokens ["you", "red", "dot", "muthafucka", "."]
# ::lemmas ["you", "red", "dot", "muthafucka", "."]
(c20-5 / say-01
       :ARG0 (c20-1 / i)
       :ARG1 (c20-2 / person
                    :mod (c20-4 / dot
                                :ARG1-of (c20-3 / red-02))
                    :domain (c20-0 / you
                                   :ARG2-of c20-5)))

# ::snt ignore the loony commenters! They just want to stir up trouble....
# ::tokens ["ignore", "the", "loony", "commenters", "!", "They", "just", "want", "to", "stir", "up", "trouble", "...."]
# ::lemmas ["ignore", "the", "loony", "commenter", "!", "they", "just", "want", "to", "stir", "up", "trouble", "...."]
(c21-4 / multi-sentence
       :snt1 (c21-5 / ignore-01
                    :ARG0 (c21-1 / you)
                    :ARG1 (c21-6 / person
                                 :ARG0-of (c21-7 / comment-01)
                                 :mod (c21-3 / loony))
                    :mode imperative)
       :snt2 (c21-2 / want-01
                    :ARG0 (c21-10 / they)
                    :ARG1 (c21-9 / stir-up-04
                                 :ARG0 c21-10
                                 :ARG1 (c21-8 / trouble-05))
                    :mod (c21-0 / just)))

# ::snt I don't give a fuck about stupid radicals (who are going to hell) disobeying Allah.
# ::tokens ["I", "do", "n't", "give", "a", "fuck", "about", "stupid", "radicals", "(", "who", "are", "going", "to", "hell", ")", "disobeying", "Allah", "."]
# ::lemmas ["i", "do", "not", "give", "a", "fuck", "about", "stupid", "radical", "(", "who", "be", "go", "to", "hell", ")", "disobey", "Allah", "."]
(c22-7 / give-16
       :ARG0 (c22-2 / i)
       :ARG1 (c22-1 / fuck)
       :ARG2 (c22-5 / disobey-01
                    :ARG0 (c22-4 / person
                                 :ARG1-of (c22-6 / radical-02)
                                 :mod (c22-9 / stupid)
                                 :ARG1-of (c22-8 / go-01
                                                 :ARG4 (c22-0 / hell)))
                    :ARG1 (c22-10 / person
                                  :name (c22-3 / name
                                               :op1 "Allah")))
       :polarity -)

# ::snt Greetings !Can you for once time be polite, please !Bye !
# ::tokens ["Greetings", "!", "Can", "you", "for", "once", "time", "be", "polite", ",", "please", "!", "Bye", "!"]
# ::lemmas ["greeting", "!", "can", "you", "for", "once", "time", "be", "polite", ",", "please", "!", "bye", "!"]
(c23-2 / multi-sentence
       :snt1 (c23-5 / greet-01
                    :ARG0 (c23-3 / i)
                    :ARG1 (c23-0 / you)
                    :mode expressive)
       :snt2 (c23-4 / possible-01
                    :ARG1 (c23-6 / polite-01
                                 :ARG0 c23-0
                                 :mod (c23-1 / for-once)
                                 :mode imperative)
                    :mode imperative
                    :polite +))

# ::snt and blocking me just confirms what a little shithouse u are!
# ::tokens ["and", "blocking", "me", "just", "confirms", "what", "a", "little", "shithouse", "u", "are", "!"]
# ::lemmas ["and", "block", "i", "just", "confirm", "what", "a", "little", "shithouse", "u", "be", "!"]
(c24-7 / and
       :op2 (c24-5 / confirm-01
                   :ARG0 (c24-3 / block-01
                                :ARG0 (c24-1 / you)
                                :ARG1 (c24-4 / i))
                   :ARG1 (c24-6 / shithouse
                                :mod (c24-2 / little)
                                :domain c24-1)
                   :mod (c24-0 / just)))

# ::snt if you say so can't you use the Queens English or would that be to much of a stretch of your IQ : )
# ::tokens ["if", "you", "say", "so", "ca", "n't", "you", "use", "the", "Queens", "English", "or", "would", "that", "be", "to", "much", "of", "a", "stretch", "of", "your", "IQ", ":", ")"]
# ::lemmas ["if", "you", "say", "so", "can", "not", "you", "use", "the", "Queens", "English", "or", "would", "that", "be", "to", "much", "of", "a", "stretch", "of", "your", "iq", ":", ")"]
(c25-5 / or
       :op1 (c25-10 / possible-01
                    :ARG1 (c25-3 / use-01
                                 :ARG0 (c25-0 / you)
                                 :ARG1 (c25-1 / language
                                              :name (c25-9 / name
                                                           :op1 "Queens"
                                                           :op2 "English")))
                    :condition (c25-11 / say-01
                                       :ARG0 c25-0
                                       :ARG1 (c25-6 / so))
                    :polarity -)
       :op2 (c25-2 / stretch-01
                   :ARG1 (c25-7 / quotient
                                :quant-of (c25-8 / intelligent-01
                                                 :ARG1 c25-0))
                   :ARG2 (c25-4 / much)
                   :polarity (c25-12 / amr-unknown)
                   :condition c25-11))

# ::snt Exactly. X :^)
# ::tokens ["Exactly", ".", "X", ":", "^", ")"]
# ::lemmas ["exactly", ".", "x", ":", "^", ")"]
(c26-1 / multi-sentence
       :snt1 (c26-0 / exact)
       :snt2 (c26-2 / emoticon
                    :value "X:"))

# ::snt God bless him and comfort his loved ones.
# ::tokens ["God", "bless", "him", "and", "comfort", "his", "loved", "ones", "."]
# ::lemmas ["God", "bless", "he", "and", "comfort", "his", "loved", "one", "."]
(c27-7 / and
       :op1 (c27-2 / bless-01
                   :ARG0 (c27-4 / person
                                :name (c27-3 / name
                                             :op1 "God"))
                   :ARG1 (c27-0 / he))
       :op2 (c27-5 / comfort-01
                   :ARG0 c27-4
                   :ARG1 (c27-6 / person
                                :ARG1-of (c27-1 / love-01
                                                :ARG0 c27-0))))

# ::snt too
# ::tokens ["too"]
# ::lemmas ["too"]
(c28-0 / too)

# ::snt endowed but I'm in London he's in Liverpool : ))) aw why did you block him not man enough to debate : )))
# ::tokens ["endowed", "but", "I", "'m", "in", "London", "he", "'s", "in", "Liverpool", ":", ")", ")", ")", "aw", "why", "did", "you", "block", "him", "not", "man", "enough", "to", "debate", ":", ")", ")", ")"]
# ::lemmas ["endow", "but", "i", "be", "in", "London", "he", "be", "in", "Liverpool", ":", ")", ")", ")", "aw", "why", "do", "you", "block", "he", "not", "man", "enough", "to", "debate", ":", ")", ")", ")"]
(c29-0 / multi-sentence
       :snt1 (c29-9 / endow-01
                    :concession-of (c29-7 / be-located-at-91
                                          :ARG1 (c29-6 / he)
                                          :ARG2 (c29-18 / city
                                                        :name (c29-10 / name
                                                                      :op1 "London"))))
       :snt2 (c29-13 / be-located-at-91
                     :ARG1 (c29-5 / he)
                     :ARG2 (c29-2 / city
                                  :name (c29-17 / name
                                                :op1 "Liverpool")))
       :snt3 (c29-4 / aw
                    :mode expressive)
       :snt4 (c29-19 / block-01
                     :ARG0 (c29-16 / you)
                     :ARG1 (c29-1 / he
                                  :mod (c29-11 / man
                                               :ARG2-of (c29-14 / have-degree-91
                                                                :ARG1 c29-1
                                                                :ARG3 (c29-8 / enough)
                                                                :ARG6 (c29-3 / debate-01
                                                                             :ARG0 c29-1))
                                               :polarity -))
                     :ARG1-of (c29-15 / cause-01
                                      :ARG0 (c29-12 / amr-unknown))))

# ::snt ignorant pea sized brain making up false accusations
# ::tokens ["ignorant", "pea", "sized", "brain", "making", "up", "false", "accusations"]
# ::lemmas ["ignorant", "pea", "sized", "brain", "make", "up", "false", "accusation"]
(c30-1 / make-up-10
       :ARG0 (c30-2 / brain
                    :ARG1-of (c30-5 / size-01
                                    :ARG2 (c30-4 / pea))
                    :ARG0-of (c30-3 / intimidate-01))
       :ARG1 (c30-6 / accuse-01
                    :mod (c30-0 / false)))

# ::snt the UK is messed up because of bigoted ignorant uneducated morons like you spreading hatred sad sack : )
# ::tokens ["the", "UK", "is", "messed", "up", "because", "of", "bigoted", "ignorant", "uneducated", "morons", "like", "you", "spreading", "hatred", "sad", "sack", ":", ")"]
# ::lemmas ["the", "UK", "be", "mess", "up", "because", "of", "bigote", "ignorant", "uneducated", "moron", "like", "you", "spread", "hatred", "sad", "sack", ":", ")"]
(c31-2 / mess-up-02
       :ARG0 (c31-11 / spread-03
                     :ARG0 (c31-8 / moron
                                  :ARG1-of (c31-6 / ignorant-02)
                                  :mod (c31-3 / bigot)
                                  :ARG1-of c31-6)
                     :ARG1-of (c31-9 / resemble-01
                                     :ARG2 (c31-1 / you)))
       :ARG1 (c31-0 / hatred)
       :ARG1 (c31-10 / country
                     :name (c31-7 / name
                                  :op1 "UK"))
       :mod (c31-4 / sad)
       :mod (c31-5 / emoticon
                   :value ":)"))

# ::snt Congrats on your tweet!
# ::tokens ["Congrats", "on", "your", "tweet", "!"]
# ::lemmas ["congrat", "on", "your", "tweet", "!"]
(c32-2 / congratulate-01
       :ARG1 (c32-1 / you)
       :ARG2 (c32-0 / tweet-01
                    :ARG0 c32-1))

# ::snt Blocking the lot of you awful people. My god, you're all as depraved as each other.
# ::tokens ["Blocking", "the", "lot", "of", "you", "awful", "people", ".", "My", "god", ",", "you", "'re", "all", "as", "depraved", "as", "each", "other", "."]
# ::lemmas ["block", "the", "lot", "of", "you", "awful", "people", ".", "my", "god", ",", "you", "be", "all", "as", "depraved", "as", "each", "other", "."]
(c33-3 / multi-sentence
       :snt1 (c33-14 / shock-01
                     :ARG1 (c33-9 / person
                                  :quant (c33-2 / lot)
                                  :ARG1-of (c33-8 / include-91
                                                  :ARG2 (c33-1 / you))
                                  :mod (c33-16 / awful)))
       :snt2 (c33-0 / have-degree-91
                    :ARG1 (c33-13 / you
                                  :mod (c33-7 / all))
                    :ARG2 (c33-10 / depraved)
                    :ARG3 (c33-6 / equal)
                    :ARG4 (c33-15 / person
                                  :mod (c33-5 / other
                                              :mod (c33-4 / each)))
                    :mod (c33-11 / god
                                 :poss (c33-12 / i))))

# ::snt take me out of this.
# ::tokens ["take", "me", "out", "of", "this", "."]
# ::lemmas ["take", "i", "out", "of", "this", "."]
(c34-1 / take-out-11
       :ARG0 (c34-0 / you)
       :ARG1 (c34-2 / i)
       :source (c34-3 / this)
       :mode imperative)

# ::snt I suggest you read the Quran with a Muslim sheikh for translation or get an actual one unlike the fake
# ::tokens ["I", "suggest", "you", "read", "the", "Quran", "with", "a", "Muslim", "sheikh", "for", "translation", "or", "get", "an", "actual", "one", "unlike", "the", "fake"]
# ::lemmas ["i", "suggest", "you", "read", "the", "Quran", "with", "a", "Muslim", "sheikh", "for", "translation", "or", "get", "an", "actual", "one", "unlike", "the", "fake"]
(c35-13 / suggest-01
        :ARG0 (c35-7 / i)
        :ARG1 (c35-4 / or
                     :op1 (c35-11 / read-01
                                  :ARG0 (c35-0 / you)
                                  :ARG1 (c35-3 / book
                                               :name (c35-9 / name
                                                            :op1 "Quran"))
                                  :accompanier (c35-5 / sheikh
                                                      :mod (c35-8 / religious-group
                                                                  :name (c35-10 / name
                                                                                :op1 "Muslim")))
                                  :purpose (c35-14 / translate-01
                                                   :ARG1 c35-3))
                     :op2 (c35-12 / get-01
                                  :ARG0 c35-0
                                  :ARG1 (c35-1 / one
                                               :ARG1-of (c35-15 / actual-02)
                                               :ARG1-of (c35-6 / resemble-01
                                                               :ARG2 (c35-2 / fake-02)
                                                               :polarity -))))
        :ARG2 c35-0)

# ::snt Check tweet dates.. probably tweets between prison sentences. lol
# ::tokens ["Check", "tweet", "dates", "..", "probably", "tweets", "between", "prison", "sentences", ".", "lol"]
# ::lemmas ["check", "tweet", "date", "..", "probably", "tweet", "between", "prison", "sentence", ".", "lol"]
(c36-2 / multi-sentence
       :snt1 (c36-6 / check-01
                    :ARG0 (c36-0 / you)
                    :ARG1 (c36-5 / date
                                 :time-of (c36-10 / tweet-02))
                    :mode imperative)
       :snt2 (c36-8 / tweet-02
                    :mod (c36-4 / probable)
                    :time (c36-3 / between
                                 :op1 (c36-9 / sentence-01
                                             :ARG2 (c36-11 / prison)))
                    :ARG2-of (c36-1 / laugh-01
                                    :manner (c36-7 / loud)
                                    :mode expressive)))

# ::snt C policiers n'taient probablement pas assez arms contre ces criminels !
# ::tokens ["C", "policiers", "n'taient", "probablement", "pas", "assez", "arms", "contre", "ces", "criminels", "!"]
# ::lemmas ["c", "policier", "n'taient", "probablement", "pas", "assez", "arm", "contre", "ce", "criminel", "!"]
(c37-1 / multi-sentence
       :snt1 (c37-0 / have-polarity-91
                    :ARG1 (c37-6 / case-03
                                 :ARG0 (c37-4 / person
                                              :ARG0-of (c37-10 / have-org-role-91
                                                               :ARG1 (c37-9 / police)))
                                 :mod (c37-2 / probable))
                    :ARG2 -)
       :snt2 (c37-5 / case-03
                    :ARG1 (c37-8 / arm)
                    :mod (c37-3 / as-sez))
       :snt3 (c37-7 / case-03
                    :ARG1 (c37-11 / criminels)))

# ::snt no one man woman me I get everything I need from my hubby don't need to go else where I'm sure Chris is very well
# ::tokens ["no", "one", "man", "woman", "me", "I", "get", "everything", "I", "need", "from", "my", "hubby", "do", "n't", "need", "to", "go", "else", "where", "I", "'m", "sure", "Chris", "is", "very", "well"]
# ::lemmas ["no", "one", "man", "woman", "i", "i", "get", "everything", "i", "need", "from", "my", "hubby", "do", "not", "need", "to", "go", "else", "where", "i", "be", "sure", "Chris", "be", "very", "well"]
(c38-0 / multi-sentence
       :snt1 (c38-13 / man
                     :mod (c38-12 / no-one))
       :snt2 (c38-18 / cause-01
                     :ARG0 (c38-14 / get-01
                                   :ARG0 (c38-16 / i)
                                   :ARG1 (c38-11 / everything
                                                 :ARG1-of (c38-17 / need-01
                                                                  :ARG0 c38-16))
                                   :ARG2 (c38-3 / person
                                                :ARG0-of (c38-9 / have-rel-role-91
                                                                :ARG1 c38-16
                                                                :ARG2 (c38-8 / hubby))))
                     :ARG1 (c38-1 / need-01
                                  :ARG0 c38-16
                                  :ARG1 (c38-4 / go-02
                                               :ARG0 c38-16
                                               :ARG4 (c38-10 / else
                                                             :location-of (c38-6 / sure-02
                                                                                 :ARG0 c38-16
                                                                                 :ARG1 (c38-15 / well-09
                                                                                               :ARG1 (c38-7 / person
                                                                                                            :name (c38-2 / name
                                                                                                                         :op1 "Chris"))
                                                                                               :degree (c38-5 / very)))))
                                  :polarity -)))

# ::snt go to middle east and see your people being bought and sold like they are vegetables.
# ::tokens ["go", "to", "middle", "east", "and", "see", "your", "people", "being", "bought", "and", "sold", "like", "they", "are", "vegetables", "."]
# ::lemmas ["go", "to", "middle", "east", "and", "see", "your", "people", "be", "buy", "and", "sell", "like", "they", "be", "vegetable", "."]
(c39-11 / and
        :op1 (c39-9 / go-02
                    :ARG0 (c39-1 / you)
                    :ARG4 (c39-0 / world-region
                                 :name (c39-5 / name
                                              :op1 "Middle"
                                              :op2 "East"))
                    :mode imperative)
        :op2 (c39-10 / see-01
                     :ARG0 c39-1
                     :ARG1 (c39-4 / and
                                  :op1 (c39-2 / buy-01
                                              :ARG1 (c39-7 / person
                                                           :poss c39-1))
                                  :op2 (c39-3 / sell-01
                                              :ARG1 c39-7)
                                  :manner (c39-8 / resemble-01
                                                 :ARG2 (c39-6 / vegetable
                                                              :domain c39-7)))
                     :mode imperative))

# ::snt loool stop being such a twat
# ::tokens ["loool", "stop", "being", "such", "a", "twat"]
# ::lemmas ["loool", "stop", "be", "such", "a", "twat"]
(c40-3 / stop-01
       :ARG0 (c40-0 / you
                    :mod (c40-1 / loool))
       :ARG1 (c40-4 / twat
                    :mod (c40-2 / such)
                    :domain c40-0)
       :mode imperative)

# ::snt your wasting your time, he will just block you when he hasn't got a come back!
# ::tokens ["your", "wasting", "your", "time", ",", "he", "will", "just", "block", "you", "when", "he", "has", "n't", "got", "a", "come", "back", "!"]
# ::lemmas ["your", "waste", "your", "time", ",", "he", "will", "just", "block", "you", "when", "he", "have", "not", "get", "a", "come", "back", "!"]
(c41-8 / and
       :op1 (c41-1 / waste-01
                   :ARG0 (c41-2 / you)
                   :ARG1 (c41-7 / time
                                :poss c41-2))
       :op2 (c41-4 / block-01
                   :ARG0 (c41-0 / he)
                   :ARG1 c41-2
                   :mod (c41-3 / just)
                   :time (c41-5 / come-01
                                :ARG1 c41-0
                                :direction (c41-6 / back)
                                :polarity -)))

# ::snt Beautiful heroes see you on that golden journey so I can thank you for your service
# ::tokens ["Beautiful", "heroes", "see", "you", "on", "that", "golden", "journey", "so", "I", "can", "thank", "you", "for", "your", "service"]
# ::lemmas ["beautiful", "hero", "see", "you", "on", "that", "golden", "journey", "so", "i", "can", "thank", "you", "for", "your", "service"]
(c42-10 / see-01
        :ARG0 (c42-0 / hero
                     :ARG1-of (c42-3 / beautiful-02))
        :ARG1 (c42-1 / you)
        :time (c42-2 / journey-01
                     :ARG0 c42-0
                     :mod (c42-11 / that)
                     :mod (c42-8 / golden))
        :ARG0-of (c42-7 / cause-01
                        :ARG1 (c42-6 / possible-01
                                     :ARG1 (c42-9 / thank-01
                                                  :ARG0 (c42-5 / i)
                                                  :ARG1 c42-1
                                                  :ARG2 (c42-4 / serve-01
                                                               :ARG0 c42-1)))))

# ::snt And yet this distinction rarely seems to matter anymore. Unsurprisingly.
# ::tokens ["And", "yet", "this", "distinction", "rarely", "seems", "to", "matter", "anymore", ".", "Unsurprisingly", "."]
# ::lemmas ["and", "yet", "this", "distinction", "rarely", "seem", "to", "matter", "anymore", ".", "unsurprisingly", "."]
(c43-1 / multi-sentence
       :snt1 (c43-9 / and
                    :op2 (c43-7 / seem-01
                                :ARG1 (c43-4 / matter-01
                                             :ARG1 (c43-5 / distinguish-01
                                                          :mod (c43-8 / this))
                                             :time (c43-3 / anymore)
                                             :ARG1-of (c43-6 / rare-02))
                                :mod (c43-0 / yet)))
       :snt2 (c43-2 / surprise-01
                    :polarity -))

# ::snt u believe your are a coloured nation your real Fathers from
# ::tokens ["u", "believe", "your", "are", "a", "coloured", "nation", "your", "real", "Fathers", "from"]
# ::lemmas ["u", "believe", "your", "be", "a", "coloured", "nation", "your", "real", "father", "from"]
(c44-3 / believe-01
       :ARG0 (c44-1 / you)
       :ARG1 (c44-4 / nation
                    :ARG1-of (c44-7 / color-01)
                    :source-of (c44-5 / person
                                      :ARG0-of (c44-0 / have-rel-role-91
                                                      :ARG1 c44-1
                                                      :ARG2 (c44-2 / father))
                                      :ARG1-of (c44-6 / real-04))
                    :domain c44-1))

# ::snt Calling people cunts proves someone doesn't have peace within themselves.
# ::tokens ["Calling", "people", "cunts", "proves", "someone", "does", "n't", "have", "peace", "within", "themselves", "."]
# ::lemmas ["call", "people", "cunt", "prove", "someone", "do", "not", "have", "peace", "within", "themselves", "."]
(c45-4 / prove-01
       :ARG0 (c45-5 / call-01
                    :ARG1 (c45-8 / person)
                    :ARG2 (c45-3 / person
                                 :ARG0-of (c45-0 / have-rel-role-91
                                                 :ARG2 (c45-9 / aunt))))
       :ARG1 (c45-2 / have-03
                    :ARG0 (c45-6 / someone)
                    :ARG1 (c45-7 / peace)
                    :mod (c45-1 / within
                                :op1 c45-6)
                    :polarity -))

# ::snt we pay your benefits moron : )
# ::tokens ["we", "pay", "your", "benefits", "moron", ":", ")"]
# ::lemmas ["we", "pay", "your", "benefit", "moron", ":", ")"]
(c46-5 / say-01
       :ARG0 (c46-3 / i)
       :ARG1 (c46-4 / pay-01
                    :ARG0 (c46-0 / we)
                    :ARG1 (c46-2 / benefit-01
                                 :ARG1 (c46-1 / moron
                                              :ARG2-of c46-5))))

# ::snt .
# ::tokens ["."]
# ::lemmas ["."]
(c47-0 / amr-empty)

# ::snt who do you think will be risking their lives for scum like you : ) can a woman be a prick ???
# ::tokens ["who", "do", "you", "think", "will", "be", "risking", "their", "lives", "for", "scum", "like", "you", ":", ")", "can", "a", "woman", "be", "a", "prick", "?", "?", "?"]
# ::lemmas ["who", "do", "you", "think", "will", "be", "risk", "their", "life", "for", "scum", "like", "you", ":", ")", "can", "a", "woman", "be", "a", "prick", "?", "?", "?"]
(c48-3 / multi-sentence
       :snt1 (c48-9 / think-01
                    :ARG0 (c48-0 / you)
                    :ARG1 (c48-6 / risk-01
                                 :ARG0 (c48-11 / amr-unknown)
                                 :ARG2 (c48-2 / life
                                              :poss (c48-8 / scum
                                                           :example (c48-7 / you)))))
       :snt2 (c48-5 / possible-01
                    :ARG1 (c48-10 / prick
                                  :domain (c48-1 / woman))
                    :polarity (c48-4 / amr-unknown)))

# ::snt Or is it toni
# ::tokens ["Or", "is", "it", "toni"]
# ::lemmas ["or", "be", "it", "toni"]
(c49-0 / or
       :op2 (c49-1 / have-mod-91
                   :ARG1 (c49-3 / it)
                   :ARG2 (c49-2 / toni)))

# ::snt oh but we do poppet : ))
# ::tokens ["oh", "but", "we", "do", "poppet", ":", ")", ")"]
# ::lemmas ["oh", "but", "we", "do", "poppet", ":", ")", ")"]
(c50-3 / contrast-01
       :ARG2 (c50-2 / poppet
                    :domain (c50-1 / we))
       :mod (c50-0 / oh
                   :mode expressive))
