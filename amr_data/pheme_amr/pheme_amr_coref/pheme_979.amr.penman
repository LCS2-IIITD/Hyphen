# ::snt Will not be Russia and Putin - no weapons terrorists would not be the innocent victims of people
# ::tokens ["Will", "not", "be", "Russia", "and", "Putin", "-", "no", "weapons", "terrorists", "would", "not", "be", "the", "innocent", "victims", "of", "people"]
# ::lemmas ["will", "not", "be", "Russia", "and", "Putin", "-", "no", "weapon", "terrorist", "would", "not", "be", "the", "innocent", "victim", "of", "people"]
(c1-6 / contrast-01
      :ARG1 (c1-10 / and
                   :op1 (c1-5 / country
                              :name (c1-2 / name
                                          :op1 "Russia"))
                   :op2 (c1-4 / person
                              :name (c1-3 / name
                                          :op1 "Putin"))
                   :polarity -)
      :ARG2 (c1-7 / victim
                  :ARG1-of (c1-1 / innocent-01)
                  :domain (c1-8 / terrorist
                                :mod (c1-0 / weapon
                                           :polarity -))
                  :poss (c1-9 / person)
                  :polarity -))

# ::snt Pt. : Seems like driver signals x w/hands sum1 as running back to car. Signal that says"its done,lets go"
# ::tokens ["Pt", ".", ":", "Seems", "like", "driver", "signals", "x", "w", "/", "hands", "sum1", "as", "running", "back", "to", "car", ".", "Signal", "that", "says\"its", "done", ",", "lets", "go", "\""]
# ::lemmas ["Pt", ".", ":", "seem", "like", "driver", "signal", "x", "w", "/", "hand", "sum1", "as", "run", "back", "to", "car", ".", "Signal", "that", "says\"it", "do", ",", "let", "go", "\""]
(c2-0 / multi-sentence
      :snt1 (c2-4 / say-01
                  :ARG0 (c2-2 / person
                              :name (c2-12 / name
                                           :op1 "Pt."))
                  :ARG1 (c2-11 / seem-01
                               :ARG1 (c2-19 / signal-07
                                            :ARG0 (c2-5 / person
                                                        :ARG0-of (c2-3 / drive-01))
                                            :mod (c2-10 / slash
                                                        :op1 (c2-20 / x)
                                                        :op2 (c2-7 / hand))
                                            :prep-as (c2-13 / run-02
                                                            :ARG0 c2-5
                                                            :direction (c2-21 / car)
                                                            :direction (c2-9 / back)))))
      :snt2 (c2-18 / signal-07
                   :ARG0-of (c2-1 / say-01
                                  :ARG1 (c2-6 / and
                                              :op1 (c2-17 / be-done-08
                                                          :ARG1 (c2-16 / it))
                                              :op2 (c2-8 / let-01
                                                         :ARG1 (c2-14 / go-02
                                                                      :ARG0 (c2-15 / we)))))))

# ::snt if Paris would allow it's citizens to carry firearms maybe someone could have shot him, instead of shooting film.
# ::tokens ["if", "Paris", "would", "allow", "it", "'s", "citizens", "to", "carry", "firearms", "maybe", "someone", "could", "have", "shot", "him", ",", "instead", "of", "shooting", "film", "."]
# ::lemmas ["if", "Paris", "would", "allow", "it", "be", "citizen", "to", "carry", "firearm", "maybe", "someone", "could", "have", "shoot", "he", ",", "instead", "of", "shoot", "film", "."]
(c3-7 / possible-01
      :ARG1 (c3-11 / shoot-02
                   :ARG0 (c3-3 / someone)
                   :ARG1 (c3-0 / he)
                   :ARG1-of (c3-4 / instead-of-91
                                  :ARG2 (c3-1 / shoot-02
                                              :ARG0 c3-3
                                              :ARG2 (c3-2 / film))))
      :condition (c3-12 / allow-01
                        :ARG0 (c3-9 / city
                                    :name (c3-6 / name
                                                :op1 "Paris"))
                        :ARG1 (c3-8 / carry-01
                                    :ARG0 (c3-10 / citizen
                                                 :poss c3-9)
                                    :ARG1 (c3-5 / firearm))))

# ::snt You disrespect someone, or a group long enough, you may make them angry .
# ::tokens ["You", "disrespect", "someone", ",", "or", "a", "group", "long", "enough", ",", "you", "may", "make", "them", "angry", "."]
# ::lemmas ["you", "disrespect", "someone", ",", "or", "a", "group", "long", "enough", ",", "you", "may", "make", "they", "angry", "."]
(c4-6 / possible-01
      :ARG1 (c4-3 / make-02
                  :ARG0 (c4-1 / you)
                  :ARG1 (c4-10 / anger-01
                               :ARG0 c4-1
                               :ARG1 (c4-4 / or
                                           :op1 (c4-9 / someone)
                                           :op2 (c4-8 / group))))
      :condition (c4-7 / disrespect-01
                       :ARG0 c4-1
                       :ARG1 c4-4
                       :ARG1-of (c4-2 / long-03
                                      :ARG2-of (c4-0 / have-degree-91
                                                     :ARG1 c4-7
                                                     :ARG3 (c4-5 / enough)))))

# ::snt Part : shoe from street(same as his)&amp; gets in car.Why an xtra identical shoe by car?Others involved on scene coordinating maybe?
# ::tokens ["Part", ":", "shoe", "from", "street(same", "as", "his)&amp", ";", "gets", "in", "car", ".", "Why", "an", "xtra", "identical", "shoe", "by", "car?Others", "involved", "on", "scene", "coordinating", "maybe", "?"]
# ::lemmas ["part", ":", "shoe", "from", "street(same", "as", "his)&amp", ";", "get", "in", "car", ".", "why", "an", "xtra", "identical", "shoe", "by", "car?other", "involve", "on", "scene", "coordinate", "maybe", "?"]
(c5-1 / multi-sentence
      :snt1 (c5-3 / part
                  :snt2 (c5-14 / get-05
                               :ARG1 (c5-5 / shoe
                                           :source (c5-11 / street)
                                           :ARG1-of (c5-21 / same-01
                                                           :ARG2 (c5-7 / and
                                                                       :op1 (c5-10 / shoe
                                                                                   :poss (c5-9 / he))
                                                                       :op2 (c5-15 / amp))))
                               :ARG2 (c5-23 / car)))
      :snt3 (c5-4 / cause-01
                  :ARG0 (c5-13 / amr-unknown)
                  :ARG1 (c5-20 / shoe
                               :ARG1-of (c5-16 / identical-01
                                               :ARG2 (c5-2 / shoe
                                                           :poss (c5-18 / company
                                                                        :name (c5-12 / name
                                                                                     :op1 "Ixtra"))))
                               :manner (c5-19 / car)))
      :snt4 (c5-6 / possible-01
                  :ARG1 (c5-0 / coordinate-01
                              :ARG0 (c5-22 / other
                                           :ARG1-of (c5-17 / involve-01
                                                           :ARG2 (c5-8 / scene))))))

# ::snt Pt. : Also,they r dressed alike except shoes.In fact,passenger picks up...
# ::tokens ["Pt", ".", ":", "Also", ",", "they", "r", "dressed", "alike", "except", "shoes", ".", "In", "fact", ",", "passenger", "picks", "up", "..."]
# ::lemmas ["Pt", ".", ":", "also", ",", "they", "r", "dress", "alike", "except", "shoe", ".", "in", "fact", ",", "passenger", "pick", "up", "..."]
(c6-6 / say-01
      :ARG1 (c6-5 / dress-01
                  :ARG1 (c6-7 / they)
                  :ARG2 (c6-8 / alike-05
                              :ARG1 c6-7
                              :ARG2 (c6-0 / shoe))
                  :mod (c6-2 / also)
                  :ARG2-of (c6-1 / except-01
                                 :ARG1 c6-0))
      :ARG2 (c6-4 / person
                  :name (c6-3 / name
                              :op1 "Pt.")))
