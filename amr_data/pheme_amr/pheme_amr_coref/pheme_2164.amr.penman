# ::snt by any chance does that printing business actually print the Charlie Hebdo newspaper?
# ::tokens ["by", "any", "chance", "does", "that", "printing", "business", "actually", "print", "the", "Charlie", "Hebdo", "newspaper", "?"]
# ::lemmas ["by", "any", "chance", "do", "that", "print", "business", "actually", "print", "the", "Charlie", "Hebdo", "newspaper", "?"]
(c1-4 / print-01
      :ARG0 (c1-0 / business
                  :ARG0-of (c1-7 / print-01))
      :ARG1 (c1-2 / newspaper
                  :name (c1-3 / name
                              :op1 "Charlie"
                              :op2 " Hebdo"))
      :polarity (c1-8 / amr-unknown)
      :ARG1-of (c1-1 / actual-02)
      :ARG1-of (c1-6 / chance-02
                     :mod (c1-5 / any)))

# ::snt there's an aldi fucking everywhere these days
# ::tokens ["there", "'s", "an", "aldi", "fucking", "everywhere", "these", "days"]
# ::lemmas ["there", "be", "an", "aldi", "fucking", "everywhere", "these", "days"]
(c2-1 / be-located-at-91
      :ARG1 (c2-5 / aldi)
      :ARG2 (c2-2 / everywhere)
      :time (c2-3 / day
                  :mod (c2-4 / this))
      :mod (c2-0 / fucking
                 :mode expressive))

# ::snt bore off nobhead/knobhead /yourchoice
# ::tokens ["bore", "off", "nobhead", "/", "knobhead", "/yourchoice"]
# ::lemmas ["bore", "off", "nobhead", "/", "knobhead", "/yourchoice"]
(c3-2 / bore-00
      :ARG0 (c3-1 / you)
      :source (c3-3 / or
                    :op1 (c3-0 / head
                               :mod (c3-4 / nobhead))
                    :op2 (c3-7 / head
                               :mod (c3-6 / knobhead))
                    :op3 (c3-5 / choose-01
                               :ARG0 c3-1)))

# ::snt who are you a theasaurus?
# ::tokens ["who", "are", "you", "a", "theasaurus", "?"]
# ::lemmas ["who", "be", "you", "a", "theasaurus", "?"]
(c4-1 / theasaurus
      :domain (c4-0 / you))

# ::snt least they're near an Aldi
# ::tokens ["least", "they", "'re", "near", "an", "Aldi"]
# ::lemmas ["least", "they", "be", "near", "an", "Aldi"]
(c5-1 / near-02
      :ARG1 (c5-3 / they)
      :ARG2 (c5-0 / facility
                  :name (c5-2 / name
                              :op1 "Aldi"))
      :mod (c5-4 / at-least))

# ::snt you're in the news again bro
# ::tokens ["you", "'re", "in", "the", "news", "again", "bro"]
# ::lemmas ["you", "be", "in", "the", "news", "again", "bro"]
(c7-2 / be-located-at-91
      :ARG1 (c7-1 / you
                  :ARG0-of (c7-0 / have-rel-role-91
                                 :ARG2 (c7-4 / bro)))
      :ARG2 (c7-3 / news)
      :mod (c7-5 / again))

# ::snt well said.
# ::tokens ["well", "said", "."]
# ::lemmas ["well", "say", "."]
(c8-0 / say-01
      :manner (c8-1 / good-02))

# ::snt well said! The media can help here.
# ::tokens ["well", "said", "!", "The", "media", "can", "help", "here", "."]
# ::lemmas ["well", "say", "!", "the", "medium", "can", "help", "here", "."]
(c9-2 / multi-sentence
      :snt1 (c9-5 / say-01
                  :manner (c9-1 / well-09))
      :snt2 (c9-3 / possible-01
                  :ARG1 (c9-0 / help-01
                              :ARG0 (c9-4 / media)
                              :location (c9-6 / here))))

# ::snt Don't deny them their just reward, expadite dispatch ....., there's a small hitch though ..
# ::tokens ["Do", "n't", "deny", "them", "their", "just", "reward", ",", "expadite", "dispatch", ".....", ",", "there", "'s", "a", "small", "hitch", "though", ".."]
# ::lemmas ["do", "not", "deny", "they", "their", "just", "reward", ",", "expadite", "dispatch", ".....", ",", "there", "be", "a", "small", "hitch", "though", ".."]
(c10-4 / multi-sentence
       :snt1 (c10-7 / deny-01
                    :ARG0 (c10-1 / you)
                    :ARG1 (c10-6 / reward-01
                                 :ARG0 c10-1
                                 :ARG1 (c10-9 / they)
                                 :mod (c10-0 / just))
                    :ARG2 c10-9
                    :polarity -
                    :mode imperative)
       :snt2 (c10-2 / dispatch-01
                    :mod (c10-5 / expadite))
       :snt3 (c10-3 / have-concession-91
                    :ARG1 (c10-10 / hitch
                                  :mod (c10-8 / small))))

# ::snt Stick a scaffolding pole up their arses and set it in the ground with a camera on their faces to live-stream them slowly dying
# ::tokens ["Stick", "a", "scaffolding", "pole", "up", "their", "arses", "and", "set", "it", "in", "the", "ground", "with", "a", "camera", "on", "their", "faces", "to", "live", "-", "stream", "them", "slowly", "dying"]
# ::lemmas ["stick", "a", "scaffolding", "pole", "up", "their", "arsis", "and", "set", "it", "in", "the", "ground", "with", "a", "camera", "on", "their", "face", "to", "live", "-", "stream", "they", "slowly", "die"]
(c11-13 / and
        :op1 (c11-11 / stick-01
                     :ARG0 (c11-12 / they
                                   :part (c11-6 / ass))
                     :ARG1 (c11-7 / pole
                                  :ARG0-of (c11-5 / scaffold-01))
                     :ARG2 c11-6
                     :direction (c11-2 / up))
        :op2 (c11-0 / set-01
                    :ARG0 c11-12
                    :ARG1 c11-7
                    :ARG2 (c11-10 / ground)
                    :manner (c11-9 / camera
                                   :location (c11-1 / face)
                                   :purpose (c11-3 / live-stream-00
                                                   :ARG0 c11-12
                                                   :ARG1 (c11-8 / die-01
                                                                :ARG1 c11-12
                                                                :ARG1-of (c11-4 / slow-01))))))

# ::snt why aint the reporyers walking accross the grass to get closer instead od tryna get past the police?
# ::tokens ["why", "ai", "nt", "the", "reporyers", "walking", "accross", "the", "grass", "to", "get", "closer", "instead", "od", "tryna", "get", "past", "the", "police", "?"]
# ::lemmas ["why", "be", "not", "the", "reporyer", "walk", "accross", "the", "grass", "to", "get", "close", "instead", "od", "tryna", "get", "past", "the", "police", "?"]
(c12-9 / cause-01
       :ARG0 (c12-15 / amr-unknown)
       :ARG1 (c12-1 / walk-01
                    :ARG0 (c12-7 / person
                                 :ARG0-of (c12-8 / represent-01))
                    :ARG2 (c12-4 / across
                                 :op1 (c12-10 / grass))
                    :purpose (c12-11 / get-03
                                     :ARG1 c12-7
                                     :ARG2 (c12-12 / close-10
                                                   :ARG1 c12-7
                                                   :ARG2-of (c12-0 / have-degree-91
                                                                   :ARG1 c12-7
                                                                   :ARG3 (c12-2 / more))))
                    :ARG1-of (c12-5 / instead-of-91
                                    :ARG2 (c12-13 / try-01
                                                  :ARG0 c12-7
                                                  :ARG1 (c12-6 / get-05
                                                               :ARG1 c12-7
                                                               :ARG2 (c12-14 / pass-by-17
                                                                             :ARG0 c12-7
                                                                             :ARG1 (c12-3 / police)))))
                    :polarity -))

# ::snt yes!!!!
# ::tokens ["yes", "!", "!", "!", "!"]
# ::lemmas ["yes", "!", "!", "!", "!"]
(c13-0 / yes
       :mode expressive)

# ::snt Better than Tesco's though?
# ::tokens ["Better", "than", "Tesco", "'s", "though", "?"]
# ::lemmas ["well", "than", "Tesco", "'s", "though", "?"]
(c14-0 / have-concession-91
       :ARG2 (c14-4 / good-02
                    :ARG2-of (c14-6 / have-degree-91
                                    :ARG3 (c14-1 / more)
                                    :ARG4 (c14-3 / company
                                                 :name (c14-2 / name
                                                              :op1 "Tesco")))
                    :polarity (c14-5 / amr-unknown)))

# ::snt now put it on live tv news!!!!
# ::tokens ["now", "put", "it", "on", "live", "tv", "news", "!", "!", "!", "!"]
# ::lemmas ["now", "put", "it", "on", "live", "tv", "news", "!", "!", "!", "!"]
(c16-5 / put-03
       :ARG0 (c16-0 / you)
       :ARG1 (c16-2 / it)
       :ARG2 (c16-3 / news
                    :mod (c16-6 / television
                                :ARG1-of (c16-1 / live-01)))
       :time (c16-4 / now)
       :mode imperative)

# ::snt coppers don't want to kill them.
# ::tokens ["coppers", "do", "n't", "want", "to", "kill", "them", "."]
# ::lemmas ["copper", "do", "not", "want", "to", "kill", "they", "."]
(c17-1 / want-01
       :ARG0 (c17-2 / cop)
       :ARG1 (c17-3 / kill-01
                    :ARG0 c17-2
                    :ARG1 (c17-0 / they))
       :polarity -)

# ::snt Here is an so called Secular Indian Parliamentarian's thought.This party has ruled us for years
# ::tokens ["Here", "is", "an", "so", "called", "Secular", "Indian", "Parliamentarian", "'s", "thought", ".", "This", "party", "has", "ruled", "us", "for", "years"]
# ::lemmas ["here", "be", "an", "so", "call", "Secular", "Indian", "Parliamentarian", "'s", "thought", ".", "this", "party", "have", "rule", "we", "for", "years"]
(c18-13 / think-01
        :ARG0 (c18-7 / person
                     :mod (c18-9 / country
                                 :name (c18-5 / name
                                              :op1 "India"))
                     :mod (c18-12 / so-called)
                     :ARG0-of (c18-0 / have-org-role-91
                                     :ARG1 (c18-14 / parliament)
                                     :ARG2 (c18-3 / member)))
        :ARG1 (c18-8 / rule-03
                     :ARG0 (c18-4 / party
                                  :mod (c18-11 / this))
                     :ARG1 (c18-1 / we)
                     :duration (c18-10 / multiple
                                       :op1 (c18-6 / temporal-quantity
                                                   :unit (c18-2 / year)
                                                   :quant 1)))
        :location (c18-15 / here))

# ::snt You telling me that in a km motorway car chase involving a Peugeot they couldn't be taken out?? Pathetic!!!
# ::tokens ["You", "telling", "me", "that", "in", "a", "km", "motorway", "car", "chase", "involving", "a", "Peugeot", "they", "could", "n't", "be", "taken", "out", "?", "?", "Pathetic", "!", "!", "!"]
# ::lemmas ["you", "tell", "i", "that", "in", "a", "km", "motorway", "car", "chase", "involve", "a", "Peugeot", "they", "could", "not", "be", "take", "out", "?", "?", "pathetic", "!", "!", "!"]
(c19-1 / multi-sentence
       :snt1 (c19-12 / tell-01
                     :ARG0 (c19-0 / you)
                     :ARG1 (c19-6 / possible-01
                                  :ARG1 (c19-11 / take-out-11
                                                :ARG1 (c19-5 / they)
                                                :subevent-of (c19-8 / chase-01
                                                                    :ARG1 (c19-7 / car-make
                                                                                 :name (c19-4 / name
                                                                                              :op1 "Peugeot"))
                                                                    :location (c19-9 / motorway)
                                                                    :quant (c19-10 / distance-quantity
                                                                                   :unit (c19-3 / kilometer)
                                                                                   :quant 1)))
                                  :polarity -)
                     :ARG2 (c19-2 / i))
       :snt2 (c19-13 / pathetic
                     :mode expressive))

# ::snt . Prepared to die as martyrs.? Wat a joke ! They are murdering heathens. They have no financial Jihadist support either. Odd !
# ::tokens [".", "Prepared", "to", "die", "as", "martyrs", ".", "?", "Wat", "a", "joke", "!", "They", "are", "murdering", "heathens", ".", "They", "have", "no", "financial", "Jihadist", "support", "either", ".", "Odd", "!"]
# ::lemmas [".", "prepare", "to", "die", "as", "martyr", ".", "?", "Wat", "a", "joke", "!", "they", "be", "murder", "heathen", ".", "they", "have", "no", "financial", "Jihadist", "support", "either", ".", "odd", "!"]
(c20-3 / multi-sentence
       :snt1 (c20-9 / prepare-02
                    :polarity (c20-17 / amr-unknown)
                    :ARG1 (c20-15 / they)
                    :ARG2 (c20-10 / die-01
                                  :ARG1 c20-15
                                  :manner (c20-11 / martyr-01
                                                  :ARG1 c20-15)))
       :snt2 (c20-0 / joke-01
                    :ARG2 (c20-2 / murder-01
                                 :ARG0 (c20-13 / they)
                                 :ARG1 (c20-1 / heathens))
                    :mode expressive)
       :snt3 (c20-4 / have-03
                    :ARG0 (c20-8 / they)
                    :ARG1 (c20-14 / support-01
                                  :ARG1 (c20-16 / person
                                                :mod (c20-5 / finance)
                                                :mod (c20-12 / Jihadist)))
                    :mod (c20-7 / either)
                    :polarity -)
       :snt4 (c20-6 / odd
                    :mode expressive))

# ::snt suggest you change 'martyr' themselves to 'kill themselves' in your TV news text - don't dignify them
# ::tokens ["suggest", "you", "change", "'", "martyr", "'", "themselves", "to", "'", "kill", "themselves", "'", "in", "your", "TV", "news", "text", "-", "do", "n't", "dignify", "them"]
# ::lemmas ["suggest", "you", "change", "'", "martyr", "'", "themselves", "to", "'", "kill", "themselves", "'", "in", "your", "tv", "news", "text", "-", "do", "not", "dignify", "they"]
(c21-0 / have-condition-91
       :ARG1 (c21-7 / dignify-01
                    :ARG0 (c21-1 / you)
                    :ARG1 (c21-11 / they)
                    :polarity -
                    :mode imperative)
       :ARG2 (c21-10 / suggest-01
                     :ARG0 c21-1
                     :ARG1 (c21-8 / change-01
                                  :ARG0 c21-1
                                  :ARG1 (c21-6 / person
                                               :ARG0-of (c21-2 / martyr-01))
                                  :ARG2 (c21-3 / kill-01
                                               :ARG0 c21-6
                                               :ARG1 c21-6)
                                  :location (c21-9 / text
                                                   :mod (c21-4 / news)
                                                   :mod (c21-5 / television)
                                                   :poss c21-1))))

# ::snt bet there in aldi....nobody can resist the bargains in there
# ::tokens ["bet", "there", "in", "aldi", "....", "nobody", "can", "resist", "the", "bargains", "in", "there"]
# ::lemmas ["bet", "there", "in", "aldi", "....", "nobody", "can", "resist", "the", "bargain", "in", "there"]
(c22-0 / multi-sentence
       :snt1 (c22-1 / bet-01
                    :ARG2 (c22-8 / there)
                    :location (c22-6 / city
                                     :name (c22-2 / name
                                                  :op1 "Aldi")))
       :snt2 (c22-4 / possible-01
                    :ARG1 (c22-5 / resist-01
                                 :ARG0 (c22-3 / nobody)
                                 :ARG1 (c22-7 / bargain-01
                                              :location c22-8))))

# ::snt follow through here
# ::tokens ["follow", "through", "here"]
# ::lemmas ["follow", "through", "here"]
(c23-2 / follow-02
       :ARG0 (c23-1 / you)
       :ARG1 (c23-0 / here)
       :mode imperative)

# ::snt you catch them I will clean them in the name of Jesus!
# ::tokens ["you", "catch", "them", "I", "will", "clean", "them", "in", "the", "name", "of", "Jesus", "!"]
# ::lemmas ["you", "catch", "they", "i", "will", "clean", "they", "in", "the", "name", "of", "Jesus", "!"]
(c24-5 / clean-01
       :ARG0 (c24-1 / i)
       :ARG1 (c24-6 / they)
       :beneficiary (c24-3 / person
                           :name (c24-2 / name
                                        :op1 "Jesus"))
       :condition (c24-4 / catch-02
                         :ARG0 (c24-0 / you)
                         :ARG1 c24-6))
