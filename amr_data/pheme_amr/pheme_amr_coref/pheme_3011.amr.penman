# ::snt media dnt say "group of people protesting for justice" it says "rioting domestic terrorists"
# ::tokens ["media", "dnt", "say", "\"", "group", "of", "people", "protesting", "for", "justice", "\"", "it", "says", "\"", "rioting", "domestic", "terrorists", "\""]
# ::lemmas ["medium", "dnt", "say", "\"", "group", "of", "people", "protest", "for", "justice", "\"", "it", "say", "\"", "riot", "domestic", "terrorist", "\""]
(c1-6 / contrast-01
      :ARG1 (c1-8 / say-01
                  :ARG0 (c1-2 / media)
                  :ARG1 (c1-7 / group-01
                              :ARG1 (c1-4 / person
                                          :ARG0-of (c1-10 / protest-01
                                                          :ARG1 (c1-0 / justice))))
                  :polarity -)
      :ARG2 (c1-3 / say-01
                  :ARG0 c1-2
                  :ARG1 (c1-1 / spoil-01
                              :ARG1 (c1-9 / terrorist
                                          :mod (c1-5 / domestic)))))

# ::snt he wasn't shot TEN times. Stop making the independent media look bad.
# ::tokens ["he", "was", "n't", "shot", "TEN", "times", ".", "Stop", "making", "the", "independent", "media", "look", "bad", "."]
# ::lemmas ["he", "be", "not", "shoot", "TEN", "time", ".", "stop", "make", "the", "independent", "medium", "look", "bad", "."]
(c2-3 / multi-sentence
      :snt1 (c2-9 / shoot-02
                  :ARG1 (c2-0 / he)
                  :polarity -
                  :frequency 10)
      :snt2 (c2-6 / stop-01
                  :ARG0 (c2-1 / you)
                  :ARG1 (c2-7 / make-02
                              :ARG0 c2-1
                              :ARG1 (c2-2 / look-02
                                          :ARG0 (c2-4 / media
                                                      :ARG0-of (c2-8 / depend-01
                                                                     :polarity -))
                                          :ARG1 (c2-5 / bad-07)))
                  :mode imperative))

# ::snt Stop playing judge and jury for seconds and find a place to buy a clue.
# ::tokens ["Stop", "playing", "judge", "and", "jury", "for", "seconds", "and", "find", "a", "place", "to", "buy", "a", "clue", "."]
# ::lemmas ["stop", "play", "judge", "and", "jury", "for", "seconds", "and", "find", "a", "place", "to", "buy", "a", "clue", "."]
(c3-15 / and
       :op1 (c3-11 / stop-01
                   :ARG0 (c3-1 / you)
                   :ARG1 (c3-8 / play-01
                               :ARG0 c3-1
                               :ARG2 (c3-7 / and
                                           :op1 (c3-14 / person
                                                       :ARG0-of (c3-0 / judge-01))
                                           :op2 (c3-4 / person
                                                      :ARG0-of (c3-10 / jury-01)))
                               :duration (c3-3 / multiple
                                               :op1 (c3-13 / temporal-quantity
                                                           :unit (c3-6 / second)
                                                           :quant 1)))
                   :mode imperative)
       :op2 (c3-2 / find-01
                  :ARG0 c3-1
                  :ARG1 (c3-12 / place
                               :location-of (c3-5 / buy-01
                                                  :ARG0 c3-1
                                                  :ARG1 (c3-9 / clue)))
                  :mode imperative))

# ::snt As said, you are part of the problem.
# ::tokens ["As", "said", ",", "you", "are", "part", "of", "the", "problem", "."]
# ::lemmas ["as", "say", ",", "you", "be", "part", "of", "the", "problem", "."]
(c4-0 / have-part-91
      :ARG1 (c4-2 / problem)
      :ARG2 (c4-1 / you)
      :ARG1-of (c4-3 / say-01))

# ::snt : RT : Over people have been arrested in .None of them is the cop who shot that boy times in cold blood.
# ::tokens [":", "RT", ":", "Over", "people", "have", "been", "arrested", "in", ".None", "of", "them", "is", "the", "cop", "who", "shot", "that", "boy", "times", "in", "cold", "blood", "."]
# ::lemmas [":", "rt", ":", "over", "people", "have", "be", "arrest", "in", ".None", "of", "they", "be", "the", "cop", "who", "shoot", "that", "boy", "time", "in", "cold", "blood", "."]
(c5-0 / multi-sentence
      :snt1 (c5-10 / say-01
                   :ARG0 (c5-7 / publication
                               :name (c5-5 / name
                                           :op1 "RT"))
                   :ARG1 (c5-13 / arrest-01
                                :ARG1 (c5-12 / person
                                             :quant (c5-2 / over))))
      :snt2 (c5-9 / cop
                  :ARG0-of (c5-3 / shoot-02
                                 :frequency (c5-11 / time)
                                 :manner (c5-1 / blood
                                               :ARG1-of (c5-8 / cold-01)))
                  :domain (c5-6 / none
                                :ARG1-of (c5-4 / include-91
                                               :ARG2 c5-12))))

# ::snt Oh MT RT : Over ppl have been arrested in .None of them is the cop who shot that boy times in cold blood.
# ::tokens ["Oh", "MT", "RT", ":", "Over", "ppl", "have", "been", "arrested", "in", ".None", "of", "them", "is", "the", "cop", "who", "shot", "that", "boy", "times", "in", "cold", "blood", "."]
# ::lemmas ["oh", "MT", "RT", ":", "over", "ppl", "have", "be", "arrest", "in", ".None", "of", "they", "be", "the", "cop", "who", "shoot", "that", "boy", "time", "in", "cold", "blood", "."]
(c6-1 / multi-sentence
      :snt1 (c6-17 / arrest-01
                   :ARG1 (c6-8 / person
                               :quant (c6-3 / over
                                            :op1 (c6-7 / volume-quantity
                                                       :unit (c6-16 / pound)
                                                       :quant 1)))
                   :location (c6-14 / state
                                    :name (c6-6 / name
                                                :op1 " MT"))
                   :mod (c6-0 / oh
                              :mode expressive))
      :snt2 (c6-10 / cop
                   :ARG0-of (c6-4 / shoot-02
                                  :ARG1 (c6-2 / boy
                                              :mod (c6-15 / that))
                                  :ARG2 (c6-11 / blood
                                               :ARG1-of (c6-9 / cold-01))
                                  :frequency (c6-13 / time))
                   :ARG2-of (c6-5 / include-91
                                  :ARG1 (c6-12 / they)
                                  :polarity -)))

# ::snt : Over people have been arrested in .None of them is the cop who shot that boy times in cold blood.
# ::tokens [":", "Over", "people", "have", "been", "arrested", "in", ".None", "of", "them", "is", "the", "cop", "who", "shot", "that", "boy", "times", "in", "cold", "blood", "."]
# ::lemmas [":", "over", "people", "have", "be", "arrest", "in", ".None", "of", "they", "be", "the", "cop", "who", "shoot", "that", "boy", "time", "in", "cold", "blood", "."]
(c7-0 / multi-sentence
      :snt1 (c7-9 / arrest-01
                  :ARG1 (c7-4 / person
                              :quant (c7-2 / over
                                           :op1 c7-4)))
      :snt2 (c7-3 / include-91
                  :ARG1 (c7-6 / cop
                              :ARG0-of (c7-7 / shoot-02
                                             :frequency (c7-8 / time)
                                             :manner (c7-1 / blood
                                                           :ARG1-of (c7-5 / cold-01))))
                  :ARG2 c7-4
                  :polarity -))

# ::snt bc an investigation is still ongoing? Holy shit people are dumb
# ::tokens ["bc", "an", "investigation", "is", "still", "ongoing", "?", "Holy", "shit", "people", "are", "dumb"]
# ::lemmas ["bc", "an", "investigation", "be", "still", "ongoing", "?", "holy", "shit", "people", "be", "dumb"]
(c8-1 / multi-sentence
      :snt1 (c8-7 / go-on-15
                  :ARG1 (c8-4 / investigate-01)
                  :mod (c8-8 / still)
                  :polarity (c8-9 / amr-unknown)
                  :polarity (c8-3 / amr-unknown))
      :snt2 (c8-6 / dumb
                  :domain (c8-5 / person
                                :mod (c8-2 / shit
                                           :mod (c8-0 / holy)
                                           :mode expressive))))
