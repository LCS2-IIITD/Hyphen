# ::snt This cannot happen in France and in for Christ sake!Without Security there is CHAOS!
# ::tokens ["This", "can", "not", "happen", "in", "France", "and", "in", "for", "Christ", "sake!Without", "Security", "there", "is", "CHAOS", "!"]
# ::lemmas ["this", "can", "not", "happen", "in", "France", "and", "in", "for", "Christ", "sake!without", "security", "there", "be", "CHAOS", "!"]
(c1-0 / multi-sentence
      :snt1 (c1-5 / possible-01
                  :ARG1 (c1-9 / this)
                  :location (c1-11 / and
                                   :op1 (c1-7 / country
                                              :name (c1-3 / name
                                                          :op1 "France"))
                                   :op2 (c1-2 / inside))
                  :purpose (c1-8 / sake
                                 :poss (c1-10 / person
                                              :name (c1-4 / name
                                                          :op1 "Christ")))
                  :polarity -)
      :snt2 (c1-6 / crisis
                  :condition (c1-1 / security
                                   :polarity -)))

# ::snt : Police vehicles chase suspects on French motorway OMQ
# ::tokens [":", "Police", "vehicles", "chase", "suspects", "on", "French", "motorway", "OMQ"]
# ::lemmas [":", "police", "vehicle", "chase", "suspect", "on", "French", "motorway", "OMQ"]
(c2-5 / chase-01
      :ARG0 (c2-2 / vehicle
                  :mod (c2-3 / police))
      :ARG1 (c2-8 / person
                  :ARG2-of (c2-7 / suspect-01))
      :location (c2-0 / motorway
                      :name (c2-1 / name
                                  :op1 "OMQ")
                      :mod (c2-4 / country
                                 :name (c2-6 / name
                                             :op1 "France"))))

# ::snt they should of just ram them off the road
# ::tokens ["they", "should", "of", "just", "ram", "them", "off", "the", "road"]
# ::lemmas ["they", "should", "of", "just", "ram", "they", "off", "the", "road"]
(c3-4 / recommend-01
      :ARG1 (c3-3 / ram-01
                  :ARG1 (c3-5 / they)
                  :mod (c3-1 / off
                             :op1 (c3-2 / road))
                  :mod (c3-0 / just))
      :ARG2 c3-5)

# ::snt det e den jag kollar p
# ::tokens ["det", "e", "den", "jag", "kollar", "p"]
# ::lemmas ["det", "e", "den", "jag", "kollar", "p"]
(c4-0 / string-entity
      :value "det e den jagkollar")
