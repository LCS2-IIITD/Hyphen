# ::snt Massive manhunt underway for terror suspects
# ::tokens ["Massive", "manhunt", "underway", "for", "terror", "suspects"]
# ::lemmas ["massive", "manhunt", "underway", "for", "terror", "suspect"]
(c1-1 / underway
      :domain (c1-0 / manhunt
                    :mod (c1-2 / massive)
                    :prep-for (c1-3 / person
                                    :ARG2-of (c1-4 / suspect-01
                                                   :ARG1 (c1-5 / terror)))))

# ::snt Just Typical American Citizen A Fu***** Ignorant Redneck , Go Fu** Yourself Media Slave
# ::tokens ["Just", "Typical", "American", "Citizen", "A", "Fu", "*", "*", "*", "*", "*", "Ignorant", "Redneck", ",", "Go", "Fu", "*", "*", "Yourself", "Media", "Slave"]
# ::lemmas ["Just", "Typical", "American", "Citizen", "A", "Fu", "*", "*", "*", "*", "*", "Ignorant", "Redneck", ",", "go", "Fu", "*", "*", "yourself", "medium", "slave"]
(c2-10 / say-01
       :ARG0 (c2-4 / i)
       :ARG1 (c2-9 / go-05
                   :ARG0 (c2-6 / person
                               :ARG0-of (c2-0 / have-org-role-91
                                              :ARG1 (c2-8 / citizen
                                                          :mod (c2-7 / country
                                                                     :name (c2-5 / name
                                                                                 :op1 "United"
                                                                                 :op2 "States")))
                                              :ARG2 (c2-3 / slave
                                                          :mod (c2-2 / media)))
                               :ARG1-of (c2-11 / typical-02)
                               :mod (c2-1 / fucking
                                          :mode expressive)
                               :ARG1-of c2-9)
                   :mode imperative)
       :ARG2 c2-6)

# ::snt how were those two radicalized? What mosque did they attend in France?
# ::tokens ["how", "were", "those", "two", "radicalized", "?", "What", "mosque", "did", "they", "attend", "in", "France", "?"]
# ::lemmas ["how", "be", "those", "two", "radicalize", "?", "what", "mosque", "do", "they", "attend", "in", "France", "?"]
(c4-0 / multi-sentence
      :snt1 (c4-5 / radicalize-01
                  :ARG1 (c4-4 / person
                              :mod (c4-9 / that)
                              :quant 2)
                  :manner (c4-10 / amr-unknown))
      :snt2 (c4-1 / attend-01
                  :ARG0 (c4-8 / they)
                  :ARG1 (c4-6 / mosque
                              :mod (c4-3 / amr-unknown))
                  :location (c4-7 / country
                                  :name (c4-2 / name
                                              :op1 "France"))))

# ::snt Massive manhunt underway for terror suspects
# ::tokens ["Massive", "manhunt", "underway", "for", "terror", "suspects"]
# ::lemmas ["massive", "manhunt", "underway", "for", "terror", "suspect"]
(c5-1 / underway
      :domain (c5-0 / manhunt
                    :mod (c5-2 / massive)
                    :prep-for (c5-3 / person
                                    :ARG2-of (c5-4 / suspect-01
                                                   :ARG1 (c5-5 / terror)))))

# ::snt hopefully they will try to resist, it will save on paperwork &amp; free up jail cells, knobheads
# ::tokens ["hopefully", "they", "will", "try", "to", "resist", ",", "it", "will", "save", "on", "paperwork", "&", "amp", ";", "free", "up", "jail", "cells", ",", "knobheads"]
# ::lemmas ["hopefully", "they", "will", "try", "to", "resist", ",", "it", "will", "save", "on", "paperwork", "&", "amp", ";", "free", "up", "jail", "cell", ",", "knobhead"]
(c6-13 / and
       :op1 (c6-0 / hope-01
                  :ARG1 (c6-11 / try-01
                               :ARG0 (c6-9 / they)
                               :ARG1 (c6-7 / resist-01
                                           :ARG0 c6-9)))
       :op2 (c6-10 / save-01
                   :ARG0 c6-7
                   :ARG1 (c6-3 / and
                               :op1 (c6-6 / paperwork)
                               :op2 (c6-5 / amp)))
       :op3 (c6-2 / free-up-02
                  :ARG1 (c6-8 / cell
                              :location (c6-1 / jail)))
       :op4 (c6-12 / person
                   :mod (c6-4 / knobhead)))

# ::snt .
# ::tokens ["."]
# ::lemmas ["."]
(c7-0 / amr-empty)

# ::snt obviously not u pro-palestine nutjobs....
# ::tokens ["obviously", "not", "u", "pro", "-", "palestine", "nutjobs", "...."]
# ::lemmas ["obviously", "not", "u", "pro", "-", "palestine", "nutjob", "...."]
(c8-2 / obvious-01
      :ARG1 (c8-3 / nutjob
                  :ARG0-of (c8-1 / favor-01
                                 :ARG1 (c8-5 / country
                                             :name (c8-4 / name
                                                         :op1 "Palestine")))
                  :domain (c8-0 / you)
                  :polarity -))

# ::snt get the bastards the deader the better
# ::tokens ["get", "the", "bastards", "the", "deader", "the", "better"]
# ::lemmas ["get", "the", "bastard", "the", "deader", "the", "well"]
(c9-5 / correlate-91
      :ARG1 (c9-1 / more
                  :ARG3-of (c9-0 / have-degree-91
                                 :ARG1 (c9-2 / bastard)
                                 :ARG2 (c9-4 / bad-07
                                             :ARG1 c9-2)))
      :ARG2 (c9-3 / more
                  :ARG3-of (c9-7 / have-degree-91
                                 :ARG2 (c9-6 / good-07
                                             :ARG1 c9-2))))

# ::snt F Islam and these evil bastards. I'm armed. Come and get me.
# ::tokens ["F", "Islam", "and", "these", "evil", "bastards", ".", "I", "'m", "armed", ".", "Come", "and", "get", "me", "."]
# ::lemmas ["F", "Islam", "and", "these", "evil", "bastard", ".", "i", "be", "armed", ".", "come", "and", "get", "i", "."]
(c10-1 / multi-sentence
       :snt1 (c10-13 / and
                     :op1 (c10-8 / religious-group
                                 :name (c10-6 / name
                                              :op1 "F"))
                     :op2 (c10-2 / bastard
                                 :mod (c10-3 / evil)
                                 :mod (c10-12 / this)))
       :snt2 (c10-4 / arm-01
                    :ARG1 (c10-5 / i))
       :snt3 (c10-7 / and
                    :op1 (c10-9 / come-01
                                :ARG1 (c10-0 / you)
                                :mode imperative)
                    :op2 (c10-10 / get-05
                                 :ARG0 c10-0
                                 :ARG1 (c10-11 / i)
                                 :mode imperative)))

# ::snt Kill Them.
# ::tokens ["Kill", "Them", "."]
# ::lemmas ["kill", "they", "."]
(c11-2 / kill-01
       :ARG0 (c11-1 / you)
       :ARG1 (c11-0 / they)
       :mode imperative)

# ::snt Massive manhunt underway for terror suspects
# ::tokens ["Massive", "manhunt", "underway", "for", "terror", "suspects"]
# ::lemmas ["massive", "manhunt", "underway", "for", "terror", "suspect"]
(c12-1 / underway
       :domain (c12-0 / manhunt
                      :mod (c12-2 / massive)
                      :prep-for (c12-3 / person
                                       :ARG2-of (c12-4 / suspect-01
                                                       :ARG1 (c12-5 / terror)))))

# ::snt Take them alive, not as dead martyrs. Make them suffer a trial, shame, humiliation, degradation and condemnation.
# ::tokens ["Take", "them", "alive", ",", "not", "as", "dead", "martyrs", ".", "Make", "them", "suffer", "a", "trial", ",", "shame", ",", "humiliation", ",", "degradation", "and", "condemnation", "."]
# ::lemmas ["take", "they", "alive", ",", "not", "as", "dead", "martyr", ".", "make", "they", "suffer", "a", "trial", ",", "shame", ",", "humiliation", ",", "degradation", "and", "condemnation", "."]
(c13-1 / multi-sentence
       :snt1 (c13-16 / contrast-01
                     :ARG1 (c13-18 / take-04
                                   :ARG0 (c13-14 / you)
                                   :ARG1 (c13-7 / live-01
                                                :ARG0 (c13-12 / they))
                                   :mode imperative)
                     :ARG2 (c13-11 / take-04
                                   :ARG0 c13-14
                                   :ARG1 c13-12
                                   :ARG3 (c13-10 / martyr-01
                                                 :ARG1 c13-12
                                                 :ARG1-of (c13-2 / die-01))
                                   :mode imperative
                                   :polarity -)
                     :mode imperative)
       :snt2 (c13-8 / make-02
                    :ARG0 (c13-13 / you)
                    :ARG1 (c13-4 / suffer-01
                                 :ARG0 (c13-15 / they)
                                 :ARG1 (c13-5 / and
                                              :op1 (c13-17 / try-02
                                                           :ARG1 c13-15)
                                              :op2 (c13-9 / shame-02
                                                          :ARG1 c13-15)
                                              :op3 (c13-6 / humiliate-01
                                                          :ARG1 c13-15)
                                              :op4 (c13-0 / degrade-01
                                                          :ARG1 c13-15)
                                              :op5 (c13-3 / condemn-01
                                                          :ARG1 c13-15)))
                    :mode imperative))

# ::snt get them *prays*
# ::tokens ["get", "them", "*", "prays", "*"]
# ::lemmas ["get", "they", "*", "pray", "*"]
(c14-3 / get-05
       :ARG0 (c14-1 / you)
       :ARG1 (c14-2 / they)
       :ARG1-of (c14-0 / say-01)
       :mode imperative)

# ::snt Get those suckers!
# ::tokens ["Get", "those", "suckers", "!"]
# ::lemmas ["get", "those", "sucker", "!"]
(c16-3 / get-01
       :ARG0 (c16-1 / you)
       :ARG1 (c16-0 / sucker
                    :mod (c16-2 / that))
       :mode imperative)
