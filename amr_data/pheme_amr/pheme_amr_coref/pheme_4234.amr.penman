# ::snt correction no one knows if they escaped or were released.
# ::tokens ["correction", "no", "one", "knows", "if", "they", "escaped", "or", "were", "released", "."]
# ::lemmas ["correction", "no", "one", "know", "if", "they", "escape", "or", "be", "release", "."]
(c1-2 / know-01
      :ARG0 (c1-3 / no-one)
      :ARG1 (c1-0 / or
                  :op1 (c1-1 / escape-01
                             :ARG0 (c1-6 / they))
                  :op2 (c1-4 / release-01
                             :ARG1 c1-6))
      :purpose (c1-5 / correct-02))

# ::snt hours. Those poor people. I hope they can get some good therapy after this. I hope they can get out soon.
# ::tokens ["hours", ".", "Those", "poor", "people", ".", "I", "hope", "they", "can", "get", "some", "good", "therapy", "after", "this", ".", "I", "hope", "they", "can", "get", "out", "soon", "."]
# ::lemmas ["hours", ".", "those", "poor", "people", ".", "i", "hope", "they", "can", "get", "some", "good", "therapy", "after", "this", ".", "i", "hope", "they", "can", "get", "out", "soon", "."]
(c2-0 / multi-sentence
      :snt1 (c2-12 / multiple
                   :op1 (c2-22 / temporal-quantity
                               :unit (c2-9 / hour)
                               :quant 1))
      :snt2 (c2-3 / person
                  :mod (c2-6 / poor)
                  :mod (c2-17 / that))
      :snt3 (c2-8 / hope-01
                  :ARG0 (c2-15 / i)
                  :ARG1 (c2-10 / possible-01
                               :ARG1 (c2-13 / get-01
                                            :ARG0 (c2-16 / they)
                                            :ARG1 (c2-20 / therapy
                                                         :ARG1-of (c2-4 / good-02)
                                                         :mod (c2-5 / some))
                                            :time (c2-7 / after
                                                        :op1 (c2-21 / this)))))
      :snt4 (c2-2 / hope-01
                  :ARG0 c2-15
                  :ARG1 (c2-14 / possible-01
                               :ARG1 (c2-1 / get-05
                                           :ARG1 (c2-18 / they)
                                           :ARG2 (c2-19 / out)
                                           :time (c2-11 / soon)))))

# ::snt Motivation &amp; demands known: not being made known. Correct call
# ::tokens ["Motivation", "&", "amp", ";", "demands", "known", ":", "not", "being", "made", "known", ".", "Correct", "call"]
# ::lemmas ["Motivation", "&", "amp", ";", "demand", "know", ":", "not", "be", "make", "known", ".", "correct", "call"]
(c3-1 / multi-sentence
      :snt1 (c3-10 / and
                   :op1 (c3-4 / motivate-01)
                   :op2 (c3-3 / amp)
                   :op3 (c3-6 / contrast-01
                              :ARG1 (c3-9 / know-01
                                          :ARG1 (c3-5 / demand-01))
                              :ARG2 (c3-0 / make-02
                                          :ARG1 (c3-2 / know-01
                                                      :ARG1 c3-5)
                                          :polarity -)))
      :snt2 (c3-7 / call-10
                  :ARG1-of (c3-8 / correct-02)))
