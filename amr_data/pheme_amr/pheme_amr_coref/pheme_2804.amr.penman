# ::snt THANK YOU
# ::tokens ["THANK", "YOU"]
# ::lemmas ["thank", "you"]
(c1-1 / thank-01
      :ARG0 (c1-2 / i)
      :ARG1 (c1-0 / you))

# ::snt LUV U SO MUCH SUN I SHOULD BE FINE JUST A LITTLE NERVOUS
# ::tokens ["LUV", "U", "SO", "MUCH", "SUN", "I", "SHOULD", "BE", "FINE", "JUST", "A", "LITTLE", "NERVOUS"]
# ::lemmas ["LUV", "U", "SO", "MUCH", "SUN", "i", "should", "be", "fine", "just", "a", "little", "NERVOUS"]
(c2-9 / cause-01
      :ARG0 (c2-10 / sun
                   :ARG1-of (c2-0 / have-degree-91
                                  :ARG2 (c2-3 / much)
                                  :ARG3 (c2-5 / so)))
      :ARG1 (c2-8 / recommend-01
                  :ARG1 (c2-2 / fine-03
                              :ARG1 (c2-6 / i)
                              :mod (c2-1 / just)
                              :mod (c2-7 / nasty
                                         :degree (c2-4 / little)))))

# ::snt people like you give me hope unlike other ignorant people in this fandom
# ::tokens ["people", "like", "you", "give", "me", "hope", "unlike", "other", "ignorant", "people", "in", "this", "fandom"]
# ::lemmas ["people", "like", "you", "give", "i", "hope", "unlike", "other", "ignorant", "people", "in", "this", "fandom"]
(c3-9 / give-01
      :ARG0 (c3-6 / person
                  :ARG1-of (c3-7 / resemble-01
                                 :ARG2 (c3-1 / you)))
      :ARG1 (c3-0 / hopeful-03
                  :ARG0 c3-6)
      :ARG2 (c3-4 / i)
      :ARG1-of (c3-5 / resemble-01
                     :ARG2 (c3-8 / give-01
                                 :ARG0 (c3-12 / person
                                              :ARG1-of (c3-10 / ignorant-02)
                                              :mod (c3-3 / other)
                                              :location (c3-2 / fan
                                                              :mod (c3-11 / this)))
                                 :ARG1 c3-0)
                     :polarity -))

# ::snt WHATS GOING ON
# ::tokens ["WHATS", "GOING", "ON"]
# ::lemmas ["WHATS", "go", "on"]
(c4-0 / go-on-15
      :ARG1 (c4-1 / amr-unknown))

# ::snt oHN YGOD WHATBWHY WHO ARE DOINGBTHAT
# ::tokens ["oHN", "YGOD", "WHATBWHY", "WHO", "ARE", "DOINGBTHAT"]
# ::lemmas ["ohn", "ygod", "whatbwhy", "who", "be", "DOINGBTHAT"]
(c5-1 / do-02
      :ARG0 (c5-3 / amr-unknown)
      :ARG1 (c5-2 / that)
      :mod (c5-0 / oh-my-god
                 :mode expressive))

# ::snt OHG MG G TAKE FARE FTHERE I HOPE YOU ARE ALRIGHT WHST
# ::tokens ["OHG", "MG", "G", "TAKE", "FARE", "FTHERE", "I", "HOPE", "YOU", "ARE", "ALRIGHT", "WHST"]
# ::lemmas ["OHG", "MG", "G", "TAKE", "FARE", "FTHERE", "i", "hope", "you", "be", "ALRIGHT", "WHST"]
(c6-3 / multi-sentence
      :snt1 (c6-10 / take-01
                   :ARG0 (c6-9 / person
                               :name (c6-8 / name
                                           :op1 "MG"
                                           :op2 "G"))
                   :ARG1 (c6-4 / breathe-01)
                   :location (c6-0 / here)
                   :mod (c6-5 / oh
                              :mode expressive))
      :snt2 (c6-11 / hope-01
                   :ARG0 (c6-7 / i)
                   :ARG1 (c6-2 / lucky
                               :domain (c6-1 / you)
                               :degree (c6-6 / quite))))

# ::snt that is so fucking insensitive people need to wake up and stop being so ungrateful, it's disgusting
# ::tokens ["that", "is", "so", "fucking", "insensitive", "people", "need", "to", "wake", "up", "and", "stop", "being", "so", "ungrateful", ",", "it", "'s", "disgusting"]
# ::lemmas ["that", "be", "so", "fucking", "insensitive", "people", "need", "to", "wake", "up", "and", "stop", "be", "so", "ungrateful", ",", "it", "be", "disgusting"]
(c7-10 / sensitive-03
       :ARG0 (c7-11 / that)
       :ARG1 (c7-6 / person)
       :mod (c7-1 / fucking
                  :degree (c7-4 / so))
       :ARG0-of (c7-8 / cause-01
                      :ARG1 (c7-5 / need-01
                                  :ARG0 c7-6
                                  :ARG1 (c7-12 / and
                                               :op1 (c7-0 / wake-up-02
                                                          :ARG1 c7-6)
                                               :op2 (c7-2 / stop-01
                                                          :ARG0 c7-6
                                                          :ARG1 (c7-7 / resent-01
                                                                      :ARG0 c7-6
                                                                      :degree (c7-3 / so))))))
       :ARG0-of (c7-9 / disgust-01)
       :polarity -)

# ::snt well said
# ::tokens ["well", "said"]
# ::lemmas ["well", "say"]
(c8-0 / say-01
      :manner (c8-1 / good-02))

# ::snt ily you great human
# ::tokens ["ily", "you", "great", "human"]
# ::lemmas ["ily", "you", "great", "human"]
(c9-0 / human
      :domain (c9-1 / you)
      :mod (c9-2 / great)
      :mod (c9-3 / irony))

# ::snt at :45am this morning people that were in a cafe were held hostage and there is abouts +
# ::tokens ["at", ":", "45am", "this", "morning", "people", "that", "were", "in", "a", "cafe", "were", "held", "hostage", "and", "there", "is", "abouts", "+"]
# ::lemmas ["at", ":", "45am", "this", "morning", "people", "that", "be", "in", "a", "cafe", "be", "hold", "hostage", "and", "there", "be", "about", "+"]
(c10-7 / and
       :op1 (c10-0 / hold-01
                   :ARG1 (c10-9 / hostage
                                :domain (c10-4 / person
                                               :location (c10-6 / cafe)))
                   :time (c10-5 / date-entity
                                :dayperiod (c10-1 / morning)
                                :mod (c10-8 / today)
                                :time "0:45"))
       :op2 (c10-3 / about
                   :op1 (c10-2 / event)))

# ::snt wtF IS HAPOEMIMG THERE?*??!
# ::tokens ["wtF", "IS", "HAPOEMIMG", "THERE", "?", "*", "?", "?", "!"]
# ::lemmas ["wtF", "be", "HAPOEMIMG", "there", "?", "*", "?", "?", "!"]
(c11-2 / consensus
       :polarity (c11-3 / amr-unknown)
       :domain (c11-1 / wtF)
       :location (c11-0 / there))

# ::snt relevant
# ::tokens ["relevant"]
# ::lemmas ["relevant"]
(c12-0 / relevant-01)

# ::snt when nadine rts and you become famous for a solid minute
# ::tokens ["when", "nadine", "rts", "and", "you", "become", "famous", "for", "a", "solid", "minute"]
# ::lemmas ["when", "nadine", "rt", "and", "you", "become", "famous", "for", "a", "solid", "minute"]
(c13-2 / be-temporally-at-91
       :ARG2 (c13-8 / and
                    :op1 (c13-4 / person
                                :name (c13-3 / name
                                             :op1 "nadine"
                                             :op2 "rts"))
                    :op2 (c13-5 / become-01
                                :ARG1 c13-4
                                :ARG2 (c13-0 / fame-01
                                             :ARG1 c13-4
                                             :duration (c13-7 / temporal-quantity
                                                              :unit (c13-1 / minute)
                                                              :ARG1-of (c13-6 / solid-02)
                                                              :quant 1)))))

# ::snt LOVE YO USL MCUH
# ::tokens ["LOVE", "YO", "USL", "MCUH"]
# ::lemmas ["LOVE", "YO", "USL", "MCUH"]
(c14-5 / and
       :op1 (c14-0 / love-01
                   :ARG0 (c14-2 / i)
                   :ARG1 (c14-4 / person
                                :name (c14-3 / name
                                             :op1 "Uncle"
                                             :op2 "Blair"))
                   :mode expressive)
       :op2 (c14-1 / boo-01
                   :ARG0 c14-2
                   :mode expressive))

# ::snt ATTACK ON SYDNEY BOMBS AROUND CITY PPL BEING HELD HOSTAGE PLS PRAY
# ::tokens ["ATTACK", "ON", "SYDNEY", "BOMBS", "AROUND", "CITY", "PPL", "BEING", "HELD", "HOSTAGE", "PLS", "PRAY"]
# ::lemmas ["attack", "ON", "SYDNEY", "BOMBS", "around", "CITY", "PPL", "be", "hold", "HOSTAGE", "PLS", "PRAY"]
(c15-8 / and
       :op1 (c15-2 / attack-01
                   :location (c15-6 / city
                                    :name (c15-3 / name
                                                 :op1 "Sydney")))
       :op2 (c15-0 / hold-01
                   :ARG1 (c15-5 / press
                                :mod (c15-7 / government-organization
                                            :name (c15-4 / name
                                                         :op1 "LSP")))
                   :location (c15-1 / outside
                                    :op1 c15-6)))

# ::snt YES YES I LVOE YOUT OO
# ::tokens ["YES", "YES", "I", "LVOE", "YOUT", "OO"]
# ::lemmas ["yes", "yes", "i", "LVOE", "YOUT", "OO"]
(c16-7 / and
       :op1 (c16-0 / yes)
       :op2 (c16-1 / laugh-01
                   :ARG0 (c16-4 / i)
                   :manner (c16-5 / loud)
                   :mode expressive)
       :op3 (c16-6 / say-01
                   :ARG0 c16-4
                   :ARG1 (c16-2 / off
                                :domain (c16-3 / ass
                                               :part-of (c16-8 / you)))))

# ::snt IM ORAYING FOR ALL PEOPLE PRAYINF FOR U DAD
# ::tokens ["IM", "ORAYING", "FOR", "ALL", "PEOPLE", "PRAYINF", "FOR", "U", "DAD"]
# ::lemmas ["IM", "ORAYING", "for", "all", "PEOPLE", "PRAYINF", "for", "U", "DAD"]
(c17-4 / pray-01
       :ARG0 (c17-3 / i)
       :beneficiary (c17-6 / person
                           :mod (c17-7 / all)
                           :ARG0-of (c17-2 / pray-01
                                           :beneficiary (c17-5 / person
                                                               :ARG0-of (c17-0 / have-rel-role-91
                                                                               :ARG1 c17-3
                                                                               :ARG2 (c17-1 / father))))))

# ::snt or estimated to be people
# ::tokens ["or", "estimated", "to", "be", "people"]
# ::lemmas ["or", "estimate", "to", "be", "people"]
(c18-0 / or
       :op2 (c18-1 / estimate-01
                   :ARG1 (c18-2 / person)))

# ::snt One Direction
# ::tokens ["One", "Direction"]
# ::lemmas ["One", "direction"]
(c19-1 / direct-01
       :ARG0 (c19-0 / one))

# ::snt IT ANNOYS ME SO MUCH I SEE IT EVERYHWERB
# ::tokens ["IT", "ANNOYS", "ME", "SO", "MUCH", "I", "SEE", "IT", "EVERYHWERB"]
# ::lemmas ["it", "annoys", "i", "SO", "much", "i", "see", "it", "everyhwerb"]
(c20-3 / embarrass-01
       :ARG0 (c20-5 / it)
       :ARG1 (c20-6 / i)
       :ARG1-of (c20-0 / have-quant-91
                       :ARG2 (c20-1 / much)
                       :ARG3 (c20-7 / so)
                       :ARG6 (c20-4 / see-01
                                    :ARG0 c20-6
                                    :ARG1 c20-5
                                    :mod (c20-2 / every))))

# ::snt One Direction
# ::tokens ["One", "Direction"]
# ::lemmas ["One", "direction"]
(c21-1 / direct-01
       :ARG0 (c21-0 / one))

# ::snt MY BLESSING ATAD NHRERE TAKE CARE DADI LVI EYOU
# ::tokens ["MY", "BLESSING", "ATAD", "NHRERE", "TAKE", "CARE", "DADI", "LVI", "EYOU"]
# ::lemmas ["my", "blessing", "atad", "NHRERE", "take", "care", "dadi", "LVI", "EYOU"]
(c22-5 / say-01
       :ARG0 (c22-1 / i)
       :ARG1 (c22-6 / take-01
                    :ARG0 (c22-3 / person
                                 :ARG0-of (c22-0 / lose-03)
                                 :mod (c22-8 / at-ad-nawa))
                    :ARG1 (c22-4 / care-03))
       :ARG2 (c22-7 / person
                    :name (c22-2 / name
                                 :op1 "DADI"
                                 :op2 "Lavi"
                                 :op3 "Eyou")))

# ::snt LUV MY FAV SUN UR DAD WILL BE FINE OK
# ::tokens ["LUV", "MY", "FAV", "SUN", "UR", "DAD", "WILL", "BE", "FINE", "OK"]
# ::lemmas ["LUV", "my", "fav", "SUN", "UR", "DAD", "will", "be", "fine", "ok"]
(c23-9 / and
       :op1 (c23-2 / laugh-01
                   :ARG0 (c23-1 / you)
                   :ARG2 (c23-8 / sun
                                :name (c23-6 / name
                                             :op1 "Fluv")
                                :poss (c23-5 / i))
                   :mode imperative)
       :op2 (c23-4 / okay-04
                   :ARG1 (c23-7 / person
                                :ARG0-of (c23-0 / have-rel-role-91
                                                :ARG1 c23-5
                                                :ARG2 (c23-3 / father)))))

# ::snt TAKE CARE DAD FOFR REAL LIKE SERIOSULY U MIGHT BE HARMDD CUDJ
# ::tokens ["TAKE", "CARE", "DAD", "FOFR", "REAL", "LIKE", "SERIOSULY", "U", "MIGHT", "BE", "HARMDD", "CUDJ"]
# ::lemmas ["take", "care", "dad", "FOFR", "real", "like", "SERIOSULY", "u", "might", "be", "HARMDD", "CUDJ"]
(c24-4 / make-02
       :ARG0 (c24-1 / you)
       :ARG1 (c24-3 / free-04
                    :ARG1 (c24-9 / person
                                 :ARG0-of (c24-0 / have-rel-role-91
                                                 :ARG2 (c24-6 / father)))
                    :ARG1-of (c24-10 / real-04)
                    :ARG1-of (c24-7 / resemble-01
                                    :ARG2 (c24-2 / jury
                                                 :mod (c24-5 / law
                                                             :name (c24-8 / name
                                                                          :op1 "HarMDD"))
                                                 :ARG1-of (c24-11 / possible-01))))
       :mode imperative)

# ::snt ISLAMIC STATE ATTACK
# ::tokens ["ISLAMIC", "STATE", "ATTACK"]
# ::lemmas ["ISLAMIC", "STATE", "attack"]
(c25-2 / attack-01
       :ARG0 (c25-0 / state
                    :mod (c25-1 / explosive)))

# ::snt people and have escaped so far
# ::tokens ["people", "and", "have", "escaped", "so", "far"]
# ::lemmas ["people", "and", "have", "escape", "so", "far"]
(c26-3 / and
       :op1 (c26-1 / people)
       :op2 (c26-2 / escape-01
                   :ARG0 c26-1
                   :time (c26-0 / so-far)))
