# ::snt Somebody ask Jesse how his son and daughter in law...the felons...are doing in fed pen
# ::tokens ["Somebody", "ask", "Jesse", "how", "his", "son", "and", "daughter", "in", "law", "...", "the", "felons", "...", "are", "doing", "in", "fed", "pen"]
# ::lemmas ["somebody", "ask", "Jesse", "how", "his", "son", "and", "daughter", "in", "law", "...", "the", "felon", "...", "be", "do", "in", "fed", "pen"]
(c1-16 / ask-01
       :ARG0 (c1-12 / somebody)
       :ARG1 (c1-14 / thing
                    :manner-of (c1-11 / do-02
                                      :ARG0 (c1-7 / and
                                                  :op1 (c1-10 / person
                                                              :ARG0-of (c1-0 / have-rel-role-91
                                                                             :ARG1 (c1-15 / person
                                                                                          :name (c1-9 / name
                                                                                                      :op1 "Jesse"))
                                                                             :ARG2 (c1-6 / son)))
                                                  :op2 (c1-5 / person
                                                             :ARG0-of (c1-2 / have-rel-role-91
                                                                            :ARG1 c1-15
                                                                            :ARG2 (c1-1 / daughter-in-law)))
                                                  :ARG1-of (c1-3 / mean-01
                                                                 :ARG2 (c1-4 / felony)))
                                      :location (c1-13 / pen
                                                       :ARG1-of (c1-8 / feed-01))))
       :ARG2 c1-15)

# ::snt Now All We Need Is SMOD [Sweet Meteor Of Death] To Impact While Sharpton &amp; Jackson Are Both On Site
# ::tokens ["Now", "All", "We", "Need", "Is", "SMOD", "[", "Sweet", "Meteor", "Of", "Death", "]", "To", "Impact", "While", "Sharpton", "&", "amp", ";", "Jackson", "Are", "Both", "On", "Site"]
# ::lemmas ["now", "all", "we", "need", "be", "smod", "[", "Sweet", "Meteor", "of", "Death", "]", "to", "Impact", "while", "Sharpton", "&", "amp", ";", "Jackson", "Are", "Both", "On", "Site"]
(c2-12 / need-01
       :ARG0 (c2-15 / we)
       :ARG1 (c2-3 / product
                   :name (c2-17 / name
                                :op1 "SMOD")
                   :ARG1-of (c2-0 / mean-01
                                  :ARG2 (c2-13 / meteor
                                               :mod (c2-5 / sweet)
                                               :mod (c2-4 / die-01))))
       :time (c2-10 / be-located-at-91
                    :ARG1 (c2-7 / and
                                :op1 (c2-6 / person
                                           :name (c2-1 / name
                                                       :op1 "Sharpton"))
                                :op2 (c2-9 / person
                                           :name (c2-2 / name
                                                       :op1 "amp"))
                                :op3 (c2-14 / person
                                            :name (c2-18 / name
                                                         :op1 "Jackson")))
                    :ARG2 (c2-11 / site))
       :time (c2-8 / now)
       :mod (c2-16 / all))

# ::snt A huge waste of time.
# ::tokens ["A", "huge", "waste", "of", "time", "."]
# ::lemmas ["a", "huge", "waste", "of", "time", "."]
(c3-1 / waste-01
      :ARG1 (c3-2 / time)
      :mod (c3-0 / huge))

# ::snt yep
# ::tokens ["yep"]
# ::lemmas ["yep"]
(c4-0 / yep
      :mode expressive)

# ::snt What he should do is remember Bill Cosby's Pound cake speech &amp; preach the truth
# ::tokens ["What", "he", "should", "do", "is", "remember", "Bill", "Cosby", "'s", "Pound", "cake", "speech", "&", "amp", ";", "preach", "the", "truth"]
# ::lemmas ["what", "he", "should", "do", "be", "remember", "Bill", "Cosby", "'s", "Pound", "cake", "speech", "&", "amp", ";", "preach", "the", "truth"]
(c5-5 / recommend-01
      :ARG1 (c5-9 / and
                  :op1 (c5-1 / remember-01
                             :ARG0 (c5-0 / he)
                             :ARG1 (c5-6 / speech
                                         :name (c5-2 / name
                                                     :op1 "Pound"
                                                     :op2 "cake")
                                         :poss (c5-4 / person
                                                     :name (c5-3 / name
                                                                 :op1 "Bill"
                                                                 :op2 "Cosby"))))
                  :op2 (c5-8 / preach-01
                             :ARG0 c5-0
                             :ARG1 (c5-7 / truth)))
      :ARG2 c5-0)

# ::snt it's about time. Where has he been? Glad to see civil rights leaders appearing.
# ::tokens ["it", "'s", "about", "time", ".", "Where", "has", "he", "been", "?", "Glad", "to", "see", "civil", "rights", "leaders", "appearing", "."]
# ::lemmas ["it", "be", "about", "time", ".", "where", "have", "he", "be", "?", "glad", "to", "see", "civil", "right", "leader", "appear", "."]
(c6-2 / multi-sentence
      :snt1 (c6-3 / be-temporally-at-91
                  :ARG1 (c6-5 / it)
                  :ARG2 (c6-13 / about-time))
      :snt2 (c6-0 / he
                  :location (c6-4 / amr-unknown))
      :snt3 (c6-10 / glad-02
                   :ARG0 (c6-12 / see-01
                                :ARG0 (c6-11 / i)
                                :ARG1 (c6-6 / appear-01
                                            :ARG1 (c6-7 / person
                                                        :ARG0-of (c6-1 / lead-02
                                                                       :ARG1 (c6-8 / right-05
                                                                                   :mod (c6-9 / civil))))))))

# ::snt Race Baiter Expect more businesses to be burned down Go back to Chicago and talk about all the blacks being killed
# ::tokens ["Race", "Baiter", "Expect", "more", "businesses", "to", "be", "burned", "down", "Go", "back", "to", "Chicago", "and", "talk", "about", "all", "the", "blacks", "being", "killed"]
# ::lemmas ["Race", "Baiter", "expect", "more", "business", "to", "be", "burn", "down", "go", "back", "to", "Chicago", "and", "talk", "about", "all", "the", "black", "be", "kill"]
(c7-5 / and
      :op1 (c7-7 / expect-01
                 :ARG0 (c7-1 / person
                             :ARG0-of (c7-3 / study-01
                                            :ARG1 (c7-10 / race)))
                 :ARG1 (c7-6 / burn-01
                             :ARG1 (c7-13 / business
                                          :mod (c7-0 / more))
                             :direction (c7-2 / down)))
      :op2 (c7-12 / and
                  :op1 (c7-11 / go-02
                              :ARG0 (c7-15 / you)
                              :ARG4 (c7-16 / city
                                           :name (c7-8 / name
                                                       :op1 "Chicago"))
                              :direction (c7-17 / back)
                              :mode imperative)
                  :op2 (c7-18 / talk-01
                              :ARG0 c7-15
                              :ARG1 (c7-14 / kill-01
                                           :ARG1 (c7-4 / person
                                                       :ARG1-of (c7-19 / black-05)
                                                       :mod (c7-9 / all)))
                              :mode imperative)))

# ::snt &gt;awwww laawwwdddd! jessaree gonna save me!,,rib sauce swilling fake.
# ::tokens ["&", "gt;awwww", "laawwwdddd", "!", "jessaree", "gon", "na", "save", "me!,,rib", "sauce", "swilling", "fake", "."]
# ::lemmas ["&", "gt;awwww", "laawwwdddd", "!", "jessaree", "going", "to", "save", "me!,,rib", "sauce", "swill", "fake", "."]
(c8-1 / multi-sentence
      :snt1 (c8-10 / and
                   :op2 (c8-9 / string-entity
                              :value "&gt;awwww laawwwdddd"))
      :snt2 (c8-4 / save-02
                  :ARG0 (c8-7 / person
                              :name (c8-6 / name
                                          :op1 "Jessaree"))
                  :ARG1 (c8-5 / i))
      :snt3 (c8-0 / fake-02
                  :ARG1 (c8-2 / sauce
                              :mod (c8-8 / rib)
                              :ARG0-of (c8-3 / swill-01))))

# ::snt : Rev Jesse Jackson leading procession to shooting site.
# ::tokens [":", "Rev", "Jesse", "Jackson", "leading", "procession", "to", "shooting", "site", "."]
# ::lemmas [":", "Rev", "Jesse", "Jackson", "lead", "procession", "to", "shoot", "site", "."]
(c9-1 / lead-01
      :ARG0 (c9-4 / person
                  :name (c9-3 / name
                              :op1 "Jesse"
                              :op2 "Jackson")
                  :ARG0-of (c9-0 / have-org-role-91
                                 :ARG2 (c9-5 / reverend)))
      :ARG1 (c9-7 / procession)
      :ARG4 (c9-6 / site
                  :location-of (c9-2 / shoot-02)))

# ::snt what a douchbag
# ::tokens ["what", "a", "douchbag"]
# ::lemmas ["what", "a", "douchbag"]
(c10-1 / douchbag
       :degree (c10-0 / so))

# ::snt Lining those pockets anyway he can and when he leaves people in will have same problems
# ::tokens ["Lining", "those", "pockets", "anyway", "he", "can", "and", "when", "he", "leaves", "people", "in", "will", "have", "same", "problems"]
# ::lemmas ["line", "those", "pocket", "anyway", "he", "can", "and", "when", "he", "leave", "people", "in", "will", "have", "same", "problem"]
(c11-11 / and
        :op1 (c11-6 / possible-01
                    :ARG1 (c11-1 / line-pocket-02
                                 :ARG0 (c11-0 / he)
                                 :ARG1 (c11-9 / that))
                    :mod (c11-4 / anyway))
        :op2 (c11-2 / have-03
                    :ARG0 (c11-10 / person)
                    :ARG1 (c11-3 / problem
                                 :ARG1-of (c11-8 / same-01))
                    :time (c11-7 / leave-15
                                 :ARG0 c11-0
                                 :ARG1 (c11-5 / inside))))

# ::snt is he in "Hymie town?"
# ::tokens ["is", "he", "in", "\"", "Hymie", "town", "?", "\""]
# ::lemmas ["be", "he", "in", "\"", "Hymie", "town", "?", "\""]
(c12-0 / he
       :location (c12-2 / town
                        :name (c12-1 / name
                                     :op1 "Hymie"))
       :polarity (c12-3 / amr-unknown))

# ::snt Race pimp finally found his walking shoes it seems.
# ::tokens ["Race", "pimp", "finally", "found", "his", "walking", "shoes", "it", "seems", "."]
# ::lemmas ["race", "pimp", "finally", "find", "his", "walking", "shoe", "it", "seem", "."]
(c13-1 / find-01
       :ARG0 (c13-4 / pimp
                    :ARG0-of (c13-5 / race-02))
       :ARG1 (c13-6 / shoe
                    :purpose (c13-0 / walk-01)
                    :poss c13-4)
       :time (c13-3 / final)
       :ARG1-of (c13-2 / seem-01))

# ::snt And, then we have this idiot.
# ::tokens ["And", ",", "then", "we", "have", "this", "idiot", "."]
# ::lemmas ["and", ",", "then", "we", "have", "this", "idiot", "."]
(c14-5 / and
       :op2 (c14-0 / have-03
                   :ARG0 (c14-1 / we)
                   :ARG1 (c14-2 / idiot
                                :mod (c14-4 / this))
                   :time (c14-3 / then)))

# ::snt Id Trade Jackson Or Sharpton To Get The Kid Back.
# ::tokens ["I", "d", "Trade", "Jackson", "Or", "Sharpton", "To", "Get", "The", "Kid", "Back", "."]
# ::lemmas ["I", "d", "Trade", "Jackson", "or", "Sharpton", "to", "get", "the", "Kid", "back", "."]
(c16-7 / trade-01
       :ARG0 (c16-1 / i)
       :ARG1 (c16-0 / or
                    :op1 (c16-5 / person
                                :name (c16-3 / name
                                             :op1 "Jackson"))
                    :op2 (c16-8 / person
                                :name (c16-4 / name
                                             :op1 "Sharpton")))
       :ARG3 (c16-6 / get-back-09
                    :ARG0 c16-0
                    :ARG1 (c16-2 / kid)))

# ::snt A th grade school line is what this is.....follow me class
# ::tokens ["A", "th", "grade", "school", "line", "is", "what", "this", "is", ".....", "follow", "me", "class"]
# ::lemmas ["a", "th", "grade", "school", "line", "be", "what", "this", "be", ".....", "follow", "i", "class"]
(c17-2 / multi-sentence
       :snt1 (c17-1 / line
                    :mod (c17-6 / school
                                :mod (c17-5 / grade))
                    :domain (c17-7 / this))
       :snt2 (c17-3 / follow-02
                    :ARG0 (c17-0 / you)
                    :ARG1 (c17-4 / class)
                    :mode imperative))

# ::snt The call number is -712-432-3082, and the access code is . :45p tonight EDT!!!
# ::tokens ["The", "call", "number", "is", "-712", "-", "432", "-", "3082", ",", "and", "the", "access", "code", "is", ".", ":", "45p", "tonight", "EDT", "!", "!", "!"]
# ::lemmas ["the", "call", "number", "be", "-712", "-", "432", "-", "3082", ",", "and", "the", "access", "code", "be", ".", ":", "45p", "tonight", "EDT", "!", "!", "!"]
(c19-7 / and
       :op1 (c19-1 / number
                   :mod (c19-4 / call-02)
                   :value "712-432-3082")
       :op2 (c19-3 / code
                   :mod (c19-0 / access-01)
                   :time (c19-5 / date-entity
                                :dayperiod (c19-2 / night)
                                :mod (c19-6 / today)
                                :time "0:45"
                                :timezone "EDT")))

# ::snt go fuck yourself J.J.! You opportunist prick! Im laughing at the thought of you!
# ::tokens ["go", "fuck", "yourself", "J.J.", "!", "You", "opportunist", "prick", "!", "I", "m", "laughing", "at", "the", "thought", "of", "you", "!"]
# ::lemmas ["go", "fuck", "yourself", "J.J.", "!", "you", "opportunist", "prick", "!", "i", "m", "laugh", "at", "the", "thought", "of", "you", "!"]
(c20-2 / multi-sentence
       :snt1 (c20-9 / say-01
                    :ARG1 (c20-8 / go-05
                                 :ARG0 (c20-7 / person
                                              :name (c20-6 / name
                                                           :op1 "J."
                                                           :op2 "J."))
                                 :ARG1 (c20-1 / fuck-01
                                              :ARG0 c20-7
                                              :ARG1 c20-7)
                                 :mode imperative)
                    :ARG2 c20-7)
       :snt2 (c20-0 / you
                    :mod (c20-11 / prick
                                 :mod (c20-4 / opportunist)))
       :snt3 (c20-3 / laugh-01
                    :ARG0 (c20-5 / i)
                    :ARG2 (c20-10 / think-01
                                  :ARG0 c20-5
                                  :ARG1 c20-0)))

# ::snt : Rev Jesse Jackson leading procession to shooting site. Boring
# ::tokens [":", "Rev", "Jesse", "Jackson", "leading", "procession", "to", "shooting", "site", ".", "Boring"]
# ::lemmas [":", "Rev", "Jesse", "Jackson", "lead", "procession", "to", "shoot", "site", ".", "boring"]
(c21-2 / multi-sentence
       :snt1 (c21-1 / lead-01
                    :ARG0 (c21-6 / person
                                 :name (c21-5 / name
                                              :op1 "Jesse"
                                              :op2 "Jackson")
                                 :ARG0-of (c21-0 / have-org-role-91
                                                 :ARG2 (c21-7 / reverend)))
                    :ARG1 (c21-9 / procession)
                    :ARG2 (c21-8 / site
                                 :location-of (c21-4 / shoot-02)))
       :snt2 (c21-3 / boring-00))

# ::snt POor man has seen so much yet he still amazes me!
# ::tokens ["POor", "man", "has", "seen", "so", "much", "yet", "he", "still", "amazes", "me", "!"]
# ::lemmas ["poor", "man", "have", "see", "so", "much", "yet", "he", "still", "amaze", "i", "!"]
(c22-6 / see-01
       :ARG0 (c22-5 / person
                    :name (c22-4 / name
                                 :op1 "Pooor"
                                 :op2 "man"))
       :ARG1 (c22-1 / much
                    :degree (c22-2 / so))
       :concession-of (c22-7 / amaze-01
                             :ARG0 c22-5
                             :ARG1 (c22-3 / i)
                             :mod (c22-0 / still)))

# ::snt any where there's a camera you'll find Jesse Jackson
# ::tokens ["any", "where", "there", "'s", "a", "camera", "you", "'ll", "find", "Jesse", "Jackson"]
# ::lemmas ["any", "where", "there", "be", "a", "camera", "you", "'ll", "find", "Jesse", "Jackson"]
(c23-1 / find-01
       :ARG0 (c23-0 / you)
       :ARG1 (c23-3 / person
                    :name (c23-2 / name
                                 :op1 "Jesse"
                                 :op2 "Jackson"))
       :location (c23-5 / anywhere
                        :location-of (c23-4 / camera)))

# ::snt rev Al and rev Jackson take your race baiting show somewhere else. You ARE the problem!dividers
# ::tokens ["rev", "Al", "and", "rev", "Jackson", "take", "your", "race", "baiting", "show", "somewhere", "else", ".", "You", "ARE", "the", "problem!dividers"]
# ::lemmas ["rev", "Al", "and", "rev", "Jackson", "take", "your", "race", "baiting", "show", "somewhere", "else", ".", "you", "be", "the", "problem!divider"]
(c24-1 / multi-sentence
       :snt1 (c24-13 / take-01
                     :ARG0 (c24-15 / and
                                   :op1 (c24-8 / person
                                               :name (c24-6 / name
                                                            :op1 "rev"
                                                            :op2 "Al"))
                                   :op2 (c24-14 / person
                                                :name (c24-7 / name
                                                             :op1 "Jackson")))
                     :ARG1 (c24-11 / show-04
                                   :ARG1 (c24-3 / bait-01
                                                :ARG2 (c24-9 / race))
                                   :poss c24-15)
                     :ARG3 (c24-4 / somewhere
                                  :mod (c24-5 / else)))
       :snt2 (c24-2 / problem
                    :domain (c24-0 / you))
       :snt3 (c24-12 / person
                     :ARG0-of (c24-10 / divide-02)))

# ::snt Rev Jesse Jackson leading procession to shooting site.
# ::tokens ["Rev", "Jesse", "Jackson", "leading", "procession", "to", "shooting", "site", "."]
# ::lemmas ["Rev", "Jesse", "Jackson", "lead", "procession", "to", "shoot", "site", "."]
(c25-1 / lead-01
       :ARG0 (c25-4 / person
                    :name (c25-3 / name
                                 :op1 "Jesse"
                                 :op2 "Jackson")
                    :ARG0-of (c25-0 / have-org-role-91
                                    :ARG2 (c25-5 / reverend)))
       :ARG1 (c25-7 / procession)
       :ARG4 (c25-6 / site
                    :location-of (c25-2 / shoot-02)))

# ::snt : Rev Jesse Jackson leading procession to shooting site.
# ::tokens [":", "Rev", "Jesse", "Jackson", "leading", "procession", "to", "shooting", "site", "."]
# ::lemmas [":", "Rev", "Jesse", "Jackson", "lead", "procession", "to", "shoot", "site", "."]
(c26-1 / lead-01
       :ARG0 (c26-4 / person
                    :name (c26-3 / name
                                 :op1 "Jesse"
                                 :op2 "Jackson")
                    :ARG0-of (c26-0 / have-org-role-91
                                    :ARG2 (c26-5 / reverend)))
       :ARG1 (c26-7 / procession)
       :ARG4 (c26-6 / site
                    :location-of (c26-2 / shoot-02)))

# ::snt All this guy does is stir up trouble he should go home
# ::tokens ["All", "this", "guy", "does", "is", "stir", "up", "trouble", "he", "should", "go", "home"]
# ::lemmas ["all", "this", "guy", "do", "be", "stir", "up", "trouble", "he", "should", "go", "home"]
(c27-8 / and
       :op1 (c27-6 / stir-up-04
                   :ARG0 (c27-5 / guy
                                :mod (c27-7 / this))
                   :ARG1 (c27-2 / in-trouble-02
                                :ARG1 c27-5)
                   :mod (c27-1 / all))
       :op2 (c27-3 / recommend-01
                   :ARG1 (c27-4 / go-02
                                :ARG0 c27-5
                                :ARG4 (c27-0 / home))))

# ::snt . Is his mistress with him? Or his son? Oh wait, he's in prison...
# ::tokens [".", "Is", "his", "mistress", "with", "him", "?", "Or", "his", "son", "?", "Oh", "wait", ",", "he", "'s", "in", "prison", "..."]
# ::lemmas [".", "be", "his", "mistress", "with", "he", "?", "or", "his", "son", "?", "oh", "wait", ",", "he", "be", "in", "prison", "..."]
(c28-4 / multi-sentence
       :snt1 (c28-10 / person
                     :polarity (c28-14 / amr-unknown)
                     :ARG0-of (c28-0 / have-rel-role-91
                                     :ARG1 (c28-16 / he)
                                     :ARG2 (c28-11 / mistress))
                     :accompanier (c28-9 / he))
       :snt2 (c28-8 / or
                    :op2 (c28-15 / person
                                 :ARG0-of (c28-13 / have-rel-role-91
                                                  :ARG1 c28-9
                                                  :ARG2 (c28-12 / son)))
                    :polarity c28-14)
       :snt3 (c28-1 / wait-01
                    :ARG1 (c28-2 / you)
                    :mod (c28-3 / oh))
       :snt4 (c28-7 / be-located-at-91
                    :ARG1 (c28-5 / he)
                    :ARG2 (c28-6 / prison)))
