# ::snt Dont worry folks Hodgie is shooting at us but heck community college is free
# ::tokens ["Do", "nt", "worry", "folks", "Hodgie", "is", "shooting", "at", "us", "but", "heck", "community", "college", "is", "free"]
# ::lemmas ["do", "not", "worry", "folk", "Hodgie", "be", "shoot", "at", "we", "but", "heck", "community", "college", "be", "free"]
(c2-12 / say-01
       :ARG0 (c2-4 / i)
       :ARG1 (c2-10 / contrast-01
                    :ARG1 (c2-1 / worry-01
                                :ARG0 (c2-3 / shoot-02
                                            :ARG0 (c2-8 / person
                                                        :name (c2-6 / name
                                                                    :op1 "Hodgie"))
                                            :ARG2 (c2-5 / we))
                                :ARG1 (c2-2 / folk)
                                :polarity -)
                    :ARG2 (c2-7 / free-03
                                :ARG1 (c2-9 / college
                                            :mod (c2-11 / community))
                                :mod (c2-0 / heck
                                           :mode expressive)))
       :ARG2 c2-2)

# ::snt Doesn't the world know events such as this should only occur right after one of the administration scandal makes the news?
# ::tokens ["Does", "n't", "the", "world", "know", "events", "such", "as", "this", "should", "only", "occur", "right", "after", "one", "of", "the", "administration", "scandal", "makes", "the", "news", "?"]
# ::lemmas ["do", "not", "the", "world", "know", "event", "such", "as", "this", "should", "only", "occur", "right", "after", "one", "of", "the", "administration", "scandal", "make", "the", "news", "?"]
(c3-8 / know-01
      :ARG0 (c3-0 / world)
      :ARG1 (c3-11 / recommend-01
                   :ARG1 (c3-3 / event
                               :example (c3-13 / this)
                               :time (c3-14 / after
                                            :op1 (c3-1 / make-18
                                                       :ARG0 (c3-12 / scandal
                                                                    :ARG1-of (c3-7 / include-91
                                                                                   :ARG2 (c3-4 / scandal
                                                                                               :mod (c3-6 / administrate-01)))
                                                                    :quant 1)
                                                       :ARG1 (c3-9 / news))
                                            :mod (c3-10 / right))
                               :mod (c3-2 / only)))
      :ARG1-of (c3-5 / request-confirmation-91)
      :polarity -)

# ::snt ...... !.. ( )
# ::tokens ["......", "!", "..", "(", ")"]
# ::lemmas ["......", "!", "..", "(", ")"]
(c4-0 / amr-empty)

# ::snt Damn real world events... fucking bullshit.
# ::tokens ["Damn", "real", "world", "events", "...", "fucking", "bullshit", "."]
# ::lemmas ["damn", "real", "world", "event", "...", "fucking", "bullshit", "."]
(c6-6 / and
      :op1 (c6-3 / event
                 :mod (c6-0 / world
                            :ARG1-of (c6-5 / real-04))
                 :mod (c6-4 / damn))
      :op2 (c6-2 / bullshit
                 :mod (c6-1 / fucking)))

# ::snt What if we make it out to be his fault? Would that help?
# ::tokens ["What", "if", "we", "make", "it", "out", "to", "be", "his", "fault", "?", "Would", "that", "help", "?"]
# ::lemmas ["what", "if", "we", "make", "it", "out", "to", "be", "his", "fault", "?", "would", "that", "help", "?"]
(c7-3 / multi-sentence
      :snt1 (c7-0 / have-condition-91
                  :ARG1 (c7-9 / amr-unknown)
                  :ARG2 (c7-7 / make-out-23
                              :ARG0 (c7-1 / we)
                              :ARG1 (c7-5 / it)
                              :ARG2 (c7-2 / fault-01
                                          :ARG1 (c7-4 / he)
                                          :ARG2 c7-5)))
      :snt2 (c7-6 / help-01
                  :ARG0 (c7-8 / that)
                  :polarity c7-9))

# ::snt So true.
# ::tokens ["So", "true", "."]
# ::lemmas ["so", "true", "."]
(c8-1 / true-01
      :degree (c8-0 / so))

# ::snt Silence is Golden.
# ::tokens ["Silence", "is", "Golden", "."]
# ::lemmas ["silence", "be", "Golden", "."]
(c9-1 / Golden
      :domain (c9-0 / silence-01))

# ::snt -Poor Baracki Odumbo, it must be so frustrating when the world doesn't revolve around him.
# ::tokens ["-Poor", "Baracki", "Odumbo", ",", "it", "must", "be", "so", "frustrating", "when", "the", "world", "does", "n't", "revolve", "around", "him", "."]
# ::lemmas ["-poor", "Baracki", "Odumbo", ",", "it", "must", "be", "so", "frustrating", "when", "the", "world", "do", "not", "revolve", "around", "he", "."]
(c10-2 / infer-01
       :ARG1 (c10-1 / frustrate-01
                    :ARG0 (c10-5 / revolve-06
                                 :ARG1 (c10-0 / world)
                                 :ARG2 (c10-4 / person
                                              :name (c10-3 / name
                                                           :op1 "Baracki"
                                                           :op2 "Odhumbo")
                                              :mod (c10-7 / poor))
                                 :polarity -)
                    :degree (c10-6 / so)))

# ::snt No, now that it's over, the attention will be back on "his" scandals until another distraction.
# ::tokens ["No", ",", "now", "that", "it", "'s", "over", ",", "the", "attention", "will", "be", "back", "on", "\"", "his", "\"", "scandals", "until", "another", "distraction", "."]
# ::lemmas ["no", ",", "now", "that", "it", "be", "over", ",", "the", "attention", "will", "be", "back", "on", "\"", "his", "\"", "scandal", "until", "another", "distraction", "."]
(c11-2 / back-02
       :ARG0 (c11-9 / attend-02)
       :ARG1 (c11-8 / scandal
                    :poss (c11-0 / he))
       :time (c11-1 / until
                    :op1 (c11-7 / distract-01
                                :mod (c11-4 / another)))
       :time (c11-6 / now
                    :time-of (c11-3 / over-01
                                    :ARG1 (c11-5 / it))))

# ::snt good time for a vacation. Nothing happening in the world. Has he a tee time?
# ::tokens ["good", "time", "for", "a", "vacation", ".", "Nothing", "happening", "in", "the", "world", ".", "Has", "he", "a", "tee", "time", "?"]
# ::lemmas ["good", "time", "for", "a", "vacation", ".", "nothing", "happen", "in", "the", "world", ".", "have", "he", "a", "tee", "time", "?"]
(c12-2 / multi-sentence
       :snt1 (c12-9 / time
                    :ARG1-of (c12-7 / good-02
                                    :ARG2 (c12-5 / vacation-01)))
       :snt2 (c12-3 / event
                    :mod (c12-4 / nothing)
                    :location (c12-1 / world))
       :snt3 (c12-8 / time
                    :polarity (c12-10 / amr-unknown)
                    :mod (c12-6 / tee)
                    :poss (c12-0 / he)))

# ::snt Did say that? He's lying. B.Hussein's a Political Islamic Jihadist,himself. U.S.Public Enemy .
# ::tokens ["Did", "say", "that", "?", "He", "'s", "lying", ".", "B.Hussein", "'s", "a", "Political", "Islamic", "Jihadist", ",", "himself", ".", "U.S.Public", "Enemy", "."]
# ::lemmas ["do", "say", "that", "?", "he", "be", "lie", ".", "B.Hussein", "'s", "a", "Political", "Islamic", "Jihadist", ",", "himself", ".", "U.S.Public", "Enemy", "."]
(c13-0 / multi-sentence
       :snt1 (c13-3 / say-01
                    :polarity (c13-6 / amr-unknown)
                    :ARG1 (c13-18 / that))
       :snt2 (c13-8 / lie-08
                    :ARG0 (c13-7 / he))
       :snt3 (c13-15 / and
                     :op1 (c13-2 / person
                                 :mod (c13-13 / religious-group
                                              :name (c13-12 / name
                                                            :op1 "Islam"))
                                 :mod (c13-4 / politics)
                                 :domain (c13-9 / person
                                                :name (c13-16 / name
                                                              :op1 "B."
                                                              :op2 "Hussein")
                                                :op2-of c13-15)))
       :snt4 (c13-14 / person
                     :ARG0-of (c13-5 / have-rel-role-91
                                     :ARG1 (c13-17 / country
                                                   :name (c13-1 / name
                                                                :op1 "U.S."))
                                     :ARG2 (c13-11 / enemy
                                                   :ARG1-of (c13-10 / public-02)))))

# ::snt . But, but, I've got !!! Look! Look! Everybody! Hello!
# ::tokens [".", "But", ",", "but", ",", "I", "'ve", "got", "!", "!", "!", "Look", "!", "Look", "!", "Everybody", "!", "Hello", "!"]
# ::lemmas [".", "but", ",", "but", ",", "i", "'ve", "get", "!", "!", "!", "look", "!", "look", "!", "everybody", "!", "hello", "!"]
(c14-3 / multi-sentence
       :snt1 (c14-6 / contrast-01
                    :ARG2 (c14-0 / have-03
                                 :ARG0 (c14-5 / i)))
       :snt2 (c14-2 / look-01
                    :ARG0 (c14-1 / you)
                    :mode imperative)
       :snt3 (c14-7 / look-01
                    :ARG0 (c14-9 / you)
                    :mode imperative)
       :snt4 (c14-4 / everybody)
       :snt5 (c14-8 / Hello
                    :mode expressive))

# ::snt . Cut all aid to muslim countries, close all mosques. Stop all welfare, medical for this murderous people.
# ::tokens [".", "Cut", "all", "aid", "to", "muslim", "countries", ",", "close", "all", "mosques", ".", "Stop", "all", "welfare", ",", "medical", "for", "this", "murderous", "people", "."]
# ::lemmas [".", "cut", "all", "aid", "to", "muslim", "country", ",", "close", "all", "mosque", ".", "stop", "all", "welfare", ",", "medical", "for", "this", "murderous", "people", "."]
(c15-0 / multi-sentence
       :snt1 (c15-16 / cut-01
                     :ARG0 (c15-14 / you)
                     :ARG1 (c15-4 / aid-01
                                  :ARG2 (c15-2 / country
                                               :mod (c15-9 / religious-group
                                                           :name (c15-6 / name
                                                                        :op1 "Muslim")))
                                  :mod (c15-11 / all))
                     :mode imperative)
       :snt2 (c15-13 / close-01
                     :ARG0 c15-14
                     :ARG1 (c15-8 / mosque
                                  :mod (c15-7 / all))
                     :mode imperative)
       :snt3 (c15-3 / stop-01
                    :ARG0 (c15-17 / you)
                    :ARG1 (c15-18 / and
                                  :op1 (c15-10 / welfare
                                               :mod (c15-15 / all))
                                  :op2 (c15-5 / medical
                                              :beneficiary (c15-1 / person
                                                                  :ARG0-of (c15-12 / murder-01)
                                                                  :mod (c15-19 / this))))
                    :mode imperative))

# ::snt He really needs to consider it all. Which golf course is best for that?
# ::tokens ["He", "really", "needs", "to", "consider", "it", "all", ".", "Which", "golf", "course", "is", "best", "for", "that", "?"]
# ::lemmas ["he", "really", "need", "to", "consider", "it", "all", ".", "which", "golf", "course", "be", "good", "for", "that", "?"]
(c16-2 / multi-sentence
       :snt1 (c16-5 / need-01
                    :ARG0 (c16-0 / he)
                    :ARG1 (c16-8 / consider-02
                                 :ARG0 c16-0
                                 :ARG1 (c16-4 / it
                                              :mod (c16-13 / all)))
                    :degree (c16-7 / really))
       :snt2 (c16-1 / have-degree-91
                    :ARG1 (c16-9 / course
                                 :mod (c16-10 / golf-01)
                                 :mod (c16-3 / amr-unknown))
                    :ARG2 (c16-11 / good-04
                                  :ARG2 (c16-12 / that))
                    :ARG3 (c16-6 / most)
                    :ARG5 c16-9
                    :mod c16-10))

# ::snt Maybe he should become a black muslim. ---- Oh. ---- Wait ...???
# ::tokens ["Maybe", "he", "should", "become", "a", "black", "muslim", ".", "----", "Oh", ".", "----", "Wait", "...", "?", "?", "?"]
# ::lemmas ["maybe", "he", "should", "become", "a", "black", "muslim", ".", "----", "oh", ".", "----", "wait", "...", "?", "?", "?"]
(c17-2 / multi-sentence
       :snt1 (c17-7 / possible-01
                    :ARG1 (c17-8 / recommend-01
                                 :ARG1 (c17-3 / become-01
                                              :ARG1 (c17-0 / he)
                                              :ARG2 (c17-10 / person
                                                            :mod (c17-5 / religious-group
                                                                        :name (c17-6 / name
                                                                                     :op1 "Muslim"))
                                                            :ARG1-of (c17-9 / black-05)))))
       :snt2 (c17-4 / oh
                    :mode expressive)
       :snt3 (c17-1 / wait-01
                    :polarity (c17-11 / amr-unknown)
                    :mode expressive))

# ::snt The way he plays golf, he should be glad.
# ::tokens ["The", "way", "he", "plays", "golf", ",", "he", "should", "be", "glad", "."]
# ::lemmas ["the", "way", "he", "play", "golf", ",", "he", "should", "be", "glad", "."]
(c18-3 / recommend-01
       :ARG1 (c18-5 / glad-02
                    :ARG0 (c18-1 / way
                                 :manner-of (c18-2 / play-01
                                                   :ARG0 (c18-0 / he)
                                                   :ARG1 (c18-4 / golf-01)))
                    :ARG1 c18-0))

# ::snt He should fly over and offer himself in exchange of the hostage!
# ::tokens ["He", "should", "fly", "over", "and", "offer", "himself", "in", "exchange", "of", "the", "hostage", "!"]
# ::lemmas ["he", "should", "fly", "over", "and", "offer", "himself", "in", "exchange", "of", "the", "hostage", "!"]
(c19-6 / recommend-01
       :ARG1 (c19-7 / and
                    :op1 (c19-1 / fly-01
                                :ARG1 (c19-0 / he)
                                :destination (c19-4 / over))
                    :op2 (c19-2 / offer-01
                                :ARG0 c19-0
                                :ARG1 c19-0
                                :ARG3-of (c19-5 / exchange-01
                                                :ARG0 c19-0
                                                :ARG1 (c19-3 / hostage)))))
