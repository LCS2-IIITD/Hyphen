# ::snt MT : A320 D-AIPX is one of the oldest A320 and was delivered in .
# ::tokens ["MT", ":", "A320", "D", "-", "AIPX", "is", "one", "of", "the", "oldest", "A320", "and", "was", "delivered", "in", "."]
# ::lemmas ["MT", ":", "A320", "D", "-", "AIPX", "be", "one", "of", "the", "old", "A320", "and", "be", "deliver", "in", "."]
(c2-1 / multi-sentence
      :snt1 (c2-3 / byline-91
                  :ARG0 (c2-8 / person
                              :name (c2-6 / name
                                          :op1 "MT")))
      :snt2 (c2-14 / and
                   :op1 (c2-5 / include-91
                              :ARG1 (c2-13 / product
                                           :name (c2-7 / name
                                                       :op1 "A320"
                                                       :op2 "D-AIPX"))
                              :ARG2 (c2-2 / product
                                          :mod (c2-4 / old
                                                     :ARG2-of (c2-0 / have-degree-91
                                                                    :ARG1 c2-2
                                                                    :ARG3 (c2-9 / most)))))
                   :op2 (c2-10 / deliver-01
                               :ARG1 c2-13
                               :location (c2-11 / country
                                                :name (c2-12 / name
                                                             :op1 "India")))))

# ::snt I thought it happens only in poor countries.
# ::tokens ["I", "thought", "it", "happens", "only", "in", "poor", "countries", "."]
# ::lemmas ["i", "think", "it", "happen", "only", "in", "poor", "country", "."]
(c3-5 / think-01
      :ARG0 (c3-1 / i)
      :ARG1 (c3-4 / it
                  :location (c3-3 / country
                                  :mod (c3-2 / poor)
                                  :mod (c3-0 / only))))

# ::snt because it has transponder which sends unique signal from aircraft with speed height information in realtime
# ::tokens ["because", "it", "has", "transponder", "which", "sends", "unique", "signal", "from", "aircraft", "with", "speed", "height", "information", "in", "realtime"]
# ::lemmas ["because", "it", "have", "transponder", "which", "send", "unique", "signal", "from", "aircraft", "with", "speed", "height", "information", "in", "realtime"]
(c4-7 / cause-01
      :ARG0 (c4-0 / have-03
                  :ARG0 (c4-5 / it)
                  :ARG1 (c4-10 / transponder
                               :ARG0-of (c4-9 / send-01
                                              :ARG1 (c4-4 / signal
                                                          :ARG1-of (c4-3 / unique-01)
                                                          :source (c4-11 / aircraft)
                                                          :ARG0-of c4-0
                                                          :ARG1 (c4-8 / information
                                                                      :topic (c4-1 / high-02
                                                                                   :ARG1 (c4-2 / speed)))
                                                          :manner (c4-6 / real-04))))))

# ::snt Excuse me, one more question. How can we know this plane is the one that has crashed?
# ::tokens ["Excuse", "me", ",", "one", "more", "question", ".", "How", "can", "we", "know", "this", "plane", "is", "the", "one", "that", "has", "crashed", "?"]
# ::lemmas ["excuse", "i", ",", "one", "more", "question", ".", "how", "can", "we", "know", "this", "plane", "be", "the", "one", "that", "have", "crash", "?"]
(c5-2 / multi-sentence
      :snt1 (c5-3 / excuse-01
                  :ARG0 (c5-0 / you)
                  :ARG1 (c5-5 / i)
                  :mode imperative)
      :snt2 (c5-4 / question-01
                  :ARG1 (c5-6 / possible-01
                              :ARG1 (c5-10 / know-01
                                           :ARG0 (c5-1 / we)
                                           :ARG1 (c5-8 / crash-01
                                                       :ARG1 (c5-11 / plane
                                                                    :mod (c5-9 / this)))
                                           :manner (c5-12 / amr-unknown)))
                  :mod (c5-7 / more)
                  :quant 1))

# ::snt i kniw..not just us, clearly and lets wait to hear clearly why this crashed.
# ::tokens ["i", "kniw", "..", "not", "just", "us", ",", "clearly", "and", "lets", "wait", "to", "hear", "clearly", "why", "this", "crashed", "."]
# ::lemmas ["i", "kniw", "..", "not", "just", "we", ",", "clearly", "and", "let", "wait", "to", "hear", "clearly", "why", "this", "crash", "."]
(c6-11 / and
       :op1 (c6-10 / know-01
                   :ARG0 (c6-3 / i))
       :op2 (c6-6 / clear-06
                  :ARG1 (c6-1 / we
                              :mod (c6-0 / just)
                              :polarity -))
       :op3 (c6-4 / wait-01
                  :ARG1 c6-1
                  :mode imperative)
       :ARG2 (c6-2 / hear-01
                   :ARG0 c6-1
                   :ARG1 (c6-8 / thing
                               :ARG0-of (c6-5 / cause-01
                                              :ARG1 (c6-7 / crash-01
                                                          :ARG1 (c6-9 / this))))
                   :ARG1-of (c6-12 / clear-06)))

# ::snt BREAKING - Germanwings plane crashes in France, up to believed dead
# ::tokens ["BREAKING", "-", "Germanwings", "plane", "crashes", "in", "France", ",", "up", "to", "believed", "dead"]
# ::lemmas ["BREAKING", "-", "Germanwings", "plane", "crash", "in", "France", ",", "up", "to", "believe", "dead"]
(c7-1 / break-01
      :ARG1 (c7-6 / crash-01
                  :ARG1 (c7-4 / plane
                              :poss (c7-5 / company
                                          :name (c7-2 / name
                                                      :op1 "Germanwings")))
                  :location (c7-9 / country
                                  :name (c7-3 / name
                                              :op1 "France"))
                  :ARG0-of (c7-11 / cause-01
                                  :ARG1 (c7-7 / believe-01
                                              :ARG1 (c7-8 / die-01
                                                          :ARG1 (c7-10 / person
                                                                       :quant (c7-0 / up-to
                                                                                    :op1 1)))))))

# ::snt can you tell what it was squawking before it disappeared?
# ::tokens ["can", "you", "tell", "what", "it", "was", "squawking", "before", "it", "disappeared", "?"]
# ::lemmas ["can", "you", "tell", "what", "it", "be", "squawk", "before", "it", "disappear", "?"]
(c8-3 / possible-01
      :polarity (c8-8 / amr-unknown)
      :ARG1 (c8-7 / tell-01
                  :ARG0 (c8-0 / you)
                  :ARG1 (c8-5 / thing
                              :ARG1-of (c8-6 / squawk-01
                                             :ARG0 (c8-2 / it)
                                             :time (c8-1 / before
                                                         :op1 (c8-4 / disappear-01
                                                                    :ARG1 c8-2))))))

# ::snt The actual plane.
# ::tokens ["The", "actual", "plane", "."]
# ::lemmas ["the", "actual", "plane", "."]
(c9-0 / plane
      :ARG1-of (c9-1 / actual-02))

# ::snt We have it in our database, but it's also available from several public databases
# ::tokens ["We", "have", "it", "in", "our", "database", ",", "but", "it", "'s", "also", "available", "from", "several", "public", "databases"]
# ::lemmas ["we", "have", "it", "in", "our", "database", ",", "but", "it", "be", "also", "available", "from", "several", "public", "database"]
(c10-7 / contrast-01
       :ARG1 (c10-0 / have-03
                    :ARG0 (c10-1 / we)
                    :ARG1 (c10-4 / it)
                    :location (c10-6 / database
                                     :poss c10-1))
       :ARG2 (c10-9 / available-02
                    :ARG2 c10-4
                    :mod (c10-3 / also)
                    :source (c10-2 / database
                                   :ARG1-of (c10-5 / public-02)
                                   :quant (c10-8 / several))))

# ::snt ex lufthansa plane called "mannheim"
# ::tokens ["ex", "lufthansa", "plane", "called", "\"", "mannheim", "\""]
# ::lemmas ["ex", "lufthansa", "plane", "call", "\"", "mannheim", "\""]
(c12-1 / plane
       :name (c12-0 / name
                    :op1 "Lufthansa")
       :ARG1-of (c12-2 / call-01
                       :ARG2 (c12-3 / name
                                    :op1 "mannheim")))

# ::snt Does it look like a decompression? Doesn't look like it was overspeeding at the last point seen on flightradar.
# ::tokens ["Does", "it", "look", "like", "a", "decompression", "?", "Does", "n't", "look", "like", "it", "was", "overspeeding", "at", "the", "last", "point", "seen", "on", "flightradar", "."]
# ::lemmas ["do", "it", "look", "like", "a", "decompression", "?", "do", "not", "look", "like", "it", "be", "overspeede", "at", "the", "last", "point", "see", "on", "flightradar", "."]
(c13-2 / multi-sentence
       :snt1 (c13-1 / look-02
                    :polarity (c13-12 / amr-unknown)
                    :ARG0 (c13-4 / it)
                    :ARG1 (c13-7 / decompress-01))
       :snt2 (c13-9 / look-02
                    :ARG0 (c13-8 / it)
                    :ARG1 (c13-3 / overspeede-01
                                 :ARG0 c13-8
                                 :time (c13-6 / point
                                              :mod (c13-0 / last)
                                              :ARG1-of (c13-10 / see-01
                                                               :location (c13-11 / publication
                                                                                 :name (c13-5 / name
                                                                                              :op1 "Flightradar")))))
                    :polarity -))

# ::snt I thought only we use overaged aircrafts.
# ::tokens ["I", "thought", "only", "we", "use", "overaged", "aircrafts", "."]
# ::lemmas ["i", "think", "only", "we", "use", "overaged", "aircraft", "."]
(c14-5 / think-01
       :ARG0 (c14-4 / i)
       :ARG1 (c14-2 / use-01
                    :ARG0 (c14-0 / we)
                    :ARG1 (c14-6 / aircraft
                                 :mod (c14-3 / overage))
                    :mod (c14-1 / only)))

# ::snt MORE: A320 D-AIPX is one of the oldest A320, it was delivered in . via
# ::tokens ["MORE", ":", "A320", "D", "-", "AIPX", "is", "one", "of", "the", "oldest", "A320", ",", "it", "was", "delivered", "in", ".", "via"]
# ::lemmas ["more", ":", "A320", "D", "-", "AIPX", "be", "one", "of", "the", "old", "A320", ",", "it", "be", "deliver", "in", ".", "via"]
(c15-11 / and
        :op1 (c15-4 / include-91
                    :ARG1 (c15-3 / aircraft-type
                                 :name (c15-5 / name
                                              :op1 "A320"
                                              :op2 "D-AIPX"))
                    :ARG2 (c15-6 / aircraft-type
                                 :name (c15-7 / name
                                              :op1 "A320")
                                 :mod (c15-2 / old
                                             :ARG2-of (c15-0 / have-degree-91
                                                             :ARG1 c15-6
                                                             :ARG3 (c15-1 / most)))))
        :op2 (c15-8 / deliver-01
                    :manner (c15-9 / via))
        :mod (c15-10 / more))

# ::snt no..
# ::tokens ["no", ".."]
# ::lemmas ["no", ".."]
(c16-0 / no)

# ::snt how was the wx at the time? Any idea?
# ::tokens ["how", "was", "the", "wx", "at", "the", "time", "?", "Any", "idea", "?"]
# ::lemmas ["how", "be", "the", "wx", "at", "the", "time", "?", "any", "idea", "?"]
(c17-0 / multi-sentence
       :snt1 (c17-6 / amr-unknown
                    :domain (c17-4 / person
                                   :name (c17-3 / name
                                                :op1 "WP"))
                    :time (c17-5 / time))
       :snt2 (c17-2 / idea
                    :mod (c17-1 / any)))

# ::snt Thank you so much!!
# ::tokens ["Thank", "you", "so", "much", "!", "!"]
# ::lemmas ["thank", "you", "so", "much", "!", "!"]
(c19-5 / thank-01
       :ARG0 (c19-3 / i)
       :ARG1 (c19-1 / you)
       :ARG1-of (c19-0 / have-quant-91
                       :ARG2 (c19-2 / much)
                       :ARG3 (c19-4 / so)))

# ::snt : Germanwings A320 D-AIPX is one of the oldest A320 with serial number and was delivered in Nov
# ::tokens [":", "Germanwings", "A320", "D", "-", "AIPX", "is", "one", "of", "the", "oldest", "A320", "with", "serial", "number", "and", "was", "delivered", "in", "Nov"]
# ::lemmas [":", "germanwing", "a320", "D", "-", "AIPX", "be", "one", "of", "the", "old", "A320", "with", "serial", "number", "and", "be", "deliver", "in", "Nov"]
(c20-14 / and
        :op1 (c20-5 / include-91
                    :ARG1 (c20-4 / aircraft-type
                                 :name (c20-6 / name
                                              :op1 "A320"
                                              :op2 "D-AIPX")
                                 :mod (c20-10 / company
                                              :name (c20-7 / name
                                                           :op1 "Germanywings")))
                    :ARG2 (c20-8 / aircraft-type
                                 :name (c20-9 / name
                                              :op1 "A320")
                                 :mod (c20-3 / old
                                             :ARG2-of (c20-0 / have-degree-91
                                                             :ARG1 c20-8
                                                             :ARG3 (c20-2 / most)))
                                 :mod (c20-11 / number
                                              :mod (c20-13 / serial))))
        :op2 (c20-12 / deliver-01
                     :ARG1 c20-4
                     :time (c20-1 / date-entity
                                  :month 11)))

# ::snt que horror
# ::tokens ["que", "horror"]
# ::lemmas ["que", "horror"]
(c21-0 / horror
       :mod (c21-1 / que))

# ::snt Hi, this is Selena. A journalist from Barcelona. Could you explain how do you know the serial number? Thank you!!
# ::tokens ["Hi", ",", "this", "is", "Selena", ".", "A", "journalist", "from", "Barcelona", ".", "Could", "you", "explain", "how", "do", "you", "know", "the", "serial", "number", "?", "Thank", "you", "!", "!"]
# ::lemmas ["hi", ",", "this", "be", "Selena", ".", "a", "journalist", "from", "Barcelona", ".", "could", "you", "explain", "how", "do", "you", "know", "the", "serial", "number", "?", "thank", "you", "!", "!"]
(c23-2 / multi-sentence
       :snt1 c23-2
       :snt2 (c23-0 / journalist
                    :source (c23-11 / city
                                    :name (c23-7 / name
                                                 :op1 "Barcelona"))
                    :domain (c23-9 / person
                                   :name (c23-8 / name
                                                :op1 "Selena")))
       :snt3 (c23-16 / possible-01
                     :polarity (c23-17 / amr-unknown)
                     :ARG1 (c23-4 / explain-01
                                  :ARG0 (c23-1 / you)
                                  :ARG1 (c23-15 / thing
                                                :manner-of (c23-6 / know-01
                                                                  :ARG0 (c23-12 / you)
                                                                  :ARG1 (c23-10 / number
                                                                                :mod (c23-13 / serial))))))
       :snt4 (c23-14 / thank-01
                     :ARG0 (c23-5 / i)
                     :ARG1 (c23-3 / you)
                     :mode expressive))
