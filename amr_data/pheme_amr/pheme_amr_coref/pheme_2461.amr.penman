# ::snt put your hands in the air like the party don' stop!
# ::tokens ["put", "your", "hands", "in", "the", "air", "like", "the", "party", "don", "'", "stop", "!"]
# ::lemmas ["put", "your", "hand", "in", "the", "air", "like", "the", "party", "don", "'", "stop", "!"]
(c1-2 / put-01
      :ARG0 (c1-1 / you
                  :part (c1-0 / hand
                              :ARG1-of c1-2))
      :ARG2 (c1-5 / air)
      :manner (c1-3 / stop-01
                    :ARG0 (c1-4 / party)
                    :polarity -)
      :mode imperative)

# ::snt . There will be only one dead: the hostage taker. The End. Welcome to Hollywood in Sydney
# ::tokens [".", "There", "will", "be", "only", "one", "dead", ":", "the", "hostage", "taker", ".", "The", "End", ".", "Welcome", "to", "Hollywood", "in", "Sydney"]
# ::lemmas [".", "there", "will", "be", "only", "one", "dead", ":", "the", "hostage", "taker", ".", "the", "end", ".", "welcome", "to", "Hollywood", "in", "Sydney"]
(c2-2 / multi-sentence
      :snt1 (c2-8 / die-01
                  :ARG1 (c2-7 / person
                              :ARG0-of (c2-11 / take-01
                                              :ARG1 (c2-0 / hostage))
                              :mod (c2-3 / only)))
      :snt2 (c2-4 / end-01)
      :snt3 (c2-1 / welcome-01
                  :ARG2 (c2-9 / market-sector
                              :name (c2-5 / name
                                          :op1 "Hollywood")
                              :location (c2-10 / city
                                               :name (c2-6 / name
                                                           :op1 "Sydney")))))

# ::snt i dont know what to think anymore.
# ::tokens ["i", "do", "nt", "know", "what", "to", "think", "anymore", "."]
# ::lemmas ["i", "do", "not", "know", "what", "to", "think", "anymore", "."]
(c3-1 / know-01
      :ARG0 (c3-0 / i)
      :ARG1 (c3-3 / thing
                  :ARG1-of (c3-2 / think-01
                                 :ARG0 c3-0))
      :time (c3-4 / anymore)
      :polarity -)

# ::snt God bless . RT
# ::tokens ["God", "bless", ".", "RT"]
# ::lemmas ["God", "bless", ".", "RT"]
(c4-0 / multi-sentence
      :snt1 (c4-1 / bless-01
                  :ARG0 (c4-4 / person
                              :name (c4-2 / name
                                          :op1 "God")))
      :snt2 (c4-5 / publication
                  :name (c4-3 / name
                              :op1 "RT")))

# ::snt the scenario of this ugly movie is written by Zionists and their allies.
# ::tokens ["the", "scenario", "of", "this", "ugly", "movie", "is", "written", "by", "Zionists", "and", "their", "allies", "."]
# ::lemmas ["the", "scenario", "of", "this", "ugly", "movie", "be", "write", "by", "Zionists", "and", "their", "ally", "."]
(c5-0 / write-01
      :ARG0 (c5-10 / and
                   :op1 (c5-5 / person
                              :mod (c5-6 / religious-group
                                         :name (c5-4 / name
                                                     :op1 "Zionism")))
                   :op2 (c5-9 / person
                              :ARG1-of (c5-3 / ally-01
                                             :ARG2 c5-5)))
      :ARG1 (c5-7 / scenario
                  :topic (c5-1 / movie
                               :mod (c5-2 / ugly)
                               :mod (c5-8 / this))))

# ::snt it is highly probable
# ::tokens ["it", "is", "highly", "probable"]
# ::lemmas ["it", "be", "highly", "probable"]
(c6-1 / probable
      :domain (c6-2 / it)
      :degree (c6-0 / high-02))

# ::snt . nice Hollywood story in Sydney
# ::tokens [".", "nice", "Hollywood", "story", "in", "Sydney"]
# ::lemmas [".", "nice", "Hollywood", "story", "in", "Sydney"]
(c7-5 / story
      :topic (c7-0 / market-sector
                   :name (c7-1 / name
                               :op1 "Hollywood"))
      :ARG1-of (c7-2 / nice-01)
      :location (c7-4 / city
                      :name (c7-3 / name
                                  :op1 "Sydney")))

# ::snt HOW MANY TIMES IS THE WORLD GONNA FALL FOR CIA BLACK OPS BEFORE WE JUST ALL LAUGH AT THEM? READ CIA ARRESTCHENEY
# ::tokens ["HOW", "MANY", "TIMES", "IS", "THE", "WORLD", "GONNA", "FALL", "FOR", "CIA", "BLACK", "OPS", "BEFORE", "WE", "JUST", "ALL", "LAUGH", "AT", "THEM", "?", "READ", "CIA", "ARRESTCHENEY"]
# ::lemmas ["how", "many", "time", "be", "the", "world", "gonna", "fall", "for", "CIA", "BLACK", "OPS", "before", "we", "just", "all", "laugh", "at", "they", "?", "read", "CIA", "ARRESTCHENEY"]
(c8-4 / multi-sentence
      :snt1 (c8-3 / fight-01
                  :ARG0 (c8-1 / world)
                  :ARG2 (c8-7 / OPS
                              :ARG1-of (c8-6 / black-07)
                              :poss (c8-14 / government-organization
                                           :name (c8-10 / name
                                                        :op1 "CIA")))
                  :time (c8-13 / before
                               :op1 (c8-5 / laugh-01
                                          :ARG0 (c8-9 / we
                                                      :mod (c8-16 / all))
                                          :ARG2 c8-7
                                          :mod (c8-0 / just)))
                  :frequency (c8-11 / many
                                    :degree (c8-15 / so)))
      :snt2 (c8-12 / read-01
                   :ARG0 (c8-2 / you)
                   :ARG1 (c8-8 / autopsy
                               :mod c8-14)
                   :mode imperative))

# ::snt Well done for putting in a second delay when things became charged... Your editors clearly thought about this in advance.. Wise.
# ::tokens ["Well", "done", "for", "putting", "in", "a", "second", "delay", "when", "things", "became", "charged", "...", "Your", "editors", "clearly", "thought", "about", "this", "in", "advance", "..", "Wise", "."]
# ::lemmas ["well", "do", "for", "put", "in", "a", "second", "delay", "when", "thing", "became", "charge", "...", "your", "editor", "clearly", "think", "about", "this", "in", "advance", "..", "wise", "."]
(c10-3 / multi-sentence
       :snt1 (c10-11 / do-02
                     :ARG1-of (c10-0 / well-09)
                     :ARG1-of (c10-12 / cause-01
                                      :ARG0 (c10-10 / put-in-05
                                                    :ARG1 (c10-1 / delay-01
                                                                 :ord (c10-5 / ordinal-entity
                                                                             :value 2))
                                                    :time (c10-4 / become-01
                                                                 :ARG1 (c10-16 / thing)
                                                                 :ARG2 (c10-13 / charge-03
                                                                               :ARG1 c10-16)))))
       :snt2 (c10-14 / think-01
                     :ARG0 (c10-6 / editor
                                  :poss (c10-2 / you))
                     :ARG1 (c10-9 / this)
                     :ARG1-of (c10-15 / clear-06)
                     :ARG1-of (c10-7 / in-advance-04))
       :snt3 (c10-8 / wise))
