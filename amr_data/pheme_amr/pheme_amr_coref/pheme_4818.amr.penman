# ::snt one is carrying thishorrible (not sure if terrorist) attack...
# ::tokens ["one", "is", "carrying", "thishorrible", "(", "not", "sure", "if", "terrorist", ")", "attack", "..."]
# ::lemmas ["one", "be", "carry", "thishorrible", "(", "not", "sure", "if", "terrorist", ")", "attack", "..."]
(c1-2 / carry-01
      :ARG0 (c1-1 / one)
      :ARG1 (c1-6 / attack-01
                  :mod (c1-0 / horrible)
                  :mod (c1-5 / this)
                  :ARG1-of (c1-4 / sure-02
                                 :ARG0 c1-1
                                 :ARG2 (c1-3 / terrorist)
                                 :polarity -)))

# ::snt : The -adian soldier shot at the War Memorial has died. |
# ::tokens [":", "The", "-adian", "soldier", "shot", "at", "the", "War", "Memorial", "has", "died", ".", "|"]
# ::lemmas [":", "the", "-adian", "soldier", "shoot", "at", "the", "War", "Memorial", "have", "die", ".", "|"]
(c2-4 / die-01
      :ARG1 (c2-6 / soldier
                  :mod (c2-5 / country
                             :name (c2-2 / name
                                         :op1 "Israel"))
                  :ARG1-of (c2-1 / shoot-01
                                 :location (c2-0 / building
                                                 :name (c2-3 / name
                                                             :op1 "War"
                                                             :op2 "Memorial")))))

# ::snt Automobiles as a weapon yet again. Not first time. Tractors , cars, trucks, you name it. Jihadi .
# ::tokens ["Automobiles", "as", "a", "weapon", "yet", "again", ".", "Not", "first", "time", ".", "Tractors", ",", "cars", ",", "trucks", ",", "you", "name", "it", ".", "Jihadi", "."]
# ::lemmas ["automobile", "as", "a", "weapon", "yet", "again", ".", "not", "first", "time", ".", "tractor", ",", "car", ",", "truck", ",", "you", "name", "it", ".", "Jihadi", "."]
(c3-3 / multi-sentence
      :snt1 (c3-4 / use-01
                  :ARG1 (c3-15 / automobile)
                  :ARG2 (c3-1 / weapon)
                  :mod (c3-6 / again
                             :mod (c3-2 / yet)))
      :snt2 (c3-14 / time
                   :ord (c3-5 / ordinal-entity
                              :value 1)
                   :polarity -)
      :snt3 (c3-8 / name-01
                  :ARG0 (c3-12 / you)
                  :ARG1 (c3-9 / and
                              :op1 (c3-13 / tractor)
                              :op2 (c3-11 / car)
                              :op3 (c3-10 / truck))
                  :ARG2 (c3-7 / it))
      :snt4 (c3-0 / jihadi))

# ::snt : The Canadian soldier shot at the War Memorial has died
# ::tokens [":", "The", "Canadian", "soldier", "shot", "at", "the", "War", "Memorial", "has", "died"]
# ::lemmas [":", "the", "Canadian", "soldier", "shoot", "at", "the", "War", "Memorial", "have", "die"]
(c4-4 / die-01
      :ARG1 (c4-6 / soldier
                  :mod (c4-5 / country
                             :name (c4-2 / name
                                         :op1 "Canada"))
                  :ARG1-of (c4-1 / shoot-01
                                 :location (c4-0 / building
                                                 :name (c4-3 / name
                                                             :op1 "War"
                                                             :op2 "Memorial")))))

# ::snt : The Canadian soldier shot at the War Memorial has died, officials reported.
# ::tokens [":", "The", "Canadian", "soldier", "shot", "at", "the", "War", "Memorial", "has", "died", ",", "officials", "reported", "."]
# ::lemmas [":", "the", "Canadian", "soldier", "shoot", "at", "the", "War", "Memorial", "have", "die", ",", "official", "report", "."]
(c5-5 / report-01
      :ARG0 (c5-1 / official)
      :ARG1 (c5-7 / die-01
                  :ARG1 (c5-8 / soldier
                              :mod (c5-6 / country
                                         :name (c5-3 / name
                                                     :op1 "Canada"))
                              :ARG1-of (c5-2 / shoot-01
                                             :location (c5-0 / building
                                                             :name (c5-4 / name
                                                                         :op1 "War"
                                                                         :op2 "Memorial"))))))

# ::snt Devastated right now. Thoughts and prayers with my home town. : Canadian soldier shot
# ::tokens ["Devastated", "right", "now", ".", "Thoughts", "and", "prayers", "with", "my", "home", "town", ".", ":", "Canadian", "soldier", "shot"]
# ::lemmas ["devastate", "right", "now", ".", "thought", "and", "prayer", "with", "my", "home", "town", ".", ":", "Canadian", "soldier", "shoot"]
(c6-1 / multi-sentence
      :snt1 (c6-8 / devastate-01
                  :time (c6-4 / now
                              :mod (c6-7 / right)))
      :snt2 (c6-13 / and
                   :op1 (c6-12 / think-01
                               :ARG0 (c6-3 / i))
                   :op2 (c6-6 / pray-01
                              :ARG0 c6-3)
                   :accompanier (c6-10 / town
                                       :mod (c6-0 / home)
                                       :poss c6-3))
      :snt3 (c6-11 / shoot-02
                   :ARG1 (c6-2 / soldier
                               :mod (c6-9 / country
                                          :name (c6-5 / name
                                                      :op1 "Canada")))))

# ::snt  The Canadian soldier shot at the War Memorial has died, officials reported.
# ::tokens [" ", "The", "Canadian", "soldier", "shot", "at", "the", "War", "Memorial", "has", "died", ",", "officials", "reported", "."]
# ::lemmas [" ", "the", "Canadian", "soldier", "shoot", "at", "the", "War", "Memorial", "have", "die", ",", "official", "report", "."]
(c8-5 / report-01
      :ARG0 (c8-1 / official)
      :ARG1 (c8-7 / die-01
                  :ARG1 (c8-8 / soldier
                              :mod (c8-6 / country
                                         :name (c8-3 / name
                                                     :op1 "Canada"))
                              :ARG1-of (c8-2 / shoot-01
                                             :location (c8-0 / building
                                                             :name (c8-4 / name
                                                                         :op1 "War"
                                                                         :op2 "Memorial"))))))

# ::snt Doesnt he have a name??? can we believe this?try harder next time you set up an attack to terrorise people into war/lockdowns
# ::tokens ["Does", "nt", "he", "have", "a", "name", "?", "?", "?", "can", "we", "believe", "this?try", "harder", "next", "time", "you", "set", "up", "an", "attack", "to", "terrorise", "people", "into", "war", "/", "lockdowns"]
# ::lemmas ["do", "not", "he", "have", "a", "name", "?", "?", "?", "can", "we", "believe", "this?try", "hard", "next", "time", "you", "set", "up", "an", "attack", "to", "terrorise", "people", "into", "war", "/", "lockdown"]
(c9-0 / multi-sentence
      :snt1 (c9-8 / have-03
                  :ARG0 (c9-6 / he)
                  :ARG1 (c9-12 / name)
                  :polarity (c9-7 / amr-unknown)
                  :polarity -)
      :snt2 (c9-3 / possible-01
                  :ARG1 (c9-10 / believe-01
                               :ARG0 (c9-15 / we)
                               :ARG1 (c9-22 / this))
                  :polarity (c9-16 / amr-unknown))
      :snt3 (c9-21 / try-01
                   :ARG0 (c9-19 / you)
                   :time (c9-4 / set-up-03
                               :ARG0 c9-19
                               :ARG1 (c9-13 / attack-01)
                               :purpose (c9-17 / terrorize-01
                                               :ARG0 c9-19
                                               :ARG1 (c9-5 / person)
                                               :ARG2 (c9-11 / slash
                                                            :op1 (c9-1 / war-01)
                                                            :op2 (c9-9 / lock-down-05))))
                   :time (c9-20 / next)
                   :ARG1-of (c9-2 / have-degree-91
                                  :ARG2 (c9-18 / hard-02)
                                  :ARG3 (c9-14 / more))))

# ::snt car hits people waiting at the Ammunition Hill stationof Jerusalem's light raildriver shot trying to flee...
# ::tokens ["car", "hits", "people", "waiting", "at", "the", "Ammunition", "Hill", "stationof", "Jerusalem", "'s", "light", "raildriver", "shot", "trying", "to", "flee", "..."]
# ::lemmas ["car", "hit", "people", "wait", "at", "the", "Ammunition", "Hill", "stationof", "Jerusalem", "'s", "light", "raildriver", "shot", "try", "to", "flee", "..."]
(c10-0 / hit-01
       :ARG0 (c10-8 / car)
       :ARG1 (c10-6 / person
                    :ARG1-of (c10-1 / wait-01
                                    :location (c10-11 / station
                                                      :name (c10-4 / name
                                                                   :op1 "Ammitt"
                                                                   :op2 "Hill")
                                                      :location (c10-7 / city
                                                                       :name (c10-5 / name
                                                                                    :op1 "Jerusalem"))))
                    :ARG0-of (c10-12 / try-01
                                     :ARG1 (c10-2 / flee-05
                                                  :ARG0 c10-6))
                    :ARG0-of (c10-3 / shoot-02
                                    :mod (c10-9 / river
                                                :name (c10-10 / name
                                                              :op1 "Light"
                                                              :op2 "Raildriver")))))

# ::snt Alav hashalom. : The Canadian soldier shot at the War Memorial has died.
# ::tokens ["Alav", "hashalom", ".", ":", "The", "Canadian", "soldier", "shot", "at", "the", "War", "Memorial", "has", "died", "."]
# ::lemmas ["alav", "hashalom", ".", ":", "the", "Canadian", "soldier", "shoot", "at", "the", "War", "Memorial", "have", "die", "."]
(c11-0 / multi-sentence
       :snt1 (c11-5 / person
                    :name (c11-3 / name
                                 :op1 "Alav"
                                 :op2 " hashalom"))
       :snt2 (c11-6 / die-01
                    :ARG1 (c11-9 / soldier
                                 :mod (c11-7 / country
                                             :name (c11-4 / name
                                                          :op1 "Canada"))
                                 :ARG1-of (c11-2 / shoot-01
                                                 :location (c11-1 / building
                                                                  :name (c11-8 / name
                                                                               :op1 "War"
                                                                               :op2 "Memorial"))))))

# ::snt Awful : The Canadian soldier shot at the War Memorial has died, officials reported.
# ::tokens ["Awful", ":", "The", "Canadian", "soldier", "shot", "at", "the", "War", "Memorial", "has", "died", ",", "officials", "reported", "."]
# ::lemmas ["awful", ":", "the", "Canadian", "soldier", "shoot", "at", "the", "War", "Memorial", "have", "die", ",", "official", "report", "."]
(c12-5 / report-01
       :ARG0 (c12-1 / official)
       :ARG1 (c12-7 / die-01
                    :ARG1 (c12-8 / soldier
                                 :mod (c12-6 / country
                                             :name (c12-3 / name
                                                          :op1 "Canada"))
                                 :ARG1-of (c12-2 / shoot-01
                                                 :location (c12-0 / building
                                                                  :name (c12-4 / name
                                                                               :op1 "War"
                                                                               :op2 "Memorial")))))
       :mod (c12-9 / awful))

# ::snt oh my god this is so sad
# ::tokens ["oh", "my", "god", "this", "is", "so", "sad"]
# ::lemmas ["oh", "my", "god", "this", "be", "so", "sad"]
(c13-6 / say-01
       :ARG0 (c13-3 / i)
       :ARG1 (c13-2 / sad-02
                    :ARG0 (c13-7 / this)
                    :degree (c13-0 / so))
       :ARG2 (c13-5 / person
                    :name (c13-4 / name
                                 :op1 "God")
                    :poss c13-3
                    :mod (c13-1 / oh)))

# ::snt : Canadian soldier shot at the War Memorial has died, officials reported... .."
# ::tokens [":", "Canadian", "soldier", "shot", "at", "the", "War", "Memorial", "has", "died", ",", "officials", "reported", "...", "..", "\""]
# ::lemmas [":", "Canadian", "soldier", "shoot", "at", "the", "War", "Memorial", "have", "die", ",", "official", "report", "...", "..", "\""]
(c14-5 / report-01
       :ARG0 (c14-1 / official)
       :ARG1 (c14-7 / die-01
                    :ARG1 (c14-8 / soldier
                                 :mod (c14-6 / country
                                             :name (c14-3 / name
                                                          :op1 "Canada"))
                                 :ARG1-of (c14-2 / shoot-01
                                                 :location (c14-0 / building
                                                                  :name (c14-4 / name
                                                                               :op1 "War"
                                                                               :op2 "Memorial"))))))

# ::snt Has the hallmarks.Truck hits bus. Forklift tries to tip over bus, car strikes on people, yesterday rail Security incident.
# ::tokens ["Has", "the", "hallmarks", ".", "Truck", "hits", "bus", ".", "Forklift", "tries", "to", "tip", "over", "bus", ",", "car", "strikes", "on", "people", ",", "yesterday", "rail", "Security", "incident", "."]
# ::lemmas ["have", "the", "hallmark", ".", "truck", "hit", "bus", ".", "forklift", "try", "to", "tip", "over", "bus", ",", "car", "strike", "on", "people", ",", "yesterday", "rail", "Security", "incident", "."]
(c15-3 / multi-sentence
       :snt1 (c15-0 / have-03
                    :ARG1 (c15-16 / hallmark))
       :snt2 (c15-7 / hit-01
                    :ARG0 (c15-15 / truck)
                    :ARG1 (c15-4 / bus))
       :snt3 (c15-13 / try-01
                     :ARG0 (c15-2 / forklift)
                     :ARG1 (c15-8 / tip-over-05
                                  :ARG0 c15-2
                                  :ARG1 (c15-10 / bus)))
       :snt4 (c15-14 / strike-01
                     :ARG1 (c15-9 / person)
                     :mod (c15-11 / car))
       :snt5 (c15-6 / incident
                    :mod (c15-5 / security
                                :mod (c15-12 / rail))
                    :time (c15-1 / yesterday)))

# ::snt indeed saw it on the canadian police tweet !well done then!!
# ::tokens ["indeed", "saw", "it", "on", "the", "canadian", "police", "tweet", "!", "well", "done", "then", "!", "!"]
# ::lemmas ["indeed", "see", "it", "on", "the", "canadian", "police", "tweet", "!", "well", "do", "then", "!", "!"]
(c16-2 / multi-sentence
       :snt1 (c16-10 / see-01
                     :ARG0 (c16-3 / i)
                     :ARG1 (c16-8 / it)
                     :mod (c16-1 / indeed)
                     :location (c16-11 / tweet-02
                                       :ARG0 (c16-5 / police
                                                    :mod (c16-7 / country
                                                                :name (c16-4 / name
                                                                             :op1 "Canada")))))
       :snt2 (c16-6 / do-02
                    :ARG1-of (c16-0 / well-09)
                    :time (c16-9 / then)))

# ::snt The Canadian soldier shot at the War Memorial has died, officials reported.
# ::tokens ["The", "Canadian", "soldier", "shot", "at", "the", "War", "Memorial", "has", "died", ",", "officials", "reported", "."]
# ::lemmas ["the", "Canadian", "soldier", "shoot", "at", "the", "War", "Memorial", "have", "die", ",", "official", "report", "."]
(c17-5 / report-01
       :ARG0 (c17-1 / official)
       :ARG1 (c17-7 / die-01
                    :ARG1 (c17-8 / soldier
                                 :mod (c17-6 / country
                                             :name (c17-3 / name
                                                          :op1 "Canada"))
                                 :ARG1-of (c17-2 / shoot-01
                                                 :location (c17-0 / building
                                                                  :name (c17-4 / name
                                                                               :op1 "War"
                                                                               :op2 "Memorial"))))))

# ::snt Hectic ... who would believe this could happen in ! Om mane padme hung.
# ::tokens ["Hectic", "...", "who", "would", "believe", "this", "could", "happen", "in", "!", "Om", "mane", "padme", "hung", "."]
# ::lemmas ["Hectic", "...", "who", "would", "believe", "this", "could", "happen", "in", "!", "Om", "mane", "padme", "hang", "."]
(c18-1 / multi-sentence
       :snt1 (c18-5 / miracle
                    :domain (c18-6 / person
                                   :ARG0-of (c18-2 / believe-01
                                                   :ARG1 (c18-8 / possible-01
                                                                :ARG1 (c18-3 / event
                                                                             :mod (c18-7 / this)))))
                    :mode expressive)
       :snt2 (c18-0 / hang-01
                    :ARG1 c18-6
                    :name (c18-4 / name
                                 :op1 "Om"
                                 :op2 "Mane"
                                 :op3 "Padme")))

# ::snt A sad day for all of us today and yest. Two soldiers killed in two terrorist attacks on Canadian soil.
# ::tokens ["A", "sad", "day", "for", "all", "of", "us", "today", "and", "yest", ".", "Two", "soldiers", "killed", "in", "two", "terrorist", "attacks", "on", "Canadian", "soil", "."]
# ::lemmas ["a", "sad", "day", "for", "all", "of", "we", "today", "and", "yest", ".", "Two", "soldier", "kill", "in", "two", "terrorist", "attack", "on", "Canadian", "soil", "."]
(c19-3 / multi-sentence
       :snt1 (c19-15 / and
                     :op1 (c19-13 / sad-02
                                  :ARG1 (c19-10 / day
                                                :time (c19-14 / today))
                                  :beneficiary (c19-1 / we
                                                      :mod (c19-5 / all)))
                     :op2 (c19-0 / have-degree-91
                                 :ARG1 c19-10
                                 :ARG2 c19-13
                                 :ARG3 (c19-9 / most)))
       :snt2 (c19-6 / kill-01
                    :ARG0 (c19-8 / attack-01
                                 :ARG0 (c19-12 / terrorist)
                                 :location (c19-4 / soil
                                                  :poss (c19-11 / country
                                                                :name (c19-7 / name
                                                                             :op1 "Canada")))
                                 :quant 2)
                    :ARG1 (c19-2 / soldier
                                 :quant 2)))

# ::snt They haven't realeased his name because they want to ensure his next of kin are notified first.
# ::tokens ["They", "have", "n't", "realeased", "his", "name", "because", "they", "want", "to", "ensure", "his", "next", "of", "kin", "are", "notified", "first", "."]
# ::lemmas ["they", "have", "not", "realease", "his", "name", "because", "they", "want", "to", "ensure", "his", "next", "of", "kin", "be", "notify", "first", "."]
(c20-9 / cause-01
       :ARG0 (c20-1 / want-01
                    :ARG0 (c20-10 / they)
                    :ARG1 (c20-3 / ensure-01
                                 :ARG0 c20-10
                                 :ARG1 (c20-5 / notify-01
                                              :ARG1 (c20-4 / kin
                                                           :mod (c20-6 / next)
                                                           :poss (c20-0 / he))
                                              :ord (c20-2 / ordinal-entity
                                                          :value 1))))
       :ARG1 (c20-8 / realease-00
                    :ARG0 c20-10
                    :ARG1 (c20-7 / name
                                 :poss c20-0)
                    :polarity -))
