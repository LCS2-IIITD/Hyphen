# ::snt Fact is he tried..desperately..and wasn't able to. The co-pilot locked it and purposely crashed the plane. Worst case scenario.
# ::tokens ["Fact", "is", "he", "tried", "..", "desperately", "..", "and", "was", "n't", "able", "to", ".", "The", "co", "-", "pilot", "locked", "it", "and", "purposely", "crashed", "the", "plane", ".", "Worst", "case", "scenario", "."]
# ::lemmas ["fact", "be", "he", "try", "..", "desperately", "..", "and", "be", "not", "able", "to", ".", "the", "co", "-", "pilot", "lock", "it", "and", "purposely", "crash", "the", "plane", ".", "bad", "case", "scenario", "."]
(c1-0 / multi-sentence
      :snt1 (c1-9 / fact
                  :domain (c1-7 / and
                                :op1 (c1-18 / try-01
                                            :ARG0 (c1-8 / he)
                                            :ARG1-of (c1-2 / desperate-02))
                                :op2 (c1-17 / capable-01
                                            :ARG1 c1-8
                                            :ARG2 c1-18
                                            :polarity -)))
      :snt2 (c1-15 / and
                   :op1 (c1-10 / lock-01
                               :ARG0 (c1-1 / person
                                           :ARG0-of (c1-5 / pilot-01))
                               :ARG1 (c1-11 / plane))
                   :op2 (c1-3 / crash-01
                              :ARG0 c1-1
                              :ARG1 c1-11
                              :manner (c1-14 / purpose)))
      :snt3 (c1-4 / scenario
                  :ARG1-of (c1-16 / case-04
                                  :ARG1-of (c1-6 / have-degree-91
                                                 :ARG2 (c1-12 / bad-07
                                                              :ARG1 c1-16)
                                                 :ARG3 (c1-13 / most)))))

# ::snt or they can just hire robots!
# ::tokens ["or", "they", "can", "just", "hire", "robots", "!"]
# ::lemmas ["or", "they", "can", "just", "hire", "robot", "!"]
(c2-2 / or
      :op2 (c2-3 / possible-01
                 :ARG1 (c2-0 / hire-01
                             :ARG0 (c2-5 / they)
                             :ARG1 (c2-4 / robot)
                             :mod (c2-1 / just))))

# ::snt is nytimes confirming this is a hoax/falseflag?
# ::tokens ["is", "nytimes", "confirming", "this", "is", "a", "hoax", "/", "falseflag", "?"]
# ::lemmas ["be", "nytime", "confirm", "this", "be", "a", "hoax", "/", "falseflag", "?"]
(c3-5 / confirm-01
      :ARG0 (c3-4 / publication
                  :name (c3-3 / name
                              :op1 "Nytimes"))
      :ARG1 (c3-6 / slash
                  :op1 (c3-0 / hoax-01
                             :ARG2 (c3-7 / this))
                  :op2 (c3-1 / flag
                             :mod (c3-2 / false)
                             :domain c3-7))
      :polarity (c3-8 / amr-unknown))

# ::snt Time to think about a bathroom, and surveillance cameras inside the cockpit.
# ::tokens ["Time", "to", "think", "about", "a", "bathroom", ",", "and", "surveillance", "cameras", "inside", "the", "cockpit", "."]
# ::lemmas ["time", "to", "think", "about", "a", "bathroom", ",", "and", "surveillance", "camera", "inside", "the", "cockpit", "."]
(c4-6 / time
      :time-of (c4-4 / think-01
                     :ARG2 (c4-7 / and
                                 :op1 (c4-0 / bathroom)
                                 :op2 (c4-3 / camera
                                            :ARG0-of (c4-5 / surveil-01)
                                            :location (c4-1 / inside
                                                            :op1 (c4-2 / cockpit))))))

# ::snt crash: different scenarios to unlock and lock the cockpit door via
# ::tokens ["crash", ":", "different", "scenarios", "to", "unlock", "and", "lock", "the", "cockpit", "door", "via"]
# ::lemmas ["crash", ":", "different", "scenario", "to", "unlock", "and", "lock", "the", "cockpit", "door", "via"]
(c5-2 / multi-sentence
      :snt1 (c5-5 / crash-01)
      :snt2 (c5-7 / scenario
                  :ARG1-of (c5-4 / differ-02)
                  :domain (c5-8 / and
                                :op1 (c5-3 / unlock-01
                                           :ARG1 (c5-0 / door
                                                       :part-of (c5-6 / cockpit)))
                                :op2 (c5-1 / lock-01
                                           :ARG1 c5-0
                                           :instrument c5-8)
                                :ARG1 c5-0)))

# ::snt : Germanwings crash: different scenarios to unlock and lock the cockpit door
# ::tokens [":", "Germanwings", "crash", ":", "different", "scenarios", "to", "unlock", "and", "lock", "the", "cockpit", "door"]
# ::lemmas [":", "germanwing", "crash", ":", "different", "scenario", "to", "unlock", "and", "lock", "the", "cockpit", "door"]
(c6-7 / crash-01
      :ARG1 (c6-10 / aircraft-type
                   :name (c6-5 / name
                               :op1 "Germanwings"))
      :ARG0-of (c6-2 / mean-01
                     :ARG1 (c6-9 / scenario
                                 :ARG1-of (c6-6 / differ-02)
                                 :manner-of (c6-4 / and
                                                  :op1 (c6-3 / unlock-01
                                                             :ARG1 (c6-0 / door
                                                                         :part-of (c6-8 / cockpit)))
                                                  :op2 (c6-1 / lock-01
                                                             :ARG1 c6-0)))))

# ::snt proves he could have unlocked door.
# ::tokens ["proves", "he", "could", "have", "unlocked", "door", "."]
# ::lemmas ["prove", "he", "could", "have", "unlock", "door", "."]
(c7-2 / prove-01
      :ARG1 (c7-4 / possible-01
                  :ARG1 (c7-1 / unlock-01
                              :ARG0 (c7-0 / he)
                              :ARG1 (c7-3 / door))))

# ::snt i am. and i do. you are just a young socialist. nvm. im done
# ::tokens ["i", "am", ".", "and", "i", "do", ".", "you", "are", "just", "a", "young", "socialist", ".", "nvm", ".", "i", "m", "done"]
# ::lemmas ["i", "be", ".", "and", "i", "do", ".", "you", "be", "just", "a", "young", "socialist", ".", "nvm", ".", "i", "m", "do"]
(c8-3 / multi-sentence
      :snt1 (c8-13 / and
                   :op1 (c8-5 / i)
                   :op2 (c8-8 / do-02
                              :ARG0 c8-5))
      :snt2 (c8-7 / person
                  :mod (c8-12 / political-movement
                              :name (c8-6 / name
                                          :op1 "socialism"))
                  :mod (c8-1 / young)
                  :mod (c8-0 / just)
                  :domain (c8-11 / you))
      :snt3 c8-13
      :op1 (c8-2 / laugh-01
                 :ARG0 (c8-10 / i)
                 :manner (c8-9 / loud)
                 :mode expressive)
      :op2 (c8-4 / be-done-08
                 :ARG0 c8-10))

# ::snt ... control room should be able to unlock doors or fly the plane like a virtual pilot that would be cool. pushing tin hiked up!
# ::tokens ["...", "control", "room", "should", "be", "able", "to", "unlock", "doors", "or", "fly", "the", "plane", "like", "a", "virtual", "pilot", "that", "would", "be", "cool", ".", "pushing", "tin", "hiked", "up", "!"]
# ::lemmas ["...", "control", "room", "should", "be", "able", "to", "unlock", "door", "or", "fly", "the", "plane", "like", "a", "virtual", "pilot", "that", "would", "be", "cool", ".", "push", "tin", "hike", "up", "!"]
(c9-1 / multi-sentence
      :snt1 (c9-10 / recommend-01
                   :ARG1 (c9-9 / possible-01
                               :ARG1 (c9-4 / or
                                           :op1 (c9-2 / unlock-01
                                                      :ARG0 (c9-7 / room
                                                                  :ARG0-of (c9-11 / control-01))
                                                      :ARG1 (c9-12 / door))
                                           :op2 (c9-0 / fly-01
                                                      :ARG0 c9-7
                                                      :ARG2 (c9-17 / plane))
                                           :ARG1-of (c9-6 / resemble-01
                                                          :ARG2 (c9-3 / person
                                                                      :ARG0-of (c9-16 / pilot-01)
                                                                      :mod (c9-8 / virtual)
                                                                      :ARG1-of (c9-13 / cool-04))))))
      :snt2 (c9-5 / push-01
                  :ARG1 (c9-14 / tin)
                  :ARG2 (c9-15 / up)))

# ::snt false flag? Co pilot deff could've kept the pilot out. Need more evidence for conspiracy.
# ::tokens ["false", "flag", "?", "Co", "pilot", "deff", "could", "'ve", "kept", "the", "pilot", "out", ".", "Need", "more", "evidence", "for", "conspiracy", "."]
# ::lemmas ["false", "flag", "?", "Co", "pilot", "deff", "could", "'ve", "keep", "the", "pilot", "out", ".", "need", "more", "evidence", "for", "conspiracy", "."]
(c10-1 / multi-sentence
       :snt1 (c10-0 / flag
                    :ARG1-of (c10-5 / false-02)
                    :polarity (c10-14 / amr-unknown))
       :snt2 (c10-7 / possible-01
                    :ARG1 (c10-12 / keep-04
                                  :ARG0 (c10-8 / deff
                                               :mod (c10-13 / person
                                                            :ARG0-of (c10-2 / pilot-01))
                                               :mod (c10-9 / company))
                                  :ARG1 c10-13
                                  :direction (c10-3 / out)))
       :snt3 (c10-6 / need-01
                    :ARG1 (c10-4 / evidence-01
                                 :ARG1 (c10-10 / conspire-01)
                                 :quant (c10-11 / more))))

# ::snt lol pilots are tested and approved to handle just that. panic. your too young to know what your talking about.
# ::tokens ["lol", "pilots", "are", "tested", "and", "approved", "to", "handle", "just", "that", ".", "panic", ".", "your", "too", "young", "to", "know", "what", "your", "talking", "about", "."]
# ::lemmas ["lol", "pilot", "be", "test", "and", "approve", "to", "handle", "just", "that", ".", "panic", ".", "your", "too", "young", "to", "know", "what", "your", "talk", "about", "."]
(c11-1 / multi-sentence
       :snt1 (c11-5 / and
                    :op1 (c11-18 / test-01
                                 :ARG1 (c11-2 / person
                                              :ARG0-of (c11-3 / pilot-01)))
                    :op2 (c11-9 / approve-01
                                :ARG1 c11-2)
                    :purpose (c11-6 / handle-01
                                    :ARG0 c11-2
                                    :ARG1 (c11-12 / that
                                                  :mod (c11-0 / just)))
                    :mod (c11-7 / laugh-01
                                :manner (c11-11 / loud)
                                :mode expressive))
       :snt2 (c11-8 / panic-01)
       :snt3 (c11-4 / have-degree-91
                    :ARG1 (c11-15 / you)
                    :ARG2 (c11-14 / young)
                    :ARG3 (c11-10 / too)
                    :ARG6 (c11-13 / know-01
                                  :ARG0 c11-15
                                  :ARG1 (c11-16 / thing
                                                :ARG1-of (c11-17 / talk-01
                                                                 :ARG0 c11-15))
                                  :polarity -)))

# ::snt he was a veteran pilot.
# ::tokens ["he", "was", "a", "veteran", "pilot", "."]
# ::lemmas ["he", "be", "a", "veteran", "pilot", "."]
(c12-2 / person
       :ARG0-of (c12-3 / pilot-01)
       :mod (c12-1 / veteran)
       :domain (c12-0 / he))

# ::snt TAKE THIS DOWN! ITS NOT NEWS!! Just because you CAN post something doesn't mean you SHOULD!!
# ::tokens ["TAKE", "THIS", "DOWN", "!", "ITS", "NOT", "NEWS", "!", "!", "Just", "because", "you", "CAN", "post", "something", "does", "n't", "mean", "you", "SHOULD", "!", "!"]
# ::lemmas ["take", "this", "down", "!", "its", "not", "news", "!", "!", "just", "because", "you", "can", "post", "something", "do", "not", "mean", "you", "SHOULD", "!", "!"]
(c13-2 / multi-sentence
       :snt1 (c13-11 / take-down-22
                     :ARG0 (c13-1 / you)
                     :ARG1 (c13-9 / this)
                     :ARG1-of (c13-7 / cause-01
                                     :ARG0 (c13-4 / news
                                                  :polarity -))
                     :mode imperative
                     :mode imperative)
       :snt2 (c13-5 / mean-01
                    :ARG1 (c13-6 / possible-01
                                 :ARG1 (c13-12 / post-01
                                               :ARG0 (c13-13 / you)
                                               :ARG1 (c13-10 / something)))
                    :ARG2 (c13-8 / recommend-01
                                 :ARG1 (c13-3 / post-01
                                              :ARG0 c13-13
                                              :ARG1 c13-10))
                    :mod (c13-0 / just)
                    :polarity -))

# ::snt CoPilot could have suffered a cardiac event which will never be known. Police have removed material from his home for investigation
# ::tokens ["CoPilot", "could", "have", "suffered", "a", "cardiac", "event", "which", "will", "never", "be", "known", ".", "Police", "have", "removed", "material", "from", "his", "home", "for", "investigation"]
# ::lemmas ["CoPilot", "could", "have", "suffer", "a", "cardiac", "event", "which", "will", "never", "be", "know", ".", "police", "have", "remove", "material", "from", "his", "home", "for", "investigation"]
(c14-2 / multi-sentence
       :snt1 (c14-8 / possible-01
                    :ARG1 (c14-11 / suffer-01
                                  :ARG0 (c14-13 / person
                                                :name (c14-7 / name
                                                             :op1 "CoPilot"))
                                  :ARG1 (c14-5 / event
                                               :mod (c14-9 / medical)
                                               :ARG1-of (c14-12 / know-01
                                                                :time (c14-4 / ever)
                                                                :polarity -))))
       :snt2 (c14-10 / remove-01
                     :ARG0 (c14-3 / police)
                     :ARG1 (c14-1 / material)
                     :ARG2 (c14-0 / home
                                  :poss (c14-14 / he))
                     :purpose (c14-6 / investigate-01
                                     :ARG0 c14-3
                                     :ARG1 c14-1)))

# ::snt : Germanwings crash: different scenarios to unlock and lock the cockpit door
# ::tokens [":", "Germanwings", "crash", ":", "different", "scenarios", "to", "unlock", "and", "lock", "the", "cockpit", "door"]
# ::lemmas [":", "germanwing", "crash", ":", "different", "scenario", "to", "unlock", "and", "lock", "the", "cockpit", "door"]
(c15-7 / crash-01
       :ARG1 (c15-10 / aircraft-type
                     :name (c15-5 / name
                                  :op1 "Germanwings"))
       :ARG0-of (c15-2 / mean-01
                       :ARG1 (c15-9 / scenario
                                    :ARG1-of (c15-6 / differ-02)
                                    :manner-of (c15-4 / and
                                                      :op1 (c15-3 / unlock-01
                                                                  :ARG1 (c15-0 / door
                                                                               :part-of (c15-8 / cockpit)))
                                                      :op2 (c15-1 / lock-01
                                                                  :ARG1 c15-0)))))

# ::snt Land of the Spree RT : socialist, ha, thanks for the laugh.
# ::tokens ["Land", "of", "the", "Spree", "RT", ":", "socialist", ",", "ha", ",", "thanks", "for", "the", "laugh", "."]
# ::lemmas ["land", "of", "the", "Spree", "RT", ":", "socialist", ",", "ha", ",", "thank", "for", "the", "laugh", "."]
(c16-7 / say-01
       :ARG0 (c16-6 / publication
                    :name (c16-4 / name
                                 :op1 "Land"
                                 :op2 "of"
                                 :op3 "the"
                                 :op4 "Spree"))
       :ARG1 (c16-8 / thank-01
                    :ARG0 (c16-3 / i)
                    :ARG1 (c16-0 / you)
                    :ARG2 (c16-1 / laugh-01
                                 :ARG0 c16-0))
       :ARG2 (c16-9 / person
                    :mod (c16-2 / political-movement
                                :name (c16-5 / name
                                             :op1 "socialism"))))

# ::snt How?
# ::tokens ["How", "?"]
# ::lemmas ["how", "?"]
(c17-0 / amr-unknown)

# ::snt socialist, ha, thanks for the laugh.
# ::tokens ["socialist", ",", "ha", ",", "thanks", "for", "the", "laugh", "."]
# ::lemmas ["socialist", ",", "ha", ",", "thank", "for", "the", "laugh", "."]
(c18-5 / thank-01
       :ARG0 (c18-2 / i)
       :ARG1 (c18-0 / you)
       :ARG2 (c18-1 / laugh-01)
       :mod (c18-4 / political-movement
                   :name (c18-3 / name
                                :op1 "socialism")))

# ::snt i stick to what i know. and do not assume. however. i am not an Obama loving libsoc like beiber here.
# ::tokens ["i", "stick", "to", "what", "i", "know", ".", "and", "do", "not", "assume", ".", "however", ".", "i", "am", "not", "an", "Obama", "loving", "libsoc", "like", "beiber", "here", "."]
# ::lemmas ["i", "stick", "to", "what", "i", "know", ".", "and", "do", "not", "assume", ".", "however", ".", "i", "be", "not", "an", "Obama", "love", "libsoc", "like", "beiber", "here", "."]
(c19-2 / multi-sentence
       :snt1 (c19-11 / contrast-01
                     :ARG2 (c19-16 / and
                                   :op1 (c19-13 / stick-01
                                                :ARG1 (c19-5 / i)
                                                :ARG2 (c19-14 / thing
                                                              :ARG1-of (c19-6 / know-01
                                                                              :ARG0 c19-5)))
                                   :op2 (c19-4 / assume-02
                                               :ARG0 c19-5
                                               :polarity -)))
       :snt2 (c19-10 / resemble-01
                     :ARG1 (c19-9 / person
                                  :ARG1-of (c19-1 / liberal-02)
                                  :ARG0-of (c19-12 / love-01
                                                   :ARG1 (c19-15 / person
                                                                 :name (c19-7 / name
                                                                              :op1 "Obama"))))
                     :ARG2 (c19-3 / person
                                  :name (c19-8 / name
                                               :op1 "beiber")
                                  :location (c19-0 / here))
                     :polarity -))

# ::snt different scenarios to unlock cockpit door
# ::tokens ["different", "scenarios", "to", "unlock", "cockpit", "door"]
# ::lemmas ["different", "scenario", "to", "unlock", "cockpit", "door"]
(c20-4 / scenario
       :ARG1-of (c20-2 / differ-02)
       :purpose (c20-1 / unlock-01
                       :ARG1 (c20-0 / door
                                    :part-of (c20-3 / cockpit))))

# ::snt please, stick to what you know. No assumptions.
# ::tokens ["please", ",", "stick", "to", "what", "you", "know", ".", "No", "assumptions", "."]
# ::lemmas ["please", ",", "stick", "to", "what", "you", "know", ".", "no", "assumption", "."]
(c21-1 / multi-sentence
       :snt1 (c21-3 / stick-01
                    :ARG0 (c21-0 / you
                                 :ARG1-of c21-3)
                    :ARG2 (c21-4 / thing
                                 :ARG1-of (c21-2 / know-01
                                                 :ARG0 c21-0))
                    :mode imperative
                    :polite +)
       :snt2 (c21-5 / assume-02
                    :polarity -))

# ::snt Not you, too? RT : i am. and i do. you are just a young socialist. nvm. im done
# ::tokens ["Not", "you", ",", "too", "?", "RT", ":", "i", "am", ".", "and", "i", "do", ".", "you", "are", "just", "a", "young", "socialist", ".", "nvm", ".", "i", "m", "done"]
# ::lemmas ["not", "you", ",", "too", "?", "RT", ":", "i", "be", ".", "and", "i", "do", ".", "you", "be", "just", "a", "young", "socialist", ".", "nvm", ".", "i", "m", "do"]
(c22-3 / multi-sentence
       :snt1 (c22-15 / say-01
                     :ARG0 (c22-10 / person
                                   :name (c22-8 / name
                                                :op1 "RT"))
                     :ARG1 (c22-17 / and
                                   :op1 (c22-7 / i)
                                   :op2 (c22-11 / do-02
                                                :ARG0 c22-7))
                     :polarity (c22-6 / amr-unknown))
       :snt2 (c22-16 / person
                     :mod (c22-1 / young)
                     :mod (c22-4 / political-movement
                                 :name (c22-9 / name
                                              :op1 "socialism"))
                     :domain (c22-14 / you)
                     :mod (c22-0 / just))
       :snt3 c22-17
       :op1 (c22-2 / laugh-01
                   :ARG0 (c22-13 / i)
                   :mod (c22-12 / nvm)
                   :mode expressive)
       :op2 (c22-5 / be-done-08
                   :ARG0 c22-13))

# ::snt and? Even the most experienced can panic and forget things.
# ::tokens ["and", "?", "Even", "the", "most", "experienced", "can", "panic", "and", "forget", "things", "."]
# ::lemmas ["and", "?", "even", "the", "most", "experienced", "can", "panic", "and", "forget", "thing", "."]
(c23-11 / and
        :op2 (c23-8 / possible-01
                    :ARG1 (c23-6 / and
                                 :op1 (c23-10 / panic-01
                                              :ARG0 (c23-3 / person
                                                           :ARG1-of (c23-0 / have-degree-91
                                                                           :ARG2 (c23-5 / experience-01
                                                                                        :ARG0 c23-3)
                                                                           :ARG3 (c23-2 / most))
                                                           :mod (c23-4 / even)))
                                 :op2 (c23-1 / forget-01
                                             :ARG0 c23-3
                                             :ARG1 (c23-9 / thing)))
                    :polarity (c23-7 / amr-unknown)))

# ::snt perhaps they weren't surefire solutions, or he could have forgotten about them in panic.
# ::tokens ["perhaps", "they", "were", "n't", "surefire", "solutions", ",", "or", "he", "could", "have", "forgotten", "about", "them", "in", "panic", "."]
# ::lemmas ["perhaps", "they", "be", "not", "surefire", "solution", ",", "or", "he", "could", "have", "forget", "about", "they", "in", "panic", "."]
(c24-3 / or
       :op1 (c24-5 / possible-01
                   :ARG1 (c24-6 / solution
                                :mod (c24-4 / surefire)
                                :domain (c24-7 / they)
                                :polarity -))
       :op2 (c24-8 / possible-01
                   :ARG1 (c24-1 / forget-01
                                :ARG0 (c24-0 / he)
                                :ARG1 c24-7
                                :manner (c24-2 / panic-01
                                               :ARG1 c24-0))))
