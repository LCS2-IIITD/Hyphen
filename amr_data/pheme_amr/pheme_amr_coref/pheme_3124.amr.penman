# ::snt If you dont know your history, youre doomed to repeat it. STOP VOTIING RED. STOP FORGETTING WHO IS WHO.
# ::tokens ["If", "you", "do", "nt", "know", "your", "history", ",", "you", "re", "doomed", "to", "repeat", "it", ".", "STOP", "VOTIING", "RED", ".", "STOP", "FORGETTING", "WHO", "IS", "WHO", "."]
# ::lemmas ["if", "you", "do", "not", "know", "your", "history", ",", "you", "re", "doom", "to", "repeat", "it", ".", "stop", "votie", "RED", ".", "stop", "forget", "who", "be", "who", "."]
(c1-2 / multi-sentence
      :snt1 (c1-8 / doom-01
                  :ARG1 (c1-1 / you)
                  :ARG2 (c1-7 / repeat-01
                              :ARG0 c1-1
                              :ARG1 (c1-0 / history
                                          :poss c1-1))
                  :condition (c1-12 / know-01
                                    :ARG0 c1-1
                                    :ARG1 c1-0
                                    :polarity -))
      :snt2 (c1-11 / stop-01
                   :ARG0 (c1-10 / you)
                   :ARG1 (c1-4 / ignore-01
                               :ARG0 c1-10
                               :ARG1 (c1-5 / red-02
                                           :ARG1 c1-10)
                               :mode imperative)
                   :mode imperative)
      :snt3 (c1-3 / stop-01
                  :ARG0 c1-10
                  :ARG1 (c1-9 / get-01
                              :ARG0 c1-10
                              :ARG1 (c1-6 / person
                                          :domain (c1-13 / amr-unknown)))
                  :mode imperative))

# ::snt I see. I agree.
# ::tokens ["I", "see", ".", "I", "agree", "."]
# ::lemmas ["i", "see", ".", "i", "agree", "."]
(c2-0 / multi-sentence
      :snt1 (c2-3 / see-01
                  :ARG0 (c2-1 / i))
      :snt2 (c2-4 / agree-01
                  :ARG0 (c2-2 / i)))

# ::snt you should tell the people don't bring their little children protest clear the police are willing to use violence
# ::tokens ["you", "should", "tell", "the", "people", "do", "n't", "bring", "their", "little", "children", "protest", "clear", "the", "police", "are", "willing", "to", "use", "violence"]
# ::lemmas ["you", "should", "tell", "the", "people", "do", "not", "bring", "their", "little", "child", "protest", "clear", "the", "police", "be", "willing", "to", "use", "violence"]
(c3-10 / recommend-01
       :ARG0 (c3-1 / you)
       :ARG1 (c3-14 / tell-01
                    :ARG0 c3-1
                    :ARG1 (c3-9 / protest-01
                                :ARG0 (c3-15 / person)
                                :ARG1 (c3-2 / will-02
                                            :ARG0 (c3-5 / police)
                                            :ARG1 (c3-4 / use-01
                                                        :ARG0 c3-5
                                                        :ARG1 (c3-8 / violence)))
                                :ARG1-of (c3-11 / clear-06))
                    :ARG2 (c3-13 / person
                                 :ARG0-of (c3-6 / bring-01
                                                :ARG1 (c3-7 / person
                                                            :ARG0-of (c3-0 / have-rel-role-91
                                                                           :ARG1 c3-13
                                                                           :ARG2 (c3-12 / child))
                                                            :mod (c3-3 / little))
                                                :polarity -))))

# ::snt A response to protestors fighting against mistreatment from policies of those elected due to absentees at the ballot box Not U
# ::tokens ["A", "response", "to", "protestors", "fighting", "against", "mistreatment", "from", "policies", "of", "those", "elected", "due", "to", "absentees", "at", "the", "ballot", "box", "Not", "U"]
# ::lemmas ["a", "response", "to", "protestor", "fight", "against", "mistreatment", "from", "policy", "of", "those", "elect", "due", "to", "absentee", "at", "the", "ballot", "box", "not", "u"]
(c4-8 / respond-01
      :ARG1 (c4-0 / fight-01
                  :ARG0 (c4-7 / person
                              :ARG0-of (c4-12 / protest-01))
                  :ARG2 (c4-1 / mistreat-01
                              :ARG0 (c4-2 / policy-01
                                          :ARG0 (c4-11 / person
                                                       :ARG1-of (c4-5 / elect-01
                                                                      :ARG1-of (c4-9 / cause-01
                                                                                     :ARG0 (c4-13 / absent-01
                                                                                                  :ARG1 c4-11
                                                                                                  :location (c4-3 / box
                                                                                                                  :purpose (c4-10 / ballot)))))))
                              :ARG1 c4-7))
      :ARG2 (c4-4 / person
                  :name (c4-6 / name
                              :op1 "U")
                  :polarity -))

# ::snt I'll bite. WTH are you talking about?
# ::tokens ["I", "'ll", "bite", ".", "WTH", "are", "you", "talking", "about", "?"]
# ::lemmas ["i", "'ll", "bite", ".", "WTH", "be", "you", "talk", "about", "?"]
(c5-2 / multi-sentence
      :snt1 (c5-3 / bite-01
                  :ARG0 (c5-4 / i))
      :snt2 (c5-5 / talk-01
                  :ARG0 (c5-1 / you)
                  :ARG1 (c5-6 / amr-unknown)
                  :mod (c5-0 / heck
                             :mode expressive)))

# ::snt i wish u had a livestreamer, if u do make sure to register with
# ::tokens ["i", "wish", "u", "had", "a", "livestreamer", ",", "if", "u", "do", "make", "sure", "to", "register", "with"]
# ::lemmas ["i", "wish", "u", "have", "a", "livestreamer", ",", "if", "u", "do", "make", "sure", "to", "register", "with"]
(c6-1 / wish-01
      :ARG0 (c6-5 / i)
      :ARG1 (c6-0 / have-03
                  :ARG0 (c6-2 / you)
                  :ARG1 (c6-6 / person
                              :ARG0-of (c6-3 / livestream-01)))
      :condition (c6-4 / ensure-01
                       :ARG0 c6-2
                       :ARG1 (c6-7 / register-02
                                   :ARG0 c6-2)))

# ::snt Yes! : Live from
# ::tokens ["Yes", "!", ":", "Live", "from"]
# ::lemmas ["yes", "!", ":", "live", "from"]
(c7-0 / live-01
      :mode expressive)

# ::snt RISE UP!RT : Live from
# ::tokens ["RISE", "UP!RT", ":", "Live", "from"]
# ::lemmas ["rise", "up!rt", ":", "live", "from"]
(c8-4 / rise-up-03
      :ARG0 (c8-0 / you)
      :ARG1-of (c8-2 / broadcast-program
                     :name (c8-3 / name
                                 :op1 "RT"))
      :medium (c8-1 / live)
      :mode imperative)

# ::snt it does say "Kill the police" right ooh RT Live from
# ::tokens ["it", "does", "say", "\"", "Kill", "the", "police", "\"", "right", "ooh", "RT", "Live", "from"]
# ::lemmas ["it", "do", "say", "\"", "kill", "the", "police", "\"", "right", "ooh", "RT", "Live", "from"]
(c9-0 / multi-sentence
      :snt1 (c9-8 / say-01
                  :ARG0 (c9-3 / it)
                  :ARG1 (c9-9 / kill-01
                              :ARG1 (c9-5 / police))
                  :mod (c9-6 / right))
      :snt2 (c9-1 / be-from-91
                  :ARG2 (c9-7 / broadcast-program
                              :name (c9-4 / name
                                          :op1 "RT"
                                          :op2 "Live"))
                  :mod (c9-2 / ooh
                             :mode expressive)))
