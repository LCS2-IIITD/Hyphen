# ::snt times out of it doesn't go down like that.
# ::tokens ["times", "out", "of", "it", "does", "n't", "go", "down", "like", "that", "."]
# ::lemmas ["time", "out", "of", "it", "do", "not", "go", "down", "like", "that", "."]
(c1-1 / go-down-27
      :ARG1 (c1-0 / time
                  :source (c1-2 / it))
      :manner (c1-3 / that)
      :polarity -)

# ::snt And after all that you get shot, dead people can't talk to defend themselves!!
# ::tokens ["And", "after", "all", "that", "you", "get", "shot", ",", "dead", "people", "ca", "n't", "talk", "to", "defend", "themselves", "!", "!"]
# ::lemmas ["and", "after", "all", "that", "you", "get", "shoot", ",", "dead", "people", "can", "not", "talk", "to", "defend", "themselves", "!", "!"]
(c2-9 / and
      :op2 (c2-4 / possible-01
                 :ARG1 (c2-7 / talk-01
                             :ARG0 (c2-8 / person
                                         :ARG1-of (c2-5 / die-01))
                             :purpose (c2-1 / defend-01
                                            :ARG0 c2-8
                                            :ARG1 c2-8))
                 :concession (c2-2 / after
                                   :op1 (c2-6 / shoot-02
                                              :ARG1 (c2-0 / you)
                                              :mod (c2-3 / all)))
                 :polarity -))

# ::snt they know well most people to worried or can't afford delays, arrest or detaining
# ::tokens ["they", "know", "well", "most", "people", "to", "worried", "or", "ca", "n't", "afford", "delays", ",", "arrest", "or", "detaining"]
# ::lemmas ["they", "know", "well", "most", "people", "to", "worried", "or", "can", "not", "afford", "delay", ",", "arrest", "or", "detain"]
(c3-6 / know-01
      :ARG0 (c3-10 / they)
      :ARG1 (c3-4 / or
                  :op1 (c3-0 / worry-01
                             :ARG0 (c3-8 / person
                                         :mod (c3-3 / most)))
                  :op2 (c3-11 / possible-01
                              :ARG1 (c3-12 / afford-01
                                           :ARG0 c3-8
                                           :ARG1 (c3-2 / or
                                                       :op1 (c3-9 / delay-01)
                                                       :op2 (c3-5 / arrest-01)
                                                       :op3 (c3-1 / detain-01)))
                              :polarity -))
      :ARG1-of (c3-7 / well-09))

# ::snt As long as you're not in , as you'll probably get shot or have tear gas thrown at you for saying that.
# ::tokens ["As", "long", "as", "you", "'re", "not", "in", ",", "as", "you", "'ll", "probably", "get", "shot", "or", "have", "tear", "gas", "thrown", "at", "you", "for", "saying", "that", "."]
# ::lemmas ["as", "long", "as", "you", "be", "not", "in", ",", "as", "you", "'ll", "probably", "get", "shoot", "or", "have", "tear", "gas", "throw", "at", "you", "for", "say", "that", "."]
(c4-0 / have-condition-91
      :ARG1 (c4-3 / or
                  :op1 (c4-11 / shoot-02
                              :ARG1 (c4-1 / you))
                  :op2 (c4-12 / throw-01
                              :ARG1 (c4-9 / gas
                                          :consist-of (c4-10 / tear))
                              :ARG2 c4-1
                              :ARG1-of (c4-8 / cause-01
                                             :ARG0 (c4-4 / say-01
                                                         :ARG0 c4-1
                                                         :ARG1 (c4-6 / that))))
                  :mod (c4-7 / probable))
      :ARG2 (c4-13 / as-long-as
                   :op1 (c4-2 / be-located-at-91
                              :ARG1 c4-1
                              :ARG2 (c4-5 / inside)
                              :polarity -)))

# ::snt Maybe the cops should make little signs for photographers: "Don't Shoot"
# ::tokens ["Maybe", "the", "cops", "should", "make", "little", "signs", "for", "photographers", ":", "\"", "Do", "n't", "Shoot", "\""]
# ::lemmas ["maybe", "the", "cop", "should", "make", "little", "sign", "for", "photographer", ":", "\"", "do", "not", "shoot", "\""]
(c5-5 / possible-01
      :ARG1 (c5-6 / recommend-01
                  :ARG1 (c5-2 / make-01
                              :ARG0 (c5-7 / cop)
                              :ARG1 (c5-8 / sign
                                          :mod (c5-1 / little)
                                          :topic (c5-4 / shoot-02
                                                       :ARG0 (c5-0 / you)
                                                       :polarity -
                                                       :mode imperative))
                              :beneficiary (c5-9 / person
                                                 :ARG0-of (c5-3 / photograph-01)))))

# ::snt they are arresting people and have them sign over their recording so they not be detained
# ::tokens ["they", "are", "arresting", "people", "and", "have", "them", "sign", "over", "their", "recording", "so", "they", "not", "be", "detained"]
# ::lemmas ["they", "be", "arrest", "people", "and", "have", "they", "sign", "over", "their", "recording", "so", "they", "not", "be", "detain"]
(c6-8 / and
      :op1 (c6-2 / arrest-01
                 :ARG0 (c6-7 / they)
                 :ARG1 (c6-3 / person))
      :op2 (c6-0 / have-04
                 :ARG0 c6-7
                 :ARG1 (c6-6 / sign-01
                             :ARG0 c6-3
                             :ARG1 (c6-1 / over
                                         :op1 (c6-4 / record-01
                                                    :ARG0 c6-3)))
                 :purpose (c6-5 / detain-01
                                :ARG1 c6-3
                                :polarity -)))

# ::snt Record every traffic stop. tell your sons &amp; daughters to call U if they are being followed by the gestapo BKA police
# ::tokens ["Record", "every", "traffic", "stop", ".", "tell", "your", "sons", "&", "amp", ";", "daughters", "to", "call", "U", "if", "they", "are", "being", "followed", "by", "the", "gestapo", "BKA", "police"]
# ::lemmas ["record", "every", "traffic", "stop", ".", "tell", "your", "son", "&", "amp", ";", "daughter", "to", "call", "u", "if", "they", "be", "be", "follow", "by", "the", "gestapo", "BKA", "police"]
(c7-0 / multi-sentence
      :snt1 (c7-14 / record-01
                   :ARG0 (c7-17 / you)
                   :ARG1 (c7-4 / stop-01
                               :ARG1 (c7-21 / traffic)
                               :mod (c7-11 / every))
                   :mode imperative)
      :snt2 (c7-20 / tell-01
                   :ARG0 (c7-16 / you)
                   :ARG1 (c7-19 / call-02
                                :ARG0 (c7-7 / and
                                            :op1 (c7-1 / person
                                                       :ARG0-of (c7-8 / have-rel-role-91
                                                                      :ARG1 c7-16
                                                                      :ARG2 (c7-12 / son)))
                                            :op2 (c7-5 / person
                                                       :ARG0-of (c7-6 / have-rel-role-91
                                                                      :ARG1 c7-16
                                                                      :ARG2 (c7-2 / daughter))))
                                :ARG1 (c7-18 / string-entity
                                             :value "U")
                                :condition (c7-9 / follow-01
                                                 :ARG0 (c7-10 / police
                                                              :mod (c7-15 / government-organization
                                                                          :name (c7-13 / name
                                                                                       :op1 "BKA"))
                                                              :mod (c7-3 / gestapo))
                                                 :ARG1 c7-7))
                   :ARG2 c7-7
                   :mode imperative))

# ::snt When a policeman asks 'why are you filming?' ...
# ::tokens ["When", "a", "policeman", "asks", "'", "why", "are", "you", "filming", "?", "'", "..."]
# ::lemmas ["when", "a", "policeman", "ask", "'", "why", "be", "you", "film", "?", "'", "..."]
(c8-2 / be-temporally-at-91
      :ARG2 (c8-6 / ask-01
                  :ARG0 (c8-4 / policeman)
                  :ARG1 (c8-5 / cause-01
                              :ARG0 (c8-3 / amr-unknown)
                              :ARG1 (c8-1 / film-01
                                          :ARG0 (c8-0 / you)))))

# ::snt : When a policeman asks 'why are you filming?' ...
# ::tokens [":", "When", "a", "policeman", "asks", "'", "why", "are", "you", "filming", "?", "'", "..."]
# ::lemmas [":", "when", "a", "policeman", "ask", "'", "why", "be", "you", "film", "?", "'", "..."]
(c9-2 / be-temporally-at-91
      :ARG2 (c9-6 / ask-01
                  :ARG0 (c9-4 / policeman)
                  :ARG1 (c9-5 / cause-01
                              :ARG0 (c9-3 / amr-unknown)
                              :ARG1 (c9-1 / film-01
                                          :ARG0 (c9-0 / you)))))

# ::snt Don't try that with the border patrol.--They will ask you to stop-if not arrested-if you do they erase all on camera
# ::tokens ["Do", "n't", "try", "that", "with", "the", "border", "patrol.--They", "will", "ask", "you", "to", "stop", "-", "if", "not", "arrested", "-", "if", "you", "do", "they", "erase", "all", "on", "camera"]
# ::lemmas ["do", "not", "try", "that", "with", "the", "border", "patrol.--they", "will", "ask", "you", "to", "stop", "-", "if", "not", "arrest", "-", "if", "you", "do", "they", "erase", "all", "on", "camera"]
(c10-1 / multi-sentence
       :snt1 (c10-12 / try-01
                     :ARG0 (c10-0 / you)
                     :ARG1 (c10-10 / that)
                     :topic (c10-7 / patrol-01
                                   :ARG1 (c10-2 / border))
                     :polarity -
                     :mode imperative)
       :snt2 (c10-13 / and
                     :op1 (c10-5 / ask-02
                                 :ARG0 (c10-6 / they)
                                 :ARG1 (c10-11 / stop-01
                                               :ARG0 (c10-14 / you
                                                             :ARG2-of c10-5)))
                     :op2 (c10-3 / erase-01
                                 :ARG0 c10-6
                                 :ARG1 (c10-8 / all)
                                 :medium (c10-9 / camera)
                                 :condition (c10-4 / stop-01
                                                   :ARG0 c10-14
                                                   :polarity -))))

# ::snt We don't want to end up like Egypt. We obviously couldn't depend on you to keep the man in line so this is my protection from you.
# ::tokens ["We", "do", "n't", "want", "to", "end", "up", "like", "Egypt", ".", "We", "obviously", "could", "n't", "depend", "on", "you", "to", "keep", "the", "man", "in", "line", "so", "this", "is", "my", "protection", "from", "you", "."]
# ::lemmas ["we", "do", "not", "want", "to", "end", "up", "like", "Egypt", ".", "we", "obviously", "could", "not", "depend", "on", "you", "to", "keep", "the", "man", "in", "line", "so", "this", "be", "my", "protection", "from", "you", "."]
(c11-0 / multi-sentence
       :snt1 (c11-12 / want-01
                     :ARG0 (c11-2 / we)
                     :ARG1 (c11-8 / end-up-03
                                  :ARG1 c11-2
                                  :ARG2 (c11-11 / resemble-01
                                                :ARG1 c11-2
                                                :ARG2 (c11-17 / country
                                                              :name (c11-9 / name
                                                                           :op1 "Egypt"))))
                     :polarity -)
       :snt2 (c11-3 / possible-01
                    :ARG1 (c11-4 / depend-01
                                 :ARG0 (c11-1 / we)
                                 :ARG1 (c11-15 / you)
                                 :purpose (c11-14 / keep-04
                                                  :ARG0 (c11-18 / you
                                                                :ARG1 (c11-10 / man
                                                                              :ARG1-of (c11-7 / line-up-02))))
                                 :ARG1-of (c11-16 / obvious-01)
                                 :ARG0-of (c11-5 / cause-01
                                                 :ARG1 (c11-6 / protect-01
                                                              :ARG0 (c11-13 / i)
                                                              :ARG1 c11-18
                                                              :ARG2 (c11-19 / this))))
                    :polarity -))

# ::snt : When a policeman asks 'why are you filming?' ...
# ::tokens [":", "When", "a", "policeman", "asks", "'", "why", "are", "you", "filming", "?", "'", "..."]
# ::lemmas [":", "when", "a", "policeman", "ask", "'", "why", "be", "you", "film", "?", "'", "..."]
(c12-2 / be-temporally-at-91
       :ARG2 (c12-6 / ask-01
                    :ARG0 (c12-4 / policeman)
                    :ARG1 (c12-5 / cause-01
                                 :ARG0 (c12-3 / amr-unknown)
                                 :ARG1 (c12-1 / film-01
                                              :ARG0 (c12-0 / you)))))

# ::snt Answer; st amendment.
# ::tokens ["Answer", ";", "st", "amendment", "."]
# ::lemmas ["answer", ";", "st", "amendment", "."]
(c13-2 / answer-01
       :ARG2 (c13-1 / law
                    :name (c13-0 / name
                                 :op1 "st"
                                 :op2 "Amendment")))

# ::snt Put your speaker phone on on your phone too if they stop you, Call a friend and let them listen.
# ::tokens ["Put", "your", "speaker", "phone", "on", "on", "your", "phone", "too", "if", "they", "stop", "you", ",", "Call", "a", "friend", "and", "let", "them", "listen", "."]
# ::lemmas ["put", "your", "speaker", "phone", "on", "on", "your", "phone", "too", "if", "they", "stop", "you", ",", "call", "a", "friend", "and", "let", "they", "listen", "."]
(c14-16 / and
        :op1 (c14-8 / put-01
                    :ARG0 (c14-1 / you)
                    :ARG1 (c14-15 / phone
                                  :instrument-of (c14-12 / speak-01)
                                  :poss c14-1)
                    :ARG2 (c14-5 / on
                                 :op1 (c14-4 / phone
                                             :poss c14-1))
                    :mod (c14-14 / too)
                    :condition (c14-6 / stop-01
                                      :ARG0 (c14-11 / they)
                                      :ARG1 c14-1)
                    :mode imperative)
        :op2 (c14-7 / and
                    :op1 (c14-10 / call-02
                                 :ARG0 c14-1
                                 :ARG1 (c14-13 / person
                                               :ARG0-of (c14-0 / have-rel-role-91
                                                               :ARG1 c14-1
                                                               :ARG2 (c14-2 / friend)))
                                 :mode imperative)
                    :op2 (c14-3 / let-01
                                :ARG0 c14-1
                                :ARG1 (c14-9 / listen-01
                                             :ARG0 c14-13)
                                :mode imperative)))

# ::snt When did this become an unlawful act?
# ::tokens ["When", "did", "this", "become", "an", "unlawful", "act", "?"]
# ::lemmas ["when", "do", "this", "become", "an", "unlawful", "act", "?"]
(c15-1 / become-01
       :ARG1 (c15-3 / this)
       :ARG2 (c15-4 / act-02
                    :mod (c15-0 / law
                                :polarity -))
       :time (c15-2 / amr-unknown))
