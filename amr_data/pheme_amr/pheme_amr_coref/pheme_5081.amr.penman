# ::snt will go bankrupt after a massive lawsuit.
# ::tokens ["will", "go", "bankrupt", "after", "a", "massive", "lawsuit", "."]
# ::lemmas ["will", "go", "bankrupt", "after", "a", "massive", "lawsuit", "."]
(c1-1 / bankrupt-01
      :ARG1 (c1-2 / it)
      :time (c1-4 / after
                  :op1 (c1-3 / sue-02
                             :mod (c1-0 / massive))))

# ::snt every pilot could get in by fingerprints only?
# ::tokens ["every", "pilot", "could", "get", "in", "by", "fingerprints", "only", "?"]
# ::lemmas ["every", "pilot", "could", "get", "in", "by", "fingerprint", "only", "?"]
(c2-4 / possible-01
      :polarity (c2-7 / amr-unknown)
      :ARG1 (c2-5 / get-05
                  :ARG1 (c2-6 / person
                              :ARG0-of (c2-1 / pilot-01)
                              :mod (c2-3 / every))
                  :ARG2 (c2-0 / fingerprints
                              :mod (c2-2 / only))))

# ::snt Still no explanation for reporting 'old' news nor a link to a livestream? Come on: journalism is about sharing info
# ::tokens ["Still", "no", "explanation", "for", "reporting", "'", "old", "'", "news", "nor", "a", "link", "to", "a", "livestream", "?", "Come", "on", ":", "journalism", "is", "about", "sharing", "info"]
# ::lemmas ["still", "no", "explanation", "for", "report", "'", "old", "'", "news", "nor", "a", "link", "to", "a", "livestream", "?", "come", "on", ":", "journalism", "be", "about", "share", "info"]
(c3-3 / multi-sentence
      :snt1 (c3-5 / explain-01
                  :ARG1 (c3-9 / report-01
                              :ARG1 (c3-8 / news
                                          :mod (c3-4 / old)))
                  :mod (c3-13 / still)
                  :polarity -)
      :snt2 (c3-2 / link-01
                  :ARG1 (c3-12 / livestream-01)
                  :polarity -)
      :snt3 (c3-10 / come-on-25
                   :ARG1 (c3-1 / you)
                   :mode imperative)
      :snt4 (c3-11 / concern-02
                   :ARG0 (c3-0 / journalism)
                   :ARG1 (c3-6 / share-01
                               :ARG1 (c3-7 / information))))

# ::snt why would there be adrenaline, he may have been quite calm having already made this sick decision.
# ::tokens ["why", "would", "there", "be", "adrenaline", ",", "he", "may", "have", "been", "quite", "calm", "having", "already", "made", "this", "sick", "decision", "."]
# ::lemmas ["why", "would", "there", "be", "adrenaline", ",", "he", "may", "have", "be", "quite", "calm", "having", "already", "make", "this", "sick", "decision", "."]
(c4-5 / cause-01
      :ARG0 (c4-9 / adrenaline)
      :ARG1 (c4-3 / possible-01
                  :ARG1 (c4-4 / calm-03
                              :ARG1 (c4-0 / he)
                              :degree (c4-1 / quite)
                              :ARG1-of c4-5
                              :ARG0 (c4-6 / decide-01
                                          :ARG0 c4-0
                                          :ARG1 (c4-8 / this)
                                          :ARG1-of (c4-7 / sick-02)
                                          :time (c4-2 / already)))))

# ::snt Mirrors wouldn't hv prevented this. My guess is copilot received diagnosis of RA, Fibro or similar &amp; feared an end to his career. SAD
# ::tokens ["Mirrors", "would", "n't", "hv", "prevented", "this", ".", "My", "guess", "is", "copilot", "received", "diagnosis", "of", "RA", ",", "Fibro", "or", "similar", "&", "amp", ";", "feared", "an", "end", "to", "his", "career", ".", "SAD"]
# ::lemmas ["mirror", "would", "not", "hv", "prevented", "this", ".", "my", "guess", "be", "copilot", "receive", "diagnosis", "of", "RA", ",", "Fibro", "or", "similar", "&", "amp", ";", "fear", "an", "end", "to", "his", "career", ".", "SAD"]
(c5-2 / multi-sentence
      :snt1 (c5-6 / prevent-01
                  :ARG0 (c5-13 / mirror)
                  :ARG1 (c5-21 / this)
                  :polarity -)
      :snt2 (c5-15 / guess-01
                   :ARG0 (c5-17 / i)
                   :ARG1 (c5-14 / receive-01
                                :ARG0 (c5-20 / copilot)
                                :ARG1 (c5-7 / diagnose-01
                                            :ARG1 c5-20
                                            :ARG2 (c5-18 / or
                                                         :op1 (c5-0 / disease
                                                                    :name (c5-12 / name
                                                                                 :op1 "arthritis"))
                                                         :op2 (c5-16 / disease
                                                                     :name (c5-19 / name
                                                                                  :op1 " fibro"))
                                                         :op3 (c5-3 / disease
                                                                    :name (c5-4 / name
                                                                                :op1 "cancer"))
                                                         :op4 (c5-9 / medical-condition
                                                                    :name (c5-5 / name
                                                                                :op1 "amp"))))))
      :snt3 (c5-10 / fear-01
                   :ARG0 c5-20
                   :ARG1 (c5-11 / end-01
                                :ARG0 c5-20
                                :ARG1 (c5-8 / career
                                            :poss c5-20)))
      :snt4 (c5-1 / disease
                  :name (c5-22 / name
                               :op1 "SAD")))

# ::snt question...why auto pilot not set up with maxi and min altitude and speed limit like car with min speed?
# ::tokens ["question", "...", "why", "auto", "pilot", "not", "set", "up", "with", "maxi", "and", "min", "altitude", "and", "speed", "limit", "like", "car", "with", "min", "speed", "?"]
# ::lemmas ["question", "...", "why", "auto", "pilot", "not", "set", "up", "with", "maxi", "and", "min", "altitude", "and", "speed", "limit", "like", "car", "with", "min", "speed", "?"]
(c6-4 / question-01
      :ARG1 (c6-9 / cause-01
                  :ARG0 (c6-15 / amr-unknown)
                  :ARG1 (c6-12 / set-up-03
                               :ARG1 (c6-7 / person
                                           :ARG0-of (c6-14 / pilot-01
                                                           :mod (c6-5 / auto)))
                               :ARG2 (c6-6 / and
                                           :op1 (c6-13 / altitude
                                                       :mod (c6-1 / minimum))
                                           :op2 (c6-0 / limit-01
                                                      :ARG1 (c6-3 / speed)))
                               :ARG1-of (c6-8 / resemble-01
                                              :ARG2 (c6-10 / car
                                                           :ARG0-of (c6-2 / speed-01
                                                                          :mod (c6-11 / minimum))))
                               :polarity -)))

# ::snt impossible
# ::tokens ["impossible"]
# ::lemmas ["impossible"]
(c7-0 / possible-01
      :polarity -)

# ::snt . Is this a FIRST, murder by computer hacking?
# ::tokens [".", "Is", "this", "a", "FIRST", ",", "murder", "by", "computer", "hacking", "?"]
# ::lemmas [".", "be", "this", "a", "FIRST", ",", "murder", "by", "computer", "hacking", "?"]
(c8-1 / murder-01
      :ARG0 (c8-0 / hack-04
                  :ARG1 (c8-3 / computer))
      :domain (c8-4 / this)
      :ord (c8-2 / ordinal-entity
                 :value 1)
      :polarity (c8-5 / amr-unknown))

# ::snt Money is talking
# ::tokens ["Money", "is", "talking"]
# ::lemmas ["money", "be", "talk"]
(c9-1 / talk-01
      :ARG0 (c9-0 / money))

# ::snt hrs later it's all about money. Of course
# ::tokens ["hrs", "later", "it", "'s", "all", "about", "money", ".", "Of", "course"]
# ::lemmas ["hrs", "later", "it", "be", "all", "about", "money", ".", "of", "course"]
(c10-2 / multi-sentence
       :snt1 (c10-6 / concern-02
                    :ARG0 (c10-4 / it)
                    :ARG1 (c10-5 / money)
                    :time (c10-8 / after
                                 :quant (c10-1 / multiple
                                               :op1 (c10-7 / temporal-quantity
                                                           :unit (c10-0 / year)
                                                           :quant 1)))
                    :mod (c10-3 / of-course
                                :snt2-of c10-2)))

# ::snt Must your show post pictures of the co-pilots evilness? No one cares what he looks like. Let's honour the victims instead.
# ::tokens ["Must", "your", "show", "post", "pictures", "of", "the", "co", "-", "pilots", "evilness", "?", "No", "one", "cares", "what", "he", "looks", "like", ".", "Let", "'s", "honour", "the", "victims", "instead", "."]
# ::lemmas ["must", "your", "show", "post", "picture", "of", "the", "co", "-", "pilot", "evilness", "?", "no", "one", "care", "what", "he", "look", "like", ".", "let", "us", "honour", "the", "victim", "instead", "."]
(c11-4 / multi-sentence
       :snt1 (c11-15 / truth-value
                     :polarity-of (c11-5 / obligate-01
                                         :ARG1 (c11-14 / show-04
                                                       :ARG0 (c11-1 / you))
                                         :ARG2 (c11-10 / post-01
                                                       :ARG0 c11-14
                                                       :ARG1 (c11-16 / picture
                                                                     :topic (c11-6 / evilness
                                                                                   :mod (c11-12 / co-polarity))))))
       :snt2 (c11-11 / care-01
                     :ARG0 (c11-8 / no-one)
                     :ARG1 (c11-13 / thing
                                   :ARG2-of (c11-3 / look-02
                                                   :ARG0 (c11-0 / he))))
       :snt3 (c11-17 / honor-01
                     :ARG0 (c11-2 / we)
                     :ARG1 (c11-9 / victim)
                     :ARG1-of (c11-7 / instead-of-91)
                     :mode imperative))

# ::snt sounds like he was asleep. If he was awake then the human body adrenaline would've made him breathe harder.
# ::tokens ["sounds", "like", "he", "was", "asleep", ".", "If", "he", "was", "awake", "then", "the", "human", "body", "adrenaline", "would", "'ve", "made", "him", "breathe", "harder", "."]
# ::lemmas ["sound", "like", "he", "be", "asleep", ".", "if", "he", "be", "awake", "then", "the", "human", "body", "adrenaline", "would", "'ve", "make", "he", "breathe", "hard", "."]
(c12-2 / multi-sentence
       :snt1 (c12-12 / sound-01
                     :ARG1 (c12-6 / sleep-01
                                  :ARG0 (c12-0 / he)))
       :snt2 (c12-14 / have-condition-91
                     :ARG1 (c12-9 / make-02
                                  :ARG0 (c12-13 / adrenaline
                                                :mod (c12-4 / body
                                                            :mod (c12-8 / human)))
                                  :ARG1 (c12-11 / breathe-01
                                                :ARG0 (c12-5 / he)
                                                :ARG1-of (c12-3 / have-degree-91
                                                                :ARG2 (c12-10 / hard-02
                                                                              :ARG1 c12-11)
                                                                :ARG3 (c12-1 / more))))
                     :ARG2 (c12-7 / awake-03
                                  :ARG1 c12-5)))

# ::snt Dude, too soon. What people are worth... $160k. Stop talking. Move on.
# ::tokens ["Dude", ",", "too", "soon", ".", "What", "people", "are", "worth", "...", "$", "160k", ".", "Stop", "talking", ".", "Move", "on", "."]
# ::lemmas ["dude", ",", "too", "soon", ".", "what", "people", "be", "worth", "...", "$", "160k", ".", "stop", "talk", ".", "move", "on", "."]
(c13-4 / multi-sentence
       :snt1 (c13-8 / dude
                    :ARG1-of (c13-0 / have-degree-91
                                    :ARG2 (c13-11 / soon)
                                    :ARG3 (c13-12 / too)))
       :snt2 (c13-1 / worth-01
                    :ARG1 (c13-7 / person)
                    :ARG2 (c13-9 / monetary-quantity
                                 :unit (c13-2 / dollar)
                                 :quant 150000))
       :snt3 (c13-6 / stop-01
                    :ARG0 (c13-3 / you)
                    :ARG1 (c13-10 / talk-01
                                  :ARG0 c13-3)
                    :mode imperative)
       :snt4 (c13-5 / move-01
                    :ARG0 (c13-13 / you)
                    :mode imperative))

# ::snt There's a -digit code unlock door that all pilots know. Co-pilot consciously set descent AND prevented unlocking.
# ::tokens ["There", "'s", "a", "-digit", "code", "unlock", "door", "that", "all", "pilots", "know", ".", "Co", "-", "pilot", "consciously", "set", "descent", "AND", "prevented", "unlocking", "."]
# ::lemmas ["there", "be", "a", "-digit", "code", "unlock", "door", "that", "all", "pilot", "know", ".", "co", "-", "pilot", "consciously", "set", "descent", "and", "prevent", "unlocking", "."]
(c14-1 / multi-sentence
       :snt1 (c14-14 / unlock-01
                     :ARG0 (c14-18 / code)
                     :ARG1 (c14-3 / door
                                  :mod (c14-0 / digit
                                              :value 1))
                     :ARG1-of (c14-17 / know-01
                                      :ARG0 (c14-2 / person
                                                   :ARG0-of (c14-6 / pilot-01)
                                                   :mod (c14-7 / all))))
       :snt2 (c14-15 / and
                     :op1 (c14-5 / set-02
                                 :ARG0 (c14-9 / person
                                              :ARG0-of (c14-12 / pilot-01)
                                              :ARG0-of (c14-8 / have-org-role-91
                                                              :ARG2 (c14-4 / co-pilot)))
                                 :ARG1 (c14-13 / descend-01)
                                 :manner (c14-16 / conscious))
                     :op2 (c14-10 / prevent-01
                                  :ARG0 c14-9
                                  :ARG1 (c14-11 / unlock-01))))
