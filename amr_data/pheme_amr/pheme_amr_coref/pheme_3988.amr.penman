# ::snt who cares
# ::tokens ["who", "cares"]
# ::lemmas ["who", "care"]
(c1-0 / care-01
      :ARG0 (c1-1 / amr-unknown))

# ::snt selenator
# ::tokens ["selenator"]
# ::lemmas ["selenator"]
(c2-1 / person
      :ARG0-of (c2-0 / selenator-01))

# ::snt salena I love u add me on Facebook my id saeedbadshah50.com
# ::tokens ["salena", "I", "love", "u", "add", "me", "on", "Facebook", "my", "i", "d", "saeedbadshah50.com"]
# ::lemmas ["salena", "i", "love", "u", "add", "i", "on", "Facebook", "my", "i", "d", "saeedbadshah50.com"]
(c3-2 / multi-sentence
      :snt1 (c3-9 / say-01
                  :ARG0 (c3-4 / i)
                  :ARG1 (c3-1 / love-01
                              :ARG0 c3-4)
                  :ARG2 (c3-7 / person
                              :name (c3-5 / name
                                          :op1 "Salena")))
      :snt2 (c3-11 / add-02
                   :ARG0 (c3-0 / you)
                   :ARG1 (c3-8 / i)
                   :ARG2 (c3-3 / url-entity
                               :value "seedbadshah50.com")
                   :medium (c3-10 / publication
                                  :name (c3-6 / name
                                              :op1 "Facebook"))))

# ::snt no need to twist things , this is you're religion honey
# ::tokens ["no", "need", "to", "twist", "things", ",", "this", "is", "you", "'re", "religion", "honey"]
# ::lemmas ["no", "need", "to", "twist", "thing", ",", "this", "be", "you", "be", "religion", "honey"]
(c4-8 / say-01
      :ARG0 (c4-2 / i)
      :ARG1 (c4-3 / need-01
                  :ARG1 (c4-9 / twist-01
                              :ARG1 (c4-7 / thing))
                  :ARG1-of (c4-6 / cause-01
                                 :ARG0 (c4-5 / religion
                                             :domain (c4-1 / you)
                                             :domain (c4-4 / this)))
                  :polarity -)
      :ARG2 (c4-0 / honey))

# ::snt thats why i wont tell you
# ::tokens ["that", "s", "why", "i", "wo", "nt", "tell", "you"]
# ::lemmas ["that", "s", "why", "i", "will", "not", "tell", "you"]
(c5-2 / cause-01
      :ARG0 (c5-4 / that)
      :ARG1 (c5-3 / tell-01
                  :ARG0 (c5-1 / i)
                  :ARG2 (c5-0 / you)
                  :polarity -))

# ::snt who are u
# ::tokens ["who", "are", "u"]
# ::lemmas ["who", "be", "u"]
(c6-0 / you
      :domain (c6-1 / amr-unknown))

# ::snt tell me
# ::tokens ["tell", "me"]
# ::lemmas ["tell", "i"]
(c7-1 / tell-01
      :ARG0 (c7-0 / you)
      :ARG2 (c7-2 / i)
      :mode imperative)

# ::snt why what happened in sydney
# ::tokens ["why", "what", "happened", "in", "sydney"]
# ::lemmas ["why", "what", "happen", "in", "sydney"]
(c8-3 / cause-01
      :ARG0 (c8-4 / amr-unknown)
      :ARG1 (c8-0 / event
                  :location (c8-2 / city
                                  :name (c8-1 / name
                                              :op1 "Sydney"))))

# ::snt hostages were taken in a caf in Sydney.
# ::tokens ["hostages", "were", "taken", "in", "a", "caf", "in", "Sydney", "."]
# ::lemmas ["hostage", "be", "take", "in", "a", "caf", "in", "Sydney", "."]
(c9-4 / take-01
      :ARG1 (c9-0 / hostage)
      :location (c9-3 / cafe
                      :location (c9-2 / city
                                      :name (c9-1 / name
                                                  :op1 "Sydney"))))

# ::snt no
# ::tokens ["no"]
# ::lemmas ["no"]
(c10-0 / no)

# ::snt *your honey, learn to spell before talking shit
# ::tokens ["*", "your", "honey", ",", "learn", "to", "spell", "before", "talking", "shit"]
# ::lemmas ["*", "your", "honey", ",", "learn", "to", "spell", "before", "talk", "shit"]
(c11-8 / say-01
       :ARG0 (c11-6 / i)
       :ARG1 (c11-2 / learn-01
                    :ARG0 (c11-7 / person
                                 :ARG0-of (c11-0 / have-rel-role-91
                                                 :ARG1 (c11-1 / you)
                                                 :ARG2 (c11-10 / honey)))
                    :ARG1 (c11-5 / spell-01
                                 :ARG0 c11-7)
                    :time (c11-4 / before
                                 :op1 (c11-9 / talk-01
                                             :ARG0 c11-7
                                             :ARG1 (c11-3 / shit)))
                    :mode imperative)
       :ARG2 c11-7)

# ::snt I dont know u
# ::tokens ["I", "do", "nt", "know", "u"]
# ::lemmas ["i", "do", "not", "know", "u"]
(c12-1 / know-01
       :ARG0 (c12-2 / i)
       :ARG1 (c12-0 / you)
       :polarity -)

# ::snt where u from
# ::tokens ["where", "u", "from"]
# ::lemmas ["where", "u", "from"]
(c13-1 / be-from-91
       :ARG1 (c13-0 / you))

# ::snt u r khalid
# ::tokens ["u", "r", "khalid"]
# ::lemmas ["u", "r", "khalid"]
(c14-1 / person
       :name (c14-0 / name
                    :op1 "U r khalid"))

# ::snt ok
# ::tokens ["ok"]
# ::lemmas ["ok"]
(c15-0 / okay-04)

# ::snt beautiful picture.
# ::tokens ["beautiful", "picture", "."]
# ::lemmas ["beautiful", "picture", "."]
(c16-0 / picture
       :ARG1-of (c16-1 / beautiful-02))

# ::snt Australians are Muslim and every other religion, Bob.I understand why this must be said today.
# ::tokens ["Australians", "are", "Muslim", "and", "every", "other", "religion", ",", "Bob", ".", "I", "understand", "why", "this", "must", "be", "said", "today", "."]
# ::lemmas ["Australians", "be", "Muslim", "and", "every", "other", "religion", ",", "Bob", ".", "i", "understand", "why", "this", "must", "be", "say", "today", "."]
(c17-0 / multi-sentence
       :snt1 (c17-5 / say-01
                    :ARG1 (c17-7 / and
                                 :op1 (c17-11 / religious-group
                                              :name (c17-10 / name
                                                            :op1 "Muslim")
                                              :domain (c17-3 / person
                                                             :mod (c17-18 / country
                                                                          :name (c17-17 / name
                                                                                        :op1 "Australia"))))
                                 :op2 (c17-1 / religion
                                             :mod (c17-16 / other)
                                             :mod (c17-8 / every)))
                    :ARG2 (c17-6 / person
                                 :name (c17-2 / name
                                              :op1 "Bob")))
       :snt2 (c17-12 / understand-01
                     :ARG0 (c17-13 / i)
                     :ARG1 (c17-20 / thing
                                   :ARG0-of (c17-4 / cause-01
                                                   :ARG1 (c17-15 / obligate-01
                                                                 :ARG2 (c17-9 / say-01
                                                                              :ARG1 (c17-19 / this)
                                                                              :time (c17-14 / today)))))))

# ::snt what drama
# ::tokens ["what", "drama"]
# ::lemmas ["what", "drama"]
(c18-1 / drama
       :degree (c18-0 / so))

# ::snt goodbye.
# ::tokens ["goodbye", "."]
# ::lemmas ["goodbye", "."]
(c19-0 / goodbye)

# ::snt &lt;----Disgrace. Only concerned about Liberal Talking points and NOT the Hostages being terrorized. Sickening.
# ::tokens ["&", "lt;----Disgrace", ".", "Only", "concerned", "about", "Liberal", "Talking", "points", "and", "NOT", "the", "Hostages", "being", "terrorized", ".", "Sickening", "."]
# ::lemmas ["&", "lt;----disgrace", ".", "only", "concerned", "about", "Liberal", "Talking", "point", "and", "not", "the", "Hostages", "be", "terrorize", ".", "sicken", "."]
(c20-3 / multi-sentence
       :snt1 (c20-11 / and
                     :op1 (c20-7 / disgust-01)
                     :op2 (c20-8 / concern-01
                                 :ARG0 (c20-6 / and
                                              :op1 (c20-0 / have-talking-point-07
                                                          :ARG1-of (c20-2 / liberal-02))
                                              :op2 (c20-10 / terrorize-01
                                                           :ARG1 (c20-4 / hostage)
                                                           :polarity -))
                                 :ARG1 (c20-1 / we)
                                 :mod (c20-5 / only)))
       :snt2 (c20-9 / sicken-01))

# ::snt i am not selena.
# ::tokens ["i", "am", "not", "selena", "."]
# ::lemmas ["i", "be", "not", "selena", "."]
(c21-0 / selena
       :domain (c21-1 / i)
       :polarity -)
