# ::snt FOLLOWE ME PLS?
# ::tokens ["FOLLOWE", "ME", "PLS", "?"]
# ::lemmas ["FOLLOWE", "ME", "PLS", "?"]
(c1-1 / follow-02
      :ARG0 (c1-0 / you)
      :ARG1 (c1-3 / i)
      :polarity (c1-2 / amr-unknown)
      :mode imperative)

# ::snt On TV looks like ambulances are arriving at perimeter of site in Paris.
# ::tokens ["On", "TV", "looks", "like", "ambulances", "are", "arriving", "at", "perimeter", "of", "site", "in", "Paris", "."]
# ::lemmas ["on", "tv", "look", "like", "ambulance", "be", "arrive", "at", "perimeter", "of", "site", "in", "Paris", "."]
(c2-0 / look-02
      :ARG1 (c2-7 / arrive-01
                  :ARG1 (c2-1 / ambulance)
                  :ARG4 (c2-3 / perimeter
                              :poss (c2-5 / site)
                              :location (c2-4 / city
                                              :name (c2-2 / name
                                                          :op1 "Paris"))))
      :medium (c2-6 / television))

# ::snt VIDEO: Flashes seen in shop as explosions are heard at site of hostage-taking in central Paris
# ::tokens ["VIDEO", ":", "Flashes", "seen", "in", "shop", "as", "explosions", "are", "heard", "at", "site", "of", "hostage", "-", "taking", "in", "central", "Paris"]
# ::lemmas ["video", ":", "flash", "see", "in", "shop", "as", "explosion", "be", "hear", "at", "site", "of", "hostage", "-", "taking", "in", "central", "Paris"]
(c3-9 / see-01
      :ARG0 (c3-6 / video)
      :ARG1 (c3-1 / flash
                  :location (c3-3 / shop))
      :time (c3-0 / hear-01
                  :ARG1 (c3-4 / explode-01)
                  :location (c3-2 / site
                                  :mod (c3-10 / take-01
                                              :ARG1 (c3-11 / hostage)
                                              :location (c3-8 / center
                                                              :part-of (c3-7 / city
                                                                             :name (c3-5 / name
                                                                                         :op1 "Paris")))))))

# ::snt Could u follow me? Pleade
# ::tokens ["Could", "u", "follow", "me", "?", "Pleade"]
# ::lemmas ["could", "u", "follow", "i", "?", "Pleade"]
(c4-2 / multi-sentence
      :snt1 (c4-4 / possible-01
                  :polarity (c4-8 / amr-unknown)
                  :ARG1 (c4-1 / follow-02
                              :ARG0 (c4-0 / you)
                              :ARG1 (c4-3 / i)))
      :snt2 (c4-7 / plead-01
                  :ARG0 (c4-5 / i)
                  :ARG2 (c4-6 / you)))

# ::snt thanks
# ::tokens ["thanks"]
# ::lemmas ["thank"]
(c5-0 / thank-01)

# ::snt : VIDEO: Flashes seen in shop as explosions are heard at site of hostage-taking in central Paris
# ::tokens [":", "VIDEO", ":", "Flashes", "seen", "in", "shop", "as", "explosions", "are", "heard", "at", "site", "of", "hostage", "-", "taking", "in", "central", "Paris"]
# ::lemmas [":", "video", ":", "flash", "see", "in", "shop", "as", "explosion", "be", "hear", "at", "site", "of", "hostage", "-", "taking", "in", "central", "Paris"]
(c6-12 / and
       :op1 (c6-7 / video)
       :op2 (c6-10 / see-01
                   :ARG1 (c6-1 / flash)
                   :location (c6-4 / shop)
                   :time (c6-0 / hear-01
                               :ARG1 (c6-5 / explode-01)
                               :location (c6-2 / site
                                               :mod (c6-11 / take-01
                                                           :ARG1 (c6-3 / hostage)
                                                           :location (c6-9 / center
                                                                           :part-of (c6-8 / city
                                                                                          :name (c6-6 / name
                                                                                                      :op1 "Paris"))))))))

# ::snt Innocent people are being murdered, and your first reaction is begging for followers on Twitter? You should be ashamed.
# ::tokens ["Innocent", "people", "are", "being", "murdered", ",", "and", "your", "first", "reaction", "is", "begging", "for", "followers", "on", "Twitter", "?", "You", "should", "be", "ashamed", "."]
# ::lemmas ["innocent", "people", "be", "be", "murder", ",", "and", "your", "first", "reaction", "be", "beg", "for", "follower", "on", "Twitter", "?", "you", "should", "be", "ashamed", "."]
(c7-2 / multi-sentence
      :snt1 (c7-14 / and
                   :op1 (c7-8 / murder-01
                              :ARG1 (c7-9 / person
                                          :ARG1-of (c7-5 / innocent-01)))
                   :op2 (c7-10 / react-01
                               :ARG0 (c7-0 / you)
                               :ARG2 (c7-3 / beg-01
                                           :ARG0 c7-0
                                           :ARG1 c7-9
                                           :ARG0-of (c7-1 / follow-02
                                                          :ARG1 c7-0))
                               :ARG2 c7-9
                               :medium (c7-13 / publication
                                              :name (c7-7 / name
                                                          :op1 "Twitter")))
                   :ord (c7-4 / ordinal-entity
                              :value 1))
      :snt2 (c7-6 / recommend-01
                  :ARG1 (c7-12 / shame-02
                               :ARG1 (c7-11 / you
                                            :ARG2-of c7-6))))

# ::snt I'm so sad
# ::tokens ["I", "'m", "so", "sad"]
# ::lemmas ["i", "be", "so", "sad"]
(c8-0 / sad-02
      :ARG1 (c8-2 / i)
      :degree (c8-1 / so))

# ::snt the only hostage has been freed
# ::tokens ["the", "only", "hostage", "has", "been", "freed"]
# ::lemmas ["the", "only", "hostage", "have", "be", "free"]
(c9-1 / free-01
      :ARG1 (c9-0 / hostage
                  :mod (c9-2 / only)))

# ::snt the two Assassins They have been killed by police moments ago
# ::tokens ["the", "two", "Assassins", "They", "have", "been", "killed", "by", "police", "moments", "ago"]
# ::lemmas ["the", "two", "assassin", "they", "have", "be", "kill", "by", "police", "moment", "ago"]
(c10-4 / kill-01
       :ARG0 (c10-3 / police)
       :ARG1 (c10-5 / person
                    :ARG0-of (c10-6 / assassinate-01)
                    :quant 2)
       :time (c10-1 / before
                    :op1 (c10-2 / now)
                    :quant (c10-0 / moment)))

# ::snt Meant TV5
# ::tokens ["Meant", "TV5"]
# ::lemmas ["Meant", "TV5"]
(c11-2 / mean-01
       :ARG2 (c11-1 / publication
                    :name (c11-0 / name
                                 :op1 "TV5")))

# ::snt how hard is it for sky news to report that its a kosher market???
# ::tokens ["how", "hard", "is", "it", "for", "sky", "news", "to", "report", "that", "its", "a", "kosher", "market", "?", "?", "?"]
# ::lemmas ["how", "hard", "be", "it", "for", "sky", "news", "to", "report", "that", "its", "a", "kosher", "market", "?", "?", "?"]
(c12-0 / hard-02
       :ARG1 (c12-5 / report-01
                    :ARG0 (c12-2 / broadcast-program
                                 :name (c12-4 / name
                                              :op1 "Sky"
                                              :op2 "News"))
                    :ARG1 (c12-1 / market
                                 :mod (c12-6 / kosher)
                                 :domain (c12-3 / it)))
       :degree (c12-7 / amr-unknown))

# ::snt special offer
# ::tokens ["special", "offer"]
# ::lemmas ["special", "offer"]
(c13-0 / offer-01
       :ARG1-of (c13-1 / special-02))

# ::snt Hoping all hostages in both situations are ok.
# ::tokens ["Hoping", "all", "hostages", "in", "both", "situations", "are", "ok", "."]
# ::lemmas ["hope", "all", "hostage", "in", "both", "situation", "be", "ok", "."]
(c14-0 / hope-01
       :ARG1 (c14-3 / okay-04
                    :ARG1 (c14-1 / hostage
                                 :mod (c14-5 / all)
                                 :prep-in (c14-4 / situation
                                                 :mod (c14-2 / both)))))

# ::snt Please don't let anymore innocent people die
# ::tokens ["Please", "do", "n't", "let", "anymore", "innocent", "people", "die"]
# ::lemmas ["please", "do", "not", "let", "anymore", "innocent", "people", "die"]
(c16-1 / let-01
       :ARG0 (c16-0 / you)
       :ARG1 (c16-4 / die-01
                    :ARG1 (c16-3 / person
                                 :ARG1-of (c16-2 / innocent-01)
                                 :quant (c16-5 / anymore))
                    :polarity -)
       :mode imperative
       :polite +)

# ::snt well, we already know that cnn is filled with jew hating bastards
# ::tokens ["well", ",", "we", "already", "know", "that", "cnn", "is", "filled", "with", "jew", "hating", "bastards"]
# ::lemmas ["well", ",", "we", "already", "know", "that", "cnn", "be", "fill", "with", "jew", "hate", "bastard"]
(c17-8 / know-01
       :ARG0 (c17-1 / we)
       :ARG1 (c17-2 / fill-01
                    :ARG1 (c17-6 / publication
                                 :name (c17-4 / name
                                              :op1 "CNN"))
                    :ARG2 (c17-3 / bastard
                                 :ARG0-of (c17-0 / hate-01
                                                 :ARG1 (c17-7 / religious-group
                                                              :name (c17-5 / name
                                                                           :op1 "Jew")))))
       :time (c17-9 / already))

# ::snt please
# ::tokens ["please"]
# ::lemmas ["please"]
(c18-0 / please
       :polite +)
