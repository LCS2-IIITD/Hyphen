# ::snt He lied and flung accusations throughout. Incompetent.
# ::tokens ["He", "lied", "and", "flung", "accusations", "throughout", ".", "Incompetent", "."]
# ::lemmas ["he", "lie", "and", "flung", "accusation", "throughout", ".", "Incompetent", "."]
(c1-2 / multi-sentence
      :snt1 (c1-7 / and
                  :op1 (c1-1 / lie-08
                             :ARG0 (c1-0 / he))
                  :op2 (c1-6 / throw-01
                             :ARG0 c1-0
                             :ARG1 (c1-3 / accuse-01)
                             :ARG2 (c1-5 / throughout)))
      :snt2 (c1-4 / competent-01
                  :polarity -))

# ::snt SMH. : Sooooooo Chief of Ferguson lied and said that an ambulance was on the scene?
# ::tokens ["SMH", ".", ":", "Sooooooo", "Chief", "of", "Ferguson", "lied", "and", "said", "that", "an", "ambulance", "was", "on", "the", "scene", "?"]
# ::lemmas ["SMH", ".", ":", "Sooooooo", "Chief", "of", "Ferguson", "lie", "and", "say", "that", "an", "ambulance", "be", "on", "the", "scene", "?"]
(c2-6 / infer-01
      :ARG1 (c2-1 / lie-08
                  :ARG0 (c2-8 / person
                              :ARG0-of (c2-0 / have-org-role-91
                                             :ARG1 (c2-10 / city
                                                          :name (c2-7 / name
                                                                      :op1 "Ferguson"))
                                             :ARG2 (c2-9 / chief)))
                  :ARG1 (c2-11 / say-01
                               :ARG0 c2-8
                               :ARG1 (c2-3 / be-located-at-91
                                           :ARG1 (c2-12 / ambulance)
                                           :ARG2 (c2-4 / scene)))
                  :polarity (c2-5 / amr-unknown))
      :mod (c2-2 / so))

# ::snt This is being handled very badly! Wtf let's a murderer go on vaca?
# ::tokens ["This", "is", "being", "handled", "very", "badly", "!", "Wtf", "let", "'s", "a", "murderer", "go", "on", "vaca", "?"]
# ::lemmas ["this", "be", "be", "handle", "very", "badly", "!", "Wtf", "let", "us", "a", "murderer", "go", "on", "vaca", "?"]
(c3-2 / multi-sentence
      :snt1 (c3-0 / handle-01
                  :ARG1 (c3-10 / this)
                  :ARG1-of (c3-4 / bad-05
                                 :degree (c3-6 / very)))
      :snt2 (c3-1 / let-01
                  :ARG1 (c3-9 / go-02
                              :ARG0 (c3-7 / person
                                          :ARG0-of (c3-8 / murder-01))
                              :ARG4 (c3-5 / vaca))
                  :mod (c3-3 / fuck
                             :mode expressive)
                  :polarity (c3-11 / amr-unknown)))

# ::snt because he had a huge hole in his head more than likely. Bullets in your brain are bad. If he was DOA to EMT, CPR is futile.
# ::tokens ["because", "he", "had", "a", "huge", "hole", "in", "his", "head", "more", "than", "likely", ".", "Bullets", "in", "your", "brain", "are", "bad", ".", "If", "he", "was", "DOA", "to", "EMT", ",", "CPR", "is", "futile", "."]
# ::lemmas ["because", "he", "have", "a", "huge", "hole", "in", "his", "head", "more", "than", "likely", ".", "bullet", "in", "your", "brain", "be", "bad", ".", "if", "he", "be", "DOA", "to", "EMT", ",", "CPR", "be", "futile", "."]
(c4-0 / multi-sentence
      :snt1 (c4-18 / cause-01
                   :ARG0 (c4-5 / have-03
                               :ARG0 (c4-4 / he
                                           :part (c4-1 / head))
                               :ARG1 (c4-13 / hole
                                            :mod (c4-16 / huge)
                                            :location c4-1
                                            :ARG1-of (c4-6 / likely-01
                                                           :ARG2-of (c4-11 / have-degree-91
                                                                           :ARG1 c4-13
                                                                           :ARG3 (c4-10 / more)))))
                   :ARG1 (c4-8 / bad-07
                               :ARG1 (c4-12 / bullet
                                            :location (c4-19 / brain
                                                             :part-of (c4-15 / you)))))
      :snt2 (c4-7 / futile
                  :domain (c4-3 / aid-01
                                :ARG1 (c4-20 / treat-03
                                             :ARG1 (c4-17 / he)
                                             :ARG2 (c4-9 / emergency)))
                  :condition (c4-14 / have-org-role-91
                                    :ARG0 c4-17
                                    :ARG2 (c4-2 / paramedic))))

# ::snt yes that was a lie. it had been said before they took his body away in a suv
# ::tokens ["yes", "that", "was", "a", "lie", ".", "it", "had", "been", "said", "before", "they", "took", "his", "body", "away", "in", "a", "suv"]
# ::lemmas ["yes", "that", "be", "a", "lie", ".", "it", "have", "be", "say", "before", "they", "take", "his", "body", "away", "in", "a", "suv"]
(c5-2 / multi-sentence
      :snt1 (c5-1 / lie-08
                  :ARG1 (c5-10 / that))
      :snt2 (c5-9 / say-01
                  :ARG1 (c5-5 / it)
                  :time (c5-3 / before
                              :op1 (c5-8 / take-away-05
                                         :ARG0 (c5-6 / they)
                                         :ARG1 (c5-7 / body
                                                     :poss (c5-0 / he))
                                         :manner (c5-4 / suv)))))

# ::snt they put him in a minivan?
# ::tokens ["they", "put", "him", "in", "a", "minivan", "?"]
# ::lemmas ["they", "put", "he", "in", "a", "minivan", "?"]
(c6-2 / put-01
      :polarity (c6-4 / amr-unknown)
      :ARG0 (c6-3 / they)
      :ARG1 (c6-0 / he)
      :ARG2 (c6-1 / minivan))

# ::snt and if you've ever seen a murder they STAY on the scene, treat, etc. Not show up late like then.
# ::tokens ["and", "if", "you", "'ve", "ever", "seen", "a", "murder", "they", "STAY", "on", "the", "scene", ",", "treat", ",", "etc", ".", "Not", "show", "up", "late", "like", "then", "."]
# ::lemmas ["and", "if", "you", "'ve", "ever", "see", "a", "murder", "they", "stay", "on", "the", "scene", ",", "treat", ",", "etc", ".", "not", "show", "up", "late", "like", "then", "."]
(c7-2 / multi-sentence
      :snt1 (c7-14 / and
                   :op2 c7-14
                   :op1 (c7-4 / be-located-at-91
                              :ARG1 (c7-13 / they)
                              :ARG2 (c7-12 / scene))
                   :op2 (c7-11 / treat-03
                               :ARG0 c7-13)
                   :op3 (c7-6 / et-cetera)
                   :condition (c7-7 / see-01
                                    :ARG0 (c7-0 / you)
                                    :ARG1 (c7-9 / murder-01)
                                    :time (c7-5 / ever)))
      :snt2 (c7-1 / show-up-02
                  :ARG1 c7-13
                  :time (c7-3 / late)
                  :ARG1-of (c7-10 / resemble-01
                                  :ARG2 (c7-8 / then))
                  :polarity -))

# ::snt This is seriously messing with my emotions... WE ARE PEOPLE TOO!!!! No respect even in death...
# ::tokens ["This", "is", "seriously", "messing", "with", "my", "emotions", "...", "WE", "ARE", "PEOPLE", "TOO", "!", "!", "!", "!", "No", "respect", "even", "in", "death", "..."]
# ::lemmas ["this", "be", "seriously", "mess", "with", "my", "emotion", "...", "we", "be", "people", "TOO", "!", "!", "!", "!", "no", "respect", "even", "in", "death", "..."]
(c8-1 / multi-sentence
      :snt1 (c8-5 / mess-01
                  :ARG0 (c8-11 / this)
                  :ARG1 (c8-3 / emotion
                              :poss (c8-4 / i))
                  :ARG1-of (c8-10 / serious-02))
      :snt2 (c8-6 / person
                  :domain (c8-0 / we)
                  :ARG2-of (c8-8 / include-91))
      :snt3 (c8-7 / respect-01
                  :condition (c8-9 / die-01
                                   :mod (c8-2 / even))
                  :polarity -))

# ::snt could have mike brown been alive and unconscious and assumed he died Why was CPR not started?
# ::tokens ["could", "have", "mike", "brown", "been", "alive", "and", "unconscious", "and", "assumed", "he", "died", "Why", "was", "CPR", "not", "started", "?"]
# ::lemmas ["could", "have", "mike", "brown", "be", "alive", "and", "unconscious", "and", "assume", "he", "die", "why", "be", "CPR", "not", "start", "?"]
(c10-13 / and
        :op1 (c10-5 / possible-01
                    :ARG1 (c10-2 / and
                                 :op1 (c10-0 / live-01
                                             :ARG0 (c10-12 / person
                                                           :name (c10-3 / name
                                                                        :op1 "Mike"
                                                                        :op2 "Brown")))
                                 :op2 (c10-7 / conscious
                                             :domain c10-12
                                             :polarity -)))
        :op2 (c10-4 / assume-02
                    :ARG0 c10-12
                    :ARG1 (c10-6 / die-01
                                 :ARG1 c10-12))
        :ARG1-of (c10-8 / cause-01
                        :ARG0 (c10-11 / amr-unknown))
        :ARG1-of (c10-10 / cause-01
                         :ARG0 (c10-9 / start-01
                                      :ARG1 (c10-1 / medical-condition
                                                   :name c10-3
                                                   :op1 "CPR")
                                      :polarity -)))

# ::snt yeah but they walked away and didn't do anything else
# ::tokens ["yeah", "but", "they", "walked", "away", "and", "did", "n't", "do", "anything", "else"]
# ::lemmas ["yeah", "but", "they", "walk", "away", "and", "do", "not", "do", "anything", "else"]
(c11-5 / contrast-01
       :ARG2 (c11-7 / and
                    :op1 (c11-0 / walk-01
                                :ARG0 (c11-6 / they)
                                :direction (c11-2 / away))
                    :op2 (c11-4 / do-02
                                :ARG0 c11-6
                                :ARG1 (c11-3 / anything
                                             :mod (c11-1 / else))
                                :polarity -)))

# ::snt that alone should be investigated.
# ::tokens ["that", "alone", "should", "be", "investigated", "."]
# ::lemmas ["that", "alone", "should", "be", "investigate", "."]
(c12-1 / recommend-01
       :ARG1 (c12-3 / investigate-01
                    :ARG1 (c12-2 / that
                                 :mod (c12-0 / alone))))

# ::snt that's the million dollar question
# ::tokens ["that", "'s", "the", "million", "dollar", "question"]
# ::lemmas ["that", "be", "the", "million", "dollar", "question"]
(c13-1 / question-01
       :ARG1 (c13-4 / that)
       :ARG1-of (c13-3 / cost-01
                       :ARG2 (c13-0 / monetary-quantity
                                    :unit (c13-2 / dollar)
                                    :quant 1000000)))

# ::snt note. Not even in death
# ::tokens ["note", ".", "Not", "even", "in", "death"]
# ::lemmas ["note", ".", "not", "even", "in", "death"]
(c14-3 / multi-sentence
       :snt1 (c14-0 / note-01)
       :snt2 (c14-2 / die-01
                    :mod (c14-1 / even)
                    :polarity -))

# ::snt FIRE this fucker!
# ::tokens ["FIRE", "this", "fucker", "!"]
# ::lemmas ["FIRE", "this", "fucker", "!"]
(c15-1 / fear-01
       :ARG0 (c15-0 / you)
       :ARG1 (c15-3 / person
                    :ARG0-of (c15-2 / fuck-01)
                    :mod (c15-4 / this))
       :mode expressive)

# ::snt The EMT's have a duty to treat. The same thing happened Eric. Those EMT's were taken off the st.
# ::tokens ["The", "EMT", "'s", "have", "a", "duty", "to", "treat", ".", "The", "same", "thing", "happened", "Eric", ".", "Those", "EMT", "'s", "were", "taken", "off", "the", "st", "."]
# ::lemmas ["the", "EMT", "'s", "have", "a", "duty", "to", "treat", ".", "the", "same", "thing", "happen", "Eric", ".", "those", "EMT", "'s", "be", "take", "off", "the", "st", "."]
(c16-2 / multi-sentence
       :snt1 (c16-4 / obligate-01
                    :ARG1 (c16-9 / person
                                 :ARG0-of (c16-0 / have-org-role-91
                                                 :ARG1 (c16-1 / organization
                                                              :name (c16-7 / name
                                                                           :op1 "EMT"))))
                    :ARG2 (c16-13 / treat-03
                                  :ARG0 c16-9))
       :snt2 (c16-5 / event
                    :ARG1-of (c16-12 / same-01)
                    :domain (c16-14 / person
                                    :name (c16-8 / name
                                                 :op1 "Eric")))
       :snt3 (c16-11 / take-off-07
                     :ARG1 (c16-3 / person
                                  :mod (c16-10 / that)
                                  :mod c16-1)
                     :source (c16-6 / st)))

# ::snt my qs: store surveillance v db: footwear doesnt match, where are the smokes, timestamp != timeline ?
# ::tokens ["my", "qs", ":", "store", "surveillance", "v", "db", ":", "footwear", "does", "nt", "match", ",", "where", "are", "the", "smokes", ",", "timestamp", "!", "=", "timeline", "?"]
# ::lemmas ["my", "qs", ":", "store", "surveillance", "v", "db", ":", "footwear", "do", "not", "match", ",", "where", "be", "the", "smoke", ",", "timestamp", "!", "=", "timeline", "?"]
(c17-2 / question-01
       :ARG0 (c17-4 / i)
       :ARG1 (c17-12 / and
                     :op1 (c17-1 / match-01
                                 :ARG1 (c17-0 / footwear)
                                 :polarity -)
                     :op2 (c17-10 / smoke
                                  :location (c17-3 / amr-unknown))
                     :op3 (c17-8 / contrast-01
                                 :ARG1 (c17-11 / timestamp)
                                 :ARG2 (c17-9 / timeline)))
       :ARG1-of (c17-6 / ask-01
                       :ARG0 c17-4
                       :ARG2 (c17-7 / person
                                    :name (c17-5 / name
                                                 :op1 "Qs"))))

# ::snt video containing this still photo
# ::tokens ["video", "containing", "this", "still", "photo"]
# ::lemmas ["video", "contain", "this", "still", "photo"]
(c18-0 / video
       :ARG0-of (c18-2 / contain-01
                       :ARG1 (c18-1 / photo
                                    :mod (c18-3 / still)
                                    :mod (c18-4 / this))))

# ::snt Wtf is our country coming to? Seriously!
# ::tokens ["Wtf", "is", "our", "country", "coming", "to", "?", "Seriously", "!"]
# ::lemmas ["Wtf", "be", "our", "country", "come", "to", "?", "seriously", "!"]
(c19-2 / multi-sentence
       :snt1 (c19-4 / come-04
                    :ARG1 (c19-3 / country
                                 :poss (c19-0 / we))
                    :ARG2 (c19-6 / amr-unknown)
                    :mod (c19-1 / fuck
                                :mode expressive))
       :snt2 (c19-5 / serious-01
                    :mode expressive))

# ::snt they left him in the streets for mins or so with him just lying there..
# ::tokens ["they", "left", "him", "in", "the", "streets", "for", "mins", "or", "so", "with", "him", "just", "lying", "there", ".."]
# ::lemmas ["they", "leave", "he", "in", "the", "street", "for", "min", "or", "so", "with", "he", "just", "lie", "there", ".."]
(c20-2 / leave-12
       :ARG0 (c20-10 / they)
       :ARG1 (c20-0 / he
                    :ARG1-of (c20-7 / lie-07
                                    :ARG2 (c20-8 / there)
                                    :mod (c20-1 / just)))
       :location (c20-9 / street)
       :duration (c20-4 / or
                        :op1 (c20-6 / temporal-quantity
                                    :unit (c20-3 / minute)
                                    :quant 1)
                        :op2 (c20-5 / so)))

# ::snt I have seen video of an EMT check for pulses, shake his head and walk away.
# ::tokens ["I", "have", "seen", "video", "of", "an", "EMT", "check", "for", "pulses", ",", "shake", "his", "head", "and", "walk", "away", "."]
# ::lemmas ["i", "have", "see", "video", "of", "an", "EMT", "check", "for", "pulse", ",", "shake", "his", "head", "and", "walk", "away", "."]
(c21-9 / see-01
       :ARG0 (c21-4 / i)
       :ARG1 (c21-6 / video
                    :topic (c21-11 / and
                                   :op1 (c21-8 / check-01
                                               :ARG0 (c21-7 / person
                                                            :part (c21-0 / head)
                                                            :name (c21-5 / name
                                                                         :op1 "EMT"))
                                               :ARG1 (c21-10 / pulse-01)
                                               :ARG2 c21-7)
                                   :op2 (c21-2 / shake-01
                                               :ARG0 c21-7
                                               :ARG1 c21-0)
                                   :op3 (c21-1 / walk-01
                                               :ARG0 c21-7
                                               :direction (c21-3 / away)))))

# ::snt Where is the autopsy report?!
# ::tokens ["Where", "is", "the", "autopsy", "report", "?", "!"]
# ::lemmas ["where", "be", "the", "autopsy", "report", "?", "!"]
(c22-3 / be-located-at-91
       :ARG1 (c22-0 / report-01
                    :ARG1 (c22-2 / autopsy))
       :ARG2 (c22-1 / amr-unknown))

# ::snt Sooooooo Chief of lied and said that an ambulance was on the scene?
# ::tokens ["Sooooooo", "Chief", "of", "lied", "and", "said", "that", "an", "ambulance", "was", "on", "the", "scene", "?"]
# ::lemmas ["Sooooooo", "Chief", "of", "lie", "and", "say", "that", "an", "ambulance", "be", "on", "the", "scene", "?"]
(c23-11 / and
        :op1 (c23-1 / lie-08
                    :ARG0 (c23-8 / person
                                 :ARG0-of (c23-0 / have-org-role-91
                                                 :ARG2 (c23-9 / chief
                                                              :topic (c23-2 / fire)))))
        :op2 (c23-10 / say-01
                     :ARG0 c23-8
                     :ARG1 (c23-4 / be-located-at-91
                                  :ARG1 (c23-6 / ambulance)
                                  :ARG2 (c23-5 / scene)))
        :polarity (c23-7 / amr-unknown)
        :mod (c23-3 / so))

# ::snt WTH?! Seriously?! They are treating us like ANIMALS?! In the back of a SUV really? I just cant.
# ::tokens ["WTH", "?", "!", "Seriously", "?", "!", "They", "are", "treating", "us", "like", "ANIMALS", "?", "!", "In", "the", "back", "of", "a", "SUV", "really", "?", "I", "just", "ca", "nt", "."]
# ::lemmas ["WTH", "?", "!", "seriously", "?", "!", "they", "be", "treat", "we", "like", "animal", "?", "!", "in", "the", "back", "of", "a", "suv", "really", "?", "i", "just", "can", "not", "."]
(c24-1 / multi-sentence
       :snt1 (c24-6 / amr-unknown
                    :mod (c24-7 / heck
                                :mode expressive)
                    :ARG2-of (c24-4 / serious-01))
       :snt2 (c24-18 / treat-01
                     :ARG0 (c24-17 / they)
                     :ARG1 (c24-12 / we)
                     :ARG2 (c24-3 / person
                                  :ARG1-of (c24-14 / alien-01)))
       :snt3 (c24-8 / be-located-at-91
                    :ARG1 (c24-15 / i)
                    :ARG2 (c24-16 / back
                                  :part-of (c24-2 / vehicle
                                                  :mod (c24-9 / sport)
                                                  :mod (c24-13 / utility)))
                    :ARG1-of (c24-11 / real-04))
       :snt4 (c24-5 / possible-01
                    :ARG1 (c24-10 / event
                                  :mod c24-15)
                    :mod (c24-0 / just)
                    :polarity -))

# ::snt This has to be the worst cover up ever.
# ::tokens ["This", "has", "to", "be", "the", "worst", "cover", "up", "ever", "."]
# ::lemmas ["this", "have", "to", "be", "the", "bad", "cover", "up", "ever", "."]
(c25-3 / obligate-01
       :ARG2 (c25-5 / cover-up-04
                    :ARG1 (c25-6 / this)
                    :ARG1-of (c25-0 / have-degree-91
                                    :ARG2 (c25-2 / bad-07
                                                 :ARG1 c25-5)
                                    :ARG3 (c25-1 / most)
                                    :time (c25-4 / ever))))

# ::snt this was more than likely the cornor's suv. Ambulances don't typically remove DOA from scene.
# ::tokens ["this", "was", "more", "than", "likely", "the", "cornor", "'s", "suv", ".", "Ambulances", "do", "n't", "typically", "remove", "DOA", "from", "scene", "."]
# ::lemmas ["this", "be", "more", "than", "likely", "the", "cornor", "'s", "suv", ".", "ambulance", "do", "not", "typically", "remove", "DOA", "from", "scene", "."]
(c26-2 / multi-sentence
       :snt1 (c26-1 / likely-01
                    :ARG1 (c26-9 / this)
                    :ARG2-of (c26-0 / have-degree-91
                                    :ARG1 c26-9
                                    :ARG3 (c26-4 / more)))
       :snt2 (c26-5 / remove-01
                    :ARG0 (c26-10 / ambulance)
                    :ARG1 (c26-6 / disease
                                 :name (c26-3 / name
                                              :op1 "DAA"))
                    :ARG2 (c26-8 / scene)
                    :ARG1-of (c26-7 / typical-02)
                    :polarity -))

# ::snt An ambulance can be seen in the video on scene. Failed to provide treatment. Bad!
# ::tokens ["An", "ambulance", "can", "be", "seen", "in", "the", "video", "on", "scene", ".", "Failed", "to", "provide", "treatment", ".", "Bad", "!"]
# ::lemmas ["an", "ambulance", "can", "be", "see", "in", "the", "video", "on", "scene", ".", "fail", "to", "provide", "treatment", ".", "bad", "!"]
(c27-1 / multi-sentence
       :snt1 (c27-4 / possible-01
                    :ARG1 (c27-5 / see-01
                                 :ARG1 (c27-7 / ambulance)
                                 :location (c27-3 / scene)))
       :snt2 (c27-0 / fail-01
                    :ARG2 (c27-6 / treat-03
                                 :ARG1 c27-7))
       :snt3 (c27-2 / bad-02
                    :mode expressive))

# ::snt they put him in a black suv
# ::tokens ["they", "put", "him", "in", "a", "black", "suv"]
# ::lemmas ["they", "put", "he", "in", "a", "black", "suv"]
(c28-3 / put-01
       :ARG0 (c28-4 / they)
       :ARG1 (c28-0 / he)
       :ARG2 (c28-5 / aircraft-type
                    :name (c28-2 / name
                                 :op1 "SUV")
                    :ARG1-of (c28-1 / black-04)))

# ::snt but we're supposed to trust their photos?
# ::tokens ["but", "we", "'re", "supposed", "to", "trust", "their", "photos", "?"]
# ::lemmas ["but", "we", "be", "suppose", "to", "trust", "their", "photo", "?"]
(c29-2 / contrast-01
       :ARG2 (c29-4 / suppose-02
                    :polarity (c29-6 / amr-unknown)
                    :ARG1 (c29-0 / we)
                    :ARG2 (c29-5 / trust-02
                                 :ARG0 c29-0
                                 :ARG1 (c29-1 / photograph-01
                                              :ARG0 (c29-3 / they)))))

# ::snt Yea right, not from all the vids I've seen. No ambulance just sum1's truck!
# ::tokens ["Yea", "right", ",", "not", "from", "all", "the", "vids", "I", "'ve", "seen", ".", "No", "ambulance", "just", "sum1", "'s", "truck", "!"]
# ::lemmas ["yea", "right", ",", "not", "from", "all", "the", "vid", "i", "'ve", "see", ".", "no", "ambulance", "just", "sum1", "'s", "truck", "!"]
(c30-2 / multi-sentence
       :snt1 (c30-8 / right-06
                    :mod (c30-1 / yea))
       :snt2 (c30-6 / video
                    :mod (c30-11 / all)
                    :ARG1-of (c30-9 / see-01
                                    :ARG0 (c30-5 / i))
                    :polarity -)
       :snt3 (c30-3 / sum-01
                    :ARG0 (c30-4 / ambulance)
                    :ARG1 (c30-10 / truck
                                  :poss (c30-7 / person
                                               :quant 1))
                    :mod (c30-0 / just)
                    :polarity -))

# ::snt Fuck that guy.
# ::tokens ["Fuck", "that", "guy", "."]
# ::lemmas ["fuck", "that", "guy", "."]
(c31-0 / fuck-01
       :ARG1 (c31-2 / guy
                    :mod (c31-1 / that))
       :mode expressive)

# ::snt was abused and denied care by medical staff the same as . Fire them now !
# ::tokens ["was", "abused", "and", "denied", "care", "by", "medical", "staff", "the", "same", "as", ".", "Fire", "them", "now", "!"]
# ::lemmas ["be", "abuse", "and", "deny", "care", "by", "medical", "staff", "the", "same", "as", ".", "fire", "they", "now", "!"]
(c32-2 / multi-sentence
       :snt1 (c32-13 / and
                     :op1 (c32-4 / abuse-01
                                 :ARG0 (c32-6 / person
                                              :ARG2-of (c32-11 / staff-01)
                                              :mod (c32-7 / medicine))
                                 :ARG1 (c32-8 / child))
                     :op2 (c32-9 / deny-01
                                 :ARG0 c32-6
                                 :ARG1 (c32-10 / care-03
                                               :ARG2 c32-8)
                                 :ARG1-of (c32-3 / same-01
                                                 :ARG2 c32-4))
                     :snt2 (c32-1 / fire-02
                                  :ARG0 (c32-0 / you)
                                  :ARG1 (c32-12 / they)
                                  :time (c32-5 / now)
                                  :mode imperative)))

# ::snt brown was placed in a coroner's vehicle there was ems and ambulance on scene theres a vid on utube
# ::tokens ["brown", "was", "placed", "in", "a", "coroner", "'s", "vehicle", "there", "was", "ems", "and", "ambulance", "on", "scene", "there", "s", "a", "vid", "on", "utube"]
# ::lemmas ["brown", "be", "place", "in", "a", "coroner", "'s", "vehicle", "there", "be", "em", "and", "ambulance", "on", "scene", "there", "s", "a", "vid", "on", "utube"]
(c33-0 / multi-sentence
       :snt1 (c33-14 / and
                     :op1 (c33-7 / place-01
                                 :ARG1 (c33-13 / person
                                               :name (c33-5 / name
                                                            :op1 "Brown"))
                                 :ARG2 (c33-6 / vehicle
                                              :poss (c33-9 / coroner)))
                     :op2 (c33-2 / be-located-at-91
                                 :ARG1 (c33-4 / and
                                              :op1 (c33-8 / ambulance)
                                              :op2 (c33-1 / police))
                                 :ARG2 (c33-11 / scene)))
       :snt2 (c33-3 / video
                    :medium (c33-12 / publication
                                    :name (c33-10 / name
                                                  :op1 "utube"))))

# ::snt Looks like this case will go all with lies, coverup and smear campaign!!!
# ::tokens ["Looks", "like", "this", "case", "will", "go", "all", "with", "lies", ",", "coverup", "and", "smear", "campaign", "!", "!", "!"]
# ::lemmas ["look", "like", "this", "case", "will", "go", "all", "with", "lie", ",", "coverup", "and", "smear", "campaign", "!", "!", "!"]
(c34-0 / look-02
       :ARG1 (c34-4 / go-08
                    :ARG1 (c34-3 / case-03
                                 :mod (c34-7 / this))
                    :ARG2 (c34-9 / and
                                 :op1 (c34-5 / lie-08)
                                 :op2 (c34-2 / cover-up-04)
                                 :op3 (c34-6 / campaign-01
                                             :ARG1 (c34-8 / smear-02)))
                    :degree (c34-1 / all)))

# ::snt I heard that lie come out of his mouth too.
# ::tokens ["I", "heard", "that", "lie", "come", "out", "of", "his", "mouth", "too", "."]
# ::lemmas ["i", "hear", "that", "lie", "come", "out", "of", "his", "mouth", "too", "."]
(c35-0 / hear-01
       :ARG0 (c35-3 / i)
       :ARG1 (c35-4 / come-out-09
                    :ARG1 (c35-1 / lie-08
                                 :mod (c35-6 / that))
                    :source (c35-2 / mouth
                                   :part-of (c35-7 / he))
                    :mod (c35-5 / too)))

# ::snt MT : Chief of lied, said that an ambulance was on scene?
# ::tokens ["MT", ":", "Chief", "of", "lied", ",", "said", "that", "an", "ambulance", "was", "on", "scene", "?"]
# ::lemmas ["MT", ":", "chief", "of", "lied", ",", "say", "that", "an", "ambulance", "be", "on", "scene", "?"]
(c36-7 / say-01
       :ARG0 (c36-6 / person
                    :name (c36-5 / name
                                 :op1 "MT")
                    :ARG0-of (c36-0 / lie-08))
       :ARG1 (c36-3 / say-01
                    :ARG0 c36-6
                    :ARG1 (c36-2 / be-located-at-91
                                 :ARG1 (c36-8 / ambulance)
                                 :ARG2 (c36-1 / scene)))
       :polarity (c36-4 / amr-unknown))

# ::snt wow.
# ::tokens ["wow", "."]
# ::lemmas ["wow", "."]
(c37-0 / wow
       :mode expressive)

# ::snt not stickin up for cops BUT a min vid on youtube does show an EMT w/bag checkin briefly for vitals
# ::tokens ["not", "stickin", "up", "for", "cops", "BUT", "a", "min", "vid", "on", "youtube", "does", "show", "an", "EMT", "w", "/", "bag", "checkin", "briefly", "for", "vitals"]
# ::lemmas ["not", "stickin", "up", "for", "cop", "but", "a", "min", "vid", "on", "youtube", "do", "show", "an", "EMT", "w", "/", "bag", "checkin", "briefly", "for", "vital"]
(c38-8 / contrast-01
       :ARG1 (c38-11 / stick-up-04
                     :ARG1 (c38-7 / cop)
                     :polarity -)
       :ARG2 (c38-3 / show-01
                    :ARG0 (c38-5 / video
                                 :medium (c38-6 / publication
                                                :name (c38-4 / name
                                                             :op1 "YouTube"))
                                 :quant (c38-0 / min))
                    :ARG1 (c38-10 / check-01
                                  :ARG0 (c38-12 / paramedic)
                                  :ARG1 (c38-1 / bag)
                                  :duration (c38-9 / brief)
                                  :purpose (c38-2 / vitals))))
