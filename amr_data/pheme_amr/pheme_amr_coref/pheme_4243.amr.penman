# ::snt no need to start shitting on whites. Jeez, let's stick to shitting on these cops
# ::tokens ["no", "need", "to", "start", "shitting", "on", "whites", ".", "Jeez", ",", "let", "'s", "stick", "to", "shitting", "on", "these", "cops"]
# ::lemmas ["no", "need", "to", "start", "shit", "on", "white", ".", "jeez", ",", "let", "us", "stick", "to", "shit", "on", "these", "cop"]
(c1-3 / multi-sentence
      :snt1 (c1-7 / need-01
                  :ARG1 (c1-10 / start-01
                               :ARG1 (c1-5 / shit-01
                                           :ARG0 (c1-8 / person
                                                       :ARG1-of (c1-1 / white-02))))
                  :polarity -)
      :snt2 (c1-2 / stick-01
                  :ARG0 (c1-6 / we
                              :ARG1-of c1-2)
                  :ARG2 (c1-4 / shit-01
                              :ARG0 c1-6
                              :ARG1 (c1-9 / cop
                                          :mod (c1-11 / this)))
                  :mod (c1-0 / jeez
                             :mode expressive)
                  :mode imperative))

# ::snt lol u must got a metro pcs huh? U look like u got a metro pcs.
# ::tokens ["lol", "u", "must", "got", "a", "metro", "pcs", "huh", "?", "U", "look", "like", "u", "got", "a", "metro", "pcs", "."]
# ::lemmas ["lol", "u", "must", "get", "a", "metro", "pcs", "huh", "?", "u", "look", "like", "u", "get", "a", "metro", "pcs", "."]
(c2-2 / multi-sentence
      :snt1 (c2-4 / obligate-01
                  :ARG1 (c2-0 / you)
                  :ARG2 (c2-8 / get-01
                              :ARG0 c2-0
                              :ARG1 (c2-7 / computer
                                          :mod (c2-5 / metro)))
                  :ARG1-of (c2-6 / request-confirmation-91))
      :snt2 (c2-1 / look-02
                  :ARG0 (c2-10 / you)
                  :ARG1 (c2-9 / get-01
                              :ARG0 c2-10
                              :ARG1 c2-7
                              :mod (c2-3 / metro))))

# ::snt I'm just saying we shouldn't trash people for their skin color, rather judge them by their actions. Simple stuff
# ::tokens ["I", "'m", "just", "saying", "we", "should", "n't", "trash", "people", "for", "their", "skin", "color", ",", "rather", "judge", "them", "by", "their", "actions", ".", "Simple", "stuff"]
# ::lemmas ["i", "be", "just", "say", "we", "should", "not", "trash", "people", "for", "their", "skin", "color", ",", "rather", "judge", "they", "by", "their", "action", ".", "simple", "stuff"]
(c3-3 / multi-sentence
      :snt1 (c3-13 / say-01
                   :ARG0 (c3-6 / i)
                   :ARG1 (c3-10 / contrast-01
                                :ARG1 (c3-9 / recommend-01
                                            :ARG1 (c3-14 / trash-01
                                                         :ARG0 (c3-1 / we)
                                                         :ARG1 (c3-8 / person)
                                                         :ARG1-of (c3-11 / cause-01
                                                                         :ARG0 (c3-12 / color
                                                                                      :mod (c3-5 / skin
                                                                                                 :poss c3-8))))
                                            :polarity -)
                                :ARG2 (c3-7 / recommend-01
                                            :ARG1 (c3-0 / judge-01
                                                        :ARG0 c3-1
                                                        :ARG1 c3-8
                                                        :ARG2 (c3-16 / act-02
                                                                     :ARG0 c3-8))))
                   :mod (c3-15 / just))
      :snt2 (c3-2 / stuff
                  :ARG1-of (c3-4 / simple-02)))

# ::snt yeah cuz its there and every one knows a police officer has one
# ::tokens ["yeah", "cuz", "its", "there", "and", "every", "one", "knows", "a", "police", "officer", "has", "one"]
# ::lemmas ["yeah", "cuz", "its", "there", "and", "every", "one", "know", "a", "police", "officer", "have", "one"]
(c4-10 / cause-01
       :ARG0 (c4-13 / and
                    :op1 (c4-4 / be-located-at-91
                               :ARG1 (c4-7 / it)
                               :ARG2 (c4-11 / there))
                    :op2 (c4-8 / know-01
                               :ARG0 (c4-6 / everyone)
                               :ARG1 (c4-0 / have-03
                                           :ARG0 (c4-9 / person
                                                       :ARG0-of (c4-2 / have-org-role-91
                                                                      :ARG1 (c4-12 / police)
                                                                      :ARG2 (c4-5 / officer)))
                                           :ARG1 (c4-3 / one))))
       :mod (c4-1 / yeah
                  :mode expressive))

# ::snt Funny every time a POC is trolled, people dismiss it but the moment someone says something about White people its blasphemy.
# ::tokens ["Funny", "every", "time", "a", "POC", "is", "trolled", ",", "people", "dismiss", "it", "but", "the", "moment", "someone", "says", "something", "about", "White", "people", "its", "blasphemy", "."]
# ::lemmas ["funny", "every", "time", "a", "POC", "be", "troll", ",", "people", "dismiss", "it", "but", "the", "moment", "someone", "say", "something", "about", "white", "people", "its", "blasphemy", "."]
(c5-1 / funny
      :domain (c5-11 / contrast-01
                     :ARG1 (c5-10 / dismiss-01
                                  :ARG0 (c5-9 / person)
                                  :ARG1 (c5-7 / it)
                                  :frequency (c5-12 / rate-entity-91
                                                    :ARG4 (c5-14 / troll-01
                                                                 :ARG1 (c5-15 / publication
                                                                              :name (c5-8 / name
                                                                                          :op1 "POC")))))
                     :ARG2 (c5-5 / blasphemy
                                 :domain c5-10
                                 :time (c5-13 / say-01
                                              :ARG0 (c5-6 / someone)
                                              :ARG1 (c5-2 / something
                                                          :topic (c5-4 / person
                                                                       :ARG1-of (c5-0 / white-02)))
                                              :time (c5-3 / moment)))))

# ::snt No you're thinking of White people who shoot up innocent people in public spaces.
# ::tokens ["No", "you", "'re", "thinking", "of", "White", "people", "who", "shoot", "up", "innocent", "people", "in", "public", "spaces", "."]
# ::lemmas ["no", "you", "be", "think", "of", "white", "people", "who", "shoot", "up", "innocent", "people", "in", "public", "space", "."]
(c6-8 / think-01
      :ARG0 (c6-1 / you)
      :ARG1 (c6-6 / person
                  :ARG1-of (c6-0 / white-02)
                  :ARG0-of (c6-7 / shoot-up-06
                                 :ARG1 (c6-9 / person
                                             :ARG1-of (c6-4 / innocent-01))
                                 :location (c6-3 / space
                                                 :ARG1-of (c6-2 / public-02))))
      :mod (c6-5 / no))

# ::snt also a video of brown assaulting officer
# ::tokens ["also", "a", "video", "of", "brown", "assaulting", "officer"]
# ::lemmas ["also", "a", "video", "of", "brown", "assault", "officer"]
(c7-3 / video
      :topic (c7-5 / assault-01
                   :ARG0 (c7-4 / person
                               :mod (c7-0 / brown))
                   :ARG1 (c7-1 / officer))
      :mod (c7-2 / also))

# ::snt Isn't that something?
# ::tokens ["Is", "n't", "that", "something", "?"]
# ::lemmas ["be", "not", "that", "something", "?"]
(c8-0 / something
      :domain (c8-2 / that)
      :ARG1-of (c8-1 / request-confirmation-91))

# ::snt what are they going to say next he shot himself
# ::tokens ["what", "are", "they", "going", "to", "say", "next", "he", "shot", "himself"]
# ::lemmas ["what", "be", "they", "go", "to", "say", "next", "he", "shoot", "himself"]
(c9-3 / say-01
      :ARG0 (c9-4 / they)
      :ARG1 (c9-5 / amr-unknown)
      :time (c9-2 / next
                  :op1 (c9-1 / shoot-02
                             :ARG0 (c9-0 / he
                                         :ARG1-of c9-1))))

# ::snt everytime its a blk boy getting shot he was a good kid and innocent but at the end he turns out to be a criminal.funny huh?
# ::tokens ["everytime", "its", "a", "blk", "boy", "getting", "shot", "he", "was", "a", "good", "kid", "and", "innocent", "but", "at", "the", "end", "he", "turns", "out", "to", "be", "a", "criminal.funny", "huh", "?"]
# ::lemmas ["everytime", "its", "a", "blk", "boy", "getting", "shoot", "he", "be", "a", "good", "kid", "and", "innocent", "but", "at", "the", "end", "he", "turn", "out", "to", "be", "a", "criminal.funny", "huh", "?"]
(c10-5 / contrast-01
       :ARG1 (c10-12 / and
                     :op1 (c10-11 / kid
                                  :ARG1-of (c10-6 / good-02)
                                  :domain (c10-1 / boy
                                                 :mod (c10-7 / blk)))
                     :op2 (c10-3 / innocent-01
                                 :ARG1 c10-1)
                     :frequency (c10-4 / rate-entity-91
                                       :ARG4 (c10-9 / shoot-02
                                                    :ARG1 c10-1)))
       :ARG2 (c10-10 / turn-out-11
                     :ARG1 c10-1
                     :ARG2 (c10-8 / criminal-03
                                  :ARG2 c10-1)
                     :time (c10-2 / end-01
                                  :ARG1 c10-9))
       :mod (c10-0 / huh
                   :mode expressive))

# ::snt don't forget "altercation"
# ::tokens ["do", "n't", "forget", "\"", "altercation", "\""]
# ::lemmas ["do", "not", "forget", "\"", "altercation", "\""]
(c11-3 / forget-01
       :ARG0 (c11-1 / you)
       :ARG1 (c11-2 / event
                    :name (c11-0 / name
                                 :op1 "altercation"))
       :polarity -
       :mode imperative)

# ::snt That's the script. Oh and "there was a struggle".
# ::tokens ["That", "'s", "the", "script", ".", "Oh", "and", "\"", "there", "was", "a", "struggle", "\"", "."]
# ::lemmas ["that", "be", "the", "script", ".", "oh", "and", "\"", "there", "be", "a", "struggle", "\"", "."]
(c12-0 / multi-sentence
       :snt1 (c12-3 / script
                    :domain (c12-4 / that))
       :snt2 (c12-5 / and
                    :op1 (c12-1 / oh
                                :mode expressive)
                    :op2 (c12-2 / struggle-01)))

# ::snt yes it's total bullshit !!!
# ::tokens ["yes", "it", "'s", "total", "bullshit", "!", "!", "!"]
# ::lemmas ["yes", "it", "be", "total", "bullshit", "!", "!", "!"]
(c13-2 / bullshit-01
       :ARG1 (c13-1 / it)
       :degree (c13-0 / total)
       :mode expressive)

# ::snt yeah
# ::tokens ["yeah"]
# ::lemmas ["yeah"]
(c14-0 / yeah)

# ::snt : Somehow, whenever theres a police brutality case, the victim is reaching for someones gun.Its weird, right?
# ::tokens [":", "Somehow", ",", "whenever", "there", "s", "a", "police", "brutality", "case", ",", "the", "victim", "is", "reaching", "for", "someones", "gun", ".", "Its", "weird", ",", "right", "?"]
# ::lemmas [":", "somehow", ",", "whenever", "there", "s", "a", "police", "brutality", "case", ",", "the", "victim", "be", "reach", "for", "someone", "gun", ".", "its", "weird", ",", "right", "?"]
(c15-6 / reach-03
       :ARG0 (c15-4 / victim)
       :ARG1 (c15-8 / gun
                    :poss (c15-9 / someone))
       :manner (c15-2 / somehow)
       :condition (c15-7 / case-03
                         :ARG1 (c15-1 / brutalize-01
                                      :ARG0 (c15-5 / police))
                         :mod (c15-10 / any))
       :ARG1-of (c15-3 / request-confirmation-91)
       :mod (c15-0 / weird))

# ::snt Here in , CA, a woman was shot by police for having a crochet hook in her hand.
# ::tokens ["Here", "in", ",", "CA", ",", "a", "woman", "was", "shot", "by", "police", "for", "having", "a", "crochet", "hook", "in", "her", "hand", "."]
# ::lemmas ["here", "in", ",", "CA", ",", "a", "woman", "be", "shoot", "by", "police", "for", "have", "a", "crochet", "hook", "in", "her", "hand", "."]
(c16-9 / shoot-02
       :ARG0 (c16-6 / police)
       :ARG1 (c16-1 / woman
                    :part (c16-0 / hand))
       :ARG1-of (c16-8 / cause-01
                       :ARG0 (c16-10 / have-03
                                     :ARG0 c16-1
                                     :ARG1 (c16-5 / hook
                                                  :mod (c16-7 / crochet))
                                     :location c16-0))
       :location c16-0
       :location (c16-2 / here
                        :location (c16-3 / state
                                         :name (c16-4 / name
                                                      :op1 "CA"))))

# ::snt check me out!
# ::tokens ["check", "me", "out", "!"]
# ::lemmas ["check", "i", "out", "!"]
(c17-1 / check-out-05
       :ARG0 (c17-0 / you)
       :ARG1 (c17-2 / i)
       :mode imperative)

# ::snt Fox News
# ::tokens ["Fox", "News"]
# ::lemmas ["Fox", "News"]
(c18-1 / broadcast-program
       :name (c18-0 / name
                    :op1 "Fox"
                    :op2 "News"))

# ::snt quick question if you were sexually exploited as a kid would you feel obligated to becoming a porn star.
# ::tokens ["quick", "question", "if", "you", "were", "sexually", "exploited", "as", "a", "kid", "would", "you", "feel", "obligated", "to", "becoming", "a", "porn", "star", "."]
# ::lemmas ["quick", "question", "if", "you", "be", "sexually", "exploit", "as", "a", "kid", "would", "you", "feel", "obligated", "to", "become", "a", "porn", "star", "."]
(c19-5 / question-01
       :ARG1 (c19-1 / feel-01
                    :ARG0 (c19-0 / you)
                    :ARG1 (c19-3 / obligate-01
                                 :ARG1 c19-0
                                 :ARG2 (c19-2 / become-01
                                              :ARG1 c19-0
                                              :ARG2 (c19-8 / star
                                                           :mod (c19-7 / porn))))
                    :condition (c19-4 / exploit-01
                                      :ARG1 c19-0
                                      :manner (c19-6 / sexual)
                                      :time (c19-10 / kid
                                                    :domain c19-0)))
       :ARG1-of (c19-9 / quick-02))

# ::snt Usually only White people make egg accounts to troll people.
# ::tokens ["Usually", "only", "White", "people", "make", "egg", "accounts", "to", "troll", "people", "."]
# ::lemmas ["usually", "only", "white", "people", "make", "egg", "account", "to", "troll", "people", "."]
(c20-1 / make-01
       :ARG0 (c20-5 / person
                    :ARG1-of (c20-0 / white-02)
                    :mod (c20-3 / only))
       :ARG1 (c20-8 / account
                    :mod (c20-4 / egg))
       :purpose (c20-6 / troll-01
                       :ARG0 c20-5
                       :ARG1 (c20-7 / person))
       :mod (c20-2 / usual))

# ::snt im not even white. Why would u assume im white. Must be that ignorance shinning thru.
# ::tokens ["i", "m", "not", "even", "white", ".", "Why", "would", "u", "assume", "i", "m", "white", ".", "Must", "be", "that", "ignorance", "shinning", "thru", "."]
# ::lemmas ["i", "m", "not", "even", "white", ".", "why", "would", "u", "assume", "i", "m", "white", ".", "must", "be", "that", "ignorance", "shin", "thru", "."]
(c21-3 / multi-sentence
       :snt1 (c21-0 / white-02
                    :ARG1 (c21-7 / i)
                    :mod (c21-5 / even)
                    :polarity -)
       :snt2 (c21-9 / cause-01
                    :ARG0 (c21-14 / amr-unknown)
                    :ARG1 (c21-6 / assume-02
                                 :ARG0 (c21-1 / you)
                                 :ARG1 (c21-8 / white-02
                                              :ARG1 (c21-10 / i))))
       :snt3 (c21-2 / infer-01
                    :ARG1 (c21-12 / shinning-01
                                  :ARG1 (c21-4 / ignorance
                                               :mod (c21-13 / that))
                                  :path (c21-11 / through))))

# ::snt police over react and exaggerate the situation
# ::tokens ["police", "over", "react", "and", "exaggerate", "the", "situation"]
# ::lemmas ["police", "over", "react", "and", "exaggerate", "the", "situation"]
(c22-4 / and
       :op1 (c22-0 / overreact-01
                   :ARG0 (c22-2 / police)
                   :ARG1 (c22-3 / situation))
       :op2 (c22-1 / exaggerate-01
                   :ARG0 c22-2
                   :ARG1 c22-3))

# ::snt Yes, because as we all know, the natural reaction of any normal person is to go for an antagonistic cop's gun. Duh!
# ::tokens ["Yes", ",", "because", "as", "we", "all", "know", ",", "the", "natural", "reaction", "of", "any", "normal", "person", "is", "to", "go", "for", "an", "antagonistic", "cop", "'s", "gun", ".", "Duh", "!"]
# ::lemmas ["yes", ",", "because", "as", "we", "all", "know", ",", "the", "natural", "reaction", "of", "any", "normal", "person", "be", "to", "go", "for", "an", "antagonistic", "cop", "'s", "gun", ".", "Duh", "!"]
(c23-6 / cause-01
       :ARG0 (c23-5 / react-01
                    :ARG0 (c23-4 / person
                                 :ARG1-of (c23-2 / normal-02)
                                 :mod (c23-13 / any))
                    :ARG2 (c23-7 / go-03
                                 :ARG0 c23-4
                                 :ARG1 (c23-8 / gun
                                              :poss (c23-9 / cop
                                                           :ARG0-of (c23-1 / antagonize-01))))
                    :ARG1-of (c23-3 / natural-02)
                    :ARG1-of (c23-12 / know-01
                                     :ARG0 (c23-0 / we
                                                  :mod (c23-10 / all))))
       :mod (c23-11 / duh
                    :mode expressive))

# ::snt I don't know the link, friend showed me
# ::tokens ["I", "do", "n't", "know", "the", "link", ",", "friend", "showed", "me"]
# ::lemmas ["i", "do", "not", "know", "the", "link", ",", "friend", "show", "i"]
(c24-7 / and
       :op1 (c24-6 / know-01
                   :ARG0 (c24-3 / i)
                   :ARG1 (c24-1 / link)
                   :polarity -)
       :op2 (c24-5 / show-01
                   :ARG0 (c24-4 / person
                                :ARG0-of (c24-0 / have-rel-role-91
                                                :ARG1 c24-3
                                                :ARG2 (c24-2 / friend)))
                   :ARG1 c24-1
                   :ARG2 c24-3))

# ::snt all ik is it was a security camera and it was Fox News if that helps at all
# ::tokens ["all", "ik", "is", "it", "was", "a", "security", "camera", "and", "it", "was", "Fox", "News", "if", "that", "helps", "at", "all"]
# ::lemmas ["all", "ik", "be", "it", "be", "a", "security", "camera", "and", "it", "be", "Fox", "News", "if", "that", "help", "at", "all"]
(c25-8 / and
       :op1 (c25-6 / camera
                   :purpose (c25-7 / security)
                   :domain (c25-3 / it))
       :op2 (c25-1 / broadcast-program
                   :name (c25-4 / name
                                :op1 "Fox"
                                :op2 "News")
                   :domain c25-3
                   :condition (c25-0 / help-01
                                     :ARG0 c25-3
                                     :degree (c25-2 / at-all)))
       :domain c25-3
       :mod (c25-5 / all))

# ::snt Oh yes and "in a threatening manner" "I was in fear for my life" "suspect resisted" "went for a weapon"
# ::tokens ["Oh", "yes", "and", "\"", "in", "a", "threatening", "manner", "\"", "\"", "I", "was", "in", "fear", "for", "my", "life", "\"", "\"", "suspect", "resisted", "\"", "\"", "went", "for", "a", "weapon", "\""]
# ::lemmas ["oh", "yes", "and", "\"", "in", "a", "threatening", "manner", "\"", "\"", "i", "be", "in", "fear", "for", "my", "life", "\"", "\"", "suspect", "resist", "\"", "\"", "go", "for", "a", "weapon", "\""]
(c26-12 / and
        :op1 (c26-1 / yes)
        :op2 (c26-5 / and
                    :op1 (c26-11 / threaten-01
                                 :ARG2 (c26-7 / and
                                              :op1 (c26-3 / fear-01
                                                          :ARG0 (c26-6 / i)
                                                          :ARG2 (c26-4 / life
                                                                       :poss c26-6))
                                              :op2 (c26-9 / resist-01
                                                          :ARG0 (c26-8 / person
                                                                       :ARG2-of (c26-0 / harass-01)))
                                              :op3 (c26-10 / go-03
                                                           :ARG0 c26-8
                                                           :ARG1 (c26-2 / weapon))))))

# ::snt which makes sense, the police would be more violent if someone's taking their weapon...
# ::tokens ["which", "makes", "sense", ",", "the", "police", "would", "be", "more", "violent", "if", "someone", "'s", "taking", "their", "weapon", "..."]
# ::lemmas ["which", "make", "sense", ",", "the", "police", "would", "be", "more", "violent", "if", "someone", "be", "take", "their", "weapon", "..."]
(c27-6 / sense-02
       :ARG1 (c27-4 / violent
                    :domain (c27-5 / police)
                    :condition (c27-7 / take-01
                                      :ARG0 (c27-3 / someone)
                                      :ARG1 (c27-1 / weapon
                                                   :poss c27-5))
                    :ARG2-of (c27-0 / have-degree-91
                                    :ARG1 c27-5
                                    :ARG3 (c27-2 / more))))

# ::snt I'm defending this guy! Outraged that something like this happened
# ::tokens ["I", "'m", "defending", "this", "guy", "!", "Outraged", "that", "something", "like", "this", "happened"]
# ::lemmas ["i", "be", "defend", "this", "guy", "!", "outraged", "that", "something", "like", "this", "happen"]
(c28-0 / multi-sentence
       :snt1 (c28-3 / defend-01
                    :ARG0 (c28-2 / i)
                    :ARG1 (c28-5 / guy
                                 :mod (c28-8 / this)))
       :snt2 (c28-1 / outrage-01
                    :ARG0 (c28-7 / something
                                 :ARG1-of (c28-4 / resemble-01
                                                 :ARG2 (c28-6 / this)))
                    :ARG1 c28-2))

# ::snt yeah, because i always think about grabbing a cop's gun when they're near. That'll make the situation better.
# ::tokens ["yeah", ",", "because", "i", "always", "think", "about", "grabbing", "a", "cop", "'s", "gun", "when", "they", "'re", "near", ".", "That", "'ll", "make", "the", "situation", "better", "."]
# ::lemmas ["yeah", ",", "because", "i", "always", "think", "about", "grab", "a", "cop", "'s", "gun", "when", "they", "be", "near", ".", "that", "'ll", "make", "the", "situation", "well", "."]
(c29-1 / multi-sentence
       :snt1 (c29-6 / cause-01
                    :ARG0 (c29-11 / think-01
                                  :ARG0 (c29-3 / i)
                                  :ARG2 (c29-7 / grab-01
                                               :ARG0 c29-3
                                               :ARG1 (c29-5 / gun
                                                            :poss (c29-8 / cop))
                                               :time (c29-4 / near-02
                                                            :ARG1 c29-8))
                                  :time (c29-12 / always))
                    :mod (c29-0 / yeah
                                :mode expressive))
       :snt2 (c29-2 / better-01
                    :ARG0 (c29-9 / that)
                    :ARG1 (c29-10 / situation)))
