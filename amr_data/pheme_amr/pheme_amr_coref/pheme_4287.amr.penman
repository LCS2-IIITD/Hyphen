# ::snt its in its th hour now so sad and scary!
# ::tokens ["its", "in", "its", "th", "hour", "now", "so", "sad", "and", "scary", "!"]
# ::lemmas ["its", "in", "its", "th", "hour", "now", "so", "sad", "and", "scary", "!"]
(c1-6 / and
      :op1 (c1-4 / sad-02)
      :op2 (c1-2 / scary-03)
      :degree (c1-1 / so)
      :time (c1-3 / now
                  :time-of (c1-5 / temporal-quantity
                                 :unit (c1-0 / hour)
                                 :quant 1)))

# ::snt me too thankyou
# ::tokens ["me", "too", "thankyou"]
# ::lemmas ["i", "too", "thankyou"]
(c2-4 / say-01
      :ARG1 (c2-0 / have-degree-91
                  :ARG1 (c2-3 / i)
                  :ARG2 (c2-2 / overkyou)
                  :ARG3 (c2-5 / too))
      :ARG2 (c2-1 / you))

# ::snt me too
# ::tokens ["me", "too"]
# ::lemmas ["i", "too"]
(c3-1 / i
      :mod (c3-0 / too))

# ::snt I hope so too
# ::tokens ["I", "hope", "so", "too"]
# ::lemmas ["i", "hope", "so", "too"]
(c4-0 / hope-01
      :ARG0 (c4-3 / i)
      :ARG1 (c4-2 / so)
      :mod (c4-1 / too))

# ::snt loml
# ::tokens ["loml"]
# ::lemmas ["loml"]
(c5-1 / person
      :name (c5-0 / name
                  :op1 "loml"))

# ::snt xx
# ::tokens ["xx"]
# ::lemmas ["xx"]
(c6-1 / person
      :name (c6-0 / name
                  :op1 "xx")
      :ARG2-of (c6-2 / sign-01))

# ::snt : I hope everyone is okay in Sydney and nothing bad happens from this hostage situation. LOVE U MARCUS
# ::tokens [":", "I", "hope", "everyone", "is", "okay", "in", "Sydney", "and", "nothing", "bad", "happens", "from", "this", "hostage", "situation", ".", "LOVE", "U", "MARCUS"]
# ::lemmas [":", "i", "hope", "everyone", "be", "okay", "in", "Sydney", "and", "nothing", "bad", "happen", "from", "this", "hostage", "situation", ".", "LOVE", "U", "MARCUS"]
(c7-2 / multi-sentence
      :snt1 (c7-0 / hope-01
                  :ARG0 (c7-8 / i)
                  :ARG1 (c7-16 / and
                               :op1 (c7-5 / okay-04
                                          :ARG1 (c7-7 / everyone)
                                          :location (c7-13 / city
                                                           :name (c7-9 / name
                                                                       :op1 "Sydney")))
                               :op2 (c7-4 / event
                                          :ARG1-of (c7-6 / bad-07)
                                          :ARG1-of (c7-12 / cause-01
                                                          :ARG0 (c7-14 / situation
                                                                       :mod (c7-1 / hostage)
                                                                       :mod (c7-15 / this)))
                                          :polarity -)))
      :snt2 (c7-3 / love-01
                  :ARG0 c7-8)
      :ARG1 (c7-11 / person
                   :name (c7-10 / name
                                :op1 "U"
                                :op2 "Marcus")))

# ::snt thank you, me too!
# ::tokens ["thank", "you", ",", "me", "too", "!"]
# ::lemmas ["thank", "you", ",", "i", "too", "!"]
(c8-1 / thank-01
      :ARG0 (c8-2 / i)
      :ARG1 (c8-0 / you)
      :mod (c8-3 / too))

# ::snt Thanks Marcus
# ::tokens ["Thanks", "Marcus"]
# ::lemmas ["thank", "Marcus"]
(c9-0 / say-01
      :ARG1 (c9-2 / thank-01
                  :ARG1 (c9-1 / person
                              :name (c9-3 / name
                                          :op1 "Marcus")
                              :ARG2-of c9-0)))

# ::snt I won't thank you xx
# ::tokens ["I", "wo", "n't", "thank", "you", "xx"]
# ::lemmas ["i", "will", "not", "thank", "you", "xx"]
(c11-1 / thank-01
       :ARG0 (c11-2 / i)
       :ARG1 (c11-0 / you)
       :polarity -)

# ::snt just be safe, and don't go anywhere by yourself beautiful xx
# ::tokens ["just", "be", "safe", ",", "and", "do", "n't", "go", "anywhere", "by", "yourself", "beautiful", "xx"]
# ::lemmas ["just", "be", "safe", ",", "and", "do", "not", "go", "anywhere", "by", "yourself", "beautiful", "xx"]
(c13-7 / and
       :op1 (c13-6 / safe-01
                   :ARG0 (c13-1 / you)
                   :mod (c13-0 / just)
                   :mode imperative)
       :op2 (c13-5 / go-02
                   :ARG0 c13-1
                   :ARG4 (c13-3 / anywhere
                                :mod (c13-2 / by-oneself))
                   :ARG1-of (c13-4 / beautiful-02)
                   :polarity -
                   :mode imperative))

# ::snt been watching the live stream for hours... So scary
# ::tokens ["been", "watching", "the", "live", "stream", "for", "hours", "...", "So", "scary"]
# ::lemmas ["be", "watch", "the", "live", "stream", "for", "hours", "...", "so", "scary"]
(c14-3 / multi-sentence
       :snt1 (c14-1 / watch-01
                    :ARG0 (c14-6 / i)
                    :ARG1 (c14-8 / stream-03
                                 :manner (c14-2 / live))
                    :duration (c14-7 / multiple
                                     :op1 (c14-9 / temporal-quantity
                                                 :unit (c14-0 / hour)
                                                 :quant 1)))
       :snt2 (c14-5 / scary-03
                    :degree (c14-4 / so)))

# ::snt : I hope everyone is okay in Sydney and nothing bad happens from this hostage situation
# ::tokens [":", "I", "hope", "everyone", "is", "okay", "in", "Sydney", "and", "nothing", "bad", "happens", "from", "this", "hostage", "situation"]
# ::lemmas [":", "i", "hope", "everyone", "be", "okay", "in", "Sydney", "and", "nothing", "bad", "happen", "from", "this", "hostage", "situation"]
(c16-0 / hope-01
       :ARG0 (c16-6 / i)
       :ARG1 (c16-11 / and
                     :op1 (c16-3 / okay-04
                                 :ARG1 (c16-5 / everyone)
                                 :location (c16-8 / city
                                                  :name (c16-7 / name
                                                               :op1 "Sydney")))
                     :op2 (c16-2 / event
                                 :ARG1-of (c16-4 / bad-07)
                                 :source (c16-9 / situation
                                                :mod (c16-1 / hostage)
                                                :mod (c16-10 / this))
                                 :polarity -)))

# ::snt it's so scary Marcus u have no idea
# ::tokens ["it", "'s", "so", "scary", "Marcus", "u", "have", "no", "idea"]
# ::lemmas ["it", "be", "so", "scary", "Marcus", "u", "have", "no", "idea"]
(c18-8 / say-01
       :ARG0 (c18-4 / i)
       :ARG1 (c18-3 / scary-03
                    :ARG0 (c18-7 / it)
                    :degree (c18-1 / so))
       :ARG2 (c18-6 / person
                    :name (c18-5 / name
                                 :op1 "Marcus")
                    :ARG0-of (c18-0 / have-03
                                    :ARG1 (c18-2 / idea)
                                    :polarity -)))

# ::snt thanks Marcus. It's very rare for something to happen like this here so we are terrified
# ::tokens ["thanks", "Marcus", ".", "It", "'s", "very", "rare", "for", "something", "to", "happen", "like", "this", "here", "so", "we", "are", "terrified"]
# ::lemmas ["thank", "Marcus", ".", "it", "be", "very", "rare", "for", "something", "to", "happen", "like", "this", "here", "so", "we", "be", "terrify"]
(c20-2 / multi-sentence
       :snt1 (c20-12 / thank-01
                     :ARG1 (c20-6 / person
                                  :name (c20-4 / name
                                               :op1 "Marcus")))
       :snt2 (c20-7 / rare-02
                    :ARG1 (c20-11 / something
                                  :ARG1-of (c20-3 / resemble-01
                                                  :ARG2 (c20-10 / this)))
                    :location (c20-0 / here)
                    :ARG0-of (c20-8 / cause-01
                                    :ARG1 (c20-5 / terrify-01
                                                 :ARG1 (c20-1 / we)))
                    :degree (c20-9 / very)))

# ::snt I'm on my plane getting ready to fly to sydney...
# ::tokens ["I", "'m", "on", "my", "plane", "getting", "ready", "to", "fly", "to", "sydney", "..."]
# ::lemmas ["i", "be", "on", "my", "plane", "get", "ready", "to", "fly", "to", "sydney", "..."]
(c21-1 / be-located-at-91
       :ARG1 (c21-2 / i)
       :ARG2 (c21-4 / plane
                    :poss c21-2)
       :purpose (c21-5 / ready-01
                       :ARG1 c21-2
                       :ARG2 (c21-0 / fly-01
                                    :ARG1 c21-2
                                    :destination (c21-6 / city
                                                        :name (c21-3 / name
                                                                     :op1 "Sydney")))))
