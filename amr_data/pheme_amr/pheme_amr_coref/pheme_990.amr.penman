# ::snt already downloaded it...
# ::tokens ["already", "downloaded", "it", "..."]
# ::lemmas ["already", "download", "it", "..."]
(c1-1 / download-01
      :ARG1 (c1-2 / it)
      :time (c1-0 / ready))

# ::snt nm akready removed
# ::tokens ["nm", "akready", "removed"]
# ::lemmas ["nm", "akready", "remove"]
(c2-2 / remove-01
      :ARG0 (c2-1 / person
                  :name (c2-0 / name
                              :op1 "nm"
                              :op2 "Akready")))

# ::snt I am right or wrong in thinking there is a fine line between free speech &amp; aggravating an already volatile situation by taking
# ::tokens ["I", "am", "right", "or", "wrong", "in", "thinking", "there", "is", "a", "fine", "line", "between", "free", "speech", "&", "amp", ";", "aggravating", "an", "already", "volatile", "situation", "by", "taking"]
# ::lemmas ["i", "be", "right", "or", "wrong", "in", "think", "there", "be", "a", "fine", "line", "between", "free", "speech", "&", "amp", ";", "aggravate", "an", "already", "volatile", "situation", "by", "take"]
(c3-4 / or
      :op1 (c3-11 / right-06
                  :ARG1 (c3-7 / i)
                  :ARG2 (c3-14 / think-01
                               :ARG0 c3-7
                               :ARG1 (c3-1 / line
                                           :ARG1-of (c3-2 / fine-04)
                                           :mod (c3-3 / between
                                                      :op1 (c3-13 / speak-01
                                                                  :ARG3-of (c3-8 / free-04))
                                                      :op2 (c3-15 / amp))
                                           :ARG0-of (c3-6 / aggravate-01
                                                          :ARG1 (c3-5 / situation
                                                                      :ARG1-of (c3-9 / volatile-02
                                                                                     :time (c3-10 / already)))
                                                          :manner (c3-12 / take-01)))))
      :op2 (c3-0 / wrong-04
                 :ARG1 c3-7
                 :ARG2 c3-14))

# ::snt Video of attack here
# ::tokens ["Video", "of", "attack", "here"]
# ::lemmas ["video", "of", "attack", "here"]
(c4-1 / video
      :topic (c4-2 / attack-01)
      :location (c4-0 / here))

# ::snt :yeah its been removed. It was very clear and good footage too. Should pop up somewhere again.
# ::tokens [":", "yeah", "its", "been", "removed", ".", "It", "was", "very", "clear", "and", "good", "footage", "too", ".", "Should", "pop", "up", "somewhere", "again", "."]
# ::lemmas [":", "yeah", "its", "be", "remove", ".", "it", "be", "very", "clear", "and", "good", "footage", "too", ".", "should", "pop", "up", "somewhere", "again", "."]
(c5-2 / multi-sentence
      :snt1 (c5-8 / remove-01
                  :ARG1 (c5-4 / it)
                  :mod (c5-0 / yeah
                             :mode expressive))
      :snt2 (c5-14 / and
                   :op1 (c5-9 / clear-06
                              :ARG1 (c5-10 / it)
                              :degree (c5-6 / very))
                   :op2 (c5-1 / footage
                              :ARG1-of (c5-11 / good-02)
                              :mod (c5-13 / too)))
      :snt3 (c5-5 / recommend-01
                  :ARG1 (c5-7 / pop-up-03
                              :ARG1 (c5-12 / somewhere)
                              :mod (c5-3 / again))))

# ::snt source ?
# ::tokens ["source", "?"]
# ::lemmas ["source", "?"]
(c6-0 / source
      :polarity (c6-1 / amr-unknown))

# ::snt the p*ss???
# ::tokens ["the", "p*ss", "?", "?", "?"]
# ::lemmas ["the", "p*ss", "?", "?", "?"]
(c7-0 / p*ss
      :polarity (c7-1 / amr-unknown))

# ::snt good man. let me know when you get it up somewhere
# ::tokens ["good", "man", ".", "let", "me", "know", "when", "you", "get", "it", "up", "somewhere"]
# ::lemmas ["good", "man", ".", "let", "i", "know", "when", "you", "get", "it", "up", "somewhere"]
(c8-2 / multi-sentence
      :snt1 (c8-9 / say-01
                  :ARG1 (c8-5 / man
                              :ARG1-of (c8-7 / good-02))
                  :ARG2 (c8-4 / i))
      :snt2 (c8-1 / let-know-07
                  :ARG0 (c8-0 / you)
                  :ARG1 c8-4
                  :time (c8-6 / get-05
                              :ARG0 c8-0
                              :ARG1 (c8-8 / it)
                              :ARG2 (c8-3 / somewhere))
                  :mode imperative))

# ::snt here is the removed video again
# ::tokens ["here", "is", "the", "removed", "video", "again"]
# ::lemmas ["here", "be", "the", "removed", "video", "again"]
(c9-1 / video
      :ARG1-of (c9-2 / remove-01)
      :location (c9-0 / here)
      :mod (c9-3 / again))

# ::snt even better footage
# ::tokens ["even", "better", "footage"]
# ::lemmas ["even", "well", "footage"]
(c10-1 / footage
       :ARG1-of (c10-0 / have-degree-91
                       :ARG2 (c10-4 / good-02
                                    :ARG1 c10-1)
                       :ARG3 (c10-2 / more
                                    :mod (c10-3 / even))))

# ::snt thanks
# ::tokens ["thanks"]
# ::lemmas ["thank"]
(c11-0 / thank-01)

# ::snt looks like it's been removed?
# ::tokens ["looks", "like", "it", "'s", "been", "removed", "?"]
# ::lemmas ["look", "like", "it", "be", "be", "remove", "?"]
(c12-1 / look-02
       :polarity (c12-3 / amr-unknown)
       :ARG1 (c12-0 / remove-01
                    :ARG1 (c12-2 / it)))

# ::snt Is any confirmation yet of reports an RPG was involved?
# ::tokens ["Is", "any", "confirmation", "yet", "of", "reports", "an", "RPG", "was", "involved", "?"]
# ::lemmas ["be", "any", "confirmation", "yet", "of", "report", "an", "RPG", "be", "involve", "?"]
(c13-5 / confirm-01
       :polarity (c13-7 / amr-unknown)
       :ARG1 (c13-4 / report-01
                    :ARG1 (c13-1 / involve-01
                                 :ARG1 (c13-6 / grenade
                                              :ARG1-of (c13-3 / propel-01
                                                              :ARG0 (c13-2 / rocket)))))
       :time (c13-0 / yet))

# ::snt it's on his way
# ::tokens ["it", "'s", "on", "his", "way"]
# ::lemmas ["it", "be", "on", "his", "way"]
(c14-1 / go-02
       :ARG0 (c14-2 / it)
       :path (c14-0 / way
                    :poss c14-2))
