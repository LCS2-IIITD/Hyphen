# ::snt It's a conniving way to do a smear campaign. Darren Wilson is a cold-blooded murderer.
# ::tokens ["It", "'s", "a", "conniving", "way", "to", "do", "a", "smear", "campaign", ".", "Darren", "Wilson", "is", "a", "cold", "-", "blooded", "murderer", "."]
# ::lemmas ["it", "be", "a", "connive", "way", "to", "do", "a", "smear", "campaign", ".", "Darren", "Wilson", "be", "a", "cold", "-", "blooded", "murderer", "."]
(c1-1 / multi-sentence
      :snt1 (c1-0 / way
                  :manner-of (c1-6 / do-02
                                   :ARG1 (c1-7 / campaign-01
                                               :ARG1 (c1-11 / smear-02)))
                  :ARG0-of (c1-8 / connive-01)
                  :domain (c1-3 / it))
      :snt2 (c1-5 / person
                  :ARG0-of (c1-9 / murder-01)
                  :ARG1-of (c1-2 / blood-02
                                 :ARG1-of (c1-10 / cold-02))
                  :domain (c1-12 / person
                                 :name (c1-4 / name
                                             :op1 "Darren"
                                             :op2 "Wilson"))))

# ::snt I hear ya, but u said the swishers were behind the counter and they were, no biggie
# ::tokens ["I", "hear", "ya", ",", "but", "u", "said", "the", "swishers", "were", "behind", "the", "counter", "and", "they", "were", ",", "no", "biggie"]
# ::lemmas ["i", "hear", "ya", ",", "but", "u", "say", "the", "swisher", "be", "behind", "the", "counter", "and", "they", "be", ",", "no", "biggie"]
(c2-0 / hear-01
      :ARG0 (c2-3 / i)
      :ARG2 (c2-1 / you)
      :concession-of (c2-9 / and
                           :op1 (c2-8 / say-01
                                      :ARG0 c2-1
                                      :ARG1 (c2-4 / person
                                                  :ARG0-of (c2-6 / ishers-01)
                                                  :location (c2-2 / behind
                                                                  :op1 (c2-5 / counter))))
                           :op2 (c2-7 / biggie
                                      :polarity -)))

# ::snt SUSPICION of a crime results n DEATH of the unarmed in the comm as a rule.
# ::tokens ["SUSPICION", "of", "a", "crime", "results", "n", "DEATH", "of", "the", "unarmed", "in", "the", "comm", "as", "a", "rule", "."]
# ::lemmas ["SUSPICION", "of", "a", "crime", "result", "n", "DEATH", "of", "the", "unarmed", "in", "the", "comm", "as", "a", "rule", "."]
(c3-3 / result-01
      :ARG1 (c3-4 / concentrate-01
                  :ARG1 (c3-2 / crime-02))
      :ARG2 (c3-5 / die-01
                  :ARG1 (c3-1 / person
                              :ARG1-of (c3-7 / arm-01
                                             :polarity -)
                              :location (c3-6 / comm
                                              :ARG1-of (c3-0 / rule-01)))))

# ::snt &lt;&lt;he didn't know at all they still has a B.O.L.O out at for the suspect
# ::tokens ["&", "lt;&lt;he", "did", "n't", "know", "at", "all", "they", "still", "has", "a", "B.O.L.O", "out", "at", "for", "the", "suspect"]
# ::lemmas ["&", "lt;&lt;he", "do", "not", "know", "at", "all", "they", "still", "have", "a", "B.O.L.O", "out", "at", "for", "the", "suspect"]
(c4-4 / know-01
      :ARG0 (c4-0 / he)
      :ARG1 (c4-12 / have-03
                   :ARG0 (c4-10 / they)
                   :ARG1 (c4-7 / person
                               :ARG0-of (c4-6 / have-org-role-91
                                              :ARG1 (c4-2 / organization
                                                          :name (c4-5 / name
                                                                      :op1 "B.O.L.O."))
                                              :ARG2 (c4-1 / out-06
                                                          :ARG1 c4-7
                                                          :ARG2 (c4-11 / person
                                                                       :ARG2-of (c4-8 / suspect-01)))))
                   :mod (c4-3 / still))
      :degree (c4-9 / at-all)
      :polarity -)

# ::snt may be prudent to ask clerk if Brown was the one who hit him
# ::tokens ["may", "be", "prudent", "to", "ask", "clerk", "if", "Brown", "was", "the", "one", "who", "hit", "him"]
# ::lemmas ["may", "be", "prudent", "to", "ask", "clerk", "if", "Brown", "be", "the", "one", "who", "hit", "he"]
(c5-3 / possible-01
      :ARG1 (c5-6 / prudent
                  :domain (c5-7 / ask-01
                                :ARG1 (c5-5 / truth-value
                                            :polarity-of (c5-0 / hit-01
                                                               :ARG0 (c5-1 / person
                                                                           :name (c5-2 / name
                                                                                       :op1 "Brown"))
                                                               :ARG1 (c5-4 / clerk
                                                                           :ARG2-of c5-7))))))

# ::snt I'm not sure there was a "robbery". Convenience stores keep tobacco behind a counter where you PAY first! IJS
# ::tokens ["I", "'m", "not", "sure", "there", "was", "a", "\"", "robbery", "\"", ".", "Convenience", "stores", "keep", "tobacco", "behind", "a", "counter", "where", "you", "PAY", "first", "!", "IJS"]
# ::lemmas ["i", "be", "not", "sure", "there", "be", "a", "\"", "robbery", "\"", ".", "convenience", "store", "keep", "tobacco", "behind", "a", "counter", "where", "you", "pay", "first", "!", "IJS"]
(c6-1 / multi-sentence
      :snt1 (c6-11 / sure-02
                   :ARG0 (c6-5 / i)
                   :ARG1 (c6-8 / rob-01)
                   :polarity -)
      :snt2 (c6-13 / keep-01
                   :ARG0 (c6-4 / store
                               :mod (c6-9 / convenience))
                   :ARG1 (c6-12 / tobacco)
                   :location (c6-2 / behind
                                   :op1 (c6-10 / counter))
                   :location-of (c6-7 / pay-01
                                      :ARG0 (c6-0 / you)
                                      :ord (c6-3 / ordinal-entity
                                                 :value 1)))
      :snt3 (c6-14 / person
                   :name (c6-6 / name
                               :op1 "IJS")))

# ::snt when that didn't made logical sense, now it was jaywalking? And he felt the nd to use deadly force for jaywalking? Lol
# ::tokens ["when", "that", "did", "n't", "made", "logical", "sense", ",", "now", "it", "was", "jaywalking", "?", "And", "he", "felt", "the", "nd", "to", "use", "deadly", "force", "for", "jaywalking", "?", "Lol"]
# ::lemmas ["when", "that", "do", "not", "make", "logical", "sense", ",", "now", "it", "be", "jaywalk", "?", "and", "he", "feel", "the", "nd", "to", "use", "deadly", "force", "for", "jaywalking", "?", "Lol"]
(c7-4 / multi-sentence
      :snt1 (c7-0 / jaywalking
                  :time (c7-13 / sense-02
                               :ARG1 (c7-14 / that)
                               :mod (c7-3 / logical)
                               :time (c7-9 / now)
                               :polarity -))
      :snt2 (c7-16 / and
                   :op2 (c7-5 / feel-01
                              :ARG0 (c7-1 / he)
                              :ARG1 (c7-10 / need-01
                                           :ARG0 c7-1
                                           :ARG1 (c7-6 / use-01
                                                       :ARG0 c7-1
                                                       :ARG1 (c7-8 / force-04
                                                                   :ARG0-of (c7-11 / kill-01))
                                                       :ARG2 (c7-15 / jaywalking))))
                   :polarity (c7-7 / amr-unknown))
      :snt3 (c7-12 / laugh-01
                   :manner (c7-2 / loud)
                   :mode expressive))

# ::snt their account is getting worse and worse Roland
# ::tokens ["their", "account", "is", "getting", "worse", "and", "worse", "Roland"]
# ::lemmas ["their", "account", "be", "get", "bad", "and", "bad", "Roland"]
(c8-4 / say-01
      :ARG0 (c8-1 / i)
      :ARG1 (c8-0 / worsen-01
                  :ARG1 (c8-6 / account
                              :poss (c8-5 / they)))
      :ARG2 (c8-3 / person
                  :name (c8-2 / name
                              :op1 "Roland")))

# ::snt you can't tell whether there was somebody behind the counter or not. Either way not related to shooting.
# ::tokens ["you", "ca", "n't", "tell", "whether", "there", "was", "somebody", "behind", "the", "counter", "or", "not", ".", "Either", "way", "not", "related", "to", "shooting", "."]
# ::lemmas ["you", "can", "not", "tell", "whether", "there", "be", "somebody", "behind", "the", "counter", "or", "not", ".", "either", "way", "not", "related", "to", "shoot", "."]
(c9-2 / multi-sentence
      :snt1 (c9-6 / possible-01
                  :ARG1 (c9-12 / tell-02
                               :ARG0 (c9-0 / you)
                               :ARG1 (c9-10 / truth-value
                                            :polarity-of (c9-3 / be-located-at-91
                                                               :ARG1 (c9-11 / somebody)
                                                               :ARG2 (c9-8 / behind
                                                                           :op1 (c9-9 / counter)))))
                  :polarity -)
      :snt2 (c9-7 / relate-01
                  :ARG1 (c9-1 / way
                              :mod (c9-4 / either))
                  :ARG2 (c9-5 / shoot-02)
                  :polarity -))

# ::snt if u watch the tape, he reached over counter, still not grounds to shoot him from behind
# ::tokens ["if", "u", "watch", "the", "tape", ",", "he", "reached", "over", "counter", ",", "still", "not", "grounds", "to", "shoot", "him", "from", "behind"]
# ::lemmas ["if", "u", "watch", "the", "tape", ",", "he", "reach", "over", "counter", ",", "still", "not", "ground", "to", "shoot", "he", "from", "behind"]
(c10-5 / reach-01
       :ARG0 (c10-0 / he)
       :ARG1 (c10-6 / counter)
       :condition (c10-1 / watch-01
                         :ARG0 (c10-2 / you)
                         :ARG1 (c10-10 / tape))
       :ARG0-of (c10-7 / cause-01
                       :ARG1 (c10-8 / ground-02
                                    :ARG1 (c10-9 / shoot-02
                                                 :ARG1 c10-0
                                                 :manner (c10-3 / behind))
                                    :mod (c10-4 / still)
                                    :polarity -)))

# ::snt they've been throwing out one lie after another. And none of it makes sense. How was he "prime suspect" just minutes after?
# ::tokens ["they", "'ve", "been", "throwing", "out", "one", "lie", "after", "another", ".", "And", "none", "of", "it", "makes", "sense", ".", "How", "was", "he", "\"", "prime", "suspect", "\"", "just", "minutes", "after", "?"]
# ::lemmas ["they", "'ve", "be", "throw", "out", "one", "lie", "after", "another", ".", "and", "none", "of", "it", "make", "sense", ".", "how", "be", "he", "\"", "prime", "suspect", "\"", "just", "minutes", "after", "?"]
(c11-1 / multi-sentence
       :snt1 (c11-20 / throw-out-06
                     :ARG0 (c11-15 / they)
                     :ARG1 (c11-6 / lie-08
                                  :ARG0 c11-15
                                  :mod (c11-16 / one)
                                  :mod (c11-4 / after
                                              :op1 (c11-18 / lie-08
                                                           :mod (c11-12 / another)))))
       :snt2 (c11-10 / and
                     :op2 (c11-3 / sense-02
                                 :ARG1 (c11-13 / it
                                               :quant (c11-9 / none))
                                 :polarity -))
       :snt3 (c11-8 / suspect-01
                    :ARG0 (c11-5 / he)
                    :mod (c11-2 / prime)
                    :time (c11-19 / after
                                  :quant (c11-11 / multiple
                                                 :op1 (c11-14 / temporal-quantity
                                                              :unit (c11-7 / minute)
                                                              :quant 1))
                                  :mod (c11-0 / just))
                    :manner (c11-17 / amr-unknown)))

# ::snt Because jaywalking and stealing cigars are capital crimes. It's the classic "Blame the victim" defense.
# ::tokens ["Because", "jaywalking", "and", "stealing", "cigars", "are", "capital", "crimes", ".", "It", "'s", "the", "classic", "\"", "Blame", "the", "victim", "\"", "defense", "."]
# ::lemmas ["because", "jaywalk", "and", "steal", "cigar", "be", "capital", "crime", ".", "it", "be", "the", "classic", "\"", "blame", "the", "victim", "\"", "defense", "."]
(c12-2 / multi-sentence
       :snt1 (c12-6 / cause-01
                    :ARG0 (c12-5 / crime-02
                                 :ARG1 (c12-10 / and
                                               :op1 (c12-0 / jaywalk-00)
                                               :op2 (c12-9 / steal-01
                                                           :ARG1 (c12-8 / cigar)))
                                 :mod (c12-11 / capital)))
       :snt2 (c12-7 / defend-01
                    :ARG2 (c12-3 / blame-01
                                 :ARG1 (c12-4 / victim))
                    :mod (c12-1 / classic)))

# ::snt initially, but found out about the robbery during the altercation
# ::tokens ["initially", ",", "but", "found", "out", "about", "the", "robbery", "during", "the", "altercation"]
# ::lemmas ["initially", ",", "but", "find", "out", "about", "the", "robbery", "during", "the", "altercation"]
(c13-3 / contrast-01
       :ARG2 (c13-0 / find-out-03
                    :ARG1 (c13-2 / rob-01)
                    :time (c13-4 / altercation))
       :time (c13-1 / initially))

# ::snt wasn't it just this morning they were saying it was the reason
# ::tokens ["was", "n't", "it", "just", "this", "morning", "they", "were", "saying", "it", "was", "the", "reason"]
# ::lemmas ["be", "not", "it", "just", "this", "morning", "they", "be", "say", "it", "be", "the", "reason"]
(c14-7 / say-01
       :ARG0 (c14-8 / they)
       :ARG1 (c14-4 / reason
                    :domain (c14-2 / it))
       :time (c14-5 / date-entity
                    :dayperiod (c14-1 / morning)
                    :mod (c14-6 / today)
                    :mod (c14-0 / just))
       :ARG1-of (c14-3 / request-confirmation-91))

# ::snt ok so that was mike in the convenience store?
# ::tokens ["ok", "so", "that", "was", "mike", "in", "the", "convenience", "store", "?"]
# ::lemmas ["ok", "so", "that", "be", "mike", "in", "the", "convenience", "store", "?"]
(c15-0 / be-located-at-91
       :ARG1 (c15-4 / that)
       :ARG2 (c15-3 / store
                    :mod (c15-2 / convenience))
       :ARG1-of (c15-1 / okay-04)
       :polarity (c15-5 / amr-unknown))

# ::snt Oh. So NOW the police chief says the cop didn't know about the robbery when he stopped . The kid was "jaywalking"? BS!
# ::tokens ["Oh", ".", "So", "NOW", "the", "police", "chief", "says", "the", "cop", "did", "n't", "know", "about", "the", "robbery", "when", "he", "stopped", ".", "The", "kid", "was", "\"", "jaywalking", "\"", "?", "BS", "!"]
# ::lemmas ["oh", ".", "so", "now", "the", "police", "chief", "say", "the", "cop", "do", "not", "know", "about", "the", "robbery", "when", "he", "stop", ".", "the", "kid", "be", "\"", "jaywalk", "\"", "?", "BS", "!"]
(c16-3 / multi-sentence
       :snt1 (c16-5 / oh
                    :mode expressive)
       :snt2 (c16-13 / say-01
                     :ARG0 (c16-9 / person
                                  :ARG0-of (c16-0 / have-org-role-91
                                                  :ARG1 (c16-15 / police)
                                                  :ARG2 (c16-11 / chief)))
                     :ARG1 (c16-14 / know-01
                                   :ARG0 (c16-10 / cop)
                                   :ARG1 (c16-12 / rob-01)
                                   :time (c16-6 / stop-01
                                                :ARG0 c16-10)
                                   :polarity -)
                     :time (c16-8 / now))
       :snt3 (c16-1 / walk-01
                    :ARG0 (c16-7 / kid)
                    :manner (c16-2 / jaywalking)
                    :polarity (c16-16 / amr-unknown))
       :snt4 (c16-4 / bullshit-01
                    :mode expressive))

# ::snt Well, yeah. He had to trash the name of a dead child before providing that little tid bit.
# ::tokens ["Well", ",", "yeah", ".", "He", "had", "to", "trash", "the", "name", "of", "a", "dead", "child", "before", "providing", "that", "little", "tid", "bit", "."]
# ::lemmas ["well", ",", "yeah", ".", "he", "have", "to", "trash", "the", "name", "of", "a", "dead", "child", "before", "provide", "that", "little", "tid", "bit", "."]
(c17-4 / multi-sentence
       :snt1 (c17-2 / yeah
                    :mod (c17-1 / well))
       :snt2 (c17-6 / obligate-01
                    :ARG1 (c17-0 / he)
                    :ARG2 (c17-15 / trash-01
                                  :ARG0 c17-0
                                  :ARG1 (c17-14 / thing
                                                :ARG2-of (c17-8 / name-01
                                                                :ARG1 (c17-12 / child
                                                                              :ARG1-of (c17-11 / die-01))))
                                  :time (c17-5 / before
                                               :op1 (c17-10 / provide-01
                                                            :ARG0 c17-0
                                                            :ARG1 (c17-13 / bit
                                                                          :mod (c17-3 / little)
                                                                          :mod (c17-9 / that)
                                                                          :mod (c17-7 / tid)))))))
