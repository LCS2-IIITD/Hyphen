# ::snt if they know all dead so quickly then fuselage is intact.
# ::tokens ["if", "they", "know", "all", "dead", "so", "quickly", "then", "fuselage", "is", "intact", "."]
# ::lemmas ["if", "they", "know", "all", "dead", "so", "quickly", "then", "fuselage", "be", "intact", "."]
(c1-2 / intact
      :domain (c1-0 / fuselage)
      :condition (c1-3 / know-01
                       :ARG0 (c1-7 / they)
                       :ARG1 (c1-5 / die-01
                                   :ARG1 (c1-4 / person
                                               :mod (c1-8 / all))
                                   :ARG1-of (c1-1 / quick-02
                                                  :degree (c1-6 / so)))))

# ::snt yeah. Aviation is safe though. Bbc 'experts' are wrong
# ::tokens ["yeah", ".", "Aviation", "is", "safe", "though", ".", "Bbc", "'", "experts", "'", "are", "wrong"]
# ::lemmas ["yeah", ".", "aviation", "be", "safe", "though", ".", "bbc", "'", "expert", "'", "be", "wrong"]
(c2-2 / multi-sentence
      :snt1 (c2-0 / have-concession-91
                  :ARG2 (c2-6 / safe-01
                              :ARG0 (c2-8 / aviation)))
      :snt2 (c2-1 / wrong-04
                  :ARG1 (c2-5 / person
                              :ARG1-of (c2-3 / expert-01
                                             :ARG2 (c2-7 / publication
                                                         :name (c2-4 / name
                                                                     :op1 "Bbc"))))))

# ::snt If certain then no bomb. Would be spread? Must be main section as one piece. Came down high. So engine or body fatigue? Age?
# ::tokens ["If", "certain", "then", "no", "bomb", ".", "Would", "be", "spread", "?", "Must", "be", "main", "section", "as", "one", "piece", ".", "Came", "down", "high", ".", "So", "engine", "or", "body", "fatigue", "?", "Age", "?"]
# ::lemmas ["if", "certain", "then", "no", "bomb", ".", "would", "be", "spread", "?", "must", "be", "main", "section", "as", "one", "piece", ".", "come", "down", "high", ".", "so", "engine", "or", "body", "fatigue", "?", "Age", "?"]
(c3-0 / multi-sentence
      :snt1 (c3-8 / bomb-01
                  :condition (c3-19 / certain)
                  :polarity -)
      :snt2 (c3-4 / spread-03
                  :polarity (c3-5 / amr-unknown))
      :snt3 (c3-17 / obligate-01
                   :ARG2 (c3-9 / section
                               :mod (c3-12 / main)
                               :prep-as (c3-1 / piece
                                              :quant 1)))
      :snt4 (c3-2 / come-01
                  :ARG1 (c3-3 / down)
                  :manner (c3-6 / high-02))
      :snt5 (c3-14 / infer-01
                   :ARG1 (c3-16 / or
                                :op1 (c3-7 / fatigue
                                           :mod (c3-10 / engine))
                                :op2 (c3-18 / fatigue
                                            :mod (c3-15 / body)))
                   :polarity (c3-13 / amr-unknown))
      :snt6 (c3-11 / age-01))

# ::snt Yes very! But need facts or otherwise jump to conclusions that can cost more lives. If wrong fix!
# ::tokens ["Yes", "very", "!", "But", "need", "facts", "or", "otherwise", "jump", "to", "conclusions", "that", "can", "cost", "more", "lives", ".", "If", "wrong", "fix", "!"]
# ::lemmas ["yes", "very", "!", "but", "need", "fact", "or", "otherwise", "jump", "to", "conclusion", "that", "can", "cost", "more", "life", ".", "if", "wrong", "fix", "!"]
(c4-4 / multi-sentence
      :snt1 (c4-1 / yes
                  :degree (c4-10 / very)
                  :domain (c4-13 / contrast-01
                                 :ARG2 (c4-7 / or
                                             :op1 (c4-9 / need-01
                                                        :ARG1 (c4-3 / fact))
                                             :op2 (c4-0 / jump-03
                                                        :ARG2 (c4-12 / conclude-01
                                                                     :ARG1 (c4-15 / cost-01
                                                                                  :ARG2 (c4-5 / life
                                                                                              :quant (c4-11 / more))
                                                                                  :ARG1-of (c4-14 / possible-01))
                                                                     :condition (c4-2 / have-polarity-91
                                                                                      :ARG2 -)))))
                  :snt2 (c4-8 / fix-02
                              :condition (c4-6 / wrong-04))))

# ::snt Sounds like metal?
# ::tokens ["Sounds", "like", "metal", "?"]
# ::lemmas ["sound", "like", "metal", "?"]
(c5-0 / sound-01
      :polarity (c5-2 / amr-unknown)
      :ARG2 (c5-1 / metal))

# ::snt Control gear was computers. Then modified for wire. Pilots didn't like Airbus at first.
# ::tokens ["Control", "gear", "was", "computers", ".", "Then", "modified", "for", "wire", ".", "Pilots", "did", "n't", "like", "Airbus", "at", "first", "."]
# ::lemmas ["control", "gear", "be", "computer", ".", "then", "modify", "for", "wire", ".", "pilot", "do", "not", "like", "Airbus", "at", "first", "."]
(c6-1 / multi-sentence
      :snt1 (c6-6 / gear
                  :instrument-of (c6-5 / control-01)
                  :domain (c6-4 / computer))
      :snt2 (c6-3 / modify-01
                  :ARG2 (c6-0 / wire)
                  :time (c6-10 / then))
      :snt3 (c6-7 / dislike-01
                  :ARG0 (c6-8 / pilot)
                  :ARG1 (c6-9 / company
                              :name (c6-2 / name
                                          :op1 "Airbus"))
                  :time (c6-11 / at-first)))

# ::snt : "No survivors" from crash in the Alps -French transport minister
# ::tokens [":", "\"", "No", "survivors", "\"", "from", "crash", "in", "the", "Alps", "-French", "transport", "minister"]
# ::lemmas [":", "\"", "no", "survivor", "\"", "from", "crash", "in", "the", "Alps", "-French", "transport", "minister"]
(c7-9 / say-01
      :ARG0 (c7-5 / person
                  :ARG0-of (c7-0 / have-org-role-91
                                 :ARG1 (c7-7 / country
                                             :name (c7-3 / name
                                                         :op1 "France"))
                                 :ARG2 (c7-1 / minister
                                             :topic (c7-10 / transport-01)))
                  :ARG1-of c7-9)
      :ARG0-of (c7-2 / survive-01
                     :ARG1 (c7-6 / crash-01
                                 :location (c7-8 / mountain
                                                 :name (c7-4 / name
                                                             :op1 "Alps"))))
      :polarity -)

# ::snt A320 is the most technical aircraft, all Airbus are electronic basically. Boeing is more fly by wire
# ::tokens ["A320", "is", "the", "most", "technical", "aircraft", ",", "all", "Airbus", "are", "electronic", "basically", ".", "Boeing", "is", "more", "fly", "by", "wire"]
# ::lemmas ["A320", "be", "the", "most", "technical", "aircraft", ",", "all", "Airbus", "be", "electronic", "basically", ".", "Boeing", "be", "more", "fly", "by", "wire"]
(c8-3 / multi-sentence
      :snt1 (c8-0 / have-degree-91
                  :ARG1 (c8-16 / aircraft-type
                               :name (c8-9 / name
                                           :op1 "A320"))
                  :ARG2 (c8-15 / technical)
                  :ARG3 (c8-11 / most)
                  :ARG5 (c8-8 / aircraft-type
                              :name (c8-10 / name
                                           :op1 "Airbus")
                              :mod (c8-12 / all)
                              :mod (c8-7 / electronics)))
      :snt2 (c8-2 / have-degree-91
                  :ARG1 (c8-13 / company
                               :name (c8-14 / name
                                            :op1 "Boeing"))
                  :ARG2 (c8-4 / fly-01
                              :manner (c8-1 / wire))
                  :ARG3 (c8-5 / more)
                  :mod (c8-6 / basic)))

# ::snt Like pressure. It was at highest.
# ::tokens ["Like", "pressure", ".", "It", "was", "at", "highest", "."]
# ::lemmas ["like", "pressure", ".", "it", "be", "at", "high", "."]
(c10-1 / multi-sentence
       :snt1 (c10-2 / exemplify-01
                    :ARG0 (c10-4 / pressure))
       :snt2 (c10-0 / have-degree-91
                    :ARG1 (c10-3 / it)
                    :ARG2 (c10-6 / high-02
                                 :ARG1 c10-3)
                    :ARG3 (c10-5 / most)))

# ::snt They tend to say -25 years is old.
# ::tokens ["They", "tend", "to", "say", "-25", "years", "is", "old", "."]
# ::lemmas ["they", "tend", "to", "say", "-25", "years", "be", "old", "."]
(c11-4 / tend-02
       :ARG1 (c11-2 / they)
       :ARG2 (c11-3 / say-01
                    :ARG0 c11-2
                    :ARG1 (c11-5 / age-01
                                 :ARG2 (c11-1 / temporal-quantity
                                              :unit (c11-0 / year)
                                              :quant 25))))

# ::snt We can guess. But let's see what pilots overheard in flight??
# ::tokens ["We", "can", "guess", ".", "But", "let", "'s", "see", "what", "pilots", "overheard", "in", "flight", "?", "?"]
# ::lemmas ["we", "can", "guess", ".", "but", "let", "us", "see", "what", "pilot", "overhear", "in", "flight", "?", "?"]
(c12-2 / multi-sentence
       :snt1 (c12-7 / possible-01
                    :ARG1 (c12-9 / guess-01
                                 :ARG0 (c12-0 / we)))
       :snt2 (c12-8 / contrast-01
                    :ARG2 (c12-1 / let-01
                                 :ARG0 (c12-6 / we)
                                 :ARG1 (c12-10 / see-01
                                               :ARG0 c12-6
                                               :ARG1 (c12-11 / thing
                                                             :ARG1-of (c12-5 / overhear-01
                                                                             :ARG0 (c12-12 / person
                                                                                           :ARG0-of (c12-4 / pilot-01))
                                                                             :time (c12-3 / fly-01
                                                                                          :ARG1 c12-12))))
                                 :mode imperative)))

# ::snt Let's just wait and see! Watch to read what pilots think.
# ::tokens ["Let", "'s", "just", "wait", "and", "see", "!", "Watch", "to", "read", "what", "pilots", "think", "."]
# ::lemmas ["let", "us", "just", "wait", "and", "see", "!", "watch", "to", "read", "what", "pilot", "think", "."]
(c13-3 / multi-sentence
       :snt1 (c13-12 / and
                     :op1 (c13-1 / wait-01
                                 :ARG1 (c13-5 / we)
                                 :mod (c13-0 / just)
                                 :mode imperative)
                     :op2 (c13-9 / see-01
                                 :ARG0 c13-5
                                 :mode imperative))
       :snt2 (c13-4 / watch-01
                    :ARG0 (c13-2 / you)
                    :ARG1 (c13-7 / read-01
                                 :ARG0 c13-2
                                 :ARG1 (c13-10 / thing
                                               :ARG1-of (c13-8 / think-01
                                                               :ARG0 (c13-6 / person
                                                                            :ARG0-of (c13-11 / pilot-01)))))
                    :mode imperative))

# ::snt very sad and terrible. Condolence to the affected families and authorities.
# ::tokens ["very", "sad", "and", "terrible", ".", "Condolence", "to", "the", "affected", "families", "and", "authorities", "."]
# ::lemmas ["very", "sad", "and", "terrible", ".", "condolence", "to", "the", "affected", "family", "and", "authority", "."]
(c14-1 / multi-sentence
       :snt1 (c14-10 / and
                     :op1 (c14-7 / sad-02
                                 :degree (c14-4 / very))
                     :op2 (c14-9 / terrible-01
                                 :degree c14-4))
       :snt2 (c14-6 / condolence
                    :beneficiary (c14-3 / and
                                        :op1 (c14-0 / family
                                                    :ARG1-of (c14-5 / affect-01))
                                        :op2 (c14-8 / authority
                                                    :ARG1-of (c14-2 / affect-01)))))

# ::snt : "No survivors" from crash in Alps, French transport minister says
# ::tokens [":", "\"", "No", "survivors", "\"", "from", "crash", "in", "Alps", ",", "French", "transport", "minister", "says"]
# ::lemmas [":", "\"", "no", "survivor", "\"", "from", "crash", "in", "Alps", ",", "French", "transport", "minister", "say"]
(c16-9 / say-01
       :ARG0 (c16-5 / person
                    :ARG0-of (c16-0 / have-org-role-91
                                    :ARG1 (c16-7 / country
                                                 :name (c16-3 / name
                                                              :op1 "France"))
                                    :ARG2 (c16-1 / minister
                                                 :topic (c16-10 / transport-01))))
       :ARG1 (c16-11 / person
                     :ARG0-of (c16-2 / survive-01
                                     :ARG1 (c16-6 / crash-01
                                                  :location (c16-8 / mountain
                                                                   :name (c16-4 / name
                                                                                :op1 "Alps"))))
                     :polarity -))

# ::snt Terrible!
# ::tokens ["Terrible", "!"]
# ::lemmas ["terrible", "!"]
(c17-0 / horrible
       :mode expressive)

# ::snt It is now possible to continuously telecast video of cockpit &amp; fuselage &amp;monitor/record in air line operator's ground station.
# ::tokens ["It", "is", "now", "possible", "to", "continuously", "telecast", "video", "of", "cockpit", "&", "amp", ";", "fuselage", "&", "amp;monitor", "/", "record", "in", "air", "line", "operator", "'s", "ground", "station", "."]
# ::lemmas ["it", "be", "now", "possible", "to", "continuously", "telecast", "video", "of", "cockpit", "&", "amp", ";", "fuselage", "&", "amp;monitor", "/", "record", "in", "air", "line", "operator", "'s", "ground", "station", "."]
(c18-6 / possible-01
       :ARG1 (c18-14 / telecast-01
                     :ARG1 (c18-5 / video
                                  :topic (c18-16 / and
                                                 :op1 (c18-8 / cockpit)
                                                 :op2 (c18-3 / airstrip)
                                                 :op3 (c18-0 / fuselage)
                                                 :op4 (c18-11 / thing
                                                              :ARG0-of (c18-7 / record-01))))
                     :ARG1-of (c18-9 / continue-01)
                     :location (c18-12 / station
                                       :mod (c18-10 / ground)
                                       :poss (c18-15 / person
                                                     :ARG0-of (c18-2 / operate-01
                                                                     :ARG1 (c18-1 / line
                                                                                  :mod (c18-13 / air)))))
                     :time (c18-4 / now)))

# ::snt Another plane crash, so sad
# ::tokens ["Another", "plane", "crash", ",", "so", "sad"]
# ::lemmas ["another", "plane", "crash", ",", "so", "sad"]
(c19-3 / sad-02
       :ARG0 (c19-2 / crash-01
                    :ARG1 (c19-1 / plane)
                    :mod (c19-4 / another))
       :degree (c19-0 / so))

# ::snt this is heartbreaking
# ::tokens ["this", "is", "heartbreaking"]
# ::lemmas ["this", "be", "heartbreake"]
(c20-1 / break-heart-31
       :ARG0 (c20-0 / this))

# ::snt Need to seriously check whether information blackout is b/c of conflict of interest; higher Insurance for operator's error.
# ::tokens ["Need", "to", "seriously", "check", "whether", "information", "blackout", "is", "b", "/", "c", "of", "conflict", "of", "interest", ";", "higher", "Insurance", "for", "operator", "'s", "error", "."]
# ::lemmas ["need", "to", "seriously", "check", "whether", "information", "blackout", "be", "b", "/", "c", "of", "conflict", "of", "interest", ";", "high", "Insurance", "for", "operator", "'s", "error", "."]
(c21-16 / and
        :op1 (c21-8 / need-01
                    :ARG1 (c21-11 / check-01
                                  :ARG1 (c21-14 / truth-value
                                                :polarity-of (c21-4 / blackout
                                                                    :mod (c21-7 / information)
                                                                    :ARG1-of (c21-10 / cause-01
                                                                                     :ARG0 (c21-13 / conflict-01
                                                                                                   :ARG2 (c21-12 / interest)))))
                                  :manner (c21-15 / serious-01)))
        :op2 (c21-1 / insure-02
                    :ARG3 (c21-6 / err-01
                                 :ARG0 (c21-9 / person
                                              :ARG0-of (c21-5 / operate-01)))
                    :ARG1-of (c21-0 / have-degree-91
                                    :ARG2 (c21-2 / high-02
                                                 :ARG1 c21-1)
                                    :ARG3 (c21-3 / more))))

# ::snt Thumbs up for sharing that tweet. It's now live on my !
# ::tokens ["Thumbs", "up", "for", "sharing", "that", "tweet", ".", "It", "'s", "now", "live", "on", "my", "!"]
# ::lemmas ["thumb", "up", "for", "share", "that", "tweet", ".", "it", "be", "now", "live", "on", "my", "!"]
(c22-1 / multi-sentence
       :snt1 (c22-2 / umbs-up-00
                    :ARG1-of (c22-6 / cause-01
                                    :ARG0 (c22-9 / share-01
                                                 :ARG1 (c22-10 / thing
                                                               :ARG1-of (c22-8 / tweet-01)
                                                               :mod (c22-5 / that)))))
       :snt2 (c22-0 / live
                    :domain (c22-3 / it)
                    :time (c22-4 / now)
                    :location (c22-7 / i)))

# ::snt It is absurd that in most accidents, no communication happens btn pilots &amp;Air line operator/control rooms before crash.
# ::tokens ["It", "is", "absurd", "that", "in", "most", "accidents", ",", "no", "communication", "happens", "btn", "pilots", "&", "amp;Air", "line", "operator", "/", "control", "rooms", "before", "crash", "."]
# ::lemmas ["it", "be", "absurd", "that", "in", "most", "accident", ",", "no", "communication", "happen", "btn", "pilot", "&", "amp;Air", "line", "operator", "/", "control", "room", "before", "crash", "."]
(c23-17 / absurd
        :domain (c23-10 / communicate-01
                        :ARG0 (c23-6 / and
                                     :op1 (c23-8 / person
                                                 :ARG0-of (c23-16 / pilot-01))
                                     :op2 (c23-2 / person
                                                 :ARG0-of (c23-7 / amp-01))
                                     :op3 (c23-9 / room
                                                 :location-of (c23-13 / slash
                                                                      :op1 (c23-15 / person
                                                                                   :ARG0-of (c23-4 / operate-01
                                                                                                   :ARG1 (c23-0 / line
                                                                                                                :mod (c23-14 / air))))
                                                                      :op2 (c23-11 / control-01))))
                        :time (c23-3 / before
                                     :op1 (c23-12 / crash-01))
                        :subevent-of (c23-5 / accident
                                            :quant (c23-1 / most))
                        :polarity -))

# ::snt For a plane with metal fatigue? Still could be controls?
# ::tokens ["For", "a", "plane", "with", "metal", "fatigue", "?", "Still", "could", "be", "controls", "?"]
# ::lemmas ["for", "a", "plane", "with", "metal", "fatigue", "?", "still", "could", "be", "control", "?"]
(c24-1 / multi-sentence
       :snt1 (c24-3 / possible-01
                    :polarity (c24-8 / amr-unknown)
                    :ARG1 (c24-5 / control-01)
                    :beneficiary (c24-7 / plane
                                        :ARG0-of (c24-0 / fatigue-01
                                                        :ARG1 (c24-4 / metal))))
       :snt2 (c24-2 / possible-01
                    :polarity c24-8)
       :ARG1 c24-5
       :mod (c24-6 / still))

# ::snt so sad
# ::tokens ["so", "sad"]
# ::lemmas ["so", "sad"]
(c25-0 / sad-02
       :degree (c25-1 / so))

# ::snt Read pilot commercial blogs too. good. But language skills are helpful too in foreign forum
# ::tokens ["Read", "pilot", "commercial", "blogs", "too", ".", "good", ".", "But", "language", "skills", "are", "helpful", "too", "in", "foreign", "forum"]
# ::lemmas ["read", "pilot", "commercial", "blog", "too", ".", "good", ".", "but", "language", "skill", "be", "helpful", "too", "in", "foreign", "forum"]
(c26-3 / multi-sentence
       :snt1 (c26-8 / read-01
                    :ARG0 (c26-1 / you)
                    :ARG1 (c26-5 / blog
                                 :mod (c26-9 / commerce
                                             :ARG1-of (c26-7 / pilot-01)))
                    :mod (c26-14 / too)
                    :mode imperative)
       :snt2 (c26-10 / good-02)
       :snt3 (c26-11 / contrast-01
                     :ARG2 (c26-0 / helpful-04
                                  :ARG0 (c26-13 / skill
                                                :topic (c26-2 / language))
                                  :location (c26-4 / forum
                                                   :mod (c26-6 / foreign))
                                  :mod (c26-12 / too))))

# ::snt no haha. Planes don't just disintegrate. I am doing training at the moment, possibly pilot error
# ::tokens ["no", "haha", ".", "Planes", "do", "n't", "just", "disintegrate", ".", "I", "am", "doing", "training", "at", "the", "moment", ",", "possibly", "pilot", "error"]
# ::lemmas ["no", "haha", ".", "plane", "do", "not", "just", "disintegrate", ".", "i", "be", "do", "training", "at", "the", "moment", ",", "possibly", "pilot", "error"]
(c27-3 / multi-sentence
       :snt1 (c27-0 / have-polarity-91
                    :mod (c27-12 / haha
                                 :mode expressive)
                    :ARG2 -)
       :snt2 (c27-8 / disintegrate-01
                    :ARG0 (c27-7 / plane)
                    :mod (c27-1 / just)
                    :polarity -)
       :snt3 (c27-10 / train-01
                     :ARG2 (c27-6 / i)
                     :time (c27-9 / moment)
                     :ARG1-of (c27-2 / mean-01
                                     :ARG2 (c27-11 / possible-01
                                                   :ARG1 (c27-5 / error
                                                                :mod (c27-4 / pilot-01))))))

# ::snt so sad, I pray for the families
# ::tokens ["so", "sad", ",", "I", "pray", "for", "the", "families"]
# ::lemmas ["so", "sad", ",", "i", "pray", "for", "the", "family"]
(c28-0 / have-degree-91
       :ARG2 (c28-5 / sad-02)
       :ARG3 (c28-2 / so)
       :ARG6 (c28-4 / pray-01
                    :ARG0 (c28-3 / i)
                    :ARG2 (c28-1 / family)))

# ::snt was oldest a320, delivered.
# ::tokens ["was", "oldest", "a320", ",", "delivered", "."]
# ::lemmas ["be", "oldest", "a320", ",", "deliver", "."]
(c29-6 / and
       :op1 (c29-0 / have-degree-91
                   :ARG2 (c29-2 / old)
                   :ARG3 (c29-1 / most)
                   :ARG5 (c29-4 / product
                                :name (c29-3 / name
                                             :op1 "A320")))
       :op2 (c29-5 / deliver-01
                   :ARG1 c29-4))

# ::snt . hitting a mountain at mph would have that effect
# ::tokens [".", "hitting", "a", "mountain", "at", "mph", "would", "have", "that", "effect"]
# ::lemmas [".", "hit", "a", "mountain", "at", "mph", "would", "have", "that", "effect"]
(c30-5 / affect-01
       :ARG0 (c30-0 / hit-01
                    :ARG1 (c30-1 / mountain)
                    :ARG2 (c30-3 / speed-quantity
                                 :unit (c30-2 / mile-per-hour)
                                 :quant 1))
       :ARG2 (c30-4 / that))

# ::snt it's too early to judge whether the pilot error or not
# ::tokens ["it", "'s", "too", "early", "to", "judge", "whether", "the", "pilot", "error", "or", "not"]
# ::lemmas ["it", "be", "too", "early", "to", "judge", "whether", "the", "pilot", "error", "or", "not"]
(c31-0 / have-degree-91
       :ARG1 (c31-6 / now)
       :ARG2 (c31-5 / early)
       :ARG3 (c31-8 / too)
       :ARG6 (c31-1 / judge-01
                    :ARG1 (c31-4 / or
                                 :op1 (c31-3 / err-01
                                             :ARG0 (c31-7 / person
                                                          :ARG0-of (c31-9 / pilot-01)))
                                 :op2 (c31-2 / err-01
                                             :ARG0 c31-7
                                             :polarity -))))

# ::snt catastrophic engine failure or pilot suicide can't be ruled out of course a bit like MH370
# ::tokens ["catastrophic", "engine", "failure", "or", "pilot", "suicide", "ca", "n't", "be", "ruled", "out", "of", "course", "a", "bit", "like", "MH370"]
# ::lemmas ["catastrophic", "engine", "failure", "or", "pilot", "suicide", "can", "not", "be", "rule", "out", "of", "course", "a", "bit", "like", "MH370"]
(c32-8 / possible-01
       :ARG1 (c32-9 / rule-01
                    :ARG1 (c32-3 / or
                                 :op1 (c32-0 / fail-01
                                             :ARG1 (c32-4 / engine)
                                             :mod (c32-10 / catastrophe))
                                 :op2 (c32-11 / suicide
                                              :mod (c32-12 / pilot-01)))
                    :ARG1-of (c32-6 / resemble-01
                                    :ARG2 (c32-5 / incident
                                                 :name (c32-7 / name
                                                              :op1 "MH370"))
                                    :degree (c32-2 / bit)
                                    :mod (c32-1 / of-course)))
       :polarity -)

# ::snt Qu desgracia ... Mi ms sentido psame a las familias. Biggest condolences to all who lost someone today. Sad.
# ::tokens ["Qu", "desgracia", "...", "Mi", "ms", "sentido", "psame", "a", "las", "familias", ".", "Biggest", "condolences", "to", "all", "who", "lost", "someone", "today", ".", "Sad", "."]
# ::lemmas ["qu", "desgracia", "...", "Mi", "ms", "sentido", "psame", "a", "las", "familia", ".", "big", "condolence", "to", "all", "who", "lose", "someone", "today", ".", "sad", "."]
(c33-0 / multi-sentence
       :snt1 (c33-5 / amr-unintelligible
                    :value "Qu desgracia")
       :snt2 (c33-2 / sendido-00
                    :ARG0 (c33-15 / i)
                    :ARG1 (c33-1 / person
                                 :ARG0-of (c33-6 / have-rel-role-91
                                                 :ARG1 c33-15
                                                 :ARG2 (c33-13 / mother)))
                    :ARG2 (c33-7 / familias
                                 :poss (c33-3 / person)))
       :snt3 (c33-4 / have-degree-91
                    :ARG1 (c33-17 / condolence)
                    :ARG2 (c33-11 / big)
                    :ARG3 (c33-8 / most)
                    :ARG5 (c33-10 / person
                                  :mod (c33-14 / all)
                                  :ARG0-of (c33-9 / lose-02
                                                  :ARG1 (c33-12 / someone)
                                                  :time (c33-18 / today))))
       :snt4 (c33-16 / sad-02))

# ::snt True! But it's a fly by wire. yrs old. And sounds as if if quickly went wrong when at k FT.
# ::tokens ["True", "!", "But", "it", "'s", "a", "fly", "by", "wire", ".", "yrs", "old", ".", "And", "sounds", "as", "if", "if", "quickly", "went", "wrong", "when", "at", "k", "FT", "."]
# ::lemmas ["true", "!", "but", "it", "be", "a", "fly", "by", "wire", ".", "yrs", "old", ".", "and", "sound", "as", "if", "if", "quickly", "go", "wrong", "when", "at", "k", "FT", "."]
(c34-3 / multi-sentence
       :snt1 (c34-13 / true-01
                     :mode expressive)
       :snt2 (c34-9 / contrast-01
                    :ARG2 (c34-2 / fly-by-wire
                                 :domain (c34-6 / it)))
       :snt3 (c34-14 / age-01
                     :ARG2 (c34-11 / temporal-quantity
                                   :unit (c34-0 / year)
                                   :quant 1))
       :snt4 (c34-5 / and
                    :op2 (c34-12 / sound-01
                                 :ARG1 (c34-10 / go-08
                                               :ARG1 c34-6
                                               :ARG2 (c34-1 / wrong-04
                                                            :ARG1 c34-6)
                                               :ARG1-of (c34-4 / quick-02)
                                               :time (c34-8 / game
                                                            :name (c34-7 / name
                                                                         :op1 "FT"))))))

# ::snt rapid decent at the end of route bit odd..
# ::tokens ["rapid", "decent", "at", "the", "end", "of", "route", "bit", "odd", ".."]
# ::lemmas ["rapid", "decent", "at", "the", "end", "of", "route", "bit", "odd", ".."]
(c35-1 / odd
       :degree (c35-0 / bit)
       :domain (c35-5 / decent
                      :mod (c35-4 / rancid)
                      :time (c35-2 / end-01
                                   :ARG1 (c35-3 / route))))
