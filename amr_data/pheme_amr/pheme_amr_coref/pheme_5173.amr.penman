# ::snt that will never happen
# ::tokens ["that", "will", "never", "happen"]
# ::lemmas ["that", "will", "never", "happen"]
(c1-0 / have-polarity-91
      :ARG1 (c1-2 / that)
      :time (c1-1 / ever)
      :ARG2 -)

# ::snt NEVER
# ::tokens ["NEVER"]
# ::lemmas ["NEVER"]
(c2-1 / be-temporally-at-91
      :ARG2 (c2-0 / ever))

# ::snt let's resist Tinfoil hat.
# ::tokens ["let", "'s", "resist", "Tinfoil", "hat", "."]
# ::lemmas ["let", "us", "resist", "Tinfoil", "hat", "."]
(c3-2 / resist-01
      :ARG0 (c3-1 / we)
      :ARG1 (c3-0 / hat
                  :mod (c3-3 / tinfoil))
      :mode imperative)

# ::snt Well said
# ::tokens ["Well", "said"]
# ::lemmas ["well", "say"]
(c4-0 / say-01
      :manner (c4-1 / good-02))

# ::snt they are also demanding their phone bills to be paid! Just saying
# ::tokens ["they", "are", "also", "demanding", "their", "phone", "bills", "to", "be", "paid", "!", "Just", "saying"]
# ::lemmas ["they", "be", "also", "demand", "their", "phone", "bill", "to", "be", "pay", "!", "just", "say"]
(c5-1 / multi-sentence
      :snt1 (c5-5 / demand-01
                  :ARG0 (c5-8 / they)
                  :ARG1 (c5-4 / pay-01
                              :ARG1 (c5-2 / bill-01
                                          :ARG2 (c5-6 / they)
                                          :ARG3 (c5-9 / phone)))
                  :mod (c5-10 / also))
      :snt2 (c5-7 / say-01
                  :ARG0 (c5-3 / i)
                  :mod (c5-0 / just)))

# ::snt Not gonna happen. Praying for those hostages.
# ::tokens ["Not", "gon", "na", "happen", ".", "Praying", "for", "those", "hostages", "."]
# ::lemmas ["not", "going", "to", "happen", ".", "pray", "for", "those", "hostage", "."]
(c6-1 / multi-sentence
      :snt1 (c6-2 / event
                  :polarity -)
      :snt2 (c6-3 / pay-01
                  :ARG3 (c6-0 / hostage
                              :mod (c6-4 / that))))

# ::snt AND PEOPLE IN HELL WANTS ICE WATER
# ::tokens ["AND", "PEOPLE", "IN", "HELL", "WANTS", "ICE", "WATER"]
# ::lemmas ["and", "people", "in", "HELL", "want", "ice", "water"]
(c7-5 / and
      :op2 (c7-1 / want-01
                 :ARG0 (c7-4 / person)
                 :ARG1 (c7-3 / water
                             :mod (c7-2 / ice))
                 :location (c7-0 / hell)))

# ::snt Murderers aren't martyrs! Terrorism is the devil's religion!
# ::tokens ["Murderers", "are", "n't", "martyrs", "!", "Terrorism", "is", "the", "devil", "'s", "religion", "!"]
# ::lemmas ["murderer", "be", "not", "martyr", "!", "terrorism", "be", "the", "devil", "'s", "religion", "!"]
(c8-1 / multi-sentence
      :snt1 (c8-2 / martyr-01
                  :ARG1 (c8-3 / person
                              :ARG0-of (c8-0 / murder-01))
                  :polarity -)
      :snt2 (c8-4 / religion
                  :poss (c8-5 / devil)
                  :domain (c8-6 / terrorism)))

# ::snt Why does one of these guys look like one of the Rappers from Trenton ??
# ::tokens ["Why", "does", "one", "of", "these", "guys", "look", "like", "one", "of", "the", "Rappers", "from", "Trenton", "?", "?"]
# ::lemmas ["why", "do", "one", "of", "these", "guy", "look", "like", "one", "of", "the", "Rappers", "from", "Trenton", "?", "?"]
(c9-0 / look-02
      :ARG0 (c9-6 / guy
                  :ARG1-of (c9-1 / include-91
                                 :ARG2 (c9-4 / guy
                                             :mod (c9-10 / this)))
                  :quant 1)
      :ARG1 (c9-3 / person
                  :ARG1-of (c9-7 / include-91
                                 :ARG2 (c9-11 / person
                                              :ARG0-of (c9-5 / report-01)
                                              :source (c9-8 / city
                                                            :name (c9-2 / name
                                                                        :op1 "Trenton"))))
                  :quant 1)
      :ARG1-of (c9-9 / cause-01
                     :ARG0 (c9-12 / amr-unknown)))

# ::snt wasn't putting one on Montel. I just said something doesn't sound right. Look at everything that's being said.
# ::tokens ["was", "n't", "putting", "one", "on", "Montel", ".", "I", "just", "said", "something", "does", "n't", "sound", "right", ".", "Look", "at", "everything", "that", "'s", "being", "said", "."]
# ::lemmas ["be", "not", "put", "one", "on", "Montel", ".", "i", "just", "say", "something", "do", "not", "sound", "right", ".", "look", "at", "everything", "that", "be", "be", "say", "."]
(c10-3 / multi-sentence
       :snt1 (c10-11 / put-01
                     :ARG1 (c10-5 / one)
                     :ARG2 (c10-14 / person
                                   :name (c10-10 / name
                                                 :op1 "Montel"))
                     :polarity -)
       :snt2 (c10-13 / say-01
                     :ARG0 (c10-9 / i)
                     :ARG1 (c10-7 / sound-01
                                  :ARG1 (c10-2 / something)
                                  :ARG2 (c10-12 / right-06
                                                :ARG1 c10-2)
                                  :polarity -)
                     :mod (c10-0 / just))
       :snt3 (c10-4 / look-01
                    :ARG0 (c10-1 / you)
                    :ARG1 (c10-8 / everything
                                 :ARG1-of (c10-6 / say-01))
                    :mode imperative))

# ::snt : Hostage-taker at Paris store demands release of , police union spokesman says.
# ::tokens [":", "Hostage", "-", "taker", "at", "Paris", "store", "demands", "release", "of", ",", "police", "union", "spokesman", "says", "."]
# ::lemmas [":", "hostage", "-", "taker", "at", "Paris", "store", "demand", "release", "of", ",", "police", "union", "spokesman", "say", "."]
(c11-10 / say-01
        :ARG0 (c11-6 / person
                     :ARG0-of (c11-0 / have-org-role-91
                                     :ARG1 (c11-2 / union
                                                  :mod (c11-12 / police))
                                     :ARG2 (c11-4 / spokesman)))
        :ARG1 (c11-7 / demand-01
                     :ARG0 (c11-3 / person
                                  :ARG0-of (c11-11 / take-01
                                                   :ARG1 (c11-13 / hostage)
                                                   :location (c11-1 / store
                                                                    :location (c11-8 / city
                                                                                     :name (c11-5 / name
                                                                                                  :op1 "Paris")))))
                     :ARG1 (c11-9 / release-01
                                  :ARG1 c11-3)))

# ::snt this makes me sick. Praying for hostages.
# ::tokens ["this", "makes", "me", "sick", ".", "Praying", "for", "hostages", "."]
# ::lemmas ["this", "make", "i", "sick", ".", "pray", "for", "hostage", "."]
(c12-1 / multi-sentence
       :snt1 (c12-3 / make-02
                    :ARG0 (c12-6 / this)
                    :ARG1 (c12-5 / sick-05
                                 :ARG0 c12-6
                                 :ARG1 (c12-2 / i)))
       :snt2 (c12-4 / pay-01
                    :ARG3 (c12-0 / hostage)))

# ::snt Police would you please shoot these POS?
# ::tokens ["Police", "would", "you", "please", "shoot", "these", "POS", "?"]
# ::lemmas ["police", "would", "you", "please", "shoot", "these", "POS", "?"]
(c13-3 / shoot-01
       :ARG0 (c13-0 / you)
       :ARG2 (c13-2 / person
                    :mod (c13-4 / this)
                    :ARG0-of (c13-5 / post-01
                                    :manner (c13-1 / original)))
       :mode imperative
       :polite +)

# ::snt : Hostage-taker at Paris store demands release of , police union spokesman says. " so awful
# ::tokens [":", "Hostage", "-", "taker", "at", "Paris", "store", "demands", "release", "of", ",", "police", "union", "spokesman", "says", ".", "\"", "so", "awful"]
# ::lemmas [":", "hostage", "-", "taker", "at", "Paris", "store", "demand", "release", "of", ",", "police", "union", "spokesman", "say", ".", "\"", "so", "awful"]
(c14-2 / multi-sentence
       :snt1 (c14-13 / say-01
                     :ARG0 (c14-8 / person
                                  :ARG0-of (c14-0 / have-org-role-91
                                                  :ARG1 (c14-3 / union
                                                               :mod (c14-15 / police))
                                                  :ARG2 (c14-6 / spokesman)))
                     :ARG1 (c14-9 / demand-01
                                  :ARG0 (c14-4 / person
                                               :ARG0-of (c14-10 / care-01
                                                                :ARG1 (c14-16 / hostage))
                                               :location (c14-1 / store
                                                                :location (c14-11 / city
                                                                                  :name (c14-7 / name
                                                                                               :op1 "Paris"))))
                                  :ARG1 (c14-12 / release-01
                                                :ARG1 c14-4)))
       :snt2 (c14-14 / awful
                     :degree (c14-5 / so)))

# ::snt ha not a chance
# ::tokens ["ha", "not", "a", "chance"]
# ::lemmas ["ha", "not", "a", "chance"]
(c15-1 / chance-02
       :mod (c15-0 / ha
                   :mode expressive)
       :polarity -)

# ::snt just use your gun or a pen
# ::tokens ["just", "use", "your", "gun", "or", "a", "pen"]
# ::lemmas ["just", "use", "your", "gun", "or", "a", "pen"]
(c16-2 / use-01
       :ARG0 (c16-1 / you)
       :ARG1 (c16-3 / or
                    :op1 (c16-5 / gun
                                :poss c16-1)
                    :op2 (c16-4 / pen
                                :poss c16-1))
       :mod (c16-0 / just)
       :mode imperative)

# ::snt none of this makes sense. Something doesn't sound right about all of this to me.
# ::tokens ["none", "of", "this", "makes", "sense", ".", "Something", "does", "n't", "sound", "right", "about", "all", "of", "this", "to", "me", "."]
# ::lemmas ["none", "of", "this", "make", "sense", ".", "something", "do", "not", "sound", "right", "about", "all", "of", "this", "to", "i", "."]
(c17-1 / multi-sentence
       :snt1 (c17-6 / sense-02
                    :ARG1 (c17-7 / this
                                 :mod (c17-4 / none)))
       :snt2 (c17-2 / sound-01
                    :ARG1 (c17-0 / something)
                    :ARG2 (c17-5 / right-06
                                 :ARG1 c17-0)
                    :ARG3 (c17-3 / i)
                    :polarity -))

# ::snt So hostage taker took over a market store! Humm they must have been hungry! Oh wait, does that grocery store serve "Halal" food? Lol
# ::tokens ["So", "hostage", "taker", "took", "over", "a", "market", "store", "!", "Humm", "they", "must", "have", "been", "hungry", "!", "Oh", "wait", ",", "does", "that", "grocery", "store", "serve", "\"", "Halal", "\"", "food", "?", "Lol"]
# ::lemmas ["so", "hostage", "taker", "take", "over", "a", "market", "store", "!", "Humm", "they", "must", "have", "be", "hungry", "!", "oh", "wait", ",", "do", "that", "grocery", "store", "serve", "\"", "Halal", "\"", "food", "?", "Lol"]
(c18-0 / multi-sentence
       :snt1 (c18-18 / take-over-12
                     :ARG0 (c18-2 / person
                                  :ARG1 (c18-6 / hostage)
                                  :ARG0-of c18-18))
       :ARG1 (c18-3 / store
                    :mod (c18-10 / market))
       :snt2 (c18-12 / infer-01
                     :ARG1 (c18-5 / hunger-01
                                  :ARG0 (c18-15 / they))
                     :mod (c18-1 / Humm
                                 :mode expressive))
       :snt3 (c18-9 / serve-01
                    :ARG0 (c18-16 / store
                                  :mod (c18-11 / grocery)
                                  :mod (c18-13 / that))
                    :ARG1 (c18-7 / food
                                 :mod (c18-14 / halal))
                    :polarity (c18-4 / amr-unknown)
                    :ARG2-of (c18-8 / laugh-01
                                    :manner (c18-17 / loud)
                                    :mode expressive)))

# ::snt Your about to die !!!!
# ::tokens ["Your", "about", "to", "die", "!", "!", "!", "!"]
# ::lemmas ["your", "about", "to", "die", "!", "!", "!", "!"]
(c19-1 / die-01
       :ARG1 (c19-0 / you)
       :time (c19-2 / about-to))
