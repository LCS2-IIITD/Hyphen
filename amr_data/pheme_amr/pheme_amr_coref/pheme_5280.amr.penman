# ::snt A320's don't just randomly dive into mountains
# ::tokens ["A320", "'s", "do", "n't", "just", "randomly", "dive", "into", "mountains"]
# ::lemmas ["A320", "'s", "do", "not", "just", "randomly", "dive", "into", "mountain"]
(c1-4 / dive-01
      :ARG0 (c1-5 / aircraft-type
                  :name (c1-2 / name
                              :op1 "A320"))
      :ARG1 (c1-1 / mountain)
      :manner (c1-3 / random)
      :mod (c1-0 / just)
      :polarity -)

# ::snt you can not conclude like that out of that chart!
# ::tokens ["you", "can", "not", "conclude", "like", "that", "out", "of", "that", "chart", "!"]
# ::lemmas ["you", "can", "not", "conclude", "like", "that", "out", "of", "that", "chart", "!"]
(c2-1 / possible-01
      :ARG1 (c2-3 / conclude-01
                  :ARG0 (c2-0 / you)
                  :ARG1-of (c2-2 / resemble-01
                                 :ARG2 (c2-6 / that
                                             :source (c2-4 / chart
                                                           :mod (c2-5 / that)))))
      :polarity -)

# ::snt I know, but think it is too soon (and still too little data) as to reach those conclusions
# ::tokens ["I", "know", ",", "but", "think", "it", "is", "too", "soon", "(", "and", "still", "too", "little", "data", ")", "as", "to", "reach", "those", "conclusions"]
# ::lemmas ["i", "know", ",", "but", "think", "it", "be", "too", "soon", "(", "and", "still", "too", "little", "datum", ")", "as", "to", "reach", "those", "conclusion"]
(c3-9 / contrast-01
      :ARG1 (c3-6 / know-01
                  :ARG0 (c3-5 / i))
      :ARG2 (c3-15 / think-01
                   :ARG0 c3-5
                   :ARG1 (c3-16 / and
                                :op1 (c3-13 / soon
                                            :ARG2-of (c3-0 / have-degree-91
                                                           :ARG1 (c3-10 / it)
                                                           :ARG3 (c3-12 / too)))
                                :op2 (c3-1 / have-degree-91
                                           :ARG1 (c3-8 / data)
                                           :ARG2 (c3-2 / little)
                                           :ARG3 (c3-7 / too)
                                           :mod (c3-3 / still))
                                :ARG6 (c3-11 / reach-01
                                             :ARG1 (c3-14 / conclude-01
                                                          :ARG1 (c3-4 / that))))))

# ::snt very strange though. The chance of BOTH engines failing on an A320 is ~3 trillion
# ::tokens ["very", "strange", "though", ".", "The", "chance", "of", "BOTH", "engines", "failing", "on", "an", "A320", "is", "~3", "trillion"]
# ::lemmas ["very", "strange", "though", ".", "the", "chance", "of", "both", "engine", "fail", "on", "an", "A320", "be", "~3", "trillion"]
(c4-2 / multi-sentence
      :snt1 (c4-0 / have-concession-91
                  :ARG2 (c4-10 / strange
                               :degree (c4-6 / very)))
      :snt2 (c4-9 / chance-02
                  :ARG1 (c4-1 / fail-01
                              :ARG1 (c4-4 / engine
                                          :mod (c4-3 / both))
                              :location (c4-11 / aircraft-type
                                               :name (c4-5 / name
                                                           :op1 "A320")))
                  :ARG2 (c4-7 / monetary-quantity
                              :unit (c4-8 / dollar)
                              :quant 3000000000000)))

# ::snt youre an idiot. they were in radio contact with ATC and called out mayday moments before impact.
# ::tokens ["you", "re", "an", "idiot", ".", "they", "were", "in", "radio", "contact", "with", "ATC", "and", "called", "out", "mayday", "moments", "before", "impact", "."]
# ::lemmas ["you", "re", "an", "idiot", ".", "they", "be", "in", "radio", "contact", "with", "ATC", "and", "call", "out", "mayday", "moments", "before", "impact", "."]
(c5-3 / idiot
      :domain (c5-0 / you)
      :ARG1-of (c5-6 / cause-01
                     :ARG0 (c5-11 / and
                                  :op1 (c5-5 / contact-01
                                             :ARG0 (c5-10 / they)
                                             :ARG1 (c5-9 / company
                                                         :name (c5-4 / name
                                                                     :op1 "ATC"))
                                             :medium (c5-7 / radio))
                                  :op2 (c5-12 / call-out-15
                                              :ARG0 c5-10
                                              :time (c5-2 / before
                                                          :op1 (c5-8 / impact-01)
                                                          :quant (c5-1 / moment))))))

# ::snt we can't speculate the cause of the crash but we know for sure the altitude and speed
# ::tokens ["we", "ca", "n't", "speculate", "the", "cause", "of", "the", "crash", "but", "we", "know", "for", "sure", "the", "altitude", "and", "speed"]
# ::lemmas ["we", "can", "not", "speculate", "the", "cause", "of", "the", "crash", "but", "we", "know", "for", "sure", "the", "altitude", "and", "speed"]
(c6-6 / contrast-01
      :ARG1 (c6-4 / possible-01
                  :ARG1 (c6-8 / speculate-01
                              :ARG0 (c6-0 / we)
                              :ARG2 (c6-5 / cause-01
                                          :ARG1 (c6-7 / crash-01)))
                  :polarity -)
      :ARG2 (c6-9 / know-01
                  :ARG0 c6-0
                  :ARG1 (c6-10 / and
                               :op1 (c6-3 / altitude)
                               :op2 (c6-2 / speed))
                  :ARG1-of (c6-1 / sure-02)))

# ::snt no. If that was the case the aircraft would of continued past Dusseldorf (as it would of had the fuel onboard to do so)
# ::tokens ["no", ".", "If", "that", "was", "the", "case", "the", "aircraft", "would", "of", "continued", "past", "Dusseldorf", "(", "as", "it", "would", "of", "had", "the", "fuel", "onboard", "to", "do", "so", ")"]
# ::lemmas ["no", ".", "if", "that", "be", "the", "case", "the", "aircraft", "would", "of", "continue", "past", "Dusseldorf", "(", "as", "it", "would", "of", "have", "the", "fuel", "onboard", "to", "do", "so", ")"]
(c7-2 / multi-sentence
      :snt1 (c7-4 / no)
      :snt2 (c7-8 / continue-01
                  :ARG1 (c7-11 / aircraft)
                  :path (c7-6 / past
                              :op1 (c7-7 / city
                                         :name (c7-5 / name
                                                     :op1 "Dusseldorf")))
                  :condition (c7-10 / that)
                  :ARG1-of (c7-9 / cause-01
                                 :ARG0 (c7-0 / have-03
                                             :ARG0 c7-11
                                             :ARG1 (c7-1 / fuel
                                                         :location (c7-3 / aboard))
                                             :purpose c7-8))))

# ::snt They called out mayday man, thats not suspicious.
# ::tokens ["They", "called", "out", "mayday", "man", ",", "that", "s", "not", "suspicious", "."]
# ::lemmas ["they", "call", "out", "mayday", "man", ",", "that", "s", "not", "suspicious", "."]
(c8-3 / call-out-15
      :ARG0 (c8-5 / they)
      :ARG1 (c8-0 / man
                  :mod (c8-1 / mayday))
      :ARG1-of (c8-2 / cause-01
                     :ARG0 (c8-4 / suspicious-02
                                 :ARG0 c8-3
                                 :polarity -)))

# ::snt so the plane crashed at about ft?
# ::tokens ["so", "the", "plane", "crashed", "at", "about", "ft", "?"]
# ::lemmas ["so", "the", "plane", "crash", "at", "about", "ft", "?"]
(c9-4 / crash-01
      :polarity (c9-5 / amr-unknown)
      :ARG1 (c9-2 / plane)
      :degree (c9-1 / about
                    :op1 (c9-3 / distance-quantity
                               :unit (c9-0 / foot)
                               :quant 1)))

# ::snt though finding the cause cause save many more
# ::tokens ["though", "finding", "the", "cause", "cause", "save", "many", "more"]
# ::lemmas ["though", "find", "the", "cause", "cause", "save", "many", "more"]
(c10-0 / have-concession-91
       :ARG2 (c10-6 / save-02
                    :ARG0 (c10-1 / you)
                    :ARG1 (c10-7 / thing
                                 :quant (c10-3 / more
                                               :quant (c10-4 / many)))
                    :concession (c10-2 / find-01
                                       :ARG1 (c10-5 / cause-01))
                    :mode imperative))

# ::snt you can. kts was the last recorded speed of the aircraft
# ::tokens ["you", "can", ".", "kts", "was", "the", "last", "recorded", "speed", "of", "the", "aircraft"]
# ::lemmas ["you", "can", ".", "kts", "be", "the", "last", "recorded", "speed", "of", "the", "aircraft"]
(c11-2 / multi-sentence
       :snt1 (c11-4 / possible-01
                    :ARG1 (c11-5 / do-02
                                 :ARG0 (c11-0 / you)))
       :snt2 (c11-7 / speed
                    :mod (c11-1 / last)
                    :ARG1-of (c11-6 / record-01)
                    :poss (c11-9 / aircraft)
                    :domain (c11-8 / thing
                                   :name (c11-3 / name
                                                :op1 "ts"))))

# ::snt - that's true, unless it started to dive?
# ::tokens ["-", "that", "'s", "true", ",", "unless", "it", "started", "to", "dive", "?"]
# ::lemmas ["-", "that", "be", "true", ",", "unless", "it", "start", "to", "dive", "?"]
(c12-4 / true-01
       :ARG1 (c12-2 / that)
       :polarity (c12-5 / amr-unknown)
       :condition (c12-3 / start-01
                         :ARG0 (c12-0 / it)
                         :ARG1 (c12-1 / dive-01
                                      :ARG0 c12-0)
                         :polarity -))

# ::snt - I guess, only time will tell!!
# ::tokens ["-", "I", "guess", ",", "only", "time", "will", "tell", "!", "!"]
# ::lemmas ["-", "i", "guess", ",", "only", "time", "will", "tell", "!", "!"]
(c13-2 / guess-01
       :ARG0 (c13-1 / i)
       :ARG1 (c13-4 / tell-01
                    :ARG0 (c13-3 / time)
                    :mod (c13-0 / only)))

# ::snt it wouldn't do that unless the captain (who would of had to be conscious) did it himself
# ::tokens ["it", "would", "n't", "do", "that", "unless", "the", "captain", "(", "who", "would", "of", "had", "to", "be", "conscious", ")", "did", "it", "himself"]
# ::lemmas ["it", "would", "not", "do", "that", "unless", "the", "captain", "(", "who", "would", "of", "have", "to", "be", "conscious", ")", "do", "it", "himself"]
(c14-5 / do-02
       :ARG0 (c14-3 / it)
       :ARG1 (c14-8 / that)
       :condition (c14-1 / do-02
                         :ARG0 (c14-4 / person
                                      :ARG0-of (c14-0 / have-org-role-91
                                                      :ARG2 (c14-6 / captain))
                                      :ARG1-of (c14-2 / obligate-01
                                                      :ARG2 (c14-7 / conscious
                                                                   :domain c14-4)))
                         :ARG1 c14-8)
       :polarity -)

# ::snt There are many sources of failure. However speculating won't bring back those who died.
# ::tokens ["There", "are", "many", "sources", "of", "failure", ".", "However", "speculating", "wo", "n't", "bring", "back", "those", "who", "died", "."]
# ::lemmas ["there", "be", "many", "source", "of", "failure", ".", "however", "speculate", "will", "not", "bring", "back", "those", "who", "die", "."]
(c15-1 / multi-sentence
       :snt1 (c15-9 / source-02
                    :ARG1 (c15-0 / fail-01)
                    :quant (c15-4 / many))
       :snt2 (c15-6 / contrast-01
                    :ARG2 (c15-2 / bring-01
                                 :ARG0 (c15-3 / speculate-01)
                                 :ARG1 (c15-5 / person
                                              :ARG1-of (c15-7 / die-01))
                                 :direction (c15-8 / back)
                                 :polarity -)))

# ::snt The really scary thing -as in all plane crashes- is that they fell during close to ten minutes
# ::tokens ["The", "really", "scary", "thing", "-as", "in", "all", "plane", "crashes-", "is", "that", "they", "fell", "during", "close", "to", "ten", "minutes"]
# ::lemmas ["the", "really", "scary", "thing", "-as", "in", "all", "plane", "crashes-", "be", "that", "they", "fall", "during", "close", "to", "ten", "minutes"]
(c16-7 / scary-03
       :ARG0 (c16-0 / fall-01
                    :ARG1 (c16-8 / they)
                    :time (c16-4 / crash-01
                                 :ARG1 (c16-2 / plane)
                                 :mod (c16-9 / all))
                    :duration (c16-3 / close-to
                                     :op1 (c16-6 / temporal-quantity
                                                 :unit (c16-1 / minute)
                                                 :quant 10)))
       :degree (c16-5 / really))

# ::snt something caused him to descend.
# ::tokens ["something", "caused", "him", "to", "descend", "."]
# ::lemmas ["something", "cause", "he", "to", "descend", "."]
(c17-3 / cause-01
       :ARG0 (c17-0 / something)
       :ARG1 (c17-2 / descend-01
                    :ARG0 (c17-1 / he)))

# ::snt exactly. Yes, speculating won't help but Twitter is a place which allows people to do so
# ::tokens ["exactly", ".", "Yes", ",", "speculating", "wo", "n't", "help", "but", "Twitter", "is", "a", "place", "which", "allows", "people", "to", "do", "so"]
# ::lemmas ["exactly", ".", "yes", ",", "speculating", "will", "not", "help", "but", "Twitter", "be", "a", "place", "which", "allow", "people", "to", "do", "so"]
(c18-1 / multi-sentence
       :snt1 (c18-2 / exact)
       :snt2 (c18-5 / contrast-01
                    :ARG1 (c18-0 / help-01
                                 :ARG0 (c18-6 / speculate-01)
                                 :polarity -)
                    :ARG2 (c18-4 / publication
                                 :name (c18-3 / name
                                              :op1 "Twitter")
                                 :domain (c18-7 / place
                                                :ARG0-of (c18-8 / allow-01
                                                                :ARG1 c18-6)))))

# ::snt for the love of god,stop saying "would of",it's "would HAVE" it's driving me mad
# ::tokens ["for", "the", "love", "of", "god", ",", "stop", "saying", "\"", "would", "of\",it", "'s", "\"", "would", "HAVE", "\"", "it", "'s", "driving", "me", "mad"]
# ::lemmas ["for", "the", "love", "of", "god", ",", "stop", "say", "\"", "would", "of\",it", "'s", "\"", "would", "have", "\"", "it", "be", "drive", "i", "mad"]
(c19-6 / cause-01
       :ARG0 (c19-7 / stop-01
                    :ARG0 (c19-1 / you)
                    :ARG1 (c19-3 / say-01
                                 :ARG0 c19-1
                                 :ARG1 (c19-0 / have-polarity-91
                                              :ARG2 -))
                    :mode imperative)
       :ARG1 (c19-5 / drive-02
                    :ARG0 c19-0
                    :ARG1 (c19-4 / i)
                    :ARG2 (c19-2 / mad-04
                                 :ARG0 c19-0
                                 :ARG1 c19-4)))

# ::snt going by that graph, yes. As you know, The Alps are in that area
# ::tokens ["going", "by", "that", "graph", ",", "yes", ".", "As", "you", "know", ",", "The", "Alps", "are", "in", "that", "area"]
# ::lemmas ["go", "by", "that", "graph", ",", "yes", ".", "as", "you", "know", ",", "the", "Alps", "be", "in", "that", "area"]
(c20-1 / multi-sentence
       :snt1 (c20-7 / go-02
                    :path (c20-6 / graph
                                 :mod (c20-9 / that)))
       :snt2 (c20-2 / be-located-at-91
                    :ARG1 (c20-5 / mountain
                                 :name (c20-4 / name
                                              :op1 "Alps"))
                    :ARG2 (c20-10 / area
                                  :mod (c20-8 / that))
                    :ARG1-of (c20-3 / know-01
                                    :ARG0 (c20-0 / you))))

# ::snt and at quite a significant rate too. Would of been very frightening for all onboard
# ::tokens ["and", "at", "quite", "a", "significant", "rate", "too", ".", "Would", "of", "been", "very", "frightening", "for", "all", "onboard"]
# ::lemmas ["and", "at", "quite", "a", "significant", "rate", "too", ".", "would", "of", "be", "very", "frightening", "for", "all", "onboard"]
(c21-1 / multi-sentence
       :snt1 (c21-9 / and
                    :op2 (c21-6 / rate
                                :ARG1-of (c21-7 / significant-02
                                                :degree (c21-2 / quite))
                                :mod (c21-8 / too)))
       :snt2 (c21-0 / frighten-01
                    :ARG0 (c21-3 / all
                                 :location (c21-4 / aboard))
                    :degree (c21-5 / very)))

# ::snt Not sure about altitude of alps in that area but sounds plausible yes.
# ::tokens ["Not", "sure", "about", "altitude", "of", "alps", "in", "that", "area", "but", "sounds", "plausible", "yes", "."]
# ::lemmas ["not", "sure", "about", "altitude", "of", "alp", "in", "that", "area", "but", "sound", "plausible", "yes", "."]
(c22-4 / sure-02
       :ARG1 (c22-6 / altitude
                    :poss (c22-1 / alps)
                    :location (c22-2 / area
                                     :mod (c22-5 / that)))
       :concession-of (c22-0 / sound-01
                             :ARG1 c22-6
                             :ARG2 (c22-3 / plausible))
       :polarity -)

# ::snt - I reckon it was a slow decompression, passengers and crew went hypoxic and died before impact
# ::tokens ["-", "I", "reckon", "it", "was", "a", "slow", "decompression", ",", "passengers", "and", "crew", "went", "hypoxic", "and", "died", "before", "impact"]
# ::lemmas ["-", "i", "reckon", "it", "be", "a", "slow", "decompression", ",", "passenger", "and", "crew", "go", "hypoxic", "and", "die", "before", "impact"]
(c23-3 / multi-sentence
       :snt1 (c23-9 / reckon-01
                    :ARG0 (c23-6 / i)
                    :ARG1 (c23-8 / decompress-01
                                 :ARG1-of (c23-13 / slow-05)
                                 :domain (c23-10 / it)))
       :snt2 (c23-14 / and
                     :op1 (c23-11 / go-08
                                  :ARG1 (c23-5 / and
                                               :op1 (c23-7 / passenger)
                                               :op2 (c23-12 / crew))
                                  :ARG2 (c23-0 / hypoxic))
                     :op2 (c23-1 / die-01
                                 :ARG1 c23-5
                                 :time (c23-4 / before
                                              :op1 (c23-2 / impact-02
                                                          :ARG1 c23-5)))))

# ::snt Yes, this looks like someone was exchanging altitude for speed, as if there was no thrust.
# ::tokens ["Yes", ",", "this", "looks", "like", "someone", "was", "exchanging", "altitude", "for", "speed", ",", "as", "if", "there", "was", "no", "thrust", "."]
# ::lemmas ["yes", ",", "this", "look", "like", "someone", "be", "exchange", "altitude", "for", "speed", ",", "as", "if", "there", "be", "no", "thrust", "."]
(c24-0 / look-02
       :ARG0 (c24-5 / this)
       :ARG1 (c24-1 / exchange-01
                    :ARG0 (c24-4 / someone)
                    :ARG1 (c24-6 / altitude)
                    :ARG3 (c24-2 / speed)
                    :manner (c24-3 / thrust-01
                                   :polarity -)))

# ::snt like its very strange. Drop in altitude didn't lead to an increase of speed.
# ::tokens ["like", "its", "very", "strange", ".", "Drop", "in", "altitude", "did", "n't", "lead", "to", "an", "increase", "of", "speed", "."]
# ::lemmas ["like", "its", "very", "strange", ".", "drop", "in", "altitude", "do", "not", "lead", "to", "an", "increase", "of", "speed", "."]
(c25-1 / multi-sentence
       :snt1 (c25-5 / resemble-01
                    :ARG1 (c25-3 / it)
                    :ARG2 (c25-8 / strange
                                 :degree (c25-4 / very)))
       :snt2 (c25-0 / lead-03
                    :ARG0 (c25-6 / drop-01
                                 :ARG1 (c25-9 / altitude))
                    :ARG2 (c25-7 / increase-01
                                 :ARG1 (c25-2 / speed))
                    :polarity -))

# ::snt Molt heavy la grafica : Here is the speed and altitude graph of from .
# ::tokens ["Molt", "heavy", "la", "grafica", ":", "Here", "is", "the", "speed", "and", "altitude", "graph", "of", "from", "."]
# ::lemmas ["molt", "heavy", "la", "grafica", ":", "here", "be", "the", "speed", "and", "altitude", "graph", "of", "from", "."]
(c26-6 / say-01
       :ARG1 (c26-5 / graph
                    :topic (c26-7 / and
                                  :op1 (c26-1 / speed)
                                  :op2 (c26-2 / altitude))
                    :source (c26-4 / person
                                   :name (c26-3 / name
                                                :op1 "Molt"
                                                :op2 "Heavy"
                                                :op3 "la"
                                                :op4 "Grafica"))
                    :location (c26-0 / here))
       :ARG2 c26-4)

# ::snt was about to say same thing.
# ::tokens ["was", "about", "to", "say", "same", "thing", "."]
# ::lemmas ["be", "about", "to", "say", "same", "thing", "."]
(c27-2 / say-01
       :ARG0 (c27-1 / i)
       :ARG1 (c27-3 / thing
                    :ARG1-of (c27-0 / same-01))
       :time (c27-4 / about-to))

# ::snt above sealevel, yes? It crashed in the Alps..
# ::tokens ["above", "sealevel", ",", "yes", "?", "It", "crashed", "in", "the", "Alps", ".."]
# ::lemmas ["above", "sealevel", ",", "yes", "?", "it", "crash", "in", "the", "Alps", ".."]
(c28-2 / multi-sentence
       :snt1 (c28-0 / yes
                    :location (c28-8 / above
                                     :op1 (c28-6 / mountain
                                                 :name (c28-4 / name
                                                              :op1 "Sealevel"))))
       :snt2 (c28-7 / crash-01
                    :ARG1 (c28-3 / it)
                    :location (c28-1 / mountain
                                     :name (c28-5 / name
                                                  :op1 "Alps"))))
