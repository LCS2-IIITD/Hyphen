# ::snt One million isn't enough!
# ::tokens ["One", "million", "is", "n't", "enough", "!"]
# ::lemmas ["One", "million", "be", "not", "enough", "!"]
(c1-0 / have-quant-91
      :ARG3 (c1-1 / enough)
      :polarity -
      :ARG1 1000000)

# ::snt do you know how to get them? the site is errr...down
# ::tokens ["do", "you", "know", "how", "to", "get", "them", "?", "the", "site", "is", "errr", "...", "down"]
# ::lemmas ["do", "you", "know", "how", "to", "get", "they", "?", "the", "site", "be", "errr", "...", "down"]
(c2-1 / multi-sentence
      :snt1 (c2-2 / know-01
                  :ARG0 (c2-0 / you)
                  :ARG1 (c2-7 / thing
                              :manner-of (c2-4 / get-01
                                               :ARG0 c2-0
                                               :ARG1 (c2-5 / they)))
                  :polarity (c2-8 / amr-unknown))
      :snt2 (c2-3 / down-03
                  :ARG1 (c2-6 / site)))

# ::snt we are free..we are Christian..we are not AFRAID!...I am happy
# ::tokens ["we", "are", "free", "..", "we", "are", "Christian", "..", "we", "are", "not", "AFRAID!", "...", "I", "am", "happy"]
# ::lemmas ["we", "be", "free", "..", "we", "be", "Christian", "..", "we", "be", "not", "AFRAID!", "...", "i", "be", "happy"]
(c3-7 / and
      :op1 (c3-2 / free-04
                 :ARG1 (c3-1 / we))
      :op2 (c3-6 / religious-group
                 :name (c3-5 / name
                             :op1 "Christian")
                 :domain c3-1)
      :op3 (c3-3 / military
                 :name c3-5
                 :polarity -
                 :op1 "AFRAID")
      :domain c3-1
      :op4 (c3-0 / happy-01
                 :ARG1 (c3-4 / i)))

# ::snt Unblock me you shister! You had free electric for your horses! Then you block me. Slimy twat
# ::tokens ["Unblock", "me", "you", "shister", "!", "You", "had", "free", "electric", "for", "your", "horses", "!", "Then", "you", "block", "me", ".", "Slimy", "twat"]
# ::lemmas ["unblock", "i", "you", "shister", "!", "you", "have", "free", "electric", "for", "your", "horse", "!", "then", "you", "block", "i", ".", "slimy", "twat"]
(c4-3 / multi-sentence
      :snt1 (c4-14 / say-01
                   :ARG0 (c4-10 / i)
                   :ARG1 (c4-6 / block-01
                               :ARG0 (c4-1 / you
                                           :mod (c4-8 / shister))
                               :ARG1 (c4-12 / i)
                               :mode imperative
                               :polarity -)
                   :ARG2 c4-1)
      :snt2 (c4-0 / have-03
                  :ARG0 (c4-13 / you)
                  :ARG1 (c4-9 / electric
                              :ARG1-of (c4-2 / free-03)
                              :beneficiary (c4-17 / horse
                                                  :poss c4-13)))
      :snt3 (c4-11 / block-01
                   :ARG0 (c4-7 / you
                               :mod (c4-16 / twat
                                           :mod (c4-4 / slimy)))
                   :ARG1 (c4-5 / i)
                   :time (c4-15 / then)))

# ::snt Is it available online?
# ::tokens ["Is", "it", "available", "online", "?"]
# ::lemmas ["be", "it", "available", "online", "?"]
(c5-3 / available-02
      :ARG2 (c5-2 / it)
      :polarity (c5-1 / amr-unknown)
      :location (c5-0 / online))

# ::snt this reaction
# ::tokens ["this", "reaction"]
# ::lemmas ["this", "reaction"]
(c6-0 / react-01
      :mod (c6-1 / this))

# ::snt True dat.
# ::tokens ["True", "dat", "."]
# ::lemmas ["true", "dat", "."]
(c7-0 / true-01
      :ARG1 (c7-1 / that))

# ::snt An extremist is beyond colour, class or creed. They are vermin though. Stamp them out!!!
# ::tokens ["An", "extremist", "is", "beyond", "colour", ",", "class", "or", "creed", ".", "They", "are", "vermin", "though", ".", "Stamp", "them", "out", "!", "!", "!"]
# ::lemmas ["an", "extremist", "be", "beyond", "colour", ",", "class", "or", "creed", ".", "they", "be", "vermin", "though", ".", "stamp", "they", "out", "!", "!", "!"]
(c8-2 / multi-sentence
      :snt1 (c8-3 / beyond
                  :op1 (c8-4 / or
                             :op1 (c8-8 / color)
                             :op2 (c8-7 / class)
                             :op3 (c8-9 / creed))
                  :domain (c8-5 / extremist))
      :snt2 (c8-6 / vermin
                  :domain (c8-10 / they)
                  :ARG1-of (c8-0 / have-concession-91))
      :snt3 (c8-11 / stamp-out-05
                   :ARG0 (c8-1 / you)
                   :ARG1 c8-10
                   :mode imperative))

# ::snt Cant read French, but Ill be buying one of those.
# ::tokens ["Ca", "nt", "read", "French", ",", "but", "Ill", "be", "buying", "one", "of", "those", "."]
# ::lemmas ["can", "not", "read", "French", ",", "but", "Ill", "be", "buy", "one", "of", "those", "."]
(c9-7 / contrast-01
      :ARG1 (c9-5 / possible-01
                  :ARG1 (c9-6 / read-01
                              :ARG0 (c9-3 / i)
                              :ARG3 (c9-0 / language
                                          :name (c9-4 / name
                                                      :op1 "French"))))
      :ARG2 (c9-1 / buy-01
                  :ARG0 c9-3
                  :ARG1 (c9-2 / one
                              :ARG1-of (c9-8 / include-91
                                             :ARG2 (c9-9 / that)))))

# ::snt they should find a distributor that can get it into newsagents across the world. Will sell many millions.
# ::tokens ["they", "should", "find", "a", "distributor", "that", "can", "get", "it", "into", "newsagents", "across", "the", "world", ".", "Will", "sell", "many", "millions", "."]
# ::lemmas ["they", "should", "find", "a", "distributor", "that", "can", "get", "it", "into", "newsagent", "across", "the", "world", ".", "will", "sell", "many", "millions", "."]
(c10-3 / multi-sentence
       :snt1 (c10-8 / recommend-01
                    :ARG1 (c10-2 / find-01
                                 :ARG0 (c10-13 / they)
                                 :ARG1 (c10-7 / person
                                              :ARG0-of (c10-9 / distribute-01)
                                              :ARG0-of (c10-10 / get-05
                                                               :ARG1 (c10-5 / it)
                                                               :ARG2 (c10-6 / newsagent
                                                                            :location (c10-15 / across
                                                                                              :op1 (c10-0 / world)))
                                                               :ARG1-of (c10-14 / possible-01))))
                    :ARG2 c10-13)
       :snt2 (c10-12 / sell-01
                     :ARG1 (c10-11 / many
                                   :op1 (c10-4 / monetary-quantity
                                               :unit (c10-1 / dollar)
                                               :quant 1000000))))

# ::snt How about UK distribution? Although I can't see WH Smiths carrying it
# ::tokens ["How", "about", "UK", "distribution", "?", "Although", "I", "ca", "n't", "see", "WH", "Smiths", "carrying", "it"]
# ::lemmas ["how", "about", "UK", "distribution", "?", "although", "i", "can", "not", "see", "WH", "Smiths", "carry", "it"]
(c11-1 / multi-sentence
       :snt1 (c11-12 / suggest-01
                     :ARG1 (c11-7 / distribute-01
                                  :ARG2 (c11-8 / country
                                               :name (c11-4 / name
                                                            :op1 "UK"))))
       :snt2 (c11-0 / have-concession-91
                    :ARG2 (c11-6 / possible-01
                                 :ARG1 (c11-2 / see-01
                                              :ARG0 (c11-3 / i)
                                              :ARG1 (c11-9 / carry-01
                                                           :ARG0 (c11-11 / company
                                                                         :name (c11-5 / name
                                                                                      :op1 "WH"
                                                                                      :op2 "Smiths"))
                                                           :ARG1 (c11-10 / it)))
                                 :polarity -)))

# ::snt Their normal run is just k?! More see the big screen at Old Trafford every week. Just hammers home the lunacy.
# ::tokens ["Their", "normal", "run", "is", "just", "k", "?", "!", "More", "see", "the", "big", "screen", "at", "Old", "Trafford", "every", "week", ".", "Just", "hammers", "home", "the", "lunacy", "."]
# ::lemmas ["their", "normal", "run", "be", "just", "k", "?", "!", "more", "see", "the", "big", "screen", "at", "Old", "Trafford", "every", "week", ".", "just", "hammer", "home", "the", "lunacy", "."]
(c12-1 / multi-sentence
       :snt1 (c12-13 / run-13
                     :ARG0 (c12-18 / they)
                     :ARG1-of (c12-11 / normal-02)
                     :mod (c12-0 / just)
                     :polarity (c12-6 / amr-unknown))
       :snt2 (c12-3 / see-01
                    :ARG0 (c12-12 / more)
                    :ARG1 (c12-10 / screen
                                  :mod (c12-9 / big)
                                  :location (c12-15 / sports-facility
                                                    :name (c12-16 / name
                                                                  :op1 "Old"
                                                                  :op2 "M Trafford")))
                    :frequency (c12-2 / rate-entity-91
                                      :ARG3 (c12-17 / temporal-quantity
                                                    :unit (c12-14 / week)
                                                    :quant 1)))
       :snt3 (c12-7 / hammer-01
                    :ARG1 (c12-8 / lunacy)
                    :mod (c12-4 / just)
                    :location (c12-5 / home)))

# ::snt I knew they were going to turn that into a PR campaign, PFFF journos right what else?
# ::tokens ["I", "knew", "they", "were", "going", "to", "turn", "that", "into", "a", "PR", "campaign", ",", "PFFF", "journos", "right", "what", "else", "?"]
# ::lemmas ["i", "know", "they", "be", "go", "to", "turn", "that", "into", "a", "pr", "campaign", ",", "PFFF", "journo", "right", "what", "else", "?"]
(c13-14 / and
        :op1 (c13-5 / know-01
                    :ARG0 (c13-4 / i)
                    :ARG1 (c13-12 / turn-02
                                  :ARG0 (c13-11 / they)
                                  :ARG1 (c13-7 / that)
                                  :ARG2 (c13-10 / campaign-01
                                                :ARG1 (c13-8 / public-02))))
        :op2 (c13-9 / right-06
                    :ARG1 (c13-3 / amr-unknown
                                 :mod (c13-2 / else))
                    :ARG2 (c13-0 / journalist
                                 :ARG0-of (c13-1 / have-org-role-91
                                                 :ARG1 (c13-13 / publication
                                                               :name (c13-6 / name
                                                                            :op1 "PFFF"))))))

# ::snt If we had ridiculed Islamism more we might have avoided this Jihadi-Cool youth Islamism
# ::tokens ["If", "we", "had", "ridiculed", "Islamism", "more", "we", "might", "have", "avoided", "this", "Jihadi", "-", "Cool", "youth", "Islamism"]
# ::lemmas ["if", "we", "have", "ridicule", "islamism", "more", "we", "might", "have", "avoid", "this", "Jihadi", "-", "Cool", "youth", "islamism"]
(c14-7 / possible-01
       :ARG1 (c14-11 / avoid-01
                     :ARG0 (c14-1 / we)
                     :ARG1 (c14-8 / religious-group
                                  :name (c14-6 / name
                                               :op1 "Islamism")
                                  :mod (c14-2 / youth
                                              :ARG1-of (c14-9 / cool-04
                                                              :mod (c14-0 / jihadi)))
                                  :mod (c14-10 / this)))
       :condition (c14-5 / ridicule-01
                         :ARG0 c14-1
                         :ARG1 c14-8
                         :ARG1-of (c14-3 / have-quant-91
                                         :ARG3 (c14-4 / more))))

# ::snt The Nick Drake of magazines. People only get interested when it's too late. That's sad.
# ::tokens ["The", "Nick", "Drake", "of", "magazines", ".", "People", "only", "get", "interested", "when", "it", "'s", "too", "late", ".", "That", "'s", "sad", "."]
# ::lemmas ["The", "Nick", "Drake", "of", "magazine", ".", "people", "only", "get", "interested", "when", "it", "be", "too", "late", ".", "that", "be", "sad", "."]
(c15-2 / multi-sentence
       :snt1 (c15-6 / person
                    :name (c15-5 / name
                                 :op1 "Nick"
                                 :op2 "Drake")
                    :source (c15-7 / magazine))
       :snt2 (c15-4 / interest-01
                    :ARG1 (c15-12 / person)
                    :time (c15-0 / have-degree-91
                                 :ARG1 (c15-8 / it)
                                 :ARG2 (c15-1 / late)
                                 :ARG3 (c15-11 / too))
                    :mod (c15-3 / only))
       :snt3 (c15-10 / sad-02
                     :ARG1 (c15-9 / that)))

# ::snt : Charlie Hebdo magazine is planning a print-run of its next issue of a million copies, not usual k.
# ::tokens [":", "Charlie", "Hebdo", "magazine", "is", "planning", "a", "print", "-", "run", "of", "its", "next", "issue", "of", "a", "million", "copies", ",", "not", "usual", "k."]
# ::lemmas [":", "Charlie", "Hebdo", "magazine", "be", "plan", "a", "print", "-", "run", "of", "its", "next", "issue", "of", "a", "million", "copy", ",", "not", "usual", "k."]
(c16-5 / plan-01
       :ARG0 (c16-0 / magazine
                    :name (c16-3 / name
                                 :op1 "Charlie"
                                 :op2 " Hebdo"))
       :ARG1 (c16-6 / run-09
                    :ARG1 (c16-2 / issue
                                 :mod (c16-4 / next)
                                 :poss c16-0
                                 :consist-of (c16-8 / thing
                                                    :ARG2-of (c16-7 / copy-01)
                                                    :quant 1000000))
                    :medium (c16-9 / print-01))
       :mod (c16-1 / usual
                   :polarity -))
