# ::snt .......
# ::tokens ["......."]
# ::lemmas ["......."]
(c1-0 / amr-empty)

# ::snt what does this have to do with her. Is anyone concerned about Queens Park?
# ::tokens ["what", "does", "this", "have", "to", "do", "with", "her", ".", "Is", "anyone", "concerned", "about", "Queens", "Park", "?"]
# ::lemmas ["what", "do", "this", "have", "to", "do", "with", "she", ".", "be", "anyone", "concerned", "about", "Queens", "Park", "?"]
(c2-1 / multi-sentence
      :snt1 (c2-0 / have-to-do-with-04
                  :ARG0 (c2-8 / this)
                  :ARG1 (c2-7 / she)
                  :ARG2 (c2-9 / amr-unknown))
      :snt2 (c2-6 / concern-01
                  :ARG0 (c2-2 / anyone)
                  :ARG1 (c2-5 / park
                              :name (c2-3 / name
                                          :op1 "Queens"
                                          :op2 "Park"))
                  :polarity (c2-4 / amr-unknown)))

# ::snt Huh? Piss off with US crap please.
# ::tokens ["Huh", "?", "Piss", "off", "with", "US", "crap", "please", "."]
# ::lemmas ["huh", "?", "piss", "off", "with", "US", "crap", "please", "."]
(c3-1 / multi-sentence
      :snt1 (c3-7 / amr-unknown)
      :snt2 (c3-3 / piss-off-02
                  :ARG0 (c3-0 / you)
                  :ARG2 (c3-6 / thing
                              :mod (c3-5 / country
                                         :name (c3-2 / name
                                                     :op1 "US"))
                              :ARG1-of (c3-4 / crap-01))
                  :mode imperative
                  :polite +))

# ::snt don't normally agree witj Wynne but this time I do.
# ::tokens ["do", "n't", "normally", "agree", "witj", "Wynne", "but", "this", "time", "I", "do", "."]
# ::lemmas ["do", "not", "normally", "agree", "witj", "Wynne", "but", "this", "time", "i", "do", "."]
(c4-5 / contrast-01
      :ARG1 (c4-8 / agree-01
                  :ARG0 (c4-1 / i)
                  :ARG2 (c4-4 / person
                              :name (c4-2 / name
                                          :op1 "Wynne"))
                  :ARG1-of (c4-3 / normal-02)
                  :polarity -)
      :ARG2 (c4-0 / agree-01
                  :ARG0 c4-1
                  :time (c4-7 / time
                              :mod (c4-6 / this))))

# ::snt hey These are LIFE/death situations you can't come up W/ more INTELLIGENCE comment then
# ::tokens ["hey", "These", "are", "LIFE", "/", "death", "situations", "you", "ca", "n't", "come", "up", "W/", "more", "INTELLIGENCE", "comment", "then"]
# ::lemmas ["hey", "these", "be", "LIFE", "/", "death", "situation", "you", "can", "not", "come", "up", "w/", "more", "INTELLIGENCE", "comment", "then"]
(c5-6 / possible-01
      :ARG1 (c5-8 / come-up-11
                  :ARG0 (c5-1 / you)
                  :ARG1 (c5-4 / or
                              :op1 (c5-11 / situation
                                          :mod (c5-2 / life))
                              :op2 (c5-5 / situation
                                         :mod (c5-7 / die-01))
                              :domain (c5-13 / this)))
      :mod (c5-0 / hey
                 :mode expressive)
      :ARG1-of (c5-9 / cause-01
                     :ARG0 (c5-10 / comment-01
                                  :ARG1-of (c5-14 / have-degree-91
                                                  :ARG2 (c5-12 / accurate)
                                                  :ARG3 (c5-3 / more))))
      :polarity -)

# ::snt AS usual can't even get the RT BORDER correct does he actually READ or just take CUE from
# ::tokens ["AS", "usual", "ca", "n't", "even", "get", "the", "RT", "BORDER", "correct", "does", "he", "actually", "READ", "or", "just", "take", "CUE", "from"]
# ::lemmas ["as", "usual", "can", "not", "even", "get", "the", "RT", "BORDER", "correct", "do", "he", "actually", "read", "or", "just", "take", "CUE", "from"]
(c6-2 / or
      :op1 (c6-8 / read-01
                 :ARG0 (c6-0 / he)
                 :ARG1 (c6-7 / publication
                             :name (c6-5 / name
                                         :op1 "RT"
                                         :op2 "BORDER"))
                 :ARG1-of (c6-14 / actual-02))
      :op2 (c6-12 / take-01
                  :ARG0 c6-0
                  :ARG1 (c6-9 / clue)
                  :ARG2 c6-7
                  :mod (c6-1 / just))
      :polarity (c6-4 / amr-unknown)
      :condition (c6-13 / possible-01
                        :ARG1 (c6-10 / get-04
                                     :ARG0 c6-0
                                     :ARG1 (c6-11 / correct-02
                                                  :ARG1 c6-7)
                                     :mod (c6-3 / even))
                        :mod (c6-6 / as-usual)
                        :polarity -))

# ::snt Yes - then they win. Thank you.
# ::tokens ["Yes", "-", "then", "they", "win", ".", "Thank", "you", "."]
# ::lemmas ["yes", "-", "then", "they", "win", ".", "thank", "you", "."]
(c7-2 / multi-sentence
      :snt1 (c7-0 / win-01
                  :ARG0 (c7-6 / they)
                  :time (c7-5 / then))
      :snt2 (c7-4 / thank-01
                  :ARG0 (c7-3 / i)
                  :ARG1 (c7-1 / you)))

# ::snt : We refuse to be silenced': Ontario premier :// this makes me proud to be a Canadian
# ::tokens [":", "We", "refuse", "to", "be", "silenced", "'", ":", "Ontario", "premier", ":", "//", "this", "makes", "me", "proud", "to", "be", "a", "Canadian"]
# ::lemmas [":", "we", "refuse", "to", "be", "silence", "'", ":", "Ontario", "premier", ":", "//", "this", "make", "i", "proud", "to", "be", "a", "Canadian"]
(c8-9 / say-01
      :ARG0 (c8-7 / person
                  :ARG0-of (c8-0 / have-org-role-91
                                 :ARG1 (c8-12 / province
                                              :name (c8-5 / name
                                                          :op1 "Ontario"))
                                 :ARG2 (c8-2 / premier)))
      :ARG1 (c8-1 / make-02
                  :ARG0 (c8-11 / this)
                  :ARG1 (c8-10 / pride-01
                               :ARG0 (c8-4 / i)
                               :ARG1 (c8-3 / person
                                           :mod (c8-8 / country
                                                      :name (c8-6 / name
                                                                  :op1 "Canada"))
                                           :domain c8-4))))

# ::snt Thanks for sharing. See your update on my
# ::tokens ["Thanks", "for", "sharing", ".", "See", "your", "update", "on", "my"]
# ::lemmas ["thank", "for", "sharing", ".", "see", "your", "update", "on", "my"]
(c9-1 / multi-sentence
      :snt1 (c9-8 / thank-01
                  :ARG0 (c9-4 / i)
                  :ARG1 (c9-0 / you)
                  :ARG2 (c9-7 / share-01
                              :ARG0 c9-0))
      :snt2 (c9-3 / see-01
                  :ARG0 (c9-6 / you)
                  :ARG1 (c9-2 / update-02
                              :ARG0 c9-6
                              :ARG1 (c9-5 / i))
                  :mode imperative))

# ::snt :Yup I have to say, not aligned with Ms Wynne politically, but she does say out loud what I'm thinking!!
# ::tokens [":", "Yup", "I", "have", "to", "say", ",", "not", "aligned", "with", "Ms", "Wynne", "politically", ",", "but", "she", "does", "say", "out", "loud", "what", "I", "'m", "thinking", "!", "!"]
# ::lemmas [":", "yup", "i", "have", "to", "say", ",", "not", "align", "with", "Ms", "Wynne", "politically", ",", "but", "she", "do", "say", "out", "loud", "what", "i", "be", "think", "!", "!"]
(c11-6 / contrast-01
       :ARG1 (c11-0 / obligate-01
                    :ARG1 (c11-3 / i)
                    :ARG2 (c11-8 / say-01
                                 :ARG0 c11-3
                                 :ARG1 (c11-11 / align-01
                                               :ARG2 (c11-5 / person
                                                            :name (c11-4 / name
                                                                         :op1 "Ms"
                                                                         :op2 "Wynne"))
                                               :manner (c11-10 / politics)
                                               :polarity -)))
       :ARG2 (c11-1 / say-01
                    :ARG0 c11-5
                    :ARG1 (c11-9 / thing
                                 :ARG1-of (c11-7 / think-01
                                                 :ARG0 c11-3))
                    :manner (c11-2 / aloud)))

# ::snt For once, I fully agree with Premier Wynne's pronouncements. Bravo to her and all Parties!
# ::tokens ["For", "once", ",", "I", "fully", "agree", "with", "Premier", "Wynne", "'s", "pronouncements", ".", "Bravo", "to", "her", "and", "all", "Parties", "!"]
# ::lemmas ["for", "once", ",", "i", "fully", "agree", "with", "Premier", "Wynne", "'s", "pronouncement", ".", "Bravo", "to", "she", "and", "all", "party", "!"]
(c12-2 / multi-sentence
       :snt1 (c12-14 / agree-01
                     :ARG0 (c12-6 / i)
                     :ARG1 (c12-10 / pronounce-01
                                   :ARG0 (c12-13 / person
                                                 :name (c12-8 / name
                                                              :op1 "Wynne")
                                                 :ARG0-of (c12-0 / have-org-role-91
                                                                 :ARG2 (c12-3 / premier))))
                     :degree (c12-1 / full)
                     :mod (c12-7 / for-once))
       :snt2 (c12-4 / Bravo
                    :beneficiary (c12-5 / and
                                        :op1 (c12-11 / she)
                                        :op2 (c12-12 / party
                                                     :mod (c12-9 / all)))
                    :mode expressive))

# ::snt first time i have agreed with anything wynne has to say!
# ::tokens ["first", "time", "i", "have", "agreed", "with", "anything", "wynne", "has", "to", "say", "!"]
# ::lemmas ["first", "time", "i", "have", "agree", "with", "anything", "wynne", "have", "to", "say", "!"]
(c13-6 / agree-01
       :ARG0 (c13-2 / i)
       :ARG1 (c13-1 / anything
                    :ARG1-of (c13-5 / say-01
                                    :ARG0 (c13-4 / person
                                                 :name (c13-3 / name
                                                              :op1 "Wynne"))))
       :ord (c13-0 / ordinal-entity
                   :value 1))
