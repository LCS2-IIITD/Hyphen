# ::snt I believe police have given the go ahead and that's why he's been named.
# ::tokens ["I", "believe", "police", "have", "given", "the", "go", "ahead", "and", "that", "'s", "why", "he", "'s", "been", "named", "."]
# ::lemmas ["i", "believe", "police", "have", "give", "the", "go", "ahead", "and", "that", "be", "why", "he", "be", "be", "name", "."]
(c1-1 / believe-01
      :ARG0 (c1-3 / i)
      :ARG1 (c1-9 / and
                  :op1 (c1-8 / give-01
                             :ARG0 (c1-5 / police)
                             :ARG1 (c1-6 / go-06
                                         :ARG2 (c1-2 / ahead)))
                  :op2 (c1-7 / cause-01
                             :ARG0 c1-8
                             :ARG1 (c1-4 / name-01
                                         :ARG1 (c1-0 / he)))))

# ::snt English isn't the st language of the MSM it's cannibalism.
# ::tokens ["English", "is", "n't", "the", "st", "language", "of", "the", "MSM", "it", "'s", "cannibalism", "."]
# ::lemmas ["English", "be", "not", "the", "st", "language", "of", "the", "MSM", "it", "be", "cannibalism", "."]
(c2-5 / contrast-01
      :ARG1 (c2-0 / language
                  :mod (c2-7 / st)
                  :domain (c2-6 / language
                                :name (c2-1 / name
                                            :op1 "English"))
                  :poss (c2-3 / publication
                              :name (c2-2 / name
                                          :op1 "MSM"))
                  :polarity -)
      :ARG2 (c2-4 / cannibalism
                  :domain c2-6))

# ::snt Police media have said there's no operational reason not to name the gunman. (Before Nine did.)
# ::tokens ["Police", "media", "have", "said", "there", "'s", "no", "operational", "reason", "not", "to", "name", "the", "gunman", ".", "(", "Before", "Nine", "did", ".", ")"]
# ::lemmas ["police", "medium", "have", "say", "there", "be", "no", "operational", "reason", "not", "to", "name", "the", "gunman", ".", "(", "before", "Nine", "do", ".", ")"]
(c3-10 / say-01
       :ARG0 (c3-0 / media
                   :mod (c3-5 / police))
       :ARG1 (c3-6 / reason
                   :ARG0-of (c3-2 / operate-01)
                   :ARG0-of (c3-7 / cause-01
                                  :ARG1 (c3-3 / name-01
                                              :ARG1 (c3-8 / gunman)
                                              :polarity -))
                   :polarity -)
       :time (c3-1 / before
                   :op1 c3-3
                   :ARG0 (c3-9 / broadcast-program
                               :name (c3-4 / name
                                           :op1 "9/11"))))

# ::snt I know, right? What the hell?
# ::tokens ["I", "know", ",", "right", "?", "What", "the", "hell", "?"]
# ::lemmas ["i", "know", ",", "right", "?", "what", "the", "hell", "?"]
(c4-1 / multi-sentence
      :snt1 (c4-4 / know-01
                  :ARG0 (c4-2 / i)
                  :ARG1-of (c4-3 / request-confirmation-91
                                 :ARG2 c4-2))
      :snt2 (c4-5 / amr-unknown
                  :mod (c4-0 / hell
                             :mode expressive)))

# ::snt yep, posted an update. Interesting move by police
# ::tokens ["yep", ",", "posted", "an", "update", ".", "Interesting", "move", "by", "police"]
# ::lemmas ["yep", ",", "post", "an", "update", ".", "interesting", "move", "by", "police"]
(c5-1 / multi-sentence
      :snt1 (c5-4 / post-01
                  :ARG1 (c5-2 / update-02)
                  :mod (c5-0 / yep))
      :snt2 (c5-5 / move-02
                  :ARG0 (c5-6 / police)
                  :ARG1-of (c5-3 / interest-01)))

# ::snt Gag order was lifted.
# ::tokens ["Gag", "order", "was", "lifted", "."]
# ::lemmas ["gag", "order", "be", "lift", "."]
(c6-1 / lift-01
      :ARG1 (c6-0 / order-01
                  :mod (c6-2 / gag)))

# ::snt Skynews reporting it is still in place
# ::tokens ["Skynews", "reporting", "it", "is", "still", "in", "place"]
# ::lemmas ["skynew", "report", "it", "be", "still", "in", "place"]
(c7-3 / report-01
      :ARG0 (c7-2 / publication
                  :name (c7-1 / name
                              :op1 "Skynews"))
      :ARG1 (c7-0 / in-place
                  :domain (c7-4 / it)
                  :mod (c7-5 / still)))

# ::snt lol
# ::tokens ["lol"]
# ::lemmas ["lol"]
(c8-0 / laugh-01
      :manner (c8-1 / loud)
      :mode expressive)

# ::snt uhh they decided it was ok now..
# ::tokens ["uhh", "they", "decided", "it", "was", "ok", "now", ".."]
# ::lemmas ["uhh", "they", "decide", "it", "be", "ok", "now", ".."]
(c9-4 / decide-01
      :ARG0 (c9-5 / they)
      :ARG1 (c9-1 / okay-04
                  :ARG1 (c9-2 / it))
      :mod (c9-0 / uhh
                 :mode expressive)
      :time (c9-3 / now))

# ::snt It's all about selling news, no matter the potential cost to lives
# ::tokens ["It", "'s", "all", "about", "selling", "news", ",", "no", "matter", "the", "potential", "cost", "to", "lives"]
# ::lemmas ["it", "be", "all", "about", "sell", "news", ",", "no", "matter", "the", "potential", "cost", "to", "life"]
(c10-5 / concern-02
       :ARG0 (c10-1 / it)
       :ARG1 (c10-7 / sell-01
                    :ARG1 (c10-2 / news))
       :degree (c10-8 / all)
       :ARG1-of (c10-4 / regardless-91
                       :ARG2 (c10-6 / cost-01
                                    :ARG2 (c10-0 / live-01)
                                    :ARG3 c10-7
                                    :mod (c10-3 / potential))))

# ::snt RT Nine News says senior police gave them the go-ahead to name suspect in
# ::tokens ["RT", "Nine", "News", "says", "senior", "police", "gave", "them", "the", "go", "-", "ahead", "to", "name", "suspect", "in"]
# ::lemmas ["RT", "Nine", "News", "say", "senior", "police", "give", "they", "the", "go", "-", "ahead", "to", "name", "suspect", "in"]
(c11-8 / say-01
       :ARG0 (c11-5 / publication
                    :name (c11-3 / name
                                 :op1 "RT"
                                 :op2 "Nine"
                                 :op3 "News"))
       :ARG1 (c11-7 / give-01
                    :ARG0 (c11-9 / police
                                 :mod (c11-2 / senior))
                    :ARG1 (c11-6 / go-ahead-19
                                 :ARG1 c11-9
                                 :ARG2 (c11-4 / name-01
                                              :ARG0 c11-9
                                              :ARG1 (c11-1 / person
                                                           :ARG2-of (c11-0 / suspect-01))))
                    :ARG2 c11-9))

# ::snt I never had respect for &amp; they are scum reporters... Weather is ok though
# ::tokens ["I", "never", "had", "respect", "for", "&", "amp", ";", "they", "are", "scum", "reporters", "...", "Weather", "is", "ok", "though"]
# ::lemmas ["i", "never", "have", "respect", "for", "&", "amp", ";", "they", "be", "scum", "reporter", "...", "weather", "be", "ok", "though"]
(c12-2 / multi-sentence
       :snt1 (c12-9 / respect-01
                    :ARG0 (c12-5 / i)
                    :ARG1 (c12-12 / and
                                  :op1 (c12-8 / person
                                              :name (c12-7 / name
                                                           :op1 "&"
                                                           :op2 "amp"))
                                  :time (c12-4 / ever))
                    :snt2 (c12-11 / person
                                  :ARG0-of (c12-6 / report-01)
                                  :mod (c12-10 / scum)
                                  :domain c12-12)
                    :snt3 (c12-3 / okay-04
                                 :ARG1 (c12-1 / weather)
                                 :ARG1-of (c12-0 / have-concession-91))
                    :polarity -))

# ::snt Media did well to hold out hours... Lol
# ::tokens ["Media", "did", "well", "to", "hold", "out", "hours", "...", "Lol"]
# ::lemmas ["medium", "do", "well", "to", "hold", "out", "hours", "...", "Lol"]
(c13-9 / and
       :op1 (c13-1 / well-09
                   :ARG1 (c13-0 / hold-out-09
                                :ARG0 (c13-3 / media)
                                :ARG1 (c13-6 / multiple
                                             :op1 (c13-8 / temporal-quantity
                                                         :unit (c13-2 / hour)
                                                         :quant 1))))
       :op2 (c13-4 / laugh-01
                   :ARG0 (c13-5 / i)
                   :manner (c13-7 / loud)
                   :mode expressive))

# ::snt no need to be sorry mate!
# ::tokens ["no", "need", "to", "be", "sorry", "mate", "!"]
# ::lemmas ["no", "need", "to", "be", "sorry", "mate", "!"]
(c14-4 / say-01
       :ARG0 (c14-2 / i)
       :ARG1 (c14-3 / need-01
                    :ARG0 c14-2
                    :ARG1 (c14-1 / sorry-01
                                 :ARG1 c14-2)
                    :polarity -)
       :ARG2 (c14-0 / mate))

# ::snt The strategy changed.
# ::tokens ["The", "strategy", "changed", "."]
# ::lemmas ["the", "strategy", "change", "."]
(c15-1 / change-01
       :ARG1 (c15-0 / strategy))

# ::snt Ha sorry
# ::tokens ["Ha", "sorry"]
# ::lemmas ["ha", "sorry"]
(c16-0 / sorry-01
       :mod (c16-1 / ha))

# ::snt Yeah mate I'm the same. Sky streets ahead of the public's. Sky has nice weather too
# ::tokens ["Yeah", "mate", "I", "'m", "the", "same", ".", "Sky", "streets", "ahead", "of", "the", "public", "'s", ".", "Sky", "has", "nice", "weather", "too"]
# ::lemmas ["yeah", "mate", "i", "be", "the", "same", ".", "sky", "street", "ahead", "of", "the", "public", "'s", ".", "Sky", "have", "nice", "weather", "too"]
(c17-4 / multi-sentence
       :snt1 (c17-11 / same-01
                     :ARG1 (c17-7 / i)
                     :ARG2 (c17-9 / mate))
       :snt2 (c17-6 / street
                    :mod (c17-3 / sky)
                    :location (c17-13 / ahead
                                      :op1 (c17-5 / street
                                                  :mod (c17-10 / public))))
       :snt3 (c17-0 / have-03
                    :ARG0 (c17-1 / Sky)
                    :ARG1 (c17-2 / weather
                                 :ARG1-of (c17-8 / nice-01))
                    :mod (c17-12 / too)))

# ::snt I need to find a cafe!
# ::tokens ["I", "need", "to", "find", "a", "cafe", "!"]
# ::lemmas ["i", "need", "to", "find", "a", "cafe", "!"]
(c18-0 / need-01
       :ARG0 (c18-3 / i)
       :ARG1 (c18-1 / find-01
                    :ARG0 c18-3
                    :ARG1 (c18-2 / cafe))
       :mode imperative)

# ::snt yep, posted this already mate
# ::tokens ["yep", ",", "posted", "this", "already", "mate"]
# ::lemmas ["yep", ",", "post", "this", "already", "mate"]
(c19-4 / say-01
       :ARG0 (c19-2 / i)
       :ARG1 (c19-3 / post-01
                    :ARG0 (c19-1 / mate)
                    :ARG1 (c19-5 / this)
                    :time (c19-6 / already)
                    :mod (c19-0 / yep
                                :mode expressive))
       :ARG2 c19-1)

# ::snt They only recently allowed the media to release it, as there were random names showing up putting unrelated people in danger.
# ::tokens ["They", "only", "recently", "allowed", "the", "media", "to", "release", "it", ",", "as", "there", "were", "random", "names", "showing", "up", "putting", "unrelated", "people", "in", "danger", "."]
# ::lemmas ["they", "only", "recently", "allow", "the", "medium", "to", "release", "it", ",", "as", "there", "be", "random", "name", "show", "up", "put", "unrelated", "people", "in", "danger", "."]
(c20-14 / allow-01
        :ARG0 (c20-12 / they)
        :ARG1 (c20-8 / release-01
                     :ARG0 (c20-1 / media)
                     :ARG1 (c20-4 / it))
        :time (c20-5 / recent
                     :mod (c20-2 / only))
        :ARG1-of (c20-9 / cause-01
                        :ARG0 (c20-11 / show-up-02
                                      :ARG1 (c20-6 / name
                                                   :mod (c20-3 / random))
                                      :ARG0-of (c20-7 / put-01
                                                      :ARG1 (c20-13 / person
                                                                    :ARG1-of (c20-0 / relate-01
                                                                                    :polarity -))
                                                      :ARG2 (c20-10 / danger)))))

# ::snt IMO, has done a really good job. But , and have been likd circling vultures. Lost a lot of respect for them.
# ::tokens ["IMO", ",", "has", "done", "a", "really", "good", "job", ".", "But", ",", "and", "have", "been", "likd", "circling", "vultures", ".", "Lost", "a", "lot", "of", "respect", "for", "them", "."]
# ::lemmas ["imo", ",", "have", "do", "a", "really", "good", "job", ".", "but", ",", "and", "have", "be", "likd", "circle", "vulture", ".", "lose", "a", "lot", "of", "respect", "for", "they", "."]
(c21-2 / multi-sentence
       :snt1 (c21-3 / opine-01
                    :ARG0 (c21-4 / i)
                    :ARG1 (c21-7 / do-02
                                 :ARG1 (c21-0 / job
                                              :ARG1-of (c21-9 / good-02
                                                              :degree (c21-8 / really)))))
       :snt2 (c21-10 / contrast-01
                     :ARG2 (c21-14 / and
                                   :op1 (c21-6 / vulture
                                               :ARG0-of (c21-11 / circle-01
                                                                :ARG1 c21-6)
                                               :op2-of c21-14)))
       :snt3 (c21-1 / lose-02
                    :ARG1 (c21-5 / respect-01
                                 :ARG1 (c21-13 / they)
                                 :quant (c21-12 / lot))))
