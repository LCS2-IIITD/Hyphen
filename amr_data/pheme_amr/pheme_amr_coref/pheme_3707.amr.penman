# ::snt Rendons Evelyn Beatrice Hall ce qui appartient Evelyn Beatrice Hall!
# ::tokens ["Rendons", "Evelyn", "Beatrice", "Hall", "ce", "qui", "appartient", "Evelyn", "Beatrice", "Hall", "!"]
# ::lemmas ["Rendons", "Evelyn", "Beatrice", "Hall", "ce", "qui", "appartient", "Evelyn", "Beatrice", "Hall", "!"]
(c1-5 / say-01
      :ARG0 (c1-2 / i)
      :ARG1 (c1-0 / have-manner-91
                  :ARG1 (c1-4 / person
                              :name (c1-3 / name
                                          :op1 "Evelyn"
                                          :op2 "Beatrice"
                                          :op3 "Hall"))
                  :ARG2 (c1-1 / et-cetera))
      :ARG2 c1-4)

# ::snt Pssst, it wasn't Voltaire, it was Evelyn Beatrice Hall who wrote that.
# ::tokens ["Pssst", ",", "it", "was", "n't", "Voltaire", ",", "it", "was", "Evelyn", "Beatrice", "Hall", "who", "wrote", "that", "."]
# ::lemmas ["pssst", ",", "it", "be", "not", "Voltaire", ",", "it", "be", "Evelyn", "Beatrice", "Hall", "who", "write", "that", "."]
(c3-8 / and
      :op1 (c3-4 / person
                 :name (c3-2 / name
                             :op1 "Voltaire")
                 :polarity -)
      :op2 (c3-0 / write-01
                 :ARG0 (c3-7 / person
                             :name (c3-3 / name
                                         :op1 "Evelyn"
                                         :op2 "Beatrice"
                                         :op3 "Hall"))
                 :ARG1 (c3-6 / that))
      :domain (c3-1 / person
                    :name (c3-5 / name
                                :op1 "Pssst")))

# ::snt Today we are all French.
# ::tokens ["Today", "we", "are", "all", "French", "."]
# ::lemmas ["Today", "we", "be", "all", "French", "."]
(c4-2 / person
      :mod (c4-3 / country
                 :name (c4-1 / name
                             :op1 "France"))
      :domain (c4-0 / we
                    :mod (c4-5 / all))
      :time (c4-4 / today))

# ::snt "I do not agree with what you have to say, but I'll defend to the death your right to say it." -Voltaire
# ::tokens ["\"", "I", "do", "not", "agree", "with", "what", "you", "have", "to", "say", ",", "but", "I", "'ll", "defend", "to", "the", "death", "your", "right", "to", "say", "it", ".", "\"", "-Voltaire"]
# ::lemmas ["\"", "i", "do", "not", "agree", "with", "what", "you", "have", "to", "say", ",", "but", "i", "'ll", "defend", "to", "the", "death", "your", "right", "to", "say", "it", ".", "\"", "-voltaire"]
(c5-10 / say-01
       :ARG0 (c5-6 / person
                   :name (c5-5 / name
                               :op1 "Voltaire"))
       :ARG1 (c5-8 / contrast-01
                   :ARG1 (c5-12 / agree-01
                                :ARG0 (c5-4 / i)
                                :ARG1 (c5-11 / thing
                                             :ARG1-of (c5-3 / say-01
                                                            :ARG0 (c5-0 / you)))
                                :polarity -)
                   :ARG2 (c5-7 / defend-01
                               :ARG0 c5-4
                               :ARG1 (c5-9 / right-05
                                           :ARG1 c5-0
                                           :ARG2 (c5-2 / say-01
                                                       :ARG0 c5-0
                                                       :ARG1 c5-11))
                               :degree (c5-1 / die-01))))

# ::snt . Tea Party Version: I do not agree with what you have to say, &amp; I'll defend to the death my right to silence you.
# ::tokens [".", "Tea", "Party", "Version", ":", "I", "do", "not", "agree", "with", "what", "you", "have", "to", "say", ",", "&", "amp", ";", "I", "'ll", "defend", "to", "the", "death", "my", "right", "to", "silence", "you", "."]
# ::lemmas [".", "Tea", "Party", "Version", ":", "i", "do", "not", "agree", "with", "what", "you", "have", "to", "say", ",", "&", "amp", ";", "i", "'ll", "defend", "to", "the", "death", "my", "right", "to", "silence", "you", "."]
(c6-12 / and
       :op1 (c6-3 / agree-01
                  :ARG0 (c6-4 / i)
                  :ARG1 (c6-11 / thing
                               :ARG1-of (c6-10 / say-01
                                               :ARG0 (c6-0 / you)
                                               :op2-of c6-12))
                  :polarity -)
       :ARG0 c6-4
       :ARG1 (c6-8 / defend-01
                   :ARG0 c6-4
                   :ARG1 (c6-9 / right-05
                               :ARG1 c6-4
                               :ARG2 (c6-2 / silence-01
                                           :ARG0 c6-4
                                           :ARG1 c6-0))
                   :degree (c6-1 / die-01))
       :mod (c6-6 / version
                  :mod (c6-7 / political-movement
                             :name (c6-5 / name
                                         :op1 "Tea"
                                         :op2 "Party"))))
