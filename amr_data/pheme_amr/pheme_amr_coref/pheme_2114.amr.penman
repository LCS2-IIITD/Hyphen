# ::snt there is no incentive to stop if they can get away with murder every time - ALWAYS film the police - ALWAYS!
# ::tokens ["there", "is", "no", "incentive", "to", "stop", "if", "they", "can", "get", "away", "with", "murder", "every", "time", "-", "ALWAYS", "film", "the", "police", "-", "ALWAYS", "!"]
# ::lemmas ["there", "be", "no", "incentive", "to", "stop", "if", "they", "can", "get", "away", "with", "murder", "every", "time", "-", "always", "film", "the", "police", "-", "always", "!"]
(c1-3 / multi-sentence
      :snt1 (c1-0 / have-condition-91
                  :ARG1 (c1-5 / incentivize-01
                              :ARG1 (c1-10 / stop-01
                                           :ARG1 (c1-11 / they))
                              :polarity -)
                  :ARG2 (c1-6 / possible-01
                              :ARG1 (c1-8 / get-away-08
                                          :ARG0 c1-11
                                          :ARG1 (c1-7 / murder-01))
                              :frequency (c1-9 / time
                                               :mod (c1-4 / every))))
      :snt2 (c1-2 / film-01
                  :ARG0 (c1-1 / you)
                  :ARG1 (c1-12 / police)
                  :time (c1-13 / always)
                  :mode imperative))

# ::snt Well the SCOTUS just said we can after laws said we couldn't.
# ::tokens ["Well", "the", "SCOTUS", "just", "said", "we", "can", "after", "laws", "said", "we", "could", "n't", "."]
# ::lemmas ["well", "the", "SCOTUS", "just", "say", "we", "can", "after", "law", "say", "we", "could", "not", "."]
(c2-7 / say-01
      :ARG0 (c2-6 / government-organization
                  :name (c2-4 / name
                              :op1 "Supreme"
                              :op2 "Court"
                              :op3 "of"
                              :op4 "the"
                              :op5 "United"
                              :op6 "States"))
      :ARG1 (c2-5 / possible-01
                  :ARG1 (c2-1 / we))
      :time (c2-8 / after
                  :op1 (c2-3 / say-01
                             :ARG0 (c2-2 / law)
                             :ARG1 c2-5))
      :mod (c2-0 / just))

# ::snt Last one?
# ::tokens ["Last", "one", "?"]
# ::lemmas ["last", "one", "?"]
(c3-0 / one
      :polarity (c3-2 / amr-unknown)
      :mod (c3-1 / last))

# ::snt my goal is to one day marry a corporation and have kids
# ::tokens ["my", "goal", "is", "to", "one", "day", "marry", "a", "corporation", "and", "have", "kids"]
# ::lemmas ["my", "goal", "be", "to", "one", "day", "marry", "a", "corporation", "and", "have", "kid"]
(c4-6 / goal
      :poss (c4-3 / i)
      :domain (c4-8 / and
                    :op1 (c4-1 / marry-01
                               :ARG1 c4-3
                               :ARG2 (c4-5 / corporation))
                    :op2 (c4-0 / have-05
                               :ARG0 c4-3
                               :ARG1 (c4-7 / kid))
                    :time (c4-4 / day
                                :mod (c4-2 / one))))

# ::snt I agree there, absolutely, but I don't agree that deadly force was the answer
# ::tokens ["I", "agree", "there", ",", "absolutely", ",", "but", "I", "do", "n't", "agree", "that", "deadly", "force", "was", "the", "answer"]
# ::lemmas ["i", "agree", "there", ",", "absolutely", ",", "but", "i", "do", "not", "agree", "that", "deadly", "force", "be", "the", "answer"]
(c5-5 / contrast-01
      :ARG1 (c5-8 / agree-01
                  :ARG0 (c5-2 / i)
                  :ARG1 (c5-7 / there)
                  :degree (c5-1 / absolute))
      :ARG2 (c5-4 / agree-01
                  :ARG0 c5-2
                  :ARG1 (c5-6 / answer-01
                              :ARG2 (c5-0 / force-04
                                          :ARG0-of (c5-3 / kill-01)))
                  :polarity -))

# ::snt you're absolutely correct! Deadly force should be solely resigned for immediate threat, running isn't a threat
# ::tokens ["you", "'re", "absolutely", "correct", "!", "Deadly", "force", "should", "be", "solely", "resigned", "for", "immediate", "threat", ",", "running", "is", "n't", "a", "threat"]
# ::lemmas ["you", "be", "absolutely", "correct", "!", "deadly", "force", "should", "be", "solely", "resign", "for", "immediate", "threat", ",", "run", "be", "not", "a", "threat"]
(c6-2 / multi-sentence
      :snt1 (c6-7 / correct-02
                  :ARG1 (c6-0 / you)
                  :degree (c6-13 / absolute))
      :snt2 (c6-6 / contrast-01
                  :ARG1 (c6-8 / recommend-01
                              :ARG1 (c6-5 / resign-01
                                          :ARG1 (c6-1 / force
                                                      :ARG0-of (c6-9 / die-01))
                                          :mod (c6-11 / sole)
                                          :purpose (c6-12 / threaten-01
                                                          :time (c6-4 / immediate))))
                  :ARG2 (c6-10 / threaten-01
                               :ARG1 (c6-3 / run-02)
                               :polarity -)))

# ::snt Cops need better and more training for this to stop.
# ::tokens ["Cops", "need", "better", "and", "more", "training", "for", "this", "to", "stop", "."]
# ::lemmas ["cop", "need", "well", "and", "more", "training", "for", "this", "to", "stop", "."]
(c7-3 / need-01
      :ARG0 (c7-5 / cop)
      :ARG1 (c7-10 / and
                   :op1 (c7-0 / have-degree-91
                              :ARG1 c7-5
                              :ARG2 (c7-6 / good-02
                                          :ARG1 c7-5)
                              :ARG3 (c7-2 / more))
                   :op2 (c7-1 / have-degree-91
                              :ARG1 (c7-9 / train-01
                                          :ARG2 c7-5)
                              :ARG2 c7-6
                              :ARG1 c7-9)
                   :ARG3 (c7-4 / more))
      :purpose (c7-8 / stop-01
                     :ARG1 (c7-7 / this)))

# ::snt they do have the training they just want to show their egos.
# ::tokens ["they", "do", "have", "the", "training", "they", "just", "want", "to", "show", "their", "egos", "."]
# ::lemmas ["they", "do", "have", "the", "training", "they", "just", "want", "to", "show", "their", "ego", "."]
(c8-0 / have-03
      :ARG0 (c8-6 / they)
      :ARG1 (c8-4 / train-01
                  :ARG2 c8-6
                  :ARG1-of (c8-5 / show-01
                                 :ARG0 c8-6
                                 :ARG2 (c8-3 / ego
                                             :poss c8-6)
                                 :ARG1-of (c8-1 / want-01
                                                :ARG0 c8-6
                                                :mod (c8-2 / just)))))

# ::snt exactly. Lie to cover their ass.
# ::tokens ["exactly", ".", "Lie", "to", "cover", "their", "ass", "."]
# ::lemmas ["exactly", ".", "lie", "to", "cover", "their", "ass", "."]
(c9-1 / multi-sentence
      :snt1 (c9-2 / exact)
      :snt2 (c9-0 / lie-08
                  :purpose (c9-3 / cover-01
                                 :ARG1 (c9-5 / ass
                                             :part-of (c9-4 / they)))))

# ::snt We give them tanks, black Ninja outfits, and high powered weapons and act surprised when shit like this happens?
# ::tokens ["We", "give", "them", "tanks", ",", "black", "Ninja", "outfits", ",", "and", "high", "powered", "weapons", "and", "act", "surprised", "when", "shit", "like", "this", "happens", "?"]
# ::lemmas ["we", "give", "they", "tank", ",", "black", "Ninja", "outfit", ",", "and", "high", "power", "weapon", "and", "act", "surprised", "when", "shit", "like", "this", "happen", "?"]
(c10-4 / and
       :op1 (c10-11 / give-01
                    :ARG0 (c10-12 / we)
                    :ARG1 (c10-13 / and
                                  :op1 (c10-18 / tank)
                                  :op2 (c10-15 / outfit
                                               :mod (c10-1 / person
                                                           :name (c10-8 / name
                                                                        :op1 "Ninja"))
                                               :ARG1-of (c10-6 / black-04))
                                  :op3 (c10-0 / weapon
                                              :ARG1-of (c10-3 / power-01
                                                              :ARG1-of (c10-5 / high-02))))
                    :ARG2 (c10-16 / they))
       :op2 (c10-9 / act-01
                   :ARG0 c10-16
                   :ARG1 (c10-2 / surprise-01
                                :ARG0 (c10-7 / shit
                                             :ARG1-of (c10-10 / resemble-01
                                                              :ARG2 (c10-14 / this)))
                                :ARG1 c10-16)
                   :polarity (c10-17 / amr-unknown)))

# ::snt Kinda disheartening when you hear this stories, kids don't grow in trees, when a young life is taken away it's never coming back.
# ::tokens ["Kinda", "disheartening", "when", "you", "hear", "this", "stories", ",", "kids", "do", "n't", "grow", "in", "trees", ",", "when", "a", "young", "life", "is", "taken", "away", "it", "'s", "never", "coming", "back", "."]
# ::lemmas ["Kinda", "dishearten", "when", "you", "hear", "this", "story", ",", "kid", "do", "not", "grow", "in", "tree", ",", "when", "a", "young", "life", "be", "take", "away", "it", "be", "never", "come", "back", "."]
(c11-6 / dishearten-01
       :ARG0 (c11-0 / hear-01
                    :ARG0 (c11-1 / you)
                    :ARG1 (c11-13 / and
                                  :op1 (c11-8 / grow-03
                                              :ARG1 (c11-12 / kid)
                                              :ARG2 (c11-10 / tree)
                                              :polarity -)
                                  :op2 (c11-7 / come-01
                                              :ARG1 (c11-2 / life
                                                           :mod (c11-9 / young))
                                              :direction (c11-3 / back)
                                              :time (c11-11 / take-away-05
                                                            :ARG1 c11-2)
                                              :time (c11-4 / ever)
                                              :polarity -)))
       :degree (c11-5 / kind-of))

# ::snt u just need to inform the other party that you are filming them. Other states u don't need to tell the cop
# ::tokens ["u", "just", "need", "to", "inform", "the", "other", "party", "that", "you", "are", "filming", "them", ".", "Other", "states", "u", "do", "n't", "need", "to", "tell", "the", "cop"]
# ::lemmas ["u", "just", "need", "to", "inform", "the", "other", "party", "that", "you", "be", "film", "they", ".", "other", "state", "u", "do", "not", "need", "to", "tell", "the", "cop"]
(c12-3 / multi-sentence
       :snt1 (c12-7 / need-01
                    :ARG0 (c12-1 / you)
                    :ARG1 (c12-6 / inform-01
                                 :ARG0 c12-1
                                 :ARG1 (c12-9 / party
                                              :mod (c12-5 / other))
                                 :ARG2 (c12-2 / film-01
                                              :ARG0 c12-1
                                              :ARG1 (c12-14 / they)))
                    :mod (c12-0 / just))
       :snt2 (c12-8 / need-01
                    :ARG0 (c12-11 / you)
                    :ARG1 (c12-13 / tell-01
                                  :ARG0 c12-11
                                  :ARG2 (c12-10 / cop))
                    :location (c12-12 / state
                                      :mod (c12-4 / other))
                    :polarity -))

# ::snt that's still the huge mystery. No one knows why the police even were interacting with them at all
# ::tokens ["that", "'s", "still", "the", "huge", "mystery", ".", "No", "one", "knows", "why", "the", "police", "even", "were", "interacting", "with", "them", "at", "all"]
# ::lemmas ["that", "be", "still", "the", "huge", "mystery", ".", "no", "one", "know", "why", "the", "police", "even", "be", "interact", "with", "they", "at", "all"]
(c13-1 / multi-sentence
       :snt1 (c13-7 / mystery
                    :domain (c13-12 / that)
                    :mod (c13-0 / huge)
                    :mod (c13-11 / still))
       :snt2 (c13-4 / know-01
                    :ARG0 (c13-5 / no-one)
                    :ARG1 (c13-10 / thing
                                  :ARG0-of (c13-9 / cause-01
                                                  :ARG1 (c13-3 / interact-01
                                                               :ARG0 (c13-8 / police)
                                                               :ARG1 (c13-6 / they)
                                                               :mod (c13-2 / even)
                                                               :degree (c13-13 / at-all))))))

# ::snt what law? The supreme law is the Constitution - st Amendment - free press, speech, assembly
# ::tokens ["what", "law", "?", "The", "supreme", "law", "is", "the", "Constitution", "-", "st", "Amendment", "-", "free", "press", ",", "speech", ",", "assembly"]
# ::lemmas ["what", "law", "?", "the", "supreme", "law", "be", "the", "Constitution", "-", "st", "Amendment", "-", "free", "press", ",", "speech", ",", "assembly"]
(c14-2 / multi-sentence
       :snt1 (c14-1 / law
                    :mod (c14-12 / amr-unknown))
       :snt2 (c14-10 / law
                     :name (c14-5 / name
                                  :op1 "Constitution")
                     :domain (c14-0 / law
                                    :name (c14-6 / name
                                                 :op1 "St"
                                                 :op2 "Amendment"))
                     :ARG1-of (c14-7 / mean-01
                                     :ARG2 (c14-4 / and
                                                  :op1 (c14-8 / press
                                                              :ARG1-of (c14-3 / free-04))
                                                  :op2 (c14-11 / speak-01)
                                                  :op3 (c14-9 / assembly)))))

# ::snt claiming they tried to put him in cruiser &amp; there was a "struggle over the officers gun" msnbc reported shot fired IN the car
# ::tokens ["claiming", "they", "tried", "to", "put", "him", "in", "cruiser", "&", "amp", ";", "there", "was", "a", "\"", "struggle", "over", "the", "officers", "gun", "\"", "msnbc", "reported", "shot", "fired", "IN", "the", "car"]
# ::lemmas ["claim", "they", "try", "to", "put", "he", "in", "cruiser", "&", "amp", ";", "there", "be", "a", "\"", "struggle", "over", "the", "officer", "gun", "\"", "msnbc", "report", "shot", "fire", "in", "the", "car"]
(c15-0 / multi-sentence
       :snt1 (c15-17 / claim-01
                     :ARG1 (c15-19 / try-01
                                   :ARG0 (c15-18 / they)
                                   :ARG1 (c15-1 / put-01
                                                :ARG0 c15-18
                                                :ARG1 (c15-7 / he)
                                                :ARG2 (c15-6 / and
                                                             :op1 (c15-2 / cruiser)
                                                             :op2 (c15-14 / amp)))))
       :snt2 (c15-3 / struggle-02
                    :ARG2 (c15-13 / gun
                                  :poss (c15-4 / person
                                               :ARG0-of (c15-5 / have-org-role-91
                                                               :ARG2 (c15-16 / officer)))))
       :snt3 (c15-12 / report-01
                     :ARG0 (c15-9 / publication
                                  :name (c15-11 / name
                                                :op1 "MSNBC"))
                     :ARG1 (c15-8 / fire-01
                                  :ARG1 (c15-10 / shoot-01)
                                  :location (c15-15 / car))))

# ::snt not sure if that's been verified though. I can't seem to find a consistent story, just variations
# ::tokens ["not", "sure", "if", "that", "'s", "been", "verified", "though", ".", "I", "ca", "n't", "seem", "to", "find", "a", "consistent", "story", ",", "just", "variations"]
# ::lemmas ["not", "sure", "if", "that", "be", "be", "verify", "though", ".", "i", "can", "not", "seem", "to", "find", "a", "consistent", "story", ",", "just", "variation"]
(c16-3 / multi-sentence
       :snt1 (c16-0 / have-concession-91
                    :ARG1 (c16-13 / sure-02
                                  :ARG0 (c16-7 / i)
                                  :ARG1 (c16-8 / verify-01
                                               :ARG1 (c16-14 / that))
                                  :polarity -))
       :snt2 (c16-11 / contrast-01
                     :ARG1 (c16-9 / possible-01
                                  :ARG1 (c16-6 / seem-01
                                               :ARG1 (c16-2 / find-01
                                                            :ARG0 (c16-12 / i)
                                                            :ARG1 (c16-4 / story
                                                                         :ARG1-of (c16-10 / consistent-02))))
                                  :polarity -)
                     :ARG2 (c16-5 / vary-01
                                  :mod (c16-1 / just))))

# ::snt but the Constitution will never be restricted!
# ::tokens ["but", "the", "Constitution", "will", "never", "be", "restricted", "!"]
# ::lemmas ["but", "the", "Constitution", "will", "never", "be", "restrict", "!"]
(c17-4 / contrast-01
       :ARG2 (c17-3 / restrict-01
                    :ARG1 (c17-0 / law
                                 :name (c17-2 / name
                                              :op1 "Constitution"))
                    :time (c17-1 / ever)
                    :polarity -))

# ::snt this sounds very suspect. WTF was he stopped for? That's what I need to know.
# ::tokens ["this", "sounds", "very", "suspect", ".", "WTF", "was", "he", "stopped", "for", "?", "That", "'s", "what", "I", "need", "to", "know", "."]
# ::lemmas ["this", "sound", "very", "suspect", ".", "WTF", "be", "he", "stop", "for", "?", "that", "be", "what", "i", "need", "to", "know", "."]
(c18-2 / multi-sentence
       :snt1 (c18-10 / sound-01
                     :ARG1 (c18-11 / this)
                     :ARG2 (c18-4 / suspect-01
                                  :degree (c18-8 / very)))
       :snt2 (c18-1 / stop-01
                    :ARG1 (c18-0 / he)
                    :purpose (c18-12 / amr-unknown)
                    :mod (c18-3 / fuck
                                :mode expressive))
       :snt3 (c18-6 / know-01
                    :ARG0 (c18-5 / i)
                    :ARG1 (c18-9 / that)
                    :ARG1-of (c18-7 / need-01
                                    :ARG0 c18-5)))

# ::snt Sounds like one of those made up stories they always make to cover their own ass, like that cuffed black teen that shot himself.
# ::tokens ["Sounds", "like", "one", "of", "those", "made", "up", "stories", "they", "always", "make", "to", "cover", "their", "own", "ass", ",", "like", "that", "cuffed", "black", "teen", "that", "shot", "himself", "."]
# ::lemmas ["sound", "like", "one", "of", "those", "make", "up", "story", "they", "always", "make", "to", "cover", "their", "own", "ass", ",", "like", "that", "cuff", "black", "teen", "that", "shoot", "himself", "."]
(c19-11 / sound-01
        :ARG2 (c19-4 / story
                     :ARG1-of (c19-6 / include-91
                                     :ARG2 (c19-0 / story
                                                  :ARG1-of (c19-1 / make-up-10
                                                                  :ARG0 (c19-12 / they
                                                                                :part (c19-13 / ass))
                                                                  :time (c19-5 / always)
                                                                  :purpose (c19-8 / cover-01
                                                                                  :ARG0 c19-12
                                                                                  :ARG1 c19-13))))
                     :ARG1-of (c19-7 / resemble-01
                                     :ARG2 (c19-10 / teen
                                                   :ARG1-of (c19-2 / black-05)
                                                   :ARG1-of (c19-9 / cuff-01)
                                                   :ARG0-of (c19-3 / shoot-02
                                                                   :ARG1 c19-10)))))

# ::snt From what I've read it states not to share with cop. They can destroy it.
# ::tokens ["From", "what", "I", "'ve", "read", "it", "states", "not", "to", "share", "with", "cop", ".", "They", "can", "destroy", "it", "."]
# ::lemmas ["from", "what", "i", "'ve", "read", "it", "state", "not", "to", "share", "with", "cop", ".", "they", "can", "destroy", "it", "."]
(c20-1 / multi-sentence
       :snt1 (c20-11 / state-01
                     :ARG0 (c20-12 / thing
                                   :ARG1-of (c20-6 / read-01
                                                   :ARG0 (c20-4 / i)
                                                   :ARG3 (c20-8 / it)))
                     :ARG1 (c20-3 / share-01
                                  :ARG0 (c20-7 / cop)
                                  :ARG1 (c20-0 / it)
                                  :polarity -))
       :snt2 (c20-5 / possible-01
                    :ARG1 (c20-9 / destroy-01
                                 :ARG0 (c20-10 / they)
                                 :ARG1 (c20-2 / it))))

# ::snt Had to...he was headed for a Gun Show.
# ::tokens ["Had", "to", "...", "he", "was", "headed", "for", "a", "Gun", "Show", "."]
# ::lemmas ["have", "to", "...", "he", "be", "head", "for", "a", "Gun", "Show", "."]
(c21-2 / cause-01
       :ARG0 (c21-0 / head-02
                    :ARG0 (c21-5 / he)
                    :ARG1 (c21-4 / show-04
                                 :ARG1 (c21-3 / gun)))
       :ARG1 (c21-1 / obligate-01
                    :ARG1 c21-5))

# ::snt that's exactly what it sounded like to me as well. Not like they'd ever convict any cop of wrongdoing. Smh protect&amperve is BS
# ::tokens ["that", "'s", "exactly", "what", "it", "sounded", "like", "to", "me", "as", "well", ".", "Not", "like", "they", "'d", "ever", "convict", "any", "cop", "of", "wrongdoing", ".", "Smh", "protect&amperve", "is", "BS"]
# ::lemmas ["that", "be", "exactly", "what", "it", "sound", "like", "to", "i", "as", "well", ".", "not", "like", "they", "would", "ever", "convict", "any", "cop", "of", "wrongdoing", ".", "smh", "protect&amperve", "be", "BS"]
(c22-1 / multi-sentence
       :snt1 (c22-14 / sound-01
                     :ARG1 (c22-15 / that)
                     :ARG2 (c22-6 / i)
                     :mod (c22-4 / exact)
                     :mod (c22-17 / as-well))
       :snt2 (c22-10 / resemble-01
                     :ARG1 (c22-13 / they)
                     :ARG2 (c22-11 / convict-01
                                   :ARG0 c22-13
                                   :ARG1 (c22-12 / cop
                                                 :mod (c22-5 / any))
                                   :ARG2 (c22-0 / wrongdoing)
                                   :time (c22-2 / ever))
                     :polarity -)
       :snt3 (c22-3 / bullshit-01
                    :ARG1 (c22-8 / and
                                 :op1 (c22-9 / person
                                             :name (c22-7 / name
                                                          :op1 "Mr."
                                                          :op2 "Protect"))
                                 :op2 (c22-16 / person
                                              :name c22-7
                                              :op1 "Amperve"))
                    :mode expressive))

# ::snt No Skittles, Arizona Iced Tea, Cops On Scene. Another Black Teen Dead. Whats Their Excuse Now?.
# ::tokens ["No", "Skittles", ",", "Arizona", "Iced", "Tea", ",", "Cops", "On", "Scene", ".", "Another", "Black", "Teen", "Dead", ".", "What", "s", "Their", "Excuse", "Now", "?", "."]
# ::lemmas ["no", "Skittles", ",", "Arizona", "Iced", "Tea", ",", "Cops", "on", "Scene", ".", "Another", "Black", "Teen", "Dead", ".", "what", "s", "Their", "Excuse", "Now", "?", "."]
(c23-0 / multi-sentence
       :snt1 (c23-17 / and
                     :op1 (c23-8 / product
                                 :name (c23-6 / name
                                              :op1 "Skittles")
                                 :polarity -)
                     :op2 (c23-16 / tea
                                  :ARG1-of (c23-5 / iced-02)
                                  :source (c23-14 / state
                                                  :name (c23-7 / name
                                                               :op1 "Arizona")))
                     :op3 (c23-10 / cop
                                  :location (c23-2 / scene)))
       :snt2 (c23-9 / die-01
                    :ARG1 (c23-13 / teenager
                                  :mod (c23-4 / another)
                                  :ARG1-of (c23-1 / black-05)))
       :snt3 (c23-3 / excuse-02
                    :ARG0 (c23-11 / they)
                    :time (c23-12 / now)
                    :polarity (c23-15 / amr-unknown)))

# ::snt intimidation is just that - scare tactics. Sum of the most "liberal" states attempt to restrict
# ::tokens ["intimidation", "is", "just", "that", "-", "scare", "tactics", ".", "Sum", "of", "the", "most", "\"", "liberal", "\"", "states", "attempt", "to", "restrict"]
# ::lemmas ["intimidation", "be", "just", "that", "-", "scare", "tactic", ".", "sum", "of", "the", "most", "\"", "liberal", "\"", "state", "attempt", "to", "restrict"]
(c24-3 / multi-sentence
       :snt1 (c24-10 / tactic
                     :purpose (c24-9 / scare-01)
                     :domain (c24-6 / intimidate-01)
                     :mod (c24-0 / just))
       :snt2 (c24-11 / attempt-01
                     :ARG0 (c24-5 / state
                                  :ARG1-of (c24-1 / have-degree-91
                                                  :ARG2 (c24-2 / liberal-02
                                                               :ARG1 c24-5)
                                                  :ARG3 (c24-7 / most)))
                     :ARG1 (c24-8 / restrict-01
                                  :ARG0 c24-5)
                     :ARG2-of (c24-4 / sum-01)))

# ::snt some states made it illegal.
# ::tokens ["some", "states", "made", "it", "illegal", "."]
# ::lemmas ["some", "state", "make", "it", "illegal", "."]
(c25-1 / make-02
       :ARG0 (c25-4 / state
                    :quant (c25-2 / some))
       :ARG1 (c25-0 / legal-02
                    :ARG1 (c25-3 / it)
                    :polarity -))

# ::snt Same as always..."Because we can!"
# ::tokens ["Same", "as", "always", "...", "\"Because", "we", "can", "!", "\""]
# ::lemmas ["same", "as", "always", "...", "\"because", "we", "can", "!", "\""]
(c26-3 / cause-01
       :ARG0 (c26-1 / possible-01
                    :ARG1 (c26-2 / do-02
                                 :ARG0 (c26-0 / we)))
       :ARG1-of (c26-4 / same-01
                       :ARG2 (c26-5 / always)))

# ::snt too quick to shoot an unarmed man
# ::tokens ["too", "quick", "to", "shoot", "an", "unarmed", "man"]
# ::lemmas ["too", "quick", "to", "shoot", "an", "unarmed", "man"]
(c27-0 / have-degree-91
       :ARG2 (c27-2 / quick-02)
       :ARG3 (c27-4 / too)
       :ARG6 (c27-3 / shoot-02
                    :ARG2 (c27-1 / man
                                 :ARG1-of (c27-5 / arm-01
                                                 :polarity -))))

# ::snt And no gun!!!
# ::tokens ["And", "no", "gun", "!", "!", "!"]
# ::lemmas ["and", "no", "gun", "!", "!", "!"]
(c28-1 / and
       :op2 (c28-0 / gun
                   :polarity -))

# ::snt except when corporations become people.
# ::tokens ["except", "when", "corporations", "become", "people", "."]
# ::lemmas ["except", "when", "corporation", "become", "people", "."]
(c29-0 / except-01
       :ARG1 (c29-3 / become-01
                    :ARG1 (c29-2 / corporation)
                    :ARG2 (c29-1 / person)))

# ::snt starting college on Monday. Kid had his whole life in front of him. Smh absolutely disgusted by this.
# ::tokens ["starting", "college", "on", "Monday", ".", "Kid", "had", "his", "whole", "life", "in", "front", "of", "him", ".", "Smh", "absolutely", "disgusted", "by", "this", "."]
# ::lemmas ["start", "college", "on", "Monday", ".", "Kid", "have", "his", "whole", "life", "in", "front", "of", "he", ".", "Smh", "absolutely", "disgusted", "by", "this", "."]
(c30-4 / multi-sentence
       :snt1 (c30-11 / start-01
                     :ARG1 (c30-9 / college)
                     :time (c30-8 / date-entity
                                  :weekday (c30-7 / monday)))
       :snt2 (c30-0 / have-03
                    :ARG0 (c30-13 / kid)
                    :ARG1 (c30-3 / life
                                 :poss c30-13
                                 :mod (c30-1 / whole))
                    :location (c30-5 / in-front-of
                                     :op1 c30-13))
       :snt3 (c30-2 / disgust-01
                    :ARG0 (c30-12 / this)
                    :ARG1 (c30-10 / person
                                  :name (c30-6 / name
                                               :op1 "smh"))
                    :degree (c30-14 / absolute)))

# ::snt I was following the twitter feed on it last night &amp; their story is WAY diff than the police chiefs. Shit is messed up.
# ::tokens ["I", "was", "following", "the", "twitter", "feed", "on", "it", "last", "night", "&", "amp", ";", "their", "story", "is", "WAY", "diff", "than", "the", "police", "chiefs", ".", "Shit", "is", "messed", "up", "."]
# ::lemmas ["i", "be", "follow", "the", "twitter", "feed", "on", "it", "last", "night", "&", "amp", ";", "their", "story", "be", "WAY", "diff", "than", "the", "police", "chief", ".", "shit", "be", "mess", "up", "."]
(c31-1 / multi-sentence
       :snt1 (c31-7 / follow-02
                    :ARG0 (c31-13 / i)
                    :ARG1 (c31-15 / feed
                                  :medium (c31-2 / publication
                                                 :name (c31-10 / name
                                                               :op1 "Twitter")))
                    :time (c31-3 / date-entity
                                 :dayperiod (c31-16 / night)
                                 :mod (c31-14 / yesterday)))
       :snt2 (c31-0 / differ-02
                    :ARG1 (c31-4 / story
                                 :poss (c31-18 / they))
                    :ARG2 (c31-5 / person
                                 :ARG0-of (c31-6 / have-org-role-91
                                                 :ARG1 (c31-8 / police)
                                                 :ARG2 (c31-17 / chief)))
                    :degree (c31-12 / way))
       :snt3 (c31-11 / mess-up-02
                     :ARG1 (c31-9 / shit)))

# ::snt cops have ego and will double down over the stupidest, pettiest of non-criminal annoyances they are dealt
# ::tokens ["cops", "have", "ego", "and", "will", "double", "down", "over", "the", "stupidest", ",", "pettiest", "of", "non", "-", "criminal", "annoyances", "they", "are", "dealt"]
# ::lemmas ["cop", "have", "ego", "and", "will", "double", "down", "over", "the", "stupid", ",", "pettiest", "of", "non", "-", "criminal", "annoyance", "they", "be", "deal"]
(c32-13 / and
        :op1 (c32-0 / have-03
                    :ARG0 (c32-9 / cop)
                    :ARG1 (c32-4 / ego))
        :op2 (c32-8 / double-01
                    :ARG1 c32-9
                    :ARG4 (c32-5 / annoy-01
                                 :ARG0-of (c32-10 / crime-02
                                                  :polarity -)
                                 :ARG1-of (c32-2 / have-degree-91
                                                 :ARG2 (c32-12 / stupid)
                                                 :ARG3 (c32-3 / most))
                                 :ARG1-of (c32-6 / have-degree-91
                                                 :ARG2 (c32-7 / pettiest)
                                                 :ARG3 (c32-11 / most)))
                    :direction (c32-1 / down)
                    :topic c32-5))

# ::snt One thing certain: Teen was running very provocatively.
# ::tokens ["One", "thing", "certain", ":", "Teen", "was", "running", "very", "provocatively", "."]
# ::lemmas ["One", "thing", "certain", ":", "Teen", "be", "run", "very", "provocatively", "."]
(c33-5 / thing
       :mod (c33-3 / certain)
       :domain (c33-2 / run-02
                      :ARG0 (c33-4 / teenager)
                      :ARG1-of (c33-1 / provoke-01
                                      :ARG0 c33-4
                                      :degree (c33-0 / very)))
       :quant 1)

# ::snt we need all police to have body cameras.
# ::tokens ["we", "need", "all", "police", "to", "have", "body", "cameras", "."]
# ::lemmas ["we", "need", "all", "police", "to", "have", "body", "camera", "."]
(c34-3 / need-01
       :ARG0 (c34-1 / we)
       :ARG1 (c34-0 / have-03
                    :ARG0 (c34-4 / police
                                 :mod (c34-6 / all))
                    :ARG1 (c34-5 / camera
                                 :mod (c34-2 / body))))

# ::snt It's always hard to find the truth when lies are put out to bury it.
# ::tokens ["It", "'s", "always", "hard", "to", "find", "the", "truth", "when", "lies", "are", "put", "out", "to", "bury", "it", "."]
# ::lemmas ["it", "be", "always", "hard", "to", "find", "the", "truth", "when", "lie", "be", "put", "out", "to", "bury", "it", "."]
(c35-0 / hard-02
       :ARG1 (c35-1 / find-01
                    :ARG1 (c35-6 / truth))
       :time (c35-5 / put-01
                    :ARG1 (c35-2 / lie-08)
                    :ARG2 (c35-4 / out)
                    :purpose (c35-3 / bury-01
                                    :ARG1 c35-6))
       :time (c35-7 / always))

# ::snt Lol!!! Little robots running around.
# ::tokens ["Lol", "!", "!", "!", "Little", "robots", "running", "around", "."]
# ::lemmas ["Lol", "!", "!", "!", "little", "robot", "run", "around", "."]
(c36-2 / multi-sentence
       :snt1 (c36-1 / laugh-01
                    :manner (c36-5 / loud)
                    :mode expressive)
       :snt2 (c36-4 / run-02
                    :ARG0 (c36-3 / robot
                                 :mod (c36-0 / little))
                    :direction (c36-6 / around)))
