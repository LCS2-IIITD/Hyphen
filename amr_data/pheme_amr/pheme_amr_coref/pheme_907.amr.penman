# ::snt All class, love this team!
# ::tokens ["All", "class", ",", "love", "this", "team", "!"]
# ::lemmas ["all", "class", ",", "love", "this", "team", "!"]
(c1-0 / love-01
      :ARG0 (c1-1 / class
                  :mod (c1-4 / all))
      :ARG1 (c1-3 / team
                  :mod (c1-2 / this))
      :mode expressive)

# ::snt Thank you
# ::tokens ["Thank", "you"]
# ::lemmas ["thank", "you"]
(c2-1 / thank-01
      :ARG0 (c2-2 / i)
      :ARG1 (c2-0 / you))

# ::snt MT : A nice touch from who host tonight: Canadian National anthem will be performed." Really classy move
# ::tokens ["MT", ":", "A", "nice", "touch", "from", "who", "host", "tonight", ":", "Canadian", "National", "anthem", "will", "be", "performed", ".", "\"", "Really", "classy", "move"]
# ::lemmas ["MT", ":", "a", "nice", "touch", "from", "who", "host", "tonight", ":", "Canadian", "National", "anthem", "will", "be", "perform", ".", "\"", "really", "classy", "move"]
(c4-0 / multi-sentence
      :snt1 (c4-6 / say-01
                  :ARG0 (c4-3 / person
                              :name (c4-11 / name
                                           :op1 "MT"))
                  :ARG1 (c4-17 / touch
                               :ARG1-of (c4-14 / nice-01)
                               :source (c4-7 / person
                                             :ARG0-of (c4-9 / host-01
                                                            :time (c4-4 / date-entity
                                                                        :dayperiod (c4-1 / night)
                                                                        :mod (c4-16 / today))))
                               :topic (c4-10 / perform-01
                                             :ARG1 (c4-8 / anthem
                                                         :mod (c4-2 / nation)
                                                         :mod (c4-15 / country
                                                                     :name (c4-18 / name
                                                                                  :op1 "Canada"))))))
      :snt2 (c4-12 / move-02
                   :ARG1-of (c4-5 / classy-02
                                  :degree (c4-13 / really))))

# ::snt well that and its a stupid fucking joke.
# ::tokens ["well", "that", "and", "its", "a", "stupid", "fucking", "joke", "."]
# ::lemmas ["well", "that", "and", "its", "a", "stupid", "fucking", "joke", "."]
(c5-6 / and
      :op1 (c5-5 / that)
      :op2 (c5-0 / joke-01
                 :ARG2 (c5-3 / it)
                 :mod (c5-2 / fucking)
                 :mod (c5-4 / stupid))
      :mod (c5-1 / well))

# ::snt I'll try and do better
# ::tokens ["I", "'ll", "try", "and", "do", "better"]
# ::lemmas ["i", "'ll", "try", "and", "do", "well"]
(c6-6 / try-01
      :ARG0 (c6-2 / i)
      :ARG1 (c6-3 / do-02
                  :ARG0 c6-2
                  :ARG1 (c6-5 / thing
                              :ARG1-of (c6-0 / have-degree-91
                                             :ARG2 (c6-4 / good-02
                                                         :ARG1 c6-5)
                                             :ARG3 (c6-1 / more)))))

# ::snt Very classy move
# ::tokens ["Very", "classy", "move"]
# ::lemmas ["very", "classy", "move"]
(c7-2 / move-02
      :ARG1-of (c7-1 / classy-02
                     :degree (c7-0 / very)))

# ::snt Awesome gesture!
# ::tokens ["Awesome", "gesture", "!"]
# ::lemmas ["awesome", "gesture", "!"]
(c8-0 / gesture-01
      :ARG0-of (c8-1 / awe-01))

# ::snt awesome!!
# ::tokens ["awesome", "!", "!"]
# ::lemmas ["awesome", "!", "!"]
(c9-0 / awesome-02
      :mode expressive)

# ::snt too soon?
# ::tokens ["too", "soon", "?"]
# ::lemmas ["too", "soon", "?"]
(c10-0 / soon
       :polarity (c10-3 / amr-unknown)
       :ARG2-of (c10-1 / have-degree-91
                       :ARG3 (c10-2 / too)))

# ::snt They should probably leave out the gun salute
# ::tokens ["They", "should", "probably", "leave", "out", "the", "gun", "salute"]
# ::lemmas ["they", "should", "probably", "leave", "out", "the", "gun", "salute"]
(c11-2 / recommend-01
       :ARG1 (c11-0 / leave-out-03
                    :ARG0 (c11-5 / they)
                    :ARG1 (c11-4 / salute-01
                                 :ARG1 (c11-3 / gun))
                    :mod (c11-1 / probable)))

# ::snt because there's ever been a gun salute at a national anthem? Shitty joke is shitty,
# ::tokens ["because", "there", "'s", "ever", "been", "a", "gun", "salute", "at", "a", "national", "anthem", "?", "Shitty", "joke", "is", "shitty", ","]
# ::lemmas ["because", "there", "be", "ever", "be", "a", "gun", "salute", "at", "a", "national", "anthem", "?", "Shitty", "joke", "be", "shitty", ","]
(c12-1 / multi-sentence
       :snt1 (c12-6 / cause-01
                    :ARG0 (c12-8 / salute-01
                                 :ARG1 (c12-7 / gun)
                                 :time (c12-2 / ever)
                                 :location (c12-9 / anthem
                                                  :mod (c12-5 / nation)))
                    :polarity (c12-4 / amr-unknown))
       :snt2 (c12-3 / shitty
                    :domain (c12-0 / joke-01
                                   :mod c12-3)))

# ::snt I'm tearing up, this is so beautiful. Thank you Pittsburgh
# ::tokens ["I", "'m", "tearing", "up", ",", "this", "is", "so", "beautiful", ".", "Thank", "you", "Pittsburgh"]
# ::lemmas ["i", "be", "tear", "up", ",", "this", "be", "so", "beautiful", ".", "thank", "you", "Pittsburgh"]
(c13-0 / multi-sentence
       :snt1 (c13-9 / tear-up-04
                    :ARG0 (c13-2 / i)
                    :ARG1-of (c13-6 / cause-01
                                    :ARG0 (c13-1 / beautiful-02
                                                 :ARG1 (c13-7 / this)
                                                 :degree (c13-8 / so))))
       :snt2 (c13-4 / thank-01
                    :ARG0 c13-2
                    :ARG1 (c13-5 / city
                                 :name (c13-3 / name
                                              :op1 "Pittsburgh"))))

# ::snt concidering a lot of the NHL players are Canadian ...makes sense.
# ::tokens ["concidering", "a", "lot", "of", "the", "NHL", "players", "are", "Canadian", "...", "makes", "sense", "."]
# ::lemmas ["concidere", "a", "lot", "of", "the", "NHL", "player", "be", "Canadian", "...", "make", "sense", "."]
(c14-7 / sense-02
       :ARG1 (c14-9 / admit-01
                    :ARG1 (c14-4 / person
                                 :mod (c14-5 / country
                                             :name (c14-2 / name
                                                          :op1 "Canada"))
                                 :ARG0-of (c14-8 / play-01
                                                 :ARG1 (c14-0 / league
                                                              :name (c14-3 / name
                                                                           :op1 "NHL")))
                                 :quant (c14-6 / lot)
                                 :ARG0-of (c14-1 / play-01))))

# ::snt It is unfortunate that they need to, but good that they are.
# ::tokens ["It", "is", "unfortunate", "that", "they", "need", "to", ",", "but", "good", "that", "they", "are", "."]
# ::lemmas ["it", "be", "unfortunate", "that", "they", "need", "to", ",", "but", "good", "that", "they", "be", "."]
(c15-2 / contrast-01
       :ARG1 (c15-0 / fortunate-01
                    :ARG2 (c15-1 / need-01
                                 :ARG0 (c15-4 / they))
                    :polarity -)
       :ARG2 (c15-3 / good-02
                    :ARG1 c15-4))

# ::snt this is awesome...
# ::tokens ["this", "is", "awesome", "..."]
# ::lemmas ["this", "be", "awesome", "..."]
(c17-1 / awe-01
       :ARG0 (c17-0 / this))

# ::snt Seems like owner Mario Lemieux is behind this decision.
# ::tokens ["Seems", "like", "owner", "Mario", "Lemieux", "is", "behind", "this", "decision", "."]
# ::lemmas ["seem", "like", "owner", "Mario", "Lemieux", "be", "behind", "this", "decision", "."]
(c18-6 / seem-01
       :ARG1 (c18-0 / behind
                    :op1 (c18-7 / thing
                                :ARG1-of (c18-4 / decide-01)
                                :mod (c18-5 / this))
                    :domain (c18-3 / person
                                   :name (c18-2 / name
                                                :op1 "Mario"
                                                :op2 "Lemieux")
                                   :ARG0-of (c18-1 / own-01))))
