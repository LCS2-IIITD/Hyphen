# ::snt - Even if not innocent, no justification for violating rights, removing due process &amp; execution MURDER!
# ::tokens ["-", "Even", "if", "not", "innocent", ",", "no", "justification", "for", "violating", "rights", ",", "removing", "due", "process", "&", "amp", ";", "execution", "MURDER", "!"]
# ::lemmas ["-", "even", "if", "not", "innocent", ",", "no", "justification", "for", "violate", "right", ",", "remove", "due", "process", "&", "amp", ";", "execution", "murder", "!"]
(c1-0 / justify-01
      :ARG1 (c1-10 / and
                   :op1 (c1-6 / violate-01
                              :ARG1 (c1-8 / right-05))
                   :op2 (c1-5 / remove-01
                              :ARG1 (c1-3 / and
                                          :op1 (c1-9 / due-process)
                                          :op2 (c1-7 / amp)))
                   :op3 (c1-2 / execute-01))
      :concession (c1-1 / even-if
                        :op1 (c1-4 / innocent-01
                                   :polarity -))
      :polarity -)

# ::snt Chief admits 'friend' did NOT confess to a crime! Cop did not stop Michael as a suspect! LIES!
# ::tokens ["Chief", "admits", "'", "friend", "'", "did", "NOT", "confess", "to", "a", "crime", "!", "Cop", "did", "not", "stop", "Michael", "as", "a", "suspect", "!", "LIES", "!"]
# ::lemmas ["chief", "admit", "'", "friend", "'", "do", "not", "confess", "to", "a", "crime", "!", "Cop", "do", "not", "stop", "Michael", "as", "a", "suspect", "!", "lie", "!"]
(c2-2 / multi-sentence
      :snt1 (c2-12 / admit-01
                   :ARG0 (c2-9 / chief)
                   :ARG1 (c2-8 / confess-01
                               :ARG0 (c2-7 / person
                                           :ARG0-of (c2-0 / have-rel-role-91
                                                          :ARG2 (c2-1 / friend)))
                               :ARG1 (c2-10 / crime-02)
                               :polarity -))
      :snt2 (c2-11 / stop-03
                   :ARG0 (c2-13 / cop)
                   :ARG1 (c2-4 / person
                               :name (c2-6 / name
                                           :op1 "Michael"))
                   :ARG2 (c2-5 / suspect-01
                               :ARG0 c2-4)
                   :polarity -)
      :snt3 (c2-3 / lie-08))

# ::snt To think after all this time a lame-assed story about stolen cigars is going to fly is beyond stupid!
# ::tokens ["To", "think", "after", "all", "this", "time", "a", "lame", "-", "assed", "story", "about", "stolen", "cigars", "is", "going", "to", "fly", "is", "beyond", "stupid", "!"]
# ::lemmas ["to", "think", "after", "all", "this", "time", "a", "lame", "-", "asse", "story", "about", "steal", "cigar", "be", "go", "to", "fly", "be", "beyond", "stupid", "!"]
(c3-10 / stupid
       :degree (c3-3 / beyond)
       :domain (c3-11 / think-01
                      :ARG1 (c3-0 / fly-01
                                  :ARG1 (c3-4 / story
                                              :topic (c3-8 / cigar
                                                           :ARG1-of (c3-1 / steal-01))
                                              :mod (c3-12 / ass
                                                          :mod (c3-2 / lame)))
                                  :time (c3-5 / after
                                              :op1 (c3-9 / time
                                                         :mod (c3-6 / this)
                                                         :mod (c3-7 / all))))))

# ::snt Never mentioned "robbery" in his confrontation with them...where is the corresponding dispatch call?
# ::tokens ["Never", "mentioned", "\"", "robbery", "\"", "in", "his", "confrontation", "with", "them", "...", "where", "is", "the", "corresponding", "dispatch", "call", "?"]
# ::lemmas ["never", "mention", "\"", "robbery", "\"", "in", "his", "confrontation", "with", "they", "...", "where", "be", "the", "correspond", "dispatch", "call", "?"]
(c4-1 / multi-sentence
      :snt1 (c4-4 / mention-01
                  :ARG0 (c4-0 / he)
                  :ARG1 (c4-5 / rob-01)
                  :time (c4-6 / confront-01
                              :ARG0 c4-0
                              :ARG1 (c4-10 / they))
                  :time (c4-3 / ever)
                  :polarity -)
      :snt2 (c4-2 / be-located-at-91
                  :ARG1 (c4-7 / call-02
                              :mod (c4-8 / dispatch-01)
                              :ARG1-of (c4-9 / correspond-02))
                  :ARG2 (c4-11 / amr-unknown)))

# ::snt Agreed-also,if was suspect,why not just question him? Why tell him &amp; friend get off road,not stop them?
# ::tokens ["Agreed", "-", "also", ",", "if", "was", "suspect", ",", "why", "not", "just", "question", "him", "?", "Why", "tell", "him", "&", "amp", ";", "friend", "get", "off", "road", ",", "not", "stop", "them", "?"]
# ::lemmas ["Agreed", "-", "also", ",", "if", "be", "suspect", ",", "why", "not", "just", "question", "he", "?", "why", "tell", "he", "&", "amp", ";", "friend", "get", "off", "road", ",", "not", "stop", "they", "?"]
(c5-8 / agree-01
      :ARG1 (c5-18 / and
                   :op1 (c5-9 / have-condition-91
                              :ARG1 (c5-21 / cause-01
                                           :ARG0 (c5-15 / amr-unknown)
                                           :ARG1 (c5-12 / question-01
                                                        :ARG1 (c5-5 / suspect-01)
                                                        :mod (c5-0 / just)
                                                        :polarity -))
                              :ARG2 c5-5)
                   :op2 (c5-4 / cause-01
                              :ARG0 (c5-22 / amr-unknown)
                              :ARG1 (c5-20 / and
                                           :op1 (c5-23 / tell-01
                                                       :ARG1 (c5-17 / get-05
                                                                    :ARG1 (c5-1 / and
                                                                                :op1 (c5-7 / he)
                                                                                :op2 (c5-3 / person
                                                                                           :name (c5-14 / name
                                                                                                        :op1 "amp")))
                                                                    :ARG2 (c5-19 / off
                                                                                 :op1 (c5-16 / road)))
                                                       :ARG2 (c5-6 / person
                                                                   :ARG0-of (c5-2 / have-rel-role-91
                                                                                  :ARG1 c5-1
                                                                                  :ARG2 (c5-10 / friend))))
                                           :op2 (c5-11 / stop-01
                                                       :ARG1 c5-1
                                                       :polarity -))
                              :condition c5-5))
      :mod (c5-13 / also))

# ::snt It doesn't matter if you are police, gang, or neighborhood watch. Life means more.
# ::tokens ["It", "does", "n't", "matter", "if", "you", "are", "police", ",", "gang", ",", "or", "neighborhood", "watch", ".", "Life", "means", "more", "."]
# ::lemmas ["it", "do", "not", "matter", "if", "you", "be", "police", ",", "gang", ",", "or", "neighborhood", "watch", ".", "life", "mean", "more", "."]
(c6-3 / multi-sentence
      :snt1 (c6-7 / matter-01
                  :ARG1 (c6-5 / or
                              :op1 (c6-8 / police)
                              :op2 (c6-10 / gang)
                              :op3 (c6-0 / watch-01
                                         :ARG1 (c6-6 / neighborhood))
                              :domain (c6-1 / you))
                  :polarity -)
      :snt2 (c6-2 / mean-01
                  :ARG1 (c6-4 / life)
                  :ARG2 (c6-9 / more)))

# ::snt Thank goodness the cops in aren't very bright. Makes it easier to sue their sorry asses!
# ::tokens ["Thank", "goodness", "the", "cops", "in", "are", "n't", "very", "bright", ".", "Makes", "it", "easier", "to", "sue", "their", "sorry", "asses", "!"]
# ::lemmas ["thank", "goodness", "the", "cop", "in", "be", "not", "very", "bright", ".", "make", "it", "easy", "to", "sue", "their", "sorry", "ass", "!"]
(c7-2 / multi-sentence
      :snt1 (c7-14 / thank-01
                   :ARG0 (c7-6 / i)
                   :ARG1 (c7-10 / goodness)
                   :ARG2 (c7-3 / bright-03
                               :ARG1 (c7-9 / cop
                                           :location (c7-11 / inside))
                               :degree (c7-7 / very)
                               :polarity -))
      :snt2 (c7-8 / make-02
                  :ARG1 (c7-4 / easy-05
                              :ARG1 (c7-13 / sue-02
                                           :ARG1 (c7-15 / ass
                                                        :part-of (c7-12 / they)
                                                        :ARG1-of (c7-5 / sorry-01)))
                              :ARG2-of (c7-0 / have-degree-91
                                             :ARG1 c7-13
                                             :ARG3 (c7-1 / more)))))

# ::snt Police LIED 'Ferguson police chief: Officer didn't stop Brown as robbery suspect'
# ::tokens ["Police", "LIED", "'", "Ferguson", "police", "chief", ":", "Officer", "did", "n't", "stop", "Brown", "as", "robbery", "suspect", "'"]
# ::lemmas ["police", "LIED", "'", "Ferguson", "police", "chief", ":", "Officer", "do", "not", "stop", "Brown", "as", "robbery", "suspect", "'"]
(c8-1 / lie-08
      :ARG0 (c8-7 / police)
      :ARG1 (c8-11 / stop-03
                   :ARG0 (c8-13 / person
                                :ARG0-of (c8-0 / have-org-role-91
                                               :ARG1 (c8-2 / police
                                                           :location (c8-9 / city
                                                                           :name (c8-5 / name
                                                                                       :op1 "Ferguson")))
                                               :ARG2 (c8-8 / chief)))
                   :ARG1 (c8-12 / person
                                :name (c8-6 / name
                                            :op1 "Brown"))
                   :prep-as (c8-3 / person
                                  :ARG2-of (c8-4 / suspect-01
                                                 :ARG1 (c8-10 / rob-01)))
                   :polarity -))

# ::snt Of course not...they have this fake police report, but no dispatch call detailing alleged robbery!
# ::tokens ["Of", "course", "not", "...", "they", "have", "this", "fake", "police", "report", ",", "but", "no", "dispatch", "call", "detailing", "alleged", "robbery", "!"]
# ::lemmas ["of", "course", "not", "...", "they", "have", "this", "fake", "police", "report", ",", "but", "no", "dispatch", "call", "detail", "alleged", "robbery", "!"]
(c9-7 / contrast-01
      :ARG1 (c9-0 / have-03
                  :ARG0 (c9-11 / they)
                  :ARG1 (c9-6 / report-01
                              :ARG0 (c9-5 / police)
                              :ARG1-of (c9-2 / fake-02)
                              :mod (c9-10 / this))
                  :polarity -)
      :ARG2 (c9-8 / call-02
                  :ARG1 (c9-9 / dispatch-01)
                  :ARG0-of (c9-1 / detail-01
                                 :ARG1 (c9-4 / rob-01
                                             :ARG1-of (c9-12 / allege-01)))
                  :polarity -)
      :mod (c9-3 / of-course
                 :polarity -))

# ::snt I say no more /freekill. No matter who does it.
# ::tokens ["I", "say", "no", "more", "/freekill", ".", "No", "matter", "who", "does", "it", "."]
# ::lemmas ["i", "say", "no", "more", "/freekill", ".", "no", "matter", "who", "do", "it", "."]
(c10-1 / multi-sentence
       :snt1 (c10-8 / say-01
                    :ARG0 (c10-3 / i)
                    :ARG1 (c10-2 / slash
                                 :op1 (c10-4 / more
                                             :polarity -)
                                 :op2 (c10-9 / kill-01
                                             :ARG1-of (c10-0 / free-04))))
       :snt2 (c10-5 / regardless-91
                    :ARG2 (c10-6 / do-02
                                 :ARG1 (c10-7 / it))))

# ::snt Don't understand your argument - we're both on same side. Was repeating what Dorian said. Also Chief walked stmt back later
# ::tokens ["Do", "n't", "understand", "your", "argument", "-", "we", "'re", "both", "on", "same", "side", ".", "Was", "repeating", "what", "Dorian", "said", ".", "Also", "Chief", "walked", "stmt", "back", "later"]
# ::lemmas ["do", "not", "understand", "your", "argument", "-", "we", "be", "both", "on", "same", "side", ".", "be", "repeat", "what", "Dorian", "say", ".", "also", "Chief", "walk", "stmt", "back", "later"]
(c11-0 / multi-sentence
       :snt1 (c11-13 / understand-01
                     :ARG0 (c11-15 / i)
                     :ARG1 (c11-6 / argue-01
                                  :ARG0 (c11-18 / you))
                     :ARG1-of (c11-21 / cause-01
                                      :ARG0 (c11-4 / side-01
                                                   :ARG0 (c11-12 / we
                                                                 :mod (c11-7 / both))
                                                   :ARG1-of (c11-8 / same-01)))
                     :polarity -)
       :snt2 (c11-11 / repeat-01
                     :ARG0 (c11-17 / i)
                     :ARG1 (c11-22 / thing
                                   :ARG1-of (c11-19 / say-01
                                                    :ARG0 (c11-2 / person
                                                                 :name (c11-9 / name
                                                                              :op1 "Doran")))))
       :snt3 (c11-1 / walk-01
                    :ARG0 (c11-5 / person
                                 :name c11-9
                                 :op1 "Chief"))
       :direction (c11-16 / back)
       :mod (c11-14 / also)
       :time (c11-10 / after)
       :time (c11-3 / date-entity
                    :dayperiod (c11-20 / night)))

# ::snt There is a very fishy fishing expedition going on in looking for excuses for murder.
# ::tokens ["There", "is", "a", "very", "fishy", "fishing", "expedition", "going", "on", "in", "looking", "for", "excuses", "for", "murder", "."]
# ::lemmas ["there", "be", "a", "very", "fishy", "fishing", "expedition", "go", "on", "in", "look", "for", "excuse", "for", "murder", "."]
(c12-7 / go-on-15
       :ARG1 (c12-4 / expedition
                    :purpose (c12-0 / fish-01)
                    :mod (c12-5 / fishy
                                :degree (c12-6 / very))
                    :purpose (c12-1 / look-01
                                    :ARG1 (c12-8 / thing
                                                 :ARG2-of (c12-3 / excuse-02
                                                                 :ARG1 (c12-2 / murder-01))))))

# ::snt Heard that friend was not going to be "charged" in any robbery since video shows it was other person
# ::tokens ["Heard", "that", "friend", "was", "not", "going", "to", "be", "\"", "charged", "\"", "in", "any", "robbery", "since", "video", "shows", "it", "was", "other", "person"]
# ::lemmas ["hear", "that", "friend", "be", "not", "go", "to", "be", "\"", "charge", "\"", "in", "any", "robbery", "since", "video", "show", "it", "be", "other", "person"]
(c13-0 / hear-01
       :ARG0 (c13-13 / heard-01
                     :ARG1 (c13-6 / charge-05
                                  :ARG1 (c13-4 / person
                                               :mod (c13-11 / that)
                                               :ARG0-of (c13-3 / have-rel-role-91
                                                               :ARG2 (c13-1 / friend)))
                                  :ARG2 (c13-5 / rob-01
                                               :mod (c13-10 / any))
                                  :ARG1-of (c13-7 / cause-01
                                                  :ARG0 (c13-9 / show-01
                                                               :ARG0 (c13-8 / video)
                                                               :ARG1 (c13-12 / person
                                                                             :mod (c13-2 / other)
                                                                             :domain c13-5)))
                                  :polarity -)))

# ::snt Max are you listening to what the Chief of Police said or do you just want to believe lies? Listen carefully
# ::tokens ["Max", "are", "you", "listening", "to", "what", "the", "Chief", "of", "Police", "said", "or", "do", "you", "just", "want", "to", "believe", "lies", "?", "Listen", "carefully"]
# ::lemmas ["Max", "be", "you", "listen", "to", "what", "the", "Chief", "of", "Police", "say", "or", "do", "you", "just", "want", "to", "believe", "lie", "?", "listen", "carefully"]
(c14-2 / multi-sentence
       :snt1 (c14-8 / ask-01
                    :ARG1 (c14-19 / truth-value
                                  :polarity-of (c14-10 / listen-01
                                                       :ARG0 (c14-16 / you)
                                                       :ARG1 (c14-14 / thing
                                                                     :ARG1-of (c14-6 / say-01
                                                                                     :ARG0 (c14-4 / person
                                                                                                  :ARG0-of (c14-9 / have-org-role-91
                                                                                                                  :ARG1 (c14-7 / police)
                                                                                                                  :ARG2 (c14-17 / chief))
                                                                                                  :ARG2-of c14-8)))))
                    :name (c14-12 / name
                                  :op1 "Max"))
       :snt2 (c14-13 / want-01
                     :ARG0 (c14-15 / you)
                     :ARG1 (c14-11 / believe-01
                                   :ARG0 c14-15
                                   :ARG1 c14-14
                                   :ARG1-of (c14-18 / lie-08)))
       :mod (c14-0 / just)
       :snt3 (c14-1 / listen-01
                    :ARG0 (c14-3 / you)
                    :manner (c14-5 / careful)
                    :mode imperative))

# ::snt IMO no shot should've happened. Call was unarmed suspect, cop had full description, easy to find where he lived
# ::tokens ["IMO", "no", "shot", "should", "'ve", "happened", ".", "Call", "was", "unarmed", "suspect", ",", "cop", "had", "full", "description", ",", "easy", "to", "find", "where", "he", "lived"]
# ::lemmas ["imo", "no", "shot", "should", "'ve", "happen", ".", "call", "be", "unarmed", "suspect", ",", "cop", "have", "full", "description", ",", "easy", "to", "find", "where", "he", "live"]
(c15-2 / multi-sentence
       :snt1 (c15-5 / opine-01
                    :ARG0 (c15-9 / i)
                    :ARG1 (c15-11 / recommend-01
                                  :ARG1 (c15-15 / shoot-02)
                                  :polarity -))
       :snt2 (c15-17 / and
                     :op1 (c15-6 / suspect-01
                                 :ARG1 (c15-12 / call-02)
                                 :ARG1-of (c15-8 / arm-01
                                                 :polarity -))
                     :op2 (c15-0 / have-03
                                 :ARG0 (c15-13 / cop)
                                 :ARG1 (c15-14 / describe-01
                                               :ARG0 c15-13
                                               :ARG1-of (c15-1 / full-09)))
                     :op3 (c15-7 / easy-05
                                 :ARG1 (c15-10 / find-01
                                               :ARG1 (c15-16 / thing
                                                             :location-of (c15-3 / live-01
                                                                                 :ARG0 (c15-4 / he)))))))

# ::snt Absolutely!
# ::tokens ["Absolutely", "!"]
# ::lemmas ["absolutely", "!"]
(c16-0 / absolute
       :mode expressive)

# ::snt TYPICAL OF COWARDS AND BULLIES
# ::tokens ["TYPICAL", "OF", "COWARDS", "AND", "BULLIES"]
# ::lemmas ["TYPICAL", "OF", "COWARDS", "and", "bully"]
(c17-3 / technical
       :domain (c17-5 / and
                      :op1 (c17-2 / person
                                  :ARG0-of (c17-0 / have-org-role-91
                                                  :ARG2 (c17-4 / president)))
                      :op2 (c17-1 / bull)))

# ::snt Affluent people and those in authority take it as an affront to be questioned, especially by lesser people
# ::tokens ["Affluent", "people", "and", "those", "in", "authority", "take", "it", "as", "an", "affront", "to", "be", "questioned", ",", "especially", "by", "lesser", "people"]
# ::lemmas ["affluent", "people", "and", "those", "in", "authority", "take", "it", "as", "an", "affront", "to", "be", "question", ",", "especially", "by", "less", "people"]
(c18-10 / take-04
        :ARG0 (c18-12 / and
                      :op1 (c18-8 / person
                                  :mod (c18-5 / affluence))
                      :op2 (c18-11 / person
                                   :mod (c18-7 / authority)))
        :ARG1 (c18-6 / it)
        :ARG2 (c18-9 / affront-01
                     :ARG0 (c18-4 / question-01
                                  :ARG0 (c18-2 / person
                                               :mod (c18-3 / especially)
                                               :ARG1-of (c18-0 / have-quant-91
                                                               :ARG3 (c18-1 / less)))
                                  :ARG1 c18-12)
                     :ARG1 c18-12))

# ::snt They had splice some tapes together.
# ::tokens ["They", "had", "splice", "some", "tapes", "together", "."]
# ::lemmas ["they", "have", "splice", "some", "tape", "together", "."]
(c19-3 / splice-01
       :ARG0 (c19-4 / they)
       :ARG1 (c19-2 / tape
                    :quant (c19-0 / some))
       :manner (c19-1 / together))

# ::snt Dorian admitted from day .Now rumor has it that store never called who called? tape?
# ::tokens ["Dorian", "admitted", "from", "day", ".Now", "rumor", "has", "it", "that", "store", "never", "called", "who", "called", "?", "tape", "?"]
# ::lemmas ["Dorian", "admit", "from", "day", ".now", "rumor", "have", "it", "that", "store", "never", "call", "who", "call", "?", "tape", "?"]
(c20-1 / multi-sentence
       :snt1 (c20-12 / admit-01
                     :ARG0 (c20-5 / person
                                  :name (c20-4 / name
                                               :op1 "Dorian"))
                     :time (c20-0 / from
                                  :op1 (c20-6 / day)))
       :snt2 (c20-7 / rumor-01
                    :ARG1 (c20-8 / call-02
                                 :ARG0 (c20-10 / store)
                                 :ARG1 (c20-11 / person
                                               :ARG0-of (c20-9 / call-02))
                                 :time (c20-2 / ever)
                                 :polarity -)
                    :ARG1-of (c20-3 / request-confirmation-91)))

# ::snt | We need to see/review the statement by officer Wilson on what happened.
# ::tokens ["|", "We", "need", "to", "see", "/", "review", "the", "statement", "by", "officer", "Wilson", "on", "what", "happened", "."]
# ::lemmas ["|", "we", "need", "to", "see", "/", "review", "the", "statement", "by", "officer", "Wilson", "on", "what", "happen", "."]
(c21-6 / need-01
       :ARG0 (c21-1 / we)
       :ARG1 (c21-3 / or
                    :op1 (c21-10 / see-01
                                 :ARG0 c21-1
                                 :ARG1 (c21-4 / state-01
                                              :ARG0 (c21-8 / person
                                                           :name (c21-7 / name
                                                                        :op1 "Wilson")
                                                           :ARG0-of (c21-0 / have-org-role-91
                                                                           :ARG2 (c21-2 / officer)))
                                              :ARG1 (c21-5 / event)))
                    :op2 (c21-9 / review-01
                                :ARG0 c21-1
                                :ARG1 c21-4)))

# ::snt Alasscan it's a lie. Pics are fake. No robbery was reported! If true, police would have said it last week to stop riots
# ::tokens ["Alasscan", "it", "'s", "a", "lie", ".", "Pics", "are", "fake", ".", "No", "robbery", "was", "reported", "!", "If", "true", ",", "police", "would", "have", "said", "it", "last", "week", "to", "stop", "riots"]
# ::lemmas ["Alasscan", "it", "be", "a", "lie", ".", "pic", "be", "fake", ".", "no", "robbery", "be", "report", "!", "if", "true", ",", "police", "would", "have", "say", "it", "last", "week", "to", "stop", "riot"]
(c22-2 / multi-sentence
       :snt1 (c22-10 / possible-01
                     :ARG1 (c22-12 / claim-01
                                   :ARG1 (c22-1 / lie-08
                                                :ARG1 (c22-8 / it)))
                     :polarity -)
       :snt2 (c22-3 / fake-02
                    :ARG1 (c22-17 / pic))
       :snt3 (c22-11 / report-01
                     :ARG1 (c22-9 / rob-01)
                     :polarity -)
       :snt4 (c22-15 / say-01
                     :ARG0 (c22-4 / police)
                     :ARG1 (c22-13 / it)
                     :time (c22-0 / week
                                  :mod (c22-14 / last))
                     :purpose (c22-6 / stop-01
                                     :ARG0 c22-4
                                     :ARG1 (c22-7 / riot-01))
                     :condition (c22-16 / true-01
                                        :ARG1 (c22-5 / it))))

# ::snt And at least Barney Fife would have been HONEST from the first hour.
# ::tokens ["And", "at", "least", "Barney", "Fife", "would", "have", "been", "HONEST", "from", "the", "first", "hour", "."]
# ::lemmas ["and", "at", "least", "Barney", "Fife", "would", "have", "be", "honest", "from", "the", "first", "hour", "."]
(c23-8 / and
       :op2 (c23-0 / have-degree-91
                   :ARG1 (c23-7 / person
                                :name (c23-6 / name
                                             :op1 "Barney"
                                             :op2 "Fife"))
                   :ARG2 (c23-3 / bad-07
                                :ARG1 c23-7)
                   :ARG3 (c23-2 / most)
                   :time (c23-1 / hour
                                :ord (c23-4 / ordinal-entity
                                            :value 1))
                   :mod (c23-5 / at-least)))

# ::snt I know : ( but sicker part is we don't know if Michael was dead or the let him die so he couldn't talk
# ::tokens ["I", "know", ":", "(", "but", "sicker", "part", "is", "we", "do", "n't", "know", "if", "Michael", "was", "dead", "or", "the", "let", "him", "die", "so", "he", "could", "n't", "talk"]
# ::lemmas ["i", "know", ":", "(", "but", "sicker", "part", "be", "we", "do", "not", "know", "if", "Michael", "be", "dead", "or", "the", "let", "he", "die", "so", "he", "could", "not", "talk"]
(c24-11 / contrast-01
        :ARG1 (c24-15 / know-01
                      :ARG0 (c24-7 / i))
        :ARG2 (c24-0 / have-degree-91
                     :ARG1 (c24-6 / know-01
                                  :ARG0 (c24-1 / we)
                                  :ARG1 (c24-5 / or
                                               :op1 (c24-10 / die-01
                                                            :ARG1 (c24-9 / person
                                                                         :name (c24-8 / name
                                                                                      :op1 "Michael")))
                                               :op2 (c24-3 / let-01
                                                           :ARG1 (c24-2 / die-01
                                                                        :ARG1 c24-9)
                                                           :ARG0-of (c24-12 / cause-01
                                                                            :ARG1 (c24-16 / possible-01
                                                                                          :ARG1 (c24-14 / talk-01
                                                                                                        :ARG0 c24-9)
                                                                                          :polarity -))))
                                  :polarity -)
                     :ARG2 (c24-13 / sick-05
                                   :ARG1 c24-6)
                     :ARG3 (c24-4 / more)))

# ::snt AND that attitude will be their downfall too. Bet on it.
# ::tokens ["AND", "that", "attitude", "will", "be", "their", "downfall", "too", ".", "Bet", "on", "it", "."]
# ::lemmas ["and", "that", "attitude", "will", "be", "their", "downfall", "too", ".", "bet", "on", "it", "."]
(c25-1 / multi-sentence
       :snt1 (c25-9 / and
                    :op2 (c25-6 / downfall
                                :poss (c25-8 / they)
                                :domain (c25-3 / attitude
                                               :mod (c25-7 / that))
                                :mod (c25-5 / too)))
       :snt2 (c25-2 / bet-01
                    :ARG0 (c25-0 / you)
                    :ARG2 (c25-4 / it)
                    :mode imperative))

# ::snt Corey, think we're gonna find out DWilson had no idea that MB had stolen Swishers. WAIT4 IT.
# ::tokens ["Corey", ",", "think", "we", "'re", "gon", "na", "find", "out", "DWilson", "had", "no", "idea", "that", "MB", "had", "stolen", "Swishers", ".", "WAIT4", "IT", "."]
# ::lemmas ["Corey", ",", "think", "we", "be", "going", "to", "find", "out", "DWilson", "have", "no", "idea", "that", "MB", "have", "steal", "Swishers", ".", "WAIT4", "IT", "."]
(c26-3 / multi-sentence
       :snt1 (c26-14 / think-01
                     :ARG0 (c26-9 / person
                                  :name (c26-7 / name
                                               :op1 "Corey"))
                     :ARG1 (c26-2 / find-out-03
                                  :ARG0 (c26-1 / we)
                                  :ARG1 (c26-0 / have-03
                                               :ARG0 (c26-15 / person
                                                             :name (c26-8 / name
                                                                          :op1 "DWilson"))
                                               :ARG1 (c26-5 / idea
                                                            :topic (c26-13 / steal-01
                                                                           :ARG0 (c26-4 / person
                                                                                        :name (c26-10 / name
                                                                                                      :op1 "MB"))
                                                                           :ARG1 (c26-12 / thing
                                                                                         :name (c26-11 / name
                                                                                                       :op1 "Swishers"))))
                                               :polarity -)))
       :snt2 (c26-6 / WAIT4))

# ::snt Dorian's lawyer said in CNN interview Dorian had admitted it as he give his witness statement
# ::tokens ["Dorian", "'s", "lawyer", "said", "in", "CNN", "interview", "Dorian", "had", "admitted", "it", "as", "he", "give", "his", "witness", "statement"]
# ::lemmas ["Dorian", "'s", "lawyer", "say", "in", "CNN", "interview", "Dorian", "have", "admit", "it", "as", "he", "give", "his", "witness", "statement"]
(c27-10 / say-01
        :ARG0 (c27-8 / person
                     :ARG0-of (c27-0 / have-rel-role-91
                                     :ARG1 (c27-11 / person
                                                   :name (c27-6 / name
                                                                :op1 "Dorian"))
                                     :ARG2 (c27-2 / lawyer)))
        :ARG1 (c27-12 / admit-01
                      :ARG0 c27-11
                      :ARG1 (c27-5 / it)
                      :time (c27-4 / state-01
                                   :ARG0 c27-11
                                   :ARG1 (c27-1 / witness-01
                                                :ARG0 c27-11)))
        :medium (c27-9 / interview-01
                       :ARG0 (c27-3 / publication
                                    :name (c27-7 / name
                                                 :op1 "CNN"))))

# ::snt More like why was trying to pull into police car thru the window?
# ::tokens ["More", "like", "why", "was", "trying", "to", "pull", "into", "police", "car", "thru", "the", "window", "?"]
# ::lemmas ["more", "like", "why", "be", "try", "to", "pull", "into", "police", "car", "thru", "the", "window", "?"]
(c28-3 / resemble-01
       :ARG2 (c28-7 / try-01
                    :ARG1 (c28-2 / pull-01
                                 :ARG1 (c28-4 / car
                                              :mod (c28-8 / police))
                                 :ARG2 (c28-6 / through
                                              :op1 (c28-0 / window)))
                    :ARG1-of (c28-5 / cause-01
                                    :ARG0 (c28-9 / amr-unknown)))
       :mod (c28-1 / more))

# ::snt shits not adding up. What convenient store was robbed? Who are the witnesses that called it in?
# ::tokens ["shits", "not", "adding", "up", ".", "What", "convenient", "store", "was", "robbed", "?", "Who", "are", "the", "witnesses", "that", "called", "it", "in", "?"]
# ::lemmas ["shit", "not", "add", "up", ".", "what", "convenient", "store", "be", "rob", "?", "who", "be", "the", "witness", "that", "call", "it", "in", "?"]
(c29-1 / multi-sentence
       :snt1 (c29-10 / add-up-04
                     :ARG1 (c29-3 / it)
                     :polarity -)
       :snt2 (c29-6 / rob-01
                    :ARG1 (c29-9 / store
                                 :mod (c29-7 / convenient)
                                 :mod (c29-2 / amr-unknown)))
       :snt3 (c29-5 / person
                    :ARG0-of (c29-0 / witness-01)
                    :ARG0-of (c29-8 / call-in-04
                                    :ARG1 c29-3)
                    :ARG2 (c29-4 / amr-unknown)))

# ::snt Where there is just enough justification that a person thinks they can get by with it.
# ::tokens ["Where", "there", "is", "just", "enough", "justification", "that", "a", "person", "thinks", "they", "can", "get", "by", "with", "it", "."]
# ::lemmas ["where", "there", "be", "just", "enough", "justification", "that", "a", "person", "think", "they", "can", "get", "by", "with", "it", "."]
(c30-2 / be-located-at-91
       :ARG1 (c30-0 / justify-01
                    :ARG1-of (c30-1 / have-quant-91
                                    :ARG3 (c30-3 / enough
                                                 :mod (c30-9 / just))
                                    :ARG6 (c30-8 / think-01
                                                 :ARG0 (c30-6 / person)
                                                 :ARG1 (c30-4 / possible-01
                                                              :ARG1 (c30-7 / get-by-17
                                                                           :ARG0 c30-6
                                                                           :ARG1 (c30-5 / it)))))))

# ::snt that's what they took days to concort ?...those situations don't seem related at all
# ::tokens ["that", "'s", "what", "they", "took", "days", "to", "concort", "?", "...", "those", "situations", "do", "n't", "seem", "related", "at", "all"]
# ::lemmas ["that", "be", "what", "they", "take", "days", "to", "concort", "?", "...", "those", "situation", "do", "not", "seem", "relate", "at", "all"]
(c31-0 / multi-sentence
       :snt1 (c31-11 / take-10
                     :polarity (c31-12 / amr-unknown)
                     :ARG0 (c31-7 / concort-01
                                  :ARG0 (c31-9 / they))
                     :ARG1 (c31-5 / multiple
                                  :op1 (c31-4 / temporal-quantity
                                              :unit (c31-6 / day)
                                              :quant 1)))
       :snt2 (c31-10 / seem-01
                     :ARG1 (c31-8 / relate-01
                                  :ARG1 (c31-1 / situation
                                               :mod (c31-2 / that))
                                  :ARG2 (c31-3 / at-all))
                     :polarity -))

# ::snt Makes me wonder since robbery report filled out day later. Also was cigarillo value raised?
# ::tokens ["Makes", "me", "wonder", "since", "robbery", "report", "filled", "out", "day", "later", ".", "Also", "was", "cigarillo", "value", "raised", "?"]
# ::lemmas ["make", "i", "wonder", "since", "robbery", "report", "fill", "out", "day", "later", ".", "also", "be", "cigarillo", "value", "raise", "?"]
(c32-2 / multi-sentence
       :snt1 (c32-8 / make-02
                    :ARG0 (c32-1 / fill-out-03
                                 :ARG1 (c32-9 / report-01
                                              :ARG1 (c32-6 / rob-01))
                                 :time (c32-14 / after
                                               :quant (c32-13 / temporal-quantity
                                                              :unit (c32-10 / day)
                                                              :quant 1)))
                    :ARG1 (c32-0 / wonder-01
                                 :ARG0 (c32-5 / i)))
       :snt2 (c32-3 / raise-01
                    :ARG1 (c32-7 / value
                                 :poss (c32-11 / cigarillo))
                    :polarity (c32-4 / amr-unknown)
                    :mod (c32-12 / also)))

# ::snt . - PD trying to make case for probable cause, initial st &amp; d shot, but can't for execution w/Hands Up
# ::tokens [".", "-", "PD", "trying", "to", "make", "case", "for", "probable", "cause", ",", "initial", "st", "&", "amp", ";", "d", "shot", ",", "but", "ca", "n't", "for", "execution", "w", "/", "Hands", "Up"]
# ::lemmas [".", "-", "PD", "try", "to", "make", "case", "for", "probable", "cause", ",", "initial", "st", "&", "amp", ";", "d", "shot", ",", "but", "can", "not", "for", "execution", "w", "/", "Hands", "up"]
(c33-8 / contrast-01
       :ARG1 (c33-11 / try-01
                     :ARG0 (c33-9 / government-organization
                                  :name (c33-5 / name
                                               :op1 "PD"))
                     :ARG1 (c33-7 / case-03
                                  :ARG0 c33-9
                                  :ARG1 (c33-10 / cause
                                                :mod (c33-6 / probable)
                                                :example (c33-13 / and
                                                                 :op1 (c33-12 / stand-amp)
                                                                 :op2 (c33-1 / shoot-02
                                                                             :mod (c33-4 / initial))))))
       :ARG2 (c33-2 / possible-01
                    :ARG1 (c33-3 / execute-01
                                 :manner (c33-0 / hand-up-00))
                    :polarity -))

# ::snt Absolutely my point!!
# ::tokens ["Absolutely", "my", "point", "!", "!"]
# ::lemmas ["absolutely", "my", "point", "!", "!"]
(c34-0 / point-04
       :ARG0 (c34-2 / i)
       :degree (c34-1 / absolute))

# ::snt Fri: Police LIED saying "friend' confessed to robbery. NOW Chief says, he did NOT commit crime
# ::tokens ["Fri", ":", "Police", "LIED", "saying", "\"", "friend", "'", "confessed", "to", "robbery", ".", "NOW", "Chief", "says", ",", "he", "did", "NOT", "commit", "crime"]
# ::lemmas ["fri", ":", "police", "LIED", "say", "\"", "friend", "'", "confess", "to", "robbery", ".", "now", "Chief", "say", ",", "he", "do", "not", "commit", "crime"]
(c35-2 / multi-sentence
       :snt1 (c35-1 / lie-08
                    :ARG0 (c35-7 / police)
                    :ARG1 (c35-13 / say-01
                                  :ARG0 c35-7
                                  :ARG1 (c35-9 / confess-01
                                               :ARG0 (c35-14 / person
                                                             :ARG0-of (c35-0 / have-rel-role-91
                                                                             :ARG2 (c35-3 / friend)))
                                               :ARG1 (c35-8 / rob-01
                                                            :ARG0 c35-14)))
                    :time (c35-10 / date-entity
                                  :weekday (c35-5 / friday)))
       :snt2 (c35-4 / say-01
                    :ARG0 (c35-11 / chief)
                    :ARG1 (c35-12 / commit-02
                                  :ARG0 (c35-15 / he)
                                  :ARG1 (c35-16 / crime-02)
                                  :polarity -)
                    :time (c35-6 / now)))

# ::snt . - Wilson knew he intentionally killed an alleged suspect trying to surrender to him &amp; people saw it.
# ::tokens [".", "-", "Wilson", "knew", "he", "intentionally", "killed", "an", "alleged", "suspect", "trying", "to", "surrender", "to", "him", "&", "amp", ";", "people", "saw", "it", "."]
# ::lemmas [".", "-", "Wilson", "know", "he", "intentionally", "kill", "an", "alleged", "suspect", "try", "to", "surrender", "to", "he", "&", "amp", ";", "people", "see", "it", "."]
(c36-12 / and
        :op1 (c36-10 / know-01
                     :ARG0 (c36-7 / person
                                  :name (c36-6 / name
                                               :op1 "Wilson"))
                     :ARG1 (c36-2 / kill-01
                                  :ARG0 c36-7
                                  :ARG1 (c36-11 / person
                                                :ARG2-of (c36-8 / suspect-01
                                                                :ARG1-of (c36-4 / allege-01))
                                                :ARG0-of (c36-9 / try-01
                                                                :ARG1 (c36-3 / surrender-01
                                                                             :ARG0 c36-11
                                                                             :ARG2 c36-7)))
                                  :ARG1-of (c36-5 / intend-01
                                                  :ARG0 c36-7)))
        :op2 (c36-0 / see-01
                    :ARG0 (c36-1 / person)
                    :ARG1 c36-2))

# ::snt Agreed, Dante!
# ::tokens ["Agreed", ",", "Dante", "!"]
# ::lemmas ["Agreed", ",", "Dante", "!"]
(c37-3 / say-01
       :ARG0 (c37-0 / i)
       :ARG1 (c37-4 / agree-01
                    :ARG0 c37-0)
       :ARG2 (c37-2 / person
                    :name (c37-1 / name
                                 :op1 "Dante"))
       :mode expressive)

# ::snt He is innocent of any death penalty offense. Even if assault is involved.
# ::tokens ["He", "is", "innocent", "of", "any", "death", "penalty", "offense", ".", "Even", "if", "assault", "is", "involved", "."]
# ::lemmas ["he", "be", "innocent", "of", "any", "death", "penalty", "offense", ".", "even", "if", "assault", "be", "involve", "."]
(c38-2 / multi-sentence
       :snt1 (c38-6 / innocent-01
                    :ARG1 (c38-0 / he)
                    :ARG2 (c38-3 / offend-03
                                 :mod (c38-7 / penalty
                                             :mod (c38-8 / die-01))
                                 :mod (c38-10 / any)))
       :snt2 (c38-1 / have-concession-91
                    :ARG2 (c38-4 / even-if
                                 :op1 (c38-9 / involve-01
                                             :ARG1 (c38-5 / assault-01)))))

# ::snt Sov. Citizen in Dallas this week PLANNED TO KILL COPS and was brought in alive, how come a Shoplifter is denied same courtesy?
# ::tokens ["Sov", ".", "Citizen", "in", "Dallas", "this", "week", "PLANNED", "TO", "KILL", "COPS", "and", "was", "brought", "in", "alive", ",", "how", "come", "a", "Shoplifter", "is", "denied", "same", "courtesy", "?"]
# ::lemmas ["sov", ".", "Citizen", "in", "Dallas", "this", "week", "PLANNED", "to", "kill", "cop", "and", "be", "bring", "in", "alive", ",", "how", "come", "a", "Shoplifter", "be", "deny", "same", "courtesy", "?"]
(c39-7 / deny-01
       :ARG1 (c39-8 / courtesy
                    :ARG1-of (c39-11 / same-01))
       :ARG2 (c39-6 / person
                    :ARG0-of (c39-3 / shoplift-01))
       :ARG1-of (c39-9 / cause-01
                       :ARG0 (c39-15 / amr-unknown)
                       :ARG1 c39-7)
       :ARG0 (c39-4 / and
                    :op1 (c39-14 / plan-01
                                 :ARG1 (c39-13 / kill-01
                                               :ARG1 (c39-10 / cop))
                                 :location (c39-16 / city
                                                   :name (c39-5 / name
                                                                :op1 "Dallas"))
                                 :time (c39-0 / week
                                              :mod (c39-12 / this)))
                    :op2 (c39-2 / bring-01
                                :ARG1 c39-6
                                :ARG2 c39-16
                                :manner (c39-1 / live-01
                                               :ARG0 c39-6))))

# ::snt . - The Barney Fife fear is real in , total excessive force is common practice. This was a murder!
# ::tokens [".", "-", "The", "Barney", "Fife", "fear", "is", "real", "in", ",", "total", "excessive", "force", "is", "common", "practice", ".", "This", "was", "a", "murder", "!"]
# ::lemmas [".", "-", "the", "Barney", "Fife", "fear", "be", "real", "in", ",", "total", "excessive", "force", "be", "common", "practice", ".", "this", "be", "a", "murder", "!"]
(c40-1 / multi-sentence
       :snt1 (c40-6 / real-04
                    :ARG1 (c40-0 / fear-01
                                 :ARG0 (c40-5 / person
                                              :name (c40-4 / name
                                                           :op1 "Barney"
                                                           :op2 "Fife"))))
       :snt2 (c40-11 / practice-01
                     :ARG1 (c40-3 / force-04
                                  :ARG1-of (c40-2 / excessive-02
                                                  :degree (c40-10 / total)))
                     :mod (c40-7 / common))
       :snt3 (c40-8 / murder-01
                    :domain (c40-9 / this)))

# ::snt . - Barney Fife would have tried to pull through a window too. Shades of Ernest T. Bass
# ::tokens [".", "-", "Barney", "Fife", "would", "have", "tried", "to", "pull", "through", "a", "window", "too", ".", "Shades", "of", "Ernest", "T.", "Bass"]
# ::lemmas [".", "-", "Barney", "Fife", "would", "have", "try", "to", "pull", "through", "a", "window", "too", ".", "shade", "of", "Ernest", "T.", "Bass"]
(c41-1 / multi-sentence
       :snt1 (c41-8 / try-01
                    :ARG0 (c41-5 / person
                                 :name (c41-3 / name
                                              :op1 "Barney"
                                              :op2 "Fife"))
                    :ARG1 (c41-9 / pull-01
                                 :ARG0 c41-5
                                 :ARG2 (c41-0 / window))
                    :mod (c41-6 / too))
       :snt2 (c41-7 / Shades
                    :topic (c41-2 / person
                                  :name (c41-4 / name
                                               :op1 "Ernest"
                                               :op2 "T."
                                               :op3 "Bass"))))

# ::snt a riot not a robbery suspect apprehended.
# ::tokens ["a", "riot", "not", "a", "robbery", "suspect", "apprehended", "."]
# ::lemmas ["a", "riot", "not", "a", "robbery", "suspect", "apprehend", "."]
(c42-3 / contrast-01
       :ARG1 (c42-2 / riot-01)
       :ARG2 (c42-5 / apprehend-01
                    :ARG1 (c42-1 / person
                                 :ARG2-of (c42-4 / suspect-01
                                                 :ARG1 (c42-0 / rob-01)))
                    :polarity -))

# ::snt There are pics of "strong arm robbery" clothing description/size of assailant similar BUT cop deadly force? No!
# ::tokens ["There", "are", "pics", "of", "\"", "strong", "arm", "robbery", "\"", "clothing", "description", "/", "size", "of", "assailant", "similar", "BUT", "cop", "deadly", "force", "?", "No", "!"]
# ::lemmas ["there", "be", "pic", "of", "\"", "strong", "arm", "robbery", "\"", "clothing", "description", "/", "size", "of", "assailant", "similar", "but", "cop", "deadly", "force", "?", "no", "!"]
(c43-9 / contrast-01
       :ARG1 (c43-6 / pic
                    :topic (c43-12 / slash
                                   :op1 (c43-8 / describe-01
                                               :ARG1 (c43-7 / rob-01
                                                            :mod (c43-15 / arm
                                                                         :ARG1-of (c43-2 / strong-02)))
                                               :ARG2 (c43-10 / clothing))
                                   :op2 (c43-0 / size
                                               :poss (c43-14 / person
                                                             :ARG0-of (c43-3 / assail-01)))
                                   :ARG1-of (c43-4 / resemble-01)))
       :ARG2 (c43-1 / force-04
                    :ARG0 (c43-11 / cop)
                    :ARG2 (c43-13 / kill-01)
                    :polarity (c43-5 / amr-unknown)))

# ::snt You're right! Police said fight started after cop told Michael to get out of street, walk on sidewalk! He was never a suspect!
# ::tokens ["You", "'re", "right", "!", "Police", "said", "fight", "started", "after", "cop", "told", "Michael", "to", "get", "out", "of", "street", ",", "walk", "on", "sidewalk", "!", "He", "was", "never", "a", "suspect", "!"]
# ::lemmas ["you", "be", "right", "!", "police", "say", "fight", "start", "after", "cop", "tell", "Michael", "to", "get", "out", "of", "street", ",", "walk", "on", "sidewalk", "!", "he", "be", "never", "a", "suspect", "!"]
(c44-0 / multi-sentence
       :snt1 (c44-11 / right-06
                     :ARG1 (c44-16 / you))
       :snt2 (c44-2 / say-01
                    :ARG0 (c44-1 / police)
                    :ARG1 (c44-8 / start-01
                                 :ARG1 (c44-6 / fight-01)
                                 :time (c44-4 / after
                                              :op1 (c44-20 / tell-01
                                                           :ARG0 (c44-19 / cop)
                                                           :ARG1 (c44-14 / and
                                                                         :op1 (c44-12 / get-05
                                                                                      :ARG1 (c44-3 / person
                                                                                                   :name (c44-10 / name
                                                                                                                 :op1 "Michael"))
                                                                                      :ARG2 (c44-18 / out-06
                                                                                                    :ARG1 c44-3
                                                                                                    :ARG2 (c44-17 / street)))
                                                                         :op2 (c44-13 / walk-01
                                                                                      :ARG0 c44-3
                                                                                      :ARG2 (c44-7 / sidewalk)))
                                                           :ARG2 c44-3))))
       :snt3 (c44-15 / suspect-01
                     :ARG2 (c44-5 / he)
                     :time (c44-9 / ever)
                     :polarity -))

# ::snt and his bullet would have been harmlessly in his pocket.
# ::tokens ["and", "his", "bullet", "would", "have", "been", "harmlessly", "in", "his", "pocket", "."]
# ::lemmas ["and", "his", "bullet", "would", "have", "be", "harmlessly", "in", "his", "pocket", "."]
(c45-5 / and
       :op2 (c45-2 / be-located-at-91
                   :ARG1 (c45-4 / bullet
                                :poss (c45-0 / he))
                   :ARG2 (c45-3 / pocket
                                :poss c45-0)
                   :ARG1-of (c45-1 / harm-01
                                   :polarity -)))

# ::snt Agree those Cops in are filled with so they hide behind military equipment, outrageous tactics
# ::tokens ["Agree", "those", "Cops", "in", "are", "filled", "with", "so", "they", "hide", "behind", "military", "equipment", ",", "outrageous", "tactics"]
# ::lemmas ["agree", "those", "cop", "in", "be", "fill", "with", "so", "they", "hide", "behind", "military", "equipment", ",", "outrageous", "tactic"]
(c46-12 / agree-01
        :ARG0 (c46-7 / i)
        :ARG1 (c46-1 / fill-01
                     :ARG1 (c46-9 / cop
                                  :mod (c46-11 / that))
                     :ARG2 (c46-10 / thing
                                   :ARG2-of (c46-0 / hide-01
                                                   :ARG1 c46-9
                                                   :location (c46-3 / behind
                                                                    :op1 (c46-6 / and
                                                                                :op1 (c46-5 / equipment
                                                                                            :mod (c46-2 / military))
                                                                                :op2 (c46-8 / tactic
                                                                                            :ARG0-of (c46-4 / outrageous-02))))))))

# ::snt how convenient for this police chief....he needs to just go
# ::tokens ["how", "convenient", "for", "this", "police", "chief", "....", "he", "needs", "to", "just", "go"]
# ::lemmas ["how", "convenient", "for", "this", "police", "chief", "....", "he", "need", "to", "just", "go"]
(c47-5 / convenient
       :degree (c47-8 / so)
       :beneficiary (c47-3 / person
                           :ARG0-of (c47-0 / have-org-role-91
                                           :ARG1 (c47-10 / police)
                                           :ARG2 (c47-4 / chief))
                           :mod (c47-9 / this))
       :ARG0-of (c47-7 / cause-01
                       :ARG1 (c47-2 / need-01
                                    :ARG0 c47-3
                                    :ARG1 (c47-6 / go-02
                                                 :ARG0 c47-3
                                                 :mod (c47-1 / just)))))

# ::snt . - PD new story is trying to establish: probable cause, justify st &amp; d shot, but can't justify extras.
# ::tokens [".", "-", "PD", "new", "story", "is", "trying", "to", "establish", ":", "probable", "cause", ",", "justify", "st", "&", "amp", ";", "d", "shot", ",", "but", "ca", "n't", "justify", "extras", "."]
# ::lemmas [".", "-", "PD", "new", "story", "be", "try", "to", "establish", ":", "probable", "cause", ",", "justify", "st", "&", "amp", ";", "d", "shot", ",", "but", "can", "not", "justify", "extra", "."]
(c48-13 / try-01
        :ARG0 (c48-12 / story
                      :ARG1-of (c48-5 / new-01)
                      :poss (c48-10 / government-organization
                                    :name (c48-6 / name
                                                 :op1 "PD")))
        :ARG1 (c48-2 / establish-01
                     :ARG0 c48-12
                     :ARG1 (c48-9 / contrast-01
                                  :ARG1 (c48-15 / and
                                                :op1 (c48-8 / cause
                                                            :mod (c48-7 / probable))
                                                :op2 (c48-0 / justify-01
                                                            :op1 (c48-3 / st-and-amp)
                                                            :op2 (c48-1 / shoot-02)
                                                            :ARG1 c48-15)))
                     :ARG2 (c48-14 / possible-01
                                   :ARG1 (c48-11 / justify-01
                                                 :ARG1 (c48-4 / add-02))
                                   :polarity -)))

# ::snt . - Even if robbery took place &amp; stop legal, actions after st &amp; d shot &amp; after put = MURDER
# ::tokens [".", "-", "Even", "if", "robbery", "took", "place", "&", "amp", ";", "stop", "legal", ",", "actions", "after", "st", "&", "amp", ";", "d", "shot", "&", "amp", ";", "after", "put", "=", "MURDER"]
# ::lemmas [".", "-", "even", "if", "robbery", "take", "place", "&", "amp", ";", "stop", "legal", ",", "action", "after", "st", "&", "amp", ";", "d", "shot", "&", "amp", ";", "after", "put", "=", "murder"]
(c49-6 / have-concession-91
       :ARG1 (c49-5 / and
                    :op1 (c49-4 / stop-01
                                :ARG0 (c49-15 / you)
                                :ARG1 (c49-14 / act-02
                                              :ARG0 c49-15
                                              :ARG1-of (c49-7 / legal-02))
                                :time (c49-12 / after
                                              :op1 (c49-18 / and
                                                           :op1 (c49-13 / rape-01)
                                                           :op2 (c49-17 / law)))
                                :mode imperative)
                    :op2 (c49-9 / shoot-02
                                :ARG0 c49-15
                                :time (c49-16 / after
                                              :op1 (c49-3 / put-03))
                                :mode imperative)
                    :op3 (c49-10 / equal-01
                                 :ARG1 c49-18
                                 :ARG2 (c49-0 / murder-01)))
       :ARG2 (c49-8 / even-if
                    :op1 (c49-1 / and
                                :op1 (c49-2 / rob-01
                                            :op2 (c49-11 / amp)))))

# ::snt are they calling Mike Brown a suspect? If so, why didn't he stop them and check them?
# ::tokens ["are", "they", "calling", "Mike", "Brown", "a", "suspect", "?", "If", "so", ",", "why", "did", "n't", "he", "stop", "them", "and", "check", "them", "?"]
# ::lemmas ["be", "they", "call", "Mike", "Brown", "a", "suspect", "?", "if", "so", ",", "why", "do", "not", "he", "stop", "they", "and", "check", "they", "?"]
(c50-2 / multi-sentence
       :snt1 (c50-9 / call-01
                    :ARG0 (c50-13 / they)
                    :ARG1 (c50-7 / person
                                 :name (c50-5 / name
                                              :op1 "Mike"
                                              :op2 "Brown"))
                    :ARG2 (c50-14 / person
                                  :ARG2-of (c50-11 / suspect-01))
                    :polarity (c50-15 / amr-unknown))
       :snt2 (c50-0 / have-condition-91
                    :ARG1 (c50-8 / cause-01
                                 :ARG0 (c50-4 / amr-unknown)
                                 :ARG1 (c50-6 / and
                                              :op1 (c50-3 / stop-01
                                                          :ARG0 (c50-1 / he)
                                                          :ARG1 (c50-10 / they)
                                                          :polarity -)
                                              :op2 (c50-12 / check-01
                                                           :ARG0 c50-1
                                                           :ARG1 c50-10
                                                           :polarity -)))
                    :ARG2 c50-9))
