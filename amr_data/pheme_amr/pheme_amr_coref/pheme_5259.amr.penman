# ::snt theres no way the picture on the right looks like yr old ,more like or older ? could be wrong thou
# ::tokens ["there", "s", "no", "way", "the", "picture", "on", "the", "right", "looks", "like", "yr", "old", ",", "more", "like", "or", "older", "?", "could", "be", "wrong", "thou"]
# ::lemmas ["there", "s", "no", "way", "the", "picture", "on", "the", "right", "look", "like", "yr", "old", ",", "more", "like", "or", "old", "?", "could", "be", "wrong", "thou"]
(c1-4 / multi-sentence
      :snt1 (c1-1 / way
                  :domain (c1-3 / look-02
                                :ARG0 (c1-10 / picture
                                             :location (c1-11 / right-04))
                                :ARG1 (c1-15 / person
                                             :ARG1-of (c1-0 / have-degree-91
                                                            :ARG2 (c1-8 / old)
                                                            :ARG3 (c1-12 / more))))
                  :polarity -)
      :snt2 (c1-6 / possible-01
                  :ARG1 (c1-9 / wrong-04
                              :ARG1 (c1-2 / you)
                              :ARG2 (c1-14 / person
                                           :ARG1-of (c1-16 / have-degree-91
                                                           :ARG2 (c1-5 / old)
                                                           :ARG3 (c1-7 / more))))
                  :polarity (c1-13 / amr-unknown)))

# ::snt c'est pas moi!
# ::tokens ["c'est", "pas", "moi", "!"]
# ::lemmas ["c'", "pas", "moi", "!"]
(c2-0 / amr-unintelligible
      :value "c'est pas moi")

# ::snt right... could be me ( past ) - no it isn't I am nowhere close to Sidney...
# ::tokens ["right", "...", "could", "be", "me", "(", "past", ")", "-", "no", "it", "is", "n't", "I", "am", "nowhere", "close", "to", "Sidney", "..."]
# ::lemmas ["right", "...", "could", "be", "i", "(", "past", ")", "-", "no", "it", "be", "not", "i", "be", "nowhere", "close", "to", "Sidney", "..."]
(c3-0 / multi-sentence
      :snt1 (c3-5 / right-06
                  :ARG2 (c3-4 / possible-01
                              :ARG1 (c3-1 / i)
                              :time (c3-9 / past)))
      :snt2 (c3-6 / close-10
                  :ARG1 (c3-7 / i)
                  :ARG2 (c3-8 / city
                              :name (c3-2 / name
                                          :op1 "Sidney"))
                  :mod (c3-3 / no)
                  :polarity -))

# ::snt could be Al Qaeda?
# ::tokens ["could", "be", "Al", "Qaeda", "?"]
# ::lemmas ["could", "be", "Al", "Qaeda", "?"]
(c4-1 / possible-01
      :ARG1 (c4-2 / criminal-organization
                  :name (c4-0 / name
                              :op1 "Al"
                              :op2 "Qaeda"))
      :polarity (c4-3 / amr-unknown))

# ::snt Dreadful, poor hostages and their loved ones, my heart goes out to them.
# ::tokens ["Dreadful", ",", "poor", "hostages", "and", "their", "loved", "ones", ",", "my", "heart", "goes", "out", "to", "them", "."]
# ::lemmas ["dreadful", ",", "poor", "hostage", "and", "their", "loved", "one", ",", "my", "heart", "go", "out", "to", "they", "."]
(c5-6 / go-01
      :ARG1 (c5-0 / heart
                  :part-of (c5-3 / i))
      :ARG4 (c5-7 / and
                  :op1 (c5-8 / hostage
                             :mod (c5-4 / poor))
                  :op2 (c5-2 / one
                             :ARG1-of (c5-1 / love-01
                                            :ARG0 c5-8)))
      :ARG1-of (c5-5 / dread-01))

# ::snt Where are the snipers perfect killshot
# ::tokens ["Where", "are", "the", "snipers", "perfect", "killshot"]
# ::lemmas ["where", "be", "the", "sniper", "perfect", "killshot"]
(c6-0 / be-located-at-91
      :ARG1 (c6-2 / sniper
                  :ARG1-of (c6-1 / perfect-02
                                 :ARG2 (c6-3 / killshot)))
      :ARG2 (c6-4 / amr-unknown))

# ::snt bet he's a backward convert.
# ::tokens ["bet", "he", "'s", "a", "backward", "convert", "."]
# ::lemmas ["bet", "he", "be", "a", "backward", "convert", "."]
(c7-3 / bet-01
      :ARG2 (c7-2 / convert-01
                  :mod (c7-1 / backward)
                  :domain (c7-0 / he)))

# ::snt A religion of peace, huh? Kind of like Russia keep E Germany safe for so long, huh?!
# ::tokens ["A", "religion", "of", "peace", ",", "huh", "?", "Kind", "of", "like", "Russia", "keep", "E", "Germany", "safe", "for", "so", "long", ",", "huh", "?", "!"]
# ::lemmas ["a", "religion", "of", "peace", ",", "huh", "?", "kind", "of", "like", "Russia", "keep", "E", "Germany", "safe", "for", "so", "long", ",", "huh", "?", "!"]
(c8-1 / multi-sentence
      :snt1 (c8-9 / religion
                  :mod (c8-8 / peace)
                  :ARG1-of (c8-5 / request-confirmation-91))
      :snt2 (c8-4 / resemble-01
                  :ARG2 (c8-13 / keep-02
                               :ARG0 (c8-10 / country
                                            :name (c8-6 / name
                                                        :op1 "Russia"))
                               :ARG1 (c8-12 / safe-01
                                            :ARG1 (c8-11 / country
                                                         :name (c8-7 / name
                                                                     :op1 "E"
                                                                     :op2 "Germany")))
                               :duration (c8-0 / long
                                               :degree (c8-2 / so)))
                  :mod (c8-3 / kind-of)
                  :ARG1-of c8-5))

# ::snt don't be too sure... LOL!
# ::tokens ["do", "n't", "be", "too", "sure", "...", "LOL", "!"]
# ::lemmas ["do", "not", "be", "too", "sure", "...", "lol", "!"]
(c9-4 / sure-02
      :ARG1-of (c9-0 / have-degree-91
                     :ARG2 (c9-5 / too))
      :ARG2-of (c9-1 / laugh-01
                     :ARG0 (c9-2 / i)
                     :manner (c9-3 / loud)
                     :mode expressive)
      :polarity -)

# ::snt didnt say u jean
# ::tokens ["did", "nt", "say", "u", "jean"]
# ::lemmas ["do", "not", "say", "u", "jean"]
(c10-0 / say-01
       :ARG0 (c10-3 / i)
       :ARG1 (c10-1 / person
                    :name (c10-2 / name
                                 :op1 "Jesus"))
       :polarity -)

# ::snt Muslims thousands of muslims take to the streets in " not in my name protests ". Oh wait a minute. ..
# ::tokens ["Muslims", "thousands", "of", "muslims", "take", "to", "the", "streets", "in", "\"", "not", "in", "my", "name", "protests", "\"", ".", "Oh", "wait", "a", "minute", ".", ".."]
# ::lemmas ["Muslims", "thousands", "of", "muslims", "take", "to", "the", "street", "in", "\"", "not", "in", "my", "name", "protest", "\"", ".", "oh", "wait", "a", "minute", ".", ".."]
(c12-2 / multi-sentence
       :snt1 (c12-11 / take-01
                     :ARG0 (c12-6 / person
                                  :mod (c12-7 / religious-group
                                              :name (c12-4 / name
                                                           :op1 "Islam"))
                                  :quant (c12-8 / multiple
                                                :op1 1000))
                     :ARG1 (c12-10 / street)
                     :manner (c12-12 / protest-01
                                     :ARG0 c12-6
                                     :manner (c12-5 / name
                                                    :poss c12-6)
                                     :polarity -))
       :snt2 (c12-0 / wait-01
                    :duration (c12-9 / temporal-quantity
                                     :unit (c12-1 / minute)
                                     :quant 1)
                    :mod (c12-3 / oh
                                :mode expressive)))
