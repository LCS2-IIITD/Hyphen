# ::snt may his name and image be quickly forgotten. Think of the hero's on this day
# ::tokens ["may", "his", "name", "and", "image", "be", "quickly", "forgotten", ".", "Think", "of", "the", "hero", "'s", "on", "this", "day"]
# ::lemmas ["may", "his", "name", "and", "image", "be", "quickly", "forget", ".", "think", "of", "the", "hero", "'s", "on", "this", "day"]
(c2-3 / multi-sentence
      :snt1 (c2-8 / possible-01
                  :ARG1 (c2-2 / forget-01
                              :ARG1 (c2-12 / and
                                           :op1 (c2-7 / name
                                                      :poss (c2-0 / he))
                                           :op2 (c2-6 / image
                                                      :poss c2-0))
                              :ARG1-of (c2-5 / quick-02)))
      :snt2 (c2-11 / think-01
                   :ARG0 (c2-1 / you)
                   :ARG2 (c2-4 / hero
                               :time (c2-9 / day
                                           :mod (c2-10 / this)))
                   :mode imperative))

# ::snt what a piece of shit. Too bad he took someone with him.
# ::tokens ["what", "a", "piece", "of", "shit", ".", "Too", "bad", "he", "took", "someone", "with", "him", "."]
# ::lemmas ["what", "a", "piece", "of", "shit", ".", "too", "bad", "he", "take", "someone", "with", "he", "."]
(c3-2 / multi-sentence
      :snt1 (c3-6 / piece
                  :consist-of (c3-8 / shit)
                  :degree (c3-4 / so))
      :snt2 (c3-0 / have-degree-91
                  :ARG1 (c3-9 / take-01
                              :ARG0 (c3-10 / he)
                              :ARG1 (c3-1 / someone)
                              :ARG3 (c3-5 / he))
                  :ARG2 (c3-3 / bad-07
                              :ARG1 c3-9)
                  :ARG3 (c3-7 / too)))

# ::snt ROT IN HELL....
# ::tokens ["ROT", "IN", "HELL", "...."]
# ::lemmas ["ROT", "in", "HELL", "...."]
(c4-1 / riot-01
      :location (c4-0 / hell))

# ::snt good riddance
# ::tokens ["good", "riddance"]
# ::lemmas ["good", "riddance"]
(c5-0 / riddance
      :ARG1-of (c5-1 / good-02))

# ::snt do not use his name or post his pic He doesn't deserve it!
# ::tokens ["do", "not", "use", "his", "name", "or", "post", "his", "pic", "He", "does", "n't", "deserve", "it", "!"]
# ::lemmas ["do", "not", "use", "his", "name", "or", "post", "his", "pic", "he", "do", "not", "deserve", "it", "!"]
(c6-3 / or
      :op1 (c6-2 / use-01
                 :ARG0 (c6-1 / you)
                 :ARG1 (c6-8 / thing
                             :ARG2-of (c6-4 / name-01
                                            :ARG1 (c6-0 / he)))
                 :mode imperative
                 :polarity -)
      :op2 (c6-5 / post-01
                 :ARG0 c6-1
                 :ARG1 (c6-9 / pic
                             :poss c6-0)
                 :mode imperative
                 :polarity -)
      :ARG1-of (c6-7 / cause-01
                     :ARG0 (c6-6 / deserve-01
                                 :ARG0 c6-0
                                 :ARG1 c6-9
                                 :polarity -)))

# ::snt This is the POS !
# ::tokens ["This", "is", "the", "POS", "!"]
# ::lemmas ["this", "be", "the", "POS", "!"]
(c7-1 / piece
      :ARG1-of (c7-0 / shit-01)
      :domain (c7-2 / this))

# ::snt Piece of Shit, Burn in hell
# ::tokens ["Piece", "of", "Shit", ",", "Burn", "in", "hell"]
# ::lemmas ["Piece", "of", "Shit", ",", "Burn", "in", "hell"]
(c8-4 / and
      :op1 (c8-2 / piece
                 :consist-of (c8-3 / shit))
      :op2 (c8-1 / burn-01
                 :location (c8-0 / hell)))

# ::snt well Mr. Trudeau should we still go offer bottles of maple syrup and hugs to
# ::tokens ["well", "Mr.", "Trudeau", "should", "we", "still", "go", "offer", "bottles", "of", "maple", "syrup", "and", "hugs", "to"]
# ::lemmas ["well", "Mr.", "Trudeau", "should", "we", "still", "go", "offer", "bottle", "of", "maple", "syrup", "and", "hug", "to"]
(c9-12 / say-01
       :ARG1 (c9-10 / recommend-01
                    :ARG1 (c9-11 / go-05
                                 :ARG0 (c9-1 / we)
                                 :ARG1 (c9-5 / offer-01
                                             :ARG0 c9-1
                                             :ARG1 (c9-13 / and
                                                          :op1 (c9-4 / bottle
                                                                     :consist-of (c9-6 / syrup
                                                                                       :mod (c9-3 / maple)))
                                                          :op2 (c9-0 / hug-01
                                                                     :ARG0 c9-1)))
                                 :mod (c9-2 / still))
                    :ARG2 (c9-9 / person
                                :name (c9-8 / name
                                            :op1 "Mr."
                                            :op2 "Truman"))
                    :mod (c9-7 / well))
       :ARG2 c9-9)
