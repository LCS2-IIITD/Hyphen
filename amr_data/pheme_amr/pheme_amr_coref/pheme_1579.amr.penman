# ::snt it's more like thank god sos and D aren't in la even tho I live in la .. To many groupies
# ::tokens ["it", "'s", "more", "like", "thank", "god", "sos", "and", "D", "are", "n't", "in", "la", "even", "tho", "I", "live", "in", "la", "..", "To", "many", "groupies"]
# ::lemmas ["it", "be", "more", "like", "thank", "god", "sos", "and", "d", "be", "not", "in", "la", "even", "tho", "i", "live", "in", "la", "..", "to", "many", "groupie"]
(c1-8 / resemble-01
      :ARG1 (c1-3 / be-located-at-91
                  :ARG1 (c1-14 / and
                               :op1 (c1-7 / person
                                          :name (c1-5 / name
                                                      :op1 "Sos"))
                               :op2 (c1-13 / person
                                           :name (c1-6 / name
                                                       :op1 "D")))
                  :ARG2 (c1-9 / city
                              :name (c1-10 / name
                                           :op1 "La"))
                  :concession (c1-1 / live-01
                                    :ARG0 (c1-4 / i)
                                    :location c1-9)
                  :polarity -)
      :ARG2 (c1-11 / group
                   :quant (c1-2 / many))
      :ARG2-of (c1-0 / have-degree-91
                     :ARG1 c1-3
                     :ARG3 (c1-12 / more)))

# ::snt they really do.
# ::tokens ["they", "really", "do", "."]
# ::lemmas ["they", "really", "do", "."]
(c2-1 / do-02
      :ARG0 (c2-2 / they)
      :ARG1-of (c2-0 / real-04))

# ::snt it's so scary omg.Why are people so bad? I can't got it.
# ::tokens ["it", "'s", "so", "scary", "omg", ".", "Why", "are", "people", "so", "bad", "?", "I", "ca", "n't", "got", "it", "."]
# ::lemmas ["it", "be", "so", "scary", "omg", ".", "why", "be", "people", "so", "bad", "?", "i", "can", "not", "got", "it", "."]
(c3-1 / multi-sentence
      :snt1 (c3-11 / scary-03
                   :ARG0 (c3-6 / it)
                   :degree (c3-5 / so)
                   :mod (c3-4 / oh-my-god
                              :mode expressive))
      :snt2 (c3-8 / cause-01
                  :ARG0 (c3-13 / amr-unknown)
                  :ARG1 (c3-3 / bad-07
                              :ARG1 (c3-7 / person)
                              :degree (c3-0 / so)))
      :snt3 (c3-12 / possible-01
                   :ARG1 (c3-9 / get-01
                               :ARG0 (c3-10 / i)
                               :ARG1 (c3-2 / it))
                   :polarity -))

# ::snt it is.I hope that will be everything okay without dead people or something.OMG praying for them.
# ::tokens ["it", "is", ".", "I", "hope", "that", "will", "be", "everything", "okay", "without", "dead", "people", "or", "something", ".", "OMG", "praying", "for", "them", "."]
# ::lemmas ["it", "be", ".", "i", "hope", "that", "will", "be", "everything", "okay", "without", "dead", "people", "or", "something", ".", "OMG", "pray", "for", "they", "."]
(c4-2 / multi-sentence
      :snt1 (c4-6 / it)
      :snt2 (c4-0 / hope-01
                  :ARG0 (c4-9 / i)
                  :ARG1 (c4-4 / okay-04
                              :ARG1 (c4-5 / everything)
                              :condition (c4-1 / or
                                               :op1 (c4-7 / person
                                                          :ARG1-of (c4-8 / die-01))
                                               :op2 (c4-10 / something)
                                               :polarity -)))
      :snt3 (c4-12 / pray-01
                   :ARG1 (c4-11 / they)
                   :mod (c4-3 / oh-my-god
                              :mode expressive)))

# ::snt what's happend?
# ::tokens ["what", "'s", "happend", "?"]
# ::lemmas ["what", "be", "happend", "?"]
(c5-0 / event
      :mod (c5-1 / amr-unknown))

# ::snt a terrorist took people hostage
# ::tokens ["a", "terrorist", "took", "people", "hostage"]
# ::lemmas ["a", "terrorist", "take", "people", "hostage"]
(c6-2 / take-01
      :ARG0 (c6-3 / terrorist)
      :ARG1 (c6-0 / hostage)
      :ARG2 (c6-1 / person))

# ::snt it's pretty scary
# ::tokens ["it", "'s", "pretty", "scary"]
# ::lemmas ["it", "be", "pretty", "scary"]
(c7-0 / scary-03
      :ARG0 (c7-2 / it)
      :degree (c7-1 / pretty))

# ::snt sorry ,i mean get it
# ::tokens ["sorry", ",", "i", "mean", "get", "it"]
# ::lemmas ["sorry", ",", "i", "mean", "get", "it"]
(c8-6 / and
      :op1 (c8-5 / sorry-01
                 :ARG1 (c8-2 / i))
      :op2 (c8-1 / mean-01
                 :ARG0 c8-2
                 :ARG2 (c8-3 / get-30
                             :ARG0 (c8-0 / you)
                             :ARG1 (c8-4 / it)
                             :mode imperative)))

# ::snt me Neither. It's frustrating that people do this
# ::tokens ["me", "Neither", ".", "It", "'s", "frustrating", "that", "people", "do", "this"]
# ::lemmas ["i", "Neither", ".", "it", "be", "frustrating", "that", "people", "do", "this"]
(c9-1 / multi-sentence
      :snt1 (c9-2 / i)
      :snt2 (c9-0 / frustrate-01
                  :ARG0 (c9-4 / do-02
                              :ARG0 (c9-3 / person)
                              :ARG1 (c9-5 / this))))

# ::snt yeah. Some people have to sort out there priorities
# ::tokens ["yeah", ".", "Some", "people", "have", "to", "sort", "out", "there", "priorities"]
# ::lemmas ["yeah", ".", "some", "people", "have", "to", "sort", "out", "there", "priority"]
(c10-1 / multi-sentence
       :snt1 (c10-0 / yeah)
       :snt2 (c10-2 / obligate-01
                    :ARG1 (c10-4 / person
                                 :mod (c10-5 / some))
                    :ARG2 (c10-3 / sort-out-02
                                 :ARG0 c10-4
                                 :ARG1 (c10-6 / priority
                                              :poss c10-4))))

# ::snt someone was/is holding hostages in a cafe
# ::tokens ["someone", "was", "/", "is", "holding", "hostages", "in", "a", "cafe"]
# ::lemmas ["someone", "be", "/", "be", "hold", "hostage", "in", "a", "cafe"]
(c11-0 / hold-01
       :ARG0 (c11-2 / someone)
       :ARG1 (c11-3 / hostage)
       :location (c11-1 / cafe))

# ::snt what's going on in Sydney
# ::tokens ["what", "'s", "going", "on", "in", "Sydney"]
# ::lemmas ["what", "be", "go", "on", "in", "Sydney"]
(c12-1 / event
       :mod (c12-3 / amr-unknown)
       :location (c12-2 / city
                        :name (c12-0 / name
                                     :op1 "Sydney")))

# ::snt AND PEOPLE ONLY CARE ABOUT THE FACT THAT D or SOS IS NOT THERE
# ::tokens ["AND", "PEOPLE", "ONLY", "CARE", "ABOUT", "THE", "FACT", "THAT", "D", "or", "SOS", "IS", "NOT", "THERE"]
# ::lemmas ["and", "people", "only", "care", "about", "the", "fact", "THAT", "D", "or", "SOS", "be", "not", "there"]
(c13-10 / and
        :op2 (c13-7 / care-01
                    :ARG0 (c13-5 / person)
                    :ARG1 (c13-1 / be-located-at-91
                                 :ARG1 (c13-2 / or
                                              :op1 (c13-9 / thing
                                                          :name (c13-3 / name
                                                                       :op1 "D"))
                                              :op2 (c13-8 / thing
                                                          :name (c13-4 / name
                                                                       :op1 "SOS")))
                                 :ARG2 (c13-6 / there)
                                 :polarity -)
                    :mod (c13-0 / only)))

# ::snt what happened??
# ::tokens ["what", "happened", "?", "?"]
# ::lemmas ["what", "happen", "?", "?"]
(c14-0 / amr-unknown)

# ::snt exactly celebs aren't the only people in the world that matter this world is fucked up
# ::tokens ["exactly", "celebs", "are", "n't", "the", "only", "people", "in", "the", "world", "that", "matter", "this", "world", "is", "fucked", "up"]
# ::lemmas ["exactly", "celebs", "be", "not", "the", "only", "people", "in", "the", "world", "that", "matter", "this", "world", "be", "fuck", "up"]
(c15-1 / fuck-up-02
       :ARG1 (c15-6 / person
                    :mod (c15-3 / only
                                :polarity -)
                    :location (c15-0 / world)
                    :ARG0-of (c15-2 / matter-01
                                    :ARG1 (c15-5 / world
                                                 :mod (c15-8 / this)))
                    :domain (c15-7 / celebrity)
                    :mod (c15-4 / exact)))

# ::snt I live in Sydney and I didn't know until now omfg
# ::tokens ["I", "live", "in", "Sydney", "and", "I", "did", "n't", "know", "until", "now", "omfg"]
# ::lemmas ["i", "live", "in", "Sydney", "and", "i", "do", "not", "know", "until", "now", "omfg"]
(c16-8 / and
       :op1 (c16-0 / live-01
                   :ARG0 (c16-3 / i)
                   :location (c16-6 / city
                                    :name (c16-4 / name
                                                 :op1 "Sydney")))
       :op2 (c16-7 / know-01
                   :ARG0 c16-3
                   :time (c16-1 / until
                                :op1 (c16-5 / now))
                   :mod (c16-2 / omfg
                               :mode expressive)
                   :polarity -))

# ::snt omg I hope everything works out fine , don't worry they're in my prayers
# ::tokens ["omg", "I", "hope", "everything", "works", "out", "fine", ",", "do", "n't", "worry", "they", "'re", "in", "my", "prayers"]
# ::lemmas ["omg", "i", "hope", "everything", "work", "out", "fine", ",", "do", "not", "worry", "they", "be", "in", "my", "prayer"]
(c17-0 / hope-01
       :ARG0 (c17-5 / i)
       :ARG1 (c17-1 / work-out-02
                    :ARG1 (c17-4 / everything)
                    :ARG1-of (c17-2 / fine-04))
       :mod (c17-3 / oh-my-god
                   :mode expressive)
       :ARG0-of (c17-6 / worry-01
                       :ARG1 (c17-8 / they
                                    :ARG2-of (c17-7 / pray-01
                                                    :ARG0 c17-5))
                       :polarity -))

# ::snt what's going on??
# ::tokens ["what", "'s", "going", "on", "?", "?"]
# ::lemmas ["what", "be", "go", "on", "?", "?"]
(c18-1 / amr-unknown
       :mod (c18-0 / event))

# ::snt OMG,i hope they're okay!!
# ::tokens ["OMG", ",", "i", "hope", "they", "'re", "okay", "!", "!"]
# ::lemmas ["OMG", ",", "i", "hope", "they", "be", "okay", "!", "!"]
(c19-0 / hope-01
       :ARG0 (c19-3 / i)
       :ARG1 (c19-2 / okay-03
                    :ARG1 (c19-4 / they))
       :mod (c19-1 / oh-my-god
                   :mode expressive)
       :mode expressive)

# ::snt there is a terrorist siege. It's shit scary
# ::tokens ["there", "is", "a", "terrorist", "siege", ".", "It", "'s", "shit", "scary"]
# ::lemmas ["there", "be", "a", "terrorist", "siege", ".", "it", "be", "shit", "scary"]
(c20-1 / multi-sentence
       :snt1 (c20-4 / siege-01
                    :ARG0 (c20-5 / terrorist))
       :snt2 (c20-2 / scary-03
                    :ARG0 (c20-3 / it)
                    :mod (c20-0 / shit)))

# ::snt -2 gunmen are keeping about people hostage in the Lindt cafe and one was holding up a Islamic flag
# ::tokens ["-2", "gunmen", "are", "keeping", "about", "people", "hostage", "in", "the", "Lindt", "cafe", "and", "one", "was", "holding", "up", "a", "Islamic", "flag"]
# ::lemmas ["-2", "gunman", "be", "keep", "about", "people", "hostage", "in", "the", "Lindt", "cafe", "and", "one", "be", "hold", "up", "a", "Islamic", "flag"]
(c21-10 / and
        :op1 (c21-9 / keep-02
                    :ARG0 (c21-8 / gunman
                                 :quant 2)
                    :ARG1 (c21-0 / hostage
                                 :domain (c21-5 / person))
                    :location (c21-7 / cafe
                                     :name (c21-3 / name
                                                  :op1 "Lindt")))
        :op2 (c21-1 / hold-up-11
                    :ARG0 c21-8
                    :ARG1 (c21-2 / flag
                                 :mod (c21-6 / religious-group
                                             :name (c21-4 / name
                                                          :op1 "Islam")))))

# ::snt a terrorist has taken eleven people hostage in a restaurant. It's pretty scary
# ::tokens ["a", "terrorist", "has", "taken", "eleven", "people", "hostage", "in", "a", "restaurant", ".", "It", "'s", "pretty", "scary"]
# ::lemmas ["a", "terrorist", "have", "take", "eleven", "people", "hostage", "in", "a", "restaurant", ".", "it", "be", "pretty", "scary"]
(c22-1 / multi-sentence
       :snt1 (c22-7 / take-01
                    :ARG0 (c22-5 / terrorist)
                    :ARG1 (c22-3 / person
                                 :quant 11)
                    :ARG2 (c22-0 / hostage)
                    :location (c22-4 / restaurant))
       :snt2 (c22-6 / scary-03
                    :ARG0 (c22-2 / it)
                    :degree (c22-8 / pretty)))

# ::snt same. According to the news they're trying to get the hostages out now.
# ::tokens ["same", ".", "According", "to", "the", "news", "they", "'re", "trying", "to", "get", "the", "hostages", "out", "now", "."]
# ::lemmas ["same", ".", "accord", "to", "the", "news", "they", "be", "try", "to", "get", "the", "hostage", "out", "now", "."]
(c23-1 / multi-sentence
       :snt1 (c23-8 / same-01)
       :snt2 (c23-3 / say-01
                    :ARG0 (c23-4 / news)
                    :ARG1 (c23-9 / try-01
                                 :ARG0 (c23-7 / they)
                                 :ARG1 (c23-6 / get-05
                                              :ARG0 c23-7
                                              :ARG1 (c23-0 / hostage)
                                              :ARG2 (c23-2 / out)
                                              :time (c23-5 / now)))))

# ::snt it is. People can be so rude
# ::tokens ["it", "is", ".", "People", "can", "be", "so", "rude"]
# ::lemmas ["it", "be", ".", "people", "can", "be", "so", "rude"]
(c24-0 / multi-sentence
       :snt1 (c24-1 / it)
       :snt2 (c24-2 / possible-01
                    :ARG1 (c24-3 / rude-01
                                 :ARG1 (c24-5 / person)
                                 :degree (c24-4 / so))))
