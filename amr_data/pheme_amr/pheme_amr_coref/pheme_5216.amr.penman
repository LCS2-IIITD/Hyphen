# ::snt : BREAKING: Two Charlie Hebdo attack suspects in Dammartin-en-Goele killed by security forces: govt source.
# ::tokens [":", "BREAKING", ":", "Two", "Charlie", "Hebdo", "attack", "suspects", "in", "Dammartin", "-", "en", "-", "Goele", "killed", "by", "security", "forces", ":", "govt", "source", "."]
# ::lemmas [":", "breaking", ":", "Two", "Charlie", "Hebdo", "attack", "suspect", "in", "Dammartin", "-", "en", "-", "Goele", "kill", "by", "security", "force", ":", "govt", "source", "."]
(c1-2 / break-AKING
      :ARG1 (c1-6 / person
                  :ARG2-of (c1-10 / suspect-01
                                  :ARG1 (c1-12 / attack-01
                                               :ARG1 (c1-1 / magazine
                                                           :name (c1-4 / name
                                                                       :op1 "Charlie"
                                                                       :op2 "Ch Hebdo"))))
                  :ARG1-of (c1-11 / kill-01
                                  :ARG0 (c1-0 / force
                                              :mod (c1-3 / security)))
                  :location (c1-8 / city
                                  :name (c1-5 / name
                                              :op1 "Dammartin-en-Goele"))
                  :quant 2)
      :source (c1-9 / government-organization
                    :ARG0-of (c1-7 / govern-01)))

# ::snt good
# ::tokens ["good"]
# ::lemmas ["good"]
(c2-0 / good-02)

# ::snt : BREAKING: Two Charlie Hebdo attack suspects in Dammartin-en-Goele killed by security forces: govt source.
# ::tokens [":", "BREAKING", ":", "Two", "Charlie", "Hebdo", "attack", "suspects", "in", "Dammartin", "-", "en", "-", "Goele", "killed", "by", "security", "forces", ":", "govt", "source", "."]
# ::lemmas [":", "breaking", ":", "Two", "Charlie", "Hebdo", "attack", "suspect", "in", "Dammartin", "-", "en", "-", "Goele", "kill", "by", "security", "force", ":", "govt", "source", "."]
(c3-2 / break-AKING
      :ARG1 (c3-6 / person
                  :ARG2-of (c3-10 / suspect-01
                                  :ARG1 (c3-12 / attack-01
                                               :ARG1 (c3-1 / magazine
                                                           :name (c3-4 / name
                                                                       :op1 "Charlie"
                                                                       :op2 "Ch Hebdo"))))
                  :ARG1-of (c3-11 / kill-01
                                  :ARG0 (c3-0 / force
                                              :mod (c3-3 / security)))
                  :location (c3-8 / city
                                  :name (c3-5 / name
                                              :op1 "Dammartin-en-Goele"))
                  :quant 2)
      :source (c3-9 / government-organization
                    :ARG0-of (c3-7 / govern-01)))

# ::snt We're fully ISO-9001 compliant.
# ::tokens ["We", "'re", "fully", "ISO-9001", "compliant", "."]
# ::lemmas ["we", "be", "fully", "iso-9001", "compliant", "."]
(c4-3 / comply-01
      :ARG0 (c4-0 / we)
      :ARG1 (c4-4 / thing
                  :name (c4-2 / name
                              :op1 "ISO-9001"))
      :mod (c4-1 / full))

# ::snt those shithead rabid dogs finally got
# ::tokens ["those", "shithead", "rabid", "dogs", "finally", "got"]
# ::lemmas ["those", "shithead", "rabid", "dog", "finally", "get"]
(c5-3 / get-01
      :ARG0 (c5-2 / dog
                  :mod (c5-1 / rabid)
                  :mod (c5-4 / shithead)
                  :mod (c5-5 / that))
      :time (c5-0 / final))

# ::snt the best notice.
# ::tokens ["the", "best", "notice", "."]
# ::lemmas ["the", "good", "notice", "."]
(c6-0 / notice-03
      :ARG1-of (c6-1 / have-degree-91
                     :ARG2 (c6-3 / good-02
                                 :ARG1 c6-0)
                     :ARG3 (c6-2 / most)))

# ::snt The world fed up with these self-glorified shitheads. Hooray for the French authorities killing more terrorists in this world war.
# ::tokens ["The", "world", "fed", "up", "with", "these", "self", "-", "glorified", "shitheads", ".", "Hooray", "for", "the", "French", "authorities", "killing", "more", "terrorists", "in", "this", "world", "war", "."]
# ::lemmas ["the", "world", "feed", "up", "with", "these", "self", "-", "glorify", "shithead", ".", "Hooray", "for", "the", "French", "authority", "kill", "more", "terrorist", "in", "this", "world", "war", "."]
(c7-3 / multi-sentence
      :snt1 (c7-2 / feed-up-03
                  :ARG1 (c7-1 / world)
                  :ARG2 (c7-12 / shithead
                               :ARG1-of (c7-10 / glorify-01
                                               :ARG0 c7-12)
                               :mod (c7-13 / this)))
      :snt2 (c7-0 / hooray
                  :beneficiary (c7-4 / kill-01
                                     :ARG0 (c7-14 / authority
                                                  :mod (c7-9 / country
                                                             :name (c7-5 / name
                                                                         :op1 "France")))
                                     :ARG1 (c7-11 / terrorist
                                                  :mod (c7-7 / more))
                                     :time (c7-6 / war
                                                 :mod (c7-8 / this)))
                  :mode expressive))

# ::snt DO NOT mess with the French.
# ::tokens ["DO", "NOT", "mess", "with", "the", "French", "."]
# ::lemmas ["do", "not", "mess", "with", "the", "French", "."]
(c8-1 / mess-01
      :ARG0 (c8-0 / you)
      :ARG1 (c8-3 / person
                  :mod (c8-4 / country
                             :name (c8-2 / name
                                         :op1 "France")))
      :mode imperative
      :polarity -)

# ::snt let's see their dead bodies..
# ::tokens ["let", "'s", "see", "their", "dead", "bodies", ".."]
# ::lemmas ["let", "us", "see", "their", "dead", "body", ".."]
(c10-3 / see-01
       :ARG0 (c10-0 / we)
       :ARG1 (c10-1 / body
                    :poss (c10-4 / they)
                    :ARG1-of (c10-2 / die-01))
       :mode imperative)

# ::snt Finally some justice.
# ::tokens ["Finally", "some", "justice", "."]
# ::lemmas ["finally", "some", "justice", "."]
(c11-0 / justice
       :quant (c11-2 / some)
       :mod (c11-1 / final))

# ::snt Glad it is over but it shouldn't have taken France + hours to get those assholes. Wake up
# ::tokens ["Glad", "it", "is", "over", "but", "it", "should", "n't", "have", "taken", "France", "+", "hours", "to", "get", "those", "assholes", ".", "Wake", "up"]
# ::lemmas ["glad", "it", "be", "over", "but", "it", "should", "not", "have", "take", "France", "+", "hour", "to", "get", "those", "asshole", ".", "wake", "up"]
(c12-3 / multi-sentence
       :snt1 (c12-10 / contrast-01
                     :ARG1 (c12-11 / glad-02
                                   :ARG0 (c12-4 / over-01
                                                :ARG1 (c12-5 / it)))
                     :ARG2 (c12-9 / recommend-01
                                  :ARG1 (c12-15 / take-10
                                                :ARG0 (c12-12 / get-04
                                                              :ARG1 (c12-16 / asshole
                                                                            :mod (c12-13 / that)))
                                                :ARG2 (c12-8 / more-than
                                                             :op1 (c12-7 / temporal-quantity
                                                                         :unit (c12-0 / hour)
                                                                         :quant 1))
                                                :ARG3 (c12-14 / country
                                                              :name (c12-6 / name
                                                                           :op1 "France")))
                                  :polarity -))
       :snt2 (c12-1 / wake-up-02
                    :ARG0 (c12-2 / you
                                 :ARG1-of c12-1)
                    :mode imperative))

# ::snt BREAKING: Two Charlie Hebdo attack suspects in Dammartin-en-Goele killed by security forces: govt source.
# ::tokens ["BREAKING", ":", "Two", "Charlie", "Hebdo", "attack", "suspects", "in", "Dammartin", "-", "en", "-", "Goele", "killed", "by", "security", "forces", ":", "govt", "source", "."]
# ::lemmas ["break", ":", "Two", "Charlie", "Hebdo", "attack", "suspect", "in", "Dammartin", "-", "en", "-", "Goele", "kill", "by", "security", "force", ":", "govt", "source", "."]
(c13-7 / report-01
       :ARG0 (c13-11 / source
                     :mod (c13-9 / government-organization
                                 :ARG0-of (c13-8 / govern-01)))
       :ARG1 (c13-12 / kill-01
                     :ARG0 (c13-0 / force
                                  :mod (c13-3 / security))
                     :ARG1 (c13-6 / person
                                  :ARG2-of (c13-1 / suspect-01
                                                  :ARG1 (c13-13 / attack-01
                                                                :ARG0 (c13-2 / magazine
                                                                             :name (c13-4 / name
                                                                                          :op1 "Charlie"
                                                                                          :op2 "Ch Hebdo"))))
                                  :location (c13-10 / city
                                                    :name (c13-5 / name
                                                                 :op1 "Dammartin-en-Goele"))
                                  :quant 2)))

# ::snt funny that. You'd think they'd be more useful alive for information.
# ::tokens ["funny", "that", ".", "You", "'d", "think", "they", "'d", "be", "more", "useful", "alive", "for", "information", "."]
# ::lemmas ["funny", "that", ".", "you", "would", "think", "they", "would", "be", "more", "useful", "alive", "for", "information", "."]
(c14-3 / multi-sentence
       :snt1 (c14-2 / funny
                    :domain (c14-9 / that))
       :snt2 (c14-8 / think-01
                    :ARG0 (c14-1 / you)
                    :ARG1 (c14-0 / have-degree-91
                                 :ARG1 (c14-6 / they)
                                 :ARG2 (c14-4 / useful-05
                                              :ARG1 c14-6
                                              :ARG2 (c14-5 / information))
                                 :ARG3 (c14-7 / more))))

# ::snt wen d fanatics were busy fckin bali,mumbai,madrid,london,NY ,french were sayin "Keep Calm",nw c d reaction, hipocrites
# ::tokens ["wen", "d", "fanatics", "were", "busy", "fckin", "bali", ",", "mumbai", ",", "madrid", ",", "london", ",", "NY", ",", "french", "were", "sayin", "\"", "Keep", "Calm\",nw", "c", "d", "reaction", ",", "hipocrites"]
# ::lemmas ["wen", "d", "fanatic", "be", "busy", "fckin", "bali", ",", "mumbai", ",", "madrid", ",", "london", ",", "NY", ",", "french", "be", "sayin", "\"", "Keep", "Calm\",nw", "c", "d", "reaction", ",", "hipocrite"]
(c15-5 / and
       :op1 (c15-9 / busy-01
                   :ARG1 (c15-8 / fanatic
                                :name (c15-10 / name
                                              :op1 "wen"
                                              :op2 "d"))
                   :ARG2 (c15-18 / fuck-01
                                 :ARG0 c15-8
                                 :ARG1 (c15-13 / and
                                               :op1 (c15-20 / city
                                                            :name (c15-19 / name
                                                                          :op1 "Bali"))
                                               :op2 (c15-3 / city
                                                           :name (c15-1 / name
                                                                        :op1 "Mumbai"))
                                               :op3 (c15-14 / city
                                                            :name (c15-2 / name
                                                                         :op1 "Madrid"))
                                               :op4 (c15-16 / city
                                                            :name (c15-21 / name
                                                                          :op1 "London"))
                                               :op5 (c15-0 / city
                                                           :name (c15-7 / name
                                                                        :op1 "NY")))))
       :op2 (c15-4 / say-01
                   :ARG0 c15-8
                   :ARG1 (c15-15 / keep-02
                                 :ARG0 (c15-17 / you)
                                 :ARG1 (c15-12 / calm-03
                                               :ARG1 c15-17)
                                 :mode imperative))
       :op3 (c15-11 / react-01
                    :ARG0 (c15-6 / hipocrites)
                    :ARG1 c15-4)
       :ARG1-of c15-4)

# ::snt Do you think Jobs would have giving these assholes a life or was it just destiny's dirty little trick
# ::tokens ["Do", "you", "think", "Jobs", "would", "have", "giving", "these", "assholes", "a", "life", "or", "was", "it", "just", "destiny", "'s", "dirty", "little", "trick"]
# ::lemmas ["do", "you", "think", "Jobs", "would", "have", "give", "these", "asshole", "a", "life", "or", "be", "it", "just", "destiny", "'s", "dirty", "little", "trick"]
(c17-13 / amr-choice
        :op1 (c17-12 / think-01
                     :ARG0 (c17-1 / you)
                     :ARG1 (c17-10 / give-01
                                   :ARG0 (c17-7 / person
                                                :name (c17-5 / name
                                                             :op1 "Jobs"))
                                   :ARG1 (c17-3 / life)
                                   :ARG2 (c17-4 / asshole
                                                :mod (c17-11 / this))))
        :op2 (c17-6 / trick-01
                    :ARG0 (c17-8 / destiny)
                    :ARG1 c17-10
                    :mod (c17-9 / little)
                    :ARG1-of (c17-2 / dirty-02)
                    :mod (c17-0 / just)))
