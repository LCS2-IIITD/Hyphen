# ::snt just another
# ::tokens ["just", "another"]
# ::lemmas ["just", "another"]
(c1-1 / another
      :mod (c1-0 / just))

# ::snt Voltaire didn't actually say that.
# ::tokens ["Voltaire", "did", "n't", "actually", "say", "that", "."]
# ::lemmas ["Voltaire", "do", "not", "actually", "say", "that", "."]
(c2-2 / say-01
      :ARG0 (c2-1 / person
                  :name (c2-0 / name
                              :op1 "Voltaire"))
      :ARG1 (c2-3 / that)
      :ARG1-of (c2-4 / actual-02)
      :polarity -)

# ::snt Thank God they don't have weapons of mss destruction.
# ::tokens ["Thank", "God", "they", "do", "n't", "have", "weapons", "of", "mss", "destruction", "."]
# ::lemmas ["thank", "God", "they", "do", "not", "have", "weapon", "of", "mss", "destruction", "."]
(c4-8 / thank-01
      :ARG0 (c4-2 / i)
      :ARG1 (c4-5 / person
                  :name (c4-3 / name
                              :op1 "God"))
      :ARG2 (c4-0 / have-03
                  :ARG0 (c4-7 / they)
                  :ARG1 (c4-1 / weapon
                              :ARG2-of (c4-6 / destroy-01
                                             :ARG0 (c4-4 / thing)))
                  :polarity -))

# ::snt I do not agree with what you have to say but I'll defend to death your right to say it. Voltaire.
# ::tokens ["I", "do", "not", "agree", "with", "what", "you", "have", "to", "say", "but", "I", "'ll", "defend", "to", "death", "your", "right", "to", "say", "it", ".", "Voltaire", "."]
# ::lemmas ["i", "do", "not", "agree", "with", "what", "you", "have", "to", "say", "but", "i", "'ll", "defend", "to", "death", "your", "right", "to", "say", "it", ".", "Voltaire", "."]
(c5-11 / say-01
       :ARG0 (c5-5 / i)
       :ARG1 (c5-9 / contrast-01
                   :ARG1 (c5-13 / agree-01
                                :ARG0 c5-5
                                :ARG1 (c5-12 / thing
                                             :ARG1-of (c5-4 / say-01
                                                            :ARG0 (c5-0 / you)
                                                            :ARG1-of (c5-3 / obligate-01)))
                                :polarity -)
                   :ARG2 (c5-8 / defend-01
                               :ARG0 c5-5
                               :ARG1 (c5-10 / right-05
                                            :ARG1 c5-0
                                            :ARG2 (c5-2 / say-01
                                                        :ARG0 c5-0
                                                        :ARG1 c5-12))
                               :degree (c5-1 / die-01)))
       :ARG2 (c5-7 / person
                   :name (c5-6 / name
                               :op1 "Voltaire")))

# ::snt Childish act = better than act of violence
# ::tokens ["Childish", "act", "=", "better", "than", "act", "of", "violence"]
# ::lemmas ["childish", "act", "=", "well", "than", "act", "of", "violence"]
(c6-2 / equal-01
      :ARG1 (c6-8 / act-02
                  :mod (c6-6 / childish))
      :ARG2 (c6-3 / act-02
                  :ARG1-of (c6-0 / have-degree-91
                                 :ARG2 (c6-7 / good-02)
                                 :ARG3 (c6-1 / more)
                                 :ARG4 (c6-4 / act-02
                                             :mod (c6-5 / violence)))))

# ::snt you tell them Emily!!!
# ::tokens ["you", "tell", "them", "Emily", "!", "!", "!"]
# ::lemmas ["you", "tell", "they", "emily", "!", "!", "!"]
(c7-2 / tell-01
      :ARG0 (c7-1 / person
                  :name (c7-0 / name
                              :op1 "Emily"))
      :ARG2 (c7-3 / they)
      :mode expressive)

# ::snt No. no. no. Just no to this point.
# ::tokens ["No", ".", "no", ".", "no", ".", "Just", "no", "to", "this", "point", "."]
# ::lemmas ["no", ".", "no", ".", "no", ".", "just", "no", "to", "this", "point", "."]
(c8-1 / multi-sentence
      :snt1 (c8-2 / no)
      :snt2 (c8-4 / no)
      :snt3 (c8-3 / no
                  :mod (c8-0 / just)
                  :time (c8-5 / point
                              :mod (c8-6 / this))))

# ::snt Sounded like a threat, this campaign has made the cartoonists martyrs. Not the oppressed that they hope
# ::tokens ["Sounded", "like", "a", "threat", ",", "this", "campaign", "has", "made", "the", "cartoonists", "martyrs", ".", "Not", "the", "oppressed", "that", "they", "hope"]
# ::lemmas ["sound", "like", "a", "threat", ",", "this", "campaign", "have", "make", "the", "cartoonist", "martyr", ".", "not", "the", "oppressed", "that", "they", "hope"]
(c9-2 / multi-sentence
      :snt1 (c9-5 / make-02
                  :ARG0 (c9-7 / campaign-01
                              :mod (c9-10 / this))
                  :ARG1 (c9-1 / martyr-01
                              :ARG0 c9-7
                              :ARG1 (c9-6 / cartoonist)))
      :snt2 (c9-0 / hope-01
                  :ARG0 (c9-8 / they)
                  :ARG1 (c9-3 / oppress-01
                              :ARG1 c9-8)
                  :polarity -)
      :snt1 (c9-9 / sound-01
                  :ARG1 c9-7
                  :ARG2 (c9-4 / threaten-01)))

# ::snt . Which is worse, a "childish" cartoon or taking offence at said cartoon enough to kill?
# ::tokens [".", "Which", "is", "worse", ",", "a", "\"", "childish", "\"", "cartoon", "or", "taking", "offence", "at", "said", "cartoon", "enough", "to", "kill", "?"]
# ::lemmas [".", "which", "be", "bad", ",", "a", "\"", "childish", "\"", "cartoon", "or", "take", "offence", "at", "say", "cartoon", "enough", "to", "kill", "?"]
(c10-7 / amr-choice
       :op1 (c10-5 / cartoon
                   :mod (c10-4 / childish))
       :op2 (c10-2 / offend-01
                   :ARG0 c10-5
                   :ARG1 c10-5
                   :ARG1-of (c10-0 / have-degree-91
                                   :ARG2 (c10-1 / bad-07
                                                :ARG1 c10-2)
                                   :ARG3 (c10-3 / enough)
                                   :ARG6 (c10-6 / kill-01
                                                :ARG0 c10-5
                                                :ARG1 c10-5))))

# ::snt I don't have to any.
# ::tokens ["I", "do", "n't", "have", "to", "any", "."]
# ::lemmas ["i", "do", "not", "have", "to", "any", "."]
(c11-0 / obligate-01
       :ARG1 (c11-2 / i)
       :ARG2 (c11-1 / any)
       :polarity -)

# ::snt childish act = Playing with =
# ::tokens ["childish", "act", "=", "Playing", "with", "="]
# ::lemmas ["childish", "act", "=", "play", "with", "="]
(c12-0 / equal-01
       :ARG1 (c12-3 / act-02
                    :mod (c12-2 / childish))
       :ARG2 (c12-1 / play-01))

# ::snt looks like as threat to me,but then that's how muslims behave hey.
# ::tokens ["looks", "like", "as", "threat", "to", "me", ",", "but", "then", "that", "'s", "how", "muslims", "behave", "hey", "."]
# ::lemmas ["look", "like", "as", "threat", "to", "i", ",", "but", "then", "that", "be", "how", "muslims", "behave", "hey", "."]
(c13-8 / contrast-01
       :ARG1 (c13-1 / look-02
                    :ARG1 (c13-10 / threaten-01
                                  :ARG2 (c13-3 / i)))
       :ARG2 (c13-2 / behave-01
                    :ARG0 (c13-6 / person
                                 :mod (c13-7 / religious-group
                                             :name (c13-4 / name
                                                          :op1 "Islam")))
                    :ARG1 (c13-9 / that)
                    :mod (c13-0 / hey
                                :mode expressive)
                    :time (c13-5 / then)))

# ::snt it's a sad day for the world when people die for their opinion.
# ::tokens ["it", "'s", "a", "sad", "day", "for", "the", "world", "when", "people", "die", "for", "their", "opinion", "."]
# ::lemmas ["it", "be", "a", "sad", "day", "for", "the", "world", "when", "people", "die", "for", "their", "opinion", "."]
(c14-6 / sad-02
       :ARG1 (c14-4 / day)
       :ARG2 (c14-0 / world)
       :time (c14-1 / die-01
                    :ARG1 (c14-3 / person)
                    :ARG1-of (c14-5 / cause-01
                                    :ARG0 (c14-2 / opine-01
                                                 :ARG0 c14-3))))

# ::snt Saudi solutions like beheading people guys an idiot
# ::tokens ["Saudi", "solutions", "like", "beheading", "people", "guys", "an", "idiot"]
# ::lemmas ["Saudi", "solution", "like", "behead", "people", "guy", "an", "idiot"]
(c15-1 / idiot
       :domain (c15-5 / solution
                      :mod (c15-3 / country
                                  :name (c15-2 / name
                                               :op1 "Saudi"
                                               :op2 "Arabia"))
                      :example (c15-0 / behead-01
                                      :ARG1 (c15-4 / guy))))

# ::snt Don't draw a picture of a prophet when you know it's offensive and then say freedom of speech. It's not
# ::tokens ["Do", "n't", "draw", "a", "picture", "of", "a", "prophet", "when", "you", "know", "it", "'s", "offensive", "and", "then", "say", "freedom", "of", "speech", ".", "It", "'s", "not"]
# ::lemmas ["do", "not", "draw", "a", "picture", "of", "a", "prophet", "when", "you", "know", "it", "be", "offensive", "and", "then", "say", "freedom", "of", "speech", ".", "it", "be", "not"]
(c16-2 / multi-sentence
       :snt1 (c16-13 / and
                     :op1 (c16-7 / draw-01
                                 :ARG0 (c16-0 / you)
                                 :ARG1 (c16-6 / picture
                                              :poss (c16-12 / prophet))
                                 :time (c16-11 / know-01
                                               :ARG0 c16-0
                                               :ARG1 (c16-3 / offend-01
                                                            :ARG0 (c16-5 / it)))
                                 :polarity -
                                 :mode imperative)
                     :op2 (c16-9 / say-01
                                 :ARG0 c16-0
                                 :ARG1 (c16-1 / free-04
                                              :ARG3 (c16-4 / speak-01))
                                 :time (c16-10 / then)
                                 :mode imperative))
       :snt2 (c16-8 / it
                    :polarity -))

# ::snt There is a French lady friend who wants to organize a small gathering in Kenya in response to Will u attend?
# ::tokens ["There", "is", "a", "French", "lady", "friend", "who", "wants", "to", "organize", "a", "small", "gathering", "in", "Kenya", "in", "response", "to", "Will", "u", "attend", "?"]
# ::lemmas ["there", "be", "a", "French", "lady", "friend", "who", "want", "to", "organize", "a", "small", "gathering", "in", "Kenya", "in", "response", "to", "will", "u", "attend", "?"]
(c17-1 / want-01
       :ARG0 (c17-9 / person
                    :ARG0-of (c17-0 / have-rel-role-91
                                    :ARG1 (c17-3 / lady)
                                    :ARG2 (c17-4 / friend))
                    :mod (c17-11 / country
                                 :name (c17-7 / name
                                              :op1 "France")))
       :ARG1 (c17-5 / organize-01
                    :ARG0 c17-9
                    :ARG1 (c17-12 / gather-03
                                  :mod (c17-14 / small)
                                  :location (c17-10 / country
                                                    :name (c17-8 / name
                                                                 :op1 "Kenya"))))
       :ARG2-of (c17-13 / respond-01
                        :ARG1 (c17-15 / attend-01
                                      :ARG0 (c17-2 / you)
                                      :ARG1 c17-12
                                      :polarity (c17-6 / amr-unknown))))

# ::snt . Bud says
# ::tokens [".", "Bud", "says"]
# ::lemmas [".", "Bud", "say"]
(c18-0 / say-01
       :ARG0 (c18-1 / person
                    :name (c18-2 / name
                                 :op1 "Bud")))
