# ::snt the only actual victims here are the french cartoonists, not anyone else.
# ::tokens ["the", "only", "actual", "victims", "here", "are", "the", "french", "cartoonists", ",", "not", "anyone", "else", "."]
# ::lemmas ["the", "only", "actual", "victim", "here", "be", "the", "french", "cartoonist", ",", "not", "anyone", "else", "."]
(c1-5 / victim
      :domain (c1-9 / and
                    :op1 (c1-8 / cartoonist
                               :mod (c1-7 / country
                                          :name (c1-4 / name
                                                      :op1 "France")))
                    :op2 (c1-3 / anyone
                               :mod (c1-2 / else)
                               :polarity -))
      :ARG1-of (c1-6 / actual-02)
      :mod (c1-1 / only)
      :location (c1-0 / here))

# ::snt I condemn this Paris shooting and I fear that their will be an UNJUST backlash on INNOCENT Islamic ppl.
# ::tokens ["I", "condemn", "this", "Paris", "shooting", "and", "I", "fear", "that", "their", "will", "be", "an", "UNJUST", "backlash", "on", "INNOCENT", "Islamic", "ppl", "."]
# ::lemmas ["i", "condemn", "this", "Paris", "shooting", "and", "i", "fear", "that", "their", "will", "be", "an", "UNJUST", "backlash", "on", "INNOCENT", "Islamic", "ppl", "."]
(c2-13 / and
       :op1 (c2-8 / condemn-01
                  :ARG0 (c2-3 / i)
                  :ARG1 (c2-11 / shoot-02
                               :location (c2-7 / city
                                               :name (c2-4 / name
                                                           :op1 "Paris"))
                               :mod (c2-12 / this)))
       :op2 (c2-1 / fear-01
                  :ARG0 c2-3
                  :ARG1 (c2-2 / backlash-01
                              :ARG1 (c2-6 / person
                                          :mod (c2-9 / religious-group
                                                     :name (c2-5 / name
                                                                 :op1 "Islam"))
                                          :ARG1-of (c2-10 / innocent-01))
                              :mod (c2-0 / just
                                         :polarity -))))

# ::snt Who? Alive non affected Muslims who weren't murdered today? Fucking twat!
# ::tokens ["Who", "?", "Alive", "non", "affected", "Muslims", "who", "were", "n't", "murdered", "today", "?", "Fucking", "twat", "!"]
# ::lemmas ["who", "?", "alive", "non", "affected", "Muslims", "who", "be", "not", "murder", "today", "?", "fucking", "twat", "!"]
(c3-2 / multi-sentence
      :snt1 (c3-10 / amr-unknown)
      :snt2 (c3-5 / person
                  :mod (c3-6 / religious-group
                             :name (c3-4 / name
                                         :op1 "Islam"))
                  :ARG1-of (c3-3 / affect-01
                                 :degree (c3-0 / whatsoever)
                                 :polarity -)
                  :ARG1-of (c3-7 / murder-01
                                 :time (c3-9 / today)
                                 :polarity -))
      :snt3 (c3-8 / twat
                  :mod (c3-1 / fucking
                             :mode expressive)
                  :mode expressive))

# ::snt : : attack has another victim
# ::tokens [":", ":", "attack", "has", "another", "victim"]
# ::lemmas [":", ":", "attack", "have", "another", "victim"]
(c5-0 / have-03
      :ARG0 (c5-3 / attack-01)
      :ARG1 (c5-1 / victim
                  :mod (c5-2 / another)))

# ::snt : attack has another victim! Via
# ::tokens [":", "attack", "has", "another", "victim", "!", "Via"]
# ::lemmas [":", "attack", "have", "another", "victim", "!", "via"]
(c9-1 / multi-sentence
      :snt1 (c9-0 / have-03
                  :ARG0 (c9-5 / attack-01)
                  :ARG1 (c9-4 / victim
                              :mod (c9-3 / another)))
      :snt2 (c9-2 / Via))

# ::snt : Please, RT! attack has another victim! Via
# ::tokens [":", "Please", ",", "RT", "!", "attack", "has", "another", "victim", "!", "Via"]
# ::lemmas [":", "please", ",", "RT", "!", "attack", "have", "another", "victim", "!", "via"]
(c10-1 / multi-sentence
       :snt1 (c10-6 / say-01
                    :ARG0 (c10-0 / you)
                    :ARG1 (c10-7 / truth-value
                                 :polarity-of (c10-5 / RT-01
                                                     :ARG0 c10-0
                                                     :mode imperative))
                    :polite +
                    :mode imperative)
       :snt2 (c10-3 / victimize-01
                    :ARG0 (c10-8 / attack-01)
                    :ARG1 (c10-4 / person
                                 :mod (c10-2 / another))))

# ::snt : Please, RT! attack has another victim! Via
# ::tokens [":", "Please", ",", "RT", "!", "attack", "has", "another", "victim", "!", "Via"]
# ::lemmas [":", "please", ",", "RT", "!", "attack", "have", "another", "victim", "!", "via"]
(c13-1 / multi-sentence
       :snt1 (c13-6 / say-01
                    :ARG0 (c13-0 / you)
                    :ARG1 (c13-7 / truth-value
                                 :polarity-of (c13-5 / RT-01
                                                     :ARG0 c13-0
                                                     :mode imperative))
                    :polite +
                    :mode imperative)
       :snt2 (c13-3 / victimize-01
                    :ARG0 (c13-8 / attack-01)
                    :ARG1 (c13-4 / person
                                 :mod (c13-2 / another))))

# ::snt no - in the long run, we should have justice. but that doesn't make anyone victims.
# ::tokens ["no", "-", "in", "the", "long", "run", ",", "we", "should", "have", "justice", ".", "but", "that", "does", "n't", "make", "anyone", "victims", "."]
# ::lemmas ["no", "-", "in", "the", "long", "run", ",", "we", "should", "have", "justice", ".", "but", "that", "do", "not", "make", "anyone", "victim", "."]
(c14-8 / contrast-01
       :ARG1 (c14-7 / recommend-01
                    :ARG1 (c14-0 / have-03
                                 :ARG0 (c14-1 / we)
                                 :ARG1 (c14-2 / justice)
                                 :time (c14-5 / run-13
                                              :ARG1-of (c14-3 / long-03))))
       :ARG2 (c14-4 / make-02
                    :ARG0 c14-0
                    :ARG1 (c14-6 / victim
                                 :domain (c14-9 / anyone))
                    :polarity -))

# ::snt .
# ::tokens ["."]
# ::lemmas ["."]
(c15-0 / amr-empty)

# ::snt Excellent!
# ::tokens ["Excellent", "!"]
# ::lemmas ["excellent", "!"]
(c16-0 / excellent-02
       :mode expressive)

# ::snt we put up with it every day. It's just not reported
# ::tokens ["we", "put", "up", "with", "it", "every", "day", ".", "It", "'s", "just", "not", "reported"]
# ::lemmas ["we", "put", "up", "with", "it", "every", "day", ".", "it", "be", "just", "not", "report"]
(c17-2 / multi-sentence
       :snt1 (c17-5 / put-up-12
                    :ARG0 (c17-1 / we)
                    :ARG1 (c17-4 / it)
                    :frequency (c17-6 / day
                                      :mod (c17-3 / every)))
       :snt2 (c17-7 / report-01
                    :ARG1 (c17-8 / it)
                    :mod (c17-0 / just)
                    :polarity -))

# ::snt : attack has another victim
# ::tokens [":", "attack", "has", "another", "victim"]
# ::lemmas [":", "attack", "have", "another", "victim"]
(c18-0 / have-03
       :ARG0 (c18-3 / attack-01)
       :ARG1 (c18-1 / victim
                    :mod (c18-2 / another)))

# ::snt : Please, RT! attack has another victim! Via
# ::tokens [":", "Please", ",", "RT", "!", "attack", "has", "another", "victim", "!", "Via"]
# ::lemmas [":", "please", ",", "RT", "!", "attack", "have", "another", "victim", "!", "via"]
(c19-1 / multi-sentence
       :snt1 (c19-6 / say-01
                    :ARG0 (c19-0 / you)
                    :ARG1 (c19-7 / truth-value
                                 :polarity-of (c19-5 / RT-01
                                                     :ARG0 c19-0
                                                     :mode imperative))
                    :polite +
                    :mode imperative)
       :snt2 (c19-3 / victimize-01
                    :ARG0 (c19-8 / attack-01)
                    :ARG1 (c19-4 / person
                                 :mod (c19-2 / another))))

# ::snt Take care , he says you will be the next.
# ::tokens ["Take", "care", ",", "he", "says", "you", "will", "be", "the", "next", "."]
# ::lemmas ["take", "care", ",", "he", "say", "you", "will", "be", "the", "next", "."]
(c20-4 / say-01
       :ARG0 (c20-0 / he)
       :ARG1 (c20-2 / next
                    :domain (c20-1 / you))
       :condition (c20-5 / take-01
                         :ARG1 (c20-3 / care-03)))

# ::snt The ripples continue to spread.
# ::tokens ["The", "ripples", "continue", "to", "spread", "."]
# ::lemmas ["the", "ripple", "continue", "to", "spread", "."]
(c21-2 / continue-01
       :ARG1 (c21-0 / spread-03
                    :ARG1 (c21-1 / ripples)))

# ::snt Look at the big picture .. attack has another victim!
# ::tokens ["Look", "at", "the", "big", "picture", "..", "attack", "has", "another", "victim", "!"]
# ::lemmas ["look", "at", "the", "big", "picture", "..", "attack", "have", "another", "victim", "!"]
(c22-3 / multi-sentence
       :snt1 (c22-2 / look-01
                    :ARG0 (c22-1 / you)
                    :ARG1 (c22-7 / picture
                                 :mod (c22-4 / big))
                    :mode imperative)
       :snt2 (c22-0 / have-03
                    :ARG0 (c22-8 / attack-01)
                    :ARG1 (c22-6 / victim
                                 :mod (c22-5 / another))))

# ::snt wait and see. In the long run, they will be
# ::tokens ["wait", "and", "see", ".", "In", "the", "long", "run", ",", "they", "will", "be"]
# ::lemmas ["wait", "and", "see", ".", "in", "the", "long", "run", ",", "they", "will", "be"]
(c23-3 / multi-sentence
       :snt1 (c23-7 / and
                    :op1 (c23-0 / wait-01
                                :ARG1 (c23-1 / you))
                    :op2 (c23-5 / see-01
                                :ARG1 c23-1))
       :snt2 (c23-6 / they
                    :time (c23-4 / run-13
                                 :ARG1-of (c23-2 / long-03))))

# ::snt Good job
# ::tokens ["Good", "job"]
# ::lemmas ["good", "job"]
(c24-0 / job
       :ARG1-of (c24-1 / good-02))

# ::snt One can only hope. I meant it as a dark omen, more than anything else.
# ::tokens ["One", "can", "only", "hope", ".", "I", "meant", "it", "as", "a", "dark", "omen", ",", "more", "than", "anything", "else", "."]
# ::lemmas ["one", "can", "only", "hope", ".", "i", "mean", "it", "as", "a", "dark", "oman", ",", "more", "than", "anything", "else", "."]
(c25-2 / multi-sentence
       :snt1 (c25-7 / possible-01
                    :ARG1 (c25-0 / hope-01
                                 :ARG0 (c25-4 / one)
                                 :mod (c25-1 / only)))
       :snt2 (c25-8 / mean-02
                    :ARG0 (c25-6 / i)
                    :ARG1 (c25-10 / it)
                    :ARG2 (c25-11 / omen
                                  :ARG1-of (c25-9 / dark-02)
                                  :ARG2-of (c25-13 / have-degree-91
                                                   :ARG1 c25-10
                                                   :ARG3 (c25-3 / more)
                                                   :ARG4 (c25-12 / anything
                                                                 :mod (c25-5 / else))))))

# ::snt I know you do and you have my heart felt sympathy at that injustice.
# ::tokens ["I", "know", "you", "do", "and", "you", "have", "my", "heart", "felt", "sympathy", "at", "that", "injustice", "."]
# ::lemmas ["i", "know", "you", "do", "and", "you", "have", "my", "heart", "feel", "sympathy", "at", "that", "injustice", "."]
(c26-9 / and
       :op1 (c26-8 / know-01
                   :ARG0 (c26-4 / i
                                :part (c26-0 / heart))
                   :ARG1 (c26-5 / do-02
                                :ARG0 (c26-1 / you)))
       :op2 (c26-3 / feel-01
                   :ARG0 c26-0
                   :ARG1 (c26-6 / sympathy)
                   :ARG2 (c26-2 / just-02
                                :mod (c26-7 / that)
                                :polarity -)))

# ::snt great job!
# ::tokens ["great", "job", "!"]
# ::lemmas ["great", "job", "!"]
(c27-0 / job
       :mod (c27-1 / great)
       :mode expressive)

# ::snt Congrats on your tweet!
# ::tokens ["Congrats", "on", "your", "tweet", "!"]
# ::lemmas ["congrat", "on", "your", "tweet", "!"]
(c28-2 / congratulate-01
       :ARG1 (c28-1 / you)
       :ARG2 (c28-0 / tweet-01
                    :ARG0 c28-1))

# ::snt Mr. Latuff, you are nasty. Not thanks to your kind of cartoons those noble french men ended murdered.
# ::tokens ["Mr.", "Latuff", ",", "you", "are", "nasty", ".", "Not", "thanks", "to", "your", "kind", "of", "cartoons", "those", "noble", "french", "men", "ended", "murdered", "."]
# ::lemmas ["Mr.", "Latuff", ",", "you", "be", "nasty", ".", "not", "thank", "to", "your", "kind", "of", "cartoon", "those", "noble", "french", "man", "end", "murder", "."]
(c29-1 / multi-sentence
       :snt1 (c29-3 / nasty
                    :domain (c29-5 / person
                                   :name (c29-4 / name
                                                :op1 "Mr."
                                                :op2 "Latuff")))
       :snt2 (c29-7 / cause-01
                    :ARG0 (c29-6 / cartoon
                                 :mod (c29-13 / kind
                                              :poss c29-5))
                    :ARG1 (c29-2 / end-01
                                 :ARG1 (c29-8 / man
                                              :mod (c29-9 / noble)
                                              :mod (c29-11 / country
                                                           :name (c29-10 / name
                                                                         :op1 "France"))
                                              :mod (c29-12 / that))
                                 :ARG2 (c29-0 / murder-01
                                              :ARG1 c29-8))
                    :polarity -))

# ::snt Ridiculous to claim Muslims are victims in attack. Only freedom &amp; humanity are.
# ::tokens ["Ridiculous", "to", "claim", "Muslims", "are", "victims", "in", "attack", ".", "Only", "freedom", "&", "amp", ";", "humanity", "are", "."]
# ::lemmas ["ridiculous", "to", "claim", "Muslims", "be", "victim", "in", "attack", ".", "only", "freedom", "&", "amp", ";", "humanity", "be", "."]
(c30-2 / multi-sentence
       :snt1 (c30-9 / ridiculous-02
                    :ARG1 (c30-10 / claim-01
                                  :ARG1 (c30-7 / victim
                                               :ARG1-of (c30-12 / attack-01)
                                               :domain (c30-8 / person
                                                              :mod (c30-5 / religious-group
                                                                          :name (c30-6 / name
                                                                                       :op1 "Muslim"))))))
       :snt2 (c30-4 / and
                    :op1 (c30-1 / free-04
                                :mod (c30-3 / only))
                    :op2 (c30-11 / amp)
                    :domain (c30-0 / humanity)))
