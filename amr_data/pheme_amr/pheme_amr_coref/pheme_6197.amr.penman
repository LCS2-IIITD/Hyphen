# ::snt &amp; the UK Home Office is relaxed about routinely arming our police?I definitely think not
# ::tokens ["&", "amp", ";", "the", "UK", "Home", "Office", "is", "relaxed", "about", "routinely", "arming", "our", "police?I", "definitely", "think", "not"]
# ::lemmas ["&", "amp", ";", "the", "UK", "Home", "Office", "be", "relax", "about", "routinely", "arm", "our", "police?I", "definitely", "think", "not"]
(c1-14 / and
       :op2 (c1-12 / think-01
                   :ARG0 (c1-3 / i)
                   :ARG1 (c1-8 / relax-01
                               :ARG1 (c1-10 / government-organization
                                            :name (c1-5 / name
                                                        :op1 "Home"
                                                        :op2 "Office")
                                            :mod (c1-9 / country
                                                       :name c1-5
                                                       :op1 "UK")))
                   :ARG2 (c1-2 / arm-01
                               :ARG0 c1-10
                               :ARG1 (c1-7 / person
                                           :ARG0-of (c1-0 / have-org-role-91
                                                          :ARG1 (c1-1 / we)
                                                          :ARG2 (c1-13 / police)))
                               :mod (c1-4 / routine))
                   :polarity (c1-6 / amr-unknown)
                   :polarity -)
       :mod (c1-11 / definite))

# ::snt holy crap .....
# ::tokens ["holy", "crap", "....."]
# ::lemmas ["holy", "crap", "....."]
(c2-2 / thing
      :mod (c2-0 / holy)
      :ARG1-of (c2-1 / crap-01))

# ::snt I will do that. Thanks again for help.
# ::tokens ["I", "will", "do", "that", ".", "Thanks", "again", "for", "help", "."]
# ::lemmas ["i", "will", "do", "that", ".", "thank", "again", "for", "help", "."]
(c3-2 / multi-sentence
      :snt1 (c3-4 / do-02
                  :ARG0 (c3-3 / i)
                  :ARG1 (c3-6 / that))
      :snt2 (c3-5 / thank-01
                  :ARG0 c3-3
                  :ARG1 (c3-1 / you)
                  :ARG2 (c3-0 / help-01
                              :ARG2 c3-3)
                  :mod (c3-7 / again)))

# ::snt Eyewitness report in the Post-Dispatch story says Brown fled from being put in police car. &gt;
# ::tokens ["Eyewitness", "report", "in", "the", "Post", "-", "Dispatch", "story", "says", "Brown", "fled", "from", "being", "put", "in", "police", "car", ".", "&", "gt", ";"]
# ::lemmas ["eyewitness", "report", "in", "the", "Post", "-", "Dispatch", "story", "say", "Brown", "flee", "from", "be", "put", "in", "police", "car", ".", "&", "gt", ";"]
(c4-10 / say-01
       :ARG0 (c4-7 / report-01
                   :ARG0 (c4-2 / eyewitness)
                   :location (c4-3 / story
                                   :mod (c4-4 / newspaper
                                              :name (c4-5 / name
                                                          :op1 "Post-Dispatch"))))
       :ARG1 (c4-0 / flee-05
                   :ARG0 (c4-6 / person
                               :name (c4-8 / name
                                           :op1 "Brown"))
                   :ARG1 (c4-11 / put-01
                                :ARG1 c4-6
                                :ARG2 (c4-9 / car
                                            :mod (c4-1 / police)))))

# ::snt WTF? Is this for real?
# ::tokens ["WTF", "?", "Is", "this", "for", "real", "?"]
# ::lemmas ["WTF", "?", "be", "this", "for", "real", "?"]
(c5-1 / multi-sentence
      :snt1 (c5-5 / amr-unknown
                  :mod (c5-0 / fuck
                             :mode expressive))
      :snt2 (c5-3 / real-04
                  :ARG1 (c5-4 / this)
                  :polarity (c5-2 / amr-unknown)))

# ::snt bloody shots to down someone? Bionic man? Or just police overkill?
# ::tokens ["bloody", "shots", "to", "down", "someone", "?", "Bionic", "man", "?", "Or", "just", "police", "overkill", "?"]
# ::lemmas ["bloody", "shot", "to", "down", "someone", "?", "bionic", "man", "?", "or", "just", "police", "overkill", "?"]
(c6-2 / multi-sentence
      :snt1 (c6-11 / shoot-02
                   :ARG2 (c6-9 / down-01
                               :ARG1 (c6-5 / someone))
                   :mod (c6-3 / bloody)
                   :polarity (c6-12 / amr-unknown))
      :snt2 (c6-8 / man
                  :mod (c6-7 / ionic))
      :snt3 (c6-4 / or
                  :op2 (c6-1 / overkill
                             :mod (c6-10 / police)
                             :mod (c6-0 / just)
                             :polarity (c6-6 / amr-unknown))))

# ::snt Mike Brown's family wish is to not post pictures of his dead body , thx
# ::tokens ["Mike", "Brown", "'s", "family", "wish", "is", "to", "not", "post", "pictures", "of", "his", "dead", "body", ",", "thx"]
# ::lemmas ["Mike", "Brown", "'s", "family", "wish", "be", "to", "not", "post", "picture", "of", "his", "dead", "body", ",", "thx"]
(c7-1 / wish-01
      :ARG0 (c7-2 / family
                  :ARG1-of (c7-0 / have-org-role-91
                                 :ARG0 (c7-7 / person
                                             :name (c7-6 / name
                                                         :op1 "Mike"
                                                         :op2 "Brown"))
                                 :ARG2 (c7-3 / member)))
      :ARG1 (c7-9 / post-01
                  :ARG0 c7-2
                  :ARG1 (c7-4 / picture-01
                              :ARG1 (c7-5 / body
                                          :poss c7-7
                                          :ARG1-of (c7-8 / die-01)))
                  :polarity -))

# ::snt Which was probably not a good idea, but no way does it deserve getting shot ten times and killed.
# ::tokens ["Which", "was", "probably", "not", "a", "good", "idea", ",", "but", "no", "way", "does", "it", "deserve", "getting", "shot", "ten", "times", "and", "killed", "."]
# ::lemmas ["which", "be", "probably", "not", "a", "good", "idea", ",", "but", "no", "way", "do", "it", "deserve", "getting", "shoot", "ten", "time", "and", "kill", "."]
(c8-4 / contrast-01
      :ARG1 (c8-1 / idea
                  :ARG1-of (c8-6 / good-02
                                 :mod (c8-2 / probable)
                                 :polarity -)
                  :domain (c8-5 / it))
      :ARG2 (c8-3 / deserve-01
                  :ARG0 c8-5
                  :ARG1 (c8-9 / and
                              :op1 (c8-7 / shoot-02
                                         :ARG1 c8-5
                                         :frequency 10)
                              :op2 (c8-8 / kill-01
                                         :ARG1 c8-5))
                  :manner (c8-0 / way)
                  :polarity -))

# ::snt Should have been thank you for the link.
# ::tokens ["Should", "have", "been", "thank", "you", "for", "the", "link", "."]
# ::lemmas ["should", "have", "be", "thank", "you", "for", "the", "link", "."]
(c9-1 / recommend-01
      :ARG1 (c9-2 / thank-01
                  :ARG1 (c9-0 / you)
                  :ARG2 (c9-3 / link)))

# ::snt There may be a little more to the story. I'll wait before I pass judgement. It is always bad when a person dies.
# ::tokens ["There", "may", "be", "a", "little", "more", "to", "the", "story", ".", "I", "'ll", "wait", "before", "I", "pass", "judgement", ".", "It", "is", "always", "bad", "when", "a", "person", "dies", "."]
# ::lemmas ["there", "may", "be", "a", "little", "more", "to", "the", "story", ".", "i", "'ll", "wait", "before", "i", "pass", "judgement", ".", "it", "be", "always", "bad", "when", "a", "person", "die", "."]
(c10-3 / multi-sentence
       :snt1 (c10-7 / possible-01
                    :ARG1 (c10-8 / more
                                 :quant (c10-2 / little)
                                 :domain (c10-12 / story)))
       :snt2 (c10-1 / wait-01
                    :ARG1 (c10-6 / i)
                    :time (c10-5 / before
                                 :op1 (c10-13 / pass-01
                                              :ARG0 c10-6
                                              :ARG1 (c10-0 / judge-01
                                                           :ARG0 c10-6))))
       :snt3 (c10-9 / bad-07
                    :ARG1 (c10-10 / it)
                    :time (c10-11 / die-01
                                  :ARG1 (c10-4 / person))
                    :time (c10-14 / always)))

# ::snt Teenager won't start college on Monday because he was shot ten times by a police officer.
# ::tokens ["Teenager", "wo", "n't", "start", "college", "on", "Monday", "because", "he", "was", "shot", "ten", "times", "by", "a", "police", "officer", "."]
# ::lemmas ["Teenager", "will", "not", "start", "college", "on", "Monday", "because", "he", "be", "shoot", "ten", "time", "by", "a", "police", "officer", "."]
(c11-5 / cause-01
       :ARG0 (c11-7 / shoot-02
                    :ARG0 (c11-1 / officer
                                 :mod (c11-3 / police))
                    :ARG1 (c11-8 / teenager)
                    :frequency 10)
       :ARG1 (c11-2 / start-01
                    :ARG0 c11-8
                    :ARG1 (c11-4 / college)
                    :time (c11-6 / date-entity
                                 :weekday (c11-0 / monday))
                    :polarity -))

# ::snt : won't start college Monday because he was shot ten times by a police officer.
# ::tokens [":", "wo", "n't", "start", "college", "Monday", "because", "he", "was", "shot", "ten", "times", "by", "a", "police", "officer", "."]
# ::lemmas [":", "will", "not", "start", "college", "Monday", "because", "he", "be", "shoot", "ten", "time", "by", "a", "police", "officer", "."]
(c12-6 / cause-01
       :ARG0 (c12-8 / shoot-02
                    :ARG0 (c12-2 / officer
                                 :mod (c12-4 / police))
                    :ARG1 (c12-0 / he)
                    :frequency 10)
       :ARG1 (c12-3 / start-01
                    :ARG0 c12-0
                    :ARG1 (c12-5 / college)
                    :time (c12-7 / date-entity
                                 :weekday (c12-1 / monday))
                    :polarity -))

# ::snt what's the story? it's sad but posting a picture of this poor kid dead means nothing.
# ::tokens ["what", "'s", "the", "story", "?", "it", "'s", "sad", "but", "posting", "a", "picture", "of", "this", "poor", "kid", "dead", "means", "nothing", "."]
# ::lemmas ["what", "be", "the", "story", "?", "it", "be", "sad", "but", "post", "a", "picture", "of", "this", "poor", "kid", "dead", "mean", "nothing", "."]
(c13-0 / multi-sentence
       :snt1 (c13-8 / story
                    :domain (c13-12 / amr-unknown))
       :snt2 (c13-6 / contrast-01
                    :ARG1 (c13-2 / sad-02)
                    :ARG2 (c13-4 / mean-01
                                 :ARG1 (c13-5 / post-01
                                              :ARG1 (c13-11 / picture-01
                                                            :ARG1 (c13-10 / kid
                                                                          :mod (c13-1 / poor)
                                                                          :mod (c13-9 / this)
                                                                          :ARG1-of (c13-7 / die-01))))
                                 :ARG2 (c13-3 / nothing))))

# ::snt no worries.
# ::tokens ["no", "worries", "."]
# ::lemmas ["no", "worry", "."]
(c14-0 / worry-02
       :polarity -)

# ::snt Glad I could help. Are you really in Sweden? The US must seem barbaric to Europeans from stories like this.
# ::tokens ["Glad", "I", "could", "help", ".", "Are", "you", "really", "in", "Sweden", "?", "The", "US", "must", "seem", "barbaric", "to", "Europeans", "from", "stories", "like", "this", "."]
# ::lemmas ["Glad", "i", "could", "help", ".", "be", "you", "really", "in", "Sweden", "?", "the", "US", "must", "seem", "barbaric", "to", "Europeans", "from", "story", "like", "this", "."]
(c16-0 / multi-sentence
       :snt1 (c16-13 / glad-02
                     :ARG0 (c16-3 / possible-01
                                  :ARG1 (c16-8 / help-01
                                               :ARG0 (c16-14 / i
                                                             :ARG1-of c16-13))))
       :snt2 (c16-9 / be-located-at-91
                    :ARG1 (c16-18 / you)
                    :ARG2 (c16-20 / country
                                  :name (c16-11 / name
                                                :op1 "Sweden"))
                    :ARG1-of (c16-12 / real-04)
                    :polarity (c16-7 / amr-unknown))
       :snt3 (c16-16 / infer-01
                     :ARG1 (c16-5 / seem-01
                                  :ARG1 (c16-15 / barbaric
                                                :domain (c16-4 / country
                                                               :name (c16-19 / name
                                                                             :op1 "US")))
                                  :ARG2 (c16-6 / person
                                               :mod (c16-17 / continent
                                                            :name (c16-2 / name
                                                                         :op1 "Europe")))
                                  :source (c16-10 / story
                                                  :ARG1-of (c16-1 / resemble-01
                                                                  :ARG2 (c16-21 / this))))))

# ::snt St Louis Post Dispatch story: . Apparently he shoplifted a candy bar.
# ::tokens ["St", "Louis", "Post", "Dispatch", "story", ":", ".", "Apparently", "he", "shoplifted", "a", "candy", "bar", "."]
# ::lemmas ["St", "Louis", "Post", "Dispatch", "story", ":", ".", "apparently", "he", "shoplift", "a", "candy", "bar", "."]
(c17-6 / story
       :source (c17-3 / newspaper
                      :name (c17-4 / name
                                   :op1 "St"
                                   :op2 "Louis"
                                   :op3 "Post"
                                   :op4 "Dispatch"))
       :topic (c17-2 / shoplift-01
                     :ARG0 (c17-0 / he)
                     :ARG1 (c17-1 / bar
                                  :mod (c17-5 / candy))
                     :ARG1-of (c17-7 / appear-02)))

# ::snt Well, we have our own things that is bad. But not as much as you have.
# ::tokens ["Well", ",", "we", "have", "our", "own", "things", "that", "is", "bad", ".", "But", "not", "as", "much", "as", "you", "have", "."]
# ::lemmas ["well", ",", "we", "have", "our", "own", "thing", "that", "be", "bad", ".", "but", "not", "as", "much", "as", "you", "have", "."]
(c18-3 / multi-sentence
       :snt1 (c18-0 / have-03
                    :ARG0 (c18-1 / we)
                    :ARG1 (c18-12 / thing
                                  :poss c18-1
                                  :ARG1-of (c18-4 / bad-07))
                    :mod (c18-6 / well))
       :snt2 (c18-9 / contrast-01
                    :ARG2 (c18-13 / have-03
                                  :ARG0 (c18-2 / you)
                                  :ARG1 (c18-10 / thing
                                                :ARG1-of (c18-7 / have-quant-91
                                                                :ARG3 (c18-5 / equal)
                                                                :ARG4 (c18-8 / thing
                                                                             :ARG1-of (c18-11 / have-03
                                                                                              :ARG0 c18-2))
                                                                :polarity -)))))

# ::snt What is this about? Can you give me a link where I can read about it please?
# ::tokens ["What", "is", "this", "about", "?", "Can", "you", "give", "me", "a", "link", "where", "I", "can", "read", "about", "it", "please", "?"]
# ::lemmas ["what", "be", "this", "about", "?", "can", "you", "give", "i", "a", "link", "where", "i", "can", "read", "about", "it", "please", "?"]
(c19-2 / multi-sentence
       :snt1 (c19-7 / concern-02
                    :ARG0 (c19-10 / this)
                    :ARG1 (c19-12 / amr-unknown))
       :snt2 (c19-5 / possible-01
                    :polarity (c19-3 / amr-unknown)
                    :ARG1 (c19-8 / give-01
                                 :ARG0 (c19-0 / you)
                                 :ARG1 (c19-1 / link
                                              :location-of (c19-11 / possible-01
                                                                   :ARG1 (c19-6 / read-01
                                                                                :ARG0 (c19-4 / i)
                                                                                :ARG1 (c19-9 / it))))
                                 :ARG2 c19-4)
                    :polite +))

# ::snt What was Mike doing?
# ::tokens ["What", "was", "Mike", "doing", "?"]
# ::lemmas ["what", "be", "Mike", "do", "?"]
(c20-2 / do-02
       :ARG0 (c20-1 / person
                    :name (c20-0 / name
                                 :op1 "Mike"))
       :ARG1 (c20-3 / amr-unknown))

# ::snt Ten times too many
# ::tokens ["Ten", "times", "too", "many"]
# ::lemmas ["Ten", "time", "too", "many"]
(c21-0 / have-quant-91
       :ARG2 (c21-2 / many)
       :ARG3 (c21-1 / times
                    :quant 10))

# ::snt . Racism is about as dumb as it gets. We're all from the same race (human)
# ::tokens [".", "Racism", "is", "about", "as", "dumb", "as", "it", "gets", ".", "We", "'re", "all", "from", "the", "same", "race", "(", "human", ")"]
# ::lemmas [".", "racism", "be", "about", "as", "dumb", "as", "it", "get", ".", "we", "be", "all", "from", "the", "same", "race", "(", "human", ")"]
(c23-3 / multi-sentence
       :snt1 (c23-0 / have-degree-91
                    :ARG1 (c23-7 / racism)
                    :ARG2 (c23-8 / dumb)
                    :ARG3 (c23-5 / equal)
                    :ARG4 (c23-9 / get-03
                                 :ARG1 c23-7))
       :snt2 (c23-4 / be-from-91
                    :ARG1 (c23-1 / we
                                 :mod (c23-11 / all))
                    :ARG2 (c23-6 / race
                                 :ARG1-of (c23-10 / same-01)
                                 :mod (c23-2 / human))))

# ::snt Yes, it's an awful event. Check the hashtag for lots of anger and sadness.
# ::tokens ["Yes", ",", "it", "'s", "an", "awful", "event", ".", "Check", "the", "hashtag", "for", "lots", "of", "anger", "and", "sadness", "."]
# ::lemmas ["yes", ",", "it", "be", "an", "awful", "event", ".", "check", "the", "hashtag", "for", "lot", "of", "anger", "and", "sadness", "."]
(c24-3 / multi-sentence
       :snt1 (c24-4 / event
                    :mod (c24-11 / awful)
                    :mod (c24-1 / yes))
       :snt2 (c24-7 / check-01
                    :ARG0 (c24-8 / you)
                    :ARG1 (c24-10 / thing
                                  :ARG2-of (c24-0 / hashtag-01
                                                  :ARG1 (c24-5 / and
                                                               :op1 (c24-6 / anger-01)
                                                               :op2 (c24-9 / sad-02)
                                                               :quant (c24-2 / lot))))
                    :mode imperative))

# ::snt Oh my god. For shoplifting? This is awful! I have to read. Thank you!
# ::tokens ["Oh", "my", "god", ".", "For", "shoplifting", "?", "This", "is", "awful", "!", "I", "have", "to", "read", ".", "Thank", "you", "!"]
# ::lemmas ["oh", "my", "god", ".", "for", "shoplifting", "?", "this", "be", "awful", "!", "i", "have", "to", "read", ".", "thank", "you", "!"]
(c25-2 / multi-sentence
       :snt1 (c25-9 / god
                    :poss (c25-6 / i)
                    :mod (c25-4 / oh)
                    :mode expressive)
       :snt2 (c25-8 / cause-01
                    :ARG0 (c25-12 / shoplift-01
                                  :ARG0 (c25-10 / i))
                    :ARG1 (c25-14 / awful
                                  :domain (c25-13 / this)))
       :snt3 (c25-1 / obligate-01
                    :ARG1 (c25-3 / i)
                    :ARG2 (c25-7 / read-01
                                 :ARG0 c25-3))
       :snt4 (c25-11 / thank-01
                     :ARG0 (c25-5 / i)
                     :ARG1 (c25-0 / you)))

# ::snt Same age as my son, then.
# ::tokens ["Same", "age", "as", "my", "son", ",", "then", "."]
# ::lemmas ["same", "age", "as", "my", "son", ",", "then", "."]
(c26-5 / same-01
       :ARG1 (c26-7 / age-01)
       :ARG2 (c26-2 / age-01
                    :ARG1 (c26-4 / person
                                 :ARG0-of (c26-0 / have-rel-role-91
                                                 :ARG1 (c26-3 / i)
                                                 :ARG2 (c26-1 / son))))
       :mod (c26-6 / then))

# ::snt Thanks you.
# ::tokens ["Thanks", "you", "."]
# ::lemmas ["thanks", "you", "."]
(c27-1 / thank-01
       :ARG0 (c27-2 / i)
       :ARG1 (c27-0 / you))

# ::snt everybody knows that 'walking while black' is a very serious crime to racist police. Obvs.
# ::tokens ["everybody", "knows", "that", "'", "walking", "while", "black", "'", "is", "a", "very", "serious", "crime", "to", "racist", "police", ".", "Obvs", "."]
# ::lemmas ["everybody", "know", "that", "'", "walk", "while", "black", "'", "be", "a", "very", "serious", "crime", "to", "racist", "police", ".", "Obvs", "."]
(c29-1 / multi-sentence
       :snt1 (c29-8 / know-01
                    :ARG0 (c29-4 / everybody)
                    :ARG1 (c29-7 / serious-02
                                 :ARG1 (c29-6 / crime-02
                                              :ARG1 (c29-0 / walk-01
                                                           :time (c29-2 / black-05)))
                                 :degree (c29-5 / very)))
       :snt2 (c29-3 / obvs))

# ::snt Looks like cops feel free to shoot to kill, if the target is a black manI doubt we'll see a cop jailed for it
# ::tokens ["Looks", "like", "cops", "feel", "free", "to", "shoot", "to", "kill", ",", "if", "the", "target", "is", "a", "black", "manI", "doubt", "we", "'ll", "see", "a", "cop", "jailed", "for", "it"]
# ::lemmas ["look", "like", "cop", "feel", "free", "to", "shoot", "to", "kill", ",", "if", "the", "target", "be", "a", "black", "manI", "doubt", "we", "'ll", "see", "a", "cop", "jail", "for", "it"]
(c30-3 / multi-sentence
       :snt1 (c30-2 / look-02
                    :ARG1 (c30-4 / feel-01
                                 :ARG0 (c30-11 / cop)
                                 :ARG1 (c30-8 / free-04
                                              :ARG1 c30-11
                                              :ARG3 (c30-13 / shoot-02
                                                            :ARG0 c30-11
                                                            :purpose (c30-15 / kill-01
                                                                             :ARG0 c30-11)))))
       :snt2 (c30-10 / doubt-01
                     :ARG0 (c30-7 / i)
                     :ARG1 (c30-6 / see-01
                                  :ARG0 (c30-1 / we)
                                  :ARG1 (c30-0 / jail-01
                                               :ARG1 (c30-12 / cop)
                                               :ARG3 c30-13))
                     :condition (c30-9 / man
                                       :ARG1-of (c30-5 / black-05)
                                       :ARG1-of (c30-14 / target-01))))

# ::snt when I was a teen I read "Black Like Me" and things have not progressed much if at all
# ::tokens ["when", "I", "was", "a", "teen", "I", "read", "\"", "Black", "Like", "Me", "\"", "and", "things", "have", "not", "progressed", "much", "if", "at", "all"]
# ::lemmas ["when", "i", "be", "a", "teen", "i", "read", "\"", "Black", "Like", "Me", "\"", "and", "thing", "have", "not", "progress", "much", "if", "at", "all"]
(c31-9 / and
       :op1 (c31-6 / read-01
                   :ARG0 (c31-3 / i)
                   :ARG1 (c31-1 / book
                                :name (c31-4 / name
                                             :op1 "Black"
                                             :op2 "Like"
                                             :op3 "Me"))
                   :time (c31-8 / teen
                                :domain c31-3))
       :op2 (c31-5 / progress-01
                   :ARG1 (c31-7 / thing)
                   :degree (c31-0 / much)
                   :condition (c31-2 / at-all)
                   :polarity -))

# ::snt walking while black
# ::tokens ["walking", "while", "black"]
# ::lemmas ["walk", "while", "black"]
(c32-0 / walk-01
       :time (c32-1 / black-05))
