# ::snt Horray
# ::tokens ["Horray"]
# ::lemmas ["Horray"]
(c1-0 / horror)

# ::snt Good riddance. We don't want scum like that on this planet.
# ::tokens ["Good", "riddance", ".", "We", "do", "n't", "want", "scum", "like", "that", "on", "this", "planet", "."]
# ::lemmas ["good", "riddance", ".", "we", "do", "not", "want", "scum", "like", "that", "on", "this", "planet", "."]
(c2-1 / multi-sentence
      :snt1 (c2-5 / riddance
                  :ARG1-of (c2-6 / good-02))
      :snt2 (c2-0 / want-01
                  :ARG0 (c2-2 / we)
                  :ARG1 (c2-8 / scum
                              :ARG1-of (c2-3 / resemble-01
                                             :ARG2 (c2-9 / that))
                              :location (c2-4 / planet
                                              :mod (c2-7 / this)))
                  :polarity -))

# ::snt Religious extremism is violent mental illness - hearing voices telling them to kill?? To Broadmoor with these mad ideas
# ::tokens ["Religious", "extremism", "is", "violent", "mental", "illness", "-", "hearing", "voices", "telling", "them", "to", "kill", "?", "?", "To", "Broadmoor", "with", "these", "mad", "ideas"]
# ::lemmas ["religious", "extremism", "be", "violent", "mental", "illness", "-", "hear", "voice", "tell", "they", "to", "kill", "?", "?", "to", "Broadmoor", "with", "these", "mad", "idea"]
(c3-5 / ill-01
      :polarity (c3-16 / amr-unknown)
      :ARG1 (c3-4 / extremism
                  :mod (c3-10 / religion))
      :ARG2 (c3-2 / mental)
      :mod (c3-8 / violent)
      :ARG1-of (c3-9 / mean-01
                     :ARG2 (c3-0 / hear-01
                                 :ARG1 (c3-3 / voice-01
                                             :ARG0-of (c3-15 / tell-01
                                                             :ARG1 (c3-6 / kill-01
                                                                         :ARG0 (c3-14 / they
                                                                                      :ARG2-of c3-15))))))
      :destination (c3-11 / city-district
                          :name (c3-7 / name
                                      :op1 "Broadmoor"))
      :accompanier (c3-12 / idea
                          :ARG1-of (c3-1 / mad-02)
                          :mod (c3-13 / this)))

# ::snt Absolutely
# ::tokens ["Absolutely"]
# ::lemmas ["absolutely"]
(c4-0 / absolute)

# ::snt I agree.
# ::tokens ["I", "agree", "."]
# ::lemmas ["i", "agree", "."]
(c5-1 / agree-01
      :ARG0 (c5-0 / i))

# ::snt : The two suspected gunmen have been killed.
# ::tokens [":", "The", "two", "suspected", "gunmen", "have", "been", "killed", "."]
# ::lemmas [":", "the", "two", "suspect", "gunman", "have", "be", "kill", "."]
(c6-1 / kill-01
      :ARG1 (c6-2 / gunman
                  :ARG2-of (c6-0 / suspect-01)
                  :quant 2))

# ::snt I have seen (out of ) hostages from safely out and the hostage in Dammartin has been freed.
# ::tokens ["I", "have", "seen", "(", "out", "of", ")", "hostages", "from", "safely", "out", "and", "the", "hostage", "in", "Dammartin", "has", "been", "freed", "."]
# ::lemmas ["i", "have", "see", "(", "out", "of", ")", "hostage", "from", "safely", "out", "and", "the", "hostage", "in", "Dammartin", "have", "be", "free", "."]
(c9-8 / see-01
      :ARG0 (c9-5 / i)
      :ARG1 (c9-9 / and
                  :op1 (c9-0 / hostage
                             :ARG1-of (c9-3 / out-06)
                             :ARG1-of (c9-4 / safe-01))
                  :op2 (c9-1 / free-01
                             :ARG1 (c9-2 / hostage
                                         :location (c9-7 / city
                                                         :name (c9-6 / name
                                                                     :op1 "Dammartin"))))))

# ::snt no sympathy here!
# ::tokens ["no", "sympathy", "here", "!"]
# ::lemmas ["no", "sympathy", "here", "!"]
(c10-0 / sympathy
       :location (c10-1 / here)
       :polarity -)

# ::snt Thats good. A stop for now. And a prayer revenge cycle do not continue
# ::tokens ["That", "s", "good", ".", "A", "stop", "for", "now", ".", "And", "a", "prayer", "revenge", "cycle", "do", "not", "continue"]
# ::lemmas ["that", "s", "good", ".", "a", "stop", "for", "now", ".", "and", "a", "prayer", "revenge", "cycle", "do", "not", "continue"]
(c11-0 / multi-sentence
       :snt1 (c11-5 / good-02
                    :ARG1 (c11-8 / that))
       :snt2 (c11-7 / stop-01
                    :time (c11-1 / now))
       :snt3 (c11-9 / and
                    :op2 (c11-4 / continue-01
                                :ARG1 (c11-3 / cycle-02
                                             :ARG1 (c11-6 / revenge)
                                             :manner (c11-2 / pray-01))
                                :polarity -)))

# ::snt Given what they wanted. Wish they'd been taken alive so we could put them in high security mental hospital forever.
# ::tokens ["Given", "what", "they", "wanted", ".", "Wish", "they", "'d", "been", "taken", "alive", "so", "we", "could", "put", "them", "in", "high", "security", "mental", "hospital", "forever", "."]
# ::lemmas ["give", "what", "they", "want", ".", "wish", "they", "would", "be", "take", "alive", "so", "we", "could", "put", "they", "in", "high", "security", "mental", "hospital", "forever", "."]
(c12-3 / multi-sentence
       :snt1 (c12-11 / give-01
                     :ARG1 (c12-14 / thing
                                   :ARG1-of (c12-1 / want-01
                                                   :ARG0 (c12-12 / they))))
       :snt2 (c12-7 / wish-01
                    :ARG1 (c12-8 / take-01
                                 :ARG1 (c12-6 / they)
                                 :ARG3 (c12-2 / live-01
                                              :ARG0 c12-6)
                                 :purpose (c12-9 / possible-01
                                                 :ARG1 (c12-15 / put-01
                                                               :ARG0 (c12-5 / we)
                                                               :ARG1 c12-6
                                                               :ARG2 (c12-0 / hospital
                                                                            :mod (c12-10 / mental)
                                                                            :mod (c12-13 / security
                                                                                         :ARG1-of (c12-16 / high-02)))
                                                               :duration (c12-4 / forever))))))

# ::snt Gun men(3) are def' dead, not heard about the women involved yet.
# ::tokens ["Gun", "men(3", ")", "are", "def", "'", "dead", ",", "not", "heard", "about", "the", "women", "involved", "yet", "."]
# ::lemmas ["Gun", "men(3", ")", "be", "def", "'", "dead", ",", "not", "hear", "about", "the", "woman", "involve", "yet", "."]
(c13-8 / and
       :op1 (c13-6 / die-01
                   :ARG1 (c13-4 / man
                                :mod (c13-7 / gun)
                                :quant 3)
                   :mod (c13-2 / def))
       :op2 (c13-0 / hear-01
                   :ARG1 (c13-1 / woman
                                :ARG1-of (c13-5 / involve-01))
                   :time (c13-3 / yet)
                   :polarity -))

# ::snt : The two suspected gunmen have been killed, according to reports. " Good.
# ::tokens [":", "The", "two", "suspected", "gunmen", "have", "been", "killed", ",", "according", "to", "reports", ".", "\"", "Good", "."]
# ::lemmas [":", "the", "two", "suspect", "gunman", "have", "be", "kill", ",", "accord", "to", "report", ".", "\"", "good", "."]
(c14-0 / multi-sentence
       :snt1 (c14-5 / say-01
                    :ARG0 (c14-2 / report-01)
                    :ARG1 (c14-6 / kill-01
                                 :ARG1 (c14-4 / gunman
                                              :ARG2-of (c14-1 / suspect-01)
                                              :quant 2)))
       :snt2 (c14-3 / good-02))

# ::snt No newson the women hostage taker. All men (3) are shot dead and Police officer injured.No exact number on hostages
# ::tokens ["No", "newson", "the", "women", "hostage", "taker", ".", "All", "men", "(", "3", ")", "are", "shot", "dead", "and", "Police", "officer", "injured", ".", "No", "exact", "number", "on", "hostages"]
# ::lemmas ["no", "newson", "the", "woman", "hostage", "taker", ".", "all", "man", "(", "3", ")", "be", "shoot", "dead", "and", "police", "officer", "injure", ".", "no", "exact", "number", "on", "hostage"]
(c15-2 / multi-sentence
       :snt1 (c15-11 / person
                     :name (c15-9 / name
                                  :op1 "Newson")
                     :ARG0-of (c15-15 / take-01
                                      :ARG1 (c15-0 / hostage))
                     :polarity -)
       :snt2 (c15-17 / and
                     :op1 (c15-14 / shoot-02
                                  :ARG1 (c15-12 / man
                                                :mod (c15-7 / all)
                                                :ARG1-of (c15-1 / mean-01
                                                                :ARG2 (c15-16 / person
                                                                              :quant 3))
                                                :quant 3)
                                  :ARG2 (c15-13 / die-01
                                                :ARG1 c15-12))
                     :op2 (c15-8 / injure-01
                                 :ARG1 (c15-5 / officer
                                              :mod (c15-4 / police))))
       :snt3 (c15-10 / number
                     :mod (c15-6 / exact)
                     :topic (c15-3 / hostage)
                     :polarity -))

# ::snt indoctrination is more like it. Can't medicate that.
# ::tokens ["indoctrination", "is", "more", "like", "it", ".", "Ca", "n't", "medicate", "that", "."]
# ::lemmas ["indoctrination", "be", "more", "like", "it", ".", "can", "not", "medicate", "that", "."]
(c16-2 / multi-sentence
       :snt1 (c16-3 / indoctrinate-01
                    :ARG2-of (c16-0 / have-degree-91
                                    :ARG3 (c16-4 / more)
                                    :ARG4 (c16-6 / it)
                                    :ARG1 c16-3))
       :snt2 (c16-5 / possible-01
                    :ARG1 (c16-1 / medicate-01
                                 :ARG1 c16-3
                                 :ARG2 (c16-7 / that))
                    :polarity -))

# ::snt Terrorists dead? : gunmen killed, according to reports.
# ::tokens ["Terrorists", "dead", "?", ":", "gunmen", "killed", ",", "according", "to", "reports", "."]
# ::lemmas ["terrorist", "dead", "?", ":", "gunman", "kill", ",", "accord", "to", "report", "."]
(c17-4 / say-01
       :ARG0 (c17-1 / report-01)
       :ARG1 (c17-6 / and
                    :op1 (c17-2 / die-01
                                :ARG1 (c17-5 / terrorist))
                    :op2 (c17-0 / kill-01
                                :ARG1 (c17-3 / gunman))))

# ::snt : The two suspected gunmen have been killed, according to reports. " &lt;&lt;Convenient
# ::tokens [":", "The", "two", "suspected", "gunmen", "have", "been", "killed", ",", "according", "to", "reports", ".", "\"", "&", "lt;&lt;Convenient"]
# ::lemmas [":", "the", "two", "suspect", "gunman", "have", "be", "kill", ",", "accord", "to", "report", ".", "\"", "&", "lt;&lt;convenient"]
(c18-3 / say-01
       :ARG0 (c18-1 / report-01)
       :ARG1 (c18-4 / kill-01
                    :ARG1 (c18-2 / gunman
                                 :ARG2-of (c18-0 / suspect-01)
                                 :quant 2)))

# ::snt finally some good news
# ::tokens ["finally", "some", "good", "news"]
# ::lemmas ["finally", "some", "good", "news"]
(c19-0 / news
       :ARG1-of (c19-2 / good-02)
       :mod (c19-3 / some)
       :mod (c19-1 / final))

# ::snt They are reporting now all dead one injured hostage
# ::tokens ["They", "are", "reporting", "now", "all", "dead", "one", "injured", "hostage"]
# ::lemmas ["they", "be", "report", "now", "all", "dead", "one", "injure", "hostage"]
(c20-6 / report-01
       :ARG0 (c20-8 / they)
       :ARG1 (c20-10 / and
                     :op1 (c20-5 / die-01
                                 :ARG1 (c20-4 / person
                                              :mod (c20-1 / all)
                                              :ARG1-of (c20-2 / include-91
                                                              :ARG2 (c20-9 / person
                                                                           :ARG1-of (c20-0 / hostage-01)))))
                     :op2 (c20-7 / injure-01
                                 :ARG1 c20-9))
       :time (c20-3 / now))

# ::snt good! Evil scum.
# ::tokens ["good", "!", "Evil", "scum", "."]
# ::lemmas ["good", "!", "evil", "scum", "."]
(c21-2 / multi-sentence
       :snt1 (c21-3 / good-02)
       :snt2 (c21-0 / scum
                    :mod (c21-1 / evil)))

# ::snt CNN hasn't said so they're live
# ::tokens ["CNN", "has", "n't", "said", "so", "they", "'re", "live"]
# ::lemmas ["CNN", "have", "not", "say", "so", "they", "be", "live"]
(c22-4 / say-01
       :ARG0 (c22-2 / publication
                    :name (c22-1 / name
                                 :op1 "CNN"))
       :ARG0-of (c22-3 / cause-01
                       :ARG1 (c22-0 / live-01
                                    :ARG0 (c22-5 / they)))
       :polarity -)

# ::snt ~If those two murderers were dogs, Obamawould eat them.Tomorrow..after autopsy and -hour marinade in Special Sauce
# ::tokens ["~If", "those", "two", "murderers", "were", "dogs", ",", "Obamawould", "eat", "them", ".", "Tomorrow", "..", "after", "autopsy", "and", "-hour", "marinade", "in", "Special", "Sauce"]
# ::lemmas ["~if", "those", "two", "murderer", "be", "dog", ",", "Obamawould", "eat", "they", ".", "Tomorrow", "..", "after", "autopsy", "and", "-hour", "marinade", "in", "Special", "Sauce"]
(c23-2 / multi-sentence
       :snt1 (c23-4 / eat-01
                    :ARG0 (c23-8 / person
                                 :name (c23-6 / name
                                              :op1 "Obama"))
                    :ARG1 (c23-9 / dog
                                 :domain (c23-14 / person
                                                 :ARG0-of (c23-10 / murder-01)
                                                 :mod (c23-13 / that)
                                                 :quant 2)
                                 :condition-of c23-4))
       :snt2 (c23-3 / be-temporally-at-91
                    :ARG2 (c23-11 / tomorrow)
                    :time (c23-15 / after
                                  :op1 (c23-5 / autopsy-01)
                                  :op2 (c23-1 / marinade
                                              :ARG1-of (c23-12 / special-02)
                                              :duration (c23-7 / temporal-quantity
                                                               :unit (c23-0 / hour)
                                                               :quant 1)))))
