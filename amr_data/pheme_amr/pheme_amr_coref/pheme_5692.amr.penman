# ::snt is he holding a bag of potato chips in the other hand?
# ::tokens ["is", "he", "holding", "a", "bag", "of", "potato", "chips", "in", "the", "other", "hand", "?"]
# ::lemmas ["be", "he", "hold", "a", "bag", "of", "potato", "chip", "in", "the", "other", "hand", "?"]
(c1-0 / hold-01
      :ARG0 (c1-7 / he)
      :ARG1 (c1-1 / bag
                  :ARG0-of (c1-4 / contain-01
                                 :ARG1 (c1-3 / chip
                                             :mod (c1-2 / potato))))
      :polarity (c1-6 / amr-unknown)
      :ARG2-of (c1-5 / contrast-01))

# ::snt let a man eat his chips in peace.
# ::tokens ["let", "a", "man", "eat", "his", "chips", "in", "peace", "."]
# ::lemmas ["let", "a", "man", "eat", "his", "chip", "in", "peace", "."]
(c2-1 / let-01
      :ARG0 (c2-0 / you)
      :ARG1 (c2-3 / eat-01
                  :ARG0 (c2-2 / man)
                  :ARG1 (c2-5 / chip
                              :poss c2-2)
                  :manner (c2-4 / peace))
      :mode imperative)

# ::snt Crazy thing about this photo for me is that dude doesn't seem to be wearing gloves. Youch, that must burn.
# ::tokens ["Crazy", "thing", "about", "this", "photo", "for", "me", "is", "that", "dude", "does", "n't", "seem", "to", "be", "wearing", "gloves", ".", "Youch", ",", "that", "must", "burn", "."]
# ::lemmas ["crazy", "thing", "about", "this", "photo", "for", "i", "be", "that", "dude", "do", "not", "seem", "to", "be", "wear", "glove", ".", "youch", ",", "that", "must", "burn", "."]
(c3-2 / multi-sentence
      :snt1 (c3-11 / seem-01
                   :ARG1 (c3-7 / dude
                               :ARG0-of (c3-0 / wear-01
                                              :ARG1 (c3-9 / glove)))
                   :ARG2 (c3-5 / i)
                   :topic (c3-6 / photo
                                :mod (c3-12 / this))
                   :mod (c3-8 / crazy)
                   :polarity -)
      :snt2 (c3-4 / obligate-01
                  :ARG2 (c3-3 / burn-01
                              :ARG1 (c3-10 / that))
                  :mod (c3-1 / youch
                             :mode expressive)))

# ::snt RT : A man picks up burning tear gas can and throws it back at police. pic by
# ::tokens ["RT", ":", "A", "man", "picks", "up", "burning", "tear", "gas", "can", "and", "throws", "it", "back", "at", "police", ".", "pic", "by"]
# ::lemmas ["RT", ":", "a", "man", "pick", "up", "burn", "tear", "gas", "can", "and", "throw", "it", "back", "at", "police", ".", "pic", "by"]
(c4-0 / multi-sentence
      :snt1 (c4-2 / byline-91
                  :ARG0 (c4-4 / publication
                              :name (c4-3 / name
                                          :op1 "RT")))
      :snt2 (c4-13 / and
                   :op1 (c4-12 / pick-up-04
                               :ARG0 (c4-5 / man)
                               :ARG1 (c4-6 / can
                                           :ARG1-of (c4-7 / burn-01)
                                           :consist-of (c4-8 / gas
                                                             :mod (c4-11 / tear))))
                   :op2 (c4-9 / throw-01
                              :ARG0 c4-5
                              :ARG1 c4-6
                              :ARG2 (c4-1 / police)
                              :direction (c4-10 / back))))

# ::snt maybe thats what the chip bag is for...bad choice to block heat tho
# ::tokens ["maybe", "that", "s", "what", "the", "chip", "bag", "is", "for", "...", "bad", "choice", "to", "block", "heat", "tho"]
# ::lemmas ["maybe", "that", "s", "what", "the", "chip", "bag", "be", "for", "...", "bad", "choice", "to", "block", "heat", "tho"]
(c5-1 / multi-sentence
      :snt1 (c5-4 / possible-01
                  :ARG1 (c5-0 / have-purpose-91
                              :ARG1 (c5-2 / bag
                                          :mod (c5-6 / chip))
                              :ARG2 (c5-9 / that)))
      :snt2 (c5-10 / have-concession-91
                   :ARG1 (c5-5 / choose-01
                               :ARG1 (c5-7 / block-01
                                           :ARG1 (c5-3 / heat))
                               :ARG1-of (c5-8 / bad-07))))

# ::snt : A man picks up burning tear gas can and throws it back at police. pic by "
# ::tokens [":", "A", "man", "picks", "up", "burning", "tear", "gas", "can", "and", "throws", "it", "back", "at", "police", ".", "pic", "by", "\""]
# ::lemmas [":", "a", "man", "pick", "up", "burn", "tear", "gas", "can", "and", "throw", "it", "back", "at", "police", ".", "pic", "by", "\""]
(c6-0 / multi-sentence
      :snt1 (c6-12 / and
                   :op1 (c6-3 / pick-up-04
                              :ARG0 (c6-4 / man)
                              :ARG1 (c6-5 / can
                                          :ARG1-of (c6-2 / burn-01)
                                          :consist-of (c6-6 / gas
                                                            :mod (c6-10 / tear))))
                   :op2 (c6-8 / throw-01
                              :ARG0 c6-4
                              :ARG1 c6-5
                              :ARG2 (c6-11 / police)
                              :direction (c6-7 / back)))
      :snt2 (c6-9 / byline-91
                  :ARG1 (c6-1 / pic)))

# ::snt all while eating potato chips. dope.
# ::tokens ["all", "while", "eating", "potato", "chips", ".", "dope", "."]
# ::lemmas ["all", "while", "eat", "potato", "chip", ".", "dope", "."]
(c7-0 / multi-sentence
      :snt1 (c7-1 / be-temporally-at-91
                  :ARG2 (c7-6 / all)
                  :time (c7-2 / eat-01
                              :ARG1 (c7-5 / chip
                                          :mod (c7-3 / potato))))
      :snt2 (c7-4 / dope))

# ::snt meanwhjile in
# ::tokens ["meanwhjile", "in"]
# ::lemmas ["meanwhjile", "in"]
(c8-1 / meanwhjile
      :location (c8-0 / here))

# ::snt A man picks up burning tear gas can and throws it back at police. pic by
# ::tokens ["A", "man", "picks", "up", "burning", "tear", "gas", "can", "and", "throws", "it", "back", "at", "police", ".", "pic", "by"]
# ::lemmas ["a", "man", "pick", "up", "burn", "tear", "gas", "can", "and", "throw", "it", "back", "at", "police", ".", "pic", "by"]
(c9-10 / and
       :op1 (c9-3 / pick-up-04
                  :ARG0 (c9-0 / man)
                  :ARG1 (c9-4 / can
                              :ARG1-of (c9-2 / burn-01)
                              :consist-of (c9-5 / gas
                                                :mod (c9-8 / tear))))
       :op2 (c9-7 / throw-01
                  :ARG0 c9-0
                  :ARG1 c9-4
                  :ARG2 (c9-9 / police)
                  :direction (c9-6 / back))
       :ARG1-of (c9-1 / post-01))

# ::snt A nourished freedom fighter is a longer serving freedom fighter.
# ::tokens ["A", "nourished", "freedom", "fighter", "is", "a", "longer", "serving", "freedom", "fighter", "."]
# ::lemmas ["a", "nourish", "freedom", "fighter", "be", "a", "long", "serve", "freedom", "fighter", "."]
(c10-8 / serve-01
       :ARG0 (c10-7 / person
                    :ARG0-of (c10-1 / fight-01
                                    :ARG2 (c10-5 / free-04))
                    :ARG1-of (c10-6 / nourish-01))
       :ARG1 (c10-10 / person
                     :ARG0-of (c10-4 / fight-01
                                     :ARG2 (c10-9 / free-04)))
       :ARG1-of (c10-2 / long-03
                       :ARG2-of (c10-0 / have-degree-91
                                       :ARG1 c10-8
                                       :ARG3 (c10-3 / more))))

# ::snt ~~~&gt; Is it that new poisoned tear gas the Israelis just marketed?
# ::tokens ["~~~&gt", ";", "Is", "it", "that", "new", "poisoned", "tear", "gas", "the", "Israelis", "just", "marketed", "?"]
# ::lemmas ["~~~&gt", ";", "be", "it", "that", "new", "poison", "tear", "gas", "the", "Israelis", "just", "market", "?"]
(c11-6 / gas
       :polarity (c11-9 / amr-unknown)
       :mod (c11-7 / tear)
       :ARG1-of (c11-4 / poison-01)
       :ARG1-of (c11-2 / new-01)
       :ARG1-of (c11-1 / market-01
                       :ARG0 (c11-8 / person
                                    :mod (c11-5 / country
                                                :name (c11-3 / name
                                                             :op1 "Israel")))
                       :mod (c11-0 / just)))

# ::snt best part is he never dropped his bag of chips
# ::tokens ["best", "part", "is", "he", "never", "dropped", "his", "bag", "of", "chips"]
# ::lemmas ["good", "part", "be", "he", "never", "drop", "his", "bag", "of", "chip"]
(c12-5 / drop-01
       :ARG0 (c12-0 / he)
       :ARG1 (c12-2 / bag
                    :ARG0-of (c12-6 / contain-01
                                    :ARG1 (c12-7 / chip))
                    :poss c12-0)
       :time (c12-3 / ever)
       :ARG1-of (c12-9 / have-degree-91
                       :ARG2 (c12-8 / good-02
                                    :ARG1 (c12-4 / part)
                                    :ARG3 (c12-1 / most)))
       :polarity -)

# ::snt and look at the shirt he is wearing....
# ::tokens ["and", "look", "at", "the", "shirt", "he", "is", "wearing", "...."]
# ::lemmas ["and", "look", "at", "the", "shirt", "he", "be", "wear", "...."]
(c13-5 / and
       :op2 (c13-3 / look-01
                   :ARG0 (c13-1 / you)
                   :ARG1 (c13-4 / shirt
                                :ARG1-of (c13-2 / wear-01
                                                :ARG0 (c13-0 / he)))
                   :mode imperative))

# ::snt hero
# ::tokens ["hero"]
# ::lemmas ["hero"]
(c14-0 / hero)

# ::snt OWNED!
# ::tokens ["OWNED", "!"]
# ::lemmas ["OWNED", "!"]
(c15-0 / OWN-01)
