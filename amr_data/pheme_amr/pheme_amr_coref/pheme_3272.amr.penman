# ::snt people killed and in serious condition as hostage siege at Sydney caf ends l via
# ::tokens ["people", "killed", "and", "in", "serious", "condition", "as", "hostage", "siege", "at", "Sydney", "caf", "ends", "l", "via"]
# ::lemmas ["people", "kill", "and", "in", "serious", "condition", "as", "hostage", "siege", "at", "Sydney", "caf", "end", "l", "via"]
(c1-10 / and
       :op1 (c1-9 / kill-01
                  :ARG1 (c1-4 / person))
       :op2 (c1-6 / condition
                  :ARG1-of (c1-8 / serious-02))
       :time (c1-1 / end-01
                   :ARG1 (c1-2 / siege-01
                               :ARG1 (c1-5 / cafe
                                           :location (c1-7 / city
                                                           :name (c1-3 / name
                                                                       :op1 "Sydney")))
                               :mod (c1-0 / hostage))))

# ::snt cnn reporting so its bound to be incorrect
# ::tokens ["cnn", "reporting", "so", "its", "bound", "to", "be", "incorrect"]
# ::lemmas ["cnn", "reporting", "so", "its", "bind", "to", "be", "incorrect"]
(c2-4 / cause-01
      :ARG0 (c2-3 / report-01
                  :ARG0 (c2-2 / publication
                              :name (c2-1 / name
                                          :op1 "CNN")))
      :ARG1 (c2-0 / infer-01
                  :ARG1 (c2-5 / correct-02
                              :ARG1 (c2-6 / it)
                              :polarity -)))

# ::snt to the victims &amp; their families
# ::tokens ["to", "the", "victims", "&", "amp", ";", "their", "families"]
# ::lemmas ["to", "the", "victims", "&", "amp", ";", "their", "family"]
(c3-4 / and
      :op1 (c3-2 / victim)
      :op2 (c3-3 / person
                 :ARG0-of (c3-0 / have-rel-role-91
                                :ARG1 c3-2
                                :ARG2 (c3-1 / family))))

# ::snt Better be safe than sorry...!Why don't we lock in dangerous people for good and for ever...?
# ::tokens ["Better", "be", "safe", "than", "sorry", "...", "!Why", "do", "n't", "we", "lock", "in", "dangerous", "people", "for", "good", "and", "for", "ever", "...", "?"]
# ::lemmas ["well", "be", "safe", "than", "sorry", "...", "!why", "do", "not", "we", "lock", "in", "dangerous", "people", "for", "good", "and", "for", "ever", "...", "?"]
(c4-3 / multi-sentence
      :snt1 (c4-0 / have-degree-91
                  :ARG1 (c4-12 / safe-01)
                  :ARG2 (c4-11 / good-02)
                  :ARG3 (c4-8 / more)
                  :ARG4 (c4-6 / safe-01
                              :ARG1-of (c4-2 / sorry-01)))
      :snt2 (c4-10 / cause-01
                   :ARG0 (c4-13 / amr-unknown)
                   :ARG1 (c4-4 / lock-in-02
                               :ARG0 (c4-1 / we)
                               :ARG1 (c4-9 / person
                                           :ARG0-of (c4-7 / endanger-01))
                               :time (c4-5 / forever)
                               :polarity -)))

# ::snt MT : BREAKING: killed and in serious condition as hostage siege at Sydney caf ends. Australian broadcaster.
# ::tokens ["MT", ":", "BREAKING", ":", "killed", "and", "in", "serious", "condition", "as", "hostage", "siege", "at", "Sydney", "caf", "ends", ".", "Australian", "broadcaster", "."]
# ::lemmas ["MT", ":", "breaking", ":", "kill", "and", "in", "serious", "condition", "as", "hostage", "siege", "at", "Sydney", "caf", "end", ".", "Australian", "broadcaster", "."]
(c5-1 / multi-sentence
      :snt1 (c5-2 / break-13
                  :ARG1 (c5-15 / and
                               :op1 (c5-14 / kill-01
                                           :ARG1 (c5-7 / person
                                                       :name (c5-5 / name
                                                                   :op1 "MT")))
                               :op2 (c5-9 / condition
                                          :ARG1-of (c5-13 / serious-02))
                               :time (c5-3 / end-01
                                           :ARG1 (c5-4 / standoff
                                                       :location (c5-8 / cafe
                                                                       :location (c5-12 / city
                                                                                        :name (c5-6 / name
                                                                                                    :op1 "Sydney")))
                                                       :mod (c5-0 / hostage)))))
      :snt2 c5-7
      :ARG0-of (c5-10 / broadcast-01)
      :mod (c5-16 / country
                  :name (c5-11 / name
                               :op1 "Australia")))

# ::snt MT BREAKING: killed and in serious condition as ends -- Australian broadcaster.
# ::tokens ["MT", "BREAKING", ":", "killed", "and", "in", "serious", "condition", "as", "ends", "--", "Australian", "broadcaster", "."]
# ::lemmas ["MT", "BREAKING", ":", "kill", "and", "in", "serious", "condition", "as", "end", "--", "Australian", "broadcaster", "."]
(c6-7 / say-01
      :ARG0 (c6-0 / broadcast-program
                  :name (c6-3 / name
                              :op1 "MT")
                  :mod (c6-6 / country
                             :name (c6-4 / name
                                         :op1 "Australia")))
      :ARG1 (c6-9 / and
                  :op1 (c6-8 / kill-01)
                  :op2 (c6-5 / condition
                             :ARG1-of (c6-1 / serious-02))
                  :time (c6-2 / end-01)))

# ::snt ": BREAKING: people killed and in serious condition as hostage siege at Sydney caf ends -- Australian broadcaster
# ::tokens ["\"", ":", "BREAKING", ":", "people", "killed", "and", "in", "serious", "condition", "as", "hostage", "siege", "at", "Sydney", "caf", "ends", "--", "Australian", "broadcaster"]
# ::lemmas ["\"", ":", "breaking", ":", "people", "kill", "and", "in", "serious", "condition", "as", "hostage", "siege", "at", "Sydney", "caf", "end", "--", "Australian", "broadcaster"]
(c7-1 / break-13
      :ARG0 (c7-9 / broadcast-program
                  :mod (c7-8 / country
                             :name (c7-4 / name
                                         :op1 "Australia")))
      :ARG1 (c7-13 / and
                   :op1 (c7-12 / kill-01
                               :ARG1 (c7-6 / person))
                   :op2 (c7-7 / condition
                              :ARG1-of (c7-11 / serious-02))
                   :time (c7-2 / end-01
                               :ARG1 (c7-3 / standoff
                                           :mod (c7-0 / hostage)
                                           :location (c7-10 / cafe
                                                            :location (c7-14 / city
                                                                             :name (c7-5 / name
                                                                                         :op1 "Sydney")))))))

# ::snt : : 'at least' the wrong flag proves that criminal is not an militant!
# ::tokens [":", ":", "'", "at", "least", "'", "the", "wrong", "flag", "proves", "that", "criminal", "is", "not", "an", "militant", "!"]
# ::lemmas [":", ":", "'", "at", "least", "'", "the", "wrong", "flag", "prove", "that", "criminal", "be", "not", "an", "militant", "!"]
(c8-3 / prove-01
      :ARG0 (c8-1 / flag
                  :ARG1-of (c8-0 / wrong-04))
      :ARG1 (c8-2 / militant
                  :domain (c8-5 / person
                                :ARG2-of (c8-4 / criminal-03))
                  :polarity -)
      :mod (c8-6 / at-least))

# ::snt my Prayers go out to the Families.
# ::tokens ["my", "Prayers", "go", "out", "to", "the", "Families", "."]
# ::lemmas ["my", "Prayers", "go", "out", "to", "the", "Families", "."]
(c9-3 / go-out-17
      :ARG1 (c9-4 / thing
                  :ARG1-of (c9-2 / pray-01
                                 :ARG0 (c9-1 / i)))
      :ARG2 (c9-0 / family))

# ::snt omg
# ::tokens ["omg"]
# ::lemmas ["omg"]
(c10-0 / oh-my-god
       :mode expressive)

# ::snt : people killed and in serious condition as hostage siege at Sydney caf ends -- Australian broadcaster.
# ::tokens [":", "people", "killed", "and", "in", "serious", "condition", "as", "hostage", "siege", "at", "Sydney", "caf", "ends", "--", "Australian", "broadcaster", "."]
# ::lemmas [":", "people", "kill", "and", "in", "serious", "condition", "as", "hostage", "siege", "at", "Sydney", "caf", "end", "--", "Australian", "broadcaster", "."]
(c11-10 / say-01
        :ARG0 (c11-6 / person
                     :ARG0-of (c11-1 / broadcast-01)
                     :mod (c11-8 / country
                                 :name (c11-4 / name
                                              :op1 "Australia")))
        :ARG1 (c11-13 / and
                      :op1 (c11-11 / kill-01
                                   :ARG1 (c11-12 / person))
                      :op2 (c11-7 / condition
                                  :ARG1-of (c11-2 / serious-02))
                      :time (c11-3 / end-01
                                   :ARG1 (c11-0 / standoff
                                                :location (c11-9 / cafe
                                                                 :mod (c11-14 / city
                                                                              :name (c11-5 / name
                                                                                           :op1 "Sydney")))))))

# ::snt : ..However, While that Maniac were on a collapse-edge, Police acted As-Usual in a very stupid &amp; dramatic manner to end
# ::tokens [":", "..", "However", ",", "While", "that", "Maniac", "were", "on", "a", "collapse", "-", "edge", ",", "Police", "acted", "As", "-", "Usual", "in", "a", "very", "stupid", "&", "amp", ";", "dramatic", "manner", "to", "end"]
# ::lemmas [":", "..", "however", ",", "while", "that", "Maniac", "be", "on", "a", "collapse", "-", "edge", ",", "Police", "act", "as", "-", "usual", "in", "a", "very", "stupid", "&", "amp", ";", "dramatic", "manner", "to", "end"]
(c12-7 / contrast-01
       :ARG2 (c12-11 / act-01
                     :ARG0 (c12-5 / police)
                     :ARG1 (c12-6 / disrespect-01
                                  :ARG0 c12-5)
                     :manner (c12-2 / and
                                    :op1 (c12-10 / stupid
                                                 :degree (c12-4 / very))
                                    :op2 (c12-0 / drama))
                     :time (c12-1 / end-01
                                  :ARG1 (c12-8 / criminal-organization
                                               :name (c12-3 / name
                                                            :op1 "Maniac"))
                                  :manner (c12-9 / collapse-01
                                                 :ARG1 c12-8))))

# ::snt Better he be dead. . dead . hostages.
# ::tokens ["Better", "he", "be", "dead", ".", ".", "dead", ".", "hostages", "."]
# ::lemmas ["well", "he", "be", "dead", ".", ".", "dead", ".", "hostages", "."]
(c13-2 / multi-sentence
       :snt1 (c13-0 / have-degree-91
                    :ARG1 (c13-5 / die-01
                                 :ARG1 (c13-7 / he))
                    :ARG2 (c13-6 / good-02
                                 :ARG1 c13-5)
                    :ARG3 (c13-4 / more))
       :snt2 (c13-3 / hostage
                    :ARG1-of (c13-1 / die-01)))

# ::snt : : Nop! otherwise that criminal wouldn't ask for the 'correct' flag
# ::tokens [":", ":", "Nop", "!", "otherwise", "that", "criminal", "would", "n't", "ask", "for", "the", "'", "correct", "'", "flag"]
# ::lemmas [":", ":", "nop", "!", "otherwise", "that", "criminal", "would", "not", "ask", "for", "the", "'", "correct", "'", "flag"]
(c14-2 / opine-01
       :ARG0 (c14-3 / i)
       :ARG1 (c14-8 / ask-02
                    :ARG0 (c14-5 / person
                                 :ARG2-of (c14-7 / criminal-03))
                    :ARG1 (c14-1 / flag
                                 :ARG1-of (c14-6 / correct-02))
                    :condition (c14-0 / have-polarity-91
                                      :ARG2 -)
                    :polarity -)
       :mod (c14-4 / nasty
                   :mode expressive))

# ::snt Media reports hours ago indicated flag was 'aligned' with
# ::tokens ["Media", "reports", "hours", "ago", "indicated", "flag", "was", "'", "aligned", "'", "with"]
# ::lemmas ["medium", "report", "hours", "ago", "indicate", "flag", "be", "'", "align", "'", "with"]
(c15-4 / indicate-01
       :ARG0 (c15-7 / report-01
                    :ARG0 (c15-2 / media)
                    :time (c15-3 / before
                                 :op1 (c15-5 / now)
                                 :quant (c15-6 / multiple
                                               :op1 (c15-8 / temporal-quantity
                                                           :unit (c15-0 / hour)
                                                           :quant 1))))
       :ARG1 (c15-9 / align-01
                    :ARG1 (c15-1 / flag
                                 :ARG2-of c15-9)))

# ::snt ..Australians must rise up strongly against Islamic fundamentalism. This is no racism no matter what they say!!!
# ::tokens ["..", "Australians", "must", "rise", "up", "strongly", "against", "Islamic", "fundamentalism", ".", "This", "is", "no", "racism", "no", "matter", "what", "they", "say", "!", "!", "!"]
# ::lemmas ["..", "Australians", "must", "rise", "up", "strongly", "against", "Islamic", "fundamentalism", ".", "this", "be", "no", "racism", "no", "matter", "what", "they", "say", "!", "!", "!"]
(c16-2 / multi-sentence
       :snt1 (c16-3 / obligate-01
                    :ARG2 (c16-10 / rise-up-03
                                  :ARG1 (c16-9 / person
                                               :mod (c16-11 / country
                                                            :name (c16-7 / name
                                                                         :op1 "Australia")))
                                  :ARG1-of (c16-14 / strong-02)
                                  :prep-against (c16-1 / fundamentalism
                                                       :mod (c16-6 / religious-group
                                                                   :name (c16-8 / name
                                                                                :op1 "Islam")))))
       :snt2 (c16-5 / racism
                    :domain (c16-15 / this)
                    :ARG1-of (c16-0 / regardless-91
                                    :ARG2 (c16-13 / thing
                                                  :ARG1-of (c16-4 / say-01
                                                                  :ARG0 (c16-12 / they))))
                    :polarity -))
