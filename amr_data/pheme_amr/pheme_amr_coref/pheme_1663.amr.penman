# ::snt subject just arrested
# ::tokens ["subject", "just", "arrested"]
# ::lemmas ["subject", "just", "arrest"]
(c1-0 / subject
      :ARG1-of (c1-2 / arrest-01
                     :time (c1-1 / just)))

# ::snt one cares stop interrupting the programs! All you do is show the same thing over and over!
# ::tokens ["one", "cares", "stop", "interrupting", "the", "programs", "!", "All", "you", "do", "is", "show", "the", "same", "thing", "over", "and", "over", "!"]
# ::lemmas ["one", "care", "stop", "interrupt", "the", "program", "!", "all", "you", "do", "be", "show", "the", "same", "thing", "over", "and", "over", "!"]
(c2-2 / multi-sentence
      :snt1 (c2-9 / care-01
                  :ARG0 (c2-4 / one)
                  :ARG1 (c2-10 / stop-01
                               :ARG0 c2-4
                               :ARG1 (c2-6 / interrupt-01
                                           :ARG0 c2-4
                                           :ARG1 (c2-7 / program))
                               :mode imperative))
      :snt2 (c2-5 / show-01
                  :ARG0 (c2-0 / you)
                  :ARG1 (c2-11 / thing
                               :ARG1-of (c2-1 / same-01))
                  :frequency (c2-3 / over-and-over)
                  :mod (c2-12 / all)
                  :ARG1-of (c2-8 / do-02
                                 :ARG0 c2-0)))

# ::snt Please update your tweet. It's a Jewish supermarket that is under fire.
# ::tokens ["Please", "update", "your", "tweet", ".", "It", "'s", "a", "Jewish", "supermarket", "that", "is", "under", "fire", "."]
# ::lemmas ["please", "update", "your", "tweet", ".", "it", "be", "a", "Jewish", "supermarket", "that", "be", "under", "fire", "."]
(c3-2 / update-01
      :ARG0 (c3-0 / you)
      :ARG1 (c3-6 / tweet-01
                  :ARG0 c3-0)
      :ARG2 (c3-5 / supermarket
                  :mod (c3-4 / religious-group
                             :name (c3-3 / name
                                         :op1 "Jew"))
                  :ARG1-of (c3-1 / fire-03))
      :mode imperative
      :polite +)

# ::snt Hopefully the cops will bring more than just rubber truncheons this time. God bless the French police.
# ::tokens ["Hopefully", "the", "cops", "will", "bring", "more", "than", "just", "rubber", "truncheons", "this", "time", ".", "God", "bless", "the", "French", "police", "."]
# ::lemmas ["hopefully", "the", "cop", "will", "bring", "more", "than", "just", "rubber", "truncheon", "this", "time", ".", "God", "bless", "the", "French", "police", "."]
(c4-1 / multi-sentence
      :snt1 (c4-6 / hope-01
                  :ARG1 (c4-7 / bring-01
                              :ARG0 (c4-16 / cop)
                              :ARG1 (c4-18 / thing
                                           :ARG1-of (c4-5 / have-quant-91
                                                          :ARG3 (c4-9 / more)
                                                          :ARG4 (c4-13 / thing
                                                                       :ARG1-of (c4-11 / truncheon-00)
                                                                       :mod (c4-10 / rubber)
                                                                       :mod (c4-0 / just))))
                              :time (c4-14 / time
                                           :mod (c4-17 / this))))
      :snt2 (c4-12 / bless-01
                   :ARG0 (c4-2 / person
                               :name (c4-8 / name
                                           :op1 "God"))
                   :ARG1 (c4-4 / police
                               :mod (c4-3 / country
                                          :name (c4-15 / name
                                                       :op1 "France")))
                   :mode imperative))

# ::snt where are we heading in this world ? Thank God for U.S presence in .
# ::tokens ["where", "are", "we", "heading", "in", "this", "world", "?", "Thank", "God", "for", "U.S", "presence", "in", "."]
# ::lemmas ["where", "be", "we", "head", "in", "this", "world", "?", "thank", "God", "for", "U.S", "presence", "in", "."]
(c5-2 / multi-sentence
      :snt1 (c5-0 / head-02
                  :ARG0 (c5-1 / we)
                  :ARG1 (c5-4 / world
                              :mod (c5-10 / this))
                  :location (c5-12 / amr-unknown))
      :snt2 (c5-9 / thank-01
                  :ARG0 (c5-3 / we)
                  :ARG1 (c5-7 / person
                              :name (c5-5 / name
                                          :op1 "God"))
                  :ARG2 (c5-11 / present-02
                               :ARG1 (c5-8 / country
                                           :name (c5-6 / name
                                                       :op1 "U.S."))
                               :ARG2 c5-3)))

# ::snt : JUST IN: A separate shooting and hostage situation at a supermarket in eastern Paris has been reported ... developing arm Paris!
# ::tokens [":", "JUST", "IN", ":", "A", "separate", "shooting", "and", "hostage", "situation", "at", "a", "supermarket", "in", "eastern", "Paris", "has", "been", "reported", "...", "developing", "arm", "Paris", "!"]
# ::lemmas [":", "just", "in", ":", "a", "separate", "shooting", "and", "hostage", "situation", "at", "a", "supermarket", "in", "eastern", "Paris", "have", "be", "report", "...", "develop", "arm", "Paris", "!"]
(c6-13 / and
       :op1 (c6-9 / report-01
                  :ARG1 (c6-6 / and
                              :op1 (c6-12 / shoot-02
                                          :location (c6-4 / supermarket
                                                          :location (c6-5 / east
                                                                          :part-of (c6-10 / city
                                                                                          :name (c6-7 / name
                                                                                                      :op1 "Paris"))))
                                          :ARG1-of (c6-2 / separate-02))
                              :op2 (c6-3 / situation
                                         :mod (c6-0 / hostage)
                                         :location c6-4))
                  :mod (c6-1 / just))
       :op2 (c6-11 / develop-02
                   :ARG1 (c6-8 / arm
                               :location c6-10)))

# ::snt Kosher supermarket.
# ::tokens ["Kosher", "supermarket", "."]
# ::lemmas ["Kosher", "supermarket", "."]
(c7-0 / supermarket
      :mod (c7-1 / kosher))
