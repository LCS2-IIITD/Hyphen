# ::snt I believe ID cards left in getaway vehicle have helped trace the perps, mock ye not
# ::tokens ["I", "believe", "ID", "cards", "left", "in", "getaway", "vehicle", "have", "helped", "trace", "the", "perps", ",", "mock", "ye", "not"]
# ::lemmas ["i", "believe", "ID", "card", "leave", "in", "getaway", "vehicle", "have", "help", "trace", "the", "perp", ",", "mock", "ye", "not"]
(c1-4 / believe-01
      :ARG0 (c1-5 / i)
      :ARG1 (c1-0 / help-01
                  :ARG0 (c1-9 / card
                              :instrument-of (c1-8 / document-01
                                                   :ARG1 (c1-10 / identity))
                              :ARG1-of (c1-2 / leave-12
                                             :ARG2 (c1-6 / vehicle
                                                         :ARG1-of (c1-11 / get-away-08))))
                  :ARG1 (c1-13 / trace-02
                               :ARG1 (c1-7 / perp)))
      :ARG1-of (c1-3 / mock-01
                     :ARG0 c1-5
                     :ARG1-of (c1-12 / request-confirmation-91
                                     :ARG0 c1-5
                                     :ARG2 (c1-1 / you))))

# ::snt Don't forget, wants to give everyone guns too.. that'll solve everything.
# ::tokens ["Do", "n't", "forget", ",", "wants", "to", "give", "everyone", "guns", "too", "..", "that", "'ll", "solve", "everything", "."]
# ::lemmas ["do", "not", "forget", ",", "want", "to", "give", "everyone", "gun", "too", "..", "that", "'ll", "solve", "everything", "."]
(c2-2 / forget-01
      :ARG0 (c2-1 / you)
      :ARG1 (c2-0 / want-01
                  :ARG1 (c2-6 / give-01
                              :ARG1 (c2-5 / gun)
                              :ARG2 (c2-4 / everyone)
                              :mod (c2-8 / too))
                  :ARG0-of (c2-7 / solve-01
                                 :ARG1 (c2-3 / everything)))
      :polarity -
      :mode imperative)

# ::snt The Photo ID driving license is a sly little ID. Your place of birth obviously determines your ability to drive.
# ::tokens ["The", "Photo", "ID", "driving", "license", "is", "a", "sly", "little", "ID", ".", "Your", "place", "of", "birth", "obviously", "determines", "your", "ability", "to", "drive", "."]
# ::lemmas ["the", "Photo", "ID", "drive", "license", "be", "a", "sly", "little", "ID", ".", "your", "place", "of", "birth", "obviously", "determine", "your", "ability", "to", "drive", "."]
(c3-4 / multi-sentence
      :snt1 (c3-3 / license
                  :mod (c3-9 / drive-01)
                  :ARG1-of (c3-2 / document-01
                                 :ARG1-of (c3-8 / photograph-01))
                  :mod (c3-11 / little)
                  :ARG1-of (c3-0 / legal-02
                                 :polarity -))
      :snt2 (c3-13 / determine-01
                   :ARG0 (c3-12 / place
                                :ARG2-of (c3-5 / bear-02
                                               :ARG1 (c3-1 / you)))
                   :ARG1 (c3-10 / capable-01
                                :ARG1 c3-1
                                :ARG2 (c3-7 / drive-01
                                            :ARG0 c3-1))
                   :ARG1-of (c3-6 / obvious-01)))

# ::snt 'Yeah, but you're forgetting, they're French. We'll do it properly. Then it'll definitely, definitely probably work!'
# ::tokens ["'", "Yeah", ",", "but", "you", "'re", "forgetting", ",", "they", "'re", "French", ".", "We", "'ll", "do", "it", "properly", ".", "Then", "it", "'ll", "definitely", ",", "definitely", "probably", "work", "!", "'"]
# ::lemmas ["'", "yeah", ",", "but", "you", "be", "forget", ",", "they", "be", "French", ".", "we", "'ll", "do", "it", "properly", ".", "then", "it", "'ll", "definitely", ",", "definitely", "probably", "work", "!", "'"]
(c4-3 / multi-sentence
      :snt1 (c4-11 / contrast-01
                   :ARG2 (c4-4 / forget-01
                               :ARG0 (c4-0 / you)
                               :ARG1 (c4-2 / language
                                           :name (c4-8 / name
                                                       :op1 "French")
                                           :domain (c4-13 / they))))
      :snt2 (c4-10 / do-02
                   :ARG0 (c4-1 / we)
                   :ARG1 (c4-6 / it)
                   :manner (c4-9 / proper))
      :snt3 (c4-14 / probable
                   :domain (c4-7 / work-09
                                 :ARG1 c4-6
                                 :mod (c4-5 / definite)
                                 :time (c4-12 / then))
                   :mod c4-5))

# ::snt it'd be helpful if criminals had to always drop them at the scene.
# ::tokens ["it", "'d", "be", "helpful", "if", "criminals", "had", "to", "always", "drop", "them", "at", "the", "scene", "."]
# ::lemmas ["it", "would", "be", "helpful", "if", "criminal", "have", "to", "always", "drop", "they", "at", "the", "scene", "."]
(c5-0 / helpful-04
      :ARG0 (c5-1 / obligate-01
                  :ARG1 (c5-2 / person
                              :ARG2-of (c5-4 / criminal-03))
                  :ARG2 (c5-3 / drop-01
                              :ARG0 c5-2
                              :ARG1 (c5-6 / they)
                              :ARG4 (c5-5 / scene)
                              :time (c5-7 / always))))

# ::snt Lefty draconian control of populatoon. "Papieren, bitte"
# ::tokens ["Lefty", "draconian", "control", "of", "populatoon", ".", "\"", "Papieren", ",", "bitte", "\""]
# ::lemmas ["lefty", "draconian", "control", "of", "populatoon", ".", "\"", "Papieren", ",", "bitte", "\""]
(c6-1 / multi-sentence
      :snt1 (c6-7 / control-01
                  :ARG1 (c6-6 / city
                              :name (c6-4 / name
                                          :op1 "Platoon"))
                  :mod (c6-8 / draconian)
                  :ARG1-of (c6-0 / left-19))
      :snt2 (c6-9 / say-01
                  :ARG0 (c6-3 / i)
                  :ARG1 (c6-5 / person
                              :name c6-4
                              :op1 "Papieren"))
      :ARG2 (c6-2 / bitte))

# ::snt same as the airport Ebola scans, everyone said it was pointless, but they have to pretend to be able to do something
# ::tokens ["same", "as", "the", "airport", "Ebola", "scans", ",", "everyone", "said", "it", "was", "pointless", ",", "but", "they", "have", "to", "pretend", "to", "be", "able", "to", "do", "something"]
# ::lemmas ["same", "as", "the", "airport", "Ebola", "scan", ",", "everyone", "say", "it", "be", "pointless", ",", "but", "they", "have", "to", "pretend", "to", "be", "able", "to", "do", "something"]
(c7-11 / contrast-01
       :ARG1 (c7-12 / say-01
                    :ARG0 (c7-5 / everyone)
                    :ARG1 (c7-9 / point-03
                                :ARG1 (c7-7 / it)
                                :polarity -)
                    :ARG1-of (c7-6 / same-01
                                   :ARG2 (c7-1 / scan-01
                                               :ARG2 (c7-10 / disease
                                                            :name (c7-8 / name
                                                                        :op1 "Ebola"))
                                               :location (c7-14 / airport))))
       :ARG2 (c7-3 / obligate-01
                   :ARG1 c7-5
                   :ARG2 (c7-13 / pretend-01
                                :ARG0 c7-5
                                :ARG1 (c7-2 / possible-01
                                            :ARG1 (c7-0 / do-02
                                                        :ARG0 c7-5
                                                        :ARG1 (c7-4 / something))))))

# ::snt What? They'll make us show ID before we can enter a building and commit an atrocity?
# ::tokens ["What", "?", "They", "'ll", "make", "us", "show", "ID", "before", "we", "can", "enter", "a", "building", "and", "commit", "an", "atrocity", "?"]
# ::lemmas ["what", "?", "they", "'ll", "make", "we", "show", "ID", "before", "we", "can", "enter", "a", "building", "and", "commit", "an", "atrocity", "?"]
(c8-1 / multi-sentence
      :snt1 (c8-14 / amr-unknown)
      :snt2 (c8-7 / make-02
                  :ARG0 (c8-13 / they)
                  :ARG1 (c8-12 / show-01
                               :ARG0 (c8-0 / we)
                               :ARG1 (c8-8 / document-01
                                           :ARG1 (c8-5 / identity))
                               :time (c8-2 / before
                                           :op1 (c8-9 / possible-01
                                                      :ARG1 (c8-4 / and
                                                                  :op1 (c8-3 / enter-01
                                                                             :ARG0 c8-0
                                                                             :ARG1 (c8-10 / building))
                                                                  :op2 (c8-11 / commit-02
                                                                              :ARG0 c8-0
                                                                              :ARG1 (c8-6 / atrocity))))))))

# ::snt They also wanted more surveillance after /7, despite the coroner saying that any additional information would have been useless
# ::tokens ["They", "also", "wanted", "more", "surveillance", "after", "/7", ",", "despite", "the", "coroner", "saying", "that", "any", "additional", "information", "would", "have", "been", "useless"]
# ::lemmas ["they", "also", "want", "more", "surveillance", "after", "/7", ",", "despite", "the", "coroner", "say", "that", "any", "additional", "information", "would", "have", "be", "useless"]
(c9-0 / want-01
      :ARG0 (c9-12 / they)
      :ARG1 (c9-10 / surveil-01
                   :quant (c9-1 / more))
      :mod (c9-13 / also)
      :time (c9-4 / after
                  :op1 (c9-5 / incident
                             :name (c9-6 / name
                                         :op1 "9/7")))
      :concession (c9-3 / say-01
                        :ARG0 (c9-8 / coroner)
                        :ARG1 (c9-2 / useless
                                    :domain (c9-9 / information
                                                  :mod (c9-7 / any)
                                                  :mod (c9-11 / additional)))))

# ::snt Everyone say it with me: "There is no such thing as perfect security." So let's not make everyone miserable trying.
# ::tokens ["Everyone", "say", "it", "with", "me", ":", "\"", "There", "is", "no", "such", "thing", "as", "perfect", "security", ".", "\"", "So", "let", "'s", "not", "make", "everyone", "miserable", "trying", "."]
# ::lemmas ["everyone", "say", "it", "with", "i", ":", "\"", "there", "be", "no", "such", "thing", "as", "perfect", "security", ".", "\"", "so", "let", "us", "not", "make", "everyone", "miserable", "try", "."]
(c10-2 / multi-sentence
       :snt1 (c10-11 / say-01
                     :ARG0 (c10-6 / everyone)
                     :ARG1 (c10-12 / thing
                                   :example (c10-5 / secure-02
                                                   :ARG1-of (c10-8 / perfect-02))
                                   :polarity -)
                     :ARG3 (c10-7 / i))
       :snt2 (c10-1 / let-01
                    :ARG0 (c10-0 / we)
                    :ARG1 (c10-9 / make-02
                                 :ARG0 c10-0
                                 :ARG1 (c10-3 / miserable
                                              :domain (c10-4 / everyone)
                                              :manner (c10-10 / try-01
                                                              :ARG0 c10-4))
                                 :polarity -)
                    :mode imperative))

# ::snt the burqa needs to go as a matter of urgency.
# ::tokens ["the", "burqa", "needs", "to", "go", "as", "a", "matter", "of", "urgency", "."]
# ::lemmas ["the", "burqa", "need", "to", "go", "as", "a", "matter", "of", "urgency", "."]
(c11-3 / need-01
       :ARG1 (c11-4 / go-01
                    :ARG1 (c11-2 / burqa)
                    :manner (c11-0 / matter
                                   :mod (c11-1 / urgent))))
