# ::snt I'm with free journalism but u also should respect religion I'm not give excuses there's no excuse for killing or hurting any1
# ::tokens ["I", "'m", "with", "free", "journalism", "but", "u", "also", "should", "respect", "religion", "I", "'m", "not", "give", "excuses", "there", "'s", "no", "excuse", "for", "killing", "or", "hurting", "any1"]
# ::lemmas ["i", "be", "with", "free", "journalism", "but", "u", "also", "should", "respect", "religion", "i", "be", "not", "give", "excuse", "there", "be", "no", "excuse", "for", "kill", "or", "hurt", "any1"]
(c1-2 / multi-sentence
      :snt1 (c1-12 / contrast-01
                   :ARG1 (c1-8 / i)
                   :ARG2 (c1-11 / recommend-01
                                :ARG1 (c1-9 / respect-01
                                            :ARG0 (c1-1 / you)
                                            :ARG1 (c1-6 / religion))
                                :ARG2 c1-1
                                :mod (c1-15 / also)))
      :snt2 (c1-5 / excuse-02
                  :ARG0 (c1-13 / i)
                  :ARG2 (c1-3 / excuse-02
                              :ARG2 (c1-4 / or
                                          :op1 (c1-14 / kill-01
                                                      :ARG1 (c1-7 / anyone))
                                          :op2 (c1-0 / hurt-01
                                                     :ARG1 (c1-10 / any)))
                              :polarity -)
                  :polarity -))

# ::snt absolutely. Unfortunately there's a whole lot of people obscuring that truth. A cartoon should never warrant mass murder
# ::tokens ["absolutely", ".", "Unfortunately", "there", "'s", "a", "whole", "lot", "of", "people", "obscuring", "that", "truth", ".", "A", "cartoon", "should", "never", "warrant", "mass", "murder"]
# ::lemmas ["absolutely", ".", "unfortunately", "there", "be", "a", "whole", "lot", "of", "people", "obscure", "that", "truth", ".", "a", "cartoon", "should", "never", "warrant", "mass", "murder"]
(c2-2 / multi-sentence
      :snt1 (c2-14 / absolute)
      :snt2 (c2-5 / obscure-01
                  :ARG0 (c2-8 / person
                              :quant (c2-1 / lot
                                           :degree (c2-0 / whole)))
                  :ARG1 (c2-13 / truth
                               :mod (c2-12 / that))
                  :ARG2-of (c2-3 / fortunate-01
                                 :polarity -))
      :snt3 (c2-9 / recommend-01
                  :ARG1 (c2-7 / warrant-01
                              :ARG0 (c2-10 / cartoon)
                              :ARG1 (c2-11 / murder-01
                                           :degree (c2-4 / mass))
                              :time (c2-6 / ever)
                              :polarity -)))

# ::snt which, when some lunatics actually carry it out and get caught for it we are called Muslim hating
# ::tokens ["which", ",", "when", "some", "lunatics", "actually", "carry", "it", "out", "and", "get", "caught", "for", "it", "we", "are", "called", "Muslim", "hating"]
# ::lemmas ["which", ",", "when", "some", "lunatic", "actually", "carry", "it", "out", "and", "get", "catch", "for", "it", "we", "be", "call", "Muslim", "hate"]
(c3-7 / call-01
      :ARG1 (c3-1 / we)
      :ARG2 (c3-0 / hate-01
                  :ARG0 c3-1
                  :ARG1 (c3-6 / religious-group
                              :name (c3-5 / name
                                          :op1 "Muslim")))
      :time (c3-11 / and
                   :op1 (c3-8 / carry-out-03
                              :ARG0 (c3-2 / lunatic
                                          :mod (c3-10 / some))
                              :ARG1 (c3-4 / it)
                              :ARG1-of (c3-3 / actual-02))
                   :op2 (c3-9 / catch-02
                              :ARG1 c3-2
                              :ARG2 c3-8)))

# ::snt forbidden in Islam.we denied what happened in France but we and Islam not resp for these murders
# ::tokens ["forbidden", "in", "Islam.we", "denied", "what", "happened", "in", "France", "but", "we", "and", "Islam", "not", "resp", "for", "these", "murders"]
# ::lemmas ["forbid", "in", "Islam.we", "denied", "what", "happen", "in", "France", "but", "we", "and", "Islam", "not", "resp", "for", "these", "murder"]
(c4-2 / multi-sentence
      :snt1 (c4-1 / forbid-01
                  :location (c4-8 / religious-group
                                  :name (c4-5 / name
                                              :op1 "Islam")))
      :snt2 (c4-9 / contrast-01
                  :ARG1 (c4-10 / deny-01
                               :ARG0 (c4-0 / we)
                               :ARG1 (c4-3 / event
                                           :location (c4-11 / country
                                                            :name (c4-6 / name
                                                                        :op1 "France"))))
                  :ARG2 (c4-4 / respite-01
                              :ARG0 (c4-14 / and
                                           :op1 (c4-7 / we)
                                           :op2 c4-8)
                              :ARG1 (c4-12 / murder-01
                                           :mod (c4-13 / this))
                              :polarity -)))

# ::snt another one so all Christians are killers and bad be reasonable.
# ::tokens ["another", "one", "so", "all", "Christians", "are", "killers", "and", "bad", "be", "reasonable", "."]
# ::lemmas ["another", "one", "so", "all", "Christians", "be", "killer", "and", "bad", "be", "reasonable", "."]
(c5-9 / cause-01
      :ARG0 (c5-2 / one
                  :mod (c5-12 / another))
      :ARG1 (c5-3 / and
                  :op1 (c5-7 / person
                             :ARG0-of (c5-10 / kill-01)
                             :domain (c5-11 / person
                                            :mod (c5-8 / religious-group
                                                       :name (c5-5 / name
                                                                   :op1 "Christian"))
                                            :mod (c5-6 / all)))
                  :op2 (c5-0 / person
                             :ARG1-of (c5-1 / bad-07)
                             :domain c5-11)
                  :ARG1-of (c5-4 / reasonable-02)))

# ::snt Evacuate neighbourhood one plane one laser guided bomb.
# ::tokens ["Evacuate", "neighbourhood", "one", "plane", "one", "laser", "guided", "bomb", "."]
# ::lemmas ["Evacuate", "neighbourhood", "one", "plane", "one", "laser", "guide", "bomb", "."]
(c6-1 / multi-sentence
      :snt1 (c6-3 / evacuate-01
                  :ARG1 (c6-4 / neighborhood))
      :snt2 (c6-5 / plane
                  :quant 1)
      :snt3 (c6-2 / bomb
                  :ARG1-of (c6-6 / guide-01
                                 :instrument (c6-0 / laser))))

# ::snt I am not religious - millions have been killed throughout history over what stories they believe. We're all humans. All religions.
# ::tokens ["I", "am", "not", "religious", "-", "millions", "have", "been", "killed", "throughout", "history", "over", "what", "stories", "they", "believe", ".", "We", "'re", "all", "humans", ".", "All", "religions", "."]
# ::lemmas ["i", "be", "not", "religious", "-", "million", "have", "be", "kill", "throughout", "history", "over", "what", "story", "they", "believe", ".", "we", "be", "all", "human", ".", "all", "religion", "."]
(c7-2 / multi-sentence
      :snt1 (c7-7 / religious
                  :domain (c7-4 / i)
                  :polarity -)
      :snt2 (c7-11 / kill-01
                   :ARG1 (c7-6 / multiple
                               :op1 1000000)
                   :duration (c7-0 / history)
                   :ARG1-of (c7-8 / cause-01
                                  :ARG0 (c7-3 / believe-01
                                              :ARG0 c7-6
                                              :ARG1 (c7-9 / story))))
      :snt3 (c7-12 / human
                   :domain (c7-1 / we
                                 :mod (c7-10 / all)))
      :snt4 (c7-5 / religion
                  :mod c7-10))

# ::snt have they actually been caught or just located....
# ::tokens ["have", "they", "actually", "been", "caught", "or", "just", "located", "...."]
# ::lemmas ["have", "they", "actually", "be", "catch", "or", "just", "locate", "...."]
(c8-5 / amr-choice
      :op1 (c8-3 / catch-02
                 :ARG1 (c8-4 / they)
                 :ARG1-of (c8-2 / actual-02))
      :op2 (c8-1 / locate-01
                 :ARG1 c8-4
                 :mod (c8-0 / just)))

# ::snt : AFP: the two armed suspects who attacked 's headquarters yesterday have been located in northern France
# ::tokens [":", "AFP", ":", "the", "two", "armed", "suspects", "who", "attacked", "'s", "headquarters", "yesterday", "have", "been", "located", "in", "northern", "France"]
# ::lemmas [":", "AFP", ":", "the", "two", "armed", "suspect", "who", "attack", "'s", "headquarters", "yesterday", "have", "be", "locate", "in", "northern", "France"]
(c9-11 / say-01
       :ARG0 (c9-8 / publication
                   :name (c9-6 / name
                               :op1 "AFP"))
       :ARG1 (c9-2 / locate-01
                   :ARG1 (c9-12 / person
                                :ARG2-of (c9-4 / suspect-01)
                                :ARG0-of (c9-13 / attack-01
                                                :ARG1 (c9-0 / headquarters
                                                            :poss (c9-3 / organization))
                                                :time (c9-1 / yesterday))
                                :ARG1-of (c9-5 / arm-01)
                                :quant 2)
                   :location (c9-7 / north
                                   :part-of (c9-10 / country
                                                   :name (c9-9 / name
                                                               :op1 "France")))))

# ::snt want to protect will also be seen in the light of day..
# ::tokens ["want", "to", "protect", "will", "also", "be", "seen", "in", "the", "light", "of", "day", ".."]
# ::lemmas ["want", "to", "protect", "will", "also", "be", "see", "in", "the", "light", "of", "day", ".."]
(c10-5 / see-01
       :ARG1 (c10-0 / want-01
                    :ARG0 (c10-1 / you)
                    :ARG1 (c10-3 / protect-01
                                 :ARG0 c10-1))
       :mod (c10-6 / also)
       :time (c10-2 / light
                    :mod (c10-4 / day)))

# ::snt my prophet Muhammad(PBUH) didn't say that don't use your own words .killing anyone or animals or hurt is
# ::tokens ["my", "prophet", "Muhammad(PBUH", ")", "did", "n't", "say", "that", "do", "n't", "use", "your", "own", "words", ".killing", "anyone", "or", "animals", "or", "hurt", "is"]
# ::lemmas ["my", "prophet", "Muhammad(PBUH", ")", "do", "not", "say", "that", "do", "not", "use", "your", "own", "word", ".kille", "anyone", "or", "animal", "or", "hurt", "be"]
(c11-4 / multi-sentence
       :snt1 (c11-12 / say-01
                     :ARG0 (c11-11 / person
                                   :name (c11-10 / name
                                                 :op1 "Muhammad")
                                   :ARG0-of (c11-0 / have-rel-role-91
                                                   :ARG1 (c11-9 / i)
                                                   :ARG2 (c11-14 / prophet)))
                     :ARG1 (c11-5 / use-01
                                  :ARG0 (c11-1 / you)
                                  :ARG1 (c11-2 / word-01
                                               :ARG0 c11-1)
                                  :polarity -
                                  :mode imperative)
                     :polarity -)
       :snt2 (c11-7 / or
                    :op1 (c11-13 / kill-01
                                 :ARG1 (c11-3 / or
                                              :op1 (c11-15 / anyone)
                                              :op2 (c11-8 / animal)))
                    :op2 (c11-6 / hurt-01)))

# ::snt wonder if Allah helps them now
# ::tokens ["wonder", "if", "Allah", "helps", "them", "now"]
# ::lemmas ["wonder", "if", "Allah", "help", "they", "now"]
(c12-1 / wonder-01
       :ARG0 (c12-2 / i)
       :ARG1 (c12-7 / truth-value
                    :polarity-of (c12-0 / help-01
                                        :ARG0 (c12-5 / person
                                                     :name (c12-3 / name
                                                                  :op1 "Allah"))
                                        :ARG1 (c12-6 / they)
                                        :time (c12-4 / now))))

# ::snt we don't how many times we should say they are responsible for their bad actions not all Muslims .if christian
# ::tokens ["we", "do", "n't", "how", "many", "times", "we", "should", "say", "they", "are", "responsible", "for", "their", "bad", "actions", "not", "all", "Muslims", ".if", "christian"]
# ::lemmas ["we", "do", "not", "how", "many", "time", "we", "should", "say", "they", "be", "responsible", "for", "their", "bad", "action", "not", "all", "Muslims", ".if", "christian"]
(c13-2 / multi-sentence
       :snt1 (c13-8 / do-02
                    :ARG0 (c13-1 / we)
                    :ARG1 (c13-12 / thing
                                  :frequency-of (c13-11 / say-01
                                                        :ARG0 (c13-5 / we)
                                                        :ARG1 (c13-9 / responsible-01
                                                                     :ARG0 (c13-10 / they)
                                                                     :ARG1 (c13-13 / act-02
                                                                                   :ARG0 c13-10
                                                                                   :ARG1-of (c13-3 / bad-07)))
                                                        :ARG1-of (c13-6 / recommend-01)))
                    :polarity -)
       :snt2 (c13-0 / have-condition-91
                    :ARG2 (c13-4 / religious-group
                                 :name (c13-7 / name
                                              :op1 "Christian"))))

# ::snt stop shooting people in the streets then
# ::tokens ["stop", "shooting", "people", "in", "the", "streets", "then"]
# ::lemmas ["stop", "shoot", "people", "in", "the", "street", "then"]
(c14-4 / stop-01
       :ARG0 (c14-0 / you)
       :ARG1 (c14-2 / shoot-02
                    :ARG0 c14-0
                    :ARG1 (c14-3 / person)
                    :location (c14-1 / street))
       :mod (c14-5 / then)
       :mode imperative)

# ::snt do in war. All killing is in war to kill your enemy I battlefield.
# ::tokens ["do", "in", "war", ".", "All", "killing", "is", "in", "war", "to", "kill", "your", "enemy", "I", "battlefield", "."]
# ::lemmas ["do", "in", "war", ".", "all", "killing", "be", "in", "war", "to", "kill", "your", "enemy", "i", "battlefield", "."]
(c15-3 / multi-sentence
       :snt1 (c15-8 / do-02
                    :ARG1 (c15-1 / war))
       :snt2 (c15-9 / kill-01
                    :mod (c15-10 / all)
                    :purpose (c15-5 / kill-01
                                    :ARG0 (c15-2 / you)
                                    :ARG1 (c15-7 / person
                                                 :ARG0-of (c15-0 / have-rel-role-91
                                                                 :ARG1 c15-2
                                                                 :ARG2 (c15-6 / enemy)))
                                    :location (c15-4 / battlefield
                                                     :poss c15-2))))

# ::snt because u or other don't know Islam so it's bad.
# ::tokens ["because", "u", "or", "other", "do", "n't", "know", "Islam", "so", "it", "'s", "bad", "."]
# ::lemmas ["because", "u", "or", "other", "do", "not", "know", "Islam", "so", "it", "be", "bad", "."]
(c16-6 / cause-01
       :ARG0 (c16-8 / know-01
                    :ARG0 (c16-3 / or
                                 :op1 (c16-0 / you)
                                 :op2 (c16-1 / other))
                    :ARG1 (c16-5 / religious-group
                                 :name (c16-4 / name
                                              :op1 "Islam"))
                    :ARG0-of (c16-7 / cause-01
                                    :ARG1 (c16-2 / bad-07
                                                 :ARG1 c16-5))
                    :polarity -))

# ::snt that's a cartoon drawing of Muhammad you posted - I guess you are going to be killed now.
# ::tokens ["that", "'s", "a", "cartoon", "drawing", "of", "Muhammad", "you", "posted", "-", "I", "guess", "you", "are", "going", "to", "be", "killed", "now", "."]
# ::lemmas ["that", "be", "a", "cartoon", "drawing", "of", "Muhammad", "you", "post", "-", "i", "guess", "you", "be", "go", "to", "be", "kill", "now", "."]
(c17-5 / draw-01
       :ARG1 (c17-4 / person
                    :name (c17-2 / name
                                 :op1 "Muhammad"))
       :mod (c17-6 / cartoon)
       :ARG1-of (c17-11 / post-01
                        :ARG0 (c17-0 / you))
       :ARG0-of (c17-7 / cause-01
                       :ARG1 (c17-8 / guess-01
                                    :ARG0 (c17-1 / i)
                                    :ARG1 (c17-10 / kill-01
                                                  :ARG1 c17-0
                                                  :time (c17-3 / now))))
       :domain (c17-9 / that))

# ::snt haha there's no killing in Islam.
# ::tokens ["haha", "there", "'s", "no", "killing", "in", "Islam", "."]
# ::lemmas ["haha", "there", "be", "no", "killing", "in", "Islam", "."]
(c18-3 / kill-01
       :location (c18-2 / religious-group
                        :name (c18-0 / name
                                     :op1 "Islam"))
       :mod (c18-1 / haha
                   :mode expressive)
       :polarity -)

# ::snt when people carry out these attacks, perhaps they should reflect on how it will be seen, and how the religion they
# ::tokens ["when", "people", "carry", "out", "these", "attacks", ",", "perhaps", "they", "should", "reflect", "on", "how", "it", "will", "be", "seen", ",", "and", "how", "the", "religion", "they"]
# ::lemmas ["when", "people", "carry", "out", "these", "attack", ",", "perhaps", "they", "should", "reflect", "on", "how", "it", "will", "be", "see", ",", "and", "how", "the", "religion", "they"]
(c19-3 / possible-01
       :ARG1 (c19-4 / recommend-01
                    :ARG1 (c19-2 / reflect-01
                                 :ARG0 (c19-8 / person)
                                 :ARG2 (c19-9 / and
                                              :op1 (c19-7 / thing
                                                          :manner-of (c19-6 / see-01
                                                                            :ARG1 (c19-1 / attack-01
                                                                                         :mod (c19-5 / this))))
                                              :op2 (c19-0 / religion
                                                          :manner-of c19-1)))
                    :time c19-1))

# ::snt I know that but I'm trying to figure out how they interpret that to modern times as a battle field. Sorry for my Twitter brevity
# ::tokens ["I", "know", "that", "but", "I", "'m", "trying", "to", "figure", "out", "how", "they", "interpret", "that", "to", "modern", "times", "as", "a", "battle", "field", ".", "Sorry", "for", "my", "Twitter", "brevity"]
# ::lemmas ["i", "know", "that", "but", "i", "be", "try", "to", "figure", "out", "how", "they", "interpret", "that", "to", "modern", "time", "as", "a", "battle", "field", ".", "sorry", "for", "my", "Twitter", "brevity"]
(c20-1 / multi-sentence
       :snt1 (c20-17 / contrast-01
                     :ARG1 (c20-13 / know-01
                                   :ARG0 (c20-8 / i)
                                   :ARG1 (c20-19 / that))
                     :ARG2 (c20-12 / try-01
                                   :ARG0 (c20-11 / i)
                                   :ARG1 (c20-4 / figure-out-05
                                                :ARG0 c20-11
                                                :ARG1 (c20-0 / interpret-01
                                                             :ARG0 (c20-9 / they)
                                                             :ARG1 (c20-15 / that)
                                                             :ARG2 (c20-16 / field
                                                                           :purpose (c20-5 / battle-01))
                                                             :ARG3 (c20-18 / time
                                                                           :ARG1-of (c20-7 / modern-02))))))
       :snt2 (c20-3 / sorry-01
                    :ARG1 (c20-14 / i)
                    :ARG2 (c20-10 / brevity
                                  :poss c20-14
                                  :medium (c20-2 / publication
                                                 :name (c20-6 / name
                                                              :op1 "Twitter")))))

# ::snt How media spreads hate for ISLAM &amp; MUSLIMS
# ::tokens ["How", "media", "spreads", "hate", "for", "ISLAM", "&", "amp", ";", "MUSLIMS"]
# ::lemmas ["how", "medium", "spread", "hate", "for", "ISLAM", "&", "amp", ";", "MUSLIMS"]
(c21-11 / and
        :op1 (c21-10 / spread-03
                     :ARG0 (c21-1 / media)
                     :ARG1 (c21-0 / hate-01
                                  :ARG1 (c21-2 / and
                                               :op1 (c21-7 / religious-group
                                                           :name (c21-4 / name
                                                                        :op1 "Islam"))
                                               :op2 (c21-3 / religious-group
                                                           :name (c21-5 / name
                                                                        :op1 "Islam")))))
        :op2 (c21-6 / person
                    :name (c21-8 / name
                                 :op1 "Islam"))
        :manner (c21-9 / amr-unknown))

# ::snt fuck your phony rag picker.
# ::tokens ["fuck", "your", "phony", "rag", "picker", "."]
# ::lemmas ["fuck", "your", "phony", "rag", "picker", "."]
(c22-1 / fuck-01
       :ARG0 (c22-0 / you)
       :ARG1 (c22-3 / person
                    :ARG0-of (c22-5 / pick-01
                                    :ARG1 (c22-4 / rag))
                    :mod (c22-2 / phony)
                    :poss c22-0)
       :mode imperative)

# ::snt . Chapeau for French police swift results. Vive le liberte
# ::tokens [".", "Chapeau", "for", "French", "police", "swift", "results", ".", "Vive", "le", "liberte"]
# ::lemmas [".", "Chapeau", "for", "French", "police", "swift", "result", ".", "Vive", "le", "liberte"]
(c23-0 / multi-sentence
       :snt1 (c23-1 / be-located-at-91
                    :ARG2 (c23-6 / city
                                 :name (c23-2 / name
                                              :op1 "Chapeau"))
                    :purpose (c23-10 / thing
                                     :ARG2-of (c23-5 / result-01)
                                     :mod (c23-9 / swift)
                                     :mod (c23-4 / police
                                                 :mod (c23-7 / country
                                                             :name (c23-3 / name
                                                                          :op1 "France")))))
       :snt2 (c23-8 / vive-01
                    :ARG1 " :op2 "))

# ::snt hope the Polys fry the sobs
# ::tokens ["hope", "the", "Polys", "fry", "the", "sobs"]
# ::lemmas ["hope", "the", "Polys", "fry", "the", "sob"]
(c24-0 / hope-01
       :ARG0 (c24-2 / i)
       :ARG1 (c24-1 / fry-01
                    :ARG0 (c24-3 / family
                                 :name (c24-4 / name
                                              :op1 "Poly"))
                    :ARG1 (c24-5 / sobs)))

# ::snt think one already gave himself up earlier mate, could be wrong though
# ::tokens ["think", "one", "already", "gave", "himself", "up", "earlier", "mate", ",", "could", "be", "wrong", "though"]
# ::lemmas ["think", "one", "already", "give", "himself", "up", "early", "mate", ",", "could", "be", "wrong", "though"]
(c25-8 / think-01
       :ARG0 (c25-4 / i)
       :ARG1 (c25-7 / give-up-07
                    :ARG0 (c25-3 / one
                                 :ARG1-of c25-7)
                    :time (c25-9 / already)
                    :time (c25-2 / before
                                 :op1 (c25-5 / now)))
       :concession (c25-6 / possible-01
                          :ARG1 (c25-1 / wrong-04
                                       :ARG1 c25-4
                                       :ARG2 c25-7))
       :ARG2-of (c25-0 / have-concession-91))

# ::snt not my words...
# ::tokens ["not", "my", "words", "..."]
# ::lemmas ["not", "my", "word", "..."]
(c26-0 / word-01
       :ARG0 (c26-1 / i)
       :polarity -)

# ::snt War profiteers x'd in . Pushing to join war on terror VIDEO&gt;&gt;
# ::tokens ["War", "profiteers", "x'd", "in", ".", "Pushing", "to", "join", "war", "on", "terror", "VIDEO&gt;&gt", ";"]
# ::lemmas ["war", "profiteer", "x'd", "in", ".", "push", "to", "join", "war", "on", "terror", "VIDEO&gt;&gt", ";"]
(c27-2 / multi-sentence
       :snt1 (c27-4 / be-located-at-91
                    :ARG1 (c27-9 / person
                                 :ARG0-of (c27-10 / profit-01
                                                  :ARG1 (c27-1 / war)))
                    :ARG2 (c27-5 / overseas))
       :snt2 (c27-3 / push-02
                    :ARG2 (c27-0 / join-04
                                 :ARG1 (c27-6 / war
                                              :name (c27-7 / name
                                                           :op1 "War"
                                                           :op2 "on"
                                                           :op3 "Terror")))
                    :mod (c27-8 / video)))

# ::snt I didn't realize New York City was a battlefield.
# ::tokens ["I", "did", "n't", "realize", "New", "York", "City", "was", "a", "battlefield", "."]
# ::lemmas ["i", "do", "not", "realize", "New", "York", "City", "be", "a", "battlefield", "."]
(c28-3 / realize-01
       :ARG0 (c28-1 / i)
       :ARG1 (c28-0 / battlefield
                    :domain (c28-4 / city
                                   :name (c28-2 / name
                                                :op1 "New"
                                                :op2 "York")))
       :polarity -)

# ::snt no problem.don't worry aboutit.right translation also prophet Muhammad(PBUH) toldus through his speech.
# ::tokens ["no", "problem.don't", "worry", "aboutit.right", "translation", "also", "prophet", "Muhammad(PBUH", ")", "toldus", "through", "his", "speech", "."]
# ::lemmas ["no", "problem.don't", "worry", "aboutit.right", "translation", "also", "prophet", "Muhammad(PBUH", ")", "toldus", "through", "his", "speech", "."]
(c29-3 / multi-sentence
       :snt1 (c29-10 / problem
                     :polarity -)
       :snt2 (c29-1 / worry-01
                    :ARG0 (c29-2 / you)
                    :ARG1 (c29-7 / it)
                    :polarity -
                    :mode imperative)
       :snt3 (c29-14 / tell-01
                     :ARG0 (c29-15 / person
                                   :name (c29-8 / name
                                                :op1 "Muhammad")
                                   :ARG0-of (c29-0 / have-org-role-91
                                                   :ARG2 (c29-4 / prophet))
                                   :ARG1-of (c29-13 / publication-91
                                                    :ARG4 (c29-6 / publication
                                                                 :name (c29-9 / name
                                                                              :op1 "PBUH"))))
                     :ARG2 (c29-5 / person
                                  :name (c29-11 / name
                                                :op1 "us"))
                     :manner (c29-12 / speak-01
                                     :ARG0 c29-5)
                     :mod (c29-16 / also)))

# ::snt So it is possible a second terrorist cell has begun operations in Paris
# ::tokens ["So", "it", "is", "possible", "a", "second", "terrorist", "cell", "has", "begun", "operations", "in", "Paris"]
# ::lemmas ["so", "it", "be", "possible", "a", "second", "terrorist", "cell", "have", "begin", "operation", "in", "Paris"]
(c30-6 / cause-01
       :ARG1 (c30-4 / possible-01
                    :ARG1 (c30-1 / begin-01
                                 :ARG0 (c30-5 / cell
                                              :ord (c30-2 / ordinal-entity
                                                          :value 2)
                                              :mod (c30-8 / terrorist))
                                 :ARG1 (c30-0 / operate-01
                                              :ARG0 c30-5
                                              :location (c30-7 / city
                                                               :name (c30-3 / name
                                                                            :op1 "Paris"))))))

# ::snt They are probably trying to gain entry to the UK and claim asylum. Cheri Blair will be in Dover to greet them.
# ::tokens ["They", "are", "probably", "trying", "to", "gain", "entry", "to", "the", "UK", "and", "claim", "asylum", ".", "Cheri", "Blair", "will", "be", "in", "Dover", "to", "greet", "them", "."]
# ::lemmas ["they", "be", "probably", "try", "to", "gain", "entry", "to", "the", "UK", "and", "claim", "asylum", ".", "Cheri", "Blair", "will", "be", "in", "Dover", "to", "greet", "they", "."]
(c31-0 / multi-sentence
       :snt1 (c31-15 / try-01
                     :ARG0 (c31-11 / they)
                     :ARG1 (c31-17 / and
                                   :op1 (c31-9 / gain-02
                                               :ARG0 c31-11
                                               :ARG1 (c31-2 / enter-01
                                                            :ARG0 c31-11
                                                            :ARG1 (c31-8 / country
                                                                         :name (c31-4 / name
                                                                                      :op1 "UK"))))
                                   :op2 (c31-7 / claim-01
                                               :ARG0 c31-11
                                               :ARG1 (c31-3 / asylum)))
                     :mod (c31-6 / probable))
       :snt2 (c31-1 / be-located-at-91
                    :ARG1 (c31-16 / person
                                  :name (c31-5 / name
                                               :op1 "Cheri"
                                               :op2 "Blair"))
                    :ARG2 (c31-12 / city
                                  :name (c31-10 / name
                                                :op1 "Dover"))
                    :purpose (c31-13 / greet-01
                                     :ARG0 c31-16
                                     :ARG1 (c31-14 / they))))

# ::snt struggle to have sympathy for people who worship a prophet who said 'whoever insults a prophet kill them'...
# ::tokens ["struggle", "to", "have", "sympathy", "for", "people", "who", "worship", "a", "prophet", "who", "said", "'", "whoever", "insults", "a", "prophet", "kill", "them", "'", "..."]
# ::lemmas ["struggle", "to", "have", "sympathy", "for", "people", "who", "worship", "a", "prophet", "who", "say", "'", "whoever", "insult", "a", "prophet", "kill", "they", "'", "..."]
(c32-6 / struggle-02
       :ARG1 (c32-3 / sympathize-01
                    :ARG1 (c32-5 / person
                                 :ARG0-of (c32-0 / worship-01
                                                 :ARG1 (c32-9 / person
                                                              :ARG0-of (c32-1 / say-01
                                                                              :ARG1 (c32-8 / kill-01
                                                                                           :ARG0 (c32-2 / person
                                                                                                        :ARG0-of (c32-4 / insult-01
                                                                                                                        :ARG1 (c32-7 / prophet)))
                                                                                           :ARG1 c32-5)))))))

# ::snt cant belive they find these things so fast after not so fast stopping them from happing in first place
# ::tokens ["ca", "nt", "belive", "they", "find", "these", "things", "so", "fast", "after", "not", "so", "fast", "stopping", "them", "from", "happing", "in", "first", "place"]
# ::lemmas ["can", "not", "belive", "they", "find", "these", "thing", "so", "fast", "after", "not", "so", "fast", "stop", "they", "from", "happe", "in", "first", "place"]
(c33-8 / possible-01
       :ARG1 (c33-2 / believe-01
                    :ARG0 (c33-5 / i)
                    :ARG1 (c33-0 / find-01
                                 :ARG0 (c33-12 / they)
                                 :ARG1 (c33-10 / thing
                                               :mod (c33-7 / this))
                                 :ARG1-of (c33-6 / fast-02
                                                 :degree (c33-11 / so))
                                 :time (c33-13 / after
                                               :op1 (c33-4 / stop-03
                                                           :ARG0 c33-12
                                                           :ARG1 c33-10
                                                           :mod (c33-9 / in-the-first-place)
                                                           :ARG1-of (c33-3 / fast-02
                                                                           :degree (c33-1 / so
                                                                                          :polarity -))))))
       :polarity -)

# ::snt my question is. When it is that plain in writing that Islam is non-violent. How do terrorists justify violence with Islam?
# ::tokens ["my", "question", "is", ".", "When", "it", "is", "that", "plain", "in", "writing", "that", "Islam", "is", "non", "-", "violent", ".", "How", "do", "terrorists", "justify", "violence", "with", "Islam", "?"]
# ::lemmas ["my", "question", "be", ".", "when", "it", "be", "that", "plain", "in", "write", "that", "Islam", "be", "non", "-", "violent", ".", "how", "do", "terrorist", "justify", "violence", "with", "Islam", "?"]
(c34-2 / multi-sentence
       :snt1 (c34-5 / question-01
                    :ARG0 (c34-7 / i)
                    :ARG1 (c34-0 / justify-01
                                 :ARG0 (c34-13 / terrorist)
                                 :ARG1 (c34-9 / violence)
                                 :ARG2 (c34-11 / religious-group
                                               :name (c34-8 / name
                                                            :op1 "Islam"))
                                 :manner (c34-14 / amr-unknown)))
       :snt2 (c34-3 / be-temporally-at-91
                    :ARG1 (c34-10 / plain
                                  :domain (c34-1 / write-01
                                                 :ARG1 (c34-4 / violent
                                                              :domain c34-11
                                                              :polarity -))
                                  :degree (c34-12 / that))
                    :ARG2 (c34-6 / amr-unknown)))

# ::snt haha I told u about history in the past in Middle east.
# ::tokens ["haha", "I", "told", "u", "about", "history", "in", "the", "past", "in", "Middle", "east", "."]
# ::lemmas ["haha", "i", "tell", "u", "about", "history", "in", "the", "past", "in", "Middle", "east", "."]
(c35-6 / tell-01
       :ARG0 (c35-3 / i)
       :ARG1 (c35-0 / history
                    :time (c35-5 / past)
                    :location (c35-1 / world-region
                                     :name (c35-4 / name
                                                  :op1 "Middle"
                                                  :op2 "East")))
       :ARG2 (c35-2 / you)
       :mod (c35-7 / haha
                   :mode expressive))

# ::snt from their limited understand of Islam and Quran I think most of terrorists are ignorantof Islam like non-Muslim.they think
# ::tokens ["from", "their", "limited", "understand", "of", "Islam", "and", "Quran", "I", "think", "most", "of", "terrorists", "are", "ignorantof", "Islam", "like", "non-Muslim.they", "think"]
# ::lemmas ["from", "their", "limited", "understand", "of", "Islam", "and", "Quran", "i", "think", "most", "of", "terrorist", "be", "ignorantof", "Islam", "like", "non-muslim.they", "think"]
(c36-1 / multi-sentence
       :snt1 (c36-20 / think-01
                     :ARG0 (c36-12 / i)
                     :ARG1 (c36-14 / ignorant-02
                                   :ARG1 (c36-19 / terrorist
                                                 :quant (c36-9 / most)
                                                 :ARG1-of (c36-0 / include-91
                                                                 :ARG2 (c36-13 / terrorist)))
                                   :ARG2 (c36-10 / religious-group
                                                 :name (c36-8 / name
                                                              :op1 "Islam"))
                                   :ARG1-of (c36-2 / resemble-01
                                                   :ARG2 (c36-15 / ignorant-02
                                                                 :ARG1 c36-13
                                                                 :ARG2 (c36-7 / religious-group
                                                                              :name (c36-18 / name
                                                                                            :op1 "Muslim")))))
                     :source (c36-11 / understand-01
                                     :ARG0 c36-19
                                     :ARG1 (c36-4 / and
                                                  :op1 c36-10
                                                  :op2 (c36-6 / book
                                                              :name (c36-3 / name
                                                                           :op1 "Quran")))
                                     :ARG1-of (c36-5 / limit-01)))
       :snt2 (c36-16 / think-01
                     :ARG0 (c36-17 / they)))

# ::snt think any killing means to order them to kill.most of the holy Quran is described what happened through past and what did they
# ::tokens ["think", "any", "killing", "means", "to", "order", "them", "to", "kill.most", "of", "the", "holy", "Quran", "is", "described", "what", "happened", "through", "past", "and", "what", "did", "they"]
# ::lemmas ["think", "any", "kill", "mean", "to", "order", "they", "to", "kill.most", "of", "the", "holy", "Quran", "be", "describe", "what", "happen", "through", "past", "and", "what", "do", "they"]
(c37-2 / multi-sentence
       :snt1 (c37-14 / think-01
                     :ARG1 (c37-10 / means
                                   :mod (c37-8 / kill-01)
                                   :mod (c37-15 / any)
                                   :instrument-of (c37-4 / order-01
                                                         :ARG1 (c37-13 / they)
                                                         :ARG2 (c37-5 / kill-01
                                                                      :ARG0 c37-13))))
       :snt2 (c37-11 / describe-01
                     :ARG1 (c37-7 / and
                                  :op1 (c37-6 / event
                                              :time (c37-12 / past)
                                              :op2-of c37-7)
                                  :domain c37-13))
       :ARG2 (c37-3 / book
                    :name (c37-9 / name
                                 :op1 "Quran")
                    :mod (c37-0 / holy))
       :quant (c37-1 / most))
