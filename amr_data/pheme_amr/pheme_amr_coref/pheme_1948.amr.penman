# ::snt Merci.
# ::tokens ["Merci", "."]
# ::lemmas ["merci", "."]
(c1-1 / person
      :name (c1-0 / name
                  :op1 "Merci")
      :mode expressive)

# ::snt Merci
# ::tokens ["Merci"]
# ::lemmas ["merci"]
(c2-1 / person
      :name (c2-0 / name
                  :op1 "Merci"))

# ::snt Well illustrated. Freedom of press will ALWAYS rise from the ashes.Long live Charlie hebdo
# ::tokens ["Well", "illustrated", ".", "Freedom", "of", "press", "will", "ALWAYS", "rise", "from", "the", "ashes", ".", "Long", "live", "Charlie", "hebdo"]
# ::lemmas ["well", "illustrate", ".", "freedom", "of", "press", "will", "always", "rise", "from", "the", "ashe", ".", "long", "live", "Charlie", "hebdo"]
(c3-2 / multi-sentence
      :snt1 (c3-5 / illustrate-01
                  :ARG1-of (c3-0 / well-09))
      :snt2 (c3-8 / rise-01
                  :ARG1 (c3-1 / free-04
                              :ARG3 (c3-7 / press))
                  :ARG2 (c3-11 / ash)
                  :time (c3-4 / always))
      :snt3 (c3-3 / live-01
                  :ARG0 (c3-10 / person
                               :name (c3-6 / name
                                           :op1 "Charlie"
                                           :op2 "Hebdo"))
                  :ARG1-of (c3-9 / long-03)))

# ::snt NousSommesCharlie Commencez regarder pour cet t =&gt;
# ::tokens ["NousSommesCharlie", "Commencez", "regarder", "pour", "cet", "t", "=", "&", "gt", ";"]
# ::lemmas ["NousSommesCharlie", "Commencez", "regarder", "pour", "cet", "t", "=", "&", "gt", ";"]
(c4-2 / pour-02
      :ARG1 (c4-3 / regard-01
                  :ARG0 (c4-5 / person
                              :name (c4-1 / name
                                          :op1 "NousSommesCharlie"
                                          :op2 "Commencez")))
      :ARG2 (c4-4 / string-entity
                  :ARG1-of (c4-0 / equal-01)
                  :value "cet"))

# ::snt Merci x
# ::tokens ["Merci", "x"]
# ::lemmas ["merci", "x"]
(c5-1 / person
      :name (c5-0 / name
                  :op1 "Merci"))

# ::snt Merci.x
# ::tokens ["Merci.x"]
# ::lemmas ["Merci.x"]
(c6-1 / person
      :name (c6-0 / name
                  :op1 "Merci.x"))

# ::snt amen, even a broken pencil can still write
# ::tokens ["amen", ",", "even", "a", "broken", "pencil", "can", "still", "write"]
# ::lemmas ["amen", ",", "even", "a", "broken", "pencil", "can", "still", "write"]
(c7-3 / possible-01
      :ARG1 (c7-0 / write-01
                  :ARG0 (c7-5 / pencil
                              :ARG1-of (c7-1 / break-01))
                  :mod (c7-4 / still))
      :mod (c7-6 / amen
                 :mode expressive)
      :mod (c7-2 / even))

# ::snt Merci Charlene!
# ::tokens ["Merci", "Charlene", "!"]
# ::lemmas ["Merci", "Charlene", "!"]
(c8-1 / person
      :name (c8-0 / name
                  :op1 "Merci"
                  :op2 "Charlene")
      :mode expressive)

# ::snt Very impressed with the art statement. Well done Sister. Blessed with many trips to FR.
# ::tokens ["Very", "impressed", "with", "the", "art", "statement", ".", "Well", "done", "Sister", ".", "Blessed", "with", "many", "trips", "to", "FR", "."]
# ::lemmas ["very", "impressed", "with", "the", "art", "statement", ".", "well", "do", "Sister", ".", "bless", "with", "many", "trip", "to", "FR", "."]
(c9-1 / multi-sentence
      :snt1 (c9-3 / impress-01
                  :ARG0 (c9-11 / state-01
                               :ARG3 (c9-13 / art))
                  :ARG1 (c9-9 / i)
                  :degree (c9-5 / very))
      :snt2 (c9-7 / do-02
                  :ARG1-of (c9-0 / well-09))
      :snt3 (c9-2 / bless-01
                  :ARG1 (c9-6 / person
                              :name (c9-4 / name
                                          :op1 "Sister"))
                  :ARG2 (c9-12 / trip-03
                               :ARG0 c9-6
                               :ARG1 (c9-8 / country
                                           :name c9-4
                                           :op1 "France"))
                  :quant (c9-10 / many)))

# ::snt This is a tribute honoring the Charlie Hebdo magazine staff
# ::tokens ["This", "is", "a", "tribute", "honoring", "the", "Charlie", "Hebdo", "magazine", "staff"]
# ::lemmas ["this", "be", "a", "tribute", "honor", "the", "Charlie", "Hebdo", "magazine", "staff"]
(c11-6 / tribute
       :ARG0-of (c11-0 / honor-01
                       :ARG1 (c11-3 / person
                                    :ARG2-of (c11-5 / staff-01
                                                    :ARG1 (c11-1 / magazine
                                                                 :name (c11-2 / name
                                                                              :op1 "Charlie"
                                                                              :op2 " Hebdo")))))
       :domain (c11-4 / this))

# ::snt " : So heartbroken for France...thinking of all my French friends across the sea today "
# ::tokens ["\"", ":", "So", "heartbroken", "for", "France", "...", "thinking", "of", "all", "my", "French", "friends", "across", "the", "sea", "today", "\""]
# ::lemmas ["\"", ":", "so", "heartbroken", "for", "France", "...", "think", "of", "all", "my", "French", "friend", "across", "the", "sea", "today", "\""]
(c12-1 / break-heart-31
       :ARG1 (c12-7 / country
                    :name (c12-5 / name
                                 :op1 "France"))
       :degree (c12-9 / so)
       :ARG1-of (c12-6 / cause-01
                       :ARG0 (c12-10 / think-01
                                     :ARG0 (c12-4 / i)
                                     :ARG1 (c12-0 / friend
                                                  :mod c12-7
                                                  :mod (c12-11 / all)
                                                  :location (c12-3 / across
                                                                   :op1 (c12-2 / sea)))
                                     :time (c12-8 / today))))

# ::snt Merci
# ::tokens ["Merci"]
# ::lemmas ["merci"]
(c13-1 / person
       :name (c13-0 / name
                    :op1 "Merci"))

# ::snt merci
# ::tokens ["merci"]
# ::lemmas ["merci"]
(c14-1 / person
       :name (c14-0 / name
                    :op1 "Merci"))
