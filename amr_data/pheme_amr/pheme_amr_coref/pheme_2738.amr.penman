# ::snt how's about we focus on and stop giving this idiot more limelight than he deserves??
# ::tokens ["how", "'s", "about", "we", "focus", "on", "and", "stop", "giving", "this", "idiot", "more", "limelight", "than", "he", "deserves", "?", "?"]
# ::lemmas ["how", "be", "about", "we", "focus", "on", "and", "stop", "give", "this", "idiot", "more", "limelight", "than", "he", "deserve", "?", "?"]
(c1-11 / amr-unknown
       :topic (c1-5 / and
                    :op1 (c1-2 / focus-01
                               :ARG0 (c1-1 / we))
                    :op2 (c1-9 / stop-01
                               :ARG0 c1-1
                               :ARG1 (c1-8 / give-01
                                           :ARG0 c1-1
                                           :ARG1 (c1-3 / limelight
                                                       :ARG1-of (c1-0 / have-quant-91
                                                                      :ARG3 (c1-4 / more)
                                                                      :ARG4 (c1-7 / deserve-01
                                                                                  :ARG0 (c1-6 / idiot
                                                                                              :mod (c1-10 / this)
                                                                                              :ARG2-of c1-8))))))))

# ::snt y does this name Man Monis sound like pakistani to me???
# ::tokens ["y", "does", "this", "name", "Man", "Monis", "sound", "like", "pakistani", "to", "me", "?", "?", "?"]
# ::lemmas ["y", "do", "this", "name", "Man", "Monis", "sound", "like", "pakistani", "to", "i", "?", "?", "?"]
(c3-7 / sound-01
      :ARG1 (c3-1 / name
                  :mod (c3-8 / this)
                  :ARG1-of (c3-2 / name-01
                                 :ARG2 (c3-3 / person
                                             :name (c3-4 / name
                                                         :op1 "Man"
                                                         :op2 "Monis"))))
      :ARG2 (c3-9 / person
                  :mod (c3-5 / country
                             :name (c3-6 / name
                                         :op1 "Pakistan")))
      :ARG3 (c3-0 / i)
      :polarity (c3-10 / amr-unknown))

# ::snt Man Monis is very strange name!
# ::tokens ["Man", "Monis", "is", "very", "strange", "name", "!"]
# ::lemmas ["Man", "Monis", "be", "very", "strange", "name", "!"]
(c4-0 / strange
      :domain (c4-2 / name
                    :op1 "Man"
                    :op2 "Monis")
      :degree (c4-1 / very)
      :domain (c4-3 / name))

# ::snt on bail for a charge of being an accessory to the murder of his wife.We are told he had a weapon,a gun I presume, how
# ::tokens ["on", "bail", "for", "a", "charge", "of", "being", "an", "accessory", "to", "the", "murder", "of", "his", "wife", ".", "We", "are", "told", "he", "had", "a", "weapon", ",", "a", "gun", "I", "presume", ",", "how"]
# ::lemmas ["on", "bail", "for", "a", "charge", "of", "be", "an", "accessory", "to", "the", "murder", "of", "his", "wife", ".", "we", "be", "tell", "he", "have", "a", "weapon", ",", "a", "gun", "i", "presume", ",", "how"]
(c5-0 / multi-sentence
      :snt1 (c5-9 / bail-out-02
                  :ARG1 (c5-8 / he)
                  :ARG3 (c5-17 / charge-05
                               :ARG1 c5-8
                               :ARG2 (c5-7 / accessory
                                           :prep-to (c5-10 / murder-01
                                                           :ARG0 c5-8
                                                           :ARG1 (c5-4 / person
                                                                       :ARG0-of (c5-6 / have-rel-role-91
                                                                                      :ARG1 (c5-3 / he)
                                                                                      :ARG2 (c5-12 / wife)))))))
      :snt2 (c5-18 / tell-01
                   :ARG1 (c5-15 / have-03
                                :ARG0 (c5-16 / he)
                                :ARG1 (c5-2 / weapon
                                            :mod (c5-11 / gun
                                                        :ARG1-of (c5-5 / presume-01
                                                                       :ARG0 (c5-14 / i)))
                                            :manner (c5-13 / amr-unknown)))
                   :ARG2 (c5-1 / we)))

# ::snt jee-zuz-aich-christ everyone freaks out with this whole isis shit right away, don't they?
# ::tokens ["jee", "-", "zuz", "-", "aich", "-", "christ", "everyone", "freaks", "out", "with", "this", "whole", "isis", "shit", "right", "away", ",", "do", "n't", "they", "?"]
# ::lemmas ["jee", "-", "zuz", "-", "aich", "-", "christ", "everyone", "freak", "out", "with", "this", "whole", "isis", "shit", "right", "away", ",", "do", "not", "they", "?"]
(c6-1 / freak-out-02
      :ARG0 (c6-7 / shit
                  :mod (c6-6 / religious-group
                             :name (c6-5 / name
                                         :op1 "Islam"))
                  :mod (c6-0 / whole)
                  :mod (c6-8 / this))
      :ARG1 (c6-2 / everyone)
      :time (c6-4 / right-away)
      :ARG1-of (c6-3 / request-confirmation-91))

# ::snt hmm Drill Held At Same Exact Lindt Cafe Location In Sydney Last Year!
# ::tokens ["hmm", "Drill", "Held", "At", "Same", "Exact", "Lindt", "Cafe", "Location", "In", "Sydney", "Last", "Year", "!"]
# ::lemmas ["hmm", "Drill", "Held", "At", "Same", "Exact", "Lindt", "Cafe", "Location", "in", "Sydney", "Last", "Year", "!"]
(c7-0 / hold-04
      :ARG1 (c7-6 / drill)
      :mod (c7-9 / hmm
                 :mode expressive)
      :location (c7-2 / location
                      :name (c7-4 / name
                                  :op1 "Lindt"
                                  :op2 "Cafe")
                      :location (c7-7 / city
                                      :name (c7-5 / name
                                                  :op1 "Sydney"))
                      :mod (c7-3 / exact))
      :time (c7-1 / year
                  :mod (c7-8 / last)))

# ::snt Police let media disclose identity of gunman. 'Self-confessed Sheikh' Man Monis, Iranian refugee
# ::tokens ["Police", "let", "media", "disclose", "identity", "of", "gunman", ".", "'", "Self", "-", "confessed", "Sheikh", "'", "Man", "Monis", ",", "Iranian", "refugee"]
# ::lemmas ["police", "let", "medium", "disclose", "identity", "of", "gunman", ".", "'", "self", "-", "confess", "Sheikh", "'", "Man", "Monis", ",", "Iranian", "refugee"]
(c8-1 / multi-sentence
      :snt1 (c8-0 / let-01
                  :ARG0 (c8-5 / police)
                  :ARG1 (c8-6 / disclose-01
                              :ARG0 (c8-7 / media)
                              :ARG1 (c8-2 / identity
                                          :poss (c8-8 / gunman))))
      :snt2 (c8-13 / person
                   :name (c8-3 / name
                               :op1 "Man"
                               :op2 "Monis")
                   :mod (c8-9 / refugee
                              :mod (c8-10 / country
                                          :name (c8-4 / name
                                                      :op1 "Iran")))
                   :ARG0-of (c8-11 / confess-01
                                   :ARG1 (c8-12 / self))))

# ::snt : BREAKING: gunman identified as local resident Man Monis - reports /it was said last night!
# ::tokens [":", "BREAKING", ":", "gunman", "identified", "as", "local", "resident", "Man", "Monis", "-", "reports", "/it", "was", "said", "last", "night", "!"]
# ::lemmas [":", "breaking", ":", "gunman", "identify", "as", "local", "resident", "Man", "Monis", "-", "reports", "/it", "be", "say", "last", "night", "!"]
(c9-2 / multi-sentence
      :snt1 (c9-3 / break-13
                  :ARG1 (c9-9 / report-01
                              :ARG1 (c9-4 / identify-01
                                          :ARG1 (c9-11 / gunman)
                                          :ARG2 (c9-8 / person
                                                      :name (c9-6 / name
                                                                  :op1 "Man"
                                                                  :op2 "Monis")
                                                      :ARG0-of (c9-5 / reside-01
                                                                     :ARG1-of (c9-1 / local-02))))))
      :snt2 (c9-13 / say-01
                   :ARG1 (c9-12 / it)
                   :time (c9-10 / date-entity
                                :dayperiod (c9-7 / night)
                                :mod (c9-0 / yesterday))))

# ::snt He only popped in to order a latte for his ASIS handler
# ::tokens ["He", "only", "popped", "in", "to", "order", "a", "latte", "for", "his", "ASIS", "handler"]
# ::lemmas ["he", "only", "pop", "in", "to", "order", "a", "latte", "for", "his", "ASIS", "handler"]
(c10-7 / pop-in-00
       :ARG0 (c10-0 / he)
       :mod (c10-4 / only)
       :purpose (c10-2 / order-02
                       :ARG0 c10-0
                       :ARG1 (c10-1 / latte)
                       :ARG4 (c10-8 / person
                                    :ARG0-of (c10-9 / have-org-role-91
                                                    :ARG1 (c10-3 / military
                                                                 :name (c10-5 / name
                                                                              :op1 "ASIS"))
                                                    :ARG3 (c10-6 / handle-01)))))

# ::snt if he is iranian and shia he could never be an IS fan
# ::tokens ["if", "he", "is", "iranian", "and", "shia", "he", "could", "never", "be", "an", "IS", "fan"]
# ::lemmas ["if", "he", "be", "iranian", "and", "shia", "he", "could", "never", "be", "an", "IS", "fan"]
(c11-4 / possible-01
       :ARG1 (c11-1 / fan
                    :mod (c11-5 / religious-group
                                :name (c11-3 / name
                                             :op1 "Islam"))
                    :domain (c11-0 / he)
                    :time (c11-2 / ever))
       :condition (c11-6 / and
                         :op1 c11-5
                         :op2 c11-5)
       :polarity -)

# ::snt : Police let media disclose id of gunman. 'Self-confessed Sheikh' Man Monis, Iranian refugee
# ::tokens [":", "Police", "let", "media", "disclose", "i", "d", "of", "gunman", ".", "'", "Self", "-", "confessed", "Sheikh", "'", "Man", "Monis", ",", "Iranian", "refugee"]
# ::lemmas [":", "police", "let", "medium", "disclose", "i", "d", "of", "gunman", ".", "'", "self", "-", "confess", "Sheikh", "'", "Man", "Monis", ",", "Iranian", "refugee"]
(c12-1 / multi-sentence
       :snt1 (c12-0 / let-01
                    :ARG0 (c12-5 / police)
                    :ARG1 (c12-6 / disclose-01
                                 :ARG0 (c12-7 / media)
                                 :ARG1 (c12-2 / id
                                              :poss (c12-8 / gunman))))
       :snt2 (c12-13 / person
                     :name (c12-3 / name
                                  :op1 "Man"
                                  :op2 "Monis")
                     :mod (c12-9 / refugee
                                 :mod (c12-10 / country
                                              :name (c12-4 / name
                                                           :op1 "Iran")))
                     :ARG0-of (c12-11 / confess-01
                                      :ARG1 (c12-12 / self))))

# ::snt gunman identified as local resident man monis
# ::tokens ["gunman", "identified", "as", "local", "resident", "man", "monis"]
# ::lemmas ["gunman", "identify", "as", "local", "resident", "man", "monis"]
(c13-3 / identify-01
       :ARG1 (c13-2 / man
                    :ARG0-of (c13-0 / have-org-role-91
                                    :ARG2 (c13-7 / gunman)))
       :ARG2 (c13-5 / man
                    :name (c13-4 / name
                                 :op1 "Man"
                                 :op2 "Monis")
                    :ARG0-of (c13-6 / reside-01
                                    :ARG1-of (c13-1 / local-02))))

# ::snt Truth About Flag
# ::tokens ["Truth", "About", "Flag"]
# ::lemmas ["Truth", "about", "flag"]
(c14-1 / truth
       :topic (c14-0 / flag))
