# ::snt DONT GO THEIR PASSIVE OR LIGHT WITH . that's why they arrested U.
# ::tokens ["DONT", "GO", "THEIR", "PASSIVE", "OR", "LIGHT", "WITH", ".", "that", "'s", "why", "they", "arrested", "U."]
# ::lemmas ["dont", "GO", "their", "PASSIVE", "or", "LIGHT", "with", ".", "that", "be", "why", "they", "arrest", "U."]
(c1-1 / multi-sentence
      :snt1 (c1-7 / choose-01
                  :ARG0 (c1-9 / they)
                  :ARG1 (c1-2 / or
                              :op1 (c1-5 / pass-03
                                         :ARG0 c1-9)
                              :op2 (c1-0 / light-06
                                         :ARG0 c1-9))
                  :polarity -)
      :snt2 (c1-6 / cause-01
                  :ARG0 (c1-8 / that)
                  :ARG1 (c1-11 / arrest-01
                               :ARG0 (c1-4 / they)
                               :ARG1 (c1-10 / person
                                            :name (c1-3 / name
                                                        :op1 "U.")))))

# ::snt Will you discuss what a piece of S Brown was? That he was a bully and thief?
# ::tokens ["Will", "you", "discuss", "what", "a", "piece", "of", "S", "Brown", "was", "?", "That", "he", "was", "a", "bully", "and", "thief", "?"]
# ::lemmas ["will", "you", "discuss", "what", "a", "piece", "of", "S", "Brown", "be", "?", "that", "he", "be", "a", "bully", "and", "thief", "?"]
(c2-2 / multi-sentence
      :snt1 (c2-8 / discuss-01
                  :ARG0 (c2-1 / you)
                  :ARG1 (c2-10 / thing
                               :domain (c2-7 / piece
                                             :poss (c2-11 / person
                                                          :name (c2-5 / name
                                                                      :op1 "Brown"))))
                  :polarity (c2-12 / amr-unknown))
      :snt2 (c2-4 / and
                  :op1 (c2-3 / bully-01
                             :ARG0 (c2-0 / he))
                  :op2 (c2-9 / steal-01
                             :ARG0 c2-0)
                  :domain c2-0
                  :polarity (c2-6 / amr-unknown)))

# ::snt looks like there's a big covering up attempt going on, what do you think since you're actually there?
# ::tokens ["looks", "like", "there", "'s", "a", "big", "covering", "up", "attempt", "going", "on", ",", "what", "do", "you", "think", "since", "you", "'re", "actually", "there", "?"]
# ::lemmas ["look", "like", "there", "be", "a", "big", "covering", "up", "attempt", "go", "on", ",", "what", "do", "you", "think", "since", "you", "be", "actually", "there", "?"]
(c3-12 / and
       :op1 (c3-1 / look-02
                  :ARG1 (c3-3 / attempt-01
                              :ARG1 (c3-6 / cover-up-04)
                              :mod (c3-2 / big)
                              :ARG1-of (c3-7 / go-on-15)))
       :op2 (c3-11 / think-01
                   :ARG0 (c3-0 / you)
                   :ARG1 (c3-4 / amr-unknown)
                   :ARG1-of (c3-5 / cause-01
                                  :ARG0 (c3-8 / be-located-at-91
                                              :ARG1 c3-0
                                              :ARG2 (c3-9 / there)
                                              :ARG1-of (c3-10 / actual-02)))))

# ::snt I thank you for your coverage of the St
# ::tokens ["I", "thank", "you", "for", "your", "coverage", "of", "the", "St"]
# ::lemmas ["i", "thank", "you", "for", "your", "coverage", "of", "the", "St"]
(c4-5 / thank-01
      :ARG0 (c4-1 / i)
      :ARG1 (c4-0 / you)
      :ARG2 (c4-3 / cover-03
                  :ARG0 c4-0
                  :ARG1 (c4-4 / state
                              :name (c4-2 / name
                                          :op1 "St"))))

# ::snt I think people wouldnt be so mad if thought that justice was the primary goal and not protection of property
# ::tokens ["I", "think", "people", "would", "nt", "be", "so", "mad", "if", "thought", "that", "justice", "was", "the", "primary", "goal", "and", "not", "protection", "of", "property"]
# ::lemmas ["i", "think", "people", "would", "not", "be", "so", "mad", "if", "think", "that", "justice", "be", "the", "primary", "goal", "and", "not", "protection", "of", "property"]
(c5-10 / think-01
       :ARG0 (c5-3 / i)
       :ARG1 (c5-1 / mad-04
                   :ARG1 (c5-4 / person)
                   :degree (c5-8 / so)
                   :condition (c5-7 / think-01
                                    :ARG0 c5-4
                                    :ARG1 (c5-5 / instead-of-91
                                                :ARG1 (c5-6 / goal
                                                            :mod (c5-11 / primary)
                                                            :domain (c5-0 / justice))
                                                :ARG2 (c5-2 / protect-01
                                                            :ARG1 (c5-9 / property))))
                   :polarity -))

# ::snt can they be held accountable for what it seems to be... Trying to cover his and wilson
# ::tokens ["can", "they", "be", "held", "accountable", "for", "what", "it", "seems", "to", "be", "...", "Trying", "to", "cover", "his", "and", "wilson"]
# ::lemmas ["can", "they", "be", "hold", "accountable", "for", "what", "it", "seem", "to", "be", "...", "try", "to", "cover", "his", "and", "wilson"]
(c6-2 / multi-sentence
      :snt1 (c6-6 / possible-01
                  :ARG1 (c6-0 / hold-02
                              :ARG1 (c6-12 / accountable-02
                                           :ARG0 (c6-10 / they)
                                           :ARG1 (c6-8 / thing
                                                       :ARG1-of (c6-9 / seem-01)))))
      :snt2 (c6-5 / try-01
                  :ARG1 (c6-7 / cover-03
                              :ARG1 (c6-3 / and
                                          :op1 (c6-1 / he)
                                          :op2 (c6-11 / person
                                                      :name (c6-4 / name
                                                                  :op1 "Wilson"))))))

# ::snt Why would speak with that race baiting bigot Sharpton? He is just there to incite more rioting.
# ::tokens ["Why", "would", "speak", "with", "that", "race", "baiting", "bigot", "Sharpton", "?", "He", "is", "just", "there", "to", "incite", "more", "rioting", "."]
# ::lemmas ["why", "would", "speak", "with", "that", "race", "baiting", "bigot", "Sharpton", "?", "he", "be", "just", "there", "to", "incite", "more", "rioting", "."]
(c7-2 / multi-sentence
      :snt1 (c7-9 / cause-01
                  :ARG0 (c7-16 / amr-unknown)
                  :ARG1 (c7-13 / speak-01
                               :ARG2 (c7-7 / person
                                           :name (c7-6 / name
                                                       :op1 "Sharpton")
                                           :mod (c7-3 / bigot
                                                      :ARG0-of (c7-10 / bait-01
                                                                      :ARG2 (c7-8 / race)))
                                           :mod (c7-15 / that))))
      :snt2 (c7-14 / be-located-at-91
                   :ARG1 (c7-0 / he)
                   :ARG2 (c7-12 / there)
                   :mod (c7-1 / just)
                   :purpose (c7-4 / incite-01
                                  :ARG0 c7-0
                                  :ARG1 (c7-5 / riot-01
                                              :mod (c7-11 / more)))))

# ::snt Mike Brown Law. Require all state, county, and local police to wear a camera WhiteHouse PETITION
# ::tokens ["Mike", "Brown", "Law", ".", "Require", "all", "state", ",", "county", ",", "and", "local", "police", "to", "wear", "a", "camera", "WhiteHouse", "PETITION"]
# ::lemmas ["Mike", "Brown", "Law", ".", "require", "all", "state", ",", "county", ",", "and", "local", "police", "to", "wear", "a", "camera", "WhiteHouse", "petition"]
(c8-2 / multi-sentence
      :snt1 (c8-1 / law
                  :name (c8-5 / name
                              :op1 "Mike"
                              :op2 "Brown"
                              :op3 "Law"))
      :snt2 (c8-8 / require-01
                  :ARG1 (c8-0 / wear-01
                              :ARG0 (c8-16 / and
                                           :op1 (c8-7 / police
                                                      :mod (c8-13 / state))
                                           :op2 (c8-15 / police
                                                       :mod (c8-9 / county))
                                           :op3 (c8-3 / police
                                                      :ARG1-of (c8-12 / local-02))
                                           :mod (c8-4 / all))
                              :ARG1 (c8-10 / camera)
                              :ARG1-of (c8-14 / prove-01
                                              :location (c8-11 / government-organization
                                                               :name (c8-6 / name
                                                                           :op1 "WhiteHouse"))))
                  :ARG2 c8-16))

# ::snt oohhh yeah!!
# ::tokens ["oohhh", "yeah", "!", "!"]
# ::lemmas ["oohhh", "yeah", "!", "!"]
(c9-0 / oh-yeah
      :mode expressive)

# ::snt it's , false distractions, even tho they're still lying and distracting with this "robbery" report
# ::tokens ["it", "'s", ",", "false", "distractions", ",", "even", "tho", "they", "'re", "still", "lying", "and", "distracting", "with", "this", "\"", "robbery", "\"", "report"]
# ::lemmas ["it", "be", ",", "false", "distraction", ",", "even", "tho", "they", "be", "still", "lie", "and", "distract", "with", "this", "\"", "robbery", "\"", "report"]
(c10-6 / distract-01
       :mod (c10-1 / false)
       :domain (c10-4 / it)
       :concession (c10-3 / even-if
                          :op1 (c10-11 / and
                                       :op1 (c10-2 / lie-08
                                                   :ARG0 (c10-10 / they)
                                                   :time (c10-9 / still))
                                       :op2 (c10-0 / distract-01
                                                   :ARG0 (c10-7 / report-01
                                                                :ARG1 (c10-5 / rob-01)
                                                                :mod (c10-8 / this))
                                                   :ARG1 c10-10))))

# ::snt ask if they will bring the dead thief's accomplice for another interview pls
# ::tokens ["ask", "if", "they", "will", "bring", "the", "dead", "thief", "'s", "accomplice", "for", "another", "interview", "pls"]
# ::lemmas ["ask", "if", "they", "will", "bring", "the", "dead", "thief", "'s", "accomplice", "for", "another", "interview", "pls"]
(c11-11 / ask-01
        :ARG0 (c11-1 / you)
        :ARG1 (c11-2 / bring-01
                     :ARG0 (c11-9 / they)
                     :ARG1 (c11-6 / person
                                  :ARG0-of (c11-0 / have-rel-role-91
                                                  :ARG1 (c11-10 / person
                                                                :ARG0-of (c11-8 / steal-01))
                                                  :ARG2 (c11-3 / accomplice))
                                  :ARG1-of (c11-7 / die-01))
                     :purpose (c11-4 / interview-01
                                     :ARG1 c11-9
                                     :mod (c11-5 / another)))
        :ARG2 c11-9
        :mode imperative
        :polite +)

# ::snt Dude, can I get your autograph?
# ::tokens ["Dude", ",", "can", "I", "get", "your", "autograph", "?"]
# ::lemmas ["dude", ",", "can", "i", "get", "your", "autograph", "?"]
(c12-5 / say-01
       :ARG0 (c12-1 / i)
       :ARG1 (c12-2 / possible-01
                    :ARG1 (c12-4 / get-01
                                 :ARG0 c12-1
                                 :ARG1 (c12-6 / autograph
                                              :poss (c12-3 / dude)))
                    :polarity (c12-0 / amr-unknown))
       :ARG2 c12-3)

# ::snt What about justice for the guy Mike Brown robbed?
# ::tokens ["What", "about", "justice", "for", "the", "guy", "Mike", "Brown", "robbed", "?"]
# ::lemmas ["what", "about", "justice", "for", "the", "guy", "Mike", "Brown", "rob", "?"]
(c13-5 / amr-unknown
       :topic (c13-0 / justice
                     :beneficiary (c13-4 / guy
                                         :ARG1-of (c13-3 / rob-01
                                                         :ARG0 (c13-2 / person
                                                                      :name (c13-1 / name
                                                                                   :op1 "Mike"
                                                                                   :op2 "Brown"))))))

# ::snt Ed show
# ::tokens ["Ed", "show"]
# ::lemmas ["Ed", "show"]
(c14-0 / show-04
       :mod (c14-1 / edit-01))

# ::snt StL police assoc have issued statement citing their own violence as proof that is unsafe
# ::tokens ["StL", "police", "assoc", "have", "issued", "statement", "citing", "their", "own", "violence", "as", "proof", "that", "is", "unsafe"]
# ::lemmas ["StL", "police", "assoc", "have", "issue", "statement", "cite", "their", "own", "violence", "as", "proof", "that", "be", "unsafe"]
(c15-6 / state-01
       :ARG0 (c15-8 / assocross
                    :mod (c15-3 / police)
                    :mod (c15-5 / city
                                :name (c15-1 / name
                                             :op1 "StL")))
       :ARG1 (c15-4 / cite-01
                    :ARG0 c15-8
                    :ARG1 (c15-2 / violence
                                 :poss c15-8)
                    :ARG2 (c15-7 / prove-01
                                 :ARG0 c15-2
                                 :ARG1 (c15-0 / safe-01
                                              :polarity -))))

# ::snt Video Release can you say Backfire Calculated w/ ZERO Return
# ::tokens ["Video", "Release", "can", "you", "say", "Backfire", "Calculated", "w/", "ZERO", "Return"]
# ::lemmas ["Video", "Release", "can", "you", "say", "Backfire", "Calculated", "w/", "ZERO", "Return"]
(c16-4 / possible-01
       :ARG1 (c16-7 / say-01
                    :ARG0 (c16-0 / you)
                    :ARG1 (c16-6 / calculate-01
                                 :ARG1 (c16-1 / backfire)
                                 :manner (c16-5 / return-01
                                                :quant 0)))
       :medium (c16-2 / release-01
                      :ARG1 (c16-3 / video)))

# ::snt to respect the revolutionary nature of all Americans shouldnt we ask for Justice in Ferguson and peace
# ::tokens ["to", "respect", "the", "revolutionary", "nature", "of", "all", "Americans", "should", "nt", "we", "ask", "for", "Justice", "in", "Ferguson", "and", "peace"]
# ::lemmas ["to", "respect", "the", "revolutionary", "nature", "of", "all", "Americans", "should", "not", "we", "ask", "for", "Justice", "in", "Ferguson", "and", "peace"]
(c17-9 / recommend-01
       :ARG1 (c17-14 / ask-02
                     :ARG0 (c17-1 / we)
                     :ARG1 (c17-3 / and
                                  :op1 (c17-0 / justice
                                              :location (c17-4 / incident
                                                               :name (c17-6 / name
                                                                            :op1 "Ferguson")))
                                  :op2 (c17-8 / peace))
                     :purpose (c17-5 / respect-01
                                     :ARG0 c17-1
                                     :ARG1 (c17-7 / nature
                                                  :mod (c17-2 / revolutionary)
                                                  :poss (c17-13 / person
                                                                :mod (c17-10 / country
                                                                             :name (c17-11 / name
                                                                                           :op1 "America"))
                                                                :mod (c17-12 / all))))
                     :polarity -))

# ::snt Watching Michael E. Dyson as I Tweet.
# ::tokens ["Watching", "Michael", "E.", "Dyson", "as", "I", "Tweet", "."]
# ::lemmas ["watch", "Michael", "E.", "Dyson", "as", "i", "Tweet", "."]
(c18-0 / watch-01
       :ARG0 (c18-1 / i)
       :ARG1 (c18-3 / person
                    :name (c18-2 / name
                                 :op1 "Michael"
                                 :op2 "E."
                                 :op3 "Dyson"))
       :time (c18-4 / tweet-02
                    :ARG0 c18-1))

# ::snt Breaking: Cop Who Shot Michael Brown Had No Idea He Was A Suspect
# ::tokens ["Breaking", ":", "Cop", "Who", "Shot", "Michael", "Brown", "Had", "No", "Idea", "He", "Was", "A", "Suspect"]
# ::lemmas ["break", ":", "Cop", "who", "Shot", "Michael", "Brown", "have", "no", "idea", "he", "be", "a", "Suspect"]
(c19-1 / break-01
       :ARG1 (c19-0 / have-03
                    :ARG0 (c19-6 / cop
                                 :ARG0-of (c19-7 / shoot-02
                                                 :ARG1 (c19-5 / person
                                                              :name (c19-4 / name
                                                                           :op1 "Michael"
                                                                           :op2 "Brown"))))
                    :ARG1 (c19-3 / idea
                                 :topic (c19-2 / suspect-01
                                               :ARG1 c19-5))
                    :polarity -))

# ::snt Proof Wilson knew Brown was a suspect -
# ::tokens ["Proof", "Wilson", "knew", "Brown", "was", "a", "suspect", "-"]
# ::lemmas ["Proof", "Wilson", "know", "Brown", "be", "a", "suspect", "-"]
(c20-3 / prove-01
       :ARG1 (c20-6 / know-01
                    :ARG0 (c20-7 / person
                                 :name (c20-1 / name
                                              :op1 "Wilson"))
                    :ARG1 (c20-0 / person
                                 :ARG2-of (c20-4 / suspect-01)
                                 :domain (c20-5 / person
                                                :name (c20-2 / name
                                                             :op1 "Brown")))))

# ::snt any truth to this?
# ::tokens ["any", "truth", "to", "this", "?"]
# ::lemmas ["any", "truth", "to", "this", "?"]
(c21-0 / truth
       :polarity (c21-2 / amr-unknown)
       :mod (c21-1 / any)
       :topic (c21-3 / this))

# ::snt I'm watching!!! This has got to stop!! !!!
# ::tokens ["I", "'m", "watching", "!", "!", "!", "This", "has", "got", "to", "stop", "!", "!", "!", "!", "!"]
# ::lemmas ["i", "be", "watch", "!", "!", "!", "this", "have", "get", "to", "stop", "!", "!", "!", "!", "!"]
(c22-1 / multi-sentence
       :snt1 (c22-0 / watch-01
                    :ARG0 (c22-3 / i))
       :snt2 (c22-2 / obligate-01
                    :ARG2 (c22-4 / stop-01
                                 :ARG1 (c22-5 / this))))

# ::snt I'll be on with in about mins discussing and . Tune in.
# ::tokens ["I", "'ll", "be", "on", "with", "in", "about", "mins", "discussing", "and", ".", "Tune", "in", "."]
# ::lemmas ["i", "'ll", "be", "on", "with", "in", "about", "min", "discuss", "and", ".", "tune", "in", "."]
(c23-1 / multi-sentence
       :snt1 (c23-10 / and
                     :op1 (c23-7 / discuss-01
                                 :ARG0 (c23-3 / i))
                     :op2 (c23-9 / tune-in-02
                                 :ARG0 (c23-0 / you)
                                 :mode imperative)
                     :time (c23-2 / after
                                  :op1 (c23-4 / now)
                                  :quant (c23-5 / about
                                                :op1 (c23-8 / temporal-quantity
                                                            :unit (c23-6 / minute)
                                                            :quant 1)))
                     :snt2-of c23-1))

# ::snt ..
# ::tokens [".."]
# ::lemmas [".."]
(c24-0 / amr-empty)

# ::snt dint get involved he's radical and will turn off so many to the progress being made!
# ::tokens ["dint", "get", "involved", "he", "'s", "radical", "and", "will", "turn", "off", "so", "many", "to", "the", "progress", "being", "made", "!"]
# ::lemmas ["dint", "get", "involve", "he", "be", "radical", "and", "will", "turn", "off", "so", "many", "to", "the", "progress", "be", "make", "!"]
(c25-9 / and
       :op1 (c25-3 / involve-01
                   :ARG1 (c25-0 / he)
                   :polarity -)
       :op2 (c25-7 / turn-off-08
                   :ARG0 c25-0
                   :ARG1 (c25-4 / person
                                :ARG1-of (c25-1 / have-quant-91
                                                :ARG2 (c25-2 / many)
                                                :ARG3 (c25-6 / so)))
                   :ARG2 (c25-8 / progress-01
                                :ARG1-of (c25-5 / make-01))))
