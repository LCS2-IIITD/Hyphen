# ::snt Left his body in the street for hours. As correctly points out, EVERYTHING ELSE IS IRRELEVANT.
# ::tokens ["Left", "his", "body", "in", "the", "street", "for", "hours", ".", "As", "correctly", "points", "out", ",", "EVERYTHING", "ELSE", "IS", "IRRELEVANT", "."]
# ::lemmas ["leave", "his", "body", "in", "the", "street", "for", "hours", ".", "as", "correctly", "point", "out", ",", "EVERYTHING", "ELSE", "IS", "IRRELEVANT", "."]
(c1-2 / multi-sentence
      :snt1 (c1-1 / leave-12
                  :ARG0 (c1-0 / he)
                  :ARG1 (c1-3 / body
                              :poss c1-0)
                  :location (c1-9 / street)
                  :duration (c1-6 / multiple
                                  :op1 (c1-11 / temporal-quantity
                                              :unit (c1-12 / hour)
                                              :quant 1)))
      :snt2 (c1-10 / absolute
                   :domain (c1-5 / everything
                                 :mod (c1-4 / else))
                   :ARG1-of (c1-7 / point-out-02
                                  :ARG1-of (c1-8 / correct-02))))

# ::snt it's a tactic lawyers use to present reasonable doubt
# ::tokens ["it", "'s", "a", "tactic", "lawyers", "use", "to", "present", "reasonable", "doubt"]
# ::lemmas ["it", "be", "a", "tactic", "lawyer", "use", "to", "present", "reasonable", "doubt"]
(c2-6 / tactic
      :ARG1-of (c2-1 / use-01
                     :ARG0 (c2-0 / lawyer)
                     :ARG2 (c2-3 / present-01
                                 :ARG0 c2-0
                                 :ARG1 (c2-4 / doubt-01
                                             :ARG1-of (c2-5 / reasonable-02))))
      :domain (c2-2 / it))

# ::snt Shot twice in the back as he tried to run.This is Darren Wilson, shortly after he killed
# ::tokens ["Shot", "twice", "in", "the", "back", "as", "he", "tried", "to", "run", ".", "This", "is", "Darren", "Wilson", ",", "shortly", "after", "he", "killed"]
# ::lemmas ["Shot", "twice", "in", "the", "back", "as", "he", "try", "to", "run", ".", "this", "be", "Darren", "Wilson", ",", "shortly", "after", "he", "kill"]
(c3-4 / person
      :name (c3-3 / name
                  :op1 "Darren"
                  :op2 "Wilson")
      :domain (c3-8 / this)
      :time (c3-9 / after
                  :op1 (c3-2 / kill-01
                             :ARG1 c3-4)
                  :ARG1-of (c3-7 / short-07))
      :ARG1-of (c3-1 / shoot-02
                     :ARG2 (c3-0 / back)
                     :time (c3-6 / try-01
                                 :ARG0 c3-4
                                 :ARG1 (c3-5 / run-02
                                             :ARG0 c3-4))
                     :quant 2))

# ::snt "initial" reason ... he came back, remember?
# ::tokens ["\"", "initial", "\"", "reason", "...", "he", "came", "back", ",", "remember", "?"]
# ::lemmas ["\"", "initial", "\"", "reason", "...", "he", "come", "back", ",", "remember", "?"]
(c4-5 / remember-01
      :ARG0 (c4-1 / you)
      :ARG1 (c4-6 / come-01
                  :ARG1 (c4-0 / he)
                  :direction (c4-2 / back)
                  :ARG1-of (c4-7 / cause-01
                                 :ARG0 (c4-4 / reason
                                             :mod (c4-3 / initial))))
      :polarity (c4-8 / amr-unknown))

# ::snt Mike was not going to be arrested for the felony robbery and assault he had just committed
# ::tokens ["Mike", "was", "not", "going", "to", "be", "arrested", "for", "the", "felony", "robbery", "and", "assault", "he", "had", "just", "committed"]
# ::lemmas ["Mike", "be", "not", "go", "to", "be", "arrest", "for", "the", "felony", "robbery", "and", "assault", "he", "have", "just", "commit"]
(c5-8 / arrest-01
      :ARG1 (c5-5 / person
                  :name (c5-3 / name
                              :op1 "Mike"))
      :ARG2 (c5-2 / and
                  :op1 (c5-6 / rob-01
                             :ARG0 c5-5
                             :mod (c5-1 / felony))
                  :op2 (c5-4 / assault-01
                             :ARG0 c5-5
                             :mod c5-1)
                  :ARG1-of (c5-7 / commit-02
                                 :ARG0 c5-5
                                 :time (c5-0 / just)))
      :polarity -)

# ::snt The law is lawless till is sent to Prison for a LONG Time. was a Good KID, he committed NO crime.
# ::tokens ["The", "law", "is", "lawless", "till", "is", "sent", "to", "Prison", "for", "a", "LONG", "Time", ".", "was", "a", "Good", "KID", ",", "he", "committed", "NO", "crime", "."]
# ::lemmas ["the", "law", "be", "lawless", "till", "be", "send", "to", "Prison", "for", "a", "long", "Time", ".", "be", "a", "Good", "KID", ",", "he", "commit", "no", "crime", "."]
(c6-2 / multi-sentence
      :snt1 (c6-1 / law
                  :time (c6-11 / till
                               :op1 (c6-10 / send-01
                                           :ARG1 c6-1)
                               :ARG2 (c6-4 / prison)
                               :duration (c6-9 / time
                                               :ARG1-of (c6-5 / long-03)))
                  :polarity -)
      :snt2 (c6-12 / and
                   :op1 (c6-3 / know-02
                              :ARG1 (c6-0 / he)
                              :ARG1-of (c6-7 / good-02))
                   :op2 (c6-6 / commit-02
                              :ARG0 c6-0
                              :ARG1 (c6-8 / crime-02)
                              :polarity -)))

# ::snt word. I'm gonna go Mike Brown &gt; allegedly stolen box of swishers all the time. This is offensive.
# ::tokens ["word", ".", "I", "'m", "gon", "na", "go", "Mike", "Brown", "&", "gt", ";", "allegedly", "stolen", "box", "of", "swishers", "all", "the", "time", ".", "This", "is", "offensive", "."]
# ::lemmas ["word", ".", "i", "be", "going", "to", "go", "Mike", "Brown", "&", "gt", ";", "allegedly", "steal", "box", "of", "swisher", "all", "the", "time", ".", "this", "be", "offensive", "."]
(c7-1 / multi-sentence
      :snt1 (c7-0 / word)
      :snt2 (c7-11 / go-01
                   :ARG1 (c7-6 / i)
                   :ARG4 (c7-17 / and
                                :op1 (c7-9 / person
                                           :name (c7-7 / name
                                                       :op1 "Mike"
                                                       :op2 "Brown"))
                                :op2 (c7-16 / person
                                            :name (c7-8 / name
                                                        :op1 "gt"))
                                :op3 (c7-3 / box
                                           :ARG1-of (c7-14 / steal-01
                                                           :ARG1-of (c7-5 / allege-01))
                                           :consist-of (c7-2 / person
                                                             :ARG0-of (c7-12 / ishers-01))))
                   :frequency (c7-15 / time
                                     :mod (c7-10 / all)))
      :snt3 (c7-4 / offend-01
                  :ARG0 (c7-13 / this)))

# ::snt and the police chief said the reason he was stopped was walking in the street. not an alleged robbery. case closed
# ::tokens ["and", "the", "police", "chief", "said", "the", "reason", "he", "was", "stopped", "was", "walking", "in", "the", "street", ".", "not", "an", "alleged", "robbery", ".", "case", "closed"]
# ::lemmas ["and", "the", "police", "chief", "say", "the", "reason", "he", "be", "stop", "be", "walk", "in", "the", "street", ".", "not", "an", "allege", "robbery", ".", "case", "close"]
(c8-3 / multi-sentence
      :snt1 (c8-14 / and
                   :op2 (c8-12 / say-01
                               :ARG0 (c8-7 / person
                                           :ARG0-of (c8-0 / have-org-role-91
                                                          :ARG1 (c8-13 / police)
                                                          :ARG2 (c8-9 / chief)))
                               :ARG1 c8-14
                               :op1 (c8-1 / walk-01
                                          :ARG0 (c8-2 / he)
                                          :ARG2 (c8-5 / street))
                               :op2 (c8-8 / rob-01
                                          :ARG1-of (c8-6 / allege-01)
                                          :polarity -)
                               :ARG0-of (c8-10 / cause-01
                                               :ARG1 (c8-4 / stop-01
                                                           :ARG1 c8-2))))
      :snt2 (c8-11 / close-03
                   :ARG1 (c8-15 / case-03)))

# ::snt DARREN WILSONMURDERED AN UNARMED TEENLEFT HIS BODY IN THE STREET FOR HRSAnything else is irrelevant.
# ::tokens ["DARREN", "WILSONMURDERED", "AN", "UNARMED", "TEENLEFT", "HIS", "BODY", "IN", "THE", "STREET", "FOR", "HRSAnything", "else", "is", "irrelevant", "."]
# ::lemmas ["DARREN", "wilsonmurdere", "an", "unarmed", "teenleft", "his", "body", "in", "the", "STREET", "for", "hrsanythe", "else", "be", "irrelevant", "."]
(c9-11 / and
       :op1 (c9-2 / murder-01
                  :ARG0 (c9-7 / person
                              :name (c9-6 / name
                                          :op1 "DarrEN"
                                          :op2 "WILSON"))
                  :ARG1 (c9-3 / body
                              :part-of (c9-0 / he)))
       :op2 (c9-9 / spread-01
                  :ARG1 (c9-10 / tell-01
                               :ARG1 (c9-5 / anything
                                           :mod (c9-4 / else))
                               :ARG2 c9-0)
                  :location (c9-1 / wedge))
       :ARG1-of (c9-8 / relevant-01
                      :polarity -))

# ::snt then stuffed him in the back of an SUV
# ::tokens ["then", "stuffed", "him", "in", "the", "back", "of", "an", "SUV"]
# ::lemmas ["then", "stuff", "he", "in", "the", "back", "of", "an", "SUV"]
(c11-5 / stuff-01
       :ARG1 (c11-2 / back
                    :part-of (c11-4 / vehicle
                                    :mod (c11-3 / sport)
                                    :mod (c11-1 / utility)))
       :ARG2 (c11-0 / he)
       :time (c11-6 / then))

# ::snt ARREN WILSONMURDERED AN UNARMED TEENLEFT HIS BODY IN THE STREET FOR HRS"&amp; then the body was put in a police SUV.no ambulance.
# ::tokens ["ARREN", "WILSONMURDERED", "AN", "UNARMED", "TEENLEFT", "HIS", "BODY", "IN", "THE", "STREET", "FOR", "HRS\"&amp", ";", "then", "the", "body", "was", "put", "in", "a", "police", "SUV.no", "ambulance", "."]
# ::lemmas ["ARREN", "wilsonmurdere", "an", "unarmed", "teenleft", "his", "body", "in", "the", "STREET", "for", "hrs\"&amp", ";", "then", "the", "body", "be", "put", "in", "a", "police", "suv.no", "ambulance", "."]
(c12-1 / multi-sentence
       :snt1 (c12-8 / murder-01
                    :ARG0 (c12-9 / person
                                 :name (c12-6 / name
                                              :op1 "RJB"))
                    :ARG1 (c12-16 / person
                                  :ARG1-of (c12-2 / unarmed-02)
                                  :part (c12-4 / body))
                    :location (c12-0 / wedge)
                    :purpose (c12-17 / and
                                     :op1 (c12-3 / person
                                                 :name (c12-7 / name
                                                              :op1 "HRS"))
                                     :op2 (c12-15 / person
                                                  :name (c12-10 / name
                                                                :op1 "amp"))))
       :snt2 (c12-5 / put-01
                    :ARG1 (c12-11 / body)
                    :ARG2 (c12-12 / vehicle
                                  :mod (c12-14 / police)
                                  :mod c12-12
                                  :polarity -))
       :time (c12-13 / then))

# ::snt can we release a photo?
# ::tokens ["can", "we", "release", "a", "photo", "?"]
# ::lemmas ["can", "we", "release", "a", "photo", "?"]
(c13-1 / possible-01
       :polarity (c13-4 / amr-unknown)
       :ARG1 (c13-2 / release-01
                    :ARG0 (c13-0 / we)
                    :ARG1 (c13-3 / photo)))
