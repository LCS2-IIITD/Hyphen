# ::snt Yes, it's called "Islam."
# ::tokens ["Yes", ",", "it", "'s", "called", "\"", "Islam", ".", "\""]
# ::lemmas ["yes", ",", "it", "be", "call", "\"", "Islam", ".", "\""]
(c1-2 / call-01
      :ARG1 (c1-3 / it)
      :ARG2 (c1-1 / religious-group
                  :name (c1-0 / name
                              :op1 "Islam")))

# ::snt : The Sydney cafe siege may be part of a larger plot.
# ::tokens [":", "The", "Sydney", "cafe", "siege", "may", "be", "part", "of", "a", "larger", "plot", "."]
# ::lemmas [":", "the", "Sydney", "cafe", "siege", "may", "be", "part", "of", "a", "large", "plot", "."]
(c2-4 / possible-01
      :ARG1 (c2-0 / have-part-91
                  :ARG1 (c2-8 / plot-01
                              :ARG1-of (c2-9 / have-degree-91
                                             :ARG2 (c2-1 / large)
                                             :ARG3 (c2-2 / more)))
                  :ARG2 (c2-7 / standoff
                              :location (c2-6 / cafe
                                              :location (c2-5 / city
                                                              :name (c2-3 / name
                                                                          :op1 "Sydney"))))))

# ::snt . Duh, of course it's "part of a larger plot", hate ppl of all religions
# ::tokens [".", "Duh", ",", "of", "course", "it", "'s", "\"", "part", "of", "a", "larger", "plot", "\"", ",", "hate", "ppl", "of", "all", "religions"]
# ::lemmas [".", "Duh", ",", "of", "course", "it", "be", "\"", "part", "of", "a", "large", "plot", "\"", ",", "hate", "ppl", "of", "all", "religion"]
(c3-10 / and
       :op1 (c3-0 / have-part-91
                  :ARG1 (c3-7 / plot
                              :ARG1-of (c3-12 / have-degree-91
                                              :ARG2 (c3-1 / large)
                                              :ARG3 (c3-2 / more)))
                  :ARG2 (c3-5 / it)
                  :mod (c3-3 / of-course))
       :op2 (c3-6 / hate-01
                  :ARG1 (c3-11 / person
                               :mod (c3-8 / religion
                                          :mod (c3-4 / all))))
       :mod (c3-9 / duh
                  :mode expressive))

# ::snt Unless you've got evidence of this...shut it. Sick to death of my emotions being manipulated for money.
# ::tokens ["Unless", "you", "'ve", "got", "evidence", "of", "this", "...", "shut", "it", ".", "Sick", "to", "death", "of", "my", "emotions", "being", "manipulated", "for", "money", "."]
# ::lemmas ["unless", "you", "'ve", "get", "evidence", "of", "this", "...", "shut", "it", ".", "sick", "to", "death", "of", "my", "emotion", "be", "manipulate", "for", "money", "."]
(c4-3 / multi-sentence
      :snt1 (c4-11 / shut-01
                   :ARG0 (c4-1 / you)
                   :ARG1 (c4-7 / it)
                   :condition (c4-0 / have-03
                                    :ARG0 c4-1
                                    :ARG1 (c4-5 / evidence-01
                                                :ARG1 (c4-12 / this))
                                    :polarity -)
                   :mode imperative)
      :snt2 (c4-6 / sick-05
                  :ARG0 (c4-8 / manipulate-02
                              :ARG1 (c4-4 / emotion
                                          :poss (c4-10 / i))
                              :purpose (c4-2 / money))
                  :ARG1 c4-10
                  :degree (c4-9 / die-01)))

# ::snt Stick to the facts and stop trying to scare thr australian puplic!
# ::tokens ["Stick", "to", "the", "facts", "and", "stop", "trying", "to", "scare", "thr", "australian", "puplic", "!"]
# ::lemmas ["Stick", "to", "the", "fact", "and", "stop", "try", "to", "scare", "thr", "australian", "puplic", "!"]
(c5-10 / and
       :op1 (c5-7 / stick-01
                  :ARG0 (c5-0 / you
                              :ARG1-of c5-7)
                  :ARG2 (c5-1 / fact)
                  :mode imperative)
       :op2 (c5-3 / stop-01
                  :ARG0 c5-0
                  :ARG1 (c5-8 / try-01
                              :ARG0 c5-0
                              :ARG1 (c5-2 / scare-01
                                          :ARG0 c5-0
                                          :ARG1 (c5-5 / person
                                                      :mod (c5-6 / country
                                                                 :name (c5-4 / name
                                                                             :op1 "Australia"))
                                                      :mod (c5-9 / puplic))))
                  :mode imperative))

# ::snt : The Sydney cafe siege may be part of a larger plot.
# ::tokens [":", "The", "Sydney", "cafe", "siege", "may", "be", "part", "of", "a", "larger", "plot", "."]
# ::lemmas [":", "the", "Sydney", "cafe", "siege", "may", "be", "part", "of", "a", "large", "plot", "."]
(c6-4 / possible-01
      :ARG1 (c6-0 / have-part-91
                  :ARG1 (c6-8 / plot-01
                              :ARG1-of (c6-9 / have-degree-91
                                             :ARG2 (c6-1 / large)
                                             :ARG3 (c6-2 / more)))
                  :ARG2 (c6-7 / standoff
                              :location (c6-6 / cafe
                                              :location (c6-5 / city
                                                              :name (c6-3 / name
                                                                          :op1 "Sydney"))))))

# ::snt please dont scare people by speculating whats gonna happen.. My prayers to all the people taken hostaged..
# ::tokens ["please", "do", "nt", "scare", "people", "by", "speculating", "what", "s", "gon", "na", "happen", "..", "My", "prayers", "to", "all", "the", "people", "taken", "hostaged", ".."]
# ::lemmas ["please", "do", "not", "scare", "people", "by", "speculate", "what", "s", "going", "to", "happen", "..", "my", "prayer", "to", "all", "the", "people", "take", "hostage", ".."]
(c8-2 / multi-sentence
      :snt1 (c8-8 / scare-01
                  :ARG0 (c8-1 / you)
                  :ARG1 (c8-7 / person)
                  :manner (c8-4 / speculate-01
                                :ARG0 c8-1
                                :ARG1 (c8-5 / event))
                  :polarity -
                  :mode imperative
                  :polite +)
      :snt2 (c8-9 / pray-01
                  :ARG0 (c8-6 / i)
                  :ARG2 (c8-3 / person
                              :mod (c8-10 / all)
                              :ARG1-of (c8-0 / hostage-01))))

# ::snt He could pull another Beaconsfield!
# ::tokens ["He", "could", "pull", "another", "Beaconsfield", "!"]
# ::lemmas ["he", "could", "pull", "another", "Beaconsfield", "!"]
(c9-2 / possible-01
      :ARG1 (c9-3 / pull-01
                  :ARG0 (c9-0 / he)
                  :ARG1 (c9-1 / beaconsfield)
                  :mod (c9-4 / another)))

# ::snt : The Sydney cafe siege may be part of a larger plot.
# ::tokens [":", "The", "Sydney", "cafe", "siege", "may", "be", "part", "of", "a", "larger", "plot", "."]
# ::lemmas [":", "the", "Sydney", "cafe", "siege", "may", "be", "part", "of", "a", "large", "plot", "."]
(c10-4 / possible-01
       :ARG1 (c10-0 / have-part-91
                    :ARG1 (c10-8 / plot-01
                                 :ARG1-of (c10-9 / have-degree-91
                                                 :ARG2 (c10-1 / large)
                                                 :ARG3 (c10-2 / more)))
                    :ARG2 (c10-7 / standoff
                                 :location (c10-6 / cafe
                                                  :location (c10-5 / city
                                                                   :name (c10-3 / name
                                                                                :op1 "Sydney"))))))

# ::snt She'll repeat every thing as if we're all stupid.
# ::tokens ["She", "'ll", "repeat", "every", "thing", "as", "if", "we", "'re", "all", "stupid", "."]
# ::lemmas ["she", "'ll", "repeat", "every", "thing", "as", "if", "we", "be", "all", "stupid", "."]
(c11-3 / repeat-01
       :ARG0 (c11-4 / she)
       :ARG1 (c11-5 / thing
                    :mod (c11-2 / every))
       :manner (c11-1 / stupid
                      :domain (c11-0 / we
                                     :mod (c11-6 / all))))

# ::snt But Doyle coming up! Ugh!
# ::tokens ["But", "Doyle", "coming", "up", "!", "Ugh", "!"]
# ::lemmas ["but", "Doyle", "come", "up", "!", "Ugh", "!"]
(c12-0 / multi-sentence
       :snt1 (c12-5 / contrast-01
                    :ARG2 (c12-4 / come-up-13
                                 :ARG1 (c12-3 / person
                                              :name (c12-2 / name
                                                           :op1 "Doyle"))))
       :snt2 (c12-1 / ugh
                    :mode expressive))

# ::snt Yes: : unconfirmed
# ::tokens ["Yes", ":", ":", "unconfirmed"]
# ::lemmas ["yes", ":", ":", "unconfirmed"]
(c13-0 / confirm-01
       :polarity -)

# ::snt Surprised that Kochie's not there giving his expert opinion. Or even offering himself as an intermediary
# ::tokens ["Surprised", "that", "Kochie", "'s", "not", "there", "giving", "his", "expert", "opinion", ".", "Or", "even", "offering", "himself", "as", "an", "intermediary"]
# ::lemmas ["surprised", "that", "Kochie", "'s", "not", "there", "give", "his", "expert", "opinion", ".", "or", "even", "offer", "himself", "as", "an", "intermediary"]
(c14-1 / multi-sentence
       :snt1 (c14-13 / surprise-01
                     :ARG0 (c14-3 / be-located-at-91
                                  :ARG1 (c14-9 / person
                                               :name (c14-8 / name
                                                            :op1 "Kochie"))
                                  :ARG2 (c14-14 / there)
                                  :purpose (c14-10 / give-01
                                                   :ARG0 c14-9
                                                   :ARG1 (c14-12 / thing
                                                                 :ARG1-of (c14-4 / opine-01
                                                                                 :ARG0 c14-9
                                                                                 :ARG1-of (c14-6 / expert-01))))
                                  :polarity -)
                     :ARG1 (c14-7 / i))
       :snt2 (c14-0 / or
                    :op2 (c14-2 / offer-01
                                :ARG0 (c14-15 / person)
                                :ARG1 (c14-11 / intermediary
                                              :domain c14-15)
                                :mod (c14-5 / even))))

# ::snt their entire coverage has been a joke. See the uni professor explain hypotheticals in hostage situations?
# ::tokens ["their", "entire", "coverage", "has", "been", "a", "joke", ".", "See", "the", "uni", "professor", "explain", "hypotheticals", "in", "hostage", "situations", "?"]
# ::lemmas ["their", "entire", "coverage", "have", "be", "a", "joke", ".", "see", "the", "uni", "professor", "explain", "hypothetical", "in", "hostage", "situation", "?"]
(c15-3 / multi-sentence
       :snt1 (c15-0 / joke-01
                    :ARG2 (c15-9 / cover-03
                                 :ARG0 (c15-13 / they)
                                 :mod (c15-6 / entire)))
       :snt2 (c15-11 / see-01
                     :ARG0 (c15-1 / you)
                     :ARG1 (c15-5 / explain-01
                                  :ARG0 (c15-8 / person
                                               :ARG0-of (c15-2 / have-org-role-91
                                                               :ARG1 (c15-4 / university)
                                                               :ARG2 (c15-14 / professor)))
                                  :ARG1 (c15-10 / theory
                                                :topic (c15-7 / situation
                                                              :mod (c15-15 / hostage))))
                     :polarity (c15-12 / amr-unknown)
                     :mode imperative))

# ::snt in sure Obama will tell us just
# ::tokens ["in", "sure", "Obama", "will", "tell", "us", "just"]
# ::lemmas ["in", "sure", "Obama", "will", "tell", "we", "just"]
(c16-4 / sure-02
       :ARG1 (c16-5 / tell-01
                    :ARG0 (c16-3 / person
                                 :name (c16-2 / name
                                              :op1 "Obama"))
                    :ARG2 (c16-1 / we)
                    :mod (c16-0 / just)))

# ::snt your coverage is shameful , stick to the facts ...
# ::tokens ["your", "coverage", "is", "shameful", ",", "stick", "to", "the", "facts", "..."]
# ::lemmas ["your", "coverage", "be", "shameful", ",", "stick", "to", "the", "fact", "..."]
(c17-5 / and
       :op1 (c17-4 / shame-02
                   :ARG0 (c17-3 / cover-03
                                :ARG0 (c17-0 / you)))
       :op2 (c17-2 / stick-01
                   :ARG0 c17-0
                   :ARG2 (c17-1 / fact)
                   :mode imperative))

# ::snt The Flag has arabic writing on it not Islamic writing.
# ::tokens ["The", "Flag", "has", "arabic", "writing", "on", "it", "not", "Islamic", "writing", "."]
# ::lemmas ["the", "Flag", "have", "arabic", "write", "on", "it", "not", "Islamic", "writing", "."]
(c18-8 / contrast-01
       :ARG1 (c18-0 / have-03
                    :ARG0 (c18-2 / flag)
                    :ARG1 (c18-1 / write-01
                                 :ARG0 c18-2
                                 :location c18-2
                                 :mod (c18-3 / ethnic-group
                                             :name (c18-5 / name
                                                          :op1 "Arabic"))))
       :ARG2 (c18-9 / have-03
                    :ARG0 c18-2
                    :ARG1 (c18-4 / write-01
                                 :ARG0 (c18-7 / religious-group
                                              :name (c18-6 / name
                                                           :op1 "Islamic"))
                                 :location c18-2)
                    :polarity -))

# ::snt Yes, a red herring, or a feint...
# ::tokens ["Yes", ",", "a", "red", "herring", ",", "or", "a", "feint", "..."]
# ::lemmas ["yes", ",", "a", "red", "herring", ",", "or", "a", "feint", "..."]
(c19-0 / or
       :op1 (c19-1 / herring
                   :ARG1-of (c19-2 / red-02))
       :op2 (c19-3 / feint))
