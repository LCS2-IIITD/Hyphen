# ::snt I prefer Grimms fairy tales, but the Bible has prety cool stories too
# ::tokens ["I", "prefer", "Grimms", "fairy", "tales", ",", "but", "the", "Bible", "has", "prety", "cool", "stories", "too"]
# ::lemmas ["i", "prefer", "Grimms", "fairy", "tale", ",", "but", "the", "Bible", "have", "prety", "cool", "story", "too"]
(c1-9 / contrast-01
      :ARG1 (c1-7 / prefer-01
                  :ARG0 (c1-4 / i)
                  :ARG1 (c1-12 / tale
                               :mod (c1-1 / fairy)
                               :poss (c1-13 / person
                                            :name (c1-5 / name
                                                        :op1 "Grimms"))))
      :ARG2 (c1-0 / have-03
                  :ARG0 (c1-3 / book
                              :name (c1-6 / name
                                          :op1 "Bible"))
                  :ARG1 (c1-11 / story
                               :ARG1-of (c1-8 / cool-04
                                              :mod (c1-2 / prety)))
                  :mod (c1-10 / too)))

# ::snt Please hurry.
# ::tokens ["Please", "hurry", "."]
# ::lemmas ["please", "hurry", "."]
(c2-0 / hurry-01
      :ARG1 (c2-1 / you)
      :mode imperative
      :polite +)

# ::snt nobody will be executed in France... This is not usa.
# ::tokens ["nobody", "will", "be", "executed", "in", "France", "...", "This", "is", "not", "usa", "."]
# ::lemmas ["nobody", "will", "be", "execute", "in", "France", "...", "this", "be", "not", "usa", "."]
(c3-1 / multi-sentence
      :snt1 (c3-2 / execute-01
                  :ARG1 (c3-3 / nobody)
                  :location (c3-5 / country
                                  :name (c3-4 / name
                                              :op1 "France")))
      :snt2 (c3-0 / have-mod-91
                  :ARG1 (c3-6 / this)
                  :ARG2 c3-5
                  :name c3-4
                  :polarity -
                  :op1 "US"))

# ::snt they never said that but they ready to slams they shit white French ass,for be racists ,pigs,and monopolies web,phone, channel all,
# ::tokens ["they", "never", "said", "that", "but", "they", "ready", "to", "slams", "they", "shit", "white", "French", "ass", ",", "for", "be", "racists", ",", "pigs", ",", "and", "monopolies", "web", ",", "phone", ",", "channel", "all", ","]
# ::lemmas ["they", "never", "say", "that", "but", "they", "ready", "to", "slam", "they", "shit", "white", "French", "ass", ",", "for", "be", "racist", ",", "pig", ",", "and", "monopoly", "web", ",", "phone", ",", "channel", "all", ","]
(c4-17 / contrast-01
       :ARG1 (c4-5 / say-01
                   :ARG0 (c4-20 / they)
                   :ARG1 (c4-18 / that)
                   :time (c4-8 / ever)
                   :polarity -)
       :ARG2 (c4-12 / ready-01
                    :ARG1 c4-20
                    :ARG2 (c4-9 / slam-02
                                :ARG0 c4-20
                                :ARG1 (c4-7 / ass
                                            :mod (c4-4 / country
                                                       :name (c4-10 / name
                                                                    :op1 "France"))
                                            :ARG1-of (c4-13 / white-02))
                                :ARG1-of (c4-15 / cause-01
                                                :ARG0 (c4-14 / and
                                                             :op1 (c4-1 / racist)
                                                             :op2 (c4-3 / pig)
                                                             :op3 (c4-0 / monopolize-01
                                                                        :ARG0 c4-20
                                                                        :ARG1 (c4-11 / and
                                                                                     :op1 (c4-2 / web)
                                                                                     :op2 (c4-6 / phone)
                                                                                     :op3 (c4-16 / channel)
                                                                                     :mod (c4-19 / all))))))))

# ::snt i dnt belive this if they want to become martyrs they would have stayed their and not hide their faces.. there is a conspiracy
# ::tokens ["i", "dnt", "belive", "this", "if", "they", "want", "to", "become", "martyrs", "they", "would", "have", "stayed", "their", "and", "not", "hide", "their", "faces", "..", "there", "is", "a", "conspiracy"]
# ::lemmas ["i", "dnt", "belive", "this", "if", "they", "want", "to", "become", "martyr", "they", "would", "have", "stay", "their", "and", "not", "hide", "their", "face", "..", "there", "be", "a", "conspiracy"]
(c5-3 / multi-sentence
      :snt1 (c5-4 / believe-01
                  :ARG0 (c5-5 / i)
                  :ARG1 (c5-12 / this)
                  :condition (c5-1 / want-01
                                   :ARG0 (c5-10 / they)
                                   :ARG1 (c5-8 / become-01
                                               :ARG1 c5-10
                                               :ARG2 (c5-7 / martyr)))
                  :polarity -)
      :snt2 (c5-13 / and
                   :op1 (c5-11 / stay-01
                               :ARG1 (c5-6 / they
                                           :part (c5-2 / face)))
                   :op2 (c5-0 / hide-01
                              :ARG0 c5-6
                              :ARG1 c5-2
                              :polarity -))
      :snt3 (c5-9 / conspiracy))

# ::snt not saying if it's good or bad, this is the law.
# ::tokens ["not", "saying", "if", "it", "'s", "good", "or", "bad", ",", "this", "is", "the", "law", "."]
# ::lemmas ["not", "say", "if", "it", "be", "good", "or", "bad", ",", "this", "be", "the", "law", "."]
(c6-5 / say-01
      :ARG1 (c6-0 / law
                  :domain (c6-6 / this)
                  :condition (c6-2 / or
                                   :op1 (c6-4 / good-02
                                              :ARG1 (c6-3 / it))
                                   :op2 (c6-1 / bad-07
                                              :ARG1 c6-3)))
      :polarity -)

# ::snt Then they need to be taken alive!!!!
# ::tokens ["Then", "they", "need", "to", "be", "taken", "alive", "!", "!", "!", "!"]
# ::lemmas ["then", "they", "need", "to", "be", "take", "alive", "!", "!", "!", "!"]
(c7-1 / obligate-01
      :ARG2 (c7-4 / take-01
                  :ARG1 (c7-3 / they)
                  :ARG3 (c7-0 / live-01
                              :ARG0 c7-3))
      :time (c7-2 / then))

# ::snt get them, question them, trial them for some years, then execute them
# ::tokens ["get", "them", ",", "question", "them", ",", "trial", "them", "for", "some", "years", ",", "then", "execute", "them"]
# ::lemmas ["get", "they", ",", "question", "they", ",", "trial", "they", "for", "some", "years", ",", "then", "execute", "they"]
(c8-9 / and
      :op1 (c8-5 / get-05
                 :ARG0 (c8-0 / you)
                 :ARG1 (c8-8 / they)
                 :mode imperative)
      :op2 (c8-2 / question-01
                 :ARG0 c8-0
                 :ARG1 c8-8
                 :mode imperative)
      :op3 (c8-6 / try-02
                 :ARG0 c8-0
                 :ARG1 c8-8
                 :duration (c8-7 / some
                                 :op1 (c8-4 / temporal-quantity
                                            :unit (c8-10 / year)
                                            :quant 1))
                 :mode imperative)
      :op4 (c8-1 / execute-01
                 :ARG0 c8-0
                 :ARG1 c8-8
                 :time (c8-3 / then)
                 :mode imperative))

# ::snt of course they do, they are deluded.
# ::tokens ["of", "course", "they", "do", ",", "they", "are", "deluded", "."]
# ::lemmas ["of", "course", "they", "do", ",", "they", "be", "delude", "."]
(c9-4 / and
      :op1 (c9-2 / do-02
                 :ARG0 (c9-3 / they)
                 :mod (c9-1 / of-course))
      :op2 (c9-0 / delude-01
                 :ARG1 c9-3))

# ::snt : A French police officer said that the suspected Charlie Hebdo gunmen said they seek to die as martyrs
# ::tokens [":", "A", "French", "police", "officer", "said", "that", "the", "suspected", "Charlie", "Hebdo", "gunmen", "said", "they", "seek", "to", "die", "as", "martyrs"]
# ::lemmas [":", "a", "French", "police", "officer", "say", "that", "the", "suspect", "Charlie", "Hebdo", "gunman", "say", "they", "seek", "to", "die", "as", "martyr"]
(c10-13 / say-01
        :ARG0 (c10-8 / person
                     :ARG0-of (c10-0 / have-org-role-91
                                     :ARG1 (c10-14 / police
                                                   :mod (c10-10 / country
                                                                :name (c10-6 / name
                                                                             :op1 "France")))
                                     :ARG2 (c10-3 / officer)))
        :ARG1 (c10-5 / say-01
                     :ARG0 (c10-11 / gunman
                                   :ARG2-of (c10-1 / suspect-01)
                                   :mod (c10-2 / magazine
                                               :name (c10-7 / name
                                                            :op1 "Charlie"
                                                            :op2 "Be Hebdo")))
                     :ARG1 (c10-4 / seek-01
                                  :ARG0 c10-11
                                  :ARG1 (c10-9 / die-01
                                               :ARG1 c10-11
                                               :manner (c10-12 / martyr-01
                                                               :ARG1 c10-11)))))

# ::snt the only "guarantee" of not going to hell in Islam is to die a martyr.
# ::tokens ["the", "only", "\"", "guarantee", "\"", "of", "not", "going", "to", "hell", "in", "Islam", "is", "to", "die", "a", "martyr", "."]
# ::lemmas ["the", "only", "\"", "guarantee", "\"", "of", "not", "go", "to", "hell", "in", "Islam", "be", "to", "die", "a", "martyr", "."]
(c11-7 / guarantee-01
       :ARG1 (c11-6 / go-02
                    :ARG4 (c11-0 / hell)
                    :location (c11-5 / religious-group
                                     :name (c11-3 / name
                                                  :op1 "Islam"))
                    :polarity -)
       :ARG2 (c11-8 / die-01
                    :ARG1 (c11-4 / person
                                 :ARG1-of (c11-1 / martyr-01)))
       :mod (c11-2 / only))

# ::snt already innocent people has been executed in France and who knows how many more until this is over, maybe revising law
# ::tokens ["already", "innocent", "people", "has", "been", "executed", "in", "France", "and", "who", "knows", "how", "many", "more", "until", "this", "is", "over", ",", "maybe", "revising", "law"]
# ::lemmas ["already", "innocent", "people", "have", "be", "execute", "in", "France", "and", "who", "know", "how", "many", "more", "until", "this", "be", "over", ",", "maybe", "revise", "law"]
(c12-17 / and
        :op1 (c12-5 / execute-01
                    :ARG1 (c12-11 / person
                                  :ARG1-of (c12-7 / innocent-01))
                    :location (c12-13 / country
                                      :name (c12-9 / name
                                                   :op1 "France"))
                    :time (c12-12 / ready))
        :op2 (c12-15 / know-01
                     :ARG0 (c12-6 / amr-unknown)
                     :ARG1 (c12-10 / number
                                   :quant-of (c12-16 / person
                                                     :mod (c12-1 / more)))
                     :time (c12-2 / until
                                  :op1 (c12-4 / over-01
                                              :ARG1 (c12-14 / this))))
        :op3 (c12-3 / possible-01
                    :ARG1 (c12-8 / revise-01
                                 :ARG1 (c12-0 / law))))

# ::snt what a nonsensical belief these Wahhabis have created Buddha was the greatest teacher wish people cud follow his path
# ::tokens ["what", "a", "nonsensical", "belief", "these", "Wahhabis", "have", "created", "Buddha", "was", "the", "greatest", "teacher", "wish", "people", "cud", "follow", "his", "path"]
# ::lemmas ["what", "a", "nonsensical", "belief", "these", "Wahhabis", "have", "create", "Buddha", "be", "the", "great", "teacher", "wish", "people", "cud", "follow", "his", "path"]
(c13-1 / wish-01
       :ARG0 (c13-5 / believe-01
                    :ARG1 (c13-10 / create-01
                                  :ARG0 (c13-8 / person
                                               :mod (c13-9 / religious-group
                                                           :name (c13-6 / name
                                                                        :op1 "Wahhabi"))
                                               :mod (c13-16 / this))
                                  :ARG1 (c13-17 / person
                                                :name (c13-7 / name
                                                             :op1 "Buddha")
                                                :ARG0-of (c13-13 / teach-01)
                                                :ARG1-of (c13-0 / have-degree-91
                                                                :ARG2 (c13-11 / great)
                                                                :ARG3 (c13-3 / most))))
                    :mod (c13-12 / nonsensical
                                 :degree (c13-14 / so)))
       :ARG1 (c13-2 / follow-02
                    :ARG0 (c13-4 / person)
                    :ARG1 (c13-15 / path
                                  :poss c13-17)
                    :polarity -))

# ::snt virgins are waiting!
# ::tokens ["virgins", "are", "waiting", "!"]
# ::lemmas ["virgin", "be", "wait", "!"]
(c14-0 / wait-01
       :ARG1 (c14-1 / virgin))

# ::snt I hope we will put them in jail for life as murderers.
# ::tokens ["I", "hope", "we", "will", "put", "them", "in", "jail", "for", "life", "as", "murderers", "."]
# ::lemmas ["i", "hope", "we", "will", "put", "they", "in", "jail", "for", "life", "as", "murderer", "."]
(c15-0 / hope-01
       :ARG0 (c15-5 / i)
       :ARG1 (c15-6 / put-01
                    :ARG0 (c15-1 / we)
                    :ARG1 (c15-7 / they)
                    :ARG2 (c15-2 / jail-01
                                 :ARG1 c15-7
                                 :ARG2 (c15-3 / life
                                              :prep-as (c15-8 / person
                                                              :ARG0-of (c15-4 / murder-01))))))

# ::snt and put in a cell with the Torah and bible and told that those mythical stories came first
# ::tokens ["and", "put", "in", "a", "cell", "with", "the", "Torah", "and", "bible", "and", "told", "that", "those", "mythical", "stories", "came", "first"]
# ::lemmas ["and", "put", "in", "a", "cell", "with", "the", "Torah", "and", "bible", "and", "tell", "that", "those", "mythical", "story", "come", "first"]
(c16-14 / and
        :op2 (c16-3 / and
                    :op1 (c16-6 / put-01
                                :ARG1 (c16-8 / cell
                                             :prep-with (c16-5 / and
                                                               :op1 (c16-1 / book
                                                                           :name (c16-4 / name
                                                                                        :op1 " Torah"))
                                                               :op2 (c16-9 / book
                                                                           :name (c16-7 / name
                                                                                        :op1 "Bible")))))
                    :op2 (c16-13 / tell-01
                                 :ARG1 (c16-10 / come-04
                                               :ARG1 (c16-12 / story
                                                             :mod (c16-0 / mythic)
                                                             :mod (c16-11 / that))
                                               :ARG2 (c16-2 / ordinal-entity
                                                            :value 1)))))

# ::snt sounds like one of those ISIS groups
# ::tokens ["sounds", "like", "one", "of", "those", "ISIS", "groups"]
# ::lemmas ["sound", "like", "one", "of", "those", "ISIS", "group"]
(c17-6 / sound-01
       :ARG1 (c17-3 / resemble-01
                    :ARG2 (c17-5 / group
                                 :ARG1-of (c17-0 / include-91
                                                 :ARG2 (c17-4 / group
                                                              :mod (c17-7 / that)
                                                              :mod (c17-1 / religious-group
                                                                          :name (c17-2 / name
                                                                                       :op1 "Islam")))))))

# ::snt Well ,be my guest,do so..
# ::tokens ["Well", ",", "be", "my", "guest", ",", "do", "so", ".."]
# ::lemmas ["well", ",", "be", "my", "guest", ",", "do", "so", ".."]
(c18-0 / have-condition-91
       :ARG1 (c18-4 / do-02
                    :ARG0 (c18-1 / you)
                    :ARG1 (c18-6 / so)
                    :mode imperative)
       :ARG2 (c18-5 / guest
                    :poss (c18-3 / i))
       :mod (c18-2 / well))

# ::snt Make sure they suffer in jail first!
# ::tokens ["Make", "sure", "they", "suffer", "in", "jail", "first", "!"]
# ::lemmas ["make", "sure", "they", "suffer", "in", "jail", "first", "!"]
(c19-3 / ensure-01
       :ARG0 (c19-1 / you)
       :ARG1 (c19-4 / suffer-01
                    :ARG0 (c19-5 / they)
                    :location (c19-0 / jail))
       :ord (c19-2 / ordinal-entity
                   :value 1)
       :mode imperative)

# ::snt where is the problem?
# ::tokens ["where", "is", "the", "problem", "?"]
# ::lemmas ["where", "be", "the", "problem", "?"]
(c20-0 / problem
       :location (c20-1 / amr-unknown))

# ::snt Kouachi brothers negotiating book and movie rights.
# ::tokens ["Kouachi", "brothers", "negotiating", "book", "and", "movie", "rights", "."]
# ::lemmas ["Kouachi", "brother", "negotiate", "book", "and", "movie", "right", "."]
(c21-3 / negotiate-01
       :ARG0 (c21-5 / person
                    :ARG0-of (c21-0 / have-rel-role-91
                                    :ARG1 (c21-8 / person
                                                 :name (c21-4 / name
                                                              :op1 "Kouachi"))
                                    :ARG2 (c21-2 / brother)))
       :ARG2 (c21-6 / right-05
                    :ARG1 (c21-9 / and
                                 :op1 (c21-7 / book)
                                 :op2 (c21-1 / movie))))

# ::snt DON'T KILL THEM!
# ::tokens ["DON'T", "KILL", "THEM", "!"]
# ::lemmas ["don't", "KILL", "they", "!"]
(c22-2 / kill-01
       :ARG0 (c22-1 / you)
       :ARG1 (c22-0 / they)
       :polarity -
       :mode imperative)

# ::snt Yet to go in (supposedly) masked and flee?!! Hmm
# ::tokens ["Yet", "to", "go", "in", "(", "supposedly", ")", "masked", "and", "flee", "?", "!", "!", "Hmm"]
# ::lemmas ["yet", "to", "go", "in", "(", "supposedly", ")", "mask", "and", "flee", "?", "!", "!", "hmm"]
(c23-0 / have-concession-91
       :polarity (c23-7 / amr-unknown)
       :ARG1 (c23-4 / and
                    :op1 (c23-5 / go-02
                                :ARG4 (c23-3 / mask-01
                                             :ARG1-of (c23-6 / suppose-01)))
                    :op2 (c23-2 / flee-05
                                :ARG1-of c23-6))
       :mod (c23-1 / yet))
