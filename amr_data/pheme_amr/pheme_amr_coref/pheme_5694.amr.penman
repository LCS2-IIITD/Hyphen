# ::snt I know how u feel
# ::tokens ["I", "know", "how", "u", "feel"]
# ::lemmas ["i", "know", "how", "u", "feel"]
(c1-3 / know-01
      :ARG0 (c1-2 / i)
      :ARG1 (c1-4 / thing
                  :ARG1-of (c1-1 / feel-01
                                 :ARG0 (c1-0 / you))))

# ::snt Stay safe please xx ily
# ::tokens ["Stay", "safe", "please", "xx", "ily"]
# ::lemmas ["stay", "safe", "please", "xx", "ily"]
(c2-0 / stay-01
      :ARG1 (c2-1 / you)
      :ARG3 (c2-2 / safe-01
                  :ARG1 c2-1)
      :mode imperative
      :polite +)

# ::snt will do
# ::tokens ["will", "do"]
# ::lemmas ["will", "do"]
(c3-0 / do-02)

# ::snt I can't look away from the tv this is horrible
# ::tokens ["I", "ca", "n't", "look", "away", "from", "the", "tv", "this", "is", "horrible"]
# ::lemmas ["i", "can", "not", "look", "away", "from", "the", "tv", "this", "be", "horrible"]
(c4-3 / possible-01
      :ARG1 (c4-1 / look-01
                  :ARG0 (c4-2 / i)
                  :ARG1 (c4-6 / television)
                  :direction (c4-7 / away))
      :ARG1-of (c4-4 / cause-01
                     :ARG0 (c4-0 / horrible
                                 :domain (c4-5 / this)))
      :polarity -)

# ::snt I'm the same distance, no joke, and it's terrifying
# ::tokens ["I", "'m", "the", "same", "distance", ",", "no", "joke", ",", "and", "it", "'s", "terrifying"]
# ::lemmas ["i", "be", "the", "same", "distance", ",", "no", "joke", ",", "and", "it", "be", "terrify"]
(c5-5 / and
      :op1 (c5-2 / distance-01
                 :ARG1 (c5-1 / i)
                 :ARG1-of (c5-3 / same-01))
      :op2 (c5-0 / joke-01
                 :polarity -)
      :op3 (c5-4 / terrify-01
                 :ARG0 c5-2))

# ::snt mate im legit minutes too wtf stay safe xxxx
# ::tokens ["mate", "i", "m", "legit", "minutes", "too", "wtf", "stay", "safe", "xxxx"]
# ::lemmas ["mate", "i", "m", "legit", "minute", "too", "wtf", "stay", "safe", "xxxx"]
(c6-2 / multi-sentence
      :snt1 (c6-11 / say-01
                   :ARG0 (c6-7 / i)
                   :ARG1 (c6-8 / multiple
                               :op1 (c6-12 / temporal-quantity
                                           :unit (c6-1 / minute)
                                           :quant 1)
                               :ARG1-of (c6-3 / legitimate-02)
                               :mod (c6-10 / too))
                   :ARG2 (c6-9 / mate))
      :snt2 (c6-6 / stay-01
                  :ARG1 (c6-0 / you)
                  :ARG3 (c6-4 / safe-01
                              :ARG1 c6-0)
                  :mod (c6-5 / fuck
                             :mode expressive)
                  :mode imperative))

# ::snt will do. stay safe, alright? xx
# ::tokens ["will", "do", ".", "stay", "safe", ",", "alright", "?", "xx"]
# ::lemmas ["will", "do", ".", "stay", "safe", ",", "alright", "?", "xx"]
(c7-1 / multi-sentence
      :snt1 (c7-4 / do-02)
      :snt2 (c7-5 / stay-01
                  :ARG1 (c7-0 / you)
                  :ARG3 (c7-2 / safe-01
                              :ARG1 c7-0)
                  :mod (c7-6 / all-right
                             :polarity (c7-3 / amr-unknown))))

# ::snt I have to go to sleep but I can't... I'm so scared for you guys in Sydney. Stay safe...
# ::tokens ["I", "have", "to", "go", "to", "sleep", "but", "I", "ca", "n't", "...", "I", "'m", "so", "scared", "for", "you", "guys", "in", "Sydney", ".", "Stay", "safe", "..."]
# ::lemmas ["i", "have", "to", "go", "to", "sleep", "but", "i", "can", "not", "...", "i", "be", "so", "scared", "for", "you", "guy", "in", "Sydney", ".", "stay", "safe", "..."]
(c8-3 / multi-sentence
      :snt1 (c8-12 / contrast-01
                   :ARG1 (c8-4 / obligate-01
                               :ARG1 (c8-7 / i)
                               :ARG2 (c8-13 / go-02
                                            :ARG0 c8-7
                                            :ARG1 (c8-16 / sleep-01
                                                         :ARG0 c8-7)))
                   :ARG2 (c8-10 / possible-01
                                :ARG1 (c8-11 / go-02
                                             :ARG0 c8-7
                                             :ARG1 c8-16)
                                :polarity -))
      :snt2 (c8-6 / scare-01
                  :ARG0 (c8-1 / you
                              :mod (c8-8 / guy)
                              :location (c8-14 / city
                                               :name (c8-9 / name
                                                           :op1 "Sydney")))
                  :ARG1 (c8-15 / i)
                  :degree (c8-2 / so))
      :snt3 (c8-5 / stay-01
                  :ARG1 c8-1
                  :mode imperative)
      :ARG3 (c8-0 / safe-01
                  :ARG1 c8-1))

# ::snt what is happening?!!
# ::tokens ["what", "is", "happening", "?", "!", "!"]
# ::lemmas ["what", "be", "happen", "?", "!", "!"]
(c9-0 / event
      :polarity (c9-1 / amr-unknown))
