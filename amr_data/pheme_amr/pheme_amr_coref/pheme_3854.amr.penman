# ::snt They fear for their lives... plus it takes away from their time bashing Christians...
# ::tokens ["They", "fear", "for", "their", "lives", "...", "plus", "it", "takes", "away", "from", "their", "time", "bashing", "Christians", "..."]
# ::lemmas ["they", "fear", "for", "their", "life", "...", "plus", "it", "take", "away", "from", "their", "time", "bash", "Christians", "..."]
(c1-9 / and
      :op1 (c1-0 / fear-01
                 :ARG0 (c1-8 / they)
                 :ARG2 (c1-1 / life
                             :poss c1-8))
      :op2 (c1-7 / take-away-05
                 :ARG0 (c1-2 / bash-01
                             :ARG0 c1-8
                             :ARG1 (c1-5 / person
                                         :mod (c1-6 / religious-group
                                                    :name (c1-3 / name
                                                                :op1 "Christian"))))
                 :ARG1 (c1-4 / time
                             :poss c1-8)))

# ::snt smh
# ::tokens ["smh"]
# ::lemmas ["smh"]
(c3-0 / smh
      :mode expressive)

# ::snt Or you're acknowledging their right to speak and live, while acknowledging that some of their speech was racist.
# ::tokens ["Or", "you", "'re", "acknowledging", "their", "right", "to", "speak", "and", "live", ",", "while", "acknowledging", "that", "some", "of", "their", "speech", "was", "racist", "."]
# ::lemmas ["or", "you", "be", "acknowledge", "their", "right", "to", "speak", "and", "live", ",", "while", "acknowledge", "that", "some", "of", "their", "speech", "be", "racist", "."]
(c4-3 / or
      :op2 (c4-9 / contrast-01
                 :ARG1 (c4-12 / acknowledge-01
                              :ARG0 (c4-0 / you)
                              :ARG1 (c4-8 / right-05
                                          :ARG1 (c4-11 / they)
                                          :ARG2 (c4-5 / and
                                                      :op1 (c4-10 / speak-01
                                                                  :ARG0 c4-11)
                                                      :op2 (c4-1 / live-01
                                                                 :ARG0 c4-11))))
                 :ARG2 (c4-7 / acknowledge-01
                             :ARG0 c4-0
                             :ARG1 (c4-6 / racist
                                         :domain (c4-4 / speak-01
                                                       :ARG0 c4-11
                                                       :quant (c4-2 / some))))))

# ::snt agreed, cartoonist Rayma understood well this risk
# ::tokens ["agreed", ",", "cartoonist", "Rayma", "understood", "well", "this", "risk"]
# ::lemmas ["agree", ",", "cartoonist", "Rayma", "understand", "well", "this", "risk"]
(c5-7 / and
      :op1 (c5-2 / agree-01)
      :op2 (c5-1 / understand-01
                 :ARG0 (c5-5 / cartoonist
                             :name (c5-3 / name
                                         :op1 "Rayma"))
                 :ARG1 (c5-4 / risk-01
                             :mod (c5-6 / this))
                 :ARG1-of (c5-0 / well-09)))

# ::snt Media is usually justifying mass murder like repeating lies abut WMDs in Iraq and so on. Thats their job.
# ::tokens ["Media", "is", "usually", "justifying", "mass", "murder", "like", "repeating", "lies", "abut", "WMDs", "in", "Iraq", "and", "so", "on", ".", "That", "s", "their", "job", "."]
# ::lemmas ["medium", "be", "usually", "justify", "mass", "murder", "like", "repeat", "lie", "abut", "wmd", "in", "Iraq", "and", "so", "on", ".", "that", "s", "their", "job", "."]
(c6-3 / multi-sentence
      :snt1 (c6-0 / justify-01
                  :ARG0 (c6-9 / media)
                  :ARG1 (c6-2 / murder-01
                              :mod (c6-8 / mass))
                  :mod (c6-4 / usual)
                  :example (c6-10 / repeat-01
                                  :ARG0 c6-9
                                  :ARG1 (c6-5 / lie-08
                                              :ARG0 c6-9
                                              :ARG3 (c6-1 / weapon
                                                          :ARG2-of (c6-11 / destroy-01
                                                                          :degree c6-8))
                                              :location (c6-12 / country
                                                               :name (c6-7 / name
                                                                           :op1 "Iraq"))))
                  :example (c6-6 / et-cetera))
      :snt2 (c6-15 / job
                   :poss (c6-14 / they)
                   :domain (c6-13 / that)))

# ::snt Extortion works.
# ::tokens ["Extortion", "works", "."]
# ::lemmas ["extortion", "work", "."]
(c7-0 / work-09
      :ARG1 (c7-1 / extract-01))

# ::snt Good stuff on that here.
# ::tokens ["Good", "stuff", "on", "that", "here", "."]
# ::lemmas ["good", "stuff", "on", "that", "here", "."]
(c8-0 / stuff
      :ARG1-of (c8-3 / good-02)
      :topic (c8-2 / that)
      :location (c8-1 / here))

# ::snt every newspaper on Planet Earth should print their cartoons tomorrow. Full-page. Color. Suitable for framing.
# ::tokens ["every", "newspaper", "on", "Planet", "Earth", "should", "print", "their", "cartoons", "tomorrow", ".", "Full", "-", "page", ".", "Color", ".", "Suitable", "for", "framing", "."]
# ::lemmas ["every", "newspaper", "on", "Planet", "Earth", "should", "print", "their", "cartoon", "tomorrow", ".", "full", "-", "page", ".", "color", ".", "suitable", "for", "frame", "."]
(c9-1 / multi-sentence
      :snt1 (c9-8 / recommend-01
                  :ARG1 (c9-7 / print-01
                              :ARG0 (c9-5 / newspaper
                                          :mod (c9-3 / every)
                                          :location (c9-13 / planet
                                                           :name (c9-6 / name
                                                                       :op1 "Earth")))
                              :ARG1 (c9-9 / cartoon
                                          :poss c9-5)
                              :time (c9-12 / tomorrow)))
      :snt2 (c9-2 / page
                  :ARG1-of (c9-0 / full-09))
      :snt3 (c9-10 / color)
      :snt4 (c9-11 / possible-01
                   :ARG1 (c9-4 / frame-06)))

# ::snt Ironically, the is censoring cartoons right now.
# ::tokens ["Ironically", ",", "the", "is", "censoring", "cartoons", "right", "now", "."]
# ::lemmas ["ironically", ",", "the", "be", "censoring", "cartoon", "right", "now", "."]
(c10-5 / censure-01
       :ARG0 (c10-3 / political-movement
                    :name (c10-1 / name
                                 :op1 "Republican"
                                 :op2 "Party"))
       :ARG1 (c10-4 / cartoon)
       :time (c10-2 / now
                    :mod (c10-6 / right))
       :mod (c10-0 / ironic))

# ::snt it's a really simple relationship. Give the dane his gold and you'll never be rid of the dane.
# ::tokens ["it", "'s", "a", "really", "simple", "relationship", ".", "Give", "the", "dane", "his", "gold", "and", "you", "'ll", "never", "be", "rid", "of", "the", "dane", "."]
# ::lemmas ["it", "be", "a", "really", "simple", "relationship", ".", "give", "the", "dane", "his", "gold", "and", "you", "'ll", "never", "be", "rid", "of", "the", "dane", "."]
(c11-1 / multi-sentence
       :snt1 (c11-8 / simple-02
                    :ARG1 (c11-6 / relation-03
                                 :ARG1 (c11-4 / it))
                    :degree (c11-5 / really))
       :snt2 (c11-3 / rid-01
                    :ARG0 (c11-0 / you)
                    :ARG1 (c11-7 / dane)
                    :time (c11-2 / ever)
                    :polarity -))

# ::snt . Dear Josh, read to keep up with already ongoing apologia for terrorists:
# ::tokens [".", "Dear", "Josh", ",", "read", "to", "keep", "up", "with", "already", "ongoing", "apologia", "for", "terrorists", ":"]
# ::lemmas [".", "Dear", "Josh", ",", "read", "to", "keep", "up", "with", "already", "ongoing", "apologia", "for", "terrorist", ":"]
(c12-5 / say-01
       :ARG1 (c12-3 / read-01
                    :ARG0 (c12-2 / person
                                 :name (c12-1 / name
                                              :op1 "Dear"
                                              :op2 "Josh"))
                    :purpose (c12-7 / keep-up-05
                                    :ARG0 c12-2
                                    :ARG1 (c12-8 / apologize-01
                                                 :ARG2 (c12-6 / terrorist)
                                                 :ARG1-of (c12-4 / go-on-15
                                                                 :time (c12-0 / already))))
                    :mode imperative)
       :ARG2 c12-2)
