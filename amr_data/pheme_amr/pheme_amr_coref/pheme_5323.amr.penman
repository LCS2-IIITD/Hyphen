# ::snt Show me any evidence of who they are?
# ::tokens ["Show", "me", "any", "evidence", "of", "who", "they", "are", "?"]
# ::lemmas ["show", "i", "any", "evidence", "of", "who", "they", "be", "?"]
(c1-5 / show-01
      :polarity (c1-7 / amr-unknown)
      :ARG0 (c1-0 / you)
      :ARG1 (c1-1 / evidence-01
                  :ARG1 (c1-4 / person
                              :domain (c1-6 / they))
                  :mod (c1-2 / any))
      :ARG2 (c1-3 / i))

# ::snt : "this is not a religion"
# ::tokens [":", "\"", "this", "is", "not", "a", "religion", "\""]
# ::lemmas [":", "\"", "this", "be", "not", "a", "religion", "\""]
(c2-0 / religion
      :domain (c2-1 / this)
      :polarity -)

# ::snt You deserve coffee.
# ::tokens ["You", "deserve", "coffee", "."]
# ::lemmas ["you", "deserve", "coffee", "."]
(c3-1 / deserve-01
      :ARG0 (c3-0 / you)
      :ARG1 (c3-2 / coffee))

# ::snt Islamic prophet shld have been respected. Charlie abdomen's act left journos dead not islam. Mslm reaction
# ::tokens ["Islamic", "prophet", "shld", "have", "been", "respected", ".", "Charlie", "abdomen", "'s", "act", "left", "journos", "dead", "not", "islam", ".", "Mslm", "reaction"]
# ::lemmas ["Islamic", "prophet", "shld", "have", "be", "respect", ".", "Charlie", "abdomen", "'s", "act", "leave", "journo", "dead", "not", "islam", ".", "mslm", "reaction"]
(c4-0 / multi-sentence
      :snt1 (c4-13 / respect-01
                   :ARG1 (c4-4 / person
                               :name (c4-12 / name
                                            :op1 "Shld")
                               :mod (c4-6 / prophet
                                          :mod (c4-1 / religious-group
                                                     :name (c4-16 / name
                                                                  :op1 "Islam")))))
      :snt2 (c4-17 / contrast-01
                   :ARG1 (c4-8 / leave-13
                               :ARG0 (c4-7 / act-02
                                           :ARG0 (c4-9 / person
                                                       :name (c4-2 / name
                                                                   :op1 "Charlie"
                                                                   :op2 "Abraham")))
                               :ARG1 (c4-5 / die-01
                                           :ARG1 (c4-14 / person
                                                        :ARG0-of (c4-11 / report-01))))
                   :ARG2 (c4-18 / leave-13
                                :ARG0 c4-7
                                :ARG1 c4-1
                                :name (c4-3 / name
                                            :op1 "Islam")
                                :polarity -))
      :snt3 (c4-15 / react-01
                   :ARG0 (c4-10 / person
                                :name (c4-19 / name
                                             :op1 "Mslm"))))

# ::snt Any wanting to hide their motives will make you assume "Occam's Razor"
# ::tokens ["Any", "wanting", "to", "hide", "their", "motives", "will", "make", "you", "assume", "\"", "Occam", "'s", "Razor", "\""]
# ::lemmas ["any", "want", "to", "hide", "their", "motive", "will", "make", "you", "assume", "\"", "Occam", "'s", "Razor", "\""]
(c5-3 / make-02
      :ARG0 (c5-1 / want-01
                  :ARG0 (c5-2 / you)
                  :ARG1 (c5-0 / hide-01
                              :ARG0 c5-2
                              :ARG1 (c5-6 / motive
                                          :poss (c5-8 / they)))
                  :mod (c5-9 / any))
      :ARG1 (c5-4 / assume-02
                  :ARG0 c5-2
                  :ARG1 (c5-7 / thing
                              :name (c5-5 / name
                                          :op1 "Occam's"
                                          :op2 "Razor"))))

# ::snt All well trained &amp; professional. Israel did just declare war on France re Gaza.
# ::tokens ["All", "well", "trained", "&", "amp", ";", "professional", ".", "Israel", "did", "just", "declare", "war", "on", "France", "re", "Gaza", "."]
# ::lemmas ["all", "well", "train", "&", "amp", ";", "professional", ".", "Israel", "do", "just", "declare", "war", "on", "France", "re", "Gaza", "."]
(c6-2 / multi-sentence
      :snt1 (c6-14 / and
                   :op1 (c6-13 / train-01
                               :ARG2 (c6-3 / all)
                               :ARG1-of (c6-1 / well-09))
                   :op2 (c6-7 / professional))
      :snt2 (c6-8 / declare-02
                  :ARG0 (c6-9 / country
                              :name (c6-5 / name
                                          :op1 "Israel"))
                  :ARG1 (c6-4 / war-01
                              :ARG0 c6-9
                              :ARG1 (c6-10 / country
                                           :name (c6-6 / name
                                                       :op1 "France"))
                              :ARG2 (c6-12 / country-region
                                           :name (c6-11 / name
                                                        :op1 "Gaza")))
                  :mod (c6-0 / just)))

# ::snt I'll take my 'cream' on the side.
# ::tokens ["I", "'ll", "take", "my", "'", "cream", "'", "on", "the", "side", "."]
# ::lemmas ["i", "'ll", "take", "my", "'", "cream", "'", "on", "the", "side", "."]
(c7-1 / take-01
      :ARG0 (c7-3 / i)
      :ARG1 (c7-2 / ice
                  :poss c7-3)
      :location (c7-0 / side))

# ::snt .: "this is not a religion" via
# ::tokens [".", ":", "\"", "this", "is", "not", "a", "religion", "\"", "via"]
# ::lemmas [".", ":", "\"", "this", "be", "not", "a", "religion", "\"", "via"]
(c8-0 / religion
      :domain (c8-1 / this)
      :medium (c8-2 / amr-empty)
      :polarity -)

# ::snt Your the Consp Theo. No evidence &amp; already YOU have the answer!
# ::tokens ["Your", "the", "Consp", "Theo", ".", "No", "evidence", "&", "amp", ";", "already", "YOU", "have", "the", "answer", "!"]
# ::lemmas ["your", "the", "Consp", "Theo", ".", "no", "evidence", "&", "amp", ";", "already", "you", "have", "the", "answer", "!"]
(c9-2 / multi-sentence
      :snt1 (c9-8 / consp
                  :domain (c9-1 / you)
                  :mode expressive)
      :snt2 (c9-11 / and
                   :op1 (c9-3 / evidence-01
                              :polarity -)
                   :op2 (c9-7 / person
                              :name (c9-5 / name
                                          :op1 "amp")))
      :snt3 (c9-0 / have-03
                  :ARG0 (c9-9 / you)
                  :ARG1 (c9-10 / thing
                               :ARG2-of (c9-4 / answer-01))
                  :time (c9-6 / already)))

# ::snt I'd enjoy seeing you tattooed with cartoons of Mohammad. Right before I handed you over to the victim's families.
# ::tokens ["I", "'d", "enjoy", "seeing", "you", "tattooed", "with", "cartoons", "of", "Mohammad", ".", "Right", "before", "I", "handed", "you", "over", "to", "the", "victim", "'s", "families", "."]
# ::lemmas ["i", "would", "enjoy", "see", "you", "tattoo", "with", "cartoon", "of", "Mohammad", ".", "right", "before", "i", "hand", "you", "over", "to", "the", "victim", "'s", "family", "."]
(c10-0 / multi-sentence
       :snt1 (c10-9 / enjoy-01
                    :ARG0 (c10-13 / i)
                    :ARG1 (c10-3 / see-01
                                 :ARG0 c10-13
                                 :ARG1 (c10-19 / tattoo-01
                                               :ARG1 (c10-16 / you)
                                               :ARG2 (c10-17 / cartoon
                                                             :topic (c10-2 / person
                                                                           :name (c10-10 / name
                                                                                         :op1 "Mohammad"))))))
       :snt2 (c10-8 / be-temporally-at-91
                    :ARG1 (c10-6 / hand-over-02
                                 :ARG0 (c10-15 / i)
                                 :ARG1 (c10-18 / you)
                                 :ARG2 (c10-7 / family
                                              :ARG1-of (c10-5 / have-org-role-91
                                                              :ARG0 (c10-4 / person
                                                                           :ARG1-of (c10-1 / victimize-01))
                                                              :ARG2 (c10-11 / member))))
                    :ARG2 (c10-14 / before
                                  :op1 c10-6
                                  :mod (c10-12 / right))))

# ::snt hahahahhahahahahhahahahahahhahahahahahhahahahahhahahahahhahahahahahhahahhahha
# ::tokens ["hahahahhahahahahhahahahahahhahahahahahhahahahahhahahahahhahahahahahhahahhahha"]
# ::lemmas ["hahahahhahahahahhahahahahahhahahahahahhahahahahhahahahahhahahahahahhahahhahha"]
(c11-0 / laugh-01
       :mode expressive)

# ::snt Congrats on your tweet!
# ::tokens ["Congrats", "on", "your", "tweet", "!"]
# ::lemmas ["congrat", "on", "your", "tweet", "!"]
(c12-2 / congratulate-01
       :ARG1 (c12-1 / you)
       :ARG2 (c12-0 / tweet-01
                    :ARG0 c12-1))

# ::snt I'll bring you a cup up in the morning. Ok?
# ::tokens ["I", "'ll", "bring", "you", "a", "cup", "up", "in", "the", "morning", ".", "Ok", "?"]
# ::lemmas ["i", "'ll", "bring", "you", "a", "cup", "up", "in", "the", "morning", ".", "ok", "?"]
(c13-1 / multi-sentence
       :snt1 (c13-2 / bring-01
                    :ARG0 (c13-4 / i)
                    :ARG1 (c13-7 / cup)
                    :ARG2 (c13-0 / you)
                    :time (c13-6 / date-entity
                                 :dayperiod (c13-5 / morning)))
       :snt2 (c13-3 / okay-01
                    :polarity (c13-8 / amr-unknown)))

# ::snt It must have been the anti-cartoon league then! Bunch of raging assholes!
# ::tokens ["It", "must", "have", "been", "the", "anti", "-", "cartoon", "league", "then", "!", "Bunch", "of", "raging", "assholes", "!"]
# ::lemmas ["it", "must", "have", "be", "the", "anti", "-", "cartoon", "league", "then", "!", "bunch", "of", "rage", "asshole", "!"]
(c14-1 / multi-sentence
       :snt1 (c14-4 / infer-01
                    :ARG1 (c14-0 / league
                                 :ARG0-of (c14-3 / oppose-01
                                                 :ARG1 (c14-6 / cartoon))
                                 :domain (c14-7 / it))
                    :time (c14-8 / then))
       :snt2 (c14-9 / asshole
                    :quant (c14-2 / bunch)
                    :ARG0-of (c14-5 / rage-02)))

# ::snt But it is being used as a tool of religion and in that religions name.
# ::tokens ["But", "it", "is", "being", "used", "as", "a", "tool", "of", "religion", "and", "in", "that", "religions", "name", "."]
# ::lemmas ["but", "it", "be", "be", "use", "as", "a", "tool", "of", "religion", "and", "in", "that", "religion", "name", "."]
(c15-4 / contrast-01
       :ARG2 (c15-0 / use-01
                    :ARG1 (c15-1 / it)
                    :ARG2 (c15-5 / tool
                                 :part-of (c15-3 / religion)
                                 :ARG2-of (c15-2 / name-01
                                                 :ARG1 c15-3))))

# ::snt Saw the Proffism too &amp; Police Union Chief Quoted as "Commandos" But who they were????
# ::tokens ["Saw", "the", "Proffism", "too", "&", "amp", ";", "Police", "Union", "Chief", "Quoted", "as", "\"", "Commandos", "\"", "But", "who", "they", "were", "?", "?", "?", "?"]
# ::lemmas ["saw", "the", "Proffism", "too", "&", "amp", ";", "Police", "Union", "Chief", "Quoted", "as", "\"", "Commandos", "\"", "but", "who", "they", "be", "?", "?", "?", "?"]
(c16-2 / multi-sentence
       :snt1 (c16-17 / and
                     :op1 (c16-12 / see-01
                                  :ARG0 (c16-6 / i)
                                  :ARG1 (c16-0 / hypocrisy)
                                  :mod (c16-15 / too))
                     :op2 (c16-4 / quit-01
                                 :ARG0 c16-6))
       :snt2 (c16-10 / contrast-01
                     :ARG1 (c16-13 / quote-01
                                   :ARG0 (c16-8 / person
                                                :ARG0-of (c16-1 / have-org-role-91
                                                                :ARG1 (c16-3 / organization
                                                                             :name (c16-7 / name
                                                                                          :op1 "Police"
                                                                                          :op2 "Union"))
                                                                :ARG2 (c16-9 / chief)))
                                   :ARG2 (c16-16 / person
                                                 :ARG0-of (c16-11 / command-02)))
                     :ARG2 (c16-5 / amr-unknown
                                  :domain (c16-14 / they))))

# ::snt In real 'merica it is!
# ::tokens ["In", "real", "'", "merica", "it", "is", "!"]
# ::lemmas ["in", "real", "'", "merica", "it", "be", "!"]
(c17-3 / it
       :location (c17-2 / country
                        :name (c17-0 / name
                                     :op1 "America")
                        :ARG1-of (c17-1 / real-04)))

# ::snt IN America is it
# ::tokens ["IN", "America", "is", "it"]
# ::lemmas ["in", "America", "be", "it"]
(c18-2 / it
       :location (c18-1 / country
                        :name (c18-0 / name
                                     :op1 "America")))

# ::snt Anyone can shout that,&amp; i watched the video too,they also shouted Alluhu Akbar.Doesn't MEAN they were Islamic/Muslim.
# ::tokens ["Anyone", "can", "shout", "that,&amp", ";", "i", "watched", "the", "video", "too", ",", "they", "also", "shouted", "Alluhu", "Akbar", ".", "Doesn't", "MEAN", "they", "were", "Islamic", "/", "Muslim", "."]
# ::lemmas ["anyone", "can", "shout", "that,&amp", ";", "i", "watch", "the", "video", "too", ",", "they", "also", "shout", "Alluhu", "Akbar", ".", "doesn't", "mean", "they", "be", "Islamic", "/", "Muslim", "."]
(c19-0 / multi-sentence
       :snt1 (c19-4 / possible-01
                    :ARG1 (c19-6 / shout-01
                                 :ARG0 (c19-7 / anyone)
                                 :ARG1 (c19-20 / that)))
       :snt2 (c19-14 / and
                     :op1 (c19-13 / watch-01
                                  :ARG0 (c19-15 / i)
                                  :ARG1 (c19-3 / video)
                                  :mod (c19-19 / too))
                     :op2 (c19-8 / shout-01
                                 :ARG0 (c19-16 / they)
                                 :ARG1 (c19-1 / worship-place
                                              :name (c19-9 / name
                                                           :op1 "Alluhu"
                                                           :op2 "Akbar"))
                                 :mod (c19-10 / also)))
       :snt3 (c19-11 / mean-01
                     :ARG2 (c19-17 / slash
                                   :op1 (c19-12 / religious-group
                                                :name (c19-18 / name
                                                              :op1 "Islam"))
                                   :op2 (c19-2 / religious-group
                                               :name (c19-5 / name
                                                            :op1 "Muslim"))
                                   :domain c19-16)
                     :polarity -))

# ::snt Yes, it is.
# ::tokens ["Yes", ",", "it", "is", "."]
# ::lemmas ["yes", ",", "it", "be", "."]
(c20-0 / it)

# ::snt That's what I thought as well but let's not nitpick this one.
# ::tokens ["That", "'s", "what", "I", "thought", "as", "well", "but", "let", "'s", "not", "nitpick", "this", "one", "."]
# ::lemmas ["that", "be", "what", "i", "think", "as", "well", "but", "let", "us", "not", "nitpick", "this", "one", "."]
(c21-5 / contrast-01
       :ARG1 (c21-7 / think-01
                    :ARG0 (c21-2 / i)
                    :ARG1 (c21-6 / that)
                    :mod (c21-8 / as-well))
       :ARG2 (c21-3 / nitpick-00
                    :ARG0 (c21-0 / we)
                    :ARG1 (c21-1 / one
                                 :mod (c21-4 / this))
                    :mode imperative
                    :polarity -))

# ::snt DEZE! Een medaille voor deze ---&gt; RT : "this is not a religion"
# ::tokens ["DEZE", "!", "Een", "medaille", "voor", "deze", "---&gt", ";", "RT", ":", "\"", "this", "is", "not", "a", "religion", "\""]
# ::lemmas ["deze", "!", "een", "medaille", "voor", "deze", "---&gt", ";", "RT", ":", "\"", "this", "be", "not", "a", "religion", "\""]
(c22-9 / and
       :op1 (c22-4 / deze
                   :mode expressive)
       :op2 (c22-0 / and
                   :op1 (c22-2 / van-de-ze)
                   :op2 (c22-6 / gt))
       :op3 (c22-7 / say-01
                   :ARG0 (c22-3 / publication
                                :name (c22-1 / name
                                             :op1 "RT"))
                   :ARG1 (c22-5 / religion
                                :domain (c22-8 / this)
                                :polarity -)))

# ::snt I'll assume people survived the the Asia Air plane crash since they haven't recovered all the bodies.
# ::tokens ["I", "'ll", "assume", "people", "survived", "the", "the", "Asia", "Air", "plane", "crash", "since", "they", "have", "n't", "recovered", "all", "the", "bodies", "."]
# ::lemmas ["i", "'ll", "assume", "people", "survive", "the", "the", "Asia", "Air", "plane", "crash", "since", "they", "have", "not", "recover", "all", "the", "body", "."]
(c23-11 / assume-02
        :ARG0 (c23-2 / i)
        :ARG1 (c23-9 / survive-01
                     :ARG0 (c23-4 / person)
                     :ARG1 (c23-6 / crash-01
                                  :ARG1 (c23-10 / plane
                                                :mod (c23-5 / company
                                                            :name (c23-3 / name
                                                                         :op1 "Asia"
                                                                         :op2 "Air")))))
        :ARG1-of (c23-8 / cause-01
                        :ARG0 (c23-7 / recover-02
                                     :ARG0 c23-4
                                     :ARG1 (c23-0 / body
                                                  :mod (c23-1 / all))
                                     :polarity -)))

# ::snt CAUSE REAL ISLAMISTS PREFER SWORDS? "this is not a religion"
# ::tokens ["CAUSE", "REAL", "ISLAMISTS", "PREFER", "SWORDS", "?", "\"", "this", "is", "not", "a", "religion", "\""]
# ::lemmas ["cause", "real", "ISLAMISTS", "PREFER", "sword", "?", "\"", "this", "be", "not", "a", "religion", "\""]
(c24-1 / multi-sentence
       :snt1 (c24-8 / cause-01
                    :ARG0 (c24-10 / amr-unknown))
       :snt2 (c24-6 / differ-02
                    :ARG1 (c24-7 / religious-group
                                 :name (c24-4 / name
                                              :op1 "Islam")
                                 :ARG1-of (c24-3 / real-04))
                    :ARG2 (c24-2 / religious-group
                                 :name (c24-5 / name
                                              :op1 "Sweden")))
       :snt3 (c24-0 / religion
                    :domain (c24-9 / this)
                    :polarity -))

# ::snt All I've been saying is wait &amp; see. Not blaming any1 as yet.
# ::tokens ["All", "I", "'ve", "been", "saying", "is", "wait", "&", "amp", ";", "see", ".", "Not", "blaming", "any1", "as", "yet", "."]
# ::lemmas ["all", "i", "'ve", "be", "say", "be", "wait", "&", "amp", ";", "see", ".", "not", "blame", "any1", "as", "yet", "."]
(c25-2 / multi-sentence
       :snt1 (c25-9 / say-01
                    :ARG0 (c25-7 / i)
                    :ARG1 (c25-11 / and
                                  :op1 (c25-0 / wait-01)
                                  :op2 (c25-6 / amp))
                    :mod (c25-8 / all))
       :snt2 (c25-5 / see-01
                    :ARG0 (c25-1 / you)
                    :mode imperative)
       :snt3 (c25-3 / blame-01
                    :ARG1 (c25-10 / any1)
                    :time (c25-4 / as-yet)
                    :polarity -))

# ::snt Oh really? I suppose cannibalism and human sacrifice is also "not a religion". Your definition is humanistic!
# ::tokens ["Oh", "really", "?", "I", "suppose", "cannibalism", "and", "human", "sacrifice", "is", "also", "\"", "not", "a", "religion", "\"", ".", "Your", "definition", "is", "humanistic", "!"]
# ::lemmas ["oh", "really", "?", "i", "suppose", "cannibalism", "and", "human", "sacrifice", "be", "also", "\"", "not", "a", "religion", "\"", ".", "your", "definition", "be", "humanistic", "!"]
(c26-3 / multi-sentence
       :snt1 (c26-10 / real-04
                     :polarity (c26-14 / amr-unknown)
                     :mod (c26-4 / oh
                                 :mode expressive))
       :snt2 (c26-13 / suppose-01
                     :ARG0 (c26-7 / i)
                     :ARG1 (c26-8 / religion
                                  :domain (c26-6 / and
                                                 :op1 (c26-11 / cannibalism)
                                                 :op2 (c26-5 / sacrifice-01
                                                             :ARG1 (c26-0 / human)))
                                  :mod (c26-9 / also)
                                  :polarity -))
       :snt3 (c26-12 / define-01
                     :ARG0 (c26-1 / you)
                     :ARG2 (c26-2 / humanistic)))

# ::snt Got it! Then I'll serve it warm and in your finest jugs. Ok?
# ::tokens ["Got", "it", "!", "Then", "I", "'ll", "serve", "it", "warm", "and", "in", "your", "finest", "jugs", ".", "Ok", "?"]
# ::lemmas ["got", "it", "!", "then", "i", "'ll", "serve", "it", "warm", "and", "in", "your", "fine", "jug", ".", "ok", "?"]
(c27-4 / multi-sentence
       :snt1 (c27-11 / get-02
                     :ARG1 (c27-8 / it))
       :snt2 (c27-12 / serve-02
                     :ARG0 (c27-10 / i)
                     :ARG1 (c27-3 / it)
                     :ARG2 (c27-0 / jug
                                  :poss (c27-1 / you)
                                  :ARG1-of (c27-2 / have-degree-91
                                                  :ARG2 (c27-5 / fine-03
                                                               :ARG1 c27-0)
                                                  :ARG3 (c27-9 / most)))
                     :time (c27-13 / then)
                     :ARG1-of (c27-6 / warm-07))
       :snt3 (c27-7 / okay-01
                    :polarity (c27-14 / amr-unknown)))

# ::snt Then what do those specific statements mean to you? Please enlighten me.
# ::tokens ["Then", "what", "do", "those", "specific", "statements", "mean", "to", "you", "?", "Please", "enlighten", "me", "."]
# ::lemmas ["then", "what", "do", "those", "specific", "statement", "mean", "to", "you", "?", "please", "enlighten", "i", "."]
(c29-1 / multi-sentence
       :snt1 (c29-6 / mean-01
                    :ARG1 (c29-9 / thing
                                 :ARG1-of (c29-8 / state-01)
                                 :ARG1-of (c29-2 / specific-02)
                                 :mod (c29-7 / that))
                    :ARG2 (c29-10 / amr-unknown)
                    :mod (c29-5 / then))
       :snt2 (c29-3 / enlighten-01
                    :ARG0 (c29-0 / you)
                    :ARG1 (c29-4 / i)
                    :polite +
                    :mode imperative))

# ::snt Except...it is.
# ::tokens ["Except", "...", "it", "is", "."]
# ::lemmas ["except", "...", "it", "be", "."]
(c30-0 / except-01
       :ARG1 (c30-1 / it))

# ::snt Need any churning first?
# ::tokens ["Need", "any", "churning", "first", "?"]
# ::lemmas ["need", "any", "churn", "first", "?"]
(c32-3 / need-01
       :polarity (c32-5 / amr-unknown)
       :ARG0 (c32-0 / you)
       :ARG1 (c32-4 / churn-01
                    :ARG1 (c32-2 / any))
       :ord (c32-1 / ordinal-entity
                   :value 1))

# ::snt But how can you tell WHICH bird shat on you?
# ::tokens ["But", "how", "can", "you", "tell", "WHICH", "bird", "shat", "on", "you", "?"]
# ::lemmas ["but", "how", "can", "you", "tell", "which", "bird", "shit", "on", "you", "?"]
(c33-3 / contrast-01
       :ARG2 (c33-2 / possible-01
                    :ARG1 (c33-5 / tell-01
                                 :ARG0 (c33-0 / you)
                                 :ARG1 (c33-4 / shit
                                              :mod (c33-1 / bird)
                                              :mod (c33-6 / amr-unknown))
                                 :ARG2 c33-0)))

# ::snt Occam's Razor. Stop being a chickenshit.
# ::tokens ["Occam", "'s", "Razor", ".", "Stop", "being", "a", "chickenshit", "."]
# ::lemmas ["Occam", "'s", "Razor", ".", "stop", "be", "a", "chickenshit", "."]
(c34-1 / multi-sentence
       :snt1 (c34-4 / person
                    :name (c34-3 / name
                                 :op1 "Occam's"
                                 :op2 "Razor"))
       :snt2 (c34-6 / stop-01
                    :ARG0 (c34-0 / you)
                    :ARG1 (c34-2 / batshit
                                 :mod (c34-5 / chickenshit)
                                 :domain c34-0)
                    :mode imperative))

# ::snt We can't buy this at super Market , might under super Market will
# ::tokens ["We", "ca", "n't", "buy", "this", "at", "super", "Market", ",", "might", "under", "super", "Market", "will"]
# ::lemmas ["we", "can", "not", "buy", "this", "at", "super", "Market", ",", "might", "under", "super", "Market", "will"]
(c35-7 / contrast-01
       :ARG1 (c35-5 / possible-01
                    :ARG1 (c35-3 / buy-01
                                 :ARG0 (c35-0 / we)
                                 :ARG1 (c35-9 / this)
                                 :ARG2 (c35-1 / market
                                              :name (c35-4 / name
                                                           :op1 "Super"
                                                           :op2 "Market")))
                    :polarity -)
       :ARG2 (c35-10 / possible-01
                     :ARG1 (c35-8 / buy-01
                                  :ARG0 c35-0
                                  :ARG1 c35-9
                                  :ARG2 (c35-6 / market
                                               :mod (c35-2 / under)))))

# ::snt That's just silly, as I've been saying wait &amp; see before blaming anyone.
# ::tokens ["That", "'s", "just", "silly", ",", "as", "I", "'ve", "been", "saying", "wait", "&", "amp", ";", "see", "before", "blaming", "anyone", "."]
# ::lemmas ["that", "be", "just", "silly", ",", "as", "i", "'ve", "be", "say", "wait", "&", "amp", ";", "see", "before", "blame", "anyone", "."]
(c36-3 / multi-sentence
       :snt1 (c36-8 / silly
                    :domain (c36-9 / that)
                    :mod (c36-0 / just)
                    :ARG1-of (c36-5 / say-01
                                    :ARG0 (c36-6 / i)))
       :snt2 (c36-2 / see-01
                    :ARG0 (c36-1 / you)
                    :time (c36-4 / before
                                 :op1 (c36-7 / blame-01
                                             :ARG1 (c36-10 / anyone)))
                    :mode imperative))

# ::snt Cute, but the image should be of an AK, not an H&amp;K MP5.
# ::tokens ["Cute", ",", "but", "the", "image", "should", "be", "of", "an", "AK", ",", "not", "an", "H&amp;K", "MP5", "."]
# ::lemmas ["cute", ",", "but", "the", "image", "should", "be", "of", "an", "AK", ",", "not", "an", "h&amp;k", "MP5", "."]
(c37-6 / contrast-01
       :ARG1 (c37-5 / cute)
       :ARG2 (c37-4 / recommend-01
                    :ARG1 (c37-8 / contrast-01
                                 :ARG1 (c37-0 / image
                                              :mod (c37-3 / product
                                                          :name (c37-1 / name
                                                                       :op1 "AK")))
                                 :ARG2 (c37-7 / image
                                              :mod (c37-9 / product
                                                          :name (c37-2 / name
                                                                       :op1 "H&amp;K"
                                                                       :op2 "MP5"))
                                              :polarity -))))

# ::snt Who said they were Islamic? They haven't been identified yet.
# ::tokens ["Who", "said", "they", "were", "Islamic", "?", "They", "have", "n't", "been", "identified", "yet", "."]
# ::lemmas ["who", "say", "they", "be", "Islamic", "?", "they", "have", "not", "be", "identify", "yet", "."]
(c38-1 / multi-sentence
       :snt1 (c38-6 / say-01
                    :ARG0 (c38-8 / amr-unknown)
                    :ARG1 (c38-4 / religious-group
                                 :name (c38-3 / name
                                              :op1 "Islam")
                                 :domain (c38-7 / they)))
       :snt2 (c38-2 / identify-01
                    :ARG1 (c38-5 / they)
                    :time (c38-0 / yet)
                    :polarity -))

# ::snt I expect an apology tweet soon.
# ::tokens ["I", "expect", "an", "apology", "tweet", "soon", "."]
# ::lemmas ["i", "expect", "an", "apology", "tweet", "soon", "."]
(c39-0 / expect-01
       :ARG0 (c39-1 / i)
       :ARG1 (c39-3 / tweet-02
                    :ARG1 (c39-4 / apologize-01))
       :time (c39-2 / soon))

# ::snt If shit drops on your head do you need to see the bird to know that a bird did the shitting?
# ::tokens ["If", "shit", "drops", "on", "your", "head", "do", "you", "need", "to", "see", "the", "bird", "to", "know", "that", "a", "bird", "did", "the", "shitting", "?"]
# ::lemmas ["if", "shit", "drop", "on", "your", "head", "do", "you", "need", "to", "see", "the", "bird", "to", "know", "that", "a", "bird", "do", "the", "shitting", "?"]
(c40-4 / need-01
       :polarity (c40-8 / amr-unknown)
       :ARG0 (c40-1 / you
                    :part (c40-0 / head))
       :ARG1 (c40-6 / see-01
                    :ARG0 c40-1
                    :ARG1 (c40-2 / bird)
                    :purpose (c40-7 / know-01
                                    :ARG0 c40-1
                                    :ARG1 (c40-3 / shit-01
                                                 :ARG0 c40-2)))
       :condition (c40-5 / drop-01
                         :ARG1 c40-3
                         :ARG4 c40-0))

# ::snt Culture yes, religion no. RT "this is not a religion"
# ::tokens ["Culture", "yes", ",", "religion", "no", ".", "RT", "\"", "this", "is", "not", "a", "religion", "\""]
# ::lemmas ["culture", "yes", ",", "religion", "no", ".", "RT", "\"", "this", "be", "not", "a", "religion", "\""]
(c41-0 / multi-sentence
       :snt1 (c41-8 / and
                    :op1 (c41-5 / culture)
                    :op2 (c41-4 / religion
                                :polarity -))
       :snt2 (c41-6 / say-01
                    :ARG0 (c41-3 / publication
                                 :name (c41-2 / name
                                              :op1 "RT"))
                    :ARG1 (c41-1 / religion
                                 :domain (c41-7 / this)
                                 :polarity -)))

# ::snt &amp; has anyone involved in inquiry said that they were def Muslim/Islamic?
# ::tokens ["&", "amp", ";", "has", "anyone", "involved", "in", "inquiry", "said", "that", "they", "were", "def", "Muslim", "/", "Islamic", "?"]
# ::lemmas ["&", "amp", ";", "have", "anyone", "involve", "in", "inquiry", "say", "that", "they", "be", "def", "Muslim", "/", "Islamic", "?"]
(c42-12 / and
        :op2 (c42-1 / ask-01
                    :ARG1 (c42-10 / say-01
                                  :ARG0 (c42-5 / anyone
                                               :ARG1-of (c42-2 / involve-01
                                                               :ARG2 (c42-9 / inquire-01)))
                                  :ARG1 (c42-7 / defame-01
                                               :ARG0 c42-5
                                               :ARG1 (c42-0 / or
                                                            :op1 (c42-8 / religious-group
                                                                        :name (c42-4 / name
                                                                                     :op1 "Muslim"))
                                                            :op2 (c42-3 / religious-group
                                                                        :name (c42-6 / name
                                                                                     :op1 "Islam"))))
                                  :polarity (c42-11 / amr-unknown))))

# ::snt ,,Dangerous without solid evidence.
# ::tokens [",", ",", "Dangerous", "without", "solid", "evidence", "."]
# ::lemmas [",", ",", "Dangerous", "without", "solid", "evidence", "."]
(c43-1 / endanger-01
       :manner (c43-2 / evidence-01
                      :ARG1-of (c43-0 / solid-02)
                      :polarity -))

# ::snt My Point is NO one KNOWS who they were as yet &amp; blaming any particular group is...
# ::tokens ["My", "Point", "is", "NO", "one", "KNOWS", "who", "they", "were", "as", "yet", "&", "amp", ";", "blaming", "any", "particular", "group", "is", "..."]
# ::lemmas ["my", "point", "be", "no", "one", "know", "who", "they", "be", "as", "yet", "&", "amp", ";", "blame", "any", "particular", "group", "be", "..."]
(c44-11 / and
        :op1 (c44-6 / point-04
                    :ARG0 (c44-3 / i)
                    :ARG1 (c44-9 / know-01
                                 :ARG0 (c44-4 / no-one)
                                 :ARG1 (c44-10 / person
                                               :domain (c44-8 / they))
                                 :time (c44-2 / as-yet)))
        :op2 (c44-1 / blame-01
                    :ARG1 (c44-7 / group
                                 :mod (c44-0 / particular)
                                 :mod (c44-5 / any))))

# ::snt always deserve coffee!*wink wink*
# ::tokens ["always", "deserve", "coffee!*wink", "wink", "*"]
# ::lemmas ["always", "deserve", "coffee!*wink", "wink", "*"]
(c45-2 / deserve-01
       :ARG0 (c45-1 / you)
       :ARG1 (c45-3 / coffee)
       :time (c45-4 / always)
       :mod (c45-0 / wink-01)
       :mode expressive)

# ::snt get on a flight now, Phil! I like mine with breakfast (in bed).
# ::tokens ["get", "on", "a", "flight", "now", ",", "Phil", "!", "I", "like", "mine", "with", "breakfast", "(", "in", "bed", ")", "."]
# ::lemmas ["get", "on", "a", "flight", "now", ",", "Phil", "!", "i", "like", "mine", "with", "breakfast", "(", "in", "bed", ")", "."]
(c46-1 / multi-sentence
       :snt1 (c46-11 / say-01
                     :ARG0 (c46-4 / i)
                     :ARG1 (c46-9 / get-05
                                  :ARG0 (c46-7 / person
                                               :name (c46-5 / name
                                                            :op1 "Phil"))
                                  :ARG1 (c46-0 / fly-01
                                               :ARG1 c46-7)
                                  :time (c46-6 / now)
                                  :mode imperative)
                     :ARG2 c46-7)
       :snt2 (c46-2 / like-01
                    :ARG0 (c46-10 / i)
                    :ARG1 (c46-3 / breakfast-01
                                 :ARG0 c46-10
                                 :location (c46-8 / bed))))

# ::snt um... WTF?What were the shooters then? Fucking Amish?
# ::tokens ["um", "...", "WTF?What", "were", "the", "shooters", "then", "?", "Fucking", "Amish", "?"]
# ::lemmas ["um", "...", "wtf?what", "be", "the", "shooter", "then", "?", "fucking", "Amish", "?"]
(c47-1 / multi-sentence
       :snt1 (c47-8 / amr-unknown
                    :domain (c47-4 / person
                                   :ARG0-of (c47-6 / shoot-02))
                    :mod (c47-0 / fuck
                                :mode expressive)
                    :time (c47-7 / then))
       :snt2 (c47-5 / religious-group
                    :name (c47-3 / name
                                 :op1 "Amish")
                    :mod (c47-2 / fucking)))

# ::snt No one knows WHY they killed those poor folks. Jumping to conclusions and supporting them can be dangerous.
# ::tokens ["No", "one", "knows", "WHY", "they", "killed", "those", "poor", "folks", ".", "Jumping", "to", "conclusions", "and", "supporting", "them", "can", "be", "dangerous", "."]
# ::lemmas ["no", "one", "know", "why", "they", "kill", "those", "poor", "folk", ".", "jump", "to", "conclusion", "and", "support", "they", "can", "be", "dangerous", "."]
(c48-2 / multi-sentence
       :snt1 (c48-6 / know-01
                    :ARG0 (c48-7 / no-one)
                    :ARG1 (c48-14 / thing
                                  :ARG0-of (c48-11 / cause-01
                                                   :ARG1 (c48-3 / kill-01
                                                                :ARG0 (c48-12 / they)
                                                                :ARG1 (c48-1 / folk
                                                                             :mod (c48-9 / poor)
                                                                             :mod (c48-8 / that))))))
       :snt2 (c48-15 / possible-01
                     :ARG1 (c48-4 / endanger-01
                                  :ARG0 (c48-16 / and
                                                :op1 (c48-0 / jump-03
                                                            :ARG2 (c48-10 / conclude-01))
                                                :op2 (c48-13 / support-01
                                                             :ARG1 (c48-5 / they))))))

# ::snt They yelled it from the top of their lungs... That their prophet had been 'avenged'. What part do you not understand?
# ::tokens ["They", "yelled", "it", "from", "the", "top", "of", "their", "lungs", "...", "That", "their", "prophet", "had", "been", "'", "avenged", "'", ".", "What", "part", "do", "you", "not", "understand", "?"]
# ::lemmas ["they", "yell", "it", "from", "the", "top", "of", "their", "lung", "...", "that", "their", "prophet", "have", "be", "'", "avenge", "'", ".", "what", "part", "do", "you", "not", "understand", "?"]
(c49-3 / multi-sentence
       :snt1 (c49-1 / yell-01
                    :ARG0 (c49-11 / they)
                    :ARG1 (c49-7 / it)
                    :source (c49-10 / top
                                    :part-of (c49-2 / lung
                                                    :poss c49-11)))
       :snt2 (c49-13 / avenge-01
                     :ARG1 (c49-9 / person
                                  :ARG0-of (c49-0 / have-rel-role-91
                                                  :ARG1 (c49-8 / they)
                                                  :ARG2 (c49-12 / prophet))))
       :snt3 (c49-4 / understand-01
                    :ARG0 (c49-14 / you)
                    :ARG1 (c49-6 / amr-unknown
                                 :mod (c49-5 / part))
                    :polarity -))

# ::snt what's even more dangerous? Blind and ignorant faith to ancient myths... Religion!
# ::tokens ["what", "'s", "even", "more", "dangerous", "?", "Blind", "and", "ignorant", "faith", "to", "ancient", "myths", "...", "Religion", "!"]
# ::lemmas ["what", "be", "even", "more", "dangerous", "?", "blind", "and", "ignorant", "faith", "to", "ancient", "myth", "...", "religion", "!"]
(c50-2 / multi-sentence
       :snt1 (c50-6 / endanger-01
                    :ARG0 (c50-10 / amr-unknown)
                    :mod (c50-4 / even)
                    :ARG2-of (c50-0 / have-degree-91
                                    :ARG1 c50-10
                                    :ARG3 (c50-8 / more)))
       :snt2 (c50-1 / faith
                    :ARG1-of (c50-5 / blind-02)
                    :topic (c50-3 / myth
                                  :mod (c50-7 / ancient)))
       :snt3 (c50-9 / religion))
