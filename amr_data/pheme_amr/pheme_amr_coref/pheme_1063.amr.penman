# ::snt And what should he expect of you?
# ::tokens ["And", "what", "should", "he", "expect", "of", "you", "?"]
# ::lemmas ["and", "what", "should", "he", "expect", "of", "you", "?"]
(c1-5 / and
      :op2 (c1-4 / recommend-01
                 :ARG1 (c1-2 / expect-01
                             :ARG0 (c1-0 / he)
                             :ARG1 (c1-3 / amr-unknown)
                             :ARG2 (c1-1 / you))))

# ::snt This guy has a face that say : "Hey ! I'm a nice guy !" That's sad, rest in peace
# ::tokens ["This", "guy", "has", "a", "face", "that", "say", ":", "\"", "Hey", "!", "I", "'m", "a", "nice", "guy", "!", "\"", "That", "'s", "sad", ",", "rest", "in", "peace"]
# ::lemmas ["this", "guy", "have", "a", "face", "that", "say", ":", "\"", "hey", "!", "i", "be", "a", "nice", "guy", "!", "\"", "that", "be", "sad", ",", "rest", "in", "peace"]
(c2-2 / multi-sentence
      :snt1 (c2-0 / have-03
                  :ARG0 (c2-8 / guy
                              :mod (c2-12 / this))
                  :ARG1 (c2-1 / face
                              :ARG0-of (c2-10 / say-01
                                              :ARG1 (c2-6 / guy
                                                          :ARG1-of (c2-4 / nice-01)
                                                          :domain c2-8
                                                          :mod (c2-13 / hey
                                                                      :mode expressive)))))
      :snt2 (c2-11 / and
                   :op1 (c2-3 / sad-02
                              :ARG0 (c2-9 / that))
                   :op2 (c2-7 / rest-01
                              :ARG1 c2-8
                              :manner (c2-5 / peace))))

# ::snt I dont need his or your respect, i just expecting tolerance towards each other as long nobodys freedom is affected.
# ::tokens ["I", "do", "nt", "need", "his", "or", "your", "respect", ",", "i", "just", "expecting", "tolerance", "towards", "each", "other", "as", "long", "nobodys", "freedom", "is", "affected", "."]
# ::lemmas ["i", "do", "not", "need", "his", "or", "your", "respect", ",", "i", "just", "expect", "tolerance", "towards", "each", "other", "as", "long", "nobodys", "freedom", "be", "affect", "."]
(c3-12 / contrast-01
       :ARG1 (c3-10 / need-01
                    :ARG0 (c3-9 / i)
                    :ARG1 (c3-11 / respect-01
                                 :ARG0 (c3-6 / or
                                             :op1 (c3-0 / he)
                                             :op2 (c3-1 / you))
                                 :ARG1 c3-9)
                    :polarity -)
       :ARG2 (c3-7 / expect-01
                   :ARG0 c3-9
                   :ARG1 (c3-13 / tolerate-01
                                :ARG1 (c3-3 / other
                                            :mod (c3-5 / each)))
                   :mod (c3-2 / just)
                   :condition (c3-14 / as-long-as
                                     :op1 (c3-8 / affect-01
                                                :ARG1 (c3-4 / free-04
                                                            :ARG1 c3-3)))))

# ::snt Farewell brother RT Ahmed Merabet, French Cop, st victim of attack
# ::tokens ["Farewell", "brother", "RT", "Ahmed", "Merabet", ",", "French", "Cop", ",", "st", "victim", "of", "attack"]
# ::lemmas ["Farewell", "brother", "RT", "Ahmed", "Merabet", ",", "French", "Cop", ",", "st", "victim", "of", "attack"]
(c4-4 / victimize-01
      :ARG0 (c4-11 / attack-01)
      :ARG1 (c4-5 / person
                  :name (c4-3 / name
                              :op1 "RT"
                              :op2 "Ahmed"
                              :op3 "Merabet")
                  :ARG0-of (c4-0 / have-rel-role-91
                                 :ARG1 (c4-10 / person
                                              :ARG0-of (c4-1 / fight-01))
                                 :ARG2 (c4-2 / brother))
                  :mod (c4-7 / country
                             :name (c4-6 / name
                                         :op1 "France"))
                  :mod (c4-8 / religious-group
                             :name (c4-9 / name
                                         :op1 "Copt"))))

# ::snt Respect has to be earned. This is matter of tolerating your belief, same is expected from you towards others.
# ::tokens ["Respect", "has", "to", "be", "earned", ".", "This", "is", "matter", "of", "tolerating", "your", "belief", ",", "same", "is", "expected", "from", "you", "towards", "others", "."]
# ::lemmas ["respect", "have", "to", "be", "earn", ".", "this", "be", "matter", "of", "tolerate", "your", "belief", ",", "same", "be", "expect", "from", "you", "towards", "other", "."]
(c5-2 / multi-sentence
      :snt1 (c5-5 / obligate-01
                  :ARG2 (c5-7 / earn-01
                              :ARG1 (c5-11 / respect-01)))
      :snt2 (c5-10 / matter
                   :topic (c5-15 / tolerate-01
                                 :ARG0 (c5-0 / you)
                                 :ARG1 (c5-13 / thing
                                              :ARG1-of (c5-4 / believe-01
                                                             :ARG0 c5-0)))
                   :domain (c5-9 / this)
                   :ARG1-of (c5-1 / mean-01
                                  :ARG2 (c5-6 / expect-01
                                              :ARG1 (c5-8 / thing
                                                          :ARG1-of (c5-14 / same-01)
                                                          :source (c5-16 / you)
                                                          :prep-to (c5-12 / person
                                                                          :mod (c5-3 / other)))))))

# ::snt que la terre lui soit lger
# ::tokens ["que", "la", "terre", "lui", "soit", "lger"]
# ::lemmas ["que", "la", "terre", "lui", "soit", "lger"]
(c6-5 / say-01
      :ARG0 (c6-2 / i)
      :ARG1 (c6-6 / and
                  :op1 (c6-1 / que
                             :mode expressive)
                  :op2 (c6-0 / lui
                             :mode expressive))
      :ARG2 (c6-4 / person
                  :name (c6-3 / name
                              :op1 "Lger")))

# ::snt dont even try to make excuses there is none france is a democratic country you dont like it leave.
# ::tokens ["do", "nt", "even", "try", "to", "make", "excuses", "there", "is", "none", "france", "is", "a", "democratic", "country", "you", "do", "nt", "like", "it", "leave", "."]
# ::lemmas ["do", "nt", "even", "try", "to", "make", "excuse", "there", "be", "none", "france", "be", "a", "democratic", "country", "you", "do", "not", "like", "it", "leave", "."]
(c7-10 / try-01
       :ARG0 (c7-0 / you)
       :ARG1 (c7-4 / excuse-02
                   :ARG0 c7-0)
       :mod (c7-3 / even)
       :ARG1-of (c7-7 / cause-01
                      :ARG0 (c7-6 / country
                                  :mod (c7-8 / democrat)
                                  :domain (c7-9 / country
                                                :name (c7-5 / name
                                                            :op1 "France"))
                                  :ARG1-of (c7-1 / dislike-01
                                                 :ARG0 c7-0)
                                  :ARG0-of (c7-2 / leave-11
                                                 :ARG1-of c7-7
                                                 :ARG0 c7-9)))
       :polarity -
       :mode imperative)

# ::snt Yes governments are corrupted, thats why i dont follow any ideology, belief system or politic party..
# ::tokens ["Yes", "governments", "are", "corrupted", ",", "that", "s", "why", "i", "do", "nt", "follow", "any", "ideology", ",", "belief", "system", "or", "politic", "party", ".."]
# ::lemmas ["yes", "government", "be", "corrupt", ",", "that", "s", "why", "i", "do", "not", "follow", "any", "ideology", ",", "belief", "system", "or", "politic", "party", ".."]
(c8-7 / cause-01
      :ARG0 (c8-6 / corrupt-01
                  :ARG1 (c8-8 / government-organization
                              :ARG0-of (c8-5 / govern-01)))
      :ARG1 (c8-0 / follow-02
                  :ARG0 (c8-3 / i)
                  :ARG1 (c8-2 / or
                              :op1 (c8-9 / ideology)
                              :op2 (c8-10 / system
                                          :mod (c8-1 / believe-01))
                              :op3 (c8-4 / party
                                         :mod (c8-11 / politic))
                              :mod (c8-12 / any))
                  :polarity -))

# ::snt You know what my point is.
# ::tokens ["You", "know", "what", "my", "point", "is", "."]
# ::lemmas ["you", "know", "what", "my", "point", "be", "."]
(c9-2 / know-01
      :ARG0 (c9-0 / you)
      :ARG1 (c9-4 / thing
                  :ARG1-of (c9-3 / point-04
                                 :ARG0 (c9-1 / i))))

# ::snt may he rest in peace - peace to his family and friends
# ::tokens ["may", "he", "rest", "in", "peace", "-", "peace", "to", "his", "family", "and", "friends"]
# ::lemmas ["may", "he", "rest", "in", "peace", "-", "peace", "to", "his", "family", "and", "friend"]
(c10-1 / wish-01
       :ARG1 (c10-9 / rest-01
                    :ARG1 (c10-0 / he)
                    :manner (c10-8 / peace)
                    :ARG1-of (c10-3 / mean-01
                                    :ARG2 (c10-11 / peace
                                                  :beneficiary (c10-12 / and
                                                                       :op1 (c10-2 / family
                                                                                   :ARG1-of (c10-4 / have-org-role-91
                                                                                                   :ARG0 c10-0
                                                                                                   :ARG2 (c10-10 / member)))
                                                                       :op2 (c10-5 / person
                                                                                   :ARG0-of (c10-7 / have-rel-role-91
                                                                                                   :ARG1 c10-0
                                                                                                   :ARG2 (c10-6 / friend))))))))

# ::snt Rest in peace Ahmed and the other victims
# ::tokens ["Rest", "in", "peace", "Ahmed", "and", "the", "other", "victims"]
# ::lemmas ["rest", "in", "peace", "Ahmed", "and", "the", "other", "victim"]
(c11-5 / rest-01
       :ARG1 (c11-7 / and
                    :op1 (c11-4 / person
                                :name (c11-2 / name
                                             :op1 "Ahmed"))
                    :op2 (c11-6 / person
                                :ARG1-of (c11-3 / victimize-01)
                                :mod (c11-1 / other)))
       :manner (c11-0 / peace))

# ::snt This comment is justifying the attack. Offending someone and killing someone aren't even in the same discussion.
# ::tokens ["This", "comment", "is", "justifying", "the", "attack", ".", "Offending", "someone", "and", "killing", "someone", "are", "n't", "even", "in", "the", "same", "discussion", "."]
# ::lemmas ["this", "comment", "be", "justify", "the", "attack", ".", "offend", "someone", "and", "kill", "someone", "be", "not", "even", "in", "the", "same", "discussion", "."]
(c12-2 / multi-sentence
       :snt1 (c12-0 / justify-01
                    :ARG0 (c12-12 / thing
                                  :ARG1-of (c12-9 / comment-01)
                                  :mod (c12-10 / this))
                    :ARG1 (c12-13 / attack-01))
       :snt2 (c12-8 / discuss-01
                    :ARG1 (c12-6 / and
                                 :op1 (c12-3 / offend-03
                                             :ARG1 (c12-11 / someone))
                                 :op2 (c12-7 / kill-01
                                             :ARG1 (c12-4 / someone)))
                    :mod (c12-5 / even)
                    :ARG1-of (c12-1 / same-01)
                    :polarity -))

# ::snt By your logic he shouldn't respect you, you have to earn it.
# ::tokens ["By", "your", "logic", "he", "should", "n't", "respect", "you", ",", "you", "have", "to", "earn", "it", "."]
# ::lemmas ["by", "your", "logic", "he", "should", "not", "respect", "you", ",", "you", "have", "to", "earn", "it", "."]
(c14-7 / and
       :op1 (c14-6 / recommend-01
                   :ARG1 (c14-5 / respect-01
                                :ARG0 (c14-0 / he)
                                :ARG1 (c14-1 / you)
                                :polarity -)
                   :ARG1-of (c14-2 / logic
                                   :poss c14-1))
       :op2 (c14-3 / obligate-01
                   :ARG2 (c14-4 / earn-01
                                :ARG0 c14-1
                                :ARG1 c14-5)))

# ::snt Yet you have expectations in a world run by governments.
# ::tokens ["Yet", "you", "have", "expectations", "in", "a", "world", "run", "by", "governments", "."]
# ::lemmas ["yet", "you", "have", "expectation", "in", "a", "world", "run", "by", "government", "."]
(c15-0 / have-concession-91
       :ARG1 (c15-3 / expect-01
                    :ARG0 (c15-1 / you)
                    :location (c15-2 / world
                                     :ARG1-of (c15-4 / run-01
                                                     :ARG0 (c15-6 / government-organization
                                                                  :ARG0-of (c15-5 / govern-01))))))

# ::snt Governments are the institutions that take away freedoms. They dont need much to do so. Muslims fougth..
# ::tokens ["Governments", "are", "the", "institutions", "that", "take", "away", "freedoms", ".", "They", "do", "nt", "need", "much", "to", "do", "so", ".", "Muslims", "fougth", ".."]
# ::lemmas ["government", "be", "the", "institution", "that", "take", "away", "freedom", ".", "they", "do", "not", "need", "much", "to", "do", "so", ".", "Muslims", "fougth", ".."]
(c16-1 / multi-sentence
       :snt1 (c16-2 / institution
                    :domain (c16-9 / government-organization
                                   :ARG0-of (c16-7 / govern-01))
                    :ARG0-of (c16-12 / take-away-05
                                     :ARG1 (c16-0 / free-04)))
       :snt2 (c16-4 / need-01
                    :ARG0 (c16-11 / they)
                    :ARG1 (c16-6 / much)
                    :purpose c16-12
                    :polarity -)
       :snt3 (c16-3 / fougth-00
                    :ARG0 (c16-8 / person
                                 :mod (c16-10 / religious-group
                                              :name (c16-5 / name
                                                           :op1 "Muslim")))))

# ::snt - that's an example for show world that we must separated Islamic religion of who use Islamism for do terrorism
# ::tokens ["-", "that", "'s", "an", "example", "for", "show", "world", "that", "we", "must", "separated", "Islamic", "religion", "of", "who", "use", "Islamism", "for", "do", "terrorism"]
# ::lemmas ["-", "that", "be", "an", "example", "for", "show", "world", "that", "we", "must", "separate", "Islamic", "religion", "of", "who", "use", "Islamism", "for", "do", "terrorism"]
(c17-3 / exemplify-01
       :ARG0 (c17-12 / that)
       :ARG1 (c17-2 / obligate-01
                    :ARG1 (c17-0 / we)
                    :ARG2 (c17-11 / separate-01
                                  :ARG0 c17-0
                                  :ARG1 (c17-8 / religion
                                               :mod (c17-4 / religious-group
                                                           :name (c17-5 / name
                                                                        :op1 "Islam"))
                                               :consist-of (c17-7 / person
                                                                  :ARG0-of (c17-1 / use-01
                                                                                  :ARG1 c17-4
                                                                                  :ARG2 (c17-9 / do-02
                                                                                               :ARG1 (c17-10 / terrorism)))))))
       :beneficiary (c17-6 / world))

# ::snt for democracy in Egypt and all the west did was betray them.Yet theyre the ones who want to take freedom away
# ::tokens ["for", "democracy", "in", "Egypt", "and", "all", "the", "west", "did", "was", "betray", "them", ".", "Yet", "they", "re", "the", "ones", "who", "want", "to", "take", "freedom", "away"]
# ::lemmas ["for", "democracy", "in", "Egypt", "and", "all", "the", "west", "do", "be", "betray", "they", ".", "yet", "they", "re", "the", "one", "who", "want", "to", "take", "freedom", "away"]
(c18-2 / betray-01
       :ARG0 (c18-10 / and
                     :op1 (c18-7 / country
                                 :name (c18-5 / name
                                              :op1 "Egypt"))
                     :op2 (c18-0 / world-region
                                 :name (c18-6 / name
                                              :op1 "West")
                                 :mod (c18-3 / all)))
       :ARG1 (c18-9 / they)
       :concession-of (c18-4 / want-01
                             :ARG0 c18-9
                             :ARG1 (c18-8 / take-away-05
                                          :ARG0 c18-9
                                          :ARG1 (c18-1 / free-04
                                                       :ARG1 c18-9))))

# ::snt No, i dont. Please elaborate
# ::tokens ["No", ",", "i", "do", "nt", ".", "Please", "elaborate"]
# ::lemmas ["no", ",", "i", "do", "not", ".", "please", "elaborate"]
(c19-1 / multi-sentence
       :snt1 (c19-4 / do-02
                    :ARG0 (c19-3 / i)
                    :polarity -)
       :snt2 (c19-2 / elaborate-01
                    :ARG0 (c19-0 / you)
                    :mode imperative
                    :polite +))

# ::snt i am Ahmed
# ::tokens ["i", "am", "Ahmed"]
# ::lemmas ["i", "be", "Ahmed"]
(c20-1 / person
       :name (c20-0 / name
                    :op1 "Ahmed")
       :domain (c20-2 / i))

# ::snt Rest In Peace.
# ::tokens ["Rest", "In", "Peace", "."]
# ::lemmas ["rest", "in", "Peace", "."]
(c21-1 / rest-01
       :manner (c21-0 / peace))

# ::snt Yes governments are corrupted, thats why i dont follow any ideology, belief system or politic party.
# ::tokens ["Yes", "governments", "are", "corrupted", ",", "that", "s", "why", "i", "do", "nt", "follow", "any", "ideology", ",", "belief", "system", "or", "politic", "party", "."]
# ::lemmas ["yes", "government", "be", "corrupt", ",", "that", "s", "why", "i", "do", "not", "follow", "any", "ideology", ",", "belief", "system", "or", "politic", "party", "."]
(c22-7 / cause-01
       :ARG0 (c22-6 / corrupt-01
                    :ARG1 (c22-8 / government-organization
                                 :ARG0-of (c22-5 / govern-01)))
       :ARG1 (c22-0 / follow-02
                    :ARG0 (c22-3 / i)
                    :ARG1 (c22-2 / or
                                 :op1 (c22-9 / ideology)
                                 :op2 (c22-10 / system
                                              :mod (c22-1 / believe-01))
                                 :op3 (c22-4 / party
                                             :mod (c22-11 / politic))
                                 :mod (c22-12 / any))
                    :polarity -))

# ::snt Thats the real problem. ALL the people I speak to on here arent making a distinction but use absolute logic
# ::tokens ["That", "s", "the", "real", "problem", ".", "ALL", "the", "people", "I", "speak", "to", "on", "here", "are", "nt", "making", "a", "distinction", "but", "use", "absolute", "logic"]
# ::lemmas ["that", "s", "the", "real", "problem", ".", "all", "the", "people", "i", "speak", "to", "on", "here", "be", "not", "make", "a", "distinction", "but", "use", "absolute", "logic"]
(c23-2 / multi-sentence
       :snt1 (c23-6 / problem
                    :ARG1-of (c23-7 / real-04)
                    :domain (c23-11 / that))
       :snt2 (c23-8 / contrast-01
                    :ARG1 (c23-9 / distinguish-01
                                 :ARG0 (c23-12 / person
                                               :ARG1-of (c23-10 / speak-01
                                                                :ARG0 (c23-5 / i)
                                                                :location (c23-0 / here))
                                               :mod (c23-13 / all))
                                 :polarity -)
                    :ARG2 (c23-3 / use-01
                                 :ARG0 c23-12
                                 :ARG1 (c23-1 / logic
                                              :mod (c23-4 / absolute)))))

# ::snt Syria is in ashes now because they wanted freedom. Tunsia voted for a secular government. factually WANT freedom
# ::tokens ["Syria", "is", "in", "ashes", "now", "because", "they", "wanted", "freedom", ".", "Tunsia", "voted", "for", "a", "secular", "government", ".", "factually", "WANT", "freedom"]
# ::lemmas ["Syria", "be", "in", "ashe", "now", "because", "they", "want", "freedom", ".", "Tunsia", "vote", "for", "a", "secular", "government", ".", "factually", "want", "freedom"]
(c24-2 / multi-sentence
       :snt1 (c24-11 / cause-01
                     :ARG0 (c24-0 / want-01
                                  :ARG0 (c24-10 / country
                                                :name (c24-7 / name
                                                             :op1 "Syria"))
                                  :ARG1 (c24-1 / free-04))
                     :ARG1 (c24-17 / ash
                                   :domain c24-10
                                   :time (c24-8 / now)))
       :snt2 (c24-9 / vote-01
                    :ARG0 (c24-12 / person
                                  :name (c24-13 / name
                                                :op1 "Tunsia"))
                    :ARG1 (c24-14 / government-organization
                                  :ARG0-of (c24-15 / govern-01)
                                  :mod (c24-16 / secular)))
       :snt3 (c24-6 / want-01
                    :ARG0 (c24-3 / want-01
                                 :ARG1 (c24-5 / free-04)
                                 :manner (c24-4 / factual))))

# ::snt Simply letting you do what ever you like as long it does not takes freedom from others. Simple.
# ::tokens ["Simply", "letting", "you", "do", "what", "ever", "you", "like", "as", "long", "it", "does", "not", "takes", "freedom", "from", "others", ".", "Simple", "."]
# ::lemmas ["simply", "let", "you", "do", "what", "ever", "you", "like", "as", "long", "it", "do", "not", "take", "freedom", "from", "other", ".", "simple", "."]
(c25-3 / multi-sentence
       :snt1 (c25-8 / simple-02
                    :ARG1 (c25-2 / let-01
                                 :ARG1 (c25-6 / do-02
                                              :ARG0 (c25-0 / you)
                                              :ARG1 (c25-1 / whatever
                                                           :ARG1-of (c25-7 / like-02
                                                                           :ARG0 c25-0))
                                              :condition (c25-10 / as-long-as
                                                                 :op1 (c25-9 / take-01
                                                                             :ARG0 c25-2
                                                                             :ARG1 (c25-4 / free-04
                                                                                          :ARG1 c25-0
                                                                                          :ARG3 (c25-5 / other))
                                                                             :polarity -))))
                    :snt2-of c25-3))

# ::snt Oh, so sad.
# ::tokens ["Oh", ",", "so", "sad", "."]
# ::lemmas ["oh", ",", "so", "sad", "."]
(c26-0 / sad-02
       :degree (c26-1 / so)
       :mod (c26-2 / oh
                   :mode expressive))

# ::snt Father of and years old
# ::tokens ["Father", "of", "and", "years", "old"]
# ::lemmas ["Father", "of", "and", "years", "old"]
(c27-7 / and
       :op1 (c27-4 / person
                   :ARG0-of (c27-0 / have-rel-role-91
                                   :ARG2 (c27-2 / father)))
       :op2 (c27-6 / person
                   :age (c27-3 / multiple
                               :op1 (c27-5 / temporal-quantity
                                           :unit (c27-1 / year)
                                           :quant 1))))

# ::snt This face... RT : Ahmed Merabet, a French Cop, first victim of attack
# ::tokens ["This", "face", "...", "RT", ":", "Ahmed", "Merabet", ",", "a", "French", "Cop", ",", "first", "victim", "of", "attack"]
# ::lemmas ["this", "face", "...", "rt", ":", "Ahmed", "Merabet", ",", "a", "French", "Cop", ",", "first", "victim", "of", "attack"]
(c28-10 / say-01
        :ARG0 (c28-4 / publication
                     :name (c28-2 / name
                                  :op1 "RT"))
        :ARG1 (c28-3 / victim
                     :ord (c28-0 / ordinal-entity
                                 :value 1)
                     :domain (c28-11 / person
                                     :name (c28-5 / name
                                                  :op1 "Ahmed"
                                                  :op2 "Merabet")
                                     :mod (c28-1 / ethnic-group
                                                 :name (c28-6 / name
                                                              :op1 "Copt")
                                                 :mod (c28-7 / country
                                                             :name (c28-8 / name
                                                                          :op1 "France"))))
                     :ARG1-of (c28-9 / cause-01
                                     :ARG0 (c28-12 / attack-01
                                                   :ARG1 c28-11))))

# ::snt As a Muslim I condemn this attack at the same time must point out that no one should disrespect other peoples religion.
# ::tokens ["As", "a", "Muslim", "I", "condemn", "this", "attack", "at", "the", "same", "time", "must", "point", "out", "that", "no", "one", "should", "disrespect", "other", "peoples", "religion", "."]
# ::lemmas ["as", "a", "Muslim", "i", "condemn", "this", "attack", "at", "the", "same", "time", "must", "point", "out", "that", "no", "one", "should", "disrespect", "other", "people", "religion", "."]
(c29-1 / obligate-01
       :ARG1 (c29-9 / condemn-01
                    :ARG0 (c29-3 / i
                                 :mod (c29-8 / religious-group
                                             :name (c29-5 / name
                                                          :op1 "Muslim")))
                    :ARG1 (c29-15 / attack-01
                                  :mod (c29-13 / this))
                    :time (c29-11 / time
                                  :ARG1-of (c29-12 / same-01)))
       :ARG2 (c29-7 / point-out-02
                    :ARG0 c29-3
                    :ARG1 (c29-4 / recommend-01
                                 :ARG1 (c29-10 / disrespect-01
                                               :ARG0 (c29-6 / no-one)
                                               :ARG1 (c29-2 / religion
                                                            :poss (c29-14 / person
                                                                          :mod (c29-0 / other)))))))

# ::snt - Rest well, Mr Merabet....
# ::tokens ["-", "Rest", "well", ",", "Mr", "Merabet", "...."]
# ::lemmas ["-", "rest", "well", ",", "Mr", "Merabet", "...."]
(c30-4 / say-01
       :ARG1 (c30-3 / rest-01
                    :ARG1 (c30-2 / person
                                 :name (c30-1 / name
                                              :op1 "Mr"
                                              :op2 "Merabet"))
                    :mod (c30-0 / well))
       :ARG2 c30-2)

# ::snt Its perfectly reasonable to criticize these maniacs beliefs but only without scapegoating the rest.
# ::tokens ["Its", "perfectly", "reasonable", "to", "criticize", "these", "maniacs", "beliefs", "but", "only", "without", "scapegoating", "the", "rest", "."]
# ::lemmas ["its", "perfectly", "reasonable", "to", "criticize", "these", "maniacs", "belief", "but", "only", "without", "scapegoate", "the", "rest", "."]
(c31-5 / reasonable-02
       :ARG1 (c31-6 / criticize-01
                    :ARG1 (c31-1 / believe-01
                                 :ARG0 (c31-0 / maniac
                                              :mod (c31-8 / this)))
                    :manner (c31-7 / scapegoat-01
                                   :ARG1 (c31-3 / rest)
                                   :mod (c31-2 / only)
                                   :polarity -))
       :ARG1-of (c31-4 / perfect-02))

# ::snt Brutal
# ::tokens ["Brutal"]
# ::lemmas ["Brutal"]
(c32-0 / Brutal)

# ::snt ppl put to death by the Egyptian government - for protesting. The west backs that man.
# ::tokens ["ppl", "put", "to", "death", "by", "the", "Egyptian", "government", "-", "for", "protesting", ".", "The", "west", "backs", "that", "man", "."]
# ::lemmas ["ppl", "put", "to", "death", "by", "the", "Egyptian", "government", "-", "for", "protest", ".", "the", "west", "back", "that", "man", "."]
(c33-1 / multi-sentence
       :snt1 (c33-6 / put-03
                    :ARG0 (c33-9 / government-organization
                                 :ARG0-of (c33-7 / govern-01
                                                 :ARG1 (c33-8 / country
                                                              :name (c33-4 / name
                                                                           :op1 "Egypt"))))
                    :ARG1 (c33-15 / person
                                  :name (c33-5 / name
                                               :op1 "ppl"))
                    :ARG2 (c33-10 / die-01)
                    :ARG1-of (c33-11 / cause-01
                                     :ARG0 (c33-2 / protest-01
                                                  :ARG0 c33-15)))
       :snt2 (c33-3 / back-01
                    :ARG0 (c33-0 / world-region
                                 :name (c33-12 / name
                                               :op1 "West"))
                    :ARG1 (c33-13 / man
                                  :mod (c33-14 / that))))

# ::snt And your point is?
# ::tokens ["And", "your", "point", "is", "?"]
# ::lemmas ["and", "your", "point", "be", "?"]
(c34-3 / and
       :op2 (c34-1 / point-04
                   :ARG0 (c34-0 / you)
                   :ARG1 (c34-2 / amr-unknown)))

# ::snt You do know there are hundreds of thousads of muslims inside the police forces and military?
# ::tokens ["You", "do", "know", "there", "are", "hundreds", "of", "thousads", "of", "muslims", "inside", "the", "police", "forces", "and", "military", "?"]
# ::lemmas ["you", "do", "know", "there", "be", "hundreds", "of", "thousad", "of", "muslims", "inside", "the", "police", "force", "and", "military", "?"]
(c35-9 / know-01
       :ARG0 (c35-0 / you)
       :ARG1 (c35-3 / be-located-at-91
                    :ARG1 (c35-6 / person
                                 :mod (c35-7 / religious-group
                                             :name (c35-5 / name
                                                          :op1 "Islam"))
                                 :quant (c35-2 / multiple
                                               :op1 100000))
                    :ARG2 (c35-11 / and
                                  :op1 (c35-1 / force
                                              :mod (c35-10 / police))
                                  :op2 (c35-8 / military
                                              :mod c35-10)))
       :polarity (c35-4 / amr-unknown))
