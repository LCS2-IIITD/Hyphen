# ::snt please say that on TV!!!
# ::tokens ["please", "say", "that", "on", "TV", "!", "!", "!"]
# ::lemmas ["please", "say", "that", "on", "tv", "!", "!", "!"]
(c1-0 / say-01
      :ARG0 (c1-1 / you)
      :ARG1 (c1-2 / that)
      :medium (c1-3 / television)
      :mode imperative
      :polite +)

# ::snt Same media his cops were ordering away from the military action area and shutting down their communications.
# ::tokens ["Same", "media", "his", "cops", "were", "ordering", "away", "from", "the", "military", "action", "area", "and", "shutting", "down", "their", "communications", "."]
# ::lemmas ["same", "medium", "his", "cop", "be", "order", "away", "from", "the", "military", "action", "area", "and", "shut", "down", "their", "communication", "."]
(c2-11 / and
       :op1 (c2-2 / order-01
                  :ARG0 (c2-8 / cop
                              :poss (c2-0 / he)
                              :ARG1-of c2-2)
                  :ARG2 (c2-4 / away
                              :op1 (c2-5 / area
                                         :location-of (c2-10 / act-02
                                                             :ARG0 (c2-1 / military)))))
       :op2 (c2-9 / shut-down-05
                  :ARG0 c2-8
                  :ARG1 (c2-7 / communicate-01
                              :ARG0 c2-8))
       :ARG1-of (c2-3 / same-01)
       :mod (c2-6 / media))

# ::snt Exactly what i thought...
# ::tokens ["Exactly", "what", "i", "thought", "..."]
# ::lemmas ["exactly", "what", "i", "think", "..."]
(c3-1 / thing
      :ARG1-of (c3-3 / think-01
                     :ARG0 (c3-2 / i)
                     :manner (c3-0 / exact)))

# ::snt . Answer: because cops tipped friendly press off, so they would have reason to release it and muddy the waters for the cop.
# ::tokens [".", "Answer", ":", "because", "cops", "tipped", "friendly", "press", "off", ",", "so", "they", "would", "have", "reason", "to", "release", "it", "and", "muddy", "the", "waters", "for", "the", "cop", "."]
# ::lemmas [".", "answer", ":", "because", "cop", "tip", "friendly", "press", "off", ",", "so", "they", "would", "have", "reason", "to", "release", "it", "and", "muddy", "the", "water", "for", "the", "cop", "."]
(c4-13 / answer-01
       :ARG2 (c4-9 / cause-01
                   :ARG0 (c4-12 / tip-off-02
                                :ARG0 (c4-8 / cop)
                                :ARG1 (c4-7 / press
                                            :ARG1-of (c4-2 / friendly-01)))
                   :ARG1 (c4-0 / have-03
                               :ARG0 c4-7
                               :ARG1 (c4-10 / reason
                                            :ARG0-of c4-9
                                            :ARG1 (c4-4 / and
                                                        :op1 (c4-6 / release-01
                                                                   :ARG0 c4-7
                                                                   :ARG1 (c4-5 / it))
                                                        :op2 (c4-3 / muddy-01
                                                                   :ARG0 c4-7
                                                                   :ARG1 (c4-1 / water)
                                                                   :beneficiary (c4-11 / cop)))))))

# ::snt He could use some mentoring from Capt Johnson for sure..
# ::tokens ["He", "could", "use", "some", "mentoring", "from", "Capt", "Johnson", "for", "sure", ".."]
# ::lemmas ["he", "could", "use", "some", "mentor", "from", "Capt", "Johnson", "for", "sure", ".."]
(c5-5 / possible-01
      :ARG1 (c5-2 / use-01
                  :ARG0 (c5-0 / he)
                  :ARG1 (c5-1 / mentor-01
                              :ARG0 (c5-8 / person
                                          :name (c5-4 / name
                                                      :op1 "Johnson")
                                          :ARG0-of (c5-9 / have-org-role-91
                                                         :ARG2 (c5-6 / captain)))
                              :ARG1 c5-0
                              :quant (c5-7 / some)))
      :ARG1-of (c5-3 / sure-02))

# ::snt . I watched, couldn't hear questions. But, media not present cld have asked him. Still...good question to press.
# ::tokens [".", "I", "watched", ",", "could", "n't", "hear", "questions", ".", "But", ",", "media", "not", "present", "cld", "have", "asked", "him", ".", "Still", "...", "good", "question", "to", "press", "."]
# ::lemmas [".", "i", "watch", ",", "could", "not", "hear", "question", ".", "but", ",", "medium", "not", "present", "cld", "have", "ask", "he", ".", "still", "...", "good", "question", "to", "press", "."]
(c6-3 / multi-sentence
      :snt1 (c6-15 / and
                   :op1 (c6-1 / watch-01
                              :ARG0 (c6-7 / i))
                   :op2 (c6-8 / possible-01
                              :ARG1 (c6-0 / hear-01
                                          :ARG0 c6-7
                                          :ARG1 (c6-5 / question-01))
                              :polarity -))
      :snt2 (c6-10 / contrast-01
                   :ARG2 (c6-6 / ask-01
                               :ARG0 (c6-9 / media
                                           :ARG1-of (c6-14 / present-02))
                               :ARG2 (c6-2 / he)
                               :polarity -))
      :snt3 (c6-13 / question-01
                   :ARG1-of (c6-11 / good-02)
                   :ARG2 (c6-4 / press)
                   :mod (c6-12 / still)))

# ::snt please stop pretendg you didnt feel video's terror of store clerk thats not.helping
# ::tokens ["please", "stop", "pretendg", "you", "did", "nt", "feel", "video", "'s", "terror", "of", "store", "clerk", "that", "s", "not.helping"]
# ::lemmas ["please", "stop", "pretendg", "you", "do", "not", "feel", "video", "'s", "terror", "of", "store", "clerk", "that", "s", "not.helpe"]
(c7-3 / multi-sentence
      :snt1 (c7-8 / stop-01
                  :ARG0 (c7-1 / you)
                  :ARG1 (c7-6 / pretend-01
                              :ARG0 c7-1
                              :ARG1 (c7-2 / feel-01
                                          :ARG0 c7-1
                                          :ARG1 (c7-9 / terror-02
                                                      :ARG0 (c7-5 / video)
                                                      :ARG1 (c7-10 / person
                                                                   :ARG0-of (c7-7 / clerk-01
                                                                                  :ARG1 (c7-4 / store))))
                                          :polarity -))
                  :polite +
                  :mode imperative)
      :snt2 (c7-0 / help-01))

# ::snt Press conference just now by police chief.
# ::tokens ["Press", "conference", "just", "now", "by", "police", "chief", "."]
# ::lemmas ["press", "conference", "just", "now", "by", "police", "chief", "."]
(c8-6 / conference
      :mod (c8-4 / press)
      :time (c8-3 / now
                  :mod (c8-0 / just))
      :ARG1-of (c8-1 / have-org-role-91
                     :ARG0 (c8-7 / person)
                     :ARG2 (c8-5 / chief
                                 :topic (c8-2 / police))))

# ::snt this bullshit is falling off a cliff
# ::tokens ["this", "bullshit", "is", "falling", "off", "a", "cliff"]
# ::lemmas ["this", "bullshit", "be", "fall", "off", "a", "cliff"]
(c9-1 / fall-01
      :ARG1 (c9-3 / bullshit
                  :mod (c9-2 / this))
      :ARG4 (c9-0 / cliff))

# ::snt This guy is full of it. I dont trust anyone from that police force.
# ::tokens ["This", "guy", "is", "full", "of", "it", ".", "I", "do", "nt", "trust", "anyone", "from", "that", "police", "force", "."]
# ::lemmas ["this", "guy", "be", "full", "of", "it", ".", "i", "do", "not", "trust", "anyone", "from", "that", "police", "force", "."]
(c10-1 / multi-sentence
       :snt1 (c10-0 / fill-01
                    :ARG1 (c10-7 / guy
                                 :mod (c10-10 / this))
                    :ARG2 (c10-3 / it))
       :snt2 (c10-9 / trust-02
                    :ARG0 (c10-8 / i)
                    :ARG1 (c10-11 / anyone
                                  :ARG1-of (c10-2 / include-91
                                                  :ARG2 (c10-4 / force
                                                               :mod (c10-6 / police)
                                                               :mod (c10-5 / that))))
                    :polarity -))

# ::snt : the media didn't even know the video existed, but he just said they requested it? DUDE. exactly
# ::tokens [":", "the", "media", "did", "n't", "even", "know", "the", "video", "existed", ",", "but", "he", "just", "said", "they", "requested", "it", "?", "DUDE", ".", "exactly"]
# ::lemmas [":", "the", "medium", "do", "not", "even", "know", "the", "video", "exist", ",", "but", "he", "just", "say", "they", "request", "it", "?", "DUDE", ".", "exactly"]
(c11-3 / multi-sentence
       :snt1 (c11-9 / contrast-01
                    :ARG1 (c11-12 / know-01
                                  :ARG0 (c11-7 / media)
                                  :ARG1 (c11-5 / exist-01
                                               :ARG1 (c11-6 / video))
                                  :mod (c11-4 / even)
                                  :polarity -)
                    :ARG2 (c11-11 / say-01
                                  :ARG0 (c11-0 / he)
                                  :ARG1 (c11-8 / request-01
                                               :ARG0 c11-7
                                               :ARG1 c11-6)
                                  :mod (c11-1 / just)))
       :snt2 (c11-10 / duDE
                     :mod (c11-2 / exact)))

# ::snt This guy tweeted about what Mike did.
# ::tokens ["This", "guy", "tweeted", "about", "what", "Mike", "did", "."]
# ::lemmas ["this", "guy", "tweet", "about", "what", "Mike", "do", "."]
(c12-6 / tweet-02
       :ARG0 (c12-4 / guy
                    :mod (c12-5 / this))
       :ARG1 (c12-1 / thing
                    :ARG1-of (c12-3 / do-02
                                    :ARG0 (c12-2 / person
                                                 :name (c12-0 / name
                                                              :op1 "Mike")))))

# ::snt Media knew. Talk of a related robbery has been around since the first day.
# ::tokens ["Media", "knew", ".", "Talk", "of", "a", "related", "robbery", "has", "been", "around", "since", "the", "first", "day", "."]
# ::lemmas ["medium", "know", ".", "talk", "of", "a", "relate", "robbery", "have", "be", "around", "since", "the", "first", "day", "."]
(c13-0 / multi-sentence
       :snt1 (c13-2 / know-01
                    :ARG0 (c13-4 / media))
       :snt2 (c13-8 / talk-01
                    :ARG1 (c13-5 / rob-01
                                 :ARG1-of (c13-3 / relate-01))
                    :location (c13-9 / around)
                    :time (c13-7 / since
                                 :op1 (c13-6 / day
                                             :ord (c13-1 / ordinal-entity
                                                         :value 1)))))

# ::snt he didn't deserve to die. Period. This is foolery
# ::tokens ["he", "did", "n't", "deserve", "to", "die", ".", "Period", ".", "This", "is", "foolery"]
# ::lemmas ["he", "do", "not", "deserve", "to", "die", ".", "period", ".", "this", "be", "foolery"]
(c14-3 / multi-sentence
       :snt1 (c14-5 / deserve-01
                    :ARG0 (c14-0 / he)
                    :ARG1 (c14-1 / die-01
                                 :ARG1 c14-0)
                    :polarity -)
       :snt2 (c14-4 / period)
       :snt3 (c14-2 / foolery
                    :domain (c14-6 / this)))

# ::snt can you say "cover up!")
# ::tokens ["can", "you", "say", "\"", "cover", "up", "!", "\"", ")"]
# ::lemmas ["can", "you", "say", "\"", "cover", "up", "!", "\"", ")"]
(c15-1 / possible-01
       :polarity (c15-4 / amr-unknown)
       :ARG1 (c15-3 / say-01
                    :ARG0 (c15-0 / you)
                    :ARG1 (c15-2 / cover-up-04)))

# ::snt the media didn't even know the video existed, but he just said they requested it? DUDE.
# ::tokens ["the", "media", "did", "n't", "even", "know", "the", "video", "existed", ",", "but", "he", "just", "said", "they", "requested", "it", "?", "DUDE", "."]
# ::lemmas ["the", "medium", "do", "not", "even", "know", "the", "video", "exist", ",", "but", "he", "just", "say", "they", "request", "it", "?", "DUDE", "."]
(c16-2 / multi-sentence
       :snt1 (c16-8 / contrast-01
                    :ARG1 (c16-11 / know-01
                                  :ARG0 (c16-6 / media)
                                  :ARG1 (c16-4 / exist-01
                                               :ARG1 (c16-5 / video))
                                  :mod (c16-3 / even)
                                  :polarity -)
                    :ARG2 (c16-10 / say-01
                                  :ARG0 (c16-0 / he)
                                  :ARG1 (c16-7 / request-01
                                               :ARG0 c16-6
                                               :ARG1 c16-5)
                                  :mod (c16-1 / just)))
       :snt2 (c16-9 / duDE
                    :mode expressive))

# ::snt That's what I said...how can the media request something that they don't even know is related to a homicide?
# ::tokens ["That", "'s", "what", "I", "said", "...", "how", "can", "the", "media", "request", "something", "that", "they", "do", "n't", "even", "know", "is", "related", "to", "a", "homicide", "?"]
# ::lemmas ["that", "be", "what", "i", "say", "...", "how", "can", "the", "medium", "request", "something", "that", "they", "do", "not", "even", "know", "be", "relate", "to", "a", "homicide", "?"]
(c17-1 / multi-sentence
       :snt1 (c17-10 / say-01
                     :ARG0 (c17-4 / i)
                     :ARG1 (c17-11 / that))
       :snt2 (c17-7 / possible-01
                    :ARG1 (c17-8 / request-01
                                 :ARG0 (c17-9 / media)
                                 :ARG1 (c17-2 / something
                                              :ARG1-of (c17-5 / relate-01
                                                              :ARG2 (c17-0 / homicide)
                                                              :ARG1-of (c17-6 / know-01
                                                                              :ARG0 c17-9
                                                                              :mod (c17-3 / even)
                                                                              :polarity -)))
                                 :manner (c17-12 / amr-unknown))))

# ::snt . How did you learn media didn't know of video?
# ::tokens [".", "How", "did", "you", "learn", "media", "did", "n't", "know", "of", "video", "?"]
# ::lemmas [".", "how", "do", "you", "learn", "medium", "do", "not", "know", "of", "video", "?"]
(c18-1 / learn-01
       :ARG0 (c18-0 / you)
       :ARG1 (c18-4 / know-01
                    :ARG0 (c18-2 / media)
                    :ARG1 (c18-3 / video)
                    :polarity -)
       :manner (c18-5 / amr-unknown))

# ::snt Not buying it. Nope. : the media didn't even know the video existed, but he just said they requested it? DUDE.
# ::tokens ["Not", "buying", "it", ".", "Nope", ".", ":", "the", "media", "did", "n't", "even", "know", "the", "video", "existed", ",", "but", "he", "just", "said", "they", "requested", "it", "?", "DUDE", "."]
# ::lemmas ["not", "buy", "it", ".", "nope", ".", ":", "the", "medium", "do", "not", "even", "know", "the", "video", "exist", ",", "but", "he", "just", "say", "they", "request", "it", "?", "DUDE", "."]
(c19-2 / multi-sentence
       :snt1 (c19-3 / buy-05
                    :ARG1 (c19-6 / it)
                    :polarity -)
       :snt2 (c19-7 / nope)
       :snt3 (c19-11 / contrast-01
                     :ARG1 (c19-13 / know-01
                                   :ARG0 (c19-9 / media)
                                   :ARG1 (c19-5 / exist-01
                                                :ARG1 (c19-8 / video))
                                   :mod (c19-4 / even)
                                   :polarity -)
                     :ARG2 (c19-12 / say-01
                                   :ARG0 (c19-0 / he)
                                   :ARG1 (c19-10 / request-01
                                                 :ARG0 c19-9
                                                 :ARG1 c19-8))
                     :mod (c19-1 / just)
                     :polarity (c19-14 / amr-unknown)))
