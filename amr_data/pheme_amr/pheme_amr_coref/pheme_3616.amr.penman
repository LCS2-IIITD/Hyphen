# ::snt and Capt Coon Johnsin just consigned their BS praising the gov
# ::tokens ["and", "Capt", "Coon", "Johnsin", "just", "consigned", "their", "BS", "praising", "the", "gov"]
# ::lemmas ["and", "Capt", "Coon", "Johnsin", "just", "consign", "their", "BS", "praise", "the", "gov"]
(c1-10 / and
       :op2 (c1-6 / consign-01
                  :ARG0 (c1-4 / person
                              :name (c1-3 / name
                                          :op1 "Coon"
                                          :op2 "Johnsin")
                              :ARG0-of (c1-0 / have-org-role-91
                                             :ARG2 (c1-5 / captain)))
                  :ARG1 (c1-2 / bullshit-01
                              :ARG0 c1-4
                              :ARG1 (c1-9 / praise-01
                                          :ARG0 c1-4
                                          :ARG1 (c1-7 / government-organization
                                                      :ARG0-of (c1-8 / govern-01))))
                  :mod (c1-1 / just)))

# ::snt sure do.. Capt Coon is good. When the sis wanted answers he ended the press conf
# ::tokens ["sure", "do", "..", "Capt", "Coon", "is", "good", ".", "When", "the", "sis", "wanted", "answers", "he", "ended", "the", "press", "conf"]
# ::lemmas ["sure", "do", "..", "Capt", "Coon", "be", "good", ".", "when", "the", "sis", "want", "answer", "he", "end", "the", "press", "conf"]
(c2-2 / multi-sentence
      :snt1 (c2-12 / sure-02)
      :snt2 (c2-11 / good-02
                   :ARG1 (c2-8 / person
                               :name (c2-6 / name
                                           :op1 "Coon")
                               :ARG0-of (c2-0 / have-org-role-91
                                              :ARG2 (c2-10 / captain))))
      :snt3 (c2-4 / end-01
                  :ARG0 (c2-15 / he)
                  :ARG1 (c2-9 / conf
                              :mod (c2-14 / press))
                  :time (c2-1 / want-01
                              :ARG0 (c2-3 / person
                                          :ARG0-of (c2-7 / have-rel-role-91
                                                         :ARG2 (c2-5 / sister)))
                              :ARG1 (c2-13 / answer-01))))

# ::snt They wanted u believe that was a criminal, a criminal, a thief, &amp; now
# ::tokens ["They", "wanted", "u", "believe", "that", "was", "a", "criminal", ",", "a", "criminal", ",", "a", "thief", ",", "&", "amp", ";", "now"]
# ::lemmas ["they", "want", "u", "believe", "that", "be", "a", "criminal", ",", "a", "criminal", ",", "a", "thief", ",", "&", "amp", ";", "now"]
(c3-2 / multi-sentence
      :snt1 (c3-0 / want-01
                  :ARG0 (c3-12 / they)
                  :ARG1 (c3-4 / believe-01
                              :ARG0 (c3-1 / you)
                              :ARG1 (c3-14 / and
                                           :op1 (c3-7 / person
                                                      :ARG2-of (c3-9 / criminal-03))
                                           :op2 (c3-13 / person
                                                       :ARG2-of (c3-8 / criminal-03))
                                           :op3 (c3-3 / person
                                                      :ARG0-of (c3-11 / steal-01))
                                           :op4 (c3-5 / et-cetera)
                                           :domain (c3-10 / that))))
      :snt2 (c3-6 / now))

# ::snt being black has always been a crime in america
# ::tokens ["being", "black", "has", "always", "been", "a", "crime", "in", "america"]
# ::lemmas ["be", "black", "have", "always", "be", "a", "crime", "in", "america"]
(c4-3 / crime-02
      :ARG1 (c4-0 / black-05)
      :location (c4-2 / country
                      :name (c4-1 / name
                                  :op1 "America"))
      :time (c4-4 / always))

# ::snt And a drunk. They said was a drunk. *eyeroll*
# ::tokens ["And", "a", "drunk", ".", "They", "said", "was", "a", "drunk", ".", "*", "eyeroll", "*"]
# ::lemmas ["and", "a", "drunk", ".", "they", "say", "be", "a", "drunk", ".", "*", "eyeroll", "*"]
(c5-1 / multi-sentence
      :snt1 (c5-5 / and
                  :op2 (c5-2 / drunk))
      :snt2 (c5-3 / say-01
                  :ARG0 (c5-4 / they)
                  :ARG1 (c5-0 / drunk)))

# ::snt The stuttering. The nervousness. The incoherency... The truth will set them free. Admit when you're wrong and deal with it.
# ::tokens ["The", "stuttering", ".", "The", "nervousness", ".", "The", "incoherency", "...", "The", "truth", "will", "set", "them", "free", ".", "Admit", "when", "you", "'re", "wrong", "and", "deal", "with", "it", "."]
# ::lemmas ["the", "stuttering", ".", "the", "nervousness", ".", "the", "incoherency", "...", "the", "truth", "will", "set", "they", "free", ".", "admit", "when", "you", "be", "wrong", "and", "deal", "with", "it", "."]
(c6-3 / multi-sentence
      :snt1 (c6-13 / and
                   :op1 (c6-11 / stutter-01)
                   :op2 (c6-6 / nervous-01)
                   :op3 (c6-9 / cohere-01
                              :polarity -)
                   :op4 (c6-4 / set-02
                              :ARG0 (c6-12 / truth)
                              :ARG1 (c6-10 / they)
                              :ARG2 (c6-2 / free-04
                                          :ARG1 c6-10)))
      :snt2 (c6-5 / and
                  :op1 (c6-7 / admit-01
                             :ARG0 (c6-0 / you)
                             :time (c6-1 / wrong-04
                                         :ARG1 c6-0)
                             :mode imperative)
                  :op2 (c6-8 / deal-01
                             :ARG0 c6-0
                             :ARG2 c6-1
                             :mode imperative)))

# ::snt Lets Start a real movement for everywhere.Make a trending Topic guys.
# ::tokens ["Lets", "Start", "a", "real", "movement", "for", "everywhere", ".", "Make", "a", "trending", "Topic", "guys", "."]
# ::lemmas ["Lets", "start", "a", "real", "movement", "for", "everywhere", ".", "make", "a", "trend", "topic", "guy", "."]
(c7-2 / multi-sentence
      :snt1 (c7-8 / start-01
                  :ARG0 (c7-0 / we)
                  :ARG1 (c7-4 / movement-07
                              :ARG1-of (c7-5 / real-04)
                              :beneficiary (c7-3 / everywhere))
                  :mode imperative)
      :snt2 (c7-1 / make-01
                  :ARG0 (c7-6 / guy)
                  :ARG1 (c7-9 / Topic
                              :ARG1-of (c7-7 / trending-02))
                  :mode imperative))

# ::snt my thoughts exactly but the terrorists police and terrorist whit ppl who take the law in their own hands r saints...wth
# ::tokens ["my", "thoughts", "exactly", "but", "the", "terrorists", "police", "and", "terrorist", "whit", "ppl", "who", "take", "the", "law", "in", "their", "own", "hands", "r", "saints", "...", "wth"]
# ::lemmas ["my", "thought", "exactly", "but", "the", "terrorist", "police", "and", "terrorist", "whit", "ppl", "who", "take", "the", "law", "in", "their", "own", "hand", "r", "saint", "...", "wth"]
(c8-11 / think-01
       :ARG0 (c8-4 / i)
       :ARG1 (c8-7 / contrast-01
                   :ARG1 (c8-12 / and
                                :op1 (c8-6 / police
                                           :mod (c8-9 / terrorist))
                                :op2 (c8-5 / terrorist
                                           :mod (c8-0 / whit))
                                :ARG0-of (c8-3 / take-04
                                               :ARG1 (c8-1 / law)
                                               :ARG2 (c8-8 / in-ones-hands-04
                                                           :ARG0 c8-5
                                                           :ARG1 c8-1)))
                   :ARG2 (c8-10 / saint
                                :domain c8-12))
       :mod (c8-2 / exact))

# ::snt If we don't know what time it is, our enemies do. They play the stick &amp; carrot game quite well.
# ::tokens ["If", "we", "do", "n't", "know", "what", "time", "it", "is", ",", "our", "enemies", "do", ".", "They", "play", "the", "stick", "&", "amp", ";", "carrot", "game", "quite", "well", "."]
# ::lemmas ["if", "we", "do", "not", "know", "what", "time", "it", "be", ",", "our", "enemy", "do", ".", "they", "play", "the", "stick", "&", "amp", ";", "carrot", "game", "quite", "well", "."]
(c9-2 / multi-sentence
      :snt1 (c9-9 / do-02
                  :ARG0 (c9-8 / person
                              :ARG0-of (c9-0 / have-rel-role-91
                                             :ARG1 (c9-1 / we)
                                             :ARG2 (c9-3 / enemy)))
                  :condition (c9-14 / know-01
                                    :ARG0 c9-1
                                    :ARG1 (c9-13 / time
                                                 :time-of (c9-6 / it))
                                    :polarity -))
      :snt2 (c9-15 / play-01
                   :ARG0 (c9-12 / they)
                   :ARG1 (c9-16 / and
                                :op1 (c9-11 / stick)
                                :op2 (c9-5 / amp))
                   :ARG1-of (c9-7 / well-09
                                  :degree (c9-4 / quite))
                   :mod (c9-10 / carrot)))

# ::snt It's Chapter in the murderer's guide to getting away. Chapter - "Went for my gun"
# ::tokens ["It", "'s", "Chapter", "in", "the", "murderer", "'s", "guide", "to", "getting", "away", ".", "Chapter", "-", "\"", "Went", "for", "my", "gun", "\""]
# ::lemmas ["it", "be", "chapter", "in", "the", "murderer", "'s", "guide", "to", "get", "away", ".", "chapter", "-", "\"", "go", "for", "my", "gun", "\""]
(c10-1 / multi-sentence
       :snt1 (c10-6 / chapter
                    :location (c10-7 / guide-01
                                     :ARG0 (c10-4 / person
                                                  :ARG0-of (c10-5 / murder-01))
                                     :ARG1 (c10-8 / get-05
                                                  :ARG2 (c10-11 / away))))
       :snt2 (c10-9 / chapter
                    :ARG1-of (c10-0 / mean-01
                                    :ARG2 (c10-3 / go-02
                                                 :ARG0 (c10-2 / i)
                                                 :ARG4 (c10-10 / gun
                                                               :poss c10-2)))))

# ::snt when you're dead they make you a crimminal. While alive,men of color are given criminal records,so as never to be productive.
# ::tokens ["when", "you", "'re", "dead", "they", "make", "you", "a", "crimminal", ".", "While", "alive", ",", "men", "of", "color", "are", "given", "criminal", "records", ",", "so", "as", "never", "to", "be", "productive", "."]
# ::lemmas ["when", "you", "be", "dead", "they", "make", "you", "a", "crimminal", ".", "while", "alive", ",", "man", "of", "color", "be", "give", "criminal", "record", ",", "so", "as", "never", "to", "be", "productive", "."]
(c11-2 / multi-sentence
       :snt1 (c11-5 / make-02
                    :ARG0 (c11-13 / they)
                    :ARG1 (c11-7 / criminal-03
                                 :ARG2 (c11-0 / you))
                    :time (c11-6 / die-01
                                 :ARG1 c11-0))
       :snt2 (c11-8 / give-01
                    :ARG1 (c11-9 / record-01
                                 :ARG1 (c11-10 / crime-02))
                    :ARG2 (c11-1 / man
                                 :mod (c11-11 / color))
                    :time (c11-3 / live-01
                                 :ARG0 (c11-15 / you))
                    :ARG0-of (c11-14 / cause-01
                                     :ARG1 (c11-12 / productive-03
                                                   :ARG0 c11-1
                                                   :time (c11-4 / ever)
                                                   :polarity -))))

# ::snt ..And Oscar Grant..and Amoudou Diallo...and..and..and
# ::tokens ["..", "And", "Oscar", "Grant", "..", "and", "Amoudou", "Diallo", "...", "and", "..", "and", "..", "and"]
# ::lemmas ["..", "and", "Oscar", "Grant", "..", "and", "Amoudou", "Diallo", "...", "and", "..", "and", "..", "and"]
(c12-4 / and
       :op2 (c12-2 / person
                   :name (c12-0 / name
                                :op1 "Oscar"
                                :op2 "Grant"))
       :op3 (c12-3 / person
                   :name (c12-1 / name
                                :op1 "Amoudou"
                                :op2 "Diallo"))
       :op4 c12-4)

# ::snt Not having it if the World is Stupid I AM not they have to find things to say or they don't have a Reason to Kill the Child!
# ::tokens ["Not", "having", "it", "if", "the", "World", "is", "Stupid", "I", "AM", "not", "they", "have", "to", "find", "things", "to", "say", "or", "they", "do", "n't", "have", "a", "Reason", "to", "Kill", "the", "Child", "!"]
# ::lemmas ["not", "have", "it", "if", "the", "World", "be", "stupid", "i", "be", "not", "they", "have", "to", "find", "thing", "to", "say", "or", "they", "do", "not", "have", "a", "Reason", "to", "kill", "the", "Child", "!"]
(c13-5 / or
       :op1 (c13-2 / obligate-01
                   :ARG1 (c13-16 / they)
                   :ARG2 (c13-3 / find-01
                                :ARG0 c13-16
                                :ARG1 (c13-13 / thing
                                              :ARG1-of (c13-14 / say-01))))
       :op2 (c13-4 / obligate-01
                   :ARG1 c13-16
                   :ARG2 (c13-0 / have-03
                                :ARG0 c13-16
                                :ARG1 (c13-9 / reason
                                             :ARG0-of (c13-10 / cause-01
                                                              :ARG1 (c13-8 / kill-01
                                                                           :ARG0 c13-16
                                                                           :ARG1 (c13-11 / child)))))
                   :polarity -)
       :condition (c13-6 / stupid
                         :domain (c13-1 / world))
       :ARG1-of (c13-15 / contrast-01
                        :ARG2 (c13-17 / have-03
                                      :ARG0 (c13-7 / i)
                                      :ARG1 (c13-12 / it)
                                      :polarity -)))

# ::snt Zimmerman got away with murder! That set the stage for Copy Cats and it's been an assault on people of color since.
# ::tokens ["Zimmerman", "got", "away", "with", "murder", "!", "That", "set", "the", "stage", "for", "Copy", "Cats", "and", "it", "'s", "been", "an", "assault", "on", "people", "of", "color", "since", "."]
# ::lemmas ["Zimmerman", "get", "away", "with", "murder", "!", "that", "set", "the", "stage", "for", "Copy", "Cats", "and", "it", "be", "be", "an", "assault", "on", "people", "of", "color", "since", "."]
(c14-1 / multi-sentence
       :snt1 (c14-10 / get-away-08
                     :ARG0 (c14-7 / person
                                  :name (c14-5 / name
                                               :op1 "Zimmerman"))
                     :ARG1 (c14-8 / murder-01
                                  :ARG0 c14-7))
       :snt2 (c14-14 / and
                     :op1 (c14-11 / set-14
                                  :ARG0 (c14-12 / that)
                                  :ARG1 (c14-3 / stage)
                                  :beneficiary (c14-2 / broadcast-program
                                                      :name (c14-6 / name
                                                                   :op1 "Copy"
                                                                   :op2 "Cats")))
                     :op2 (c14-4 / assault-01
                                 :ARG1 (c14-13 / person
                                               :mod (c14-9 / color))
                                 :time (c14-0 / since))))

# ::snt if youre not law enforcement then you are in the mind of a cop a criminal or other but not above or = to police.
# ::tokens ["if", "you", "re", "not", "law", "enforcement", "then", "you", "are", "in", "the", "mind", "of", "a", "cop", "a", "criminal", "or", "other", "but", "not", "above", "or", "=", "to", "police", "."]
# ::lemmas ["if", "you", "re", "not", "law", "enforcement", "then", "you", "be", "in", "the", "mind", "of", "a", "cop", "a", "criminal", "or", "other", "but", "not", "above", "or", "=", "to", "police", "."]
(c15-2 / mind-05
       :ARG0 (c15-11 / cop)
       :ARG1 (c15-6 / or
                    :op1 (c15-9 / person
                                :ARG1-of (c15-10 / criminal-03))
                    :op2 (c15-14 / person
                                 :mod (c15-1 / other))
                    :domain (c15-0 / you)
                    :ARG1-of (c15-13 / contrast-01
                                     :ARG2 (c15-4 / or
                                                  :op1 (c15-5 / be-located-at-91
                                                              :ARG1 c15-0
                                                              :ARG2 (c15-15 / above)
                                                              :polarity -)
                                                  :op2 (c15-12 / be-located-at-91
                                                               :ARG1 c15-0
                                                               :ARG2 (c15-7 / police)
                                                               :polarity -))))
       :condition (c15-8 / enforce-01
                         :ARG0 c15-0
                         :ARG1 (c15-3 / law)
                         :polarity -))
