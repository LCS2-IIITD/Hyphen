# ::snt + shots fired- Military reservist confirmed dead, others injured, of shooters unknown.
# ::tokens ["+", "shots", "fired-", "Military", "reservist", "confirmed", "dead", ",", "others", "injured", ",", "of", "shooters", "unknown", "."]
# ::lemmas ["+", "shot", "fired-", "military", "reservist", "confirm", "dead", ",", "other", "injure", ",", "of", "shooter", "unknown", "."]
(c1-1 / multi-sentence
      :snt1 (c1-0 / fire-01
                  :ARG1 (c1-9 / shoot-02))
      :snt2 (c1-11 / and
                   :op1 (c1-6 / confirm-01
                              :ARG1 (c1-5 / die-01
                                          :ARG1 (c1-7 / reservist
                                                      :mod (c1-4 / military))))
                   :op2 (c1-3 / injure-01
                              :ARG1 (c1-2 / other))
                   :op3 (c1-8 / person
                              :ARG0-of c1-9)
                   :ARG1-of (c1-10 / know-01
                                   :polarity -)))

# ::snt psychopathic viruses called R danger every civil societyCivilized must support
# ::tokens ["psychopathic", "viruses", "called", "R", "danger", "every", "civil", "societyCivilized", "must", "support"]
# ::lemmas ["psychopathic", "virus", "call", "r", "danger", "every", "civil", "societycivilize", "must", "support"]
(c2-7 / call-01
      :ARG0 (c2-4 / virus
                  :mod (c2-5 / psychopathy))
      :ARG1 (c2-10 / string-entity
                   :value "R")
      :ARG2 (c2-6 / danger)
      :ARG1-of (c2-2 / support-01
                     :ARG0 (c2-0 / society
                                 :mod (c2-8 / civil)
                                 :mod (c2-3 / every)
                                 :ARG1-of (c2-9 / civilize-01))
                     :ARG2-of (c2-1 / obligate-01)))

# ::snt you should try that at venezuela......
# ::tokens ["you", "should", "try", "that", "at", "venezuela", "......"]
# ::lemmas ["you", "should", "try", "that", "at", "venezuela", "......"]
(c3-2 / recommend-01
      :ARG1 (c3-5 / try-01
                  :ARG0 (c3-0 / you)
                  :ARG1 (c3-4 / that)
                  :location (c3-3 / country
                                  :name (c3-1 / name
                                              :op1 "Venezuela")))
      :ARG2 c3-0)

# ::snt . Another: MT : Map of Ottawa spots where cops say shots fired
# ::tokens [".", "Another", ":", "MT", ":", "Map", "of", "Ottawa", "spots", "where", "cops", "say", "shots", "fired"]
# ::lemmas [".", "another", ":", "MT", ":", "Map", "of", "Ottawa", "spot", "where", "cop", "say", "shot", "fire"]
(c4-1 / multi-sentence
      :snt1 (c4-11 / another)
      :snt2 (c4-7 / map-01
                  :ARG1 (c4-10 / spot
                               :location (c4-9 / city
                                               :name (c4-5 / name
                                                           :op1 "Ottawa"))
                               :location-of (c4-0 / fire-01
                                                  :ARG1 (c4-4 / shoot-02)
                                                  :ARG1-of (c4-2 / say-01
                                                                 :ARG0 (c4-8 / cop))))
                  :source (c4-3 / state
                                :name (c4-6 / name
                                            :op1 "Montana"))))

# ::snt Map of three locations where police say shots have been fired rt
# ::tokens ["Map", "of", "three", "locations", "where", "police", "say", "shots", "have", "been", "fired", "rt"]
# ::lemmas ["Map", "of", "three", "location", "where", "police", "say", "shot", "have", "be", "fire", "rt"]
(c5-1 / map-01
      :ARG1 (c5-0 / location
                  :location-of (c5-5 / say-01
                                     :ARG0 (c5-4 / police)
                                     :ARG1 (c5-2 / fire-01
                                                 :ARG1 (c5-3 / shoot-02)))
                  :quant 3))

# ::snt : Map of three locations where police say shots have been fired
# ::tokens [":", "Map", "of", "three", "locations", "where", "police", "say", "shots", "have", "been", "fired"]
# ::lemmas [":", "Map", "of", "three", "location", "where", "police", "say", "shot", "have", "be", "fire"]
(c6-1 / map
      :topic (c6-0 / location
                   :location-of (c6-5 / say-01
                                      :ARG0 (c6-4 / police)
                                      :ARG1 (c6-2 / fire-01
                                                  :ARG1 (c6-3 / shoot-01)))
                   :quant 3))

# ::snt thank you for your coverage. Help keep the focus on the victims not the perpetrators.
# ::tokens ["thank", "you", "for", "your", "coverage", ".", "Help", "keep", "the", "focus", "on", "the", "victims", "not", "the", "perpetrators", "."]
# ::lemmas ["thank", "you", "for", "your", "coverage", ".", "help", "keep", "the", "focus", "on", "the", "victim", "not", "the", "perpetrator", "."]
(c7-3 / multi-sentence
      :snt1 (c7-10 / thank-01
                   :ARG1 (c7-1 / you)
                   :ARG2 (c7-8 / cover-03
                               :ARG0 c7-1))
      :snt2 (c7-0 / help-01
                  :ARG0 (c7-9 / you)
                  :ARG1 (c7-5 / keep-02
                              :ARG1 (c7-2 / focus-01
                                          :ARG2 (c7-4 / instead-of-91
                                                      :ARG1 (c7-6 / victim)
                                                      :ARG2 (c7-7 / person
                                                                  :ARG0-of (c7-11 / perpetrate-01)))))
                  :mode imperative))

# ::snt BBC calls it a shooting until they know it was brown people, then it will be a terrorist attack!
# ::tokens ["BBC", "calls", "it", "a", "shooting", "until", "they", "know", "it", "was", "brown", "people", ",", "then", "it", "will", "be", "a", "terrorist", "attack", "!"]
# ::lemmas ["BBC", "call", "it", "a", "shooting", "until", "they", "know", "it", "be", "brown", "people", ",", "then", "it", "will", "be", "a", "terrorist", "attack", "!"]
(c8-6 / call-01
      :ARG0 (c8-4 / publication
                  :name (c8-3 / name
                              :op1 "BBC"))
      :ARG1 (c8-2 / it)
      :ARG2 (c8-7 / shoot-02)
      :time (c8-0 / until
                  :op1 (c8-9 / know-01
                             :ARG0 c8-4
                             :ARG1 (c8-10 / person
                                          :mod (c8-1 / brown))))
      :ARG0-of (c8-5 / cause-01
                     :ARG1 (c8-11 / attack-01
                                  :ARG0 (c8-8 / terrorist)
                                  :domain c8-2)))
