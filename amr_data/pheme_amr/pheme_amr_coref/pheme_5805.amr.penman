# ::snt la foto del da, gente.
# ::tokens ["la", "foto", "del", "da", ",", "gente", "."]
# ::lemmas ["la", "foto", "del", "da", ",", "gente", "."]
(c1-6 / say-01
      :ARG0 (c1-3 / i)
      :ARG1 (c1-1 / foto
                  :mod (c1-4 / del
                             :op1 (c1-0 / da))
                  :mod (c1-2 / la))
      :ARG2 (c1-5 / gente))

# ::snt . RCMP request pics or vids of today's events in be submitted here
# ::tokens [".", "RCMP", "request", "pics", "or", "vids", "of", "today", "'s", "events", "in", "be", "submitted", "here"]
# ::lemmas [".", "RCMP", "request", "pic", "or", "vid", "of", "today", "'s", "event", "in", "be", "submit", "here"]
(c2-7 / request-01
      :ARG0 (c2-2 / organization
                  :name (c2-4 / name
                              :op1 "RCRC"))
      :ARG1 (c2-8 / submit-01
                  :ARG1 (c2-1 / or
                              :op1 (c2-6 / picture)
                              :op2 (c2-5 / video)
                              :topic (c2-3 / event
                                           :time (c2-9 / today))))
      :medium (c2-0 / here))

# ::snt :this is proof that as has been said, the Jihad ideaology has no borders! And ya cant stop it with bullets!
# ::tokens [":", "this", "is", "proof", "that", "as", "has", "been", "said", ",", "the", "Jihad", "ideaology", "has", "no", "borders", "!", "And", "ya", "ca", "nt", "stop", "it", "with", "bullets", "!"]
# ::lemmas [":", "this", "be", "proof", "that", "as", "have", "be", "say", ",", "the", "Jihad", "ideaology", "have", "no", "border", "!", "and", "ya", "can", "not", "stop", "it", "with", "bullet", "!"]
(c3-2 / multi-sentence
      :snt1 (c3-6 / prove-01
                  :ARG0 (c3-10 / this)
                  :ARG1 (c3-3 / border-01
                              :ARG1 (c3-5 / idea
                                          :mod (c3-0 / jihad))
                              :ARG1-of (c3-9 / say-01)
                              :polarity -))
      :snt2 (c3-12 / and
                   :op2 (c3-11 / possible-01
                               :ARG1 (c3-4 / stop-01
                                           :ARG0 (c3-1 / you)
                                           :ARG1 (c3-8 / it)
                                           :instrument (c3-7 / bullet))
                               :polarity -)))

# ::snt . Hope this touching wall of chairs is as militarized as we get in response to today's event, which is NOT a "new reality"
# ::tokens [".", "Hope", "this", "touching", "wall", "of", "chairs", "is", "as", "militarized", "as", "we", "get", "in", "response", "to", "today", "'s", "event", ",", "which", "is", "NOT", "a", "\"", "new", "reality", "\""]
# ::lemmas [".", "hope", "this", "touching", "wall", "of", "chair", "be", "as", "militarize", "as", "we", "get", "in", "response", "to", "today", "'s", "event", ",", "which", "be", "not", "a", "\"", "new", "reality", "\""]
(c4-0 / hope-01
      :ARG0 (c4-5 / i)
      :ARG1 (c4-2 / militarize-01
                  :ARG1 (c4-1 / wall
                              :consist-of (c4-11 / chair)
                              :ARG0-of (c4-13 / touch-01)
                              :mod (c4-12 / this))
                  :ARG2-of (c4-10 / respond-01
                                  :ARG1 (c4-4 / event
                                              :time (c4-8 / today)
                                              :mod (c4-6 / reality
                                                         :ARG1-of (c4-7 / new-01)
                                                         :polarity -)))
                  :ARG2-of (c4-14 / have-degree-91
                                  :ARG1 c4-1
                                  :ARG3 (c4-3 / equal)
                                  :ARG4 (c4-9 / we))))

# ::snt PLEASE SIGN &amp; RT UKFOLLOW
# ::tokens ["PLEASE", "SIGN", "&", "amp", ";", "RT", "UKFOLLOW"]
# ::lemmas ["please", "SIGN", "&", "amp", ";", "RT", "UKFOLLOW"]
(c5-5 / and
      :op1 (c5-3 / sign-01
                 :ARG0 (c5-0 / you)
                 :mode imperative
                 :polite +)
      :op2 (c5-4 / know-01
                 :ARG0 c5-0
                 :mode imperative
                 :polite +)
      :op3 (c5-1 / broadcast-program
                 :name (c5-2 / name
                             :op1 "RT"
                             :op2 "UKFOLLOW")))

# ::snt Soooo sad.
# ::tokens ["Soooo", "sad", "."]
# ::lemmas ["Soooo", "sad", "."]
(c7-0 / sad-02
      :degree (c7-1 / so))

# ::snt if only someone had shot back...
# ::tokens ["if", "only", "someone", "had", "shot", "back", "..."]
# ::lemmas ["if", "only", "someone", "have", "shoot", "back", "..."]
(c8-0 / have-condition-91
      :ARG2 (c8-4 / shoot-01
                  :ARG0 (c8-3 / someone)
                  :direction (c8-1 / back)
                  :mod (c8-2 / only)))

# ::snt Bet you theyd rather be armed with more than a chair at that point
# ::tokens ["Bet", "you", "they", "d", "rather", "be", "armed", "with", "more", "than", "a", "chair", "at", "that", "point"]
# ::lemmas ["bet", "you", "they", "d", "rather", "be", "arm", "with", "more", "than", "a", "chair", "at", "that", "point"]
(c9-2 / bet-01
      :ARG0 (c9-3 / i)
      :ARG1 (c9-0 / you)
      :ARG2 (c9-4 / prefer-01
                  :ARG0 (c9-7 / they)
                  :ARG1 (c9-9 / arm-01
                              :ARG1 c9-7
                              :ARG2 (c9-1 / more-than
                                          :op1 (c9-5 / chair))
                              :time (c9-8 / point
                                          :mod (c9-6 / that)))))

# ::snt scary shit ..... I hope they pick up on security..
# ::tokens ["scary", "shit", ".....", "I", "hope", "they", "pick", "up", "on", "security", ".."]
# ::lemmas ["scary", "shit", ".....", "i", "hope", "they", "pick", "up", "on", "security", ".."]
(c10-0 / hope-01
       :ARG0 (c10-3 / i)
       :ARG1 (c10-4 / pick-up-11
                    :ARG0 (c10-6 / they)
                    :ARG1 (c10-5 / security))
       :mod (c10-2 / shit
                   :ARG0-of (c10-1 / scary-03)))

# ::snt Those chairs remind me of the Sunflower movement. Not defending against the same threat though. Condolences to Canada.
# ::tokens ["Those", "chairs", "remind", "me", "of", "the", "Sunflower", "movement", ".", "Not", "defending", "against", "the", "same", "threat", "though", ".", "Condolences", "to", "Canada", "."]
# ::lemmas ["those", "chair", "remind", "i", "of", "the", "Sunflower", "movement", ".", "not", "defend", "against", "the", "same", "threat", "though", ".", "condolence", "to", "Canada", "."]
(c11-1 / multi-sentence
       :snt1 (c11-6 / remind-01
                    :ARG0 (c11-7 / chair
                                 :mod (c11-13 / that))
                    :ARG1 (c11-5 / movement
                                 :name (c11-3 / name
                                              :op1 "Sunflower"))
                    :ARG2 (c11-2 / i))
       :snt2 (c11-8 / defend-01
                    :ARG1 (c11-10 / threaten-01
                                  :ARG1-of (c11-11 / same-01))
                    :ARG1-of (c11-0 / have-concession-91)
                    :polarity -)
       :snt3 (c11-9 / Condolence
                    :beneficiary (c11-12 / country
                                         :name (c11-4 / name
                                                      :op1 "Canada"))))

# ::snt Time to Nuke Mecca and MadinaThese Loosers Moslems must be X-terimanated
# ::tokens ["Time", "to", "Nuke", "Mecca", "and", "MadinaThese", "Loosers", "Moslems", "must", "be", "X", "-", "terimanated"]
# ::lemmas ["time", "to", "Nuke", "Mecca", "and", "MadinaThese", "Loosers", "Moslems", "must", "be", "x", "-", "terimanate"]
(c12-1 / obligate-01
       :ARG2 (c12-2 / exterminate-01
                    :ARG1 (c12-6 / person
                                 :mod (c12-7 / religious-group
                                             :name (c12-4 / name
                                                          :op1 "Muslim"))
                                 :mod (c12-11 / this)
                                 :ARG0-of (c12-0 / loathe-01))
                    :manner (c12-13 / authority))
       :time (c12-5 / nuke-01
                    :ARG1 (c12-3 / and
                                 :op1 (c12-8 / city
                                             :name (c12-9 / name
                                                          :op1 "Mecca"))
                                 :op2 (c12-12 / person
                                              :name (c12-10 / name
                                                            :op1 "Madina")))))

# ::snt Ridiculous that this has to happen.
# ::tokens ["Ridiculous", "that", "this", "has", "to", "happen", "."]
# ::lemmas ["ridiculous", "that", "this", "have", "to", "happen", "."]
(c13-2 / ridiculous-02
       :ARG1 (c13-0 / obligate-01
                    :ARG1 (c13-1 / event
                                 :mod (c13-3 / this))))

# ::snt Just surreal.
# ::tokens ["Just", "surreal", "."]
# ::lemmas ["just", "surreal", "."]
(c15-0 / surreal
       :mod (c15-1 / just))

# ::snt Don't bring a chair to a gunfight.
# ::tokens ["Do", "n't", "bring", "a", "chair", "to", "a", "gunfight", "."]
# ::lemmas ["do", "not", "bring", "a", "chair", "to", "a", "gunfight", "."]
(c16-2 / bring-01
       :ARG0 (c16-0 / you)
       :ARG1 (c16-3 / chair)
       :ARG2 (c16-1 / fight-01
                    :instrument (c16-4 / gun))
       :polarity -
       :mode imperative)

# ::snt happens when you are the world garbage can.
# ::tokens ["happens", "when", "you", "are", "the", "world", "garbage", "can", "."]
# ::lemmas ["happen", "when", "you", "be", "the", "world", "garbage", "can", "."]
(c17-0 / have-condition-91
       :ARG2 (c17-3 / can
                    :mod (c17-4 / garbage)
                    :location (c17-1 / world)
                    :domain (c17-2 / you)))
