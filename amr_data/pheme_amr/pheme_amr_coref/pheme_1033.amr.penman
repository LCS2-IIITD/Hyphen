# ::snt MT .: Gunman involved in named as -year-old muslim Michael Zehaf-Bibeau
# ::tokens ["MT", ".", ":", "Gunman", "involved", "in", "named", "as", "-year", "-", "old", "muslim", "Michael", "Zehaf", "-", "Bibeau"]
# ::lemmas ["MT", ".", ":", "Gunman", "involve", "in", "name", "as", "-year", "-", "old", "muslim", "Michael", "Zehaf", "-", "Bibeau"]
(c1-2 / multi-sentence
      :snt1 (c1-4 / byline-91
                  :ARG0 (c1-7 / publication
                              :name (c1-5 / name
                                          :op1 "MT")))
      :snt2 (c1-13 / person
                   :ARG0-of (c1-0 / have-org-role-91
                                  :ARG2 (c1-10 / gunman))
                   :ARG1-of (c1-6 / name-01
                                  :ARG2 (c1-3 / person
                                              :name (c1-8 / name
                                                          :op1 "Michael"
                                                          :op2 "Zehaf-Bibeau")
                                              :mod (c1-9 / religious-group
                                                         :name (c1-11 / name
                                                                      :op1 "Islam"))
                                              :age (c1-12 / temporal-quantity
                                                          :unit (c1-1 / year)
                                                          :quant 1)))))

# ::snt May his virgins have syphilis!!!
# ::tokens ["May", "his", "virgins", "have", "syphilis", "!", "!", "!"]
# ::lemmas ["may", "his", "virgin", "have", "syphili", "!", "!", "!"]
(c2-1 / wish-01
      :ARG1 (c2-0 / have-03
                  :ARG0 (c2-3 / virgin
                              :poss (c2-5 / he))
                  :ARG1 (c2-4 / disease
                              :name (c2-2 / name
                                          :op1 "syphilis"))))

# ::snt M-U-S-L-I-MSay it BBC . Say it.
# ::tokens ["M", "-", "U", "-", "S", "-", "L", "-", "I", "-", "MSay", "it", "BBC", ".", "Say", "it", "."]
# ::lemmas ["M", "-", "U", "-", "S", "-", "L", "-", "i", "-", "msay", "it", "BBC", ".", "say", "it", "."]
(c3-1 / multi-sentence
      :snt1 (c3-6 / say-01
                  :ARG0 (c3-5 / publication
                              :name (c3-4 / name
                                          :op1 "BBC"))
                  :ARG1 (c3-3 / it))
      :snt2 (c3-2 / say-01
                  :ARG0 (c3-0 / you)
                  :ARG1 c3-3
                  :mode imperative))

# ::snt . Wednesday is 'Hump' day.
# ::tokens [".", "Wednesday", "is", "'", "Hump", "'", "day", "."]
# ::lemmas [".", "Wednesday", "be", "'", "Hump", "'", "day", "."]
(c4-3 / day
      :mod (c4-0 / hump)
      :domain (c4-2 / date-entity
                    :weekday (c4-1 / wednesday)))

# ::snt jihadi johns mate muslim michael?
# ::tokens ["jihadi", "johns", "mate", "muslim", "michael", "?"]
# ::lemmas ["jihadi", "johns", "mate", "muslim", "michael", "?"]
(c5-5 / person
      :polarity (c5-7 / amr-unknown)
      :name (c5-3 / name
                  :op1 "Johns")
      :mod (c5-0 / jihadi)
      :ARG0-of (c5-1 / have-rel-role-91
                     :ARG1 (c5-6 / person
                                 :name (c5-4 / name
                                             :op1 "Muslim"))
                     :ARG2 (c5-2 / mate)))

# ::snt So? The Okie-bomber was C-h-r-i-s-t-i-a-n. Killed almost . Just one example.
# ::tokens ["So", "?", "The", "Okie", "-", "bomber", "was", "C", "-", "h", "-", "r", "-", "i", "-", "s", "-", "t", "-", "i", "-", "a", "-", "n.", "Killed", "almost", ".", "Just", "one", "example", "."]
# ::lemmas ["so", "?", "the", "Okie", "-", "bomber", "be", "C", "-", "h", "-", "r", "-", "i", "-", "s", "-", "t", "-", "i", "-", "a", "-", "n.", "kill", "almost", ".", "just", "one", "example", "."]
(c6-1 / multi-sentence
      :snt1 (c6-8 / so
                  :polarity (c6-10 / amr-unknown))
      :snt2 (c6-7 / person
                  :name (c6-5 / name
                              :op1 "C-h-r-i-s-t-i-a-n")
                  :domain c6-7
                  :ARG0-of (c6-2 / bomb-01
                                 :mod (c6-4 / atom)))
      :snt3 (c6-9 / kill-01
                  :ARG1 (c6-6 / almost))
      :snt4 (c6-3 / example
                  :mod (c6-0 / just)
                  :quant 1))

# ::snt US officials?
# ::tokens ["US", "officials", "?"]
# ::lemmas ["US", "official", "?"]
(c7-3 / person
      :polarity (c7-5 / amr-unknown)
      :ARG0-of (c7-0 / have-org-role-91
                     :ARG1 (c7-4 / country
                                 :name (c7-2 / name
                                             :op1 "US"))
                     :ARG2 (c7-1 / official)))

# ::snt Fuck him, he doesn't deserve the infamy. Let's instead celebrate Cpl Nathan Cirillo
# ::tokens ["Fuck", "him", ",", "he", "does", "n't", "deserve", "the", "infamy", ".", "Let", "'s", "instead", "celebrate", "Cpl", "Nathan", "Cirillo"]
# ::lemmas ["fuck", "he", ",", "he", "do", "not", "deserve", "the", "infamy", ".", "let", "us", "instead", "celebrate", "Cpl", "Nathan", "Cirillo"]
(c8-3 / multi-sentence
      :snt1 (c8-8 / deserve-01
                  :ARG0 (c8-0 / he)
                  :ARG1 (c8-5 / infamy)
                  :mod (c8-2 / fuck
                             :mode expressive)
                  :polarity -)
      :snt2 (c8-9 / celebrate-02
                  :ARG0 (c8-1 / we)
                  :ARG1 (c8-7 / person
                              :name (c8-6 / name
                                          :op1 "Nathan"
                                          :op2 "Cirillo")
                              :ARG0-of (c8-13 / have-org-role-91
                                              :ARG2 (c8-10 / commander
                                                           :mod (c8-12 / chief)
                                                           :mod (c8-4 / executive))))
                  :ARG1-of (c8-11 / instead-of-91)
                  :mode imperative))

# ::snt wow she got it going on
# ::tokens ["wow", "she", "got", "it", "going", "on"]
# ::lemmas ["wow", "she", "get", "it", "go", "on"]
(c9-3 / get-02
      :ARG0 (c9-4 / she)
      :ARG1 (c9-2 / go-on-15
                  :ARG1 (c9-1 / it))
      :mod (c9-0 / wow
                 :mode expressive))

# ::snt congrats on you success keep going
# ::tokens ["congrats", "on", "you", "success", "keep", "going"]
# ::lemmas ["congrat", "on", "you", "success", "keep", "go"]
(c10-5 / keep-02
       :ARG0 (c10-2 / congratulate-01
                    :ARG0 (c10-1 / i)
                    :ARG1 (c10-0 / you)
                    :ARG2 (c10-4 / succeed-01
                                 :ARG0 c10-0))
       :ARG1 (c10-3 / go-01
                    :ARG1 c10-0))

# ::snt I'm not following.This one guy in ? Wow. He must've been some dude! Well, dead now. Rest at ease, fellas.
# ::tokens ["I", "'m", "not", "following", ".", "This", "one", "guy", "in", "?", "Wow", ".", "He", "must", "'ve", "been", "some", "dude", "!", "Well", ",", "dead", "now", ".", "Rest", "at", "ease", ",", "fellas", "."]
# ::lemmas ["i", "be", "not", "follow", ".", "this", "one", "guy", "in", "?", "wow", ".", "he", "must", "'ve", "be", "some", "dude", "!", "well", ",", "dead", "now", ".", "rest", "at", "ease", ",", "fella", "."]
(c11-4 / multi-sentence
       :snt1 (c11-3 / follow-02
                    :ARG0 (c11-8 / i)
                    :polarity -)
       :snt2 (c11-14 / guy
                     :mod (c11-17 / this)
                     :location (c11-15 / inside)
                     :ARG0-of (c11-1 / wow-01)
                     :quant 1)
       :snt3 (c11-5 / infer-01
                    :ARG1 (c11-12 / dude
                                  :mod (c11-16 / some)
                                  :domain (c11-0 / he)))
       :snt4 (c11-2 / die-01
                    :time (c11-10 / now)
                    :mod (c11-9 / well
                                :mod-of c11-2))
       :snt5 (c11-13 / rest-01
                     :ARG0 (c11-11 / fella)
                     :manner (c11-6 / easy-05)
                     :mode imperative)
       :snt6 (c11-7 / say-01
                    :ARG1 c11-13
                    :ARG0 c11-11
                    :mode imperative)
       :ARG2 c11-11)

# ::snt Google 'Experts Speak Out' I dare you
# ::tokens ["Google", "'", "Experts", "Speak", "Out", "'", "I", "dare", "you"]
# ::lemmas ["Google", "'", "Experts", "speak", "Out", "'", "i", "dare", "you"]
(c12-5 / dare-01
       :ARG0 (c12-2 / i)
       :ARG1 (c12-0 / you)
       :ARG2 (c12-7 / speak-out-03
                    :ARG0 (c12-4 / person
                                 :ARG1-of (c12-1 / expert-01)
                                 :source (c12-6 / company
                                                :name (c12-3 / name
                                                             :op1 "Google")))))

# ::snt Whataboutadry.... and two decades old whataboutadry at that.The lamest tweet I received today.
# ::tokens ["Whataboutadry", "....", "and", "two", "decades", "old", "whataboutadry", "at", "that", ".", "The", "lamest", "tweet", "I", "received", "today", "."]
# ::lemmas ["Whataboutadry", "....", "and", "two", "decades", "old", "whataboutadry", "at", "that", ".", "the", "lame", "tweet", "i", "receive", "today", "."]
(c13-2 / multi-sentence
       :snt1 (c13-12 / say-01
                     :ARG1 (c13-14 / amr-unknown)
                     :snt2-of c13-2)
       :ARG1 (c13-4 / amr-unknown)
       :ARG1-of (c13-6 / age-01
                       :ARG2 (c13-13 / temporal-quantity
                                     :unit (c13-8 / decade)
                                     :quant 2))
       :concession (c13-11 / that)
       :snt3 (c13-0 / have-degree-91
                    :ARG1 (c13-7 / tweet-01
                                 :ARG1-of (c13-9 / receive-01
                                                 :ARG0 (c13-5 / i)
                                                 :time (c13-3 / today)))
                    :ARG2 (c13-1 / lamest)
                    :ARG3 (c13-10 / most)))

# ::snt Whats your point? He was a Muslim. Piss off.
# ::tokens ["What", "s", "your", "point", "?", "He", "was", "a", "Muslim", ".", "Piss", "off", "."]
# ::lemmas ["what", "s", "your", "point", "?", "he", "be", "a", "Muslim", ".", "Piss", "off", "."]
(c14-2 / multi-sentence
       :snt1 (c14-4 / point-04
                    :ARG0 (c14-1 / you)
                    :ARG1 (c14-7 / amr-unknown))
       :snt2 (c14-5 / religious-group
                    :name (c14-3 / name
                                 :op1 "Muslim")
                    :domain (c14-0 / he))
       :snt3 (c14-6 / piss-off-02
                    :ARG0 c14-1
                    :mode imperative))

# ::snt Other major unbiased news agencies are reporting it.Don't let that effect Robs view tho.
# ::tokens ["Other", "major", "unbiased", "news", "agencies", "are", "reporting", "it", ".", "Don't", "let", "that", "effect", "Robs", "view", "tho", "."]
# ::lemmas ["other", "major", "unbiased", "news", "agency", "be", "report", "it", ".", "don't", "let", "that", "effect", "Robs", "view", "tho", "."]
(c15-3 / multi-sentence
       :snt1 (c15-11 / report-01
                     :ARG0 (c15-15 / agency
                                   :mod (c15-8 / news)
                                   :ARG1-of (c15-4 / bias-01
                                                   :polarity -)
                                   :ARG1-of (c15-10 / major-02)
                                   :mod (c15-5 / other))
                     :ARG1 (c15-7 / it))
       :snt2 (c15-2 / let-01
                    :ARG0 (c15-1 / you)
                    :ARG1 (c15-6 / affect-01
                                 :ARG0 (c15-14 / that)
                                 :ARG1 (c15-9 / view-02
                                              :ARG0 (c15-12 / person
                                                            :name (c15-13 / name
                                                                          :op1 "Rob"))))
                    :ARG1-of (c15-0 / have-concession-91)
                    :polarity -
                    :mode imperative))

# ::snt Algerian descent I understand.
# ::tokens ["Algerian", "descent", "I", "understand", "."]
# ::lemmas ["Algerian", "descent", "i", "understand", "."]
(c16-0 / understand-01
       :ARG0 (c16-1 / i)
       :ARG1 (c16-3 / descend-01
                    :ARG0 (c16-4 / continent
                                 :name (c16-2 / name
                                              :op1 "Algeria"))))

# ::snt stand him up and shoot him again
# ::tokens ["stand", "him", "up", "and", "shoot", "him", "again"]
# ::lemmas ["stand", "he", "up", "and", "shoot", "he", "again"]
(c17-5 / and
       :op1 (c17-4 / stand-up-07
                   :ARG1 (c17-1 / you)
                   :ARG2 (c17-0 / he)
                   :mode imperative)
       :op2 (c17-2 / shoot-02
                   :ARG0 c17-1
                   :ARG1 c17-0
                   :mod (c17-3 / again)
                   :mode imperative))

# ::snt So the gunman who's killed after attacking Canadian Parliament was Michael Zehaf-Bibeau!Sounds like a half-breed!
# ::tokens ["So", "the", "gunman", "who", "'s", "killed", "after", "attacking", "Canadian", "Parliament", "was", "Michael", "Zehaf", "-", "Bibeau!Sounds", "like", "a", "half", "-", "breed", "!"]
# ::lemmas ["so", "the", "gunman", "who", "be", "kill", "after", "attack", "Canadian", "Parliament", "be", "Michael", "Zehaf", "-", "Bibeau!Sounds", "like", "a", "half", "-", "breed", "!"]
(c18-1 / multi-sentence
       :snt1 (c18-11 / kill-01
                     :ARG1 (c18-9 / gunman
                                  :name (c18-4 / name
                                               :op1 "Michael"
                                               :op2 "Zehaf-Bibeau"))
                     :time (c18-12 / after
                                   :op1 (c18-3 / attack-01
                                               :ARG0 c18-9
                                               :ARG1 (c18-7 / government-organization
                                                            :name (c18-5 / name
                                                                         :op1 "Parliament")
                                                            :mod (c18-8 / country
                                                                        :name (c18-6 / name
                                                                                     :op1 "Canada"))))))
       :snt2 (c18-10 / sound-01
                     :ARG1 (c18-2 / breed
                                  :mod (c18-0 / half))))

# ::snt Really compares to k killed in Syria.
# ::tokens ["Really", "compares", "to", "k", "killed", "in", "Syria", "."]
# ::lemmas ["really", "compare", "to", "k", "kill", "in", "Syria", "."]
(c19-3 / compare-01
       :ARG2 (c19-4 / kill-01
                    :location (c19-2 / country
                                     :name (c19-0 / name
                                                  :op1 "Syria")))
       :ARG1-of (c19-1 / real-04))

# ::snt I think we all know where his genes come from.
# ::tokens ["I", "think", "we", "all", "know", "where", "his", "genes", "come", "from", "."]
# ::lemmas ["i", "think", "we", "all", "know", "where", "his", "gene", "come", "from", "."]
(c20-7 / think-01
       :ARG0 (c20-3 / i)
       :ARG1 (c20-4 / know-01
                    :ARG0 (c20-1 / we
                                 :mod (c20-8 / all))
                    :ARG1 (c20-2 / location
                                 :ARG3-of (c20-5 / come-03
                                                 :ARG1 (c20-6 / gene
                                                              :part-of (c20-0 / he))))))

# ::snt not really.. just careful examination is enough.. atlist we will know if he is Muslim or not
# ::tokens ["not", "really", "..", "just", "careful", "examination", "is", "enough", "..", "atlist", "we", "will", "know", "if", "he", "is", "Muslim", "or", "not"]
# ::lemmas ["not", "really", "..", "just", "careful", "examination", "be", "enough", "..", "atlist", "we", "will", "know", "if", "he", "be", "Muslim", "or", "not"]
(c21-3 / multi-sentence
       :snt1 (c21-8 / real-04
                    :polarity -)
       :snt2 (c21-0 / have-quant-91
                    :ARG1 (c21-5 / examine-01
                                 :ARG1-of (c21-9 / care-04)
                                 :mod (c21-1 / just))
                    :ARG3 (c21-4 / enough))
       :snt3 (c21-12 / know-01
                     :ARG0 (c21-2 / we)
                     :ARG1 (c21-10 / truth-value
                                   :polarity-of (c21-6 / religious-group
                                                       :name (c21-7 / name
                                                                    :op1 "Muslim")
                                                       :domain (c21-13 / he)))
                     :mod (c21-11 / at-all)))

# ::snt She's America's youngest female billionaire - and a dropout &gt;&gt;&gt;&gt;&gt;
# ::tokens ["She", "'s", "America", "'s", "youngest", "female", "billionaire", "-", "and", "a", "dropout", "&", "gt;&gt;&gt;&gt;&gt", ";"]
# ::lemmas ["she", "be", "America", "'s", "young", "female", "billionaire", "-", "and", "a", "dropout", "&", "gt;&gt;&gt;&gt;&gt", ";"]
(c22-9 / and
       :op1 (c22-0 / have-degree-91
                   :ARG1 (c22-8 / she)
                   :ARG2 (c22-1 / young)
                   :ARG3 (c22-3 / most)
                   :ARG5 (c22-4 / billionaire
                                :mod (c22-2 / female)
                                :location (c22-7 / country
                                                 :name (c22-5 / name
                                                              :op1 "America"))))
       :op2 (c22-6 / drop-out-04
                   :ARG0 c22-8))

# ::snt &gt; what was the religion he'd converter to again????
# ::tokens ["&", "gt", ";", "what", "was", "the", "religion", "he", "'d", "converter", "to", "again", "?", "?", "?", "?"]
# ::lemmas ["&", "gt", ";", "what", "be", "the", "religion", "he", "would", "converter", "to", "again", "?", "?", "?", "?"]
(c23-5 / and
       :op2 (c23-3 / religion
                   :domain (c23-1 / amr-unknown)
                   :ARG2-of (c23-4 / convert-01
                                   :ARG0 (c23-0 / he)
                                   :mod (c23-2 / again))))

# ::snt How do the BBC know his religion? Difficult to tell the religion of a dead body. Idle speculation best left to tabloid papers
# ::tokens ["How", "do", "the", "BBC", "know", "his", "religion", "?", "Difficult", "to", "tell", "the", "religion", "of", "a", "dead", "body", ".", "Idle", "speculation", "best", "left", "to", "tabloid", "papers"]
# ::lemmas ["how", "do", "the", "BBC", "know", "his", "religion", "?", "difficult", "to", "tell", "the", "religion", "of", "a", "dead", "body", ".", "idle", "speculation", "well", "leave", "to", "tabloid", "paper"]
(c24-1 / multi-sentence
       :snt1 (c24-17 / know-01
                     :ARG0 (c24-3 / publication
                                  :name (c24-12 / name
                                                :op1 "BBC"))
                     :ARG1 (c24-14 / religion
                                   :poss (c24-9 / he))
                     :manner (c24-8 / amr-unknown))
       :snt2 (c24-4 / difficult
                    :domain (c24-19 / tell-01
                                    :ARG1 (c24-2 / religion
                                                 :poss (c24-11 / body
                                                               :ARG1-of (c24-0 / die-01)))))
       :snt3 (c24-5 / speculate-01
                    :mod (c24-16 / idle)
                    :ARG1-of (c24-10 / leave-02
                                     :ARG2 (c24-6 / paper
                                                  :mod (c24-18 / tabloid))
                                     :manner (c24-15 / good-02
                                                     :ARG2-of (c24-7 / have-degree-91
                                                                     :ARG1 c24-10
                                                                     :ARG3 (c24-13 / most))))))

# ::snt OK, Let me rephrase. The BBC reported the statement from the Canadian Govt. Did the statement say he was a Muslim?
# ::tokens ["OK", ",", "Let", "me", "rephrase", ".", "The", "BBC", "reported", "the", "statement", "from", "the", "Canadian", "Govt", ".", "Did", "the", "statement", "say", "he", "was", "a", "Muslim", "?"]
# ::lemmas ["ok", ",", "let", "i", "rephrase", ".", "the", "BBC", "report", "the", "statement", "from", "the", "Canadian", "Govt", ".", "do", "the", "statement", "say", "he", "be", "a", "Muslim", "?"]
(c25-0 / multi-sentence
       :snt1 (c25-8 / let-01
                    :ARG0 (c25-15 / you)
                    :ARG1 (c25-12 / rephrase-01
                                  :ARG0 (c25-14 / i))
                    :mode imperative)
       :snt2 (c25-1 / report-01
                    :ARG0 (c25-3 / publication
                                 :name (c25-11 / name
                                               :op1 "BBC"))
                    :ARG1 (c25-5 / state-01
                                 :ARG0 (c25-13 / government-organization
                                               :ARG0-of (c25-4 / govern-01
                                                               :ARG1 (c25-18 / country
                                                                             :name (c25-17 / name
                                                                                           :op1 "Canada"))))))
       :snt3 (c25-9 / say-01
                    :ARG0 (c25-16 / state-01)
                    :ARG1 (c25-10 / religious-group
                                  :name (c25-2 / name
                                               :op1 "Muslim")
                                  :domain (c25-7 / he))
                    :polarity (c25-6 / amr-unknown)))

# ::snt : Gunman shot dead in named by US officials as Canadian-born, Michael Zehaf-Bibeau. -Canadians Gone Wild.
# ::tokens [":", "Gunman", "shot", "dead", "in", "named", "by", "US", "officials", "as", "Canadian", "-", "born", ",", "Michael", "Zehaf", "-", "Bibeau", ".", "-Canadians", "Gone", "Wild", "."]
# ::lemmas [":", "Gunman", "shoot", "dead", "in", "name", "by", "US", "official", "as", "Canadian", "-", "bear", ",", "Michael", "Zehaf", "-", "Bibeau", ".", "-canadians", "Gone", "Wild", "."]
(c26-1 / multi-sentence
       :snt1 (c26-14 / shoot-02
                     :ARG0 (c26-8 / person
                                  :ARG0-of (c26-0 / have-org-role-91
                                                  :ARG1 (c26-10 / country
                                                                :name (c26-6 / name
                                                                             :op1 "US"))
                                                  :ARG2 (c26-4 / official)))
                     :ARG1 (c26-17 / person
                                   :name (c26-7 / name
                                                :op1 "Michael"
                                                :op2 "Zehaf-Bibeau")
                                   :ARG1-of (c26-3 / bear-02
                                                   :location (c26-9 / country
                                                                    :name (c26-11 / name
                                                                                  :op1 "Canada"))))
                     :ARG0-of (c26-13 / cause-01
                                      :ARG1 (c26-12 / die-01
                                                    :ARG1 (c26-15 / gunman))))
       :snt2 (c26-5 / event
                    :name (c26-16 / name
                                  :op1 "Gone"
                                  :op2 "Wild")
                    :mod (c26-2 / person
                                :mod c26-9)))

# ::snt You asked why they didn't report his religion. I'm saying that perhaps it was not in the statement from the government. Forget it
# ::tokens ["You", "asked", "why", "they", "did", "n't", "report", "his", "religion", ".", "I", "'m", "saying", "that", "perhaps", "it", "was", "not", "in", "the", "statement", "from", "the", "government", ".", "Forget", "it"]
# ::lemmas ["you", "ask", "why", "they", "do", "not", "report", "his", "religion", ".", "i", "be", "say", "that", "perhaps", "it", "be", "not", "in", "the", "statement", "from", "the", "government", ".", "forget", "it"]
(c27-3 / multi-sentence
       :snt1 (c27-17 / ask-01
                     :ARG0 (c27-1 / you)
                     :ARG1 (c27-16 / thing
                                   :ARG0-of (c27-10 / cause-01
                                                    :ARG1 (c27-9 / report-01
                                                                 :ARG0 (c27-13 / they)
                                                                 :ARG1 (c27-7 / religion
                                                                              :poss (c27-0 / he))
                                                                 :polarity -))))
       :snt2 (c27-14 / say-01
                     :ARG0 (c27-6 / i)
                     :ARG1 (c27-8 / possible-01
                                  :ARG1 (c27-4 / be-located-at-91
                                               :ARG1 c27-9
                                               :ARG2 c27-16
                                               :ARG1-of (c27-5 / state-01
                                                               :ARG0 (c27-11 / government-organization
                                                                             :ARG0-of (c27-12 / govern-01)))
                                               :polarity -)))
       :snt3 (c27-2 / forget-01
                    :ARG0 c27-1
                    :ARG1 (c27-15 / it)
                    :mode imperative))
