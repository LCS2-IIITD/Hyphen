# ::snt : AFP: suspected gunmen have been killed&lt;&lt;
# ::tokens [":", "AFP", ":", "suspected", "gunmen", "have", "been", "killed&lt;&lt", ";"]
# ::lemmas [":", "AFP", ":", "suspect", "gunman", "have", "be", "killed&lt;&lt", ";"]
(c1-4 / say-01
      :ARG0 (c1-2 / publication
                  :name (c1-1 / name
                              :op1 "AFP"))
      :ARG1 (c1-5 / kill-01
                  :ARG1 (c1-3 / gunman
                              :ARG2-of (c1-0 / suspect-01))))

# ::snt it could never happen here, we don't have a paper with enough balls to publish anything that offends Muslims
# ::tokens ["it", "could", "never", "happen", "here", ",", "we", "do", "n't", "have", "a", "paper", "with", "enough", "balls", "to", "publish", "anything", "that", "offends", "Muslims"]
# ::lemmas ["it", "could", "never", "happen", "here", ",", "we", "do", "not", "have", "a", "paper", "with", "enough", "ball", "to", "publish", "anything", "that", "offend", "Muslims"]
(c2-16 / and
       :op1 (c2-12 / possible-01
                   :ARG1 (c2-9 / it)
                   :location (c2-0 / here)
                   :time (c2-7 / ever)
                   :polarity -)
       :op2 (c2-2 / have-03
                  :ARG0 (c2-1 / we)
                  :ARG1 (c2-15 / paper
                               :ARG1 (c2-4 / ball
                                           :ARG1-of (c2-11 / have-quant-91
                                                           :ARG3 (c2-5 / enough)
                                                           :ARG6 (c2-3 / publish-01
                                                                       :ARG0 c2-15
                                                                       :ARG1 (c2-8 / anything
                                                                                   :ARG0-of (c2-6 / offend-01
                                                                                                  :ARG1 (c2-14 / person
                                                                                                               :mod (c2-13 / religious-group
                                                                                                                           :name (c2-10 / name
                                                                                                                                        :op1 "Muslim"))))))))
                               :ARG0-of c2-2)
                  :polarity -))

# ::snt good
# ::tokens ["good"]
# ::lemmas ["good"]
(c3-0 / good-02)

# ::snt : AFP: suspected gunmen have been killed
# ::tokens [":", "AFP", ":", "suspected", "gunmen", "have", "been", "killed"]
# ::lemmas [":", "AFP", ":", "suspect", "gunman", "have", "be", "kill"]
(c4-4 / say-01
      :ARG0 (c4-2 / publication
                  :name (c4-1 / name
                              :op1 "AFP"))
      :ARG1 (c4-5 / kill-01
                  :ARG1 (c4-3 / gunman
                              :ARG2-of (c4-0 / suspect-01))))

# ::snt stick em full of pencils.
# ::tokens ["stick", "em", "full", "of", "pencils", "."]
# ::lemmas ["stick", "em", "full", "of", "pencil", "."]
(c5-3 / stick-01
      :ARG0 (c5-0 / you)
      :ARG1 (c5-4 / they)
      :ARG2 (c5-1 / full-09
                  :ARG1 c5-4
                  :ARG2 (c5-2 / pencil))
      :mode imperative)

# ::snt wonder if get the impression we are sick of these extremists and how the government just let them in
# ::tokens ["wonder", "if", "get", "the", "impression", "we", "are", "sick", "of", "these", "extremists", "and", "how", "the", "government", "just", "let", "them", "in"]
# ::lemmas ["wonder", "if", "get", "the", "impression", "we", "be", "sick", "of", "these", "extremist", "and", "how", "the", "government", "just", "let", "they", "in"]
(c6-1 / wonder-01
      :ARG0 (c6-5 / i)
      :ARG1 (c6-12 / truth-value
                   :polarity-of (c6-8 / impression-03
                                      :ARG0 (c6-6 / we)
                                      :ARG1 (c6-13 / and
                                                   :op1 (c6-11 / sick-04
                                                               :ARG0 (c6-4 / extremist
                                                                           :mod (c6-10 / this))
                                                               :ARG1 c6-6)
                                                   :op2 (c6-2 / let-01
                                                              :ARG0 (c6-9 / government-organization
                                                                          :ARG0-of (c6-7 / govern-01))
                                                              :ARG1 (c6-3 / inside)
                                                              :mod (c6-0 / just))))))

# ::snt then send them to the countries the supported as a sign. We are not backing down
# ::tokens ["then", "send", "them", "to", "the", "countries", "the", "supported", "as", "a", "sign", ".", "We", "are", "not", "backing", "down"]
# ::lemmas ["then", "send", "they", "to", "the", "country", "the", "support", "as", "a", "sign", ".", "we", "be", "not", "back", "down"]
(c7-3 / multi-sentence
      :snt1 (c7-8 / send-01
                  :ARG0 (c7-0 / you)
                  :ARG1 (c7-9 / they)
                  :ARG2 (c7-6 / country
                              :ARG1-of (c7-5 / support-01)
                              :ARG0-of (c7-2 / signal-07))
                  :time (c7-7 / then)
                  :mode imperative)
      :snt2 (c7-4 / back-down-11
                  :ARG0 (c7-1 / we)
                  :polarity -))

# ::snt good thats a start
# ::tokens ["good", "that", "s", "a", "start"]
# ::lemmas ["good", "that", "s", "a", "start"]
(c8-2 / good-02
      :ARG1 (c8-0 / start-01
                  :ARG2 (c8-1 / that)))

# ::snt like a Bogo',' and done
# ::tokens ["like", "a", "Bogo", "'", ",", "'", "and", "done"]
# ::lemmas ["like", "a", "Bogo", "'", ",", "'", "and", "do"]
(c9-2 / and
      :op1 (c9-0 / resemble-01
                 :ARG2 (c9-3 / boogie))
      :op2 (c9-1 / be-done-08))

# ::snt : AFP: suspected gunmen have been killed BANG BANG NIGGA
# ::tokens [":", "AFP", ":", "suspected", "gunmen", "have", "been", "killed", "BANG", "BANG", "NIGGA"]
# ::lemmas [":", "AFP", ":", "suspect", "gunman", "have", "be", "kill", "BANG", "BANG", "NIGGA"]
(c10-6 / say-01
       :ARG0 (c10-3 / publication
                    :name (c10-1 / name
                                 :op1 "AFP"))
       :ARG1 (c10-7 / kill-01
                    :ARG1 (c10-5 / gunman
                                 :ARG2-of (c10-0 / suspect-01))
                    :location (c10-4 / city
                                     :name (c10-2 / name
                                                  :op1 "Bang"
                                                  :op2 "Bang"
                                                  :op3 "Nigga"))))

# ::snt : AFP: suspected gunmen have been killed yayyy
# ::tokens [":", "AFP", ":", "suspected", "gunmen", "have", "been", "killed", "yayyy"]
# ::lemmas [":", "AFP", ":", "suspect", "gunman", "have", "be", "kill", "yayyy"]
(c11-5 / say-01
       :ARG0 (c11-3 / publication
                    :name (c11-2 / name
                                 :op1 "AFP"))
       :ARG1 (c11-6 / kill-01
                    :ARG1 (c11-4 / gunman
                                 :ARG2-of (c11-1 / suspect-01))
                    :mod (c11-0 / yay)))

# ::snt : AFP: suspected gunmen have been killed
# ::tokens [":", "AFP", ":", "suspected", "gunmen", "have", "been", "killed"]
# ::lemmas [":", "AFP", ":", "suspect", "gunman", "have", "be", "kill"]
(c12-4 / say-01
       :ARG0 (c12-2 / publication
                    :name (c12-1 / name
                                 :op1 "AFP"))
       :ARG1 (c12-5 / kill-01
                    :ARG1 (c12-3 / gunman
                                 :ARG2-of (c12-0 / suspect-01))))

# ::snt Got the bastards! ": AFP: suspected gunmen have been killed
# ::tokens ["Got", "the", "bastards", "!", "\"", ":", "AFP", ":", "suspected", "gunmen", "have", "been", "killed"]
# ::lemmas ["got", "the", "bastard", "!", "\"", ":", "AFP", ":", "suspect", "gunman", "have", "be", "kill"]
(c13-4 / say-01
       :ARG0 (c13-2 / publication
                    :name (c13-1 / name
                                 :op1 "AFP"))
       :ARG1 (c13-5 / kill-01
                    :ARG1 (c13-3 / gunman
                                 :ARG2-of (c13-0 / suspect-01))))

# ::snt hallelujah, enjoy the virgins
# ::tokens ["hallelujah", ",", "enjoy", "the", "virgins"]
# ::lemmas ["hallelujah", ",", "enjoy", "the", "virgin"]
(c14-2 / enjoy-01
       :ARG0 (c14-1 / you)
       :ARG1 (c14-3 / virgin)
       :mod (c14-0 / hallelujah
                   :mode expressive)
       :mode imperative)

# ::snt : AFP: suspected gunmen have been killed vive la France
# ::tokens [":", "AFP", ":", "suspected", "gunmen", "have", "been", "killed", "vive", "la", "France"]
# ::lemmas [":", "AFP", ":", "suspect", "gunman", "have", "be", "kill", "vive", "la", "France"]
(c15-6 / say-01
       :ARG0 (c15-3 / publication
                    :name (c15-1 / name
                                 :op1 "AFP"))
       :ARG1 (c15-7 / kill-01
                    :ARG1 (c15-5 / gunman
                                 :ARG2-of (c15-0 / suspect-01))
                    :location (c15-4 / city
                                     :name (c15-2 / name
                                                  :op1 "Vive"
                                                  :op2 "la"
                                                  :op3 "France"))))

# ::snt : AFP: suspected gunmen have been killed Hoping that this is now the end
# ::tokens [":", "AFP", ":", "suspected", "gunmen", "have", "been", "killed", "Hoping", "that", "this", "is", "now", "the", "end"]
# ::lemmas [":", "AFP", ":", "suspect", "gunman", "have", "be", "kill", "hope", "that", "this", "be", "now", "the", "end"]
(c16-8 / say-01
       :ARG0 (c16-5 / publication
                    :name (c16-3 / name
                                 :op1 "AFP"))
       :ARG1 (c16-10 / kill-01
                     :ARG1 (c16-7 / gunman
                                  :ARG2-of (c16-1 / suspect-01))
                     :ARG1-of (c16-6 / cause-01
                                     :ARG0 (c16-0 / hope-01
                                                  :ARG1 (c16-2 / end-01
                                                               :ARG1 (c16-9 / this)
                                                               :time (c16-4 / now))))))

# ::snt and shove a copy of up their ass
# ::tokens ["and", "shove", "a", "copy", "of", "up", "their", "ass"]
# ::lemmas ["and", "shove", "a", "copy", "of", "up", "their", "ass"]
(c17-6 / and
       :op2 (c17-4 / shove-01
                   :ARG0 (c17-5 / they
                                :part (c17-1 / ass))
                   :ARG1 (c17-3 / thing
                                :ARG1-of (c17-2 / copy-01))
                   :ARG2 c17-1
                   :direction (c17-0 / up)))

# ::snt : AFP: suspected gunmen have been killed
# ::tokens [":", "AFP", ":", "suspected", "gunmen", "have", "been", "killed"]
# ::lemmas [":", "AFP", ":", "suspect", "gunman", "have", "be", "kill"]
(c18-4 / say-01
       :ARG0 (c18-2 / publication
                    :name (c18-1 / name
                                 :op1 "AFP"))
       :ARG1 (c18-5 / kill-01
                    :ARG1 (c18-3 / gunman
                                 :ARG2-of (c18-0 / suspect-01))))

# ::snt it will never be the end
# ::tokens ["it", "will", "never", "be", "the", "end"]
# ::lemmas ["it", "will", "never", "be", "the", "end"]
(c19-0 / end-01
       :ARG1 (c19-1 / it)
       :time (c19-2 / ever)
       :polarity -)

# ::snt that's a good idea, just attach a note saying " I think this is your shit have it back"
# ::tokens ["that", "'s", "a", "good", "idea", ",", "just", "attach", "a", "note", "saying", "\"", "I", "think", "this", "is", "your", "shit", "have", "it", "back", "\""]
# ::lemmas ["that", "be", "a", "good", "idea", ",", "just", "attach", "a", "note", "say", "\"", "i", "think", "this", "be", "your", "shit", "have", "it", "back", "\""]
(c20-13 / and
        :op1 (c20-5 / idea
                    :ARG1-of (c20-8 / good-02)
                    :domain (c20-12 / that))
        :op2 (c20-4 / attach-01
                    :ARG1 (c20-6 / note
                                 :ARG0-of (c20-11 / say-01
                                                  :ARG1 (c20-10 / think-01
                                                                :ARG0 (c20-9 / i)
                                                                :ARG1 (c20-3 / shit
                                                                             :poss (c20-1 / you)
                                                                             :domain (c20-7 / this)))))
                    :mod (c20-0 / just)
                    :manner (c20-2 / back)))

# ::snt sod watching them and then them escaping being watched. If they support terrorism. .send them out of our country
# ::tokens ["sod", "watching", "them", "and", "then", "them", "escaping", "being", "watched", ".", "If", "they", "support", "terrorism", ".", ".send", "them", "out", "of", "our", "country"]
# ::lemmas ["sod", "watch", "they", "and", "then", "they", "escape", "be", "watch", ".", "if", "they", "support", "terrorism", ".", ".send", "they", "out", "of", "our", "country"]
(c21-2 / multi-sentence
       :snt1 (c21-14 / and
                     :op1 (c21-0 / watch-01
                                 :ARG1 (c21-13 / they))
                     :op2 (c21-5 / escape-01
                                 :ARG0 c21-13
                                 :ARG1 (c21-8 / watch-01
                                              :ARG1 c21-13)
                                 :time (c21-11 / then)))
       :snt2 (c21-12 / send-01
                     :ARG0 (c21-1 / you)
                     :ARG1 (c21-9 / they)
                     :ARG2 (c21-4 / out-06
                                  :ARG1 c21-9
                                  :ARG2 (c21-10 / country
                                                :poss (c21-3 / we)))
                     :condition (c21-6 / support-01
                                       :ARG0 c21-9
                                       :ARG1 (c21-7 / terrorism))
                     :mode imperative))

# ::snt : AFP: suspected gunmen have been killed yay
# ::tokens [":", "AFP", ":", "suspected", "gunmen", "have", "been", "killed", "yay"]
# ::lemmas [":", "AFP", ":", "suspect", "gunman", "have", "be", "kill", "yay"]
(c22-5 / kill-01
       :ARG0 (c22-2 / publication
                    :name (c22-1 / name
                                 :op1 "AFP"))
       :ARG1 (c22-3 / gunman
                    :ARG2-of (c22-4 / suspect-01))
       :time (c22-0 / yay))

# ::snt : AFP: suspected gunmen have been killed
# ::tokens [":", "AFP", ":", "suspected", "gunmen", "have", "been", "killed"]
# ::lemmas [":", "AFP", ":", "suspect", "gunman", "have", "be", "kill"]
(c23-4 / say-01
       :ARG0 (c23-2 / publication
                    :name (c23-1 / name
                                 :op1 "AFP"))
       :ARG1 (c23-5 / kill-01
                    :ARG1 (c23-3 / gunman
                                 :ARG2-of (c23-0 / suspect-01))))

# ::snt true. Perhaps they should all grow some
# ::tokens ["true", ".", "Perhaps", "they", "should", "all", "grow", "some"]
# ::lemmas ["true", ".", "perhaps", "they", "should", "all", "grow", "some"]
(c24-0 / multi-sentence
       :snt1 (c24-6 / true-01)
       :snt2 (c24-1 / possible-01
                    :ARG1 (c24-2 / recommend-01
                                 :ARG1 (c24-3 / grow-03
                                              :ARG0 (c24-4 / they
                                                           :mod (c24-7 / all))
                                              :quant (c24-5 / some)))))

# ::snt go on shoot em again just to make sure
# ::tokens ["go", "on", "shoot", "em", "again", "just", "to", "make", "sure"]
# ::lemmas ["go", "on", "shoot", "em", "again", "just", "to", "make", "sure"]
(c25-3 / go-03
       :ARG0 (c25-1 / you)
       :ARG1 (c25-4 / shoot-02
                    :ARG0 c25-1
                    :ARG1 (c25-5 / they)
                    :mod (c25-6 / again)
                    :purpose (c25-2 / ensure-01
                                    :ARG0 c25-1
                                    :mod (c25-0 / just)))
       :mode imperative)

# ::snt : AFP: suspected gunmen have been killed &lt;&lt;&lt;Was inevitable
# ::tokens [":", "AFP", ":", "suspected", "gunmen", "have", "been", "killed", "&", "lt;&lt;&lt;Was", "inevitable"]
# ::lemmas [":", "AFP", ":", "suspect", "gunman", "have", "be", "kill", "&", "lt;&lt;&lt;Was", "inevitable"]
(c26-5 / say-01
       :ARG0 (c26-3 / publication
                    :name (c26-2 / name
                                 :op1 "AFP"))
       :ARG1 (c26-8 / and
                    :op1 (c26-6 / kill-01
                                :ARG1 (c26-4 / gunman
                                             :ARG2-of (c26-0 / suspect-01)))
                    :op2 (c26-7 / possible-01
                                :ARG1 (c26-1 / avoid-01
                                             :ARG1 c26-6)
                                :polarity -)))

# ::snt Great outcome. All murderers dead. All hostages freed. Great job by French police
# ::tokens ["Great", "outcome", ".", "All", "murderers", "dead", ".", "All", "hostages", "freed", ".", "Great", "job", "by", "French", "police"]
# ::lemmas ["great", "outcome", ".", "all", "murderer", "dead", ".", "all", "hostage", "free", ".", "great", "job", "by", "French", "police"]
(c27-3 / multi-sentence
       :snt1 (c27-4 / outcome
                    :mod (c27-10 / great))
       :snt2 (c27-8 / die-01
                    :ARG1 (c27-7 / person
                                 :ARG0-of (c27-9 / murder-01)
                                 :mod (c27-14 / all)))
       :snt3 (c27-2 / free-01
                    :ARG0 (c27-13 / police
                                  :mod (c27-11 / country
                                               :name (c27-6 / name
                                                            :op1 "France")))
                    :ARG1 (c27-0 / hostage
                                 :mod (c27-5 / all)))
       :snt4 (c27-1 / job
                    :mod (c27-12 / great)))
