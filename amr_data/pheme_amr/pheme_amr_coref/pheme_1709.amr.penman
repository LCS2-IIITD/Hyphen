# ::snt hysterical &amp; nearly has it !
# ::tokens ["hysterical", "&", "amp", ";", "nearly", "has", "it", "!"]
# ::lemmas ["hysterical", "&", "amp", ";", "nearly", "have", "it", "!"]
(c1-6 / and
      :op1 (c1-5 / silly)
      :op2 (c1-0 / have-03
                 :ARG0 (c1-4 / person
                             :name (c1-2 / name
                                         :op1 "amp"))
                 :ARG1 (c1-1 / it)
                 :degree (c1-3 / near)))

# ::snt but why?
# ::tokens ["but", "why", "?"]
# ::lemmas ["but", "why", "?"]
(c2-1 / contrast-01
      :ARG2 (c2-0 / cause-01
                  :ARG0 (c2-2 / amr-unknown)))

# ::snt How I wish those suspects could be brought in alive!!
# ::tokens ["How", "I", "wish", "those", "suspects", "could", "be", "brought", "in", "alive", "!", "!"]
# ::lemmas ["how", "i", "wish", "those", "suspect", "could", "be", "bring", "in", "alive", "!", "!"]
(c3-0 / wish-01
      :ARG0 (c3-3 / i)
      :ARG1 (c3-4 / possible-01
                  :ARG1 (c3-2 / bring-01
                              :ARG1 (c3-7 / person
                                          :ARG2-of (c3-5 / suspect-01)
                                          :mod (c3-6 / that))
                              :manner (c3-1 / live-01
                                            :ARG0 c3-7)))
      :manner (c3-8 / amr-unknown))

# ::snt I doubt they gon allow that..
# ::tokens ["I", "doubt", "they", "gon", "allow", "that", ".."]
# ::lemmas ["i", "doubt", "they", "gon", "allow", "that", ".."]
(c4-1 / doubt-01
      :ARG0 (c4-0 / i)
      :ARG1 (c4-4 / allow-01
                  :ARG0 (c4-3 / they)
                  :ARG1 (c4-2 / that)))

# ::snt why are they waiting so long? They got time now to make the house unsafe to enter.
# ::tokens ["why", "are", "they", "waiting", "so", "long", "?", "They", "got", "time", "now", "to", "make", "the", "house", "unsafe", "to", "enter", "."]
# ::lemmas ["why", "be", "they", "wait", "so", "long", "?", "they", "get", "time", "now", "to", "make", "the", "house", "unsafe", "to", "enter", "."]
(c5-3 / multi-sentence
      :snt1 (c5-1 / wait-01
                  :ARG1 (c5-13 / they)
                  :ARG1-of (c5-2 / long-03
                                 :degree (c5-12 / so))
                  :ARG1-of (c5-9 / cause-01
                                 :ARG0 (c5-14 / amr-unknown)))
      :snt2 (c5-10 / get-01
                   :ARG0 (c5-11 / they)
                   :ARG1 (c5-7 / time
                               :purpose (c5-8 / make-02
                                              :ARG0 c5-11
                                              :ARG1 (c5-4 / safe-01
                                                          :ARG0 (c5-5 / enter-01
                                                                      :ARG1 (c5-0 / house))
                                                          :polarity -)))
                   :time (c5-6 / now)))

# ::snt I hope they destroy those Islamic goatfuckers
# ::tokens ["I", "hope", "they", "destroy", "those", "Islamic", "goatfuckers"]
# ::lemmas ["i", "hope", "they", "destroy", "those", "Islamic", "goatfucker"]
(c6-0 / hope-01
      :ARG0 (c6-1 / i)
      :ARG1 (c6-3 / destroy-01
                  :ARG0 (c6-7 / they)
                  :ARG1 (c6-5 / goatfucker
                              :mod (c6-4 / religious-group
                                         :name (c6-2 / name
                                                     :op1 "Islam"))
                              :mod (c6-6 / that))))

# ::snt And they have russian weapons. Funny isn' t it ?
# ::tokens ["And", "they", "have", "russian", "weapons", ".", "Funny", "isn", "'", "t", "it", "?"]
# ::lemmas ["and", "they", "have", "russian", "weapon", ".", "funny", "isn", "'", "t", "it", "?"]
(c8-3 / multi-sentence
      :snt1 (c8-9 / and
                  :op2 (c8-0 / have-03
                             :ARG0 (c8-8 / they)
                             :ARG1 (c8-1 / weapon
                                         :mod (c8-7 / country
                                                    :name (c8-6 / name
                                                                :op1 "Russia")))))
      :snt2 (c8-2 / funny
                  :polarity (c8-4 / amr-unknown)
                  :domain (c8-5 / it)))

# ::snt If they are taken out I hope the police in Paris have a woman do the job
# ::tokens ["If", "they", "are", "taken", "out", "I", "hope", "the", "police", "in", "Paris", "have", "a", "woman", "do", "the", "job"]
# ::lemmas ["if", "they", "be", "take", "out", "i", "hope", "the", "police", "in", "Paris", "have", "a", "woman", "do", "the", "job"]
(c9-0 / hope-01
      :ARG0 (c9-3 / i)
      :ARG1 (c9-10 / have-04
                   :ARG0 (c9-5 / police
                               :location (c9-7 / city
                                               :name (c9-4 / name
                                                           :op1 "Paris")))
                   :ARG1 (c9-6 / do-02
                               :ARG0 (c9-1 / woman)
                               :ARG1 (c9-2 / job)))
      :condition (c9-9 / take-out-11
                       :ARG1 (c9-8 / they)))

# ::snt a
# ::tokens ["a"]
# ::lemmas ["a"]
(c10-1 / person
       :name (c10-0 / name
                    :op1 "a"))

# ::snt pronunciation GO-EL
# ::tokens ["pronunciation", "GO", "-", "EL"]
# ::lemmas ["pronunciation", "GO", "-", "EL"]
(c11-1 / call-01
       :ARG2 (c11-0 / name
                    :op1 "Go-EL"))

# ::snt fuck you. Nuke Palestine/Syria
# ::tokens ["fuck", "you", ".", "Nuke", "Palestine", "/", "Syria"]
# ::lemmas ["fuck", "you", ".", "Nuke", "Palestine", "/", "Syria"]
(c12-2 / multi-sentence
       :snt1 (c12-1 / fuck-01
                    :ARG1 (c12-0 / you)
                    :mode imperative
                    :mode expressive)
       :snt2 (c12-3 / nuke-01
                    :ARG0 (c12-8 / you)
                    :ARG1 (c12-9 / slash
                                 :op1 (c12-7 / country
                                             :name (c12-4 / name
                                                          :op1 "Palestine"))
                                 :op2 (c12-6 / country
                                             :name (c12-5 / name
                                                          :op1 "Syria")))
                    :mode imperative))

# ::snt IN UKRAINE HAVE GIVEN THE NAZI COUP, SUPPORTED BY NATO AND MEDIA COMMUNICATION,AS SEE PHOTO.
# ::tokens ["IN", "UKRAINE", "HAVE", "GIVEN", "THE", "NAZI", "COUP", ",", "SUPPORTED", "BY", "NATO", "AND", "MEDIA", "COMMUNICATION", ",", "AS", "SEE", "PHOTO", "."]
# ::lemmas ["in", "UKRAINE", "have", "give", "the", "NAZI", "COUP", ",", "support", "by", "NATO", "and", "MEDIA", "COMMUNICATION", ",", "as", "SEE", "PHOTO", "."]
(c13-2 / multi-sentence
       :snt1 (c13-9 / give-01
                    :ARG0 (c13-8 / country
                                 :name (c13-4 / name
                                              :op1 "UKRAINE"))
                    :ARG1 (c13-7 / coup-01
                                 :mod (c13-6 / political-movement
                                             :name (c13-5 / name
                                                          :op1 "Nazi"))
                                 :ARG1-of (c13-12 / support-01
                                                  :ARG0 (c13-15 / and
                                                                :op1 (c13-10 / military
                                                                             :name (c13-11 / name
                                                                                           :op1 "NATO"))
                                                                :op2 (c13-13 / community
                                                                             :mod (c13-1 / media))))))
       :snt2 (c13-3 / see-01
                    :ARG0 (c13-0 / you)
                    :ARG1 (c13-14 / photograph)
                    :mode imperative))

# ::snt choose CNN/ First Amendment or Third Commandment? You exist for the First n will end for the Third
# ::tokens ["choose", "CNN/", "First", "Amendment", "or", "Third", "Commandment", "?", "You", "exist", "for", "the", "First", "n", "will", "end", "for", "the", "Third"]
# ::lemmas ["choose", "CNN/", "First", "Amendment", "or", "Third", "Commandment", "?", "you", "exist", "for", "the", "First", "n", "will", "end", "for", "the", "Third"]
(c14-11 / choose-01
        :ARG1 (c14-15 / amr-choice
                      :op1 (c14-9 / publication
                                  :name (c14-7 / name
                                               :op1 "CNN"))
                      :op2 (c14-2 / law
                                  :name (c14-8 / name
                                               :op1 "First"
                                               :op2 "Amendment"))
                      :op3 (c14-10 / commandment
                                   :ord (c14-5 / ordinal-entity
                                               :value 3)))
        :ARG3 (c14-3 / or
                     :op1 (c14-6 / exist-01
                                 :ARG1 (c14-1 / you)
                                 :prep-for (c14-14 / law
                                                   :name (c14-12 / name
                                                                 :op1 "First"
                                                                 :op2 "N")))
                     :op2 (c14-4 / end-01
                                 :ARG1 c14-1
                                 :prep-for (c14-0 / law
                                                  :name (c14-13 / name
                                                                :op1 "Third"
                                                                :op2 "Commandment")))))

# ::snt Sending prayers to the people of Paris. My uncle lives in France, too. Hope he's safe.
# ::tokens ["Sending", "prayers", "to", "the", "people", "of", "Paris", ".", "My", "uncle", "lives", "in", "France", ",", "too", ".", "Hope", "he", "'s", "safe", "."]
# ::lemmas ["send", "prayer", "to", "the", "people", "of", "Paris", ".", "my", "uncle", "live", "in", "France", ",", "too", ".", "hope", "he", "be", "safe", "."]
(c15-2 / multi-sentence
       :snt1 (c15-13 / send-01
                     :ARG1 (c15-9 / pray-01)
                     :ARG2 (c15-15 / person
                                   :location (c15-11 / city
                                                     :name (c15-7 / name
                                                                  :op1 "Paris"))))
       :snt2 (c15-1 / live-01
                    :ARG0 (c15-4 / person
                                 :ARG0-of (c15-0 / have-rel-role-91
                                                 :ARG1 (c15-6 / i)
                                                 :ARG2 (c15-3 / uncle)))
                    :location (c15-10 / country
                                      :name (c15-8 / name
                                                   :op1 "France"))
                    :mod (c15-14 / too))
       :snt3 (c15-16 / hope-01
                     :ARG1 (c15-5 / safe-01
                                  :ARG1 (c15-12 / he))))

# ::snt Is it not possible to get the children out of the school?
# ::tokens ["Is", "it", "not", "possible", "to", "get", "the", "children", "out", "of", "the", "school", "?"]
# ::lemmas ["be", "it", "not", "possible", "to", "get", "the", "child", "out", "of", "the", "school", "?"]
(c16-1 / possible-01
       :ARG1 (c16-3 / get-04
                    :ARG1 (c16-0 / out-06
                                 :ARG1 (c16-2 / child)
                                 :ARG2 (c16-4 / school)))
       :polarity (c16-5 / amr-unknown)
       :polarity -)

# ::snt : Residents of Dammartin-en-Goele told to stay inside, schools on lockdown, mayor's press office tells CNN.
# ::tokens [":", "Residents", "of", "Dammartin", "-", "en", "-", "Goele", "told", "to", "stay", "inside", ",", "schools", "on", "lockdown", ",", "mayor", "'s", "press", "office", "tells", "CNN", "."]
# ::lemmas [":", "resident", "of", "Dammartin", "-", "en", "-", "Goele", "tell", "to", "stay", "inside", ",", "school", "on", "lockdown", ",", "mayor", "'s", "press", "office", "tell", "CNN", "."]
(c17-13 / tell-01
        :ARG0 (c17-3 / office
                     :mod (c17-8 / press)
                     :poss (c17-1 / mayor))
        :ARG1 (c17-15 / and
                      :op1 (c17-11 / tell-01
                                   :ARG1 (c17-12 / stay-01
                                                 :ARG1 (c17-14 / person
                                                               :ARG0-of (c17-9 / reside-01
                                                                               :ARG1 (c17-10 / city
                                                                                             :name (c17-6 / name
                                                                                                          :op1 "Dammartin-en-Goele"))))
                                                 :ARG3 (c17-5 / inside))
                                   :ARG2 c17-14)
                      :op2 (c17-0 / lock-down-05
                                  :ARG1 (c17-4 / school)))
        :ARG2 (c17-2 / publication
                     :name (c17-7 / name
                                  :op1 "CNN")))

# ::snt : Residents of Dammartin-en-Goele told to stay inside, schools on lockdown, mayor's office tells CNN.
# ::tokens [":", "Residents", "of", "Dammartin", "-", "en", "-", "Goele", "told", "to", "stay", "inside", ",", "schools", "on", "lockdown", ",", "mayor", "'s", "office", "tells", "CNN", "."]
# ::lemmas [":", "resident", "of", "Dammartin", "-", "en", "-", "Goele", "tell", "to", "stay", "inside", ",", "school", "on", "lockdown", ",", "mayor", "'s", "office", "tell", "CNN", "."]
(c18-12 / tell-01
        :ARG0 (c18-2 / office
                     :mod (c18-1 / mayor))
        :ARG1 (c18-14 / and
                      :op1 (c18-10 / tell-01
                                   :ARG1 (c18-11 / stay-01
                                                 :ARG1 (c18-7 / person
                                                              :ARG0-of (c18-8 / reside-01
                                                                              :ARG1 (c18-9 / city
                                                                                           :name (c18-5 / name
                                                                                                        :op1 "Dammartin-en-Goele"))))
                                                 :ARG3 (c18-4 / inside))
                                   :ARG2 c18-7)
                      :op2 (c18-0 / lock-down-05
                                  :ARG1 (c18-3 / school)))
        :ARG2 (c18-13 / publication
                      :name (c18-6 / name
                                   :op1 "CNN")))

# ::snt I hope it too!!
# ::tokens ["I", "hope", "it", "too", "!", "!"]
# ::lemmas ["i", "hope", "it", "too", "!", "!"]
(c19-0 / hope-01
       :ARG0 (c19-3 / i)
       :ARG1 (c19-2 / it)
       :mod (c19-1 / too)
       :mode expressive)
