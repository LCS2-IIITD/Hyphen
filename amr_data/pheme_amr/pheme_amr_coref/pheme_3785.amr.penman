# ::snt : 'Journalism is printing what someone else does not want printed: everything else is public relations' -Orwell
# ::tokens [":", "'", "Journalism", "is", "printing", "what", "someone", "else", "does", "not", "want", "printed", ":", "everything", "else", "is", "public", "relations", "'", "-Orwell"]
# ::lemmas [":", "'", "journalism", "be", "print", "what", "someone", "else", "do", "not", "want", "print", ":", "everything", "else", "be", "public", "relation", "'", "-orwell"]
(c1-11 / say-01
       :ARG0 (c1-8 / person
                   :name (c1-7 / name
                               :op1 "Orwell"))
       :ARG1 (c1-10 / contrast-01
                    :ARG1 (c1-14 / print-01
                                 :ARG0 (c1-0 / journalism)
                                 :ARG1 (c1-13 / thing
                                              :ARG1-of (c1-2 / print-01
                                                             :ARG1-of (c1-1 / want-01
                                                                            :ARG0 (c1-5 / someone
                                                                                        :mod (c1-6 / else))
                                                                            :polarity -))))
                    :ARG2 (c1-12 / print-01
                                 :ARG0 (c1-3 / everything
                                             :mod c1-6)
                                 :ARG1 (c1-9 / relation-03
                                             :ARG1 (c1-4 / public)))))

# ::snt Always need the reminder THX
# ::tokens ["Always", "need", "the", "reminder", "THX"]
# ::lemmas ["always", "need", "the", "reminder", "THX"]
(c2-5 / say-01
      :ARG0 (c2-0 / i)
      :ARG1 (c2-1 / need-01
                  :ARG0 c2-0
                  :ARG1 (c2-4 / remind-01
                              :ARG2 c2-0)
                  :time (c2-6 / always))
      :ARG2 (c2-3 / person
                  :name (c2-2 / name
                              :op1 "THX")))

# ::snt :'Journalism is printing what someone else does not want printed: everything else is public relations' - Orwell
# ::tokens [":", "'", "Journalism", "is", "printing", "what", "someone", "else", "does", "not", "want", "printed", ":", "everything", "else", "is", "public", "relations", "'", "-", "Orwell"]
# ::lemmas [":", "'", "journalism", "be", "print", "what", "someone", "else", "do", "not", "want", "print", ":", "everything", "else", "be", "public", "relation", "'", "-", "orwell"]
(c3-10 / say-01
       :ARG0 (c3-7 / person
                   :name (c3-6 / name
                               :op1 "Orwell"))
       :ARG1 (c3-9 / contrast-01
                   :ARG1 (c3-13 / print-01
                                :ARG0 (c3-0 / Journalism)
                                :ARG1 (c3-12 / thing
                                             :ARG1-of (c3-2 / print-01
                                                            :ARG1-of (c3-1 / want-01
                                                                           :ARG0 (c3-4 / someone
                                                                                       :mod (c3-5 / else))
                                                                           :polarity -))))
                   :ARG2 (c3-8 / relation-03
                               :ARG1 (c3-11 / public)
                               :domain (c3-3 / everything
                                             :mod c3-5))))

# ::snt William Randolph Hearst, actually: "News is something somebody doesn't want printed; all else is advertising. "
# ::tokens ["William", "Randolph", "Hearst", ",", "actually", ":", "\"", "News", "is", "something", "somebody", "does", "n't", "want", "printed", ";", "all", "else", "is", "advertising", ".", "\""]
# ::lemmas ["William", "Randolph", "Hearst", ",", "actually", ":", "\"", "news", "be", "something", "somebody", "do", "not", "want", "print", ";", "all", "else", "be", "advertising", ".", "\""]
(c4-8 / say-01
      :ARG0 (c4-6 / person
                  :name (c4-4 / name
                              :op1 "William"
                              :op2 "Randolph"
                              :op3 "Hearst"))
      :ARG1 (c4-11 / and
                   :op1 (c4-0 / want-01
                              :ARG0 (c4-1 / somebody)
                              :ARG1 (c4-10 / print-01
                                           :ARG1 (c4-5 / news))
                              :polarity -)
                   :op2 (c4-3 / advertise-01
                              :mod (c4-7 / all)
                              :mod (c4-2 / else)))
      :ARG1-of (c4-9 / actual-02))

# ::snt : 'Journalism is printing what someone else does not want printed: everything else is public relations' - Orwell
# ::tokens [":", "'", "Journalism", "is", "printing", "what", "someone", "else", "does", "not", "want", "printed", ":", "everything", "else", "is", "public", "relations", "'", "-", "Orwell"]
# ::lemmas [":", "'", "journalism", "be", "print", "what", "someone", "else", "do", "not", "want", "print", ":", "everything", "else", "be", "public", "relation", "'", "-", "orwell"]
(c5-9 / say-01
      :ARG0 (c5-7 / person
                  :name (c5-6 / name
                              :op1 "Orwell"))
      :ARG1 (c5-13 / and
                   :op1 (c5-12 / print-01
                               :ARG0 (c5-0 / journalism)
                               :ARG1 (c5-11 / thing
                                            :ARG1-of (c5-2 / print-01
                                                           :ARG1-of (c5-1 / want-01
                                                                          :ARG0 (c5-4 / someone
                                                                                      :mod (c5-5 / else))
                                                                          :polarity -))))
                   :op2 (c5-8 / relation-03
                              :ARG1 (c5-10 / public)
                              :domain (c5-3 / everything
                                            :mod c5-5))))

# ::snt Thanks for the correction!
# ::tokens ["Thanks", "for", "the", "correction", "!"]
# ::lemmas ["thank", "for", "the", "correction", "!"]
(c6-4 / thank-01
      :ARG0 (c6-1 / i)
      :ARG1 (c6-0 / you)
      :ARG2 (c6-3 / thing
                  :ARG1-of (c6-2 / correct-01
                                 :ARG0 c6-0))
      :mode expressive)
