# ::snt turn the fucking caps lock off bro
# ::tokens ["turn", "the", "fucking", "caps", "lock", "off", "bro"]
# ::lemmas ["turn", "the", "fucking", "cap", "lock", "off", "bro"]
(c1-7 / say-01
      :ARG0 (c1-4 / i)
      :ARG1 (c1-8 / turn-off-07
                  :ARG0 (c1-5 / person
                              :ARG0-of (c1-0 / have-rel-role-91
                                             :ARG2 (c1-3 / brother)))
                  :ARG1 (c1-1 / lock-off-03
                              :ARG1 (c1-6 / cap
                                          :mod (c1-2 / fucking
                                                     :mode expressive)))
                  :mode imperative)
      :ARG2 c1-5)

# ::snt mail his head to ISIS
# ::tokens ["mail", "his", "head", "to", "ISIS"]
# ::lemmas ["mail", "his", "head", "to", "ISIS"]
(c2-2 / email-01
      :ARG0 (c2-1 / you)
      :ARG1 (c2-0 / head
                  :part-of (c2-5 / he))
      :ARG2 (c2-4 / criminal-organization
                  :name (c2-3 / name
                              :op1 "ISIS"))
      :mode imperative)

# ::snt : AFTER HOURS SYDNEY SIEGE IS FINALLY OVER.
# ::tokens [":", "AFTER", "HOURS", "SYDNEY", "SIEGE", "IS", "FINALLY", "OVER", "."]
# ::lemmas [":", "after", "HOURS", "SYDNEY", "SIEGE", "IS", "finally", "over", "."]
(c3-3 / over-01
      :ARG1 (c3-5 / city
                  :name (c3-4 / name
                              :op1 "Sydney"))
      :time (c3-7 / after
                  :quant (c3-2 / multiple
                               :op1 (c3-6 / temporal-quantity
                                          :unit (c3-0 / hour)
                                          :quant 1)))
      :mod (c3-1 / final))

# ::snt yeah but aren't there still a few bombs supposedly lying around ?
# ::tokens ["yeah", "but", "are", "n't", "there", "still", "a", "few", "bombs", "supposedly", "lying", "around", "?"]
# ::lemmas ["yeah", "but", "be", "not", "there", "still", "a", "few", "bomb", "supposedly", "lie", "around", "?"]
(c4-6 / contrast-01
      :ARG1 (c4-0 / yeah
                  :mode expressive)
      :ARG2 (c4-1 / lie-07
                  :ARG1 (c4-3 / bomb
                              :quant (c4-2 / few))
                  :ARG2 (c4-8 / around)
                  :ARG1-of (c4-7 / suppose-01)
                  :mod (c4-4 / still)
                  :polarity (c4-5 / amr-unknown)))

# ::snt One less religious nutjob. Fuck him.
# ::tokens ["One", "less", "religious", "nutjob", ".", "Fuck", "him", "."]
# ::lemmas ["One", "less", "religious", "nutjob", ".", "fuck", "he", "."]
(c5-3 / multi-sentence
      :snt1 (c5-6 / nutjob
                  :quant (c5-2 / less
                               :quant (c5-5 / one))
                  :mod (c5-7 / religion))
      :snt2 (c5-4 / fuck-01
                  :ARG0 (c5-1 / you)
                  :ARG1 (c5-0 / he)
                  :mode imperative))

# ::snt The only reason such despicable situations happen in the first place, is because they're tolerated.
# ::tokens ["The", "only", "reason", "such", "despicable", "situations", "happen", "in", "the", "first", "place", ",", "is", "because", "they", "'re", "tolerated", "."]
# ::lemmas ["the", "only", "reason", "such", "despicable", "situation", "happen", "in", "the", "first", "place", ",", "be", "because", "they", "be", "tolerate", "."]
(c6-4 / cause-01
      :ARG0 (c6-6 / tolerate-01
                  :ARG1 (c6-5 / situation
                              :mod (c6-3 / despicable)
                              :mod (c6-1 / such)
                              :ARG1-of c6-4))
      :mod (c6-0 / only)
      :mod (c6-2 / in-the-first-place))

# ::snt : AFTER HOURS SYDNEY SIEGE IS FINALLY OVER.
# ::tokens [":", "AFTER", "HOURS", "SYDNEY", "SIEGE", "IS", "FINALLY", "OVER", "."]
# ::lemmas [":", "after", "HOURS", "SYDNEY", "SIEGE", "IS", "finally", "over", "."]
(c7-3 / over-01
      :ARG1 (c7-5 / city
                  :name (c7-4 / name
                              :op1 "Sydney"))
      :time (c7-7 / after
                  :quant (c7-2 / multiple
                               :op1 (c7-6 / temporal-quantity
                                          :unit (c7-0 / hour)
                                          :quant 1)))
      :mod (c7-1 / final))

# ::snt Like all disgusting crime and savagery, it flourishes because its tolerated in a misguided liberal era. It will change.
# ::tokens ["Like", "all", "disgusting", "crime", "and", "savagery", ",", "it", "flourishes", "because", "its", "tolerated", "in", "a", "misguided", "liberal", "era", ".", "It", "will", "change", "."]
# ::lemmas ["like", "all", "disgusting", "crime", "and", "savagery", ",", "it", "flourish", "because", "its", "tolerate", "in", "a", "misguided", "liberal", "era", ".", "it", "will", "change", "."]
(c8-1 / multi-sentence
      :snt1 (c8-0 / flourish-01
                  :ARG1 (c8-5 / it)
                  :ARG1-of (c8-7 / resemble-01
                                 :ARG2 (c8-15 / and
                                              :op1 (c8-8 / crime-02)
                                              :op2 (c8-12 / savagery)
                                              :ARG0-of (c8-9 / disgust-01)
                                              :mod (c8-4 / all)))
                  :ARG1-of (c8-10 / cause-01
                                  :ARG0 (c8-14 / tolerate-01
                                               :ARG1 c8-5
                                               :time (c8-3 / era
                                                           :ARG1-of (c8-2 / liberal-02)
                                                           :ARG1-of (c8-6 / misguide-01)))))
      :snt2 (c8-11 / change-01
                   :ARG1 (c8-13 / it)))

# ::snt ayy lmao
# ::tokens ["ayy", "lmao"]
# ::lemmas ["ayy", "lmao"]
(c9-0 / laugh-01
      :ARG0 (c9-2 / i
                  :part (c9-4 / ass))
      :ARG0-of (c9-3 / cause-01
                     :ARG1 (c9-1 / off
                                 :domain c9-4)))

# ::snt CAPS LOCK BEAST
# ::tokens ["CAPS", "LOCK", "BEAST"]
# ::lemmas ["caps", "lock", "beast"]
(c10-1 / beach
       :name (c10-0 / name
                    :op1 "CAPS"))

# ::snt thanks gd
# ::tokens ["thanks", "gd"]
# ::lemmas ["thank", "gd"]
(c11-2 / thank-01
       :ARG0 (c11-3 / i)
       :ARG1 (c11-1 / person
                    :name (c11-0 / name
                                 :op1 "Gd")))

# ::snt : AFTER HOURS SYDNEY SIEGE IS FINALLY OVER. Alhamdulilah :") BE SAFE SYDNEY!
# ::tokens [":", "AFTER", "HOURS", "SYDNEY", "SIEGE", "IS", "FINALLY", "OVER", ".", "Alhamdulilah", ":", "\"", ")", "BE", "SAFE", "SYDNEY", "!"]
# ::lemmas [":", "after", "HOURS", "SYDNEY", "SIEGE", "IS", "finally", "over", ".", "Alhamdulilah", ":", "\"", ")", "be", "safe", "sydney", "!"]
(c12-2 / multi-sentence
       :snt1 (c12-3 / over-01
                    :ARG1 (c12-9 / city
                                 :name (c12-5 / name
                                              :op1 "Sydney"))
                    :time (c12-14 / after
                                  :quant (c12-7 / multiple
                                                :op1 (c12-13 / temporal-quantity
                                                             :unit (c12-0 / hour)
                                                             :quant 1)))
                    :mod (c12-1 / final))
       :snt2 (c12-12 / say-01
                     :ARG1 (c12-4 / safe-01
                                  :ARG0 (c12-8 / city
                                               :name (c12-6 / name
                                                            :op1 "Sydney"))
                                  :mode imperative)
                     :ARG2 (c12-10 / person
                                   :name (c12-11 / name
                                                 :op1 "Alhamdulilah"))))

# ::snt : AFTER HOURS SYDNEY SIEGE IS FINALLY OVER.
# ::tokens [":", "AFTER", "HOURS", "SYDNEY", "SIEGE", "IS", "FINALLY", "OVER", "."]
# ::lemmas [":", "after", "HOURS", "SYDNEY", "SIEGE", "IS", "finally", "over", "."]
(c14-3 / over-01
       :ARG1 (c14-5 / city
                    :name (c14-4 / name
                                 :op1 "Sydney"))
       :time (c14-7 / after
                    :quant (c14-2 / multiple
                                  :op1 (c14-6 / temporal-quantity
                                              :unit (c14-0 / hour)
                                              :quant 1)))
       :mod (c14-1 / final))
