# ::snt bring back death penalty
# ::tokens ["bring", "back", "death", "penalty"]
# ::lemmas ["bring", "back", "death", "penalty"]
(c1-1 / bring-01
      :ARG0 (c1-0 / you)
      :ARG1 (c1-2 / penalty
                  :mod (c1-3 / die-01))
      :direction (c1-4 / back)
      :mode imperative)

# ::snt Yes, I am speculating. But we know of + returnees from Syria and Iraq and we know, what IS told them to do ...
# ::tokens ["Yes", ",", "I", "am", "speculating", ".", "But", "we", "know", "of", "+", "returnees", "from", "Syria", "and", "Iraq", "and", "we", "know", ",", "what", "IS", "told", "them", "to", "do", "..."]
# ::lemmas ["yes", ",", "i", "be", "speculate", ".", "but", "we", "know", "of", "+", "returnee", "from", "Syria", "and", "Iraq", "and", "we", "know", ",", "what", "be", "tell", "they", "to", "do", "..."]
(c2-0 / multi-sentence
      :snt1 (c2-5 / speculate-01
                  :ARG0 (c2-15 / i))
      :snt2 (c2-19 / contrast-01
                   :ARG2 (c2-7 / and
                               :op1 (c2-17 / know-01
                                           :ARG0 (c2-12 / we)
                                           :ARG1 (c2-14 / and
                                                        :op1 (c2-2 / person
                                                                   :ARG1-of (c2-10 / return-01
                                                                                   :ARG3 (c2-9 / and
                                                                                               :op1 (c2-3 / country
                                                                                                          :name (c2-8 / name
                                                                                                                      :op1 "Syria"))
                                                                                               :op2 (c2-16 / country
                                                                                                           :name (c2-18 / name
                                                                                                                        :op1 "Iraq")))))
                                                        :op2 (c2-6 / person
                                                                   :ARG1-of c2-10)))
                               :op2 (c2-13 / know-01
                                           :ARG0 c2-12
                                           :ARG1 (c2-21 / thing
                                                        :ARG1-of (c2-4 / do-02
                                                                       :ARG0 c2-14
                                                                       :ARG1-of (c2-20 / tell-01
                                                                                       :ARG0 (c2-11 / government-organization
                                                                                                    :name (c2-1 / name
                                                                                                                :op1 "IS"))
                                                                                       :ARG2 c2-14)))))))

# ::snt think you really miss the part where I said they want to die! It becomes meaning less either way.
# ::tokens ["think", "you", "really", "miss", "the", "part", "where", "I", "said", "they", "want", "to", "die", "!", "It", "becomes", "meaning", "less", "either", "way", "."]
# ::lemmas ["think", "you", "really", "miss", "the", "part", "where", "i", "say", "they", "want", "to", "die", "!", "it", "becomes", "mean", "less", "either", "way", "."]
(c3-3 / multi-sentence
      :snt1 (c3-16 / think-01
                   :ARG0 (c3-0 / you)
                   :ARG1 (c3-9 / miss-02
                               :ARG0 c3-0
                               :ARG1 (c3-10 / part
                                            :topic (c3-15 / say-01
                                                          :ARG0 (c3-7 / i)
                                                          :ARG1 (c3-1 / want-01
                                                                      :ARG0 (c3-14 / they)
                                                                      :ARG1 (c3-11 / die-01
                                                                                   :ARG1 c3-14))))
                               :ARG1-of (c3-12 / real-04)))
      :snt2 (c3-5 / become-01
                  :ARG1 (c3-13 / it)
                  :ARG2 (c3-2 / mean-01
                              :ARG1 c3-13
                              :ARG2 (c3-4 / less)
                              :mod (c3-8 / way
                                         :mod (c3-6 / either)))))

# ::snt using 'scum', 'puppets', etc makes you look less professional and more like North Korean media, even if you're right. my
# ::tokens ["using", "'", "scum", "'", ",", "'", "puppets", "'", ",", "etc", "makes", "you", "look", "less", "professional", "and", "more", "like", "North", "Korean", "media", ",", "even", "if", "you", "'re", "right", ".", "my"]
# ::lemmas ["use", "'", "scum", "'", ",", "'", "puppet", "'", ",", "etc", "make", "you", "look", "less", "professional", "and", "more", "like", "North", "Korean", "medium", ",", "even", "if", "you", "be", "right", ".", "my"]
(c4-1 / make-02
      :ARG0 (c4-14 / use-01
                   :ARG0 (c4-16 / you)
                   :ARG1 (c4-5 / and
                               :op1 (c4-3 / scum)
                               :op2 (c4-2 / puppet)
                               :op3 (c4-10 / et-cetera)))
      :ARG1 (c4-15 / and
                   :op1 (c4-7 / look-02
                              :ARG0 c4-16
                              :ARG1 (c4-4 / professional
                                          :ARG2-of (c4-6 / have-degree-91
                                                         :ARG1 c4-16
                                                         :ARG3 (c4-18 / less))))
                   :op2 (c4-0 / look-02
                              :ARG0 c4-16
                              :ARG1 (c4-12 / media
                                           :mod (c4-17 / country
                                                       :name (c4-11 / name
                                                                    :op1 "North"
                                                                    :op2 "Korea")))
                              :ARG2-of c4-6
                              :ARG1 c4-16
                              :ARG3 (c4-8 / more)))
      :concession (c4-9 / even-if
                        :op1 (c4-13 / right-06
                                    :ARG1 c4-16)))

# ::snt I know. And I'm not news agency, but a guy, mixing facts with (informed) opinion all the time.You'll see, I was right.
# ::tokens ["I", "know", ".", "And", "I", "'m", "not", "news", "agency", ",", "but", "a", "guy", ",", "mixing", "facts", "with", "(", "informed", ")", "opinion", "all", "the", "time", ".", "You'll", "see", ",", "I", "was", "right", "."]
# ::lemmas ["i", "know", ".", "and", "i", "be", "not", "news", "agency", ",", "but", "a", "guy", ",", "mix", "fact", "with", "(", "inform", ")", "opinion", "all", "the", "time", ".", "You'll", "see", ",", "i", "be", "right", "."]
(c5-1 / multi-sentence
      :snt1 (c5-13 / know-01
                   :ARG0 (c5-11 / i))
      :snt2 (c5-3 / and
                  :op2 (c5-17 / contrast-01
                              :ARG1 (c5-10 / agency
                                           :mod (c5-5 / news)
                                           :domain (c5-12 / i)
                                           :polarity -)
                              :ARG2 (c5-9 / guy
                                          :domain c5-12
                                          :ARG0-of (c5-7 / mix-01
                                                         :ARG1 (c5-4 / fact)
                                                         :ARG2 (c5-19 / thing
                                                                      :ARG1-of (c5-15 / opine-01)
                                                                      :ARG1-of (c5-0 / inform-01))
                                                         :time (c5-18 / time
                                                                      :mod (c5-6 / all))))))
      :snt3 (c5-2 / see-01
                  :ARG0 (c5-14 / you)
                  :ARG1 (c5-8 / right-06
                              :ARG1 (c5-16 / i))))

# ::snt for sure they gained experience in Syria or Iraq, they executed wouded man with cold blood.
# ::tokens ["for", "sure", "they", "gained", "experience", "in", "Syria", "or", "Iraq", ",", "they", "executed", "wouded", "man", "with", "cold", "blood", "."]
# ::lemmas ["for", "sure", "they", "gain", "experience", "in", "Syria", "or", "Iraq", ",", "they", "execute", "woude", "man", "with", "cold", "blood", "."]
(c6-10 / gain-02
       :ARG0 (c6-13 / they)
       :ARG1 (c6-5 / experience-01
                   :ARG0 c6-13
                   :location (c6-3 / or
                                   :op1 (c6-9 / country
                                              :name (c6-6 / name
                                                          :op1 "Syria"))
                                   :op2 (c6-8 / country
                                              :name (c6-7 / name
                                                          :op1 "Iraq"))))
       :ARG1-of (c6-12 / sure-02)
       :ARG1-of (c6-11 / cause-01
                       :ARG0 (c6-2 / execute-01
                                   :ARG0 c6-13
                                   :ARG1 (c6-1 / man
                                               :mod (c6-0 / woud)
                                               :ARG1-of (c6-4 / blood-02
                                                              :ARG1-of (c6-14 / cold-01))))))

# ::snt who gives a shit. u want to pay millions to keep them in a jail ?ffs cut their heads off
# ::tokens ["who", "gives", "a", "shit", ".", "u", "want", "to", "pay", "millions", "to", "keep", "them", "in", "a", "jail", "?", "ffs", "cut", "their", "heads", "off"]
# ::lemmas ["who", "give", "a", "shit", ".", "u", "want", "to", "pay", "millions", "to", "keep", "they", "in", "a", "jail", "?", "ffs", "cut", "their", "head", "off"]
(c7-4 / multi-sentence
      :snt1 (c7-11 / give-16
                   :ARG0 (c7-17 / amr-unknown)
                   :ARG1 (c7-14 / shit))
      :snt2 (c7-1 / want-01
                  :ARG0 (c7-2 / you)
                  :ARG1 (c7-8 / pay-01
                              :ARG0 (c7-13 / you)
                              :ARG1 (c7-9 / multiple
                                          :op1 (c7-3 / monetary-quantity
                                                     :unit (c7-10 / dollar)
                                                     :quant 1000000))
                              :ARG3 (c7-16 / keep-01
                                           :ARG0 c7-13
                                           :ARG1 (c7-15 / they
                                                        :part (c7-0 / head))
                                           :location (c7-5 / jail)))
                  :polarity c7-17)
      :ARG1-of (c7-12 / cut-off-04
                      :ARG0 (c7-7 / you
                                  :mod (c7-6 / fuck
                                             :mode expressive))))

# ::snt that is ISLAM
# ::tokens ["that", "is", "ISLAM"]
# ::lemmas ["that", "be", "ISLAM"]
(c8-1 / religious-group
      :name (c8-0 / name
                  :op1 "Islam")
      :domain (c8-2 / that))

# ::snt sure it's IS? Could it be some other jihadist group perhaps?
# ::tokens ["sure", "it", "'s", "IS", "?", "Could", "it", "be", "some", "other", "jihadist", "group", "perhaps", "?"]
# ::lemmas ["sure", "it", "be", "is", "?", "could", "it", "be", "some", "other", "jihadist", "group", "perhaps", "?"]
(c9-1 / multi-sentence
      :snt1 (c9-7 / sure-02
                  :ARG1 (c9-4 / it))
      :snt2 (c9-5 / possible-01
                  :ARG1 (c9-6 / group
                              :mod (c9-0 / jihadist)
                              :mod (c9-2 / other)
                              :mod (c9-3 / some))
                  :polarity (c9-8 / amr-unknown)))

# ::snt Sorry. To shoot an injured, defenseless person makes "you" a scum imo.No matter your religion, race, nationality etc.
# ::tokens ["Sorry", ".", "To", "shoot", "an", "injured", ",", "defenseless", "person", "makes", "\"", "you", "\"", "a", "scum", "imo", ".", "No", "matter", "your", "religion", ",", "race", ",", "nationality", "etc", "."]
# ::lemmas ["sorry", ".", "to", "shoot", "an", "injure", ",", "defenseless", "person", "make", "\"", "you", "\"", "a", "scum", "imo", ".", "no", "matter", "your", "religion", ",", "race", ",", "nationality", "etc", "."]
(c10-2 / multi-sentence
       :snt1 (c10-15 / sorry-01)
       :snt2 (c10-3 / opine-01
                    :ARG0 (c10-7 / i)
                    :ARG1 (c10-10 / make-02
                                  :ARG0 (c10-4 / shoot-02
                                               :ARG1 (c10-11 / person
                                                             :ARG1-of (c10-13 / injure-01)
                                                             :ARG1-of (c10-12 / defend-01
                                                                              :polarity -)))
                                  :ARG1 (c10-1 / scum
                                               :domain (c10-0 / you))
                                  :ARG1-of (c10-14 / regardless-91
                                                   :ARG2 (c10-16 / and
                                                                 :op1 (c10-8 / religion
                                                                             :poss c10-0)
                                                                 :op2 (c10-6 / race
                                                                             :poss c10-0)
                                                                 :op3 (c10-9 / nationality
                                                                             :poss c10-0)
                                                                 :op4 (c10-5 / et-cetera))))))

# ::snt How should they be punished? Death is just not enough....
# ::tokens ["How", "should", "they", "be", "punished", "?", "Death", "is", "just", "not", "enough", "...."]
# ::lemmas ["how", "should", "they", "be", "punish", "?", "death", "be", "just", "not", "enough", "...."]
(c11-2 / multi-sentence
       :snt1 (c11-5 / recommend-01
                    :ARG1 (c11-4 / punish-01
                                 :ARG1 (c11-7 / they)
                                 :manner (c11-8 / amr-unknown)))
       :snt2 (c11-0 / have-quant-91
                    :ARG1 (c11-6 / die-01)
                    :ARG3 (c11-3 / enough)
                    :mod (c11-1 / just)
                    :polarity -))

# ::snt IS will love being part of it. so they will gladly accept that on them...
# ::tokens ["IS", "will", "love", "being", "part", "of", "it", ".", "so", "they", "will", "gladly", "accept", "that", "on", "them", "..."]
# ::lemmas ["be", "will", "love", "be", "part", "of", "it", ".", "so", "they", "will", "gladly", "accept", "that", "on", "they", "..."]
(c12-0 / love-01
       :ARG0 (c12-3 / person
                    :mod (c12-5 / country
                                :name (c12-2 / name
                                             :op1 "Israel")))
       :ARG1 (c12-9 / participate-01
                    :ARG0 c12-3
                    :ARG1 (c12-1 / it))
       :ARG0-of (c12-4 / cause-01
                       :ARG1 (c12-10 / accept-01
                                     :ARG0 (c12-8 / they)
                                     :ARG1 (c12-7 / that)
                                     :ARG3 c12-8
                                     :manner (c12-6 / glad-02))))

# ::snt Have jihadis from syria and iraq returned to France?
# ::tokens ["Have", "jihadis", "from", "syria", "and", "iraq", "returned", "to", "France", "?"]
# ::lemmas ["have", "jihadi", "from", "syria", "and", "iraq", "return", "to", "France", "?"]
(c13-5 / return-01
       :ARG1 (c13-0 / jihadi
                    :source (c13-9 / and
                                   :op1 (c13-6 / country
                                               :name (c13-2 / name
                                                            :op1 "Syria"))
                                   :op2 (c13-7 / country
                                               :name (c13-3 / name
                                                            :op1 "Iraq"))))
       :ARG4 (c13-8 / country
                    :name (c13-4 / name
                                 :op1 "France"))
       :polarity (c13-1 / amr-unknown))

# ::snt : terrorist scum executes injured police man in . LOOK!
# ::tokens [":", "terrorist", "scum", "executes", "injured", "police", "man", "in", ".", "LOOK", "!"]
# ::lemmas [":", "terrorist", "scum", "execute", "injured", "police", "man", "in", ".", "look", "!"]
(c14-2 / multi-sentence
       :snt1 (c14-3 / execute-01
                    :ARG0 (c14-8 / scum
                                 :mod (c14-9 / terrorist))
                    :ARG1 (c14-5 / man
                                 :ARG1-of (c14-4 / injure-01)
                                 :mod (c14-6 / police))
                    :location (c14-7 / inside))
       :snt2 (c14-1 / look-01
                    :ARG0 (c14-0 / you)
                    :mode imperative))

# ::snt for the translation if u need it . terro: u want to die? Police: no it's ok , boss. and Bam bullet fired
# ::tokens ["for", "the", "translation", "if", "u", "need", "it", ".", "terro", ":", "u", "want", "to", "die", "?", "Police", ":", "no", "it", "'s", "ok", ",", "boss", ".", "and", "Bam", "bullet", "fired"]
# ::lemmas ["for", "the", "translation", "if", "u", "need", "it", ".", "terro", ":", "u", "want", "to", "die", "?", "police", ":", "no", "it", "be", "ok", ",", "boss", ".", "and", "Bam", "bullet", "fire"]
(c15-0 / multi-sentence
       :snt1 (c15-7 / have-purpose-91
                    :ARG2 (c15-23 / translate-01)
                    :condition (c15-11 / need-01
                                       :ARG0 (c15-18 / you)
                                       :ARG1 c15-23))
       :snt2 (c15-3 / say-01
                    :ARG0 (c15-1 / person
                                 :name (c15-20 / name
                                               :op1 " terro"))
                    :ARG1 (c15-13 / want-01
                                  :ARG0 (c15-21 / you)
                                  :ARG1 (c15-2 / die-01
                                               :ARG1 c15-21)
                                  :polarity (c15-6 / amr-unknown))
                    :ARG2 (c15-4 / police)
                    :polarity (c15-14 / amr-unknown))
       :snt3 (c15-12 / and
                     :op1 (c15-19 / okay-04
                                  :ARG1 (c15-15 / it)
                                  :ARG2 (c15-9 / person
                                               :ARG0-of (c15-5 / have-rel-role-91
                                                               :ARG1 (c15-17 / i)
                                                               :ARG2 (c15-10 / boss))))
                     :op2 (c15-8 / fire-01
                                 :ARG1 (c15-16 / bullet
                                               :mod (c15-22 / bam)))))

# ::snt bearded baboon-faced bastard barbarians slit throats, rape women, et al but offended by cartoon? Execute em!
# ::tokens ["bearded", "baboon", "-", "faced", "bastard", "barbarians", "slit", "throats", ",", "rape", "women", ",", "et", "al", "but", "offended", "by", "cartoon", "?", "Execute", "em", "!"]
# ::lemmas ["bearded", "baboon", "-", "face", "bastard", "barbarians", "slit", "throat", ",", "rape", "woman", ",", "et", "al", "but", "offend", "by", "cartoon", "?", "execute", "em", "!"]
(c16-3 / multi-sentence
       :snt1 (c16-9 / contrast-01
                    :ARG1 (c16-12 / slit-01
                                  :ARG0 (c16-4 / barbarian
                                               :part (c16-2 / face
                                                            :mod (c16-10 / baboon))
                                               :mod (c16-13 / bastard))
                                  :ARG1 (c16-14 / throat))
                    :ARG2 (c16-8 / rape-01
                                 :ARG0 c16-4
                                 :ARG1 (c16-15 / and
                                               :op1 (c16-0 / woman)
                                               :op2 (c16-7 / et-cetera)))
                    :ARG2 (c16-5 / offend-01
                                 :ARG0 (c16-11 / cartoon)
                                 :ARG1 c16-4))
       :snt2 (c16-6 / execute-01
                    :ARG0 (c16-1 / you)
                    :ARG1 c16-4
                    :mode imperative))

# ::snt we have no confirmation it's IS...
# ::tokens ["we", "have", "no", "confirmation", "it", "'s", "IS", "..."]
# ::lemmas ["we", "have", "no", "confirmation", "it", "be", "is", "..."]
(c17-0 / have-03
       :ARG0 (c17-1 / we)
       :ARG1 (c17-2 / confirm-01
                    :ARG1 (c17-3 / it))
       :polarity -)

# ::snt Great post! Why Not post on Proximity Based Travel Network?
# ::tokens ["Great", "post", "!", "Why", "Not", "post", "on", "Proximity", "Based", "Travel", "Network", "?"]
# ::lemmas ["great", "post", "!", "why", "not", "post", "on", "Proximity", "Based", "Travel", "Network", "?"]
(c18-0 / multi-sentence
       :snt1 (c18-3 / post-01
                    :mod (c18-5 / great)
                    :mode expressive)
       :snt2 (c18-4 / cause-01
                    :ARG0 (c18-7 / amr-unknown)
                    :ARG1 (c18-6 / post-01
                                 :ARG2 (c18-1 / network
                                              :name (c18-2 / name
                                                           :op1 "Proximity"
                                                           :op2 "Based"
                                                           :op3 "Travel"
                                                           :op4 "Network"))
                                 :polarity -)))

# ::snt how the hell you gonna bring back death penalty for people who already what to die? And then gain notoriety!
# ::tokens ["how", "the", "hell", "you", "gon", "na", "bring", "back", "death", "penalty", "for", "people", "who", "already", "what", "to", "die", "?", "And", "then", "gain", "notoriety", "!"]
# ::lemmas ["how", "the", "hell", "you", "going", "to", "bring", "back", "death", "penalty", "for", "people", "who", "already", "what", "to", "die", "?", "and", "then", "gain", "notoriety", "!"]
(c19-3 / multi-sentence
       :snt1 (c19-4 / bring-01
                    :ARG0 (c19-1 / you)
                    :ARG1 (c19-8 / penalty
                                 :mod (c19-9 / die-01
                                             :ARG1 (c19-14 / person
                                                           :ARG0-of (c19-2 / die-01
                                                                           :time (c19-15 / already)))))
                    :ARG2 (c19-10 / back)
                    :manner (c19-5 / amr-unknown
                                   :mod (c19-0 / hell)))
       :snt2 (c19-7 / and
                    :op2 (c19-11 / gain-02
                                 :ARG0 (c19-12 / you)
                                 :ARG1 (c19-6 / notoriety)
                                 :time (c19-13 / then))))

# ::snt no i did notu are calling for being nice and wasting tax payer money on mass murderers.cut heads off
# ::tokens ["no", "i", "did", "notu", "are", "calling", "for", "being", "nice", "and", "wasting", "tax", "payer", "money", "on", "mass", "murderers.cut", "heads", "off"]
# ::lemmas ["no", "i", "do", "notu", "be", "call", "for", "be", "nice", "and", "waste", "tax", "payer", "money", "on", "mass", "murderers.cut", "head", "off"]
(c20-4 / multi-sentence
       :snt1 (c20-10 / call-03
                     :ARG0 (c20-6 / i)
                     :ARG1 (c20-15 / and
                                   :op1 (c20-7 / nice-01)
                                   :op2 (c20-1 / waste-01
                                               :ARG1 (c20-8 / money
                                                            :source (c20-9 / person
                                                                           :ARG0-of (c20-14 / pay-01
                                                                                            :ARG1 (c20-13 / tax))))
                                               :ARG2 (c20-5 / person
                                                            :ARG0-of (c20-3 / murder-01
                                                                            :mod (c20-11 / mass)))))
                     :polarity -)
       :snt2 (c20-12 / cut-off-04
                     :ARG0 (c20-2 / you)
                     :ARG1 (c20-0 / head)
                     :mode imperative))
