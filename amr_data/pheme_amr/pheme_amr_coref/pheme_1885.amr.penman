# ::snt "No justice. Just us."
# ::tokens ["\"", "No", "justice", ".", "Just", "us", ".", "\""]
# ::lemmas ["\"", "no", "justice", ".", "just", "we", ".", "\""]
(c1-2 / multi-sentence
      :snt1 (c1-0 / justice
                  :polarity -)
      :snt2 (c1-1 / we
                  :mod (c1-3 / just)))

# ::snt wouldn't that mean an investigation not riots to tell the police to get out of our way we are going to loot cause we're mad
# ::tokens ["would", "n't", "that", "mean", "an", "investigation", "not", "riots", "to", "tell", "the", "police", "to", "get", "out", "of", "our", "way", "we", "are", "going", "to", "loot", "cause", "we", "'re", "mad"]
# ::lemmas ["would", "not", "that", "mean", "an", "investigation", "not", "riot", "to", "tell", "the", "police", "to", "get", "out", "of", "our", "way", "we", "be", "go", "to", "loot", "cause", "we", "be", "mad"]
(c2-1 / mean-01
      :ARG1 (c2-12 / that)
      :ARG2 (c2-3 / instead-of-91
                  :ARG1 (c2-8 / investigate-01)
                  :ARG2 (c2-6 / riot-01
                              :purpose (c2-10 / tell-01
                                              :ARG1 (c2-9 / get-05
                                                          :ARG1 (c2-0 / we)
                                                          :ARG2 (c2-2 / out-06
                                                                      :ARG1 c2-0
                                                                      :ARG2 (c2-4 / way
                                                                                  :poss c2-0)))
                                              :ARG2 (c2-5 / police)
                                              :ARG1-of (c2-7 / cause-01
                                                             :ARG0 (c2-11 / mad-04
                                                                          :ARG1 c2-0)))))
      :polarity -)

# ::snt this is what it should be
# ::tokens ["this", "is", "what", "it", "should", "be"]
# ::lemmas ["this", "be", "what", "it", "should", "be"]
(c3-0 / recommend-01
      :ARG1 (c3-1 / this))

# ::snt I see you . Praying for you &amp; your city.
# ::tokens ["I", "see", "you", ".", "Praying", "for", "you", "&", "amp", ";", "your", "city", "."]
# ::lemmas ["i", "see", "you", ".", "pray", "for", "you", "&", "amp", ";", "your", "city", "."]
(c4-1 / multi-sentence
      :snt1 (c4-7 / see-01
                  :ARG0 (c4-2 / i)
                  :ARG1 (c4-0 / you))
      :snt2 (c4-4 / pray-01
                  :ARG1 (c4-9 / and
                              :op1 (c4-6 / you)
                              :op2 (c4-8 / person
                                         :name (c4-3 / name
                                                     :op1 "amp"))
                              :op3 (c4-5 / city
                                         :poss c4-6))))

# ::snt I think the cops antagonized a lot of the disturbances.
# ::tokens ["I", "think", "the", "cops", "antagonized", "a", "lot", "of", "the", "disturbances", "."]
# ::lemmas ["i", "think", "the", "cop", "antagonize", "a", "lot", "of", "the", "disturbance", "."]
(c5-4 / think-01
      :ARG0 (c5-1 / i)
      :ARG1 (c5-5 / antagonize-01
                  :ARG0 (c5-3 / cop)
                  :ARG1 (c5-2 / disturbances
                              :quant (c5-0 / lot))))

# ::snt that's my boy
# ::tokens ["that", "'s", "my", "boy"]
# ::lemmas ["that", "be", "my", "boy"]
(c6-2 / boy
      :domain (c6-0 / that)
      :poss (c6-1 / i))

# ::snt Ya' all Stay In Side !!!!
# ::tokens ["Ya", "'", "all", "Stay", "In", "Side", "!", "!", "!", "!"]
# ::lemmas ["ya", "'", "all", "stay", "in", "Side", "!", "!", "!", "!"]
(c7-0 / stay-01
      :ARG1 (c7-1 / you
                  :mod (c7-3 / all))
      :ARG3 (c7-2 / side)
      :mode expressive)

# ::snt amen
# ::tokens ["amen"]
# ::lemmas ["amen"]
(c8-0 / amen)

# ::snt : NO VIOLENCE! JUST JUSTICE!
# ::tokens [":", "NO", "VIOLENCE", "!", "JUST", "JUSTICE", "!"]
# ::lemmas [":", "no", "violence", "!", "just", "JUSTICE", "!"]
(c9-1 / contrast-01
      :ARG1 (c9-3 / innocent-01
                  :polarity -)
      :ARG2 (c9-0 / justice
                  :mod (c9-2 / just)))

# ::snt NO VIOLENCE! JUST JUSTICE!
# ::tokens ["NO", "VIOLENCE", "!", "JUST", "JUSTICE", "!"]
# ::lemmas ["no", "violence", "!", "just", "JUSTICE", "!"]
(c10-1 / contrast-01
       :ARG1 (c10-3 / innocent-01
                    :polarity -)
       :ARG2 (c10-0 / justice
                    :mod (c10-2 / just)))

# ::snt ": RT : NO VIOLENCE! JUST JUSTICE! " why settle? Have both
# ::tokens ["\"", ":", "RT", ":", "NO", "VIOLENCE", "!", "JUST", "JUSTICE", "!", "\"", "why", "settle", "?", "Have", "both"]
# ::lemmas ["\"", ":", "RT", ":", "no", "violence", "!", "just", "JUSTICE", "!", "\"", "why", "settle", "?", "have", "both"]
(c11-2 / multi-sentence
       :snt1 (c11-10 / say-01
                     :ARG0 (c11-8 / person
                                  :name (c11-7 / name
                                               :op1 "RT"))
                     :ARG1 (c11-12 / and
                                   :op1 (c11-6 / innocent-01
                                               :polarity -)
                                   :op2 (c11-0 / justice
                                               :mod (c11-11 / just))
                                   :op3 (c11-9 / cause-01
                                               :ARG0 (c11-5 / amr-unknown)
                                               :ARG1 (c11-4 / settle-02))))
       :snt2 (c11-1 / have-03
                    :ARG1 (c11-3 / both)))
