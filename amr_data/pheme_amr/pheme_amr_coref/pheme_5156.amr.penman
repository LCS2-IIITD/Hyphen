# ::snt Vigil for shooting victim Mike Brown will be held at pm Sunday at Canfield Green apartment complex in
# ::tokens ["Vigil", "for", "shooting", "victim", "Mike", "Brown", "will", "be", "held", "at", "pm", "Sunday", "at", "Canfield", "Green", "apartment", "complex", "in"]
# ::lemmas ["Vigil", "for", "shoot", "victim", "Mike", "Brown", "will", "be", "hold", "at", "pm", "Sunday", "at", "Canfield", "Green", "apartment", "complex", "in"]
(c1-0 / hold-04
      :ARG1 (c1-4 / vigil
                  :beneficiary (c1-5 / person
                                     :name (c1-3 / name
                                                 :op1 "Mike"
                                                 :op2 "Brown")
                                     :ARG1-of (c1-1 / victimize-01
                                                    :ARG0 (c1-10 / shoot-02))))
      :time (c1-6 / date-entity
                  :weekday (c1-2 / sunday)
                  :time "17:00")
      :location (c1-7 / complex
                      :mod (c1-11 / apartment)
                      :location (c1-8 / city-district
                                      :name (c1-9 / name
                                                  :op1 "Canfield"
                                                  :op2 "Green"))))

# ::snt : Vigil for shooting victim Mike Brown will be held at pm Sunday at Canfield Green apartment complex in DM me to join
# ::tokens [":", "Vigil", "for", "shooting", "victim", "Mike", "Brown", "will", "be", "held", "at", "pm", "Sunday", "at", "Canfield", "Green", "apartment", "complex", "in", "DM", "me", "to", "join"]
# ::lemmas [":", "Vigil", "for", "shoot", "victim", "Mike", "Brown", "will", "be", "hold", "at", "pm", "Sunday", "at", "Canfield", "Green", "apartment", "complex", "in", "DM", "i", "to", "join"]
(c2-3 / multi-sentence
      :snt1 (c2-0 / hold-04
                  :ARG1 (c2-7 / vigil
                              :beneficiary (c2-8 / person
                                                 :name (c2-6 / name
                                                             :op1 "Mike"
                                                             :op2 "Brown")
                                                 :ARG1-of (c2-4 / victimize-01
                                                                :ARG2 (c2-14 / shoot-02))))
                  :time (c2-9 / date-entity
                              :weekday (c2-5 / sunday)
                              :time "17:00")
                  :location (c2-10 / complex
                                   :name (c2-11 / name
                                                :op1 "Canfield"
                                                :op2 "Green")
                                   :mod (c2-15 / apartment)
                                   :location (c2-12 / city
                                                    :name (c2-13 / name
                                                                 :op1 "DM"
                                                                 :op2 "Me"))))
      :snt2 (c2-1 / join-04
                  :ARG0 (c2-2 / you)
                  :mode imperative))

# ::snt st thing you do when a cop tells you to comply is resist! That's the only message some will send.
# ::tokens ["st", "thing", "you", "do", "when", "a", "cop", "tells", "you", "to", "comply", "is", "resist", "!", "That", "'s", "the", "only", "message", "some", "will", "send", "."]
# ::lemmas ["st", "thing", "you", "do", "when", "a", "cop", "tell", "you", "to", "comply", "be", "resist", "!", "that", "be", "the", "only", "message", "some", "will", "send", "."]
(c3-3 / multi-sentence
      :snt1 (c3-14 / thing
                   :ARG1-of (c3-8 / do-02
                                  :ARG0 (c3-1 / you)
                                  :time (c3-12 / tell-01
                                               :ARG0 (c3-9 / cop)
                                               :ARG1 (c3-10 / comply-01
                                                            :ARG0 c3-1)
                                               :ARG2 c3-1))
                   :domain (c3-11 / resist-01
                                  :ARG0 c3-1)
                   :ARG1-of (c3-0 / have-degree-91
                                  :ARG2 (c3-13 / stupid)
                                  :ARG3 (c3-7 / most)))
      :snt2 (c3-6 / send-01
                  :ARG0 (c3-2 / some)
                  :ARG1 (c3-4 / message
                              :mod (c3-5 / only)
                              :domain c3-11)))
