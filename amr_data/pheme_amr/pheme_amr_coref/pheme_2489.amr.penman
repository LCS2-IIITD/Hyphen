# ::snt : journalists dammartin asked to avoid filming police positions so not to alert suspects
# ::tokens [":", "journalists", "dammartin", "asked", "to", "avoid", "filming", "police", "positions", "so", "not", "to", "alert", "suspects"]
# ::lemmas [":", "journalist", "dammartin", "ask", "to", "avoid", "film", "police", "position", "so", "not", "to", "alert", "suspect"]
(c1-9 / ask-02
      :ARG0 (c1-0 / journalist
                  :name (c1-4 / name
                              :op1 "Dammartin"))
      :ARG1 (c1-3 / avoid-01
                  :ARG0 c1-0
                  :ARG1 (c1-1 / film-01
                              :ARG0 c1-0
                              :ARG1 (c1-6 / position
                                          :poss (c1-8 / police)))
                  :purpose (c1-5 / alert-01
                                 :ARG0 c1-0
                                 :ARG1 (c1-2 / person
                                             :ARG2-of (c1-7 / suspect-01))
                                 :polarity -)))

# ::snt I strongly condemn this barbaric attack as a Turkish Muslim.
# ::tokens ["I", "strongly", "condemn", "this", "barbaric", "attack", "as", "a", "Turkish", "Muslim", "."]
# ::lemmas ["i", "strongly", "condemn", "this", "barbaric", "attack", "as", "a", "Turkish", "Muslim", "."]
(c2-5 / condemn-01
      :ARG0 (c2-1 / i
                  :mod (c2-4 / religious-group
                             :name (c2-2 / name
                                         :op1 "Muslim")
                             :mod (c2-6 / country
                                        :name (c2-3 / name
                                                    :op1 "Turkey"))))
      :ARG1 (c2-9 / attack-01
                  :mod (c2-0 / barbaric)
                  :mod (c2-8 / this))
      :ARG1-of (c2-7 / strong-02))

# ::snt das wre fr die eine grere Strafe
# ::tokens ["das", "wre", "fr", "die", "eine", "grere", "Strafe"]
# ::lemmas ["das", "wre", "fr", "die", "eine", "grere", "Strafe"]
(c3-2 / die-01
      :ARG1 (c3-1 / we)
      :ARG2 (c3-0 / strafe
                  :mod (c3-3 / grere)))

# ::snt Just praying for the people's safety in France!! world global religion news
# ::tokens ["Just", "praying", "for", "the", "people", "'s", "safety", "in", "France", "!", "!", "world", "global", "religion", "news"]
# ::lemmas ["just", "pray", "for", "the", "people", "'s", "safety", "in", "France", "!", "!", "world", "global", "religion", "news"]
(c4-2 / multi-sentence
      :snt1 (c4-5 / pray-01
                  :ARG1 (c4-9 / safe-01
                              :ARG1 (c4-10 / person)
                              :location (c4-7 / country
                                              :name (c4-3 / name
                                                          :op1 "France")))
                  :mod (c4-0 / just)
                  :mode expressive)
      :snt2 (c4-4 / news
                  :topic (c4-6 / religion
                               :mod (c4-8 / globe))
                  :mod (c4-1 / world)))

# ::snt good. If they have a tv they will know exactly what I going on
# ::tokens ["good", ".", "If", "they", "have", "a", "tv", "they", "will", "know", "exactly", "what", "I", "going", "on"]
# ::lemmas ["good", ".", "if", "they", "have", "a", "tv", "they", "will", "know", "exactly", "what", "i", "go", "on"]
(c5-1 / multi-sentence
      :snt1 (c5-7 / good-02)
      :snt2 (c5-4 / know-01
                  :ARG0 (c5-9 / they)
                  :ARG1 (c5-8 / thing
                              :ARG1-of (c5-6 / go-on-15
                                             :ARG0 (c5-3 / i))
                              :mod (c5-2 / exact))
                  :condition (c5-0 / have-03
                                   :ARG0 c5-9
                                   :ARG1 (c5-5 / television))))

# ::snt hoffentlich bekommen sie die Typen lebend...
# ::tokens ["hoffentlich", "bekommen", "sie", "die", "Typen", "lebend", "..."]
# ::lemmas ["hoffentlich", "bekomman", "sie", "die", "Typen", "lebend", "..."]
(c6-6 / kommen-01
      :ARG0 (c6-4 / person
                  :name (c6-2 / name
                              :op1 "Hoffentlich"))
      :ARG1 (c6-0 / we)
      :ARG3 (c6-5 / die-01
                  :ARG1 c6-0
                  :ARG2 (c6-1 / lebend
                              :mod (c6-7 / prison
                                         :name (c6-3 / name
                                                     :op1 "Typen")))))

# ::snt : journalists inside dammartin asked to avoid filming police positions to not alert suspects where they are.
# ::tokens [":", "journalists", "inside", "dammartin", "asked", "to", "avoid", "filming", "police", "positions", "to", "not", "alert", "suspects", "where", "they", "are", "."]
# ::lemmas [":", "journalist", "inside", "dammartin", "ask", "to", "avoid", "film", "police", "position", "to", "not", "alert", "suspect", "where", "they", "be", "."]
(c7-11 / ask-02
       :ARG0 (c7-0 / journalist
                   :location (c7-1 / facility
                                   :name (c7-5 / name
                                               :op1 "Dammartin")))
       :ARG1 (c7-3 / avoid-01
                   :ARG0 c7-0
                   :ARG1 (c7-4 / film-01
                               :ARG0 c7-0
                               :ARG1 (c7-7 / position
                                           :poss (c7-10 / police)))
                   :purpose (c7-6 / alert-01
                                  :ARG0 c7-0
                                  :ARG1 (c7-2 / person
                                              :ARG2-of (c7-8 / suspect-01))
                                  :ARG2 (c7-9 / thing
                                              :location-of c7-2)
                                  :polarity -)))

# ::snt denke, das wird leider nix
# ::tokens ["denke", ",", "das", "wird", "leider", "nix"]
# ::lemmas ["denke", ",", "das", "wird", "leider", "nix"]
(c8-7 / say-01
      :ARG0 (c8-2 / i)
      :ARG1 (c8-8 / and
                  :op1 (c8-1 / leider
                             :domain (c8-4 / person
                                           :name (c8-3 / name
                                                       :op1 "denke")))
                  :op2 (c8-6 / leider
                             :domain c8-4)
                  :ARG1-of (c8-5 / cause-01
                                 :ARG0 (c8-0 / leider
                                             :domain c8-4)))
      :ARG2 c8-4)
