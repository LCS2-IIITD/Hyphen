# ::snt : Thanks, I learned that sometime afterwards. KUDOS to the French Special Forces too!
# ::tokens [":", "Thanks", ",", "I", "learned", "that", "sometime", "afterwards", ".", "KUDOS", "to", "the", "French", "Special", "Forces", "too", "!"]
# ::lemmas [":", "thank", ",", "i", "learn", "that", "sometime", "afterwards", ".", "KUDOS", "to", "the", "French", "Special", "Forces", "too", "!"]
(c1-2 / multi-sentence
      :snt1 (c1-10 / thank-01
                   :ARG0 (c1-3 / i)
                   :ARG1 (c1-0 / you)
                   :ARG2 (c1-1 / learn-01
                               :ARG0 c1-3
                               :ARG1 (c1-8 / that)
                               :time (c1-11 / afterwards
                                            :quant (c1-9 / sometime))))
      :snt2 (c1-4 / kudos
                  :beneficiary (c1-7 / military
                                     :name (c1-5 / name
                                                 :op1 "French"
                                                 :op2 "Special"
                                                 :op3 "Forces"))
                  :mod (c1-6 / too)))

# ::snt Well done to the French for ending this chapter of terror with the terrorists getting their deathwish. Swift justice.
# ::tokens ["Well", "done", "to", "the", "French", "for", "ending", "this", "chapter", "of", "terror", "with", "the", "terrorists", "getting", "their", "deathwish", ".", "Swift", "justice", "."]
# ::lemmas ["well", "do", "to", "the", "French", "for", "end", "this", "chapter", "of", "terror", "with", "the", "terrorist", "get", "their", "deathwish", ".", "swift", "justice", "."]
(c2-3 / multi-sentence
      :snt1 (c2-14 / say-01
                   :ARG1 (c2-9 / do-02
                               :ARG1-of (c2-1 / well-09))
                   :ARG2 (c2-8 / person
                               :mod (c2-10 / country
                                           :name (c2-6 / name
                                                       :op1 "France")))
                   :ARG3 (c2-4 / end-01
                               :ARG0 c2-8
                               :ARG1 (c2-11 / chapter
                                            :mod (c2-15 / terror)
                                            :mod (c2-13 / this))
                               :ARG2 (c2-12 / get-01
                                            :ARG0 (c2-7 / terrorist)
                                            :ARG1 (c2-2 / die-01
                                                        :ARG1 c2-7))))
      :snt2 (c2-0 / justice
                  :ARG1-of (c2-5 / Swift-02)))

# ::snt actually its three. And all three are dead
# ::tokens ["actually", "its", "three", ".", "And", "all", "three", "are", "dead"]
# ::lemmas ["actually", "its", "three", ".", "and", "all", "three", "be", "dead"]
(c3-0 / multi-sentence
      :snt1 (c3-6 / actual-02
                  :ARG1 (c3-2 / it))
      :snt2 (c3-1 / and
                  :op2 (c3-5 / die-01
                             :ARG1 (c3-4 / person
                                         :mod (c3-3 / all)
                                         :quant 3))))

# ::snt : - Both suspects killed as police storm building &gt;.
# ::tokens [":", "-", "Both", "suspects", "killed", "as", "police", "storm", "building", "&", "gt", ";", "."]
# ::lemmas [":", "-", "both", "suspect", "kill", "as", "police", "storm", "building", "&", "gt", ";", "."]
(c4-6 / kill-01
      :ARG1 (c4-2 / person
                  :ARG2-of (c4-5 / suspect-01)
                  :mod (c4-0 / both))
      :time (c4-1 / storm-01
                  :ARG0 (c4-7 / police)
                  :ARG1 (c4-8 / and
                              :op1 (c4-3 / building)
                              :op2 (c4-4 / gt))))

# ::snt we are coming
# ::tokens ["we", "are", "coming"]
# ::lemmas ["we", "be", "come"]
(c5-1 / come-01
      :ARG1 (c5-0 / we))

# ::snt Good. Swift justice!
# ::tokens ["Good", ".", "Swift", "justice", "!"]
# ::lemmas ["good", ".", "Swift", "justice", "!"]
(c6-1 / multi-sentence
      :snt1 (c6-2 / good-02)
      :snt2 (c6-0 / justice
                  :mod (c6-3 / Swift)))

# ::snt : I am very happy to hear those two terrorists have gone to their doom. Praise for all those involved.
# ::tokens [":", "I", "am", "very", "happy", "to", "hear", "those", "two", "terrorists", "have", "gone", "to", "their", "doom", ".", "Praise", "for", "all", "those", "involved", "."]
# ::lemmas [":", "i", "be", "very", "happy", "to", "hear", "those", "two", "terrorist", "have", "go", "to", "their", "doom", ".", "praise", "for", "all", "those", "involve", "."]
(c7-1 / multi-sentence
      :snt1 (c7-0 / happy-01
                  :ARG0 (c7-11 / hear-01
                               :ARG0 (c7-2 / i)
                               :ARG1 (c7-6 / go-02
                                           :ARG0 (c7-10 / terrorist
                                                        :mod (c7-8 / that)
                                                        :quant 2)
                                           :ARG4 (c7-5 / doom
                                                       :poss c7-10)))
                  :ARG1 c7-2
                  :degree (c7-3 / very))
      :snt2 (c7-4 / praise-01
                  :ARG1 (c7-9 / all
                              :ARG1-of (c7-7 / involve-01))))
