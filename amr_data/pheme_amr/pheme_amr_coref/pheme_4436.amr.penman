# ::snt Would strongly suggest following official advice. Listen to official news outlets directly. Not nd hand info.
# ::tokens ["Would", "strongly", "suggest", "following", "official", "advice", ".", "Listen", "to", "official", "news", "outlets", "directly", ".", "Not", "nd", "hand", "info", "."]
# ::lemmas ["would", "strongly", "suggest", "follow", "official", "advice", ".", "listen", "to", "official", "news", "outlet", "directly", ".", "not", "nd", "hand", "info", "."]
(c1-3 / multi-sentence
      :snt1 (c1-12 / suggest-01
                   :ARG1 (c1-2 / follow-02
                               :ARG1 (c1-13 / advise-01
                                            :mod (c1-7 / official)))
                   :ARG1-of (c1-8 / strong-02))
      :snt2 (c1-4 / listen-01
                  :ARG0 (c1-1 / you)
                  :ARG1 (c1-5 / outlet
                              :mod (c1-10 / news)
                              :mod (c1-6 / official))
                  :ARG1-of (c1-11 / direct-02)
                  :mode imperative)
      :snt3 (c1-9 / information
                  :mod (c1-0 / hand)
                  :polarity -))

# ::snt link us to the source of this?
# ::tokens ["link", "us", "to", "the", "source", "of", "this", "?"]
# ::lemmas ["link", "we", "to", "the", "source", "of", "this", "?"]
(c2-2 / link-01
      :polarity (c2-6 / amr-unknown)
      :ARG0 (c2-1 / you)
      :ARG1 (c2-0 / we)
      :ARG2 (c2-5 / thing
                  :ARG2-of (c2-4 / source-01
                                 :ARG1 (c2-3 / this))))

# ::snt it would be wise to Marshall law the streets at this point of time.
# ::tokens ["it", "would", "be", "wise", "to", "Marshall", "law", "the", "streets", "at", "this", "point", "of", "time", "."]
# ::lemmas ["it", "would", "be", "wise", "to", "Marshall", "law", "the", "street", "at", "this", "point", "of", "time", "."]
(c3-0 / wise
      :domain (c3-1 / law
                    :mod (c3-4 / company
                               :name (c3-2 / name
                                           :op1 "Marshall")))
      :beneficiary (c3-6 / street)
      :time (c3-3 / point
                  :mod (c3-7 / time)
                  :mod (c3-5 / this)))

# ::snt NSW Transport Management has just told Seven News everyone in CBD Sydney should now leave if they're able.
# ::tokens ["NSW", "Transport", "Management", "has", "just", "told", "Seven", "News", "everyone", "in", "CBD", "Sydney", "should", "now", "leave", "if", "they", "'re", "able", "."]
# ::lemmas ["NSW", "Transport", "Management", "have", "just", "tell", "Seven", "News", "everyone", "in", "CBD", "Sydney", "should", "now", "leave", "if", "they", "be", "able", "."]
(c4-12 / tell-01
       :ARG0 (c4-8 / company
                   :name (c4-4 / name
                               :op1 "NSW"
                               :op2 "Transport"
                               :op3 "Management"))
       :ARG1 (c4-7 / recommend-01
                   :ARG1 (c4-1 / leave-11
                               :ARG0 (c4-3 / everyone
                                           :location (c4-9 / city-district
                                                           :name (c4-5 / name
                                                                       :op1 "CBD"
                                                                       :op2 "Sydney")))
                               :time (c4-6 / now)
                               :condition (c4-10 / possible-01
                                                 :ARG1 c4-1))
                   :ARG2 (c4-2 / broadcast-program
                               :name (c4-11 / name
                                            :op1 "Seven"
                                            :op2 "News")))
       :ARG2 c4-3
       :time (c4-0 / just))

# ::snt yep
# ::tokens ["yep"]
# ::lemmas ["yep"]
(c6-0 / yep
      :mode expressive)

# ::snt : NSW Transport Management has just told Seven News everyone in CBD of Sydney should now leave if they're able.
# ::tokens [":", "NSW", "Transport", "Management", "has", "just", "told", "Seven", "News", "everyone", "in", "CBD", "of", "Sydney", "should", "now", "leave", "if", "they", "'re", "able", "."]
# ::lemmas [":", "NSW", "Transport", "Management", "have", "just", "tell", "Seven", "News", "everyone", "in", "CBD", "of", "Sydney", "should", "now", "leave", "if", "they", "be", "able", "."]
(c7-13 / tell-01
       :ARG0 (c7-8 / company
                   :name (c7-4 / name
                               :op1 "NSW"
                               :op2 "Transport"
                               :op3 "Management"))
       :ARG1 (c7-7 / recommend-01
                   :ARG1 (c7-1 / leave-11
                               :ARG0 (c7-3 / everyone
                                           :location (c7-9 / city-district
                                                           :name (c7-5 / name
                                                                       :op1 "CBD")
                                                           :part-of (c7-12 / city
                                                                           :name (c7-6 / name
                                                                                       :op1 "Sydney"))))
                               :time (c7-10 / now)
                               :condition (c7-11 / possible-01
                                                 :ARG1 c7-1))
                   :ARG2 (c7-2 / broadcast-program
                               :name (c7-14 / name
                                            :op1 "Seven"
                                            :op2 "News"))
                   :mod (c7-0 / just)))

# ::snt Well thats interesting, Premier Baird &amp; Police Chief moments ago said go about your business
# ::tokens ["Well", "that", "s", "interesting", ",", "Premier", "Baird", "&", "amp", ";", "Police", "Chief", "moments", "ago", "said", "go", "about", "your", "business"]
# ::lemmas ["well", "that", "s", "interesting", ",", "Premier", "Baird", "&", "amp", ";", "Police", "Chief", "moment", "ago", "say", "go", "about", "your", "business"]
(c8-13 / say-01
       :ARG0 (c8-9 / person
                   :name (c8-7 / name
                               :op1 "Baird"
                               :op2 "&amp")
                   :ARG0-of (c8-0 / have-org-role-91
                                  :ARG2 (c8-16 / premier))
                   :ARG0-of (c8-17 / have-org-role-91
                                   :ARG1 (c8-4 / police)
                                   :ARG2 (c8-10 / chief))
                   :ARG0-of c8-13
                   :ARG1 (c8-11 / go-03
                                :ARG0 (c8-1 / you)
                                :ARG1 (c8-14 / about
                                             :op1 (c8-5 / business
                                                        :poss c8-1))
                                :mode imperative)
                   :time (c8-12 / before
                                :op1 (c8-8 / now)
                                :quant (c8-3 / moment)))
       :ARG1 (c8-6 / interest-01
                   :ARG2 (c8-15 / that))
       :mod (c8-2 / well))

# ::snt clearly, hence I requested source. Another person who is full of shit.
# ::tokens ["clearly", ",", "hence", "I", "requested", "source", ".", "Another", "person", "who", "is", "full", "of", "shit", "."]
# ::lemmas ["clearly", ",", "hence", "i", "request", "source", ".", "another", "person", "who", "be", "full", "of", "shit", "."]
(c9-1 / multi-sentence
      :snt1 (c9-6 / cause-01
                  :ARG1 (c9-5 / request-01
                              :ARG0 (c9-3 / i)
                              :ARG1 (c9-8 / source)
                              :ARG1-of (c9-7 / clear-06)))
      :snt2 (c9-4 / person
                  :mod (c9-9 / another)
                  :ARG1-of (c9-0 / fill-01
                                 :ARG2 (c9-2 / shit))))

# ::snt I dont think Id be staying oh look Joe Hockey talking about our budget today! Its bury the lead day!
# ::tokens ["I", "do", "nt", "think", "I", "d", "be", "staying", "oh", "look", "Joe", "Hockey", "talking", "about", "our", "budget", "today", "!", "Its", "bury", "the", "lead", "day", "!"]
# ::lemmas ["i", "do", "not", "think", "i", "d", "be", "stay", "oh", "look", "Joe", "Hockey", "talk", "about", "our", "budget", "today", "!", "its", "bury", "the", "lead", "day", "!"]
(c10-3 / multi-sentence
       :snt1 (c10-14 / think-01
                     :ARG0 (c10-5 / i)
                     :ARG1 (c10-13 / stay-01
                                   :ARG1 c10-5)
                     :polarity -)
       :snt2 (c10-2 / look-01
                    :ARG0 (c10-0 / you)
                    :ARG1 (c10-12 / talk-01
                                  :ARG0 (c10-8 / person
                                               :name (c10-6 / name
                                                            :op1 "Joe"
                                                            :op2 "Hockey"))
                                  :ARG1 (c10-4 / budget
                                               :poss (c10-1 / we))
                                  :time (c10-7 / today))
                    :mode imperative)
       :snt3 (c10-10 / bury-01
                     :ARG1 (c10-9 / day
                                  :ARG0-of (c10-11 / lead-01))))

# ::snt There is no source because she's making it up.
# ::tokens ["There", "is", "no", "source", "because", "she", "'s", "making", "it", "up", "."]
# ::lemmas ["there", "be", "no", "source", "because", "she", "be", "make", "it", "up", "."]
(c11-3 / cause-01
       :ARG0 (c11-0 / make-up-10
                    :ARG0 (c11-4 / she)
                    :ARG1 (c11-2 / it))
       :ARG1 (c11-1 / source-01
                    :polarity -))

# ::snt : RT NSW Transport Management has just told Seven News everyone in CBD of Sydney should now leave if they're able.
# ::tokens [":", "RT", "NSW", "Transport", "Management", "has", "just", "told", "Seven", "News", "everyone", "in", "CBD", "of", "Sydney", "should", "now", "leave", "if", "they", "'re", "able", "."]
# ::lemmas [":", "RT", "NSW", "Transport", "Management", "have", "just", "tell", "Seven", "News", "everyone", "in", "CBD", "of", "Sydney", "should", "now", "leave", "if", "they", "be", "able", "."]
(c12-14 / tell-01
        :ARG0 (c12-7 / publication
                     :name (c12-5 / name
                                  :op1 "RT")
                     :mod (c12-9 / company
                                 :name (c12-6 / name
                                              :op1 "NSW"
                                              :op2 "Transport"
                                              :op3 "Management")))
        :ARG1 (c12-8 / recommend-01
                     :ARG1 (c12-2 / leave-11
                                  :ARG0 (c12-4 / everyone
                                               :location (c12-10 / city-district
                                                                 :name (c12-11 / name
                                                                               :op1 "CBD")
                                                                 :part-of (c12-13 / city
                                                                                  :name (c12-12 / name
                                                                                                :op1 "Sydney"))))
                                  :time (c12-16 / now)
                                  :condition (c12-15 / possible-01
                                                     :ARG1 c12-2)))
        :ARG2 (c12-3 / broadcast-program
                     :name (c12-1 / name
                                  :op1 "Seven"
                                  :op2 "News"))
        :time (c12-0 / just))

# ::snt if you must claim such statements about leaving Sydney CBD, link to the true article source.
# ::tokens ["if", "you", "must", "claim", "such", "statements", "about", "leaving", "Sydney", "CBD", ",", "link", "to", "the", "true", "article", "source", "."]
# ::lemmas ["if", "you", "must", "claim", "such", "statement", "about", "leave", "Sydney", "CBD", ",", "link", "to", "the", "true", "article", "source", "."]
(c13-1 / link-01
       :ARG0 (c13-0 / you)
       :ARG2 (c13-9 / source
                    :mod (c13-11 / article
                                 :ARG1-of (c13-10 / true-01)))
       :condition (c13-3 / obligate-01
                         :ARG1 c13-0
                         :ARG2 (c13-7 / claim-01
                                      :ARG0 c13-0
                                      :ARG1 (c13-4 / state-01
                                                   :ARG1 (c13-8 / leave-11
                                                                :ARG1 (c13-6 / city-district
                                                                             :name (c13-5 / name
                                                                                          :op1 "Sydney"
                                                                                          :op2 "CBD")))
                                                   :mod (c13-2 / such))))
       :mode imperative)
