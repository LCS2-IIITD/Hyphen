# ::snt Putting out a specific call again: this story should be told by Black youth, from . If that's you, we have a platform, get at me
# ::tokens ["Putting", "out", "a", "specific", "call", "again", ":", "this", "story", "should", "be", "told", "by", "Black", "youth", ",", "from", ".", "If", "that", "'s", "you", ",", "we", "have", "a", "platform", ",", "get", "at", "me"]
# ::lemmas ["put", "out", "a", "specific", "call", "again", ":", "this", "story", "should", "be", "tell", "by", "black", "youth", ",", "from", ".", "if", "that", "be", "you", ",", "we", "have", "a", "platform", ",", "get", "at", "i"]
(c1-3 / multi-sentence
      :snt1 (c1-7 / put-out-10
                  :ARG1 (c1-9 / call-03
                              :ARG1 (c1-8 / recommend-01
                                          :ARG1 (c1-13 / tell-01
                                                       :ARG0 (c1-1 / youth
                                                                   :ARG1-of (c1-4 / black-05))
                                                       :ARG1 (c1-12 / story
                                                                    :mod (c1-11 / this))))
                              :ARG1-of (c1-5 / specific-02))
                  :mod (c1-15 / again))
      :snt2 (c1-10 / get-05
                   :ARG0 (c1-16 / you)
                   :ARG1 (c1-6 / i)
                   :condition (c1-0 / have-03
                                    :ARG0 (c1-2 / we)
                                    :ARG1 (c1-14 / platform))
                   :mode imperative))

# ::snt All North County (Ferguson, Florissant, Jennings, Normandy, Pine Lawn, et al.) and St. Louis city.
# ::tokens ["All", "North", "County", "(", "Ferguson", ",", "Florissant", ",", "Jennings", ",", "Normandy", ",", "Pine", "Lawn", ",", "et", "al", ".", ")", "and", "St.", "Louis", "city", "."]
# ::lemmas ["all", "North", "County", "(", "Ferguson", ",", "Florissant", ",", "Jennings", ",", "Normandy", ",", "Pine", "Lawn", ",", "et", "al", ".", ")", "and", "St.", "Louis", "city", "."]
(c2-16 / and
       :op1 (c2-11 / county
                   :name (c2-7 / name
                               :op1 "North"
                               :op2 "County")
                   :consist-of (c2-5 / and
                                     :op1 (c2-10 / city
                                                 :name (c2-8 / name
                                                             :op1 "Ferguson"))
                                     :op2 (c2-15 / city
                                                 :name (c2-9 / name
                                                             :op1 "Florissant"))
                                     :op3 (c2-17 / city
                                                 :name (c2-12 / name
                                                              :op1 "Jennings"))
                                     :op4 (c2-1 / city
                                                :name (c2-4 / name
                                                            :op1 "Normandy"))
                                     :op5 (c2-2 / city
                                                :name (c2-0 / name
                                                            :op1 "Pine"
                                                            :op2 "Lawn"))
                                     :op6 (c2-3 / et-cetera))
                   :mod (c2-13 / all))
       :op2 (c2-14 / city
                   :name (c2-6 / name
                               :op1 "St."
                               :op2 "Louis")))

# ::snt He died at the hands of bad cops, who are trained to be aggressive with anyone. Making it racial fixes nothing
# ::tokens ["He", "died", "at", "the", "hands", "of", "bad", "cops", ",", "who", "are", "trained", "to", "be", "aggressive", "with", "anyone", ".", "Making", "it", "racial", "fixes", "nothing"]
# ::lemmas ["he", "die", "at", "the", "hand", "of", "bad", "cop", ",", "who", "be", "train", "to", "be", "aggressive", "with", "anyone", ".", "make", "it", "racial", "fix", "nothing"]
(c3-2 / multi-sentence
      :snt1 (c3-7 / die-01
                  :ARG1 (c3-0 / he)
                  :ARG1-of (c3-8 / cause-01
                                 :ARG0 (c3-9 / cop
                                             :ARG1-of (c3-3 / bad-07)
                                             :ARG1-of (c3-11 / train-01
                                                             :ARG2 (c3-12 / aggressive
                                                                          :domain c3-9
                                                                          :prep-with (c3-4 / anyone))))))
      :snt2 (c3-1 / fix-02
                  :ARG1 (c3-5 / nothing)
                  :ARG2 (c3-6 / make-02
                              :ARG1 (c3-10 / race))))

# ::snt No one else?
# ::tokens ["No", "one", "else", "?"]
# ::lemmas ["no", "one", "else", "?"]
(c4-0 / no-one
      :polarity (c4-2 / amr-unknown)
      :mod (c4-1 / else))

# ::snt we got to go back where we from
# ::tokens ["we", "got", "to", "go", "back", "where", "we", "from"]
# ::lemmas ["we", "get", "to", "go", "back", "where", "we", "from"]
(c5-4 / get-22
      :ARG0 (c5-0 / we)
      :ARG1 (c5-3 / go-back-19
                  :ARG1 c5-0
                  :ARG2 (c5-1 / location
                              :ARG3-of (c5-2 / be-from-91
                                             :ARG1 c5-0))))

# ::snt . By this logic, FBI should not be involved in the investigation, since it's not from .
# ::tokens [".", "By", "this", "logic", ",", "FBI", "should", "not", "be", "involved", "in", "the", "investigation", ",", "since", "it", "'s", "not", "from", "."]
# ::lemmas [".", "by", "this", "logic", ",", "FBI", "should", "not", "be", "involve", "in", "the", "investigation", ",", "since", "it", "be", "not", "from", "."]
(c6-5 / cause-01
      :ARG0 (c6-2 / involve-01
                  :ARG1 (c6-7 / government-organization
                              :name (c6-3 / name
                                          :op1 "FBI"))
                  :ARG2 (c6-6 / investigate-01)
                  :polarity -)
      :ARG1 (c6-4 / recommend-01
                  :ARG1 (c6-0 / involve-01
                              :ARG1 c6-7
                              :ARG2 c6-6))
      :ARG1-of (c6-1 / logic-01
                     :mod (c6-8 / this)))

# ::snt play by the race card by being racist yourself well done....
# ::tokens ["play", "by", "the", "race", "card", "by", "being", "racist", "yourself", "well", "done", "...."]
# ::lemmas ["play", "by", "the", "race", "card", "by", "be", "racist", "yourself", "well", "do", "...."]
(c7-3 / play-01
      :ARG0 (c7-0 / you)
      :ARG1 (c7-5 / card
                  :mod (c7-4 / race))
      :manner (c7-2 / racist
                    :domain c7-0)
      :ARG1-of (c7-6 / do-02
                     :ARG0 c7-0
                     :ARG1-of (c7-1 / well-09)))

# ::snt : Putting out a specific call again: this story should be told by Black youth, from . If that's you, ..
# ::tokens [":", "Putting", "out", "a", "specific", "call", "again", ":", "this", "story", "should", "be", "told", "by", "Black", "youth", ",", "from", ".", "If", "that", "'s", "you", ",", ".."]
# ::lemmas [":", "put", "out", "a", "specific", "call", "again", ":", "this", "story", "should", "be", "tell", "by", "black", "youth", ",", "from", ".", "if", "that", "be", "you", ",", ".."]
(c8-2 / multi-sentence
      :snt1 (c8-6 / put-out-10
                  :ARG1 (c8-8 / call-03
                              :ARG1 (c8-7 / recommend-01
                                          :ARG1 (c8-11 / tell-01
                                                       :ARG0 (c8-1 / youth
                                                                   :ARG1-of (c8-3 / black-05))
                                                       :ARG1 (c8-10 / story
                                                                    :mod (c8-9 / this))))
                              :ARG1-of (c8-4 / specific-02))
                  :mod (c8-12 / again))
      :snt2 (c8-0 / have-condition-91
                  :ARG2 (c8-13 / you
                               :domain (c8-5 / that))))

# ::snt contact me if you need any social data for a story
# ::tokens ["contact", "me", "if", "you", "need", "any", "social", "data", "for", "a", "story"]
# ::lemmas ["contact", "i", "if", "you", "need", "any", "social", "datum", "for", "a", "story"]
(c9-5 / contact-01
      :ARG0 (c9-0 / you)
      :ARG1 (c9-2 / i)
      :condition (c9-3 / need-01
                       :ARG0 c9-0
                       :ARG1 (c9-4 / data
                                   :mod (c9-6 / social)
                                   :mod (c9-7 / any))
                       :purpose (c9-1 / story))
      :mode imperative)

# ::snt is there still looting happening or did that stop
# ::tokens ["is", "there", "still", "looting", "happening", "or", "did", "that", "stop"]
# ::lemmas ["be", "there", "still", "loot", "happen", "or", "do", "that", "stop"]
(c10-1 / or
       :op1 (c10-0 / loot-01
                   :time (c10-3 / still))
       :op2 (c10-2 / stop-01
                   :ARG1 c10-0
                   :polarity (c10-4 / amr-unknown)))
