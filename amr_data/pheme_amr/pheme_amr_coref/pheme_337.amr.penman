# ::snt peace usually begins with talking. When people talk that means they are not fighting.
# ::tokens ["peace", "usually", "begins", "with", "talking", ".", "When", "people", "talk", "that", "means", "they", "are", "not", "fighting", "."]
# ::lemmas ["peace", "usually", "begin", "with", "talk", ".", "when", "people", "talk", "that", "mean", "they", "be", "not", "fight", "."]
(c1-1 / multi-sentence
      :snt1 (c1-3 / begin-01
                  :ARG1 (c1-4 / peace)
                  :ARG2 (c1-7 / talk-01)
                  :mod (c1-2 / usual))
      :snt2 (c1-5 / mean-01
                  :ARG1 (c1-6 / talk-01
                              :ARG0 (c1-8 / person))
                  :ARG2 (c1-0 / fight-01
                              :ARG0 c1-8
                              :polarity -)
                  :time c1-6))

# ::snt Police are NOT the law. Just people put in place to uphold the law. Big difference.
# ::tokens ["Police", "are", "NOT", "the", "law", ".", "Just", "people", "put", "in", "place", "to", "uphold", "the", "law", ".", "Big", "difference", "."]
# ::lemmas ["police", "be", "not", "the", "law", ".", "just", "people", "put", "in", "place", "to", "uphold", "the", "law", ".", "big", "difference", "."]
(c2-2 / multi-sentence
      :snt1 (c2-1 / law
                  :domain (c2-7 / police)
                  :polarity -)
      :snt2 (c2-10 / put-03
                   :ARG1 (c2-4 / person
                               :mod (c2-0 / just))
                   :ARG2 (c2-6 / in-place)
                   :purpose (c2-3 / uphold-01
                                  :ARG0 c2-4
                                  :ARG1 (c2-9 / law)))
      :snt3 (c2-8 / differ-02
                  :degree (c2-5 / big)))

# ::snt does her sign say 'police are not the law?' What an idiot
# ::tokens ["does", "her", "sign", "say", "'", "police", "are", "not", "the", "law", "?", "'", "What", "an", "idiot"]
# ::lemmas ["do", "her", "sign", "say", "'", "police", "be", "not", "the", "law", "?", "'", "what", "an", "idiot"]
(c3-3 / idiot
      :domain (c3-5 / sign
                    :poss (c3-2 / she)
                    :ARG0-of (c3-0 / say-01
                                   :ARG1 (c3-1 / law
                                               :domain (c3-4 / police)
                                               :polarity -)))
      :degree (c3-6 / amr-unknown))

# ::snt The sign should say Nor not or.
# ::tokens ["The", "sign", "should", "say", "Nor", "not", "or", "."]
# ::lemmas ["the", "sign", "should", "say", "nor", "not", "or", "."]
(c4-4 / recommend-01
      :ARG1 (c4-5 / say-01
                  :ARG0 (c4-2 / sign)
                  :ARG1 (c4-1 / or
                              :op1 (c4-3 / nor)
                              :op2 (c4-0 / have-polarity-91
                                         :ARG2 -))))

# ::snt What a ride! What a ride! your tweets takes a center stage on my honorable platform
# ::tokens ["What", "a", "ride", "!", "What", "a", "ride", "!", "your", "tweets", "takes", "a", "center", "stage", "on", "my", "honorable", "platform"]
# ::lemmas ["what", "a", "ride", "!", "what", "a", "ride", "!", "your", "tweet", "take", "a", "center", "stage", "on", "my", "honorable", "platform"]
(c5-2 / multi-sentence
      :snt1 (c5-6 / ride-01
                  :mode expressive)
      :snt2 (c5-10 / take-01
                   :ARG0 (c5-8 / thing
                               :ARG1-of (c5-4 / tweet-01
                                              :ARG0 (c5-1 / you)))
                   :ARG1 (c5-9 / stage
                               :mod (c5-7 / center))
                   :ARG2 (c5-5 / platform
                               :ARG1-of (c5-0 / honorable-03)
                               :poss (c5-3 / i))))

# ::snt I'm pretty much sure the police are the law....placard fail
# ::tokens ["I", "'m", "pretty", "much", "sure", "the", "police", "are", "the", "law", "....", "placard", "fail"]
# ::lemmas ["i", "be", "pretty", "much", "sure", "the", "police", "be", "the", "law", "....", "placard", "fail"]
(c6-1 / multi-sentence
      :snt1 (c6-6 / sure-02
                  :ARG0 (c6-4 / i)
                  :ARG1 (c6-0 / law
                              :domain (c6-5 / police))
                  :degree (c6-7 / pretty-much))
      :snt2 (c6-2 / fail-01
                  :ARG1 (c6-3 / plastic)))

# ::snt Ferguson police chief speaks with protesters early Friday am.
# ::tokens ["Ferguson", "police", "chief", "speaks", "with", "protesters", "early", "Friday", "am", "."]
# ::lemmas ["Ferguson", "police", "chief", "speak", "with", "protester", "early", "Friday", "am", "."]
(c7-9 / speak-01
      :ARG0 (c7-5 / person
                  :ARG0-of (c7-0 / have-org-role-91
                                 :ARG1 (c7-11 / police
                                              :mod (c7-7 / city
                                                         :name (c7-4 / name
                                                                     :op1 "Ferguson")))
                                 :ARG2 (c7-6 / chief)))
      :ARG2 (c7-2 / person
                  :ARG0-of (c7-10 / protest-01))
      :time (c7-3 / early
                  :op1 (c7-8 / date-entity
                             :weekday (c7-1 / friday))))

# ::snt how does one know what stories are media driven? Watch cnn. Find that plane yet?
# ::tokens ["how", "does", "one", "know", "what", "stories", "are", "media", "driven", "?", "Watch", "cnn", ".", "Find", "that", "plane", "yet", "?"]
# ::lemmas ["how", "do", "one", "know", "what", "story", "be", "medium", "drive", "?", "watch", "cnn", ".", "find", "that", "plane", "yet", "?"]
(c8-3 / multi-sentence
      :snt1 (c8-12 / know-01
                   :ARG0 (c8-4 / one)
                   :ARG1 (c8-7 / drive-02
                               :ARG0 (c8-6 / media)
                               :ARG1 (c8-10 / story))
                   :manner (c8-14 / amr-unknown))
      :snt2 (c8-0 / watch-01
                  :ARG0 (c8-1 / you)
                  :ARG1 (c8-8 / publication
                              :name (c8-5 / name
                                          :op1 "CNN")))
      :snt3 (c8-2 / find-01
                  :ARG1 (c8-13 / plane
                               :mod (c8-11 / that))
                  :time (c8-9 / yet)
                  :polarity c8-14))

# ::snt lol not the law? What?
# ::tokens ["lol", "not", "the", "law", "?", "What", "?"]
# ::lemmas ["lol", "not", "the", "law", "?", "what", "?"]
(c9-2 / multi-sentence
      :snt1 (c9-1 / law
                  :ARG2-of (c9-3 / laugh-01
                                 :manner (c9-0 / loud)
                                 :mode expressive)
                  :polarity -)
      :snt2 (c9-4 / amr-unknown))

# ::snt his fat ass should be talking to the people begging for his job
# ::tokens ["his", "fat", "ass", "should", "be", "talking", "to", "the", "people", "begging", "for", "his", "job"]
# ::lemmas ["his", "fat", "ass", "should", "be", "talk", "to", "the", "people", "beg", "for", "his", "job"]
(c11-5 / recommend-01
       :ARG1 (c11-6 / talk-01
                    :ARG0 (c11-7 / ass
                                 :ARG1-of (c11-2 / fat-03)
                                 :part-of (c11-0 / he))
                    :ARG2 (c11-4 / person
                                 :ARG0-of (c11-3 / beg-01
                                                 :ARG2 (c11-1 / job
                                                              :poss c11-0)))))

# ::snt by upholding the law, that makes them sense them enforcers of the law which makes them the law....
# ::tokens ["by", "upholding", "the", "law", ",", "that", "makes", "them", "sense", "them", "enforcers", "of", "the", "law", "which", "makes", "them", "the", "law", "...."]
# ::lemmas ["by", "uphold", "the", "law", ",", "that", "make", "they", "sense", "they", "enforcer", "of", "the", "law", "which", "make", "they", "the", "law", "...."]
(c12-6 / sense-02
       :ARG1 (c12-2 / uphold-01
                    :ARG0 (c12-7 / they)
                    :ARG1 (c12-0 / law))
       :ARG2 (c12-4 / person
                    :ARG0-of (c12-3 / enforce-01
                                    :ARG1 (c12-5 / law
                                                 :ARG0-of (c12-1 / make-02
                                                                 :ARG1 c12-0)))
                    :domain c12-7))

# ::snt RIGHT!!!!!!!!!!!
# ::tokens ["RIGHT", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["right", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]
(c13-0 / right-06
       :mode expressive)

# ::snt all people must thank this
# ::tokens ["all", "people", "must", "thank", "this"]
# ::lemmas ["all", "people", "must", "thank", "this"]
(c14-0 / obligate-01
       :ARG1 (c14-3 / thank-01
                    :ARG0 (c14-1 / person
                                 :mod (c14-4 / all))
                    :ARG1 (c14-2 / this)))

# ::snt : Ferguson police chief speaks with protesters early Friday am. first time?
# ::tokens [":", "Ferguson", "police", "chief", "speaks", "with", "protesters", "early", "Friday", "am", ".", "first", "time", "?"]
# ::lemmas [":", "Ferguson", "police", "chief", "speak", "with", "protester", "early", "Friday", "am", ".", "first", "time", "?"]
(c15-10 / speak-01
        :ARG0 (c15-6 / person
                     :ARG0-of (c15-0 / have-org-role-91
                                     :ARG1 (c15-12 / police
                                                   :mod (c15-8 / city
                                                               :name (c15-5 / name
                                                                            :op1 "Ferguson")))
                                     :ARG2 (c15-7 / chief)))
        :ARG2 (c15-2 / person
                     :ARG0-of (c15-11 / protest-01))
        :time (c15-4 / early
                     :op1 (c15-9 / date-entity
                                 :weekday (c15-1 / friday)))
        :ord (c15-3 / ordinal-entity
                    :value 1)
        :polarity (c15-13 / amr-unknown))

# ::snt Cant call it a "peaceful protest" when protesters are holding signs saying there will be no peace unless they get "justice"
# ::tokens ["Ca", "nt", "call", "it", "a", "\"", "peaceful", "protest", "\"", "when", "protesters", "are", "holding", "signs", "saying", "there", "will", "be", "no", "peace", "unless", "they", "get", "\"", "justice", "\""]
# ::lemmas ["can", "not", "call", "it", "a", "\"", "peaceful", "protest", "\"", "when", "protester", "be", "hold", "sign", "say", "there", "will", "be", "no", "peace", "unless", "they", "get", "\"", "justice", "\""]
(c16-6 / possible-01
       :ARG1 (c16-7 / call-01
                    :ARG1 (c16-5 / it)
                    :ARG2 (c16-12 / protest-01
                                  :mod (c16-2 / peace)))
       :time (c16-0 / hold-01
                    :ARG0 (c16-11 / person
                                  :ARG0-of (c16-3 / protest-01))
                    :ARG1 (c16-9 / sign
                                 :ARG0-of (c16-4 / say-01
                                                 :ARG1 (c16-10 / peace
                                                               :condition (c16-8 / get-01
                                                                                 :ARG0 c16-11
                                                                                 :ARG1 (c16-1 / justice)
                                                                                 :polarity -)
                                                               :polarity -))))
       :polarity -)

# ::snt lol ok
# ::tokens ["lol", "ok"]
# ::lemmas ["lol", "ok"]
(c17-0 / okay-01
       :mod (c17-1 / laugh-01
                   :manner (c17-2 / loud)
                   :mode expressive))

# ::snt when Police will realise this that is the problem till date ?
# ::tokens ["when", "Police", "will", "realise", "this", "that", "is", "the", "problem", "till", "date", "?"]
# ::lemmas ["when", "Police", "will", "realise", "this", "that", "be", "the", "problem", "till", "date", "?"]
(c18-0 / problem
       :domain (c18-4 / that)
       :time (c18-3 / till
                    :op1 (c18-1 / date-entity))
       :polarity (c18-6 / amr-unknown)
       :time (c18-2 / realize-01
                    :ARG0 (c18-5 / police)
                    :ARG1 c18-4))

# ::snt Innocent until proven guilty.
# ::tokens ["Innocent", "until", "proven", "guilty", "."]
# ::lemmas ["innocent", "until", "prove", "guilty", "."]
(c19-3 / innocent-01
       :time (c19-2 / until
                    :op1 (c19-0 / prove-01
                                :ARG1 (c19-1 / guilty-01
                                             :ARG1 c19-3))))

# ::snt its called protest dummy.
# ::tokens ["its", "called", "protest", "dummy", "."]
# ::lemmas ["its", "call", "protest", "dummy", "."]
(c20-2 / call-01
       :ARG1 (c20-3 / it)
       :ARG2 (c20-1 / dummy
                    :mod (c20-0 / protest-01)))

# ::snt Police don't make laws politicians make laws Police only interpret them, obviously they chose a bad interpretation this time
# ::tokens ["Police", "do", "n't", "make", "laws", "politicians", "make", "laws", "Police", "only", "interpret", "them", ",", "obviously", "they", "chose", "a", "bad", "interpretation", "this", "time"]
# ::lemmas ["police", "do", "not", "make", "law", "politician", "make", "law", "police", "only", "interpret", "they", ",", "obviously", "they", "choose", "a", "bad", "interpretation", "this", "time"]
(c21-13 / and
        :op1 (c21-1 / make-01
                    :ARG0 (c21-7 / police)
                    :ARG1 (c21-0 / law)
                    :polarity -)
        :op2 (c21-6 / make-01
                    :ARG0 (c21-12 / politician)
                    :ARG1 c21-0)
        :op3 (c21-5 / interpret-01
                    :ARG0 c21-7
                    :ARG1 c21-0
                    :mod (c21-4 / only))
        :op4 (c21-2 / obvious-01
                    :ARG1 (c21-8 / choose-01
                                 :ARG0 c21-7
                                 :ARG1 (c21-9 / interpret-01
                                              :ARG0 c21-7
                                              :ARG1 c21-0
                                              :ARG1-of (c21-3 / bad-07))
                                 :time (c21-11 / time
                                               :mod (c21-10 / this)))))

# ::snt Police are not the law. They just enforce the law. They do not decide what's legal though. Courts do that.
# ::tokens ["Police", "are", "not", "the", "law", ".", "They", "just", "enforce", "the", "law", ".", "They", "do", "not", "decide", "what", "'s", "legal", "though", ".", "Courts", "do", "that", "."]
# ::lemmas ["police", "be", "not", "the", "law", ".", "they", "just", "enforce", "the", "law", ".", "they", "do", "not", "decide", "what", "be", "legal", "though", ".", "court", "do", "that", "."]
(c22-4 / multi-sentence
       :snt1 (c22-3 / law
                    :domain (c22-8 / police)
                    :polarity -)
       :snt2 (c22-6 / enforce-01
                    :ARG0 c22-8
                    :ARG1 (c22-11 / law)
                    :mod (c22-0 / just))
       :snt3 (c22-9 / decide-01
                    :ARG0 (c22-13 / they)
                    :ARG1 (c22-12 / thing
                                  :ARG1-of (c22-1 / legal-02))
                    :ARG1-of (c22-2 / have-concession-91)
                    :polarity -)
       :snt4 (c22-5 / do-02
                    :ARG0 (c22-10 / court)
                    :ARG1 (c22-7 / that)))

# ::snt They are not the law. They are responsible for enforcement of the law which they are bound to as well.
# ::tokens ["They", "are", "not", "the", "law", ".", "They", "are", "responsible", "for", "enforcement", "of", "the", "law", "which", "they", "are", "bound", "to", "as", "well", "."]
# ::lemmas ["they", "be", "not", "the", "law", ".", "they", "be", "responsible", "for", "enforcement", "of", "the", "law", "which", "they", "be", "bind", "to", "as", "well", "."]
(c23-1 / multi-sentence
       :snt1 (c23-0 / law
                    :domain (c23-7 / they)
                    :polarity -)
       :snt2 (c23-4 / responsible-03
                    :ARG0 (c23-6 / they)
                    :ARG1 (c23-3 / enforce-01
                                 :ARG1 (c23-5 / law)
                                 :ARG1-of (c23-2 / bind-02
                                                 :ARG2 c23-6
                                                 :mod (c23-8 / as-well)))))

# ::snt I got you.
# ::tokens ["I", "got", "you", "."]
# ::lemmas ["i", "get", "you", "."]
(c24-1 / get-01
       :ARG0 (c24-2 / i)
       :ARG1 (c24-0 / you))

# ::snt Thank you for showing us the ignorance of America and its lower class citizens.
# ::tokens ["Thank", "you", "for", "showing", "us", "the", "ignorance", "of", "America", "and", "its", "lower", "class", "citizens", "."]
# ::lemmas ["thank", "you", "for", "show", "we", "the", "ignorance", "of", "America", "and", "its", "low", "class", "citizen", "."]
(c25-11 / thank-01
        :ARG1 (c25-1 / you)
        :ARG2 (c25-10 / show-01
                      :ARG0 c25-1
                      :ARG1 (c25-5 / ignorant-02
                                   :ARG1 (c25-12 / and
                                                 :op1 (c25-8 / country
                                                             :name (c25-6 / name
                                                                          :op1 "America"))
                                                 :op2 (c25-7 / citizen
                                                             :mod c25-8
                                                             :mod (c25-9 / class
                                                                         :ARG1-of (c25-0 / have-degree-91
                                                                                         :ARG2 (c25-3 / low-04)
                                                                                         :ARG3 (c25-4 / more))))))
                      :ARG2 (c25-2 / we)))

# ::snt a few grammatical mistakes from me there but I'm sure you got what I was saying
# ::tokens ["a", "few", "grammatical", "mistakes", "from", "me", "there", "but", "I", "'m", "sure", "you", "got", "what", "I", "was", "saying"]
# ::lemmas ["a", "few", "grammatical", "mistake", "from", "i", "there", "but", "i", "be", "sure", "you", "get", "what", "i", "be", "say"]
(c26-6 / contrast-01
       :ARG1 (c26-2 / mistake-02
                    :ARG0 (c26-4 / i)
                    :ARG1 (c26-7 / grammar)
                    :source c26-4
                    :quant (c26-1 / few)
                    :location (c26-10 / there))
       :ARG2 (c26-9 / sure-02
                    :ARG0 c26-4
                    :ARG1 (c26-5 / get-30
                                 :ARG0 (c26-0 / you)
                                 :ARG1 (c26-8 / thing
                                              :ARG1-of (c26-3 / say-01
                                                              :ARG0 c26-4)))))

# ::snt how!!! How can we not be looking at realizing that an officer was put into a position that was threatening! When do we stand4him
# ::tokens ["how", "!", "!", "!", "How", "can", "we", "not", "be", "looking", "at", "realizing", "that", "an", "officer", "was", "put", "into", "a", "position", "that", "was", "threatening", "!", "When", "do", "we", "stand4him"]
# ::lemmas ["how", "!", "!", "!", "how", "can", "we", "not", "be", "look", "at", "realize", "that", "an", "officer", "be", "put", "into", "a", "position", "that", "be", "threaten", "!", "when", "do", "we", "stand4him"]
(c27-3 / multi-sentence
       :snt1 (c27-0 / have-manner-91
                    :ARG2 (c27-11 / amr-unknown)
                    :mode expressive)
       :snt2 (c27-6 / possible-01
                    :ARG1 (c27-2 / look-01
                                 :ARG0 (c27-1 / we)
                                 :ARG1 (c27-7 / realize-01
                                              :ARG0 c27-1
                                              :ARG1 (c27-10 / put-01
                                                            :ARG1 (c27-5 / officer)
                                                            :ARG2 (c27-4 / position
                                                                         :ARG0-of (c27-9 / threaten-01
                                                                                         :ARG2 c27-5))))
                                 :polarity -))
       :snt3 (c27-8 / stand4)
       :time c27-11)

# ::snt Upholding and enforcing the law does not make you the law. That's a dangerous precedent and gives police too much power.
# ::tokens ["Upholding", "and", "enforcing", "the", "law", "does", "not", "make", "you", "the", "law", ".", "That", "'s", "a", "dangerous", "precedent", "and", "gives", "police", "too", "much", "power", "."]
# ::lemmas ["uphold", "and", "enforce", "the", "law", "do", "not", "make", "you", "the", "law", ".", "that", "be", "a", "dangerous", "precedent", "and", "give", "police", "too", "much", "power", "."]
(c28-3 / multi-sentence
       :snt1 (c28-10 / make-02
                     :ARG0 (c28-17 / and
                                   :op1 (c28-4 / uphold-01
                                               :ARG1 (c28-2 / law))
                                   :op2 (c28-8 / enforce-01
                                               :ARG1 c28-2))
                     :ARG1 (c28-13 / law
                                   :domain (c28-1 / you))
                     :polarity -)
       :snt2 (c28-9 / and
                    :op1 (c28-11 / precedent
                                 :ARG0-of (c28-6 / endanger-01)
                                 :domain (c28-15 / that))
                    :op2 (c28-12 / give-01
                                 :ARG0 c28-15
                                 :ARG1 (c28-16 / power
                                               :ARG1-of (c28-0 / have-quant-91
                                                               :ARG2 (c28-5 / much)
                                                               :ARG3 (c28-14 / too)))
                                 :ARG2 (c28-7 / police))))

# ::snt Of course you're willing to talk when the whole internet has you Name, Address and SSN lol
# ::tokens ["Of", "course", "you", "'re", "willing", "to", "talk", "when", "the", "whole", "internet", "has", "you", "Name", ",", "Address", "and", "SSN", "lol"]
# ::lemmas ["of", "course", "you", "be", "willing", "to", "talk", "when", "the", "whole", "internet", "have", "you", "Name", ",", "Address", "and", "SSN", "lol"]
(c29-1 / will-02
       :ARG0 (c29-2 / you)
       :ARG1 (c29-15 / talk-01
                     :ARG0 c29-2)
       :mod (c29-4 / of-course)
       :time (c29-0 / have-03
                    :ARG0 (c29-7 / internet
                                 :mod (c29-8 / whole))
                    :ARG1 (c29-16 / and
                                  :op1 (c29-14 / thing
                                               :ARG2-of (c29-9 / name-01
                                                               :ARG1 c29-2))
                                  :op2 (c29-10 / thing
                                               :ARG2-of (c29-6 / address-01
                                                               :ARG0 c29-2))
                                  :op3 (c29-5 / thing
                                              :name (c29-11 / name
                                                            :op1 "SSN")))
                    :ARG2-of (c29-3 / laugh-01
                                    :ARG0 (c29-13 / i)
                                    :manner (c29-12 / loud)
                                    :mode expressive)))

# ::snt This Is Very Sad
# ::tokens ["This", "Is", "Very", "Sad"]
# ::lemmas ["this", "be", "very", "sad"]
(c30-0 / Sad-02
       :ARG0 (c30-2 / this)
       :degree (c30-1 / very))
