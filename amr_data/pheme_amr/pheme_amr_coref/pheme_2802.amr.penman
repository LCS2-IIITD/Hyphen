# ::snt Perhaps better to have let him gone and denied his return ? Big implications for Europe here
# ::tokens ["Perhaps", "better", "to", "have", "let", "him", "gone", "and", "denied", "his", "return", "?", "Big", "implications", "for", "Europe", "here"]
# ::lemmas ["perhaps", "well", "to", "have", "let", "he", "go", "and", "deny", "his", "return", "?", "big", "implication", "for", "Europe", "here"]
(c1-2 / multi-sentence
      :snt1 (c1-8 / possible-01
                  :ARG1 (c1-11 / good-02
                               :ARG1 (c1-1 / let-01
                                           :ARG1 (c1-15 / and
                                                        :op1 (c1-9 / go-02
                                                                   :ARG0 (c1-0 / he))
                                                        :op2 (c1-10 / deny-01
                                                                    :ARG1 (c1-12 / return-01
                                                                                 :ARG1 c1-0))))
                               :ARG2-of (c1-3 / have-degree-91
                                              :ARG1 c1-1
                                              :ARG3 (c1-13 / more))))
      :snt2 (c1-5 / implicate-01
                  :ARG1 (c1-14 / continent
                               :name (c1-6 / name
                                           :op1 "Europe"))
                  :mod (c1-4 / big)
                  :location (c1-7 / here)))

# ::snt With idiots like this fanning the flames it's no wonder
# ::tokens ["With", "idiots", "like", "this", "fanning", "the", "flames", "it", "'s", "no", "wonder"]
# ::lemmas ["with", "idiot", "like", "this", "fan", "the", "flame", "it", "be", "no", "wonder"]
(c2-0 / wonder-02
      :condition (c2-1 / fan-01
                       :ARG0 (c2-2 / idiot
                                   :ARG1-of (c2-4 / resemble-01
                                                  :ARG2 (c2-5 / this)))
                       :ARG1 (c2-3 / flame))
      :polarity -)

# ::snt If he had gone maybe one of our airstrikes would have got him.
# ::tokens ["If", "he", "had", "gone", "maybe", "one", "of", "our", "airstrikes", "would", "have", "got", "him", "."]
# ::lemmas ["if", "he", "have", "go", "maybe", "one", "of", "our", "airstrike", "would", "have", "get", "he", "."]
(c3-4 / possible-01
      :ARG1 (c3-6 / get-01
                  :ARG0 (c3-7 / strike-01
                              :ARG1-of (c3-3 / include-91
                                             :ARG2 (c3-2 / strike-01
                                                         :ARG0 (c3-1 / we)
                                                         :path (c3-8 / air)))
                              :quant 1)
                  :ARG1 (c3-0 / he))
      :condition (c3-5 / go-02
                       :ARG0 c3-0))

# ::snt Looks like a fatal flaw in the prevent strategy then.
# ::tokens ["Looks", "like", "a", "fatal", "flaw", "in", "the", "prevent", "strategy", "then", "."]
# ::lemmas ["look", "like", "a", "fatal", "flaw", "in", "the", "prevent", "strategy", "then", "."]
(c4-0 / look-02
      :ARG1 (c4-1 / flaw-01
                  :ARG1 (c4-4 / strategy
                              :ARG0-of (c4-3 / prevent-01))
                  :mod (c4-2 / fatal))
      :mod (c4-5 / then))

# ::snt I think you mean the other guy who ran over a soldier on Monday. He wanted to fly to Syria and was stopped. Your point stands.
# ::tokens ["I", "think", "you", "mean", "the", "other", "guy", "who", "ran", "over", "a", "soldier", "on", "Monday", ".", "He", "wanted", "to", "fly", "to", "Syria", "and", "was", "stopped", ".", "Your", "point", "stands", "."]
# ::lemmas ["i", "think", "you", "mean", "the", "other", "guy", "who", "run", "over", "a", "soldier", "on", "Monday", ".", "he", "want", "to", "fly", "to", "Syria", "and", "be", "stop", ".", "your", "point", "stand", "."]
(c5-0 / multi-sentence
      :snt1 (c5-19 / think-01
                   :ARG0 (c5-13 / i)
                   :ARG1 (c5-9 / mean-01
                               :ARG0 (c5-14 / you)
                               :ARG2 (c5-11 / guy
                                            :mod (c5-16 / other)
                                            :ARG0-of (c5-10 / run-over-12
                                                            :ARG1 (c5-2 / soldier)
                                                            :time (c5-1 / date-entity
                                                                        :weekday (c5-5 / monday))))))
      :snt2 (c5-3 / and
                  :op1 (c5-12 / want-01
                              :ARG0 (c5-4 / he)
                              :ARG1 (c5-6 / fly-01
                                          :ARG1 c5-4
                                          :destination (c5-17 / country
                                                              :name (c5-8 / name
                                                                          :op1 "Syria"))))
                  :op2 (c5-7 / stop-01
                             :ARG1 c5-4))
      :snt3 (c5-15 / stand-11
                   :ARG0 (c5-18 / you)))

# ::snt We can't give up our lives in the name of fear..Attack them head on.. Aggressively.
# ::tokens ["We", "ca", "n't", "give", "up", "our", "lives", "in", "the", "name", "of", "fear", "..", "Attack", "them", "head", "on", "..", "Aggressively", "."]
# ::lemmas ["we", "can", "not", "give", "up", "our", "life", "in", "the", "name", "of", "fear", "..", "attack", "they", "head", "on", "..", "aggressively", "."]
(c6-4 / multi-sentence
      :snt1 (c6-7 / possible-01
                  :ARG1 (c6-8 / give-up-07
                              :ARG0 (c6-1 / we)
                              :ARG1 (c6-3 / life
                                          :poss c6-1)
                              :beneficiary (c6-5 / fear-01))
                  :polarity -)
      :snt2 (c6-10 / attack-01
                   :ARG0 (c6-2 / you)
                   :ARG1 (c6-9 / they)
                   :manner (c6-0 / head-on)
                   :mode imperative)
      :snt3 (c6-6 / aggression))

# ::snt . I kinda wonder if it would have been better to allow him to travel and just prevent his return. Makes probs for others though
# ::tokens [".", "I", "kinda", "wonder", "if", "it", "would", "have", "been", "better", "to", "allow", "him", "to", "travel", "and", "just", "prevent", "his", "return", ".", "Makes", "probs", "for", "others", "though"]
# ::lemmas [".", "i", "kinda", "wonder", "if", "it", "would", "have", "be", "well", "to", "allow", "he", "to", "travel", "and", "just", "prevent", "his", "return", ".", "make", "prob", "for", "other", "though"]
(c7-1 / multi-sentence
      :snt1 (c7-12 / wonder-01
                   :ARG0 (c7-14 / i)
                   :ARG1 (c7-19 / truth-value
                                :polarity-of (c7-7 / have-degree-91
                                                   :ARG1 (c7-6 / and
                                                               :op1 (c7-13 / allow-01
                                                                           :ARG1 (c7-18 / travel-01
                                                                                        :ARG0 (c7-5 / he)))
                                                               :op2 (c7-3 / prevent-01
                                                                          :ARG1 (c7-10 / return-01
                                                                                       :ARG1 (c7-2 / he))
                                                                          :mod (c7-0 / just)))
                                                   :ARG2 (c7-11 / good-02
                                                                :ARG1 c7-6)
                                                   :ARG3 (c7-9 / more)))
                   :degree (c7-16 / kind-of))
      :snt2 (c7-8 / make-01
                  :ARG1 (c7-4 / support-01
                              :ARG1 (c7-17 / other))
                  :ARG1-of (c7-15 / have-concession-91)))

# ::snt if he was a terror suspect he should have been locked up not stopped from travel
# ::tokens ["if", "he", "was", "a", "terror", "suspect", "he", "should", "have", "been", "locked", "up", "not", "stopped", "from", "travel"]
# ::lemmas ["if", "he", "be", "a", "terror", "suspect", "he", "should", "have", "be", "lock", "up", "not", "stop", "from", "travel"]
(c8-3 / recommend-01
      :ARG1 (c8-7 / and
                  :op1 (c8-1 / lock-up-03
                             :ARG1 (c8-0 / he))
                  :op2 (c8-5 / stop-01
                             :ARG1 c8-0
                             :ARG2 (c8-6 / travel-01)
                             :polarity -))
      :condition (c8-2 / suspect-01
                       :ARG1 c8-0
                       :ARG2 (c8-4 / terror)))

# ::snt No, you're right. I just read that Zehaf-Bebeau wanted to go go to Libya and was prevented.
# ::tokens ["No", ",", "you", "'re", "right", ".", "I", "just", "read", "that", "Zehaf", "-", "Bebeau", "wanted", "to", "go", "go", "to", "Libya", "and", "was", "prevented", "."]
# ::lemmas ["no", ",", "you", "be", "right", ".", "i", "just", "read", "that", "Zehaf", "-", "Bebeau", "want", "to", "go", "go", "to", "Libya", "and", "be", "prevent", "."]
(c9-3 / multi-sentence
      :snt1 (c9-9 / right-06
                  :ARG1 (c9-1 / you))
      :snt2 (c9-5 / read-01
                  :ARG0 (c9-4 / i)
                  :ARG1 (c9-13 / and
                               :op1 (c9-2 / want-01
                                          :ARG0 (c9-8 / person
                                                      :name (c9-6 / name
                                                                  :op1 "Zehaf-Bebeau"))
                                          :ARG1 (c9-11 / go-02
                                                       :ARG0 c9-8
                                                       :ARG4 (c9-10 / country
                                                                    :name (c9-7 / name
                                                                                :op1 "Libya"))))
                               :op2 (c9-12 / prevent-01
                                           :ARG1 c9-8))
                  :time (c9-0 / just)))

# ::snt there is a lesson to be learnt - send them to wherever they want to go, let them die there, but don't let them come back ever!
# ::tokens ["there", "is", "a", "lesson", "to", "be", "learnt", "-", "send", "them", "to", "wherever", "they", "want", "to", "go", ",", "let", "them", "die", "there", ",", "but", "do", "n't", "let", "them", "come", "back", "ever", "!"]
# ::lemmas ["there", "be", "a", "lesson", "to", "be", "learn", "-", "send", "they", "to", "wherever", "they", "want", "to", "go", ",", "let", "they", "die", "there", ",", "but", "do", "not", "let", "they", "come", "back", "ever", "!"]
(c10-3 / lesson
       :ARG1-of (c10-12 / learn-01)
       :consist-of (c10-9 / contrast-01
                          :ARG1 (c10-15 / and
                                        :op1 (c10-13 / send-03
                                                     :ARG0 (c10-1 / you)
                                                     :ARG1 (c10-14 / they)
                                                     :ARG4 (c10-0 / location
                                                                  :ARG4-of (c10-10 / go-02
                                                                                   :ARG0 c10-14
                                                                                   :ARG1-of (c10-2 / want-01
                                                                                                   :ARG0 c10-14)))
                                                     :mode imperative)
                                        :op2 (c10-7 / let-01
                                                    :ARG0 c10-1
                                                    :ARG1 (c10-8 / die-01
                                                                 :ARG1 c10-14
                                                                 :location c10-0)
                                                    :mode imperative))
                          :ARG2 (c10-5 / let-01
                                       :ARG0 c10-1
                                       :ARG1 (c10-11 / come-01
                                                     :ARG1 c10-14
                                                     :direction (c10-4 / back))
                                       :time (c10-6 / ever)
                                       :mode imperative
                                       :polarity -)))

# ::snt indeed
# ::tokens ["indeed"]
# ::lemmas ["indeed"]
(c11-0 / indeed)

# ::snt &amp;what about all these teens that we stop from going abroad does anyone think they wont be terrorists here?
# ::tokens ["&", "amp;what", "about", "all", "these", "teens", "that", "we", "stop", "from", "going", "abroad", "does", "anyone", "think", "they", "wo", "nt", "be", "terrorists", "here", "?"]
# ::lemmas ["&", "amp;what", "about", "all", "these", "teen", "that", "we", "stop", "from", "go", "abroad", "do", "anyone", "think", "they", "will", "not", "be", "terrorist", "here", "?"]
(c12-13 / and
        :op2 (c12-5 / ask-01
                    :ARG1 (c12-12 / think-01
                                  :ARG0 (c12-6 / anyone)
                                  :ARG1 (c12-9 / terrorist
                                               :domain (c12-7 / teen
                                                              :mod (c12-11 / all)
                                                              :mod (c12-4 / this)
                                                              :ARG1-of (c12-10 / stop-03
                                                                               :ARG0 (c12-1 / we)
                                                                               :ARG2 (c12-8 / go-02
                                                                                            :ARG0 c12-7
                                                                                            :ARG4 (c12-3 / abroad))))
                                               :location (c12-0 / here)
                                               :polarity -)
                                  :polarity (c12-2 / amr-unknown))))
