# ::snt Stupid kids kidding cops
# ::tokens ["Stupid", "kids", "kidding", "cops"]
# ::lemmas ["stupid", "kid", "kid", "cop"]
(c1-3 / kid
      :mod (c1-0 / stupid)
      :ARG0-of (c1-1 / kid-01
                     :ARG0 c1-3)
      :ARG1 (c1-2 / cop))

# ::snt !! !))
# ::tokens ["!", "!", "!", ")", ")"]
# ::lemmas ["!", "!", "!", ")", ")"]
(c2-0 / laugh-01
      :mode expressive)

# ::snt I know we are no angels in the west.Our foreign policies often questionable, but religious terrorism is enemy of all
# ::tokens ["I", "know", "we", "are", "no", "angels", "in", "the", "west", ".", "Our", "foreign", "policies", "often", "questionable", ",", "but", "religious", "terrorism", "is", "enemy", "of", "all"]
# ::lemmas ["i", "know", "we", "be", "no", "angel", "in", "the", "west", ".", "our", "foreign", "policy", "often", "questionable", ",", "but", "religious", "terrorism", "be", "enemy", "of", "all"]
(c3-3 / multi-sentence
      :snt1 (c3-15 / know-01
                   :ARG0 (c3-8 / i)
                   :ARG1 (c3-16 / angel
                                :location (c3-1 / world-region
                                                :name (c3-10 / name
                                                             :op1 "West"))
                                :domain (c3-9 / we)
                                :polarity -))
      :snt2 (c3-13 / contrast-01
                   :ARG1 (c3-6 / question-03
                               :ARG1 (c3-11 / policy-01
                                            :ARG0 c3-9
                                            :ARG2 (c3-2 / foreign))
                               :frequency (c3-4 / often))
                   :ARG2 (c3-0 / have-rel-role-91
                               :ARG0 (c3-14 / terrorism
                                            :mod (c3-12 / religion))
                               :ARG1 (c3-7 / all)
                               :ARG2 (c3-5 / enemy))))

# ::snt // merci a nos policiers..
# ::tokens ["//", "merci", "a", "nos", "policiers", ".."]
# ::lemmas ["//", "merci", "a", "nos", "policier", ".."]
(c4-1 / merci-01
      :ARG1 (c4-3 / person
                  :ARG0-of (c4-0 / have-org-role-91
                                 :ARG1 (c4-4 / police))
                  :mod (c4-2 / nos)))

# ::snt si a se trouve, c'tait Flamby qui allait tirer un coup
# ::tokens ["si", "a", "se", "trouve", ",", "c'tait", "Flamby", "qui", "allait", "tirer", "un", "coup"]
# ::lemmas ["si", "a", "se", "trouve", ",", "c'tait", "Flamby", "qui", "allait", "tirer", "un", "coup"]
(c5-9 / and
      :op1 (c5-7 / si
                 :op1 (c5-8 / trouve-00))
      :op2 (c5-5 / c'tait
                 :op1 (c5-3 / person
                            :name (c5-2 / name
                                        :op1 "Flamby")
                            :ARG1-of (c5-0 / have-degree-91
                                           :ARG2 (c5-6 / tire-03
                                                       :ARG0 c5-3
                                                       :ARG1 (c5-4 / coup-01))
                                           :ARG3 (c5-1 / equal)
                                           :ARG4 c5-3))))

# ::snt I strongly condemn this barbaric attack against humankind as a Turkish Muslim
# ::tokens ["I", "strongly", "condemn", "this", "barbaric", "attack", "against", "humankind", "as", "a", "Turkish", "Muslim"]
# ::lemmas ["i", "strongly", "condemn", "this", "barbaric", "attack", "against", "humankind", "as", "a", "Turkish", "Muslim"]
(c6-6 / condemn-01
      :ARG0 (c6-2 / i
                  :mod (c6-5 / religious-group
                             :name (c6-3 / name
                                         :op1 "Muslim")
                             :mod (c6-7 / country
                                        :name (c6-4 / name
                                                    :op1 "Turkey"))))
      :ARG1 (c6-10 / attack-01
                   :ARG1 (c6-0 / humankind)
                   :mod (c6-1 / barbaric)
                   :mod (c6-9 / this))
      :ARG1-of (c6-8 / strong-02)
      :manner c6-5)

# ::snt shut up ... picture is a fake
# ::tokens ["shut", "up", "...", "picture", "is", "a", "fake"]
# ::lemmas ["shut", "up", "...", "picture", "be", "a", "fake"]
(c7-4 / and
      :op1 (c7-3 / shut-up-06
                 :ARG0 (c7-0 / you
                             :ARG1-of c7-3)
                 :mode imperative)
      :op2 (c7-1 / fake-02
                 :ARG1 (c7-2 / picture)))

# ::snt , , !
# ::tokens [",", ",", "!"]
# ::lemmas [",", ",", "!"]
(c8-0 / thing
      :mode expressive)

# ::snt Kadyrov in Chechnya quickly did kill terrorists who seized Press House,in France, Hollande could not even catch them
# ::tokens ["Kadyrov", "in", "Chechnya", "quickly", "did", "kill", "terrorists", "who", "seized", "Press", "House", ",", "in", "France", ",", "Hollande", "could", "not", "even", "catch", "them"]
# ::lemmas ["Kadyrov", "in", "Chechnya", "quickly", "do", "kill", "terrorist", "who", "seize", "Press", "House", ",", "in", "France", ",", "Hollande", "could", "not", "even", "catch", "they"]
(c10-15 / kill-01
        :ARG0 (c10-6 / person
                     :name (c10-4 / name
                                  :op1 "Kadyrov")
                     :location (c10-16 / province
                                       :name (c10-5 / name
                                                    :op1 "Chechnya")))
        :ARG1 (c10-12 / terrorist
                      :ARG0-of (c10-10 / seize-01
                                       :ARG1 (c10-1 / building
                                                    :name (c10-7 / name
                                                                 :op1 "Press"
                                                                 :op2 "House")
                                                    :location (c10-8 / country
                                                                     :name (c10-9 / name
                                                                                  :op1 "France")))))
        :ARG1-of (c10-3 / quick-02)
        :ARG1-of (c10-11 / cause-01
                         :ARG0 (c10-0 / possible-01
                                      :ARG1 (c10-13 / catch-01
                                                    :ARG0 (c10-14 / person
                                                                  :name (c10-17 / name
                                                                                :op1 "Hollande"))
                                                    :ARG1 c10-12
                                                    :mod (c10-2 / even))
                                      :polarity -)))

# ::snt !
# ::tokens ["!"]
# ::lemmas ["!"]
(c11-0 / thing
       :mode expressive)

# ::snt then you have my support an an English christian brother
# ::tokens ["then", "you", "have", "my", "support", "an", "an", "English", "christian", "brother"]
# ::lemmas ["then", "you", "have", "my", "support", "an", "an", "English", "christian", "brother"]
(c12-0 / have-03
       :ARG0 (c12-1 / you)
       :ARG1 (c12-9 / support-01
                    :ARG0 (c12-3 / i)
                    :ARG1 (c12-6 / person
                                 :mod (c12-7 / religious-group
                                             :name (c12-4 / name
                                                          :op1 "Christian"))
                                 :mod (c12-8 / country
                                             :name (c12-5 / name
                                                          :op1 "England"))
                                 :ARG0-of (c12-11 / have-rel-role-91
                                                  :ARG1 c12-3
                                                  :ARG2 (c12-2 / brother))))
       :time (c12-10 / then))

# ::snt , .
# ::tokens [",", "."]
# ::lemmas [",", "."]
(c13-0 / amr-empty)

# ::snt , ....
# ::tokens [",", "...."]
# ::lemmas [",", "...."]
(c14-0 / amr-empty)

# ::snt :?
# ::tokens [":", "?"]
# ::lemmas [":", "?"]
(c15-0 / thing
       :polarity (c15-1 / amr-unknown))

# ::snt That's President Hollande en route to a tryst.
# ::tokens ["That", "'s", "President", "Hollande", "en", "route", "to", "a", "tryst", "."]
# ::lemmas ["that", "be", "President", "Hollande", "en", "route", "to", "a", "tryst", "."]
(c17-2 / person
       :name (c17-1 / name
                    :op1 "Holland")
       :ARG0-of (c17-0 / have-org-role-91
                       :ARG2 (c17-5 / president))
       :destination (c17-4 / try-02)
       :domain (c17-3 / that))

# ::snt erdogan offers to send Yusuf Yerkel to kick him for France.
# ::tokens ["erdogan", "offers", "to", "send", "Yusuf", "Yerkel", "to", "kick", "him", "for", "France", "."]
# ::lemmas ["erdogan", "offer", "to", "send", "Yusuf", "Yerkel", "to", "kick", "he", "for", "France", "."]
(c18-0 / offer-01
       :ARG0 (c18-3 / person
                    :name (c18-1 / name
                                 :op1 "erdogan"))
       :ARG1 (c18-6 / send-01
                    :ARG0 c18-3
                    :ARG1 (c18-8 / person
                                 :name (c18-2 / name
                                              :op1 "Yusuf"
                                              :op2 "Yerkel"))
                    :ARG2 (c18-7 / kick-01
                                 :ARG0 c18-8
                                 :ARG1 (c18-5 / country
                                              :name (c18-4 / name
                                                           :op1 "France")))))
