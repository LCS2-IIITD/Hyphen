# ::snt Jason Kenney stating that the soldier has passed away
# ::tokens ["Jason", "Kenney", "stating", "that", "the", "soldier", "has", "passed", "away"]
# ::lemmas ["Jason", "Kenney", "state", "that", "the", "soldier", "have", "pass", "away"]
(c1-3 / state-01
      :ARG0 (c1-2 / person
                  :name (c1-1 / name
                              :op1 "Jason"
                              :op2 "Kenney"))
      :ARG1 (c1-4 / pass-away-16
                  :ARG1 (c1-0 / soldier)))

# ::snt Reports are stating that the solider passed away
# ::tokens ["Reports", "are", "stating", "that", "the", "solider", "passed", "away"]
# ::lemmas ["report", "be", "state", "that", "the", "solider", "pass", "away"]
(c2-3 / state-01
      :ARG0 (c2-2 / report-01)
      :ARG1 (c2-1 / pass-away-16
                  :ARG1 (c2-4 / person
                              :ARG0-of (c2-0 / pilot-01))))

# ::snt grain of salt as always though as we have heard nothing from DND
# ::tokens ["grain", "of", "salt", "as", "always", "though", "as", "we", "have", "heard", "nothing", "from", "DND"]
# ::lemmas ["grain", "of", "salt", "as", "always", "though", "as", "we", "have", "hear", "nothing", "from", "DND"]
(c3-0 / have-concession-91
      :ARG2 (c3-6 / salt
                  :time (c3-7 / always)
                  :ARG1-of (c3-5 / cause-01
                                 :ARG0 (c3-8 / hear-01
                                             :ARG0 (c3-1 / we)
                                             :ARG1 (c3-2 / nothing)
                                             :ARG2 (c3-4 / publication
                                                         :name (c3-3 / name
                                                                     :op1 "DND"))))))

# ::snt Well, now we are.
# ::tokens ["Well", ",", "now", "we", "are", "."]
# ::lemmas ["well", ",", "now", "we", "be", "."]
(c4-1 / we
      :time (c4-0 / now)
      :mod (c4-2 / well))

# ::snt reports now soldier has died from injuries
# ::tokens ["reports", "now", "soldier", "has", "died", "from", "injuries"]
# ::lemmas ["report", "now", "soldier", "have", "die", "from", "injury"]
(c5-3 / report-01
      :ARG1 (c5-2 / die-01
                  :ARG1 (c5-5 / soldier)
                  :ARG1-of (c5-4 / cause-01
                                 :ARG0 (c5-0 / injure-01
                                             :ARG1 c5-5))
                  :time (c5-1 / now)))

# ::snt Indeed. Which is why we're not reporting it.
# ::tokens ["Indeed", ".", "Which", "is", "why", "we", "'re", "not", "reporting", "it", "."]
# ::lemmas ["indeed", ".", "which", "be", "why", "we", "be", "not", "report", "it", "."]
(c7-1 / multi-sentence
      :snt1 (c7-2 / indeed)
      :snt2 (c7-6 / thing
                  :ARG0-of (c7-4 / cause-01
                                 :ARG1 (c7-3 / report-01
                                             :ARG0 (c7-0 / we)
                                             :ARG1 (c7-5 / it)
                                             :polarity -))))

# ::snt Yeah saw that. Kenney stated it, not hospital.
# ::tokens ["Yeah", "saw", "that", ".", "Kenney", "stated", "it", ",", "not", "hospital", "."]
# ::lemmas ["yeah", "see", "that", ".", "Kenney", "state", "it", ",", "not", "hospital", "."]
(c8-3 / multi-sentence
      :snt1 (c8-10 / see-01
                   :ARG0 (c8-5 / i)
                   :ARG1 (c8-11 / that)
                   :mod (c8-1 / yeah))
      :snt2 (c8-8 / contrast-01
                  :ARG1 (c8-4 / state-01
                              :ARG0 (c8-7 / person
                                          :name (c8-6 / name
                                                      :op1 "Kenney"))
                              :ARG1 (c8-9 / it))
                  :ARG2 (c8-2 / state-01
                              :ARG0 c8-7
                              :ARG1 (c8-0 / hospital)
                              :polarity -)))

# ::snt Good point
# ::tokens ["Good", "point"]
# ::lemmas ["good", "point"]
(c9-0 / point-04
      :ARG1-of (c9-1 / good-02))

# ::snt I was just going to say. Very tense downtown here. uOttawa is having all flaws in lockdown procedure revealed. Not good.
# ::tokens ["I", "was", "just", "going", "to", "say", ".", "Very", "tense", "downtown", "here", ".", "uOttawa", "is", "having", "all", "flaws", "in", "lockdown", "procedure", "revealed", ".", "Not", "good", "."]
# ::lemmas ["i", "be", "just", "go", "to", "say", ".", "very", "tense", "downtown", "here", ".", "uOttawa", "be", "have", "all", "flaw", "in", "lockdown", "procedure", "reveal", ".", "not", "good", "."]
(c10-3 / multi-sentence
       :snt1 (c10-11 / say-01
                     :ARG0 (c10-5 / i)
                     :mod (c10-0 / just))
       :snt2 (c10-12 / tense-03
                     :degree (c10-6 / very)
                     :location (c10-8 / downtown)
                     :location (c10-1 / here))
       :snt3 (c10-9 / reveal-01
                    :ARG1 (c10-2 / flaw-01
                                 :ARG1 (c10-7 / procedure
                                              :purpose (c10-4 / lock-up-03))
                                 :mod (c10-13 / all)))
       :snt4 (c10-10 / good-02
                     :polarity -))

# ::snt DND may want to notify family before official announcement.
# ::tokens ["DND", "may", "want", "to", "notify", "family", "before", "official", "announcement", "."]
# ::lemmas ["DND", "may", "want", "to", "notify", "family", "before", "official", "announcement", "."]
(c11-6 / possible-01
       :ARG1 (c11-0 / want-01
                    :ARG0 (c11-7 / government-organization
                                 :name (c11-4 / name
                                              :op1 "DND"))
                    :ARG1 (c11-5 / notify-01
                                 :ARG0 c11-7
                                 :ARG1 (c11-1 / family)
                                 :time (c11-2 / before
                                              :op1 (c11-8 / announce-01
                                                          :mod (c11-3 / official))))))

# ::snt my thoughts and prayers to the people of Ottawa so sorry u have to go through this
# ::tokens ["my", "thoughts", "and", "prayers", "to", "the", "people", "of", "Ottawa", "so", "sorry", "u", "have", "to", "go", "through", "this"]
# ::lemmas ["my", "thought", "and", "prayer", "to", "the", "people", "of", "Ottawa", "so", "sorry", "u", "have", "to", "go", "through", "this"]
(c12-9 / sorry-01
       :ARG1 (c12-3 / i)
       :ARG2 (c12-1 / obligate-01
                    :ARG1 (c12-0 / you)
                    :ARG2 (c12-7 / go-through-20
                                 :ARG0 c12-0
                                 :ARG1 (c12-10 / this)))
       :ARG2 (c12-12 / and
                     :op1 (c12-8 / think-01
                                 :ARG0 c12-3
                                 :ARG2 (c12-5 / person
                                              :location (c12-6 / city
                                                               :name (c12-4 / name
                                                                            :op1 "Ottawa"))))
                     :op2 (c12-11 / pray-01
                                  :ARG0 c12-3
                                  :ARG2 c12-5))
       :degree (c12-2 / so))

# ::snt very sad is that the soldier died, hope they will find the culprits
# ::tokens ["very", "sad", "is", "that", "the", "soldier", "died", ",", "hope", "they", "will", "find", "the", "culprits"]
# ::lemmas ["very", "sad", "be", "that", "the", "soldier", "die", ",", "hope", "they", "will", "find", "the", "culprit"]
(c13-7 / sad-02
       :ARG0 (c13-4 / die-01
                    :ARG1 (c13-2 / soldier))
       :degree (c13-3 / very)
       :ARG1-of (c13-5 / cause-01
                       :ARG0 (c13-0 / hope-01
                                    :ARG0 c13-2
                                    :ARG1 (c13-1 / find-01
                                                 :ARG0 (c13-8 / they)
                                                 :ARG1 (c13-6 / culprit)))))

# ::snt for real? That's so sad. I was hoping he would make it
# ::tokens ["for", "real", "?", "That", "'s", "so", "sad", ".", "I", "was", "hoping", "he", "would", "make", "it"]
# ::lemmas ["for", "real", "?", "that", "be", "so", "sad", ".", "i", "be", "hope", "he", "would", "make", "it"]
(c14-2 / multi-sentence
       :snt1 (c14-5 / real-04
                    :polarity (c14-8 / amr-unknown)
                    :ARG1 (c14-7 / that))
       :snt2 (c14-0 / hope-01
                    :ARG0 (c14-3 / i)
                    :ARG1 (c14-4 / make-02
                                 :ARG0 (c14-1 / he)
                                 :ARG1 (c14-6 / it))))

# ::snt Just confirmed that the soldier has died in hospital. Very sad news.
# ::tokens ["Just", "confirmed", "that", "the", "soldier", "has", "died", "in", "hospital", ".", "Very", "sad", "news", "."]
# ::lemmas ["just", "confirm", "that", "the", "soldier", "have", "die", "in", "hospital", ".", "very", "sad", "news", "."]
(c15-2 / multi-sentence
       :snt1 (c15-8 / confirm-01
                    :ARG0 (c15-4 / i)
                    :ARG1 (c15-7 / die-01
                                 :ARG1 (c15-9 / soldier)
                                 :location (c15-0 / hospital))
                    :mod (c15-1 / just))
       :snt2 (c15-5 / news
                    :ARG0-of (c15-3 / sad-02
                                    :degree (c15-6 / very))))

# ::snt : prayers to the vctms and ther famles. Well wshes for ther quck recovery. Prayng for dt solder and solder's famly.
# ::tokens [":", "prayers", "to", "the", "vctms", "and", "ther", "famles", ".", "Well", "wshes", "for", "ther", "quck", "recovery", ".", "Prayng", "for", "dt", "solder", "and", "solder", "'s", "famly", "."]
# ::lemmas [":", "prayer", "to", "the", "vctms", "and", "ther", "famle", ".", "well", "wshe", "for", "ther", "quck", "recovery", ".", "Prayng", "for", "dt", "solder", "and", "solder", "'s", "famly", "."]
(c16-2 / multi-sentence
       :snt1 (c16-8 / pray-01
                    :ARG2 (c16-17 / and
                                  :op1 (c16-11 / government-organization
                                               :name (c16-6 / name
                                                            :op1 "Vctms"))
                                  :op2 (c16-1 / family
                                              :mod (c16-15 / ther))))
       :snt2 (c16-0 / wash-01
                    :ARG1 (c16-9 / recover-01
                                 :ARG1 (c16-12 / they))
                    :mod (c16-5 / well))
       :snt3 (c16-16 / pray-01
                     :ARG1 (c16-4 / and
                                  :op1 (c16-3 / person
                                              :name (c16-7 / name
                                                           :op1 "Dt"
                                                           :op2 "Santorum"))
                                  :op2 (c16-10 / family
                                               :mod (c16-14 / person
                                                            :ARG0-of (c16-13 / solder-01))))))

# ::snt Sky News is reporting soldier has died. . Such a sad day for everyone.
# ::tokens ["Sky", "News", "is", "reporting", "soldier", "has", "died", ".", ".", "Such", "a", "sad", "day", "for", "everyone", "."]
# ::lemmas ["Sky", "News", "be", "report", "soldier", "have", "die", ".", ".", "such", "a", "sad", "day", "for", "everyone", "."]
(c17-2 / multi-sentence
       :snt1 (c17-7 / report-01
                    :ARG0 (c17-3 / broadcast-program
                                 :name (c17-6 / name
                                              :op1 "Sky"
                                              :op2 "News"))
                    :ARG1 (c17-8 / die-01
                                 :ARG1 (c17-9 / soldier)))
       :snt2 (c17-0 / day
                    :ARG0-of (c17-4 / sad-02
                                    :ARG1 (c17-5 / everyone)
                                    :degree (c17-1 / such))))

# ::snt thoughts and wishes go out to Ottawa this morning. *shocking*
# ::tokens ["thoughts", "and", "wishes", "go", "out", "to", "Ottawa", "this", "morning", ".", "*", "shocking", "*"]
# ::lemmas ["thought", "and", "wish", "go", "out", "to", "Ottawa", "this", "morning", ".", "*", "shock", "*"]
(c18-5 / go-out-17
       :ARG1 (c18-9 / and
                    :op1 (c18-8 / think-01)
                    :op2 (c18-0 / wish-01))
       :ARG2 (c18-4 / city
                    :name (c18-2 / name
                                 :op1 "Ottawa"))
       :time (c18-3 / date-entity
                    :dayperiod (c18-1 / morning)
                    :mod (c18-6 / today))
       :ARG0-of (c18-7 / shock-01))
