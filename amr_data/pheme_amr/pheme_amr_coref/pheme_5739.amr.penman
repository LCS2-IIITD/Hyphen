# ::snt What ever u like
# ::tokens ["What", "ever", "u", "like"]
# ::lemmas ["what", "ever", "u", "like"]
(c1-1 / like-01
      :ARG0 (c1-0 / you)
      :ARG1 (c1-2 / amr-unknown))

# ::snt it was the CIA
# ::tokens ["it", "was", "the", "CIA"]
# ::lemmas ["it", "be", "the", "CIA"]
(c2-1 / government-organization
      :name (c2-0 / name
                  :op1 "CIA"))

# ::snt that means nothing, the would love it if AQ got bombed for this
# ::tokens ["that", "means", "nothing", ",", "the", "would", "love", "it", "if", "AQ", "got", "bombed", "for", "this"]
# ::lemmas ["that", "mean", "nothing", ",", "the", "would", "love", "it", "if", "AQ", "got", "bomb", "for", "this"]
(c3-1 / multi-sentence
      :snt1 (c3-5 / mean-01
                  :ARG1 (c3-10 / that)
                  :ARG2 (c3-3 / nothing))
      :snt2 (c3-0 / love-01
                  :ARG0 (c3-6 / person)
                  :ARG1 (c3-2 / bomb-01
                              :ARG1 (c3-7 / criminal-organization
                                          :name (c3-4 / name
                                                      :op1 "AQ"))
                              :ARG1-of (c3-8 / cause-01
                                             :ARG0 (c3-9 / this)))))

# ::snt He also said one of the attackers had a rocket launcher..
# ::tokens ["He", "also", "said", "one", "of", "the", "attackers", "had", "a", "rocket", "launcher", ".."]
# ::lemmas ["he", "also", "say", "one", "of", "the", "attacker", "have", "a", "rocket", "launcher", ".."]
(c4-6 / say-01
      :ARG0 (c4-0 / he)
      :ARG1 (c4-10 / have-03
                   :ARG0 (c4-4 / person
                               :ARG1-of (c4-3 / include-91
                                              :ARG2 (c4-9 / person
                                                          :ARG0-of (c4-7 / attack-01)))
                               :quant 1)
                   :ARG1 (c4-8 / thing
                               :ARG0-of (c4-1 / launch-01
                                              :ARG1 (c4-5 / rocket))))
      :mod (c4-2 / also))

# ::snt they also killed people in Yemen the same day. The world must unite to end Alqaeda who killed more Muslims than others.
# ::tokens ["they", "also", "killed", "people", "in", "Yemen", "the", "same", "day", ".", "The", "world", "must", "unite", "to", "end", "Alqaeda", "who", "killed", "more", "Muslims", "than", "others", "."]
# ::lemmas ["they", "also", "kill", "people", "in", "Yemen", "the", "same", "day", ".", "the", "world", "must", "unite", "to", "end", "Alqaeda", "who", "kill", "more", "Muslims", "than", "other", "."]
(c5-0 / multi-sentence
      :snt1 (c5-16 / kill-01
                   :ARG0 (c5-21 / they)
                   :ARG1 (c5-2 / person)
                   :location (c5-20 / country
                                    :name (c5-10 / name
                                                 :op1 "Yemen"))
                   :mod (c5-7 / also)
                   :time (c5-3 / day
                               :ARG1-of (c5-5 / same-01)))
      :snt2 (c5-18 / obligate-01
                   :ARG2 (c5-14 / unite-01
                                :ARG1 (c5-13 / world)
                                :purpose (c5-9 / end-01
                                               :ARG0 c5-13
                                               :ARG1 (c5-4 / criminal-organization
                                                           :name (c5-19 / name
                                                                        :op1 "Alqaeda")
                                                           :ARG0-of (c5-15 / kill-01
                                                                           :ARG1 (c5-6 / person
                                                                                       :mod (c5-12 / religious-group
                                                                                                   :name (c5-1 / name
                                                                                                               :op1 "Muslim"))
                                                                                       :ARG1-of (c5-8 / have-quant-91
                                                                                                      :ARG3 (c5-11 / more)
                                                                                                      :ARG4 (c5-17 / other)))))))))

# ::snt No one is so dumb to believe that. Hold on ...
# ::tokens ["No", "one", "is", "so", "dumb", "to", "believe", "that", ".", "Hold", "on", "..."]
# ::lemmas ["no", "one", "be", "so", "dumb", "to", "believe", "that", ".", "hold", "on", "..."]
(c6-2 / multi-sentence
      :snt1 (c6-0 / have-degree-91
                  :ARG1 (c6-4 / no-one)
                  :ARG2 (c6-5 / dumb)
                  :ARG3 (c6-6 / so)
                  :ARG6 (c6-3 / believe-01
                              :ARG0 c6-4
                              :ARG1 (c6-7 / that)))
      :snt2 (c6-8 / hold-on-05
                  :ARG1 (c6-1 / you)))

# ::snt it's not what I like it's what happened
# ::tokens ["it", "'s", "not", "what", "I", "like", "it", "'s", "what", "happened"]
# ::lemmas ["it", "be", "not", "what", "i", "like", "it", "be", "what", "happen"]
(c7-3 / contrast-01
      :ARG1 (c7-2 / dislike-01
                  :ARG0 (c7-1 / i)
                  :ARG1 (c7-4 / it))
      :ARG2 (c7-0 / event))

# ::snt freedom fighters from Yemen
# ::tokens ["freedom", "fighters", "from", "Yemen"]
# ::lemmas ["freedom", "fighter", "from", "Yemen"]
(c9-3 / person
      :ARG0-of (c9-0 / fight-01
                     :ARG2 (c9-1 / free-04))
      :source (c9-4 / country
                    :name (c9-2 / name
                                :op1 "Yemen")))

# ::snt : .Please Let's share
# ::tokens [":", ".Please", "Let", "'s", "share"]
# ::lemmas [":", ".please", "let", "us", "share"]
(c10-0 / share-01
       :ARG0 (c10-1 / we)
       :mode imperative
       :polite +)

# ::snt checking my head
# ::tokens ["checking", "my", "head"]
# ::lemmas ["check", "my", "head"]
(c11-1 / check-01
       :ARG0 (c11-2 / i
                    :part (c11-0 / head
                                 :ARG1-of c11-1)))

# ::snt : Witness to attack claims gunmen told him it was Al-Qaeda in Yemen (i.e. AQAP)
# ::tokens [":", "Witness", "to", "attack", "claims", "gunmen", "told", "him", "it", "was", "Al", "-", "Qaeda", "in", "Yemen", "(", "i.e.", "AQAP", ")"]
# ::lemmas [":", "witness", "to", "attack", "claim", "gunman", "tell", "he", "it", "be", "Al", "-", "Qaeda", "in", "Yemen", "(", "i.e.", "AQAP", ")"]
(c12-6 / claim-01
       :ARG0 (c12-4 / person
                    :ARG0-of (c12-0 / witness-01
                                    :ARG1 (c12-11 / attack-01)))
       :ARG1 (c12-10 / tell-01
                     :ARG0 (c12-7 / gunman)
                     :ARG1 (c12-5 / criminal-organization
                                  :name (c12-2 / name
                                               :op1 "Al-Qaeda")
                                  :location (c12-9 / country
                                                   :name (c12-3 / name
                                                                :op1 "Yemen"))
                                  :ARG1-of (c12-1 / mean-01
                                                  :name (c12-8 / name
                                                               :op1 "AQAP")
                                                  :ARG2 c12-5)))
       :ARG2 c12-4)
