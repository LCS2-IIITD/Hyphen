# ::snt And didn't write his own incident report
# ::tokens ["And", "did", "n't", "write", "his", "own", "incident", "report"]
# ::lemmas ["and", "do", "not", "write", "his", "own", "incident", "report"]
(c1-4 / and
      :op2 (c1-1 / write-01
                 :ARG0 (c1-0 / he)
                 :ARG1 (c1-3 / report-01
                             :ARG1 (c1-2 / incident)
                             :ARG2 c1-0)
                 :polarity -))

# ::snt . WRONG - he shot after Brown pushed him back into car &amp;grabbed4fun &amp; he couldn't get out &amp; Brown RAN
# ::tokens [".", "WRONG", "-", "he", "shot", "after", "Brown", "pushed", "him", "back", "into", "car", "&", "amp;grabbed4fun", "&", "amp", ";", "he", "could", "n't", "get", "out", "&", "amp", ";", "Brown", "RAN"]
# ::lemmas [".", "wrong", "-", "he", "shoot", "after", "Brown", "push", "he", "back", "into", "car", "&", "amp;grabbed4fun", "&", "amp", ";", "he", "could", "not", "get", "out", "&", "amp", ";", "Brown", "RAN"]
(c2-0 / multi-sentence
      :snt1 (c2-19 / wrong-04
                   :ARG2 (c2-5 / shoot-02
                               :ARG0 (c2-9 / he)
                               :time (c2-8 / after
                                           :op1 (c2-3 / push-01
                                                      :ARG0 (c2-6 / person
                                                                  :name (c2-14 / name
                                                                               :op1 "Brown"))
                                                      :ARG1 (c2-7 / he)
                                                      :ARG2 (c2-20 / and
                                                                   :op1 (c2-24 / car)
                                                                   :op2 (c2-15 / amp))
                                                      :direction (c2-12 / back)))))
      :snt2 (c2-17 / grab-01
                   :ARG0 (c2-21 / i)
                   :ARG1 (c2-25 / and
                                :op1 (c2-11 / person
                                            :name (c2-23 / name
                                                         :op1 "4fun"))
                                :op2 (c2-18 / person
                                            :name (c2-1 / name
                                                        :op1 "Brown"))))
      :snt3 (c2-13 / possible-01
                   :ARG1 (c2-4 / get-05
                               :ARG1 (c2-2 / he)
                               :ARG2 (c2-22 / out-06
                                            :ARG1 c2-2))
                   :polarity -)
      :snt4 (c2-16 / rant-01
                   :ARG0 (c2-10 / person)))

# ::snt The robbery that wasn't a robbery . . . huh.
# ::tokens ["The", "robbery", "that", "was", "n't", "a", "robbery", ".", ".", ".", "huh", "."]
# ::lemmas ["the", "robbery", "that", "be", "not", "a", "robbery", ".", ".", ".", "huh", "."]
(c3-1 / rob-01
      :domain (c3-2 / rob-01
                    :polarity -)
      :mod (c3-0 / huh
                 :mode expressive))

# ::snt And frosting: ) There appears to have been no active investigation going on.This is NOT how you handle an officer-involved shooting.
# ::tokens ["And", "frosting", ":", ")", "There", "appears", "to", "have", "been", "no", "active", "investigation", "going", "on", ".", "This", "is", "NOT", "how", "you", "handle", "an", "officer", "-", "involved", "shooting", "."]
# ::lemmas ["and", "frost", ":", ")", "there", "appear", "to", "have", "be", "no", "active", "investigation", "go", "on", ".", "this", "be", "not", "how", "you", "handle", "an", "officer", "-", "involve", "shooting", "."]
(c5-3 / multi-sentence
      :snt1 (c5-11 / and
                   :op2 (c5-2 / frost-01))
      :snt2 (c5-5 / appear-02
                  :ARG1 (c5-6 / investigate-01
                              :ARG1-of (c5-7 / activity-06)
                              :polarity -))
      :snt3 (c5-0 / handle-01
                  :ARG0 (c5-1 / you)
                  :ARG1 (c5-9 / shoot-02
                              :ARG1 (c5-4 / officer
                                          :ARG1-of (c5-8 / involve-01)))
                  :manner (c5-10 / this)
                  :polarity -))

# ::snt That, too.
# ::tokens ["That", ",", "too", "."]
# ::lemmas ["that", ",", "too", "."]
(c6-0 / that
      :mod (c6-1 / too))

# ::snt Add to that: ) engaged St. Louis County police to their dirty work and handle "crowd control."
# ::tokens ["Add", "to", "that", ":", ")", "engaged", "St.", "Louis", "County", "police", "to", "their", "dirty", "work", "and", "handle", "\"", "crowd", "control", ".", "\""]
# ::lemmas ["add", "to", "that", ":", ")", "engage", "St.", "Louis", "County", "police", "to", "their", "dirty", "work", "and", "handle", "\"", "crowd", "control", ".", "\""]
(c7-11 / add-02
       :ARG1 (c7-3 / and
                   :op1 (c7-2 / engage-01
                              :ARG1 (c7-5 / police
                                          :location (c7-7 / county
                                                          :name (c7-4 / name
                                                                      :op1 "St."
                                                                      :op2 "Louis")))
                              :ARG2 (c7-1 / work-01
                                          :ARG0 c7-5
                                          :ARG1-of (c7-6 / dirty-02)))
                   :op2 (c7-0 / handle-01
                              :ARG0 c7-5
                              :ARG1 (c7-8 / control-01
                                          :ARG0 c7-5
                                          :ARG1 (c7-9 / crowd))))
       :ARG2 (c7-10 / that))

# ::snt So he should have been shot ten times? That narrative is in doubt via the eyewitnesses.
# ::tokens ["So", "he", "should", "have", "been", "shot", "ten", "times", "?", "That", "narrative", "is", "in", "doubt", "via", "the", "eyewitnesses", "."]
# ::lemmas ["so", "he", "should", "have", "be", "shoot", "ten", "time", "?", "that", "narrative", "be", "in", "doubt", "via", "the", "eyewitness", "."]
(c8-1 / multi-sentence
      :snt1 (c8-6 / cause-01
                  :ARG1 (c8-5 / recommend-01
                              :ARG1 (c8-8 / shoot-02
                                          :ARG1 (c8-0 / he)
                                          :frequency 10)
                              :polarity (c8-10 / amr-unknown)))
      :snt2 (c8-7 / doubt-01
                  :ARG0 (c8-2 / eyewitness)
                  :ARG1 (c8-4 / narrative
                              :mod (c8-9 / that))
                  :polarity (c8-3 / amr-unknown)))

# ::snt ) and on paid vacation curtesy if taxpayer.
# ::tokens [")", "and", "on", "paid", "vacation", "curtesy", "if", "taxpayer", "."]
# ::lemmas [")", "and", "on", "pay", "vacation", "curtesy", "if", "taxpayer", "."]
(c9-5 / and
      :op2 (c9-2 / courtesy
                 :mod (c9-0 / vacation-01)
                 :ARG3-of (c9-1 / pay-01)
                 :condition (c9-4 / person
                                  :ARG0-of c9-1
                                  :ARG1 (c9-3 / tax-01))))

# ::snt This story just keeps exponentially devolving. O.o
# ::tokens ["This", "story", "just", "keeps", "exponentially", "devolving", ".", "O.o"]
# ::lemmas ["this", "story", "just", "keep", "exponentially", "devolving", ".", "o.o"]
(c10-1 / multi-sentence
       :snt1 (c10-3 / keep-02
                    :ARG0 (c10-7 / story
                                 :mod (c10-8 / this))
                    :ARG1 (c10-6 / devolve-01
                                 :ARG1 c10-7
                                 :manner (c10-2 / exponential))
                    :mod (c10-0 / just))
       :snt2 (c10-5 / person
                    :name (c10-4 / name
                                 :op1 "O.o.")))

# ::snt So, to sum up: ) Darren Wilson KNEW NOTHING of the robbery, ) shot over jaywalking, and ) was allowed to escape .
# ::tokens ["So", ",", "to", "sum", "up", ":", ")", "Darren", "Wilson", "KNEW", "NOTHING", "of", "the", "robbery", ",", ")", "shot", "over", "jaywalking", ",", "and", ")", "was", "allowed", "to", "escape", "."]
# ::lemmas ["so", ",", "to", "sum", "up", ":", ")", "Darren", "Wilson", "know", "nothing", "of", "the", "robbery", ",", ")", "shoot", "over", "jaywalking", ",", "and", ")", "be", "allow", "to", "escape", "."]
(c11-4 / infer-01
       :ARG1 (c11-10 / sum-up-01
                     :ARG1 (c11-12 / and
                                   :op1 (c11-11 / know-01
                                                :ARG0 (c11-7 / person
                                                             :name (c11-5 / name
                                                                          :op1 "Darren"
                                                                          :op2 "Wilson"))
                                                :ARG1 (c11-6 / nothing
                                                             :topic (c11-8 / rob-01)))
                                   :op2 (c11-1 / shoot-02
                                               :ARG1 c11-7
                                               :ARG1-of (c11-9 / cause-01
                                                               :ARG0 (c11-0 / jaywalking)))
                                   :op3 (c11-3 / allow-01
                                               :ARG1 (c11-2 / escape-01
                                                            :ARG0 c11-7)))))
