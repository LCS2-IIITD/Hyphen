# ::snt Inspirational Henry. Merci
# ::tokens ["Inspirational", "Henry", ".", "Merci"]
# ::lemmas ["Inspirational", "Henry", ".", "merci"]
(c1-0 / multi-sentence
      :snt1 (c1-4 / person
                  :name (c1-2 / name
                              :op1 "Henry")
                  :ARG0-of (c1-1 / inspire-01))
      :snt2 (c1-5 / person
                  :name (c1-3 / name
                              :op1 "Merci")))

# ::snt Thank you for your drawing! That means a lot, English Friend!!! ;
# ::tokens ["Thank", "you", "for", "your", "drawing", "!", "That", "means", "a", "lot", ",", "English", "Friend", "!", "!", "!", ";"]
# ::lemmas ["thank", "you", "for", "your", "drawing", "!", "that", "mean", "a", "lot", ",", "English", "Friend", "!", "!", "!", ";"]
(c2-3 / multi-sentence
      :snt1 (c2-12 / thank-01
                   :ARG1 (c2-1 / you)
                   :ARG2 (c2-7 / draw-01
                               :ARG0 c2-1))
      :snt2 (c2-11 / say-01
                   :ARG1 (c2-6 / mean-01
                               :ARG1 (c2-10 / that)
                               :ARG2 (c2-2 / lot))
                   :ARG2 (c2-8 / person
                               :ARG0-of (c2-0 / have-rel-role-91
                                              :ARG1 (c2-13 / you)
                                              :ARG2 (c2-4 / friend))
                               :mod (c2-9 / country
                                          :name (c2-5 / name
                                                      :op1 "England")))))

# ::snt Dear Henry...Nothing else, just that
# ::tokens ["Dear", "Henry", "...", "Nothing", "else", ",", "just", "that"]
# ::lemmas ["Dear", "Henry", "...", "nothing", "else", ",", "just", "that"]
(c3-6 / say-01
      :ARG1 (c3-8 / and
                  :op1 (c3-2 / nothing
                             :mod (c3-1 / else))
                  :op2 (c3-7 / that
                             :mod (c3-0 / just)))
      :ARG2 (c3-4 / person
                  :name (c3-3 / name
                              :op1 "Henry")
                  :mod (c3-5 / dear)))

# ::snt I disagree. The pencil can hurt but it cannot kill. The gun can.
# ::tokens ["I", "disagree", ".", "The", "pencil", "can", "hurt", "but", "it", "can", "not", "kill", ".", "The", "gun", "can", "."]
# ::lemmas ["i", "disagree", ".", "the", "pencil", "can", "hurt", "but", "it", "can", "not", "kill", ".", "the", "gun", "can", "."]
(c4-1 / multi-sentence
      :snt1 (c4-5 / disagree-01
                  :ARG0 (c4-3 / i))
      :snt2 (c4-6 / contrast-01
                  :ARG1 (c4-4 / possible-01
                              :ARG1 (c4-0 / hurt-01
                                          :ARG0 (c4-10 / pencil)))
                  :ARG2 (c4-2 / possible-01
                              :ARG1 (c4-9 / kill-01
                                          :ARG0 c4-10)
                              :polarity -))
      :snt3 (c4-8 / possible-01
                  :ARG1 (c4-7 / gun)))

# ::snt And your best is as good as it gets. Gold star award Henry.
# ::tokens ["And", "your", "best", "is", "as", "good", "as", "it", "gets", ".", "Gold", "star", "award", "Henry", "."]
# ::lemmas ["and", "your", "good", "be", "as", "good", "as", "it", "get", ".", "gold", "star", "award", "Henry", "."]
(c5-1 / multi-sentence
      :snt1 (c5-14 / and
                   :op2 (c5-0 / have-degree-91
                              :ARG1 (c5-13 / thing
                                           :ARG2 (c5-9 / good-02
                                                       :ARG1 c5-13)
                                           :ARG3 (c5-6 / most)
                                           :ARG5 (c5-11 / thing
                                                        :ARG1-of (c5-7 / get-03
                                                                       :ARG0 (c5-3 / it)))
                                           :ARG1-of c5-0))
                   :ARG2 (c5-4 / good-02
                               :ARG1 c5-13)
                   :ARG3 c5-6)
      :snt2 (c5-8 / person
                  :name (c5-5 / name
                              :op1 "Henry")
                  :ARG1-of (c5-2 / award-01
                                 :ARG2 (c5-12 / star
                                              :mod (c5-10 / gold)))))

# ::snt . Damn you're good! I couldn't have done that with my fingers and hands!
# ::tokens [".", "Damn", "you", "'re", "good", "!", "I", "could", "n't", "have", "done", "that", "with", "my", "fingers", "and", "hands", "!"]
# ::lemmas [".", "damn", "you", "be", "good", "!", "i", "could", "not", "have", "do", "that", "with", "my", "finger", "and", "hand", "!"]
(c6-4 / multi-sentence
      :snt1 (c6-8 / good-02
                  :ARG1 (c6-1 / you)
                  :mod (c6-7 / damn
                             :mode expressive))
      :snt2 (c6-6 / possible-01
                  :ARG1 (c6-2 / do-02
                              :ARG0 (c6-5 / i
                                          :part (c6-3 / finger)
                                          :part (c6-0 / hand))
                              :ARG1 (c6-9 / that)
                              :manner (c6-10 / and
                                             :op1 c6-3
                                             :op2 c6-0))
                  :polarity -))

# ::snt Thank you so much, it means a lot for us
# ::tokens ["Thank", "you", "so", "much", ",", "it", "means", "a", "lot", "for", "us"]
# ::lemmas ["thank", "you", "so", "much", ",", "it", "mean", "a", "lot", "for", "we"]
(c7-7 / thank-01
      :ARG0 (c7-1 / we)
      :ARG1 (c7-2 / you)
      :ARG1-of (c7-4 / mean-01
                     :ARG2 (c7-3 / lot)
                     :ARG3 c7-1)
      :ARG1-of (c7-0 / have-quant-91
                     :ARG2 (c7-5 / much)
                     :ARG3 (c7-6 / so)))

# ::snt top man, H
# ::tokens ["top", "man", ",", "H"]
# ::lemmas ["top", "man", ",", "H"]
(c8-1 / person
      :name (c8-0 / name
                  :op1 "H")
      :mod (c8-3 / man
                 :mod (c8-2 / top)))

# ::snt Your 'best' is brilliant. The message is what counts. Enough is enough. suis Charlie
# ::tokens ["Your", "'", "best", "'", "is", "brilliant", ".", "The", "message", "is", "what", "counts", ".", "Enough", "is", "enough", ".", "suis", "Charlie"]
# ::lemmas ["your", "'", "good", "'", "be", "brilliant", ".", "the", "message", "be", "what", "count", ".", "enough", "be", "enough", ".", "suis", "Charlie"]
(c9-3 / multi-sentence
      :snt1 (c9-4 / brilliant-01
                  :ARG1 (c9-16 / thing
                               :ARG1-of (c9-0 / have-degree-91
                                              :ARG2 (c9-12 / good-02
                                                           :ARG1 c9-16)
                                              :ARG3 (c9-9 / most)
                                              :ARG5 (c9-14 / thing
                                                           :poss (c9-1 / you)))))
      :snt2 (c9-2 / message-01
                  :ARG1 (c9-8 / thing
                              :ARG1-of (c9-11 / count-04)))
      :snt3 (c9-13 / be-it-06)
      :snt4 (c9-15 / say-01
                   :ARG0 (c9-6 / i)
                   :ARG1 (c9-5 / enough)
                   :ARG2 (c9-10 / person
                                :name (c9-7 / name
                                            :op1 "Charlie"))))

# ::snt Amazing work Henry!!
# ::tokens ["Amazing", "work", "Henry", "!", "!"]
# ::lemmas ["amazing", "work", "Henry", "!", "!"]
(c10-3 / say-01
       :ARG1 (c10-0 / work-01
                    :ARG0 (c10-2 / person
                                 :name (c10-1 / name
                                              :op1 "Henry"))
                    :ARG0-of (c10-4 / amaze-01))
       :ARG2 c10-2)

# ::snt Excellent job! times better that what I could only attempt to do with my hands
# ::tokens ["Excellent", "job", "!", "times", "better", "that", "what", "I", "could", "only", "attempt", "to", "do", "with", "my", "hands"]
# ::lemmas ["excellent", "job", "!", "time", "well", "that", "what", "i", "could", "only", "attempt", "to", "do", "with", "my", "hand"]
(c11-4 / excellent-02
       :ARG1 (c11-0 / job)
       :ARG2-of (c11-1 / have-degree-91
                       :ARG1 c11-0
                       :ARG3 (c11-10 / times
                                     :quant (c11-2 / multiple))
                       :ARG4 (c11-8 / thing
                                    :ARG1-of (c11-7 / do-02
                                                    :ARG0 (c11-5 / i
                                                                 :part (c11-11 / hand))
                                                    :ARG1-of (c11-9 / attempt-01
                                                                    :ARG0 c11-5
                                                                    :mod (c11-3 / only))
                                                    :ARG1-of (c11-6 / possible-01))))
       :mode expressive)

# ::snt Please RT - Download a hilarious FREE Koran PARODY for infidels of all ages -
# ::tokens ["Please", "RT", "-", "Download", "a", "hilarious", "FREE", "Koran", "PARODY", "for", "infidels", "of", "all", "ages", "-"]
# ::lemmas ["please", "RT", "-", "Download", "a", "hilarious", "FREE", "Koran", "PARODY", "for", "infidel", "of", "all", "age", "-"]
(c12-10 / and
        :op1 (c12-9 / read-01
                    :ARG0 (c12-1 / you)
                    :ARG1 (c12-8 / publication
                                 :name (c12-6 / name
                                              :op1 "Koran")
                                 :ARG1-of (c12-2 / free-03)
                                 :beneficiary (c12-4 / infidelity
                                                     :mod (c12-3 / age
                                                                 :mod (c12-7 / all)))
                                 :mod (c12-0 / hilarious))
                    :mode imperative
                    :polite +)
        :op2 (c12-5 / reply-01
                    :ARG0 c12-1
                    :ARG2 c12-8
                    :mode imperative
                    :polite +))

# ::snt better than all the British front pages bar the Indy
# ::tokens ["better", "than", "all", "the", "British", "front", "pages", "bar", "the", "Indy"]
# ::lemmas ["well", "than", "all", "the", "British", "front", "page", "bar", "the", "Indy"]
(c13-0 / have-degree-91
       :ARG2 (c13-9 / good-02)
       :ARG3 (c13-2 / more)
       :ARG4 (c13-3 / bar-01
                    :ARG1 (c13-8 / car-make
                                 :name (c13-4 / name
                                              :op1 "Indy"))
                    :ARG2 (c13-6 / page
                                 :mod (c13-1 / front)
                                 :mod (c13-7 / country
                                             :name (c13-5 / name
                                                          :op1 "Britain"))
                                 :mod (c13-10 / all))))

# ::snt no excuse for not drawing within the lines H .
# ::tokens ["no", "excuse", "for", "not", "drawing", "within", "the", "lines", "H", "."]
# ::lemmas ["no", "excuse", "for", "not", "draw", "within", "the", "line", "h", "."]
(c14-1 / excuse-02
       :ARG2 (c14-2 / draw-02
                    :ARG1 (c14-3 / line
                                 :mod (c14-0 / string-entity
                                             :value "H"))
                    :polarity -)
       :polarity -)

# ::snt artistic license!
# ::tokens ["artistic", "license", "!"]
# ::lemmas ["artistic", "license", "!"]
(c15-0 / license
       :mod (c15-1 / artistic))

# ::snt !
# ::tokens ["!"]
# ::lemmas ["!"]
(c16-0 / thing
       :mode expressive)

# ::snt Nicely done. Keep Pushing Yourself. Nothing Can Hold Back the Human Spirit.
# ::tokens ["Nicely", "done", ".", "Keep", "Pushing", "Yourself", ".", "Nothing", "Can", "Hold", "Back", "the", "Human", "Spirit", "."]
# ::lemmas ["nicely", "do", ".", "keep", "push", "yourself", ".", "nothing", "can", "hold", "back", "the", "Human", "Spirit", "."]
(c17-2 / multi-sentence
       :snt1 (c17-6 / do-02
                    :ARG1-of (c17-3 / nice-01))
       :snt2 (c17-8 / keep-02
                    :ARG0 (c17-1 / you)
                    :ARG1 (c17-5 / pressure-01
                                 :ARG0 c17-1
                                 :ARG1 c17-1)
                    :mode imperative)
       :snt3 (c17-9 / possible-01
                    :ARG1 (c17-0 / hold-back-07
                                 :ARG0 (c17-4 / nothing)
                                 :ARG1 (c17-7 / spirit
                                              :mod (c17-10 / human)))
                    :polarity -))

# ::snt amazing bud!!
# ::tokens ["amazing", "bud", "!", "!"]
# ::lemmas ["amazing", "bud", "!", "!"]
(c18-0 / say-01
       :ARG0 (c18-2 / i)
       :ARG1 (c18-1 / amaze-01)
       :ARG2 (c18-3 / bud)
       :mode expressive)

# ::snt - nice one H !
# ::tokens ["-", "nice", "one", "H", "!"]
# ::lemmas ["-", "nice", "one", "h", "!"]
(c19-4 / say-01
       :ARG1 (c19-1 / nice-01
                    :ARG1 (c19-0 / one))
       :ARG2 (c19-3 / person
                    :name (c19-2 / name
                                 :op1 "H")))
