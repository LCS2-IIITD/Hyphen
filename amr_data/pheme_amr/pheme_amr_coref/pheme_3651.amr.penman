# ::snt : So sad. May their souls rest in peace.
# ::tokens [":", "So", "sad", ".", "May", "their", "souls", "rest", "in", "peace", "."]
# ::lemmas [":", "so", "sad", ".", "may", "their", "soul", "rest", "in", "peace", "."]
(c1-2 / multi-sentence
      :snt1 (c1-6 / sad-02
                  :degree (c1-3 / so))
      :snt2 (c1-0 / wish-01
                  :ARG1 (c1-5 / rest-01
                              :ARG1 (c1-1 / soul
                                          :part-of (c1-7 / they))
                              :manner (c1-4 / peace))))

# ::snt Wreckage was spread out; indicating some catastrophic event b4 crash.
# ::tokens ["Wreckage", "was", "spread", "out", ";", "indicating", "some", "catastrophic", "event", "b4", "crash", "."]
# ::lemmas ["Wreckage", "be", "spread", "out", ";", "indicate", "some", "catastrophic", "event", "b4", "crash", "."]
(c2-7 / spread-out-04
      :ARG1 (c2-0 / wreck-01)
      :ARG0-of (c2-3 / indicate-01
                     :ARG1 (c2-1 / event
                                 :mod (c2-6 / catastrophic)
                                 :mod (c2-2 / some)
                                 :domain (c2-5 / crash-01
                                               :name (c2-4 / name
                                                           :op1 "B4")))))

# ::snt your so right there liars
# ::tokens ["your", "so", "right", "there", "liars"]
# ::lemmas ["your", "so", "right", "there", "liar"]
(c3-6 / say-01
      :ARG0 (c3-3 / i)
      :ARG1 (c3-5 / right-06
                  :ARG1 (c3-0 / you)
                  :ARG2 (c3-7 / there)
                  :degree (c3-2 / so))
      :ARG2 (c3-4 / person
                  :ARG0-of (c3-1 / lie-08)))

# ::snt hey! (;
# ::tokens ["hey", "!", "(;"]
# ::lemmas ["hey", "!", "(;"]
(c4-0 / hey
      :mode expressive)

# ::snt SAD DAY.
# ::tokens ["SAD", "DAY", "."]
# ::lemmas ["SAD", "DAY", "."]
(c5-1 / day
      :ARG1-of (c5-0 / sad-02))

# ::snt don't lie. The French authorities said they haven't got there yet.
# ::tokens ["do", "n't", "lie", ".", "The", "French", "authorities", "said", "they", "have", "n't", "got", "there", "yet", "."]
# ::lemmas ["do", "not", "lie", ".", "the", "French", "authority", "say", "they", "have", "not", "get", "there", "yet", "."]
(c6-2 / multi-sentence
      :snt1 (c6-1 / lie-08
                  :ARG0 (c6-0 / you)
                  :polarity -
                  :mode imperative)
      :snt2 (c6-7 / say-01
                  :ARG0 (c6-9 / authority
                              :mod (c6-4 / country
                                         :name (c6-3 / name
                                                     :op1 "France")))
                  :ARG1 (c6-5 / get-05
                              :ARG1 c6-9
                              :ARG2 (c6-8 / there)
                              :time (c6-6 / yet)
                              :polarity -)))

# ::snt so what were the errors? What happened? Did they find the black box?
# ::tokens ["so", "what", "were", "the", "errors", "?", "What", "happened", "?", "Did", "they", "find", "the", "black", "box", "?"]
# ::lemmas ["so", "what", "be", "the", "error", "?", "what", "happen", "?", "do", "they", "find", "the", "black", "box", "?"]
(c7-1 / multi-sentence
      :snt1 (c7-4 / err-01
                  :ARG1 (c7-9 / amr-unknown))
      :snt2 (c7-2 / event
                  :mod (c7-5 / amr-unknown))
      :snt3 (c7-0 / find-01
                  :ARG0 (c7-8 / they)
                  :ARG1 (c7-3 / box
                              :ARG1-of (c7-7 / black-04))
                  :polarity (c7-6 / amr-unknown)))

# ::snt Your are wrong it's only for Palestinian
# ::tokens ["Your", "are", "wrong", "it", "'s", "only", "for", "Palestinian"]
# ::lemmas ["your", "be", "wrong", "it", "be", "only", "for", "Palestinian"]
(c8-0 / wrong-04
      :ARG1 (c8-1 / you)
      :ARG2 (c8-2 / benefit-01
                  :ARG0 (c8-4 / it)
                  :ARG1 (c8-6 / person
                              :mod (c8-7 / country
                                         :name (c8-5 / name
                                                     :op1 "Palestine")))
                  :mod (c8-3 / only)))

# ::snt so sad
# ::tokens ["so", "sad"]
# ::lemmas ["so", "sad"]
(c9-0 / sad-02
      :degree (c9-1 / so))

# ::snt no actually the security forces are going to the crash area.
# ::tokens ["no", "actually", "the", "security", "forces", "are", "going", "to", "the", "crash", "area", "."]
# ::lemmas ["no", "actually", "the", "security", "force", "be", "go", "to", "the", "crash", "area", "."]
(c10-3 / go-02
       :ARG0 (c10-0 / force
                    :mod (c10-4 / security))
       :ARG4 (c10-5 / area
                    :location-of (c10-2 / crash-01))
       :ARG1-of (c10-1 / actual-02)
       :polarity -)

# ::snt that's just nonsense, isn't it? Rescuers are not even there yet. I call bullshit
# ::tokens ["that", "'s", "just", "nonsense", ",", "is", "n't", "it", "?", "Rescuers", "are", "not", "even", "there", "yet", ".", "I", "call", "bullshit"]
# ::lemmas ["that", "be", "just", "nonsense", ",", "be", "not", "it", "?", "rescuer", "be", "not", "even", "there", "yet", ".", "i", "call", "bullshit"]
(c11-2 / multi-sentence
       :snt1 (c11-12 / sense-02
                     :ARG1 (c11-13 / that)
                     :mod (c11-0 / just)
                     :ARG1-of (c11-8 / request-confirmation-91)
                     :polarity -)
       :snt2 (c11-3 / be-located-at-91
                    :ARG1 (c11-7 / person
                                 :ARG0-of (c11-6 / rescue-01))
                    :ARG2 (c11-11 / there)
                    :mod (c11-4 / even)
                    :time (c11-1 / yet)
                    :polarity -)
       :snt3 (c11-9 / call-13
                    :ARG0 (c11-5 / i)
                    :ARG1 (c11-10 / bullshit-01)))

# ::snt umm...
# ::tokens ["umm", "..."]
# ::lemmas ["umm", "..."]
(c12-0 / umm)

# ::snt So sad! Let's pray for them!
# ::tokens ["So", "sad", "!", "Let", "'s", "pray", "for", "them", "!"]
# ::lemmas ["so", "sad", "!", "let", "us", "pray", "for", "they", "!"]
(c14-1 / multi-sentence
       :snt1 (c14-4 / sad-02
                    :degree (c14-2 / so))
       :snt2 (c14-3 / pray-01
                    :ARG0 (c14-0 / we)
                    :beneficiary (c14-5 / they)
                    :mode imperative))

# ::snt CNN are lying, the French president said that it'll take hours due to snow.
# ::tokens ["CNN", "are", "lying", ",", "the", "French", "president", "said", "that", "it", "'ll", "take", "hours", "due", "to", "snow", "."]
# ::lemmas ["CNN", "be", "lie", ",", "the", "French", "president", "say", "that", "it", "'ll", "take", "hours", "due", "to", "snow", "."]
(c15-14 / and
        :op1 (c15-1 / lie-08
                    :ARG0 (c15-8 / publication
                                 :name (c15-6 / name
                                              :op1 "CNN")))
        :op2 (c15-11 / say-01
                     :ARG0 (c15-13 / person
                                   :ARG0-of (c15-0 / have-org-role-91
                                                   :ARG1 (c15-9 / country
                                                                :name (c15-7 / name
                                                                             :op1 "France"))
                                                   :ARG2 (c15-4 / president)))
                     :ARG1 (c15-12 / take-10
                                   :ARG0 (c15-5 / snow-01)
                                   :ARG1 (c15-2 / multiple
                                                :op1 (c15-10 / temporal-quantity
                                                             :unit (c15-3 / hour)
                                                             :quant 1)))))

# ::snt if you look at Google Earth, they may have been trying to land at Barcelonnette (26 degree heading) from Digne.
# ::tokens ["if", "you", "look", "at", "Google", "Earth", ",", "they", "may", "have", "been", "trying", "to", "land", "at", "Barcelonnette", "(", "26", "degree", "heading", ")", "from", "Digne", "."]
# ::lemmas ["if", "you", "look", "at", "Google", "Earth", ",", "they", "may", "have", "be", "try", "to", "land", "at", "Barcelonnette", "(", "26", "degree", "heading", ")", "from", "Digne", "."]
(c16-6 / possible-01
       :ARG1 (c16-14 / try-01
                     :ARG0 (c16-11 / they)
                     :ARG1 (c16-2 / land-01
                                  :ARG1 c16-11
                                  :location (c16-8 / city-district
                                                   :name (c16-4 / name
                                                                :op1 "Barcelonnette")
                                                   :ARG1-of (c16-3 / mean-01
                                                                   :ARG2 (c16-0 / heading
                                                                                :mod (c16-15 / angle-quantity
                                                                                             :unit (c16-7 / degree)
                                                                                             :quant 26))))
                                  :source (c16-9 / city-district
                                                 :name (c16-5 / name
                                                              :op1 "Digne"))))
       :condition (c16-10 / look-01
                          :ARG0 (c16-1 / you)
                          :ARG1 (c16-12 / company
                                        :name (c16-13 / name
                                                      :op1 "Google"
                                                      :op2 "Earth"))))

# ::snt Jerusalem is capital of Palestine forever
# ::tokens ["Jerusalem", "is", "capital", "of", "Palestine", "forever"]
# ::lemmas ["Jerusalem", "be", "capital", "of", "Palestine", "forever"]
(c17-0 / have-org-role-91
       :ARG0 (c17-5 / city
                    :name (c17-2 / name
                                 :op1 "Jerusalem"))
       :ARG1 (c17-4 / country
                    :name (c17-3 / name
                                 :op1 "Palestine"))
       :ARG2 (c17-6 / capital)
       :duration (c17-1 / forever))

# ::snt later info talkshow about passengers and crew
# ::tokens ["later", "info", "talkshow", "about", "passengers", "and", "crew"]
# ::lemmas ["later", "info", "talkshow", "about", "passenger", "and", "crew"]
(c18-4 / talkhow
       :topic (c18-6 / and
                     :op1 (c18-2 / passenger)
                     :op2 (c18-5 / person
                                 :ARG0-of (c18-3 / crew-01)))
       :time (c18-0 / after)
       :mod (c18-1 / information))

# ::snt A Germanwings Airbus A320 plane carrying at least148 people crashed in mountainous southeastern France..
# ::tokens ["A", "Germanwings", "Airbus", "A320", "plane", "carrying", "at", "least148", "people", "crashed", "in", "mountainous", "southeastern", "France", ".."]
# ::lemmas ["a", "Germanwings", "Airbus", "A320", "plane", "carry", "at", "least148", "people", "crash", "in", "mountainous", "southeastern", "France", ".."]
(c19-5 / crash-01
       :ARG1 (c19-3 / plane
                    :name (c19-1 / name
                                 :op1 "Airbus"
                                 :op2 "A320")
                    :poss (c19-4 / company
                                 :name (c19-2 / name
                                              :op1 "Germanywings"))
                    :ARG0-of (c19-8 / carry-01
                                    :ARG1 (c19-9 / person
                                                 :quant (c19-10 / at-least
                                                                :op1148 (c19-7 / southeast
                                                                               :part-of (c19-11 / country
                                                                                                :name (c19-6 / name
                                                                                                             :op1 "France")
                                                                                                :mod (c19-0 / mountain))))))))

# ::snt so sad, my heart goes out to all the family of those lost souls
# ::tokens ["so", "sad", ",", "my", "heart", "goes", "out", "to", "all", "the", "family", "of", "those", "lost", "souls"]
# ::lemmas ["so", "sad", ",", "my", "heart", "go", "out", "to", "all", "the", "family", "of", "those", "lose", "soul"]
(c20-0 / have-degree-91
       :ARG1 (c20-12 / heart
                     :part-of (c20-6 / i))
       :ARG2 (c20-9 / sad-02
                    :ARG1 c20-12)
       :ARG3 (c20-5 / so)
       :ARG6 (c20-7 / go-01
                    :ARG1 c20-12
                    :ARG4 (c20-1 / family
                                 :mod (c20-10 / all)
                                 :ARG1-of (c20-8 / include-91
                                                 :ARG2 (c20-2 / soul
                                                              :ARG1-of (c20-3 / lose-02)
                                                              :mod (c20-11 / that))))
                    :direction (c20-4 / out)))

# ::snt Jerusalem is capital of IsRaEL &amp; Palestinians should try2LIVE together in Tolerance&ampeace..
# ::tokens ["Jerusalem", "is", "capital", "of", "IsRaEL", "&", "amp", ";", "Palestinians", "should", "try2LIVE", "together", "in", "Tolerance&ampeace", ".."]
# ::lemmas ["Jerusalem", "be", "capital", "of", "IsRaEL", "&", "amp", ";", "Palestinians", "should", "try2live", "together", "in", "Tolerance&ampeace", ".."]
(c21-2 / multi-sentence
       :snt1 (c21-0 / have-org-role-91
                    :ARG0 (c21-7 / city
                                 :name (c21-3 / name
                                              :op1 "Jerusalem"))
                    :ARG1 (c21-6 / country
                                 :name (c21-4 / name
                                              :op1 "Israel"))
                    :ARG2 (c21-11 / capital))
       :snt2 (c21-8 / recommend-01
                    :ARG1 (c21-13 / try-01
                                  :ARG0 (c21-5 / person
                                               :mod (c21-16 / country
                                                            :name (c21-9 / name
                                                                         :op1 "Palestine")))
                                  :ARG1 (c21-1 / live-01
                                               :ARG0 c21-5
                                               :manner (c21-10 / together)
                                               :manner (c21-15 / and
                                                               :op1 (c21-12 / tolerate-01)
                                                               :op2 (c21-14 / peace))))))

# ::snt not great to say that then considering victims families horrific grief
# ::tokens ["not", "great", "to", "say", "that", "then", "considering", "victims", "families", "horrific", "grief"]
# ::lemmas ["not", "great", "to", "say", "that", "then", "consider", "victim", "family", "horrific", "grief"]
(c22-5 / great
       :domain (c22-6 / say-01
                      :ARG1 (c22-4 / consider-02
                                   :ARG1 (c22-3 / grief
                                                :mod (c22-0 / horrific)
                                                :poss (c22-1 / family
                                                             :ARG1-of (c22-2 / victimize-01)))
                                   :time (c22-7 / then)))
       :polarity -)

# ::snt they are saying could take hrs to reach crash site so how can they already have found bodies?
# ::tokens ["they", "are", "saying", "could", "take", "hrs", "to", "reach", "crash", "site", "so", "how", "can", "they", "already", "have", "found", "bodies", "?"]
# ::lemmas ["they", "be", "say", "could", "take", "hrs", "to", "reach", "crash", "site", "so", "how", "can", "they", "already", "have", "find", "body", "?"]
(c23-12 / say-01
        :ARG0 (c23-13 / they)
        :ARG1 (c23-7 / possible-01
                     :ARG1 (c23-11 / take-10
                                   :ARG0 (c23-8 / reach-01
                                                :ARG0 c23-13
                                                :ARG1 (c23-4 / site
                                                             :location-of (c23-9 / crash-01)))
                                   :ARG1 (c23-2 / multiple
                                                :op1 (c23-6 / temporal-quantity
                                                            :unit (c23-0 / hour)
                                                            :quant 1)))
                     :ARG0-of (c23-10 / cause-01
                                      :ARG1 (c23-14 / possible-01
                                                    :ARG1 (c23-1 / find-01
                                                                 :ARG0 c23-13
                                                                 :ARG1 (c23-3 / body)
                                                                 :time (c23-15 / already)
                                                                 :manner (c23-5 / amr-unknown))))))

# ::snt exactly!
# ::tokens ["exactly", "!"]
# ::lemmas ["exactly", "!"]
(c24-0 / exact
       :mode expressive)
