# ::snt great job by the Sydney police. You cannot allow people like that to live. The Democrats in this country should learn that.
# ::tokens ["great", "job", "by", "the", "Sydney", "police", ".", "You", "can", "not", "allow", "people", "like", "that", "to", "live", ".", "The", "Democrats", "in", "this", "country", "should", "learn", "that", "."]
# ::lemmas ["great", "job", "by", "the", "Sydney", "police", ".", "you", "can", "not", "allow", "people", "like", "that", "to", "live", ".", "the", "Democrats", "in", "this", "country", "should", "learn", "that", "."]
(c1-1 / multi-sentence
      :snt1 (c1-0 / job
                  :mod (c1-13 / great)
                  :source (c1-3 / police
                                :mod (c1-19 / city
                                            :name (c1-11 / name
                                                         :op1 "Sydney"))))
      :snt2 (c1-5 / possible-01
                  :ARG1 (c1-6 / allow-01
                              :ARG0 (c1-17 / you)
                              :ARG1 (c1-8 / live-01
                                          :ARG0 (c1-9 / person
                                                      :ARG1-of (c1-12 / resemble-01
                                                                      :ARG2 (c1-21 / that)))))
                  :polarity -)
      :snt3 (c1-2 / recommend-01
                  :ARG1 (c1-20 / learn-01
                               :ARG0 (c1-14 / person
                                            :ARG0-of (c1-7 / have-org-role-91
                                                           :ARG1 (c1-10 / political-party
                                                                        :name (c1-18 / name
                                                                                     :op1 "Democrat")))
                                            :location (c1-4 / country
                                                            :mod (c1-16 / this)))
                               :ARG1 (c1-15 / that))))

# ::snt Sydney'de iddetli atma : VIDEO: Police storm cafe in Sydney. ://
# ::tokens ["Sydney'de", "iddetli", "atma", ":", "VIDEO", ":", "Police", "storm", "cafe", "in", "Sydney", ".", ":", "//"]
# ::lemmas ["Sydney'de", "iddetli", "atma", ":", "video", ":", "police", "storm", "cafe", "in", "Sydney", ".", ":", "//"]
(c2-0 / multi-sentence
      :snt1 (c2-3 / person
                  :name (c2-1 / name
                              :op1 "Sydney'de"
                              :op2 "iddetli"
                              :op3 "Atma"))
      :snt2 (c2-2 / video
                  :topic (c2-7 / storm-02
                               :ARG0 (c2-8 / police)
                               :ARG1 (c2-5 / cafe
                                           :location (c2-4 / city
                                                           :name (c2-6 / name
                                                                       :op1 "Sydney"))))))

# ::snt : VIDEO: Police storm cafe in Sydney. :// damnn
# ::tokens [":", "VIDEO", ":", "Police", "storm", "cafe", "in", "Sydney", ".", ":", "//", "damnn"]
# ::lemmas [":", "video", ":", "police", "storm", "cafe", "in", "Sydney", ".", ":", "//", "damnn"]
(c4-0 / multi-sentence
      :snt1 (c4-2 / video
                  :snt2 (c4-7 / storm-02
                              :ARG0 (c4-3 / police)
                              :ARG1 (c4-5 / cafe
                                          :location (c4-4 / city
                                                          :name (c4-1 / name
                                                                      :op1 "Sydney")))))
      :snt3 (c4-6 / damn
                  :mode expressive))

# ::snt He's in heaven with those virgins
# ::tokens ["He", "'s", "in", "heaven", "with", "those", "virgins"]
# ::lemmas ["he", "be", "in", "heaven", "with", "those", "virgin"]
(c5-1 / be-located-at-91
      :ARG1 (c5-0 / he)
      :ARG2 (c5-4 / heaven)
      :accompanier (c5-2 / virgin
                         :mod (c5-3 / that)))

# ::snt : VIDEOlice storm cafe in Sydney.:// one can only hope this terrorist was hurt and no one else
# ::tokens [":", "VIDEOlice", "storm", "cafe", "in", "Sydney.://", "one", "can", "only", "hope", "this", "terrorist", "was", "hurt", "and", "no", "one", "else"]
# ::lemmas [":", "videolice", "storm", "cafe", "in", "Sydney.://", "one", "can", "only", "hope", "this", "terrorist", "be", "hurt", "and", "no", "one", "else"]
(c6-2 / multi-sentence
      :snt1 (c6-10 / cafe
                   :ARG0-of (c6-13 / storm-02)
                   :location (c6-9 / city
                                   :name (c6-6 / name
                                               :op1 "Sydney"))
                   :mod (c6-7 / video))
      :snt2 (c6-8 / possible-01
                  :ARG1 (c6-0 / hope-01
                              :ARG0 (c6-4 / one)
                              :ARG1 (c6-15 / and
                                           :op1 (c6-1 / hurt-01
                                                      :ARG1 (c6-14 / terrorist
                                                                   :mod (c6-12 / this)))
                                           :op2 (c6-11 / no-one
                                                       :mod (c6-5 / else)))
                              :mod (c6-3 / only))))

# ::snt ...stormed the place where some hostages are still being held?
# ::tokens ["...", "stormed", "the", "place", "where", "some", "hostages", "are", "still", "being", "held", "?"]
# ::lemmas ["...", "storm", "the", "place", "where", "some", "hostage", "be", "still", "be", "hold", "?"]
(c7-4 / storm-02
      :polarity (c7-5 / amr-unknown)
      :ARG1 (c7-3 / place
                  :location-of (c7-0 / hold-01
                                     :ARG1 (c7-6 / hostage
                                                 :quant (c7-2 / some))
                                     :mod (c7-1 / still))))

# ::snt : VIDEO: Police storm cafe in Sydney. :// dam sounds like a war zone!
# ::tokens [":", "VIDEO", ":", "Police", "storm", "cafe", "in", "Sydney", ".", ":", "//", "dam", "sounds", "like", "a", "war", "zone", "!"]
# ::lemmas [":", "video", ":", "police", "storm", "cafe", "in", "Sydney", ".", ":", "//", "dam", "sound", "like", "a", "war", "zone", "!"]
(c8-1 / multi-sentence
      :snt1 (c8-5 / video
                  :snt2 (c8-10 / storm-01
                               :ARG0 (c8-6 / police)
                               :ARG1 (c8-8 / cafe
                                           :location (c8-7 / city
                                                           :name (c8-4 / name
                                                                       :op1 "Sydney")))))
      :snt3 (c8-3 / sound-01
                  :ARG1 (c8-9 / dam)
                  :ARG2 (c8-2 / zone
                              :mod (c8-0 / war))))

# ::snt Another GOOD example why we should all train and conceal carry everyday.
# ::tokens ["Another", "GOOD", "example", "why", "we", "should", "all", "train", "and", "conceal", "carry", "everyday", "."]
# ::lemmas ["another", "good", "example", "why", "we", "should", "all", "train", "and", "conceal", "carry", "everyday", "."]
(c9-1 / example
      :mod (c9-13 / another)
      :ARG1-of (c9-7 / good-02)
      :ARG0-of (c9-6 / cause-01
                     :ARG1 (c9-5 / recommend-01
                                 :ARG1 (c9-2 / and
                                             :op1 (c9-12 / train-01
                                                         :ARG0 (c9-0 / we
                                                                     :mod (c9-4 / all))
                                                         :ARG1 (c9-8 / conceal-01
                                                                     :ARG0 c9-0
                                                                     :ARG1 (c9-10 / carry-01
                                                                                  :ARG0 c9-0))
                                                         :frequency (c9-3 / rate-entity-91
                                                                          :ARG3 (c9-9 / temporal-quantity
                                                                                      :unit (c9-11 / day)
                                                                                      :quant 1)))
                                             :op2 c9-8)
                                 :ARG2 c9-0)))

# ::snt watch here
# ::tokens ["watch", "here"]
# ::lemmas ["watch", "here"]
(c10-1 / watch-01
       :ARG0 (c10-2 / you)
       :location (c10-0 / here)
       :mode imperative)

# ::snt -I hope they shot the SOB right between the eyes.
# ::tokens ["-I", "hope", "they", "shot", "the", "SOB", "right", "between", "the", "eyes", "."]
# ::lemmas ["-i", "hope", "they", "shoot", "the", "SOB", "right", "between", "the", "eye", "."]
(c11-0 / hope-01
       :ARG0 (c11-4 / i)
       :ARG1 (c11-6 / shoot-02
                    :ARG0 (c11-7 / they)
                    :ARG1 (c11-2 / son-of-a-bitch)
                    :location (c11-1 / between
                                     :op1 (c11-3 / eye)
                                     :mod (c11-5 / right))))

# ::snt I hope the sent the bastard to hell shredded by mm bullets
# ::tokens ["I", "hope", "the", "sent", "the", "bastard", "to", "hell", "shredded", "by", "mm", "bullets"]
# ::lemmas ["i", "hope", "the", "send", "the", "bastard", "to", "hell", "shred", "by", "mm", "bullets"]
(c12-0 / hope-01
       :ARG0 (c12-4 / i)
       :ARG1 (c12-7 / send-03
                    :ARG0 (c12-2 / bullet
                                 :mod (c12-5 / distance-quantity
                                             :quant (c12-1 / mm))
                                 :ARG1 (c12-6 / bastard)
                                 :ARG4 (c12-8 / hell)
                                 :ARG1-of (c12-3 / shred-01
                                                 :ARG0 c12-2))))

# ::snt Were those "flash-bang" grenade flashes? Gun fire flashes?
# ::tokens ["Were", "those", "\"", "flash", "-", "bang", "\"", "grenade", "flashes", "?", "Gun", "fire", "flashes", "?"]
# ::lemmas ["be", "those", "\"", "flash", "-", "bang", "\"", "grenade", "flash", "?", "Gun", "fire", "flash", "?"]
(c13-1 / multi-sentence
       :snt1 (c13-0 / flash-01
                    :ARG1 (c13-7 / grenade
                                 :mod (c13-2 / bang)
                                 :mod (c13-8 / that))
                    :polarity (c13-9 / amr-unknown))
       :snt2 (c13-5 / flash-01
                    :ARG1 (c13-3 / fire-01
                                 :ARG1 (c13-6 / gun))
                    :polarity (c13-4 / amr-unknown)))

# ::snt Oh my!
# ::tokens ["Oh", "my", "!"]
# ::lemmas ["oh", "my", "!"]
(c14-0 / oh-my-god
       :mode expressive)

# ::snt : VIDEO: Police storm cafe in Sydney. :// hope those clips were emptied into that man's chest.
# ::tokens [":", "VIDEO", ":", "Police", "storm", "cafe", "in", "Sydney", ".", ":", "//", "hope", "those", "clips", "were", "emptied", "into", "that", "man", "'s", "chest", "."]
# ::lemmas [":", "video", ":", "police", "storm", "cafe", "in", "Sydney", ".", ":", "//", "hope", "those", "clip", "be", "empty", "into", "that", "man", "'s", "chest", "."]
(c15-1 / multi-sentence
       :snt1 (c15-4 / video
                    :snt2 (c15-10 / storm-02
                                  :ARG0 (c15-5 / police)
                                  :ARG1 (c15-7 / cafe
                                               :location (c15-6 / city
                                                                :name (c15-3 / name
                                                                             :op1 "Sydney")))))
       :snt3 (c15-0 / hope-01
                    :ARG1 (c15-2 / empty-01
                                 :ARG1 (c15-9 / clip
                                              :mod (c15-12 / that))
                                 :ARG2 (c15-13 / chest
                                               :part-of (c15-8 / man
                                                               :mod (c15-11 / that))))))

# ::snt this could have been done long back without so much fanfare . Instead of storming a sniper would hve done the job
# ::tokens ["this", "could", "have", "been", "done", "long", "back", "without", "so", "much", "fanfare", ".", "Instead", "of", "storming", "a", "sniper", "would", "hve", "done", "the", "job"]
# ::lemmas ["this", "could", "have", "be", "do", "long", "back", "without", "so", "much", "fanfare", ".", "instead", "of", "storm", "a", "sniper", "would", "hve", "do", "the", "job"]
(c16-4 / multi-sentence
       :snt1 (c16-10 / possible-01
                     :ARG1 (c16-11 / do-02
                                   :ARG1 (c16-14 / this)
                                   :time (c16-7 / back
                                                :ARG1-of (c16-3 / long-03))
                                   :manner (c16-5 / fanfare
                                                  :ARG1-of (c16-0 / have-quant-91
                                                                  :ARG2 (c16-12 / much)
                                                                  :ARG3 (c16-13 / so))
                                                  :polarity -)))
       :snt2 (c16-2 / do-02
                    :ARG0 (c16-8 / storm-02
                                 :ARG1 (c16-6 / sniper))
                    :ARG1 (c16-1 / job)
                    :ARG1-of (c16-9 / instead-of-91
                                    :ARG2 c16-8)))

# ::snt yup more private citizens carrying will end the problem quicker than the U.S. court system
# ::tokens ["yup", "more", "private", "citizens", "carrying", "will", "end", "the", "problem", "quicker", "than", "the", "U.S.", "court", "system"]
# ::lemmas ["yup", "more", "private", "citizen", "carry", "will", "end", "the", "problem", "quick", "than", "the", "U.S.", "court", "system"]
(c18-3 / end-01
       :ARG0 (c18-8 / carry-01
                    :ARG0 (c18-7 / citizen
                                 :ARG1-of (c18-6 / private-03)
                                 :quant (c18-2 / more))
                    :mod (c18-1 / yup))
       :ARG1 (c18-11 / problem)
       :manner (c18-4 / quick-02
                      :ARG2-of (c18-0 / have-degree-91
                                      :ARG1 c18-3
                                      :ARG3 c18-2)
                      :ARG4 (c18-10 / system
                                    :mod (c18-9 / court)
                                    :mod (c18-12 / country
                                                 :name (c18-5 / name
                                                              :op1 "U.S.")))))

# ::snt ": VIDEO: Police storm cafe in Sydney. ://
# ::tokens ["\"", ":", "VIDEO", ":", "Police", "storm", "cafe", "in", "Sydney", ".", ":", "//"]
# ::lemmas ["\"", ":", "video", ":", "police", "storm", "cafe", "in", "Sydney", ".", ":", "//"]
(c19-5 / storm-02
       :ARG0 (c19-2 / police)
       :ARG1 (c19-4 / cafe
                    :location (c19-3 / city
                                     :name (c19-0 / name
                                                  :op1 "Sydney")))
       :medium (c19-1 / video))

# ::snt one round, one down. situation over.
# ::tokens ["one", "round", ",", "one", "down", ".", "situation", "over", "."]
# ::lemmas ["one", "round", ",", "one", "down", ".", "situation", "over", "."]
(c20-0 / multi-sentence
       :snt1 (c20-3 / round-05
                    :quant 1)
       :snt2 (c20-2 / down-03
                    :quant 1)
       :snt3 (c20-1 / over-01
                    :ARG1 (c20-4 / situation)))
