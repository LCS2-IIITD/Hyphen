# ::snt no s estrany q no hi hagus comunicaci per part del pilot. Primer controlar avi i desprs quan es pot comunicar.
# ::tokens ["no", "s", "estrany", "q", "no", "hi", "hagus", "comunicaci", "per", "part", "del", "pilot", ".", "Primer", "controlar", "avi", "i", "desprs", "quan", "es", "pot", "comunicar", "."]
# ::lemmas ["no", "s", "estrany", "q", "no", "hi", "hagus", "comunicaci", "per", "part", "del", "pilot", ".", "primer", "controlar", "avi", "i", "desprs", "quan", "es", "pot", "comunicar", "."]
(c1-2 / multi-sentence
      :snt1 (c1-0 / have-polarity-91
                  :ARG1-of (c1-10 / cause-01
                                  :ARG0 (c1-7 / inform-01
                                              :ARG1-of (c1-9 / request-confirmation-91)))
                  :snt2-of c1-2
                  :ARG2 -)
      :ARG1-of (c1-11 / cause-01
                      :ARG0 (c1-12 / inform-01
                                   :ARG1-of (c1-8 / possible-01)))
      :ARG1-of (c1-13 / cause-01
                      :ARG0 (c1-1 / inform-01
                                  :ARG1-of (c1-16 / possible-01)))
      :snt3 (c1-17 / control-01
                   :ARG0 (c1-4 / person
                               :ARG0-of (c1-15 / pilot-01))
                   :mod (c1-6 / primer)
                   :ARG1-of (c1-3 / cause-01
                                  :ARG0 (c1-14 / possible-01
                                               :ARG1 (c1-5 / inform-01
                                                           :ARG1 c1-4)
                                               :polarity -)))
      :ARG2 -)

# ::snt t'anava a preguntar si ho sabies o cunyadejaves (com feia jo), per ja he vist la bio. Merci
# ::tokens ["t'anava", "a", "preguntar", "si", "ho", "sabies", "o", "cunyadejaves", "(", "com", "feia", "jo", ")", ",", "per", "ja", "he", "vist", "la", "bio", ".", "Merci"]
# ::lemmas ["t'anava", "a", "preguntar", "si", "ho", "sabie", "o", "cunyadejave", "(", "com", "feia", "jo", ")", ",", "per", "ja", "he", "vist", "la", "bio", ".", "merci"]
(c2-0 / multi-sentence
      :snt1 (c2-5 / si-sentence
                  :snt2 (c2-3 / person
                              :name (c2-12 / name
                                           :op1 "Merci"))
                  :snt1 (c2-2 / vist-01
                              :ARG0 (c2-6 / person
                                          :name (c2-17 / name
                                                       :op1 "T'anava"))
                              :ARG1 (c2-9 / bio)
                              :polarity (c2-7 / amr-unknown)
                              :mod (c2-8 / preguntar))
                  :snt3 (c2-18 / cause-01
                               :ARG0 (c2-14 / person
                                            :name (c2-1 / name
                                                        :op1 "Cunyadejaves")
                                            :ARG1-of (c2-13 / mean-01
                                                            :ARG2 (c2-11 / say-01
                                                                         :ARG0 (c2-15 / i)
                                                                         :ARG2 (c2-10 / person
                                                                                      :name (c2-4 / name
                                                                                                  :op1 "Fia"
                                                                                                  :op2 " jo")))))
                               :ARG1 (c2-16 / sabie))))

# ::snt conec el P-A-S per diria que aqu no aplica, ho pot fer a la vegada
# ::tokens ["conec", "el", "P", "-", "A", "-", "S", "per", "diria", "que", "aqu", "no", "aplica", ",", "ho", "pot", "fer", "a", "la", "vegada"]
# ::lemmas ["conec", "el", "P", "-", "A", "-", "S", "per", "diria", "que", "aqu", "no", "aplica", ",", "ho", "pot", "fer", "a", "la", "vegada"]
(c3-9 / say-01
      :ARG0 (c3-4 / i)
      :ARG1 (c3-0 / have-concession-91
                  :ARG1 (c3-6 / pot-02
                              :ARG0 (c3-1 / you)
                              :mod (c3-2 / fer
                                         :op1 (c3-5 / vegada))
                              :mode imperative)
                  :ARG2 (c3-12 / have-03
                               :ARG0 c3-1
                               :ARG1 (c3-3 / string-entity
                                           :value "P-A-S")))
      :ARG2 (c3-7 / diria
                  :ARG1-of (c3-8 / cause-01
                                 :ARG0 (c3-11 / possible-01
                                              :ARG1 (c3-10 / aplica)
                                              :polarity -))))
