# ::snt but also doesn't narrative of sweet gentle giant who the big bad police murdered
# ::tokens ["but", "also", "does", "n't", "narrative", "of", "sweet", "gentle", "giant", "who", "the", "big", "bad", "police", "murdered"]
# ::lemmas ["but", "also", "do", "not", "narrative", "of", "sweet", "gentle", "giant", "who", "the", "big", "bad", "police", "murder"]
(c1-5 / contrast-01
      :ARG2 (c1-2 / narrate-01
                  :ARG1 (c1-6 / giant
                              :ARG1-of (c1-8 / sweet-03)
                              :ARG1-of (c1-4 / gentle-01)
                              :ARG1-of (c1-0 / murder-01
                                             :ARG0 (c1-3 / police
                                                         :mod (c1-1 / big)
                                                         :ARG1-of (c1-7 / bad-07))))
                  :mod (c1-9 / also)
                  :polarity -))

# ::snt Now black "leaders" are saying "they" are smearing Brown's name even w a video. Circus over ppl.
# ::tokens ["Now", "black", "\"", "leaders", "\"", "are", "saying", "\"", "they", "\"", "are", "smearing", "Brown", "'s", "name", "even", "w", "a", "video", ".", "Circus", "over", "ppl", "."]
# ::lemmas ["now", "black", "\"", "leader", "\"", "be", "say", "\"", "they", "\"", "be", "smear", "Brown", "'s", "name", "even", "w", "a", "video", ".", "circus", "over", "ppl", "."]
(c2-1 / multi-sentence
      :snt1 (c2-12 / say-01
                   :ARG0 (c2-8 / person
                               :ARG0-of (c2-0 / lead-02)
                               :ARG1-of (c2-3 / black-05))
                   :ARG1 (c2-4 / smear-02
                               :ARG0 (c2-13 / they)
                               :ARG1 (c2-6 / name
                                           :poss (c2-14 / person
                                                        :name (c2-7 / name
                                                                    :op1 "Brown")))
                               :manner (c2-9 / video)
                               :mod (c2-5 / even))
                   :time (c2-10 / now))
      :snt2 (c2-2 / festival
                  :name (c2-11 / name
                               :op1 "Circus"
                               :op2 "over"
                               :op3 "pl")))

# ::snt Assault and theft. Guilty. Doesn't justify being killed except in some countries. We need the police report.
# ::tokens ["Assault", "and", "theft", ".", "Guilty", ".", "Does", "n't", "justify", "being", "killed", "except", "in", "some", "countries", ".", "We", "need", "the", "police", "report", "."]
# ::lemmas ["assault", "and", "theft", ".", "guilty", ".", "do", "not", "justify", "be", "kill", "except", "in", "some", "country", ".", "we", "need", "the", "police", "report", "."]
(c3-2 / multi-sentence
      :snt1 (c3-13 / and
                   :op1 (c3-5 / assault-01)
                   :op2 (c3-11 / steal-01))
      :snt2 (c3-10 / guilty-01)
      :snt3 (c3-0 / justify-01
                  :ARG1 (c3-12 / kill-01)
                  :ARG2-of (c3-3 / except-01
                                 :ARG1 (c3-9 / country
                                             :quant (c3-4 / some)))
                  :polarity -)
      :snt4 (c3-6 / need-01
                  :ARG0 (c3-1 / we)
                  :ARG1 (c3-8 / report-01
                              :ARG0 (c3-7 / police))))

# ::snt because they don't think he counts. He's not a real minority
# ::tokens ["because", "they", "do", "n't", "think", "he", "counts", ".", "He", "'s", "not", "a", "real", "minority"]
# ::lemmas ["because", "they", "do", "not", "think", "he", "count", ".", "he", "be", "not", "a", "real", "minority"]
(c4-1 / multi-sentence
      :snt1 (c4-4 / cause-01
                  :ARG0 (c4-7 / think-01
                              :ARG0 (c4-6 / they)
                              :ARG1 (c4-3 / count-04
                                          :ARG1 (c4-0 / he))
                              :polarity -))
      :snt2 (c4-2 / minority
                  :ARG1-of (c4-5 / real-04)
                  :domain (c4-8 / he)
                  :polarity -))

# ::snt double negative?
# ::tokens ["double", "negative", "?"]
# ::lemmas ["double", "negative", "?"]
(c5-0 / negative-03
      :polarity (c5-2 / amr-unknown)
      :ARG1-of (c5-1 / double-01))

# ::snt because the scum making this incident into something it's not want to show Brown as a church boy
# ::tokens ["because", "the", "scum", "making", "this", "incident", "into", "something", "it", "'s", "not", "want", "to", "show", "Brown", "as", "a", "church", "boy"]
# ::lemmas ["because", "the", "scum", "make", "this", "incident", "into", "something", "it", "be", "not", "want", "to", "show", "Brown", "as", "a", "church", "boy"]
(c6-9 / cause-01
      :ARG0 (c6-2 / make-02
                  :ARG0 (c6-10 / scum)
                  :ARG1 (c6-5 / incident
                              :mod (c6-11 / this))
                  :ARG2 (c6-4 / something))
      :ARG1 (c6-0 / want-01
                  :ARG0 c6-10
                  :ARG1 (c6-1 / show-01
                              :ARG0 c6-10
                              :ARG1 (c6-7 / person
                                          :name (c6-6 / name
                                                      :op1 "Brown")
                                          :mod (c6-3 / boy
                                                     :mod (c6-8 / church))))
                  :polarity -))

# ::snt Even if he didn't "steal nothing" he clearly assaulted the man, quite violently. No reasonable person condones.
# ::tokens ["Even", "if", "he", "did", "n't", "\"", "steal", "nothing", "\"", "he", "clearly", "assaulted", "the", "man", ",", "quite", "violently", ".", "No", "reasonable", "person", "condones", "."]
# ::lemmas ["even", "if", "he", "do", "not", "\"", "steal", "nothing", "\"", "he", "clearly", "assault", "the", "man", ",", "quite", "violently", ".", "no", "reasonable", "person", "condone", "."]
(c7-1 / multi-sentence
      :snt1 (c7-12 / assault-01
                   :ARG0 (c7-0 / he)
                   :ARG1 (c7-6 / man)
                   :ARG1-of (c7-8 / clear-06)
                   :manner (c7-5 / violent
                                 :degree (c7-3 / quite))
                   :concession (c7-2 / even-if
                                     :op1 (c7-11 / steal-01
                                                 :ARG0 c7-0
                                                 :ARG1 (c7-4 / anything)
                                                 :polarity -)))
      :snt2 (c7-7 / condones-01
                  :ARG0 (c7-9 / person
                              :ARG1-of (c7-10 / reasonable-02)
                              :polarity -)))

# ::snt I want to apologists claim it was a friendly gesture &amp; Michael brown deserves a memorial all over TV.Truth must!
# ::tokens ["I", "want", "to", "apologists", "claim", "it", "was", "a", "friendly", "gesture", "&", "amp", ";", "Michael", "brown", "deserves", "a", "memorial", "all", "over", "TV.Truth", "must", "!"]
# ::lemmas ["i", "want", "to", "apologist", "claim", "it", "be", "a", "friendly", "gesture", "&", "amp", ";", "Michael", "brown", "deserve", "a", "memorial", "all", "over", "tv.truth", "must", "!"]
(c8-2 / multi-sentence
      :snt1 (c8-0 / want-01
                  :ARG0 (c8-4 / i)
                  :ARG1 (c8-8 / claim-01
                              :ARG0 c8-4
                              :ARG1 (c8-9 / gesture-01
                                          :ARG1-of (c8-1 / friendly-01)
                                          :domain (c8-10 / it))))
      :snt2 (c8-7 / deserve-01
                  :ARG0 (c8-6 / person
                              :name (c8-5 / name
                                          :op1 "Michael"
                                          :op2 "Brown"))
                  :ARG1 (c8-11 / memorial
                               :location (c8-14 / all-over
                                                :op1 (c8-13 / television))))
      :snt3 (c8-3 / obligate-01
                  :ARG1 (c8-12 / truth)))

# ::snt What do u mean "he didn't steal" ? The real Brown guy told /11 he was robbed and when he asked them to pay, they shoved him.
# ::tokens ["What", "do", "u", "mean", "\"", "he", "did", "n't", "steal", "\"", "?", "The", "real", "Brown", "guy", "told", "/11", "he", "was", "robbed", "and", "when", "he", "asked", "them", "to", "pay", ",", "they", "shoved", "him", "."]
# ::lemmas ["what", "do", "u", "mean", "\"", "he", "do", "not", "steal", "\"", "?", "the", "real", "Brown", "guy", "tell", "/11", "he", "be", "rob", "and", "when", "he", "ask", "they", "to", "pay", ",", "they", "shove", "he", "."]
(c9-3 / multi-sentence
      :snt1 (c9-9 / mean-01
                  :ARG0 (c9-1 / you)
                  :ARG1 (c9-14 / steal-01
                               :ARG0 (c9-0 / he)
                               :polarity -)
                  :ARG2 (c9-17 / amr-unknown))
      :snt2 (c9-15 / tell-01
                   :ARG0 (c9-12 / guy
                                :ARG1-of (c9-10 / real-04)
                                :mod (c9-11 / person
                                            :name (c9-7 / name
                                                        :op1 "Brown")))
                   :ARG1 (c9-5 / and
                               :op1 (c9-6 / rob-01
                                          :ARG1 c9-12)
                               :op2 (c9-4 / shove-01
                                          :ARG0 c9-12
                                          :ARG1 (c9-2 / he)
                                          :time (c9-8 / ask-02
                                                      :ARG0 c9-12
                                                      :ARG1 (c9-16 / pay-01
                                                                   :ARG0 c9-12)
                                                      :ARG2 c9-12)))
                   :time (c9-13 / date-entity
                                :month 11)))

# ::snt Mikey was expressing love and gratitude to the store owner for letting him steal. Peace love harmony
# ::tokens ["Mikey", "was", "expressing", "love", "and", "gratitude", "to", "the", "store", "owner", "for", "letting", "him", "steal", ".", "Peace", "love", "harmony"]
# ::lemmas ["Mikey", "be", "express", "love", "and", "gratitude", "to", "the", "store", "owner", "for", "let", "he", "steal", ".", "peace", "love", "harmony"]
(c10-3 / multi-sentence
       :snt1 (c10-6 / express-01
                    :ARG0 (c10-9 / person
                                 :name (c10-8 / name
                                              :op1 "Mikey"))
                    :ARG1 (c10-14 / and
                                  :op1 (c10-2 / love-01)
                                  :op2 (c10-10 / gratitude))
                    :ARG2 (c10-13 / person
                                  :ARG0-of (c10-5 / own-01
                                                  :ARG1 (c10-12 / store)))
                    :ARG3 (c10-11 / let-01
                                  :ARG0 c10-13
                                  :ARG1 (c10-7 / steal-01
                                               :ARG0 c10-13)))
       :snt2 (c10-0 / harmony
                    :mod (c10-4 / peace)
                    :mod (c10-1 / love-01)))

# ::snt Leave your racism in Canada , or better yet leave it at home.
# ::tokens ["Leave", "your", "racism", "in", "Canada", ",", "or", "better", "yet", "leave", "it", "at", "home", "."]
# ::lemmas ["leave", "your", "racism", "in", "Canada", ",", "or", "well", "yet", "leave", "it", "at", "home", "."]
(c11-4 / or
       :op1 (c11-2 / leave-15
                   :ARG0 (c11-1 / you)
                   :ARG1 (c11-6 / racism
                                :poss c11-1)
                   :ARG2 (c11-7 / country
                                :name (c11-5 / name
                                             :op1 "Canada"))
                   :mode imperative)
       :op2 (c11-9 / leave-15
                   :ARG0 c11-1
                   :ARG1 c11-6
                   :ARG2 (c11-0 / home)
                   :mod (c11-11 / yet)
                   :ARG1-of (c11-10 / have-degree-91
                                    :ARG2 (c11-8 / good-02
                                                 :ARG1 c11-9)
                                    :ARG3 (c11-3 / more))
                   :mode imperative))

# ::snt Excellent point. Possible answers: . Didn't fit with the "victim of police narrative. . Reporters just re-report others
# ::tokens ["Excellent", "point", ".", "Possible", "answers", ":", ".", "Did", "n't", "fit", "with", "the", "\"", "victim", "of", "police", "narrative", ".", ".", "Reporters", "just", "re", "-", "report", "others"]
# ::lemmas ["excellent", "point", ".", "possible", "answer", ":", ".", "do", "not", "fit", "with", "the", "\"", "victim", "of", "police", "narrative", ".", ".", "reporter", "just", "re", "-", "report", "other"]
(c12-2 / multi-sentence
       :snt1 (c12-10 / point-04
                     :ARG1-of (c12-6 / excellent-02))
       :snt2 (c12-13 / possible-01
                     :ARG1 (c12-14 / answer-01
                                   :ARG2 (c12-7 / and
                                                :op1 (c12-1 / fit-06
                                                            :ARG2 (c12-9 / victim
                                                                         :part-of (c12-8 / narrate-01
                                                                                         :ARG0 (c12-3 / police)))
                                                            :polarity -)
                                                :op2 (c12-11 / report-01
                                                             :ARG0 (c12-12 / person
                                                                           :ARG0-of c12-11))
                                                :ARG1 (c12-5 / person
                                                             :mod (c12-4 / other))
                                                :mod (c12-0 / just)))))

# ::snt If this is the only thing he did,his death is unfortunate &amp; family shud get justice.BIG "IF" as if now
# ::tokens ["If", "this", "is", "the", "only", "thing", "he", "did", ",", "his", "death", "is", "unfortunate", "&", "amp", ";", "family", "shud", "get", "justice", ".", "BIG", "\"", "IF", "\"", "as", "if", "now"]
# ::lemmas ["if", "this", "be", "the", "only", "thing", "he", "do", ",", "his", "death", "be", "unfortunate", "&", "amp", ";", "family", "shud", "get", "justice", ".", "big", "\"", "if", "\"", "as", "if", "now"]
(c13-4 / multi-sentence
       :snt1 (c13-14 / and
                     :op1 (c13-3 / fortunate-01
                                 :ARG2 (c13-9 / die-01
                                              :ARG1 (c13-0 / he))
                                 :polarity -)
                     :op2 (c13-11 / get-01
                                  :ARG0 (c13-7 / family)
                                  :ARG1 (c13-1 / justice))
                     :condition (c13-13 / thing
                                        :mod (c13-5 / only)
                                        :ARG1-of (c13-2 / do-02
                                                        :ARG0 c13-0)
                                        :domain (c13-12 / this)))
       :snt2 c13-11
       :ARG0 c13-7
       :ARG1 c13-1
       :mod (c13-6 / if)
       :ARG1-of (c13-10 / resemble-01
                        :ARG2 (c13-8 / now))
       :polarity -)

# ::snt take your crap back to your muslim homeland and it isn't Canada
# ::tokens ["take", "your", "crap", "back", "to", "your", "muslim", "homeland", "and", "it", "is", "n't", "Canada"]
# ::lemmas ["take", "your", "crap", "back", "to", "your", "muslim", "homeland", "and", "it", "be", "not", "Canada"]
(c14-9 / and
       :op1 (c14-8 / take-01
                   :ARG0 (c14-1 / you)
                   :ARG1 (c14-6 / crap-01
                                :ARG0 c14-1)
                   :ARG3 (c14-0 / homeland
                                :mod (c14-5 / religious-group
                                            :name (c14-3 / name
                                                         :op1 "Muslim"))
                                :poss c14-1)
                   :direction (c14-2 / back)
                   :mode imperative)
       :op2 (c14-7 / country
                   :name (c14-4 / name
                                :op1 "Canada")
                   :polarity -))

# ::snt They did, he said he hadn't been robbed.
# ::tokens ["They", "did", ",", "he", "said", "he", "had", "n't", "been", "robbed", "."]
# ::lemmas ["they", "do", ",", "he", "say", "he", "have", "not", "be", "rob", "."]
(c15-5 / and
       :op1 (c15-1 / event
                   :mod (c15-4 / they))
       :op2 (c15-3 / say-01
                   :ARG0 (c15-0 / he)
                   :ARG1 (c15-2 / rob-01
                                :ARG1 c15-0
                                :polarity -)))

# ::snt they did he said he didn't steal nothing
# ::tokens ["they", "did", "he", "said", "he", "did", "n't", "steal", "nothing"]
# ::lemmas ["they", "do", "he", "say", "he", "do", "not", "steal", "nothing"]
(c16-1 / multi-sentence
       :snt1 (c16-2 / event
                    :mod (c16-5 / they))
       :snt2 (c16-4 / say-01
                    :ARG0 (c16-0 / he)
                    :ARG1 (c16-3 / steal-01
                                 :ARG0 c16-0
                                 :ARG1 (c16-6 / anything)
                                 :polarity -)))

# ::snt because he fears for his life, can you blame him?
# ::tokens ["because", "he", "fears", "for", "his", "life", ",", "can", "you", "blame", "him", "?"]
# ::lemmas ["because", "he", "fear", "for", "his", "life", ",", "can", "you", "blame", "he", "?"]
(c17-5 / possible-01
       :ARG1 (c17-4 / blame-01
                    :ARG0 (c17-1 / you)
                    :ARG1 (c17-0 / he))
       :polarity (c17-7 / amr-unknown)
       :ARG1-of (c17-6 / cause-01
                       :ARG0 (c17-2 / fear-01
                                    :ARG0 c17-0
                                    :ARG2 (c17-3 / life
                                                 :poss c17-0))))

# ::snt agitators have to quickly meet to revise narrative. So once upon a time...
# ::tokens ["agitators", "have", "to", "quickly", "meet", "to", "revise", "narrative", ".", "So", "once", "upon", "a", "time", "..."]
# ::lemmas ["agitator", "have", "to", "quickly", "meet", "to", "revise", "narrative", ".", "so", "once", "upon", "a", "time", "..."]
(c18-1 / multi-sentence
       :snt1 (c18-2 / obligate-01
                    :ARG1 (c18-5 / person
                                 :ARG0-of (c18-9 / advocate-01))
                    :ARG2 (c18-6 / meet-03
                                 :ARG0 c18-5
                                 :purpose (c18-7 / revise-01
                                                 :ARG0 c18-5
                                                 :ARG1 (c18-4 / narrate-01))
                                 :ARG1-of (c18-3 / quick-02)))
       :snt2 (c18-8 / cause-01
                    :ARG1 (c18-0 / once-upon-a-time)))

# ::snt I would bet he feels a little safer today with another criminal off the streets! Wow!
# ::tokens ["I", "would", "bet", "he", "feels", "a", "little", "safer", "today", "with", "another", "criminal", "off", "the", "streets", "!", "Wow", "!"]
# ::lemmas ["i", "would", "bet", "he", "feel", "a", "little", "safe", "today", "with", "another", "criminal", "off", "the", "street", "!", "wow", "!"]
(c19-3 / multi-sentence
       :snt1 (c19-6 / bet-01
                    :ARG0 (c19-9 / i)
                    :ARG2 (c19-2 / feel-01
                                 :ARG0 (c19-0 / he)
                                 :ARG1 (c19-13 / safe-01
                                               :ARG0 (c19-10 / person
                                                             :ARG2-of (c19-12 / criminal-03)
                                                             :mod (c19-15 / another)
                                                             :location (c19-7 / off
                                                                              :op1 (c19-8 / street)))
                                               :ARG2-of (c19-4 / have-degree-91
                                                               :ARG1 c19-0
                                                               :ARG3 (c19-11 / more
                                                                             :quant (c19-5 / little))))
                                 :time (c19-14 / today)))
       :snt2 (c19-1 / wow-01
                    :mode expressive))

# ::snt poor guy probably doesn't want to be lynched if heaven forbid he calls the deceased a criminal.
# ::tokens ["poor", "guy", "probably", "does", "n't", "want", "to", "be", "lynched", "if", "heaven", "forbid", "he", "calls", "the", "deceased", "a", "criminal", "."]
# ::lemmas ["poor", "guy", "probably", "do", "not", "want", "to", "be", "lynch", "if", "heaven", "forbid", "he", "call", "the", "deceased", "a", "criminal", "."]
(c20-1 / want-01
       :ARG0 (c20-8 / guy
                    :mod (c20-5 / poor))
       :ARG1 (c20-2 / lynch-01
                    :ARG1 c20-8)
       :mod (c20-10 / probable)
       :condition (c20-7 / call-01
                         :ARG0 c20-8
                         :ARG1 (c20-4 / person
                                      :ARG1-of (c20-6 / decease-01))
                         :ARG2 (c20-9 / criminal-03)
                         :ARG1-of (c20-3 / forbid-01
                                         :ARG0 (c20-0 / heaven)))
       :polarity -)

# ::snt He's probably afraid of his store being looted and burned. Fear of unknown.
# ::tokens ["He", "'s", "probably", "afraid", "of", "his", "store", "being", "looted", "and", "burned", ".", "Fear", "of", "unknown", "."]
# ::lemmas ["he", "be", "probably", "afraid", "of", "his", "store", "be", "loot", "and", "burn", ".", "fear", "of", "unknown", "."]
(c21-2 / multi-sentence
       :snt1 (c21-1 / fear-01
                    :ARG0 (c21-0 / he)
                    :ARG1 (c21-10 / and
                                  :op1 (c21-3 / loot-01
                                              :ARG1 (c21-8 / store
                                                           :poss (c21-4 / he)))
                                  :op2 (c21-5 / burn-01
                                              :ARG1 c21-8))
                    :mod (c21-7 / probable))
       :snt2 (c21-6 / fear-01
                    :ARG1 (c21-9 / know-01
                                 :polarity -)))
