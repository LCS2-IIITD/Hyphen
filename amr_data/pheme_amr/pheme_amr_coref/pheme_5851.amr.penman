# ::snt thanks for that but we all can within our own ability &amp; community aspire to be &amp; act accordingly &amp; that's why
# ::tokens ["thanks", "for", "that", "but", "we", "all", "can", "within", "our", "own", "ability", "&", "amp", ";", "community", "aspire", "to", "be", "&", "amp", ";", "act", "accordingly", "&", "amp", ";", "that", "'s", "why"]
# ::lemmas ["thank", "for", "that", "but", "we", "all", "can", "within", "our", "own", "ability", "&", "amp", ";", "community", "aspire", "to", "be", "&", "amp", ";", "act", "accordingly", "&", "amp", ";", "that", "be", "why"]
(c1-2 / multi-sentence
      :snt1 (c1-16 / thank-01
                   :ARG0 (c1-7 / i)
                   :ARG1 (c1-0 / you)
                   :ARG2 (c1-13 / that))
      :snt2 (c1-9 / possible-01
                  :ARG1 (c1-17 / and
                               :op1 (c1-6 / and
                                          :op1 (c1-11 / capable-01
                                                      :ARG1 (c1-1 / we
                                                                  :mod (c1-8 / all)))
                                          :op2 (c1-15 / aspire-01
                                                      :ARG0 (c1-10 / community)
                                                      :ARG1 c1-6)
                                          :op3 (c1-4 / act-01
                                                     :ARG0 c1-10
                                                     :manner (c1-3 / accordingly))))
                  :op2 (c1-5 / et-cetera))
      :snt3 (c1-14 / cause-01
                   :ARG0 (c1-12 / that)))

# ::snt so very true
# ::tokens ["so", "very", "true"]
# ::lemmas ["so", "very", "true"]
(c2-2 / true-01
      :degree (c2-1 / very
                    :degree (c2-0 / so)))

# ::snt business first then pleasure... AND UNTIL I WIN.. IT'S ALL FUCKING BUSINESS.
# ::tokens ["business", "first", "then", "pleasure", "...", "AND", "UNTIL", "I", "WIN", "..", "IT", "'S", "ALL", "FUCKING", "BUSINESS", "."]
# ::lemmas ["business", "first", "then", "pleasure", "...", "and", "until", "i", "WIN", "..", "it", "be", "all", "FUCKING", "BUSINESS", "."]
(c3-2 / multi-sentence
      :snt1 (c3-11 / and
                   :op1 (c3-3 / business
                              :ord (c3-4 / ordinal-entity
                                         :value 1)
                              :time (c3-10 / then
                                           :op1 (c3-7 / pleasure)))
                   :op2 (c3-0 / win-01
                              :ARG0 (c3-6 / i)))
      :snt2 (c3-8 / business
                  :mod (c3-5 / all)
                  :mod (c3-1 / fucking)
                  :domain (c3-9 / it)))

# ::snt I thought the article was aimed at folk like AP for self censorship, leaving CH exposed
# ::tokens ["I", "thought", "the", "article", "was", "aimed", "at", "folk", "like", "AP", "for", "self", "censorship", ",", "leaving", "CH", "exposed"]
# ::lemmas ["i", "think", "the", "article", "be", "aim", "at", "folk", "like", "AP", "for", "self", "censorship", ",", "leave", "CH", "expose"]
(c4-10 / think-01
       :ARG0 (c4-4 / i)
       :ARG1 (c4-12 / aim-02
                    :ARG1 (c4-3 / article)
                    :ARG2 (c4-0 / folk
                                :example (c4-7 / publication
                                               :name (c4-5 / name
                                                           :op1 "AP")))
                    :ARG1-of (c4-9 / cause-01
                                   :ARG0 (c4-8 / censor-01
                                               :ARG0 c4-0
                                               :ARG1 c4-0))
                    :ARG0-of (c4-1 / leave-13
                                   :ARG1 (c4-2 / expose-01
                                               :ARG1 (c4-11 / person
                                                            :name (c4-6 / name
                                                                        :op1 "CH"))))))

# ::snt IT CERTAINLY EXPLAINS ONES THROBBING APPENDAGE FUCKING SADLY.
# ::tokens ["IT", "CERTAINLY", "EXPLAINS", "ONES", "THROBBING", "APPENDAGE", "FUCKING", "SADLY", "."]
# ::lemmas ["IT", "CERTAINLY", "explain", "ONES", "THROBBING", "APPENDAGE", "FUCKING", "SADLY", "."]
(c5-2 / elaborate-01
      :ARG0 (c5-3 / it)
      :ARG1 (c5-1 / offer-01
                  :ARG1 (c5-5 / product
                              :name (c5-4 / name
                                          :op1 "Appendage"))
                  :mod (c5-0 / fucking
                             :mode expressive))
      :manner (c5-6 / constant))

# ::snt all i have to do is hit a target am close... i can smell it...
# ::tokens ["all", "i", "have", "to", "do", "is", "hit", "a", "target", "am", "close", "...", "i", "can", "smell", "it", "..."]
# ::lemmas ["all", "i", "have", "to", "do", "be", "hit", "a", "target", "be", "close", "...", "i", "can", "smell", "it", "..."]
(c6-10 / and
       :op1 (c6-9 / thing
                  :mod (c6-2 / all)
                  :ARG1-of (c6-5 / do-02
                                 :ARG0 (c6-3 / i)
                                 :ARG2-of (c6-1 / obligate-01))
                  :domain (c6-0 / hit-01
                                :ARG0 c6-3
                                :ARG1 (c6-7 / target
                                            :ARG1-of (c6-6 / close-10))))
       :op2 (c6-4 / possible-01
                  :ARG1 (c6-8 / smell-01
                              :ARG0 c6-3
                              :ARG1 c6-7)))

# ::snt ..&amp; after the worldwide demos of solidarity I suspect crowds cld be targets after future terrorist action..
# ::tokens ["..", "&", "amp", ";", "after", "the", "worldwide", "demos", "of", "solidarity", "I", "suspect", "crowds", "cld", "be", "targets", "after", "future", "terrorist", "action", ".."]
# ::lemmas ["..", "&", "amp", ";", "after", "the", "worldwide", "demo", "of", "solidarity", "i", "suspect", "crowd", "cld", "be", "target", "after", "future", "terrorist", "action", ".."]
(c7-12 / and
       :op2 (c7-9 / suspect-01
                  :ARG0 (c7-4 / i)
                  :ARG1 (c7-11 / target-01
                               :ARG1 (c7-7 / crowd)
                               :time (c7-3 / after
                                           :op1 (c7-5 / act-02
                                                      :ARG0 (c7-8 / terrorist)
                                                      :time (c7-1 / future))))
                  :time (c7-10 / after
                               :op1 (c7-6 / demonstrate-01
                                          :ARG1 (c7-2 / solidarity)
                                          :mod (c7-0 / worldwide)))))

# ::snt Great article.
# ::tokens ["Great", "article", "."]
# ::lemmas ["great", "article", "."]
(c8-1 / article
      :mod (c8-0 / great))

# ::snt ..that all UK newspaper editors should be forced read given there aint aset of balls btween them
# ::tokens ["..", "that", "all", "UK", "newspaper", "editors", "should", "be", "forced", "read", "given", "there", "ai", "nt", "aset", "of", "balls", "btween", "them"]
# ::lemmas ["..", "that", "all", "UK", "newspaper", "editor", "should", "be", "force", "read", "give", "there", "be", "nt", "aset", "of", "ball", "btween", "they"]
(c9-7 / recommend-01
      :ARG1 (c9-4 / read-01
                  :ARG1 (c9-2 / editor
                              :mod (c9-5 / newspaper)
                              :mod (c9-8 / country
                                         :name (c9-6 / name
                                                     :op1 "UK"))
                              :mod (c9-11 / all))
                  :ARG2-of (c9-0 / force-01))
      :ARG1-of (c9-9 / cause-01
                     :ARG0 (c9-3 / aset
                                 :mod (c9-1 / ball)
                                 :prep-ween (c9-10 / they)
                                 :polarity -)))

# ::snt I read that article &amp; currently re-aquainting myself with your book. Remember watching Ch4 series yrs ago.
# ::tokens ["I", "read", "that", "article", "&", "amp", ";", "currently", "re", "-", "aquainting", "myself", "with", "your", "book", ".", "Remember", "watching", "Ch4", "series", "yrs", "ago", "."]
# ::lemmas ["i", "read", "that", "article", "&", "amp", ";", "currently", "re", "-", "aquainte", "myself", "with", "your", "book", ".", "remember", "watch", "Ch4", "series", "yrs", "ago", "."]
(c10-0 / multi-sentence
       :snt1 (c10-3 / and
                    :op1 (c10-7 / read-01
                                :ARG0 (c10-10 / i)
                                :ARG1 (c10-9 / article
                                             :mod (c10-19 / that)))
                    :op2 (c10-16 / consult-01
                                 :ARG0 c10-10
                                 :ARG1 (c10-4 / book
                                              :poss (c10-14 / you))
                                 :mod (c10-6 / again)
                                 :time (c10-2 / current)))
       :snt2 (c10-1 / remember-01
                    :ARG0 (c10-12 / i)
                    :ARG1 (c10-8 / watch-01
                                 :ARG0 c10-12
                                 :ARG1 (c10-11 / broadcast-program
                                               :name (c10-5 / name
                                                            :op1 "Ch4"))
                                 :time (c10-18 / before
                                               :op1 (c10-15 / now)
                                               :quant (c10-17 / temporal-quantity
                                                              :unit (c10-13 / year)
                                                              :quant 1)))))

# ::snt Not trying to be argumentative btw.. but the Victoria letterbox/Ideal Homes &amp; Docklands bombs missed me by hr, min, hr..
# ::tokens ["Not", "trying", "to", "be", "argumentative", "btw", "..", "but", "the", "Victoria", "letterbox", "/", "Ideal", "Homes", "&", "amp", ";", "Docklands", "bombs", "missed", "me", "by", "hr", ",", "min", ",", "hr", ".."]
# ::lemmas ["not", "try", "to", "be", "argumentative", "btw", "..", "but", "the", "Victoria", "letterbox", "/", "Ideal", "Homes", "&", "amp", ";", "Docklands", "bomb", "miss", "i", "by", "hr", ",", "min", ",", "hr", ".."]
(c11-2 / multi-sentence
       :snt1 (c11-12 / try-01
                     :ARG0 (c11-6 / i)
                     :ARG1 (c11-13 / argue-01
                                   :ARG0 c11-6)
                     :mod (c11-4 / by-the-way)
                     :polarity -)
       :snt2 (c11-8 / miss-02
                    :ARG0 (c11-9 / bomb
                                 :mod (c11-10 / company
                                              :name (c11-7 / name
                                                           :op1 "Docklands")))
                    :ARG1 (c11-11 / i)
                    :manner (c11-5 / and
                                   :op1 (c11-0 / hr)
                                   :op2 (c11-1 / min)
                                   :op3 (c11-3 / hr))))

# ::snt perhaps we should aspire to be him instead
# ::tokens ["perhaps", "we", "should", "aspire", "to", "be", "him", "instead"]
# ::lemmas ["perhaps", "we", "should", "aspire", "to", "be", "he", "instead"]
(c12-4 / recommend-01
       :ARG1 (c12-5 / aspire-01
                    :ARG0 (c12-1 / we)
                    :ARG1 (c12-0 / he
                                 :domain c12-1)
                    :ARG1-of (c12-2 / instead-of-91))
       :ARG1-of (c12-3 / possible-01))

# ::snt Indeed. Just saw a Fox News journalist claim the title. Er, no.
# ::tokens ["Indeed", ".", "Just", "saw", "a", "Fox", "News", "journalist", "claim", "the", "title", ".", "Er", ",", "no", "."]
# ::lemmas ["indeed", ".", "just", "see", "a", "Fox", "News", "journalist", "claim", "the", "title", ".", "er", ",", "no", "."]
(c13-1 / multi-sentence
       :snt1 (c13-4 / indeed)
       :snt2 (c13-9 / see-01
                    :ARG0 (c13-8 / i)
                    :ARG1 (c13-7 / claim-01
                                 :ARG0 (c13-0 / journalist
                                              :mod (c13-2 / broadcast-program
                                                          :name (c13-5 / name
                                                                       :op1 "Fox"
                                                                       :op2 "News")))
                                 :ARG1 (c13-10 / title))
                    :time (c13-11 / just))
       :snt3 (c13-6 / no
                    :mod (c13-3 / er
                                :mode expressive)))

# ::snt brilliant article. Made me stop just hitting RT and made me reread.
# ::tokens ["brilliant", "article", ".", "Made", "me", "stop", "just", "hitting", "RT", "and", "made", "me", "reread", "."]
# ::lemmas ["brilliant", "article", ".", "make", "i", "stop", "just", "hit", "RT", "and", "make", "i", "reread", "."]
(c14-3 / multi-sentence
       :snt1 (c14-12 / article
                     :ARG0-of (c14-4 / brilliant-01))
       :snt2 (c14-5 / and
                    :op1 (c14-8 / make-02
                                :ARG1 (c14-11 / stop-01
                                              :ARG0 (c14-6 / i)
                                              :ARG1 (c14-0 / hit-02
                                                           :ARG0 c14-6
                                                           :ARG1 (c14-9 / publication
                                                                        :name (c14-7 / name
                                                                                     :op1 "RT"))
                                                           :mod (c14-1 / just))))
                    :op2 (c14-2 / make-02
                                :ARG1 (c14-10 / reread-01
                                              :ARG0 c14-6))))

# ::snt yes. sort of. but in extraordinary situations we sometimes don't need normality. though I sort of agree.
# ::tokens ["yes", ".", "sort", "of", ".", "but", "in", "extraordinary", "situations", "we", "sometimes", "do", "n't", "need", "normality", ".", "though", "I", "sort", "of", "agree", "."]
# ::lemmas ["yes", ".", "sort", "of", ".", "but", "in", "extraordinary", "situation", "we", "sometimes", "do", "not", "need", "normality", ".", "though", "i", "sort", "of", "agree", "."]
(c15-8 / contrast-01
       :ARG1 (c15-0 / yes
                    :degree (c15-9 / sort-of))
       :ARG2 (c15-6 / need-01
                    :ARG0 (c15-1 / we)
                    :ARG1 (c15-7 / normality)
                    :time (c15-3 / situation
                                 :mod (c15-4 / extraordinary))
                    :frequency (c15-2 / sometimes)
                    :concession (c15-10 / agree-01
                                        :ARG0 (c15-5 / i)
                                        :degree c15-9)
                    :polarity -))

# ::snt smells like victory to me
# ::tokens ["smells", "like", "victory", "to", "me"]
# ::lemmas ["smell", "like", "victory", "to", "i"]
(c16-0 / smell-02
       :ARG1 (c16-1 / win-01)
       :ARG2 (c16-2 / i))

# ::snt this is brilliant, cuts through all the self pitying sanctimonious crap on Twitter at the moment
# ::tokens ["this", "is", "brilliant", ",", "cuts", "through", "all", "the", "self", "pitying", "sanctimonious", "crap", "on", "Twitter", "at", "the", "moment"]
# ::lemmas ["this", "be", "brilliant", ",", "cut", "through", "all", "the", "self", "pity", "sanctimonious", "crap", "on", "Twitter", "at", "the", "moment"]
(c17-11 / and
        :op1 (c17-1 / brilliant-01
                    :ARG1 (c17-9 / this))
        :op2 (c17-7 / cut-through-05
                    :ARG0 c17-9
                    :ARG1 (c17-6 / crap
                                 :mod (c17-8 / sanctimonious)
                                 :mod (c17-3 / all)
                                 :ARG0-of (c17-5 / pity-01
                                                 :ARG1 (c17-2 / self))
                                 :medium (c17-10 / publication
                                                 :name (c17-4 / name
                                                              :op1 "Twitter")))
                    :time (c17-0 / moment)))

# ::snt well here's to your win being everyone's win
# ::tokens ["well", "here", "'s", "to", "your", "win", "being", "everyone", "'s", "win"]
# ::lemmas ["well", "here", "be", "to", "your", "win", "be", "everyone", "'s", "win"]
(c18-3 / be-located-at-91
       :ARG1 (c18-1 / win-01
                    :ARG0 (c18-2 / you))
       :ARG2 (c18-0 / here)
       :ARG1-of (c18-6 / cause-01
                       :ARG0 (c18-5 / win-01
                                    :ARG0 (c18-4 / everyone))))

# ::snt excellent read!
# ::tokens ["excellent", "read", "!"]
# ::lemmas ["excellent", "read", "!"]
(c19-2 / thing
       :ARG1-of (c19-1 / read-01)
       :ARG1-of (c19-0 / excellent-02))

# ::snt Going about your everyday life/not letting amoral thugs change behaviour IS as courageous, Mark..
# ::tokens ["Going", "about", "your", "everyday", "life", "/", "not", "letting", "amoral", "thugs", "change", "behaviour", "IS", "as", "courageous", ",", "Mark", ".."]
# ::lemmas ["go", "about", "your", "everyday", "life", "/", "not", "let", "amoral", "thug", "change", "behaviour", "be", "as", "courageous", ",", "Mark", ".."]
(c20-12 / say-01
        :ARG0 (c20-5 / i)
        :ARG1 (c20-9 / courage
                     :domain (c20-3 / slash
                                    :op1 (c20-10 / go-02
                                                 :ARG0 (c20-7 / person
                                                              :name (c20-6 / name
                                                                           :op1 "Mark"))
                                                 :ARG1 (c20-14 / about
                                                               :op1 (c20-0 / life
                                                                           :mod (c20-4 / everyday)
                                                                           :poss c20-7)))
                                    :op2 (c20-11 / let-01
                                                 :ARG0 c20-7
                                                 :ARG1 (c20-8 / change-01
                                                              :ARG0 (c20-13 / thug
                                                                            :ARG1-of (c20-1 / moral-02
                                                                                            :polarity -))
                                                              :ARG1 (c20-2 / behave-01))
                                                 :polarity -)))
        :ARG2 c20-7)
