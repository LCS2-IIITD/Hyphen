# ::snt probably, maybe, could have been = speculation
# ::tokens ["probably", ",", "maybe", ",", "could", "have", "been", "=", "speculation"]
# ::lemmas ["probably", ",", "maybe", ",", "could", "have", "be", "=", "speculation"]
(c1-1 / possible-01
      :ARG1 (c1-4 / possible-01
                  :ARG1 (c1-3 / thing
                              :ARG2-of (c1-0 / equal-01
                                             :ARG1 (c1-2 / speculate-01)))))

# ::snt them? person.
# ::tokens ["them", "?", "person", "."]
# ::lemmas ["they", "?", "person", "."]
(c2-2 / amr-choice
      :op1 (c2-1 / they)
      :op2 (c2-0 / person))

# ::snt praying for a peaceful resolution
# ::tokens ["praying", "for", "a", "peaceful", "resolution"]
# ::lemmas ["pray", "for", "a", "peaceful", "resolution"]
(c3-0 / pray-01
      :ARG1 (c3-1 / resolve-01
                  :mod (c3-2 / peaceful)))

# ::snt Speculation
# ::tokens ["Speculation"]
# ::lemmas ["speculation"]
(c4-0 / speculate-01)

# ::snt speculation equals facts to the media
# ::tokens ["speculation", "equals", "facts", "to", "the", "media"]
# ::lemmas ["speculation", "equal", "fact", "to", "the", "medium"]
(c5-1 / equate-01
      :ARG1 (c5-0 / speculate-01)
      :ARG2 (c5-2 / fact)
      :ARG3 (c5-3 / media))

# ::snt Hope the police snipers pick them off. more bastards in Australia
# ::tokens ["Hope", "the", "police", "snipers", "pick", "them", "off", ".", "more", "bastards", "in", "Australia"]
# ::lemmas ["hope", "the", "police", "sniper", "pick", "they", "off", ".", "more", "bastard", "in", "Australia"]
(c6-1 / multi-sentence
      :snt1 (c6-0 / hope-01
                  :ARG0 (c6-3 / i)
                  :ARG1 (c6-5 / pick-off-04
                              :ARG0 (c6-8 / sniper
                                          :mod (c6-10 / police))
                              :ARG1 (c6-9 / they)))
      :snt2 (c6-2 / bastard
                  :location (c6-7 / country
                                  :name (c6-4 / name
                                              :op1 "Australia"))
                  :quant (c6-6 / more)))

# ::snt I'm guessing didn't sucumb to sharia compliance halal certification and mufties blessing their chocolates?
# ::tokens ["I", "'m", "guessing", "did", "n't", "sucumb", "to", "sharia", "compliance", "halal", "certification", "and", "mufties", "blessing", "their", "chocolates", "?"]
# ::lemmas ["i", "be", "guess", "do", "not", "sucumb", "to", "sharia", "compliance", "halal", "certification", "and", "muftie", "bless", "their", "chocolate", "?"]
(c7-8 / guess-01
      :ARG0 (c7-4 / i)
      :ARG1 (c7-11 / suck-01
                   :ARG0 (c7-13 / and
                                :op1 (c7-7 / certify-01
                                           :ARG1 (c7-6 / comply-01
                                                       :ARG0 (c7-9 / religious-group
                                                                   :name (c7-5 / name
                                                                               :op1 "Sharia"))
                                                       :mod (c7-0 / halal)))
                                :op2 (c7-2 / bless-01
                                           :ARG0 (c7-1 / muftie)
                                           :ARG1 (c7-10 / chocolate
                                                        :poss (c7-12 / they)))
                                :ARG1-of c7-11)
                   :polarity -)
      :polarity (c7-3 / amr-unknown))

# ::snt YOU are extremely naive, if not stupid!
# ::tokens ["YOU", "are", "extremely", "naive", ",", "if", "not", "stupid", "!"]
# ::lemmas ["you", "be", "extremely", "naive", ",", "if", "not", "stupid", "!"]
(c8-0 / have-condition-91
      :ARG1 (c8-3 / naive
                  :domain (c8-1 / you)
                  :degree (c8-2 / extreme))
      :ARG2 (c8-4 / stupid
                  :domain c8-1
                  :polarity -))

# ::snt Glad Sky News is adhering to the appeal from ...NOT. Responsible reporting? NOT
# ::tokens ["Glad", "Sky", "News", "is", "adhering", "to", "the", "appeal", "from", "...", "NOT", ".", "Responsible", "reporting", "?", "NOT"]
# ::lemmas ["Glad", "Sky", "News", "be", "adhere", "to", "the", "appeal", "from", "...", "not", ".", "responsible", "reporting", "?", "not"]
(c9-0 / multi-sentence
      :snt1 (c9-8 / glad-02
                  :ARG0 (c9-9 / adhere-02
                              :ARG0 (c9-1 / broadcast-program
                                          :name (c9-5 / name
                                                      :op1 "Sky"
                                                      :op2 "News"))
                              :ARG1 (c9-2 / appeal-01))
                  :ARG1 (c9-3 / i))
      :snt2 (c9-7 / report-01
                  :ARG1-of (c9-4 / responsible-01
                                 :polarity -)
                  :polarity (c9-6 / amr-unknown)))
