# ::snt GB have confirmed people have come out
# ::tokens ["GB", "have", "confirmed", "people", "have", "come", "out"]
# ::lemmas ["GB", "have", "confirm", "people", "have", "come", "out"]
(c1-3 / confirm-01
      :ARG0 (c1-1 / person
                  :name (c1-0 / name
                              :op1 "GB"))
      :ARG1 (c1-2 / come-out-09
                  :ARG1 (c1-4 / person)))

# ::snt the terrorist may become even more desperate, thats happened in so many times in similar situations
# ::tokens ["the", "terrorist", "may", "become", "even", "more", "desperate", ",", "that", "s", "happened", "in", "so", "many", "times", "in", "similar", "situations"]
# ::lemmas ["the", "terrorist", "may", "become", "even", "more", "desperate", ",", "that", "s", "happen", "in", "so", "many", "time", "in", "similar", "situation"]
(c2-5 / possible-01
      :ARG1 (c2-2 / become-01
                  :ARG1 (c2-11 / terrorist)
                  :ARG2 (c2-6 / despair-01
                              :ARG0 c2-11
                              :ARG2-of (c2-0 / have-degree-91
                                             :ARG1 c2-11
                                             :ARG3 (c2-1 / more
                                                         :mod (c2-3 / even)))))
      :ARG1-of (c2-7 / resemble-01
                     :ARG2 (c2-10 / situation))
      :frequency (c2-9 / time
                       :ARG1-of (c2-12 / have-quant-91
                                       :ARG2 (c2-8 / many)
                                       :ARG3 (c2-4 / so))))

# ::snt Please let this be true!
# ::tokens ["Please", "let", "this", "be", "true", "!"]
# ::lemmas ["please", "let", "this", "be", "true", "!"]
(c3-1 / let-01
      :ARG0 (c3-0 / you)
      :ARG1 (c3-2 / true-01
                  :ARG1 (c3-3 / this))
      :mode imperative
      :polite +)

# ::snt I know, I have no idea. I just hope they weren't people hiding and they see the footage of people escaping
# ::tokens ["I", "know", ",", "I", "have", "no", "idea", ".", "I", "just", "hope", "they", "were", "n't", "people", "hiding", "and", "they", "see", "the", "footage", "of", "people", "escaping"]
# ::lemmas ["i", "know", ",", "i", "have", "no", "idea", ".", "i", "just", "hope", "they", "be", "not", "people", "hide", "and", "they", "see", "the", "footage", "of", "people", "escape"]
(c4-3 / multi-sentence
      :snt1 (c4-14 / know-01
                   :ARG0 (c4-7 / i))
      :snt2 (c4-0 / have-03
                  :ARG0 (c4-10 / i)
                  :ARG1 (c4-2 / idea)
                  :polarity -)
      :snt3 (c4-16 / hope-01
                   :ARG0 (c4-5 / i)
                   :ARG1 (c4-13 / and
                                :op1 (c4-8 / hide-01
                                           :ARG0 (c4-9 / person)
                                           :polarity -)
                                :op2 (c4-11 / see-01
                                            :ARG0 (c4-12 / they)
                                            :ARG1 (c4-4 / footage
                                                        :topic (c4-6 / escape-01
                                                                     :ARG0 (c4-15 / person)))))
                   :mod (c4-1 / just)))

# ::snt if this is true, I fear this could turn very nasty very quickly as the remaining ones may be abused by terrorist
# ::tokens ["if", "this", "is", "true", ",", "I", "fear", "this", "could", "turn", "very", "nasty", "very", "quickly", "as", "the", "remaining", "ones", "may", "be", "abused", "by", "terrorist"]
# ::lemmas ["if", "this", "be", "true", ",", "i", "fear", "this", "could", "turn", "very", "nasty", "very", "quickly", "as", "the", "remain", "one", "may", "be", "abuse", "by", "terrorist"]
(c5-0 / fear-01
      :ARG0 (c5-5 / i)
      :ARG1 (c5-8 / possible-01
                  :ARG1 (c5-13 / turn-02
                               :ARG1 (c5-12 / this)
                               :ARG2 (c5-6 / nasty
                                           :degree (c5-7 / very))
                               :ARG1-of (c5-3 / quick-02
                                              :degree (c5-1 / very))))
      :condition (c5-9 / true-01
                       :ARG1 c5-12)
      :ARG1-of (c5-10 / cause-01
                      :ARG0 (c5-14 / possible-01
                                   :ARG1 (c5-15 / abuse-01
                                                :ARG0 (c5-4 / terrorist)
                                                :ARG1 (c5-2 / one
                                                            :ARG1-of (c5-11 / remain-01))))))

# ::snt lets hope they are ok.
# ::tokens ["lets", "hope", "they", "are", "ok", "."]
# ::lemmas ["lets", "hope", "they", "be", "ok", "."]
(c6-0 / hope-01
      :ARG0 (c6-1 / we)
      :ARG1 (c6-3 / okay-03
                  :ARG1 (c6-2 / they))
      :mode imperative)

# ::snt BREAKING: Hostages are running out of the cafe v
# ::tokens ["BREAKING", ":", "Hostages", "are", "running", "out", "of", "the", "cafe", "v"]
# ::lemmas ["breaking", ":", "Hostages", "be", "run", "out", "of", "the", "cafe", "v"]
(c7-1 / break-01
      :ARG1 (c7-3 / run-out-05
                  :ARG1 (c7-4 / cafe)
                  :ARG2 (c7-2 / person
                              :ARG0-of (c7-0 / host-01))))

# ::snt If this is true, what great news. Is incident over?
# ::tokens ["If", "this", "is", "true", ",", "what", "great", "news", ".", "Is", "incident", "over", "?"]
# ::lemmas ["if", "this", "be", "true", ",", "what", "great", "news", ".", "be", "incident", "over", "?"]
(c8-0 / multi-sentence
      :snt1 (c8-3 / news
                  :mod (c8-4 / great)
                  :condition (c8-6 / true-01
                                   :ARG1 (c8-5 / this)))
      :snt2 (c8-1 / over-01
                  :ARG1 (c8-2 / incident)
                  :polarity (c8-7 / amr-unknown)))

# ::snt I hope this is true
# ::tokens ["I", "hope", "this", "is", "true"]
# ::lemmas ["i", "hope", "this", "be", "true"]
(c9-0 / hope-01
      :ARG0 (c9-2 / i)
      :ARG1 (c9-1 / true-01
                  :ARG1 (c9-3 / this)))

# ::snt : BREAKING: Hostages are running out of the cafe please let this be true
# ::tokens [":", "BREAKING", ":", "Hostages", "are", "running", "out", "of", "the", "cafe", "please", "let", "this", "be", "true"]
# ::lemmas [":", "breaking", ":", "Hostages", "be", "run", "out", "of", "the", "cafe", "please", "let", "this", "be", "true"]
(c10-3 / break-01
       :ARG1 (c10-8 / and
                    :op1 (c10-4 / run-out-05
                                :ARG1 (c10-0 / hostage)
                                :ARG2 (c10-5 / cafe))
                    :op2 (c10-2 / let-01
                                :ARG0 (c10-1 / you)
                                :ARG1 (c10-7 / true-01
                                             :ARG1 (c10-6 / this))
                                :mode imperative
                                :polite +)))

# ::snt apparently have got out
# ::tokens ["apparently", "have", "got", "out"]
# ::lemmas ["apparently", "have", "get", "out"]
(c11-0 / get-out-07
       :ARG1-of (c11-1 / appear-02))

# ::snt came out the front door and out the back/side. Don't know if they were released or escaped.
# ::tokens ["came", "out", "the", "front", "door", "and", "out", "the", "back", "/", "side", ".", "Do", "n't", "know", "if", "they", "were", "released", "or", "escaped", "."]
# ::lemmas ["come", "out", "the", "front", "door", "and", "out", "the", "back", "/", "side", ".", "do", "not", "know", "if", "they", "be", "release", "or", "escape", "."]
(c12-1 / multi-sentence
       :snt1 (c12-17 / and
                     :op1 (c12-11 / come-01
                                  :ARG1 (c12-16 / they)
                                  :direction (c12-5 / out
                                                    :op1 (c12-10 / door
                                                                 :mod (c12-0 / front))))
                     :op2 (c12-12 / come-01
                                  :ARG1 c12-16
                                  :direction (c12-2 / out
                                                    :op1 (c12-15 / slash
                                                                 :op1 (c12-4 / back)
                                                                 :op2 (c12-6 / side)))))
       :snt2 (c12-9 / know-01
                    :ARG0 (c12-8 / i)
                    :ARG1 (c12-3 / or
                                 :op1 (c12-13 / release-01
                                              :ARG1 (c12-14 / they))
                                 :op2 (c12-7 / escape-01
                                             :ARG0 c12-14))
                    :polarity -))

# ::snt OMG is this true : BREAKING: Hostages are running out of the cafe
# ::tokens ["OMG", "is", "this", "true", ":", "BREAKING", ":", "Hostages", "are", "running", "out", "of", "the", "cafe"]
# ::lemmas ["OMG", "be", "this", "true", ":", "breaking", ":", "Hostages", "be", "run", "out", "of", "the", "cafe"]
(c13-1 / multi-sentence
       :snt1 (c13-7 / true-01
                    :ARG1 (c13-6 / this)
                    :mod (c13-3 / oh-my-god
                                :mode expressive))
       :snt2 (c13-2 / break-13
                    :ARG1 (c13-4 / run-out-05
                                 :ARG1 (c13-0 / hostage)
                                 :ARG2 (c13-5 / cafe))))

# ::snt that's a start
# ::tokens ["that", "'s", "a", "start"]
# ::lemmas ["that", "be", "a", "start"]
(c14-0 / start-01
       :ARG2 (c14-1 / that))

# ::snt stupid media
# ::tokens ["stupid", "media"]
# ::lemmas ["stupid", "medium"]
(c15-1 / media
       :mod (c15-0 / stupid))

# ::snt Watching channel and they have not said a word about people running out, they also have camera on the entrance
# ::tokens ["Watching", "channel", "and", "they", "have", "not", "said", "a", "word", "about", "people", "running", "out", ",", "they", "also", "have", "camera", "on", "the", "entrance"]
# ::lemmas ["watch", "channel", "and", "they", "have", "not", "say", "a", "word", "about", "people", "run", "out", ",", "they", "also", "have", "camera", "on", "the", "entrance"]
(c16-12 / and
        :op1 (c16-3 / and
                    :op1 (c16-1 / watch-01
                                :ARG0 (c16-4 / i)
                                :ARG1 (c16-9 / channel))
                    :op2 (c16-11 / say-01
                                 :ARG0 c16-9
                                 :ARG1 (c16-5 / word
                                              :topic (c16-7 / person
                                                            :ARG0-of (c16-8 / run-out-05
                                                                            :ARG1 c16-7)))
                                 :polarity -))
        :op2 (c16-0 / have-03
                    :ARG0 c16-9
                    :ARG1 (c16-10 / camera
                                  :location (c16-2 / entrance))
                    :mod (c16-6 / also)))

# ::snt : BREAKING: Hostages are running out of the cafe I hope this is true
# ::tokens [":", "BREAKING", ":", "Hostages", "are", "running", "out", "of", "the", "cafe", "I", "hope", "this", "is", "true"]
# ::lemmas [":", "breaking", ":", "Hostages", "be", "run", "out", "of", "the", "cafe", "i", "hope", "this", "be", "true"]
(c17-1 / break-13
       :ARG1 (c17-3 / run-out-05
                    :ARG1 (c17-0 / hostage)
                    :ARG2 (c17-4 / cafe)
                    :ARG0-of (c17-5 / cause-01
                                    :ARG1 (c17-8 / hope-01
                                                 :ARG0 (c17-2 / i)
                                                 :ARG1 (c17-7 / true-01
                                                              :ARG1 (c17-6 / this))))))

# ::snt yep we're hearing the same
# ::tokens ["yep", "we", "'re", "hearing", "the", "same"]
# ::lemmas ["yep", "we", "be", "hear", "the", "same"]
(c18-0 / hear-01
       :ARG0 (c18-1 / we)
       :ARG1 (c18-2 / same-01)
       :mod (c18-3 / yep
                   :mode expressive))

# ::snt how bout keeping that quiet
# ::tokens ["how", "bout", "keeping", "that", "quiet"]
# ::lemmas ["how", "bout", "keep", "that", "quiet"]
(c19-2 / keep-02
       :ARG1 (c19-1 / quiet-04
                    :ARG1 (c19-0 / that))
       :manner (c19-3 / amr-unknown))

# ::snt hope they are safe
# ::tokens ["hope", "they", "are", "safe"]
# ::lemmas ["hope", "they", "be", "safe"]
(c20-0 / hope-01
       :ARG0 (c20-3 / i)
       :ARG1 (c20-2 / safe-01
                    :ARG1 (c20-1 / they)))

# ::snt it is confirmed Camilla
# ::tokens ["it", "is", "confirmed", "Camilla"]
# ::lemmas ["it", "be", "confirm", "Camilla"]
(c21-2 / confirm-01
       :ARG1 (c21-1 / person
                    :name (c21-0 / name
                                 :op1 "Camilla")))
