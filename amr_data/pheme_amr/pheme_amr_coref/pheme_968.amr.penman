# ::snt that headline though... Even as we complain that KE journos aren't the best, Daily Telegraph's editors should get another career.
# ::tokens ["that", "headline", "though", "...", "Even", "as", "we", "complain", "that", "KE", "journos", "are", "n't", "the", "best", ",", "Daily", "Telegraph", "'s", "editors", "should", "get", "another", "career", "."]
# ::lemmas ["that", "headline", "though", "...", "even", "as", "we", "complain", "that", "KE", "journo", "be", "not", "the", "good", ",", "Daily", "Telegraph", "'s", "editor", "should", "get", "another", "career", "."]
(c1-1 / multi-sentence
      :snt1 (c1-8 / have-concession-91
                  :ARG2 (c1-19 / thing
                               :ARG2-of (c1-7 / headline-01)
                               :mod (c1-18 / that)))
      :snt2 (c1-13 / recommend-01
                   :ARG1 (c1-14 / get-01
                                :ARG0 (c1-10 / editor
                                             :poss (c1-11 / newspaper
                                                          :name (c1-16 / name
                                                                       :op1 "Daily"
                                                                       :op2 "Telegraph")))
                                :ARG1 (c1-17 / career
                                             :mod (c1-6 / another)))
                   :concession (c1-9 / even-as
                                     :op1 (c1-4 / complain-01
                                                :ARG0 (c1-15 / we)
                                                :ARG1 (c1-3 / have-degree-91
                                                            :ARG1 (c1-0 / journalist
                                                                        :mod c1-11
                                                                        :name (c1-2 / name
                                                                                    :op1 "Keynes"))
                                                            :polarity -)
                                                :ARG2 (c1-5 / good-03
                                                            :ARG1 c1-0)
                                                :ARG3 (c1-12 / most)))))

# ::snt I hear people are calling for the attackers families to be sent into the cafe. This may work but is it right?
# ::tokens ["I", "hear", "people", "are", "calling", "for", "the", "attackers", "families", "to", "be", "sent", "into", "the", "cafe", ".", "This", "may", "work", "but", "is", "it", "right", "?"]
# ::lemmas ["i", "hear", "people", "be", "call", "for", "the", "attacker", "family", "to", "be", "send", "into", "the", "cafe", ".", "this", "may", "work", "but", "be", "it", "right", "?"]
(c2-3 / multi-sentence
      :snt1 (c2-0 / hear-01
                  :ARG0 (c2-6 / i)
                  :ARG1 (c2-9 / call-03
                              :ARG0 (c2-7 / person)
                              :ARG1 (c2-13 / send-01
                                           :ARG1 (c2-2 / family
                                                       :ARG1-of (c2-17 / have-org-role-91
                                                                       :ARG0 (c2-16 / person
                                                                                    :ARG0-of (c2-14 / attack-01))
                                                                       :ARG2 (c2-8 / member)))
                                           :ARG2 (c2-10 / cafe))))
      :snt2 (c2-12 / contrast-01
                   :ARG1 (c2-4 / possible-01
                               :ARG1 (c2-1 / work-09
                                           :ARG1 (c2-15 / this)))
                   :ARG2 (c2-11 / right-02
                                :ARG1 c2-15
                                :polarity (c2-5 / amr-unknown))))

# ::snt - wouldn't target ?
# ::tokens ["-", "would", "n't", "target", "?"]
# ::lemmas ["-", "would", "not", "target", "?"]
(c3-1 / target-01
      :ARG1 (c3-0 / you)
      :polarity (c3-2 / amr-unknown)
      :polarity -)

# ::snt J Hildebrand (nincompoop) tried to justify it on SkyNews. Ita Buttrose put him in his place
# ::tokens ["J", "Hildebrand", "(", "nincompoop", ")", "tried", "to", "justify", "it", "on", "SkyNews", ".", "Ita", "Buttrose", "put", "him", "in", "his", "place"]
# ::lemmas ["J", "Hildebrand", "(", "nincompoop", ")", "try", "to", "justify", "it", "on", "SkyNews", ".", "Ita", "Buttrose", "put", "he", "in", "his", "place"]
(c4-2 / multi-sentence
      :snt1 (c4-13 / try-01
                   :ARG0 (c4-9 / person
                               :name (c4-7 / name
                                           :op1 "J"
                                           :op2 "Hildebrand")
                               :ARG0-of (c4-0 / have-org-role-91
                                              :ARG1 (c4-14 / publication
                                                           :name (c4-8 / name
                                                                       :op1 "nincompoop"))))
                   :ARG1 (c4-1 / justify-01
                               :ARG0 c4-9
                               :ARG1 (c4-6 / it)
                               :medium (c4-4 / broadcast-program
                                             :name (c4-10 / name
                                                          :op1 "SkyNews"))))
      :snt2 (c4-3 / put-01
                  :ARG0 (c4-12 / person
                               :name (c4-11 / name
                                            :op1 "Ita"
                                            :op2 "Buttrose"))
                  :ARG1 (c4-15 / he)
                  :ARG2 (c4-5 / place
                              :poss c4-15)))

# ::snt LOVE IT MOITE
# ::tokens ["LOVE", "IT", "MOITE"]
# ::lemmas ["love", "IT", "moite"]
(c5-4 / say-01
      :ARG0 (c5-2 / i)
      :ARG1 (c5-1 / love-01
                  :ARG0 (c5-0 / you)
                  :ARG1 (c5-3 / it)
                  :mode imperative)
      :ARG2 c5-0)

# ::snt Special fear mongering edition
# ::tokens ["Special", "fear", "mongering", "edition"]
# ::lemmas ["special", "fear", "monger", "edition"]
(c6-1 / edition
      :ARG0-of (c6-3 / monger-00
                     :ARG1 (c6-2 / fear-01))
      :ARG1-of (c6-0 / special-02))

# ::snt : . They have heaps of info &amp; if you worked in the city is not imaginary keep wishing it ain't
# ::tokens [":", ".", "They", "have", "heaps", "of", "info", "&", "amp", ";", "if", "you", "worked", "in", "the", "city", "is", "not", "imaginary", "keep", "wishing", "it", "ai", "n't"]
# ::lemmas [":", ".", "they", "have", "heap", "of", "info", "&", "amp", ";", "if", "you", "work", "in", "the", "city", "be", "not", "imaginary", "keep", "wish", "it", "be", "not"]
(c7-4 / multi-sentence
      :snt1 (c7-0 / have-03
                  :ARG0 (c7-12 / they)
                  :ARG1 (c7-13 / and
                               :op1 (c7-7 / information)
                               :op2 (c7-6 / amp)
                               :quant (c7-3 / heap)))
      :snt2 (c7-8 / keep-02
                  :ARG0 (c7-1 / you)
                  :ARG1 (c7-2 / wish-01
                              :ARG0 c7-1
                              :ARG1 (c7-11 / imaginary
                                           :domain (c7-5 / imaginary
                                                         :domain c7-5)
                                           :polarity -))
                  :condition (c7-9 / work-01
                                   :ARG0 c7-1
                                   :location (c7-10 / city))
                  :mode imperative))

# ::snt - not right!
# ::tokens ["-", "not", "right", "!"]
# ::lemmas ["-", "not", "right", "!"]
(c8-0 / right-06
      :polarity -)

# ::snt Arse wiping is too good for it.
# ::tokens ["Arse", "wiping", "is", "too", "good", "for", "it", "."]
# ::lemmas ["arse", "wiping", "be", "too", "good", "for", "it", "."]
(c9-0 / have-degree-91
      :ARG1 (c9-1 / wipe-01
                  :manner (c9-5 / argue-02))
      :ARG2 (c9-3 / good-04
                  :ARG1 c9-1
                  :purpose (c9-2 / it))
      :ARG3 (c9-4 / too))

# ::snt i wonder if they've paid for or attributed that photo?
# ::tokens ["i", "wonder", "if", "they", "'ve", "paid", "for", "or", "attributed", "that", "photo", "?"]
# ::lemmas ["i", "wonder", "if", "they", "'ve", "pay", "for", "or", "attribute", "that", "photo", "?"]
(c10-0 / wonder-01
       :ARG0 (c10-2 / i)
       :ARG1 (c10-6 / truth-value
                    :polarity-of (c10-1 / or
                                        :op1 (c10-4 / pay-01
                                                    :ARG0 (c10-5 / they)
                                                    :ARG3 (c10-7 / photo
                                                                 :mod (c10-3 / that)))
                                        :op2 (c10-8 / attribute-01
                                                    :ARG0 c10-5
                                                    :ARG1 c10-7))))

# ::snt 'this paper' warrants this reaction!Disgusting.
# ::tokens ["'", "this", "paper", "'", "warrants", "this", "reaction!Disgusting", "."]
# ::lemmas ["'", "this", "paper", "'", "warrant", "this", "reaction!disgusting", "."]
(c11-1 / warrant-01
       :ARG0 (c11-2 / paper
                    :poss (c11-0 / he))
       :ARG1 (c11-3 / react-01
                    :mod (c11-4 / this))
       :mode expressive)

# ::snt . we are here. Press have responsibility not to show hostages' face, have to stay calm for confirmed reports.
# ::tokens [".", "we", "are", "here", ".", "Press", "have", "responsibility", "not", "to", "show", "hostages", "'", "face", ",", "have", "to", "stay", "calm", "for", "confirmed", "reports", "."]
# ::lemmas [".", "we", "be", "here", ".", "press", "have", "responsibility", "not", "to", "show", "hostage", "'", "face", ",", "have", "to", "stay", "calm", "for", "confirmed", "report", "."]
(c12-3 / multi-sentence
       :snt1 (c12-5 / be-located-at-91
                    :ARG1 (c12-1 / we)
                    :ARG2 (c12-0 / here))
       :snt2 (c12-14 / and
                     :op1 (c12-10 / responsible-03
                                  :ARG0 (c12-9 / press)
                                  :ARG1 (c12-13 / show-01
                                                :ARG0 c12-9
                                                :ARG1 (c12-2 / face
                                                             :part-of (c12-4 / hostage))
                                                :polarity -))
                     :op2 (c12-6 / obligate-01
                                 :ARG1 c12-9
                                 :ARG2 (c12-7 / stay-01
                                              :ARG1 c12-9
                                              :ARG3 (c12-11 / calm-03
                                                            :ARG1 c12-9)
                                              :condition (c12-8 / report-01
                                                                :ARG1-of (c12-12 / confirm-01))))))

# ::snt that's always been their go
# ::tokens ["that", "'s", "always", "been", "their", "go"]
# ::lemmas ["that", "be", "always", "be", "their", "go"]
(c13-1 / go-01
       :ARG1 (c13-0 / they)
       :ARG4 (c13-3 / that)
       :time (c13-2 / always))

# ::snt Apparently, being the least trusted newspaper in Australia is hard work
# ::tokens ["Apparently", ",", "being", "the", "least", "trusted", "newspaper", "in", "Australia", "is", "hard", "work"]
# ::lemmas ["apparently", ",", "be", "the", "least", "trust", "newspaper", "in", "Australia", "be", "hard", "work"]
(c14-1 / work-01
       :ARG1-of (c14-0 / hard-02)
       :domain (c14-3 / newspaper
                      :ARG1-of (c14-8 / have-degree-91
                                      :ARG2 (c14-7 / trust-01
                                                   :ARG1 c14-3)
                                      :ARG3 (c14-2 / least)
                                      :ARG5 (c14-5 / country
                                                   :name (c14-4 / name
                                                                :op1 "Australia"))))
       :ARG1-of (c14-6 / appear-02))

# ::snt PREVENT THE VIOLENCE ! Author Avail hrs -778-908-2811
# ::tokens ["PREVENT", "THE", "VIOLENCE", "!", "Author", "Avail", "hrs", "-778", "-", "908", "-", "2811"]
# ::lemmas ["prevent", "the", "violence", "!", "author", "Avail", "hrs", "-778", "-", "908", "-", "2811"]
(c15-6 / spoil-01
       :ARG0 (c15-0 / you)
       :ARG1 (c15-2 / innocent-01)
       :ARG1-of (c15-1 / say-01
                       :ARG0 (c15-4 / person
                                    :name (c15-3 / name
                                                 :op1 "Avail"
                                                 :op2 " hrs")
                                    :ARG0-of (c15-7 / author-01))
                       :time (c15-5 / date-entity
                                    :day 28
                                    :month 9
                                    :year 2008))
       :mode imperative)

# ::snt like the bad little news corpse drones they are.
# ::tokens ["like", "the", "bad", "little", "news", "corpse", "drones", "they", "are", "."]
# ::lemmas ["like", "the", "bad", "little", "news", "corpse", "drone", "they", "be", "."]
(c16-5 / resemble-01
       :ARG1 (c16-6 / they)
       :ARG2 (c16-3 / drone
                    :mod (c16-4 / corpse
                                :mod (c16-2 / news))
                    :ARG1-of (c16-1 / bad-07)
                    :mod (c16-0 / little)))

# ::snt Newspapers are for sale with a view to profit, just like all capitalist produced commodities.
# ::tokens ["Newspapers", "are", "for", "sale", "with", "a", "view", "to", "profit", ",", "just", "like", "all", "capitalist", "produced", "commodities", "."]
# ::lemmas ["newspaper", "be", "for", "sale", "with", "a", "view", "to", "profit", ",", "just", "like", "all", "capitalist", "produce", "commodity", "."]
(c17-7 / sell-01
       :ARG1 (c17-1 / newspaper
                    :ARG0-of (c17-2 / view-02
                                    :ARG1 (c17-3 / profit-01))
                    :ARG1-of (c17-4 / resemble-01
                                    :ARG2 (c17-5 / commodity
                                                 :ARG1-of (c17-8 / produce-01
                                                                 :ARG0 (c17-6 / capitalist))
                                                 :mod (c17-9 / all))
                                    :mod (c17-0 / just))))
