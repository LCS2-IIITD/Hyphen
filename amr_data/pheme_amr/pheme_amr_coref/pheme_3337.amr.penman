# ::snt But media continues to do it?
# ::tokens ["But", "media", "continues", "to", "do", "it", "?"]
# ::lemmas ["but", "medium", "continue", "to", "do", "it", "?"]
(c1-4 / contrast-01
      :ARG2 (c1-3 / continue-01
                  :polarity (c1-5 / amr-unknown)
                  :ARG0 (c1-0 / media)
                  :ARG1 (c1-2 / do-02
                              :ARG0 c1-0
                              :ARG1 (c1-1 / it))))

# ::snt there should be fines from CRTC when broadcasters do this. Safety of first responders &gt; live broadcast.
# ::tokens ["there", "should", "be", "fines", "from", "CRTC", "when", "broadcasters", "do", "this", ".", "Safety", "of", "first", "responders", "&", "gt", ";", "live", "broadcast", "."]
# ::lemmas ["there", "should", "be", "fine", "from", "CRTC", "when", "broadcaster", "do", "this", ".", "safety", "of", "first", "responder", "&", "gt", ";", "live", "broadcast", "."]
(c2-1 / multi-sentence
      :snt1 (c2-8 / recommend-01
                  :ARG1 (c2-0 / fine-01
                              :ARG0 (c2-10 / government-organization
                                           :name (c2-5 / name
                                                       :op1 "CTC"))
                              :ARG2 (c2-7 / person
                                          :ARG0-of (c2-3 / broadcast-01))
                              :time (c2-9 / do-02
                                          :ARG0 c2-7
                                          :ARG1 (c2-14 / this))))
      :snt2 (c2-16 / and
                   :op1 (c2-13 / safe-01
                               :ARG1 (c2-15 / person
                                            :ARG0-of (c2-4 / respond-01
                                                           :mod (c2-6 / first))))
                   :op2 (c2-11 / gt-00)
                   :op3 (c2-12 / broadcast-01
                               :manner (c2-2 / live))))

# ::snt joking right. news media broadcasting everything. Live on scene interviews from Canadian politician of what is going on.
# ::tokens ["joking", "right", ".", "news", "media", "broadcasting", "everything", ".", "Live", "on", "scene", "interviews", "from", "Canadian", "politician", "of", "what", "is", "going", "on", "."]
# ::lemmas ["joke", "right", ".", "news", "medium", "broadcast", "everything", ".", "live", "on", "scene", "interview", "from", "Canadian", "politician", "of", "what", "be", "go", "on", "."]
(c3-2 / multi-sentence
      :snt1 (c3-10 / right-06
                   :ARG2 (c3-0 / joke-01))
      :snt2 (c3-3 / broadcast-01
                  :ARG0 (c3-9 / media
                              :mod (c3-7 / news))
                  :ARG1 (c3-5 / everything))
      :snt3 (c3-6 / interview-01
                  :ARG0 (c3-11 / politician
                               :mod (c3-12 / country
                                           :name (c3-8 / name
                                                       :op1 "Canada"))
                               :ARG1-of c3-6)
                  :ARG2 (c3-4 / event)
                  :manner (c3-1 / live
                                :location (c3-13 / scene))))

# ::snt in Ottawa just gave a live action description of officers moving away from Parliament...
# ::tokens ["in", "Ottawa", "just", "gave", "a", "live", "action", "description", "of", "officers", "moving", "away", "from", "Parliament", "..."]
# ::lemmas ["in", "Ottawa", "just", "give", "a", "live", "action", "description", "of", "officer", "move", "away", "from", "Parliament", "..."]
(c4-8 / describe-01
      :ARG0 (c4-7 / person
                  :location (c4-9 / city
                                  :name (c4-5 / name
                                              :op1 "Ottawa")))
      :ARG1 (c4-2 / move-01
                  :ARG0 (c4-3 / officer)
                  :ARG2 (c4-11 / away
                               :op1 (c4-10 / government-organization
                                           :name (c4-6 / name
                                                       :op1 "Parliament"))))
      :manner (c4-4 / act-02
                    :mod (c4-1 / live))
      :time (c4-0 / just))

# ::snt Oh dear. First responders need to be kept as safe as possible.
# ::tokens ["Oh", "dear", ".", "First", "responders", "need", "to", "be", "kept", "as", "safe", "as", "possible", "."]
# ::lemmas ["oh", "dear", ".", "First", "responder", "need", "to", "be", "keep", "as", "safe", "as", "possible", "."]
(c5-2 / multi-sentence
      :snt1 (c5-7 / dear
                  :mod (c5-4 / oh))
      :snt2 (c5-1 / obligate-01
                  :ARG2 (c5-10 / keep-01
                               :ARG1 (c5-9 / safe-01
                                           :ARG1 (c5-6 / person
                                                       :ARG0-of (c5-8 / respond-01)
                                                       :mod (c5-3 / first))
                                           :ARG2-of (c5-0 / have-degree-91
                                                          :ARG1 c5-6
                                                          :ARG3 (c5-5 / equal)
                                                          :ARG4 (c5-11 / possible-01
                                                                       :ARG1 c5-9))))))

# ::snt exactly. It's that type of stupidity that could get officers killed.
# ::tokens ["exactly", ".", "It", "'s", "that", "type", "of", "stupidity", "that", "could", "get", "officers", "killed", "."]
# ::lemmas ["exactly", ".", "it", "be", "that", "type", "of", "stupidity", "that", "could", "get", "officer", "kill", "."]
(c6-0 / multi-sentence
      :snt1 (c6-2 / exact)
      :snt2 (c6-4 / possible-01
                  :ARG1 (c6-5 / get-04
                              :ARG0 (c6-7 / stupidity
                                          :mod (c6-8 / type
                                                     :mod (c6-6 / that)))
                              :ARG1 (c6-3 / kill-01
                                          :ARG1 (c6-1 / officer)))))

# ::snt It's the same idiocy that happened during the Moncton shootings. Incredibly dangerous.
# ::tokens ["It", "'s", "the", "same", "idiocy", "that", "happened", "during", "the", "Moncton", "shootings", ".", "Incredibly", "dangerous", "."]
# ::lemmas ["it", "be", "the", "same", "idiocy", "that", "happen", "during", "the", "Moncton", "shooting", ".", "incredibly", "dangerous", "."]
(c7-1 / multi-sentence
      :snt1 (c7-4 / idiocy
                  :ARG1-of (c7-8 / same-01
                                 :ARG2 (c7-2 / shoot-02
                                             :location (c7-6 / city
                                                             :name (c7-5 / name
                                                                         :op1 "Moncton"))))
                  :domain (c7-7 / it))
      :snt2 (c7-3 / endanger-01
                  :degree (c7-0 / incredible)))

# ::snt They do. On CBC, Rosemary Barton just talked about subject. Safety first should be only consideration right now.
# ::tokens ["They", "do", ".", "On", "CBC", ",", "Rosemary", "Barton", "just", "talked", "about", "subject", ".", "Safety", "first", "should", "be", "only", "consideration", "right", "now", "."]
# ::lemmas ["they", "do", ".", "on", "CBC", ",", "Rosemary", "Barton", "just", "talk", "about", "subject", ".", "safety", "first", "should", "be", "only", "consideration", "right", "now", "."]
(c8-1 / multi-sentence
      :snt1 (c8-8 / do-02
                  :ARG0 (c8-14 / they))
      :snt2 (c8-12 / talk-01
                   :ARG0 (c8-7 / person
                               :name (c8-5 / name
                                           :op1 "Rosemary"
                                           :op2 "Barton"))
                   :ARG1 (c8-13 / subject)
                   :time (c8-0 / just)
                   :medium (c8-15 / publication
                                  :name (c8-6 / name
                                              :op1 "CBC")))
      :snt3 (c8-9 / recommend-01
                  :ARG1 (c8-10 / consider-02
                               :ARG1 (c8-3 / safe-01)
                               :mod (c8-2 / only)
                               :time (c8-11 / now
                                            :mod (c8-4 / right)))))
