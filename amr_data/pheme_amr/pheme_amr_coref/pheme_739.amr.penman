# ::snt my parents walked past here right before it happened. All streets in area closed down. They are trying to get out area
# ::tokens ["my", "parents", "walked", "past", "here", "right", "before", "it", "happened", ".", "All", "streets", "in", "area", "closed", "down", ".", "They", "are", "trying", "to", "get", "out", "area"]
# ::lemmas ["my", "parent", "walk", "past", "here", "right", "before", "it", "happen", ".", "all", "street", "in", "area", "close", "down", ".", "they", "be", "try", "to", "get", "out", "area"]
(c1-0 / multi-sentence
      :snt1 (c1-12 / walk-01
                   :ARG0 (c1-1 / person
                               :ARG0-of (c1-6 / have-rel-role-91
                                              :ARG1 (c1-14 / i)
                                              :ARG2 (c1-3 / parent)))
                   :ARG2 (c1-7 / past
                               :op1 (c1-5 / here))
                   :time (c1-8 / before
                               :op1 (c1-15 / it)
                               :mod (c1-10 / right)))
      :snt2 (c1-17 / close-down-04
                   :ARG1 (c1-2 / street
                               :mod (c1-4 / all)
                               :location (c1-13 / area)))
      :snt3 (c1-19 / try-01
                   :ARG0 (c1-18 / they)
                   :ARG1 (c1-11 / get-05
                                :ARG1 c1-18
                                :ARG2 (c1-16 / out-06
                                             :ARG1 c1-18
                                             :ARG2 (c1-9 / area)))))

# ::snt Oh no! : Hostages being held in Sydney, Australia cafe
# ::tokens ["Oh", "no", "!", ":", "Hostages", "being", "held", "in", "Sydney", ",", "Australia", "cafe"]
# ::lemmas ["oh", "no", "!", ":", "hostage", "be", "hold", "in", "Sydney", ",", "Australia", "cafe"]
(c2-0 / hold-04
      :ARG1 (c2-7 / hostage)
      :location (c2-5 / cafe
                      :location (c2-4 / city
                                      :name (c2-2 / name
                                                  :op1 "Sydney")
                                      :location (c2-6 / country
                                                      :name (c2-3 / name
                                                                  :op1 "Australia"))))
      :mod (c2-1 / oh-no
                 :mode expressive))

# ::snt Christians don't know how to run a country. They put the whole population in the sights of their many, many enemies!
# ::tokens ["Christians", "do", "n't", "know", "how", "to", "run", "a", "country", ".", "They", "put", "the", "whole", "population", "in", "the", "sights", "of", "their", "many", ",", "many", "enemies", "!"]
# ::lemmas ["Christians", "do", "not", "know", "how", "to", "run", "a", "country", ".", "they", "put", "the", "whole", "population", "in", "the", "sight", "of", "their", "many", ",", "many", "enemy", "!"]
(c3-2 / multi-sentence
      :snt1 (c3-14 / know-03
                   :ARG0 (c3-7 / person
                               :mod (c3-8 / religious-group
                                          :name (c3-6 / name
                                                      :op1 "Christian")))
                   :ARG1 (c3-5 / run-01
                               :ARG0 c3-7
                               :ARG1 (c3-9 / country))
                   :polarity -)
      :snt2 (c3-15 / put-01
                   :ARG0 (c3-12 / they)
                   :ARG1 (c3-3 / population
                               :mod (c3-1 / whole))
                   :ARG2 (c3-11 / sight-01
                                :ARG0 (c3-13 / person
                                             :ARG0-of (c3-0 / have-rel-role-91
                                                            :ARG1 c3-12
                                                            :ARG2 (c3-4 / enemy))
                                             :quant (c3-10 / many))
                                :ARG1 c3-3)))

# ::snt oh snap
# ::tokens ["oh", "snap"]
# ::lemmas ["oh", "snap"]
(c4-0 / snap-04
      :mod (c4-1 / oh)
      :mode expressive)

# ::snt sorry dude, even if it was from the bible it doesn't say to kill anyone, it says to love everyone, islam isn't so
# ::tokens ["sorry", "dude", ",", "even", "if", "it", "was", "from", "the", "bible", "it", "does", "n't", "say", "to", "kill", "anyone", ",", "it", "says", "to", "love", "everyone", ",", "islam", "is", "n't", "so"]
# ::lemmas ["sorry", "dude", ",", "even", "if", "it", "be", "from", "the", "bible", "it", "do", "not", "say", "to", "kill", "anyone", ",", "it", "say", "to", "love", "everyone", ",", "islam", "be", "not", "so"]
(c5-14 / say-01
       :ARG1 (c5-11 / contrast-01
                    :ARG1 (c5-5 / say-01
                                :ARG0 (c5-7 / it)
                                :ARG1 (c5-15 / kill-01
                                             :ARG1 (c5-16 / anyone))
                                :concession (c5-6 / even-if
                                                  :op1 (c5-2 / be-from-91
                                                             :ARG1 c5-7
                                                             :ARG2 (c5-12 / book
                                                                          :name (c5-8 / name
                                                                                      :op1 "Bible"))))
                                :polarity -)
                    :ARG2 (c5-0 / say-01
                                :ARG0 c5-7
                                :ARG1 (c5-1 / love-01
                                            :ARG1 (c5-3 / everyone))
                                :concession (c5-10 / religious-group
                                                   :name (c5-9 / name
                                                               :op1 "Islam"))
                                :polarity -))
       :ARG2 (c5-4 / sorry-01
                   :ARG1 (c5-13 / dude)))

# ::snt Only could break the news for the religion of the flag other failed to do that.
# ::tokens ["Only", "could", "break", "the", "news", "for", "the", "religion", "of", "the", "flag", "other", "failed", "to", "do", "that", "."]
# ::lemmas ["only", "could", "break", "the", "news", "for", "the", "religion", "of", "the", "flag", "other", "fail", "to", "do", "that", "."]
(c6-6 / possible-01
      :ARG1 (c6-2 / break-18
                  :ARG0 (c6-3 / other
                              :ARG0-of (c6-0 / fail-01
                                             :ARG1 (c6-7 / do-02
                                                         :ARG1 c6-2)))
                  :ARG1 (c6-5 / news
                              :topic (c6-8 / religion
                                           :poss (c6-4 / flag))))
      :mod (c6-1 / only))

# ::snt It's racist when you refer to someone as you quoted " monkies " (clearly you don't how to spell).
# ::tokens ["It", "'s", "racist", "when", "you", "refer", "to", "someone", "as", "you", "quoted", "\"", "monkies", "\"", "(", "clearly", "you", "do", "n't", "how", "to", "spell", ")", "."]
# ::lemmas ["it", "be", "racist", "when", "you", "refer", "to", "someone", "as", "you", "quote", "\"", "monkie", "\"", "(", "clearly", "you", "do", "not", "how", "to", "spell", ")", "."]
(c7-5 / racist
      :domain (c7-4 / refer-01
                    :ARG0 (c7-0 / you)
                    :ARG1 (c7-8 / someone)
                    :manner (c7-3 / quote-01
                                  :ARG0 c7-0
                                  :ARG1 (c7-1 / monkies)))
      :ARG1-of (c7-6 / cause-01
                     :ARG0 (c7-10 / know-03
                                  :ARG0 c7-0
                                  :ARG1 (c7-9 / thing
                                              :manner-of (c7-2 / spell-01
                                                               :ARG0 c7-0))
                                  :ARG1-of (c7-7 / clear-06)
                                  :polarity -)))

# ::snt Regardless who they are, it's just sick. Burning a Koran doesn't make us any better. It fuels the hate.
# ::tokens ["Regardless", "who", "they", "are", ",", "it", "'s", "just", "sick", ".", "Burning", "a", "Koran", "does", "n't", "make", "us", "any", "better", ".", "It", "fuels", "the", "hate", "."]
# ::lemmas ["regardless", "who", "they", "be", ",", "it", "be", "just", "sick", ".", "burn", "a", "Koran", "do", "not", "make", "we", "any", "well", ".", "it", "fuel", "the", "hate", "."]
(c8-4 / multi-sentence
      :snt1 (c8-10 / sick-02
                   :ARG0 (c8-5 / burn-01
                               :ARG1 (c8-9 / book
                                           :name (c8-6 / name
                                                       :op1 "Koran")))
                   :mod (c8-0 / just)
                   :ARG1-of (c8-8 / regardless-91
                                  :ARG2 (c8-7 / person
                                              :domain (c8-12 / they))))
      :snt2 (c8-11 / better-01
                   :ARG0 c8-5
                   :ARG1 c8-9
                   :polarity -)
      :ARG1 (c8-1 / we)
      :mod (c8-13 / any)
      :snt3 (c8-3 / fuel-01
                  :ARG0 c8-5
                  :ARG1 (c8-2 / hate-01)))

# ::snt Sydney, we in Ottawa are thinking of you. MT : Hostages being held in Sydney, Australia cafe.
# ::tokens ["Sydney", ",", "we", "in", "Ottawa", "are", "thinking", "of", "you", ".", "MT", ":", "Hostages", "being", "held", "in", "Sydney", ",", "Australia", "cafe", "."]
# ::lemmas ["Sydney", ",", "we", "in", "Ottawa", "be", "think", "of", "you", ".", "MT", ":", "Hostages", "be", "hold", "in", "Sydney", ",", "Australia", "cafe", "."]
(c9-3 / multi-sentence
      :snt1 (c9-13 / think-01
                   :ARG0 (c9-1 / we
                               :location (c9-8 / city
                                               :name (c9-4 / name
                                                           :op1 "Ottawa")))
                   :ARG1 (c9-2 / you))
      :snt2 (c9-12 / say-01
                   :ARG1 (c9-0 / hold-04
                               :ARG1 (c9-14 / hostage)
                               :location (c9-7 / cafe
                                               :location (c9-11 / city
                                                                :name (c9-5 / name
                                                                            :op1 "Sydney")
                                                                :location (c9-15 / country
                                                                                 :name (c9-6 / name
                                                                                             :op1 "Australia")))))
                   :ARG2 (c9-9 / person
                               :name (c9-10 / name
                                            :op1 "MT"))))

# ::snt And racist referrals as you mentioned also puts you on many hate lists. Your hatred is making them win.
# ::tokens ["And", "racist", "referrals", "as", "you", "mentioned", "also", "puts", "you", "on", "many", "hate", "lists", ".", "Your", "hatred", "is", "making", "them", "win", "."]
# ::lemmas ["and", "racist", "referral", "as", "you", "mention", "also", "put", "you", "on", "many", "hate", "list", ".", "your", "hatred", "be", "make", "they", "win", "."]
(c10-4 / multi-sentence
       :snt1 (c10-15 / and
                     :op2 (c10-9 / put-01
                                 :ARG0 (c10-10 / refer-02
                                               :mod (c10-8 / racist)
                                               :ARG1-of (c10-11 / mention-01
                                                                :ARG0 (c10-1 / you
                                                                             :ARG1-of c10-9)))
                                 :ARG2 (c10-3 / list-01
                                              :ARG1 (c10-0 / hate-01)
                                              :quant (c10-5 / many))
                                 :mod (c10-7 / also)))
       :snt2 (c10-12 / make-02
                     :ARG0 (c10-6 / hate-01
                                  :ARG0 (c10-13 / you))
                     :ARG1 (c10-2 / win-01
                                  :ARG0 (c10-14 / they))))

# ::snt sick dirty phucking muslims trying to install fear us, we want them to join us in the practice of evolving,, burn the koran
# ::tokens ["sick", "dirty", "phucking", "muslims", "trying", "to", "install", "fear", "us", ",", "we", "want", "them", "to", "join", "us", "in", "the", "practice", "of", "evolving", ",", ",", "burn", "the", "koran"]
# ::lemmas ["sick", "dirty", "phucking", "muslims", "try", "to", "install", "fear", "we", ",", "we", "want", "they", "to", "join", "we", "in", "the", "practice", "of", "evolve", ",", ",", "burn", "the", "koran"]
(c11-17 / and
        :op1 (c11-2 / fear-01
                    :ARG0 (c11-10 / person
                                  :mod (c11-11 / religious-group
                                               :name (c11-8 / name
                                                            :op1 "Islam"))
                                  :mod (c11-16 / phucking)
                                  :ARG1-of (c11-14 / sick-05)
                                  :ARG1-of (c11-12 / dirty-02)
                                  :ARG0-of (c11-15 / try-01
                                                   :ARG1 (c11-6 / install-01
                                                                :ARG0 c11-10
                                                                :ARG1 c11-10)))
                    :ARG1 (c11-1 / we))
        :op2 (c11-7 / want-01
                    :ARG0 c11-1
                    :ARG1 (c11-0 / join-01
                                 :ARG0 c11-10
                                 :ARG1 c11-1
                                 :ARG2 (c11-3 / practice-01
                                              :ARG0 c11-10
                                              :ARG1 (c11-5 / evolve-01
                                                           :ARG1 c11-10))))
        :op3 (c11-4 / burn-01
                    :ARG0 c11-10
                    :ARG1 (c11-13 / book
                                  :name (c11-9 / name
                                               :op1 "Koran"))))

# ::snt ISIS is one of the group use by Satan to distrupt the world.
# ::tokens ["ISIS", "is", "one", "of", "the", "group", "use", "by", "Satan", "to", "distrupt", "the", "world", "."]
# ::lemmas ["ISIS", "be", "one", "of", "the", "group", "use", "by", "Satan", "to", "distrupt", "the", "world", "."]
(c12-2 / include-91
       :ARG1 (c12-7 / criminal-organization
                    :name (c12-3 / name
                                 :op1 "ISI"))
       :ARG2 (c12-8 / group
                    :ARG1-of (c12-1 / use-01
                                    :ARG0 (c12-5 / person
                                                 :name (c12-4 / name
                                                              :op1 "Satan"))
                                    :ARG2 (c12-6 / disrupt-01
                                                 :ARG0 c12-5
                                                 :ARG1 (c12-0 / world)))))

# ::snt its not racist wanting to change their idealogy, they get it from the Koran
# ::tokens ["its", "not", "racist", "wanting", "to", "change", "their", "idealogy", ",", "they", "get", "it", "from", "the", "Koran"]
# ::lemmas ["its", "not", "racist", "want", "to", "change", "their", "idealogy", ",", "they", "get", "it", "from", "the", "Koran"]
(c13-6 / contrast-01
       :ARG1 (c13-5 / racist
                    :ARG0-of (c13-0 / want-01
                                    :ARG1 (c13-4 / change-01
                                                 :ARG0 c13-5
                                                 :ARG1 (c13-2 / idealogy
                                                              :poss c13-5)))
                    :polarity -)
       :ARG2 (c13-7 / get-01
                    :ARG0 c13-5
                    :ARG1 c13-4
                    :ARG2 (c13-1 / book
                                 :name (c13-3 / name
                                              :op1 "Koran"))))

# ::snt media shouldn't provide airtime via live coverage &amp; discourage these unacceptable acts that would help secure innocent ppl's safety
# ::tokens ["media", "should", "n't", "provide", "airtime", "via", "live", "coverage", "&", "amp", ";", "discourage", "these", "unacceptable", "acts", "that", "would", "help", "secure", "innocent", "ppl", "'s", "safety"]
# ::lemmas ["medium", "should", "not", "provide", "airtime", "via", "live", "coverage", "&", "amp", ";", "discourage", "these", "unacceptable", "act", "that", "would", "help", "secure", "innocent", "ppl", "'s", "safety"]
(c14-0 / multi-sentence
       :snt1 (c14-12 / recommend-01
                     :ARG1 (c14-1 / provide-01
                                  :ARG0 (c14-11 / media)
                                  :ARG1 (c14-5 / airtime)
                                  :medium (c14-13 / and
                                                  :op1 (c14-16 / cover-03
                                                               :manner (c14-7 / live))
                                                  :op2 (c14-10 / amp)))
                     :polarity -)
       :snt2 (c14-2 / discourage-01
                    :ARG2 (c14-17 / act-02
                                  :mod (c14-18 / this)
                                  :ARG1-of (c14-15 / accept-01
                                                   :ARG1-of (c14-4 / possible-01
                                                                   :polarity -))
                                  :ARG0-of (c14-6 / help-01
                                                  :ARG1 (c14-3 / secure-02
                                                               :ARG1 (c14-9 / safe-01
                                                                            :ARG1 (c14-8 / person
                                                                                         :ARG1-of (c14-14 / innocent-01))))))))

# ::snt tv from Sydney
# ::tokens ["tv", "from", "Sydney"]
# ::lemmas ["tv", "from", "Sydney"]
(c15-2 / television
       :source (c15-1 / city
                      :name (c15-0 / name
                                   :op1 "Sydney")))

# ::snt Thats's so messed up, especially having customers pressed up against the windows with their hands up
# ::tokens ["That", "s", "'s", "so", "messed", "up", ",", "especially", "having", "customers", "pressed", "up", "against", "the", "windows", "with", "their", "hands", "up"]
# ::lemmas ["that", "s", "'s", "so", "mess", "up", ",", "especially", "have", "customer", "press", "up", "against", "the", "window", "with", "their", "hand", "up"]
(c16-2 / mess-up-02
       :ARG0 (c16-0 / have-04
                    :ARG1 (c16-5 / press-01
                                 :ARG1 (c16-6 / customer
                                              :part (c16-11 / hand
                                                            :ARG1-of (c16-3 / up-03)))
                                 :ARG2 (c16-9 / against
                                              :op1 (c16-1 / window))
                                 :manner (c16-8 / up-03
                                                :ARG1 c16-11))
                    :mod (c16-4 / especially))
       :ARG1 (c16-10 / that)
       :degree (c16-7 / so))

# ::snt that's where these monkies get their sick death cult idealogy, their hate for you has already been established
# ::tokens ["that", "'s", "where", "these", "monkies", "get", "their", "sick", "death", "cult", "idealogy", ",", "their", "hate", "for", "you", "has", "already", "been", "established"]
# ::lemmas ["that", "be", "where", "these", "monkie", "get", "their", "sick", "death", "cult", "idealogy", ",", "their", "hate", "for", "you", "have", "already", "be", "establish"]
(c17-12 / and
        :op1 (c17-8 / get-01
                    :ARG0 (c17-2 / monkie
                                 :mod (c17-11 / this))
                    :ARG1 (c17-5 / idealogy
                                 :mod (c17-7 / cult
                                             :mod (c17-6 / die-01))
                                 :ARG1-of (c17-10 / sick-02)
                                 :poss c17-2)
                    :location (c17-9 / that))
        :op2 (c17-3 / establish-01
                    :ARG1 (c17-0 / hate-01
                                 :ARG0 c17-2
                                 :ARG1 (c17-1 / you))
                    :time (c17-4 / already)))

# ::snt I hate when ISIS interrupts the lefts narrative
# ::tokens ["I", "hate", "when", "ISIS", "interrupts", "the", "lefts", "narrative"]
# ::lemmas ["i", "hate", "when", "ISIS", "interrupt", "the", "left", "narrative"]
(c18-0 / hate-01
       :ARG0 (c18-2 / i)
       :ARG1 (c18-6 / interrupt-01
                    :ARG0 (c18-5 / criminal-organization
                                 :name (c18-3 / name
                                              :op1 "Islamic"
                                              :op2 "organization"))
                    :ARG1 (c18-4 / narrate-01
                                 :ARG0 (c18-1 / left-19))))

# ::snt thanks for your concern
# ::tokens ["thanks", "for", "your", "concern"]
# ::lemmas ["thank", "for", "your", "concern"]
(c19-2 / thank-01
       :ARG1 (c19-0 / you)
       :ARG2 (c19-1 / concern-01
                    :ARG1 c19-0))

# ::snt Latest from : Hostages being held in Sydney, Australia cafe.
# ::tokens ["Latest", "from", ":", "Hostages", "being", "held", "in", "Sydney", ",", "Australia", "cafe", "."]
# ::lemmas ["latest", "from", ":", "hostage", "be", "hold", "in", "Sydney", ",", "Australia", "cafe", "."]
(c20-2 / be-from-91
       :ARG2 (c20-0 / hostage
                    :ARG1-of (c20-8 / hold-04
                                    :location (c20-6 / cafe
                                                     :location (c20-5 / city
                                                                      :name (c20-3 / name
                                                                                   :op1 "Sydney")
                                                                      :location (c20-7 / country
                                                                                       :name (c20-4 / name
                                                                                                    :op1 "Australia"))))))
       :mod (c20-1 / last))

# ::snt And you get your ideology from your upbringing or the bible. See where this is going? Turn the tables.
# ::tokens ["And", "you", "get", "your", "ideology", "from", "your", "upbringing", "or", "the", "bible", ".", "See", "where", "this", "is", "going", "?", "Turn", "the", "tables", "."]
# ::lemmas ["and", "you", "get", "your", "ideology", "from", "your", "upbringing", "or", "the", "bible", ".", "see", "where", "this", "be", "go", "?", "turn", "the", "table", "."]
(c21-2 / multi-sentence
       :snt1 (c21-17 / and
                     :op2 (c21-12 / get-01
                                  :ARG0 (c21-0 / you)
                                  :ARG1 (c21-7 / ideology
                                               :poss c21-0)
                                  :ARG2 (c21-4 / or
                                               :op1 (c21-3 / bring-up-08
                                                           :ARG1 c21-0)
                                               :op2 (c21-11 / book
                                                            :name (c21-8 / name
                                                                         :op1 "Bible")))))
       :snt2 c21-2
       :snt3 (c21-14 / see-01
                     :polarity (c21-6 / amr-unknown)
                     :ARG0 (c21-13 / you)
                     :ARG1 (c21-1 / location
                                  :ARG4-of (c21-10 / go-01
                                                   :ARG1 (c21-16 / this))))
       :snt4 (c21-15 / turn-01
                     :ARG0 (c21-5 / you)
                     :ARG1 (c21-9 / table)
                     :mode imperative))

# ::snt have a good day today is my th birthday and I am lucky to be on in great country Canada
# ::tokens ["have", "a", "good", "day", "today", "is", "my", "th", "birthday", "and", "I", "am", "lucky", "to", "be", "on", "in", "great", "country", "Canada"]
# ::lemmas ["have", "a", "good", "day", "today", "be", "my", "th", "birthday", "and", "i", "be", "lucky", "to", "be", "on", "in", "great", "country", "Canada"]
(c22-14 / and
        :op1 (c22-0 / have-03
                    :ARG0 (c22-1 / you)
                    :ARG1 (c22-7 / day
                                 :ARG1-of (c22-9 / good-02
                                                 :ARG2 c22-1))
                    :time (c22-13 / today)
                    :ARG1-of (c22-8 / cause-01
                                    :ARG0 (c22-3 / birthday
                                                 :poss (c22-5 / i)
                                                 :ord (c22-4 / ordinal-entity
                                                             :value 4)))
                    :mode imperative)
        :op2 (c22-2 / lucky
                    :domain c22-5
                    :ARG1-of c22-8
                    :ARG0 (c22-10 / be-located-at-91
                                  :ARG1 c22-5
                                  :ARG2 (c22-11 / country
                                                :name (c22-6 / name
                                                             :op1 "Canada")
                                                :mod (c22-12 / great)))))

# ::snt oh no i hope this doesnt end in tragedy... wont be able to sleep tonight
# ::tokens ["oh", "no", "i", "hope", "this", "does", "nt", "end", "in", "tragedy", "...", "wo", "nt", "be", "able", "to", "sleep", "tonight"]
# ::lemmas ["oh", "no", "i", "hope", "this", "do", "not", "end", "in", "tragedy", "...", "will", "not", "be", "able", "to", "sleep", "tonight"]
(c23-1 / multi-sentence
       :snt1 (c23-0 / hope-01
                    :ARG0 (c23-4 / i)
                    :ARG1 (c23-3 / end-01
                                 :ARG1 (c23-11 / this)
                                 :ARG2 (c23-9 / tragedy)
                                 :polarity -)
                    :mod (c23-2 / oh-no
                                :mode expressive))
       :snt2 (c23-7 / possible-01
                    :ARG1 (c23-10 / sleep-01
                                  :ARG0 c23-4
                                  :time (c23-8 / date-entity
                                               :dayperiod (c23-5 / night)
                                               :mod (c23-6 / today)))
                    :polarity -))
