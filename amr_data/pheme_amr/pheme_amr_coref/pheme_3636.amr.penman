# ::snt Mindanao is a live fire zone sponsored by the arms Cos. test their armaments. It intentional.
# ::tokens ["Mindanao", "is", "a", "live", "fire", "zone", "sponsored", "by", "the", "arms", "Cos", ".", "test", "their", "armaments", ".", "It", "intentional", "."]
# ::lemmas ["Mindanao", "be", "a", "live", "fire", "zone", "sponsor", "by", "the", "arm", "cos", ".", "test", "their", "armament", ".", "it", "intentional", "."]
(c1-2 / multi-sentence
      :snt1 (c1-1 / zone
                  :location-of (c1-0 / live-01)
                  :domain (c1-6 / city
                                :name (c1-5 / name
                                            :op1 "Mindanao"))
                  :location-of (c1-9 / test-01
                                     :ARG0 (c1-3 / organization
                                                 :name c1-5
                                                 :op1 "Arms"
                                                 :op2 "Cos."))
                  :ARG1 (c1-10 / armament
                               :poss (c1-8 / they)))
      :snt2 (c1-4 / intend-01
                  :ARG1 (c1-7 / it)))

# ::snt I read there is three.
# ::tokens ["I", "read", "there", "is", "three", "."]
# ::lemmas ["i", "read", "there", "be", "three", "."]
(c2-0 / read-01
      :ARG0 (c2-2 / i)
      :ARG1 (c2-1 / there
                  :quant 3))

# ::snt Drench him in pigs blood.
# ::tokens ["Drench", "him", "in", "pigs", "blood", "."]
# ::lemmas ["Drench", "he", "in", "pig", "blood", "."]
(c3-4 / drench-01
      :ARG0 (c3-1 / you)
      :ARG1 (c3-0 / he)
      :ARG2 (c3-2 / blood
                  :poss (c3-3 / pig))
      :mode imperative)

# ::snt But don't waterboard em.
# ::tokens ["But", "do", "n't", "waterboard", "em", "."]
# ::lemmas ["but", "do", "not", "waterboard", "em", "."]
(c4-2 / contrast-01
      :ARG2 (c4-3 / board-01
                  :ARG0 (c4-1 / you)
                  :ARG1 (c4-0 / they)
                  :mode imperative
                  :polarity -))

# ::snt But that's illegal!
# ::tokens ["But", "that", "'s", "illegal", "!"]
# ::lemmas ["but", "that", "be", "illegal", "!"]
(c5-2 / contrast-01
      :ARG2 (c5-1 / legal-02
                  :ARG1 (c5-0 / that)
                  :polarity -))

# ::snt For fuck sake. Are not the relatives of the hostages going through enough as it is.All for a scoop. Disgusting
# ::tokens ["For", "fuck", "sake", ".", "Are", "not", "the", "relatives", "of", "the", "hostages", "going", "through", "enough", "as", "it", "is", ".", "All", "for", "a", "scoop", ".", "Disgusting"]
# ::lemmas ["for", "fuck", "sake", ".", "be", "not", "the", "relative", "of", "the", "hostage", "go", "through", "enough", "as", "it", "be", ".", "all", "for", "a", "scoop", ".", "disgusting"]
(c6-2 / multi-sentence
      :snt1 (c6-0 / have-purpose-91
                  :ARG2 (c6-12 / sake
                               :mod (c6-1 / fuck)))
      :snt2 (c6-14 / have-condition-91
                   :ARG1 (c6-8 / have-rel-role-91
                               :ARG1 (c6-4 / hostage)
                               :ARG2 (c6-9 / relative)
                               :polarity -)
                   :ARG2 (c6-11 / go-through-20
                                :ARG1 (c6-7 / it)
                                :ARG1-of (c6-3 / have-quant-91
                                               :ARG3 (c6-5 / enough))))
      :snt3 (c6-13 / all
                   :purpose (c6-6 / scoop-01))
      :snt4 (c6-10 / disgust-01))

# ::snt smh
# ::tokens ["smh"]
# ::lemmas ["smh"]
(c7-0 / smh
      :mode expressive)

# ::snt Good news feeds. So sick of religious F%4heads! Smoke these bastards!
# ::tokens ["Good", "news", "feeds", ".", "So", "sick", "of", "religious", "F%4heads", "!", "Smoke", "these", "bastards", "!"]
# ::lemmas ["good", "news", "feed", ".", "so", "sick", "of", "religious", "f%4head", "!", "smoke", "these", "bastard", "!"]
(c8-2 / multi-sentence
      :snt1 (c8-1 / feed
                  :mod (c8-6 / news)
                  :ARG1-of (c8-8 / good-02))
      :snt2 (c8-9 / sick-04
                  :ARG0 (c8-7 / religious)
                  :ARG1 (c8-4 / bastard
                              :mod (c8-10 / this))
                  :degree (c8-5 / so))
      :snt3 (c8-3 / smoke-02
                  :ARG0 (c8-0 / you)
                  :ARG1 c8-4
                  :mod c8-10
                  :mode imperative))

# ::snt Raise your hand if you're surprised. : gunman has improvised explosive device
# ::tokens ["Raise", "your", "hand", "if", "you", "'re", "surprised", ".", ":", "gunman", "has", "improvised", "explosive", "device"]
# ::lemmas ["raise", "your", "hand", "if", "you", "be", "surprised", ".", ":", "gunman", "have", "improvise", "explosive", "device"]
(c9-2 / multi-sentence
      :snt1 (c9-5 / raise-01
                  :ARG0 (c9-1 / you
                              :part (c9-0 / hand
                                          :ARG1-of c9-5))
                  :condition (c9-8 / surprise-01
                                   :ARG1 c9-1)
                  :mode imperative)
      :snt2 (c9-3 / explode-01
                  :ARG0 (c9-7 / gunman)
                  :ARG1 (c9-6 / device
                              :ARG1-of (c9-4 / improvise-01))))

# ::snt NATO has taught these terrorists, now they are trained on you. Why Australia is dissatisfied?
# ::tokens ["NATO", "has", "taught", "these", "terrorists", ",", "now", "they", "are", "trained", "on", "you", ".", "Why", "Australia", "is", "dissatisfied", "?"]
# ::lemmas ["NATO", "have", "teach", "these", "terrorist", ",", "now", "they", "be", "train", "on", "you", ".", "why", "Australia", "be", "dissatisfy", "?"]
(c10-1 / multi-sentence
       :snt1 (c10-14 / and
                     :op1 (c10-13 / teach-01
                                  :ARG0 (c10-6 / military
                                               :name (c10-4 / name
                                                            :op1 "NATO"))
                                  :ARG1 (c10-11 / terrorist
                                                :mod (c10-5 / this)))
                     :op2 (c10-2 / train-01
                                 :ARG0 c10-6
                                 :ARG2 (c10-0 / you)
                                 :time (c10-7 / now)))
       :snt2 (c10-8 / dissatisfy-01
                    :ARG1 (c10-9 / country
                                 :name (c10-10 / name
                                               :op1 "Australia"))
                    :ARG1-of (c10-12 / cause-01
                                     :ARG0 (c10-3 / amr-unknown))))

# ::snt : gunman has improvised explosive device well isn't this freaking predictable.murderers!
# ::tokens [":", "gunman", "has", "improvised", "explosive", "device", "well", "is", "n't", "this", "freaking", "predictable.murderers", "!"]
# ::lemmas [":", "gunman", "have", "improvise", "explosive", "device", "well", "be", "not", "this", "freak", "predictable.murderer", "!"]
(c11-2 / multi-sentence
       :snt1 (c11-6 / possible-01
                    :ARG1 (c11-10 / predict-01
                                  :ARG1 (c11-7 / device
                                               :ARG1-of (c11-4 / explode-01
                                                               :ARG1-of c11-6))
                                  :ARG1-of (c11-5 / improvise-01
                                                  :ARG0 (c11-9 / gunman)))
                    :polarity -)
       :mod (c11-0 / well)
       :mod (c11-1 / freaking
                   :mode expressive)
       :snt2 (c11-3 / person
                    :ARG0-of (c11-8 / murder-01)))

# ::snt don't let Obama tell you it's just
# ::tokens ["do", "n't", "let", "Obama", "tell", "you", "it", "'s", "just"]
# ::lemmas ["do", "not", "let", "Obama", "tell", "you", "it", "be", "just"]
(c12-2 / let-01
       :ARG0 (c12-1 / you)
       :ARG1 (c12-5 / tell-01
                    :ARG0 (c12-4 / person
                                 :name (c12-3 / name
                                              :op1 "Obama"))
                    :ARG1 (c12-0 / just-02)
                    :ARG2 c12-1)
       :polarity -
       :mode imperative)

# ::snt did that work in the Philippines years ago? Tell me about Mindanao now.
# ::tokens ["did", "that", "work", "in", "the", "Philippines", "years", "ago", "?", "Tell", "me", "about", "Mindanao", "now", "."]
# ::lemmas ["do", "that", "work", "in", "the", "Philippines", "years", "ago", "?", "tell", "i", "about", "Mindanao", "now", "."]
(c13-2 / multi-sentence
       :snt1 (c13-0 / work-09
                    :polarity (c13-15 / amr-unknown)
                    :ARG1 (c13-14 / that)
                    :location (c13-9 / country
                                     :name (c13-5 / name
                                                  :op1 "Philippines"))
                    :time (c13-3 / before
                                 :op1 (c13-6 / now)
                                 :quant (c13-7 / multiple
                                               :op1 (c13-12 / temporal-quantity
                                                            :unit (c13-1 / year)
                                                            :quant 1))))
       :snt2 (c13-8 / tell-01
                    :ARG0 (c13-16 / you)
                    :ARG1 (c13-4 / island
                                 :name (c13-10 / name
                                               :op1 "Mindanao"))
                    :ARG2 (c13-11 / i)
                    :time (c13-13 / now)
                    :mode imperative))

# ::snt Stuff this PC crap. Im sick of these Islamists.
# ::tokens ["Stuff", "this", "PC", "crap", ".", "I", "m", "sick", "of", "these", "Islamists", "."]
# ::lemmas ["stuff", "this", "pc", "crap", ".", "i", "m", "sick", "of", "these", "Islamists", "."]
(c14-1 / multi-sentence
       :snt1 (c14-10 / stuff-01
                     :ARG0 (c14-0 / you)
                     :ARG2 (c14-7 / crap
                                  :mod (c14-6 / correct-02
                                              :mod (c14-5 / politics))
                                  :mod (c14-11 / this))
                     :mode imperative)
       :snt2 (c14-2 / sick-04
                    :ARG0 (c14-12 / person
                                  :mod (c14-8 / religious-group
                                              :name (c14-4 / name
                                                           :op1 "Islamism"))
                                  :mod (c14-9 / this))
                    :ARG1 (c14-3 / i)))

# ::snt Ugh. RT gunman has improvised explosive device
# ::tokens ["Ugh", ".", "RT", "gunman", "has", "improvised", "explosive", "device"]
# ::lemmas ["Ugh", ".", "RT", "gunman", "have", "improvise", "explosive", "device"]
(c15-1 / explode-01
       :ARG0 (c15-5 / gunman
                    :mod (c15-3 / publication
                                :name (c15-2 / name
                                             :op1 "RT")))
       :ARG1 (c15-4 / device
                    :ARG1-of (c15-6 / possible-01)
                    :ARG1-of c15-1)
       :mod (c15-0 / ugh
                   :mode expressive))

# ::snt there is one, according to police chief.
# ::tokens ["there", "is", "one", ",", "according", "to", "police", "chief", "."]
# ::lemmas ["there", "be", "one", ",", "accord", "to", "police", "chief", "."]
(c16-4 / say-01
       :ARG0 (c16-3 / chief
                    :ARG2-of (c16-0 / have-org-role-91
                                    :ARG1 (c16-2 / police)))
       :ARG1 (c16-1 / one))

# ::snt Because there is only one hostage taker, he will need to sleep, eventually.
# ::tokens ["Because", "there", "is", "only", "one", "hostage", "taker", ",", "he", "will", "need", "to", "sleep", ",", "eventually", "."]
# ::lemmas ["because", "there", "be", "only", "one", "hostage", "taker", ",", "he", "will", "need", "to", "sleep", ",", "eventually", "."]
(c17-5 / cause-01
       :ARG0 (c17-4 / person
                    :ARG0-of (c17-7 / take-01
                                    :ARG1 (c17-0 / hostage))
                    :mod (c17-1 / only)
                    :quant 1)
       :ARG1 (c17-3 / need-01
                    :ARG0 (c17-8 / he)
                    :ARG1 (c17-6 / sleep-01
                                 :ARG0 c17-8)
                    :time (c17-2 / eventual)))
