# ::snt I know you are just calling it as you see it. I get it.
# ::tokens ["I", "know", "you", "are", "just", "calling", "it", "as", "you", "see", "it", ".", "I", "get", "it", "."]
# ::lemmas ["i", "know", "you", "be", "just", "call", "it", "as", "you", "see", "it", ".", "i", "get", "it", "."]
(c1-3 / multi-sentence
      :snt1 (c1-11 / know-01
                   :ARG0 (c1-5 / i)
                   :ARG1 (c1-7 / call-01
                               :ARG0 (c1-1 / you)
                               :ARG1 (c1-8 / it)
                               :mod (c1-0 / just)
                               :manner (c1-10 / see-01
                                              :ARG0 c1-1
                                              :ARG1 (c1-2 / it))))
      :snt2 (c1-9 / get-30
                  :ARG0 (c1-4 / i)
                  :ARG1 (c1-6 / it)))

# ::snt Happening now in where was killed.
# ::tokens ["Happening", "now", "in", "where", "was", "killed", "."]
# ::lemmas ["happen", "now", "in", "where", "be", "kill", "."]
(c2-1 / be-located-at-91
      :ARG1 (c2-2 / event)
      :ARG2 (c2-0 / location
                  :location-of (c2-4 / kill-01))
      :time (c2-3 / now))

# ::snt : Happening now in where was killed.
# ::tokens [":", "Happening", "now", "in", "where", "was", "killed", "."]
# ::lemmas [":", "happen", "now", "in", "where", "be", "kill", "."]
(c3-1 / be-located-at-91
      :ARG1 (c3-2 / event)
      :ARG2 (c3-0 / location
                  :location-of (c3-4 / kill-01))
      :time (c3-3 / now))

# ::snt Every individual in that pic needs to get on grieve their complaints to the world...
# ::tokens ["Every", "individual", "in", "that", "pic", "needs", "to", "get", "on", "grieve", "their", "complaints", "to", "the", "world", "..."]
# ::lemmas ["every", "individual", "in", "that", "pic", "need", "to", "get", "on", "grieve", "their", "complaint", "to", "the", "world", "..."]
(c4-3 / need-01
      :ARG0 (c4-2 / individual
                  :mod (c4-1 / every)
                  :location (c4-4 / pic))
      :ARG1 (c4-6 / grieve-01
                  :ARG0 c4-2
                  :ARG1 (c4-5 / complain-01
                              :ARG0 c4-2
                              :ARG2 (c4-0 / world))))

# ::snt make them arrest that asshole. mins in gen pop please
# ::tokens ["make", "them", "arrest", "that", "asshole", ".", "mins", "in", "gen", "pop", "please"]
# ::lemmas ["make", "they", "arrest", "that", "asshole", ".", "min", "in", "gen", "pop", "please"]
(c5-2 / multi-sentence
      :snt1 (c5-6 / make-02
                  :ARG0 (c5-0 / you)
                  :ARG1 (c5-11 / arrest-01
                               :ARG0 (c5-10 / they)
                               :ARG1 (c5-4 / asshole
                                           :mod (c5-9 / that)))
                  :mode imperative)
      :snt2 (c5-3 / be-located-at-91
                  :ARG2 (c5-7 / pop
                              :mod (c5-8 / gen))
                  :duration (c5-5 / temporal-quantity
                                  :unit (c5-1 / minute)
                                  :quant 1)
                  :polite +))

# ::snt is doing award winning coverage of the shooting in . I trust in now than any other media outlet.
# ::tokens ["is", "doing", "award", "winning", "coverage", "of", "the", "shooting", "in", ".", "I", "trust", "in", "now", "than", "any", "other", "media", "outlet", "."]
# ::lemmas ["be", "do", "award", "win", "coverage", "of", "the", "shooting", "in", ".", "i", "trust", "in", "now", "than", "any", "other", "medium", "outlet", "."]
(c6-3 / multi-sentence
      :snt1 (c6-11 / cover-03
                   :ARG0 (c6-0 / he)
                   :ARG1 (c6-12 / shoot-02)
                   :ARG0-of (c6-1 / win-01
                                  :ARG1 (c6-14 / award)))
      :snt2 (c6-13 / trust-02
                   :ARG0 (c6-8 / i)
                   :time (c6-9 / now)
                   :ARG2-of (c6-2 / have-degree-91
                                  :ARG1 c6-8
                                  :ARG3 (c6-10 / more)
                                  :ARG4 (c6-6 / outlet
                                              :mod (c6-4 / media)
                                              :mod (c6-7 / any)
                                              :mod (c6-5 / other)))))

# ::snt I hate violence and don't want to see the ppl of Ferguson die but I believe it is time to stand up against copsDays of RAGE
# ::tokens ["I", "hate", "violence", "and", "do", "n't", "want", "to", "see", "the", "ppl", "of", "Ferguson", "die", "but", "I", "believe", "it", "is", "time", "to", "stand", "up", "against", "copsDays", "of", "RAGE"]
# ::lemmas ["i", "hate", "violence", "and", "do", "not", "want", "to", "see", "the", "ppl", "of", "Ferguson", "die", "but", "i", "believe", "it", "be", "time", "to", "stand", "up", "against", "copsday", "of", "RAGE"]
(c7-16 / contrast-01
       :ARG1 (c7-7 / and
                   :op1 (c7-8 / hate-01
                              :ARG0 (c7-13 / i)
                              :ARG1 (c7-2 / violence))
                   :op2 (c7-12 / want-01
                               :ARG0 c7-13
                               :ARG1 (c7-6 / see-01
                                           :ARG0 c7-13
                                           :ARG1 (c7-4 / die-01
                                                       :ARG1 (c7-3 / person
                                                                   :mod (c7-5 / city
                                                                              :name (c7-11 / name
                                                                                           :op1 "Ferguson")))))
                               :polarity -))
       :ARG2 (c7-9 / believe-01
                   :ARG0 c7-13
                   :ARG1 (c7-18 / time
                                :time-of (c7-10 / stand-up-07
                                                :ARG1 (c7-15 / you)
                                                :prep-against (c7-14 / cop))))
       :duration (c7-1 / multiple
                       :op1 (c7-17 / temporal-quantity
                                   :unit (c7-0 / day)
                                   :quant 1)))

# ::snt LATEST ON MICHAEL BROWN LOOK ON
# ::tokens ["LATEST", "ON", "MICHAEL", "BROWN", "LOOK", "ON"]
# ::lemmas ["LATEST", "ON", "MICHAEL", "BROWN", "look", "on"]
(c8-2 / look-on-09
      :ARG0 (c8-1 / person
                  :name (c8-0 / name
                              :op1 "Michael"
                              :op2 "Brown"))
      :mod (c8-3 / especially)
      :mode expressive)

# ::snt : Happening now in where was killed.
# ::tokens [":", "Happening", "now", "in", "where", "was", "killed", "."]
# ::lemmas [":", "happen", "now", "in", "where", "be", "kill", "."]
(c9-1 / be-located-at-91
      :ARG1 (c9-2 / event)
      :ARG2 (c9-0 / location
                  :location-of (c9-4 / kill-01))
      :time (c9-3 / now))

# ::snt ": Happening now in where was killed. "
# ::tokens ["\"", ":", "Happening", "now", "in", "where", "was", "killed", ".", "\""]
# ::lemmas ["\"", ":", "happen", "now", "in", "where", "be", "kill", ".", "\""]
(c10-1 / be-located-at-91
       :ARG1 (c10-2 / event)
       :ARG2 (c10-0 / location
                    :location-of (c10-4 / kill-01))
       :time (c10-3 / now))

# ::snt should do time.
# ::tokens ["should", "do", "time", "."]
# ::lemmas ["should", "do", "time", "."]
(c11-1 / recommend-01
       :ARG1 (c11-0 / do-02
                    :ARG1 (c11-2 / time)))

# ::snt I can't with you right now sir ratchet ness
# ::tokens ["I", "ca", "n't", "with", "you", "right", "now", "sir", "ratchet", "ness"]
# ::lemmas ["i", "can", "not", "with", "you", "right", "now", "sir", "ratchet", "ness"]
(c12-5 / say-01
       :ARG0 (c12-0 / i)
       :ARG1 (c12-3 / possible-01
                    :ARG1 (c12-7 / accompany-01
                                 :ARG0 c12-0
                                 :ARG1 (c12-6 / person
                                              :name (c12-1 / name
                                                           :op1 "Ratchet"))
                                 :time (c12-2 / now
                                              :mod (c12-4 / right)))
                    :polarity -)
       :ARG2 c12-6)

# ::snt Like wtf are yall doing?? RT Happening now in where was killed.
# ::tokens ["Like", "wtf", "are", "y", "all", "doing", "?", "?", "RT", "Happening", "now", "in", "where", "was", "killed", "."]
# ::lemmas ["like", "wtf", "be", "you", "all", "do", "?", "?", "RT", "Happening", "now", "in", "where", "be", "kill", "."]
(c13-2 / multi-sentence
       :snt1 (c13-9 / do-02
                    :ARG0 (c13-0 / you
                                 :mod (c13-12 / all))
                    :ARG1 (c13-5 / amr-unknown
                                 :mod (c13-1 / fuck
                                             :mod-of c13-9
                                             :mode expressive))
                    :mode expressive)
       :snt2 (c13-3 / be-located-at-91
                    :ARG1 (c13-4 / event
                                 :ARG1-of (c13-10 / broadcast-program
                                                  :name (c13-6 / name
                                                               :op1 "RT")))
                    :ARG2 (c13-7 / amr-unknown
                                 :location-of (c13-11 / kill-01))
                    :time (c13-8 / now)))

# ::snt are they actually going to do anything though? We know the cop isn't going to do time
# ::tokens ["are", "they", "actually", "going", "to", "do", "anything", "though", "?", "We", "know", "the", "cop", "is", "n't", "going", "to", "do", "time"]
# ::lemmas ["be", "they", "actually", "go", "to", "do", "anything", "though", "?", "we", "know", "the", "cop", "be", "not", "go", "to", "do", "time"]
(c14-3 / multi-sentence
       :snt1 (c14-0 / have-concession-91
                    :ARG1 (c14-7 / do-02
                                 :polarity (c14-11 / amr-unknown)
                                 :ARG0 (c14-10 / they)
                                 :ARG1 (c14-4 / anything)
                                 :ARG1-of (c14-6 / actual-02)))
       :snt2 (c14-5 / know-01
                    :ARG0 (c14-1 / we)
                    :ARG1 (c14-2 / do-02
                                 :ARG0 (c14-8 / cop)
                                 :ARG1 (c14-9 / time)
                                 :polarity -)))

# ::snt That's every Sunday tho : Happening now in where was killed.
# ::tokens ["That", "'s", "every", "Sunday", "tho", ":", "Happening", "now", "in", "where", "was", "killed", "."]
# ::lemmas ["that", "be", "every", "Sunday", "tho", ":", "happen", "now", "in", "where", "be", "kill", "."]
(c15-2 / multi-sentence
       :snt1 (c15-0 / have-concession-91
                    :ARG1 (c15-9 / that
                                 :frequency (c15-6 / rate-entity-91
                                                   :ARG3 (c15-7 / date-entity
                                                                :weekday (c15-8 / sunday)))))
       :snt2 (c15-3 / event
                    :time (c15-5 / now)
                    :location (c15-1 / location
                                     :ARG1-of (c15-4 / kill-01))))

# ::snt I'm really not trying to joke but that's nothing special
# ::tokens ["I", "'m", "really", "not", "trying", "to", "joke", "but", "that", "'s", "nothing", "special"]
# ::lemmas ["i", "be", "really", "not", "try", "to", "joke", "but", "that", "be", "nothing", "special"]
(c16-4 / try-01
       :ARG0 (c16-1 / i)
       :ARG1 (c16-0 / joke-01
                    :ARG0 c16-1)
       :ARG1-of (c16-2 / real-04)
       :concession (c16-3 / special-02
                          :ARG1 c16-0
                          :polarity -)
       :polarity -)

# ::snt ppl need to start demanding resignations and start at the top no excuses sorry won't cut it anymore
# ::tokens ["ppl", "need", "to", "start", "demanding", "resignations", "and", "start", "at", "the", "top", "no", "excuses", "sorry", "wo", "n't", "cut", "it", "anymore"]
# ::lemmas ["ppl", "need", "to", "start", "demand", "resignation", "and", "start", "at", "the", "top", "no", "excuse", "sorry", "will", "not", "cut", "it", "anymore"]
(c17-1 / multi-sentence
       :snt1 (c17-5 / need-01
                    :ARG0 (c17-7 / person
                                 :name (c17-6 / name
                                              :op1 "ppl"))
                    :ARG1 (c17-13 / and
                                  :op1 (c17-11 / start-01
                                               :ARG0 c17-7
                                               :ARG1 (c17-8 / demand-01
                                                            :ARG0 c17-7
                                                            :ARG1 (c17-9 / resign-01
                                                                         :ARG0 c17-7)))
                                  :op2 (c17-2 / start-01
                                              :ARG0 c17-7
                                              :ARG2 (c17-12 / top))))
       :snt2 (c17-3 / excuse-02
                    :ARG1-of (c17-0 / sorry-01)
                    :ARG0-of (c17-10 / cut-it-19
                                     :time (c17-4 / anymore)
                                     :polarity -)
                    :polarity -))
