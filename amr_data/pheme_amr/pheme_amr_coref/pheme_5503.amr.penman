# ::snt RIP soldier!
# ::tokens ["RIP", "soldier", "!"]
# ::lemmas ["RIP", "soldier", "!"]
(c1-2 / rest-01
      :ARG1 (c1-0 / soldier)
      :manner (c1-1 / peace)
      :mode expressive)

# ::snt . Bless his family, such a sad day for Canada
# ::tokens [".", "Bless", "his", "family", ",", "such", "a", "sad", "day", "for", "Canada"]
# ::lemmas [".", "bless", "his", "family", ",", "such", "a", "sad", "day", "for", "Canada"]
(c2-9 / and
      :op1 (c2-3 / bless-01
                 :ARG1 (c2-1 / family
                             :ARG1-of (c2-0 / have-org-role-91
                                            :ARG0 (c2-10 / he)
                                            :ARG2 (c2-2 / member))))
      :op2 (c2-8 / sad-02
                 :ARG1 (c2-6 / day)
                 :degree (c2-4 / such)
                 :beneficiary (c2-7 / country
                                    :name (c2-5 / name
                                                :op1 "Canada"))))

# ::snt RIP brother. U did well and died doing what you loved.
# ::tokens ["RIP", "brother", ".", "U", "did", "well", "and", "died", "doing", "what", "you", "loved", "."]
# ::lemmas ["RIP", "brother", ".", "U", "do", "well", "and", "die", "do", "what", "you", "love", "."]
(c3-4 / multi-sentence
      :snt1 (c3-1 / wish-01
                  :ARG1 (c3-9 / rest-01
                              :ARG1 (c3-8 / person
                                          :ARG0-of (c3-0 / have-rel-role-91
                                                         :ARG2 (c3-6 / brother)))
                              :manner (c3-12 / peace)))
      :snt2 (c3-13 / and
                   :op1 (c3-10 / do-02
                               :ARG0 (c3-2 / you)
                               :ARG1 (c3-7 / well-09))
                   :op2 (c3-3 / die-01
                              :ARG1 c3-2)
                   :manner (c3-14 / do-02
                                  :ARG0 c3-2
                                  :ARG1 (c3-11 / thing
                                               :ARG1-of (c3-5 / love-01
                                                              :ARG0 c3-2)))))

# ::snt So young. So sad. MT: Soldier killed at war memorial ID'd as Nathan Cirillo
# ::tokens ["So", "young", ".", "So", "sad", ".", "MT", ":", "Soldier", "killed", "at", "war", "memorial", "ID'd", "as", "Nathan", "Cirillo"]
# ::lemmas ["so", "young", ".", "so", "sad", ".", "MT", ":", "Soldier", "kill", "at", "war", "memorial", "id'd", "as", "Nathan", "Cirillo"]
(c4-4 / multi-sentence
      :snt1 (c4-1 / young
                  :degree (c4-13 / so))
      :snt2 (c4-7 / sad-02
                  :degree (c4-3 / so))
      :snt3 (c4-6 / state
                  :name (c4-9 / name
                              :op1 " MT")
                  :snt4 (c4-14 / kill-01
                               :ARG1 (c4-11 / person
                                            :ARG0-of (c4-0 / have-org-role-91
                                                           :ARG2 (c4-2 / soldier)))
                               :location (c4-12 / memorial
                                                :mod (c4-5 / war))
                               :ARG1-of (c4-8 / identify-01
                                              :ARG2 (c4-15 / person
                                                           :name (c4-10 / name
                                                                        :op1 "Nathan"
                                                                        :op2 "Cirillo"))))))

# ::snt Condolences to his loved ones. RIP - We will remember.
# ::tokens ["Condolences", "to", "his", "loved", "ones", ".", "RIP", "-", "We", "will", "remember", "."]
# ::lemmas ["condolence", "to", "his", "loved", "one", ".", "RIP", "-", "we", "will", "remember", "."]
(c5-3 / multi-sentence
      :snt1 (c5-6 / condolence
                  :beneficiary (c5-4 / one
                                     :ARG1-of (c5-2 / love-01
                                                    :ARG0 (c5-0 / he))))
      :snt2 (c5-5 / remember-01
                  :ARG0 (c5-1 / we)))

# ::snt rest well Nathan how many more must we loose before someone is done
# ::tokens ["rest", "well", "Nathan", "how", "many", "more", "must", "we", "loose", "before", "someone", "is", "done"]
# ::lemmas ["rest", "well", "Nathan", "how", "many", "more", "must", "we", "loose", "before", "someone", "be", "do"]
(c6-11 / say-01
       :ARG1 (c6-9 / rest-02
                   :ARG1 (c6-8 / person
                               :name (c6-7 / name
                                           :op1 "Nathan"))
                   :manner (c6-4 / obligate-01
                                 :ARG2 (c6-1 / loose-02
                                             :ARG0 (c6-0 / we)
                                             :ARG1 (c6-12 / thing
                                                          :quant (c6-13 / amr-unknown)
                                                          :mod (c6-2 / more))
                                             :time (c6-3 / before
                                                         :op1 (c6-10 / be-done-08
                                                                     :ARG0 (c6-5 / someone)))))
                   :ARG1-of (c6-6 / well-09))
       :ARG2 c6-8)

# ::snt Remember...
# ::tokens ["Remember", "..."]
# ::lemmas ["remember", "..."]
(c7-0 / remember-01)

# ::snt My heart goes out to his family &amp; country as they try to piece this together.
# ::tokens ["My", "heart", "goes", "out", "to", "his", "family", "&", "amp", ";", "country", "as", "they", "try", "to", "piece", "this", "together", "."]
# ::lemmas ["my", "heart", "go", "out", "to", "his", "family", "&", "amp", ";", "country", "as", "they", "try", "to", "piece", "this", "together", "."]
(c8-10 / go-01
       :ARG1 (c8-0 / heart
                   :part-of (c8-5 / i))
       :ARG4 (c8-13 / and
                    :op1 (c8-1 / family
                               :ARG1-of (c8-2 / have-org-role-91
                                              :ARG0 (c8-6 / he)
                                              :ARG2 (c8-3 / member)))
                    :op2 (c8-9 / country))
       :direction (c8-4 / out)
       :time (c8-12 / try-01
                    :ARG0 c8-13
                    :ARG1 (c8-7 / piece-01
                                :ARG0 c8-13
                                :ARG1 (c8-11 / this)
                                :ARG2 (c8-8 / together))))

# ::snt RIP you brave young man! Condolences to his family &amp; friends.
# ::tokens ["RIP", "you", "brave", "young", "man", "!", "Condolences", "to", "his", "family", "&", "amp", ";", "friends", "."]
# ::lemmas ["rip", "you", "brave", "young", "man", "!", "condolence", "to", "his", "family", "&", "amp", ";", "friend", "."]
(c9-0 / multi-sentence
      :snt1 (c9-3 / say-01
                  :ARG1 (c9-13 / rest-01
                               :ARG1 (c9-12 / man
                                            :mod (c9-16 / young)
                                            :ARG0-of (c9-11 / brave-02))
                               :manner (c9-2 / peace))
                  :ARG2 c9-12)
      :snt2 (c9-18 / condolence
                   :beneficiary (c9-6 / and
                                      :op1 (c9-8 / family
                                                 :ARG1-of (c9-7 / have-org-role-91
                                                                :ARG0 (c9-5 / he)
                                                                :ARG2 (c9-9 / member)))
                                      :op2 (c9-4 / person
                                                 :ARG0-of (c9-1 / have-rel-role-91
                                                                :ARG1 c9-5
                                                                :ARG2 (c9-10 / parent)))
                                      :op3 (c9-14 / person
                                                  :ARG0-of (c9-15 / have-rel-role-91
                                                                  :ARG1 c9-5
                                                                  :ARG2 (c9-17 / friend))))))

# ::snt . Let's remember this face instead of the shooter, when they are identified!
# ::tokens [".", "Let", "'s", "remember", "this", "face", "instead", "of", "the", "shooter", ",", "when", "they", "are", "identified", "!"]
# ::lemmas [".", "let", "us", "remember", "this", "face", "instead", "of", "the", "shooter", ",", "when", "they", "be", "identify", "!"]
(c10-5 / remember-01
       :ARG0 (c10-0 / we)
       :ARG1 (c10-1 / face
                    :mod (c10-8 / this)
                    :ARG1-of (c10-2 / instead-of-91
                                    :ARG2 (c10-3 / face
                                                 :part-of (c10-4 / person
                                                                 :ARG0-of (c10-7 / shoot-02)))))
       :time (c10-6 / identify-01
                    :ARG1 c10-1)
       :mode imperative)

# ::snt years isn't long. Every citizen of Canada feels that today. Sincere condolences to Cpl. Cirillo's family/reg't.
# ::tokens ["years", "is", "n't", "long", ".", "Every", "citizen", "of", "Canada", "feels", "that", "today", ".", "Sincere", "condolences", "to", "Cpl", ".", "Cirillo", "'s", "family", "/", "reg't", "."]
# ::lemmas ["year", "be", "not", "long", ".", "every", "citizen", "of", "Canada", "feel", "that", "today", ".", "sincere", "condolence", "to", "Cpl", ".", "Cirillo", "'s", "family", "/", "reg't", "."]
(c11-0 / multi-sentence
       :snt1 (c11-6 / long-03
                    :ARG1 (c11-12 / multiple
                                  :op1 (c11-21 / temporal-quantity
                                               :unit (c11-16 / year)
                                               :quant 1))
                    :polarity -)
       :snt2 (c11-7 / feel-01
                    :ARG0 (c11-19 / citizen
                                  :mod (c11-2 / country
                                              :name (c11-11 / name
                                                            :op1 "Canada"))
                                  :mod (c11-9 / every))
                    :ARG1 (c11-20 / that)
                    :time (c11-14 / today))
       :snt3 (c11-15 / condolence
                     :mod (c11-4 / since)
                     :beneficiary (c11-10 / slash
                                          :op1 (c11-17 / family
                                                       :ARG1-of (c11-5 / have-org-role-91
                                                                       :ARG0 (c11-1 / person
                                                                                    :name (c11-18 / name
                                                                                                  :op1 "Cpl."
                                                                                                  :op2 "Cirillo"))
                                                                       :ARG2 (c11-8 / member)))
                                          :op2 (c11-13 / government-organization
                                                       :ARG0-of (c11-3 / govern-01)))))

# ::snt : Soldier killed at war memorial: Nathan Cirillo://
# ::tokens [":", "Soldier", "killed", "at", "war", "memorial", ":", "Nathan", "Cirillo://"]
# ::lemmas [":", "Soldier", "kill", "at", "war", "memorial", ":", "Nathan", "cirillo://"]
(c12-5 / kill-01
       :ARG1 (c12-3 / person
                    :name (c12-2 / name
                                 :op1 "Nathan"
                                 :op2 "Cirillo"))
       :ARG2 (c12-4 / soldier)
       :location (c12-1 / memorial
                        :mod (c12-0 / war)))

# ::snt RIP Nathan Cirillo
# ::tokens ["RIP", "Nathan", "Cirillo"]
# ::lemmas ["RIP", "Nathan", "Cirillo"]
(c13-0 / wish-01
       :ARG1 (c13-3 / rest-01
                    :ARG1 (c13-2 / person
                                 :name (c13-1 / name
                                              :op1 "Nathan"
                                              :op2 "Cirillo"))
                    :manner (c13-4 / peace)))

# ::snt canadian hero
# ::tokens ["canadian", "hero"]
# ::lemmas ["canadian", "hero"]
(c14-0 / hero
       :mod (c14-2 / country
                   :name (c14-1 / name
                                :op1 "Canada")))

# ::snt We will say Kaddish for this hero. Be strong, neighbours
# ::tokens ["We", "will", "say", "Kaddish", "for", "this", "hero", ".", "Be", "strong", ",", "neighbours"]
# ::lemmas ["we", "will", "say", "Kaddish", "for", "this", "hero", ".", "be", "strong", ",", "neighbour"]
(c15-2 / multi-sentence
       :snt1 (c15-7 / say-01
                    :ARG0 (c15-1 / we)
                    :ARG1 (c15-6 / person
                                 :name (c15-4 / name
                                              :op1 "Kaddish"))
                    :ARG3 (c15-0 / hero
                                 :mod (c15-8 / this)))
       :snt2 (c15-3 / strong-02
                    :ARG1 (c15-9 / person
                                 :ARG1-of (c15-5 / neighbor-01))
                    :mode imperative))

# ::snt thoughts and love from Adelaide Australia,
# ::tokens ["thoughts", "and", "love", "from", "Adelaide", "Australia", ","]
# ::lemmas ["thought", "and", "love", "from", "Adelaide", "Australia", ","]
(c16-5 / and
       :op1 (c16-4 / think-01)
       :op2 (c16-0 / love-01)
       :source (c16-3 / city
                      :name (c16-1 / name
                                   :op1 "Adelaide")
                      :location (c16-2 / country
                                       :name c16-1
                                       :op1 "Australia")))

# ::snt thank you for your ultimate sacrifice
# ::tokens ["thank", "you", "for", "your", "ultimate", "sacrifice"]
# ::lemmas ["thank", "you", "for", "your", "ultimate", "sacrifice"]
(c17-2 / thank-01
       :ARG1 (c17-1 / you)
       :ARG2 (c17-0 / sacrifice-01
                    :ARG0 c17-1
                    :mod (c17-3 / ultimate)))

# ::snt God bless Nathan. Canada mourns your loss.
# ::tokens ["God", "bless", "Nathan", ".", "Canada", "mourns", "your", "loss", "."]
# ::lemmas ["God", "bless", "Nathan", ".", "Canada", "mourn", "your", "loss", "."]
(c18-2 / multi-sentence
       :snt1 (c18-3 / bless-01
                    :ARG0 (c18-6 / person
                                 :name (c18-4 / name
                                              :op1 "God"))
                    :ARG1 (c18-10 / person
                                  :name (c18-5 / name
                                               :op1 "Nathan")))
       :snt2 (c18-7 / mourn-01
                    :ARG0 (c18-8 / country
                                 :name (c18-9 / name
                                              :op1 "Canada"))
                    :ARG1 (c18-1 / lose-02
                                 :ARG0 (c18-0 / you))))

# ::snt So incredibly sad. He was just a young'un!
# ::tokens ["So", "incredibly", "sad", ".", "He", "was", "just", "a", "young'un", "!"]
# ::lemmas ["so", "incredibly", "sad", ".", "he", "be", "just", "a", "young'un", "!"]
(c19-3 / multi-sentence
       :snt1 (c19-6 / sad-02
                    :degree (c19-5 / incredible)
                    :degree (c19-4 / so))
       :snt2 (c19-1 / young
                    :domain (c19-0 / he)
                    :mod (c19-2 / just)
                    :polarity -))
