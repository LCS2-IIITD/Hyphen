# ::snt MT : nearly perfect loop around crash area by EC-135.
# ::tokens ["MT", ":", "nearly", "perfect", "loop", "around", "crash", "area", "by", "EC-135", "."]
# ::lemmas ["MT", ":", "nearly", "perfect", "loop", "around", "crash", "area", "by", "EC-135", "."]
(c1-0 / loop-01
      :ARG0 (c1-6 / product
                  :name (c1-4 / name
                              :op1 "EC-135"))
      :location (c1-11 / around
                       :op1 (c1-2 / area
                                  :location-of (c1-8 / crash-01)))
      :ARG1-of (c1-10 / perfect-02
                      :degree (c1-5 / near))
      :ARG1-of (c1-9 / say-01
                     :ARG0 (c1-3 / i)
                     :ARG2 (c1-1 / person
                                 :name (c1-7 / name
                                             :op1 "MT"))))

# ::snt : nearly perfect loop around crash area by EC-135.
# ::tokens [":", "nearly", "perfect", "loop", "around", "crash", "area", "by", "EC-135", "."]
# ::lemmas [":", "nearly", "perfect", "loop", "around", "crash", "area", "by", "EC-135", "."]
(c2-0 / loop-01
      :ARG0 (c2-4 / product
                  :name (c2-2 / name
                              :op1 "EC-135"))
      :location (c2-7 / around
                      :op1 (c2-1 / area
                                 :location-of (c2-5 / crash-01)))
      :ARG1-of (c2-6 / perfect-02
                     :degree (c2-3 / near)))

# ::snt this has more rts than any selfie of mine kys aircraft twitter
# ::tokens ["this", "has", "more", "rts", "than", "any", "selfie", "of", "mine", "kys", "aircraft", "twitter"]
# ::lemmas ["this", "have", "more", "rt", "than", "any", "selfie", "of", "mine", "kys", "aircraft", "twitter"]
(c3-5 / publication
      :name (c3-4 / name
                  :op1 "Twitter")
      :medium-of (c3-0 / have-03
                       :ARG0 (c3-8 / this)
                       :ARG1 c3-5
                       :ARG1-of (c3-9 / have-quant-91
                                      :ARG3 (c3-1 / more)
                                      :ARG4 (c3-6 / selfie
                                                  :mod (c3-7 / any)
                                                  :topic (c3-2 / aircraft
                                                               :poss (c3-3 / i))))))

# ::snt hopefully MARCOT27 will provide us with images soon, its going for its fourth flyby
# ::tokens ["hopefully", "MARCOT27", "will", "provide", "us", "with", "images", "soon", ",", "its", "going", "for", "its", "fourth", "flyby"]
# ::lemmas ["hopefully", "MARCOT27", "will", "provide", "we", "with", "image", "soon", ",", "its", "go", "for", "its", "fourth", "flyby"]
(c4-10 / and
       :op1 (c4-6 / provide-01
                  :ARG0 (c4-9 / program
                              :name (c4-5 / name
                                          :op1 "MarCOT27"))
                  :ARG1 (c4-4 / image)
                  :ARG2 (c4-1 / we)
                  :time (c4-8 / soon)
                  :ARG1-of (c4-0 / hope-01))
       :op2 (c4-7 / go-03
                  :ARG0 c4-9
                  :ARG1 (c4-2 / flyby
                              :ord (c4-3 / ordinal-entity
                                         :value 4))))

# ::snt Not retired, re-engined to R spec, was still flying &amp; pohtographed in .
# ::tokens ["Not", "retired", ",", "re", "-", "engined", "to", "R", "spec", ",", "was", "still", "flying", "&", "amp", ";", "pohtographed", "in", "."]
# ::lemmas ["not", "retire", ",", "re", "-", "engine", "to", "R", "spec", ",", "be", "still", "fly", "&", "amp", ";", "pohtographe", "in", "."]
(c5-8 / and
      :op1 (c5-5 / retire-01
                 :ARG0 (c5-1 / i)
                 :polarity -)
      :op2 (c5-2 / reengine-01
                 :ARG1 c5-1
                 :ARG2 (c5-7 / thing
                             :name (c5-3 / name
                                         :op1 "R"
                                         :op2 "Star"))
                 :polarity -)
      :op3 (c5-0 / fly-01
                 :ARG0 c5-1
                 :mod (c5-6 / still)
                 :polarity -)
      :op4 (c5-4 / polish-01
                 :ARG0 c5-1
                 :ARG1 c5-1
                 :polarity -))

# ::snt flight path of EC135 originates at Istres AFB, south .
# ::tokens ["flight", "path", "of", "EC135", "originates", "at", "Istres", "AFB", ",", "south", "."]
# ::lemmas ["flight", "path", "of", "EC135", "originate", "at", "Istres", "AFB", ",", "south", "."]
(c6-1 / originate-01
      :ARG1 (c6-5 / path
                  :path-of (c6-0 / fly-01
                                 :ARG2 (c6-7 / aircraft-type
                                             :name (c6-3 / name
                                                         :op1 "EC135"))))
      :ARG2 (c6-2 / facility
                  :name (c6-4 / name
                              :op1 "Istres"
                              :op2 "Airbus")
                  :location (c6-6 / south)))

# ::snt yes, not EC-135. planefinder suggested EC135 lifter, retired in globally
# ::tokens ["yes", ",", "not", "EC-135", ".", "planefinder", "suggested", "EC135", "lifter", ",", "retired", "in", "globally"]
# ::lemmas ["yes", ",", "not", "EC-135", ".", "planefinder", "suggest", "EC135", "lifter", ",", "retire", "in", "globally"]
(c7-2 / multi-sentence
      :snt1 (c7-0 / yes
                  :domain (c7-10 / thing
                                 :name (c7-3 / name
                                             :op1 "EC-135"))
                  :polarity -)
      :snt2 (c7-9 / suggest-01
                  :ARG0 (c7-5 / person
                              :name (c7-4 / name
                                          :op1 "Planefinder"))
                  :ARG1 (c7-8 / thing
                              :ARG0-of (c7-1 / lifter-01
                                             :ARG1 c7-10)
                              :ARG1-of (c7-6 / retire-01
                                             :location (c7-7 / globe)))))

# ::snt French is operating EC-135 Helicopters
# ::tokens ["French", "is", "operating", "EC-135", "Helicopters"]
# ::lemmas ["French", "be", "operate", "EC-135", "Helicopters"]
(c8-0 / operate-01
      :ARG0 (c8-3 / person
                  :mod (c8-4 / country
                             :name (c8-1 / name
                                         :op1 "France")))
      :ARG1 (c8-5 / aircraft-type
                  :name (c8-2 / name
                              :op1 "EC-135"
                              :op2 "Helicopter")))

# ::snt The Boeing EC is not operated by the French either. Are you talking about the "K"C ?
# ::tokens ["The", "Boeing", "EC", "is", "not", "operated", "by", "the", "French", "either", ".", "Are", "you", "talking", "about", "the", "\"", "K\"C", "?"]
# ::lemmas ["the", "Boeing", "EC", "be", "not", "operate", "by", "the", "French", "either", ".", "be", "you", "talk", "about", "the", "\"", "K\"C", "?"]
(c9-1 / multi-sentence
      :snt1 (c9-2 / operate-01
                  :ARG0 (c9-7 / person
                              :mod (c9-9 / country
                                         :name (c9-5 / name
                                                     :op1 "France")))
                  :ARG1 (c9-12 / aircraft-type
                               :name (c9-6 / name
                                           :op1 "Boeing"
                                           :op2 "EC"))
                  :mod (c9-3 / either)
                  :polarity -)
      :snt2 (c9-11 / talk-01
                   :ARG0 (c9-0 / you)
                   :ARG1 (c9-4 / aircraft-type
                               :name (c9-8 / name
                                           :op1 "K"
                                           :op2 "C"))
                   :polarity (c9-10 / amr-unknown)))

# ::snt Actually, most likely a KC-135, right? as EC is retired, possibly a database confusion
# ::tokens ["Actually", ",", "most", "likely", "a", "KC-135", ",", "right", "?", "as", "EC", "is", "retired", ",", "possibly", "a", "database", "confusion"]
# ::lemmas ["actually", ",", "most", "likely", "a", "KC-135", ",", "right", "?", "as", "EC", "be", "retire", ",", "possibly", "a", "database", "confusion"]
(c10-8 / request-confirmation-91
       :ARG1 (c10-1 / likely-01
                    :ARG1 (c10-14 / aircraft-type
                                  :name (c10-5 / name
                                               :op1 "KC-135"))
                    :ARG1-of (c10-3 / actual-02)
                    :ARG1-of (c10-9 / cause-01
                                    :ARG0 (c10-6 / and
                                                 :op1 (c10-4 / retire-01
                                                             :ARG1 (c10-13 / thing
                                                                           :name (c10-7 / name
                                                                                        :op1 "EC")))
                                                 :op2 (c10-10 / confuse-01
                                                              :ARG2 (c10-11 / database)
                                                              :ARG1-of (c10-12 / possible-01))))
                    :ARG2-of (c10-0 / have-degree-91
                                    :ARG1 c10-14
                                    :ARG3 (c10-2 / most))))

# ::snt aerodrome*, maybe attempted a landing there
# ::tokens ["aerodrome", "*", ",", "maybe", "attempted", "a", "landing", "there"]
# ::lemmas ["aerodrome", "*", ",", "maybe", "attempt", "a", "landing", "there"]
(c11-1 / multi-sentence
       :snt1 (c11-5 / aerodrome)
       :snt2 (c11-3 / possible-01
                    :ARG1 (c11-2 / attempt-01
                                 :ARG1 (c11-0 / land-01
                                              :ARG2 (c11-4 / there)))))

# ::snt ping
# ::tokens ["ping"]
# ::lemmas ["ping"]
(c12-0 / ping-01)

# ::snt Yep, planefinder corrected it. KC-135
# ::tokens ["Yep", ",", "planefinder", "corrected", "it", ".", "KC-135"]
# ::lemmas ["yep", ",", "planefinder", "correct", "it", ".", "KC-135"]
(c13-0 / multi-sentence
       :snt1 (c13-5 / correct-01
                    :ARG0 (c13-4 / person
                                 :name (c13-2 / name
                                              :op1 "Planefinder"))
                    :ARG1 (c13-1 / it))
       :snt2 (c13-6 / thing
                    :name (c13-3 / name
                                 :op1 "KC-135")))

# ::snt it's going around for another run
# ::tokens ["it", "'s", "going", "around", "for", "another", "run"]
# ::lemmas ["it", "be", "go", "around", "for", "another", "run"]
(c14-3 / go-01
       :ARG1 (c14-1 / it)
       :direction (c14-4 / around)
       :purpose (c14-2 / run-13
                       :ARG0 c14-1
                       :mod (c14-0 / another)))

# ::snt back around on a third run
# ::tokens ["back", "around", "on", "a", "third", "run"]
# ::lemmas ["back", "around", "on", "a", "third", "run"]
(c15-1 / run-13
       :ord (c15-0 / ordinal-entity
                   :value 3)
       :direction (c15-2 / back))

# ::snt seems to be the only air force vehicle in the area or even of any type involved in finding , hope more appear soon
# ::tokens ["seems", "to", "be", "the", "only", "air", "force", "vehicle", "in", "the", "area", "or", "even", "of", "any", "type", "involved", "in", "finding", ",", "hope", "more", "appear", "soon"]
# ::lemmas ["seem", "to", "be", "the", "only", "air", "force", "vehicle", "in", "the", "area", "or", "even", "of", "any", "type", "involve", "in", "finding", ",", "hope", "more", "appear", "soon"]
(c16-3 / and
       :op1 (c16-2 / seem-01
                   :ARG1 (c16-16 / or
                                 :op1 (c16-1 / vehicle
                                             :mod (c16-15 / only)
                                             :mod (c16-0 / military
                                                         :name (c16-8 / name
                                                                      :op1 "Air"
                                                                      :op2 "Force"))
                                             :location (c16-13 / area))
                                 :op2 (c16-12 / vehicle
                                              :mod (c16-18 / type
                                                           :mod (c16-9 / any))
                                              :ARG1-of (c16-14 / involve-01
                                                               :ARG2 (c16-5 / find-01))
                                              :mod (c16-6 / even))))
       :op2 (c16-4 / hope-01
                   :ARG1 (c16-17 / appear-01
                                 :ARG1 (c16-11 / vehicle
                                               :quant (c16-10 / more))
                                 :time (c16-7 / soon))))

# ::snt maybe planefinder has a faulty database. I thought it looked wrong, why bring it out of retirement?
# ::tokens ["maybe", "planefinder", "has", "a", "faulty", "database", ".", "I", "thought", "it", "looked", "wrong", ",", "why", "bring", "it", "out", "of", "retirement", "?"]
# ::lemmas ["maybe", "planefinder", "have", "a", "faulty", "database", ".", "i", "think", "it", "look", "wrong", ",", "why", "bring", "it", "out", "of", "retirement", "?"]
(c17-3 / multi-sentence
       :snt1 (c17-9 / possible-01
                    :ARG1 (c17-0 / have-03
                                 :ARG0 (c17-11 / company
                                               :name (c17-8 / name
                                                            :op1 "Planefinder"))
                                 :ARG1 (c17-10 / database
                                               :ARG1-of (c17-2 / fault-02
                                                               :polarity -))))
       :snt2 (c17-15 / think-01
                     :ARG0 (c17-7 / i)
                     :ARG1 (c17-4 / look-02
                                  :ARG0 (c17-12 / it)
                                  :ARG1 (c17-1 / wrong-04
                                               :ARG1 c17-12)))
       :snt3 (c17-5 / bring-01
                    :ARG1 c17-12
                    :ARG2 (c17-6 / out-06
                                 :ARG2 (c17-13 / retire-01))
                    :ARG1-of (c17-14 / cause-01
                                     :ARG0 (c17-16 / amr-unknown))))

# ::snt very possible, very visual from the air, very active landing strip
# ::tokens ["very", "possible", ",", "very", "visual", "from", "the", "air", ",", "very", "active", "landing", "strip"]
# ::lemmas ["very", "possible", ",", "very", "visual", "from", "the", "air", ",", "very", "active", "landing", "strip"]
(c18-9 / and
       :op1 (c18-5 / possible-01
                   :degree (c18-4 / very))
       :op2 (c18-2 / visual
                   :degree (c18-0 / very)
                   :source (c18-3 / air))
       :op3 (c18-7 / strip
                   :purpose (c18-1 / land-01)
                   :ARG0-of (c18-6 / activity-06
                                   :degree (c18-8 / very))))

# ::snt going around for its FOURTH run now, hopefully we'll get some images soon?
# ::tokens ["going", "around", "for", "its", "FOURTH", "run", "now", ",", "hopefully", "we", "'ll", "get", "some", "images", "soon", "?"]
# ::lemmas ["go", "around", "for", "its", "FOURTH", "run", "now", ",", "hopefully", "we", "'ll", "get", "some", "image", "soon", "?"]
(c19-13 / and
        :op1 (c19-10 / go-02
                     :ARG1 (c19-5 / it)
                     :direction (c19-4 / around)
                     :duration (c19-8 / run-13
                                      :ARG0 c19-5
                                      :ord (c19-2 / ordinal-entity
                                                  :value 4))
                     :time (c19-6 / now))
        :op2 (c19-0 / hope-01
                    :ARG1 (c19-9 / get-01
                                 :ARG0 (c19-1 / we)
                                 :ARG1 (c19-11 / image
                                               :quant (c19-12 / some))
                                 :time (c19-3 / soon))
                    :polarity (c19-7 / amr-unknown)))

# ::snt read the photo details, please. EC-135 lifter, not helicopter.
# ::tokens ["read", "the", "photo", "details", ",", "please", ".", "EC-135", "lifter", ",", "not", "helicopter", "."]
# ::lemmas ["read", "the", "photo", "detail", ",", "please", ".", "EC-135", "lifter", ",", "not", "helicopter", "."]
(c20-3 / multi-sentence
       :snt1 (c20-7 / read-01
                    :ARG0 (c20-1 / you)
                    :ARG1 (c20-6 / detail
                                 :mod (c20-5 / photo))
                    :mode imperative
                    :polite +)
       :snt2 (c20-8 / contrast-01
                    :ARG1 (c20-2 / lifter
                                 :poss (c20-9 / aircraft-type
                                              :name (c20-4 / name
                                                           :op1 "EC-135")))
                    :ARG2 (c20-0 / helicopter
                                 :polarity -)))

# ::snt this tweet is on fire
# ::tokens ["this", "tweet", "is", "on", "fire"]
# ::lemmas ["this", "tweet", "be", "on", "fire"]
(c21-0 / on-fire-08
       :ARG1 (c21-2 / thing
                    :ARG1-of (c21-3 / tweet-01)
                    :mod (c21-1 / this)))

# ::snt Neither the french air force nor the french army are operating EC Helicopters.
# ::tokens ["Neither", "the", "french", "air", "force", "nor", "the", "french", "army", "are", "operating", "EC", "Helicopters", "."]
# ::lemmas ["neither", "the", "french", "air", "force", "nor", "the", "french", "army", "be", "operate", "EC", "Helicopters", "."]
(c22-2 / operate-01
       :ARG0 (c22-9 / and
                    :op1 (c22-1 / military
                                :name (c22-3 / name
                                             :op1 "Air"
                                             :op2 "Force")
                                :mod (c22-7 / country
                                            :name (c22-4 / name
                                                         :op1 "France")))
                    :op2 (c22-5 / military
                                :name (c22-6 / name
                                             :op1 "Army")
                                :mod c22-7))
       :ARG1 (c22-0 / helicopter
                    :name (c22-8 / name
                                 :op1 "EC"
                                 :op2 "Helicopter"))
       :polarity -)

# ::snt Let us hope it was not related to terror.
# ::tokens ["Let", "us", "hope", "it", "was", "not", "related", "to", "terror", "."]
# ::lemmas ["let", "we", "hope", "it", "be", "not", "relate", "to", "terror", "."]
(c23-0 / hope-01
       :ARG0 (c23-1 / we)
       :ARG1 (c23-3 / relate-01
                    :ARG1 (c23-2 / it)
                    :ARG2 (c23-4 / terror)
                    :polarity -)
       :mode imperative)

# ::snt It's not an EC-135 helo, it's a KC-135R. Possibly providing comms relay support.
# ::tokens ["It", "'s", "not", "an", "EC-135", "helo", ",", "it", "'s", "a", "KC-135R.", "Possibly", "providing", "comms", "relay", "support", "."]
# ::lemmas ["it", "be", "not", "an", "EC-135", "helo", ",", "it", "be", "a", "kc-135r.", "possibly", "provide", "comms", "relay", "support", "."]
(c24-1 / multi-sentence
       :snt1 (c24-8 / contrast-01
                    :ARG1 (c24-0 / helo
                                 :mod (c24-12 / aircraft-type
                                              :name (c24-4 / name
                                                           :op1 "EC-135"))
                                 :polarity -)
                    :ARG2 (c24-2 / aircraft-type
                                 :name (c24-5 / name
                                              :op1 "KC-135R")
                                 :domain (c24-3 / it)))
       :snt2 (c24-6 / possible-01
                    :ARG1 (c24-11 / provide-01
                                  :ARG0 c24-3
                                  :ARG1 (c24-10 / support-01
                                                :ARG0 (c24-7 / comms
                                                             :ARG0-of (c24-9 / relay-01))))))

# ::snt Tallard airport is just in the circle. Its a pretty big strip.
# ::tokens ["Tallard", "airport", "is", "just", "in", "the", "circle", ".", "Its", "a", "pretty", "big", "strip", "."]
# ::lemmas ["tallard", "airport", "be", "just", "in", "the", "circle", ".", "its", "a", "pretty", "big", "strip", "."]
(c25-1 / multi-sentence
       :snt1 (c25-8 / airport
                    :name (c25-4 / name
                                 :op1 "Tallard")
                    :location (c25-6 / circle
                                     :mod (c25-0 / just)))
       :snt2 (c25-7 / strip
                    :mod (c25-2 / big
                                :degree (c25-5 / pretty))
                    :domain (c25-3 / it)))
