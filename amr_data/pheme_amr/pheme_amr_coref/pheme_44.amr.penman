# ::snt there's no moral equivalence between Islamist murders today and modern European far right; try as some might.
# ::tokens ["there", "'s", "no", "moral", "equivalence", "between", "Islamist", "murders", "today", "and", "modern", "European", "far", "right", ";", "try", "as", "some", "might", "."]
# ::lemmas ["there", "be", "no", "moral", "equivalence", "between", "Islamist", "murder", "today", "and", "modern", "European", "far", "right", ";", "try", "as", "some", "might", "."]
(c1-1 / multi-sentence
      :snt1 (c1-3 / equal-01
                  :ARG1 (c1-7 / murder-01
                              :mod (c1-8 / religious-group
                                         :name (c1-5 / name
                                                     :op1 "Islamism"))
                              :time (c1-14 / today))
                  :ARG2 (c1-4 / right-08
                              :mod (c1-0 / far)
                              :mod (c1-9 / continent
                                         :name (c1-6 / name
                                                     :op1 "Europe"))
                              :ARG1-of (c1-2 / modern-02))
                  :ARG1-of (c1-10 / moral-02)
                  :polarity -)
      :snt2 (c1-12 / try-01
                   :ARG1-of (c1-11 / possible-01)
                   :mod (c1-13 / some)))

# ::snt Yes, it's becoming a no-risk punt.
# ::tokens ["Yes", ",", "it", "'s", "becoming", "a", "no", "-", "risk", "punt", "."]
# ::lemmas ["yes", ",", "it", "be", "become", "a", "no", "-", "risk", "punt", "."]
(c2-3 / become-01
      :ARG1 (c2-2 / it)
      :ARG2 (c2-0 / punt-01
                  :ARG1-of (c2-1 / risk-01
                                 :polarity -)))

# ::snt Simply brilliant!!
# ::tokens ["Simply", "brilliant", "!", "!"]
# ::lemmas ["simply", "brilliant", "!", "!"]
(c3-1 / brilliant-01
      :mod (c3-0 / simple)
      :mode expressive)

# ::snt You're fundamentally missing the point. The insult to "The Prophet" has been avenged. This is the mentality in play.
# ::tokens ["You", "'re", "fundamentally", "missing", "the", "point", ".", "The", "insult", "to", "\"", "The", "Prophet", "\"", "has", "been", "avenged", ".", "This", "is", "the", "mentality", "in", "play", "."]
# ::lemmas ["you", "be", "fundamentally", "miss", "the", "point", ".", "the", "insult", "to", "\"", "The", "Prophet", "\"", "have", "be", "avenge", ".", "this", "be", "the", "mentality", "in", "play", "."]
(c4-2 / multi-sentence
      :snt1 (c4-8 / miss-02
                  :ARG0 (c4-0 / you)
                  :ARG1 (c4-9 / point-04)
                  :manner (c4-1 / fundamental))
      :snt2 (c4-7 / vouch-01
                  :ARG1 (c4-5 / insult-01
                              :ARG1 (c4-11 / person
                                           :name (c4-6 / name
                                                       :op1 "The"
                                                       :op2 "Prophet"))))
      :snt3 (c4-4 / play-08
                  :ARG0 (c4-3 / mentality
                              :mod (c4-10 / this))))

# ::snt so true
# ::tokens ["so", "true"]
# ::lemmas ["so", "true"]
(c5-1 / true-01
      :degree (c5-0 / so))

# ::snt Lowest common denominator. Everyone should be suspicious of each other. Helps get through restrictive legislation.
# ::tokens ["Lowest", "common", "denominator", ".", "Everyone", "should", "be", "suspicious", "of", "each", "other", ".", "Helps", "get", "through", "restrictive", "legislation", "."]
# ::lemmas ["lowest", "common", "denominator", ".", "everyone", "should", "be", "suspicious", "of", "each", "other", ".", "help", "get", "through", "restrictive", "legislation", "."]
(c6-2 / multi-sentence
      :snt1 (c6-0 / have-degree-91
                  :ARG1 (c6-8 / denominator)
                  :ARG2 (c6-1 / low-04
                              :ARG1 c6-8)
                  :ARG3 (c6-7 / most))
      :snt2 (c6-9 / recommend-01
                  :ARG1 (c6-12 / suspicious-02
                               :ARG0 (c6-5 / everyone)
                               :ARG1 (c6-4 / other
                                           :mod (c6-3 / each))))
      :snt3 (c6-13 / help-01
                   :ARG1 (c6-10 / get-through-13
                                :ARG1 (c6-11 / legislate-01
                                             :ARG0-of (c6-6 / restrict-01)))))

# ::snt Trouble is, it's not just the far right any more. More centrist parties also subscribing to Islamophobia. It sells.
# ::tokens ["Trouble", "is", ",", "it", "'s", "not", "just", "the", "far", "right", "any", "more", ".", "More", "centrist", "parties", "also", "subscribing", "to", "Islamophobia", ".", "It", "sells", "."]
# ::lemmas ["trouble", "be", ",", "it", "be", "not", "just", "the", "far", "right", "any", "more", ".", "more", "centrist", "party", "also", "subscribe", "to", "Islamophobia", ".", "it", "sell", "."]
(c7-2 / multi-sentence
      :snt1 (c7-14 / tough-02
                   :ARG1 (c7-10 / right-08
                                :mod (c7-0 / just
                                           :polarity -)
                                :time (c7-15 / anymore)))
      :snt2 (c7-13 / subscribe-01
                   :ARG0 (c7-9 / party
                               :ARG1-of (c7-1 / have-degree-91
                                              :ARG2 (c7-11 / centrist-02
                                                           :ARG1 c7-9)
                                              :ARG3 (c7-12 / more)))
                   :ARG1 (c7-3 / ophobia
                               :mod (c7-7 / religious-group
                                          :name (c7-8 / name
                                                      :op1 "Islamophobia")))
                   :mod (c7-5 / also))
      :snt3 (c7-4 / sell-01
                  :ARG1 (c7-6 / it)))

# ::snt As, no doubt, will the state...
# ::tokens ["As", ",", "no", "doubt", ",", "will", "the", "state", "..."]
# ::lemmas ["as", ",", "no", "doubt", ",", "will", "the", "state", "..."]
(c8-1 / resemble-01
      :ARG1 (c8-0 / state)
      :ARG1-of (c8-2 / doubt-01
                     :polarity -))

# ::snt Divide and rule.
# ::tokens ["Divide", "and", "rule", "."]
# ::lemmas ["divide", "and", "rule", "."]
(c9-2 / and
      :op1 (c9-1 / divide-02)
      :op2 (c9-0 / rule-03))
