# ::snt &lt;&lt;&lt; ~~~~ The Protects He Get's Threats All The Time.
# ::tokens ["&", "lt;&lt;&lt", ";", "~~~~", "The", "Protects", "He", "Get", "'s", "Threats", "All", "The", "Time", "."]
# ::lemmas ["&", "lt;&lt;&lt", ";", "~~~~", "the", "protect", "he", "get", "'s", "Threats", "all", "the", "time", "."]
(c1-1 / protect-01
      :ARG0 (c1-0 / he)
      :ARG2 (c1-3 / threaten-01
                  :ARG2 c1-0)
      :time (c1-2 / time
                  :mod (c1-4 / all)))

# ::snt -29-12~The Case Was Being Covered Up~Mayor Was On Cops Sides!!
# ::tokens ["-29", "-", "12", "~", "The", "Case", "Was", "Being", "Covered", "Up", "~", "Mayor", "Was", "On", "Cops", "Sides", "!", "!"]
# ::lemmas ["-29", "-", "12", "~", "The", "Case", "Was", "Being", "Covered", "Up", "~", "Mayor", "be", "on", "Cops", "side", "!", "!"]
(c2-7 / and
      :op1 (c2-3 / cover-up-04
                 :ARG1 (c2-2 / case-03))
      :op2 (c2-1 / be-located-at-91
                 :ARG1 (c2-0 / mayor)
                 :ARG2 (c2-6 / side
                             :part-of (c2-5 / cop)))
      :time (c2-4 / date-entity
                  :day 29
                  :month 12))

# ::snt White guys jealous.
# ::tokens ["White", "guys", "jealous", "."]
# ::lemmas ["white", "guy", "jealous", "."]
(c3-0 / jealous-02
      :ARG0 (c3-2 / guy
                  :ARG1-of (c3-1 / white-02)))

# ::snt Another win for the gene pool
# ::tokens ["Another", "win", "for", "the", "gene", "pool"]
# ::lemmas ["another", "win", "for", "the", "gene", "pool"]
(c4-0 / win-01
      :ARG0 (c4-1 / pool-01
                  :ARG2 (c4-2 / gene))
      :mod (c4-3 / another))

# ::snt so, what the fuck? Is anyone in your village walk through streets with a knife or a gun???
# ::tokens ["so", ",", "what", "the", "fuck", "?", "Is", "anyone", "in", "your", "village", "walk", "through", "streets", "with", "a", "knife", "or", "a", "gun", "?", "?", "?"]
# ::lemmas ["so", ",", "what", "the", "fuck", "?", "be", "anyone", "in", "your", "village", "walk", "through", "street", "with", "a", "knife", "or", "a", "gun", "?", "?", "?"]
(c5-3 / multi-sentence
      :snt1 (c5-11 / amr-unknown
                   :mod (c5-2 / fuck
                              :mode expressive))
      :snt2 (c5-0 / walk-01
                  :ARG0 (c5-5 / anyone
                              :location (c5-6 / village
                                              :poss (c5-1 / you)))
                  :ARG2 (c5-9 / street)
                  :instrument (c5-4 / or
                                    :op1 (c5-10 / knife)
                                    :op2 (c5-8 / gun))
                  :polarity (c5-7 / amr-unknown)))

# ::snt &lt;&lt;&lt;&lt; I Don't Like His Tweet Asking Why Is Alive Yet!!
# ::tokens ["&", "lt;&lt;&lt;&lt", ";", "I", "Do", "n't", "Like", "His", "Tweet", "Asking", "Why", "Is", "Alive", "Yet", "!", "!"]
# ::lemmas ["&", "lt;&lt;&lt;&lt", ";", "i", "do", "not", "like", "his", "Tweet", "ask", "why", "be", "alive", "yet", "!", "!"]
(c6-4 / dislike-01
      :ARG0 (c6-3 / i)
      :ARG1 (c6-7 / tweet-01
                  :ARG0 (c6-0 / he)
                  :ARG1 (c6-8 / ask-01
                              :ARG0 c6-0
                              :ARG1 (c6-6 / thing
                                          :ARG0-of (c6-5 / cause-01
                                                         :ARG1 (c6-2 / live-01
                                                                     :ARG0 c6-0
                                                                     :time (c6-1 / yet)))))))

# ::snt No Of The
# ::tokens ["No", "Of", "The"]
# ::lemmas ["no", "of", "the"]
(c7-0 / no
      :mod (c7-1 / of-the-way))

# ::snt U just want to say "white is guilty, because they white"? In Moscow black guys sold drugs...
# ::tokens ["U", "just", "want", "to", "say", "\"", "white", "is", "guilty", ",", "because", "they", "white", "\"", "?", "In", "Moscow", "black", "guys", "sold", "drugs", "..."]
# ::lemmas ["u", "just", "want", "to", "say", "\"", "white", "be", "guilty", ",", "because", "they", "white", "\"", "?", "in", "Moscow", "black", "guy", "sell", "drug", "..."]
(c8-1 / want-01
      :polarity (c8-9 / amr-unknown)
      :ARG0 (c8-2 / you)
      :ARG1 (c8-8 / say-01
                  :ARG0 c8-2
                  :ARG1 (c8-7 / guilty-01
                              :ARG1 (c8-5 / person
                                          :ARG1-of (c8-4 / white-02))
                              :ARG1-of (c8-6 / cause-01
                                             :ARG0 (c8-3 / white-02
                                                         :ARG1 c8-5))))
      :mod (c8-0 / just))

# ::snt &lt;&lt;&lt;~~~~It Is People Like You That You Ask Why Is Still Alive.
# ::tokens ["&", "lt;&lt;&lt;~~~~It", "Is", "People", "Like", "You", "That", "You", "Ask", "Why", "Is", "Still", "Alive", "."]
# ::lemmas ["&", "lt;&lt;&lt;~~~~It", "be", "people", "like", "you", "that", "you", "ask", "why", "be", "still", "alive", "."]
(c9-1 / live-01
      :ARG0 (c9-3 / person
                  :ARG1-of (c9-4 / resemble-01
                                 :ARG2 (c9-0 / you))
                  :ARG1-of (c9-7 / ask-01
                                 :ARG0 c9-0
                                 :ARG1-of (c9-5 / cause-01
                                                :ARG0 (c9-2 / amr-unknown))))
      :mod (c9-6 / still))

# ::snt Any Excuse Will Do.In A Police Chase -29-12~ By
# ::tokens ["Any", "Excuse", "Will", "Do", ".", "In", "A", "Police", "Chase", "-29", "-", "12~", "By"]
# ::lemmas ["any", "excuse", "will", "do", ".", "in", "a", "Police", "Chase", "-29", "-", "12~", "by"]
(c10-3 / do-02
       :ARG0 (c10-1 / excuse-02
                    :mod (c10-5 / any))
       :time (c10-0 / date-entity
                    :time-of (c10-4 / chase-01
                                    :ARG0 (c10-2 / police))
                    :day 29
                    :month 2
                    :year 2012))

# ::snt Police Shoot137 Times&lt;~ They Have Many
# ::tokens ["Police", "Shoot137", "Times&lt;~", "They", "Have", "Many"]
# ::lemmas ["police", "Shoot137", "times&lt;~", "they", "have", "many"]
(c11-1 / multi-sentence
       :snt1 (c11-6 / shoot-02
                    :ARG0 (c11-2 / police)
                    :time (c11-3 / date-entity
                                 :day137 (c11-0 / have-03
                                                :ARG0 (c11-7 / they)
                                                :ARG1 (c11-5 / thing
                                                             :quant (c11-4 / many))))))

# ::snt I'm glad, amigo, you love your president, who kills many children in Ukrain and Gaza and many places more
# ::tokens ["I", "'m", "glad", ",", "amigo", ",", "you", "love", "your", "president", ",", "who", "kills", "many", "children", "in", "Ukrain", "and", "Gaza", "and", "many", "places", "more"]
# ::lemmas ["i", "be", "glad", ",", "amigo", ",", "you", "love", "your", "president", ",", "who", "kill", "many", "child", "in", "Ukrain", "and", "Gaza", "and", "many", "place", "more"]
(c12-4 / say-01
       :ARG0 (c12-14 / i)
       :ARG1 (c12-13 / glad-02
                     :ARG0 (c12-8 / love-01
                                  :ARG0 (c12-2 / person
                                               :ARG0-of (c12-7 / have-org-role-91
                                                               :ARG2 (c12-5 / president))
                                               :ARG0-of (c12-16 / kill-01
                                                                :ARG1 (c12-18 / child
                                                                              :quant (c12-0 / many)
                                                                              :location (c12-6 / and
                                                                                               :op1 (c12-3 / country-region
                                                                                                           :name (c12-11 / name
                                                                                                                         :op1 "Ukraine"))
                                                                                               :op2 (c12-15 / country-region
                                                                                                            :name (c12-17 / name
                                                                                                                          :op1 "Gaza"))
                                                                                               :op3 (c12-10 / place
                                                                                                            :quant (c12-12 / many)
                                                                                                            :mod (c12-9 / more))))))
                                  :ARG1 c12-14)
                     :ARG1 c12-14)
       :ARG2 c12-2
       :name (c12-1 / name
                    :op1 "amigo"))

# ::snt If u think something another says can somehow hold you back, you're a loser &amp; deserve failure
# ::tokens ["If", "u", "think", "something", "another", "says", "can", "somehow", "hold", "you", "back", ",", "you", "'re", "a", "loser", "&", "amp", ";", "deserve", "failure"]
# ::lemmas ["if", "u", "think", "something", "another", "say", "can", "somehow", "hold", "you", "back", ",", "you", "be", "a", "loser", "&", "amp", ";", "deserve", "failure"]
(c13-12 / and
        :op1 (c13-7 / person
                    :ARG0-of (c13-2 / lose-03)
                    :domain (c13-1 / you))
        :op2 (c13-8 / deserve-01
                    :ARG0 c13-1
                    :ARG1 (c13-3 / fail-01
                                 :ARG1 c13-1))
        :condition (c13-10 / think-01
                           :ARG0 c13-1
                           :ARG1 (c13-11 / possible-01
                                         :ARG1 (c13-0 / hold-back-07
                                                      :ARG0 (c13-9 / something
                                                                   :ARG1-of (c13-5 / say-01
                                                                                   :ARG0 (c13-6 / another)))
                                                      :ARG1 c13-1
                                                      :manner (c13-4 / somehow)))))

# ::snt cool! Darkskinned man is a crime element in your village?? So, why is alive yet???
# ::tokens ["cool", "!", "Darkskinned", "man", "is", "a", "crime", "element", "in", "your", "village", "?", "?", "So", ",", "why", "is", "alive", "yet", "?", "?", "?"]
# ::lemmas ["cool", "!", "Darkskinned", "man", "be", "a", "crime", "element", "in", "your", "village", "?", "?", "so", ",", "why", "be", "alive", "yet", "?", "?", "?"]
(c14-2 / multi-sentence
       :snt1 (c14-7 / cool-04)
       :snt2 (c14-3 / element
                    :ARG0-of (c14-6 / crime-02)
                    :domain (c14-5 / man
                                   :ARG1-of (c14-10 / skin-01
                                                    :ARG2 (c14-8 / darkskin)))
                    :location (c14-4 / village
                                     :poss (c14-0 / you)))
       :snt3 (c14-9 / cause-01
                    :ARG0 (c14-11 / amr-unknown)
                    :ARG1 (c14-1 / live-01
                                 :time (c14-12 / yet))))

# ::snt A Cop Shot A yr Old In The Head! Cop Said He HeSaw A Gun!!!
# ::tokens ["A", "Cop", "Shot", "A", "yr", "Old", "In", "The", "Head", "!", "Cop", "Said", "He", "HeSaw", "A", "Gun", "!", "!", "!"]
# ::lemmas ["a", "Cop", "Shot", "A", "yr", "Old", "in", "the", "Head", "!", "Cop", "say", "he", "HeSaw", "A", "Gun", "!", "!", "!"]
(c15-3 / multi-sentence
       :snt1 (c15-9 / shoot-02
                    :ARG1 (c15-7 / cop)
                    :ARG2 (c15-5 / person
                                 :age (c15-10 / temporal-quantity
                                              :unit (c15-1 / year)
                                              :quant 1)
                                 :part (c15-0 / head
                                              :location-of c15-9)))
       :snt2 (c15-4 / say-01
                    :ARG0 (c15-6 / cop)
                    :ARG1 (c15-2 / Saw-01
                                 :ARG0 c15-6
                                 :ARG1 (c15-8 / gun))))

# ::snt I'm not RACIST. We live together with over nations in Russia. And U can go out for this words, mucacho.
# ::tokens ["I", "'m", "not", "RACIST", ".", "We", "live", "together", "with", "over", "nations", "in", "Russia", ".", "And", "U", "can", "go", "out", "for", "this", "words", ",", "mucacho", "."]
# ::lemmas ["i", "be", "not", "racist", ".", "we", "live", "together", "with", "over", "nation", "in", "Russia", ".", "and", "U", "can", "go", "out", "for", "this", "word", ",", "mucacho", "."]
(c16-2 / multi-sentence
       :snt1 (c16-9 / racist
                    :domain (c16-4 / i)
                    :polarity -)
       :snt2 (c16-1 / live-01
                    :ARG0 (c16-0 / we)
                    :accompanier (c16-6 / nation
                                        :quant (c16-3 / over)
                                        :location (c16-10 / country
                                                          :name (c16-7 / name
                                                                       :op1 "Russia")))
                    :manner (c16-14 / together))
       :snt3 (c16-16 / and
                     :op2 (c16-8 / possible-01
                                 :ARG1 (c16-11 / go-out-17
                                               :ARG0 (c16-15 / person
                                                             :name (c16-12 / name
                                                                           :op1 "Mucacho"))
                                               :purpose (c16-5 / word
                                                               :mod (c16-13 / this))))))

# ::snt : Witness: Police allegedly stopped Mike Brown after yelling at him to walk on sidewalk.
# ::tokens [":", "Witness", ":", "Police", "allegedly", "stopped", "Mike", "Brown", "after", "yelling", "at", "him", "to", "walk", "on", "sidewalk", "."]
# ::lemmas [":", "witness", ":", "police", "allegedly", "stop", "Mike", "Brown", "after", "yell", "at", "he", "to", "walk", "on", "sidewalk", "."]
(c17-7 / stop-01
       :ARG0 (c17-6 / police)
       :ARG1 (c17-8 / person
                    :name (c17-5 / name
                                 :op1 "Mike"
                                 :op2 "Brown"))
       :ARG1-of (c17-9 / allege-01)
       :time (c17-3 / after
                    :op1 (c17-0 / yell-01
                                :ARG0 c17-6
                                :ARG1 (c17-1 / walk-01
                                             :ARG0 c17-8
                                             :ARG2 (c17-2 / sidewalk))
                                :ARG2 c17-8))
       :ARG0-of (c17-4 / witness-01))

# ::snt You so edgy.
# ::tokens ["You", "so", "edgy", "."]
# ::lemmas ["you", "so", "edgy", "."]
(c18-2 / edgy
       :domain (c18-1 / you)
       :degree (c18-0 / so))

# ::snt Witness: Police allegedly stopped Mike Brown after yelling at him to walk on sidewalk.
# ::tokens ["Witness", ":", "Police", "allegedly", "stopped", "Mike", "Brown", "after", "yelling", "at", "him", "to", "walk", "on", "sidewalk", "."]
# ::lemmas ["witness", ":", "police", "allegedly", "stop", "Mike", "Brown", "after", "yell", "at", "he", "to", "walk", "on", "sidewalk", "."]
(c19-7 / stop-01
       :ARG0 (c19-6 / police)
       :ARG1 (c19-8 / person
                    :name (c19-5 / name
                                 :op1 "Mike"
                                 :op2 "Brown"))
       :ARG1-of (c19-9 / allege-01)
       :time (c19-3 / after
                    :op1 (c19-0 / yell-01
                                :ARG0 c19-6
                                :ARG1 (c19-1 / walk-01
                                             :ARG0 c19-8
                                             :ARG2 (c19-2 / sidewalk))
                                :ARG2 c19-8))
       :ARG0-of (c19-4 / witness-01))

# ::snt These responses explain why thiskeeps happening. Too many white men hate black men. Sad.
# ::tokens ["These", "responses", "explain", "why", "thiskeeps", "happening", ".", "Too", "many", "white", "men", "hate", "black", "men", ".", "Sad", "."]
# ::lemmas ["these", "response", "explain", "why", "thiskeep", "happen", ".", "too", "many", "white", "man", "hate", "black", "man", ".", "sad", "."]
(c20-3 / multi-sentence
       :snt1 (c20-5 / explain-01
                    :ARG0 (c20-16 / thing
                                  :ARG2-of (c20-11 / respond-01)
                                  :mod (c20-14 / this))
                    :ARG1 (c20-9 / thing
                                 :ARG0-of (c20-12 / cause-01
                                                  :ARG1 (c20-7 / keep-02
                                                               :ARG1 (c20-6 / this)))))
       :snt2 (c20-0 / hate-01
                    :ARG0 (c20-10 / man
                                  :ARG1-of (c20-1 / white-02)
                                  :ARG1-of (c20-17 / have-quant-91
                                                   :ARG2 (c20-2 / many)
                                                   :ARG3 (c20-8 / too)))
                    :ARG1 (c20-13 / man
                                  :ARG1-of (c20-4 / black-05))
                    :ARG0-of (c20-15 / sad-02)))

# ::snt Were Shot Up, Of
# ::tokens ["Were", "Shot", "Up", ",", "Of"]
# ::lemmas ["be", "Shot", "up", ",", "of"]
(c21-0 / shoot-up-06
       :ARG1 (c21-1 / they))

# ::snt perfect!!)) Like Daniel Craig throw his GF to the window. White girls smart
# ::tokens ["perfect", "!", "!", ")", ")", "Like", "Daniel", "Craig", "throw", "his", "GF", "to", "the", "window", ".", "White", "girls", "smart"]
# ::lemmas ["perfect", "!", "!", ")", ")", "like", "Daniel", "Craig", "throw", "his", "GF", "to", "the", "window", ".", "white", "girl", "smart"]
(c22-2 / multi-sentence
       :snt1 (c22-6 / perfect-02
                    :ARG1 (c22-11 / throw-01
                                  :ARG0 (c22-12 / person
                                                :name (c22-5 / name
                                                             :op1 "Daniel"
                                                             :op2 "Craig"))
                                  :ARG1 (c22-3 / person
                                               :ARG0-of (c22-0 / have-rel-role-91
                                                               :ARG1 c22-12
                                                               :ARG2 (c22-9 / girlfriend)))
                                  :ARG2 (c22-1 / window)
                                  :ARG1-of (c22-7 / resemble-01
                                                  :ARG0 c22-12
                                                  :ARG1 c22-3
                                                  :ARG2 c22-1)
                                  :ARG2-of c22-7)
                    :mode expressive)
       :snt2 (c22-10 / smart-06
                     :ARG1 (c22-8 / girl
                                  :ARG1-of (c22-4 / white-02))))
