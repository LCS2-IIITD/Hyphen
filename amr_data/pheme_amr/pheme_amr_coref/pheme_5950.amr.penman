# ::snt when he shoots that dude at point blank range there is no blood at all. It's fishy
# ::tokens ["when", "he", "shoots", "that", "dude", "at", "point", "blank", "range", "there", "is", "no", "blood", "at", "all", ".", "It", "'s", "fishy"]
# ::lemmas ["when", "he", "shoot", "that", "dude", "at", "point", "blank", "range", "there", "be", "no", "blood", "at", "all", ".", "it", "be", "fishy"]
(c1-2 / blood
      :mod (c1-9 / at-all)
      :time (c1-7 / shoot-02
                  :ARG0 (c1-0 / he)
                  :ARG1 (c1-4 / dude
                              :mod (c1-8 / that))
                  :location (c1-5 / range
                                  :mod (c1-3 / point
                                             :mod (c1-6 / blank))))
      :mod (c1-1 / fishy)
      :polarity -)

# ::snt that makes sense.
# ::tokens ["that", "makes", "sense", "."]
# ::lemmas ["that", "make", "sense", "."]
(c2-0 / sense-02
      :ARG1 (c2-1 / that))

# ::snt let's hope they catch these murdeous people
# ::tokens ["let", "'s", "hope", "they", "catch", "these", "murdeous", "people"]
# ::lemmas ["let", "us", "hope", "they", "catch", "these", "murdeous", "people"]
(c3-0 / hope-01
      :ARG0 (c3-1 / we)
      :ARG1 (c3-4 / catch-01
                  :ARG0 (c3-6 / they)
                  :ARG1 (c3-3 / person
                              :mod (c3-5 / this)
                              :ARG0-of (c3-2 / murder-01)))
      :mode imperative)

# ::snt FUCKING SCUM COWARDS, HIDING BEHIND THE MASKS.
# ::tokens ["FUCKING", "SCUM", "COWARDS", ",", "HIDING", "BEHIND", "THE", "MASKS", "."]
# ::lemmas ["FUCKING", "SCUM", "COWARDS", ",", "hide", "behind", "the", "MASKS", "."]
(c4-6 / and
      :op1 (c4-4 / caper
                 :ARG0-of (c4-0 / fuck-01)
                 :mod (c4-5 / scum))
      :op2 (c4-2 / be-located-at-91
                 :ARG1 c4-4
                 :ARG2 (c4-3 / across
                             :op1 (c4-1 / mask))))

# ::snt why is there no blood? He just shot at his head from les than a meter with an AK-47.
# ::tokens ["why", "is", "there", "no", "blood", "?", "He", "just", "shot", "at", "his", "head", "from", "les", "than", "a", "meter", "with", "an", "AK-47", "."]
# ::lemmas ["why", "be", "there", "no", "blood", "?", "he", "just", "shoot", "at", "his", "head", "from", "le", "than", "a", "meter", "with", "an", "AK-47", "."]
(c5-3 / multi-sentence
      :snt1 (c5-9 / cause-01
                  :ARG0 (c5-12 / amr-unknown)
                  :ARG1 (c5-5 / blood
                              :polarity -))
      :snt2 (c5-11 / shoot-02
                   :ARG0 (c5-0 / he
                               :part (c5-2 / head
                                           :ARG2-of c5-11))
                   :ARG3 (c5-4 / less-than
                               :op1 (c5-8 / distance-quantity
                                          :unit (c5-7 / meter)
                                          :quant 1))
                   :instrument (c5-10 / product
                                      :name (c5-6 / name
                                                  :op1 "AK-47"))
                   :mod (c5-1 / just)))

# ::snt what exactly would've convinced you? A blood capsule? Not a video of the attack mind you - this is the getaway?
# ::tokens ["what", "exactly", "would", "'ve", "convinced", "you", "?", "A", "blood", "capsule", "?", "Not", "a", "video", "of", "the", "attack", "mind", "you", "-", "this", "is", "the", "getaway", "?"]
# ::lemmas ["what", "exactly", "would", "'ve", "convince", "you", "?", "a", "blood", "capsule", "?", "not", "a", "video", "of", "the", "attack", "mind", "you", "-", "this", "be", "the", "getaway", "?"]
(c6-1 / multi-sentence
      :snt1 (c6-8 / convince-01
                  :ARG0 (c6-12 / amr-unknown
                               :mod (c6-3 / exact))
                  :ARG1 (c6-0 / you))
      :snt2 (c6-7 / capsule
                  :mod (c6-2 / blood))
      :snt3 (c6-5 / video
                  :topic (c6-4 / attack-01)
                  :ARG1-of (c6-6 / mind-03
                                 :ARG0 (c6-10 / you))
                  :polarity -)
      :snt4 (c6-9 / get-05
                  :ARG2 (c6-11 / this)
                  :polarity c6-12))

# ::snt what's ur point
# ::tokens ["what", "'s", "ur", "point"]
# ::lemmas ["what", "be", "ur", "point"]
(c7-1 / point-04
      :ARG0 (c7-0 / you)
      :ARG1 (c7-2 / amr-unknown))

# ::snt These are the cowards we should be mad at: They organize this stuff...
# ::tokens ["These", "are", "the", "cowards", "we", "should", "be", "mad", "at", ":", "They", "organize", "this", "stuff", "..."]
# ::lemmas ["these", "be", "the", "coward", "we", "should", "be", "mad", "at", ":", "they", "organize", "this", "stuff", "..."]
(c8-5 / cause-01
      :ARG0 (c8-2 / organize-01
                  :ARG0 (c8-9 / they)
                  :ARG1 (c8-8 / stuff
                              :mod (c8-7 / this)))
      :ARG1 (c8-4 / coward
                  :domain (c8-3 / this)
                  :ARG1-of (c8-1 / mad-04
                                 :ARG0 (c8-0 / we)
                                 :ARG1-of (c8-6 / recommend-01))))

# ::snt I'm sorry, but you really don't get it, watch this and tell me what you think after seeing it
# ::tokens ["I", "'m", "sorry", ",", "but", "you", "really", "do", "n't", "get", "it", ",", "watch", "this", "and", "tell", "me", "what", "you", "think", "after", "seeing", "it"]
# ::lemmas ["i", "be", "sorry", ",", "but", "you", "really", "do", "not", "get", "it", ",", "watch", "this", "and", "tell", "i", "what", "you", "think", "after", "see", "it"]
(c9-8 / contrast-01
      :ARG1 (c9-12 / sorry-01
                   :ARG1 (c9-5 / i))
      :ARG2 (c9-14 / and
                   :op1 (c9-9 / get-30
                              :ARG0 (c9-0 / you)
                              :ARG1 (c9-10 / it)
                              :ARG1-of (c9-7 / real-04)
                              :polarity -)
                   :op2 (c9-1 / watch-01
                              :ARG0 c9-0
                              :ARG1 (c9-13 / this)
                              :mode imperative)
                   :op3 (c9-11 / tell-01
                               :ARG0 c9-0
                               :ARG1 (c9-6 / thing
                                           :ARG1-of (c9-3 / think-01
                                                          :ARG0 c9-0
                                                          :time (c9-4 / after
                                                                      :op1 (c9-2 / see-01
                                                                                 :ARG0 c9-0
                                                                                 :ARG1 c9-10))))
                               :ARG2 c9-5
                               :mode imperative)))

# ::snt My first thoughts
# ::tokens ["My", "first", "thoughts"]
# ::lemmas ["my", "first", "thought"]
(c10-1 / think-01
       :ARG0 (c10-2 / i)
       :ord (c10-0 / ordinal-entity
                   :value 1))

# ::snt Come on guys, have respect for the families, don't share that vid.
# ::tokens ["Come", "on", "guys", ",", "have", "respect", "for", "the", "families", ",", "do", "n't", "share", "that", "vid", "."]
# ::lemmas ["come", "on", "guy", ",", "have", "respect", "for", "the", "family", ",", "do", "not", "share", "that", "vid", "."]
(c11-7 / and
       :op1 (c11-3 / come-on-25
                   :ARG1 (c11-4 / guy)
                   :mode imperative)
       :op2 (c11-2 / respect-01
                   :ARG0 c11-4
                   :ARG1 (c11-0 / family)
                   :mode imperative)
       :op3 (c11-5 / share-01
                   :ARG0 c11-4
                   :ARG1 (c11-1 / video
                                :mod (c11-6 / that))
                   :polarity -
                   :mode imperative))

# ::snt no blood looks awfully funny, that's it
# ::tokens ["no", "blood", "looks", "awfully", "funny", ",", "that", "'s", "it"]
# ::lemmas ["no", "blood", "look", "awfully", "funny", ",", "that", "be", "it"]
(c12-0 / look-02
       :ARG0 (c12-2 / blood
                    :polarity -)
       :ARG1 (c12-1 / funny-02
                    :degree (c12-4 / awful))
       :ARG1-of (c12-3 / be-it-08))

# ::snt It looks like he missed that last time, but he was already shot, so maybe died of that?
# ::tokens ["It", "looks", "like", "he", "missed", "that", "last", "time", ",", "but", "he", "was", "already", "shot", ",", "so", "maybe", "died", "of", "that", "?"]
# ::lemmas ["it", "look", "like", "he", "miss", "that", "last", "time", ",", "but", "he", "be", "already", "shoot", ",", "so", "maybe", "die", "of", "that", "?"]
(c13-1 / look-02
       :ARG0 (c13-4 / it)
       :ARG1 (c13-7 / contrast-01
                    :ARG1 (c13-2 / miss-02
                                 :ARG0 (c13-0 / he)
                                 :ARG1 (c13-11 / that)
                                 :time (c13-9 / last))
                    :ARG2 (c13-10 / shoot-02
                                  :ARG1 c13-0
                                  :time (c13-12 / already)
                                  :ARG0-of (c13-6 / cause-01
                                                  :ARG1 (c13-5 / possible-01
                                                               :ARG1 (c13-8 / die-01
                                                                            :ARG1 c13-0
                                                                            :ARG1-of c13-6
                                                                            :ARG0 c13-11)))))
       :polarity (c13-3 / amr-unknown))

# ::snt the guy killed in that video? Ahmed. He's dead, whether you think the video has enough blood or not.
# ::tokens ["the", "guy", "killed", "in", "that", "video", "?", "Ahmed", ".", "He", "'s", "dead", ",", "whether", "you", "think", "the", "video", "has", "enough", "blood", "or", "not", "."]
# ::lemmas ["the", "guy", "kill", "in", "that", "video", "?", "Ahmed", ".", "he", "be", "dead", ",", "whether", "you", "think", "the", "video", "have", "enough", "blood", "or", "not", "."]
(c14-0 / multi-sentence
       :snt1 (c14-14 / kill-01
                     :ARG1 (c14-10 / guy
                                   :polarity (c14-5 / amr-unknown))
                     :location (c14-1 / video
                                      :mod (c14-18 / that)))
       :snt2 (c14-3 / die-01
                    :ARG1 (c14-6 / he)
                    :ARG1-of (c14-9 / regardless-91
                                    :ARG2 (c14-16 / or
                                                  :op1 (c14-17 / think-01
                                                               :ARG0 (c14-15 / you)
                                                               :ARG1 (c14-4 / have-03
                                                                            :ARG0 (c14-11 / video)
                                                                            :ARG1 (c14-7 / blood
                                                                                         :ARG1-of (c14-2 / have-quant-91
                                                                                                         :ARG3 (c14-8 / enough))))
                                                               :op2 (c14-12 / think-01
                                                                            :ARG0 c14-15
                                                                            :ARG1 (c14-13 / have-03
                                                                                          :ARG0 c14-11
                                                                                          :ARG1 c14-7)
                                                                            :polarity -))))))

# ::snt We should never forget that the whole world is being held hostage by these
# ::tokens ["We", "should", "never", "forget", "that", "the", "whole", "world", "is", "being", "held", "hostage", "by", "these"]
# ::lemmas ["we", "should", "never", "forget", "that", "the", "whole", "world", "be", "be", "hold", "hostage", "by", "these"]
(c15-6 / recommend-01
       :ARG1 (c15-2 / forget-01
                    :ARG0 (c15-1 / we)
                    :ARG1 (c15-0 / hold-01
                                 :ARG0 (c15-7 / this)
                                 :ARG1 (c15-5 / world
                                              :mod (c15-3 / whole))
                                 :ARG2 (c15-8 / hostage))
                    :time (c15-4 / ever)
                    :polarity -))

# ::snt :how just how can you do that I'm speechless
# ::tokens [":", "how", "just", "how", "can", "you", "do", "that", "I", "'m", "speechless"]
# ::lemmas [":", "how", "just", "how", "can", "you", "do", "that", "i", "be", "speechless"]
(c16-3 / possible-01
       :ARG1 (c16-4 / do-02
                    :ARG0 (c16-1 / you)
                    :ARG1 (c16-7 / amr-unknown
                                 :mod (c16-0 / just))
                    :ARG0-of (c16-5 / cause-01
                                    :ARG1 (c16-6 / speechless
                                                 :domain (c16-2 / i)))))

# ::snt Its about time the west just nuked islam off the face of the planet .
# ::tokens ["Its", "about", "time", "the", "west", "just", "nuked", "islam", "off", "the", "face", "of", "the", "planet", "."]
# ::lemmas ["its", "about", "time", "the", "west", "just", "nuke", "islam", "off", "the", "face", "of", "the", "planet", "."]
(c17-9 / time
       :mod (c17-10 / about)
       :time-of (c17-4 / nuke-01
                       :ARG0 (c17-1 / world-region
                                    :name (c17-5 / name
                                                 :op1 "West"))
                       :ARG1 (c17-7 / religious-group
                                    :name (c17-6 / name
                                                 :op1 "Islam"))
                       :time (c17-0 / just)
                       :location (c17-2 / face
                                        :part-of (c17-8 / planet))
                       :direction (c17-3 / off)))

# ::snt there was a guy who half the US still seems to think was lying when he said he couldn't breathe x. He's dead too.
# ::tokens ["there", "was", "a", "guy", "who", "half", "the", "US", "still", "seems", "to", "think", "was", "lying", "when", "he", "said", "he", "could", "n't", "breathe", "x.", "He", "'s", "dead", "too", "."]
# ::lemmas ["there", "be", "a", "guy", "who", "half", "the", "US", "still", "seem", "to", "think", "be", "lie", "when", "he", "say", "he", "could", "not", "breathe", "x.", "he", "be", "dead", "too", "."]
(c18-2 / multi-sentence
       :snt1 (c18-13 / seem-01
                     :ARG1 (c18-14 / think-01
                                   :ARG0 (c18-8 / person
                                                :ARG1-of (c18-6 / include-91
                                                                :ARG2 (c18-10 / country
                                                                              :name (c18-7 / name
                                                                                           :op1 "US"))
                                                                :ARG3 "1/2"))
                                   :ARG1 (c18-1 / lie-08
                                                :ARG0 (c18-11 / guy)
                                                :time (c18-5 / say-01
                                                             :ARG0 c18-11
                                                             :ARG1 (c18-15 / possible-01
                                                                           :ARG1 (c18-4 / breathe-01
                                                                                        :ARG0 c18-11)
                                                                           :polarity -))))
                     :mod (c18-3 / still))
       :snt2 (c18-9 / die-01
                    :ARG1 (c18-0 / he)
                    :mod (c18-12 / too)))

# ::snt /11 = (USA) /7 = (FRA) think people!!!
# ::tokens ["/11", "=", "(", "USA", ")", "/7", "=", "(", "FRA", ")", "think", "people", "!", "!", "!"]
# ::lemmas ["/11", "=", "(", "USA", ")", "/7", "=", "(", "FRA", ")", "think", "people", "!", "!", "!"]
(c19-5 / think-01
       :ARG0 (c19-0 / you)
       :ARG1 (c19-3 / person)
       :ARG1-of (c19-1 / equal-01
                       :ARG2 (c19-6 / and
                                    :op1 (c19-4 / slash
                                                :op1 11
                                                :op2 7)
                                    :op2 (c19-2 / slash
                                                :op1 11
                                                :op2 7)))
       :mode imperative)

# ::snt weird how no blood and a puff of dust flies up a foot to the side of his head.Just sayin
# ::tokens ["weird", "how", "no", "blood", "and", "a", "puff", "of", "dust", "flies", "up", "a", "foot", "to", "the", "side", "of", "his", "head", ".", "Just", "sayin"]
# ::lemmas ["weird", "how", "no", "blood", "and", "a", "puff", "of", "dust", "fly", "up", "a", "foot", "to", "the", "side", "of", "his", "head", ".", "just", "sayin"]
(c20-1 / weird
       :domain (c20-11 / and
                       :op1 (c20-6 / blood
                                   :polarity -)
                       :op2 (c20-3 / fly-01
                                   :ARG0 (c20-8 / puff-01
                                                :ARG1 (c20-9 / dust))
                                   :direction (c20-5 / up-03
                                                     :ARG2 (c20-10 / side
                                                                   :part-of (c20-0 / head
                                                                                   :part-of (c20-4 / he))))
                                   :extent (c20-2 / distance-quantity
                                                  :unit (c20-7 / foot)
                                                  :quant 1))))

# ::snt Jesus Christ... May all the victims rest in peace and these lunatics be caught ASAP!
# ::tokens ["Jesus", "Christ", "...", "May", "all", "the", "victims", "rest", "in", "peace", "and", "these", "lunatics", "be", "caught", "ASAP", "!"]
# ::lemmas ["Jesus", "Christ", "...", "you", "all", "the", "victim", "rest", "in", "peace", "and", "these", "lunatic", "be", "catch", "asap", "!"]
(c21-13 / and
        :op1 (c21-6 / person
                    :name (c21-4 / name
                                 :op1 "Jesus"
                                 :op2 "Christ")
                    :mode expressive)
        :op2 (c21-0 / wish-01
                    :ARG1 (c21-3 / and
                                 :op1 (c21-7 / rest-01
                                             :ARG1 (c21-12 / person
                                                           :ARG1-of (c21-5 / victimize-01)
                                                           :mod (c21-8 / all))
                                             :manner (c21-2 / peace))
                                 :op2 (c21-9 / catch-02
                                             :ARG1 (c21-1 / lunatic
                                                          :mod (c21-11 / this))
                                             :time (c21-10 / ASAP)))))

# ::snt he looks like he's waving at someone when he gets back into car
# ::tokens ["he", "looks", "like", "he", "'s", "waving", "at", "someone", "when", "he", "gets", "back", "into", "car"]
# ::lemmas ["he", "look", "like", "he", "be", "wave", "at", "someone", "when", "he", "get", "back", "into", "car"]
(c22-2 / look-02
       :ARG0 (c22-0 / he)
       :ARG1 (c22-1 / wave-01
                    :ARG0 c22-0
                    :ARG2 (c22-6 / someone)
                    :time (c22-5 / get-05
                                 :ARG1 c22-0
                                 :ARG2 (c22-4 / car)
                                 :direction (c22-3 / back))))

# ::snt this is sick!
# ::tokens ["this", "is", "sick", "!"]
# ::lemmas ["this", "be", "sick", "!"]
(c23-0 / sick-02
       :ARG0 (c23-1 / this))

# ::snt : RAW VIDEO (WARNING GRAPHIC):Terror Attack 's the blood? Looks fake
# ::tokens [":", "RAW", "VIDEO", "(", "WARNING", "GRAPHIC):Terror", "Attack", "'s", "the", "blood", "?", "Looks", "fake"]
# ::lemmas [":", "raw", "video", "(", "warning", "graphic):terror", "Attack", "'s", "the", "blood", "?", "look", "fake"]
(c24-2 / multi-sentence
       :snt1 (c24-6 / video
                    :ARG1-of (c24-7 / RAW-04)
                    :ARG0-of (c24-0 / warn-01
                                    :manner (c24-8 / graphic)))
       :snt2 (c24-4 / blood
                    :polarity (c24-10 / amr-unknown)
                    :domain (c24-5 / attack-01
                                   :ARG1 (c24-9 / terrorist)))
       :snt3 (c24-1 / look-02
                    :ARG1 (c24-3 / fake-02
                                 :ARG1 c24-5)))

# ::snt outrageous ! Cowardly murderers! no religion is worth this!
# ::tokens ["outrageous", "!", "Cowardly", "murderers", "!", "no", "religion", "is", "worth", "this", "!"]
# ::lemmas ["outrageous", "!", "cowardly", "murderer", "!", "no", "religion", "be", "worth", "this", "!"]
(c25-1 / multi-sentence
       :snt1 (c25-2 / outrageous-02)
       :snt2 (c25-3 / person
                    :ARG0-of (c25-4 / murder-01
                                    :manner (c25-5 / coward)))
       :snt3 (c25-0 / worth-02
                    :ARG1 (c25-6 / religion)
                    :ARG2 (c25-7 / this)
                    :polarity -))

# ::snt Don't let yourselves be duped, the real terrorists are these guys:
# ::tokens ["Do", "n't", "let", "yourselves", "be", "duped", ",", "the", "real", "terrorists", "are", "these", "guys", ":"]
# ::lemmas ["do", "not", "let", "yourself", "be", "dupe", ",", "the", "real", "terrorist", "be", "these", "guy", ":"]
(c26-1 / let-01
       :ARG0 (c26-0 / you)
       :ARG1 (c26-2 / dupe-01
                    :ARG0 c26-0
                    :ARG1 c26-0)
       :ARG1-of (c26-3 / cause-01
                       :ARG0 (c26-4 / guy
                                    :domain (c26-7 / terrorist
                                                   :ARG1-of (c26-5 / real-04))
                                    :mod (c26-6 / this)))
       :polarity -
       :mode imperative)
