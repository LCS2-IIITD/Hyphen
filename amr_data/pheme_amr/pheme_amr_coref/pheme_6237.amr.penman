# ::snt I heard tin foil hats are on sale at WalMart!
# ::tokens ["I", "heard", "tin", "foil", "hats", "are", "on", "sale", "at", "WalMart", "!"]
# ::lemmas ["i", "hear", "tin", "foil", "hat", "be", "on", "sale", "at", "WalMart", "!"]
(c1-0 / hear-01
      :ARG0 (c1-2 / i)
      :ARG1 (c1-5 / sell-01
                  :ARG1 (c1-7 / hat
                              :consist-of (c1-1 / foil
                                                :consist-of (c1-6 / tin)))
                  :location (c1-4 / company
                                  :name (c1-3 / name
                                              :op1 "WalMart"))))

# ::snt . Tweet this cop!!!
# ::tokens [".", "Tweet", "this", "cop", "!", "!", "!"]
# ::lemmas [".", "Tweet", "this", "cop", "!", "!", "!"]
(c2-2 / tweet-02
      :ARG0 (c2-0 / you)
      :ARG1 (c2-1 / cop
                  :mod (c2-3 / this))
      :mode imperative)

# ::snt false. blocked.
# ::tokens ["false", ".", "blocked", "."]
# ::lemmas ["false", ".", "block", "."]
(c3-1 / multi-sentence
      :snt1 (c3-0 / false)
      :snt2 (c3-2 / block-01))

# ::snt I agree, we are not dealing with trustworthy people. How can you trust someone as they drive a tank down your street?
# ::tokens ["I", "agree", ",", "we", "are", "not", "dealing", "with", "trustworthy", "people", ".", "How", "can", "you", "trust", "someone", "as", "they", "drive", "a", "tank", "down", "your", "street", "?"]
# ::lemmas ["i", "agree", ",", "we", "be", "not", "deal", "with", "trustworthy", "people", ".", "how", "can", "you", "trust", "someone", "as", "they", "drive", "a", "tank", "down", "your", "street", "?"]
(c4-3 / multi-sentence
      :snt1 (c4-15 / agree-01
                   :ARG0 (c4-6 / i)
                   :ARG1 (c4-9 / deal-01
                               :ARG0 (c4-0 / we)
                               :ARG1 (c4-8 / person
                                           :mod (c4-13 / trustworthy))
                               :polarity -))
      :snt2 (c4-14 / possible-01
                   :ARG1 (c4-11 / trust-02
                                :ARG0 (c4-1 / you)
                                :ARG1 (c4-12 / someone)
                                :ARG1-of (c4-10 / cause-01
                                                :ARG0 (c4-2 / drive-01
                                                            :ARG0 c4-12
                                                            :ARG1 (c4-7 / tank)
                                                            :ARG2 (c4-16 / down
                                                                         :op1 (c4-4 / street
                                                                                    :poss c4-1))))
                                :manner (c4-5 / amr-unknown))))

# ::snt exactly figuring out a way to spin this shit.
# ::tokens ["exactly", "figuring", "out", "a", "way", "to", "spin", "this", "shit", "."]
# ::lemmas ["exactly", "figure", "out", "a", "way", "to", "spin", "this", "shit", "."]
(c5-1 / figure-out-05
      :ARG1 (c5-0 / way
                  :manner-of (c5-4 / spin-03
                                   :ARG1 (c5-2 / shit
                                               :mod (c5-5 / this))))
      :mod (c5-3 / exact))

# ::snt whatever happen to the lost phones what footage was on those????
# ::tokens ["whatever", "happen", "to", "the", "lost", "phones", "what", "footage", "was", "on", "those", "?", "?", "?", "?"]
# ::lemmas ["whatever", "happen", "to", "the", "lost", "phone", "what", "footage", "be", "on", "those", "?", "?", "?", "?"]
(c6-2 / event
      :mod (c6-4 / amr-unknown)
      :topic (c6-3 / phone
                   :ARG1-of (c6-1 / lose-02))
      :mod (c6-0 / whatever))

# ::snt so what about Bryan Willman- where did his info come from???
# ::tokens ["so", "what", "about", "Bryan", "Willman-", "where", "did", "his", "info", "come", "from", "?", "?", "?"]
# ::lemmas ["so", "what", "about", "Bryan", "Willman-", "where", "do", "his", "info", "come", "from", "?", "?", "?"]
(c7-5 / amr-unknown
      :topic (c7-2 / person
                   :name (c7-1 / name
                               :op1 "Bryan"
                               :op2 "Willman"))
      :ARG0-of (c7-4 / cause-01
                     :ARG1 (c7-3 / come-03
                                 :ARG1 (c7-0 / information
                                             :poss c7-2)
                                 :ARG2 c7-5)))

# ::snt lol right!
# ::tokens ["lol", "right", "!"]
# ::lemmas ["lol", "right", "!"]
(c8-0 / right-06
      :mod (c8-1 / laugh-01
                 :ARG0 (c8-2 / i)
                 :manner (c8-3 / loud)
                 :mode expressive))

# ::snt "find something! Oh look he went to a store, let's say he robbed it!
# ::tokens ["\"", "find", "something", "!", "Oh", "look", "he", "went", "to", "a", "store", ",", "let", "'s", "say", "he", "robbed", "it", "!"]
# ::lemmas ["\"", "find", "something", "!", "oh", "look", "he", "go", "to", "a", "store", ",", "let", "us", "say", "he", "rob", "it", "!"]
(c9-4 / multi-sentence
      :snt1 (c9-3 / find-01
                  :ARG0 (c9-1 / you)
                  :ARG1 (c9-12 / something)
                  :mode imperative)
      :snt2 (c9-5 / look-01
                  :ARG0 (c9-11 / you)
                  :ARG1 (c9-10 / go-02
                               :ARG0 (c9-0 / he)
                               :ARG4 (c9-8 / store))
                  :mod (c9-7 / oh)
                  :mode imperative)
      :snt3 (c9-6 / say-01
                  :ARG0 (c9-2 / we)
                  :ARG1 (c9-9 / rob-01
                              :ARG0 (c9-13 / he)
                              :ARG1 c9-8)
                  :mode imperative))

# ::snt nah...you followed blindly and believed all his shit. Lurk moar and believe less.
# ::tokens ["nah", "...", "you", "followed", "blindly", "and", "believed", "all", "his", "shit", ".", "Lurk", "moar", "and", "believe", "less", "."]
# ::lemmas ["nah", "...", "you", "follow", "blindly", "and", "believe", "all", "his", "shit", ".", "lurk", "moar", "and", "believe", "less", "."]
(c10-3 / multi-sentence
       :snt1 (c10-14 / and
                     :op1 (c10-2 / follow-01
                                 :ARG0 (c10-1 / you)
                                 :manner (c10-5 / blind-02
                                                :ARG1 c10-1))
                     :op2 (c10-11 / believe-01
                                  :ARG0 c10-1
                                  :ARG1 (c10-12 / shit
                                                :poss (c10-0 / he)
                                                :mod (c10-6 / all))))
       :snt2 (c10-8 / and
                    :op1 (c10-9 / person
                                :ARG0-of (c10-10 / mooch-01))
                    :op2 (c10-13 / believe-01
                                 :ARG0 c10-9
                                 :ARG1 (c10-4 / less)))
       :snt3 (c10-7 / nah
                    :mode expressive))

# ::snt according to St. Louis news and videos from previous days.
# ::tokens ["according", "to", "St.", "Louis", "news", "and", "videos", "from", "previous", "days", "."]
# ::lemmas ["accord", "to", "St.", "Louis", "news", "and", "video", "from", "previous", "days", "."]
(c11-6 / say-01
       :ARG0 (c11-7 / and
                    :op1 (c11-0 / news)
                    :op2 (c11-1 / video)
                    :time (c11-3 / day
                                 :mod (c11-2 / previous)))
       :ARG1 (c11-4 / city
                    :name (c11-5 / name
                                 :op1 "St."
                                 :op2 "Louis")))

# ::snt BS Darren Wilson is a black officer. So there are two Darren Wilson that work for ST Louis PD???
# ::tokens ["BS", "Darren", "Wilson", "is", "a", "black", "officer", ".", "So", "there", "are", "two", "Darren", "Wilson", "that", "work", "for", "ST", "Louis", "PD", "?", "?", "?"]
# ::lemmas ["BS", "Darren", "Wilson", "be", "a", "black", "officer", ".", "so", "there", "be", "two", "Darren", "Wilson", "that", "work", "for", "ST", "Louis", "PD", "?", "?", "?"]
(c12-1 / multi-sentence
       :snt1 (c12-3 / officer
                    :ARG1-of (c12-2 / black-05)
                    :domain (c12-7 / person
                                   :name (c12-5 / name
                                                :op1 "Darren"
                                                :op2 "Wilson")))
       :snt2 (c12-4 / infer-01
                    :ARG1 (c12-0 / work-01
                                 :ARG0 (c12-10 / person
                                               :name (c12-6 / name
                                                            :op1 "Darren"
                                                            :op2 "Wilson")
                                               :quant 2)
                                 :ARG2 (c12-9 / government-organization
                                              :name (c12-8 / name
                                                           :op1 "St"
                                                           :op2 "Louis"
                                                           :op3 "PD"))
                                 :polarity (c12-11 / amr-unknown))))

# ::snt took time to file sunshine request
# ::tokens ["took", "time", "to", "file", "sunshine", "request"]
# ::lemmas ["take", "time", "to", "file", "sunshine", "request"]
(c13-4 / take-10
       :ARG0 (c13-0 / file-01
                    :ARG1 (c13-1 / request-01
                                 :ARG1 (c13-3 / sunshine)))
       :ARG1 (c13-2 / time))

# ::snt or it could simply be the truth. Unfortunately, we'll never know for sure.
# ::tokens ["or", "it", "could", "simply", "be", "the", "truth", ".", "Unfortunately", ",", "we", "'ll", "never", "know", "for", "sure", "."]
# ::lemmas ["or", "it", "could", "simply", "be", "the", "truth", ".", "unfortunately", ",", "we", "'ll", "never", "know", "for", "sure", "."]
(c14-2 / multi-sentence
       :snt1 (c14-3 / or
                    :op2 (c14-8 / possible-01
                                :ARG1 (c14-10 / true-01
                                              :ARG1 (c14-6 / it)
                                              :ARG1-of (c14-9 / simple-02))))
       :snt2 (c14-7 / know-01
                    :ARG0 (c14-0 / we)
                    :time (c14-4 / ever)
                    :ARG1-of (c14-5 / sure-02
                                    :ARG0 c14-0)
                    :ARG2-of (c14-1 / fortunate-01
                                    :polarity -)
                    :polarity -))

# ::snt that's certainly what it looks like...
# ::tokens ["that", "'s", "certainly", "what", "it", "looks", "like", "..."]
# ::lemmas ["that", "be", "certainly", "what", "it", "look", "like", "..."]
(c15-1 / look-02
       :ARG0 (c15-3 / it)
       :ARG1 (c15-2 / that)
       :mod (c15-0 / certain))

# ::snt just admit you got the wrong person man seriously you cocked up
# ::tokens ["just", "admit", "you", "got", "the", "wrong", "person", "man", "seriously", "you", "cocked", "up"]
# ::lemmas ["just", "admit", "you", "get", "the", "wrong", "person", "man", "seriously", "you", "cock", "up"]
(c16-7 / say-01
       :ARG0 (c16-4 / i)
       :ARG1 (c16-8 / admit-01
                    :ARG0 (c16-2 / man)
                    :ARG1 (c16-6 / get-02
                                 :ARG0 c16-2
                                 :ARG1 (c16-5 / person
                                              :ARG1-of (c16-1 / wrong-04)))
                    :mod (c16-0 / just)
                    :ARG1-of (c16-3 / serious-01))
       :ARG2 c16-2)

# ::snt you guys still doing this? haven't you caused enough trouble with your own piss poor investigation
# ::tokens ["you", "guys", "still", "doing", "this", "?", "have", "n't", "you", "caused", "enough", "trouble", "with", "your", "own", "piss", "poor", "investigation"]
# ::lemmas ["you", "guy", "still", "do", "this", "?", "have", "not", "you", "cause", "enough", "trouble", "with", "your", "own", "piss", "poor", "investigation"]
(c17-2 / multi-sentence
       :snt1 (c17-6 / do-02
                    :polarity (c17-14 / amr-unknown)
                    :ARG0 (c17-1 / you
                                 :mod (c17-8 / guy))
                    :ARG1 (c17-12 / this)
                    :mod (c17-10 / still))
       :snt2 (c17-7 / cause-01
                    :ARG0 (c17-9 / you)
                    :ARG1 (c17-11 / trouble-01
                                  :ARG0 c17-9
                                  :ARG2 (c17-4 / investigate-01
                                               :ARG0 c17-9
                                               :mod (c17-5 / poor
                                                           :mod (c17-13 / piss)))
                                  :ARG1-of (c17-0 / have-quant-91
                                                  :ARG3 (c17-3 / enough)))
                    :polarity c17-14))

# ::snt Why is my picture as your picture that's creepy!
# ::tokens ["Why", "is", "my", "picture", "as", "your", "picture", "that", "'s", "creepy", "!"]
# ::lemmas ["why", "be", "my", "picture", "as", "your", "picture", "that", "be", "creepy", "!"]
(c19-4 / cause-01
       :ARG0 (c19-7 / amr-unknown)
       :ARG1 (c19-3 / creepy-04
                    :ARG0 (c19-2 / picture
                                 :poss (c19-1 / i)
                                 :ARG1-of (c19-5 / resemble-01
                                                 :ARG2 (c19-6 / picture
                                                              :poss (c19-0 / you))))))

# ::snt Darren Wilson may be a red herring and the guy you IDed yesterday might still be the actual killer.
# ::tokens ["Darren", "Wilson", "may", "be", "a", "red", "herring", "and", "the", "guy", "you", "IDed", "yesterday", "might", "still", "be", "the", "actual", "killer", "."]
# ::lemmas ["Darren", "Wilson", "may", "be", "a", "red", "herring", "and", "the", "guy", "you", "ided", "yesterday", "might", "still", "be", "the", "actual", "killer", "."]
(c20-13 / and
        :op1 (c20-6 / possible-01
                    :ARG1 (c20-0 / herring
                                 :ARG1-of (c20-7 / red-02)
                                 :domain (c20-12 / person
                                                 :name (c20-5 / name
                                                              :op1 "Darren"
                                                              :op2 "Wilson"))))
        :op2 (c20-2 / possible-01
                    :ARG1 (c20-11 / kill-01
                                  :ARG0 (c20-8 / guy
                                               :ARG1-of (c20-4 / ID-01
                                                               :ARG0 (c20-1 / you)
                                                               :time (c20-9 / yesterday)))
                                  :ARG1-of (c20-3 / actual-02)
                                  :mod (c20-10 / still))))

# ::snt or maybe you were just wrong?
# ::tokens ["or", "maybe", "you", "were", "just", "wrong", "?"]
# ::lemmas ["or", "maybe", "you", "be", "just", "wrong", "?"]
(c21-3 / or
       :op2 (c21-4 / possible-01
                   :ARG1 (c21-1 / wrong-04
                                :ARG1 (c21-2 / you)
                                :mod (c21-0 / just))
                   :polarity (c21-5 / amr-unknown)))

# ::snt it totally sounds like you're from the STL area....
# ::tokens ["it", "totally", "sounds", "like", "you", "'re", "from", "the", "STL", "area", "...."]
# ::lemmas ["it", "totally", "sound", "like", "you", "be", "from", "the", "STL", "area", "...."]
(c22-4 / sound-01
       :ARG1 (c22-0 / you)
       :ARG2 (c22-1 / be-from-91
                    :ARG1 c22-0
                    :ARG2 (c22-6 / area
                                 :mod (c22-3 / city
                                             :name (c22-2 / name
                                                          :op1 "STL"))))
       :degree (c22-5 / total))

# ::snt I'm right there with you
# ::tokens ["I", "'m", "right", "there", "with", "you"]
# ::lemmas ["i", "be", "right", "there", "with", "you"]
(c23-1 / be-located-at-91
       :ARG1 (c23-2 / i)
       :ARG2 (c23-4 / there
                    :mod (c23-3 / right))
       :accompanier (c23-0 / you))

# ::snt you've also proven to be a reckless idiot with no regard for people's lives, so who cares what you think? Find proof then
# ::tokens ["you", "'ve", "also", "proven", "to", "be", "a", "reckless", "idiot", "with", "no", "regard", "for", "people", "'s", "lives", ",", "so", "who", "cares", "what", "you", "think", "?", "Find", "proof", "then"]
# ::lemmas ["you", "'ve", "also", "prove", "to", "be", "a", "reckless", "idiot", "with", "no", "regard", "for", "people", "'s", "life", ",", "so", "who", "care", "what", "you", "think", "?", "find", "proof", "then"]
(c24-2 / multi-sentence
       :snt1 (c24-9 / prove-01
                    :ARG1 (c24-6 / idiot
                                 :mod (c24-10 / reckless)
                                 :domain (c24-0 / you)
                                 :ARG0-of (c24-7 / regard-01
                                                 :ARG1 (c24-1 / life
                                                              :poss (c24-14 / person))
                                                 :polarity -))
                    :mod (c24-15 / also))
       :snt2 (c24-11 / care-01
                     :ARG0 (c24-5 / amr-unknown)
                     :ARG1 (c24-13 / thing
                                   :ARG1-of (c24-12 / think-01
                                                    :ARG0 (c24-16 / you))))
       :snt3 (c24-3 / find-01
                    :ARG0 (c24-4 / you)
                    :ARG1 c24-9
                    :mode imperative)
       :time (c24-8 / then))

# ::snt This is a scham. I didn't think the chief could screw up any worse than the last week. I was wrong. What am awful statement
# ::tokens ["This", "is", "a", "scham", ".", "I", "did", "n't", "think", "the", "chief", "could", "screw", "up", "any", "worse", "than", "the", "last", "week", ".", "I", "was", "wrong", ".", "What", "am", "awful", "statement"]
# ::lemmas ["this", "be", "a", "scham", ".", "i", "do", "not", "think", "the", "chief", "could", "screw", "up", "any", "bad", "than", "the", "last", "week", ".", "i", "be", "wrong", ".", "what", "be", "awful", "statement"]
(c25-0 / multi-sentence
       :snt1 (c25-3 / scham
                    :domain (c25-18 / this))
       :snt2 (c25-17 / think-01
                     :ARG0 (c25-13 / i)
                     :ARG1 (c25-2 / possible-01
                                  :ARG1 (c25-8 / screw-up-01
                                               :ARG0 (c25-16 / chief)
                                               :ARG1-of (c25-5 / have-degree-91
                                                               :ARG2 (c25-7 / bad-07
                                                                            :ARG1 c25-8)
                                                               :ARG3 (c25-10 / more
                                                                             :mod (c25-4 / any))
                                                               :ARG4 (c25-11 / week
                                                                             :mod (c25-6 / last)))))
                     :polarity -)
       :snt3 (c25-1 / wrong-04
                    :ARG1 (c25-14 / i))
       :snt4 (c25-15 / state-01
                     :ARG1 (c25-12 / amr-unknown)
                     :mod (c25-9 / awful)))

# ::snt is that armed robbery on the police dispatch
# ::tokens ["is", "that", "armed", "robbery", "on", "the", "police", "dispatch"]
# ::lemmas ["be", "that", "armed", "robbery", "on", "the", "police", "dispatch"]
(c26-2 / rob-01
       :ARG1-of (c26-3 / arm-01)
       :location (c26-0 / dispatch-01
                        :ARG0 (c26-1 / police)))

# ::snt Robbery was over a tobacco product from QT, minutes before.
# ::tokens ["Robbery", "was", "over", "a", "tobacco", "product", "from", "QT", ",", "minutes", "before", "."]
# ::lemmas ["Robbery", "be", "over", "a", "tobacco", "product", "from", "QT", ",", "minute", "before", "."]
(c27-4 / rob-01
       :ARG1 (c27-3 / product
                    :mod (c27-8 / tobacco)
                    :source (c27-5 / company
                                   :name (c27-2 / name
                                                :op1 "QT")))
       :time (c27-1 / before
                    :quant (c27-0 / multiple
                                  :op1 (c27-7 / temporal-quantity
                                              :unit (c27-6 / minute)
                                              :quant 1))))

# ::snt LIES! was not wanted in robbery otherwise his friend would hv been considered an accomplice
# ::tokens ["LIES", "!", "was", "not", "wanted", "in", "robbery", "otherwise", "his", "friend", "would", "hv", "been", "considered", "an", "accomplice"]
# ::lemmas ["lie", "!", "be", "not", "want", "in", "robbery", "otherwise", "his", "friend", "would", "hv", "be", "consider", "an", "accomplice"]
(c28-11 / and
        :op1 (c28-1 / want-01
                    :ARG1 (c28-2 / lie-08)
                    :ARG1-of (c28-9 / cause-01
                                    :ARG0 (c28-8 / rob-01))
                    :polarity -)
        :op2 (c28-10 / consider-01
                     :ARG1 (c28-0 / have-rel-role-91
                                  :ARG0 (c28-7 / person
                                               :ARG1 (c28-3 / he)
                                               :ARG2 (c28-4 / friend)
                                               :ARG1-of c28-10)
                                  :ARG0 c28-7)
                     :ARG2 (c28-5 / accomplice))
        :condition (c28-6 / have-polarity-91
                          :ARG1 c28-1
                          :ARG2 -))

# ::snt You never had the correct name of the officer, losing faith in Anonomis
# ::tokens ["You", "never", "had", "the", "correct", "name", "of", "the", "officer", ",", "losing", "faith", "in", "Anonomis"]
# ::lemmas ["you", "never", "have", "the", "correct", "name", "of", "the", "officer", ",", "lose", "faith", "in", "Anonomis"]
(c29-11 / and
        :op1 (c29-0 / have-03
                    :ARG0 (c29-1 / you)
                    :ARG1 (c29-10 / thing
                                  :ARG2-of (c29-6 / name-01
                                                  :ARG1 (c29-4 / officer))
                                  :ARG1-of (c29-9 / correct-02))
                    :time (c29-5 / ever)
                    :polarity -)
        :op2 (c29-2 / lose-02
                    :ARG0 c29-1
                    :ARG1 (c29-3 / faith
                                 :poss (c29-8 / person
                                              :name (c29-7 / name
                                                           :op1 "Anonomis")))))

# ::snt Well you're trusting a failfag just cuz he has an anon name and avi, so.....
# ::tokens ["Well", "you", "'re", "trusting", "a", "failfag", "just", "cuz", "he", "has", "an", "anon", "name", "and", "avi", ",", "so", "....."]
# ::lemmas ["well", "you", "be", "trust", "a", "failfag", "just", "cuz", "he", "have", "an", "anon", "name", "and", "avi", ",", "so", "....."]
(c30-11 / trust-02
        :ARG0 (c30-1 / you)
        :ARG1 (c30-3 / failfag)
        :ARG1-of (c30-10 / cause-01
                         :ARG0 (c30-0 / have-03
                                      :ARG0 c30-3
                                      :ARG1 (c30-12 / and
                                                    :op1 (c30-7 / name
                                                                :mod (c30-5 / on))
                                                    :op2 (c30-8 / name
                                                                :mod (c30-6 / avatar))
                                                    :ARG0-of (c30-9 / cause-01)))
                         :mod (c30-2 / just))
        :mod (c30-4 / well))

# ::snt they want us to believe this. To stop the outrage across the country
# ::tokens ["they", "want", "us", "to", "believe", "this", ".", "To", "stop", "the", "outrage", "across", "the", "country"]
# ::lemmas ["they", "want", "we", "to", "believe", "this", ".", "to", "stop", "the", "outrage", "across", "the", "country"]
(c31-1 / multi-sentence
       :snt1 (c31-0 / want-01
                    :ARG0 (c31-8 / they)
                    :ARG1 (c31-2 / believe-01
                                 :ARG0 (c31-4 / we)
                                 :ARG1 (c31-6 / this)))
       :snt2 (c31-7 / stop-01
                    :ARG1 (c31-3 / outrage-01
                                 :location (c31-9 / across
                                                  :op1 (c31-5 / country)))))

# ::snt yeah and Bigfoot and the tooth fairy are real too
# ::tokens ["yeah", "and", "Bigfoot", "and", "the", "tooth", "fairy", "are", "real", "too"]
# ::lemmas ["yeah", "and", "Bigfoot", "and", "the", "tooth", "fairy", "be", "real", "too"]
(c32-7 / and
       :op2 (c32-4 / real-04
                   :ARG1 (c32-3 / and
                                :op1 (c32-2 / bigfoot)
                                :op2 (c32-1 / fairy
                                            :mod (c32-6 / tooth)))
                   :mod (c32-5 / too))
       :mod (c32-0 / yeah
                   :mode expressive))

# ::snt I personally don't trust St. Louis County PD, and I think they waited all this time to forge and falsify evidence.
# ::tokens ["I", "personally", "do", "n't", "trust", "St.", "Louis", "County", "PD", ",", "and", "I", "think", "they", "waited", "all", "this", "time", "to", "forge", "and", "falsify", "evidence", "."]
# ::lemmas ["i", "personally", "do", "not", "trust", "St.", "Louis", "County", "PD", ",", "and", "i", "think", "they", "wait", "all", "this", "time", "to", "forge", "and", "falsify", "evidence", "."]
(c33-14 / and
        :op1 (c33-13 / trust-02
                     :ARG0 (c33-5 / i)
                     :ARG1 (c33-11 / government-organization
                                   :name (c33-7 / name
                                                :op1 "St."
                                                :op2 "Louis"
                                                :op3 "County"
                                                :op4 "PD"))
                     :ARG1-of (c33-9 / personal-02)
                     :polarity -)
        :op2 (c33-12 / think-01
                     :ARG0 c33-5
                     :ARG1 (c33-0 / wait-01
                                  :ARG1 c33-11
                                  :ARG2 (c33-4 / and
                                               :op1 (c33-1 / forge-02
                                                           :ARG0 c33-11
                                                           :ARG1 (c33-2 / evidence-01))
                                               :op2 (c33-6 / falsify-01
                                                           :ARG0 c33-11
                                                           :ARG1 c33-2))
                                  :time (c33-8 / time
                                               :mod (c33-3 / this)
                                               :mod (c33-10 / all)))))

# ::snt If they think they are going to pull a fast one on the DOJ and FBI they are in for a big surprise.
# ::tokens ["If", "they", "think", "they", "are", "going", "to", "pull", "a", "fast", "one", "on", "the", "DOJ", "and", "FBI", "they", "are", "in", "for", "a", "big", "surprise", "."]
# ::lemmas ["if", "they", "think", "they", "be", "go", "to", "pull", "a", "fast", "one", "on", "the", "DOJ", "and", "FBI", "they", "be", "in", "for", "a", "big", "surprise", "."]
(c34-9 / surprise-01
       :ARG1 (c34-10 / they)
       :mod (c34-1 / big)
       :condition (c34-8 / think-01
                         :ARG0 c34-10
                         :ARG1 (c34-5 / pull-06
                                      :ARG0 c34-10
                                      :ARG1 (c34-2 / one
                                                   :ARG1-of (c34-0 / fast-02))
                                      :ARG2 (c34-11 / and
                                                    :op1 (c34-7 / government-organization
                                                                :name (c34-3 / name
                                                                             :op1 "DOJ"))
                                                    :op2 (c34-6 / government-organization
                                                                :name (c34-4 / name
                                                                             :op1 "FBI"))))))

# ::snt a criminal organization should have never been trusted. It was a witch hunt. Sickened me.
# ::tokens ["a", "criminal", "organization", "should", "have", "never", "been", "trusted", ".", "It", "was", "a", "witch", "hunt", ".", "Sickened", "me", "."]
# ::lemmas ["a", "criminal", "organization", "should", "have", "never", "be", "trust", ".", "it", "be", "a", "witch", "hunt", ".", "sicken", "i", "."]
(c35-2 / multi-sentence
       :snt1 (c35-6 / recommend-01
                    :ARG1 (c35-10 / trust-01
                                  :ARG1 (c35-3 / organization
                                               :ARG2-of (c35-7 / criminal-03))
                                  :time (c35-4 / ever))
                    :polarity -)
       :snt2 (c35-0 / hunt-01
                    :ARG1 (c35-1 / witch)
                    :domain (c35-5 / it))
       :snt3 (c35-9 / sicken-01
                    :ARG1 (c35-8 / i)))

# ::snt I make up my own mind.
# ::tokens ["I", "make", "up", "my", "own", "mind", "."]
# ::lemmas ["i", "make", "up", "my", "own", "mind", "."]
(c36-0 / make-up-mind-12
       :ARG0 (c36-1 / i))

# ::snt relax nigga.
# ::tokens ["relax", "nigga", "."]
# ::lemmas ["relax", "nigga", "."]
(c37-4 / say-01
       :ARG1 (c37-3 / relax-01
                    :ARG0 (c37-0 / you)
                    :ARG1 (c37-2 / person
                                 :name (c37-1 / name
                                              :op1 "Nigga")
                                 :ARG2-of c37-4)
                    :mode imperative))

# ::snt agreed
# ::tokens ["agreed"]
# ::lemmas ["agree"]
(c38-0 / agree-01)
