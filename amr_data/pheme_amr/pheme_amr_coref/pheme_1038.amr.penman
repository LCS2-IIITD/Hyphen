# ::snt i hope you show some respect in your stream today !
# ::tokens ["i", "hope", "you", "show", "some", "respect", "in", "your", "stream", "today", "!"]
# ::lemmas ["i", "hope", "you", "show", "some", "respect", "in", "your", "stream", "today", "!"]
(c1-0 / hope-01
      :ARG0 (c1-4 / i)
      :ARG1 (c1-6 / show-01
                  :ARG0 (c1-1 / you)
                  :ARG1 (c1-5 / respect-01
                              :ARG1 c1-1
                              :quant (c1-3 / some))
                  :location (c1-2 / stream-01
                                  :ARG0 c1-1)
                  :time (c1-7 / today))
      :mode expressive)

# ::snt NEXT,? Kim kardashian and they other sluts wasn't on board yet not this one next one watch ,kim ,usher ,and all rest
# ::tokens ["NEXT", ",", "?", "Kim", "kardashian", "and", "they", "other", "sluts", "was", "n't", "on", "board", "yet", "not", "this", "one", "next", "one", "watch", ",", "kim", ",", "usher", ",", "and", "all", "rest"]
# ::lemmas ["NEXT", ",", "?", "Kim", "kardashian", "and", "they", "other", "slut", "be", "not", "on", "board", "yet", "not", "this", "one", "next", "one", "watch", ",", "kim", ",", "usher", ",", "and", "all", "rest"]
(c2-0 / multi-sentence
      :snt1 (c2-9 / next)
      :snt2 (c2-6 / and
                  :op1 (c2-8 / be-located-at-91
                             :ARG1 (c2-13 / and
                                          :op1 (c2-3 / person
                                                     :name (c2-18 / name
                                                                  :op1 "Kim"
                                                                  :op2 "Kardashian"))
                                          :op2 (c2-4 / sluts
                                                     :mod (c2-17 / other)
                                                     :poss c2-13))
                             :ARG2 (c2-14 / board)
                             :time (c2-15 / yet)
                             :polarity -)
                  :op2 (c2-12 / watch-01
                              :ARG1 (c2-10 / and
                                           :op1 (c2-5 / person
                                                      :name (c2-1 / name
                                                                  :op1 "Kim"))
                                           :op2 (c2-7 / person
                                                      :name (c2-2 / name
                                                                  :op1 "usher"))
                                           :op3 (c2-11 / rest
                                                       :mod (c2-19 / all)))
                              :mod (c2-20 / this)
                              :mod (c2-16 / one
                                          :mod c2-9)
                              :polarity -)))

# ::snt : feared dead in Airbus crash. LIVE coverage
# ::tokens [":", "feared", "dead", "in", "Airbus", "crash", ".", "LIVE", "coverage"]
# ::lemmas [":", "fear", "dead", "in", "Airbus", "crash", ".", "live", "coverage"]
(c3-1 / multi-sentence
      :snt1 (c3-0 / fear-01
                  :ARG1 (c3-4 / die-01
                              :ARG1-of (c3-5 / cause-01
                                             :ARG0 (c3-6 / crash-01
                                                         :ARG1 (c3-8 / aircraft-type
                                                                     :name (c3-3 / name
                                                                                 :op1 "Airbus"))))))
      :snt2 (c3-7 / cover-03
                  :manner (c3-2 / live)))

# ::snt :lol
# ::tokens [":", "lol"]
# ::lemmas [":", "lol"]
(c4-0 / laugh-01
      :ARG0 (c4-1 / i)
      :manner (c4-2 / loud)
      :mode expressive)

# ::snt all think muslim filth responsoble....UNTIL proven otherwise.
# ::tokens ["all", "think", "muslim", "filth", "responsoble", "....", "UNTIL", "proven", "otherwise", "."]
# ::lemmas ["all", "think", "muslim", "filth", "responsoble", "....", "until", "prove", "otherwise", "."]
(c5-6 / contrast-01
      :ARG1 (c5-7 / think-01
                  :ARG0 (c5-8 / all)
                  :ARG1 (c5-0 / have-polarity-91
                              :ARG1 (c5-1 / filth
                                          :mod (c5-5 / religious-group
                                                     :name (c5-3 / name
                                                                 :op1 "Islam")))
                              :ARG2 -))
      :ARG2 (c5-4 / prove-01
                  :ARG1 c5-0
                  :time (c5-2 / until
                              :ARG1 c5-0)
                  :op1-of c5-2
                  :polarity -))
