# ::snt That one mocking English is hilarious
# ::tokens ["That", "one", "mocking", "English", "is", "hilarious"]
# ::lemmas ["that", "one", "mock", "English", "be", "hilarious"]
(c1-0 / hilarious
      :domain (c1-2 / one
                    :ARG0-of (c1-1 / mock-01
                                   :ARG1 (c1-4 / person
                                               :mod (c1-5 / country
                                                          :name (c1-3 / name
                                                                      :op1 "England"))))
                    :mod (c1-6 / that)))

# ::snt Apparently they overlooked this one
# ::tokens ["Apparently", "they", "overlooked", "this", "one"]
# ::lemmas ["apparently", "they", "overlook", "this", "one"]
(c3-1 / overlook-01
      :ARG0 (c3-3 / they)
      :ARG1 (c3-0 / one
                  :mod (c3-2 / this))
      :ARG1-of (c3-4 / appear-02))

# ::snt every paper in Europe should have a muhommed picture above the margin tomorrow. Welcome to the west, dont like it get a helmet.
# ::tokens ["every", "paper", "in", "Europe", "should", "have", "a", "muhommed", "picture", "above", "the", "margin", "tomorrow", ".", "Welcome", "to", "the", "west", ",", "do", "nt", "like", "it", "get", "a", "helmet", "."]
# ::lemmas ["every", "paper", "in", "Europe", "should", "have", "a", "muhommed", "picture", "above", "the", "margin", "tomorrow", ".", "welcome", "to", "the", "west", ",", "do", "not", "like", "it", "get", "a", "helmet", "."]
(c4-0 / multi-sentence
      :snt1 (c4-12 / recommend-01
                   :ARG1 (c4-7 / have-03
                               :ARG0 (c4-2 / paper
                                           :mod (c4-9 / every)
                                           :location (c4-17 / continent
                                                            :name (c4-10 / name
                                                                         :op1 "Europe")))
                               :ARG1 (c4-4 / picture
                                           :ARG1-of (c4-11 / muhommed-01)
                                           :location (c4-6 / above
                                                           :op1 (c4-8 / margin)))
                               :time (c4-18 / tomorrow)))
      :snt2 (c4-15 / and
                   :op1 (c4-14 / welcome-01
                               :ARG1 (c4-1 / world-region
                                           :name (c4-16 / name
                                                        :op1 "West")))
                   :op2 (c4-3 / dislike-01
                              :ARG1 (c4-13 / get-01
                                           :ARG0 c4-1
                                           :ARG1 (c4-5 / helmet)))))

# ::snt your not based in CA right?
# ::tokens ["your", "not", "based", "in", "CA", "right", "?"]
# ::lemmas ["your", "not", "base", "in", "CA", "right", "?"]
(c6-1 / base-01
      :ARG1 (c6-0 / you)
      :location (c6-4 / state
                      :name (c6-2 / name
                                  :op1 "CA"))
      :ARG1-of (c6-3 / request-confirmation-91)
      :polarity -)

# ::snt Also, I apologize for the use of the word "animals". That's insulting to fine animals everywhere.
# ::tokens ["Also", ",", "I", "apologize", "for", "the", "use", "of", "the", "word", "\"", "animals", "\"", ".", "That", "'s", "insulting", "to", "fine", "animals", "everywhere", "."]
# ::lemmas ["also", ",", "i", "apologize", "for", "the", "use", "of", "the", "word", "\"", "animal", "\"", ".", "that", "be", "insulting", "to", "fine", "animal", "everywhere", "."]
(c7-2 / multi-sentence
      :snt1 (c7-11 / apologize-01
                   :ARG0 (c7-6 / i)
                   :ARG1 (c7-3 / use-01
                               :ARG1 (c7-0 / word-01
                                           :ARG1 (c7-5 / animal)))
                   :mod (c7-7 / also))
      :snt2 (c7-8 / insult-01
                  :ARG0 (c7-10 / that)
                  :ARG1 (c7-9 / animal
                              :ARG1-of (c7-1 / fine-03)
                              :location (c7-4 / everywhere))))

# ::snt breitbart doesn't care cause you know they have enough guns to defend themselves
# ::tokens ["breitbart", "does", "n't", "care", "cause", "you", "know", "they", "have", "enough", "guns", "to", "defend", "themselves"]
# ::lemmas ["breitbart", "do", "not", "care", "cause", "you", "know", "they", "have", "enough", "gun", "to", "defend", "themselves"]
(c8-6 / care-01
      :ARG0 (c8-4 / publication
                  :name (c8-3 / name
                              :op1 "Breitbart"))
      :ARG1-of (c8-5 / cause-01
                     :ARG0 (c8-9 / know-01
                                 :ARG0 (c8-1 / you)
                                 :ARG1 (c8-0 / have-03
                                             :ARG0 c8-4
                                             :ARG1 (c8-7 / gun
                                                         :ARG1-of (c8-10 / have-quant-91
                                                                         :ARG3 (c8-2 / enough)
                                                                         :ARG6 (c8-8 / defend-01
                                                                                     :ARG0 c8-4
                                                                                     :ARG1 c8-4))))))
      :polarity -)

# ::snt how do you say in French?
# ::tokens ["how", "do", "you", "say", "in", "French", "?"]
# ::lemmas ["how", "do", "you", "say", "in", "French", "?"]
(c9-3 / say-01
      :ARG0 (c9-0 / you)
      :ARG3 (c9-1 / language
                  :name (c9-2 / name
                              :op1 "French"))
      :manner (c9-4 / amr-unknown))

# ::snt Yes and no. Consider this take from a crypto researcher who tends to have insightful takes in general
# ::tokens ["Yes", "and", "no", ".", "Consider", "this", "take", "from", "a", "crypto", "researcher", "who", "tends", "to", "have", "insightful", "takes", "in", "general"]
# ::lemmas ["yes", "and", "no", ".", "consider", "this", "take", "from", "a", "crypto", "researcher", "who", "tend", "to", "have", "insightful", "take", "in", "general"]
(c10-0 / multi-sentence
       :snt1 (c10-4 / and
                    :op1 (c10-13 / yes)
                    :op2 (c10-6 / no))
       :snt2 (c10-16 / consider-02
                     :ARG0 (c10-12 / you)
                     :ARG1 (c10-18 / thing
                                   :ARG1-of (c10-11 / take-01
                                                    :ARG0 (c10-2 / person
                                                                 :ARG0-of (c10-7 / research-01
                                                                                 :ARG1 (c10-10 / thing
                                                                                               :mod (c10-3 / crypto)))
                                                                 :ARG0-of (c10-15 / tend-02
                                                                                  :ARG1 (c10-5 / have-03
                                                                                               :ARG0 c10-2
                                                                                               :ARG1 (c10-17 / thing
                                                                                                             :ARG1-of (c10-14 / take-01
                                                                                                                              :ARG0 c10-2
                                                                                                                              :ARG1-of (c10-8 / general-02)
                                                                                                                              :ARG0-of (c10-9 / insight-01))))))
                                                    :mod (c10-1 / this)))
                     :mode imperative))

# ::snt :"j'ai les mains en l'air ne tire pas" sort of.
# ::tokens [":", "\"", "j'ai", "les", "mains", "en", "l'air", "ne", "tire", "pas", "\"", "sort", "of", "."]
# ::lemmas [":", "\"", "j'ai", "les", "main", "en", "l'air", "ne", "tire", "pas", "\"", "sort", "of", "."]
(c11-3 / sort-of
       :op1 (c11-0 / say-01
                   :ARG1 (c11-2 / possible-01
                                :ARG1 (c11-4 / tire-01
                                             :ARG1 (c11-5 / person
                                                          :name (c11-1 / name
                                                                       :op1 "l'mains")
                                                          :location (c11-6 / air)))
                                :polarity -)))

# ::snt : Breitbart has reprinted some of the cartoons that prompted todays attack all rt
# ::tokens [":", "Breitbart", "has", "reprinted", "some", "of", "the", "cartoons", "that", "prompted", "todays", "attack", "all", "rt"]
# ::lemmas [":", "Breitbart", "have", "reprint", "some", "of", "the", "cartoon", "that", "prompt", "today", "attack", "all", "rt"]
(c12-3 / reprint-01
       :ARG0 (c12-2 / publication
                    :name (c12-1 / name
                                 :op1 "Breitbart"))
       :ARG1 (c12-4 / cartoon
                    :ARG1-of (c12-0 / include-91
                                    :ARG2 (c12-5 / cartoon
                                                 :ARG0-of (c12-8 / prompt-01
                                                                 :ARG1 (c12-9 / attack-01
                                                                              :time (c12-7 / today)))))
                    :mod (c12-6 / some)))

# ::snt If you have an image gallery of the cartoons, it would be appreciated.
# ::tokens ["If", "you", "have", "an", "image", "gallery", "of", "the", "cartoons", ",", "it", "would", "be", "appreciated", "."]
# ::lemmas ["if", "you", "have", "an", "image", "gallery", "of", "the", "cartoon", ",", "it", "would", "be", "appreciate", "."]
(c14-6 / appreciate-02
       :ARG1 (c14-2 / it)
       :condition (c14-0 / have-03
                         :ARG0 (c14-1 / you)
                         :ARG1 (c14-4 / gallery
                                      :mod (c14-5 / image)
                                      :topic (c14-3 / cartoon))))

# ::snt Come on, I posted them on Twitter, Facebook and temporarily changed my icon all in solidarity. Your turn
# ::tokens ["Come", "on", ",", "I", "posted", "them", "on", "Twitter", ",", "Facebook", "and", "temporarily", "changed", "my", "icon", "all", "in", "solidarity", ".", "Your", "turn"]
# ::lemmas ["come", "on", ",", "i", "post", "they", "on", "Twitter", ",", "Facebook", "and", "temporarily", "change", "my", "icon", "all", "in", "solidarity", ".", "your", "turn"]
(c16-1 / multi-sentence
       :snt1 (c16-9 / come-on-25
                    :ARG1 (c16-0 / you)
                    :mode imperative)
       :snt2 (c16-16 / and
                     :op1 (c16-7 / post-01
                                 :ARG0 (c16-4 / i)
                                 :ARG1 (c16-14 / they)
                                 :ARG2 (c16-3 / and
                                              :op1 (c16-15 / publication
                                                           :name (c16-5 / name
                                                                        :op1 "Twitter"))
                                              :op2 (c16-2 / publication
                                                          :name (c16-6 / name
                                                                       :op1 "Facebook"))))
                     :op2 (c16-8 / change-01
                                 :ARG0 c16-4
                                 :ARG1 (c16-10 / icon
                                               :poss c16-4)
                                 :duration (c16-12 / temporary)
                                 :manner (c16-13 / solidarity)))
       :snt3 (c16-11 / turn-11
                     :ARG0 (c16-17 / you)))

# ::snt Here you go
# ::tokens ["Here", "you", "go"]
# ::lemmas ["here", "you", "go"]
(c17-2 / go-01
       :ARG1 (c17-1 / you)
       :ARG4 (c17-0 / here))

# ::snt Enjoy!
# ::tokens ["Enjoy", "!"]
# ::lemmas ["enjoy", "!"]
(c18-1 / enjoy-01
       :ARG0 (c18-0 / you)
       :mode expressive)

# ::snt That's a good thing because some media has pixelated or blurred them outright (funnily enough, not german media so far).
# ::tokens ["That", "'s", "a", "good", "thing", "because", "some", "media", "has", "pixelated", "or", "blurred", "them", "outright", "(", "funnily", "enough", ",", "not", "german", "media", "so", "far", ")", "."]
# ::lemmas ["that", "be", "a", "good", "thing", "because", "some", "medium", "have", "pixelate", "or", "blur", "they", "outright", "(", "funnily", "enough", ",", "not", "german", "medium", "so", "far", ")", "."]
(c19-12 / good-02
        :ARG1 (c19-16 / thing
                      :domain (c19-14 / that))
        :ARG1-of (c19-11 / cause-01
                         :ARG0 (c19-4 / or
                                      :op1 (c19-9 / pixelate-01
                                                  :ARG0 (c19-2 / media
                                                               :mod (c19-15 / some))
                                                  :ARG1 (c19-8 / they))
                                      :op2 (c19-3 / blur-01
                                                  :ARG0 c19-2
                                                  :ARG1 c19-8)
                                      :mod (c19-1 / outright)
                                      :concession (c19-10 / media
                                                          :mod (c19-13 / country
                                                                       :name (c19-7 / name
                                                                                    :op1 "Germany"))
                                                          :time (c19-5 / so-far)
                                                          :ARG2-of (c19-0 / have-degree-91
                                                                          :ARG1 c19-4
                                                                          :ARG3 (c19-6 / enough))
                                                          :polarity -))))

# ::snt Every paper in the western world ought to do it. We've tried to placate these animals for too long.
# ::tokens ["Every", "paper", "in", "the", "western", "world", "ought", "to", "do", "it", ".", "We", "'ve", "tried", "to", "placate", "these", "animals", "for", "too", "long", "."]
# ::lemmas ["every", "paper", "in", "the", "western", "world", "ought", "to", "do", "it", ".", "we", "'ve", "try", "to", "placate", "these", "animal", "for", "too", "long", "."]
(c20-3 / multi-sentence
       :snt1 (c20-11 / recommend-01
                     :ARG1 (c20-10 / do-02
                                   :ARG0 (c20-9 / paper
                                                :mod (c20-4 / every)
                                                :location (c20-1 / world-region
                                                                 :name (c20-7 / name
                                                                              :op1 "West")))
                                   :ARG1 (c20-5 / it)))
       :snt2 (c20-13 / try-01
                     :ARG0 (c20-6 / we)
                     :ARG1 (c20-14 / placate-01
                                   :ARG0 c20-6
                                   :ARG1 (c20-15 / animal
                                                 :mod (c20-12 / this))
                                   :ARG1-of (c20-2 / long-03
                                                   :ARG2-of (c20-0 / have-degree-91
                                                                   :ARG1 c20-14
                                                                   :ARG3 (c20-8 / too))))))

# ::snt How do I get your job, Milo?
# ::tokens ["How", "do", "I", "get", "your", "job", ",", "Milo", "?"]
# ::lemmas ["how", "do", "i", "get", "your", "job", ",", "Milo", "?"]
(c21-6 / ask-01
       :ARG0 (c21-2 / i)
       :ARG1 (c21-5 / get-01
                    :ARG0 c21-2
                    :ARG1 (c21-0 / job
                                 :poss (c21-4 / person
                                              :name (c21-3 / name
                                                           :op1 "Milo")))
                    :manner (c21-1 / amr-unknown))
       :ARG2 c21-4)

# ::snt The Streisand Effect is usually a force of good, since it's an example of censorship backfiring.
# ::tokens ["The", "Streisand", "Effect", "is", "usually", "a", "force", "of", "good", ",", "since", "it", "'s", "an", "example", "of", "censorship", "backfiring", "."]
# ::lemmas ["The", "Streisand", "Effect", "be", "usually", "a", "force", "of", "good", ",", "since", "it", "be", "an", "example", "of", "censorship", "backfiring", "."]
(c22-0 / force-04
       :ARG0 (c22-9 / affect-01
                    :ARG1 (c22-1 / law
                                 :name (c22-5 / name
                                              :op1 "Straits"
                                              :op2 "Effect")))
       :ARG1 (c22-8 / good-02)
       :mod (c22-2 / usual)
       :ARG1-of (c22-7 / cause-01
                       :ARG0 (c22-4 / exemplify-01
                                    :ARG0 c22-9
                                    :ARG1 (c22-3 / backfiring
                                                 :mod (c22-6 / censor-01)))))

# ::snt Yes cartoons prompted the attack.. you simple twit.
# ::tokens ["Yes", "cartoons", "prompted", "the", "attack", "..", "you", "simple", "twit", "."]
# ::lemmas ["yes", "cartoon", "prompt", "the", "attack", "..", "you", "simple", "twit", "."]
(c23-1 / multi-sentence
       :snt1 (c23-2 / prompt-01
                    :ARG0 (c23-3 / cartoon)
                    :ARG1 (c23-6 / attack-01))
       :snt2 (c23-0 / you
                    :mod (c23-5 / twit
                                :ARG1-of (c23-4 / simple-03))))

# ::snt it's times like this that i remember draw Mohammed day is actually important.
# ::tokens ["it", "'s", "times", "like", "this", "that", "i", "remember", "draw", "Mohammed", "day", "is", "actually", "important", "."]
# ::lemmas ["it", "be", "time", "like", "this", "that", "i", "remember", "draw", "Mohammed", "day", "be", "actually", "important", "."]
(c24-4 / remember-01
       :ARG0 (c24-1 / i)
       :ARG1 (c24-5 / important-01
                    :ARG1 (c24-0 / event
                                 :name (c24-3 / name
                                              :op1 "Draw"
                                              :op2 "Mohammed"
                                              :op3 "Day"))
                    :ARG1-of (c24-8 / actual-02))
       :time (c24-7 / time
                    :ARG1-of (c24-2 / resemble-01
                                    :ARG2 (c24-6 / this))))
