# ::snt the one to fear is the one who would remove it as if you ever noticed it was gone the EU is such a deviceMP s another
# ::tokens ["the", "one", "to", "fear", "is", "the", "one", "who", "would", "remove", "it", "as", "if", "you", "ever", "noticed", "it", "was", "gone", "the", "EU", "is", "such", "a", "deviceMP", "s", "another"]
# ::lemmas ["the", "one", "to", "fear", "be", "the", "one", "who", "would", "remove", "it", "as", "if", "you", "ever", "notice", "it", "be", "go", "the", "EU", "be", "such", "a", "deviceMP", "s", "another"]
(c1-3 / multi-sentence
      :snt1 (c1-2 / fear-01
                  :ARG0 (c1-6 / one
                              :domain (c1-4 / one
                                            :ARG0-of (c1-12 / remove-01
                                                            :ARG1 (c1-9 / it)
                                                            :manner (c1-10 / notice-01
                                                                           :ARG0 (c1-0 / you)
                                                                           :ARG1 (c1-14 / go-02
                                                                                        :ARG0 (c1-15 / it))
                                                                           :time (c1-7 / ever))))))
      :snt2 (c1-13 / device
                   :mod (c1-16 / such)
                   :domain (c1-5 / organization
                                 :name (c1-11 / name
                                              :op1 "EU")))
      :snt3 (c1-1 / device
                  :mod (c1-17 / another)
                  :domain (c1-8 / amr-unknown)))

# ::snt It continues to mystify me why people don't move in hoards/en masse to atheism.
# ::tokens ["It", "continues", "to", "mystify", "me", "why", "people", "do", "n't", "move", "in", "hoards", "/", "en", "masse", "to", "atheism", "."]
# ::lemmas ["it", "continue", "to", "mystify", "i", "why", "people", "do", "not", "move", "in", "hoard", "/", "en", "masse", "to", "atheism", "."]
(c2-6 / continue-01
      :ARG1 (c2-1 / mystify-01
                  :ARG0 (c2-9 / thing
                              :ARG0-of (c2-5 / cause-01
                                             :ARG1 (c2-4 / move-01
                                                         :ARG0 (c2-7 / person)
                                                         :ARG2 (c2-10 / atheism)
                                                         :manner (c2-8 / slash
                                                                       :op1 (c2-0 / hoard)
                                                                       :op2 (c2-2 / en))
                                                         :polarity -)))
                  :ARG1 (c2-3 / i)))

# ::snt how long is it before we can start blaming ourselves?
# ::tokens ["how", "long", "is", "it", "before", "we", "can", "start", "blaming", "ourselves", "?"]
# ::lemmas ["how", "long", "be", "it", "before", "we", "can", "start", "blame", "ourselves", "?"]
(c3-1 / last-01
      :ARG1 (c3-3 / it)
      :ARG2 (c3-2 / before
                  :op1 (c3-4 / possible-01
                             :ARG1 (c3-6 / start-01
                                         :ARG0 (c3-0 / we)
                                         :ARG1 (c3-5 / blame-01
                                                     :ARG0 c3-0
                                                     :ARG1 c3-0))))
      :duration (c3-7 / amr-unknown))

# ::snt well said. But who now will publish Mohammed the mad. It's a death sentence.
# ::tokens ["well", "said", ".", "But", "who", "now", "will", "publish", "Mohammed", "the", "mad", ".", "It", "'s", "a", "death", "sentence", "."]
# ::lemmas ["well", "say", ".", "but", "who", "now", "will", "publish", "Mohammed", "the", "mad", ".", "it", "be", "a", "death", "sentence", "."]
(c4-1 / multi-sentence
      :snt1 (c4-9 / say-01
                  :manner (c4-0 / well-09))
      :snt2 (c4-8 / contrast-01
                  :ARG2 (c4-6 / publish-01
                              :ARG0 (c4-11 / amr-unknown)
                              :ARG1 (c4-10 / person
                                           :name (c4-4 / name
                                                       :op1 "Mohammed"
                                                       :op2 "the"
                                                       :op3 "Mad"))
                              :time (c4-5 / now)))
      :snt3 (c4-2 / sentence-01
                  :ARG2 (c4-7 / die-01)
                  :domain (c4-3 / it)))

# ::snt . Censoring cartoons and satire, caving to pressure from 'islamophobia' propagandists is dangerous.JeSuisCharlie
# ::tokens [".", "Censoring", "cartoons", "and", "satire", ",", "caving", "to", "pressure", "from", "'", "islamophobia", "'", "propagandists", "is", "dangerous", ".", "JeSuisCharlie"]
# ::lemmas [".", "censoring", "cartoon", "and", "satire", ",", "cave", "to", "pressure", "from", "'", "islamophobia", "'", "propagandist", "be", "dangerous", ".", "JeSuisCharlie"]
(c5-8 / dangerous
      :domain (c5-14 / and
                     :op1 (c5-9 / censure-01
                                :ARG1 (c5-2 / and
                                            :op1 (c5-7 / cartoon)
                                            :op2 (c5-12 / satire)))
                     :op2 (c5-11 / cave-01
                                 :ARG2 (c5-6 / pressure-01
                                             :ARG0 (c5-13 / propagandist
                                                          :mod (c5-10 / religious-group
                                                                      :name (c5-4 / name
                                                                                  :op1 "Islamophobia")))
                                             :ARG1 c5-2)))
      :ARG1-of (c5-1 / say-01
                     :ARG0 (c5-3 / i)
                     :ARG2 (c5-0 / person
                                 :name (c5-5 / name
                                             :op1 "JeSuisCharlie"))))

# ::snt agree
# ::tokens ["agree"]
# ::lemmas ["agree"]
(c6-0 / agree-01)

# ::snt Agree with every newspaper in Europe should print the cartoons tomorrow.
# ::tokens ["Agree", "with", "every", "newspaper", "in", "Europe", "should", "print", "the", "cartoons", "tomorrow", "."]
# ::lemmas ["agree", "with", "every", "newspaper", "in", "Europe", "should", "print", "the", "cartoon", "tomorrow", "."]
(c7-9 / agree-01
      :ARG0 (c7-1 / i)
      :ARG1 (c7-5 / recommend-01
                  :ARG1 (c7-4 / print-01
                              :ARG0 (c7-2 / newspaper
                                          :mod (c7-0 / every)
                                          :location (c7-6 / continent
                                                          :name (c7-3 / name
                                                                      :op1 "Europe")))
                              :ARG1 (c7-7 / cartoon)
                              :time (c7-8 / tomorrow)))
      :ARG2 c7-2)

# ::snt is a bunch of common criminals who like to murder ppl. &amp; using excuses that only they believe
# ::tokens ["is", "a", "bunch", "of", "common", "criminals", "who", "like", "to", "murder", "ppl", ".", "&", "amp", ";", "using", "excuses", "that", "only", "they", "believe"]
# ::lemmas ["be", "a", "bunch", "of", "common", "criminal", "who", "like", "to", "murder", "ppl", ".", "&", "amp", ";", "use", "excuse", "that", "only", "they", "believe"]
(c8-7 / person
      :ARG2-of (c8-9 / criminal-03)
      :mod (c8-8 / common)
      :quant (c8-3 / bunch)
      :ARG0-of (c8-0 / like-01
                     :ARG1 (c8-1 / murder-01
                                 :ARG0 c8-7
                                 :ARG1 (c8-12 / and
                                              :op1 (c8-11 / person
                                                          :name (c8-6 / name
                                                                      :op1 "pl."
                                                                      :op2 "&"
                                                                      :op3 "amp")
                                                          :op2-of c8-12))))
      :ARG0-of (c8-2 / use-01
                     :ARG1 (c8-5 / excuse-02
                                 :ARG1-of (c8-10 / believe-01
                                                 :ARG0 c8-7
                                                 :mod (c8-4 / only)))))

# ::snt So true.
# ::tokens ["So", "true", "."]
# ::lemmas ["so", "true", "."]
(c9-1 / true-01
      :degree (c9-0 / so))

# ::snt may it be forever!
# ::tokens ["may", "it", "be", "forever", "!"]
# ::lemmas ["may", "it", "be", "forever", "!"]
(c10-0 / wish-01
       :ARG1 (c10-1 / forever
                    :domain (c10-2 / it)))
