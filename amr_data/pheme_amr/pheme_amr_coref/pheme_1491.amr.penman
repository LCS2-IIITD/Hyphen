# ::snt hi we must ask: 'why are police, acting military, maliciously causing civil unrest? what is the 'bigger picture' ? dd
# ::tokens ["hi", "we", "must", "ask", ":", "'", "why", "are", "police", ",", "acting", "military", ",", "maliciously", "causing", "civil", "unrest", "?", "what", "is", "the", "'", "bigger", "picture", "'", "?", "dd"]
# ::lemmas ["hi", "we", "must", "ask", ":", "'", "why", "be", "police", ",", "act", "military", ",", "maliciously", "cause", "civil", "unrest", "?", "what", "be", "the", "'", "big", "picture", "'", "?", "dd"]
(c1-0 / multi-sentence
      :snt1 (c1-16 / obligate-01
                   :ARG1 (c1-11 / we)
                   :ARG2 (c1-5 / ask-01
                               :ARG0 c1-11
                               :ARG1 (c1-18 / cause-01
                                            :ARG0 (c1-13 / amr-unknown)
                                            :ARG1 (c1-9 / and
                                                        :op1 (c1-19 / act-01
                                                                    :ARG0 (c1-1 / police)
                                                                    :ARG1 (c1-10 / military))
                                                        :op2 (c1-2 / cause-01
                                                                   :ARG0 c1-1
                                                                   :ARG1 (c1-12 / unrest
                                                                                :mod (c1-15 / civil))
                                                                   :manner (c1-7 / malicious))))))
      :snt2 (c1-4 / picture
                  :domain (c1-17 / amr-unknown)
                  :ARG1-of (c1-6 / have-degree-91
                                 :ARG2 (c1-8 / big)
                                 :ARG3 (c1-14 / more)))
      :mod (c1-3 / dear))

# ::snt : WitnessMichaelBrown's Shooting..He Was 'Shot Like An Animal'
# ::tokens [":", "WitnessMichaelBrown", "'s", "Shooting", "..", "He", "Was", "'", "Shot", "Like", "An", "Animal", "'"]
# ::lemmas [":", "WitnessMichaelBrown", "'s", "Shooting", "..", "he", "be", "'", "Shot", "like", "an", "Animal", "'"]
(c3-1 / multi-sentence
      :snt1 (c3-5 / shoot-02
                  :ARG1 (c3-3 / person
                              :name (c3-2 / name
                                          :op1 "MichaelBrown")
                              :ARG0-of (c3-0 / witness-01))
                  :snt2-of c3-1)
      :ARG1 c3-3
      :ARG1-of (c3-4 / resemble-01
                     :ARG2 (c3-6 / animal)))

# ::snt Thank God Yazidi's live in Iraq, If Yazidis did live in Palestine then Israel might have made them a DODO.
# ::tokens ["Thank", "God", "Yazidi", "'s", "live", "in", "Iraq", ",", "If", "Yazidis", "did", "live", "in", "Palestine", "then", "Israel", "might", "have", "made", "them", "a", "DODO", "."]
# ::lemmas ["thank", "God", "Yazidi", "'s", "live", "in", "Iraq", ",", "if", "Yazidis", "do", "live", "in", "Palestine", "then", "Israel", "might", "have", "make", "they", "a", "DODO", "."]
(c4-0 / multi-sentence
      :snt1 (c4-17 / thank-01
                   :ARG1 (c4-3 / person
                               :name (c4-10 / name
                                            :op1 "God"))
                   :ARG2 (c4-8 / live-01
                               :ARG0 (c4-5 / person
                                           :name (c4-14 / name
                                                        :op1 "Yazidi"))
                               :location (c4-15 / country
                                                :name (c4-1 / name
                                                            :op1 "Iraq"))))
      :snt2 (c4-9 / possible-01
                  :ARG1 (c4-11 / make-01
                               :ARG0 (c4-4 / country
                                           :name (c4-2 / name
                                                       :op1 "Israel"))
                               :ARG1 (c4-6 / have-org-role-91
                                           :ARG1 (c4-12 / government-organization
                                                        :name (c4-18 / name
                                                                     :op1 "Department"
                                                                     :op2 "of"
                                                                     :op3 "Defense")))
                               :ARG2 c4-5)
                  :condition (c4-16 / live-01
                                    :ARG0 c4-5
                                    :location (c4-13 / country
                                                     :name (c4-7 / name
                                                                 :op1 "Palestine")))))

# ::snt : Witness To 's Shooting Opens Up: He Was 'Shot Like An Animal'
# ::tokens [":", "Witness", "To", "'s", "Shooting", "Opens", "Up", ":", "He", "Was", "'", "Shot", "Like", "An", "Animal", "'"]
# ::lemmas [":", "witness", "to", "be", "Shooting", "Opens", "up", ":", "he", "be", "'", "Shot", "like", "an", "Animal", "'"]
(c5-2 / multi-sentence
      :snt1 (c5-3 / open-up-03
                  :ARG1 (c5-1 / witness-01
                              :ARG1 (c5-5 / shoot-02
                                          :ARG1 (c5-0 / he)
                                          :snt2-of c5-2)))
      :ARG1 c5-0
      :ARG1-of (c5-4 / resemble-01
                     :ARG2 (c5-6 / animal)))

# ::snt : Witness To 's Shooting Opens Up:He Was 'Shot Like An Animal'
# ::tokens [":", "Witness", "To", "'s", "Shooting", "Opens", "Up", ":", "He", "Was", "'", "Shot", "Like", "An", "Animal", "'"]
# ::lemmas [":", "witness", "to", "be", "Shooting", "Opens", "up", ":", "he", "be", "'", "Shot", "like", "an", "Animal", "'"]
(c6-2 / multi-sentence
      :snt1 (c6-3 / open-up-03
                  :ARG1 (c6-1 / witness-01
                              :ARG1 (c6-5 / shoot-02
                                          :ARG1 (c6-0 / he)
                                          :snt2-of c6-2)))
      :ARG1 c6-0
      :ARG1-of (c6-4 / resemble-01
                     :ARG2 (c6-6 / animal)))

# ::snt And CHEIF TOM JACKSON IS LYING TO THE FAMILY and THE PRESS WHILE HIDING That MURDERER .BUT THEY Can't HIDE HIM FOREVER .NAME HIM TOM
# ::tokens ["And", "CHEIF", "TOM", "JACKSON", "IS", "LYING", "TO", "THE", "FAMILY", "and", "THE", "PRESS", "WHILE", "HIDING", "That", "MURDERER", ".BUT", "THEY", "Ca", "n't", "HIDE", "HIM", "FOREVER", ".NAME", "HIM", "TOM"]
# ::lemmas ["and", "CHEIF", "TOM", "JACKSON", "be", "lie", "to", "the", "FAMILY", "and", "the", "PRESS", "while", "hide", "that", "murderer", ".but", "they", "can", "not", "hide", "he", "forever", ".name", "him", "TOM"]
(c7-3 / multi-sentence
      :snt1 (c7-12 / and
                   :op2 (c7-0 / have-concession-91
                              :ARG1 (c7-10 / possible-01
                                           :ARG1 (c7-15 / hate-01
                                                        :ARG0 (c7-6 / and
                                                                    :op1 (c7-2 / family)
                                                                    :op2 (c7-14 / press))
                                                        :ARG1 (c7-5 / person
                                                                    :name (c7-8 / name
                                                                                :op1 "Tom"
                                                                                :op2 "Jackson"))
                                                        :duration (c7-7 / forever))
                                           :polarity -)
                              :ARG2 (c7-4 / lie-08
                                          :ARG0 c7-5
                                          :ARG2 c7-6
                                          :time (c7-11 / murder-01
                                                       :mod (c7-13 / that)))))
      :snt2 (c7-9 / name-01
                  :ARG0 (c7-1 / you)
                  :ARG1 c7-5
                  :mode imperative))

# ::snt lmao, i love it
# ::tokens ["lmao", ",", "i", "love", "it"]
# ::lemmas ["lmao", ",", "i", "love", "it"]
(c8-1 / love-01
      :ARG0 (c8-2 / i)
      :ARG1 (c8-3 / it)
      :mod (c8-4 / laugh-01
                 :ARG0 c8-2
                 :manner (c8-0 / loud)
                 :mode expressive))

# ::snt agree
# ::tokens ["agree"]
# ::lemmas ["agree"]
(c9-0 / agree-01)

# ::snt Witness To 's Shooting Opens Up: He Was 'Shot Like An Animal'
# ::tokens ["Witness", "To", "'s", "Shooting", "Opens", "Up", ":", "He", "Was", "'", "Shot", "Like", "An", "Animal", "'"]
# ::lemmas ["witness", "to", "be", "Shooting", "Opens", "up", ":", "he", "be", "'", "Shot", "like", "an", "Animal", "'"]
(c10-3 / open-up-03
       :ARG1 (c10-1 / witness-01
                    :ARG1 (c10-5 / shoot-02
                                 :ARG1 (c10-0 / he)))
       :ARG0-of (c10-2 / mean-01
                       :ARG1 c10-5
                       :ARG1 c10-0
                       :ARG1-of (c10-4 / resemble-01
                                       :ARG2 (c10-6 / animal))))

# ::snt : Witness To 's Shooting Opens Up: He Was 'Shot Like An Animal' .
# ::tokens [":", "Witness", "To", "'s", "Shooting", "Opens", "Up", ":", "He", "Was", "'", "Shot", "Like", "An", "Animal", "'", "."]
# ::lemmas [":", "witness", "to", "be", "Shooting", "Opens", "up", ":", "he", "be", "'", "Shot", "like", "an", "animal", "'", "."]
(c11-2 / multi-sentence
       :snt1 (c11-3 / open-up-03
                    :ARG1 (c11-1 / witness-01
                                 :ARG1 (c11-5 / shoot-02
                                              :ARG1 (c11-0 / he)
                                              :snt2-of c11-2)))
       :ARG1 c11-0
       :ARG1-of (c11-4 / resemble-01
                       :ARG2 (c11-6 / animal)))

# ::snt My column: AN EXECUTION IN FERGUSON
# ::tokens ["My", "column", ":", "AN", "EXECUTION", "IN", "FERGUSON"]
# ::lemmas ["my", "column", ":", "an", "execution", "in", "FERGUSON"]
(c12-4 / column
       :poss (c12-1 / i)
       :topic (c12-0 / elect-01
                     :location (c12-3 / city
                                      :name (c12-2 / name
                                                   :op1 "FERGUSON"))))

# ::snt :Fuck Dhat!!!
# ::tokens [":", "Fuck", "Dhat", "!", "!", "!"]
# ::lemmas [":", "Fuck", "Dhat", "!", "!", "!"]
(c13-0 / fuck-01
       :ARG1 (c13-1 / that)
       :mode expressive)

# ::snt Says it all!
# ::tokens ["Says", "it", "all", "!"]
# ::lemmas ["say", "it", "all", "!"]
(c14-0 / say-01
       :ARG1 (c14-2 / it
                    :mod (c14-1 / all)))

# ::snt Great update - see it live here
# ::tokens ["Great", "update", "-", "see", "it", "live", "here"]
# ::lemmas ["great", "update", "-", "see", "it", "live", "here"]
(c16-3 / update-02
       :mod (c16-5 / great)
       :ARG0-of (c16-4 / cause-01
                       :ARG1 (c16-6 / see-01
                                    :ARG0 (c16-1 / you)
                                    :ARG1 c16-3
                                    :location (c16-0 / here)
                                    :manner (c16-2 / live)
                                    :mode imperative)))

# ::snt :hmmm. i wanna say this is a palestinian israeli cartoon, which is telling
# ::tokens [":", "hmmm", ".", "i", "wanna", "say", "this", "is", "a", "palestinian", "israeli", "cartoon", ",", "which", "is", "telling"]
# ::lemmas [":", "hmmm", ".", "i", "wanna", "say", "this", "be", "a", "palestinian", "israeli", "cartoon", ",", "which", "be", "tell"]
(c17-1 / want-01
       :ARG0 (c17-2 / i)
       :ARG1 (c17-8 / say-01
                    :ARG0 c17-2
                    :ARG1 (c17-6 / cartoon
                                 :mod (c17-5 / country
                                             :name (c17-3 / name
                                                          :op1 "Palestine"))
                                 :mod (c17-7 / country
                                             :name (c17-4 / name
                                                          :op1 "Israel"))
                                 :domain (c17-10 / this)
                                 :ARG0-of (c17-9 / tell-02)))
       :mod (c17-0 / hmm
                   :mode expressive))

# ::snt my "kid" is white;cop once told me that if he hadn't been one show up while we were waiting for ambulance that my
# ::tokens ["my", "\"", "kid", "\"", "is", "white;cop", "once", "told", "me", "that", "if", "he", "had", "n't", "been", "one", "show", "up", "while", "we", "were", "waiting", "for", "ambulance", "that", "my"]
# ::lemmas ["my", "\"", "kid", "\"", "be", "white;cop", "once", "tell", "i", "that", "if", "he", "have", "not", "be", "one", "show", "up", "while", "we", "be", "wait", "for", "ambulance", "that", "my"]
(c18-2 / multi-sentence
       :snt1 (c18-1 / white-02
                    :ARG1 (c18-6 / kid
                                 :poss (c18-5 / i)))
       :snt2 (c18-12 / tell-01
                     :ARG0 (c18-8 / cop)
                     :ARG1 (c18-0 / have-condition-91
                                  :ARG1 (c18-10 / show-up-02
                                                :ARG1 (c18-13 / he)
                                                :time (c18-7 / wait-01
                                                             :ARG1 (c18-3 / we)
                                                             :ARG2 (c18-11 / ambulance))
                                                :polarity -)
                                  :ARG2 (c18-9 / i
                                               :ARG2-of c18-12))
                     :time (c18-4 / once)))

# ::snt Join the hashtag!
# ::tokens ["Join", "the", "hashtag", "!"]
# ::lemmas ["join", "the", "hashtag", "!"]
(c19-0 / join-04
       :ARG0 (c19-1 / you)
       :ARG1 (c19-2 / hashtag)
       :mode imperative)

# ::snt kid probably would have been shot as he ran out of the house (unarmed) toward the cop who came B4 ambulance. Scary.
# ::tokens ["kid", "probably", "would", "have", "been", "shot", "as", "he", "ran", "out", "of", "the", "house", "(", "unarmed", ")", "toward", "the", "cop", "who", "came", "B4", "ambulance", ".", "Scary", "."]
# ::lemmas ["kid", "probably", "would", "have", "be", "shoot", "as", "he", "run", "out", "of", "the", "house", "(", "unarmed", ")", "toward", "the", "cop", "who", "come", "B4", "ambulance", ".", "scary", "."]
(c20-1 / multi-sentence
       :snt1 (c20-6 / probable
                    :domain (c20-11 / shoot-02
                                    :ARG1 (c20-13 / kid)
                                    :time (c20-7 / run-02
                                                 :ARG0 c20-13
                                                 :direction (c20-2 / out-of
                                                                   :op1 (c20-0 / house))
                                                 :manner (c20-14 / arm-01
                                                                 :ARG1 c20-13
                                                                 :polarity -)
                                                 :direction (c20-12 / toward
                                                                    :op1 (c20-8 / cop
                                                                                :ARG1-of (c20-9 / come-01
                                                                                                :ARG4 (c20-4 / ambulance
                                                                                                             :mod (c20-10 / company
                                                                                                                          :name (c20-5 / name
                                                                                                                                       :op1 "B4")))))))))
       :snt2 (c20-3 / scary-03))

# ::snt MT : Witness To 's Shooting Opens Up:He Was 'Shot Like An Animal'
# ::tokens ["MT", ":", "Witness", "To", "'s", "Shooting", "Opens", "Up", ":", "He", "Was", "'", "Shot", "Like", "An", "Animal", "'"]
# ::lemmas ["MT", ":", "witness", "to", "be", "Shooting", "Opens", "up", ":", "he", "be", "'", "Shot", "like", "an", "Animal", "'"]
(c22-2 / multi-sentence
       :snt1 (c22-3 / byline-91
                    :ARG0 (c22-6 / publication
                                 :name (c22-5 / name
                                              :op1 "MT")))
       :snt2 (c22-4 / open-up-03
                    :ARG1 (c22-1 / witness-01
                                 :ARG1 (c22-8 / shoot-02
                                              :ARG1 (c22-0 / he)
                                              :snt3-of c22-2)))
       :ARG1 c22-0
       :ARG1-of (c22-7 / resemble-01
                       :ARG2 (c22-9 / animal)))

# ::snt : Witness To 's Shooting Opens Up: He Was 'Shot Like An Animal'
# ::tokens [":", "Witness", "To", "'s", "Shooting", "Opens", "Up", ":", "He", "Was", "'", "Shot", "Like", "An", "Animal", "'"]
# ::lemmas [":", "witness", "to", "be", "Shooting", "Opens", "up", ":", "he", "be", "'", "Shot", "like", "an", "Animal", "'"]
(c23-2 / multi-sentence
       :snt1 (c23-3 / open-up-03
                    :ARG1 (c23-1 / witness-01
                                 :ARG1 (c23-5 / shoot-02
                                              :ARG1 (c23-0 / he)
                                              :snt2-of c23-2)))
       :ARG1 c23-0
       :ARG1-of (c23-4 / resemble-01
                       :ARG2 (c23-6 / animal)))

# ::snt : Witness To 's Shooting Opens Up: He Was 'Shot Like An Animal'
# ::tokens [":", "Witness", "To", "'s", "Shooting", "Opens", "Up", ":", "He", "Was", "'", "Shot", "Like", "An", "Animal", "'"]
# ::lemmas [":", "witness", "to", "be", "Shooting", "Opens", "up", ":", "he", "be", "'", "Shot", "like", "an", "Animal", "'"]
(c24-2 / multi-sentence
       :snt1 (c24-3 / open-up-03
                    :ARG1 (c24-1 / witness-01
                                 :ARG1 (c24-5 / shoot-02
                                              :ARG1 (c24-0 / he)
                                              :snt2-of c24-2)))
       :ARG1 c24-0
       :ARG1-of (c24-4 / resemble-01
                       :ARG2 (c24-6 / animal)))

# ::snt A RT : Witness To 's Shooting'Shot Like An Animal'
# ::tokens ["A", "RT", ":", "Witness", "To", "'s", "Shooting'Shot", "Like", "An", "Animal", "'"]
# ::lemmas ["a", "rt", ":", "Witness", "to", "'s", "Shooting'Shot", "Like", "an", "Animal", "'"]
(c25-1 / multi-sentence
       :snt1 (c25-3 / publication
                    :name (c25-2 / name
                                 :op1 "RT"))
       :snt2 (c25-0 / witness-01
                    :ARG1 (c25-5 / shoot-02
                                 :ARG1-of (c25-4 / resemble-01
                                                 :ARG2 (c25-6 / animal)))))

# ::snt !!!
# ::tokens ["!", "!", "!"]
# ::lemmas ["!", "!", "!"]
(c26-0 / thing
       :mode expressive)

# ::snt | My st impulse is to LOL...but this is TRUE! IN FREAKING AMERICA! COPS can not take your cameras or phones can NOT! Ya try &amp;RESIST!
# ::tokens ["|", "My", "st", "impulse", "is", "to", "LOL", "...", "but", "this", "is", "TRUE", "!", "IN", "FREAKING", "AMERICA", "!", "COPS", "can", "not", "take", "your", "cameras", "or", "phones", "can", "NOT", "!", "Ya", "try", "&", "amp;RESIST", "!"]
# ::lemmas ["|", "my", "st", "impulse", "be", "to", "LOL", "...", "but", "this", "be", "true", "!", "in", "FREAKING", "AMERICA", "!", "cop", "can", "not", "take", "your", "camera", "or", "phone", "can", "not", "!", "ya", "try", "&", "amp;resist", "!"]
(c27-0 / multi-sentence
       :snt1 (c27-10 / impulse-01
                     :ARG0 (c27-12 / i)
                     :ARG1 (c27-6 / laugh-01
                                  :ARG0 c27-12
                                  :ARG1-of (c27-18 / contrast-01
                                                   :ARG2 (c27-20 / true-01
                                                                 :ARG1 (c27-19 / this))))
                     :mod (c27-3 / st)
                     :location (c27-2 / country
                                      :name (c27-8 / name
                                                   :op1 "America")
                                      :mod (c27-7 / freak)))
       :snt2 (c27-1 / possible-01
                    :ARG1 (c27-11 / take-01
                                  :ARG0 (c27-13 / cop)
                                  :ARG1 (c27-16 / or
                                                :op1 (c27-14 / camera
                                                             :poss (c27-15 / you))
                                                :op2 (c27-4 / phone
                                                            :poss c27-15)))
                    :polarity -)
       :snt3 (c27-5 / and
                    :op1 (c27-17 / try-01
                                 :ARG0 c27-15)
                    :op2 (c27-9 / reject-01
                                :ARG0 c27-15)))

# ::snt Exactly! Wonder if we'll ever get to see dash can footage.
# ::tokens ["Exactly", "!", "Wonder", "if", "we", "'ll", "ever", "get", "to", "see", "dash", "can", "footage", "."]
# ::lemmas ["exactly", "!", "wonder", "if", "we", "'ll", "ever", "get", "to", "see", "dash", "can", "footage", "."]
(c28-2 / multi-sentence
       :snt1 (c28-4 / exact
                    :mode expressive)
       :snt2 (c28-0 / wonder-01
                    :ARG0 (c28-5 / i)
                    :ARG1 (c28-10 / truth-value
                                  :polarity-of (c28-8 / get-22
                                                      :ARG0 (c28-6 / we)
                                                      :ARG1 (c28-9 / see-01
                                                                   :ARG0 c28-6
                                                                   :ARG1 (c28-1 / footage
                                                                                :mod (c28-7 / dash-can))
                                                                   :time (c28-3 / ever))))))

# ::snt another boy (black/possibly mentally challenged) was killed in LA walking down the street Mon - heard on
# ::tokens ["another", "boy", "(", "black", "/", "possibly", "mentally", "challenged", ")", "was", "killed", "in", "LA", "walking", "down", "the", "street", "Mon", "-", "heard", "on"]
# ::lemmas ["another", "boy", "(", "black", "/", "possibly", "mentally", "challenge", ")", "be", "kill", "in", "LA", "walk", "down", "the", "street", "Mon", "-", "hear", "on"]
(c29-13 / kill-01
        :ARG1 (c29-4 / boy
                     :mod (c29-14 / another)
                     :ARG1-of (c29-9 / challenge-01
                                     :ARG2 (c29-5 / or
                                                  :op1 (c29-10 / black-05)
                                                  :op2 (c29-3 / mental)
                                                  :ARG1-of (c29-7 / possible-01)))
                     :ARG0-of (c29-1 / walk-01
                                     :ARG2 (c29-12 / street
                                                   :direction (c29-8 / down))
                                     :time (c29-2 / date-entity
                                                  :month 1)))
        :location (c29-11 / city
                          :name (c29-6 / name
                                       :op1 "LA"))
        :ARG1-of (c29-0 / hear-01))

# ::snt don't shoot me my hands are up story.
# ::tokens ["do", "n't", "shoot", "me", "my", "hands", "are", "up", "story", "."]
# ::lemmas ["do", "not", "shoot", "i", "my", "hand", "be", "up", "story", "."]
(c30-6 / say-01
       :ARG0 (c30-5 / i
                    :part (c30-0 / hand))
       :ARG1 (c30-4 / shoot-01
                    :ARG0 (c30-1 / you)
                    :ARG1 c30-5
                    :ARG2 (c30-2 / story
                                 :mod (c30-3 / up))
                    :polarity -
                    :mode imperative)
       :ARG2 c30-5)

# ::snt yes he was. , thought they used Tasers first not shoot someone in the face. , damn that cop needs a little prison !
# ::tokens ["yes", "he", "was", ".", ",", "thought", "they", "used", "Tasers", "first", "not", "shoot", "someone", "in", "the", "face", ".", ",", "damn", "that", "cop", "needs", "a", "little", "prison", "!"]
# ::lemmas ["yes", "he", "be", ".", ",", "think", "they", "use", "Tasers", "first", "not", "shoot", "someone", "in", "the", "face", ".", ",", "damn", "that", "cop", "need", "a", "little", "prison", "!"]
(c32-3 / multi-sentence
       :snt1 (c32-1 / yes
                    :domain (c32-0 / he))
       :snt2 (c32-17 / think-01
                     :ARG1 (c32-13 / contrast-01
                                   :ARG1 (c32-4 / use-01
                                                :ARG0 (c32-15 / they)
                                                :ARG1 (c32-10 / taser)
                                                :time (c32-2 / first))
                                   :ARG2 (c32-16 / shoot-02
                                                 :ARG0 c32-15
                                                 :ARG1 (c32-6 / someone
                                                              :part (c32-8 / face
                                                                           :location-of c32-16))
                                                 :polarity -)))
       :snt3 (c32-9 / need-01
                    :ARG0 (c32-12 / cop
                                  :mod (c32-7 / that))
                    :ARG1 (c32-11 / prison
                                  :mod (c32-5 / little))
                    :mod (c32-14 / damn
                                 :mode expressive)))
