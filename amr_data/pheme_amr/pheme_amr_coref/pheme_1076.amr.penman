# ::snt Worst press conference ever. Let someone with intelligence and balls tell us what really happened.
# ::tokens ["Worst", "press", "conference", "ever", ".", "Let", "someone", "with", "intelligence", "and", "balls", "tell", "us", "what", "really", "happened", "."]
# ::lemmas ["bad", "press", "conference", "ever", ".", "let", "someone", "with", "intelligence", "and", "ball", "tell", "we", "what", "really", "happen", "."]
(c1-4 / multi-sentence
      :snt1 (c1-0 / have-degree-91
                  :ARG1 (c1-11 / conference
                               :mod (c1-9 / press))
                  :ARG2 (c1-5 / bad-02
                              :ARG1 c1-11
                              :time (c1-7 / ever))
                  :ARG3 (c1-10 / most))
      :snt2 (c1-3 / let-01
                  :ARG0 (c1-1 / you)
                  :ARG1 (c1-16 / tell-01
                               :ARG0 (c1-14 / someone
                                            :ARG0-of (c1-17 / have-03
                                                            :ARG1 (c1-15 / and
                                                                         :op1 (c1-8 / intelligence)
                                                                         :op2 (c1-12 / ball))))
                               :ARG1 (c1-6 / event
                                           :ARG1-of (c1-13 / real-04))
                               :ARG2 (c1-2 / we))
                  :mode imperative))

# ::snt I know that
# ::tokens ["I", "know", "that"]
# ::lemmas ["i", "know", "that"]
(c2-1 / know-01
      :ARG0 (c2-2 / i)
      :ARG1 (c2-0 / that))

# ::snt suspect in convenience store robbery carries death penalty sentence. Good to know.
# ::tokens ["suspect", "in", "convenience", "store", "robbery", "carries", "death", "penalty", "sentence", ".", "Good", "to", "know", "."]
# ::lemmas ["suspect", "in", "convenience", "store", "robbery", "carry", "death", "penalty", "sentence", ".", "good", "to", "know", "."]
(c3-1 / multi-sentence
      :snt1 (c3-8 / sentence-01
                  :ARG1 (c3-3 / person
                              :ARG2-of (c3-2 / suspect-01
                                             :time (c3-4 / rob-01
                                                         :ARG0 c3-3
                                                         :ARG1 (c3-0 / store
                                                                     :mod (c3-5 / convenience)))))
                  :ARG2 (c3-6 / die-01
                              :ARG1 c3-3))
      :snt2 (c3-7 / good-02
                  :ARG1 (c3-9 / know-01)))

# ::snt "LOL"
# ::tokens ["\"", "LOL", "\""]
# ::lemmas ["\"", "LOL", "\""]
(c4-0 / laugh-01
      :ARG0 (c4-1 / i)
      :manner (c4-2 / loud)
      :mode expressive)

# ::snt I heard he is a suspect in a convenience store robbery and he may have went for the officers gun
# ::tokens ["I", "heard", "he", "is", "a", "suspect", "in", "a", "convenience", "store", "robbery", "and", "he", "may", "have", "went", "for", "the", "officers", "gun"]
# ::lemmas ["i", "hear", "he", "be", "a", "suspect", "in", "a", "convenience", "store", "robbery", "and", "he", "may", "have", "go", "for", "the", "officer", "gun"]
(c5-0 / hear-01
      :ARG0 (c5-3 / i)
      :ARG1 (c5-11 / and
                   :op1 (c5-10 / suspect-01
                               :ARG1 (c5-13 / he)
                               :ARG2 (c5-6 / rob-01
                                           :ARG1 (c5-2 / store
                                                       :mod (c5-7 / convenience))))
                   :op2 (c5-5 / possible-01
                              :ARG1 (c5-8 / go-03
                                          :ARG0 c5-13
                                          :ARG1 (c5-9 / gun
                                                      :poss (c5-12 / person
                                                                   :ARG0-of (c5-4 / have-org-role-91
                                                                                  :ARG2 (c5-1 / officer))))))))

# ::snt over a box of cigars.totally messed up.officer was just responding to robbery call. Why did police not come forward sooner?
# ::tokens ["over", "a", "box", "of", "cigars.totally", "messed", "up.officer", "was", "just", "responding", "to", "robbery", "call", ".", "Why", "did", "police", "not", "come", "forward", "sooner", "?"]
# ::lemmas ["over", "a", "box", "of", "cigars.totally", "mess", "up.officer", "be", "just", "respond", "to", "robbery", "call", ".", "why", "do", "police", "not", "come", "forward", "soon", "?"]
(c6-1 / multi-sentence
      :snt1 (c6-11 / be-located-at-91
                   :ARG2 (c6-18 / over
                                :op1 (c6-14 / box
                                            :consist-of (c6-19 / cigar))))
      :snt2 (c6-12 / mess-up-02
                   :ARG1-of (c6-20 / total-02))
      :snt3 (c6-13 / respond-01
                   :ARG0 (c6-3 / person
                               :ARG0-of (c6-9 / have-org-role-91
                                              :ARG2 (c6-17 / officer)))
                   :ARG1 (c6-4 / call-02
                               :ARG1 (c6-2 / rob-01))
                   :mod (c6-0 / just))
      :snt4 (c6-15 / cause-01
                   :ARG0 (c6-7 / amr-unknown)
                   :ARG1 (c6-16 / come-forward-31
                                :ARG0 (c6-6 / police)
                                :time (c6-5 / soon
                                            :ARG2-of (c6-8 / have-degree-91
                                                           :ARG1 c6-16
                                                           :ARG3 (c6-10 / more)))
                                :polarity -)))

# ::snt if your life was in danger, what would you do?
# ::tokens ["if", "your", "life", "was", "in", "danger", ",", "what", "would", "you", "do", "?"]
# ::lemmas ["if", "your", "life", "be", "in", "danger", ",", "what", "would", "you", "do", "?"]
(c7-3 / do-02
      :ARG0 (c7-0 / you)
      :ARG1 (c7-4 / amr-unknown)
      :condition (c7-2 / endanger-01
                       :ARG1 (c7-1 / life
                                   :poss c7-0)))

# ::snt don't include me in your racist bullshit.
# ::tokens ["do", "n't", "include", "me", "in", "your", "racist", "bullshit", "."]
# ::lemmas ["do", "not", "include", "i", "in", "your", "racist", "bullshit", "."]
(c8-2 / include-01
      :ARG0 (c8-0 / you)
      :ARG1 (c8-4 / i)
      :ARG2 (c8-1 / bullshit-01
                  :ARG0 c8-0
                  :mod (c8-3 / racist))
      :polarity -
      :mode imperative)

# ::snt no "Gurrrrrl" he's a dispatcher with a PT job at the dollar store. Fuck off
# ::tokens ["no", "\"", "Gurrrrrl", "\"", "he", "'s", "a", "dispatcher", "with", "a", "PT", "job", "at", "the", "dollar", "store", ".", "Fuck", "off"]
# ::lemmas ["no", "\"", "Gurrrrrl", "\"", "he", "be", "a", "dispatch", "with", "a", "PT", "job", "at", "the", "dollar", "store", ".", "fuck", "off"]
(c9-4 / multi-sentence
      :snt1 (c9-5 / person
                  :ARG0-of (c9-6 / dispatch-01)
                  :domain (c9-0 / he)
                  :ARG0-of (c9-9 / have-03
                                 :ARG1 (c9-1 / job
                                             :mod (c9-8 / part-time)
                                             :location (c9-7 / store
                                                             :mod (c9-2 / dollar))))
                  :polarity -)
      :snt2 (c9-3 / fuck-off-03
                  :mode expressive))

# ::snt lol your crazy guuurl.
# ::tokens ["lol", "your", "crazy", "guuurl", "."]
# ::lemmas ["lol", "your", "crazy", "guuurl", "."]
(c10-3 / guuurl
       :ARG1-of (c10-2 / crazy-03)
       :domain (c10-0 / you)
       :ARG2-of (c10-1 / laugh-01
                       :manner (c10-4 / loud)
                       :mode expressive))

# ::snt fuck off. That's not what I said.
# ::tokens ["fuck", "off", ".", "That", "'s", "not", "what", "I", "said", "."]
# ::lemmas ["fuck", "off", ".", "that", "be", "not", "what", "i", "say", "."]
(c11-1 / multi-sentence
       :snt1 (c11-0 / fuck-off-03)
       :snt2 (c11-4 / say-01
                    :ARG0 (c11-2 / i)
                    :ARG1 (c11-5 / thing
                                 :domain (c11-3 / that))
                    :polarity -))

# ::snt exactly
# ::tokens ["exactly"]
# ::lemmas ["exactly"]
(c12-0 / exact)

# ::snt find them yourself. Willman's parents were interviewed yesterday
# ::tokens ["find", "them", "yourself", ".", "Willman", "'s", "parents", "were", "interviewed", "yesterday"]
# ::lemmas ["find", "they", "yourself", ".", "Willman", "'s", "parent", "be", "interview", "yesterday"]
(c13-3 / multi-sentence
       :snt1 (c13-2 / find-01
                    :ARG0 (c13-1 / you)
                    :ARG1 (c13-9 / they)
                    :ARG2 c13-1
                    :mode imperative)
       :snt2 (c13-5 / interview-01
                    :ARG1 (c13-7 / person
                                 :ARG0-of (c13-0 / have-rel-role-91
                                                 :ARG1 (c13-10 / person
                                                               :name (c13-6 / name
                                                                            :op1 "Willman"))
                                                 :ARG2 (c13-4 / parent)))
                    :time (c13-8 / yesterday)))

# ::snt no response to the fact that you released the name of a dude who works at the fucking Dollar Store???
# ::tokens ["no", "response", "to", "the", "fact", "that", "you", "released", "the", "name", "of", "a", "dude", "who", "works", "at", "the", "fucking", "Dollar", "Store", "?", "?", "?"]
# ::lemmas ["no", "response", "to", "the", "fact", "that", "you", "release", "the", "name", "of", "a", "dude", "who", "work", "at", "the", "fucking", "Dollar", "Store", "?", "?", "?"]
(c14-7 / respond-01
       :ARG1 (c14-4 / release-01
                    :ARG0 (c14-0 / you)
                    :ARG1 (c14-10 / thing
                                  :ARG2-of (c14-5 / name-01
                                                  :ARG1 (c14-8 / dude
                                                               :ARG0-of (c14-1 / work-01
                                                                               :ARG2 (c14-9 / store
                                                                                            :name (c14-6 / name
                                                                                                         :op1 "Dollar"
                                                                                                         :op2 "Store")
                                                                                            :mod (c14-2 / fucking
                                                                                                        :mode expressive))))))
                    :ARG1-of (c14-3 / request-confirmation-91))
       :polarity -)

# ::snt the guy was CLEARLY white, so he needed to have his name released, as he is probably RACIST
# ::tokens ["the", "guy", "was", "CLEARLY", "white", ",", "so", "he", "needed", "to", "have", "his", "name", "released", ",", "as", "he", "is", "probably", "RACIST"]
# ::lemmas ["the", "guy", "be", "CLEARLY", "white", ",", "so", "he", "need", "to", "have", "his", "name", "release", ",", "as", "he", "be", "probably", "racist"]
(c15-0 / white-02
       :ARG1 (c15-7 / guy)
       :ARG1-of (c15-6 / clear-06)
       :ARG0-of (c15-5 / cause-01
                       :ARG1 (c15-2 / need-01
                                    :ARG0 c15-7
                                    :ARG1 (c15-8 / release-01
                                                 :ARG1 (c15-3 / name
                                                              :poss c15-7))
                                    :ARG1-of (c15-9 / cause-01
                                                    :ARG0 (c15-1 / racist
                                                                 :domain c15-7
                                                                 :mod (c15-4 / probable))))))

# ::snt Will y'all be releasing Darren Wilson information?
# ::tokens ["Will", "y'", "all", "be", "releasing", "Darren", "Wilson", "information", "?"]
# ::lemmas ["will", "you", "all", "be", "release", "Darren", "Wilson", "information", "?"]
(c16-5 / release-01
       :ARG0 (c16-0 / you
                    :mod (c16-6 / all))
       :ARG1 (c16-2 / information
                    :topic (c16-4 / person
                                  :name (c16-3 / name
                                               :op1 "Darren"
                                               :op2 "Wilson")))
       :polarity (c16-1 / amr-unknown))

# ::snt gurrrrrl his step-mother was interviewed yesterday. "Guuuuurl" YOU crazy!
# ::tokens ["gurrrrrl", "his", "step", "-", "mother", "was", "interviewed", "yesterday", ".", "\"", "Guuuuurl", "\"", "YOU", "crazy", "!"]
# ::lemmas ["gurrrrrl", "his", "step", "-", "mother", "be", "interview", "yesterday", ".", "\"", "Guuuuurl", "\"", "you", "crazy", "!"]
(c17-3 / multi-sentence
       :snt1 (c17-4 / interview-01
                    :ARG1 (c17-5 / person
                                 :ARG0-of (c17-0 / have-rel-role-91
                                                 :ARG1 (c17-10 / he)
                                                 :ARG2 (c17-9 / stepmother)))
                    :time (c17-1 / yesterday)
                    :mod (c17-2 / laugh-01
                                :ARG0 (c17-7 / i)
                                :manner (c17-8 / loud)
                                :mode expressive))
       :snt2 (c17-6 / crazy-03
                    :ARG1 (c17-11 / you)))

# ::snt If he went for the officers gun...that is a justification for being shot.
# ::tokens ["If", "he", "went", "for", "the", "officers", "gun", "...", "that", "is", "a", "justification", "for", "being", "shot", "."]
# ::lemmas ["if", "he", "go", "for", "the", "officer", "gun", "...", "that", "be", "a", "justification", "for", "be", "shoot", "."]
(c18-0 / justify-01
       :ARG1 (c18-6 / shoot-02)
       :ARG2 (c18-5 / go-03
                    :ARG0 (c18-1 / he)
                    :ARG1 (c18-4 / gun
                                 :poss (c18-3 / person
                                              :ARG0-of (c18-7 / have-org-role-91
                                                              :ARG2 (c18-2 / officer))))
                    :condition-of c18-0))

# ::snt Falsified pics? Come on CJ. You would know how that's done with your work over previous days. L
# ::tokens ["Falsified", "pics", "?", "Come", "on", "CJ", ".", "You", "would", "know", "how", "that", "'s", "done", "with", "your", "work", "over", "previous", "days", ".", "L"]
# ::lemmas ["falsify", "pic", "?", "come", "on", "CJ", ".", "you", "would", "know", "how", "that", "be", "do", "with", "your", "work", "over", "previous", "days", ".", "L"]
(c19-3 / multi-sentence
       :snt1 (c19-6 / pics
                    :ARG1-of (c19-7 / declassify-01)
                    :polarity (c19-13 / amr-unknown))
       :snt2 (c19-8 / come-on-25
                    :ARG1 (c19-12 / person
                                  :name (c19-5 / name
                                               :op1 "CJ"))
                    :mode imperative)
       :snt3 (c19-11 / know-01
                     :ARG0 (c19-0 / you)
                     :ARG1 (c19-10 / thing
                                   :manner-of (c19-1 / do-02
                                                     :ARG1 (c19-9 / that)
                                                     :ARG2 (c19-2 / work-01
                                                                  :ARG0 c19-12)
                                                     :time (c19-14 / day
                                                                   :mod (c19-4 / previous)))))
       :snt4 c19-12
       :name c19-5
       :op1 "L")

# ::snt Theres no justification for Protests either as NOBODY HAS ANY IDEA WHAT HAPPENED YET
# ::tokens ["There", "s", "no", "justification", "for", "Protests", "either", "as", "NOBODY", "HAS", "ANY", "IDEA", "WHAT", "HAPPENED", "YET"]
# ::lemmas ["there", "s", "no", "justification", "for", "Protests", "either", "as", "NOBODY", "have", "any", "IDEA", "what", "happen", "yet"]
(c20-0 / justify-01
       :ARG1 (c20-6 / protest-01)
       :mod (c20-3 / either)
       :ARG1-of (c20-7 / cause-01
                       :ARG0 (c20-1 / have-03
                                    :ARG0 (c20-5 / nobody)
                                    :ARG1 (c20-4 / idea
                                                 :topic (c20-2 / event))
                                    :polarity -))
       :polarity -)

# ::snt come one FACTS OR YOUR A LIAR!!!!!!!!
# ::tokens ["come", "one", "FACTS", "OR", "YOUR", "A", "LIAR", "!", "!", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["come", "one", "FACTS", "or", "your", "a", "liar", "!", "!", "!", "!", "!", "!", "!", "!"]
(c21-4 / come-01
       :ARG1 (c21-3 / or
                    :op1 (c21-1 / fact
                                :quant 1)
                    :op2 (c21-2 / lie-08
                                :ARG0 (c21-0 / you)))
       :mode imperative)

# ::snt lol where did you get those facts, look online, he works for STL PD as a dispatcher.
# ::tokens ["lol", "where", "did", "you", "get", "those", "facts", ",", "look", "online", ",", "he", "works", "for", "STL", "PD", "as", "a", "dispatcher", "."]
# ::lemmas ["lol", "where", "do", "you", "get", "those", "fact", ",", "look", "online", ",", "he", "work", "for", "STL", "PD", "as", "a", "dispatcher", "."]
(c22-5 / and
       :op1 (c22-10 / get-01
                    :ARG0 (c22-14 / you)
                    :ARG1 (c22-7 / fact
                                 :mod (c22-18 / that))
                    :location (c22-12 / amr-unknown)
                    :ARG2-of (c22-8 / laugh-01
                                    :ARG0 (c22-13 / i)
                                    :manner (c22-17 / loud)
                                    :mode expressive))
       :op2 (c22-0 / look-01
                   :ARG0 c22-14
                   :ARG1 (c22-15 / online)
                   :ARG1-of (c22-16 / cause-01
                                    :ARG0 (c22-11 / work-01
                                                  :ARG0 (c22-6 / he)
                                                  :ARG1 (c22-4 / have-org-role-91
                                                               :ARG0 c22-6
                                                               :ARG1 (c22-2 / government-organization
                                                                            :name (c22-9 / name
                                                                                         :op1 "STL"
                                                                                         :op2 "PD"))
                                                               :ARG2 (c22-1 / person
                                                                            :ARG0-of (c22-3 / dispatch-01)))))
                   :mode imperative))

# ::snt There's still no justification stated for to be shot to death.
# ::tokens ["There", "'s", "still", "no", "justification", "stated", "for", "to", "be", "shot", "to", "death", "."]
# ::lemmas ["there", "be", "still", "no", "justification", "state", "for", "to", "be", "shoot", "to", "death", "."]
(c23-5 / state-01
       :ARG1 (c23-6 / thing
                    :ARG2-of (c23-0 / justify-01
                                    :ARG1 (c23-2 / shoot-01
                                                 :ARG2 (c23-3 / die-01
                                                              :ARG1 (c23-4 / they))))
                    :polarity -)
       :mod (c23-1 / still))

# ::snt and you were clearly dropped on your head you retarded, shallow-gene pool, mouth-breathing Neanderthal ASSHOLE
# ::tokens ["and", "you", "were", "clearly", "dropped", "on", "your", "head", "you", "retarded", ",", "shallow", "-", "gene", "pool", ",", "mouth", "-", "breathing", "Neanderthal", "ASSHOLE"]
# ::lemmas ["and", "you", "be", "clearly", "drop", "on", "your", "head", "you", "retard", ",", "shallow", "-", "gene", "pool", ",", "mouth", "-", "breathe", "Neanderthal", "ASSHOLE"]
(c24-12 / and
        :op2 (c24-7 / drop-01
                    :ARG1 (c24-1 / you
                                 :part (c24-0 / head
                                              :ARG4-of c24-7))
                    :ARG1-of (c24-8 / clear-06)
                    :ARG1-of (c24-9 / retard-01)
                    :mod (c24-6 / pool
                                :consist-of (c24-10 / gene)
                                :mod (c24-11 / shallow))
                    :mod (c24-4 / asshole
                                :ARG0-of (c24-3 / breathe-01
                                                :ARG1 (c24-2 / mouth))
                                :mod (c24-5 / Neanderthal))))

# ::snt i would lie for my kid tooo
# ::tokens ["i", "would", "lie", "for", "my", "kid", "tooo"]
# ::lemmas ["i", "would", "lie", "for", "my", "kid", "tooo"]
(c25-1 / lie-08
       :ARG0 (c25-2 / i)
       :beneficiary (c25-3 / person
                           :ARG0-of (c25-0 / have-rel-role-91
                                           :ARG1 c25-2
                                           :ARG2 (c25-5 / kid)))
       :mod (c25-4 / too))
