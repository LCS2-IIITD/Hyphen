# ::snt Note cautionary points from Mumbai in Kilcullen's article
# ::tokens ["Note", "cautionary", "points", "from", "Mumbai", "in", "Kilcullen", "'s", "article"]
# ::lemmas ["note", "cautionary", "point", "from", "Mumbai", "in", "Kilcullen", "'s", "article"]
(c1-1 / note-01
      :ARG0 (c1-0 / you)
      :ARG1 (c1-3 / point-04
                  :ARG0 (c1-5 / city
                              :name (c1-2 / name
                                          :op1 "Mumbai"))
                  :purpose (c1-4 / caution-01))
      :location (c1-8 / article
                      :poss (c1-7 / person
                                  :name (c1-6 / name
                                              :op1 "Kilcullen")))
      :mode imperative)

# ::snt :just curious, were you told that by police, or did you make that up yourself?
# ::tokens [":", "just", "curious", ",", "were", "you", "told", "that", "by", "police", ",", "or", "did", "you", "make", "that", "up", "yourself", "?"]
# ::lemmas [":", "just", "curious", ",", "be", "you", "tell", "that", "by", "police", ",", "or", "do", "you", "make", "that", "up", "yourself", "?"]
(c2-4 / curious-01
      :ARG0 (c2-7 / amr-choice
                  :op1 (c2-6 / tell-01
                             :ARG0 (c2-3 / police)
                             :ARG1 (c2-5 / that)
                             :ARG2 (c2-1 / you))
                  :op2 (c2-2 / make-up-10
                             :ARG0 c2-1
                             :ARG1 c2-5
                             :ARG2 c2-3))
      :mod (c2-0 / just))

# ::snt Americans tweeted police movements and chatter on police radio. Pointed to an innocent person.
# ::tokens ["Americans", "tweeted", "police", "movements", "and", "chatter", "on", "police", "radio", ".", "Pointed", "to", "an", "innocent", "person", "."]
# ::lemmas ["Americans", "tweet", "police", "movement", "and", "chatter", "on", "police", "radio", ".", "point", "to", "an", "innocent", "person", "."]
(c3-0 / multi-sentence
      :snt1 (c3-12 / tweet-02
                   :ARG0 (c3-6 / person
                               :mod (c3-8 / country
                                          :name (c3-5 / name
                                                      :op1 "America")))
                   :ARG1 (c3-14 / and
                                :op1 (c3-7 / move-02
                                           :ARG0 (c3-13 / police))
                                :op2 (c3-9 / chatter-01
                                           :ARG0 (c3-1 / police)))
                   :medium (c3-10 / radio
                                  :mod (c3-11 / police)))
      :snt2 (c3-3 / point-01
                  :ARG2 (c3-2 / person
                              :ARG1-of (c3-4 / innocent-01))))

# ::snt Every country has its stupid politician like "Do NOT tweet around Lindt Cafe. Do NOT tweet Police moves" cc
# ::tokens ["Every", "country", "has", "its", "stupid", "politician", "like", "\"", "Do", "NOT", "tweet", "around", "Lindt", "Cafe", ".", "Do", "NOT", "tweet", "Police", "moves", "\"", "cc"]
# ::lemmas ["every", "country", "have", "its", "stupid", "politician", "like", "\"", "do", "not", "tweet", "around", "Lindt", "Cafe", ".", "do", "not", "tweet", "Police", "move", "\"", "cc"]
(c4-0 / have-03
      :ARG0 (c4-9 / country
                  :mod (c4-3 / every))
      :ARG1 (c4-7 / politician
                  :mod (c4-12 / stupid)
                  :example (c4-15 / and
                                  :op1 (c4-13 / tweet-02
                                              :ARG0 (c4-1 / you)
                                              :location (c4-4 / around
                                                              :op1 (c4-8 / cafe
                                                                         :name (c4-5 / name
                                                                                     :op1 "Lindt"
                                                                                     :op2 "Cafe")))
                                              :mode imperative
                                              :polarity -)
                                  :op2 (c4-11 / tweet-02
                                              :ARG0 c4-1
                                              :ARG1 (c4-2 / move-02
                                                          :ARG0 (c4-14 / police))
                                              :mode imperative
                                              :polarity -)))
      :mod (c4-6 / thing
                 :name (c4-10 / name
                              :op1 " cc")))

# ::snt logical deduction of a concerned citizen, put it that way
# ::tokens ["logical", "deduction", "of", "a", "concerned", "citizen", ",", "put", "it", "that", "way"]
# ::lemmas ["logical", "deduction", "of", "a", "concerned", "citizen", ",", "put", "it", "that", "way"]
(c5-3 / put-02
      :ARG0 (c5-0 / you)
      :ARG1 (c5-5 / deduct-01
                  :ARG0 (c5-6 / citizen
                              :ARG0-of (c5-4 / concern-01))
                  :manner (c5-2 / logic))
      :ARG2 (c5-1 / way
                  :mod (c5-7 / that))
      :mode imperative)

# ::snt American Internet sleuths also got the Ferguson cop wrong. So learn from us stupid Americans.
# ::tokens ["American", "Internet", "sleuths", "also", "got", "the", "Ferguson", "cop", "wrong", ".", "So", "learn", "from", "us", "stupid", "Americans", "."]
# ::lemmas ["American", "Internet", "sleuth", "also", "get", "the", "Ferguson", "cop", "wrong", ".", "so", "learn", "from", "we", "stupid", "Americans", "."]
(c6-2 / multi-sentence
      :snt1 (c6-11 / get-02
                   :ARG0 (c6-14 / sleuth
                                :mod (c6-10 / country
                                            :name (c6-6 / name
                                                        :op1 "America"))
                                :mod (c6-4 / internet))
                   :ARG1 (c6-0 / wrong-04
                               :ARG1 c6-14
                               :ARG2 (c6-9 / cop
                                           :mod (c6-13 / city
                                                       :name (c6-7 / name
                                                                   :op1 "Ferguson"))))
                   :mod (c6-15 / also))
      :snt2 (c6-12 / infer-01
                   :ARG1 (c6-1 / learn-01
                               :ARG2 (c6-5 / we
                                           :mod (c6-3 / stupid)
                                           :mod (c6-16 / country
                                                       :name (c6-8 / name
                                                                   :op1 "America"))))))

# ::snt ok. but the police aren't idiots - they know ch7 is there and would stop it if they actually wanted to
# ::tokens ["ok", ".", "but", "the", "police", "are", "n't", "idiots", "-", "they", "know", "ch7", "is", "there", "and", "would", "stop", "it", "if", "they", "actually", "wanted", "to"]
# ::lemmas ["ok", ".", "but", "the", "police", "be", "not", "idiot", "-", "they", "know", "ch7", "be", "there", "and", "would", "stop", "it", "if", "they", "actually", "want", "to"]
(c7-3 / multi-sentence
      :snt1 (c7-5 / okay-04)
      :snt2 (c7-7 / idiot
                  :domain (c7-9 / police)
                  :ARG1-of (c7-10 / cause-01
                                  :ARG0 (c7-14 / and
                                               :op1 (c7-12 / know-01
                                                           :ARG0 c7-9
                                                           :ARG1 (c7-4 / be-located-at-91
                                                                       :ARG1 (c7-2 / organization
                                                                                   :name (c7-8 / name
                                                                                               :op1 "Ch7"))
                                                                       :ARG2 (c7-11 / there)))
                                               :op2 (c7-0 / have-condition-91
                                                          :ARG1 (c7-13 / stop-01
                                                                       :ARG0 c7-9
                                                                       :ARG1 c7-2)
                                                          :ARG2 (c7-1 / want-01
                                                                      :ARG0 c7-9
                                                                      :ARG1 c7-13
                                                                      :ARG1-of (c7-6 / actual-02)))))
                  :polarity -))

# ::snt they forced channel seven to move their cameras.
# ::tokens ["they", "forced", "channel", "seven", "to", "move", "their", "cameras", "."]
# ::lemmas ["they", "force", "channel", "seven", "to", "move", "their", "camera", "."]
(c8-0 / force-01
      :ARG0 (c8-4 / they)
      :ARG1 (c8-3 / channel
                  :mod 7)
      :ARG2 (c8-1 / move-01
                  :ARG0 c8-3
                  :ARG1 (c8-2 / camera
                              :poss c8-4)))

# ::snt ensure the media does nothing to give this lot any comprehensive media coverage&amp;if so make it the barest minimum!
# ::tokens ["ensure", "the", "media", "does", "nothing", "to", "give", "this", "lot", "any", "comprehensive", "media", "coverage&amp;if", "so", "make", "it", "the", "barest", "minimum", "!"]
# ::lemmas ["ensure", "the", "medium", "do", "nothing", "to", "give", "this", "lot", "any", "comprehensive", "medium", "coverage&amp;if", "so", "make", "it", "the", "bare", "minimum", "!"]
(c9-9 / ensure-01
      :ARG0 (c9-17 / you)
      :ARG1 (c9-1 / do-02
                  :ARG0 (c9-0 / media)
                  :ARG1 (c9-10 / nothing)
                  :ARG2 (c9-13 / give-01
                               :ARG0 c9-0
                               :ARG1 (c9-4 / and
                                           :op1 (c9-18 / cover-03
                                                       :ARG0 (c9-12 / media)
                                                       :mod (c9-2 / comprehensive))
                                           :op2 (c9-14 / amp)
                                           :mod (c9-11 / any))
                               :ARG2 (c9-6 / lot
                                           :mod (c9-19 / this))))
      :ARG0-of (c9-7 / make-01
                     :ARG1 (c9-15 / minimum
                                  :ARG1-of (c9-5 / have-degree-91
                                                 :ARG2 (c9-8 / bare)
                                                 :ARG3 (c9-16 / most)))
                     :condition (c9-3 / so))
      :mode imperative)

# ::snt as an American, you don't want Internet sleuths making this like the Boston Bomber search.
# ::tokens ["as", "an", "American", ",", "you", "do", "n't", "want", "Internet", "sleuths", "making", "this", "like", "the", "Boston", "Bomber", "search", "."]
# ::lemmas ["as", "an", "American", ",", "you", "do", "not", "want", "internet", "sleuth", "make", "this", "like", "the", "Boston", "Bomber", "search", "."]
(c10-0 / want-01
       :ARG0 (c10-1 / you
                    :mod (c10-8 / country
                                :name (c10-5 / name
                                             :op1 "America")))
       :ARG1 (c10-2 / make-02
                    :ARG0 (c10-9 / sleuth
                                 :mod (c10-4 / internet))
                    :ARG1 (c10-7 / resemble-01
                                 :ARG1 (c10-10 / this)
                                 :ARG2 (c10-3 / search-01
                                              :ARG2 (c10-11 / aircraft
                                                            :name (c10-6 / name
                                                                         :op1 "Boston"
                                                                         :op2 "Bomber")))))
       :polarity -)
