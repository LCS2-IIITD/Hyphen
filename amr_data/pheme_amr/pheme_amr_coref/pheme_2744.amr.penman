# ::snt once upon a time in ...!
# ::tokens ["once", "upon", "a", "time", "in", "...", "!"]
# ::lemmas ["once", "upon", "a", "time", "in", "...", "!"]
(c1-1 / time
      :mod (c1-0 / once-upon-a-time))

# ::snt You're right. This is crazy.
# ::tokens ["You", "'re", "right", ".", "This", "is", "crazy", "."]
# ::lemmas ["you", "be", "right", ".", "this", "be", "crazy", "."]
(c2-1 / multi-sentence
      :snt1 (c2-2 / right-06
                  :ARG1 (c2-0 / you))
      :snt2 (c2-3 / crazy-03
                  :ARG1 (c2-4 / this)))

# ::snt What the fuck are they going to do otherwise? Slaughter people? BTW, WTF is that thing
# ::tokens ["What", "the", "fuck", "are", "they", "going", "to", "do", "otherwise", "?", "Slaughter", "people", "?", "BTW", ",", "WTF", "is", "that", "thing"]
# ::lemmas ["what", "the", "fuck", "be", "they", "go", "to", "do", "otherwise", "?", "slaughter", "people", "?", "btw", ",", "WTF", "be", "that", "thing"]
(c3-2 / multi-sentence
      :snt1 (c3-6 / do-02
                  :ARG0 (c3-9 / they)
                  :ARG1 (c3-10 / amr-unknown
                               :mod (c3-1 / fuck
                                          :mode expressive))
                  :condition (c3-0 / have-polarity-91
                                   :ARG2 -))
      :snt2 (c3-8 / Slaughter-01
                  :ARG1 (c3-5 / person))
      :snt3 (c3-7 / thing
                  :mod (c3-4 / that)
                  :mod c3-1
                  :mode expressive)
      :mod (c3-3 / by-the-way))

# ::snt Rio
# ::tokens ["Rio"]
# ::lemmas ["Rio"]
(c4-0 / person
      :op1 "Rio")

# ::snt Is that a machine gun? What do the police need a machine gun for?
# ::tokens ["Is", "that", "a", "machine", "gun", "?", "What", "do", "the", "police", "need", "a", "machine", "gun", "for", "?"]
# ::lemmas ["be", "that", "a", "machine", "gun", "?", "what", "do", "the", "police", "need", "a", "machine", "gun", "for", "?"]
(c5-1 / multi-sentence
      :snt1 (c5-7 / gun
                  :mod (c5-4 / machine)
                  :domain (c5-8 / that)
                  :polarity (c5-9 / amr-unknown))
      :snt2 (c5-3 / need-01
                  :ARG0 (c5-5 / police)
                  :ARG1 (c5-6 / gun
                              :mod (c5-0 / machine))
                  :purpose (c5-2 / amr-unknown)))

# ::snt police state happening now in USA. Soon whole world
# ::tokens ["police", "state", "happening", "now", "in", "USA", ".", "Soon", "whole", "world"]
# ::lemmas ["police", "state", "happen", "now", "in", "USA", ".", "soon", "whole", "world"]
(c6-1 / multi-sentence
      :snt1 (c6-8 / state
                  :mod (c6-6 / police)
                  :time (c6-4 / now)
                  :location (c6-7 / country
                                  :name (c6-5 / name
                                              :op1 "USA")))
      :snt2 (c6-0 / world
                  :mod (c6-3 / whole)
                  :time (c6-2 / soon)))

# ::snt Ferguson police: 'Go protest in your own homes, sit down and be quiet..'
# ::tokens ["Ferguson", "police", ":", "'", "Go", "protest", "in", "your", "own", "homes", ",", "sit", "down", "and", "be", "quiet", "..", "'"]
# ::lemmas ["Ferguson", "police", ":", "'", "go", "protest", "in", "your", "own", "home", ",", "sit", "down", "and", "be", "quiet", "..", "'"]
(c7-8 / say-01
      :ARG0 (c7-5 / police
                  :mod (c7-6 / city
                             :name (c7-4 / name
                                         :op1 "Ferguson")))
      :ARG1 (c7-10 / and
                   :op1 (c7-7 / go-05
                              :ARG0 (c7-1 / you)
                              :ARG1 (c7-9 / protest-01
                                          :ARG0 c7-1
                                          :location (c7-0 / home
                                                          :poss c7-1))
                              :mode imperative)
                   :op2 (c7-2 / sit-down-02
                              :ARG1 c7-1
                              :mode imperative)
                   :op3 (c7-3 / quiet-03
                              :ARG1 c7-1
                              :mode imperative))
      :ARG2 c7-1)

# ::snt is that the police or the army?!?!?!
# ::tokens ["is", "that", "the", "police", "or", "the", "army", "?", "!", "?", "!", "?", "!"]
# ::lemmas ["be", "that", "the", "police", "or", "the", "army", "?", "!", "?", "!", "?", "!"]
(c8-3 / amr-choice
      :op1 (c8-0 / police)
      :op2 (c8-2 / army)
      :domain (c8-1 / that))

# ::snt ....what are they going to do if they don't? That's what scares me
# ::tokens ["....", "what", "are", "they", "going", "to", "do", "if", "they", "do", "n't", "?", "That", "'s", "what", "scares", "me"]
# ::lemmas ["....", "what", "be", "they", "go", "to", "do", "if", "they", "do", "not", "?", "that", "be", "what", "scare", "i"]
(c9-0 / multi-sentence
      :snt1 (c9-3 / do-02
                  :ARG0 (c9-6 / they)
                  :ARG1 (c9-7 / amr-unknown)
                  :condition c9-3
                  :ARG0 (c9-4 / they)
                  :polarity -)
      :snt2 (c9-5 / scare-01
                  :ARG0 (c9-2 / that)
                  :ARG1 (c9-1 / i)))

# ::snt RT : "This is not open for discussion." -- cop on loudspeaker, telling crowd to leave the area
# ::tokens ["RT", ":", "\"", "This", "is", "not", "open", "for", "discussion", ".", "\"", "--", "cop", "on", "loudspeaker", ",", "telling", "crowd", "to", "leave", "the", "area"]
# ::lemmas ["RT", ":", "\"", "this", "be", "not", "open", "for", "discussion", ".", "\"", "--", "cop", "on", "loudspeaker", ",", "tell", "crowd", "to", "leave", "the", "area"]
(c10-9 / say-01
       :ARG0 (c10-4 / publication
                    :name (c10-3 / name
                                 :op1 "RT"))
       :ARG1 (c10-2 / say-01
                    :ARG0 (c10-6 / cop
                                 :ARG0-of (c10-10 / tell-01
                                                  :ARG1 (c10-0 / leave-11
                                                               :ARG0 (c10-5 / crowd)
                                                               :ARG1 (c10-11 / area))
                                                  :ARG2 c10-5))
                    :ARG1 (c10-1 / open-05
                                 :ARG1 (c10-8 / this)
                                 :ARG2 (c10-7 / discuss-01
                                              :ARG1 c10-8)
                                 :polarity -)))

# ::snt THAT is the police? Why on earth do they need a huge armoured vehicle, tactical gear and light machine guns?!
# ::tokens ["THAT", "is", "the", "police", "?", "Why", "on", "earth", "do", "they", "need", "a", "huge", "armoured", "vehicle", ",", "tactical", "gear", "and", "light", "machine", "guns", "?", "!"]
# ::lemmas ["that", "be", "the", "police", "?", "why", "on", "earth", "do", "they", "need", "a", "huge", "armoured", "vehicle", ",", "tactical", "gear", "and", "light", "machine", "gun", "?", "!"]
(c11-2 / multi-sentence
       :snt1 (c11-7 / police
                    :domain (c11-15 / that))
       :snt2 (c11-5 / need-01
                    :ARG0 (c11-12 / they)
                    :ARG1 (c11-16 / and
                                  :op1 (c11-6 / vehicle
                                              :ARG1-of (c11-4 / armor-01)
                                              :mod (c11-0 / huge))
                                  :op2 (c11-10 / gear
                                               :mod (c11-8 / tactic))
                                  :op3 (c11-9 / gun
                                              :mod (c11-11 / machine)
                                              :ARG1-of (c11-1 / light-06)))
                    :ARG1-of (c11-13 / cause-01
                                     :ARG0 (c11-14 / amr-unknown
                                                   :location (c11-3 / earth)))))

# ::snt looks a lot like the
# ::tokens ["looks", "a", "lot", "like", "the"]
# ::lemmas ["look", "a", "lot", "like", "the"]
(c12-0 / look-02
       :ARG1 (c12-1 / thing)
       :degree (c12-2 / lot))

# ::snt aren't in Egypt good for them Last year Egyptian security kill +1000 in hours
# ::tokens ["are", "n't", "in", "Egypt", "good", "for", "them", "Last", "year", "Egyptian", "security", "kill", "+1000", "in", "hours"]
# ::lemmas ["be", "not", "in", "Egypt", "good", "for", "they", "Last", "year", "Egyptian", "security", "kill", "+1000", "in", "hours"]
(c13-3 / multi-sentence
       :snt1 (c13-11 / good-04
                     :ARG1 (c13-5 / be-located-at-91
                                  :ARG2 (c13-10 / country
                                                :name (c13-7 / name
                                                             :op1 "Egypt"))
                                  :polarity -)
                     :ARG2 (c13-14 / they)
                     :polarity -)
       :snt2 (c13-6 / kill-01
                    :ARG0 (c13-13 / security
                                  :mod c13-10)
                    :ARG1 (c13-8 / person
                                 :quant (c13-9 / more-than
                                               :op1 1000))
                    :time (c13-1 / year
                                 :mod (c13-2 / last))
                    :duration (c13-4 / multiple
                                     :op1 (c13-12 / temporal-quantity
                                                  :unit (c13-0 / hour)
                                                  :quant 1))))

# ::snt SWAT guy on top of the vehicle has one trained on the crowds, it'd appear.
# ::tokens ["SWAT", "guy", "on", "top", "of", "the", "vehicle", "has", "one", "trained", "on", "the", "crowds", ",", "it", "'d", "appear", "."]
# ::lemmas ["SWAT", "guy", "on", "top", "of", "the", "vehicle", "have", "one", "train", "on", "the", "crowd", ",", "it", "would", "appear", "."]
(c14-8 / appear-02
       :ARG1 (c14-0 / have-03
                    :ARG0 (c14-4 / guy
                                 :mod (c14-6 / shit
                                             :mode expressive)
                                 :location (c14-7 / top
                                                  :part-of (c14-1 / vehicle)))
                    :ARG1 (c14-2 / person
                                 :ARG1-of (c14-5 / train-01
                                                 :ARG2 (c14-3 / crowd))
                                 :quant 1)))

# ::snt This is the same PD whose Chief said they didn't have money to install dash cams though...
# ::tokens ["This", "is", "the", "same", "PD", "whose", "Chief", "said", "they", "did", "n't", "have", "money", "to", "install", "dash", "cams", "though", "..."]
# ::lemmas ["this", "be", "the", "same", "pd", "whose", "Chief", "say", "they", "do", "not", "have", "money", "to", "install", "dash", "cam", "though", "..."]
(c15-9 / same-01
       :ARG1 (c15-10 / this)
       :ARG2 (c15-6 / department
                    :mod (c15-5 / police)
                    :poss-of (c15-7 / chief
                                    :ARG0-of (c15-3 / say-01
                                                    :ARG1 (c15-0 / have-03
                                                                 :ARG0 c15-7
                                                                 :ARG1 (c15-2 / money
                                                                              :purpose (c15-4 / install-01
                                                                                              :ARG0 c15-7
                                                                                              :ARG1 (c15-8 / camera
                                                                                                           :mod (c15-1 / dash))))
                                                                 :polarity -))))
       :ARG1-of (c15-11 / have-concession-91))

# ::snt time to steel plate some Bulldozers
# ::tokens ["time", "to", "steel", "plate", "some", "Bulldozers"]
# ::lemmas ["time", "to", "steel", "plate", "some", "bulldozer"]
(c16-3 / plate-01
       :ARG1 (c16-0 / bulldozer
                    :quant (c16-4 / some))
       :instrument (c16-1 / steel)
       :time (c16-2 / now))

# ::snt FUK U PIG
# ::tokens ["FUK", "U", "PIG"]
# ::lemmas ["fuk", "U", "PIG"]
(c17-1 / company
       :name (c17-0 / name
                    :op1 "FUK"
                    :op2 "U"
                    :op3 "PIG"))

# ::snt is this really necessary? Am I missing something? Because...
# ::tokens ["is", "this", "really", "necessary", "?", "Am", "I", "missing", "something", "?", "Because", "..."]
# ::lemmas ["be", "this", "really", "necessary", "?", "be", "i", "miss", "something", "?", "because", "..."]
(c18-0 / multi-sentence
       :snt1 (c18-3 / need-01
                    :polarity (c18-9 / amr-unknown)
                    :ARG1 (c18-8 / this)
                    :ARG1-of (c18-5 / real-04))
       :snt2 (c18-4 / miss-01
                    :polarity (c18-1 / amr-unknown)
                    :ARG0 (c18-2 / i)
                    :ARG1 (c18-7 / something))
       :snt3 (c18-6 / cause-01))

# ::snt Where in the fuck is Ferguson? In Iraq?
# ::tokens ["Where", "in", "the", "fuck", "is", "Ferguson", "?", "In", "Iraq", "?"]
# ::lemmas ["where", "in", "the", "fuck", "be", "Ferguson", "?", "in", "Iraq", "?"]
(c19-1 / multi-sentence
       :snt1 (c19-2 / be-located-at-91
                    :ARG1 (c19-7 / person
                                 :name (c19-5 / name
                                              :op1 "Ferguson"))
                    :ARG2 (c19-9 / amr-unknown)
                    :mod (c19-0 / fuck
                                :mode expressive)
                    :snt2-of c19-1)
       :ARG1 (c19-3 / event)
       :ARG2 (c19-8 / country
                    :name (c19-6 / name
                                 :op1 "Iraq"))
       :location (c19-4 / amr-unknown))

# ::snt What is a 'light machine gun..?'
# ::tokens ["What", "is", "a", "'", "light", "machine", "gun", "..", "?", "'"]
# ::lemmas ["what", "be", "a", "'", "light", "machine", "gun", "..", "?", "'"]
(c20-2 / gun
       :mod (c20-1 / machine)
       :ARG1-of (c20-0 / light-06)
       :domain (c20-3 / amr-unknown))

# ::snt got it..
# ::tokens ["got", "it", ".."]
# ::lemmas ["get", "it", ".."]
(c21-0 / get-02
       :ARG1 (c21-1 / it))

# ::snt They probably count it as "post-case paperwork equipment" the union allows to exclude.
# ::tokens ["They", "probably", "count", "it", "as", "\"", "post", "-", "case", "paperwork", "equipment", "\"", "the", "union", "allows", "to", "exclude", "."]
# ::lemmas ["they", "probably", "count", "it", "as", "\"", "post", "-", "case", "paperwork", "equipment", "\"", "the", "union", "allow", "to", "exclude", "."]
(c22-7 / count-02
       :ARG0 (c22-8 / they)
       :ARG1 (c22-4 / it)
       :ARG2 (c22-2 / equipment
                    :purpose (c22-5 / paperwork
                                    :time (c22-10 / after
                                                  :op1 (c22-6 / case)))
                    :ARG1-of (c22-1 / exclude-01
                                    :ARG0 (c22-0 / union)
                                    :ARG1-of (c22-3 / allow-01
                                                    :ARG0 c22-0)))
       :mod (c22-9 / probable))

# ::snt how can they make them leave if its peaceful protest?
# ::tokens ["how", "can", "they", "make", "them", "leave", "if", "its", "peaceful", "protest", "?"]
# ::lemmas ["how", "can", "they", "make", "they", "leave", "if", "its", "peaceful", "protest", "?"]
(c23-3 / possible-01
       :ARG1 (c23-1 / make-02
                    :ARG0 (c23-4 / they)
                    :ARG1 (c23-0 / leave-11
                                 :ARG0 c23-4)
                    :manner (c23-6 / amr-unknown))
       :condition (c23-5 / protest-01
                         :ARG0 c23-4
                         :manner (c23-2 / peaceful)))
