# ::snt NiceQuestion ExeptionWithWhatHappened in ,We`veAlwaysPaidByDeath&amp;Blood in `s Appeasment
# ::tokens ["NiceQuestion", "ExeptionWithWhatHappened", "in", ",", "We`veAlwaysPaidByDeath&amp;Blood", "in", "`", "s", "Appeasment"]
# ::lemmas ["NiceQuestion", "exeptionwithwhathappene", "in", ",", "we`vealwayspaidbydeath&amp;blood", "in", "`", "s", "appeasment"]
(c1-0 / multi-sentence
      :snt1 (c1-7 / answer-01
                  :ARG1 (c1-2 / question-01)
                  :ARG1-of (c1-4 / nice-01))
      :snt2 (c1-6 / person
                  :name (c1-5 / name
                              :op1 "Always"
                              :op2 "Paid"
                              :op3 "By"
                              :op4 "Death&amp"))
      :snt3 (c1-1 / blood
                  :prep-in (c1-3 / appease-01)))

# ::snt what happened with this man?can anybody tell plz
# ::tokens ["what", "happened", "with", "this", "man?can", "anybody", "tell", "plz"]
# ::lemmas ["what", "happen", "with", "this", "man?can", "anybody", "tell", "plz"]
(c2-5 / possible-01
      :polarity (c2-8 / amr-unknown)
      :ARG1 (c2-7 / tell-01
                  :ARG0 (c2-3 / anybody)
                  :ARG1 (c2-2 / event
                              :mod (c2-1 / man
                                         :mod (c2-6 / this)))
                  :ARG2 (c2-0 / you))
      :polarity (c2-4 / amr-unknown))

# ::snt or Raif Badawl lies=lies=lies
# ::tokens ["or", "Raif", "Badawl", "lies", "=", "lies", "=", "lies"]
# ::lemmas ["or", "Raif", "Badawl", "lie", "=", "lie", "=", "lie"]
(c3-1 / or
      :op2 (c3-2 / equal-01
                 :ARG1 (c3-0 / lie-08
                             :ARG0 (c3-4 / person
                                         :name (c3-3 / name
                                                     :op1 "Raif"
                                                     :op2 "Badawl")))
                 :ARG2 (c3-5 / lie-08
                             :ARG0 c3-4)))

# ::snt was D st country call killing of writer,Salman Rushdie. rds Bloggers+Journalists are on Death row
# ::tokens ["was", "D", "st", "country", "call", "killing", "of", "writer", ",", "Salman", "Rushdie", ".", "rds", "Bloggers+Journalists", "are", "on", "Death", "row"]
# ::lemmas ["be", "D", "st", "country", "call", "killing", "of", "writer", ",", "Salman", "Rushdie", ".", "rd", "bloggers+journalist", "be", "on", "Death", "row"]
(c4-2 / multi-sentence
      :snt1 (c4-7 / call-03
                  :ARG0 (c4-6 / country)
                  :ARG1 (c4-12 / kill-01
                               :ARG1 (c4-5 / person
                                           :name (c4-4 / name
                                                       :op1 "Salman"
                                                       :op2 "Rushdie")
                                           :ARG0-of (c4-1 / write-01)))
                  :polarity (c4-14 / amr-unknown))
      :snt2 (c4-3 / be-located-at-91
                  :ARG1 (c4-11 / slash
                               :op1 (c4-13 / person
                                           :ARG0-of (c4-8 / blog-01))
                               :op2 (c4-0 / journalist))
                  :ARG2 (c4-9 / row
                              :mod (c4-10 / die-01))))

# ::snt Didn't he blog about Pre Islamic Achaemenid Iran/Persia? You should just broadcast an Achaemenid feature. Progressive past.
# ::tokens ["Did", "n't", "he", "blog", "about", "Pre", "Islamic", "Achaemenid", "Iran", "/", "Persia", "?", "You", "should", "just", "broadcast", "an", "Achaemenid", "feature", ".", "Progressive", "past", "."]
# ::lemmas ["do", "not", "he", "blog", "about", "Pre", "Islamic", "Achaemenid", "Iran", "/", "Persia", "?", "you", "should", "just", "broadcast", "an", "Achaemenid", "feature", ".", "progressive", "past", "."]
(c5-4 / multi-sentence
      :snt1 (c5-5 / blog-01
                  :ARG0 (c5-0 / he)
                  :topic (c5-16 / slash
                                :op1 (c5-12 / country
                                            :name (c5-8 / name
                                                        :op1 "Iran"))
                                :op2 (c5-11 / country
                                            :name (c5-9 / name
                                                        :op1 "Persia"))
                                :mod (c5-13 / religious-group
                                            :name (c5-10 / name
                                                         :op1 "Pre"
                                                         :op2 "Islamic")))
                  :ARG1-of (c5-7 / request-confirmation-91)
                  :polarity -)
      :snt2 (c5-6 / recommend-01
                  :ARG1 (c5-14 / broadcast-01
                               :ARG0 (c5-1 / you)
                               :ARG1 (c5-3 / feature
                                           :mod c5-13)
                               :mod (c5-2 / just))
                  :snt3 (c5-15 / past
                               :ARG1-of (c5-17 / progressive-02))))
