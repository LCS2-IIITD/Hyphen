# ::snt she hot
# ::tokens ["she", "hot"]
# ::lemmas ["she", "hot"]
(c1-0 / hot-03
      :ARG1 (c1-1 / she))

# ::snt what a joke
# ::tokens ["what", "a", "joke"]
# ::lemmas ["what", "a", "joke"]
(c3-0 / joke-01
      :degree (c3-1 / so))

# ::snt The monika and the charming image of Mr Philips.. Wonderful
# ::tokens ["The", "monika", "and", "the", "charming", "image", "of", "Mr", "Philips", "..", "Wonderful"]
# ::lemmas ["the", "monika", "and", "the", "charming", "image", "of", "Mr", "Philips", "..", "wonderful"]
(c4-6 / and
      :op1 (c4-1 / monika)
      :op2 (c4-2 / image
                 :ARG0-of (c4-5 / charm-01)
                 :poss (c4-4 / person
                             :name (c4-3 / name
                                         :op1 "Mr."
                                         :op2 "Philips")))
      :mod (c4-0 / wonderful))

# ::snt yes ! watch out !dont let the gunner to run away.
# ::tokens ["yes", "!", "watch", "out", "!", "do", "nt", "let", "the", "gunner", "to", "run", "away", "."]
# ::lemmas ["yes", "!", "watch", "out", "!", "do", "not", "let", "the", "gunner", "to", "run", "away", "."]
(c5-3 / multi-sentence
      :snt1 (c5-1 / yes)
      :snt2 (c5-0 / watch-out-02
                  :ARG0 (c5-6 / you)
                  :mode imperative)
      :snt3 (c5-2 / let-01
                  :ARG0 c5-6
                  :ARG1 (c5-4 / run-02
                              :ARG0 (c5-5 / gunner)
                              :direction (c5-7 / away))
                  :polarity -
                  :mode imperative))

# ::snt Now the terrorist will also run out this way &amp; you guys will think its a Hostage ...
# ::tokens ["Now", "the", "terrorist", "will", "also", "run", "out", "this", "way", "&", "amp", ";", "you", "guys", "will", "think", "its", "a", "Hostage", "..."]
# ::lemmas ["now", "the", "terrorist", "will", "also", "run", "out", "this", "way", "&", "amp", ";", "you", "guy", "will", "think", "its", "a", "Hostage", "..."]
(c6-10 / and
       :op1 (c6-6 / run-out-05
                  :ARG1 (c6-9 / terrorist)
                  :time (c6-4 / now)
                  :mod (c6-3 / also)
                  :manner (c6-1 / way
                                :mod (c6-8 / this)))
       :op2 (c6-5 / think-01
                  :ARG0 (c6-7 / guy
                              :mod (c6-2 / you))
                  :ARG1 (c6-0 / Hostage
                              :domain c6-6)))

# ::snt Yup you got it. Another set up job
# ::tokens ["Yup", "you", "got", "it", ".", "Another", "set", "up", "job"]
# ::lemmas ["yup", "you", "get", "it", ".", "another", "set", "up", "job"]
(c7-2 / multi-sentence
      :snt1 (c7-4 / get-01
                  :ARG0 (c7-1 / you)
                  :ARG1 (c7-3 / it)
                  :mod (c7-5 / yup))
      :snt2 (c7-0 / job
                  :mod (c7-7 / another)
                  :mod (c7-6 / set-up-03)))

# ::snt In the end the gunman gets it, a govt spokesman makes up a story, new laws will be brought it on the back of it..
# ::tokens ["In", "the", "end", "the", "gunman", "gets", "it", ",", "a", "govt", "spokesman", "makes", "up", "a", "story", ",", "new", "laws", "will", "be", "brought", "it", "on", "the", "back", "of", "it", ".."]
# ::lemmas ["in", "the", "end", "the", "gunman", "get", "it", ",", "a", "govt", "spokesman", "make", "up", "a", "story", ",", "new", "law", "will", "be", "bring", "it", "on", "the", "back", "of", "it", ".."]
(c8-15 / and
       :op1 (c8-12 / get-01
                   :ARG0 (c8-10 / gunman)
                   :ARG1 (c8-6 / it))
       :op2 (c8-2 / make-up-10
                  :ARG0 (c8-9 / person
                              :ARG0-of (c8-0 / have-org-role-91
                                             :ARG1 (c8-7 / government-organization
                                                         :ARG0-of (c8-13 / govern-01))
                                             :ARG2 (c8-14 / spokesman)))
                  :ARG1 (c8-4 / story))
       :op3 (c8-3 / bring-01
                  :ARG1 (c8-1 / law
                              :ARG1-of (c8-8 / new-01))
                  :ARG2 c8-6
                  :location (c8-11 / back
                                   :part-of c8-6))
       :time (c8-5 / end-01))

# ::snt wah bro wah kiya logic hay, you r genius
# ::tokens ["wah", "bro", "wah", "kiya", "logic", "hay", ",", "you", "r", "genius"]
# ::lemmas ["wah", "bro", "wah", "kiya", "logic", "hay", ",", "you", "r", "genius"]
(c9-8 / say-01
      :ARG0 (c9-4 / i)
      :ARG1 (c9-7 / genius
                  :domain (c9-1 / you))
      :ARG2 (c9-6 / person
                  :ARG0-of (c9-0 / have-rel-role-91
                                 :ARG1 c9-4
                                 :ARG2 (c9-3 / bro))
                  :mod (c9-2 / wah
                             :mode expressive)
                  :mod (c9-5 / wah
                             :mode expressive)))
