# ::snt I don't propose to know what's best for oz but isn't that a victory for the criminal?
# ::tokens ["I", "do", "n't", "propose", "to", "know", "what", "'s", "best", "for", "oz", "but", "is", "n't", "that", "a", "victory", "for", "the", "criminal", "?"]
# ::lemmas ["i", "do", "not", "propose", "to", "know", "what", "be", "good", "for", "oz", "but", "be", "not", "that", "a", "victory", "for", "the", "criminal", "?"]
(c1-8 / contrast-01
      :ARG1 (c1-6 / propose-01
                  :ARG0 (c1-4 / i)
                  :ARG1 (c1-5 / know-01
                              :ARG0 c1-4
                              :ARG1 (c1-11 / thing
                                           :ARG1-of (c1-0 / have-degree-91
                                                          :ARG2 (c1-9 / good-04
                                                                      :ARG2 (c1-3 / oz))
                                                          :ARG3 (c1-2 / most))))
                  :polarity -)
      :ARG2 (c1-1 / win-01
                  :ARG0 (c1-12 / person
                               :ARG2-of (c1-7 / criminal-03))
                  :domain c1-5
                  :ARG1-of (c1-10 / request-confirmation-91)))

# ::snt What no media blackout and no fly zone what kind of police state is this!
# ::tokens ["What", "no", "media", "blackout", "and", "no", "fly", "zone", "what", "kind", "of", "police", "state", "is", "this", "!"]
# ::lemmas ["what", "no", "medium", "blackout", "and", "no", "fly", "zone", "what", "kind", "of", "police", "state", "be", "this", "!"]
(c2-7 / state
      :mod (c2-6 / police)
      :mod (c2-5 / kind
                 :mod (c2-9 / amr-unknown))
      :domain (c2-8 / this)
      :condition (c2-4 / and
                       :op1 (c2-3 / blackout
                                  :mod (c2-1 / media)
                                  :polarity -)
                       :op2 (c2-2 / zone
                                  :purpose (c2-0 / fly-01)
                                  :polarity -)))

# ::snt Done.
# ::tokens ["Done", "."]
# ::lemmas ["do", "."]
(c3-0 / do-02)

# ::snt says to stay home
# ::tokens ["says", "to", "stay", "home"]
# ::lemmas ["say", "to", "stay", "home"]
(c4-0 / say-01
      :ARG1 (c4-1 / stay-01
                  :ARG3 (c4-2 / home)))
