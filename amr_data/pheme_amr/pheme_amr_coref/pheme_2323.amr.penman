# ::snt Baby photo contest are involved, you voted offline publications Tweet thank you
# ::tokens ["Baby", "photo", "contest", "are", "involved", ",", "you", "voted", "offline", "publications", "Tweet", "thank", "you"]
# ::lemmas ["baby", "photo", "contest", "be", "involve", ",", "you", "vote", "offline", "publication", "Tweet", "thank", "you"]
(c1-1 / multi-sentence
      :snt1 (c1-4 / involve-01
                  :ARG1 (c1-7 / contest-02
                              :ARG2 (c1-6 / photograph-01
                                          :ARG1 (c1-2 / baby))))
      :snt2 (c1-5 / vote-01
                  :ARG0 (c1-0 / you)
                  :ARG1 (c1-11 / publication
                               :location (c1-3 / offline)))
      :snt3 (c1-12 / and
                   :op1 (c1-10 / tweet-02
                               :ARG0 (c1-8 / you)
                               :ARG1 (c1-9 / thank-01
                                           :ARG0 c1-8
                                           :op2-of c1-12)
                               :mode imperative)))

# ::snt The solution is preemptive assasination of any muslim who expresses radical views.
# ::tokens ["The", "solution", "is", "preemptive", "assasination", "of", "any", "muslim", "who", "expresses", "radical", "views", "."]
# ::lemmas ["the", "solution", "be", "preemptive", "assasination", "of", "any", "muslim", "who", "express", "radical", "view", "."]
(c2-7 / solve-01
      :ARG2 (c2-9 / assassinate-01
                  :ARG1 (c2-5 / person
                              :mod (c2-6 / religious-group
                                         :name (c2-3 / name
                                                     :op1 "Islam"))
                              :mod (c2-1 / any)
                              :ARG0-of (c2-0 / express-01
                                             :ARG1 (c2-4 / view-02
                                                         :ARG0 c2-5
                                                         :ARG1-of (c2-2 / radical-02))))
                  :ARG1-of (c2-8 / preempt-01)))

# ::snt Gee, dark skin, Muslim...I'm sensing a pattern here.
# ::tokens ["Gee", ",", "dark", "skin", ",", "Muslim", "...", "I'm", "sensing", "a", "pattern", "here", "."]
# ::lemmas ["Gee", ",", "dark", "skin", ",", "Muslim", "...", "i'm", "sense", "a", "pattern", "here", "."]
(c3-8 / say-01
      :ARG0 (c3-2 / i)
      :ARG1 (c3-1 / sense-01
                  :ARG0 c3-2
                  :ARG1 (c3-4 / pattern-01)
                  :location (c3-0 / here))
      :ARG2 (c3-9 / person
                  :mod (c3-5 / religious-group
                             :name (c3-3 / name
                                         :op1 "Muslim"))
                  :ARG1-of (c3-6 / dark-03))
      :mod (c3-7 / gee
                 :mode expressive))

# ::snt may their ashes be flushed down the toilet
# ::tokens ["may", "their", "ashes", "be", "flushed", "down", "the", "toilet"]
# ::lemmas ["may", "their", "ashe", "be", "flush", "down", "the", "toilet"]
(c4-0 / wish-01
      :ARG1 (c4-1 / flush-01
                  :ARG1 (c4-5 / ash
                              :poss (c4-4 / they))
                  :ARG2 (c4-3 / toilet)
                  :direction (c4-2 / down)))

# ::snt : French police named two suspects in killing of policewoman in Montrouge
# ::tokens [":", "French", "police", "named", "two", "suspects", "in", "killing", "of", "policewoman", "in", "Montrouge"]
# ::lemmas [":", "French", "police", "name", "two", "suspect", "in", "killing", "of", "policewoman", "in", "Montrouge"]
(c5-2 / name-01
      :ARG0 (c5-4 / police
                  :mod (c5-6 / country
                             :name (c5-3 / name
                                         :op1 "France")))
      :ARG1 (c5-10 / person
                   :ARG2-of (c5-8 / suspect-01
                                  :ARG1 (c5-9 / kill-01
                                              :ARG1 c5-10
                                              :ARG0-of (c5-0 / have-org-role-91
                                                             :ARG2 (c5-1 / policewoman)))
                                  :location (c5-5 / city
                                                  :name (c5-7 / name
                                                              :op1 "Montrouge")))
                   :quant 2))

# ::snt :so hang them .. like they deserve
# ::tokens [":", "so", "hang", "them", "..", "like", "they", "deserve"]
# ::lemmas [":", "so", "hang", "they", "..", "like", "they", "deserve"]
(c6-2 / cause-01
      :ARG1 (c6-0 / hang-01
                  :ARG1 (c6-4 / they)
                  :ARG1-of (c6-1 / resemble-01
                                 :ARG2 (c6-3 / deserve-01
                                             :ARG0 c6-4))))

# ::snt Kanye and Kim ?
# ::tokens ["Kanye", "and", "Kim", "?"]
# ::lemmas ["Kanye", "and", "Kim", "?"]
(c7-5 / and
      :op1 (c7-3 / person
                 :name (c7-1 / name
                             :op1 "Kanye"))
      :op2 (c7-4 / person
                 :name (c7-2 / name
                             :op1 "Kim"))
      :polarity (c7-0 / amr-unknown))

# ::snt Have a nice lunch you two!
# ::tokens ["Have", "a", "nice", "lunch", "you", "two", "!"]
# ::lemmas ["have", "a", "nice", "lunch", "you", "two", "!"]
(c8-0 / say-01
      :ARG1 (c8-3 / lunch-01
                  :ARG0 (c8-1 / you
                              :quant 2)
                  :ARG1-of (c8-2 / nice-01)
                  :mode imperative)
      :ARG2 c8-1)

# ::snt There is a charming couple for you. GOod grief. ISlamic MIlitants have no regard for life, including their own.
# ::tokens ["There", "is", "a", "charming", "couple", "for", "you", ".", "GOod", "grief", ".", "ISlamic", "MIlitants", "have", "no", "regard", "for", "life", ",", "including", "their", "own", "."]
# ::lemmas ["there", "be", "a", "charming", "couple", "for", "you", ".", "good", "grief", ".", "ISlamic", "militant", "have", "no", "regard", "for", "life", ",", "include", "their", "own", "."]
(c9-2 / multi-sentence
      :snt1 (c9-9 / couple
                  :ARG0-of (c9-8 / charm-01)
                  :beneficiary (c9-0 / you))
      :snt2 (c9-10 / grief
                   :ARG1-of (c9-11 / go-08))
      :snt3 (c9-12 / regard-01
                   :ARG0 (c9-7 / person
                               :mod (c9-5 / religious-group
                                          :name (c9-6 / name
                                                      :op1 "Islam"))
                               :mod (c9-3 / ultra)
                               :ARG2-of (c9-4 / include-91
                                              :ARG1 (c9-1 / life
                                                          :poss c9-7)))
                   :ARG1 (c9-13 / life)
                   :polarity -))

# ::snt said these two will be the perfect nipple twisters at 's next UN speech
# ::tokens ["said", "these", "two", "will", "be", "the", "perfect", "nipple", "twisters", "at", "'s", "next", "UN", "speech"]
# ::lemmas ["say", "these", "two", "will", "be", "the", "perfect", "nipple", "twister", "at", "'s", "next", "UN", "speech"]
(c10-8 / say-01
       :ARG1 (c10-9 / twister
                    :ARG1-of (c10-4 / perfect-02)
                    :mod (c10-2 / nipple)
                    :domain (c10-7 / thing
                                   :mod (c10-3 / this)
                                   :quant 2)
                    :time (c10-1 / speak-01
                                 :ARG0 (c10-0 / organization
                                              :name (c10-5 / name
                                                           :op1 "UN"))
                                 :mod (c10-6 / next))))

# ::snt Baby photo contest are involved, you voted offline publications Tweet thank you
# ::tokens ["Baby", "photo", "contest", "are", "involved", ",", "you", "voted", "offline", "publications", "Tweet", "thank", "you"]
# ::lemmas ["baby", "photo", "contest", "be", "involve", ",", "you", "vote", "offline", "publication", "Tweet", "thank", "you"]
(c11-1 / multi-sentence
       :snt1 (c11-4 / involve-01
                    :ARG1 (c11-7 / contest-02
                                 :ARG2 (c11-6 / photograph-01
                                              :ARG1 (c11-2 / baby))))
       :snt2 (c11-5 / vote-01
                    :ARG0 (c11-0 / you)
                    :ARG1 (c11-11 / publication
                                  :location (c11-3 / offline)))
       :snt3 (c11-12 / and
                     :op1 (c11-10 / tweet-02
                                  :ARG0 (c11-8 / you)
                                  :ARG1 (c11-9 / thank-01
                                               :ARG0 c11-8
                                               :op2-of c11-12)
                                  :mode imperative)))

# ::snt If they want to die as martyrs come on out and meet the police.
# ::tokens ["If", "they", "want", "to", "die", "as", "martyrs", "come", "on", "out", "and", "meet", "the", "police", "."]
# ::lemmas ["if", "they", "want", "to", "die", "as", "martyr", "come", "on", "out", "and", "meet", "the", "police", "."]
(c12-7 / and
       :op1 (c12-4 / come-on-25
                   :ARG1 (c12-6 / they)
                   :mode imperative)
       :op2 (c12-1 / meet-02
                   :ARG0 c12-6
                   :ARG1 (c12-2 / police)
                   :mode imperative)
       :condition (c12-0 / want-01
                         :ARG0 c12-6
                         :ARG1 (c12-3 / die-01
                                      :ARG1 c12-6
                                      :manner (c12-5 / martyr-01
                                                     :ARG1 c12-6))))

# ::snt France invited this: Before attack, French began ceding control of neighborhoods to Islamists...
# ::tokens ["France", "invited", "this", ":", "Before", "attack", ",", "French", "began", "ceding", "control", "of", "neighborhoods", "to", "Islamists", "..."]
# ::lemmas ["France", "invite", "this", ":", "before", "attack", ",", "French", "begin", "cede", "control", "of", "neighborhood", "to", "Islamists", "..."]
(c13-2 / invite-01
       :ARG0 (c13-7 / country
                    :name (c13-3 / name
                                 :op1 "France"))
       :ARG1 (c13-12 / this
                     :ARG1-of (c13-0 / mean-01
                                     :ARG2 (c13-1 / begin-01
                                                  :ARG0 c13-7
                                                  :ARG1 (c13-6 / cede-01
                                                               :ARG0 c13-7
                                                               :ARG1 (c13-11 / control-01
                                                                             :ARG0 c13-7
                                                                             :ARG1 (c13-4 / neighborhood))
                                                               :ARG2 (c13-5 / person
                                                                            :mod (c13-8 / religious-group
                                                                                        :name (c13-9 / name
                                                                                                     :op1 "Islamism"))))
                                                  :time (c13-10 / before
                                                                :op1 (c13-13 / attack-01))))))

# ::snt : French police named two suspects in killing of policewoman in Montrouge
# ::tokens [":", "French", "police", "named", "two", "suspects", "in", "killing", "of", "policewoman", "in", "Montrouge"]
# ::lemmas [":", "French", "police", "name", "two", "suspect", "in", "killing", "of", "policewoman", "in", "Montrouge"]
(c14-2 / name-01
       :ARG0 (c14-4 / police
                    :mod (c14-6 / country
                                :name (c14-3 / name
                                             :op1 "France")))
       :ARG1 (c14-10 / person
                     :ARG2-of (c14-8 / suspect-01
                                     :ARG1 (c14-9 / kill-01
                                                  :ARG1 c14-10
                                                  :ARG0-of (c14-0 / have-org-role-91
                                                                  :ARG2 (c14-1 / policewoman)))
                                     :location (c14-5 / city
                                                      :name (c14-7 / name
                                                                   :op1 "Montrouge")))
                     :quant 2))

# ::snt :njoy my music againgst THE hate to muslims like n share tnnx
# ::tokens [":", "njoy", "my", "music", "againgst", "THE", "hate", "to", "muslims", "like", "n", "share", "tnnx"]
# ::lemmas [":", "njoy", "my", "music", "againgst", "the", "hate", "to", "muslims", "like", "n", "share", "tnnx"]
(c15-3 / enjoy-01
       :ARG0 (c15-1 / you)
       :ARG1 (c15-2 / music
                    :poss (c15-4 / i))
       :ARG1-of (c15-9 / cause-01
                       :ARG0 (c15-0 / hate-01
                                    :ARG1 (c15-7 / person
                                                 :mod (c15-8 / religious-group
                                                             :name (c15-5 / name
                                                                          :op1 "Islam")))
                                    :example (c15-10 / share-01
                                                     :ARG0 c15-1
                                                     :ARG1 (c15-11 / thing
                                                                   :name (c15-6 / name
                                                                                :op1 "TSNx"))
                                                     :mode imperative)))
       :mode imperative)

# ::snt they dont even need to say it, we all already know they are Muslims
# ::tokens ["they", "do", "nt", "even", "need", "to", "say", "it", ",", "we", "all", "already", "know", "they", "are", "Muslims"]
# ::lemmas ["they", "do", "not", "even", "need", "to", "say", "it", ",", "we", "all", "already", "know", "they", "be", "Muslims"]
(c16-5 / need-01
       :ARG0 (c16-11 / they)
       :ARG1 (c16-10 / say-01
                     :ARG0 c16-11
                     :ARG1 (c16-3 / it))
       :mod (c16-1 / even)
       :ARG1-of (c16-9 / cause-01
                       :ARG0 (c16-4 / know-01
                                    :ARG0 (c16-0 / we
                                                 :mod (c16-12 / all))
                                    :ARG1 (c16-7 / person
                                                 :domain c16-11
                                                 :mod (c16-8 / religious-group
                                                             :name (c16-6 / name
                                                                          :op1 "Muslim")))
                                    :time (c16-2 / already)))
       :polarity -)

# ::snt she cute
# ::tokens ["she", "cute"]
# ::lemmas ["she", "cute"]
(c17-1 / cute
       :domain (c17-0 / she))

# ::snt : French police named two suspects in killing of policewoman in Montrouge: dat shit
# ::tokens [":", "French", "police", "named", "two", "suspects", "in", "killing", "of", "policewoman", "in", "Montrouge", ":", "dat", "shit"]
# ::lemmas [":", "French", "police", "name", "two", "suspect", "in", "killing", "of", "policewoman", "in", "Montrouge", ":", "dat", "shit"]
(c19-3 / name-02
       :ARG0 (c19-5 / police
                    :mod (c19-7 / country
                                :name (c19-4 / name
                                             :op1 "France")))
       :ARG1 (c19-12 / person
                     :ARG2-of (c19-9 / suspect-01
                                     :ARG1 (c19-11 / kill-01
                                                   :ARG0 c19-12
                                                   :ARG1 c19-12
                                                   :ARG0-of (c19-0 / have-org-role-91
                                                                   :ARG1 c19-5
                                                                   :ARG2 (c19-1 / oman)))
                                     :location (c19-6 / city
                                                      :name (c19-8 / name
                                                                   :op1 "Montrouge")))
                     :quant 2)
       :mod (c19-2 / shit
                   :mod (c19-10 / that)
                   :mode expressive))
