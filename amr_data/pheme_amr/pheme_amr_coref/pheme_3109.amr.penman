# ::snt : JUST IN: Police Chief Thomas Jackson tells they will release the name of the police officer today ok
# ::tokens [":", "JUST", "IN", ":", "Police", "Chief", "Thomas", "Jackson", "tells", "they", "will", "release", "the", "name", "of", "the", "police", "officer", "today", "ok"]
# ::lemmas [":", "just", "in", ":", "Police", "Chief", "Thomas", "Jackson", "tell", "they", "will", "release", "the", "name", "of", "the", "police", "officer", "today", "ok"]
(c1-1 / multi-sentence
      :snt2 (c1-19 / tell-01
                   :ARG0 (c1-2 / person
                               :name (c1-8 / name
                                           :op1 "Thomas"
                                           :op2 "Jackson")
                               :ARG0-of (c1-5 / have-org-role-91
                                              :ARG1 (c1-3 / police)
                                              :ARG2 (c1-17 / chief)))
                   :ARG1 (c1-9 / release-01
                               :ARG0 (c1-18 / they)
                               :ARG1 (c1-12 / thing
                                            :ARG2-of (c1-16 / name-01
                                                            :ARG1 (c1-6 / person
                                                                        :ARG0-of (c1-4 / have-org-role-91
                                                                                       :ARG1 (c1-10 / police)
                                                                                       :ARG2 (c1-14 / officer)))))
                               :time (c1-15 / today)
                               :ARG1-of (c1-13 / okay-04)))
      :snt1 (c1-7 / be-located-at-91
                  :ARG2 (c1-11 / inside)
                  :mod (c1-0 / just)))

# ::snt REP. Steve King must go racist, and dull, dumb. He must go and all like him. (no more speaking).
# ::tokens ["REP", ".", "Steve", "King", "must", "go", "racist", ",", "and", "dull", ",", "dumb", ".", "He", "must", "go", "and", "all", "like", "him", ".", "(", "no", "more", "speaking", ")", "."]
# ::lemmas ["REP", ".", "Steve", "King", "must", "go", "racist", ",", "and", "dull", ",", "dumb", ".", "he", "must", "go", "and", "all", "like", "he", ".", "(", "no", "more", "speaking", ")", "."]
(c2-1 / multi-sentence
      :snt1 (c2-19 / obligate-01
                   :ARG1 (c2-3 / person
                               :name (c2-12 / name
                                            :op1 "Steve"
                                            :op2 "King")
                               :ARG0-of (c2-10 / have-org-role-91
                                               :ARG2 (c2-7 / person
                                                           :ARG0-of (c2-15 / represent-01))))
                   :ARG2 (c2-16 / go-02
                                :ARG0 c2-3
                                :ARG1 (c2-9 / and
                                            :op1 (c2-2 / racist)
                                            :op2 (c2-4 / dull-04)
                                            :op3 (c2-0 / dumb))))
      :snt2 (c2-18 / obligate-01
                   :ARG1 (c2-17 / and
                                :op1 (c2-5 / go-02
                                           :ARG0 (c2-8 / he))
                                :op2 (c2-11 / resemble-01
                                            :ARG1 (c2-13 / all)
                                            :ARG2 c2-8)))
      :snt3 (c2-6 / speak-01
                  :mod (c2-14 / more)
                  :polarity -))

# ::snt Good, the wrong person was protected here, the murderer; not the child, &amp; wrong men in power now, the rich and DULL.
# ::tokens ["Good", ",", "the", "wrong", "person", "was", "protected", "here", ",", "the", "murderer", ";", "not", "the", "child", ",", "&", "amp", ";", "wrong", "men", "in", "power", "now", ",", "the", "rich", "and", "DULL", "."]
# ::lemmas ["good", ",", "the", "wrong", "person", "be", "protect", "here", ",", "the", "murderer", ";", "not", "the", "child", ",", "&", "amp", ";", "wrong", "man", "in", "power", "now", ",", "the", "rich", "and", "DULL", "."]
(c3-0 / multi-sentence
      :snt1 (c3-12 / good-02)
      :snt2 (c3-2 / protect-01
                  :ARG1 (c3-4 / and
                              :op1 (c3-3 / person
                                         :ARG0-of (c3-10 / murder-01)
                                         :ARG1-of (c3-14 / wrong-02))
                              :op2 (c3-7 / person
                                         :ARG0-of c3-10
                                         :polarity -))
                  :op3 (c3-19 / child)
                  :op4 (c3-13 / person
                              :name (c3-9 / name
                                          :op1 "amp")))
      :location (c3-5 / here)
      :snt3 (c3-16 / and
                   :op1 (c3-6 / man
                              :ARG1-of (c3-1 / wrong-02)
                              :ARG1-of (c3-8 / powerful-02
                                             :time (c3-18 / now)))
                   :op2 (c3-17 / man
                               :mod (c3-11 / rich)
                               :mod (c3-15 / ULL))))

# ::snt No , my apologies.
# ::tokens ["No", ",", "my", "apologies", "."]
# ::lemmas ["no", ",", "my", "apology", "."]
(c4-2 / apologize-01
      :ARG0 (c4-1 / i)
      :mod (c4-0 / no))

# ::snt Of course, those bad eggs should never been in those jobs. Thuggies/thugs.
# ::tokens ["Of", "course", ",", "those", "bad", "eggs", "should", "never", "been", "in", "those", "jobs", ".", "Thuggies", "/", "thugs", "."]
# ::lemmas ["of", "course", ",", "those", "bad", "egg", "should", "never", "be", "in", "those", "job", ".", "thuggie", "/", "thug", "."]
(c5-1 / multi-sentence
      :snt1 (c5-8 / recommend-01
                  :ARG1 (c5-2 / be-located-at-91
                              :ARG1 (c5-5 / egg
                                          :ARG1-of (c5-9 / bad-07)
                                          :mod (c5-13 / that))
                              :ARG2 (c5-0 / job
                                          :mod (c5-11 / that))
                              :time (c5-3 / ever))
                  :mod (c5-4 / of-course)
                  :polarity -)
      :snt2 (c5-12 / slash
                   :op1 (c5-7 / person
                              :ARG0-of (c5-6 / smuggle-01))
                   :op2 (c5-14 / person
                               :ARG0-of (c5-10 / mug-01))))

# ::snt : JUST IN: Police Chief Thomas Jackson tells they will release the name of the police officer today
# ::tokens [":", "JUST", "IN", ":", "Police", "Chief", "Thomas", "Jackson", "tells", "they", "will", "release", "the", "name", "of", "the", "police", "officer", "today"]
# ::lemmas [":", "just", "in", ":", "Police", "Chief", "Thomas", "Jackson", "tell", "they", "will", "release", "the", "name", "of", "the", "police", "officer", "today"]
(c6-12 / tell-01
       :ARG0 (c6-7 / person
                   :name (c6-5 / name
                               :op1 "Thomas"
                               :op2 "Jackson")
                   :ARG0-of (c6-0 / have-org-role-91
                                  :ARG1 (c6-13 / police)
                                  :ARG2 (c6-9 / chief)))
       :ARG1 (c6-8 / release-01
                   :ARG0 c6-13
                   :ARG1 (c6-11 / thing
                                :ARG2-of (c6-6 / name-01
                                               :ARG1 (c6-2 / person
                                                           :ARG0-of (c6-14 / have-org-role-91
                                                                           :ARG1 c6-13
                                                                           :ARG2 (c6-3 / officer)))))
                   :time (c6-10 / today))
       :location (c6-4 / inside
                       :mod (c6-1 / just)))

# ::snt : JUST IN: Police Chief Thomas Jackson tells they will release the name of the police officer today
# ::tokens [":", "JUST", "IN", ":", "Police", "Chief", "Thomas", "Jackson", "tells", "they", "will", "release", "the", "name", "of", "the", "police", "officer", "today"]
# ::lemmas [":", "just", "in", ":", "Police", "Chief", "Thomas", "Jackson", "tell", "they", "will", "release", "the", "name", "of", "the", "police", "officer", "today"]
(c7-12 / tell-01
       :ARG0 (c7-7 / person
                   :name (c7-5 / name
                               :op1 "Thomas"
                               :op2 "Jackson")
                   :ARG0-of (c7-0 / have-org-role-91
                                  :ARG1 (c7-13 / police)
                                  :ARG2 (c7-9 / chief)))
       :ARG1 (c7-8 / release-01
                   :ARG0 c7-13
                   :ARG1 (c7-11 / thing
                                :ARG2-of (c7-6 / name-01
                                               :ARG1 (c7-2 / person
                                                           :ARG0-of (c7-14 / have-org-role-91
                                                                           :ARG1 c7-13
                                                                           :ARG2 (c7-3 / officer)))))
                   :time (c7-10 / today))
       :location (c7-4 / inside
                       :mod (c7-1 / just)))

# ::snt also, the people of Ferguson are not flies, but real people,who were victimized. again and again.
# ::tokens ["also", ",", "the", "people", "of", "Ferguson", "are", "not", "flies", ",", "but", "real", "people", ",", "who", "were", "victimized", ".", "again", "and", "again", "."]
# ::lemmas ["also", ",", "the", "people", "of", "Ferguson", "be", "not", "fly", ",", "but", "real", "people", ",", "who", "be", "victimize", ".", "again", "and", "again", "."]
(c8-5 / contrast-01
      :ARG1 (c8-0 / fly-01
                  :ARG1 (c8-3 / person
                              :location (c8-4 / city
                                              :name (c8-1 / name
                                                          :op1 "Ferguson")))
                  :polarity -)
      :ARG2 (c8-8 / person
                  :ARG1-of (c8-6 / real-04)
                  :ARG1-of (c8-2 / victimize-01
                                 :frequency (c8-7 / time-and-again)))
      :mod (c8-9 / also))

# ::snt ": JUST IN: Police Chief Thomas Jackson tells they will release the name of the police officer today
# ::tokens ["\"", ":", "JUST", "IN", ":", "Police", "Chief", "Thomas", "Jackson", "tells", "they", "will", "release", "the", "name", "of", "the", "police", "officer", "today"]
# ::lemmas ["\"", ":", "just", "in", ":", "Police", "Chief", "Thomas", "Jackson", "tell", "they", "will", "release", "the", "name", "of", "the", "police", "officer", "today"]
(c9-12 / tell-01
       :ARG0 (c9-7 / person
                   :name (c9-5 / name
                               :op1 "Thomas"
                               :op2 "Jackson")
                   :ARG0-of (c9-0 / have-org-role-91
                                  :ARG1 (c9-13 / police)
                                  :ARG2 (c9-9 / chief)))
       :ARG1 (c9-8 / release-01
                   :ARG0 c9-13
                   :ARG1 (c9-11 / thing
                                :ARG2-of (c9-6 / name-01
                                               :ARG1 (c9-2 / person
                                                           :ARG0-of (c9-14 / have-org-role-91
                                                                           :ARG1 c9-13
                                                                           :ARG2 (c9-3 / officer)))))
                   :time (c9-10 / today))
       :location (c9-4 / inside
                       :mod (c9-1 / just)))

# ::snt Every cop should b/charged w/ aprop. penalty attemp. murder, disturbing peace, if not cops, then ?who?
# ::tokens ["Every", "cop", "should", "b", "/", "charged", "w/", "aprop", ".", "penalty", "attemp", ".", "murder", ",", "disturbing", "peace", ",", "if", "not", "cops", ",", "then", "?", "who", "?"]
# ::lemmas ["every", "cop", "should", "b", "/", "charge", "w/", "aprop", ".", "penalty", "attemp", ".", "murder", ",", "disturb", "peace", ",", "if", "not", "cop", ",", "then", "?", "who", "?"]
(c10-6 / recommend-01
       :ARG1 (c10-7 / charge-05
                    :ARG1 (c10-5 / cop
                                 :mod (c10-2 / every))
                    :ARG2 (c10-11 / and
                                  :op1 (c10-0 / misdemeanor)
                                  :op2 (c10-4 / murder-01)
                                  :op3 (c10-8 / disturb-01
                                              :ARG1 (c10-9 / peace))
                                  :op4 (c10-1 / et-cetera)))
       :condition (c10-10 / cop
                          :domain (c10-3 / amr-unknown)
                          :polarity -))

# ::snt : JUST IN: Police Chief Thomas Jackson tells they will release the name of police officer day
# ::tokens [":", "JUST", "IN", ":", "Police", "Chief", "Thomas", "Jackson", "tells", "they", "will", "release", "the", "name", "of", "police", "officer", "day"]
# ::lemmas [":", "just", "in", ":", "Police", "Chief", "Thomas", "Jackson", "tell", "they", "will", "release", "the", "name", "of", "police", "officer", "day"]
(c11-13 / tell-01
        :ARG0 (c11-7 / person
                     :name (c11-5 / name
                                  :op1 "Thomas"
                                  :op2 "Jackson")
                     :ARG0-of (c11-0 / have-org-role-91
                                     :ARG1 (c11-14 / police)
                                     :ARG2 (c11-9 / chief)))
        :ARG1 (c11-8 / release-01
                     :ARG0 (c11-11 / they)
                     :ARG1 (c11-6 / thing
                                  :ARG2-of (c11-10 / name-01
                                                   :ARG1 (c11-2 / person
                                                                :ARG0-of (c11-15 / have-org-role-91
                                                                                 :ARG1 (c11-12 / police)
                                                                                 :ARG2 (c11-3 / officer))))))
        :time (c11-1 / just)
        :location (c11-4 / inside))

# ::snt Of course b/c it is PUBLIC record &amp; his excuse is null b/c Law Enforcement is a DANGEROUS job!
# ::tokens ["Of", "course", "b", "/", "c", "it", "is", "PUBLIC", "record", "&", "amp", ";", "his", "excuse", "is", "null", "b", "/", "c", "Law", "Enforcement", "is", "a", "DANGEROUS", "job", "!"]
# ::lemmas ["of", "course", "b", "/", "c", "it", "be", "PUBLIC", "record", "&", "amp", ";", "his", "excuse", "be", "null", "b", "/", "c", "Law", "Enforcement", "be", "a", "DANGEROUS", "job", "!"]
(c12-4 / multi-sentence
       :snt1 (c12-13 / cause-01
                     :ARG0 (c12-16 / and
                                   :op1 (c12-12 / record
                                                :ARG1-of (c12-11 / public-02))
                                   :op2 (c12-15 / product
                                                :name (c12-9 / name
                                                             :op1 "amp")))
                     :ARG1 (c12-8 / it)
                     :mod (c12-6 / of-course))
       :snt2 (c12-14 / cause-01
                     :ARG0 (c12-0 / job
                                  :ARG0-of (c12-7 / endanger-01)
                                  :domain (c12-5 / enforce-01
                                                 :ARG1 (c12-3 / law)))
                     :ARG1 (c12-10 / null-02
                                   :ARG1 (c12-1 / excuse-02
                                                :ARG0 (c12-2 / he)))))

# ::snt . RT JUST IN: Police Chief Thomas Jackson tells they will release the name of the police officer today
# ::tokens [".", "RT", "JUST", "IN", ":", "Police", "Chief", "Thomas", "Jackson", "tells", "they", "will", "release", "the", "name", "of", "the", "police", "officer", "today"]
# ::lemmas [".", "RT", "just", "in", ":", "Police", "Chief", "Thomas", "Jackson", "tell", "they", "will", "release", "the", "name", "of", "the", "police", "officer", "today"]
(c13-4 / and
       :op1 (c13-18 / tell-01
                    :ARG0 (c13-1 / person
                                 :name (c13-8 / name
                                              :op1 "Thomas"
                                              :op2 "Jackson")
                                 :ARG0-of (c13-5 / have-org-role-91
                                                 :ARG1 (c13-2 / police)
                                                 :ARG2 (c13-16 / chief)))
                    :ARG1 (c13-9 / release-01
                                 :ARG0 (c13-17 / they)
                                 :ARG1 (c13-12 / thing
                                               :ARG2-of (c13-15 / name-01
                                                                :ARG1 (c13-6 / person
                                                                             :ARG0-of (c13-3 / have-org-role-91
                                                                                             :ARG1 (c13-10 / police)
                                                                                             :ARG2 (c13-13 / officer)))))
                                 :time (c13-14 / today)))
       :op2 (c13-7 / be-located-at-91
                   :ARG2 (c13-11 / inside)
                   :mod (c13-0 / just)))

# ::snt Never happened, most were protesting, the "shots" were fired b/cops.
# ::tokens ["Never", "happened", ",", "most", "were", "protesting", ",", "the", "\"", "shots", "\"", "were", "fired", "b", "/", "cops", "."]
# ::lemmas ["never", "happen", ",", "most", "be", "protest", ",", "the", "\"", "shot", "\"", "be", "fire", "b", "/", "cop", "."]
(c14-8 / and
       :op1 (c14-3 / event
                   :time (c14-2 / ever)
                   :polarity -)
       :op2 (c14-4 / protest-01
                   :ARG0 (c14-7 / person
                                :mod (c14-1 / most)))
       :op3 (c14-0 / fire-01
                   :ARG1 (c14-6 / shoot-02)
                   :source (c14-5 / cop)))

# ::snt : JUST IN: Police Chief Thomas Jackson tells they will release the name of the police officer today
# ::tokens [":", "JUST", "IN", ":", "Police", "Chief", "Thomas", "Jackson", "tells", "they", "will", "release", "the", "name", "of", "the", "police", "officer", "today"]
# ::lemmas [":", "just", "in", ":", "Police", "Chief", "Thomas", "Jackson", "tell", "they", "will", "release", "the", "name", "of", "the", "police", "officer", "today"]
(c15-12 / tell-01
        :ARG0 (c15-7 / person
                     :name (c15-5 / name
                                  :op1 "Thomas"
                                  :op2 "Jackson")
                     :ARG0-of (c15-0 / have-org-role-91
                                     :ARG1 (c15-13 / police)
                                     :ARG2 (c15-9 / chief)))
        :ARG1 (c15-8 / release-01
                     :ARG0 c15-13
                     :ARG1 (c15-11 / thing
                                   :ARG2-of (c15-6 / name-01
                                                   :ARG1 (c15-2 / person
                                                                :ARG0-of (c15-14 / have-org-role-91
                                                                                 :ARG1 c15-13
                                                                                 :ARG2 (c15-3 / officer)))))
                     :time (c15-10 / today))
        :location (c15-4 / inside
                         :mod (c15-1 / just)))

# ::snt : JUST IN: Police Chief Thomas Jackson tells they will release the name of the police officer today
# ::tokens [":", "JUST", "IN", ":", "Police", "Chief", "Thomas", "Jackson", "tells", "they", "will", "release", "the", "name", "of", "the", "police", "officer", "today"]
# ::lemmas [":", "just", "in", ":", "Police", "Chief", "Thomas", "Jackson", "tell", "they", "will", "release", "the", "name", "of", "the", "police", "officer", "today"]
(c16-12 / tell-01
        :ARG0 (c16-7 / person
                     :name (c16-5 / name
                                  :op1 "Thomas"
                                  :op2 "Jackson")
                     :ARG0-of (c16-0 / have-org-role-91
                                     :ARG1 (c16-13 / police)
                                     :ARG2 (c16-9 / chief)))
        :ARG1 (c16-8 / release-01
                     :ARG0 c16-13
                     :ARG1 (c16-11 / thing
                                   :ARG2-of (c16-6 / name-01
                                                   :ARG1 (c16-2 / person
                                                                :ARG0-of (c16-14 / have-org-role-91
                                                                                 :ARG1 c16-13
                                                                                 :ARG2 (c16-3 / officer)))))
                     :time (c16-10 / today))
        :location (c16-4 / inside
                         :mod (c16-1 / just)))

# ::snt : JUST IN: Police Chief Thomas Jackson tells they will release the name of the police officer today
# ::tokens [":", "JUST", "IN", ":", "Police", "Chief", "Thomas", "Jackson", "tells", "they", "will", "release", "the", "name", "of", "the", "police", "officer", "today"]
# ::lemmas [":", "just", "in", ":", "Police", "Chief", "Thomas", "Jackson", "tell", "they", "will", "release", "the", "name", "of", "the", "police", "officer", "today"]
(c17-12 / tell-01
        :ARG0 (c17-7 / person
                     :name (c17-5 / name
                                  :op1 "Thomas"
                                  :op2 "Jackson")
                     :ARG0-of (c17-0 / have-org-role-91
                                     :ARG1 (c17-13 / police)
                                     :ARG2 (c17-9 / chief)))
        :ARG1 (c17-8 / release-01
                     :ARG0 c17-13
                     :ARG1 (c17-11 / thing
                                   :ARG2-of (c17-6 / name-01
                                                   :ARG1 (c17-2 / person
                                                                :ARG0-of (c17-14 / have-org-role-91
                                                                                 :ARG1 c17-13
                                                                                 :ARG2 (c17-3 / officer)))))
                     :time (c17-10 / today))
        :location (c17-4 / inside
                         :mod (c17-1 / just)))

# ::snt Nothing !! someone said; draw flies w/ honey, i don't see people as flies.
# ::tokens ["Nothing", "!", "!", "someone", "said", ";", "draw", "flies", "w/", "honey", ",", "i", "do", "n't", "see", "people", "as", "flies", "."]
# ::lemmas ["nothing", "!", "!", "someone", "say", ";", "draw", "fly", "w/", "honey", ",", "i", "do", "not", "see", "people", "as", "fly", "."]
(c18-2 / multi-sentence
       :snt1 (c18-6 / nothing
                    :mode expressive)
       :snt2 (c18-10 / say-01
                     :ARG0 (c18-4 / someone)
                     :ARG1 (c18-1 / see-01
                                  :ARG0 (c18-5 / i)
                                  :ARG1 (c18-7 / person)
                                  :ARG2 (c18-3 / fly)
                                  :ARG1-of (c18-9 / cause-01
                                                  :ARG0 (c18-8 / draw-02
                                                               :ARG1 (c18-0 / honey)))
                                  :polarity -)))

# ::snt Officer Johnson is beautiful! A great "model,of the .P.D. walking the beat, w/ His citizens. protecting &amp; serving.
# ::tokens ["Officer", "Johnson", "is", "beautiful", "!", "A", "great", "\"", "model", ",", "of", "the", ".P.D.", "walking", "the", "beat", ",", "w/", "His", "citizens", ".", "protecting", "&", "amp", ";", "serving", "."]
# ::lemmas ["Officer", "Johnson", "be", "beautiful", "!", "a", "great", "\"", "model", ",", "of", "the", ".P.D.", "walk", "the", "beat", ",", "w/", "his", "citizen", ".", "protecting", "&", "amp", ";", "serve", "."]
(c19-0 / multi-sentence
       :snt1 (c19-10 / beautiful-02
                     :ARG1 (c19-2 / person
                                  :name (c19-11 / name
                                                :op1 "Johnson")
                                  :ARG0-of (c19-8 / have-org-role-91
                                                  :ARG2 (c19-19 / officer))))
       :snt2 (c19-12 / model-01
                     :ARG1 (c19-5 / person
                                  :ARG0-of (c19-7 / have-org-role-91
                                                  :ARG2 (c19-18 / officer))
                                  :ARG0-of (c19-1 / have-org-role-91
                                                  :ARG1 (c19-13 / government-organization
                                                                :name c19-11
                                                                :op1 "United"
                                                                :op2 "States"
                                                                :op3 "of"
                                                                :op4 "America")))
                     :ARG0-of (c19-15 / walk-01
                                      :ARG2 (c19-16 / beat))
                     :ARG0-of (c19-17 / have-org-role-91
                                      :ARG2 (c19-20 / citizen
                                                    :poss c19-5))
                     :ARG0-of (c19-9 / protect-01
                                     :ARG1 (c19-6 / and
                                                  :op1 c19-5
                                                  :op2 (c19-14 / person
                                                               :name c19-11
                                                               :op1 "amp"))))
       :ARG0-of (c19-4 / serve-01)
       :mod (c19-3 / great))

# ::snt whats your point? More bad eggs in power?
# ::tokens ["what", "s", "your", "point", "?", "More", "bad", "eggs", "in", "power", "?"]
# ::lemmas ["what", "s", "your", "point", "?", "more", "bad", "egg", "in", "power", "?"]
(c20-1 / multi-sentence
       :snt1 (c20-6 / point-04
                    :ARG0 (c20-0 / you)
                    :ARG2 (c20-9 / amr-unknown))
       :snt2 (c20-8 / point-04
                    :ARG1 (c20-4 / egg
                                 :ARG1-of (c20-3 / bad-07)
                                 :location (c20-2 / power)
                                 :quant (c20-7 / more))
                    :polarity (c20-5 / amr-unknown)))
