# ::snt is that gunmen not a muslim
# ::tokens ["is", "that", "gunmen", "not", "a", "muslim"]
# ::lemmas ["be", "that", "gunman", "not", "a", "muslim"]
(c1-1 / religious-group
      :name (c1-0 / name
                  :op1 "Muslim")
      :domain (c1-3 / gunman
                    :mod (c1-2 / that))
      :polarity -)

# ::snt Shoot the bastard then !
# ::tokens ["Shoot", "the", "bastard", "then", "!"]
# ::lemmas ["shoot", "the", "bastard", "then", "!"]
(c2-0 / shoot-02
      :ARG0 (c2-1 / you)
      :ARG1 (c2-3 / bastard)
      :time (c2-2 / then)
      :mode imperative)

# ::snt Russia is a big problem, putins tyranny and dictatorship has gone in for far too long
# ::tokens ["Russia", "is", "a", "big", "problem", ",", "putins", "tyranny", "and", "dictatorship", "has", "gone", "in", "for", "far", "too", "long"]
# ::lemmas ["Russia", "be", "a", "big", "problem", ",", "putin", "tyranny", "and", "dictatorship", "have", "go", "in", "for", "far", "too", "long"]
(c3-15 / and
       :op1 (c3-8 / problem
                  :domain (c3-10 / country
                                 :name (c3-6 / name
                                             :op1 "Russia"))
                  :mod (c3-3 / big))
       :op2 (c3-11 / go-01
                   :ARG1 (c3-4 / and
                               :op1 (c3-13 / tyranny
                                           :mod (c3-14 / political-party
                                                       :name (c3-7 / name
                                                                   :op1 "Putins")))
                               :op2 (c3-9 / dictatorship))
                   :ARG4 (c3-5 / in)
                   :ARG1-of (c3-1 / long-03
                                  :ARG2-of (c3-0 / have-degree-91
                                                 :ARG1 c3-11
                                                 :ARG3 (c3-12 / too
                                                              :mod (c3-2 / far))))))

# ::snt that's the same country that banned it's people from watching any of the world's revolutions
# ::tokens ["that", "'s", "the", "same", "country", "that", "banned", "it", "'s", "people", "from", "watching", "any", "of", "the", "world", "'s", "revolutions"]
# ::lemmas ["that", "be", "the", "same", "country", "that", "ban", "it", "be", "people", "from", "watch", "any", "of", "the", "world", "'s", "revolution"]
(c4-6 / same-01
      :ARG1 (c4-7 / that)
      :ARG2 (c4-5 / country
                  :ARG0-of (c4-1 / ban-01
                                 :ARG1 (c4-0 / watch-01
                                             :ARG0 (c4-3 / person
                                                         :poss c4-5)
                                             :ARG1 (c4-4 / revolution-03
                                                         :ARG0 (c4-2 / world)
                                                         :mod (c4-8 / any)))
                                 :ARG2 c4-3)))

# ::snt arscott golf club
# ::tokens ["arscott", "golf", "club"]
# ::lemmas ["arscott", "golf", "club"]
(c5-1 / cott-00
      :ARG1 (c5-0 / club
                  :mod (c5-2 / golf)))

# ::snt and the MOD still plough millions into isreal for drone technology knowing how they've been tested on civilians
# ::tokens ["and", "the", "MOD", "still", "plough", "millions", "into", "isreal", "for", "drone", "technology", "knowing", "how", "they", "'ve", "been", "tested", "on", "civilians"]
# ::lemmas ["and", "the", "MOD", "still", "plough", "millions", "into", "isreal", "for", "drone", "technology", "know", "how", "they", "'ve", "be", "test", "on", "civilian"]
(c6-15 / and
       :op2 (c6-5 / plough-01
                  :ARG0 (c6-8 / government-organization
                              :name (c6-3 / name
                                          :op1 " MOD"))
                  :ARG1 (c6-1 / multiple
                              :op1 (c6-6 / monetary-quantity
                                         :unit (c6-7 / dollar)
                                         :quant 1000000))
                  :ARG2 (c6-9 / country
                              :name (c6-4 / name
                                          :op1 "Israel"))
                  :mod (c6-11 / still)
                  :purpose (c6-14 / technology
                                  :mod (c6-0 / drone))
                  :manner (c6-2 / know-01
                                :ARG0 c6-8
                                :ARG1 (c6-10 / thing
                                             :manner-of (c6-12 / test-01
                                                               :ARG1 c6-14
                                                               :prep-on (c6-13 / civilian))))))

# ::snt whatever happened to fair trials?
# ::tokens ["whatever", "happened", "to", "fair", "trials", "?"]
# ::lemmas ["whatever", "happen", "to", "fair", "trial", "?"]
(c7-0 / event
      :polarity (c7-3 / amr-unknown)
      :mod (c7-2 / try-02
                 :ARG1-of (c7-1 / fair-01)))

# ::snt isn't that "barbaric" ?
# ::tokens ["is", "n't", "that", "\"", "barbaric", "\"", "?"]
# ::lemmas ["be", "not", "that", "\"", "barbaric", "\"", "?"]
(c8-2 / barbaric
      :domain (c8-1 / that)
      :ARG1-of (c8-0 / request-confirmation-91)
      :polarity -)

# ::snt sanctions will only make matters worse plus China refusing entry to our diplomats is not too good either
# ::tokens ["sanctions", "will", "only", "make", "matters", "worse", "plus", "China", "refusing", "entry", "to", "our", "diplomats", "is", "not", "too", "good", "either"]
# ::lemmas ["sanction", "will", "only", "make", "matter", "bad", "plus", "China", "refuse", "entry", "to", "our", "diplomat", "be", "not", "too", "good", "either"]
(c9-16 / and
       :op1 (c9-1 / worsen-01
                  :ARG0 (c9-14 / sanction-02)
                  :ARG1 (c9-3 / matter)
                  :mod (c9-5 / only))
       :op2 (c9-12 / good-02
                   :ARG1 (c9-10 / refuse-01
                                :ARG0 (c9-11 / country
                                             :name (c9-8 / name
                                                         :op1 "China"))
                                :ARG1 (c9-6 / enter-01
                                            :ARG0 c9-11
                                            :ARG1 (c9-9 / person
                                                        :ARG0-of (c9-0 / have-org-role-91
                                                                       :ARG1 (c9-7 / we)
                                                                       :ARG2 (c9-13 / diplomat)))))
                   :mod (c9-4 / either)
                   :ARG2-of (c9-2 / have-degree-91
                                  :ARG1 c9-10
                                  :ARG3 (c9-15 / too))
                   :polarity -))

# ::snt bombs won't fix anything, only innocent people will suffer
# ::tokens ["bombs", "wo", "n't", "fix", "anything", ",", "only", "innocent", "people", "will", "suffer"]
# ::lemmas ["bomb", "will", "not", "fix", "anything", ",", "only", "innocent", "people", "will", "suffer"]
(c10-5 / contrast-01
       :ARG1 (c10-0 / fix-02
                    :ARG0 (c10-1 / bomb)
                    :ARG1 (c10-7 / anything)
                    :polarity -)
       :ARG2 (c10-6 / suffer-01
                    :ARG0 (c10-4 / person
                                 :ARG1-of (c10-3 / innocent-01)
                                 :mod (c10-2 / only))))

# ::snt manufactured terrorism?
# ::tokens ["manufactured", "terrorism", "?"]
# ::lemmas ["manufacture", "terrorism", "?"]
(c11-1 / terrorism
       :polarity (c11-2 / amr-unknown)
       :ARG1-of (c11-0 / manufacture-01))

# ::snt straight through the head wit a .50 cal and he wont have a chance to push the button. Stand up to these scum bags
# ::tokens ["straight", "through", "the", "head", "wit", "a", ".50", "cal", "and", "he", "wo", "nt", "have", "a", "chance", "to", "push", "the", "button", ".", "Stand", "up", "to", "these", "scum", "bags"]
# ::lemmas ["straight", "through", "the", "head", "wit", "a", ".50", "cal", "and", "he", "will", "not", "have", "a", "chance", "to", "push", "the", "button", ".", "stand", "up", "to", "these", "scum", "bag"]
(c12-3 / multi-sentence
       :snt1 (c12-0 / have-condition-91
                    :ARG1 (c12-9 / chance-02
                                 :ARG0 (c12-15 / he)
                                 :ARG1 (c12-7 / push-01
                                              :ARG0 c12-15
                                              :ARG1 (c12-4 / button))
                                 :polarity -)
                    :ARG2 (c12-13 / straight-04
                                  :ARG1 (c12-6 / head)
                                  :ARG2 (c12-14 / through
                                                :op1 c12-6
                                                :quant (c12-8 / volume-quantity
                                                              :unit (c12-10 / cal)
                                                              :quant 0.50))))
       :snt2 (c12-5 / stand-up-07
                    :ARG1 (c12-1 / you)
                    :prep-to (c12-11 / bag
                                     :mod (c12-12 / this)
                                     :consist-of (c12-2 / scum))
                    :mode imperative))

# ::snt you think Britain will go to war with Russia?
# ::tokens ["you", "think", "Britain", "will", "go", "to", "war", "with", "Russia", "?"]
# ::lemmas ["you", "think", "Britain", "will", "go", "to", "war", "with", "Russia", "?"]
(c13-6 / think-01
       :ARG0 (c13-1 / you)
       :ARG1 (c13-0 / war-01
                    :ARG0 (c13-5 / country
                                 :name (c13-2 / name
                                              :op1 "Britain"))
                    :ARG1 (c13-4 / country
                                 :name (c13-3 / name
                                              :op1 "Russia")))
       :polarity (c13-7 / amr-unknown))

# ::snt Putin is the new hitler and I promise he will end all civilisation as we know it just a matter of time
# ::tokens ["Putin", "is", "the", "new", "hitler", "and", "I", "promise", "he", "will", "end", "all", "civilisation", "as", "we", "know", "it", "just", "a", "matter", "of", "time"]
# ::lemmas ["Putin", "be", "the", "new", "hitler", "and", "i", "promise", "he", "will", "end", "all", "civilisation", "as", "we", "know", "it", "just", "a", "matter", "of", "time"]
(c14-13 / and
        :op1 (c14-0 / hitler
                    :ARG1-of (c14-7 / new-01)
                    :domain (c14-9 / person
                                   :name (c14-8 / name
                                                :op1 "Putin")))
        :op2 (c14-12 / promise-01
                     :ARG0 (c14-6 / i)
                     :ARG2 (c14-4 / end-01
                                  :ARG0 c14-9
                                  :ARG1 (c14-10 / civilize-01
                                                :mod (c14-5 / all))
                                  :mod (c14-3 / matter
                                              :ARG1-of (c14-11 / know-01
                                                               :ARG0 (c14-1 / we)))
                                  :mod (c14-2 / just))))

# ::snt don't negotiate get him on camera and hack his fucking head off then send it to jockstrap john
# ::tokens ["do", "n't", "negotiate", "get", "him", "on", "camera", "and", "hack", "his", "fucking", "head", "off", "then", "send", "it", "to", "jockstrap", "john"]
# ::lemmas ["do", "not", "negotiate", "get", "he", "on", "camera", "and", "hack", "his", "fucking", "head", "off", "then", "send", "it", "to", "jockstrap", "john"]
(c15-14 / and
        :op1 (c15-6 / negotiate-01
                    :ARG0 (c15-1 / you)
                    :polarity -
                    :mode imperative)
        :op2 (c15-4 / and
                    :op1 (c15-11 / get-05
                                 :ARG0 c15-1
                                 :ARG1 (c15-0 / he
                                              :part (c15-2 / head
                                                           :mod (c15-3 / fucking
                                                                       :mode expressive)))
                                 :ARG2 (c15-10 / camera)
                                 :mode imperative)
                    :op2 (c15-7 / hack-off-04
                                :ARG0 c15-1
                                :ARG1 c15-2
                                :mode imperative)
                    :op3 (c15-12 / send-01
                                 :ARG0 c15-1
                                 :ARG1 (c15-5 / it)
                                 :ARG2 (c15-8 / person
                                              :name (c15-9 / name
                                                           :op1 "Jockstrap"
                                                           :op2 "John"))
                                 :time (c15-13 / then)
                                 :mode imperative)))

# ::snt china love watching the world burn that's why
# ::tokens ["china", "love", "watching", "the", "world", "burn", "that", "'s", "why"]
# ::lemmas ["china", "love", "watch", "the", "world", "burn", "that", "be", "why"]
(c16-1 / love-01
       :ARG0 (c16-5 / person
                    :name (c16-4 / name
                                 :op1 "china"))
       :ARG1 (c16-0 / watch-01
                    :ARG0 c16-5
                    :ARG1 (c16-2 / burn-01
                                 :ARG1 (c16-3 / world)))
       :ARG0-of (c16-6 / cause-01
                       :ARG1 c16-1))

# ::snt He may be a scum bag, but he may also have a dead man's button on a bomb vest. Let go of it, and its over for everyone.
# ::tokens ["He", "may", "be", "a", "scum", "bag", ",", "but", "he", "may", "also", "have", "a", "dead", "man", "'s", "button", "on", "a", "bomb", "vest", ".", "Let", "go", "of", "it", ",", "and", "its", "over", "for", "everyone", "."]
# ::lemmas ["he", "may", "be", "a", "scum", "bag", ",", "but", "he", "may", "also", "have", "a", "dead", "man", "'s", "button", "on", "a", "bomb", "vest", ".", "let", "go", "of", "it", ",", "and", "its", "over", "for", "everyone", "."]
(c17-0 / multi-sentence
       :snt1 (c17-19 / contrast-01
                     :ARG1 (c17-2 / possible-01
                                  :ARG1 (c17-10 / bag
                                                :consist-of (c17-4 / scum)
                                                :domain (c17-8 / he)))
                     :ARG2 (c17-5 / possible-01
                                  :ARG1 (c17-7 / have-03
                                               :ARG0 c17-8
                                               :ARG1 (c17-16 / button
                                                             :poss (c17-12 / man
                                                                           :ARG1-of (c17-3 / die-01))
                                                             :location (c17-1 / vest
                                                                              :mod (c17-20 / bomb)))
                                               :mod (c17-6 / also))))
       :snt2 (c17-14 / and
                     :op1 (c17-9 / let-01
                                 :ARG0 (c17-17 / you)
                                 :ARG1 (c17-13 / go-01
                                               :ARG1 (c17-15 / it))
                                 :mode imperative)
                     :op2 (c17-18 / over-01
                                  :ARG1 c17-15)
                     :beneficiary (c17-11 / everyone)))

# ::snt yep
# ::tokens ["yep"]
# ::lemmas ["yep"]
(c18-0 / yep
       :mode expressive)

# ::snt Arscott golf club
# ::tokens ["Arscott", "golf", "club"]
# ::lemmas ["Arscott", "golf", "club"]
(c19-1 / club
       :name (c19-0 / name
                    :op1 "Arscott")
       :mod (c19-2 / golf-01))

# ::snt hack his head off and send it to Allah
# ::tokens ["hack", "his", "head", "off", "and", "send", "it", "to", "Allah"]
# ::lemmas ["hack", "his", "head", "off", "and", "send", "it", "to", "Allah"]
(c20-7 / and
       :op1 (c20-0 / hack-off-04
                   :ARG0 (c20-1 / you)
                   :ARG1 (c20-8 / head
                                :part-of (c20-4 / he))
                   :mode imperative)
       :op2 (c20-6 / send-01
                   :ARG0 c20-1
                   :ARG1 (c20-2 / it)
                   :ARG2 (c20-5 / person
                                :name (c20-3 / name
                                             :op1 "Allah"))
                   :mode imperative))

# ::snt thank Russia because without there backing western governments would have got rid of Assad long before now
# ::tokens ["thank", "Russia", "because", "without", "there", "backing", "western", "governments", "would", "have", "got", "rid", "of", "Assad", "long", "before", "now"]
# ::lemmas ["thank", "Russia", "because", "without", "there", "back", "western", "government", "would", "have", "got", "rid", "of", "Assad", "long", "before", "now"]
(c21-15 / thank-01
        :ARG1 (c21-8 / country
                     :name (c21-4 / name
                                  :op1 "Russia"))
        :ARG1-of (c21-9 / cause-01
                        :ARG0 (c21-7 / rid-01
                                     :ARG0 (c21-10 / government-organization
                                                   :ARG0-of (c21-11 / govern-01
                                                                    :ARG1 (c21-0 / world-region
                                                                                 :name (c21-5 / name
                                                                                              :op1 "West"))))
                                     :ARG1 (c21-6 / person
                                                  :name (c21-12 / name
                                                                :op1 "Assad"))
                                     :condition (c21-3 / back-01
                                                       :ARG0 (c21-13 / government-organization
                                                                     :ARG0-of c21-11)
                                                       :polarity -))
                        :time (c21-14 / before
                                      :op1 (c21-2 / now)
                                      :quant (c21-1 / long))))

# ::snt so get of the snipers to put a bullet through the middle of his head and remove his agitation? Problem solved!
# ::tokens ["so", "get", "of", "the", "snipers", "to", "put", "a", "bullet", "through", "the", "middle", "of", "his", "head", "and", "remove", "his", "agitation", "?", "Problem", "solved", "!"]
# ::lemmas ["so", "get", "of", "the", "sniper", "to", "put", "a", "bullet", "through", "the", "middle", "of", "his", "head", "and", "remove", "his", "agitation", "?", "Problem", "solve", "!"]
(c22-2 / multi-sentence
       :snt1 (c22-8 / cause-01
                    :ARG1 (c22-9 / get-05
                                 :ARG1 (c22-11 / sniper)
                                 :ARG2 (c22-13 / and
                                               :op1 (c22-6 / put-01
                                                           :ARG0 c22-11
                                                           :ARG1 (c22-3 / bullet)
                                                           :ARG2 (c22-7 / middle
                                                                        :part-of (c22-0 / head
                                                                                        :part-of (c22-1 / he))))
                                               :op2 (c22-10 / remove-01
                                                            :ARG0 c22-11
                                                            :ARG1 (c22-5 / agitate-01
                                                                         :ARG1 c22-1)))))
       :snt2 (c22-4 / solve-01
                    :ARG1 (c22-12 / problem)))

# ::snt tyrants before but they need Assad as he is a ally of Israel. Simple.
# ::tokens ["tyrants", "before", "but", "they", "need", "Assad", "as", "he", "is", "a", "ally", "of", "Israel", ".", "Simple", "."]
# ::lemmas ["tyrant", "before", "but", "they", "need", "Assad", "as", "he", "be", "a", "ally", "of", "Israel", ".", "simple", "."]
(c23-0 / multi-sentence
       :snt1 (c23-6 / contrast-01
                    :ARG1 (c23-10 / tyrant
                                  :time (c23-1 / before))
                    :ARG2 (c23-2 / need-01
                                 :ARG0 (c23-8 / they)
                                 :ARG1 (c23-4 / person
                                              :name (c23-3 / name
                                                           :op1 "Assad"))
                                 :ARG1-of (c23-5 / cause-01
                                                 :ARG0 (c23-12 / ally-01
                                                               :ARG1 (c23-9 / country
                                                                            :name (c23-7 / name
                                                                                         :op1 "Israel"))
                                                               :ARG2 c23-4))))
       :snt2 (c23-11 / simple-02))

# ::snt and chemical attacks by bashar and his regime?
# ::tokens ["and", "chemical", "attacks", "by", "bashar", "and", "his", "regime", "?"]
# ::lemmas ["and", "chemical", "attack", "by", "bashar", "and", "his", "regime", "?"]
(c25-6 / attack-01
       :ARG0 (c25-0 / and
                    :op1 (c25-3 / person
                                :name (c25-1 / name
                                             :op1 "Bashar"))
                    :op2 (c25-4 / regime
                                :poss c25-3))
       :polarity (c25-2 / amr-unknown)
       :manner (c25-5 / chemical))

# ::snt dropping bombs? Where was the bombs when syria has begged the world for help from constant barrel bombs oppression
# ::tokens ["dropping", "bombs", "?", "Where", "was", "the", "bombs", "when", "syria", "has", "begged", "the", "world", "for", "help", "from", "constant", "barrel", "bombs", "oppression"]
# ::lemmas ["drop", "bomb", "?", "where", "be", "the", "bomb", "when", "syria", "have", "beg", "the", "world", "for", "help", "from", "constant", "barrel", "bomb", "oppression"]
(c26-2 / multi-sentence
       :snt1 (c26-8 / drop-01
                    :ARG1 (c26-3 / bomb)
                    :polarity (c26-14 / amr-unknown))
       :snt2 (c26-9 / be-located-at-91
                    :ARG1 (c26-13 / bomb)
                    :ARG2 (c26-5 / amr-unknown)
                    :time (c26-15 / beg-01
                                  :ARG0 (c26-10 / country
                                                :name (c26-7 / name
                                                             :op1 "Syria"))
                                  :ARG1 (c26-1 / world)
                                  :ARG2 (c26-0 / help-01
                                               :ARG0 (c26-4 / oppress-01
                                                            :ARG0 c26-10
                                                            :ARG1 (c26-11 / bomb
                                                                          :mod (c26-6 / barrel))
                                                            :mod (c26-12 / constant))
                                               :ARG1 c26-1))))

# ::snt did alan Henings family get a far trail
# ::tokens ["did", "alan", "Henings", "family", "get", "a", "far", "trail"]
# ::lemmas ["do", "alan", "Henings", "family", "get", "a", "far", "trail"]
(c27-3 / get-05
       :ARG1 (c27-0 / family
                    :name (c27-2 / name
                                 :op1 "Alan"
                                 :op2 "Henings"))
       :ARG2 (c27-4 / trail
                    :mod (c27-1 / far))
       :polarity (c27-5 / amr-unknown))

# ::snt no they didn't but anyone who goes syria knows what to expect, it is not safe to go there at all, people should stay away
# ::tokens ["no", "they", "did", "n't", "but", "anyone", "who", "goes", "syria", "knows", "what", "to", "expect", ",", "it", "is", "not", "safe", "to", "go", "there", "at", "all", ",", "people", "should", "stay", "away"]
# ::lemmas ["no", "they", "do", "not", "but", "anyone", "who", "go", "syria", "know", "what", "to", "expect", ",", "it", "be", "not", "safe", "to", "go", "there", "at", "all", ",", "people", "should", "stay", "away"]
(c28-9 / contrast-01
       :ARG1 (c28-8 / do-02
                    :ARG0 (c28-16 / they)
                    :polarity -)
       :ARG2 (c28-4 / know-01
                    :ARG0 (c28-17 / anyone
                                  :ARG0-of (c28-10 / go-02
                                                   :ARG4 (c28-11 / country
                                                                 :name (c28-5 / name
                                                                              :op1 "Syria"))))
                    :ARG1 (c28-12 / thing
                                  :ARG1-of (c28-1 / expect-01)))
       :ARG3 (c28-3 / and
                    :op1 (c28-13 / safe-01
                                 :ARG0 (c28-14 / go-02
                                               :ARG4 c28-11
                                               :mod (c28-6 / at-all))
                                 :polarity -)
                    :op2 (c28-15 / recommend-01
                                 :ARG1 (c28-2 / stay-01
                                              :ARG1 (c28-7 / person)
                                              :ARG3 (c28-0 / away)))))

# ::snt yes Russia is testing the water at the minute regarding switching there beacons off to other air traffic
# ::tokens ["yes", "Russia", "is", "testing", "the", "water", "at", "the", "minute", "regarding", "switching", "there", "beacons", "off", "to", "other", "air", "traffic"]
# ::lemmas ["yes", "Russia", "be", "test", "the", "water", "at", "the", "minute", "regard", "switch", "there", "beacon", "off", "to", "other", "air", "traffic"]
(c29-9 / test-01
       :ARG0 (c29-6 / country
                    :name (c29-5 / name
                                 :op1 "Russia"))
       :ARG1 (c29-0 / water)
       :time (c29-2 / minute)
       :topic (c29-8 / switch-01
                     :ARG1 (c29-3 / beacon)
                     :ARG2 (c29-7 / traffic
                                  :mod (c29-10 / air)
                                  :mod (c29-4 / other))
                     :direction (c29-1 / off)))

# ::snt and let authorities deal with it in a suitable and appropriate manner
# ::tokens ["and", "let", "authorities", "deal", "with", "it", "in", "a", "suitable", "and", "appropriate", "manner"]
# ::lemmas ["and", "let", "authority", "deal", "with", "it", "in", "a", "suitable", "and", "appropriate", "manner"]
(c30-7 / and
       :op2 (c30-0 / let-01
                   :ARG1 (c30-5 / deal-01
                                :ARG0 (c30-2 / authority)
                                :ARG2 (c30-3 / it)
                                :manner (c30-1 / manner
                                               :ARG1-of (c30-6 / suitable-04)
                                               :ARG1-of (c30-4 / appropriate-02)))))

# ::snt "Police are requesting that the media does NOT report the demands of the suspect(s)" TIL SKY newsmedia!
# ::tokens ["\"", "Police", "are", "requesting", "that", "the", "media", "does", "NOT", "report", "the", "demands", "of", "the", "suspect(s", ")", "\"", "TIL", "SKY", "newsmedia", "!"]
# ::lemmas ["\"", "police", "be", "request", "that", "the", "medium", "do", "not", "report", "the", "demand", "of", "the", "suspect(s", ")", "\"", "TIL", "sky", "newsmedia", "!"]
(c31-6 / request-01
       :ARG0 (c31-4 / police)
       :ARG1 (c31-1 / report-01
                    :ARG0 (c31-0 / media)
                    :ARG1 (c31-5 / demand-01
                                 :ARG0 (c31-8 / person
                                              :ARG2-of (c31-7 / suspect-01)))
                    :polarity -)
       :ARG2 (c31-2 / newsmedia
                    :name (c31-3 / name
                                 :op1 "TIL"
                                 :op2 "SKY")))

# ::snt Shoot him through the head
# ::tokens ["Shoot", "him", "through", "the", "head"]
# ::lemmas ["shoot", "he", "through", "the", "head"]
(c32-0 / shoot-02
       :ARG0 (c32-1 / you)
       :ARG1 (c32-2 / he
                    :part (c32-3 / head
                                 :path-of c32-0))
       :mode imperative)

# ::snt true but why should any government foot the bill to keep these in prison(keep the bombs dropping will solvthat)
# ::tokens ["true", "but", "why", "should", "any", "government", "foot", "the", "bill", "to", "keep", "these", "in", "prison(keep", "the", "bombs", "dropping", "will", "solvthat", ")"]
# ::lemmas ["true", "but", "why", "should", "any", "government", "foot", "the", "bill", "to", "keep", "these", "in", "prison(keep", "the", "bomb", "drop", "will", "solvthat", ")"]
(c33-8 / contrast-01
       :ARG1 (c33-15 / true-01)
       :ARG2 (c33-7 / recommend-01
                    :ARG1 (c33-0 / foot-01
                                 :ARG0 (c33-9 / government-organization
                                              :ARG0-of (c33-10 / govern-01)
                                              :mod (c33-17 / any))
                                 :ARG1 (c33-2 / bill)
                                 :purpose (c33-5 / keep-04
                                                 :ARG0 c33-9
                                                 :ARG1 (c33-11 / this)
                                                 :location (c33-6 / prison))
                                 :ARG1-of (c33-1 / mean-01
                                                 :ARG2 (c33-3 / keep-04
                                                              :ARG0 c33-9
                                                              :ARG1 (c33-12 / drop-01
                                                                            :ARG1 (c33-13 / bomb))
                                                              :ARG1-of (c33-16 / solve-01
                                                                               :ARG2 c33-5))))
                    :ARG1-of (c33-14 / cause-01
                                     :ARG0 (c33-4 / amr-unknown))))

# ::snt sad times really can't wait till aliens arrive
# ::tokens ["sad", "times", "really", "ca", "n't", "wait", "till", "aliens", "arrive"]
# ::lemmas ["sad", "time", "really", "can", "not", "wait", "till", "alien", "arrive"]
(c34-3 / possible-01
       :ARG1 (c34-0 / wait-01
                    :ARG1 (c34-6 / time
                                 :ARG1-of (c34-5 / sad-02))
                    :time (c34-1 / until
                                 :op1 (c34-8 / arrive-01
                                             :ARG1 (c34-7 / person
                                                          :ARG1-of (c34-2 / alien-01)))))
       :ARG1-of (c34-4 / real-04)
       :polarity -)

# ::snt i know but they could have ignored it but instead they all bottled it and gone and toppled him, same way they toppled
# ::tokens ["i", "know", "but", "they", "could", "have", "ignored", "it", "but", "instead", "they", "all", "bottled", "it", "and", "gone", "and", "toppled", "him", ",", "same", "way", "they", "toppled"]
# ::lemmas ["i", "know", "but", "they", "could", "have", "ignore", "it", "but", "instead", "you", "all", "bottle", "it", "and", "go", "and", "topple", "he", ",", "same", "way", "they", "topple"]
(c35-10 / contrast-01
        :ARG1 (c35-15 / know-01
                      :ARG0 (c35-6 / i))
        :ARG2 (c35-9 / contrast-01
                     :ARG1 (c35-8 / possible-01
                                  :ARG1 (c35-11 / ignore-01
                                                :ARG0 (c35-14 / they
                                                              :mod (c35-17 / all))
                                                :ARG1 (c35-2 / it)))
                     :ARG2 (c35-5 / and
                                  :op1 (c35-3 / bottle-01
                                              :ARG0 c35-14
                                              :ARG1 c35-2)
                                  :op2 (c35-12 / go-02
                                               :ARG0 c35-14)
                                  :op3 (c35-13 / topple-01
                                               :ARG0 c35-14
                                               :ARG1 (c35-0 / he))
                                  :ARG1-of (c35-16 / same-01
                                                   :ARG2 (c35-1 / way
                                                                :manner-of (c35-7 / topple-01
                                                                                  :ARG0 c35-14)))
                                  :ARG1-of (c35-4 / instead-of-91))))

# ::snt if there's no staff left I guess he won't know how to operate the machine. No coffee = sleepy terrorist
# ::tokens ["if", "there", "'s", "no", "staff", "left", "I", "guess", "he", "wo", "n't", "know", "how", "to", "operate", "the", "machine", ".", "No", "coffee", "=", "sleepy", "terrorist"]
# ::lemmas ["if", "there", "be", "no", "staff", "leave", "i", "guess", "he", "will", "not", "know", "how", "to", "operate", "the", "machine", ".", "no", "coffee", "=", "sleepy", "terrorist"]
(c36-2 / multi-sentence
       :snt1 (c36-9 / guess-01
                    :ARG0 (c36-6 / i)
                    :ARG1 (c36-12 / know-03
                                  :ARG0 (c36-0 / he)
                                  :ARG1 (c36-3 / operate-01
                                               :ARG0 c36-0
                                               :ARG1 (c36-7 / machine))
                                  :condition (c36-10 / staff
                                                     :ARG1-of (c36-1 / leave-17)
                                                     :polarity -)
                                  :polarity -))
       :snt2 (c36-4 / equal-01
                    :ARG1 (c36-8 / coffee
                                 :polarity -)
                    :ARG2 (c36-11 / terrorist
                                  :ARG0-of (c36-5 / sleepy-06))))

# ::snt unbelievable isn't it
# ::tokens ["unbelievable", "is", "n't", "it"]
# ::lemmas ["unbelievable", "be", "not", "it"]
(c37-0 / possible-01
       :ARG1 (c37-2 / believe-01)
       :ARG1-of (c37-1 / request-confirmation-91)
       :polarity -)

# ::snt we as humans need to evaluate how we are letting other humans suffer at the hands of tyrants
# ::tokens ["we", "as", "humans", "need", "to", "evaluate", "how", "we", "are", "letting", "other", "humans", "suffer", "at", "the", "hands", "of", "tyrants"]
# ::lemmas ["we", "as", "human", "need", "to", "evaluate", "how", "we", "be", "let", "other", "human", "suffer", "at", "the", "hand", "of", "tyrant"]
(c38-5 / need-01
       :ARG0 (c38-1 / we
                    :mod (c38-0 / human))
       :ARG1 (c38-4 / evaluate-01
                    :ARG0 c38-1
                    :ARG1 (c38-9 / thing
                                 :manner-of (c38-2 / let-01
                                                   :ARG0 c38-1
                                                   :ARG1 (c38-8 / suffer-01
                                                                :ARG0 c38-0
                                                                :mod (c38-3 / other))
                                                   :ARG1-of (c38-6 / cause-01
                                                                   :ARG0 (c38-10 / hand
                                                                                 :part-of (c38-7 / tyrant)))))))

# ::snt Government should have never gotten rid of the nut houses.
# ::tokens ["Government", "should", "have", "never", "gotten", "rid", "of", "the", "nut", "houses", "."]
# ::lemmas ["government", "should", "have", "never", "get", "rid", "of", "the", "nut", "house", "."]
(c39-4 / recommend-01
       :ARG1 (c39-2 / rid-01
                    :ARG0 (c39-6 / government-organization
                                 :ARG0-of (c39-5 / govern-01))
                    :ARG1 (c39-0 / house
                                 :mod (c39-3 / nut))
                    :time (c39-1 / ever)
                    :polarity -))

# ::snt as if it was an explosive belt automatic tripping all its hostages dead
# ::tokens ["as", "if", "it", "was", "an", "explosive", "belt", "automatic", "tripping", "all", "its", "hostages", "dead"]
# ::lemmas ["as", "if", "it", "be", "an", "explosive", "belt", "automatic", "trip", "all", "its", "hostage", "dead"]
(c40-7 / resemble-01
       :ARG2 (c40-1 / belt
                    :ARG1-of (c40-2 / explode-01
                                    :ARG1-of (c40-6 / possible-01))
                    :domain (c40-4 / it)
                    :ARG0-of (c40-8 / trap-01
                                    :ARG1 (c40-0 / hostage
                                                 :mod (c40-9 / all)
                                                 :poss c40-1)
                                    :mod (c40-3 / automatic))
                    :ARG0-of (c40-5 / kill-01)))
