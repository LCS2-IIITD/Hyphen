# ::snt Several hostages freed at Jewish supermarket in Paris including a child (R). Photo Thomas Samson | via
# ::tokens ["Several", "hostages", "freed", "at", "Jewish", "supermarket", "in", "Paris", "including", "a", "child", "(", "R", ")", ".", "Photo", "Thomas", "Samson", "|", "via"]
# ::lemmas ["several", "hostage", "free", "at", "Jewish", "supermarket", "in", "Paris", "include", "a", "child", "(", "r", ")", ".", "Photo", "Thomas", "Samson", "|", "via"]
(c1-2 / multi-sentence
      :snt1 (c1-1 / free-01
                  :ARG1 (c1-0 / hostage
                              :quant (c1-14 / several)
                              :ARG2-of (c1-5 / include-01
                                             :ARG1 (c1-10 / child
                                                          :ARG1-of (c1-8 / photograph-01
                                                                         :ARG0 (c1-15 / person
                                                                                      :name (c1-6 / name
                                                                                                  :op1 "Thomas"
                                                                                                  :op2 "Samson"))))))
                  :location (c1-4 / supermarket
                                  :mod (c1-9 / religious-group
                                             :name (c1-7 / name
                                                         :op1 "Jew"))
                                  :location (c1-11 / city
                                                   :name (c1-12 / name
                                                                :op1 "Paris"))))
      :snt2 (c1-3 / byline-91
                  :ARG0 c1-15
                  :name (c1-13 / name
                               :op1 "Thomas"
                               :op2 "Samson")))

# ::snt great coverage. Be safe.
# ::tokens ["great", "coverage", ".", "Be", "safe", "."]
# ::lemmas ["great", "coverage", ".", "be", "safe", "."]
(c2-1 / multi-sentence
      :snt1 (c2-2 / cover-03
                  :mod (c2-3 / great))
      :snt2 (c2-4 / safe-01
                  :ARG1 (c2-0 / you)
                  :mode imperative))

# ::snt let my people go!
# ::tokens ["let", "my", "people", "go", "!"]
# ::lemmas ["let", "my", "people", "go", "!"]
(c3-1 / let-01
      :ARG0 (c3-0 / you)
      :ARG1 (c3-4 / go-02
                  :ARG0 (c3-3 / person
                              :poss (c3-2 / i)))
      :mode imperative)

# ::snt un bimbo, tra gli ostaggi, portato in salvo
# ::tokens ["un", "bimbo", ",", "tra", "gli", "ostaggi", ",", "portato", "in", "salvo"]
# ::lemmas ["un", "bimbo", ",", "tra", "gli", "ostaggi", ",", "portato", "in", "salvo"]
(c4-2 / portato-00
      :ARG1 (c4-5 / and
                  :op1 (c4-0 / bimbo
                             :polarity -)
                  :op2 (c4-4 / tra
                             :op1 (c4-1 / ostaggi))
                  :op3 c4-2)
      :mod (c4-3 / salvo))

# ::snt : Several hostages freed at Jewish supermarket in Paris including a child (R). Photo Thomas Samson
# ::tokens [":", "Several", "hostages", "freed", "at", "Jewish", "supermarket", "in", "Paris", "including", "a", "child", "(", "R", ")", ".", "Photo", "Thomas", "Samson"]
# ::lemmas [":", "several", "hostage", "free", "at", "Jewish", "supermarket", "in", "Paris", "include", "a", "child", "(", "r", ")", ".", "Photo", "Thomas", "Samson"]
(c5-1 / free-01
      :ARG1 (c5-0 / hostage
                  :quant (c5-12 / several)
                  :ARG2-of (c5-3 / include-01
                                 :ARG1 (c5-8 / child)))
      :location (c5-2 / supermarket
                      :mod (c5-7 / religious-group
                                 :name (c5-4 / name
                                             :op1 "Jew"))
                      :location (c5-9 / city
                                      :name (c5-5 / name
                                                  :op1 "Paris")))
      :ARG1-of (c5-10 / describe-01
                      :ARG0 (c5-6 / publication-91
                                  :ARG0 (c5-13 / person
                                               :name (c5-11 / name
                                                            :op1 "Thomas"
                                                            :op2 "Samson")))))

# ::snt cc
# ::tokens ["cc"]
# ::lemmas ["cc"]
(c6-1 / person
      :name (c6-0 / name
                  :op1 "cc"))

# ::snt yeah, if it's in parentheses when referring to a figure in a photo, safe to assume that it indicates right or left.
# ::tokens ["yeah", ",", "if", "it", "'s", "in", "parentheses", "when", "referring", "to", "a", "figure", "in", "a", "photo", ",", "safe", "to", "assume", "that", "it", "indicates", "right", "or", "left", "."]
# ::lemmas ["yeah", ",", "if", "it", "be", "in", "parenthesis", "when", "refer", "to", "a", "figure", "in", "a", "photo", ",", "safe", "to", "assume", "that", "it", "indicate", "right", "or", "leave", "."]
(c7-10 / safe-01
       :ARG1 (c7-12 / assume-02
                    :ARG1 (c7-5 / indicate-01
                                :ARG0 (c7-9 / it)
                                :ARG1 (c7-4 / or
                                            :op1 (c7-8 / right-06)
                                            :op2 (c7-1 / left-19))))
       :condition (c7-3 / be-located-at-91
                        :ARG1 c7-9
                        :ARG2 (c7-7 / parentheses)
                        :time (c7-6 / refer-01
                                    :ARG1 (c7-2 / figure
                                                :part-of (c7-11 / photo))))
       :mod (c7-0 / yeah
                  :mode expressive))

# ::snt it usually means "to the right" of the photo.
# ::tokens ["it", "usually", "means", "\"", "to", "the", "right", "\"", "of", "the", "photo", "."]
# ::lemmas ["it", "usually", "mean", "\"", "to", "the", "right", "\"", "of", "the", "photo", "."]
(c8-0 / mean-01
      :ARG1 (c8-2 / it)
      :ARG2 (c8-4 / right-06
                  :ARG2 (c8-3 / photo))
      :mod (c8-1 / usual))

# ::snt : Several hostages freed at Jewish supermarket in Paris including a child (R). Photo Thomas Samson
# ::tokens [":", "Several", "hostages", "freed", "at", "Jewish", "supermarket", "in", "Paris", "including", "a", "child", "(", "R", ")", ".", "Photo", "Thomas", "Samson"]
# ::lemmas [":", "several", "hostage", "free", "at", "Jewish", "supermarket", "in", "Paris", "include", "a", "child", "(", "r", ")", ".", "Photo", "Thomas", "Samson"]
(c9-1 / free-01
      :ARG1 (c9-0 / hostage
                  :quant (c9-12 / several)
                  :ARG2-of (c9-3 / include-01
                                 :ARG1 (c9-8 / child)))
      :location (c9-2 / supermarket
                      :mod (c9-7 / religious-group
                                 :name (c9-4 / name
                                             :op1 "Jew"))
                      :location (c9-9 / city
                                      :name (c9-5 / name
                                                  :op1 "Paris")))
      :ARG1-of (c9-10 / describe-01
                      :ARG0 (c9-6 / publication-91
                                  :ARG0 (c9-13 / person
                                               :name (c9-11 / name
                                                            :op1 "Thomas"
                                                            :op2 "Samson")))))

# ::snt That blonde girl with that cellphone seriously doesn't give a damn
# ::tokens ["That", "blonde", "girl", "with", "that", "cellphone", "seriously", "does", "n't", "give", "a", "damn"]
# ::lemmas ["that", "blonde", "girl", "with", "that", "cellphone", "seriously", "do", "not", "give", "a", "damn"]
(c10-4 / give-16
       :ARG0 (c10-2 / girl
                    :mod (c10-1 / blonde)
                    :ARG0-of (c10-0 / have-03
                                    :ARG1 (c10-3 / cellphone
                                                 :mod (c10-7 / that))))
       :ARG1 (c10-5 / damn)
       :ARG2-of (c10-6 / serious-01)
       :polarity -)

# ::snt : Several hostages freed at Jewish supermarket in Paris including a child (R). Photo Thomas Samson
# ::tokens [":", "Several", "hostages", "freed", "at", "Jewish", "supermarket", "in", "Paris", "including", "a", "child", "(", "R", ")", ".", "Photo", "Thomas", "Samson"]
# ::lemmas [":", "several", "hostage", "free", "at", "Jewish", "supermarket", "in", "Paris", "include", "a", "child", "(", "r", ")", ".", "Photo", "Thomas", "Samson"]
(c12-1 / free-01
       :ARG1 (c12-0 / hostage
                    :quant (c12-12 / several)
                    :ARG2-of (c12-3 / include-01
                                    :ARG1 (c12-8 / child)))
       :location (c12-2 / supermarket
                        :mod (c12-7 / religious-group
                                    :name (c12-4 / name
                                                 :op1 "Jew"))
                        :location (c12-9 / city
                                         :name (c12-5 / name
                                                      :op1 "Paris")))
       :ARG1-of (c12-10 / describe-01
                        :ARG0 (c12-6 / publication-91
                                     :ARG0 (c12-13 / person
                                                   :name (c12-11 / name
                                                                 :op1 "Thomas"
                                                                 :op2 "Samson")))))

# ::snt : Several hostages freed at Jewish supermarket in Paris including a child (R). Photo Thomas Samson
# ::tokens [":", "Several", "hostages", "freed", "at", "Jewish", "supermarket", "in", "Paris", "including", "a", "child", "(", "R", ")", ".", "Photo", "Thomas", "Samson"]
# ::lemmas [":", "several", "hostage", "free", "at", "Jewish", "supermarket", "in", "Paris", "include", "a", "child", "(", "r", ")", ".", "Photo", "Thomas", "Samson"]
(c13-1 / free-01
       :ARG1 (c13-0 / hostage
                    :quant (c13-12 / several)
                    :ARG2-of (c13-3 / include-01
                                    :ARG1 (c13-8 / child)))
       :location (c13-2 / supermarket
                        :mod (c13-7 / religious-group
                                    :name (c13-4 / name
                                                 :op1 "Jew"))
                        :location (c13-9 / city
                                         :name (c13-5 / name
                                                      :op1 "Paris")))
       :ARG1-of (c13-10 / describe-01
                        :ARG0 (c13-6 / publication-91
                                     :ARG0 (c13-13 / person
                                                   :name (c13-11 / name
                                                                 :op1 "Thomas"
                                                                 :op2 "Samson")))))

# ::snt Ah thanks, I see it now! I didn't think of it as a ref to the photo, thought maybe it was going to be "reportedly" doh
# ::tokens ["Ah", "thanks", ",", "I", "see", "it", "now", "!", "I", "did", "n't", "think", "of", "it", "as", "a", "ref", "to", "the", "photo", ",", "thought", "maybe", "it", "was", "going", "to", "be", "\"", "reportedly", "\"", "doh"]
# ::lemmas ["ah", "thank", ",", "i", "see", "it", "now", "!", "i", "do", "not", "think", "of", "it", "as", "a", "ref", "to", "the", "photo", ",", "think", "maybe", "it", "be", "go", "to", "be", "\"", "reportedly", "\"", "doh"]
(c14-2 / multi-sentence
       :snt1 (c14-15 / thank-01
                     :ARG0 (c14-4 / i)
                     :ARG1 (c14-0 / you)
                     :ARG2 (c14-14 / see-01
                                   :ARG0 c14-4
                                   :ARG1 (c14-11 / it)
                                   :time (c14-6 / now)))
       :snt2 (c14-13 / think-01
                     :ARG0 (c14-1 / i)
                     :ARG1 (c14-3 / it)
                     :ARG2 (c14-9 / refit-01
                                  :ARG1 (c14-8 / photo))
                     :ARG1-of (c14-10 / cause-01
                                      :ARG0 (c14-7 / think-01
                                                   :ARG0 c14-1
                                                   :ARG1 (c14-16 / possible-01
                                                                 :ARG1 (c14-12 / doh
                                                                               :ARG1-of (c14-5 / report-01)
                                                                               :mode expressive))))
                     :polarity -))

# ::snt Several hostages freed at Jewish supermarket in Paris including a child (R). Photo Thomas Samson
# ::tokens ["Several", "hostages", "freed", "at", "Jewish", "supermarket", "in", "Paris", "including", "a", "child", "(", "R", ")", ".", "Photo", "Thomas", "Samson"]
# ::lemmas ["several", "hostage", "free", "at", "Jewish", "supermarket", "in", "Paris", "include", "a", "child", "(", "r", ")", ".", "Photo", "Thomas", "Samson"]
(c15-1 / free-01
       :ARG1 (c15-0 / hostage
                    :quant (c15-11 / several)
                    :ARG2-of (c15-3 / include-01
                                    :ARG1 (c15-8 / child
                                                 :ARG1-of (c15-6 / photograph-01
                                                                 :ARG0 (c15-12 / person
                                                                               :name (c15-4 / name
                                                                                            :op1 "Thomas"
                                                                                            :op2 "Samson"))))))
       :location (c15-2 / supermarket
                        :mod (c15-7 / religious-group
                                    :name (c15-5 / name
                                                 :op1 "Jew"))
                        :location (c15-9 / city
                                         :name (c15-10 / name
                                                       :op1 "Paris"))))

# ::snt : Several hostages freed at Jewish supermarket in Paris including a child (R). Photo Thomas Samson
# ::tokens [":", "Several", "hostages", "freed", "at", "Jewish", "supermarket", "in", "Paris", "including", "a", "child", "(", "R", ")", ".", "Photo", "Thomas", "Samson"]
# ::lemmas [":", "several", "hostage", "free", "at", "Jewish", "supermarket", "in", "Paris", "include", "a", "child", "(", "r", ")", ".", "Photo", "Thomas", "Samson"]
(c16-1 / free-01
       :ARG1 (c16-0 / hostage
                    :quant (c16-12 / several)
                    :ARG2-of (c16-3 / include-01
                                    :ARG1 (c16-8 / child)))
       :location (c16-2 / supermarket
                        :mod (c16-7 / religious-group
                                    :name (c16-4 / name
                                                 :op1 "Jew"))
                        :location (c16-9 / city
                                         :name (c16-5 / name
                                                      :op1 "Paris")))
       :ARG1-of (c16-10 / describe-01
                        :ARG0 (c16-6 / publication-91
                                     :ARG0 (c16-13 / person
                                                   :name (c16-11 / name
                                                                 :op1 "Thomas"
                                                                 :op2 "Samson")))))

# ::snt What's the R in brackets mean? Usually it means Republican...
# ::tokens ["What", "'s", "the", "R", "in", "brackets", "mean", "?", "Usually", "it", "means", "Republican", "..."]
# ::lemmas ["what", "be", "the", "r", "in", "bracket", "mean", "?", "usually", "it", "mean", "Republican", "..."]
(c17-1 / multi-sentence
       :snt1 (c17-6 / mean-01
                    :ARG1 (c17-8 / string-entity
                                 :value "R")
                    :ARG2 (c17-9 / amr-unknown)
                    :location (c17-3 / bracket))
       :snt2 (c17-0 / mean-01
                    :ARG1 (c17-4 / it)
                    :ARG2 (c17-7 / political-party
                                 :name (c17-5 / name
                                              :op1 "Republican"))
                    :frequency (c17-2 / usual)))

# ::snt : Several hostages freed at Jewish supermarket in Paris including a child (R). Photo Thomas Samson
# ::tokens [":", "Several", "hostages", "freed", "at", "Jewish", "supermarket", "in", "Paris", "including", "a", "child", "(", "R", ")", ".", "Photo", "Thomas", "Samson"]
# ::lemmas [":", "several", "hostage", "free", "at", "Jewish", "supermarket", "in", "Paris", "include", "a", "child", "(", "r", ")", ".", "Photo", "Thomas", "Samson"]
(c18-1 / free-01
       :ARG1 (c18-0 / hostage
                    :quant (c18-12 / several)
                    :ARG2-of (c18-3 / include-01
                                    :ARG1 (c18-8 / child)))
       :location (c18-2 / supermarket
                        :mod (c18-7 / religious-group
                                    :name (c18-4 / name
                                                 :op1 "Jew"))
                        :location (c18-9 / city
                                         :name (c18-5 / name
                                                      :op1 "Paris")))
       :ARG1-of (c18-10 / describe-01
                        :ARG0 (c18-6 / publication-91
                                     :ARG0 (c18-13 / person
                                                   :name (c18-11 / name
                                                                 :op1 "Thomas"
                                                                 :op2 "Samson")))))

# ::snt : rehenes saliendo del sper kosher: De Thomas Samson
# ::tokens [":", "rehenes", "saliendo", "del", "sper", "kosher", ":", "De", "Thomas", "Samson"]
# ::lemmas [":", "rehene", "saliendo", "del", "sper", "kosher", ":", "De", "Thomas", "Samson"]
(c19-5 / say-01
       :ARG0 (c19-3 / person
                    :name (c19-2 / name
                                 :op1 "De"
                                 :op2 "Thomas"
                                 :op3 "Samson"))
       :ARG1 (c19-4 / renew-01
                    :ARG1 (c19-1 / saliendo
                                 :mod (c19-6 / kosher
                                             :degree (c19-0 / sper)))))
