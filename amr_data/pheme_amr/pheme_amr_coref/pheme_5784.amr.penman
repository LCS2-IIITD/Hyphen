# ::snt they are out of hand ! They just killed another innocent man in California . When will it end
# ::tokens ["they", "are", "out", "of", "hand", "!", "They", "just", "killed", "another", "innocent", "man", "in", "California", ".", "When", "will", "it", "end"]
# ::lemmas ["they", "be", "out", "of", "hand", "!", "they", "just", "kill", "another", "innocent", "man", "in", "California", ".", "when", "will", "it", "end"]
(c1-1 / multi-sentence
      :snt1 (c1-2 / out-of-hand-10
                  :ARG1 (c1-12 / they))
      :snt2 (c1-6 / kill-01
                  :ARG0 (c1-10 / they)
                  :ARG1 (c1-8 / man
                              :ARG1-of (c1-5 / innocent-01)
                              :mod (c1-13 / another))
                  :time (c1-0 / just)
                  :location (c1-11 / state
                                   :name (c1-7 / name
                                               :op1 "California")))
      :snt3 (c1-3 / end-01
                  :ARG1 (c1-9 / it)
                  :time (c1-4 / amr-unknown)))

# ::snt Tell to rigorously investigate &amp; prosecute all police involved in execution of
# ::tokens ["Tell", "to", "rigorously", "investigate", "&", "amp", ";", "prosecute", "all", "police", "involved", "in", "execution", "of"]
# ::lemmas ["tell", "to", "rigorously", "investigate", "&", "amp", ";", "prosecute", "all", "police", "involve", "in", "execution", "of"]
(c2-7 / tell-01
      :ARG0 (c2-0 / you)
      :ARG1 (c2-9 / and
                  :op1 (c2-3 / investigate-01
                             :ARG0 c2-0
                             :manner (c2-5 / rigorous))
                  :op2 (c2-4 / prosecute-01
                             :ARG0 c2-0
                             :ARG1 (c2-8 / police
                                         :mod (c2-2 / all)
                                         :ARG1-of (c2-6 / involve-01
                                                        :ARG2 (c2-1 / execute-01
                                                                    :ARG1 c2-8)))))
      :ARG2 c2-0
      :mode imperative)

# ::snt oh, okay...you didn't see it, so it must not have happened.
# ::tokens ["oh", ",", "okay", "...", "you", "did", "n't", "see", "it", ",", "so", "it", "must", "not", "have", "happened", "."]
# ::lemmas ["oh", ",", "okay", "...", "you", "do", "not", "see", "it", ",", "so", "it", "must", "not", "have", "happen", "."]
(c3-2 / multi-sentence
      :snt1 (c3-3 / oh
                  :mode expressive)
      :snt2 (c3-6 / cause-01
                  :ARG0 (c3-8 / see-01
                              :ARG0 (c3-0 / you)
                              :ARG1 (c3-5 / it)
                              :polarity -)
                  :ARG1 (c3-7 / infer-01
                              :ARG1 (c3-4 / event
                                          :domain (c3-1 / it)
                                          :polarity -))))

# ::snt an execution? No I saw no execution and if you say you did your a freaking liar.
# ::tokens ["an", "execution", "?", "No", "I", "saw", "no", "execution", "and", "if", "you", "say", "you", "did", "your", "a", "freaking", "liar", "."]
# ::lemmas ["an", "execution", "?", "no", "i", "see", "no", "execution", "and", "if", "you", "say", "you", "do", "your", "a", "freak", "liar", "."]
(c4-2 / multi-sentence
      :snt1 (c4-5 / execute-01
                  :polarity (c4-11 / amr-unknown))
      :snt2 (c4-7 / and
                  :op1 (c4-10 / see-01
                              :ARG0 (c4-8 / i)
                              :ARG1 (c4-4 / execute-01)
                              :polarity -)
                  :op2 (c4-1 / lie-08
                             :ARG0 (c4-0 / you)
                             :mod (c4-3 / freaking
                                        :mode expressive)
                             :condition (c4-6 / say-01
                                              :ARG0 c4-0
                                              :ARG1 (c4-9 / do-02
                                                          :ARG0 c4-0)))))

# ::snt drinking early this morning are you? Needing a little attention?
# ::tokens ["drinking", "early", "this", "morning", "are", "you", "?", "Needing", "a", "little", "attention", "?"]
# ::lemmas ["drink", "early", "this", "morning", "be", "you", "?", "need", "a", "little", "attention", "?"]
(c6-3 / multi-sentence
      :snt1 (c6-7 / drink-01
                  :ARG0 (c6-0 / you)
                  :time (c6-4 / early
                              :op1 (c6-1 / date-entity
                                         :dayperiod (c6-6 / morning)
                                         :mod (c6-9 / today)))
                  :ARG1-of (c6-8 / request-confirmation-91))
      :snt2 (c6-5 / need-01
                  :ARG0 c6-0
                  :ARG1 (c6-10 / attend-02
                               :ARG1 c6-0
                               :quant (c6-2 / little))))

# ::snt fuk the United States Justice Department I saw no proof of an execution there was no execution
# ::tokens ["fuk", "the", "United", "States", "Justice", "Department", "I", "saw", "no", "proof", "of", "an", "execution", "there", "was", "no", "execution"]
# ::lemmas ["fuk", "the", "United", "States", "Justice", "Department", "i", "see", "no", "proof", "of", "an", "execution", "there", "be", "no", "execution"]
(c7-1 / multi-sentence
      :snt1 (c7-0 / fuk-01
                  :ARG0 (c7-9 / government-organization
                              :name (c7-5 / name
                                          :op1 "Justice"
                                          :op2 "Department")
                              :mod (c7-8 / country
                                         :name (c7-6 / name
                                                     :op1 "United"
                                                     :op2 "States"))))
      :snt2 (c7-10 / see-01
                   :ARG0 (c7-4 / i)
                   :ARG1 (c7-7 / prove-01
                               :ARG1 (c7-3 / execute-01))
                   :polarity -)
      :snt3 (c7-2 / execute-01
                  :polarity -))

# ::snt aren't you an organization that wants the truth or are you just here to spread rumors innuendos and lies?
# ::tokens ["are", "n't", "you", "an", "organization", "that", "wants", "the", "truth", "or", "are", "you", "just", "here", "to", "spread", "rumors", "innuendos", "and", "lies", "?"]
# ::lemmas ["be", "not", "you", "an", "organization", "that", "want", "the", "truth", "or", "be", "you", "just", "here", "to", "spread", "rumor", "innuendo", "and", "lie", "?"]
(c8-11 / amr-choice
       :op1 (c8-6 / organization
                  :ARG0-of (c8-1 / want-01
                                 :ARG1 (c8-10 / truth))
                  :domain (c8-2 / you))
       :op2 (c8-5 / be-located-at-91
                  :ARG1 c8-2
                  :ARG2 (c8-0 / here)
                  :mod (c8-3 / just)
                  :purpose (c8-9 / spread-03
                                 :ARG0 c8-2
                                 :ARG1 (c8-7 / and
                                             :op1 (c8-8 / innuendo)
                                             :op2 (c8-4 / lie-08)))))

# ::snt Police your own damn land Native adult fools!
# ::tokens ["Police", "your", "own", "damn", "land", "Native", "adult", "fools", "!"]
# ::lemmas ["police", "your", "own", "damn", "land", "Native", "adult", "fool", "!"]
(c9-4 / police-01
      :ARG0 (c9-0 / you)
      :ARG1 (c9-1 / land
                  :poss c9-0
                  :mod (c9-5 / damn
                             :mode expressive))
      :ARG2 (c9-2 / fool
                  :mod (c9-6 / adult)
                  :mod (c9-3 / native))
      :mode imperative)
