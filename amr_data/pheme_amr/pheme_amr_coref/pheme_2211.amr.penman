# ::snt what screws us up most is people like u and Israel who claims Democracy but kills ppl ' destroy stones and trees,
# ::tokens ["what", "screws", "us", "up", "most", "is", "people", "like", "u", "and", "Israel", "who", "claims", "Democracy", "but", "kills", "ppl", "'", "destroy", "stones", "and", "trees", ","]
# ::lemmas ["what", "screw", "we", "up", "most", "be", "people", "like", "u", "and", "Israel", "who", "claim", "Democracy", "but", "kill", "ppl", "'", "destroy", "stone", "and", "tree", ","]
(c1-13 / screw-up-01
       :ARG0 (c1-7 / person
                   :ARG1-of (c1-8 / resemble-01
                                  :ARG2 (c1-16 / and
                                               :op1 (c1-1 / you)
                                               :op2 (c1-9 / country
                                                          :name (c1-6 / name
                                                                      :op1 "Israel"))))
                   :ARG0-of (c1-10 / claim-01
                                   :ARG1 (c1-11 / democracy)
                                   :ARG1-of (c1-12 / contrast-01
                                                   :ARG2 (c1-15 / kill-01
                                                                :ARG0 c1-7
                                                                :ARG1 (c1-5 / and
                                                                            :op1 (c1-4 / stone)
                                                                            :op2 (c1-14 / tree)))))
                   :ARG1-of c1-8
                   :ARG2 c1-16)
       :ARG1 (c1-2 / we)
       :ARG2-of (c1-0 / have-degree-91
                      :ARG1 c1-7
                      :ARG3 (c1-3 / most)))

# ::snt - that's a step FORWARD ! The dude's TWITTERIZING hisself ;maybe - just maybe now - later, he'll learn the alphabet !
# ::tokens ["-", "that", "'s", "a", "step", "FORWARD", "!", "The", "dude", "'s", "TWITTERIZING", "hisself", ";", "maybe", "-", "just", "maybe", "now", "-", "later", ",", "he", "'ll", "learn", "the", "alphabet", "!"]
# ::lemmas ["-", "that", "be", "a", "step", "forward", "!", "the", "dude", "'s", "twitterizing", "hisself", ";", "maybe", "-", "just", "maybe", "now", "-", "later", ",", "he", "'ll", "learn", "the", "alphabet", "!"]
(c2-2 / multi-sentence
      :snt1 (c2-9 / step-01
                  :ARG2 (c2-1 / forward)
                  :domain (c2-10 / that))
      :snt2 (c2-7 / remember-01
                  :ARG0 (c2-8 / dude
                              :ARG1-of c2-7))
      :snt3 (c2-6 / possible-01
                  :ARG1 (c2-3 / learn-01
                              :ARG0 c2-8
                              :ARG1 (c2-12 / alphabet)
                              :time (c2-4 / after
                                          :op1 (c2-5 / now)
                                          :ARG1-of (c2-11 / possible-01
                                                          :mod (c2-0 / just))))))

# ::snt Rich. From a country where people get arrested for dancing to "Happy."
# ::tokens ["Rich", ".", "From", "a", "country", "where", "people", "get", "arrested", "for", "dancing", "to", "\"", "Happy", ".", "\""]
# ::lemmas ["rich", ".", "from", "a", "country", "where", "people", "get", "arrest", "for", "dance", "to", "\"", "happy", ".", "\""]
(c3-0 / multi-sentence
      :snt1 (c3-4 / rich)
      :snt2 (c3-1 / be-from-91
                  :ARG2 (c3-5 / country
                              :location-of (c3-8 / arrest-01
                                                 :ARG1 (c3-3 / person)
                                                 :ARG2 (c3-6 / dance-01
                                                             :ARG0 c3-3
                                                             :ARG1 (c3-7 / music
                                                                         :name (c3-2 / name
                                                                                     :op1 "Happy")))))))

# ::snt Javad Larijani: Universal Human Rights Are Based On an Illusory Utopia
# ::tokens ["Javad", "Larijani", ":", "Universal", "Human", "Rights", "Are", "Based", "On", "an", "Illusory", "Utopia"]
# ::lemmas ["Javad", "Larijani", ":", "Universal", "Human", "Rights", "be", "base", "on", "an", "Illusory", "Utopia"]
(c4-7 / say-01
      :ARG0 (c4-5 / person
                  :name (c4-4 / name
                              :op1 "Javad"
                              :op2 "Larijani"))
      :ARG1 (c4-2 / base-02
                  :ARG1 (c4-6 / right-05
                              :ARG1 (c4-0 / human)
                              :mod (c4-1 / universal))
                  :ARG2 (c4-8 / utopia
                              :ARG1-of (c4-3 / illusory-02))))

# ::snt Iran's leader is in no position to criticize the US for what happened in Ferguson.
# ::tokens ["Iran", "'s", "leader", "is", "in", "no", "position", "to", "criticize", "the", "US", "for", "what", "happened", "in", "Ferguson", "."]
# ::lemmas ["Iran", "'s", "leader", "be", "in", "no", "position", "to", "criticize", "the", "US", "for", "what", "happen", "in", "Ferguson", "."]
(c5-4 / position-01
      :ARG1 (c5-9 / person
                  :ARG0-of (c5-0 / lead-02
                                 :ARG1 (c5-6 / country
                                             :name (c5-2 / name
                                                         :op1 "Iran"))))
      :ARG2 (c5-5 / criticize-01
                  :ARG0 c5-9
                  :ARG1 (c5-8 / country
                              :name (c5-3 / name
                                          :op1 "US"))
                  :ARG2 (c5-1 / event
                              :location (c5-10 / city
                                               :name (c5-7 / name
                                                           :op1 "Ferguson"))))
      :polarity -)

# ::snt Dando lecciones de DDHH desde el paraso de la libertad.
# ::tokens ["Dando", "lecciones", "de", "DDHH", "desde", "el", "paraso", "de", "la", "libertad", "."]
# ::lemmas ["Dando", "leccione", "de", "DDHH", "desde", "el", "paraso", "de", "la", "libertad", "."]
(c6-3 / dando
      :poss (c6-2 / person
                  :name (c6-1 / name
                              :op1 "DDHH"))
      :mod (c6-0 / desde
                 :op1 (c6-4 / paraso)))

# ::snt hahahahahahah , stop the Sunni executions in Ahwaz first ! give the Democracy one last Chance in Iran ,stop the Killing in
# ::tokens ["hahahahahahah", ",", "stop", "the", "Sunni", "executions", "in", "Ahwaz", "first", "!", "give", "the", "Democracy", "one", "last", "Chance", "in", "Iran", ",", "stop", "the", "Killing", "in"]
# ::lemmas ["hahahahahahah", ",", "stop", "the", "Sunni", "execution", "in", "Ahwaz", "first", "!", "give", "the", "Democracy", "one", "last", "chance", "in", "Iran", ",", "stop", "the", "Killing", "in"]
(c7-0 / multi-sentence
      :snt1 (c7-5 / stop-01
                  :ARG0 (c7-15 / you)
                  :ARG1 (c7-8 / execute-01
                              :location (c7-18 / city
                                               :name (c7-10 / name
                                                            :op1 "Ahwaz"))
                              :mod (c7-11 / religious-group
                                          :name (c7-17 / name
                                                       :op1 "Sunni")))
                  :ord (c7-16 / ordinal-entity
                              :value 1)
                  :mod (c7-6 / haha
                             :mode expressive)
                  :mode imperative)
      :snt2 (c7-12 / give-01
                   :ARG0 (c7-19 / you)
                   :ARG1 (c7-3 / chance-02
                               :ARG0 (c7-4 / democracy)
                               :mod (c7-7 / last)
                               :location (c7-13 / country
                                                :name (c7-2 / name
                                                            :op1 "Iran")))
                   :ARG2 c7-19
                   :mode imperative)
      :snt3 (c7-9 / stop-01
                  :ARG0 (c7-1 / you)
                  :ARG1 (c7-14 / kill-01)
                  :mode imperative))

# ::snt Irans Supreme Leader has taken to Twitter to criticize the US over .
# ::tokens ["Irans", "Supreme", "Leader", "has", "taken", "to", "Twitter", "to", "criticize", "the", "US", "over", "."]
# ::lemmas ["Irans", "Supreme", "Leader", "have", "take", "to", "Twitter", "to", "criticize", "the", "US", "over", "."]
(c8-10 / take-01
       :ARG0 (c8-3 / person
                   :ARG0-of (c8-0 / lead-02
                                  :ARG1 (c8-6 / government-organization
                                              :name (c8-1 / name
                                                          :op1 "Supreme"
                                                          :op2 "Leader")
                                              :mod (c8-5 / country
                                                         :name (c8-2 / name
                                                                     :op1 "Irans")))))
       :ARG1 (c8-11 / publication
                    :name (c8-4 / name
                                :op1 "Twitter"))
       :ARG3 (c8-7 / criticize-01
                   :ARG0 c8-3
                   :ARG1 (c8-9 / country
                               :name (c8-8 / name
                                           :op1 "US"))))

# ::snt Putting the record of Iran aside for a second, what he says is not false in this issue
# ::tokens ["Putting", "the", "record", "of", "Iran", "aside", "for", "a", "second", ",", "what", "he", "says", "is", "not", "false", "in", "this", "issue"]
# ::lemmas ["put", "the", "record", "of", "Iran", "aside", "for", "a", "second", ",", "what", "he", "say", "be", "not", "false", "in", "this", "issue"]
(c9-1 / false
      :domain (c9-11 / thing
                     :ARG1-of (c9-10 / say-01
                                     :ARG0 (c9-0 / he))
                     :topic (c9-3 / issue-02
                                  :mod (c9-9 / this)))
      :condition (c9-6 / put-01
                       :ARG1 (c9-7 / record-01
                                   :ARG1 (c9-8 / country
                                               :name (c9-4 / name
                                                           :op1 "Iran")))
                       :ARG2 (c9-12 / aside)
                       :duration (c9-5 / temporal-quantity
                                       :unit (c9-2 / second)
                                       :quant 1))
      :polarity -)

# ::snt Rich.
# ::tokens ["Rich", "."]
# ::lemmas ["rich", "."]
(c10-0 / rich)

# ::snt I hope he pointed out the role of the 's LEEP program in militarizing 's PD.
# ::tokens ["I", "hope", "he", "pointed", "out", "the", "role", "of", "the", "'s", "LEEP", "program", "in", "militarizing", "'s", "PD", "."]
# ::lemmas ["i", "hope", "he", "point", "out", "the", "role", "of", "the", "'s", "leep", "program", "in", "militarizing", "'s", "PD", "."]
(c11-0 / hope-01
       :ARG0 (c11-2 / i)
       :ARG1 (c11-4 / point-out-02
                    :ARG0 (c11-8 / he)
                    :ARG1 (c11-5 / role
                                 :poss (c11-7 / program
                                              :name (c11-3 / name
                                                           :op1 "LEEP")
                                              :poss (c11-6 / government-organization
                                                           :name c11-3
                                                           :op1 "PD")))
                    :topic (c11-1 / militarize-01
                                  :ARG1 c11-6)))

# ::snt LOL!!
# ::tokens ["LOL", "!", "!"]
# ::lemmas ["LOL", "!", "!"]
(c12-0 / laugh-01
       :ARG0 (c12-1 / i)
       :manner (c12-2 / loud)
       :mode expressive)

# ::snt Supreme Leader has taken to to criticize the US over . - via
# ::tokens ["Supreme", "Leader", "has", "taken", "to", "to", "criticize", "the", "US", "over", ".", "-", "via"]
# ::lemmas ["Supreme", "Leader", "have", "take", "to", "to", "criticize", "the", "US", "over", ".", "-", "via"]
(c13-7 / take-35
       :ARG0 (c13-2 / person
                    :ARG0-of (c13-0 / lead-02
                                    :mod (c13-6 / supreme)))
       :ARG1 (c13-4 / criticize-01
                    :ARG0 c13-2
                    :ARG1 (c13-3 / country
                                 :name (c13-1 / name
                                              :op1 "US"))
                    :ARG1-of (c13-5 / cause-01
                                    :ARG0 (c13-8 / amr-unknown))))

# ::snt Those in glass houses, Ali those in glass houses.
# ::tokens ["Those", "in", "glass", "houses", ",", "Ali", "those", "in", "glass", "houses", "."]
# ::lemmas ["those", "in", "glass", "house", ",", "Ali", "those", "in", "glass", "house", "."]
(c14-6 / and
       :op1 (c14-3 / person
                   :location (c14-0 / house
                                    :mod (c14-4 / glass)))
       :op2 (c14-5 / person
                   :name (c14-2 / name
                                :op1 "Ali")
                   :location (c14-1 / house
                                    :mod c14-4)))

# ::snt Syria , stop the killing in Iraq and Lebanon , get your ass out of the mentioned above cases then talk about Human Rights .
# ::tokens ["Syria", ",", "stop", "the", "killing", "in", "Iraq", "and", "Lebanon", ",", "get", "your", "ass", "out", "of", "the", "mentioned", "above", "cases", "then", "talk", "about", "Human", "Rights", "."]
# ::lemmas ["Syria", ",", "stop", "the", "killing", "in", "Iraq", "and", "Lebanon", ",", "get", "your", "ass", "out", "of", "the", "mention", "above", "case", "then", "talk", "about", "Human", "Rights", "."]
(c15-4 / and
       :op1 (c15-3 / stop-01
                   :ARG0 (c15-17 / country
                                 :name (c15-6 / name
                                              :op1 "Syria"))
                   :ARG1 (c15-12 / kill-01
                                 :location (c15-10 / and
                                                   :op1 (c15-2 / country
                                                               :name (c15-16 / name
                                                                             :op1 "Iraq"))
                                                   :op2 (c15-11 / country
                                                                :name (c15-1 / name
                                                                             :op1 "Lebanon"))))
                   :mode imperative)
       :op2 (c15-9 / get-05
                   :ARG0 (c15-14 / you
                                 :part (c15-7 / ass
                                              :ARG1-of c15-9))
                   :ARG2 (c15-15 / out-06
                                 :ARG1 c15-7
                                 :ARG2 (c15-13 / case-04
                                               :ARG1-of (c15-0 / mention-01
                                                               :location (c15-18 / above))))
                   :mode imperative)
       :op3 (c15-19 / talk-01
                    :ARG0 c15-14
                    :ARG1 (c15-8 / right-05
                                 :ARG1 (c15-5 / human))
                    :mode imperative))

# ::snt YEP- by gawd I think he's got it - this man in the sand knows just about the harsh plan GWB- guilty while Black
# ::tokens ["YEP-", "by", "gawd", "I", "think", "he", "'s", "got", "it", "-", "this", "man", "in", "the", "sand", "knows", "just", "about", "the", "harsh", "plan", "GWB-", "guilty", "while", "Black"]
# ::lemmas ["YEP-", "by", "gawd", "i", "think", "he", "be", "get", "it", "-", "this", "man", "in", "the", "sand", "know", "just", "about", "the", "harsh", "plan", "gwb-", "guilty", "while", "black"]
(c16-7 / and
       :op1 (c16-18 / think-01
                    :ARG0 (c16-13 / i)
                    :ARG1 (c16-12 / get-01
                                  :ARG0 (c16-8 / he)
                                  :ARG1 (c16-14 / it))
                    :mod (c16-10 / by-the-way))
       :op2 (c16-15 / know-01
                    :ARG0 (c16-1 / man
                                 :location (c16-4 / sand)
                                 :mod (c16-17 / this))
                    :ARG1 (c16-2 / plan-01
                                 :ARG1 (c16-3 / guilty-01
                                              :ARG1 (c16-5 / person
                                                           :name (c16-11 / name
                                                                         :op1 "GWB")))
                                 :ARG1-of (c16-6 / harsh-02))
                    :mod (c16-0 / just)
                    :time (c16-9 / person
                                 :name (c16-16 / name
                                               :op1 "Black"))))

# ::snt Shut up, Khamenei. 'i
# ::tokens ["Shut", "up", ",", "Khamenei", ".", "'", "i"]
# ::lemmas ["Shut", "up", ",", "Khamenei", ".", "'", "i"]
(c17-0 / shut-up-06
       :ARG0 (c17-1 / person
                    :name (c17-2 / name
                                 :op1 "Khamenei")
                    :ARG1-of c17-0)
       :mode imperative)

# ::snt That's deeply hypocritical: Universal Human Rights Are Based On an Illusory Utopia
# ::tokens ["That", "'s", "deeply", "hypocritical", ":", "Universal", "Human", "Rights", "Are", "Based", "On", "an", "Illusory", "Utopia"]
# ::lemmas ["that", "be", "deeply", "hypocritical", ":", "Universal", "Human", "Rights", "Are", "Based", "On", "an", "Illusory", "Utopia"]
(c18-0 / hypocritical
       :domain (c18-2 / base-02
                      :ARG1 (c18-4 / right-05
                                   :ARG1 (c18-7 / human)
                                   :mod (c18-1 / universal))
                      :ARG2 (c18-6 / utopia
                                   :mod (c18-3 / illusory)))
       :ARG1-of (c18-5 / deep-02))

# ::snt He needs to worry about his problems first.
# ::tokens ["He", "needs", "to", "worry", "about", "his", "problems", "first", "."]
# ::lemmas ["he", "need", "to", "worry", "about", "his", "problem", "first", "."]
(c19-3 / need-01
       :ARG0 (c19-0 / he)
       :ARG1 (c19-1 / worry-01
                    :ARG0 c19-0
                    :ARG1 (c19-4 / problem
                                 :poss c19-0))
       :ord (c19-2 / ordinal-entity
                   :value 1))
