# ::snt by doing your best, you provide incremental bits that others can use to verify, investigate
# ::tokens ["by", "doing", "your", "best", ",", "you", "provide", "incremental", "bits", "that", "others", "can", "use", "to", "verify", ",", "investigate"]
# ::lemmas ["by", "do", "your", "good", ",", "you", "provide", "incremental", "bit", "that", "other", "can", "use", "to", "verify", ",", "investigate"]
(c1-9 / provide-01
      :ARG0 (c1-1 / you)
      :ARG1 (c1-4 / bit
                  :ARG1-of (c1-13 / add-02)
                  :ARG1-of (c1-3 / use-01
                                 :ARG0 (c1-5 / other)
                                 :ARG2 (c1-6 / and
                                             :op1 (c1-8 / verify-01
                                                        :ARG0 c1-5
                                                        :ARG1 c1-4)
                                             :op2 (c1-7 / investigate-01
                                                        :ARG0 c1-5))
                                 :ARG1-of (c1-12 / possible-01)))
      :manner (c1-10 / do-02
                     :ARG0 c1-1
                     :ARG1 (c1-11 / good-02
                                  :ARG1 c1-1
                                  :ARG2-of (c1-0 / have-degree-91
                                                 :ARG1 c1-1
                                                 :ARG3 (c1-2 / most)))))

# ::snt Oh my god : The killing was live-tweeted. via
# ::tokens ["Oh", "my", "god", ":", "The", "killing", "was", "live", "-", "tweeted", ".", "via"]
# ::lemmas ["oh", "my", "god", ":", "the", "killing", "be", "live", "-", "tweet", ".", "via"]
(c2-1 / multi-sentence
      :snt1 (c2-5 / god
                  :mod (c2-2 / oh
                             :mode expressive)
                  :poss (c2-3 / i))
      :snt2 (c2-6 / tweet-02
                  :ARG1 (c2-4 / kill-01)
                  :manner (c2-0 / live)))

# ::snt that was common knowledge in the community. Check YouTube for other witness accounts
# ::tokens ["that", "was", "common", "knowledge", "in", "the", "community", ".", "Check", "YouTube", "for", "other", "witness", "accounts"]
# ::lemmas ["that", "be", "common", "knowledge", "in", "the", "community", ".", "check", "YouTube", "for", "other", "witness", "account"]
(c3-2 / multi-sentence
      :snt1 (c3-4 / know-01
                  :ARG0 (c3-8 / community)
                  :ARG1 (c3-10 / that)
                  :mod (c3-7 / common))
      :snt2 (c3-9 / check-01
                  :ARG0 (c3-0 / you)
                  :ARG1 (c3-6 / publication
                              :name (c3-5 / name
                                          :op1 "YouTube"))
                  :ARG2 (c3-12 / account
                               :mod (c3-11 / person
                                           :ARG0-of (c3-1 / witness-01))
                               :mod (c3-3 / other))
                  :mode imperative))

# ::snt How did that kid know about the robbery then? He tweeted that he stole something.
# ::tokens ["How", "did", "that", "kid", "know", "about", "the", "robbery", "then", "?", "He", "tweeted", "that", "he", "stole", "something", "."]
# ::lemmas ["how", "do", "that", "kid", "know", "about", "the", "robbery", "then", "?", "he", "tweet", "that", "he", "steal", "something", "."]
(c4-1 / multi-sentence
      :snt1 (c4-4 / know-01
                  :ARG0 (c4-2 / kid
                              :mod (c4-9 / that))
                  :ARG1 (c4-6 / rob-01)
                  :manner (c4-10 / amr-unknown)
                  :time (c4-7 / then))
      :snt2 (c4-5 / tweet-02
                  :ARG0 (c4-0 / he)
                  :ARG1 (c4-8 / steal-01
                              :ARG0 c4-0
                              :ARG1 (c4-3 / something))))

# ::snt . this is nuts
# ::tokens [".", "this", "is", "nuts"]
# ::lemmas [".", "this", "be", "nuts"]
(c5-0 / nuts
      :domain (c5-1 / this))

# ::snt I don't have expertise to contribute on this kind of analysis w/ true skill and integrity
# ::tokens ["I", "do", "n't", "have", "expertise", "to", "contribute", "on", "this", "kind", "of", "analysis", "w/", "true", "skill", "and", "integrity"]
# ::lemmas ["i", "do", "not", "have", "expertise", "to", "contribute", "on", "this", "kind", "of", "analysis", "w/", "true", "skill", "and", "integrity"]
(c6-0 / have-03
      :ARG0 (c6-3 / i)
      :ARG1 (c6-1 / expertise
                  :purpose (c6-4 / contribute-01
                                 :ARG0 c6-3
                                 :ARG2 (c6-10 / analyze-01
                                              :mod (c6-8 / kind
                                                         :mod (c6-7 / this))
                                              :manner (c6-2 / and
                                                            :op1 (c6-9 / skill
                                                                       :ARG1-of (c6-6 / true-01))
                                                            :op2 (c6-5 / integrity)))))
      :polarity -)

# ::snt NOT meant as critique of anyone. Again, appreciate how thoughtful were responses to my Qs
# ::tokens ["NOT", "meant", "as", "critique", "of", "anyone", ".", "Again", ",", "appreciate", "how", "thoughtful", "were", "responses", "to", "my", "Qs"]
# ::lemmas ["not", "mean", "as", "critique", "of", "anyone", ".", "again", ",", "appreciate", "how", "thoughtful", "be", "response", "to", "my", "q"]
(c7-1 / multi-sentence
      :snt1 (c7-6 / mean-02
                  :ARG2 (c7-8 / critique-01
                              :ARG1 (c7-11 / anyone))
                  :polarity -)
      :snt2 (c7-3 / appreciate-02
                  :ARG0 (c7-0 / you)
                  :ARG1 (c7-10 / thing
                               :degree-of (c7-9 / thoughtful-00
                                                :ARG1 (c7-7 / respond-01
                                                            :ARG1 (c7-2 / question-01
                                                                        :ARG0 (c7-4 / i)))))
                  :mod (c7-5 / again)
                  :mode imperative))

# ::snt Apparently he was a witness.
# ::tokens ["Apparently", "he", "was", "a", "witness", "."]
# ::lemmas ["apparently", "he", "be", "a", "witness", "."]
(c8-1 / witness-01
      :ARG0 (c8-0 / he)
      :ARG1-of (c8-2 / appear-02))

# ::snt : The killing was live-tweeted. via wow
# ::tokens [":", "The", "killing", "was", "live", "-", "tweeted", ".", "via", "wow"]
# ::lemmas [":", "the", "killing", "be", "live", "-", "tweet", ".", "via", "wow"]
(c9-4 / tweet-02
      :ARG1 (c9-2 / kill-01)
      :manner (c9-0 / live)
      :medium (c9-1 / broadcast-program
                    :name (c9-3 / name
                                :op1 "Wow")))

# ::snt Wow. I see your point. Amazing. Any sense of why this hasn't been more widely reported?
# ::tokens ["Wow", ".", "I", "see", "your", "point", ".", "Amazing", ".", "Any", "sense", "of", "why", "this", "has", "n't", "been", "more", "widely", "reported", "?"]
# ::lemmas ["wow", ".", "i", "see", "your", "point", ".", "amazing", ".", "any", "sense", "of", "why", "this", "have", "not", "be", "more", "widely", "report", "?"]
(c10-3 / multi-sentence
       :snt1 (c10-13 / see-01
                     :ARG0 (c10-6 / i)
                     :ARG1 (c10-8 / point-04
                                  :ARG0 (c10-1 / you)))
       :snt2 (c10-15 / amaze-01)
       :snt3 (c10-4 / sense-01
                    :ARG1 (c10-14 / thing
                                  :ARG0-of (c10-10 / cause-01
                                                   :ARG1 (c10-9 / report-01
                                                                :ARG1 (c10-12 / this)
                                                                :ARG1-of (c10-2 / wide-02
                                                                                :ARG2-of (c10-0 / have-degree-91
                                                                                                :ARG1 c10-9
                                                                                                :ARG3 (c10-11 / more)))
                                                                :polarity -))
                                  :mod (c10-5 / any))
                    :polarity (c10-7 / amr-unknown)))

# ::snt Damn : The killing was live-tweeted. via
# ::tokens ["Damn", ":", "The", "killing", "was", "live", "-", "tweeted", ".", "via"]
# ::lemmas ["damn", ":", "the", "killing", "be", "live", "-", "tweet", ".", "via"]
(c11-2 / tweet-02
       :ARG1 (c11-3 / kill-01)
       :manner (c11-1 / live)
       :mod (c11-0 / damn
                   :mode expressive))

# ::snt BIG time.
# ::tokens ["BIG", "time", "."]
# ::lemmas ["big", "time", "."]
(c12-0 / time
       :mod (c12-1 / big))

# ::snt is a great resource to see who has similar pictures historically.
# ::tokens ["is", "a", "great", "resource", "to", "see", "who", "has", "similar", "pictures", "historically", "."]
# ::lemmas ["be", "a", "great", "resource", "to", "see", "who", "have", "similar", "picture", "historically", "."]
(c13-3 / resource
       :mod (c13-4 / great)
       :purpose (c13-5 / see-01
                       :ARG1 (c13-2 / person
                                    :ARG0-of (c13-0 / have-03
                                                    :ARG1 (c13-6 / picture
                                                                 :ARG1-of (c13-1 / resemble-01))
                                                    :manner (c13-7 / historical)))))

# ::snt Don't know. Amateur sleuthing by me feels absurd &amp; inappropriate in the face of tragedy.
# ::tokens ["Do", "n't", "know", ".", "Amateur", "sleuthing", "by", "me", "feels", "absurd", "&", "amp", ";", "inappropriate", "in", "the", "face", "of", "tragedy", "."]
# ::lemmas ["do", "not", "know", ".", "amateur", "sleuthing", "by", "i", "feel", "absurd", "&", "amp", ";", "inappropriate", "in", "the", "face", "of", "tragedy", "."]
(c14-2 / multi-sentence
       :snt1 (c14-12 / know-01
                     :ARG0 (c14-5 / i)
                     :polarity -)
       :snt2 (c14-1 / feel-01
                    :ARG1 (c14-10 / sleuthing
                                  :mod (c14-13 / amateur)
                                  :poss (c14-9 / i))
                    :ARG2 (c14-4 / and
                                 :op1 (c14-7 / absurd)
                                 :op2 (c14-11 / amp))
                    :ARG1-of (c14-8 / cause-01
                                    :ARG0 (c14-3 / appropriate-02
                                                 :ARG1 c14-10
                                                 :time (c14-6 / face-01
                                                              :ARG0 c14-10
                                                              :ARG1 (c14-0 / tragedy))
                                                 :polarity -))))

# ::snt he tweeted that a day later
# ::tokens ["he", "tweeted", "that", "a", "day", "later"]
# ::lemmas ["he", "tweet", "that", "a", "day", "later"]
(c15-4 / tweet-01
       :ARG0 (c15-0 / he)
       :ARG1 (c15-3 / that)
       :time (c15-5 / after
                    :quant (c15-1 / temporal-quantity
                                  :unit (c15-2 / day)
                                  :quant 1)))

# ::snt false news can be deadly when apologies by an angry crowd
# ::tokens ["false", "news", "can", "be", "deadly", "when", "apologies", "by", "an", "angry", "crowd"]
# ::lemmas ["false", "news", "can", "be", "deadly", "when", "apology", "by", "an", "angry", "crowd"]
(c16-3 / possible-01
       :ARG1 (c16-5 / kill-01
                    :ARG0 (c16-2 / news
                                 :mod (c16-0 / false)))
       :time (c16-6 / apologize-01
                    :ARG0 (c16-4 / crowd
                                 :ARG1-of (c16-1 / anger-01))))

# ::snt The photos + timestamps are pretty compelling evidence. What would need to happen to fake this?
# ::tokens ["The", "photos", "+", "timestamps", "are", "pretty", "compelling", "evidence", ".", "What", "would", "need", "to", "happen", "to", "fake", "this", "?"]
# ::lemmas ["the", "photo", "+", "timestamp", "be", "pretty", "compelling", "evidence", ".", "what", "would", "need", "to", "happen", "to", "fake", "this", "?"]
(c17-1 / multi-sentence
       :snt1 (c17-2 / evidence-01
                    :ARG0 (c17-10 / and
                                  :op1 (c17-5 / photo)
                                  :op2 (c17-8 / timestamp))
                    :ARG0-of (c17-6 / compel-01
                                    :degree (c17-9 / pretty)))
       :snt2 (c17-4 / need-01
                    :ARG1 (c17-3 / amr-unknown)
                    :purpose (c17-0 / fake-02
                                    :ARG1 (c17-7 / this))))

# ::snt I don't know the answer, but he may have heard it from friends on the scene who knew Brown.
# ::tokens ["I", "do", "n't", "know", "the", "answer", ",", "but", "he", "may", "have", "heard", "it", "from", "friends", "on", "the", "scene", "who", "knew", "Brown", "."]
# ::lemmas ["i", "do", "not", "know", "the", "answer", ",", "but", "he", "may", "have", "hear", "it", "from", "friend", "on", "the", "scene", "who", "know", "Brown", "."]
(c18-9 / contrast-01
       :ARG1 (c18-11 / know-01
                     :ARG0 (c18-5 / i)
                     :ARG1 (c18-13 / answer)
                     :polarity -)
       :ARG2 (c18-8 / possible-01
                    :ARG1 (c18-0 / hear-01
                                 :ARG0 (c18-1 / he)
                                 :ARG1 c18-13
                                 :ARG2 (c18-12 / person
                                               :ARG0-of (c18-7 / have-rel-role-91
                                                               :ARG1 c18-1
                                                               :ARG2 (c18-2 / friend))
                                               :location (c18-10 / scene)
                                               :ARG0-of (c18-4 / know-01
                                                               :ARG1 (c18-3 / person
                                                                            :name (c18-6 / name
                                                                                         :op1 "Brown")))))))

# ::snt Wow, if this is true.
# ::tokens ["Wow", ",", "if", "this", "is", "true", "."]
# ::lemmas ["wow", ",", "if", "this", "be", "true", "."]
(c19-0 / have-condition-91
       :ARG2 (c19-2 / true-01
                    :ARG1 (c19-3 / this))
       :mod (c19-1 / wow
                   :mode expressive))

# ::snt This is amazing. RT : The killing was live-tweeted. via
# ::tokens ["This", "is", "amazing", ".", "RT", ":", "The", "killing", "was", "live", "-", "tweeted", ".", "via"]
# ::lemmas ["this", "be", "amazing", ".", "rt", ":", "the", "killing", "be", "live", "-", "tweet", ".", "via"]
(c20-1 / multi-sentence
       :snt1 (c20-8 / amaze-01
                    :ARG0 (c20-7 / this))
       :snt2 (c20-4 / publication
                    :name (c20-3 / name
                                 :op1 "RT")
                    :ARG0-of (c20-5 / mean-01
                                    :ARG1 (c20-6 / tweet-02
                                                 :ARG1 (c20-2 / kill-01)
                                                 :manner (c20-0 / live)))))

# ::snt but why did you just create a profile recently to troll online about that young man's death? Get a life.
# ::tokens ["but", "why", "did", "you", "just", "create", "a", "profile", "recently", "to", "troll", "online", "about", "that", "young", "man", "'s", "death", "?", "Get", "a", "life", "."]
# ::lemmas ["but", "why", "do", "you", "just", "create", "a", "profile", "recently", "to", "troll", "online", "about", "that", "young", "man", "'s", "death", "?", "get", "a", "life", "."]
(c21-3 / multi-sentence
       :snt1 (c21-7 / contrast-01
                    :ARG2 (c21-6 / cause-01
                                 :ARG0 (c21-15 / amr-unknown)
                                 :ARG1 (c21-11 / create-01
                                               :ARG0 (c21-1 / you)
                                               :ARG1 (c21-5 / profile)
                                               :time (c21-8 / recent)
                                               :purpose (c21-14 / troll-01
                                                                :ARG0 c21-1
                                                                :ARG2 (c21-9 / die-01
                                                                             :ARG1 (c21-10 / man
                                                                                           :mod (c21-16 / young)
                                                                                           :mod (c21-13 / that)))
                                                                :medium (c21-4 / online))
                                               :mod (c21-0 / just))))
       :snt2 (c21-12 / get-01
                     :ARG0 c21-1
                     :mode imperative)
       :ARG1 (c21-2 / life))

# ::snt search image on and look at image metadata, perhaps? Unique seasrchable file nam?
# ::tokens ["search", "image", "on", "and", "look", "at", "image", "metadata", ",", "perhaps", "?", "Unique", "seasrchable", "file", "nam", "?"]
# ::lemmas ["search", "image", "on", "and", "look", "at", "image", "metadata", ",", "perhaps", "?", "unique", "seasrchable", "file", "nam", "?"]
(c22-1 / multi-sentence
       :snt1 (c22-13 / and
                     :op1 (c22-11 / search-01
                                  :ARG1 (c22-6 / image))
                     :op2 (c22-0 / look-01
                                 :ARG1 (c22-8 / metadata
                                              :mod (c22-10 / image)))
                     :ARG1-of (c22-9 / possible-01))
       :snt2 (c22-12 / product
                     :name (c22-7 / name
                                  :op1 "Nam")
                     :mod (c22-2 / file
                                 :mod (c22-4 / seasrchable))
                     :ARG1-of (c22-3 / unique-01)
                     :polarity (c22-5 / amr-unknown)))

# ::snt Google how to read jpeg metadata exif
# ::tokens ["Google", "how", "to", "read", "jpeg", "metadata", "exif"]
# ::lemmas ["Google", "how", "to", "read", "jpeg", "metadata", "exif"]
(c23-7 / thing
       :manner-of (c23-4 / read-01
                         :ARG0 (c23-5 / company
                                      :name (c23-3 / name
                                                   :op1 "Google"))
                         :ARG1 (c23-6 / thing
                                      :mod (c23-1 / metadata
                                                  :mod (c23-0 / format
                                                              :name c23-3
                                                              :op1 "Jpeg"))))
       :condition (c23-2 / event))

# ::snt Just awful. : The killing was live-tweeted. via
# ::tokens ["Just", "awful", ".", ":", "The", "killing", "was", "live", "-", "tweeted", ".", "via"]
# ::lemmas ["just", "awful", ".", ":", "the", "killing", "be", "live", "-", "tweet", ".", "via"]
(c24-2 / multi-sentence
       :snt1 (c24-5 / awful
                    :mod (c24-0 / just))
       :snt2 (c24-4 / tweet-02
                    :ARG1 (c24-3 / kill-01)
                    :manner (c24-1 / live)))

# ::snt Jesus ... RT The killing was live-tweeted. via
# ::tokens ["Jesus", "...", "RT", "The", "killing", "was", "live", "-", "tweeted", ".", "via"]
# ::lemmas ["Jesus", "...", "RT", "the", "killing", "be", "live", "-", "tweet", ".", "via"]
(c25-6 / and
       :op1 (c25-3 / person
                   :name (c25-2 / name
                                :op1 "Jesus")
                   :mode expressive)
       :op2 (c25-4 / tweet-02
                   :ARG1 (c25-1 / kill-01)
                   :manner (c25-0 / live))
       :medium (c25-5 / publication
                      :name c25-2
                      :op1 "RT"))

# ::snt The team is looking through these images and tweets.
# ::tokens ["The", "team", "is", "looking", "through", "these", "images", "and", "tweets", "."]
# ::lemmas ["the", "team", "be", "look", "through", "these", "image", "and", "tweet", "."]
(c26-0 / look-01
       :ARG0 (c26-4 / team)
       :ARG1 (c26-5 / and
                    :op1 (c26-1 / image)
                    :op2 (c26-3 / tweet)
                    :mod (c26-2 / this)))

# ::snt just couch your ideas as questions. Community is free to ignore questions. Perhaps itsparks
# ::tokens ["just", "couch", "your", "ideas", "as", "questions", ".", "Community", "is", "free", "to", "ignore", "questions", ".", "Perhaps", "itsparks"]
# ::lemmas ["just", "couch", "your", "idea", "as", "question", ".", "community", "be", "free", "to", "ignore", "question", ".", "perhaps", "itspark"]
(c27-3 / multi-sentence
       :snt1 (c27-9 / couch-01
                    :ARG0 (c27-1 / you)
                    :ARG1 (c27-6 / idea
                                 :poss c27-1)
                    :ARG2 (c27-5 / question-01)
                    :mod (c27-0 / just))
       :snt2 (c27-2 / free-04
                    :ARG1 (c27-8 / community)
                    :ARG3 (c27-10 / ignore-01
                                  :ARG0 c27-8
                                  :ARG1 (c27-11 / question-01)))
       :snt3 (c27-7 / possible-01
                    :ARG1 (c27-12 / kook
                                  :domain (c27-4 / it))))

# ::snt Whoa. RT The killing was live-tweeted. via
# ::tokens ["Whoa", ".", "RT", "The", "killing", "was", "live", "-", "tweeted", ".", "via"]
# ::lemmas ["whoa", ".", "RT", "the", "killing", "be", "live", "-", "tweet", ".", "via"]
(c28-2 / multi-sentence
       :snt1 (c28-0 / whoa
                    :mode expressive)
       :snt2 (c28-6 / tweet-02
                    :ARG0 (c28-5 / publication
                                 :name (c28-4 / name
                                              :op1 "RT"))
                    :ARG1 (c28-3 / kill-01)
                    :manner (c28-1 / live)))

# ::snt : The killing was live-tweeted. via
# ::tokens [":", "The", "killing", "was", "live", "-", "tweeted", ".", "via"]
# ::lemmas [":", "the", "killing", "be", "live", "-", "tweet", ".", "via"]
(c29-1 / tweet-02
       :ARG1 (c29-2 / kill-01)
       :manner (c29-0 / live))

# ::snt how did this guy know
# ::tokens ["how", "did", "this", "guy", "know"]
# ::lemmas ["how", "do", "this", "guy", "know"]
(c30-1 / know-01
       :ARG0 (c30-2 / guy
                    :mod (c30-0 / this))
       :manner (c30-3 / amr-unknown))

# ::snt Look at his feed. He's been sustaining talk over this for days now
# ::tokens ["Look", "at", "his", "feed", ".", "He", "'s", "been", "sustaining", "talk", "over", "this", "for", "days", "now"]
# ::lemmas ["look", "at", "his", "feed", ".", "he", "be", "be", "sustain", "talk", "over", "this", "for", "days", "now"]
(c31-3 / multi-sentence
       :snt1 (c31-2 / look-01
                    :ARG0 (c31-1 / you)
                    :ARG1 (c31-4 / feed
                                 :poss (c31-0 / he))
                    :mode imperative)
       :snt2 (c31-10 / sustain-01
                     :ARG0 (c31-12 / he)
                     :ARG1 (c31-11 / talk-01
                                   :ARG1 (c31-9 / this))
                     :duration (c31-7 / multiple
                                      :op1 (c31-6 / temporal-quantity
                                                  :unit (c31-8 / day)
                                                  :quant 1))
                     :time (c31-5 / now)))

# ::snt I'm sorry I can't be more responsive and helpful. Hands tied up on a HUGE project right now
# ::tokens ["I", "'m", "sorry", "I", "ca", "n't", "be", "more", "responsive", "and", "helpful", ".", "Hands", "tied", "up", "on", "a", "HUGE", "project", "right", "now"]
# ::lemmas ["i", "be", "sorry", "i", "can", "not", "be", "more", "responsive", "and", "helpful", ".", "hand", "tie", "up", "on", "a", "huge", "project", "right", "now"]
(c32-2 / multi-sentence
       :snt1 (c32-11 / sorry-01
                     :ARG1 (c32-4 / i)
                     :ARG2 (c32-8 / possible-01
                                  :ARG1 (c32-14 / and
                                                :op1 (c32-9 / responsive-02
                                                            :ARG0 c32-4)
                                                :op2 (c32-0 / helpful-04
                                                            :ARG0 c32-4)
                                                :ARG2-of (c32-1 / have-degree-91
                                                                :ARG1 c32-4
                                                                :ARG3 (c32-10 / more)))
                                  :polarity -))
       :snt2 (c32-12 / tie-up-05
                     :ARG1 (c32-7 / hand)
                     :ARG2 (c32-13 / project
                                   :mod (c32-3 / huge))
                     :time (c32-6 / now
                                  :mod (c32-5 / right))))

# ::snt it's all a big nasty circus. The truth will never be known.
# ::tokens ["it", "'s", "all", "a", "big", "nasty", "circus", ".", "The", "truth", "will", "never", "be", "known", "."]
# ::lemmas ["it", "be", "all", "a", "big", "nasty", "circus", ".", "the", "truth", "will", "never", "be", "know", "."]
(c33-0 / multi-sentence
       :snt1 (c33-5 / circus
                    :mod (c33-4 / nasty)
                    :mod (c33-1 / big)
                    :domain (c33-3 / it
                                   :mod (c33-8 / all)))
       :snt2 (c33-7 / know-01
                    :ARG1 (c33-6 / truth)
                    :time (c33-2 / ever)
                    :polarity -))

# ::snt How does one determine if this is real?cc
# ::tokens ["How", "does", "one", "determine", "if", "this", "is", "real?cc"]
# ::lemmas ["how", "do", "one", "determine", "if", "this", "be", "real?cc"]
(c34-2 / determine-01
       :ARG0 (c34-0 / one)
       :ARG1 (c34-1 / real-04
                    :ARG1 (c34-3 / this))
       :ARG2 (c34-4 / amr-unknown))

# ::snt :Simply undoing RT &amp;waiting to see how it pans out.Appreciate everyone's responses though.
# ::tokens [":", "Simply", "undoing", "RT", "&", "amp;waiting", "to", "see", "how", "it", "pans", "out", ".", "Appreciate", "everyone", "'s", "responses", "though", "."]
# ::lemmas [":", "simply", "undo", "RT", "&", "amp;waiting", "to", "see", "how", "it", "pan", "out", ".", "appreciate", "everyone", "'s", "response", "though", "."]
(c35-2 / multi-sentence
       :snt1 (c35-3 / undo-01
                    :ARG1 (c35-16 / and
                                  :op1 (c35-11 / publication
                                               :name (c35-9 / name
                                                            :op1 "RT"))
                                  :op2 (c35-15 / publication
                                               :name (c35-10 / name
                                                             :op1 "amp")))
                    :manner (c35-13 / simple))
       :snt2 (c35-1 / wait-01
                    :ARG2 (c35-5 / see-01
                                 :ARG1 (c35-14 / thing
                                               :manner-of (c35-4 / pan-out-02
                                                                 :ARG1 (c35-8 / it)))))
       :snt3 (c35-7 / appreciate-02
                    :ARG1 (c35-12 / respond-01
                                  :ARG0 (c35-6 / everyone))
                    :ARG1-of (c35-0 / have-concession-91)))

# ::snt sleuthing, criticality, corroboration are essential while stl fresh trails of evidence imho
# ::tokens ["sleuthing", ",", "criticality", ",", "corroboration", "are", "essential", "while", "stl", "fresh", "trails", "of", "evidence", "imho"]
# ::lemmas ["sleuthing", ",", "criticality", ",", "corroboration", "be", "essential", "while", "stl", "fresh", "trail", "of", "evidence", "imho"]
(c36-2 / essential
       :domain (c36-9 / and
                      :op1 (c36-7 / sleuthing)
                      :op2 (c36-5 / critique-01)
                      :op3 (c36-4 / corroborate-01))
       :ARG1-of (c36-6 / contrast-01
                       :ARG2 (c36-8 / trail-01
                                    :ARG1 (c36-1 / evidence-01)
                                    :ARG1-of (c36-0 / fresh-04)
                                    :mod (c36-3 / imho))))

# ::snt I think the good doctor's intuition is perhaps correct?
# ::tokens ["I", "think", "the", "good", "doctor", "'s", "intuition", "is", "perhaps", "correct", "?"]
# ::lemmas ["i", "think", "the", "good", "doctor", "'s", "intuition", "be", "perhaps", "correct", "?"]
(c37-6 / think-01
       :polarity (c37-7 / amr-unknown)
       :ARG0 (c37-0 / i)
       :ARG1 (c37-1 / possible-01
                    :ARG1 (c37-3 / correct-02
                                 :ARG1 (c37-4 / intuition
                                              :poss (c37-2 / doctor
                                                           :ARG1-of (c37-5 / good-02))))))

# ::snt &amp; don't want to contribute to the churn just for the sake of participating.
# ::tokens ["&", "amp", ";", "do", "n't", "want", "to", "contribute", "to", "the", "churn", "just", "for", "the", "sake", "of", "participating", "."]
# ::lemmas ["&", "amp", ";", "do", "not", "want", "to", "contribute", "to", "the", "churn", "just", "for", "the", "sake", "of", "participate", "."]
(c38-5 / and
       :op2 (c38-1 / want-01
                   :ARG1 (c38-4 / contribute-01
                                :ARG2 (c38-3 / churn-01)
                                :purpose (c38-2 / participate-01
                                                :ARG1 c38-3
                                                :mod (c38-0 / just)))
                   :polarity -))

# ::snt Yea good point. Man what a mess.
# ::tokens ["Yea", "good", "point", ".", "Man", "what", "a", "mess", "."]
# ::lemmas ["yea", "good", "point", ".", "man", "what", "a", "mess", "."]
(c39-2 / multi-sentence
       :snt1 (c39-0 / yea)
       :snt2 (c39-3 / point-04
                    :ARG1-of (c39-5 / good-02))
       :snt3 (c39-4 / mess
                    :degree (c39-6 / so)
                    :domain (c39-1 / man)))

# ::snt asking the right questions always helps. Verification is important
# ::tokens ["asking", "the", "right", "questions", "always", "helps", ".", "Verification", "is", "important"]
# ::lemmas ["ask", "the", "right", "question", "always", "help", ".", "Verification", "be", "important"]
(c40-1 / multi-sentence
       :snt1 (c40-0 / help-01
                    :ARG0 (c40-8 / ask-01
                                 :ARG1 (c40-7 / thing
                                              :ARG1-of (c40-2 / question-01)
                                              :ARG1-of (c40-6 / right-06)))
                    :time (c40-3 / always))
       :snt2 (c40-4 / important-01
                    :ARG1 (c40-5 / verify-01)))

# ::snt Dunno, dude was clearly shook the hell up. Surprised it's only breaking now, too
# ::tokens ["Dunno", ",", "dude", "was", "clearly", "shook", "the", "hell", "up", ".", "Surprised", "it", "'s", "only", "breaking", "now", ",", "too"]
# ::lemmas ["Dunno", ",", "dude", "be", "clearly", "shake", "the", "hell", "up", ".", "surprise", "it", "be", "only", "break", "now", ",", "too"]
(c41-2 / multi-sentence
       :snt1 (c41-13 / and
                     :op1 (c41-0 / have-polarity-91
                                 :ARG2 -)
                     :op2 (c41-11 / shake-up-03
                                  :ARG1 (c41-8 / dude)
                                  :ARG1-of (c41-9 / clear-06)
                                  :mod (c41-1 / hell)))
       :snt2 (c41-5 / surprise-01
                    :ARG0 (c41-3 / break-13
                                 :ARG1 (c41-6 / it)
                                 :time (c41-7 / now)
                                 :mod (c41-4 / only)
                                 :mod (c41-12 / too))
                    :ARG1 (c41-10 / i)))

# ::snt Yeah and this isn't "live tweeted", it's the aftermath. I'd imagine there's a few rd party details.
# ::tokens ["Yeah", "and", "this", "is", "n't", "\"", "live", "tweeted", "\"", ",", "it", "'s", "the", "aftermath", ".", "I", "'d", "imagine", "there", "'s", "a", "few", "rd", "party", "details", "."]
# ::lemmas ["yeah", "and", "this", "be", "not", "\"", "live", "tweet", "\"", ",", "it", "be", "the", "aftermath", ".", "i", "would", "imagine", "there", "be", "a", "few", "rd", "party", "detail", "."]
(c42-1 / multi-sentence
       :snt1 (c42-13 / and
                     :op1 (c42-11 / tweet-01
                                  :manner (c42-0 / live)
                                  :domain (c42-10 / this)
                                  :polarity -)
                     :op2 (c42-3 / aftermath-01
                                 :domain (c42-6 / this)))
       :snt2 (c42-4 / imagine-01
                    :ARG0 (c42-9 / i)
                    :ARG1 (c42-8 / detail-01
                                 :ARG0 (c42-7 / party
                                              :mod (c42-12 / political-party
                                                           :name (c42-5 / name
                                                                        :op1 "Rd")))
                                 :quant (c42-2 / few))))
