# ::snt proverb21-24
# ::tokens ["proverb21", "-", "24"]
# ::lemmas ["proverb21", "-", "24"]
(c1-0 / amr-empty)

# ::snt try talking to your citizens instead.
# ::tokens ["try", "talking", "to", "your", "citizens", "instead", "."]
# ::lemmas ["try", "talk", "to", "your", "citizen", "instead", "."]
(c2-4 / try-01
      :ARG0 (c2-0 / you)
      :ARG1 (c2-3 / talk-01
                  :ARG0 c2-0
                  :ARG2 (c2-2 / citizen
                              :poss c2-0))
      :ARG1-of (c2-1 / instead-of-91)
      :mode imperative)

# ::snt I hope it's to resign. We need leaders not you dickweeds. Fuck off.
# ::tokens ["I", "hope", "it", "'s", "to", "resign", ".", "We", "need", "leaders", "not", "you", "dickweeds", ".", "Fuck", "off", "."]
# ::lemmas ["i", "hope", "it", "be", "to", "resign", ".", "we", "need", "leader", "not", "you", "dickweed", ".", "fuck", "off", "."]
(c3-4 / multi-sentence
      :snt1 (c3-0 / hope-01
                  :ARG0 (c3-6 / i)
                  :ARG1 (c3-10 / resign-01
                               :ARG1 (c3-12 / it)))
      :snt2 (c3-11 / contrast-01
                   :ARG1 (c3-7 / need-01
                               :ARG0 (c3-1 / we)
                               :ARG1 (c3-9 / person
                                           :ARG0-of (c3-3 / lead-02)))
                   :ARG2 (c3-8 / need-01
                               :ARG0 c3-1
                               :ARG1 (c3-13 / dickweird
                                            :domain (c3-2 / you))
                               :polarity -))
      :snt3 (c3-5 / fuck-off-03
                  :mode expressive))

# ::snt you assholes brought this to our shores, .. you should both resign immediately. scumbags! .
# ::tokens ["you", "assholes", "brought", "this", "to", "our", "shores", ",", "..", "you", "should", "both", "resign", "immediately", ".", "scumbags", "!", "."]
# ::lemmas ["you", "asshole", "bring", "this", "to", "our", "shore", ",", "..", "you", "should", "both", "resign", "immediately", ".", "scumbag", "!", "."]
(c4-2 / multi-sentence
      :snt1 (c4-3 / bring-01
                  :ARG0 (c4-12 / asshole
                               :domain (c4-0 / you))
                  :ARG1 (c4-11 / this)
                  :ARG2 (c4-10 / shore
                               :poss (c4-1 / we)))
      :snt2 (c4-7 / recommend-01
                  :ARG1 (c4-6 / resign-01
                              :ARG0 (c4-9 / you
                                          :mod (c4-8 / both))
                              :time (c4-5 / immediate))
                  :ARG2 c4-9)
      :snt3 (c4-4 / scumbag
                  :mode expressive))

# ::snt Haven't we already been through enough today?
# ::tokens ["Have", "n't", "we", "already", "been", "through", "enough", "today", "?"]
# ::lemmas ["have", "not", "we", "already", "be", "through", "enough", "today", "?"]
(c5-0 / have-degree-91
      :ARG1 (c5-1 / we)
      :ARG2 (c5-5 / through)
      :ARG3 (c5-2 / enough)
      :time (c5-4 / today)
      :ARG1-of (c5-3 / request-confirmation-91))

# ::snt . Adress who you want but leave the guards on the War Memorial &amp; let the CFA wear their uniforms. Stop the cringe!
# ::tokens [".", "Adress", "who", "you", "want", "but", "leave", "the", "guards", "on", "the", "War", "Memorial", "&", "amp", ";", "let", "the", "CFA", "wear", "their", "uniforms", ".", "Stop", "the", "cringe", "!"]
# ::lemmas [".", "adress", "who", "you", "want", "but", "leave", "the", "guard", "on", "the", "War", "Memorial", "&", "amp", ";", "let", "the", "CFA", "wear", "their", "uniform", ".", "stop", "the", "cringe", "!"]
(c6-0 / multi-sentence
      :snt1 (c6-20 / contrast-01
                   :ARG1 (c6-6 / admit-02
                               :ARG0 (c6-18 / you)
                               :ARG1 (c6-2 / person
                                           :ARG1-of (c6-15 / want-01
                                                           :ARG0 c6-18))
                               :mode imperative)
                   :ARG2 (c6-8 / leave-14
                               :ARG0 c6-18
                               :ARG1 (c6-5 / person
                                           :ARG0-of (c6-14 / guard-01)
                                           :location (c6-17 / and
                                                            :op1 (c6-10 / building
                                                                        :name (c6-11 / name
                                                                                     :op1 "War"
                                                                                     :op2 "Memorial"))
                                                            :op2 (c6-12 / amp)))
                               :mode imperative))
      :snt2 (c6-21 / let-01
                   :ARG0 c6-18
                   :ARG1 (c6-1 / wear-01
                               :ARG0 (c6-9 / person
                                           :ARG0-of (c6-7 / have-org-role-91
                                                          :ARG1 (c6-13 / military
                                                                       :name (c6-19 / name
                                                                                    :op1 "CFA"))))
                               :ARG1 (c6-16 / uniform
                                            :poss c6-9))
                   :mode imperative)
      :snt3 (c6-4 / stop-01
                  :ARG0 c6-18
                  :ARG1 (c6-3 / cringe-01
                              :ARG0 c6-18)
                  :mode imperative))

# ::snt Got some blood in the game now. Don't ya?
# ::tokens ["Got", "some", "blood", "in", "the", "game", "now", ".", "Do", "n't", "ya", "?"]
# ::lemmas ["get", "some", "blood", "in", "the", "game", "now", ".", "do", "not", "ya", "?"]
(c7-5 / get-02
      :ARG0 (c7-0 / you)
      :ARG1 (c7-1 / blood
                  :quant (c7-6 / some))
      :location (c7-3 / game)
      :time (c7-2 / now)
      :ARG1-of (c7-4 / request-confirmation-91))

# ::snt would this have happened if the gov't tried other peaceful means of solving the problems in the middle east
# ::tokens ["would", "this", "have", "happened", "if", "the", "gov't", "tried", "other", "peaceful", "means", "of", "solving", "the", "problems", "in", "the", "middle", "east"]
# ::lemmas ["would", "this", "have", "happen", "if", "the", "gov't", "try", "other", "peaceful", "mean", "of", "solve", "the", "problem", "in", "the", "middle", "east"]
(c8-0 / have-condition-91
      :ARG1 (c8-10 / this)
      :ARG2 (c8-8 / try-01
                  :ARG0 (c8-7 / government-organization
                              :ARG0-of (c8-6 / govern-01))
                  :ARG1 (c8-2 / means
                              :mod (c8-5 / peaceful)
                              :mod (c8-3 / other)
                              :instrument-of (c8-9 / solve-01
                                                   :ARG1 (c8-11 / problem
                                                                :location (c8-1 / world-region
                                                                                :name (c8-4 / name
                                                                                            :op1 "Middle"
                                                                                            :op2 "East"))))))
      :polarity (c8-12 / amr-unknown))

# ::snt I'm sorry you had a terrible day but YOU HAVE A GIANT STICK UP YOUR ASS.
# ::tokens ["I", "'m", "sorry", "you", "had", "a", "terrible", "day", "but", "YOU", "HAVE", "A", "GIANT", "STICK", "UP", "YOUR", "ASS", "."]
# ::lemmas ["i", "be", "sorry", "you", "have", "a", "terrible", "day", "but", "you", "have", "a", "giant", "stick", "up", "your", "ASS", "."]
(c9-6 / contrast-01
      :ARG1 (c9-8 / sorry-01
                  :ARG1 (c9-4 / i)
                  :ARG2 (c9-0 / have-03
                              :ARG0 (c9-1 / you
                                          :part (c9-10 / ass))
                              :ARG1 (c9-5 / day
                                          :ARG1-of (c9-9 / terrible-01))))
      :ARG2 (c9-2 / have-03
                  :ARG0 c9-1
                  :ARG1 (c9-3 / stick-01
                              :ARG1 c9-10
                              :ARG2 (c9-7 / GIANT))))

# ::snt Any word on when that might happen?
# ::tokens ["Any", "word", "on", "when", "that", "might", "happen", "?"]
# ::lemmas ["any", "word", "on", "when", "that", "might", "happen", "?"]
(c10-0 / word
       :polarity (c10-5 / amr-unknown)
       :mod (c10-1 / any)
       :topic (c10-4 / time
                     :time-of (c10-2 / possible-01
                                     :ARG1 (c10-3 / that))))

# ::snt What will you be up to?
# ::tokens ["What", "will", "you", "be", "up", "to", "?"]
# ::lemmas ["what", "will", "you", "be", "up", "to", "?"]
(c11-2 / intend-01
       :ARG0 (c11-0 / you)
       :ARG1 (c11-1 / amr-unknown))

# ::snt The Emergency Measures Act. Use it. Stop protecting evil at the cost of the innocent.
# ::tokens ["The", "Emergency", "Measures", "Act", ".", "Use", "it", ".", "Stop", "protecting", "evil", "at", "the", "cost", "of", "the", "innocent", "."]
# ::lemmas ["The", "Emergency", "Measures", "Act", ".", "use", "it", ".", "stop", "protect", "evil", "at", "the", "cost", "of", "the", "innocent", "."]
(c12-2 / multi-sentence
       :snt1 (c12-1 / law
                    :name (c12-6 / name
                                 :op1 "Emergency"
                                 :op2 "M Measures"
                                 :op3 "Act"))
       :snt2 (c12-3 / use-01
                    :ARG0 (c12-0 / you)
                    :ARG1 (c12-5 / it)
                    :mode imperative)
       :snt3 (c12-10 / stop-01
                     :ARG0 c12-0
                     :ARG1 (c12-7 / protect-01
                                  :ARG0 c12-0
                                  :ARG1 (c12-4 / evil)
                                  :ARG1-of (c12-8 / cost-01
                                                  :ARG2 (c12-11 / person
                                                                :ARG1-of (c12-9 / innocent-01))))
                     :mode imperative))

# ::snt stay ...live ...work and than we just kick you out
# ::tokens ["stay", "...", "live", "...", "work", "and", "than", "we", "just", "kick", "you", "out"]
# ::lemmas ["stay", "...", "live", "...", "work", "and", "than", "we", "just", "kick", "you", "out"]
(c13-7 / and
       :op1 (c13-5 / stay-01
                   :ARG1 (c13-1 / you)
                   :mode imperative)
       :op2 (c13-3 / live-01
                   :ARG0 c13-1
                   :mode imperative)
       :op3 (c13-2 / work-01
                   :ARG0 c13-1
                   :mode imperative)
       :op4 (c13-6 / kick-out-05
                   :ARG0 (c13-4 / we)
                   :ARG1 c13-1
                   :mod (c13-0 / just)))

# ::snt with respect, waiting hours to make statement to Canadians might have been higher priority
# ::tokens ["with", "respect", ",", "waiting", "hours", "to", "make", "statement", "to", "Canadians", "might", "have", "been", "higher", "priority"]
# ::lemmas ["with", "respect", ",", "wait", "hours", "to", "make", "statement", "to", "Canadians", "might", "have", "be", "high", "priority"]
(c14-6 / possible-01
       :ARG1 (c14-12 / priority
                     :domain (c14-1 / wait-01
                                    :ARG2 (c14-10 / state-01
                                                  :ARG2 (c14-3 / person
                                                               :mod (c14-8 / country
                                                                           :name (c14-4 / name
                                                                                        :op1 "Canada"))))
                                    :duration (c14-2 / multiple
                                                     :op1 (c14-11 / temporal-quantity
                                                                  :unit (c14-0 / hour)
                                                                  :quant 1)))
                     :ARG1-of (c14-13 / have-degree-91
                                      :ARG2 (c14-5 / high-02
                                                   :ARG1 c14-12)
                                      :ARG3 (c14-7 / more)))
       :ARG1-of (c14-9 / respect-01))

# ::snt You will pay for the damage you've done to Canada. Your hate mongering will never be forgotten. Your names cursed.
# ::tokens ["You", "will", "pay", "for", "the", "damage", "you", "'ve", "done", "to", "Canada", ".", "Your", "hate", "mongering", "will", "never", "be", "forgotten", ".", "Your", "names", "cursed", "."]
# ::lemmas ["you", "will", "pay", "for", "the", "damage", "you", "'ve", "do", "to", "Canada", ".", "your", "hate", "mongering", "will", "never", "be", "forget", ".", "your", "name", "curse", "."]
(c15-3 / multi-sentence
       :snt1 (c15-6 / pay-01
                    :ARG0 (c15-1 / you)
                    :ARG3 (c15-7 / damage-01
                                 :ARG0 c15-1
                                 :ARG1 (c15-8 / country
                                              :name (c15-5 / name
                                                           :op1 "Canada"))))
       :snt2 (c15-2 / forget-01
                    :ARG1 (c15-9 / monger
                                 :mod (c15-0 / hate-01)
                                 :poss (c15-11 / you))
                    :time (c15-4 / ever)
                    :polarity -)
       :snt3 (c15-10 / curse-02
                     :ARG2 c15-5
                     :poss c15-11))

# ::snt let's ban islam
# ::tokens ["let", "'s", "ban", "islam"]
# ::lemmas ["let", "us", "ban", "islam"]
(c16-3 / ban-01
       :ARG0 (c16-1 / we)
       :ARG1 (c16-2 / religious-group
                    :name (c16-0 / name
                                 :op1 "Islam"))
       :mode imperative)

# ::snt What time is the PM on tv tonight?
# ::tokens ["What", "time", "is", "the", "PM", "on", "tv", "tonight", "?"]
# ::lemmas ["what", "time", "be", "the", "PM", "on", "tv", "tonight", "?"]
(c17-1 / date-entity
       :medium (c17-3 / television)
       :time c17-1
       :dayperiod (c17-0 / night)
       :mod (c17-2 / today)
       :time (c17-4 / amr-unknown)
       :time "PM")
