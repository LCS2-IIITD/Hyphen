# ::snt It's a swisscafe...
# ::tokens ["It", "'s", "a", "swisscafe", "..."]
# ::lemmas ["it", "be", "a", "swisscafe", "..."]
(c1-0 / swisscafe
      :domain (c1-1 / it))

# ::snt that's so scary omfg
# ::tokens ["that", "'s", "so", "scary", "omfg"]
# ::lemmas ["that", "be", "so", "scary", "omfg"]
(c2-0 / scary-03
      :ARG0 (c2-2 / that)
      :degree (c2-1 / so)
      :mod (c2-3 / omfg
                 :mode expressive))

# ::snt what
# ::tokens ["what"]
# ::lemmas ["what"]
(c3-0 / amr-unknown)

# ::snt like no one knows about this but I suppose I live in aus so I'd know about it.
# ::tokens ["like", "no", "one", "knows", "about", "this", "but", "I", "suppose", "I", "live", "in", "aus", "so", "I", "'d", "know", "about", "it", "."]
# ::lemmas ["like", "no", "one", "know", "about", "this", "but", "i", "suppose", "i", "live", "in", "aus", "so", "i", "would", "know", "about", "it", "."]
(c4-7 / contrast-01
      :ARG1 (c4-6 / resemble-01
                  :ARG2 (c4-3 / know-01
                              :ARG0 (c4-4 / no-one)
                              :ARG1 (c4-11 / this)))
      :ARG2 (c4-10 / suppose-01
                   :ARG0 (c4-2 / i)
                   :ARG1 (c4-0 / live-01
                               :ARG0 c4-2
                               :location (c4-8 / city
                                               :name (c4-5 / name
                                                           :op1 "Aus"))
                               :ARG0-of (c4-9 / cause-01
                                              :ARG1 (c4-1 / know-01
                                                          :ARG0 c4-2
                                                          :ARG1 c4-11)))))

# ::snt my friends mum is being held hostage in there, I'm so scared Liam come give me a hug??
# ::tokens ["my", "friends", "mum", "is", "being", "held", "hostage", "in", "there", ",", "I", "'m", "so", "scared", "Liam", "come", "give", "me", "a", "hug", "?", "?"]
# ::lemmas ["my", "friend", "mum", "be", "be", "hold", "hostage", "in", "there", ",", "i", "be", "so", "scared", "Liam", "come", "give", "i", "a", "hug", "?", "?"]
(c5-0 / hold-01
      :ARG1 (c5-9 / person
                  :ARG0-of (c5-17 / have-rel-role-91
                                  :ARG1 (c5-16 / person
                                               :ARG0-of (c5-8 / have-rel-role-91
                                                              :ARG1 (c5-6 / i)
                                                              :ARG2 (c5-1 / friend)))
                                  :ARG2 (c5-2 / mum)))
      :ARG2 (c5-13 / hostage)
      :location (c5-15 / there)
      :ARG0-of (c5-11 / cause-01
                      :ARG1 (c5-12 / scare-01
                                   :ARG0 (c5-10 / come-01
                                                :ARG1 (c5-4 / person
                                                            :name (c5-7 / name
                                                                        :op1 "Liam"))
                                                :ARG4 (c5-3 / hug-01
                                                            :ARG0 c5-4
                                                            :ARG1 c5-6)
                                                :polarity (c5-14 / amr-unknown))
                                   :ARG1 c5-6
                                   :degree (c5-5 / so))))

# ::snt what the fuck
# ::tokens ["what", "the", "fuck"]
# ::lemmas ["what", "the", "fuck"]
(c6-1 / amr-unknown
      :mod (c6-0 / fuck))

# ::snt SRS
# ::tokens ["SRS"]
# ::lemmas ["SRS"]
(c7-1 / person
      :name (c7-0 / name
                  :op1 "SRS"))

# ::snt HWAT
# ::tokens ["HWAT"]
# ::lemmas ["HWAT"]
(c8-0 / water)

# ::snt thank the lord my boys aren't there right now
# ::tokens ["thank", "the", "lord", "my", "boys", "are", "n't", "there", "right", "now"]
# ::lemmas ["thank", "the", "lord", "my", "boy", "be", "not", "there", "right", "now"]
(c9-7 / thank-01
      :ARG0 (c9-2 / i)
      :ARG1 (c9-0 / lord)
      :ARG2 (c9-1 / be-located-at-91
                  :ARG1 (c9-5 / boy
                              :poss c9-2)
                  :ARG2 (c9-6 / there)
                  :time (c9-3 / now
                              :mod (c9-4 / right))
                  :polarity -))

# ::snt I'm watching it on tv. It's really terrible, isn't it?
# ::tokens ["I", "'m", "watching", "it", "on", "tv", ".", "It", "'s", "really", "terrible", ",", "is", "n't", "it", "?"]
# ::lemmas ["i", "be", "watch", "it", "on", "tv", ".", "it", "be", "really", "terrible", ",", "be", "not", "it", "?"]
(c10-2 / multi-sentence
       :snt1 (c10-0 / watch-01
                    :ARG0 (c10-3 / i)
                    :ARG1 (c10-6 / it)
                    :medium (c10-8 / television))
       :snt2 (c10-7 / terrible-01
                    :ARG1 (c10-1 / it)
                    :degree (c10-5 / really)
                    :ARG1-of (c10-4 / request-confirmation-91)))

# ::snt why aren't you verified
# ::tokens ["why", "are", "n't", "you", "verified"]
# ::lemmas ["why", "be", "not", "you", "verify"]
(c11-0 / verify-01
       :ARG1 (c11-2 / you)
       :ARG1-of (c11-1 / cause-01
                       :ARG0 (c11-3 / amr-unknown))
       :polarity -)

# ::snt *huuuuugs*
# ::tokens ["*", "huuuuugs", "*"]
# ::lemmas ["*", "huuuuug", "*"]
(c12-0 / laugh-01
       :mode expressive)

# ::snt im on the other side of the country and im still scared af
# ::tokens ["i", "m", "on", "the", "other", "side", "of", "the", "country", "and", "i", "m", "still", "scared", "af"]
# ::lemmas ["i", "m", "on", "the", "other", "side", "of", "the", "country", "and", "i", "m", "still", "scared", "af"]
(c13-8 / and
       :op1 (c13-1 / be-located-at-91
                   :ARG1 (c13-5 / i)
                   :ARG2 (c13-7 / side
                                :mod (c13-2 / other)
                                :mod (c13-6 / country)))
       :op2 (c13-3 / scare-01
                   :ARG1 c13-5
                   :mod (c13-0 / still)
                   :mod (c13-4 / af)))

# ::snt there's -2 men holding people hostage I'm done
# ::tokens ["there", "'s", "-2", "men", "holding", "people", "hostage", "I", "'m", "done"]
# ::lemmas ["there", "be", "-2", "man", "hold", "people", "hostage", "i", "be", "do"]
(c14-0 / hold-01
       :ARG0 (c14-1 / man
                    :quant 2)
       :ARG1 (c14-4 / hostage)
       :time (c14-2 / be-done-08
                    :ARG0 (c14-3 / i)))

# ::snt exactly what I thought
# ::tokens ["exactly", "what", "I", "thought"]
# ::lemmas ["exactly", "what", "i", "think"]
(c15-1 / thing
       :ARG1-of (c15-3 / think-01
                       :ARG0 (c15-2 / i))
       :mod (c15-0 / exact))
