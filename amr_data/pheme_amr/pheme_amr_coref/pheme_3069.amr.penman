# ::snt /2 trustworthy honest n reports. She is objective. Never gives her opinion. Best out there
# ::tokens ["/2", "trustworthy", "honest", "n", "reports", ".", "She", "is", "objective", ".", "Never", "gives", "her", "opinion", ".", "Best", "out", "there"]
# ::lemmas ["/2", "trustworthy", "honest", "n", "report", ".", "she", "be", "objective", ".", "never", "give", "her", "opinion", ".", "well", "out", "there"]
(c1-2 / multi-sentence
      :snt1 (c1-7 / report-01
                  :mod (c1-12 / trustworthy)
                  :ARG1-of (c1-0 / honest-01)
                  :quant 2)
      :snt2 (c1-4 / objective
                  :domain (c1-11 / she))
      :snt3 (c1-9 / give-01
                  :ARG0 c1-11
                  :ARG1 (c1-10 / thing
                               :ARG1-of (c1-1 / opine-01
                                              :ARG0 c1-11))
                  :time (c1-5 / ever)
                  :polarity -)
      :snt4 (c1-8 / good-02
                  :location (c1-3 / out-there)
                  :ARG2-of (c1-13 / have-degree-91
                                  :ARG1 c1-3
                                  :ARG3 (c1-6 / most))))

# ::snt chief tells me he "didn't know" media was at . Newser now minutes late
# ::tokens ["chief", "tells", "me", "he", "\"", "did", "n't", "know", "\"", "media", "was", "at", ".", "Newser", "now", "minutes", "late"]
# ::lemmas ["chief", "tell", "i", "he", "\"", "do", "not", "know", "\"", "medium", "be", "at", ".", "Newser", "now", "minutes", "late"]
(c2-1 / multi-sentence
      :snt1 (c2-14 / tell-01
                   :ARG0 (c2-10 / chief)
                   :ARG1 (c2-5 / know-01
                               :ARG0 c2-10
                               :ARG1 (c2-3 / be-located-at-91
                                           :ARG1 (c2-8 / media)
                                           :ARG2 (c2-6 / newspaper
                                                       :name (c2-7 / name
                                                                   :op1 "Newser")))
                               :polarity -)
                   :ARG2 (c2-4 / i))
      :snt2 (c2-0 / late-02
                  :ARG1 (c2-9 / newspaper
                              :name (c2-11 / name
                                           :op1 "Newser"))
                  :ARG2 (c2-2 / multiple
                              :op1 (c2-13 / temporal-quantity
                                          :unit (c2-12 / minute)
                                          :quant 1))
                  :time (c2-15 / now)))

# ::snt Such a sad thing that things are so disorganized. Presser in ? ? Ever?
# ::tokens ["Such", "a", "sad", "thing", "that", "things", "are", "so", "disorganized", ".", "Presser", "in", "?", "?", "Ever", "?"]
# ::lemmas ["such", "a", "sad", "thing", "that", "thing", "be", "so", "disorganized", ".", "presser", "in", "?", "?", "ever", "?"]
(c3-1 / multi-sentence
      :snt1 (c3-9 / thing
                  :ARG0-of (c3-8 / sad-02
                                 :degree (c3-3 / such)
                                 :ARG1-of (c3-6 / cause-01
                                                :ARG0 (c3-2 / organize-01
                                                            :ARG1 (c3-7 / thing)
                                                            :degree (c3-0 / so)
                                                            :polarity -))))
      :snt2 (c3-5 / person
                  :polarity (c3-11 / amr-unknown)
                  :ARG0-of (c3-10 / press-01)
                  :time (c3-4 / ever)))

# ::snt : Indicative of all their actions? Can't comment on that, but this is very rude.
# ::tokens [":", "Indicative", "of", "all", "their", "actions", "?", "Ca", "n't", "comment", "on", "that", ",", "but", "this", "is", "very", "rude", "."]
# ::lemmas [":", "indicative", "of", "all", "their", "action", "?", "can", "not", "comment", "on", "that", ",", "but", "this", "be", "very", "rude", "."]
(c4-0 / multi-sentence
      :snt1 (c4-2 / indicate-01
                  :polarity (c4-12 / amr-unknown)
                  :ARG1 (c4-1 / act-02
                              :ARG0 (c4-11 / they)
                              :mod (c4-3 / all)))
      :snt2 (c4-6 / contrast-01
                  :ARG1 (c4-4 / possible-01
                              :ARG1 (c4-5 / comment-01
                                          :ARG3 (c4-9 / that))
                              :polarity -)
                  :ARG2 (c4-7 / rude-01
                              :ARG1 (c4-8 / this)
                              :degree (c4-10 / very))))

# ::snt Wish I had a dollar for every thing Chief Jackson "didn't know". I could repay the national debt.
# ::tokens ["Wish", "I", "had", "a", "dollar", "for", "every", "thing", "Chief", "Jackson", "\"", "did", "n't", "know", "\"", ".", "I", "could", "repay", "the", "national", "debt", "."]
# ::lemmas ["wish", "i", "have", "a", "dollar", "for", "every", "thing", "Chief", "Jackson", "\"", "do", "not", "know", "\"", ".", "i", "could", "repay", "the", "national", "debt", "."]
(c5-3 / multi-sentence
      :snt1 (c5-1 / wish-01
                  :ARG0 (c5-5 / i)
                  :ARG1 (c5-0 / have-03
                              :ARG0 c5-5
                              :ARG1 (c5-10 / dollar)
                              :ARG1-of (c5-11 / cause-01
                                              :ARG0 (c5-15 / thing
                                                           :mod (c5-4 / every)
                                                           :ARG1-of (c5-6 / know-01
                                                                          :ARG0 (c5-9 / person
                                                                                      :name (c5-7 / name
                                                                                                  :op1 "Jackson")
                                                                                      :ARG0-of (c5-17 / have-org-role-91
                                                                                                      :ARG2 (c5-12 / chief)))
                                                                          :polarity -)))))
      :snt2 (c5-16 / possible-01
                   :ARG1 (c5-13 / repay-01
                                :ARG0 (c5-14 / i)
                                :ARG1 (c5-2 / debt
                                            :mod (c5-8 / nation)))))

# ::snt ARREST THEM!!!
# ::tokens ["ARREST", "THEM", "!", "!", "!"]
# ::lemmas ["arrest", "they", "!", "!", "!"]
(c6-0 / embarrass-01
      :ARG1 (c6-1 / they)
      :mode expressive)

# ::snt The guy calls a press conference, and then is surprised that the media showed up. What a goof.
# ::tokens ["The", "guy", "calls", "a", "press", "conference", ",", "and", "then", "is", "surprised", "that", "the", "media", "showed", "up", ".", "What", "a", "goof", "."]
# ::lemmas ["the", "guy", "call", "a", "press", "conference", ",", "and", "then", "be", "surprised", "that", "the", "medium", "show", "up", ".", "what", "a", "goof", "."]
(c7-1 / multi-sentence
      :snt1 (c7-11 / and
                   :op1 (c7-5 / call-02
                              :ARG0 (c7-6 / guy)
                              :ARG1 (c7-4 / conference
                                          :mod (c7-3 / press)))
                   :op2 (c7-9 / surprise-01
                              :ARG0 (c7-2 / show-up-02
                                          :ARG1 (c7-7 / media))
                              :ARG1 c7-6
                              :time (c7-10 / then)))
      :snt2 (c7-8 / goof
                  :degree (c7-0 / so)))

# ::snt Indicative of all their actions?
# ::tokens ["Indicative", "of", "all", "their", "actions", "?"]
# ::lemmas ["indicative", "of", "all", "their", "action", "?"]
(c8-1 / icative
      :polarity (c8-4 / amr-unknown)
      :domain (c8-0 / act-02
                    :ARG0 (c8-3 / they)
                    :mod (c8-2 / all)))

# ::snt Chief got more mileage out of "I didn't know" in the last hrs than Reagan in terms
# ::tokens ["Chief", "got", "more", "mileage", "out", "of", "\"", "I", "did", "n't", "know", "\"", "in", "the", "last", "hrs", "than", "Reagan", "in", "terms"]
# ::lemmas ["chief", "get", "more", "mileage", "out", "of", "\"", "i", "do", "not", "know", "\"", "in", "the", "last", "hrs", "than", "Reagan", "in", "term"]
(c9-7 / get-01
      :ARG0 (c9-6 / chief)
      :ARG1 (c9-2 / mileage
                  :ARG1-of (c9-0 / have-quant-91
                                 :ARG3 (c9-4 / more)
                                 :ARG4 (c9-5 / person
                                             :name (c9-3 / name
                                                         :op1 "Reagan"))))
      :ARG2 (c9-8 / say-01
                  :ARG0 c9-6
                  :ARG1 (c9-9 / know-01
                              :ARG0 c9-6
                              :polarity -))
      :time (c9-10 / hour
                   :mod (c9-1 / last)))

# ::snt Oh, and I'm sure he did this on purpose, just to frustrate you. C'mon now, Laura. Report objectively.
# ::tokens ["Oh", ",", "and", "I", "'m", "sure", "he", "did", "this", "on", "purpose", ",", "just", "to", "frustrate", "you", ".", "C'm", "on", "now", ",", "Laura", ".", "Report", "objectively", "."]
# ::lemmas ["oh", ",", "and", "i", "be", "sure", "he", "do", "this", "on", "purpose", ",", "just", "to", "frustrate", "you", ".", "come", "on", "now", ",", "Laura", ".", "Report", "objectively", "."]
(c10-4 / multi-sentence
       :snt1 (c10-16 / and
                     :op2 (c10-13 / sure-02
                                  :ARG0 (c10-6 / i)
                                  :ARG1 (c10-10 / do-02
                                                :ARG0 (c10-0 / he)
                                                :ARG1 (c10-14 / this)
                                                :ARG2 (c10-9 / purpose)
                                                :purpose (c10-3 / frustrate-01
                                                                :ARG0 c10-0
                                                                :ARG1 (c10-1 / you)
                                                                :mod (c10-2 / just)))))
       :snt2 (c10-11 / come-on-25
                     :ARG1 (c10-15 / person
                                   :name (c10-7 / name
                                                :op1 "Laura"))
                     :time (c10-8 / now)
                     :mode imperative)
       :snt3 (c10-12 / report-01
                     :manner (c10-5 / objective)))

# ::snt HE WAS THERE DOING AN INTERVIEW ON CNN WHILE EVERYONE WAS SETTING UP!!!!!
# ::tokens ["HE", "WAS", "THERE", "DOING", "AN", "INTERVIEW", "ON", "CNN", "WHILE", "EVERYONE", "WAS", "SETTING", "UP", "!", "!", "!", "!", "!"]
# ::lemmas ["he", "be", "there", "do", "an", "interview", "ON", "CNN", "while", "everyone", "be", "set", "up", "!", "!", "!", "!", "!"]
(c11-2 / interview-01
       :ARG0 (c11-0 / he)
       :medium (c11-4 / publication
                      :name (c11-3 / name
                                   :op1 "CNN"))
       :time (c11-5 / set-up-15
                    :ARG1 (c11-1 / everyone)))

# ::snt Jen if u want the truth about this disaster keep up with Laura. I follow both stations n find her to be /2
# ::tokens ["Jen", "if", "u", "want", "the", "truth", "about", "this", "disaster", "keep", "up", "with", "Laura", ".", "I", "follow", "both", "stations", "n", "find", "her", "to", "be", "/2"]
# ::lemmas ["Jen", "if", "u", "want", "the", "truth", "about", "this", "disaster", "keep", "up", "with", "Laura", ".", "i", "follow", "both", "station", "n", "find", "she", "to", "be", "/2"]
(c12-0 / multi-sentence
       :snt1 (c12-3 / say-01
                    :ARG0 (c12-12 / i)
                    :ARG1 (c12-14 / keep-up-05
                                  :ARG0 (c12-1 / person
                                               :name (c12-10 / name
                                                             :op1 "Jen"))
                                  :ARG1 (c12-4 / person
                                               :name (c12-17 / name
                                                             :op1 "Laura"))
                                  :condition (c12-11 / want-01
                                                     :ARG0 c12-1
                                                     :ARG1 (c12-19 / truth
                                                                   :topic (c12-2 / disaster
                                                                                 :mod (c12-18 / this)))))
                    :ARG2 c12-1)
       :snt2 (c12-5 / and
                    :op1 (c12-7 / follow-02
                                :ARG0 (c12-13 / i)
                                :ARG1 (c12-9 / station
                                             :mod (c12-8 / both)))
                    :op2 (c12-16 / find-01
                                 :ARG0 c12-13
                                 :ARG1 (c12-6 / have-mod-91
                                              :ARG1 c12-4
                                              :ARG2 (c12-15 / slash
                                                            :op1 2
                                                            :op2 2)))))

# ::snt Its messed up. Keep us updated n b safe
# ::tokens ["Its", "messed", "up", ".", "Keep", "us", "updated", "n", "b", "safe"]
# ::lemmas ["its", "mess", "up", ".", "keep", "we", "update", "n", "b", "safe"]
(c13-2 / multi-sentence
       :snt1 (c13-5 / mess-up-02
                    :ARG1 (c13-4 / it))
       :snt2 (c13-8 / and
                    :op1 (c13-7 / keep-02
                                :ARG0 (c13-0 / you)
                                :ARG1 (c13-3 / update-02
                                             :ARG0 c13-0
                                             :ARG1 (c13-1 / we))
                                :mode imperative)
                    :op2 (c13-6 / safe-01
                                :ARG1 c13-0
                                :mode imperative)))

# ::snt Memo said it was scheduled at WaWa.
# ::tokens ["Memo", "said", "it", "was", "scheduled", "at", "WaWa", "."]
# ::lemmas ["Memo", "say", "it", "be", "schedule", "at", "WaWa", "."]
(c14-6 / say-01
       :ARG0 (c14-5 / person
                    :name (c14-4 / name
                                 :op1 "Memo"))
       :ARG1 (c14-1 / schedule-01
                    :ARG1 (c14-3 / it)
                    :ARG3 (c14-2 / event
                                 :location (c14-0 / WaWa))))

# ::snt Reassuring &gt;MT: chief tells me he "didn't know" media was at .
# ::tokens ["Reassuring", "&", "gt;MT", ":", "chief", "tells", "me", "he", "\"", "did", "n't", "know", "\"", "media", "was", "at", "."]
# ::lemmas ["Reassuring", "&", "gt;mt", ":", "chief", "tell", "i", "he", "\"", "do", "not", "know", "\"", "medium", "be", "at", "."]
(c15-6 / and
       :op1 (c15-3 / reassure-01)
       :op2 (c15-5 / tell-01
                   :ARG0 (c15-4 / chief)
                   :ARG1 (c15-2 / know-01
                                :ARG0 c15-4
                                :ARG1 (c15-0 / media)
                                :polarity -)
                   :ARG2 (c15-1 / i)))

# ::snt It took him minutes to figure out the media was at a place they've been staged all week? Wow.
# ::tokens ["It", "took", "him", "minutes", "to", "figure", "out", "the", "media", "was", "at", "a", "place", "they", "'ve", "been", "staged", "all", "week", "?", "Wow", "."]
# ::lemmas ["it", "take", "he", "minutes", "to", "figure", "out", "the", "medium", "be", "at", "a", "place", "they", "'ve", "be", "stage", "all", "week", "?", "wow", "."]
(c16-3 / multi-sentence
       :snt1 (c16-12 / take-10
                     :ARG0 (c16-2 / figure-out-05
                                  :ARG0 (c16-0 / he)
                                  :ARG1 (c16-5 / be-located-at-91
                                               :ARG1 (c16-7 / media)
                                               :ARG2 (c16-8 / place
                                                            :ARG1-of (c16-11 / stage-01
                                                                             :ARG0 c16-7
                                                                             :duration (c16-1 / week
                                                                                              :mod (c16-13 / all))))))
                     :ARG1 (c16-4 / multiple
                                  :op1 (c16-10 / temporal-quantity
                                               :unit (c16-9 / minute)
                                               :quant 1))
                     :ARG2 c16-0)
       :snt2 (c16-6 / wow
                    :mode expressive))

# ::snt huh? Wasn't it billed as a press conf? He looked so nervous, I thought he was going to have a heart attack.
# ::tokens ["huh", "?", "Was", "n't", "it", "billed", "as", "a", "press", "conf", "?", "He", "looked", "so", "nervous", ",", "I", "thought", "he", "was", "going", "to", "have", "a", "heart", "attack", "."]
# ::lemmas ["huh", "?", "be", "not", "it", "bill", "as", "a", "press", "conf", "?", "he", "look", "so", "nervous", ",", "i", "think", "he", "be", "go", "to", "have", "a", "heart", "attack", "."]
(c17-2 / multi-sentence
       :snt1 (c17-0 / huh
                    :mode expressive)
       :snt2 (c17-4 / bill-02
                    :ARG1 (c17-6 / it)
                    :ARG2 (c17-11 / conf
                                  :mod (c17-9 / press))
                    :polarity (c17-15 / amr-unknown)
                    :polarity -)
       :snt3 (c17-1 / look-02
                    :ARG0 (c17-3 / he)
                    :ARG1 (c17-7 / nervous-01
                                 :ARG1 c17-3
                                 :degree (c17-13 / so)
                                 :ARG0-of (c17-10 / cause-01
                                                  :ARG1 (c17-14 / think-01
                                                                :ARG0 (c17-12 / i)
                                                                :ARG1 (c17-8 / have-06
                                                                             :ARG0 c17-3
                                                                             :ARG1 (c17-5 / heart-attack)))))))

# ::snt Now, there's an idea.
# ::tokens ["Now", ",", "there", "'s", "an", "idea", "."]
# ::lemmas ["now", ",", "there", "be", "an", "idea", "."]
(c18-1 / idea
       :time (c18-0 / now))
