# ::snt I am very familiar with the Fullerton case you are referring to. Sorry he was not a kid although his death was tragic.
# ::tokens ["I", "am", "very", "familiar", "with", "the", "Fullerton", "case", "you", "are", "referring", "to", ".", "Sorry", "he", "was", "not", "a", "kid", "although", "his", "death", "was", "tragic", "."]
# ::lemmas ["i", "be", "very", "familiar", "with", "the", "Fullerton", "case", "you", "be", "refer", "to", ".", "sorry", "he", "be", "not", "a", "kid", "although", "his", "death", "be", "tragic", "."]
(c1-3 / multi-sentence
      :snt1 (c1-2 / familiarize-01
                  :ARG1 (c1-4 / i)
                  :ARG2 (c1-9 / case-03
                              :ARG2 (c1-7 / person
                                          :name (c1-5 / name
                                                      :op1 "Fullerton"))
                              :ARG1-of (c1-8 / refer-01
                                             :ARG0 (c1-1 / you)))
                  :degree (c1-6 / very))
      :snt2 (c1-11 / sorry-01
                   :ARG1 c1-4)
      :ARG2 (c1-13 / kid
                   :domain (c1-0 / he)
                   :polarity -)
      :concession (c1-12 / tragic
                         :domain (c1-10 / die-01
                                        :ARG1 c1-0)))

# ::snt I don't believe all these people did absolutely nothing wrong
# ::tokens ["I", "do", "n't", "believe", "all", "these", "people", "did", "absolutely", "nothing", "wrong"]
# ::lemmas ["i", "do", "not", "believe", "all", "these", "people", "do", "absolutely", "nothing", "wrong"]
(c2-1 / believe-01
      :ARG0 (c2-3 / i)
      :ARG1 (c2-6 / do-02
                  :ARG0 (c2-5 / person
                              :mod (c2-8 / all)
                              :mod (c2-7 / this))
                  :ARG1 (c2-4 / nothing
                              :ARG1-of (c2-0 / wrong-02))
                  :manner (c2-2 / absolute))
      :polarity -)

# ::snt I guess so. Ill follow the government from here. Lmao good luck to you fucks.
# ::tokens ["I", "guess", "so", ".", "Ill", "follow", "the", "government", "from", "here", ".", "Lmao", "good", "luck", "to", "you", "fucks", "."]
# ::lemmas ["i", "guess", "so", ".", "Ill", "follow", "the", "government", "from", "here", ".", "lmao", "good", "luck", "to", "you", "fuck", "."]
(c3-4 / multi-sentence
      :snt1 (c3-13 / guess-01
                   :ARG0 (c3-8 / i)
                   :ARG1 (c3-16 / so))
      :snt2 (c3-3 / follow-02
                  :ARG0 (c3-14 / i)
                  :ARG1 (c3-11 / government-organization
                               :ARG0-of (c3-10 / govern-01))
                  :source (c3-0 / here))
      :snt3 (c3-5 / luck
                  :ARG1-of (c3-15 / good-02)
                  :mod (c3-9 / fucking
                             :mode expressive)
                  :ARG2-of (c3-12 / laugh-01
                                  :ARG0 (c3-6 / i)
                                  :manner (c3-1 / loud))
                  :beneficiary (c3-2 / you
                                     :mod (c3-7 / fuck))))

# ::snt Congrats on your tweet!
# ::tokens ["Congrats", "on", "your", "tweet", "!"]
# ::lemmas ["congrat", "on", "your", "tweet", "!"]
(c4-2 / congratulate-01
      :ARG1 (c4-1 / you)
      :ARG2 (c4-0 / tweet-01
                  :ARG0 c4-1))

# ::snt Reading comprehension. Under , teen, kid none are adults all are used to describe youth. Have used those terms consistently.
# ::tokens ["Reading", "comprehension", ".", "Under", ",", "teen", ",", "kid", "none", "are", "adults", "all", "are", "used", "to", "describe", "youth", ".", "Have", "used", "those", "terms", "consistently", "."]
# ::lemmas ["read", "comprehension", ".", "under", ",", "teen", ",", "kid", "none", "be", "adult", "all", "be", "use", "to", "describe", "youth", ".", "have", "use", "those", "term", "consistently", "."]
(c5-1 / multi-sentence
      :snt1 (c5-8 / comprehend-01
                  :ARG1 (c5-7 / read-01))
      :snt2 (c5-2 / use-01
                  :ARG1 (c5-16 / and
                               :op1 (c5-6 / person
                                          :mod (c5-14 / teen))
                               :op2 (c5-15 / person
                                           :mod (c5-4 / kid))
                               :op3 (c5-3 / adult
                                          :mod (c5-5 / all)
                                          :polarity -))
                  :ARG2 (c5-9 / describe-01
                              :ARG0 c5-16
                              :ARG1 (c5-0 / youth)))
      :snt3 (c5-13 / use-01
                   :ARG1 (c5-11 / term
                                :mod (c5-10 / that))
                   :ARG1-of (c5-12 / consistent-02)))

# ::snt lets be real now that bottom right one was ignorant on both sides.
# ::tokens ["lets", "be", "real", "now", "that", "bottom", "right", "one", "was", "ignorant", "on", "both", "sides", "."]
# ::lemmas ["let", "be", "real", "now", "that", "bottom", "right", "one", "be", "ignorant", "on", "both", "side", "."]
(c6-6 / real-04
      :ARG1 (c6-0 / we)
      :time (c6-5 / now)
      :ARG1-of (c6-7 / cause-01
                     :ARG0 (c6-3 / ignorant-02
                                 :ARG1 (c6-2 / one
                                             :mod (c6-1 / bottom)
                                             :ARG1-of (c6-4 / right-08))
                                 :ARG2 (c6-9 / side
                                             :mod (c6-8 / both))))
      :mode imperative)

# ::snt : it happens but white people dont make it an excuse to riot and act like apes. We let justice take over wow
# ::tokens [":", "it", "happens", "but", "white", "people", "do", "nt", "make", "it", "an", "excuse", "to", "riot", "and", "act", "like", "apes", ".", "We", "let", "justice", "take", "over", "wow"]
# ::lemmas [":", "it", "happen", "but", "white", "people", "do", "not", "make", "it", "an", "excuse", "to", "riot", "and", "act", "like", "ape", ".", "we", "let", "justice", "take", "over", "wow"]
(c7-3 / multi-sentence
      :snt1 (c7-12 / contrast-01
                   :ARG1 (c7-7 / it)
                   :ARG2 (c7-11 / make-02
                                :ARG0 (c7-10 / person
                                             :ARG1-of (c7-1 / white-02))
                                :ARG1 (c7-5 / excuse-02
                                            :ARG1 (c7-16 / and
                                                         :op1 (c7-13 / riot-01)
                                                         :op2 (c7-6 / act-01
                                                                    :ARG1 (c7-9 / ape)))
                                            :ARG2 (c7-14 / it))
                                :polarity -))
      :snt2 (c7-2 / let-01
                  :ARG0 (c7-8 / we)
                  :ARG1 (c7-15 / take-over-12
                               :ARG0 (c7-0 / justice))
                  :mod (c7-4 / wow
                             :mode expressive)))

# ::snt I hate but found their article
# ::tokens ["I", "hate", "but", "found", "their", "article"]
# ::lemmas ["i", "hate", "but", "find", "their", "article"]
(c8-3 / contrast-01
      :ARG1 (c8-0 / hate-01
                  :ARG0 (c8-2 / i))
      :ARG2 (c8-1 / find-01
                  :ARG0 c8-2
                  :ARG1 (c8-5 / article
                              :poss (c8-4 / they))))

# ::snt We have to raise that question until it resonates. When was an unarmed White kid ever killed by law enforcement?
# ::tokens ["We", "have", "to", "raise", "that", "question", "until", "it", "resonates", ".", "When", "was", "an", "unarmed", "White", "kid", "ever", "killed", "by", "law", "enforcement", "?"]
# ::lemmas ["we", "have", "to", "raise", "that", "question", "until", "it", "resonate", ".", "when", "be", "an", "unarmed", "white", "kid", "ever", "kill", "by", "law", "enforcement", "?"]
(c9-2 / multi-sentence
      :snt1 (c9-5 / obligate-01
                  :ARG1 (c9-0 / we)
                  :ARG2 (c9-13 / raise-01
                               :ARG0 c9-0
                               :ARG1 (c9-7 / question-01
                                           :mod (c9-14 / that))
                               :time (c9-3 / until
                                           :op1 (c9-10 / resonate-01
                                                       :ARG1 c9-7))))
      :snt2 (c9-11 / kill-01
                   :ARG0 (c9-6 / enforce-01
                               :ARG1 (c9-1 / law))
                   :ARG1 (c9-8 / kid
                               :ARG1-of (c9-15 / arm-01
                                               :polarity -)
                               :ARG1-of (c9-12 / white-02))
                   :time (c9-4 / ever)
                   :time (c9-9 / amr-unknown)))

# ::snt Research is also important and something you failed to do. Took me literally secs to find example fitting your criteria.
# ::tokens ["Research", "is", "also", "important", "and", "something", "you", "failed", "to", "do", ".", "Took", "me", "literally", "secs", "to", "find", "example", "fitting", "your", "criteria", "."]
# ::lemmas ["research", "be", "also", "important", "and", "something", "you", "fail", "to", "do", ".", "take", "i", "literally", "sec", "to", "find", "example", "fit", "your", "criterion", "."]
(c10-2 / multi-sentence
       :snt1 (c10-17 / and
                     :op1 (c10-8 / important-01
                                 :ARG1 (c10-10 / research-01)
                                 :mod (c10-7 / also))
                     :op2 (c10-15 / something
                                  :ARG1-of (c10-11 / do-02
                                                   :ARG0 (c10-0 / you)
                                                   :ARG1-of (c10-1 / fail-01
                                                                   :ARG0 c10-0))))
       :snt2 (c10-16 / take-10
                     :ARG0 (c10-14 / you)
                     :ARG1 (c10-12 / i)
                     :ARG2 (c10-5 / secure-02
                                  :ARG1 c10-12
                                  :mod (c10-3 / literal))
                     :purpose (c10-9 / find-01
                                     :ARG0 c10-12
                                     :ARG1 (c10-6 / example
                                                  :ARG0-of (c10-4 / fit-06
                                                                  :ARG2 (c10-13 / criteria
                                                                                :poss c10-14))))))

# ::snt : Unarmed white male in California beaten to death by cops for min : You serious?
# ::tokens [":", "Unarmed", "white", "male", "in", "California", "beaten", "to", "death", "by", "cops", "for", "min", ":", "You", "serious", "?"]
# ::lemmas [":", "unarmed", "white", "male", "in", "California", "beat", "to", "death", "by", "cop", "for", "min", ":", "you", "serious", "?"]
(c11-3 / multi-sentence
       :snt1 (c11-4 / beat-01
                    :ARG0 (c11-10 / cop)
                    :ARG1 (c11-8 / male
                                 :ARG1-of (c11-13 / arm-01
                                                  :polarity -)
                                 :ARG1-of (c11-0 / white-02))
                    :ARG2 (c11-9 / die-01
                                 :ARG1 c11-8)
                    :location (c11-11 / state
                                      :name (c11-7 / name
                                                   :op1 "California"))
                    :duration (c11-12 / temporal-quantity
                                      :unit (c11-2 / minute)
                                      :quant 1))
       :snt2 (c11-5 / serious-01
                    :ARG1 (c11-1 / you)
                    :polarity (c11-6 / amr-unknown)))

# ::snt WHY DONT YOU LEAVE THE SOUTH FIRST AND SEE SOMTHING YOU LOOSER COUNTRY BUMPKIN CUNT YOU WILL NEVER LEAVE THE SOUTH
# ::tokens ["WHY", "DONT", "YOU", "LEAVE", "THE", "SOUTH", "FIRST", "AND", "SEE", "SOMTHING", "YOU", "LOOSER", "COUNTRY", "BUMPKIN", "CUNT", "YOU", "WILL", "NEVER", "LEAVE", "THE", "SOUTH"]
# ::lemmas ["why", "dont", "you", "leave", "the", "south", "first", "and", "see", "somthe", "you", "LOOSER", "COUNTRY", "bumpkin", "cunt", "you", "will", "never", "leave", "the", "south"]
(c12-11 / cause-01
        :ARG0 (c12-14 / amr-unknown)
        :ARG1 (c12-8 / and
                     :op1 (c12-1 / leave-11
                                 :ARG0 (c12-0 / you
                                              :ARG0-of (c12-2 / favor-01
                                                              :ARG1 (c12-10 / country
                                                                            :name (c12-9 / name
                                                                                         :op1 "United"
                                                                                         :op2 "States"
                                                                                         :op3 "of"
                                                                                         :op4 "America"))
                                                              :ARG0-of (c12-4 / bungle-01
                                                                              :ARG1 c12-10)))
                                 :ARG1 (c12-13 / south)
                                 :ord (c12-5 / ordinal-entity
                                             :value 1)
                                 :polarity -)
                     :op2 (c12-6 / see-01
                                 :ARG0 c12-0
                                 :ARG1 (c12-3 / something)
                                 :polarity -)
                     :condition-of (c12-12 / leave-11
                                           :ARG0 c12-0
                                           :ARG1 c12-13
                                           :time (c12-7 / ever)
                                           :polarity -)))

# ::snt Textbook straw man. No one said that. This is elementary level and a touch embarrassing. Premise = horrible; agree to disagree.
# ::tokens ["Textbook", "straw", "man", ".", "No", "one", "said", "that", ".", "This", "is", "elementary", "level", "and", "a", "touch", "embarrassing", ".", "Premise", "=", "horrible", ";", "agree", "to", "disagree", "."]
# ::lemmas ["textbook", "straw", "man", ".", "no", "one", "say", "that", ".", "this", "be", "elementary", "level", "and", "a", "touch", "embarrassing", ".", "premise", "=", "horrible", ";", "agree", "to", "disagree", "."]
(c13-3 / multi-sentence
       :snt1 (c13-12 / say-01
                     :ARG0 (c13-7 / no-one)
                     :ARG1 (c13-13 / that))
       :snt2 (c13-14 / and
                     :op1 (c13-2 / level
                                 :mod (c13-5 / elementary)
                                 :domain (c13-11 / this))
                     :op2 (c13-4 / embarrass-01
                                 :ARG0 c13-11
                                 :degree (c13-8 / touch)))
       :snt3 (c13-1 / equal-01
                    :ARG1 (c13-9 / premise)
                    :ARG2 (c13-0 / horrible))
       :snt4 (c13-6 / agree-01
                    :ARG1 (c13-10 / disagree-01)))

# ::snt White kids aren't running around in gangs shooting up the city like niggers are.
# ::tokens ["White", "kids", "are", "n't", "running", "around", "in", "gangs", "shooting", "up", "the", "city", "like", "niggers", "are", "."]
# ::lemmas ["white", "kid", "be", "not", "run", "around", "in", "gang", "shoot", "up", "the", "city", "like", "nigger", "be", "."]
(c14-7 / run-02
       :ARG0 (c14-11 / kid
                     :ARG1-of (c14-1 / white-02))
       :direction (c14-12 / around)
       :manner (c14-9 / gang
                      :ARG0-of (c14-10 / shoot-02
                                       :ARG1 (c14-8 / city)
                                       :direction (c14-3 / up)))
       :ARG1-of (c14-5 / resemble-01
                       :ARG2 (c14-6 / person
                                    :ARG0-of (c14-0 / have-03
                                                    :ARG1 (c14-2 / job))
                                    :ARG1-of (c14-4 / black-05)))
       :polarity -)

# ::snt Are you honestly trying to say Whites are killed by police at the rate as Blacks? If so your lack of information is appalling.
# ::tokens ["Are", "you", "honestly", "trying", "to", "say", "Whites", "are", "killed", "by", "police", "at", "the", "rate", "as", "Blacks", "?", "If", "so", "your", "lack", "of", "information", "is", "appalling", "."]
# ::lemmas ["be", "you", "honestly", "try", "to", "say", "Whites", "be", "kill", "by", "police", "at", "the", "rate", "as", "Blacks", "?", "if", "so", "your", "lack", "of", "information", "be", "appalling", "."]
(c15-4 / multi-sentence
       :snt1 (c15-15 / try-01
                     :polarity (c15-17 / amr-unknown)
                     :ARG0 (c15-1 / you)
                     :ARG1 (c15-14 / say-01
                                   :ARG0 c15-1
                                   :ARG1 (c15-10 / kill-01
                                                 :ARG0 (c15-11 / police)
                                                 :ARG1 (c15-16 / person
                                                               :ARG1-of (c15-2 / white-02))
                                                 :ARG1-of (c15-12 / rate-entity-91
                                                                  :ARG2 (c15-5 / person
                                                                               :ARG1-of (c15-6 / black-05)))))
                     :ARG1-of (c15-0 / honest-01))
       :snt2 (c15-8 / appall-01
                    :ARG0 (c15-3 / lack-01
                                 :ARG0 (c15-13 / you)
                                 :ARG1 (c15-9 / information)
                                 :condition (c15-7 / so))))

# ::snt unarmed white guy beaten to death by cops. Cops get away with it in court. Example
# ::tokens ["unarmed", "white", "guy", "beaten", "to", "death", "by", "cops", ".", "Cops", "get", "away", "with", "it", "in", "court", ".", "Example"]
# ::lemmas ["unarmed", "white", "guy", "beat", "to", "death", "by", "cop", ".", "cop", "get", "away", "with", "it", "in", "court", ".", "example"]
(c16-1 / multi-sentence
       :snt1 (c16-2 / beat-01
                    :ARG0 (c16-6 / cop)
                    :ARG1 (c16-7 / guy
                                 :ARG1-of (c16-0 / white-02)
                                 :ARG1-of (c16-10 / arm-01
                                                  :polarity -))
                    :ARG0-of (c16-3 / exemplify-01))
       :snt2 (c16-5 / get-away-08
                    :ARG0 (c16-8 / cop)
                    :ARG1 (c16-4 / it)
                    :location (c16-9 / court)))

# ::snt ehh they would of been shot sooner or later
# ::tokens ["ehh", "they", "would", "of", "been", "shot", "sooner", "or", "later"]
# ::lemmas ["ehh", "they", "would", "of", "be", "shoot", "soon", "or", "later"]
(c17-0 / shoot-01
       :ARG2 (c17-2 / they)
       :time (c17-1 / eventual)
       :mod (c17-3 / eh
                   :mode expressive))

# ::snt This is a call to action for all, including police forces. What that call to action is, I wish I had to answer.
# ::tokens ["This", "is", "a", "call", "to", "action", "for", "all", ",", "including", "police", "forces", ".", "What", "that", "call", "to", "action", "is", ",", "I", "wish", "I", "had", "to", "answer", "."]
# ::lemmas ["this", "be", "a", "call", "to", "action", "for", "all", ",", "include", "police", "force", ".", "what", "that", "call", "to", "action", "be", ",", "i", "wish", "i", "have", "to", "answer", "."]
(c18-2 / multi-sentence
       :snt1 (c18-9 / call-03
                    :ARG1 (c18-12 / act-02)
                    :beneficiary (c18-4 / all
                                        :ARG2-of (c18-5 / include-91
                                                        :ARG1 (c18-1 / force
                                                                     :mod (c18-7 / police))))
                    :domain (c18-11 / this))
       :snt2 (c18-0 / wish-01
                    :ARG0 (c18-10 / i)
                    :ARG1 (c18-3 / obligate-01
                                 :ARG1 c18-10
                                 :ARG2 (c18-6 / answer-01
                                              :ARG0 c18-10
                                              :ARG1 (c18-8 / call-03
                                                           :ARG1 c18-12)))))

# ::snt Oh bullshit. You jumped in without fully comprehending my original statement. I agree embarassing.
# ::tokens ["Oh", "bullshit", ".", "You", "jumped", "in", "without", "fully", "comprehending", "my", "original", "statement", ".", "I", "agree", "embarassing", "."]
# ::lemmas ["oh", "bullshit", ".", "you", "jump", "in", "without", "fully", "comprehend", "my", "original", "statement", ".", "i", "agree", "embarassing", "."]
(c19-3 / multi-sentence
       :snt1 (c19-5 / bullshit-01
                    :mod (c19-6 / oh))
       :snt2 (c19-0 / jump-in-04
                    :ARG0 (c19-1 / you)
                    :manner (c19-9 / comprehend-01
                                   :ARG0 c19-1
                                   :ARG1 (c19-11 / state-01
                                                 :ARG0 (c19-8 / i)
                                                 :mod (c19-2 / original))
                                   :degree (c19-4 / full)
                                   :polarity -))
       :snt3 (c19-12 / agree-01
                     :ARG0 (c19-10 / i)
                     :ARG0-of (c19-7 / embarrass-01)))

# ::snt He was a homeless unarmed guy with schizophrenia beaten to death by + armed cops. Not a good enough example? It's about age now?
# ::tokens ["He", "was", "a", "homeless", "unarmed", "guy", "with", "schizophrenia", "beaten", "to", "death", "by", "+", "armed", "cops", ".", "Not", "a", "good", "enough", "example", "?", "It", "'s", "about", "age", "now", "?"]
# ::lemmas ["he", "be", "a", "homeless", "unarmed", "guy", "with", "schizophrenia", "beat", "to", "death", "by", "+", "armed", "cop", ".", "not", "a", "good", "enough", "example", "?", "it", "be", "about", "age", "now", "?"]
(c21-1 / multi-sentence
       :snt1 (c21-12 / guy
                     :ARG1-of (c21-16 / arm-01
                                      :polarity -)
                     :domain (c21-0 / he)
                     :ARG0-of (c21-17 / have-03
                                      :ARG1 (c21-14 / schizophrenia)
                                      :polarity -)
                     :ARG0-of (c21-2 / beat-01
                                     :ARG1 (c21-11 / cop
                                                   :ARG1-of (c21-6 / arm-01))
                                     :ARG2 (c21-10 / die-01
                                                   :ARG1 c21-11)))
       :snt2 (c21-5 / exemplify-01
                    :polarity (c21-8 / amr-unknown)
                    :ARG1-of (c21-9 / have-degree-91
                                    :ARG2 (c21-13 / good-02
                                                  :ARG1 c21-5)
                                    :ARG3 (c21-3 / enough)))
       :snt3 (c21-15 / age-01
                     :time (c21-7 / now
                                  :mod (c21-4 / about))))

# ::snt What makes me extra said is another young life gone.
# ::tokens ["What", "makes", "me", "extra", "said", "is", "another", "young", "life", "gone", "."]
# ::lemmas ["what", "make", "i", "extra", "say", "be", "another", "young", "life", "go", "."]
(c22-2 / make-02
       :ARG0 (c22-5 / go-02
                    :ARG0 (c22-1 / life
                                 :mod (c22-0 / young)
                                 :mod (c22-7 / another)))
       :ARG1 (c22-6 / say-01
                    :ARG0 (c22-4 / i)
                    :mod (c22-3 / extra)))

# ::snt it happens but white people dont make it an excuse to riot and act like apes. We let justice take over
# ::tokens ["it", "happens", "but", "white", "people", "do", "nt", "make", "it", "an", "excuse", "to", "riot", "and", "act", "like", "apes", ".", "We", "let", "justice", "take", "over"]
# ::lemmas ["it", "happen", "but", "white", "people", "do", "not", "make", "it", "an", "excuse", "to", "riot", "and", "act", "like", "ape", ".", "we", "let", "justice", "take", "over"]
(c23-3 / multi-sentence
       :snt1 (c23-12 / contrast-01
                     :ARG1 (c23-6 / it)
                     :ARG2 (c23-11 / make-02
                                   :ARG0 (c23-10 / person
                                                 :ARG1-of (c23-1 / white-02))
                                   :ARG1 (c23-4 / excuse-02
                                                :ARG1 (c23-16 / and
                                                              :op1 (c23-13 / riot-01)
                                                              :op2 (c23-5 / act-01
                                                                          :ARG1-of (c23-7 / resemble-01
                                                                                          :ARG2 (c23-9 / ape))))
                                                :ARG2 (c23-14 / it))
                                   :polarity -))
       :snt2 (c23-2 / let-01
                    :ARG0 (c23-8 / we)
                    :ARG1 (c23-15 / take-over-12
                                  :ARG0 (c23-0 / justice))))

# ::snt research it, they're protecting and serving the shit outta everybody. It's not just black v white. And they're getting off
# ::tokens ["research", "it", ",", "they", "'re", "protecting", "and", "serving", "the", "shit", "outta", "everybody", ".", "It", "'s", "not", "just", "black", "v", "white", ".", "And", "they", "'re", "getting", "off"]
# ::lemmas ["research", "it", ",", "they", "be", "protect", "and", "serve", "the", "shit", "outta", "everybody", ".", "it", "be", "not", "just", "black", "v", "white", ".", "and", "they", "be", "get", "off"]
(c24-3 / multi-sentence
       :snt1 (c24-11 / research-01
                     :ARG0 (c24-1 / you)
                     :ARG1 (c24-8 / it)
                     :mode imperative)
       :snt2 (c24-17 / and
                     :op1 (c24-10 / protect-01
                                  :ARG0 (c24-16 / they)
                                  :ARG1 (c24-5 / everybody))
                     :op2 (c24-15 / serve-01
                                  :ARG0 c24-16
                                  :ARG2 c24-5)
                     :mod (c24-6 / shit
                                 :mode expressive))
       :snt3 (c24-9 / versus
                    :op1 (c24-4 / black-05)
                    :op2 (c24-2 / white-02)
                    :domain (c24-12 / it)
                    :mod (c24-0 / just
                                :polarity -))
       :snt4 (c24-7 / and
                    :op2 (c24-13 / get-off-23
                                 :ARG1 (c24-14 / they))))

# ::snt idk. When's the last time a cop killed an Asian kid? Or an Arabic kid... Or a Latino kid...
# ::tokens ["idk", ".", "When", "'s", "the", "last", "time", "a", "cop", "killed", "an", "Asian", "kid", "?", "Or", "an", "Arabic", "kid", "...", "Or", "a", "Latino", "kid", "..."]
# ::lemmas ["idk", ".", "when", "be", "the", "last", "time", "a", "cop", "kill", "an", "Asian", "kid", "?", "or", "an", "Arabic", "kid", "...", "or", "a", "latino", "kid", "..."]
(c25-17 / ask-01
        :ARG0 (c25-5 / i)
        :ARG1 (c25-16 / kill-01
                      :ARG0 (c25-10 / cop)
                      :ARG1 (c25-1 / or
                                   :op1 (c25-2 / kid
                                               :mod (c25-9 / continent
                                                           :name (c25-6 / name
                                                                        :op1 "Asia")))
                                   :op2 (c25-15 / kid
                                                :mod (c25-0 / language
                                                            :name (c25-7 / name
                                                                         :op1 "Arabic")))
                                   :op3 (c25-11 / kid
                                                :mod (c25-3 / ethnic-group
                                                            :name (c25-8 / name
                                                                         :op1 "Latino"))))
                      :time (c25-4 / amr-unknown)
                      :mod (c25-13 / last))
        :ARG2 (c25-12 / person
                      :name (c25-14 / name
                                    :op1 "idk")))

# ::snt When's the last time a white kid was unjustly killed by law enforcement?Just spread the word
# ::tokens ["When", "'s", "the", "last", "time", "a", "white", "kid", "was", "unjustly", "killed", "by", "law", "enforcement?Just", "spread", "the", "word"]
# ::lemmas ["when", "be", "the", "last", "time", "a", "white", "kid", "be", "unjustly", "kill", "by", "law", "enforcement?Just", "spread", "the", "word"]
(c26-8 / spread-01
       :ARG0 (c26-1 / you)
       :ARG1 (c26-2 / word)
       :mod (c26-0 / just)
       :time (c26-3 / last
                    :op1 (c26-9 / kill-01
                                :ARG0 (c26-4 / enforce-01
                                             :ARG1 (c26-7 / law))
                                :ARG1 (c26-5 / kid
                                             :ARG1-of (c26-6 / white-02))
                                :ARG1-of (c26-10 / just-02
                                                 :polarity -)))
       :time (c26-11 / amr-unknown)
       :mode imperative)

# ::snt You're backpedaling and changing your original argument. You even said under . It's over. Know that I don't entirely disagree.
# ::tokens ["You", "'re", "backpedaling", "and", "changing", "your", "original", "argument", ".", "You", "even", "said", "under", ".", "It", "'s", "over", ".", "Know", "that", "I", "do", "n't", "entirely", "disagree", "."]
# ::lemmas ["you", "be", "backpedal", "and", "change", "your", "original", "argument", ".", "you", "even", "say", "under", ".", "it", "be", "over", ".", "know", "that", "i", "do", "not", "entirely", "disagree", "."]
(c27-2 / multi-sentence
       :snt1 (c27-17 / and
                     :op1 (c27-4 / backpedal-01
                                 :ARG0 (c27-0 / you))
                     :op2 (c27-12 / change-01
                                  :ARG0 c27-0
                                  :ARG1 (c27-9 / argue-01
                                               :ARG0 c27-0
                                               :mod (c27-5 / original))))
       :snt2 (c27-15 / say-01
                     :ARG0 (c27-14 / you)
                     :ARG1 (c27-3 / under)
                     :mod (c27-7 / even))
       :snt3 (c27-1 / over-01
                    :ARG1 (c27-10 / it))
       :snt4 (c27-16 / know-01
                     :ARG0 (c27-6 / you)
                     :ARG1 (c27-11 / disagree-01
                                   :ARG0 (c27-13 / i)
                                   :degree (c27-8 / entire)
                                   :polarity -)
                     :mode imperative))

# ::snt bitch you so wack &amp; pathetic sit your tired ass down somewhere. Get a life. I wanna be black so bad I get tans headass
# ::tokens ["bitch", "you", "so", "wack", "&", "amp", ";", "pathetic", "sit", "your", "tired", "ass", "down", "somewhere", ".", "Get", "a", "life", ".", "I", "wanna", "be", "black", "so", "bad", "I", "get", "tans", "headass"]
# ::lemmas ["bitch", "you", "so", "wack", "&", "amp", ";", "pathetic", "sit", "your", "tired", "ass", "down", "somewhere", ".", "get", "a", "life", ".", "i", "wanna", "be", "black", "so", "bad", "i", "get", "tans", "headass"]
(c28-0 / multi-sentence
       :snt1 (c28-10 / bitch-01
                     :ARG0 (c28-15 / i)
                     :ARG1 (c28-19 / you
                                   :mod (c28-14 / wack-and-amp
                                                :degree (c28-5 / so))))
       :snt2 (c28-12 / sit-01
                     :ARG0 (c28-21 / you
                                   :mod (c28-3 / pathetic)
                                   :part (c28-6 / ass
                                                :ARG1-of (c28-23 / tire-01)
                                                :ARG1-of c28-12))
                     :ARG2 (c28-20 / somewhere)
                     :mode imperative)
       :snt3 (c28-13 / get-01
                     :ARG0 (c28-1 / you)
                     :ARG1 (c28-9 / life)
                     :mode imperative)
       :snt4 (c28-2 / want-01
                    :ARG0 (c28-17 / i)
                    :ARG1 (c28-16 / black-05
                                  :ARG1 c28-17
                                  :ARG1-of (c28-22 / bad-07
                                                   :ARG2-of (c28-8 / have-degree-91
                                                                   :ARG1 c28-16
                                                                   :ARG3 (c28-11 / so)
                                                                   :ARG6 (c28-4 / get-01
                                                                                :ARG0 c28-17
                                                                                :ARG1 (c28-7 / headass
                                                                                             :part-of (c28-18 / tans))))))))

# ::snt : because... yall actually get justice THANK YOUUUU
# ::tokens [":", "because", "...", "y", "all", "actually", "get", "justice", "THANK", "YOUUUU"]
# ::lemmas [":", "because", "...", "you", "all", "actually", "get", "justice", "thank", "youuuu"]
(c29-4 / cause-01
       :ARG0 (c29-5 / get-01
                    :ARG0 (c29-1 / you
                                 :mod (c29-7 / all))
                    :ARG1 (c29-0 / justice)
                    :ARG1-of (c29-2 / actual-02))
       :ARG1-of (c29-6 / thank-01
                       :ARG0 (c29-3 / i)
                       :ARG1 c29-1))

# ::snt December , in San Antonio.
# ::tokens ["December", ",", "in", "San", "Antonio", "."]
# ::lemmas ["December", ",", "in", "San", "Antonio", "."]
(c30-2 / city
       :name (c30-0 / name
                    :op1 "San"
                    :op2 "Antonio")
       :time (c30-1 / date-entity
                    :month 12))

# ::snt fat crooked teeth Cracker Jack ass
# ::tokens ["fat", "crooked", "teeth", "Cracker", "Jack", "ass"]
# ::lemmas ["fat", "crooked", "tooth", "Cracker", "Jack", "ass"]
(c31-6 / and
       :op1 (c31-5 / tooth
                   :ARG1-of (c31-4 / crooked-02)
                   :ARG1-of (c31-0 / fat-03))
       :op2 (c31-1 / ass
                   :part-of (c31-3 / person
                                   :name (c31-2 / name
                                                :op1 "Cracker"
                                                :op2 "Jack"))))

# ::snt : Just spread the word y'all forgot my cousin Tyree. Tazed to death by police.
# ::tokens [":", "Just", "spread", "the", "word", "y'", "all", "forgot", "my", "cousin", "Tyree", ".", "Tazed", "to", "death", "by", "police", "."]
# ::lemmas [":", "just", "spread", "the", "word", "you", "all", "forget", "my", "cousin", "Tyree", ".", "taze", "to", "death", "by", "police", "."]
(c32-4 / multi-sentence
       :snt1 (c32-12 / spread-03
                     :ARG0 (c32-1 / you
                                  :mod (c32-14 / all))
                     :ARG1 (c32-2 / word
                                  :mod (c32-3 / forget-01
                                              :ARG0 c32-1
                                              :ARG1 (c32-9 / person
                                                           :name (c32-8 / name
                                                                        :op1 "Tyree")
                                                           :ARG0-of (c32-0 / have-rel-role-91
                                                                           :ARG1 (c32-7 / i)
                                                                           :ARG2 (c32-11 / cousin)))))
                     :mod (c32-5 / just))
       :snt2 (c32-6 / aze-01
                    :ARG0 (c32-13 / police)
                    :ARG1 c32-9)
       :degree (c32-10 / die-01
                       :ARG1 c32-9))

# ::snt Your example did not fit my critieria, and your repeating untruths does not make them true.
# ::tokens ["Your", "example", "did", "not", "fit", "my", "critieria", ",", "and", "your", "repeating", "untruths", "does", "not", "make", "them", "true", "."]
# ::lemmas ["your", "example", "do", "not", "fit", "my", "critieria", ",", "and", "your", "repeat", "untruth", "do", "not", "make", "they", "true", "."]
(c33-9 / and
       :op1 (c33-1 / fit-06
                   :ARG1 (c33-3 / example
                                :poss (c33-0 / you))
                   :ARG2 (c33-6 / critieria
                                :poss (c33-4 / i))
                   :polarity -)
       :op2 (c33-2 / make-02
                   :ARG0 (c33-5 / repeat-01
                                :ARG0 c33-0
                                :ARG1 (c33-8 / thing
                                             :ARG1-of (c33-7 / true-01)
                                             :domain c33-8))
                   :ARG1 c33-7
                   :polarity -))

# ::snt should stop race baiting, this is the not just a white guy killing a black kid
# ::tokens ["should", "stop", "race", "baiting", ",", "this", "is", "the", "not", "just", "a", "white", "guy", "killing", "a", "black", "kid"]
# ::lemmas ["should", "stop", "race", "baiting", ",", "this", "be", "the", "not", "just", "a", "white", "guy", "kill", "a", "black", "kid"]
(c34-6 / recommend-01
       :ARG1 (c34-10 / stop-01
                     :ARG1 (c34-2 / bait-01
                                  :ARG2 (c34-4 / race)))
       :ARG1-of (c34-7 / cause-01
                       :ARG0 (c34-8 / guy
                                    :ARG1-of (c34-1 / white-02)
                                    :mod (c34-0 / just
                                                :polarity -)
                                    :domain (c34-11 / this)
                                    :ARG0-of (c34-5 / kill-01
                                                    :ARG1 (c34-3 / kid
                                                                 :ARG1-of (c34-9 / black-05))))))

# ::snt White unarmed TEENAGER killed by two gunshot wounds on Iowa St university campus: Shall we keep going?
# ::tokens ["White", "unarmed", "TEENAGER", "killed", "by", "two", "gunshot", "wounds", "on", "Iowa", "St", "university", "campus", ":", "Shall", "we", "keep", "going", "?"]
# ::lemmas ["White", "unarmed", "TEENAGER", "kill", "by", "two", "gunshot", "wound", "on", "Iowa", "St", "university", "campus", ":", "shall", "we", "keep", "go", "?"]
(c35-1 / multi-sentence
       :snt1 (c35-5 / kill-01
                    :ARG1 (c35-8 / person
                                 :ARG0-of (c35-13 / teach-01)
                                 :ARG1-of (c35-14 / arm-01
                                                  :polarity -)
                                 :ARG1-of (c35-0 / white-02))
                    :ARG2 (c35-6 / wound-01
                                 :ARG0 (c35-11 / gunshot)
                                 :ARG1 c35-8
                                 :quant 2)
                    :location (c35-10 / campus
                                      :mod (c35-2 / university
                                                  :name (c35-7 / name
                                                               :op1 "Iowa"
                                                               :op2 "St"))))
       :snt2 (c35-12 / truth-value
                     :polarity-of (c35-4 / keep-02
                                         :ARG0 (c35-3 / we)
                                         :ARG1 (c35-9 / go-02
                                                      :ARG0 c35-3))))

# ::snt ive left the south shit stain ive been to stl manymanymany times in my life
# ::tokens ["i", "ve", "left", "the", "south", "shit", "stain", "i", "ve", "been", "to", "stl", "manymanymany", "times", "in", "my", "life"]
# ::lemmas ["i", "ve", "leave", "the", "south", "shit", "stain", "i", "ve", "be", "to", "stl", "manymanymany", "time", "in", "my", "life"]
(c36-8 / and
       :op1 (c36-1 / leave-11
                   :ARG0 (c36-5 / i)
                   :ARG1 (c36-7 / stain
                                :mod (c36-4 / shit)
                                :location (c36-2 / south)))
       :op2 (c36-6 / leave-11
                   :ARG0 c36-5
                   :ARG1 c36-7
                   :frequency (c36-3 / many)
                   :time (c36-0 / life
                                :poss c36-5)))

# ::snt Unarmed white male in California beaten to death by cops for min : You serious?
# ::tokens ["Unarmed", "white", "male", "in", "California", "beaten", "to", "death", "by", "cops", "for", "min", ":", "You", "serious", "?"]
# ::lemmas ["unarmed", "white", "male", "in", "California", "beat", "to", "death", "by", "cop", "for", "min", ":", "you", "serious", "?"]
(c37-3 / multi-sentence
       :snt1 (c37-4 / beat-01
                    :ARG0 (c37-10 / cop)
                    :ARG1 (c37-8 / male
                                 :ARG1-of (c37-13 / arm-01
                                                  :polarity -)
                                 :ARG1-of (c37-0 / white-02))
                    :ARG2 (c37-9 / die-01
                                 :ARG1 c37-8)
                    :location (c37-11 / state
                                      :name (c37-7 / name
                                                   :op1 "California"))
                    :duration (c37-12 / temporal-quantity
                                      :unit (c37-2 / minute)
                                      :quant 1))
       :snt2 (c37-5 / serious-01
                    :ARG1 (c37-1 / you)
                    :polarity (c37-6 / amr-unknown)))

# ::snt A Black male is killed in the US by law enforcement or vigilantes every hours. Until you can show that, do not engage.
# ::tokens ["A", "Black", "male", "is", "killed", "in", "the", "US", "by", "law", "enforcement", "or", "vigilantes", "every", "hours", ".", "Until", "you", "can", "show", "that", ",", "do", "not", "engage", "."]
# ::lemmas ["a", "black", "male", "be", "kill", "in", "the", "US", "by", "law", "enforcement", "or", "vigilante", "every", "hours", ".", "until", "you", "can", "show", "that", ",", "do", "not", "engage", "."]
(c38-0 / multi-sentence
       :snt1 (c38-15 / kill-01
                     :ARG0 (c38-17 / or
                                   :op1 (c38-2 / person
                                               :ARG0-of (c38-10 / enforce-01
                                                                :ARG1 (c38-6 / law)))
                                   :op2 (c38-4 / person
                                               :ARG0-of (c38-1 / vigilant-01)))
                     :ARG1 (c38-12 / male
                                   :ARG1-of (c38-8 / black-05))
                     :location (c38-18 / country
                                       :name (c38-11 / name
                                                     :op1 "US"))
                     :frequency (c38-13 / rate-entity-91
                                        :ARG3 (c38-19 / temporal-quantity
                                                      :unit (c38-5 / hour)
                                                      :quant 1)))
       :snt2 (c38-9 / engage-01
                    :ARG0 (c38-16 / you)
                    :time (c38-14 / until
                                  :op1 (c38-7 / possible-01
                                              :ARG1 (c38-3 / show-01
                                                           :ARG0 c38-16
                                                           :ARG1 c38-15)))
                    :polarity -
                    :mode imperative))

# ::snt It was always about age and race read my original tweet. Reading is fundamental and reading comprehension is important.
# ::tokens ["It", "was", "always", "about", "age", "and", "race", "read", "my", "original", "tweet", ".", "Reading", "is", "fundamental", "and", "reading", "comprehension", "is", "important", "."]
# ::lemmas ["it", "be", "always", "about", "age", "and", "race", "read", "my", "original", "tweet", ".", "reading", "be", "fundamental", "and", "reading", "comprehension", "be", "important", "."]
(c39-1 / multi-sentence
       :snt1 (c39-9 / concern-02
                    :ARG0 (c39-8 / read-01
                                 :ARG1 (c39-13 / tweet-01
                                               :ARG0 (c39-5 / i)
                                               :mod (c39-2 / original)))
                    :ARG1 (c39-14 / and
                                  :op1 (c39-4 / age-01)
                                  :op2 (c39-6 / race))
                    :time (c39-7 / always))
       :snt2 (c39-12 / and
                     :op1 (c39-0 / fundamental
                                 :domain (c39-3 / read-01))
                     :op2 (c39-10 / important-01
                                  :ARG1 (c39-11 / comprehend-01
                                                :ARG1 c39-3))))

# ::snt actually there are white kids who do that. And way to drop that word like all whites use it.
# ::tokens ["actually", "there", "are", "white", "kids", "who", "do", "that", ".", "And", "way", "to", "drop", "that", "word", "like", "all", "whites", "use", "it", "."]
# ::lemmas ["actually", "there", "be", "white", "kid", "who", "do", "that", ".", "and", "way", "to", "drop", "that", "word", "like", "all", "white", "use", "it", "."]
(c40-2 / multi-sentence
       :snt1 (c40-7 / kid
                    :ARG1-of (c40-0 / white-02)
                    :ARG0-of (c40-11 / do-02
                                     :ARG1 (c40-15 / that)
                                     :ARG1-of (c40-16 / actual-02)))
       :snt2 (c40-5 / and
                    :op2 (c40-8 / way
                                :manner-of (c40-1 / drop-05
                                                  :ARG1 (c40-4 / word
                                                               :mod (c40-14 / that))
                                                  :ARG1-of (c40-12 / resemble-01
                                                                   :ARG2 (c40-3 / use-01
                                                                                :ARG0 (c40-10 / person
                                                                                              :ARG1-of (c40-9 / white-02)
                                                                                              :mod (c40-13 / all))
                                                                                :ARG1 (c40-6 / it)))))))

# ::snt Age please? I think my question referred to teens. As in under . Was this one victim under ? If not you are disqualified.
# ::tokens ["Age", "please", "?", "I", "think", "my", "question", "referred", "to", "teens", ".", "As", "in", "under", ".", "Was", "this", "one", "victim", "under", "?", "If", "not", "you", "are", "disqualified", "."]
# ::lemmas ["age", "please", "?", "i", "think", "my", "question", "refer", "to", "teen", ".", "as", "in", "under", ".", "be", "this", "one", "victim", "under", "?", "if", "not", "you", "be", "disqualify", "."]
(c41-2 / multi-sentence
       :snt1 (c41-13 / age-01
                     :polarity (c41-6 / amr-unknown)
                     :polite +)
       :snt2 (c41-12 / think-01
                     :ARG0 (c41-7 / i)
                     :ARG1 (c41-9 / refer-01
                                  :ARG0 (c41-5 / question-01
                                               :ARG0 c41-7)
                                  :ARG1 (c41-11 / teen)))
       :snt3 (c41-4 / equal-01
                    :ARG2 (c41-3 / under)
                    :polarity (c41-8 / amr-unknown))
       :snt4 (c41-10 / disqualify-01
                     :ARG1 (c41-1 / you)
                     :condition (c41-0 / have-polarity-91
                                       :ARG1 c41-13)
                     :ARG2 -))

# ::snt racist
# ::tokens ["racist"]
# ::lemmas ["racist"]
(c42-0 / person
       :mod (c42-1 / racist))

# ::snt because... yall actually get justice
# ::tokens ["because", "...", "y", "all", "actually", "get", "justice"]
# ::lemmas ["because", "...", "you", "all", "actually", "get", "justice"]
(c43-3 / cause-01
       :ARG0 (c43-4 / get-01
                    :ARG0 (c43-1 / you
                                 :mod (c43-5 / all))
                    :ARG1 (c43-0 / justice)
                    :ARG1-of (c43-2 / actual-02)))

# ::snt slight correction on Jordan Davis he did turn down his music
# ::tokens ["slight", "correction", "on", "Jordan", "Davis", "he", "did", "turn", "down", "his", "music"]
# ::lemmas ["slight", "correction", "on", "Jordan", "Davis", "he", "do", "turn", "down", "his", "music"]
(c44-7 / and
       :op1 (c44-5 / correct-01
                   :ARG0 (c44-0 / he)
                   :ARG1 (c44-4 / person
                                :name (c44-3 / name
                                             :op1 "Jordan"
                                             :op2 "Davis"))
                   :ARG1-of (c44-1 / light-06))
       :op2 (c44-6 / turn-down-05
                   :ARG0 c44-0
                   :ARG1 (c44-2 / music
                                :poss c44-0)))

# ::snt By the way Chase, you had to go back a year to find any examples, even those who were not kids.
# ::tokens ["By", "the", "way", "Chase", ",", "you", "had", "to", "go", "back", "a", "year", "to", "find", "any", "examples", ",", "even", "those", "who", "were", "not", "kids", "."]
# ::lemmas ["by", "the", "way", "Chase", ",", "you", "have", "to", "go", "back", "a", "year", "to", "find", "any", "example", ",", "even", "those", "who", "be", "not", "kid", "."]
(c45-12 / say-01
        :ARG0 (c45-6 / i)
        :ARG1 (c45-3 / obligate-01
                     :ARG1 (c45-9 / person
                                  :name (c45-8 / name
                                               :op1 "Chase"))
                     :ARG2 (c45-10 / go-back-19
                                   :ARG1 c45-9
                                   :ARG2 (c45-13 / temporal-quantity
                                                 :unit (c45-0 / year)
                                                 :quant 1)
                                   :purpose (c45-1 / find-01
                                                   :ARG0 c45-9
                                                   :ARG1 (c45-5 / example
                                                                :mod (c45-14 / any)
                                                                :example-of (c45-7 / kid
                                                                                   :domain (c45-11 / that
                                                                                                   :mod (c45-2 / even))
                                                                                   :polarity -))))
                     :mod (c45-4 / by-the-way))
        :ARG2 c45-9)
