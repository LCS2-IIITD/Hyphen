# ::snt Character assassination. Jury pool bias.
# ::tokens ["Character", "assassination", ".", "Jury", "pool", "bias", "."]
# ::lemmas ["character", "assassination", ".", "jury", "pool", "bias", "."]
(c2-5 / and
      :op1 (c2-2 / assassinate-01
                 :ARG1 (c2-4 / character))
      :op2 (c2-1 / bias-01
                 :ARG1 (c2-3 / pool-01
                             :ARG1 (c2-0 / jury))))

# ::snt Because this police department are racist fools. Also, they are too stupid to hide it. That's why.
# ::tokens ["Because", "this", "police", "department", "are", "racist", "fools", ".", "Also", ",", "they", "are", "too", "stupid", "to", "hide", "it", ".", "That", "'s", "why", "."]
# ::lemmas ["because", "this", "police", "department", "be", "racist", "fool", ".", "also", ",", "they", "be", "too", "stupid", "to", "hide", "it", ".", "that", "be", "why", "."]
(c3-2 / multi-sentence
      :snt1 (c3-8 / cause-01
                  :ARG0 (c3-1 / fool
                              :domain (c3-7 / department
                                            :mod (c3-6 / police)
                                            :mod (c3-14 / this))
                              :mod (c3-9 / racist)))
      :snt2 (c3-0 / have-degree-91
                  :ARG1 (c3-11 / they)
                  :ARG2 (c3-12 / stupid)
                  :ARG3 (c3-5 / too)
                  :ARG6 (c3-15 / hide-01
                               :ARG0 c3-11
                               :ARG1 (c3-4 / it))
                  :mod (c3-13 / also))
      :snt3 (c3-10 / cause-01
                   :ARG0 (c3-3 / that)))

# ::snt cuz "you" (whoever dafuq THAT is) asked for it...Chief Combover is skeevy as hell
# ::tokens ["cuz", "\"", "you", "\"", "(", "whoever", "dafuq", "THAT", "is", ")", "asked", "for", "it", "...", "Chief", "Combover", "is", "skeevy", "as", "hell"]
# ::lemmas ["cuz", "\"", "you", "\"", "(", "whoever", "dafuq", "that", "be", ")", "ask", "for", "it", "...", "Chief", "Combover", "be", "skeevy", "as", "hell"]
(c4-7 / cause-01
      :ARG0 (c4-10 / ask-02
                   :ARG0 (c4-0 / you
                               :ARG1-of (c4-1 / mean-01
                                              :ARG2 (c4-6 / dafuq
                                                          :domain (c4-9 / that))))
                   :ARG1 (c4-3 / it))
      :ARG1 (c4-8 / skeevy
                  :degree (c4-2 / as-hell)
                  :domain (c4-5 / person
                                :name (c4-4 / name
                                            :op1 "Chief"
                                            :op2 "C Combover"))))

# ::snt Its like they said hey its getting calm, let's piss them off all over again, this napalm isn't gonna drop itself!!
# ::tokens ["Its", "like", "they", "said", "hey", "its", "getting", "calm", ",", "let", "'s", "piss", "them", "off", "all", "over", "again", ",", "this", "napalm", "is", "n't", "gon", "na", "drop", "itself", "!", "!"]
# ::lemmas ["its", "like", "they", "say", "hey", "its", "get", "calm", ",", "let", "us", "piss", "they", "off", "all", "over", "again", ",", "this", "napalm", "be", "not", "going", "to", "drop", "itself", "!", "!"]
(c5-8 / resemble-01
      :ARG1 (c5-4 / it)
      :ARG2 (c5-12 / say-01
                   :ARG0 (c5-13 / they)
                   :ARG1 (c5-14 / and
                                :op1 (c5-9 / calm-03
                                           :ARG1 c5-4)
                                :mod (c5-0 / hey
                                           :mode expressive))
                   :op2 (c5-2 / let-01
                              :ARG0 (c5-1 / we)
                              :ARG1 (c5-7 / piss-off-02
                                          :ARG0 c5-1
                                          :ARG1 c5-13
                                          :mod (c5-3 / again
                                                     :mod (c5-6 / all-over)))
                              :mode imperative)
                   :op3 (c5-10 / drop-01
                               :ARG1 (c5-5 / napalm
                                           :mod (c5-11 / this))
                               :polarity -)))

# ::snt And where are your facts? this is all coming from your vivid imagination.....right?
# ::tokens ["And", "where", "are", "your", "facts", "?", "this", "is", "all", "coming", "from", "your", "vivid", "imagination", ".....", "right", "?"]
# ::lemmas ["and", "where", "be", "your", "fact", "?", "this", "be", "all", "come", "from", "your", "vivid", "imagination", ".....", "right", "?"]
(c6-2 / multi-sentence
      :snt1 (c6-12 / and
                   :op2 (c6-3 / be-located-at-91
                              :ARG1 (c6-1 / fact
                                          :poss (c6-0 / you))
                              :ARG2 (c6-4 / amr-unknown)))
      :snt2 (c6-9 / come-03
                  :ARG1 (c6-11 / this
                               :mod (c6-6 / all))
                  :ARG2 (c6-5 / imagine-01
                              :ARG0 (c6-10 / you)
                              :mod (c6-7 / vivid))
                  :ARG1-of (c6-8 / request-confirmation-91)))

# ::snt taint any jury
# ::tokens ["taint", "any", "jury"]
# ::lemmas ["taint", "any", "jury"]
(c7-0 / stain-01
      :ARG1 (c7-1 / jury
                  :mod (c7-2 / any)))

# ::snt in your heart you know why. It fits the next narrative of the Playbook. A police stop gone wrong when cop is attacked blah blah
# ::tokens ["in", "your", "heart", "you", "know", "why", ".", "It", "fits", "the", "next", "narrative", "of", "the", "Playbook", ".", "A", "police", "stop", "gone", "wrong", "when", "cop", "is", "attacked", "blah", "blah"]
# ::lemmas ["in", "your", "heart", "you", "know", "why", ".", "it", "fit", "the", "next", "narrative", "of", "the", "Playbook", ".", "a", "police", "stop", "go", "wrong", "when", "cop", "be", "attack", "blah", "blah"]
(c8-4 / multi-sentence
      :snt1 (c8-7 / know-01
                  :ARG0 (c8-1 / you
                              :part (c8-0 / heart))
                  :ARG1 (c8-15 / thing
                               :ARG0-of (c8-12 / cause-01))
                  :location c8-0)
      :snt2 (c8-3 / fit-06
                  :ARG1 (c8-6 / it)
                  :ARG2 (c8-8 / narrate-01
                              :ARG1 (c8-10 / playbook)
                              :mod (c8-9 / next)))
      :snt3 (c8-13 / go-08
                   :ARG1 (c8-14 / stop-01
                                :ARG0 (c8-16 / police))
                   :ARG2 (c8-2 / wrong-02)
                   :time (c8-17 / attack-01
                                :ARG1 (c8-11 / cop)))
      :snt4 (c8-5 / blah-blah-blah))

# ::snt they probably figured "hey worked for Zimmerman"...
# ::tokens ["they", "probably", "figured", "\"", "hey", "worked", "for", "Zimmerman", "\"", "..."]
# ::lemmas ["they", "probably", "figure", "\"", "hey", "work", "for", "Zimmerman", "\"", "..."]
(c9-2 / figure-01
      :ARG0 (c9-5 / they)
      :ARG1 (c9-1 / work-01
                  :ARG0 (c9-0 / hey)
                  :ARG2 (c9-4 / person
                              :name (c9-3 / name
                                          :op1 "Zimmerman")))
      :mod (c9-6 / probable))

# ::snt If they could smear MLK after his assassination, you can't expect the average black man to receive better, even in
# ::tokens ["If", "they", "could", "smear", "MLK", "after", "his", "assassination", ",", "you", "ca", "n't", "expect", "the", "average", "black", "man", "to", "receive", "better", ",", "even", "in"]
# ::lemmas ["if", "they", "could", "smear", "MLK", "after", "his", "assassination", ",", "you", "can", "not", "expect", "the", "average", "black", "man", "to", "receive", "well", ",", "even", "in"]
(c10-9 / possible-01
       :ARG1 (c10-5 / expect-01
                    :ARG0 (c10-1 / you)
                    :ARG1 (c10-10 / receive-01
                                  :ARG0 (c10-2 / man
                                               :ARG1-of (c10-4 / black-05)
                                               :ARG1-of (c10-17 / average-04))
                                  :ARG1 (c10-15 / thing
                                                :ARG1-of (c10-0 / have-degree-91
                                                                :ARG2 (c10-12 / good-02
                                                                              :ARG1 c10-15)
                                                                :ARG3 (c10-11 / more)))))
       :condition (c10-16 / possible-01
                          :ARG1 (c10-14 / smear-02
                                        :ARG0 (c10-13 / they)
                                        :ARG1 (c10-3 / person
                                                     :name (c10-7 / name
                                                                  :op1 "MLK"))
                                        :time (c10-6 / after
                                                     :op1 (c10-8 / assassinate-01
                                                                 :ARG1 c10-3))))
       :polarity -)

# ::snt how can the governor allow this trifling bs from PD? It's like keystone cops with bullets
# ::tokens ["how", "can", "the", "governor", "allow", "this", "trifling", "bs", "from", "PD", "?", "It", "'s", "like", "keystone", "cops", "with", "bullets"]
# ::lemmas ["how", "can", "the", "governor", "allow", "this", "trifling", "bs", "from", "PD", "?", "it", "be", "like", "keystone", "cop", "with", "bullet"]
(c11-2 / multi-sentence
       :snt1 (c11-8 / possible-01
                    :ARG1 (c11-17 / allow-01
                                  :ARG0 (c11-16 / person
                                                :ARG0-of (c11-0 / have-org-role-91
                                                                :ARG2 (c11-11 / governor)))
                                  :ARG1 (c11-15 / trifle-01
                                                :ARG0 (c11-13 / this)
                                                :ARG1 (c11-3 / business)
                                                :source (c11-9 / government-organization
                                                               :name (c11-7 / name
                                                                            :op1 "PD")))
                                  :manner (c11-4 / amr-unknown)))
       :snt2 (c11-10 / resemble-01
                     :ARG1 (c11-5 / it)
                     :ARG2 (c11-12 / cop
                                   :mod (c11-6 / keystone)
                                   :ARG0-of (c11-1 / have-03
                                                   :ARG1 (c11-14 / bullet)))))

# ::snt Evening news will show why. Capture the news cycle with evidence of Mike's "guilt". Won't matter that it's irrelevant to murder.
# ::tokens ["Evening", "news", "will", "show", "why", ".", "Capture", "the", "news", "cycle", "with", "evidence", "of", "Mike", "'s", "\"", "guilt", "\"", ".", "Wo", "n't", "matter", "that", "it", "'s", "irrelevant", "to", "murder", "."]
# ::lemmas ["evening", "news", "will", "show", "why", ".", "capture", "the", "news", "cycle", "with", "evidence", "of", "Mike", "'s", "\"", "guilt", "\"", ".", "will", "not", "matter", "that", "it", "be", "irrelevant", "to", "murder", "."]
(c12-2 / multi-sentence
       :snt1 (c12-14 / show-01
                     :ARG0 (c12-6 / news
                                  :mod (c12-4 / even))
                     :ARG1 (c12-17 / thing
                                   :ARG0-of (c12-10 / cause-01)))
       :snt2 (c12-9 / capture-01
                    :ARG0 (c12-0 / you)
                    :ARG1 (c12-13 / cycle
                                  :mod (c12-7 / news))
                    :instrument (c12-3 / evidence-01
                                       :ARG1 (c12-11 / guilty-01
                                                     :ARG1 (c12-8 / person
                                                                  :name (c12-12 / name
                                                                                :op1 "Mike"))))
                    :mode imperative)
       :snt3 (c12-15 / matter-01
                     :ARG1 (c12-16 / relevant-01
                                   :ARG1 (c12-5 / it)
                                   :ARG2 (c12-1 / murder-01)
                                   :polarity -)
                     :polarity -))

# ::snt just did a great story on that. Comparing headlines of white shooters to black victims.
# ::tokens ["just", "did", "a", "great", "story", "on", "that", ".", "Comparing", "headlines", "of", "white", "shooters", "to", "black", "victims", "."]
# ::lemmas ["just", "do", "a", "great", "story", "on", "that", ".", "compare", "headline", "of", "white", "shooter", "to", "black", "victim", "."]
(c13-3 / multi-sentence
       :snt1 (c13-8 / do-02
                    :ARG1 (c13-11 / story
                                  :mod (c13-10 / great)
                                  :topic (c13-12 / that))
                    :mod (c13-0 / just))
       :snt2 (c13-9 / compare-01
                    :ARG1 (c13-1 / headline-01
                                 :ARG1 (c13-7 / person
                                              :ARG0-of (c13-5 / shoot-02)
                                              :ARG1-of (c13-2 / white-02)))
                    :ARG2 (c13-13 / person
                                  :ARG1-of (c13-6 / victimize-01)
                                  :ARG1-of (c13-4 / black-05))))

# ::snt we know why. Trying to excuse their behavior.
# ::tokens ["we", "know", "why", ".", "Trying", "to", "excuse", "their", "behavior", "."]
# ::lemmas ["we", "know", "why", ".", "try", "to", "excuse", "their", "behavior", "."]
(c14-1 / multi-sentence
       :snt1 (c14-4 / know-01
                    :ARG0 (c14-0 / we)
                    :ARG1 (c14-8 / thing
                                 :ARG0-of (c14-6 / cause-01)))
       :snt2 (c14-7 / try-01
                    :ARG1 (c14-3 / excuse-01
                                 :ARG1 (c14-2 / behave-01
                                              :ARG0 (c14-5 / they)))))

# ::snt show me the fact! I smelled a lie and cover-up from the beginning
# ::tokens ["show", "me", "the", "fact", "!", "I", "smelled", "a", "lie", "and", "cover", "-", "up", "from", "the", "beginning"]
# ::lemmas ["show", "i", "the", "fact", "!", "i", "smell", "a", "lie", "and", "cover", "-", "up", "from", "the", "beginning"]
(c15-2 / multi-sentence
       :snt1 (c15-10 / show-01
                     :ARG0 (c15-0 / you)
                     :ARG1 (c15-1 / fact)
                     :ARG2 (c15-7 / i)
                     :mode imperative)
       :snt2 (c15-6 / smell-01
                    :ARG0 (c15-9 / i)
                    :ARG1 (c15-11 / and
                                  :op1 (c15-3 / lie-08)
                                  :op2 (c15-8 / cover-up-04))
                    :time (c15-4 / since
                                 :op1 (c15-5 / begin-01))))

# ::snt Clearly to mitigate the damages in the eventual wrongful death lawsuit (i.e. after there's no criminal prosecution)
# ::tokens ["Clearly", "to", "mitigate", "the", "damages", "in", "the", "eventual", "wrongful", "death", "lawsuit", "(", "i.e.", "after", "there", "'s", "no", "criminal", "prosecution", ")"]
# ::lemmas ["clearly", "to", "mitigate", "the", "damage", "in", "the", "eventual", "wrongful", "death", "lawsuit", "(", "i.e.", "after", "there", "be", "no", "criminal", "prosecution", ")"]
(c16-2 / mitigate-01
       :ARG1 (c16-5 / damages-02
                    :ARG3 (c16-9 / sue-02
                                 :ARG2 (c16-1 / die-01
                                              :ARG1-of (c16-0 / wrong-02))
                                 :time (c16-3 / eventual))
                    :ARG1-of (c16-4 / mean-01
                                    :ARG2 (c16-10 / after
                                                  :op1 (c16-6 / prosecute-01
                                                              :ARG2 (c16-7 / crime-02)
                                                              :polarity -))))
       :ARG1-of (c16-8 / clear-06))

# ::snt Character assassination after his assassination.
# ::tokens ["Character", "assassination", "after", "his", "assassination", "."]
# ::lemmas ["character", "assassination", "after", "his", "assassination", "."]
(c17-4 / assassinate-01
       :ARG1 (c17-3 / character)
       :time (c17-1 / after
                    :op1 (c17-2 / assassinate-01
                                :ARG1 (c17-0 / he))))

# ::snt They are trying to justify his murder. But there is NO proof he was wanted for anything...none...
# ::tokens ["They", "are", "trying", "to", "justify", "his", "murder", ".", "But", "there", "is", "NO", "proof", "he", "was", "wanted", "for", "anything", "...", "none", "..."]
# ::lemmas ["they", "be", "try", "to", "justify", "his", "murder", ".", "but", "there", "be", "no", "proof", "he", "be", "want", "for", "anything", "...", "none", "..."]
(c18-3 / multi-sentence
       :snt1 (c18-11 / try-01
                     :ARG0 (c18-9 / they)
                     :ARG1 (c18-0 / justify-01
                                  :ARG0 c18-9
                                  :ARG1 (c18-5 / murder-01
                                               :ARG0 (c18-1 / he))))
       :snt2 (c18-7 / contrast-01
                    :ARG2 (c18-6 / prove-01
                                 :ARG1 (c18-2 / want-01
                                              :ARG1 (c18-12 / he)
                                              :ARG1-of (c18-8 / cause-01
                                                              :ARG0 (c18-10 / anything)))
                                 :polarity -))
       :snt3 (c18-4 / none))

# ::snt they gone do anything to make him seem like the person in the wrong like they did with the weed and Trayvon!
# ::tokens ["they", "gone", "do", "anything", "to", "make", "him", "seem", "like", "the", "person", "in", "the", "wrong", "like", "they", "did", "with", "the", "weed", "and", "Trayvon", "!"]
# ::lemmas ["they", "go", "do", "anything", "to", "make", "he", "seem", "like", "the", "person", "in", "the", "wrong", "like", "they", "do", "with", "the", "weed", "and", "Trayvon", "!"]
(c20-9 / go-02
       :ARG0 (c20-11 / they)
       :ARG1 (c20-7 / do-02
                    :ARG0 c20-11
                    :ARG1 (c20-13 / anything)
                    :purpose (c20-2 / make-02
                                    :ARG0 c20-11
                                    :ARG1 (c20-10 / seem-01
                                                  :ARG1 (c20-6 / person
                                                               :ARG1-of (c20-0 / wrong-02)))))
       :ARG1-of (c20-8 / resemble-01
                       :ARG2 (c20-1 / do-02
                                    :ARG0 c20-11
                                    :ARG1 (c20-3 / and
                                                 :op1 (c20-4 / weed)
                                                 :op2 (c20-12 / person
                                                              :name (c20-5 / name
                                                                           :op1 "Trayvon"))))))

# ::snt And then had the gall to play the victims, saying the mean bullies in the press made them release it.
# ::tokens ["And", "then", "had", "the", "gall", "to", "play", "the", "victims", ",", "saying", "the", "mean", "bullies", "in", "the", "press", "made", "them", "release", "it", "."]
# ::lemmas ["and", "then", "have", "the", "gall", "to", "play", "the", "victim", ",", "say", "the", "mean", "bully", "in", "the", "press", "make", "they", "release", "it", "."]
(c22-13 / and
        :op2 (c22-0 / have-03
                    :ARG1 (c22-9 / gall
                                 :purpose (c22-6 / play-10
                                                 :ARG1 (c22-5 / victim)
                                                 :manner (c22-10 / say-01
                                                                 :ARG1 (c22-1 / make-02
                                                                              :ARG0 (c22-12 / person
                                                                                            :ARG0-of (c22-3 / bully-01)
                                                                                            :ARG0-of (c22-7 / mean-04)
                                                                                            :location (c22-2 / press))
                                                                              :ARG1 (c22-8 / release-01
                                                                                           :ARG0 c22-5
                                                                                           :ARG1 (c22-4 / it))))))
                    :time (c22-11 / then)))

# ::snt I knew why from the first comments section. Every racist was saying, See?
# ::tokens ["I", "knew", "why", "from", "the", "first", "comments", "section", ".", "Every", "racist", "was", "saying", ",", "See", "?"]
# ::lemmas ["i", "know", "why", "from", "the", "first", "comment", "section", ".", "every", "racist", "be", "say", ",", "see", "?"]
(c23-1 / multi-sentence
       :snt1 (c23-6 / know-01
                    :ARG0 (c23-5 / i)
                    :ARG1 (c23-11 / thing
                                  :ARG0-of (c23-8 / cause-01))
                    :source (c23-10 / section
                                    :mod (c23-7 / comment-01)
                                    :ord (c23-2 / ordinal-entity
                                                :value 1)))
       :snt2 (c23-3 / say-01
                    :ARG0 (c23-9 / racist
                                 :mod (c23-4 / every))
                    :ARG1 (c23-0 / see-01
                                 :polarity (c23-12 / amr-unknown))))

# ::snt Smoke &amp; mirrors. They put that out to distract us from the murder of . Ain't happening.
# ::tokens ["Smoke", "&", "amp", ";", "mirrors", ".", "They", "put", "that", "out", "to", "distract", "us", "from", "the", "murder", "of", ".", "Ai", "n't", "happening", "."]
# ::lemmas ["Smoke", "&", "amp", ";", "mirror", ".", "they", "put", "that", "out", "to", "distract", "we", "from", "the", "murder", "of", ".", "be", "not", "happen", "."]
(c24-2 / multi-sentence
       :snt1 (c24-12 / and
                     :op1 (c24-10 / smoke-02)
                     :op2 (c24-11 / thing
                                  :ARG1-of (c24-4 / amp-01))
                     :op3 (c24-6 / mirror))
       :snt2 (c24-7 / put-out-10
                    :ARG0 (c24-9 / they)
                    :ARG1 (c24-5 / that)
                    :purpose (c24-8 / distract-01
                                    :ARG0 c24-9
                                    :ARG1 (c24-0 / we)
                                    :ARG2 (c24-1 / murder-01)))
       :snt3 (c24-3 / event
                    :polarity -))

# ::snt Since that question was answered during the press conference, I assume you're not actually looking for an answer, just drama.
# ::tokens ["Since", "that", "question", "was", "answered", "during", "the", "press", "conference", ",", "I", "assume", "you", "'re", "not", "actually", "looking", "for", "an", "answer", ",", "just", "drama", "."]
# ::lemmas ["since", "that", "question", "be", "answer", "during", "the", "press", "conference", ",", "i", "assume", "you", "be", "not", "actually", "look", "for", "an", "answer", ",", "just", "drama", "."]
(c25-15 / assume-02
        :ARG0 (c25-5 / i)
        :ARG1 (c25-9 / contrast-01
                     :ARG1 (c25-2 / look-01
                                  :ARG0 (c25-1 / you)
                                  :ARG1 (c25-4 / answer-01)
                                  :ARG1-of (c25-6 / actual-02)
                                  :polarity -)
                     :ARG2 (c25-8 / drama
                                  :mod (c25-0 / just)
                                  :domain c25-4))
        :ARG1-of (c25-10 / cause-01
                         :ARG0 (c25-13 / answer-01
                                       :ARG1 (c25-14 / thing
                                                     :ARG1-of (c25-3 / question-01)
                                                     :mod (c25-11 / that))
                                       :time (c25-12 / conference
                                                     :mod (c25-7 / press)))))

# ::snt Tainting the jury pool more precisely, perhaps.
# ::tokens ["Tainting", "the", "jury", "pool", "more", "precisely", ",", "perhaps", "."]
# ::lemmas ["taint", "the", "jury", "pool", "more", "precisely", ",", "perhaps", "."]
(c26-5 / capture-01
       :ARG1 (c26-4 / pool-01
                    :ARG1 (c26-0 / jury))
       :manner (c26-6 / precise
                      :ARG2-of (c26-1 / have-degree-91
                                      :ARG1 c26-5
                                      :ARG3 (c26-2 / more)))
       :ARG1-of (c26-3 / possible-01))

# ::snt that's to keep peace! The know shit is About to go down like NIKI!
# ::tokens ["that", "'s", "to", "keep", "peace", "!", "The", "know", "shit", "is", "About", "to", "go", "down", "like", "NIKI", "!"]
# ::lemmas ["that", "be", "to", "keep", "peace", "!", "the", "know", "shit", "be", "about", "to", "go", "down", "like", "NIKI", "!"]
(c27-1 / multi-sentence
       :snt1 (c27-0 / have-purpose-91
                    :ARG1 (c27-8 / that)
                    :ARG2 (c27-2 / keep-01
                                 :ARG1 (c27-4 / peace)))
       :snt2 (c27-5 / down-01
                    :ARG1 (c27-7 / shit)
                    :time (c27-10 / about-to)
                    :ARG1-of (c27-6 / resemble-01
                                    :ARG2 (c27-9 / publication
                                                 :name (c27-3 / name
                                                              :op1 "NIKI")))))

# ::snt trying to dirty his name before they justify his killing! but we aint going out like that!
# ::tokens ["trying", "to", "dirty", "his", "name", "before", "they", "justify", "his", "killing", "!", "but", "we", "ai", "nt", "going", "out", "like", "that", "!"]
# ::lemmas ["try", "to", "dirty", "his", "name", "before", "they", "justify", "his", "killing", "!", "but", "we", "be", "not", "go", "out", "like", "that", "!"]
(c28-8 / contrast-01
       :ARG1 (c28-12 / try-01
                     :ARG0 (c28-1 / we)
                     :ARG1 (c28-7 / dirty-01
                                  :ARG0 c28-1
                                  :ARG1 (c28-5 / name
                                               :poss (c28-0 / he))
                                  :time (c28-3 / before
                                               :op1 (c28-2 / justify-01
                                                           :ARG0 (c28-11 / they)
                                                           :ARG1 (c28-4 / kill-01
                                                                        :ARG0 c28-0)))))
       :ARG2 (c28-9 / go-out-17
                    :ARG0 c28-1
                    :ARG1-of (c28-10 / resemble-01
                                     :ARG2 (c28-6 / that))
                    :polarity -))

# ::snt None of this justifies shooting/killing of anyone with their hands in the air!
# ::tokens ["None", "of", "this", "justifies", "shooting", "/", "killing", "of", "anyone", "with", "their", "hands", "in", "the", "air", "!"]
# ::lemmas ["none", "of", "this", "justifie", "shoot", "/", "killing", "of", "anyone", "with", "their", "hand", "in", "the", "air", "!"]
(c29-0 / justify-01
       :ARG0 (c29-6 / none
                    :ARG1-of (c29-4 / include-91
                                    :ARG2 (c29-8 / this)))
       :ARG1 (c29-7 / slash
                    :op1 (c29-2 / shoot-02
                                :ARG1 (c29-9 / anyone
                                             :part (c29-1 / hand
                                                          :location (c29-3 / air)
                                                          :part-of c29-9)))
                    :op2 (c29-5 / kill-01
                                :ARG1 c29-9)))

# ::snt Listen to the eye witness account that IPosted.
# ::tokens ["Listen", "to", "the", "eye", "witness", "account", "that", "IPosted", "."]
# ::lemmas ["listen", "to", "the", "eye", "witness", "account", "that", "IPosted", "."]
(c30-2 / listen-01
       :ARG0 (c30-1 / you)
       :ARG1 (c30-7 / account-01
                    :ARG0 (c30-5 / person
                                 :ARG0-of (c30-0 / witness-01
                                                 :ARG1 (c30-3 / eye)))
                    :ARG1-of (c30-6 / post-01
                                    :medium (c30-4 / internet)))
       :mode imperative)

# ::snt Didn't know when he STOPPED him but probably got a bolo when he was there. Brown prob thought cop knew and resisted.
# ::tokens ["Did", "n't", "know", "when", "he", "STOPPED", "him", "but", "probably", "got", "a", "bolo", "when", "he", "was", "there", ".", "Brown", "prob", "thought", "cop", "knew", "and", "resisted", "."]
# ::lemmas ["do", "not", "know", "when", "he", "stop", "he", "but", "probably", "get", "a", "bolo", "when", "he", "be", "there", ".", "Brown", "prob", "think", "cop", "know", "and", "resist", "."]
(c31-0 / multi-sentence
       :snt1 (c31-17 / contrast-01
                     :ARG1 (c31-16 / know-01
                                   :ARG1 (c31-19 / time
                                                 :time-of (c31-3 / stop-01
                                                                 :ARG0 (c31-7 / he)
                                                                 :ARG1 (c31-6 / he)))
                                   :polarity -)
                     :ARG2 (c31-12 / get-01
                                   :ARG0 c31-6
                                   :ARG1 (c31-9 / bollo)
                                   :mod (c31-1 / probable)
                                   :time (c31-15 / be-located-at-91
                                                 :ARG1 c31-6
                                                 :ARG2 (c31-18 / there))))
       :snt2 (c31-14 / think-01
                     :ARG0 (c31-4 / person
                                  :name (c31-10 / name
                                                :op1 "Brown"))
                     :ARG1 (c31-5 / and
                                  :op1 (c31-13 / know-01
                                               :ARG0 (c31-2 / cop))
                                  :op2 (c31-11 / resist-01
                                               :ARG0 c31-2))
                     :ARG1-of (c31-8 / prob-01)))

# ::snt you know why. The next step will be showing that Brown overreacted.
# ::tokens ["you", "know", "why", ".", "The", "next", "step", "will", "be", "showing", "that", "Brown", "overreacted", "."]
# ::lemmas ["you", "know", "why", ".", "the", "next", "step", "will", "be", "show", "that", "Brown", "overreact", "."]
(c32-1 / multi-sentence
       :snt1 (c32-4 / know-01
                    :ARG0 (c32-0 / you)
                    :ARG1 (c32-10 / thing
                                  :ARG0-of (c32-8 / cause-01)))
       :snt2 (c32-9 / step-01
                    :ARG2 (c32-3 / show-01
                                 :ARG1 (c32-2 / overreact-01
                                              :ARG0 (c32-7 / person
                                                           :name (c32-5 / name
                                                                        :op1 "Brown"))))
                    :mod (c32-6 / next)))
