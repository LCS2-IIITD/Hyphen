# ::snt They already do. They bomb themselves first.
# ::tokens ["They", "already", "do", ".", "They", "bomb", "themselves", "first", "."]
# ::lemmas ["they", "already", "do", ".", "they", "bomb", "themselves", "first", "."]
(c1-0 / multi-sentence
      :snt1 (c1-3 / do-02
                  :ARG0 (c1-5 / they)
                  :time (c1-6 / already))
      :snt2 (c1-1 / bomb-01
                  :ARG0 (c1-4 / they
                              :ARG1-of c1-1)
                  :ord (c1-2 / ordinal-entity
                             :value 1)))

# ::snt more hash tags more RTs hmmmm!
# ::tokens ["more", "hash", "tags", "more", "RTs", "hmmmm", "!"]
# ::lemmas ["more", "hash", "tag", "more", "rt", "hmmmm", "!"]
(c2-7 / and
      :op1 (c2-6 / tag
                 :mod (c2-0 / hash)
                 :quant (c2-2 / more))
      :op2 (c2-4 / publication
                 :name (c2-3 / name
                             :op1 "RT")
                 :quant (c2-5 / more)
                 :mod (c2-1 / hmm
                            :mode expressive)))

# ::snt brilliant.
# ::tokens ["brilliant", "."]
# ::lemmas ["brilliant", "."]
(c3-0 / brilliant-01)

# ::snt if it is not, you have not read it properly!
# ::tokens ["if", "it", "is", "not", ",", "you", "have", "not", "read", "it", "properly", "!"]
# ::lemmas ["if", "it", "be", "not", ",", "you", "have", "not", "read", "it", "properly", "!"]
(c4-4 / read-01
      :ARG0 (c4-1 / you)
      :ARG1 (c4-2 / it)
      :manner (c4-3 / proper)
      :condition (c4-0 / have-polarity-91
                       :ARG1 c4-2
                       :ARG2 -)
      :polarity -)

# ::snt we already have enough suicide bombers
# ::tokens ["we", "already", "have", "enough", "suicide", "bombers"]
# ::lemmas ["we", "already", "have", "enough", "suicide", "bomber"]
(c5-0 / have-03
      :ARG0 (c5-1 / we)
      :ARG1 (c5-4 / person
                  :ARG0-of (c5-2 / bomb-01
                                 :mod (c5-5 / suicide))
                  :ARG1-of (c5-7 / have-quant-91
                                 :ARG3 (c5-3 / enough)))
      :time (c5-6 / already))

# ::snt true that. Wish there were no religions to start with.
# ::tokens ["true", "that", ".", "Wish", "there", "were", "no", "religions", "to", "start", "with", "."]
# ::lemmas ["true", "that", ".", "wish", "there", "be", "no", "religion", "to", "start", "with", "."]
(c6-1 / multi-sentence
      :snt1 (c6-5 / true-01
                  :ARG1 (c6-3 / that))
      :snt2 (c6-0 / wish-01
                  :ARG1 (c6-2 / religion
                              :ARG2-of (c6-4 / start-01)
                              :polarity -)))

# ::snt the sad part is they do that with a bomb around them in a crowd
# ::tokens ["the", "sad", "part", "is", "they", "do", "that", "with", "a", "bomb", "around", "them", "in", "a", "crowd"]
# ::lemmas ["the", "sad", "part", "be", "they", "do", "that", "with", "a", "bomb", "around", "they", "in", "a", "crowd"]
(c7-1 / part
      :ARG0-of (c7-5 / sad-02)
      :domain (c7-2 / do-02
                    :ARG0 (c7-6 / they)
                    :ARG1 (c7-4 / that)
                    :instrument (c7-0 / bomb)
                    :location (c7-7 / around
                                    :op1 c7-6)
                    :location (c7-3 / crowd)))

# ::snt They misinterpret it and blow the bomb in a crowd
# ::tokens ["They", "misinterpret", "it", "and", "blow", "the", "bomb", "in", "a", "crowd"]
# ::lemmas ["they", "misinterpret", "it", "and", "blow", "the", "bomb", "in", "a", "crowd"]
(c8-6 / and
      :op1 (c8-0 / misinterpret-01
                 :ARG0 (c8-5 / they)
                 :ARG1 (c8-2 / it))
      :op2 (c8-1 / blow-01
                 :ARG0 c8-5
                 :ARG1 (c8-3 / bomb)
                 :ARG2 (c8-4 / crowd)))
