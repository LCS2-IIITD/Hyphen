# ::snt Agree, we looks like cavemans lol !!!
# ::tokens ["Agree", ",", "we", "looks", "like", "cavemans", "lol", "!", "!", "!"]
# ::lemmas ["agree", ",", "we", "look", "like", "caveman", "lol", "!", "!", "!"]
(c1-6 / agree-01
      :ARG0 (c1-3 / i)
      :ARG1 (c1-2 / look-02
                  :ARG0 (c1-1 / we)
                  :ARG1 (c1-4 / caveman)
                  :ARG2-of (c1-5 / laugh-01
                                 :ARG0 c1-3
                                 :manner (c1-0 / loud)
                                 :mode expressive)))

# ::snt said the expert on mounting
# ::tokens ["said", "the", "expert", "on", "mounting"]
# ::lemmas ["say", "the", "expert", "on", "mount"]
(c2-0 / say-01
      :ARG0 (c2-1 / expert-01
                  :ARG2 (c2-2 / mount-02)))

# ::snt yup!
# ::tokens ["yup", "!"]
# ::lemmas ["yup", "!"]
(c3-0 / yup!)

# ::snt mountain police...ah man...CNN Fail. My thoughts are with the fallen soldier from Hamilton, my city
# ::tokens ["mountain", "police", "...", "ah", "man", "...", "CNN", "Fail", ".", "My", "thoughts", "are", "with", "the", "fallen", "soldier", "from", "Hamilton", ",", "my", "city"]
# ::lemmas ["mountain", "police", "...", "ah", "man", "...", "CNN", "Fail", ".", "my", "thought", "be", "with", "the", "fall", "soldier", "from", "Hamilton", ",", "my", "city"]
(c4-1 / multi-sentence
      :snt1 (c4-7 / police
                  :mod (c4-8 / mountain))
      :snt2 (c4-0 / man
                  :mode expressive)
      :snt3 (c4-2 / fail-01
                  :ARG0 (c4-12 / publication
                               :name (c4-5 / name
                                           :op1 "CNN")))
      :snt4 (c4-11 / think-01
                   :ARG0 (c4-3 / i)
                   :ARG2 (c4-10 / soldier
                                :ARG1-of (c4-4 / fall-05)
                                :source (c4-9 / city
                                              :name (c4-6 / name
                                                          :op1 "Hamilton")
                                              :poss c4-3))))

# ::snt I've come to expect that from much of the U.S. media. I still get asked if I have sled dogs in vancouver.
# ::tokens ["I", "'ve", "come", "to", "expect", "that", "from", "much", "of", "the", "U.S.", "media", ".", "I", "still", "get", "asked", "if", "I", "have", "sled", "dogs", "in", "vancouver", "."]
# ::lemmas ["i", "'ve", "come", "to", "expect", "that", "from", "much", "of", "the", "U.S.", "medium", ".", "i", "still", "get", "ask", "if", "i", "have", "sle", "dog", "in", "vancouver", "."]
(c5-2 / multi-sentence
      :snt1 (c5-10 / come-04
                   :ARG1 (c5-5 / i)
                   :ARG2 (c5-3 / expect-01
                               :ARG0 c5-5
                               :ARG1 (c5-16 / that)
                               :source (c5-8 / media
                                             :mod (c5-1 / much)
                                             :mod (c5-9 / country
                                                        :name (c5-6 / name
                                                                    :op1 "U.S.")))))
      :snt2 (c5-17 / ask-01
                   :ARG1 (c5-13 / truth-value
                                :polarity-of (c5-0 / have-03
                                                   :ARG0 (c5-11 / i)
                                                   :ARG1 (c5-12 / dog
                                                                :purpose (c5-14 / sled))
                                                   :location (c5-15 / city
                                                                    :name (c5-7 / name
                                                                                :op1 "Vancouver"))))
                   :ARG2 c5-11
                   :mod (c5-4 / still)))

# ::snt I agree, everyone should be watching Canadian news to get the real scoop and it's MOUNTED dammit!!
# ::tokens ["I", "agree", ",", "everyone", "should", "be", "watching", "Canadian", "news", "to", "get", "the", "real", "scoop", "and", "it", "'s", "MOUNTED", "dammit", "!", "!"]
# ::lemmas ["i", "agree", ",", "everyone", "should", "be", "watch", "Canadian", "news", "to", "get", "the", "real", "scoop", "and", "it", "be", "MOUNTED", "dammit", "!", "!"]
(c6-14 / agree-01
       :ARG0 (c6-3 / i)
       :ARG1 (c6-2 / and
                   :op1 (c6-7 / recommend-01
                              :ARG1 (c6-0 / watch-01
                                          :ARG0 (c6-1 / everyone)
                                          :ARG1 (c6-5 / news
                                                      :mod (c6-8 / country
                                                                 :name (c6-6 / name
                                                                             :op1 "Canada")))
                                          :purpose (c6-9 / get-01
                                                         :ARG0 c6-1
                                                         :ARG1 (c6-12 / scoop-01
                                                                      :ARG1-of (c6-4 / real-04)))))
                   :op2 (c6-10 / count-03
                               :ARG1 (c6-11 / it)
                               :ARG1-of (c6-13 / damn-01
                                               :ARG0 c6-3))))

# ::snt ah geez
# ::tokens ["ah", "geez"]
# ::lemmas ["ah", "geez"]
(c7-0 / jeez
      :mod (c7-1 / ah)
      :mode expressive)

# ::snt they really are just idiots at this point
# ::tokens ["they", "really", "are", "just", "idiots", "at", "this", "point"]
# ::lemmas ["they", "really", "be", "just", "idiot", "at", "this", "point"]
(c8-1 / idiot
      :domain (c8-5 / they)
      :mod (c8-0 / just)
      :ARG1-of (c8-3 / real-04)
      :time (c8-2 / point
                  :mod (c8-4 / this)))

# ::snt it's just so ignorant at this point really
# ::tokens ["it", "'s", "just", "so", "ignorant", "at", "this", "point", "really"]
# ::lemmas ["it", "be", "just", "so", "ignorant", "at", "this", "point", "really"]
(c9-1 / ignorant-02
      :ARG1 (c9-4 / it)
      :degree (c9-5 / so)
      :mod (c9-0 / just)
      :ARG1-of (c9-3 / real-04)
      :time (c9-2 / point
                  :mod (c9-6 / this)))

# ::snt thank you!! Wtf
# ::tokens ["thank", "you", "!", "!", "Wtf"]
# ::lemmas ["thank", "you", "!", "!", "Wtf"]
(c10-2 / thank-01
       :ARG0 (c10-3 / i)
       :ARG1 (c10-0 / you)
       :mod (c10-1 / fuck
                   :mode expressive))

# ::snt now CNN just called the war memorial the Peace Tower. Wow reporting at it's best.
# ::tokens ["now", "CNN", "just", "called", "the", "war", "memorial", "the", "Peace", "Tower", ".", "Wow", "reporting", "at", "it", "'s", "best", "."]
# ::lemmas ["now", "CNN", "just", "call", "the", "war", "memorial", "the", "Peace", "Tower", ".", "wow", "report", "at", "it", "be", "good", "."]
(c11-4 / multi-sentence
       :snt1 (c11-10 / call-01
                     :ARG0 (c11-8 / publication
                                  :name (c11-6 / name
                                               :op1 "CNN"))
                     :ARG1 (c11-9 / memorial
                                  :mod (c11-1 / war))
                     :ARG2 (c11-7 / name
                                  :op1 "Peace"
                                  :op2 "Tower")
                     :time (c11-11 / now)
                     :mod (c11-0 / just))
       :snt2 (c11-12 / report-01
                     :manner (c11-5 / wow-01)
                     :manner (c11-13 / good-02
                                     :ARG2-of (c11-2 / have-degree-91
                                                     :ARG1 c11-12
                                                     :ARG3 (c11-3 / most)))))

# ::snt I mean CNN?!
# ::tokens ["I", "mean", "CNN", "?", "!"]
# ::lemmas ["i", "mean", "CNN", "?", "!"]
(c13-0 / mean-01
       :ARG0 (c13-1 / i)
       :ARG2 (c13-3 / publication
                    :name (c13-2 / name
                                 :op1 "CNN"))
       :polarity (c13-4 / amr-unknown))

# ::snt Sergeant Preston and King are mortified.
# ::tokens ["Sergeant", "Preston", "and", "King", "are", "mortified", "."]
# ::lemmas ["Sergeant", "Preston", "and", "King", "be", "mortify", "."]
(c14-1 / mortify-01
       :ARG1 (c14-7 / and
                    :op1 (c14-4 / person
                                :name (c14-2 / name
                                             :op1 "Preston")
                                :ARG0-of (c14-0 / have-org-role-91
                                                :ARG2 (c14-5 / sergeant)))
                    :op2 (c14-6 / person
                                :name (c14-3 / name
                                             :op1 "King"))))

# ::snt its ok I'll say it
# ::tokens ["its", "ok", "I", "'ll", "say", "it"]
# ::lemmas ["its", "ok", "i", "'ll", "say", "it"]
(c15-0 / okay-04
       :ARG1 (c15-2 / say-01
                    :ARG0 (c15-3 / i)
                    :ARG1 (c15-1 / it)))

# ::snt yup
# ::tokens ["yup"]
# ::lemmas ["yup"]
(c16-0 / yup)

# ::snt That is so sad, yet hilariously typical, I don't know what to say.
# ::tokens ["That", "is", "so", "sad", ",", "yet", "hilariously", "typical", ",", "I", "do", "n't", "know", "what", "to", "say", "."]
# ::lemmas ["that", "be", "so", "sad", ",", "yet", "hilariously", "typical", ",", "i", "do", "not", "know", "what", "to", "say", "."]
(c17-0 / have-concession-91
       :ARG1 (c17-10 / have-degree-91
                     :ARG1 (c17-9 / that)
                     :ARG2 (c17-8 / sad-02
                                  :ARG0 c17-9)
                     :ARG3 (c17-2 / so))
       :ARG2 (c17-7 / typical-02
                    :ARG1 c17-9
                    :ARG2 (c17-5 / hilarious))
       :ARG3 (c17-4 / know-01
                    :ARG0 (c17-3 / i)
                    :ARG1 (c17-6 / thing
                                 :ARG1-of (c17-1 / say-01
                                                 :ARG0 c17-3))
                    :polarity -))

# ::snt they should call it RCMP - which is their official name (full name rarely used as horses aren't primary ride)
# ::tokens ["they", "should", "call", "it", "RCMP", "-", "which", "is", "their", "official", "name", "(", "full", "name", "rarely", "used", "as", "horses", "are", "n't", "primary", "ride", ")"]
# ::lemmas ["they", "should", "call", "it", "RCMP", "-", "which", "be", "their", "official", "name", "(", "full", "name", "rarely", "use", "as", "horse", "be", "not", "primary", "ride", ")"]
(c18-12 / recommend-01
        :ARG1 (c18-13 / call-01
                      :ARG0 (c18-15 / they)
                      :ARG1 (c18-7 / it)
                      :ARG2 (c18-5 / organization
                                   :name (c18-9 / name
                                                :op1 "RCRC")
                                   :mod (c18-1 / official)
                                   :ARG1-of (c18-2 / mean-01
                                                   :ARG2 (c18-10 / name
                                                                 :mod (c18-3 / full)
                                                                 :ARG1-of (c18-4 / use-01
                                                                                 :ARG1-of (c18-8 / rare-02)
                                                                                 :ARG1-of (c18-14 / cause-01
                                                                                                  :ARG0 (c18-6 / ride-01
                                                                                                               :ARG1 (c18-0 / horse)
                                                                                                               :mod (c18-11 / primary)
                                                                                                               :polarity -))))))))

# ::snt MOUNTED...on a horse.... It's odd in Montreal today since Mondays attack..now this in Ottawa. Police everywhere
# ::tokens ["MOUNTED", "...", "on", "a", "horse", "....", "It", "'s", "odd", "in", "Montreal", "today", "since", "Mondays", "attack", "..", "now", "this", "in", "Ottawa", ".", "Police", "everywhere"]
# ::lemmas ["MOUNTED", "...", "on", "a", "horse", "....", "it", "be", "odd", "in", "Montreal", "today", "since", "Mondays", "attack", "..", "now", "this", "in", "Ottawa", ".", "police", "everywhere"]
(c19-0 / multi-sentence
       :snt1 (c19-16 / count-01
                     :manner (c19-7 / horse))
       :snt2 (c19-14 / odd
                     :domain (c19-11 / it)
                     :location (c19-3 / city
                                      :name (c19-9 / name
                                                   :op1 "Montreal"))
                     :time (c19-18 / today)
                     :time (c19-5 / since
                                  :op1 (c19-6 / attack-01
                                              :time (c19-4 / date-entity
                                                           :weekday (c19-10 / monday))))
                     :ARG1-of (c19-12 / contrast-01
                                      :ARG2 (c19-17 / this
                                                    :location (c19-13 / city
                                                                      :name (c19-15 / name
                                                                                    :op1 "Ottawa"))
                                                    :time (c19-1 / now))))
       :snt3 (c19-2 / police
                    :location (c19-8 / everywhere)))

# ::snt gotta love American media. LOL They probably had to use Google Maps to locate Canada too!
# ::tokens ["got", "ta", "love", "American", "media", ".", "LOL", "They", "probably", "had", "to", "use", "Google", "Maps", "to", "locate", "Canada", "too", "!"]
# ::lemmas ["got", "to", "love", "American", "medium", ".", "lol", "they", "probably", "have", "to", "use", "Google", "Maps", "to", "locate", "Canada", "too", "!"]
(c20-2 / multi-sentence
       :snt1 (c20-4 / obligate-01
                    :ARG1 (c20-16 / they)
                    :ARG2 (c20-3 / use-01
                                 :ARG0 c20-16
                                 :ARG1 (c20-10 / company
                                               :name (c20-6 / name
                                                            :op1 "Google"
                                                            :op2 "Map"))
                                 :ARG2 (c20-1 / locate-01
                                              :ARG0 c20-16
                                              :ARG1 (c20-9 / country
                                                           :name (c20-7 / name
                                                                        :op1 "Canada")))
                                 :mod (c20-13 / too))
                    :mod (c20-8 / probable)
                    :ARG2-of (c20-11 / laugh-01
                                     :ARG0 (c20-5 / i)
                                     :manner (c20-0 / loud)
                                     :mode expressive)
                    :snt2-of c20-2)
       :ARG1 (c20-12 / media
                     :mod (c20-14 / country
                                  :name (c20-15 / name
                                                :op1 "America")))
       :ARG2 c20-3)

# ::snt just sad
# ::tokens ["just", "sad"]
# ::lemmas ["just", "sad"]
(c21-0 / sad-02
       :mod (c21-1 / just))

# ::snt Are you serious?
# ::tokens ["Are", "you", "serious", "?"]
# ::lemmas ["be", "you", "serious", "?"]
(c22-0 / serious-01
       :polarity (c22-2 / amr-unknown)
       :ARG1 (c22-1 / you))

# ::snt CNN so ignorant.
# ::tokens ["CNN", "so", "ignorant", "."]
# ::lemmas ["CNN", "so", "ignorant", "."]
(c23-3 / ignorant-02
       :ARG1 (c23-1 / publication
                    :name (c23-0 / name
                                 :op1 "CNN"))
       :degree (c23-2 / so))

# ::snt THEY'RE ONNA HORSE. Thank you kindly,
# ::tokens ["THEY'RE", "ONNA", "HORSE", ".", "Thank", "you", "kindly", ","]
# ::lemmas ["THEY'RE", "ONNA", "HORSE", ".", "thank", "you", "kindly", ","]
(c24-3 / multi-sentence
       :snt1 (c24-4 / be-located-at-91
                    :ARG1 (c24-0 / we)
                    :ARG2 (c24-2 / location
                                 :name (c24-7 / name
                                              :op1 "Onna"
                                              :op2 "Horse")))
       :snt2 (c24-8 / thank-01
                    :ARG0 (c24-5 / i)
                    :ARG1 (c24-1 / you)
                    :ARG1-of (c24-6 / kind-01)))

# ::snt ugh
# ::tokens ["ugh"]
# ::lemmas ["ugh"]
(c25-0 / ha
       :mode expressive)

# ::snt tru dat missy
# ::tokens ["tru", "dat", "missy"]
# ::lemmas ["tru", "dat", "missy"]
(c26-0 / say-01
       :ARG0 (c26-3 / i)
       :ARG1 (c26-2 / take-01
                    :ARG0 c26-3
                    :ARG1 (c26-1 / missy
                                 :ARG2-of c26-0)))

# ::snt Wait, then who are the Royal Canadian Valley Police?
# ::tokens ["Wait", ",", "then", "who", "are", "the", "Royal", "Canadian", "Valley", "Police", "?"]
# ::lemmas ["wait", ",", "then", "who", "be", "the", "Royal", "Canadian", "Valley", "Police", "?"]
(c27-6 / and
       :op1 (c27-0 / wait-01
                   :ARG1 (c27-1 / you)
                   :mode imperative)
       :op2 (c27-5 / police
                   :mod (c27-4 / valley
                               :name (c27-3 / name
                                            :op1 "Royal"
                                            :op2 "Canadian"
                                            :op3 "Valley"
                                            :op4 "Police"))
                   :domain (c27-2 / amr-unknown)))

# ::snt Have some effin' respect, just like the world did when your country was targeted
# ::tokens ["Have", "some", "effin", "'", "respect", ",", "just", "like", "the", "world", "did", "when", "your", "country", "was", "targeted"]
# ::lemmas ["have", "some", "effin", "'", "respect", ",", "just", "like", "the", "world", "do", "when", "your", "country", "be", "target"]
(c28-6 / respect-01
       :ARG0 (c28-1 / you)
       :mod (c28-3 / effin
                   :mode expressive)
       :ARG1-of (c28-5 / resemble-01
                       :ARG2 (c28-4 / respect-01
                                    :ARG0 (c28-2 / world)
                                    :time (c28-8 / target-01
                                                 :ARG1 (c28-7 / country
                                                              :poss c28-1))
                                    :mod (c28-0 / just)))
       :mode imperative)

# ::snt Pretty much
# ::tokens ["Pretty", "much"]
# ::lemmas ["pretty", "much"]
(c29-0 / pretty-much)

# ::snt lol, I'll be honest, I used to say mountain also! and i am Canadian born and raised..lol
# ::tokens ["lol", ",", "I", "'ll", "be", "honest", ",", "I", "used", "to", "say", "mountain", "also", "!", "and", "i", "am", "Canadian", "born", "and", "raised", "..", "lol"]
# ::lemmas ["lol", ",", "i", "'ll", "be", "honest", ",", "i", "use", "to", "say", "mountain", "also", "!", "and", "i", "be", "Canadian", "bear", "and", "raise", "..", "lol"]
(c30-13 / and
        :op1 (c30-0 / honest-01
                    :ARG0 (c30-6 / i)
                    :ARG1 (c30-12 / say-01
                                  :ARG0 c30-6
                                  :ARG1 (c30-2 / mountain)
                                  :mod (c30-5 / also)
                                  :time (c30-3 / use-03)))
        :op2 (c30-8 / and
                    :op1 (c30-4 / bear-02
                                :ARG1 c30-6
                                :mod (c30-10 / country
                                             :name (c30-7 / name
                                                          :op1 "Canada")))
                    :op2 (c30-9 / raise-03
                                :ARG1 c30-6
                                :mod c30-10))
        :ARG2-of (c30-1 / laugh-01
                        :manner (c30-11 / loud)
                        :mode expressive))

# ::snt really, I guess nobody's perfect!!
# ::tokens ["really", ",", "I", "guess", "nobody", "'s", "perfect", "!", "!"]
# ::lemmas ["really", ",", "i", "guess", "nobody", "be", "perfect", "!", "!"]
(c31-4 / guess-01
       :ARG0 (c31-0 / i)
       :ARG1 (c31-2 / perfect-02
                    :ARG1 (c31-1 / nobody))
       :ARG1-of (c31-3 / real-04))

# ::snt yes I know, I wish everyone did
# ::tokens ["yes", "I", "know", ",", "I", "wish", "everyone", "did"]
# ::lemmas ["yes", "i", "know", ",", "i", "wish", "everyone", "do"]
(c32-5 / and
       :op1 (c32-4 / know-01
                   :ARG0 (c32-2 / i))
       :op2 (c32-0 / wish-01
                   :ARG0 c32-2
                   :ARG1 (c32-3 / do-02
                                :ARG0 (c32-1 / everyone))))

# ::snt Said an expert on what "Mounted" is.
# ::tokens ["Said", "an", "expert", "on", "what", "\"", "Mounted", "\"", "is", "."]
# ::lemmas ["say", "an", "expert", "on", "what", "\"", "Mounted", "\"", "be", "."]
(c33-3 / say-01
       :ARG0 (c33-2 / person
                    :ARG1-of (c33-1 / expert-01
                                    :ARG2 (c33-4 / thing
                                                 :domain (c33-0 / mount-01)))))
