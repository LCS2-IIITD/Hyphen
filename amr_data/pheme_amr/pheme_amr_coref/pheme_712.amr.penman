# ::snt ( ) - ... ?
# ::tokens ["(", ")", "-", "...", "?"]
# ::lemmas ["(", ")", "-", "...", "?"]
(c1-0 / amr-empty)

# ::snt he deserves wt happend to him
# ::tokens ["he", "deserves", "wt", "happend", "to", "him"]
# ::lemmas ["he", "deserve", "wt", "happend", "to", "he"]
(c2-1 / deserve-01
      :ARG0 (c2-0 / he)
      :ARG1 (c2-2 / thing
                  :beneficiary c2-0))

# ::snt : Attack UPDATE: Cartoonists Cabu, Charb, Wolinski die - report
# ::tokens [":", "Attack", "UPDATE", ":", "Cartoonists", "Cabu", ",", "Charb", ",", "Wolinski", "die", "-", "report"]
# ::lemmas [":", "attack", "update", ":", "Cartoonists", "Cabu", ",", "Charb", ",", "Wolinski", "die", "-", "report"]
(c3-7 / report-01
      :ARG1 (c3-1 / update-02
                  :ARG2 (c3-11 / attack-01)
                  :ARG0-of (c3-0 / mean-01
                                 :ARG1 (c3-6 / die-01
                                             :ARG1 (c3-2 / and
                                                         :op1 (c3-8 / cartoonist
                                                                    :name (c3-3 / name
                                                                                :op1 "Caban"))
                                                         :op2 (c3-9 / cartoonist
                                                                    :name (c3-4 / name
                                                                                :op1 "Charb"))
                                                         :op3 (c3-10 / cartoonist
                                                                     :name (c3-5 / name
                                                                                 :op1 "Wolinski")))))))

# ::snt don't talk too much just catch them all.
# ::tokens ["do", "n't", "talk", "too", "much", "just", "catch", "them", "all", "."]
# ::lemmas ["do", "not", "talk", "too", "much", "just", "catch", "they", "all", "."]
(c4-5 / catch-03
      :ARG0 (c4-1 / you)
      :ARG1 (c4-7 / they
                  :mod (c4-8 / all))
      :mod (c4-0 / just)
      :concession (c4-6 / talk-01
                        :ARG0 c4-1
                        :ARG1-of (c4-2 / have-quant-91
                                       :ARG2 (c4-3 / much)
                                       :ARG3 (c4-4 / too))
                        :polarity -)
      :mode imperative)

# ::snt Marine Le Pen b next Prez of The Fifth Republic . Country needs someone with balls. And brain.
# ::tokens ["Marine", "Le", "Pen", "b", "next", "Prez", "of", "The", "Fifth", "Republic", ".", "Country", "needs", "someone", "with", "balls", ".", "And", "brain", "."]
# ::lemmas ["Marine", "Le", "Pen", "b", "next", "Prez", "of", "The", "Fifth", "Republic", ".", "Country", "need", "someone", "with", "ball", ".", "and", "brain", "."]
(c5-1 / multi-sentence
      :snt1 (c5-0 / have-org-role-91
                  :ARG0 (c5-5 / person
                              :name (c5-3 / name
                                          :op1 "Marine"
                                          :op2 "Le"
                                          :op3 "Pen"))
                  :ARG1 (c5-7 / country)
                  :ARG2 (c5-11 / president
                               :mod (c5-4 / next)))
      :snt2 (c5-6 / need-01
                  :ARG0 c5-7)
      :ARG1 (c5-9 / someone
                  :ARG0-of (c5-12 / have-03
                                  :ARG1 (c5-2 / ball)))
      :snt3 (c5-10 / and
                   :op2 (c5-8 / brain)))

# ::snt attacking unarmed people with automatic weapons. How brave there were!
# ::tokens ["attacking", "unarmed", "people", "with", "automatic", "weapons", ".", "How", "brave", "there", "were", "!"]
# ::lemmas ["attack", "unarmed", "people", "with", "automatic", "weapon", ".", "how", "brave", "there", "be", "!"]
(c6-1 / multi-sentence
      :snt1 (c6-7 / attack-01
                  :ARG1 (c6-5 / person
                              :ARG1-of (c6-3 / arm-01
                                             :polarity -))
                  :instrument (c6-0 / weapon
                                    :mod (c6-4 / automatic)))
      :snt2 (c6-2 / brave-02
                  :degree (c6-6 / so)
                  :mode expressive))
