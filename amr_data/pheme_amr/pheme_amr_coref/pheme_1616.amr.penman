# ::snt but , Coulibaly is a player for Napoli ?
# ::tokens ["but", ",", "Coulibaly", "is", "a", "player", "for", "Napoli", "?"]
# ::lemmas ["but", ",", "Coulibaly", "be", "a", "player", "for", "Napoli", "?"]
(c1-3 / contrast-01
      :ARG2 (c1-2 / person
                  :name (c1-0 / name
                              :op1 "Coulibaly")
                  :polarity (c1-6 / amr-unknown)
                  :ARG0-of (c1-5 / play-01
                                 :ARG2 (c1-4 / team
                                             :name (c1-1 / name
                                                         :op1 "Napoli")))))

# ::snt these people should not come out alive
# ::tokens ["these", "people", "should", "not", "come", "out", "alive"]
# ::lemmas ["these", "people", "should", "not", "come", "out", "alive"]
(c2-2 / recommend-01
      :ARG1 (c2-3 / come-out-09
                  :ARG1 (c2-1 / person
                              :mod (c2-4 / this))
                  :manner (c2-0 / live-01
                                :ARG0 c2-1)
                  :polarity -))

# ::snt So true. I notice they never use her name. If she were white it would be plastered everywhere.
# ::tokens ["So", "true", ".", "I", "notice", "they", "never", "use", "her", "name", ".", "If", "she", "were", "white", "it", "would", "be", "plastered", "everywhere", "."]
# ::lemmas ["so", "true", ".", "i", "notice", "they", "never", "use", "her", "name", ".", "if", "she", "be", "white", "it", "would", "be", "plaster", "everywhere", "."]
(c3-2 / multi-sentence
      :snt1 (c3-14 / true-01
                   :degree (c3-13 / so))
      :snt2 (c3-8 / notice-01
                  :ARG0 (c3-7 / i)
                  :ARG1 (c3-3 / use-01
                              :ARG0 (c3-12 / they)
                              :ARG1 (c3-9 / thing
                                          :ARG2-of (c3-10 / name-01
                                                          :ARG1 (c3-5 / she)))
                              :time (c3-6 / ever)
                              :polarity -))
      :snt3 (c3-11 / plaster-01
                   :ARG1 (c3-4 / everywhere)
                   :condition (c3-0 / white-02
                                    :ARG1 (c3-1 / she))))

# ::snt the terrorists should not come out alive.
# ::tokens ["the", "terrorists", "should", "not", "come", "out", "alive", "."]
# ::lemmas ["the", "terrorist", "should", "not", "come", "out", "alive", "."]
(c4-1 / recommend-01
      :ARG1 (c4-2 / come-out-09
                  :ARG1 (c4-0 / terrorist)
                  :manner (c4-3 / live-01
                                :ARG0 c4-0)
                  :polarity -))

# ::snt your right and let them get the ass kicked out of em
# ::tokens ["your", "right", "and", "let", "them", "get", "the", "ass", "kicked", "out", "of", "em"]
# ::lemmas ["your", "right", "and", "let", "they", "get", "the", "ass", "kick", "out", "of", "em"]
(c5-7 / and
      :op1 (c5-4 / right-06
                 :ARG1 (c5-0 / you))
      :op2 (c5-1 / let-01
                 :ARG0 c5-0
                 :ARG1 (c5-6 / kick-01
                             :ARG1 (c5-3 / ass
                                         :part-of (c5-5 / they))
                             :direction (c5-2 / out-of
                                              :op1 c5-5))))

# ::snt Crazy Fellows
# ::tokens ["Crazy", "Fellows"]
# ::lemmas ["Crazy", "Fellows"]
(c6-1 / person
      :name (c6-0 / name
                  :op1 "Crazy"
                  :op2 "Fellows"))

# ::snt Shoot to kill should be the policy when dealing with terrorists ANYWHERE
# ::tokens ["Shoot", "to", "kill", "should", "be", "the", "policy", "when", "dealing", "with", "terrorists", "ANYWHERE"]
# ::lemmas ["Shoot", "to", "kill", "should", "be", "the", "policy", "when", "deal", "with", "terrorist", "anywhere"]
(c7-1 / recommend-01
      :ARG1 (c7-0 / policy-01
                  :ARG1 (c7-3 / shoot-02
                              :purpose (c7-5 / kill-01))
                  :time (c7-2 / deal-01
                              :ARG2 (c7-4 / terrorist)
                              :location (c7-6 / anywhere))))

# ::snt Yes they should, their goal is to die as a martyr - let them rot in a cell for the rest of their lives instead.
# ::tokens ["Yes", "they", "should", ",", "their", "goal", "is", "to", "die", "as", "a", "martyr", "-", "let", "them", "rot", "in", "a", "cell", "for", "the", "rest", "of", "their", "lives", "instead", "."]
# ::lemmas ["yes", "they", "should", ",", "their", "goal", "be", "to", "die", "as", "a", "martyr", "-", "let", "they", "rot", "in", "a", "cell", "for", "the", "rest", "of", "their", "life", "instead", "."]
(c8-7 / recommend-01
      :ARG1 (c8-6 / die-01
                  :ARG1 (c8-10 / they)
                  :manner (c8-2 / martyr-01
                                :ARG1 c8-10)
                  :ARG1-of (c8-4 / instead-of-91
                                 :ARG2 (c8-1 / let-01
                                             :ARG1 (c8-5 / rot-01
                                                         :ARG1 c8-10
                                                         :location (c8-8 / cell)
                                                         :duration (c8-3 / rest
                                                                         :part-of (c8-9 / life
                                                                                        :poss c8-10))))))
      :mod (c8-0 / yes))

# ::snt Multiple incidents by French citizens all of whom have not been neutralised. What a nightmare for French Security.
# ::tokens ["Multiple", "incidents", "by", "French", "citizens", "all", "of", "whom", "have", "not", "been", "neutralised", ".", "What", "a", "nightmare", "for", "French", "Security", "."]
# ::lemmas ["multiple", "incident", "by", "French", "citizen", "all", "of", "whom", "have", "not", "be", "neutralise", ".", "what", "a", "nightmare", "for", "French", "Security", "."]
(c9-0 / multi-sentence
      :snt1 (c9-2 / incident
                  :quant (c9-5 / multiple)
                  :source (c9-7 / citizen
                                :mod (c9-6 / country
                                           :name (c9-3 / name
                                                       :op1 "France")))
                  :ARG1-of (c9-4 / neutralize-01
                                 :polarity -)
                  :mod (c9-10 / all))
      :snt2 (c9-8 / nightmare
                  :beneficiary (c9-9 / security
                                     :mod c9-6)
                  :degree (c9-1 / so)))

# ::snt exactly
# ::tokens ["exactly"]
# ::lemmas ["exactly"]
(c10-0 / exact)

# ::snt the policewoman had a name...use it
# ::tokens ["the", "policewoman", "had", "a", "name", "...", "use", "it"]
# ::lemmas ["the", "policewoman", "have", "a", "name", "...", "use", "it"]
(c11-0 / have-03
       :ARG0 (c11-4 / person
                    :ARG0-of (c11-6 / have-org-role-91
                                    :ARG2 (c11-5 / policewoman)))
       :ARG1 (c11-3 / name-01
                    :ARG1 c11-4)
       :ARG1-of (c11-2 / use-01
                       :ARG0 (c11-1 / you)
                       :mode imperative))

# ::snt What us wrong with these people
# ::tokens ["What", "us", "wrong", "with", "these", "people"]
# ::lemmas ["what", "we", "wrong", "with", "these", "people"]
(c12-0 / wrong-02
       :ARG1 (c12-1 / we)
       :ARG2 (c12-4 / thing
                    :domain (c12-2 / person
                                   :mod (c12-3 / this))))

# ::snt quite terrifying
# ::tokens ["quite", "terrifying"]
# ::lemmas ["quite", "terrifying"]
(c13-1 / terrify-01
       :degree (c13-0 / quite))

# ::snt . Why don't these Eastern people stay away from the West. The West don't want horrible little demon filled Eastern people around.
# ::tokens [".", "Why", "do", "n't", "these", "Eastern", "people", "stay", "away", "from", "the", "West", ".", "The", "West", "do", "n't", "want", "horrible", "little", "demon", "filled", "Eastern", "people", "around", "."]
# ::lemmas [".", "why", "do", "not", "these", "Eastern", "people", "stay", "away", "from", "the", "West", ".", "the", "West", "do", "not", "want", "horrible", "little", "demon", "fill", "Eastern", "people", "around", "."]
(c15-0 / multi-sentence
       :snt1 (c15-6 / stay-01
                    :ARG1 (c15-4 / person
                                 :mod (c15-14 / world-region
                                              :name (c15-12 / name
                                                            :op1 "East"))
                                 :mod (c15-18 / this))
                    :ARG3 (c15-7 / away
                                 :op1 (c15-2 / world-region
                                             :name (c15-16 / name
                                                           :op1 "West")))
                    :ARG1-of (c15-17 / cause-01
                                     :ARG0 (c15-15 / amr-unknown))
                    :polarity -)
       :snt2 (c15-1 / want-01
                    :ARG0 (c15-11 / world-region
                                  :name (c15-3 / name
                                               :op1 "West"))
                    :ARG1 (c15-5 / demon
                                 :mod (c15-9 / little)
                                 :mod (c15-8 / horrible)
                                 :ARG1-of (c15-10 / fill-01
                                                  :ARG2 c15-14)
                                 :location (c15-13 / around))
                    :polarity -))

# ::snt STOP showing live police positions !!!!!!!!!
# ::tokens ["STOP", "showing", "live", "police", "positions", "!", "!", "!", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["stop", "show", "live", "police", "position", "!", "!", "!", "!", "!", "!", "!", "!", "!"]
(c16-4 / stop-01
       :ARG0 (c16-0 / you)
       :ARG1 (c16-2 / show-01
                    :ARG0 c16-0
                    :ARG1 (c16-3 / position-02
                                 :ARG0 (c16-5 / police)
                                 :manner (c16-1 / live)))
       :mode imperative)

# ::snt the worst case scenario for the French government
# ::tokens ["the", "worst", "case", "scenario", "for", "the", "French", "government"]
# ::lemmas ["the", "bad", "case", "scenario", "for", "the", "French", "government"]
(c17-8 / scenario
       :ARG1-of (c17-5 / case-04
                       :ARG1-of (c17-0 / have-degree-91
                                       :ARG2 (c17-2 / bad-07)
                                       :ARG3 (c17-1 / most)))
       :mod (c17-6 / government-organization
                   :ARG0-of (c17-4 / govern-01
                                   :ARG1 (c17-7 / country
                                                :name (c17-3 / name
                                                             :op1 "France")))))

# ::snt soon Europe and the uk will be an Islamic state... give it time. They are playing the long game. In the end it will be too late.
# ::tokens ["soon", "Europe", "and", "the", "uk", "will", "be", "an", "Islamic", "state", "...", "give", "it", "time", ".", "They", "are", "playing", "the", "long", "game", ".", "In", "the", "end", "it", "will", "be", "too", "late", "."]
# ::lemmas ["soon", "Europe", "and", "the", "uk", "will", "be", "an", "Islamic", "state", "...", "give", "it", "time", ".", "they", "be", "play", "the", "long", "game", ".", "in", "the", "end", "it", "will", "be", "too", "late", "."]
(c18-0 / multi-sentence
       :snt1 (c18-5 / state
                    :domain (c18-6 / and
                                   :op1 (c18-19 / continent
                                                :name (c18-11 / name
                                                              :op1 "Europe"))
                                   :op2 (c18-3 / country
                                               :name (c18-18 / name
                                                             :op1 "Uk")))
                    :mod (c18-12 / religious-group
                                 :name (c18-1 / name
                                              :op1 "Islam"))
                    :time (c18-9 / soon))
       :snt2 (c18-13 / give-01
                     :ARG0 (c18-17 / you)
                     :ARG1 (c18-21 / time)
                     :ARG2 (c18-14 / it)
                     :mode imperative)
       :snt3 (c18-2 / play-01
                    :ARG0 (c18-20 / they)
                    :ARG1 (c18-4 / game
                                 :ARG1-of (c18-8 / long-03)))
       :snt4 (c18-7 / have-degree-91
                    :ARG1 (c18-10 / end-01)
                    :ARG2 (c18-16 / late)
                    :ARG3 (c18-15 / too)))

# ::snt : Police release pictures of man and woman suspected
# ::tokens [":", "Police", "release", "pictures", "of", "man", "and", "woman", "suspected"]
# ::lemmas [":", "police", "release", "picture", "of", "man", "and", "woman", "suspect"]
(c19-3 / release-01
       :ARG0 (c19-2 / police)
       :ARG1 (c19-5 / picture
                    :topic (c19-6 / and
                                  :op1 (c19-1 / man)
                                  :op2 (c19-0 / woman)
                                  :ARG2-of (c19-4 / suspect-01))))

# ::snt I've seen that man before somewhere, think he takes spinning classes around the area
# ::tokens ["I", "'ve", "seen", "that", "man", "before", "somewhere", ",", "think", "he", "takes", "spinning", "classes", "around", "the", "area"]
# ::lemmas ["i", "'ve", "see", "that", "man", "before", "somewhere", ",", "think", "he", "take", "spinning", "class", "around", "the", "area"]
(c20-12 / and
        :op1 (c20-10 / see-01
                     :ARG0 (c20-5 / i)
                     :ARG1 (c20-1 / man
                                  :mod (c20-11 / that))
                     :time (c20-2 / before
                                  :op1 (c20-3 / somewhere)))
        :op2 (c20-9 / think-01
                    :ARG0 c20-5
                    :ARG1 (c20-6 / take-01
                                 :ARG0 c20-1
                                 :ARG1 (c20-8 / class
                                              :topic (c20-0 / spin-03))
                                 :location (c20-4 / around
                                                  :op1 (c20-7 / area)))))
