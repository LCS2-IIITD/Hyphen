# ::snt your babbling makes no sense enjoy your crappy job in the greatest country in the world.
# ::tokens ["your", "babbling", "makes", "no", "sense", "enjoy", "your", "crappy", "job", "in", "the", "greatest", "country", "in", "the", "world", "."]
# ::lemmas ["your", "babbling", "make", "no", "sense", "enjoy", "your", "crappy", "job", "in", "the", "great", "country", "in", "the", "world", "."]
(c1-6 / enjoy-01
      :ARG0 (c1-1 / you)
      :ARG1 (c1-0 / job
                  :poss c1-1
                  :ARG1-of (c1-8 / crap-01)
                  :location (c1-7 / country
                                  :ARG1-of (c1-2 / have-degree-91
                                                 :ARG2 (c1-9 / great)
                                                 :ARG3 (c1-4 / most)
                                                 :ARG5 (c1-3 / world))))
      :concession (c1-10 / sense-02
                         :ARG1 (c1-5 / babble-01
                                     :ARG0 c1-1)
                         :polarity -)
      :mode imperative)

# ::snt you can have as many masters as you want but if your no good at the job it seems like a waste.
# ::tokens ["you", "can", "have", "as", "many", "masters", "as", "you", "want", "but", "if", "your", "no", "good", "at", "the", "job", "it", "seems", "like", "a", "waste", "."]
# ::lemmas ["you", "can", "have", "as", "many", "master", "as", "you", "want", "but", "if", "your", "no", "good", "at", "the", "job", "it", "seem", "like", "a", "waste", "."]
(c2-9 / contrast-01
      :ARG1 (c2-7 / possible-01
                  :ARG1 (c2-0 / have-03
                              :ARG0 (c2-1 / you)
                              :ARG1 (c2-4 / master
                                          :ARG1-of (c2-12 / have-quant-91
                                                          :ARG2 (c2-8 / many)
                                                          :ARG3 (c2-5 / equal)
                                                          :ARG4 (c2-2 / want-01
                                                                      :ARG0 c2-1)))))
      :ARG2 (c2-11 / seem-01
                   :ARG1 (c2-6 / waste-01)
                   :condition (c2-10 / good-03
                                     :ARG1 c2-1
                                     :ARG2 (c2-3 / job)
                                     :polarity -)))

# ::snt problems with you are so negatives people I had letter from Governor general I ask art council for help no one care
# ::tokens ["problems", "with", "you", "are", "so", "negatives", "people", "I", "had", "letter", "from", "Governor", "general", "I", "ask", "art", "council", "for", "help", "no", "one", "care"]
# ::lemmas ["problem", "with", "you", "be", "so", "negative", "people", "i", "have", "letter", "from", "Governor", "general", "i", "ask", "art", "council", "for", "help", "no", "one", "care"]
(c3-8 / have-degree-91
      :ARG1 (c3-1 / problem
                  :topic (c3-16 / you))
      :ARG2 (c3-10 / negative-03
                   :ARG1 c3-1)
      :ARG3 (c3-4 / so)
      :ARG6 (c3-7 / have-03
                  :ARG0 (c3-13 / i)
                  :ARG1 (c3-9 / letter
                              :source (c3-5 / person
                                            :ARG0-of (c3-0 / have-org-role-91
                                                           :ARG2 (c3-11 / governor
                                                                        :mod (c3-2 / general))))))
      :ARG0-of (c3-18 / cause-01
                      :ARG1 (c3-6 / ask-02
                                  :ARG0 c3-13
                                  :ARG1 (c3-14 / help-01)
                                  :ARG2 (c3-3 / council
                                              :mod (c3-12 / art))
                                  :ARG1-of (c3-15 / care-01
                                                  :ARG0 (c3-17 / no-one)))))

# ::snt Peter - glad you're OK.
# ::tokens ["Peter", "-", "glad", "you", "'re", "OK", "."]
# ::lemmas ["Peter", "-", "glad", "you", "be", "ok", "."]
(c4-4 / say-01
      :ARG1 (c4-3 / glad-02
                  :ARG0 (c4-0 / okay-03
                              :ARG1 (c4-2 / person
                                          :name (c4-1 / name
                                                      :op1 "Peter")
                                          :ARG1-of c4-3)))
      :ARG2 c4-2)

# ::snt I am homless as photographer he pay for ...he should pay me $500 to take nice photos
# ::tokens ["I", "am", "homless", "as", "photographer", "he", "pay", "for", "...", "he", "should", "pay", "me", "$", "500", "to", "take", "nice", "photos"]
# ::lemmas ["i", "be", "homless", "as", "photographer", "he", "pay", "for", "...", "he", "should", "pay", "i", "$", "500", "to", "take", "nice", "photo"]
(c5-1 / multi-sentence
      :snt1 (c5-0 / have-mod-91
                  :ARG1 (c5-4 / i)
                  :ARG2 (c5-15 / homless)
                  :ARG3 (c5-7 / person
                              :ARG0-of (c5-14 / photograph-01)
                              :ARG3-of (c5-2 / pay-01
                                             :ARG0 (c5-6 / he)))
                  :polarity -)
      :snt2 (c5-8 / recommend-01
                  :ARG1 (c5-13 / pay-01
                               :ARG0 (c5-12 / he)
                               :ARG1 (c5-9 / monetary-quantity
                                           :unit (c5-10 / dollar)
                                           :quant 500)
                               :ARG2 (c5-11 / i)
                               :purpose (c5-3 / photograph-01
                                              :ARG0 c5-12
                                              :ARG1-of (c5-5 / nice-01)))
                  :ARG2 c5-12))

# ::snt We will not run we are Canadian we defend Freedom
# ::tokens ["We", "will", "not", "run", "we", "are", "Canadian", "we", "defend", "Freedom"]
# ::lemmas ["we", "will", "not", "run", "we", "be", "Canadian", "we", "defend", "freedom"]
(c6-2 / multi-sentence
      :snt1 (c6-6 / run-02
                  :ARG0 (c6-0 / we)
                  :polarity -)
      :snt2 (c6-7 / country
                  :name (c6-5 / name
                              :op1 "Canada")
                  :domain (c6-4 / we))
      :snt3 (c6-8 / defend-01
                  :ARG0 (c6-3 / we)
                  :ARG1 (c6-1 / free-04)))

# ::snt glad to hear that everyone appears to be ok. Thoughts go out to the soldier who was shot at the War Memorial, &amp; his family.
# ::tokens ["glad", "to", "hear", "that", "everyone", "appears", "to", "be", "ok", ".", "Thoughts", "go", "out", "to", "the", "soldier", "who", "was", "shot", "at", "the", "War", "Memorial", ",", "&", "amp", ";", "his", "family", "."]
# ::lemmas ["glad", "to", "hear", "that", "everyone", "appear", "to", "be", "ok", ".", "thought", "go", "out", "to", "the", "soldier", "who", "be", "shoot", "at", "the", "War", "Memorial", ",", "&", "amp", ";", "his", "family", "."]
(c7-2 / multi-sentence
      :snt1 (c7-11 / glad-02
                   :ARG0 (c7-0 / hear-01
                               :ARG0 (c7-8 / i)
                               :ARG1 (c7-14 / appear-02
                                            :ARG1 (c7-4 / okay-04
                                                        :ARG1 (c7-5 / everyone)))))
      :snt2 (c7-10 / go-out-17
                   :ARG1 (c7-13 / think-01)
                   :ARG2 (c7-7 / and
                               :op1 (c7-12 / soldier
                                           :ARG1-of (c7-6 / shoot-01
                                                          :location (c7-3 / building
                                                                          :name (c7-9 / name
                                                                                      :op1 "War"
                                                                                      :op2 "Memorial"))))
                               :op2 (c7-1 / family
                                          :poss c7-12))))

# ::snt . Still have that Gun Lobby t-shirt? Asking for a friend.
# ::tokens [".", "Still", "have", "that", "Gun", "Lobby", "t", "-", "shirt", "?", "Asking", "for", "a", "friend", "."]
# ::lemmas [".", "still", "have", "that", "Gun", "Lobby", "t", "-", "shirt", "?", "ask", "for", "a", "friend", "."]
(c8-3 / multi-sentence
      :snt1 (c8-0 / have-03
                  :polarity (c8-13 / amr-unknown)
                  :ARG0 (c8-1 / you)
                  :ARG1 (c8-12 / t-shirt
                               :mod (c8-2 / lobby-01
                                          :ARG1 (c8-9 / gun))
                               :mod (c8-10 / that))
                  :mod (c8-11 / still))
      :snt2 (c8-6 / ask-02
                  :ARG0 (c8-7 / i)
                  :ARG2 (c8-8 / person
                              :ARG0-of (c8-4 / have-rel-role-91
                                             :ARG2 (c8-5 / friend)))))

# ::snt : who let you in this country iran_photos You are not what we need. Get an hinest job, not handouts.
# ::tokens [":", "who", "let", "you", "in", "this", "country", "iran_photos", "You", "are", "not", "what", "we", "need", ".", "Get", "an", "hinest", "job", ",", "not", "handouts", "."]
# ::lemmas [":", "who", "let", "you", "in", "this", "country", "iran_photos", "you", "be", "not", "what", "we", "need", ".", "get", "an", "hinest", "job", ",", "not", "handout", "."]
(c9-1 / multi-sentence
      :snt1 (c9-7 / let-01
                  :ARG0 (c9-5 / amr-unknown)
                  :ARG1 (c9-9 / be-located-at-91
                              :ARG1 (c9-14 / you)
                              :ARG2 (c9-16 / country
                                           :name (c9-10 / name
                                                        :op1 "Iran"))))
      :snt2 (c9-15 / need-01
                   :ARG0 (c9-13 / we)
                   :ARG1 (c9-18 / thing
                                :domain (c9-17 / you))
                   :polarity -)
      :snt3 (c9-12 / get-01
                   :ARG0 (c9-2 / you)
                   :ARG1 (c9-0 / job
                               :ARG1-of (c9-6 / have-degree-91
                                              :ARG2 (c9-8 / fancy-02
                                                          :ARG1 c9-0)
                                              :ARG3 (c9-11 / most)))
                   :ARG1-of (c9-3 / contrast-01
                                  :ARG2 (c9-4 / hand-out-03
                                              :polarity -))
                   :mode imperative))

# ::snt now I am using my art against all of you are Canadian to teach you are to respect to human rights
# ::tokens ["now", "I", "am", "using", "my", "art", "against", "all", "of", "you", "are", "Canadian", "to", "teach", "you", "are", "to", "respect", "to", "human", "rights"]
# ::lemmas ["now", "i", "be", "use", "my", "art", "against", "all", "of", "you", "be", "Canadian", "to", "teach", "you", "be", "to", "respect", "to", "human", "right"]
(c10-2 / use-01
       :ARG0 (c10-5 / i)
       :ARG1 (c10-14 / art
                     :poss c10-5)
       :ARG2 (c10-3 / oppose-01
                    :ARG0 c10-5
                    :ARG1 (c10-9 / person
                                 :mod (c10-11 / country
                                              :name (c10-7 / name
                                                           :op1 "Canada"))
                                 :mod (c10-4 / all)
                                 :ARG1-of (c10-12 / include-91
                                                  :ARG2 (c10-1 / you))))
       :time (c10-8 / now)
       :purpose (c10-13 / teach-01
                        :ARG0 c10-5
                        :ARG1 (c10-10 / respect-01
                                      :ARG0 c10-1
                                      :ARG1 (c10-6 / right-05
                                                   :ARG1 (c10-0 / human)))
                        :ARG2 c10-1))

# ::snt if any of Canadian can work like me in art and in handyman and have my smart brain I am willing to hang myself
# ::tokens ["if", "any", "of", "Canadian", "can", "work", "like", "me", "in", "art", "and", "in", "handyman", "and", "have", "my", "smart", "brain", "I", "am", "willing", "to", "hang", "myself"]
# ::lemmas ["if", "any", "of", "Canadian", "can", "work", "like", "i", "in", "art", "and", "in", "handyman", "and", "have", "my", "smart", "brain", "i", "be", "willing", "to", "hang", "myself"]
(c11-1 / will-02
       :ARG0 (c11-6 / i
                    :part (c11-3 / brain
                                 :ARG1-of (c11-14 / smart-06)))
       :ARG1 (c11-0 / hang-01
                    :ARG0 c11-6
                    :ARG1 c11-6)
       :condition (c11-10 / possible-01
                          :ARG1 (c11-17 / and
                                        :op1 (c11-7 / work-01
                                                    :ARG0 (c11-16 / person
                                                                  :mod (c11-12 / country
                                                                               :name (c11-8 / name
                                                                                            :op1 "Canada"))
                                                                  :mod (c11-5 / any))
                                                    :ARG1-of (c11-11 / resemble-01
                                                                     :ARG2 (c11-4 / work-01
                                                                                  :ARG0 c11-6
                                                                                  :ARG1 (c11-9 / and
                                                                                               :op1 (c11-15 / art)
                                                                                               :op2 (c11-2 / handyman)))))
                                        :op2 (c11-13 / have-03
                                                     :ARG0 c11-16
                                                     :ARG1 c11-3))))

# ::snt yes you rights with master in art I am stupid to land in canada working as labours
# ::tokens ["yes", "you", "rights", "with", "master", "in", "art", "I", "am", "stupid", "to", "land", "in", "canada", "working", "as", "labours"]
# ::lemmas ["yes", "you", "right", "with", "master", "in", "art", "i", "be", "stupid", "to", "land", "in", "canada", "work", "as", "labour"]
(c13-3 / multi-sentence
       :snt1 (c13-7 / right-05
                    :ARG1 (c13-0 / you)
                    :ARG2 (c13-6 / master-01
                                 :ARG1 (c13-13 / art))
                    :mod (c13-11 / yes))
       :snt2 (c13-12 / stupid
                     :domain (c13-4 / i)
                     :ARG0-of (c13-8 / cause-01
                                     :ARG1 (c13-2 / land-01
                                                  :ARG1 c13-4
                                                  :location (c13-9 / country
                                                                   :name (c13-5 / name
                                                                                :op1 "Canada"))
                                                  :manner (c13-1 / work-01
                                                                 :ARG0 c13-4
                                                                 :manner (c13-10 / labour))))))

# ::snt you sound like an idiot maybe that's why your sleeping in your car.
# ::tokens ["you", "sound", "like", "an", "idiot", "maybe", "that", "'s", "why", "your", "sleeping", "in", "your", "car", "."]
# ::lemmas ["you", "sound", "like", "an", "idiot", "maybe", "that", "be", "why", "your", "sleep", "in", "your", "car", "."]
(c14-3 / possible-01
       :ARG1 (c14-5 / cause-01
                    :ARG0 (c14-6 / sound-01
                                 :ARG1 (c14-0 / you)
                                 :ARG2 (c14-2 / idiot))
                    :ARG1 (c14-1 / sleep-01
                                 :ARG0 c14-0
                                 :location (c14-4 / car
                                                  :poss c14-0))))

# ::snt Where's Pierre Trudeau and the War Measures Act when we need them?
# ::tokens ["Where", "'s", "Pierre", "Trudeau", "and", "the", "War", "Measures", "Act", "when", "we", "need", "them", "?"]
# ::lemmas ["where", "be", "Pierre", "Trudeau", "and", "the", "War", "Measures", "Act", "when", "we", "need", "they", "?"]
(c15-2 / be-located-at-91
       :ARG1 (c15-8 / and
                    :op1 (c15-6 / person
                                :name (c15-4 / name
                                             :op1 "Pierre"
                                             :op2 "Truman"))
                    :op2 (c15-1 / law
                                :name (c15-5 / name
                                             :op1 "War"
                                             :op2 "M Measures"
                                             :op3 "Act")))
       :ARG2 (c15-3 / amr-unknown)
       :time (c15-7 / need-01
                    :ARG0 (c15-0 / we)
                    :ARG1 c15-8))

# ::snt did you stolen $47.000 from F-35 photography and date Iranian women and I sleeping days in car in vancouver
# ::tokens ["did", "you", "stolen", "$", "47.000", "from", "F-35", "photography", "and", "date", "Iranian", "women", "and", "I", "sleeping", "days", "in", "car", "in", "vancouver"]
# ::lemmas ["do", "you", "steal", "$", "47.000", "from", "F-35", "photography", "and", "date", "Iranian", "woman", "and", "i", "sleep", "day", "in", "car", "in", "vancouver"]
(c16-7 / and
       :op1 (c16-6 / steal-01
                   :ARG0 (c16-16 / you)
                   :ARG1 (c16-1 / monetary-quantity
                                :unit (c16-4 / dollar)
                                :quant 47000)
                   :ARG2 (c16-3 / photography
                                :mod (c16-13 / aircraft-type
                                             :name (c16-8 / name
                                                          :op1 "F-35"))))
       :op2 (c16-0 / date-02
                   :ARG0 c16-16
                   :ARG1 (c16-9 / and
                                :op1 (c16-12 / woman
                                             :mod (c16-18 / country
                                                          :name (c16-17 / name
                                                                        :op1 "Iran")))
                                :op2 (c16-14 / i))
                   :duration (c16-10 / multiple
                                     :op1 (c16-20 / temporal-quantity
                                                  :unit (c16-11 / day)
                                                  :quant 1))
                   :location (c16-5 / car
                                    :location (c16-15 / city
                                                      :name (c16-2 / name
                                                                   :op1 "Vancouver"))))
       :polarity (c16-19 / amr-unknown))

# ::snt Tell and to uphold and defend human Rights!
# ::tokens ["Tell", "and", "to", "uphold", "and", "defend", "human", "Rights", "!"]
# ::lemmas ["tell", "and", "to", "uphold", "and", "defend", "human", "Rights", "!"]
(c17-6 / and
       :op1 (c17-5 / tell-01
                   :ARG0 (c17-1 / you)
                   :mode imperative)
       :op2 (c17-2 / uphold-01
                   :ARG0 c17-1
                   :ARG1 (c17-3 / right-05
                                :ARG1 (c17-0 / human))
                   :mode imperative)
       :op3 (c17-4 / defend-01
                   :ARG0 c17-1
                   :ARG1 c17-3
                   :mode imperative))

# ::snt he is rich he is ok
# ::tokens ["he", "is", "rich", "he", "is", "ok"]
# ::lemmas ["he", "be", "rich", "he", "be", "ok"]
(c19-3 / and
       :op1 (c19-1 / rich
                   :domain (c19-0 / he))
       :op2 (c19-2 / okay-04
                   :ARG1 c19-0))

# ::snt kudos go out to him
# ::tokens ["kudos", "go", "out", "to", "him"]
# ::lemmas ["kudo", "go", "out", "to", "he"]
(c20-2 / go-out-17
       :ARG1 (c20-1 / kudos)
       :ARG2 (c20-0 / he))
