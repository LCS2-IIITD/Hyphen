# ::snt the world and it biased mind. Many died here everyday and no one ever seems to care. Well, accept my condolence the people of France.
# ::tokens ["the", "world", "and", "it", "biased", "mind", ".", "Many", "died", "here", "everyday", "and", "no", "one", "ever", "seems", "to", "care", ".", "Well", ",", "accept", "my", "condolence", "the", "people", "of", "France", "."]
# ::lemmas ["the", "world", "and", "it", "bias", "mind", ".", "many", "die", "here", "everyday", "and", "no", "one", "ever", "seem", "to", "care", ".", "well", ",", "accept", "my", "condolence", "the", "people", "of", "France", "."]
(c1-1 / multi-sentence
      :snt1 (c1-7 / and
                  :op1 (c1-16 / world)
                  :op2 (c1-14 / mind
                              :ARG1-of (c1-10 / bias-01)))
      :snt2 (c1-17 / and
                   :op1 (c1-4 / die-01
                              :ARG1 (c1-9 / many)
                              :location (c1-8 / here)
                              :frequency (c1-15 / rate-entity-91
                                                :ARG3 (c1-23 / temporal-quantity
                                                             :unit (c1-0 / day)
                                                             :quant 1)))
                   :op2 (c1-6 / seem-01
                              :ARG1 (c1-22 / care-01
                                           :ARG0 (c1-12 / no-one)
                                           :time (c1-11 / ever))))
      :snt3 (c1-13 / accept-01
                   :ARG0 (c1-20 / you)
                   :ARG1 (c1-5 / condolence
                               :poss (c1-18 / i))
                   :ARG2 (c1-3 / person
                               :mod (c1-19 / country
                                           :name (c1-21 / name
                                                        :op1 "France")))
                   :mod (c1-2 / well)
                   :mode imperative))

# ::snt The World needs to come together and stop this madness.
# ::tokens ["The", "World", "needs", "to", "come", "together", "and", "stop", "this", "madness", "."]
# ::lemmas ["the", "World", "need", "to", "come", "together", "and", "stop", "this", "madness", "."]
(c3-2 / need-01
      :ARG0 (c3-0 / world)
      :ARG1 (c3-7 / and
                  :op1 (c3-3 / come-01
                             :ARG1 c3-0
                             :mod (c3-6 / together))
                  :op2 (c3-5 / stop-01
                             :ARG0 c3-0
                             :ARG1 (c3-1 / madness
                                         :mod (c3-4 / this)))))

# ::snt : World sends messages of condolence outrage defiance after Paris attack!!!
# ::tokens [":", "World", "sends", "messages", "of", "condolence", "outrage", "defiance", "after", "Paris", "attack", "!", "!", "!"]
# ::lemmas [":", "world", "send", "message", "of", "condolence", "outrage", "defiance", "after", "Paris", "attack", "!", "!", "!"]
(c5-8 / send-01
      :ARG0 (c5-0 / world)
      :ARG1 (c5-1 / message-01
                  :ARG1 (c5-6 / condolence)
                  :ARG0-of (c5-2 / outrage-01
                                 :ARG1 (c5-5 / defy-01)))
      :time (c5-9 / after
                  :op1 (c5-3 / attack-01
                             :location (c5-7 / city
                                             :name (c5-4 / name
                                                         :op1 "Paris"))))
      :mode expressive)

# ::snt France will rise and get the justice they deserve.
# ::tokens ["France", "will", "rise", "and", "get", "the", "justice", "they", "deserve", "."]
# ::lemmas ["France", "will", "rise", "and", "get", "the", "justice", "they", "deserve", "."]
(c6-6 / and
      :op1 (c6-2 / rise-01
                 :ARG1 (c6-3 / country
                             :name (c6-1 / name
                                         :op1 "France")))
      :op2 (c6-4 / get-01
                 :ARG0 c6-3
                 :ARG1 (c6-0 / justice
                             :ARG1-of (c6-5 / deserve-01
                                            :ARG0 c6-3))))

# ::snt on va le charlinizer de nouveaux
# ::tokens ["on", "va", "le", "charlinizer", "de", "nouveaux"]
# ::lemmas ["on", "va", "le", "charlinizer", "de", "nouveaux"]
(c7-0 / le
      :mode expressive)

# ::snt N REPORTERS SUPPORT FREE PRESS
# ::tokens ["N", "REPORTERS", "SUPPORT", "FREE", "PRESS"]
# ::lemmas ["N", "reporter", "support", "free", "PRESS"]
(c8-3 / support-01
      :ARG0 (c8-1 / person
                  :ARG0-of (c8-2 / report-01))
      :ARG1 (c8-4 / press
                  :ARG1-of (c8-0 / free-04)))

# ::snt Same pain as we feel for our brothers and sister France killing daily.
# ::tokens ["Same", "pain", "as", "we", "feel", "for", "our", "brothers", "and", "sister", "France", "killing", "daily", "."]
# ::lemmas ["same", "pain", "as", "we", "feel", "for", "our", "brother", "and", "sister", "France", "kill", "daily", "."]
(c9-13 / same-01
       :ARG1 (c9-9 / pain-01
                   :ARG1-of (c9-3 / feel-01
                                  :ARG0 (c9-1 / we)
                                  :ARG2 (c9-15 / kill-01
                                               :ARG0 (c9-17 / and
                                                            :op1 (c9-16 / person
                                                                        :ARG0-of (c9-0 / have-rel-role-91
                                                                                       :ARG1 c9-1
                                                                                       :ARG2 (c9-6 / brother)))
                                                            :op2 (c9-5 / person
                                                                       :ARG0-of (c9-4 / have-rel-role-91
                                                                                      :ARG1 c9-1
                                                                                      :ARG2 (c9-7 / sister)))
                                                            :mod (c9-11 / country
                                                                        :name (c9-8 / name
                                                                                    :op1 "France")))
                                               :frequency (c9-10 / rate-entity-91
                                                                 :ARG3 (c9-14 / temporal-quantity
                                                                              :unit (c9-12 / day)
                                                                              :quant 1)))))
       :ARG2 (c9-2 / pain-01
                   :ARG1 c9-1))

# ::snt Je suis Muslim.
# ::tokens ["Je", "suis", "Muslim", "."]
# ::lemmas ["Je", "suis", "Muslim", "."]
(c11-1 / religious-group
       :name (c11-0 / name
                    :op1 "Je suis"
                    :op2 "Muslim"))

# ::snt Report this:Americans DON'T want to close Gitmo or release terrorists. Obama not listening to ppl or this will be us.
# ::tokens ["Report", "this", ":", "Americans", "DON'T", "want", "to", "close", "Gitmo", "or", "release", "terrorists", ".", "Obama", "not", "listening", "to", "ppl", "or", "this", "will", "be", "us", "."]
# ::lemmas ["report", "this", ":", "Americans", "don't", "want", "to", "close", "Gitmo", "or", "release", "terrorist", ".", "Obama", "not", "listen", "to", "ppl", "or", "this", "will", "be", "we", "."]
(c12-0 / multi-sentence
       :snt1 (c12-12 / report-01
                     :ARG1 (c12-13 / want-01
                                   :ARG0 (c12-4 / person
                                                :mod (c12-17 / country
                                                             :name (c12-11 / name
                                                                           :op1 "America")))
                                   :ARG1 (c12-15 / or
                                                 :op1 (c12-5 / close-01
                                                             :ARG0 c12-4
                                                             :ARG1 (c12-8 / facility
                                                                          :name (c12-16 / name
                                                                                        :op1 "Gitmo")))
                                                 :op2 (c12-1 / release-01
                                                             :ARG0 c12-4
                                                             :ARG1 (c12-19 / terrorist)))
                                   :polarity -))
       :snt2 (c12-14 / or
                     :op1 (c12-9 / listen-01
                                 :ARG0 (c12-7 / person
                                              :name (c12-2 / name
                                                           :op1 "Obama"))
                                 :ARG1 (c12-10 / person
                                               :mod c12-17
                                               :name (c12-3 / name
                                                            :op1 "Pakistan"))
                                 :polarity -))
       :op2 (c12-6 / we
                   :domain (c12-18 / this)))
