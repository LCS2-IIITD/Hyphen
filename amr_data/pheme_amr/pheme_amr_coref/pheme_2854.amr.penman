# ::snt This is what it feels like/when doves cry RT : we can confirm that Prince will not be performing at tonight.
# ::tokens ["This", "is", "what", "it", "feels", "like", "/", "when", "doves", "cry", "RT", ":", "we", "can", "confirm", "that", "Prince", "will", "not", "be", "performing", "at", "tonight", "."]
# ::lemmas ["this", "be", "what", "it", "feel", "like", "/", "when", "dove", "cry", "RT", ":", "we", "can", "confirm", "that", "Prince", "will", "not", "be", "perform", "at", "tonight", "."]
(c1-18 / cause-01
       :ARG0 (c1-1 / possible-01
                   :ARG1 (c1-2 / confirm-01
                               :ARG0 (c1-14 / we)
                               :ARG1 (c1-5 / perform-01
                                           :ARG0 (c1-9 / person
                                                       :name (c1-12 / name
                                                                    :op1 "Prince"))
                                           :time (c1-3 / date-entity
                                                       :dayperiod (c1-17 / night)
                                                       :mod (c1-20 / today))
                                           :polarity -)))
       :ARG1 (c1-15 / cry-01
                    :ARG0 (c1-13 / person
                                 :ARG0-of (c1-8 / favor-01))
                    :ARG1 (c1-4 / slash
                                :op1 (c1-16 / feel-05
                                            :ARG1 (c1-19 / this))
                                :op2 (c1-10 / be-temporally-at-91
                                            :ARG1 c1-19
                                            :ARG2 (c1-6 / amr-unknown))))
       :ARG1-of (c1-11 / publication-91
                       :ARG4 (c1-7 / publication
                                   :name (c1-0 / name
                                               :op1 "RT"))))

# ::snt thank you for that tweet!! MUCHO APPRECIATEO
# ::tokens ["thank", "you", "for", "that", "tweet", "!", "!", "MUCHO", "APPRECIATEO"]
# ::lemmas ["thank", "you", "for", "that", "tweet", "!", "!", "MUCHO", "APPRECIATEO"]
(c2-1 / multi-sentence
      :snt1 (c2-7 / thank-01
                  :ARG0 (c2-2 / i)
                  :ARG1 (c2-0 / you)
                  :ARG2 (c2-6 / tweet-01
                              :ARG0 c2-0
                              :mod (c2-4 / that))
                  :mode expressive)
      :snt2 (c2-5 / person
                  :name (c2-3 / name
                              :op1 "MUCHO"
                              :op2 "AppRECIATEO")))

# ::snt : In response to inquiries, we can confirm that Prince will not be performing at tonight.
# ::tokens [":", "In", "response", "to", "inquiries", ",", "we", "can", "confirm", "that", "Prince", "will", "not", "be", "performing", "at", "tonight", "."]
# ::lemmas [":", "in", "response", "to", "inquiry", ",", "we", "can", "confirm", "that", "Prince", "will", "not", "be", "perform", "at", "tonight", "."]
(c3-6 / respond-01
      :ARG1 (c3-2 / inquire-01)
      :ARG2 (c3-5 / possible-01
                  :ARG1 (c3-7 / confirm-01
                              :ARG0 (c3-0 / we)
                              :ARG1 (c3-10 / perform-01
                                           :ARG0 (c3-1 / person
                                                       :name (c3-3 / name
                                                                   :op1 "Prince"))
                                           :time (c3-8 / date-entity
                                                       :dayperiod (c3-4 / night)
                                                       :mod (c3-9 / today))
                                           :polarity -))))

# ::snt Err, twist? RT : In response to inquiries, we can confirm that Prince will not be performing at tonight.
# ::tokens ["Err", ",", "twist", "?", "RT", ":", "In", "response", "to", "inquiries", ",", "we", "can", "confirm", "that", "Prince", "will", "not", "be", "performing", "at", "tonight", "."]
# ::lemmas ["Err", ",", "twist", "?", "RT", ":", "in", "response", "to", "inquiry", ",", "we", "can", "confirm", "that", "Prince", "will", "not", "be", "perform", "at", "tonight", "."]
(c4-11 / say-01
       :ARG0 (c4-6 / publication
                   :name (c4-4 / name
                               :op1 "RT"))
       :ARG1 (c4-14 / possible-01
                    :ARG1 (c4-8 / confirm-01
                                :ARG0 (c4-0 / we)
                                :ARG1 (c4-1 / perform-01
                                            :ARG0 (c4-13 / person
                                                         :name (c4-5 / name
                                                                     :op1 "Prince"))
                                            :time (c4-7 / date-entity
                                                        :dayperiod (c4-9 / night)
                                                        :mod (c4-12 / today))
                                            :polarity -)
                                :ARG2-of (c4-10 / respond-01
                                                :ARG1 (c4-2 / inquire-01))))
       :ARG1-of (c4-3 / request-01))

# ::snt WHAT THE HELL EVEN JUST HAPPENED TODAY
# ::tokens ["WHAT", "THE", "HELL", "EVEN", "JUST", "HAPPENED", "TODAY"]
# ::lemmas ["what", "the", "hell", "even", "just", "happen", "today"]
(c5-0 / have-mod-91
      :ARG1 (c5-2 / event)
      :ARG2 (c5-3 / amr-unknown)
      :mod (c5-5 / hell
                 :mode expressive)
      :mod (c5-1 / even)
      :time (c5-4 / today))

# ::snt maybe tomorrow?
# ::tokens ["maybe", "tomorrow", "?"]
# ::lemmas ["maybe", "tomorrow", "?"]
(c6-0 / possible-01
      :ARG1 (c6-3 / be-temporally-at-91
                  :ARG2 (c6-1 / tomorrow))
      :polarity (c6-2 / amr-unknown))

# ::snt aw man! That got my funny bone!
# ::tokens ["aw", "man", "!", "That", "got", "my", "funny", "bone", "!"]
# ::lemmas ["aw", "man", "!", "that", "get", "my", "funny", "bone", "!"]
(c7-1 / multi-sentence
      :snt1 (c7-4 / man
                  :mod (c7-7 / aw
                             :mode expressive))
      :snt2 (c7-5 / get-02
                  :ARG0 (c7-6 / that)
                  :ARG1 (c7-2 / bone
                              :mod (c7-0 / funny)
                              :part-of (c7-3 / i))))

# ::snt ?!?!? : In response to inquiries, we can confirm that Prince will not be performing at tonight.
# ::tokens ["?", "!", "?", "!", "?", ":", "In", "response", "to", "inquiries", ",", "we", "can", "confirm", "that", "Prince", "will", "not", "be", "performing", "at", "tonight", "."]
# ::lemmas ["?", "!", "?", "!", "?", ":", "in", "response", "to", "inquiry", ",", "we", "can", "confirm", "that", "Prince", "will", "not", "be", "perform", "at", "tonight", "."]
(c8-5 / possible-01
      :ARG1 (c8-7 / confirm-01
                  :ARG0 (c8-0 / we)
                  :ARG1 (c8-10 / perform-01
                               :ARG0 (c8-1 / person
                                           :name (c8-3 / name
                                                       :op1 "Prince"))
                               :time (c8-6 / date-entity
                                           :dayperiod (c8-4 / night)
                                           :mod (c8-9 / today))
                               :polarity -))
      :ARG2-of (c8-8 / respond-01
                     :ARG1 (c8-2 / inquire-01)))

# ::snt But rd Eye Girl will be? Did you ask LN if The Artist Formerly Known As is playing?
# ::tokens ["But", "rd", "Eye", "Girl", "will", "be", "?", "Did", "you", "ask", "LN", "if", "The", "Artist", "Formerly", "Known", "As", "is", "playing", "?"]
# ::lemmas ["but", "rd", "Eye", "Girl", "will", "be", "?", "do", "you", "ask", "LN", "if", "The", "Artist", "Formerly", "Known", "as", "be", "play", "?"]
(c9-1 / multi-sentence
      :snt1 (c9-8 / contrast-01
                  :ARG2 (c9-6 / person
                              :name (c9-4 / name
                                          :op1 "rd"
                                          :op2 "eye"
                                          :op3 "Girl")))
      :snt2 (c9-12 / ask-01
                   :ARG0 (c9-0 / you)
                   :ARG1 (c9-10 / truth-value
                                :polarity-of (c9-11 / play-11
                                                    :ARG0 (c9-2 / person
                                                                :name (c9-5 / name
                                                                            :op1 "The"
                                                                            :op2 " Artist"
                                                                            :op3 "Former"
                                                                            :op4 "Known"
                                                                            :op5 "As"))))
                   :ARG2 (c9-9 / person
                               :name (c9-7 / name
                                           :op1 "LN"))
                   :polarity (c9-3 / amr-unknown)))

# ::snt Today was very Prince-like of Prince. All signs point to Toronto plans but the what &amp; when are really up to him now...
# ::tokens ["Today", "was", "very", "Prince", "-", "like", "of", "Prince", ".", "All", "signs", "point", "to", "Toronto", "plans", "but", "the", "what", "&", "amp", ";", "when", "are", "really", "up", "to", "him", "now", "..."]
# ::lemmas ["Today", "be", "very", "Prince", "-", "like", "of", "Prince", ".", "all", "sign", "point", "to", "Toronto", "plan", "but", "the", "what", "&", "amp", ";", "when", "be", "really", "up", "to", "he", "now", "..."]
(c10-0 / multi-sentence
       :snt1 (c10-15 / resemble-01
                     :ARG1 (c10-4 / person
                                  :name (c10-13 / name
                                                :op1 "Prince"))
                     :ARG2 (c10-9 / person
                                  :name (c10-19 / name
                                                :op1 "Prince"))
                     :degree (c10-3 / very)
                     :time (c10-22 / today))
       :snt2 (c10-12 / point-01
                     :ARG0 (c10-8 / sign
                                  :mod (c10-10 / all))
                     :ARG2 (c10-16 / plan-01
                                   :location (c10-20 / city
                                                     :name (c10-2 / name
                                                                  :op1 "Toronto")))
                     :ARG1-of (c10-5 / contrast-01
                                     :ARG2 (c10-17 / and
                                                   :op1 (c10-14 / amr-unknown)
                                                   :op2 (c10-21 / amr-unknown))))
       :snt3 (c10-6 / depend-01
                    :ARG0 (c10-18 / amr-unknown)
                    :ARG1 (c10-11 / he)
                    :time (c10-7 / now)
                    :ARG1-of (c10-1 / real-04)))

# ::snt bad4u : In response to inquiries, we can confirm that Prince will not be performing at tonight.
# ::tokens ["bad4u", ":", "In", "response", "to", "inquiries", ",", "we", "can", "confirm", "that", "Prince", "will", "not", "be", "performing", "at", "tonight", "."]
# ::lemmas ["bad4u", ":", "in", "response", "to", "inquiry", ",", "we", "can", "confirm", "that", "Prince", "will", "not", "be", "perform", "at", "tonight", "."]
(c11-9 / say-01
       :ARG1 (c11-6 / respond-01
                    :ARG1 (c11-2 / inquire-01)
                    :ARG2 (c11-5 / possible-01
                                 :ARG1 (c11-7 / confirm-01
                                              :ARG0 (c11-0 / we)
                                              :ARG1 (c11-11 / perform-01
                                                            :ARG0 (c11-1 / person
                                                                         :name (c11-3 / name
                                                                                      :op1 "Prince"))
                                                            :time (c11-8 / date-entity
                                                                         :dayperiod (c11-4 / night)
                                                                         :mod (c11-10 / today))
                                                            :polarity -))))
       :ARG2 c11-1
       :name c11-3
       :op1 "bad4u")

# ::snt What about tomorrow night? in still a possibility?
# ::tokens ["What", "about", "tomorrow", "night", "?", "in", "still", "a", "possibility", "?"]
# ::lemmas ["what", "about", "tomorrow", "night", "?", "in", "still", "a", "possibility", "?"]
(c12-0 / multi-sentence
       :snt1 (c12-6 / amr-unknown
                    :topic (c12-2 / night
                                  :time (c12-5 / tomorrow)))
       :snt2 (c12-3 / possible-01
                    :ARG1 (c12-1 / amr-unknown)
                    :mod (c12-4 / still)))

# ::snt "Change of plans." Hmmm.
# ::tokens ["\"", "Change", "of", "plans", ".", "\"", "Hmmm", "."]
# ::lemmas ["\"", "change", "of", "plan", ".", "\"", "Hmmm", "."]
(c13-3 / multi-sentence
       :snt1 (c13-2 / change-01
                    :ARG1 (c13-1 / plan-01))
       :snt2 (c13-0 / hmm
                    :mode expressive))

# ::snt it's probably
# ::tokens ["it", "'s", "probably"]
# ::lemmas ["it", "be", "probably"]
(c14-0 / probable)

# ::snt Soo... Its tomorrow night!?
# ::tokens ["Soo", "...", "Its", "tomorrow", "night", "!", "?"]
# ::lemmas ["Soo", "...", "its", "tomorrow", "night", "!", "?"]
(c15-0 / multi-sentence
       :snt1 (c15-2 / so)
       :snt2 (c15-1 / night
                    :polarity (c15-4 / amr-unknown)
                    :time (c15-3 / tomorrow)))

# ::snt are you still going to wait it out and see what happens?
# ::tokens ["are", "you", "still", "going", "to", "wait", "it", "out", "and", "see", "what", "happens", "?"]
# ::lemmas ["be", "you", "still", "go", "to", "wait", "it", "out", "and", "see", "what", "happen", "?"]
(c16-7 / and
       :polarity (c16-4 / amr-unknown)
       :op1 (c16-0 / wait-01
                   :ARG1 (c16-1 / you)
                   :ARG2 (c16-5 / it)
                   :mod (c16-6 / still))
       :op2 (c16-2 / see-01
                   :ARG0 c16-1
                   :ARG1 (c16-3 / event)))

# ::snt Tomorrow Night?
# ::tokens ["Tomorrow", "Night", "?"]
# ::lemmas ["Tomorrow", "Night", "?"]
(c17-0 / night
       :polarity (c17-2 / amr-unknown)
       :mod (c17-1 / tomorrow))

# ::snt There ya go. RT : In response to inquiries, we can confirm that Prince will not be performing at tonight.
# ::tokens ["There", "ya", "go", ".", "RT", ":", "In", "response", "to", "inquiries", ",", "we", "can", "confirm", "that", "Prince", "will", "not", "be", "performing", "at", "tonight", "."]
# ::lemmas ["there", "ya", "go", ".", "RT", ":", "in", "response", "to", "inquiry", ",", "we", "can", "confirm", "that", "Prince", "will", "not", "be", "perform", "at", "tonight", "."]
(c18-2 / multi-sentence
       :snt1 (c18-10 / go-01
                     :ARG1 (c18-0 / you)
                     :ARG4 (c18-16 / there))
       :snt2 (c18-13 / say-01
                     :ARG0 (c18-7 / publication
                                  :name (c18-5 / name
                                               :op1 "RT"))
                     :ARG1 (c18-8 / respond-01
                                  :ARG1 (c18-4 / inquire-01)
                                  :ARG2 (c18-17 / possible-01
                                                :ARG1 (c18-9 / confirm-01
                                                             :ARG0 (c18-1 / we)
                                                             :ARG1 (c18-3 / perform-01
                                                                          :ARG0 (c18-14 / person
                                                                                        :name (c18-6 / name
                                                                                                     :op1 "Prince"))
                                                                          :time (c18-11 / date-entity
                                                                                        :dayperiod (c18-12 / night)
                                                                                        :mod (c18-15 / today))
                                                                          :polarity -))))))

# ::snt : In response to inquiries, we can confirm that Prince will not be performing at tonight.
# ::tokens [":", "In", "response", "to", "inquiries", ",", "we", "can", "confirm", "that", "Prince", "will", "not", "be", "performing", "at", "tonight", "."]
# ::lemmas [":", "in", "response", "to", "inquiry", ",", "we", "can", "confirm", "that", "Prince", "will", "not", "be", "perform", "at", "tonight", "."]
(c19-6 / respond-01
       :ARG1 (c19-2 / inquire-01)
       :ARG2 (c19-5 / possible-01
                    :ARG1 (c19-7 / confirm-01
                                 :ARG0 (c19-0 / we)
                                 :ARG1 (c19-10 / perform-01
                                               :ARG0 (c19-1 / person
                                                            :name (c19-3 / name
                                                                         :op1 "Prince"))
                                               :time (c19-8 / date-entity
                                                            :dayperiod (c19-4 / night)
                                                            :mod (c19-9 / today))
                                               :polarity -))))

# ::snt Poor suckers in line! : In response to inquiries, we can confirm that Prince will not be performing at tonight.
# ::tokens ["Poor", "suckers", "in", "line", "!", ":", "In", "response", "to", "inquiries", ",", "we", "can", "confirm", "that", "Prince", "will", "not", "be", "performing", "at", "tonight", "."]
# ::lemmas ["poor", "sucker", "in", "line", "!", ":", "in", "response", "to", "inquiry", ",", "we", "can", "confirm", "that", "Prince", "will", "not", "be", "perform", "at", "tonight", "."]
(c20-1 / multi-sentence
       :snt1 (c20-4 / in-line-04
                    :ARG1 (c20-7 / person
                                 :mod (c20-15 / poor)
                                 :ARG0-of (c20-12 / suck-03))
                    :mode expressive)
       :snt2 (c20-8 / respond-01
                    :ARG1 (c20-10 / inquire-01)
                    :ARG2 (c20-2 / possible-01
                                 :ARG1 (c20-9 / confirm-01
                                              :ARG0 (c20-0 / we)
                                              :ARG1 (c20-14 / perform-01
                                                            :ARG0 (c20-3 / person
                                                                         :name (c20-5 / name
                                                                                      :op1 "Prince"))
                                                            :time (c20-11 / date-entity
                                                                          :dayperiod (c20-6 / night)
                                                                          :mod (c20-13 / today))
                                                            :polarity -)))))
