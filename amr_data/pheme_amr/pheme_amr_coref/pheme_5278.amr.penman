# ::snt They don't want Jews in Europe. They don't want Jews in Israel. Draw your own conclusions.
# ::tokens ["They", "do", "n't", "want", "Jews", "in", "Europe", ".", "They", "do", "n't", "want", "Jews", "in", "Israel", ".", "Draw", "your", "own", "conclusions", "."]
# ::lemmas ["they", "do", "not", "want", "Jews", "in", "Europe", ".", "they", "do", "not", "want", "Jews", "in", "Israel", ".", "draw", "your", "own", "conclusion", "."]
(c1-2 / multi-sentence
      :snt1 (c1-0 / want-01
                  :ARG0 (c1-14 / they)
                  :ARG1 (c1-6 / person
                              :mod (c1-7 / religious-group
                                         :name (c1-4 / name
                                                     :op1 "Jew"))
                              :location (c1-8 / continent
                                              :name (c1-5 / name
                                                          :op1 "Europe")))
                  :polarity -)
      :snt2 (c1-3 / want-01
                  :ARG0 (c1-11 / they)
                  :ARG1 (c1-15 / person
                               :mod c1-7
                               :location (c1-9 / country
                                               :name (c1-10 / name
                                                            :op1 "Israel")))
                  :polarity -)
      :snt3 (c1-12 / draw-01
                   :ARG0 (c1-1 / you)
                   :ARG1 (c1-13 / conclude-01
                                :ARG0 c1-1)))

# ::snt They were just crudely and inaccurately expressing anti-Zionism, so it's ok.
# ::tokens ["They", "were", "just", "crudely", "and", "inaccurately", "expressing", "anti", "-", "Zionism", ",", "so", "it", "'s", "ok", "."]
# ::lemmas ["they", "be", "just", "crudely", "and", "inaccurately", "express", "anti", "-", "Zionism", ",", "so", "it", "be", "ok", "."]
(c2-7 / cause-01
      :ARG0 (c2-4 / express-01
                  :ARG0 (c2-8 / they)
                  :ARG1 (c2-3 / oppose-01
                              :ARG1 (c2-2 / zion))
                  :manner (c2-9 / and
                                :op1 (c2-6 / crude)
                                :op2 (c2-5 / accurate
                                           :polarity -))
                  :mod (c2-0 / just))
      :ARG1 (c2-1 / okay-04
                  :ARG1 c2-4))

# ::snt Just like an Israel supporter to claim antisemitism where there obviously is none. You just want to shut down debate
# ::tokens ["Just", "like", "an", "Israel", "supporter", "to", "claim", "antisemitism", "where", "there", "obviously", "is", "none", ".", "You", "just", "want", "to", "shut", "down", "debate"]
# ::lemmas ["just", "like", "an", "Israel", "supporter", "to", "claim", "antisemitism", "where", "there", "obviously", "be", "none", ".", "you", "just", "want", "to", "shut", "down", "debate"]
(c3-3 / multi-sentence
      :snt1 (c3-8 / resemble-01
                  :ARG2 (c3-9 / claim-01
                              :ARG0 (c3-7 / person
                                          :ARG0-of (c3-12 / support-01
                                                          :ARG1 (c3-10 / country
                                                                       :name (c3-6 / name
                                                                                   :op1 "Israel"))))
                              :ARG1 (c3-13 / antisemitism)
                              :location (c3-4 / obvious-01
                                              :polarity -))
                  :mod (c3-0 / just))
      :snt2 (c3-1 / want-01
                  :ARG0 (c3-2 / you)
                  :ARG1 (c3-5 / shut-down-05
                              :ARG0 c3-2
                              :ARG1 (c3-11 / debate-01))
                  :mod c3-0))

# ::snt And this just a year ago. "Jew, France is not yours".
# ::tokens ["And", "this", "just", "a", "year", "ago", ".", "\"", "Jew", ",", "France", "is", "not", "yours", "\"", "."]
# ::lemmas ["and", "this", "just", "a", "year", "ago", ".", "\"", "Jew", ",", "France", "be", "not", "yours", "\"", "."]
(c5-2 / multi-sentence
      :snt1 (c5-13 / and
                   :op2 (c5-12 / this
                               :time (c5-3 / before
                                           :op1 (c5-4 / now)
                                           :quant (c5-10 / temporal-quantity
                                                         :unit (c5-1 / year)
                                                         :mod (c5-0 / just)
                                                         :quant 1))))
      :snt2 (c5-11 / say-01
                   :ARG1 (c5-8 / country
                               :name (c5-5 / name
                                           :op1 "France")
                               :poss (c5-14 / you)
                               :polarity -)
                   :ARG2 (c5-6 / person
                               :mod (c5-7 / religious-group
                                          :name (c5-9 / name
                                                      :op1 "Jew")))))

# ::snt this world belongs to all of us.
# ::tokens ["this", "world", "belongs", "to", "all", "of", "us", "."]
# ::lemmas ["this", "world", "belong", "to", "all", "of", "we", "."]
(c6-1 / belong-01
      :ARG0 (c6-0 / world
                  :mod (c6-3 / this))
      :ARG1 (c6-2 / we
                  :mod (c6-4 / all)))

# ::snt All those lone wolves who don't understand their own religion...
# ::tokens ["All", "those", "lone", "wolves", "who", "do", "n't", "understand", "their", "own", "religion", "..."]
# ::lemmas ["all", "those", "lone", "wolf", "who", "do", "not", "understand", "their", "own", "religion", "..."]
(c7-0 / wolf
      :mod (c7-1 / lone)
      :mod (c7-4 / that)
      :ARG0-of (c7-2 / understand-01
                     :ARG1 (c7-3 / religion
                                 :poss c7-0)
                     :polarity -)
      :mod (c7-5 / all))

# ::snt Jews are welcome in Morocco. Roi Mohammed VI et grand rabbin de Paris
# ::tokens ["Jews", "are", "welcome", "in", "Morocco", ".", "Roi", "Mohammed", "VI", "et", "grand", "rabbin", "de", "Paris"]
# ::lemmas ["Jews", "be", "welcome", "in", "Morocco", ".", "Roi", "Mohammed", "VI", "et", "grand", "rabbin", "de", "Paris"]
(c8-0 / welcome-01
      :ARG1 (c8-4 / person
                  :mod (c8-5 / religious-group
                             :name (c8-2 / name
                                         :op1 "Jew")))
      :location (c8-6 / country
                      :name (c8-3 / name
                                  :op1 "Morocco"))
      :subevent (c8-12 / and
                       :op1 (c8-11 / person
                                   :name (c8-7 / name
                                               :op1 "Roi"
                                               :op2 "Mohammed"
                                               :op3 " VI"))
                       :op2 (c8-1 / person
                                  :name (c8-8 / name
                                              :op1 "Rabbi")
                                  :mod (c8-9 / grand)
                                  :location (c8-10 / city
                                                   :name (c8-13 / name
                                                                :op1 "Paris")))))

# ::snt Behead the Muslims would be a good counter slogan take it to their neighborhoods
# ::tokens ["Behead", "the", "Muslims", "would", "be", "a", "good", "counter", "slogan", "take", "it", "to", "their", "neighborhoods"]
# ::lemmas ["behead", "the", "Muslims", "would", "be", "a", "good", "counter", "slogan", "take", "it", "to", "their", "neighborhood"]
(c9-8 / slogan
      :ARG1-of (c9-7 / good-02)
      :ARG0-of (c9-6 / counter-01)
      :domain (c9-0 / behead-01
                    :ARG1 (c9-4 / person
                                :mod (c9-5 / religious-group
                                           :name (c9-2 / name
                                                       :op1 "Muslim"))))
      :ARG0-of (c9-9 / take-01
                     :ARG1 (c9-1 / it)
                     :ARG3 (c9-3 / neighborhood
                                 :poss c9-4)))

# ::snt Maybe they meant "Gas for Jews".
# ::tokens ["Maybe", "they", "meant", "\"", "Gas", "for", "Jews", "\"", "."]
# ::lemmas ["maybe", "they", "mean", "\"", "gas", "for", "Jews", "\"", "."]
(c10-2 / possible-01
       :ARG1 (c10-0 / mean-01
                    :ARG0 (c10-5 / they)
                    :ARG1 (c10-4 / gas
                                 :beneficiary (c10-6 / person
                                                     :mod (c10-3 / religious-group
                                                                 :name (c10-1 / name
                                                                              :op1 "Jew"))))))

# ::snt Surely we can all just get along...
# ::tokens ["Surely", "we", "can", "all", "just", "get", "along", "..."]
# ::lemmas ["surely", "we", "can", "all", "just", "get", "along", "..."]
(c11-2 / possible-01
       :ARG1 (c11-3 / get-along-18
                    :ARG1 (c11-1 / we
                                 :mod (c11-5 / all))
                    :mod (c11-0 / just))
       :ARG1-of (c11-4 / sure-02))

# ::snt The European Enlightenment is dead. Eiffel Tower should remain dark forever hence as a reminder.
# ::tokens ["The", "European", "Enlightenment", "is", "dead", ".", "Eiffel", "Tower", "should", "remain", "dark", "forever", "hence", "as", "a", "reminder", "."]
# ::lemmas ["The", "European", "Enlightenment", "be", "dead", ".", "Eiffel", "Tower", "should", "remain", "dark", "forever", "hence", "as", "a", "reminder", "."]
(c12-2 / multi-sentence
       :snt1 (c12-9 / die-01
                    :ARG1 (c12-3 / organization
                                 :name (c12-6 / name
                                              :op1 "European"
                                              :op2 "Enlightenment")))
       :snt2 (c12-8 / recommend-01
                    :ARG1 (c12-5 / remain-01
                                 :ARG1 (c12-11 / tower
                                               :name (c12-7 / name
                                                            :op1 "Eiffel"
                                                            :op2 "Tower"))
                                 :ARG3 (c12-0 / dark-02
                                              :ARG1 c12-11)
                                 :duration (c12-1 / forever)
                                 :ARG0-of (c12-10 / cause-01
                                                  :ARG1 (c12-4 / remind-01
                                                               :ARG0 c12-11)))))

# ::snt Oh that Kill the Jews stuff is just filler. Ignore % of Koran about killing infidels, it's religion of peace
# ::tokens ["Oh", "that", "Kill", "the", "Jews", "stuff", "is", "just", "filler", ".", "Ignore", "%", "of", "Koran", "about", "killing", "infidels", ",", "it", "'s", "religion", "of", "peace"]
# ::lemmas ["oh", "that", "kill", "the", "Jews", "stuff", "be", "just", "filler", ".", "ignore", "%", "of", "Koran", "about", "kill", "infidel", ",", "it", "be", "religion", "of", "peace"]
(c13-2 / multi-sentence
       :snt1 (c13-7 / filler
                    :domain (c13-5 / stuff
                                   :topic (c13-16 / kill-01
                                                  :ARG1 (c13-4 / person
                                                               :mod (c13-11 / religious-group
                                                                            :name (c13-10 / name
                                                                                          :op1 "Jew"))))
                                   :mod (c13-18 / oh
                                                :mode expressive))
                    :mod (c13-0 / just))
       :snt2 (c13-14 / ignore-01
                     :ARG0 (c13-17 / you)
                     :ARG1 (c13-21 / thing
                                   :ARG1-of (c13-15 / include-91
                                                    :ARG2 (c13-9 / book
                                                                 :name (c13-19 / name
                                                                               :op1 "Koran"))
                                                    :ARG3 (c13-6 / percentage))
                                   :topic (c13-13 / kill-01
                                                  :ARG1 (c13-8 / person
                                                               :mod (c13-1 / infidel)))
                                   :ARG1-of (c13-20 / cause-01
                                                    :ARG0 (c13-3 / religion
                                                                 :mod (c13-12 / peace)
                                                                 :domain c13-13)))
                     :mode imperative))

# ::snt If only it were Ishmael who was the son of promise, Genesis :12.
# ::tokens ["If", "only", "it", "were", "Ishmael", "who", "was", "the", "son", "of", "promise", ",", "Genesis", ":", "12", "."]
# ::lemmas ["if", "only", "it", "be", "Ishmael", "who", "be", "the", "son", "of", "promise", ",", "Genesis", ":", "12", "."]
(c14-0 / have-condition-91
       :ARG2 (c14-5 / person
                    :name (c14-3 / name
                                 :op1 "Ishmael")
                    :ARG0-of (c14-10 / have-rel-role-91
                                     :ARG1 (c14-9 / promise-01)
                                     :ARG2 (c14-8 / son))
                    :ARG1-of (c14-6 / describe-01
                                    :ARG0 (c14-7 / chapter
                                                 :part-of (c14-1 / book
                                                                 :name (c14-4 / name
                                                                              :op1 "Genesis"))
                                                 :mod 12))
                    :mod (c14-2 / only)))

# ::snt this.is what happens when you let this take hold
# ::tokens ["this.is", "what", "happens", "when", "you", "let", "this", "take", "hold"]
# ::lemmas ["this.is", "what", "happen", "when", "you", "let", "this", "take", "hold"]
(c15-4 / thing
       :domain (c15-3 / this)
       :time (c15-1 / let-01
                    :ARG0 (c15-0 / you)
                    :ARG1 (c15-2 / take-hold-24
                                 :ARG0 c15-3)))

# ::snt America should kick out all the illegals and bring as many Jews here as possible. They're the best.
# ::tokens ["America", "should", "kick", "out", "all", "the", "illegals", "and", "bring", "as", "many", "Jews", "here", "as", "possible", ".", "They", "'re", "the", "best", "."]
# ::lemmas ["America", "should", "kick", "out", "all", "the", "illegal", "and", "bring", "as", "many", "Jews", "here", "as", "possible", ".", "they", "be", "the", "good", "."]
(c16-0 / multi-sentence
       :snt1 (c16-14 / recommend-01
                     :ARG1 (c16-5 / and
                                  :op1 (c16-17 / kick-out-05
                                               :ARG0 (c16-19 / country
                                                             :name (c16-12 / name
                                                                           :op1 "America"))
                                               :ARG1 (c16-2 / person
                                                            :ARG1-of (c16-7 / legal-02
                                                                            :polarity -)
                                                            :mod (c16-16 / all)))
                                  :op2 (c16-10 / bring-01
                                               :ARG0 c16-19
                                               :ARG1 (c16-3 / person
                                                            :mod (c16-1 / religious-group
                                                                        :name (c16-18 / name
                                                                                      :op1 "Jew"))
                                                            :ARG1-of (c16-6 / have-quant-91
                                                                            :ARG2 (c16-13 / many)
                                                                            :ARG3 (c16-11 / equal)
                                                                            :ARG4 (c16-9 / possible-01
                                                                                         :ARG1 c16-10)))
                                               :ARG2 c16-19)))
       :snt2 (c16-4 / have-degree-91
                    :ARG1 (c16-20 / they)
                    :ARG2 (c16-15 / good-03
                                  :ARG1 c16-20)
                    :ARG3 (c16-8 / most)))

# ::snt like rabbi kahane once said "there is no coexistence with cancer"
# ::tokens ["like", "rabbi", "kahane", "once", "said", "\"", "there", "is", "no", "coexistence", "with", "cancer", "\""]
# ::lemmas ["like", "rabbi", "kahane", "once", "say", "\"", "there", "be", "no", "coexistence", "with", "cancer", "\""]
(c17-3 / resemble-01
       :ARG2 (c17-6 / say-01
                    :ARG0 (c17-1 / rabbi
                                 :name (c17-2 / name
                                              :op1 "Kahane"))
                    :ARG1 (c17-4 / coexist-01
                                 :ARG1 (c17-5 / cancer)
                                 :polarity -)
                    :time (c17-0 / once)))

# ::snt Nothing to do with Islam (unless you count all that "kill Jews" stuff in the Koran).
# ::tokens ["Nothing", "to", "do", "with", "Islam", "(", "unless", "you", "count", "all", "that", "\"", "kill", "Jews", "\"", "stuff", "in", "the", "Koran", ")", "."]
# ::lemmas ["nothing", "to", "do", "with", "Islam", "(", "unless", "you", "count", "all", "that", "\"", "kill", "Jews", "\"", "stuff", "in", "the", "Koran", ")", "."]
(c18-0 / have-to-do-with-04
       :ARG1 (c18-6 / religious-group
                    :name (c18-3 / name
                                 :op1 "Islam"))
       :ARG2 (c18-4 / nothing)
       :condition (c18-7 / count-02
                         :ARG0 (c18-1 / you)
                         :ARG1 (c18-9 / stuff
                                      :topic (c18-10 / kill-01
                                                     :ARG1 (c18-5 / person
                                                                  :mod c18-6))
                                      :mod (c18-11 / all)
                                      :location (c18-2 / book
                                                       :name (c18-8 / name
                                                                    :op1 "Koran")))
                         :polarity -))

# ::snt Europeans can be such sick puppies. So dense in population they come up w/ loony ideas to cope.
# ::tokens ["Europeans", "can", "be", "such", "sick", "puppies", ".", "So", "dense", "in", "population", "they", "come", "up", "w/", "loony", "ideas", "to", "cope", "."]
# ::lemmas ["Europeans", "can", "be", "such", "sick", "puppy", ".", "so", "dense", "in", "population", "they", "come", "up", "w/", "loony", "idea", "to", "cope", "."]
(c19-2 / multi-sentence
       :snt1 (c19-8 / possible-01
                    :ARG1 (c19-15 / puppy
                                  :ARG1-of (c19-13 / sick-05
                                                   :degree (c19-5 / such))
                                  :domain (c19-4 / person
                                                 :mod (c19-10 / continent
                                                              :name (c19-7 / name
                                                                           :op1 "Europe")))))
       :snt2 (c19-0 / have-degree-91
                    :ARG1 (c19-14 / they)
                    :ARG2 (c19-9 / dense)
                    :ARG3 (c19-1 / so)
                    :ARG6 (c19-11 / come-up-11
                                  :ARG0 c19-14
                                  :ARG1 (c19-6 / idea
                                               :mod (c19-3 / loony)
                                               :purpose (c19-12 / cope-01
                                                                :ARG0 c19-14)))))

# ::snt This has been simmering and brewing for at least a decade. Anyone remember "the youts" burning cars/bldgs?
# ::tokens ["This", "has", "been", "simmering", "and", "brewing", "for", "at", "least", "a", "decade", ".", "Anyone", "remember", "\"", "the", "youts", "\"", "burning", "cars", "/", "bldgs", "?"]
# ::lemmas ["this", "have", "be", "simmer", "and", "brew", "for", "at", "least", "a", "decade", ".", "anyone", "remember", "\"", "the", "yout", "\"", "burn", "car", "/", "bldgs", "?"]
(c20-1 / multi-sentence
       :snt1 (c20-15 / and
                     :op1 (c20-11 / simmer-01
                                  :ARG1 (c20-14 / this))
                     :op2 (c20-2 / brew-01
                                 :ARG1 c20-14)
                     :duration (c20-4 / at-least
                                      :op1 (c20-10 / temporal-quantity
                                                   :unit (c20-6 / decade)
                                                   :quant 1)))
       :snt2 (c20-7 / remember-01
                    :ARG0 (c20-5 / anyone)
                    :ARG1 (c20-8 / burn-01
                                 :ARG0 (c20-0 / yout)
                                 :ARG1 (c20-3 / slash
                                              :op1 (c20-9 / car)
                                              :op2 (c20-13 / business)))
                    :polarity (c20-12 / amr-unknown)))

# ::snt I'll be shocked if this is treated like the tragedy it is.
# ::tokens ["I", "'ll", "be", "shocked", "if", "this", "is", "treated", "like", "the", "tragedy", "it", "is", "."]
# ::lemmas ["i", "'ll", "be", "shock", "if", "this", "be", "treat", "like", "the", "tragedy", "it", "be", "."]
(c21-3 / shock-01
       :ARG0 (c21-4 / treat-01
                    :ARG1 (c21-2 / this)
                    :ARG2 (c21-1 / tragedy
                                 :domain c21-2))
       :ARG1 (c21-0 / i))
