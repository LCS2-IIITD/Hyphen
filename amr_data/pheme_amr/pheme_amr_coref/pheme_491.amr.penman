# ::snt at least dead
# ::tokens ["at", "least", "dead"]
# ::lemmas ["at", "least", "dead"]
(c1-0 / die-01
      :mod (c1-1 / at-least))

# ::snt ty
# ::tokens ["ty"]
# ::lemmas ["ty"]
(c2-1 / person
      :name (c2-0 / name
                  :op1 "ty"))

# ::snt SYDNEY SIEGE ENDS:- After hours- dead- injured- Status of gunman unknown-1 officer injuredStay with for the latest.
# ::tokens ["SYDNEY", "SIEGE", "ENDS:-", "After", "hours-", "dead-", "injured-", "Status", "of", "gunman", "unknown-1", "officer", "injuredStay", "with", "for", "the", "latest", "."]
# ::lemmas ["sydney", "SIEGE", "ENDS:-", "after", "hours-", "dead-", "injured-", "Status", "of", "gunman", "unknown-1", "officer", "injuredstay", "with", "for", "the", "late", "."]
(c4-17 / and
       :op1 (c4-11 / remain-01
                   :ARG1 (c4-12 / city
                                :name (c4-8 / name
                                            :op1 "Sydney"))
                   :ARG3 (c4-14 / status
                                :poss (c4-13 / gunman
                                             :ARG1-of (c4-16 / know-01
                                                             :polarity -)))
                   :time (c4-6 / after
                               :op1 (c4-2 / multiple
                                          :op1 (c4-15 / temporal-quantity
                                                      :unit (c4-0 / hour)
                                                      :quant 1))))
       :op2 (c4-7 / injure-01
                  :ARG1 (c4-10 / person
                               :ARG0-of (c4-1 / have-org-role-91
                                              :ARG2 (c4-4 / officer))))
       :op3 (c4-5 / stay-01
                  :ARG1 c4-12
                  :ARG3 (c4-9 / have-mod-91
                              :ARG1 c4-13
                              :ARG2 (c4-3 / last))))

# ::snt : SYDNEY SIEGE ENDS:- After hours- dead- injured- Status of gunman unknown-1 officer injured how horrific
# ::tokens [":", "SYDNEY", "SIEGE", "ENDS:-", "After", "hours-", "dead-", "injured-", "Status", "of", "gunman", "unknown-1", "officer", "injured", "how", "horrific"]
# ::lemmas [":", "sydney", "siege", "ENDS:-", "after", "hours-", "dead-", "injured-", "Status", "of", "gunman", "unknown-1", "officer", "injure", "how", "horrific"]
(c5-0 / multi-sentence
      :snt1 (c5-5 / arrive-01
                  :ARG1 (c5-17 / city
                               :name (c5-8 / name
                                           :op1 "Sydney")))
      :snt2 (c5-12 / and
                   :op1 (c5-2 / die-01
                              :ARG1 (c5-1 / person
                                          :ARG0-of (c5-3 / shoot-02)))
                   :op2 (c5-7 / status
                              :poss (c5-11 / gunman
                                           :ARG1-of (c5-14 / know-01
                                                           :ARG0 (c5-16 / officer
                                                                        :quant 1)
                                                           :polarity -)
                                           :ARG1-of (c5-13 / injure-01
                                                           :degree (c5-6 / horrific
                                                                         :degree (c5-15 / so)))))
                   :time (c5-9 / after
                               :op1 (c5-10 / multiple
                                           :op1 (c5-18 / temporal-quantity
                                                       :unit (c5-4 / hour)
                                                       :quant 1)))))

# ::snt SIEGE ENDS:- After hours / dead / injured- Status of gunman unknown-1 officer injuredvia
# ::tokens ["SIEGE", "ENDS:-", "After", "hours", "/", "dead", "/", "injured-", "Status", "of", "gunman", "unknown-1", "officer", "injuredvia"]
# ::lemmas ["siege", "ENDS:-", "after", "hours", "/", "dead", "/", "injured-", "Status", "of", "gunman", "unknown-1", "officer", "injuredvia"]
(c6-13 / and
       :op1 (c6-5 / and
                  :op1 (c6-7 / after
                             :op1 (c6-0 / hour))
                  :op2 (c6-11 / slash
                              :op1 (c6-8 / die-01)
                              :op2 (c6-6 / injure-01)))
       :op2 (c6-4 / status
                  :poss (c6-9 / gunman
                              :ARG1-of (c6-12 / know-01
                                              :polarity -)))
       :op3 (c6-10 / injure-01
                   :ARG1 (c6-3 / officer
                               :ARG1-of (c6-1 / injure-01)
                               :quant 1))
       :topic-of (c6-2 / SIEGE))

# ::snt yea very sad but it could have been a hell of a lot worse. Awful Christmas ahead for some families now
# ::tokens ["yea", "very", "sad", "but", "it", "could", "have", "been", "a", "hell", "of", "a", "lot", "worse", ".", "Awful", "Christmas", "ahead", "for", "some", "families", "now"]
# ::lemmas ["yea", "very", "sad", "but", "it", "could", "have", "be", "a", "hell", "of", "a", "lot", "bad", ".", "awful", "Christmas", "ahead", "for", "some", "family", "now"]
(c7-2 / multi-sentence
      :snt1 (c7-13 / contrast-01
                   :ARG1 (c7-15 / sad-02
                                :degree (c7-10 / very))
                   :ARG2 (c7-11 / possible-01
                                :ARG1 (c7-0 / have-degree-91
                                            :ARG1 (c7-7 / it)
                                            :ARG2 (c7-4 / bad-07
                                                        :ARG1 c7-7)
                                            :ARG3 (c7-12 / more
                                                         :quant (c7-1 / lot
                                                                      :degree (c7-17 / hell))))))
      :snt2 (c7-3 / festival
                  :name (c7-9 / name
                              :op1 "Christmas")
                  :mod (c7-16 / awful)
                  :time (c7-6 / ahead)
                  :beneficiary (c7-8 / family
                                     :quant (c7-5 / some))
                  :time (c7-14 / now)))

# ::snt I'd of shot the twat right in his scull if it was my family of friends no problem
# ::tokens ["I", "'d", "of", "shot", "the", "twat", "right", "in", "his", "scull", "if", "it", "was", "my", "family", "of", "friends", "no", "problem"]
# ::lemmas ["i", "would", "of", "shot", "the", "twat", "right", "in", "his", "scull", "if", "it", "be", "my", "family", "of", "friend", "no", "problem"]
(c8-0 / have-condition-91
      :ARG1 (c8-10 / shoot-02
                   :ARG0 (c8-4 / i)
                   :ARG1 (c8-11 / twat)
                   :location (c8-3 / scull
                                   :poss (c8-12 / he))
                   :ARG1-of (c8-8 / right-04))
      :ARG2 (c8-7 / person
                  :ARG0-of (c8-6 / have-rel-role-91
                                 :ARG1 c8-4
                                 :ARG2 (c8-1 / family
                                             :consist-of (c8-5 / friend)))
                  :domain (c8-9 / it))
      :ARG1-of (c8-2 / have-03
                     :ARG0 c8-4
                     :polarity -))

# ::snt such a shame.
# ::tokens ["such", "a", "shame", "."]
# ::lemmas ["such", "a", "shame", "."]
(c9-0 / shame
      :degree (c9-1 / such))

# ::snt shame for the two who died and to injured copper
# ::tokens ["shame", "for", "the", "two", "who", "died", "and", "to", "injured", "copper"]
# ::lemmas ["shame", "for", "the", "two", "who", "die", "and", "to", "injure", "copper"]
(c10-4 / shame-01
       :ARG1 (c10-5 / and
                    :op1 (c10-1 / person
                                :ARG1-of (c10-2 / die-01)
                                :quant 2)
                    :op2 (c10-3 / copper
                                :ARG1-of (c10-0 / injure-01))))

# ::snt Hopefully the guy died
# ::tokens ["Hopefully", "the", "guy", "died"]
# ::lemmas ["hopefully", "the", "guy", "die"]
(c11-0 / hope-01
       :ARG1 (c11-1 / die-01
                    :ARG1 (c11-2 / guy)))

# ::snt maybe but with the info the police were working with (bomb threats etc) they couldn't move any sooner
# ::tokens ["maybe", "but", "with", "the", "info", "the", "police", "were", "working", "with", "(", "bomb", "threats", "etc", ")", "they", "could", "n't", "move", "any", "sooner"]
# ::lemmas ["maybe", "but", "with", "the", "info", "the", "police", "be", "work", "with", "(", "bomb", "threat", "etc", ")", "they", "could", "not", "move", "any", "soon"]
(c13-8 / contrast-01
       :ARG1 (c13-6 / possible-01)
       :ARG2 (c13-11 / possible-01
                     :ARG1 (c13-1 / move-01
                                  :ARG1 (c13-2 / police)
                                  :time (c13-9 / soon
                                               :mod (c13-12 / any)))
                     :ARG1-of (c13-7 / cause-01
                                     :ARG0 (c13-5 / information
                                                  :ARG1-of (c13-0 / work-01
                                                                  :ARG0 c13-2)
                                                  :example (c13-10 / threaten-01
                                                                   :ARG1 (c13-3 / bomb))
                                                  :example (c13-4 / et-cetera)))
                     :polarity -))

# ::snt Va : SYDNEY SIEGE ENDS:- After hours- dead- injured- Status of gunman unknown-1 officer injured
# ::tokens ["Va", ":", "SYDNEY", "SIEGE", "ENDS:-", "After", "hours-", "dead-", "injured-", "Status", "of", "gunman", "unknown-1", "officer", "injured"]
# ::lemmas ["Va", ":", "sydney", "SIEGE", "ENDS:-", "after", "hours-", "dead-", "injured-", "Status", "of", "gunman", "unknown-1", "officer", "injure"]
(c14-2 / multi-sentence
       :snt1 (c14-4 / exit-01
                    :ARG0 (c14-11 / city
                                  :name (c14-8 / name
                                               :op1 "Sydney"))
                    :ARG1 (c14-14 / state))
       :snt2 (c14-17 / and
                     :op1 (c14-10 / die-01
                                  :ARG1 (c14-9 / person))
                     :op2 (c14-7 / injure-01
                                 :ARG1 c14-9)
                     :op3 (c14-5 / status
                                 :poss (c14-12 / gunman
                                               :ARG1-of (c14-15 / know-01
                                                                :polarity -)))
                     :op4 (c14-13 / injure-01
                                  :ARG1 (c14-16 / person
                                                :ARG0-of (c14-0 / have-org-role-91
                                                                :ARG2 (c14-3 / officer))
                                                :quant 1))
                     :time (c14-6 / after
                                  :op1 (c14-1 / hour))))

# ::snt "sydney siege"? really? thousands of soldiers blocking the city gates?
# ::tokens ["\"", "sydney", "siege", "\"", "?", "really", "?", "thousands", "of", "soldiers", "blocking", "the", "city", "gates", "?"]
# ::lemmas ["\"", "sydney", "siege", "\"", "?", "really", "?", "thousands", "of", "soldier", "block", "the", "city", "gate", "?"]
(c15-0 / multi-sentence
       :snt1 (c15-6 / cease-01
                    :ARG1 (c15-1 / bomb-01
                                 :ARG1 (c15-5 / city
                                              :name (c15-3 / name
                                                           :op1 "Sydney")))
                    :polarity (c15-12 / amr-unknown)
                    :ARG1-of (c15-7 / real-04))
       :snt2 (c15-8 / block-01
                    :ARG0 (c15-10 / soldier
                                  :quant (c15-4 / multiple
                                                :op1 1000))
                    :ARG1 (c15-9 / gate
                                 :poss (c15-11 / city))
                    :polarity (c15-2 / amr-unknown)))

# ::snt has it been confirmed dead?
# ::tokens ["has", "it", "been", "confirmed", "dead", "?"]
# ::lemmas ["have", "it", "be", "confirm", "dead", "?"]
(c16-1 / confirm-01
       :polarity (c16-3 / amr-unknown)
       :ARG1 (c16-0 / die-01
                    :ARG1 (c16-2 / it)))

# ::snt news conference in mins
# ::tokens ["news", "conference", "in", "mins"]
# ::lemmas ["news", "conference", "in", "min"]
(c17-3 / conference
       :mod (c17-1 / news)
       :time (c17-5 / after
                    :op1 (c17-2 / now)
                    :quant (c17-4 / temporal-quantity
                                  :quant (c17-0 / mins))))

# ::snt : SYDNEY SIEGE ENDS:- After hours- dead- injured- Status of gunman unknown-1 officer injured"
# ::tokens [":", "SYDNEY", "SIEGE", "ENDS:-", "After", "hours-", "dead-", "injured-", "Status", "of", "gunman", "unknown-1", "officer", "injured", "\""]
# ::lemmas [":", "sydney", "siege", "ENDS:-", "after", "hours-", "dead-", "injured-", "Status", "of", "gunman", "unknown-1", "officer", "injure", "\""]
(c19-2 / multi-sentence
       :snt1 (c19-15 / arrive-01
                     :ARG1 (c19-10 / city
                                   :name (c19-6 / name
                                                :op1 "Sydney")))
       :snt2 (c19-4 / and
                    :op1 (c19-9 / die-01
                                :ARG1 (c19-8 / person))
                    :op2 (c19-12 / status
                                 :poss (c19-11 / gunman
                                               :ARG1-of (c19-13 / know-01
                                                                :polarity -)))
                    :op3 (c19-5 / injure-01
                                :ARG1 (c19-14 / person
                                              :ARG0-of (c19-0 / have-org-role-91
                                                              :ARG2 (c19-3 / officer))
                                              :quant 1))
                    :time (c19-7 / after
                                 :op1 (c19-1 / hour))))

# ::snt yes but could of it been over alot sooner?
# ::tokens ["yes", "but", "could", "of", "it", "been", "over", "alot", "sooner", "?"]
# ::lemmas ["yes", "but", "could", "of", "it", "be", "over", "alot", "soon", "?"]
(c20-6 / contrast-01
       :ARG1 (c20-1 / yes)
       :ARG2 (c20-5 / possible-01
                    :ARG1 (c20-3 / over-01
                                 :ARG1 (c20-4 / it)
                                 :time (c20-7 / soon
                                              :ARG2-of (c20-0 / have-degree-91
                                                              :ARG1 c20-3
                                                              :ARG3 (c20-2 / more))))
                    :polarity (c20-8 / amr-unknown)))

# ::snt looks like rd has died in hospital - very sad indeed
# ::tokens ["looks", "like", "rd", "has", "died", "in", "hospital", "-", "very", "sad", "indeed"]
# ::lemmas ["look", "like", "rd", "have", "die", "in", "hospital", "-", "very", "sad", "indeed"]
(c21-1 / look-02
       :ARG1 (c21-6 / die-01
                    :ARG1 (c21-5 / person
                                 :name (c21-3 / name
                                              :op1 "rd"))
                    :location (c21-0 / hospital))
       :ARG0-of (c21-7 / cause-01
                       :ARG1 (c21-8 / sad-02
                                    :degree (c21-4 / very)
                                    :mod (c21-2 / indeed))))

# ::snt - mehr Islamaphobie-Inszenierung:unbekannt
# ::tokens ["-", "mehr", "Islamaphobie", "-", "Inszenierung", ":", "unbekannt"]
# ::lemmas ["-", "mehr", "Islamaphobie", "-", "Inszenierung", ":", "unbekannt"]
(c22-2 / mehr
       :mod (c22-1 / person
                   :name (c22-0 / name
                                :op1 "Islamaphobie-Inszenierung"))
       :ARG1-of (c22-3 / bekannt-02
                       :polarity -))

# ::snt ": SYDNEY SIEGE ENDS:- After hours- dead- injured- Status of gunman unknown-1 officer injured"
# ::tokens ["\"", ":", "SYDNEY", "SIEGE", "ENDS:-", "After", "hours-", "dead-", "injured-", "Status", "of", "gunman", "unknown-1", "officer", "injured", "\""]
# ::lemmas ["\"", ":", "sydney", "SIEGE", "ENDS:-", "after", "hours-", "dead-", "injured-", "Status", "of", "gunman", "unknown-1", "officer", "injure", "\""]
(c23-2 / multi-sentence
       :snt1 (c23-15 / arrive-01
                     :ARG1 (c23-10 / city
                                   :name (c23-6 / name
                                                :op1 "Sydney")))
       :snt2 (c23-4 / and
                    :op1 (c23-9 / die-01
                                :ARG1 (c23-8 / person))
                    :op2 (c23-12 / status
                                 :poss (c23-11 / gunman
                                               :ARG1-of (c23-13 / know-01
                                                                :polarity -)))
                    :op3 (c23-5 / injure-01
                                :ARG1 (c23-14 / person
                                              :ARG0-of (c23-0 / have-org-role-91
                                                              :ARG2 (c23-3 / officer))
                                              :quant 1))
                    :time (c23-7 / after
                                 :op1 (c23-1 / hour))))

# ::snt : SYDNEY SIEGE ENDS:- After hours- dead- injured- Status of gunman unknown-1 officer injured
# ::tokens [":", "SYDNEY", "SIEGE", "ENDS:-", "After", "hours-", "dead-", "injured-", "Status", "of", "gunman", "unknown-1", "officer", "injured"]
# ::lemmas [":", "sydney", "siege", "ENDS:-", "after", "hours-", "dead-", "injured-", "Status", "of", "gunman", "unknown-1", "officer", "injure"]
(c24-1 / multi-sentence
       :snt1 (c24-14 / arrive-01
                     :ARG1 (c24-8 / city
                                  :name (c24-5 / name
                                               :op1 "Sydney")))
       :snt2 (c24-3 / and
                    :op1 (c24-7 / die-01
                                :ARG1 (c24-6 / person))
                    :op2 (c24-4 / injure-01
                                :ARG1 c24-6)
                    :op3 (c24-11 / status
                                 :poss (c24-9 / gunman
                                              :ARG1-of (c24-12 / know-01
                                                               :polarity -)))
                    :op4 (c24-10 / injure-01
                                 :ARG1 (c24-13 / person
                                               :ARG0-of (c24-0 / have-org-role-91
                                                               :ARG2 (c24-2 / officer))
                                               :quant 1))))

# ::snt Gun Man is dead.
# ::tokens ["Gun", "Man", "is", "dead", "."]
# ::lemmas ["Gun", "Man", "be", "dead", "."]
(c26-0 / die-01
       :ARG1 (c26-1 / man
                    :mod (c26-2 / gun)))

# ::snt just realised the tweet and the hash tag contradicted each other!
# ::tokens ["just", "realised", "the", "tweet", "and", "the", "hash", "tag", "contradicted", "each", "other", "!"]
# ::lemmas ["just", "realise", "the", "tweet", "and", "the", "hash", "tag", "contradict", "each", "other", "!"]
(c27-7 / realize-01
       :ARG0 (c27-5 / i)
       :ARG1 (c27-8 / contradict-01
                    :ARG0 (c27-11 / and
                                  :op1 (c27-10 / thing
                                               :ARG1-of (c27-9 / tweet-01))
                                  :op2 (c27-6 / thing
                                              :ARG3-of (c27-4 / tag-01
                                                              :ARG1 (c27-0 / hash))))
                    :ARG1 (c27-2 / other
                                 :mod (c27-3 / each)))
       :mod (c27-1 / just))

# ::snt has anything changed?...hardly!...
# ::tokens ["has", "anything", "changed?", "...", "hardly", "!", "..."]
# ::lemmas ["have", "anything", "changed?", "...", "hardly", "!", "..."]
(c28-1 / change-01
       :polarity (c28-3 / amr-unknown)
       :ARG1 (c28-2 / anything)
       :degree (c28-0 / hardly))

# ::snt it hasn't even been confirmed ffs
# ::tokens ["it", "has", "n't", "even", "been", "confirmed", "ffs"]
# ::lemmas ["it", "have", "not", "even", "be", "confirm", "ffs"]
(c29-2 / confirm-01
       :ARG1 (c29-3 / it)
       :mod (c29-0 / even)
       :mod (c29-1 / ffs)
       :polarity -)
