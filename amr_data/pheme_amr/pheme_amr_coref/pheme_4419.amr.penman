# ::snt not even the same thing. thanks for trying to excuse murder, real american you are!
# ::tokens ["not", "even", "the", "same", "thing", ".", "thanks", "for", "trying", "to", "excuse", "murder", ",", "real", "american", "you", "are", "!"]
# ::lemmas ["not", "even", "the", "same", "thing", ".", "thank", "for", "try", "to", "excuse", "murder", ",", "real", "american", "you", "be", "!"]
(c1-1 / multi-sentence
      :snt1 (c1-13 / same-01
                   :ARG2 (c1-14 / thing)
                   :mod (c1-3 / even)
                   :polarity -)
      :snt2 (c1-12 / thank-01
                   :ARG0 (c1-4 / i)
                   :ARG1 (c1-0 / you)
                   :ARG2 (c1-6 / try-01
                               :ARG0 c1-0
                               :ARG1 (c1-2 / excuse-01
                                           :ARG0 c1-0
                                           :ARG2 (c1-7 / murder-01)))
                   :ARG1-of (c1-9 / cause-01
                                  :ARG0 (c1-8 / person
                                              :mod (c1-10 / country
                                                          :name (c1-5 / name
                                                                      :op1 "America"))
                                              :ARG1-of (c1-11 / real-04)
                                              :domain (c1-15 / you)))))

# ::snt all these names from the last couple of years.
# ::tokens ["all", "these", "names", "from", "the", "last", "couple", "of", "years", "."]
# ::lemmas ["all", "these", "name", "from", "the", "last", "couple", "of", "years", "."]
(c2-7 / thing
      :ARG2-of (c2-2 / name-01)
      :mod (c2-6 / this)
      :mod (c2-8 / all)
      :time (c2-1 / before
                  :op1 (c2-3 / now)
                  :duration (c2-5 / couple
                                  :op1 (c2-4 / temporal-quantity
                                             :unit (c2-0 / year)
                                             :quant 1))))

# ::snt Fortunately Ann Coulter declared racism dead in America, so problem solved.
# ::tokens ["Fortunately", "Ann", "Coulter", "declared", "racism", "dead", "in", "America", ",", "so", "problem", "solved", "."]
# ::lemmas ["fortunately", "Ann", "Coulter", "declare", "racism", "dead", "in", "America", ",", "so", "problem", "solve", "."]
(c4-6 / declare-01
      :ARG0 (c4-4 / person
                  :name (c4-2 / name
                              :op1 "Ann"
                              :op2 "Coulter"))
      :ARG1 (c4-5 / racism
                  :ARG1-of (c4-0 / die-01
                                 :location (c4-7 / country
                                                 :name (c4-3 / name
                                                             :op1 "America"))))
      :ARG2-of (c4-1 / fortunate-01)
      :ARG0-of (c4-8 / cause-01
                     :ARG1 (c4-9 / solve-01
                                 :ARG1 (c4-10 / problem))))

# ::snt Yeah and over % are due to their same race.But let's focus on the %
# ::tokens ["Yeah", "and", "over", "%", "are", "due", "to", "their", "same", "race", ".", "But", "let", "'s", "focus", "on", "the", "%"]
# ::lemmas ["yeah", "and", "over", "%", "be", "due", "to", "their", "same", "race", ".", "but", "let", "us", "focus", "on", "the", "%"]
(c5-6 / contrast-01
      :ARG1 (c5-5 / cause-01
                  :ARG0 (c5-4 / race
                              :ARG1-of (c5-7 / same-01)
                              :poss (c5-8 / they))
                  :ARG1 (c5-3 / percentage-entity
                              :value (c5-2 / over
                                           :op1 (c5-9 / percentage-entity))))
      :ARG2 (c5-1 / focus-01
                  :ARG0 (c5-0 / we)
                  :ARG2 c5-9
                  :mode imperative))

# ::snt SICK
# ::tokens ["SICK"]
# ::lemmas ["sick"]
(c6-0 / sick-02)

# ::snt I'm just saying it can happen to anyone
# ::tokens ["I", "'m", "just", "saying", "it", "can", "happen", "to", "anyone"]
# ::lemmas ["i", "be", "just", "say", "it", "can", "happen", "to", "anyone"]
(c7-4 / say-01
      :ARG0 (c7-2 / i)
      :ARG1 (c7-3 / possible-01
                  :ARG1 (c7-1 / event
                              :beneficiary (c7-5 / anyone)))
      :mod (c7-0 / just))

# ::snt if this becomes another -year-Jackson-Sharpton media circus, i'm blocking race-baiting. A KID got shot. a guy.
# ::tokens ["if", "this", "becomes", "another", "-year", "-", "Jackson", "-", "Sharpton", "media", "circus", ",", "i", "'m", "blocking", "race", "-", "baiting", ".", "A", "KID", "got", "shot", ".", "a", "guy", "."]
# ::lemmas ["if", "this", "become", "another", "-year", "-", "Jackson", "-", "Sharpton", "medium", "circus", ",", "i", "be", "block", "race", "-", "baiting", ".", "a", "KID", "got", "shoot", ".", "a", "guy", "."]
(c8-0 / multi-sentence
      :snt1 (c8-1 / block-01
                  :ARG0 (c8-3 / i)
                  :ARG1 (c8-8 / bait-01
                              :ARG2 (c8-7 / race))
                  :condition (c8-13 / become-01
                                    :ARG1 (c8-14 / this)
                                    :ARG2 (c8-9 / circus
                                                :mod (c8-6 / media)
                                                :mod (c8-16 / another)
                                                :poss (c8-2 / and
                                                            :op1 (c8-10 / person
                                                                        :name (c8-4 / name
                                                                                    :op1 "Jackson"))
                                                            :op2 (c8-15 / person
                                                                        :name (c8-5 / name
                                                                                    :op1 "Sharpton"))))))
      :snt2 (c8-12 / shoot-02
                   :ARG1 (c8-11 / guy)))

# ::snt Trayvon Martin. Jordan Davis. Renisha McBride. Mike Brown. Our streets are stained with the blood of unarmed, black teens.
# ::tokens ["Trayvon", "Martin", ".", "Jordan", "Davis", ".", "Renisha", "McBride", ".", "Mike", "Brown", ".", "Our", "streets", "are", "stained", "with", "the", "blood", "of", "unarmed", ",", "black", "teens", "."]
# ::lemmas ["Trayvon", "Martin", ".", "Jordan", "Davis", ".", "Renisha", "McBride", ".", "Mike", "Brown", ".", "our", "street", "be", "stain", "with", "the", "blood", "of", "unarmed", ",", "black", "teen", "."]
(c9-1 / multi-sentence
      :snt1 (c9-16 / and
                   :op1 (c9-8 / person
                              :name (c9-6 / name
                                          :op1 "Trayvon"
                                          :op2 "Martin"))
                   :op2 (c9-15 / person
                               :name (c9-7 / name
                                           :op1 "Jordan"
                                           :op2 "Davis"))
                   :op3 (c9-2 / person
                              :name (c9-9 / name
                                          :op1 "Renisha"
                                          :op2 "McBride"))
                   :op4 (c9-14 / person
                               :name (c9-10 / name
                                            :op1 "Mike"
                                            :op2 "Brown")))
      :snt2 (c9-12 / stain-01
                   :ARG1 (c9-4 / street
                               :poss (c9-0 / we))
                   :ARG2 (c9-3 / blood
                               :poss (c9-13 / teen
                                            :ARG1-of (c9-5 / arm-01
                                                           :polarity -)
                                            :ARG1-of (c9-11 / black-05)))))

# ::snt Especially in Chicago . Where is the outrage ?
# ::tokens ["Especially", "in", "Chicago", ".", "Where", "is", "the", "outrage", "?"]
# ::lemmas ["especially", "in", "Chicago", ".", "where", "be", "the", "outrage", "?"]
(c10-0 / multi-sentence
       :snt1 (c10-2 / outrage-01
                    :location (c10-7 / amr-unknown)
                    :mod (c10-4 / especially)
                    :location (c10-6 / city
                                     :name (c10-5 / name
                                                  :op1 "Chicago")))
       :snt2 (c10-1 / be-located-at-91
                    :ARG1 (c10-3 / event)
                    :ARG2 c10-7))

# ::snt Chris Lane, Brad Heyka, Heather Muller, Aaron Sander, Jason Befort. One was jogging and the four others were in their house
# ::tokens ["Chris", "Lane", ",", "Brad", "Heyka", ",", "Heather", "Muller", ",", "Aaron", "Sander", ",", "Jason", "Befort", ".", "One", "was", "jogging", "and", "the", "four", "others", "were", "in", "their", "house"]
# ::lemmas ["Chris", "Lane", ",", "Brad", "Heyka", ",", "Heather", "Muller", ",", "Aaron", "Sander", ",", "Jason", "Befort", ".", "One", "be", "jog", "and", "the", "four", "other", "be", "in", "their", "house"]
(c11-1 / multi-sentence
       :snt1 (c11-6 / and
                    :op1 (c11-4 / person
                                :name (c11-11 / name
                                              :op1 "Chris"
                                              :op2 "Lane"))
                    :op2 (c11-5 / person
                                :name (c11-16 / name
                                              :op1 "Brad"
                                              :op2 "Heyka"))
                    :op3 (c11-8 / person
                                :name (c11-2 / name
                                             :op1 "Heather"
                                             :op2 "Muller"))
                    :op4 (c11-12 / person
                                 :name (c11-3 / name
                                              :op1 "Aaron"
                                              :op2 "Sander"))
                    :op5 (c11-10 / person
                                 :name (c11-18 / name
                                               :op1 "Jason"
                                               :op2 "Befort")))
       :snt2 (c11-13 / and
                     :op1 (c11-0 / jog-01
                                 :ARG0 (c11-15 / one))
                     :op2 (c11-9 / be-located-at-91
                                 :ARG1 (c11-14 / other
                                               :quant 4)
                                 :ARG2 (c11-7 / house
                                              :poss (c11-17 / they)))))

# ::snt Always do.
# ::tokens ["Always", "do", "."]
# ::lemmas ["always", "do", "."]
(c12-0 / do-02
       :time (c12-1 / always))

# ::snt It's just Heartbreaking Man.
# ::tokens ["It", "'s", "just", "Heartbreaking", "Man", "."]
# ::lemmas ["it", "be", "just", "Heartbreaking", "Man", "."]
(c13-1 / man
       :ARG0-of (c13-3 / break-heart-31)
       :mod (c13-0 / just)
       :domain (c13-2 / it))

# ::snt ABSOLUTELY ! the faith -KARMA LIVES !
# ::tokens ["ABSOLUTELY", "!", "the", "faith", "-KARMA", "LIVES", "!"]
# ::lemmas ["ABSOLUTELY", "!", "the", "faith", "-karma", "LIVES", "!"]
(c14-2 / live-01
       :ARG0 (c14-1 / person
                    :name (c14-0 / name
                                 :op1 "Karah"))
       :mod (c14-3 / absolute)
       :mode expressive)
