# ::snt seeing similarities between poking fun at the islamic terror machine &amp; jew hatred just for the sake of it, proves you a fool
# ::tokens ["seeing", "similarities", "between", "poking", "fun", "at", "the", "islamic", "terror", "machine", "&", "amp", ";", "jew", "hatred", "just", "for", "the", "sake", "of", "it", ",", "proves", "you", "a", "fool"]
# ::lemmas ["see", "similarity", "between", "poke", "fun", "at", "the", "islamic", "terror", "machine", "&", "amp", ";", "jew", "hatre", "just", "for", "the", "sake", "of", "it", ",", "prove", "you", "a", "fool"]
(c1-10 / prove-01
       :ARG0 (c1-12 / see-01
                    :ARG0 (c1-1 / you)
                    :ARG1 (c1-11 / resemble-01
                                 :ARG1 (c1-14 / poke-01
                                              :ARG1 (c1-15 / and
                                                           :op1 (c1-4 / machine
                                                                      :mod (c1-13 / terror)
                                                                      :mod (c1-7 / religious-group
                                                                                 :name (c1-8 / name
                                                                                             :op1 "Islam")))
                                                           :op2 (c1-6 / amp))))
                    :ARG2 (c1-0 / hate-01
                                :ARG1 c1-7
                                :name (c1-9 / name
                                            :op1 "Jew"))
                    :purpose (c1-5 / sake
                                   :mod (c1-2 / just)
                                   :domain c1-0))
       :ARG1 (c1-3 / fool
                   :domain c1-1))

# ::snt oh bore off for god's sake
# ::tokens ["oh", "bore", "off", "for", "god", "'s", "sake"]
# ::lemmas ["oh", "bore", "off", "for", "god", "'s", "sake"]
(c2-2 / bore-02
      :ARG0 (c2-0 / you)
      :mod (c2-3 / oh)
      :direction (c2-1 / off)
      :purpose (c2-6 / sake
                     :poss (c2-5 / person
                                 :name (c2-4 / name
                                             :op1 "God")))
      :mode imperative)

# ::snt ..... or anything
# ::tokens [".....", "or", "anything"]
# ::lemmas [".....", "or", "anything"]
(c3-0 / or
      :op2 (c3-1 / anything))

# ::snt are Jews not killing quite a few innocent Palestinians?
# ::tokens ["are", "Jews", "not", "killing", "quite", "a", "few", "innocent", "Palestinians", "?"]
# ::lemmas ["be", "Jews", "not", "kill", "quite", "a", "few", "innocent", "Palestinians", "?"]
(c4-8 / kill-01
      :ARG0 (c4-5 / person
                  :mod (c4-6 / religious-group
                             :name (c4-3 / name
                                         :op1 "Jew")))
      :ARG1 (c4-9 / person
                  :mod (c4-7 / country
                             :name (c4-4 / name
                                         :op1 "Palestine"))
                  :ARG1-of (c4-2 / innocent-01)
                  :quant (c4-0 / many
                               :degree (c4-1 / quite)))
      :polarity (c4-10 / amr-unknown)
      :polarity -)

# ::snt eh?
# ::tokens ["eh", "?"]
# ::lemmas ["eh", "?"]
(c5-0 / eh
      :polarity (c5-1 / amr-unknown))

# ::snt yes, and that's where you fail in this fight Tom
# ::tokens ["yes", ",", "and", "that", "'s", "where", "you", "fail", "in", "this", "fight", "Tom"]
# ::lemmas ["yes", ",", "and", "that", "be", "where", "you", "fail", "in", "this", "fight", "Tom"]
(c6-6 / say-01
      :ARG0 (c6-1 / i)
      :ARG1 (c6-8 / and
                  :op2 (c6-7 / that
                             :location-of (c6-0 / fail-01
                                                :ARG1 (c6-4 / person
                                                            :name (c6-3 / name
                                                                        :op1 "Tom"))
                                                :ARG2 (c6-2 / fight-01
                                                            :mod (c6-5 / this)))))
      :ARG2 c6-4)

# ::snt I'm not, you unbelievable dickhead. Fuck along, now
# ::tokens ["I", "'m", "not", ",", "you", "unbelievable", "dickhead", ".", "Fuck", "along", ",", "now"]
# ::lemmas ["i", "be", "not", ",", "you", "unbelievable", "dickhead", ".", "fuck", "along", ",", "now"]
(c7-2 / multi-sentence
      :snt1 (c7-8 / say-01
                  :ARG0 (c7-4 / i)
                  :ARG1 (c7-6 / person
                              :domain c7-4
                              :ARG1-of (c7-3 / believe-01
                                             :ARG1-of (c7-9 / possible-01
                                                            :polarity -))
                              :polarity -)
                  :ARG2 (c7-7 / dickhead
                              :mod (c7-0 / you)))
      :snt2 (c7-1 / fuck-along-19
                  :time (c7-5 / now)
                  :mode expressive))

# ::snt apology accepted
# ::tokens ["apology", "accepted"]
# ::lemmas ["apology", "accept"]
(c8-1 / accept-01
      :ARG1 (c8-0 / apologize-01))

# ::snt The jews didnt go around killing innocent people so get ya history sorted before you say things like that
# ::tokens ["The", "jews", "did", "nt", "go", "around", "killing", "innocent", "people", "so", "get", "ya", "history", "sorted", "before", "you", "say", "things", "like", "that"]
# ::lemmas ["the", "jews", "do", "not", "go", "around", "kill", "innocent", "people", "so", "get", "ya", "history", "sort", "before", "you", "say", "thing", "like", "that"]
(c9-9 / cause-01
      :ARG0 (c9-10 / go-02
                   :ARG0 (c9-8 / religious-group
                               :name (c9-6 / name
                                           :op1 "Jew"))
                   :ARG4 (c9-15 / around)
                   :purpose (c9-14 / kill-01
                                   :ARG0 c9-8
                                   :ARG1 (c9-7 / person
                                               :ARG1-of (c9-4 / innocent-01)))
                   :polarity -)
      :ARG1 (c9-12 / sort-01
                   :ARG0 (c9-1 / you)
                   :ARG1 (c9-0 / history)
                   :time (c9-2 / before
                               :op1 (c9-3 / say-01
                                          :ARG0 c9-1
                                          :ARG1 (c9-13 / thing
                                                       :ARG1-of (c9-5 / resemble-01
                                                                      :ARG2 (c9-11 / that)))))))

# ::snt RT A cartoon, in solidarity
# ::tokens ["RT", "A", "cartoon", ",", "in", "solidarity"]
# ::lemmas ["RT", "A", "cartoon", ",", "in", "solidarity"]
(c10-3 / cartoon
       :ARG0-of (c10-0 / mean-01
                       :ARG1 (c10-2 / publication
                                    :name (c10-1 / name
                                                 :op1 "RT")))
       :purpose (c10-4 / solidarity))

# ::snt Yes you are and always have been you typical whinging apologist lefty moron (sorry for ad-hom but it's necessary some times)
# ::tokens ["Yes", "you", "are", "and", "always", "have", "been", "you", "typical", "whinging", "apologist", "lefty", "moron", "(", "sorry", "for", "ad", "-", "hom", "but", "it", "'s", "necessary", "some", "times", ")"]
# ::lemmas ["yes", "you", "be", "and", "always", "have", "be", "you", "typical", "whinge", "apologist", "lefty", "moron", "(", "sorry", "for", "ad", "-", "hom", "but", "it", "be", "necessary", "some", "time", ")"]
(c11-3 / multi-sentence
       :snt1 (c11-15 / and
                     :op1 (c11-0 / you
                                 :mod (c11-10 / moron
                                              :ARG1-of (c11-2 / left-19)
                                              :ARG0-of (c11-1 / whine-01)
                                              :ARG1-of (c11-14 / typical-02)
                                              :domain (c11-11 / you)))
                     :op2 (c11-4 / be-temporally-at-91
                                 :ARG1 c11-11
                                 :ARG2 (c11-6 / always)))
       :snt2 (c11-12 / sorry-01
                     :ARG1 (c11-7 / i)
                     :ARG2 (c11-9 / ad-hominem)
                     :concession (c11-8 / need-01
                                        :ARG1 c11-9
                                        :frequency (c11-13 / time
                                                           :quant (c11-5 / some)))))

# ::snt (Could've used a Charlie Hebdo one, but I find their Muslim pics unpleasantly reminiscent of old antisemitic comics.)
# ::tokens ["(", "Could", "'ve", "used", "a", "Charlie", "Hebdo", "one", ",", "but", "I", "find", "their", "Muslim", "pics", "unpleasantly", "reminiscent", "of", "old", "antisemitic", "comics", ".", ")"]
# ::lemmas ["(", "could", "'ve", "use", "a", "Charlie", "Hebdo", "one", ",", "but", "i", "find", "their", "Muslim", "pic", "unpleasantly", "reminiscent", "of", "old", "antisemitic", "comic_strip", ".", ")"]
(c12-12 / contrast-01
        :ARG1 (c12-10 / possible-01
                      :ARG1 (c12-2 / use-01
                                   :ARG0 (c12-6 / i)
                                   :ARG1 (c12-5 / one
                                                :mod (c12-1 / magazine
                                                            :name (c12-8 / name
                                                                         :op1 "Charlie"
                                                                         :op2 "Chi Hebdo")))))
        :ARG2 (c12-0 / find-02
                     :ARG0 c12-6
                     :ARG1 (c12-11 / reminiscent
                                   :domain (c12-17 / pic
                                                   :poss (c12-16 / they)
                                                   :mod (c12-7 / religious-group
                                                               :name (c12-9 / name
                                                                            :op1 "Muslim")))
                                   :ARG2 (c12-13 / comic
                                                 :mod (c12-3 / old)
                                                 :ARG0-of (c12-15 / oppose-01
                                                                  :ARG1 c12-7
                                                                  :name (c12-14 / name
                                                                                :op1 "Jew")))
                                   :polarity -)
                     :ARG0-of (c12-4 / please-01)))

# ::snt Here here RT : A cartoon, in solidarity
# ::tokens ["Here", "here", "RT", ":", "A", "cartoon", ",", "in", "solidarity"]
# ::lemmas ["here", "here", "RT", ":", "a", "cartoon", ",", "in", "solidarity"]
(c14-6 / say-01
       :ARG0 (c14-4 / publication
                    :name (c14-3 / name
                                 :op1 "RT"))
       :ARG1 (c14-5 / cartoon
                    :ARG0-of (c14-1 / mean-01
                                    :ARG1 (c14-2 / solidarity)))
       :location (c14-0 / here
                        :mod c14-0))

# ::snt Charlie Hebdo was anti religion in general. Try not to apologise for the muslim killers if you can help it
# ::tokens ["Charlie", "Hebdo", "was", "anti", "religion", "in", "general", ".", "Try", "not", "to", "apologise", "for", "the", "muslim", "killers", "if", "you", "can", "help", "it"]
# ::lemmas ["Charlie", "Hebdo", "be", "anti", "religion", "in", "general", ".", "try", "not", "to", "apologise", "for", "the", "muslim", "killer", "if", "you", "can", "help", "it"]
(c15-2 / multi-sentence
       :snt1 (c15-4 / oppose-01
                    :ARG0 (c15-8 / publication
                                 :name (c15-6 / name
                                              :op1 "Charlie"
                                              :op2 " Hebdo"))
                    :ARG1 (c15-9 / religion)
                    :ARG1-of (c15-11 / general-02))
       :snt2 (c15-12 / try-01
                     :ARG0 (c15-1 / you)
                     :ARG1 (c15-14 / apologize-01
                                   :ARG0 c15-1
                                   :ARG1 (c15-13 / person
                                                 :ARG0-of (c15-5 / kill-01)
                                                 :mod (c15-7 / religious-group
                                                             :name (c15-10 / name
                                                                           :op1 "Muslim")))
                                   :polarity -)
                     :condition (c15-3 / possible-01
                                       :ARG1 (c15-0 / help-02
                                                    :ARG0 c15-1
                                                    :ARG1 c15-14))
                     :mode imperative))

# ::snt actually it was the sallow skin and big noses but otherwise great point. Now sod off
# ::tokens ["actually", "it", "was", "the", "sallow", "skin", "and", "big", "noses", "but", "otherwise", "great", "point", ".", "Now", "sod", "off"]
# ::lemmas ["actually", "it", "be", "the", "sallow", "skin", "and", "big", "nose", "but", "otherwise", "great", "point", ".", "now", "sod", "off"]
(c16-2 / multi-sentence
       :snt1 (c16-10 / contrast-01
                     :ARG1 (c16-13 / and
                                   :op1 (c16-12 / skin
                                                :ARG1-of (c16-5 / allow-02))
                                   :op2 (c16-6 / nose
                                               :mod (c16-3 / big)))
                     :ARG2 (c16-8 / point-04
                                  :mod (c16-11 / great)
                                  :condition (c16-0 / have-polarity-91
                                                    :ARG1 c16-13
                                                    :ARG2 -))
                     :ARG1-of (c16-7 / actual-02))
       :snt2 (c16-4 / sod-off-00
                    :ARG0 (c16-1 / you)
                    :time (c16-9 / now)
                    :mode imperative))

# ::snt yes, and there again Tom, you fail in this fight
# ::tokens ["yes", ",", "and", "there", "again", "Tom", ",", "you", "fail", "in", "this", "fight"]
# ::lemmas ["yes", ",", "and", "there", "again", "Tom", ",", "you", "fail", "in", "this", "fight"]
(c17-8 / say-01
       :ARG0 (c17-3 / i)
       :ARG1 (c17-10 / and
                     :op1 (c17-0 / yes)
                     :op2 (c17-1 / fail-01
                                 :ARG1 (c17-6 / person
                                              :name (c17-5 / name
                                                           :op1 "Tom"))
                                 :ARG2 (c17-4 / fight-01
                                              :ARG0 c17-6
                                              :mod (c17-9 / this))
                                 :mod (c17-2 / again
                                             :mod (c17-7 / there))))
       :ARG2 c17-6)

# ::snt That is religiousist you should also include 'for Mohammed's sake'
# ::tokens ["That", "is", "religiousist", "you", "should", "also", "include", "'", "for", "Mohammed", "'s", "sake", "'"]
# ::lemmas ["that", "be", "religiousist", "you", "should", "also", "include", "'", "for", "Mohammed", "'s", "sake", "'"]
(c18-5 / religiousist
       :domain (c18-7 / that)
       :ARG1-of (c18-1 / include-01
                       :ARG0 (c18-0 / you)
                       :ARG1-of (c18-2 / recommend-01
                                       :ARG2 c18-0)
                       :mod (c18-8 / also)
                       :purpose (c18-6 / sake
                                       :poss (c18-4 / person
                                                    :name (c18-3 / name
                                                                 :op1 "Mohammed")))))

# ::snt That is VERY true.
# ::tokens ["That", "is", "VERY", "true", "."]
# ::lemmas ["that", "be", "very", "true", "."]
(c19-1 / true-01
       :ARG1 (c19-2 / that)
       :degree (c19-0 / very))

# ::snt hi, this is twitter, where you're right to be a cowardly scumbag is equal to my right to comment on it
# ::tokens ["hi", ",", "this", "is", "twitter", ",", "where", "you", "'re", "right", "to", "be", "a", "cowardly", "scumbag", "is", "equal", "to", "my", "right", "to", "comment", "on", "it"]
# ::lemmas ["hi", ",", "this", "be", "twitter", ",", "where", "you", "be", "right", "to", "be", "a", "cowardly", "scumbag", "be", "equal", "to", "my", "right", "to", "comment", "on", "it"]
(c20-10 / say-01
        :ARG0 (c20-3 / i)
        :ARG1 (c20-6 / publication
                     :name (c20-5 / name
                                  :op1 "Twitter")
                     :domain (c20-7 / right-05
                                    :ARG1 (c20-0 / you)
                                    :ARG2 (c20-1 / scumbag
                                                 :mod (c20-8 / coward)
                                                 :domain c20-0)
                                    :ARG1-of (c20-2 / equal-01
                                                    :ARG2 (c20-4 / right-05
                                                                 :ARG1 c20-3
                                                                 :ARG2 (c20-9 / comment-01
                                                                              :ARG0 c20-3
                                                                              :ARG3 c20-6)))))
        :ARG2 c20-0)

# ::snt THANK you! That's what they're reminding me of.
# ::tokens ["THANK", "you", "!", "That", "'s", "what", "they", "'re", "reminding", "me", "of", "."]
# ::lemmas ["thank", "you", "!", "that", "be", "what", "they", "be", "remind", "i", "of", "."]
(c21-1 / multi-sentence
       :snt1 (c21-7 / thank-01
                    :ARG0 (c21-2 / i)
                    :ARG1 (c21-0 / you))
       :snt2 (c21-4 / remind-01
                    :ARG0 (c21-6 / they)
                    :ARG1 (c21-3 / that)
                    :ARG2 (c21-5 / i)))

# ::snt and I can mute you *mutes you*
# ::tokens ["and", "I", "can", "mute", "you", "*", "mutes", "you", "*"]
# ::lemmas ["and", "i", "can", "mute", "you", "*", "mute", "you", "*"]
(c22-5 / and
       :op2 (c22-3 / possible-01
                   :ARG1 (c22-1 / mute-01
                                :ARG0 (c22-2 / i)
                                :ARG1 (c22-0 / you))
                   :ARG0-of (c22-4 / mean-01
                                   :ARG1 c22-1
                                   :ARG0 c22-2
                                   :ARG1 c22-0)))

# ::snt Buigen voor geweld noemt men dit.
# ::tokens ["Buigen", "voor", "geweld", "noemt", "men", "dit", "."]
# ::lemmas ["Buigen", "voor", "geweld", "noemt", "man", "dit", "."]
(c23-0 / have-03
       :ARG0 (c23-1 / we)
       :ARG1 (c23-6 / string-entity
                    :value "Buigen")
       :location (c23-3 / van
                        :op1 (c23-5 / geweld))
       :ARG0-of (c23-4 / cause-01
                       :ARG1 (c23-7 / have-mod-91
                                    :ARG1 c23-1
                                    :ARG2 (c23-2 / man))))

# ::snt that's right
# ::tokens ["that", "'s", "right"]
# ::lemmas ["that", "be", "right"]
(c24-0 / right-06
       :ARG2 (c24-1 / that))

# ::snt you're not the only one :/
# ::tokens ["you", "'re", "not", "the", "only", "one", ":/"]
# ::lemmas ["you", "be", "not", "the", "only", "one", ":/"]
(c25-0 / one
       :mod (c25-2 / only
                   :polarity -)
       :domain (c25-1 / you))

# ::snt again, hi this is twitter where you can have you head shoved so far up your ass as you like &amp; i get to comment on it
# ::tokens ["again", ",", "hi", "this", "is", "twitter", "where", "you", "can", "have", "you", "head", "shoved", "so", "far", "up", "your", "ass", "as", "you", "like", "&", "amp", ";", "i", "get", "to", "comment", "on", "it"]
# ::lemmas ["again", ",", "hi", "this", "be", "twitter", "where", "you", "can", "have", "you", "head", "shove", "so", "far", "up", "your", "ass", "as", "you", "like", "&", "amp", ";", "i", "get", "to", "comment", "on", "it"]
(c27-0 / multi-sentence
       :snt1 (c27-2 / say-01
                    :ARG0 (c27-15 / i)
                    :ARG1 (c27-1 / publication
                                 :name (c27-11 / name
                                               :op1 "Twitter")
                                 :domain (c27-21 / this)
                                 :location-of (c27-3 / possible-01
                                                     :ARG1 (c27-10 / shove-01
                                                                   :ARG0 (c27-17 / you
                                                                                 :part (c27-6 / head)
                                                                                 :part (c27-5 / ass))
                                                                   :ARG1 c27-6
                                                                   :ARG2 (c27-13 / up-03
                                                                                 :ARG1 c27-6
                                                                                 :ARG2 c27-5)
                                                                   :ARG1-of (c27-4 / have-degree-91
                                                                                   :ARG2 (c27-7 / far)
                                                                                   :ARG3 (c27-18 / so)
                                                                                   :ARG6 (c27-8 / like-01
                                                                                                :ARG0 c27-17
                                                                                                :ARG1 c27-10)))))
                    :ARG2 (c27-9 / person
                                 :name (c27-19 / name
                                               :op1 "&amp"))
                    :mod (c27-14 / again))
       :snt2 (c27-12 / get-22
                     :ARG0 (c27-16 / i)
                     :ARG1 (c27-20 / comment-01
                                   :ARG0 c27-16
                                   :ARG3 c27-1)))

# ::snt It's not as though the shooters were trying to control how we communicate with each other and add crazy rules.
# ::tokens ["It", "'s", "not", "as", "though", "the", "shooters", "were", "trying", "to", "control", "how", "we", "communicate", "with", "each", "other", "and", "add", "crazy", "rules", "."]
# ::lemmas ["it", "be", "not", "as", "though", "the", "shooter", "be", "try", "to", "control", "how", "we", "communicate", "with", "each", "other", "and", "add", "crazy", "rule", "."]
(c28-7 / resemble-01
       :ARG1 (c28-4 / it)
       :ARG2 (c28-13 / try-01
                     :ARG0 (c28-6 / person
                                  :ARG0-of (c28-11 / shoot-02))
                     :ARG1 (c28-14 / and
                                   :op1 (c28-8 / control-01
                                               :ARG0 c28-6
                                               :ARG1 (c28-10 / thing
                                                             :manner-of (c28-9 / communicate-01
                                                                               :ARG0 (c28-0 / we)
                                                                               :ARG2 (c28-1 / other
                                                                                            :mod (c28-2 / each)))))
                                   :op2 (c28-3 / add-02
                                               :ARG0 c28-6
                                               :ARG1 (c28-5 / rule
                                                            :ARG1-of (c28-12 / crazy-03)))))
       :polarity -)

# ::snt neither did "the Muslims" of course
# ::tokens ["neither", "did", "\"", "the", "Muslims", "\"", "of", "course"]
# ::lemmas ["neither", "do", "\"", "the", "Muslims", "\"", "of", "course"]
(c29-5 / do-02
       :ARG0 (c29-3 / person
                    :mod (c29-4 / religious-group
                                :name (c29-2 / name
                                             :op1 "Muslim")))
       :mod (c29-0 / of-course)
       :mod (c29-1 / either)
       :polarity -)
