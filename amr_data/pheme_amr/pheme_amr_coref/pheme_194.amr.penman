# ::snt lets see who's spirit is
# ::tokens ["lets", "see", "who", "'s", "spirit", "is"]
# ::lemmas ["let", "see", "who", "be", "spirit", "be"]
(c1-0 / see-01
      :ARG0 (c1-1 / we)
      :ARG1 (c1-2 / spirit
                  :domain (c1-3 / person))
      :mode imperative)

# ::snt Did you retweet? RT Those who are tweeting this, might become less in number.
# ::tokens ["Did", "you", "retweet", "?", "RT", "Those", "who", "are", "tweeting", "this", ",", "might", "become", "less", "in", "number", "."]
# ::lemmas ["do", "you", "retweet", "?", "RT", "Those", "who", "be", "tweet", "this", ",", "might", "become", "less", "in", "number", "."]
(c3-3 / multi-sentence
      :snt1 (c3-8 / retribute-01
                  :ARG0 (c3-1 / you)
                  :polarity (c3-13 / amr-unknown))
      :snt2 (c3-10 / say-01
                   :ARG1 (c3-7 / possible-01
                               :ARG1 (c3-4 / become-01
                                           :ARG1 (c3-12 / person
                                                        :ARG0-of (c3-11 / tweet-02
                                                                        :ARG1 (c3-9 / this))
                                                        :mod (c3-6 / that))
                                           :ARG2 (c3-5 / number
                                                       :ARG1-of (c3-0 / have-quant-91
                                                                      :ARG3 (c3-2 / less)))))
                   :ARG2 (c3-14 / you)))

# ::snt and why cannot it be in such attack i.e.good riddance
# ::tokens ["and", "why", "can", "not", "it", "be", "in", "such", "attack", "i.e.good", "riddance"]
# ::lemmas ["and", "why", "can", "not", "it", "be", "in", "such", "attack", "i.e.good", "riddance"]
(c4-8 / and
      :op2 (c4-5 / cause-01
                 :ARG0 (c4-0 / amr-unknown)
                 :ARG1 (c4-3 / possible-01
                             :ARG1 (c4-2 / attack-01
                                         :ARG1 (c4-1 / it)
                                         :mod (c4-7 / such)
                                         :example (c4-4 / riddance
                                                        :ARG1-of (c4-6 / good-02)))
                             :polarity -)))

# ::snt No, I want to live a bit longer.
# ::tokens ["No", ",", "I", "want", "to", "live", "a", "bit", "longer", "."]
# ::lemmas ["no", ",", "i", "want", "to", "live", "a", "bit", "long", "."]
(c5-1 / want-01
      :ARG0 (c5-5 / i)
      :ARG1 (c5-2 / live-01
                  :ARG0 c5-5
                  :ARG1-of (c5-0 / have-degree-91
                                 :ARG2 (c5-6 / long-03
                                             :ARG1 c5-2)
                                 :ARG3 (c5-3 / more
                                             :quant (c5-4 / bit)))))

# ::snt OK, we'll defend your freedom for you RT No, I want to live a bit longer.
# ::tokens ["OK", ",", "we", "'ll", "defend", "your", "freedom", "for", "you", "RT", "No", ",", "I", "want", "to", "live", "a", "bit", "longer", "."]
# ::lemmas ["ok", ",", "we", "'ll", "defend", "your", "freedom", "for", "you", "RT", "no", ",", "i", "want", "to", "live", "a", "bit", "long", "."]
(c6-4 / multi-sentence
      :snt1 (c6-12 / defend-01
                   :ARG0 (c6-1 / we)
                   :ARG1 (c6-3 / free-04
                               :ARG1 (c6-2 / you))
                   :ARG1-of (c6-7 / okay-01))
      :snt2 (c6-14 / and
                   :op1 (c6-9 / want-01
                              :ARG0 (c6-8 / i)
                              :ARG1 (c6-5 / live-01
                                          :ARG0 c6-8
                                          :ARG1-of (c6-0 / have-degree-91
                                                         :ARG2 (c6-13 / long-03
                                                                      :ARG1 c6-5)
                                                         :ARG3 (c6-11 / more
                                                                      :quant (c6-6 / bit)))))
                   :op2 (c6-10 / no)))

# ::snt : Let there be more, not less. . RETWEET !!!!
# ::tokens [":", "Let", "there", "be", "more", ",", "not", "less", ".", ".", "RETWEET", "!", "!", "!", "!"]
# ::lemmas [":", "let", "there", "be", "more", ",", "not", "less", ".", ".", "retweet", "!", "!", "!", "!"]
(c7-3 / multi-sentence
      :snt1 (c7-8 / contrast-01
                  :ARG1 (c7-2 / let-01
                              :ARG0 (c7-1 / we)
                              :ARG1 (c7-6 / more)
                              :mode imperative)
                  :ARG2 (c7-9 / let-01
                              :ARG0 c7-1
                              :ARG1 (c7-0 / less
                                          :domain (c7-5 / we))
                              :mode imperative
                              :polarity -))
      :snt2 (c7-7 / return-02
                  :ARG0 (c7-4 / we)
                  :mode imperative))

# ::snt Those who are tweeting this, might become less in number.
# ::tokens ["Those", "who", "are", "tweeting", "this", ",", "might", "become", "less", "in", "number", "."]
# ::lemmas ["those", "who", "be", "tweet", "this", ",", "might", "become", "less", "in", "number", "."]
(c8-3 / possible-01
      :ARG1 (c8-2 / become-01
                  :ARG1 (c8-6 / person
                              :ARG0-of (c8-5 / tweet-02
                                             :ARG1 (c8-4 / this)))
                  :ARG2 (c8-0 / have-quant-91
                              :ARG1 c8-6
                              :ARG3 (c8-1 / less)
                              :ARG4 c8-6)))

# ::snt . Let's make this go viral!!!
# ::tokens [".", "Let", "'s", "make", "this", "go", "viral", "!", "!", "!"]
# ::lemmas [".", "let", "us", "make", "this", "go", "viral", "!", "!", "!"]
(c9-1 / make-02
      :ARG0 (c9-0 / we)
      :ARG1 (c9-3 / go-08
                  :ARG1 (c9-4 / this)
                  :ARG2 (c9-2 / viral))
      :mode imperative)

# ::snt : Let there be more, not less.
# ::tokens [":", "Let", "there", "be", "more", ",", "not", "less", "."]
# ::lemmas [":", "let", "there", "be", "more", ",", "not", "less", "."]
(c10-1 / let-01
       :ARG0 (c10-0 / you)
       :ARG1 (c10-5 / and
                    :op1 (c10-2 / more
                                :domain (c10-4 / they))
                    :op2 (c10-3 / less
                                :domain c10-4
                                :polarity -))
       :mode imperative)
