# ::snt Well, can't argue with that.
# ::tokens ["Well", ",", "ca", "n't", "argue", "with", "that", "."]
# ::lemmas ["well", ",", "can", "not", "argue", "with", "that", "."]
(c1-1 / possible-01
      :ARG1 (c1-3 / argue-02
                  :ARG1 (c1-2 / that))
      :mod (c1-0 / well)
      :polarity -)

# ::snt You mean like the cowboy running around that Lindt store right now?
# ::tokens ["You", "mean", "like", "the", "cowboy", "running", "around", "that", "Lindt", "store", "right", "now", "?"]
# ::lemmas ["you", "mean", "like", "the", "cowboy", "run", "around", "that", "Lindt", "store", "right", "now", "?"]
(c3-1 / mean-01
      :ARG0 (c3-0 / you)
      :ARG2 (c3-7 / resemble-01
                  :ARG2 (c3-4 / run-02
                              :ARG0 (c3-8 / cowboy)
                              :ARG1 (c3-10 / around
                                           :op1 (c3-9 / store
                                                      :name (c3-5 / name
                                                                  :op1 "Lindt")))
                              :time (c3-6 / now
                                          :mod (c3-2 / right))))
      :polarity (c3-3 / amr-unknown))

# ::snt 'MURRRCKA!
# ::tokens ["'", "MURRRCKA", "!"]
# ::lemmas ["'", "MURRRCKA", "!"]
(c5-1 / city
      :name (c5-0 / name
                  :op1 "MURRRCKA"))

# ::snt here here
# ::tokens ["here", "here"]
# ::lemmas ["here", "here"]
(c6-0 / here
      :mod c6-0)

# ::snt you can own a gun under very very strict rules and laws and it can only be certain kinds of guns
# ::tokens ["you", "can", "own", "a", "gun", "under", "very", "very", "strict", "rules", "and", "laws", "and", "it", "can", "only", "be", "certain", "kinds", "of", "guns"]
# ::lemmas ["you", "can", "own", "a", "gun", "under", "very", "very", "strict", "rule", "and", "law", "and", "it", "can", "only", "be", "certain", "kind", "of", "gun"]
(c7-15 / and
       :op1 (c7-7 / possible-01
                  :ARG1 (c7-4 / own-01
                              :ARG0 (c7-0 / you)
                              :ARG1 (c7-10 / gun)
                              :manner (c7-3 / under
                                            :op1 (c7-5 / and
                                                       :op1 (c7-8 / rule)
                                                       :op2 (c7-1 / law)
                                                       :mod (c7-12 / strict
                                                                   :degree (c7-6 / very))))))
       :op2 (c7-14 / possible-01
                   :ARG1 (c7-9 / gun
                               :mod (c7-13 / kind
                                           :mod (c7-11 / certain))
                               :mod (c7-2 / only))))

# ::snt What about Nigel, David or George??
# ::tokens ["What", "about", "Nigel", ",", "David", "or", "George", "?", "?"]
# ::lemmas ["what", "about", "Nigel", ",", "David", "or", "George", "?", "?"]
(c8-7 / amr-unknown
      :topic (c8-1 / or
                   :op1 (c8-4 / person
                              :name (c8-2 / name
                                          :op1 "Nigel"))
                   :op2 (c8-6 / person
                              :name (c8-3 / name
                                          :op1 "David"))
                   :op3 (c8-0 / person
                              :name (c8-5 / name
                                          :op1 "George"))))

# ::snt yep we did elect Abbott
# ::tokens ["yep", "we", "did", "elect", "Abbott"]
# ::lemmas ["yep", "we", "do", "elect", "Abbott"]
(c9-2 / elect-01
      :ARG0 (c9-0 / we)
      :ARG1 (c9-4 / person
                  :name (c9-3 / name
                              :op1 "Abbott"))
      :mod (c9-1 / yep
                 :mode expressive))

# ::snt Credlin's Midas touch: she can turn an unpalatable piece-of-shit into an unpalatable PM piece-of-shit!
# ::tokens ["Credlin", "'s", "Midas", "touch", ":", "she", "can", "turn", "an", "unpalatable", "piece", "-", "of", "-", "shit", "into", "an", "unpalatable", "PM", "piece", "-", "of", "-", "shit", "!"]
# ::lemmas ["Credlin", "'s", "Midas", "touch", ":", "she", "can", "turn", "an", "unpalatable", "piece", "-", "of", "-", "shit", "into", "an", "unpalatable", "pm", "piece", "-", "of", "-", "shit", "!"]
(c10-12 / touch-01
        :ARG0 (c10-7 / person
                     :name (c10-5 / name
                                  :op1 "Credlin"))
        :ARG1 (c10-13 / possible-01
                      :ARG1 (c10-9 / turn-02
                                   :ARG0 c10-7
                                   :ARG1 (c10-1 / piece-01
                                                :ARG1 (c10-10 / shit)
                                                :ARG1-of (c10-11 / palatable-01
                                                                 :polarity -))
                                   :ARG2 (c10-3 / piece-01
                                                :ARG1 (c10-4 / shit
                                                             :mod (c10-2 / prime))
                                                :ARG1-of (c10-8 / palatable-01
                                                                :polarity -))))
        :mod (c10-0 / language
                    :name (c10-6 / name
                                 :op1 "Midas")))

# ::snt once again they need a license and are regulated
# ::tokens ["once", "again", "they", "need", "a", "license", "and", "are", "regulated"]
# ::lemmas ["once", "again", "they", "need", "a", "license", "and", "be", "regulate"]
(c11-6 / and
       :op1 (c11-3 / need-01
                   :ARG0 (c11-5 / they)
                   :ARG1 (c11-0 / license-01
                                :ARG2 c11-5)
                   :mod (c11-2 / again
                               :mod (c11-1 / once)))
       :op2 (c11-4 / regulate-01
                   :ARG1 c11-5))

# ::snt Get away! What do u think TORIES use for clay,pigeon&amp; duck shooting??
# ::tokens ["Get", "away", "!", "What", "do", "u", "think", "TORIES", "use", "for", "clay", ",", "pigeon&amp", ";", "duck", "shooting", "?", "?"]
# ::lemmas ["get", "away", "!", "what", "do", "u", "think", "TORIES", "use", "for", "clay", ",", "pigeon&amp", ";", "duck", "shooting", "?", "?"]
(c12-2 / multi-sentence
       :snt1 (c12-9 / get-05
                    :ARG0 (c12-0 / you)
                    :ARG2 (c12-15 / away)
                    :mode imperative)
       :snt2 (c12-13 / think-01
                     :ARG0 (c12-11 / you)
                     :ARG1 (c12-3 / use-01
                                  :ARG0 (c12-6 / person
                                               :ARG1-of (c12-1 / liberal-02))
                                  :ARG1 (c12-4 / amr-unknown)
                                  :ARG2 (c12-5 / and
                                               :op1 (c12-8 / clay)
                                               :op2 (c12-14 / pigeon)
                                               :op3 (c12-7 / rifle)
                                               :op4 (c12-12 / shoot-01
                                                            :ARG2 (c12-10 / duck))))))

# ::snt yanks as a group are incredibly stupid
# ::tokens ["yanks", "as", "a", "group", "are", "incredibly", "stupid"]
# ::lemmas ["yank", "as", "a", "group", "be", "incredibly", "stupid"]
(c13-0 / stupid
       :degree (c13-3 / incredible)
       :domain (c13-1 / yank
                      :prep-as (c13-2 / group)))

# ::snt Case for the Affirmative:"Tony Abbott...PM!"I rest my case!
# ::tokens ["Case", "for", "the", "Affirmative:\"Tony", "Abbott", "...", "PM!\"I", "rest", "my", "case", "!"]
# ::lemmas ["case", "for", "the", "Affirmative:\"Tony", "Abbott", "...", "PM!\"I", "rest", "my", "case", "!"]
(c14-1 / multi-sentence
       :snt1 (c14-5 / case-03
                    :ARG2 (c14-8 / affirmative-action))
       :snt2 (c14-6 / say-01
                    :ARG1 (c14-3 / message-01
                                 :ARG0 (c14-0 / you)
                                 :ARG2 (c14-4 / person
                                              :name (c14-2 / name
                                                           :op1 "Tony"
                                                           :op2 "Abbott"))
                                 :ARG1-of (c14-7 / personal-02)
                                 :mode imperative)
                    :ARG2 c14-0))

# ::snt . I don't think they are far behind, no. I do expect we'll have a gun ownership
# ::tokens [".", "I", "do", "n't", "think", "they", "are", "far", "behind", ",", "no", ".", "I", "do", "expect", "we", "'ll", "have", "a", "gun", "ownership"]
# ::lemmas [".", "i", "do", "not", "think", "they", "be", "far", "behind", ",", "no", ".", "i", "do", "expect", "we", "'ll", "have", "a", "gun", "ownership"]
(c15-3 / multi-sentence
       :snt1 (c15-12 / think-01
                     :ARG0 (c15-7 / i)
                     :ARG1 (c15-4 / be-located-at-91
                                  :ARG1 (c15-11 / they)
                                  :ARG2 (c15-8 / behind
                                               :extent (c15-2 / far)))
                     :polarity -)
       :snt2 (c15-6 / expect-01
                    :ARG0 (c15-9 / i)
                    :ARG1 (c15-0 / have-03
                                 :ARG0 (c15-1 / we)
                                 :ARG1 (c15-5 / own-01
                                              :ARG0 c15-1
                                              :ARG1 (c15-10 / gun)))))

# ::snt ...surely Aussies can't be far behind?
# ::tokens ["...", "surely", "Aussies", "ca", "n't", "be", "far", "behind", "?"]
# ::lemmas ["...", "surely", "Aussies", "can", "not", "be", "far", "behind", "?"]
(c16-3 / possible-01
       :ARG1 (c16-6 / person
                    :mod (c16-4 / country
                                :name (c16-2 / name
                                             :op1 "Australia"))
                    :location (c16-1 / behind
                                     :extent (c16-0 / far)))
       :ARG1-of (c16-5 / sure-02)
       :polarity (c16-7 / amr-unknown)
       :polarity -)

# ::snt Indeed. She must have a nightmare of a job.
# ::tokens ["Indeed", ".", "She", "must", "have", "a", "nightmare", "of", "a", "job", "."]
# ::lemmas ["indeed", ".", "she", "must", "have", "a", "nightmare", "of", "a", "job", "."]
(c17-2 / multi-sentence
       :snt1 (c17-3 / indeed)
       :snt2 (c17-5 / infer-01
                    :ARG1 (c17-0 / have-03
                                 :ARG0 (c17-6 / she)
                                 :ARG1 (c17-4 / nightmare
                                              :mod (c17-1 / job)))))

# ::snt . And he is just stupid enough to attempt to undo Howard's greatest legacy - liberating us from guns.
# ::tokens [".", "And", "he", "is", "just", "stupid", "enough", "to", "attempt", "to", "undo", "Howard", "'s", "greatest", "legacy", "-", "liberating", "us", "from", "guns", "."]
# ::lemmas [".", "and", "he", "be", "just", "stupid", "enough", "to", "attempt", "to", "undo", "Howard", "'s", "great", "legacy", "-", "liberate", "we", "from", "gun", "."]
(c18-14 / and
        :op2 (c18-0 / have-degree-91
                    :ARG1 (c18-15 / he)
                    :ARG2 (c18-13 / stupid
                                  :mod (c18-1 / just))
                    :ARG3 (c18-6 / enough)
                    :ARG6 (c18-7 / attempt-01
                                 :ARG0 c18-15
                                 :ARG1 (c18-5 / undo-01
                                              :ARG0 c18-15
                                              :ARG1 (c18-3 / legacy
                                                           :poss (c18-9 / person
                                                                        :name (c18-8 / name
                                                                                     :op1 "Howard"))
                                                           :ARG1-of c18-0
                                                           :ARG2 (c18-11 / great)
                                                           :ARG3 (c18-4 / most))
                                              :topic (c18-12 / liberate-01
                                                             :ARG0 c18-9
                                                             :ARG1 (c18-2 / we)
                                                             :ARG2 (c18-10 / gun))))))

# ::snt So far?
# ::tokens ["So", "far", "?"]
# ::lemmas ["so", "far", "?"]
(c19-0 / so-far
       :polarity (c19-1 / amr-unknown))

# ::snt it's why I don't bag Credlin, image Abbott without her to supervise him
# ::tokens ["it", "'s", "why", "I", "do", "n't", "bag", "Credlin", ",", "image", "Abbott", "without", "her", "to", "supervise", "him"]
# ::lemmas ["it", "be", "why", "i", "do", "not", "bag", "Credlin", ",", "image", "Abbott", "without", "she", "to", "supervise", "he"]
(c20-6 / cause-01
       :ARG0 (c20-2 / it)
       :ARG1 (c20-1 / bag-01
                    :ARG0 (c20-7 / i)
                    :ARG1 (c20-5 / person
                                 :name (c20-3 / name
                                              :op1 "Credlin")
                                 :ARG0-of (c20-0 / image-01
                                                 :ARG1 (c20-9 / person
                                                              :name (c20-4 / name
                                                                           :op1 "Abbott")))
                                 :manner (c20-8 / supervise-01
                                                :ARG0 c20-9
                                                :ARG1 c20-5
                                                :polarity -))
                    :polarity -))

# ::snt : Americans say wouldn't happen if citizens had guns: you morons. Guess how many school shootings we have?"
# ::tokens [":", "Americans", "say", "would", "n't", "happen", "if", "citizens", "had", "guns", ":", "you", "morons", ".", "Guess", "how", "many", "school", "shootings", "we", "have", "?", "\""]
# ::lemmas [":", "Americans", "say", "would", "not", "happen", "if", "citizen", "have", "gun", ":", "you", "moron", ".", "guess", "how", "many", "school", "shooting", "we", "have", "?", "\""]
(c21-4 / multi-sentence
       :snt1 (c21-14 / say-01
                     :ARG0 (c21-8 / person
                                  :mod (c21-10 / country
                                               :name (c21-6 / name
                                                            :op1 "America")))
                     :ARG1 (c21-0 / have-polarity-91
                                  :condition (c21-17 / have-03
                                                     :ARG0 (c21-9 / citizen)
                                                     :ARG1 (c21-11 / gun))
                                  :ARG2 -)
                     :ARG1 c21-14
                     :ARG0 (c21-12 / moron
                                   :mod (c21-1 / you)))
       :snt2 (c21-13 / guess-01
                     :ARG0 c21-1
                     :mode imperative)
       :ARG1 (c21-7 / number
                    :quant-of (c21-5 / shoot-02
                                     :ARG1 (c21-3 / school)
                                     :ARG1-of (c21-15 / have-03
                                                      :ARG0 (c21-2 / we))))
       :polarity (c21-16 / amr-unknown))

# ::snt Gov 'em time? Not long now??
# ::tokens ["Gov", "'em", "time", "?", "Not", "long", "now", "?", "?"]
# ::lemmas ["Gov", "'em", "time", "?", "not", "long", "now", "?", "?"]
(c22-2 / multi-sentence
       :snt1 (c22-4 / give-01
                    :ARG0 (c22-0 / you)
                    :ARG1 (c22-6 / time)
                    :ARG2 (c22-5 / they)
                    :mode imperative)
       :snt2 (c22-1 / long-03
                    :time (c22-3 / now)
                    :polarity (c22-7 / amr-unknown)
                    :polarity -))

# ::snt how can I refute that evidence I've got nowhere to go
# ::tokens ["how", "can", "I", "refute", "that", "evidence", "I", "'ve", "got", "nowhere", "to", "go"]
# ::lemmas ["how", "can", "i", "refute", "that", "evidence", "i", "'ve", "get", "nowhere", "to", "go"]
(c23-4 / possible-01
       :ARG1 (c23-5 / refute-01
                    :ARG0 (c23-2 / i)
                    :ARG1 (c23-1 / evidence-01
                                 :mod (c23-8 / that))
                    :manner (c23-9 / amr-unknown))
       :ARG1-of (c23-6 / cause-01
                       :ARG0 (c23-0 / have-03
                                    :ARG0 c23-2
                                    :ARG1 (c23-3 / nowhere
                                                 :ARG4-of (c23-7 / go-01
                                                                 :ARG1 c23-2)))))

# ::snt no tom dick or harry can just walk into a shop and buy one like they do in america as long as no record
# ::tokens ["no", "tom", "dick", "or", "harry", "can", "just", "walk", "into", "a", "shop", "and", "buy", "one", "like", "they", "do", "in", "america", "as", "long", "as", "no", "record"]
# ::lemmas ["no", "tom", "dick", "or", "harry", "can", "just", "walk", "into", "a", "shop", "and", "buy", "one", "like", "they", "do", "in", "america", "as", "long", "as", "no", "record"]
(c24-9 / possible-01
       :ARG1 (c24-16 / and
                     :op1 (c24-1 / walk-01
                                 :ARG0 (c24-5 / or
                                              :op1 (c24-10 / dick
                                                           :mod (c24-15 / tom))
                                              :op2 (c24-0 / harry))
                                 :ARG2 (c24-14 / shop)
                                 :mod (c24-2 / just))
                     :op2 (c24-4 / buy-01
                                 :ARG0 c24-5
                                 :ARG1 (c24-3 / one)
                                 :ARG1-of (c24-11 / resemble-01
                                                  :ARG2 (c24-12 / buy-01
                                                                :ARG0 c24-5
                                                                :ARG1 c24-3
                                                                :location (c24-13 / country
                                                                                  :name (c24-8 / name
                                                                                               :op1 "America"))))))
       :condition (c24-6 / as-long-as
                         :op1 (c24-7 / record
                                     :polarity -))
       :polarity -)

# ::snt would you prefer bows and arrows?
# ::tokens ["would", "you", "prefer", "bows", "and", "arrows", "?"]
# ::lemmas ["would", "you", "prefer", "bow", "and", "arrow", "?"]
(c25-4 / prefer-01
       :polarity (c25-5 / amr-unknown)
       :ARG0 (c25-0 / you)
       :ARG1 (c25-2 / and
                    :op1 (c25-1 / bow)
                    :op2 (c25-3 / arrow)))

# ::snt here in the UK we had one school shooting in that's all it took to ban guns never had one since
# ::tokens ["here", "in", "the", "UK", "we", "had", "one", "school", "shooting", "in", "that", "'s", "all", "it", "took", "to", "ban", "guns", "never", "had", "one", "since"]
# ::lemmas ["here", "in", "the", "UK", "we", "have", "one", "school", "shooting", "in", "that", "be", "all", "it", "take", "to", "ban", "gun", "never", "have", "one", "since"]
(c26-0 / have-03
       :ARG0 (c26-1 / we)
       :ARG1 (c26-10 / shoot-02
                     :location (c26-4 / school)
                     :quant 1)
       :location (c26-12 / here
                         :location (c26-8 / country
                                          :name (c26-6 / name
                                                       :op1 "UK")))
       :ARG1-of (c26-11 / take-10
                        :ARG0 (c26-3 / ban-01
                                     :ARG1 (c26-9 / gun)))
       :ARG1-of (c26-7 / have-03
                       :ARG0 c26-1
                       :time (c26-5 / ever)
                       :time (c26-2 / since)
                       :polarity -))

# ::snt I'll say
# ::tokens ["I", "'ll", "say"]
# ::lemmas ["i", "'ll", "say"]
(c27-0 / say-01
       :ARG0 (c27-1 / i))

# ::snt . Enlightened societies don't allow their people to run around like goddamn cowboys. Fact.
# ::tokens [".", "Enlightened", "societies", "do", "n't", "allow", "their", "people", "to", "run", "around", "like", "goddamn", "cowboys", ".", "Fact", "."]
# ::lemmas [".", "enlightened", "society", "do", "not", "allow", "their", "people", "to", "run", "around", "like", "goddamn", "cowboy", ".", "fact", "."]
(c28-1 / multi-sentence
       :snt1 (c28-10 / allow-01
                     :ARG0 (c28-9 / society
                                  :ARG1-of (c28-2 / enlighten-01))
                     :ARG1 (c28-6 / run-02
                                  :ARG0 (c28-5 / person
                                               :poss c28-9)
                                  :direction (c28-3 / around)
                                  :ARG1-of (c28-4 / resemble-01
                                                  :ARG2 (c28-7 / cowboy
                                                               :mod (c28-8 / goddamn))))
                     :polarity -)
       :snt2 (c28-0 / fact))

# ::snt thousand murders r committed with ilegal firearms. pales in comparison to school shootings
# ::tokens ["thousand", "murders", "r", "committed", "with", "ilegal", "firearms", ".", "pales", "in", "comparison", "to", "school", "shootings"]
# ::lemmas ["thousand", "murder", "r", "commit", "with", "ilegal", "firearm", ".", "pale", "in", "comparison", "to", "school", "shooting"]
(c29-1 / multi-sentence
       :snt1 (c29-6 / commit-02
                    :ARG1 (c29-4 / murder-01
                                 :quant 1000)
                    :instrument (c29-0 / firearm
                                       :mod (c29-3 / ilegal)))
       :snt2 (c29-5 / pale-02
                    :ARG1 (c29-7 / it)
                    :ARG2 (c29-8 / shoot-02
                                 :location (c29-2 / school))))

# ::snt . debate now.
# ::tokens [".", "debate", "now", "."]
# ::lemmas [".", "debate", "now", "."]
(c30-1 / debate-01
       :time (c30-0 / now))

# ::snt Coincidentally, all in gun-free zones. We need more literate maniacs.
# ::tokens ["Coincidentally", ",", "all", "in", "gun", "-", "free", "zones", ".", "We", "need", "more", "literate", "maniacs", "."]
# ::lemmas ["coincidentally", ",", "all", "in", "gun", "-", "free", "zone", ".", "we", "need", "more", "literate", "maniac", "."]
(c31-4 / multi-sentence
       :snt1 (c31-6 / be-located-at-91
                    :ARG1 (c31-12 / all)
                    :ARG2 (c31-3 / zone
                                 :ARG1-of (c31-2 / free-04
                                                 :ARG2 (c31-11 / gun)))
                    :manner (c31-10 / coincide))
       :snt2 (c31-8 / need-01
                    :ARG0 (c31-1 / we)
                    :ARG1 (c31-9 / maniac
                                 :ARG1-of (c31-0 / have-degree-91
                                                 :ARG2 (c31-5 / literate)
                                                 :ARG3 (c31-7 / more)))))
