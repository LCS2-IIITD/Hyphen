# ::snt Thats obvious.....
# ::tokens ["That", "s", "obvious", "....."]
# ::lemmas ["that", "s", "obvious", "....."]
(c1-0 / obvious-01
      :ARG1 (c1-1 / that))

# ::snt imagine if this fugitive is allowed to put on a hijab, Police could search for her for years!.
# ::tokens ["imagine", "if", "this", "fugitive", "is", "allowed", "to", "put", "on", "a", "hijab", ",", "Police", "could", "search", "for", "her", "for", "years", "!", "."]
# ::lemmas ["imagine", "if", "this", "fugitive", "be", "allow", "to", "put", "on", "a", "hijab", ",", "police", "could", "search", "for", "she", "for", "years", "!", "."]
(c2-5 / imagine-01
      :ARG0 (c2-0 / you)
      :ARG1 (c2-6 / possible-01
                  :ARG1 (c2-8 / search-01
                              :ARG0 (c2-11 / police)
                              :ARG2 (c2-3 / person
                                          :ARG0-of (c2-1 / flee-05)
                                          :mod (c2-10 / this))
                              :duration (c2-2 / multiple
                                              :op1 (c2-7 / temporal-quantity
                                                         :unit (c2-13 / year)
                                                         :quant 1)))
                  :condition (c2-12 / allow-01
                                    :ARG1 (c2-9 / put-on-08
                                                :ARG0 c2-3
                                                :ARG1 (c2-4 / burqa))))
      :mode imperative)

# ::snt so awful x
# ::tokens ["so", "awful", "x"]
# ::lemmas ["so", "awful", "x"]
(c3-1 / awful
      :degree (c3-0 / so))

# ::snt just too awful.
# ::tokens ["just", "too", "awful", "."]
# ::lemmas ["just", "too", "awful", "."]
(c4-0 / have-degree-91
      :ARG2 (c4-3 / awful)
      :ARG3 (c4-2 / too)
      :mod (c4-1 / just))

# ::snt won't be long till there's war
# ::tokens ["wo", "n't", "be", "long", "till", "there", "'s", "war"]
# ::lemmas ["will", "not", "be", "long", "till", "there", "be", "war"]
(c5-1 / long-03
      :time (c5-2 / until
                  :op1 (c5-0 / war-01))
      :polarity -)

# ::snt will the PM now announce that the UK have totally locked down our borders to prevent armed terrorists from entering?
# ::tokens ["will", "the", "PM", "now", "announce", "that", "the", "UK", "have", "totally", "locked", "down", "our", "borders", "to", "prevent", "armed", "terrorists", "from", "entering", "?"]
# ::lemmas ["will", "the", "PM", "now", "announce", "that", "the", "UK", "have", "totally", "lock", "down", "our", "border", "to", "prevent", "armed", "terrorist", "from", "enter", "?"]
(c6-16 / announce-01
       :ARG0 (c6-10 / person
                    :ARG0-of (c6-0 / have-org-role-91
                                   :ARG2 (c6-3 / minister
                                               :mod (c6-15 / prime))))
       :ARG1 (c6-2 / lock-down-05
                   :ARG0 (c6-12 / country
                                :name (c6-8 / name
                                            :op1 "UK"))
                   :ARG1 (c6-5 / border
                               :poss (c6-1 / we))
                   :degree (c6-14 / total)
                   :purpose (c6-4 / prevent-01
                                  :ARG0 c6-12
                                  :ARG1 (c6-13 / terrorist
                                               :ARG1-of (c6-7 / arm-01))
                                  :ARG2 (c6-6 / enter-01
                                              :ARG0 c6-13)))
       :polarity (c6-9 / amr-unknown)
       :time (c6-11 / now))

# ::snt Get to know real Muslims and you'll see it's true. True Muslims are against these "Muslims" that commit attacks
# ::tokens ["Get", "to", "know", "real", "Muslims", "and", "you", "'ll", "see", "it", "'s", "true", ".", "True", "Muslims", "are", "against", "these", "\"", "Muslims", "\"", "that", "commit", "attacks"]
# ::lemmas ["get", "to", "know", "real", "Muslims", "and", "you", "'ll", "see", "it", "be", "true", ".", "true", "Muslims", "be", "against", "these", "\"", "Muslims", "\"", "that", "commit", "attack"]
(c7-2 / multi-sentence
      :snt1 (c7-0 / have-condition-91
                  :ARG1 (c7-13 / see-01
                               :ARG0 (c7-1 / you)
                               :ARG1 (c7-14 / true-01
                                            :ARG1 (c7-5 / it)))
                  :ARG2 (c7-11 / get-03
                               :ARG1 c7-1
                               :ARG2 (c7-6 / know-02
                                           :ARG0 c7-1
                                           :ARG1 (c7-9 / person
                                                       :mod (c7-10 / religious-group
                                                                   :name (c7-7 / name
                                                                               :op1 "Islam"))
                                                       :ARG1-of (c7-8 / real-04)))))
      :snt2 (c7-4 / oppose-01
                  :ARG0 (c7-15 / person
                               :mod c7-10
                               :ARG1-of c7-14)
                  :mod (c7-12 / this))
      :ARG1 (c7-3 / person
                  :mod c7-10))

# ::snt this could be a divergence, while other terrorist are roaming Paris and killing people
# ::tokens ["this", "could", "be", "a", "divergence", ",", "while", "other", "terrorist", "are", "roaming", "Paris", "and", "killing", "people"]
# ::lemmas ["this", "could", "be", "a", "divergence", ",", "while", "other", "terrorist", "be", "roam", "Paris", "and", "kill", "people"]
(c8-3 / possible-01
      :ARG1 (c8-5 / differ-02
                  :ARG1 (c8-8 / this))
      :time (c8-10 / and
                   :op1 (c8-4 / roam-01
                              :ARG0 (c8-7 / terrorist
                                          :mod (c8-0 / other))
                              :ARG1 (c8-6 / city
                                          :name (c8-2 / name
                                                      :op1 "Paris")))
                   :op2 (c8-1 / kill-01
                              :ARG0 c8-7
                              :ARG1 (c8-9 / person))))

# ::snt really henius nature
# ::tokens ["really", "henius", "nature"]
# ::lemmas ["really", "henius", "nature"]
(c9-0 / nature
      :mod (c9-1 / henius)
      :ARG1-of (c9-2 / real-04))

# ::snt so sad
# ::tokens ["so", "sad"]
# ::lemmas ["so", "sad"]
(c10-0 / sad-02
       :degree (c10-1 / so))

# ::snt It is, just a few morons tarnish it
# ::tokens ["It", "is", ",", "just", "a", "few", "morons", "tarnish", "it"]
# ::lemmas ["it", "be", ",", "just", "a", "few", "moron", "tarnish", "it"]
(c11-4 / tarnish-01
       :ARG0 (c11-2 / moron
                    :quant (c11-1 / few)
                    :mod (c11-0 / just))
       :ARG1 (c11-3 / it))

# ::snt dont panic everyone, im sure they dont kill civilians
# ::tokens ["do", "nt", "panic", "everyone", ",", "i", "m", "sure", "they", "do", "nt", "kill", "civilians"]
# ::lemmas ["do", "not", "panic", "everyone", ",", "i", "m", "sure", "they", "do", "not", "kill", "civilian"]
(c12-8 / and
       :op1 (c12-3 / panic-01
                   :ARG0 (c12-0 / you)
                   :ARG1 (c12-1 / everyone)
                   :polarity -
                   :mode imperative)
       :op2 (c12-5 / sure-02
                   :ARG0 (c12-2 / i)
                   :ARG1 (c12-7 / kill-01
                                :ARG0 (c12-6 / they)
                                :ARG1 (c12-4 / civilian)
                                :polarity -)))

# ::snt won't hold my breath hasn't got the guts
# ::tokens ["wo", "n't", "hold", "my", "breath", "has", "n't", "got", "the", "guts"]
# ::lemmas ["will", "not", "hold", "my", "breath", "have", "not", "get", "the", "gut"]
(c13-0 / hold-01
       :ARG0 (c13-2 / i)
       :ARG1 (c13-1 / breathe-01
                    :ARG0 c13-2)
       :ARG0-of (c13-3 / cause-01
                       :ARG1 (c13-4 / gut
                                    :polarity -))
       :polarity -)

# ::snt Custom message
# ::tokens ["Custom", "message"]
# ::lemmas ["custom", "message"]
(c14-1 / message-01
       :ARG1-of (c14-0 / custom-02))
