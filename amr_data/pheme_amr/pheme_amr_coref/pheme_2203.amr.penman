# ::snt . &gt;&gt;because it didn't happen.
# ::tokens [".", "&", "gt;&gt;because", "it", "did", "n't", "happen", "."]
# ::lemmas [".", "&", "gt;&gt;because", "it", "do", "not", "happen", "."]
(c1-1 / cause-01
      :ARG0 (c1-0 / have-polarity-91
                  :ARG1 (c1-2 / it)
                  :ARG2 -))

# ::snt Possibly because police did not put two incidents together yet. AND officers who shoot Brown didn't knew this.
# ::tokens ["Possibly", "because", "police", "did", "not", "put", "two", "incidents", "together", "yet", ".", "AND", "officers", "who", "shoot", "Brown", "did", "n't", "knew", "this", "."]
# ::lemmas ["possibly", "because", "police", "do", "not", "put", "two", "incident", "together", "yet", ".", "and", "officer", "who", "shoot", "Brown", "do", "not", "know", "this", "."]
(c2-1 / multi-sentence
      :snt1 (c2-7 / possible-01
                  :ARG1 (c2-8 / cause-01
                              :ARG0 (c2-13 / put-01
                                           :ARG0 (c2-2 / police)
                                           :ARG1 (c2-4 / incident
                                                       :quant 2)
                                           :ARG2 (c2-12 / together)
                                           :time (c2-0 / yet)
                                           :polarity -)))
      :snt2 (c2-14 / and
                   :op1 (c2-5 / know-01
                              :ARG0 (c2-3 / officer
                                          :ARG0-of (c2-10 / shoot-02
                                                          :ARG1 (c2-11 / person
                                                                       :name (c2-6 / name
                                                                                   :op1 "Brown"))))
                              :ARG1 (c2-9 / this)
                              :polarity -)))

# ::snt Ask Obama since it is the FBI in charge of the investigation. Where is Obama right now? Oh yah..golfing.
# ::tokens ["Ask", "Obama", "since", "it", "is", "the", "FBI", "in", "charge", "of", "the", "investigation", ".", "Where", "is", "Obama", "right", "now", "?", "Oh", "yah", "..", "golfing", "."]
# ::lemmas ["ask", "Obama", "since", "it", "be", "the", "FBI", "in", "charge", "of", "the", "investigation", ".", "where", "be", "Obama", "right", "now", "?", "oh", "yah", "..", "golf", "."]
(c3-1 / multi-sentence
      :snt1 (c3-17 / ask-01
                   :ARG0 (c3-0 / you)
                   :ARG2 (c3-8 / person
                               :name (c3-6 / name
                                           :op1 "Obama"))
                   :ARG1-of (c3-10 / cause-01
                                   :ARG0 (c3-9 / charge-05
                                               :ARG0 (c3-11 / government-organization
                                                            :name (c3-7 / name
                                                                        :op1 "FBI"))
                                               :ARG1 (c3-5 / investigate-01)))
                   :mode imperative)
      :snt2 (c3-2 / be-located-at-91
                  :ARG1 (c3-16 / person
                               :name (c3-12 / name
                                            :op1 "Obama"))
                  :ARG2 (c3-4 / amr-unknown)
                  :time (c3-13 / now
                               :mod (c3-14 / right)))
      :snt3 (c3-15 / golf-01
                   :mod (c3-3 / oh
                              :mode expressive)))

# ::snt :X-actly!EACE
# ::tokens [":X", "-", "actly!EACE"]
# ::lemmas [":x", "-", "actly!EACE"]
(c4-0 / exact
      :mode expressive)

# ::snt wondering the same thing.
# ::tokens ["wondering", "the", "same", "thing", "."]
# ::lemmas ["wonder", "the", "same", "thing", "."]
(c5-1 / wonder-01
      :ARG0 (c5-3 / i)
      :ARG1 (c5-2 / thing
                  :ARG1-of (c5-0 / same-01)))

# ::snt so if he was with at the robbery why wasn't he in custody? All media outlets interviewed him before the police
# ::tokens ["so", "if", "he", "was", "with", "at", "the", "robbery", "why", "was", "n't", "he", "in", "custody", "?", "All", "media", "outlets", "interviewed", "him", "before", "the", "police"]
# ::lemmas ["so", "if", "he", "be", "with", "at", "the", "robbery", "why", "be", "not", "he", "in", "custody", "?", "all", "medium", "outlet", "interview", "he", "before", "the", "police"]
(c6-1 / multi-sentence
      :snt1 (c6-0 / have-condition-91
                  :ARG1 (c6-2 / be-located-at-91
                              :ARG1 (c6-14 / he)
                              :ARG2 (c6-9 / custody)
                              :ARG1-of (c6-8 / cause-01
                                             :ARG0 (c6-13 / amr-unknown))
                              :polarity -)
                  :ARG2 (c6-10 / rob-01))
      :snt2 (c6-5 / interview-01
                  :ARG0 (c6-3 / outlet
                              :mod (c6-7 / media)
                              :mod (c6-4 / all))
                  :ARG1 (c6-6 / he)
                  :time (c6-11 / before
                               :op1 (c6-12 / police))))

# ::snt This is why body cams on PIGS DONT WORK! PLEASE RETWEET
# ::tokens ["This", "is", "why", "body", "cams", "on", "PIGS", "DONT", "WORK", "!", "PLEASE", "RETWEET"]
# ::lemmas ["this", "be", "why", "body", "cam", "on", "PIGS", "dont", "work", "!", "PLEASE", "retweet"]
(c7-2 / multi-sentence
      :snt1 (c7-7 / cause-01
                  :ARG0 (c7-9 / this)
                  :ARG1 (c7-0 / work-09
                              :ARG1 (c7-6 / camera
                                          :mod (c7-3 / body)
                                          :medium (c7-5 / product
                                                        :name (c7-4 / name
                                                                    :op1 "PIGS")))
                              :polarity -))
      :snt2 (c7-8 / reply-01
                  :ARG0 (c7-1 / you)
                  :mode imperative
                  :polite +))

# ::snt a billion times this
# ::tokens ["a", "billion", "times", "this"]
# ::lemmas ["a", "billion", "time", "this"]
(c8-0 / times
      :domain (c8-1 / this)
      :quant 1000000000)
