# ::snt I have spoken for several weeks about NSW Police corruption, today in Sydney, this siege, and police laughing at situation.
# ::tokens ["I", "have", "spoken", "for", "several", "weeks", "about", "NSW", "Police", "corruption", ",", "today", "in", "Sydney", ",", "this", "siege", ",", "and", "police", "laughing", "at", "situation", "."]
# ::lemmas ["i", "have", "speak", "for", "several", "weeks", "about", "NSW", "Police", "corruption", ",", "today", "in", "Sydney", ",", "this", "siege", ",", "and", "police", "laugh", "at", "situation", "."]
(c1-15 / speak-01
       :ARG0 (c1-7 / i)
       :ARG1 (c1-17 / and
                    :op1 (c1-12 / corrupt-01
                                :ARG1 (c1-10 / police
                                             :mod (c1-6 / state
                                                        :name (c1-8 / name
                                                                    :op1 "NSW"))))
                    :op2 (c1-4 / be-located-at-91
                               :ARG1 c1-10
                               :ARG2 (c1-11 / city
                                            :name (c1-9 / name
                                                        :op1 "Sydney"))
                               :time (c1-16 / today))
                    :op3 (c1-2 / standoff
                               :mod (c1-14 / this))
                    :op4 (c1-3 / laugh-01
                               :ARG0 c1-10
                               :ARG2 (c1-5 / situation)))
       :duration (c1-0 / several
                       :op1 (c1-13 / temporal-quantity
                                   :unit (c1-1 / week)
                                   :quant 1)))

# ::snt Check These Out
# ::tokens ["Check", "These", "Out"]
# ::lemmas ["check", "these", "out"]
(c2-2 / check-out-05
      :ARG0 (c2-1 / you)
      :ARG1 (c2-0 / this)
      :mode imperative)

# ::snt Then maybe police should make with the terrorist.
# ::tokens ["Then", "maybe", "police", "should", "make", "with", "the", "terrorist", "."]
# ::lemmas ["then", "maybe", "police", "should", "make", "with", "the", "terrorist", "."]
(c3-2 / recommend-01
      :ARG1 (c3-0 / make-06
                  :ARG0 (c3-1 / police)
                  :ARG2 (c3-4 / terrorist))
      :ARG1-of (c3-5 / possible-01)
      :mod (c3-3 / then))

# ::snt For Only $9 You Can Buy K Followers .
# ::tokens ["For", "Only", "$", "9", "You", "Can", "Buy", "K", "Followers", "."]
# ::lemmas ["for", "Only", "$", "9", "you", "can", "buy", "K", "Followers", "."]
(c4-5 / possible-01
      :ARG1 (c4-3 / buy-01
                  :ARG0 (c4-0 / you)
                  :ARG1 (c4-7 / person
                              :ARG0-of (c4-1 / follow-01))
                  :ARG3 (c4-2 / monetary-quantity
                              :unit (c4-6 / dollar)
                              :mod (c4-4 / only)
                              :quant 9)))

# ::snt hummmm
# ::tokens ["hummmm"]
# ::lemmas ["hummmm"]
(c5-0 / hmm
      :mode expressive)

# ::snt Islamic gunman!!
# ::tokens ["Islamic", "gunman", "!", "!"]
# ::lemmas ["Islamic", "gunman", "!", "!"]
(c6-2 / gunman
      :mod (c6-1 / religious-group
                 :name (c6-0 / name
                             :op1 "Islam")))

# ::snt and devices placed around Sydney
# ::tokens ["and", "devices", "placed", "around", "Sydney"]
# ::lemmas ["and", "device", "place", "around", "Sydney"]
(c7-5 / and
      :op2 (c7-3 / device
                 :ARG1-of (c7-2 / place-01
                                :ARG2 (c7-0 / around
                                            :op1 (c7-4 / city
                                                       :name (c7-1 / name
                                                                   :op1 "Sydney"))))))

# ::snt PREVENT THE VIOLENCE ! Author Avail hrs -778-908-2811
# ::tokens ["PREVENT", "THE", "VIOLENCE", "!", "Author", "Avail", "hrs", "-778", "-", "908", "-", "2811"]
# ::lemmas ["prevent", "the", "violence", "!", "author", "Avail", "hrs", "-778", "-", "908", "-", "2811"]
(c8-6 / spoil-01
      :ARG0 (c8-0 / you)
      :ARG1 (c8-2 / innocent-01)
      :ARG1-of (c8-1 / say-01
                     :ARG0 (c8-4 / person
                                 :name (c8-3 / name
                                             :op1 "Avail"
                                             :op2 " hrs")
                                 :ARG0-of (c8-7 / author-01))
                     :time (c8-5 / date-entity
                                 :day 28
                                 :month 9
                                 :year 2008))
      :mode imperative)

# ::snt Possibly. CEO of Lindt said employees and customers.
# ::tokens ["Possibly", ".", "CEO", "of", "Lindt", "said", "employees", "and", "customers", "."]
# ::lemmas ["possibly", ".", "ceo", "of", "Lindt", "say", "employee", "and", "customer", "."]
(c9-2 / multi-sentence
      :snt1 (c9-8 / possible-01)
      :snt2 (c9-12 / say-01
                   :ARG0 (c9-14 / person
                                :ARG0-of (c9-0 / have-org-role-91
                                               :ARG1 (c9-10 / company
                                                            :name (c9-7 / name
                                                                        :op1 "Lindt"))
                                               :ARG2 (c9-5 / officer
                                                           :mod (c9-9 / chief)
                                                           :mod (c9-6 / executive))))
                   :ARG1 (c9-15 / and
                                :op1 (c9-3 / person
                                           :ARG1-of (c9-4 / employ-01))
                                :op2 (c9-13 / person
                                            :ARG0-of (c9-1 / have-rel-role-91
                                                           :ARG1 c9-10
                                                           :ARG2 (c9-11 / customer))))))

# ::snt why are you not covering on air
# ::tokens ["why", "are", "you", "not", "covering", "on", "air"]
# ::lemmas ["why", "be", "you", "not", "cover", "on", "air"]
(c10-3 / cause-01
       :ARG0 (c10-4 / amr-unknown)
       :ARG1 (c10-2 / cover-03
                    :ARG0 (c10-0 / you)
                    :medium (c10-1 / air)
                    :polarity -))

# ::snt I'm concerned he (they) pulled all the emergency response people into one place to injure them in one hit.
# ::tokens ["I", "'m", "concerned", "he", "(", "they", ")", "pulled", "all", "the", "emergency", "response", "people", "into", "one", "place", "to", "injure", "them", "in", "one", "hit", "."]
# ::lemmas ["i", "be", "concerned", "he", "(", "they", ")", "pull", "all", "the", "emergency", "response", "people", "into", "one", "place", "to", "injure", "they", "in", "one", "hit", "."]
(c11-7 / concern-01
       :ARG0 (c11-5 / pull-01
                    :ARG0 (c11-0 / he)
                    :ARG1 (c11-9 / person
                                 :ARG0-of (c11-6 / respond-01
                                                 :ARG1 (c11-3 / emergency))
                                 :mod (c11-10 / all))
                    :ARG2 (c11-2 / place
                                 :quant 1)
                    :purpose (c11-4 / injure-01
                                    :ARG0 c11-0
                                    :ARG1 c11-9
                                    :manner (c11-1 / hit-01
                                                   :ARG0 c11-0
                                                   :ARG1 c11-9
                                                   :quant 1)))
       :ARG1 (c11-8 / i))

# ::snt islamic flag?????????????????????????????????????????????you would LOVE it
# ::tokens ["islamic", "flag?????????????????????????????????????????????you", "would", "LOVE", "it"]
# ::lemmas ["islamic", "flag?????????????????????????????????????????????you", "would", "love", "it"]
(c13-1 / love-01
       :polarity (c13-5 / amr-unknown)
       :ARG0 (c13-0 / you)
       :ARG1 (c13-2 / flag
                    :mod (c13-4 / religious-group
                                :name (c13-3 / name
                                             :op1 "Islam"))))

# ::snt Piece Of Shit Scumbag Gunman must be Destroyed
# ::tokens ["Piece", "Of", "Shit", "Scumbag", "Gunman", "must", "be", "Destroyed"]
# ::lemmas ["Piece", "Of", "Shit", "Scumbag", "Gunman", "must", "be", "Destroyed"]
(c14-1 / obligate-01
       :ARG2 (c14-4 / destroy-01
                    :ARG1 (c14-3 / person
                                 :mod (c14-7 / piece
                                             :mod (c14-6 / shit))
                                 :mod (c14-2 / scumbag)
                                 :ARG0-of (c14-0 / have-org-role-91
                                                 :ARG2 (c14-5 / gunman)))))

# ::snt Confirmed? Including or excluding the one found?
# ::tokens ["Confirmed", "?", "Including", "or", "excluding", "the", "one", "found", "?"]
# ::lemmas ["confirm", "?", "include", "or", "exclude", "the", "one", "find", "?"]
(c15-1 / multi-sentence
       :snt1 (c15-6 / confirm-01)
       :snt2 (c15-3 / or
                    :op1 (c15-5 / include-01
                                :ARG1 (c15-0 / one
                                             :ARG1-of (c15-2 / find-01)))
                    :op2 (c15-4 / exclude-01
                                :ARG1 c15-0)
                    :polarity (c15-7 / amr-unknown)))

# ::snt Spare us the contact with the gunman/men and see how to connect him with a bullet.
# ::tokens ["Spare", "us", "the", "contact", "with", "the", "gunman", "/", "men", "and", "see", "how", "to", "connect", "him", "with", "a", "bullet", "."]
# ::lemmas ["spare", "we", "the", "contact", "with", "the", "gunman", "/", "man", "and", "see", "how", "to", "connect", "he", "with", "a", "bullet", "."]
(c16-11 / and
        :op1 (c16-9 / spare-01
                    :ARG0 (c16-0 / you)
                    :ARG1 (c16-7 / contact-01
                                 :ARG0 (c16-1 / we)
                                 :ARG1 (c16-5 / slash
                                              :op1 (c16-8 / gunman)
                                              :op2 (c16-3 / man)))
                    :ARG2 c16-1
                    :mode imperative)
        :op2 (c16-2 / see-01
                    :ARG0 c16-0
                    :ARG1 (c16-10 / thing
                                  :manner-of (c16-6 / connect-01
                                                    :ARG0 c16-0
                                                    :ARG1 c16-5
                                                    :ARG2 (c16-4 / bullet)))
                    :mode imperative))

# ::snt may the terrorist drown in pig blood... FUCK ISLAM
# ::tokens ["may", "the", "terrorist", "drown", "in", "pig", "blood", "...", "FUCK", "ISLAM"]
# ::lemmas ["may", "the", "terrorist", "drown", "in", "pig", "blood", "...", "fuck", "ISLAM"]
(c17-2 / possible-01
       :ARG1 (c17-3 / drown-02
                    :ARG1 (c17-4 / terrorist)
                    :ARG2 (c17-1 / blood
                                 :source (c17-5 / pig)))
       :mod (c17-0 / fuck
                   :mode expressive))

# ::snt is this live somewhere??
# ::tokens ["is", "this", "live", "somewhere", "?", "?"]
# ::lemmas ["be", "this", "live", "somewhere", "?", "?"]
(c18-1 / live-01
       :polarity (c18-3 / amr-unknown)
       :ARG0 (c18-2 / this)
       :location (c18-0 / somewhere))

# ::snt Katy &amp; Bieber embrace Islam: Bible &amp; NASA embrace Islam: ,
# ::tokens ["Katy", "&", "amp", ";", "Bieber", "embrace", "Islam", ":", "Bible", "&", "amp", ";", "NASA", "embrace", "Islam", ":", ","]
# ::lemmas ["Katy", "&", "amp", ";", "Bieber", "embrace", "Islam", ":", "Bible", "&", "amp", ";", "NASA", "embrace", "Islam", ":", ","]
(c19-13 / and
        :op1 (c19-3 / embrace-01
                    :ARG0 (c19-8 / person
                                 :name (c19-6 / name
                                              :op1 "Bieber"))
                    :ARG1 (c19-9 / religious-group
                                 :name (c19-7 / name
                                              :op1 "Islam")))
        :op2 (c19-2 / embrace-01
                    :ARG0 (c19-4 / and
                                 :op1 (c19-12 / person
                                              :name (c19-10 / name
                                                            :op1 "Bible"))
                                 :op2 (c19-1 / person
                                             :name (c19-11 / name
                                                           :op1 "amp")))
                    :ARG1 c19-9)
        :op3 (c19-0 / embrace-01
                    :ARG0 (c19-5 / research-institute
                                 :name (c19-14 / name
                                               :op1 "NASA"))
                    :ARG1 c19-9))

# ::snt Wait, you reported earlier that there was hostages--Let them know
# ::tokens ["Wait", ",", "you", "reported", "earlier", "that", "there", "was", "hostages", "--", "Let", "them", "know"]
# ::lemmas ["wait", ",", "you", "report", "early", "that", "there", "be", "hostage", "--", "let", "they", "know"]
(c20-4 / multi-sentence
       :snt1 (c20-1 / wait-01
                    :ARG1 (c20-2 / you)
                    :mode imperative)
       :snt2 (c20-7 / report-01
                    :ARG0 (c20-8 / you)
                    :ARG1 (c20-0 / hostage)
                    :time (c20-5 / before))
       :snt3 (c20-3 / let-know-07
                    :ARG0 (c20-6 / you)
                    :ARG1 (c20-9 / they)
                    :mode imperative))

# ::snt 's of Police onsite now, but wonder IF lawfully armed citizens might have prevented or ender this by now, maybe even just one?
# ::tokens ["'s", "of", "Police", "onsite", "now", ",", "but", "wonder", "IF", "lawfully", "armed", "citizens", "might", "have", "prevented", "or", "ender", "this", "by", "now", ",", "maybe", "even", "just", "one", "?"]
# ::lemmas ["be", "of", "Police", "onsite", "now", ",", "but", "wonder", "if", "lawfully", "armed", "citizen", "might", "have", "prevent", "or", "ender", "this", "by", "now", ",", "maybe", "even", "just", "one", "?"]
(c21-21 / contrast-01
        :ARG1 (c21-9 / be-located-at-91
                     :ARG1 (c21-1 / person
                                  :ARG0-of (c21-6 / have-org-role-91
                                                  :ARG1 (c21-4 / police)))
                     :ARG2 (c21-19 / on-site)
                     :time (c21-12 / now))
        :ARG2 (c21-15 / wonder-01
                      :ARG0 c21-1
                      :ARG1 (c21-18 / or
                                    :op1 (c21-8 / possible-01
                                                :ARG1 (c21-14 / prevent-01
                                                              :ARG0 (c21-2 / citizen
                                                                           :ARG1-of (c21-5 / arm-01
                                                                                           :ARG1-of (c21-10 / permit-01
                                                                                                            :ARG0 (c21-7 / law))))
                                                              :ARG1 (c21-22 / this)))
                                    :op2 (c21-3 / possible-01
                                                :ARG1 (c21-11 / end-01
                                                              :ARG0 c21-2
                                                              :ARG1 c21-22)
                                                :time (c21-17 / by
                                                              :op1 (c21-20 / now))))
                      :op2 (c21-13 / possible-01
                                   :ARG1 c21-11
                                   :ARG0 c21-2
                                   :ARG1 c21-22
                                   :mod (c21-0 / just)))
        :polarity (c21-16 / amr-unknown))

# ::snt Hope all the innocent will come out untouched..
# ::tokens ["Hope", "all", "the", "innocent", "will", "come", "out", "untouched", ".."]
# ::lemmas ["hope", "all", "the", "innocent", "will", "come", "out", "untouched", ".."]
(c22-0 / hope-01
       :ARG1 (c22-3 / come-out-09
                    :ARG1 (c22-2 / person
                                 :ARG1-of (c22-1 / innocent-01)
                                 :mod (c22-5 / all))
                    :ARG2 (c22-4 / touch-07
                                 :ARG1 c22-2
                                 :polarity -)))

# ::snt why is saying hostages?
# ::tokens ["why", "is", "saying", "hostages", "?"]
# ::lemmas ["why", "be", "say", "hostage", "?"]
(c23-2 / cause-01
       :ARG0 (c23-3 / amr-unknown)
       :ARG1 (c23-0 / say-01
                    :ARG1 (c23-1 / hostage)))
