comment,amr
rip,"# ::snt rip
(r / rip)"
R.I.P,"# ::snt R.I.P
(p / person
      :name (n / name
            :op1 ""R.I.P.""))"
"RIP, so many people have died because of these plane crashes. The government needs to look into this SERIOUSLY!!","# ::snt RIP, so many people have died because of these plane crashes. The government needs to look into this SERIOUSLY!!
(m / multi-sentence
      :snt1 (r / rest-01
            :ARG1 (y / you)
            :manner (p / peace))
      :snt2 (d / die-01
            :ARG1 (p2 / person
                  :ARG1-of (h / have-quant-91
                        :ARG2 (m2 / many)
                        :ARG3 (s / so)))
            :ARG1-of (c / cause-01
                  :ARG0 (c2 / crash-01
                        :ARG1 (p3 / plane)
                        :mod (t / this))))
      :snt3 (n / need-01
            :mode expressive
            :ARG0 (g / government-organization
                  :ARG0-of (g2 / govern-01))
            :ARG1 (l / look-into-11
                  :ARG0 g
                  :ARG1 (t2 / this)
                  :ARG1-of (s2 / serious-02))))"
just saw this too sad now and I have testing tomorrow,"# ::snt just saw this too sad now and I have testing tomorrow
(a / and
      :op1 (s / see-01
            :ARG0 (ii / i)
            :ARG1 (s2 / sad-02
                  :ARG0 (t / this)
                  :ARG2-of (h / have-degree-91
                        :ARG1 t
                        :ARG3 (t2 / too)))
            :time (n / now)
            :mod (j / just))
      :op2 (t3 / test-01
            :ARG0 ii
            :time (t4 / tomorrow)))"
hope the families are ok and everyone will be paying their respects unless they have no respect for others,"# ::snt hope the families are ok and everyone will be paying their respects unless they have no respect for others
(h / hope-01
      :ARG0 (ii / i)
      :ARG1 (a / and
            :op1 (o / okay-04
                  :ARG1 (f / family))
            :op2 (p / pay-01
                  :ARG0 (e / everyone)
                  :ARG1 (r / respect-01
                        :ARG0 e
                        :ARG1 f)
                  :condition (r2 / respect-01
                        :polarity -
                        :ARG0 e
                        :ARG1 (p2 / person
                              :mod (o2 / other))))))"
,"# ::snt 
(a / amr-empty)"
R.I.P. they didn't deserve that!,"# ::snt R.I.P. they didn't deserve that!
(d / deserve-01
      :polarity -
      :ARG0 (t / they)
      :ARG1 (t2 / that)
      :ARG2-of (p / publication-91
            :ARG4 (p2 / person
                  :name (n / name
                        :op1 ""R.I.P.""))))"
R.I.P,"# ::snt R.I.P
(p / person
      :name (n / name
            :op1 ""R.I.P.""))"
R.I.P,"# ::snt R.I.P
(p / person
      :name (n / name
            :op1 ""R.I.P.""))"
i am from Germany and this is so sad RIP,"# ::snt i am from Germany and this is so sad RIP
(a / and
      :op1 (ii / i
            :source (c / country
                  :name (n / name
                        :op1 ""Germany"")))
      :op2 (s / sad-02
            :ARG0 (t / this)
            :degree (s2 / so))
      :ARG2-of (t2 / thank-01
            :ARG1 (y / you)))"
R.I.P,"# ::snt R.I.P
(p / person
      :name (n / name
            :op1 ""R.I.P.""))"
absolutely crazy I've been flying with germanwings so many times already and to hear those news... Just unbelievable.,"# ::snt absolutely crazy I've been flying with germanwings so many times already and to hear those news... Just unbelievable.
(c / crazy-03
      :ARG1 (a / and
            :op1 (f / fly-01
                  :ARG0 (ii / i)
                  :accompanier (w / wing
                        :mod (c2 / country
                              :name (n / name
                                    :op1 ""Germany"")))
                  :time (a2 / already)
                  :frequency (t / time
                        :ARG1-of (h / have-quant-91
                              :ARG2 (m / many)
                              :ARG3 (s / so))))
            :op2 (h2 / hear-01
                  :ARG0 ii
                  :ARG1 (n2 / news
                        :mod (t2 / that))))
      :degree (a3 / absolute)
      :ARG1-of (b / believe-01
            :ARG1-of (p / possible-01
                  :polarity -)
            :mod (j / just)))"
rip,"# ::snt rip
(r / rip)"
