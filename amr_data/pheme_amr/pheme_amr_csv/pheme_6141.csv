comment,amr
the whole cockpit deal has always been scary...this makes it even more scary...and innocent people are dead...CAMERAS in the cp.,"# ::snt the whole cockpit deal has always been scary...this makes it even more scary...and innocent people are dead...CAMERAS in the cp.
(m / multi-sentence
      :snt1 (s / scary-03
            :ARG0 (d / deal-01
                  :ARG2 (c / cockpit)
                  :mod (w / whole))
            :time (a / always)
            :ARG0-of (m2 / make-02
                  :ARG1 (s2 / scary-03
                        :ARG0 d
                        :mod (e / even)
                        :ARG2-of (h / have-degree-91
                              :ARG1 d
                              :ARG3 (m3 / more)))))
      :snt2 (d2 / die-01
            :ARG1 (p / person
                  :ARG1-of (ii / innocent-01)))
      :snt3 (c2 / car-make
            :location (g / government-organization
                  :name (n / name
                        :op1 ""CIA""))))"
this is the Slateist of all Slate headlines.,"# ::snt this is the Slateist of all Slate headlines.
(p / person
      :ARG0-of (h / have-org-role-91
            :ARG1 (n / newspaper
                  :name (n2 / name
                        :op1 ""Slate""))
            :ARG3 (h2 / headline
                  :mod (a / all)))
      :domain (t / this))"
Are planes that can scan obstructions a mile out/below not possible? Seems like overriding pilot control would not be that difficult?,"# ::snt Are planes that can scan obstructions a mile out/below not possible? Seems like overriding pilot control would not be that difficult?
(m / multi-sentence
      :snt1 (p / possible-01
            :polarity -
            :ARG1 (p2 / plane
                  :ARG0-of (s / scan-01
                        :ARG1 (o / obstruct-01)
                        :ARG1-of (p3 / possible-01)
                        :location (o2 / or
                              :op1 (o3 / out)
                              :op2 (b / below)
                              :quant (d / distance-quantity
                                    :quant 1
                                    :unit (m2 / mile)))))
            :polarity (a / amr-unknown))
      :snt2 (s2 / seem-01
            :ARG1 (d2 / difficult
                  :domain (o4 / override-01
                        :ARG1 (c / control-01
                              :ARG0 (p4 / person
                                    :ARG0-of (p5 / pilot-01))))
                  :degree (t / that
                        :polarity -))))"
This kind of thing might speed the development,"# ::snt This kind of thing might speed the development
(p / possible-01
      :ARG1 (s / speed-01
            :ARG0 (t / thing
                  :mod (k / kind
                        :mod (t2 / this)))
            :ARG1 (d / develop-01)))"
codes enter override. Pilot AND Copilot must act in unison disengage. Backup ground &ampat sigs force safe hover,"# ::snt codes enter override. Pilot AND Copilot must act in unison disengage. Backup ground &ampat sigs force safe hover
(m / multi-sentence
      :snt1 (e / enter-01
            :ARG0 (c / code-01)
            :ARG1 (o / override-01))
      :snt2 (o2 / obligate-01
            :ARG1 (a / and
                  :op1 (p / person
                        :ARG0-of (p2 / pilot-01))
                  :op2 (p3 / person
                        :ARG0-of p2)))
      :ARG2 (a2 / act-02
            :ARG0 a
            :manner (u / unison)
            :manner-of (d / disengage-01
                  :ARG0 a))
      :snt3 (a3 / and
            :op1 (g / ground
                  :ARG1-of (b / backup-01))
            :op2 (s / sig
                  :mod (b2 / big))
            :op3 (h / hover-01
                  :ARG2 (s2 / safe-01))))"
"Yes of course, hand our lives over to robots","# ::snt Yes of course, hand our lives over to robots
(h / hand-over-02
      :mode imperative
      :ARG0 (w / we)
      :ARG1 (l / life
            :poss w)
      :ARG2 (r / robot)
      :mod (o / of-course))"
god shut up.,"# ::snt god shut up.
(s / shut-up-06
      :mode imperative
      :ARG0 (p / person
            :name (n / name
                  :op1 ""God""))
      :ARG1 p)"
