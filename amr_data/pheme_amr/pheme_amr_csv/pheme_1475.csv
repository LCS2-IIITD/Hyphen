comment,amr
Good! No loss whatsoever!,"# ::snt Good! No loss whatsoever!
(m / multi-sentence
      :snt1 (g / good-02)
      :snt2 (l / lose-02
            :polarity -
            :degree (w / whatsoever)))"
just those types,"# ::snt just those types
(t / type
      :mod (t2 / that)
      :mod (j / just))"
Kill of them,"# ::snt Kill of them
(k / kill-01
      :ARG1 (t / they))"
where are their parents? what do they have to say in this? Good riddance to these lowlives.,"# ::snt where are their parents? what do they have to say in this? Good riddance to these lowlives.
(m / multi-sentence
      :snt1 (b / be-located-at-91
            :ARG1 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (t / they)
                        :ARG2 (p2 / parent)))
            :ARG2 (a / amr-unknown))
      :snt2 (o / obligate-01
            :ARG1 (t2 / they)
            :ARG2 (s / say-01
                  :ARG0 t2
                  :ARG1 (a2 / amr-unknown)
                  :topic (t3 / this)))
      :snt3 (r / riddance
            :ARG1-of (g / good-02)
            :beneficiary p
            :ARG1-of (l / low-04)
            :mod (t4 / this)))"
"The scapegoats are dead, what about the terrorists?RTJe suis Charlie","# ::snt The scapegoats are dead, what about the terrorists?RTJe suis Charlie
(a / and
      :op1 (d / die-01
            :ARG1 (p / person
                  :ARG1-of (s / scapegoat-01)))
      :op2 (t / terrorist
            :domain (a2 / amr-unknown))
      :ARG1-of (s2 / say-01
            :ARG0 (p2 / publication
                  :name (n / name
                        :op1 ""RT""))
            :ARG2 p
            :name (n2 / name
                  :op1 ""Je suis""
                  :op2 ""Charlie"")))"
"Local mayor tells suspects, the , both killed.","# ::snt Local mayor tells suspects, the , both killed.
(t / tell-01
      :ARG0 (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG2 (m / mayor))
            :ARG1-of (l / local-02))
      :ARG1 (k / kill-01
            :ARG1 (p2 / person
                  :ARG2-of (s / suspect-01)
                  :mod (b / both))))"
good riddance of the Muslim bastards,"# ::snt good riddance of the Muslim bastards
(r / riddance
      :ARG1-of (g / good-02)
      :poss (b / bastard
            :mod (r2 / religious-group
                  :name (n / name
                        :op1 ""Muslim""))))"
": suspects, the , both killed, local mayor tells CNN.","# ::snt : suspects, the , both killed, local mayor tells CNN.
(t / tell-01
      :ARG0 (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG2 (m / mayor))
            :ARG1-of (l / local-02))
      :ARG1 (k / kill-01
            :ARG1 (a / and
                  :op1 (p2 / person
                        :ARG2-of (s / suspect-01))
                  :op2 (p3 / person
                        :mod (b / both))))
      :ARG2 (p4 / publication
            :name (n / name
                  :op1 ""CNN"")))"
,"# ::snt 
(a / amr-empty)"
": suspects, the , both killed, local mayor tells CNN.","# ::snt : suspects, the , both killed, local mayor tells CNN.
(t / tell-01
      :ARG0 (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG2 (m / mayor))
            :ARG1-of (l / local-02))
      :ARG1 (k / kill-01
            :ARG1 (a / and
                  :op1 (p2 / person
                        :ARG2-of (s / suspect-01))
                  :op2 (p3 / person
                        :mod (b / both))))
      :ARG2 (p4 / publication
            :name (n / name
                  :op1 ""CNN"")))"
": suspects, the , both killed, local mayor tells CNN.","# ::snt : suspects, the , both killed, local mayor tells CNN.
(t / tell-01
      :ARG0 (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG2 (m / mayor))
            :ARG1-of (l / local-02))
      :ARG1 (k / kill-01
            :ARG1 (a / and
                  :op1 (p2 / person
                        :ARG2-of (s / suspect-01))
                  :op2 (p3 / person
                        :mod (b / both))))
      :ARG2 (p4 / publication
            :name (n / name
                  :op1 ""CNN"")))"
hallelujah,"# ::snt hallelujah
(h / hallelujah
      :mode expressive)"
": suspects, the , both killed, local mayor tells CNN.","# ::snt : suspects, the , both killed, local mayor tells CNN.
(t / tell-01
      :ARG0 (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG2 (m / mayor))
            :ARG1-of (l / local-02))
      :ARG1 (k / kill-01
            :ARG1 (a / and
                  :op1 (p2 / person
                        :ARG2-of (s / suspect-01))
                  :op2 (p3 / person
                        :mod (b / both))))
      :ARG2 (p4 / publication
            :name (n / name
                  :op1 ""CNN"")))"
": suspects, the , both killed, local mayor tells CNN.","# ::snt : suspects, the , both killed, local mayor tells CNN.
(t / tell-01
      :ARG0 (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG2 (m / mayor))
            :ARG1-of (l / local-02))
      :ARG1 (k / kill-01
            :ARG1 (a / and
                  :op1 (p2 / person
                        :ARG2-of (s / suspect-01))
                  :op2 (p3 / person
                        :mod (b / both))))
      :ARG2 (p4 / publication
            :name (n / name
                  :op1 ""CNN"")))"
"If you want to understand the evils of religion, any religion, this story is the perfect example.","# ::snt If you want to understand the evils of religion, any religion, this story is the perfect example.
(e / exemplify-01
      :ARG0 (s / story
            :mod (t / this))
      :ARG1-of (p / perfect-02)
      :condition (w / want-01
            :ARG0 (y / you)
            :ARG1 (u / understand-01
                  :ARG0 y
                  :ARG1 (a / and
                        :op1 (e2 / evil
                              :domain (r / religion))
                        :op2 (r2 / religion
                              :mod (a2 / any))))))"
olha a fua desses filhos da puta,"# ::snt olha a fua desses filhos da puta
(f / fua
      :mode expressive
      :mod (p / person
            :name (n / name
                  :op1 ""Jesus""))
      :mod (f2 / filhos
            :mod (d / da)))"
"Terrorists dead. : suspects the , both killed local mayor","# ::snt Terrorists dead. : suspects the , both killed local mayor
(m / multi-sentence
      :snt1 (d / die-01
            :ARG1 (t / terrorist))
      :snt2 (s / suspect-01
            :ARG1 (k / kill-01
                  :ARG0 (b / both)
                  :ARG1 (p / person
                        :ARG0-of (h / have-org-role-91
                              :ARG2 (m2 / mayor))
                        :ARG1-of (l / local-02)))))"
good riddance muslim trash fuck you and mohammed.,"# ::snt good riddance muslim trash fuck you and mohammed.
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (a / and
            :op1 (f / fuck-01
                  :mode expressive
                  :ARG0 (t / trash
                        :mod (r / religious-group
                              :name (n / name
                                    :op1 ""Islam"")))
                  :ARG1 (y / you))
            :op2 (p / person
                  :name (n2 / name
                        :op1 ""Mohammed""))
            :mod (r2 / riddance
                  :ARG1-of (g / good-02)))
      :ARG2 p)"
Good riddance!,"# ::snt Good riddance!
(r / riddance
      :mode expressive
      :ARG1-of (g / good-02))"
lol just hate Muslims Huh ?,"# ::snt lol just hate Muslims Huh ?
(h / hate-01
      :ARG1 (p / person
            :mod (r / religious-group
                  :name (n / name
                        :op1 ""Islam"")))
      :mod (j / just)
      :ARG1-of (r2 / request-confirmation-91)
      :ARG2-of (l / laugh-01
            :mode expressive
            :ARG0 (ii / i)
            :manner (l2 / loud)))"
convenient,"# ::snt convenient
(c / convenient)"
": suspects, the , both killed, local mayor tells CNN.","# ::snt : suspects, the , both killed, local mayor tells CNN.
(t / tell-01
      :ARG0 (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG2 (m / mayor))
            :ARG1-of (l / local-02))
      :ARG1 (k / kill-01
            :ARG1 (a / and
                  :op1 (p2 / person
                        :ARG2-of (s / suspect-01))
                  :op2 (p3 / person
                        :mod (b / both))))
      :ARG2 (p4 / publication
            :name (n / name
                  :op1 ""CNN"")))"
WHOO HOO,"# ::snt WHOO HOO
(w / whoo
      :mode expressive
      :mod (o / only))"
