comment,amr
?,"# ::snt ?
(r / request-confirmation-91)"
"... , , -","# ::snt ... , , -
(a / amr-empty)"
stay strong against barbarism and terror,"# ::snt stay strong against barbarism and terror
(s / stay-01
      :mode imperative
      :ARG1 (y / you)
      :ARG3 (s2 / strong-02
            :ARG1 y
            :ARG0-of (o / oppose-01
                  :ARG1 (a / and
                        :op1 (b / barbarism)
                        :op2 (t / terror)))))"
: Stay Strong Canada.,"# ::snt : Stay Strong Canada.
(s / stay-01
      :mode imperative
      :ARG1 (y / you)
      :ARG3 (s2 / strong-02
            :ARG1 (c / country
                  :name (n / name
                        :op1 ""Canada""))))"
",","# ::snt ,
(a / amr-empty)"
Always and forever,"# ::snt Always and forever
(b / be-temporally-at-91
      :ARG2 (a / and
            :op1 (a2 / always)
            :op2 (f / forever)))"
: Stay Strong Canada. We are with you %,"# ::snt : Stay Strong Canada. We are with you %
(m / multi-sentence
      :snt1 (s / stay-01
            :ARG1 (c / country
                  :name (n / name
                        :op1 ""Canada""))
            :ARG3 (s2 / strong-02
                  :ARG1 c))
      :snt2 (a / accompany-01
            :ARG0 (w / we)
            :ARG1 (y / you)
            :degree (p / percentage-entity)))"
CANADA kick all of them out rids your country of the lot you are not tied to the EU or be like the UK,"# ::snt CANADA kick all of them out rids your country of the lot you are not tied to the EU or be like the UK
(o / or
      :op1 (k / kick-out-05
            :ARG0 (c / country
                  :name (n / name
                        :op1 ""Canada""))
            :ARG1 (t / they
                  :mod (a / all)))
      :op2 (d / ditch-01
            :ARG0 c
            :ARG1 (c2 / country
                  :poss (y / you)
                  :mod (l / lot)
                  :ARG1-of (t2 / tie-01
                        :polarity -
                        :ARG2 (o2 / organization
                              :name (n2 / name
                                    :op1 ""EU"")))))
      :op3 (r / resemble-01
            :ARG1 c2
            :ARG2 (c3 / country
                  :name (n3 / name
                        :op1 ""UK""))))"
