comment,amr
": ""You can't kill satire. You can only prove its point."" --","# ::snt : ""You can't kill satire. You can only prove its point."" --
(m / multi-sentence
      :snt1 (p / possible-01
            :polarity -
            :ARG1 (k / kill-01
                  :ARG0 (y / you)
                  :ARG1 (s / satire)))
      :snt2 (p2 / possible-01
            :ARG1 (p3 / prove-01
                  :ARG0 (y2 / you)
                  :ARG1 (p4 / point-04
                        :ARG0 s)
                  :mod (o / only))))"
": ""You can't kill satire. You can only prove its point."" --","# ::snt : ""You can't kill satire. You can only prove its point."" --
(m / multi-sentence
      :snt1 (p / possible-01
            :polarity -
            :ARG1 (k / kill-01
                  :ARG0 (y / you)
                  :ARG1 (s / satire)))
      :snt2 (p2 / possible-01
            :ARG1 (p3 / prove-01
                  :ARG0 (y2 / you)
                  :ARG1 (p4 / point-04
                        :ARG0 s)
                  :mod (o / only))))"
,"# ::snt 
(a / amr-empty)"
"And you cannot kill ideas either, even those you do not like!","# ::snt And you cannot kill ideas either, even those you do not like!
(a / and
      :op2 (p / possible-01
            :polarity -
            :ARG1 (k / kill-01
                  :ARG0 (y / you)
                  :ARG1 (ii / idea
                        :ARG2-of (ii2 / include-91
                              :ARG1 (ii3 / idea
                                    :ARG1-of (d / dislike-01
                                          :ARG0 y)
                                    :mod (e / even)))))
            :mod (e2 / either)))"
": ""You can't kill satire. You can only prove its point."" --","# ::snt : ""You can't kill satire. You can only prove its point."" --
(m / multi-sentence
      :snt1 (p / possible-01
            :polarity -
            :ARG1 (k / kill-01
                  :ARG0 (y / you)
                  :ARG1 (s / satire)))
      :snt2 (p2 / possible-01
            :ARG1 (p3 / prove-01
                  :ARG0 (y2 / you)
                  :ARG1 (p4 / point-04
                        :ARG0 s)
                  :mod (o / only))))"
screw them,"# ::snt screw them
(s / screw-02
      :ARG1 (t / they))"
