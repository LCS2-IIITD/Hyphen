comment,amr
,"# ::snt 
(a / amr-empty)"
shooting suspects holed up in premises of construction company,"# ::snt shooting suspects holed up in premises of construction company
(h / hole-up-01
      :ARG0 (p / person
            :ARG2-of (s / suspect-01)
            :ARG0-of (s2 / shoot-02))
      :ARG1 (p2 / premise
            :poss (c / company
                  :mod (c2 / construct-01))))"
it is a printing company called CTD.,"# ::snt it is a printing company called CTD.
(c / company
      :name (n / name
            :op1 ""CTD"")
      :ARG0-of (p / print-01)
      :domain (ii / it))"
what are the security forces waiting for? You can't negotiate with mad dog killers.,"# ::snt what are the security forces waiting for? You can't negotiate with mad dog killers.
(m / multi-sentence
      :snt1 (w / wait-01
            :ARG1 (f / force
                  :mod (s / security))
            :ARG2 (a / amr-unknown))
      :snt2 (p / possible-01
            :polarity -
            :ARG1 (n / negotiate-01
                  :ARG0 (y / you)
                  :ARG1 (p2 / person
                        :ARG0-of (k / kill-01
                              :ARG1 (d / dog))
                        :ARG1-of (m2 / mad-02)))))"
!!!Ka Recep[] ka geliyorlar!,"# ::snt !!!Ka Recep[] ka geliyorlar!
(t / thing
      :mode expressive
      :name (n / name
            :op1 ""Ka""
            :op2 "" Recep[]""))"
"a c'est des mecs, merci les gars et faites super gaffe vouson pense vous en ce moment","# ::snt a c'est des mecs, merci les gars et faites super gaffe vouson pense vous en ce moment
(m / multi-sentence
      :snt1 (h / have-polarity-91
            :ARG2 -
            :ARG1 (a / amr-unknown))
      :snt2 (a2 / and
            :op1 (m2 / merci-01
                  :ARG1 (a3 / and
                        :op1 (g / gaffe
                              :mod (s / super))
                        :op2 (g2 / gaffe
                              :mod s)))
            :op2 (e / et
                  :op1 (g3 / gaffe
                        :mod s)
                  :op2 (g4 / gaffe
                        :mod s)))
      :snt3 (p / pense-01
            :ARG1 (a4 / amr-unknown)
            :mod (m3 / moment)))"
the guy on the left isn't touching the ground o.o,"# ::snt the guy on the left isn't touching the ground o.o
(t / touch-01
      :polarity -
      :ARG0 (g / guy
            :ARG1-of (l / left-19))
      :ARG1 (g2 / ground)
      :mod (o / o.o))"
