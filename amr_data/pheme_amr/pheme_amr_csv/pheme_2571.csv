comment,amr
it was a coffee shop,"# ::snt it was a coffee shop
(s / shop
      :mod (c / coffee)
      :domain (ii / it))"
"uhh im not sure, maybe try searching it?? im sorry i dont know much about it","# ::snt uhh im not sure, maybe try searching it?? im sorry i dont know much about it
(m / multi-sentence
      :snt1 (s / sure-02
            :polarity -
            :ARG0 (ii / i)
            :mod (u / uhh))
      :snt2 (p / possible-01
            :polarity (a / amr-unknown)
            :ARG1 (t / try-01
                  :ARG0 (y / you)
                  :ARG1 (s2 / search-01
                        :ARG0 y
                        :ARG1 (ii2 / it))))
      :snt3 (s3 / sorry-01
            :ARG1 (ii3 / i)
            :ARG2 (k / know-01
                  :polarity -
                  :ARG0 ii3
                  :ARG1 (m2 / much
                        :topic (ii4 / it)))))"
Katy &amp; Bieber embrace Islam: Bible &amp; NASA embrace Islam: .,"# ::snt Katy &amp; Bieber embrace Islam: Bible &amp; NASA embrace Islam: .
(a / and
      :op1 (e / embrace-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Bieber""))
            :ARG1 (r / religious-group
                  :name (n2 / name
                        :op1 ""Islam"")))
      :op2 (e2 / embrace-01
            :ARG0 (r2 / research-institute
                  :name (n3 / name
                        :op1 ""Bible""))
            :ARG1 r)
      :op3 (e3 / embrace-01
            :ARG0 r2
            :name (n4 / name
                  :op1 ""NASA""))
      :ARG1 r)"
"hostages at a cafe, i hope they'll be alright D","# ::snt hostages at a cafe, i hope they'll be alright D
(h / hope-01
      :ARG0 (ii / i)
      :ARG1 (a / all-right
            :domain (p / person
                  :ARG0-of (h2 / host-01
                        :location (c / cafe))))
      :mod (e / emoticon
            :value ""D""))"
:plus that's where they'll stay when they are in sac,"# ::snt :plus that's where they'll stay when they are in sac
(a / and
      :op2 (t / that
            :location-of (s / stay-01
                  :ARG1 (t2 / they)
                  :time (b / be-located-at-91
                        :ARG1 t2
                        :ARG2 (s2 / sac)))))"
its so scary my thoughts go to the hostages,"# ::snt its so scary my thoughts go to the hostages
(s / scary-03
      :ARG0 (g / go-01
            :ARG1 (t / think-01
                  :ARG0 (ii / i))
            :ARG4 (h / hostage))
      :degree (s2 / so))"
What happened?,"# ::snt What happened?
(e / event
      :polarity (a / amr-unknown))"
"*extremist, there's only on guy so it seems. And yeah it's awful","# ::snt *extremist, there's only on guy so it seems. And yeah it's awful
(m / multi-sentence
      :snt1 (s / seem-01
            :ARG1 (o / on-01
                  :ARG1 (g / guy)
                  :mod (o2 / only))
            :mod (e / extreme))
      :snt2 (a / and
            :op2 (a2 / awful
                  :domain (ii / it)
                  :mod (y / yeah))))"
what happened?,"# ::snt what happened?
(e / event
      :polarity (a / amr-unknown))"
omg D,"# ::snt omg D
(o / opine-01
      :ARG0 (ii / i)
      :mod (d / dumb))"
:what happened,"# ::snt :what happened
(e / event)"
ya that's why I was curious because hopefully they still film some in sacramento,"# ::snt ya that's why I was curious because hopefully they still film some in sacramento
(c / cause-01
      :ARG0 (t / that)
      :ARG1 (c2 / curious-01
            :ARG1 (ii / i)
            :ARG1-of (c3 / cause-01
                  :ARG0 (h / hope-01
                        :ARG1 (f / film-01
                              :ARG0 (t2 / they)
                              :ARG1 (s / some)
                              :time (s2 / sacramento)
                              :mod (s3 / still))))))"
Wow that's terrible.. I wish the best for them seriously :/,"# ::snt Wow that's terrible.. I wish the best for them seriously :/
(m / multi-sentence
      :snt1 (t / terrible-01
            :ARG1 (t2 / that)
            :mod (w / wow
                  :mode expressive))
      :snt2 (w2 / wish-01
            :ARG0 (ii / i)
            :ARG1 (t3 / thing
                  :ARG1-of (g / good-02
                        :ARG2-of (h / have-degree-91
                              :ARG1 t3
                              :ARG3 (m2 / most))))
            :ARG2 (t4 / they)
            :ARG2-of (s / serious-01)))"
Why are you so cute and nice anD UGH,"# ::snt Why are you so cute and nice anD UGH
(a / ask-01
      :ARG0 (ii / i)
      :ARG1 (c / cause-01
            :ARG0 (a2 / amr-unknown)
            :ARG1 (a3 / and
                  :op1 (c2 / cute
                        :domain (y / you)
                        :degree (s / so))
                  :op2 (n / nice-01
                        :ARG1 y
                        :degree (s2 / so)))
            :mod (u / urgh
                  :mode expressive))
      :ARG2 y)"
yeah thats what i heard or at least something like that,"# ::snt yeah thats what i heard or at least something like that
(o / or
      :op1 (h / hear-01
            :ARG0 (ii / i)
            :ARG1 (t / that))
      :op2 (s / something
            :ARG1-of (r / resemble-01
                  :ARG2 t)
            :mod (a / at-least))
      :mod (y / yeah
            :mode expressive))"
ok tru,"# ::snt ok tru
(o / okay-04)"
thanks ian.,"# ::snt thanks ian.
(t / thank-01
      :ARG0 (ii / i)
      :ARG1 (p / person
            :name (n / name
                  :op1 ""ian"")))"
"because la is closer to basically everything and he won't have to keep going back and forth, I'm assuming he's getting his own","# ::snt because la is closer to basically everything and he won't have to keep going back and forth, I'm assuming he's getting his own
(a / assume-02
      :ARG0 (ii / i)
      :ARG1 (g / get-01
            :ARG0 (h / he)
            :ARG1 (t / thing
                  :poss h))
      :ARG1-of (c / cause-01
            :ARG0 (a2 / and
                  :op1 (c2 / close-10
                        :ARG1 (p / person
                              :name (n / name
                                    :op1 ""la""))
                        :ARG2 (e / everything
                              :mod (b / basic))
                        :ARG2-of (h2 / have-degree-91
                              :ARG1 p
                              :ARG3 (m / more)))
                  :op2 (o / obligate-01
                        :polarity -
                        :ARG1 h
                        :ARG2 (k / keep-02
                              :ARG0 h
                              :ARG1 (g2 / go-02
                                    :ARG0 h
                                    :path (a3 / and
                                          :op1 (b2 / back)
                                          :op2 (f / forth))))))))"
What is going on?,"# ::snt What is going on?
(a / amr-unknown
      :mod (e / event))"
lindt cafe yeah,"# ::snt lindt cafe yeah
(c / cafe
      :name (n / name
            :op1 ""Lindt""
            :op2 "" cafe"")
      :mod (y / yeah
            :mode expressive))"
oh,"# ::snt oh
(o / oh
      :mode expressive)"
"no longer will I live near him, will they keep the smosh house?","# ::snt no longer will I live near him, will they keep the smosh house?
(a / and
      :op1 (l / live-01
            :ARG0 (ii / i)
            :ARG1-of (n / near-02
                  :ARG2 (h / he))
            :time (n2 / no-longer))
      :op2 (k / keep-01
            :ARG0 (t / they)
            :ARG1 (h2 / house
                  :mod (s / smosh))
            :polarity (a2 / amr-unknown)))"
OMG BABE I LIVE IN SYDNEY its soo scary,"# ::snt OMG BABE I LIVE IN SYDNEY its soo scary
(s / scary-03
      :ARG0 (l / live-01
            :ARG0 (ii / i)
            :location (c / city
                  :name (n / name
                        :op1 ""Sydney"")))
      :degree (s2 / so)
      :mod (o / oh-my-god
            :mode expressive))"
he's moving to la,"# ::snt he's moving to la
(m / move-01
      :ARG0 (h / he)
      :ARG2 (c / city
            :name (n / name
                  :op1 ""la"")))"
yeah no problem! &lt;3,"# ::snt yeah no problem! &lt;3
(p / problem
      :polarity -
      :mod (y / yeah
            :mode expressive))"
there is a siege and a Muslim I think has around people hostage in a cafe :3 and he is armed with a shotgun,"# ::snt there is a siege and a Muslim I think has around people hostage in a cafe :3 and he is armed with a shotgun
(a / and
      :op1 (a2 / and
            :op1 (s / siege-01)
            :op2 (h / hold-01
                  :ARG0 (p / person
                        :mod (r / religious-group
                              :name (n / name
                                    :op1 ""Muslim"")))
                  :ARG1 (p2 / person
                        :location (c / cafe))
                  :ARG3 (h2 / hostage)
                  :ARG1-of (t / think-01
                        :ARG0 (ii / i))))
      :op2 (a3 / arm-01
            :ARG1 (h3 / he)
            :ARG2 (s2 / shotgun)))"
who's in Sydney?,"# ::snt who's in Sydney?
(c / city
      :name (n / name
            :op1 ""Sydney"")
      :location-of (a / amr-unknown))"
there's this terrorist siege and they're holding a number of hostages in this cafe in Central Sydney :/,"# ::snt there's this terrorist siege and they're holding a number of hostages in this cafe in Central Sydney :/
(a / and
      :op1 (s / siege-01
            :ARG0 (t / terrorist)
            :mod (t2 / this))
      :op2 (h / hold-01
            :ARG0 t
            :ARG1 (h2 / hostage
                  :quant (n / number))
            :location (c / cafe
                  :mod (t3 / this)
                  :location (l / local-region
                        :name (n2 / name
                              :op1 ""Central""
                              :op2 ""Sydney"")))))"
there are about people being held hostage in a shop by religious extremists. The surrounding towns are in lockdown,"# ::snt there are about people being held hostage in a shop by religious extremists. The surrounding towns are in lockdown
(m / multi-sentence
      :snt1 (a / about
            :op1 (h / hold-01
                  :ARG0 (e / extremist
                        :mod (r / religious))
                  :ARG1 (h2 / hostage)
                  :location (s / shop)))
      :snt2 (l / lock-down-05
            :ARG1 (t / town
                  :ARG1-of (s2 / surround-01))))"
a gunman had hostages in a coffee shop for hours,"# ::snt a gunman had hostages in a coffee shop for hours
(h / have-03
      :ARG0 (g / gunman)
      :ARG1 (h2 / hostage)
      :location (s / shop
            :mod (c / coffee))
      :duration (m / multiple
            :op1 (t / temporal-quantity
                  :quant 1
                  :unit (h3 / hour))))"
people are being held hostage in a candy shop or smthing,"# ::snt people are being held hostage in a candy shop or smthing
(h / hold-01
      :ARG1 (h2 / hostage
            :domain (p / person))
      :location (o / or
            :op1 (s / shop
                  :mod (c / candy))
            :op2 (s2 / smthing)))"
what's happened_?,"# ::snt what's happened_?
(e / event
      :mod (a / amr-unknown))"
D,"# ::snt D
(e / emoticon
      :value ""D"")"
:ian are you moving out of sacramento,"# ::snt :ian are you moving out of sacramento
(s / say-01
      :ARG1 (m / move-01
            :ARG0 (y / you)
            :ARG2 (o / out-06
                  :ARG2 (s2 / sacramento))
            :polarity (a / amr-unknown))
      :ARG2 (p / person
            :name (n / name
                  :op1 ""Christian"")))"
there is a siege happening right now,"# ::snt there is a siege happening right now
(s / siege-01
      :time (n / now
            :mod (r / right)))"
wait are you serious omg,"# ::snt wait are you serious omg
(w / wait-01
      :ARG1 (s / serious-01
            :ARG1 (y / you))
      :mod (o / omg
            :mode expressive))"
Makes sense. When and where did he announce it?,"# ::snt Makes sense. When and where did he announce it?
(m / multi-sentence
      :snt1 (s / sense-02)
      :snt2 (a / announce-01
            :ARG0 (h / he)
            :ARG1 (ii / it)
            :time (a2 / and
                  :op1 (a3 / amr-unknown)
                  :op2 (a4 / amr-unknown))
            :time (t / then)))"
"don't apologize, you didn't do anything to me but thank you anyways","# ::snt don't apologize, you didn't do anything to me but thank you anyways
(a / and
      :op1 (a2 / apologize-01
            :polarity -
            :mode imperative
            :ARG0 (y / you))
      :op2 (c / contrast-01
            :ARG1 (d / do-02
                  :polarity -
                  :ARG0 y
                  :ARG1 (a3 / anything)
                  :ARG2 (ii / i))
            :ARG2 (t / thank-01
                  :ARG0 ii
                  :ARG1 y
                  :mod (a4 / anyways))))"
How do you know he's moving to LA. Also is he getting his own place or a place with Anthony? Plz let me know D,"# ::snt How do you know he's moving to LA. Also is he getting his own place or a place with Anthony? Plz let me know D
(m / multi-sentence
      :snt1 (k / know-01
            :ARG0 (y / you)
            :ARG1 (m2 / move-01
                  :ARG0 (h / he)
                  :ARG2 (c / city
                        :name (n / name
                              :op1 ""LA"")))
            :manner (a / amr-unknown))
      :snt2 (g / get-01
            :ARG0 (h2 / he)
            :ARG1 (o / or
                  :op1 (p / place
                        :poss h2)
                  :op2 (p2 / place
                        :poss h2))
            :ARG4 (p3 / person
                  :name (n2 / name
                        :op1 ""Anthony""))
            :mod (a2 / also)
            :polarity (a3 / amr-unknown))
      :snt3 (l / let-know-07
            :mode imperative
            :polite +
            :ARG0 (y2 / you)
            :ARG1 (ii / i)
            :ARG2 p3
            :name (n3 / name
                  :op1 ""D"")))"
:thanks babe,"# ::snt :thanks babe
(s / say-01
      :ARG1 (t / thank-01)
      :ARG2 (b / babe))"
that's horrible,"# ::snt that's horrible
(h / horrible
      :domain (t / that))"
ily,"# ::snt ily
(p / person
      :name (n / name
            :op1 ""ily""))"
are you from Sydney? Be safe as well!!,"# ::snt are you from Sydney? Be safe as well!!
(m / multi-sentence
      :snt1 (y / you
            :source (c / city
                  :name (n / name
                        :op1 ""Sydney""))
            :polarity (a / amr-unknown))
      :snt2 (s / safe-01
            :mode imperative
            :ARG1 y)
      :mod (a2 / as-well))"
I'm just glad it's over and that guy in hell where he belongs,"# ::snt I'm just glad it's over and that guy in hell where he belongs
(g / glad-02
      :ARG0 (a / and
            :op1 (o / over-01
                  :ARG1 (ii / it))
            :op2 (g2 / guy
                  :mod (t / that)
                  :location (h / hell)
                  :ARG1-of (b / belong-01)
                  :ARG0-of b))
      :ARG1 (ii2 / i)
      :mod (j / just))"
(,"# ::snt (
(a / amr-empty)"
:yeah. they haven't lived in the Smosh house for nearly years. They need it to film.,"# ::snt :yeah. they haven't lived in the Smosh house for nearly years. They need it to film.
(m / multi-sentence
      :snt1 (y / yeah
            :mode expressive)
      :snt2 (l / live-01
            :polarity -
            :ARG0 (t / they)
            :location (h / house
                  :poss (p / person
                        :name (n / name
                              :op1 ""Smosh"")))
            :duration (n2 / nearly
                  :op1 (t2 / temporal-quantity
                        :quant 1
                        :unit (y2 / year))))
      :snt3 (n3 / need-01
            :ARG0 (t3 / they)
            :ARG1 (f / film-01
                  :ARG0 t3
                  :ARG1 (ii / it))))"
omg best wishes stay safe good luck,"# ::snt omg best wishes stay safe good luck
(s / stay-01
      :ARG1 (w / wish-01
            :ARG1 (l / luck
                  :ARG1-of (g / good-02))
            :ARG1-of (h / have-degree-91
                  :ARG2 (g2 / good-02
                        :ARG1 w)
                  :ARG3 (m / most)))
      :ARG3 (s2 / safe-01
            :ARG1 (p / person))
      :mod (o / oh-my-god
            :mode expressive))"
do we know why?,"# ::snt do we know why?
(k / know-01
      :polarity (a / amr-unknown)
      :ARG0 (w / we)
      :ARG1 (t / thing
            :ARG0-of (c / cause-01)))"
