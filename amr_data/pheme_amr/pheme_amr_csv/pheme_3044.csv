comment,amr
Just praying for the people's safety in France!! world global news,"# ::snt Just praying for the people's safety in France!! world global news
(m / multi-sentence
      :snt1 (p / pray-01
            :mode expressive
            :ARG0 (ii / i)
            :ARG1 (s / safe-01
                  :ARG1 (p2 / person)
                  :location (c / country
                        :name (n / name
                              :op1 ""France"")))
            :mod (j / just))
      :snt2 (n2 / news
            :mod (g / globe)
            :mod (w / world)))"
Vive Uderzo!,"# ::snt Vive Uderzo!
(p / person
      :mode expressive
      :name (n / name
            :op1 ""Vive""
            :op2 ""Uderzo""))"
": y.o French cartoonist Uderzo, creator of Asterix, comes out of retirement for","# ::snt : y.o French cartoonist Uderzo, creator of Asterix, comes out of retirement for
(c / come-out-09
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Uderzo"")
            :mod (c2 / cartoon)
            :mod (c3 / country
                  :name (n2 / name
                        :op1 ""France""))
            :ARG0-of (c4 / create-01
                  :ARG1 (p2 / product
                        :name (n3 / name
                              :op1 ""Asterix""))))
      :ARG1 (r / retire-01
            :ARG0 p))"
Where is Gosciny?,"# ::snt Where is Gosciny?
(p / person
      :name (n / name
            :op1 ""Gosciny"")
      :location (a / amr-unknown))"
: y.o French cartoonist Uderzo comes out of retirement for (H/T ),"# ::snt : y.o French cartoonist Uderzo comes out of retirement for (H/T )
(c / come-out-09
      :ARG0 (c2 / cartoonist
            :name (n / name
                  :op1 ""Uderzo"")
            :mod (c3 / country
                  :name (n2 / name
                        :op1 ""France"")))
      :ARG1 (r / retire-01
            :ARG0 c2)
      :ARG1-of (c4 / cause-01
            :ARG0 (p / publication
                  :name (n3 / name
                        :op1 ""H/T""))))"
:Brilliant!,"# ::snt :Brilliant!
(b / brilliant-01)"
That Asterix!,"# ::snt That Asterix!
(s / say-01
      :ARG1 (t / that)
      :ARG2 (p / person
            :name (n / name
                  :op1 ""Asterix"")))"
NOW WE ARE TALKING!,"# ::snt NOW WE ARE TALKING!
(t / talk-01
      :mode expressive
      :ARG0 (w / we)
      :time (n / now))"
dead AFAIK.,"# ::snt dead AFAIK.
(p / person
      :name (n / name
            :op1 ""AFAIK"")
      :ARG1-of (d / die-01))"
Asterix r0x,"# ::snt Asterix r0x
(p / person
      :name (n / name
            :op1 ""Asterix""
            :op2 ""r0x""))"
,"# ::snt 
(a / amr-empty)"
I don't see mohammed. Therefore he isn't Charlie.,"# ::snt I don't see mohammed. Therefore he isn't Charlie.
(m / multi-sentence
      :snt1 (s / see-01
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""Mohammed"")))
      :snt2 (c / cause-01
            :ARG1 p
            :polarity -
            :name (n2 / name
                  :op1 ""Charlie"")
            :domain (h / he)))"
": Cartoonist Uderzo, , creator of Asterix, comes out of retirement to say I'm Charlie too","# ::snt : Cartoonist Uderzo, , creator of Asterix, comes out of retirement to say I'm Charlie too
(c / come-out-09
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Uderzo"")
            :ARG0-of (c2 / create-01
                  :ARG1 (p2 / product
                        :name (n2 / name
                              :op1 ""Asterix""))))
      :ARG1 (r / retire-01
            :ARG0 p)
      :purpose (s / say-01
            :ARG0 p
            :ARG1 (p3 / person
                  :name (n3 / name
                        :op1 ""Charlie"")
                  :domain (ii / i)
                  :mod (t / too))))"
"I'm not sure who that character is, but he's like a Roman/Greek version of Yosemite Sam.","# ::snt I'm not sure who that character is, but he's like a Roman/Greek version of Yosemite Sam.
(c / contrast-01
      :ARG1 (s / sure-02
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (c2 / character
                  :mod (t / that)))
      :ARG2 (r / resemble-01
            :ARG1 c2
            :ARG2 (v / version
                  :mod (s2 / slash
                        :op1 (c3 / country
                              :name (n / name
                                    :op1 ""Romania""))
                        :op2 (c4 / country
                              :name (n2 / name
                                    :op1 ""Greece"")))
                  :mod (p / park
                        :name (n3 / name
                              :op1 ""Yosemite""
                              :op2 ""Sam"")))))"
bless him! All decent hearts are with Free France now! Vive liberte!,"# ::snt bless him! All decent hearts are with Free France now! Vive liberte!
(m / multi-sentence
      :snt1 (b / bless-01
            :ARG1 (h / he))
      :snt2 (b2 / be-with-10
            :ARG0 (h2 / heart
                  :mod (d / decent)
                  :mod (a / all))
            :ARG1 (c / country
                  :name (n / name
                        :op1 ""France"")
                  :ARG1-of (f / free-04))
            :time (n2 / now))
      :snt3 (v / vive-01
            :mode expressive
            :ARG1 (p / person
                  :ARG1-of (l / liberal-02))))"
Loved these books so much when I was a child. Vive France.,"# ::snt Loved these books so much when I was a child. Vive France.
(m / multi-sentence
      :snt1 (l / love-01
            :ARG0 (ii / i)
            :ARG1 (b / book
                  :mod (t / this))
            :time (c / child
                  :domain ii)
            :ARG1-of (h / have-quant-91
                  :ARG2 (m2 / much)
                  :ARG3 (s / so)))
      :snt2 (w / work-of-art
            :name (n / name
                  :op1 ""Vive""
                  :op2 ""France"")))"
so the reaction should be both Gaulist and violent?,"# ::snt so the reaction should be both Gaulist and violent?
(ii / infer-01
      :ARG1 (r / recommend-01
            :ARG1 (r2 / react-01
                  :ARG2 (a / and
                        :op1 (p / person
                              :mod (p2 / political-party
                                    :name (n / name
                                          :op1 ""G Gaulism"")))
                        :op2 (p3 / person
                              :mod (v / violent))
                        :mod (b / both)))
            :polarity (a2 / amr-unknown)))"
"les babouches, c'est pour signifier que c'est un arabe ?","# ::snt les babouches, c'est pour signifier que c'est un arabe ?
(a / ask-01
      :ARG0 (ii / i)
      :ARG1 (p / pour-02
            :ARG1 (p2 / person
                  :ARG0-of (s / sign-01
                        :ARG1 (a2 / amr-unknown)
                        :ARG0-of (c / cause-01
                              :ARG1 (h / have-mod-91
                                    :polarity -
                                    :ARG1 p2
                                    :ARG2 (a3 / arabe)))))
            :ARG3 (b / babouch)
            :polarity a2)
      :ARG2 b)"
it's ok. Astrix and Obelix live in all our childhoods.,"# ::snt it's ok. Astrix and Obelix live in all our childhoods.
(m / multi-sentence
      :snt1 (o / okay-04
            :ARG1 (ii / it))
      :snt2 (l / live-01
            :ARG0 (a / and
                  :op1 (p / person
                        :name (n / name
                              :op1 ""Astrix""))
                  :op2 (p2 / person
                        :name (n2 / name
                              :op1 ""Obelix"")))
            :time (c / childhood
                  :mod (a2 / all)
                  :poss (w / we))))"
