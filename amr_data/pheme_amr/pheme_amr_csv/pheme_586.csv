comment,amr
is that terrorist killed ?,"# ::snt is that terrorist killed ?
(k / kill-01
      :polarity (a / amr-unknown)
      :ARG1 (t / terrorist
            :mod (t2 / that)))"
Yes,"# ::snt Yes
(y / yes)"
,"# ::snt 
(a / amr-empty)"
",","# ::snt ,
(a / amr-empty)"
is that a juggernaut,"# ::snt is that a juggernaut
(j / juggernaut
      :domain (t / that))"
Did they kill the bastard?,"# ::snt Did they kill the bastard?
(k / kill-01
      :polarity (a / amr-unknown)
      :ARG0 (t / they)
      :ARG1 (b / bastard))"
what an arsehole comment to make. Showing your intelligence there mate,"# ::snt what an arsehole comment to make. Showing your intelligence there mate
(m / multi-sentence
      :snt1 (c / comment-01
            :ARG1-of (m2 / make-02)
            :mod (a / arsehole
                  :degree (s / so)))
      :snt2 (s2 / show-01
            :mode imperative
            :ARG0 (m3 / mate)
            :ARG1 (ii / intelligent-01
                  :ARG1 m3)
            :ARG2 m3))"
EOD (bomb disposal),"# ::snt EOD (bomb disposal)
(o / OD
      :ARG1-of (m / mean-01
            :ARG2 (d / disposal-04
                  :ARG1 (b / bomb))))"
How can a cameraman grab a perfect shot of the guy but not a SWAT team member? Rob O'Neill salivating at that look.,"# ::snt How can a cameraman grab a perfect shot of the guy but not a SWAT team member? Rob O'Neill salivating at that look.
(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (g / grab-01
                  :ARG0 (c / cameraman)
                  :ARG1 (s / shoot-01
                        :ARG0 c
                        :ARG1 (g2 / guy)
                        :ARG1-of (p2 / perfect-02))
                  :ARG1-of (c2 / contrast-01
                        :ARG2 (p3 / person
                              :polarity -
                              :ARG0-of (h / have-org-role-91
                                    :ARG1 (t / team
                                          :purpose (a / and
                                                :op1 (w / weapon)
                                                :op2 (t2 / tactic)))
                                    :ARG2 (m2 / member)))))
            :manner (a2 / amr-unknown))
      :snt2 (s2 / salivate-01
            :ARG0 (l / look-02
                  :ARG0 p3
                  :name (n / name
                        :op1 ""Rob""
                        :op2 ""O'Neill""))
            :ARG1 (t3 / that)))"
,"# ::snt 
(a / amr-empty)"
", , !","# ::snt , , !
(t / thing
      :mode expressive)"
"My god they have a juggernaut there, hope everyone is ok.","# ::snt My god they have a juggernaut there, hope everyone is ok.
(m / multi-sentence
      :snt1 (h / have-03
            :ARG0 (t / they)
            :ARG1 (j / juggernaut)
            :location (t2 / there)
            :mod (g / god
                  :mode expressive
                  :poss (ii / i)))
      :snt2 (h2 / hope-01
            :ARG0 ii
            :ARG1 (o / okay-03
                  :ARG1 (e / everyone))))"
incredible! Watching now,"# ::snt incredible! Watching now
(m / multi-sentence
      :snt1 (ii / incredible
            :mode expressive)
      :snt2 (w / watch-01
            :time (n / now)))"
hope he's dead,"# ::snt hope he's dead
(h / hope-01
      :ARG0 (ii / i)
      :ARG1 (d / die-01
            :ARG1 (h2 / he)))"
watch here,"# ::snt watch here
(w / watch-01
      :mode imperative
      :ARG0 (y / you)
      :location (h / here))"
am I the only one thinks this is all bollocks to create islamophobia and other things?,"# ::snt am I the only one thinks this is all bollocks to create islamophobia and other things?
(t / think-01
      :polarity (a / amr-unknown)
      :ARG0 (ii / i
            :mod (o / only))
      :ARG1 (b / bollock
            :domain (t2 / this)
            :mod (a2 / all)
            :purpose (c / create-01
                  :ARG1 (a3 / and
                        :op1 (o2 / ophobia)
                        :op2 (t3 / thing
                              :mod (o3 / other))))))"
is it over ?,"# ::snt is it over ?
(o / over-01
      :polarity (a / amr-unknown)
      :ARG1 (ii / it))"
not sure. I think so,"# ::snt not sure. I think so
(m / multi-sentence
      :snt1 (s / sure-02
            :polarity -
            :ARG0 (ii / i))
      :snt2 (t / think-01
            :ARG0 (ii2 / i)
            :ARG1 (s2 / so)))"
