comment,amr
: Just went past hours since this started. We are thinking of the hostages and their families at this time.,"# ::snt : Just went past hours since this started. We are thinking of the hostages and their families at this time.
(m / multi-sentence
      :snt1 (g / go-01
            :ARG1 (t / this)
            :ARG2 (m2 / multiple
                  :op1 (t2 / temporal-quantity
                        :quant 1
                        :unit (h / hour)))
            :time (s / since
                  :op1 (s2 / start-01
                        :ARG1 (t3 / this)))
            :mod (j / just))
      :snt2 (t4 / think-01
            :ARG0 (w / we)
            :ARG1 (a / and
                  :op1 (h2 / hostage)
                  :op2 (f / family
                        :poss h2))
            :time (t5 / this)))"
it's horrible,"# ::snt it's horrible
(h / horrible
      :domain (ii / it))"
: Just went past hours since this started. We are thinking of the hostages and their families at this time.,"# ::snt : Just went past hours since this started. We are thinking of the hostages and their families at this time.
(m / multi-sentence
      :snt1 (g / go-01
            :ARG1 (t / this)
            :ARG2 (m2 / multiple
                  :op1 (t2 / temporal-quantity
                        :quant 1
                        :unit (h / hour)))
            :time (s / since
                  :op1 (s2 / start-01
                        :ARG1 (t3 / this)))
            :mod (j / just))
      :snt2 (t4 / think-01
            :ARG0 (w / we)
            :ARG1 (a / and
                  :op1 (h2 / hostage)
                  :op2 (f / family
                        :poss h2))
            :time (t5 / this)))"
its heartbreaking to watch my thoughts and love being sent your way Sydney.,"# ::snt its heartbreaking to watch my thoughts and love being sent your way Sydney.
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (b / break-heart-31
            :ARG0 (w / watch-01
                  :ARG1 (s2 / send-01
                        :ARG1 (a / and
                              :op1 (t / thing
                                    :ARG1-of (t2 / think-01
                                          :ARG0 ii))
                              :op2 (t3 / thing
                                    :ARG1-of (l / love-01
                                          :ARG0 ii)))
                        :ARG2 (w2 / way
                              :poss (c / city
                                    :name (n / name
                                          :op1 ""Sydney""))))))
      :ARG2 c)"
