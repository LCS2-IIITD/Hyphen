comment,amr
Guess that proves they don't care who/what someone is... they just want to kill people. Nice,"# ::snt Guess that proves they don't care who/what someone is... they just want to kill people. Nice
(m / multi-sentence
      :snt1 (g / guess-01
            :ARG0 (ii / i)
            :ARG1 (p / prove-01
                  :ARG0 (t / that)
                  :ARG1 (c / care-01
                        :polarity -
                        :ARG0 (t2 / they)
                        :ARG1 (s / slash
                              :op1 (p2 / person
                                    :domain (s2 / someone))
                              :op2 (p3 / person
                                    :domain s2)))))
      :snt2 (w / want-01
            :ARG0 (t3 / they)
            :ARG1 (k / kill-01
                  :ARG0 t3
                  :ARG1 (p4 / person))
            :mod (j / just))
      :snt3 (n / nice-01))"
Thank you Liz for the retweet. Have a wonderful night !,"# ::snt Thank you Liz for the retweet. Have a wonderful night !
(m / multi-sentence
      :snt1 (t / thank-01
            :ARG0 (ii / i)
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""Liz""))
            :ARG2 (r / retweet-01))
      :snt2 (h / have-03
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (n2 / night
                  :ARG1-of (w / wonderful-03))))"
"He can have as many as he wants , he earned it","# ::snt He can have as many as he wants , he earned it
(a / and
      :op1 (p / possible-01
            :ARG1 (h / have-03
                  :ARG0 (h2 / he)
                  :ARG1 (t / thing
                        :ARG1-of (h3 / have-quant-91
                              :ARG3 (e / equal)
                              :ARG4 (t2 / thing
                                    :ARG1-of (w / want-01
                                          :ARG0 h2))))))
      :op2 (e2 / earn-01
            :ARG0 h2
            :ARG1 t))"
"Thank you for your service, Ahmed. Rest In Peace, may God bless your family.","# ::snt Thank you for your service, Ahmed. Rest In Peace, may God bless your family.
(m / multi-sentence
      :snt1 (t / thank-01
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""Ahmed""))
            :ARG2 (s / serve-01
                  :ARG0 p))
      :snt2 (a / and
            :op1 (r / rest-01
                  :manner (p2 / peace))
            :op2 (p3 / permit-01
                  :ARG1 (b / bless-01
                        :ARG0 (p4 / person
                              :name (n2 / name
                                    :op1 ""God""))
                        :ARG1 (f / family
                              :poss p))
                  :ARG2 p4)))"
": BREAKING NEWS R.I.P. Ahmed Merabet, Cop, first victim of attack","# ::snt : BREAKING NEWS R.I.P. Ahmed Merabet, Cop, first victim of attack
(p / person
      :name (n / name
            :op1 ""R.I.P.""
            :op2 ""Ahmed""
            :op3 ""Merabet"")
      :mod (c / cop)
      :ARG1-of (v / victimize-01
            :ARG0 (a / attack-01
                  :ARG1 p)
            :ord (o / ordinal-entity
                  :value 1))
      :ARG0-of (h / have-org-role-91
            :ARG2 (r / report-01
                  :ARG1 (n2 / news
                        :ARG1-of (b / break-13)))))"
ymw.. Hope you have a wonderful one as well.,"# ::snt ymw.. Hope you have a wonderful one as well.
(h / hope-01
      :ARG0 (ii / i)
      :ARG1 (h2 / have-03
            :ARG0 (y / you)
            :ARG1 (o / one
                  :ARG1-of (w / wonderful-03)
                  :mod (a / as-well)))
      :mod (a2 / aw
            :mode expressive))"
Fallen Hero.,"# ::snt Fallen Hero.
(h / hero
      :ARG1-of (f / fall-01))"
rest in peace,"# ::snt rest in peace
(r / rest-01
      :ARG1 (y / you)
      :manner (p / peace))"
"from Littleton, Colorado: NOT AFRAID,","# ::snt from Littleton, Colorado: NOT AFRAID,
(c / cause-01
      :ARG0 (h / have-polarity-91
            :ARG2 -
            :ARG1 (p / program
                  :name (n / name
                        :op1 ""AFRAID"")))
      :source (c2 / city
            :name (n2 / name
                  :op1 ""Littleton"")
            :location (s / state
                  :name (n3 / name
                        :op1 ""Colorado""))))"
"RIP man, thanks for everything","# ::snt RIP man, thanks for everything
(a / and
      :op1 (w / wish-01
            :ARG1 (r / rest-01
                  :ARG1 (m / man)
                  :manner (p / peace)))
      :op2 (t / thank-01
            :ARG2 (e / everything)))"
Correct. They deserve eradication. Nothing else.,"# ::snt Correct. They deserve eradication. Nothing else.
(m / multi-sentence
      :snt1 (c / correct-02)
      :snt2 (d / deserve-01
            :ARG0 (t / they)
            :ARG1 (e / eradicate-01
                  :ARG1 t))
      :snt3 (n / nothing
            :mod (e2 / else)))"
"Typical. Islamist throwback dicks kill a fellow Muslim, which they routinely do in the middle east.","# ::snt Typical. Islamist throwback dicks kill a fellow Muslim, which they routinely do in the middle east.
(t / typical-02
      :ARG1 (k / kill-01
            :ARG0 (d / dicks
                  :mod (t2 / throwback)
                  :mod (r / religious-group
                        :name (n / name
                              :op1 ""Islam"")))
            :ARG1 (p / person
                  :mod (r2 / religious-group
                        :name (n2 / name
                              :op1 ""Muslim""))
                  :mod (f / fellow))
            :ARG1-of (d2 / do-02
                  :location (w / world-region
                        :name (n3 / name
                              :op1 ""Middle""
                              :op2 ""East""))
                  :mod (r3 / routine))))"
So how many virgins does the dead cop get?,"# ::snt So how many virgins does the dead cop get?
(ii / infer-01
      :ARG1 (g / get-01
            :ARG0 (c / cop
                  :ARG1-of (d / die-01))
            :ARG1 (v / virgin
                  :quant (a / amr-unknown))))"
Shows what happens when no one is carrying.,"# ::snt Shows what happens when no one is carrying.
(s / show-01
      :ARG1 (e / event
            :condition (c / carry-01
                  :ARG0 (n / no-one))))"
RIP,"# ::snt RIP
(r / rest-01
      :ARG1 (y / you)
      :manner (p / peace))"
So sad!They have no soul.Even killing other Muslims.Hopefully makes more fearful Muslims speak out against radical Islamists.,"# ::snt So sad!They have no soul.Even killing other Muslims.Hopefully makes more fearful Muslims speak out against radical Islamists.
(m / multi-sentence
      :snt1 (s / sad-02
            :mode expressive
            :degree (s2 / so))
      :snt2 (s3 / soul
            :polarity -
            :domain (t / they))
      :snt3 (k / kill-01
            :ARG1 (p / person
                  :mod (r / religious-group
                        :name (n / name
                              :op1 ""Islam""))
                  :mod (o / other))
            :mod (e / even))
      :snt4 (h / hope-01
            :ARG1 (m2 / make-02
                  :ARG0 (s4 / speak-out-03
                        :ARG0 (p2 / person
                              :mod (r2 / religious-group
                                    :name (n2 / name
                                          :op1 ""Muslim""))
                              :ARG1-of (h2 / have-degree-91
                                    :ARG2 (f / fear-01
                                          :ARG0 p2)
                                    :ARG3 (m3 / more)))
                        :prep-against (p3 / person
                              :mod (r3 / religious-group
                                    :name (n3 / name
                                          :op1 ""Islamism"")
                                    :ARG1-of (r4 / radical-02)))))))"
": BREAKING NEWS R.I.P. Ahmed Merabet, Cop, first victim of attack","# ::snt : BREAKING NEWS R.I.P. Ahmed Merabet, Cop, first victim of attack
(p / person
      :name (n / name
            :op1 ""R.I.P.""
            :op2 ""Ahmed""
            :op3 ""Merabet"")
      :mod (c / cop)
      :ARG1-of (v / victimize-01
            :ARG0 (a / attack-01
                  :ARG1 p)
            :ord (o / ordinal-entity
                  :value 1))
      :ARG0-of (h / have-org-role-91
            :ARG2 (r / report-01
                  :ARG1 (n2 / news
                        :ARG1-of (b / break-13)))))"
"Probable the last,on the runaway. (if it is the last).","# ::snt Probable the last,on the runaway. (if it is the last).
(p / probable
      :domain (e / event
            :mod (l / last)
            :topic (r / runaway-01)
            :condition-of p)
      :mod (l2 / last))"
They didn't bother to ask him if he was muslim,"# ::snt They didn't bother to ask him if he was muslim
(b / bother-02
      :polarity -
      :ARG0 (t / they)
      :ARG1 (a / ask-01
            :ARG0 t
            :ARG1 (t2 / truth-value
                  :polarity-of (r / religious-group
                        :name (n / name
                              :op1 ""Muslim"")
                        :domain (h / he)))
            :ARG2 h))"
