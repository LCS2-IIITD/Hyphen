comment,amr
"That was the most uninspiring piece of waffle that lost me with the first ""Umm"". Certainly no orator or statesman.","# ::snt That was the most uninspiring piece of waffle that lost me with the first ""Umm"". Certainly no orator or statesman.
(m / multi-sentence
      :snt1 (p / piece
            :consist-of (w / waffle)
            :domain (t / that)
            :ARG0-of (a / awe-01
                  :polarity -
                  :ARG2-of (h / have-degree-91
                        :ARG1 p
                        :ARG3 (m2 / most)))
            :ARG0-of (l / lose-02
                  :ARG1 (ii / i)
                  :instrument (s / string-entity
                        :value 1
                        :mod (u / umm
                              :mode expressive))))
      :snt2 (o / or
            :polarity -
            :op1 (o2 / orator)
            :op2 (s2 / statesman)
            :mod (c / certain)))"
Islam at best hiding behind woman,"# ::snt Islam at best hiding behind woman
(h / hide-01
      :ARG0 (r / religious-group
            :name (n / name
                  :op1 ""Islam""))
      :location (b / behind
            :op1 (w / woman))
      :mod (a / at-best))"
,"# ::snt 
(a / amr-empty)"
So a unidentified gun man can hold up a chocolate cafe and your prime minister comes out to speak? That's small!,"# ::snt So a unidentified gun man can hold up a chocolate cafe and your prime minister comes out to speak? That's small!
(m / multi-sentence
      :snt1 (c / cause-01
            :ARG1 (p / possible-01
                  :ARG1 (a / and
                        :op1 (h / hold-up-10
                              :ARG0 (m2 / man
                                    :mod (g / gun)
                                    :ARG1-of (ii / identify-01
                                          :polarity -))
                              :ARG1 (c2 / cafe
                                    :mod (c3 / chocolate)))
                        :op2 (c4 / come-out-09
                              :ARG0 (p2 / person
                                    :ARG0-of (h2 / have-org-role-91
                                          :ARG1 (y / you)
                                          :ARG2 (m3 / minister
                                                :mod (p3 / prime))))
                              :purpose (s / speak-01
                                    :ARG0 p2))))
            :polarity (a2 / amr-unknown))
      :snt2 (s2 / small
            :domain (t / that)))"
It was true.. in Australia everything it's up side down,"# ::snt It was true.. in Australia everything it's up side down
(m / multi-sentence
      :snt1 (t / true-01
            :ARG1 (ii / it))
      :snt2 (e / everything
            :location (c / country
                  :name (n / name
                        :op1 ""Australia""))
            :direction (a / and
                  :op1 (u / up)
                  :op2 (d / down))))"
"Maybe the Koran is a ""working document"".","# ::snt Maybe the Koran is a ""working document"".
(p / possible-01
      :ARG1 (d / document
            :ARG0-of (w / work-01)
            :domain (b / book
                  :name (n / name
                        :op1 ""Koran""))))"
,"# ::snt 
(a / amr-empty)"
If these Muslims don't like our way of life they should go to Saudi. Good Muslim Country.,"# ::snt If these Muslims don't like our way of life they should go to Saudi. Good Muslim Country.
(m / multi-sentence
      :snt1 (r / recommend-01
            :ARG1 (g / go-01
                  :ARG1 (p / person
                        :mod (r2 / religious-group
                              :name (n / name
                                    :op1 ""Muslim""))
                        :mod (t / this))
                  :ARG4 (c / country
                        :name (n2 / name
                              :op1 ""Saudi""
                              :op2 ""Arabia""))
                  :condition (d / dislike-01
                        :ARG0 p
                        :ARG1 (w / way
                              :manner-of (l / live-01
                                    :ARG0 (w2 / we))
                              :poss w2))))
      :snt2 c
      :ARG1-of (g2 / good-02)
      :mod (r3 / religious-group
            :name (n3 / name
                  :op1 ""Islam"")))"
Australia's leader Tony Abbott addresses ; no questions from the media taken,"# ::snt Australia's leader Tony Abbott addresses ; no questions from the media taken
(a / address-03
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Tony""
                  :op2 ""Abbott"")
            :ARG0-of (l / lead-02
                  :ARG1 (t / team
                        :name (n2 / name
                              :op1 ""Australia""))))
      :ARG1-of (q / question-01
            :polarity -
            :ARG0 (m / media
                  :ARG1-of (t2 / take-01))))"
The religion of peace strikes again,"# ::snt The religion of peace strikes again
(s / strike-01
      :ARG0 (r / religion
            :mod (p / peace))
      :mod (a / again))"
Media is only concerned for the religion of the flg- not the safety of the trapped innocent hostages!,"# ::snt Media is only concerned for the religion of the flg- not the safety of the trapped innocent hostages!
(c / contrast-01
      :ARG1 (c2 / concern-02
            :ARG0 (m / media)
            :ARG1 (r / religion
                  :poss (f / flg))
            :mod (o / only))
      :ARG2 (c3 / concern-02
            :polarity -
            :ARG0 m
            :ARG1 (s / safe-01
                  :ARG1 (h / hostage
                        :ARG1-of (t / trap-01)
                        :ARG1-of (ii / innocent-01)))))"
No questions from media taken. Great this is no question time!,"# ::snt No questions from media taken. Great this is no question time!
(m / multi-sentence
      :snt1 (q / question-01
            :polarity -
            :ARG0 (m2 / media)
            :ARG1-of (t / take-01))
      :snt2 (t2 / time
            :polarity -
            :mod (q2 / question-01)
            :domain (t3 / this)
            :mod (g / great)))"
", -","# ::snt , -
(e / emoticon)"
Why is the police tape up-side down? O_O?,"# ::snt Why is the police tape up-side down? O_O?
(m / multi-sentence
      :snt1 (c / cause-01
            :ARG0 (a / amr-unknown)
            :ARG1 (t / tape-02
                  :ARG0 (p / police)
                  :mod (s / side
                        :direction (u / up))
                  :direction (d / down)))
      :snt2 (p2 / person
            :name (n / name
                  :op1 ""O_O"")))"
SWAT!,"# ::snt SWAT!
(s / shit
      :mode expressive)"
. is all the police tape in Australia upside down as well?,"# ::snt . is all the police tape in Australia upside down as well?
(u / upside-down-00
      :ARG1 (t / tape
            :mod (p / police)
            :location (c / country
                  :name (n / name
                        :op1 ""Australia""))
            :mod (a / all))
      :polarity (a2 / amr-unknown)
      :mod (a3 / as-well))"
,"# ::snt 
(a / amr-empty)"
Well down under is below the equator. Everything is upside down silly,"# ::snt Well down under is below the equator. Everything is upside down silly
(m / multi-sentence
      :snt1 (b / below
            :op1 (e / equator)
            :location (u / under
                  :op1 (d / down))
            :mod (w / well))
      :snt2 (s / silly
            :domain (e2 / everything
                  :direction (u2 / upside
                        :op1 (d2 / down)))))"
"didn't know Tony takes media questions ever, he ain't trained to answer them...","# ::snt didn't know Tony takes media questions ever, he ain't trained to answer them...
(a / and
      :op1 (k / know-01
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (t / take-01
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""Tony""))
                  :ARG1 (q / question-01
                        :ARG0 (m / media))
                  :time (e / ever)))
      :op2 (t2 / train-01
            :polarity -
            :ARG1 (a2 / answer-01
                  :ARG0 p
                  :ARG1 q)
            :ARG2 p))"
,"# ::snt 
(a / amr-empty)"
*isn't...isn't trained to answer them.,"# ::snt *isn't...isn't trained to answer them.
(t / train-01
      :polarity -
      :ARG1 (a / answer-01
            :ARG1 (t2 / they)))"
