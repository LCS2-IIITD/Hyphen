comment,amr
I know everything you've done and said has been your own response but thanks from this old pencil pusher for saying it all,"# ::snt I know everything you've done and said has been your own response but thanks from this old pencil pusher for saying it all
(c / contrast-01
      :ARG1 (k / know-01
            :ARG0 (ii / i)
            :ARG1 (r / respond-01
                  :ARG0 (y / you)
                  :ARG2 (e / everything
                        :ARG1-of (d / do-02
                              :ARG0 y)
                        :ARG1-of (s / say-01
                              :ARG0 y))))
      :ARG2 (t / thank-01
            :ARG0 ii
            :ARG1 (p / person
                  :ARG0-of (p2 / pushe-01
                        :ARG1 (p3 / pencil))
                  :mod (o / old)
                  :mod (t2 / this))
            :ARG2 (s2 / say-01
                  :ARG0 p
                  :ARG1 e)))"
,"# ::snt 
(a / amr-empty)"
"if terrorists killed every one, would they have to do an honest job, or go on the dole?","# ::snt if terrorists killed every one, would they have to do an honest job, or go on the dole?
(a / amr-choice
      :op1 (o / obligate-01
            :ARG1 (t / terrorist)
            :ARG2 (d / do-02
                  :ARG0 t
                  :ARG1 (j / job
                        :ARG1-of (h / honest-01
                              :ARG0 t))))
      :op2 (g / go-01
            :ARG1 t
            :ARG4 (d2 / dole))
      :condition (k / kill-01
            :ARG0 t
            :ARG1 (e / everyone)))"
Like the style Mr Rowson... V Beano,"# ::snt Like the style Mr Rowson... V Beano
(r / resemble-01
      :ARG1 (s / style
            :poss (p / person
                  :name (n / name
                        :op1 ""Mr""
                        :op2 ""Rowson"")))
      :ARG2 p
      :name (n2 / name
            :op1 ""V""
            :op2 ""Beano""))"
defender of /sadden by loosing our supporter,"# ::snt defender of /sadden by loosing our supporter
(d / defend-01
      :ARG0 (p / person)
      :ARG1 (p2 / person
            :name (n / name
                  :op1 ""Sadden""))
      :manner (l / lose-02
            :ARG0 p
            :ARG1 (p3 / person
                  :ARG0-of (s / support-01
                        :ARG1 (w / we)))))"
"clowns to us, but sadly millions of extremist idolize such facist terrorists","# ::snt clowns to us, but sadly millions of extremist idolize such facist terrorists
(c / contrast-01
      :ARG1 (c2 / clown-00
            :beneficiary (w / we))
      :ARG2 (ii / idolize-01
            :ARG0 (e / extremist
                  :quant (m / multiple
                        :op1 1000000))
            :ARG1 (t / terrorist
                  :mod (f / facist)
                  :mod (s / such))
            :ARG0-of (s2 / sad-02)))"
vive tout les cartoonists,"# ::snt vive tout les cartoonists
(l / laugh-01
      :ARG0 (c / cartoonist)
      :ARG1 (o / off
            :op1 (a / ass))
      :ARG1-of (p / possible-01))"
"Good point. But if everyone was dead, who would they work for?","# ::snt Good point. But if everyone was dead, who would they work for?
(m / multi-sentence
      :snt1 (p / point-04
            :ARG1-of (g / good-02))
      :snt2 (c / contrast-01
            :ARG2 (w / work-01
                  :ARG0 (t / they)
                  :ARG2 (a / amr-unknown)
                  :condition (d / die-01
                        :ARG1 (e / everyone)))))"
HaHaHa L{}Ve it !,"# ::snt HaHaHa L{}Ve it !
(l / laugh-01
      :mode expressive
      :ARG1 (ii / it))"
,"# ::snt 
(a / amr-empty)"
i was thinking about their ' real world survival' skills. bet they cant even do their own laundry.,"# ::snt i was thinking about their ' real world survival' skills. bet they cant even do their own laundry.
(m / multi-sentence
      :snt1 (t / think-01
            :ARG0 (ii / i)
            :ARG1 (s / skill
                  :mod (s2 / survive-01
                        :ARG0 (t2 / they)
                        :location (w / world
                              :ARG1-of (r / real-04)))
                  :poss t2))
      :snt2 (b / bet-01
            :ARG0 ii)
      :ARG2 (p / possible-01
            :polarity -
            :ARG1 (d / do-02
                  :ARG0 (t3 / they)
                  :ARG1 (l / laundry
                        :poss t3)
                  :mod (e / even))))"
