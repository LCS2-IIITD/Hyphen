comment,amr
,"# ::snt 
(a / amr-empty)"
"Really? If it off completely? What happened? I am so behind, get lost in routine, shut down sometimes.","# ::snt Really? If it off completely? What happened? I am so behind, get lost in routine, shut down sometimes.
(m / multi-sentence
      :snt1 (r / real-04
            :polarity (a / amr-unknown))
      :snt2 (h / have-condition-91
            :ARG1 (a2 / amr-unknown)
            :ARG2 (o / off
                  :domain (ii / it)
                  :ARG1-of (c / complete-02)))
      :snt3 (e / event
            :polarity (a3 / amr-unknown))
      :snt4 (a4 / and
            :op1 (h2 / have-degree-91
                  :ARG1 (ii2 / i)
                  :ARG2 (b / behind)
                  :ARG3 (s / so))
            :op2 (l / lose-02
                  :ARG1 ii2
                  :manner (r2 / routine))
            :op3 (s2 / shut-down-05
                  :ARG1 ii2
                  :frequency (s3 / sometimes))))"
Yeah I just seen a story on it and a tweet by live nation saying he wont be preforming.,"# ::snt Yeah I just seen a story on it and a tweet by live nation saying he wont be preforming.
(s / see-01
      :ARG0 (ii / i)
      :ARG1 (a / and
            :op1 (s2 / story
                  :topic (ii2 / it))
            :op2 (t / tweet-02
                  :ARG0 (b / broadcast-program
                        :name (n / name
                              :op1 ""Live""
                              :op2 ""Nation""))
                  :ARG1 (s3 / say-01
                        :ARG0 b
                        :ARG1 (p / perform-01
                              :polarity -
                              :ARG0 (h / he)))))
      :time (j / just)
      :mod (y / yeah
            :mode expressive))"
well from what I am hearing they are saying there is no concert tonight anymore.,"# ::snt well from what I am hearing they are saying there is no concert tonight anymore.
(h / hear-01
      :ARG0 (ii / i)
      :ARG1 (s / say-01
            :ARG0 (t / they)
            :ARG1 (c / concert
                  :polarity -
                  :time (d / date-entity
                        :dayperiod (n / night)
                        :mod (t2 / today))
                  :mod (a / anymore)))
      :mod (w / well))"
"Thanks Stazie, a day late, I'm other side of border today else, wuld've Nothing beats ""Raspberry Beret ... and ""When Doves Cry""","# ::snt Thanks Stazie, a day late, I'm other side of border today else, wuld've Nothing beats ""Raspberry Beret ... and ""When Doves Cry""
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (a / and
            :op1 (t / thank-01
                  :ARG0 ii
                  :ARG1 (p / person
                        :name (n / name
                              :op1 ""Stazie"")))
            :op2 (b / be-located-at-91
                  :ARG1 ii
                  :ARG2 (s2 / side
                        :mod (o / other)
                        :part-of (b2 / border))
                  :time (t2 / today)
                  :mod (e / else))
            :op3 (b3 / beat-01
                  :ARG0 (n2 / nothing)
                  :ARG1 (a2 / and
                        :op1 (p2 / publication
                              :name (n3 / name
                                    :op1 ""Raspberry""
                                    :op2 ""Beret""))
                        :op2 (p3 / publication
                              :name (n4 / name
                                    :op1 ""When""
                                    :op2 ""Doves""
                                    :op3 ""Cry"")))))
      :ARG2 p)"
When? Is show already gone?,"# ::snt When? Is show already gone?
(m / multi-sentence
      :snt1 (b / be-temporally-at-91
            :ARG2 (a / amr-unknown))
      :snt2 (g / go-01
            :ARG1 (s / show-04)
            :time (a2 / already)
            :polarity (a3 / amr-unknown)))"
oh damn!,"# ::snt oh damn!
(d / damn-01
      :mode expressive)"
"It is sometime tonight, I am not sure on what time that is going to be.","# ::snt It is sometime tonight, I am not sure on what time that is going to be.
(a / and
      :op1 (d / date-entity
            :dayperiod (n / night)
            :mod (t / today)
            :mod (s / sometime))
      :op2 (s2 / sure-02
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (t2 / time
                  :time-of d)))"
