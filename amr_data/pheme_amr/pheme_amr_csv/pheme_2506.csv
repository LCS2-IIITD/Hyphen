comment,amr
"I thought flights are on autopilot, even if co-pilot is unconscious, why did plane go down right away.","# ::snt I thought flights are on autopilot, even if co-pilot is unconscious, why did plane go down right away.
(t / think-01
      :ARG0 (ii / i)
      :ARG1 (f / fly-01
            :manner (a / autopilot)
            :concession (e / even-if
                  :op1 (c / conscious
                        :domain (p / person
                              :ARG0-of (p2 / pilot-01))))
            :ARG0-of (c2 / cause-01
                  :ARG1 (g / go-down-27
                        :ARG1 (p3 / plane)
                        :time (r / right-away)))))"
Planes need Onstar !!!,"# ::snt Planes need Onstar !!!
(n / need-01
      :mode expressive
      :ARG0 (p / plane)
      :ARG1 (p2 / product
            :name (n2 / name
                  :op1 ""Onstar"")))"
"If this is true, it sure makes anyone scare of flying anywhere.","# ::snt If this is true, it sure makes anyone scare of flying anywhere.
(h / have-condition-91
      :ARG1 (m / make-02
            :ARG0 (t / this)
            :ARG1 (s / scare-01
                  :ARG0 t
                  :ARG1 (a / anyone)
                  :ARG2 (f / fly-01
                        :ARG2 (a2 / anywhere)))
            :ARG1-of (s2 / sure-02))
      :ARG2 (t2 / true-01
            :ARG1 t))"
"Wow, that didn't even cross my mind. It very well may be the case. It's terribly sad all together.","# ::snt Wow, that didn't even cross my mind. It very well may be the case. It's terribly sad all together.
(m / multi-sentence
      :snt1 (c / cross-02
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (m2 / mind
                  :poss ii)
            :mod (e / even)
            :mod (w / wow
                  :mode expressive))
      :snt2 (p / possible-01
            :ARG1 (c2 / case-04
                  :ARG1 (ii2 / it))
            :mod (w2 / well
                  :degree (v / very)))
      :snt3 (s / sad-02
            :ARG1 (ii3 / it)
            :degree (t / terribly)
            :mod (a / all-together)))"
~ .thgin doog a evah,"# ::snt ~ .thgin doog a evah
(d / doog-00
      :ARG0 (p / person
            :name (n / name
                  :op1 ""thgin""))
      :ARG1 p
      :name (n2 / name
            :op1 ""Eva""))"
~ olleh.,"# ::snt ~ olleh.
(s / say-01
      :ARG0 (ii / i)
      :ARG2 (p / person
            :name (n / name
                  :op1 "" olleh"")))"
Theres a critical need for cameras installed onboard monitored by armed guards in forward area of the aircraft. ....,"# ::snt Theres a critical need for cameras installed onboard monitored by armed guards in forward area of the aircraft. ....
(n / need-01
      :ARG1 (c / camera
            :ARG1-of (ii / install-01
                  :ARG2 (o / onboard))
            :ARG1-of (m / monitor-01
                  :ARG0 (p / person
                        :ARG0-of (g / guard-01)
                        :ARG1-of (a / arm-01))
                  :location (a2 / area
                        :location (f / forward)
                        :part-of (a3 / aircraft))))
      :ARG1-of (c2 / critical-02))"
,"# ::snt 
(a / amr-empty)"
"cdlc cokpit lock code cmes with emrgncy code to force open and it takes minute, unless a person manual lock it","# ::snt cdlc cokpit lock code cmes with emrgncy code to force open and it takes minute, unless a person manual lock it
(a / and
      :op1 (h / have-purpose-91
            :ARG1 (c / code
                  :mod (l / lock-01)
                  :mod (c2 / cokpit))
            :ARG2 (f / force-01
                  :ARG1 (o / open-01
                        :ARG1 (c3 / code
                              :mod (e / emr-unknown)))))
      :op2 (t / take-10
            :ARG0 f
            :ARG1 (t2 / temporal-quantity
                  :quant 1
                  :unit (m / minute)))
      :condition (l2 / lock-01
            :polarity -
            :ARG0 (p / person
                  :mod (m2 / manual))
            :ARG1 (ii / it)))"
how do they know this?,"# ::snt how do they know this?
(k / know-01
      :ARG0 (t / they)
      :ARG1 (t2 / this)
      :manner (a / amr-unknown))"
yes why was the pilot locked out of the cockpit before the crash. Praying for all the families.,"# ::snt yes why was the pilot locked out of the cockpit before the crash. Praying for all the families.
(m / multi-sentence
      :snt1 (l / lock-01
            :ARG1 (p / person
                  :ARG0-of (p2 / pilot-01))
            :ARG3 (o / out-06
                  :ARG1 p2
                  :ARG2 (c / cockpit))
            :time (b / before
                  :op1 (c2 / crash-01))
            :ARG1-of (c3 / cause-01
                  :ARG0 (a / amr-unknown)))
      :snt2 (p3 / pray-01
            :ARG1 (f / family
                  :mod (a2 / all))))"
say what?,"# ::snt say what?
(s / say-01
      :ARG0 (y / you)
      :ARG1 (a / amr-unknown))"
wow! It's an all around tragic situation.,"# ::snt wow! It's an all around tragic situation.
(m / multi-sentence
      :snt1 (w / wow
            :mode expressive)
      :snt2 (s / situation
            :mod (t / tragic
                  :degree (a / all-around))))"
I'm wondering if that means that the second pilot crashed on purpose,"# ::snt I'm wondering if that means that the second pilot crashed on purpose
(w / wonder-01
      :ARG0 (ii / i)
      :ARG1 (t / truth-value
            :polarity-of (m / mean-01
                  :ARG1 (t2 / that)
                  :ARG2 (c / crash-01
                        :ARG1 (p / person
                              :ARG0-of (p2 / pilot-01)
                              :ord (o / ordinal-entity
                                    :value 2))
                        :ARG1-of (h / have-purpose-91)))))"
