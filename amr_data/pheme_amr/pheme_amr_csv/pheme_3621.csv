comment,amr
police too busy doing their work!! Don't bother them!,"# ::snt police too busy doing their work!! Don't bother them!
(m / multi-sentence
      :snt1 (b / busy-01
            :ARG1 (p / police)
            :ARG2 (w / work-01
                  :ARG0 p)
            :ARG2-of (h / have-degree-91
                  :ARG1 p
                  :ARG3 (t / too)))
      :snt2 (b2 / bother-01
            :polarity -
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (t2 / they)))"
: . will not confirm how many hostages left in,"# ::snt : . will not confirm how many hostages left in
(c / confirm-01
      :polarity -
      :ARG1 (n / number
            :quant-of (h / hostage
                  :ARG1-of (l / leave-17))))"
"hope our Kenyan officers are taking notes ,","# ::snt hope our Kenyan officers are taking notes ,
(h / hope-01
      :ARG0 (ii / i)
      :ARG1 (n / note-01
            :ARG0 (o / officer
                  :mod (c / country
                        :name (n2 / name
                              :op1 ""Kenya""))
                  :poss (w / we))))"
How Does Someone Become a Muslim?,"# ::snt How Does Someone Become a Muslim?
(b / become-01
      :ARG1 (s / someone)
      :ARG2 (r / religious-group
            :name (n / name
                  :op1 ""Muslim""))
      :manner (a / amr-unknown))"
media is giving that asshole the coverage &amp; gov is happy: spreads more fear. Justification for surveillance,"# ::snt media is giving that asshole the coverage &amp; gov is happy: spreads more fear. Justification for surveillance
(m / multi-sentence
      :snt1 (g / give-01
            :ARG0 (m2 / media)
            :ARG1 (a / and
                  :op1 (c / cover-03)
                  :op2 (a2 / amp))
            :ARG2 (a3 / asshole
                  :mod (t / that)))
      :snt2 (h / happy-01
            :ARG1 (g2 / government-organization
                  :ARG0-of (g3 / govern-01))
            :ARG1-of (c2 / cause-01
                  :ARG0 (s / spread-01
                        :ARG0 g2
                        :ARG1 (f / fear-01
                              :mod (m3 / more)))))
      :snt3 (j / justify-01
            :ARG1 (s2 / surveil-01)))"
god Breath ya!,"# ::snt god Breath ya!
(b / breathe-01
      :mode imperative
      :ARG0 (p / person
            :name (n / name
                  :op1 ""God""))
      :ARG2 (y / you))"
U,"# ::snt U
(p / person
      :name (n / name
            :op1 ""U""))"
"Hopefully, that's not because they dont know how many there are inside","# ::snt Hopefully, that's not because they dont know how many there are inside
(h / hope-01
      :ARG1 (c / cause-01
            :polarity -
            :ARG0 (k / know-01
                  :ARG0 (t / they)
                  :ARG1 (n / number
                        :quant-of (p / person
                              :location (ii / inside))))
            :ARG1 (t2 / that)))"
they even didnt know if one of the hostages freed was also ISIS.,"# ::snt they even didnt know if one of the hostages freed was also ISIS.
(k / know-01
      :polarity -
      :ARG0 (t / they)
      :ARG1 (h / have-condition-91
            :ARG2 (c / criminal-organization
                  :name (n / name
                        :op1 ""Islamic""
                        :op2 ""organization"")
                  :mod (a / also)
                  :domain (h2 / hostage
                        :ARG1-of (ii / include-91
                              :ARG2 (h3 / hostage
                                    :ARG1-of (f / free-01))))))
      :mod (e / even))"
"the judges will judge after police is done. Lets just stick to observing, register, maybe learn some","# ::snt the judges will judge after police is done. Lets just stick to observing, register, maybe learn some
(m / multi-sentence
      :snt1 (j / judge-01
            :ARG0 (p / person
                  :ARG0-of (j2 / judge-01))
            :time (a / after
                  :op1 (b / be-done-08
                        :ARG0 (p2 / police))))
      :snt2 (a2 / and
            :op1 (s / stick-01
                  :mode imperative
                  :ARG0 (w / we)
                  :ARG1 w
                  :ARG2 (a3 / and
                        :op1 (o / observe-01
                              :ARG0 w)
                        :op2 (r / register-02
                              :ARG0 w))
                  :mod (j3 / just))
            :op2 (p3 / possible-01
                  :ARG1 (l / learn-01
                        :ARG0 w
                        :ARG1 (s2 / some)))))"
