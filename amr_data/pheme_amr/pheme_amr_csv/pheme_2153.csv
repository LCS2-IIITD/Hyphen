comment,amr
. Should have sent those police to,"# ::snt . Should have sent those police to
(r / recommend-01
      :ARG1 (s / send-01
            :ARG1 (p / police
                  :mod (t / that))
            :ARG2 (l / location)))"
it looks like they shoot everywhere !,"# ::snt it looks like they shoot everywhere !
(l / look-02
      :ARG0 (ii / it)
      :ARG1 (s / shoot-01
            :ARG0 (t / they)
            :ARG2 (e / everywhere)))"
. ^^,"# ::snt . ^^
(x / ^^)"
"""Siege is over: police"" .","# ::snt ""Siege is over: police"" .
(p / police
      :ARG0-of (m / mean-01
            :ARG1 (o / over-01
                  :ARG1 (ii / iege-01))))"
,"# ::snt 
(a / amr-empty)"
don't understand how the police could endanger the hostages by storming in there. Hope nobody died,"# ::snt don't understand how the police could endanger the hostages by storming in there. Hope nobody died
(m / multi-sentence
      :snt1 (u / understand-01
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (p / possible-01
                  :ARG1 (e / endanger-01
                        :ARG0 (p2 / police)
                        :ARG1 (h / hostage)
                        :ARG2 (s / storm-01
                              :ARG0 p2
                              :ARG1 (t / there)))))
      :snt2 (h2 / hope-01
            :ARG0 (ii2 / i)
            :ARG1 (d / die-01
                  :ARG1 (n / nobody))))"
appear? it's over... injured have been removed...the gunman has been taken out,"# ::snt appear? it's over... injured have been removed...the gunman has been taken out
(a / appear-02
      :polarity (a2 / amr-unknown)
      :ARG1 (o / over-01
            :ARG1 (ii / it))
      :ARG1-of (c / cause-01
            :ARG0 (a3 / and
                  :op1 (r / remove-01
                        :ARG1 (p / person
                              :ARG1-of (ii2 / injure-01)))
                  :op2 (t / take-out-11
                        :ARG1 (g / gunman)))))"
I hope the terrorist is enjoying his empathy,"# ::snt I hope the terrorist is enjoying his empathy
(h / hope-01
      :ARG0 (ii / i)
      :ARG1 (e / enjoy-01
            :ARG0 (t / terrorist)
            :ARG1 (e2 / empathy
                  :poss t)))"
,"# ::snt 
(a / amr-empty)"
: DEVELOPING: Police appear to storm cafe in Sydney where hostages have been held Live,"# ::snt : DEVELOPING: Police appear to storm cafe in Sydney where hostages have been held Live
(d / develop-01
      :ARG1 (a / appear-02
            :ARG1 (s / storm-02
                  :ARG0 (p / police)
                  :ARG1 (c / cafe
                        :location (c2 / city
                              :name (n / name
                                    :op1 ""Sydney""))
                        :location-of (h / hold-01
                              :ARG1 (h2 / hostage)
                              :medium (l / live))))))"
:! !,"# ::snt :! !
(t / thing
      :mode expressive)"
,"# ::snt 
(a / amr-empty)"
...,"# ::snt ...
(a / amr-empty)"
MT : Police appear to storm cafe in Sydney where hostages have been held Live,"# ::snt MT : Police appear to storm cafe in Sydney where hostages have been held Live
(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""MT""))
      :ARG1 (a / appear-02
            :ARG1 (s2 / storm-02
                  :ARG0 (p2 / police)
                  :ARG1 (c / cafe
                        :location (c2 / city
                              :name (n2 / name
                                    :op1 ""Sydney""))
                        :location-of (h / hold-01
                              :ARG1 (h2 / hostage)
                              :manner (l / live))))))"
:cnn ..,"# ::snt :cnn ..
(p / publication
      :name (n / name
            :op1 ""Cnn""))"
: DEVELOPING: Police appear to storm cafe in Sydney where hostages have been held Live:,"# ::snt : DEVELOPING: Police appear to storm cafe in Sydney where hostages have been held Live:
(d / develop-01
      :ARG1 (a / appear-02
            :ARG1 (s / storm-02
                  :ARG0 (p / police)
                  :ARG1 (c / cafe
                        :location (c2 / city
                              :name (n / name
                                    :op1 ""Sydney""))
                        :location-of (h / hold-01
                              :ARG1 (h2 / hostage)
                              :medium (l / live))))))"
