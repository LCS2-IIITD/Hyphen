comment,amr
Thank you,"# ::snt Thank you
(t / thank-01
      :ARG0 (ii / i)
      :ARG1 (y / you))"
RPG7 impact !,"# ::snt RPG7 impact !
(ii / impact-01
      :mode expressive
      :ARG0 (p / product
            :name (n / name
                  :op1 ""RPG7"")))"
Nope,"# ::snt Nope
(n / nope)"
":stop making movies out of books as quick as they do. make a movie, then release a new book years apart.","# ::snt :stop making movies out of books as quick as they do. make a movie, then release a new book years apart.
(m / multi-sentence
      :snt1 (s / stop-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (m2 / make-01
                  :ARG0 y
                  :ARG1 (m3 / movie)
                  :ARG2 (b / book)
                  :ARG1-of (q / quick-02
                        :ARG2-of (h / have-degree-91
                              :ARG1 m2
                              :ARG3 (e / equal)
                              :ARG4 (d / do-02
                                    :ARG0 (t / they))))))
      :snt2 (a / and
            :op1 (m4 / make-01
                  :mode imperative
                  :ARG0 (y2 / you)
                  :ARG1 m3)
            :op2 (r / release-01
                  :mode imperative
                  :ARG0 y2
                  :ARG1 (b2 / book
                        :ARG1-of (n / new-01))
                  :time (t2 / then)
                  :time (a2 / after
                        :op1 s
                        :quant (m5 / multiple
                              :op1 (t3 / temporal-quantity
                                    :quant 1
                                    :unit (y3 / year)))))))"
"I am with ABC News in NY-did you take this photo/can we use for all partners/platforms? We will credit you. Thx, please be safe.","# ::snt I am with ABC News in NY-did you take this photo/can we use for all partners/platforms? We will credit you. Thx, please be safe.
(m / multi-sentence
      :snt1 (b / be-with-10
            :ARG0 (ii / i)
            :ARG1 (b2 / broadcast-program
                  :name (n / name
                        :op1 ""ABC""
                        :op2 ""News"")
                  :location (s / state
                        :name (n2 / name
                              :op1 ""NY""))))
      :snt2 (a / amr-choice
            :op1 (t / take-01
                  :ARG0 (y / you)
                  :ARG1 (p / photo
                        :mod (t2 / this)))
            :op2 (p2 / possible-01
                  :ARG1 (u / use-01
                        :ARG0 (w / we)
                        :ARG1 p
                        :beneficiary (s2 / slash
                              :op1 (p3 / partner
                                    :mod (a2 / all))
                              :op2 (p4 / platform
                                    :mod (a3 / all)))))
            :snt3 (c / credit-01
                  :ARG0 (w2 / we)
                  :ARG1 (y2 / you))
            :snt4 (s3 / safe-01
                  :mode imperative
                  :polite +
                  :ARG1 (y3 / you))))"
fire,"# ::snt fire
(f / fire)"
