comment,amr
J'tais pas assez en colre.,"# ::snt J'tais pas assez en colre.
(s / sense-02
      :polarity -
      :ARG1 (p / pas-01
            :ARG0 (w / we)
            :mod (a / assez-in-colre)))"
&lt;3 &lt;3 &lt;3 &lt;3 &lt;3 &lt;3 &lt;3,"# ::snt &lt;3 &lt;3 &lt;3 &lt;3 &lt;3 &lt;3 &lt;3
(s / string-entity
      :value ""&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3&lt;3"")"
of ALL TIME! thank you,"# ::snt of ALL TIME! thank you
(t / thank-01
      :mode expressive
      :ARG1 (y / you)
      :time (t2 / time
            :mod (a / all)))"
Je sais pas pourquoi tu l'as pas trouve avant...,"# ::snt Je sais pas pourquoi tu l'as pas trouve avant...
(m / multi-sentence
      :snt1 (c / comment-01
            :ARG0 (ii / i)
            :ARG1 (s / si))
      :snt2 (p / pourquoi
            :polarity (a / amr-unknown)
            :domain (e / et-cetera
                  :ARG1-of (m2 / mean-01
                        :ARG2 (e2 / et-cetera))))
      :snt3 (e3 / et-cetera
            :mode expressive
            :domain (p2 / person
                  :name (n / name
                        :op1 ""Avant""))))"
jtm,"# ::snt jtm
(p / person
      :name (n / name
            :op1 ""Jtm""))"
cause de ton pseudo je l'ai lu avec la voix de Dracula. C'tait atroce.,"# ::snt cause de ton pseudo je l'ai lu avec la voix de Dracula. C'tait atroce.
(m / multi-sentence
      :snt1 (c / cause-01
            :ARG0 (a / amr-unknown)
            :ARG1 (l / laugh-01
                  :ARG0 (p / person
                        :quant (t / ton)
                        :mod (p2 / pseudo))
                  :ARG2 (p3 / person
                        :name (n / name
                              :op1 ""Dracula""))
                  :mod (v / voix
                        :poss p3)))
      :snt2 (c2 / c'tait
            :mod (a2 / atroce-00)))"
a se surpasse ce matin.,"# ::snt a se surpasse ce matin.
(s / surpasse-00
      :ARG1 (a / amr-unintelligible
            :value ""camein""))"
Mais bordel :'D,"# ::snt Mais bordel :'D
(s / string-entity
      :value ""Mais bordel:"")"
,"# ::snt 
(a / amr-empty)"
Hurry up with my damn galette.,"# ::snt Hurry up with my damn galette.
(h / hurry-01
      :mode imperative
      :ARG0 (y / you)
      :accompanier (g / galette
            :poss (ii / i)
            :mod (d / damn
                  :mode expressive)))"
GG je me suis touff avec ma tartine,"# ::snt GG je me suis touff avec ma tartine
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (j / je-ff
            :mode expressive
            :beneficiary (p / person
                  :name (n / name
                        :op1 ""GG""))
            :domain (p2 / person
                  :name (n2 / name
                        :op1 ""Suis""
                        :op2 "" touff""
                        :op3 ""a""
                        :op4 ""Tartine"")))
      :ARG2 p2)"
Perharps the same could be said of all religions.,"# ::snt Perharps the same could be said of all religions.
(s / say-01
      :ARG1 (p / possible-01
            :ARG1 (s2 / say-01
                  :ARG1 (t / thing
                        :ARG1-of (s3 / same-01))
                  :ARG3 (r / religion
                        :mod (a / all))))
      :ARG2 (p2 / person
            :name (n / name
                  :op1 ""Perhar"")))"
a t'a marqu cette histoire de galette,"# ::snt a t'a marqu cette histoire de galette
(c / case-03
      :ARG1 (n / name
            :op1 ""Cette""
            :op2 ""de""
            :op3 ""Galette""))"
