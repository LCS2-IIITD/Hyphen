comment,amr
it's fine!,"# ::snt it's fine!
(f / fine-04
      :ARG1 (ii / it))"
"it just means there's a siege in Sydney mate, no big deal, really.","# ::snt it just means there's a siege in Sydney mate, no big deal, really.
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (m / mean-01
            :ARG1 (ii2 / it)
            :ARG2 (s2 / siege-01
                  :location (c / city
                        :name (n / name
                              :op1 ""Sydney"")))
            :mod (d / deal
                  :polarity -
                  :mod (b / big)
                  :ARG1-of (r / real-04))
            :mod (j / just))
      :ARG2 (m2 / mate))"
word siege has been used here in Oz for hostage situations before. We probably use it wrong. Maybe should be,"# ::snt word siege has been used here in Oz for hostage situations before. We probably use it wrong. Maybe should be
(m / multi-sentence
      :snt1 (u / use-01
            :ARG1 (w / word)
            :ARG2 (s / situation
                  :mod (h / hostage))
            :location (h2 / here
                  :location (c / country-region
                        :name (n / name
                              :op1 ""Oz"")))
            :time (b / before))
      :snt2 (p / probable
            :domain (u2 / use-01
                  :ARG0 (w2 / we)
                  :ARG1 (ii / it)
                  :ARG2-of (w3 / wrong-04
                        :ARG1 w2)))
      :snt3 (p2 / possible-01
            :ARG1 (r / recommend-01
                  :ARG1 u2)))"
totally true but it's not a cool alliteration that suggests a siege by Islamic militants,"# ::snt totally true but it's not a cool alliteration that suggests a siege by Islamic militants
(c / contrast-01
      :ARG1 (t / true-01
            :degree (t2 / total))
      :ARG2 (s / suggest-01
            :polarity -
            :ARG0 (a / alliterate
                  :ARG1-of (c2 / cool-04))
            :ARG1 (b / besiege-01
                  :ARG0 (m / militant
                        :mod (r / religious-group
                              :name (n / name
                                    :op1 ""Islam""))))))"
a siege is when you cut off supplied by blockading a city or sovereign for a long period of time,"# ::snt a siege is when you cut off supplied by blockading a city or sovereign for a long period of time
(m / mean-01
      :ARG1 (s / siege-01)
      :ARG2 (c / cut-off-04
            :ARG0 (y / you)
            :manner (b / block-01
                  :ARG0 y
                  :ARG1 (o / or
                        :op1 (c2 / city)
                        :op2 (s2 / sovereign))
                  :duration (p / period
                        :ARG1-of (l / long-03)))))"
don't take this away from,"# ::snt don't take this away from
(t / take-away-05
      :polarity -
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (t2 / this))"
thank you for your definition cos my attention to such details have gone out of the window~,"# ::snt thank you for your definition cos my attention to such details have gone out of the window~
(t / thank-01
      :ARG0 (ii / i)
      :ARG1 (y / you)
      :ARG2 (d / define-01
            :ARG0 y)
      :ARG1-of (c / cause-01
            :ARG0 (g / go-01
                  :ARG1 (a / attend-02
                        :ARG0 ii
                        :ARG1 (d2 / detail
                              :mod (s / such)))
                  :direction (o / out-of
                        :op1 (w / window)))))"
thank you for that technical point. Using hashtag to keep updated re this issue.,"# ::snt thank you for that technical point. Using hashtag to keep updated re this issue.
(m / multi-sentence
      :snt1 (t / thank-01
            :ARG1 (y / you)
            :ARG2 (p / point-04
                  :ARG0 y
                  :mod (t2 / technical)
                  :mod (t3 / that)))
      :snt2 (u / use-01
            :ARG1 (h / hashtag)
            :ARG2 (k / keep-02
                  :ARG1 (u2 / update-02
                        :ARG1 (ii / issue-02
                              :mod (t4 / this))))))"
: coz it's such an unlikely place to be under siege...esp in a Chocolatier,"# ::snt : coz it's such an unlikely place to be under siege...esp in a Chocolatier
(c / cause-01
      :ARG0 (p / place
            :ARG1-of (l / likely-01
                  :polarity -
                  :degree (s / such))
            :ARG1-of (r / resemble-01
                  :ARG2 (b / be-located-at-91
                        :ARG2 (r2 / restaurant
                              :name (n / name
                                    :op1 ""Chocolatier""))))))"
sarcasm pls,"# ::snt sarcasm pls
(s / sarcasm
      :mode expressive)"
coz it's such an unlikely place to be under siege...esp in a Chocolatier,"# ::snt coz it's such an unlikely place to be under siege...esp in a Chocolatier
(c / cause-01
      :ARG0 (p / place
            :ARG1-of (l / likely-01
                  :polarity -
                  :degree (s / such))
            :location-of (u / under
                  :op1 (ii / iege-01))
            :example (r / restaurant
                  :name (n / name
                        :op1 ""Chocolatier""))))"
Blumenthal also thinks the Taliban children massacre was a day in the park.,"# ::snt Blumenthal also thinks the Taliban children massacre was a day in the park.
(t / think-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Blumenthal""))
      :ARG1 (d / day
            :location (p2 / park)
            :domain (m / massacre-01
                  :ARG1 (c / child
                        :mod (c2 / criminal-organization
                              :name (n2 / name
                                    :op1 ""Taliban"")))))
      :mod (a / also))"
"for australia, it's also this","# ::snt for australia, it's also this
(t / this
      :beneficiary (c / country
            :name (n / name
                  :op1 ""Australia""))
      :mod (a / also))"
:they need this,"# ::snt :they need this
(n / need-01
      :ARG0 (t / they)
      :ARG1 (t2 / this))"
... For the same damn thing.,"# ::snt ... For the same damn thing.
(h / have-purpose-91
      :ARG2 (t / thing
            :ARG1-of (s / same-01)
            :mod (d / damn)))"
thank you,"# ::snt thank you
(t / thank-01
      :ARG0 (ii / i)
      :ARG1 (y / you))"
"You r such a shmuck, it is really unbelievable.","# ::snt You r such a shmuck, it is really unbelievable.
(a / and
      :op1 (s / shit
            :mode expressive
            :domain (y / you)
            :degree (s2 / such))
      :op2 (p / possible-01
            :polarity -
            :ARG1 (b / believe-01
                  :ARG1 (ii / it)
                  :degree (r / really))))"
"then, this event is a mini-siege","# ::snt then, this event is a mini-siege
(ii / iege-01
      :ARG0 (e / event
            :mod (t / this))
      :mod (m / mini)
      :time (t2 / then))"
"after all, that's what hashtag is for. No point changing the TRENDING or having lots of ..","# ::snt after all, that's what hashtag is for. No point changing the TRENDING or having lots of ..
(m / multi-sentence
      :snt1 (h / have-purpose-91
            :ARG1 (h2 / hashtag)
            :ARG2 (t / that)
            :mod (a / after-all))
      :snt2 (p / point-03
            :polarity -
            :ARG1 (o / or
                  :op1 (c / change-01
                        :ARG1 (t2 / thing
                              :ARG1-of (t3 / TR-01)))
                  :op2 (h3 / have-03
                        :ARG1 (t4 / thing
                              :quant (l / lot))))))"
no,"# ::snt no
(n / no)"
First mover advantage. First catchy tag line wins.,"# ::snt First mover advantage. First catchy tag line wins.
(m / multi-sentence
      :snt1 (a / advantage-01
            :ARG2 (m2 / mover)
            :ord (o / ordinal-entity
                  :value 1))
      :snt2 (w / win-01
            :ARG0 (l / line
                  :mod (t / tag)
                  :ARG1-of (c / catchy-00)
                  :ord (o2 / ordinal-entity
                        :value 1))))"
"I know and agree, but was simply explaining","# ::snt I know and agree, but was simply explaining
(c / contrast-01
      :ARG1 (a / and
            :op1 (k / know-01
                  :ARG0 (ii / i))
            :op2 (a2 / agree-01
                  :ARG0 ii))
      :ARG2 (e / explain-01
            :ARG0 ii
            :ARG1-of (s / simple-02)))"
"im sorry, i didnt intend for that to sound sarcastic i didnt want to be sarcastic!","# ::snt im sorry, i didnt intend for that to sound sarcastic i didnt want to be sarcastic!
(a / and
      :op1 (s / sorry-01
            :ARG1 (ii / i))
      :op2 (ii2 / intend-01
            :polarity -
            :ARG0 ii
            :ARG1 (s2 / sound-01
                  :ARG1 (t / that)
                  :ARG2 (s3 / sarcastic)))
      :op3 (w / want-01
            :polarity -
            :ARG0 ii
            :ARG1 (s4 / sarcastic
                  :domain ii)))"
White people live in Sydney,"# ::snt White people live in Sydney
(l / live-01
      :ARG0 (p / person
            :ARG1-of (w / white-02))
      :location (c / city
            :name (n / name
                  :op1 ""Sydney"")))"
Hey. Nice point. Maybe when your head comes out of your ass you'll make another one.,"# ::snt Hey. Nice point. Maybe when your head comes out of your ass you'll make another one.
(m / multi-sentence
      :snt1 (p / point-04
            :ARG1-of (n / nice-01)
            :mod (h / hey
                  :mode expressive))
      :snt2 (p2 / possible-01
            :ARG1 (m2 / make-01
                  :ARG0 (y / you
                        :part (h2 / head)
                        :part (a / ass))
                  :ARG1 (o / one
                        :mod (a2 / another))
                  :time (c / come-out-09
                        :ARG1 h2))))"
Np!,"# ::snt Np!
(p / post-scriptum
      :domain (y / you))"
