comment,amr
well done Aussies!,"# ::snt well done Aussies!
(s / say-01
      :ARG1 (d / do-02
            :ARG1-of (w / well-09))
      :ARG2 (p / person
            :mod (c / country
                  :name (n / name
                        :op1 ""Australia""))))"
Just goes to show EVIL will NEVER WIN,"# ::snt Just goes to show EVIL will NEVER WIN
(g / go-11
      :ARG2 (s / show-01
            :ARG1 (w / win-01
                  :polarity -
                  :ARG0 (e / evil)
                  :time (e2 / ever)))
      :mod (j / just))"
"At least the Aussies restrict Muslim immigration, unlike the sheeple in Europe..","# ::snt At least the Aussies restrict Muslim immigration, unlike the sheeple in Europe..
(r / restrict-01
      :ARG0 (p / person
            :mod (c / country
                  :name (n / name
                        :op1 ""Australia"")))
      :ARG1 (ii / immigrate-01
            :ARG0 p
            :mod (r2 / religious-group
                  :name (n2 / name
                        :op1 ""Muslim"")))
      :mod (a / at-least)
      :ARG1-of (r3 / resemble-01
            :polarity -
            :ARG2 (ii2 / immigrate-01
                  :ARG0 (s / sheeple)
                  :location (c2 / continent
                        :name (n3 / name
                              :op1 ""Europe"")))))"
well done Sydney,"# ::snt well done Sydney
(s / say-01
      :ARG1 (d / do-02
            :ARG1-of (w / well-09))
      :ARG2 (p / person
            :name (n / name
                  :op1 ""Sydney"")))"
unless action is taken people are going to have to get used to coming together like this. More will come,"# ::snt unless action is taken people are going to have to get used to coming together like this. More will come
(m / multi-sentence
      :snt1 (o / obligate-01
            :ARG1 (p / person)
            :ARG2 (g / get-03
                  :ARG1 p
                  :ARG2 (u / use-02
                        :ARG0 p
                        :ARG1 (c / come-01
                              :ARG1 p
                              :manner (t / together)
                              :ARG1-of (r / resemble-01
                                    :ARG2 (t2 / this)))))
            :condition (a / act-02
                  :polarity -))
      :snt2 c
      :ARG1 (m2 / more))"
