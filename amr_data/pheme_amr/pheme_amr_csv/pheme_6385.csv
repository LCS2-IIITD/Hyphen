comment,amr
,"# ::snt 
(a / amr-empty)"
I'm from Newcastle. I understand your pain.,"# ::snt I'm from Newcastle. I understand your pain.
(m / multi-sentence
      :snt1 (ii / i
            :source (c / city
                  :name (n / name
                        :op1 ""Newcastle"")))
      :snt2 (u / understand-01
            :ARG0 (ii2 / i)
            :ARG1 (p / pain-01
                  :ARG1 (y / you))))"
"Where is that hashtag? Oh wait, here it is","# ::snt Where is that hashtag? Oh wait, here it is
(m / multi-sentence
      :snt1 (b / be-located-at-91
            :ARG1 (h / hashtag)
            :ARG2 (a / amr-unknown))
      :snt2 (w / wait-01
            :mode expressive
            :mod (o / oh))
      :snt3 b
      :ARG1 (ii / it)
      :ARG2 (h2 / here))"
% probability they are from the shire.,"# ::snt % probability they are from the shire.
(l / likely-01
      :ARG1 (b / be-from-91
            :ARG1 (t / they)
            :ARG2 (s / shire))
      :degree (p / percentage-entity))"
Id say do a most idiotic gawkers at Martin Place piece but I think making them internet famous will only make them happy.,"# ::snt Id say do a most idiotic gawkers at Martin Place piece but I think making them internet famous will only make them happy.
(c / contrast-01
      :ARG1 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (d / do-02
                  :ARG0 (g / gawker
                        :location (p / piece
                              :location (l / location
                                    :name (n / name
                                          :op1 ""Martin""
                                          :op2 ""Place"")))
                        :ARG1-of (h / have-degree-91
                              :ARG2 (ii2 / idiotic)
                              :ARG3 (m / most)))))
      :ARG2 (t / think-01
            :ARG0 ii
            :ARG1 (m2 / make-02
                  :ARG0 m2
                  :ARG1 (f / fame-01
                        :ARG1 g
                        :medium (ii3 / internet)))
            :ARG1 (h2 / happy-01
                  :ARG1 g)
            :mod (o / only)))"
,"# ::snt 
(a / amr-empty)"
Cronulla riots ?,"# ::snt Cronulla riots ?
(r / riot-01
      :polarity (a / amr-unknown)
      :mod (c / city
            :name (n / name
                  :op1 ""Cronulla"")))"
"""report"" some news you ""reporter""....","# ::snt ""report"" some news you ""reporter""....
(r / report-01
      :ARG0 (y / you
            :ARG0-of (r2 / report-01))
      :ARG1 (n / news
            :mod (s / some)))"
good lord MT : Two young guys have arrived and are swigging from bottles of white wine.,"# ::snt good lord MT : Two young guys have arrived and are swigging from bottles of white wine.
(s / say-01
      :ARG1 (a / and
            :op1 (a2 / arrive-01
                  :ARG1 (g / guy
                        :quant 2
                        :mod (y / young)))
            :op2 (s2 / swig-01
                  :ARG0 g
                  :ARG1 (w / wine
                        :ARG1-of (w2 / white-03)
                        :quant (b / bottle))))
      :ARG2 (p / person
            :name (n / name
                  :op1 ""MT"")
            :mod (l / lord
                  :mode expressive
                  :ARG1-of (g2 / good-02))))"
Surprised they haven't started chanting Aussie Aussie Aussie,"# ::snt Surprised they haven't started chanting Aussie Aussie Aussie
(s / surprise-01
      :ARG0 (s2 / start-01
            :polarity -
            :ARG0 (t / they)
            :ARG1 (c / chant-01
                  :ARG0 t
                  :ARG1 (p / person
                        :mod (c2 / country
                              :name (n / name
                                    :op1 ""Australia""))
                        :mod c2))))"
it's also Australia.,"# ::snt it's also Australia.
(c / country
      :name (n / name
            :op1 ""Australia"")
      :mod (a / also)
      :domain (ii / it))"
Oh my!,"# ::snt Oh my!
(o / oh-my-god
      :mode expressive)"
,"# ::snt 
(a / amr-empty)"
staying always classy,"# ::snt staying always classy
(s / stay-01
      :ARG3 (c / classy-02
            :ARG1 (y / you)
            :time (a / always)))"
what the hell?? Ppl's lives are on the line and ppl are drinking and having fun watching it?? This is where we've come to,"# ::snt what the hell?? Ppl's lives are on the line and ppl are drinking and having fun watching it?? This is where we've come to
(m / multi-sentence
      :snt1 (a / amr-unknown
            :mod (h / hell
                  :mode expressive))
      :snt2 (a2 / and
            :op1 (l / line-up-02
                  :ARG1 (l2 / life
                        :poss (p / person
                              :ARG0-of (p2 / post-01))))
            :op2 (d / drink-01
                  :ARG0 p)
            :op3 (f / fun-01
                  :ARG0 p
                  :ARG1 (w / watch-01
                        :ARG0 p
                        :ARG1 (ii / it))))
      :snt3 (c / come-01
            :ARG1 (w2 / we)
            :ARG4 (t / this)))"
I've heard of strange attractors before but yob attractors are new,"# ::snt I've heard of strange attractors before but yob attractors are new
(h / hear-01
      :ARG0 (ii / i)
      :ARG1 (a / attractor
            :mod (s / strange))
      :time (b / before)
      :concession (n / new-01
            :ARG1 (a2 / attractor
                  :mod (y / yob))))"
its a bogan epidemic. Def not localised,"# ::snt its a bogan epidemic. Def not localised
(m / multi-sentence
      :snt1 (e / epidemic
            :mod (b / bogan)
            :domain (ii / it))
      :snt2 (l / localize-01
            :polarity -
            :ARG1-of (d / define-01)))"
I'm from the shire and nothing like it,"# ::snt I'm from the shire and nothing like it
(a / and
      :op1 (b / be-from-91
            :ARG1 (ii / i)
            :ARG2 (s / shire))
      :op2 (r / resemble-01
            :polarity -
            :ARG1 ii
            :ARG2 s))"
morons who should be up against the wall when the revolution comes,"# ::snt morons who should be up against the wall when the revolution comes
(m / moron
      :ARG1-of (r / recommend-01
            :ARG2 (u / up-03
                  :ARG1 m
                  :ARG2 (w / wall)
                  :time (c / come-01
                        :ARG1 (r2 / revolution-03)))))"
