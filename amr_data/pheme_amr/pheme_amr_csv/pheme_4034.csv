comment,amr
"I know, I'm so sick of this fake CNN news.. The world is waking up!","# ::snt I know, I'm so sick of this fake CNN news.. The world is waking up!
(m / multi-sentence
      :snt1 (k / know-01
            :ARG0 (ii / i))
      :snt2 (s / sick-04
            :ARG0 (n / news
                  :ARG1-of (f / fake-02)
                  :source (p / publication
                        :name (n2 / name
                              :op1 ""CNN""))
                  :mod (t / this))
            :ARG1 ii
            :degree (s2 / so))
      :snt3 (w / wake-up-02
            :mode expressive
            :ARG1 (w2 / world)))"
hoax?,"# ::snt hoax?
(h / hoax-01
      :polarity (a / amr-unknown))"
--ABSOLUTELY a haoax--see proof here -,"# ::snt --ABSOLUTELY a haoax--see proof here -
(m / multi-sentence
      :snt1 (h / haoax
            :mod (a / absolute))
      :snt2 (s / see-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (t / thing
                  :ARG0-of (p / prove-01))
            :location (h2 / here)))"
hoax!,"# ::snt hoax!
(h / hoax-01)"
one of the brothers was in prison for terrorism in . And he's not there still why?,"# ::snt one of the brothers was in prison for terrorism in . And he's not there still why?
(m / multi-sentence
      :snt1 (ii / imprison-01
            :ARG1 (p / person
                  :quant 1
                  :ARG1-of (ii2 / include-91
                        :ARG2 (p2 / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG2 (b / brother)))))
            :ARG3 (t / terrorism)
            :location (p3 / prison))
      :snt2 (a / and
            :op2 (b2 / be-located-at-91
                  :polarity -
                  :ARG1 (h2 / he)
                  :ARG2 p3
                  :mod (s / still)
                  :ARG1-of (c / cause-01
                        :ARG0 (a2 / amr-unknown)))))"
- Grand Theft Auto V Prank,"# ::snt - Grand Theft Auto V Prank
(t / thing
      :name (n / name
            :op1 ""Grand""
            :op2 ""Grand""
            :op3 ""Trip""
            :op4 ""Auto""
            :op5 ""V""
            :op6 ""Prank""))"
Your tweet makes my page better,"# ::snt Your tweet makes my page better
(m / make-02
      :ARG0 (t / tweet-02
            :ARG0 (y / you))
      :ARG1 (p / page
            :poss (ii / i)
            :ARG1-of (h / have-degree-91
                  :ARG2 (g / good-02
                        :ARG1 p)
                  :ARG3 (m2 / more))))"
:no what? Not clicking a link you suggest. What's a hoax?,"# ::snt :no what? Not clicking a link you suggest. What's a hoax?
(m / multi-sentence
      :snt1 (n / no)
      :snt2 (c / click-01
            :polarity -
            :ARG1 (l / link
                  :ARG1-of (s / suggest-01
                        :ARG0 (y / you))))
      :snt3 (h / hoax-01
            :ARG2 (a / amr-unknown)))"
one of the brothers was in prison for terrorism in . And he's not there still why?,"# ::snt one of the brothers was in prison for terrorism in . And he's not there still why?
(m / multi-sentence
      :snt1 (ii / imprison-01
            :ARG1 (p / person
                  :quant 1
                  :ARG1-of (ii2 / include-91
                        :ARG2 (p2 / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG2 (b / brother)))))
            :ARG3 (t / terrorism)
            :location (p3 / prison))
      :snt2 (a / and
            :op2 (b2 / be-located-at-91
                  :polarity -
                  :ARG1 (h2 / he)
                  :ARG2 p3
                  :mod (s / still)
                  :ARG1-of (c / cause-01
                        :ARG0 (a2 / amr-unknown)))))"
"When captured, perps will hire same Lawyer as for Treyvon &amp; Brown families. Jack Ruby will finally tell all-- HOAX!","# ::snt When captured, perps will hire same Lawyer as for Treyvon &amp; Brown families. Jack Ruby will finally tell all-- HOAX!
(m / multi-sentence
      :snt1 (h / hire-01
            :ARG0 (p / perp)
            :ARG1 (l / lawyer
                  :ARG1-of (s / same-01
                        :ARG2 (l2 / lawyer
                              :beneficiary (a / and
                                    :op1 (p2 / person
                                          :name (n / name
                                                :op1 ""Treyvon""))
                                    :op2 (p3 / person
                                          :name (n2 / name
                                                :op1 ""amp""))
                                    :op3 (f / family
                                          :poss (p4 / person
                                                :name (n3 / name
                                                      :op1 ""Brown"")))))))
            :time (c / capture-01
                  :ARG1 p))
      :snt2 (t / tell-01
            :ARG0 (p5 / person
                  :name (n4 / name
                        :op1 ""Jack""
                        :op2 ""RRuby""))
            :ARG1 (a2 / all)
            :mod (o / organization
                  :name (n5 / name
                        :op1 ""HOAX""))
            :mod (f2 / final)))"
