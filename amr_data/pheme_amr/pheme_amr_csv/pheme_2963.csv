comment,amr
no thank you already know. :-/,"# ::snt no thank you already know. :-/
(m / multi-sentence
      :snt1 (n / no)
      :snt2 (k / know-01
            :ARG0 (y / you)
            :time (a / already)))"
but they have socialized medicine *and* fracking -- how can this be?,"# ::snt but they have socialized medicine *and* fracking -- how can this be?
(c / contrast-01
      :ARG2 (h / have-03
            :ARG0 (t / they)
            :ARG1 (a / and
                  :op1 (m / medicine
                        :ARG1-of (s / socialize-02))
                  :op2 (f / frack-01))
            :ARG0-of (c2 / cause-01
                  :ARG1 (p / possible-01
                        :ARG1 (t2 / this)
                        :manner (a2 / amr-unknown)))))"
One of the pleasures of going to school in Potsdam &amp; living in Masena was CBC.,"# ::snt One of the pleasures of going to school in Potsdam &amp; living in Masena was CBC.
(ii / include-91
      :ARG1 (l / live-01
            :location (c / city
                  :name (n / name
                        :op1 ""Masena"")))
      :ARG2 (t / thing
            :ARG1-of (e / enjoy-01
                  :ARG0 (a / and
                        :op1 (g / go-02
                              :ARG4 (s / school
                                    :location (c2 / city
                                          :name (n2 / name
                                                :op1 ""Potsdam""))))
                        :op2 (t2 / trip-03
                              :ARG4 (c3 / city
                                    :name (n3 / name
                                          :op1 ""Potsdam""))))))
      :ARG3 (o / one))"
"oh shit, I forgot you are visiting Canada arent you?","# ::snt oh shit, I forgot you are visiting Canada arent you?
(f / forget-01
      :ARG0 (ii / i)
      :ARG1 (v / visit-01
            :ARG0 (y / you)
            :ARG1 (c / country
                  :name (n / name
                        :op1 ""Canada"")))
      :mod (s / shit
            :mode expressive
            :mod (o / oh))
      :ARG1-of (r / request-confirmation-91))"
I'm watching ...,"# ::snt I'm watching ...
(w / watch-01
      :ARG0 (ii / i))"
"I read Americans tweeting their kind thoughts and prayers to Canada today. And, then I read this.","# ::snt I read Americans tweeting their kind thoughts and prayers to Canada today. And, then I read this.
(m / multi-sentence
      :snt1 (r / read-01
            :ARG0 (ii / i)
            :ARG1 (t / tweet-02
                  :ARG0 (p / person
                        :mod (c / country
                              :name (n / name
                                    :op1 ""America"")))
                  :ARG1 (a / and
                        :op1 (t2 / thing
                              :ARG1-of (t3 / think-01
                                    :ARG0 p)
                              :ARG1-of (k / kind-01))
                        :op2 (t4 / thing
                              :ARG1-of (p2 / pray-01
                                    :ARG0 p)
                              :ARG1-of (k2 / kind-01)))
                  :ARG2 (c2 / country
                        :name (n2 / name
                              :op1 ""Canada""))
                  :time (t5 / today)))
      :snt2 a
      :op2 (r2 / read-01
            :ARG0 (ii2 / i)
            :ARG1 (t6 / this)
            :time (t7 / then)))"
"Waiting for the chants of ""CNN! CNN!"" to go with ""USA! USA!""","# ::snt Waiting for the chants of ""CNN! CNN!"" to go with ""USA! USA!""
(w / wait-01
      :ARG2 (c / chant-01
            :ARG1 (g / go-22
                  :ARG1 (s / string-entity
                        :value ""CNN! CNN!"")
                  :ARG2 (s2 / string-entity
                        :value ""USA! USA!""))))"
"I kinda think most Americans know that by now, or at least suspect. Partial credit?","# ::snt I kinda think most Americans know that by now, or at least suspect. Partial credit?
(m / multi-sentence
      :snt1 (t / think-01
            :ARG0 (ii / i)
            :ARG1 (o / or
                  :op1 (k / know-01
                        :ARG0 (p / person
                              :mod (c / country
                                    :name (n / name
                                          :op1 ""America""))
                              :quant (m2 / most))
                        :ARG1 (t2 / that)
                        :time (b / by
                              :op1 (n2 / now)))
                  :op2 (s / suspect-01
                        :ARG0 p
                        :ARG1 t2
                        :mod (a / at-least)))
            :degree (k2 / kind-of))
      :snt2 (c2 / credit-02
            :mod (p2 / partial)
            :polarity (a2 / amr-unknown)))"
The true miracle would be an admission that we have anything to learn from anyone.,"# ::snt The true miracle would be an admission that we have anything to learn from anyone.
(m / miracle
      :ARG1-of (t / true-01)
      :domain (a / admit-01
            :ARG1 (h / have-03
                  :ARG0 (w / we)
                  :ARG1 (a2 / anything
                        :ARG1-of (l / learn-01
                              :ARG0 w
                              :ARG2 (a3 / anyone))))))"
Not the time.,"# ::snt Not the time.
(t / time
      :polarity -)"
Those of us who are rational already knew this.,"# ::snt Those of us who are rational already knew this.
(k / know-01
      :ARG0 (p / person
            :mod (t / that)
            :ARG1-of (ii / include-91
                  :ARG2 (w / we))
            :ARG1-of (r / rational-02))
      :ARG1 (t2 / this)
      :time (a / already))"
I'll be in touch!,"# ::snt I'll be in touch!
(ii / in-touch-12
      :mode expressive
      :ARG0 (ii2 / i))"
We're number one! We're number one!,"# ::snt We're number one! We're number one!
(m / multi-sentence
      :snt1 (n / number
            :value 1
            :domain (w / we))
      :snt2 (n2 / number
            :value 1
            :domain (w2 / we)))"
Amen!,"# ::snt Amen!
(a / amen
      :mode expressive)"
Good chunk of us already know.,"# ::snt Good chunk of us already know.
(k / know-01
      :ARG0 (c / chunk
            :ARG1-of (g / good-02)
            :ARG1-of (ii / include-91
                  :ARG2 (w / we)))
      :time (a / already))"
US politicians and media : Grifters and their scribes.,"# ::snt US politicians and media : Grifters and their scribes.
(a / and
      :op1 (a2 / and
            :op1 (p / politician)
            :op2 (m / media)
            :mod (c / country
                  :name (n / name
                        :op1 ""US"")))
      :op2 (a3 / and
            :op1 (g / grifter)
            :op2 (s / scribe)
            :poss a2))"
"Thank you, and thats *after* our Canadians' news quality has somewhat degraded over the past yrs w govt hostility to CBC.","# ::snt Thank you, and thats *after* our Canadians' news quality has somewhat degraded over the past yrs w govt hostility to CBC.
(a / and
      :op1 (t / thank-01
            :ARG0 (ii / i)
            :ARG1 (y / you))
      :op2 (b / be-temporally-at-91
            :ARG1 (d / degrade-01
                  :ARG1 (q / quality
                        :mod (n / news)
                        :poss (p / person
                              :mod (c / country
                                    :name (n2 / name
                                          :op1 ""Canada""))
                              :poss (w / we)))
                  :degree (s / somewhat)
                  :time (b2 / before
                        :op1 (n3 / now)
                        :duration (t2 / temporal-quantity
                              :quant 1
                              :unit (y2 / year)))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (h / hostility
                              :mod (g / government-organization
                                    :ARG0-of (g2 / govern-01))
                              :beneficiary (p2 / publication
                                    :name (n4 / name
                                          :op1 ""CBC"")))))
            :ARG2 (a2 / after)))"
thats why I watch BBC,"# ::snt thats why I watch BBC
(c / cause-01
      :ARG0 (t / that)
      :ARG1 (w / watch-01
            :ARG0 (ii / i)
            :ARG1 (p / publication
                  :name (n / name
                        :op1 ""BBC""))))"
