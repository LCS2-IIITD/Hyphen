comment,amr
accidental,"# ::snt accidental
(a / accident)"
praise Allah.,"# ::snt praise Allah.
(p / praise-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (p2 / person
            :name (n / name
                  :op1 ""Allah"")))"
YES,"# ::snt YES
(y / yes)"
Reinforcing your view,"# ::snt Reinforcing your view
(r / reinforce-01
      :ARG1 (v / view-02
            :ARG0 (y / you)))"
'Stralia!,"# ::snt 'Stralia!
(c / country
      :name (n / name
            :op1 ""Stralia""))"
hopefully a double tap between his eyes. Or maybe his balls and knees,"# ::snt hopefully a double tap between his eyes. Or maybe his balls and knees
(m / multi-sentence
      :snt1 (t / tap-01
            :ARG1 (b / between
                  :op1 (e / eye
                        :part-of (h / he)))
            :ARG1-of (d / double-01)
            :ARG1-of (h2 / hope-01))
      :snt2 (o / or
            :op2 (p / possible-01
                  :ARG1 (a / and
                        :op1 (b2 / ball
                              :part-of (h3 / he))
                        :op2 (k / knee
                              :part-of h3)))))"
NOOOOOOOO,"# ::snt NOOOOOOOO
(n / no)"
Finally! Victory for Australia!,"# ::snt Finally! Victory for Australia!
(w / win-01
      :mode expressive
      :ARG0 (c / country
            :name (n / name
                  :op1 ""Australia""))
      :time (f / final))"
Not in any lifetime.,"# ::snt Not in any lifetime.
(e / event
      :polarity -
      :time (l / lifetime
            :mod (a / any)))"
'murica!,"# ::snt 'murica!
(a / amurica
      :mode expressive)"
dead or alive????,"# ::snt dead or alive????
(a / amr-choice
      :op1 (d / die-01)
      :op2 (l / live-01))"
Hopefully he's dead. Hope all the hostages are alive.,"# ::snt Hopefully he's dead. Hope all the hostages are alive.
(m / multi-sentence
      :snt1 (h / hope-01
            :ARG1 (d / die-01
                  :ARG1 (h2 / he)))
      :snt2 h
      :ARG1 (l / live-01
            :ARG0 (h3 / hostage
                  :mod (a / all))))"
: BREAKING NEWS: SYDNEY SIEGE GUNMAN DOWN.Clever. What do they think he's doing now?? Having a cuppa with the police,"# ::snt : BREAKING NEWS: SYDNEY SIEGE GUNMAN DOWN.Clever. What do they think he's doing now?? Having a cuppa with the police
(m / multi-sentence
      :snt1 (n / news
            :ARG1-of (b / break-13)
            :topic (d / down-01
                  :ARG1 (g / gun-02
                        :ARG0 (p / person
                              :name (n2 / name
                                    :op1 ""SyDNEY""
                                    :op2 "" SIEGE"")))))
      :snt2 (s / smart-06)
      :snt3 (t / think-01
            :ARG0 (t2 / they)
            :ARG1 (d2 / do-02
                  :ARG0 (h / he)
                  :ARG1 (a / amr-unknown)
                  :time (n3 / now)))
      :snt4 (h2 / have-06
            :ARG0 h
            :ARG1 (c / cuppa
                  :accompanier (p2 / police))))"
: BREAKING NEWS: SYDNEY SIEGE GUNMAN DOWN.,"# ::snt : BREAKING NEWS: SYDNEY SIEGE GUNMAN DOWN.
(a / and
      :op1 (n / news
            :ARG1-of (b / break-13))
      :op2 (d / down-01
            :ARG1 (g / gun-02
                  :ARG0 (c / city
                        :name (n2 / name
                              :op1 ""Sydney"")))))"
boooooooooooooo,"# ::snt boooooooooooooo
(b / booooooooo
      :mode expressive)"
: BREAKING NEWS: SYDNEY SIEGE GUNMAN DOWN.,"# ::snt : BREAKING NEWS: SYDNEY SIEGE GUNMAN DOWN.
(a / and
      :op1 (n / news
            :ARG1-of (b / break-13))
      :op2 (d / down-01
            :ARG1 (g / gun-02
                  :ARG0 (c / city
                        :name (n2 / name
                              :op1 ""Sydney"")))))"
"BTW, it's good talking to a fellow conservative. You use logic and conviction.Not the","# ::snt BTW, it's good talking to a fellow conservative. You use logic and conviction.Not the
(m / multi-sentence
      :snt1 (g / good-02
            :ARG1 (t / talk-01
                  :ARG0 (y / you)
                  :ARG2 (p / person
                        :mod (c / conservative)
                        :mod (f / fellow)))
            :mod (b / by-the-way))
      :snt2 (u / use-01
            :ARG0 (y2 / you)
            :ARG1 (a / and
                  :op1 (l / logic)
                  :op2 (c2 / conviction-02))
            :polarity -))"
nice quote rt??,"# ::snt nice quote rt??
(q / quote-01
      :ARG1-of (n / nice-01)
      :ARG1-of (r / request-confirmation-91))"
Good news on that.,"# ::snt Good news on that.
(n / news
      :ARG1-of (g / good-02)
      :topic (t / that))"
Why would you say no?,"# ::snt Why would you say no?
(c / cause-01
      :ARG0 (a / amr-unknown)
      :ARG1 (s / say-01
            :ARG0 (y / you)
            :ARG1 (n / no)))"
: BREAKING NEWS: SYDNEY SIEGE GUNMAN DOWN. finally.,"# ::snt : BREAKING NEWS: SYDNEY SIEGE GUNMAN DOWN. finally.
(m / multi-sentence
      :snt1 (n / news
            :ARG1-of (b / break-13))
      :snt2 (d / down-01
            :ARG1 (g / gunman
                  :location (c / city
                        :name (n2 / name
                              :op1 ""Sydney"")))
            :time (f / final)))"
Good RT: BREAKING NEWS: SYDNEY SIEGE GUNMAN DOWN.,"# ::snt Good RT: BREAKING NEWS: SYDNEY SIEGE GUNMAN DOWN.
(a / and
      :op1 (p / publication
            :name (n / name
                  :op1 ""RT"")
            :ARG1-of (g / good-02))
      :op2 (d / down-01
            :ARG1 (g2 / gunman
                  :location (c / city
                        :name (n2 / name
                              :op1 ""Sydney"")))))"
So it's wrong to pour water on their face to save lives but it's okay to split their face open to save lives,"# ::snt So it's wrong to pour water on their face to save lives but it's okay to split their face open to save lives
(c / contrast-01
      :ARG1 (w / wrong-02
            :ARG1 (p / pour-01
                  :ARG1 (w2 / water)
                  :ARG2 (f / face
                        :part-of (t / they))
                  :purpose (s / save-02
                        :ARG0 t
                        :ARG1 (l / life))))
      :ARG2 (o / okay-04
            :ARG1 (s2 / split-01
                  :ARG1 f
                  :ARG4 (o2 / open)
                  :purpose (s3 / save-02
                        :ARG1 l))))"
sarcasm,"# ::snt sarcasm
(s / sarcasm)"
I said before. If they are evil. Shoot them in the head. But we don't torture.,"# ::snt I said before. If they are evil. Shoot them in the head. But we don't torture.
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (ii / i)
            :time (b / before))
      :snt2 (h / have-condition-91
            :ARG1 (s2 / shoot-02
                  :mode imperative
                  :ARG0 (y / you)
                  :ARG1 (t / they)
                  :ARG2 (h2 / head))
            :ARG2 (e / evil
                  :domain (t2 / they)))
      :snt3 (c / contrast-01
            :ARG2 (t3 / torture-01
                  :polarity -
                  :ARG0 (w / we))))"
"I know a man who was lynched &amp; burnedLike racism, torture has many definitionsBeing scared isn't torture","# ::snt I know a man who was lynched &amp; burnedLike racism, torture has many definitionsBeing scared isn't torture
(k / know-02
      :ARG0 (ii / i)
      :ARG1 (m / man
            :ARG1-of (l / lynch-01)
            :ARG1-of (b / burn-01)
            :ARG1-of (d / define-01
                  :quant (m2 / many)
                  :ARG1-of (r / resemble-01
                        :ARG2 (r2 / racism)))
            :ARG1-of (t / torture-01
                  :ARG1-of (m3 / mean-01
                        :polarity -
                        :ARG2 (t2 / torture-01)))))"
