comment,amr
"""I want to express to the families of victims of the air crash my solidarity. It is a grief, tragedy"" ~ Francois Hollande","# ::snt ""I want to express to the families of victims of the air crash my solidarity. It is a grief, tragedy"" ~ Francois Hollande
(m / multi-sentence
      :snt1 (w / want-01
            :ARG0 (ii / i)
            :ARG1 (e / express-01
                  :ARG0 ii
                  :ARG1 (s / solidarity
                        :poss ii)
                  :ARG2 (f / family
                        :ARG1-of (v / victimize-01
                              :ARG0 (c / crash-01
                                    :ARG1 (a / air))))))
      :snt2 (s2 / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Francois""
                        :op2 ""Holland""))
            :ARG1 (a2 / and
                  :op1 (g / grief)
                  :op2 (t / tragedy)
                  :domain (ii2 / it))))"
Brennan's CIA responsible plane Flt crash cuz France German trade Russia no EU War over Ukraine with Russia?,"# ::snt Brennan's CIA responsible plane Flt crash cuz France German trade Russia no EU War over Ukraine with Russia?
(c / cause-01
      :ARG0 (t / trade-01
            :ARG0 (c2 / country
                  :name (n / name
                        :op1 ""France""))
            :ARG2 (c3 / country
                  :name (n2 / name
                        :op1 ""Russia""))
            :ARG1-of c
            :ARG0 (w / war-01
                  :polarity -
                  :ARG0 (o / organization
                        :name (n3 / name
                              :op1 ""EU""))
                  :ARG1 c3
                  :ARG2 (c4 / country
                        :name (n4 / name
                              :op1 ""Ukraine""))))
      :ARG1 (c5 / crash-01
            :ARG1 (p / plane
                  :name (n5 / name
                        :op1 ""Flt"")
                  :poss (p2 / person
                        :name (n6 / name
                              :op1 ""Brennan""))
                  :ARG1-of (r / responsible-01
                        :ARG0 (g / government-organization
                              :name (n7 / name
                                    :op1 ""CIA""))))
            :polarity (a / amr-unknown)))"
NATO is conducting exercises in Evrope. Worked only one problem-the defeat of aircraft within range of enemy air defense alyansa.OK.,"# ::snt NATO is conducting exercises in Evrope. Worked only one problem-the defeat of aircraft within range of enemy air defense alyansa.OK.
(m / multi-sentence
      :snt1 (c / conduct-01
            :ARG0 (m2 / military
                  :name (n / name
                        :op1 ""NATO""))
            :ARG1 (e / exercise
                  :location (c2 / country
                        :name (n2 / name
                              :op1 ""Evrope""))))
      :snt2 (w / work-01
            :ARG1 (p / problem
                  :quant 1
                  :mod (o / only)
                  :domain (d / defeat-01
                        :ARG1 (a / aircraft
                              :ARG1-of (r / range-01
                                    :polarity -
                                    :ARG2 (c3 / country
                                          :ARG2-of (d2 / defend-01
                                                :ARG3 (a2 / attack-01
                                                      :path (a3 / air)))
                                          :mod (e2 / enemy))))))))"
"BREAKING - Germanwings plane crashes in France, up to believed dead","# ::snt BREAKING - Germanwings plane crashes in France, up to believed dead
(b / break-01
      :ARG1 (c / crash-01
            :ARG1 (p / plane
                  :poss (c2 / company
                        :name (n / name
                              :op1 ""Germanwings"")))
            :location (c3 / country
                  :name (n2 / name
                        :op1 ""France""))
            :ARG0-of (c4 / cause-01
                  :ARG1 (b2 / believe-01
                        :ARG1 (d / die-01
                              :ARG1 (p2 / person
                                    :quant (u / up-to
                                          :op1 1)))))))"
He ? Hollande is Sarkozy ? I didn't know...,"# ::snt He ? Hollande is Sarkozy ? I didn't know...
(m / multi-sentence
      :snt1 (h / he)
      :snt2 (p / person
            :name (n / name
                  :op1 ""Sarkozy"")
            :domain (p2 / person
                  :name (n2 / name
                        :op1 ""Hollande""))
            :polarity (a / amr-unknown))
      :snt3 (k / know-01
            :polarity -
            :ARG0 (ii / i)))"
anything for the Libyan families he carpet bombed?,"# ::snt anything for the Libyan families he carpet bombed?
(a / anything
      :polarity (a2 / amr-unknown)
      :beneficiary (f / family
            :mod (c / country
                  :name (n / name
                        :op1 ""Libya""))
            :ARG1-of (b / bomb-01
                  :ARG0 (h / he)
                  :manner (c2 / carpet))))"
really sad _ we live our lives without knowing what could be happen nxt...Death is so rude!,"# ::snt really sad _ we live our lives without knowing what could be happen nxt...Death is so rude!
(m / multi-sentence
      :snt1 (s / sad-02
            :degree (r / really))
      :snt2 (l / live-01
            :ARG0 (w / we)
            :ARG1 (l2 / life
                  :poss w)
            :manner (k / know-01
                  :polarity -
                  :ARG0 w
                  :ARG1 (t / thing
                        :ARG1-of (p / possible-01)))
            :ARG1-of (s2 / say-01
                  :ARG0 (ii / i)
                  :ARG2 (p2 / person
                        :name (n / name
                              :op1 ""nt""))))
      :snt3 (r2 / rude-01
            :ARG1 (d / die-01)
            :degree (s3 / so)))"
Check his voting behaviour at the time.,"# ::snt Check his voting behaviour at the time.
(c / check-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (b / behave-01
            :ARG0 (h / he)
            :ARG1 (v / vote-01
                  :ARG0 h))
      :time (t / time))"
