comment,amr
"in Paris is not Islamic. All Muslims must condemn these murders. Preach the message of peace, tolerance and love of Islam!","# ::snt in Paris is not Islamic. All Muslims must condemn these murders. Preach the message of peace, tolerance and love of Islam!
(m / multi-sentence
      :snt1 (r / religious-group
            :polarity -
            :name (n / name
                  :op1 ""Islam"")
            :domain (c / city
                  :name (n2 / name
                        :op1 ""Paris"")))
      :snt2 (o / obligate-01
            :ARG1 (p / person
                  :mod (r2 / religious-group
                        :name (n3 / name
                              :op1 ""Islam""))
                  :mod (a / all))
            :ARG2 (c2 / condemn-01
                  :ARG0 p
                  :ARG1 (m2 / murder-01
                        :mod (t / this))))
      :snt3 (p2 / preach-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (m3 / message-01
                  :ARG1 (a2 / and
                        :op1 (p3 / peace)
                        :op2 (t2 / tolerate-01)
                        :op3 (l / love-01)
                        :poss r2))))"
the word shouldn't be . It's .,"# ::snt the word shouldn't be . It's .
(m / multi-sentence
      :snt1 (r / recommend-01
            :polarity -
            :ARG1 (w / word))
      :snt2 (ii / it))"
"This man deserves a posthumous medal, the highest civil honour France can award.","# ::snt This man deserves a posthumous medal, the highest civil honour France can award.
(d / deserve-01
      :ARG0 (m / man
            :mod (t / this))
      :ARG1 (m2 / medal
            :mod (p / posthumous)
            :ARG1-of (m3 / mean-01
                  :ARG2 (a / award-01
                        :ARG0 (c / country
                              :name (n / name
                                    :op1 ""France""))
                        :ARG1 (h / honor
                              :mod (c2 / civil)
                              :ARG1-of (h2 / have-degree-91
                                    :ARG2 (h3 / high-02
                                          :ARG1 h)
                                    :ARG3 (m4 / most)))
                        :ARG1-of (p2 / possible-01)))))"
