comment,amr
some people are so fucked up,"# ::snt some people are so fucked up
(f / fuck-up-02
      :ARG1 (p / person
            :mod (s / some))
      :degree (s2 / so))"
thanks alex,"# ::snt thanks alex
(t / thank-01
      :ARG1 (p / person
            :name (n / name
                  :op1 ""alex"")))"
scary situation hopefully things get solved,"# ::snt scary situation hopefully things get solved
(s / solve-01
      :ARG1 (s2 / situation
            :ARG0-of (s3 / scary-03))
      :ARG1-of (h / hope-01))"
thank u love,"# ::snt thank u love
(t / thank-01
      :ARG1 (y / you)
      :ARG2 (l / love))"
ily,"# ::snt ily
(p / person
      :name (n / name
            :op1 ""ily""))"
,"# ::snt 
(a / amr-empty)"
thankyou alex. Its hit close to home. I only live a few hours from sydney,"# ::snt thankyou alex. Its hit close to home. I only live a few hours from sydney
(m / multi-sentence
      :snt1 (t / thank-01
            :ARG0 (ii / i)
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""alex"")))
      :snt2 (h / hit-01
            :ARG1 (ii2 / it)
            :ARG1-of (c / close-10
                  :ARG2 (h2 / home)))
      :snt3 (l / live-01
            :ARG0 (ii3 / i)
            :location (r / relative-position
                  :op1 (c2 / city
                        :name (n2 / name
                              :op1 ""Sydney""))
                  :quant (f / few
                        :op1 (t2 / temporal-quantity
                              :quant 1
                              :unit (h3 / hour)))
                  :mod (o / only))))"
you're so nice,"# ::snt you're so nice
(n / nice-01
      :ARG1 (y / you)
      :degree (s / so))"
love you,"# ::snt love you
(l / love-01
      :ARG0 (ii / i)
      :ARG1 (y / you))"
yeah we all are!,"# ::snt yeah we all are!
(w / we
      :mod (a / all)
      :mod (y / yeah
            :mode expressive))"
,"# ::snt 
(a / amr-empty)"
love you,"# ::snt love you
(l / love-01
      :ARG0 (ii / i)
      :ARG1 (y / you))"
thank you x,"# ::snt thank you x
(t / thank-01
      :ARG0 (ii / i)
      :ARG1 (y / you))"
Whats going on in Sydney?,"# ::snt Whats going on in Sydney?
(e / event
      :mod (a / amr-unknown)
      :location (c / city
            :name (n / name
                  :op1 ""Sydney"")))"
Alex I love you,"# ::snt Alex I love you
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (l / love-01
            :ARG0 ii
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""Alex"")))
      :ARG2 p)"
luv u,"# ::snt luv u
(p / person
      :name (n / name
            :op1 ""luv""
            :op2 ""U""))"
Thats good. Im glad it was all taken care of,"# ::snt Thats good. Im glad it was all taken care of
(m / multi-sentence
      :snt1 (g / good-02
            :ARG1 (t / that))
      :snt2 (g2 / glad-02
            :ARG0 (c / care-03
                  :ARG1 (ii / it
                        :mod (a / all)))
            :ARG1 (ii2 / i)))"
yeah. Its all over now which is good,"# ::snt yeah. Its all over now which is good
(m / multi-sentence
      :snt1 (y / yeah)
      :snt2 (a / all-over
            :domain (ii / it)
            :time (n / now)
            :ARG1-of (g / good-02)))"
Oh shit,"# ::snt Oh shit
(s / shit
      :mode expressive
      :mod (o / oh))"
Wait whats going on in Sydney?,"# ::snt Wait whats going on in Sydney?
(w / wait-01
      :mode imperative
      :ARG1 (y / you)
      :ARG2 (e / event
            :location (c / city
                  :name (n / name
                        :op1 ""Sydney""))
            :mod (a / amr-unknown)))"
thank you alex,"# ::snt thank you alex
(t / thank-01
      :ARG0 (ii / i)
      :ARG1 (p / person
            :name (n / name
                  :op1 ""alex"")))"
love you,"# ::snt love you
(l / love-01
      :ARG0 (ii / i)
      :ARG1 (y / you))"
there was a an islamic man that took a cafe hostage.,"# ::snt there was a an islamic man that took a cafe hostage.
(m / man
      :mod (r / religious-group
            :name (n / name
                  :op1 ""Islam""))
      :ARG0-of (t / take-01
            :ARG1 (c / cafe)
            :ARG2 (h / hostage)))"
ALEX OHMDID,"# ::snt ALEX OHMDID
(p / person
      :name (n / name
            :op1 ""AlEX""
            :op2 ""OhMDID""))"
