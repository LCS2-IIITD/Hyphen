comment,amr
MT : nearly perfect loop around crash area by EC-135.,"# ::snt MT : nearly perfect loop around crash area by EC-135.
(l / loop-01
      :ARG0 (p / product
            :name (n / name
                  :op1 ""EC-135""))
      :location (a / around
            :op1 (a2 / area
                  :location-of (c / crash-01)))
      :ARG1-of (p2 / perfect-02
            :degree (n2 / near))
      :ARG1-of (s / say-01
            :ARG0 (ii / i)
            :ARG2 (p3 / person
                  :name (n3 / name
                        :op1 ""MT""))))"
: nearly perfect loop around crash area by EC-135.,"# ::snt : nearly perfect loop around crash area by EC-135.
(l / loop-01
      :ARG0 (p / product
            :name (n / name
                  :op1 ""EC-135""))
      :location (a / around
            :op1 (a2 / area
                  :location-of (c / crash-01)))
      :ARG1-of (p2 / perfect-02
            :degree (n2 / near)))"
this has more rts than any selfie of mine kys aircraft twitter,"# ::snt this has more rts than any selfie of mine kys aircraft twitter
(p / publication
      :name (n / name
            :op1 ""Twitter"")
      :medium-of (h / have-03
            :ARG0 (t / this)
            :ARG1 p
            :ARG1-of (h2 / have-quant-91
                  :ARG3 (m / more)
                  :ARG4 (s / selfie
                        :mod (a / any)
                        :topic (a2 / aircraft
                              :poss (ii / i))))))"
"hopefully MARCOT27 will provide us with images soon, its going for its fourth flyby","# ::snt hopefully MARCOT27 will provide us with images soon, its going for its fourth flyby
(a / and
      :op1 (p / provide-01
            :ARG0 (p2 / program
                  :name (n / name
                        :op1 ""MarCOT27""))
            :ARG1 (ii / image)
            :ARG2 (w / we)
            :time (s / soon)
            :ARG1-of (h / hope-01))
      :op2 (g / go-03
            :ARG0 p2
            :ARG1 (f / flyby
                  :ord (o / ordinal-entity
                        :value 4))))"
"Not retired, re-engined to R spec, was still flying &amp; pohtographed in .","# ::snt Not retired, re-engined to R spec, was still flying &amp; pohtographed in .
(a / and
      :op1 (r / retire-01
            :polarity -
            :ARG0 (ii / i))
      :op2 (r2 / reengine-01
            :polarity -
            :ARG1 ii
            :ARG2 (t / thing
                  :name (n / name
                        :op1 ""R""
                        :op2 ""Star"")))
      :op3 (f / fly-01
            :polarity -
            :ARG0 ii
            :mod (s / still))
      :op4 (p / polish-01
            :polarity -
            :ARG0 ii
            :ARG1 ii))"
"flight path of EC135 originates at Istres AFB, south .","# ::snt flight path of EC135 originates at Istres AFB, south .
(o / originate-01
      :ARG1 (p / path
            :path-of (f / fly-01
                  :ARG2 (a / aircraft-type
                        :name (n / name
                              :op1 ""EC135""))))
      :ARG2 (f2 / facility
            :name (n2 / name
                  :op1 ""Istres""
                  :op2 ""Airbus"")
            :location (s / south)))"
"yes, not EC-135. planefinder suggested EC135 lifter, retired in globally","# ::snt yes, not EC-135. planefinder suggested EC135 lifter, retired in globally
(m / multi-sentence
      :snt1 (y / yes
            :polarity -
            :domain (t / thing
                  :name (n / name
                        :op1 ""EC-135"")))
      :snt2 (s / suggest-01
            :ARG0 (p / person
                  :name (n2 / name
                        :op1 ""Planefinder""))
            :ARG1 (t2 / thing
                  :ARG0-of (l / lifter-01
                        :ARG1 t)
                  :ARG1-of (r / retire-01
                        :location (g / globe)))))"
French is operating EC-135 Helicopters,"# ::snt French is operating EC-135 Helicopters
(o / operate-01
      :ARG0 (p / person
            :mod (c / country
                  :name (n / name
                        :op1 ""France"")))
      :ARG1 (a / aircraft-type
            :name (n2 / name
                  :op1 ""EC-135""
                  :op2 ""Helicopter"")))"
"The Boeing EC is not operated by the French either. Are you talking about the ""K""C ?","# ::snt The Boeing EC is not operated by the French either. Are you talking about the ""K""C ?
(m / multi-sentence
      :snt1 (o / operate-01
            :polarity -
            :ARG0 (p / person
                  :mod (c / country
                        :name (n / name
                              :op1 ""France"")))
            :ARG1 (a / aircraft-type
                  :name (n2 / name
                        :op1 ""Boeing""
                        :op2 ""EC""))
            :mod (e / either))
      :snt2 (t / talk-01
            :ARG0 (y / you)
            :ARG1 (a2 / aircraft-type
                  :name (n3 / name
                        :op1 ""K""
                        :op2 ""C""))
            :polarity (a3 / amr-unknown)))"
"Actually, most likely a KC-135, right? as EC is retired, possibly a database confusion","# ::snt Actually, most likely a KC-135, right? as EC is retired, possibly a database confusion
(r / request-confirmation-91
      :ARG1 (l / likely-01
            :ARG1 (a / aircraft-type
                  :name (n / name
                        :op1 ""KC-135""))
            :ARG1-of (a2 / actual-02)
            :ARG1-of (c / cause-01
                  :ARG0 (a3 / and
                        :op1 (r2 / retire-01
                              :ARG1 (t / thing
                                    :name (n2 / name
                                          :op1 ""EC"")))
                        :op2 (c2 / confuse-01
                              :ARG2 (d / database)
                              :ARG1-of (p / possible-01))))
            :ARG2-of (h / have-degree-91
                  :ARG1 a
                  :ARG3 (m / most))))"
"aerodrome*, maybe attempted a landing there","# ::snt aerodrome*, maybe attempted a landing there
(m / multi-sentence
      :snt1 (a / aerodrome)
      :snt2 (p / possible-01
            :ARG1 (a2 / attempt-01
                  :ARG1 (l / land-01
                        :ARG2 (t / there)))))"
ping,"# ::snt ping
(p / ping-01)"
"Yep, planefinder corrected it. KC-135","# ::snt Yep, planefinder corrected it. KC-135
(m / multi-sentence
      :snt1 (c / correct-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Planefinder""))
            :ARG1 (ii / it))
      :snt2 (t / thing
            :name (n2 / name
                  :op1 ""KC-135"")))"
it's going around for another run,"# ::snt it's going around for another run
(g / go-01
      :ARG1 (ii / it)
      :direction (a / around)
      :purpose (r / run-13
            :ARG0 ii
            :mod (a2 / another)))"
back around on a third run,"# ::snt back around on a third run
(r / run-13
      :ord (o / ordinal-entity
            :value 3)
      :direction (b / back))"
"seems to be the only air force vehicle in the area or even of any type involved in finding , hope more appear soon","# ::snt seems to be the only air force vehicle in the area or even of any type involved in finding , hope more appear soon
(a / and
      :op1 (s / seem-01
            :ARG1 (o / or
                  :op1 (v / vehicle
                        :mod (o2 / only)
                        :mod (m / military
                              :name (n / name
                                    :op1 ""Air""
                                    :op2 ""Force""))
                        :location (a2 / area))
                  :op2 (v2 / vehicle
                        :mod (t / type
                              :mod (a3 / any))
                        :ARG1-of (ii / involve-01
                              :ARG2 (f / find-01))
                        :mod (e / even))))
      :op2 (h / hope-01
            :ARG1 (a4 / appear-01
                  :ARG1 (v3 / vehicle
                        :quant (m2 / more))
                  :time (s2 / soon))))"
"maybe planefinder has a faulty database. I thought it looked wrong, why bring it out of retirement?","# ::snt maybe planefinder has a faulty database. I thought it looked wrong, why bring it out of retirement?
(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (h / have-03
                  :ARG0 (c / company
                        :name (n / name
                              :op1 ""Planefinder""))
                  :ARG1 (d / database
                        :ARG1-of (f / fault-02
                              :polarity -))))
      :snt2 (t / think-01
            :ARG0 (ii / i)
            :ARG1 (l / look-02
                  :ARG0 (ii2 / it)
                  :ARG1 (w / wrong-04
                        :ARG1 ii2)))
      :snt3 (b / bring-01
            :ARG1 ii2
            :ARG2 (o / out-06
                  :ARG2 (r / retire-01))
            :ARG1-of (c2 / cause-01
                  :ARG0 (a / amr-unknown))))"
"very possible, very visual from the air, very active landing strip","# ::snt very possible, very visual from the air, very active landing strip
(a / and
      :op1 (p / possible-01
            :degree (v / very))
      :op2 (v2 / visual
            :degree (v3 / very)
            :source (a2 / air))
      :op3 (s / strip
            :purpose (l / land-01)
            :ARG0-of (a3 / activity-06
                  :degree (v4 / very))))"
"going around for its FOURTH run now, hopefully we'll get some images soon?","# ::snt going around for its FOURTH run now, hopefully we'll get some images soon?
(a / and
      :op1 (g / go-02
            :ARG1 (ii / it)
            :direction (a2 / around)
            :duration (r / run-13
                  :ARG0 ii
                  :ord (o / ordinal-entity
                        :value 4))
            :time (n / now))
      :op2 (h / hope-01
            :ARG1 (g2 / get-01
                  :ARG0 (w / we)
                  :ARG1 (ii2 / image
                        :quant (s / some))
                  :time (s2 / soon))
            :polarity (a3 / amr-unknown)))"
"read the photo details, please. EC-135 lifter, not helicopter.","# ::snt read the photo details, please. EC-135 lifter, not helicopter.
(m / multi-sentence
      :snt1 (r / read-01
            :mode imperative
            :polite +
            :ARG0 (y / you)
            :ARG1 (d / detail
                  :mod (p / photo)))
      :snt2 (c / contrast-01
            :ARG1 (l / lifter
                  :poss (a / aircraft-type
                        :name (n / name
                              :op1 ""EC-135"")))
            :ARG2 (h / helicopter
                  :polarity -)))"
this tweet is on fire,"# ::snt this tweet is on fire
(o / on-fire-08
      :ARG1 (t / thing
            :ARG1-of (t2 / tweet-01)
            :mod (t3 / this)))"
Neither the french air force nor the french army are operating EC Helicopters.,"# ::snt Neither the french air force nor the french army are operating EC Helicopters.
(o / operate-01
      :polarity -
      :ARG0 (a / and
            :op1 (m / military
                  :name (n / name
                        :op1 ""Air""
                        :op2 ""Force"")
                  :mod (c / country
                        :name (n2 / name
                              :op1 ""France"")))
            :op2 (m2 / military
                  :name (n3 / name
                        :op1 ""Army"")
                  :mod c))
      :ARG1 (h / helicopter
            :name (n4 / name
                  :op1 ""EC""
                  :op2 ""Helicopter"")))"
Let us hope it was not related to terror.,"# ::snt Let us hope it was not related to terror.
(h / hope-01
      :mode imperative
      :ARG0 (w / we)
      :ARG1 (r / relate-01
            :polarity -
            :ARG1 (ii / it)
            :ARG2 (t / terror)))"
"It's not an EC-135 helo, it's a KC-135R. Possibly providing comms relay support.","# ::snt It's not an EC-135 helo, it's a KC-135R. Possibly providing comms relay support.
(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (h / helo
                  :polarity -
                  :mod (a / aircraft-type
                        :name (n / name
                              :op1 ""EC-135"")))
            :ARG2 (a2 / aircraft-type
                  :name (n2 / name
                        :op1 ""KC-135R"")
                  :domain (ii / it)))
      :snt2 (p / possible-01
            :ARG1 (p2 / provide-01
                  :ARG0 ii
                  :ARG1 (s / support-01
                        :ARG0 (c2 / comms
                              :ARG0-of (r / relay-01))))))"
Tallard airport is just in the circle. Its a pretty big strip.,"# ::snt Tallard airport is just in the circle. Its a pretty big strip.
(m / multi-sentence
      :snt1 (a / airport
            :name (n / name
                  :op1 ""Tallard"")
            :location (c / circle
                  :mod (j / just)))
      :snt2 (s / strip
            :mod (b / big
                  :degree (p / pretty))
            :domain (ii / it)))"
