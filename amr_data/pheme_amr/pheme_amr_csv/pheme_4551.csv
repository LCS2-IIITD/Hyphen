comment,amr
Terrorist or murderer? Either way a despicable act which cannot be forgiven,"# ::snt Terrorist or murderer? Either way a despicable act which cannot be forgiven
(m / multi-sentence
      :snt1 (a / amr-choice
            :op1 (t / terrorist)
            :op2 (p / person
                  :ARG0-of (m2 / murder-01)))
      :snt2 (a2 / act-02
            :mod (d / despicable)
            :ARG1-of (f / forgive-01
                  :ARG1-of (p2 / possible-01
                        :polarity -))
            :mod (w / way
                  :mod (e / either))))"
Oh God no! Not Pilot suicide. What a terrible nightmare for the families.,"# ::snt Oh God no! Not Pilot suicide. What a terrible nightmare for the families.
(m / multi-sentence
      :snt1 (h / have-polarity-91
            :ARG2 -
            :mod (o / oh
                  :mode expressive
                  :mod (g / god)))
      :snt2 (s / suicide
            :polarity -
            :mod (p / pilot-01))
      :snt3 (n / nightmare
            :ARG1-of (t / terrible-01
                  :degree (s2 / so))
            :beneficiary (f / family)))"
://,"# ::snt ://
(e / emoticon
      :value ""://"")"
: Update - flight co-pilot is Andreas Lubitz and there are strong signs he crashed on purpose,"# ::snt : Update - flight co-pilot is Andreas Lubitz and there are strong signs he crashed on purpose
(u / update-02
      :ARG2 (a / and
            :op1 (p / person
                  :name (n / name
                        :op1 ""Andreas""
                        :op2 ""Lubitz"")
                  :ARG0-of (p2 / pilot-01
                        :ARG1 (f / fly-01))
                  :domain p))
      :op2 (s / signal-07
            :ARG1 (c / crash-01
                  :ARG0 p
                  :ARG1-of (h / have-purpose-91))
            :ARG1-of (s2 / strong-02)))"
OMG!,"# ::snt OMG!
(o / oh-my-god
      :mode expressive)"
your theory is true about pilots!,"# ::snt your theory is true about pilots!
(t / true-01
      :ARG1 (t2 / theory
            :poss (y / you))
      :ARG2 (p / person
            :ARG0-of (p2 / pilot-01)))"
true,"# ::snt true
(t / true-01)"
what the hell why would he do that,"# ::snt what the hell why would he do that
(d / do-02
      :ARG0 (h / he)
      :ARG1 (t / that)
      :ARG1-of (c / cause-01
            :ARG0 (a / amr-unknown)
            :mod (h2 / hell
                  :mode expressive)))"
What the fuck was he thinking ? Why ? Why ? Why ? Why take the lives of so many innocent people ?,"# ::snt What the fuck was he thinking ? Why ? Why ? Why ? Why take the lives of so many innocent people ?
(m / multi-sentence
      :snt1 (t / think-01
            :ARG0 (h / he)
            :ARG1 (a / amr-unknown)
            :mod (f / fuck
                  :mode expressive))
      :snt2 (c / cause-01
            :ARG0 (a2 / amr-unknown))
      :snt3 (c2 / cause-01
            :ARG0 (a3 / amr-unknown))
      :snt4 (c3 / cause-01
            :ARG0 (a4 / amr-unknown))
      :snt5 (t2 / take-01
            :ARG1 (l / life
                  :poss (p / person
                        :ARG1-of (ii / innocent-01)
                        :ARG1-of (h2 / have-quant-91
                              :ARG2 (m2 / many)
                              :ARG3 (s / so))))))"
"Anyone can become suicidal, but nothings worse than a suicidal airline pilot. If that's what's happened here.","# ::snt Anyone can become suicidal, but nothings worse than a suicidal airline pilot. If that's what's happened here.
(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (p / possible-01
                  :ARG1 (b / become-01
                        :ARG1 (a / anyone)
                        :ARG2 (s / suicide)))
            :ARG2 (h / have-degree-91
                  :ARG1 (n / nothing)
                  :ARG2 (b2 / bad-07
                        :ARG1 n)
                  :ARG3 (m2 / more)
                  :ARG4 (p2 / person
                        :ARG0-of (p3 / pilot-01
                              :ARG1 (a2 / airline))
                        :mod (s2 / suicide))))
      :snt2 (h2 / have-condition-91
            :ARG2 (e / event
                  :location (h3 / here)
                  :domain (t / that))))"
omg this is so crazy.,"# ::snt omg this is so crazy.
(c / crazy-03
      :ARG1 (t / this)
      :degree (s / so)
      :mod (o / oh-my-god
            :mode expressive))"
Yep!!! Been saying it for a while now. Hmmm. Wonder how many others have done the same thing!!,"# ::snt Yep!!! Been saying it for a while now. Hmmm. Wonder how many others have done the same thing!!
(m / multi-sentence
      :snt1 (y / yep
            :mode expressive)
      :snt2 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (ii2 / it)
            :duration (w / while)
            :time (n / now))
      :snt3 (h / hmm
            :mode expressive)
      :snt4 (w2 / wonder-01
            :mode expressive
            :ARG0 (ii3 / i)
            :ARG1 (n2 / number
                  :quant-of (o / other
                        :ARG0-of (d / do-02
                              :ARG1 (t / thing
                                    :ARG1-of (s2 / same-01)))))))"
it's mass murder before suicide,"# ::snt it's mass murder before suicide
(m / murder-01
      :mod (m2 / mass)
      :time (b / before
            :op1 (s / suicide)))"
Once again Scoops this time with name of copilot,"# ::snt Once again Scoops this time with name of copilot
(p / person
      :name (n / name
            :op1 ""Scoops"")
      :mod (a / again
            :mod (o / once))
      :ARG2-of (n2 / name-01
            :ARG1 (c / copilot)))"
"If true, the locked cabin policy to stop hijack/terror attempts has become one to permit terror. awaited","# ::snt If true, the locked cabin policy to stop hijack/terror attempts has become one to permit terror. awaited
(b / become-01
      :ARG1 (p / policy-01
            :ARG1 (s / stop-01
                  :ARG1 (a / attempt-01
                        :ARG1 (a2 / and
                              :op1 (h / hijack-01)
                              :op2 (t / terror)))
                  :location (c / cabin)
                  :ARG1-of (l / lock-01)))
      :ARG2 (p2 / permit-01
            :ARG0 p
            :ARG1 (t2 / terror))
      :condition (t3 / true-01
            :ARG1 p))"
: Crashed flight co-pilot is Andreas Lubitz and there are strong signs he crashed on purposeTerrorism,"# ::snt : Crashed flight co-pilot is Andreas Lubitz and there are strong signs he crashed on purposeTerrorism
(a / and
      :op1 (p / person
            :name (n / name
                  :op1 ""Andreas""
                  :op2 ""Lubitz"")
            :ARG0-of (p2 / pilot-01
                  :ARG1 (f / fly-01
                        :ARG1-of (s / smash-01)))
            :domain p
            :ARG0-of (c / crash-01))
      :op2 (s2 / signal-07
            :ARG1 (c2 / crash-01
                  :ARG1 p
                  :purpose (p3 / purpose))
            :ARG1-of (s3 / strong-02)))"
as if flying isn't stressful enough already Now we have cowardly guys killing people from the cockpit Great,"# ::snt as if flying isn't stressful enough already Now we have cowardly guys killing people from the cockpit Great
(m / multi-sentence
      :snt1 (h / have-conj-as-if
            :polarity -
            :ARG0 (f / fly-01)
            :time (a / already)
            :ARG2-of (h2 / have-degree-91
                  :ARG1 f
                  :ARG3 (e / enough)))
      :snt2 (h3 / have-03
            :ARG0 (w / we)
            :ARG1 (g / guy
                  :mod (c / cowardly)
                  :ARG0-of (k / kill-01
                        :ARG1 (p / person)
                        :location (c2 / cockpit)))
            :time (n / now)
            :mod (g2 / great)))"
They shouldn't release him name - he clearly wanted the notoriety,"# ::snt They shouldn't release him name - he clearly wanted the notoriety
(c / cause-01
      :ARG0 (w / want-01
            :ARG0 (h / he)
            :ARG1 (f / fame-01
                  :ARG1 h)
            :ARG1-of (c2 / clear-06))
      :ARG1 (r / recommend-01
            :polarity -
            :ARG1 (r2 / release-01
                  :ARG0 (t / they)
                  :ARG1 (n / name
                        :poss h))))"
dude!,"# ::snt dude!
(d / dude)"
what the fuck,"# ::snt what the fuck
(a / amr-unknown
      :mod (f / fuck))"
: Prosecutor confirms crashed flight co-pilot is Andreas Lubitz &amp; there are strong signs he crashed on purpose,"# ::snt : Prosecutor confirms crashed flight co-pilot is Andreas Lubitz &amp; there are strong signs he crashed on purpose
(m / multi-sentence
      :snt1 (c / confirm-01
            :ARG0 (p / person
                  :ARG0-of (p2 / prosecute-01))
            :ARG1 (c2 / crash-01
                  :ARG1 (p3 / person
                        :name (n / name
                              :op1 ""Andreas""
                              :op2 ""Lubitz""
                              :op3 ""&""
                              :op4 ""amp"")
                        :ARG0-of (p4 / pilot-01
                              :ARG1 (f / fly-01)))))
      :snt2 (s / signal-07
            :ARG1 (c3 / crash-01
                  :ARG1 (h / he)
                  :purpose (p5 / purpose))
            :ARG1-of (s2 / strong-02)))"
