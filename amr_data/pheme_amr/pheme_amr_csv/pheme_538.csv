comment,amr
not intentional altitude at that rate of descent I would think.,"# ::snt not intentional altitude at that rate of descent I would think.
(t / think-01
      :ARG0 (ii / i)
      :ARG1 (a / altitude
            :ARG1-of (ii2 / intend-01
                  :polarity -)
            :condition (r / rate
                  :degree-of (d / descend-01)
                  :mod (t2 / that))))"
yep for sure.,"# ::snt yep for sure.
(s / sure-02
      :degree (y / yep))"
: Flightradar24 has this as the plane's last position.,"# ::snt : Flightradar24 has this as the plane's last position.
(h / have-03
      :ARG0 (p / publication
            :name (n / name
                  :op1 ""Flightradar24""))
      :ARG1 (t / this
            :prep-as (p2 / position
                  :mod (l / last)
                  :poss (p3 / plane))))"
: Flightradar24 has this as the plane's last position.,"# ::snt : Flightradar24 has this as the plane's last position.
(h / have-03
      :ARG0 (p / publication
            :name (n / name
                  :op1 ""Flightradar24""))
      :ARG1 (t / this
            :prep-as (p2 / position
                  :mod (l / last)
                  :poss (p3 / plane))))"
It's the Vertical Speed of fpm and the speed of the aircraft of kt which is most concerning,"# ::snt It's the Vertical Speed of fpm and the speed of the aircraft of kt which is most concerning
(h / have-degree-91
      :ARG1 (a / and
            :op1 (s / speed
                  :mod (v / Vertical)
                  :poss (a2 / aircraft
                        :poss (c / company
                              :name (n / name
                                    :op1 ""KT""))))
            :op2 (s2 / speed
                  :poss a2))
      :ARG2 (c2 / concern-01
            :ARG0 a)
      :ARG3 (m / most))"
yep. That's what I was thinking.,"# ::snt yep. That's what I was thinking.
(m / multi-sentence
      :snt1 (y / yep)
      :snt2 (t / think-01
            :ARG0 (ii / i)
            :ARG1 (t2 / that)))"
Awful news today - if nothing else it's indirect terrorism... If /11 had never happened that door could have been opened.,"# ::snt Awful news today - if nothing else it's indirect terrorism... If /11 had never happened that door could have been opened.
(m / multi-sentence
      :snt1 (n / news
            :mod (a / awful)
            :time (t / today))
      :snt2 (p / possible-01
            :ARG1 (o / open-01
                  :ARG1 (d / door
                        :mod (t2 / that)))
            :condition (ii / incident
                  :polarity -
                  :name (n2 / name
                        :op1 ""9/11"")
                  :time (e / ever))
            :condition (t3 / terrorism
                  :ARG1-of (d2 / direct-02
                        :polarity -)
                  :mod (e2 / else))))"
reminds me a bit too much of the Helios crash in Greece when everyone was unconscious,"# ::snt reminds me a bit too much of the Helios crash in Greece when everyone was unconscious
(r / remind-01
      :ARG1 (c / crash-01
            :ARG1 (s / ship
                  :name (n / name
                        :op1 ""Helios""))
            :location (c2 / country
                  :name (n2 / name
                        :op1 ""Greece""))
            :time (c3 / conscious
                  :polarity -
                  :domain (e / everyone))
            :ARG1-of (h / have-quant-91
                  :ARG2 (m / much)
                  :ARG3 (t / too
                        :degree (b / bit))))
      :ARG2 (ii / i))"
"very low, but was it flying low or on its way down when that reading was taken?","# ::snt very low, but was it flying low or on its way down when that reading was taken?
(c / contrast-01
      :ARG1 (l / low-04
            :degree (v / very))
      :ARG2 (a / amr-choice
            :op1 (f / fly-01
                  :ARG1 (ii / it)
                  :ARG2 l)
            :op2 (g / go-01
                  :ARG1 ii
                  :ARG4 (d / down)
                  :time (t / take-01
                        :ARG1 (r / read-01
                              :mod (t2 / that))))))"
no mayday ?,"# ::snt no mayday ?
(m / mayday
      :polarity (a / amr-unknown))"
"rate of descent very steep, though groundspeed suggests it wasn't stalled + falling out of sky","# ::snt rate of descent very steep, though groundspeed suggests it wasn't stalled + falling out of sky
(h / have-concession-91
      :ARG1 (s / steep
            :degree (v / very)
            :domain (r / rate
                  :degree-of (d / descend-01)))
      :ARG2 (s2 / suggest-01
            :ARG0 (s3 / speed
                  :mod (g / ground))
            :ARG1 (a / and
                  :op1 (s4 / stall-01
                        :polarity -
                        :ARG1 (ii / it))
                  :op2 (f / fall-01
                        :polarity -
                        :ARG1 ii
                        :ARG3 (s5 / sky)))))"
yes. Not nice at all,"# ::snt yes. Not nice at all
(m / multi-sentence
      :snt1 (y / yes)
      :snt2 (n / nice-01
            :polarity -
            :degree (a / at-all)))"
very odd,"# ::snt very odd
(o / odd
      :degree (v / very))"
"Just looked at this.. Starts decending as soon as it hits , takes minutes to come down to .","# ::snt Just looked at this.. Starts decending as soon as it hits , takes minutes to come down to .
(m / multi-sentence
      :snt1 (l / look-01
            :ARG0 (ii / i)
            :ARG1 (t / this)
            :mod (j / just))
      :snt2 (a / and
            :op1 (s / start-01
                  :ARG1 (d / decay-01)
                  :time (a2 / as-soon-as
                        :op1 (h / hit-01
                              :ARG1 (ii2 / it))))
            :op2 (t2 / take-10
                  :ARG0 (c / come-down-23
                        :ARG2 ii2)
                  :ARG1 (m2 / multiple
                        :op1 (t3 / temporal-quantity
                              :quant 1
                              :unit (m3 / minute))))))"
ft far too low RT : Flightradar24 has this as the plane's last position.,"# ::snt ft far too low RT : Flightradar24 has this as the plane's last position.
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (h / have-03
            :ARG0 (a / aircraft-type
                  :name (n / name
                        :op1 ""Flightradar24""))
            :ARG1 (t / this)
            :prep-as (p / position
                  :mod (l / last)
                  :poss (p2 / plane)))
      :ARG2 (p3 / person
            :name (n2 / name
                  :op1 ""RT""))
      :ARG1-of (h2 / have-degree-91
            :ARG2 (l2 / low-04
                  :ARG1 p3)
            :ARG3 (t2 / too
                  :quant (f / far))))"
