comment,amr
"you said it before I could.....true, true.","# ::snt you said it before I could.....true, true.
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (y / you)
            :ARG1 (ii / it)
            :time (b / before
                  :op1 (p / possible-01
                        :ARG1 (d / do-02
                              :ARG0 (ii2 / i)))))
      :snt2 (t / true-01)
      :snt3 (t2 / true-01))"
"If you are a western power you are a liberator, if you are not wanting liberated and feel oppressed so fight back, terrorist","# ::snt If you are a western power you are a liberator, if you are not wanting liberated and feel oppressed so fight back, terrorist
(a / and
      :op1 (p / person
            :ARG0-of (l / liberate-01)
            :domain (y / you)
            :condition (p2 / power
                  :mod (w / world-region
                        :name (n / name
                              :op1 ""West""))
                  :domain y))
      :op2 (c / cause-01
            :ARG0 (a2 / and
                  :op1 (w2 / want-01
                        :polarity -
                        :ARG0 y
                        :ARG1 (l2 / liberate-01
                              :ARG1 y))
                  :op2 (f / feel-01
                        :polarity -
                        :ARG0 y
                        :ARG1 (o / oppress-01
                              :ARG1 y)))
            :ARG1 (f2 / fight-back-04
                  :mode imperative
                  :ARG0 y
                  :ARG1 p2))
      :ARG1-of (s / say-01
            :ARG0 (ii / i)
            :ARG2 (t / terrorist)))"
words are made weak when these actions speak,"# ::snt words are made weak when these actions speak
(m / make-02
      :ARG1 (w / weak-02
            :ARG1 (w2 / word))
      :time (s / speak-01
            :ARG0 (a / act-02
                  :mod (t / this))))"
little Gaza?,"# ::snt little Gaza?
(c / country-region
      :name (n / name
            :op1 ""Gaza"")
      :polarity (a / amr-unknown)
      :mod (l / little))"
"You guess photo of war? Yes, you are right. This is a war between oppressor &amp; oppressed.","# ::snt You guess photo of war? Yes, you are right. This is a war between oppressor &amp; oppressed.
(m / multi-sentence
      :snt1 (g / guess-01
            :polarity (a / amr-unknown)
            :ARG0 (y / you)
            :ARG1 (p / photo
                  :topic (w / war)))
      :snt2 (r / right-06
            :ARG1 (y2 / you)
            :ARG2 (w2 / war
                  :mod (b / between
                        :op1 (p2 / person
                              :ARG1-of (o / oppress-01))
                        :op2 (p3 / person
                              :ARG1-of (o2 / oppress-01)))
                  :domain (t / this))))"
police force is to the protesters what Israel is to : fascistic.,"# ::snt police force is to the protesters what Israel is to : fascistic.
(h / have-mod-91
      :ARG1 (f / force
            :mod (p / police))
      :ARG2 (p2 / person
            :ARG0-of (p3 / protest-01))
      :ARG1-of (m / mean-01
            :ARG2 (h2 / have-mod-91
                  :ARG1 (c / country
                        :name (n / name
                              :op1 ""Israel""))
                  :ARG2 (f2 / fascistic))))"
"""No one is free when others are oppressed."" Palestine+African Americans=full display of US racist practices.","# ::snt ""No one is free when others are oppressed."" Palestine+African Americans=full display of US racist practices.
(m / multi-sentence
      :snt1 (f / free-04
            :ARG1 (n / no-one)
            :time (o / oppress-01
                  :ARG1 (o2 / other)))
      :snt2 (d / display-01
            :ARG1 (p / practice-01
                  :ARG0 (c / country
                        :name (n2 / name
                              :op1 ""US""))
                  :ARG1 (r / racism))
            :ARG2 (a / and
                  :op1 (c2 / country
                        :name (n3 / name
                              :op1 ""Palestine""))
                  :op2 (c3 / continent
                        :name (n4 / name
                              :op1 ""Africa"")))
            :degree (f2 / full)))"
