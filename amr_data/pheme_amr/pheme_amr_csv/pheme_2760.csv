comment,amr
Where is your master ?!,"# ::snt Where is your master ?!
(b / be-located-at-91
      :ARG1 (p / person
            :ARG0-of (m / master-01
                  :ARG1 (y / you)))
      :ARG2 (a / amr-unknown))"
oh my god a talking lake.,"# ::snt oh my god a talking lake.
(l / lake
      :ARG0-of (t / talk-01)
      :mod (o / oh-my-god
            :mode expressive))"
You won't understand cause you always have been porked from your meat hole,"# ::snt You won't understand cause you always have been porked from your meat hole
(c / cause-01
      :ARG0 (p / pork-00
            :ARG1 (y / you)
            :source (h / hole
                  :mod (m / meat)
                  :poss y)
            :time (a / always))
      :ARG1 (u / understand-01
            :polarity -
            :ARG0 y))"
"I blocked that POS, I worked out that he's probably , certainly mentally if not in years.","# ::snt I blocked that POS, I worked out that he's probably , certainly mentally if not in years.
(a / and
      :op1 (b / block-01
            :ARG0 (ii / i)
            :ARG1 (p / person
                  :ARG0-of (p2 / post-01
                        :manner (o / original))
                  :mod (t / that)))
      :op2 (w / work-out-02
            :ARG0 ii
            :ARG1 (p3 / probable
                  :domain (m / mental
                        :condition (b2 / be-temporally-at-91
                              :polarity -
                              :ARG1 p
                              :ARG2 (m2 / multiple
                                    :op1 (t2 / temporal-quantity
                                          :quant 1
                                          :unit (y / year))))))))"
Dog's ranting,"# ::snt Dog's ranting
(r / rant-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Dog"")))"
even goats have standards,"# ::snt even goats have standards
(h / have-03
      :ARG0 (g / goat
            :mod (e / even))
      :ARG1 (s / standard))"
he's busy lubing the dildo,"# ::snt he's busy lubing the dildo
(b / busy-01
      :ARG1 (h / he)
      :ARG2 (l / lub-01
            :ARG0 h
            :ARG1 (d / dildo)))"
when you vomit,"# ::snt when you vomit
(b / be-temporally-at-91
      :ARG2 (v / vomit-01
            :ARG0 (y / you)))"
only if you ask nicely,"# ::snt only if you ask nicely
(h / have-condition-91
      :ARG2 (a / ask-01
            :ARG0 (y / you)
            :ARG1-of (n / nice-01)
            :mod (o / only)))"
may his soul rest in peace sympathies to his family,"# ::snt may his soul rest in peace sympathies to his family
(a / and
      :op1 (w / wish-01
            :ARG1 (r / rest-01
                  :ARG1 (s / soul
                        :part-of (h / he))
                  :manner (p / peace)))
      :op2 (s2 / sympathize-01
            :ARG1 (f / family
                  :ARG1-of (h2 / have-org-role-91
                        :ARG0 h
                        :ARG2 (m / member)))))"
Then die and go to Hell,"# ::snt Then die and go to Hell
(a / and
      :op1 (d / die-01
            :ARG1 (y / you))
      :op2 (g / go-02
            :ARG0 y
            :ARG4 (h / hell))
      :time (t / then))"
RIP,"# ::snt RIP
(r / rest-01
      :ARG1 (y / you)
      :manner (p / peace))"
But a Gay hasn't,"# ::snt But a Gay hasn't
(c / contrast-01
      :ARG2 (h / have-06
            :polarity -
            :ARG0 (p / person
                  :ARG1-of (g / gay-01))))"
well briefly they are murdering religious nutters,"# ::snt well briefly they are murdering religious nutters
(m / murder-01
      :ARG0 (t / they)
      :ARG1 (n / nutter
            :mod (r / religious))
      :duration (b / brief)
      :mod (w / well
            :mode expressive))"
rip,"# ::snt rip
(r / rip)"
I (almost) died of boredom reading your bullshit. Cunt,"# ::snt I (almost) died of boredom reading your bullshit. Cunt
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (d / die-01
            :ARG1 ii
            :ARG1-of (c / cause-01
                  :ARG0 (b / bore-02
                        :ARG0 ii
                        :ARG1 (r / read-01
                              :ARG0 ii
                              :ARG1 (b2 / bullshit-01
                                    :ARG0 (y / you)))))
            :mod (a / almost))
      :ARG2 (p / person
            :name (n / name
                  :op1 ""Cunt"")))"
Please stop sending tweets still I am vomiting,"# ::snt Please stop sending tweets still I am vomiting
(s / stop-01
      :mode imperative
      :polite +
      :ARG0 (y / you)
      :ARG1 (s2 / send-01
            :ARG0 y
            :ARG1 (t / tweet-01))
      :mod (s3 / still)
      :ARG1-of (c / cause-01
            :ARG0 (v / vomit-01
                  :ARG0 (ii / i))))"
If he is Canadian and Christian he is retarded but if he is Muslim he is terrorist,"# ::snt If he is Canadian and Christian he is retarded but if he is Muslim he is terrorist
(r / retard-01
      :ARG1 (h / he)
      :condition (c / contrast-01
            :ARG1 (a / and
                  :op1 (p / person
                        :mod (c2 / country
                              :name (n / name
                                    :op1 ""Canada"")))
                  :op2 (p2 / person
                        :mod (r2 / religious-group
                              :name (n2 / name
                                    :op1 ""Christianity"")))
                  :domain h)
            :ARG2 (t / terrorist
                  :domain h
                  :condition a
                  :op1 p
                  :op2 p2)))"
haha!,"# ::snt haha!
(h / haha
      :mode expressive)"
"you need to grow up sonny, you are the retard. Have some respect, you disgusting piece of sub human filth.","# ::snt you need to grow up sonny, you are the retard. Have some respect, you disgusting piece of sub human filth.
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (n / need-01
                  :ARG0 (s2 / sonny)
                  :ARG1 (g / grow-up-04
                        :ARG1 s2)
                  :ARG1-of (c / cause-01
                        :ARG0 (r / retard-01
                              :ARG1 s2)))
            :ARG2 s2)
      :snt2 (r2 / respect-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (y2 / you
                  :mod (p / piece
                        :consist-of (f / filth
                              :mod (s3 / sub)
                              :ARG0-of (d / disgust-01))))
            :mod (s4 / some)))"
Funny .. I have to listen to dogs about ethics,"# ::snt Funny .. I have to listen to dogs about ethics
(f / funny-02
      :ARG1 (o / obligate-01
            :ARG1 (ii / i)
            :ARG2 (l / listen-01
                  :ARG0 ii
                  :ARG1 (d / dog)
                  :topic (e / ethics))))"
why would anyone want to marry you?,"# ::snt why would anyone want to marry you?
(w / want-01
      :ARG0 (a / anyone)
      :ARG1 (m / marry-01
            :ARG0 a
            :ARG1 (y / you))
      :ARG1-of (c / cause-01
            :ARG0 (a2 / amr-unknown)))"
": Canadian media identify the soldier killed in Ottawa, Thoughts are with his family! &lt;3","# ::snt : Canadian media identify the soldier killed in Ottawa, Thoughts are with his family! &lt;3
(m / multi-sentence
      :snt1 (ii / identify-01
            :ARG0 (m2 / media
                  :mod (c / country
                        :name (n / name
                              :op1 ""Canada"")))
            :ARG1 (s / soldier
                  :ARG1-of (k / kill-01
                        :location (c2 / city
                              :name (n2 / name
                                    :op1 ""Ottawa"")))))
      :snt2 (t / think-01
            :ARG0 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 s
                        :ARG2 (f / family)))))"
it's still murder,"# ::snt it's still murder
(m / murder-01
      :mod (s / still)
      :domain (ii / it))"
how awful to hear the solider has died. What is wrong with people?,"# ::snt how awful to hear the solider has died. What is wrong with people?
(m / multi-sentence
      :snt1 (a / awful
            :degree (s / so)
            :domain (h / hear-01
                  :ARG1 (d / die-01
                        :ARG1 (p / person))))
      :snt2 (w / wrong-02
            :ARG1 (a2 / amr-unknown)
            :ARG2 (p2 / person)))"
is that paddy McGinty's goat or is that racist,"# ::snt is that paddy McGinty's goat or is that racist
(a / amr-choice
      :op1 (g / goat
            :poss (p / person
                  :name (n / name
                        :op1 ""Paddy""
                        :op2 ""McGinty""))
            :mod (t / that))
      :op2 (r / racist
            :domain (t2 / that)))"
Please don't bark my kids are sleeping,"# ::snt Please don't bark my kids are sleeping
(b / bark-01
      :mode imperative
      :polite +
      :ARG0 (y / you)
      :time (s / sleep-01
            :ARG0 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (ii / i)
                        :ARG2 (k / kid)))))"
more like his wife is years old,"# ::snt more like his wife is years old
(r / resemble-01
      :ARG2 (a / age-01
            :ARG1 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (h2 / he)
                        :ARG2 (w / wife)))
            :ARG2 (m / multiple
                  :op1 (t / temporal-quantity
                        :quant 1
                        :unit (y / year))))
      :mod (m2 / more))"
Disgusting .... I have vomited after seeing your profile pic,"# ::snt Disgusting .... I have vomited after seeing your profile pic
(d / disgust-01
      :ARG0 (s / see-01
            :ARG0 (ii / i)
            :ARG1 (p / profile-01
                  :ARG0 (y / you))))"
next time make sure you are lying on your back,"# ::snt next time make sure you are lying on your back
(e / ensure-01
      :ARG0 (y / you
            :part (b / back))
      :ARG1 (l / lie-07
            :ARG1 y
            :ARG2 b)
      :time (t / time
            :mod (n / next)))"
no he's a retard as well don't feel left out,"# ::snt no he's a retard as well don't feel left out
(a / and
      :op1 (r / retard-01
            :ARG1 (h / he))
      :op2 (f / feel-01
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (l / left-out-03
                  :ARG1 ii)
            :mod (a2 / as-well)))"
": Canadian media identify the soldier killed in Ottawa as Nathan Cirillo,","# ::snt : Canadian media identify the soldier killed in Ottawa as Nathan Cirillo,
(ii / identify-01
      :ARG0 (m / media
            :mod (c / country
                  :name (n / name
                        :op1 ""Canada"")))
      :ARG1 (s / soldier
            :ARG1-of (k / kill-01
                  :location (c2 / city
                        :name (n2 / name
                              :op1 ""Ottawa""))))
      :ARG2 (p / person
            :name (n3 / name
                  :op1 ""Nathan""
                  :op2 ""Cirillo"")))"
": Canadian media identify the soldier killed in Ottawa as Nathan Cirillo, RIP","# ::snt : Canadian media identify the soldier killed in Ottawa as Nathan Cirillo, RIP
(ii / identify-01
      :ARG0 (m / media
            :mod (c / country
                  :name (n / name
                        :op1 ""Canada"")))
      :ARG1 (s / soldier
            :ARG1-of (k / kill-01
                  :location (c2 / city
                        :name (n2 / name
                              :op1 ""Ottawa""))))
      :ARG2 (p / person
            :name (n3 / name
                  :op1 ""Nathan""
                  :op2 ""Cirillo"")
            :ARG1-of (r / rest-01)))"
He's probably married to a Goat.,"# ::snt He's probably married to a Goat.
(p / probable
      :domain (m / marry-01
            :ARG1 (h / he)
            :ARG2 (g / goat)))"
don't you mean read?,"# ::snt don't you mean read?
(m / mean-01
      :polarity (a / amr-unknown)
      :ARG0 (y / you)
      :ARG2 (r / read-01
            :mode imperative
            :ARG0 y))"
a wife and a string of hookers?,"# ::snt a wife and a string of hookers?
(a / and
      :polarity (a2 / amr-unknown)
      :op1 (p / person
            :ARG0-of (h / have-rel-role-91
                  :ARG2 (w / wife)))
      :op2 (p2 / person
            :ARG0-of (h2 / hook-03)
            :quant (s / string)))"
Sorry I am married,"# ::snt Sorry I am married
(s / sorry-01
      :ARG1 (ii / i)
      :ARG2 (m / marry-01
            :ARG1 ii))"
is that a lake? I thought it was a urine sample,"# ::snt is that a lake? I thought it was a urine sample
(m / multi-sentence
      :snt1 (l / lake
            :domain (t / that)
            :polarity (a / amr-unknown))
      :snt2 (t2 / think-01
            :ARG0 (ii / i)
            :ARG1 (s / sample-01
                  :ARG1 (u / urine)
                  :ARG2 l)))"
"Mins Video Of Kuala Lumpur ""Rain T...: via","# ::snt Mins Video Of Kuala Lumpur ""Rain T...: via
(v / video
      :mod (r / rain-01)
      :source (c / city
            :name (n / name
                  :op1 ""Kuala""
                  :op2 ""Lumpur"")))"
