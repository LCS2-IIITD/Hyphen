comment,amr
typical untrue media reports who are just trying to get viewers no official reports from official sources,"# ::snt typical untrue media reports who are just trying to get viewers no official reports from official sources
(r / report-01
      :ARG0 (m / media
            :ARG0-of (t / try-01
                  :ARG1 (g / get-01
                        :ARG0 m
                        :ARG1 (r2 / report-01
                              :polarity -
                              :mod (o / official)
                              :source (s / source
                                    :mod (o2 / official))))
                  :mod (j / just)))
      :ARG1-of (t2 / true-01
            :polarity -)
      :ARG1-of (t3 / typical-02))"
he isnt a bloody president! he is a Prime Minister!,"# ::snt he isnt a bloody president! he is a Prime Minister!
(m / multi-sentence
      :snt1 (p / president
            :polarity -
            :domain (h / he)
            :mod (b / bloody))
      :snt2 (h2 / have-org-role-91
            :ARG0 (h3 / he)
            :ARG2 (m2 / minister
                  :mod (p2 / prime))))"
prime minister.,"# ::snt prime minister.
(m / minister
      :mod (p / prime))"
"Seeing you live in Australia, has any media say anything about devices being planted around Sydney?","# ::snt Seeing you live in Australia, has any media say anything about devices being planted around Sydney?
(m / multi-sentence
      :snt1 (s / see-01
            :ARG0 (ii / i)
            :ARG1 (l / live-01
                  :ARG0 (y / you)
                  :location (c / country
                        :name (n / name
                              :op1 ""Australia""))))
      :snt2 (s2 / say-01
            :ARG0 (m2 / media
                  :mod (a / any))
            :ARG1 (a2 / anything)
            :ARG3 (p / plant-01
                  :ARG1 (d / device)
                  :ARG2 (a3 / around
                        :op1 (c2 / city
                              :name (n2 / name
                                    :op1 ""Sydney""))))
            :polarity (a4 / amr-unknown)))"
I am listening a direct news feed (internal) &amp; this is not confirmed as yet. Cafe is in Martin Place not near opera house.,"# ::snt I am listening a direct news feed (internal) &amp; this is not confirmed as yet. Cafe is in Martin Place not near opera house.
(m / multi-sentence
      :snt1 (l / listen-01
            :ARG0 (ii / i)
            :ARG1 (a / and
                  :op1 (f / feed
                        :mod (n / news)
                        :ARG1-of (d / direct-02)
                        :ARG1-of (ii2 / internal-02))
                  :op2 (p / product
                        :name (n2 / name
                              :op1 ""&""
                              :op2 ""amp"")))
            :ARG1-of (c / cause-01
                  :ARG0 (c2 / confirm-01
                        :polarity -
                        :ARG1 (t / this)
                        :time (a2 / as-yet))))
      :snt2 (b / be-located-at-91
            :ARG1 (c3 / cafe)
            :ARG2 (s / street
                  :name (n3 / name
                        :op1 ""Martin""
                        :op2 ""Place""))
            :ARG1-of (n4 / near-02
                  :polarity -
                  :ARG2 (h / house
                        :mod (o / opera)))))"
prime minister not president.,"# ::snt prime minister not president.
(h / have-org-role-91
      :polarity -
      :ARG0 (p / person
            :ARG2 (m / minister
                  :mod (p2 / prime)))
      :ARG0 p
      :ARG2 (p3 / president))"
thats not true either.... you guys are not the real Anonymous clearly,"# ::snt thats not true either.... you guys are not the real Anonymous clearly
(m / multi-sentence
      :snt1 (t / true-01
            :polarity -
            :ARG1 (t2 / that)
            :mod (e / either))
      :snt2 (r / real-04
            :polarity -
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""Anonymous"")
                  :domain (y / you
                        :mod (g / guy)))
            :ARG1-of (c / clear-06)))"
fucking go n kick their baws.,"# ::snt fucking go n kick their baws.
(a / and
      :op1 (g / go-05
            :mode imperative
            :ARG0 (y / you))
      :op2 (k / kick-01
            :mode imperative
            :ARG0 y
            :ARG1 (b / baw
                  :poss (t / they)))
      :mod (f / fucking
            :mode expressive))"
Where are you hearing that? that hasnt even been reported.,"# ::snt Where are you hearing that? that hasnt even been reported.
(m / multi-sentence
      :snt1 (h / hear-01
            :ARG0 (y / you)
            :ARG1 (t / that)
            :location (a / amr-unknown))
      :snt2 (r / report-01
            :polarity -
            :ARG1 (t2 / that)
            :mod (e / even)))"
Ummm. that would be Prime Minister Tony Abbott not President....JS,"# ::snt Ummm. that would be Prime Minister Tony Abbott not President....JS
(p / person
      :name (n / name
            :op1 ""Tony""
            :op2 ""Abbott"")
      :ARG0-of (h / have-org-role-91
            :ARG2 (m / minister
                  :mod (p2 / prime)))
      :ARG0-of (h2 / have-org-role-91
            :polarity -
            :ARG2 (p3 / president))
      :domain (t / that)
      :mod (u / umm
            :mode expressive))"
:'(,"# ::snt :'(
(a / amr-empty)"
*Prime Minister,"# ::snt *Prime Minister
(h / have-org-role-91
      :ARG2 (m / minister
            :mod (p / prime)))"
Source?,"# ::snt Source?
(s / source
      :polarity (a / amr-unknown))"
Have trains been cancelled in Sydney as a result,"# ::snt Have trains been cancelled in Sydney as a result
(c / cancel-01
      :ARG1 (t / train)
      :polarity (a / amr-unknown)
      :location (c2 / city
            :name (n / name
                  :op1 ""Sydney""))
      :ARG2-of (r / result-01))"
The Opera House was evacuated as a normal precaution as per operational plan.,"# ::snt The Opera House was evacuated as a normal precaution as per operational plan.
(e / evacuate-01
      :ARG1 (b / building
            :name (n / name
                  :op1 ""Opera""
                  :op2 ""House""))
      :purpose (p / precaution-02
            :ARG1-of (n2 / normal-02)
            :ARG1-of (c / cause-01
                  :ARG0 (p2 / plan-01
                        :ARG1 (o / operate-01)))))"
