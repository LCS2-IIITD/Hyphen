comment,amr
there still hostages? then the 'situation' is NOT contained.,"# ::snt there still hostages? then the 'situation' is NOT contained.
(m / multi-sentence
      :snt1 (h / hostage
            :polarity (a / amr-unknown)
            :mod (s / still))
      :snt2 (c / contain-01
            :polarity -
            :ARG1 (s2 / situation)))"
lmao this guy looks like the Cryptkeeper,"# ::snt lmao this guy looks like the Cryptkeeper
(l / look-02
      :ARG0 (g / guy
            :mod (t / this))
      :ARG1 (p / person
            :ARG0-of (k / keep-01
                  :ARG1 (c / Cryptkeeper)))
      :mod (l2 / laugh-01
            :mode expressive
            :ARG0 (ii / i)
            :manner (l3 / loud)))"
,"# ::snt 
(a / amr-empty)"
"honestly, am not buying the Isis flag thing !! Am not that stupid to believe this nonsense","# ::snt honestly, am not buying the Isis flag thing !! Am not that stupid to believe this nonsense
(m / multi-sentence
      :snt1 (b / buy-05
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (t / thing
                  :mod (f / flag
                        :mod (r / religious-group
                              :name (n / name
                                    :op1 ""Isis""))))
            :ARG1-of (h / honest-01))
      :snt2 (s / stupid
            :degree (t2 / that
                  :polarity -)
            :domain (ii2 / i)
            :ARG0-of (b2 / believe-01
                  :polarity -
                  :ARG1 (n2 / nonsense
                        :mod (t3 / this)))))"
"""Situation contained."" What the heck does that mean?! They can't get out? Neither can the ""undisclosed number"" hostages.","# ::snt ""Situation contained."" What the heck does that mean?! They can't get out? Neither can the ""undisclosed number"" hostages.
(m / multi-sentence
      :snt1 (m2 / mean-01
            :ARG1 (c / contain-01
                  :ARG1 (s / situation))
            :ARG2 (a / amr-unknown
                  :mod (h / heck)))
      :snt2 (p / possible-01
            :polarity -
            :ARG1 (g / get-05
                  :ARG1 (t / they)
                  :ARG2 (o / out)))
      :snt3 (p2 / possible-01
            :polarity -
            :ARG1 (g2 / get-05
                  :ARG1 (h2 / hostage
                        :quant (n / number
                              :ARG1-of (o2 / open-01
                                    :polarity -)))
                  :ARG2 o)))"
