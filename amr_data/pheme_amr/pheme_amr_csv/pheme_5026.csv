comment,amr
These maybe ? Or to soon ?,"# ::snt These maybe ? Or to soon ?
(m / multi-sentence
      :snt1 (p / possible-01
            :polarity (a / amr-unknown)
            :ARG1 (t / this))
      :snt2 (o / or
            :op2 (s / soon
                  :polarity (a2 / amr-unknown))))"
FanBLOODYtastic!!!,"# ::snt FanBLOODYtastic!!!
(f / fantastic-02
      :mode expressive)"
if they weren't needed drones wouldn't be there. They do not target children.,"# ::snt if they weren't needed drones wouldn't be there. They do not target children.
(m / multi-sentence
      :snt1 (d / drone
            :polarity -
            :location (t / there)
            :condition (n / need-01
                  :polarity -
                  :ARG1 (t2 / they)))
      :snt2 (t3 / target-01
            :polarity -
            :ARG0 (t4 / they)
            :ARG1 (c / child)))"
why would people listen to a person hiding her face behind an egg??,"# ::snt why would people listen to a person hiding her face behind an egg??
(l / listen-01
      :ARG0 (p / person)
      :ARG1 (h / hide-01
            :ARG0 (p2 / person
                  :part (f / face))
            :ARG1 f
            :location (b / behind
                  :op1 (e / egg)))
      :ARG1-of (c / cause-01
            :ARG0 (a / amr-unknown)))"
"Hey, down to insults, spelling mistakes and swear words already!! Marvellous.Have a nice day","# ::snt Hey, down to insults, spelling mistakes and swear words already!! Marvellous.Have a nice day
(m / multi-sentence
      :snt1 (d / down-03
            :mode expressive
            :ARG2 (a / and
                  :op1 (ii / insult-01)
                  :op2 (m2 / mistake-02
                        :ARG1 (s / spell-01))
                  :op3 (w / word
                        :ARG3-of (s2 / swear-01)))
            :mod (h / hey
                  :mode expressive)
            :time (a2 / already))
      :snt2 (b / brilliant-01))"
: Steve Bell on the Charlie Hebdo attackers cartoon,"# ::snt : Steve Bell on the Charlie Hebdo attackers cartoon
(b / be-located-at-91
      :ARG1 (b2 / broadcast-program
            :name (n / name
                  :op1 ""Steve""
                  :op2 ""Bell""))
      :ARG2 (c / cartoon
            :poss (p / person
                  :ARG0-of (a / attack-01)
                  :mod (p2 / publication
                        :name (n2 / name
                              :op1 ""Charlie""
                              :op2 ""Ch Hebdo"")))))"
Brave - what color pencil are U today?,"# ::snt Brave - what color pencil are U today?
(a / ask-01
      :ARG1 (p / pencil
            :name (n / name
                  :op1 ""U"")
            :ARG1-of (c / color-01
                  :ARG2 (a2 / amr-unknown))
            :time (t / today))
      :ARG2 (b / Brave))"
grt one Steve Bell.,"# ::snt grt one Steve Bell.
(s / say-01
      :ARG1 (g / grateful
            :domain (p / person
                  :name (n / name
                        :op1 ""Steve""
                        :op2 ""Bell"")))
      :ARG2 p)"
"French brothers killed French, nothing to do wth Faith","# ::snt French brothers killed French, nothing to do wth Faith
(a / and
      :op1 (k / kill-01
            :ARG0 (p / person
                  :mod (c / country
                        :name (n / name
                              :op1 ""France""))
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (p2 / person)
                        :ARG2 (b / brother)))
            :ARG1 p2)
      :op2 (h2 / have-to-do-with-04
            :ARG0 k
            :ARG1 (f / faith)
            :ARG2 (n2 / nothing)))"
Steve Bell on the Charlie Hebdo attackers cartoon,"# ::snt Steve Bell on the Charlie Hebdo attackers cartoon
(b / be-located-at-91
      :ARG1 (p / person
            :name (n / name
                  :op1 ""Steve""
                  :op2 ""Bell""))
      :ARG2 (c / cartoon
            :poss (p2 / person
                  :ARG0-of (a / attack-01)
                  :mod (p3 / publication
                        :name (n2 / name
                              :op1 ""Charlie""
                              :op2 ""Ch Hebdo"")))))"
rubbish!,"# ::snt rubbish!
(r / rubbish)"
love deer but hate those manipulate them. haha,"# ::snt love deer but hate those manipulate them. haha
(c / contrast-01
      :ARG1 (l / love-01
            :ARG1 (d / deer))
      :ARG2 (h / hate-01
            :ARG1 (m / manipulate-02
                  :ARG0 (p / person
                        :mod (t / that))
                  :ARG1 d))
      :mod (h2 / haha
            :mode expressive))"
"would robber shout loud, ""i am robber n robbing this bank??"" wise thing to say dimorfik","# ::snt would robber shout loud, ""i am robber n robbing this bank??"" wise thing to say dimorfik
(s / shout-01
      :ARG0 (p / person
            :ARG0-of (r / rob-01
                  :ARG1 (b / bank
                        :mod (t / this))))
      :ARG1 (t2 / thing
            :mod (w / wise)
            :ARG1-of (s2 / say-01
                  :ARG0 (p2 / person
                        :name (n / name
                              :op1 ""Dimorfik""))))
      :polarity (a / amr-unknown)
      :manner (l / loud))"
: Steve Bell on the Charlie Hebdo attackers cartoon,"# ::snt : Steve Bell on the Charlie Hebdo attackers cartoon
(b / be-located-at-91
      :ARG1 (b2 / broadcast-program
            :name (n / name
                  :op1 ""Steve""
                  :op2 ""Bell""))
      :ARG2 (c / cartoon
            :poss (p / person
                  :ARG0-of (a / attack-01)
                  :mod (p2 / publication
                        :name (n2 / name
                              :op1 ""Charlie""
                              :op2 ""Ch Hebdo"")))))"
Ms vietas! via : Steve Bell on the Charlie Hebdo attackers cartoon,"# ::snt Ms vietas! via : Steve Bell on the Charlie Hebdo attackers cartoon
(m / multi-sentence
      :snt1 (p / person
            :name (n / name
                  :op1 ""Ms""
                  :op2 ""Vietas""))
      :snt2 (c / cartoon
            :mod (p2 / person
                  :name (n2 / name
                        :op1 ""Steve""
                        :op2 ""Bell""))
            :topic (p3 / person
                  :ARG0-of (a / attack-01)
                  :mod (p4 / publication
                        :name (n3 / name
                              :op1 ""Charlie""
                              :op2 "" Hebdo"")))))"
Not as good as,"# ::snt Not as good as
(h / have-degree-91
      :polarity -
      :ARG2 (g / good-02)
      :ARG3 (e / equal))"
Steve Bell on the Charlie Hebdo attackers cartoon,"# ::snt Steve Bell on the Charlie Hebdo attackers cartoon
(b / be-located-at-91
      :ARG1 (p / person
            :name (n / name
                  :op1 ""Steve""
                  :op2 ""Bell""))
      :ARG2 (c / cartoon
            :poss (p2 / person
                  :ARG0-of (a / attack-01)
                  :mod (p3 / publication
                        :name (n2 / name
                              :op1 ""Charlie""
                              :op2 ""Ch Hebdo"")))))"
dont break under pressure egg face,"# ::snt dont break under pressure egg face
(b / break-01
      :polarity -
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (f / face
            :part-of (e / egg))
      :condition (p / pressure-01))"
with my regards,"# ::snt with my regards
(r / regard-01
      :ARG0 (ii / i))"
,"# ::snt 
(a / amr-empty)"
I see that you know better than that bank robber too. Well done.,"# ::snt I see that you know better than that bank robber too. Well done.
(m / multi-sentence
      :snt1 (s / see-01
            :ARG0 (ii / i)
            :ARG1 (h / have-degree-91
                  :ARG1 (k / know-01
                        :ARG0 (y / you))
                  :ARG2 (g / good-02
                        :ARG1 k)
                  :ARG3 (m2 / more)
                  :ARG4 (k2 / know-01
                        :ARG0 (p / person
                              :ARG0-of (r / rob-01
                                    :ARG1 (b / bank))
                              :mod (t / that))
                        :mod (t2 / too))))
      :snt2 (d / do-02
            :ARG1-of (w / well-09)))"
yes they made it clear that it is all about their faith.,"# ::snt yes they made it clear that it is all about their faith.
(m / make-02
      :ARG0 (t / they)
      :ARG1 (c / clear-06
            :ARG1 (c2 / concern-02
                  :ARG0 (ii / it)
                  :ARG1 (f / faith
                        :poss t)
                  :mod (a / all))))"
"But people were killed, not . They all deserve to be honoured.","# ::snt But people were killed, not . They all deserve to be honoured.
(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG2 (k / kill-01
                  :polarity -
                  :ARG1 (p / person)))
      :snt2 (d / deserve-01
            :ARG0 (t / they
                  :mod (a / all))
            :ARG1 (h / honor-01
                  :ARG1 t)))"
Alex you a nasty person. Go away and waste someone else's time.,"# ::snt Alex you a nasty person. Go away and waste someone else's time.
(m / multi-sentence
      :snt1 (p / person
            :mod (n / nasty)
            :domain (y / you)
            :ARG1-of (s / say-01
                  :ARG0 (ii / i)
                  :ARG2 (p2 / person
                        :name (n2 / name
                              :op1 ""Alex""))))
      :snt2 (a / and
            :op1 (g / go-02
                  :mode imperative
                  :ARG0 (y2 / you)
                  :ARG4 (a2 / away))
            :op2 (w / waste-01
                  :mode imperative
                  :ARG0 y2
                  :ARG1 (t / time
                        :poss (s2 / someone
                              :mod (e / else))))))"
you are a prat.,"# ::snt you are a prat.
(p / prat
      :domain (y / you))"
"werent me responding to your smelly tweet, was an egg concording mine","# ::snt werent me responding to your smelly tweet, was an egg concording mine
(r / respond-01
      :ARG0 (ii / i)
      :ARG1 (t / tweet-01
            :ARG0 (y / you)
            :mod (s / smelly))
      :ARG0-of (c / cause-01
            :ARG1 (c2 / conciliate-01
                  :ARG0 ii
                  :ARG1 (e / egg)))
      :ARG2-of (d / differ-02))"
"The perpetrators say loud &amp; clear that it was everything to do with their faith, but you know better?","# ::snt The perpetrators say loud &amp; clear that it was everything to do with their faith, but you know better?
(c / contrast-01
      :ARG1 (s / say-01
            :ARG0 (p / person
                  :ARG0-of (p2 / perpetrate-01))
            :manner (l / loud)
            :manner l)
      :manner (c2 / clear-06
            :ARG1 (h / have-to-do-with-04
                  :ARG0 (e / everything)
                  :ARG1 (f / faith
                        :poss p)))
      :ARG2 (k / know-01
            :ARG0 (y / you)
            :ARG1-of (h2 / have-degree-91
                  :ARG2 (g / good-02
                        :ARG1 k)
                  :ARG3 (m / more))
            :polarity (a / amr-unknown)))"
well am not the one hiding my face behind a fucking deer thou,"# ::snt well am not the one hiding my face behind a fucking deer thou
(o / one
      :polarity -
      :ARG0-of (h / hide-01
            :ARG1 (f / face
                  :part-of (ii / i))
            :location (b / behind
                  :op1 (d / deer
                        :mod (f2 / fucking
                              :mode expressive))))
      :domain ii)"
,"# ::snt 
(a / amr-empty)"
: Steve Bell on the Charlie Hebdo attackers cartoon,"# ::snt : Steve Bell on the Charlie Hebdo attackers cartoon
(b / be-located-at-91
      :ARG1 (b2 / broadcast-program
            :name (n / name
                  :op1 ""Steve""
                  :op2 ""Bell""))
      :ARG2 (c / cartoon
            :poss (p / person
                  :ARG0-of (a / attack-01)
                  :mod (p2 / publication
                        :name (n2 / name
                              :op1 ""Charlie""
                              :op2 ""Ch Hebdo"")))))"
"Those who were executed were ""freedom of press and speech"" fanatics. Therefore they entered martyrdom just as Islam fanatics do","# ::snt Those who were executed were ""freedom of press and speech"" fanatics. Therefore they entered martyrdom just as Islam fanatics do
(m / multi-sentence
      :snt1 (f / fanatical
            :domain (p / person
                  :ARG1-of (e / execute-01))
            :topic (f2 / free-04
                  :ARG1 (a / and
                        :op1 (p2 / press)
                        :op2 (s / speak-01))))
      :snt2 (c / cause-01
            :ARG1 (e2 / enter-01
                  :ARG0 (t / they)
                  :ARG1 (m2 / martyr-01
                        :ARG1 t)
                  :ARG1-of (r / resemble-01
                        :ARG2 (e3 / enter-01
                              :ARG0 f
                              :mod (r2 / religious-group
                                    :name (n / name
                                          :op1 ""Islam"")))
                        :ARG1 m2)
                  :mod (j / just))))"
"Obama/CIA Comic Book""2400 ways to Murder Muslim Baby's with Drones"", Zion Laugh at Corpses","# ::snt Obama/CIA Comic Book""2400 ways to Murder Muslim Baby's with Drones"", Zion Laugh at Corpses
(a / and
      :op1 (p / publication
            :name (n / name
                  :op1 ""Comic""
                  :op2 ""Book"")
            :mod (s / slash
                  :op1 (p2 / person
                        :name (n2 / name
                              :op1 ""Obama""))
                  :op2 (g / government-organization
                        :name (n3 / name
                              :op1 ""CIA""))))
      :op2 (p3 / publication
            :name (n4 / name
                  :op1 ""2400""
                  :op2 ""How""
                  :op3 ""To""
                  :op4 "" Murder""
                  :op5 ""Baby""
                  :op6 ""with""
                  :op7 ""Drones""))
      :op3 (l / laugh-01
            :ARG0 (r / religious-group
                  :name (n5 / name
                        :op1 ""Zion""))
            :location (c / corps)))"
