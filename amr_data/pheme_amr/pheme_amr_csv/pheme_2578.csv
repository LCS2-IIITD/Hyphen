comment,amr
...,"# ::snt ...
(a / amr-empty)"
Pen is mightier than SWORD,"# ::snt Pen is mightier than SWORD
(h / have-degree-91
      :ARG1 (p / person
            :name (n / name
                  :op1 ""Pen""))
      :ARG2 (m / mightier)
      :ARG3 (m2 / more)
      :ARG4 (p2 / person
            :name (n2 / name
                  :op1 ""SWORD"")))"
Fuck this animal and his rats.,"# ::snt Fuck this animal and his rats.
(f / fuck-01
      :mode expressive
      :ARG1 (a / and
            :op1 (a2 / animal
                  :mod (t / this))
            :op2 (r / rat
                  :poss a2)))"
Per quello che vale sarebbe bello che questa vignetta venisse condivisa da tutti cc via,"# ::snt Per quello che vale sarebbe bello che questa vignetta venisse condivisa da tutti cc via
(m / multi-sentence
      :snt1 (p / per-quello
            :ARG1-of (c / cause-01
                  :ARG0 (p2 / possible-01
                        :ARG1 (c2 / come-01
                              :ARG1 (b / bell)))))
      :snt2 (c3 / cause-01
            :ARG0 (q / quest-01
                  :ARG1 (v / venisse
                        :ARG1-of (c4 / cause-01
                              :ARG0 (n / name
                                    :op1 ""Vignetta""))))
            :ARG1 (c5 / condivisa
                  :ARG1-of (c6 / cause-01
                        :ARG0 (p3 / publication
                              :name (n2 / name
                                    :op1 ""CCP"")
                              :medium (t / thing
                                    :mod (u / url-entity
                                          :value ""http://www.christianforums.com"")))))))"
This was posted just mins before attacks it's not in response to this specific cartoon,"# ::snt This was posted just mins before attacks it's not in response to this specific cartoon
(a / and
      :op1 (p / post-01
            :ARG1 (t / this)
            :time (b / before
                  :op1 (a2 / attack-01)
                  :quant (m / multiple
                        :op1 (t2 / temporal-quantity
                              :quant 1
                              :unit (m2 / minute))
                        :mod (j / just))))
      :op2 (r / respond-01
            :polarity -
            :ARG0 t
            :ARG1 (c / cartoon
                  :ARG1-of (s / specific-02)
                  :mod (t3 / this))))"
