comment,amr
- not the footprints of catastrophic failure ?,"# ::snt - not the footprints of catastrophic failure ?
(f / footprint
      :polarity -
      :poss (f2 / fail-01
            :mod (c / catastrophic))
      :polarity (a / amr-unknown))"
that's what this chart shows,"# ::snt that's what this chart shows
(s / show-01
      :ARG0 (c / chart
            :mod (t / this))
      :ARG1 (t2 / that))"
m/s equals jump from a hight of meters.,"# ::snt m/s equals jump from a hight of meters.
(e / equal-01
      :ARG1 (r / rate-entity-91
            :ARG1 (d / distance-quantity
                  :quant 1
                  :unit (m / millimeter))
            :ARG2 (t / temporal-quantity
                  :quant 1
                  :unit (s / second)))
      :ARG2 (j / jump-01
            :ARG3 (d2 / distance-quantity
                  :quant 1
                  :unit (m2 / meter))))"
Not dramatically - ca. m/s,"# ::snt Not dramatically - ca. m/s
(h / have-manner-91
      :polarity -
      :ARG2 (d / dramatic)
      :ARG1-of (m / mean-01
            :ARG2 (p / possible-01
                  :ARG1 (r / respond-01
                        :ARG2 (s / signal-07
                              :ARG1 (c / computer))))))"
"We likely would have seen a pause between power loss and APU start up in the ADS-B feed. And if APU on, why no control","# ::snt We likely would have seen a pause between power loss and APU start up in the ADS-B feed. And if APU on, why no control
(m / multi-sentence
      :snt1 (l / likely-01
            :ARG1 (s / see-01
                  :ARG0 (w / we)
                  :ARG1 (p / pause-01
                        :ARG1 (l2 / lose-02
                              :ARG1 (p2 / power))
                        :ARG2 (s2 / start-up-05
                              :ARG1 (f / feed-01
                                    :ARG2 (p3 / product
                                          :name (n / name
                                                :op1 ""ADS-B"")))))))
      :snt2 (a / and
            :op2 (c / control-01
                  :polarity -
                  :ARG0 (a2 / amr-unknown)
                  :condition (o / on-01
                        :ARG1 p3
                        :name (n2 / name
                              :op1 ""APU"")))))"
good graphic,"# ::snt good graphic
(g / graphic
      :ARG1-of (g2 / good-02))"
Maybe all else did fail!,"# ::snt Maybe all else did fail!
(p / possible-01
      :ARG1 (f / fail-01
            :ARG1 (a / all
                  :mod (e / else))))"
"The A320 should have a RAT, but would be used when all else fails","# ::snt The A320 should have a RAT, but would be used when all else fails
(c / contrast-01
      :ARG1 (r / recommend-01
            :ARG1 (h / have-03
                  :ARG0 (a / aircraft-type
                        :name (n / name
                              :op1 ""A320""))
                  :ARG1 (r2 / rate-entity-91
                        :ARG2 (m / monetary-quantity
                              :ARG1-of (r3 / rare-02)))))
      :ARG2 (u / use-01
            :ARG1 a
            :condition (f / fail-01
                  :ARG1 (a2 / all
                        :mod (e / else)))))"
looks like a cabin depressurisation and emerg descent below MSA unfortunately!,"# ::snt looks like a cabin depressurisation and emerg descent below MSA unfortunately!
(l / look-02
      :ARG1 (a / and
            :op1 (d / depressurize-01
                  :ARG1 (c / cabin))
            :op2 (d2 / descend-01
                  :ARG1 (b / below
                        :op1 (m / mountain
                              :name (n / name
                                    :op1 ""MSA"")))
                  :mod (e / emergent)))
      :ARG2-of (f / fortunate-01
            :polarity -))"
Because it has onboard generator (APU?) that can give power to instruments and transponders.,"# ::snt Because it has onboard generator (APU?) that can give power to instruments and transponders.
(c / cause-01
      :ARG0 (h / have-03
            :ARG0 (ii / it)
            :ARG1 (g / generator
                  :mod (o / onboard)
                  :ARG0-of (g2 / give-01
                        :ARG1 (p / power)
                        :ARG2 (a / and
                              :op1 (ii2 / instrument)
                              :op2 (t / transponder))
                        :ARG1-of (p2 / possible-01)))))"
And it was really really fast. Doesn't seem to be a controlled descent.,"# ::snt And it was really really fast. Doesn't seem to be a controlled descent.
(m / multi-sentence
      :snt1 (a / and
            :op2 (f / fast-02
                  :ARG1 (ii / it)
                  :degree (r / really)))
      :snt2 (s / seem-01
            :polarity -
            :ARG1 (d / descend-01
                  :ARG1-of (c / control-01))))"
the must have been gliding ie no engine power. It had a speed of kts whilst descending ft/ mins ratio :10,"# ::snt the must have been gliding ie no engine power. It had a speed of kts whilst descending ft/ mins ratio :10
(m / multi-sentence
      :snt1 (o / obligate-01
            :ARG2 (g / glide-01
                  :ARG1 (ii / it)
                  :ARG1-of (m2 / mean-01
                        :ARG2 (p / power-01
                              :polarity -
                              :ARG0 (e / engine)))))
      :snt2 (s / speed-01
            :ARG1 (ii2 / it)
            :ARG2 (s2 / speed-quantity
                  :quant 10
                  :unit (m3 / mile-per-hour))
            :time (d / descend-01
                  :ARG0 ii2)))"
Scary altitude &amp; speed chart of . Aircraft entered a steep but constant descent.,"# ::snt Scary altitude &amp; speed chart of . Aircraft entered a steep but constant descent.
(m / multi-sentence
      :snt1 (a / and
            :op1 (a2 / altitude
                  :ARG1-of (s / scary-03))
            :op2 (a3 / amp))
      :snt2 (c / chart-01
            :ARG1 (s2 / speed))
      :snt3 (e / enter-01
            :ARG0 (a4 / aircraft)
            :ARG1 (d / descend-01
                  :ARG0 a4
                  :ARG1-of (s3 / steep-02
                        :ARG1-of (c2 / contrast-01
                              :ARG2 (c3 / constant))))))"
"Many questions to be answered here. If gliding (no engine power), how did transponder keep transmitting ADS-B. APU? RAT?","# ::snt Many questions to be answered here. If gliding (no engine power), how did transponder keep transmitting ADS-B. APU? RAT?
(m / multi-sentence
      :snt1 (a / answer-01
            :ARG1 (q / question-01
                  :quant (m2 / many))
            :location (h / here))
      :snt2 (h2 / have-condition-91
            :ARG1 (k / keep-02
                  :ARG0 (t / transponder)
                  :ARG1 (t2 / transmit-01
                        :ARG0 t
                        :ARG1 (p / product
                              :name (n / name
                                    :op1 ""ADS-B"")))
                  :manner (a2 / amr-unknown))
            :ARG2 (f / fly-01
                  :ARG1 t
                  :ARG1-of (p2 / power-01
                        :polarity -
                        :ARG0 (e / engine))))
      :snt3 (a3 / and
            :op1 (p3 / product
                  :name (n2 / name
                        :op1 ""APU""))
            :op2 (p4 / product
                  :name (n3 / name
                        :op1 ""RAT""))))"
not sure if A320 has ram air turbine and not use APU.,"# ::snt not sure if A320 has ram air turbine and not use APU.
(s / sure-02
      :polarity -
      :ARG1 (a / and
            :op1 (h / have-03
                  :ARG0 (a2 / aircraft-type
                        :name (n / name
                              :op1 ""A320""))
                  :ARG1 (t / turbine
                        :mod (a3 / air)
                        :ARG1-of (r / ram-02)))
            :op2 (u / use-01
                  :polarity -
                  :ARG0 a2
                  :ARG1 (p / product
                        :name (n2 / name
                              :op1 ""APU"")))))"
:altitude &amp; speed chart of . Plane was in steep descent via /,"# ::snt :altitude &amp; speed chart of . Plane was in steep descent via /
(m / multi-sentence
      :snt1 (a / and
            :op1 (a2 / altitude)
            :op2 (a3 / amp)
            :op3 (c / chart-01
                  :ARG1 (s / speed)))
      :snt2 (d / descend-01
            :ARG0 (p / plane)
            :manner (s2 / steep)
            :path (s3 / slash)))"
"MORE: altitude &amp; speed chart of . Plane was in a steep, constant descent. via /","# ::snt MORE: altitude &amp; speed chart of . Plane was in a steep, constant descent. via /
(m / multi-sentence
      :snt1 (a / and
            :op1 (a2 / altitude)
            :op2 (a3 / amp)
            :op3 (c / chart-01
                  :ARG1 (s / speed))
            :mod (m2 / more))
      :snt2 (d / descend-01
            :ARG0 (p / plane)
            :ARG1-of (s2 / steep-02)
            :mod (c2 / constant))
      :snt3 (v / via
            :op2 (t / thing)))"
Terminal speed shows no acceleration or deceleration while altitude drops dramatically. Thoughts ?,"# ::snt Terminal speed shows no acceleration or deceleration while altitude drops dramatically. Thoughts ?
(m / multi-sentence
      :snt1 (s / show-01
            :ARG0 (s2 / speed
                  :mod (t / terminal))
            :ARG1 (o / or
                  :polarity -
                  :op1 (a / accelerate-01)
                  :op2 (d / decelerate-01))
            :time (d2 / drop-01
                  :ARG1 (a2 / altitude)
                  :manner (d3 / dramatic)))
      :snt2 (t2 / think-01
            :polarity (a3 / amr-unknown)))"
"according graphics the plane entered a decent after minutes, not minutes","# ::snt according graphics the plane entered a decent after minutes, not minutes
(s / say-01
      :ARG0 (g / graphics)
      :ARG1 (e / enter-01
            :ARG0 (p / plane)
            :ARG1 (d / decent)
            :time (a / after
                  :op1 (a2 / and
                        :op1 (m / multiple
                              :op1 (t / temporal-quantity
                                    :quant 1
                                    :unit (m2 / minute)))
                        :op2 (m3 / multiple
                              :op1 (t2 / temporal-quantity
                                    :quant 1
                                    :unit (m4 / minute)))))))"
that's such an odd drop...,"# ::snt that's such an odd drop...
(d / drop
      :mod (o / odd
            :degree (s / such))
      :domain (t / that))"
It's m/s...,"# ::snt It's m/s...
(t / thing
      :name (n / name
            :op1 ""M/S""))"
"quick, not catastrophic ?","# ::snt quick, not catastrophic ?
(c / contrast-01
      :polarity (a / amr-unknown)
      :ARG1 (q / quick-02)
      :ARG2 (c2 / catastrophic
            :polarity -))"
