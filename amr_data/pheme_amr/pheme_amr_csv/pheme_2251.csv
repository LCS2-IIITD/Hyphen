comment,amr
But Uber is still a company of jackals. Hope more countries follow Spain's example.,"# ::snt But Uber is still a company of jackals. Hope more countries follow Spain's example.
(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG2 (c2 / company
                  :mod (j / jackal)
                  :domain (c3 / company
                        :name (n / name
                              :op1 ""Uber""))
                  :mod (s / still)))
      :snt2 (h / hope-01
            :ARG0 (ii / i)
            :ARG1 (f / follow-02
                  :ARG0 (c4 / country
                        :quant (m2 / more))
                  :ARG1 (e / example
                        :poss (c5 / country
                              :name (n2 / name
                                    :op1 ""Spain""))))))"
Sound of gears crashing into reverse...,"# ::snt Sound of gears crashing into reverse...
(c / crash-01
      :ARG1 (s / sound-01
            :ARG1 (g / gear))
      :direction (r / reverse-01))"
"Uber reverses course after story, offers free rides to people in downtown Sydney. Good call","# ::snt Uber reverses course after story, offers free rides to people in downtown Sydney. Good call
(m / multi-sentence
      :snt1 (a / and
            :op1 (r / reverse-01
                  :ARG0 (c / company
                        :name (n / name
                              :op1 ""Uber""))
                  :ARG1 (c2 / course)
                  :time (a2 / after
                        :op1 (s / story)))
            :op2 (o / offer-01
                  :ARG0 c
                  :ARG1 (r2 / ride-01
                        :ARG0 c
                        :ARG1 (p / person
                              :location (d / downtown
                                    :part-of (c3 / city
                                          :name (n2 / name
                                                :op1 ""Sydney"")))
                              :ARG1-of (f / free-03)))))
      :snt2 (c4 / call-10
            :ARG1-of (g / good-02)))"
the best practice is drivers get paid from companies who organizes uber services rather than from riders.,"# ::snt the best practice is drivers get paid from companies who organizes uber services rather than from riders.
(p / practice-01
      :ARG1 (p2 / pay-01
            :ARG0 (c / company
                  :ARG0-of (o / organize-01
                        :ARG1 (s / serve-01
                              :mod (u / uber))
                        :ARG1-of (ii / instead-of-91
                              :ARG2 (p3 / pay-01
                                    :ARG0 (p4 / person
                                          :ARG0-of (r / ride-01)
                                          :ARG2-of p3)))))
            :ARG2 (p5 / person
                  :ARG0-of (d / drive-01)))
      :ARG1-of (h / have-degree-91
            :ARG2 (g / good-02
                  :ARG1 p)
            :ARG3 (m / most)))"
It was an algorithm not transhumanist heartless actions by pricks gets free rides too?,"# ::snt It was an algorithm not transhumanist heartless actions by pricks gets free rides too?
(c / contrast-01
      :ARG1 (a / algorithm
            :domain (ii / it))
      :ARG2 (g / get-01
            :polarity -
            :ARG0 (a2 / act-02
                  :ARG0 (p / prick)
                  :mod (h / heartless)
                  :mod (t / transhumanist))
            :ARG1 (r / ride
                  :ARG1-of (f / free-03))
            :mod (t2 / too)
            :polarity (a3 / amr-unknown)))"
": Uber reverses course after story, now giving free rides to people downtown .","# ::snt : Uber reverses course after story, now giving free rides to people downtown .
(a / and
      :op1 (r / reverse-01
            :ARG0 (c / company
                  :name (n / name
                        :op1 "" Uber""))
            :ARG1 (c2 / course)
            :time (a2 / after
                  :op1 (s / story)))
      :op2 (g / give-01
            :ARG0 c
            :ARG1 (r2 / ride-01
                  :ARG0 c
                  :ARG1-of (f / free-03))
            :ARG2 (p / person
                  :location (d / downtown))
            :time (n2 / now)))"
Because that's what's important here.,"# ::snt Because that's what's important here.
(c / cause-01
      :ARG0 (ii / important-01
            :ARG1 (t / thing
                  :domain (t2 / that))
            :location (h / here)))"
