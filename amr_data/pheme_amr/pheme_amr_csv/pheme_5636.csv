comment,amr
Eat lot's of bacon,"# ::snt Eat lot's of bacon
(e / eat-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (b / bacon
            :quant (l / lot)))"
"OK Grunt grunt, heavy breathing, urgh urgh)) there!! Shoved!","# ::snt OK Grunt grunt, heavy breathing, urgh urgh)) there!! Shoved!
(m / multi-sentence
      :snt1 (a / and
            :op1 (s / say-01
                  :ARG1 (o / okay-01))
            :op2 (g / grunt
                  :mod g))
      :op3 (b / breathe-01
            :manner (h / heavy))
      :op4 (u / urgh
            :mode expressive)
      :location (t / there)
      :snt2 (m2 / move-01
            :mode expressive))"
,"# ::snt 
(a / amr-empty)"
"Beautiful girl, beautiful man, stupid fucking cause.","# ::snt Beautiful girl, beautiful man, stupid fucking cause.
(a / and
      :op1 (g / girl
            :ARG1-of (b / beautiful-02
                  :ARG1 (m / man)))
      :op2 m
      :op3 (c / cause
            :mod (s / stupid)
            :mod (f / fucking
                  :mode expressive)))"
these are not in a hostage situation?... too much going on,"# ::snt these are not in a hostage situation?... too much going on
(m / multi-sentence
      :snt1 (b / be-located-at-91
            :polarity -
            :ARG1 (t / this)
            :ARG2 (s / situation
                  :mod (h / hostage))
            :polarity (a / amr-unknown))
      :snt2 (g / go-on-15
            :ARG1-of (h2 / have-quant-91
                  :ARG2 (m2 / much)
                  :ARG3 (t2 / too))))"
Looks like two punks that should had been jailed long before now.,"# ::snt Looks like two punks that should had been jailed long before now.
(l / look-02
      :ARG1 (p / punk
            :quant 2
            :ARG1-of (j / jail-01
                  :ARG1-of (r / recommend-01)
                  :time (b / before
                        :op1 (n / now)
                        :quant (l2 / long)))))"
!!,"# ::snt !!
(t / thing
      :mode expressive)"
Animals!,"# ::snt Animals!
(a / animal)"
All muslims are cowards SILENCE INFIDELS!,"# ::snt All muslims are cowards SILENCE INFIDELS!
(e / enemy
      :mod (s / silence)
      :domain (p / person
            :mod (r / religious-group
                  :name (n / name
                        :op1 ""Islam""))
            :mod (a / all)))"
Shove it,"# ::snt Shove it
(s / shit-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (ii / it))"
"No, we must no change our way of life to please these murders.","# ::snt No, we must no change our way of life to please these murders.
(o / obligate-01
      :polarity -
      :ARG1 (w / we)
      :ARG2 (c / change-01
            :ARG0 w
            :ARG1 (w2 / way
                  :manner-of (l / live-01)
                  :poss w)
            :purpose (p / please-01
                  :ARG0 w
                  :ARG2 (m / murder-01
                        :mod (t / this)))))"
this is crazy wtf is wrong with earth holy shit,"# ::snt this is crazy wtf is wrong with earth holy shit
(a / and
      :op1 (c / crazy-03
            :ARG1 (t / this))
      :op2 (w / wrong-02
            :ARG1 t
            :ARG2 (s / shit
                  :mod (h / holy)
                  :poss (p / planet
                        :name (n / name
                              :op1 ""Earth"")))
            :mod (f / fuck
                  :mode expressive)))"
"IMHO we are already in WW3,when will politicians acknowledge that Europe's Aleppo has begun on the streets of France.","# ::snt IMHO we are already in WW3,when will politicians acknowledge that Europe's Aleppo has begun on the streets of France.
(a / and
      :op1 (o / opine-01
            :ARG0 (ii / i)
            :ARG1 (b / be-temporally-at-91
                  :ARG1 (w / we)
                  :ARG2 (w2 / war
                        :name (n / name
                              :op1 ""WW3""))
                  :time (a2 / already)))
      :op2 (a3 / acknowledge-01
            :ARG0 (p / politician)
            :ARG1 (b2 / begin-01
                  :ARG1 (c / city
                        :name (n2 / name
                              :op1 ""Aleppo"")
                        :poss (c2 / continent
                              :name (n3 / name
                                    :op1 ""Europe"")))
                  :location (s / street
                        :poss (c3 / country
                              :name (n4 / name
                                    :op1 ""France""))))
            :time (a4 / amr-unknown))
      :ARG1-of (h / humble-01))"
