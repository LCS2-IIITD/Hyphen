comment,amr
This guy is % full of shit. The story just keeps changing.,"# ::snt This guy is % full of shit. The story just keeps changing.
(m / multi-sentence
      :snt1 (f / fill-01
            :ARG1 (g / guy
                  :mod (t / this))
            :ARG2 (s / shit)
            :degree (p / percentage-entity))
      :snt2 (k / keep-02
            :ARG1 (c / change-01
                  :ARG1 (s2 / story))
            :mod (j / just)))"
Only every time he opens his mouth.,"# ::snt Only every time he opens his mouth.
(o / open-01
      :ARG0 (h / he
            :part (m / mouth))
      :ARG1 m
      :frequency (r / rate-entity-91
            :ARG0 h
            :ARG1 m)
      :ARG4-of r
      :mod (o2 / only))"
"Thanks will try to get to it Gary lol all we do is read now, well I do anyway","# ::snt Thanks will try to get to it Gary lol all we do is read now, well I do anyway
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (a / and
            :op1 (t / thank-01
                  :ARG0 ii
                  :ARG1 (p / person
                        :name (n / name
                              :op1 ""Gary""))
                  :ARG2 (t2 / try-01
                        :ARG0 p
                        :ARG1 (g / get-05
                              :ARG1 p
                              :ARG2 (ii2 / it))))
            :op2 (c / contrast-01
                  :ARG1 (d / do-02
                        :ARG0 (w / we)
                        :ARG1 (r / read-01
                              :ARG0 w
                              :time (n2 / now))
                        :mod (a2 / all))
                  :ARG2 (d2 / do-02
                        :ARG0 ii
                        :mod (a3 / anyway)))
            :ARG2 (l / laugh-01
                  :ARG0 ii
                  :manner (l2 / loud)))
      :ARG2 p)"
"interesting book ""thinking fast &amp; slow"" Kahneman details the thought processes very much worth a read","# ::snt interesting book ""thinking fast &amp; slow"" Kahneman details the thought processes very much worth a read
(d / detail-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Kahneman""))
      :ARG1 (p2 / process-02
            :ARG1 (t / think-01)
            :ARG1-of (w / worth-02
                  :ARG2 (r / read-01
                        :ARG1 (b / book
                              :name n
                              :op1 ""Think""
                              :op2 ""and""
                              :op3 ""amp"")
                        :ARG1-of (ii / interest-01)))
            :degree (m / much
                  :degree (v / very)))
      :ARG1-of (t2 / title-01
            :ARG2 b))"
: Is the Police Chief in changing the story? Yep...,"# ::snt : Is the Police Chief in changing the story? Yep...
(m / multi-sentence
      :snt1 (c / change-01
            :polarity (a / amr-unknown)
            :ARG0 (p / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (p2 / police)
                        :ARG2 (c2 / chief)))
            :ARG1 (s / story)
            :polarity (a2 / amr-unknown))
      :snt2 (y / yep))"
he just did,"# ::snt he just did
(e / event
      :mod (h / he)
      :time (j / just))"
the availability heuristic applies to the cops decision making and now the crowds here is summary,"# ::snt the availability heuristic applies to the cops decision making and now the crowds here is summary
(a / and
      :op1 (a2 / apply-02
            :ARG1 (u / uristic
                  :topic (a3 / available-02))
            :ARG2 (m / make-18
                  :ARG0 (c / cop)
                  :ARG1 (d / decide-01)))
      :op2 (s / summarize-01
            :ARG1 (c2 / crowd
                  :location (h / here)
                  :time (n / now))))"
again?,"# ::snt again?
(e / event
      :polarity (a / amr-unknown)
      :mod (a2 / again))"
"So in conclusion, you're a selfish ass hole who doesn't care about anyone else's life but your own. Got it. Enjoy your day.","# ::snt So in conclusion, you're a selfish ass hole who doesn't care about anyone else's life but your own. Got it. Enjoy your day.
(m / multi-sentence
      :snt1 (c / conclude-01
            :ARG1 (h / hole
                  :mod (a / ass)
                  :mod (s / selfish)
                  :domain (y / you)
                  :ARG0-of (c2 / care-01
                        :polarity -
                        :ARG1 (l / life
                              :poss (a2 / anyone
                                    :mod (e / else)))
                        :ARG2-of (e2 / except-01
                              :ARG1 (l2 / life
                                    :poss y)))))
      :snt2 (g / get-02
            :ARG0 (y2 / you)
            :ARG1 (ii / it))
      :snt3 (e3 / enjoy-01
            :mode imperative
            :ARG0 (y3 / you)
            :ARG1 (d / day
                  :poss y3)))"
"dont know any1 involved, not my community. Got my own problems here, y add stres of others that dont effect my life n slightest","# ::snt dont know any1 involved, not my community. Got my own problems here, y add stres of others that dont effect my life n slightest
(m / multi-sentence
      :snt1 (k / know-01
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (a / anyone
                  :ARG1-of (ii2 / involve-01)
                  :ARG1-of (c / contrast-01
                        :ARG2 (c2 / community
                              :polarity -
                              :poss ii))))
      :snt2 (a2 / and
            :op1 (g / get-01
                  :ARG0 (ii3 / i)
                  :ARG1 (p / problem
                        :poss ii3)
                  :location (h / here))
            :op2 (a3 / add-02
                  :ARG0 (y / you)
                  :ARG1 (o / other
                        :quant (m2 / multiple
                              :op1 1)
                        :ARG0-of (a4 / affect-01
                              :polarity -
                              :ARG1 (l / life
                                    :poss ii3)
                              :ARG1-of (h2 / have-degree-91
                                    :ARG2 (s / slight)
                                    :ARG3 (m3 / most)))))))"
it's ok world is full of fake people like u who would rather hear happy BS than hard truths to make themselves feel better,"# ::snt it's ok world is full of fake people like u who would rather hear happy BS than hard truths to make themselves feel better
(o / okay-04
      :ARG1 (f / fill-01
            :ARG1 (w / world)
            :ARG2 (p / person
                  :ARG1-of (f2 / fake-02)
                  :ARG1-of (r / resemble-01
                        :ARG2 (y / you))
                  :ARG0-of (p2 / prefer-01
                        :ARG1 (h / hear-01
                              :ARG0 p
                              :ARG1 (b / bullshit
                                    :ARG1-of (h2 / happy-01))
                              :ARG2 (t / truth
                                    :ARG1-of (h3 / hard-02))
                              :purpose (m / make-02
                                    :ARG0 p
                                    :ARG1 (f3 / feel-01
                                          :ARG0 p
                                          :ARG1 (g / good-02
                                                :ARG2-of (h4 / have-degree-91
                                                      :ARG1 f3
                                                      :ARG3 (m2 / more))))))))))"
"haha, u sound like my wife! I always mess that one up, thanks for the spell check!","# ::snt haha, u sound like my wife! I always mess that one up, thanks for the spell check!
(m / multi-sentence
      :snt1 (s / sound-01
            :ARG1 (y / you)
            :ARG2 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (ii / i)
                        :ARG2 (w / wife)))
            :mod (h2 / haha
                  :mode expressive))
      :snt2 (a / and
            :op1 (m2 / mess-up-02
                  :ARG0 (ii2 / i)
                  :ARG1 (o / one
                        :mod (t / that))
                  :time (a2 / always))
            :op2 (t2 / thank-01
                  :ARG0 ii2
                  :ARG1 y)
            :ARG2 (c / check-01
                  :ARG0 y
                  :ARG1 (s2 / spell-01))))"
doesn't sound good,"# ::snt doesn't sound good
(s / sound-01
      :polarity -
      :ARG2 (g / good-02))"
Its youre,"# ::snt Its youre
(y / you)"
I don't think you know what caring means. I'm not okay with wrongful vigilante justice and you shouldn't be either.,"# ::snt I don't think you know what caring means. I'm not okay with wrongful vigilante justice and you shouldn't be either.
(m / multi-sentence
      :snt1 (t / think-01
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (k / know-01
                  :ARG0 (y / you)
                  :ARG1 (m2 / mean-01
                        :ARG1 (c / care-03)
                        :ARG2 (t2 / thing))))
      :snt2 (a / and
            :op1 (o / okay-01
                  :polarity -
                  :ARG0 (ii2 / i)
                  :ARG1 (j / justice
                        :mod (v / vigilante)
                        :ARG1-of (w / wrong-02)))
            :op2 (r / recommend-01
                  :ARG1 (o2 / okay-01
                        :polarity -
                        :ARG0 (y2 / you)
                        :ARG1 j))))"
So you're cool with letting innocent people be killed? Nice man. That's something to be proud of.,"# ::snt So you're cool with letting innocent people be killed? Nice man. That's something to be proud of.
(m / multi-sentence
      :snt1 (c / cool
            :polarity (a / amr-unknown)
            :domain (y / you)
            :topic (l / let-01
                  :ARG1 (k / kill-01
                        :ARG1 (p / person
                              :ARG1-of (ii / innocent-01)))))
      :snt2 (s / say-01
            :ARG1 (p2 / pride-01
                  :ARG0 (ii2 / i)
                  :ARG1 (s2 / something
                        :domain l))
            :ARG2 (m2 / man
                  :ARG1-of (n / nice-01))))"
My column: ARREST DARREN WILSON ARREST HIM NOW!!: ,"# ::snt My column: ARREST DARREN WILSON ARREST HIM NOW!!: 
(m / multi-sentence
      :snt1 (c / column
            :poss (ii / i))
      :snt2 (a / arrest-01
            :mode expressive
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Aaron""
                        :op2 ""DarrEN""
                        :op3 ""Wilson""))
            :ARG1 (h / he)
            :time (n2 / now)))"
:until all the facts are out I'm not judging anymore. That whole justice thing in the constitution u know,"# ::snt :until all the facts are out I'm not judging anymore. That whole justice thing in the constitution u know
(m / multi-sentence
      :snt1 (j / judge-01
            :polarity -
            :ARG0 (ii / i)
            :time (a / anymore)
            :time (u / until
                  :op1 (o / out-01
                        :ARG1 (f / fact
                              :mod (a2 / all)))))
      :snt2 (k / know-01
            :ARG0 (y / you)
            :ARG1 (t / thing
                  :mod (j2 / justice)
                  :mod (w / whole)
                  :location (c / constitution)
                  :mod (t2 / that))))"
did you know any of them? R u losing sleep tonight because of them? Will u donate $ to support the community? Don't fake carein,"# ::snt did you know any of them? R u losing sleep tonight because of them? Will u donate $ to support the community? Don't fake carein
(m / multi-sentence
      :snt1 (k / know-01
            :ARG0 (y / you)
            :ARG1 (a / any
                  :ARG1-of (ii / include-91
                        :ARG2 (t / they)))
            :polarity (a2 / amr-unknown))
      :snt2 (l / lose-02
            :ARG0 (y2 / you)
            :ARG1 (s / sleep-01
                  :ARG0 y2)
            :time (d / date-entity
                  :dayperiod (n / night)
                  :mod (t2 / today))
            :ARG1-of (c / cause-01
                  :ARG0 (t3 / they)))
      :snt3 (d2 / donate-01
            :ARG0 (y3 / you)
            :ARG1 (m2 / monetary-quantity
                  :quant (x / $)
                  :purpose (s2 / support-01
                        :ARG0 y3
                        :ARG1 (c2 / community))
                  :polarity (a3 / amr-unknown))
            :snt4 (f / fake-02
                  :mode imperative
                  :polarity -
                  :ARG0 (y4 / you)
                  :ARG1 (c3 / care-03))))"
Kid about to go to college robs cigars unarmed and then jay walks with cigars in his hand?! Yeah/Nah,"# ::snt Kid about to go to college robs cigars unarmed and then jay walks with cigars in his hand?! Yeah/Nah
(m / multi-sentence
      :snt1 (a / and
            :op1 (r / rob-01
                  :ARG0 (k / kid
                        :ARG0-of (g / go-02
                              :ARG4 (c / college)
                              :time (a2 / about-to))
                        :part (h / hand))
                  :ARG1 (c2 / cigar))
            :op2 (w / walk-01
                  :ARG0 k
                  :manner (a3 / arm-01
                        :polarity -
                        :ARG1 k)
                  :time (t / then)))
      :snt2 a
      :op1 (y / yeah
            :mode expressive)
      :op2 (n / nah
            :mode expressive))"
"best line yet, POLICE CHIEF =MALL COP","# ::snt best line yet, POLICE CHIEF =MALL COP
(m / multi-sentence
      :snt1 (l / line
            :ARG1-of (h / have-degree-91
                  :ARG2 (g / good-02
                        :ARG1 l)
                  :ARG3 (m2 / most)
                  :time (y / yet)))
      :snt2 (e / equal-01
            :ARG1 (c / check-01
                  :ARG0 (p / police))
            :ARG2 (c2 / cop
                  :mod (a / all))))"
"People are being shot, tear gassed, &amp; unlawfully detained in the streets. That's not constitutional.","# ::snt People are being shot, tear gassed, &amp; unlawfully detained in the streets. That's not constitutional.
(m / multi-sentence
      :snt1 (a / and
            :op1 (s / shoot-02
                  :ARG1 (p / person))
            :op2 (g / gas-03
                  :ARG1 p
                  :instrument (t / tear))
            :op3 (d / detain-01
                  :ARG1 p
                  :location (s2 / street)
                  :ARG1-of (e / enforce-01
                        :polarity -)))
      :snt2 (c / constitutional
            :polarity -
            :domain (t2 / that)))"
again?,"# ::snt again?
(e / event
      :polarity (a / amr-unknown)
      :mod (a2 / again))"
"bitch on twitter to make yourself feel like you care. But deep down, u really don't or you'd do something about it.","# ::snt bitch on twitter to make yourself feel like you care. But deep down, u really don't or you'd do something about it.
(m / multi-sentence
      :snt1 (b / bitch
            :medium (p / publication
                  :name (n / name
                        :op1 ""Twitter""))
            :purpose (m2 / make-02
                  :ARG1 (f / feel-01
                        :ARG0 b
                        :ARG1 (c / care-01
                              :ARG0 b)))
            :ARG0-of m2)
      :snt2 (c2 / contrast-01
            :ARG2 (d / do-02
                  :polarity -
                  :ARG0 (y / you)
                  :ARG1 (s / something)
                  :ARG2 (ii / it)
                  :condition d
                  :ARG0 y
                  :ARG1 s
                  :time (d2 / deep-down))))"
"Nope. Saw cigars, Then heard call about a robbery at the store. Connected dots.","# ::snt Nope. Saw cigars, Then heard call about a robbery at the store. Connected dots.
(m / multi-sentence
      :snt1 (n / nope)
      :snt2 (a / and
            :op1 (s / see-01
                  :ARG0 (ii / i)
                  :ARG1 (c / cigar))
            :op2 (h / hear-01
                  :ARG0 ii
                  :ARG1 (c2 / call-02
                        :topic (r / rob-01
                              :ARG1 (s2 / store)))
                  :time (t / then)))
      :snt3 (d / dot
            :ARG1-of (c3 / connect-01)))"
We call 'em rewrites in Hollywood. Hope he's using Final Draft.,"# ::snt We call 'em rewrites in Hollywood. Hope he's using Final Draft.
(m / multi-sentence
      :snt1 (c / call-01
            :ARG0 (w / we)
            :ARG1 (t / they)
            :ARG2 (r / rewrite-01)
            :location (m2 / market-sector
                  :name (n / name
                        :op1 ""Hollywood"")))
      :snt2 (h / hope-01
            :ARG1 (u / use-01
                  :ARG0 (h2 / he)
                  :ARG1 (t2 / thing
                        :name (n2 / name
                              :op1 ""Final""
                              :op2 ""Draft"")))))"
"Yes, and it will change a few more times until he gets it just the way that he wants it.","# ::snt Yes, and it will change a few more times until he gets it just the way that he wants it.
(a / and
      :op2 (c / change-01
            :ARG1 (ii / it)
            :frequency (f / few
                  :quant (m / more))
            :time (u / until
                  :op1 (g / get-01
                        :ARG0 (h / he)
                        :ARG1 ii
                        :manner (w / want-01
                              :ARG0 h
                              :ARG1 ii
                              :mod (j / just))))))"
about this kid?,"# ::snt about this kid?
(c / concern-02
      :ARG1 (k / kid
            :mod (t / this))
      :polarity (a / amr-unknown))"
"chief is ""speculating"" in public and knows that the officer is listening to his speculation (coaching the witness)","# ::snt chief is ""speculating"" in public and knows that the officer is listening to his speculation (coaching the witness)
(a / and
      :op1 (s / speculate-01
            :ARG0 (p / person
                  :ARG0-of (h / have-org-role-91
                        :ARG2 (c / chief)))
            :ARG1-of (p2 / public-02))
      :op2 (k / know-01
            :ARG0 p
            :ARG1 (l / listen-01
                  :ARG0 (o / officer)
                  :ARG1 (s2 / speculate-01
                        :ARG0 p)
                  :ARG1-of (m / mean-01
                        :ARG2 (c2 / coach-01
                              :ARG0 o
                              :ARG1 (p3 / person
                                    :ARG0-of (w / witness-01)))))))"
"nobody knows if he's innocent or not. Your assuming, and frankly no I dont. Doesn't effect my life at all","# ::snt nobody knows if he's innocent or not. Your assuming, and frankly no I dont. Doesn't effect my life at all
(m / multi-sentence
      :snt1 (k / know-01
            :ARG0 (n / nobody)
            :ARG1 (t / truth-value
                  :polarity-of (ii / innocent-01
                        :ARG1 (h / he))))
      :snt2 (c / contrast-01
            :ARG1 (a / assume-02
                  :ARG0 (y / you)
                  :ARG1 ii)
            :ARG2 (d / do-02
                  :polarity -
                  :ARG0 (ii2 / i)
                  :ARG1 (n2 / no)
                  :manner (f / frank)))
      :snt3 (a2 / affect-01
            :polarity -
            :ARG0 (ii3 / it)
            :ARG1 (l / life
                  :poss ii2)
            :degree (a3 / at-all)))"
sorry meant anyone not anymore.,"# ::snt sorry meant anyone not anymore.
(m / mean-01
      :ARG1 (s / sorry-01)
      :ARG2 (a / anyone
            :time (a2 / anymore
                  :polarity -)))"
same here so much be stuff being done here's a taste that's relevant to,"# ::snt same here so much be stuff being done here's a taste that's relevant to
(m / multi-sentence
      :snt1 (s / same-01
            :location (h / here))
      :snt2 (d / do-02
            :ARG1 (s2 / stuff
                  :ARG1-of (r / relevant-01
                        :ARG2 (t / taste)))
            :location (h2 / here)
            :ARG1-of (h3 / have-quant-91
                  :ARG2 (m2 / much)
                  :ARG3 (s3 / so))))"
so honestly long as it doesn't effect me or my life than no doesn't really bother me if other people have issues.,"# ::snt so honestly long as it doesn't effect me or my life than no doesn't really bother me if other people have issues.
(b / bother-01
      :polarity -
      :ARG0 (ii / it)
      :ARG1 (ii2 / i)
      :ARG1-of (r / real-04)
      :condition (ii3 / issue-02
            :ARG0 (p / person
                  :mod (o / other)))
      :condition (a / as-long-as
            :op1 (a2 / affect-01
                  :polarity -
                  :ARG0 ii
                  :ARG1 (o2 / or
                        :op1 ii2
                        :op2 (l / life
                              :poss ii2))))
      :ARG1-of (h / honest-01))"
. yep. pretty much true. cc,"# ::snt . yep. pretty much true. cc
(m / multi-sentence
      :snt1 (y / yep)
      :snt2 (t / true-01
            :degree (p / pretty-much))
      :snt3 (p2 / person
            :name (n / name
                  :op1 ""cc"")))"
makes sense even if cop didn't know about the robbery. Why would the kid have a box of cigars? Stop him &amp; find out,"# ::snt makes sense even if cop didn't know about the robbery. Why would the kid have a box of cigars? Stop him &amp; find out
(m / multi-sentence
      :snt1 (s / sense-02
            :concession (e / even-if
                  :op1 (k / know-01
                        :polarity -
                        :ARG0 (c / cop)
                        :ARG1 (r / rob-01))))
      :snt2 (h / have-03
            :ARG0 (k2 / kid)
            :ARG1 (b / box
                  :ARG0-of (c2 / contain-01
                        :ARG1 (c3 / cigar)))
            :ARG1-of (c4 / cause-01
                  :ARG0 (a / amr-unknown)))
      :snt3 (a2 / and
            :op1 (s2 / stop-01
                  :mode imperative
                  :ARG0 (y / you)
                  :ARG1 a2
                  :op1 k2
                  :op2 (a3 / amp)))
      :op2 (f / find-out-03
            :mode imperative
            :ARG0 y))"
"the answer to your question is ""Yes, Constantly""","# ::snt the answer to your question is ""Yes, Constantly""
(a / answer-01
      :ARG1 (q / question-01
            :ARG0 (y / you))
      :ARG2 (y2 / yes
            :manner (c / constant)))"
"who cares? Not a of u knew the kid or family, zero effect on your lives ZERO!!!!","# ::snt who cares? Not a of u knew the kid or family, zero effect on your lives ZERO!!!!
(m / multi-sentence
      :snt1 (c / care-01
            :ARG0 (a / amr-unknown))
      :snt2 (a2 / and
            :op1 (k / know-02
                  :polarity -
                  :ARG0 (y / you)
                  :ARG1 (o / or
                        :op1 (k2 / kid)
                        :op2 (f / family)))
            :op2 (a3 / affect-01
                  :quant 0
                  :ARG1 (l / life
                        :poss (y2 / you)))))"
I think this is chapter of the playbook,"# ::snt I think this is chapter of the playbook
(t / think-01
      :ARG0 (ii / i)
      :ARG1 (c / chapter
            :part-of (b / book
                  :name (n / name
                        :op1 "" playbook""))
            :domain (t2 / this)))"
: Is the Police Chief in changing the story? can they just _stop_ already????,"# ::snt : Is the Police Chief in changing the story? can they just _stop_ already????
(m / multi-sentence
      :snt1 (c / change-01
            :ARG0 (p / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (p2 / police)
                        :ARG2 (c2 / chief)))
            :ARG1 (s / story)
            :polarity (a / amr-unknown))
      :snt2 (p3 / possible-01
            :ARG1 (s2 / stop-01
                  :ARG0 (t / they)
                  :time (a2 / already)
                  :mod (j / just))
            :polarity (a3 / amr-unknown)))"
"He changed the story five hours ago. , Brown Family Says!","# ::snt He changed the story five hours ago. , Brown Family Says!
(s / say-01
      :ARG0 (f / family
            :name (n / name
                  :op1 ""Brown""))
      :ARG1 (c / change-01
            :ARG0 (h / he)
            :ARG1 (s2 / story)
            :time (b / before
                  :op1 (n2 / now)
                  :quant (t / temporal-quantity
                        :quant 5
                        :unit (h2 / hour)))))"
"u don't either my friend I just admit it. Like i said your not losing sleep, your not donating, not doing anything but.....","# ::snt u don't either my friend I just admit it. Like i said your not losing sleep, your not donating, not doing anything but.....
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (d / do-02
                  :polarity -
                  :ARG0 (y / you)
                  :ARG1 (a / anything))
            :ARG2 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 ii
                        :ARG2 (f / friend))))
      :snt2 (a2 / admit-01
            :ARG0 (ii2 / i)
            :ARG1 (ii3 / it)
            :mod (j / just))
      :snt3 (r / resemble-01
            :ARG2 (s2 / say-01
                  :ARG0 (ii4 / i)
                  :ARG1 (a3 / and
                        :op1 (l / lose-02
                              :polarity -
                              :ARG0 (y2 / you)
                              :ARG1 (s3 / sleep-01
                                    :ARG0 y2))
                        :op2 (d2 / donate-01
                              :polarity -
                              :ARG0 y2)
                        :op3 (d3 / do-02
                              :polarity -
                              :ARG0 y2
                              :ARG1 a)))))"
It doesn't matter what he did. Nothing in the realm of possiblities justifies him being shot + times,"# ::snt It doesn't matter what he did. Nothing in the realm of possiblities justifies him being shot + times
(m / multi-sentence
      :snt1 (m2 / matter-01
            :polarity -
            :ARG1 (t / thing
                  :ARG1-of (d / do-02
                        :ARG0 (h / he))))
      :snt2 (j / justify-01
            :ARG0 (n / nothing
                  :prep-in (r / realm
                        :mod t
                        :ARG1-of (p / possible-01))))
      :ARG1 (s / shoot-02
            :ARG1 (h2 / he)
            :frequency (t2 / times)))"
