comment,amr
"Count me in - worked for the House for years, I am mad. This is my House.","# ::snt Count me in - worked for the House for years, I am mad. This is my House.
(m / multi-sentence
      :snt1 (c / count-02
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (ii / i))
      :snt2 (m2 / mad-04
            :ARG0 (w / work-01
                  :ARG0 ii
                  :ARG2 (g / government-organization
                        :name (n / name
                              :op1 ""House""))
                  :duration (m3 / multiple
                        :op1 (t / temporal-quantity
                              :quant 1
                              :unit (y2 / year))))
            :ARG1 (ii2 / i))
      :snt3 (g2 / government-organization
            :name (n2 / name
                  :op1 ""House"")
            :poss (ii3 / i)
            :domain (t2 / this)))"
. Reads: We will use these crimes as justification for our political objectives. Join or perish.,"# ::snt . Reads: We will use these crimes as justification for our political objectives. Join or perish.
(m / multi-sentence
      :snt1 (r / read-01
            :ARG1 (u / use-01
                  :ARG0 (w / we)
                  :ARG1 (c / crime-02
                        :mod (t / this))
                  :ARG2 (j / justify-01
                        :ARG0 w
                        :ARG1 (o / objective
                              :mod (p / politics)
                              :poss w))))
      :snt2 (o2 / or
            :op1 (j2 / join-04
                  :mode imperative
                  :ARG0 (y / you))
            :op2 (p2 / perish-01
                  :mode imperative
                  :ARG0 y)))"
Its tomorrow so I'm recalling .'s most profound message which I support &amp; wish to implement. Let's reclaim our publc space -publicly.,"# ::snt Its tomorrow so I'm recalling .'s most profound message which I support &amp; wish to implement. Let's reclaim our publc space -publicly.
(m / multi-sentence
      :snt1 (c / cause-01
            :ARG0 (t / tomorrow)
            :ARG1 (r / recall-02
                  :ARG0 (ii / i)
                  :ARG1 (m2 / message-01
                        :ARG0 (p / person
                              :name (n / name
                                    :op1 ""&amp""))
                        :ARG1-of (h / have-degree-91
                              :ARG2 (p2 / profound)
                              :ARG3 (m3 / most))
                        :ARG1-of (ii2 / implement-01
                              :ARG0 ii
                              :ARG1-of (w / wish-01
                                    :ARG0 ii)))))
      :snt2 (r2 / reclaim-01
            :mode imperative
            :ARG0 (w2 / we)
            :ARG1 (s / space
                  :mod (p3 / public)
                  :poss w2)))"
"If we become paralyzed by fear, then they have won.","# ::snt If we become paralyzed by fear, then they have won.
(w / win-01
      :ARG0 (t / they)
      :condition (b / become-01
            :ARG1 (w2 / we)
            :ARG2 (p / paralyze-01
                  :ARG0 (f / fear-01)
                  :ARG1 w2)))"
"Sure, if people are still allowed to assemble there.","# ::snt Sure, if people are still allowed to assemble there.
(s / sure-02
      :condition (a / allow-01
            :ARG1 (a2 / assemble-02
                  :ARG0 (p / person)
                  :location (t / there))
            :mod (s2 / still)))"
"Getting together is nice sentiment but in an era of double tap bombings, not good policy.","# ::snt Getting together is nice sentiment but in an era of double tap bombings, not good policy.
(c / contrast-01
      :ARG1 (s / sentiment
            :ARG1-of (n / nice-01)
            :domain (g / get-together-14))
      :ARG2 (p / policy-01
            :polarity -
            :ARG1-of (g2 / good-02)
            :time (e / era
                  :time-of (b / bomb-01
                        :mod (t / tap
                              :mod (d / double))))))"
Lets do that! Andrew that is a great idea!,"# ::snt Lets do that! Andrew that is a great idea!
(m / multi-sentence
      :snt1 (d / do-02
            :mode imperative
            :ARG0 (w / we)
            :ARG1 (t / that))
      :snt2 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (ii2 / idea
                  :mod (g / great)
                  :domain (t2 / that))
            :ARG2 (p / person
                  :name (n / name
                        :op1 ""Andrew""))))"
They will have a shortage of virgins in Islamic paradise when we are finished with these a-holes.,"# ::snt They will have a shortage of virgins in Islamic paradise when we are finished with these a-holes.
(s / short-06
      :ARG1 (t / they)
      :ARG2 (v / virgin)
      :location (p / paradise
            :mod (r / religious-group
                  :name (n / name
                        :op1 ""Islam"")))
      :time (f / finish-01
            :ARG0 (w / we)
            :ARG1 (h / hole
                  :mod (t2 / this))))"
"I can't be in Ottawa tomorrow. Instead, I'm going to vote.","# ::snt I can't be in Ottawa tomorrow. Instead, I'm going to vote.
(m / multi-sentence
      :snt1 (p / possible-01
            :polarity -
            :ARG1 (b / be-located-at-91
                  :ARG1 (ii / i)
                  :ARG2 (c / city
                        :name (n / name
                              :op1 ""Ottawa""))
                  :time (t / tomorrow)))
      :snt2 (v / vote-01
            :ARG0 (ii2 / i)
            :ARG1-of (ii3 / instead-of-91)))"
": Easy for me to say from where I am, but what should happen, when this is over, is for people to assemble on Parliament HIll","# ::snt : Easy for me to say from where I am, but what should happen, when this is over, is for people to assemble on Parliament HIll
(c / contrast-01
      :ARG1 (e / easy-05
            :ARG1 (s / say-01
                  :ARG0 (ii / i)
                  :source (l / location
                        :ARG2-of (b / be-located-at-91
                              :ARG1 ii))))
      :ARG2 (r / recommend-01
            :ARG1 (a / assemble-02
                  :ARG0 (p / person)
                  :location (g / government-organization
                        :name (n / name
                              :op1 ""Parliament""))
                  :time (o / over-01
                        :ARG1 (t / this)))))"
"""remember remember october"" not that catchy but ""remember remember nov"" might catch on","# ::snt ""remember remember october"" not that catchy but ""remember remember nov"" might catch on
(c / contrast-01
      :ARG1 (r / remember-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (r2 / remember-01
                  :ARG0 y
                  :ARG1 (e / event
                        :name (n / name
                              :op1 ""october""))))
      :ARG2 (p / possible-01
            :ARG1 (c2 / catch-on-04
                  :ARG1 (s / string-entity
                        :value ""remember-01_2 :mode imperative :ARG0 you :ARG1 ( nov""))))"
"I'd like to retweet this, Andrew. Can you please unblock me?","# ::snt I'd like to retweet this, Andrew. Can you please unblock me?
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (l / like-02
                  :ARG0 ii
                  :ARG1 (r / retweet-01
                        :ARG0 ii
                        :ARG1 (t / this)))
            :ARG2 (p / person
                  :name (n / name
                        :op1 ""Andrew"")))
      :snt2 (p2 / possible-01
            :polarity (a / amr-unknown)
            :polite +
            :ARG1 (u / unblock-01
                  :ARG0 p
                  :ARG1 (ii2 / i))))"
Amen. Attacks don't change us; we can only change ourselves. The proper response of an open society is to remain open.,"# ::snt Amen. Attacks don't change us; we can only change ourselves. The proper response of an open society is to remain open.
(m / multi-sentence
      :snt1 (m2 / man
            :mode expressive)
      :snt2 (c / contrast-01
            :ARG1 (c2 / change-01
                  :polarity -
                  :ARG0 (a / attack-01)
                  :ARG1 (w / we))
            :ARG2 (p / possible-01
                  :ARG1 (c3 / change-01
                        :ARG0 w
                        :ARG1 w
                        :mod (o / only))))
      :snt3 (r / respond-01
            :ARG0 (s / society
                  :ARG1-of (o2 / open-04))
            :ARG2 (r2 / remain-01
                  :ARG1 s
                  :ARG3 (o3 / open-04
                        :ARG1 s))
            :mod (p2 / proper)))"
Remembrance Day at Cenotaph will be especially difficult this year. Wear your poppy in memory of all our fallen.,"# ::snt Remembrance Day at Cenotaph will be especially difficult this year. Wear your poppy in memory of all our fallen.
(m / multi-sentence
      :snt1 (d / difficult
            :domain (e / event
                  :name (n / name
                        :op1 ""Remembrance""
                        :op2 ""Day"")
                  :location (c / cenotaph))
            :time (y / year
                  :mod (t / this))
            :mod (e2 / especially))
      :snt2 (w / wear-01
            :mode imperative
            :ARG0 (y2 / you)
            :ARG1 (p / poppy
                  :poss y2)
            :purpose (r / remember-01
                  :ARG0 y2
                  :ARG1 (p2 / person
                        :ARG1-of (f / fall-05)
                        :mod (a / all)
                        :poss (w2 / we)))))"
thank you! !,"# ::snt thank you! !
(t / thank-01
      :mode expressive
      :ARG1 (y / you))"
Canadian soldiers murdered in days in Canada in service of Canada. Unprecedented.,"# ::snt Canadian soldiers murdered in days in Canada in service of Canada. Unprecedented.
(m / multi-sentence
      :snt1 (m2 / murder-01
            :ARG1 (s / soldier
                  :mod (c / country
                        :name (n / name
                              :op1 ""Canada"")))
            :time (m3 / multiple
                  :op1 (t / temporal-quantity
                        :quant 1
                        :unit (d / day)))
            :location c
            :purpose (s2 / serve-01
                  :ARG0 s
                  :ARG2 c))
      :snt2 (p / precedent
            :polarity -))"
thanks,"# ::snt thanks
(t / thank-01)"
And outside hospital of soldier shot at war memorial. A show of solidarity.,"# ::snt And outside hospital of soldier shot at war memorial. A show of solidarity.
(m / multi-sentence
      :snt1 (a / and
            :op2 (o / outside
                  :op1 (h / hospital
                        :location-of (s / shoot-01
                              :ARG1 (s2 / soldier)
                              :location (m2 / memorial
                                    :mod (w / war))))))
      :snt2 (s3 / show-01
            :ARG1 (s4 / solidarity)))"
Harper has already done that. After everything Malala endured for her beliefs and the PM capitulates like a jelly.,"# ::snt Harper has already done that. After everything Malala endured for her beliefs and the PM capitulates like a jelly.
(m / multi-sentence
      :snt1 (d / do-02
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Harper""))
            :ARG1 (t / that)
            :time (a / already))
      :snt2 (c / capitulate-01
            :ARG0 (p2 / person
                  :ARG0-of (h / have-org-role-91
                        :ARG2 (m2 / minister
                              :mod (p3 / prime))))
            :time (a2 / after
                  :op1 (e / endure-01
                        :ARG1 (p4 / person
                              :name (n2 / name
                                    :op1 ""Malala""))
                        :ARG2 (e2 / everything)
                        :ARG1-of (c2 / cause-01
                              :ARG0 (b / believe-01
                                    :ARG0 p4))))
            :manner (r / resemble-01
                  :ARG2 (j / jelly))))"
