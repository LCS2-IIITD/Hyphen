comment,amr
. now tracking reacue helicopters in area where went down,"# ::snt . now tracking reacue helicopters in area where went down
(t / track-01
      :ARG1 (h / helicopter
            :ARG0-of (e / evacuate-01))
      :time (n / now)
      :location (a / area
            :location-of (g / go-down-27)))"
"And to be precise we might not see anything bcz of the mountains, crash seems to have happened at m","# ::snt And to be precise we might not see anything bcz of the mountains, crash seems to have happened at m
(a / and
      :op2 (p / possible-01
            :ARG1 (s / see-01
                  :polarity -
                  :ARG0 (w / we)
                  :ARG1 (a2 / anything)
                  :location (m / mountain
                        :name (n / name
                              :op1 ""Bcz"")))
            :mod (p2 / precise)
            :ARG1-of (c / cause-01
                  :ARG0 (s2 / seem-01
                        :ARG1 (c2 / crash-01
                              :location m)))))"
Its too far away from the crash site,"# ::snt Its too far away from the crash site
(f / far
      :ARG2-of (h / have-degree-91
            :ARG1 (ii / it)
            :ARG3 (t / too)
            :ARG6 (b / be-located-at-91
                  :ARG1 ii
                  :ARG2 (a / away
                        :op1 (s / site
                              :location-of (c / crash-01))))))"
are now tracking helicopters in the area where went down,"# ::snt are now tracking helicopters in the area where went down
(t / track-01
      :ARG1 (h / helicopter
            :location (a / area
                  :ARG1-of (g / go-down-27)))
      :time (n / now))"
That's quite far from the last ADS-B position,"# ::snt That's quite far from the last ADS-B position
(b / be-located-at-91
      :ARG1 (t / that)
      :ARG2 (r / relative-position
            :op1 (p / position
                  :mod (p2 / product
                        :name (n / name
                              :op1 ""ADS-B""))
                  :mod (l / last))
            :quant (f / far
                  :degree (q / quite))))"
