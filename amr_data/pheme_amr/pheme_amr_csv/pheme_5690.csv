comment,amr
stratotanker? an aerial refueling aircraft...,"# ::snt stratotanker? an aerial refueling aircraft...
(a / aircraft
      :polarity (a2 / amr-unknown)
      :ARG0-of (r / refuel-01
            :manner (a3 / aerial))
      :domain (s / stratotanker))"
Because France was condition war games at the time of the crash. A missile cannot be ruled out.,"# ::snt Because France was condition war games at the time of the crash. A missile cannot be ruled out.
(m / multi-sentence
      :snt1 (c / cause-01
            :ARG0 (c2 / condition-01
                  :ARG1 (c3 / country
                        :name (n / name
                              :op1 ""France""))
                  :ARG2 (g / game
                        :mod (w / war))
                  :time (c4 / crash-01)))
      :snt2 (p / possible-01
            :polarity -
            :ARG1 (r / rule-out-02
                  :ARG1 (m2 / missile))))"
ok. i am not a aircraft pro,"# ::snt ok. i am not a aircraft pro
(p / pro
      :polarity -
      :mod (a / aircraft)
      :domain (ii / i)
      :ARG1-of (o / okay-04))"
Mobile version.,"# ::snt Mobile version.
(v / version
      :mod (m / mobile))"
here: too?,"# ::snt here: too?
(b / be-located-at-91
      :polarity (a / amr-unknown)
      :ARG1 (e / event
            :mod (t / too))
      :ARG2 (h / here))"
Condition war games ?,"# ::snt Condition war games ?
(c / condition-01
      :polarity (a / amr-unknown)
      :ARG1 (g / game
            :mod (w / war)))"
Marseille Bastia?,"# ::snt Marseille Bastia?
(p / person
      :polarity (a / amr-unknown)
      :name (n / name
            :op1 ""Marseille""
            :op2 ""Bastia""))"
why a stratotanker and not a E-3F to help local response units ? //,"# ::snt why a stratotanker and not a E-3F to help local response units ? //
(c / cause-01
      :ARG0 (a / amr-unknown)
      :ARG1 (c2 / contrast-01
            :ARG1 (s / stratotanker)
            :ARG2 (p / product
                  :name (n / name
                        :op1 ""E-3F""))
            :purpose (h / help-01
                  :ARG0 p
                  :ARG2 (u / unit
                        :ARG0-of (r / respond-01)
                        :ARG1-of (l / local-02)))))"
"If those gliders just east of that airforce plane's route aren't in that area regularly, the thirst is certainly real.","# ::snt If those gliders just east of that airforce plane's route aren't in that area regularly, the thirst is certainly real.
(r / real-04
      :ARG1 (t / thirst-01)
      :mod (c / certain)
      :condition (b / be-located-at-91
            :polarity -
            :ARG1 (g / glider
                  :mod (t2 / that)
                  :location (r2 / relative-position
                        :op1 (r3 / route
                              :poss (p / plane
                                    :mod (m / military
                                          :name (n / name
                                                :op1 ""Airforce""))))
                        :direction (e / east
                              :mod (j / just))))
            :ARG2 (a / area
                  :mod (t3 / that))
            :ARG1-of (r4 / regular-02)))"
Non-standard (left-hand turns) holding pattern.,"# ::snt Non-standard (left-hand turns) holding pattern.
(p / pattern-01
      :ARG1 (t / turn-01
            :ARG2 (h / hand
                  :ARG1-of (l / left-20))
            :ARG1-of (s / standard-02
                  :polarity -))
      :ARG0-of (h2 / hold-01))"
alles gut und gut gesichtet mein freund.,"# ::snt alles gut und gut gesichtet mein freund.
(f / freund
      :domain (a / all
            :mod (g / gut)
            :mod (g2 / gut)
            :mod (g3 / gut))
      :ARG1-of (p / personal-02))"
Well found!,"# ::snt Well found!
(f / find-01
      :ARG1-of (w / well-09))"
and other plane with no call sign is araound,"# ::snt and other plane with no call sign is araound
(a / and
      :op2 (a2 / astound-01
            :ARG0 (p / plane
                  :mod (o / other)
                  :ARG0-of (s / signal-07
                        :polarity -
                        :ARG3 (c / call-02)))))"
that's a glider,"# ::snt that's a glider
(g / glider
      :domain (t / that))"
And another Germanwings flight as well....,"# ::snt And another Germanwings flight as well....
(a / and
      :op2 (f / fly-01
            :ARG1 (a2 / aircraft-type
                  :name (n / name
                        :op1 ""Germanwings""))
            :mod (a3 / another)
            :mod (a4 / as-well)))"
Probably for refuelling jet fighter in the area.,"# ::snt Probably for refuelling jet fighter in the area.
(p / probable
      :domain (r / refuel-01
            :ARG1 (j / jet
                  :ARG0-of (f / fight-01))
            :location (a / area)))"
probably as radio relay station,"# ::snt probably as radio relay station
(p / probable
      :domain (s / station
            :ARG0-of (r / relay-01
                  :ARG1 (r2 / radio))))"
: French Air Force Boeing C-135FR Stratotanker flying over crash site,"# ::snt : French Air Force Boeing C-135FR Stratotanker flying over crash site
(f / fly-01
      :ARG2 (a / aircraft-type
            :name (n / name
                  :op1 ""C-135FR""
                  :op2 ""Stratotanker"")
            :poss (m / military
                  :name (n2 / name
                        :op1 ""Air""
                        :op2 ""Force"")
                  :poss (c / country
                        :name (n3 / name
                              :op1 ""France""))))
      :path (s / site
            :location-of (c2 / crash-01)))"
its disappeared!,"# ::snt its disappeared!
(d / disappear-01
      :ARG1 (ii / it))"
your servers are having a rough time,"# ::snt your servers are having a rough time
(r / rough-04
      :ARG1 (t / time
            :poss (p / person
                  :ARG0-of (s / server-01
                        :ARG1 (y / you)))))"
Peut tre deja en vol dans le coin et suffisament quip pour faire la liaison radio.,"# ::snt Peut tre deja en vol dans le coin et suffisament quip pour faire la liaison radio.
(a / and
      :op1 (h / have-polarity-91
            :ARG2 -
            :degree (p / peut-deja)
            :op2-of a)
      :ARG2 -
      :op3 (e / et
            :op1 (c / coin)
            :op2 (s / secure-02))
      :op4 (q / quip
            :ARG1-of (p2 / pour-02
                  :ARG3 (f / faire-03
                        :ARG1 (r / radio
                              :mod (l / liaison))))))"
