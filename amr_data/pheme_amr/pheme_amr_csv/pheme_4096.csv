comment,amr
ty Harry,"# ::snt ty Harry
(p / person
      :name (n / name
            :op1 ""ty""
            :op2 ""Harry""))"
merci,"# ::snt merci
(p / person
      :name (n / name
            :op1 ""Merci""))"
: Prince Harry signs the bookCharlieHebdo (via ) our kind condolences as well.,"# ::snt : Prince Harry signs the bookCharlieHebdo (via ) our kind condolences as well.
(s / sign-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Prince""
                  :op2 ""Harry""))
      :ARG1 (b / book
            :name (n2 / name
                  :op1 ""CharlieHebdo""))
      :manner (c / condolence
            :poss (w / we)
            :mod (k / kind)
            :mod (a / as-well)))"
why is she smiling? this is not a happy event,"# ::snt why is she smiling? this is not a happy event
(m / multi-sentence
      :snt1 (s / smile-01
            :ARG0 (s2 / she)
            :ARG1-of (c / cause-01
                  :ARG0 (a / amr-unknown)))
      :snt2 (e / event
            :polarity -
            :ARG1-of (h / happy-02)
            :domain (t / this)))"
lol,"# ::snt lol
(l / laugh-01
      :mode expressive
      :manner (l2 / loud))"
Its Shakespeare - Much Ado About Nothing! BBC WAKE UP DO SOMETHING REPORT THE TRUTH ABOUT MUSLIM THREATS,"# ::snt Its Shakespeare - Much Ado About Nothing! BBC WAKE UP DO SOMETHING REPORT THE TRUTH ABOUT MUSLIM THREATS
(m / multi-sentence
      :snt1 (p / person
            :name (n / name
                  :op1 ""Shakespeare"")
            :domain (ii / it)
            :topic (a / Ado
                  :topic (n2 / nothing)
                  :quant (m2 / much)))
      :snt2 (r / report-01
            :ARG0 (p2 / publication
                  :name (n3 / name
                        :op1 ""BBC""))
            :ARG1 (t / true-01
                  :ARG1 (h / hate-01
                        :ARG1 (p3 / person
                              :mod (r2 / religious-group
                                    :name (n4 / name
                                          :op1 ""Muslim"")))))
            :mod (s / something)))"
Prince Harry needs to get back to Afghanistan and take care of some business.,"# ::snt Prince Harry needs to get back to Afghanistan and take care of some business.
(n / need-01
      :ARG0 (p / person
            :name (n2 / name
                  :op1 ""Harry"")
            :ARG0-of (h / have-org-role-91
                  :ARG2 (p2 / prince)))
      :ARG1 (a / and
            :op1 (g / get-back-10
                  :ARG1 p
                  :ARG2 (c / country
                        :name (n3 / name
                              :op1 ""Afghanistan"")))
            :op2 (c2 / care-03
                  :ARG0 p
                  :ARG1 (b / business
                        :quant (s / some)))))"
"Geraldo, is that you??","# ::snt Geraldo, is that you??
(s / say-01
      :ARG1 (e / eraldo
            :domain (t / that)
            :ARG1-of (r / request-confirmation-91))
      :ARG2 (y / you))"
wonderful prince Harry - his Mother's Son,"# ::snt wonderful prince Harry - his Mother's Son
(p / prince
      :name (n / name
            :op1 ""Harry"")
      :mod (w / wonderful)
      :ARG0-of (h / have-rel-role-91
            :ARG1 (p2 / person
                  :ARG0-of (h2 / have-rel-role-91
                        :ARG1 p
                        :ARG2 (m / mother)))
            :ARG2 (s / son)))"
how about signing some letters of marque to plunder the Barbary Coast?,"# ::snt how about signing some letters of marque to plunder the Barbary Coast?
(a / amr-unknown
      :topic (s / sign-01
            :ARG1 (l / letter
                  :mod (m / marque)
                  :quant (s2 / some))
            :purpose (p / plunder-01
                  :ARG1 (c / coast
                        :name (n / name
                              :op1 ""Barbary""
                              :op2 ""Coast"")))))"
"wow, if you are comparing me to him I really need to hit the gym harder.","# ::snt wow, if you are comparing me to him I really need to hit the gym harder.
(n / need-01
      :ARG0 (ii / i)
      :ARG1 (h / hit-02
            :ARG0 ii
            :ARG1 (g / gym)
            :ARG1-of (h2 / hard-02
                  :ARG2-of (h3 / have-degree-91
                        :ARG1 h
                        :ARG3 (m / more))))
      :ARG1-of (r / real-04)
      :condition (c / compare-01
            :ARG0 (y / you)
            :ARG1 ii
            :ARG2 (h4 / he))
      :mod (w / wow
            :mode expressive))"
,"# ::snt 
(a / amr-empty)"
