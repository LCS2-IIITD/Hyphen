comment,amr
l'europe doit se lier contre l'Islam qui est contre la libert de pense,"# ::snt l'europe doit se lier contre l'Islam qui est contre la libert de pense
(d / doit-06
      :ARG0 (o / organization
            :name (n / name
                  :op1 ""European""
                  :op2 ""Union""))
      :ARG1 (c / contrast-01
            :ARG1 (h / have-quant-91
                  :ARG1 (c2 / country
                        :name (n2 / name
                              :op1 ""France""))
                  :ARG3 (m / more))
            :ARG2 c2
            :name (n3 / name
                  :op1 ""Islam"")
            :ARG1-of (e / estrange-01
                  :ARG2 c2
                  :name (n4 / name
                        :op1 ""Libert""
                        :op2 ""de""
                        :op3 ""Pense""))))"
U.S. armed &amp; Saudi's funded. Pushing to join fake war on terror.,"# ::snt U.S. armed &amp; Saudi's funded. Pushing to join fake war on terror.
(m / multi-sentence
      :snt1 (a / and
            :op1 (a2 / arm-01
                  :ARG1 (c / country
                        :name (n / name
                              :op1 ""U.S."")))
            :op2 (a3 / amp))
      :snt2 (f / fund-01
            :ARG1 (c2 / country
                  :name (n2 / name
                        :op1 ""Saudi""
                        :op2 ""Arabia"")))
      :snt3 (p / push-02
            :ARG2 (j / join-01
                  :ARG1 (w / war-01
                        :ARG2 (t / terror)
                        :ARG1-of (f2 / fake-02)))))"
Anyone gather in Lakemba?,"# ::snt Anyone gather in Lakemba?
(g / gather-03
      :polarity (a / amr-unknown)
      :ARG0 (a2 / anyone)
      :location (l / lake
            :name (n / name
                  :op1 ""Lakemba"")))"
soyons prudent pour viter les conneries de certains gouvernements,"# ::snt soyons prudent pour viter les conneries de certains gouvernements
(p / prudent
      :domain (s / soyons)
      :ARG1-of (p2 / pour-03
            :ARG2 (v / viter-01
                  :ARG1 (c / connergie
                        :mod (g / gouge-02
                              :ARG1 (c2 / certains))))))"
Sans violence SVP mais avec intelligence surtout,"# ::snt Sans violence SVP mais avec intelligence surtout
(a / and
      :op1 (e / et-cetera
            :op1 (v / violence))
      :op2 (e2 / et-cetera
            :op1 (m / mais-01
                  :ARG1 (p / person
                        :ARG0-of (h / have-org-role-91
                              :ARG1 (p2 / political-party
                                    :name (n / name
                                          :op1 ""Social""
                                          :op2 ""Liberation""
                                          :op3 ""Party"")))))
            :op2 (e3 / et-cetera
                  :op1 (ii / intelligence))))"
less gathering to pay respect and more cronulla riots are what Australia needs,"# ::snt less gathering to pay respect and more cronulla riots are what Australia needs
(n / need-01
      :ARG0 (c / country
            :name (n2 / name
                  :op1 ""Australia""))
      :ARG1 (a / and
            :op1 (g / gather-01
                  :polarity -
                  :purpose (r / respect-01))
            :op2 (r2 / riot-01
                  :mod (c2 / city
                        :name (n3 / name
                              :op1 ""Cronulla""))
                  :quant (m / more))))"
really for this ugly faggot DX pointless,"# ::snt really for this ugly faggot DX pointless
(p / point-03
      :polarity -
      :ARG1 (p2 / product
            :name (n / name
                  :op1 ""DX"")
            :mod (u / ugly)
            :mod (t / this))
      :ARG1-of (r / real-04))"
very LOW COST TV program will end HIGH cost TERRORISM from its roots for ever,"# ::snt very LOW COST TV program will end HIGH cost TERRORISM from its roots for ever
(e / end-01
      :ARG0 (p / program
            :mod (t / television)
            :ARG1-of (c / cost-01
                  :ARG1-of (l / low-04
                        :degree (v / very))))
      :ARG1 (t2 / terrorism
            :ARG1-of (c2 / cost-01
                  :ARG1-of (l2 / low-04
                        :degree v)))
      :ARG2 (r / root-02
            :ARG1 t2
            :ARG2 (r2 / roots
                  :poss p))
      :time (e2 / ever))"
thanks,"# ::snt thanks
(t / thank-01)"
