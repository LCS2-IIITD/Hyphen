comment,amr
when you first became aware of the situation you tweeted that prices will increase.,"# ::snt when you first became aware of the situation you tweeted that prices will increase.
(t / tweet-01
      :ARG0 (y / you)
      :ARG1 (ii / increase-01
            :ARG1 (p / price-01))
      :time (r / realize-01
            :ARG0 y
            :ARG1 (s / situation)
            :ord (o / ordinal-entity
                  :value 1)))"
but you do Uber for trying to increase drivers. My work here is done your honour.,"# ::snt but you do Uber for trying to increase drivers. My work here is done your honour.
(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG2 (d / do-02
                  :ARG0 (y / you)
                  :ARG1 (c2 / company
                        :name (n / name
                              :op1 "" Uber""))
                  :ARG1-of (c3 / cause-01
                        :ARG0 (t / try-01
                              :ARG0 y
                              :ARG1 (ii / increase-01
                                    :ARG0 y
                                    :ARG1 (p / person
                                          :ARG0-of (d2 / drive-01)))))))
      :snt2 (d3 / do-02
            :ARG0 (ii2 / i)
            :ARG1 (w / work-01
                  :ARG0 ii2
                  :location (h / here))
            :ARG2 (h2 / honor-01
                  :ARG1 (y2 / you))))"
cut the BS they wanted to surge price now back tracking,"# ::snt cut the BS they wanted to surge price now back tracking
(c / cut-03
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (b / bullshit-01
            :ARG1 (w / want-01
                  :ARG0 (t / they)
                  :ARG1 (s / surge-01
                        :ARG0 t
                        :ARG1 (p / price-01))))
      :time (n / now)
      :manner (b2 / back-02
            :ARG1 (t2 / track-01)))"
"Uber is covering the cost of all rides, Uber is still paying drivers higher fares to encourage them to pickup riders.","# ::snt Uber is covering the cost of all rides, Uber is still paying drivers higher fares to encourage them to pickup riders.
(a / and
      :op1 (c / cover-01
            :ARG0 (c2 / company
                  :name (n / name
                        :op1 ""Uber""))
            :ARG1 (c3 / cost-01
                  :ARG1 (r / ride-01
                        :mod (a2 / all))))
      :op2 (p / pay-01
            :ARG0 c2
            :ARG1 (f / fare
                  :ARG1-of (h / have-degree-91
                        :ARG2 (h2 / high-02)
                        :ARG3 (m / more)))
            :ARG2 (p2 / person
                  :ARG0-of (d / drive-01))
            :mod (s / still)
            :purpose (e / encourage-01
                  :ARG0 c2
                  :ARG1 p2
                  :ARG2 (r2 / ride-01
                        :ARG0 p2
                        :mod (p3 / pickup)))))"
Uber trips out of the CBD today are free to help Sydneysiders get home safely. See,"# ::snt Uber trips out of the CBD today are free to help Sydneysiders get home safely. See
(m / multi-sentence
      :snt1 (f / free-03
            :ARG1 (t / trip-03
                  :ARG0 (c / company
                        :name (n / name
                              :op1 ""Uber""))
                  :time (t2 / today)
                  :direction (o / out-of
                        :op1 (c2 / city-district
                              :name (n2 / name
                                    :op1 ""CBD""))))
            :purpose (h / help-01
                  :ARG0 t
                  :ARG1 (g / get-05
                        :ARG1 (p / person
                              :mod c2
                              :name (n3 / name
                                    :op1 ""Sydney"")))
                  :ARG2 (h2 / home)
                  :ARG1-of (s / safe-01))
            :ARG2 p)
      :snt2 (s2 / see-01))"
,"# ::snt 
(a / amr-empty)"
didn't make it very clear in the beginning.,"# ::snt didn't make it very clear in the beginning.
(m / make-02
      :polarity -
      :ARG1 (c / clear-06
            :ARG1 (ii / it)
            :degree (v / very))
      :time (b / begin-01))"
so our GOVERNMENT is making money from people trying to get out of a hostage situation but you don't shout and yell at them...,"# ::snt so our GOVERNMENT is making money from people trying to get out of a hostage situation but you don't shout and yell at them...
(ii / infer-01
      :ARG1 (m / make-05
            :ARG0 (g / government-organization
                  :ARG0-of (g2 / govern-01)
                  :poss (w / we))
            :ARG1 (m2 / money)
            :ARG2 (p / person
                  :ARG0-of (t / try-01
                        :ARG1 (g3 / get-05
                              :ARG1 p
                              :ARG2 (o / out-06
                                    :ARG1 p
                                    :ARG2 (s / situation
                                          :mod (h / hostage))))))
            :concession-of (a / and
                  :op1 (s2 / shout-01
                        :polarity -
                        :ARG0 (y / you)
                        :ARG2 p)
                  :op2 (y2 / yell-01
                        :polarity -
                        :ARG0 y
                        :ARG2 p))))"
"Yeah I think so. They're getting $100+, riders aren't wearing diff. Good gesture. Poor message transmission","# ::snt Yeah I think so. They're getting $100+, riders aren't wearing diff. Good gesture. Poor message transmission
(m / multi-sentence
      :snt1 (t / think-01
            :ARG0 (ii / i)
            :ARG1 (s / so)
            :mod (y / yeah))
      :snt2 (w / wear-01
            :polarity -
            :ARG0 (p / person
                  :ARG0-of (r / ride-01))
            :ARG1 (p2 / product
                  :name (n / name
                        :op1 ""Diff"")))
      :snt3 (g / gesture-01
            :ARG1-of (g2 / good-02))
      :snt4 (t2 / transmit-01
            :ARG1 (m2 / message)
            :mod (p3 / poor)))"
Faster backflip than Tony Abbott!,"# ::snt Faster backflip than Tony Abbott!
(h / have-degree-91
      :mode expressive
      :ARG1 (b / backflip)
      :ARG2 (f / fast-02)
      :ARG3 (m / more)
      :ARG4 (p / person
            :name (n / name
                  :op1 ""Tony""
                  :op2 ""Abbott"")))"
". That initial tweet was on point. Their customers, and the outraged, should have been smarter.","# ::snt . That initial tweet was on point. Their customers, and the outraged, should have been smarter.
(m / multi-sentence
      :snt1 (o / on-point
            :domain (t / tweet-01
                  :mod (ii / initial)
                  :mod (t2 / that)))
      :snt2 (r / recommend-01
            :ARG1 (s / smart-06
                  :ARG1 (a / and
                        :op1 (c / customer
                              :poss (t3 / they))
                        :op2 (p / person
                              :ARG1-of (o2 / outrage-01)))
                  :ARG2-of (h / have-degree-91
                        :ARG1 a
                        :ARG3 (m2 / more)))))"
Thanks for the free ride home today. I felt very safe and got home efficiently.,"# ::snt Thanks for the free ride home today. I felt very safe and got home efficiently.
(m / multi-sentence
      :snt1 (t / thank-01
            :ARG0 (ii / i)
            :ARG1 (y / you)
            :ARG2 (r / ride-01
                  :ARG0 y
                  :ARG1 (h / home)
                  :ARG1-of (f / free-03)
                  :time (t2 / today)))
      :snt2 (a / and
            :op1 (f2 / feel-01
                  :ARG0 (ii2 / i)
                  :ARG1 (s / safe-01
                        :ARG1 ii2
                        :degree (v / very)))
            :op2 (g / get-05
                  :ARG1 ii2
                  :ARG2 h
                  :manner (e / efficient-01))))"
who's paying then?,"# ::snt who's paying then?
(p / pay-01
      :ARG0 (a / amr-unknown)
      :time (t / then))"
for sure,"# ::snt for sure
(s / sure-02)"
What is the wait time for a ride out of the Sydney CBD?,"# ::snt What is the wait time for a ride out of the Sydney CBD?
(w / wait-01
      :ARG2 (r / ride-01
            :ARG1 (o / out-06
                  :ARG2 (c / city-district
                        :name (n / name
                              :op1 ""Sydney""
                              :op2 ""CBD""))))
      :ARG3 (a / amr-unknown))"
hikes prices during the . How is that helping? Giving away free rides would help.,"# ::snt hikes prices during the . How is that helping? Giving away free rides would help.
(m / multi-sentence
      :snt1 (d / dislike-01
            :ARG1 (p / price-01)
            :time (e / event))
      :snt2 (h / help-01
            :ARG0 (g / give-away-02
                  :ARG1 (r / ride-01
                        :ARG1-of (f / free-03)))
            :manner (a / amr-unknown)))"
what does this mean?,"# ::snt what does this mean?
(m / mean-01
      :ARG1 (t / this)
      :ARG2 (a / amr-unknown))"
"This is a ubers drivers forum, not sponsored by uber. Read what it's like in a mature uber market.","# ::snt This is a ubers drivers forum, not sponsored by uber. Read what it's like in a mature uber market.
(m / multi-sentence
      :snt1 (f / forum
            :domain (t / this)
            :topic (p / person
                  :ARG0-of (d / drive-01)
                  :mod (c / company
                        :name (n / name
                              :op1 ""United""
                              :op2 ""Kingdom"")))
            :ARG1-of (s / sponsor-01
                  :polarity -
                  :ARG0 c))
      :snt2 (r / read-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (t2 / thing
                  :ARG2-of (r2 / resemble-01
                        :ARG1 (m2 / market
                              :mod c
                              :ARG1-of (m3 / mature-02))))))"
"wait, does 'higher rate' mean what is paying drivers?","# ::snt wait, does 'higher rate' mean what is paying drivers?
(m / multi-sentence
      :snt1 (w / wait-01
            :mode imperative
            :ARG1 (y / you))
      :snt2 (m2 / mean-01
            :ARG1 (r / rate
                  :ARG1-of (h / have-degree-91
                        :ARG2 (h2 / high-02
                              :ARG1 r)
                        :ARG3 (m3 / more)))
            :ARG2 (a / amr-unknown
                  :ARG0-of (p / pay-01
                        :ARG2 (p2 / person
                              :ARG0-of (d / drive-01))))))"
don't know if your being sarcastic or going of topic,"# ::snt don't know if your being sarcastic or going of topic
(k / know-01
      :polarity -
      :ARG0 (ii / i)
      :ARG1 (o / or
            :op1 (s / sarcasm
                  :domain (y / you))
            :op2 (g / go-06
                  :ARG0 y
                  :ARG2 (t / topic))))"
Uber trips out of the CBD today are free to help Sydneysiders get home safely. See,"# ::snt Uber trips out of the CBD today are free to help Sydneysiders get home safely. See
(m / multi-sentence
      :snt1 (f / free-03
            :ARG1 (t / trip-03
                  :ARG0 (c / company
                        :name (n / name
                              :op1 ""Uber""))
                  :time (t2 / today)
                  :direction (o / out-of
                        :op1 (c2 / city-district
                              :name (n2 / name
                                    :op1 ""CBD""))))
            :purpose (h / help-01
                  :ARG0 t
                  :ARG1 (g / get-05
                        :ARG1 (p / person
                              :mod c2
                              :name (n3 / name
                                    :op1 ""Sydney"")))
                  :ARG2 (h2 / home)
                  :ARG1-of (s / safe-01))
            :ARG2 p)
      :snt2 (s2 / see-01))"
Uber trips out of the CBD today are free to help Sydneysiders get home safely. See,"# ::snt Uber trips out of the CBD today are free to help Sydneysiders get home safely. See
(m / multi-sentence
      :snt1 (f / free-03
            :ARG1 (t / trip-03
                  :ARG0 (c / company
                        :name (n / name
                              :op1 ""Uber""))
                  :time (t2 / today)
                  :direction (o / out-of
                        :op1 (c2 / city-district
                              :name (n2 / name
                                    :op1 ""CBD""))))
            :purpose (h / help-01
                  :ARG0 t
                  :ARG1 (g / get-05
                        :ARG1 (p / person
                              :mod c2
                              :name (n3 / name
                                    :op1 ""Sydney"")))
                  :ARG2 (h2 / home)
                  :ARG1-of (s / safe-01))
            :ARG2 p)
      :snt2 (s2 / see-01))"
"nope. I respect them for making the rides free, I can also see how they wanted to get more drivers in","# ::snt nope. I respect them for making the rides free, I can also see how they wanted to get more drivers in
(m / multi-sentence
      :snt1 (n / nope)
      :snt2 (c / contrast-01
            :ARG1 (r / respect-01
                  :ARG0 (ii / i)
                  :ARG1 (t / they)
                  :ARG2 (m2 / make-02
                        :ARG0 t
                        :ARG1 (f / free-03
                              :ARG1 (r2 / ride))))
            :ARG2 (p / possible-01
                  :ARG1 (s / see-01
                        :ARG0 (ii2 / i)
                        :ARG1 (w / want-01
                              :ARG0 (t2 / they)
                              :ARG1 (g / get-05
                                    :ARG0 t2
                                    :ARG1 (p2 / person
                                          :ARG0-of (d / drive-01)
                                          :quant (m3 / more))))
                        :mod (a / also)))))"
,"# ::snt 
(a / amr-empty)"
What do you pay your drivers?,"# ::snt What do you pay your drivers?
(p / pay-01
      :ARG0 (y / you)
      :ARG1 (a / amr-unknown)
      :ARG2 (p2 / person
            :ARG0-of (d / drive-01
                  :ARG1 y)))"
"reports around the world flooding in of your % fare increase in response to a siege situation, smart.","# ::snt reports around the world flooding in of your % fare increase in response to a siege situation, smart.
(s / say-01
      :ARG1 (r / report-01
            :ARG1 (f / flood-01
                  :ARG1 (a / around
                        :op1 (w / world))
                  :ARG2 (ii / increase-01
                        :ARG1 (f2 / fare
                              :poss (y / you))
                        :ARG2 (p / percentage))
                  :ARG2-of (r2 / respond-01
                        :ARG1 (s2 / situation
                              :mod (s3 / siege-01))))
            :ARG1-of (s4 / smart-06))
      :ARG2 y)"
. Every can take a M40 $30 discount voucher. But then isn't public transport.,"# ::snt . Every can take a M40 $30 discount voucher. But then isn't public transport.
(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (t / take-01
                  :ARG0 (e / every)
                  :ARG1 (v / voucher
                        :mod (d / discount-01
                              :ARG3 (m2 / monetary-quantity
                                    :quant 30
                                    :unit (d2 / dollar))))))
      :snt2 (c / contrast-01
            :ARG2 (t2 / transport
                  :polarity -
                  :ARG1-of (p2 / public-02)
                  :domain (t3 / then))))"
Uber is covering the cost of all rides.,"# ::snt Uber is covering the cost of all rides.
(c / cover-01
      :ARG0 (c2 / company
            :name (n / name
                  :op1 ""Uber""))
      :ARG1 (c3 / cost-01
            :ARG1 (r / ride-01
                  :mod (a / all))))"
"Uber is covering the cost of all rides, Uber is still paying drivers higher fares to encourage them to pickup riders.","# ::snt Uber is covering the cost of all rides, Uber is still paying drivers higher fares to encourage them to pickup riders.
(a / and
      :op1 (c / cover-01
            :ARG0 (c2 / company
                  :name (n / name
                        :op1 ""Uber""))
            :ARG1 (c3 / cost-01
                  :ARG1 (r / ride-01
                        :mod (a2 / all))))
      :op2 (p / pay-01
            :ARG0 c2
            :ARG1 (f / fare
                  :ARG1-of (h / have-degree-91
                        :ARG2 (h2 / high-02)
                        :ARG3 (m / more)))
            :ARG2 (p2 / person
                  :ARG0-of (d / drive-01))
            :mod (s / still)
            :purpose (e / encourage-01
                  :ARG0 c2
                  :ARG1 p2
                  :ARG2 (r2 / ride-01
                        :ARG0 p2
                        :mod (p3 / pickup)))))"
The rides are free. will be paying the drivers the increased rate out of their own pocket.,"# ::snt The rides are free. will be paying the drivers the increased rate out of their own pocket.
(m / multi-sentence
      :snt1 (f / free-03
            :ARG1 (r / ride-01))
      :snt2 (p / pay-01
            :ARG1 (r2 / rate
                  :ARG1-of (ii / increase-01))
            :ARG2 (p2 / person
                  :ARG0-of (d / drive-01))
            :manner (o / out-of
                  :op1 (p3 / pocket
                        :poss p2))))"
Being literate in economics is out of favor these days. Bad for politics.,"# ::snt Being literate in economics is out of favor these days. Bad for politics.
(m / multi-sentence
      :snt1 (f / favor-01
            :polarity -
            :ARG1 (l / literate
                  :topic (e / economics)
                  :domain (p / person))
            :time (d / day
                  :mod (t / this)))
      :snt2 (b / bad-04
            :ARG2 (p2 / politics)))"
Thanks,"# ::snt Thanks
(t / thank-01
      :ARG0 (ii / i)
      :ARG1 (y / you))"
Listen up dum-dum. They ARE paying the drivers more. Reading is a skill.,"# ::snt Listen up dum-dum. They ARE paying the drivers more. Reading is a skill.
(m / multi-sentence
      :snt1 (l / listen-up-02
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (d / dum-dum))
      :snt2 (p / pay-01
            :ARG0 (t / they)
            :ARG1 (m2 / more)
            :ARG2 (p2 / person
                  :ARG0-of (d2 / drive-01)))
      :snt3 (s / skill
            :domain (r / read-01)))"
Ah that makes sense then thanks,"# ::snt Ah that makes sense then thanks
(s / sense-02
      :ARG1 (t / that)
      :mod (a / ah
            :mode expressive)
      :ARG2-of (t2 / thank-01
            :ARG0 (ii / i)
            :ARG1 (y / you)))"
Only after backlash. Kinda like getting your hand caught in the cookie jar. ?,"# ::snt Only after backlash. Kinda like getting your hand caught in the cookie jar. ?
(m / multi-sentence
      :snt1 (a / after
            :op1 (b / backlash-01)
            :mod (o / only))
      :snt2 (r / resemble-01
            :ARG2 (g / get-04
                  :ARG1 (c / catch-01
                        :ARG1 (h / hand
                              :part-of (y / you))
                        :ARG2 (b2 / be-located-at-91
                              :ARG1 h
                              :ARG2 (j / jar
                                    :mod (c2 / cookie)))))
            :ARG1-of (r2 / request-confirmation-91)))"
how about you fuck off back to your corner of the internet where your opinion matters and I'll do the same.,"# ::snt how about you fuck off back to your corner of the internet where your opinion matters and I'll do the same.
(a / and
      :op1 (f / fuck-off-03
            :ARG0 (y / you)
            :location (c / corner
                  :poss y
                  :mod (ii / internet)
                  :location-of (m / matter-01
                        :ARG1 (t / thing
                              :ARG1-of (o / opine-01
                                    :ARG0 y))))
            :mod (o2 / off))
      :op2 (d / do-02
            :ARG0 (ii2 / i)
            :ARG1 t
            :ARG1-of (s / same-01
                  :ARG2 f))
      :mod (a2 / amr-unknown))"
"Well that's not true. First, you tweeted an explanation about why you were gouging customers.","# ::snt Well that's not true. First, you tweeted an explanation about why you were gouging customers.
(m / multi-sentence
      :snt1 (t / true-01
            :polarity -
            :ARG1 (t2 / that)
            :mod (w / well))
      :snt2 (t3 / tweet-02
            :ARG0 (y / you)
            :ARG1 (e / explain-01
                  :ARG0 y
                  :ARG1 (t4 / thing
                        :ARG0-of (c / cause-01
                              :ARG1 (g / gouge-02
                                    :ARG0 y
                                    :ARG1 (c2 / customer)))))
            :ord (o / ordinal-entity
                  :value 1)))"
It is an illegal bloody service. Why don't you thank regular taxi drivers?Encouraging theft are we?,"# ::snt It is an illegal bloody service. Why don't you thank regular taxi drivers?Encouraging theft are we?
(m / multi-sentence
      :snt1 (s / service
            :mod (b / bloody)
            :ARG1-of (l / legal-02
                  :polarity -)
            :domain (ii / it))
      :snt2 (c / cause-01
            :ARG0 (a / amr-unknown)
            :ARG1 (t / thank-01
                  :polarity -
                  :ARG0 (y / you)
                  :ARG1 (p / person
                        :ARG0-of (d / drive-01
                              :ARG1 (t2 / taxi))
                        :ARG1-of (r / regular-03))))
      :snt3 (e / encourage-01
            :ARG0 (w / we)
            :ARG2 (s2 / steal-01)
            :ARG1-of (r2 / request-confirmation-91)))"
I see your point. Maybe should make transport free from the CBD today.,"# ::snt I see your point. Maybe should make transport free from the CBD today.
(m / multi-sentence
      :snt1 (s / see-01
            :ARG0 (ii / i)
            :ARG1 (p / point-04
                  :ARG0 (y / you)))
      :snt2 (p2 / possible-01
            :ARG1 (r / recommend-01
                  :ARG1 (m2 / make-02
                        :ARG1 (f / free-03
                              :ARG1 (t / transport-01)
                              :source (c / city-district
                                    :name (n / name
                                          :op1 ""CBD"")))
                        :time (t2 / today)))))"
"Uber is covering the cost of all rides, Uber is still paying drivers higher fares to encourage them to do pickups","# ::snt Uber is covering the cost of all rides, Uber is still paying drivers higher fares to encourage them to do pickups
(a / and
      :op1 (c / cover-01
            :ARG0 (c2 / company
                  :name (n / name
                        :op1 ""Uber""))
            :ARG1 (c3 / cost-01
                  :ARG1 (r / ride-01
                        :mod (a2 / all))))
      :op2 (p / pay-01
            :ARG0 c2
            :ARG1 (f / fare
                  :ARG1-of (h / have-degree-91
                        :ARG2 (h2 / high-02)
                        :ARG3 (m / more)))
            :ARG2 (p2 / person
                  :ARG0-of (d / drive-01))
            :mod (s / still)
            :purpose (e / encourage-01
                  :ARG0 c2
                  :ARG1 p2
                  :ARG2 (d2 / do-02
                        :ARG0 p2
                        :ARG1 (p3 / pickup)))))"
U don't pay extra for PT at desperate . My apologies if I got the issue confused. I agree PT for everyone regardless of class.,"# ::snt U don't pay extra for PT at desperate . My apologies if I got the issue confused. I agree PT for everyone regardless of class.
(m / multi-sentence
      :snt1 (p / pay-01
            :polarity -
            :ARG0 (y / you)
            :ARG1 (e / extra)
            :ARG3 (t / thing
                  :name (n / name
                        :op1 ""PT""))
            :ARG1-of (d / desperate-02))
      :snt2 (a / apologize-01
            :ARG0 (ii / i)
            :condition (c / confuse-01
                  :ARG1 ii
                  :ARG2 (t2 / thing
                        :ARG0-of (ii2 / issue-02))))
      :snt3 (a2 / agree-01
            :ARG0 ii
            :ARG1 t
            :ARG2 (e2 / everyone)
            :ARG1-of (r / regardless-91
                  :ARG2 (c2 / class))))"
I'm baffled by how few of its customers actually know how Uber works.,"# ::snt I'm baffled by how few of its customers actually know how Uber works.
(b / baffle-01
      :ARG0 (k / know-01
            :ARG0 (c / customer
                  :quant (f / few
                        :degree (s / so))
                  :ARG1-of (ii / include-91
                        :ARG2 (c2 / customer
                              :poss (c3 / company
                                    :name (n / name
                                          :op1 "" Uber"")))))
            :ARG1 (t / thing
                  :manner-of (w / work-09
                        :ARG1 c3))
            :ARG1-of (a / actual-02))
      :ARG1 (ii2 / i))"
So are rides free or more expensive? Your tweet is very unclear,"# ::snt So are rides free or more expensive? Your tweet is very unclear
(m / multi-sentence
      :snt1 (a / amr-choice
            :op1 (f / free-03
                  :ARG1 (r / ride))
            :op2 (h / have-degree-91
                  :ARG1 r
                  :ARG2 (e / expensive)
                  :ARG3 (m2 / more)))
      :snt2 (c / clear-06
            :polarity -
            :ARG1 (t / tweet-01
                  :ARG0 (y / you))
            :degree (v / very)))"
thx.,"# ::snt thx.
(s / string-entity
      :value ""thx"")"
you really gotta stop the swarm model or at least have someone actually look at WHY an area is swarming.,"# ::snt you really gotta stop the swarm model or at least have someone actually look at WHY an area is swarming.
(o / or
      :op1 (o2 / obligate-01
            :ARG1 (y / you)
            :ARG2 (s / stop-01
                  :ARG0 y
                  :ARG1 (m / model-01
                        :ARG1 (s2 / swarm-01)))
            :ARG1-of (r / real-04))
      :op2 (h / have-04
            :ARG0 y
            :ARG1 (l / look-01
                  :ARG0 (s3 / someone)
                  :ARG1 (t / thing
                        :ARG0-of (c / cause-01
                              :ARG1 (s4 / swarm-01
                                    :ARG1 (a / area))))
                  :mod (a2 / at-least)
                  :ARG1-of (a3 / actual-02))))"
. Seems. A global marketing disaster Uber is trying to fix.,"# ::snt . Seems. A global marketing disaster Uber is trying to fix.
(s / seem-01
      :ARG1 (t / try-01
            :ARG0 (c / company
                  :name (n / name
                        :op1 "" Uber""))
            :ARG1 (f / fix-02
                  :ARG0 c
                  :ARG1 (d / disaster
                        :topic (m / market-01
                              :mod (g / globe))))))"
I'm kinda new to (active) twitter but I can see the praises of a knee jerk reaction. It highlights the collective mind issues.,"# ::snt I'm kinda new to (active) twitter but I can see the praises of a knee jerk reaction. It highlights the collective mind issues.
(m / multi-sentence
      :snt1 (n / new-02
            :ARG1 (ii / i)
            :ARG2 (p / publication
                  :name (n2 / name
                        :op1 ""Twitter"")
                  :mod (a / active))
            :degree (k / kind-of)
            :concession-of (p2 / possible-01
                  :ARG1 (s / see-01
                        :ARG0 ii
                        :ARG1 (p3 / praise-01
                              :ARG1 (r / react-01
                                    :manner (j / jerk-01
                                          :ARG1 (k2 / knee)))))))
      :snt2 (h / highlight-01
            :ARG0 (ii2 / it)
            :ARG1 (ii3 / issue-02
                  :ARG0 (m2 / mind)
                  :mod (c / collective))))"
"still looks like a PR issue to me, look at the backlash. Never assume the customer has same knowledge you do .","# ::snt still looks like a PR issue to me, look at the backlash. Never assume the customer has same knowledge you do .
(m / multi-sentence
      :snt1 (l / look-01
            :ARG0 (ii / i)
            :ARG1 (ii2 / issue-02
                  :ARG0 (p / public-02)
                  :ARG1 ii
                  :mod (s / still)))
      :snt2 l
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (b / backlash-01)
      :snt3 (a / assume-02
            :polarity -
            :mode imperative
            :ARG0 (y2 / you)
            :ARG1 (k / know-01
                  :ARG0 (c / customer)
                  :ARG1-of (s2 / same-01
                        :ARG2 (k2 / know-01
                              :ARG0 y2)))
            :time (e / ever)))"
"FWIW I think they're communicating fine now, that initial tweet was a grenade they should've rewritten.","# ::snt FWIW I think they're communicating fine now, that initial tweet was a grenade they should've rewritten.
(a / and
      :op1 (t / think-01
            :ARG0 (ii / i)
            :ARG1 (c / communicate-01
                  :ARG0 (t2 / they)
                  :ARG1-of (f / fine-04)
                  :time (n / now)))
      :op2 (g / grenade
            :domain (t3 / tweet-01
                  :mod (ii2 / initial)
                  :mod (t4 / that))
            :ARG1-of (r / rewrite-01
                  :ARG0 t2
                  :ARG1-of (r2 / recommend-01
                        :ARG2 t2)))
      :ARG1-of (h / honest-01
            :ARG0 ii))"
"Uber is covering the cost of all rides, Uber is paying drivers higher fares to get into the CBD.","# ::snt Uber is covering the cost of all rides, Uber is paying drivers higher fares to get into the CBD.
(a / and
      :op1 (c / cover-01
            :ARG0 (c2 / company
                  :name (n / name
                        :op1 ""Uber""))
            :ARG1 (c3 / cost-01
                  :ARG1 (r / ride-01
                        :mod (a2 / all))))
      :op2 (p / pay-01
            :ARG0 c2
            :ARG1 (f / fare
                  :ARG1-of (h / have-degree-91
                        :ARG2 (h2 / high-02)
                        :ARG3 (m / more)))
            :ARG2 (p2 / person
                  :ARG0-of (d / drive-01))
            :purpose (g / get-05
                  :ARG1 p2
                  :ARG2 (c4 / city-district
                        :name (n2 / name
                              :op1 ""CBD"")))))"
