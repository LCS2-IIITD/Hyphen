comment,amr
,"# ::snt 
(a / amr-empty)"
MT : A320 D-AIPX is one of the oldest A320 and was delivered in .,"# ::snt MT : A320 D-AIPX is one of the oldest A320 and was delivered in .
(m / multi-sentence
      :snt1 (b / byline-91
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MT"")))
      :snt2 (a / and
            :op1 (ii / include-91
                  :ARG1 (p2 / product
                        :name (n2 / name
                              :op1 ""A320""
                              :op2 ""D-AIPX""))
                  :ARG2 (p3 / product
                        :mod (o / old
                              :ARG2-of (h / have-degree-91
                                    :ARG1 p3
                                    :ARG3 (m2 / most)))))
            :op2 (d / deliver-01
                  :ARG1 p2
                  :location (c / country
                        :name (n3 / name
                              :op1 ""India"")))))"
I thought it happens only in poor countries.,"# ::snt I thought it happens only in poor countries.
(t / think-01
      :ARG0 (ii / i)
      :ARG1 (ii2 / it
            :location (c / country
                  :mod (p / poor)
                  :mod (o / only))))"
because it has transponder which sends unique signal from aircraft with speed height information in realtime,"# ::snt because it has transponder which sends unique signal from aircraft with speed height information in realtime
(c / cause-01
      :ARG0 (h / have-03
            :ARG0 (ii / it)
            :ARG1 (t / transponder
                  :ARG0-of (s / send-01
                        :ARG1 (s2 / signal
                              :ARG1-of (u / unique-01)
                              :source (a / aircraft)
                              :ARG0-of h
                              :ARG1 (ii2 / information
                                    :topic (h2 / high-02
                                          :ARG1 (s3 / speed)))
                              :manner (r / real-04))))))"
"Excuse me, one more question. How can we know this plane is the one that has crashed?","# ::snt Excuse me, one more question. How can we know this plane is the one that has crashed?
(m / multi-sentence
      :snt1 (e / excuse-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (ii / i))
      :snt2 (q / question-01
            :quant 1
            :ARG1 (p / possible-01
                  :ARG1 (k / know-01
                        :ARG0 (w / we)
                        :ARG1 (c / crash-01
                              :ARG1 (p2 / plane
                                    :mod (t / this)))
                        :manner (a / amr-unknown)))
            :mod (m2 / more)))"
"i kniw..not just us, clearly and lets wait to hear clearly why this crashed.","# ::snt i kniw..not just us, clearly and lets wait to hear clearly why this crashed.
(a / and
      :op1 (k / know-01
            :ARG0 (ii / i))
      :op2 (c / clear-06
            :ARG1 (w / we
                  :polarity -
                  :mod (j / just)))
      :op3 (w2 / wait-01
            :mode imperative
            :ARG1 w)
      :ARG2 (h / hear-01
            :ARG0 w
            :ARG1 (t / thing
                  :ARG0-of (c2 / cause-01
                        :ARG1 (c3 / crash-01
                              :ARG1 (t2 / this))))
            :ARG1-of (c4 / clear-06)))"
"BREAKING - Germanwings plane crashes in France, up to believed dead","# ::snt BREAKING - Germanwings plane crashes in France, up to believed dead
(b / break-01
      :ARG1 (c / crash-01
            :ARG1 (p / plane
                  :poss (c2 / company
                        :name (n / name
                              :op1 ""Germanwings"")))
            :location (c3 / country
                  :name (n2 / name
                        :op1 ""France""))
            :ARG0-of (c4 / cause-01
                  :ARG1 (b2 / believe-01
                        :ARG1 (d / die-01
                              :ARG1 (p2 / person
                                    :quant (u / up-to
                                          :op1 1)))))))"
can you tell what it was squawking before it disappeared?,"# ::snt can you tell what it was squawking before it disappeared?
(p / possible-01
      :polarity (a / amr-unknown)
      :ARG1 (t / tell-01
            :ARG0 (y / you)
            :ARG1 (t2 / thing
                  :ARG1-of (s / squawk-01
                        :ARG0 (ii / it)
                        :time (b / before
                              :op1 (d / disappear-01
                                    :ARG1 ii))))))"
The actual plane.,"# ::snt The actual plane.
(p / plane
      :ARG1-of (a / actual-02))"
"We have it in our database, but it's also available from several public databases","# ::snt We have it in our database, but it's also available from several public databases
(c / contrast-01
      :ARG1 (h / have-03
            :ARG0 (w / we)
            :ARG1 (ii / it)
            :location (d / database
                  :poss w))
      :ARG2 (a / available-02
            :ARG2 ii
            :mod (a2 / also)
            :source (d2 / database
                  :ARG1-of (p / public-02)
                  :quant (s / several))))"
,"# ::snt 
(a / amr-empty)"
"ex lufthansa plane called ""mannheim""","# ::snt ex lufthansa plane called ""mannheim""
(p / plane
      :name (n / name
            :op1 ""Lufthansa"")
      :ARG1-of (c / call-01
            :ARG2 (n2 / name
                  :op1 ""mannheim"")))"
Does it look like a decompression? Doesn't look like it was overspeeding at the last point seen on flightradar.,"# ::snt Does it look like a decompression? Doesn't look like it was overspeeding at the last point seen on flightradar.
(m / multi-sentence
      :snt1 (l / look-02
            :polarity (a / amr-unknown)
            :ARG0 (ii / it)
            :ARG1 (d / decompress-01))
      :snt2 (l2 / look-02
            :polarity -
            :ARG0 (ii2 / it)
            :ARG1 (o / overspeede-01
                  :ARG0 ii2
                  :time (p / point
                        :mod (l3 / last)
                        :ARG1-of (s / see-01
                              :location (p2 / publication
                                    :name (n / name
                                          :op1 ""Flightradar"")))))))"
I thought only we use overaged aircrafts.,"# ::snt I thought only we use overaged aircrafts.
(t / think-01
      :ARG0 (ii / i)
      :ARG1 (u / use-01
            :ARG0 (w / we)
            :ARG1 (a / aircraft
                  :mod (o / overage))
            :mod (o2 / only)))"
"MORE: A320 D-AIPX is one of the oldest A320, it was delivered in . via","# ::snt MORE: A320 D-AIPX is one of the oldest A320, it was delivered in . via
(a / and
      :op1 (ii / include-91
            :ARG1 (a2 / aircraft-type
                  :name (n / name
                        :op1 ""A320""
                        :op2 ""D-AIPX""))
            :ARG2 (a3 / aircraft-type
                  :name (n2 / name
                        :op1 ""A320"")
                  :mod (o / old
                        :ARG2-of (h / have-degree-91
                              :ARG1 a3
                              :ARG3 (m / most)))))
      :op2 (d / deliver-01
            :manner (v / via))
      :mod (m2 / more))"
no..,"# ::snt no..
(n / no)"
how was the wx at the time? Any idea?,"# ::snt how was the wx at the time? Any idea?
(m / multi-sentence
      :snt1 (a / amr-unknown
            :domain (p / person
                  :name (n / name
                        :op1 ""WP""))
            :time (t / time))
      :snt2 (ii / idea
            :mod (a2 / any)))"
,"# ::snt 
(a / amr-empty)"
Thank you so much!!,"# ::snt Thank you so much!!
(t / thank-01
      :ARG0 (ii / i)
      :ARG1 (y / you)
      :ARG1-of (h / have-quant-91
            :ARG2 (m / much)
            :ARG3 (s / so)))"
: Germanwings A320 D-AIPX is one of the oldest A320 with serial number and was delivered in Nov,"# ::snt : Germanwings A320 D-AIPX is one of the oldest A320 with serial number and was delivered in Nov
(a / and
      :op1 (ii / include-91
            :ARG1 (a2 / aircraft-type
                  :name (n / name
                        :op1 ""A320""
                        :op2 ""D-AIPX"")
                  :mod (c / company
                        :name (n2 / name
                              :op1 ""Germanywings"")))
            :ARG2 (a3 / aircraft-type
                  :name (n3 / name
                        :op1 ""A320"")
                  :mod (o / old
                        :ARG2-of (h / have-degree-91
                              :ARG1 a3
                              :ARG3 (m / most)))
                  :mod (n4 / number
                        :mod (s / serial))))
      :op2 (d / deliver-01
            :ARG1 a2
            :time (d2 / date-entity
                  :month 11)))"
que horror,"# ::snt que horror
(h / horror
      :mod (q / que))"
,"# ::snt 
(a / amr-empty)"
"Hi, this is Selena. A journalist from Barcelona. Could you explain how do you know the serial number? Thank you!!","# ::snt Hi, this is Selena. A journalist from Barcelona. Could you explain how do you know the serial number? Thank you!!
(m / multi-sentence
      :snt1 m
      :snt2 (j / journalist
            :source (c / city
                  :name (n / name
                        :op1 ""Barcelona""))
            :domain (p / person
                  :name (n2 / name
                        :op1 ""Selena"")))
      :snt3 (p2 / possible-01
            :polarity (a / amr-unknown)
            :ARG1 (e / explain-01
                  :ARG0 (y / you)
                  :ARG1 (t / thing
                        :manner-of (k / know-01
                              :ARG0 (y2 / you)
                              :ARG1 (n3 / number
                                    :mod (s / serial))))))
      :snt4 (t2 / thank-01
            :mode expressive
            :ARG0 (ii / i)
            :ARG1 (y3 / you)))"
