comment,amr
That's pretty awesome!,"# ::snt That's pretty awesome!
(a / awesome-02
      :ARG0 (t / that)
      :degree (p / pretty))"
Word. Time to rise up STL.,"# ::snt Word. Time to rise up STL.
(m / multi-sentence
      :snt1 (w / word)
      :snt2 (b / be-temporally-at-91
            :ARG2 (r / rise-01
                  :ARG1 (s / STL))))"
Thank you!! I can only imagine how much this is being appreciate.,"# ::snt Thank you!! I can only imagine how much this is being appreciate.
(m / multi-sentence
      :snt1 (t / thank-01
            :mode expressive
            :ARG0 (ii / i)
            :ARG1 (y / you))
      :snt2 (p / possible-01
            :ARG1 (ii2 / imagine-01
                  :ARG0 (ii3 / i)
                  :ARG1 (t2 / thing
                        :degree-of (a / appreciate-02
                              :ARG1 (t3 / this)))
                  :mod (o / only))))"
Good to finally see something classy coming out of all this. Even if it's just free coffee.,"# ::snt Good to finally see something classy coming out of all this. Even if it's just free coffee.
(m / multi-sentence
      :snt1 (g / good-02
            :ARG1 (s / see-01
                  :ARG1 (s2 / something
                        :ARG1-of (c / classy-02)
                        :ARG1-of (c2 / come-out-09
                              :ARG2 (t / this
                                    :mod (a / all))))
                  :time (f / final)))
      :snt2 (h / have-concession-91
            :ARG2 (e / even-if
                  :op1 (c3 / coffee
                        :ARG1-of (f2 / free-03)
                        :mod (j / just)))))"
Corner Coffee House in Ferguson has great coffee as well for journos who don't mind paying it fwd,"# ::snt Corner Coffee House in Ferguson has great coffee as well for journos who don't mind paying it fwd
(h / have-03
      :ARG0 (f / facility
            :name (n / name
                  :op1 ""Corner""
                  :op2 ""Coffee""
                  :op3 ""House"")
            :location (c / city
                  :name (n2 / name
                        :op1 ""Ferguson"")))
      :ARG1 (c2 / coffee
            :mod (g / great))
      :beneficiary (j / journalist
            :ARG0-of (m / mind-01
                  :polarity -
                  :ARG1 (p / pay-01
                        :ARG0 j
                        :ARG3 c2)))
      :mod (a / as-well))"
beautiful,"# ::snt beautiful
(b / beautiful-02)"
That just earned y'all a follow. And a customer next time I'm in town.,"# ::snt That just earned y'all a follow. And a customer next time I'm in town.
(m / multi-sentence
      :snt1 (e / earn-01
            :ARG0 (t / that)
            :ARG1 (f / follow-02
                  :ARG0 (y / you
                        :mod (a / all)
                        :ARG2-of e))
            :mod (j / just))
      :snt2 (a2 / and
            :op2 (c / customer
                  :time (b / be-located-at-91
                        :ARG1 (ii / i)
                        :ARG2 (t2 / town))
                  :mod (n / next))))"
Hell Yeah Media is the Fourth Branch of Government time for us to Rise Up like a Phoenix,"# ::snt Hell Yeah Media is the Fourth Branch of Government time for us to Rise Up like a Phoenix
(b / branch
      :ord (o / ordinal-entity
            :value 4)
      :part-of (g / government-organization
            :ARG0-of (g2 / govern-01))
      :domain (m / media)
      :mod (y / yeah
            :mode expressive
            :mod (h / hell))
      :time-of (r / rise-up-03
            :ARG0 (w / we)
            :ARG1-of (r2 / resemble-01
                  :ARG2 (c / city
                        :name (n / name
                              :op1 ""Phoenix"")))))"
Calling all journalists covering FREE coffee/Wifi if you need a place to work!,"# ::snt Calling all journalists covering FREE coffee/Wifi if you need a place to work!
(c / call-02
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (j / journalist
            :mod (a / all)
            :ARG0-of (c2 / cover-03
                  :ARG1 (s / slash
                        :op1 (c3 / coffee
                              :ARG1-of (f / free-03))
                        :op2 (ii / ifi
                              :ARG1-of (f2 / free-03)))))
      :condition (n / need-01
            :ARG0 y
            :ARG1 (p / place
                  :location-of (w / work-01
                        :ARG0 y))))"
