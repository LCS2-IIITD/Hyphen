comment,amr
What is racist about the empty box?,"# ::snt What is racist about the empty box?
(r / racist
      :domain (a / amr-unknown)
      :topic (b / box
            :ARG1-of (e / empty-02)))"
Its racist against all not-so-perfect empty boxes.,"# ::snt Its racist against all not-so-perfect empty boxes.
(r / racism
      :domain (ii / it)
      :prep-against (b / box
            :ARG1-of (e / empty-02)
            :ARG1-of (p / perfect-02
                  :polarity -
                  :degree (s / so))
            :mod (a / all)))"
"I was trying to make a joke, Daniel","# ::snt I was trying to make a joke, Daniel
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (t / try-01
            :ARG0 ii
            :ARG1 (j / joke-01
                  :ARG0 ii))
      :ARG2 (p / person
            :name (n / name
                  :op1 ""Daniel"")))"
"If box races existed (and they were human of course), this would relate to xenophobia. Otherwise not.","# ::snt If box races existed (and they were human of course), this would relate to xenophobia. Otherwise not.
(m / multi-sentence
      :snt1 (r / relate-01
            :ARG1 (t / this)
            :ARG2 (x / xenophobia)
            :condition (a / and
                  :op1 (e / exist-01
                        :ARG1 (r2 / race
                              :mod (b / box)))
                  :op2 (h / human
                        :domain r2
                        :mod (o / of-course))))
      :snt2 (r3 / relate-01
            :polarity -
            :ARG1 t
            :ARG2 x
            :condition (h2 / have-polarity-91
                  :ARG2 -)))"
it's our fault we let religion free.we must cure it.inject it with logic,"# ::snt it's our fault we let religion free.we must cure it.inject it with logic
(m / multi-sentence
      :snt1 (f / fault-01
            :ARG1 (w / we)
            :ARG2 (l / let-01
                  :ARG0 w
                  :ARG1 (f2 / free-04
                        :ARG1 (r / religion))))
      :snt2 (o / obligate-01
            :ARG1 (w2 / we)
            :ARG2 (c / cure-01
                  :ARG0 w2
                  :ARG2 r))
      :snt3 (ii / inject-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 r
            :instrument (l2 / logic)))"
Apologies to any nihilists: New Yorker cartoon. Seems particularly relevant after attack.,"# ::snt Apologies to any nihilists: New Yorker cartoon. Seems particularly relevant after attack.
(m / multi-sentence
      :snt1 (a / apologize-01
            :ARG1 (p / person
                  :mod (a2 / any)
                  :ARG0-of (n / nihilize-01))
            :ARG2 (c / cartoon
                  :mod (m2 / magazine
                        :name (n2 / name
                              :op1 ""New""
                              :op2 ""Yorker""))))
      :snt2 (s / seem-01
            :ARG1 (r / relevant-01
                  :time (a3 / after
                        :op1 (a4 / attack-01))
                  :degree (p2 / particular))))"
That's a politically acceptable way to attack the concept of political correctness. It's all politics.,"# ::snt That's a politically acceptable way to attack the concept of political correctness. It's all politics.
(m / multi-sentence
      :snt1 (w / way
            :manner-of (a / attack-01
                  :ARG1 (c / concept
                        :topic (c2 / correct-02
                              :mod (p / politics))))
            :ARG1-of (a2 / accept-01
                  :ARG1-of (p2 / possible-01)
                  :mod (p3 / politics))
            :domain (t / that))
      :snt2 (p4 / politics
            :mod (a3 / all)))"
"Actually, I feel that it's a bit racist. Where's the black in that panel?","# ::snt Actually, I feel that it's a bit racist. Where's the black in that panel?
(m / multi-sentence
      :snt1 (f / feel-02
            :ARG0 (ii / i)
            :ARG1 (r / racist
                  :domain (ii2 / it)
                  :degree (b / bit))
            :ARG1-of (a / actual-02))
      :snt2 (b2 / be-located-at-91
            :ARG1 (p / person
                  :ARG1-of (b3 / black-05))
            :ARG2 (p2 / panel
                  :mod (t / that))
            :location (a2 / amr-unknown)))"
Discriminates against non-rectangles,"# ::snt Discriminates against non-rectangles
(d / discriminate-02
      :ARG1 (r / rectangle
            :polarity -))"
"""I'm a nihilist and I'm offended..."" Ha!!","# ::snt ""I'm a nihilist and I'm offended..."" Ha!!
(a / and
      :op1 (n / nihilist
            :domain (ii / i))
      :op2 (o / offend-01
            :ARG1 ii)
      :mod (h / ha
            :mode expressive))"
"Kinda racist, dont you think?","# ::snt Kinda racist, dont you think?
(t / think-01
      :polarity -
      :ARG0 (y / you)
      :ARG1 (r / racist
            :degree (k / kind-of))
      :ARG1-of (r2 / request-confirmation-91))"
well said!!!!,"# ::snt well said!!!!
(s / say-01
      :mode expressive
      :ARG1-of (w / well-09))"
"bloody typical, had to be white, what no black boxes?? I'm totally offended.. Or am I??","# ::snt bloody typical, had to be white, what no black boxes?? I'm totally offended.. Or am I??
(m / multi-sentence
      :snt1 (t / typical-02
            :ARG2 (a / and
                  :op1 (b / bloody)
                  :op2 (o / obligate-01
                        :ARG2 (w / white-02))
                  :op3 (b2 / box
                        :polarity -
                        :ARG1-of (b3 / black-04)
                        :mod (a2 / amr-unknown))))
      :snt2 (o2 / offend-01
            :ARG1 (ii / i)
            :degree (t2 / total))
      :snt3 (o3 / offend-01
            :ARG1 (ii2 / i)
            :polarity a2))"
TY,"# ::snt TY
(p / person
      :name (n / name
            :op1 ""TY""))"
that's white so it's racist. Jk (just in case someone thought i'm crazy),"# ::snt that's white so it's racist. Jk (just in case someone thought i'm crazy)
(m / multi-sentence
      :snt1 (w / white-02
            :ARG1 (t / that)
            :ARG0-of (c / cause-01
                  :ARG1 (r / racist
                        :domain (ii / it))))
      :snt2 (s / say-01
            :ARG0 (ii2 / i)
            :ARG2 (p / person
                  :name (n / name
                        :op1 ""Jk""))
            :condition (t2 / think-01
                  :ARG0 (s2 / someone)
                  :ARG1 (c2 / crazy-03
                        :ARG1 ii2))
            :mod (j / just)))"
