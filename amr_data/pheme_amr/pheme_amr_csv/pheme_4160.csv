comment,amr
ia that's them. And I've seen enough of it to have an opinion,"# ::snt ia that's them. And I've seen enough of it to have an opinion
(m / multi-sentence
      :snt1 (t / they
            :domain (t2 / that))
      :snt2 (a / and
            :op2 (h / have-quant-91
                  :ARG1 (ii / it)
                  :ARG3 (e / enough)
                  :ARG6 (o / opine-01
                        :ARG0 (ii2 / i)))))"
Info penting!! RT Important things to remember during - thanks to,"# ::snt Info penting!! RT Important things to remember during - thanks to
(m / multi-sentence
      :snt1 (p / pent-up-02
            :ARG1 (ii / information))
      :snt2 (t / thank-01
            :ARG1 (y / you)
            :ARG2 (t2 / thing
                  :ARG1-of (ii2 / important-01)
                  :ARG1-of (r / remember-01
                        :time (e / event)))))"
: Important things to remember during - thanks to,"# ::snt : Important things to remember during - thanks to
(t / thing
      :ARG1-of (ii / important-01)
      :ARG1-of (r / remember-01
            :time (e / event))
      :ARG2-of (t2 / thank-01
            :ARG1 (y / you)))"
the purpose of the self-censoring meme is to disbelieve your own eyes and groupthink,"# ::snt the purpose of the self-censoring meme is to disbelieve your own eyes and groupthink
(h / have-purpose-91
      :ARG1 (m / meme
            :ARG0-of (c / censor-01
                  :ARG1 (s / self)))
      :ARG2 (d / disbelieve-01
            :ARG0 (y / you
                  :part (e / eye))
            :ARG1 (a / and
                  :op1 e
                  :op2 (g / groupthink))))"
"Thanks, Connor!","# ::snt Thanks, Connor!
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (t / thank-01
            :ARG0 ii
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""Connor"")))
      :ARG2 p)"
Cheat sheet for self-censoring is big with equalists who need all the help to deny human differences,"# ::snt Cheat sheet for self-censoring is big with equalists who need all the help to deny human differences
(b / big
      :domain (s / sheet
            :mod (c / cheese)
            :purpose (c2 / censor-01
                  :ARG1 (s2 / self)))
      :prep-with (e / equalist
            :ARG0-of (n / need-01
                  :ARG1 (h / help-01
                        :ARG1 (d / deny-01
                              :ARG1 (d2 / differ-02
                                    :ARG1 (h2 / human)))
                        :ARG2 e
                        :mod (a / all)))))"
font is almost unreadable.,"# ::snt font is almost unreadable.
(p / possible-01
      :polarity -
      :ARG1 (d / decipher-01
            :ARG1 (f / font))
      :mod (a / almost))"
yes....but how else will you get this information?,"# ::snt yes....but how else will you get this information?
(c / contrast-01
      :ARG1 (y / yes)
      :ARG2 (g / get-01
            :ARG0 (y2 / you)
            :ARG1 (ii / information
                  :mod (t / this))
            :ARG3 (a / amr-unknown
                  :mod (e / else))))"
I guess just take special interest/notes of the official police or govt statements?,"# ::snt I guess just take special interest/notes of the official police or govt statements?
(g / guess-01
      :ARG0 (ii / i)
      :ARG1 (t / take-01
            :ARG1 (o / or
                  :op1 (ii2 / interest-01
                        :ARG1-of (s / special-02))
                  :op2 (n / note)
                  :topic (o2 / or
                        :op1 (s2 / state-01
                              :ARG0 (p / police
                                    :mod (o3 / official)))
                        :op2 (s3 / state-01
                              :ARG0 (g2 / government-organization
                                    :ARG0-of (g3 / govern-01)))))
            :mod (j / just)
            :polarity (a / amr-unknown)))"
: Important things to remember during - thanks to food for thought!,"# ::snt : Important things to remember during - thanks to food for thought!
(t / thing
      :ARG1-of (ii / important-01)
      :ARG1-of (r / remember-01
            :time (e / event))
      :ARG2-of (t2 / thank-01
            :ARG1 (f / food
                  :purpose (t3 / think-01))))"
I've been lucky to spend a bit of time in Australia &amp; always find Aussies to be good buggers proves it again!,"# ::snt I've been lucky to spend a bit of time in Australia &amp; always find Aussies to be good buggers proves it again!
(m / multi-sentence
      :snt1 (l / lucky
            :domain (s / spend-02
                  :ARG0 (ii / i)
                  :ARG1 (t / time
                        :quant (b / bit))
                  :ARG2 (b2 / be-located-at-91
                        :ARG1 ii
                        :ARG2 (a / and
                              :op1 (c / country
                                    :name (n / name
                                          :op1 ""Australia""))
                              :op2 (c2 / country
                                    :name (n2 / name
                                          :op1 ""Australia""))))))
      :snt2 (p / prove-01
            :ARG0 (f / find-01
                  :ARG0 ii
                  :ARG1 (p2 / person
                        :mod c
                        :ARG1-of (g / good-03
                              :ARG2 (b3 / bugger)))
                  :time (a2 / always))
            :ARG1 (ii2 / it)
            :mod (a3 / again)))"
here's the web version,"# ::snt here's the web version
(v / version
      :mod (w / web)
      :location (h / here))"
:full write-up of it here,"# ::snt :full write-up of it here
(b / be-located-at-91
      :ARG1 (w / write-up-07
            :ARG1 (ii / it)
            :mod (f / full))
      :ARG2 (h / here))"
:Can you expand/zoom in? Try saving the pic and expanding it?,"# ::snt :Can you expand/zoom in? Try saving the pic and expanding it?
(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (s / slash
                  :op1 (e / expand-01
                        :ARG0 (y / you))
                  :op2 (z / zoom-01
                        :ARG0 y))
            :polarity (a / amr-unknown))
      :snt2 (t / try-01
            :mode imperative
            :ARG0 (y2 / you)
            :ARG1 (a2 / and
                  :op1 (s2 / save-02
                        :ARG0 y2
                        :ARG1 (p2 / picture))
                  :op2 (e2 / expand-01
                        :ARG0 y2
                        :ARG1 p2))
            :polarity (a3 / amr-unknown)))"
that is marvellous,"# ::snt that is marvellous
(m / marvellous
      :domain (t / that))"
Via RT : Important things to remember during - thanks to,"# ::snt Via RT : Important things to remember during - thanks to
(m / multi-sentence
      :snt1 (b / byline-91
            :ARG0 (p / publication
                  :name (n / name
                        :op1 ""RT"")))
      :snt2 (t / thing
            :ARG1-of (ii / important-01)
            :ARG1-of (r / remember-01
                  :time (e / event)
                  :ARG2-of (t2 / thank-01
                        :ARG1 (y / you)))))"
dead on!,"# ::snt dead on!
(o / on-01
      :mode expressive
      :degree (d / die-01))"
yea I was able to make it work. Just thought it'd be helpful to point it out.,"# ::snt yea I was able to make it work. Just thought it'd be helpful to point it out.
(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (m2 / make-02
                  :ARG0 (ii / i)
                  :ARG1 (w / work-09
                        :ARG1 (ii2 / it)))
            :mod (y / yea
                  :mode expressive))
      :snt2 (t / think-01
            :ARG0 (ii3 / i)
            :ARG1 (h / helpful-04
                  :ARG0 (p2 / point-out-02
                        :ARG0 ii3
                        :ARG1 (ii4 / it)))
            :mod (j / just)))"
