comment,amr
"He's a bit incoherent, but more data points is fine with me. The sure as hell ain't rushing to explain anything","# ::snt He's a bit incoherent, but more data points is fine with me. The sure as hell ain't rushing to explain anything
(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (c2 / cohere-01
                  :polarity -
                  :ARG1 (h / he)
                  :degree (b / bit))
            :ARG2 (f / fine-04
                  :ARG1 (p / point
                        :mod (d / data)
                        :quant (m2 / more))
                  :ARG2 (ii / i)))
      :snt2 (r / rush-01
            :polarity -
            :ARG1 (e / explain-01
                  :ARG1 (a / anything))
            :ARG1-of (s / sure-02
                  :degree (a2 / as-hell))))"
none the less he is! good day.,"# ::snt none the less he is! good day.
(m / multi-sentence
      :snt1 (l / less
            :polarity -
            :domain (h / he))
      :snt2 (d / day
            :ARG1-of (g / good-02)))"
it doesn't matter the dead. The end,"# ::snt it doesn't matter the dead. The end
(m / multi-sentence
      :snt1 (m2 / matter-01
            :polarity -
            :ARG1 (p / person
                  :ARG1-of (d / die-01)))
      :snt2 (e / end-01))"
"ICYMI: The info given today seems to line up with this witness account, even the alleged theft","# ::snt ICYMI: The info given today seems to line up with this witness account, even the alleged theft
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (s2 / seem-01
            :ARG1 (l / line-up-02
                  :ARG1 (ii2 / information
                        :ARG1-of (g / give-01
                              :time (t / today)))
                  :ARG2 (a / and
                        :op1 (a2 / account-01
                              :ARG0 (p / person
                                    :ARG0-of (w / witness-01))
                              :mod (t2 / this))
                        :op2 (t3 / thieve-01
                              :ARG1-of (a3 / allege-01)
                              :mod (e / even)))))
      :ARG2 p
      :name (n / name
            :op1 ""ICYMI""))"
":he could of robbed stores, can't shoot him if he's unarmed. I was a cop, I know","# ::snt :he could of robbed stores, can't shoot him if he's unarmed. I was a cop, I know
(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (a / and
                  :op1 (r / rob-01
                        :ARG0 (h / he)
                        :ARG1 (s / store))
                  :op2 (s2 / shoot-02
                        :ARG0 h
                        :ARG1 (h2 / he)
                        :condition (a2 / arm-01
                              :polarity -
                              :ARG1 h2))))
      :snt2 (k / know-01
            :ARG0 (ii / i)
            :ARG1 (c / cop
                  :domain ii)))"
"if you leave our side, we'll be alone. knowwhatiwannasaynext","# ::snt if you leave our side, we'll be alone. knowwhatiwannasaynext
(m / multi-sentence
      :snt1 (a / alone
            :domain (w / we)
            :condition (l / leave-11
                  :ARG0 (y / you)
                  :ARG1 (s / side
                        :poss w))))"
doesn't matter can't shoot him. You have to follow the use of force continuum,"# ::snt doesn't matter can't shoot him. You have to follow the use of force continuum
(m / multi-sentence
      :snt1 (m2 / matter-01
            :polarity -
            :ARG1 (p / possible-01
                  :polarity -
                  :ARG1 (s / shoot-02
                        :ARG1 (h / he))))
      :snt2 (o / obligate-01
            :ARG1 (y / you)
            :ARG2 (f / follow-02
                  :ARG0 y
                  :ARG1 (c / continuum
                        :mod (u / use-01
                              :ARG1 (f2 / force))))))"
you miss my point entirely. He's dead.,"# ::snt you miss my point entirely. He's dead.
(m / multi-sentence
      :snt1 (m2 / miss-02
            :ARG0 (y / you)
            :ARG1 (p / point-04
                  :ARG0 (ii / i))
            :degree (e / entire))
      :snt2 (d / die-01
            :ARG1 (h / he)))"
Bruh could he be any more incoherent?,"# ::snt Bruh could he be any more incoherent?
(p / possible-01
      :ARG1 (c / cohere-01
            :polarity -
            :ARG1 (h / he)
            :mod (m / more
                  :mod (a / any)))
      :polarity (a2 / amr-unknown)
      :mod (b / buh
            :mode expressive))"
he should have never have attempted to grab officers gun thru the car window after assaulting a store owner committing theft,"# ::snt he should have never have attempted to grab officers gun thru the car window after assaulting a store owner committing theft
(r / recommend-01
      :ARG1 (a / attempt-01
            :polarity -
            :ARG0 (h / he)
            :ARG1 (g / grab-01
                  :ARG0 h
                  :ARG1 (g2 / gun
                        :poss (o / officer))
                  :path (w / window
                        :part-of (c / car)))
            :time (e / ever)
            :time (a2 / after
                  :op1 (a3 / assault-01
                        :ARG0 h
                        :ARG1 (p / person
                              :ARG0-of (o2 / own-01
                                    :ARG1 (s / store)))
                        :ARG0-of (c2 / commit-02
                              :ARG1 (t / thieve-01
                                    :ARG0 p))))))"
I still don't see the admission of theft here.,"# ::snt I still don't see the admission of theft here.
(s / see-01
      :polarity -
      :ARG0 (ii / i)
      :ARG1 (a / admit-01
            :ARG1 (s2 / steal-01)
            :location (h / here))
      :mod (s3 / still))"
he's dead and damn sure won't be robbing anyone else.,"# ::snt he's dead and damn sure won't be robbing anyone else.
(a / and
      :op1 (d / die-01
            :ARG1 (h / he))
      :op2 (r / rob-01
            :polarity -
            :ARG0 h
            :ARG1 (a2 / anyone
                  :mod (e / else))
            :ARG1-of (s / sure-02
                  :degree (d2 / damn))))"
he never lied about the theft Clear reason this case shouldn't have no problems in court. Seems He told the truth on his part,"# ::snt he never lied about the theft Clear reason this case shouldn't have no problems in court. Seems He told the truth on his part
(m / multi-sentence
      :snt1 (l / lie-08
            :polarity -
            :ARG0 (h / he)
            :ARG3 (s / steal-01)
            :time (e / ever)
            :ARG1-of (c / clear-06)
            :ARG0-of (c2 / cause-01
                  :ARG1 (r / recommend-01
                        :ARG1 (h2 / have-03
                              :polarity -
                              :ARG0 (c3 / case-03
                                    :mod (t / this))
                              :ARG1 (p / problem)
                              :location (c4 / court))
                        :ARG1-of (c5 / cause-01
                              :ARG0 (r2 / reason
                                    :ARG1-of c)))))
      :snt2 (s2 / seem-01
            :ARG1 (t2 / tell-01
                  :ARG0 (h3 / he)
                  :ARG1 (t3 / truth)
                  :ARG2 h3)))"
Too right. No trial. No estab guilt. Officer was unaware of alleged theft. Can't execute.,"# ::snt Too right. No trial. No estab guilt. Officer was unaware of alleged theft. Can't execute.
(m / multi-sentence
      :snt1 (h / have-degree-91
            :ARG2 (r / right-06)
            :ARG3 (t / too))
      :snt2 (t2 / try-02
            :polarity -)
      :snt3 (g / guilty-01
            :polarity -
            :ARG1 (o / officer))
      :snt4 (r2 / realize-01
            :polarity -
            :ARG0 o
            :ARG1 (s / steal-01
                  :ARG1-of (a / allege-01)))
      :snt5 (p / possible-01
            :polarity -
            :ARG1 (e / execute-02
                  :ARG1 o)))"
you miss my point ; he shouldn't be dead,"# ::snt you miss my point ; he shouldn't be dead
(m / miss-02
      :ARG0 (y / you)
      :ARG1 (p / point-04
            :ARG0 (ii / i)
            :ARG1 (r / recommend-01
                  :ARG1 (d / die-01
                        :polarity -
                        :ARG1 (h / he)))))"
"A bit unclear. Is he admitting to the theft? Also, he says store clerk didn't call police but how could he know that?","# ::snt A bit unclear. Is he admitting to the theft? Also, he says store clerk didn't call police but how could he know that?
(m / multi-sentence
      :snt1 (c / clear-06
            :polarity -
            :degree (b / bit))
      :snt2 (a / admit-01
            :ARG0 (h / he)
            :ARG1 (t / thieve-01
                  :ARG0 h)
            :polarity (a2 / amr-unknown))
      :snt3 (c2 / contrast-01
            :ARG1 (s / say-01
                  :ARG0 (h2 / he)
                  :ARG1 (c3 / call-02
                        :polarity -
                        :ARG0 (c4 / clerk
                              :mod (s2 / store))
                        :ARG1 (p / police))
                  :mod (a3 / also))
            :ARG2 (p2 / possible-01
                  :ARG1 (k / know-01
                        :ARG0 h2
                        :ARG1 c3
                        :manner (a4 / amr-unknown)))))"
"if he feels his life is in danger, he has right as a citizen to shoot, no?","# ::snt if he feels his life is in danger, he has right as a citizen to shoot, no?
(r / right-05
      :ARG1 (h / he)
      :ARG2 (s / shoot-01
            :ARG0 h)
      :condition (f / feel-02
            :ARG0 h
            :ARG1 (e / endanger-01
                  :ARG0 (l / life
                        :poss h)))
      :ARG1-of (r2 / request-confirmation-91))"
"shouldn't have assaulted the cop, leaving him injured.","# ::snt shouldn't have assaulted the cop, leaving him injured.
(r / recommend-01
      :polarity -
      :ARG1 (a / assault-01
            :ARG1 (c / cop)
            :ARG0-of (l / leave-13
                  :ARG1 (ii / injure-01
                        :ARG1 c))))"
