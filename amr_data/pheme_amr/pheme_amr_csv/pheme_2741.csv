comment,amr
when you light shit on fire and threaten to kill police... You are part of a mob.,"# ::snt when you light shit on fire and threaten to kill police... You are part of a mob.
(h / have-part-91
      :ARG1 (m / mob)
      :ARG2 (y / you)
      :time (a / and
            :op1 (l / light-on-fire-09
                  :ARG0 y
                  :ARG1 (s / shit))
            :op2 (t / threaten-01
                  :ARG0 y
                  :ARG1 (k / kill-01
                        :ARG0 y
                        :ARG1 (p / police)))))"
: calling the neighbors a mob = dehumanizing a community to justify all future wrongdoing.,"# ::snt : calling the neighbors a mob = dehumanizing a community to justify all future wrongdoing.
(e / equal-01
      :ARG1 (c / call-01
            :ARG1 (n / neighbor)
            :ARG2 (m / mob))
      :ARG2 (d / dehumanize-01
            :ARG1 (c2 / community)
            :purpose (j / justify-01
                  :ARG1 (t / thing
                        :ARG1-of (d2 / do-02
                              :ARG0 c2
                              :time (f / future)
                              :ARG1 t)
                        :ARG0 c2)
                  :mod (a / all))))"
That is the narrative to keep Blacks as either inhuman or lower form of humanity.,"# ::snt That is the narrative to keep Blacks as either inhuman or lower form of humanity.
(n / narrate-01
      :ARG1 (k / keep-02
            :ARG1 (p / person
                  :ARG1-of (b / black-05))
            :ARG2 (o / or
                  :op1 (h / human
                        :mod (ii / inhuman))
                  :op2 (h2 / human
                        :mod (f / form
                              :ARG1-of (h3 / have-degree-91
                                    :ARG2 (l / low-04
                                          :ARG1 f)
                                    :ARG3 (m / more))))))
      :domain (t / that))"
no. Calling the neighbors a mob because they're a mob. The response will be predictable because it's how you deal with mobs.,"# ::snt no. Calling the neighbors a mob because they're a mob. The response will be predictable because it's how you deal with mobs.
(m / multi-sentence
      :snt1 (n / no)
      :snt2 (c / call-01
            :ARG1 (n2 / neighbor)
            :ARG2 (m2 / mob)
            :ARG1-of (c2 / cause-01
                  :ARG0 (m3 / mob
                        :domain n2)))
      :snt3 (p / possible-01
            :ARG1 (p2 / predict-01
                  :ARG1 (t / thing
                        :ARG2-of (r / respond-01)))
            :ARG1-of (c3 / cause-01
                  :ARG0 (d / deal-01
                        :ARG0 (y / you)
                        :ARG2 (m4 / mob)
                        :manner (ii / it)))))"
Children of color lives have no worth in the eyes of those called to serve and protect them.,"# ::snt Children of color lives have no worth in the eyes of those called to serve and protect them.
(w / worth-01
      :polarity -
      :ARG1 (l / life
            :mod (c / color))
      :ARG2 (p / person
            :mod (t / that)
            :ARG1-of (c2 / call-02
                  :ARG2 (a / and
                        :op1 (s / serve-01
                              :ARG0 p
                              :ARG2 (c3 / child))
                        :op2 (p2 / protect-01
                              :ARG0 p
                              :ARG1 c3))))
      :ARG1-of (s2 / see-01
            :ARG0 c3))"
: calling the neighbors a mob = dehumanizing a community to justify all future wrongdoing.,"# ::snt : calling the neighbors a mob = dehumanizing a community to justify all future wrongdoing.
(e / equal-01
      :ARG1 (c / call-01
            :ARG1 (n / neighbor)
            :ARG2 (m / mob))
      :ARG2 (d / dehumanize-01
            :ARG1 (c2 / community)
            :purpose (j / justify-01
                  :ARG1 (t / thing
                        :ARG1-of (d2 / do-02
                              :ARG0 c2
                              :time (f / future)
                              :ARG1 t)
                        :ARG0 c2)
                  :mod (a / all))))"
