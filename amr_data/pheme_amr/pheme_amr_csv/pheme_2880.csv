comment,amr
looks like a nice guy..,"# ::snt looks like a nice guy..
(l / look-02
      :ARG1 (g / guy
            :ARG1-of (n / nice-01)))"
please Anyone who knows how to pray say a prayer for the poor hostages in that cafe in Sydney What evil this is,"# ::snt please Anyone who knows how to pray say a prayer for the poor hostages in that cafe in Sydney What evil this is
(s / say-01
      :polite +
      :ARG0 (a / anyone
            :ARG0-of (k / know-03
                  :ARG1 (p / pray-01)))
      :ARG1 (p2 / pray-01
            :ARG0 a
            :beneficiary (h / hostage
                  :mod (p3 / poor)
                  :location (c / cafe
                        :mod (t / that)
                        :location (c2 / city
                              :name (n / name
                                    :op1 ""Sydney"")))))
      :ARG2-of (p4 / please-01))"
where are your snipers? take the muslim out ASAP!,"# ::snt where are your snipers? take the muslim out ASAP!
(m / multi-sentence
      :snt1 (b / be-located-at-91
            :ARG1 (s / sniper
                  :poss (y / you))
            :ARG2 (a / amr-unknown))
      :snt2 (t / take-out-11
            :mode imperative
            :ARG0 y
            :ARG1 (p / person
                  :mod (r / religious-group
                        :name (n / name
                              :op1 ""Muslim"")))
            :time (a2 / ASAP)))"
":Gunman Haron Monis,on bail over murder of ex-wife","# ::snt :Gunman Haron Monis,on bail over murder of ex-wife
(b / bail-out-02
      :ARG1 (p / person
            :name (n / name
                  :op1 ""Haron""
                  :op2 ""Monis"")
            :ARG0-of (h / have-org-role-91
                  :ARG2 (g / gunman)))
      :ARG2 (m / murder-01
            :ARG0 p
            :ARG1 (p2 / person
                  :ARG0-of (h2 / have-rel-role-91
                        :ARG2 (w / wife)
                        :time (e / ex)))))"
and more at,"# ::snt and more at
(a / and
      :op2 (m / more))"
so true.,"# ::snt so true.
(t / true-01
      :degree (s / so))"
mentally sick person,"# ::snt mentally sick person
(p / person
      :ARG1-of (s / sick-05
            :mod (m / mental)))"
God help us all,"# ::snt God help us all
(h / help-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""God""))
      :ARG2 (w / we
            :mod (a / all)))"
Hope he's dead the mug,"# ::snt Hope he's dead the mug
(h / hope-01
      :ARG0 (ii / i)
      :ARG1 (d / die-01
            :ARG1 (h2 / he))
      :ARG1-of (c / cause-01
            :ARG0 (m / mug)))"
For legal reasons.,"# ::snt For legal reasons.
(c / cause-01
      :ARG0 (r / reason
            :ARG1-of (l / legal-02)))"
UGLY FUCKER like all his race and creed.,"# ::snt UGLY FUCKER like all his race and creed.
(r / resemble-01
      :ARG1 (h / he)
      :ARG2 (a / and
            :op1 (r2 / race)
            :op2 (c / creed)
            :mod (a2 / all)
            :poss h)
      :mod (f / fucking
            :mode expressive
            :degree (b / big)))"
How can you be on bail for Murder....words fail me.,"# ::snt How can you be on bail for Murder....words fail me.
(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (b / bail-out-02
                  :ARG1 (y / you)
                  :ARG1-of (c / cause-01
                        :ARG0 (m2 / murder-01
                              :ARG0 y))
                  :manner (a / amr-unknown)))
      :snt2 (f / fail-01
            :ARG1 (w / word)
            :ARG2 (ii / i)))"
Isnt it strange how one cant retweet some things,"# ::snt Isnt it strange how one cant retweet some things
(s / strange
      :polarity (a / amr-unknown)
      :domain (p / possible-01
            :polarity -
            :ARG1 (r / retweet-01
                  :ARG0 (o / one)
                  :ARG1 (t / thing
                        :quant (s2 / some)))))"
Why not?,"# ::snt Why not?
(c / cause-01
      :polarity -
      :ARG0 (a / amr-unknown))"
Charged for murder and out on bail?????,"# ::snt Charged for murder and out on bail?????
(a / and
      :polarity (a2 / amr-unknown)
      :op1 (c / charge-05
            :ARG2 (m / murder-01))
      :op2 (b / bail-out-02
            :ARG1 c))"
Why wasn't he deported after initial criminal offenses. Leniency does not pay!,"# ::snt Why wasn't he deported after initial criminal offenses. Leniency does not pay!
(m / multi-sentence
      :snt1 (d / deport-01
            :polarity -
            :ARG1 (h / he)
            :time (a / after
                  :op1 (o / offend-03
                        :ARG1-of (c / criminal-03)
                        :mod (ii / initial)))
            :ARG1-of (c2 / cause-01
                  :ARG0 (a2 / amr-unknown)))
      :snt2 (p / pay-01
            :polarity -
            :ARG0 (l / leniency)))"
": Gunman Haron Monis, on bail over murder of ex-wife","# ::snt : Gunman Haron Monis, on bail over murder of ex-wife
(b / bail-out-02
      :ARG1 (p / person
            :name (n / name
                  :op1 ""Haron""
                  :op2 ""Monis"")
            :mod (m / man))
      :ARG2 (m2 / murder-01
            :ARG0 p
            :ARG1 (p2 / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 p
                        :ARG2 (w / wife)
                        :time (e / ex)))))"
,"# ::snt 
(a / amr-empty)"
Why post this?,"# ::snt Why post this?
(p / post-01
      :ARG0 (y / you)
      :ARG1 (t / this)
      :purpose (a / amr-unknown))"
"why he is on bail after murdering someone is beyond me, this is a failure of so many systems in australia","# ::snt why he is on bail after murdering someone is beyond me, this is a failure of so many systems in australia
(a / and
      :op1 (b / beyond
            :op1 (ii / i)
            :domain (t / thing
                  :ARG0-of (c / cause-01
                        :ARG1 (b2 / bail-out-02
                              :ARG1 (h / he)
                              :time (a2 / after
                                    :op1 (m / murder-01
                                          :ARG0 h
                                          :ARG1 (s / someone)))))))
      :op2 (f / fail-01
            :ARG1 (s2 / system
                  :location (c2 / country
                        :name (n / name
                              :op1 ""Australia""))
                  :ARG1-of (h2 / have-quant-91
                        :ARG2 (m2 / many)
                        :ARG3 (s3 / so)))
            :ARG2 (t2 / this)))"
Got it in one.,"# ::snt Got it in one.
(g / get-01
      :ARG1 (ii / it)
      :location (o / one))"
