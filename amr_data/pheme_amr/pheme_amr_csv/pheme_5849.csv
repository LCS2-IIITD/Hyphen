comment,amr
Do you actually report anything accuratly Jaywalking? He was a suspect in a strong arm robbery,"# ::snt Do you actually report anything accuratly Jaywalking? He was a suspect in a strong arm robbery
(m / multi-sentence
      :snt1 (r / report-01
            :polarity (a / amr-unknown)
            :ARG0 (y / you)
            :ARG1 (a2 / anything)
            :manner (a3 / accurate)
            :ARG1-of (a4 / actual-02)
            :topic (p / person
                  :name (n / name
                        :op1 ""Jaywalking"")))
      :snt2 (s / suspect-01
            :ARG1 (h / he)
            :ARG2 (r2 / rob-01
                  :ARG0 h
                  :instrument (a5 / arm
                        :ARG1-of (s2 / strong-02)))))"
&amp; too busy attacking &amp; besieging an American community to do any sort of investigating.,"# ::snt &amp; too busy attacking &amp; besieging an American community to do any sort of investigating.
(a / and
      :op2 (h / have-degree-91
            :ARG2 (b / busy-01
                  :ARG2 a
                  :op1 (a2 / attack-01
                        :ARG1 (c / community
                              :mod (c2 / country
                                    :name (n / name
                                          :op1 ""America""))))
                  :op2 (b2 / besiege-01
                        :ARG1 c)))
      :ARG3 (t / too)
      :ARG6 (ii / investigate-01
            :mod (s / sort
                  :mod (a3 / any)))
      :ARG1-of ii)"
Just like a guilty criminal.,"# ::snt Just like a guilty criminal.
(r / resemble-01
      :ARG2 (p / person
            :ARG2-of (c / criminal-03)
            :ARG1-of (g / guilty-01))
      :mod (j / just))"
"Ur name shld be ""Skippy the fucking bigoted dumbass""! Or ""Skippy the idiot""! Who goes by Skippy anyway?","# ::snt Ur name shld be ""Skippy the fucking bigoted dumbass""! Or ""Skippy the idiot""! Who goes by Skippy anyway?
(m / multi-sentence
      :snt1 (n / name-01
            :ARG1 (y / you)
            :ARG2 (p / person
                  :name (n2 / name
                        :op1 ""Skippy"")
                  :mod (d / dumbass
                        :mod (f / fucking
                              :mode expressive))))
      :snt2 (o / or
            :op2 (p2 / person
                  :name (n3 / name
                        :op1 ""Skippy""
                        :op2 ""the""
                        :op3 "" idiot"")))
      :snt3 (g / go-08
            :ARG1 (a / amr-unknown)
            :ARG2 p
            :mod (a2 / anyway)))"
"They still haven't said how many shots were fired, how many hit Michael Brown and the location of the entry wounds.","# ::snt They still haven't said how many shots were fired, how many hit Michael Brown and the location of the entry wounds.
(s / say-01
      :polarity -
      :ARG0 (t / they)
      :ARG1 (a / and
            :op1 (n / number
                  :quant-of (s2 / shoot-02
                        :ARG1-of (f / fire-01)))
            :op2 (n2 / number
                  :quant-of (s3 / shoot-02
                        :ARG1-of (h / hit-01
                              :ARG2 (p / person
                                    :name (n3 / name
                                          :op1 ""Michael""
                                          :op2 ""Brown"")))))
            :op3 (l / location
                  :location-of (w / wound-01
                        :ARG2 (e / enter-01))))
      :mod (s4 / still))"
that's because there was no feasible reason for dude to kill him... police brutality pure and simple,"# ::snt that's because there was no feasible reason for dude to kill him... police brutality pure and simple
(m / multi-sentence
      :snt1 (c / cause-01
            :ARG0 (r / reason
                  :polarity -
                  :mod (f / feasible)
                  :ARG0-of c
                  :ARG1 (k / kill-01
                        :ARG0 (d / dude)
                        :ARG1 (h / he))))
      :ARG1 (t / that)
      :snt2 (b / brutalize-01
            :ARG0 (p / police)
            :manner (p2 / pure-02)
            :ARG1-of (s / simple-02)))"
When did shoplifting became robbery.,"# ::snt When did shoplifting became robbery.
(b / become-01
      :ARG1 (s / shoplift-01)
      :ARG2 (r / rob-01)
      :time (a / amr-unknown))"
This could be the inspiration for that 'Let's Be Cops' movie.,"# ::snt This could be the inspiration for that 'Let's Be Cops' movie.
(p / possible-01
      :ARG1 (ii / inspire-01
            :ARG0 (t / this)
            :ARG1 (m / movie
                  :name (n / name
                        :op1 ""Let's""
                        :op2 ""Be""
                        :op3 ""Cops"")
                  :mod (t2 / that))))"
My column: FERGUSON: OBAMA KICKS NIXON IN THE ASS,"# ::snt My column: FERGUSON: OBAMA KICKS NIXON IN THE ASS
(a / and
      :op1 (c / column
            :poss (ii / i)
            :mod (p / person
                  :name (n / name
                        :op1 ""Ferguson"")))
      :op2 (k / kick-01
            :ARG0 (p2 / person
                  :name (n2 / name
                        :op1 ""Obama""))
            :ARG1 (n3 / nickel)
            :location (a2 / ass)))"
":Increasingly seems like police dept. spent all week playing dress-up, couldn't even be bothered to get its story straight","# ::snt :Increasingly seems like police dept. spent all week playing dress-up, couldn't even be bothered to get its story straight
(s / seem-01
      :ARG1 (a / and
            :op1 (s2 / spend-02
                  :ARG0 (d / department
                        :mod (p / police))
                  :ARG1 (w / week
                        :mod (a2 / all))
                  :ARG2 (p2 / play-01
                        :ARG0 d
                        :ARG1 (d2 / dress-up-02
                              :ARG0 d)))
            :op2 (p3 / possible-01
                  :polarity -
                  :ARG1 (b / bother-01
                        :ARG0 (g / get-04
                              :ARG0 d
                              :ARG1 (s3 / straight-04
                                    :ARG1 (s4 / story
                                          :poss d)))
                        :ARG1 d
                        :mod (e / even))))
      :ARG1-of (ii / increase-01))"
