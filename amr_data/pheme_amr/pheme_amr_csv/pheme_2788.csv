comment,amr
does not have black officers? Or were they so dumb as to send only white officers to try to calm the crowds?,"# ::snt does not have black officers? Or were they so dumb as to send only white officers to try to calm the crowds?
(m / multi-sentence
      :snt1 (h / have-03
            :polarity -
            :ARG0 (t / they)
            :ARG1 (o / officer
                  :ARG1-of (b / black-05))
            :polarity (a / amr-unknown))
      :snt2 (h2 / have-degree-91
            :ARG1 (t2 / they)
            :ARG2 (d / dumb)
            :ARG3 (s / so)
            :ARG6 (s2 / send-01
                  :ARG0 t2
                  :ARG1 (o2 / officer
                        :ARG1-of (w / white-02)
                        :mod (o3 / only))
                  :ARG2 (t3 / try-01
                        :ARG0 o2
                        :ARG1 (c / calm-down-02
                              :ARG0 o2
                              :ARG1 (c2 / crowd)))
                  :polarity (a2 / amr-unknown))))"
in the US!,"# ::snt in the US!
(b / be-located-at-91
      :ARG2 (c / country
            :name (n / name
                  :op1 ""US"")))"
Huh - weird no cops w/out white skins.,"# ::snt Huh - weird no cops w/out white skins.
(w / weird
      :domain (c / cop
            :polarity -
            :ARG0-of (w2 / w
                  :ARG1 (s / skin
                        :ARG1-of (w3 / white-02))))
      :ARG1-of (h / hmm-01))"
Police and protesters face to face in,"# ::snt Police and protesters face to face in
(f / face-to-face
      :op1 (p / police)
      :op2 (p2 / person
            :ARG0-of (p3 / protest-01)))"
: Police and protesters face to face in . News conf coming,"# ::snt : Police and protesters face to face in . News conf coming
(m / multi-sentence
      :snt1 (f / face-to-face
            :domain (a / and
                  :op1 (p / police)
                  :op2 (p2 / person
                        :ARG0-of (p3 / protest-01))))
      :snt2 (c / come-03
            :ARG1 (c2 / confine-01
                  :ARG2 (n / news))))"
: Police and protesters face to face in,"# ::snt : Police and protesters face to face in
(f / face-to-face
      :op1 (p / police)
      :op2 (p2 / person
            :ARG0-of (p3 / protest-01)))"
: Police and protesters face to face in civil rights still a fight.,"# ::snt : Police and protesters face to face in civil rights still a fight.
(f / fight-01
      :ARG0 (a / and
            :op1 (p / police)
            :op2 (p2 / person
                  :ARG0-of (p3 / protest-01)))
      :ARG2 (r / right-05
            :mod (c / civil))
      :mod (s / still)
      :manner (f2 / face-to-face))"
: Police and protesters face to face in the police officers look ridiclous,"# ::snt : Police and protesters face to face in the police officers look ridiclous
(l / look-02
      :ARG0 (a / and
            :op1 (p / police)
            :op2 (p2 / person
                  :ARG0-of (p3 / protest-01)))
      :ARG1 (r / ridiculous-02)
      :manner (f / face-to-face)
      :example (p4 / person
            :ARG0-of (h / have-org-role-91
                  :ARG1 p
                  :ARG2 (o / officer))))"
always an interesting contrast,"# ::snt always an interesting contrast
(c / contrast-01
      :ARG2-of (ii / interest-01)
      :time (a / always))"
Did they want to make a special point by sending only white officers? This picture nicely illustrates huge part of problem.,"# ::snt Did they want to make a special point by sending only white officers? This picture nicely illustrates huge part of problem.
(m / multi-sentence
      :snt1 (w / want-01
            :ARG0 (t / they)
            :ARG1 (p / point-04
                  :ARG0 t
                  :ARG1-of (s / special-02)
                  :manner (s2 / send-01
                        :ARG0 t
                        :ARG1 (o / officer
                              :ARG1-of (w2 / white-02)
                              :mod (o2 / only))))
            :polarity (a / amr-unknown))
      :snt2 (ii / illustrate-01
            :ARG0 (p2 / picture
                  :mod (t2 / this))
            :ARG1 (p3 / part
                  :mod (h / huge)
                  :part-of (p4 / problem))
            :ARG1-of (n / nice-01)))"
