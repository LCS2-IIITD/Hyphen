comment,amr
Oh would you just shut up !! Dumbass !!,"# ::snt Oh would you just shut up !! Dumbass !!
(s / shut-up-06
      :mode imperative
      :ARG0 (y / you
            :mod (d / dumbass)
            :ARG1-of s)
      :mod (o / oh
            :mode expressive)
      :mod (j / just))"
Why havent they just turned of all mobile comms.Problem solved,"# ::snt Why havent they just turned of all mobile comms.Problem solved
(m / multi-sentence
      :snt1 (c / cause-01
            :ARG0 (a / amr-unknown)
            :ARG1 (t / turn-01
                  :polarity -
                  :ARG0 (t2 / they)
                  :ARG1 (c2 / comms
                        :mod (m2 / mobile)
                        :mod (a2 / all))
                  :mod (j / just)))
      :snt2 (s / solve-01
            :ARG1 (p / problem)))"
has not to do with censorship. It's about safety and security. loose lips sink ships.,"# ::snt has not to do with censorship. It's about safety and security. loose lips sink ships.
(m / multi-sentence
      :snt1 (h / have-to-do-with-04
            :polarity -
            :ARG1 (c / censor-01))
      :snt2 (c2 / concern-02
            :ARG0 (ii / it)
            :ARG1 (a / and
                  :op1 (s / safe-01)
                  :op2 (s2 / security)))
      :snt3 (s3 / sink-01
            :ARG0 (l / lip
                  :ARG1-of (l2 / loose-04))
            :ARG1 (s4 / ship)))"
": Censorship: RCMP Asks Public Not to Post Photos, Videos of","# ::snt : Censorship: RCMP Asks Public Not to Post Photos, Videos of
(c / censor-01
      :ARG0 (a / ask-02
            :ARG0 (o / organization
                  :name (n / name
                        :op1 ""RCRC""))
            :ARG1 (p / post-01
                  :polarity -
                  :ARG0 (p2 / public)
                  :ARG1 (a2 / and
                        :op1 (p3 / photograph-01)
                        :op2 (v / video)))
            :ARG2 p2))"
It's censorship if they stop it after it's over. Safety issue when they want it stopped while its going on.,"# ::snt It's censorship if they stop it after it's over. Safety issue when they want it stopped while its going on.
(m / multi-sentence
      :snt1 (c / censor-01
            :domain (ii / it)
            :condition (s / stop-01
                  :ARG0 (t / they)
                  :ARG1 (ii2 / it)
                  :time (a / after
                        :op1 (o / over-01
                              :ARG1 ii2))))
      :snt2 (ii3 / issue-02
            :ARG0 (s2 / safe-01)
            :time (w / want-01
                  :ARG0 (t2 / they)
                  :ARG1 (s3 / stop-01
                        :ARG1 ii2
                        :time (g / go-on-15
                              :ARG1 ii2)))))"
. Also Alex we need to tie all this to somehow.,"# ::snt . Also Alex we need to tie all this to somehow.
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (n / need-01
            :ARG0 (w / we)
            :ARG1 (t / tie-01
                  :ARG0 w
                  :ARG1 (t2 / this
                        :mod (a / all))
                  :ARG2 (s2 / somehow))
            :mod (a2 / also))
      :ARG2 (p / person
            :name (n2 / name
                  :op1 ""Alex"")))"
"Or, you know... giving intel on police positions to those involved is kind of a jackassed thing to do?","# ::snt Or, you know... giving intel on police positions to those involved is kind of a jackassed thing to do?
(o / or
      :op2 (k / know-01
            :ARG0 (y / you)
            :ARG1 (t / thing
                  :ARG1-of (d / do-02)
                  :domain (g / give-01
                        :ARG1 (ii / intelligence
                              :topic (p / position-01
                                    :ARG0 (p2 / police)))
                        :ARG2 (p3 / person
                              :ARG1-of (ii2 / involve-01)))
                  :mod (j / jackass
                        :degree (k2 / kind-of)))
            :polarity (a / amr-unknown)))"
"' Ready to call it a ""false flag"" yet?","# ::snt ' Ready to call it a ""false flag"" yet?
(r / ready-02
      :polarity (a / amr-unknown)
      :ARG1 (y / you)
      :ARG2 (c / call-01
            :ARG0 y
            :ARG1 (ii / it)
            :ARG2 (f / flag
                  :mod (f2 / false)))
      :time (y2 / yet))"
"false flags are usually aimed at civilians, but let's see what rights they want to take away in the name of this","# ::snt false flags are usually aimed at civilians, but let's see what rights they want to take away in the name of this
(c / contrast-01
      :ARG1 (a / aim-02
            :ARG1 (f / flag
                  :mod (f2 / false))
            :ARG2 (c2 / civilian)
            :mod (u / usual))
      :ARG2 (s / see-01
            :mode imperative
            :ARG0 (w / we)
            :ARG1 (r / right-05
                  :ARG1-of (t / take-away-05
                        :ARG0 (t2 / they)
                        :purpose (t3 / this)
                        :ARG1-of (w2 / want-01
                              :ARG0 t2)))))"
fuck them,"# ::snt fuck them
(f / fuck-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (t / they))"
yrds from street to front of par/building..how does guy with long gun make it in past armed security officers?,"# ::snt yrds from street to front of par/building..how does guy with long gun make it in past armed security officers?
(m / multi-sentence
      :snt1 (y / yrds
            :source (s / street)
            :destination (f / front
                  :part-of (s2 / slash
                        :op1 (p / par)
                        :op2 (b / build-01))))
      :snt2 (m2 / make-it-14
            :ARG0 (g / guy
                  :ARG0-of (h / have-03
                        :ARG1 (g2 / gun
                              :ARG1-of (l / long-03))))
            :ARG1 (p2 / person
                  :ARG0-of (h2 / have-org-role-91
                        :ARG1 (s3 / security)
                        :ARG2 (o / officer))
                  :ARG1-of (a / arm-01))
            :manner (a2 / amr-unknown)
            :time (p3 / past)))"
"we know more about fighting in Kobani b/c of TWITTER than we do about Ottawa and certainly not from NBC,CBS,ABC","# ::snt we know more about fighting in Kobani b/c of TWITTER than we do about Ottawa and certainly not from NBC,CBS,ABC
(a / and
      :op1 (k / know-01
            :ARG0 (w / we)
            :ARG1 (f / fight-01
                  :location (c / city
                        :name (n / name
                              :op1 ""Kobani"")))
            :ARG1-of (c2 / cause-01
                  :ARG0 (p / publication
                        :name (n2 / name
                              :op1 ""TWITTER"")))
            :ARG1-of (h / have-quant-91
                  :ARG3 (m / more)
                  :ARG4 (k2 / know-01
                        :ARG0 w
                        :ARG1 f
                        :topic (c3 / city
                              :name (n3 / name
                                    :op1 ""Ottawa"")))))
      :op2 (k3 / know-01
            :polarity -
            :ARG0 w
            :ARG1 f
            :source (a2 / and
                  :op1 (p2 / publication
                        :name (n4 / name
                              :op1 ""NBC""))
                  :op2 (p3 / publication
                        :name (n5 / name
                              :op1 ""CBS""))
                  :op3 (p4 / publication
                        :name (n6 / name
                              :op1 ""ABC"")))
            :manner (c4 / certain)))"
does more to expose the horrible truth than anyone on .,"# ::snt does more to expose the horrible truth than anyone on .
(h / have-degree-91
      :ARG2 (e / expose-01
            :ARG1 (t / truth
                  :mod (h2 / horrible)))
      :ARG3 (m / more)
      :ARG4 (a / anyone))"
if we wanted a foreigner talking about Canada we'd ask for,"# ::snt if we wanted a foreigner talking about Canada we'd ask for
(h / have-condition-91
      :ARG1 (a / ask-02
            :ARG0 (w / we)
            :ARG1 (t / talk-01
                  :ARG0 (f / foreign)
                  :ARG1 (c / country
                        :name (n / name
                              :op1 ""Canada""))))
      :ARG2 (w2 / want-01
            :ARG0 w
            :ARG1 f))"
"it's still on gong, makes sense, tomorrow they should be able to upload what they want, worry about you own country","# ::snt it's still on gong, makes sense, tomorrow they should be able to upload what they want, worry about you own country
(a / and
      :op1 (b / be-located-at-91
            :ARG1 (ii / it)
            :ARG2 (c / company
                  :name (n / name
                        :op1 ""Gong""))
            :mod (s / still)
            :ARG1-of (s2 / sense-02))
      :op2 (r / recommend-01
            :ARG1 (p / possible-01
                  :ARG1 a
                  :op1 (u / upload-01
                        :ARG0 (t / they)
                        :ARG1 (t2 / thing
                              :ARG1-of (w / want-01
                                    :ARG0 t)))
                  :op2 (w2 / worry-01
                        :ARG0 (c2 / country
                              :poss (y / you))
                        :ARG1 y))
            :time (t3 / tomorrow)))"
"Get busy RCMP, forget that, sounds like the camel getting it's nose under the tent on the way to martial law, TRUST US SHIT","# ::snt Get busy RCMP, forget that, sounds like the camel getting it's nose under the tent on the way to martial law, TRUST US SHIT
(a / and
      :op1 (f / forget-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (p / publication
                  :name (n / name
                        :op1 ""RCM"")
                  :ARG1-of (b / busy-01)))
      :op2 f
      :mode imperative
      :ARG0 y
      :ARG1 (t / that
            :ARG1-of (s / sound-01
                  :ARG2 (c / camel
                        :part (n2 / nose)
                        :ARG0-of (g / get-05
                              :ARG1 n2
                              :ARG2 (u / under
                                    :op1 (t2 / tent))
                              :time (w / way
                                    :direction (l / law
                                          :mod (m / martial)))))))
      :op3 (b2 / bust-01
            :mode imperative
            :ARG0 y
            :ARG1 (s2 / shit-01
                  :ARG0 (w2 / we))))"
They *asked*?? Oh the horror! Such jackbooted thugs!,"# ::snt They *asked*?? Oh the horror! Such jackbooted thugs!
(m / multi-sentence
      :snt1 (a / ask-01
            :ARG0 (t / they))
      :snt2 (h / horror
            :mod (o / oh
                  :mode expressive))
      :snt3 (t2 / thug
            :mod (j / jackboot)
            :mod (s / such)))"
: Censorship: RCMP Asks Public...Requesting is not censoring.,"# ::snt : Censorship: RCMP Asks Public...Requesting is not censoring.
(m / multi-sentence
      :snt1 (c / censure-01
            :ARG0 (t / thing
                  :ARG1-of (r / request-01)))
      :snt2 (a / ask-02
            :ARG0 (g / government-organization
                  :name (n / name
                        :op1 ""RCMP""))
            :ARG2 (p / public)))"
Royal Colonial Mounty Police.,"# ::snt Royal Colonial Mounty Police.
(p / police
      :name (n / name
            :op1 ""Royal""
            :op2 ""Colonial""
            :op3 ""Mounty""
            :op4 ""Police""))"
that tweet is inaccurate. They verbally stated that they did not want the locations of officers tweeted for officer safety.,"# ::snt that tweet is inaccurate. They verbally stated that they did not want the locations of officers tweeted for officer safety.
(m / multi-sentence
      :snt1 (a / accurate
            :polarity -
            :domain (t / thing
                  :ARG1-of (t2 / tweet-01)
                  :mod (t3 / that)))
      :snt2 (s / state-01
            :ARG0 (t4 / they)
            :ARG1 (w / want-01
                  :polarity -
                  :ARG0 t4
                  :ARG1 (l / location
                        :location-of (p / person
                              :ARG0-of (h / have-org-role-91
                                    :ARG2 (o / officer))
                              :ARG1-of (t5 / tweet-01
                                    :purpose (s2 / safe-01
                                          :ARG1 p)))))
            :manner (v / verbal)))"
"TWITTER is now the TH arm of American government as the MSM has sold out and is sucking DC dicks. The last free press, TWEET","# ::snt TWITTER is now the TH arm of American government as the MSM has sold out and is sucking DC dicks. The last free press, TWEET
(m / multi-sentence
      :snt1 (a / arm
            :domain (p / publication
                  :name (n / name
                        :op1 ""TWITTER""))
            :part-of (g / government-organization
                  :ARG0-of (g2 / govern-01
                        :ARG1 (c / country
                              :name (n2 / name
                                    :op1 ""America""))))
            :time (n3 / now)
            :ARG1-of (c2 / cause-01
                  :ARG0 (a2 / and
                        :op1 (s / sell-out-03
                              :ARG1 (p2 / publication
                                    :name (n4 / name
                                          :op1 ""MSM"")))
                        :op2 (s2 / suck-01
                              :ARG0 p2
                              :ARG1 (d / dick
                                    :mod (c3 / city
                                          :name (n5 / name
                                                :op1 ""DC"")))))))
      :snt2 (t / tear-03
            :mode imperative
            :ARG0 (p3 / press
                  :mod (l / last)
                  :ARG1-of (f / free-04))))"
Heaven forbid that the real story should get out before the RCMP had a chance to censor/whitewash it.,"# ::snt Heaven forbid that the real story should get out before the RCMP had a chance to censor/whitewash it.
(f / forbid-01
      :ARG0 (h / heaven)
      :ARG1 (r / recommend-01
            :ARG1 (g / get-05
                  :ARG1 (s / story
                        :ARG1-of (r2 / real-04))
                  :ARG2 (o / out)
                  :time (b / before
                        :op1 (c / chance-02
                              :ARG0 (o2 / organization
                                    :name (n / name
                                          :op1 ""RCRC""))
                              :ARG1 (s2 / slash
                                    :op1 (c2 / censor-01
                                          :ARG0 o2
                                          :ARG1 s)
                                    :op2 (w / whitewash-01
                                          :ARG0 o2
                                          :ARG1 s)))))))"
