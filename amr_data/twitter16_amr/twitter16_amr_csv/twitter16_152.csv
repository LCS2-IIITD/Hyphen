comment,amr
,"# ::snt 
(a / amr-empty)"
"you are fucking disgusting. ""Flame the race war, it's good for hits!"" I hope this writer beaten to death with his keyboard.","# ::snt you are fucking disgusting. ""Flame the race war, it's good for hits!"" I hope this writer beaten to death with his keyboard.
(m / multi-sentence
      :snt1 (d / disgust-01
            :ARG0 (y / you)
            :mod (f / fucking))
      :snt2 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (a / and
                  :op1 (b / blame-01
                        :mode imperative
                        :ARG0 (y2 / you)
                        :ARG1 (w / war-01
                              :ARG2 (r / race)))
                  :op2 (g / good-04
                        :ARG1 b
                        :ARG2 (h / hit))))
      :snt3 (h2 / hope-01
            :ARG0 (ii2 / i)
            :ARG1 (b2 / beat-01
                  :ARG1 (p / person
                        :ARG0-of (w2 / write-01)
                        :mod (t / this))
                  :ARG2 (d2 / die-01
                        :ARG1 p)
                  :instrument (k / keyboard
                        :poss p))))"
"look at this fucking lizard he's so disgusting and just oozes ""serial killer""","# ::snt look at this fucking lizard he's so disgusting and just oozes ""serial killer""
(l / look-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (a / and
            :op1 (d / disgust-01
                  :ARG0 (h / he)
                  :degree (s / so))
            :op2 (o / ooze-01
                  :ARG0 h
                  :ARG1 (p / person
                        :ARG0-of (k / kill-01
                              :mod (s2 / serial)))
                  :mod (j / just))))"
exactly !,"# ::snt exactly !
(e / exact
      :mode expressive)"
no worries.,"# ::snt no worries.
(w / worry-02
      :polarity -)"
"I wish we could spend more time with this. I'll not be able to do much for next cpl weeks, but would sure like to look into.","# ::snt I wish we could spend more time with this. I'll not be able to do much for next cpl weeks, but would sure like to look into.
(m / multi-sentence
      :snt1 (w / wish-01
            :ARG0 (ii / i)
            :ARG1 (p / possible-01
                  :ARG1 (s / spend-02
                        :ARG0 (w2 / we)
                        :ARG1 (t / time
                              :mod (m2 / more))
                        :ARG2 (t2 / this))))
      :snt2 (c / contrast-01
            :ARG1 (p2 / possible-01
                  :polarity -
                  :ARG1 (d / do-02
                        :ARG0 (ii2 / i)
                        :ARG1 (m3 / much)
                        :time (a / after
                              :op1 (n / now)
                              :duration (m4 / multiple
                                    :op1 (t3 / temporal-quantity
                                          :quant 1
                                          :unit (w3 / week))))))
            :ARG2 (l / like-02
                  :ARG0 ii2
                  :ARG1 (l2 / look-into-11
                        :ARG0 ii2)
                  :ARG1-of (s2 / sure-02))))"
Thanks for the reply,"# ::snt Thanks for the reply
(t / thank-01
      :ARG0 (ii / i)
      :ARG2 (r / reply-01))"
"who follows who. And lastly, one that can detect fake accts, etc.","# ::snt who follows who. And lastly, one that can detect fake accts, etc.
(m / multi-sentence
      :snt1 (f / follow-02
            :ARG0 (a / amr-unknown)
            :ARG1 (a2 / amr-unknown))
      :snt2 (a3 / and
            :li ""-1""
            :op2 (c / capable-01
                  :ARG1 (o / one)
                  :ARG2 (d / detect-01
                        :ARG0 o
                        :ARG1 a3
                        :op1 (a4 / acct
                              :ARG1-of (f2 / fake-02))
                        :op2 (e / et-cetera)))))"
*found* Kindle app that shoes me age of acct and other data. Another app will tell you about &gt;,"# ::snt *found* Kindle app that shoes me age of acct and other data. Another app will tell you about &gt;
(m / multi-sentence
      :snt1 (f / find-01
            :ARG1 (a / app
                  :name (n / name
                        :op1 ""Kindle"")
                  :ARG0-of (s / shoe-01
                        :ARG1 (a2 / age-01
                              :ARG1 (ii / i)
                              :ARG2 (a3 / and
                                    :op1 (a4 / acct)
                                    :op2 (d / data
                                          :mod (o / other))))
                        :ARG2 ii)))
      :snt2 (t / tell-01
            :ARG0 (a5 / app
                  :mod (a6 / another))
            :ARG1 (a7 / and
                  :op1 (t2 / thing
                        :name (n2 / name
                              :op1 ""&gt""))
                  :op2 (t3 / thing
                        :name (n3 / name
                              :op1 ""&gt"")))
            :ARG2 (y / you)))"
are tools in your App store that are free or small cost that offer options. I find a Kindle &gt;,"# ::snt are tools in your App store that are free or small cost that offer options. I find a Kindle &gt;
(m / multi-sentence
      :snt1 (t / tool
            :domain (o / or
                  :op1 (f / free-03)
                  :op2 (c / cost-01
                        :mod (s / small)))
            :ARG0-of (o2 / offer-01
                  :ARG1 (o3 / option))
            :location (s2 / store
                  :mod (a / app)
                  :poss (y / you)))
      :snt2 (f2 / find-01
            :ARG0 (ii / i)
            :ARG1 (t2 / thing
                  :name (n / name
                        :op1 ""Kindle""
                        :op2 ""&gt""))))"
"Thx for reminding me. Dealing with unexpected health issue so can't do research. But, there &gt;","# ::snt Thx for reminding me. Dealing with unexpected health issue so can't do research. But, there &gt;
(m / multi-sentence
      :snt1 (t / thank-01
            :ARG0 (ii / i)
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""Thx""))
            :ARG2 (r / remind-01
                  :ARG0 p
                  :ARG1 ii))
      :snt2 (c / cause-01
            :ARG0 (d / deal-01
                  :ARG2 (ii2 / issue-02
                        :ARG0 (h / health)
                        :ARG1-of (e / expect-01
                              :polarity -)))
            :ARG1 (p2 / possible-01
                  :polarity -
                  :ARG1 (r2 / research-01)))
      :snt3 (c2 / contrast-01
            :ARG2 (t2 / there)))"
Never got back on what said tools/apps that u use...,"# ::snt Never got back on what said tools/apps that u use...
(g / get-back-10
      :polarity -
      :ARG1 (y / you)
      :ARG2 (s / slash
            :op1 (t / tool)
            :op2 (a / app)
            :ARG1-of (s2 / say-01)
            :ARG1-of (u / use-01
                  :ARG0 y))
      :time (e / ever))"
,"# ::snt 
(a / amr-empty)"
"""we're going to kill him to show that killing is wrong""","# ::snt ""we're going to kill him to show that killing is wrong""
(k / kill-01
      :ARG0 (w / we)
      :ARG1 (h / he)
      :purpose (s / show-01
            :ARG0 w
            :ARG1 (w2 / wrong-02
                  :ARG1 (k2 / kill-01))))"
it costs more to put someone to death than to just give him life in prison.,"# ::snt it costs more to put someone to death than to just give him life in prison.
(h / have-quant-91
      :ARG1 (c / cost-01
            :ARG1 (p / put-03
                  :ARG1 (s / someone)
                  :ARG2 (d / die-01
                        :ARG1 s)))
      :ARG3 (m / more)
      :ARG4 (c2 / cost-01
            :ARG1 (g / give-01
                  :ARG1 (l / life)
                  :ARG2 s
                  :location (p2 / prison)
                  :mod (j / just))))"
"I'm glad I've been hoaxed And thanks Internet, for adding Too Fucked Up To Be True to the list of things to watch for.","# ::snt I'm glad I've been hoaxed And thanks Internet, for adding Too Fucked Up To Be True to the list of things to watch for.
(a / and
      :op1 (g / glad-02
            :ARG0 (h / hoax-01
                  :ARG1 (ii / i))
            :ARG1 ii)
      :op2 (t / thank-01
            :ARG0 ii
            :ARG1 (ii2 / internet)
            :ARG2 (a2 / add-02
                  :ARG0 ii2
                  :ARG1 (t2 / thing
                        :ARG1-of (h2 / have-degree-91
                              :ARG2 (f / fuck-up-02
                                    :ARG1 t2)
                              :ARG3 (t3 / too)))
                  :ARG2 (l / list-01
                        :ARG1 (t4 / thing
                              :ARG1-of (w / watch-01))))))"
,"# ::snt 
(a / amr-empty)"
why you tweeting this bullshit,"# ::snt why you tweeting this bullshit
(c / cause-01
      :ARG0 (a / amr-unknown)
      :ARG1 (t / tweet-01
            :ARG0 (y / you)
            :ARG1 (b / bullshit
                  :mod (t2 / this))))"
"""Black organisations looking to make our client guilty"". Wow.","# ::snt ""Black organisations looking to make our client guilty"". Wow.
(m / multi-sentence
      :snt1 (l / look-04
            :ARG0 (o / organization
                  :ARG1-of (b / black-05))
            :ARG1 (m2 / make-02
                  :ARG0 o
                  :ARG1 (g / guilty-01
                        :ARG1 (c / client
                              :poss (w / we)))))
      :snt2 (w2 / wow
            :mode expressive))"
ja ikkesant ?? Dem er sikkert rasister selv de som donerte as!!!,"# ::snt ja ikkesant ?? Dem er sikkert rasister selv de som donerte as!!!
(m / multi-sentence
      :snt1 (p / person
            :name (n / name
                  :op1 ""ja""
                  :op2 ""ikkesant""))
      :snt2 (h / have-mod-91
            :ARG1 (p2 / person
                  :name (n2 / name
                        :op1 ""Dem""))
            :ARG2 (p3 / person
                  :ARG0-of (h2 / have-org-role-91
                        :ARG2 (r / rasister))))
      :snt3 h
      :ARG1 (p4 / person)
      :ARG2 (a / as))"
I just don't understand how people think. They don't even seem to be part of this country.,"# ::snt I just don't understand how people think. They don't even seem to be part of this country.
(m / multi-sentence
      :snt1 (u / understand-01
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (t / thing
                  :manner-of (t2 / think-01
                        :ARG0 (p / person)))
            :mod (j / just))
      :snt2 (s / seem-01
            :polarity -
            :ARG1 (t3 / they
                  :part-of (c / country
                        :mod (t4 / this)))
            :mod (e / even)))"
"no, forgiveness is important but so is punishment. New examples are always needed. Murder is not to be taken lightly.","# ::snt no, forgiveness is important but so is punishment. New examples are always needed. Murder is not to be taken lightly.
(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (ii / important-01
                  :ARG1 (f / forgive-01))
            :ARG2 (ii2 / important-01
                  :ARG1 (p / punish-01)))
      :snt2 (n / need-01
            :ARG1 (e / example
                  :ARG1-of (n2 / new-01))
            :time (a / always))
      :snt3 (t / take-04
            :polarity -
            :ARG1 (m2 / murder-01)
            :ARG2 (l / light-06)))"
WHAT is this shit ?????,"# ::snt WHAT is this shit ?????
(s / shit
      :mod (t / this)
      :mod (a / amr-unknown))"
those funds are proceeds of crime. Attach the money and donate it to the community or victim's families,"# ::snt those funds are proceeds of crime. Attach the money and donate it to the community or victim's families
(m / multi-sentence
      :snt1 (p / proceeds
            :source (c / crime-02)
            :domain (f / fund
                  :mod (t / that)))
      :snt2 (a / and
            :op1 (a2 / attract-01
                  :ARG1 (m2 / money))
            :op2 (d / donate-01
                  :ARG1 m2
                  :ARG2 (o / or
                        :op1 (c2 / community)
                        :op2 (f2 / family
                              :ARG1-of (h / have-org-role-91
                                    :ARG0 (v / victim)
                                    :ARG2 (m3 / member)))))))"
"this is completely disgusting.""","# ::snt this is completely disgusting.""
(d / disgust-01
      :ARG0 (t / this)
      :ARG1-of (c / complete-02))"
is this real???,"# ::snt is this real???
(r / real-04
      :polarity (a / amr-unknown)
      :ARG1 (t / this))"
"This is exactly what is wrong with some ppl in this country. Someone please sue, prevent him from getting one penny.","# ::snt This is exactly what is wrong with some ppl in this country. Someone please sue, prevent him from getting one penny.
(m / multi-sentence
      :snt1 (w / wrong-02
            :ARG1 (t / this)
            :ARG2 (p / person
                  :quant (s / some)
                  :location (c / country
                        :mod (t2 / this)))
            :mod (e / exact))
      :snt2 (a / and
            :op1 (s2 / sue-02
                  :polite +
                  :mode imperative
                  :ARG0 (y / you)
                  :ARG1 (s3 / someone))
            :op2 (p2 / prevent-01
                  :mode imperative
                  :ARG0 y
                  :ARG1 s3
                  :ARG2 (g / get-01
                        :ARG0 s3
                        :ARG1 (p3 / penny
                              :quant 1)))))"
You are white in America. What more do You need?,"# ::snt You are white in America. What more do You need?
(m / multi-sentence
      :snt1 (w / white-02
            :ARG1 (y / you)
            :location (c / country
                  :name (n / name
                        :op1 ""America"")))
      :snt2 (n2 / need-01
            :ARG0 (y2 / you)
            :ARG1 (a / amr-unknown
                  :mod (m2 / more))))"
What the fuck? These Americans are evil people...,"# ::snt What the fuck? These Americans are evil people...
(m / multi-sentence
      :snt1 (a / amr-unknown
            :mod (f / fuck
                  :mode expressive))
      :snt2 (p / person
            :mod (e / evil)
            :domain (p2 / person
                  :mod (c / country
                        :name (n / name
                              :op1 ""America""))
                  :mod (t / this))))"
Showing he wasn't a lone wolf as white supremacist media would like to purport. He was an executor of a vision many harbour.,"# ::snt Showing he wasn't a lone wolf as white supremacist media would like to purport. He was an executor of a vision many harbour.
(m / multi-sentence
      :snt1 (s / show-01
            :ARG1 (w / wolf
                  :polarity -
                  :mod (l / lone)
                  :domain (h / he)
                  :ARG1-of (p / purport-01
                        :ARG0 (m2 / media
                              :ARG1-of (w2 / white-02)
                              :mod (s2 / supremacist))
                        :ARG1-of (l2 / like-02
                              :ARG0 m2))))
      :snt2 (e / execute-02
            :ARG0 (h2 / he)
            :ARG1 (e2 / envision-01
                  :ARG1-of (h3 / harbor-01
                        :ARG0 (m3 / many)))))"
More like News Comments writers raising money for Steve Hofmeyer court case against Chester Messing,"# ::snt More like News Comments writers raising money for Steve Hofmeyer court case against Chester Messing
(h / have-degree-of-resemblance-91
      :ARG1 (r / raise-02
            :ARG0 (p / person
                  :ARG0-of (w / write-01
                        :ARG1 (c / comment-01
                              :ARG3 (n / news))))
            :ARG1 (m / money)
            :purpose (c2 / case-03
                  :ARG0 (p2 / person
                        :name (n2 / name
                              :op1 ""Steve""
                              :op2 ""Hofmeyer""))
                  :ARG2 (p3 / person
                        :name (n3 / name
                              :op1 ""Chester""
                              :op2 ""Messing""))
                  :mod (c3 / court)))
      :ARG2 (m2 / more))"
twisted world.,"# ::snt twisted world.
(w / world
      :ARG2-of (t / twist-01))"
u must be kidding me,"# ::snt u must be kidding me
(ii / infer-01
      :ARG0 (ii2 / i)
      :ARG1 (k / kid-01
            :ARG0 (y / you)
            :ARG1 ii2))"
wtf.....,"# ::snt wtf.....
(a / amr-unknown
      :mod (f / fuck))"
"NO disrespect to , NO one else reported adopting alien","# ::snt NO disrespect to , NO one else reported adopting alien
(a / and
      :op1 (d / disrespect-01
            :polarity -)
      :op2 (r / report-01
            :ARG0 (n / no-one
                  :mod (e / else))
            :ARG1 (a2 / adopt-01
                  :ARG0 n
                  :ARG1 (p / person
                        :ARG1-of (a3 / alien-01)))))"
yah quick check of website appears to be as accurate as,"# ::snt yah quick check of website appears to be as accurate as
(a / appear-02
      :ARG1 (a2 / accurate
            :ARG2-of (h / have-degree-91
                  :ARG1 (c / check-01
                        :ARG1 (w / website)
                        :ARG1-of (q / quick-02))
                  :ARG3 (e / equal)
                  :ARG4 (t / thing)))
      :mod (y / yah
            :mode expressive))"
*Twitter*,"# ::snt *Twitter*
(p / publication
      :name (n / name
            :op1 ""Twitter""))"
Twotter Bot listed me last night! My twotter has issues!,"# ::snt Twotter Bot listed me last night! My twotter has issues!
(m / multi-sentence
      :snt1 (l / list-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Twotter""
                        :op2 ""Bot""))
            :ARG1 (ii / i)
            :time (d / date-entity
                  :dayperiod (n2 / night)
                  :mod (y / yesterday)))
      :snt2 (ii2 / issue-02
            :ARG1 (ii3 / i)))"
back at ya!,"# ::snt back at ya!
(b / back-02
      :mode expressive
      :ARG1 (y / you))"
Very good news! Glued TV (&amp; following you),"# ::snt Very good news! Glued TV (&amp; following you)
(m / multi-sentence
      :snt1 (n / news
            :ARG1-of (g / good-02
                  :degree (v / very)))
      :snt2 (a / and
            :op1 (t / television
                  :ARG1-of (g2 / green-03))
            :op2 (p / person
                  :name (n2 / name
                        :op1 ""amp""))
            :op3 (f / follow-02
                  :ARG1 (y / you))))"
True. If you're around long enough you get on a few.,"# ::snt True. If you're around long enough you get on a few.
(m / multi-sentence
      :snt1 (t / true-01)
      :snt2 (g / get-on-21
            :ARG0 (y / you)
            :ARG1 (f / few)
            :condition (b / be-located-at-91
                  :ARG1 y
                  :ARG2 (a / around)
                  :ARG1-of (h / have-degree-91
                        :ARG2 (l / long-03
                              :ARG1 b)
                        :ARG3 (e / enough)))))"
Looks like good news! MARRIAGE EQUALITY!!!!,"# ::snt Looks like good news! MARRIAGE EQUALITY!!!!
(m / multi-sentence
      :snt1 (l / look-02
            :ARG1 (n / news
                  :ARG1-of (g / good-02)))
      :snt2 (e / equal-01
            :ARG3 (m2 / marry-01)))"
You don't live unless you get listed or blocked!,"# ::snt You don't live unless you get listed or blocked!
(l / live-01
      :polarity -
      :ARG0 (y / you)
      :condition (o / or
            :op1 (l2 / list-01
                  :polarity -
                  :ARG1 y)
            :op2 (b / block-01
                  :polarity -
                  :ARG1 y)))"
"we'll make it happen next year, amiga!","# ::snt we'll make it happen next year, amiga!
(s / say-01
      :mode expressive
      :ARG0 (ii / i)
      :ARG1 (m / make-02
            :ARG0 (w / we)
            :ARG1 (ii2 / it)
            :time (y / year
                  :mod (n / next)))
      :ARG2 (a / amiga))"
It's on my bucket list! Would love to meet you all in person.,"# ::snt It's on my bucket list! Would love to meet you all in person.
(m / multi-sentence
      :snt1 (l / list-01
            :ARG0 (ii / i)
            :ARG1 (ii2 / it)
            :ARG2 (b / bucket))
      :snt2 (l2 / love-02
            :ARG0 ii
            :ARG1 (m2 / meet-02
                  :ARG0 ii
                  :ARG1 (y / you
                        :mod (a / all))
                  :mod (ii3 / in-person))))"
"Wish you were coming to DC, too. Next tribe party?","# ::snt Wish you were coming to DC, too. Next tribe party?
(m / multi-sentence
      :snt1 (w / wish-01
            :ARG0 (ii / i)
            :ARG1 (c / come-01
                  :ARG1 (y / you)
                  :ARG4 (c2 / city
                        :name (n / name
                              :op1 ""DC""))
                  :mod (t / too)))
      :snt2 (p / party-01
            :mod (t2 / tribe)
            :mod (n2 / next)
            :polarity (a / amr-unknown)))"
Got to be!,"# ::snt Got to be!
(o / obligate-01
      :mode expressive)"
Winning,"# ::snt Winning
(w / win-01)"
By someone on the Con Douchebag list I suspect.,"# ::snt By someone on the Con Douchebag list I suspect.
(s / suspect-01
      :ARG0 (ii / i)
      :ARG1 (t / thing
            :source (s2 / someone
                  :ARG1-of (l / list-01
                        :ARG2 (d / douchebag
                              :mod (c / con))))))"
I must be doing something right,"# ::snt I must be doing something right
(ii / infer-01
      :ARG1 (d / do-02
            :ARG0 (ii2 / i)
            :ARG1 (s / something)
            :ARG2-of (r / right-06
                  :ARG1 ii2)))"
