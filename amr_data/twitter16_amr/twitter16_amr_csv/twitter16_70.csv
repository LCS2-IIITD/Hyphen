comment,amr
Failed polices of the US and who pushed for them?,"# ::snt Failed polices of the US and who pushed for them?
(a / and
      :op1 (g / government-organization
            :ARG0-of (g2 / govern-01
                  :ARG1 (c / country
                        :name (n / name
                              :op1 ""US"")))
            :ARG1-of (f / fail-01))
      :op2 (p / push-02
            :ARG0 (a2 / amr-unknown)
            :ARG2 g))"
Matthew :35.,"# ::snt Matthew :35.
(c / cite-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Matthew""))
      :ARG2 35)"
,"# ::snt 
(a / amr-empty)"
Europeans are being played for suckers. Let their own people help them.,"# ::snt Europeans are being played for suckers. Let their own people help them.
(m / multi-sentence
      :snt1 (p / play-01
            :ARG0 (p2 / person
                  :mod (c / continent
                        :name (n / name
                              :op1 ""Europe"")))
            :ARG2 (s / sucker))
      :snt2 (l / let-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (h / help-01
                  :ARG0 (p3 / person
                        :poss (t / they))
                  :ARG2 t)))"
since we are trillion dollars in xebt,"# ::snt since we are trillion dollars in xebt
(c / cause-01
      :ARG0 (m / monetary-quantity
            :quant 1000000000000
            :unit (d / dollar)
            :domain (w / we)))"
in syria?too bad he didnt,"# ::snt in syria?too bad he didnt
(h / have-degree-91
      :ARG1 (h2 / he
            :polarity -)
      :ARG2 (b / bad-07
            :ARG1 h2)
      :ARG3 (t / too)
      :polarity (a / amr-unknown)
      :location (c / country
            :name (n / name
                  :op1 ""Syria"")))"
"Why are they not going to Jordan and then to Saudi, safe harbour but then no government payouts.","# ::snt Why are they not going to Jordan and then to Saudi, safe harbour but then no government payouts.
(c / contrast-01
      :ARG1 (a / and
            :op1 (g / go-02
                  :polarity -
                  :ARG0 (t / they)
                  :ARG4 (c2 / country
                        :name (n / name
                              :op1 ""Jordan"")))
            :op2 (g2 / go-02
                  :polarity -
                  :ARG0 t
                  :ARG4 (c3 / country
                        :name (n2 / name
                              :op1 ""Saudi""
                              :op2 ""Arabia""))
                  :location (h / harbor
                        :ARG1-of (s / safe-01))
                  :time (t2 / then)))
      :ARG2 (p / pay-out-03
            :polarity -
            :ARG0 (g3 / government-organization
                  :ARG0-of (g4 / govern-01))
            :time t2)
      :ARG1-of (c4 / cause-01
            :ARG0 (a2 / amr-unknown)))"
"Let's see, US bombs, Iraq, Afghanistan, Libya, Syria, Pakistan, Yemen, and the refugees are from?","# ::snt Let's see, US bombs, Iraq, Afghanistan, Libya, Syria, Pakistan, Yemen, and the refugees are from?
(s / see-01
      :mode imperative
      :ARG0 (w / we)
      :ARG1 (c / come-01
            :ARG1 (a / and
                  :op1 (b / bomb
                        :source (c2 / country
                              :name (n / name
                                    :op1 ""US"")))
                  :op2 b
                  :source (c3 / country
                        :name (n2 / name
                              :op1 ""Iraq"")))
            :op3 b
            :source (c4 / country
                  :name (n3 / name
                        :op1 ""Afghanistan"")))
      :op4 b
      :source (c5 / country
            :name (n4 / name
                  :op1 ""Libya""))
      :op5 (c6 / country
            :name (n5 / name
                  :op1 ""Syria""))
      :op6 (c7 / country
            :name (n6 / name
                  :op1 ""Pakistan""))
      :op7 (c8 / country
            :name (n7 / name
                  :op1 ""Yemen""))
      :ARG3 (r / refugee)
      :polarity (a2 / amr-unknown))"
"Send the bill to George W. Bush - as ""Decider in Chief"" he decided to engage in unnecessary wars.","# ::snt Send the bill to George W. Bush - as ""Decider in Chief"" he decided to engage in unnecessary wars.
(s / send-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (b / bill)
      :ARG2 (p / person
            :name (n / name
                  :op1 ""George""
                  :op2 ""W.""
                  :op3 ""Bush"")
            :ARG0-of (d / decide-01
                  :ARG1 (e / engage-01
                        :ARG0 p
                        :ARG2 (w / war-01
                              :ARG1-of (n2 / need-01
                                    :polarity -)))
                  :ARG1-of (c / cause-01
                        :ARG0 (h / have-org-role-91
                              :ARG0 p
                              :ARG2 (c2 / chief))))))"
Good luck with them Austria. Sad story. Only ISIS is winning it seems.,"# ::snt Good luck with them Austria. Sad story. Only ISIS is winning it seems.
(m / multi-sentence
      :snt1 (l / luck
            :ARG1-of (g / good-02)
            :beneficiary (c / country
                  :name (n / name
                        :op1 ""Austria"")))
      :snt2 (s / story
            :ARG0-of (s2 / sad-02))
      :snt3 (s3 / seem-01
            :ARG1 (w / win-01
                  :ARG0 (c2 / criminal-organization
                        :name (n2 / name
                              :op1 ""Islamic""
                              :op2 ""organization"")
                        :mod (o / only)))))"
": refugees expected in Austria today, per the . About percent are sick or injured.","# ::snt : refugees expected in Austria today, per the . About percent are sick or injured.
(m / multi-sentence
      :snt1 (e / expect-01
            :ARG1 (r / refugee)
            :time (t / today)
            :location (c / country
                  :name (n / name
                        :op1 ""Austria"")))
      :snt2 (o / or
            :op1 (s / sick-05
                  :ARG1 (p / person
                        :quant (a / about
                              :op1 (p2 / percentage-entity
                                    :value 25))))
            :op2 (ii / injure-01
                  :ARG1 p)))"
