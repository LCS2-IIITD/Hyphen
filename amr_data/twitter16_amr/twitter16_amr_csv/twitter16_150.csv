comment,amr
KFC ur a joke.Do you feed that trash to ur families?What would you do if someone treated ur family the way u do ur chickens?,"# ::snt KFC ur a joke.Do you feed that trash to ur families?What would you do if someone treated ur family the way u do ur chickens?
(m / multi-sentence
      :snt1 (j / joke-01
            :ARG2 (y / you)
            :source (o / organization
                  :name (n / name
                        :op1 ""KFC"")))
      :snt2 (f / feed-01
            :ARG0 (y2 / you)
            :ARG1 (t / trash
                  :mod (t2 / that))
            :ARG2 (f2 / family
                  :poss y2)
            :polarity (a / amr-unknown)
            :condition (t3 / treat-01
                  :ARG0 (s / someone)
                  :ARG1 y2
                  :ARG2 (w / way
                        :manner-of (t4 / treat-01
                              :ARG0 y2
                              :ARG1 (c / chicken
                                    :poss y2))))
            :polarity (a2 / amr-unknown)))"
this has been going on for ages ....,"# ::snt this has been going on for ages ....
(g / go-on-15
      :ARG1 (t / this)
      :duration (a / age))"
this yo spot lmfaoooo,"# ::snt this yo spot lmfaoooo
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (s2 / spot
            :poss (y / you)
            :mod (t / this))
      :ARG2 y)"
,"# ::snt 
(a / amr-empty)"
fuckin disgusting !!!!,"# ::snt fuckin disgusting !!!!
(d / disgust-01
      :mode expressive
      :ARG0 (f / fuck))"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
that article is about holiday turkeys from November ....,"# ::snt that article is about holiday turkeys from November ....
(c / concern-02
      :ARG0 (a / article
            :mod (t / that))
      :ARG1 (t2 / turkey
            :mod (h / holiday)
            :time (d / date-entity
                  :month 11)))"
even if it's fake Kfc is gross as fuck anyway.,"# ::snt even if it's fake Kfc is gross as fuck anyway.
(g / gross-04
      :ARG1 (p / product
            :name (n / name
                  :op1 ""KFC""))
      :concession (e / even-if
            :op1 (f / fake-02
                  :ARG1 p))
      :mod (a / anyway)
      :degree (a2 / as-fuck))"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
lmaoooooooooooo,"# ::snt lmaoooooooooooo
(l / laugh-01
      :mode expressive
      :ARG0 (ii / i)
      :manner (l2 / loud))"
you would know. you ate them last night,"# ::snt you would know. you ate them last night
(m / multi-sentence
      :snt1 (k / know-01
            :ARG0 (y / you))
      :snt2 (e / eat-01
            :ARG0 (y2 / you)
            :ARG1 (t / they)
            :time (d / date-entity
                  :dayperiod (n / night)
                  :mod (y3 / yesterday))))"
Buffalo Wild Wings? Wild ass chickens,"# ::snt Buffalo Wild Wings? Wild ass chickens
(m / multi-sentence
      :snt1 (w / wing
            :mod (w2 / wild)
            :location (c / city
                  :name (n / name
                        :op1 ""Buffalo"")))
      :snt2 (c2 / chicken
            :mod (w3 / wild
                  :mod (a / ass))))"
bruh...,"# ::snt bruh...
(b / bruh
      :mode expressive)"
you think KFC is the only one getting these chickens,"# ::snt you think KFC is the only one getting these chickens
(t / think-01
      :ARG0 (y / you)
      :ARG1 (g / get-01
            :ARG0 (o / organization
                  :name (n / name
                        :op1 ""KFC"")
                  :mod (o2 / only))
            :ARG1 (c / chicken
                  :mod (t2 / this))))"
"poor babies!!!!! I don't eat KFC though, that's for sure!","# ::snt poor babies!!!!! I don't eat KFC though, that's for sure!
(m / multi-sentence
      :snt1 (b / baby
            :mod (p / poor))
      :snt2 (e / eat-01
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (p2 / product
                  :name (n / name
                        :op1 ""KFC""))
            :ARG1-of (s / sure-02
                  :mode expressive)))"
you Vegan now for sure?,"# ::snt you Vegan now for sure?
(v / vegan
      :polarity (a / amr-unknown)
      :domain (y / you)
      :time (n / now)
      :ARG1-of (s / sure-02))"
poor chickens! I'm so glad u don't eat that ish,"# ::snt poor chickens! I'm so glad u don't eat that ish
(m / multi-sentence
      :snt1 (c / chicken
            :mod (p / poor))
      :snt2 (g / glad-02
            :ARG0 (e / eat-01
                  :polarity -
                  :ARG0 (y / you)
                  :ARG1 (t / that))
            :ARG1 (ii / i)
            :degree (s / so)
            :mod (ii2 / ish)))"
I love KFC omf,"# ::snt I love KFC omf
(l / love-01
      :ARG0 (ii / i)
      :ARG1 (o / organization
            :name (n / name
                  :op1 ""KFC""))
      :mod (a / also))"
that doesn't mean this still doesn't happen EVERYWHERE to chickens and other animals,"# ::snt that doesn't mean this still doesn't happen EVERYWHERE to chickens and other animals
(m / mean-01
      :polarity -
      :ARG1 (t / that)
      :ARG2 (t2 / this
            :location (e / everywhere)
            :mod (s / still)
            :beneficiary (a / and
                  :op1 (c / chicken)
                  :op2 (a2 / animal
                        :mod (o / other)))))"
smh kfc is shitty food but these reports are from an obviously fake website,"# ::snt smh kfc is shitty food but these reports are from an obviously fake website
(c / contrast-01
      :ARG1 (f / food
            :mod (s / shitty)
            :domain (t / thing
                  :name (n / name
                        :op1 ""smh""
                        :op2 ""kfc"")))
      :ARG2 (b / be-from-91
            :ARG1 (r / report-01
                  :mod (t2 / this))
            :ARG2 (w / website
                  :ARG1-of (f2 / fake-02
                        :ARG1-of (o / obvious-01)))))"
if that's what makes them taste so good I hope they grow feet and become a chicktopus,"# ::snt if that's what makes them taste so good I hope they grow feet and become a chicktopus
(h / have-condition-91
      :ARG1 (h2 / hope-01
            :ARG0 (ii / i)
            :ARG1 (a / and
                  :op1 (g / grow-03
                        :ARG1 (t / they
                              :part (f / foot))
                        :ARG2 f)
                  :op2 (b / become-01
                        :ARG1 t
                        :ARG2 (c / chicktopus))))
      :ARG2 (m / make-02
            :ARG0 (t2 / that)
            :ARG1 (t3 / taste-02
                  :ARG1 t
                  :ARG2 (g2 / good-02
                        :ARG1 t
                        :degree (s / so)))))"
the further you delve into this life the harder it is to get out,"# ::snt the further you delve into this life the harder it is to get out
(c / correlate-91
      :ARG1 (m / more
            :ARG3-of (h / have-degree-91
                  :ARG1 (d / delve-01
                        :ARG0 (y / you)
                        :ARG1 (l / life
                              :mod (t / this))
                        :extent (f / further))
                  :ARG2 (h2 / hard-02
                        :ARG1 (g / get-05
                              :ARG1 y
                              :ARG2 (o / out)))))
      :ARG2 (m2 / more
            :ARG3-of (h3 / have-degree-91
                  :ARG1 g
                  :ARG2 h2)))"
and also now8news is a fake news website,"# ::snt and also now8news is a fake news website
(a / and
      :op2 (w / website
            :domain (n / now8news)
            :mod (n2 / news
                  :ARG1-of (f / fake-02))
            :mod (a2 / also)))"
good thing I don't eat the food there,"# ::snt good thing I don't eat the food there
(g / good-02
      :ARG1 (e / eat-01
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (f / food
                  :location (t / there))))"
they're going to fucking burn all the turkeys that's so inhumane,"# ::snt they're going to fucking burn all the turkeys that's so inhumane
(b / burn-01
      :ARG0 (t / they)
      :ARG1 (t2 / turkey
            :mod (a / all))
      :mod (f / fucking)
      :ARG1-of (h / have-degree-91
            :ARG2 (h2 / humane
                  :polarity -)
            :ARG3 (s / so)))"
Jesus,"# ::snt Jesus
(p / person
      :mode expressive
      :name (n / name
            :op1 ""Jesus""))"
Was that site or ?,"# ::snt Was that site or ?
(a / amr-choice
      :op1 (s / site
            :mod (t / that))
      :op2 (e / event
            :mod t))"
We believe you Fast food is very safe...NOT,"# ::snt We believe you Fast food is very safe...NOT
(m / multi-sentence
      :snt1 (b / believe-01
            :ARG0 (w / we)
            :ARG1 (s / safe-01
                  :ARG0 (f / food
                        :ARG1-of (f2 / fast-02))
                  :degree (v / very)))
      :snt2 (h / have-polarity-91
            :ARG2 -))"
,"# ::snt 
(a / amr-empty)"
"Chicken Fried Fake No, the FDA hasn't confiscated mutated chickens from farms belonging to KFC","# ::snt Chicken Fried Fake No, the FDA hasn't confiscated mutated chickens from farms belonging to KFC
(c / confiscate-01
      :polarity -
      :ARG0 (g / government-organization
            :name (n / name
                  :op1 ""FDA""))
      :ARG1 (c2 / chicken
            :ARG1-of (m / mutate-01))
      :ARG2 (f / farm
            :ARG0-of (b / belong-01
                  :ARG1 (o / organization
                        :name (n2 / name
                              :op1 ""KFC""))))
      :concession (f2 / fake-02
            :ARG1 (c3 / chicken)))"
that's the nigga that fought Peter,"# ::snt that's the nigga that fought Peter
(f / fight-01
      :ARG0 (n / nigga
            :domain (t / that))
      :ARG1 (p / person
            :name (n2 / name
                  :op1 ""Peter"")))"
guess so,"# ::snt guess so
(g / guess-01
      :ARG1 (s / so))"
whoa. Did someone make them take it down?,"# ::snt whoa. Did someone make them take it down?
(m / make-02
      :ARG0 (s / someone)
      :ARG1 (t / take-down-22
            :ARG0 (t2 / they)
            :ARG1 (ii / it))
      :polarity (a / amr-unknown)
      :mod (w / whoa
            :mode expressive))"
bro that looks sick.,"# ::snt bro that looks sick.
(p / person
      :name (n / name
            :op1 ""bro"")
      :ARG0-of (l / look-02
            :ARG1 (s / sick-05
                  :ARG1 p)))"
,"# ::snt 
(a / amr-empty)"
look what you just ate.,"# ::snt look what you just ate.
(l / look-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (t / thing
            :ARG1-of (e / eat-01
                  :ARG0 y
                  :time (j / just))))"
is sueing three chinese companies. Supposedly it's not True.,"# ::snt is sueing three chinese companies. Supposedly it's not True.
(m / multi-sentence
      :snt1 (s / sue-02
            :ARG1 (c / company
                  :quant 3
                  :mod (c2 / country
                        :name (n / name
                              :op1 ""China""))))
      :snt2 (t / true-01
            :polarity -
            :ARG1 (ii / it)
            :ARG1-of (s2 / suppose-01)))"
yooo y'all dirty asf,"# ::snt yooo y'all dirty asf
(d / dirty-02
      :ARG1 (y / you
            :mod (a / all))
      :degree (s / so)
      :mod (a2 / asf))"
oh mt god,"# ::snt oh mt god
(p / person
      :name (n / name
            :op1 ""God"")
      :mod (o / oh
            :mode expressive))"
these chickens wouldn't be on the farms for grow out b/c they would be culled at the hatchery this is probably false,"# ::snt these chickens wouldn't be on the farms for grow out b/c they would be culled at the hatchery this is probably false
(a / and
      :op1 (b / be-located-at-91
            :polarity -
            :ARG1 (c / chicken
                  :mod (t / this))
            :ARG2 (f / farm)
            :purpose (g / grow-out-03
                  :ARG1 c))
      :op2 (c2 / cull-01
            :ARG1 c
            :location (h / hatchery))
      :domain (f2 / false
            :mod (p / probable)))"
WOW!,"# ::snt WOW!
(w / wow
      :mode expressive)"
apparently it's false,"# ::snt apparently it's false
(f / false
      :domain (ii / it)
      :ARG1-of (a / appear-02))"
,"# ::snt 
(a / amr-empty)"
bro you're so funny why can't I be like you please teach me your ways,"# ::snt bro you're so funny why can't I be like you please teach me your ways
(s / say-01
      :ARG1 (c / cause-01
            :ARG0 (a / amr-unknown)
            :ARG1 (p / possible-01
                  :polarity -
                  :ARG1 (r / resemble-01
                        :ARG1 (ii / i)
                        :ARG2 (y / you))))
      :ARG2 (p2 / person
            :name (n / name
                  :op1 ""bro"")))"
fucking drawlin,"# ::snt fucking drawlin
(d / drawlin
      :mod (f / fucking
            :mode expressive))"
,"# ::snt 
(a / amr-empty)"
holy shit this is some seriously funked up post natural chicken,"# ::snt holy shit this is some seriously funked up post natural chicken
(f / fun-up-02
      :ARG1 (t / this
            :ARG1-of (p / post-01
                  :ARG2 (p2 / person
                        :name (n / name
                              :op1 ""Natural""
                              :op2 ""Chicken""))))
      :ARG1-of (s / serious-02)
      :mod (s2 / shit
            :mode expressive
            :mod (h / holy))
      :mod (s3 / some))"
real?,"# ::snt real?
(r / real-04
      :polarity (a / amr-unknown))"
