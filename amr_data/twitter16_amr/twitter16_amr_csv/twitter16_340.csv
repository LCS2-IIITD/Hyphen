comment,amr
.,"# ::snt .
(a / amr-empty)"
"if Steve's father stayed around, Steve could have become a suicide bomber!","# ::snt if Steve's father stayed around, Steve could have become a suicide bomber!
(p / possible-01
      :ARG1 (b / become-01
            :ARG1 (p2 / person
                  :name (n / name
                        :op1 ""Steve""))
            :ARG2 (p3 / person
                  :ARG0-of (b2 / bomb-01
                        :mod (s / suicide))))
      :condition (s2 / stay-01
            :ARG1 (p4 / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 p2
                        :ARG2 (f / father)))
            :location (a / around)))"
let them stay in Syria !,"# ::snt let them stay in Syria !
(l / let-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (s / stay-01
            :ARG1 (t / they)
            :location (c / country
                  :name (n / name
                        :op1 ""Syria""))))"
"Steve's father abandoned him &amp; Steve was adopted by American couple, his adoptive parents! Syrians R asset to Syria, let them","# ::snt Steve's father abandoned him &amp; Steve was adopted by American couple, his adoptive parents! Syrians R asset to Syria, let them
(m / multi-sentence
      :snt1 (a / abandon-01
            :ARG0 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (p2 / person
                              :name (n / name
                                    :op1 ""Steve""))
                        :ARG2 (f / father)))
            :ARG1 (a2 / and
                  :op1 p2
                  :op2 (p3 / person
                        :name (n2 / name
                              :op1 ""amp""))))
      :snt2 (a3 / adopt-01
            :ARG0 (c / couple
                  :mod (c2 / country
                        :name (n3 / name
                              :op1 ""America""))
                  :ARG1-of (m2 / mean-01
                        :ARG2 (p4 / person
                              :ARG0-of (h2 / have-rel-role-91
                                    :ARG1 p2
                                    :ARG2 (p5 / parent))
                              :ARG0-of (a4 / adopt-01
                                    :ARG1 p2))))
            :ARG1 p2)
      :snt3 (l / let-01
            :ARG0 (p6 / person
                  :mod (c3 / country
                        :name (n4 / name
                              :op1 ""Syria"")))
            :ARG1 (a5 / asset
                  :beneficiary c3)))"
": ""The father of Steve Jobs, the ground-breaking founder of Apple, was a refugee"" in United Kingdom","# ::snt : ""The father of Steve Jobs, the ground-breaking founder of Apple, was a refugee"" in United Kingdom
(r / refugee
      :location (c / country
            :name (n / name
                  :op1 ""United""
                  :op2 ""Kingdom""))
      :domain (p / person
            :ARG0-of (h / have-rel-role-91
                  :ARG1 (p2 / person
                        :name (n2 / name
                              :op1 ""Steve""
                              :op2 ""Jobs"")
                        :ARG0-of (f / found-01
                              :ARG1 (c2 / company
                                    :name (n3 / name
                                          :op1 ""Apple""))
                              :ARG0-of (b / break-ground-28)))
                  :ARG2 (f2 / father))))"
wikipedia says his father was sent to study to USA and Steve's father's parents were not poor.,"# ::snt wikipedia says his father was sent to study to USA and Steve's father's parents were not poor.
(s / say-01
      :ARG0 (p / publication
            :name (n / name
                  :op1 ""wikipedia""))
      :ARG1 (a / and
            :op1 (s2 / send-03
                  :ARG1 (p2 / person
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 (p3 / person
                                    :name (n2 / name
                                          :op1 ""Steve""))
                              :ARG2 (f / father)))
                  :ARG2 (s3 / study-01
                        :ARG0 p2
                        :location (c / country
                              :name (n3 / name
                                    :op1 ""USA""))))
            :op2 (p4 / poor
                  :polarity -
                  :domain (p5 / person
                        :ARG0-of (h2 / have-rel-role-91
                              :ARG1 p3
                              :ARG2 f)))))"
we need more of these type of refugees to Finland. And we need a more open mind.,"# ::snt we need more of these type of refugees to Finland. And we need a more open mind.
(m / multi-sentence
      :snt1 (n / need-01
            :ARG0 (w / we)
            :ARG1 (r / refugee
                  :mod (t / type
                        :mod (t2 / this))
                  :ARG1-of (h / have-quant-91
                        :ARG3 (m2 / more))
                  :destination (c / country
                        :name (n2 / name
                              :op1 ""Finland""))))
      :snt2 (a / and
            :op2 (n3 / need-01
                  :ARG0 (w2 / we)
                  :ARG1 (m3 / mind
                        :ARG1-of (h2 / have-degree-91
                              :ARG2 (o / open-05
                                    :ARG1 m3)
                              :ARG3 (m4 / more))))))"
,"# ::snt 
(a / amr-empty)"
Refugees made the USA great.,"# ::snt Refugees made the USA great.
(m / make-02
      :ARG0 (r / refugee)
      :ARG1 (g / great
            :domain (c / country
                  :name (n / name
                        :op1 ""USA""))))"
/Earnings Announcement Soon$MXL MSNBuyTarget18-SOROSBuysRead&amproductsrunALLVideoL2,"# ::snt /Earnings Announcement Soon$MXL MSNBuyTarget18-SOROSBuysRead&amproductsrunALLVideoL2
(a / announce-01
      :ARG1 (e / earnings)
      :time (s / soon)
      :ARG3-of (b / buy-01
            :ARG1 (a2 / and
                  :op1 (p / product
                        :name (n / name
                              :op1 ""MXL""))
                  :op2 (p2 / product
                        :name (n2 / name
                              :op1 ""Target18-SOROSBuys""))
                  :op3 (p3 / product
                        :name (n3 / name
                              :op1 ""Read&amproductsrunALLVideoL2"")))))"
/EarningsAnnouncement Soon$MXL MSNBuyTarget18-SOROSBuyRead&amproductsrunALLVideo,"# ::snt /EarningsAnnouncement Soon$MXL MSNBuyTarget18-SOROSBuyRead&amproductsrunALLVideo
(a / announce-01
      :ARG1 (e / earn-01)
      :time (s / soon)
      :ARG3-of (b / buy-01
            :ARG1 (a2 / and
                  :op1 (p / product
                        :name (n / name
                              :op1 ""MXL""))
                  :op2 (p2 / product
                        :name (n2 / name
                              :op1 ""Target18-SOROSBuyRead&amproductsrunALLVideo"")))))"
"the ""biological"" father; the father is the one who loves his children","# ::snt the ""biological"" father; the father is the one who loves his children
(m / multi-sentence
      :snt1 (p / person
            :ARG0-of (h / have-rel-role-91
                  :ARG2 (f / father))
            :mod (b / biologic))
      :snt2 (p2 / person
            :ARG0-of (h2 / have-rel-role-91
                  :ARG1 (p3 / person)
                  :ARG2 (f2 / father))
            :ARG0-of (l / love-01
                  :ARG1 (p4 / person
                        :ARG0-of (h3 / have-rel-role-91
                              :ARG1 p2
                              :ARG2 (c / child))))
            :domain (f3 / father)))"
Louis Farrakhan loved Syria &amp; Lebanon but not Jordan or Israel maybe cause KKK was tramping there getting donations with Al-Q.,"# ::snt Louis Farrakhan loved Syria &amp; Lebanon but not Jordan or Israel maybe cause KKK was tramping there getting donations with Al-Q.
(m / multi-sentence
      :snt1 (l / love-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Louis""
                        :op2 ""Farrakhan""))
            :ARG1 (a / and
                  :op1 (c / country
                        :name (n2 / name
                              :op1 ""Syria""))
                  :op2 (c2 / country
                        :name (n3 / name
                              :op1 ""Lebanon""))))
      :snt2 (p2 / possible-01
            :ARG1 (c3 / cause-01
                  :ARG0 (t / tramp-01
                        :polarity -
                        :ARG0 (o / organization
                              :name (n4 / name
                                    :op1 ""KKK""))
                        :ARG1 (g / get-01
                              :ARG0 o
                              :ARG1 (t2 / thing
                                    :ARG1-of (d / donate-01))
                              :instrument o
                              :name (n5 / name
                                    :op1 ""Al-Q"")))
                  :location (t3 / there))))"
what's the point?,"# ::snt what's the point?
(p / point-03
      :ARG2 (a / amr-unknown))"
so are we expecting 's of apple like companies in yrs time? What's ur argument?,"# ::snt so are we expecting 's of apple like companies in yrs time? What's ur argument?
(m / multi-sentence
      :snt1 (e / expect-01
            :ARG0 (w / we)
            :ARG1 (c / company
                  :ARG1-of (r / resemble-01
                        :ARG2 (a / apple)))
            :time (a2 / after
                  :op1 (n / now)
                  :quant (t / temporal-quantity
                        :quant 1
                        :unit (y / year)))
            :polarity (a3 / amr-unknown))
      :snt2 (a4 / argue-01
            :ARG0 (y2 / you)
            :ARG1 (a5 / amr-unknown)))"
So what? The father of was emigrant from,"# ::snt So what? The father of was emigrant from
(m / multi-sentence
      :snt1 (s / so
            :mod (a / amr-unknown))
      :snt2 (p / person
            :ARG0-of (ii / immigrate-01
                  :ARG2 (c / country
                        :name (n / name
                              :op1 ""America"")))
            :ARG0-of (h / have-rel-role-91
                  :ARG1 (p2 / person)
                  :ARG2 (f / father))))"
was only about Dreams of My Father Obama's Book about Obama not Daddies esp Jobs daddy who could be a Muslim as Obama Daddy.,"# ::snt was only about Dreams of My Father Obama's Book about Obama not Daddies esp Jobs daddy who could be a Muslim as Obama Daddy.
(c / concern-02
      :ARG1 (b / book
            :name (n / name
                  :op1 ""Dreams""
                  :op2 ""of""
                  :op3 ""Obama"")
            :source (p / person
                  :name (n2 / name
                        :op1 ""My""
                        :op2 ""Father""
                        :op3 ""Obama""))
            :topic (p2 / person
                  :polarity -
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (p3 / person
                              :name (n3 / name
                                    :op1 ""Obama""))
                        :ARG2 (d / dad))
                  :mod (r / religious-group
                        :name (n4 / name
                              :op1 ""Muslim""))
                  :ARG1-of (p4 / possible-01)
                  :domain p3
                  :ARG0-of (h2 / have-rel-role-91
                        :ARG1 p3
                        :ARG2 (d2 / dad))))
      :mod (o / only))"
The plight of refugees needs to be addressed and taken serious by all countries around the world. We must not be short sighted,"# ::snt The plight of refugees needs to be addressed and taken serious by all countries around the world. We must not be short sighted
(m / multi-sentence
      :snt1 (o / obligate-01
            :ARG2 (s / sight-01
                  :polarity -
                  :ARG0 (w / we)
                  :ARG1-of (s2 / short-07)))
      :snt2 (n / need-01
            :ARG1 (a / and
                  :op1 (a2 / address-02
                        :ARG0 (c / country
                              :mod (a3 / all)
                              :location (a4 / around
                                    :op1 (w2 / world)))
                        :ARG1 (p / plight
                              :poss (r / refugee)))
                  :op2 (t / take-04
                        :ARG0 c
                        :ARG1 p
                        :ARG2 (s3 / serious-02
                              :ARG1 p)))))"
why specifically Muslim refugees? the logic about solving homelessness in America makes sense; but why not all?,"# ::snt why specifically Muslim refugees? the logic about solving homelessness in America makes sense; but why not all?
(m / multi-sentence
      :snt1 (c / cause-01
            :ARG0 (a / amr-unknown)
            :ARG1 (r / refugee
                  :mod (r2 / religious-group
                        :name (n / name
                              :op1 ""Muslim""))
                  :manner (s / specific-02)))
      :snt2 (s2 / sense-02
            :ARG1 (l / logic
                  :topic (s3 / solve-01
                        :ARG1 (h / homelessness
                              :location (c2 / country
                                    :name (n2 / name
                                          :op1 ""America"")))))
            :concession (c3 / cause-01
                  :ARG0 (a2 / amr-unknown)
                  :ARG1 (a3 / all
                        :polarity -))))"
No America has an ongoing immigration issue with Central America already complicating the politic.,"# ::snt No America has an ongoing immigration issue with Central America already complicating the politic.
(h / have-03
      :polarity -
      :ARG0 (c / country
            :name (n / name
                  :op1 ""America""))
      :ARG1 (ii / issue-02
            :ARG0 (ii2 / immigrate-01)
            :ARG1 c
            :ARG1-of (g / go-on-15)
            :ARG0-of (c2 / complicate-01
                  :ARG1 (p / politic)
                  :time (a / already))))"
very nice,"# ::snt very nice
(n / nice-01
      :degree (v / very))"
klik dan main games event mini games trbaru berhadiah pluhan juta hanya di,"# ::snt klik dan main games event mini games trbaru berhadiah pluhan juta hanya di
(m / multi-sentence
      :snt1 (a / and
            :op1 (g / game
                  :mod (m2 / main))
            :op2 (g2 / game
                  :mod (m3 / mini)))
      :snt2 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (b / bahhadiah
                  :ARG0-of (p / pluhan-01
                        :ARG1 (j / juta)))
            :ARG2 (p2 / person
                  :name (n / name
                        :op1 ""Trabu"")))
      :snt3 (h / hanya
            :mode expressive))"
that was another era-your agenda be showing,"# ::snt that was another era-your agenda be showing
(e / era
      :mod (a / another)
      :domain (t / that)
      :ARG0-of (s / show-01
            :ARG1 (a2 / agenda
                  :poss (y / you))))"
Good one less terrorist to kill,"# ::snt Good one less terrorist to kill
(k / kill-01
      :ARG1 (t / terrorist
            :quant (l / less
                  :quant 1)
            :ARG1-of (g / good-02)))"
And?,"# ::snt And?
(a / and
      :polarity (a2 / amr-unknown))"
