comment,amr
"it says Microsoft, then shows a Sony controller","# ::snt it says Microsoft, then shows a Sony controller
(a / and
      :op1 (s / say-01
            :ARG0 (ii / it)
            :ARG1 (c / company
                  :name (n / name
                        :op1 ""Microsoft"")))
      :op2 (s2 / show-01
            :ARG0 ii
            :ARG1 (c2 / controller
                  :mod (c3 / company
                        :name (n2 / name
                              :op1 ""Sony"")))
            :time (t / then)))"
and says gamecube,"# ::snt and says gamecube
(a / and
      :op2 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Gamecube""))))"
"that's from sony, not microsoft, keep trying though.","# ::snt that's from sony, not microsoft, keep trying though.
(c / contrast-01
      :ARG1 (b / be-from-91
            :ARG1 (t / that)
            :ARG2 (c2 / company
                  :name (n / name
                        :op1 ""Sony"")))
      :ARG2 (b2 / be-from-91
            :polarity -
            :ARG1 t
            :ARG2 (c3 / company
                  :name (n2 / name
                        :op1 ""Microsoft"")))
      :ARG0-of (c4 / cause-01
            :ARG1 (k / keep-02
                  :ARG1 (t2 / try-01
                        :ARG1 t))))"
no correlation?,"# ::snt no correlation?
(c / correlate-01
      :polarity -
      :polarity (a / amr-unknown))"
really? Cause thats a playstation controller and Nintendo makes gamecube,"# ::snt really? Cause thats a playstation controller and Nintendo makes gamecube
(m / multi-sentence
      :snt1 (r / real-04
            :polarity (a / amr-unknown))
      :snt2 (c / cause-01
            :ARG0 (a2 / and
                  :op1 (t / thing
                        :ARG0-of (c2 / control-01
                              :ARG1 (p / playstation))
                        :domain (t2 / that))
                  :op2 (m2 / make-01
                        :ARG0 (c3 / company
                              :name (n / name
                                    :op1 ""Nintendo""))
                        :ARG1 (g / gamecube)))))"
thats sony lmao,"# ::snt thats sony lmao
(s / say-01
      :ARG1 (t / that)
      :ARG2 (p / person
            :name (n / name
                  :op1 ""Sony""
                  :op2 ""Lmao"")))"
"I see what you did there. Levels, impressive.","# ::snt I see what you did there. Levels, impressive.
(m / multi-sentence
      :snt1 (s / see-01
            :ARG0 (ii / i)
            :ARG1 (t / thing
                  :ARG1-of (d / do-02
                        :ARG0 (y / you)
                        :location (t2 / there))))
      :snt2 (ii2 / impress-01
            :ARG0 (l / level)))"
"Gamecube was by nintendo, Microsoft has the xbox, and that's a playstation controller.","# ::snt Gamecube was by nintendo, Microsoft has the xbox, and that's a playstation controller.
(a / and
      :op1 (b / byline-91
            :ARG0 (c / company
                  :name (n / name
                        :op1 ""Nintendo""))
            :ARG1 (p / product
                  :name (n2 / name
                        :op1 ""Gamecube"")))
      :op2 (h / have-03
            :ARG0 (c2 / company
                  :name (n3 / name
                        :op1 ""Microsoft""))
            :ARG1 (p2 / product
                  :name (n4 / name
                        :op1 ""Xbox"")
                  :ARG0-of (c3 / control-01
                        :ARG1 (p3 / playstation))))
      :op3 (t / thing
            :domain p
            :ARG0-of c3
            :ARG1 p3))"
PlayStation ?,"# ::snt PlayStation ?
(c / company
      :name (n / name
            :op1 ""PlayStation"")
      :polarity (a / amr-unknown))"
,"# ::snt 
(a / amr-empty)"
it says GameCube but has a PS3 controller,"# ::snt it says GameCube but has a PS3 controller
(c / contrast-01
      :ARG1 (s / say-01
            :ARG0 (ii / it)
            :ARG1 (g / game
                  :name (n / name
                        :op1 ""Game""
                        :op2 ""Cube"")))
      :ARG2 (h / have-03
            :ARG0 ii
            :ARG1 (t / thing
                  :ARG0-of (c2 / control-01)
                  :mod (m / monetary-quantity
                        :quant 3
                        :unit (p / pound)))))"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
There are so many things wrong with this post that I'm not sure where to begin,"# ::snt There are so many things wrong with this post that I'm not sure where to begin
(w / wrong-02
      :ARG1 (t / thing
            :quant (m / many
                  :mod (s / so)))
      :ARG2 t
      :ARG1-of (p / post-01
            :mod (t2 / this))
      :ARG0-of (c / cause-01
            :ARG1 (s2 / sure-02
                  :polarity -
                  :ARG0 (ii / i)
                  :ARG1 (l / location
                        :ARG2-of (b / begin-01
                              :ARG0 ii)))))"
tipu lah lepasni aku takkan sentuhhh huarghh,"# ::snt tipu lah lepasni aku takkan sentuhhh huarghh
(t / tipu
      :mod (s / string-entity
            :value ""lepasni aku takkan"")
      :ARG1-of (s2 / send-01
            :mod (h / huarghh
                  :mode expressive)))"
Holy. Thats a lot of incorrect company matching.,"# ::snt Holy. Thats a lot of incorrect company matching.
(m / multi-sentence
      :snt1 (h / holy)
      :snt2 (m2 / match-01
            :ARG1 (c / company)
            :ARG1-of (c2 / correct-02
                  :polarity -)
            :quant (l / lot)
            :domain (t / that)))"
that would explain why XD;;,"# ::snt that would explain why XD;;
(e / explain-01
      :ARG0 (t / that)
      :ARG1 (t2 / thing
            :ARG0-of (c / cause-01))
      :mod (e2 / emoticon
            :value "" XD""))"
"Yes, and they don't actually use dog noses either XD","# ::snt Yes, and they don't actually use dog noses either XD
(a / and
      :op2 (u / use-01
            :polarity -
            :ARG0 (t / they)
            :ARG1 (n / nose
                  :part-of (d / dog))
            :mod (e / either)
            :ARG1-of (a2 / actual-02)
            :mod (y / yeah
                  :mode expressive)))"
"......... oh......... how embarrassing, i didn't noticed it was spelled ""worst"" instead of ""worth"" XD;","# ::snt ......... oh......... how embarrassing, i didn't noticed it was spelled ""worst"" instead of ""worth"" XD;
(n / notice-01
      :polarity -
      :ARG0 (ii / i)
      :ARG1 (s / spell-01
            :ARG1 (ii2 / it)
            :ARG2 (b / bad-07
                  :ARG2-of (h / have-degree-91
                        :ARG1 ii2
                        :ARG3 (m / most)))
            :ARG1-of (ii3 / instead-of-91
                  :ARG2 (w / worth-02
                        :ARG2 b)))
      :ARG0-of (e / embarrass-01
            :degree (s2 / so))
      :mod (o / oh
            :mode expressive))"
"Allaze... it's called ""worst fact"" for a reason.","# ::snt Allaze... it's called ""worst fact"" for a reason.
(s / say-01
      :ARG1 (c / call-01
            :ARG1 (ii / it)
            :ARG2 (f / fact
                  :ARG1-of (h / have-degree-91
                        :ARG2 (b / bad-07
                              :ARG1 f)
                        :ARG3 (m / most)))
            :ARG1-of (c2 / cause-01
                  :ARG0 (r / reason)))
      :ARG2 (p / person
            :name (n / name
                  :op1 ""Allaze"")))"
you mean Sony.... considering that you're using the DualShock from ...,"# ::snt you mean Sony.... considering that you're using the DualShock from ...
(m / mean-01
      :ARG0 (y / you)
      :ARG2 (c / company
            :name (n / name
                  :op1 ""Sony""))
      :condition (c2 / consider-02
            :ARG1 (u / use-01
                  :ARG0 y
                  :ARG1 (p / product
                        :name (n2 / name
                              :op1 ""DualShock"")
                        :source-of y))))"
is it real or just a joke ?!,"# ::snt is it real or just a joke ?!
(a / amr-choice
      :op1 (r / real-04
            :ARG1 (ii / it))
      :op2 (j / joke-01
            :ARG2 ii
            :mod (j2 / just)))"
j'en tais sr,"# ::snt j'en tais sr
(p / person
      :name (n / name
            :op1 ""J'en""
            :op2 ""tais""
            :op3 "" sr""))"
lol. noooo they don't u derp,"# ::snt lol. noooo they don't u derp
(a / and
      :op1 (l / laugh-01
            :mode expressive
            :ARG0 (ii / i)
            :manner (l2 / loud))
      :op2 (d / do-02
            :polarity -
            :ARG0 (t / they)
            :ARG1-of (r / request-confirmation-91
                  :ARG0 ii)))"
this fact talks about Microsoft using Sony product,"# ::snt this fact talks about Microsoft using Sony product
(t / talk-01
      :ARG0 (f / fact
            :mod (t2 / this))
      :ARG1 (u / use-01
            :ARG0 (c / company
                  :name (n / name
                        :op1 ""Microsoft""))
            :ARG1 (p / product
                  :mod (c2 / company
                        :name (n2 / name
                              :op1 ""Sony"")))))"
first of all nintendo invented gamecube and second its not a gamecube its a playstation and third its bullshit,"# ::snt first of all nintendo invented gamecube and second its not a gamecube its a playstation and third its bullshit
(a / and
      :op1 (ii / invent-01
            :ARG0 (c / company
                  :name (n / name
                        :op1 ""Nintendo""))
            :ARG1 (g / game
                  :name (n2 / name
                        :op1 ""Game""
                        :op2 ""Cube""))
            :ord (o / ordinal-entity
                  :value 1
                  :range (a2 / all)))
      :op2 (s / station
            :purpose (p / play-01)
            :domain g
            :polarity -
            :ord (o2 / ordinal-entity
                  :value 2))
      :op3 (b / bullshit-01
            :li 3
            :ARG0 g))"
Go home you're drunk,"# ::snt Go home you're drunk
(g / go-02
      :mode imperative
      :ARG0 (y / you)
      :ARG4 (h / home)
      :condition (d / drunk
            :domain y))"
Te jodes.,"# ::snt Te jodes.
(j / jodes)"
that's sony lmao,"# ::snt that's sony lmao
(o / ony
      :domain (t / that)
      :ARG2-of (l / laugh-01
            :ARG0 (ii / i
                  :part (a / ass))
            :manner (l2 / loud)))"
there is so much wrong with that caption. Nice try,"# ::snt there is so much wrong with that caption. Nice try
(m / multi-sentence
      :snt1 (w / wrong-02
            :ARG1 (m2 / much
                  :degree (s / so))
            :ARG2 (t / thing
                  :ARG2-of (c / caption-01)
                  :mod (t2 / that)))
      :snt2 (t3 / try-01
            :ARG1-of (n / nice-01)))"
sony*,"# ::snt sony*
(s / sony)"
what if it was true,"# ::snt what if it was true
(h / have-condition-91
      :ARG1 (a / amr-unknown)
      :ARG2 (t / true-01
            :ARG1 (ii / it)))"
They should use human scrotum,"# ::snt They should use human scrotum
(r / recommend-01
      :ARG1 (u / use-01
            :ARG0 (t / they)
            :ARG1 (s / scrotum
                  :mod (h / human))))"
im pretty sure sony makes those,"# ::snt im pretty sure sony makes those
(s / sure-02
      :ARG0 (ii / i)
      :ARG1 (m / make-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Sony""))
            :ARG1 (t / that))
      :degree (p2 / pretty))"
. Microsoft don't make Sony products,"# ::snt . Microsoft don't make Sony products
(m / make-01
      :polarity -
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Microsoft""))
      :ARG1 (p / product
            :poss (c2 / company
                  :name (n2 / name
                        :op1 ""Sony""))))"
. Microsoft don't make Gamecubes2. The pictures shown are Sony Playstation controllers3. Microsoft don't make Sony prod,"# ::snt . Microsoft don't make Gamecubes2. The pictures shown are Sony Playstation controllers3. Microsoft don't make Sony prod
(m / multi-sentence
      :snt1 (m2 / make-01
            :polarity -
            :ARG0 (c / company
                  :name (n / name
                        :op1 ""Microsoft""))
            :ARG1 (p / product
                  :name (n2 / name
                        :op1 ""Gamecubes2"")))
      :snt2 (s / show-01
            :ARG1 (p2 / picture
                  :consist-of (p3 / product
                        :name (n3 / name
                              :op1 ""Sony""
                              :op2 "" Playstation""
                              :op3 ""Controllers""))
                  :ord (o / ordinal-entity
                        :value 3)))
      :snt3 (m3 / make-01
            :polarity -
            :ARG0 (c2 / company
                  :name (n4 / name
                        :op1 ""Microsoft""))
            :ARG1 (p4 / prod-01
                  :ARG0 c2)))"
absolutely not,"# ::snt absolutely not
(h / have-polarity-91
      :ARG2 -
      :degree (a / absolute))"
dark!,"# ::snt dark!
(d / dark-03)"
,"# ::snt 
(a / amr-empty)"
"the more i read this the more and more i just go ""...what?""","# ::snt the more i read this the more and more i just go ""...what?""
(c / correlate-91
      :ARG1 (m / more
            :ARG3-of (h / have-quant-91
                  :ARG1 (r / read-01
                        :ARG0 (ii / i)
                        :ARG1 (t / this))))
      :ARG2 (m2 / more
            :ARG3-of h
            :ARG1 (g / go-05
                  :ARG0 ii
                  :ARG1 (a / amr-unknown)
                  :mod (j / just))))"
,"# ::snt 
(a / amr-empty)"
You know how to rile pedants!,"# ::snt You know how to rile pedants!
(k / know-03
      :ARG0 (y / you)
      :ARG1 (r / rant-01
            :ARG3 (p / pedant)))"
I. Did. Not. Know. That.,"# ::snt I. Did. Not. Know. That.
(a / and
      :op1 (d / do-02
            :ARG0 (ii / i))
      :op2 (k / know-01
            :polarity -
            :ARG0 ii)
      :op3 (t / that))"
Except that's a Sony controller... I'm skeptical at this fakery.,"# ::snt Except that's a Sony controller... I'm skeptical at this fakery.
(m / multi-sentence
      :snt1 (e / except-01
            :ARG1 (t / thing
                  :ARG0-of (c / control-01)
                  :poss (c2 / company
                        :name (n / name
                              :op1 ""Sony""))
                  :domain (t2 / that)))
      :snt2 (s / skeptical
            :domain (ii / i)
            :topic (f / fakery
                  :mod (t3 / this))))"
the people who don't realize the disconnect between Microsoft GameCube. I need a drink.,"# ::snt the people who don't realize the disconnect between Microsoft GameCube. I need a drink.
(m / multi-sentence
      :snt1 (p / person
            :ARG0-of (r / realize-01
                  :polarity -
                  :ARG1 (d / disconnect-01
                        :ARG1 (p2 / product
                              :name (n / name
                                    :op1 ""Microsoft""
                                    :op2 ""GameCube""))
                        :ARG2 p2)))
      :snt2 (n2 / need-01
            :ARG0 (ii / i)
            :ARG1 (d2 / drink)))"
are you % certain,"# ::snt are you % certain
(c / certain
      :polarity (a / amr-unknown)
      :domain (y / you))"
% nailed it. This fact is too funny.,"# ::snt % nailed it. This fact is too funny.
(m / multi-sentence
      :snt1 (n / nail-01
            :ARG0 (p / percentage-entity
                  :value 90)
            :ARG1 (ii / it))
      :snt2 (h / have-degree-91
            :ARG1 (f / fact
                  :mod (t / this))
            :ARG2 (f2 / funny-02
                  :ARG1 f)
            :ARG3 (t2 / too)))"
Damn' it's Sony not Microsoft !!!,"# ::snt Damn' it's Sony not Microsoft !!!
(c / contrast-01
      :ARG1 (c2 / company
            :name (n / name
                  :op1 ""Sony""))
      :ARG2 (c3 / company
            :polarity -
            :name (n2 / name
                  :op1 ""Microsoft""))
      :mod (d / damn
            :mode expressive))"
O H. M Y. G O S H.,"# ::snt O H. M Y. G O S H.
(a / and
      :op1 (p / person
            :name (n / name
                  :op1 ""O""
                  :op2 ""H.""))
      :op2 (p2 / person
            :name (n2 / name
                  :op1 ""Y.""
                  :op2 ""G""))
      :op3 (p3 / person
            :name (n3 / name
                  :op1 ""H"")))"
The pictures doesn't show a Microsoft controller but a Sony one and gamecube controller are from Nintento ^^,"# ::snt The pictures doesn't show a Microsoft controller but a Sony one and gamecube controller are from Nintento ^^
(c / contrast-01
      :ARG1 (s / show-01
            :polarity -
            :ARG0 (p / picture)
            :ARG1 (c2 / controller
                  :mod (c3 / company
                        :name (n / name
                              :op1 ""Microsoft""))))
      :ARG2 (s2 / show-01
            :ARG0 p
            :ARG1 (a / and
                  :op1 (c4 / controller
                        :mod (c5 / company
                              :name (n2 / name
                                    :op1 ""Sony""))
                        :source (c6 / company
                              :name (n3 / name
                                    :op1 ""Nintento"")))
                  :op2 (c7 / controller
                        :mod (g / game)
                        :source c6))))"
