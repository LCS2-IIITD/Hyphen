comment,amr
: Cops who arrested Dylann Roof treated him to a Burger King :/,"# ::snt : Cops who arrested Dylann Roof treated him to a Burger King :/
(t / treat-01
      :ARG0 (c / cop
            :ARG0-of (a / arrest-01
                  :ARG1 (p / person
                        :name (n / name
                              :op1 ""Dylann""
                              :op2 ""Roof""))))
      :ARG1 p
      :ARG2 (c2 / company
            :name (n2 / name
                  :op1 ""Burger""
                  :op2 ""King"")))"
I'm sorry I don't care America is a very racist place point blank period! This is crazy burger king?? For killing people! Wow,"# ::snt I'm sorry I don't care America is a very racist place point blank period! This is crazy burger king?? For killing people! Wow
(m / multi-sentence
      :snt1 (s / sorry-01
            :polarity -
            :ARG1 (ii / i)
            :ARG2 (c / care-01
                  :ARG0 ii
                  :ARG1 (p / place
                        :mod (r / racist
                              :degree (v / very))
                        :domain (c2 / country
                              :name (n / name
                                    :op1 ""America""))
                        :mod (p2 / period
                              :mod (p3 / point
                                    :mod (b / blank))))))
      :snt2 (c3 / crazy-03
            :ARG1 (p4 / person
                  :mod (t / this)
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (b2 / burger)
                        :ARG2 (k / king)))
            :polarity (a / amr-unknown)
            :ARG1-of (c4 / cause-01
                  :ARG0 (k2 / kill-01
                        :ARG0 p4
                        :ARG1 (p5 / person))))
      :snt3 (w / wow
            :mode expressive))"
I can't believe this!,"# ::snt I can't believe this!
(p / possible-01
      :polarity -
      :ARG1 (b / believe-01
            :ARG0 (ii / i)
            :ARG1 (t / this)))"
": Cops who arrested Dylann Roof treated him to a Burger King , Has to be bants","# ::snt : Cops who arrested Dylann Roof treated him to a Burger King , Has to be bants
(ii / infer-01
      :ARG1 (b / bant
            :domain (c / cop
                  :ARG0-of (a / arrest-01
                        :ARG1 (p / person
                              :name (n / name
                                    :op1 ""Dylann""
                                    :op2 ""Roof"")))
                  :ARG0-of (t / treat-01
                        :ARG1 p
                        :ARG2 (c2 / company
                              :name (n2 / name
                                    :op1 ""Burger""
                                    :op2 ""King""))))))"
"Blur murderer's face. Isn't newsworthy, doesn't add to story. You're giving him glory","# ::snt Blur murderer's face. Isn't newsworthy, doesn't add to story. You're giving him glory
(m / multi-sentence
      :snt1 (f / face
            :part-of (p / person
                  :ARG0-of (m2 / murder-01)
                  :mod (b / blur)))
      :snt2 (a / and
            :op1 (n / newsworthy
                  :polarity -)
            :op2 (a2 / add-02
                  :polarity -
                  :ARG2 (s / story)))
      :snt3 (g / give-01
            :ARG0 (y / you)
            :ARG1 (g2 / glory)
            :ARG2 (h / he)))"
but who does he work for ?,"# ::snt but who does he work for ?
(c / contrast-01
      :ARG2 (w / work-01
            :ARG0 (h / he)
            :ARG2 (a / amr-unknown)))"
wth,"# ::snt wth
(t / thing
      :mod (l / last))"
Would be surprised if he hadn't given police have statutory duty to feed prisoners. &lthrug&gt; Non story.,"# ::snt Would be surprised if he hadn't given police have statutory duty to feed prisoners. &lthrug&gt; Non story.
(m / multi-sentence
      :snt1 (s / surprise-01
            :ARG0 (h / have-condition-91
                  :ARG1 (g / give-01
                        :polarity -
                        :ARG0 (h2 / he)
                        :ARG1 (d / duty
                              :mod (l / law)
                              :purpose (f / feed-01
                                    :ARG0 (p / police
                                          :ARG2 (p2 / person
                                                :ARG1-of (ii / imprison-01)))))
                        :ARG2 p)))
      :snt2 (s2 / story
            :polarity -))"
One serving of justice coming right up...,"# ::snt One serving of justice coming right up...
(c / come-up-13
      :ARG1 (s / serve-01
            :quant 1
            :ARG1 (j / justice))
      :mod (r / right))"
what makes one humane hate so much when he is in a room full of love!,"# ::snt what makes one humane hate so much when he is in a room full of love!
(m / make-02
      :ARG0 (a / amr-unknown)
      :ARG1 (h / hate-01
            :ARG0 (o / one)
            :mod (h2 / humane)
            :degree (m2 / much
                  :degree (s / so)))
      :condition (b / be-located-at-91
            :ARG1 o
            :ARG2 (r / room
                  :ARG1-of (f / full-09
                        :ARG2 (l / love-01)))))"
"Hi, I invite you to get Burger King lunch (worth $1000) for a year! Take your chance now at . Good luck!","# ::snt Hi, I invite you to get Burger King lunch (worth $1000) for a year! Take your chance now at . Good luck!
(m / multi-sentence
      :snt1 (a / and
            :op1 (h / hi)
            :op2 (ii / invite-01
                  :ARG0 (ii2 / i)
                  :ARG1 (y / you)
                  :ARG2 (g / get-01
                        :ARG0 y
                        :ARG1 (l / lunch
                              :source (c / company
                                    :name (n / name
                                          :op1 ""Burger""
                                          :op2 ""King""))
                              :ARG1-of (w / worth-01
                                    :ARG2 (m2 / monetary-quantity
                                          :quant 1000
                                          :unit (d / dollar))))
                        :duration (t / temporal-quantity
                              :quant 1
                              :unit (y2 / year)))))
      :snt2 (t2 / take-01
            :mode imperative
            :ARG0 y
            :ARG1 (c2 / chance-02
                  :ARG0 y
                  :ARG1 l)
            :time (n2 / now))
      :snt3 (l2 / luck
            :ARG1-of (g2 / good-02)))"
"He needed a few ""waffles"" not Burger King.","# ::snt He needed a few ""waffles"" not Burger King.
(c / contrast-01
      :ARG1 (n / need-01
            :ARG0 (h / he)
            :ARG1 (w / wafer
                  :quant (f / few)))
      :ARG2 (n2 / need-01
            :polarity -
            :ARG0 h
            :ARG1 (c2 / company
                  :name (n3 / name
                        :op1 ""Burger""
                        :op2 ""King""))))"
"not at all what I said, but okay","# ::snt not at all what I said, but okay
(c / contrast-01
      :ARG1 (t / thing
            :ARG1-of (s / say-01
                  :ARG0 (ii / i))
            :mod (a / at-all
                  :polarity -))
      :ARG2 (o / okay-04))"
I don't think it's a joke,"# ::snt I don't think it's a joke
(t / think-01
      :polarity -
      :ARG0 (ii / i)
      :ARG1 (j / joke-01
            :ARG2 (ii2 / it)))"
amazing what happens when you don't get into a firefight with the police or resist arrest,"# ::snt amazing what happens when you don't get into a firefight with the police or resist arrest
(a / amaze-01
      :ARG0 (e / event
            :condition (o / or
                  :op1 (g / get-05
                        :polarity -
                        :ARG1 (y / you)
                        :ARG2 (f / fight-01
                              :ARG0 y
                              :ARG1 (p / police)
                              :mod (f2 / fire)))
                  :op2 (r / resist-01
                        :polarity -
                        :ARG0 y
                        :ARG1 (a2 / arrest-01
                              :ARG1 y)))))"
indeed,"# ::snt indeed
(ii / indeed)"
"...treated him like every other arrested person, might be a more accurate but less sensational headline.","# ::snt ...treated him like every other arrested person, might be a more accurate but less sensational headline.
(p / possible-01
      :ARG1 (h / have-degree-91
            :ARG1 (t / treat-01
                  :ARG1 (h2 / he)
                  :ARG2 (r / resemble-01
                        :ARG2 (p2 / person
                              :mod (e / every)
                              :mod (o / other)
                              :ARG1-of (a / arrest-01))))
            :ARG2 (a2 / accurate)
            :ARG3 (m / more)
            :ARG4 (h3 / headline
                  :ARG1-of (h4 / have-degree-91
                        :ARG2 (s / sensational)
                        :ARG3 (l / less)))))"
Did they take him to a spa ? no ? police brutality knows no limits !,"# ::snt Did they take him to a spa ? no ? police brutality knows no limits !
(m / multi-sentence
      :snt1 (t / take-01
            :polarity (a / amr-unknown)
            :ARG0 (t2 / they)
            :ARG1 (h / he)
            :ARG3 (s / spa))
      :snt2 (k / know-02
            :ARG0 (b / brutalize-01
                  :ARG0 (p / police))
            :ARG1 (l / limit-01
                  :polarity -)))"
Exposing fault lines we thought were long buried.Read comments v. interesting,"# ::snt Exposing fault lines we thought were long buried.Read comments v. interesting
(m / multi-sentence
      :snt1 (e / expose-01
            :ARG1 (l / line
                  :mod (f / fault)
                  :ARG1-of (b / bury-01
                        :ARG1-of (l2 / long-03)
                        :ARG1-of (t / think-01
                              :ARG0 (w / we)))))
      :snt2 (r / read-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (v / versus
                  :op1 (c / comment-01)
                  :op2 (ii / interest-01))))"
disturbing... Just about every aspect of this tragedy,"# ::snt disturbing... Just about every aspect of this tragedy
(a / and
      :op1 (d / disturb-01)
      :op2 (a2 / aspect
            :mod (e / every
                  :mod (j / just))
            :part-of (t / tragedy
                  :mod (t2 / this))))"
I am sure this occurs universally for every suspect apprehended though. WTF?,"# ::snt I am sure this occurs universally for every suspect apprehended though. WTF?
(m / multi-sentence
      :snt1 (s / sure-02
            :ARG0 (ii / i)
            :ARG1 (b / be-temporally-at-91
                  :ARG1 (t / this)
                  :ARG2 (u / universally)
                  :beneficiary (p / person
                        :ARG2-of (s2 / suspect-01)
                        :mod (e / every)
                        :ARG1-of (a / apprehend-01)))
            :ARG1-of (h / have-concession-91))
      :snt2 (a2 / amr-unknown
            :mod (f / fuck
                  :mode expressive)))"
what did the victims get to eat before THAT shot them NOTHING,"# ::snt what did the victims get to eat before THAT shot them NOTHING
(g / get-22
      :ARG0 (v / victim)
      :ARG1 (e / eat-01
            :ARG0 v
            :ARG1 (a / amr-unknown)
            :time (b / before
                  :op1 (s / shoot-01
                        :ARG0 (t / that)
                        :ARG1 v
                        :ARG2 (n / nothing)))))"
do they do that wen they arrest black murderers?,"# ::snt do they do that wen they arrest black murderers?
(d / do-02
      :ARG0 (t / they)
      :ARG1 (t2 / that)
      :polarity (a / amr-unknown)
      :condition (a2 / arrest-01
            :ARG0 t
            :ARG1 (p / person
                  :ARG0-of (m / murder-01)
                  :ARG1-of (b / black-05))))"
This is insane!,"# ::snt This is insane!
(ii / insane
      :domain (t / this))"
""": Cops who arrested Dylann Roof treated him to a Burger King ""","# ::snt "": Cops who arrested Dylann Roof treated him to a Burger King ""
(t / treat-01
      :ARG0 (c / cop
            :ARG0-of (a / arrest-01
                  :ARG1 (p / person
                        :name (n / name
                              :op1 ""Dylann""
                              :op2 ""Roof""))))
      :ARG1 p
      :ARG2 (c2 / company
            :name (n2 / name
                  :op1 ""Burger""
                  :op2 ""King"")))"
I hope they poured him a glass of wine and treated him to some ice cream as well.,"# ::snt I hope they poured him a glass of wine and treated him to some ice cream as well.
(h / hope-01
      :ARG0 (ii / i)
      :ARG1 (a / and
            :op1 (p / pour-01
                  :ARG0 (t / they)
                  :ARG1 (w / wine
                        :quant (v / volume-quantity
                              :quant 1
                              :unit (g / glass)))
                  :ARG2 (h2 / he))
            :op2 (t2 / treat-01
                  :ARG0 t
                  :ARG1 h2
                  :ARG2 (ii2 / ice
                        :quant (s / some))
                  :mod (a2 / as-well))))"
keep him fit and well for the big drop or light up,"# ::snt keep him fit and well for the big drop or light up
(o / or
      :op1 (k / keep-02
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (f / fit-05
                  :ARG1 (h / he)
                  :ARG1-of (w / well-09)
                  :purpose (d / drop-01
                        :mod (b / big))))
      :op2 (l / light-up-08
            :mode imperative
            :ARG0 y
            :ARG1 h))"
,"# ::snt 
(a / amr-empty)"
joke? I hope so.,"# ::snt joke? I hope so.
(h / hope-01
      :polarity (a / amr-unknown)
      :ARG0 (ii / i)
      :ARG1 (s / so))"
I would be more upset if he got carribean food tbh,"# ::snt I would be more upset if he got carribean food tbh
(u / upset-01
      :ARG0 (g / get-01
            :ARG0 (h / he)
            :ARG1 (f / food
                  :source (c / country
                        :name (n / name
                              :op1 ""Carribean""))))
      :ARG1 (ii / i)
      :condition (h2 / honest-01
            :ARG0 ii)
      :ARG2-of (h3 / have-degree-91
            :ARG1 ii
            :ARG3 (m / more)))"
Ridiculous,"# ::snt Ridiculous
(r / ridiculous-02)"
punishment before trial.,"# ::snt punishment before trial.
(p / punish-01
      :time (b / before
            :op1 (t / try-02)))"
How dare they,"# ::snt How dare they
(d / dare-01
      :ARG1 (t / they)
      :manner (a / amr-unknown))"
