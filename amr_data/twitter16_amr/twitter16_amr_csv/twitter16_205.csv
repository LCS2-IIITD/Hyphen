comment,amr
"Hey, if that helped get a confession out of the murderous skunk faster, I got no problem with it.","# ::snt Hey, if that helped get a confession out of the murderous skunk faster, I got no problem with it.
(h / have-condition-91
      :ARG1 (h2 / have-03
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (p / problem
                  :topic (ii2 / it)))
      :ARG2 (h3 / help-01
            :ARG0 (t / that)
            :ARG1 (g / get-out-07
                  :ARG0 t
                  :ARG1 (s / skunk
                        :ARG0-of (m / murder-01))
                  :ARG1-of (h4 / have-degree-91
                        :ARG2 (f / fast-02
                              :ARG1 g)
                        :ARG3 (m2 / more))))
      :mod (h5 / hey
            :mode expressive))"
"private plane! Should have thrown him in the rear of a police van and let him roll around, maybe broken his neck by mistake","# ::snt private plane! Should have thrown him in the rear of a police van and let him roll around, maybe broken his neck by mistake
(m / multi-sentence
      :snt1 (p / plane
            :ARG1-of (p2 / private-03))
      :snt2 (r / recommend-01
            :ARG1 (a / and
                  :op1 (t / throw-01
                        :ARG1 (h / he
                              :part (n / neck))
                        :ARG2 (r2 / rear
                              :part-of (v / van
                                    :mod (p3 / police))))
                  :op2 (l / let-01
                        :ARG1 (r3 / roll-01
                              :ARG1 h
                              :direction (a2 / around)))
                  :op3 (b / break-01
                        :ARG0 h
                        :ARG1 n
                        :ARG1-of (p4 / possible-01)
                        :ARG1-of (m2 / mistake-02)))))"
Although BurgerKing,"# ::snt Although BurgerKing
(h / have-concession-91
      :ARG1 (c / company
            :name (n / name
                  :op1 ""BurgerKing"")))"
"Don't think they had any mush, but get your point.","# ::snt Don't think they had any mush, but get your point.
(c / contrast-01
      :ARG1 (t / think-01
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (h / have-03
                  :ARG0 (t2 / they)
                  :ARG1 (m / mush
                        :mod (a / any))))
      :ARG2 (g / get-30
            :ARG0 (y / you)
            :ARG1 (p / point-04
                  :ARG0 y)))"
Is this a plane? First class? Is Zimmerman there to comfort him?,"# ::snt Is this a plane? First class? Is Zimmerman there to comfort him?
(m / multi-sentence
      :snt1 (p / plane
            :domain (t / this)
            :polarity (a / amr-unknown))
      :snt2 (c / class
            :ord (o / ordinal-entity
                  :value 1))
      :snt3 (h / have-purpose-91
            :ARG1 (p2 / person
                  :name (n / name
                        :op1 ""Zimmerman""))
            :ARG2 (c2 / comfort-01
                  :ARG0 p2
                  :ARG1 (h2 / he))
            :polarity (a2 / amr-unknown)))"
"""asset"" I think the operative word is ""bought their 'asset' food""... It is already hitting the fan~","# ::snt ""asset"" I think the operative word is ""bought their 'asset' food""... It is already hitting the fan~
(m / multi-sentence
      :snt1 (t / think-01
            :ARG0 (ii / i)
            :ARG1 (w / word-01
                  :ARG1 (b / buy-01
                        :ARG1 (f / food
                              :poss (t2 / they)
                              :ARG1-of (a / asset-01)))
                  :ARG1-of (o / operative-02)))
      :snt2 (h / hit-01
            :ARG0 (ii2 / it)
            :ARG1 (f2 / fan)
            :time (a2 / already)))"
"Murdered ppl, a y/o had presence of mind to play dead. If wasn't caught Jews, traitors?","# ::snt Murdered ppl, a y/o had presence of mind to play dead. If wasn't caught Jews, traitors?
(m / multi-sentence
      :snt1 (h / have-03
            :ARG0 (a / and
                  :op1 (p / person
                        :ARG1-of (m2 / murder-01))
                  :op2 (p2 / person
                        :ARG0-of (h2 / have-rel-role-91
                              :ARG1 (y / you)
                              :ARG2 (s / significant-other))))
            :ARG1 (p3 / present-02
                  :ARG1 (m3 / mind)
                  :purpose (p4 / play-02
                        :ARG0 a
                        :ARG1 (d / die-01
                              :ARG1 a))))
      :snt2 (p5 / person
            :ARG0-of (b / betray-01)
            :condition (c / catch-02
                  :polarity -
                  :ARG1 (p6 / person
                        :mod (r / religious-group
                              :name (n / name
                                    :op1 ""Jew""))))
            :polarity (a2 / amr-unknown)))"
"Mush, like everyone else &amp; what make him special? Aldo sad he's so young, shld know better","# ::snt Mush, like everyone else &amp; what make him special? Aldo sad he's so young, shld know better
(m / multi-sentence
      :snt1 (m2 / make-02
            :ARG0 (a / amr-unknown)
            :ARG1 (s / special-02
                  :ARG1 (p / person
                        :name (n / name
                              :op1 ""Mush"")))
            :ARG1-of (r / resemble-01
                  :ARG2 (a2 / and
                        :op1 (e / everyone
                              :mod (e2 / else))
                        :op2 (p2 / person
                              :name (n2 / name
                                    :op1 ""amp"")))))
      :snt2 (s2 / sad-02
            :ARG0 (y / young
                  :domain (h / he)
                  :degree (s3 / so))
            :ARG1 (p3 / person
                  :name (n3 / name
                        :op1 ""Aldo""))
            :ARG1-of (c / cause-01
                  :ARG0 (k / know-01
                        :ARG0 p3
                        :ARG1-of (h2 / have-degree-91
                              :ARG2 (g / good-02
                                    :ARG1 k)
                              :ARG3 (m3 / more))))))"
Also law says they have to feed and house him.,"# ::snt Also law says they have to feed and house him.
(s / say-01
      :ARG0 (l / law)
      :ARG1 (o / obligate-01
            :ARG1 (t / they)
            :ARG2 (a / and
                  :op1 (f / feed-01
                        :ARG0 t
                        :ARG2 (h / he))
                  :op2 (h2 / house-01
                        :ARG0 t
                        :ARG1 h)))
      :mod (a2 / also))"
"Private plane, not a commercial flight.","# ::snt Private plane, not a commercial flight.
(c / contrast-01
      :ARG1 (p / plane
            :ARG1-of (p2 / private-03))
      :ARG2 (f / fly-01
            :polarity -
            :mod (c2 / commerce)))"
"Nice, now we reward murderers &amp; white racists killing black people churches.Just what cops hired","# ::snt Nice, now we reward murderers &amp; white racists killing black people churches.Just what cops hired
(m / multi-sentence
      :snt1 (n / nice-01)
      :snt2 (c / contrast-01
            :ARG1 (r / reward-01
                  :ARG0 (w / we)
                  :ARG1 (a / and
                        :op1 (p / person
                              :ARG0-of (m2 / murder-01))
                        :op2 (p2 / person
                              :ARG0-of (m3 / murder-01))))
            :ARG2 (k / kill-01
                  :ARG0 (r2 / racist
                        :ARG1-of (w2 / white-02))
                  :ARG1 (c2 / church
                        :poss (p3 / person
                              :ARG1-of (b / black-05))))
            :time (n2 / now)))"
"The kind of cops we DON'T need,they should be Fired. That was a stamp of approval , murder Blacks","# ::snt The kind of cops we DON'T need,they should be Fired. That was a stamp of approval , murder Blacks
(m / multi-sentence
      :snt1 (r / recommend-01
            :ARG1 (f / fire-02
                  :ARG1 (c / cop
                        :mod (k / kind)
                        :ARG1-of (n / need-01
                              :polarity -
                              :ARG0 (w / we)))))
      :snt2 (a / and
            :op1 (s / stamp
                  :mod (a2 / approve-01)
                  :domain (t / that))
            :op2 (m2 / murder-01
                  :ARG1 (p / person
                        :ARG1-of (b / black-05)))))"
"white suspect, white police yeah they looked out for him","# ::snt white suspect, white police yeah they looked out for him
(a / and
      :op1 (p / person
            :ARG2-of (s / suspect-01)
            :ARG1-of (w / white-02
                  :ARG1 (p2 / police)))
      :op2 p2
      :op3 (l / look-out-08
            :ARG0 p2
            :ARG1 (h / he))
      :mod (y / yeah))"
giving shooter a hashtag is giving killer desired fame,"# ::snt giving shooter a hashtag is giving killer desired fame
(g / give-01
      :ARG0 (g2 / give-01
            :ARG0 (y / you)
            :ARG1 (h / hashtag)
            :ARG2 (p / person
                  :ARG0-of (s / shoot-02)))
      :ARG1 (f / fame-01
            :ARG1 (p2 / person
                  :ARG0-of (k / kill-01))
            :ARG1-of (d / desire-01
                  :ARG0 p2))
      :ARG2 p2)"
soooo in others words negatively reinforcing this lunatics thoughts and actions,"# ::snt soooo in others words negatively reinforcing this lunatics thoughts and actions
(r / reinforce-01
      :ARG1 (a / and
            :op1 (t / think-01)
            :op2 (a2 / act-02)
            :mod (l / lunatic)
            :mod (t2 / this))
      :ARG2-of (n / negative-03)
      :location (w / word
            :mod (o / other))
      :mod (s / so))"
The same way the Germanwings pilot was shown doing charity work. Racism stinls!,"# ::snt The same way the Germanwings pilot was shown doing charity work. Racism stinls!
(m / multi-sentence
      :snt1 (s / show-01
            :ARG1 (d / do-02
                  :ARG0 (p / person
                        :ARG0-of (p2 / pilot-01
                              :ARG1 (m2 / military
                                    :name (n / name
                                          :op1 ""Germanwings""))))
                  :ARG1 (w / work-01
                        :ARG0 p
                        :ARG1 (c / charity)))
            :manner (w2 / way
                  :ARG1-of (s2 / same-01)))
      :snt2 (s3 / stinkel
            :mode expressive
            :mod (r / racism)))"
