comment,amr
Asparagus water = PEE!!,"# ::snt Asparagus water = PEE!!
(e / equal-01
      :ARG1 (w / water
            :source (a / asparagus))
      :ARG2 (p / pee))"
oh my god this cracked me up,"# ::snt oh my god this cracked me up
(c / crack-up-03
      :ARG0 (t / this)
      :ARG1 (ii / i)
      :mod (o / oh-my-god
            :mode expressive))"
"I have toilet water here, varities: clean, yellow and brown. $2 Canadian/litre","# ::snt I have toilet water here, varities: clean, yellow and brown. $2 Canadian/litre
(m / multi-sentence
      :snt1 (h / have-03
            :ARG0 (ii / i)
            :ARG1 (w / water
                  :purpose (t / toilet)
                  :mod (v / varities
                        :ARG1-of (m2 / mean-01
                              :ARG2 (a / and
                                    :op1 (c / clean-04)
                                    :op2 (y / yellow)
                                    :op3 (b / brown)))))
            :location (h2 / here))
      :snt2 (r / rate-entity-91
            :ARG1 (m3 / monetary-quantity
                  :quant 2
                  :unit (d / dollar))
            :ARG2 (v2 / volume-quantity
                  :quant 1
                  :unit (l / liter))
            :mod (c2 / country
                  :name (n / name
                        :op1 ""Canada""))))"
"hahahah ew, who wants their pee to smell like that all day?","# ::snt hahahah ew, who wants their pee to smell like that all day?
(w / want-01
      :ARG0 (a / amr-unknown)
      :ARG1 (s / smell-02
            :ARG1 (p / pee-01
                  :ARG0 (t / they))
            :ARG2 (t2 / that)
            :time (d / day
                  :mod (a2 / all)))
      :mod (a3 / ah
            :mode expressive)
      :mod (e / ew
            :mode expressive))"
whole foods RT Whole Foods' $6 asparagus water is just water with three stalks of asparagus,"# ::snt whole foods RT Whole Foods' $6 asparagus water is just water with three stalks of asparagus
(m / multi-sentence
      :snt1 (f / food
            :mod (w / whole))
      :snt2 (w2 / water
            :mod (j / just)
            :ARG0-of (h / have-03
                  :ARG1 (s / stalk
                        :quant 3
                        :part-of (a / asparagus)))
            :domain (w3 / water
                  :mod a)
            :ARG1-of (c / cost-01
                  :ARG2 (m2 / monetary-quantity
                        :quant 6
                        :unit (d / dollar)))
            :poss (c2 / company
                  :name (n / name
                        :op1 ""Whole""
                        :op2 ""Foods""))))"
that's incredible,"# ::snt that's incredible
(ii / incredible
      :domain (t / that))"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
Brilliant. If people are dumb enough to pay for it kudos to WF for taking advantage of idiots,"# ::snt Brilliant. If people are dumb enough to pay for it kudos to WF for taking advantage of idiots
(m / multi-sentence
      :snt1 (b / brilliant-01)
      :snt2 (h / have-condition-91
            :ARG1 (k / kudos
                  :beneficiary (p / person
                        :name (n / name
                              :op1 ""WF""))
                  :ARG1-of (c / cause-01
                        :ARG0 (t / take-advantage-02
                              :ARG0 (p2 / person)
                              :ARG1 (ii / idiot))))
            :ARG2 (h2 / have-degree-91
                  :ARG1 (p3 / person)
                  :ARG2 (d / dumb)
                  :ARG3 (e / enough)
                  :ARG6 (p4 / pay-01
                        :ARG0 p3
                        :ARG3 (ii2 / it)))))"
I love this list. ORNAMENTAL KALE.,"# ::snt I love this list. ORNAMENTAL KALE.
(m / multi-sentence
      :snt1 (l / love-01
            :ARG0 (ii / i)
            :ARG1 (l2 / list
                  :mod (t / this)))
      :snt2 (s / sell-01
            :ARG1 (p / product
                  :name (n / name
                        :op1 ""Orleans""
                        :op2 ""Kale""))))"
YUK!,"# ::snt YUK!
(c / country
      :name (n / name
            :op1 ""UK""))"
those sound good though lol,"# ::snt those sound good though lol
(h / have-concession-91
      :ARG1 (s / sound-01
            :ARG1 (t / that)
            :ARG2 (g / good-02)
            :ARG3 (l / laugh-01
                  :mode expressive
                  :ARG0 (ii / i)
                  :manner (l2 / loud))))"
,"# ::snt 
(a / amr-empty)"
you get what you pay for,"# ::snt you get what you pay for
(g / get-01
      :ARG0 (y / you)
      :ARG1 (t / thing
            :ARG1-of (p / pay-01
                  :ARG0 y)))"
: times Whole Foods went too damn far,"# ::snt : times Whole Foods went too damn far
(g / go-01
      :ARG1 (c / company
            :name (n / name
                  :op1 ""Whole""
                  :op2 ""Foods""))
      :ARG4 (f / far
            :ARG1-of (h / have-degree-91
                  :ARG2 (d / damn)
                  :ARG3 (t / too)))
      :time (t2 / time))"
I've never heard of this and I work for Whole Foods.,"# ::snt I've never heard of this and I work for Whole Foods.
(a / and
      :op1 (h / hear-01
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (t / this)
            :time (e / ever))
      :op2 (w / work-01
            :ARG0 ii
            :ARG2 (c / company
                  :name (n / name
                        :op1 ""Whole""
                        :op2 ""Foods""))))"
,"# ::snt 
(a / amr-empty)"
- and there are plenty of douchey people who are happy to buy it. Suckers deserve to be swindled.,"# ::snt - and there are plenty of douchey people who are happy to buy it. Suckers deserve to be swindled.
(m / multi-sentence
      :snt1 (a / and
            :op2 (h / happy-01
                  :ARG0 (b / buy-01
                        :ARG0 (p / person
                              :mod (d / douchey)
                              :quant (p2 / plenty))
                        :ARG1 (ii / it))
                  :ARG1 p))
      :snt2 (d2 / deserve-01
            :ARG0 (p3 / person
                  :ARG0-of (s / suck-03))
            :ARG1 (s2 / swindle-01
                  :ARG1 p3)))"
"if people are willing to pay that much, they deserve that money.","# ::snt if people are willing to pay that much, they deserve that money.
(d / deserve-01
      :ARG0 (p / person)
      :ARG1 (m / money
            :mod (t / that))
      :condition (w / will-02
            :ARG0 p
            :ARG1 (p2 / pay-01
                  :ARG0 p
                  :ARG1 (m2 / much
                        :mod (t2 / that)))))"
loooool,"# ::snt loooool
(o / oooool
      :mode expressive)"
nothing to write home about,"# ::snt nothing to write home about
(n / nothing
      :ARG1-of (w / write-01
            :location (h / home)))"
times Whole Foods went too damn far,"# ::snt times Whole Foods went too damn far
(t / time
      :time-of (g / go-01
            :ARG1 (c / company
                  :name (n / name
                        :op1 ""Whole""
                        :op2 ""Foods""))
            :ARG4 (f / far
                  :ARG2-of (h / have-degree-91
                        :ARG1 g
                        :ARG3 (t2 / too)
                        :ARG6 (d / damn)))))"
"article mentions ""bone broth"", that's all I need to know.","# ::snt article mentions ""bone broth"", that's all I need to know.
(m / mention-01
      :ARG0 (a / article)
      :ARG1 (b / broth
            :mod (b2 / bone))
      :ARG1-of (k / know-01
            :ARG0 (ii / i)
            :ARG1-of (n / need-01
                  :ARG0 ii)
            :mod (a2 / all)))"
Out of control RT Whole Foods' $6 asparagus water is just water with three stalks of asparagus in it,"# ::snt Out of control RT Whole Foods' $6 asparagus water is just water with three stalks of asparagus in it
(w / water
      :mod (j / just)
      :ARG0-of (h / have-03
            :ARG1 (s / stalk
                  :quant 3
                  :part-of (a / asparagus)))
      :domain (w2 / water
            :ARG1-of (c / cost-01
                  :ARG2 (m / monetary-quantity
                        :quant 6
                        :unit (d / dollar)))
            :poss (c2 / company
                  :name (n / name
                        :op1 ""Whole""
                        :op2 ""Foods"")
                  :ARG1-of (o / out-06)))
      :ARG1-of (c3 / control-01
            :polarity -))"
I got my hands on the recipe and could be persuaded to share,"# ::snt I got my hands on the recipe and could be persuaded to share
(a / and
      :op1 (g / get-04
            :ARG0 (ii / i)
            :ARG1 (ii2 / in-ones-hands-04
                  :ARG0 ii
                  :ARG1 (r / recipe)))
      :op2 (p / possible-01
            :ARG1 (p2 / persuade-01
                  :ARG1 ii
                  :ARG2 (s / share-01
                        :ARG0 ii
                        :ARG1 r))))"
I have a great business plan if you want in: $7 carrot water.,"# ::snt I have a great business plan if you want in: $7 carrot water.
(h / have-03
      :ARG0 (ii / i)
      :ARG1 (p / plan-01
            :ARG0 ii
            :ARG1 (b / business)
            :mod (g / great))
      :ARG1-of (m / mean-01
            :ARG2 (w / water
                  :mod (c / carrot)
                  :ARG1-of (c2 / cost-01
                        :ARG2 (m2 / monetary-quantity
                              :quant 7
                              :unit (d / dollar)))))
      :condition (w2 / want-01
            :ARG0 (y / you)
            :ARG1 p))"
,"# ::snt 
(a / amr-empty)"
And America claims it's losing its middle class,"# ::snt And America claims it's losing its middle class
(a / and
      :op2 (c / claim-01
            :ARG0 (c2 / country
                  :name (n / name
                        :op1 ""America""))
            :ARG1 (l / lose-02
                  :ARG0 c2
                  :ARG1 (c3 / class
                        :mod (m / middle)
                        :poss c2))))"
Quite innovative. Why didn't l think of this! Lol.,"# ::snt Quite innovative. Why didn't l think of this! Lol.
(m / multi-sentence
      :snt1 (ii / innovate-01
            :degree (q / quite))
      :snt2 (t / think-01
            :polarity -
            :ARG0 (ii2 / i)
            :ARG1 (t2 / this)
            :ARG1-of (c / cause-01
                  :ARG0 (a / amr-unknown)))
      :snt3 (l / laugh-01
            :mode expressive
            :ARG0 ii2
            :manner (l2 / loud)))"
"The ""well-monied"" will truly buy anything!","# ::snt The ""well-monied"" will truly buy anything!
(b / buy-01
      :mode expressive
      :ARG0 (p / person
            :ARG1-of (p2 / private-03))
      :ARG1 (a / anything)
      :ARG1-of (t / true-01))"
INGENIOUS RT : Whole Foods' $6 asparagus water is just water w stalks of asparagus,"# ::snt INGENIOUS RT : Whole Foods' $6 asparagus water is just water w stalks of asparagus
(a / and
      :op1 (p / publication
            :name (n / name
                  :op1 ""INGENIOUS""
                  :op2 ""RT""))
      :op2 (w / water
            :ARG1-of (c / cost-01
                  :ARG2 (m / monetary-quantity
                        :quant 6
                        :unit (d / dollar)))
            :domain (w2 / water
                  :source (a2 / asparagus)
                  :mod (j / just)
                  :ARG0-of (w3 / wade-01
                        :ARG1 (s / stalk
                              :part-of a2)))
            :poss (c2 / company
                  :name (n2 / name
                        :op1 ""Whole""
                        :op2 ""Foods""))))"
I can make a whole bunch of asparagus water for . What's next? $8 for mushroom water?,"# ::snt I can make a whole bunch of asparagus water for . What's next? $8 for mushroom water?
(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (m2 / make-01
                  :ARG0 (ii / i)
                  :ARG1 (w / water
                        :source (a / asparagus)
                        :quant (b / bunch
                              :mod (w2 / whole)))
                  :purpose (a2 / amr-unknown)))
      :snt2 (a3 / amr-unknown
            :mod (n / next)
            :domain (m3 / monetary-quantity
                  :quant 8
                  :unit (d / dollar)
                  :ARG3-of (c / cost-01
                        :ARG1 (w3 / water
                              :source (m4 / mushroom))))))"
"what on earth!??? Also, I see bruce getting this ala smart water","# ::snt what on earth!??? Also, I see bruce getting this ala smart water
(m / multi-sentence
      :snt1 (a / amr-unknown
            :location (e / earth))
      :snt2 (s / see-01
            :ARG0 (ii / i)
            :ARG1 (g / get-01
                  :ARG0 (b / bruce)
                  :ARG1 (w / water
                        :ARG1-of (s2 / smart-06)
                        :mod (t / this)
                        :mod (a2 / ala)))
            :mod (a3 / also)))"
or take a page from Charlie Kelly's book..... Milk Steak.,"# ::snt or take a page from Charlie Kelly's book..... Milk Steak.
(o / or
      :op2 (t / take-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (p / page)
            :ARG2 (b / book
                  :name (n / name
                        :op1 ""Milk""
                        :op2 ""Steak"")
                  :source (p2 / person
                        :name (n2 / name
                              :op1 ""Charlie""
                              :op2 ""Kelly"")))))"
Time to short asparagus?,"# ::snt Time to short asparagus?
(t / time
      :time-of (s / short-06
            :ARG1 (a / asparagus))
      :polarity (a2 / amr-unknown))"
it still makes your pee stink...,"# ::snt it still makes your pee stink...
(s / stink-01
      :ARG0 (ii / it)
      :ARG1 (p / pee
            :poss (y / you))
      :mod (s2 / still))"
"given that I dislike asparagus, I'd never even contemplate buying a product like this. just nasty.","# ::snt given that I dislike asparagus, I'd never even contemplate buying a product like this. just nasty.
(m / multi-sentence
      :snt1 (c / consider-02
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (b / buy-01
                  :ARG0 ii
                  :ARG1 (p / product
                        :ARG1-of (r / resemble-01
                              :ARG2 (t / this))))
            :time (e / ever)
            :mod (e2 / even)
            :ARG1-of (c2 / cause-01
                  :ARG0 (d / dislike-01
                        :ARG0 ii
                        :ARG1 (a / asparagus))))
      :snt2 (n / nasty
            :mod (j / just)))"
let's not talk about it,"# ::snt let's not talk about it
(t / talk-01
      :polarity -
      :mode imperative
      :ARG0 (w / we)
      :ARG1 (ii / it))"
I wonder if just drinking the water that they soaked in affects the smell too...,"# ::snt I wonder if just drinking the water that they soaked in affects the smell too...
(w / wonder-01
      :ARG0 (ii / i)
      :ARG1 (t / truth-value
            :polarity-of (a / affect-01
                  :ARG0 (d / drink-01
                        :ARG0 (t2 / they)
                        :ARG1 (w2 / water
                              :ARG1-of (s / soak-01
                                    :ARG0 t2))
                        :mod (j / just))
                  :ARG1 (s2 / smell-02)
                  :mod (t3 / too))))"
LMAO!!,"# ::snt LMAO!!
(l / laugh-01
      :mode expressive
      :ARG1 (a / ass
            :part-of (ii / i))
      :mod (o / off))"
,"# ::snt 
(a / amr-empty)"
"vegetables soaking and sitting in water, is basically just dirty fungus and bacteria filled water...","# ::snt vegetables soaking and sitting in water, is basically just dirty fungus and bacteria filled water...
(a / and
      :op1 (s / soak-01
            :ARG1 (v / vegetable)
            :ARG2 (w / water))
      :op2 (s2 / sit-01
            :ARG1 v
            :ARG2 (w2 / water))
      :domain (a2 / and
            :op1 (f / fungus
                  :ARG1-of (d / dirty-02))
            :op2 (f2 / fill-01
                  :ARG1 w2
                  :ARG2 (b / bacterium))
            :mod (j / just)
            :mod (b2 / basic)))"
Is the water made of Unicorn tears?,"# ::snt Is the water made of Unicorn tears?
(m / make-01
      :polarity (a / amr-unknown)
      :ARG1 (w / water)
      :ARG2 (t / tear
            :mod (u / unicorn)))"
I didn't even know I need this.,"# ::snt I didn't even know I need this.
(k / know-01
      :polarity -
      :ARG0 (ii / i)
      :ARG1 (n / need-01
            :ARG0 ii
            :ARG1 (t / this))
      :mod (e / even))"
"Wait, don't they stock that next to the reverse osmosis glacier melt bong water?","# ::snt Wait, don't they stock that next to the reverse osmosis glacier melt bong water?
(a / and
      :op1 (w / wait-01
            :mode imperative
            :ARG1 (y / you))
      :op2 (s / stock-01
            :polarity -
            :ARG0 (t / they)
            :ARG1 (t2 / that)
            :location (n / next-to
                  :op1 (m / melt-01
                        :ARG1 (g / glacier)
                        :mod (o / osmosis)
                        :ARG1-of (r / reverse-01))
                  :mod (w2 / water
                        :mod (b / bong)))
            :polarity (a2 / amr-unknown)))"
what!,"# ::snt what!
(a / amr-unknown
      :mode expressive)"
"""$6 asparagus water""","# ::snt ""$6 asparagus water""
(w / water
      :mod (a / asparagus)
      :ARG1-of (c / cost-01
            :ARG2 (m / monetary-quantity
                  :quant 6
                  :unit (d / dollar))))"
"I guess you can just combine any items and call it those two things, like Tire Pear or Atheism Pudding or Leaf Steak","# ::snt I guess you can just combine any items and call it those two things, like Tire Pear or Atheism Pudding or Leaf Steak
(g / guess-01
      :ARG0 (ii / i)
      :ARG1 (p / possible-01
            :ARG1 (a / and
                  :op1 (c / combine-01
                        :ARG0 (y / you)
                        :ARG1 (ii2 / item
                              :mod (a2 / any))
                        :mod (j / just))
                  :op2 (c2 / call-01
                        :ARG0 y
                        :ARG1 ii2
                        :ARG2 (t / thing
                              :quant 2
                              :mod (t2 / that)
                              :example (o / or
                                    :op1 (t3 / thing
                                          :name (n / name
                                                :op1 ""Tire""
                                                :op2 ""Pear""))
                                    :op2 (t4 / thing
                                          :name (n2 / name
                                                :op1 ""Atheism""
                                                :op2 ""Pudding""))
                                    :op3 (t5 / thing
                                          :name (n3 / name
                                                :op1 ""Leak""
                                                :op2 ""Steak""))))))))"
,"# ::snt 
(a / amr-empty)"
"If people fall for it, can you blame the sellers?","# ::snt If people fall for it, can you blame the sellers?
(p / possible-01
      :ARG1 (b / blame-01
            :ARG0 (y / you)
            :ARG1 (p2 / person
                  :ARG0-of (s / sell-01)))
      :polarity (a / amr-unknown)
      :condition (f / fall-10
            :ARG1 (p3 / person)
            :ARG2 (ii / it)))"
