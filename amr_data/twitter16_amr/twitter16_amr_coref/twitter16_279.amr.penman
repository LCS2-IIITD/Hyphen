# ::snt shooter. Police had to feed the creep he had not even been charged yet. Let's go after the police again?
# ::tokens ["shooter", ".", "Police", "had", "to", "feed", "the", "creep", "he", "had", "not", "even", "been", "charged", "yet", ".", "Let", "'s", "go", "after", "the", "police", "again", "?"]
# ::lemmas ["shooter", ".", "police", "have", "to", "feed", "the", "creep", "he", "have", "not", "even", "be", "charge", "yet", ".", "let", "us", "go", "after", "the", "police", "again", "?"]
(c1-4 / multi-sentence
      :snt1 (c1-9 / person
                  :ARG0-of (c1-8 / shoot-02))
      :snt2 (c1-10 / obligate-01
                   :ARG1 (c1-3 / police)
                   :ARG2 (c1-12 / feed-01
                                :ARG0 c1-3
                                :ARG2 (c1-1 / person
                                            :ARG0-of (c1-13 / creep-01)))
                   :time (c1-2 / yet
                               :polarity -))
      :snt3 (c1-5 / go-03
                  :ARG0 (c1-11 / we)
                  :ARG1 (c1-6 / police)
                  :mod (c1-0 / again)
                  :polarity (c1-7 / amr-unknown)
                  :mode imperative))

# ::snt I bet if he was Black they would given him a bologni sandwich if that.
# ::tokens ["I", "bet", "if", "he", "was", "Black", "they", "would", "given", "him", "a", "bologni", "sandwich", "if", "that", "."]
# ::lemmas ["i", "bet", "if", "he", "be", "black", "they", "would", "give", "he", "a", "bologni", "sandwich", "if", "that", "."]
(c2-2 / bet-01
      :ARG0 (c2-6 / i)
      :ARG2 (c2-5 / give-01
                  :ARG0 (c2-1 / they)
                  :ARG1 (c2-7 / sandwich
                              :mod (c2-4 / bologni))
                  :ARG2 (c2-8 / he)
                  :condition (c2-0 / black-05
                                   :ARG1 c2-8)
                  :condition (c2-3 / that)))

# ::snt Yet another case of police brutality!
# ::tokens ["Yet", "another", "case", "of", "police", "brutality", "!"]
# ::lemmas ["yet", "another", "case", "of", "police", "brutality", "!"]
(c3-4 / case-04
      :ARG1 (c3-1 / brutalize-01
                  :ARG0 (c3-3 / police))
      :mod (c3-0 / another)
      :mod (c3-2 / yet))

# ::snt You need therapy. I'm usually one to talk like a lady; but from a Latino woman: Fuck you, and the hatred you stand for.
# ::tokens ["You", "need", "therapy", ".", "I", "'m", "usually", "one", "to", "talk", "like", "a", "lady", ";", "but", "from", "a", "Latino", "woman", ":", "Fuck", "you", ",", "and", "the", "hatred", "you", "stand", "for", "."]
# ::lemmas ["you", "need", "therapy", ".", "i", "be", "usually", "one", "to", "talk", "like", "a", "lady", ";", "but", "from", "a", "Latino", "woman", ":", "fuck", "you", ",", "and", "the", "hatred", "you", "stand", "for", "."]
(c4-6 / multi-sentence
      :snt1 (c4-10 / need-01
                   :ARG0 (c4-5 / you)
                   :ARG1 (c4-0 / therapy))
      :snt2 (c4-15 / contrast-01
                   :ARG1 (c4-3 / talk-01
                               :ARG0 (c4-8 / i)
                               :manner (c4-13 / lady)
                               :mod (c4-9 / usual))
                   :ARG2 (c4-4 / talk-01
                               :ARG0 c4-8
                               :manner (c4-14 / hate-01
                                              :ARG1 (c4-1 / you)
                                              :ARG1-of (c4-11 / stand-08
                                                              :ARG0 c4-1))
                               :source (c4-12 / woman
                                              :mod (c4-2 / ethnic-group
                                                         :name (c4-7 / name
                                                                     :op1 "Latino"))))))

# ::snt Only a sick mind could see color; even in mere words.
# ::tokens ["Only", "a", "sick", "mind", "could", "see", "color", ";", "even", "in", "mere", "words", "."]
# ::lemmas ["only", "a", "sick", "mind", "could", "see", "color", ";", "even", "in", "mere", "word", "."]
(c5-5 / possible-01
      :ARG1 (c5-4 / see-01
                  :ARG0 (c5-3 / mind
                              :ARG1-of (c5-0 / sick-05)
                              :mod (c5-6 / only))
                  :ARG1 (c5-8 / color)
                  :manner (c5-7 / word-01
                                :mod (c5-2 / mere)
                                :mod (c5-1 / even))))

# ::snt I am done with your bigotry, racism and general hatred. God bless.
# ::tokens ["I", "am", "done", "with", "your", "bigotry", ",", "racism", "and", "general", "hatred", ".", "God", "bless", "."]
# ::lemmas ["i", "be", "do", "with", "your", "bigotry", ",", "racism", "and", "general", "hatred", ".", "God", "bless", "."]
(c6-5 / multi-sentence
      :snt1 (c6-3 / be-done-08
                  :ARG0 (c6-8 / i)
                  :ARG1 (c6-0 / and
                              :op1 (c6-4 / bigotry)
                              :op2 (c6-2 / racism)
                              :op3 (c6-11 / hate-01
                                          :ARG1-of (c6-6 / general-02))
                              :poss (c6-7 / you)))
      :snt2 (c6-1 / bless-01
                  :ARG0 (c6-9 / person
                              :name (c6-10 / name
                                           :op1 "God"))))

# ::snt So the worth of a person is in their agreeing with you? And who here is the racist again?
# ::tokens ["So", "the", "worth", "of", "a", "person", "is", "in", "their", "agreeing", "with", "you", "?", "And", "who", "here", "is", "the", "racist", "again", "?"]
# ::lemmas ["so", "the", "worth", "of", "a", "person", "be", "in", "their", "agree", "with", "you", "?", "and", "who", "here", "be", "the", "racist", "again", "?"]
(c7-5 / multi-sentence
      :snt1 (c7-8 / worth-01
                  :ARG1 (c7-7 / person)
                  :ARG2 (c7-0 / agree-01
                              :ARG0 c7-7
                              :ARG2 (c7-4 / you))
                  :polarity (c7-10 / amr-unknown))
      :snt2 (c7-2 / and
                  :op2 (c7-3 / racist
                             :domain (c7-6 / amr-unknown)
                             :location (c7-9 / here)
                             :mod (c7-1 / again))))

# ::snt I AM NOT WHITE YOU ABSOLUTE FOOL.
# ::tokens ["I", "AM", "NOT", "WHITE", "YOU", "ABSOLUTE", "FOOL", "."]
# ::lemmas ["i", "be", "not", "white", "you", "absolute", "fool", "."]
(c8-3 / say-01
      :ARG0 (c8-2 / i)
      :ARG1 (c8-4 / white-02
                  :ARG1 c8-2
                  :polarity -)
      :ARG2 (c8-1 / you
                  :mod (c8-5 / FOOL
                             :mod (c8-0 / absolute))))

# ::snt you are the type of black man who is to blame when your cities burn, your stores are looted, and your race is disrespected.
# ::tokens ["you", "are", "the", "type", "of", "black", "man", "who", "is", "to", "blame", "when", "your", "cities", "burn", ",", "your", "stores", "are", "looted", ",", "and", "your", "race", "is", "disrespected", "."]
# ::lemmas ["you", "be", "the", "type", "of", "black", "man", "who", "be", "to", "blame", "when", "your", "city", "burn", ",", "your", "store", "be", "loot", ",", "and", "your", "race", "be", "disrespect", "."]
(c10-7 / man
       :ARG1-of (c10-3 / black-05)
       :domain (c10-6 / you)
       :ARG1-of (c10-5 / blame-01
                       :time (c10-0 / and
                                    :op1 (c10-1 / burn-01
                                                :ARG1 (c10-10 / city
                                                              :poss c10-6))
                                    :op2 (c10-9 / loot-01
                                                :ARG1 (c10-8 / store
                                                             :poss c10-6))
                                    :op3 (c10-4 / disrespect-01
                                                :ARG1 (c10-2 / race
                                                             :poss c10-6)))))

# ::snt People like you are the ones promoting racism. People like you are the reason there will never be true equality.
# ::tokens ["People", "like", "you", "are", "the", "ones", "promoting", "racism", ".", "People", "like", "you", "are", "the", "reason", "there", "will", "never", "be", "true", "equality", "."]
# ::lemmas ["people", "like", "you", "be", "the", "one", "promote", "racism", ".", "people", "like", "you", "be", "the", "reason", "there", "will", "never", "be", "true", "equality", "."]
(c11-8 / multi-sentence
       :snt1 (c11-10 / promote-02
                     :ARG0 (c11-7 / person
                                  :ARG1-of (c11-3 / resemble-01
                                                  :ARG2 (c11-6 / you)))
                     :ARG1 (c11-9 / racism))
       :snt2 (c11-12 / cause-01
                     :ARG0 (c11-0 / person
                                  :ARG1-of (c11-1 / resemble-01
                                                  :ARG2 (c11-4 / you)))
                     :ARG1 (c11-5 / equal-01
                                  :time (c11-11 / ever)
                                  :ARG1-of (c11-2 / true-01)
                                  :polarity -)))

# ::snt Since we're playing that game? One was lbs. One wasn't. One had a LONG record. One didn't.
# ::tokens ["Since", "we", "'re", "playing", "that", "game", "?", "One", "was", "lbs", ".", "One", "was", "n't", ".", "One", "had", "a", "LONG", "record", ".", "One", "did", "n't", "."]
# ::lemmas ["since", "we", "be", "play", "that", "game", "?", "One", "be", "lb", ".", "One", "be", "not", ".", "One", "have", "a", "long", "record", ".", "One", "do", "not", "."]
(c12-6 / multi-sentence
       :snt1 (c12-14 / cause-01
                     :polarity (c12-0 / amr-unknown)
                     :ARG0 (c12-9 / play-01
                                  :ARG0 (c12-12 / we)
                                  :ARG1 (c12-7 / game
                                               :mod (c12-1 / that))))
       :snt2 (c12-11 / one
                     :quant (c12-3 / mass-quantity
                                   :unit (c12-8 / pound)
                                   :quant 1))
       :snt3 (c12-4 / one
                    :polarity -)
       :snt4 (c12-2 / record-01
                    :ARG1-of (c12-13 / long-03))
       :snt5 (c12-5 / do-02
                    :ARG0 (c12-10 / one)
                    :polarity -))

# ::snt NO. No. No. I am not allowing this. I am so fucking tired of this false equivalency BULL.
# ::tokens ["NO", ".", "No", ".", "No", ".", "I", "am", "not", "allowing", "this", ".", "I", "am", "so", "fucking", "tired", "of", "this", "false", "equivalency", "BULL", "."]
# ::lemmas ["no", ".", "no", ".", "no", ".", "i", "be", "not", "allow", "this", ".", "i", "be", "so", "fucking", "tired", "of", "this", "false", "equivalency", "BULL", "."]
(c13-7 / multi-sentence
       :snt1 (c13-10 / no
                     :snt2-of c13-7
                     :snt3-of c13-7)
       :snt4 (c13-0 / allow-01
                    :ARG0 (c13-8 / i)
                    :ARG1 (c13-1 / this)
                    :polarity -)
       :snt5 (c13-4 / tire-03
                    :ARG0 (c13-3 / bullshit
                                 :mod (c13-11 / false)
                                 :mod (c13-2 / equivalency)
                                 :mod (c13-5 / this))
                    :ARG1 c13-8
                    :degree (c13-9 / so)
                    :mod (c13-6 / fucking)))

# ::snt Roof was a racist who took black lives. That is where race ends in this story.
# ::tokens ["Roof", "was", "a", "racist", "who", "took", "black", "lives", ".", "That", "is", "where", "race", "ends", "in", "this", "story", "."]
# ::lemmas ["Roof", "be", "a", "racist", "who", "take", "black", "life", ".", "that", "be", "where", "race", "end", "in", "this", "story", "."]
(c14-6 / multi-sentence
       :snt1 (c14-1 / racist
                    :domain (c14-10 / person
                                    :name (c14-11 / name
                                                  :op1 "Roof"))
                    :ARG0-of (c14-0 / take-01
                                    :ARG1 (c14-12 / life
                                                  :poss (c14-7 / person
                                                               :ARG1-of (c14-3 / black-05)))))
       :snt2 (c14-5 / be-located-at-91
                    :ARG1 (c14-2 / end-01
                                 :ARG1 (c14-8 / race))
                    :ARG2 (c14-9 / story
                                 :mod (c14-4 / this))))

# ::snt Where do you get privilege? Or do you just look to further divide along lines of color? Why must you contribute to the problem?
# ::tokens ["Where", "do", "you", "get", "privilege", "?", "Or", "do", "you", "just", "look", "to", "further", "divide", "along", "lines", "of", "color", "?", "Why", "must", "you", "contribute", "to", "the", "problem", "?"]
# ::lemmas ["where", "do", "you", "get", "privilege", "?", "or", "do", "you", "just", "look", "to", "far", "divide", "along", "line", "of", "color", "?", "why", "must", "you", "contribute", "to", "the", "problem", "?"]
(c15-17 / multi-sentence
        :snt1 (c15-6 / get-01
                     :ARG0 (c15-16 / you)
                     :ARG1 (c15-14 / privilege-01)
                     :location (c15-10 / amr-unknown))
        :snt2 (c15-19 / or
                      :op2 (c15-7 / look-01
                                  :ARG0 (c15-1 / you)
                                  :ARG1 (c15-15 / divide-02
                                                :ARG1-of (c15-3 / further-01)
                                                :manner (c15-9 / along
                                                               :op1 (c15-4 / line
                                                                           :mod (c15-8 / color))))
                                  :mod (c15-2 / just)))
        :snt3 (c15-11 / obligate-01
                      :ARG1 (c15-18 / you)
                      :ARG2 (c15-13 / contribute-01
                                    :ARG0 c15-18
                                    :ARG2 (c15-12 / problem))
                      :ARG1-of (c15-5 / cause-01
                                      :ARG0 (c15-0 / amr-unknown))))

# ::snt "White privilege"? We're discussing a horrid excuse for a human being, who is set to spend the rest of his life behind bars.
# ::tokens ["\"", "White", "privilege", "\"", "?", "We", "'re", "discussing", "a", "horrid", "excuse", "for", "a", "human", "being", ",", "who", "is", "set", "to", "spend", "the", "rest", "of", "his", "life", "behind", "bars", "."]
# ::lemmas ["\"", "white", "privilege", "\"", "?", "we", "be", "discuss", "a", "horrid", "excuse", "for", "a", "human", "being", ",", "who", "be", "set", "to", "spend", "the", "rest", "of", "his", "life", "behind", "bar", "."]
(c16-6 / multi-sentence
       :snt1 (c16-10 / privilege
                     :ARG1-of (c16-11 / white-02)
                     :polarity (c16-0 / amr-unknown))
       :snt2 (c16-14 / discuss-01
                     :ARG0 (c16-5 / we)
                     :ARG1 (c16-3 / excuse-02
                                  :ARG1 (c16-4 / being
                                               :mod (c16-13 / human)
                                               :ARG1-of (c16-9 / set-08
                                                               :ARG2 (c16-1 / spend-02
                                                                            :ARG0 c16-4
                                                                            :ARG1 (c16-2 / rest
                                                                                         :part-of (c16-12 / life
                                                                                                          :poss c16-4))
                                                                            :ARG2 (c16-8 / imprison-01
                                                                                         :ARG1 c16-4))))
                                  :mod (c16-7 / horrid))))

# ::snt He was brought a burger at the police station bcz w/holding food could have caused his confession to be overturned.
# ::tokens ["He", "was", "brought", "a", "burger", "at", "the", "police", "station", "bcz", "w", "/", "holding", "food", "could", "have", "caused", "his", "confession", "to", "be", "overturned", "."]
# ::lemmas ["he", "be", "bring", "a", "burger", "at", "the", "police", "station", "bcz", "w", "/", "hold", "food", "could", "have", "cause", "his", "confession", "to", "be", "overturn", "."]
(c17-0 / bring-01
       :ARG1 (c17-2 / burger)
       :ARG2 (c17-10 / he)
       :location (c17-6 / station
                        :mod (c17-7 / police))
       :ARG1-of (c17-11 / cause-01
                        :ARG0 (c17-3 / possible-01
                                     :ARG1 (c17-4 / cause-01
                                                  :ARG0 (c17-5 / hold-01
                                                               :ARG1 (c17-9 / food))
                                                  :ARG1 (c17-8 / overturn-01
                                                               :ARG1 (c17-1 / confess-01
                                                                            :ARG0 c17-10))))))

# ::snt Stop trying to paint racism where it has no place.
# ::tokens ["Stop", "trying", "to", "paint", "racism", "where", "it", "has", "no", "place", "."]
# ::lemmas ["stop", "try", "to", "paint", "racism", "where", "it", "have", "no", "place", "."]
(c18-4 / stop-01
       :ARG0 (c18-2 / you)
       :ARG1 (c18-0 / try-01
                    :ARG0 c18-2
                    :ARG1 (c18-5 / paint-03
                                 :ARG0 c18-2
                                 :ARG1 (c18-1 / racism)
                                 :ARG2 (c18-3 / place-01
                                              :ARG1 c18-1
                                              :ARG2 c18-3
                                              :polarity -)))
       :mode imperative)

# ::snt My black ass would have starved RT Cops bought the alleged church shooter Burger King hours after killings
# ::tokens ["My", "black", "ass", "would", "have", "starved", "RT", "Cops", "bought", "the", "alleged", "church", "shooter", "Burger", "King", "hours", "after", "killings"]
# ::lemmas ["my", "black", "ass", "would", "have", "starve", "RT", "Cops", "buy", "the", "allege", "church", "shooter", "Burger", "King", "hours", "after", "killing"]
(c19-10 / starve-01
        :ARG0 (c19-14 / ass
                      :ARG1-of (c19-3 / black-05)
                      :part-of (c19-4 / i))
        :ARG1 (c19-13 / company
                      :name (c19-5 / name
                                   :op1 "Burger"
                                   :op2 "King")
                      :ARG1-of (c19-9 / buy-01
                                      :ARG0 (c19-18 / person
                                                    :ARG0-of (c19-11 / have-org-role-91
                                                                     :ARG1 (c19-20 / organization
                                                                                   :name (c19-7 / name
                                                                                                :op1 "RT"))
                                                                     :ARG2 (c19-16 / cop)))
                                      :ARG1 (c19-15 / person
                                                    :ARG0-of (c19-0 / shoot-02
                                                                    :ARG1 (c19-6 / church))
                                                    :ARG1-of (c19-12 / allege-01))
                                      :time (c19-1 / after
                                                   :op1 (c19-8 / kill-01
                                                               :ARG1 c19-15)
                                                   :quant (c19-19 / multiple
                                                                  :op1 (c19-2 / temporal-quantity
                                                                              :unit (c19-17 / hour)
                                                                              :quant 1))))))

# ::snt I had this burger recently, the bun was an actual sweet ring doughnut
# ::tokens ["I", "had", "this", "burger", "recently", ",", "the", "bun", "was", "an", "actual", "sweet", "ring", "doughnut"]
# ::lemmas ["i", "have", "this", "burger", "recently", ",", "the", "bun", "be", "an", "actual", "sweet", "ring", "doughnut"]
(c20-0 / and
       :op1 (c20-8 / have-06
                   :ARG0 (c20-5 / i)
                   :ARG1 (c20-3 / burger
                                :mod (c20-1 / this))
                   :time (c20-2 / recent))
       :op2 (c20-9 / doughnut
                   :ARG1-of (c20-6 / sweet-05)
                   :domain (c20-4 / bun)
                   :ARG1-of (c20-7 / actual-02)))

# ::snt what burger did he have?
# ::tokens ["what", "burger", "did", "he", "have", "?"]
# ::lemmas ["what", "burger", "do", "he", "have", "?"]
(c21-3 / have-03
       :ARG0 (c21-1 / he)
       :ARG1 (c21-0 / burger
                    :mod (c21-2 / amr-unknown)))

# ::snt Well killing niggers takes a lot of energy. *sarcasm off*
# ::tokens ["Well", "killing", "niggers", "takes", "a", "lot", "of", "energy", ".", "*", "sarcasm", "off", "*"]
# ::lemmas ["well", "kill", "nigger", "take", "a", "lot", "of", "energy", ".", "*", "sarcasm", "off", "*"]
(c22-4 / multi-sentence
       :snt1 (c22-0 / take-10
                    :ARG0 (c22-3 / kill-01
                                 :ARG1 (c22-6 / person
                                              :mod (c22-1 / racist)))
                    :ARG1 (c22-2 / energy
                                 :quant (c22-9 / lot))
                    :mod (c22-8 / well))
       :snt2 (c22-5 / sarcasm
                    :mod (c22-7 / off)))

# ::snt if you're trying to get them to relax enough to confess? YES.
# ::tokens ["if", "you", "'re", "trying", "to", "get", "them", "to", "relax", "enough", "to", "confess", "?", "YES", "."]
# ::lemmas ["if", "you", "be", "try", "to", "get", "they", "to", "relax", "enough", "to", "confess", "?", "yes", "."]
(c23-8 / have-condition-91
       :ARG1 (c23-5 / yes)
       :ARG2 (c23-0 / try-01
                    :ARG0 (c23-2 / you)
                    :ARG1 (c23-6 / get-04
                                 :ARG0 c23-2
                                 :ARG1 (c23-1 / relax-01
                                              :ARG1 (c23-4 / they)
                                              :ARG2-of (c23-7 / have-degree-91
                                                              :ARG1 c23-4
                                                              :ARG3 (c23-3 / enough)
                                                              :ARG6 (c23-9 / confess-01
                                                                           :ARG0 c23-4))))))

# ::snt It is a tactic to gain access and "friendship" from those in custody, to get them to confess.
# ::tokens ["It", "is", "a", "tactic", "to", "gain", "access", "and", "\"", "friendship", "\"", "from", "those", "in", "custody", ",", "to", "get", "them", "to", "confess", "."]
# ::lemmas ["it", "be", "a", "tactic", "to", "gain", "access", "and", "\"", "friendship", "\"", "from", "those", "in", "custody", ",", "to", "get", "they", "to", "confess", "."]
(c24-2 / tactic
       :purpose (c24-0 / and
                       :op1 (c24-4 / gain-02
                                   :ARG1 (c24-10 / and
                                                 :op1 (c24-1 / access-01
                                                             :ARG0 (c24-8 / person
                                                                          :location (c24-9 / custody)))
                                                 :op2 (c24-3 / befriend-01
                                                             :ARG0 c24-8))
                                   :ARG2 c24-8)
                       :op2 (c24-5 / get-04
                                   :ARG1 (c24-6 / confess-01
                                                :ARG0 c24-8)))
       :domain (c24-7 / it))

# ::snt Then you're just ignorant, dumb, and stupid if you don't understand the value of this information.
# ::tokens ["Then", "you", "'re", "just", "ignorant", ",", "dumb", ",", "and", "stupid", "if", "you", "do", "n't", "understand", "the", "value", "of", "this", "information", "."]
# ::lemmas ["then", "you", "be", "just", "ignorant", ",", "dumb", ",", "and", "stupid", "if", "you", "do", "not", "understand", "the", "value", "of", "this", "information", "."]
(c25-4 / infer-01
       :ARG1 (c25-0 / and
                    :op1 (c25-9 / ignorant-02
                                :ARG1 (c25-3 / you))
                    :op2 (c25-10 / dumb)
                    :op3 (c25-5 / stupid)
                    :mod (c25-2 / just)
                    :condition (c25-6 / understand-01
                                      :ARG0 c25-3
                                      :ARG1 (c25-7 / value-01
                                                   :ARG1 (c25-8 / information
                                                                :mod (c25-1 / this)))
                                      :polarity -)))

# ::snt You think gray got any Burger King? Ridiculous.
# ::tokens ["You", "think", "gray", "got", "any", "Burger", "King", "?", "Ridiculous", "."]
# ::lemmas ["you", "think", "gray", "get", "any", "Burger", "King", "?", "ridiculous", "."]
(c26-5 / multi-sentence
       :snt1 (c26-1 / think-01
                    :ARG0 (c26-4 / you)
                    :ARG1 (c26-6 / get-01
                                 :ARG0 (c26-8 / person
                                              :name (c26-9 / name
                                                           :op1 "gray"))
                                 :ARG1 (c26-10 / company
                                               :name (c26-3 / name
                                                            :op1 "Burger"
                                                            :op2 "King")
                                               :mod (c26-0 / any)))
                    :polarity (c26-7 / amr-unknown))
       :snt2 (c26-2 / ridiculous-02))

# ::snt this story is such a spectacle. Look at from outside of the blatant issues and read it like a fiction... Dark humor
# ::tokens ["this", "story", "is", "such", "a", "spectacle", ".", "Look", "at", "from", "outside", "of", "the", "blatant", "issues", "and", "read", "it", "like", "a", "fiction", "...", "Dark", "humor"]
# ::lemmas ["this", "story", "be", "such", "a", "spectacle", ".", "look", "at", "from", "outside", "of", "the", "blatant", "issue", "and", "read", "it", "like", "a", "fiction", "...", "dark", "humor"]
(c27-6 / multi-sentence
       :snt1 (c27-9 / spectacle
                    :domain (c27-0 / story
                                   :mod (c27-2 / this))
                    :degree (c27-10 / such))
       :snt2 (c27-1 / and
                    :op1 (c27-12 / look-01
                                 :ARG0 (c27-5 / you)
                                 :manner (c27-11 / outside
                                                 :op1 (c27-8 / issue-02
                                                             :mod (c27-4 / blatant)))
                                 :mode imperative)
                    :op2 (c27-3 / read-01
                                :ARG0 c27-5
                                :ARG1 c27-0
                                :manner (c27-7 / resemble-01
                                               :ARG2 (c27-13 / fiction))
                                :mode imperative))
       :snt3 (c27-14 / humor
                     :ARG1-of (c27-15 / dark-02)))

# ::snt Why not BUGER KING,HE BEEN HAVIN IT HIS WAY SINCE THE FIRST BULLET WAS FIRED ,SO IT'S APPROPRIATE
# ::tokens ["Why", "not", "BUGER", "KING", ",", "HE", "BEEN", "HAVIN", "IT", "HIS", "WAY", "SINCE", "THE", "FIRST", "BULLET", "WAS", "FIRED", ",", "SO", "IT", "'S", "APPROPRIATE"]
# ::lemmas ["why", "not", "buger", "king", ",", "he", "be", "HAVIN", "it", "his", "way", "since", "the", "first", "bullet", "be", "fire", ",", "SO", "IT", "be", "APPROPRIATE"]
(c28-3 / multi-sentence
       :snt1 (c28-14 / cause-01
                     :ARG0 (c28-0 / amr-unknown)
                     :ARG1 (c28-1 / bungle-01
                                  :ARG0 (c28-8 / person
                                               :name (c28-9 / name
                                                            :op1 "Buster"
                                                            :op2 "King"))
                                  :polarity -))
       :snt2 (c28-13 / have-manner-91
                     :ARG0 c28-8
                     :ARG1 (c28-6 / it)
                     :ARG2 (c28-11 / way
                                   :poss c28-8)
                     :time (c28-7 / since
                                  :op1 (c28-12 / fire-02
                                               :ARG1 (c28-2 / bell
                                                            :ord (c28-10 / ordinal-entity
                                                                         :value 1))))
                     :ARG0-of (c28-5 / cause-01
                                     :ARG1 (c28-4 / pare-01
                                                  :ARG1 c28-6))))

# ::snt Another perk for him he doesn't have to deal with black cops ,primarily handled by white cops LOVE
# ::tokens ["Another", "perk", "for", "him", "he", "does", "n't", "have", "to", "deal", "with", "black", "cops", ",", "primarily", "handled", "by", "white", "cops", "LOVE"]
# ::lemmas ["another", "perk", "for", "he", "he", "do", "not", "have", "to", "deal", "with", "black", "cop", ",", "primarily", "handle", "by", "white", "cop", "LOVE"]
(c29-5 / perk
       :beneficiary (c29-9 / he)
       :domain (c29-6 / obligate-01
                      :ARG1 c29-9
                      :ARG2 (c29-10 / deal-01
                                    :ARG0 c29-9
                                    :ARG1 (c29-8 / cop
                                                 :ARG1-of (c29-1 / black-05)
                                                 :ARG1-of (c29-4 / handle-01
                                                                 :ARG0 (c29-3 / cop
                                                                              :ARG1-of (c29-7 / white-02))
                                                                 :ARG1-of (c29-2 / prompt-02))))
                      :polarity -)
       :mod (c29-0 / another))

# ::snt Baiting him to get answers .........
# ::tokens ["Baiting", "him", "to", "get", "answers", "........."]
# ::lemmas ["bait", "he", "to", "get", "answer", "........."]
(c30-2 / bait-01
       :ARG1 (c30-4 / he)
       :ARG2 (c30-3 / get-01
                    :ARG0 c30-4
                    :ARG1 (c30-1 / thing
                                 :ARG2-of (c30-0 / answer-01))))

# ::snt O thats no surprise,he is going to get many perks from alot of "Closet Klansmen"all the way to trial
# ::tokens ["O", "that", "s", "no", "surprise", ",", "he", "is", "going", "to", "get", "many", "perks", "from", "alot", "of", "\"", "Closet", "Klansmen\"all", "the", "way", "to", "trial"]
# ::lemmas ["o", "that", "s", "no", "surprise", ",", "he", "be", "go", "to", "get", "many", "perk", "from", "alot", "of", "\"", "Closet", "Klansmen\"all", "the", "way", "to", "trial"]
(c31-6 / surprise-01
       :ARG0 (c31-0 / that)
       :ARG1 (c31-11 / he)
       :ARG1-of (c31-12 / cause-01
                        :ARG0 (c31-2 / get-01
                                     :ARG0 c31-11
                                     :ARG1 (c31-7 / perk
                                                  :quant (c31-3 / many))
                                     :ARG2 (c31-4 / person
                                                  :ARG0-of (c31-5 / have-org-role-91
                                                                  :ARG1 (c31-9 / organization
                                                                               :name (c31-8 / name
                                                                                            :op1 "Closet"
                                                                                            :op2 "Klansmen")))
                                                  :quant (c31-10 / lot))
                                     :duration (c31-1 / try-02
                                                      :ARG1 c31-11)))
       :polarity -)

# ::snt seriously that is NEWS?. So, does everyone get BK if they get arrested or another choice?
# ::tokens ["seriously", "that", "is", "NEWS", "?", ".", "So", ",", "does", "everyone", "get", "BK", "if", "they", "get", "arrested", "or", "another", "choice", "?"]
# ::lemmas ["seriously", "that", "be", "NEWS", "?", ".", "so", ",", "do", "everyone", "get", "BK", "if", "they", "get", "arrest", "or", "another", "choice", "?"]
(c32-5 / multi-sentence
       :snt1 (c32-9 / news
                    :domain (c32-1 / that)
                    :polarity (c32-0 / amr-unknown)
                    :ARG2-of (c32-8 / serious-01))
       :snt2 (c32-6 / get-01
                    :ARG0 (c32-3 / everyone)
                    :ARG1 (c32-10 / publication
                                  :name (c32-4 / name
                                               :op1 "BK"))
                    :polarity (c32-13 / amr-unknown)
                    :condition (c32-11 / or
                                       :op1 (c32-2 / arrest-01
                                                   :ARG1 c32-3)
                                       :op2 (c32-12 / choose-01
                                                    :ARG0 c32-3
                                                    :mod (c32-7 / another)))))

# ::snt The line at McDonalds was much to long.
# ::tokens ["The", "line", "at", "McDonalds", "was", "much", "to", "long", "."]
# ::lemmas ["the", "line", "at", "McDonalds", "be", "much", "to", "long", "."]
(c33-3 / long-03
       :ARG1 (c33-0 / line
                    :location (c33-4 / company
                                     :name (c33-2 / name
                                                  :op1 "McDonalds")))
       :degree (c33-1 / much))

# ::snt if he was a black killer we would've rioted an burned down our neighborhood
# ::tokens ["if", "he", "was", "a", "black", "killer", "we", "would", "'ve", "rioted", "an", "burned", "down", "our", "neighborhood"]
# ::lemmas ["if", "he", "be", "a", "black", "killer", "we", "would", "'ve", "riot", "an", "burn", "down", "our", "neighborhood"]
(c34-0 / riot-01
       :ARG0 (c34-6 / we)
       :condition (c34-4 / person
                         :ARG0-of (c34-2 / kill-01)
                         :ARG1-of (c34-1 / black-05)
                         :domain (c34-7 / he))
       :ARG0-of (c34-3 / burn-01
                       :ARG1 (c34-5 / neighborhood
                                    :poss c34-6)))

# ::snt How sweet. That was really nice of them! See instead of shooting an Armed kid, they treet him to Burgers! Oh white kid in NC
# ::tokens ["How", "sweet", ".", "That", "was", "really", "nice", "of", "them", "!", "See", "instead", "of", "shooting", "an", "Armed", "kid", ",", "they", "treet", "him", "to", "Burgers", "!", "Oh", "white", "kid", "in", "NC"]
# ::lemmas ["how", "sweet", ".", "that", "be", "really", "nice", "of", "they", "!", "see", "instead", "of", "shoot", "an", "armed", "kid", ",", "they", "treet", "he", "to", "Burgers", "!", "oh", "white", "kid", "in", "NC"]
(c35-18 / multi-sentence
        :snt1 (c35-12 / sweet-03
                      :degree (c35-0 / so))
        :snt2 (c35-6 / nice-01
                     :ARG1 (c35-1 / that)
                     :ARG2 (c35-2 / they)
                     :degree (c35-8 / really))
        :snt3 (c35-5 / see-01
                     :ARG0 (c35-17 / you)
                     :ARG1 (c35-10 / treet-00
                                   :ARG0 (c35-19 / they)
                                   :ARG1 (c35-9 / kid
                                                :ARG1-of (c35-15 / arm-01))
                                   :beneficiary (c35-14 / company
                                                        :name (c35-11 / name
                                                                      :op1 "Burger's"))
                                   :ARG1-of (c35-4 / instead-of-91
                                                   :ARG2 (c35-21 / shoot-02
                                                                 :ARG0 c35-19
                                                                 :ARG1 c35-9)))
                     :mode imperative)
        :snt4 (c35-3 / kid
                     :ARG1-of (c35-7 / white-02)
                     :location (c35-13 / state
                                       :name (c35-16 / name
                                                     :op1 "NC"))
                     :mod (c35-20 / oh)))

# ::snt I would have expected him to choose Chick-Fil-A.
# ::tokens ["I", "would", "have", "expected", "him", "to", "choose", "Chick", "-", "Fil", "-", "A."]
# ::lemmas ["i", "would", "have", "expect", "he", "to", "choose", "Chick", "-", "Fil", "-", "A."]
(c36-0 / expect-01
       :ARG0 (c36-1 / i)
       :ARG1 (c36-5 / choose-01
                    :ARG0 (c36-4 / he)
                    :ARG1 (c36-3 / organization
                                 :name (c36-2 / name
                                              :op1 "Chick-Fil-A"))))

# ::snt I'm not sure I understand the value of this information.
# ::tokens ["I", "'m", "not", "sure", "I", "understand", "the", "value", "of", "this", "information", "."]
# ::lemmas ["i", "be", "not", "sure", "i", "understand", "the", "value", "of", "this", "information", "."]
(c37-3 / sure-02
       :ARG0 (c37-2 / i)
       :ARG1 (c37-1 / understand-01
                    :ARG0 c37-2
                    :ARG1 (c37-4 / value-01
                                 :ARG1 (c37-5 / information
                                              :mod (c37-0 / this))))
       :polarity -)

# ::snt what? They fed a prisoner? Holy shit.
# ::tokens ["what", "?", "They", "fed", "a", "prisoner", "?", "Holy", "shit", "."]
# ::lemmas ["what", "?", "they", "feed", "a", "prisoner", "?", "holy", "shit", "."]
(c38-2 / multi-sentence
       :snt1 (c38-0 / amr-unknown)
       :snt2 (c38-6 / feed-01
                    :ARG0 (c38-1 / they)
                    :ARG2 (c38-5 / person
                                 :ARG1-of (c38-3 / imprison-01)))
       :snt3 (c38-4 / shit
                    :mod (c38-7 / holy)
                    :mode expressive))

# ::snt Maybe they were trying to poison him?
# ::tokens ["Maybe", "they", "were", "trying", "to", "poison", "him", "?"]
# ::lemmas ["maybe", "they", "be", "try", "to", "poison", "he", "?"]
(c39-4 / possible-01
       :polarity (c39-0 / amr-unknown)
       :ARG1 (c39-1 / try-01
                    :ARG0 (c39-2 / they)
                    :ARG1 (c39-3 / poison-01
                                 :ARG0 c39-2
                                 :ARG1 (c39-5 / he))))

# ::snt what's next? His bowel movements?
# ::tokens ["what", "'s", "next", "?", "His", "bowel", "movements", "?"]
# ::lemmas ["what", "be", "next", "?", "his", "bowel", "movement", "?"]
(c40-3 / multi-sentence
       :snt1 (c40-4 / next
                    :domain (c40-0 / amr-unknown))
       :snt2 (c40-1 / move-01
                    :ARG0 (c40-5 / he)
                    :manner (c40-2 / bowel)))

# ::snt folks get hungry
# ::tokens ["folks", "get", "hungry"]
# ::lemmas ["folk", "get", "hungry"]
(c41-1 / get-03
       :ARG1 (c41-2 / folk)
       :ARG2 (c41-0 / hunger-01
                    :ARG0 c41-2))

# ::snt you have to feed prisoners. If the canteen is shut it may have been practical plus encourages him to talk
# ::tokens ["you", "have", "to", "feed", "prisoners", ".", "If", "the", "canteen", "is", "shut", "it", "may", "have", "been", "practical", "plus", "encourages", "him", "to", "talk"]
# ::lemmas ["you", "have", "to", "feed", "prisoner", ".", "if", "the", "canteen", "be", "shut", "it", "may", "have", "be", "practical", "plus", "encourage", "he", "to", "talk"]
(c42-5 / multi-sentence
       :snt1 (c42-10 / obligate-01
                     :ARG1 (c42-4 / you)
                     :ARG2 (c42-11 / feed-01
                                   :ARG0 c42-4
                                   :ARG2 (c42-9 / person
                                                :ARG1-of (c42-7 / imprison-01))))
       :snt2 (c42-0 / and
                    :op1 (c42-6 / possible-01
                                :ARG1 (c42-1 / practical-03
                                             :ARG1 (c42-12 / it)))
                    :op2 (c42-3 / encourage-01
                                :ARG0 c42-12
                                :ARG1 c42-9
                                :ARG2 (c42-2 / talk-01
                                             :ARG0 c42-9))
                    :condition (c42-8 / shut-01
                                      :ARG1 (c42-13 / canteen))))

# ::snt no shakles or handcuffs bad boy
# ::tokens ["no", "shakles", "or", "handcuffs", "bad", "boy"]
# ::lemmas ["no", "shakle", "or", "handcuff", "bad", "boy"]
(c43-4 / say-01
       :ARG0 (c43-3 / i)
       :ARG1 (c43-5 / or
                    :op1 (c43-0 / shakle)
                    :op2 (c43-6 / handcuff-01)
                    :polarity -)
       :ARG2 (c43-1 / boy
                    :ARG1-of (c43-2 / bad-07)))

# ::snt U know... Smh : Cops bought the alleged church shooter Burger King hours after killings
# ::tokens ["U", "know", "...", "Smh", ":", "Cops", "bought", "the", "alleged", "church", "shooter", "Burger", "King", "hours", "after", "killings"]
# ::lemmas ["u", "know", "...", "smh", ":", "Cops", "buy", "the", "allege", "church", "shooter", "Burger", "King", "hours", "after", "killing"]
(c44-7 / multi-sentence
       :snt1 (c44-4 / know-01
                    :ARG0 (c44-6 / you))
       :snt2 (c44-3 / buy-01
                    :ARG0 (c44-17 / cop)
                    :ARG1 (c44-9 / company
                                 :name (c44-14 / name
                                               :op1 "Burger"
                                               :op2 "King")
                                 :mod (c44-15 / person
                                              :ARG0-of (c44-13 / shoot-02)
                                              :ARG1-of (c44-0 / allege-01)
                                              :ARG0-of (c44-16 / have-org-role-91
                                                               :ARG1 (c44-5 / church))
                                              :ARG4-of c44-3))
                    :time (c44-12 / after
                                  :op1 (c44-10 / kill-01
                                               :ARG1 c44-15)
                                  :quant (c44-8 / multiple
                                                :op1 (c44-2 / temporal-quantity
                                                            :unit (c44-11 / hour)
                                                            :quant 1)))
                    :mod (c44-1 / sigh-02
                                :mode expressive)))

# ::snt Southern hospitality I imagine. At least they caught him.
# ::tokens ["Southern", "hospitality", "I", "imagine", ".", "At", "least", "they", "caught", "him", "."]
# ::lemmas ["southern", "hospitality", "i", "imagine", ".", "at", "least", "they", "catch", "he", "."]
(c45-3 / multi-sentence
       :snt1 (c45-5 / imagine-01
                    :ARG0 (c45-2 / i)
                    :ARG1 (c45-7 / hospitality
                                 :mod (c45-6 / south)))
       :snt2 (c45-8 / catch-01
                    :ARG0 (c45-1 / they)
                    :ARG1 (c45-4 / he)
                    :mod (c45-0 / at-least)))

# ::snt that's smart police tactics. What do yall expect? Just because he is a criminal doesn't mean he deserves to starve to death
# ::tokens ["that", "'s", "smart", "police", "tactics", ".", "What", "do", "y", "all", "expect", "?", "Just", "because", "he", "is", "a", "criminal", "does", "n't", "mean", "he", "deserves", "to", "starve", "to", "death"]
# ::lemmas ["that", "be", "smart", "police", "tactic", ".", "what", "do", "you", "all", "expect", "?", "just", "because", "he", "be", "a", "criminal", "do", "not", "mean", "he", "deserve", "to", "starve", "to", "death"]
(c46-9 / multi-sentence
       :snt1 (c46-2 / tactics
                    :ARG1-of (c46-12 / smart-06)
                    :mod (c46-13 / police)
                    :domain (c46-6 / that))
       :snt2 (c46-4 / expect-01
                    :ARG0 (c46-8 / you
                                 :mod (c46-0 / all))
                    :ARG1 (c46-16 / amr-unknown))
       :snt3 (c46-5 / mean-01
                    :ARG1 (c46-14 / cause-01
                                  :ARG0 (c46-11 / criminal-03
                                                :ARG2 (c46-15 / he))
                                  :ARG1 (c46-7 / deserve-01
                                               :ARG0 c46-15
                                               :ARG1 (c46-1 / starve-01
                                                            :ARG1 c46-15
                                                            :degree (c46-3 / die-01
                                                                           :ARG1 c46-15)))
                                  :mod (c46-10 / just))
                    :polarity -))

# ::snt if that's true that wrong on so many levels
# ::tokens ["if", "that", "'s", "true", "that", "wrong", "on", "so", "many", "levels"]
# ::lemmas ["if", "that", "be", "true", "that", "wrong", "on", "so", "many", "level"]
(c47-4 / wrong-04
       :ARG1 (c47-0 / that)
       :condition (c47-1 / true-01
                         :ARG1 c47-0)
       :prep-on (c47-5 / level
                       :quant (c47-2 / many
                                     :mod (c47-3 / so))))

# ::snt : Cops bought the alleged church shooter Burger King hours after killings
# ::tokens [":", "Cops", "bought", "the", "alleged", "church", "shooter", "Burger", "King", "hours", "after", "killings"]
# ::lemmas [":", "cop", "buy", "the", "allege", "church", "shooter", "Burger", "King", "hours", "after", "killing"]
(c48-2 / buy-01
       :ARG0 (c48-12 / cop)
       :ARG1 (c48-6 / company
                    :name (c48-10 / name
                                  :op1 "Burger"
                                  :op2 "King")
                    :mod (c48-9 / person
                                :ARG0-of (c48-8 / shoot-02
                                                :ARG1 (c48-3 / church)
                                                :ARG1-of (c48-0 / allege-01))
                                :ARG4-of c48-2))
       :time (c48-7 / after
                    :op1 (c48-4 / kill-01
                                :ARG1 c48-9)
                    :quant (c48-5 / multiple
                                  :op1 (c48-1 / temporal-quantity
                                              :unit (c48-11 / hour)
                                              :quant 1))))

# ::snt No beating him up in custody to die for this guy, nope.
# ::tokens ["No", "beating", "him", "up", "in", "custody", "to", "die", "for", "this", "guy", ",", "nope", "."]
# ::lemmas ["no", "beat", "he", "up", "in", "custody", "to", "die", "for", "this", "guy", ",", "nope", "."]
(c49-2 / beat-up-05
       :ARG1 (c49-5 / he)
       :location (c49-4 / custody)
       :purpose (c49-6 / die-01
                       :ARG1 c49-5)
       :ARG1-of (c49-1 / request-confirmation-91)
       :beneficiary (c49-3 / guy
                           :mod (c49-0 / this))
       :polarity -)
