# ::snt Except he wasn't being interrogated by the Shelby police. He was being held for the feds.
# ::tokens ["Except", "he", "was", "n't", "being", "interrogated", "by", "the", "Shelby", "police", ".", "He", "was", "being", "held", "for", "the", "feds", "."]
# ::lemmas ["except", "he", "be", "not", "be", "interrogate", "by", "the", "Shelby", "police", ".", "he", "be", "be", "hold", "for", "the", "fed", "."]
(c1-2 / multi-sentence
      :snt1 (c1-0 / except-01
                  :ARG1 (c1-5 / interrogate-01
                              :ARG0 (c1-7 / police
                                          :mod (c1-10 / city
                                                      :name (c1-8 / name
                                                                  :op1 "Shelby")))
                              :ARG1 (c1-9 / he)
                              :polarity -))
      :snt2 (c1-4 / hold-01
                  :ARG1 (c1-6 / he)
                  :beneficiary (c1-3 / government-organization
                                     :name (c1-1 / name
                                                 :op1 "Federal"
                                                 :op2 "Government"))))

# ::snt bullshit. Should have given him standard food like all suspects.
# ::tokens ["bullshit", ".", "Should", "have", "given", "him", "standard", "food", "like", "all", "suspects", "."]
# ::lemmas ["bullshit", ".", "should", "have", "give", "he", "standard", "food", "like", "all", "suspect", "."]
(c2-5 / multi-sentence
      :snt1 (c2-3 / bullshit-01)
      :snt2 (c2-2 / recommend-01
                  :ARG1 (c2-4 / give-01
                              :ARG1 (c2-9 / food
                                          :ARG1-of (c2-7 / standard-02))
                              :ARG2 (c2-10 / he)
                              :ARG1-of (c2-6 / resemble-01
                                             :ARG2 (c2-8 / person
                                                         :ARG2-of (c2-0 / suspect-01)
                                                         :mod (c2-1 / all))))))

# ::snt Looks like he'll be well looked after in jail.Star prisoner.
# ::tokens ["Looks", "like", "he", "'ll", "be", "well", "looked", "after", "in", "jail", ".", "Star", "prisoner", "."]
# ::lemmas ["look", "like", "he", "'ll", "be", "well", "look", "after", "in", "jail", ".", "star", "prisoner", "."]
(c3-2 / multi-sentence
      :snt1 (c3-7 / look-02
                  :ARG1 (c3-0 / look-after-07
                              :ARG1 (c3-8 / he)
                              :ARG1-of (c3-6 / well-09)
                              :location (c3-1 / jail)))
      :snt2 (c3-4 / person
                  :name (c3-5 / name
                              :op1 "Star")
                  :ARG1-of (c3-3 / imprison-01)))

# ::snt He is not what I would call a sane person. He is twisted.
# ::tokens ["He", "is", "not", "what", "I", "would", "call", "a", "sane", "person", ".", "He", "is", "twisted", "."]
# ::lemmas ["he", "be", "not", "what", "i", "would", "call", "a", "sane", "person", ".", "he", "be", "twist", "."]
(c4-2 / multi-sentence
      :snt1 (c4-0 / thing
                  :ARG1-of (c4-8 / call-01
                                 :ARG0 (c4-4 / i)
                                 :ARG2 (c4-6 / person
                                             :mod (c4-5 / sane)))
                  :domain (c4-7 / he)
                  :polarity -)
      :snt2 (c4-1 / twisted-02
                  :ARG1 (c4-3 / he)))

# ::snt my reaction exactly.
# ::tokens ["my", "reaction", "exactly", "."]
# ::lemmas ["my", "reaction", "exactly", "."]
(c5-1 / react-01
      :ARG0 (c5-0 / i)
      :manner (c5-2 / exact))

# ::snt You have to really be a dumbass to get fired from a volunteer job.
# ::tokens ["You", "have", "to", "really", "be", "a", "dumbass", "to", "get", "fired", "from", "a", "volunteer", "job", "."]
# ::lemmas ["you", "have", "to", "really", "be", "a", "dumbass", "to", "get", "fire", "from", "a", "volunteer", "job", "."]
(c6-3 / infer-01
      :ARG1 (c6-6 / dumbass
                  :domain (c6-2 / you)
                  :ARG1-of (c6-0 / real-04))
      :ARG2 (c6-5 / fire-02
                  :ARG0 (c6-1 / job
                              :ARG0-of (c6-4 / volunteer-01))
                  :ARG1 c6-2))

# ::snt kinda like bullet proof vest. crawl back under your rock, Tiffany
# ::tokens ["kinda", "like", "bullet", "proof", "vest", ".", "crawl", "back", "under", "your", "rock", ",", "Tiffany"]
# ::lemmas ["kinda", "like", "bullet", "proof", "vest", ".", "crawl", "back", "under", "your", "rock", ",", "Tiffany"]
(c7-4 / multi-sentence
      :snt1 (c7-0 / resemble-01
                  :ARG2 (c7-11 / vest
                               :ARG0-of (c7-9 / proof-02
                                              :ARG1 (c7-1 / bullet)))
                  :degree (c7-2 / kind-of))
      :snt2 (c7-8 / say-01
                  :ARG1 (c7-12 / crawl-01
                               :ARG0 (c7-5 / person
                                           :name (c7-10 / name
                                                        :op1 "Tiffany"))
                               :ARG1 (c7-7 / under
                                           :op1 (c7-6 / rock
                                                      :poss c7-5))
                               :direction (c7-3 / back)
                               :mode imperative)
                  :ARG2 c7-5))

# ::snt oh my fuck ng god...
# ::tokens ["oh", "my", "fuck", "ng", "god", "..."]
# ::lemmas ["oh", "my", "fuck", "ng", "god", "..."]
(c8-2 / person
      :name (c8-3 / name
                  :op1 "God")
      :mod (c8-1 / fuck
                 :mode expressive)
      :poss (c8-0 / i)
      :mode expressive)

# ::snt giving shooter a hashtag is giving killer desired fame.
# ::tokens ["giving", "shooter", "a", "hashtag", "is", "giving", "killer", "desired", "fame", "."]
# ::lemmas ["give", "shooter", "a", "hashtag", "be", "give", "killer", "desire", "fame", "."]
(c9-3 / give-01
      :ARG0 (c9-2 / give-01
                  :ARG0 (c9-1 / you)
                  :ARG1 (c9-8 / hashtag)
                  :ARG2 (c9-6 / person
                              :ARG0-of (c9-5 / shoot-02)))
      :ARG1 (c9-7 / fame-01
                  :ARG1 (c9-4 / person
                              :ARG0-of (c9-0 / kill-01))
                  :ARG1-of (c9-9 / desire-01
                                 :ARG0 c9-4))
      :ARG2 c9-4)

# ::snt something's wrong...
# ::tokens ["something", "'s", "wrong", "..."]
# ::lemmas ["something", "be", "wrong", "..."]
(c10-0 / wrong-02
       :ARG1 (c10-1 / something))

# ::snt you go Heather lol tell like it is to this fool
# ::tokens ["you", "go", "Heather", "lol", "tell", "like", "it", "is", "to", "this", "fool"]
# ::lemmas ["you", "go", "heather", "lol", "tell", "like", "it", "be", "to", "this", "fool"]
(c11-6 / say-01
       :ARG0 (c11-5 / i)
       :ARG1 (c11-3 / go-02
                    :ARG0 (c11-7 / person
                                 :name (c11-8 / name
                                              :op1 "Heather"))
                    :ARG1-of (c11-2 / resemble-01
                                    :ARG2 (c11-4 / go-02
                                                 :ARG0 (c11-10 / fool
                                                               :mod (c11-0 / this))
                                                 :ARG1-of c11-2
                                                 :ARG2 c11-10)))
       :ARG2 c11-7
       :ARG2-of (c11-9 / laugh-01
                       :ARG0 c11-5
                       :manner (c11-1 / loud)
                       :mode expressive))

# ::snt That is just an interview ploy. It helps to get stupid people to talk.
# ::tokens ["That", "is", "just", "an", "interview", "ploy", ".", "It", "helps", "to", "get", "stupid", "people", "to", "talk", "."]
# ::lemmas ["that", "be", "just", "an", "interview", "ploy", ".", "it", "help", "to", "get", "stupid", "people", "to", "talk", "."]
(c12-4 / multi-sentence
       :snt1 (c12-9 / ploy
                    :mod (c12-7 / interview-01)
                    :domain (c12-0 / that)
                    :mod (c12-1 / just))
       :snt2 (c12-10 / help-01
                     :ARG0 (c12-2 / it)
                     :ARG1 (c12-5 / get-04
                                  :ARG1 (c12-3 / talk-01
                                               :ARG0 (c12-6 / person
                                                            :mod (c12-8 / stupid))))))

# ::snt You seem to be confused. There was an overnight manhunt.
# ::tokens ["You", "seem", "to", "be", "confused", ".", "There", "was", "an", "overnight", "manhunt", "."]
# ::lemmas ["you", "seem", "to", "be", "confuse", ".", "there", "be", "an", "overnight", "manhunt", "."]
(c13-2 / multi-sentence
       :snt1 (c13-3 / seem-01
                    :ARG1 (c13-5 / confuse-01
                                 :ARG1 (c13-1 / you)))
       :snt2 (c13-0 / manhunt
                    :time (c13-4 / overnight)))

# ::snt This makes me sick!!!
# ::tokens ["This", "makes", "me", "sick", "!", "!", "!"]
# ::lemmas ["this", "make", "i", "sick", "!", "!", "!"]
(c14-1 / make-02
       :ARG0 (c14-0 / this)
       :ARG1 (c14-2 / sick-05
                    :ARG0 c14-0
                    :ARG1 (c14-3 / i)))

# ::snt Brothers in arms
# ::tokens ["Brothers", "in", "arms"]
# ::lemmas ["brother", "in", "arm"]
(c15-0 / brother-in-arms)

# ::snt as we were saying...
# ::tokens ["as", "we", "were", "saying", "..."]
# ::lemmas ["as", "we", "be", "say", "..."]
(c16-1 / say-01
       :ARG0 (c16-0 / we))

# ::snt oh really?
# ::tokens ["oh", "really", "?"]
# ::lemmas ["oh", "really", "?"]
(c17-2 / real-04
       :polarity (c17-0 / amr-unknown)
       :mod (c17-1 / oh))

# ::snt know that sounds absurd, but it is a standard practice when you're never getting out of prison!
# ::tokens ["know", "that", "sounds", "absurd", ",", "but", "it", "is", "a", "standard", "practice", "when", "you", "'re", "never", "getting", "out", "of", "prison", "!"]
# ::lemmas ["know", "that", "sound", "absurd", ",", "but", "it", "be", "a", "standard", "practice", "when", "you", "be", "never", "get", "out", "of", "prison", "!"]
(c18-12 / contrast-01
        :ARG1 (c18-4 / know-01
                     :ARG0 (c18-8 / i)
                     :ARG1 (c18-9 / sound-01
                                  :ARG1 (c18-2 / that)
                                  :ARG2 (c18-0 / absurd)))
        :ARG2 (c18-10 / practice-01
                      :ARG1 c18-2
                      :ARG1-of (c18-1 / standard-02)
                      :time (c18-6 / get-04
                                   :ARG0 (c18-5 / you)
                                   :ARG1 (c18-11 / out-06
                                                 :ARG1 c18-5
                                                 :ARG2 (c18-7 / prison))
                                   :time (c18-3 / ever)
                                   :polarity -)))

# ::snt Pro tip: check your sources before you make wild claims. This is from the police chief of Shelby NC himself to the Charlotte NP.
# ::tokens ["Pro", "tip", ":", "check", "your", "sources", "before", "you", "make", "wild", "claims", ".", "This", "is", "from", "the", "police", "chief", "of", "Shelby", "NC", "himself", "to", "the", "Charlotte", "NP", "."]
# ::lemmas ["pro", "tip", ":", "check", "your", "source", "before", "you", "make", "wild", "claim", ".", "this", "be", "from", "the", "police", "chief", "of", "Shelby", "NC", "himself", "to", "the", "Charlotte", "NP", "."]
(c19-17 / multi-sentence
        :snt1 (c19-0 / tip-05
                     :ARG1 (c19-16 / you)
                     :ARG2 (c19-11 / check-01
                                   :ARG0 c19-16
                                   :ARG1 (c19-2 / thing
                                                :ARG2-of (c19-9 / source-01
                                                                :ARG0 c19-16))
                                   :time (c19-1 / before
                                                :op1 (c19-13 / claim-01
                                                             :ARG0 c19-16
                                                             :mod (c19-4 / wild))))
                     :mod (c19-14 / pro))
        :snt2 (c19-8 / this
                     :source (c19-12 / person
                                     :ARG0-of (c19-10 / have-org-role-91
                                                      :ARG1 (c19-15 / police)
                                                      :ARG2 (c19-6 / chief))
                                     :location (c19-5 / city
                                                      :name (c19-3 / name
                                                                   :op1 "Shelby"
                                                                   :op2 "NC")))
                     :destination (c19-18 / organization
                                          :name (c19-7 / name
                                                       :op1 "Charlotte"
                                                       :op2 "NP"))))

# ::snt They were transporting him- not interrogating him.
# ::tokens ["They", "were", "transporting", "him-", "not", "interrogating", "him", "."]
# ::lemmas ["they", "be", "transport", "him-", "not", "interrogate", "he", "."]
(c20-4 / contrast-01
       :ARG1 (c20-0 / transport-01
                    :ARG0 (c20-1 / they)
                    :ARG1 (c20-3 / he))
       :ARG2 (c20-2 / interrogate-01
                    :ARG0 c20-1
                    :ARG2 c20-3
                    :polarity -))

# ::snt how newsworthy
# ::tokens ["how", "newsworthy"]
# ::lemmas ["how", "newsworthy"]
(c21-1 / newsworthy
       :degree (c21-0 / so))

# ::snt Nope. No sane human being does, ma'am.
# ::tokens ["Nope", ".", "No", "sane", "human", "being", "does", ",", "ma'am", "."]
# ::lemmas ["nope", ".", "no", "sane", "human", "be", "do", ",", "ma'am", "."]
(c22-3 / multi-sentence
       :snt1 (c22-5 / nope)
       :snt2 (c22-7 / do-02
                    :ARG0 (c22-1 / being
                                 :mod (c22-6 / human)
                                 :mod (c22-4 / sane))
                    :ARG1-of (c22-0 / say-01
                                    :ARG2 (c22-2 / ma'am))
                    :polarity -))

# ::snt go AmeriKKKa! Execute Blacks &amp; award you with a fucking Burger "KING" meal
# ::tokens ["go", "AmeriKKKa", "!", "Execute", "Blacks", "&", "amp", ";", "award", "you", "with", "a", "fucking", "Burger", "\"", "KING", "\"", "meal"]
# ::lemmas ["go", "amerikkka", "!", "Execute", "Blacks", "&", "amp", ";", "award", "you", "with", "a", "fucking", "Burger", "\"", "KING", "\"", "meal"]
(c23-8 / multi-sentence
       :snt1 (c23-9 / go-05
                    :ARG0 (c23-7 / you)
                    :ARG1 (c23-12 / person
                                  :name (c23-13 / name
                                                :op1 "AmeriKKKa"))
                    :mode imperative)
       :snt2 (c23-0 / and
                    :op1 (c23-3 / execute-01
                                :ARG0 (c23-4 / you)
                                :ARG1 (c23-10 / person
                                              :ARG1-of (c23-5 / black-05))
                                :mode imperative)
                    :op2 (c23-15 / abort-01
                                 :ARG0 c23-4
                                 :mode imperative)
                    :op3 (c23-1 / award-01
                                :ARG0 c23-4
                                :ARG1 (c23-6 / meal
                                             :mod (c23-2 / thing
                                                         :name (c23-11 / name
                                                                       :op1 "Burger"
                                                                       :op2 "King")
                                                         :mod (c23-14 / fucking)))
                                :ARG2 c23-4
                                :mode imperative)))

# ::snt guys cmon, really? This is fake. Why would you spread such ridiculous rumors? Does anybody fact check on social media?
# ::tokens ["guys", "cmon", ",", "really", "?", "This", "is", "fake", ".", "Why", "would", "you", "spread", "such", "ridiculous", "rumors", "?", "Does", "anybody", "fact", "check", "on", "social", "media", "?"]
# ::lemmas ["guy", "cmon", ",", "really", "?", "this", "be", "fake", ".", "why", "would", "you", "spread", "such", "ridiculous", "rumor", "?", "do", "anybody", "fact", "check", "on", "social", "medium", "?"]
(c24-17 / multi-sentence
        :snt1 (c24-9 / say-01
                     :ARG1 (c24-6 / real-04
                                  :polarity (c24-12 / amr-unknown))
                     :ARG2 (c24-7 / guy))
        :snt2 (c24-5 / fake-02
                     :ARG1 (c24-1 / this))
        :snt3 (c24-11 / cause-01
                      :ARG0 (c24-10 / amr-unknown)
                      :ARG1 (c24-0 / spread-03
                                   :ARG0 (c24-16 / you)
                                   :ARG1 (c24-3 / rumor-01
                                                :ARG1-of (c24-14 / ridiculous-02
                                                                 :degree (c24-4 / such)))))
        :snt4 (c24-13 / check-01
                      :ARG0 (c24-2 / anybody)
                      :ARG1 (c24-15 / fact)
                      :location (c24-18 / social-media)
                      :polarity (c24-8 / amr-unknown)))

# ::snt Ain't that some shit?????
# ::tokens ["Ai", "n't", "that", "some", "shit", "?", "?", "?", "?", "?"]
# ::lemmas ["be", "not", "that", "some", "shit", "?", "?", "?", "?", "?"]
(c25-3 / shit
       :polarity (c25-0 / amr-unknown)
       :mod (c25-1 / some)
       :domain (c25-2 / that))

# ::snt another fine example of white privilege...this mass murderer being treated like he was arrested for parking tickets..WTF Amerikka
# ::tokens ["another", "fine", "example", "of", "white", "privilege", "...", "this", "mass", "murderer", "being", "treated", "like", "he", "was", "arrested", "for", "parking", "tickets", "..", "WTF", "Amerikka"]
# ::lemmas ["another", "fine", "example", "of", "white", "privilege", "...", "this", "mass", "murderer", "be", "treat", "like", "he", "be", "arrest", "for", "parking", "ticket", "..", "WTF", "amerikka"]
(c26-18 / multi-sentence
        :snt1 (c26-16 / exemplify-01
                      :ARG0 (c26-14 / privilege-01
                                    :ARG1 (c26-12 / person
                                                  :ARG1-of (c26-4 / white-02)))
                      :ARG1 (c26-0 / treat-01
                                   :ARG1 (c26-15 / person
                                                 :ARG0-of (c26-6 / murder-01
                                                                 :mod (c26-9 / mass))
                                                 :mod (c26-2 / this))
                                   :ARG2 (c26-11 / arrest-01
                                                 :ARG1 c26-15
                                                 :ARG2 (c26-7 / ticket-02
                                                              :ARG1 c26-15
                                                              :ARG2 (c26-13 / park-01))))
                      :mod (c26-10 / another)
                      :ARG1-of (c26-5 / fine-04))
        :snt2 (c26-1 / amr-unknown
                     :mod (c26-17 / fuck
                                  :mode expressive)
                     :domain (c26-8 / event
                                    :name (c26-3 / name
                                                 :op1 "Amerikka"))))

# ::snt who in their right mind would give a fuss if the savage was hungry unless they to were savages azz cops
# ::tokens ["who", "in", "their", "right", "mind", "would", "give", "a", "fuss", "if", "the", "savage", "was", "hungry", "unless", "they", "to", "were", "savages", "azz", "cops"]
# ::lemmas ["who", "in", "their", "right", "mind", "would", "give", "a", "fuss", "if", "the", "savage", "be", "hungry", "unless", "they", "to", "be", "savage", "azz", "cop"]
(c27-8 / have-condition-91
       :ARG1 (c27-7 / fuss-01
                    :ARG0 (c27-0 / amr-unknown
                                 :prep-in (c27-3 / mind
                                                 :ARG1-of (c27-2 / right-03)))
                    :condition (c27-4 / hunger-01
                                      :ARG0 (c27-6 / savage)))
       :ARG2 (c27-9 / cop
                    :mod (c27-5 / azz)
                    :domain (c27-1 / savage)))

# ::snt The klan!!
# ::tokens ["The", "klan", "!", "!"]
# ::lemmas ["the", "klan", "!", "!"]
(c28-0 / klan
       :mode expressive)

# ::snt of course he shot a senator who was for police wearing body cameras. wake the fuck up
# ::tokens ["of", "course", "he", "shot", "a", "senator", "who", "was", "for", "police", "wearing", "body", "cameras", ".", "wake", "the", "fuck", "up"]
# ::lemmas ["of", "course", "he", "shoot", "a", "senator", "who", "be", "for", "police", "wear", "body", "camera", ".", "wake", "the", "fuck", "up"]
(c29-3 / multi-sentence
       :snt1 (c29-6 / shoot-02
                    :ARG0 (c29-12 / he)
                    :ARG1 (c29-7 / person
                                 :ARG0-of (c29-5 / have-org-role-91
                                                 :ARG1 (c29-4 / government-organization
                                                              :name (c29-8 / name
                                                                           :op1 "Senate")))
                                 :ARG0-of (c29-10 / wear-01
                                                  :ARG1 (c29-13 / camera
                                                                :mod (c29-0 / body))))
                    :mod (c29-9 / of-course))
       :snt2 (c29-1 / wake-up-02
                    :ARG1 (c29-2 / you)
                    :mod (c29-11 / fuck
                                 :mode expressive)
                    :mode imperative))

# ::snt They could give him a burger but couldnt give medical care ...
# ::tokens ["They", "could", "give", "him", "a", "burger", "but", "could", "nt", "give", "medical", "care", "..."]
# ::lemmas ["they", "could", "give", "he", "a", "burger", "but", "could", "not", "give", "medical", "care", "..."]
(c30-9 / contrast-01
       :ARG1 (c30-7 / possible-01
                    :ARG1 (c30-2 / give-01
                                 :ARG0 (c30-0 / they)
                                 :ARG1 (c30-1 / burger)
                                 :ARG2 (c30-8 / he)))
       :ARG2 (c30-3 / possible-01
                    :ARG1 (c30-4 / give-01
                                 :ARG0 c30-0
                                 :ARG1 (c30-5 / care-03
                                              :mod (c30-6 / medicine))
                                 :ARG2 c30-8)
                    :polarity -))

# ::snt 's account is temporarily unavailable because it violates the Twitter Media Policy. Learn more.
# ::tokens ["'s", "account", "is", "temporarily", "unavailable", "because", "it", "violates", "the", "Twitter", "Media", "Policy", ".", "Learn", "more", "."]
# ::lemmas ["'s", "account", "be", "temporarily", "unavailable", "because", "it", "violate", "the", "Twitter", "Media", "Policy", ".", "learn", "more", "."]
(c31-4 / multi-sentence
       :snt1 (c31-12 / cause-01
                     :ARG0 (c31-10 / violate-01
                                   :ARG0 (c31-0 / account
                                                :poss (c31-8 / publication
                                                             :name (c31-9 / name
                                                                          :op1 "Twitter")))
                                   :ARG1 (c31-5 / policy-01
                                                :ARG1 (c31-2 / media)))
                     :ARG1 (c31-6 / available-02
                                  :ARG2 c31-0
                                  :duration (c31-1 / temporary)
                                  :polarity -))
       :snt2 (c31-11 / learn-01
                     :ARG0 (c31-3 / you)
                     :ARG1 (c31-7 / more)
                     :mode imperative))

# ::snt oops, that's how I read it
# ::tokens ["oops", ",", "that", "'s", "how", "I", "read", "it"]
# ::lemmas ["oop", ",", "that", "be", "how", "i", "read", "it"]
(c32-1 / read-01
       :ARG0 (c32-2 / i)
       :ARG1 (c32-4 / it)
       :manner (c32-0 / that)
       :mod (c32-3 / oops
                   :mode expressive))

# ::snt check out our post on that!
# ::tokens ["check", "out", "our", "post", "on", "that", "!"]
# ::lemmas ["check", "out", "our", "post", "on", "that", "!"]
(c33-4 / check-out-05
       :ARG0 (c33-1 / you)
       :ARG1 (c33-2 / post-01
                    :ARG0 (c33-3 / we)
                    :topic (c33-0 / that))
       :mode imperative)

# ::snt right!
# ::tokens ["right", "!"]
# ::lemmas ["right", "!"]
(c34-0 / right-06
       :mode expressive)

# ::snt i would've put rat poison in it
# ::tokens ["i", "would", "'ve", "put", "rat", "poison", "in", "it"]
# ::lemmas ["i", "would", "'ve", "put", "rat", "poison", "in", "it"]
(c35-3 / put-01
       :ARG0 (c35-2 / i)
       :ARG1 (c35-1 / poison-02
                    :ARG0 c35-2
                    :ARG1 (c35-0 / rat))
       :ARG2 (c35-4 / it))

# ::snt I bet the police will claim 's Burger King meal on their expense report and get reimbursed for it.
# ::tokens ["I", "bet", "the", "police", "will", "claim", "'s", "Burger", "King", "meal", "on", "their", "expense", "report", "and", "get", "reimbursed", "for", "it", "."]
# ::lemmas ["i", "bet", "the", "police", "will", "claim", "'s", "Burger", "King", "meal", "on", "their", "expense", "report", "and", "get", "reimburse", "for", "it", "."]
(c36-3 / bet-01
       :ARG0 (c36-7 / i)
       :ARG2 (c36-0 / and
                    :op1 (c36-10 / claim-01
                                 :ARG0 (c36-8 / police)
                                 :ARG1 (c36-4 / meal
                                              :source (c36-5 / company
                                                             :name (c36-9 / name
                                                                          :op1 "Burger"
                                                                          :op2 "King")))
                                 :location (c36-1 / report-01
                                                  :ARG1 (c36-2 / expend-01
                                                               :ARG0 c36-8)))
                    :op2 (c36-6 / reimburse-01
                                :ARG2 c36-8
                                :ARG3 c36-10)))

# ::snt nothing unusual about buying food for suspect. Build rapport. Get a confession.
# ::tokens ["nothing", "unusual", "about", "buying", "food", "for", "suspect", ".", "Build", "rapport", ".", "Get", "a", "confession", "."]
# ::lemmas ["nothing", "unusual", "about", "buy", "food", "for", "suspect", ".", "build", "rapport", ".", "get", "a", "confession", "."]
(c37-3 / multi-sentence
       :snt1 (c37-7 / nothing
                    :mod (c37-5 / usual
                                :polarity -)
                    :topic (c37-1 / buy-01
                                  :ARG1 (c37-9 / food)
                                  :ARG4 (c37-8 / person
                                               :ARG2-of (c37-6 / suspect-01))))
       :snt2 (c37-2 / build-01
                    :ARG1 (c37-0 / rapport))
       :snt3 (c37-4 / get-01
                    :ARG1 (c37-10 / confess-01)))

# ::snt The difference here is they weren't actively interrogating him. This was the local police holding him for the feds.
# ::tokens ["The", "difference", "here", "is", "they", "were", "n't", "actively", "interrogating", "him", ".", "This", "was", "the", "local", "police", "holding", "him", "for", "the", "feds", "."]
# ::lemmas ["the", "difference", "here", "be", "they", "be", "not", "actively", "interrogate", "he", ".", "this", "be", "the", "local", "police", "hold", "he", "for", "the", "fed", "."]
(c38-11 / differ-02
        :ARG1 (c38-5 / interrogate-01
                     :ARG0 (c38-1 / they)
                     :ARG1 (c38-10 / he)
                     :ARG1-of (c38-0 / activity-06)
                     :polarity -)
        :ARG3 (c38-7 / police
                     :ARG1-of (c38-9 / local-02)
                     :domain (c38-2 / this)
                     :ARG0-of (c38-4 / hold-01
                                     :ARG1 c38-10
                                     :beneficiary (c38-3 / government-organization
                                                         :name (c38-8 / name
                                                                      :op1 "Federal"
                                                                      :op2 "Government"))))
        :location (c38-6 / here))

# ::snt Thanks for explaining white privilege, but I've had it all my life.
# ::tokens ["Thanks", "for", "explaining", "white", "privilege", ",", "but", "I", "'ve", "had", "it", "all", "my", "life", "."]
# ::lemmas ["thank", "for", "explain", "white", "privilege", ",", "but", "i", "'ve", "have", "it", "all", "my", "life", "."]
(c39-10 / contrast-01
        :ARG1 (c39-1 / thank-01
                     :ARG0 (c39-5 / i)
                     :ARG1 (c39-3 / you)
                     :ARG2 (c39-2 / explain-01
                                  :ARG0 c39-3
                                  :ARG1 (c39-6 / privilege-01
                                               :ARG1 (c39-4 / person
                                                            :ARG1-of (c39-7 / white-02)))))
        :ARG2 (c39-9 / have-03
                     :ARG0 c39-5
                     :ARG1 c39-6
                     :duration (c39-8 / life
                                      :mod (c39-0 / all)
                                      :poss c39-5)))

# ::snt ok yeah but it sounds like he'd already confessed and everything. I think they just wanted to be nice to him.
# ::tokens ["ok", "yeah", "but", "it", "sounds", "like", "he", "'d", "already", "confessed", "and", "everything", ".", "I", "think", "they", "just", "wanted", "to", "be", "nice", "to", "him", "."]
# ::lemmas ["ok", "yeah", "but", "it", "sound", "like", "he", "would", "already", "confess", "and", "everything", ".", "i", "think", "they", "just", "want", "to", "be", "nice", "to", "he", "."]
(c40-6 / multi-sentence
       :snt1 (c40-16 / contrast-01
                     :ARG1 (c40-13 / okay-04)
                     :ARG2 (c40-10 / sound-01
                                   :ARG1 (c40-9 / it)
                                   :ARG2 (c40-0 / and
                                                :op1 (c40-7 / confess-01
                                                            :ARG0 (c40-15 / he)
                                                            :time (c40-11 / already))
                                                :op2 (c40-2 / everything))))
       :snt2 (c40-1 / think-01
                    :ARG0 (c40-3 / i)
                    :ARG1 (c40-14 / want-01
                                  :ARG0 (c40-4 / they)
                                  :ARG1 (c40-12 / nice-01
                                                :ARG0 c40-4
                                                :ARG1 (c40-8 / he))
                                  :mod (c40-5 / just))))

# ::snt meanwhile remember "fuck your breath!!"
# ::tokens ["meanwhile", "remember", "\"", "fuck", "your", "breath", "!", "!", "\""]
# ::lemmas ["meanwhile", "remember", "\"", "fuck", "your", "breath", "!", "!", "\""]
(c41-0 / remember-01
       :ARG0 (c41-2 / you)
       :ARG1 (c41-4 / fuck-01
                    :ARG1 (c41-1 / breathe-01
                                 :ARG0 c41-2)
                    :mode expressive)
       :time (c41-3 / meanwhile)
       :mode imperative)

# ::snt thats state/federal law. You have to feed those in custody. Right/wrong, they have to feed that PoS
# ::tokens ["that", "s", "state", "/", "federal", "law", ".", "You", "have", "to", "feed", "those", "in", "custody", ".", "Right", "/", "wrong", ",", "they", "have", "to", "feed", "that", "PoS"]
# ::lemmas ["that", "s", "state", "/", "federal", "law", ".", "you", "have", "to", "feed", "those", "in", "custody", ".", "right", "/", "wrong", ",", "they", "have", "to", "feed", "that", "PoS"]
(c42-17 / multi-sentence
        :snt1 (c42-9 / slash
                     :op1 (c42-10 / law
                                  :mod (c42-0 / state))
                     :op2 (c42-7 / law
                                 :mod (c42-6 / federal))
                     :domain (c42-1 / that))
        :snt2 (c42-19 / obligate-01
                      :ARG1 (c42-16 / you)
                      :ARG2 (c42-15 / feed-01
                                    :ARG0 c42-16
                                    :ARG2 (c42-14 / person
                                                  :mod (c42-2 / that)
                                                  :location (c42-11 / custody))))
        :snt3 (c42-13 / obligate-01
                      :ARG1 (c42-8 / they)
                      :ARG2 (c42-3 / feed-01
                                   :ARG0 c42-8
                                   :ARG1 (c42-18 / thing
                                                 :name (c42-4 / name
                                                              :op1 "PoS")
                                                 :mod (c42-12 / that)))
                      :ARG1-of (c42-5 / wrong-02)))

# ::snt this is how they treat a man who shot people . but they kill a man who was selling cigarettes .
# ::tokens ["this", "is", "how", "they", "treat", "a", "man", "who", "shot", "people", ".", "but", "they", "kill", "a", "man", "who", "was", "selling", "cigarettes", "."]
# ::lemmas ["this", "be", "how", "they", "treat", "a", "man", "who", "shoot", "people", ".", "but", "they", "kill", "a", "man", "who", "be", "sell", "cigarette", "."]
(c43-10 / contrast-01
        :ARG1 (c43-1 / treat-01
                     :ARG0 (c43-3 / they)
                     :ARG1 (c43-6 / man
                                  :ARG0-of (c43-8 / shoot-02
                                                  :ARG1 (c43-9 / person)))
                     :manner (c43-4 / this))
        :ARG2 (c43-5 / kill-01
                     :ARG0 c43-3
                     :ARG1 (c43-2 / man
                                  :ARG0-of (c43-0 / sell-01
                                                  :ARG1 (c43-7 / cigarette)))))

# ::snt fucking pigs these days .
# ::tokens ["fucking", "pigs", "these", "days", "."]
# ::lemmas ["fuck", "pig", "these", "days", "."]
(c44-3 / pig
       :time (c44-0 / day
                    :mod (c44-1 / this))
       :mod (c44-2 / fucking
                   :mode expressive))

# ::snt ????
# ::tokens ["?", "?", "?", "?"]
# ::lemmas ["?", "?", "?", "?"]
(c45-0 / amr-empty)

# ::snt Well, they have to take good care of their little hero!
# ::tokens ["Well", ",", "they", "have", "to", "take", "good", "care", "of", "their", "little", "hero", "!"]
# ::lemmas ["well", ",", "they", "have", "to", "take", "good", "care", "of", "their", "little", "hero", "!"]
(c46-2 / obligate-01
       :ARG1 (c46-0 / they)
       :ARG2 (c46-6 / care-03
                    :ARG0 c46-0
                    :ARG1 (c46-5 / hero
                                 :mod (c46-4 / little)
                                 :poss c46-0)
                    :ARG1-of (c46-1 / good-02))
       :mod (c46-3 / well))

# ::snt plus, they're planning to seek the death penalty... ... And who wants a skinny death row prisoner?
# ::tokens ["plus", ",", "they", "'re", "planning", "to", "seek", "the", "death", "penalty", "...", "...", "And", "who", "wants", "a", "skinny", "death", "row", "prisoner", "?"]
# ::lemmas ["plus", ",", "they", "be", "plan", "to", "seek", "the", "death", "penalty", "...", "...", "and", "who", "want", "a", "skinny", "death", "row", "prisoner", "?"]
(c47-0 / and
       :op2 (c47-10 / plan-01
                    :ARG0 (c47-3 / they)
                    :ARG1 (c47-9 / seek-01
                                 :ARG0 c47-3
                                 :ARG1 (c47-7 / penalize-01
                                              :manner (c47-13 / die-01))))
       :op3 (c47-8 / and
                   :op2 (c47-12 / want-01
                                :ARG0 (c47-4 / amr-unknown)
                                :ARG1 (c47-1 / person
                                             :ARG1-of (c47-11 / imprison-01
                                                              :manner (c47-5 / die-01))
                                             :mod (c47-6 / row
                                                         :mod (c47-2 / skinny))))))

# ::snt Since when do we have the right to not go hungry as part of our Miranda rights?
# ::tokens ["Since", "when", "do", "we", "have", "the", "right", "to", "not", "go", "hungry", "as", "part", "of", "our", "Miranda", "rights", "?"]
# ::lemmas ["since", "when", "do", "we", "have", "the", "right", "to", "not", "go", "hungry", "as", "part", "of", "our", "Miranda", "right", "?"]
(c48-1 / right-05
       :ARG1 (c48-6 / we)
       :ARG2 (c48-7 / hunger-01
                    :ARG0 c48-6
                    :part-of (c48-2 / right-05
                                    :ARG1 c48-6
                                    :mod (c48-4 / person
                                                :name (c48-5 / name
                                                             :op1 "Miranda")))
                    :polarity -)
       :time (c48-3 / since
                    :op1 (c48-0 / amr-unknown)))

# ::snt it's probably cheaper than prison food.
# ::tokens ["it", "'s", "probably", "cheaper", "than", "prison", "food", "."]
# ::lemmas ["it", "be", "probably", "cheap", "than", "prison", "food", "."]
(c49-6 / cheap-02
       :ARG1 (c49-2 / it)
       :ARG2-of (c49-5 / have-degree-91
                       :ARG1 c49-2
                       :ARG3 (c49-0 / more)
                       :ARG4 (c49-4 / food
                                    :mod (c49-3 / prison)))
       :mod (c49-1 / probable))

# ::snt they couldn't give Tamir Rice CPR??? WTF
# ::tokens ["they", "could", "n't", "give", "Tamir", "Rice", "CPR", "?", "?", "?", "WTF"]
# ::lemmas ["they", "could", "not", "give", "Tamir", "Rice", "CPR", "?", "?", "?", "WTF"]
(c50-4 / multi-sentence
       :snt1 (c50-7 / possible-01
                    :ARG1 (c50-3 / give-01
                                 :ARG0 (c50-1 / they)
                                 :ARG1 (c50-10 / CPR)
                                 :ARG2 (c50-5 / person
                                              :name (c50-8 / name
                                                           :op1 "Tamir"
                                                           :op2 "Rice")))
                    :polarity (c50-0 / amr-unknown)
                    :polarity (c50-6 / amr-unknown)
                    :polarity -)
       :snt2 (c50-2 / amr-unknown
                    :mod (c50-9 / fuck
                                :mode expressive)))
