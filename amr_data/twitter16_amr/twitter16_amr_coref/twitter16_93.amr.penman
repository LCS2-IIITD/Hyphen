# ::snt I could have told you that!
# ::tokens ["I", "could", "have", "told", "you", "that", "!"]
# ::lemmas ["i", "could", "have", "tell", "you", "that", "!"]
(c1-4 / possible-01
      :ARG1 (c1-0 / tell-01
                  :ARG0 (c1-3 / i)
                  :ARG1 (c1-1 / that)
                  :ARG2 (c1-2 / you)))

# ::snt Thank Goodness
# ::tokens ["Thank", "Goodness"]
# ::lemmas ["thank", "goodness"]
(c2-0 / thank-01
      :ARG1 (c2-1 / goodness))

# ::snt people have nothing better to do..mind your business and move on hoaxster!!
# ::tokens ["people", "have", "nothing", "better", "to", "do", "..", "mind", "your", "business", "and", "move", "on", "hoaxster", "!", "!"]
# ::lemmas ["people", "have", "nothing", "well", "to", "do", "..", "mind", "your", "business", "and", "move", "on", "hoaxster", "!", "!"]
(c3-4 / multi-sentence
      :snt1 (c3-13 / do-02
                   :ARG0 (c3-9 / person)
                   :ARG1 (c3-10 / nothing
                                :ARG1-of (c3-12 / have-degree-91
                                                :ARG2 (c3-5 / good-02
                                                            :ARG1 c3-10)
                                                :ARG3 (c3-1 / more))))
      :snt2 (c3-0 / and
                  :op1 (c3-8 / mind-05
                             :ARG0 (c3-3 / you)
                             :ARG1 (c3-2 / business
                                         :poss c3-3)
                             :mode imperative)
                  :op2 (c3-11 / move-01
                              :ARG0 c3-3
                              :ARG2 (c3-6 / person
                                          :ARG0-of (c3-7 / hoax-01))
                              :mode imperative)))

# ::snt Why would someone start something like that? So good to hear that it is not true! That Voice lives ON
# ::tokens ["Why", "would", "someone", "start", "something", "like", "that", "?", "So", "good", "to", "hear", "that", "it", "is", "not", "true", "!", "That", "Voice", "lives", "ON"]
# ::lemmas ["why", "would", "someone", "start", "something", "like", "that", "?", "so", "good", "to", "hear", "that", "it", "be", "not", "true", "!", "that", "Voice", "live", "on"]
(c4-7 / multi-sentence
      :snt1 (c4-16 / cause-01
                   :ARG0 (c4-0 / amr-unknown)
                   :ARG1 (c4-10 / start-01
                                :ARG0 (c4-1 / someone)
                                :ARG1 (c4-11 / something
                                             :ARG1-of (c4-4 / resemble-01
                                                            :ARG2 (c4-3 / that)))))
      :snt2 (c4-8 / good-02
                  :ARG1 (c4-15 / hear-01
                               :ARG1 (c4-5 / true-01
                                           :ARG1 (c4-9 / it)
                                           :polarity -))
                  :degree (c4-2 / so))
      :snt3 (c4-14 / live-01
                   :ARG0 (c4-13 / voice
                                :mod (c4-6 / that))
                   :location (c4-12 / on)))

# ::snt and THIS..is CNN!
# ::tokens ["and", "THIS", "..", "is", "CNN", "!"]
# ::lemmas ["and", "this", "..", "be", "CNN", "!"]
(c5-0 / and
      :op2 (c5-2 / publication
                 :name (c5-3 / name
                             :op1 "CNN")
                 :domain (c5-1 / this)))

# ::snt thk God. One of the greatest thespians of our time
# ::tokens ["thk", "God", ".", "One", "of", "the", "greatest", "thespians", "of", "our", "time"]
# ::lemmas ["thk", "God", ".", "One", "of", "the", "great", "thespian", "of", "our", "time"]
(c6-4 / multi-sentence
      :snt1 (c6-8 / person
                  :name (c6-9 / name
                              :op1 "God"))
      :snt2 (c6-7 / include-91
                  :ARG1 (c6-3 / person
                              :name c6-9
                              :op1 "One"))
      :ARG2 (c6-0 / person
                  :mod (c6-12 / country
                              :name c6-9
                              :op1 "Italy"))
      :ARG1-of (c6-11 / have-degree-91
                      :ARG2 (c6-5 / great)
                      :ARG3 (c6-2 / most)
                      :ARG5 (c6-6 / person
                                  :time (c6-1 / time
                                              :poss (c6-10 / we)))))

# ::snt i was scrolling up &amp; for a sec all i saw was james earl jones &amp; dead. I didn't even hear about this hoax until now.
# ::tokens ["i", "was", "scrolling", "up", "&", "amp", ";", "for", "a", "sec", "all", "i", "saw", "was", "james", "earl", "jones", "&", "amp", ";", "dead", ".", "I", "did", "n't", "even", "hear", "about", "this", "hoax", "until", "now", "."]
# ::lemmas ["i", "be", "scroll", "up", "&", "amp", ";", "for", "a", "sec", "all", "i", "see", "be", "james", "earl", "jones", "&", "amp", ";", "dead", ".", "i", "do", "not", "even", "hear", "about", "this", "hoax", "until", "now", "."]
(c7-21 / multi-sentence
       :snt1 (c7-10 / scroll-01
                    :ARG0 (c7-4 / i)
                    :direction (c7-14 / and
                                      :op1 (c7-16 / up)
                                      :op2 (c7-13 / amp)))
       :snt2 (c7-0 / see-01
                   :ARG0 (c7-12 / i)
                   :ARG1 (c7-1 / and
                               :op1 (c7-17 / person
                                           :name (c7-6 / name
                                                       :op1 "James"
                                                       :op2 "Holder"
                                                       :op3 "&amp"))
                               :op2 (c7-19 / die-01))
                   :duration (c7-2 / temporal-quantity
                                   :unit (c7-5 / second)
                                   :quant 1)
                   :mod (c7-9 / all))
       :snt3 (c7-11 / hear-01
                    :ARG0 (c7-18 / i)
                    :ARG1 (c7-15 / hoax-01
                                 :mod (c7-3 / this))
                    :mod (c7-20 / even)
                    :time (c7-7 / until
                                :op1 (c7-8 / now))
                    :polarity -))

# ::snt Darth Vader can't die
# ::tokens ["Darth", "Vader", "ca", "n't", "die"]
# ::lemmas ["Darth", "Vader", "can", "not", "die"]
(c8-2 / possible-01
      :ARG1 (c8-0 / die-01
                  :ARG1 (c8-1 / person
                              :name (c8-3 / name
                                          :op1 "Darth"
                                          :op2 "Vader")))
      :polarity -)

# ::snt this is CNN
# ::tokens ["this", "is", "CNN"]
# ::lemmas ["this", "be", "CNN"]
(c9-1 / publication
      :name (c9-2 / name
                  :op1 "CNN")
      :domain (c9-0 / this))

# ::snt the force is strong with this one well sir
# ::tokens ["the", "force", "is", "strong", "with", "this", "one", "well", "sir"]
# ::lemmas ["the", "force", "be", "strong", "with", "this", "one", "well", "sir"]
(c10-2 / say-01
       :ARG1 (c10-0 / strong-02
                    :ARG1 (c10-5 / force-04)
                    :ARG1-of (c10-6 / cause-01
                                    :ARG0 (c10-4 / one
                                                 :mod (c10-1 / this))))
       :ARG2 (c10-3 / sir))

# ::snt I knew it. There was no disturbance in the Force. wars
# ::tokens ["I", "knew", "it", ".", "There", "was", "no", "disturbance", "in", "the", "Force", ".", "wars"]
# ::lemmas ["i", "know", "it", ".", "there", "be", "no", "disturbance", "in", "the", "Force", ".", "war"]
(c11-1 / multi-sentence
       :snt1 (c11-0 / know-01
                    :ARG0 (c11-2 / i)
                    :ARG1 (c11-5 / it))
       :snt2 (c11-6 / disturb-01
                    :ARG1 (c11-4 / force)
                    :polarity -)
       :snt3 (c11-3 / war-01))

# ::snt Good to hear because it would be sad to loose such a talented man.
# ::tokens ["Good", "to", "hear", "because", "it", "would", "be", "sad", "to", "loose", "such", "a", "talented", "man", "."]
# ::lemmas ["good", "to", "hear", "because", "it", "would", "be", "sad", "to", "loose", "such", "a", "talented", "man", "."]
(c12-7 / cause-01
       :ARG0 (c12-4 / sad-02
                    :ARG0 (c12-5 / lose-02
                                 :ARG1 (c12-2 / man
                                              :mod (c12-1 / talent)
                                              :mod (c12-0 / such))))
       :ARG1 (c12-3 / good-02
                    :ARG1 (c12-6 / hear-01)))

# ::snt That is 'Good To Know' news.
# ::tokens ["That", "is", "'", "Good", "To", "Know", "'", "news", "."]
# ::lemmas ["that", "be", "'", "good", "to", "Know", "'", "news", "."]
(c13-2 / news
       :ARG1-of (c13-1 / good-02)
       :domain (c13-0 / that))

# ::snt Obama in On His Election to Harvard Law ReviewSee video
# ::tokens ["Obama", "in", "On", "His", "Election", "to", "Harvard", "Law", "ReviewSee", "video"]
# ::lemmas ["Obama", "in", "on", "his", "Election", "to", "Harvard", "Law", "ReviewSee", "video"]
(c14-4 / see-01
       :ARG0 (c14-2 / you)
       :ARG1 (c14-7 / video)
       :topic (c14-0 / elect-01
                     :ARG0 (c14-5 / person
                                  :name (c14-6 / name
                                               :op1 "Obama")
                                  :ARG1-of c14-0)
                     :ARG2 (c14-3 / publication
                                  :name (c14-1 / name
                                               :op1 "Harvard"
                                               :op2 "Law"
                                               :op3 "Review"))))

# ::snt Obama in On His Election to Harvard Law ReviewSee video
# ::tokens ["Obama", "in", "On", "His", "Election", "to", "Harvard", "Law", "ReviewSee", "video"]
# ::lemmas ["Obama", "in", "on", "his", "Election", "to", "Harvard", "Law", "ReviewSee", "video"]
(c15-4 / see-01
       :ARG0 (c15-2 / you)
       :ARG1 (c15-7 / video)
       :topic (c15-0 / elect-01
                     :ARG0 (c15-5 / person
                                  :name (c15-6 / name
                                               :op1 "Obama")
                                  :ARG1-of c15-0)
                     :ARG2 (c15-3 / publication
                                  :name (c15-1 / name
                                               :op1 "Harvard"
                                               :op2 "Law"
                                               :op3 "Review"))))

# ::snt Obama in On His Election to Harvard Law ReviewSee video
# ::tokens ["Obama", "in", "On", "His", "Election", "to", "Harvard", "Law", "ReviewSee", "video"]
# ::lemmas ["Obama", "in", "on", "his", "Election", "to", "Harvard", "Law", "ReviewSee", "video"]
(c16-4 / see-01
       :ARG0 (c16-2 / you)
       :ARG1 (c16-7 / video)
       :topic (c16-0 / elect-01
                     :ARG0 (c16-5 / person
                                  :name (c16-6 / name
                                               :op1 "Obama")
                                  :ARG1-of c16-0)
                     :ARG2 (c16-3 / publication
                                  :name (c16-1 / name
                                               :op1 "Harvard"
                                               :op2 "Law"
                                               :op3 "Review"))))

# ::snt Thank God!
# ::tokens ["Thank", "God", "!"]
# ::lemmas ["thank", "God", "!"]
(c17-0 / thank-01
       :ARG1 (c17-1 / person
                    :name (c17-2 / name
                                 :op1 "God"))
       :mode expressive)

# ::snt This is awkward for me... I thought he had already died a while ago.
# ::tokens ["This", "is", "awkward", "for", "me", "...", "I", "thought", "he", "had", "already", "died", "a", "while", "ago", "."]
# ::lemmas ["this", "be", "awkward", "for", "i", "...", "i", "think", "he", "have", "already", "die", "a", "while", "ago", "."]
(c18-0 / awkward
       :domain (c18-1 / this)
       :beneficiary (c18-5 / i)
       :ARG1-of (c18-10 / cause-01
                        :ARG0 (c18-3 / think-01
                                     :ARG0 c18-5
                                     :ARG1 (c18-4 / die-01
                                                  :ARG1 (c18-9 / he)
                                                  :time (c18-6 / already)
                                                  :time (c18-2 / before
                                                               :op1 (c18-7 / now)
                                                               :quant (c18-8 / while))))))

# ::snt This was all over social media this weekend...
# ::tokens ["This", "was", "all", "over", "social", "media", "this", "weekend", "..."]
# ::lemmas ["this", "be", "all", "over", "social", "medium", "this", "weekend", "..."]
(c19-0 / all-over
       :op1 (c19-2 / media
                   :mod (c19-3 / social))
       :time (c19-4 / weekend
                    :mod (c19-1 / this)))

# ::snt gud confirmation the man with the golden voice of,n Hakeems father classic stories
# ::tokens ["gud", "confirmation", "the", "man", "with", "the", "golden", "voice", "of", ",", "n", "Hakeems", "father", "classic", "stories"]
# ::lemmas ["gud", "confirmation", "the", "man", "with", "the", "golden", "voice", "of", ",", "n", "Hakeems", "father", "classic", "story"]
(c20-11 / confirm-01
        :ARG1 (c20-2 / man
                     :ARG0-of (c20-10 / have-03
                                      :ARG1 (c20-8 / voice
                                                   :mod (c20-1 / golden)
                                                   :poss (c20-5 / story
                                                                :mod (c20-3 / classic)
                                                                :poss (c20-6 / person
                                                                             :name (c20-7 / name
                                                                                          :op1 "Mr."
                                                                                          :op2 "Hakeem")
                                                                             :ARG0-of (c20-4 / have-rel-role-91
                                                                                             :ARG2 (c20-9 / father)))))))
        :mod (c20-0 / frig))

# ::snt Great News !!!
# ::tokens ["Great", "News", "!", "!", "!"]
# ::lemmas ["Great", "News", "!", "!", "!"]
(c21-1 / news
       :mod (c21-0 / great)
       :mode expressive)

# ::snt This is CNN
# ::tokens ["This", "is", "CNN"]
# ::lemmas ["this", "be", "CNN"]
(c22-1 / publication
       :name (c22-2 / name
                    :op1 "CNN")
       :domain (c22-0 / this))

# ::snt ...yet.
# ::tokens ["...", "yet", "."]
# ::lemmas ["...", "yet", "."]
(c23-0 / yet)

# ::snt lord vader lives
# ::tokens ["lord", "vader", "lives"]
# ::lemmas ["lord", "vader", "live"]
(c24-1 / live-01
       :ARG0 (c24-3 / person
                    :ARG0-of (c24-0 / vader-01)
                    :mod (c24-2 / lord)))

# ::snt Well that's good news!
# ::tokens ["Well", "that", "'s", "good", "news", "!"]
# ::lemmas ["well", "that", "be", "good", "news", "!"]
(c25-2 / good-02
       :ARG1 (c25-3 / news
                    :domain (c25-0 / that))
       :mod (c25-1 / well))

# ::snt Really ? I heard that James Earl Jones is a Sith Lord.
# ::tokens ["Really", "?", "I", "heard", "that", "James", "Earl", "Jones", "is", "a", "Sith", "Lord", "."]
# ::lemmas ["really", "?", "i", "hear", "that", "James", "Earl", "Jones", "be", "a", "Sith", "Lord", "."]
(c26-2 / multi-sentence
       :snt1 (c26-0 / real-04)
       :snt2 (c26-7 / hear-01
                    :ARG0 (c26-4 / i)
                    :ARG1 (c26-5 / person
                                 :name (c26-6 / name
                                              :op1 "Sith"
                                              :op2 "Lord")
                                 :domain (c26-3 / person
                                                :name (c26-1 / name
                                                             :op1 "James"
                                                             :op2 "Earl"
                                                             :op3 "Jones")))))

# ::snt he was great in the Matrix
# ::tokens ["he", "was", "great", "in", "the", "Matrix"]
# ::lemmas ["he", "be", "great", "in", "the", "Matrix"]
(c27-1 / great
       :domain (c27-2 / he)
       :location (c27-0 / matrix))

# ::snt good news
# ::tokens ["good", "news"]
# ::lemmas ["good", "news"]
(c28-1 / news
       :ARG1-of (c28-0 / good-02))

# ::snt : In celebrity death hoax news, James Earl Jones is not dead. is immortal!
# ::tokens [":", "In", "celebrity", "death", "hoax", "news", ",", "James", "Earl", "Jones", "is", "not", "dead", ".", "is", "immortal", "!"]
# ::lemmas [":", "in", "celebrity", "death", "hoax", "news", ",", "James", "Earl", "Jones", "be", "not", "dead", ".", "be", "immortal", "!"]
(c29-3 / multi-sentence
       :snt1 (c29-1 / die-01
                    :ARG1 (c29-7 / person
                                 :name (c29-8 / name
                                              :op1 "James"
                                              :op2 "Earl"
                                              :op3 "Jones"))
                    :ARG1-of (c29-10 / cause-01
                                     :ARG0 (c29-2 / news
                                                  :topic (c29-9 / hoax-01
                                                                :ARG2 (c29-0 / die-01
                                                                             :ARG1 (c29-4 / celebrity)))))
                    :polarity -)
       :snt2 (c29-6 / immortal-03
                    :ARG1 (c29-5 / he)))

# ::snt I saw him walk into the cornfield though!
# ::tokens ["I", "saw", "him", "walk", "into", "the", "cornfield", "though", "!"]
# ::lemmas ["i", "see", "he", "walk", "into", "the", "cornfield", "though", "!"]
(c30-4 / have-concession-91
       :ARG1 (c30-2 / see-01
                    :ARG0 (c30-1 / i)
                    :ARG1 (c30-3 / walk-01
                                 :ARG0 (c30-0 / he)
                                 :ARG2 (c30-5 / cornfield))))
