# ::snt why is this really truly us
# ::tokens ["why", "is", "this", "really", "truly", "us"]
# ::lemmas ["why", "be", "this", "really", "truly", "we"]
(c1-5 / cause-01
      :ARG0 (c1-0 / amr-unknown)
      :ARG1 (c1-4 / we
                  :domain (c1-1 / this)
                  :ARG1-of (c1-3 / true-01
                                 :ARG1-of (c1-2 / real-04))))

# ::snt yes, they are actually daguerreotypes
# ::tokens ["yes", ",", "they", "are", "actually", "daguerreotypes"]
# ::lemmas ["yes", ",", "they", "be", "actually", "daguerreotype"]
(c2-2 / stereotype
      :mod (c2-3 / daguerreotype
                 :ARG1-of (c2-0 / actual-02))
      :domain (c2-1 / they))

# ::snt Hello: -derful photo! Thanks -sharing. Hope all is well.
# ::tokens ["Hello", ":", "-derful", "photo", "!", "Thanks", "-sharing", ".", "Hope", "all", "is", "well", "."]
# ::lemmas ["hello", ":", "-derful", "photo", "!", "thank", "-share", ".", "hope", "all", "be", "well", "."]
(c3-4 / multi-sentence
      :snt1 (c3-0 / and
                  :op1 (c3-11 / hello)
                  :op2 (c3-8 / photo
                             :ARG1-of (c3-5 / have-degree-91
                                            :ARG2 (c3-12 / awful)
                                            :ARG3 (c3-3 / more))))
      :snt2 (c3-1 / thank-01
                  :ARG0 (c3-6 / i)
                  :ARG2 (c3-7 / share-01))
      :snt3 (c3-9 / hope-01
                  :ARG0 c3-6
                  :ARG1 (c3-10 / well-09
                               :ARG1 (c3-2 / all))))

# ::snt AMERICA!
# ::tokens ["AMERICA", "!"]
# ::lemmas ["AMERICA", "!"]
(c4-0 / amr-unintelligible
      :value "AMERICA")

# ::snt why is it this reminds us of ?
# ::tokens ["why", "is", "it", "this", "reminds", "us", "of", "?"]
# ::lemmas ["why", "be", "it", "this", "remind", "we", "of", "?"]
(c5-2 / remind-01
      :ARG0 (c5-1 / this)
      :ARG2 (c5-3 / we)
      :ARG1-of (c5-4 / cause-01
                     :ARG0 (c5-0 / amr-unknown)))

# ::snt Mentoring!
# ::tokens ["Mentoring", "!"]
# ::lemmas ["mentor", "!"]
(c6-0 / pursue-01
      :mode expressive)

# ::snt Why does this feel like a metaphor?: Just a crow riding an eagle, NBD.
# ::tokens ["Why", "does", "this", "feel", "like", "a", "metaphor", "?", ":", "Just", "a", "crow", "riding", "an", "eagle", ",", "NBD", "."]
# ::lemmas ["why", "do", "this", "feel", "like", "a", "metaphor", "?", ":", "just", "a", "crow", "ride", "an", "eagle", ",", "NBD", "."]
(c7-6 / multi-sentence
      :snt1 (c7-11 / feel-01
                   :ARG1 (c7-1 / this)
                   :ARG2 (c7-4 / metaphor)
                   :ARG1-of (c7-12 / cause-01
                                   :ARG0 (c7-0 / amr-unknown)))
      :snt2 (c7-8 / crow
                  :ARG0-of (c7-2 / ride-01
                                 :ARG1 (c7-3 / eagle))
                  :mod (c7-5 / just)
                  :ARG1-of (c7-9 / publication-91
                                 :ARG4 (c7-7 / publication
                                             :name (c7-10 / name
                                                          :op1 "NBD")))))

# ::snt bird uber
# ::tokens ["bird", "uber"]
# ::lemmas ["bird", "uber"]
(c8-1 / person
      :name (c8-2 / name
                  :op1 "bird")
      :mod (c8-0 / uber))

# ::snt i wonder if ducks do this too
# ::tokens ["i", "wonder", "if", "ducks", "do", "this", "too"]
# ::lemmas ["i", "wonder", "if", "duck", "do", "this", "too"]
(c9-5 / wonder-01
      :ARG0 (c9-4 / i)
      :ARG1 (c9-0 / truth-value
                  :polarity-of (c9-6 / do-02
                                     :ARG0 (c9-1 / duck)
                                     :ARG1 (c9-2 / this)
                                     :mod (c9-3 / too))))

# ::snt here's a fox riding a dog
# ::tokens ["here", "'s", "a", "fox", "riding", "a", "dog"]
# ::lemmas ["here", "be", "a", "fox", "ride", "a", "dog"]
(c10-1 / fox
       :ARG0-of (c10-3 / ride-01
                       :ARG1 (c10-0 / dog))
       :location (c10-2 / here))

# ::snt Take that, !
# ::tokens ["Take", "that", ",", "!"]
# ::lemmas ["take", "that", ",", "!"]
(c11-2 / take-01
       :ARG0 (c11-1 / you)
       :ARG1 (c11-0 / that)
       :mode imperative)

# ::snt c'est le crow-voiturage ? Attention les taxis vont hurler !!
# ::tokens ["c'est", "le", "crow", "-", "voiturage", "?", "Attention", "les", "taxis", "vont", "hurler", "!", "!"]
# ::lemmas ["c'", "le", "crow", "-", "voiturage", "?", "attention", "le", "taxis", "vont", "hurler", "!", "!"]
(c12-2 / multi-sentence
       :snt1 (c12-6 / c'est-le-viturage
                    :mod (c12-3 / crow-01))
       :snt2 (c12-0 / attend-02
                    :ARG0 (c12-1 / taxi)
                    :ARG1-of (c12-4 / instead-of-91
                                    :ARG2 (c12-5 / hurler
                                                 :polarity -))))

# ::snt "I'M KING OF THE WORLD!!"
# ::tokens ["\"", "I'M", "KING", "OF", "THE", "WORLD", "!", "!", "\""]
# ::lemmas ["\"", "i'm", "king", "of", "the", "WORLD", "!", "!", "\""]
(c13-3 / have-rel-role-91
       :ARG0 (c13-2 / i)
       :ARG1 (c13-1 / world)
       :ARG2 (c13-0 / king))

# ::snt : Just a crow riding an eagle, NBD.
# ::tokens [":", "Just", "a", "crow", "riding", "an", "eagle", ",", "NBD", "."]
# ::lemmas [":", "just", "a", "crow", "ride", "an", "eagle", ",", "NBD", "."]
(c14-3 / say-01
       :ARG1 (c14-6 / crow
                    :ARG0-of (c14-0 / ride-01
                                    :ARG1 (c14-2 / eagle))
                    :mod (c14-1 / just))
       :ARG2 (c14-4 / publication
                    :name (c14-5 / name
                                 :op1 "NBD")))

# ::snt OKLM. RT : Just a crow riding an eagle, NBD.
# ::tokens ["OKLM", ".", "RT", ":", "Just", "a", "crow", "riding", "an", "eagle", ",", "NBD", "."]
# ::lemmas ["oklm", ".", "RT", ":", "just", "a", "crow", "ride", "an", "eagle", ",", "NBD", "."]
(c15-4 / multi-sentence
       :snt1 (c15-10 / okay-01
                     :ARG1 (c15-8 / person
                                  :name (c15-9 / name
                                               :op1 "LM")))
       :snt2 (c15-7 / say-01
                    :ARG0 (c15-6 / i)
                    :ARG1 (c15-11 / crow
                                  :ARG0-of (c15-0 / ride-01
                                                  :ARG1 (c15-1 / eagle))
                                  :mod (c15-2 / just))
                    :ARG2 (c15-5 / person
                                 :name (c15-3 / name
                                              :op1 "NCBD"))))

# ::snt awaiting photoshop with bare-chest Putin riding on top of the crow.
# ::tokens ["awaiting", "photoshop", "with", "bare", "-", "chest", "Putin", "riding", "on", "top", "of", "the", "crow", "."]
# ::lemmas ["await", "photoshop", "with", "bare", "-", "chest", "Putin", "ride", "on", "top", "of", "the", "crow", "."]
(c16-0 / aim-02
       :ARG1 (c16-6 / photoshop)
       :manner (c16-2 / ride-01
                      :ARG0 (c16-4 / person
                                   :name (c16-7 / name
                                                :op1 "Putin")
                                   :mod (c16-8 / chest
                                               :ARG1-of (c16-3 / bare-02)))
                      :destination (c16-1 / top
                                          :part-of (c16-5 / crow))))

# ::snt When words run dry Whiskey will do just fine to butter the mind.
# ::tokens ["When", "words", "run", "dry", "Whiskey", "will", "do", "just", "fine", "to", "butter", "the", "mind", "."]
# ::lemmas ["when", "word", "run", "dry", "Whiskey", "will", "do", "just", "fine", "to", "butter", "the", "mind", "."]
(c17-2 / butter-01
       :ARG0 (c17-5 / whiskey)
       :ARG1 (c17-4 / mind)
       :ARG1-of (c17-6 / fine-04
                       :mod (c17-1 / just))
       :time (c17-0 / run-08
                    :ARG1 (c17-3 / word)
                    :ARG2 (c17-7 / dry-08
                                 :ARG1 c17-3)))

# ::snt Thanks for this.
# ::tokens ["Thanks", "for", "this", "."]
# ::lemmas ["thank", "for", "this", "."]
(c18-2 / thank-01
       :ARG1 (c18-1 / you)
       :ARG2 (c18-0 / this))

# ::snt "i show you the world"
# ::tokens ["\"", "i", "show", "you", "the", "world", "\""]
# ::lemmas ["\"", "i", "show", "you", "the", "world", "\""]
(c19-3 / show-01
       :ARG0 (c19-2 / i)
       :ARG1 (c19-0 / world)
       :ARG2 (c19-1 / you))

# ::snt Fasten your belts... : Just a crow riding an eagle, NBD.
# ::tokens ["Fasten", "your", "belts", "...", ":", "Just", "a", "crow", "riding", "an", "eagle", ",", "NBD", "."]
# ::lemmas ["fasten", "your", "belt", "...", ":", "just", "a", "crow", "ride", "an", "eagle", ",", "NBD", "."]
(c20-6 / multi-sentence
       :snt1 (c20-10 / fasten-01
                     :ARG0 (c20-5 / you)
                     :ARG1 (c20-2 / belt
                                  :poss c20-5)
                     :mode imperative)
       :snt2 (c20-11 / crow
                     :ARG0-of (c20-0 / ride-01
                                     :ARG1 (c20-1 / eagle))
                     :mod (c20-3 / just)
                     :ARG1-of (c20-4 / mention-01
                                     :ARG0 (c20-7 / i)
                                     :mod (c20-8 / publication
                                                 :name (c20-9 / name
                                                              :op1 "NBD")))))

# ::snt although it's not with its wings fully outstretched.... I've seen them "mob" eagles to get rid of them like this...
# ::tokens ["although", "it", "'s", "not", "with", "its", "wings", "fully", "outstretched", "....", "I", "'ve", "seen", "them", "\"", "mob", "\"", "eagles", "to", "get", "rid", "of", "them", "like", "this", "..."]
# ::lemmas ["although", "it", "be", "not", "with", "its", "wing", "fully", "outstretche", "....", "i", "'ve", "see", "they", "\"", "mob", "\"", "eagle", "to", "get", "rid", "of", "they", "like", "this", "..."]
(c21-12 / have-concession-91
        :ARG1 (c21-8 / see-01
                     :ARG0 (c21-7 / i)
                     :ARG1 (c21-2 / eagle
                                  :mod (c21-4 / mob)
                                  :ARG0-of (c21-1 / rid-01
                                                  :ARG1-of (c21-5 / resemble-01
                                                                  :ARG2 (c21-0 / this))
                                                  :ARG1 c21-2)))
        :ARG2 (c21-6 / have-03
                     :ARG0 (c21-3 / it
                                  :part (c21-10 / wing
                                                :ARG1-of c21-6))
                     :ARG1-of (c21-9 / extend-01
                                     :ARG2 (c21-11 / full))
                     :polarity -))

# ::snt Hmm...I'm doing the Monday. Did this happen in the hundreds?
# ::tokens ["Hmm", "...", "I'm", "doing", "the", "Monday", ".", "Did", "this", "happen", "in", "the", "hundreds", "?"]
# ::lemmas ["hmm", "...", "i'm", "do", "the", "Monday", ".", "do", "this", "happen", "in", "the", "hundreds", "?"]
(c22-4 / multi-sentence
       :snt1 (c22-8 / do-02
                    :ARG0 (c22-5 / i)
                    :ARG1 (c22-1 / date-entity
                                 :weekday (c22-3 / monday))
                    :mod (c22-7 / hmm
                                :mode expressive))
       :snt2 (c22-2 / this
                    :quant (c22-6 / multiple
                                  :op1 100)
                    :polarity (c22-0 / amr-unknown)))

# ::snt hope he asked the price of the fare before the journey you know what these taxis are like ,always goes the long way round
# ::tokens ["hope", "he", "asked", "the", "price", "of", "the", "fare", "before", "the", "journey", "you", "know", "what", "these", "taxis", "are", "like", ",", "always", "goes", "the", "long", "way", "round"]
# ::lemmas ["hope", "he", "ask", "the", "price", "of", "the", "fare", "before", "the", "journey", "you", "know", "what", "these", "taxi", "be", "like", ",", "always", "go", "the", "long", "way", "round"]
(c23-20 / multi-sentence
        :snt1 (c23-14 / hope-01
                      :ARG0 (c23-5 / i)
                      :ARG1 (c23-16 / ask-01
                                    :ARG0 (c23-17 / he)
                                    :ARG1 (c23-9 / monetary-quantity
                                                 :ARG2-of (c23-18 / price-01
                                                                  :ARG1 (c23-7 / fare)))
                                    :time (c23-2 / before
                                                 :op1 (c23-1 / journey-01))))
        :snt2 (c23-10 / know-01
                      :ARG0 (c23-19 / you)
                      :ARG1 (c23-0 / thing
                                   :ARG2-of (c23-8 / resemble-01
                                                   :ARG1 (c23-3 / taxi
                                                                :mod (c23-11 / this)))))
        :snt3 (c23-12 / go-01
                      :ARG1 (c23-6 / way
                                   :ARG1-of (c23-13 / long-03))
                      :time (c23-15 / always)
                      :direction (c23-4 / round)))

# ::snt Fact or Fiction?? RT : Just a crow riding an eagle, NBD.
# ::tokens ["Fact", "or", "Fiction", "?", "?", "RT", ":", "Just", "a", "crow", "riding", "an", "eagle", ",", "NBD", "."]
# ::lemmas ["fact", "or", "Fiction", "?", "?", "RT", ":", "just", "a", "crow", "ride", "an", "eagle", ",", "NBD", "."]
(c24-6 / multi-sentence
       :snt1 (c24-0 / amr-choice
                    :op1 (c24-10 / fact)
                    :op2 (c24-2 / fiction)
                    :polarity (c24-11 / amr-unknown))
       :snt2 (c24-7 / say-01
                    :ARG0 (c24-8 / publication
                                 :name (c24-9 / name
                                              :op1 "RT"))
                    :ARG1 (c24-3 / crow
                                 :ARG0-of (c24-1 / ride-01
                                                 :ARG1 (c24-4 / eagle))
                                 :mod (c24-5 / just))
                    :ARG2 c24-8))

# ::snt It reminds me the space shuttle pic.
# ::tokens ["It", "reminds", "me", "the", "space", "shuttle", "pic", "."]
# ::lemmas ["it", "remind", "i", "the", "space", "shuttle", "pic", "."]
(c25-1 / remind-01
       :ARG0 (c25-2 / it)
       :ARG1 (c25-4 / picture
                    :mod (c25-3 / shuttle
                                :mod (c25-0 / space)))
       :ARG2 (c25-5 / i))

# ::snt Food chain disruption ... RT Just a crow riding an eagle, NBD.
# ::tokens ["Food", "chain", "disruption", "...", "RT", "Just", "a", "crow", "riding", "an", "eagle", ",", "NBD", "."]
# ::lemmas ["food", "chain", "disruption", "...", "RT", "just", "a", "crow", "ride", "an", "eagle", ",", "NBD", "."]
(c26-4 / multi-sentence
       :snt1 (c26-3 / disrupt-01
                    :ARG1 (c26-10 / chain
                                  :mod (c26-9 / food)))
       :snt2 (c26-6 / crow
                    :ARG0-of (c26-0 / ride-01
                                    :ARG1 (c26-1 / eagle))
                    :mod (c26-2 / just)
                    :ARG1-of (c26-7 / publication-91
                                    :ARG4 (c26-5 / publication
                                                 :name (c26-8 / name
                                                              :op1 "NBD")))))

# ::snt : Just a riding an , NBD.
# ::tokens [":", "Just", "a", "riding", "an", ",", "NBD", "."]
# ::lemmas [":", "just", "a", "ride", "an", ",", "NBD", "."]
(c27-2 / event
       :mod (c27-0 / ride-01)
       :mod (c27-4 / publication
                   :name (c27-3 / name
                                :op1 "NBD"))
       :mod (c27-1 / just))

# ::snt Such is life . Crows trying to ride on eagles.Kind of like some artist are eagles with too many crows trying to hitch a free ride
# ::tokens ["Such", "is", "life", ".", "Crows", "trying", "to", "ride", "on", "eagles", ".", "Kind", "of", "like", "some", "artist", "are", "eagles", "with", "too", "many", "crows", "trying", "to", "hitch", "a", "free", "ride"]
# ::lemmas ["such", "be", "life", ".", "crow", "try", "to", "ride", "on", "eagle", ".", "kind", "of", "like", "some", "artist", "be", "eagle", "with", "too", "many", "crow", "try", "to", "hitch", "a", "free", "ride"]
(c28-19 / multi-sentence
        :snt1 (c28-12 / life
                      :mod (c28-10 / such))
        :snt2 (c28-1 / try-01
                     :ARG0 (c28-14 / crow)
                     :ARG1 (c28-6 / ride-01
                                  :ARG0 c28-14
                                  :ARG1 (c28-18 / eagle)))
        :snt3 (c28-3 / resemble-01
                     :ARG1 (c28-11 / eagle
                                   :domain (c28-15 / artist
                                                   :mod (c28-0 / some))
                                   :ARG0-of (c28-13 / have-03
                                                    :ARG1 (c28-16 / crow
                                                                  :ARG0-of (c28-2 / try-01
                                                                                  :ARG1 (c28-17 / hitch-ride-00
                                                                                                :ARG0 c28-16
                                                                                                :ARG1-of (c28-5 / free-03)))
                                                                  :ARG1-of (c28-4 / have-quant-91
                                                                                  :ARG2 (c28-7 / many)
                                                                                  :ARG3 (c28-9 / too)))))
                     :degree (c28-8 / kind-of)))

# ::snt : Just a crow riding an eagle, NBD.
# ::tokens [":", "Just", "a", "crow", "riding", "an", "eagle", ",", "NBD", "."]
# ::lemmas [":", "just", "a", "crow", "ride", "an", "eagle", ",", "NBD", "."]
(c29-3 / say-01
       :ARG1 (c29-6 / crow
                    :ARG0-of (c29-0 / ride-01
                                    :ARG1 (c29-2 / eagle))
                    :mod (c29-1 / just))
       :ARG2 (c29-4 / publication
                    :name (c29-5 / name
                                 :op1 "NBD")))

# ::snt free ride, take easy
# ::tokens ["free", "ride", ",", "take", "easy"]
# ::lemmas ["free", "ride", ",", "take", "easy"]
(c30-1 / ride-01
       :ARG1-of (c30-4 / free-04)
       :ARG1-of (c30-0 / take-01
                       :ARG0 (c30-3 / you)
                       :ARG1-of (c30-2 / easy-05)))

# ::snt they are smart.
# ::tokens ["they", "are", "smart", "."]
# ::lemmas ["they", "be", "smart", "."]
(c31-1 / smart-06
       :ARG1 (c31-0 / they))

# ::snt !!!!!!!! RT Just a crow riding an eagle, NBD.
# ::tokens ["!", "!", "!", "!", "!", "!", "!", "!", "RT", "Just", "a", "crow", "riding", "an", "eagle", ",", "NBD", "."]
# ::lemmas ["!", "!", "!", "!", "!", "!", "!", "!", "RT", "just", "a", "crow", "ride", "an", "eagle", ",", "NBD", "."]
(c32-6 / say-01
       :ARG0 (c32-5 / i)
       :ARG1 (c32-0 / and
                    :op1 (c32-9 / crow
                                :ARG0-of (c32-1 / ride-01
                                                :ARG1 (c32-2 / eagle))
                                :mod (c32-3 / just))
                    :op2 (c32-7 / publication
                                :name (c32-8 / name
                                             :op1 "ND")))
       :ARG2 (c32-4 / person
                    :name c32-8
                    :op1 "NCBD"))

# ::snt redefining the phrase ?
# ::tokens ["redefining", "the", "phrase", "?"]
# ::lemmas ["redefine", "the", "phrase", "?"]
(c33-2 / redefine-01
       :polarity (c33-0 / amr-unknown)
       :ARG1 (c33-1 / phrase))

# ::snt DINNER X2 RT : Just a crow riding an eagle, NBD.
# ::tokens ["DINNER", "X2", "RT", ":", "Just", "a", "crow", "riding", "an", "eagle", ",", "NBD", "."]
# ::lemmas ["dinner", "x2", "rt", ":", "just", "a", "crow", "ride", "an", "eagle", ",", "NBD", "."]
(c34-4 / say-01
       :ARG0 (c34-5 / person
                    :name (c34-6 / name
                                 :op1 "Dinner"
                                 :op2 "X2"
                                 :op3 "RT"))
       :ARG1 (c34-7 / crow
                    :ARG0-of (c34-0 / ride-01
                                    :ARG1 (c34-1 / eagle))
                    :mod (c34-2 / just)
                    :domain c34-5
                    :name (c34-3 / name
                                 :op1 "ND"))
       :ARG2 c34-5)
