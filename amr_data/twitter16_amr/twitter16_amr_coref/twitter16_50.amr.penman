# ::snt I'll make them up and sell them for $3.99 and take over the market
# ::tokens ["I", "'ll", "make", "them", "up", "and", "sell", "them", "for", "$", "3.99", "and", "take", "over", "the", "market"]
# ::lemmas ["i", "'ll", "make", "they", "up", "and", "sell", "they", "for", "$", "3.99", "and", "take", "over", "the", "market"]
(c1-0 / and
      :op1 (c1-4 / make-up-10
                 :ARG0 (c1-5 / i)
                 :ARG1 (c1-1 / they))
      :op2 (c1-6 / sell-01
                 :ARG0 c1-5
                 :ARG1 c1-1
                 :ARG3 (c1-2 / monetary-quantity
                             :unit (c1-8 / dollar)
                             :quant 3.99))
      :op3 (c1-3 / take-over-12
                 :ARG0 c1-5
                 :ARG1 (c1-7 / market)))

# ::snt people just can't be that stupid?!?!?!
# ::tokens ["people", "just", "ca", "n't", "be", "that", "stupid", "?", "!", "?", "!", "?", "!"]
# ::lemmas ["people", "just", "can", "not", "be", "that", "stupid", "?", "!", "?", "!", "?", "!"]
(c2-4 / possible-01
      :ARG1 (c2-3 / stupid
                  :degree (c2-0 / that)
                  :domain (c2-2 / person))
      :mod (c2-1 / just)
      :polarity -
      :mode expressive)

# ::snt I would not react well if I saw that in real life.
# ::tokens ["I", "would", "not", "react", "well", "if", "I", "saw", "that", "in", "real", "life", "."]
# ::lemmas ["i", "would", "not", "react", "well", "if", "i", "see", "that", "in", "real", "life", "."]
(c3-1 / react-01
      :ARG0 (c3-3 / i)
      :ARG1 (c3-4 / see-01
                  :ARG0 c3-3
                  :ARG1 (c3-0 / that)
                  :location (c3-6 / life
                                  :ARG1-of (c3-2 / real-04)))
      :ARG1-of (c3-5 / well-09)
      :polarity -)

# ::snt , fixed! Thanks for the heads up.
# ::tokens [",", "fixed", "!", "Thanks", "for", "the", "heads", "up", "."]
# ::lemmas [",", "fix", "!", "thank", "for", "the", "head", "up", "."]
(c4-2 / multi-sentence
      :snt1 (c4-4 / fix-02)
      :snt2 (c4-0 / thank-01
                  :ARG0 (c4-3 / i)
                  :ARG1 (c4-1 / you)
                  :ARG2 (c4-5 / heads-up)))

# ::snt sabes a cuanto venden una flor de calabaza en Whole Goods Mac? fula la pieza
# ::tokens ["sabes", "a", "cuanto", "venden", "una", "flor", "de", "calabaza", "en", "Whole", "Goods", "Mac", "?", "fula", "la", "pieza"]
# ::lemmas ["sabe", "a", "cuanto", "venden", "una", "flor", "de", "calabaza", "en", "Whole", "Goods", "Mac", "?", "fula", "la", "pieza"]
(c5-4 / multi-sentence
      :snt1 (c5-1 / event
                  :polarity (c5-0 / amr-unknown)
                  :name (c5-7 / name
                              :op1 "sabes")
                  :concession (c5-9 / venden-01
                                    :ARG1 (c5-10 / flor
                                                 :mod (c5-11 / calabaza)
                                                 :mod (c5-6 / un))
                                    :location (c5-5 / company
                                                    :name (c5-3 / name
                                                                :op1 "Whole"
                                                                :op2 "Goods"
                                                                :op3 "Mac"))))
      :snt2 (c5-2 / fula
                  :op1 (c5-8 / pieza)))

# ::snt : Whole Foods tests limits of yuppie diet fads with new $6 asparagus water -
# ::tokens [":", "Whole", "Foods", "tests", "limits", "of", "yuppie", "diet", "fads", "with", "new", "$", "6", "asparagus", "water", "-"]
# ::lemmas [":", "Whole", "Foods", "test", "limit", "of", "yuppie", "diet", "fad", "with", "new", "$", "6", "asparagus", "water", "-"]
(c6-1 / test-01
      :ARG0 (c6-12 / company
                   :name (c6-8 / name
                               :op1 "Whole"
                               :op2 "Foods"))
      :ARG1 (c6-10 / limit-01
                   :ARG1 (c6-11 / fad
                                :mod (c6-3 / diet)
                                :mod (c6-5 / yuppie)
                                :prep-with (c6-9 / water
                                                 :mod (c6-0 / asparagus)
                                                 :ARG1-of (c6-4 / new-01)
                                                 :ARG1-of (c6-7 / cost-01
                                                                :ARG2 (c6-6 / monetary-quantity
                                                                            :unit (c6-2 / dollar)
                                                                            :quant 6))))))

# ::snt that image is credited wrong. It's from my Instagram.
# ::tokens ["that", "image", "is", "credited", "wrong", ".", "It", "'s", "from", "my", "Instagram", "."]
# ::lemmas ["that", "image", "be", "credit", "wrong", ".", "it", "be", "from", "my", "Instagram", "."]
(c7-2 / multi-sentence
      :snt1 (c7-9 / credit-01
                  :ARG1 (c7-3 / image
                              :mod (c7-0 / that))
                  :ARG2-of (c7-6 / wrong-04))
      :snt2 (c7-1 / be-from-91
                  :ARG1 (c7-8 / it)
                  :ARG2 (c7-4 / publication
                              :name (c7-5 / name
                                          :op1 "Instagram")
                              :poss (c7-7 / i))))

# ::snt omg any water bar where it's like the DIY Bloody Mary bars except for elitist sober people.
# ::tokens ["omg", "any", "water", "bar", "where", "it", "'s", "like", "the", "DIY", "Bloody", "Mary", "bars", "except", "for", "elitist", "sober", "people", "."]
# ::lemmas ["omg", "any", "water", "bar", "where", "it", "be", "like", "the", "DIY", "Bloody", "Mary", "bar", "except", "for", "elitist", "sober", "people", "."]
(c8-4 / bar
      :mod (c8-9 / water)
      :mod (c8-0 / any)
      :location-of (c8-2 / resemble-01
                         :name (c8-6 / name
                                     :op1 "Bloody"
                                     :op2 "Mary")
                         :mod (c8-10 / DIY)
                         :ARG1 c8-4
                         :ARG2 c8-4)
      :ARG2-of (c8-3 / except-01
                     :ARG1 (c8-7 / person
                                 :mod (c8-1 / elitist)
                                 :ARG1-of (c8-5 / sober-02)))
      :mod (c8-8 / oh-my-god
                 :mode expressive))
