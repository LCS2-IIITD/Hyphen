# ::snt in he'llWhere is he'll? Shove of with your shit, you don't even know what we're discussing
# ::tokens ["in", "he'llWhere", "is", "he", "'ll", "?", "Shove", "of", "with", "your", "shit", ",", "you", "do", "n't", "even", "know", "what", "we", "'re", "discussing"]
# ::lemmas ["in", "he'llwhere", "be", "he", "'ll", "?", "shove", "of", "with", "your", "shit", ",", "you", "do", "not", "even", "know", "what", "we", "be", "discuss"]
(c1-9 / multi-sentence
      :snt1 (c1-5 / be-located-at-91
                  :ARG1 (c1-14 / he)
                  :ARG2 (c1-0 / amr-unknown))
      :snt2 (c1-8 / be-located-at-91
                  :ARG1 (c1-11 / he)
                  :ARG2 (c1-15 / amr-unknown))
      :snt3 (c1-2 / and
                  :op1 (c1-12 / shove-01
                              :ARG1 (c1-1 / shit
                                          :poss (c1-10 / you)))
                  :op2 (c1-6 / know-01
                             :ARG0 c1-10
                             :ARG1 (c1-3 / thing
                                         :ARG1-of (c1-7 / discuss-01
                                                        :ARG0 (c1-13 / we)))
                             :mod (c1-4 / even)
                             :polarity -)))

# ::snt George still out here being racist and violent... special place in he'll for you and him
# ::tokens ["George", "still", "out", "here", "being", "racist", "and", "violent", "...", "special", "place", "in", "he", "'ll", "for", "you", "and", "him"]
# ::lemmas ["George", "still", "out", "here", "be", "racist", "and", "violent", "...", "special", "place", "in", "he", "'ll", "for", "you", "and", "he"]
(c2-4 / multi-sentence
      :snt1 (c2-0 / and
                  :op1 (c2-2 / racist
                             :domain (c2-7 / person
                                           :name (c2-8 / name
                                                       :op1 "George"))
                             :mod (c2-6 / still)
                             :location (c2-10 / here))
                  :op2 (c2-9 / violent
                             :domain c2-7))
      :snt2 (c2-5 / place
                  :ARG1-of (c2-1 / special-02)
                  :location c2-10)
      :beneficiary (c2-11 / and
                          :op1 (c2-3 / you)
                          :op2 c2-7))

# ::snt no point did you realize Zimmerman is racist &amp; a liar who started the whole thing?
# ::tokens ["no", "point", "did", "you", "realize", "Zimmerman", "is", "racist", "&", "amp", ";", "a", "liar", "who", "started", "the", "whole", "thing", "?"]
# ::lemmas ["no", "point", "do", "you", "realize", "Zimmerman", "be", "racist", "&", "amp", ";", "a", "liar", "who", "start", "the", "whole", "thing", "?"]
(c3-3 / realize-01
      :ARG0 (c3-4 / you)
      :ARG1 (c3-0 / and
                  :op1 c3-0
                  :op1 (c3-6 / racist)
                  :op2 (c3-12 / amp)
                  :domain (c3-8 / person
                                :name (c3-9 / name
                                            :op1 "Zimmerman")
                                :op2-of c3-3))
      :ARG0-of (c3-11 / lie-08)
      :ARG0-of (c3-7 / start-01
                     :ARG1 (c3-1 / thing
                                 :mod (c3-10 / whole)))
      :ARG1-of (c3-5 / point-03
                     :polarity -)
      :polarity (c3-2 / amr-unknown))

# ::snt B PROactive!
# ::tokens ["B", "PROactive", "!"]
# ::lemmas ["B", "PROactive", "!"]
(c4-0 / proactive
      :mode expressive)

# ::snt Which actor will wear a hoodie on stage? = ALL USA youth
# ::tokens ["Which", "actor", "will", "wear", "a", "hoodie", "on", "stage", "?", "=", "ALL", "USA", "youth"]
# ::lemmas ["which", "actor", "will", "wear", "a", "hoodie", "on", "stage", "?", "=", "all", "USA", "youth"]
(c5-6 / wear-01
      :ARG0 (c5-0 / amr-unknown
                  :ARG0-of (c5-9 / act-01))
      :ARG1 (c5-8 / hoodie)
      :location (c5-4 / stage)
      :ARG1-of (c5-2 / equal-01
                     :ARG2 (c5-3 / youth
                                 :mod (c5-1 / all)
                                 :mod (c5-7 / country
                                            :name (c5-5 / name
                                                        :op1 "USA")))))

# ::snt look....a fake account...This one more than a week old??
# ::tokens ["look", "....", "a", "fake", "account", "...", "This", "one", "more", "than", "a", "week", "old", "?", "?"]
# ::lemmas ["look", "....", "a", "fake", "account", "...", "this", "one", "more", "than", "a", "week", "old", "?", "?"]
(c6-6 / multi-sentence
      :snt1 (c6-9 / look-01
                  :ARG0 (c6-5 / you)
                  :ARG1 (c6-0 / account
                              :ARG1-of (c6-10 / fake-02))
                  :mode imperative)
      :snt2 (c6-11 / age-01
                   :ARG1 (c6-1 / account
                               :mod (c6-2 / this))
                   :ARG2 (c6-3 / more-than
                               :op1 (c6-4 / temporal-quantity
                                          :unit (c6-8 / week)
                                          :quant 1))
                   :polarity (c6-7 / amr-unknown)))

# ::snt so if you wanna source whatever your ranting about yrs too late - go for it or go be irrelevantB/C the media has moved on
# ::tokens ["so", "if", "you", "wanna", "source", "whatever", "your", "ranting", "about", "yrs", "too", "late", "-", "go", "for", "it", "or", "go", "be", "irrelevantB", "/", "C", "the", "media", "has", "moved", "on"]
# ::lemmas ["so", "if", "you", "wanna", "source", "whatever", "your", "rant", "about", "yrs", "too", "late", "-", "go", "for", "it", "or", "go", "be", "irrelevantB", "/", "C", "the", "medium", "have", "move", "on"]
(c8-10 / or
       :op1 (c8-6 / go-03
                  :ARG0 (c8-5 / you)
                  :ARG1 (c8-9 / source-01
                              :ARG0 c8-5
                              :ARG1 (c8-11 / whatever
                                           :ARG1-of (c8-1 / rant-01
                                                          :ARG0 c8-5
                                                          :ARG3 (c8-13 / have-degree-91
                                                                       :ARG1 (c8-2 / year)
                                                                       :ARG2 (c8-12 / late)
                                                                       :ARG3 (c8-0 / too)))))
                  :mode imperative)
       :op2 (c8-8 / relevant-01
                  :ARG1 c8-5
                  :ARG1-of (c8-14 / cause-01
                                  :ARG0 (c8-7 / move-01
                                              :ARG1 (c8-3 / media)))
                  :polarity -
                  :mode imperative)
       :condition (c8-4 / want-01
                        :ARG0 c8-5
                        :ARG1 c8-9))

# ::snt try again. HE didn't have a gun! And how many white kids get the death penalty for smoking weed?
# ::tokens ["try", "again", ".", "HE", "did", "n't", "have", "a", "gun", "!", "And", "how", "many", "white", "kids", "get", "the", "death", "penalty", "for", "smoking", "weed", "?"]
# ::lemmas ["try", "again", ".", "he", "do", "not", "have", "a", "gun", "!", "and", "how", "many", "white", "kid", "get", "the", "death", "penalty", "for", "smoking", "weed", "?"]
(c9-6 / multi-sentence
      :snt1 (c9-1 / try-01
                  :mod (c9-0 / again))
      :snt2 (c9-12 / have-03
                   :ARG0 (c9-8 / he)
                   :ARG1 (c9-7 / gun)
                   :polarity -)
      :snt3 (c9-13 / and
                   :op2 (c9-10 / penalize-01
                               :ARG1 (c9-3 / kid
                                           :ARG1-of (c9-11 / white-02)
                                           :quant (c9-2 / amr-unknown))
                               :ARG2 (c9-9 / smoke-02
                                           :ARG0 c9-3
                                           :ARG1 (c9-4 / weed))
                               :manner (c9-5 / die-01))))

# ::snt you mean well but he was by no means a cop and disgustingly took the law into his own hands. yes No justice
# ::tokens ["you", "mean", "well", "but", "he", "was", "by", "no", "means", "a", "cop", "and", "disgustingly", "took", "the", "law", "into", "his", "own", "hands", ".", "yes", "No", "justice"]
# ::lemmas ["you", "mean", "well", "but", "he", "be", "by", "no", "mean", "a", "cop", "and", "disgustingly", "take", "the", "law", "into", "his", "own", "hand", ".", "yes", "no", "justice"]
(c11-7 / multi-sentence
       :snt1 (c11-13 / contrast-01
                     :ARG1 (c11-3 / mean-02
                                  :ARG0 (c11-6 / you)
                                  :ARG1 (c11-10 / well))
                     :ARG2 (c11-0 / and
                                  :op1 (c11-8 / cop
                                              :domain (c11-12 / he)
                                              :mod (c11-4 / by-no-means))
                                  :op2 (c11-1 / take-03
                                              :ARG0 c11-12
                                              :ARG1 (c11-11 / law)
                                              :ARG2 (c11-9 / in-ones-hands-04
                                                           :ARG0 c11-12
                                                           :ARG1 c11-11)
                                              :ARG0-of (c11-5 / disgust-01))))
       :snt2 (c11-2 / justice
                    :polarity -))

# ::snt day you have a kid who is getting into petty crime: do you let that kid do whatever he wants whenever he wants?
# ::tokens ["day", "you", "have", "a", "kid", "who", "is", "getting", "into", "petty", "crime", ":", "do", "you", "let", "that", "kid", "do", "whatever", "he", "wants", "whenever", "he", "wants", "?"]
# ::lemmas ["day", "you", "have", "a", "kid", "who", "be", "get", "into", "petty", "crime", ":", "do", "you", "let", "that", "kid", "do", "whatever", "he", "want", "whenever", "he", "want", "?"]
(c12-0 / and
       :op1 (c12-13 / have-03
                    :ARG0 (c12-5 / you)
                    :ARG1 (c12-3 / kid
                                 :ARG1-of (c12-6 / get-05
                                                 :ARG2 (c12-14 / crime-02
                                                               :mod (c12-10 / petty))))
                    :time (c12-4 / day))
       :op2 (c12-12 / let-01
                    :ARG0 c12-5
                    :ARG1 (c12-1 / do-02
                                 :ARG0 c12-3
                                 :ARG1 (c12-11 / whatever
                                               :ARG1-of (c12-7 / want-01
                                                               :ARG0 c12-3
                                                               :time (c12-8 / want-01
                                                                            :ARG0 c12-3
                                                                            :mod (c12-9 / any)))))
                    :polarity (c12-2 / amr-unknown)))

# ::snt that says a lot about the general view the public had with regards to kids like him having a future
# ::tokens ["that", "says", "a", "lot", "about", "the", "general", "view", "the", "public", "had", "with", "regards", "to", "kids", "like", "him", "having", "a", "future"]
# ::lemmas ["that", "say", "a", "lot", "about", "the", "general", "view", "the", "public", "have", "with", "regard", "to", "kid", "like", "he", "have", "a", "future"]
(c13-5 / say-01
       :ARG0 (c13-0 / that)
       :ARG1 (c13-8 / lot
                    :topic (c13-7 / view-02
                                  :ARG0 (c13-6 / public)
                                  :ARG1 (c13-2 / kid
                                               :ARG1-of (c13-1 / resemble-01
                                                               :ARG2 (c13-10 / he)))
                                  :ARG1-of (c13-3 / general-02)
                                  :topic (c13-4 / have-03
                                                :ARG0 c13-2
                                                :ARG1 (c13-9 / future)))))

# ::snt no one argues that his parents were involved in his life, just that it wouldn't have mattered if they had been
# ::tokens ["no", "one", "argues", "that", "his", "parents", "were", "involved", "in", "his", "life", ",", "just", "that", "it", "would", "n't", "have", "mattered", "if", "they", "had", "been"]
# ::lemmas ["no", "one", "argue", "that", "his", "parent", "be", "involve", "in", "his", "life", ",", "just", "that", "it", "would", "not", "have", "matter", "if", "they", "have", "be"]
(c14-10 / contrast-01
        :ARG1 (c14-0 / argue-01
                     :ARG0 (c14-7 / no-one)
                     :ARG1 (c14-5 / involve-01
                                  :ARG1 (c14-6 / person
                                               :ARG0-of (c14-9 / have-rel-role-91
                                                               :ARG1 (c14-4 / he)
                                                               :ARG2 (c14-2 / parent)))
                                  :ARG2 (c14-8 / life
                                               :poss c14-4)))
        :ARG2 (c14-3 / matter-01
                     :ARG1 c14-5
                     :condition c14-5
                     :mod (c14-1 / just)
                     :polarity -))

# ::snt because involved parents would have made an effort to see to it that he kept an interest in aviation not crime.
# ::tokens ["because", "involved", "parents", "would", "have", "made", "an", "effort", "to", "see", "to", "it", "that", "he", "kept", "an", "interest", "in", "aviation", "not", "crime", "."]
# ::lemmas ["because", "involved", "parent", "would", "have", "make", "an", "effort", "to", "see", "to", "it", "that", "he", "keep", "an", "interest", "in", "aviation", "not", "crime", "."]
(c15-12 / cause-01
        :ARG0 (c15-1 / effort-01
                     :ARG0 (c15-10 / person
                                   :ARG0-of (c15-11 / have-rel-role-91
                                                    :ARG2 (c15-5 / parent))
                                   :ARG1-of (c15-8 / involve-01))
                     :ARG1 (c15-9 / see-01
                                  :ARG0 c15-10
                                  :ARG1 (c15-3 / keep-02
                                               :ARG0 (c15-7 / he)
                                               :ARG1 (c15-2 / interest-01
                                                            :ARG1 c15-7
                                                            :ARG2 (c15-0 / aviation)
                                                            :ARG1-of (c15-6 / contrast-01
                                                                            :ARG2 (c15-4 / crime-02)))))))

# ::snt man fuck him, he got himself killed by being a thug. trying to live like a rap star. only to blame is himself
# ::tokens ["man", "fuck", "him", ",", "he", "got", "himself", "killed", "by", "being", "a", "thug", ".", "trying", "to", "live", "like", "a", "rap", "star", ".", "only", "to", "blame", "is", "himself"]
# ::lemmas ["man", "fuck", "he", ",", "he", "get", "himself", "kill", "by", "be", "a", "thug", ".", "try", "to", "live", "like", "a", "rap", "star", ".", "only", "to", "blame", "be", "himself"]
(c16-6 / multi-sentence
       :snt1 (c16-12 / fuck-01
                     :ARG0 (c16-2 / man)
                     :ARG1 (c16-13 / he)
                     :mode imperative)
       :snt2 (c16-3 / kill-01
                    :ARG0 (c16-0 / thug
                                 :domain c16-13)
                    :ARG1 c16-13
                    :ARG1-of (c16-14 / cause-01
                                     :ARG0 (c16-4 / try-01
                                                  :ARG0 c16-13
                                                  :ARG1 (c16-11 / live-01
                                                                :ARG0 c16-13
                                                                :ARG1-of (c16-1 / resemble-01
                                                                                :ARG2 (c16-9 / star
                                                                                             :mod (c16-7 / rap)))))))
       :snt3 (c16-5 / blame-01
                    :ARG1 (c16-8 / he)
                    :mod (c16-10 / only)))

# ::snt the problem is that we are choosing to ignore previous negative behavior.
# ::tokens ["the", "problem", "is", "that", "we", "are", "choosing", "to", "ignore", "previous", "negative", "behavior", "."]
# ::lemmas ["the", "problem", "be", "that", "we", "be", "choose", "to", "ignore", "previous", "negative", "behavior", "."]
(c17-3 / problem
       :domain (c17-6 / choose-01
                      :ARG0 (c17-5 / we)
                      :ARG1 (c17-2 / ignore-01
                                   :ARG0 c17-5
                                   :ARG1 (c17-0 / behave-01
                                                :ARG0 c17-5
                                                :ARG1 (c17-4 / negative-03)
                                                :time (c17-1 / previous)))))

# ::snt when a child has stolen property in their possession it does
# ::tokens ["when", "a", "child", "has", "stolen", "property", "in", "their", "possession", "it", "does"]
# ::lemmas ["when", "a", "child", "have", "steal", "property", "in", "their", "possession", "it", "do"]
(c18-0 / event
       :condition (c18-2 / steal-01
                         :ARG0 (c18-4 / child)
                         :ARG1 (c18-3 / property
                                      :ARG1-of (c18-1 / possess-01
                                                      :ARG0 c18-4))))

# ::snt you know Trayvon Martin loved him some SaucySquad
# ::tokens ["you", "know", "Trayvon", "Martin", "loved", "him", "some", "SaucySquad"]
# ::lemmas ["you", "know", "Trayvon", "Martin", "love", "he", "some", "SaucySquad"]
(c19-0 / know-01
       :ARG0 (c19-1 / you)
       :ARG1 (c19-6 / love-01
                    :ARG0 (c19-4 / person
                                 :name (c19-5 / name
                                              :op1 "Trayvon"
                                              :op2 "Martin"))
                    :ARG1 (c19-2 / person
                                 :name c19-5
                                 :op1 "SaucySquad")
                    :mod (c19-3 / some)))

# ::snt Wrong guy. So go home to "wifey"
# ::tokens ["Wrong", "guy", ".", "So", "go", "home", "to", "\"", "wifey", "\""]
# ::lemmas ["wrong", "guy", ".", "so", "go", "home", "to", "\"", "wifey", "\""]
(c20-2 / multi-sentence
       :snt1 (c20-5 / say-01
                    :ARG1 (c20-6 / wrong-04)
                    :ARG2 (c20-3 / guy))
       :snt2 (c20-8 / cause-01
                    :ARG1 (c20-4 / go-02
                                 :ARG0 (c20-1 / you)
                                 :ARG4 (c20-7 / home)
                                 :purpose (c20-0 / wifey)
                                 :mode imperative)))

# ::snt ProTip: Don't be a dick in a remembrance tweet. Find your manners.
# ::tokens ["ProTip", ":", "Do", "n't", "be", "a", "dick", "in", "a", "remembrance", "tweet", ".", "Find", "your", "manners", "."]
# ::lemmas ["protip", ":", "do", "not", "be", "a", "dick", "in", "a", "remembrance", "tweet", ".", "find", "your", "manner", "."]
(c21-6 / multi-sentence
       :snt1 (c21-0 / tip-05
                    :ARG1 (c21-1 / resemble-01
                                 :ARG1 (c21-5 / you)
                                 :ARG2 (c21-10 / dick)
                                 :location (c21-4 / tweet-01
                                                  :purpose (c21-7 / remember-01))
                                 :polarity -
                                 :mode imperative)
                    :mod (c21-8 / pro))
       :snt2 (c21-9 / find-01
                    :ARG0 (c21-2 / you)
                    :ARG1 (c21-3 / manner
                                 :poss c21-2)
                    :mode imperative))

# ::snt thanks so much for sharing. Just added it here
# ::tokens ["thanks", "so", "much", "for", "sharing", ".", "Just", "added", "it", "here"]
# ::lemmas ["thank", "so", "much", "for", "sharing", ".", "just", "add", "it", "here"]
(c22-7 / multi-sentence
       :snt1 (c22-2 / thank-01
                    :ARG0 (c22-9 / i)
                    :ARG1 (c22-6 / you)
                    :ARG2 (c22-10 / share-01
                                  :ARG0 c22-6)
                    :ARG1-of (c22-12 / have-quant-91
                                     :ARG2 (c22-4 / much)
                                     :ARG3 (c22-0 / so)))
       :snt2 (c22-1 / add-02
                    :ARG0 (c22-3 / i)
                    :ARG1 (c22-11 / it)
                    :location (c22-8 / here)
                    :mod (c22-5 / just)))

# ::snt :You're still insisting on not reading the words I'm writing...
# ::tokens [":", "You", "'re", "still", "insisting", "on", "not", "reading", "the", "words", "I", "'m", "writing", "..."]
# ::lemmas [":", "you", "be", "still", "insist", "on", "not", "read", "the", "word", "i", "be", "write", "..."]
(c23-3 / insist-01
       :ARG0 (c23-2 / you)
       :ARG1 (c23-0 / read-01
                    :ARG0 c23-2
                    :ARG1 (c23-5 / word
                                 :ARG1-of (c23-1 / write-01
                                                 :ARG0 (c23-6 / i)))
                    :polarity -)
       :mod (c23-4 / still))

# ::snt Thanks for this post. I've got a small project in the works now because of it.
# ::tokens ["Thanks", "for", "this", "post", ".", "I", "'ve", "got", "a", "small", "project", "in", "the", "works", "now", "because", "of", "it", "."]
# ::lemmas ["thank", "for", "this", "post", ".", "i", "'ve", "get", "a", "small", "project", "in", "the", "work", "now", "because", "of", "it", "."]
(c24-4 / multi-sentence
       :snt1 (c24-0 / thank-01
                    :ARG0 (c24-6 / i)
                    :ARG1 (c24-3 / you)
                    :ARG2 (c24-1 / thing
                                 :ARG1-of (c24-8 / post-01
                                                 :ARG0 c24-3)
                                 :mod (c24-2 / this)))
       :snt2 (c24-12 / cause-01
                     :ARG0 (c24-11 / it)
                     :ARG1 (c24-10 / work-09
                                   :ARG1 (c24-5 / project
                                                :mod (c24-7 / small))
                                   :time (c24-9 / now))))

# ::snt Snuffed out by murderous cretin! : Trayvon Martin at Space Camp in Florida.
# ::tokens ["Snuffed", "out", "by", "murderous", "cretin", "!", ":", "Trayvon", "Martin", "at", "Space", "Camp", "in", "Florida", "."]
# ::lemmas ["Snuffed", "out", "by", "murderous", "cretin", "!", ":", "Trayvon", "Martin", "at", "Space", "Camp", "in", "Florida", "."]
(c25-4 / person
       :name (c25-5 / name
                    :op1 "Trayvon"
                    :op2 "Martin")
       :location (c25-7 / facility
                        :name (c25-1 / name
                                     :op1 "Space"
                                     :op2 "Camp")
                        :location (c25-3 / state
                                         :name (c25-6 / name
                                                      :op1 "Florida")))
       :ARG1-of (c25-0 / snuff-out-03
                       :ARG0 (c25-8 / cretin
                                    :ARG0-of (c25-2 / murder-01))))

# ::snt This is heartbreaking. Thinking of Tamir too. We are some barbaric country. Exceptionalism my ass.
# ::tokens ["This", "is", "heartbreaking", ".", "Thinking", "of", "Tamir", "too", ".", "We", "are", "some", "barbaric", "country", ".", "Exceptionalism", "my", "ass", "."]
# ::lemmas ["this", "be", "heartbreaking", ".", "think", "of", "Tamir", "too", ".", "we", "be", "some", "barbaric", "country", ".", "exceptionalism", "my", "ass", "."]
(c27-7 / multi-sentence
       :snt1 (c27-3 / break-heart-31
                    :ARG0 (c27-1 / this))
       :snt2 (c27-4 / think-01
                    :ARG1 (c27-10 / person
                                  :name (c27-11 / name
                                                :op1 "Tamir"))
                    :mod (c27-5 / too))
       :snt3 (c27-13 / country
                     :mod (c27-6 / barbaric)
                     :mod (c27-9 / some)
                     :domain (c27-12 / we))
       :snt4 (c27-2 / exceptionalism
                    :location (c27-0 / ass
                                     :part-of (c27-8 / i))))

# ::snt Heartbreaking. ": Trayvon Martin at Space Camp in Florida.
# ::tokens ["Heartbreaking", ".", "\"", ":", "Trayvon", "Martin", "at", "Space", "Camp", "in", "Florida", "."]
# ::lemmas ["heartbreaking", ".", "\"", ":", "Trayvon", "Martin", "at", "Space", "Camp", "in", "Florida", "."]
(c28-3 / multi-sentence
       :snt1 (c28-0 / break-heart-31)
       :snt2 (c28-2 / be-located-at-91
                    :ARG1 (c28-5 / person
                                 :name (c28-6 / name
                                              :op1 "Trayvon"
                                              :op2 "Martin"))
                    :ARG2 (c28-8 / facility
                                 :name (c28-1 / name
                                              :op1 "Space"
                                              :op2 "Camp")
                                 :location (c28-4 / state
                                                  :name (c28-7 / name
                                                               :op1 "Florida")))))

# ::snt the truth alone is gut-wrenching and infuriating enough, lying only hurts credibility
# ::tokens ["the", "truth", "alone", "is", "gut", "-", "wrenching", "and", "infuriating", "enough", ",", "lying", "only", "hurts", "credibility"]
# ::lemmas ["the", "truth", "alone", "be", "gut", "-", "wrench", "and", "infuriate", "enough", ",", "lie", "only", "hurt", "credibility"]
(c29-0 / and
       :op1 (c29-12 / and
                    :op1 (c29-8 / wrench-01
                                :ARG0 (c29-2 / truth
                                             :mod (c29-1 / alone))
                                :ARG1 (c29-4 / gut))
                    :op2 (c29-6 / infuriate-01
                                :ARG0 c29-2)
                    :ARG2-of (c29-11 / have-degree-91
                                     :ARG1 c29-2
                                     :ARG3 (c29-3 / enough)))
       :op2 (c29-5 / hurt-01
                   :ARG0 (c29-9 / lie-08)
                   :ARG1 (c29-10 / credibility)
                   :mod (c29-7 / only)))

# ::snt nobody's going to go "oh, he only went to *aero*space camp, he was clearly a thug"
# ::tokens ["nobody", "'s", "going", "to", "go", "\"", "oh", ",", "he", "only", "went", "to", "*", "aero*space", "camp", ",", "he", "was", "clearly", "a", "thug", "\""]
# ::lemmas ["nobody", "be", "go", "to", "go", "\"", "oh", ",", "he", "only", "go", "to", "*", "aero*space", "camp", ",", "he", "be", "clearly", "a", "thug", "\""]
(c30-4 / go-23
       :ARG0 (c30-7 / nobody)
       :ARG1 (c30-0 / and
                    :op1 (c30-3 / go-02
                                :ARG0 (c30-9 / he)
                                :ARG4 (c30-10 / camp
                                              :mod (c30-6 / space)
                                              :mod (c30-2 / extra))
                                :mod (c30-8 / only))
                    :op2 (c30-1 / thug
                                :domain c30-9
                                :ARG1-of (c30-5 / clear-06))))

# ::snt Yeah, but accepting a lie harms credibility of the movement and is pointless anyway
# ::tokens ["Yeah", ",", "but", "accepting", "a", "lie", "harms", "credibility", "of", "the", "movement", "and", "is", "pointless", "anyway"]
# ::lemmas ["yeah", ",", "but", "accept", "a", "lie", "harm", "credibility", "of", "the", "movement", "and", "be", "pointless", "anyway"]
(c31-6 / contrast-01
       :ARG2 (c31-0 / and
                    :op1 (c31-7 / harm-01
                                :ARG0 (c31-8 / accept-01
                                             :ARG1 (c31-5 / lie-08))
                                :ARG1 (c31-3 / credibility
                                             :poss (c31-2 / movement-07)))
                    :op2 (c31-4 / point-03
                                :ARG1 c31-8
                                :mod (c31-1 / anyway)
                                :polarity -)))

# ::snt is the blame for this law.
# ::tokens ["is", "the", "blame", "for", "this", "law", "."]
# ::lemmas ["be", "the", "blame", "for", "this", "law", "."]
(c32-0 / blame-01
       :ARG2 (c32-1 / law
                    :mod (c32-2 / this)))

# ::snt Going to the gas station requires parental guidance? Georges folks on the other hand...
# ::tokens ["Going", "to", "the", "gas", "station", "requires", "parental", "guidance", "?", "Georges", "folks", "on", "the", "other", "hand", "..."]
# ::lemmas ["go", "to", "the", "gas", "station", "require", "parental", "guidance", "?", "george", "folk", "on", "the", "other", "hand", "..."]
(c33-3 / multi-sentence
       :snt1 (c33-1 / require-01
                    :polarity (c33-0 / amr-unknown)
                    :ARG0 (c33-2 / go-02
                                 :ARG4 (c33-6 / station
                                              :mod (c33-4 / gas)))
                    :ARG1 (c33-9 / guide-01
                                 :ARG0 (c33-7 / person
                                              :ARG0-of (c33-11 / have-rel-role-91
                                                               :ARG2 (c33-5 / parent)))
                                 :ARG1 c33-2))
       :snt2 (c33-12 / contrast-01
                     :ARG2 (c33-10 / folk
                                   :mod c33-7
                                   :name (c33-8 / name
                                                :op1 "Georges"))))

# ::snt : Trayvon Martin at Space Camp in Florida. TV news never would have used this one
# ::tokens [":", "Trayvon", "Martin", "at", "Space", "Camp", "in", "Florida", ".", "TV", "news", "never", "would", "have", "used", "this", "one"]
# ::lemmas [":", "Trayvon", "Martin", "at", "Space", "Camp", "in", "Florida", ".", "tv", "news", "never", "would", "have", "use", "this", "one"]
(c34-5 / multi-sentence
       :snt1 (c34-8 / person
                    :name (c34-9 / name
                                 :op1 "Trayvon"
                                 :op2 "Martin")
                    :location (c34-12 / camp
                                      :name (c34-3 / name
                                                   :op1 "Space"
                                                   :op2 "Camp")
                                      :location (c34-7 / state
                                                       :name (c34-11 / name
                                                                     :op1 "Florida"))))
       :snt2 (c34-6 / use-01
                    :ARG0 (c34-1 / news
                                 :mod (c34-0 / television))
                    :ARG1 (c34-10 / one
                                  :mod (c34-4 / this))
                    :time (c34-2 / ever)
                    :polarity -))

# ::snt Truth matters for credibility, and you don't need to distort it for this to be tragic
# ::tokens ["Truth", "matters", "for", "credibility", ",", "and", "you", "do", "n't", "need", "to", "distort", "it", "for", "this", "to", "be", "tragic"]
# ::lemmas ["truth", "matter", "for", "credibility", ",", "and", "you", "do", "not", "need", "to", "distort", "it", "for", "this", "to", "be", "tragic"]
(c35-0 / and
       :op1 (c35-5 / matter-01
                   :ARG1 (c35-1 / truth)
                   :ARG2 (c35-8 / credibility))
       :op2 (c35-7 / need-01
                   :ARG0 (c35-4 / you)
                   :ARG1 (c35-2 / distort-01
                                :ARG0 c35-4
                                :ARG1 c35-1)
                   :purpose (c35-3 / tragic
                                   :domain (c35-6 / this))
                   :polarity -))

# ::snt No words.
# ::tokens ["No", "words", "."]
# ::lemmas ["no", "word", "."]
(c36-0 / word
       :polarity -)

# ::snt What a beautiful picture of what looks to be someone with a great future. So sad.
# ::tokens ["What", "a", "beautiful", "picture", "of", "what", "looks", "to", "be", "someone", "with", "a", "great", "future", ".", "So", "sad", "."]
# ::lemmas ["what", "a", "beautiful", "picture", "of", "what", "look", "to", "be", "someone", "with", "a", "great", "future", ".", "so", "sad", "."]
(c37-4 / multi-sentence
       :snt1 (c37-7 / picture-01
                    :ARG1 (c37-2 / thing
                                 :ARG0-of (c37-9 / look-02
                                                 :ARG1 (c37-6 / someone
                                                              :ARG0-of (c37-11 / have-03
                                                                               :ARG1 (c37-10 / future
                                                                                             :mod (c37-5 / great))))))
                    :ARG1-of (c37-3 / beautiful-02
                                    :degree (c37-0 / so)))
       :snt2 (c37-8 / sad-02
                    :degree (c37-1 / so)))

# ::snt I love you too
# ::tokens ["I", "love", "you", "too"]
# ::lemmas ["i", "love", "you", "too"]
(c38-2 / love-01
       :ARG0 (c38-3 / i)
       :ARG1 (c38-0 / you)
       :mod (c38-1 / too))

# ::snt Youre a moron and an awful person.
# ::tokens ["You", "re", "a", "moron", "and", "an", "awful", "person", "."]
# ::lemmas ["you", "re", "a", "moron", "and", "an", "awful", "person", "."]
(c39-0 / and
       :op1 (c39-2 / moron
                   :domain (c39-1 / you))
       :op2 (c39-3 / person
                   :mod (c39-4 / awful)
                   :domain c39-1))

# ::snt goodbye......been a pleasure. Lmaaaooooooooo!!!!
# ::tokens ["goodbye", "......", "been", "a", "pleasure", ".", "Lmaaaooooooooo", "!", "!", "!", "!"]
# ::lemmas ["goodbye", "......", "be", "a", "pleasure", ".", "Lmaaaooooooooo", "!", "!", "!", "!"]
(c40-1 / multi-sentence
       :snt1 (c40-2 / goodbye)
       :snt2 (c40-4 / pleasure)
       :snt3 (c40-5 / laugh-01
                    :ARG0 (c40-3 / i)
                    :manner (c40-0 / loud)
                    :mode expressive))

# ::snt oh and a nasty grammar natzi too !!
# ::tokens ["oh", "and", "a", "nasty", "grammar", "natzi", "too", "!", "!"]
# ::lemmas ["oh", "and", "a", "nasty", "grammar", "natzi", "too", "!", "!"]
(c41-0 / and
       :op2 (c41-3 / person
                   :mod (c41-4 / nasty)
                   :mod (c41-2 / grammar)
                   :mod (c41-1 / too)
                   :mod (c41-5 / oh
                               :mode expressive)))

# ::snt yet again!!!!
# ::tokens ["yet", "again", "!", "!", "!", "!"]
# ::lemmas ["yet", "again", "!", "!", "!", "!"]
(c42-0 / again
       :mod (c42-1 / yet))

# ::snt oh look more of calling people stupid from behind a keyboard.
# ::tokens ["oh", "look", "more", "of", "calling", "people", "stupid", "from", "behind", "a", "keyboard", "."]
# ::lemmas ["oh", "look", "more", "of", "call", "people", "stupid", "from", "behind", "a", "keyboard", "."]
(c43-7 / look-01
       :ARG0 (c43-2 / you)
       :ARG1 (c43-8 / call-01
                    :ARG0 c43-2
                    :ARG1 (c43-5 / person)
                    :ARG2 (c43-4 / stupid)
                    :source (c43-0 / behind
                                   :op1 (c43-1 / keyboard))
                    :mod (c43-3 / more))
       :mod (c43-6 / oh
                   :mode expressive)
       :mode imperative)

# ::snt more name calling from behind a keyboard.
# ::tokens ["more", "name", "calling", "from", "behind", "a", "keyboard", "."]
# ::lemmas ["more", "name", "call", "from", "behind", "a", "keyboard", "."]
(c44-4 / call-01
       :ARG1 (c44-3 / name)
       :quant (c44-2 / more)
       :manner (c44-0 / behind
                      :location (c44-1 / keyboard)))

# ::snt yes I know YOU are as evidenced by you need to continue this nonsense. GO AWAY!!!!
# ::tokens ["yes", "I", "know", "YOU", "are", "as", "evidenced", "by", "you", "need", "to", "continue", "this", "nonsense", ".", "GO", "AWAY", "!", "!", "!", "!"]
# ::lemmas ["yes", "i", "know", "you", "be", "as", "evidence", "by", "you", "need", "to", "continue", "this", "nonsense", ".", "GO", "away", "!", "!", "!", "!"]
(c45-7 / multi-sentence
       :snt1 (c45-4 / know-01
                    :ARG0 (c45-9 / i)
                    :ARG1 (c45-6 / you)
                    :ARG1-of (c45-2 / evidence-01
                                    :ARG0 (c45-10 / need-01
                                                  :ARG0 c45-6
                                                  :ARG1 (c45-11 / continue-01
                                                                :ARG0 c45-6
                                                                :ARG1 (c45-5 / nonsense
                                                                             :mod (c45-1 / this))))))
       :snt2 (c45-8 / go-02
                    :ARG0 (c45-3 / you)
                    :ARG4 (c45-0 / away)
                    :mode imperative))

# ::snt it is okay for you to have a voice and no one else apparently.
# ::tokens ["it", "is", "okay", "for", "you", "to", "have", "a", "voice", "and", "no", "one", "else", "apparently", "."]
# ::lemmas ["it", "be", "okay", "for", "you", "to", "have", "a", "voice", "and", "no", "one", "else", "apparently", "."]
(c46-4 / okay-04
       :ARG1 (c46-6 / have-03
                    :ARG0 (c46-2 / you)
                    :ARG1 (c46-0 / and
                                 :op1 (c46-5 / voice)
                                 :op2 (c46-3 / no-one
                                             :mod (c46-1 / else))))
       :ARG1-of (c46-7 / appear-02))

# ::snt don't point fingers.....maybe you should try shutting up and leaving people alone eh??
# ::tokens ["do", "n't", "point", "fingers", ".....", "maybe", "you", "should", "try", "shutting", "up", "and", "leaving", "people", "alone", "eh", "?", "?"]
# ::lemmas ["do", "not", "point", "finger", ".....", "maybe", "you", "should", "try", "shut", "up", "and", "leave", "people", "alone", "eh", "?", "?"]
(c47-7 / multi-sentence
       :snt1 (c47-10 / point-finger-06
                     :ARG0 (c47-5 / you)
                     :polarity -
                     :mode imperative)
       :snt2 (c47-6 / possible-01
                    :ARG1 (c47-3 / recommend-01
                                 :ARG1 (c47-2 / try-01
                                              :ARG0 (c47-4 / you)
                                              :ARG1 (c47-0 / and
                                                           :op1 (c47-9 / shut-up-06
                                                                       :ARG1 c47-4)
                                                           :op2 (c47-11 / leave-14
                                                                        :ARG0 c47-4
                                                                        :ARG1 (c47-12 / alone
                                                                                      :domain (c47-1 / person)))))
                                 :ARG2 c47-4)
                    :ARG1-of (c47-8 / request-confirmation-91)))

# ::snt ohhhh aren't you a big tough guy behind your keyboard name calling??? LOL at your moronic insults!! Hahahahaha! Go away!!!
# ::tokens ["ohhhh", "are", "n't", "you", "a", "big", "tough", "guy", "behind", "your", "keyboard", "name", "calling", "?", "?", "?", "LOL", "at", "your", "moronic", "insults", "!", "!", "Hahahahaha", "!", "Go", "away", "!", "!", "!"]
# ::lemmas ["ohhhh", "be", "not", "you", "a", "big", "tough", "guy", "behind", "your", "keyboard", "name", "call", "?", "?", "?", "lol", "at", "your", "moronic", "insult", "!", "!", "Hahahahaha", "!", "go", "away", "!", "!", "!"]
(c48-17 / multi-sentence
        :snt1 (c48-8 / guy
                     :polarity (c48-14 / amr-unknown)
                     :ARG1-of (c48-0 / tough-03)
                     :mod (c48-2 / big)
                     :location (c48-7 / behind
                                      :op1 (c48-13 / call-01
                                                   :ARG0 (c48-16 / you)
                                                   :ARG2 (c48-4 / name)
                                                   :location (c48-6 / keyboard
                                                                    :poss c48-16)))
                     :domain (c48-1 / you)
                     :mod (c48-19 / oh
                                  :mode expressive))
        :snt2 (c48-10 / laugh-01
                      :ARG0 (c48-3 / i)
                      :ARG2 (c48-12 / insult-01
                                    :ARG0 c48-1
                                    :mod (c48-5 / moronic))
                      :mod (c48-11 / haha
                                   :mode expressive)
                      :mode expressive)
        :snt3 (c48-9 / go-02
                     :ARG0 (c48-18 / you)
                     :ARG4 (c48-15 / away)
                     :mode imperative))

# ::snt they must be perfect and mistake free then right? Go away.
# ::tokens ["they", "must", "be", "perfect", "and", "mistake", "free", "then", "right", "?", "Go", "away", "."]
# ::lemmas ["they", "must", "be", "perfect", "and", "mistake", "free", "then", "right", "?", "go", "away", "."]
(c49-5 / multi-sentence
       :snt1 (c49-7 / infer-01
                    :ARG1 (c49-0 / and
                                 :op1 (c49-8 / perfect-02
                                             :ARG1 (c49-1 / they))
                                 :op2 (c49-9 / free-04
                                             :ARG1 c49-1
                                             :ARG2 (c49-3 / mistake-02
                                                          :ARG0 c49-1)))
                    :ARG1-of (c49-2 / request-confirmation-91))
       :snt2 (c49-6 / go-02
                    :ARG0 (c49-4 / you)
                    :ARG4 (c49-10 / away)
                    :mode imperative))

# ::snt people like you are the problem.....henwas a young boy who made a mistake. Did nor deserve to die . do you have kids?
# ::tokens ["people", "like", "you", "are", "the", "problem", ".....", "henwas", "a", "young", "boy", "who", "made", "a", "mistake", ".", "Did", "nor", "deserve", "to", "die", ".", "do", "you", "have", "kids", "?"]
# ::lemmas ["people", "like", "you", "be", "the", "problem", ".....", "henwas", "a", "young", "boy", "who", "make", "a", "mistake", ".", "do", "nor", "deserve", "to", "die", ".", "do", "you", "have", "kid", "?"]
(c50-10 / multi-sentence
        :snt1 (c50-14 / problem
                      :domain (c50-9 / person
                                     :ARG1-of (c50-3 / resemble-01
                                                     :ARG2 (c50-8 / you))))
        :snt2 (c50-5 / boy
                     :mod (c50-4 / young)
                     :ARG0-of (c50-6 / mistake-02)
                     :domain (c50-12 / you))
        :snt3 (c50-0 / and
                     :op1 (c50-16 / do-02
                                  :ARG0 c50-12
                                  :ARG1 (c50-2 / die-01
                                               :ARG1 c50-12)
                                  :polarity -)
                     :op2 (c50-7 / deserve-01
                                 :ARG0 c50-12
                                 :ARG1 c50-2
                                 :polarity -))
        :snt4 (c50-15 / have-03
                      :ARG0 (c50-1 / you)
                      :ARG1 (c50-11 / kid)
                      :polarity (c50-13 / amr-unknown)))
