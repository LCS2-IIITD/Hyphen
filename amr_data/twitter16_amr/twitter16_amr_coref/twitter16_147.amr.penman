# ::snt testing fake news detector?
# ::tokens ["testing", "fake", "news", "detector", "?"]
# ::lemmas ["test", "fake", "news", "detector", "?"]
(c1-1 / test-01
      :polarity (c1-0 / amr-unknown)
      :ARG1 (c1-2 / thing
                  :ARG0-of (c1-5 / detect-01
                                 :ARG1 (c1-3 / news))
                  :ARG1-of (c1-4 / fake-02)))

# ::snt We need this broad in senate hearing right now.. answer the question
# ::tokens ["We", "need", "this", "broad", "in", "senate", "hearing", "right", "now", "..", "answer", "the", "question"]
# ::lemmas ["we", "need", "this", "broad", "in", "senate", "hearing", "right", "now", "..", "answer", "the", "question"]
(c2-7 / multi-sentence
      :snt1 (c2-9 / need-01
                  :ARG0 (c2-11 / we)
                  :ARG1 (c2-12 / hearing-02
                               :ARG0 (c2-6 / government-organization
                                           :name (c2-4 / name
                                                       :op1 "Senate"))
                               :ARG1 c2-11
                               :ARG1-of (c2-3 / broad-02
                                              :degree (c2-1 / this)))
                  :time (c2-10 / now
                               :mod (c2-2 / right)))
      :snt2 (c2-0 / answer-01
                  :ARG0 (c2-5 / you)
                  :ARG1 (c2-8 / question-01)
                  :mode imperative))

# ::snt Krista...that's not funny...
# ::tokens ["Krista", "...", "that", "'s", "not", "funny", "..."]
# ::lemmas ["Krista", "...", "that", "be", "not", "funny", "..."]
(c3-1 / say-01
      :ARG1 (c3-4 / funny
                  :domain (c3-0 / that)
                  :polarity -)
      :ARG2 (c3-2 / person
                  :name (c3-3 / name
                              :op1 "Krista")))

# ::snt i refuse to believe this. Fake news
# ::tokens ["i", "refuse", "to", "believe", "this", ".", "Fake", "news"]
# ::lemmas ["i", "refuse", "to", "believe", "this", ".", "fake", "news"]
(c5-3 / multi-sentence
      :snt1 (c5-1 / refuse-01
                  :ARG0 (c5-4 / i)
                  :ARG1 (c5-2 / believe-01
                              :ARG0 c5-4
                              :ARG1 (c5-0 / this)))
      :snt2 (c5-5 / news
                  :ARG1-of (c5-6 / fake-02)))

# ::snt clickbait
# ::tokens ["clickbait"]
# ::lemmas ["clickbait"]
(c6-0 / clickbait)

# ::snt I sometimes never get to my wife's post I am lucky
# ::tokens ["I", "sometimes", "never", "get", "to", "my", "wife", "'s", "post", "I", "am", "lucky"]
# ::lemmas ["i", "sometimes", "never", "get", "to", "my", "wife", "'s", "post", "i", "be", "lucky"]
(c7-2 / multi-sentence
      :snt1 (c7-3 / get-05
                  :ARG1 (c7-4 / i)
                  :ARG2 (c7-6 / post-01
                              :ARG0 (c7-1 / person
                                          :ARG0-of (c7-9 / have-rel-role-91
                                                         :ARG1 c7-4
                                                         :ARG2 (c7-7 / wife))))
                  :time (c7-5 / sometimes)
                  :time (c7-0 / ever)
                  :polarity -)
      :snt2 (c7-8 / lucky
                  :domain c7-4))

# ::snt wow she sounds like a great catch. Holy crap.
# ::tokens ["wow", "she", "sounds", "like", "a", "great", "catch", ".", "Holy", "crap", "."]
# ::lemmas ["wow", "she", "sound", "like", "a", "great", "catch", ".", "Holy", "crap", "."]
(c8-2 / multi-sentence
      :snt1 (c8-4 / sound-01
                  :ARG1 (c8-0 / she)
                  :ARG2 (c8-7 / catch-03
                              :mod (c8-1 / great))
                  :mod (c8-5 / wow
                             :mode expressive))
      :snt2 (c8-3 / crap
                  :mod (c8-6 / holy)
                  :mode expressive))

# ::snt Whatd she do that gave u the opportunity to post such an unflattering mug shot?
# ::tokens ["What", "d", "she", "do", "that", "gave", "u", "the", "opportunity", "to", "post", "such", "an", "unflattering", "mug", "shot", "?"]
# ::lemmas ["what", "d", "she", "do", "that", "give", "u", "the", "opportunity", "to", "post", "such", "an", "unflattering", "mug", "shot", "?"]
(c9-10 / do-02
       :ARG0 (c9-5 / she)
       :ARG1 (c9-0 / amr-unknown)
       :ARG0-of (c9-3 / give-01
                      :ARG1 (c9-8 / opportunity
                                  :topic (c9-6 / post-01
                                               :ARG0 (c9-2 / you)
                                               :ARG1 (c9-1 / shot
                                                           :mod (c9-4 / mug)
                                                           :ARG0-of (c9-7 / shatter-01
                                                                          :polarity -)
                                                           :mod (c9-9 / such))))
                      :ARG2 c9-2))

# ::snt IOW a totally preventable incident.
# ::tokens ["IOW", "a", "totally", "preventable", "incident", "."]
# ::lemmas ["IOW", "a", "totally", "preventable", "incident", "."]
(c11-2 / incident
       :ARG1-of (c11-3 / prevent-01
                       :ARG1-of (c11-1 / possible-01
                                       :degree (c11-0 / total)
                                       :polarity -))
       :mod (c11-4 / other))

# ::snt I'd love to be her cellmate
# ::tokens ["I", "'d", "love", "to", "be", "her", "cellmate"]
# ::lemmas ["i", "would", "love", "to", "be", "her", "cellmate"]
(c12-2 / love-02
       :ARG0 (c12-0 / i)
       :ARG1 (c12-3 / have-rel-role-91
                    :ARG0 c12-0
                    :ARG1 (c12-1 / she)
                    :ARG2 (c12-4 / cellmate)))

# ::snt She has issues.
# ::tokens ["She", "has", "issues", "."]
# ::lemmas ["she", "have", "issue", "."]
(c13-0 / issue-02
       :ARG1 (c13-1 / she))

# ::snt seriously
# ::tokens ["seriously"]
# ::lemmas ["seriously"]
(c14-0 / serious-01)

# ::snt well why didn't she just hack his account and like it for him? Drama queen
# ::tokens ["well", "why", "did", "n't", "she", "just", "hack", "his", "account", "and", "like", "it", "for", "him", "?", "Drama", "queen"]
# ::lemmas ["well", "why", "do", "not", "she", "just", "hack", "his", "account", "and", "like", "it", "for", "he", "?", "drama", "queen"]
(c15-4 / multi-sentence
       :snt1 (c15-11 / cause-01
                     :ARG0 (c15-0 / amr-unknown)
                     :ARG1 (c15-13 / and
                                   :op1 (c15-12 / hack-04
                                                :ARG0 (c15-7 / she)
                                                :ARG1 (c15-1 / account
                                                             :poss (c15-6 / he))
                                                :mod (c15-2 / just)
                                                :polarity -)
                                   :op2 (c15-10 / like-01
                                                :ARG0 c15-7
                                                :ARG1 c15-12
                                                :beneficiary (c15-8 / he)
                                                :polarity -))
                     :mod (c15-9 / well))
       :snt2 (c15-5 / queen
                    :mod (c15-3 / drama)))

# ::snt I hope her boyfriend is alive cause damn
# ::tokens ["I", "hope", "her", "boyfriend", "is", "alive", "cause", "damn"]
# ::lemmas ["i", "hope", "her", "boyfriend", "be", "alive", "cause", "damn"]
(c16-7 / hope-01
       :ARG0 (c16-3 / i)
       :ARG1 (c16-6 / live-01
                    :ARG0 (c16-5 / person
                                 :ARG0-of (c16-2 / have-rel-role-91
                                                 :ARG1 (c16-4 / she)
                                                 :ARG2 (c16-0 / boyfriend)))
                    :ARG1-of (c16-8 / cause-01
                                    :ARG0 (c16-1 / damn-01))))

# ::snt that's a whole other level of nuts. She probably has some mental problem seriously
# ::tokens ["that", "'s", "a", "whole", "other", "level", "of", "nuts", ".", "She", "probably", "has", "some", "mental", "problem", "seriously"]
# ::lemmas ["that", "be", "a", "whole", "other", "level", "of", "nut", ".", "she", "probably", "have", "some", "mental", "problem", "seriously"]
(c17-3 / multi-sentence
       :snt1 (c17-11 / level
                     :mod (c17-8 / other
                                 :mod (c17-10 / whole))
                     :mod (c17-6 / nuts)
                     :domain (c17-1 / that))
       :snt2 (c17-7 / probable
                    :domain (c17-12 / have-03
                                    :ARG0 (c17-5 / she)
                                    :ARG1 (c17-4 / problem
                                                 :topic (c17-2 / mind)
                                                 :mod (c17-0 / some))
                                    :ARG2-of (c17-9 / serious-01))))

# ::snt Pretty sure she's one of my exes.
# ::tokens ["Pretty", "sure", "she", "'s", "one", "of", "my", "exes", "."]
# ::lemmas ["pretty", "sure", "she", "be", "one", "of", "my", "ex", "."]
(c18-5 / sure-02
       :ARG0 (c18-4 / i)
       :ARG1 (c18-7 / include-91
                    :ARG1 (c18-0 / she)
                    :ARG2 (c18-6 / person
                                 :ARG0-of (c18-3 / have-rel-role-91
                                                 :ARG1 c18-4
                                                 :ARG2 (c18-1 / ex))))
       :degree (c18-2 / pretty))

# ::snt ...wow...
# ::tokens ["...", "wow", "..."]
# ::lemmas ["...", "wow", "..."]
(c19-0 / wow
       :mode expressive)

# ::snt I'm "liking" her pic, just to be safe
# ::tokens ["I", "'m", "\"", "liking", "\"", "her", "pic", ",", "just", "to", "be", "safe"]
# ::lemmas ["i", "be", "\"", "like", "\"", "her", "pic", ",", "just", "to", "be", "safe"]
(c20-5 / love-01
       :ARG0 (c20-2 / i)
       :ARG1 (c20-4 / picture
                    :poss (c20-3 / she))
       :purpose (c20-0 / safe-01
                       :ARG1 c20-2
                       :mod (c20-1 / just)))

# ::snt you know it's probably real somewhere lol
# ::tokens ["you", "know", "it", "'s", "probably", "real", "somewhere", "lol"]
# ::lemmas ["you", "know", "it", "be", "probably", "real", "somewhere", "lol"]
(c21-2 / know-01
       :ARG0 (c21-3 / you)
       :ARG1 (c21-1 / real-04
                    :ARG1 (c21-4 / it)
                    :location (c21-5 / somewhere)
                    :mod (c21-6 / probable))
       :ARG2-of (c21-7 / laugh-01
                       :ARG0 (c21-8 / i)
                       :manner (c21-0 / loud)
                       :mode expressive))

# ::snt same
# ::tokens ["same"]
# ::lemmas ["same"]
(c22-0 / same-01)

# ::snt wtf.
# ::tokens ["wtf", "."]
# ::lemmas ["wtf", "."]
(c23-0 / amr-unknown
       :mod (c23-1 / fuck))

# ::snt . Let's hope he likes her prison photo a bit faster.
# ::tokens [".", "Let", "'s", "hope", "he", "likes", "her", "prison", "photo", "a", "bit", "faster", "."]
# ::lemmas [".", "let", "us", "hope", "he", "like", "her", "prison", "photo", "a", "bit", "fast", "."]
(c24-10 / hope-01
        :ARG0 (c24-7 / we)
        :ARG1 (c24-8 / like-01
                     :ARG0 (c24-3 / he)
                     :ARG1 (c24-5 / photo
                                  :mod (c24-1 / prison)
                                  :poss (c24-4 / she))
                     :ARG1-of (c24-6 / have-degree-91
                                     :ARG2 (c24-9 / fast-02
                                                  :ARG1 c24-8)
                                     :ARG3 (c24-2 / more
                                                  :quant (c24-0 / bit))))
        :mode imperative)

# ::snt This is how Trump acts with his staff.
# ::tokens ["This", "is", "how", "Trump", "acts", "with", "his", "staff", "."]
# ::lemmas ["this", "be", "how", "Trump", "act", "with", "his", "staff", "."]
(c25-0 / act-01
       :ARG0 (c25-3 / person
                    :name (c25-4 / name
                                 :op1 "Trump"))
       :manner (c25-1 / this)
       :accompanier (c25-2 / staff
                           :poss c25-3))

# ::snt I think social media is making us callous, less compassionate.
# ::tokens ["I", "think", "social", "media", "is", "making", "us", "callous", ",", "less", "compassionate", "."]
# ::lemmas ["i", "think", "social", "medium", "be", "make", "we", "callous", ",", "less", "compassionate", "."]
(c26-1 / think-01
       :ARG0 (c26-5 / i)
       :ARG1 (c26-3 / make-02
                    :ARG0 (c26-2 / media
                                 :mod (c26-6 / social))
                    :ARG1 (c26-0 / and
                                 :op1 (c26-10 / callous
                                              :domain (c26-7 / we))
                                 :op2 (c26-9 / have-degree-91
                                             :ARG1 c26-7
                                             :ARG2 (c26-4 / compassionate)
                                             :ARG3 (c26-8 / less)))))

# ::snt that'll teach him
# ::tokens ["that", "'ll", "teach", "him"]
# ::lemmas ["that", "'ll", "teach", "he"]
(c27-1 / teach-01
       :ARG0 (c27-0 / that)
       :ARG2 (c27-2 / he))

# ::snt Justifiable.
# ::tokens ["Justifiable", "."]
# ::lemmas ["justifiable", "."]
(c28-0 / possible-01
       :ARG1 (c28-1 / justify-01))

# ::snt shes right about the fact that all girls want the man they love to like their (cont)
# ::tokens ["she", "s", "right", "about", "the", "fact", "that", "all", "girls", "want", "the", "man", "they", "love", "to", "like", "their", "(", "cont", ")"]
# ::lemmas ["she", "s", "right", "about", "the", "fact", "that", "all", "girl", "want", "the", "man", "they", "love", "to", "like", "their", "(", "cont", ")"]
(c29-2 / right-06
       :ARG2 (c29-5 / seem-01
                    :ARG1 (c29-6 / want-01
                                 :ARG0 (c29-3 / girl
                                              :mod (c29-0 / all))
                                 :ARG1 (c29-7 / like-01
                                              :ARG0 c29-3
                                              :ARG1 (c29-4 / man
                                                           :ARG1-of (c29-1 / love-01
                                                                           :ARG0 c29-3))))))

# ::snt the one about the woman doing a shit in the restaurant
# ::tokens ["the", "one", "about", "the", "woman", "doing", "a", "shit", "in", "the", "restaurant"]
# ::lemmas ["the", "one", "about", "the", "woman", "do", "a", "shit", "in", "the", "restaurant"]
(c30-2 / one
       :topic (c30-4 / do-02
                     :ARG0 (c30-3 / woman)
                     :ARG1 (c30-1 / shit)
                     :location (c30-0 / restaurant)))

# ::snt I hate it when that happens! "He" needs a shrink? He's gotta find out, how he wound up with this nut job! Fast?
# ::tokens ["I", "hate", "it", "when", "that", "happens", "!", "\"", "He", "\"", "needs", "a", "shrink", "?", "He", "'s", "got", "ta", "find", "out", ",", "how", "he", "wound", "up", "with", "this", "nut", "job", "!", "Fast", "?"]
# ::lemmas ["i", "hate", "it", "when", "that", "happen", "!", "\"", "he", "\"", "need", "a", "shrink", "?", "he", "be", "got", "to", "find", "out", ",", "how", "he", "wind", "up", "with", "this", "nut", "job", "!", "fast", "?"]
(c31-17 / multi-sentence
        :snt1 (c31-12 / hate-01
                      :ARG0 (c31-4 / i)
                      :time (c31-0 / that))
        :snt2 (c31-6 / need-01
                     :ARG0 (c31-15 / he)
                     :ARG1 (c31-11 / shrink)
                     :polarity (c31-14 / amr-unknown)
                     :polarity (c31-13 / amr-unknown))
        :snt3 (c31-18 / obligate-01
                      :ARG1 (c31-5 / he)
                      :ARG2 (c31-8 / find-out-03
                                   :ARG0 c31-5
                                   :ARG1 (c31-3 / thing
                                                :manner-of (c31-7 / wound-up-03
                                                                  :ARG1 c31-5
                                                                  :ARG2 (c31-2 / job
                                                                               :mod (c31-9 / nut)
                                                                               :mod (c31-10 / this))))))
        :snt4 (c31-16 / fast-02
                      :polarity (c31-1 / amr-unknown)))

# ::snt This a true report with "actual" quotes? if so, she should just go ahead &amp; join the Texan pleading
# ::tokens ["This", "a", "true", "report", "with", "\"", "actual", "\"", "quotes", "?", "if", "so", ",", "she", "should", "just", "go", "ahead", "&", "amp", ";", "join", "the", "Texan", "pleading"]
# ::lemmas ["this", "a", "true", "report", "with", "\"", "actual", "\"", "quote", "?", "if", "so", ",", "she", "should", "just", "go", "ahead", "&", "amp", ";", "join", "the", "Texan", "pleading"]
(c32-19 / multi-sentence
        :snt1 (c32-9 / report-01
                     :polarity (c32-15 / amr-unknown)
                     :ARG1 (c32-2 / this)
                     :ARG1-of (c32-5 / true-01)
                     :accompanier (c32-11 / quote-01
                                          :ARG1-of (c32-14 / actual-02))
                     :ARG1 c32-9)
        :snt2 (c32-6 / recommend-01
                     :ARG1 (c32-3 / and
                                  :op1 (c32-10 / go-06
                                               :ARG0 (c32-13 / she)
                                               :ARG2 (c32-12 / ahead)
                                               :mod (c32-4 / just))
                                  :op2 (c32-1 / amp))
                     :ARG2 c32-13
                     :condition (c32-0 / so))
        :snt3 (c32-20 / join-04
                      :ARG0 (c32-18 / you)
                      :ARG1 (c32-17 / plead-01
                                    :ARG0 (c32-16 / person
                                                  :mod (c32-7 / state
                                                              :name (c32-8 / name
                                                                           :op1 "Texas"))))
                      :mode imperative))

# ::snt Yikes!
# ::tokens ["Yikes", "!"]
# ::lemmas ["yike", "!"]
(c33-0 / yikes
       :mode expressive)

# ::snt Holy Moly! I'm getting real soon
# ::tokens ["Holy", "Moly", "!", "I", "'m", "getting", "real", "soon"]
# ::lemmas ["Holy", "Moly", "!", "i", "be", "get", "real", "soon"]
(c34-1 / multi-sentence
       :snt1 (c34-5 / holy
                    :mode expressive)
       :snt2 (c34-2 / get-03
                    :ARG1 (c34-3 / i)
                    :ARG2 (c34-0 / real-04
                                 :ARG1 c34-3)
                    :time (c34-4 / soon)))

# ::snt Ya think...?
# ::tokens ["Ya", "think", "...", "?"]
# ::lemmas ["ya", "think", "...", "?"]
(c35-2 / think-01
       :polarity (c35-0 / amr-unknown)
       :ARG0 (c35-1 / you))

# ::snt I believe this is satire, a la "The Onion" sorry greg...
# ::tokens ["I", "believe", "this", "is", "satire", ",", "a", "la", "\"", "The", "Onion", "\"", "sorry", "greg", "..."]
# ::lemmas ["i", "believe", "this", "be", "satire", ",", "a", "la", "\"", "The", "Onion", "\"", "sorry", "greg", "..."]
(c36-6 / say-01
       :ARG0 (c36-5 / i)
       :ARG1 (c36-3 / believe-01
                    :ARG0 c36-5
                    :ARG1 (c36-0 / satire
                                 :domain (c36-1 / this)
                                 :ARG1-of (c36-2 / resemble-01
                                                 :ARG2 (c36-7 / publication
                                                              :name (c36-8 / name
                                                                           :op1 "The"
                                                                           :op2 "Onion")))))
       :ARG2 (c36-4 / greg
                    :ARG1-of (c36-9 / sorry-01)))

# ::snt was she sitting right next to him and shit is there a time line to like a selfie best start looking
# ::tokens ["was", "she", "sitting", "right", "next", "to", "him", "and", "shit", "is", "there", "a", "time", "line", "to", "like", "a", "selfie", "best", "start", "looking"]
# ::lemmas ["be", "she", "sit", "right", "next", "to", "he", "and", "shit", "be", "there", "a", "time", "line", "to", "like", "a", "selfie", "well", "start", "look"]
(c38-0 / and
       :op1 (c38-11 / sit-01
                    :ARG1 (c38-1 / she)
                    :ARG2 (c38-12 / next-to
                                  :op1 (c38-16 / he)
                                  :mod (c38-6 / right))
                    :polarity (c38-17 / amr-unknown))
       :op2 (c38-15 / line
                    :mod (c38-4 / time)
                    :purpose (c38-5 / like-01
                                    :ARG1 (c38-13 / start-01
                                                  :ARG1 (c38-2 / look-01
                                                               :ARG0 (c38-14 / person
                                                                             :ARG0-of (c38-7 / photograph-01))
                                                               :ARG1-of (c38-10 / have-degree-91
                                                                                :ARG2 (c38-8 / good-02
                                                                                             :ARG1 c38-13)
                                                                                :ARG3 (c38-9 / most))))
                                    :mod (c38-3 / shit
                                                :mode expressive))))

# ::snt tru
# ::tokens ["tru"]
# ::lemmas ["tru"]
(c39-0 / person
       :name (c39-1 / name
                    :op1 "tru"))

# ::snt Thai is you all over it
# ::tokens ["Thai", "is", "you", "all", "over", "it"]
# ::lemmas ["Thai", "be", "you", "all", "over", "it"]
(c40-2 / say-01
       :ARG0 (c40-1 / i)
       :ARG1 (c40-0 / all-over
                    :op1 (c40-5 / it)
                    :domain (c40-3 / person
                                   :name (c40-4 / name
                                                :op1 "Thai")
                                   :ARG2-of c40-2)))

# ::snt Ahhh ...(sings*) 'Memories ...Like the corners of my mind,Sticky, bloody~coloredMemories ...'
# ::tokens ["Ahhh", "...", "(", "sings", "*", ")", "'", "Memories", "...", "Like", "the", "corners", "of", "my", "mind", ",", "Sticky", ",", "bloody", "~", "coloredMemories", "...", "'"]
# ::lemmas ["ahhh", "...", "(", "sing", "*", ")", "'", "memory", "...", "like", "the", "corner", "of", "my", "mind", ",", "Sticky", ",", "bloody", "~", "coloredmemorie", "...", "'"]
(c41-0 / and
       :op1 (c41-11 / ah
                    :mode expressive)
       :op2 (c41-10 / feel-01
                    :ARG1 (c41-5 / memory))
       :op3 (c41-1 / resemble-01
                   :ARG1 c41-5
                   :ARG2 (c41-2 / corner
                                :part-of (c41-3 / mind
                                                :part-of (c41-7 / i))))
       :op4 (c41-9 / memory
                   :ARG1-of (c41-6 / color-01
                                   :manner (c41-4 / bloody))
                   :ARG1-of (c41-8 / stick-01)))

# ::snt She could've just texted him a ! (Dj vu? )
# ::tokens ["She", "could", "'ve", "just", "texted", "him", "a", "!", "(", "Dj", "vu", "?", ")"]
# ::lemmas ["she", "could", "'ve", "just", "texte", "he", "a", "!", "(", "dj", "vu", "?", ")"]
(c42-5 / possible-01
       :ARG1 (c42-1 / text-01
                    :ARG0 (c42-4 / she)
                    :ARG1 (c42-0 / string-entity
                                 :value "!")
                    :ARG2 (c42-6 / he)
                    :mod (c42-3 / just))
       :ARG1-of (c42-2 / request-confirmation-91))

# ::snt count yourself lucky if I like any of them
# ::tokens ["count", "yourself", "lucky", "if", "I", "like", "any", "of", "them"]
# ::lemmas ["count", "yourself", "lucky", "if", "i", "like", "any", "of", "they"]
(c43-8 / count-02
       :ARG0 (c43-3 / you
                    :ARG1-of c43-8)
       :ARG2 (c43-6 / lucky)
       :condition (c43-2 / like-01
                         :ARG0 (c43-4 / i)
                         :ARG1 (c43-5 / person
                                      :ARG1-of (c43-7 / include-91
                                                      :ARG2 (c43-1 / they))
                                      :mod (c43-0 / any)))
       :mode imperative)

# ::snt WTF!!!
# ::tokens ["WTF", "!", "!", "!"]
# ::lemmas ["WTF", "!", "!", "!"]
(c44-0 / amr-unknown
       :mod (c44-1 / fuck
                   :mode expressive))

# ::snt ????
# ::tokens ["?", "?", "?", "?"]
# ::lemmas ["?", "?", "?", "?"]
(c45-0 / amr-empty)

# ::snt Wife her bruh!
# ::tokens ["Wife", "her", "bruh", "!"]
# ::lemmas ["wife", "her", "bruh", "!"]
(c46-2 / give-01
       :ARG0 (c46-1 / you)
       :ARG1 (c46-0 / bruh)
       :ARG2 (c46-3 / she)
       :mode imperative)

# ::snt What a Real Sweetheart....
# ::tokens ["What", "a", "Real", "Sweetheart", "...."]
# ::lemmas ["what", "a", "Real", "Sweetheart", "...."]
(c47-0 / sweetheart
       :ARG1-of (c47-1 / real-04))

# ::snt Did she post a photo of him after she stabbed him ?
# ::tokens ["Did", "she", "post", "a", "photo", "of", "him", "after", "she", "stabbed", "him", "?"]
# ::lemmas ["do", "she", "post", "a", "photo", "of", "he", "after", "she", "stab", "he", "?"]
(c48-4 / post-01
       :polarity (c48-0 / amr-unknown)
       :ARG0 (c48-3 / she)
       :ARG1 (c48-2 / photo
                    :topic (c48-5 / he))
       :time (c48-6 / after
                    :op1 (c48-1 / stab-01
                                :ARG0 c48-3
                                :ARG1 c48-5)))

# ::snt I can only imagine what would have happened if he had misused the new
# ::tokens ["I", "can", "only", "imagine", "what", "would", "have", "happened", "if", "he", "had", "misused", "the", "new"]
# ::lemmas ["i", "can", "only", "imagine", "what", "would", "have", "happen", "if", "he", "have", "misuse", "the", "new"]
(c49-5 / possible-01
       :ARG1 (c49-4 / imagine-01
                    :ARG0 (c49-8 / i)
                    :ARG1 (c49-1 / event
                                 :condition (c49-2 / misuse-01
                                                   :ARG0 (c49-3 / he)
                                                   :ARG1 (c49-0 / thing
                                                                :ARG1-of (c49-6 / new-01))))
                    :mod (c49-7 / only)))

# ::snt very dumb girl
# ::tokens ["very", "dumb", "girl"]
# ::lemmas ["very", "dumb", "girl"]
(c50-1 / girl
       :mod (c50-2 / dumb
                   :degree (c50-0 / very)))
