# ::snt In public. Hey, you ever hear of the Bill of Rights? Boom.
# ::tokens ["In", "public", ".", "Hey", ",", "you", "ever", "hear", "of", "the", "Bill", "of", "Rights", "?", "Boom", "."]
# ::lemmas ["in", "public", ".", "hey", ",", "you", "ever", "hear", "of", "the", "Bill", "of", "Rights", "?", "Boom", "."]
(c1-3 / multi-sentence
      :snt1 (c1-5 / public-02)
      :snt2 (c1-8 / hear-01
                  :ARG0 (c1-2 / you)
                  :ARG1 (c1-7 / law
                              :name (c1-6 / name
                                          :op1 "Bill"
                                          :op2 "of"
                                          :op3 "Rights"))
                  :time (c1-1 / ever)
                  :polarity (c1-0 / amr-unknown)
                  :mod (c1-4 / hey
                             :mode expressive)))

# ::snt Sometimes you just gotta air your stuff out, and you lose your pants and instinctively start looking for it
# ::tokens ["Sometimes", "you", "just", "got", "ta", "air", "your", "stuff", "out", ",", "and", "you", "lose", "your", "pants", "and", "instinctively", "start", "looking", "for", "it"]
# ::lemmas ["sometimes", "you", "just", "got", "to", "air", "your", "stuff", "out", ",", "and", "you", "lose", "your", "pant", "and", "instinctively", "start", "look", "for", "it"]
(c2-0 / and
      :op1 (c2-10 / obligate-01
                  :ARG1 (c2-5 / you)
                  :ARG2 (c2-12 / air-out-03
                               :ARG0 c2-5
                               :ARG1 (c2-7 / stuff
                                           :poss c2-5))
                  :mod (c2-4 / just)
                  :frequency (c2-1 / sometimes))
      :op2 (c2-2 / and
                 :op1 (c2-11 / lose-02
                             :ARG0 c2-5
                             :ARG1 (c2-8 / pants
                                         :poss c2-5))
                 :op2 (c2-9 / start-01
                            :ARG0 c2-5
                            :ARG1 (c2-3 / look-01
                                        :ARG0 c2-5
                                        :ARG1 c2-7)
                            :manner (c2-6 / instinct))))

# ::snt funniest part is that he had a jacket &amp; shirt. Tie one around the waist hanging in front, one in back, makeshift kilt. Solved.
# ::tokens ["funniest", "part", "is", "that", "he", "had", "a", "jacket", "&", "amp", ";", "shirt", ".", "Tie", "one", "around", "the", "waist", "hanging", "in", "front", ",", "one", "in", "back", ",", "makeshift", "kilt", ".", "Solved", "."]
# ::lemmas ["funniest", "part", "be", "that", "he", "have", "a", "jacket", "&", "amp", ";", "shirt", ".", "tie", "one", "around", "the", "waist", "hang", "in", "front", ",", "one", "in", "back", ",", "makeshift", "kilt", ".", "solve", "."]
(c3-24 / multi-sentence
       :snt1 (c3-22 / part
                    :domain (c3-17 / have-03
                                   :ARG0 (c3-21 / he)
                                   :ARG1 (c3-19 / and
                                                :op1 (c3-3 / jacket)
                                                :op2 (c3-18 / amphetamine)
                                                :op3 (c3-14 / shirt)))
                    :ARG1-of (c3-6 / have-degree-91
                                   :ARG2 (c3-8 / funny-02
                                               :ARG1 c3-22)
                                   :ARG3 (c3-9 / most)))
       :snt2 (c3-1 / and
                   :op1 (c3-2 / tie-01
                              :ARG1 (c3-25 / one)
                              :ARG3 (c3-13 / around
                                           :op1 (c3-7 / waist)))
                   :op2 (c3-5 / tie-01
                              :ARG1 (c3-20 / one
                                           :location (c3-23 / front))
                              :location c3-13
                              :op1 (c3-10 / waist)))
       :op3 (c3-11 / tie-01
                   :ARG1 (c3-15 / one)
                   :location (c3-4 / back))
       :op4 (c3-12 / kilt
                   :mod (c3-16 / makeshift))
       :snt3 (c3-0 / solve-01))

# ::snt Sign says "No Shoes, No Shirt, No Service". It did not say "No Pants".
# ::tokens ["Sign", "says", "\"", "No", "Shoes", ",", "No", "Shirt", ",", "No", "Service", "\"", ".", "It", "did", "not", "say", "\"", "No", "Pants", "\"", "."]
# ::lemmas ["Sign", "say", "\"", "No", "Shoes", ",", "no", "shirt", ",", "No", "Service", "\"", ".", "it", "do", "not", "say", "\"", "No", "Pants", "\"", "."]
(c4-3 / multi-sentence
      :snt1 (c4-5 / say-01
                  :ARG0 (c4-0 / sign)
                  :ARG1 (c4-1 / and
                              :op1 (c4-6 / shoe
                                         :polarity -)
                              :op2 (c4-9 / shirt
                                         :polarity -)
                              :op3 (c4-8 / serve-01
                                         :polarity -)))
      :snt2 (c4-2 / say-01
                  :ARG0 (c4-4 / it)
                  :ARG1 (c4-7 / pants
                              :polarity -)
                  :polarity -))

# ::snt hey that undertow is hell
# ::tokens ["hey", "that", "undertow", "is", "hell"]
# ::lemmas ["hey", "that", "undertow", "be", "hell"]
(c5-2 / hell
      :domain (c5-1 / undertow
                    :mod (c5-0 / that)))

# ::snt I think I know that guy
# ::tokens ["I", "think", "I", "know", "that", "guy"]
# ::lemmas ["i", "think", "i", "know", "that", "guy"]
(c6-0 / think-01
      :ARG0 (c6-4 / i)
      :ARG1 (c6-2 / know-02
                  :ARG0 c6-4
                  :ARG1 (c6-3 / guy
                              :mod (c6-1 / that))))

# ::snt priorities.
# ::tokens ["priorities", "."]
# ::lemmas ["priority", "."]
(c7-0 / thing
      :ARG2-of (c7-1 / prize-01))

# ::snt gives new meaning to "a white sports coat and a pink...er..." Well, you know
# ::tokens ["gives", "new", "meaning", "to", "\"", "a", "white", "sports", "coat", "and", "a", "pink", "...", "er", "...", "\"", "Well", ",", "you", "know"]
# ::lemmas ["give", "new", "meaning", "to", "\"", "a", "white", "sport", "coat", "and", "a", "pink", "...", "er", "...", "\"", "well", ",", "you", "know"]
(c8-5 / give-01
      :ARG1 (c8-4 / mean-01
                  :ARG2 (c8-0 / and
                              :op1 (c8-10 / coat
                                          :mod (c8-6 / sport)
                                          :ARG1-of (c8-9 / white-03))
                              :op2 (c8-1 / thing
                                         :ARG1-of (c8-7 / pink-04)))
                  :ARG1-of (c8-8 / new-01))
      :ARG2 (c8-3 / you)
      :mod (c8-2 / well))

# ::snt "The Palm Beach Experience"
# ::tokens ["\"", "The", "Palm", "Beach", "Experience", "\""]
# ::lemmas ["\"", "the", "Palm", "Beach", "experience", "\""]
(c9-1 / event
      :name (c9-0 / name
                  :op1 "The"
                  :op2 "Palm"
                  :op3 "Beach"
                  :op4 "Experience"))

# ::snt someone asked him if he was up for anything, sadly it was "walk down the street in the nude"
# ::tokens ["someone", "asked", "him", "if", "he", "was", "up", "for", "anything", ",", "sadly", "it", "was", "\"", "walk", "down", "the", "street", "in", "the", "nude", "\""]
# ::lemmas ["someone", "ask", "he", "if", "he", "be", "up", "for", "anything", ",", "sadly", "it", "be", "\"", "walk", "down", "the", "street", "in", "the", "nude", "\""]
(c10-0 / ask-01
       :ARG0 (c10-6 / someone)
       :ARG1 (c10-2 / truth-value
                    :polarity-of (c10-5 / up-03
                                        :ARG1 (c10-10 / he)
                                        :ARG2 (c10-11 / anything)))
       :ARG2 c10-10
       :ARG0-of (c10-1 / sad-02)
       :ARG1-of (c10-4 / mean-01
                       :ARG2 (c10-9 / walk-01
                                    :ARG0 c10-10
                                    :ARG2 (c10-7 / street
                                                 :direction (c10-3 / down))
                                    :manner (c10-8 / nude))))

# ::snt subscribed to this and still thinking of moving to fl, what's wrong with me
# ::tokens ["subscribed", "to", "this", "and", "still", "thinking", "of", "moving", "to", "fl", ",", "what", "'s", "wrong", "with", "me"]
# ::lemmas ["subscribe", "to", "this", "and", "still", "think", "of", "move", "to", "fl", ",", "what", "be", "wrong", "with", "i"]
(c11-7 / wrong-02
       :ARG1 (c11-0 / amr-unknown)
       :ARG2 (c11-5 / i)
       :ARG1-of (c11-8 / cause-01
                       :ARG0 (c11-10 / and
                                     :op1 (c11-6 / subscribe-01
                                                 :ARG1 c11-5
                                                 :ARG3 (c11-2 / this))
                                     :op2 (c11-3 / think-01
                                                 :ARG0 c11-5
                                                 :ARG1 (c11-4 / move-01
                                                              :ARG0 c11-5
                                                              :ARG2 (c11-9 / fl))
                                                 :mod (c11-1 / still)))))

# ::snt living the dream...
# ::tokens ["living", "the", "dream", "..."]
# ::lemmas ["live", "the", "dream", "..."]
(c12-0 / live-01
       :ARG1 (c12-1 / dream-01))

# ::snt No Shirt, No Shoes, No Service.
# ::tokens ["No", "Shirt", ",", "No", "Shoes", ",", "No", "Service", "."]
# ::lemmas ["no", "shirt", ",", "no", "shoe", ",", "No", "Service", "."]
(c13-0 / and
       :op1 (c13-2 / shirt
                   :polarity -)
       :op2 (c13-1 / shoe
                   :polarity -)
       :op3 (c13-3 / serve-01
                   :polarity -))
