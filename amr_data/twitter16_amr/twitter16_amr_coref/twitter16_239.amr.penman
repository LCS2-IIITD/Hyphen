# ::snt create a flag of opposers NOT going to a gay wedding and fly it on your lawn then.
# ::tokens ["create", "a", "flag", "of", "opposers", "NOT", "going", "to", "a", "gay", "wedding", "and", "fly", "it", "on", "your", "lawn", "then", "."]
# ::lemmas ["create", "a", "flag", "of", "opposer", "not", "go", "to", "a", "gay", "wedding", "and", "fly", "it", "on", "your", "lawn", "then", "."]
(c1-0 / and
      :op1 (c1-11 / create-01
                  :ARG0 (c1-3 / you)
                  :ARG1 (c1-10 / flag
                               :consist-of (c1-6 / person
                                                 :ARG0-of (c1-7 / oppose-01
                                                                :polarity -)))
                  :mode imperative)
      :op2 (c1-4 / go-02
                 :ARG0 c1-3
                 :ARG4 (c1-8 / wed-01
                             :ARG1-of (c1-5 / gay-01))
                 :polarity -)
      :op3 (c1-2 / fly-01
                 :ARG0 c1-3
                 :destination (c1-9 / lawn
                                    :poss c1-3)
                 :mode imperative)
      :mod (c1-1 / then))

# ::snt . I agree.They are Really ramming this Down our THROATS. IF YOU DISAGREE YOU ARE A HOMOPHOBIA. I DON'T AGREE
# ::tokens [".", "I", "agree", ".", "They", "are", "Really", "ramming", "this", "Down", "our", "THROATS", ".", "IF", "YOU", "DISAGREE", "YOU", "ARE", "A", "HOMOPHOBIA", ".", "I", "DON'T", "AGREE"]
# ::lemmas [".", "i", "agree", ".", "they", "be", "really", "ram", "this", "down", "our", "throat", ".", "if", "you", "disagree", "you", "be", "a", "homophobia", ".", "i", "don't", "AGREE"]
(c2-7 / multi-sentence
      :snt1 (c2-0 / agree-01
                  :ARG0 (c2-10 / i))
      :snt2 (c2-2 / ram-01
                  :ARG0 (c2-1 / they)
                  :ARG1 (c2-5 / this)
                  :ARG2 (c2-14 / down-01
                               :ARG1 (c2-4 / butt
                                           :poss (c2-11 / we)))
                  :ARG1-of (c2-8 / real-04))
      :snt3 (c2-13 / have-condition-91
                   :ARG1 c2-0
                   :ARG0 (c2-3 / i)
                   :polarity -)
      :ARG2 (c2-9 / homo
                  :domain (c2-6 / you))
      :snt4 c2-0
      :ARG0 (c2-12 / i)
      :polarity -)

# ::snt It was but a -4 vote correct? Is it lit green-red-white with a Mexicans Welcome every other night?
# ::tokens ["It", "was", "but", "a", "-4", "vote", "correct", "?", "Is", "it", "lit", "green", "-", "red", "-", "white", "with", "a", "Mexicans", "Welcome", "every", "other", "night", "?"]
# ::lemmas ["it", "be", "but", "a", "-4", "vote", "correct", "?", "be", "it", "light", "green", "-", "red", "-", "white", "with", "a", "Mexicans", "welcome", "every", "other", "night", "?"]
(c3-4 / multi-sentence
      :snt1 (c3-16 / correct-02
                   :ARG1 (c3-8 / it)
                   :concession (c3-12 / vote-01
                                      :quant 4)
                   :polarity -)
      :snt2 (c3-0 / and
                  :op1 (c3-14 / light-06
                              :ARG1 (c3-15 / it)
                              :ARG2 (c3-5 / green)
                              :ARG3 (c3-2 / red-02))
                  :op2 (c3-13 / welcome-01
                              :ARG0 (c3-10 / person
                                           :mod (c3-6 / country
                                                      :name (c3-11 / name
                                                                   :op1 "Mexico")))
                              :frequency (c3-7 / rate-entity-91
                                               :ARG3 (c3-1 / temporal-quantity
                                                           :unit (c3-3 / day)
                                                           :quant 2)))
                  :polarity (c3-9 / amr-unknown)))

# ::snt does the sign on front door say Enter in the Rear
# ::tokens ["does", "the", "sign", "on", "front", "door", "say", "Enter", "in", "the", "Rear"]
# ::lemmas ["do", "the", "sign", "on", "front", "door", "say", "enter", "in", "the", "rear"]
(c4-5 / sign
      :polarity (c4-0 / amr-unknown)
      :location (c4-7 / door
                      :mod (c4-6 / front))
      :ARG0-of (c4-1 / say-01
                     :ARG1 (c4-3 / enter-01
                                 :ARG0 (c4-4 / you)
                                 :ARG1 (c4-2 / rear)
                                 :mode imperative)))

# ::snt how Juvenile.
# ::tokens ["how", "Juvenile", "."]
# ::lemmas ["how", "Juvenile", "."]
(c5-1 / juvenile
      :degree (c5-0 / so))

# ::snt Yours are offending mine now.
# ::tokens ["Yours", "are", "offending", "mine", "now", "."]
# ::lemmas ["your", "be", "offend", "mine", "now", "."]
(c6-4 / offend-01
      :ARG0 (c6-1 / you)
      :ARG1 (c6-0 / thing
                  :poss (c6-2 / i))
      :time (c6-3 / now))

# ::snt Wow, that's taking it a bit far!
# ::tokens ["Wow", ",", "that", "'s", "taking", "it", "a", "bit", "far", "!"]
# ::lemmas ["wow", ",", "that", "be", "take", "it", "a", "bit", "far", "!"]
(c7-0 / take-01
      :ARG0 (c7-2 / that)
      :ARG1 (c7-3 / it)
      :ARG3 (c7-5 / far
                  :degree (c7-1 / bit))
      :mod (c7-4 / wow
                 :mode expressive))

# ::snt If you're a pole smoker, I guess it's cool
# ::tokens ["If", "you", "'re", "a", "pole", "smoker", ",", "I", "guess", "it", "'s", "cool"]
# ::lemmas ["if", "you", "be", "a", "pole", "smoker", ",", "i", "guess", "it", "be", "cool"]
(c9-1 / guess-01
      :ARG0 (c9-2 / i)
      :ARG1 (c9-5 / cool-04
                  :ARG1 (c9-3 / smoke-02
                              :ARG0 (c9-0 / you)
                              :mod (c9-4 / pole)))
      :condition c9-0)

# ::snt that's why they did this so that you can have a pretty rainbow one yay!
# ::tokens ["that", "'s", "why", "they", "did", "this", "so", "that", "you", "can", "have", "a", "pretty", "rainbow", "one", "yay", "!"]
# ::lemmas ["that", "be", "why", "they", "do", "this", "so", "that", "you", "can", "have", "a", "pretty", "rainbow", "one", "yay", "!"]
(c10-8 / cause-01
       :ARG0 (c10-0 / that)
       :ARG1 (c10-10 / do-02
                     :ARG0 (c10-3 / they)
                     :ARG1 (c10-4 / this)
                     :purpose (c10-7 / possible-01
                                     :ARG1 (c10-9 / have-03
                                                  :ARG0 (c10-5 / you)
                                                  :ARG1 (c10-1 / rainbow
                                                               :mod (c10-6 / pretty))
                                                  :mod (c10-2 / yay)))))

# ::snt welcome to the land of the free
# ::tokens ["welcome", "to", "the", "land", "of", "the", "free"]
# ::lemmas ["welcome", "to", "the", "land", "of", "the", "free"]
(c11-0 / welcome-01
       :ARG2 (c11-1 / land
                    :poss (c11-3 / person
                                 :ARG1-of (c11-2 / free-04))))

# ::snt Disgusting leadership spawns disgusting behavior and it's on display right hear.
# ::tokens ["Disgusting", "leadership", "spawns", "disgusting", "behavior", "and", "it", "'s", "on", "display", "right", "hear", "."]
# ::lemmas ["Disgusting", "leadership", "spawn", "disgusting", "behavior", "and", "it", "be", "on", "display", "right", "hear", "."]
(c13-0 / and
       :op1 (c13-5 / spawn-01
                   :ARG0 (c13-6 / lead-02
                                :ARG0-of (c13-8 / disgust-01))
                   :ARG1 (c13-3 / behave-01
                                :ARG0-of (c13-1 / disgust-01)))
       :op2 (c13-4 / display-01
                   :ARG1 c13-3
                   :ARG2 (c13-7 / hear-01
                                :mod (c13-2 / right))))

# ::snt yes isn't it positively devine and awesome!!!
# ::tokens ["yes", "is", "n't", "it", "positively", "devine", "and", "awesome", "!", "!", "!"]
# ::lemmas ["yes", "be", "not", "it", "positively", "devine", "and", "awesome", "!", "!", "!"]
(c14-0 / and
       :op1 (c14-2 / devine-01
                   :ARG0 (c14-3 / it)
                   :manner (c14-4 / positive))
       :op2 (c14-5 / awe-01
                   :ARG0 c14-3)
       :ARG1-of (c14-1 / request-confirmation-91)
       :mode expressive)

# ::snt you have got to be kidding
# ::tokens ["you", "have", "got", "to", "be", "kidding"]
# ::lemmas ["you", "have", "get", "to", "be", "kid"]
(c15-2 / get-06
       :ARG0 (c15-1 / you)
       :ARG1 (c15-0 / kid-01
                    :ARG0 c15-1))

# ::snt aye, Ia Ia Cthulhu fh'tagn
# ::tokens ["aye", ",", "Ia", "Ia", "Cthulhu", "fh'tagn"]
# ::lemmas ["aye", ",", "Ia", "Ia", "Cthulhu", "fh'tagn"]
(c16-0 / and
       :op1 (c16-5 / aye)
       :op2 (c16-4 / have-mod-91
                   :ARG1 (c16-2 / i)
                   :ARG2 (c16-1 / thing
                                :name (c16-3 / name
                                             :op1 "Cthulhu"))))

# ::snt who are you? Who is anybody? Im just reading the news. Kisses &lt;3
# ::tokens ["who", "are", "you", "?", "Who", "is", "anybody", "?", "I", "m", "just", "reading", "the", "news", ".", "Kisses", "&", "lt;3"]
# ::lemmas ["who", "be", "you", "?", "who", "be", "anybody", "?", "i", "m", "just", "read", "the", "news", ".", "Kisses", "&", "lt;3"]
(c17-6 / multi-sentence
       :snt1 (c17-5 / you
                    :domain (c17-0 / amr-unknown))
       :snt2 (c17-13 / anybody
                     :domain (c17-1 / amr-unknown))
       :snt3 (c17-2 / read-01
                    :ARG0 (c17-9 / i)
                    :ARG1 (c17-10 / news)
                    :mod (c17-3 / just))
       :snt4 (c17-8 / and
                    :op1 (c17-11 / person
                                 :name (c17-4 / name
                                              :op1 "Kisses"))
                    :op2 (c17-7 / person
                                :name (c17-12 / name
                                              :op1 "lt;3"))))

# ::snt Religious Freedom is the First Freedom/Right guaranteed in the Bill of Rights.
# ::tokens ["Religious", "Freedom", "is", "the", "First", "Freedom", "/", "Right", "guaranteed", "in", "the", "Bill", "of", "Rights", "."]
# ::lemmas ["Religious", "Freedom", "be", "the", "First", "Freedom", "/", "Right", "guarantee", "in", "the", "Bill", "of", "Rights", "."]
(c18-3 / guarantee-01
       :ARG0 (c18-7 / law
                    :name (c18-5 / name
                                 :op1 "Bill"
                                 :op2 "of"
                                 :op3 "Rights"))
       :ARG1 (c18-0 / and
                    :op1 (c18-8 / free-04
                                :mod (c18-1 / religion))
                    :op2 (c18-2 / free-04
                                :mod (c18-4 / right-05))
                    :ord (c18-6 / ordinal-entity
                                :value 1)))

# ::snt I'm straight too m8, keep trying.
# ::tokens ["I", "'m", "straight", "too", "m8", ",", "keep", "trying", "."]
# ::lemmas ["i", "be", "straight", "too", "m8", ",", "keep", "try", "."]
(c19-0 / and
       :op1 (c19-10 / have-degree-91
                    :ARG1 (c19-8 / i)
                    :ARG2 (c19-5 / young)
                    :ARG3 (c19-1 / too)
                    :ARG6 (c19-7 / have-mod-91
                                 :ARG1 c19-8
                                 :ARG2 (c19-6 / m8))
                    :ARG1-of (c19-9 / straight-04))
       :op2 (c19-3 / keep-02
                   :ARG0 (c19-2 / you)
                   :ARG1 (c19-4 / try-01
                                :ARG0 c19-2)
                   :mode imperative))

# ::snt Going off your BIO. Anyway the Rainbow Flag is insulting to me. I'm guessing you don't care.
# ::tokens ["Going", "off", "your", "BIO", ".", "Anyway", "the", "Rainbow", "Flag", "is", "insulting", "to", "me", ".", "I", "'m", "guessing", "you", "do", "n't", "care", "."]
# ::lemmas ["go", "off", "your", "BIO", ".", "anyway", "the", "Rainbow", "Flag", "be", "insulting", "to", "i", ".", "i", "be", "guess", "you", "do", "not", "care", "."]
(c20-5 / multi-sentence
       :snt1 (c20-6 / go-off-16
                    :ARG1 (c20-4 / you)
                    :manner (c20-3 / bullshit-01
                                   :ARG0 c20-4))
       :snt2 (c20-9 / insult-01
                    :ARG0 (c20-10 / flag
                                  :mod (c20-1 / rainbow))
                    :ARG1 (c20-11 / i)
                    :mod (c20-0 / anyway))
       :snt3 (c20-7 / guess-01
                    :ARG0 (c20-8 / i)
                    :ARG1 (c20-12 / care-01
                                  :ARG0 (c20-2 / you)
                                  :polarity -)))

# ::snt It's ok, it can't hurt you.
# ::tokens ["It", "'s", "ok", ",", "it", "ca", "n't", "hurt", "you", "."]
# ::lemmas ["it", "be", "ok", ",", "it", "can", "not", "hurt", "you", "."]
(c21-3 / okay-04
       :ARG1 (c21-1 / it)
       :ARG1-of (c21-5 / cause-01
                       :ARG0 (c21-2 / possible-01
                                    :ARG1 (c21-4 / hurt-01
                                                 :ARG0 c21-1
                                                 :ARG1 (c21-0 / you))
                                    :polarity -)))

# ::snt it has this thing called "freedom"
# ::tokens ["it", "has", "this", "thing", "called", "\"", "freedom", "\""]
# ::lemmas ["it", "have", "this", "thing", "call", "\"", "freedom", "\""]
(c22-4 / have-03
       :ARG0 (c22-2 / it)
       :ARG1 (c22-0 / thing
                    :mod (c22-1 / this)
                    :ARG1-of (c22-5 / call-01
                                    :ARG2 (c22-3 / free-04))))

# ::snt actually I'm American, you've probably never heard of that place
# ::tokens ["actually", "I", "'m", "American", ",", "you", "'ve", "probably", "never", "heard", "of", "that", "place"]
# ::lemmas ["actually", "i", "be", "American", ",", "you", "'ve", "probably", "never", "hear", "of", "that", "place"]
(c23-0 / and
       :op1 (c23-8 / person
                   :mod (c23-11 / country
                                :name (c23-9 / name
                                             :op1 "America"))
                   :domain (c23-6 / i)
                   :ARG1-of (c23-7 / actual-02))
       :op2 (c23-10 / hear-01
                    :ARG0 (c23-4 / you)
                    :ARG1 (c23-5 / place
                                 :mod (c23-2 / that))
                    :mod (c23-1 / probable)
                    :time (c23-3 / ever)
                    :polarity -))

# ::snt Being from Canada your salt has no affect here in the United States.
# ::tokens ["Being", "from", "Canada", "your", "salt", "has", "no", "affect", "here", "in", "the", "United", "States", "."]
# ::lemmas ["be", "from", "Canada", "your", "salt", "have", "no", "affect", "here", "in", "the", "United", "States", "."]
(c24-0 / affect-01
       :ARG0 (c24-1 / be-from-91
                    :ARG1 (c24-5 / salt
                                 :poss (c24-3 / you))
                    :ARG2 (c24-8 / country
                                 :name (c24-6 / name
                                              :op1 "Canada")))
       :ARG1 (c24-7 / here
                    :location (c24-4 / country
                                     :name (c24-2 / name
                                                  :op1 "United"
                                                  :op2 "States")))
       :polarity -)

# ::snt Respect for that but not our country
# ::tokens ["Respect", "for", "that", "but", "not", "our", "country"]
# ::lemmas ["respect", "for", "that", "but", "not", "our", "country"]
(c25-5 / contrast-01
       :ARG1 (c25-1 / respect-01
                    :ARG1 (c25-0 / that))
       :ARG2 (c25-3 / respect-01
                    :ARG1 (c25-2 / country
                                 :poss (c25-4 / we))
                    :polarity -))

# ::snt I don't mind the decision today BUT that is the people's house and not every agrees. Leave it as it should be
# ::tokens ["I", "do", "n't", "mind", "the", "decision", "today", "BUT", "that", "is", "the", "people", "'s", "house", "and", "not", "every", "agrees", ".", "Leave", "it", "as", "it", "should", "be"]
# ::lemmas ["i", "do", "not", "mind", "the", "decision", "today", "but", "that", "be", "the", "people", "'s", "house", "and", "not", "every", "agree", ".", "leave", "it", "as", "it", "should", "be"]
(c26-8 / multi-sentence
       :snt1 (c26-13 / contrast-01
                     :ARG1 (c26-4 / mind-01
                                  :ARG0 (c26-9 / i)
                                  :ARG1 (c26-15 / decide-01
                                                :time (c26-1 / today))
                                  :polarity -)
                     :ARG2 (c26-0 / and
                                  :op1 (c26-14 / house
                                               :poss (c26-11 / person)
                                               :domain (c26-5 / that))
                                  :op2 (c26-10 / agree-01
                                               :ARG0 (c26-3 / everyone)
                                               :ARG1 c26-14
                                               :polarity -)))
       :snt2 (c26-12 / leave-14
                     :ARG0 (c26-7 / you)
                     :ARG1 (c26-6 / it)
                     :manner (c26-2 / recommend-01
                                    :ARG1 c26-12)
                     :mode imperative))

# ::snt the lights need to go.
# ::tokens ["the", "lights", "need", "to", "go", "."]
# ::lemmas ["the", "light", "need", "to", "go", "."]
(c29-2 / need-01
       :ARG0 (c29-0 / light)
       :ARG1 (c29-1 / go-01
                    :ARG1 c29-0))

# ::snt Well, there goes the neighborhood...
# ::tokens ["Well", ",", "there", "goes", "the", "neighborhood", "..."]
# ::lemmas ["well", ",", "there", "go", "the", "neighborhood", "..."]
(c32-2 / go-01
       :ARG1 (c32-3 / neighborhood)
       :ARG4 (c32-0 / there)
       :mod (c32-1 / well))

# ::snt I disagree, they should not have the right to marry
# ::tokens ["I", "disagree", ",", "they", "should", "not", "have", "the", "right", "to", "marry"]
# ::lemmas ["i", "disagree", ",", "they", "should", "not", "have", "the", "right", "to", "marry"]
(c37-0 / and
       :op1 (c37-6 / disagree-01
                   :ARG0 (c37-5 / i))
       :op2 (c37-2 / recommend-01
                   :ARG1 (c37-4 / right-05
                                :ARG1 (c37-1 / they)
                                :ARG2 (c37-3 / marry-01
                                             :ARG1 c37-1)
                                :polarity -)))

# ::snt will it go BLUE in April for autism
# ::tokens ["will", "it", "go", "BLUE", "in", "April", "for", "autism"]
# ::lemmas ["will", "it", "go", "BLUE", "in", "April", "for", "autism"]
(c38-2 / go-01
       :ARG1 (c38-3 / it)
       :ARG4 (c38-1 / blue)
       :polarity (c38-0 / amr-unknown)
       :time (c38-5 / date-entity
                    :month 4)
       :beneficiary (c38-4 / autism))

# ::snt how Gay
# ::tokens ["how", "Gay"]
# ::lemmas ["how", "Gay"]
(c39-0 / gay-01
       :degree (c39-1 / so))

# ::snt disgusting
# ::tokens ["disgusting"]
# ::lemmas ["disgusting"]
(c40-0 / disgust-01)

# ::snt what a shame
# ::tokens ["what", "a", "shame"]
# ::lemmas ["what", "a", "shame"]
(c41-1 / shame
       :degree (c41-0 / so))

# ::snt Are the celebrating Gay Marriage or selling out the country by passing TPP trade deal?
# ::tokens ["Are", "the", "celebrating", "Gay", "Marriage", "or", "selling", "out", "the", "country", "by", "passing", "TPP", "trade", "deal", "?"]
# ::lemmas ["be", "the", "celebrate", "Gay", "Marriage", "or", "sell", "out", "the", "country", "by", "pass", "TPP", "trade", "deal", "?"]
(c42-0 / amr-choice
       :op1 (c42-10 / celebrate-01
                    :ARG1 (c42-5 / marry-01
                                 :mod (c42-4 / gay-01)))
       :op2 (c42-7 / sell-out-03
                   :ARG1 (c42-6 / country)
                   :manner (c42-8 / pass-01
                                  :ARG1 (c42-2 / deal-01
                                               :ARG2 (c42-1 / trade-01)
                                               :mod (c42-3 / treaty
                                                           :name (c42-9 / name
                                                                        :op1 "Transport"))))))

# ::snt proud day today for Gay community and my amazing President!!!
# ::tokens ["proud", "day", "today", "for", "Gay", "community", "and", "my", "amazing", "President", "!", "!", "!"]
# ::lemmas ["proud", "day", "today", "for", "Gay", "community", "and", "my", "amazing", "President", "!", "!", "!"]
(c43-3 / day
       :ARG1-of (c43-8 / pride-01
                       :ARG0 (c43-0 / and
                                    :op1 (c43-10 / community
                                                 :ARG1-of (c43-4 / gay-01))
                                    :op2 (c43-5 / person
                                                :ARG0-of (c43-9 / have-org-role-91
                                                                :ARG1 (c43-6 / i)
                                                                :ARG2 (c43-1 / president))
                                                :ARG0-of (c43-7 / amaze-01))))
       :time (c43-2 / today))

# ::snt Lust does not equal love. This is shameful. Sin is a reproach to any people!
# ::tokens ["Lust", "does", "not", "equal", "love", ".", "This", "is", "shameful", ".", "Sin", "is", "a", "reproach", "to", "any", "people", "!"]
# ::lemmas ["lust", "do", "not", "equal", "love", ".", "this", "be", "shameful", ".", "sin", "be", "a", "reproach", "to", "any", "people", "!"]
(c44-6 / multi-sentence
       :snt1 (c44-5 / equal-01
                    :ARG1 (c44-9 / lust-01)
                    :ARG2 (c44-3 / love-01)
                    :polarity -)
       :snt2 (c44-7 / shame-02
                    :ARG0 (c44-2 / this))
       :snt3 (c44-4 / reproach-01
                    :ARG0 (c44-0 / sin-01)
                    :ARG1 (c44-8 / person
                                 :mod (c44-1 / any))))

# ::snt WHAT IF ADAM &amp; EVE WERE HOMOSEXUAL ?
# ::tokens ["WHAT", "IF", "ADAM", "&", "amp", ";", "EVE", "WERE", "HOMOSEXUAL", "?"]
# ::lemmas ["what", "if", "ADAM", "&", "amp", ";", "EVE", "be", "HOMOSEXUAL", "?"]
(c45-6 / have-condition-91
       :ARG1 (c45-3 / homosexuality
                    :domain (c45-0 / and
                                   :op1 (c45-4 / person
                                               :name (c45-5 / name
                                                            :op1 "ADAM"))
                                   :op2 (c45-2 / person
                                               :name (c45-1 / name
                                                            :op1 "amp"))))
       :ARG2 (c45-7 / amr-unknown))

# ::snt what a sad day for America.
# ::tokens ["what", "a", "sad", "day", "for", "America", "."]
# ::lemmas ["what", "a", "sad", "day", "for", "America", "."]
(c46-1 / day
       :ARG0-of (c46-2 / sad-02
                       :degree (c46-0 / so))
       :beneficiary (c46-4 / country
                           :name (c46-3 / name
                                        :op1 "America")))

# ::snt is this Obama's sole achievement...after nearly years.
# ::tokens ["is", "this", "Obama", "'s", "sole", "achievement", "...", "after", "nearly", "years", "."]
# ::lemmas ["be", "this", "Obama", "'s", "sole", "achievement", "...", "after", "nearly", "years", "."]
(c47-0 / achieve-01
       :ARG0 (c47-6 / person
                    :name (c47-7 / name
                                 :op1 "Obama"))
       :ARG1 (c47-1 / this)
       :mod (c47-5 / sole)
       :time (c47-8 / after
                    :quant (c47-2 / nearly
                                  :op1 (c47-3 / temporal-quantity
                                              :unit (c47-4 / year)
                                              :quant 1))))

# ::snt what a fucked up world we are.
# ::tokens ["what", "a", "fucked", "up", "world", "we", "are", "."]
# ::lemmas ["what", "a", "fuck", "up", "world", "we", "be", "."]
(c48-1 / world
       :ARG1-of (c48-2 / fuck-up-02)
       :domain (c48-0 / we))

# ::snt Sad day in the USA.
# ::tokens ["Sad", "day", "in", "the", "USA", "."]
# ::lemmas ["sad", "day", "in", "the", "USA", "."]
(c50-2 / day
       :ARG0-of (c50-1 / sad-02)
       :location (c50-0 / country
                        :name (c50-3 / name
                                     :op1 "USA")))
