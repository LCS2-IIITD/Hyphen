# ::snt I remember her well she was one of the sock it to me girls rest in peace Miss Judy!?
# ::tokens ["I", "remember", "her", "well", "she", "was", "one", "of", "the", "sock", "it", "to", "me", "girls", "rest", "in", "peace", "Miss", "Judy", "!", "?"]
# ::lemmas ["i", "remember", "she", "well", "she", "be", "one", "of", "the", "sock", "it", "to", "i", "girl", "rest", "in", "peace", "Miss", "Judy", "!", "?"]
(c1-3 / multi-sentence
      :snt1 (c1-2 / remember-01
                  :ARG0 (c1-7 / i)
                  :ARG1 (c1-8 / she))
      :snt2 (c1-0 / say-01
                  :ARG1 (c1-6 / rest-01
                              :ARG1 (c1-4 / girl)
                              :manner (c1-9 / peace)
                              :polarity (c1-1 / amr-unknown))
                  :ARG2 (c1-5 / person
                              :name (c1-10 / name
                                           :op1 "Miss"
                                           :op2 "Judy"))))

# ::snt Her light burned bright - for a short time. RIP
# ::tokens ["Her", "light", "burned", "bright", "-", "for", "a", "short", "time", ".", "RIP"]
# ::lemmas ["her", "light", "burn", "bright", "-", "for", "a", "short", "time", ".", "RIP"]
(c2-5 / multi-sentence
      :snt1 (c2-3 / burn-01
                  :ARG1 (c2-9 / light
                              :poss (c2-7 / she))
                  :ARG1-of (c2-4 / bright-03)
                  :duration (c2-1 / time
                                  :ARG1-of (c2-0 / short-07)))
      :snt2 (c2-2 / rest-01
                  :ARG1 (c2-6 / you)
                  :manner (c2-8 / peace)))

# ::snt As much as the others. But I am sorry for her. She sounds like she had a hard, tough life.
# ::tokens ["As", "much", "as", "the", "others", ".", "But", "I", "am", "sorry", "for", "her", ".", "She", "sounds", "like", "she", "had", "a", "hard", ",", "tough", "life", "."]
# ::lemmas ["as", "much", "as", "the", "other", ".", "but", "i", "be", "sorry", "for", "she", ".", "she", "sound", "like", "she", "have", "a", "hard", ",", "tough", "life", "."]
(c3-3 / multi-sentence
      :snt1 (c3-9 / have-concession-91
                  :ARG2 (c3-6 / sorry-01
                              :ARG1 (c3-5 / i)
                              :ARG2 (c3-0 / she)))
      :snt2 (c3-7 / sound-01
                  :ARG1 (c3-1 / she)
                  :ARG2 (c3-8 / live-01
                              :ARG0 c3-1
                              :ARG1-of (c3-4 / hard-02)
                              :ARG1-of (c3-2 / tough-02))))

# ::snt I would sneak out of my bed and watch as much as I could before being sent back to bed. I do not remember as much
# ::tokens ["I", "would", "sneak", "out", "of", "my", "bed", "and", "watch", "as", "much", "as", "I", "could", "before", "being", "sent", "back", "to", "bed", ".", "I", "do", "not", "remember", "as", "much"]
# ::lemmas ["i", "would", "sneak", "out", "of", "my", "bed", "and", "watch", "as", "much", "as", "i", "could", "before", "be", "send", "back", "to", "bed", ".", "i", "do", "not", "remember", "as", "much"]
(c4-19 / multi-sentence
       :snt1 (c4-14 / and
                    :op1 (c4-8 / sneak-01
                               :ARG0 (c4-2 / i)
                               :ARG1 (c4-20 / out-06
                                            :ARG1 c4-2
                                            :ARG2 (c4-1 / bed
                                                        :poss c4-2)))
                    :op2 (c4-3 / watch-01
                               :ARG0 c4-2
                               :ARG1-of (c4-13 / have-quant-91
                                               :ARG2 (c4-6 / much)
                                               :ARG3 (c4-18 / equal)
                                               :ARG4 (c4-16 / possible-01
                                                            :ARG1 c4-3)))
                    :time (c4-7 / before
                                :op1 (c4-0 / send-01
                                           :ARG1 (c4-12 / i)
                                           :ARG2 (c4-4 / bed)
                                           :direction (c4-21 / back))))
       :snt2 (c4-5 / remember-01
                   :ARG0 (c4-17 / i)
                   :ARG1 (c4-10 / much
                                :ARG1-of (c4-15 / have-quant-91
                                                :ARG2 (c4-9 / much)
                                                :ARG3 (c4-11 / equal)))
                   :polarity -))

# ::snt I remember wanting watch that show, and my parents would not let me because of some of the "Adult" jokes.
# ::tokens ["I", "remember", "wanting", "watch", "that", "show", ",", "and", "my", "parents", "would", "not", "let", "me", "because", "of", "some", "of", "the", "\"", "Adult", "\"", "jokes", "."]
# ::lemmas ["i", "remember", "want", "watch", "that", "show", ",", "and", "my", "parent", "would", "not", "let", "i", "because", "of", "some", "of", "the", "\"", "Adult", "\"", "joke", "."]
(c5-3 / remember-01
      :ARG0 (c5-7 / i)
      :ARG1 (c5-0 / and
                  :op1 (c5-11 / want-01
                              :ARG0 c5-7
                              :ARG1 (c5-5 / watch-01
                                          :ARG0 c5-7
                                          :ARG1 (c5-8 / show
                                                      :mod (c5-2 / that))))
                  :op2 (c5-12 / let-01
                              :ARG0 (c5-9 / person
                                          :ARG0-of (c5-13 / have-rel-role-91
                                                          :ARG1 c5-7
                                                          :ARG2 (c5-6 / parent)))
                              :ARG1 c5-7
                              :ARG1-of (c5-14 / cause-01
                                              :ARG0 (c5-4 / joke-01
                                                          :ARG2 (c5-10 / adult)
                                                          :quant (c5-1 / some)))
                              :polarity -)))

# ::snt RIP RT : Judy Carne, Laugh-Ins sock it to me girl, dies at
# ::tokens ["RIP", "RT", ":", "Judy", "Carne", ",", "Laugh", "-", "Ins", "sock", "it", "to", "me", "girl", ",", "dies", "at"]
# ::lemmas ["RIP", "RT", ":", "Judy", "Carne", ",", "Laugh", "-", "Ins", "sock", "it", "to", "i", "girl", ",", "die", "at"]
(c6-0 / and
      :op1 (c6-11 / wish-01
                  :ARG1 (c6-2 / rest-01
                              :ARG1 (c6-8 / person
                                          :name (c6-9 / name
                                                      :op1 "RIP"
                                                      :op2 "RT"))))
      :op2 (c6-7 / say-01
                 :ARG1 (c6-1 / sock-01
                             :ARG0 (c6-5 / person
                                         :name (c6-4 / name
                                                     :op1 "Judy"
                                                     :op2 "Chenne")
                                         :ARG0-of (c6-12 / have-org-role-91
                                                         :ARG1 (c6-13 / company
                                                                      :name (c6-10 / name
                                                                                   :op1 "L Laugh-Ins"))))
                             :ARG1 (c6-6 / it)
                             :ARG2 (c6-3 / i))
                 :ARG2 c6-5))

# ::snt I thought she died years ago. She had a rough life.
# ::tokens ["I", "thought", "she", "died", "years", "ago", ".", "She", "had", "a", "rough", "life", "."]
# ::lemmas ["i", "think", "she", "die", "years", "ago", ".", "she", "have", "a", "rough", "life", "."]
(c7-7 / multi-sentence
      :snt1 (c7-1 / think-01
                  :ARG0 (c7-8 / i)
                  :ARG1 (c7-12 / die-01
                               :ARG1 (c7-9 / she)
                               :time (c7-3 / before
                                           :op1 (c7-10 / now)
                                           :quant (c7-4 / multiple
                                                        :op1 (c7-5 / temporal-quantity
                                                                   :unit (c7-6 / year)
                                                                   :quant 1)))))
      :snt2 (c7-11 / live-01
                   :ARG0 (c7-0 / she)
                   :ARG1-of (c7-2 / rough-05)))

# ::snt Such sad news today Rest in peace Judy and Martin and thanks for your fine work.
# ::tokens ["Such", "sad", "news", "today", "Rest", "in", "peace", "Judy", "and", "Martin", "and", "thanks", "for", "your", "fine", "work", "."]
# ::lemmas ["such", "sad", "news", "today", "rest", "in", "peace", "Judy", "and", "Martin", "and", "thank", "for", "your", "fine", "work", "."]
(c8-0 / and
      :op1 (c8-3 / rest-01
                 :ARG1 (c8-12 / and
                              :op1 (c8-8 / person
                                         :name (c8-9 / name
                                                     :op1 "Judy"))
                              :op2 (c8-6 / person
                                         :name (c8-4 / name
                                                     :op1 "Martin")))
                 :manner (c8-1 / peace)
                 :time (c8-2 / today))
      :op2 (c8-5 / thank-01
                 :ARG0 (c8-7 / i)
                 :ARG1 c8-12
                 :ARG2 (c8-10 / work-01
                              :ARG0 c8-12
                              :ARG1-of (c8-11 / fine-03))))

# ::snt goes to show, you don't ever know ...
# ::tokens ["goes", "to", "show", ",", "you", "do", "n't", "ever", "know", "..."]
# ::lemmas ["go", "to", "show", ",", "you", "do", "not", "ever", "know", "..."]
(c9-2 / show-01
      :ARG1-of (c9-0 / know-01
                     :ARG0 (c9-1 / you)
                     :time (c9-3 / ever)
                     :polarity -))

# ::snt that's too young!!!
# ::tokens ["that", "'s", "too", "young", "!", "!", "!"]
# ::lemmas ["that", "be", "too", "young", "!", "!", "!"]
(c10-3 / have-degree-91
       :ARG1 (c10-2 / that)
       :ARG2 (c10-1 / young)
       :ARG3 (c10-0 / too)
       :mode expressive)

# ::snt I guess actually mine.
# ::tokens ["I", "guess", "actually", "mine", "."]
# ::lemmas ["i", "guess", "actually", "mine", "."]
(c11-2 / guess-01
       :ARG0 (c11-1 / i)
       :ARG1 (c11-3 / event
                    :poss c11-1
                    :ARG1-of (c11-0 / actual-02)))

# ::snt itself a hoax? We live in some strange times.
# ::tokens ["itself", "a", "hoax", "?", "We", "live", "in", "some", "strange", "times", "."]
# ::lemmas ["itself", "a", "hoax", "?", "we", "live", "in", "some", "strange", "time", "."]
(c12-3 / multi-sentence
       :snt1 (c12-8 / hoax-01
                    :polarity (c12-0 / amr-unknown)
                    :ARG2 (c12-4 / it))
       :snt2 (c12-7 / live-01
                    :ARG0 (c12-6 / we)
                    :time (c12-2 / time
                                 :mod (c12-5 / strange)
                                 :quant (c12-1 / some))))

# ::snt Unfortunately it appears to be true... Some of my early comedic memories are of R &amp; M's Laugh-In.The hoax story itself
# ::tokens ["Unfortunately", "it", "appears", "to", "be", "true", "...", "Some", "of", "my", "early", "comedic", "memories", "are", "of", "R", "&", "amp", ";", "M", "'s", "Laugh", "-", "In", ".", "The", "hoax", "story", "itself"]
# ::lemmas ["unfortunately", "it", "appear", "to", "be", "true", "...", "some", "of", "my", "early", "comedic", "memory", "be", "of", "R", "&", "amp", ";", "M", "'s", "laugh", "-", "In", ".", "the", "hoax", "story", "itself"]
(c13-18 / multi-sentence
        :snt1 (c13-13 / appear-02
                      :ARG1 (c13-0 / true-01
                                   :ARG1 (c13-2 / it))
                      :ARG2-of (c13-4 / fortunate-01
                                      :polarity -))
        :snt2 (c13-5 / memory
                     :ARG1-of (c13-10 / include-91
                                      :ARG2 (c13-9 / memory
                                                   :mod (c13-12 / comedy)
                                                   :poss (c13-16 / i)
                                                   :time (c13-17 / early)))
                     :quant (c13-8 / some)
                     :consist-of (c13-11 / and
                                         :op1 (c13-1 / thing
                                                     :name (c13-3 / name
                                                                  :op1 "R"
                                                                  :op2 "&"
                                                                  :op3 "amp"))
                                         :op2 (c13-7 / thing
                                                     :name (c13-6 / name
                                                                  :op1 "Laugh-In")
                                                     :poss (c13-14 / person
                                                                   :name (c13-15 / name
                                                                                 :op1 "M"))))))

# ::snt , is reporting it as fact. If so, RIP &amp; thanks for the laughs.
# ::tokens [",", "is", "reporting", "it", "as", "fact", ".", "If", "so", ",", "RIP", "&", "amp", ";", "thanks", "for", "the", "laughs", "."]
# ::lemmas [",", "be", "report", "it", "as", "fact", ".", "if", "so", ",", "RIP", "&", "amp", ";", "thank", "for", "the", "laugh", "."]
(c14-4 / multi-sentence
       :snt1 (c14-2 / report-01
                    :ARG1 (c14-5 / it)
                    :ARG3 (c14-10 / fact)
                    :polarity (c14-0 / amr-unknown))
       :snt2 (c14-11 / and
                     :op1 (c14-7 / person
                                 :name (c14-8 / name
                                              :op1 "RIP"))
                     :op2 (c14-1 / thank-01
                                 :ARG1 (c14-3 / you)
                                 :ARG2 (c14-9 / laugh-01
                                              :ARG0 c14-3))
                     :condition (c14-6 / so)))

# ::snt oh good grief .....my apologies!!
# ::tokens ["oh", "good", "grief", ".....", "my", "apologies", "!", "!"]
# ::lemmas ["oh", "good", "grief", ".....", "my", "apology", "!", "!"]
(c15-2 / multi-sentence
       :snt1 (c15-3 / grief
                    :ARG1-of (c15-1 / good-02)
                    :mod (c15-5 / oh))
       :snt2 (c15-0 / apologize-01
                    :ARG0 (c15-4 / i)))

# ::snt Hmmm... look's like maybe somebody's socking it to us
# ::tokens ["Hmmm", "...", "look", "'s", "like", "maybe", "somebody", "'s", "socking", "it", "to", "us"]
# ::lemmas ["hmmm", "...", "look", "be", "like", "maybe", "somebody", "be", "sock", "it", "to", "we"]
(c16-5 / look-02
       :ARG1 (c16-3 / possible-01
                    :ARG1 (c16-2 / slap-01
                                 :ARG0 (c16-0 / somebody)
                                 :ARG1 (c16-1 / it)
                                 :beneficiary (c16-4 / we)))
       :mod (c16-6 / hmm
                   :mode expressive)
       :mode expressive)

# ::snt :So sorry to read this, I so enjoyed her on Laugh In.
# ::tokens [":", "So", "sorry", "to", "read", "this", ",", "I", "so", "enjoyed", "her", "on", "Laugh", "In", "."]
# ::lemmas [":", "so", "sorry", "to", "read", "this", ",", "i", "so", "enjoy", "she", "on", "Laugh", "In", "."]
(c17-0 / and
       :op1 (c17-7 / sorry-01
                   :ARG1 (c17-6 / i)
                   :ARG2 (c17-3 / read-01
                                :ARG0 c17-6
                                :ARG1 (c17-2 / this))
                   :degree (c17-1 / so))
       :op2 (c17-4 / enjoy-01
                   :ARG0 c17-6
                   :ARG1 (c17-8 / she
                                :medium (c17-5 / broadcast-program
                                               :name (c17-9 / name
                                                            :op1 "Laugh"
                                                            :op2 "In")))
                   :degree (c17-10 / so)))

# ::snt We shall not sock it to her like again.
# ::tokens ["We", "shall", "not", "sock", "it", "to", "her", "like", "again", "."]
# ::lemmas ["we", "shall", "not", "sock", "it", "to", "she", "like", "again", "."]
(c18-4 / sock-01
       :ARG0 (c18-5 / we)
       :ARG1 (c18-3 / it)
       :ARG2 (c18-0 / she)
       :ARG1-of (c18-2 / resemble-01
                       :mod (c18-1 / again))
       :polarity -)

# ::snt Are you sure, I've seen this is one of those fake internet death hoaxes.
# ::tokens ["Are", "you", "sure", ",", "I", "'ve", "seen", "this", "is", "one", "of", "those", "fake", "internet", "death", "hoaxes", "."]
# ::lemmas ["be", "you", "sure", ",", "i", "'ve", "see", "this", "be", "one", "of", "those", "fake", "internet", "death", "hoax", "."]
(c19-6 / sure-02
       :ARG0 (c19-3 / you)
       :ARG1 (c19-0 / see-01
                    :ARG0 (c19-5 / i)
                    :ARG1 (c19-9 / include-91
                                 :ARG1 (c19-2 / this)
                                 :ARG2 (c19-4 / hoax-01
                                              :ARG2 (c19-10 / die-01)
                                              :ARG1-of (c19-8 / fake-02)
                                              :medium (c19-7 / internet))))
       :polarity (c19-1 / amr-unknown))

# ::snt well that's sad news
# ::tokens ["well", "that", "'s", "sad", "news"]
# ::lemmas ["well", "that", "be", "sad", "news"]
(c20-2 / news
       :ARG0-of (c20-1 / sad-02)
       :domain (c20-0 / that))
