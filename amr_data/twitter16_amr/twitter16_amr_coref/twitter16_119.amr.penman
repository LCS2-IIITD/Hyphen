# ::snt So sad
# ::tokens ["So", "sad"]
# ::lemmas ["so", "sad"]
(c1-1 / sad-02
      :degree (c1-0 / so))

# ::snt You are one cold SOB
# ::tokens ["You", "are", "one", "cold", "SOB"]
# ::lemmas ["you", "be", "one", "cold", "SOB"]
(c2-1 / son-of-a-bitch
      :ARG1-of (c2-2 / cold-01)
      :domain (c2-0 / you)
      :quant 1)

# ::snt If child w hands up to camera is staged: SHAME ON THE HUMAN DIRECTOR! If not staged SHAME ON HUMANS!
# ::tokens ["If", "child", "w", "hands", "up", "to", "camera", "is", "staged", ":", "SHAME", "ON", "THE", "HUMAN", "DIRECTOR", "!", "If", "not", "staged", "SHAME", "ON", "HUMANS", "!"]
# ::lemmas ["if", "child", "w", "hand", "up", "to", "camera", "be", "stage", ":", "SHAME", "on", "the", "human", "director", "!", "if", "not", "stage", "SHAME", "ON", "human", "!"]
(c3-2 / multi-sentence
      :snt1 (c3-11 / have-condition-91
                   :ARG1 (c3-6 / shame-01
                               :ARG1 (c3-7 / person
                                           :ARG0-of (c3-12 / direct-01
                                                           :ARG1 c3-7))
                               :mod (c3-4 / human)))
      :ARG2 (c3-0 / stage-01
                  :ARG1 (c3-10 / child)
                  :direction (c3-5 / up-03
                                   :ARG2 (c3-3 / camera)))
      :snt2 (c3-8 / shame-01
                  :ARG1 c3-7
                  :mod (c3-9 / human))
      :condition (c3-1 / stage-01
                       :ARG1 c3-7
                       :polarity -))

# ::snt this is who we want to keep out?
# ::tokens ["this", "is", "who", "we", "want", "to", "keep", "out", "?"]
# ::lemmas ["this", "be", "who", "we", "want", "to", "keep", "out", "?"]
(c4-5 / want-01
      :polarity (c4-0 / amr-unknown)
      :ARG0 (c4-2 / we)
      :ARG1 (c4-3 / keep-out-06
                  :ARG0 c4-2
                  :ARG1 (c4-4 / person
                              :domain (c4-1 / this))))

# ::snt heartbreaking
# ::tokens ["heartbreaking"]
# ::lemmas ["heartbreake"]
(c5-0 / break-heart-31)

# ::snt nice seen
# ::tokens ["nice", "seen"]
# ::lemmas ["nice", "see"]
(c6-0 / see-01
      :ARG1-of (c6-1 / nice-01))

# ::snt : The picture of a Syrian child "surrendering" to a camera is real.
# ::tokens [":", "The", "picture", "of", "a", "Syrian", "child", "\"", "surrendering", "\"", "to", "a", "camera", "is", "real", "."]
# ::lemmas [":", "the", "picture", "of", "a", "Syrian", "child", "\"", "surrender", "\"", "to", "a", "camera", "be", "real", "."]
(c7-0 / real-04
      :ARG1 (c7-4 / picture-01
                  :ARG1 (c7-3 / surrender-01
                              :ARG0 (c7-6 / child
                                          :mod (c7-2 / country
                                                     :name (c7-5 / name
                                                                 :op1 "Syria")))
                              :ARG2 (c7-1 / camera))))

# ::snt We would adopt that little Refugee Right Now!
# ::tokens ["We", "would", "adopt", "that", "little", "Refugee", "Right", "Now", "!"]
# ::lemmas ["we", "would", "adopt", "that", "little", "Refugee", "right", "now", "!"]
(c8-0 / adopt-01
      :ARG0 (c8-5 / we)
      :ARG1 (c8-2 / refugee
                  :mod (c8-6 / little)
                  :mod (c8-1 / that))
      :time (c8-4 / now
                  :mod (c8-3 / right)))

# ::snt .....'that's the way God planned it'.......Billy Preston lyrics to sum up this clusterfuck of a world......
# ::tokens [".....", "'", "that", "'s", "the", "way", "God", "planned", "it'", ".......", "Billy", "Preston", "lyrics", "to", "sum", "up", "this", "clusterfuck", "of", "a", "world", "......"]
# ::lemmas [".....", "'", "that", "be", "the", "way", "God", "plan", "it'", ".......", "Billy", "Preston", "lyric", "to", "sum", "up", "this", "clusterfuck", "of", "a", "world", "......"]
(c9-6 / multi-sentence
      :snt1 (c9-11 / way
                   :manner-of (c9-9 / plan-01
                                    :ARG0 (c9-5 / person
                                                :name (c9-10 / name
                                                             :op1 "God"))
                                    :ARG1 (c9-7 / it))
                   :domain (c9-1 / that))
      :snt2 (c9-12 / lyric
                   :mod (c9-0 / person
                              :name (c9-2 / name
                                          :op1 "Billy"
                                          :op2 "Preston"))
                   :purpose (c9-8 / sum-up-01
                                  :ARG1 (c9-13 / clusterfuck
                                               :mod (c9-3 / world)
                                               :mod (c9-4 / this))
                                  :ARG0 c9-12)))

# ::snt So sad.
# ::tokens ["So", "sad", "."]
# ::lemmas ["so", "sad", "."]
(c10-1 / sad-02
       :degree (c10-0 / so))

# ::snt damn, that is heart breaking.
# ::tokens ["damn", ",", "that", "is", "heart", "breaking", "."]
# ::lemmas ["damn", ",", "that", "be", "heart", "break", "."]
(c11-0 / break-heart-31
       :ARG1 (c11-1 / that)
       :mod (c11-2 / damn
                   :mode expressive))

# ::snt Man, that broke my heart the first time I saw it.
# ::tokens ["Man", ",", "that", "broke", "my", "heart", "the", "first", "time", "I", "saw", "it", "."]
# ::lemmas ["man", ",", "that", "break", "my", "heart", "the", "first", "time", "i", "see", "it", "."]
(c12-1 / break-heart-31
       :ARG0 (c12-0 / that)
       :ARG1 (c12-5 / heart
                    :part-of (c12-2 / i))
       :ord (c12-4 / ordinal-entity
                   :value 1)
       :time (c12-3 / see-01
                    :ARG0 c12-2
                    :ARG1 c12-0))

# ::snt fuck... and there I was thinking I was done crying for the day. I just..can't...anything right now.
# ::tokens ["fuck", "...", "and", "there", "I", "was", "thinking", "I", "was", "done", "crying", "for", "the", "day", ".", "I", "just", "..", "can't", "...", "anything", "right", "now", "."]
# ::lemmas ["fuck", "...", "and", "there", "i", "be", "think", "i", "be", "do", "cry", "for", "the", "day", ".", "i", "just", "..", "can't", "...", "anything", "right", "now", "."]
(c13-7 / multi-sentence
       :snt1 (c13-0 / and
                    :op2 (c13-1 / think-01
                                :ARG0 (c13-8 / i)
                                :ARG1 (c13-4 / be-done-08
                                             :ARG0 c13-8
                                             :ARG1 (c13-12 / cry-02
                                                           :ARG0 c13-8
                                                           :purpose (c13-5 / day)))
                                :location (c13-6 / there)))
       :snt2 (c13-10 / possible-01
                     :ARG1 (c13-9 / anything)
                     :time (c13-11 / now
                                   :mod (c13-2 / right))
                     :mod (c13-3 / just)
                     :polarity -))

# ::snt Spot. On.
# ::tokens ["Spot", ".", "On", "."]
# ::lemmas ["Spot", ".", "on", "."]
(c14-0 / and
       :op1 (c14-3 / spot-01
                   :ARG0 (c14-1 / you)
                   :mode imperative)
       :op2 (c14-2 / on))

# ::snt Well fuck that made me cry.
# ::tokens ["Well", "fuck", "that", "made", "me", "cry", "."]
# ::lemmas ["well", "fuck", "that", "make", "i", "cry", "."]
(c15-1 / make-02
       :ARG0 (c15-0 / that)
       :ARG1 (c15-4 / cry-02
                    :ARG0 (c15-2 / i))
       :mod (c15-3 / fuck
                   :mode expressive))

# ::snt The camera is just stealing her soul.
# ::tokens ["The", "camera", "is", "just", "stealing", "her", "soul", "."]
# ::lemmas ["the", "camera", "be", "just", "steal", "her", "soul", "."]
(c16-2 / steal-01
       :ARG0 (c16-4 / camera)
       :ARG1 (c16-0 / soul
                    :part-of (c16-3 / she))
       :mod (c16-1 / just))

# ::snt well... that's the saddest thing I've read all week.
# ::tokens ["well", "...", "that", "'s", "the", "saddest", "thing", "I", "'ve", "read", "all", "week", "."]
# ::lemmas ["well", "...", "that", "be", "the", "sad", "thing", "i", "'ve", "read", "all", "week", "."]
(c17-5 / saddest
       :domain (c17-1 / thing
                      :mod (c17-3 / that)
                      :ARG1-of (c17-2 / read-01
                                      :ARG0 (c17-4 / i)
                                      :duration (c17-6 / week
                                                       :mod (c17-0 / all)))))

# ::snt OK Words fail. Made my eyes prick.
# ::tokens ["OK", "Words", "fail", ".", "Made", "my", "eyes", "prick", "."]
# ::lemmas ["ok", "word", "fail", ".", "make", "my", "eye", "prick", "."]
(c18-2 / multi-sentence
       :snt1 (c18-7 / fail-01
                    :ARG1 (c18-6 / word
                                 :ARG1-of (c18-5 / okay-04)))
       :snt2 (c18-1 / make-02
                    :ARG1 (c18-4 / prick-01
                                 :ARG1 (c18-0 / eye
                                              :part-of (c18-3 / i)))))

# ::snt gosh how I wish it wasn't.
# ::tokens ["gosh", "how", "I", "wish", "it", "was", "n't", "."]
# ::lemmas ["gosh", "how", "i", "wish", "it", "be", "not", "."]
(c19-3 / wish-01
       :ARG0 (c19-2 / i)
       :ARG1 (c19-4 / have-polarity-91
                    :ARG1 (c19-0 / it)
                    :ARG2 -)
       :mod (c19-1 / gosh
                   :mode expressive))
