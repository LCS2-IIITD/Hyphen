# ::snt What's next, gluten-free bacon, or perhaps Twinkies stuffed with gravel...
# ::tokens ["What", "'s", "next", ",", "gluten", "-", "free", "bacon", ",", "or", "perhaps", "Twinkies", "stuffed", "with", "gravel", "..."]
# ::lemmas ["what", "be", "next", ",", "gluten", "-", "free", "bacon", ",", "or", "perhaps", "Twinkies", "stuff", "with", "gravel", "..."]
(c1-0 / amr-unknown
      :mod (c1-6 / next)
      :domain (c1-8 / or
                    :op1 (c1-2 / bacon
                               :ARG1-of (c1-9 / free-03
                                              :ARG2 (c1-10 / disease
                                                           :name (c1-3 / name
                                                                       :op1 "Gl gluten"))))
                    :op2 (c1-1 / Twinkie
                               :ARG1-of (c1-5 / stuff-01
                                              :ARG2 (c1-4 / gravel))
                               :ARG1-of (c1-7 / possible-01))))

# ::snt Whole Foods is an organization that relies on gullibility to make profits.
# ::tokens ["Whole", "Foods", "is", "an", "organization", "that", "relies", "on", "gullibility", "to", "make", "profits", "."]
# ::lemmas ["Whole", "Foods", "be", "an", "organization", "that", "rely", "on", "gullibility", "to", "make", "profit", "."]
(c2-4 / organization
      :name (c2-3 / name
                  :op1 "Whole"
                  :op2 "Foods")
      :ARG0-of (c2-0 / rely-01
                     :ARG1 (c2-1 / gullible)
                     :ARG2 (c2-2 / profit-01
                                 :ARG0 c2-4)))

# ::snt I will say though, my grandson has ADD, and he's a fucking pain in the ass. Even all the pot hardly calms him down.
# ::tokens ["I", "will", "say", "though", ",", "my", "grandson", "has", "ADD", ",", "and", "he", "'s", "a", "fucking", "pain", "in", "the", "ass", ".", "Even", "all", "the", "pot", "hardly", "calms", "him", "down", "."]
# ::lemmas ["i", "will", "say", "though", ",", "my", "grandson", "have", "ADD", ",", "and", "he", "be", "a", "fucking", "pain", "in", "the", "ass", ".", "even", "all", "the", "pot", "hardly", "calm", "he", "down", "."]
(c3-19 / multi-sentence
       :snt1 (c3-7 / have-concession-91
                   :ARG2 (c3-6 / say-01
                               :ARG0 (c3-1 / i)
                               :ARG1 (c3-10 / and
                                            :op1 (c3-13 / have-03
                                                        :ARG0 (c3-14 / person
                                                                     :ARG0-of (c3-2 / have-rel-role-91
                                                                                    :ARG1 c3-1
                                                                                    :ARG2 (c3-5 / grandson)))
                                                        :ARG1 (c3-16 / disease
                                                                     :name (c3-3 / name
                                                                                 :op1 "ADD")))
                                            :op2 (c3-11 / pain-01
                                                        :ARG0 c3-14
                                                        :ARG1 (c3-9 / ass)
                                                        :mod (c3-4 / fucking)))))
       :snt2 (c3-8 / calm-down-02
                   :ARG0 (c3-17 / pot
                                :mod (c3-0 / all)
                                :mod (c3-18 / even))
                   :ARG1 (c3-15 / he)
                   :mod (c3-12 / hardly)))

# ::snt saw it with Bernie Madoff and his "investment" group and with ponzi schemes.
# ::tokens ["saw", "it", "with", "Bernie", "Madoff", "and", "his", "\"", "investment", "\"", "group", "and", "with", "ponzi", "schemes", "."]
# ::lemmas ["see", "it", "with", "Bernie", "Madoff", "and", "his", "\"", "investment", "\"", "group", "and", "with", "ponzi", "scheme", "."]
(c4-5 / see-01
      :ARG1 (c4-4 / it)
      :ARG2 (c4-0 / and
                  :op1 (c4-6 / person
                             :name (c4-7 / name
                                         :op1 "Bernie"
                                         :op2 "Madoff"))
                  :op2 (c4-2 / group
                             :ARG0-of (c4-8 / invest-01)
                             :poss c4-6)
                  :op3 (c4-1 / scheme-01
                             :ARG0 c4-6
                             :ARG1 (c4-3 / ponzi))))

# ::snt That's a sad truth.
# ::tokens ["That", "'s", "a", "sad", "truth", "."]
# ::lemmas ["that", "be", "a", "sad", "truth", "."]
(c5-1 / true-01
      :ARG1 (c5-0 / that)
      :ARG0-of (c5-2 / sad-02))

# ::snt But they put the mom&amp ones out of biz.
# ::tokens ["But", "they", "put", "the", "mom&amp", "ones", "out", "of", "biz", "."]
# ::lemmas ["but", "they", "put", "the", "mom&amp", "one", "out", "of", "biz", "."]
(c6-11 / contrast-01
       :ARG2 (c6-8 / put-01
                   :ARG0 (c6-2 / they)
                   :ARG1 (c6-0 / and
                               :op1 (c6-4 / person
                                          :ARG0-of (c6-10 / have-rel-role-91
                                                          :ARG2 (c6-5 / mom)))
                               :op2 (c6-1 / person
                                          :ARG0-of (c6-6 / have-rel-role-91
                                                         :ARG2 (c6-7 / amp))))
                   :ARG2 (c6-9 / out-06
                               :ARG1 c6-0
                               :ARG2 (c6-3 / business))))

# ::snt The tech term is "the patsy rich".
# ::tokens ["The", "tech", "term", "is", "\"", "the", "patsy", "rich", "\"", "."]
# ::lemmas ["the", "tech", "term", "be", "\"", "the", "patsy", "rich", "\"", "."]
(c7-0 / term-01
      :ARG1 (c7-2 / tech)
      :ARG2 (c7-4 / person
                  :mod (c7-1 / rich
                             :mod (c7-3 / patsy))))

# ::snt I'm just having fun w/ this one. is just another place catering to ignorant souls.
# ::tokens ["I", "'m", "just", "having", "fun", "w/", "this", "one", ".", "is", "just", "another", "place", "catering", "to", "ignorant", "souls", "."]
# ::lemmas ["i", "be", "just", "have", "fun", "w/", "this", "one", ".", "be", "just", "another", "place", "cater", "to", "ignorant", "soul", "."]
(c8-3 / multi-sentence
      :snt1 (c8-9 / fun-01
                  :ARG0 (c8-4 / i)
                  :ARG1 (c8-8 / one
                              :mod (c8-1 / this))
                  :mod (c8-2 / just))
      :snt2 (c8-6 / place
                  :mod (c8-0 / another)
                  :mod (c8-5 / just)
                  :ARG0-of (c8-11 / cater-01
                                  :ARG2 (c8-7 / soul
                                              :ARG1-of (c8-10 / ignorant-02)))
                  :domain c8-1))

# ::snt I hear it's very . (Yes, that's a real thing...) lol
# ::tokens ["I", "hear", "it", "'s", "very", ".", "(", "Yes", ",", "that", "'s", "a", "real", "thing", "...", ")", "lol"]
# ::lemmas ["i", "hear", "it", "be", "very", ".", "(", "yes", ",", "that", "be", "a", "real", "thing", "...", ")", "lol"]
(c9-6 / multi-sentence
      :snt1 (c9-10 / hear-01
                   :ARG0 (c9-7 / i)
                   :ARG1 (c9-3 / it
                               :degree (c9-8 / very)))
      :snt2 (c9-0 / thing
                  :ARG1-of (c9-2 / real-04)
                  :domain (c9-4 / that)
                  :mod (c9-5 / yes)
                  :ARG2-of (c9-9 / laugh-01
                                 :ARG0 c9-7
                                 :manner (c9-1 / loud)
                                 :mode expressive)))

# ::snt whole foods is underfire for markups in pricing.
# ::tokens ["whole", "foods", "is", "underfire", "for", "markups", "in", "pricing", "."]
# ::lemmas ["whole", "food", "be", "underfire", "for", "markup", "in", "pricing", "."]
(c10-1 / underfire-01
       :ARG1 (c10-4 / food
                    :mod (c10-3 / whole))
       :ARG1-of (c10-5 / cause-01
                       :ARG0 (c10-0 / mark-up-03
                                    :ARG1 (c10-2 / price-01))))

# ::snt $6? For two stalks of asparagus in processed water?
# ::tokens ["$", "6", "?", "For", "two", "stalks", "of", "asparagus", "in", "processed", "water", "?"]
# ::lemmas ["$", "6", "?", "for", "two", "stalk", "of", "asparagus", "in", "process", "water", "?"]
(c11-3 / multi-sentence
       :snt1 (c11-2 / monetary-quantity
                    :unit (c11-9 / dollar)
                    :polarity (c11-0 / amr-unknown)
                    :quant 6)
       :snt2 (c11-7 / monetary-quantity
                    :polarity (c11-4 / amr-unknown)
                    :purpose (c11-5 / stalk
                                    :part-of (c11-1 / asparagus)
                                    :location (c11-8 / water
                                                     :ARG1-of (c11-6 / process-01))
                                    :quant 2)))

# ::snt Call themselves out for being if they bought it. What's the big deal?
# ::tokens ["Call", "themselves", "out", "for", "being", "if", "they", "bought", "it", ".", "What", "'s", "the", "big", "deal", "?"]
# ::lemmas ["call", "themselves", "out", "for", "be", "if", "they", "buy", "it", ".", "what", "be", "the", "big", "deal", "?"]
(c12-5 / multi-sentence
       :snt1 (c12-10 / call-out-15
                     :ARG0 (c12-4 / you)
                     :ARG1 (c12-1 / they)
                     :ARG1-of (c12-7 / cause-01
                                     :ARG0 (c12-9 / have-condition-91
                                                  :ARG2 (c12-2 / buy-01
                                                               :ARG0 c12-1
                                                               :ARG1 (c12-8 / it))))
                     :mode imperative)
       :snt2 (c12-3 / deal-03
                    :ARG1 (c12-0 / amr-unknown)
                    :mod (c12-6 / big)))

# ::snt are you paying for the aroma?
# ::tokens ["are", "you", "paying", "for", "the", "aroma", "?"]
# ::lemmas ["be", "you", "pay", "for", "the", "aroma", "?"]
(c13-3 / pay-01
       :polarity (c13-0 / amr-unknown)
       :ARG0 (c13-1 / you)
       :ARG3 (c13-2 / aroma))

# ::snt Much too concentrated to be a cure for Asperges syndrome!
# ::tokens ["Much", "too", "concentrated", "to", "be", "a", "cure", "for", "Asperges", "syndrome", "!"]
# ::lemmas ["much", "too", "concentrated", "to", "be", "a", "cure", "for", "Asperges", "syndrome", "!"]
(c14-5 / have-degree-91
       :ARG2 (c14-6 / concentrate-01)
       :ARG3 (c14-0 / too
                    :quant (c14-1 / much))
       :ARG6 (c14-2 / cure-01
                    :ARG2 (c14-3 / syndrome
                                 :name (c14-4 / name
                                              :op1 "Asperges"))))

# ::snt Ahem..
# ::tokens ["Ahem", ".."]
# ::lemmas ["ahem", ".."]
(c15-0 / ah
       :mode expressive)

# ::snt very true! I don't know why anyone would pay that.
# ::tokens ["very", "true", "!", "I", "do", "n't", "know", "why", "anyone", "would", "pay", "that", "."]
# ::lemmas ["very", "true", "!", "i", "do", "not", "know", "why", "anyone", "would", "pay", "that", "."]
(c16-5 / multi-sentence
       :snt1 (c16-1 / true-01
                    :degree (c16-8 / very))
       :snt2 (c16-2 / know-01
                    :ARG0 (c16-6 / i)
                    :ARG1 (c16-3 / thing
                                 :ARG0-of (c16-9 / cause-01
                                                 :ARG1 (c16-7 / pay-01
                                                              :ARG0 (c16-0 / anyone)
                                                              :ARG3 (c16-4 / that))))
                    :polarity -))

# ::snt ridiculous
# ::tokens ["ridiculous"]
# ::lemmas ["ridiculous"]
(c17-0 / ridiculous-02)

# ::snt No one is forced to pay that. Not like health care, where people often go broke for life saving medical assistance.
# ::tokens ["No", "one", "is", "forced", "to", "pay", "that", ".", "Not", "like", "health", "care", ",", "where", "people", "often", "go", "broke", "for", "life", "saving", "medical", "assistance", "."]
# ::lemmas ["no", "one", "be", "force", "to", "pay", "that", ".", "not", "like", "health", "care", ",", "where", "people", "often", "go", "broke", "for", "life", "save", "medical", "assistance", "."]
(c18-5 / multi-sentence
       :snt1 (c18-12 / force-01
                     :ARG1 (c18-9 / no-one)
                     :ARG2 (c18-8 / pay-01
                                  :ARG0 c18-9
                                  :ARG1 (c18-1 / that)))
       :snt2 (c18-2 / resemble-01
                    :ARG2 (c18-13 / healthcare)
                    :ARG1-of (c18-14 / cause-01
                                     :ARG0 (c18-3 / broke-23
                                                  :ARG1 (c18-6 / person)
                                                  :frequency (c18-10 / often)
                                                  :purpose (c18-0 / assist-01
                                                                  :ARG0 c18-6
                                                                  :ARG2 (c18-7 / save-02
                                                                               :ARG0 c18-6
                                                                               :ARG1 (c18-11 / life))
                                                                  :mod (c18-4 / medicine))))
                    :polarity -))

# ::snt they would sell sand to the Arabs the cunts
# ::tokens ["they", "would", "sell", "sand", "to", "the", "Arabs", "the", "cunts"]
# ::lemmas ["they", "would", "sell", "sand", "to", "the", "Arabs", "the", "cunt"]
(c19-4 / sell-01
       :ARG0 (c19-1 / they)
       :ARG1 (c19-0 / sand)
       :ARG2 (c19-5 / person
                    :mod (c19-2 / ethnic-group
                                :name (c19-6 / name
                                             :op1 "Arab")))
       :ARG1-of (c19-7 / say-01
                       :ARG0 (c19-3 / i)
                       :ARG2 (c19-8 / cunts)))

# ::snt . is it organic though?
# ::tokens [".", "is", "it", "organic", "though", "?"]
# ::lemmas [".", "be", "it", "organic", "though", "?"]
(c20-0 / organic
       :polarity (c20-1 / amr-unknown)
       :domain (c20-2 / it)
       :ARG1-of (c20-3 / have-concession-91))

# ::snt Was anyone buying this, really?
# ::tokens ["Was", "anyone", "buying", "this", ",", "really", "?"]
# ::lemmas ["be", "anyone", "buy", "this", ",", "really", "?"]
(c21-3 / buy-01
       :polarity (c21-0 / amr-unknown)
       :ARG0 (c21-4 / anyone)
       :ARG1 (c21-1 / this)
       :ARG1-of (c21-2 / real-04))

# ::snt If someone wants to buy it, who are you to tell them they can't. I think $4 for a bottle of water is ridiculous but people pay it.
# ::tokens ["If", "someone", "wants", "to", "buy", "it", ",", "who", "are", "you", "to", "tell", "them", "they", "ca", "n't", ".", "I", "think", "$", "4", "for", "a", "bottle", "of", "water", "is", "ridiculous", "but", "people", "pay", "it", "."]
# ::lemmas ["if", "someone", "want", "to", "buy", "it", ",", "who", "be", "you", "to", "tell", "they", "they", "can", "not", ".", "i", "think", "$", "4", "for", "a", "bottle", "of", "water", "be", "ridiculous", "but", "people", "pay", "it", "."]
(c22-21 / multi-sentence
        :snt1 (c22-0 / tell-01
                     :ARG0 (c22-14 / amr-unknown)
                     :ARG1 (c22-17 / possible-01
                                   :ARG1 (c22-1 / buy-01
                                                :ARG0 (c22-11 / someone)
                                                :ARG1 (c22-3 / it))
                                   :polarity -)
                     :ARG2 c22-11
                     :condition (c22-4 / want-01
                                       :ARG0 c22-11
                                       :ARG1 (c22-10 / buy-01
                                                     :ARG0 c22-11
                                                     :ARG1 (c22-12 / it))))
        :snt2 (c22-13 / contrast-01
                      :ARG1 (c22-2 / think-01
                                   :ARG0 (c22-18 / i)
                                   :ARG1 (c22-6 / ridiculous-02
                                                :ARG1 (c22-7 / monetary-quantity
                                                             :unit (c22-19 / dollar)
                                                             :ARG3-of (c22-16 / cost-01
                                                                              :ARG1 (c22-5 / bottle
                                                                                           :ARG1-of (c22-8 / contain-01
                                                                                                           :ARG0 (c22-9 / water))))
                                                             :quant 4)))
                      :ARG2 (c22-15 / pay-01
                                    :ARG0 (c22-20 / person)
                                    :ARG1 c22-7)))

# ::snt If someone wants to buy it, who really cares?
# ::tokens ["If", "someone", "wants", "to", "buy", "it", ",", "who", "really", "cares", "?"]
# ::lemmas ["if", "someone", "want", "to", "buy", "it", ",", "who", "really", "care", "?"]
(c23-6 / care-01
       :ARG0 (c23-0 / amr-unknown)
       :ARG1-of (c23-1 / real-04)
       :condition (c23-5 / want-01
                         :ARG0 (c23-4 / someone)
                         :ARG1 (c23-2 / buy-01
                                      :ARG0 c23-4
                                      :ARG1 (c23-3 / it))))

# ::snt Their customers like it, makes them feel special.
# ::tokens ["Their", "customers", "like", "it", ",", "makes", "them", "feel", "special", "."]
# ::lemmas ["their", "customer", "like", "it", ",", "make", "they", "feel", "special", "."]
(c24-1 / make-02
       :ARG0 (c24-5 / customer
                    :poss (c24-0 / they))
       :ARG1 (c24-4 / feel-01
                    :ARG0 c24-0
                    :ARG1 (c24-2 / special-02
                                 :ARG1 c24-0))
       :ARG1-of (c24-3 / like-01
                       :ARG0 c24-5))

# ::snt Please checkout this: you
# ::tokens ["Please", "checkout", "this", ":", "you"]
# ::lemmas ["please", "checkout", "this", ":", "you"]
(c25-2 / check-01
       :ARG0 (c25-0 / you)
       :ARG1 (c25-1 / this)
       :mode imperative
       :polite +)

# ::snt always new ways to cheat the people......
# ::tokens ["always", "new", "ways", "to", "cheat", "the", "people", "......"]
# ::lemmas ["always", "new", "way", "to", "cheat", "the", "people", "......"]
(c26-3 / way
       :ARG1-of (c26-2 / new-01)
       :time (c26-0 / always)
       :manner-of (c26-4 / cheat-02
                         :ARG1 (c26-1 / person)))

# ::snt That darn organic pricing.
# ::tokens ["That", "darn", "organic", "pricing", "."]
# ::lemmas ["that", "darn", "organic", "pricing", "."]
(c27-3 / price-01
       :mod (c27-0 / organic)
       :mod (c27-1 / darn
                   :mode expressive)
       :domain (c27-2 / that))

# ::snt eww
# ::tokens ["eww"]
# ::lemmas ["eww"]
(c28-0 / ewww)
