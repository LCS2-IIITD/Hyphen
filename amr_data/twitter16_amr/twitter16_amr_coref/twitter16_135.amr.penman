# ::snt God's Green Acres Very High On The Bucket List
# ::tokens ["God", "'s", "Green", "Acres", "Very", "High", "On", "The", "Bucket", "List"]
# ::lemmas ["God", "'s", "Green", "Acres", "Very", "High", "On", "The", "Bucket", "List"]
(c1-8 / high-02
      :ARG1 (c1-0 / area
                  :ARG1-of (c1-3 / green-03)
                  :poss (c1-4 / person
                              :name (c1-5 / name
                                          :op1 "God")))
      :ARG2 (c1-1 / thing
                  :ARG2-of (c1-7 / list-01
                                 :ARG1 (c1-2 / bucket)))
      :degree (c1-6 / very))

# ::snt they forgot to expect us...
# ::tokens ["they", "forgot", "to", "expect", "us", "..."]
# ::lemmas ["they", "forgot", "to", "expect", "we", "..."]
(c2-2 / forget-01
      :ARG0 (c2-0 / they)
      :ARG1 (c2-3 / expect-01
                  :ARG0 c2-0
                  :ARG1 (c2-1 / we)))

# ::snt - thank you for the rts! - when I was younger I had friends who lived in Christ Church,NZ...beautiful spot!
# ::tokens ["-", "thank", "you", "for", "the", "rts", "!", "-", "when", "I", "was", "younger", "I", "had", "friends", "who", "lived", "in", "Christ", "Church", ",", "NZ", "...", "beautiful", "spot", "!"]
# ::lemmas ["-", "thank", "you", "for", "the", "rt", "!", "-", "when", "i", "be", "young", "i", "have", "friend", "who", "live", "in", "Christ", "Church", ",", "NZ", "...", "beautiful", "spot", "!"]
(c3-19 / multi-sentence
       :snt1 (c3-0 / thank-01
                   :ARG0 (c3-2 / i)
                   :ARG1 (c3-16 / person
                                :name (c3-4 / name
                                            :op1 "ts")))
       :snt2 (c3-11 / have-03
                    :ARG0 (c3-10 / i)
                    :ARG1 (c3-13 / person
                                 :ARG0-of (c3-9 / live-01
                                                :location (c3-12 / church
                                                                 :name (c3-7 / name
                                                                             :op1 "Christ"
                                                                             :op2 "Church")
                                                                 :location (c3-14 / country
                                                                                  :name (c3-17 / name
                                                                                               :op1 "NZ"))))
                                 :ARG0-of (c3-15 / have-rel-role-91
                                                 :ARG1 c3-10
                                                 :ARG2 (c3-5 / friend)))
                    :time (c3-18 / young
                                 :ARG2-of (c3-3 / have-degree-91
                                                :ARG1 c3-10
                                                :ARG3 (c3-6 / more))))
       :snt3 (c3-8 / spot
                   :ARG1-of (c3-1 / beautiful-02)))

# ::snt yeah how dare you use the word "sick" for fuck sake
# ::tokens ["yeah", "how", "dare", "you", "use", "the", "word", "\"", "sick", "\"", "for", "fuck", "sake"]
# ::lemmas ["yeah", "how", "dare", "you", "use", "the", "word", "\"", "sick", "\"", "for", "fuck", "sake"]
(c4-8 / dare-01
      :ARG1 (c4-3 / you)
      :ARG2 (c4-4 / use-01
                  :ARG0 c4-3
                  :ARG1 (c4-6 / word
                              :mod (c4-5 / sick-05))
                  :purpose (c4-0 / sake
                                 :mod (c4-7 / fuck)))
      :manner (c4-1 / amr-unknown)
      :mod (c4-2 / yeah
                 :mode expressive))

# ::snt true. Also just for history sake. Read story on left. Didn't know it went back that far
# ::tokens ["true", ".", "Also", "just", "for", "history", "sake", ".", "Read", "story", "on", "left", ".", "Did", "n't", "know", "it", "went", "back", "that", "far"]
# ::lemmas ["true", ".", "also", "just", "for", "history", "sake", ".", "read", "story", "on", "left", ".", "do", "not", "know", "it", "go", "back", "that", "far"]
(c7-9 / multi-sentence
      :snt1 (c7-2 / true-01)
      :snt2 (c7-3 / read-01
                  :ARG0 (c7-8 / you)
                  :ARG1 (c7-12 / story
                               :location (c7-13 / left-19))
                  :mod (c7-0 / also)
                  :purpose (c7-1 / sake
                                 :mod (c7-15 / history))
                  :mode imperative)
      :snt3 (c7-6 / know-01
                  :ARG0 (c7-11 / i)
                  :ARG1 (c7-10 / go-01
                               :ARG1 (c7-4 / it)
                               :ARG4 (c7-14 / far
                                            :mod (c7-7 / that))
                               :direction (c7-5 / back))
                  :polarity -))

# ::snt weeks and counting......bring it on
# ::tokens ["weeks", "and", "counting", "......", "bring", "it", "on"]
# ::lemmas ["weeks", "and", "counting", "......", "bring", "it", "on"]
(c8-2 / bring-on-06
      :ARG0 (c8-3 / you)
      :ARG1 (c8-4 / it)
      :time (c8-0 / and
                  :op1 (c8-1 / eks)
                  :op2 (c8-5 / count-01))
      :mode imperative)

# ::snt endorsed by NeoNazis
# ::tokens ["endorsed", "by", "NeoNazis"]
# ::lemmas ["endorse", "by", "NeoNazis"]
(c9-0 / thing
      :ARG1-of (c9-1 / endorse-01
                     :ARG0 (c9-4 / person
                                 :mod (c9-2 / political-movement
                                            :name (c9-3 / name
                                                        :op1 "neo-Nazism")))))

# ::snt add
# ::tokens ["add"]
# ::lemmas ["add"]
(c13-0 / add-02)

# ::snt Lock and load
# ::tokens ["Lock", "and", "load"]
# ::lemmas ["lock", "and", "load"]
(c14-0 / and
       :op1 (c14-1 / lock-01)
       :op2 (c14-2 / load-01))

# ::snt what about Charles Kleinert
# ::tokens ["what", "about", "Charles", "Kleinert"]
# ::lemmas ["what", "about", "Charles", "Kleinert"]
(c15-0 / amr-unknown
       :topic (c15-1 / person
                     :name (c15-2 / name
                                  :op1 "Charles"
                                  :op2 "Kleinert")))

# ::snt THANK GOD ANON ; WIKILEAKS AND EDWARD SNOWNED , WITHOUT THEM WE WOULD NOT KNOW A DAMN THING ! PERIOD !
# ::tokens ["THANK", "GOD", "ANON", ";", "WIKILEAKS", "AND", "EDWARD", "SNOWNED", ",", "WITHOUT", "THEM", "WE", "WOULD", "NOT", "KNOW", "A", "DAMN", "THING", "!", "PERIOD", "!"]
# ::lemmas ["thank", "GOD", "ANON", ";", "WIKILEAKS", "and", "EDWARD", "SNOWNED", ",", "without", "they", "we", "would", "not", "know", "a", "damn", "thing", "!", "period", "!"]
(c16-5 / multi-sentence
       :snt1 (c16-1 / thank-01
                    :ARG0 (c16-7 / i)
                    :ARG1 (c16-9 / person
                                 :name (c16-10 / name
                                               :op1 "God"))
                    :mod (c16-0 / anon)
                    :mode expressive)
       :snt2 (c16-2 / know-01
                    :ARG0 (c16-12 / we)
                    :ARG1 (c16-3 / thing
                                 :mod (c16-14 / damn))
                    :condition (c16-8 / and
                                      :op1 (c16-4 / wave-01)
                                      :op2 (c16-11 / sink-01
                                                   :manner (c16-13 / forward)))
                    :polarity -)
       :snt3 (c16-6 / period
                    :mode expressive))

# ::snt when are releasing the information ? I'm excited
# ::tokens ["when", "are", "releasing", "the", "information", "?", "I", "'m", "excited"]
# ::lemmas ["when", "be", "release", "the", "information", "?", "i", "be", "excited"]
(c17-3 / multi-sentence
       :snt1 (c17-1 / release-01
                    :ARG1 (c17-4 / information)
                    :time (c17-0 / amr-unknown))
       :snt2 (c17-2 / excite-01
                    :ARG1 (c17-5 / i)))

# ::snt it's back
# ::tokens ["it", "'s", "back"]
# ::lemmas ["it", "be", "back"]
(c18-0 / back-02
       :ARG1 (c18-1 / it))

# ::snt Awesome
# ::tokens ["Awesome"]
# ::lemmas ["Awesome"]
(c19-0 / awe-01)

# ::snt Locked and loaded.....
# ::tokens ["Locked", "and", "loaded", "....."]
# ::lemmas ["lock", "and", "load", "....."]
(c20-0 / and
       :op1 (c20-1 / load-01)
       :op2 (c20-2 / dock-01))

# ::snt WILLCO /16
# ::tokens ["WILLCO", "/16"]
# ::lemmas ["WILLCO", "/16"]
(c21-1 / law
       :name (c21-2 / name
                    :op1 "WILLCO")
       :time (c21-0 / date-entity
                    :day 16))
