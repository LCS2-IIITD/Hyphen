# ::snt o are you together wth america,are you a citizen?
# ::tokens ["o", "are", "you", "together", "wth", "america", ",", "are", "you", "a", "citizen", "?"]
# ::lemmas ["o", "be", "you", "together", "wth", "america", ",", "be", "you", "a", "citizen", "?"]
(c1-0 / and
      :op1 (c1-1 / together
                 :domain (c1-3 / you)
                 :prep-with (c1-7 / country
                                  :name (c1-6 / name
                                              :op1 "America"))
                 :polarity (c1-5 / amr-unknown))
      :op2 (c1-4 / citizen
                 :domain c1-3
                 :polarity (c1-2 / amr-unknown)))

# ::snt ahh USA people have fighting on their minds.i dnt knw shy people carry on about ths past.
# ::tokens ["ahh", "USA", "people", "have", "fighting", "on", "their", "minds.i", "dnt", "knw", "shy", "people", "carry", "on", "about", "ths", "past", "."]
# ::lemmas ["ahh", "USA", "people", "have", "fight", "on", "their", "minds.i", "dnt", "knw", "shy", "people", "carry", "on", "about", "th", "past", "."]
(c2-3 / multi-sentence
      :snt1 (c2-9 / on-ones-mind-07
                  :ARG1 (c2-8 / person
                              :mod (c2-11 / country
                                          :name (c2-7 / name
                                                      :op1 "USA")))
                  :ARG2 (c2-10 / fight-01
                               :ARG0 c2-8)
                  :mod (c2-0 / ah
                             :mode expressive))
      :snt2 (c2-5 / carry-on-02
                  :ARG0 (c2-4 / person
                              :ARG1-of (c2-6 / shy-05)
                              :ARG1-of (c2-2 / request-confirmation-91))
                  :ARG1 (c2-1 / past
                              :poss c2-4)
                  :polarity -))

# ::snt thnk you my friend atleast there some tht agree wth eyes open nd some tht live in stupidity.
# ::tokens ["thnk", "you", "my", "friend", "atleast", "there", "some", "tht", "agree", "wth", "eyes", "open", "nd", "some", "tht", "live", "in", "stupidity", "."]
# ::lemmas ["thnk", "you", "my", "friend", "atleast", "there", "some", "tht", "agree", "wth", "eye", "open", "nd", "some", "tht", "live", "in", "stupidity", "."]
(c3-6 / say-01
      :ARG0 (c3-3 / i)
      :ARG1 (c3-11 / and
                   :op1 (c3-10 / agree-01
                               :ARG0 (c3-13 / person
                                            :ARG1-of (c3-9 / include-91
                                                           :ARG2 (c3-12 / person
                                                                        :ARG0-of (c3-8 / have-rel-role-91
                                                                                       :ARG1 c3-3
                                                                                       :ARG2 (c3-5 / friend)))
                                                           :ARG3 (c3-0 / some))
                                            :location (c3-1 / there)
                                            :mod (c3-2 / at-least))
                               :op2 (c3-17 / open-01
                                           :ARG1 (c3-16 / eye))
                               :op3 (c3-7 / live-01
                                          :ARG0 (c3-15 / person
                                                       :ARG1-of (c3-14 / include-91
                                                                       :ARG2 c3-12)
                                                       :mod (c3-4 / some))
                                          :manner (c3-18 / stupidity)))
                   :ARG2 c3-12)
      :ARG2 c3-12)

# ::snt the people dnt knw wht they got(SA).humans destroy every good thing tht has been given to us.now globaly destructions!
# ::tokens ["the", "people", "dnt", "knw", "wht", "they", "got(SA).humans", "destroy", "every", "good", "thing", "tht", "has", "been", "given", "to", "us.now", "globaly", "destructions", "!"]
# ::lemmas ["the", "people", "dnt", "knw", "wht", "they", "got(sa).human", "destroy", "every", "good", "thing", "tht", "have", "be", "give", "to", "us.now", "globaly", "destruction", "!"]
(c4-9 / multi-sentence
      :snt1 (c4-10 / get-01
                   :ARG0 (c4-12 / person)
                   :ARG1 (c4-0 / thing
                               :ARG1-of (c4-8 / get-01
                                              :ARG0 c4-12))
                   :ARG1-of (c4-4 / mean-01
                                  :ARG2 (c4-5 / thing
                                              :name (c4-13 / name
                                                           :op1 "SA")))
                   :polarity -)
      :snt2 (c4-17 / destroy-01
                   :ARG0 (c4-16 / human)
                   :ARG1 (c4-6 / thing
                               :mod (c4-3 / every)
                               :ARG1-of (c4-14 / good-02)
                               :ARG1-of (c4-7 / give-01
                                              :ARG2 (c4-15 / we))))
      :snt3 (c4-1 / destruct-01
                  :ARG0 (c4-2 / globe)
                  :time (c4-11 / now)))

# ::snt I'm done!
# ::tokens ["I", "'m", "done", "!"]
# ::lemmas ["i", "be", "do", "!"]
(c5-0 / be-done-08
      :ARG0 (c5-1 / i))

# ::snt Thats why I dont eat KFC
# ::tokens ["That", "s", "why", "I", "do", "nt", "eat", "KFC"]
# ::lemmas ["that", "s", "why", "i", "do", "not", "eat", "KFC"]
(c7-5 / cause-01
      :ARG0 (c7-0 / that)
      :ARG1 (c7-1 / eat-01
                  :ARG0 (c7-2 / i)
                  :ARG1 (c7-3 / product
                              :name (c7-4 / name
                                          :op1 "KFC"))
                  :polarity -))

# ::snt eww
# ::tokens ["eww"]
# ::lemmas ["eww"]
(c9-0 / ewww)

# ::snt i agree.we all must stand together wth stragedy.we are allready in a bad light.need to improve.starts by leaders.
# ::tokens ["i", "agree.we", "all", "must", "stand", "together", "wth", "stragedy.we", "are", "allready", "in", "a", "bad", "light.need", "to", "improve.starts", "by", "leaders", "."]
# ::lemmas ["i", "agree.we", "all", "must", "stand", "together", "wth", "stragedy.we", "be", "allready", "in", "a", "bad", "light.need", "to", "improve.start", "by", "leader", "."]
(c10-18 / multi-sentence
        :snt1 (c10-16 / agree-01
                      :ARG0 (c10-3 / i))
        :snt2 (c10-19 / obligate-01
                      :ARG1 (c10-6 / we
                                   :mod (c10-15 / all))
                      :ARG2 (c10-11 / stand-11
                                    :ARG0 c10-6
                                    :ARG1 (c10-1 / together)
                                    :ARG1-of (c10-14 / cause-01
                                                     :ARG0 (c10-0 / stress-02
                                                                  :ARG1 c10-6))))
        :snt3 (c10-2 / be-located-at-91
                     :ARG1 (c10-9 / we)
                     :ARG2 (c10-12 / light
                                   :ARG1-of (c10-10 / bad-07))
                     :time (c10-8 / ready-02))
        :snt4 (c10-5 / need-01
                     :ARG0 c10-9
                     :ARG1 (c10-13 / improve-01
                                   :ARG0 c10-9))
        :snt5 (c10-4 / start-01
                     :ARG0 (c10-17 / person
                                   :ARG0-of (c10-7 / lead-02))))

# ::snt tht can be yes.but not wth leaders tht corrupts the sistem.wthout law nd order whts the use building a country?
# ::tokens ["tht", "can", "be", "yes.but", "not", "wth", "leaders", "tht", "corrupts", "the", "sistem.wthout", "law", "nd", "order", "whts", "the", "use", "building", "a", "country", "?"]
# ::lemmas ["tht", "can", "be", "yes.but", "not", "wth", "leader", "tht", "corrupt", "the", "sistem.wthout", "law", "nd", "order", "wht", "the", "use", "build", "a", "country", "?"]
(c11-13 / contrast-01
        :ARG1 (c11-9 / possible-01
                     :ARG1 (c11-4 / yes))
        :ARG2 (c11-0 / and
                     :op1 (c11-6 / corrupt-01
                                 :ARG0 (c11-5 / person
                                              :ARG0-of (c11-12 / lead-02))
                                 :ARG1 (c11-8 / state)
                                 :polarity -)
                     :op2 (c11-1 / law
                                 :polarity -)
                     :op3 (c11-11 / order-01
                                  :ARG0 c11-0
                                  :op1 c11-1
                                  :op2 c11-5
                                  :polarity -)
                     :ARG1 (c11-7 / use-01
                                  :ARG1 (c11-2 / build-01
                                               :ARG1 (c11-3 / country)))
                     :polarity (c11-10 / amr-unknown)))

# ::snt i read the globe i learn alot.i see thiefs nd murderers.i see corruptions,i know hate nd i know love.africa no love.
# ::tokens ["i", "read", "the", "globe", "i", "learn", "alot.i", "see", "thiefs", "nd", "murderers.i", "see", "corruptions", ",", "i", "know", "hate", "nd", "i", "know", "love.africa", "no", "love", "."]
# ::lemmas ["i", "read", "the", "globe", "i", "learn", "alot.i", "see", "thiefs", "nd", "murderers.i", "see", "corruption", ",", "i", "know", "hate", "nd", "i", "know", "love.africa", "no", "love", "."]
(c12-23 / multi-sentence
        :snt1 (c12-7 / read-01
                     :ARG0 (c12-3 / i)
                     :ARG1 (c12-10 / globe)
                     :ARG3 (c12-12 / learn-01
                                   :ARG0 c12-3
                                   :quant (c12-6 / lot)))
        :snt2 (c12-16 / and
                      :op1 (c12-11 / see-01
                                   :ARG0 (c12-15 / i)
                                   :ARG1 (c12-17 / and
                                                 :op1 (c12-20 / person
                                                              :ARG0-of (c12-0 / steal-01))
                                                 :op2 (c12-18 / person
                                                              :ARG0-of (c12-8 / murder-01))))
                      :op2 (c12-4 / see-01
                                  :ARG0 c12-15
                                  :ARG1 (c12-14 / corrupt-01))
                      :op3 (c12-9 / know-01
                                  :ARG0 c12-15
                                  :ARG1 (c12-13 / hate-01))
                      :op4 (c12-2 / know-01
                                  :ARG0 c12-15
                                  :ARG1 (c12-21 / love-01))
                      :op5 (c12-22 / know-01
                                   :ARG0 c12-15
                                   :ARG1 (c12-1 / love-01)
                                   :location (c12-19 / continent
                                                     :name (c12-5 / name
                                                                  :op1 "Africa"))
                                   :polarity -)))

# ::snt Nah. I've see chickens with tails. And teeth.
# ::tokens ["Nah", ".", "I", "'ve", "see", "chickens", "with", "tails", ".", "And", "teeth", "."]
# ::lemmas ["Nah", ".", "i", "'ve", "see", "chicken", "with", "tail", ".", "and", "tooth", "."]
(c13-3 / multi-sentence
       :snt1 (c13-6 / nah)
       :snt2 (c13-5 / see-01
                    :ARG0 (c13-4 / i)
                    :ARG1 (c13-0 / and
                                 :op1 (c13-8 / chicken
                                             :ARG0-of (c13-7 / have-03
                                                             :ARG1 (c13-1 / tail)))
                                 :op2 (c13-2 / tooth))))

# ::snt lme lmek :')
# ::tokens ["lme", "lmek", ":')"]
# ::lemmas ["lme", "lmek", ":')"]
(c14-0 / laugh-01
       :ARG0 (c14-1 / i)
       :manner (c14-2 / loud))

# ::snt new meal for US only
# ::tokens ["new", "meal", "for", "US", "only"]
# ::lemmas ["new", "meal", "for", "US", "only"]
(c15-1 / meal
       :ARG1-of (c15-2 / new-01)
       :beneficiary (c15-4 / country
                           :name (c15-0 / name
                                        :op1 "US"))
       :mod (c15-3 / only))

# ::snt Battery Chicken or Free Range Rat? Tough call! A few extra pots of Sweet Chilli Sauce please.
# ::tokens ["Battery", "Chicken", "or", "Free", "Range", "Rat", "?", "Tough", "call", "!", "A", "few", "extra", "pots", "of", "Sweet", "Chilli", "Sauce", "please", "."]
# ::lemmas ["Battery", "Chicken", "or", "Free", "Range", "Rat", "?", "tough", "call", "!", "a", "few", "extra", "pot", "of", "Sweet", "Chilli", "Sauce", "please", "."]
(c16-7 / multi-sentence
       :snt1 (c16-0 / amr-choice
                    :op1 (c16-13 / chicken
                                 :mod (c16-5 / battery))
                    :op2 (c16-3 / rat
                                :mod (c16-9 / range
                                            :ARG1-of (c16-12 / free-04)))
                    :polarity (c16-10 / amr-unknown)
                    :ARG1-of (c16-8 / call-10
                                    :ARG1-of (c16-2 / tough-02)))
       :snt2 (c16-11 / sauce
                     :mod (c16-1 / sweet-chilli)
                     :quant (c16-4 / few)
                     :mod (c16-6 / extra)
                     :polite +))

# ::snt Hope this is not true
# ::tokens ["Hope", "this", "is", "not", "true"]
# ::lemmas ["hope", "this", "be", "not", "true"]
(c17-2 / hope-01
       :ARG0 (c17-1 / i)
       :ARG1 (c17-0 / true-01
                    :ARG1 (c17-3 / this)
                    :polarity -))

# ::snt lol... you kidding me?
# ::tokens ["lol", "...", "you", "kidding", "me", "?"]
# ::lemmas ["lol", "...", "you", "kid", "i", "?"]
(c19-1 / kid-01
       :polarity (c19-0 / amr-unknown)
       :ARG0 (c19-2 / you)
       :ARG2 (c19-3 / i)
       :manner (c19-4 / loud))

# ::snt kfc nd mcdonalds are lekker.but the stuff they put inside for taste nd look are unhealthy.but then again other foods too.
# ::tokens ["kfc", "nd", "mcdonalds", "are", "lekker.but", "the", "stuff", "they", "put", "inside", "for", "taste", "nd", "look", "are", "unhealthy.but", "then", "again", "other", "foods", "too", "."]
# ::lemmas ["kfc", "nd", "mcdonald", "be", "lekker.but", "the", "stuff", "they", "put", "inside", "for", "taste", "nd", "look", "be", "unhealthy.but", "then", "again", "other", "food", "too", "."]
(c20-19 / multi-sentence
        :snt1 (c20-11 / lekker
                      :domain (c20-15 / and
                                      :op1 (c20-14 / company
                                                   :name (c20-4 / name
                                                                :op1 "KFC"))
                                      :op2 (c20-16 / company
                                                   :name (c20-8 / name
                                                                :op1 "McDonalds"))))
        :snt2 (c20-7 / contrast-01
                     :ARG1 (c20-13 / and
                                   :op1 (c20-10 / stuff
                                                :ARG1-of (c20-17 / put-01
                                                                 :ARG0 (c20-0 / they)
                                                                 :ARG2 (c20-3 / inside)
                                                                 :purpose (c20-2 / taste)))
                                   :op2 (c20-6 / look-02
                                               :ARG0 c20-10
                                               :ARG1 (c20-12 / healthy
                                                             :polarity -)))
                     :ARG2 (c20-1 / and
                                  :op1 (c20-5 / food
                                              :mod (c20-20 / other))
                                  :op2 (c20-18 / food
                                               :mod (c20-9 / too)))))

# ::snt Is Not News!
# ::tokens ["Is", "Not", "News", "!"]
# ::lemmas ["be", "not", "news", "!"]
(c21-0 / news
       :polarity -)

# ::snt ; were there some kind of tests or something?
# ::tokens [";", "were", "there", "some", "kind", "of", "tests", "or", "something", "?"]
# ::lemmas [";", "be", "there", "some", "kind", "of", "test", "or", "something", "?"]
(c23-0 / amr-choice
       :op1 (c23-2 / test-01
                   :mod (c23-3 / kind
                               :mod (c23-4 / some)))
       :op2 (c23-1 / something))

# ::snt In Arabic Rat translated to FAARKFC =Kentucky FAAR Chicken=Kentucky RAT CHicken=KFCWhat you see is what you get!
# ::tokens ["In", "Arabic", "Rat", "translated", "to", "FAARKFC", "=", "Kentucky", "FAAR", "Chicken", "=", "Kentucky", "RAT", "CHicken", "=", "KFCWhat", "you", "see", "is", "what", "you", "get", "!"]
# ::lemmas ["in", "Arabic", "Rat", "translate", "to", "FAARKFC", "=", "Kentucky", "FAAR", "Chicken", "=", "Kentucky", "RAT", "CHicken", "=", "kfcwhat", "you", "see", "be", "what", "you", "get", "!"]
(c24-10 / multi-sentence
        :snt1 (c24-2 / translate-01
                     :ARG2 (c24-14 / publication
                                   :name (c24-15 / name
                                                 :op1 "Arabic"
                                                 :op2 "Rat"))
                     :ARG3 (c24-9 / publication
                                  :name (c24-6 / name
                                               :op1 "FAARKFC")
                                  :ARG1-of (c24-5 / equal-01
                                                  :ARG2 (c24-0 / publication
                                                               :name (c24-16 / name
                                                                             :op1 "Kentucky"
                                                                             :op2 "FAAR"
                                                                             :op3 "Chicken")
                                                               :ARG1-of (c24-1 / equal-01
                                                                               :ARG2 (c24-12 / publication
                                                                                             :name (c24-4 / name
                                                                                                          :op1 "Kentucky"
                                                                                                          :op2 "RAT"
                                                                                                          :op3 "Chicken")
                                                                                             :ARG1-of (c24-3 / equal-01
                                                                                                             :ARG2 c24-0))))))
                     :snt2 (c24-13 / see-01
                                   :ARG0 (c24-8 / you)
                                   :ARG1 (c24-7 / thing
                                                :ARG1-of (c24-11 / get-01
                                                                 :ARG0 c24-8)))))

# ::snt : What's lurking underneath that crispy crust? A KFC customer claims he got a fried rat
# ::tokens [":", "What", "'s", "lurking", "underneath", "that", "crispy", "crust", "?", "A", "KFC", "customer", "claims", "he", "got", "a", "fried", "rat"]
# ::lemmas [":", "what", "be", "lurk", "underneath", "that", "crispy", "crust", "?", "a", "KFC", "customer", "claim", "he", "get", "a", "fry", "rat"]
(c25-6 / multi-sentence
       :snt1 (c25-11 / lurk-01
                     :ARG0 (c25-0 / amr-unknown)
                     :location (c25-9 / underneath
                                      :op1 (c25-13 / crust
                                                   :mod (c25-8 / crispy)
                                                   :mod (c25-2 / that))))
       :snt2 (c25-5 / claim-01
                    :ARG0 (c25-3 / customer
                                 :mod (c25-1 / company
                                             :name (c25-10 / name
                                                           :op1 "KFC")))
                    :ARG1 (c25-7 / get-01
                                 :ARG0 c25-3
                                 :ARG1 (c25-4 / rat
                                              :ARG1-of (c25-12 / fry-01)))))

# ::snt :that's so freaking gross ahhhh!
# ::tokens [":", "that", "'s", "so", "freaking", "gross", "ahhhh", "!"]
# ::lemmas [":", "that", "be", "so", "freak", "gross", "ahhhh", "!"]
(c26-2 / gross-04
       :ARG1 (c26-1 / that)
       :mod (c26-4 / freaking
                   :degree (c26-3 / so)
                   :mode expressive)
       :mod (c26-0 / ahhhh
                   :mode expressive))

# ::snt KFC gotta go... : What's lurking underneath that crispy crust? A KFC customer claims he got a fried rat
# ::tokens ["KFC", "got", "ta", "go", "...", ":", "What", "'s", "lurking", "underneath", "that", "crispy", "crust", "?", "A", "KFC", "customer", "claims", "he", "got", "a", "fried", "rat"]
# ::lemmas ["KFC", "got", "to", "go", "...", ":", "what", "be", "lurk", "underneath", "that", "crispy", "crust", "?", "a", "KFC", "customer", "claim", "he", "get", "a", "fry", "rat"]
(c27-7 / multi-sentence
       :snt1 (c27-13 / obligate-01
                     :ARG1 (c27-8 / go-01
                                  :ARG1 (c27-6 / organization
                                               :name (c27-12 / name
                                                             :op1 "KFC"))))
       :snt2 (c27-14 / lurk-01
                     :ARG0 (c27-0 / amr-unknown)
                     :location (c27-11 / underneath
                                       :op1 (c27-16 / crust
                                                    :mod (c27-9 / crispy)
                                                    :mod (c27-2 / that))))
       :snt3 (c27-5 / claim-01
                    :ARG0 (c27-3 / customer
                                 :mod (c27-1 / company
                                             :name c27-12
                                             :op1 "KFC")))
       :ARG1 (c27-10 / get-01
                     :ARG0 c27-3
                     :ARG1 (c27-4 / rat
                                  :ARG1-of (c27-15 / fry-01))))

# ::snt :No more chicken from there!!
# ::tokens [":", "No", "more", "chicken", "from", "there", "!", "!"]
# ::lemmas [":", "no", "more", "chicken", "from", "there", "!", "!"]
(c28-2 / chicken
       :source (c28-1 / there)
       :quant (c28-0 / more)
       :polarity -)

# ::snt Oh Well , that's what you get when you don't care about Quality!KFC is famous in poor areas as people can't afford an expensive meal!
# ::tokens ["Oh", "Well", ",", "that", "'s", "what", "you", "get", "when", "you", "do", "n't", "care", "about", "Quality!KFC", "is", "famous", "in", "poor", "areas", "as", "people", "ca", "n't", "afford", "an", "expensive", "meal", "!"]
# ::lemmas ["oh", "well", ",", "that", "be", "what", "you", "get", "when", "you", "do", "not", "care", "about", "Quality!KFC", "be", "famous", "in", "poor", "area", "as", "people", "can", "not", "afford", "an", "expensive", "meal", "!"]
(c29-7 / multi-sentence
       :snt1 (c29-8 / get-01
                    :ARG0 (c29-6 / you)
                    :ARG1 (c29-2 / that)
                    :time (c29-17 / care-01
                                  :ARG0 c29-6
                                  :ARG1 (c29-11 / quality)
                                  :polarity -)
                    :mod (c29-15 / oh-well
                                 :mode expressive))
       :snt2 (c29-16 / fame-01
                     :ARG1 (c29-5 / organization
                                  :name (c29-13 / name
                                                :op1 "KFC"))
                     :location (c29-0 / area
                                      :mod (c29-14 / poor))
                     :ARG1-of (c29-9 / cause-01
                                     :ARG0 (c29-10 / possible-01
                                                   :ARG1 (c29-12 / afford-01
                                                                 :ARG0 (c29-1 / person)
                                                                 :ARG1 (c29-4 / meal
                                                                              :mod (c29-3 / expensive)))
                                                   :polarity -))))

# ::snt reasons why i don't eat KFC
# ::tokens ["reasons", "why", "i", "do", "n't", "eat", "KFC"]
# ::lemmas ["reason", "why", "i", "do", "not", "eat", "KFC"]
(c30-0 / reason
       :ARG0-of (c30-5 / cause-01
                       :ARG1 (c30-1 / eat-01
                                    :ARG0 (c30-2 / i)
                                    :ARG1 (c30-3 / product
                                                 :name (c30-4 / name
                                                              :op1 "KFC"))
                                    :polarity -)))

# ::snt Can imagine thousands of customers KFC is going to loose after this &amp; I'm of them.This has put me off from buying there.
# ::tokens ["Can", "imagine", "thousands", "of", "customers", "KFC", "is", "going", "to", "loose", "after", "this", "&", "amp", ";", "I", "'m", "of", "them", ".", "This", "has", "put", "me", "off", "from", "buying", "there", "."]
# ::lemmas ["can", "imagine", "thousands", "of", "customer", "KFC", "be", "go", "to", "loose", "after", "this", "&", "amp", ";", "i", "be", "of", "they", ".", "this", "have", "put", "i", "off", "from", "buy", "there", "."]
(c31-17 / multi-sentence
        :snt1 (c31-14 / possible-01
                      :ARG1 (c31-3 / imagine-01
                                   :ARG0 (c31-9 / i)
                                   :ARG1 (c31-8 / loose-02
                                                :ARG1 (c31-11 / customer
                                                              :quant (c31-6 / multiple
                                                                            :op1 1000)
                                                              :poss (c31-19 / organization
                                                                            :name (c31-4 / name
                                                                                         :op1 "KFC")))
                                                :time (c31-12 / after
                                                              :op1 (c31-10 / and
                                                                           :op1 (c31-0 / this)
                                                                           :op2 (c31-2 / this))))))
        :snt2 (c31-16 / include-91
                      :ARG1 (c31-5 / i)
                      :ARG2 c31-11)
        :snt3 (c31-13 / put-off-05
                      :ARG0 (c31-7 / this)
                      :ARG1 (c31-15 / i)
                      :ARG2 (c31-1 / buy-01
                                   :ARG0 c31-15
                                   :ARG2 (c31-18 / there))))

# ::snt Chicken was non-vegetarian, undigested rat in chicken stomach
# ::tokens ["Chicken", "was", "non", "-", "vegetarian", ",", "undigested", "rat", "in", "chicken", "stomach"]
# ::lemmas ["Chicken", "be", "non", "-", "vegetarian", ",", "undigested", "rat", "in", "chicken", "stomach"]
(c32-0 / rat
       :ARG1-of (c32-4 / digest-01
                       :polarity -)
       :location (c32-1 / stomach
                        :part-of (c32-3 / chicken
                                        :domain-of c32-0))
       :mod (c32-2 / vegetarian
                   :polarity -))

# ::snt you say it like its a bad thing... no one ever went to KFC just for the chicken, its the luxurious coating they go for. YUM.
# ::tokens ["you", "say", "it", "like", "its", "a", "bad", "thing", "...", "no", "one", "ever", "went", "to", "KFC", "just", "for", "the", "chicken", ",", "its", "the", "luxurious", "coating", "they", "go", "for", ".", "YUM", "."]
# ::lemmas ["you", "say", "it", "like", "its", "a", "bad", "thing", "...", "no", "one", "ever", "go", "to", "KFC", "just", "for", "the", "chicken", ",", "its", "the", "luxurious", "coating", "they", "go", "for", ".", "YUM", "."]
(c33-18 / multi-sentence
        :snt1 (c33-11 / say-01
                      :ARG0 (c33-17 / you)
                      :ARG1 (c33-5 / it
                                   :ARG1-of (c33-7 / resemble-01
                                                   :ARG2 (c33-0 / thing
                                                                :ARG1-of (c33-2 / bad-07)))))
        :snt2 (c33-9 / go-02
                     :ARG0 (c33-6 / no-one)
                     :ARG4 (c33-19 / organization
                                   :name (c33-8 / name
                                                :op1 "KFC"))
                     :time (c33-16 / ever)
                     :purpose (c33-14 / chicken)
                     :mod (c33-1 / just))
        :snt3 (c33-15 / coat-01
                      :ARG1 (c33-13 / it)
                      :ARG1-of (c33-12 / luxurious-02)
                      :ARG1-of (c33-10 / go-02
                                       :ARG0 (c33-3 / they)))
        :snt4 (c33-4 / yUM
                     :mode expressive))

# ::snt What new thing CNNI news, is it a rodent reptile!
# ::tokens ["What", "new", "thing", "CNNI", "news", ",", "is", "it", "a", "rodent", "reptile", "!"]
# ::lemmas ["what", "new", "thing", "CNNI", "news", ",", "be", "it", "a", "rodent", "reptile", "!"]
(c34-5 / new-01
       :ARG1 (c34-1 / reptile
                    :mod (c34-3 / rodent)
                    :domain (c34-2 / news
                                   :mod (c34-4 / publication
                                               :name (c34-6 / name
                                                            :op1 "CNNI"))))
       :degree (c34-0 / amr-unknown))

# ::snt o yeah dnt bye kfc in SA.workers digs in their noses nd helps customers.kfc are the best.thnks kfc.wow...
# ::tokens ["o", "yeah", "dnt", "bye", "kfc", "in", "SA.workers", "digs", "in", "their", "noses", "nd", "helps", "customers.kfc", "are", "the", "best.thnks", "kfc.wow", "..."]
# ::lemmas ["o", "yeah", "dnt", "bye", "kfc", "in", "sa.worker", "dig", "in", "their", "nose", "nd", "help", "customers.kfc", "be", "the", "best.thnks", "kfc.wow", "..."]
(c35-5 / multi-sentence
       :snt1 (c35-1 / bye
                    :domain (c35-12 / person
                                    :ARG0-of (c35-15 / work-01)
                                    :location (c35-17 / country
                                                      :name (c35-13 / name
                                                                    :op1 "SA"))
                                    :part (c35-2 / nose))
                    :polarity -)
       :snt2 (c35-0 / and
                    :op1 (c35-3 / dig-01
                                :ARG0 (c35-6 / person
                                             :ARG0-of c35-15))
                    :ARG1 c35-2)
       :op2 (c35-16 / help-01
                    :ARG0 c35-6
                    :ARG2 (c35-7 / customer))
       :snt3 (c35-11 / have-degree-91
                     :ARG1 (c35-4 / company
                                  :name (c35-14 / name
                                                :op1 "Kfc"))
                     :ARG2 (c35-8 / good-02
                                  :ARG1 c35-4)
                     :ARG3 (c35-9 / most))
       :snt4 (c35-10 / wow
                     :mode expressive))

# ::snt how doe you know that's a rat!? I can't see a rat... I see chicken...
# ::tokens ["how", "doe", "you", "know", "that", "'s", "a", "rat", "!", "?", "I", "ca", "n't", "see", "a", "rat", "...", "I", "see", "chicken", "..."]
# ::lemmas ["how", "doe", "you", "know", "that", "be", "a", "rat", "!", "?", "i", "can", "not", "see", "a", "rat", "...", "i", "see", "chicken", "..."]
(c36-6 / multi-sentence
       :snt1 (c36-4 / know-01
                    :ARG0 (c36-5 / you)
                    :ARG1 (c36-3 / rat
                                 :domain (c36-2 / that))
                    :manner (c36-0 / amr-unknown))
       :snt2 (c36-13 / and
                     :op1 (c36-10 / possible-01
                                  :ARG1 (c36-9 / see-01
                                               :ARG0 (c36-8 / i)
                                               :ARG1 (c36-7 / rat))
                                  :polarity -)
                     :op2 (c36-1 / see-01
                                 :ARG0 (c36-12 / i)
                                 :ARG1 (c36-11 / chicken))))

# ::snt ((((
# ::tokens ["(", "(", "(", "("]
# ::lemmas ["(", "(", "(", "("]
(c37-0 / emoticon)

# ::snt chickens get washed on floors.old fried chickens tht not been sold gets fried again nd given to customers.kfc just like mcdonalds.
# ::tokens ["chickens", "get", "washed", "on", "floors.old", "fried", "chickens", "tht", "not", "been", "sold", "gets", "fried", "again", "nd", "given", "to", "customers.kfc", "just", "like", "mcdonalds", "."]
# ::lemmas ["chicken", "get", "wash", "on", "floors.old", "fry", "chicken", "tht", "not", "be", "sell", "gets", "fry", "again", "nd", "give", "to", "customers.kfc", "just", "like", "mcdonald", "."]
(c38-8 / multi-sentence
       :snt1 (c38-15 / wash-01
                     :ARG1 (c38-17 / chicken)
                     :location (c38-16 / floor))
       :snt2 (c38-0 / and
                    :op1 (c38-3 / fry-01
                                :ARG1 (c38-10 / chicken
                                              :mod (c38-14 / old)
                                              :ARG1-of (c38-12 / sell-01
                                                               :polarity -))
                                :mod (c38-11 / again))
                    :op2 (c38-9 / give-01
                                :ARG1 c38-10
                                :ARG2 (c38-4 / customer)))
       :snt3 (c38-2 / resemble-01
                    :ARG1 (c38-5 / company
                                 :name (c38-13 / name
                                               :op1 "KFC"))
                    :ARG2 (c38-1 / company
                                 :name (c38-6 / name
                                              :op1 "McDonalds"))
                    :mod (c38-7 / just)))

# ::snt wow, super gross of true.
# ::tokens ["wow", ",", "super", "gross", "of", "true", "."]
# ::lemmas ["wow", ",", "super", "gross", "of", "true", "."]
(c39-2 / gross-03
       :ARG1 (c39-0 / thing
                    :ARG1-of (c39-1 / true-01))
       :degree (c39-3 / super)
       :mod (c39-4 / wow
                   :mode expressive))

# ::snt gunna vom
# ::tokens ["gunna", "vom"]
# ::lemmas ["gunna", "vom"]
(c40-0 / gunna
       :mode expressive)

# ::snt Raza yar subah subah he aisi tweets
# ::tokens ["Raza", "yar", "subah", "subah", "he", "aisi", "tweets"]
# ::lemmas ["Raza", "yar", "subah", "subah", "he", "aisi", "tweet"]
(c41-2 / tweet-02
       :ARG0 (c41-4 / person
                    :name (c41-5 / name
                                 :op1 "Raza"
                                 :op2 "Yar"))
       :ARG1-of (c41-3 / sub-01
                       :ARG2 (c41-0 / sub))
       :ARG1-of (c41-1 / aisi-00))

# ::snt KFC now becomes KFR
# ::tokens ["KFC", "now", "becomes", "KFR"]
# ::lemmas ["KFC", "now", "become", "KFR"]
(c42-0 / become-01
       :ARG1 (c42-4 / organization
                    :name (c42-3 / name
                                 :op1 "KFC"))
       :ARG2 (c42-1 / organization
                    :name (c42-2 / name
                                 :op1 "KFR"))
       :time (c42-5 / now))
