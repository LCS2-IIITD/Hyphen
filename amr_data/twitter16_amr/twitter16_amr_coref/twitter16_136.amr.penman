# ::snt Is it just one bloke John? Sorry, I'm outside and not up to date..
# ::tokens ["Is", "it", "just", "one", "bloke", "John", "?", "Sorry", ",", "I", "'m", "outside", "and", "not", "up", "to", "date", ".."]
# ::lemmas ["be", "it", "just", "one", "bloke", "John", "?", "Sorry", ",", "i", "be", "outside", "and", "not", "up", "to", "date", ".."]
(c1-5 / multi-sentence
      :snt1 (c1-7 / say-01
                  :ARG0 (c1-6 / i)
                  :ARG1 (c1-3 / bloke
                              :mod (c1-2 / just)
                              :domain (c1-13 / it)
                              :polarity (c1-0 / amr-unknown)
                              :quant 1)
                  :ARG2 (c1-8 / person
                              :name (c1-9 / name
                                          :op1 "John")))
      :snt2 (c1-1 / sorry-01
                  :ARG1 (c1-12 / i)
                  :ARG2 (c1-14 / and
                               :op1 (c1-4 / be-located-at-91
                                          :ARG1 c1-12
                                          :ARG2 (c1-10 / outside))
                               :op2 (c1-11 / up-to-date
                                           :domain c1-12
                                           :polarity -))))

# ::snt Lets be positive, with fingers crossed.
# ::tokens ["Lets", "be", "positive", ",", "with", "fingers", "crossed", "."]
# ::lemmas ["let", "be", "positive", ",", "with", "finger", "cross", "."]
(c2-0 / and
      :op1 (c2-1 / positive
                 :domain (c2-2 / we)
                 :mode imperative)
      :op2 (c2-4 / cross-01
                 :ARG1 (c2-3 / finger)))

# ::snt Thoughts can only be with those terrified souls in the cafe. I was there few months back.. A total nightmare.
# ::tokens ["Thoughts", "can", "only", "be", "with", "those", "terrified", "souls", "in", "the", "cafe", ".", "I", "was", "there", "few", "months", "back", "..", "A", "total", "nightmare", "."]
# ::lemmas ["thought", "can", "only", "be", "with", "those", "terrified", "soul", "in", "the", "cafe", ".", "i", "be", "there", "few", "month", "back", "..", "a", "total", "nightmare", "."]
(c3-16 / multi-sentence
       :snt1 (c3-15 / possible-01
                    :ARG1 (c3-13 / accompany-01
                                 :ARG0 (c3-0 / thing
                                             :ARG1-of (c3-2 / think-01))
                                 :ARG1 (c3-10 / soul
                                              :ARG1-of (c3-8 / terrify-01)
                                              :location (c3-12 / cafe))
                                 :mod (c3-18 / only)))
       :snt2 (c3-1 / be-located-at-91
                   :ARG1 (c3-3 / i)
                   :ARG2 (c3-17 / there)
                   :time (c3-9 / before
                               :op1 (c3-4 / now)
                               :quant (c3-5 / few
                                            :op1 (c3-14 / temporal-quantity
                                                        :unit (c3-6 / month)
                                                        :quant 1))))
       :snt3 (c3-7 / nightmare
                   :degree (c3-11 / total)))

# ::snt Is this confirmed???
# ::tokens ["Is", "this", "confirmed", "?", "?", "?"]
# ::lemmas ["be", "this", "confirm", "?", "?", "?"]
(c4-2 / confirm-01
      :polarity (c4-0 / amr-unknown)
      :ARG1 (c4-1 / this))

# ::snt Glad he's safe anyway. Who would have imagined this.
# ::tokens ["Glad", "he", "'s", "safe", "anyway", ".", "Who", "would", "have", "imagined", "this", "."]
# ::lemmas ["Glad", "he", "be", "safe", "anyway", ".", "who", "would", "have", "imagine", "this", "."]
(c5-2 / multi-sentence
      :snt1 (c5-3 / glad-02
                  :ARG0 (c5-5 / safe-01
                              :ARG1 (c5-6 / he))
                  :mod (c5-0 / anyway))
      :snt2 (c5-4 / imagine-01
                  :ARG0 (c5-7 / amr-unknown)
                  :ARG1 (c5-1 / this)))

# ::snt You based in Sydney John?
# ::tokens ["You", "based", "in", "Sydney", "John", "?"]
# ::lemmas ["you", "base", "in", "Sydney", "John", "?"]
(c6-1 / base-01
      :ARG1 (c6-2 / you)
      :polarity (c6-0 / amr-unknown)
      :location (c6-4 / city
                      :name (c6-3 / name
                                  :op1 "Sydney"
                                  :op2 "John")))
