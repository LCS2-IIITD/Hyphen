# ::snt Help the Red Cross provide food, water &amp; cots for refugees across Europe.
# ::tokens ["Help", "the", "Red", "Cross", "provide", "food", ",", "water", "&", "amp", ";", "cots", "for", "refugees", "across", "Europe", "."]
# ::lemmas ["help", "the", "Red", "Cross", "provide", "food", ",", "water", "&", "amp", ";", "cot", "for", "refugee", "across", "Europe", "."]
(c1-11 / help-01
       :ARG0 (c1-5 / you)
       :ARG1 (c1-6 / provide-01
                   :ARG0 (c1-8 / organization
                               :name (c1-7 / name
                                           :op1 "Red"
                                           :op2 "Cross"))
                   :ARG1 (c1-0 / and
                               :op1 (c1-10 / food)
                               :op2 (c1-9 / water)
                               :op3 (c1-12 / amp))
                   :ARG2 (c1-2 / refugee
                               :location (c1-1 / across
                                               :op1 (c1-3 / continent
                                                          :name (c1-4 / name
                                                                      :op1 "Europe")))))
       :mode imperative)

# ::snt it would be better if Starbucks don't send money to help the occupation in Palestine too.
# ::tokens ["it", "would", "be", "better", "if", "Starbucks", "do", "n't", "send", "money", "to", "help", "the", "occupation", "in", "Palestine", "too", "."]
# ::lemmas ["it", "would", "be", "well", "if", "Starbucks", "do", "not", "send", "money", "to", "help", "the", "occupation", "in", "Palestine", "too", "."]
(c2-3 / good-02
      :ARG1 (c2-11 / have-condition-91
                   :ARG2 (c2-7 / send-01
                               :ARG0 (c2-12 / company
                                            :name (c2-8 / name
                                                        :op1 "Starbucks"))
                               :ARG1 (c2-4 / money)
                               :purpose (c2-6 / help-01
                                              :ARG0 c2-12
                                              :ARG1 (c2-10 / occupy-01
                                                           :ARG1 (c2-5 / country
                                                                       :name (c2-2 / name
                                                                                   :op1 "Palestine")))
                                              :mod (c2-0 / too))
                               :polarity -))
      :ARG2-of (c2-9 / have-degree-91
                     :ARG1 c2-11
                     :ARG3 (c2-1 / more)))

# ::snt there Muslims they will refuse anything with the cross on you liberal goofball
# ::tokens ["there", "Muslims", "they", "will", "refuse", "anything", "with", "the", "cross", "on", "you", "liberal", "goofball"]
# ::lemmas ["there", "Muslims", "they", "will", "refuse", "anything", "with", "the", "cross", "on", "you", "liberal", "goofball"]
(c3-8 / say-01
      :ARG0 (c3-7 / i)
      :ARG1 (c3-2 / refuse-01
                  :ARG0 (c3-1 / they)
                  :ARG1 (c3-0 / anything
                              :instrument-of (c3-12 / cross-01
                                                    :ARG1 (c3-4 / you
                                                                :mod (c3-5 / goofball)
                                                                :ARG1-of (c3-11 / liberal-02))))
                  :location (c3-3 / there)
                  :ARG2 (c3-9 / person
                              :mod (c3-6 / religious-group
                                         :name (c3-10 / name
                                                      :op1 "Islam"))))
      :ARG2 c3-4)

# ::snt why doesn't Starbucks support US troops by sending them coffee. That's ok I won't support Starbucks anymore
# ::tokens ["why", "does", "n't", "Starbucks", "support", "US", "troops", "by", "sending", "them", "coffee", ".", "That", "'s", "ok", "I", "wo", "n't", "support", "Starbucks", "anymore"]
# ::lemmas ["why", "do", "not", "Starbucks", "support", "US", "troop", "by", "send", "they", "coffee", ".", "that", "be", "ok", "i", "will", "not", "support", "Starbucks", "anymore"]
(c4-6 / multi-sentence
      :snt1 (c4-14 / cause-01
                   :ARG0 (c4-0 / amr-unknown)
                   :ARG1 (c4-9 / support-01
                               :ARG0 (c4-7 / company
                                           :name (c4-10 / name
                                                        :op1 "Starbucks"))
                               :ARG1 (c4-2 / troop
                                           :mod (c4-4 / country
                                                      :name (c4-5 / name
                                                                  :op1 "US")))
                               :manner (c4-1 / send-01
                                             :ARG0 c4-7
                                             :ARG1 (c4-3 / coffee)
                                             :ARG2 c4-2)
                               :polarity -))
      :snt2 (c4-12 / okay-04
                   :ARG1 (c4-11 / support-01
                                :ARG0 (c4-8 / i)
                                :ARG1 c4-7
                                :time (c4-13 / anymore))))

# ::snt love to help, but I'm not a fan of the Red Cross.
# ::tokens ["love", "to", "help", ",", "but", "I", "'m", "not", "a", "fan", "of", "the", "Red", "Cross", "."]
# ::lemmas ["love", "to", "help", ",", "but", "i", "be", "not", "a", "fan", "of", "the", "Red", "Cross", "."]
(c5-6 / contrast-01
      :ARG1 (c5-3 / love-01
                  :ARG0 (c5-0 / i)
                  :ARG1 (c5-5 / help-01
                              :ARG0 c5-0))
      :ARG2 (c5-4 / fan
                  :domain c5-0
                  :topic (c5-2 / organization
                               :name (c5-1 / name
                                           :op1 "Red"
                                           :op2 "Cross"))
                  :polarity -))

# ::snt Starbucks aren't bigoted hateful people like you.
# ::tokens ["Starbucks", "are", "n't", "bigoted", "hateful", "people", "like", "you", "."]
# ::lemmas ["starbuck", "be", "not", "bigote", "hateful", "people", "like", "you", "."]
(c6-3 / person
      :mod (c6-1 / bigot)
      :ARG0-of (c6-5 / hate-01)
      :ARG1-of (c6-0 / resemble-01
                     :ARG2 (c6-2 / you))
      :domain (c6-6 / company
                    :name (c6-4 / name
                                :op1 "Starbucks"))
      :polarity -)

# ::snt how about people in USA
# ::tokens ["how", "about", "people", "in", "USA"]
# ::lemmas ["how", "about", "people", "in", "USA"]
(c7-0 / amr-unknown
      :topic (c7-2 / person
                   :location (c7-1 / country
                                   :name (c7-3 / name
                                               :op1 "USA"))))

# ::snt Starbucks major supporter of abortion &amp; Planned Parenthood-will spin &amp; deny it but evidence irrefutable
# ::tokens ["Starbucks", "major", "supporter", "of", "abortion", "&", "amp", ";", "Planned", "Parenthood", "-", "will", "spin", "&", "amp", ";", "deny", "it", "but", "evidence", "irrefutable"]
# ::lemmas ["starbucks", "major", "supporter", "of", "abortion", "&", "amp", ";", "Planned", "Parenthood", "-", "will", "spin", "&", "amp", ";", "deny", "it", "but", "evidence", "irrefutable"]
(c9-9 / multi-sentence
      :snt1 (c9-0 / and
                  :op1 (c9-12 / spin-03
                              :ARG0 (c9-16 / company
                                           :name (c9-13 / name
                                                        :op1 "Starbucks")
                                           :ARG0-of (c9-1 / support-01
                                                          :ARG1 (c9-11 / abort-01)
                                                          :ARG1-of (c9-5 / major-02))))
                  :op2 (c9-4 / event
                             :name (c9-6 / name
                                         :op1 "Planned"
                                         :op2 "Parenthood")))
      :snt2 (c9-10 / contrast-01
                   :ARG1 (c9-7 / deny-01
                               :ARG0 (c9-8 / you)
                               :ARG1 (c9-14 / it))
                   :ARG2 (c9-15 / possible-01
                                :ARG1 (c9-3 / refute-01
                                            :ARG1 (c9-2 / evidence-01))
                                :polarity -)))

# ::snt thanks for the website, and done. I hope more people achieve , thanks starbucks
# ::tokens ["thanks", "for", "the", "website", ",", "and", "done", ".", "I", "hope", "more", "people", "achieve", ",", "thanks", "starbucks"]
# ::lemmas ["thank", "for", "the", "website", ",", "and", "do", ".", "i", "hope", "more", "people", "achieve", ",", "thank", "starbuck"]
(c10-7 / multi-sentence
       :snt1 (c10-0 / and
                    :op1 (c10-1 / thank-01
                                :ARG0 (c10-8 / i)
                                :ARG1 (c10-6 / you)
                                :ARG2 (c10-11 / website))
                    :op2 (c10-3 / be-done-08
                                :ARG0 c10-8))
       :snt2 (c10-12 / hope-01
                     :ARG0 (c10-2 / i)
                     :ARG1 (c10-13 / achieve-01
                                   :ARG0 (c10-9 / person
                                                :quant (c10-4 / more)))
                     :ARG2-of (c10-5 / thank-01
                                     :ARG0 c10-2
                                     :ARG1 c10-9
                                     :name (c10-10 / name
                                                   :op1 "Starbucks"))))

# ::snt ....
# ::tokens ["...."]
# ::lemmas ["...."]
(c11-0 / amr-empty)

# ::snt Thanks for your concern! You may be able to make a donation though .
# ::tokens ["Thanks", "for", "your", "concern", "!", "You", "may", "be", "able", "to", "make", "a", "donation", "though", "."]
# ::lemmas ["thank", "for", "your", "concern", "!", "you", "may", "be", "able", "to", "make", "a", "donation", "though", "."]
(c12-4 / multi-sentence
       :snt1 (c12-0 / thank-01
                    :ARG0 (c12-5 / i)
                    :ARG1 (c12-3 / you)
                    :ARG2 (c12-8 / concern-01
                                 :ARG1 c12-3))
       :snt2 (c12-6 / possible-01
                    :ARG1 (c12-2 / donate-01
                                 :ARG0 (c12-1 / you))
                    :ARG1-of (c12-7 / have-concession-91)))

# ::snt Were working to get help to our South Carolina partners. Our hearts go out to everyone affected.
# ::tokens ["Were", "working", "to", "get", "help", "to", "our", "South", "Carolina", "partners", ".", "Our", "hearts", "go", "out", "to", "everyone", "affected", "."]
# ::lemmas ["be", "work", "to", "get", "help", "to", "our", "South", "Carolina", "partner", ".", "our", "heart", "go", "out", "to", "everyone", "affect", "."]
(c13-3 / multi-sentence
       :snt1 (c13-11 / work-01
                     :ARG0 (c13-2 / we)
                     :ARG1 (c13-4 / get-01
                                  :ARG0 c13-2
                                  :ARG1 (c13-12 / help-01)
                                  :ARG2 (c13-9 / partner-01
                                               :ARG0 c13-2
                                               :ARG1 (c13-8 / state
                                                            :name (c13-10 / name
                                                                          :op1 "South"
                                                                          :op2 "Carolina")))))
       :snt2 (c13-5 / go-out-17
                    :ARG0 (c13-7 / heart
                                 :part-of (c13-6 / we))
                    :ARG1 (c13-1 / everyone
                                 :ARG1-of (c13-0 / affect-01))))

# ::snt BOYCOTT STARBUCKS!!!
# ::tokens ["BOYCOTT", "STARBUCKS", "!", "!", "!"]
# ::lemmas ["BOYCOTT", "STARBUCKS", "!", "!", "!"]
(c14-0 / star-01
       :ARG1 (c14-1 / person
                    :name (c14-2 / name
                                 :op1 "BooyOTT"))
       :mode expressive)

# ::snt Keep your money in America. We have homeless and hungry here!
# ::tokens ["Keep", "your", "money", "in", "America", ".", "We", "have", "homeless", "and", "hungry", "here", "!"]
# ::lemmas ["keep", "your", "money", "in", "America", ".", "we", "have", "homeless", "and", "hungry", "here", "!"]
(c15-5 / multi-sentence
       :snt1 (c15-3 / keep-01
                    :ARG0 (c15-4 / you)
                    :ARG1 (c15-2 / money
                                 :poss c15-4)
                    :location (c15-13 / country
                                      :name (c15-9 / name
                                                   :op1 "America")))
       :snt2 (c15-12 / have-03
                     :ARG0 (c15-11 / we)
                     :ARG1 (c15-0 / and
                                  :op1 (c15-10 / person
                                               :ARG0-of c15-12
                                               :ARG1 (c15-7 / home)
                                               :polarity -))
                     :op2 (c15-6 / person
                                 :ARG0-of (c15-8 / hunger-01)))
       :location (c15-1 / here))

# ::snt --Feed them! And they will ALWAYS come back for MORE! ..Shame on you Starbucks! instead looking after hungry Americans!
# ::tokens ["--Feed", "them", "!", "And", "they", "will", "ALWAYS", "come", "back", "for", "MORE", "!", "..", "Shame", "on", "you", "Starbucks", "!", "instead", "looking", "after", "hungry", "Americans", "!"]
# ::lemmas ["--feed", "they", "!", "and", "they", "will", "always", "come", "back", "for", "more", "!", "..", "shame", "on", "you", "starbuck", "!", "instead", "look", "after", "hungry", "Americans", "!"]
(c16-19 / multi-sentence
        :snt1 (c16-6 / feed-01
                     :ARG0 (c16-18 / you)
                     :ARG2 (c16-0 / they)
                     :mode imperative)
        :snt2 (c16-15 / and
                      :op2 (c16-14 / come-01
                                   :ARG1 (c16-3 / they)
                                   :direction (c16-2 / back)
                                   :time (c16-13 / always)
                                   :purpose (c16-7 / more)))
        :snt3 (c16-10 / shame-01
                      :ARG1 (c16-1 / you)
                      :ARG2 (c16-16 / company
                                    :name (c16-5 / name
                                                 :op1 "Starbucks")
                                    :poss (c16-20 / you))
                      :ARG1-of (c16-4 / instead-of-91
                                      :ARG2 (c16-11 / look-after-07
                                                    :ARG1 (c16-17 / person
                                                                  :mod (c16-8 / country
                                                                              :name (c16-9 / name
                                                                                           :op1 "America"))
                                                                  :ARG0-of (c16-12 / hunger-01))))))

# ::snt Why not ask wealthy Gulf States + Israel to take some ? They have take none, why ?
# ::tokens ["Why", "not", "ask", "wealthy", "Gulf", "States", "+", "Israel", "to", "take", "some", "?", "They", "have", "take", "none", ",", "why", "?"]
# ::lemmas ["why", "not", "ask", "wealthy", "Gulf", "States", "+", "Israel", "to", "take", "some", "?", "they", "have", "take", "none", ",", "why", "?"]
(c17-8 / multi-sentence
       :snt1 (c17-15 / cause-01
                     :ARG0 (c17-0 / amr-unknown)
                     :ARG1 (c17-16 / ask-02
                                   :ARG1 (c17-1 / take-01
                                                :ARG0 (c17-2 / and
                                                             :op1 (c17-9 / country
                                                                         :name (c17-12 / name
                                                                                       :op1 "Gulf"))
                                                             :op2 (c17-4 / country
                                                                         :name (c17-5 / name
                                                                                      :op1 "Israel"))
                                                             :mod (c17-14 / wealth))
                                                :ARG1 (c17-11 / some))
                                   :ARG2 c17-2
                                   :polarity -))
       :snt2 (c17-6 / take-01
                    :ARG0 (c17-7 / they)
                    :ARG1 (c17-13 / none)
                    :ARG1-of (c17-3 / cause-01
                                    :ARG0 (c17-10 / amr-unknown))))

# ::snt When did say that? They didn't. If it weren't for lies bigots &amp; trolls would do zero thinking.
# ::tokens ["When", "did", "say", "that", "?", "They", "did", "n't", ".", "If", "it", "were", "n't", "for", "lies", "bigots", "&", "amp", ";", "trolls", "would", "do", "zero", "thinking", "."]
# ::lemmas ["when", "do", "say", "that", "?", "they", "do", "not", ".", "if", "it", "be", "not", "for", "lie", "bigots", "&", "amp", ";", "troll", "would", "do", "zero", "thinking", "."]
(c18-7 / multi-sentence
       :snt1 (c18-11 / say-01
                     :ARG1 (c18-1 / that)
                     :time (c18-0 / amr-unknown))
       :snt2 (c18-16 / do-02
                     :ARG0 (c18-5 / they)
                     :polarity -)
       :snt3 (c18-2 / do-02
                    :ARG0 (c18-12 / person
                                  :ARG0-of (c18-6 / troll-01))
                    :ARG1 (c18-9 / think-01
                                 :quant 0)
                    :condition (c18-15 / have-purpose-91
                                       :ARG1 (c18-10 / it)
                                       :ARG2 (c18-13 / and
                                                     :op1 (c18-4 / bigot)
                                                     :op2 (c18-8 / person
                                                                 :ARG1-of (c18-3 / amp-01))
                                                     :ARG1-of (c18-14 / lie-08))
                                       :polarity -)))

# ::snt that's a great idea.
# ::tokens ["that", "'s", "a", "great", "idea", "."]
# ::lemmas ["that", "be", "a", "great", "idea", "."]
(c19-1 / idea
       :mod (c19-2 / great)
       :domain (c19-0 / that))

# ::snt Let's look for a solution for drought in California (there are people without drinking water) &amp; excess water in SC.
# ::tokens ["Let", "'s", "look", "for", "a", "solution", "for", "drought", "in", "California", "(", "there", "are", "people", "without", "drinking", "water", ")", "&", "amp", ";", "excess", "water", "in", "SC", "."]
# ::lemmas ["let", "us", "look", "for", "a", "solution", "for", "drought", "in", "California", "(", "there", "be", "people", "without", "drinking", "water", ")", "&", "amp", ";", "excess", "water", "in", "SC", "."]
(c20-6 / multi-sentence
       :snt1 (c20-13 / look-01
                     :ARG0 (c20-12 / we)
                     :ARG1 (c20-1 / thing
                                  :ARG2-of (c20-8 / solve-01
                                                  :ARG1 (c20-14 / drought
                                                                :location (c20-0 / state
                                                                                 :name (c20-9 / name
                                                                                              :op1 "California")))))
                     :mode imperative)
       :snt2 (c20-10 / person
                     :ARG0-of (c20-2 / drink-01
                                     :ARG1 (c20-4 / water)
                                     :polarity -))
       :snt3 (c20-7 / water
                    :mod (c20-3 / excess)
                    :location (c20-11 / state
                                      :name (c20-5 / name
                                                   :op1 "SC"))))

# ::snt why doesn't Starbucks just donate all their sales or a percentage on a certain day?
# ::tokens ["why", "does", "n't", "Starbucks", "just", "donate", "all", "their", "sales", "or", "a", "percentage", "on", "a", "certain", "day", "?"]
# ::lemmas ["why", "do", "not", "Starbucks", "just", "donate", "all", "their", "sale", "or", "a", "percentage", "on", "a", "certain", "day", "?"]
(c21-10 / cause-01
        :ARG0 (c21-0 / amr-unknown)
        :ARG1 (c21-11 / donate-01
                      :ARG0 (c21-4 / company
                                   :name (c21-7 / name
                                                :op1 "Starbucks"))
                      :ARG1 (c21-9 / or
                                   :op1 (c21-6 / sell-01
                                               :ARG0 c21-4
                                               :mod (c21-5 / all))
                                   :op2 (c21-8 / percentage
                                               :poss c21-4))
                      :mod (c21-2 / just)
                      :time (c21-1 / day
                                   :mod (c21-3 / certain))
                      :polarity -))

# ::snt : "Help the Red Cross provide food, water &amp;amp; cots for refugees across Europe." in United States
# ::tokens [":", "\"", "Help", "the", "Red", "Cross", "provide", "food", ",", "water", "&", "amp;amp", ";", "cots", "for", "refugees", "across", "Europe", ".", "\"", "in", "United", "States"]
# ::lemmas [":", "\"", "help", "the", "Red", "Cross", "provide", "food", ",", "water", "&", "amp;amp", ";", "cot", "for", "refugee", "across", "Europe", ".", "\"", "in", "United", "States"]
(c22-13 / help-01
        :ARG0 (c22-5 / you)
        :ARG1 (c22-7 / provide-01
                     :ARG0 (c22-9 / organization
                                  :name (c22-8 / name
                                               :op1 "Red"
                                               :op2 "Cross"))
                     :ARG1 (c22-0 / and
                                  :op1 (c22-12 / food)
                                  :op2 (c22-11 / water)
                                  :op3 (c22-3 / kit))
                     :ARG2 (c22-1 / refugee
                                  :location (c22-14 / across
                                                    :op1 (c22-2 / continent
                                                                :name (c22-4 / name
                                                                             :op1 "Europe")))))
        :location (c22-6 / country
                         :name (c22-10 / name
                                       :op1 "United"
                                       :op2 "States"))
        :mode imperative)

# ::snt south Carolina should come first on your list
# ::tokens ["south", "Carolina", "should", "come", "first", "on", "your", "list"]
# ::lemmas ["south", "Carolina", "should", "come", "first", "on", "your", "list"]
(c23-0 / recommend-01
       :ARG1 (c23-6 / come-04
                    :ARG1 (c23-2 / state
                                 :name (c23-3 / name
                                              :op1 "South"
                                              :op2 "Carolina"))
                    :ARG2 (c23-4 / ordinal-entity
                                 :value 1)
                    :ARG5 (c23-5 / list-01
                                 :ARG0 (c23-1 / you))))

# ::snt such a beautiful picture,yes let us all help
# ::tokens ["such", "a", "beautiful", "picture", ",", "yes", "let", "us", "all", "help"]
# ::lemmas ["such", "a", "beautiful", "picture", ",", "yes", "let", "we", "all", "help"]
(c24-3 / multi-sentence
       :snt1 (c24-5 / picture
                    :ARG1-of (c24-1 / beautiful-02
                                    :degree (c24-4 / such)))
       :snt2 (c24-7 / let-01
                    :ARG0 (c24-2 / you)
                    :ARG1 (c24-8 / help-01
                                 :ARG0 (c24-6 / we
                                              :mod (c24-0 / all)))
                    :mode imperative))

# ::snt can I suggest you look into your partner's Haitian track record
# ::tokens ["can", "I", "suggest", "you", "look", "into", "your", "partner", "'s", "Haitian", "track", "record"]
# ::lemmas ["can", "i", "suggest", "you", "look", "into", "your", "partner", "'s", "Haitian", "track", "record"]
(c25-8 / possible-01
       :polarity (c25-0 / amr-unknown)
       :ARG1 (c25-7 / suggest-01
                    :ARG0 (c25-6 / i)
                    :ARG1 (c25-10 / look-into-11
                                  :ARG0 (c25-4 / you)
                                  :ARG1 (c25-3 / record
                                               :mod (c25-2 / track)
                                               :poss (c25-5 / person
                                                            :ARG0-of (c25-11 / have-rel-role-91
                                                                             :ARG1 c25-4
                                                                             :ARG2 (c25-1 / partner)))
                                               :mod (c25-12 / country
                                                            :name (c25-9 / name
                                                                         :op1 "Haiti"))))))

# ::snt free biafran from Nigeria, we are dieing in Nigeria
# ::tokens ["free", "biafran", "from", "Nigeria", ",", "we", "are", "dieing", "in", "Nigeria"]
# ::lemmas ["free", "biafran", "from", "Nigeria", ",", "we", "be", "die", "in", "Nigeria"]
(c26-7 / cause-01
       :ARG0 (c26-6 / free-04
                    :ARG1 (c26-3 / country
                                 :name (c26-4 / name
                                              :op1 "Biafran"))
                    :ARG2 (c26-0 / country
                                 :name (c26-1 / name
                                              :op1 "Nigeria")))
       :ARG1 (c26-2 / die-01
                    :ARG1 (c26-5 / we)
                    :location c26-0))

# ::snt easy twit from ur cozy house in US while ur country goes around the globe bombing &amp; killing to"export democracy"
# ::tokens ["easy", "twit", "from", "ur", "cozy", "house", "in", "US", "while", "ur", "country", "goes", "around", "the", "globe", "bombing", "&", "amp", ";", "killing", "to\"export", "democracy", "\""]
# ::lemmas ["easy", "twit", "from", "ur", "cozy", "house", "in", "US", "while", "ur", "country", "go", "around", "the", "globe", "bombing", "&", "amp", ";", "kill", "to\"export", "democracy", "\""]
(c27-0 / and
       :op1 (c27-1 / twit
                   :ARG1-of (c27-3 / easy-05)
                   :source (c27-14 / house
                                   :mod (c27-15 / cozy)
                                   :location (c27-9 / country
                                                    :name (c27-12 / name
                                                                  :op1 "US"))
                                   :poss (c27-7 / you)))
       :op2 (c27-8 / go-01
                   :ARG1 c27-9
                   :ARG4 (c27-11 / around
                                 :op1 (c27-2 / and
                                             :op1 (c27-4 / bomb-01)
                                             :op2 (c27-10 / amp))))
       :op3 (c27-5 / kill-01
                   :purpose (c27-13 / export-01
                                    :ARG1 (c27-6 / democracy))))

# ::snt fuck you
# ::tokens ["fuck", "you"]
# ::lemmas ["fuck", "you"]
(c28-1 / fuck-01
       :ARG1 (c28-0 / you)
       :mode imperative
       :mode expressive)

# ::snt YOU bombed syria and supported terrorists creating the refugee wave, now YOU solve the refugees problem
# ::tokens ["YOU", "bombed", "syria", "and", "supported", "terrorists", "creating", "the", "refugee", "wave", ",", "now", "YOU", "solve", "the", "refugees", "problem"]
# ::lemmas ["you", "bomb", "syria", "and", "support", "terrorist", "create", "the", "refugee", "wave", ",", "now", "you", "solve", "the", "refugee", "problem"]
(c29-9 / solve-01
       :ARG0 (c29-6 / you)
       :ARG1 (c29-10 / problem
                     :topic (c29-3 / refugee))
       :ARG2 (c29-0 / and
                    :op1 (c29-4 / bomb-01
                                :ARG0 c29-6
                                :ARG1 (c29-13 / country
                                              :name (c29-11 / name
                                                            :op1 "Syria")))
                    :op2 (c29-1 / support-01
                                :ARG0 c29-6
                                :ARG1 (c29-2 / terrorist))
                    :ARG0-of (c29-7 / create-01
                                    :ARG1 (c29-12 / wave-04
                                                  :ARG1 (c29-8 / refugee))))
       :time (c29-5 / now))

# ::snt You've got to be kidding! US has failed taking care of our own homeless!
# ::tokens ["You", "'ve", "got", "to", "be", "kidding", "!", "US", "has", "failed", "taking", "care", "of", "our", "own", "homeless", "!"]
# ::lemmas ["you", "'ve", "get", "to", "be", "kid", "!", "US", "have", "fail", "take", "care", "of", "our", "own", "homeless", "!"]
(c30-2 / multi-sentence
       :snt1 (c30-3 / get-06
                    :ARG0 (c30-1 / you)
                    :ARG1 (c30-0 / kid-01
                                 :ARG0 c30-1))
       :snt2 (c30-9 / fail-01
                    :ARG1 (c30-11 / country
                                  :name (c30-6 / name
                                               :op1 "US"))
                    :ARG2 (c30-4 / care-03
                                 :ARG0 c30-11
                                 :ARG1 (c30-7 / person
                                              :ARG0-of (c30-10 / have-03
                                                               :ARG1 (c30-5 / home)
                                                               :polarity -)
                                              :poss (c30-8 / we)))))

# ::snt Better you help people by paying your adequate share of tax.
# ::tokens ["Better", "you", "help", "people", "by", "paying", "your", "adequate", "share", "of", "tax", "."]
# ::lemmas ["well", "you", "help", "people", "by", "pay", "your", "adequate", "share", "of", "tax", "."]
(c31-9 / have-degree-91
       :ARG1 (c31-6 / help-01
                    :ARG0 (c31-2 / you)
                    :ARG2 (c31-8 / person)
                    :manner (c31-3 / pay-01
                                   :ARG0 c31-2
                                   :ARG1 (c31-7 / share-01
                                                :ARG1 (c31-1 / tax-01)
                                                :ARG2 c31-2
                                                :mod (c31-0 / adequate))))
       :ARG2 (c31-4 / good-02
                    :ARG1 c31-6)
       :ARG3 (c31-5 / more))

# ::snt lool
# ::tokens ["lool"]
# ::lemmas ["lool"]
(c32-0 / person
       :name (c32-1 / name
                    :op1 "lool"))

# ::snt ISIS infiltrating refugee boats to Europe
# ::tokens ["ISIS", "infiltrating", "refugee", "boats", "to", "Europe"]
# ::lemmas ["ISIS", "infiltrate", "refugee", "boat", "to", "Europe"]
(c33-4 / infiltrate-01
       :ARG0 (c33-6 / criminal-organization
                    :name (c33-5 / name
                                 :op1 "ISI"))
       :ARG1 (c33-1 / boat
                    :mod (c33-0 / refugee))
       :destination (c33-3 / continent
                           :name (c33-2 / name
                                        :op1 "Europe")))

# ::snt I from argentina but I want to help
# ::tokens ["I", "from", "argentina", "but", "I", "want", "to", "help"]
# ::lemmas ["i", "from", "argentina", "but", "i", "want", "to", "help"]
(c34-0 / i
       :source (c34-4 / country
                      :name (c34-1 / name
                                   :op1 "Argentina"))
       :concession (c34-2 / want-01
                          :ARG1 (c34-3 / help-01
                                       :ARG0 c34-0))
       :ARG0-of c34-2)

# ::snt you are all right. The refuse water and food. The want money, houses etc. Dont give for the refugees. Not worth it.
# ::tokens ["you", "are", "all", "right", ".", "The", "refuse", "water", "and", "food", ".", "The", "want", "money", ",", "houses", "etc", ".", "Do", "nt", "give", "for", "the", "refugees", ".", "Not", "worth", "it", "."]
# ::lemmas ["you", "be", "all", "right", ".", "the", "refuse", "water", "and", "food", ".", "the", "want", "money", ",", "house", "etc", ".", "do", "not", "give", "for", "the", "refugee", ".", "not", "worth", "it", "."]
(c35-8 / multi-sentence
       :snt1 (c35-3 / right-06
                    :ARG1 (c35-7 / you)
                    :mod (c35-0 / all))
       :snt2 (c35-17 / and
                     :op1 (c35-12 / refuse-01
                                  :ARG1 (c35-2 / and
                                               :op1 (c35-14 / water)
                                               :op2 (c35-15 / food)))
                     :op2 (c35-6 / want-01
                                 :ARG1 (c35-11 / and
                                               :op1 (c35-5 / money)
                                               :op2 (c35-16 / house)
                                               :op3 (c35-4 / et-cetera))))
       :snt3 (c35-9 / give-01
                    :ARG0 c35-7
                    :polarity -
                    :mode imperative)
       :beneficiary (c35-1 / refugee)
       :snt4 (c35-10 / worth-02
                     :ARG2 (c35-13 / it)
                     :polarity -))

# ::snt help the people lying on the streets in American cities.i didn't know if they were dead or what.absolutely appalling.
# ::tokens ["help", "the", "people", "lying", "on", "the", "streets", "in", "American", "cities.i", "did", "n't", "know", "if", "they", "were", "dead", "or", "what.absolutely", "appalling", "."]
# ::lemmas ["help", "the", "people", "lie", "on", "the", "street", "in", "American", "cities.i", "do", "not", "know", "if", "they", "be", "dead", "or", "what.absolutely", "appalling", "."]
(c36-17 / multi-sentence
        :snt1 (c36-9 / help-01
                     :ARG0 (c36-16 / you)
                     :ARG1 (c36-14 / person
                                   :ARG1-of (c36-8 / lie-07
                                                   :ARG2 (c36-7 / street
                                                                :location (c36-11 / city
                                                                                  :mod (c36-13 / country
                                                                                               :name (c36-4 / name
                                                                                                            :op1 "America"))))))
                     :mode imperative)
        :snt2 (c36-5 / know-01
                     :ARG0 (c36-3 / i)
                     :ARG1 (c36-18 / or
                                   :op1 (c36-0 / truth-value
                                               :polarity-of (c36-15 / die-01
                                                                    :ARG1 (c36-2 / they)))
                                   :op2 (c36-6 / truth-value
                                               :polarity-of (c36-12 / amr-unknown)))
                     :polarity -)
        :snt3 (c36-10 / appall-01
                      :degree (c36-1 / absolute)))

# ::snt no help Americans first!
# ::tokens ["no", "help", "Americans", "first", "!"]
# ::lemmas ["no", "help", "Americans", "first", "!"]
(c37-3 / help-01
       :ARG0 (c37-0 / person
                    :mod (c37-4 / country
                                :name (c37-1 / name
                                             :op1 "America")))
       :ord (c37-2 / ordinal-entity
                   :value 1)
       :polarity -)

# ::snt Thanks for supporting these families as they seek safety.
# ::tokens ["Thanks", "for", "supporting", "these", "families", "as", "they", "seek", "safety", "."]
# ::lemmas ["thank", "for", "support", "these", "family", "as", "they", "seek", "safety", "."]
(c38-1 / thank-01
       :ARG2 (c38-3 / support-01
                    :ARG1 (c38-5 / family
                                 :mod (c38-2 / this))
                    :time (c38-0 / seek-01
                                 :ARG0 c38-5
                                 :ARG1 (c38-4 / safe-01
                                              :ARG1 c38-5))))
