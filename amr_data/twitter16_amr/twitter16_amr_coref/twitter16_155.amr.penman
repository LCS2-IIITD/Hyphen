# ::snt Fake
# ::tokens ["Fake"]
# ::lemmas ["fake"]
(c1-0 / fake-02)

# ::snt THIS IS SO WRONG WHAT THE FUCK
# ::tokens ["THIS", "IS", "SO", "WRONG", "WHAT", "THE", "FUCK"]
# ::lemmas ["this", "be", "so", "wrong", "what", "the", "FUCK"]
(c2-3 / wrong-04
      :ARG1 (c2-1 / this)
      :degree (c2-2 / so)
      :mod (c2-0 / amr-unknown
                 :mod (c2-4 / fuck)))

# ::snt just awful
# ::tokens ["just", "awful"]
# ::lemmas ["just", "awful"]
(c3-0 / awful
      :mod (c3-1 / just))

# ::snt SADLY SAME HA
# ::tokens ["SADLY", "SAME", "HA"]
# ::lemmas ["SADLY", "same", "ha"]
(c4-2 / same-01
      :ARG2 (c4-1 / ha)
      :degree (c4-0 / stark))

# ::snt I FAIL AT LIFE BRB
# ::tokens ["I", "FAIL", "AT", "LIFE", "BRB"]
# ::lemmas ["i", "fail", "at", "life", "BRB"]
(c5-5 / fail-01
      :ARG1 (c5-0 / i)
      :ARG2 (c5-4 / life)
      :ARG1-of (c5-1 / say-01
                     :ARG2 (c5-2 / person
                                 :name (c5-3 / name
                                             :op1 "Brav"))))

# ::snt I WAS LIKE TF WHAT
# ::tokens ["I", "WAS", "LIKE", "TF", "WHAT"]
# ::lemmas ["i", "be", "like", "TF", "what"]
(c6-2 / resemble-01
      :ARG1 (c6-1 / i)
      :ARG2 (c6-0 / thing
                  :name (c6-3 / name
                              :op1 "TF")))

# ::snt WRONG ONE
# ::tokens ["WRONG", "ONE"]
# ::lemmas ["wrong", "ONE"]
(c7-0 / wrong-04
      :ARG1 (c7-1 / person))

# ::snt WTF
# ::tokens ["WTF"]
# ::lemmas ["WTF"]
(c8-0 / amr-unknown
      :mod (c8-1 / fuck
                 :mode expressive))

# ::snt apparently you're speaking in Polish
# ::tokens ["apparently", "you", "'re", "speaking", "in", "Polish"]
# ::lemmas ["apparently", "you", "be", "speak", "in", "Polish"]
(c9-2 / speak-01
      :ARG0 (c9-1 / you)
      :ARG3 (c9-4 / language
                  :name (c9-3 / name
                              :op1 "Poland"))
      :ARG1-of (c9-0 / appear-02))

# ::snt MY RECENT TWEET JAJC
# ::tokens ["MY", "RECENT", "TWEET", "JAJC"]
# ::lemmas ["my", "recent", "TWEET", "jajc"]
(c10-3 / say-01
       :ARG0 (c10-2 / i)
       :ARG1 (c10-0 / tear-01
                    :ARG0 c10-2
                    :ARG1 (c10-4 / person
                                 :name (c10-5 / name
                                              :op1 "JAJC"))
                    :ARG1-of (c10-1 / record-01))
       :ARG2 c10-4)

# ::snt BRUH OOBFJAIDBA
# ::tokens ["BRUH", "OOBFJAIDBA"]
# ::lemmas ["BRUH", "oobfjaidba"]
(c11-0 / person
       :name (c11-1 / name
                    :op1 "Barack"
                    :op2 "Obama"))

# ::snt IM CRYIWND
# ::tokens ["IM", "CRYIWND"]
# ::lemmas ["IM", "CRYIWND"]
(c12-0 / person
       :name (c12-1 / name
                    :op1 "IM"
                    :op2 "CRYIWND"))

# ::snt Some idiot on facebook and apparently about people on twitter
# ::tokens ["Some", "idiot", "on", "facebook", "and", "apparently", "about", "people", "on", "twitter"]
# ::lemmas ["some", "idiot", "on", "facebook", "and", "apparently", "about", "people", "on", "twitter"]
(c13-0 / and
       :op1 (c13-4 / idiot
                   :mod (c13-5 / some)
                   :location (c13-6 / publication
                                    :name (c13-7 / name
                                                 :op1 "Facebook")))
       :op2 (c13-3 / person
                   :medium (c13-1 / publication
                                  :name (c13-2 / name
                                               :op1 "Twitter"))
                   :ARG1-of (c13-8 / appear-02)))

# ::snt The amount of people believing this... Not even Seaworld could try to spin something like this positively
# ::tokens ["The", "amount", "of", "people", "believing", "this", "...", "Not", "even", "Seaworld", "could", "try", "to", "spin", "something", "like", "this", "positively"]
# ::lemmas ["the", "amount", "of", "people", "believe", "this", "...", "not", "even", "Seaworld", "could", "try", "to", "spin", "something", "like", "this", "positively"]
(c14-10 / multi-sentence
        :snt1 (c14-0 / amount
                     :quant-of (c14-13 / person
                                       :ARG0-of (c14-6 / believe-01
                                                       :ARG1 (c14-3 / this))))
        :snt2 (c14-11 / possible-01
                      :ARG1 (c14-7 / try-01
                                   :ARG0 (c14-9 / broadcast-program
                                                :name (c14-14 / name
                                                              :op1 "Seaworld")
                                                :mod (c14-5 / even))
                                   :ARG1 (c14-12 / spin-03
                                                 :ARG0 c14-9
                                                 :ARG1 (c14-1 / something
                                                              :ARG1-of (c14-4 / resemble-01
                                                                              :ARG2 (c14-8 / this)))
                                                 :manner (c14-2 / positive)))
                      :polarity -))

# ::snt no.
# ::tokens ["no", "."]
# ::lemmas ["no", "."]
(c15-0 / no)

# ::snt IM SO SORRY BUT I HAD TO TAG YOU IN THIS
# ::tokens ["IM", "SO", "SORRY", "BUT", "I", "HAD", "TO", "TAG", "YOU", "IN", "THIS"]
# ::lemmas ["IM", "SO", "SORRY", "but", "i", "have", "to", "tag", "you", "in", "this"]
(c16-7 / contrast-01
       :ARG1 (c16-5 / sorry-01
                    :ARG1 (c16-4 / i)
                    :degree (c16-0 / so))
       :ARG2 (c16-6 / obligate-01
                    :ARG1 c16-4
                    :ARG2 (c16-1 / tag-01
                                 :ARG0 c16-4
                                 :ARG1 (c16-3 / you)
                                 :location (c16-2 / this))))

# ::snt SICK!
# ::tokens ["SICK", "!"]
# ::lemmas ["SICK", "!"]
(c17-0 / sick-02
       :mode expressive)

# ::snt everyone it's real why else are you police making arrests for animal cruelty, American news channels have said it's real!!!!!!!!!!
# ::tokens ["everyone", "it", "'s", "real", "why", "else", "are", "you", "police", "making", "arrests", "for", "animal", "cruelty", ",", "American", "news", "channels", "have", "said", "it", "'s", "real", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["everyone", "it", "be", "real", "why", "else", "be", "you", "police", "make", "arrest", "for", "animal", "cruelty", ",", "American", "news", "channel", "have", "say", "it", "be", "real", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]
(c18-8 / multi-sentence
       :snt1 (c18-3 / real-04
                    :ARG1 (c18-0 / arrest-01
                                 :ARG0 (c18-13 / police
                                               :mod (c18-16 / country
                                                            :name (c18-14 / name
                                                                          :op1 "America")))
                                 :ARG1 (c18-4 / everyone)
                                 :ARG2 (c18-9 / cruelty
                                              :mod (c18-11 / animal)))
                    :ARG1-of (c18-5 / cause-01
                                    :ARG0 (c18-2 / amr-unknown
                                                 :mod (c18-1 / else))))
       :snt2 (c18-12 / say-01
                     :ARG0 (c18-6 / channel
                                  :mod (c18-7 / news)
                                  :mod c18-16)
                     :ARG1 (c18-10 / real-04
                                   :ARG1 (c18-15 / it))))

# ::snt its satire
# ::tokens ["its", "satire"]
# ::lemmas ["its", "satire"]
(c19-1 / satire
       :domain (c19-0 / it))

# ::snt its satire
# ::tokens ["its", "satire"]
# ::lemmas ["its", "satire"]
(c20-1 / satire
       :domain (c20-0 / it))

# ::snt oh it's not real? In confused
# ::tokens ["oh", "it", "'s", "not", "real", "?", "In", "confused"]
# ::lemmas ["oh", "it", "be", "not", "real", "?", "in", "confuse"]
(c21-2 / multi-sentence
       :snt1 (c21-1 / real-04
                    :ARG1 (c21-3 / it)
                    :polarity (c21-0 / amr-unknown)
                    :mod (c21-4 / oh
                                :mode expressive)
                    :polarity -)
       :snt2 (c21-6 / confuse-01
                    :ARG1 (c21-5 / i)))

# ::snt this is animal abuse
# ::tokens ["this", "is", "animal", "abuse"]
# ::lemmas ["this", "be", "animal", "abuse"]
(c22-0 / abuse-01
       :ARG1 (c22-2 / animal)
       :domain (c22-1 / this))

# ::snt No, not really. It's a joke to highlight shoddy treatment of Orcas.
# ::tokens ["No", ",", "not", "really", ".", "It", "'s", "a", "joke", "to", "highlight", "shoddy", "treatment", "of", "Orcas", "."]
# ::lemmas ["no", ",", "not", "really", ".", "it", "be", "a", "joke", "to", "highlight", "shoddy", "treatment", "of", "Orcas", "."]
(c23-4 / multi-sentence
       :snt1 (c23-8 / have-polarity-91
                    :ARG1-of (c23-2 / real-04)
                    :ARG2 -)
       :snt2 (c23-3 / joke-01
                    :ARG2 (c23-5 / highlight-01
                                 :ARG1 (c23-1 / treat-01
                                              :ARG1 (c23-0 / animal
                                                           :name (c23-7 / name
                                                                        :op1 "Orcs"))
                                              :mod (c23-6 / shoddy)))))

# ::snt It's called "satire," look it up, they agree with you and are shaming Sea World killer whale shows
# ::tokens ["It", "'s", "called", "\"", "satire", ",", "\"", "look", "it", "up", ",", "they", "agree", "with", "you", "and", "are", "shaming", "Sea", "World", "killer", "whale", "shows"]
# ::lemmas ["it", "be", "call", "\"", "satire", ",", "\"", "look", "it", "up", ",", "they", "agree", "with", "you", "and", "be", "shame", "Sea", "World", "killer", "whale", "show"]
(c24-4 / multi-sentence
       :snt1 (c24-10 / call-01
                     :ARG1 (c24-6 / it)
                     :ARG2 (c24-7 / satire))
       :snt2 (c24-9 / look-up-05
                    :ARG0 (c24-3 / you)
                    :ARG1 c24-6
                    :ARG1-of (c24-5 / cause-01
                                    :ARG0 (c24-0 / and
                                                 :op1 (c24-8 / agree-01
                                                             :ARG0 (c24-2 / they)
                                                             :ARG2 c24-3)
                                                 :op2 (c24-1 / shame-01
                                                             :ARG0 c24-2
                                                             :ARG1 c24-3)))
                    :mode imperative))

# ::snt ty for letting me know
# ::tokens ["ty", "for", "letting", "me", "know"]
# ::lemmas ["ty", "for", "let", "i", "know"]
(c27-2 / thank-01
       :ARG0 (c27-0 / i)
       :ARG1 (c27-1 / you)
       :ARG2 (c27-3 / let-know-07
                    :ARG0 c27-1
                    :ARG1 c27-0))

# ::snt I wouldn't put this past
# ::tokens ["I", "would", "n't", "put", "this", "past"]
# ::lemmas ["i", "would", "not", "put", "this", "past"]
(c28-3 / put-01
       :ARG0 (c28-2 / i)
       :ARG1 (c28-1 / past
                    :mod (c28-0 / this))
       :polarity -)

# ::snt - I checked after I tweeted - "The Onion" writes fake articles - Sorry! Ele abuse is real! Not funny!
# ::tokens ["-", "I", "checked", "after", "I", "tweeted", "-", "\"", "The", "Onion", "\"", "writes", "fake", "articles", "-", "Sorry", "!", "Ele", "abuse", "is", "real", "!", "Not", "funny", "!"]
# ::lemmas ["-", "i", "check", "after", "i", "tweet", "-", "\"", "The", "Onion", "\"", "write", "fake", "article", "-", "sorry", "!", "Ele", "abuse", "be", "real", "!", "not", "funny", "!"]
(c29-15 / check-01
        :ARG0 (c29-8 / i)
        :time (c29-0 / after
                     :op1 (c29-1 / tweet-02
                                 :ARG0 c29-8
                                 :ARG1 (c29-13 / write-01
                                               :ARG0 (c29-10 / publication
                                                             :name (c29-11 / name
                                                                           :op1 "The"
                                                                           :op2 "Onion"))
                                               :ARG1 (c29-9 / article
                                                            :ARG1-of (c29-14 / fake-02)))))
        :ARG1-of (c29-6 / cause-01
                        :ARG0 (c29-2 / and
                                     :op1 (c29-12 / sorry-01
                                                  :ARG1 c29-8)
                                     :op2 (c29-3 / real-04
                                                 :ARG1 (c29-7 / abuse-01
                                                              :mod (c29-4 / elephant)))
                                     :op3 (c29-5 / funny
                                                 :polarity -))))

# ::snt honestly wouldn't surprise me tbh
# ::tokens ["honestly", "would", "n't", "surprise", "me", "tbh"]
# ::lemmas ["honestly", "would", "not", "surprise", "i", "tbh"]
(c30-2 / surprise-01
       :ARG0 (c30-3 / event)
       :ARG1 (c30-1 / i)
       :ARG1-of (c30-0 / honest-01
                       :ARG1 c30-2)
       :polarity -)

# ::snt horrible image, despite it being fake. Though a point well made.
# ::tokens ["horrible", "image", ",", "despite", "it", "being", "fake", ".", "Though", "a", "point", "well", "made", "."]
# ::lemmas ["horrible", "image", ",", "despite", "it", "be", "fake", ".", "though", "a", "point", "well", "make", "."]
(c32-0 / multi-sentence
       :snt1 (c32-4 / image
                    :mod (c32-3 / horrible)
                    :concession (c32-6 / fake-02
                                       :ARG1 (c32-7 / it)))
       :snt2 (c32-2 / have-concession-91
                    :ARG2 (c32-5 / point-04
                                 :ARG1-of (c32-1 / good-02))))

# ::snt can sea world get any more evil?!?!?
# ::tokens ["can", "sea", "world", "get", "any", "more", "evil", "?", "!", "?", "!", "?"]
# ::lemmas ["can", "sea", "world", "get", "any", "more", "evil", "?", "!", "?", "!", "?"]
(c33-5 / possible-01
       :polarity (c33-0 / amr-unknown)
       :ARG1 (c33-2 / get-03
                    :ARG1 (c33-6 / world
                                 :mod (c33-4 / sea))
                    :ARG2 (c33-1 / evil
                                 :mod (c33-3 / more
                                             :mod (c33-7 / any)))))

# ::snt world is horrible for doing this!! Disgusting!!
# ::tokens ["world", "is", "horrible", "for", "doing", "this", "!", "!", "Disgusting", "!", "!"]
# ::lemmas ["world", "be", "horrible", "for", "do", "this", "!", "!", "disgusting", "!", "!"]
(c34-2 / multi-sentence
       :snt1 (c34-5 / horrible
                    :domain (c34-3 / world)
                    :ARG1-of (c34-4 / cause-01
                                    :ARG0 (c34-6 / do-02
                                                 :ARG0 c34-3
                                                 :ARG1 (c34-0 / this))))
       :snt2 (c34-1 / disgust-01))

# ::snt Elephants don't drown.
# ::tokens ["Elephants", "do", "n't", "drown", "."]
# ::lemmas ["elephant", "do", "not", "drown", "."]
(c35-0 / drown-01
       :ARG1 (c35-1 / Elephant)
       :polarity -)

# ::snt Oh dear, Onion...don't give them any damn ideas
# ::tokens ["Oh", "dear", ",", "Onion", "...", "don't", "give", "them", "any", "damn", "ideas"]
# ::lemmas ["oh", "dear", ",", "onion", "...", "don't", "give", "they", "any", "damn", "idea"]
(c36-5 / say-01
       :ARG0 (c36-4 / i)
       :ARG1 (c36-3 / give-01
                    :ARG0 (c36-6 / person
                                 :name (c36-7 / name
                                              :op1 "Onion"))
                    :ARG1 (c36-9 / idea
                                 :mod (c36-0 / any)
                                 :mod (c36-10 / damn))
                    :ARG2 (c36-1 / they)
                    :mode imperative
                    :polarity -)
       :ARG2 c36-6
       :mod (c36-2 / dear
                   :mod (c36-8 / oh)))

# ::snt i don't find this at all funny
# ::tokens ["i", "do", "n't", "find", "this", "at", "all", "funny"]
# ::lemmas ["i", "do", "not", "find", "this", "at", "all", "funny"]
(c37-4 / find-02
       :ARG0 (c37-3 / i)
       :ARG1 (c37-2 / funny-02
                    :ARG1 (c37-1 / this)
                    :degree (c37-0 / at-all))
       :polarity -)

# ::snt im*
# ::tokens ["i", "m", "*"]
# ::lemmas ["i", "m", "*"]
(c38-0 / i)

# ::snt Bruh in crying . I love when people first encounter
# ::tokens ["Bruh", "in", "crying", ".", "I", "love", "when", "people", "first", "encounter"]
# ::lemmas ["Bruh", "in", "cry", ".", "i", "love", "when", "people", "first", "encounter"]
(c39-2 / multi-sentence
       :snt1 (c39-1 / bruh
                    :manner-of (c39-7 / cry-02)
                    :mode expressive)
       :snt2 (c39-6 / love-01
                    :ARG0 (c39-3 / i)
                    :time (c39-0 / encounter-01
                                 :ARG0 (c39-4 / person)
                                 :ord (c39-5 / ordinal-entity
                                             :value 1))))

# ::snt ohh lmao I was like no way ahahahha
# ::tokens ["ohh", "lmao", "I", "was", "like", "no", "way", "ahahahha"]
# ::lemmas ["ohh", "lmao", "i", "be", "like", "no", "way", "ahahahha"]
(c40-0 / and
       :op1 (c40-2 / resemble-01
                   :ARG1 (c40-3 / i)
                   :ARG2 (c40-4 / way
                                :polarity -))
       :op2 (c40-5 / laugh-01
                   :ARG0 c40-3
                   :manner (c40-1 / loud)
                   :mode expressive)
       :op3 (c40-6 / ha
                   :mode expressive))

# ::snt lmao, it's the onion , nothing is true
# ::tokens ["lmao", ",", "it", "'s", "the", "onion", ",", "nothing", "is", "true"]
# ::lemmas ["lmao", ",", "it", "be", "the", "onion", ",", "nothing", "be", "true"]
(c41-0 / and
       :op1 (c41-5 / onion
                   :domain (c41-3 / it))
       :op2 (c41-1 / true-01
                   :ARG1 (c41-4 / nothing)
                   :polarity -)
       :mod (c41-6 / laugh-01
                   :ARG0 (c41-7 / i)
                   :manner (c41-2 / loud)
                   :mode expressive))

# ::snt not true lol my sister works there
# ::tokens ["not", "true", "lol", "my", "sister", "works", "there"]
# ::lemmas ["not", "true", "lol", "my", "sister", "work", "there"]
(c42-0 / and
       :op1 (c42-1 / true-01
                   :polarity -)
       :op2 (c42-7 / work-01
                   :ARG0 (c42-6 / person
                                :ARG0-of (c42-9 / have-rel-role-91
                                                :ARG1 (c42-4 / i)
                                                :ARG2 (c42-5 / sister)))
                   :ARG2 (c42-3 / there)
                   :ARG2-of (c42-8 / laugh-01
                                   :ARG0 c42-4
                                   :manner (c42-2 / loud)
                                   :mode expressive)))

# ::snt Sea World would still find a way to say that the elephants are well treated and healthy.
# ::tokens ["Sea", "World", "would", "still", "find", "a", "way", "to", "say", "that", "the", "elephants", "are", "well", "treated", "and", "healthy", "."]
# ::lemmas ["Sea", "World", "would", "still", "find", "a", "way", "to", "say", "that", "the", "elephant", "be", "well", "treat", "and", "healthy", "."]
(c43-9 / find-01
       :ARG0 (c43-7 / organization
                    :name (c43-6 / name
                                 :op1 "Sea"
                                 :op2 "World"))
       :ARG1 (c43-8 / way
                    :manner-of (c43-5 / say-01
                                      :ARG0 c43-7
                                      :ARG1 (c43-0 / and
                                                   :op1 (c43-2 / treat-03
                                                               :ARG1 (c43-3 / elephant)
                                                               :ARG1-of (c43-4 / well-09))
                                                   :op2 (c43-10 / healthy
                                                                :domain c43-3))))
       :mod (c43-1 / still))

# ::snt FOR GOD SO LOVED THE WORLD THAT HE GAVE HIS ONLY BEGOTTEN SON THIS IS THE MOST SICK THING I EVER SEEN AN TO TAKE A CHILD WHY
# ::tokens ["FOR", "GOD", "SO", "LOVED", "THE", "WORLD", "THAT", "HE", "GAVE", "HIS", "ONLY", "BEGOTTEN", "SON", "THIS", "IS", "THE", "MOST", "SICK", "THING", "I", "EVER", "SEEN", "AN", "TO", "TAKE", "A", "CHILD", "WHY"]
# ::lemmas ["for", "GOD", "so", "LOVED", "the", "world", "that", "he", "give", "his", "only", "BEGOTTEN", "son", "this", "be", "the", "most", "sick", "thing", "i", "ever", "see", "an", "to", "take", "a", "CHILD", "why"]
(c44-16 / cause-01
        :ARG0 (c44-14 / love-01
                      :ARG0 (c44-11 / god)
                      :ARG1 (c44-6 / world)
                      :degree (c44-13 / so)
                      :ARG0-of (c44-17 / cause-01
                                       :ARG1 (c44-12 / give-01
                                                     :ARG0 c44-11
                                                     :ARG1 (c44-8 / life
                                                                  :poss c44-11
                                                                  :ARG1-of (c44-15 / hold-01
                                                                                   :ARG0 c44-11)
                                                                  :mod (c44-22 / only))
                                                     :ARG2 (c44-19 / person
                                                                   :ARG0-of (c44-18 / have-rel-role-91
                                                                                    :ARG1 c44-11
                                                                                    :ARG2 (c44-10 / child)))
                                                     :time (c44-20 / ever)
                                                     :ARG0-of (c44-9 / cause-01
                                                                     :ARG1 (c44-7 / feel-01
                                                                                  :ARG0 (c44-4 / i)
                                                                                  :ARG1 (c44-2 / thing
                                                                                               :ARG0-of (c44-0 / cause-01
                                                                                                               :ARG1 (c44-3 / take-01
                                                                                                                            :ARG0 c44-4
                                                                                                                            :ARG1 c44-10))))
                                                                     :ARG2-of (c44-5 / have-degree-91
                                                                                     :ARG1 c44-2
                                                                                     :ARG3 (c44-21 / most)
                                                                                     :ARG1-of c44-16)))))
        :ARG1 c44-12
        :ARG2 (c44-1 / sick-02
                     :ARG1 c44-2)
        :ARG3 c44-21)

# ::snt yes I can imagine him reading the headline
# ::tokens ["yes", "I", "can", "imagine", "him", "reading", "the", "headline"]
# ::lemmas ["yes", "i", "can", "imagine", "he", "read", "the", "headline"]
(c46-4 / possible-01
       :ARG1 (c46-3 / imagine-01
                    :ARG0 (c46-1 / i)
                    :ARG1 (c46-0 / read-01
                                 :ARG0 (c46-5 / he)
                                 :ARG1 (c46-2 / headline))))

# ::snt Reminds me of Chris Morris
# ::tokens ["Reminds", "me", "of", "Chris", "Morris"]
# ::lemmas ["remind", "i", "of", "Chris", "Morris"]
(c47-2 / remind-01
       :ARG1 (c47-1 / person
                    :name (c47-3 / name
                                 :op1 "Chris"
                                 :op2 "Morris"))
       :ARG2 (c47-0 / i))

# ::snt nah it's a fake article... The Onion is parody news (but, it's still funny)
# ::tokens ["nah", "it", "'s", "a", "fake", "article", "...", "The", "Onion", "is", "parody", "news", "(", "but", ",", "it", "'s", "still", "funny", ")"]
# ::lemmas ["nah", "it", "be", "a", "fake", "article", "...", "the", "onion", "be", "parody", "news", "(", "but", ",", "it", "be", "still", "funny", ")"]
(c48-4 / multi-sentence
       :snt1 (c48-0 / article
                    :ARG1-of (c48-9 / fake-02)
                    :domain (c48-5 / it)
                    :mod (c48-7 / nah))
       :snt2 (c48-10 / have-concession-91
                     :ARG1 (c48-1 / funny-02
                                  :ARG1 (c48-2 / broadcast-program
                                               :name (c48-3 / name
                                                            :op1 "The"
                                                            :op2 "Onion"))
                                  :mod (c48-6 / still))
                     :ARG2 (c48-8 / parody-01
                                  :ARG1 c48-2)))

# ::snt what the? This is allowed? Is anyone accountable? Probably not.
# ::tokens ["what", "the", "?", "This", "is", "allowed", "?", "Is", "anyone", "accountable", "?", "Probably", "not", "."]
# ::lemmas ["what", "the", "?", "this", "be", "allow", "?", "be", "anyone", "accountable", "?", "probably", "not", "."]
(c49-4 / multi-sentence
       :snt1 (c49-0 / amr-unknown)
       :snt2 (c49-8 / allow-01
                    :ARG1 (c49-2 / this))
       :snt3 (c49-3 / accountable-02
                    :polarity (c49-5 / amr-unknown)
                    :ARG0 (c49-1 / anyone))
       :snt4 (c49-6 / probable
                    :domain (c49-7 / have-polarity-91
                                   :ARG2 -)))

# ::snt Let's see how many idiots start rallying against Sea World for this story.
# ::tokens ["Let", "'s", "see", "how", "many", "idiots", "start", "rallying", "against", "Sea", "World", "for", "this", "story", "."]
# ::lemmas ["let", "us", "see", "how", "many", "idiot", "start", "rally", "against", "Sea", "World", "for", "this", "story", "."]
(c50-6 / see-01
       :ARG0 (c50-10 / we)
       :ARG1 (c50-7 / number
                    :quant-of (c50-5 / idiot
                                     :ARG0-of (c50-0 / start-01
                                                     :ARG1 (c50-3 / rally-01
                                                                  :ARG1 c50-5
                                                                  :ARG2 (c50-1 / against
                                                                               :op1 (c50-9 / organization
                                                                                           :name (c50-4 / name
                                                                                                        :op1 "Sea"
                                                                                                        :op2 "World")))
                                                                  :purpose (c50-8 / story
                                                                                  :mod (c50-2 / this))))))
       :mode imperative)
