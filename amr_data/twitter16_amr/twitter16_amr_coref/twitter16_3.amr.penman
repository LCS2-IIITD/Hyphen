# ::snt BernieBernieBernie
# ::tokens ["BernieBernieBernie"]
# ::lemmas ["BernieBernieBernie"]
(c1-0 / person
      :name (c1-1 / name
                  :op1 "BernieBernie"))

# ::snt What BS!
# ::tokens ["What", "BS", "!"]
# ::lemmas ["what", "BS", "!"]
(c2-0 / bullshit-01
      :degree (c2-1 / so)
      :mode expressive)

# ::snt i tend to be republican myself, but if Bernie is gonna be a front runner i will be satisfied w that
# ::tokens ["i", "tend", "to", "be", "republican", "myself", ",", "but", "if", "Bernie", "is", "gon", "na", "be", "a", "front", "runner", "i", "will", "be", "satisfied", "w", "that"]
# ::lemmas ["i", "tend", "to", "be", "republican", "myself", ",", "but", "if", "Bernie", "be", "going", "to", "be", "a", "front", "runner", "i", "will", "be", "satisfied", "w", "that"]
(c3-8 / contrast-01
      :ARG1 (c3-0 / tend-02
                  :ARG1 (c3-3 / i)
                  :ARG2 (c3-1 / republican
                              :domain c3-3))
      :ARG2 (c3-4 / satisfy-01
                  :ARG0 (c3-2 / run-02
                              :ARG0 (c3-5 / person
                                          :name (c3-6 / name
                                                      :op1 "Bernie"))
                              :mod (c3-7 / front))
                  :ARG1 c3-3
                  :condition c3-2))

# ::snt good for him.. Gives him hope not to drop out
# ::tokens ["good", "for", "him", "..", "Gives", "him", "hope", "not", "to", "drop", "out"]
# ::lemmas ["good", "for", "he", "..", "give", "he", "hope", "not", "to", "drop", "out"]
(c4-1 / multi-sentence
      :snt1 (c4-2 / good-04
                  :ARG2 (c4-5 / he))
      :snt2 (c4-0 / give-01
                  :ARG1 (c4-3 / hope-01
                              :ARG0 (c4-4 / he)
                              :ARG1 (c4-6 / drop-out-04
                                          :ARG0 c4-4
                                          :polarity -))
                  :ARG2 c4-4))

# ::snt I'm going to start my own Breaking Twitter account &amp; post random misinformation as well.
# ::tokens ["I", "'m", "going", "to", "start", "my", "own", "Breaking", "Twitter", "account", "&", "amp", ";", "post", "random", "misinformation", "as", "well", "."]
# ::lemmas ["i", "be", "go", "to", "start", "my", "own", "Breaking", "Twitter", "account", "&", "amp", ";", "post", "random", "misinformation", "as", "well", "."]
(c5-0 / and
      :op1 (c5-6 / start-01
                 :ARG0 (c5-5 / i)
                 :ARG1 (c5-7 / publication
                             :name (c5-8 / name
                                         :op1 "Breaking"
                                         :op2 "Twitter")
                             :poss c5-5))
      :op2 (c5-3 / post-01
                 :ARG0 c5-5
                 :ARG1 (c5-1 / thing
                             :ARG2-of (c5-4 / misinform-01)
                             :mod (c5-2 / random))
                 :mod (c5-9 / as-well)))

# ::snt the thing I can't trust about is who is he--what party does he truly support?
# ::tokens ["the", "thing", "I", "ca", "n't", "trust", "about", "is", "who", "is", "he", "--", "what", "party", "does", "he", "truly", "support", "?"]
# ::lemmas ["the", "thing", "i", "can", "not", "trust", "about", "be", "who", "be", "he", "--", "what", "party", "do", "he", "truly", "support", "?"]
(c6-5 / multi-sentence
      :snt1 (c6-8 / possible-01
                  :ARG1 (c6-2 / trust-02
                              :ARG0 (c6-6 / i)
                              :ARG1 (c6-4 / person
                                          :domain (c6-9 / he)))
                  :polarity -)
      :snt2 (c6-7 / support-01
                  :ARG0 c6-9
                  :ARG1 (c6-1 / party
                              :mod (c6-0 / amr-unknown))
                  :ARG1-of (c6-3 / true-01)))

# ::snt . I'm still waiting for link and cross tabs, nobody has provided yet
# ::tokens [".", "I", "'m", "still", "waiting", "for", "link", "and", "cross", "tabs", ",", "nobody", "has", "provided", "yet"]
# ::lemmas [".", "i", "be", "still", "wait", "for", "link", "and", "cross", "tab", ",", "nobody", "have", "provide", "yet"]
(c7-10 / wait-01
       :ARG1 (c7-6 / i)
       :ARG2 (c7-0 / and
                   :op1 (c7-1 / thing
                              :ARG3-of (c7-11 / link-01))
                   :op2 (c7-2 / thing
                              :ARG3-of (c7-12 / cross-01
                                              :ARG1 (c7-3 / tab))))
       :mod (c7-7 / still)
       :ARG1-of (c7-5 / cause-01
                      :ARG0 (c7-8 / provide-01
                                  :ARG0 (c7-9 / nobody)
                                  :time (c7-4 / yet)
                                  :polarity -)))

# ::snt exactly. Just read another real poll with HRC leading all the men.
# ::tokens ["exactly", ".", "Just", "read", "another", "real", "poll", "with", "HRC", "leading", "all", "the", "men", "."]
# ::lemmas ["exactly", ".", "just", "read", "another", "real", "poll", "with", "HRC", "lead", "all", "the", "man", "."]
(c9-5 / multi-sentence
      :snt1 (c9-2 / exact)
      :snt2 (c9-1 / read-01
                  :ARG0 (c9-8 / i)
                  :ARG1 (c9-9 / poll-01
                              :ARG1-of (c9-7 / real-04)
                              :mod (c9-0 / another)
                              :accompanier (c9-11 / lead-02
                                                  :ARG0 (c9-6 / person
                                                              :name (c9-10 / name
                                                                           :op1 "HRC"))
                                                  :ARG1 (c9-3 / man
                                                              :mod (c9-12 / all))))
                  :time (c9-4 / just)))

# ::snt not what I just read.
# ::tokens ["not", "what", "I", "just", "read", "."]
# ::lemmas ["not", "what", "i", "just", "read", "."]
(c10-1 / thing
       :ARG1-of (c10-2 / read-01
                       :ARG0 (c10-0 / i)
                       :time (c10-3 / just))
       :polarity -)

# ::snt so % PRO commie......
# ::tokens ["so", "%", "PRO", "commie", "......"]
# ::lemmas ["so", "%", "PRO", "commie", "......"]
(c12-2 / percentage-entity
       :value (c12-1 / so
                     :quant-of (c12-0 / person
                                      :mod (c12-4 / conservative)
                                      :ARG0-of (c12-3 / have-org-role-91))))

# ::snt BS where is that poll from? Provide a link
# ::tokens ["BS", "where", "is", "that", "poll", "from", "?", "Provide", "a", "link"]
# ::lemmas ["BS", "where", "be", "that", "poll", "from", "?", "provide", "a", "link"]
(c13-3 / multi-sentence
       :snt1 (c13-1 / bullshit-01
                    :source (c13-0 / amr-unknown))
       :snt2 (c13-4 / provide-01
                    :ARG0 (c13-2 / you)
                    :ARG1 (c13-5 / link)
                    :mode imperative))

# ::snt let's go Sanders
# ::tokens ["let", "'s", "go", "Sanders"]
# ::lemmas ["let", "us", "go", "sander"]
(c14-2 / say-01
       :ARG0 (c14-1 / i)
       :ARG1 (c14-0 / go-01
                    :ARG1 (c14-3 / person
                                 :name (c14-4 / name
                                              :op1 "Sanders")
                                 :ARG2-of c14-2)
                    :mode imperative))
