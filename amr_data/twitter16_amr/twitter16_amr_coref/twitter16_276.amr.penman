# ::snt Who knows with them? Be prepared. In my opinion, they are very likely to ignore the holiday.
# ::tokens ["Who", "knows", "with", "them", "?", "Be", "prepared", ".", "In", "my", "opinion", ",", "they", "are", "very", "likely", "to", "ignore", "the", "holiday", "."]
# ::lemmas ["who", "know", "with", "they", "?", "be", "prepare", ".", "in", "my", "opinion", ",", "they", "be", "very", "likely", "to", "ignore", "the", "holiday", "."]
(c1-5 / multi-sentence
      :snt1 (c1-2 / know-01
                  :ARG0 (c1-0 / amr-unknown)
                  :topic (c1-1 / they))
      :snt2 (c1-8 / prepare-02
                  :ARG0 (c1-4 / you)
                  :mode imperative)
      :snt3 (c1-9 / opine-01
                  :ARG0 (c1-7 / i)
                  :ARG1 (c1-11 / likely-01
                               :ARG1 (c1-12 / ignore-01
                                            :ARG0 (c1-3 / they)
                                            :ARG1 (c1-6 / holiday))
                               :degree (c1-10 / very))))

# ::snt don't like this country get the fuck out. There are other free countries out there
# ::tokens ["do", "n't", "like", "this", "country", "get", "the", "fuck", "out", ".", "There", "are", "other", "free", "countries", "out", "there"]
# ::lemmas ["do", "not", "like", "this", "country", "get", "the", "fuck", "out", ".", "there", "be", "other", "free", "country", "out", "there"]
(c2-5 / multi-sentence
      :snt1 (c2-2 / dislike-01
                  :ARG0 (c2-7 / i)
                  :ARG1 (c2-4 / get-05
                              :ARG1 (c2-10 / country
                                           :mod (c2-0 / this))
                              :ARG2 (c2-8 / out-there)
                              :mod (c2-9 / fuck
                                         :mode expressive)))
      :snt2 (c2-6 / country
                  :ARG1-of (c2-1 / free-04)
                  :mod (c2-3 / other)
                  :location c2-8))

# ::snt if it's not your problem stop complaining about it
# ::tokens ["if", "it", "'s", "not", "your", "problem", "stop", "complaining", "about", "it"]
# ::lemmas ["if", "it", "be", "not", "your", "problem", "stop", "complain", "about", "it"]
(c3-2 / stop-01
      :ARG0 (c3-1 / you)
      :ARG1 (c3-3 / complain-01
                  :ARG0 c3-1
                  :ARG1 (c3-0 / problem
                              :poss c3-1
                              :condition-of c3-2
                              :polarity -))
      :mode imperative)

# ::snt they can't afford to relocate, it's simple to follow, keep up hillbilly boy
# ::tokens ["they", "ca", "n't", "afford", "to", "relocate", ",", "it", "'s", "simple", "to", "follow", ",", "keep", "up", "hillbilly", "boy"]
# ::lemmas ["they", "can", "not", "afford", "to", "relocate", ",", "it", "be", "simple", "to", "follow", ",", "keep", "up", "hillbilly", "boy"]
(c4-5 / multi-sentence
      :snt1 (c4-7 / possible-01
                  :ARG1 (c4-0 / afford-01
                              :ARG0 (c4-1 / they)
                              :ARG1 (c4-2 / relocate-01
                                          :ARG1 c4-1))
                  :polarity -)
      :snt2 (c4-6 / simple-02
                  :ARG1 (c4-10 / and
                               :op1 (c4-8 / follow-02
                                          :ARG1 (c4-3 / boy
                                                      :mod (c4-9 / hillbilly)))
                               :op2 (c4-4 / keep-up-10
                                          :ARG1 c4-3))))

# ::snt We lost the war to own slaves and we're proud that we fought to own slaves.
# ::tokens ["We", "lost", "the", "war", "to", "own", "slaves", "and", "we", "'re", "proud", "that", "we", "fought", "to", "own", "slaves", "."]
# ::lemmas ["we", "lose", "the", "war", "to", "own", "slave", "and", "we", "be", "proud", "that", "we", "fight", "to", "own", "slave", "."]
(c5-0 / and
      :op1 (c5-7 / lose-03
                 :ARG0 (c5-6 / we)
                 :ARG1 (c5-1 / war)
                 :ARG2 (c5-5 / own-01
                             :ARG0 c5-6
                             :ARG1 (c5-3 / slave)))
      :op2 (c5-4 / pride-01
                 :ARG0 c5-6
                 :ARG2 (c5-8 / fight-01
                             :ARG0 c5-6
                             :ARG2 (c5-2 / own-01
                                         :ARG0 c5-6
                                         :ARG1 c5-3))))

# ::snt . way to steal tweet.
# ::tokens [".", "way", "to", "steal", "tweet", "."]
# ::lemmas [".", "way", "to", "steal", "tweet", "."]
(c6-1 / way
      :manner-of (c6-3 / steal-01
                       :ARG1 (c6-2 / thing
                                   :ARG1-of (c6-0 / tweet-01))))

# ::snt It should ALWAYS be, but you can bet your ass it wont be.
# ::tokens ["It", "should", "ALWAYS", "be", ",", "but", "you", "can", "bet", "your", "ass", "it", "wo", "nt", "be", "."]
# ::lemmas ["it", "should", "always", "be", ",", "but", "you", "can", "bet", "your", "ass", "it", "will", "not", "be", "."]
(c7-7 / contrast-01
      :ARG1 (c7-1 / recommend-01
                  :ARG1 (c7-4 / it)
                  :time (c7-0 / always))
      :ARG2 (c7-6 / possible-01
                  :ARG1 (c7-2 / bet-01
                              :ARG0 (c7-3 / you
                                          :part (c7-5 / ass
                                                      :ARG1-of c7-2))
                              :ARG2 c7-4)))

# ::snt If they can light up the White House like a rainbow for gay pride, it sure as hell ...
# ::tokens ["If", "they", "can", "light", "up", "the", "White", "House", "like", "a", "rainbow", "for", "gay", "pride", ",", "it", "sure", "as", "hell", "..."]
# ::lemmas ["if", "they", "can", "light", "up", "the", "White", "House", "like", "a", "rainbow", "for", "gay", "pride", ",", "it", "sure", "as", "hell", "..."]
(c8-12 / have-condition-91
       :ARG1 (c8-8 / sure-02
                   :degree (c8-0 / as-hell))
       :ARG2 (c8-9 / possible-01
                   :ARG1 (c8-11 / light-up-08
                                :ARG0 (c8-2 / they)
                                :ARG1 (c8-4 / government-organization
                                            :name (c8-10 / name
                                                         :op1 "White"
                                                         :op2 "House"))
                                :ARG1-of (c8-3 / resemble-01
                                               :ARG2 (c8-7 / rainbow
                                                           :purpose (c8-5 / pride-01
                                                                          :ARG0 (c8-1 / person
                                                                                      :ARG1-of (c8-6 / gay-01))))))))

# ::snt discriminated against to prevent social mobility and move away from their areas
# ::tokens ["discriminated", "against", "to", "prevent", "social", "mobility", "and", "move", "away", "from", "their", "areas"]
# ::lemmas ["discriminate", "against", "to", "prevent", "social", "mobility", "and", "move", "away", "from", "their", "area"]
(c9-7 / oppose-01
      :ARG1 (c9-0 / and
                  :op1 (c9-6 / prevent-01
                             :ARG1 (c9-4 / mobility
                                         :mod (c9-5 / society)))
                  :op2 (c9-3 / move-01
                             :ARG2 (c9-8 / away
                                         :op1 (c9-1 / area
                                                    :poss (c9-2 / they))))))

# ::snt Because that's where the slave trade put their ancestors and since then they have been systematically...
# ::tokens ["Because", "that", "'s", "where", "the", "slave", "trade", "put", "their", "ancestors", "and", "since", "then", "they", "have", "been", "systematically", "..."]
# ::lemmas ["because", "that", "be", "where", "the", "slave", "trade", "put", "their", "ancestor", "and", "since", "then", "they", "have", "be", "systematically", "..."]
(c10-11 / cause-01
        :ARG0 (c10-0 / and
                     :op1 (c10-8 / put-01
                                 :ARG0 (c10-2 / trade-01
                                              :ARG1 (c10-7 / slave))
                                 :ARG1 (c10-5 / person
                                              :ARG0-of (c10-10 / have-rel-role-91
                                                               :ARG1 (c10-3 / they)
                                                               :ARG2 (c10-6 / ancestor)))
                                 :ARG2 (c10-4 / that))
                     :op2 (c10-1 / systematic
                                 :domain c10-3
                                 :time (c10-9 / since
                                              :op1 c10-2))))

# ::snt That's what I'm saying!
# ::tokens ["That", "'s", "what", "I", "'m", "saying", "!"]
# ::lemmas ["that", "be", "what", "i", "be", "say", "!"]
(c11-2 / say-01
       :ARG0 (c11-1 / i)
       :ARG1 (c11-0 / that))
