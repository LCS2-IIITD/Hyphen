# ::snt This is false. Please remove disinformation.
# ::tokens ["This", "is", "false", ".", "Please", "remove", "disinformation", "."]
# ::lemmas ["this", "be", "false", ".", "please", "remove", "disinformation", "."]
(c2-3 / multi-sentence
      :snt1 (c2-4 / false
                  :domain (c2-0 / this))
      :snt2 (c2-1 / remove-01
                  :ARG0 (c2-2 / you)
                  :ARG1 (c2-5 / disinformation)
                  :mode imperative
                  :polite +))

# ::snt Actually, no. Do check Snopes first, huh!
# ::tokens ["Actually", ",", "no", ".", "Do", "check", "Snopes", "first", ",", "huh", "!"]
# ::lemmas ["actually", ",", "no", ".", "do", "check", "snope", "first", ",", "huh", "!"]
(c3-3 / multi-sentence
      :snt1 (c3-4 / no
                  :ARG1-of (c3-0 / actual-02))
      :snt2 (c3-8 / check-01
                  :ARG0 (c3-2 / you)
                  :ARG1 (c3-5 / publication
                              :name (c3-1 / name
                                          :op1 "Snopes"))
                  :ord (c3-6 / ordinal-entity
                             :value 1)
                  :mod (c3-7 / huh
                             :mode expressive)
                  :mode imperative))

# ::snt All I can say is you should be getting paid. Your intentions are admirable though.
# ::tokens ["All", "I", "can", "say", "is", "you", "should", "be", "getting", "paid", ".", "Your", "intentions", "are", "admirable", "though", "."]
# ::lemmas ["all", "i", "can", "say", "be", "you", "should", "be", "getting", "pay", ".", "your", "intention", "be", "admirable", "though", "."]
(c4-4 / multi-sentence
      :snt1 (c4-9 / possible-01
                  :ARG1 (c4-8 / say-01
                              :ARG0 (c4-7 / i)
                              :ARG1 (c4-1 / recommend-01
                                          :ARG1 (c4-5 / pay-01
                                                      :ARG2 (c4-3 / you)))
                              :mod (c4-0 / all)))
      :snt2 (c4-11 / admirable-02
                   :ARG1 (c4-10 / intend-01
                                :ARG0 (c4-2 / you))
                   :ARG1-of (c4-6 / have-concession-91)))

# ::snt Who knows, maybe they'll do the right thing.Law of averages, etc.
# ::tokens ["Who", "knows", ",", "maybe", "they", "'ll", "do", "the", "right", "thing", ".", "Law", "of", "averages", ",", "etc", "."]
# ::lemmas ["who", "know", ",", "maybe", "they", "'ll", "do", "the", "right", "thing", ".", "law", "of", "average", ",", "etc", "."]
(c5-7 / multi-sentence
      :snt1 (c5-5 / know-01
                  :ARG0 (c5-0 / amr-unknown))
      :snt2 (c5-9 / possible-01
                  :ARG1 (c5-11 / do-02
                               :ARG0 (c5-1 / they)
                               :ARG1 (c5-6 / thing
                                           :ARG1-of (c5-3 / right-02))))
      :snt3 (c5-8 / and
                  :op1 (c5-10 / law
                              :topic (c5-2 / average-01))
                  :op2 (c5-4 / et-cetera)))

# ::snt You know that the more attention they get, the worse they get?
# ::tokens ["You", "know", "that", "the", "more", "attention", "they", "get", ",", "the", "worse", "they", "get", "?"]
# ::lemmas ["you", "know", "that", "the", "more", "attention", "they", "get", ",", "the", "bad", "they", "get", "?"]
(c6-3 / know-01
      :ARG0 (c6-5 / you)
      :ARG1 (c6-11 / correlate-91
                   :ARG1 (c6-6 / more
                               :ARG3-of (c6-10 / have-quant-91
                                               :ARG1 (c6-0 / attend-02
                                                           :ARG1 (c6-1 / they))))
                   :ARG2 (c6-2 / more
                               :ARG3-of (c6-8 / have-degree-91
                                              :ARG1 (c6-7 / get-01
                                                          :ARG1 c6-1)
                                              :ARG2 (c6-4 / bad-07
                                                          :ARG1 c6-1))))
      :polarity (c6-9 / amr-unknown))

# ::snt . Are you going to be deleting this tweet &amp; issuing a correction, then?
# ::tokens [".", "Are", "you", "going", "to", "be", "deleting", "this", "tweet", "&", "amp", ";", "issuing", "a", "correction", ",", "then", "?"]
# ::lemmas [".", "be", "you", "go", "to", "be", "delete", "this", "tweet", "&", "amp", ";", "issue", "a", "correction", ",", "then", "?"]
(c7-0 / and
      :op1 (c7-9 / delete-01
                 :ARG0 (c7-5 / you)
                 :ARG1 (c7-1 / thing
                             :ARG1-of (c7-3 / tweet-01)
                             :mod (c7-4 / this))
                 :polarity (c7-6 / amr-unknown))
      :op2 (c7-7 / issue-01
                 :ARG0 c7-5
                 :ARG1 (c7-8 / correction-02
                             :ARG0 c7-5)
                 :polarity (c7-2 / amr-unknown)))

# ::snt No women or children - only young fighting age men... hmm....
# ::tokens ["No", "women", "or", "children", "-", "only", "young", "fighting", "age", "men", "...", "hmm", "...."]
# ::lemmas ["no", "woman", "or", "child", "-", "only", "young", "fighting", "age", "man", "...", "hmm", "...."]
(c8-9 / contrast-01
      :ARG1 (c8-5 / or
                  :op1 (c8-6 / woman)
                  :op2 (c8-4 / child)
                  :polarity -)
      :ARG2 (c8-3 / man
                  :mod (c8-2 / young)
                  :mod (c8-0 / age
                             :mod (c8-7 / fight-01))
                  :mod (c8-1 / only))
      :mod (c8-8 / hmm
                 :mode expressive))

# ::snt all men! Where are the women and children??
# ::tokens ["all", "men", "!", "Where", "are", "the", "women", "and", "children", "?", "?"]
# ::lemmas ["all", "man", "!", "where", "be", "the", "woman", "and", "child", "?", "?"]
(c9-4 / multi-sentence
      :snt1 (c9-2 / man
                  :mod (c9-0 / all))
      :snt2 (c9-3 / be-located-at-91
                  :ARG1 (c9-7 / and
                              :op1 (c9-5 / woman)
                              :op2 (c9-6 / child))
                  :ARG2 (c9-1 / amr-unknown)))

# ::snt be sure to send a thank you letter for being a tool for the invasion of America
# ::tokens ["be", "sure", "to", "send", "a", "thank", "you", "letter", "for", "being", "a", "tool", "for", "the", "invasion", "of", "America"]
# ::lemmas ["be", "sure", "to", "send", "a", "thank", "you", "letter", "for", "be", "a", "tool", "for", "the", "invasion", "of", "America"]
(c10-1 / ensure-01
       :ARG0 (c10-3 / you)
       :ARG1 (c10-5 / send-01
                    :ARG0 c10-3
                    :ARG1 (c10-7 / letter
                                 :ARG0-of (c10-0 / thank-01
                                                 :ARG1 c10-3
                                                 :ARG2 (c10-2 / tool
                                                              :purpose (c10-4 / invade-01
                                                                              :ARG1 (c10-8 / country
                                                                                           :name (c10-6 / name
                                                                                                        :op1 "America")))))))
       :mode imperative)

# ::snt why are these only men they are young and need to be in their own country defending it
# ::tokens ["why", "are", "these", "only", "men", "they", "are", "young", "and", "need", "to", "be", "in", "their", "own", "country", "defending", "it"]
# ::lemmas ["why", "be", "these", "only", "man", "they", "be", "young", "and", "need", "to", "be", "in", "their", "own", "country", "defend", "it"]
(c11-9 / cause-01
       :ARG0 (c11-0 / amr-unknown)
       :ARG1 (c11-10 / and
                     :op1 (c11-4 / young
                                 :domain (c11-5 / man
                                                :mod (c11-1 / this)
                                                :mod (c11-8 / only)))
                     :op2 (c11-7 / need-01
                                 :ARG0 c11-5
                                 :ARG1 (c11-2 / be-located-at-91
                                              :ARG1 c11-5
                                              :ARG2 (c11-6 / country
                                                           :poss c11-5)
                                              :purpose (c11-3 / defend-01
                                                              :ARG0 c11-5
                                                              :ARG1 c11-6)))))

# ::snt Obama built this-listen for his words and phrases that awaken the sleeper cells.
# ::tokens ["Obama", "built", "this", "-", "listen", "for", "his", "words", "and", "phrases", "that", "awaken", "the", "sleeper", "cells", "."]
# ::lemmas ["Obama", "build", "this", "-", "listen", "for", "his", "word", "and", "phrase", "that", "awaken", "the", "sleeper", "cell", "."]
(c12-2 / build-01
       :ARG0 (c12-5 / person
                    :name (c12-6 / name
                                 :op1 "Obama"))
       :ARG1 (c12-8 / listen-01
                    :mod (c12-1 / this)
                    :purpose (c12-0 / and
                                    :op1 (c12-7 / word-01
                                                :ARG0 c12-5)
                                    :op2 (c12-3 / phrase-01
                                                :ARG0 c12-5)
                                    :ARG0-of (c12-10 / awaken-01
                                                     :ARG1 (c12-9 / cell
                                                                  :ARG0-of (c12-4 / sleep-01))))))

# ::snt God bless us all
# ::tokens ["God", "bless", "us", "all"]
# ::lemmas ["God", "bless", "we", "all"]
(c13-1 / bless-01
       :ARG0 (c13-2 / person
                    :name (c13-3 / name
                                 :op1 "God"))
       :ARG1 (c13-4 / we
                    :mod (c13-0 / all)))

# ::snt heeeeeere! First load of has arrived in New Orleans, being reset...
# ::tokens ["heeeeeere", "!", "First", "load", "of", "has", "arrived", "in", "New", "Orleans", ",", "being", "reset", "..."]
# ::lemmas ["heeeeeere", "!", "First", "load", "of", "have", "arrive", "in", "New", "Orleans", ",", "be", "reset", "..."]
(c14-3 / multi-sentence
       :snt1 (c14-7 / he)
       :snt2 (c14-0 / arrive-01
                    :ARG1 (c14-6 / load
                                 :ord (c14-5 / ordinal-entity
                                             :value 1)
                                 :ARG1-of (c14-1 / load-01))
                    :ARG4 (c14-8 / city
                                 :name (c14-4 / name
                                              :op1 "New"
                                              :op2 "Orleans"))
                    :manner (c14-2 / reset-01
                                   :ARG1 c14-6)))

# ::snt There planning now, And already hit us
# ::tokens ["There", "planning", "now", ",", "And", "already", "hit", "us"]
# ::lemmas ["there", "plan", "now", ",", "and", "already", "hit", "we"]
(c15-0 / and
       :op1 (c15-2 / plan-01
                   :ARG0 (c15-1 / they)
                   :time (c15-3 / now))
       :op2 (c15-5 / hit-01
                   :ARG1 (c15-4 / we)
                   :time (c15-6 / already)))

# ::snt Coming?
# ::tokens ["Coming", "?"]
# ::lemmas ["come", "?"]
(c16-1 / come-01
       :polarity (c16-0 / amr-unknown))

# ::snt Gun free zones is a target for terrorist attacks.
# ::tokens ["Gun", "free", "zones", "is", "a", "target", "for", "terrorist", "attacks", "."]
# ::lemmas ["Gun", "free", "zone", "be", "a", "target", "for", "terrorist", "attack", "."]
(c17-1 / target-01
       :ARG0 (c17-0 / attack-01
                    :ARG0 (c17-2 / terrorist))
       :ARG1 (c17-4 / zone
                    :ARG1-of (c17-5 / free-04
                                    :ARG2 (c17-3 / gun))))

# ::snt . Is it just me or do I only see young men? Fighting men? This is an invasion- carefully planned- where are the families?
# ::tokens [".", "Is", "it", "just", "me", "or", "do", "I", "only", "see", "young", "men", "?", "Fighting", "men", "?", "This", "is", "an", "invasion-", "carefully", "planned-", "where", "are", "the", "families", "?"]
# ::lemmas [".", "be", "it", "just", "i", "or", "do", "i", "only", "see", "young", "man", "?", "fight", "man", "?", "this", "be", "an", "invasion-", "carefully", "planned-", "where", "be", "the", "family", "?"]
(c18-7 / multi-sentence
       :snt1 (c18-13 / or
                     :op1 (c18-9 / i
                                 :mod (c18-2 / just))
                     :op2 (c18-10 / see-01
                                  :ARG0 c18-9
                                  :ARG1 (c18-3 / man
                                               :mod (c18-6 / young))
                                  :mod (c18-4 / only)))
       :snt2 (c18-12 / man
                     :ARG0-of (c18-14 / fight-01))
       :snt3 (c18-15 / invade-01
                     :domain (c18-1 / this)
                     :ARG1-of (c18-11 / plan-01
                                      :manner (c18-16 / careful)))
       :snt4 (c18-5 / be-located-at-91
                    :ARG1 (c18-8 / family)
                    :ARG2 (c18-0 / amr-unknown)))

# ::snt There seems to be a pattern forming, eh? Hijra, me thinks.
# ::tokens ["There", "seems", "to", "be", "a", "pattern", "forming", ",", "eh", "?", "Hijra", ",", "me", "thinks", "."]
# ::lemmas ["there", "seem", "to", "be", "a", "pattern", "form", ",", "eh", "?", "Hijra", ",", "i", "think", "."]
(c19-4 / seem-01
       :ARG1 (c19-7 / form-01
                    :ARG1 (c19-5 / pattern))
       :ARG1-of (c19-1 / request-confirmation-91
                       :ARG0 (c19-3 / i))
       :ARG1-of (c19-0 / think-01
                       :ARG0 c19-3
                       :ARG2 (c19-2 / person
                                    :name (c19-6 / name
                                                 :op1 "Hijra"))))

# ::snt Get ready Norleans!
# ::tokens ["Get", "ready", "Norleans", "!"]
# ::lemmas ["get", "ready", "Norleans", "!"]
(c20-1 / say-01
       :ARG1 (c20-2 / ready-02
                    :ARG0 (c20-0 / person
                                 :name (c20-3 / name
                                              :op1 "Norleans")
                                 :ARG2-of c20-1)
                    :mode imperative))

# ::snt WHY are there only young men in the pic of refugees?
# ::tokens ["WHY", "are", "there", "only", "young", "men", "in", "the", "pic", "of", "refugees", "?"]
# ::lemmas ["why", "be", "there", "only", "young", "man", "in", "the", "pic", "of", "refugee", "?"]
(c21-2 / be-located-at-91
       :ARG1 (c21-4 / man
                    :mod (c21-3 / young)
                    :mod (c21-6 / only))
       :ARG2 (c21-5 / pic
                    :topic (c21-1 / refugee))
       :ARG1-of (c21-7 / cause-01
                       :ARG0 (c21-0 / amr-unknown)))

# ::snt where are the women and children?
# ::tokens ["where", "are", "the", "women", "and", "children", "?"]
# ::lemmas ["where", "be", "the", "woman", "and", "child", "?"]
(c22-0 / and
       :op1 (c22-1 / woman)
       :op2 (c22-3 / child)
       :location (c22-2 / amr-unknown))

# ::snt All men?WTH?
# ::tokens ["All", "men?WTH", "?"]
# ::lemmas ["all", "men?wth", "?"]
(c23-1 / man
       :polarity (c23-0 / amr-unknown)
       :mod (c23-3 / all)
       :mod (c23-2 / heck
                   :mode expressive))

# ::snt he knows exactly what he's doing.
# ::tokens ["he", "knows", "exactly", "what", "he", "'s", "doing", "."]
# ::lemmas ["he", "know", "exactly", "what", "he", "be", "do", "."]
(c24-2 / know-01
       :ARG0 (c24-3 / he)
       :ARG1 (c24-0 / thing
                    :ARG1-of (c24-4 / do-02
                                    :ARG0 c24-3)
                    :mod (c24-1 / exact)))

# ::snt where are the women and children?
# ::tokens ["where", "are", "the", "women", "and", "children", "?"]
# ::lemmas ["where", "be", "the", "woman", "and", "child", "?"]
(c25-0 / and
       :op1 (c25-1 / woman)
       :op2 (c25-3 / child)
       :location (c25-2 / amr-unknown))

# ::snt Seems our President is the only one who doesn't understand it is a bad idea to take in Syrian refugees.
# ::tokens ["Seems", "our", "President", "is", "the", "only", "one", "who", "does", "n't", "understand", "it", "is", "a", "bad", "idea", "to", "take", "in", "Syrian", "refugees", "."]
# ::lemmas ["seem", "our", "President", "be", "the", "only", "one", "who", "do", "not", "understand", "it", "be", "a", "bad", "idea", "to", "take", "in", "Syrian", "refugee", "."]
(c26-5 / seem-01
       :ARG1 (c26-4 / understand-01
                    :ARG0 (c26-6 / person
                                 :ARG0-of (c26-11 / have-org-role-91
                                                  :ARG1 (c26-10 / we)
                                                  :ARG2 (c26-3 / president))
                                 :mod (c26-8 / only))
                    :ARG1 (c26-7 / idea
                                 :ARG1-of (c26-2 / bad-07)
                                 :domain (c26-0 / take-in-06
                                                :ARG1 (c26-1 / refugee
                                                             :mod (c26-12 / country
                                                                          :name (c26-9 / name
                                                                                       :op1 "Syria")))))
                    :polarity -))

# ::snt same crap that's going on in Paris will start in the USA unless they send them back.
# ::tokens ["same", "crap", "that", "'s", "going", "on", "in", "Paris", "will", "start", "in", "the", "USA", "unless", "they", "send", "them", "back", "."]
# ::lemmas ["same", "crap", "that", "be", "go", "on", "in", "Paris", "will", "start", "in", "the", "USA", "unless", "they", "send", "they", "back", "."]
(c27-7 / start-01
       :ARG1 (c27-10 / crap
                     :ARG1-of (c27-0 / same-01)
                     :ARG1-of (c27-5 / go-on-15
                                     :location (c27-6 / city
                                                      :name (c27-8 / name
                                                                   :op1 "Paris"))))
       :location (c27-2 / country
                        :name (c27-3 / name
                                     :op1 "USA"))
       :condition (c27-9 / send-01
                         :ARG0 (c27-1 / they)
                         :ARG1 c27-10
                         :ARG2 (c27-4 / back)
                         :polarity -))

# ::snt where are the woman and little children!
# ::tokens ["where", "are", "the", "woman", "and", "little", "children", "!"]
# ::lemmas ["where", "be", "the", "woman", "and", "little", "child", "!"]
(c28-0 / and
       :op1 (c28-1 / woman)
       :op2 (c28-3 / child
                   :mod (c28-2 / little))
       :location (c28-4 / amr-unknown))

# ::snt wtf is going on here there is a storm coming..
# ::tokens ["wtf", "is", "going", "on", "here", "there", "is", "a", "storm", "coming", ".."]
# ::lemmas ["wtf", "be", "go", "on", "here", "there", "be", "a", "storm", "come", ".."]
(c29-0 / and
       :op1 (c29-2 / go-on-15
                   :ARG1 (c29-5 / amr-unknown)
                   :mod (c29-4 / fuck
                               :mode expressive))
       :op2 (c29-1 / come-01
                   :ARG1 (c29-3 / storm)))

# ::snt Where are the women and children?
# ::tokens ["Where", "are", "the", "women", "and", "children", "?"]
# ::lemmas ["where", "be", "the", "woman", "and", "child", "?"]
(c30-0 / and
       :op1 (c30-1 / woman)
       :op2 (c30-3 / child)
       :location (c30-2 / amr-unknown))
