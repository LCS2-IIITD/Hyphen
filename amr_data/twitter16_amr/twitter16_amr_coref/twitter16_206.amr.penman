# ::snt sad to have to boycott that too. Only temporary I hope
# ::tokens ["sad", "to", "have", "to", "boycott", "that", "too", ".", "Only", "temporary", "I", "hope"]
# ::lemmas ["sad", "to", "have", "to", "boycott", "that", "too", ".", "only", "temporary", "i", "hope"]
(c1-5 / multi-sentence
      :snt1 (c1-7 / sad-02
                  :ARG0 (c1-8 / obligate-01
                              :ARG2 (c1-1 / boycott-01
                                          :ARG1 (c1-0 / that)
                                          :mod (c1-2 / too))))
      :snt2 (c1-9 / hope-01
                  :ARG0 (c1-6 / i)
                  :ARG1 (c1-3 / temporary
                              :mod (c1-4 / only))))

# ::snt :'(
# ::tokens [":'("]
# ::lemmas [":'("]
(c2-0 / amr-empty)

# ::snt thanks for the correction.
# ::tokens ["thanks", "for", "the", "correction", "."]
# ::lemmas ["thank", "for", "the", "correction", "."]
(c3-2 / thank-01
      :ARG0 (c3-0 / i)
      :ARG1 (c3-1 / you)
      :ARG2 (c3-3 / edit-01
                  :ARG0 c3-1))

# ::snt I hope so and that Im just being unfairly cynical.
# ::tokens ["I", "hope", "so", "and", "that", "I", "m", "just", "being", "unfairly", "cynical", "."]
# ::lemmas ["i", "hope", "so", "and", "that", "i", "m", "just", "be", "unfairly", "cynical", "."]
(c4-0 / and
      :op1 (c4-5 / hope-01
                 :ARG0 (c4-2 / i)
                 :ARG1 (c4-3 / so))
      :op2 (c4-6 / cynical
                 :domain c4-2
                 :mod (c4-1 / just)
                 :ARG1-of (c4-4 / fair-01
                                :polarity -)))

# ::snt he normally doesnt completely kill it this fast. I give it a year.
# ::tokens ["he", "normally", "does", "nt", "completely", "kill", "it", "this", "fast", ".", "I", "give", "it", "a", "year", "."]
# ::lemmas ["he", "normally", "do", "not", "completely", "kill", "it", "this", "fast", ".", "i", "give", "it", "a", "year", "."]
(c5-5 / multi-sentence
      :snt1 (c5-2 / kill-01
                  :ARG0 (c5-11 / he)
                  :ARG1 (c5-8 / it)
                  :ARG1-of (c5-12 / complete-02)
                  :ARG1-of (c5-10 / fast-02
                                  :degree (c5-0 / this))
                  :ARG1-of (c5-9 / normal-02)
                  :polarity -)
      :snt2 (c5-6 / give-01
                  :ARG0 (c5-1 / i)
                  :ARG1 (c5-3 / temporal-quantity
                              :unit (c5-4 / year)
                              :quant 1)
                  :ARG2 (c5-7 / it)))

# ::snt ?! Jeez thats a terrible misrepresentation in the article
# ::tokens ["?", "!", "Jeez", "that", "s", "a", "terrible", "misrepresentation", "in", "the", "article"]
# ::lemmas ["?", "!", "Jeez", "that", "s", "a", "terrible", "misrepresentation", "in", "the", "article"]
(c6-4 / misrepresent-01
      :ARG1 (c6-1 / that)
      :ARG1-of (c6-3 / terrible-01)
      :location (c6-0 / article)
      :mod (c6-2 / jeez
                 :mode expressive))

# ::snt I don't get it, I thought they sold the magazine and TV and that it's the remaining part that's cutting jobs.
# ::tokens ["I", "do", "n't", "get", "it", ",", "I", "thought", "they", "sold", "the", "magazine", "and", "TV", "and", "that", "it", "'s", "the", "remaining", "part", "that", "'s", "cutting", "jobs", "."]
# ::lemmas ["i", "do", "not", "get", "it", ",", "i", "think", "they", "sell", "the", "magazine", "and", "tv", "and", "that", "it", "be", "the", "remain", "part", "that", "be", "cut", "job", "."]
(c7-0 / and
      :op1 (c7-7 / get-30
                 :ARG0 (c7-9 / i)
                 :ARG1 (c7-13 / it)
                 :polarity -)
      :op2 (c7-1 / think-01
                 :ARG0 c7-9
                 :ARG1 (c7-14 / and
                              :op1 (c7-10 / sell-01
                                          :ARG0 (c7-5 / they)
                                          :ARG1 (c7-2 / and
                                                      :op1 (c7-8 / magazine)
                                                      :op2 (c7-6 / television)))
                              :op2 (c7-11 / part
                                          :ARG1-of (c7-3 / remain-01)
                                          :ARG0-of (c7-12 / cut-02
                                                          :ARG1 (c7-4 / job))
                                          :domain c7-10))))

# ::snt RIP National Geographic MT ": Rupert Murdoch just killed National Geographic.
# ::tokens ["RIP", "National", "Geographic", "MT", "\"", ":", "Rupert", "Murdoch", "just", "killed", "National", "Geographic", "."]
# ::lemmas ["RIP", "National", "Geographic", "MT", "\"", ":", "Rupert", "Murdoch", "just", "kill", "National", "Geographic", "."]
(c8-6 / quote-01
      :ARG1 (c8-3 / kill-01
                  :ARG0 (c8-7 / person
                              :name (c8-8 / name
                                          :op1 "Rupert"
                                          :op2 "Murdoch"))
                  :ARG1 (c8-5 / publication
                              :name (c8-4 / name
                                          :op1 "National"
                                          :op2 "Geographical"
                                          :op3 "Magazine"))
                  :time (c8-2 / just))
      :ARG2 c8-5
      :manner (c8-1 / rest-01
                    :ARG1 c8-5
                    :manner (c8-0 / peace)))

# ::snt Can we execute him yet? " Holy shit. Rupert Murdoch just killed National Geographic.
# ::tokens ["Can", "we", "execute", "him", "yet", "?", "\"", "Holy", "shit", ".", "Rupert", "Murdoch", "just", "killed", "National", "Geographic", "."]
# ::lemmas ["can", "we", "execute", "he", "yet", "?", "\"", "holy", "shit", ".", "Rupert", "Murdoch", "just", "kill", "National", "Geographic", "."]
(c10-7 / multi-sentence
       :snt1 (c10-11 / possible-01
                     :polarity (c10-0 / amr-unknown)
                     :ARG1 (c10-2 / execute-01
                                  :ARG0 (c10-13 / we)
                                  :ARG1 (c10-14 / he)
                                  :time (c10-6 / yet)))
       :snt2 (c10-10 / shit
                     :mod (c10-9 / holy)
                     :mode expressive)
       :snt3 (c10-4 / kill-01
                    :ARG0 (c10-8 / person
                                 :name (c10-12 / name
                                               :op1 "Rupert"
                                               :op2 "Murdoch"))
                    :ARG1 (c10-1 / publication
                                 :name (c10-5 / name
                                              :op1 "National"
                                              :op2 "Geography"))
                    :time (c10-3 / just)))

# ::snt wish he do that to all his papers, kill them
# ::tokens ["wish", "he", "do", "that", "to", "all", "his", "papers", ",", "kill", "them"]
# ::lemmas ["wish", "he", "do", "that", "to", "all", "his", "paper", ",", "kill", "they"]
(c11-6 / wish-01
       :ARG0 (c11-3 / i)
       :ARG1 (c11-0 / and
                    :op1 (c11-8 / do-02
                                :ARG0 (c11-7 / he)
                                :ARG1 (c11-1 / that)
                                :ARG2 (c11-5 / paper
                                             :poss c11-7
                                             :mod (c11-4 / all)))
                    :op2 (c11-2 / kill-01
                                :ARG0 c11-7
                                :ARG1 c11-5)))

# ::snt What a total asshole: Holy shit. Rupert Murdoch just killed National Geographic.
# ::tokens ["What", "a", "total", "asshole", ":", "Holy", "shit", ".", "Rupert", "Murdoch", "just", "killed", "National", "Geographic", "."]
# ::lemmas ["what", "a", "total", "asshole", ":", "holy", "shit", ".", "Rupert", "Murdoch", "just", "kill", "National", "Geographic", "."]
(c12-6 / multi-sentence
       :snt1 (c12-0 / asshole
                    :degree (c12-2 / total)
                    :degree (c12-8 / so))
       :snt2 (c12-1 / shit
                    :mod (c12-11 / holy)
                    :mode expressive)
       :snt3 (c12-4 / kill-01
                    :ARG0 (c12-9 / person
                                 :name (c12-10 / name
                                               :op1 "Rupert"
                                               :op2 "Murdoch"))
                    :ARG1 (c12-7 / publication
                                 :name (c12-5 / name
                                              :op1 "National"
                                              :op2 "Geographic"))
                    :mod (c12-3 / just)))

# ::snt Yeah, its downright fucked up and stupid.
# ::tokens ["Yeah", ",", "its", "downright", "fucked", "up", "and", "stupid", "."]
# ::lemmas ["yeah", ",", "its", "downright", "fuck", "up", "and", "stupid", "."]
(c13-0 / and
       :op1 (c13-3 / fuck-up-02
                   :ARG1 (c13-1 / it)
                   :mod (c13-4 / downright))
       :op2 (c13-2 / stupid
                   :domain c13-1
                   :mod c13-4))

# ::snt God damn that is depressing.
# ::tokens ["God", "damn", "that", "is", "depressing", "."]
# ::lemmas ["God", "damn", "that", "be", "depress", "."]
(c14-3 / depress-01
       :ARG0 (c14-1 / that)
       :mod (c14-2 / damn
                   :mod (c14-0 / god)
                   :mode expressive))

# ::snt who could see this coming? (Besides me.)
# ::tokens ["who", "could", "see", "this", "coming", "?", "(", "Besides", "me", ".", ")"]
# ::lemmas ["who", "could", "see", "this", "come", "?", "(", "besides", "i", ".", ")"]
(c15-5 / possible-01
       :ARG1 (c15-4 / see-01
                    :ARG0 (c15-0 / amr-unknown
                                 :ARG2-of (c15-2 / except-01
                                                 :ARG1 (c15-3 / i)))
                    :ARG1 (c15-6 / come-03
                                 :ARG1 (c15-1 / this))))

# ::snt anyone who didnt see this coming has rocks in their heads. Nat Geo died in Sept. Corpse kept moving for a month.
# ::tokens ["anyone", "who", "did", "nt", "see", "this", "coming", "has", "rocks", "in", "their", "heads", ".", "Nat", "Geo", "died", "in", "Sept.", "Corpse", "kept", "moving", "for", "a", "month", "."]
# ::lemmas ["anyone", "who", "do", "not", "see", "this", "coming", "have", "rock", "in", "their", "head", ".", "Nat", "Geo", "die", "in", "Sept.", "Corpse", "keep", "move", "for", "a", "month", "."]
(c16-8 / multi-sentence
       :snt1 (c16-15 / have-03
                     :ARG0 (c16-0 / anyone
                                  :ARG0-of (c16-11 / see-01
                                                   :ARG1 (c16-16 / come-03
                                                                 :ARG1 (c16-1 / this))
                                                   :polarity -)
                                  :part (c16-10 / head))
                     :ARG1 (c16-3 / rock))
       :snt2 (c16-5 / die-01
                    :ARG1 (c16-12 / person
                                  :name (c16-13 / name
                                                :op1 "Nat"
                                                :op2 "Geo"))
                    :time (c16-2 / date-entity
                                 :month 9))
       :snt3 (c16-6 / keep-02
                    :ARG1 (c16-4 / move-01
                                 :ARG1 (c16-9 / corpse))
                    :duration (c16-7 / temporal-quantity
                                     :unit (c16-14 / month)
                                     :quant 1)))

# ::snt Think a regular bare-chested native feature will save NG. Move into that nudie space Playboy abandoned.
# ::tokens ["Think", "a", "regular", "bare", "-", "chested", "native", "feature", "will", "save", "NG", ".", "Move", "into", "that", "nudie", "space", "Playboy", "abandoned", "."]
# ::lemmas ["think", "a", "regular", "bare", "-", "cheste", "native", "feature", "will", "save", "NG", ".", "move", "into", "that", "nudie", "space", "Playboy", "abandon", "."]
(c17-18 / multi-sentence
        :snt1 (c17-1 / think-01
                     :ARG0 (c17-17 / you)
                     :ARG1 (c17-11 / save-02
                                   :ARG0 (c17-7 / feature
                                                :mod (c17-6 / native)
                                                :ARG1-of (c17-8 / regular-02)
                                                :mod (c17-0 / skin
                                                            :ARG1-of (c17-3 / bare-02)))
                                   :ARG1 (c17-15 / publication
                                                 :name (c17-10 / name
                                                               :op1 "NG"))))
        :snt2 (c17-9 / move-01
                     :ARG0 (c17-2 / you)
                     :ARG2 (c17-5 / space
                                  :mod (c17-4 / that)
                                  :mod (c17-16 / nudie)
                                  :ARG1-of (c17-13 / abandon-01
                                                   :ARG0 (c17-12 / magazine
                                                                 :name (c17-14 / name
                                                                               :op1 "Playboy"))))
                     :mode imperative))

# ::snt Not true.
# ::tokens ["Not", "true", "."]
# ::lemmas ["not", "true", "."]
(c18-0 / true-01
       :polarity -)

# ::snt Wow, end of an era.
# ::tokens ["Wow", ",", "end", "of", "an", "era", "."]
# ::lemmas ["wow", ",", "end", "of", "an", "era", "."]
(c19-2 / end-01
       :ARG1 (c19-0 / era)
       :mod (c19-1 / wow
                   :mode expressive))

# ::snt It's heartbreaking, infuriating.
# ::tokens ["It", "'s", "heartbreaking", ",", "infuriating", "."]
# ::lemmas ["it", "be", "heartbreaking", ",", "infuriate", "."]
(c20-0 / and
       :op1 (c20-2 / break-heart-31
                   :ARG0 (c20-1 / it))
       :op2 (c20-3 / infuriate-01
                   :ARG0 c20-1))

# ::snt Award winning being a key point. This was political.
# ::tokens ["Award", "winning", "being", "a", "key", "point", ".", "This", "was", "political", "."]
# ::lemmas ["award", "win", "be", "a", "key", "point", ".", "this", "be", "political", "."]
(c21-3 / multi-sentence
       :snt1 (c21-5 / point
                    :ARG1-of (c21-2 / key-02)
                    :domain (c21-6 / win-01
                                   :ARG4 (c21-0 / award-01)))
       :snt2 (c21-4 / politics
                    :domain (c21-1 / this)))

# ::snt Fuck RT RT Holy shit. Rupert Murdoch just killed National Geographic.
# ::tokens ["Fuck", "RT", "RT", "Holy", "shit", ".", "Rupert", "Murdoch", "just", "killed", "National", "Geographic", "."]
# ::lemmas ["Fuck", "RT", "RT", "Holy", "shit", ".", "Rupert", "Murdoch", "just", "kill", "National", "Geographic", "."]
(c22-4 / multi-sentence
       :snt1 (c22-10 / fuck-01
                     :ARG1 (c22-7 / publication
                                  :name (c22-8 / name
                                               :op1 "RT"))
                     :mod (c22-6 / shit
                                 :mod (c22-11 / holy)
                                 :mode expressive)
                     :mode expressive)
       :snt2 (c22-2 / kill-01
                    :ARG0 (c22-5 / person
                                 :name (c22-3 / name
                                              :op1 "Rupert"
                                              :op2 "Murdoch"))
                    :ARG1 (c22-0 / publication
                                 :name (c22-9 / name
                                              :op1 "National"
                                              :op2 "Geographical"
                                              :op3 "Magazine"))
                    :time (c22-1 / just)))

# ::snt OMG RT : Holy shit. Rupert Murdoch just killed National Geographic.
# ::tokens ["OMG", "RT", ":", "Holy", "shit", ".", "Rupert", "Murdoch", "just", "killed", "National", "Geographic", "."]
# ::lemmas ["OMG", "RT", ":", "holy", "shit", ".", "Rupert", "Murdoch", "just", "kill", "National", "Geographic", "."]
(c23-4 / multi-sentence
       :snt1 (c23-6 / shit
                    :mod (c23-11 / holy)
                    :ARG1-of (c23-9 / opine-01
                                    :ARG0 (c23-7 / publication
                                                 :name (c23-8 / name
                                                              :op1 "OMG"
                                                              :op2 "RT")))
                    :mode expressive)
       :snt2 (c23-2 / kill-01
                    :ARG0 (c23-5 / person
                                 :name (c23-3 / name
                                              :op1 "Rupert"
                                              :op2 "Murdoch"))
                    :ARG1 (c23-0 / publication
                                 :name (c23-10 / name
                                               :op1 "National"
                                               :op2 "Geography"))
                    :mod (c23-1 / just)))

# ::snt I've just looked at other press coverage which suggests &lt;10% of staff gone. Still not good, but not necess. fatal.
# ::tokens ["I", "'ve", "just", "looked", "at", "other", "press", "coverage", "which", "suggests", "&", "lt;10", "%", "of", "staff", "gone", ".", "Still", "not", "good", ",", "but", "not", "necess", ".", "fatal", "."]
# ::lemmas ["i", "'ve", "just", "look", "at", "other", "press", "coverage", "which", "suggest", "&", "lt;10", "%", "of", "staff", "go", ".", "still", "not", "good", ",", "but", "not", "necess", ".", "fatal", "."]
(c24-3 / multi-sentence
       :snt1 (c24-14 / look-01
                     :ARG0 (c24-9 / i)
                     :ARG1 (c24-17 / cover-03
                                   :ARG0 (c24-11 / press)
                                   :mod (c24-13 / other)
                                   :ARG0-of (c24-10 / suggest-01
                                                    :ARG1 (c24-4 / go-02
                                                                 :ARG0 (c24-5 / person
                                                                              :ARG1-of (c24-16 / include-91
                                                                                               :ARG2 (c24-1 / person
                                                                                                            :ARG2-of (c24-0 / staff-01))
                                                                                               :ARG3 (c24-8 / percentage-entity
                                                                                                            :value 10))))))
                     :mod (c24-2 / just))
       :snt2 (c24-6 / contrast-01
                    :ARG1 (c24-7 / good-02
                                 :mod (c24-12 / still)
                                 :polarity -)
                    :ARG2 (c24-15 / fatal
                                  :polarity -)))

# ::snt fuuuu. That does give you possibility of starting a rival with all the same staff but it would be hard to get going w/o support
# ::tokens ["fuuuu", ".", "That", "does", "give", "you", "possibility", "of", "starting", "a", "rival", "with", "all", "the", "same", "staff", "but", "it", "would", "be", "hard", "to", "get", "going", "w/o", "support"]
# ::lemmas ["fuuuu", ".", "that", "do", "give", "you", "possibility", "of", "start", "a", "rival", "with", "all", "the", "same", "staff", "but", "it", "would", "be", "hard", "to", "get", "go", "w/o", "support"]
(c25-7 / multi-sentence
       :snt1 (c25-13 / fuck
                     :mode expressive)
       :snt2 (c25-15 / contrast-01
                     :ARG1 (c25-6 / give-01
                                  :ARG0 (c25-3 / that)
                                  :ARG1 (c25-10 / possible-01
                                                :ARG1 (c25-9 / start-01
                                                             :ARG0 (c25-5 / you)
                                                             :ARG1 (c25-4 / rival-01
                                                                          :ARG0 c25-5)
                                                             :prep-with (c25-0 / staff
                                                                               :ARG1-of (c25-11 / same-01
                                                                                                :mod (c25-1 / all)))))
                                  :ARG2 c25-5)
                     :ARG2 (c25-14 / hard-02
                                   :ARG1 (c25-8 / get-04
                                                :ARG1 (c25-12 / go-06)
                                                :prep-without (c25-2 / support-01
                                                                     :ARG0 c25-5)))))

# ::snt Bloody Americans ...
# ::tokens ["Bloody", "Americans", "..."]
# ::lemmas ["Bloody", "Americans", "..."]
(c26-2 / person
       :mod (c26-1 / country
                   :name (c26-3 / name
                                :op1 "America"))
       :mod (c26-0 / bloody))
