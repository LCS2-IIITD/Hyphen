# ::snt How did trump get elected? Oh, thats right, he didnt! He was appointed by the Electoral College. Get out the Vote, Hank! We are pulling for Beto in this house!
# ::tokens ["How", "did", "trump", "get", "elected", "?", "Oh", ",", "that", "s", "right", ",", "he", "did", "nt", "!", "He", "was", "appointed", "by", "the", "Electoral", "College", ".", "Get", "out", "the", "Vote", ",", "Hank", "!", "We", "are", "pulling", "for", "Beto", "in", "this", "house", "!"]
# ::lemmas ["how", "do", "trump", "get", "elect", "?", "oh", ",", "that", "s", "right", ",", "he", "do", "not", "!", "he", "be", "appoint", "by", "the", "Electoral", "College", ".", "get", "out", "the", "vote", ",", "Hank", "!", "we", "be", "pull", "for", "Beto", "in", "this", "house", "!"]
(c2-25 / multi-sentence
       :snt1 (c2-24 / elect-01
                    :ARG1 (c2-21 / person
                                 :name (c2-4 / name
                                             :op1 " trump"))
                    :manner (c2-16 / amr-unknown))
       :snt2 (c2-8 / right-06
                   :ARG1 (c2-0 / that)
                   :ARG2 (c2-13 / elect-01
                                :ARG1 c2-21
                                :manner (c2-15 / amr-unknown)
                                :polarity -)
                   :mod (c2-27 / oh
                               :mode expressive))
       :snt3 (c2-1 / appoint-01
                   :ARG0 (c2-10 / government-organization
                                :name (c2-9 / name
                                            :op1 "Electoral"
                                            :op2 "College"))
                   :ARG1 (c2-14 / he))
       :snt4 (c2-11 / get-05
                    :ARG0 (c2-18 / person
                                 :name (c2-22 / name
                                              :op1 "Hank"))
                    :ARG2 (c2-5 / vote-01)
                    :mode imperative)
       :snt5 (c2-23 / pull-06
                    :ARG0 (c2-6 / we)
                    :ARG2 (c2-19 / person
                                 :name (c2-17 / name
                                              :op1 "Beto"))
                    :location (c2-20 / house
                                     :mod (c2-2 / this)))
       :snt6 (c2-12 / say-01
                    :ARG0 (c2-3 / i)
                    :ARG1 c2-23
                    :ARG0 c2-6
                    :ARG2 (c2-26 / person
                                 :name (c2-7 / name
                                             :op1 "Beto")
                                 :ARG2-of c2-25)))

# ::snt Who had he removed? Trump?
# ::tokens ["Who", "had", "he", "removed", "?", "Trump", "?"]
# ::lemmas ["who", "have", "he", "remove", "?", "Trump", "?"]
(c3-2 / multi-sentence
      :snt1 (c3-1 / remove-01
                  :ARG0 (c3-5 / he)
                  :ARG1 (c3-0 / amr-unknown))
      :snt2 (c3-3 / person
                  :polarity (c3-6 / amr-unknown)
                  :name (c3-4 / name
                              :op1 "Trump")))

# ::snt Fake news by satire site. Trump Wants to Deport American Indians to India? Fake story, fake tweets fake photo.
# ::tokens ["Fake", "news", "by", "satire", "site", ".", "Trump", "Wants", "to", "Deport", "American", "Indians", "to", "India", "?", "Fake", "story", ",", "fake", "tweets", "fake", "photo", "."]
# ::lemmas ["fake", "news", "by", "satire", "site", ".", "Trump", "Wants", "to", "Deport", "American", "Indians", "to", "India", "?", "fake", "story", ",", "fake", "tweet", "fake", "photo", "."]
(c4-19 / multi-sentence
       :snt1 (c4-6 / fake-02
                   :ARG1 (c4-3 / news
                               :source (c4-8 / site
                                             :mod (c4-0 / satire))))
       :snt2 (c4-5 / want-01
                   :ARG0 (c4-15 / person
                                :name (c4-7 / name
                                            :op1 "Trump"))
                   :ARG1 (c4-17 / deport-01
                                :ARG0 c4-15
                                :ARG1 (c4-13 / person
                                             :mod (c4-9 / country
                                                        :name (c4-16 / name
                                                                     :op1 "America")))
                                :destination (c4-14 / country
                                                    :name (c4-12 / name
                                                                 :op1 "India")))
                   :polarity (c4-11 / amr-unknown))
       :snt3 (c4-10 / and
                    :op1 (c4-2 / story
                               :ARG1-of (c4-18 / fake-02))
                    :op2 (c4-1 / tweet
                               :ARG1-of (c4-4 / fake-02))))

# ::snt LOL
# ::tokens ["LOL"]
# ::lemmas ["LOL"]
(c6-0 / laugh-01
      :ARG0 (c6-1 / i)
      :manner (c6-2 / loud))

# ::snt hahaha stfu. Lol
# ::tokens ["hahaha", "stfu", ".", "Lol"]
# ::lemmas ["hahaha", "stfu", ".", "Lol"]
(c7-1 / multi-sentence
      :snt1 (c7-2 / haha
                  :mode expressive)
      :snt2 (c7-0 / laugh-01
                  :manner (c7-3 / loud)
                  :mode expressive))

# ::snt hey aunty.. think that's funny??
# ::tokens ["hey", "aunty", "..", "think", "that", "'s", "funny", "?", "?"]
# ::lemmas ["hey", "aunty", "..", "think", "that", "be", "funny", "?", "?"]
(c8-3 / say-01
      :ARG1 (c8-1 / think-01
                  :ARG0 (c8-4 / person
                              :name (c8-5 / name
                                          :op1 "aunty"))
                  :ARG1 (c8-6 / funny-02
                              :ARG1 (c8-2 / that))
                  :polarity (c8-0 / amr-unknown))
      :ARG2 c8-4)

# ::snt Of course I'm a duck! I have all the duck bits! The bill. The webbed feet. The cute tail. The sailor hat.
# ::tokens ["Of", "course", "I", "'m", "a", "duck", "!", "I", "have", "all", "the", "duck", "bits", "!", "The", "bill", ".", "The", "webbed", "feet", ".", "The", "cute", "tail", ".", "The", "sailor", "hat", "."]
# ::lemmas ["of", "course", "i", "be", "a", "duck", "!", "i", "have", "all", "the", "duck", "bit", "!", "the", "bill", ".", "the", "web", "foot", ".", "the", "cute", "tail", ".", "the", "sailor", "hat", "."]
(c9-7 / multi-sentence
      :snt1 (c9-16 / duck
                   :domain (c9-9 / i)
                   :mod (c9-12 / of-course))
      :snt2 (c9-15 / have-03
                   :ARG0 (c9-3 / i)
                   :ARG1 (c9-4 / bit
                               :mod (c9-1 / duck)
                               :mod (c9-0 / all)))
      :snt3 (c9-6 / bill)
      :snt4 (c9-14 / foot
                   :ARG1-of (c9-13 / web-01))
      :snt5 (c9-2 / tail
                  :mod (c9-5 / cute))
      :snt6 (c9-8 / hat
                  :mod (c9-11 / person
                              :ARG0-of (c9-10 / sail-01))))

# ::snt Fla Fla Flo Fly.
# ::tokens ["Fla", "Fla", "Flo", "Fly", "."]
# ::lemmas ["Fla", "Fla", "Flo", "Fly", "."]
(c10-2 / person
       :name (c10-3 / name
                    :op1 " Flo"
                    :op2 "Fly")
       :location (c10-1 / state
                        :name (c10-0 / name
                                     :op1 "Florida")))

# ::snt The first thing you need to know is that ducks are the greatest animal of all.
# ::tokens ["The", "first", "thing", "you", "need", "to", "know", "is", "that", "ducks", "are", "the", "greatest", "animal", "of", "all", "."]
# ::lemmas ["the", "first", "thing", "you", "need", "to", "know", "be", "that", "duck", "be", "the", "great", "animal", "of", "all", "."]
(c11-6 / need-01
       :ARG0 (c11-2 / you)
       :ARG1 (c11-1 / know-01
                    :ARG0 c11-2
                    :ARG1 (c11-8 / have-degree-91
                                 :ARG1 (c11-9 / duck)
                                 :ARG2 (c11-3 / great)
                                 :ARG3 (c11-4 / most)
                                 :ARG5 (c11-0 / animal
                                              :mod (c11-5 / all)))
                    :ord (c11-7 / ordinal-entity
                                :value 1)))

# ::snt I would rather wrap my body in used toilet paper
# ::tokens ["I", "would", "rather", "wrap", "my", "body", "in", "used", "toilet", "paper"]
# ::lemmas ["i", "would", "rather", "wrap", "my", "body", "in", "use", "toilet", "paper"]
(c12-5 / prefer-01
       :ARG0 (c12-3 / i
                    :part (c12-1 / body))
       :ARG1 (c12-6 / wrap-01
                    :ARG0 c12-3
                    :ARG1 c12-1
                    :ARG2 (c12-2 / paper
                                 :mod (c12-0 / toilet)
                                 :ARG1-of (c12-4 / use-01))))

# ::snt hahahA
# ::tokens ["hahahA"]
# ::lemmas ["hahahA"]
(c13-0 / ha
       :mode expressive)

# ::snt What brain means ?? terrorists means?
# ::tokens ["What", "brain", "means", "?", "?", "terrorists", "means", "?"]
# ::lemmas ["what", "brain", "mean", "?", "?", "terrorist", "mean", "?"]
(c14-4 / multi-sentence
       :snt1 (c14-2 / mean-01
                    :ARG1 (c14-3 / brain)
                    :ARG2 (c14-0 / amr-unknown))
       :snt2 (c14-5 / mean-01
                    :ARG1 (c14-1 / terrorist)
                    :ARG2 (c14-6 / amr-unknown)))

# ::snt This is how I feel on
# ::tokens ["This", "is", "how", "I", "feel", "on"]
# ::lemmas ["this", "be", "how", "i", "feel", "on"]
(c15-2 / feel-01
       :ARG0 (c15-0 / i)
       :ARG1 (c15-1 / this))

# ::snt LOL
# ::tokens ["LOL"]
# ::lemmas ["LOL"]
(c16-0 / laugh-01
       :ARG0 (c16-1 / i)
       :manner (c16-2 / loud))

# ::snt Thank G_d for the weak points. (Oops.)
# ::tokens ["Thank", "G_d", "for", "the", "weak", "points", ".", "(", "Oops", ".", ")"]
# ::lemmas ["thank", "G_d", "for", "the", "weak", "point", ".", "(", "oop", ".", ")"]
(c17-0 / thank-01
       :ARG1 (c17-2 / person
                    :name (c17-3 / name
                                 :op1 "G_d"))
       :ARG2 (c17-1 / point
                    :ARG1-of (c17-5 / weak-02))
       :mod (c17-4 / oops
                   :mode expressive))

# ::snt Is it God Bless America, or God Help America?
# ::tokens ["Is", "it", "God", "Bless", "America", ",", "or", "God", "Help", "America", "?"]
# ::lemmas ["be", "it", "God", "Bless", "America", ",", "or", "God", "help", "America", "?"]
(c19-0 / amr-choice
       :op1 (c19-1 / bless-01
                   :ARG0 (c19-3 / person
                                :name (c19-4 / name
                                             :op1 "God"))
                   :ARG1 (c19-6 / country
                                :name (c19-2 / name
                                             :op1 "America")))
       :op2 (c19-5 / help-01
                   :ARG0 c19-3
                   :ARG2 c19-6))

# ::snt EXACTLY!!!!!!!!!!!
# ::tokens ["EXACTLY", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["exactly", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]
(c20-0 / exact)

# ::snt Classic Trump supporter. Would rather harm another person than something of their own possession.
# ::tokens ["Classic", "Trump", "supporter", ".", "Would", "rather", "harm", "another", "person", "than", "something", "of", "their", "own", "possession", "."]
# ::lemmas ["Classic", "Trump", "supporter", ".", "would", "rather", "harm", "another", "person", "than", "something", "of", "their", "own", "possession", "."]
(c21-4 / multi-sentence
       :snt1 (c21-10 / person
                     :ARG0-of (c21-9 / support-01
                                     :ARG1 (c21-3 / person
                                                  :name (c21-11 / name
                                                                :op1 "Trump"))
                                     :mod (c21-13 / classic)))
       :snt2 (c21-1 / prefer-01
                    :ARG0 (c21-8 / i)
                    :ARG1 (c21-12 / harm-01
                                  :ARG0 c21-8
                                  :ARG1 (c21-6 / person
                                               :mod (c21-0 / another)))
                    :ARG2 (c21-7 / harm-01
                                 :ARG0 c21-8
                                 :ARG1 (c21-2 / something
                                              :ARG1-of (c21-5 / possess-01
                                                              :ARG0 c21-6)))))

# ::snt take a good look huh.
# ::tokens ["take", "a", "good", "look", "huh", "."]
# ::lemmas ["take", "a", "good", "look", "huh", "."]
(c22-0 / look-01
       :ARG0 (c22-1 / you)
       :ARG1-of (c22-3 / good-02)
       :mod (c22-2 / huh)
       :mode imperative)

# ::snt I don't advocate vandalism, but I strongly endorse this kind of "change"....
# ::tokens ["I", "do", "n't", "advocate", "vandalism", ",", "but", "I", "strongly", "endorse", "this", "kind", "of", "\"", "change", "\"", "...."]
# ::lemmas ["i", "do", "not", "advocate", "vandalism", ",", "but", "i", "strongly", "endorse", "this", "kind", "of", "\"", "change", "\"", "...."]
(c23-8 / contrast-01
       :ARG1 (c23-0 / advocate-01
                    :ARG0 (c23-5 / i)
                    :ARG1 (c23-7 / vandalize-01)
                    :polarity -)
       :ARG2 (c23-2 / endorse-01
                    :ARG0 c23-5
                    :ARG1 (c23-4 / change-01
                                 :mod (c23-3 / kind
                                             :mod (c23-1 / this)))
                    :ARG1-of (c23-6 / strong-02)))

# ::snt you are right these signs are so dumb
# ::tokens ["you", "are", "right", "these", "signs", "are", "so", "dumb"]
# ::lemmas ["you", "be", "right", "these", "sign", "be", "so", "dumb"]
(c24-2 / right-06
       :ARG1 (c24-3 / you)
       :ARG2 (c24-5 / dumb
                    :domain (c24-4 / sign
                                   :mod (c24-1 / this))
                    :degree (c24-0 / so)))

# ::snt lol. This happens when u crop up talivan at one side and ISIS at another
# ::tokens ["lol", ".", "This", "happens", "when", "u", "crop", "up", "talivan", "at", "one", "side", "and", "ISIS", "at", "another"]
# ::lemmas ["lol", ".", "this", "happen", "when", "u", "crop", "up", "talivan", "at", "one", "side", "and", "ISIS", "at", "another"]
(c25-5 / event
       :mod (c25-2 / this)
       :time (c25-14 / crop-up-02
                     :ARG0 (c25-7 / you)
                     :ARG1 (c25-0 / and
                                  :op1 (c25-4 / religious-group
                                              :name (c25-11 / name
                                                            :op1 "Taliban")
                                              :location (c25-10 / side
                                                                :mod (c25-12 / one)))
                                  :op2 (c25-8 / religious-group
                                              :name (c25-6 / name
                                                           :op1 "Islamic")
                                              :location (c25-1 / side
                                                               :mod (c25-9 / another)))))
       :ARG2-of (c25-13 / laugh-01
                        :manner (c25-3 / loud)
                        :mode expressive))

# ::snt by huge margin, may be A RECORD win.(Will revisit this on th)
# ::tokens ["by", "huge", "margin", ",", "may", "be", "A", "RECORD", "win.(Will", "revisit", "this", "on", "th", ")"]
# ::lemmas ["by", "huge", "margin", ",", "may", "be", "a", "record", "win.(will", "revisit", "this", "on", "th", ")"]
(c26-4 / multi-sentence
       :snt1 (c26-7 / possible-01
                    :ARG1 (c26-8 / win-01
                                 :ARG1-of (c26-1 / record-01))
                    :manner (c26-2 / margin
                                   :mod (c26-9 / huge)))
       :snt2 (c26-5 / revisit-01
                    :ARG0 (c26-6 / i)
                    :ARG1 (c26-0 / this)
                    :medium (c26-3 / thing
                                   :mod c26-0)))

# ::snt it
# ::tokens ["it"]
# ::lemmas ["it"]
(c27-0 / it)

# ::snt Clinton
# ::tokens ["Clinton"]
# ::lemmas ["Clinton"]
(c28-0 / person
       :name (c28-1 / name
                    :op1 "Clinton"))

# ::snt Well, two out of three.
# ::tokens ["Well", ",", "two", "out", "of", "three", "."]
# ::lemmas ["well", ",", "two", "out", "of", "three", "."]
(c29-2 / include-91
       :ARG1 (c29-0 / thing
                    :quant 2)
       :ARG2 (c29-3 / thing
                    :quant 3)
       :mod (c29-1 / well))

# ::snt . No is not Adolf Hitler.
# ::tokens [".", "No", "is", "not", "Adolf", "Hitler", "."]
# ::lemmas [".", "no", "be", "not", "Adolf", "Hitler", "."]
(c30-0 / person
       :name (c30-1 / name
                    :op1 "Adolf"
                    :op2 "Hitler")
       :polarity -)

# ::snt Hilarious
# ::tokens ["Hilarious"]
# ::lemmas ["hilarious"]
(c31-0 / hilarious)

# ::snt Der Fuhrer Trumpgives me the humpand the Clinton sisterjust a blisterWhere have all the greats gone?Nobody Knows.
# ::tokens ["Der", "Fuhrer", "Trumpgives", "me", "the", "humpand", "the", "Clinton", "sisterjust", "a", "blisterWhere", "have", "all", "the", "greats", "gone?Nobody", "Knows", "."]
# ::lemmas ["Der", "Fuhrer", "Trumpgives", "i", "the", "humpand", "the", "Clinton", "sisterjust", "a", "blisterwhere", "have", "all", "the", "great", "gone?nobody", "Knows", "."]
(c32-20 / multi-sentence
        :snt1 (c32-9 / give-01
                     :ARG0 (c32-18 / person
                                   :name (c32-5 / name
                                                :op1 "Trump")
                                   :ARG0-of (c32-13 / have-rel-role-91
                                                    :ARG2 (c32-6 / fuhrer)))
                     :ARG1 (c32-15 / and
                                   :op1 (c32-17 / hump)
                                   :op2 (c32-2 / blister-01
                                               :ARG1 (c32-16 / person
                                                             :name (c32-7 / name
                                                                          :op1 "Clinton")
                                                             :ARG0-of (c32-4 / have-rel-role-91
                                                                             :ARG2 (c32-11 / sister)))
                                               :mod (c32-1 / just)))
                     :ARG2 (c32-3 / i))
        :snt2 (c32-8 / know-01
                     :ARG0 (c32-19 / nobody)
                     :ARG1 (c32-10 / go-02
                                   :ARG0 (c32-12 / great
                                                 :mod (c32-14 / all))
                                   :ARG4 (c32-0 / amr-unknown))
                     :polarity -))

# ::snt "Here are the nominees: ..."
# ::tokens ["\"", "Here", "are", "the", "nominees", ":", "...", "\""]
# ::lemmas ["\"", "here", "be", "the", "nominee", ":", "...", "\""]
(c33-1 / person
       :ARG1-of (c33-2 / nominate-01)
       :location (c33-0 / here))

# ::snt //if madam Clinton wins....USA will have first father Mr Clinton//.
# ::tokens ["//if", "madam", "Clinton", "wins", "....", "USA", "will", "have", "first", "father", "Mr", "Clinton//."]
# ::lemmas ["//if", "madam", "Clinton", "win", "....", "USA", "will", "have", "first", "father", "Mr", "Clinton//."]
(c34-9 / have-03
       :ARG0 (c34-10 / country
                     :name (c34-4 / name
                                  :op1 "USA"))
       :ARG1 (c34-3 / person
                    :name (c34-0 / name
                                 :op1 "Mr"
                                 :op2 "Clinton")
                    :ARG0-of (c34-2 / have-rel-role-91
                                    :ARG1 c34-10
                                    :ARG2 (c34-8 / father))
                    :ord (c34-5 / ordinal-entity
                                :value 1))
       :condition (c34-7 / win-01
                         :ARG0 (c34-1 / madam
                                      :name (c34-6 / name
                                                   :op1 "Clinton"))))

# ::snt I agree. In fact many of us here wonder why this (and not what) brouhaha all about? Hooo da fck iz Illery Dump?
# ::tokens ["I", "agree", ".", "In", "fact", "many", "of", "us", "here", "wonder", "why", "this", "(", "and", "not", "what", ")", "brouhaha", "all", "about", "?", "Hooo", "da", "fck", "iz", "Illery", "Dump", "?"]
# ::lemmas ["i", "agree", ".", "in", "fact", "many", "of", "we", "here", "wonder", "why", "this", "(", "and", "not", "what", ")", "brouhaha", "all", "about", "?", "Hooo", "da", "fck", "iz", "Illery", "Dump", "?"]
(c35-18 / multi-sentence
        :snt1 (c35-12 / agree-01
                      :ARG0 (c35-3 / i))
        :snt2 (c35-5 / wonder-01
                     :ARG0 (c35-16 / person
                                   :ARG1-of (c35-11 / include-91
                                                    :ARG2 (c35-8 / we
                                                                 :location (c35-9 / here))
                                                    :ARG3 (c35-7 / many)))
                     :ARG1 (c35-0 / thing
                                  :ARG0-of (c35-13 / cause-01
                                                   :ARG1 (c35-2 / brouhaha
                                                                :mod (c35-10 / all))))
                     :mod (c35-17 / in-fact))
        :snt3 (c35-15 / hoo
                      :mod (c35-6 / fuck
                                  :mode expressive)
                      :mod (c35-14 / person
                                   :name (c35-4 / name
                                                :op1 "Illery"
                                                :op2 "Dump"))
                      :polarity (c35-1 / amr-unknown)
                      :mode expressive))

# ::snt I AM PASSING OUT!!!!!
# ::tokens ["I", "AM", "PASSING", "OUT", "!", "!", "!", "!", "!"]
# ::lemmas ["i", "be", "pass", "out", "!", "!", "!", "!", "!"]
(c36-1 / pass-out-11
       :ARG0 (c36-0 / i)
       :mode expressive)

# ::snt Excellent! What a laugh, no one would expect this!
# ::tokens ["Excellent", "!", "What", "a", "laugh", ",", "no", "one", "would", "expect", "this", "!"]
# ::lemmas ["excellent", "!", "what", "a", "laugh", ",", "no", "one", "would", "expect", "this", "!"]
(c38-2 / multi-sentence
       :snt1 (c38-1 / excellent-02
                    :mode expressive)
       :snt2 (c38-5 / laugh-01
                    :ARG0-of (c38-6 / cause-01
                                    :ARG1 (c38-4 / expect-01
                                                 :ARG0 (c38-3 / no-one)
                                                 :ARG1 (c38-0 / this)))
                    :mode expressive))

# ::snt se parece a wlter mercado
# ::tokens ["se", "parece", "a", "wlter", "mercado"]
# ::lemmas ["se", "parece", "a", "wlter", "mercado"]
(c39-2 / parece-00
       :ARG1 (c39-1 / mercado
                    :mod (c39-0 / wlter)))

# ::snt has more Retweet and Favourite than ! That's not fair. Who is anyway?
# ::tokens ["has", "more", "Retweet", "and", "Favourite", "than", "!", "That", "'s", "not", "fair", ".", "Who", "is", "anyway", "?"]
# ::lemmas ["have", "more", "Retweet", "and", "Favourite", "than", "!", "that", "be", "not", "fair", ".", "who", "be", "anyway", "?"]
(c40-7 / multi-sentence
       :snt1 (c40-10 / have-quant-91
                     :ARG1 (c40-0 / and
                                  :op1 (c40-1 / tweet-02)
                                  :op2 (c40-9 / favor-01))
                     :ARG3 (c40-4 / more)
                     :ARG4 (c40-5 / thing
                                  :ARG1-of (c40-8 / post-01)))
       :snt2 (c40-3 / fair-01
                    :ARG1 (c40-6 / that)
                    :polarity -)
       :snt3 (c40-11 / amr-unknown
                     :mod (c40-2 / anyway)))

# ::snt Ho gayi Teri Balle Balle! Hi Jaayegi Balle Balle!
# ::tokens ["Ho", "gayi", "Teri", "Balle", "Balle", "!", "Hi", "Jaayegi", "Balle", "Balle", "!"]
# ::lemmas ["Ho", "gayi", "Teri", "Balle", "Balle", "!", "hi", "Jaayegi", "Balle", "Balle", "!"]
(c41-1 / multi-sentence
       :snt1 (c41-7 / ho-hum
                    :mod (c41-5 / person
                                :name (c41-6 / name
                                             :op1 "Teri"
                                             :op2 "Balle"
                                             :op3 "Balle"))
                    :mode expressive)
       :snt2 (c41-4 / say-01
                    :ARG1 (c41-3 / hi)
                    :ARG2 (c41-2 / person
                                 :name (c41-0 / name
                                              :op1 "Jaayegi"
                                              :op2 "Balle"
                                              :op3 "Balle"))))

# ::snt so it's all Russell's fault?
# ::tokens ["so", "it", "'s", "all", "Russell", "'s", "fault", "?"]
# ::lemmas ["so", "it", "be", "all", "Russell", "'s", "fault", "?"]
(c42-1 / infer-01
       :ARG1 (c42-4 / fault-01
                    :ARG1 (c42-2 / person
                                 :name (c42-3 / name
                                              :op1 "Russell"))
                    :ARG2 (c42-5 / it
                                 :mod (c42-0 / all))
                    :polarity (c42-6 / amr-unknown)))

# ::snt Yes, it's Trump. He has his hand on a woman's ass.
# ::tokens ["Yes", ",", "it", "'s", "Trump", ".", "He", "has", "his", "hand", "on", "a", "woman", "'s", "ass", "."]
# ::lemmas ["yes", ",", "it", "be", "Trump", ".", "he", "have", "his", "hand", "on", "a", "woman", "'s", "ass", "."]
(c43-1 / multi-sentence
       :snt1 (c43-5 / person
                    :name (c43-6 / name
                                 :op1 "Trump")
                    :domain (c43-3 / it))
       :snt2 (c43-8 / have-03
                    :ARG0 (c43-2 / he
                                 :part (c43-4 / hand
                                              :ARG1-of c43-8))
                    :location (c43-0 / ass
                                     :part-of (c43-7 / woman))))

# ::snt - Trump is the need of the hour.
# ::tokens ["-", "Trump", "is", "the", "need", "of", "the", "hour", "."]
# ::lemmas ["-", "Trump", "be", "the", "need", "of", "the", "hour", "."]
(c44-3 / need-01
       :ARG0 (c44-2 / hour)
       :ARG1 (c44-0 / person
                    :name (c44-1 / name
                                 :op1 "Trump")))

# ::snt the sheep will never get it
# ::tokens ["the", "sheep", "will", "never", "get", "it"]
# ::lemmas ["the", "sheep", "will", "never", "get", "it"]
(c45-1 / get-01
       :ARG0 (c45-2 / sheep)
       :ARG1 (c45-0 / it)
       :time (c45-3 / ever)
       :polarity -)

# ::snt facts
# ::tokens ["facts"]
# ::lemmas ["fact"]
(c46-0 / fact)

# ::snt hehe
# ::tokens ["hehe"]
# ::lemmas ["hehe"]
(c47-0 / he
       :mode expressive)

# ::snt all lies propagated by ...except for "make America great again"..which was used by Clinton in .
# ::tokens ["all", "lies", "propagated", "by", "...", "except", "for", "\"", "make", "America", "great", "again\"", "..", "which", "was", "used", "by", "Clinton", "in", "."]
# ::lemmas ["all", "lie", "propagate", "by", "...", "except", "for", "\"", "make", "America", "great", "again\"", "..", "which", "be", "use", "by", "Clinton", "in", "."]
(c48-9 / propagate-01
       :ARG0 (c48-4 / person
                    :name (c48-10 / name
                                  :op1 "Clinton"))
       :ARG1 (c48-1 / thing
                    :ARG1-of (c48-11 / lie-08)
                    :mod (c48-0 / all)
                    :ARG2-of (c48-2 / except-01
                                    :ARG1 (c48-5 / make-02
                                                 :ARG1 (c48-6 / great
                                                              :domain (c48-12 / country
                                                                              :name (c48-3 / name
                                                                                           :op1 "America"))
                                                              :mod (c48-7 / again))
                                                 :ARG1-of (c48-8 / use-01
                                                                 :ARG0 c48-4)))))

# ::snt But one thing to be noted that Jews are not Muslims.
# ::tokens ["But", "one", "thing", "to", "be", "noted", "that", "Jews", "are", "not", "Muslims", "."]
# ::lemmas ["but", "one", "thing", "to", "be", "note", "that", "Jews", "be", "not", "Muslims", "."]
(c49-7 / contrast-01
       :ARG2 (c49-5 / note-01
                    :ARG1 (c49-0 / thing
                                 :domain (c49-1 / religious-group
                                                :name (c49-2 / name
                                                             :op1 "Jew")
                                                :polarity -)
                                 :ARG1-of (c49-4 / include-91
                                                 :ARG2 (c49-3 / religious-group
                                                              :name (c49-6 / name
                                                                           :op1 "Muslim")))
                                 :quant 1)))

# ::snt Don't fuck Gautam... Orange never is the new black..
# ::tokens ["Do", "n't", "fuck", "Gautam", "...", "Orange", "never", "is", "the", "new", "black", ".."]
# ::lemmas ["do", "not", "fuck", "Gautam", "...", "Orange", "never", "be", "the", "new", "black", ".."]
(c50-8 / fuck-01
       :ARG0 (c50-3 / you)
       :ARG1 (c50-5 / person
                    :name (c50-6 / name
                                 :op1 "Gautam"))
       :ARG1-of (c50-9 / cause-01
                       :ARG0 (c50-1 / black-05
                                    :ARG1 (c50-4 / person
                                                 :name (c50-2 / name
                                                              :op1 "Orange"))
                                    :time (c50-0 / ever)
                                    :ARG1-of (c50-7 / new-01)
                                    :polarity -))
       :polarity -
       :mode imperative)
