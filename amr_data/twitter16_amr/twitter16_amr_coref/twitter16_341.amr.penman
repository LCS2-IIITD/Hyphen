# ::snt Might as well have given him a trophy....The dirty dogg!
# ::tokens ["Might", "as", "well", "have", "given", "him", "a", "trophy", "....", "The", "dirty", "dogg", "!"]
# ::lemmas ["might", "as", "well", "have", "give", "he", "a", "trophy", "....", "the", "dirty", "dogg", "!"]
(c1-4 / multi-sentence
      :snt1 (c1-6 / possible-01
                  :ARG1 (c1-3 / give-01
                              :ARG1 (c1-1 / trophy)
                              :ARG2 (c1-7 / he))
                  :mod (c1-0 / as-well))
      :snt2 (c1-8 / dogg
                  :ARG1-of (c1-2 / dirty-02)
                  :domain (c1-5 / he)))

# ::snt who actually survived. But looking at it the cop did look like him.
# ::tokens ["who", "actually", "survived", ".", "But", "looking", "at", "it", "the", "cop", "did", "look", "like", "him", "."]
# ::lemmas ["who", "actually", "survive", ".", "but", "look", "at", "it", "the", "cop", "do", "look", "like", "he", "."]
(c2-1 / multi-sentence
      :snt1 (c2-4 / survive-01
                  :ARG0 (c2-5 / person)
                  :ARG1-of (c2-0 / actual-02))
      :snt2 (c2-7 / contrast-01
                  :ARG2 (c2-6 / look-01
                              :ARG1 (c2-2 / cop)
                              :ARG2 (c2-3 / it))))

# ::snt yes
# ::tokens ["yes"]
# ::lemmas ["yes"]
(c3-0 / yes)

# ::snt Manifesto
# ::tokens ["Manifesto"]
# ::lemmas ["Manifesto"]
(c4-0 / manifesto)

# ::snt why does it not say how tall he is
# ::tokens ["why", "does", "it", "not", "say", "how", "tall", "he", "is"]
# ::lemmas ["why", "do", "it", "not", "say", "how", "tall", "he", "be"]
(c5-4 / cause-01
      :ARG0 (c5-0 / amr-unknown)
      :ARG1 (c5-2 / say-01
                  :ARG1 (c5-1 / tall
                              :domain (c5-3 / he))
                  :polarity -))

# ::snt wtf
# ::tokens ["wtf"]
# ::lemmas ["wtf"]
(c6-0 / amr-unknown
      :mod (c6-1 / fuck))

# ::snt they did that so hed be more comfortable to talk ,and give details...learned from criminal minds and csi
# ::tokens ["they", "did", "that", "so", "he", "d", "be", "more", "comfortable", "to", "talk", ",", "and", "give", "details", "...", "learned", "from", "criminal", "minds", "and", "csi"]
# ::lemmas ["they", "do", "that", "so", "he", "d", "be", "more", "comfortable", "to", "talk", ",", "and", "give", "detail", "...", "learn", "from", "criminal", "mind", "and", "csi"]
(c8-7 / multi-sentence
      :snt1 (c8-5 / do-02
                  :ARG0 (c8-1 / they)
                  :ARG1 (c8-4 / that)
                  :purpose (c8-16 / comfortable-02
                                  :ARG0 (c8-0 / and
                                              :op1 (c8-6 / talk-01
                                                         :ARG0 (c8-10 / i))
                                              :op2 (c8-2 / detail-01
                                                         :ARG0 c8-10))
                                  :ARG1 c8-10
                                  :ARG2-of (c8-15 / have-degree-91
                                                  :ARG1 c8-10
                                                  :ARG3 (c8-3 / more))))
      :snt2 (c8-14 / learn-01
                   :ARG0 c8-10
                   :ARG2 (c8-11 / and
                                :op1 (c8-13 / mind
                                            :ARG2-of (c8-9 / criminal-03))
                                :op2 (c8-8 / government-organization
                                           :name (c8-12 / name
                                                        :op1 "CIA")))))

# ::snt Remember Kids. Don't trust White People with Bowl Cut Haircuts.
# ::tokens ["Remember", "Kids", ".", "Do", "n't", "trust", "White", "People", "with", "Bowl", "Cut", "Haircuts", "."]
# ::lemmas ["remember", "Kids", ".", "do", "not", "trust", "White", "People", "with", "Bowl", "Cut", "Haircuts", "."]
(c9-6 / multi-sentence
      :snt1 (c9-1 / remember-01
                  :ARG0 (c9-5 / you)
                  :ARG1 (c9-4 / kid)
                  :mode imperative)
      :snt2 (c9-0 / trust-02
                  :ARG0 (c9-2 / you)
                  :ARG1 (c9-8 / person
                              :ARG1-of (c9-9 / white-02)
                              :ARG0-of (c9-10 / have-03
                                              :ARG1 (c9-11 / cut-01
                                                           :ARG1 (c9-7 / hair)
                                                           :instrument (c9-3 / bowl))))
                  :mode imperative
                  :polarity -))

# ::snt he wasn't in prison yet he was being questioned
# ::tokens ["he", "was", "n't", "in", "prison", "yet", "he", "was", "being", "questioned"]
# ::lemmas ["he", "be", "not", "in", "prison", "yet", "he", "be", "be", "question"]
(c10-0 / be-located-at-91
       :ARG1 (c10-4 / he)
       :ARG2 (c10-3 / prison)
       :time (c10-1 / yet)
       :ARG1-of (c10-2 / question-01
                       :ARG2 c10-4)
       :polarity -)

# ::snt they aren't supposed to give an inmate any outside foods. you're only supposed to bring them cafeteria food.
# ::tokens ["they", "are", "n't", "supposed", "to", "give", "an", "inmate", "any", "outside", "foods", ".", "you", "'re", "only", "supposed", "to", "bring", "them", "cafeteria", "food", "."]
# ::lemmas ["they", "be", "not", "suppose", "to", "give", "an", "inmate", "any", "outside", "food", ".", "you", "be", "only", "suppose", "to", "bring", "they", "cafeteria", "food", "."]
(c11-7 / multi-sentence
       :snt1 (c11-10 / suppose-02
                     :ARG1 (c11-2 / they)
                     :ARG2 (c11-8 / give-01
                                  :ARG0 c11-2
                                  :ARG1 (c11-12 / food
                                                :source (c11-11 / outside)
                                                :mod (c11-0 / any))
                                  :ARG2 (c11-9 / inmate))
                     :polarity -)
       :snt2 (c11-1 / suppose-02
                    :ARG1 (c11-6 / you)
                    :ARG2 (c11-4 / bring-01
                                 :ARG0 c11-6
                                 :ARG1 (c11-3 / food
                                              :mod (c11-13 / cafeteria))
                                 :ARG2 c11-9
                                 :mod (c11-5 / only))))

# ::snt do the tax payers pay for that?
# ::tokens ["do", "the", "tax", "payers", "pay", "for", "that", "?"]
# ::lemmas ["do", "the", "tax", "payer", "pay", "for", "that", "?"]
(c12-5 / pay-01
       :polarity (c12-0 / amr-unknown)
       :ARG0 (c12-4 / person
                    :ARG0-of (c12-1 / pay-01
                                    :ARG1 (c12-2 / tax)))
       :ARG3 (c12-3 / that))

# ::snt the hell.....
# ::tokens ["the", "hell", "....."]
# ::lemmas ["the", "hell", "....."]
(c13-0 / hell
       :mode expressive)

# ::snt somebody shoulda shot that weenie in the head. They did that cuhz they let him do that.
# ::tokens ["somebody", "shoulda", "shot", "that", "weenie", "in", "the", "head", ".", "They", "did", "that", "cuhz", "they", "let", "him", "do", "that", "."]
# ::lemmas ["somebody", "shoulda", "shoot", "that", "weenie", "in", "the", "head", ".", "they", "do", "that", "cuhz", "they", "let", "he", "do", "that", "."]
(c15-6 / multi-sentence
       :snt1 (c15-3 / recommend-01
                    :ARG1 (c15-9 / shoot-02
                                 :ARG0 (c15-0 / somebody)
                                 :ARG1 (c15-10 / weenie
                                               :part (c15-13 / head
                                                             :ARG2-of c15-9))))
       :snt2 (c15-14 / do-02
                     :ARG0 (c15-1 / they)
                     :ARG1 (c15-4 / that)
                     :ARG1-of (c15-12 / cause-01
                                      :ARG0 (c15-11 / let-01
                                                    :ARG0 (c15-5 / they)
                                                    :ARG1 (c15-2 / do-02
                                                                 :ARG0 (c15-8 / he)
                                                                 :ARG1 (c15-7 / that))))))

# ::snt my bad meant ain't gonna say.
# ::tokens ["my", "bad", "meant", "ai", "n't", "gon", "na", "say", "."]
# ::lemmas ["my", "bad", "meant", "be", "not", "going", "to", "say", "."]
(c16-4 / say-01
       :ARG0 (c16-0 / thing
                    :ARG2-of (c16-2 / mean-01
                                    :ARG0 (c16-3 / i)
                                    :ARG1 (c16-1 / bad-07)))
       :polarity -)

# ::snt Shit I gonna say he had it coming but they started it when they decided to start killing people for no reason.
# ::tokens ["Shit", "I", "gon", "na", "say", "he", "had", "it", "coming", "but", "they", "started", "it", "when", "they", "decided", "to", "start", "killing", "people", "for", "no", "reason", "."]
# ::lemmas ["shit", "i", "going", "to", "say", "he", "have", "it", "come", "but", "they", "start", "it", "when", "they", "decide", "to", "start", "kill", "people", "for", "no", "reason", "."]
(c17-15 / contrast-01
        :ARG1 (c17-11 / say-01
                      :ARG0 (c17-10 / i)
                      :ARG1 (c17-14 / have-03
                                    :ARG0 (c17-9 / he)
                                    :ARG1 (c17-8 / come-01
                                                 :ARG1 (c17-4 / it)))
                      :mod (c17-0 / shit
                                  :mode expressive))
        :ARG2 (c17-12 / start-01
                      :ARG0 (c17-2 / they)
                      :ARG1 c17-4
                      :time (c17-6 / decide-01
                                   :ARG0 c17-2
                                   :ARG1 (c17-1 / start-01
                                                :ARG0 c17-2
                                                :ARG1 (c17-7 / kill-01
                                                             :ARG0 c17-2
                                                             :ARG1 (c17-13 / person))
                                                :ARG1-of (c17-5 / cause-01
                                                                :ARG0 (c17-3 / reason
                                                                             :polarity -))))))

# ::snt yes it is. Jus like all these white cops kill black kids &amp; get nuthin but paid leave.
# ::tokens ["yes", "it", "is", ".", "Jus", "like", "all", "these", "white", "cops", "kill", "black", "kids", "&", "amp", ";", "get", "nuthin", "but", "paid", "leave", "."]
# ::lemmas ["yes", "it", "be", ".", "Jus", "like", "all", "these", "white", "cop", "kill", "black", "kid", "&", "amp", ";", "get", "nuthin", "but", "pay", "leave", "."]
(c18-7 / multi-sentence
       :snt1 (c18-6 / yes)
       :snt2 (c18-0 / and
                    :op1 (c18-5 / kill-01
                                :ARG0 (c18-16 / cop
                                              :ARG1-of (c18-14 / white-02)
                                              :mod (c18-11 / all)
                                              :mod (c18-1 / this))
                                :ARG1 (c18-2 / and
                                             :op1 (c18-10 / kid)
                                             :op2 (c18-9 / amp)
                                             :ARG1-of (c18-4 / black-05)))
                    :op2 (c18-8 / get-05
                                :ARG0 (c18-3 / you)
                                :ARG1 (c18-12 / nuthin)
                                :concession-of (c18-13 / pay-01
                                                       :ARG0 c18-3
                                                       :ARG3 (c18-15 / leave-15
                                                                     :ARG0 c18-3)))))

# ::snt stupid shit. If it were a person of a different race they would've been shot. Since he was white they get him BK's BS
# ::tokens ["stupid", "shit", ".", "If", "it", "were", "a", "person", "of", "a", "different", "race", "they", "would", "'ve", "been", "shot", ".", "Since", "he", "was", "white", "they", "get", "him", "BK", "'s", "BS"]
# ::lemmas ["stupid", "shit", ".", "if", "it", "be", "a", "person", "of", "a", "different", "race", "they", "would", "'ve", "be", "shoot", ".", "since", "he", "be", "white", "they", "get", "he", "BK", "'s", "BS"]
(c19-4 / multi-sentence
       :snt1 (c19-8 / shit
                    :mod (c19-0 / stupid))
       :snt2 (c19-9 / shoot-02
                    :ARG1 (c19-1 / they)
                    :condition (c19-10 / person
                                       :mod (c19-2 / race
                                                   :ARG1-of (c19-15 / differ-02))
                                       :domain (c19-7 / it)))
       :snt3 (c19-13 / cause-01
                     :ARG0 (c19-12 / white-02
                                   :ARG1 (c19-14 / he))
                     :ARG1 (c19-5 / get-01
                                  :ARG0 c19-1
                                  :ARG1 (c19-3 / bullshit
                                               :poss (c19-6 / person
                                                            :name (c19-11 / name
                                                                          :op1 "BK")))
                                  :ARG2 c19-14)))

# ::snt salt in the wound
# ::tokens ["salt", "in", "the", "wound"]
# ::lemmas ["salt", "in", "the", "wound"]
(c20-1 / salt-01
       :location (c20-0 / wound))

# ::snt not you but the killer of the African American church
# ::tokens ["not", "you", "but", "the", "killer", "of", "the", "African", "American", "church"]
# ::lemmas ["not", "you", "but", "the", "killer", "of", "the", "African", "American", "church"]
(c21-7 / contrast-01
       :ARG1 (c21-4 / you
                    :polarity -)
       :ARG2 (c21-2 / kill-01
                    :ARG1 (c21-5 / church
                                 :mod (c21-1 / continent
                                             :name (c21-6 / name
                                                          :op1 "Africa"))
                                 :mod (c21-0 / country
                                             :name (c21-3 / name
                                                          :op1 "America")))))

# ::snt this FAG deserves to die in hell along with isis and kkk
# ::tokens ["this", "FAG", "deserves", "to", "die", "in", "hell", "along", "with", "isis", "and", "kkk"]
# ::lemmas ["this", "fag", "deserve", "to", "die", "in", "hell", "along", "with", "isis", "and", "kkk"]
(c22-10 / deserve-01
        :ARG0 (c22-0 / and
                     :op1 (c22-6 / person
                                 :name (c22-7 / name
                                              :op1 "Fag")
                                 :mod (c22-2 / this))
                     :op2 (c22-5 / person
                                 :name (c22-4 / name
                                              :op1 "isis"))
                     :op3 (c22-1 / person
                                 :name (c22-8 / name
                                              :op1 "kkk")))
        :ARG1 (c22-3 / die-01
                     :ARG1 c22-0)
        :location (c22-9 / hell))

# ::snt chill OUT, this gotta be a troll
# ::tokens ["chill", "OUT", ",", "this", "got", "ta", "be", "a", "troll"]
# ::lemmas ["chill", "OUT", ",", "this", "got", "to", "be", "a", "troll"]
(c23-0 / and
       :op1 (c23-5 / chill-out-03
                   :ARG0 (c23-3 / you)
                   :mode imperative)
       :op2 (c23-4 / get-03
                   :ARG1 (c23-1 / troll
                                :domain (c23-2 / this))))

# ::snt your character and what you are defending speaks more than the words you're tweeting.
# ::tokens ["your", "character", "and", "what", "you", "are", "defending", "speaks", "more", "than", "the", "words", "you", "'re", "tweeting", "."]
# ::lemmas ["your", "character", "and", "what", "you", "be", "defend", "speak", "more", "than", "the", "word", "you", "be", "tweet", "."]
(c24-6 / speak-01
       :ARG0 (c24-0 / and
                    :op1 (c24-9 / character
                                :poss (c24-4 / you))
                    :op2 (c24-1 / thing
                                :ARG1-of (c24-2 / defend-01
                                                :ARG0 c24-4)))
       :ARG1-of (c24-8 / have-quant-91
                       :ARG3 (c24-5 / more)
                       :ARG4 (c24-7 / word
                                    :ARG1-of (c24-3 / tweet-02
                                                    :ARG0 c24-4))))

# ::snt the real question is why is his height '0
# ::tokens ["the", "real", "question", "is", "why", "is", "his", "height", "'", "0"]
# ::lemmas ["the", "real", "question", "be", "why", "be", "his", "height", "'", "0"]
(c25-3 / question-01
       :ARG1 (c25-0 / thing
                    :ARG0-of (c25-7 / cause-01
                                    :ARG1 (c25-6 / high-02
                                                 :ARG1 (c25-4 / he)
                                                 :ARG2-of (c25-5 / have-degree-91
                                                                 :ARG1 c25-4
                                                                 :ARG3 (c25-2 / too)))))
       :ARG1-of (c25-1 / real-04))

# ::snt grade A bullshit
# ::tokens ["grade", "A", "bullshit"]
# ::lemmas ["grade", "a", "bullshit"]
(c26-0 / bullshit-01
       :mod (c26-1 / grade
                   :mod (c26-2 / string-entity
                               :value "A")))

# ::snt Please tell me this isn't real....
# ::tokens ["Please", "tell", "me", "this", "is", "n't", "real", "...."]
# ::lemmas ["please", "tell", "i", "this", "be", "not", "real", "...."]
(c27-0 / tell-01
       :ARG0 (c27-3 / you)
       :ARG1 (c27-1 / real-04
                    :ARG1 (c27-2 / this)
                    :polarity -)
       :ARG2 (c27-4 / i)
       :mode imperative
       :polite +)

# ::snt wtf...
# ::tokens ["wtf", "..."]
# ::lemmas ["wtf", "..."]
(c28-0 / amr-unknown
       :mod (c28-1 / fuck))

# ::snt not surprised tbh
# ::tokens ["not", "surprised", "tbh"]
# ::lemmas ["not", "surprised", "tbh"]
(c29-1 / surprise-01
       :ARG1-of (c29-0 / honest-01)
       :polarity -)

# ::snt wtf : After arrest, Dylann Roof was hungry. Police bought him food from Burger King.
# ::tokens ["wtf", ":", "After", "arrest", ",", "Dylann", "Roof", "was", "hungry", ".", "Police", "bought", "him", "food", "from", "Burger", "King", "."]
# ::lemmas ["wtf", ":", "after", "arrest", ",", "Dylann", "Roof", "be", "hungry", ".", "police", "buy", "he", "food", "from", "Burger", "King", "."]
(c30-5 / multi-sentence
       :snt1 (c30-10 / hunger-01
                     :ARG0 (c30-7 / person
                                  :name (c30-8 / name
                                               :op1 "Dylann"
                                               :op2 "Roof"))
                     :time (c30-0 / after
                                  :op1 (c30-11 / arrest-01
                                               :ARG1 c30-7))
                     :mod (c30-9 / fuck
                                 :mode expressive))
       :snt2 (c30-2 / buy-01
                    :ARG0 (c30-6 / police)
                    :ARG1 (c30-1 / food)
                    :ARG2 (c30-3 / company
                                 :name (c30-4 / name
                                              :op1 "Burger"
                                              :op2 "King"))
                    :ARG4 c30-7))

# ::snt its a customary tactic to make suspects more comfortable and more likely to talk
# ::tokens ["its", "a", "customary", "tactic", "to", "make", "suspects", "more", "comfortable", "and", "more", "likely", "to", "talk"]
# ::lemmas ["its", "a", "customary", "tactic", "to", "make", "suspect", "more", "comfortable", "and", "more", "likely", "to", "talk"]
(c31-1 / tactic
       :domain (c31-4 / make-02
                      :ARG1 (c31-0 / and
                                   :op1 (c31-12 / comfortable-02
                                                :ARG0 (c31-8 / person
                                                             :ARG2-of (c31-7 / suspect-01))
                                                :ARG2-of (c31-11 / have-degree-91
                                                                 :ARG1 c31-8
                                                                 :ARG3 (c31-2 / more)))
                                   :op2 (c31-10 / likely-01
                                                :ARG1 (c31-3 / talk-01
                                                             :ARG0 c31-8)
                                                :ARG2-of (c31-6 / have-degree-91
                                                                :ARG1 c31-3
                                                                :ARG3 (c31-9 / more)))))
       :ARG1-of (c31-5 / customary-02))

# ::snt notice how she said "black", instead of saying all ethnicities.
# ::tokens ["notice", "how", "she", "said", "\"", "black", "\"", ",", "instead", "of", "saying", "all", "ethnicities", "."]
# ::lemmas ["notice", "how", "she", "say", "\"", "black", "\"", ",", "instead", "of", "you", "all", "ethnicity", "."]
(c32-8 / notice-01
       :ARG0 (c32-5 / you)
       :ARG1 (c32-2 / thing
                    :manner-of (c32-7 / say-01
                                      :ARG0 (c32-0 / she)
                                      :ARG1 (c32-9 / person
                                                   :ARG1-of (c32-4 / black-05))
                                      :ARG1-of (c32-6 / instead-of-91
                                                      :ARG2 (c32-10 / say-01
                                                                    :ARG0 c32-0
                                                                    :ARG1 (c32-3 / ethnicity
                                                                                 :mod (c32-1 / all))))))
       :mode imperative)

# ::snt did the Burger King have poison in it?
# ::tokens ["did", "the", "Burger", "King", "have", "poison", "in", "it", "?"]
# ::lemmas ["do", "the", "Burger", "King", "have", "poison", "in", "it", "?"]
(c33-3 / poison-02
       :ARG1 (c33-1 / it)
       :polarity (c33-0 / amr-unknown)
       :ARG2 (c33-4 / company
                    :name (c33-2 / name
                                 :op1 "Burger"
                                 :op2 "King")))

# ::snt different states/departments.
# ::tokens ["different", "states", "/", "departments", "."]
# ::lemmas ["different", "state", "/", "department", "."]
(c34-2 / slash
       :op1 (c34-0 / state)
       :op2 (c34-3 / department)
       :ARG1-of (c34-1 / differ-02))

# ::snt We don't care "We" promise.
# ::tokens ["We", "do", "n't", "care", "\"", "We", "\"", "promise", "."]
# ::lemmas ["we", "do", "not", "care", "\"", "we", "\"", "promise", "."]
(c35-2 / care-01
       :ARG0 (c35-0 / we)
       :ARG1 (c35-1 / promise-01
                    :ARG0 c35-0)
       :polarity -)

# ::snt what does any of this have to do w selena? i stan selena so tf u on
# ::tokens ["what", "does", "any", "of", "this", "have", "to", "do", "w", "selena", "?", "i", "stan", "selena", "so", "tf", "u", "on"]
# ::lemmas ["what", "do", "any", "of", "this", "have", "to", "do", "w", "selena", "?", "i", "stan", "selena", "so", "tf", "u", "on"]
(c36-4 / multi-sentence
       :snt1 (c36-11 / have-to-do-with-04
                     :ARG0 (c36-1 / this
                                  :mod (c36-0 / any))
                     :ARG1 (c36-12 / country
                                   :name (c36-9 / name
                                                :op1 "Saudi"
                                                :op2 "Arabia"))
                     :ARG2 (c36-7 / amr-unknown)
                     :polarity (c36-2 / amr-unknown))
       :snt2 (c36-5 / cause-01
                    :ARG0 (c36-6 / have-03
                                 :ARG0 (c36-8 / i)
                                 :ARG1 c36-12)
                    :ARG1 (c36-10 / on
                                  :domain (c36-3 / you))))

# ::snt Later.
# ::tokens ["Later", "."]
# ::lemmas ["later", "."]
(c37-0 / after)

# ::snt Its all there, even in one comment.
# ::tokens ["Its", "all", "there", ",", "even", "in", "one", "comment", "."]
# ::lemmas ["its", "all", "there", ",", "even", "in", "one", "comment", "."]
(c38-3 / be-located-at-91
       :ARG1 (c38-0 / all)
       :ARG2 (c38-1 / there)
       :concession (c38-4 / comment-01
                          :mod (c38-2 / even)
                          :quant 1))

# ::snt Let it be written.
# ::tokens ["Let", "it", "be", "written", "."]
# ::lemmas ["let", "it", "be", "write", "."]
(c39-2 / let-01
       :ARG0 (c39-3 / you)
       :ARG1 (c39-1 / write-01
                    :ARG1 (c39-0 / it))
       :mode imperative)

# ::snt I hop in when ever I read anything against Selena and the masses of Bigots targeting her w/"hate."
# ::tokens ["I", "hop", "in", "when", "ever", "I", "read", "anything", "against", "Selena", "and", "the", "masses", "of", "Bigots", "targeting", "her", "w/\"hate", ".", "\""]
# ::lemmas ["i", "hop", "in", "when", "ever", "i", "read", "anything", "against", "Selena", "and", "the", "masse", "of", "Bigots", "target", "she", "w/\"hate", ".", "\""]
(c40-11 / hop-in-00
        :ARG0 (c40-7 / i)
        :time (c40-3 / read-01
                     :ARG0 c40-7
                     :ARG1 (c40-0 / anything
                                  :ARG0-of (c40-10 / oppose-01
                                                   :ARG1 (c40-12 / and
                                                                 :op1 (c40-8 / person
                                                                             :name (c40-9 / name
                                                                                          :op1 "Selena"))
                                                                 :op2 (c40-4 / bigot
                                                                             :quant (c40-5 / mass)
                                                                             :ARG0-of (c40-1 / target-01
                                                                                             :ARG1 c40-8)))))
                     :mod (c40-2 / any))
        :manner (c40-6 / hate-01
                       :ARG0 c40-7))

# ::snt this bitch didn't even read the full conversation. im sleep
# ::tokens ["this", "bitch", "did", "n't", "even", "read", "the", "full", "conversation", ".", "i", "m", "sleep"]
# ::lemmas ["this", "bitch", "do", "not", "even", "read", "the", "full", "conversation", ".", "i", "m", "sleep"]
(c41-4 / multi-sentence
       :snt1 (c41-1 / read-01
                    :ARG0 (c41-3 / bitch
                                 :mod (c41-0 / this))
                    :ARG1 (c41-8 / converse-01
                                 :mod (c41-7 / full))
                    :mod (c41-2 / even)
                    :polarity -)
       :snt2 (c41-6 / sleep-01
                    :ARG0 (c41-5 / i)))

# ::snt Its not misconstrued but accurate by means of reason and logic.
# ::tokens ["Its", "not", "misconstrued", "but", "accurate", "by", "means", "of", "reason", "and", "logic", "."]
# ::lemmas ["its", "not", "misconstrue", "but", "accurate", "by", "mean", "of", "reason", "and", "logic", "."]
(c42-6 / contrast-01
       :ARG1 (c42-3 / misconstrue-01
                    :ARG1 (c42-4 / it)
                    :polarity -)
       :ARG2 (c42-0 / accurate
                    :domain c42-4
                    :manner (c42-2 / means
                                   :mod (c42-1 / reason)
                                   :mod (c42-5 / logic))))

# ::snt Derailment is denial. Grow a brain then comment.
# ::tokens ["Derailment", "is", "denial", ".", "Grow", "a", "brain", "then", "comment", "."]
# ::lemmas ["derailment", "be", "denial", ".", "grow", "a", "brain", "then", "comment", "."]
(c43-5 / multi-sentence
       :snt1 (c43-7 / deny-01
                    :domain c43-7)
       :snt2 (c43-0 / and
                    :op1 (c43-4 / grow-03
                                :ARG0 (c43-3 / you)
                                :ARG1 (c43-2 / brain)
                                :mode imperative)
                    :op2 (c43-6 / comment-01
                                :ARG0 c43-3
                                :mod (c43-1 / then)
                                :mode imperative)))

# ::snt I read other comments not just one or two.
# ::tokens ["I", "read", "other", "comments", "not", "just", "one", "or", "two", "."]
# ::lemmas ["i", "read", "other", "comment", "not", "just", "one", "or", "two", "."]
(c44-7 / contrast-01
       :ARG1 (c44-0 / read-01
                    :ARG0 (c44-5 / i)
                    :ARG1 (c44-3 / comment-01
                                 :mod (c44-6 / other)))
       :ARG2 (c44-4 / read-01
                    :ARG0 c44-5
                    :ARG1 c44-3
                    :quant (c44-2 / or
                                  :op1 1
                                  :op2 2)
                    :mod (c44-1 / just)
                    :polarity -))

# ::snt You seriously need to be educated asap. fucking moron.
# ::tokens ["You", "seriously", "need", "to", "be", "educated", "asap", ".", "fucking", "moron", "."]
# ::lemmas ["you", "seriously", "need", "to", "be", "educate", "asap", ".", "fucking", "moron", "."]
(c45-4 / multi-sentence
       :snt1 (c45-6 / need-01
                    :ARG0 (c45-3 / you)
                    :ARG1 (c45-1 / educate-01
                                 :ARG1 c45-3
                                 :manner (c45-0 / as-apart))
                    :ARG2-of (c45-5 / serious-01))
       :snt2 (c45-2 / moron
                    :ARG0-of (c45-7 / fuck-01)))

# ::snt I get it: logic is not your strength so it appears like "random."
# ::tokens ["I", "get", "it", ":", "logic", "is", "not", "your", "strength", "so", "it", "appears", "like", "\"", "random", ".", "\""]
# ::lemmas ["i", "get", "it", ":", "logic", "be", "not", "your", "strength", "so", "it", "appear", "like", "\"", "random", ".", "\""]
(c46-3 / get-01
       :ARG0 (c46-5 / i)
       :ARG1 (c46-8 / cause-01
                    :ARG0 (c46-6 / strong-02
                                 :ARG1 (c46-7 / logic)
                                 :poss (c46-2 / you)
                                 :polarity -)
                    :ARG1 (c46-0 / appear-02
                                 :ARG1 (c46-1 / resemble-01
                                              :ARG1 c46-7
                                              :ARG2 (c46-4 / random)))))

# ::snt People get shot from resisting &amp; running. This man was taken down by a man then arrested.GROWABRAIN
# ::tokens ["People", "get", "shot", "from", "resisting", "&", "amp", ";", "running", ".", "This", "man", "was", "taken", "down", "by", "a", "man", "then", "arrested", ".", "GROWABRAIN"]
# ::lemmas ["people", "get", "shoot", "from", "resist", "&", "amp", ";", "run", ".", "this", "man", "be", "take", "down", "by", "a", "man", "then", "arrest", ".", "GROWABRAIN"]
(c47-8 / multi-sentence
       :snt1 (c47-9 / get-04
                    :ARG0 (c47-0 / and
                                 :op1 (c47-4 / resist-01
                                             :ARG0 (c47-13 / person))
                                 :op2 (c47-15 / amp)
                                 :op3 (c47-11 / run-02
                                              :ARG0 c47-13))
                    :ARG1 (c47-12 / shoot-02
                                  :ARG1 (c47-10 / person)))
       :snt2 (c47-2 / take-down-22
                    :ARG0 (c47-5 / man
                                 :mod (c47-6 / this))
                    :ARG1 (c47-14 / man
                                  :ARG1-of (c47-3 / arrest-01
                                                  :time (c47-7 / then))))
       :snt3 (c47-1 / spoil-01))

# ::snt These people, like most, lack logic. More so, BK is unhealthy, which should make those Bigots happy.
# ::tokens ["These", "people", ",", "like", "most", ",", "lack", "logic", ".", "More", "so", ",", "BK", "is", "unhealthy", ",", "which", "should", "make", "those", "Bigots", "happy", "."]
# ::lemmas ["these", "people", ",", "like", "most", ",", "lack", "logic", ".", "more", "so", ",", "BK", "be", "unhealthy", ",", "which", "should", "make", "those", "Bigots", "happy", "."]
(c48-7 / multi-sentence
       :snt1 (c48-16 / lack-01
                     :ARG0 (c48-12 / person
                                   :mod (c48-1 / this)
                                   :ARG1-of (c48-3 / resemble-01
                                                   :ARG2 (c48-8 / person
                                                                :mod (c48-4 / most))))
                     :ARG1 (c48-2 / logic))
       :snt2 (c48-17 / have-degree-91
                     :ARG1 (c48-0 / political-movement
                                  :name (c48-13 / name
                                                :op1 "BK"))
                     :ARG2 (c48-10 / healthy
                                   :polarity -)
                     :ARG3 (c48-11 / more)
                     :ARG0-of (c48-14 / make-02
                                      :ARG1 (c48-15 / happy-01
                                                    :ARG1 (c48-5 / bigot
                                                                 :mod (c48-6 / that)))
                                      :ARG1-of (c48-9 / recommend-01))))

# ::snt Even if what I know (or learn) doesn't fit into my predetermined world view.
# ::tokens ["Even", "if", "what", "I", "know", "(", "or", "learn", ")", "does", "n't", "fit", "into", "my", "predetermined", "world", "view", "."]
# ::lemmas ["even", "if", "what", "i", "know", "(", "or", "learn", ")", "do", "not", "fit", "into", "my", "predetermined", "world", "view", "."]
(c49-11 / have-concession-91
        :ARG2 (c49-1 / even-if
                     :op1 (c49-10 / fit-06
                                  :ARG1 (c49-6 / or
                                               :op1 (c49-0 / thing
                                                           :ARG1-of (c49-2 / know-01
                                                                           :ARG0 (c49-4 / i)))
                                               :op2 (c49-3 / thing
                                                           :ARG1-of (c49-9 / learn-01
                                                                           :ARG0 c49-4)))
                                  :ARG2 (c49-7 / view-01
                                               :ARG0 c49-4
                                               :ARG1 (c49-8 / world)
                                               :ARG1-of (c49-5 / predetermine-01))
                                  :polarity -)))

# ::snt You want my honest opinion, I think % of cops are racist cunts, but I still don't mind knowing a thing or
# ::tokens ["You", "want", "my", "honest", "opinion", ",", "I", "think", "%", "of", "cops", "are", "racist", "cunts", ",", "but", "I", "still", "do", "n't", "mind", "knowing", "a", "thing", "or"]
# ::lemmas ["you", "want", "my", "honest", "opinion", ",", "i", "think", "%", "of", "cop", "be", "racist", "cunt", ",", "but", "i", "still", "do", "not", "mind", "know", "a", "thing", "or"]
(c50-11 / and
        :op1 (c50-3 / want-01
                    :ARG0 (c50-15 / you)
                    :ARG1 (c50-0 / thing
                                 :ARG1-of (c50-18 / opine-01
                                                  :ARG0 (c50-2 / i)
                                                  :ARG1-of (c50-9 / honest-01))))
        :op2 (c50-10 / contrast-01
                     :ARG1 (c50-1 / think-01
                                  :ARG0 c50-2
                                  :ARG1 (c50-8 / include-91
                                               :ARG1 (c50-13 / cop)
                                               :ARG2 (c50-4 / cop)
                                               :ARG3 (c50-14 / percentage-entity)))
                     :ARG2 (c50-16 / mind-01
                                   :ARG0 c50-2
                                   :ARG1 (c50-5 / know-01
                                                :ARG0 c50-2
                                                :ARG1 (c50-12 / or
                                                              :op1 (c50-6 / thing)
                                                              :op2 (c50-17 / thing)))
                                   :mod (c50-7 / still)
                                   :polarity -)))
