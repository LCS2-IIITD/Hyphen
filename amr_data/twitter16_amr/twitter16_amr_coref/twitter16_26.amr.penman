# ::snt It seems the young men outnumber any Oder, younger, females. I would be suspicious and keep them surrounded until verification.
# ::tokens ["It", "seems", "the", "young", "men", "outnumber", "any", "Oder", ",", "younger", ",", "females", ".", "I", "would", "be", "suspicious", "and", "keep", "them", "surrounded", "until", "verification", "."]
# ::lemmas ["it", "seem", "the", "young", "man", "outnumber", "any", "Oder", ",", "young", ",", "female", ".", "i", "would", "be", "suspicious", "and", "keep", "they", "surround", "until", "verification", "."]
(c1-8 / multi-sentence
      :snt1 (c1-10 / seem-01
                   :ARG1 (c1-13 / outnumber-01
                                :ARG1 (c1-5 / man
                                            :mod (c1-7 / young))
                                :ARG2 (c1-15 / female
                                             :mod (c1-0 / any)
                                             :ARG1-of (c1-16 / have-degree-91
                                                             :ARG2 (c1-4 / young)
                                                             :ARG3 (c1-12 / more)))))
      :snt2 (c1-17 / and
                   :op1 (c1-1 / suspicious-02
                              :ARG0 (c1-9 / i))
                   :op2 (c1-6 / keep-02
                              :ARG0 c1-9
                              :ARG1 (c1-11 / surround-01
                                           :ARG1 (c1-3 / they))
                              :time (c1-14 / until
                                           :op1 (c1-2 / verify-01
                                                      :ARG1 c1-3)))))

# ::snt GIVE THEM PORK! GIVE THEM PORK!GIVE THEM PORK!GIVE THEM PORK!
# ::tokens ["GIVE", "THEM", "PORK", "!", "GIVE", "THEM", "PORK!GIVE", "THEM", "PORK!GIVE", "THEM", "PORK", "!"]
# ::lemmas ["give", "they", "pork", "!", "give", "THEM", "pork!give", "they", "pork!give", "they", "pork", "!"]
(c2-5 / multi-sentence
      :snt1 (c2-6 / give-01
                  :ARG0 (c2-4 / you)
                  :ARG1 (c2-10 / pork)
                  :ARG2 (c2-1 / they)
                  :mode imperative)
      :snt2 (c2-7 / give-01
                  :ARG0 (c2-2 / you)
                  :ARG1 (c2-8 / pork)
                  :ARG2 (c2-3 / they)
                  :mode imperative)
      :snt3 (c2-11 / give-01
                   :ARG0 (c2-9 / you)
                   :ARG1 (c2-0 / pork)
                   :ARG2 c2-3
                   :mode imperative))

# ::snt THEY ARE ENCOURAGED TO LEAVE BY THERE COUNTRY TO CAUSE DESTABILIZATION AROUND THE WORLD. O &amp; KERRY R FALLING THIS
# ::tokens ["THEY", "ARE", "ENCOURAGED", "TO", "LEAVE", "BY", "THERE", "COUNTRY", "TO", "CAUSE", "DESTABILIZATION", "AROUND", "THE", "WORLD", ".", "O", "&", "amp", ";", "KERRY", "R", "FALLING", "THIS"]
# ::lemmas ["they", "be", "encouraged", "to", "leave", "by", "there", "COUNTRY", "to", "cause", "destabilization", "around", "the", "world", ".", "O", "&", "amp", ";", "KERRY", "R", "FALLING", "THIS"]
(c3-6 / multi-sentence
      :snt1 (c3-8 / induce-01
                  :ARG1 (c3-1 / they)
                  :ARG2 (c3-12 / leave-11
                               :ARG0 c3-1
                               :ARG1 (c3-15 / country
                                            :location (c3-3 / there))
                               :purpose (c3-13 / facilitate-01
                                               :ARG0 c3-1
                                               :ARG1 (c3-14 / isolate-01
                                                            :location (c3-11 / world)))))
      :snt2 (c3-0 / and
                  :op1 (c3-9 / person
                             :name (c3-10 / name
                                          :op1 "O'amp"))
                  :op2 (c3-2 / fight-01
                             :ARG0 (c3-7 / person
                                         :name (c3-4 / name
                                                     :op1 "Kerry"))
                             :ARG2 (c3-5 / this))))

# ::snt Not surprised! Why aren't the young men defending their country? Most seem to be young men
# ::tokens ["Not", "surprised", "!", "Why", "are", "n't", "the", "young", "men", "defending", "their", "country", "?", "Most", "seem", "to", "be", "young", "men"]
# ::lemmas ["not", "surprised", "!", "why", "be", "not", "the", "young", "man", "defend", "their", "country", "?", "most", "seem", "to", "be", "young", "man"]
(c4-5 / multi-sentence
      :snt1 (c4-7 / surprise-01
                  :polarity -
                  :mode expressive)
      :snt2 (c4-11 / defend-01
                   :ARG0 (c4-3 / man
                               :mod (c4-4 / young))
                   :ARG1 (c4-10 / country
                                :poss c4-3)
                   :ARG1-of (c4-6 / cause-01
                                  :ARG0 (c4-0 / amr-unknown))
                   :polarity -)
      :snt3 (c4-1 / seem-01
                  :ARG1 (c4-9 / man
                              :mod (c4-2 / young)
                              :domain (c4-8 / most))))

# ::snt and this is just the appetiser. Wait till they have settled in
# ::tokens ["and", "this", "is", "just", "the", "appetiser", ".", "Wait", "till", "they", "have", "settled", "in"]
# ::lemmas ["and", "this", "be", "just", "the", "appetiser", ".", "wait", "till", "they", "have", "settle", "in"]
(c5-6 / multi-sentence
      :snt1 (c5-0 / and
                  :op2 (c5-1 / thing
                             :ARG0-of (c5-10 / appetize-01)
                             :mod (c5-2 / just)
                             :domain (c5-3 / this)))
      :snt2 (c5-9 / wait-01
                  :ARG1 (c5-5 / you)
                  :time (c5-7 / until
                              :op1 (c5-8 / settle-in-05
                                         :ARG1 (c5-4 / they)))
                  :mode imperative))

# ::snt ( Congress must STOP INVASION of Refugees) You R putting the American people at risk.) DO NOT fund any of this!
# ::tokens ["(", "Congress", "must", "STOP", "INVASION", "of", "Refugees", ")", "You", "R", "putting", "the", "American", "people", "at", "risk", ".", ")", "DO", "NOT", "fund", "any", "of", "this", "!"]
# ::lemmas ["(", "Congress", "must", "stop", "INVASION", "of", "Refugees", ")", "you", "r", "put", "the", "American", "people", "at", "risk", ".", ")", "do", "not", "fund", "any", "of", "this", "!"]
(c6-5 / multi-sentence
      :snt1 (c6-12 / obligate-01
                   :ARG1 (c6-6 / government-organization
                               :name (c6-10 / name
                                            :op1 "Congress"))
                   :ARG2 (c6-9 / stop-01
                               :ARG0 c6-6
                               :ARG1 (c6-8 / investigate-01
                                           :ARG0 c6-6
                                           :ARG1 (c6-2 / refugee))))
      :snt2 (c6-7 / risk-01
                  :ARG0 (c6-4 / you)
                  :ARG2 (c6-11 / person
                               :mod (c6-14 / country
                                           :name (c6-3 / name
                                                       :op1 "America"))))
      :snt3 (c6-13 / fund-01
                   :ARG0 c6-4
                   :mode imperative
                   :polarity -)
      :ARG1 (c6-1 / this
                  :mod (c6-0 / any)))

# ::snt Feed those poor "refugees" strick9 halal
# ::tokens ["Feed", "those", "poor", "\"", "refugees", "\"", "strick9", "halal"]
# ::lemmas ["feed", "those", "poor", "\"", "refugee", "\"", "strick9", "halal"]
(c7-6 / feed-01
      :ARG0 (c7-2 / you)
      :ARG2 (c7-4 / person
                  :name (c7-5 / name
                              :op1 "Strick9"
                              :op2 "Halal")
                  :mod (c7-3 / poor)
                  :ARG0-of (c7-1 / flee-05)
                  :mod (c7-0 / that))
      :mode imperative)

# ::snt Just wait a day or two.
# ::tokens ["Just", "wait", "a", "day", "or", "two", "."]
# ::lemmas ["just", "wait", "a", "day", "or", "two", "."]
(c8-6 / wait-01
      :ARG1 (c8-4 / you)
      :mod (c8-2 / just)
      :duration (c8-5 / or
                      :op1 (c8-0 / temporal-quantity
                                 :unit (c8-7 / day)
                                 :quant 1)
                      :op2 (c8-3 / temporal-quantity
                                 :unit (c8-1 / day)
                                 :quant 2))
      :mode imperative)

# ::snt so wtf is Europe doing are they dumb foolish out of touch or about to go the way of the dinosaur
# ::tokens ["so", "wtf", "is", "Europe", "doing", "are", "they", "dumb", "foolish", "out", "of", "touch", "or", "about", "to", "go", "the", "way", "of", "the", "dinosaur"]
# ::lemmas ["so", "wtf", "be", "Europe", "do", "be", "they", "dumb", "foolish", "out", "of", "touch", "or", "about", "to", "go", "the", "way", "of", "the", "dinosaur"]
(c9-5 / do-02
      :ARG0 (c9-12 / continent
                   :name (c9-9 / name
                               :op1 "Europe"))
      :ARG1 (c9-0 / amr-choice
                  :op1 (c9-11 / foolish
                              :mod (c9-1 / dumb)
                              :domain (c9-2 / they)
                              :ARG1-of (c9-7 / in-touch-11
                                             :polarity -))
                  :op2 (c9-6 / go-06
                             :ARG0 c9-2
                             :ARG1 (c9-10 / way
                                          :poss (c9-4 / dinosaur))
                             :time (c9-8 / about-to)))
      :mod (c9-3 / fuck
                 :mode expressive))

# ::snt Someone who is truly hungry will eat whatever. These people seek to live off the backs of others and tell them how it is. Wrong
# ::tokens ["Someone", "who", "is", "truly", "hungry", "will", "eat", "whatever", ".", "These", "people", "seek", "to", "live", "off", "the", "backs", "of", "others", "and", "tell", "them", "how", "it", "is", ".", "Wrong"]
# ::lemmas ["someone", "who", "be", "truly", "hungry", "will", "eat", "whatever", ".", "these", "people", "seek", "to", "live", "off", "the", "back", "of", "other", "and", "tell", "they", "how", "it", "be", ".", "wrong"]
(c10-8 / multi-sentence
       :snt1 (c10-3 / eat-01
                    :ARG0 (c10-12 / someone
                                  :ARG0-of (c10-17 / hunger-01
                                                   :degree (c10-2 / truly)))
                    :ARG1 (c10-15 / whatever))
       :snt2 (c10-0 / seek-01
                    :ARG0 (c10-13 / person
                                  :mod (c10-5 / this))
                    :ARG1 (c10-1 / and
                                 :op1 (c10-16 / live-01
                                              :ARG0 c10-13
                                              :manner (c10-14 / off
                                                              :op1 (c10-4 / back
                                                                          :part-of (c10-9 / person
                                                                                          :mod (c10-6 / other)))))
                                 :op2 (c10-7 / tell-01
                                             :ARG0 c10-13
                                             :ARG1 (c10-10 / thing
                                                           :manner-of c10-16)
                                             :ARG2 c10-9)))
       :snt3 (c10-11 / wrong-02))

# ::snt F 'em!
# ::tokens ["F", "'em", "!"]
# ::lemmas ["f", "'em", "!"]
(c11-1 / fuck-01
       :ARG1 (c11-0 / they)
       :mode expressive)

# ::snt Ha. Only one who has audience. You don't listen to him. You should.
# ::tokens ["Ha", ".", "Only", "one", "who", "has", "audience", ".", "You", "do", "n't", "listen", "to", "him", ".", "You", "should", "."]
# ::lemmas ["ha", ".", "only", "one", "who", "have", "audience", ".", "you", "do", "not", "listen", "to", "he", ".", "you", "should", "."]
(c12-5 / multi-sentence
       :snt1 (c12-7 / one
                    :mod (c12-3 / only)
                    :ARG0-of (c12-9 / have-03
                                    :ARG1 (c12-0 / audience)))
       :snt2 (c12-8 / listen-01
                    :ARG0 (c12-4 / you)
                    :ARG1 (c12-6 / he)
                    :polarity -)
       :snt3 (c12-1 / recommend-01
                    :ARG2 (c12-2 / you)))

# ::snt Trump needs an audience. More he blurts more he sounds schmucky Hardly presidential
# ::tokens ["Trump", "needs", "an", "audience", ".", "More", "he", "blurts", "more", "he", "sounds", "schmucky", "Hardly", "presidential"]
# ::lemmas ["Trump", "need", "an", "audience", ".", "more", "he", "blurt", "more", "he", "sound", "schmucky", "Hardly", "presidential"]
(c13-6 / multi-sentence
       :snt1 (c13-11 / need-01
                     :ARG0 (c13-10 / person
                                   :name (c13-4 / name
                                                :op1 "Trump"))
                     :ARG1 (c13-0 / audience))
       :snt2 (c13-14 / have-quant-91
                     :ARG1 (c13-3 / blur-01
                                  :ARG0 (c13-8 / he))
                     :ARG3 (c13-5 / more)
                     :ARG6 (c13-9 / sound-01
                                  :ARG1 c13-8
                                  :ARG2 (c13-1 / schmucky)
                                  :manner (c13-7 / person
                                                 :ARG0-of (c13-12 / have-org-role-91
                                                                  :ARG2 (c13-2 / president))
                                                 :mod (c13-13 / hardly)))))

# ::snt Standing ovation Trump just now. "We have to stop illegal immigration. We want legal ones."
# ::tokens ["Standing", "ovation", "Trump", "just", "now", ".", "\"", "We", "have", "to", "stop", "illegal", "immigration", ".", "We", "want", "legal", "ones", ".", "\""]
# ::lemmas ["standing", "ovation", "Trump", "just", "now", ".", "\"", "we", "have", "to", "stop", "illegal", "immigration", ".", "we", "want", "legal", "one", ".", "\""]
(c14-7 / multi-sentence
       :snt1 (c14-12 / ovation-01
                     :ARG1 (c14-10 / person
                                   :name (c14-11 / name
                                                 :op1 "Trump"))
                     :manner (c14-9 / stand-01)
                     :time (c14-4 / now
                                  :mod (c14-3 / just)))
       :snt2 (c14-0 / say-01
                    :ARG0 (c14-14 / we)
                    :ARG1 (c14-5 / obligate-01
                                 :ARG1 c14-14
                                 :ARG2 (c14-13 / stop-01
                                               :ARG0 c14-14
                                               :ARG1 (c14-8 / immigrate-01
                                                            :ARG1-of (c14-15 / legal-02
                                                                             :polarity -))))
                    :ARG2 (c14-6 / want-01
                                 :ARG0 c14-14
                                 :ARG1 (c14-1 / one
                                              :ARG1-of (c14-2 / legal-02)))))

# ::snt not desperate. Not refugees.
# ::tokens ["not", "desperate", ".", "Not", "refugees", "."]
# ::lemmas ["not", "desperate", ".", "not", "refugee", "."]
(c15-1 / multi-sentence
       :snt1 (c15-2 / despair-01
                    :polarity -)
       :snt2 (c15-0 / refugee
                    :polarity -))

# ::snt If they cared for their own country they would go back and fight that mess, and earn their freedom.
# ::tokens ["If", "they", "cared", "for", "their", "own", "country", "they", "would", "go", "back", "and", "fight", "that", "mess", ",", "and", "earn", "their", "freedom", "."]
# ::lemmas ["if", "they", "care", "for", "their", "own", "country", "they", "would", "go", "back", "and", "fight", "that", "mess", ",", "and", "earn", "their", "freedom", "."]
(c16-0 / and
       :op1 (c16-6 / go-back-19
                   :ARG1 (c16-1 / they))
       :op2 (c16-8 / fight-01
                   :ARG0 c16-1
                   :ARG2 (c16-5 / mess
                                :mod (c16-4 / that)))
       :op3 (c16-2 / earn-01
                   :ARG0 c16-1
                   :ARG1 (c16-3 / free-04
                                :ARG1 c16-1))
       :condition (c16-9 / care-01
                         :ARG0 c16-1
                         :ARG1 (c16-7 / country
                                      :poss c16-1)))

# ::snt our new leader Trump LIVE right now streaming
# ::tokens ["our", "new", "leader", "Trump", "LIVE", "right", "now", "streaming"]
# ::lemmas ["our", "new", "leader", "Trump", "LIVE", "right", "now", "stream"]
(c17-3 / stream-01
       :ARG1 (c17-4 / person
                    :name (c17-5 / name
                                 :op1 "Trump")
                    :ARG0-of (c17-8 / lead-02
                                    :ARG1 (c17-7 / we))
                    :ARG1-of (c17-2 / new-01))
       :medium (c17-0 / live)
       :time (c17-6 / now
                    :mod (c17-1 / right)))

# ::snt You will identify them immediately..not many fatties.Gee America is fattening up!
# ::tokens ["You", "will", "identify", "them", "immediately", "..", "not", "many", "fatties", ".", "Gee", "America", "is", "fattening", "up", "!"]
# ::lemmas ["you", "will", "identify", "they", "immediately", "..", "not", "many", "fatty", ".", "Gee", "America", "be", "fatten", "up", "!"]
(c18-4 / multi-sentence
       :snt1 (c18-6 / identify-01
                    :ARG0 (c18-3 / you)
                    :ARG1 (c18-0 / they)
                    :time (c18-9 / immediate))
       :snt2 (c18-8 / fattie
                    :quant (c18-2 / many
                                  :polarity -)
                    :mod (c18-5 / gee
                                :mode expressive))
       :snt3 (c18-1 / fatten-up-02
                    :ARG0 (c18-10 / country
                                  :name (c18-7 / name
                                               :op1 "America")
                                  :mod c18-5
                                  :mode expressive)
                    :mode expressive))

# ::snt Guess is a bit much to digest.Shoulda kept quiet at onset Now more packed their bags ..
# ::tokens ["Guess", "is", "a", "bit", "much", "to", "digest", ".", "Shoulda", "kept", "quiet", "at", "onset", "Now", "more", "packed", "their", "bags", ".."]
# ::lemmas ["Guess", "be", "a", "bit", "much", "to", "digest", ".", "Shoulda", "keep", "quiet", "at", "onset", "now", "more", "pack", "their", "bag", ".."]
(c19-6 / multi-sentence
       :snt1 (c19-7 / guess-01
                    :ARG1 (c19-2 / much
                                 :degree (c19-3 / bit)
                                 :domain (c19-13 / digest-01)))
       :snt2 (c19-1 / recommend-01
                    :ARG1 (c19-4 / keep-02
                                 :ARG1 (c19-8 / quiet-04
                                              :ARG1 (c19-0 / they
                                                           :quant (c19-10 / more)))
                                 :time (c19-11 / onset)))
       :snt3 (c19-9 / pack-01
                    :ARG0 c19-0
                    :ARG2 (c19-5 / bag
                                 :poss c19-0)
                    :time (c19-12 / now)))

# ::snt Nice people these refugeesSomething is rotten in Denmark ..errr Iraq/Syria/ etc...
# ::tokens ["Nice", "people", "these", "refugeesSomething", "is", "rotten", "in", "Denmark", "..", "errr", "Iraq", "/", "Syria/", "etc", "..."]
# ::lemmas ["nice", "people", "these", "refugeessomethe", "be", "rotten", "in", "Denmark", "..", "errr", "Iraq", "/", "Syria/", "etc", "..."]
(c20-8 / multi-sentence
       :snt1 (c20-11 / say-01
                     :ARG1 (c20-13 / nice-01)
                     :ARG2 (c20-12 / person
                                   :mod (c20-2 / refugee
                                               :mod (c20-1 / this))))
       :snt2 (c20-10 / rot-01
                     :ARG1 (c20-0 / something)
                     :location (c20-16 / country
                                       :name (c20-5 / name
                                                    :op1 "Denmark"))
                     :ARG1-of (c20-4 / mean-01
                                     :ARG2 (c20-14 / slash
                                                   :op1 (c20-9 / country
                                                               :name (c20-15 / name
                                                                             :op1 "Iraq"))
                                                   :op2 (c20-6 / country
                                                               :name (c20-3 / name
                                                                            :op1 "Syria"))
                                                   :op3 (c20-7 / et-cetera)))))

# ::snt There is a problem and much of the problem lies with the people themselves.Stay close to home...
# ::tokens ["There", "is", "a", "problem", "and", "much", "of", "the", "problem", "lies", "with", "the", "people", "themselves", ".", "Stay", "close", "to", "home", "..."]
# ::lemmas ["there", "be", "a", "problem", "and", "much", "of", "the", "problem", "lie", "with", "the", "people", "themselves", ".", "stay", "close", "to", "home", "..."]
(c21-5 / multi-sentence
       :snt1 (c21-0 / and
                    :op1 (c21-7 / problem)
                    :op2 (c21-8 / lie-07
                                :ARG1 (c21-4 / problem
                                             :quant (c21-2 / much))
                                :ARG2 (c21-1 / person)))
       :snt2 (c21-6 / stay-01
                    :ARG1 (c21-3 / you)
                    :ARG3 (c21-10 / close-10
                                  :ARG1 c21-3
                                  :ARG2 (c21-9 / home))
                    :mode imperative))

# ::snt Let them eat cake...
# ::tokens ["Let", "them", "eat", "cake", "..."]
# ::lemmas ["let", "they", "eat", "cake", "..."]
(c22-3 / let-01
       :ARG0 (c22-2 / you)
       :ARG1 (c22-1 / eat-01
                    :ARG0 (c22-0 / they)
                    :ARG1 (c22-4 / cake))
       :mode imperative)

# ::snt If Obama wants it, he'll get it.
# ::tokens ["If", "Obama", "wants", "it", ",", "he", "'ll", "get", "it", "."]
# ::lemmas ["if", "Obama", "want", "it", ",", "he", "'ll", "get", "it", "."]
(c23-0 / get-01
       :ARG0 (c23-2 / person
                    :name (c23-3 / name
                                 :op1 "Obama"))
       :ARG1 (c23-1 / it)
       :condition (c23-4 / want-01
                         :ARG0 c23-2
                         :ARG1 c23-1))

# ::snt It's not halal.
# ::tokens ["It", "'s", "not", "halal", "."]
# ::lemmas ["it", "be", "not", "halal", "."]
(c24-1 / halal
       :domain (c24-0 / it)
       :polarity -)

# ::snt refugees or new invaders?
# ::tokens ["refugees", "or", "new", "invaders", "?"]
# ::lemmas ["refugee", "or", "new", "invader", "?"]
(c25-0 / amr-choice
       :op1 (c25-1 / refugee)
       :op2 (c25-3 / person
                   :ARG0-of (c25-2 / invade-01)
                   :ARG1-of (c25-4 / new-01)))

# ::snt Let them go to countries with the same culture as theirs. Oh wait...Those countries don't want them. Wonder Why?
# ::tokens ["Let", "them", "go", "to", "countries", "with", "the", "same", "culture", "as", "theirs", ".", "Oh", "wait", "...", "Those", "countries", "do", "n't", "want", "them", ".", "Wonder", "Why", "?"]
# ::lemmas ["let", "they", "go", "to", "country", "with", "the", "same", "culture", "as", "theirs", ".", "oh", "wait", "...", "those", "country", "do", "not", "want", "they", ".", "wonder", "why", "?"]
(c26-17 / multi-sentence
        :snt1 (c26-10 / let-01
                      :ARG1 (c26-8 / go-01
                                   :ARG1 (c26-1 / they)
                                   :ARG4 (c26-12 / country
                                                 :ARG0-of (c26-11 / have-03
                                                                  :ARG1 (c26-14 / culture
                                                                                :ARG1-of (c26-9 / same-01
                                                                                                :ARG2 (c26-5 / culture
                                                                                                             :poss (c26-2 / they)))))))
                      :snt2 (c26-3 / wait-01
                                   :ARG1 (c26-16 / you)
                                   :mod (c26-19 / oh)
                                   :mode imperative)
                      :snt3 (c26-6 / want-01
                                   :ARG0 (c26-4 / country
                                                :mod (c26-7 / that))
                                   :ARG1 (c26-18 / they)
                                   :polarity -)
                      :snt4 (c26-15 / wonder-01
                                    :ARG0 c26-16)
                      :ARG1 (c26-13 / thing
                                    :ARG0-of (c26-0 / cause-01
                                                    :ARG1 c26-6))))

# ::snt Based on their clothing, iPhones &amp; ed they're obviously not beggars &amp; paid $1,200/person to cross.
# ::tokens ["Based", "on", "their", "clothing", ",", "iPhones", "&", "amp", ";", "ed", "they", "'re", "obviously", "not", "beggars", "&", "amp", ";", "paid", "$", "1,200", "/", "person", "to", "cross", "."]
# ::lemmas ["base", "on", "their", "clothing", ",", "iPhones", "&", "amp", ";", "ed", "they", "be", "obviously", "not", "beggar", "&", "amp", ";", "pay", "$", "1,200", "/", "person", "to", "cross", "."]
(c27-0 / and
       :op1 (c27-5 / base-02
                   :ARG1 (c27-13 / and
                                 :op1 (c27-17 / clothe-01
                                              :ARG1 (c27-2 / they))
                                 :op2 (c27-14 / product
                                              :name (c27-15 / name
                                                            :op1 "Apple"))
                                 :op3 (c27-3 / amp)))
       :op2 (c27-16 / obvious-01
                    :ARG1 (c27-11 / and
                                  :op1 (c27-8 / person
                                              :ARG0-of (c27-7 / beg-01)
                                              :domain c27-2)
                                  :op2 (c27-1 / pay-01
                                              :ARG0 c27-2
                                              :ARG1 (c27-4 / rate-entity-91
                                                           :ARG1 (c27-9 / monetary-quantity
                                                                        :unit (c27-6 / dollar)
                                                                        :quant 1000)
                                                           :ARG2 (c27-12 / person)
                                                           :ARG3 (c27-10 / cross-02
                                                                         :ARG0 c27-2)))
                                  :polarity -)))

# ::snt It is probably bec it's not made accordg to Muslim belief &amp; may contain pork or other taboo ingredients.
# ::tokens ["It", "is", "probably", "bec", "it", "'s", "not", "made", "accordg", "to", "Muslim", "belief", "&", "amp", ";", "may", "contain", "pork", "or", "other", "taboo", "ingredients", "."]
# ::lemmas ["it", "be", "probably", "bec", "it", "be", "not", "make", "accordg", "to", "Muslim", "belief", "&", "amp", ";", "may", "contain", "pork", "or", "other", "taboo", "ingredient", "."]
(c28-13 / probable
        :domain (c28-17 / cause-01
                        :ARG0 (c28-0 / and
                                     :op1 (c28-7 / make-01
                                                 :ARG1 (c28-11 / it)
                                                 :manner (c28-12 / accord-02
                                                                 :ARG2 (c28-2 / and
                                                                              :op1 (c28-5 / believe-01
                                                                                          :ARG0 (c28-4 / religious-group
                                                                                                       :name (c28-14 / name
                                                                                                                     :op1 "Muslim")))
                                                                              :op2 (c28-10 / amp)))
                                                 :polarity -)
                                     :op2 (c28-8 / possible-01
                                                 :ARG1 (c28-9 / contain-01
                                                              :ARG0 c28-11
                                                              :ARG1 (c28-15 / or
                                                                            :op1 (c28-1 / pork)
                                                                            :op2 (c28-16 / ingredient
                                                                                         :ARG0-of (c28-3 / taboo-01)
                                                                                         :mod (c28-6 / other))))))))

# ::snt it is an !! They will destroy America! Obama wants America destroyed! Please Allen help spread the word of !
# ::tokens ["it", "is", "an", "!", "!", "They", "will", "destroy", "America", "!", "Obama", "wants", "America", "destroyed", "!", "Please", "Allen", "help", "spread", "the", "word", "of", "!"]
# ::lemmas ["it", "be", "an", "!", "!", "they", "will", "destroy", "America", "!", "Obama", "want", "America", "destroy", "!", "please", "Allen", "help", "spread", "the", "word", "of", "!"]
(c30-4 / multi-sentence
       :snt1 (c30-1 / destroy-01
                    :ARG0 (c30-6 / it)
                    :ARG1 (c30-13 / country
                                  :name (c30-8 / name
                                               :op1 "America"))
                    :mode expressive)
       :snt2 (c30-11 / want-01
                     :ARG0 (c30-9 / person
                                  :name (c30-2 / name
                                               :op1 "Obama"))
                     :ARG1 (c30-0 / destroy-01
                                  :ARG1 c30-13))
       :snt3 (c30-12 / help-01
                     :ARG0 (c30-5 / person
                                  :name (c30-10 / name
                                                :op1 "Allen"))
                     :ARG1 (c30-7 / spread-01
                                  :ARG1 (c30-3 / word-01))
                     :polite +
                     :mode imperative))

# ::snt .They are only helping the Muslims and they are not even refugee.
# ::tokens [".They", "are", "only", "helping", "the", "Muslims", "and", "they", "are", "not", "even", "refugee", "."]
# ::lemmas [".they", "be", "only", "help", "the", "Muslims", "and", "they", "be", "not", "even", "refugee", "."]
(c31-0 / and
       :op1 (c31-8 / help-01
                   :ARG0 (c31-1 / they)
                   :ARG2 (c31-5 / person
                                :mod (c31-2 / religious-group
                                            :name (c31-6 / name
                                                         :op1 "Muslim")))
                   :mod (c31-7 / only))
       :op2 (c31-4 / refugee
                   :domain c31-1
                   :mod (c31-3 / even)
                   :polarity -))

# ::snt give them all bacon
# ::tokens ["give", "them", "all", "bacon"]
# ::lemmas ["give", "they", "all", "bacon"]
(c32-4 / give-01
       :ARG0 (c32-3 / you)
       :ARG1 (c32-2 / bacon)
       :ARG2 (c32-1 / they
                    :mod (c32-0 / all))
       :mode imperative)

# ::snt BEGGERS CAN'T BE CHOOSERS!
# ::tokens ["BEGGERS", "CAN'T", "BE", "CHOOSERS", "!"]
# ::lemmas ["begger", "can't", "be", "chooser", "!"]
(c33-2 / possible-01
       :ARG1 (c33-1 / choose-01
                    :ARG0 (c33-0 / person))
       :polarity -)

# ::snt -It's a muslim invasion-and this is just a taste of their PLAN!
# ::tokens ["-It", "'s", "a", "muslim", "invasion", "-", "and", "this", "is", "just", "a", "taste", "of", "their", "PLAN", "!"]
# ::lemmas ["-it", "be", "a", "muslim", "invasion", "-", "and", "this", "be", "just", "a", "taste", "of", "their", "plan", "!"]
(c34-0 / and
       :op1 (c34-7 / invade-01
                   :ARG0 (c34-8 / person
                                :mod (c34-2 / religious-group
                                            :name (c34-9 / name
                                                         :op1 "Muslim")))
                   :domain (c34-10 / it))
       :op2 (c34-1 / taste
                   :poss (c34-6 / plan-01
                                :ARG0 (c34-4 / they))
                   :domain (c34-5 / this)
                   :mod (c34-3 / just)))

# ::snt Why have they let be slaughtered?if they are so anxious to help..why have they waited so long?
# ::tokens ["Why", "have", "they", "let", "be", "slaughtered?if", "they", "are", "so", "anxious", "to", "help", "..", "why", "have", "they", "waited", "so", "long", "?"]
# ::lemmas ["why", "have", "they", "let", "be", "slaughtered?if", "they", "be", "so", "anxious", "to", "help", "..", "why", "have", "they", "wait", "so", "long", "?"]
(c35-6 / multi-sentence
       :snt1 (c35-11 / let-01
                     :ARG1 (c35-9 / slaughter-01
                                  :ARG1 (c35-2 / they))
                     :ARG1-of (c35-13 / cause-01
                                      :ARG0 (c35-0 / amr-unknown)))
       :snt2 (c35-10 / wait-01
                     :ARG1 (c35-5 / they)
                     :ARG1-of (c35-3 / long-03
                                     :degree (c35-1 / so))
                     :ARG1-of (c35-7 / cause-01
                                     :ARG0 (c35-8 / amr-unknown))
                     :condition (c35-4 / anxious
                                       :domain c35-5
                                       :degree c35-1)
                     :purpose (c35-12 / help-01
                                      :ARG0 c35-5)))

# ::snt -here comes TROUBLE.
# ::tokens ["-here", "comes", "TROUBLE", "."]
# ::lemmas ["-here", "come", "TROUBLE", "."]
(c36-2 / come-04
       :ARG1 (c36-0 / tough-03)
       :ARG2 (c36-1 / here))

# ::snt Germany cancels party, closes border
# ::tokens ["Germany", "cancels", "party", ",", "closes", "border"]
# ::lemmas ["Germany", "cancel", "party", ",", "close", "border"]
(c37-0 / and
       :op1 (c37-6 / cancel-01
                   :ARG0 (c37-3 / country
                                :name (c37-5 / name
                                             :op1 "Germany"))
                   :ARG1 (c37-4 / party))
       :op2 (c37-1 / close-01
                   :ARG0 c37-3
                   :ARG1 (c37-2 / border)))

# ::snt Let them go hungry.. I'm sick of this garbage.
# ::tokens ["Let", "them", "go", "hungry", "..", "I", "'m", "sick", "of", "this", "garbage", "."]
# ::lemmas ["let", "they", "go", "hungry", "..", "i", "be", "sick", "of", "this", "garbage", "."]
(c38-2 / multi-sentence
       :snt1 (c38-6 / let-01
                    :ARG1 (c38-7 / hunger-01
                                 :ARG0 (c38-0 / they)))
       :snt2 (c38-5 / sick-04
                    :ARG0 (c38-3 / garbage
                                 :mod (c38-1 / this))
                    :ARG1 (c38-4 / i)))

# ::snt . They wAnt blessed food? Why, are they holy?Their deeds are all evil for their god is the devil
# ::tokens [".", "They", "wAnt", "blessed", "food", "?", "Why", ",", "are", "they", "holy?Their", "deeds", "are", "all", "evil", "for", "their", "god", "is", "the", "devil"]
# ::lemmas [".", "they", "wAnt", "bless", "food", "?", "why", ",", "be", "they", "holy?their", "deed", "be", "all", "evil", "for", "their", "god", "be", "the", "devil"]
(c39-8 / multi-sentence
       :snt1 (c39-3 / eat-01
                    :ARG0 (c39-1 / they)
                    :ARG1 (c39-14 / food
                                  :ARG1-of (c39-4 / bless-01))
                    :polarity -)
       :snt2 (c39-16 / cause-01
                     :ARG0 (c39-0 / amr-unknown)
                     :ARG1 (c39-15 / holy
                                   :domain (c39-5 / they)))
       :snt3 (c39-10 / cause-01
                     :ARG0 (c39-13 / evil
                                   :domain (c39-6 / deed
                                                  :poss c39-5)
                                   :ARG1-of (c39-7 / cause-01
                                                   :ARG0 (c39-2 / devil
                                                                :domain (c39-12 / person
                                                                                :ARG0-of (c39-11 / have-rel-role-91
                                                                                                 :ARG1 c39-5
                                                                                                 :ARG2 (c39-9 / god))))))))

# ::snt Looks like the RED "CHRISTIAN CROSS" is UPSETTING THE MUSLIMS...Guess They would rather, STARVE than Take Christian, Charity.
# ::tokens ["Looks", "like", "the", "RED", "\"", "CHRISTIAN", "CROSS", "\"", "is", "UPSETTING", "THE", "MUSLIMS", "...", "Guess", "They", "would", "rather", ",", "STARVE", "than", "Take", "Christian", ",", "Charity", "."]
# ::lemmas ["look", "like", "the", "RED", "\"", "CHRISTIAN", "CROSS", "\"", "be", "upset", "the", "muslim", "...", "guess", "they", "would", "rather", ",", "starve", "than", "take", "Christian", ",", "Charity", "."]
(c40-5 / multi-sentence
       :snt1 (c40-15 / look-02
                     :ARG1 (c40-10 / UPSET-01
                                   :ARG0 (c40-16 / coward
                                                 :ARG1-of (c40-2 / red-02)
                                                 :mod (c40-9 / religious-group
                                                             :name (c40-12 / name
                                                                           :op1 "Christian")))
                                   :ARG1 (c40-13 / person
                                                 :name (c40-3 / name
                                                              :op1 "Muslim"))))
       :snt2 (c40-6 / guess-01
                    :ARG1 (c40-7 / prefer-01
                                 :ARG0 (c40-1 / they)
                                 :ARG1 (c40-11 / star-01
                                               :ARG0 c40-1)
                                 :ARG2 (c40-4 / take-01
                                              :ARG0 c40-1
                                              :ARG1 (c40-8 / charity
                                                           :mod (c40-0 / religious-group
                                                                       :name (c40-14 / name
                                                                                     :op1 "Christian")))))))

# ::snt Only good people...all fine. And we are buying guns like gas. We have our own idiot leaders
# ::tokens ["Only", "good", "people", "...", "all", "fine", ".", "And", "we", "are", "buying", "guns", "like", "gas", ".", "We", "have", "our", "own", "idiot", "leaders"]
# ::lemmas ["only", "good", "people", "...", "all", "fine", ".", "and", "we", "be", "buy", "gun", "like", "gas", ".", "we", "have", "our", "own", "idiot", "leader"]
(c41-5 / multi-sentence
       :snt1 (c41-14 / fine-04
                     :ARG1 (c41-9 / person
                                  :ARG1-of (c41-4 / good-02)
                                  :mod (c41-10 / only)))
       :snt2 (c41-0 / and
                    :op2 (c41-2 / buy-01
                                :ARG0 (c41-12 / we)
                                :ARG1 (c41-6 / gun
                                             :ARG1-of (c41-1 / resemble-01
                                                             :ARG2 (c41-11 / gas)))))
       :snt3 (c41-15 / have-03
                     :ARG0 (c41-3 / we)
                     :ARG1 (c41-7 / person
                                  :ARG0-of (c41-13 / lead-02)
                                  :mod (c41-8 / idiot)
                                  :poss c41-3)))

# ::snt ..or something even worse.
# ::tokens ["..", "or", "something", "even", "worse", "."]
# ::lemmas ["..", "or", "something", "even", "bad", "."]
(c42-4 / or
       :op2 (c42-3 / something
                   :ARG1-of (c42-5 / have-degree-91
                                   :ARG2 (c42-1 / bad-07)
                                   :ARG3 (c42-2 / more
                                                :mod (c42-0 / even)))))

# ::snt A must watch piece.
# ::tokens ["A", "must", "watch", "piece", "."]
# ::lemmas ["a", "must", "watch", "piece", "."]
(c43-2 / piece
       :ARG1-of (c43-1 / watch-01
                       :ARG1-of (c43-0 / obligate-01)))

# ::snt They make their children go hungry too all because of the cult they belong to. No feelings!
# ::tokens ["They", "make", "their", "children", "go", "hungry", "too", "all", "because", "of", "the", "cult", "they", "belong", "to", ".", "No", "feelings", "!"]
# ::lemmas ["they", "make", "their", "child", "go", "hungry", "too", "all", "because", "of", "the", "cult", "they", "belong", "to", ".", "no", "feeling", "!"]
(c44-5 / multi-sentence
       :snt1 (c44-1 / make-02
                    :ARG0 (c44-0 / they)
                    :ARG1 (c44-10 / hunger-01
                                  :ARG0 (c44-8 / person
                                               :ARG0-of (c44-7 / have-rel-role-91
                                                               :ARG1 c44-0
                                                               :ARG2 (c44-11 / child)))
                                  :ARG1-of (c44-6 / cause-01
                                                  :ARG0 (c44-2 / cult
                                                               :ARG1-of (c44-3 / belong-01
                                                                               :ARG0 c44-0)))
                                  :mod (c44-4 / too)))
       :snt2 (c44-9 / feel-01
                    :polarity -
                    :mode expressive))

# ::snt Asume not that DESPERATE after all. Let them go hungry then.
# ::tokens ["Asume", "not", "that", "DESPERATE", "after", "all", ".", "Let", "them", "go", "hungry", "then", "."]
# ::lemmas ["Asume", "not", "that", "DESPERATE", "after", "all", ".", "let", "they", "go", "hungry", "then", "."]
(c45-4 / multi-sentence
       :snt1 (c45-8 / deserve-01
                    :degree (c45-1 / that)
                    :mod (c45-0 / after-all)
                    :ARG1-of (c45-5 / ume-01)
                    :polarity -)
       :snt2 (c45-6 / let-01
                    :ARG1 (c45-7 / hunger-01
                                 :ARG0 (c45-2 / they))
                    :mod (c45-3 / then)))

# ::snt /2 population of Syria has escaped, therefore, the only one's left are ISIS, why don't we just go get them
# ::tokens ["/2", "population", "of", "Syria", "has", "escaped", ",", "therefore", ",", "the", "only", "one", "'s", "left", "are", "ISIS", ",", "why", "do", "n't", "we", "just", "go", "get", "them"]
# ::lemmas ["/2", "population", "of", "Syria", "have", "escape", ",", "therefore", ",", "the", "only", "one", "'s", "leave", "be", "ISIS", ",", "why", "do", "not", "we", "just", "go", "get", "they"]
(c46-16 / cause-01
        :ARG0 (c46-4 / escape-01
                     :ARG0 (c46-12 / population
                                   :poss (c46-10 / country
                                                 :name (c46-11 / name
                                                               :op1 "Syria"))
                                   :quant 2)
                     :ARG0-of (c46-5 / cause-01
                                     :ARG1 (c46-15 / leave-17
                                                   :ARG1 (c46-2 / terrorist
                                                                :name (c46-6 / name
                                                                             :op1 "Islamic"
                                                                             :op2 "organization")
                                                                :mod (c46-13 / only)))))
        :ARG1 (c46-3 / cause-01
                     :ARG0 (c46-0 / amr-unknown
                                  :ARG0-of (c46-1 / cause-01
                                                  :ARG1 (c46-8 / go-05
                                                               :ARG0 (c46-14 / we)
                                                               :ARG1 (c46-9 / get-01
                                                                            :ARG0 c46-14
                                                                            :ARG1 c46-2)
                                                               :mod (c46-7 / just)
                                                               :polarity -)))
                     :ARG1 c46-15))

# ::snt At least americans dont make demands in other countries. Thank god theyre always so nice everywhere they go.
# ::tokens ["At", "least", "americans", "do", "nt", "make", "demands", "in", "other", "countries", ".", "Thank", "god", "they", "re", "always", "so", "nice", "everywhere", "they", "go", "."]
# ::lemmas ["At", "least", "americans", "do", "not", "make", "demand", "in", "other", "country", ".", "thank", "god", "they", "re", "always", "so", "nice", "everywhere", "they", "go", "."]
(c47-6 / multi-sentence
       :snt1 (c47-3 / demand-01
                    :ARG0 (c47-12 / person
                                  :mod (c47-17 / country
                                               :name (c47-13 / name
                                                             :op1 "America")))
                    :location (c47-8 / country
                                     :mod (c47-14 / other))
                    :mod (c47-0 / at-least)
                    :polarity -)
       :snt2 (c47-1 / thank-01
                    :ARG0 (c47-10 / i)
                    :ARG1 (c47-7 / person
                                 :name (c47-4 / name
                                              :op1 "God"))
                    :ARG2 (c47-15 / nice-01
                                  :ARG1 (c47-5 / they)
                                  :time (c47-11 / always)
                                  :degree (c47-16 / so)
                                  :location (c47-2 / everywhere
                                                   :ARG4-of (c47-9 / go-02
                                                                   :ARG0 c47-5)))))

# ::snt They're causing trouble &amp; trying to change their host countries before they even arrive! Stupid EU
# ::tokens ["They", "'re", "causing", "trouble", "&", "amp", ";", "trying", "to", "change", "their", "host", "countries", "before", "they", "even", "arrive", "!", "Stupid", "EU"]
# ::lemmas ["they", "be", "cause", "trouble", "&", "amp", ";", "try", "to", "change", "their", "host", "country", "before", "they", "even", "arrive", "!", "Stupid", "EU"]
(c48-7 / multi-sentence
       :snt1 (c48-0 / and
                    :op1 (c48-3 / make-trouble-06
                                :ARG0 (c48-1 / they))
                    :op2 (c48-4 / try-01
                                :ARG0 c48-1
                                :ARG1 (c48-14 / change-01
                                              :ARG0 c48-1
                                              :ARG1 (c48-8 / country
                                                           :ARG0-of (c48-13 / host-01
                                                                            :ARG1 (c48-5 / they)))
                                              :time (c48-6 / before
                                                           :op1 (c48-9 / arrive-01
                                                                       :ARG1 c48-5
                                                                       :mod (c48-2 / even))))))
       :snt2 (c48-12 / organization
                     :name (c48-11 / name
                                   :op1 "EU")
                     :ARG1-of (c48-10 / stupid-02)))

# ::snt So they have halal Lunchables?
# ::tokens ["So", "they", "have", "halal", "Lunchables", "?"]
# ::lemmas ["so", "they", "have", "halal", "Lunchables", "?"]
(c49-4 / have-03
       :polarity (c49-0 / amr-unknown)
       :ARG0 (c49-1 / they)
       :ARG1 (c49-3 / lunchable
                    :mod (c49-2 / halal)))

# ::snt I guess they prefer their children to be hungry then.
# ::tokens ["I", "guess", "they", "prefer", "their", "children", "to", "be", "hungry", "then", "."]
# ::lemmas ["i", "guess", "they", "prefer", "their", "child", "to", "be", "hungry", "then", "."]
(c50-2 / guess-01
       :ARG0 (c50-5 / i)
       :ARG1 (c50-6 / prefer-01
                    :ARG0 (c50-0 / they)
                    :ARG1 (c50-7 / hunger-01
                                 :ARG0 (c50-3 / person
                                              :ARG0-of (c50-4 / have-rel-role-91
                                                              :ARG1 c50-0
                                                              :ARG2 (c50-8 / child))))
                    :mod (c50-1 / then)))
