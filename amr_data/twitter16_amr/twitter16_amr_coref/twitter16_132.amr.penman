# ::snt meanwhile Groper Biden says it will take yrs before they get here.
# ::tokens ["meanwhile", "Groper", "Biden", "says", "it", "will", "take", "yrs", "before", "they", "get", "here", "."]
# ::lemmas ["meanwhile", "Groper", "Biden", "say", "it", "will", "take", "yr", "before", "they", "get", "here", "."]
(c1-6 / say-01
      :ARG0 (c1-7 / person
                  :name (c1-8 / name
                              :op1 "Groper"
                              :op2 "Biden"))
      :ARG1 (c1-0 / take-10
                  :ARG0 (c1-4 / get-05
                              :ARG1 (c1-1 / they)
                              :ARG2 (c1-9 / here))
                  :ARG1 (c1-2 / temporal-quantity
                              :unit (c1-3 / year)
                              :quant 1))
      :time (c1-5 / meanwhile))

# ::snt its funny ...but.....they don't look like a PROBLEM at ALL ....while they are sleeping/ i sure HOPE SO!
# ::tokens ["its", "funny", "...", "but", ".....", "they", "do", "n't", "look", "like", "a", "PROBLEM", "at", "ALL", "....", "while", "they", "are", "sleeping/", "i", "sure", "HOPE", "SO", "!"]
# ::lemmas ["its", "funny", "...", "but", ".....", "they", "do", "not", "look", "like", "a", "PROBLEM", "at", "all", "....", "while", "they", "be", "sleeping/", "i", "sure", "HOPE", "so", "!"]
(c2-12 / contrast-01
       :ARG1 (c2-10 / funny
                    :domain (c2-6 / it))
       :ARG2 (c2-9 / look-02
                   :ARG0 (c2-2 / they)
                   :ARG1 (c2-8 / prostitute-01)
                   :degree (c2-0 / at-all)
                   :time (c2-7 / sleep-01
                               :ARG0 c2-2)
                   :ARG0-of (c2-5 / cause-01
                                  :ARG1 (c2-11 / hope-01
                                               :ARG0 (c2-4 / i)
                                               :ARG1 (c2-3 / resemble-01
                                                           :ARG1-of (c2-1 / sure-02
                                                                          :ARG0 c2-4))))
                   :polarity -))

# ::snt If we can trust our Media not hide/twist the truth under intimidation of WH controlled Media Matters
# ::tokens ["If", "we", "can", "trust", "our", "Media", "not", "hide", "/", "twist", "the", "truth", "under", "intimidation", "of", "WH", "controlled", "Media", "Matters"]
# ::lemmas ["if", "we", "can", "trust", "our", "medium", "not", "hide", "/", "twist", "the", "truth", "under", "intimidation", "of", "WH", "control", "Media", "Matters"]
(c3-13 / have-condition-91
       :ARG2 (c3-10 / possible-01
                    :ARG1 (c3-0 / trust-02
                                :ARG0 (c3-12 / we)
                                :ARG1 (c3-4 / media
                                            :poss c3-12)
                                :ARG2 (c3-9 / slash
                                            :op1 (c3-7 / hide-01
                                                       :ARG0 c3-4
                                                       :ARG1 (c3-1 / truth)
                                                       :polarity -)
                                            :op2 (c3-2 / twist-01
                                                       :ARG0 c3-4
                                                       :ARG1 c3-1
                                                       :polarity -)
                                            :condition (c3-8 / intimidate-01
                                                             :ARG0 (c3-5 / publication
                                                                         :name (c3-11 / name
                                                                                      :op1 "Media"
                                                                                      :op2 "Matters")
                                                                         :ARG1-of (c3-14 / control-01
                                                                                         :ARG0 (c3-6 / government-organization
                                                                                                     :name (c3-3 / name
                                                                                                                 :op1 "White"
                                                                                                                 :op2 "House"))))
                                                             :ARG1 c3-4)))))

# ::snt wow. You're actually searching for black children on Google? Creepy. Kirk out.
# ::tokens ["wow", ".", "You", "'re", "actually", "searching", "for", "black", "children", "on", "Google", "?", "Creepy", ".", "Kirk", "out", "."]
# ::lemmas ["wow", ".", "you", "be", "actually", "search", "for", "black", "child", "on", "Google", "?", "Creepy", ".", "Kirk", "out", "."]
(c4-6 / multi-sentence
      :snt1 (c4-12 / wow
                   :mode expressive)
      :snt2 (c4-8 / search-01
                  :ARG0 (c4-5 / you)
                  :ARG1 (c4-13 / company
                               :name (c4-9 / name
                                           :op1 "Google"))
                  :ARG2 (c4-7 / child
                              :ARG1-of (c4-2 / black-05))
                  :ARG1-of (c4-0 / actual-02)
                  :ARG1-of (c4-1 / request-confirmation-91))
      :snt3 (c4-3 / creepy-04)
      :snt4 (c4-11 / out-06
                   :ARG1 (c4-10 / person
                                :name (c4-4 / name
                                            :op1 "Kirk"))))

# ::snt video game.
# ::tokens ["video", "game", "."]
# ::lemmas ["video", "game", "."]
(c5-1 / game
      :mod (c5-0 / video))

# ::snt read a book.
# ::tokens ["read", "a", "book", "."]
# ::lemmas ["read", "a", "book", "."]
(c6-2 / read-01
      :ARG0 (c6-1 / you)
      :ARG1 (c6-0 / book)
      :mode imperative)

# ::snt so that's really ignorant and unfortunate to use that baby as a racist dig. You're a fake. Bye.
# ::tokens ["so", "that", "'s", "really", "ignorant", "and", "unfortunate", "to", "use", "that", "baby", "as", "a", "racist", "dig", ".", "You", "'re", "a", "fake", ".", "Bye", "."]
# ::lemmas ["so", "that", "be", "really", "ignorant", "and", "unfortunate", "to", "use", "that", "baby", "as", "a", "racist", "dig", ".", "you", "be", "a", "fake", ".", "Bye", "."]
(c7-7 / multi-sentence
      :snt1 (c7-13 / cause-01
                   :ARG1 (c7-0 / and
                               :op1 (c7-10 / ignorant-02
                                           :ARG1 (c7-11 / use-01
                                                        :ARG1 (c7-4 / baby
                                                                    :mod (c7-1 / that))
                                                        :ARG2 (c7-5 / dig-01
                                                                    :mod (c7-2 / racist)))
                                           :degree (c7-9 / really))
                               :op2 (c7-12 / fortunate-01
                                           :ARG2 c7-11
                                           :polarity -)))
      :snt2 (c7-3 / fake-02
                  :ARG1 (c7-6 / you))
      :snt3 (c7-8 / bye))

# ::snt lol. Yea.. I know. Still a video game cover.
# ::tokens ["lol", ".", "Yea", "..", "I", "know", ".", "Still", "a", "video", "game", "cover", "."]
# ::lemmas ["lol", ".", "yea", "..", "i", "know", ".", "still", "a", "video", "game", "cover", "."]
(c8-2 / multi-sentence
      :snt1 (c8-7 / laugh-01
                  :manner (c8-0 / loud)
                  :mode expressive)
      :snt2 (c8-1 / know-01
                  :ARG0 (c8-4 / i))
      :snt3 (c8-8 / cover-03
                  :ARG1 (c8-3 / game
                              :mod (c8-6 / video))
                  :mod (c8-5 / still)))

# ::snt oh here we go again prejudice with food too? And u assume I don't give? Why's that? Make $ pay taxes. Welfare.
# ::tokens ["oh", "here", "we", "go", "again", "prejudice", "with", "food", "too", "?", "And", "u", "assume", "I", "do", "n't", "give", "?", "Why", "'s", "that", "?", "Make", "$", "pay", "taxes", ".", "Welfare", "."]
# ::lemmas ["oh", "here", "we", "go", "again", "prejudice", "with", "food", "too", "?", "and", "u", "assume", "i", "do", "not", "give", "?", "why", "be", "that", "?", "make", "$", "pay", "taxis", ".", "Welfare", "."]
(c9-21 / multi-sentence
       :snt1 (c9-10 / go-02
                    :ARG0 (c9-5 / we)
                    :ARG1 (c9-18 / prejudice-01
                                 :ARG1 c9-5
                                 :ARG2 (c9-6 / food)
                                 :mod (c9-1 / too))
                    :mod (c9-16 / again)
                    :location (c9-13 / here
                                     :mod (c9-22 / oh)))
       :snt2 (c9-15 / and
                    :op2 (c9-2 / assume-02
                               :ARG0 (c9-20 / you)
                               :ARG1 (c9-11 / give-01
                                            :ARG0 (c9-4 / i)
                                            :polarity -))
                    :polarity (c9-12 / amr-unknown))
       :snt3 (c9-14 / cause-01
                    :ARG0 (c9-0 / amr-unknown)
                    :ARG1 (c9-3 / that))
       :snt4 (c9-7 / make-02
                   :ARG0 c9-20
                   :mode imperative)
       :ARG1 (c9-17 / pay-01
                    :ARG0 (c9-19 / dollar)
                    :ARG1 (c9-9 / tax-01))
       :snt5 (c9-8 / welfare))

# ::snt not enjoying yours? Get a job.
# ::tokens ["not", "enjoying", "yours", "?", "Get", "a", "job", "."]
# ::lemmas ["not", "enjoy", "your", "?", "get", "a", "job", "."]
(c10-5 / multi-sentence
       :snt1 (c10-1 / enjoy-01
                    :ARG0 (c10-4 / you)
                    :ARG1 (c10-0 / thing
                                 :poss c10-4)
                    :polarity -)
       :snt2 (c10-6 / get-01
                    :ARG0 (c10-2 / you)
                    :ARG1 (c10-3 / job)))

# ::snt looks like a video game cover.
# ::tokens ["looks", "like", "a", "video", "game", "cover", "."]
# ::lemmas ["look", "like", "a", "video", "game", "cover", "."]
(c11-3 / look-02
       :ARG1 (c11-1 / it)
       :ARG2 (c11-4 / cover-03
                    :ARG1 (c11-0 / game
                                 :mod (c11-2 / video))))

# ::snt no. But I'm not infuriated. Especially right now. Mer Soleil reserve Chardonnay, Alaskan Salmon, &amp; redskins.
# ::tokens ["no", ".", "But", "I", "'m", "not", "infuriated", ".", "Especially", "right", "now", ".", "Mer", "Soleil", "reserve", "Chardonnay", ",", "Alaskan", "Salmon", ",", "&", "amp", ";", "redskins", "."]
# ::lemmas ["no", ".", "but", "i", "be", "not", "infuriate", ".", "especially", "right", "now", ".", "Mer", "Soleil", "reserve", "Chardonnay", ",", "Alaskan", "Salmon", ",", "&", "amp", ";", "redskin", "."]
(c12-17 / multi-sentence
        :snt1 (c12-7 / have-concession-91
                     :ARG1 (c12-1 / infuriate-01
                                  :ARG1 (c12-6 / i)
                                  :polarity -))
        :snt2 (c12-4 / reserve-01
                     :ARG0 (c12-8 / company
                                  :name (c12-2 / name
                                               :op1 "Mer"
                                               :op2 "Soleil"))
                     :ARG1 (c12-9 / and
                                  :op1 (c12-13 / product
                                               :name (c12-5 / name
                                                            :op1 "Chardonnay"))
                                  :op2 (c12-11 / product
                                               :name (c12-14 / name
                                                             :op1 "Alaskan"
                                                             :op2 "Salmon"))
                                  :op3 (c12-15 / product
                                               :name (c12-10 / name
                                                             :op1 "&"
                                                             :op2 "amp"))
                                  :op4 (c12-12 / product
                                               :name (c12-3 / name
                                                            :op1 "Redskins")))
                     :time (c12-18 / now
                                   :mod (c12-0 / right))
                     :mod (c12-16 / especially)))

# ::snt yea. Like you get paid to say racist.
# ::tokens ["yea", ".", "Like", "you", "get", "paid", "to", "say", "racist", "."]
# ::lemmas ["yea", ".", "like", "you", "get", "pay", "to", "say", "racist", "."]
(c13-3 / multi-sentence
       :snt1 (c13-2 / yea)
       :snt2 (c13-0 / resemble-01
                    :ARG2 (c13-6 / pay-01
                                 :ARG2 (c13-1 / you)
                                 :ARG3 (c13-5 / say-01
                                              :ARG0 c13-1
                                              :ARG1 (c13-4 / racist)))))

# ::snt only in your family. Bechamel sauce with tarragon and EGG yolk! Lol
# ::tokens ["only", "in", "your", "family", ".", "Bechamel", "sauce", "with", "tarragon", "and", "EGG", "yolk", "!", "Lol"]
# ::lemmas ["only", "in", "your", "family", ".", "Bechamel", "sauce", "with", "tarragon", "and", "EGG", "yolk", "!", "Lol"]
(c14-7 / multi-sentence
       :snt1 (c14-4 / be-located-at-91
                    :ARG1 (c14-12 / family
                                  :poss (c14-6 / you))
                    :ARG2 (c14-3 / event
                                 :name (c14-8 / name
                                              :op1 "Bechamel"
                                              :op2 " sauce")
                                 :accompanier (c14-0 / and
                                                     :op1 (c14-1 / tarragon)
                                                     :op2 (c14-5 / yolk
                                                                 :mod (c14-9 / egg
                                                                             :mod c14-9
                                                                             :mod c14-9)))))
       :mod (c14-10 / only)
       :snt2 (c14-11 / laugh-01
                     :manner (c14-2 / loud)
                     :mode expressive))

# ::snt give it up. So prejudice.
# ::tokens ["give", "it", "up", ".", "So", "prejudice", "."]
# ::lemmas ["give", "it", "up", ".", "so", "prejudice", "."]
(c15-1 / multi-sentence
       :snt1 (c15-2 / give-up-07
                    :ARG0 (c15-0 / you)
                    :ARG1 (c15-3 / it))
       :snt2 (c15-5 / prejudice-01
                    :degree (c15-4 / so)))

# ::snt salmon and potatoes.
# ::tokens ["salmon", "and", "potatoes", "."]
# ::lemmas ["salmon", "and", "potato", "."]
(c16-0 / and
       :op1 (c16-1 / salad)
       :op2 (c16-2 / potato))

# ::snt she is. Protect her from sharia.
# ::tokens ["she", "is", ".", "Protect", "her", "from", "sharia", "."]
# ::lemmas ["she", "be", ".", "protect", "she", "from", "sharia", "."]
(c17-1 / multi-sentence
       :snt1 (c17-2 / she)
       :snt2 (c17-3 / protect-01
                    :ARG1 (c17-0 / she)
                    :ARG2 (c17-4 / sharia)))

# ::snt no- those are DEMOCRATS. if you knew our history you would have known that.
# ::tokens ["no-", "those", "are", "DEMOCRATS", ".", "if", "you", "knew", "our", "history", "you", "would", "have", "known", "that", "."]
# ::lemmas ["no-", "those", "be", "DEMOCRATS", ".", "if", "you", "know", "our", "history", "you", "would", "have", "know", "that", "."]
(c18-5 / multi-sentence
       :snt1 (c18-10 / no)
       :snt2 (c18-9 / person
                    :ARG0-of (c18-12 / have-org-role-91
                                     :ARG1 (c18-4 / political-party
                                                  :name (c18-1 / name
                                                               :op1 "Democratic"
                                                               :op2 "Party")))
                    :domain (c18-0 / that))
       :snt3 (c18-7 / have-condition-91
                    :ARG1 (c18-2 / know-01
                                 :ARG0 (c18-3 / you)
                                 :ARG1 c18-0)
                    :ARG2 (c18-6 / know-01
                                 :ARG0 c18-3
                                 :ARG1 (c18-8 / history
                                              :poss (c18-11 / we)))))

# ::snt great. I'm glad you're loved. I'll let you know when I know someone who wants to share.
# ::tokens ["great", ".", "I", "'m", "glad", "you", "'re", "loved", ".", "I", "'ll", "let", "you", "know", "when", "I", "know", "someone", "who", "wants", "to", "share", "."]
# ::lemmas ["great", ".", "i", "be", "glad", "you", "be", "love", ".", "i", "'ll", "let", "you", "know", "when", "i", "know", "someone", "who", "want", "to", "share", "."]
(c19-6 / multi-sentence
       :snt1 (c19-7 / great)
       :snt2 (c19-5 / glad-02
                    :ARG0 (c19-11 / love-01
                                  :ARG1 (c19-4 / you))
                    :ARG1 (c19-8 / i))
       :snt3 (c19-1 / let-know-07
                    :ARG0 (c19-12 / i)
                    :ARG1 (c19-2 / you)
                    :time (c19-3 / know-02
                                 :ARG0 c19-12
                                 :ARG1 (c19-9 / someone
                                              :ARG0-of (c19-10 / want-01
                                                               :ARG1 (c19-0 / share-01
                                                                            :ARG0 c19-9))))))

# ::snt time for dinner. Enjoy your white guilt.
# ::tokens ["time", "for", "dinner", ".", "Enjoy", "your", "white", "guilt", "."]
# ::lemmas ["time", "for", "dinner", ".", "enjoy", "your", "white", "guilt", "."]
(c20-3 / multi-sentence
       :snt1 (c20-1 / be-temporally-at-91
                    :ARG2 (c20-6 / dinner))
       :snt2 (c20-0 / enjoy-01
                    :ARG0 (c20-2 / you)
                    :ARG1 (c20-4 / guilt
                                 :ARG1-of (c20-5 / white-02)
                                 :poss c20-2)
                    :mode imperative))

# ::snt lol. I don't use or exploit my loved ones to prove points. You're so prejudice. You don't believe ppl are honest. Sad.
# ::tokens ["lol", ".", "I", "do", "n't", "use", "or", "exploit", "my", "loved", "ones", "to", "prove", "points", ".", "You", "'re", "so", "prejudice", ".", "You", "do", "n't", "believe", "ppl", "are", "honest", ".", "Sad", "."]
# ::lemmas ["lol", ".", "i", "do", "not", "use", "or", "exploit", "my", "loved", "one", "to", "prove", "point", ".", "you", "be", "so", "prejudice", ".", "you", "do", "not", "believe", "ppl", "be", "honest", ".", "sad", "."]
(c21-7 / multi-sentence
       :snt1 (c21-15 / or
                     :op1 (c21-12 / use-01
                                  :ARG0 (c21-11 / i)
                                  :ARG1 (c21-4 / one
                                               :ARG1-of (c21-16 / love-01
                                                                :ARG0 c21-11))
                                  :ARG2 (c21-13 / prove-01
                                                :ARG0 c21-11
                                                :ARG1 (c21-8 / point-04))
                                  :polarity -)
                     :op2 (c21-2 / exploit-01
                                 :ARG0 c21-11
                                 :ARG1 c21-4
                                 :polarity -))
       :snt2 (c21-1 / prejudice-01
                    :ARG1 (c21-6 / you)
                    :degree (c21-14 / so))
       :snt3 (c21-3 / believe-01
                    :ARG0 (c21-5 / you)
                    :ARG1 (c21-17 / honest-01
                                  :ARG0 (c21-10 / person
                                                :ARG0-of (c21-9 / post-01)))
                    :polarity -)
       :snt4 (c21-0 / sad-02))

# ::snt yea ok. I'm the last person that takes demands.
# ::tokens ["yea", "ok", ".", "I", "'m", "the", "last", "person", "that", "takes", "demands", "."]
# ::lemmas ["yea", "ok", ".", "i", "be", "the", "last", "person", "that", "take", "demand", "."]
(c22-2 / multi-sentence
       :snt1 (c22-5 / okay-04
                    :mod (c22-1 / yea))
       :snt2 (c22-4 / person
                    :domain (c22-3 / i)
                    :mod (c22-6 / last)
                    :ARG0-of (c22-0 / take-01
                                    :ARG1 (c22-7 / demand-01))))

# ::snt demanding. Sharia.
# ::tokens ["demanding", ".", "Sharia", "."]
# ::lemmas ["demand", ".", "Sharia", "."]
(c23-0 / anding-01
       :ARG1 (c23-1 / law
                    :name (c23-2 / name
                                 :op1 "Sharia")))

# ::snt lol. Ok.
# ::tokens ["lol", ".", "Ok", "."]
# ::lemmas ["lol", ".", "ok", "."]
(c24-0 / okay-01
       :mod (c24-1 / laugh-01
                   :manner (c24-2 / loud)
                   :mode expressive))

# ::snt love them. Have multiple shades in my family and trans gender and gay. Love them all.
# ::tokens ["love", "them", ".", "Have", "multiple", "shades", "in", "my", "family", "and", "trans", "gender", "and", "gay", ".", "Love", "them", "all", "."]
# ::lemmas ["love", "they", ".", "have", "multiple", "shade", "in", "my", "family", "and", "trans", "gender", "and", "gay", ".", "love", "they", "all", "."]
(c25-18 / multi-sentence
        :snt1 (c25-12 / love-01
                      :ARG0 (c25-3 / i)
                      :ARG1 (c25-1 / they))
        :snt2 (c25-14 / have-03
                      :ARG0 (c25-13 / i)
                      :ARG1 (c25-16 / and
                                    :op1 (c25-11 / shade
                                                 :quant (c25-7 / multiple)
                                                 :location (c25-5 / family
                                                                  :poss c25-13))
                                    :op2 (c25-0 / shade
                                                :mod (c25-9 / gender
                                                            :ARG1-of (c25-2 / trans-03)))
                                    :op3 (c25-4 / shade
                                                :ARG1-of (c25-10 / gay-01))))
        :snt3 (c25-6 / love-01
                     :ARG0 (c25-17 / i)
                     :ARG1 (c25-8 / they
                                  :mod (c25-15 / all))))

# ::snt home run? Another great American idea. Baseball. Your welcome.
# ::tokens ["home", "run", "?", "Another", "great", "American", "idea", ".", "Baseball", ".", "Your", "welcome", "."]
# ::lemmas ["home", "run", "?", "another", "great", "American", "idea", ".", "baseball", ".", "your", "welcome", "."]
(c26-4 / multi-sentence
       :snt1 (c26-1 / run-11
                    :mod (c26-10 / home)
                    :polarity (c26-0 / amr-unknown))
       :snt2 (c26-6 / idea
                    :mod (c26-5 / great)
                    :mod (c26-11 / country
                                 :name (c26-8 / name
                                              :op1 "America"))
                    :mod (c26-7 / another))
       :snt3 (c26-2 / baseball)
       :snt4 (c26-9 / welcome-01
                    :ARG1 (c26-3 / you)))

# ::snt you judge. Makes you prejudice. Period. global citizen.
# ::tokens ["you", "judge", ".", "Makes", "you", "prejudice", ".", "Period", ".", "global", "citizen", "."]
# ::lemmas ["you", "judge", ".", "make", "you", "prejudice", ".", "period", ".", "global", "citizen", "."]
(c27-4 / multi-sentence
       :snt1 (c27-0 / judge-01
                    :ARG0 (c27-3 / you))
       :snt2 (c27-1 / make-02
                    :ARG1 (c27-7 / prejudice-01
                                 :ARG1 (c27-2 / you)))
       :snt3 (c27-5 / period)
       :snt4 (c27-8 / citizen
                    :mod (c27-6 / globe)))

# ::snt prejudice.
# ::tokens ["prejudice", "."]
# ::lemmas ["prejudice", "."]
(c28-0 / judge-01)

# ::snt ok.
# ::tokens ["ok", "."]
# ::lemmas ["ok", "."]
(c29-0 / okay-04)

# ::snt eggs are symbolic of rebirth. Plus they're good for breakfast. Yummy.
# ::tokens ["eggs", "are", "symbolic", "of", "rebirth", ".", "Plus", "they", "'re", "good", "for", "breakfast", ".", "Yummy", "."]
# ::lemmas ["egg", "be", "symbolic", "of", "rebirth", ".", "plus", "they", "be", "good", "for", "breakfast", ".", "Yummy", "."]
(c30-6 / multi-sentence
       :snt1 (c30-8 / symbolize-01
                    :ARG1 (c30-3 / egg)
                    :ARG2 (c30-2 / rebirth))
       :snt2 (c30-0 / and
                    :op2 (c30-7 / good-02
                                :ARG1 (c30-1 / they)
                                :ARG2 (c30-4 / breakfast)))
       :snt3 (c30-5 / yummy))

# ::snt INVENTED.
# ::tokens ["INVENTED", "."]
# ::lemmas ["INVENTED", "."]
(c31-1 / thing
       :ARG1-of (c31-0 / intend-01))

# ::snt really? Now you're a tweet professor. Lol. Talk about policing.
# ::tokens ["really", "?", "Now", "you", "'re", "a", "tweet", "professor", ".", "Lol", ".", "Talk", "about", "policing", "."]
# ::lemmas ["really", "?", "now", "you", "be", "a", "tweet", "professor", ".", "Lol", ".", "talk", "about", "police", "."]
(c32-6 / multi-sentence
       :snt1 (c32-3 / real-04
                    :polarity (c32-0 / amr-unknown))
       :snt2 (c32-9 / professor
                    :domain (c32-5 / you)
                    :time (c32-10 / now)
                    :mod (c32-1 / tweet-01))
       :snt3 (c32-11 / laugh-01
                     :ARG0 (c32-8 / i)
                     :manner (c32-2 / loud)
                     :mode expressive)
       :snt4 (c32-4 / talk-01
                    :ARG1 (c32-7 / police-01)))

# ::snt no you horses ass. You're so prejudice! I'm American. You can't not be related to or love any of which you mentioned.
# ::tokens ["no", "you", "horses", "ass", ".", "You", "'re", "so", "prejudice", "!", "I", "'m", "American", ".", "You", "ca", "n't", "not", "be", "related", "to", "or", "love", "any", "of", "which", "you", "mentioned", "."]
# ::lemmas ["no", "you", "horse", "ass", ".", "you", "be", "so", "prejudice", "!", "i", "be", "American", ".", "you", "can", "not", "not", "be", "relate", "to", "or", "love", "any", "of", "which", "you", "mention", "."]
(c33-17 / multi-sentence
        :snt1 (c33-7 / say-01
                     :ARG0 (c33-2 / i)
                     :ARG1 (c33-3 / no)
                     :ARG2 (c33-11 / horse
                                   :mod (c33-12 / ass)))
        :snt2 (c33-15 / prejudice-01
                      :ARG1 (c33-16 / you)
                      :degree (c33-0 / so))
        :snt3 (c33-9 / i
                     :mod (c33-13 / country
                                  :name (c33-6 / name
                                               :op1 "United"
                                               :op2 "States")))
        :snt4 (c33-14 / possible-01
                      :ARG1 (c33-18 / or
                                    :op1 (c33-4 / relate-01
                                                :ARG1 (c33-1 / you)
                                                :ARG2 (c33-10 / any
                                                              :ARG1-of (c33-5 / mention-01
                                                                              :ARG0 c33-1))
                                                :polarity -)
                                    :op2 (c33-8 / love-01
                                                :ARG0 c33-1
                                                :ARG1 c33-10
                                                :polarity -))
                      :polarity -))

# ::snt enjoy your TV-computer-phone cuz it's from a brain dead American.
# ::tokens ["enjoy", "your", "TV", "-", "computer", "-", "phone", "cuz", "it", "'s", "from", "a", "brain", "dead", "American", "."]
# ::lemmas ["enjoy", "your", "tv", "-", "computer", "-", "phone", "cuz", "it", "be", "from", "a", "brain", "dead", "American", "."]
(c34-1 / enjoy-01
       :ARG0 (c34-5 / you)
       :ARG1 (c34-8 / phone
                    :mod (c34-10 / computer)
                    :mod (c34-0 / television)
                    :poss c34-5)
       :ARG1-of (c34-7 / cause-01
                       :ARG0 (c34-2 / brain
                                    :ARG1-of (c34-3 / die-01)
                                    :part-of (c34-6 / person
                                                    :mod (c34-4 / country
                                                                :name (c34-9 / name
                                                                             :op1 "America")))))
       :mode imperative)

# ::snt I'm a lawful, friendly. Don't hurt anyone, and I have no problems with whomever or whatever you are.
# ::tokens ["I", "'m", "a", "lawful", ",", "friendly", ".", "Do", "n't", "hurt", "anyone", ",", "and", "I", "have", "no", "problems", "with", "whomever", "or", "whatever", "you", "are", "."]
# ::lemmas ["i", "be", "a", "lawful", ",", "friendly", ".", "do", "not", "hurt", "anyone", ",", "and", "i", "have", "no", "problem", "with", "whomever", "or", "whatever", "you", "be", "."]
(c35-5 / multi-sentence
       :snt1 (c35-0 / and
                    :op1 (c35-13 / lawful
                                 :domain (c35-9 / i))
                    :op2 (c35-14 / friendly-01
                                 :ARG1 c35-9))
       :snt2 (c35-16 / and
                     :op1 (c35-15 / hurt-01
                                  :ARG0 (c35-4 / you)
                                  :ARG1 (c35-1 / anyone)
                                  :polarity -
                                  :mode imperative)
                     :op2 (c35-8 / have-03
                                 :ARG0 (c35-2 / i)
                                 :ARG1 (c35-10 / problem
                                               :topic (c35-11 / or
                                                              :op1 (c35-6 / person
                                                                          :mod (c35-7 / any))
                                                              :op2 (c35-12 / whatever
                                                                           :domain (c35-3 / you))))
                                 :polarity -)))

# ::snt didn't accuse. I asked.
# ::tokens ["did", "n't", "accuse", ".", "I", "asked", "."]
# ::lemmas ["do", "not", "accuse", ".", "i", "ask", "."]
(c36-1 / multi-sentence
       :snt1 (c36-0 / accuse-01
                    :ARG0 (c36-2 / i)
                    :polarity -)
       :snt2 (c36-4 / ask-01
                    :ARG0 (c36-3 / i)))

# ::snt yea. I know. But you're still racist against whites. You assume too much, cuz you think you're better.
# ::tokens ["yea", ".", "I", "know", ".", "But", "you", "'re", "still", "racist", "against", "whites", ".", "You", "assume", "too", "much", ",", "cuz", "you", "think", "you", "'re", "better", "."]
# ::lemmas ["yea", ".", "i", "know", ".", "but", "you", "be", "still", "racist", "against", "white", ".", "you", "assume", "too", "much", ",", "cuz", "you", "think", "you", "be", "well", "."]
(c37-18 / multi-sentence
        :snt1 (c37-7 / know-01
                     :ARG0 (c37-3 / i))
        :snt2 (c37-12 / contrast-01
                      :ARG2 (c37-5 / racist
                                   :domain (c37-17 / you)
                                   :mod (c37-9 / still)
                                   :prep-against (c37-16 / person
                                                         :ARG1-of (c37-4 / white-02))))
        :snt3 (c37-13 / assume-01
                      :ARG0 (c37-1 / you)
                      :ARG1-of (c37-14 / cause-01
                                       :ARG0 (c37-0 / think-01
                                                    :ARG0 c37-1
                                                    :ARG1 (c37-11 / have-degree-91
                                                                  :ARG1 c37-1
                                                                  :ARG2 (c37-8 / good-02
                                                                               :ARG1 c37-1)
                                                                  :ARG3 (c37-6 / more))))
                      :ARG1-of (c37-15 / have-quant-91
                                       :ARG2 (c37-10 / much)
                                       :ARG3 (c37-2 / too))))

# ::snt so you like sharia law for the women in your life? Stone the little girls? Rape the boys. U are prejudice and white racist.
# ::tokens ["so", "you", "like", "sharia", "law", "for", "the", "women", "in", "your", "life", "?", "Stone", "the", "little", "girls", "?", "Rape", "the", "boys", ".", "U", "are", "prejudice", "and", "white", "racist", "."]
# ::lemmas ["so", "you", "like", "sharia", "law", "for", "the", "woman", "in", "your", "life", "?", "stone", "the", "little", "girl", "?", "rape", "the", "boy", ".", "u", "be", "prejudice", "and", "white", "racist", "."]
(c38-8 / multi-sentence
       :snt1 (c38-16 / like-01
                     :ARG0 (c38-7 / you)
                     :ARG1 (c38-2 / law
                                  :name (c38-13 / name
                                                :op1 "Sharia")
                                  :beneficiary (c38-15 / woman
                                                       :location (c38-0 / life
                                                                        :poss c38-7)))
                     :polarity (c38-1 / amr-unknown))
       :snt2 (c38-12 / stone-02
                     :ARG1 (c38-9 / girl
                                  :mod (c38-10 / little)))
       :snt3 (c38-3 / rape-01
                    :ARG1 (c38-5 / boy))
       :snt4 (c38-17 / and
                     :op1 (c38-14 / prejudice-01
                                  :ARG1 (c38-4 / you))
                     :op2 (c38-11 / racist
                                  :ARG1-of (c38-6 / white-02)
                                  :domain c38-4)))

# ::snt yep. Anybody but A dem.
# ::tokens ["yep", ".", "Anybody", "but", "A", "dem", "."]
# ::lemmas ["yep", ".", "anybody", "but", "a", "dem", "."]
(c39-3 / multi-sentence
       :snt1 (c39-2 / yep)
       :snt2 (c39-1 / except-01
                    :ARG1 (c39-4 / dem)
                    :ARG2 (c39-0 / anybody)))

# ::snt prejudice little guy aren't you. Keep your toes. We have enough. I don't like sharia law.. You do?
# ::tokens ["prejudice", "little", "guy", "are", "n't", "you", ".", "Keep", "your", "toes", ".", "We", "have", "enough", ".", "I", "do", "n't", "like", "sharia", "law", "..", "You", "do", "?"]
# ::lemmas ["prejudice", "little", "guy", "be", "not", "you", ".", "keep", "your", "toe", ".", "we", "have", "enough", ".", "i", "do", "not", "like", "sharia", "law", "..", "you", "do", "?"]
(c40-18 / multi-sentence
        :snt1 (c40-10 / guy
                      :ARG0-of (c40-2 / judge-01)
                      :mod (c40-11 / little)
                      :domain (c40-17 / you))
        :snt2 (c40-9 / keep-01
                     :ARG0 (c40-3 / you
                                  :part (c40-0 / toe
                                               :ARG1-of c40-9))
                     :mode imperative)
        :snt3 (c40-12 / have-03
                      :ARG0 (c40-7 / we)
                      :ARG1 (c40-4 / thing
                                   :ARG1-of (c40-14 / have-quant-91
                                                    :ARG3 (c40-16 / enough))))
        :snt4 (c40-15 / dislike-01
                      :ARG0 (c40-5 / i)
                      :ARG1 (c40-8 / law
                                   :name (c40-6 / name
                                                :op1 "Sharia")))
        :snt5 (c40-1 / do-02
                     :ARG0 (c40-19 / you)
                     :polarity (c40-13 / amr-unknown)))

# ::snt Let's pull it. I'm all for it. Keep our money here. But when we don't give (Bono) aid, u complain. BTW our Pres is black.
# ::tokens ["Let", "'s", "pull", "it", ".", "I", "'m", "all", "for", "it", ".", "Keep", "our", "money", "here", ".", "But", "when", "we", "do", "n't", "give", "(", "Bono", ")", "aid", ",", "u", "complain", ".", "BTW", "our", "Pres", "is", "black", "."]
# ::lemmas ["let", "us", "pull", "it", ".", "i", "be", "all", "for", "it", ".", "keep", "our", "money", "here", ".", "but", "when", "we", "do", "not", "give", "(", "Bono", ")", "aid", ",", "u", "complain", ".", "btw", "our", "Pres", "be", "black", "."]
(c41-22 / multi-sentence
        :snt1 (c41-19 / pull-09
                      :ARG0 (c41-3 / we)
                      :ARG1 (c41-2 / it)
                      :mode imperative)
        :snt2 (c41-9 / support-01
                     :ARG0 (c41-12 / i)
                     :ARG1 c41-19
                     :degree (c41-13 / all))
        :snt3 (c41-6 / keep-01
                     :ARG0 (c41-21 / you)
                     :ARG1 (c41-5 / money
                                  :poss (c41-7 / we))
                     :location (c41-10 / here)
                     :mode imperative)
        :snt4 (c41-14 / contrast-01
                      :ARG2 (c41-16 / complain-01
                                    :ARG0 (c41-0 / you)
                                    :time (c41-11 / aid-01
                                                  :ARG0 c41-7
                                                  :mod (c41-1 / bono)
                                                  :polarity -)))
        :snt5 (c41-8 / black-05
                     :ARG1 (c41-15 / person
                                   :ARG0-of (c41-18 / have-org-role-91
                                                    :ARG1 (c41-17 / we)
                                                    :ARG2 (c41-20 / president)))
                     :mod (c41-4 / by-the-way)))

# ::snt oh. You're so PC brainwashed. sucked up into a socialist narrative. We're so bad, but ppl are risking lives to get here.
# ::tokens ["oh", ".", "You", "'re", "so", "PC", "brainwashed", ".", "sucked", "up", "into", "a", "socialist", "narrative", ".", "We", "'re", "so", "bad", ",", "but", "ppl", "are", "risking", "lives", "to", "get", "here", "."]
# ::lemmas ["oh", ".", "you", "be", "so", "pc", "brainwash", ".", "suck", "up", "into", "a", "socialist", "narrative", ".", "we", "be", "so", "bad", ",", "but", "ppl", "be", "risk", "life", "to", "get", "here", "."]
(c42-18 / multi-sentence
        :snt1 (c42-1 / brainwash-01
                     :ARG1 (c42-17 / you)
                     :manner (c42-12 / correct-02
                                     :mod (c42-15 / politics))
                     :degree (c42-10 / so))
        :snt2 (c42-0 / suck-up-04
                     :ARG1 (c42-3 / narrate-01
                                  :ARG0 (c42-13 / political-movement
                                                :name (c42-7 / name
                                                             :op1 "socialism"))))
        :snt3 (c42-14 / contrast-01
                      :ARG1 (c42-8 / bad-07
                                   :ARG1 (c42-4 / we)
                                   :degree (c42-2 / so))
                      :ARG2 (c42-5 / risk-01
                                   :ARG0 (c42-16 / person
                                                 :quant (c42-6 / multiple
                                                               :op1 1))
                                   :ARG2 (c42-9 / get-05
                                                :ARG1 c42-16
                                                :ARG2 (c42-11 / here))))
        :snt1 (c42-19 / oh
                      :mode expressive))

# ::snt America ALWAYS picks up the pieces. America gives the most aid. Americans are conscionable. -Heroes live here.
# ::tokens ["America", "ALWAYS", "picks", "up", "the", "pieces", ".", "America", "gives", "the", "most", "aid", ".", "Americans", "are", "conscionable", ".", "-Heroes", "live", "here", "."]
# ::lemmas ["America", "always", "pick", "up", "the", "piece", ".", "America", "give", "the", "most", "aid", ".", "Americans", "be", "conscionable", ".", "-heroe", "live", "here", "."]
(c43-5 / multi-sentence
       :snt1 (c43-11 / pick-up-04
                     :ARG0 (c43-15 / country
                                   :name (c43-12 / name
                                                 :op1 "America"))
                     :ARG1 (c43-4 / piece)
                     :time (c43-0 / always))
       :snt2 (c43-9 / aid-01
                    :ARG0 (c43-6 / country
                                 :name c43-12
                                 :op1 "America"))
       :ARG1-of (c43-14 / have-quant-91
                        :ARG3 (c43-2 / most))
       :snt3 (c43-1 / possible-01
                    :ARG1 (c43-3 / conceive-01
                                 :ARG1 (c43-7 / person
                                              :mod c43-6)))
       :snt4 (c43-13 / live-01
                     :ARG0 (c43-10 / she)
                     :location (c43-8 / here)))

# ::snt tis why our borders are flooded. We give.
# ::tokens ["tis", "why", "our", "borders", "are", "flooded", ".", "We", "give", "."]
# ::lemmas ["tis", "why", "our", "border", "be", "flood", ".", "we", "give", "."]
(c44-3 / multi-sentence
       :snt1 (c44-7 / cause-01
                    :ARG0 (c44-0 / this)
                    :ARG1 (c44-6 / flood-01
                                 :ARG1 (c44-1 / border
                                              :poss (c44-5 / we))))
       :snt2 (c44-4 / give-01
                    :ARG0 (c44-2 / we)))

# ::snt no one starves here. Welfare.
# ::tokens ["no", "one", "starves", "here", ".", "Welfare", "."]
# ::lemmas ["no", "one", "starve", "here", ".", "Welfare", "."]
(c45-0 / multi-sentence
       :snt1 (c45-1 / starve-00
                    :ARG1 (c45-2 / no-one)
                    :location (c45-4 / here))
       :snt2 (c45-3 / welfare))

# ::snt did I say I agreed with it? Where did I say that. Have a beer. Think before you shoot up the room.
# ::tokens ["did", "I", "say", "I", "agreed", "with", "it", "?", "Where", "did", "I", "say", "that", ".", "Have", "a", "beer", ".", "Think", "before", "you", "shoot", "up", "the", "room", "."]
# ::lemmas ["do", "i", "say", "i", "agree", "with", "it", "?", "where", "do", "i", "say", "that", ".", "have", "a", "beer", ".", "think", "before", "you", "shoot", "up", "the", "room", "."]
(c46-18 / multi-sentence
        :snt1 (c46-11 / say-01
                      :polarity (c46-15 / amr-unknown)
                      :ARG0 (c46-6 / i)
                      :ARG1 (c46-14 / agree-01
                                    :ARG0 c46-6
                                    :ARG1 (c46-13 / it))
                      :polarity (c46-1 / amr-unknown))
        :snt2 (c46-0 / say-01
                     :ARG0 (c46-16 / i)
                     :ARG1 (c46-2 / that)
                     :location (c46-10 / amr-unknown))
        :snt3 (c46-12 / have-06
                      :ARG0 (c46-17 / you)
                      :ARG1 (c46-4 / beer)
                      :mode imperative)
        :snt4 (c46-5 / think-01
                     :ARG0 (c46-3 / you)
                     :time (c46-9 / before
                                  :op1 (c46-7 / shoot-up-08
                                              :ARG0 c46-3
                                              :ARG1 (c46-8 / room)))
                     :mode imperative))

# ::snt sounds like you think you're a global referee.
# ::tokens ["sounds", "like", "you", "think", "you", "'re", "a", "global", "referee", "."]
# ::lemmas ["sound", "like", "you", "think", "you", "be", "a", "global", "referee", "."]
(c47-4 / sound-01
       :ARG1 (c47-0 / think-01
                    :ARG0 (c47-2 / you)
                    :ARG1 (c47-5 / person
                                 :ARG0-of (c47-1 / referee-01)
                                 :mod (c47-3 / globe)
                                 :domain c47-2)))

# ::snt not starving just hungry. Yea. I think we should keep our money here. Build ourselves instead other countries.
# ::tokens ["not", "starving", "just", "hungry", ".", "Yea", ".", "I", "think", "we", "should", "keep", "our", "money", "here", ".", "Build", "ourselves", "instead", "other", "countries", "."]
# ::lemmas ["not", "starve", "just", "hungry", ".", "yea", ".", "i", "think", "we", "should", "keep", "our", "money", "here", ".", "build", "ourselves", "instead", "other", "country", "."]
(c48-7 / multi-sentence
       :snt1 (c48-11 / starve-01
                     :ARG1 (c48-12 / person
                                   :ARG0-of (c48-15 / hunger-01)
                                   :mod (c48-2 / just))
                     :polarity -)
       :snt2 (c48-6 / yea
                    :mode expressive)
       :snt3 (c48-0 / think-01
                    :ARG0 (c48-10 / i)
                    :ARG1 (c48-1 / recommend-01
                                 :ARG1 (c48-4 / keep-01
                                              :ARG0 (c48-14 / we)
                                              :ARG1 (c48-3 / money
                                                           :poss c48-14)
                                              :location (c48-9 / here))))
       :snt4 (c48-5 / build-01
                    :ARG0 c48-14
                    :ARG1 c48-14
                    :ARG1-of (c48-8 / instead-of-91
                                    :ARG2 (c48-16 / country
                                                  :mod (c48-13 / other)))))

# ::snt creative.
# ::tokens ["creative", "."]
# ::lemmas ["creative", "."]
(c49-0 / creative)

# ::snt I have always been an advocate for feeding hungry American children. Just trying to open some eyes to where taxes r going.
# ::tokens ["I", "have", "always", "been", "an", "advocate", "for", "feeding", "hungry", "American", "children", ".", "Just", "trying", "to", "open", "some", "eyes", "to", "where", "taxes", "r", "going", "."]
# ::lemmas ["i", "have", "always", "be", "an", "advocate", "for", "feed", "hungry", "American", "child", ".", "just", "try", "to", "open", "some", "eye", "to", "where", "taxis", "r", "go", "."]
(c50-5 / multi-sentence
       :snt1 (c50-0 / advocate-01
                    :ARG0 (c50-8 / i)
                    :ARG1 (c50-14 / feed-01
                                  :ARG2 (c50-16 / child
                                                :mod (c50-7 / country
                                                            :name (c50-10 / name
                                                                          :op1 "America"))
                                                :ARG0-of (c50-15 / hunger-01)))
                    :time (c50-9 / always))
       :snt2 (c50-1 / try-01
                    :ARG1 (c50-12 / open-01
                                  :ARG1 (c50-2 / eye
                                               :quant (c50-11 / some))
                                  :ARG2 (c50-13 / location
                                                :location-of (c50-6 / go-01
                                                                    :ARG1 (c50-4 / tax-01))))
                    :mod (c50-3 / just)))
